<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sof130rkrv_inServiceImpl">

	<select id="s_sof130rkrv_inServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* S_sof130rkrv_in.CS_sof130rkrv_in[fnsof100Tnq] Query01 */

    SELECT X.ITEM_CODE
    		, ISNULL(Y.LABEL_NAME, ISNULL(M1.ITEM_NAME2, M1.ITEM_NAME)) AS ITEM_NAME
    		, X.LOT_NO
    		, X.ORDER_Q
    		, M1.SALE_UNIT AS ORDER_UNIT
        , LTRIM(STR(ISNULL(X.TRANS_RATE, M1.TRNS_RATE))) AS BOX_TYPE				--박스유형
    		, LTRIM(STR(X.WKORD_Q / M1.TRNS_RATE)) PRINT_Q
    		, M2.KEEP_TEMPER
    		, M2.PACK_TYPE
    		, LTRIM(STR(M2.PACK_QTY)) AS PACK_QTY
    		, LTRIM(STR(M1.ITEM_WIDTH)) AS ITEM_SIZE
    		, X.MAKE_DATE
    		, X.EXPIR_DATE
    		, Y.HOSPITAL_ITEM AS H_ITEM_NAME
    		, Y.USE_TARGET AS USE_TARGET
    		, Y.REPORT_NO AS REGIST_NO
    		, CASE WHEN ISNULL(Y.LABEL_TYPE,'') = '' THEN 'B' ELSE Y.LABEL_TYPE END AS LABEL_TYPE
        , OPT
		, M2.PACK_TYPE	--포장형태
		, '' AS ADD_VALUE
		, 1 AS D_CNT
    FROM (
      		SELECT A.COMP_CODE, A.DIV_CODE
      		   , ISNULL(B.ITEM_CODE, (SELECT TOP 1 PROD_ITEM_CODE FROM BPR500T WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND CHILD_ITEM_CODE=A.ITEM_CODE)) AS ITEM_CODE
        		, A.LOT_NO
        		, NULL AS TRANS_RATE
				, SUM(CONVERT(NUMERIC,LTRIM(STR(A.WKORD_Q)))) AS ORDER_Q
				, SUM(A.WKORD_Q) AS WKORD_Q
      			, uniLITE.fnGetUserdateComp(A.COMP_CODE, MAX(A.PRODT_START_DATE)) AS MAKE_DATE
      			, uniLITE.fnGetUserdateComp(A.COMP_CODE, MAX(ISNULL(A.EXPIRATION_DATE,
      															CONVERT(VARCHAR(8), DATEADD(DAY, -1, DATEADD(MONTH, CASE WHEN ISNULL(D2.EXPIRATION_DAY,0)=0 THEN 30 ELSE D2.EXPIRATION_DAY END, A.PRODT_START_DATE)), 112)))) AS EXPIR_DATE
				, 'P' AS OPT
      		FROM PMP100T A
      			 LEFT JOIN PPL100T B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WK_PLAN_NUM=B.WK_PLAN_NUM
      			 LEFT  JOIN BPR100T D2 WITH (NOLOCK) ON A.COMP_CODE=D2.COMP_CODE AND A.ITEM_CODE=D2.ITEM_CODE
      		WHERE A.COMP_CODE=#{S_COMP_CODE}
      		AND A.DIV_CODE=#{DIV_CODE}
      		AND A.PRODT_START_DATE &gt;= #{PRODT_START_DATE}
      		AND A.PRODT_END_DATE &lt;= #{PRODT_END_DATE}
      		AND A.LINE_END_YN='Y'
      		AND ISNULL(A.SEMI_ITEM_CODE,'') = ''
      --AND ISNULL(C.ITEM_LEVEL1,'')= '700'
			GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, A.LOT_NO, A.ITEM_CODE
   			UNION

  			SELECT A.COMP_CODE, A.DIV_CODE
  					, B.ITEM_CODE AS ITEM_CODE
  					, C.LOT_NO
  					, B.TRANS_RATE
					, SUM(CONVERT(NUMERIC, LTRIM(STR(B.ORDER_Q)))) AS ORDER_Q
					, SUM(B.ORDER_UNIT_Q) AS WKORD_Q
  					, uniLITE.fnGetUserdateComp(A.COMP_CODE, MIN(D.PRODT_START_DATE)) AS MAKE_DATE
  					, uniLITE.fnGetUserdateComp(A.COMP_CODE, MIN(ISNULL(D.EXPIRATION_DATE,
      																CONVERT(VARCHAR(8), DATEADD(DAY, -1, DATEADD(MONTH, CASE WHEN ISNULL(F.EXPIRATION_DAY,0)=0 THEN 30 ELSE F.EXPIRATION_DAY END, D.PRODT_START_DATE)), 112)))) AS EXPIR_DATE
  					, A.ORDER_TYPE AS OPT
  			FROM SOF100T A					WITH (NOLOCK)
					 INNER JOIN SOF110T B		WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
															AND A.DIV_CODE = B.DIV_CODE
															AND A.ORDER_NUM = B.ORDER_NUM

					 INNER  JOIN S_SOF120T_IN C	WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
															AND B.DIV_CODE = C.DIV_CODE
															AND B.ORDER_NUM = C.ORDER_NUM
															AND B.SER_NO = C.ORDER_SEQ
					 LEFT  JOIN (
								SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, MIN(PRODT_START_DATE) AS PRODT_START_DATE, EXPIRATION_DATE
								FROM	PMP100T WITH (NOLOCK)
								WHERE	COMP_CODE=#{S_COMP_CODE}
								AND		DIV_CODE=#{DIV_CODE}
								AND		LINE_END_YN='Y'
								GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, EXPIRATION_DATE

					 ) D		 ON D.COMP_CODE=C.COMP_CODE AND D.DIV_CODE=C.DIV_CODE AND D.LOT_NO=C.LOT_NO		--D.ITEM_CODE=C.ITEM_CODE AND
					 LEFT  JOIN BPR100T F		WITH (NOLOCK) ON B.COMP_CODE = F.COMP_CODE AND B.ITEM_CODE=F.ITEM_CODE

  			WHERE A.COMP_CODE=#{S_COMP_CODE}
      		AND A.DIV_CODE=#{DIV_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		    	AND     B.DVRY_DATE       &gt;=  #{PRODT_START_DATE}			/* 발주일(FR)   */
		    </if>
			<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		    	AND     B.DVRY_DATE       &lt;=  #{PRODT_END_DATE}			/* 발주일(TO)	*/
		    </if>
  			AND A.ORDER_TYPE = '11'
			GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, C.LOT_NO, B.TRANS_RATE, A.ORDER_TYPE
    ) X
    LEFT  JOIN BPR250T Y WITH (NOLOCK) ON X.COMP_CODE=Y.COMP_CODE AND X.DIV_CODE=Y.DIV_CODE AND X.ITEM_CODE=Y.ITEM_CODE
  	LEFT JOIN BPR100T M1 WITH (NOLOCK) ON X.COMP_CODE=M1.COMP_CODE AND X.ITEM_CODE=M1.ITEM_CODE
  	LEFT  JOIN BPR200T M2 WITH (NOLOCK) ON X.COMP_CODE=M2.COMP_CODE AND X.DIV_CODE=M2.DIV_CODE AND X.ITEM_CODE=M2.ITEM_CODE
    WHERE 1=1
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		AND X.ITEM_CODE = #{ITEM_CODE}
		</if>

		AND X.OPT = #{OPT}
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		AND X.LOT_NO LIKE #{LOT_NO}+'%'
		</if>
    ORDER BY X.ITEM_CODE

    </select>

    <select id="s_sof130rkrv_inServiceImpl.clipselect" parameterType="Map" resultType="rMap">
		/* S_sof130rkrv_in.CS_sof130rkrv_in[fnsof100Tnq] Query02 */
			BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @COUNT    INT
					, @PRINT_Q  INT
					, @LOT_ITEM_CODE NVARCHAR(50)
					, @PRINT_TYPE VARCHAR(20)
					, @BOX_TYPE VARCHAR(20)
					, @PACK_TYPE VARCHAR(20)
					, @ADD_VALUE VARCHAR(20)
					
		   CREATE TABLE #S_ORDER_PRINT
			( PRINT_Q VARCHAR(20)
  			 , LOT_ITEM_CODE  VARCHAR(50)
  			 , PRINT_TYPE VARCHAR(20)
  			 , BOX_TYPE VARCHAR(20)
			 , PACK_TYPE VARCHAR(20)
			 , ADD_VALUE VARCHAR(20)			 
			)
			DECLARE ORDER_PRINT_CUR CURSOR FOR

		
        SELECT    (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=2) AS PRINT_TYPE
            		, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=1) AS LOT_ITEM_CODE
            		, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=3) AS PRINT_Q
            		, CONVERT(NUMERIC, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=4)) AS BOX_TYPE
					, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=5) AS PACK_TYPE
					, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=6) AS ADD_VALUE					
        FROM uniLITE.fnSplit(#{ITEM_PRINT}, ',')
			

			OPEN ORDER_PRINT_CUR
			FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_TYPE, @LOT_ITEM_CODE, @PRINT_Q, @BOX_TYPE, @PACK_TYPE, @ADD_VALUE
			 SET @COUNT      = 0
				WHILE @@FETCH_STATUS = 0
					BEGIN
						WHILE  @COUNT &lt; @PRINT_Q
							BEGIN
								INSERT INTO #S_ORDER_PRINT(LOT_ITEM_CODE, PRINT_TYPE, BOX_TYPE, PACK_TYPE, ADD_VALUE)
								VALUES(@LOT_ITEM_CODE, @PRINT_TYPE, @BOX_TYPE, @PACK_TYPE, @ADD_VALUE)
								SET @COUNT = @COUNT+1
							END
						 SET @COUNT     = 0
						FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_TYPE, @LOT_ITEM_CODE, @PRINT_Q, @BOX_TYPE, @PACK_TYPE, @ADD_VALUE
					END

			CLOSE ORDER_PRINT_CUR
			DEALLOCATE ORDER_PRINT_CUR

			SELECT X.ITEM_CODE

          		, ISNULL(Y.LABEL_NAME, ISNULL(M1.ITEM_NAME2, M1.ITEM_NAME)) AS ITEM_NAME
          		, X.LOT_NO
          		, X.ORDER_Q
          		, M1.SALE_UNIT AS ORDER_UNIT
--              , LTRIM(STR(ISNULL(X.TRANS_RATE, M1.TRNS_RATE))) AS BOX_TYPE				--박스유형
              , F.BOX_TYPE + ISNULL(F.ADD_VALUE,'') AS BOX_TYPE
          		, LTRIM(STR(X.WKORD_Q / M1.TRNS_RATE)) PRINT_Q
          		, M2.KEEP_TEMPER
          		, SUBSTRING(M2.KEEP_TEMPER,3,1) AS KEEP_TEMPER2
          		, CASE WHEN ISNULL(F.PACK_TYPE,'') = '' THEN M2.PACK_TYPE ELSE F.PACK_TYPE END AS PACK_TYPE
          		--, LTRIM(STR(ISNULL(M2.PACK_QTY,0))) AS PACK_QTY
				, LTRIM(STR(ISNULL(M2.PACK_QTY,0))) + ISNULL(F.ADD_VALUE,'') AS PACK_QTY
          		, LTRIM(STR(ISNULL(M1.ITEM_WIDTH,0))) AS ITEM_SIZE
          		, X.MAKE_DATE
          		, X.EXPIR_DATE
          		, Y.HOSPITAL_ITEM AS H_ITEM_NAME
          		, Y.USE_TARGET AS USE_TARGET
          		, Y.REPORT_NO AS REGIST_NO
			    		, F.PRINT_TYPE AS LABEL_TYPE
			    		, OPT
			    		, CASE WHEN M1.ITEM_LEVEL2 IN ('120', '220', '320') OR ISNULL(M1.ITEM_WIDTH,0)=0 THEN 'Y' ELSE 'N' END AS LIQUID_YN
			    FROM (
			    		SELECT A.COMP_CODE, A.DIV_CODE
								 , ISNULL(B.ITEM_CODE, (SELECT TOP 1 PROD_ITEM_CODE FROM BPR500T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND CHILD_ITEM_CODE=A.ITEM_CODE)) AS ITEM_CODE
								 , A.LOT_NO
								 , (SELECT TOP 1 BOX_TYPE FROM #S_ORDER_PRINT WHERE LOT_ITEM_CODE=B.ITEM_CODE+A.LOT_NO) AS TRANS_RATE
								, SUM(CONVERT(NUMERIC,LTRIM(STR(A.WKORD_Q)))) AS ORDER_Q
								, SUM(A.WKORD_Q) AS WKORD_Q
								, uniLITE.fnGetUserdateComp(A.COMP_CODE, MAX(A.PRODT_START_DATE)) AS MAKE_DATE
								, uniLITE.fnGetUserdateComp(A.COMP_CODE, MAX(ISNULL(A.EXPIRATION_DATE,
																				CONVERT(VARCHAR(8), DATEADD(DAY, -1, DATEADD(MONTH, CASE WHEN ISNULL(D2.EXPIRATION_DAY,0)=0 THEN 30 ELSE D2.EXPIRATION_DAY END, A.PRODT_START_DATE)), 112)))) AS EXPIR_DATE
								, 'P' AS OPT
						FROM PMP100T A WITH (NOLOCK)
								 LEFT JOIN PPL100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WK_PLAN_NUM=B.WK_PLAN_NUM
								 LEFT  JOIN BPR100T D2 WITH (NOLOCK) ON A.COMP_CODE=D2.COMP_CODE AND A.ITEM_CODE=D2.ITEM_CODE
						WHERE A.COMP_CODE=#{S_COMP_CODE}
			    		AND A.DIV_CODE=#{DIV_CODE}
			    		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
					    	AND     A.PRODT_START_DATE       &gt;=  #{PRODT_START_DATE}			/* 발주일(FR)   */
					    </if>
						<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
					    	AND     A.PRODT_END_DATE       &lt;=  #{PRODT_END_DATE}			/* 발주일(TO)	*/
					    </if>
			    		AND A.LINE_END_YN='Y'
			    		AND ISNULL(A.SEMI_ITEM_CODE,'') = ''
						GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, A.LOT_NO, A.ITEM_CODE
						UNION

						SELECT A.COMP_CODE, A.DIV_CODE
								, B.ITEM_CODE AS ITEM_CODE
								, C.LOT_NO
								, B.TRANS_RATE
								, SUM(CONVERT(NUMERIC, LTRIM(STR(B.ORDER_Q)))) AS ORDER_Q
								, SUM(B.ORDER_UNIT_Q) AS WKORD_Q
								, uniLITE.fnGetUserdateComp(A.COMP_CODE, MIN(D.PRODT_START_DATE)) AS MAKE_DATE
								, uniLITE.fnGetUserdateComp(A.COMP_CODE, MIN(ISNULL(D.EXPIRATION_DATE,
																				CONVERT(VARCHAR(8), DATEADD(DAY, -1, DATEADD(MONTH, CASE WHEN ISNULL(F.EXPIRATION_DAY,0)=0 THEN 30 ELSE F.EXPIRATION_DAY END, D.PRODT_START_DATE)), 112)))) AS EXPIR_DATE
								, A.ORDER_TYPE AS OPT
						FROM SOF100T A					WITH (NOLOCK)
							 INNER JOIN SOF110T B		WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
																	AND A.DIV_CODE = B.DIV_CODE
																	AND A.ORDER_NUM = B.ORDER_NUM

							 INNER  JOIN S_SOF120T_IN C	WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
																	AND B.DIV_CODE = C.DIV_CODE
																	AND B.ORDER_NUM = C.ORDER_NUM
																	AND B.SER_NO = C.ORDER_SEQ
							 LEFT  JOIN (
										SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, MIN(PRODT_START_DATE) AS PRODT_START_DATE, EXPIRATION_DATE
										FROM	PMP100T WITH (NOLOCK)
										WHERE	COMP_CODE=#{S_COMP_CODE}
										AND		DIV_CODE=#{DIV_CODE}
										AND		LINE_END_YN='Y'
										GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, EXPIRATION_DATE

							 ) D		 ON D.COMP_CODE=C.COMP_CODE AND D.DIV_CODE=C.DIV_CODE  AND D.LOT_NO=C.LOT_NO		--AND D.ITEM_CODE=C.ITEM_CODE
							 LEFT  JOIN BPR100T F		WITH (NOLOCK) ON B.COMP_CODE = F.COMP_CODE AND B.ITEM_CODE=F.ITEM_CODE

						WHERE A.COMP_CODE=#{S_COMP_CODE}
						AND A.DIV_CODE=#{DIV_CODE}
			    		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE)">
					    	AND     B.DVRY_DATE       &gt;=  #{PRODT_START_DATE}			/* 발주일(FR)   */
					    </if>
						<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
					    	AND     B.DVRY_DATE       &lt;=  #{PRODT_END_DATE}			/* 발주일(TO)	*/
					    </if>
						AND A.ORDER_TYPE = '11'
						GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, C.LOT_NO, B.TRANS_RATE, A.ORDER_TYPE
			    ) X
			    LEFT  JOIN BPR250T Y WITH (NOLOCK) ON X.COMP_CODE=Y.COMP_CODE
				                                  AND X.DIV_CODE=Y.DIV_CODE
												  AND X.ITEM_CODE=Y.ITEM_CODE
				LEFT JOIN BPR100T M1 WITH (NOLOCK) ON X.COMP_CODE=M1.COMP_CODE AND X.ITEM_CODE=M1.ITEM_CODE
				LEFT  JOIN BPR200T M2 WITH (NOLOCK) ON X.COMP_CODE=M2.COMP_CODE AND X.DIV_CODE=M2.DIV_CODE AND X.ITEM_CODE=M2.ITEM_CODE
				LEFT  JOIN #S_ORDER_PRINT F ON X.ITEM_CODE + X.LOT_NO = F.LOT_ITEM_CODE
			    WHERE X.ITEM_CODE + X.LOT_NO IN	(select value from  uniLITE.fnSplit(#{ITEM_LOT}, ','))

				AND X.TRANS_RATE IN ( SELECT  CONVERT(NUMERIC, (SELECT VALUE FROM uniLITE.fnSplit(VALUE, '^') WHERE IDX=4)) AS BOX_TYPE
												FROM uniLITE.fnSplit(#{ITEM_PRINT}, ','))
									
			    ORDER BY X.ITEM_CODE
				END
			    DROP TABLE #S_ORDER_PRINT
    </select>

    <select id="s_sof130rkrv_inServiceImpl.clipselectsub" parameterType="Map" resultType="rMap">
		/* S_sof130rkrv_in.CS_sof130rkrv_in[fnsof100Tnq] Query01 */
		
		--이건머임???? 필요없으면 삭제하셈
		
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @USER_ID NVARCHAR(100)
			               , @TodayDate NVARCHAR(8)

			SET @USER_ID = #{S_USER_ID}
			SET @TodayDate = CONVERT(NVARCHAR(8), GETDATE(),112)
			SELECT
					       A.COMP_CODE
					     , A.INOUT_NUM
					     , A.INOUT_SEQ
					     , A.INOUT_TYPE
					     , A.DIV_CODE
					     , A.INOUT_DATE
					     , E.DIV_CODE    AS MY_CUSTOM_CODE
					     , E.DIV_NAME    AS MY_CUSTOM_NAME
						 , E.TELEPHON
					     , E.REPRE_NAME  AS MY_TOP_NAME
					     , CASE ISNULL(E.COMPANY_NUM,'')
					            WHEN '' THEN ''
					            ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
					                       + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
					                       + SUBSTRING(E.COMPANY_NUM,6,5)
					        END          AS MY_COMPANY_NUM
					     , E.ZIP_CODE    AS MY_ZIP_CODE
					     , E.ADDR        AS MY_ADDR
					     , B.CUSTOM_CODE
					     , B.CUSTOM_NAME AS CUSTOM_NAME
					     , B.TOP_NAME
					     , CASE ISNULL(B.COMPANY_NUM,'')
					            WHEN '' THEN ''
					            ELSE         SUBSTRING(B.COMPANY_NUM,1,3) + '-'
					                       + SUBSTRING(B.COMPANY_NUM,4,2) + '-'
					                       + SUBSTRING(B.COMPANY_NUM,6,5)
					        END AS COMPANY_NUM
					     , B.ZIP_CODE
					     , RTRIM(ISNULL(B.ADDR1,'') + ISNULL(B.ADDR2,'')) AS ADDR
					     , CASE ISNULL(CC.CUSTOM_ITEM_CODE, '')
					            WHEN '' THEN A.ITEM_CODE
					            ELSE         CC.CUSTOM_ITEM_CODE
					        END AS ITEM_CODE
					     , CASE ISNULL(CC.CUSTOM_ITEM_NAME, '')
					            WHEN '' THEN uniLITE.fnItemNameComp(C.COMP_CODE, @USER_ID, C.ITEM_CODE)
					            ELSE         CC.CUSTOM_ITEM_NAME
					        END AS ITEM_NAME
					     , CASE ISNULL(CC.CUSTOM_ITEM_SPEC, '')
					            WHEN '' THEN (SELECT SPEC
					                            FROM BPR100T
					                           WHERE COMP_CODE = A.COMP_CODE
					                             AND ITEM_CODE = A.ITEM_CODE)
					            ELSE         CC.CUSTOM_ITEM_SPEC
					        END AS SPEC
					     , A.ORDER_UNIT
					     , (CASE WHEN A.INOUT_TYPE = '2' THEN A.ORDER_UNIT_Q
					             WHEN A.INOUT_TYPE = '3' THEN A.ORDER_UNIT_Q  * (-1)
					         END) AS ORDER_UNIT_Q
					     , A.ORDER_UNIT_P
					     , (CASE WHEN A.INOUT_TYPE = '2' THEN A.ORDER_UNIT_O
					             WHEN A.INOUT_TYPE = '3' THEN A.ORDER_UNIT_O  * (-1)
					         END) AS ORDER_UNIT_O
					     , (CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_TAX_AMT
					             WHEN A.INOUT_TYPE = '3' THEN A.INOUT_TAX_AMT * (-1)
					         END) AS INOUT_TAX_AMT
					     , A.TAX_TYPE
					     , ISNULL(A.DISCOUNT_RATE, 0)  AS DISCOUNT_RATE
					     , A.DVRY_CUST_CD
					     , ISNULL(D.DVRY_CUST_NM,' ')  AS DVRY_CUST_NM
					     , ISNULL(D.DVRY_CUST_TEL,' ') AS DVRY_CUST_TEL
					     , ISNULL(D.DVRY_CUST_ADD,' ') AS DVRY_CUST_ADD
					     , CONVERT(NUMERIC(18,0),0)    AS GUBUN
					     , CONVERT(NUMERIC(18,0),0)    AS l_PAGE
					     , CONVERT(NUMERIC(6,0),0)     AS N_PAGE
					     , CONVERT(NUMERIC(6,0),0)     AS MAX_PAGE
					     , CONVERT(NUMERIC(18,6),0)    AS SUM_Q
					     , CONVERT(NUMERIC(18,4),0)    AS SUM_O
					     , CONVERT(NUMERIC(18,4),0)    AS SUM_TAX
					     , CONVERT(NUMERIC(4,0),0)     AS G_REC
					     ,'1'                          AS G_SUPP

						 , E.TELEPHON	-- MY_TELEPHON
						 , B.TELEPHON AS CUSTOM_TELEPHON
						 , G.CODE_NAME AS BANK_ACCNT_CODE
						 , G.REF_CODE1    AS BANK_NAME

						  , A.LOT_NO
						  , A.REMARK
						  , C.KEEP_TEMPER
					  --FROM            BTR100T A  WITH (NOLOCK)
					  FROM  (
								SELECT S1.COMP_CODE, S1.DIV_CODE
										--, S2.ORDER_NUM AS INOUT_NUM
										--, S2.SER_NO AS INOUT_SEQ
										, S1.CUSTOM_CODE + CONVERT(VARCHAR(8), GETDATE(), 112)  AS INOUT_NUM
										, ROW_NUMBER() OVER (ORDER BY S2.ITEM_CODE) AS INOUT_SEQ
										, S2.ITEM_CODE, '2' AS INOUT_TYPE, S1.CUSTOM_CODE AS INOUT_CODE, S2.SALE_CUST_CD AS SALE_CUSTOM_CODE, S2.ORDER_UNIT, S2.DVRY_CUST_CD
										, 0 AS DISCOUNT_RATE
										, S2.TAX_TYPE
										, '1' AS CREATE_LOC
										, S1.ORDER_DATE AS INOUT_DATE
										, S2.ORDER_Q AS ORDER_UNIT_Q
										, S2.ORDER_P AS ORDER_UNIT_P
										, S2.ORDER_O AS ORDER_UNIT_O
										, S2.ORDER_TAX_O AS INOUT_TAX_AMT
										, S2.LOT_NO
										, S2.REMARK
										, S1.ORDER_O AS SUM_O_S1
										, S1.ORDER_TAX_O AS SUM_TAX_O_S1
								FROM SOF100T S1 WITH (NOLOCK)
									 INNER JOIN SOF110T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.ORDER_NUM=S2.ORDER_NUM
								WHERE S1.COMP_CODE = #{S_COMP_CODE}
								 AND   S1.DIV_CODE = #{DIV_CODE}

								 AND   S1.CUSTOM_CODE  = #{CUSTOM_CODE}
								 <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
							    	AND     S1.ORDER_DATE       &gt;=  #{ORDER_DATE_FR}			/* 발주일(FR)   */
							    </if>
								<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
							    	AND     S1.ORDER_DATE       &lt;=  #{ORDER_DATE_TO}			/* 발주일(TO)	*/
							    </if>
							    AND S1.ORDER_NUM IN
								 (select value from  uniLITE.fnSplit(#{ORDER_NUM}, ','))


							) A
					       INNER JOIN BCM100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
					                                          AND B.CUSTOM_CODE = A.SALE_CUSTOM_CODE
					       INNER JOIN BPR200T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
					                                          AND C.DIV_CODE    = A.DIV_CODE
					                                          AND C.ITEM_CODE   = A.ITEM_CODE
					       LEFT  JOIN BPR300T CC WITH (NOLOCK) ON CC.TYPE            = '2'
					                                          AND CC.DIV_CODE        = '*'
					                                          AND CC.COMP_CODE       = A.COMP_CODE
					                                          AND CC.CUSTOM_CODE     = A.INOUT_CODE
					                                          AND CC.ITEM_CODE       = A.ITEM_CODE
					                                          AND CC.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
					                                                                      FROM BPR300T WITH (NOLOCK)
					                                                                     WHERE COMP_CODE        = CC.COMP_CODE
					                                                                       AND TYPE             = CC.TYPE
					                                                                       AND DIV_CODE         = CC.DIV_CODE
					                                                                       AND ITEM_CODE        = CC.ITEM_CODE
					                                                                       AND CUSTOM_CODE      = CC.CUSTOM_CODE
					                                                                       AND APLY_START_DATE &lt;= @TodayDate)
					       LEFT  JOIN (SELECT DD.COMP_CODE
					                        , DD.CUSTOM_CODE
					                        , CONVERT(NVARCHAR(8), DD.DVRY_CUST_SEQ) AS DVRY_CUST_SEQ
					                        , DD.DVRY_CUST_NM
					                        , MAX(DD.DVRY_CUST_TEL)                  AS DVRY_CUST_TEL
					                        , DD.DVRY_CUST_ADD
					                     FROM SCM100T DD WITH (NOLOCK)
					                    WHERE DD.COMP_CODE  = 'MASTER'
					                    GROUP BY DD.COMP_CODE   , DD.CUSTOM_CODE, DD.DVRY_CUST_SEQ
					                           , DD.DVRY_CUST_NM, DD.DVRY_CUST_ADD) D ON D.COMP_CODE     = A.COMP_CODE
					                                                                 AND D.DVRY_CUST_SEQ = A.DVRY_CUST_CD
					                                                                 AND D.CUSTOM_CODE   = A.INOUT_CODE
					       INNER JOIN BOR120T E  WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
					                                          AND E.DIV_CODE    = A.DIV_CODE
					       INNER JOIN BCM100T F  WITH (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE
					                                          AND F.CUSTOM_CODE = A.INOUT_CODE
						   LEFT JOIN BSA100T G  WITH (NOLOCK) ON G.COMP_CODE   = A.COMP_CODE
					                                          AND G.MAIN_CODE    = 'S041'
															  AND G.SUB_CODE     = '01'
					 WHERE A.CREATE_LOC = '1'
					 AND   A.COMP_CODE=#{S_COMP_CODE}
					 AND   A.DIV_CODE = #{DIV_CODE}

					 AND   A.INOUT_CODE LIKE '%'


 	     ORDER BY B.CUSTOM_CODE, A.INOUT_NUM, A.INOUT_SEQ


			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
    </select>

</mapper>