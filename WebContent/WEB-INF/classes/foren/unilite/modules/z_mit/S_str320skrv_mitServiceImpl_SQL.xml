<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str320skrv_mitServiceImpl">
	<select id="s_str320skrv_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @START_TIME DATETIME
		          , @END_TIME   DATETIME
		          , @DIFF_TIME  NUMERIC(10, 0)

		    SET @START_TIME = GETDATE()

		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID	*/
		          , @LangType		NVARCHAR(2)		/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD');

		    /* 데이터 조회 */
			WITH TMP_DATA AS (
				SELECT A.ITEM_CODE
					 , (CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
							 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
							 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
												 ELSE C1.ITEM_NAME
						 END)                                                                                   AS ITEM_NAME
					 , C1.ITEM_NAME1
					 , C1.SPEC                                                                                  AS SPEC
					 , A.ORDER_UNIT                                                                             AS ORDER_UNIT
					 , A.TRNS_RATE                                                                              AS TRNS_RATE
					 , M1.CODE_NAME                                                                             AS INOUT_TYPE_DETAIL
					 , (CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
							 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
							 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
												 ELSE D1.CUSTOM_NAME
						 END)                                                                                   AS CUSTOM_NAME
					 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
							 THEN ''
							 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
																	 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
																	 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
						 END)                                                                                   AS INOUT_DATE
					 , A.ORDER_UNIT_Q                                                                           AS ORDER_UNIT_Q
					 , A.INOUT_Q                                                                                AS INOUT_Q
					 , A.ORDER_UNIT_P                                                                           AS ORDER_UNIT_P
					 , A.ORDER_UNIT_O                                                                           AS ORDER_UNIT_O
					 , A.INOUT_TAX_AMT                                                                          AS INOUT_TAX_AMT
					 , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)                                                       AS TOT_INOUT_AMT
					 , M2.CODE_NAME                                                                             AS ITEM_STATUS
					 , C4.TREE_NAME                                                                             AS WH_CODE
					 , C3.DIV_NAME                                                                              AS DIV_NAME
					 , M3.CODE_NAME                                                                             AS INOUT_PRSN
					 , A.ISSUE_REQ_NUM                                                                          AS ISSUE_REQ_NUM
					 , A.ISSUE_REQ_SEQ                                                                          AS ISSUE_REQ_SEQ
					 , A.LOT_NO                                                                                 AS LOT_NO
					 , A.PROJECT_NO                                                                             AS PROJECT_NO
					 , (CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
							 WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
							 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
												 ELSE D2.CUSTOM_NAME
						 END)                                                                                   AS SALE_CUSTOM_NAME
					 , A.ACCOUNT_Q                                                                              AS ACCOUNT_Q
					 , A.INOUT_NUM                                                                              AS INOUT_NUM
					 , A.INOUT_SEQ                                                                              AS INOUT_SEQ
					 , M4.CODE_NAME                                                                             AS CREATE_LOC
					 , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                          AS SORT
					 , A.INSPEC_NUM
				FROM              BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
					   LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
														   AND C1.ITEM_CODE      = A.ITEM_CODE
					   LEFT  JOIN BPR100T C2  WITH (NOLOCK) ON C2.COMP_CODE      = C1.COMP_CODE
														   AND C2.ITEM_CODE      = C1.ITEM_GROUP
					   LEFT  JOIN BOR120T C3  WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
														   AND C3.DIV_CODE       = A.DIV_CODE
					   LEFT  JOIN BSA220T C4  WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
														   AND C4.TYPE_LEVEL     = A.DIV_CODE
														   AND C4.TREE_CODE      = A.WH_CODE
					   LEFT  JOIN BCM100T D1  WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
														   AND D1.CUSTOM_CODE    = A.INOUT_CODE
					   LEFT  JOIN BCM100T D2  WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
														   AND D2.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
					   LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
														   AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
														   AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
					   LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = A.COMP_CODE
														   AND M2.MAIN_CODE      = 'B021'                    /* 품목상태 */
														   AND M2.SUB_CODE       = A.ITEM_STATUS
					   LEFT  JOIN BSA100T M3  WITH (NOLOCK) ON M3.COMP_CODE      = A.COMP_CODE
														   AND M3.MAIN_CODE      = 'B024'                    /* 수불담당 */
														   AND M3.SUB_CODE       = A.INOUT_PRSN
					   LEFT  JOIN BSA100T M4  WITH (NOLOCK) ON M4.COMP_CODE      = A.COMP_CODE
														   AND M4.MAIN_CODE      = 'B031'                    /* 생성경로 */
														   AND M4.SUB_CODE       = A.CREATE_LOC
					   LEFT  JOIN BSA210T E  WITH (NOLOCK)  ON E.COMP_CODE 	     = A.COMP_CODE
														   AND E.TYPE_LEVEL 	 = A.DIV_CODE
														   AND E.TREE_CODE 	     = A.DEPT_CODE
				 WHERE A.COMP_CODE             = @CompCode
				   AND A.CREATE_LOC            = '1'
				   AND A.INOUT_TYPE            = '3'
				   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				   AND A.DIV_CODE              = #{DIV_CODE}					/* 사업장 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
				   AND A.INOUT_PRSN            = #{TXT_INOUT_PRSN}				/* 수불담당 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
				   AND A.INOUT_TYPE_DETAIL     =#{INOUT_TYPE_DETAIL}			/* 반품유형 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_WH_CODE)">
				   AND A.WH_CODE               = #{TXT_WH_CODE}					/* 창고 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
				   AND D1.AGENT_TYPE           = #{AGENT_TYPE}					/* 거래처분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
				   AND D1.AREA_TYPE            = #{TXT_AREA_TYPE}				/* 지역 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
				   AND A.INOUT_DATE           &gt;= #{FR_INOUT_DATE}			/* 반품일 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
				   AND A.INOUT_DATE           &lt;= #{TO_INOUT_DATE}			/* 반품일 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_NUM)">
				   AND A.INOUT_NUM            &gt;= #{FR_INOUT_NUM}				/* 반품번호 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_NUM)">
				   AND A.INOUT_NUM            &lt;= #{TO_INOUT_NUM}				/* 반품번호 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_Q)">
				   AND A.INOUT_Q              &gt;= #{FR_INOUT_Q}				/* 반품량 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_Q)">
				   AND A.INOUT_Q              &lt;= #{TO_INOUT_Q}				/* 반품량 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				   AND A.ITEM_CODE          LIKE #{ITEM_CODE} + '%'				/* 품목코드 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
							 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
												 ELSE C1.ITEM_NAME
						 END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
				   AND C1.ITEM_LEVEL1          = #{TXTLV_L1}					/* 대분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
				   AND C1.ITEM_LEVEL2          = #{TXTLV_L2}					/* 중분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
				   AND C1.ITEM_LEVEL3          = #{TXTLV_L3}					/* 소분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(DIV_ITEM_GROUP_G)">
				   AND  C1.ITEM_GROUP       LIKE #{DIV_ITEM_GROUP_G} + '%'		/* 대표모델 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
							 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
												 ELSE C2.ITEM_NAME
						 END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				   AND A.INOUT_CODE         LIKE #{CUSTOM_CODE} + '%'			/* 거래처코드 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
							 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
												 ELSE D1.CUSTOM_NAME
						 END)               LIKE #{CUSTOM_NAME} + '%'			/* 거래처명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_LOT_NO)">
				   AND A.LOT_NO             LIKE #{TXT_LOT_NO} + '%'			/* Lot No */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">					/* 프로젝트번호 */
					AND    A.PROJECT_NO = #{PJT_CODE}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">				/* 반품관리번호 */
					AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
				   </if>


				UNION ALL
				
				SELECT A.ITEM_CODE, B.ITEM_NAME, B.ITEM_NAME1, B.SPEC, A.ORDER_UNIT, A.TRNS_RATE, M1.CODE_NAME AS INOUT_TYPE_DETAIL
					 , C.WH_CELL_NAME                                                                          AS CUSTOM_NAME
					 , A.INOUT_DATE, A.INOUT_Q AS ORDER_UNIT_Q, A.INOUT_Q, A.ORDER_UNIT_P, A.ORDER_UNIT_O
					 , A.INOUT_TAX_AMT, A.ORDER_UNIT_O+A.INOUT_TAX_AMT                                         AS TOT_INOUT_AMT
					 --20200115 수정
					 --, A.ITEM_STATUS
					 , M2.CODE_NAME                                                                             AS ITEM_STATUS
					 , D.TREE_NAME                                                                             AS WH_CODE
					 , C3.DIV_NAME                                                                             AS DIV_NAME
					 , M3.CODE_NAME                                                                            AS INOUT_PRSN
					 , ''                                                                                      AS ISSUE_REQ_NUM
					 , NULL                                                                                    AS ISSUE_REQ_SEQ
					 , A.LOT_NO
					 , A.PROJECT_NO
					 , C.WH_CELL_NAME                                                                          AS SALE_CUSTOM_NAME
					 , A.ACCOUNT_Q
					 , A.INOUT_NUM
					 , A.INOUT_SEQ
					 , M4.CODE_NAME                                                                            AS CREATE_LOC
					 , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                         AS SORT
					 , A.INSPEC_NUM
				  FROM BTR100T A WITH (NOLOCK)
				  LEFT JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE 
													AND B.ITEM_CODE      = A.ITEM_CODE
				  LEFT JOIN BSA225T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE 
													AND C.DIV_CODE       = A.DIV_CODE 
													AND C.WH_CODE        = A.WH_CODE 
													AND C.WH_CELL_CODE   = A.WH_CELL_CODE
				  LEFT JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
													AND C1.ITEM_CODE     = A.ITEM_CODE
				  LEFT JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE     = C1.COMP_CODE
													AND C2.ITEM_CODE     = C1.ITEM_GROUP
				  LEFT JOIN BOR120T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE 
													AND C3.DIV_CODE      = A.DIV_CODE
				  LEFT JOIN BSA220T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE 
													AND D.TYPE_LEVEL     = A.DIV_CODE 
													AND D.TREE_CODE      = A.INOUT_CODE
				  LEFT JOIN BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE
													AND D1.CUSTOM_CODE   = A.WH_CELL_CODE
				  LEFT JOIN BSA225T D2 WITH (NOLOCK) ON D2.COMP_CODE     = A.COMP_CODE 
													AND D2.DIV_CODE      = A.DIV_CODE 
													AND D2.WH_CODE       = A.INOUT_CODE 
													AND D2.WH_CELL_CODE  = A.INOUT_CODE_DETAIL
				  LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
													AND M1.MAIN_CODE     = 'S008'                    /* 반품유형 */
													AND M1.SUB_CODE      = A.TEMPC_01
				  LEFT JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
													AND M2.MAIN_CODE     = 'B021'                    /* 품목상태 */
													AND M2.SUB_CODE      = A.ITEM_STATUS
				  LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE     = A.COMP_CODE
													AND M3.MAIN_CODE     = 'B024'                    /* 수불담당 */
													AND M3.SUB_CODE      = A.INOUT_PRSN
				  LEFT JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE     = A.COMP_CODE
													AND M4.MAIN_CODE     = 'B031'                    /* 생성경로 */
													AND M4.SUB_CODE      = A.CREATE_LOC
				 WHERE A.COMP_CODE         = #{S_COMP_CODE}
				   AND A.DIV_CODE          = #{DIV_CODE}
				   --고정 조건
				   AND A.INOUT_TYPE        = '2'
				   AND A.INOUT_METH        = '3'
				   AND A.CREATE_LOC        = '4'
				   AND A.INOUT_TYPE_DETAIL = '99'
				   AND A.INOUT_CODE        = '1700'
				   AND A.INOUT_CODE_DETAIL = '10'
				   AND ISNULL(A.INSPEC_NUM,'') != ''
				   --고정 조건
				   <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
				   AND A.INOUT_PRSN            = #{TXT_INOUT_PRSN}				/* 수불담당 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
				   AND A.INOUT_TYPE_DETAIL     = #{INOUT_TYPE_DETAIL}			/* 반품유형 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_WH_CODE)">
				   AND A.INOUT_CODE            = #{TXT_WH_CODE}					/* 창고 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
				   AND D1.AGENT_TYPE           = #{AGENT_TYPE}					/* 거래처분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
				   AND D1.AREA_TYPE            = #{TXT_AREA_TYPE}				/* 지역 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
				   AND A.INOUT_DATE           &gt;= #{FR_INOUT_DATE}			/* 반품일 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
				   AND A.INOUT_DATE           &lt;= #{TO_INOUT_DATE}			/* 반품일 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_NUM)">
				   AND A.INOUT_NUM            &gt;= #{FR_INOUT_NUM}				/* 반품번호 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_NUM)">
				   AND A.INOUT_NUM            &lt;= #{TO_INOUT_NUM}				/* 반품번호 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_INOUT_Q)">
				   AND A.INOUT_Q              &gt;= #{FR_INOUT_Q}				/* 반품량 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_INOUT_Q)">
				   AND A.INOUT_Q              &lt;= #{TO_INOUT_Q}				/* 반품량 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				   AND A.ITEM_CODE          LIKE #{ITEM_CODE} + '%'				/* 품목코드 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
							 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
												 ELSE C1.ITEM_NAME
						 END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
				   AND C1.ITEM_LEVEL1          = #{TXTLV_L1}					/* 대분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
				   AND C1.ITEM_LEVEL2          = #{TXTLV_L2}					/* 중분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
				   AND C1.ITEM_LEVEL3          = #{TXTLV_L3}					/* 소분류 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(DIV_ITEM_GROUP_G)">
				   AND  C1.ITEM_GROUP       LIKE #{DIV_ITEM_GROUP_G} + '%'		/* 대표모델 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
							 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
												 ELSE C2.ITEM_NAME
						 END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				   AND A.WH_CELL_CODE       LIKE #{CUSTOM_CODE} + '%'			/* 거래처코드 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				   AND C.WH_CELL_NAME       LIKE #{CUSTOM_NAME} + '%'			/* 거래처명 */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TXT_LOT_NO)">
				   AND A.LOT_NO             LIKE #{TXT_LOT_NO} + '%'			/* Lot No */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">					/* 프로젝트번호 */
					AND    A.PROJECT_NO = #{PJT_CODE}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">				/* 반품관리번호 */
					AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
				   </if>
			)
			SELECT *
			FROM TMP_DATA
		    ORDER BY INSPEC_NUM, CUSTOM_NAME, INOUT_SEQ;

		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

<!-- 20200525 수정: printMainData 사용하지 않고 printList만 사용하도록 변경 -->
	<select id="s_str320skrv_mitServiceImpl.printMainData" parameterType="Map" resultType="rMap">
		/* s_str320skrv_mitServiceImpl.printMainData */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @START_TIME DATETIME
		          , @END_TIME   DATETIME
		          , @DIFF_TIME  NUMERIC(10, 0)

		    SET @START_TIME = GETDATE()

		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID	*/
		          , @LangType		NVARCHAR(2)		/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT TOP 1
		           ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE, A.PROJECT_NO, CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                                                                       WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                                                                       WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                                                                           ELSE D2.CUSTOM_NAME
		                                                                   END ASC)                         AS SEQ
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)                                                                                   AS ITEM_NAME
		         , C1.ITEM_NAME1
		         , C1.SPEC                                                                                  AS SPEC
		         , A.ORDER_UNIT                                                                             AS ORDER_UNIT
		         , A.TRNS_RATE                                                                              AS TRNS_RATE
		         , M1.CODE_NAME                                                                             AS INOUT_TYPE_DETAIL
		         , (CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)                                                                                   AS CUSTOM_NAME
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                                                                   AS INOUT_DATE
		         , A.ORDER_UNIT_Q                                                                           AS ORDER_UNIT_Q
		         , A.INOUT_Q                                                                                AS INOUT_Q
		         , A.ORDER_UNIT_P                                                                           AS ORDER_UNIT_P
		         , A.ORDER_UNIT_O                                                                           AS ORDER_UNIT_O
		         , A.INOUT_TAX_AMT                                                                          AS INOUT_TAX_AMT
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)                                                       AS TOT_INOUT_AMT
		         , M2.CODE_NAME                                                                             AS ITEM_STATUS
		         , C4.TREE_NAME                                                                             AS WH_CODE
		         , C3.DIV_NAME                                                                              AS DIV_NAME
		         , M3.CODE_NAME                                                                             AS INOUT_PRSN
		         , A.ISSUE_REQ_NUM                                                                          AS ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ                                                                          AS ISSUE_REQ_SEQ
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN LEFT(LOT_NO, CHARINDEX('-', LOT_NO)-1)
		                ELSE LOT_NO
		           END                                                                                      AS LOT_NO
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN RIGHT(LOT_NO,CHARINDEX('-', REVERSE(LOT_NO))-1)
		                ELSE ''
		           END                                                                                      AS SN_NO
		         , A.PROJECT_NO                                                                             AS PROJECT_NO
		         , (CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                     ELSE D2.CUSTOM_NAME
		             END)                                                                                   AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q                                                                              AS ACCOUNT_Q
		         , A.INOUT_NUM                                                                              AS INOUT_NUM
		         , A.INOUT_SEQ                                                                              AS INOUT_SEQ
		         , M4.CODE_NAME                                                                             AS CREATE_LOC
		         , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                          AS SORT
		         , A.INSPEC_NUM
		         , A.REMARK
		         , A.ACCOUNT_YNC
		    FROM              BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		           LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                               AND C1.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BPR100T C2  WITH (NOLOCK) ON C2.COMP_CODE      = C1.COMP_CODE
		                                               AND C2.ITEM_CODE      = C1.ITEM_GROUP
		           LEFT  JOIN BOR120T C3  WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                               AND C3.DIV_CODE       = A.DIV_CODE
		           LEFT  JOIN BSA220T C4  WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
		                                               AND C4.TYPE_LEVEL     = A.DIV_CODE
		                                               AND C4.TREE_CODE      = A.WH_CODE
		           LEFT  JOIN BCM100T D1  WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
		                                               AND D1.CUSTOM_CODE    = A.INOUT_CODE
		           LEFT  JOIN BCM100T D2  WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
		                                               AND D2.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                               AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                               AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = A.COMP_CODE
		                                               AND M2.MAIN_CODE      = 'B021'                    /* 품목상태 */
		                                               AND M2.SUB_CODE       = A.ITEM_STATUS
		           LEFT  JOIN BSA100T M3  WITH (NOLOCK) ON M3.COMP_CODE      = A.COMP_CODE
		                                               AND M3.MAIN_CODE      = 'B024'                    /* 수불담당 */
		                                               AND M3.SUB_CODE       = A.INOUT_PRSN
		           LEFT  JOIN BSA100T M4  WITH (NOLOCK) ON M4.COMP_CODE      = A.COMP_CODE
		                                               AND M4.MAIN_CODE      = 'B031'                    /* 생성경로 */
		                                               AND M4.SUB_CODE       = A.CREATE_LOC
		           LEFT  JOIN BSA210T E  WITH (NOLOCK)  ON E.COMP_CODE 	     = A.COMP_CODE
		                                               AND E.TYPE_LEVEL 	 = A.DIV_CODE
		                                               AND E.TREE_CODE 	     = A.DEPT_CODE
		     WHERE A.COMP_CODE             = @CompCode
		       AND A.CREATE_LOC            = '1'
		       AND A.INOUT_TYPE            = '3'
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE              = #{DIV_CODE}					/* 사업장 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
		       AND A.INOUT_PRSN            = #{TXT_INOUT_PRSN}				/* 수불담당 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
		       AND A.INOUT_TYPE_DETAIL     =#{INOUT_TYPE_DETAIL}			/* 반품유형 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_WH_CODE)">
		       AND A.WH_CODE               = #{TXT_WH_CODE}					/* 창고 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		       AND D1.AGENT_TYPE           = #{AGENT_TYPE}					/* 거래처분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
		       AND D1.AREA_TYPE            = #{TXT_AREA_TYPE}				/* 지역 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		       AND A.INOUT_DATE           &gt;= #{FR_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		       AND A.INOUT_DATE           &lt;= #{TO_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_NUM)">
		       AND A.INOUT_NUM            &gt;= #{FR_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_NUM)">
		       AND A.INOUT_NUM            &lt;= #{TO_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_Q)">
		       AND A.INOUT_Q              &gt;= #{FR_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_Q)">
		       AND A.INOUT_Q              &lt;= #{TO_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE          LIKE #{ITEM_CODE} + '%'				/* 품목코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
		       AND C1.ITEM_LEVEL1          = #{TXTLV_L1}					/* 대분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
		       AND C1.ITEM_LEVEL2          = #{TXTLV_L2}					/* 중분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
		       AND C1.ITEM_LEVEL3          = #{TXTLV_L3}					/* 소분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DIV_ITEM_GROUP_G)">
		       AND  C1.ITEM_GROUP       LIKE #{DIV_ITEM_GROUP_G} + '%'		/* 대표모델 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE         LIKE #{CUSTOM_CODE} + '%'			/* 거래처코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)               LIKE #{CUSTOM_NAME} + '%'			/* 거래처명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_LOT_NO)">
		       AND A.LOT_NO             LIKE #{TXT_LOT_NO} + '%'			/* Lot No */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">					/*프로젝트번호*/
		        AND    A.PROJECT_NO = #{PJT_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">				/* 반품관리번호 */
		        AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
		       </if>
		    ORDER BY 1, 2, 3, 4

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_str320skrv_mitServiceImpl.printList" parameterType="Map" resultType="rMap">
		/* s_str320skrv_mitServiceImpl.printList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @START_TIME DATETIME
		          , @END_TIME   DATETIME
		          , @DIFF_TIME  NUMERIC(10, 0)

		    SET @START_TIME = GETDATE()

		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID	*/
		          , @LangType		NVARCHAR(2)		/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#TEST_PJW'))
		        BEGIN
		            DROP TABLE #TEST_PJW
		        END

		    /* 데이터 조회 */
		    SELECT ROW_NUMBER() OVER( ORDER BY A.INOUT_SEQ, A.ITEM_CODE, A.PROJECT_NO, CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                                                                       WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                                                                       WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                                                                           ELSE D2.CUSTOM_NAME
		                                                                   END ASC)                         AS SEQ
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)                                                                                   AS ITEM_NAME
		         , C1.ITEM_NAME1
		         , C1.SPEC                                                                                  AS SPEC
		         , A.ORDER_UNIT                                                                             AS ORDER_UNIT
		         , A.TRNS_RATE                                                                              AS TRNS_RATE
		         , A.INOUT_TYPE_DETAIL
		         --, M1.CODE_NAME                                                                             AS INOUT_TYPE_DETAIL
		         , (CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)                                                                                   AS CUSTOM_NAME
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                                                                   AS INOUT_DATE
		         , A.ORDER_UNIT_Q                                                                           AS ORDER_UNIT_Q
		         , A.INOUT_Q                                                                                AS INOUT_Q
		         , A.ORDER_UNIT_P                                                                           AS ORDER_UNIT_P
		         , A.ORDER_UNIT_O                                                                           AS ORDER_UNIT_O
		         , A.INOUT_TAX_AMT                                                                          AS INOUT_TAX_AMT
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)                                                       AS TOT_INOUT_AMT
		         , M2.CODE_NAME                                                                             AS ITEM_STATUS
		         , C4.TREE_NAME                                                                             AS WH_CODE
		         , C3.DIV_NAME                                                                              AS DIV_NAME
		         , M3.CODE_NAME                                                                             AS INOUT_PRSN
		         , A.ISSUE_REQ_NUM                                                                          AS ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ                                                                          AS ISSUE_REQ_SEQ
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN LEFT(LOT_NO, CHARINDEX('-', LOT_NO)-1)
		                ELSE LOT_NO
		           END                                                                                      AS LOT_NO
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN RIGHT(LOT_NO,CHARINDEX('-', REVERSE(LOT_NO))-1)
		                ELSE ''
		           END                                                                                      AS SN_NO
		         , A.PROJECT_NO                                                                             AS PROJECT_NO
		         , (CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                     ELSE D2.CUSTOM_NAME
		             END)                                                                                   AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q                                                                              AS ACCOUNT_Q
		         , A.INOUT_NUM                                                                              AS INOUT_NUM
		         , A.INOUT_SEQ                                                                              AS INOUT_SEQ
		         , M4.CODE_NAME                                                                             AS CREATE_LOC
		         , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                          AS SORT
		         , A.INSPEC_NUM
		         , A.REMARK
		         , A.ACCOUNT_YNC
		    INTO #TEST_PJW
		    FROM              BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		           LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                               AND C1.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BPR100T C2  WITH (NOLOCK) ON C2.COMP_CODE      = C1.COMP_CODE
		                                               AND C2.ITEM_CODE      = C1.ITEM_GROUP
		           LEFT  JOIN BOR120T C3  WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                               AND C3.DIV_CODE       = A.DIV_CODE
		           LEFT  JOIN BSA220T C4  WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
		                                               AND C4.TYPE_LEVEL     = A.DIV_CODE
		                                               AND C4.TREE_CODE      = A.WH_CODE
		           LEFT  JOIN BCM100T D1  WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
		                                               AND D1.CUSTOM_CODE    = A.INOUT_CODE
		           LEFT  JOIN BCM100T D2  WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
		                                               AND D2.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                               AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                               AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = A.COMP_CODE
		                                               AND M2.MAIN_CODE      = 'B021'                    /* 품목상태 */
		                                               AND M2.SUB_CODE       = A.ITEM_STATUS
		           LEFT  JOIN BSA100T M3  WITH (NOLOCK) ON M3.COMP_CODE      = A.COMP_CODE
		                                               AND M3.MAIN_CODE      = 'B024'                    /* 수불담당 */
		                                               AND M3.SUB_CODE       = A.INOUT_PRSN
		           LEFT  JOIN BSA100T M4  WITH (NOLOCK) ON M4.COMP_CODE      = A.COMP_CODE
		                                               AND M4.MAIN_CODE      = 'B031'                    /* 생성경로 */
		                                               AND M4.SUB_CODE       = A.CREATE_LOC
		           LEFT  JOIN BSA210T E  WITH (NOLOCK)  ON E.COMP_CODE 	     = A.COMP_CODE
		                                               AND E.TYPE_LEVEL 	 = A.DIV_CODE
		                                               AND E.TREE_CODE 	     = A.DEPT_CODE
		     WHERE A.COMP_CODE             = @CompCode
		       AND A.CREATE_LOC            = '1'
		       AND A.INOUT_TYPE            = '3'
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE              = #{DIV_CODE}					/* 사업장 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
		       AND A.INOUT_PRSN            = #{TXT_INOUT_PRSN}				/* 수불담당 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
		       AND A.INOUT_TYPE_DETAIL     =#{INOUT_TYPE_DETAIL}			/* 반품유형 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_WH_CODE)">
		       AND A.WH_CODE               = #{TXT_WH_CODE}					/* 창고 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		       AND D1.AGENT_TYPE           = #{AGENT_TYPE}					/* 거래처분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
		       AND D1.AREA_TYPE            = #{TXT_AREA_TYPE}				/* 지역 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		       AND A.INOUT_DATE           &gt;= #{FR_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		       AND A.INOUT_DATE           &lt;= #{TO_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_NUM)">
		       AND A.INOUT_NUM            &gt;= #{FR_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_NUM)">
		       AND A.INOUT_NUM            &lt;= #{TO_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_Q)">
		       AND A.INOUT_Q              &gt;= #{FR_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_Q)">
		       AND A.INOUT_Q              &lt;= #{TO_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE          LIKE #{ITEM_CODE} + '%'				/* 품목코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
		       AND C1.ITEM_LEVEL1          = #{TXTLV_L1}					/* 대분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
		       AND C1.ITEM_LEVEL2          = #{TXTLV_L2}					/* 중분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
		       AND C1.ITEM_LEVEL3          = #{TXTLV_L3}					/* 소분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DIV_ITEM_GROUP_G)">
		       AND  C1.ITEM_GROUP       LIKE #{DIV_ITEM_GROUP_G} + '%'		/* 대표모델 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE         LIKE #{CUSTOM_CODE} + '%'			/* 거래처코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)               LIKE #{CUSTOM_NAME} + '%'			/* 거래처명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_LOT_NO)">
		       AND A.LOT_NO             LIKE #{TXT_LOT_NO} + '%'			/* Lot No */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">					/*프로젝트번호*/
		        AND    A.PROJECT_NO = #{PJT_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">				/* 반품관리번호 */
		        AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
		       </if>

		    UNION ALL
		    
		    SELECT ROW_NUMBER() OVER( ORDER BY A.INOUT_SEQ, A.ITEM_CODE, A.PROJECT_NO, C.WH_CELL_NAME ASC)              AS SEQ
		         , A.ITEM_CODE
		         , B.ITEM_NAME
		         , B.ITEM_NAME1
		         , B.SPEC
		         , A.ORDER_UNIT
		         , A.TRNS_RATE
		         , A.TEMPC_01                                                                              AS INOUT_TYPE_DETAIL
		         , C.WH_CELL_NAME                                                                          AS CUSTOM_NAME
		         , A.INOUT_DATE
		         , A.INOUT_Q                                                                               AS ORDER_UNIT_Q
		         , A.INOUT_Q
		         , A.ORDER_UNIT_P
		         , A.ORDER_UNIT_O
		         , A.INOUT_TAX_AMT
		         , A.ORDER_UNIT_O + A.INOUT_TAX_AMT                                                        AS TOT_INOUT_AMT
		         , A.ITEM_STATUS
		         , D.TREE_NAME                                                                             AS WH_CODE
		         , C3.DIV_NAME                                                                             AS DIV_NAME
		         , M3.CODE_NAME                                                                            AS INOUT_PRSN
		         , ''                                                                                      AS ISSUE_REQ_NUM
		         , NULL                                                                                    AS ISSUE_REQ_SEQ
		         --, A.LOT_NO
		         --, NULL
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN LEFT(LOT_NO, CHARINDEX('-', LOT_NO)-1)
		                ELSE LOT_NO
		           END                                                                                      AS LOT_NO
		         , CASE WHEN CHARINDEX('-', LOT_NO) != 0 THEN RIGHT(LOT_NO,CHARINDEX('-', REVERSE(LOT_NO))-1)
		                ELSE ''
		           END                                                                                      AS SN_NO				 
		         , A.PROJECT_NO
		         , C.WH_CELL_NAME                                                                          AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , M4.CODE_NAME                                                                            AS CREATE_LOC
		         , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                         AS SORT
		         , A.INSPEC_NUM
		         , A.REMARK
		         , A.ACCOUNT_YNC
		      FROM BTR100T A WITH (NOLOCK)
		      LEFT JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE 
		                                        AND B.ITEM_CODE      = A.ITEM_CODE
		      LEFT JOIN BSA225T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE 
		                                        AND C.DIV_CODE       = A.DIV_CODE 
		                                        AND C.WH_CODE        = A.WH_CODE 
		                                        AND C.WH_CELL_CODE   = A.WH_CELL_CODE
		      LEFT JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
		                                        AND C1.ITEM_CODE     = A.ITEM_CODE
		      LEFT JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE     = C1.COMP_CODE
		                                        AND C2.ITEM_CODE     = C1.ITEM_GROUP
		      LEFT JOIN BOR120T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE 
		                                        AND C3.DIV_CODE      = A.DIV_CODE
		      LEFT JOIN BSA220T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE 
		                                        AND D.TYPE_LEVEL     = A.DIV_CODE 
		                                        AND D.TREE_CODE      = A.INOUT_CODE
		      LEFT JOIN BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE
		                                        AND D1.CUSTOM_CODE   = A.WH_CELL_CODE
		      LEFT JOIN BSA225T D2 WITH (NOLOCK) ON D2.COMP_CODE     = A.COMP_CODE 
		                                        AND D2.DIV_CODE      = A.DIV_CODE 
		                                        AND D2.WH_CODE       = A.INOUT_CODE 
		                                        AND D2.WH_CELL_CODE   = A.INOUT_CODE_DETAIL
		           LEFT  JOIN BCM100T D3  WITH (NOLOCK) ON D3.COMP_CODE      = A.COMP_CODE
		                                               AND D3.CUSTOM_CODE    = A.WH_CELL_CODE
		      LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
		                                        AND M1.MAIN_CODE     = 'S008'                    /* 반품유형 */
		                                        AND M1.SUB_CODE      = A.INOUT_TYPE_DETAIL
		      LEFT JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
		                                        AND M2.MAIN_CODE     = 'B021'                    /* 품목상태 */
		                                        AND M2.SUB_CODE      = A.ITEM_STATUS
		      LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE     = A.COMP_CODE
		                                        AND M3.MAIN_CODE     = 'B024'                    /* 수불담당 */
		                                        AND M3.SUB_CODE      = A.INOUT_PRSN
		      LEFT JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE     = A.COMP_CODE
		                                        AND M4.MAIN_CODE     = 'B031'                    /* 생성경로 */
		                                        AND M4.SUB_CODE      = A.CREATE_LOC
		     WHERE A.COMP_CODE         = 'MASTER'
		       AND A.DIV_CODE          = '01'
		       --고정 조건
		       AND A.INOUT_TYPE        = '2'
		       AND A.INOUT_METH        = '3'
		       AND A.CREATE_LOC        = '4'
		       AND A.INOUT_TYPE_DETAIL = '99'
		       AND A.INOUT_CODE        = '1700'
		       AND A.INOUT_CODE_DETAIL = '10'
		       AND ISNULL(A.INSPEC_NUM,'') != ''
		       --고정 조건
		       <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
		       AND A.INOUT_PRSN            = #{TXT_INOUT_PRSN}				/* 수불담당 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
		       AND A.INOUT_TYPE_DETAIL     = #{INOUT_TYPE_DETAIL}			/* 반품유형 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_WH_CODE)">
		       AND A.INOUT_CODE            = #{TXT_WH_CODE}					/* 창고 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		       AND D1.AGENT_TYPE           = #{AGENT_TYPE}					/* 거래처분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
		       AND D1.AREA_TYPE            = #{TXT_AREA_TYPE}				/* 지역 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		       AND A.INOUT_DATE           &gt;= #{FR_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		       AND A.INOUT_DATE           &lt;= #{TO_INOUT_DATE}			/* 반품일 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_NUM)">
		       AND A.INOUT_NUM            &gt;= #{FR_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_NUM)">
		       AND A.INOUT_NUM            &lt;= #{TO_INOUT_NUM}				/* 반품번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_Q)">
		       AND A.INOUT_Q              &gt;= #{FR_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_Q)">
		       AND A.INOUT_Q              &lt;= #{TO_INOUT_Q}				/* 반품량 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE          LIKE #{ITEM_CODE} + '%'				/* 품목코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
		       AND C1.ITEM_LEVEL1          = #{TXTLV_L1}					/* 대분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
		       AND C1.ITEM_LEVEL2          = #{TXTLV_L2}					/* 중분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
		       AND C1.ITEM_LEVEL3          = #{TXTLV_L3}					/* 소분류 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DIV_ITEM_GROUP_G)">
		       AND  C1.ITEM_GROUP       LIKE #{DIV_ITEM_GROUP_G} + '%'		/* 대표모델 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		             END)               LIKE #{ITEM_GROUP_NAME} + '%'		/* 대표모델명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.WH_CELL_CODE       LIKE #{CUSTOM_CODE} + '%'			/* 거래처코드 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND C.WH_CELL_NAME       LIKE #{CUSTOM_NAME} + '%'			/* 거래처명 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TXT_LOT_NO)">
		       AND A.LOT_NO             LIKE #{TXT_LOT_NO} + '%'			/* Lot No */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">					/* 프로젝트번호 */
		        AND    A.PROJECT_NO = #{PJT_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">				/* 반품관리번호 */
		        AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
		       </if>

		    --ORDER BY 1, 2, 3, 4

		    --가공된 데이터 조회
		    SELECT A.SEQ
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.ITEM_NAME1
		         , A.SPEC
		         , A.ORDER_UNIT
		         , A.TRNS_RATE
		         , A.INOUT_TYPE_DETAIL
		         , A.CUSTOM_NAME
		         , A.INOUT_DATE
		         , A.ORDER_UNIT_Q
		         , A.INOUT_Q
		         , A.ORDER_UNIT_P
		         , A.ORDER_UNIT_O
		         , A.INOUT_TAX_AMT
		         , A.TOT_INOUT_AMT
		         , A.ITEM_STATUS
		         , A.WH_CODE
		         , A.DIV_NAME
		         , A.INOUT_PRSN
		         , A.ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ
		         , A.LOT_NO
		         , A.SN_NO
		         , A.PROJECT_NO
		         , A.SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.CREATE_LOC
		         , A.SORT
		         , A.INSPEC_NUM
		         , A.ACCOUNT_YNC
		         , STUFF((SELECT CASE WHEN ISNULL(REMARK, '') != '' THEN ', ' + REMARK
		                              ELSE ''
		                         END AS [text()]
		                    FROM #TEST_PJW B
		                   WHERE B.INSPEC_NUM = A.INSPEC_NUM
		                   GROUP BY REMARK
		                   FOR XML PATH('')), 1, 2, '') AS REMARK
		      FROM #TEST_PJW A
			  ORDER BY A.CUSTOM_NAME, A.SEQ, A.ITEM_CODE
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>