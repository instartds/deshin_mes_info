<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_agc620ukr_mitServiceImpl">

	<select id="s_agc620ukr_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @DateMonth      NVARCHAR(06)   /* 조회월            */
		          , @ItemAccount    NVARCHAR(02)   /* 품목계정            */
				  , @ItemCode       NVARCHAR(20)   /* 품목코드            */
				  
				  
		          , @UserId         NVARCHAR(100)  /* 사용자ID            */
		          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @DateMonth   = #{DATE_MONTH}
		    SET @ItemAccount = #{ITEM_ACCOUNT}
		    SET @ItemCode    = #{ITEM_CODE}
		
		    SET @UserId     = #{S_USER_ID}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 조회 */
		    SELECT A.COMP_CODE                                      /* 법인코드           */
		         , A.DIV_CODE                                       /* 사업장             */
		         , A.DATE_MONTH                                     /* 조회월             */ 
		         , C2.ITEM_ACCOUNT                                  /* 계정               */
		         , A.WH_CODE                                        /* 창고               */
		         , A.WH_CELL_CODE                                   /* 창고Cell           */
		         , A.ITEM_CODE                                      /* 품목               */
		         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		            END AS ITEM_NAME                                /* 품목명             */
		         , C1.SPEC                                          /* 규격               */
		         , C2.ORDER_UNIT                                    /* 단위               */
		         , A.LOT_NO                                         /* LOT NO             */
		         , A.STOCK_Q                                        /* 재고수량           */
		         , A.EXPIRATION_DAY                                 /* 유효기간           */
		         , A.INOUT_DATE                                     /* 입고일자           */
		         , A.EXPIRATION_DATE                                /* 유효기간           */
		         , A.OVER_PERIOD                                    /* 경과기간           */
		         , A.STOCK_P                                        /* 단가               */
		         , A.STOCK_I                                        /* 재고금액           */
		         , A.REMAIN_MONTH                                   /* 남은기간(개월)     */
		      FROM            S_AGC620T_MIT A  WITH (NOLOCK)
		           INNER JOIN BPR100T       C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                                    AND C1.ITEM_CODE   = A.ITEM_CODE
		           INNER JOIN BPR200T       C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                                    AND C2.DIV_CODE    = A.DIV_CODE
		                                                    AND C2.ITEM_CODE   = A.ITEM_CODE
		     WHERE A.COMP_CODE     = @CompCode   
		       AND A.DIV_CODE      = @DivCode    
		       AND A.DATE_MONTH    = @DateMonth
		   	   AND ((@ItemAccount  = NULL) OR (@ItemAccount = '') OR (C2.ITEM_ACCOUNT = @ItemAccount))
		   	   AND ((@ItemCode     = NULL) OR (@ItemCode    = '') OR (A.ITEM_CODE     = @ItemCode   ))
    
		   	   <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		   	   AND A.WH_CODE = #{WH_CODE}
		   	   </if>
		      ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.INOUT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_agc620ukr_mitServiceImpl.selectCheckNewDataList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @DateMonth      NVARCHAR(06)   /* 조회월              */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @DateMonth   = #{DATE_MONTH}
		
		    SELECT COUNT(*) AS CNT
		      FROM S_AGC620T_MIT WITH (NOLOCK)
		     WHERE COMP_CODE     = @CompCode   
		       AND DIV_CODE      = @DivCode    
		       AND DATE_MONTH    = @DateMonth
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<update  id="s_agc620ukr_mitServiceImpl.insertList" parameterType="Map">
			DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @DateMonth      NVARCHAR(06)   /* 조회월            */
		
		          , @UserId         NVARCHAR(100)  /* 사용자ID            */
		          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @DateMonth   = #{DATE_MONTH}
		
		    SET @UserId      = #{S_USER_ID}
		
		    
	   		INSERT INTO S_AGC620T_MIT
			(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, DATE_MONTH                              --조회시작월
				, ITEM_CODE                               --품목코드
				, LOT_NO                                  --LOT NO
				, WH_CODE                                 --창고
				, WH_CELL_CODE                            --창고Cell
				, EXPIRATION_DAY                          --유효기간
				, INOUT_DATE                              --입고일자
				, STOCK_Q                                 --재고수량
				, STOCK_P                                 --단가
				, STOCK_I                                 --재고금액
				, EXPIRATION_DATE                         --유효일자
				, OVER_PERIOD                             --경과기간
				, REMAIN_MONTH                            --남은기간(개월)
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			)
		    SELECT A.COMP_CODE                                      /* 법인코드           */
		         , A.DIV_CODE                                       /* 사업장             */
		         , @DateMonth AS DATE_MONTH                         /* 조회월             */ 
		         , A.ITEM_CODE                                      /* 품목               */
		         , A.LOT_NO                                         /* LOT NO             */
		         , A.WH_CODE                                        /* 창고               */
		         , A.WH_CELL_CODE                                   /* 창고Cell           */
		         , ISNULL(C1.EXPIRATION_DAY,0) AS EXPIRATION_DAY    /* 유효기간           */
		         , A.INOUT_DATE                                     /* 제조일자           */
		         , A.STOCK_Q                                        /* 재고수량           */
		         , (CASE WHEN A.STOCK_Q = 0
                         THEN 0
                         ELSE A.STOCK_I / A.STOCK_Q 
                     END) AS STOCK_P                                /* 단가               */
		         , A.STOCK_I                                        /* 재고금액           */
		         , ISNULL(A.MAKE_EXP_DATE,'') AS EXPIRATION_DATE    /* 유효일자           */
		         , DATEDIFF(DAY, CONVERT(DATETIME, A.INOUT_DATE), DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, @DateMonth + '01')))) / 365.0 AS OVER_PERIOD      /* 경과기간           */
		         , CASE WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &lt;= 0  THEN '경과'
                        WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &gt;= 1 AND
                             (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &lt;= 6  THEN '6개월이내'
                        WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &gt;= 7 AND
                             (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &lt;= 12 THEN '12개월이내'
                        WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &gt;= 13 AND
                             (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &lt;= 18 THEN '18개월이내'
                        WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &gt;= 19 AND
                             (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &lt;= 24 THEN '24개월이내'
                        WHEN (CASE WHEN ISNULL(A.MAKE_EXP_DATE,'') = '' THEN 25 ELSE DATEDIFF(MM, DATEADD(DD, -1, DATEADD(MM, 1, CONVERT(DATETIME, @DateMonth+'01'))), ISNULL(A.MAKE_EXP_DATE,'')) END) &gt;= 25 THEN '3년이내'
                                                                                                                                                                                                             ELSE ''
                    END AS REMAIN_MONTH                             /* 남은기간(개월)     */
		          , @UserId
		          , GETDATE()
		          , @UserId
		          , GETDATE()
               FROM (SELECT A.COMP_CODE
                          , A.DIV_CODE
                          , A.WH_CODE
                          , A.WH_CELL_CODE
                          , A.ITEM_CODE
                          , A.LOT_NO
                          , A.STOCK_Q
                          , A.STOCK_I
                          , (SELECT MIN(INOUT_DATE)
                              FROM BTR100T WITH (NOLOCK)
                             WHERE COMP_CODE  = A.COMP_CODE
                               AND DIV_CODE   = A.DIV_CODE
                               AND INOUT_TYPE IN ('1','3')
                               AND ITEM_CODE  = A.ITEM_CODE
                               AND LOT_NO     = A.LOT_NO) AS INOUT_DATE
                          , (SELECT MIN(MAKE_EXP_DATE)
                               FROM BTR100T WITH (NOLOCK)
                              WHERE COMP_CODE  = A.COMP_CODE
                                AND DIV_CODE   = A.DIV_CODE
                                AND INOUT_TYPE IN ('1','3')
                                AND ITEM_CODE  = A.ITEM_CODE
                                AND LOT_NO     = A.LOT_NO) AS MAKE_EXP_DATE
                       FROM            BIV250TV A WITH (NOLOCK)
           	 	            INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
           	 	                                               AND C1.ITEM_CODE   = A.ITEM_CODE
           	 	            INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
           	 	                                               AND C2.DIV_CODE    = A.DIV_CODE
           		                                               AND C2.ITEM_CODE   = A.ITEM_CODE
		              WHERE A.COMP_CODE      = @CompCode
		                AND A.DIV_CODE       = @DivCode
                        AND A.BASIS_YYYYMM   = @DateMonth
                        AND A.STOCK_Q       != 0
           		        AND C2.ITEM_ACCOUNT IN ('00','10')) A
		           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                              AND C1.ITEM_CODE   = A.ITEM_CODE
		           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                              AND C2.DIV_CODE    = A.DIV_CODE
		                                              AND C2.ITEM_CODE   = A.ITEM_CODE
		         
	</update>
	<update  id="s_agc620ukr_mitServiceImpl.updateList" parameterType="Map">
		UPDATE  S_AGC620T_MIT
		   SET    EXPIRATION_DAY                 = #{EXPIRATION_DAY}
				, STOCK_Q                        = #{STOCK_Q}
				, STOCK_P                        = #{STOCK_P}
				, STOCK_I                        = #{STOCK_I}
				, EXPIRATION_DATE                = #{EXPIRATION_DATE}
				, OVER_PERIOD                    = #{OVER_PERIOD}
				, REMAIN_MONTH                   = #{REMAIN_MONTH}
				, UPDATE_DB_USER                 = #{S_USER_ID}
				, UPDATE_DB_TIME                 = GETDATE()
	    WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   DATE_MONTH                       = #{DATE_MONTH}
		  AND   ITEM_CODE                        = #{ITEM_CODE}
		  AND   LOT_NO                           = #{LOT_NO}
          AND   WH_CODE                          = #{WH_CODE}
		  AND   WH_CELL_CODE                     = #{WH_CELL_CODE}
		  AND   INOUT_DATE                       = #{INOUT_DATE}
	</update>
	<update id="s_agc620ukr_mitServiceImpl.deleteList" parameterType="Map">
		DELETE  FROM   S_AGC620T_MIT
	    WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   DATE_MONTH                       = #{DATE_MONTH}
		  AND   ITEM_CODE                        = #{ITEM_CODE}
		  AND   LOT_NO                           = #{LOT_NO}
		  AND   WH_CODE                          = #{WH_CODE}
		  AND   WH_CELL_CODE                     = #{WH_CELL_CODE}
		  AND   INOUT_DATE                       = #{INOUT_DATE}
	</update>
		<update id="s_agc620ukr_mitServiceImpl.deleteAll" parameterType="Map">
		DELETE  FROM   S_AGC620T_MIT
	    WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   DATE_MONTH                       = #{DATE_MONTH}
	</update>
</mapper>