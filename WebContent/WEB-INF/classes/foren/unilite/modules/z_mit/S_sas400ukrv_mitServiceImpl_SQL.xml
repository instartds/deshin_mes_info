<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sas400ukrv_mitServiceImpl">
	<select id="s_sas400ukrv_mitServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @SaleDate       NVARCHAR(08)   /* 매출일(상단)        */
	          , @EntryYn        NVARCHAR(01)   /* 유지보수 등록 여부*/
	
	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @DivCode  = #{DIV_CODE}
	    SET @SaleDate = #{SALE_DATE}
	    SET @EntryYn  = #{ENTRY_YN}
	    
	    SET @UserId   = #{S_USER_ID}
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    IF(@EntryYn ='N')
	    BEGIN
	    	/* 미등록인 경우 */
	        /* 조회 */
	        SELECT A.COMP_CODE                                      /* 법인코드       */
	             , A.DIV_CODE                                       /* 사업장         */
	             , A.CUSTOM_CODE                                    /* 거래처         */
			     , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			            WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                                ELSE C1.CUSTOM_NAME
			        END AS CUSTOM_NAME                              /* 거래처명       */
	             , @SaleDate AS SALE_DATE                           /* 매출일         */
	             , A.RECEIPT_NUM
	             , ISNULL(A.SALE_CUST_CD, A.CUSTOM_CODE)  
	             						    AS  SALE_CUST_CD        /* 매출거래처         */
			     , CASE WHEN @RefItem = '1' THEN CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME1 ELSE C1.CUSTOM_NAME1 END
			            WHEN @RefItem = '2' THEN CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME2 ELSE C1.CUSTOM_NAME2 END
			                                ELSE CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME  ELSE C1.CUSTOM_NAME END
			        END                     AS SALE_CUST_NAME       /* 매출거래처명       */
	             , @SaleDate AS SALE_DATE                           /* 매출일         */
	             , A.ITEM_CODE                                      /* 품목코드       */
	             , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			            WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                                ELSE C2.ITEM_NAME
			        END                     AS ITEM_NAME            /* 품목명         */
	             , SUM(ISNULL(C.AS_AMT ,0)) AS AS_AMT               /* 공급가액       */
	             , SUM(ISNULL(C.TAX_AMT,0)) AS TAX_AMT              /* 부가세         */
	             , SUM(ISNULL(C.TOT_AMT,0)) AS TOT_AMT              /* 총액           */
	             , SUM(ISNULL(C.AS_AMT ,0)) AS AS_PRICE				/* 단가           */
	             , B.REPAIR_NUM                                     /* 수리번호       */
	             , '22' AS INOUT_TYPE_DETAIL                        /* 출고유형 S007:출고유형 22:AS유상 */
	             , ''   AS BILL_NUM                                 /* 매출번호       */
	             , NULL AS BILL_SEQ                                 /* 매출순번       */
	             , ''   AS PROJECT_NO                               /* 프로젝트번호   */
	             , ''   AS PJT_NAME                                 /* 프로젝트명     */
	             , C3.SUB_CODE				AS SALE_PRSN				
	             , 1						AS SALE_Q
	             , '87'						AS ORDER_TYPE
	             , '10'						AS BILL_TYPE
	             , ''						AS INOUT_NUM
	             , ''						AS INOUT_SEQ
	             , C2.SALE_UNIT	    		AS SALE_UNIT
	             , ''						AS WH_CODE
	             , '1'						AS TAX_TYPE
	             , '2'						AS PRICE_YN
	             , A.DIV_CODE				AS OUT_DIV_CODE
	             , C2.STOCK_UNIT
	             , 'KRW'					AS MONEY_UNIT
	             , 1						AS EXCHG_RATE_O
	             , '1'						AS TAX_IN_OUT  -- SSA100T.TAX_TYPE
	             , C1.TAX_CALC_TYPE
	             , C1.AGENT_TYPE 
	             , C1.WON_CALC_BAS
	             , C1.TAX_TYPE
	          FROM            SAS100T A  WITH (NOLOCK)
	               INNER JOIN SAS300T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                  AND B.DIV_CODE     = A.DIV_CODE
	                                                  AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	               INNER JOIN SAS310T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
	                                                  AND C.DIV_CODE     = B.DIV_CODE
	                                                  AND C.REPAIR_NUM   = B.REPAIR_NUM
	               LEFT  JOIN SSA110T D  WITH (NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
	                                                  AND D.DIV_CODE     = B.DIV_CODE
	                                                  AND D.ORDER_NUM    = B.REPAIR_NUM
	               INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
	                                                  AND C1.CUSTOM_CODE = A.CUSTOM_CODE
	               INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
	                                                  AND C2.ITEM_CODE   = A.ITEM_CODE
	               LEFT  JOIN BSA100T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
	                                                  AND C3.MAIN_CODE   = 'S010'
	                                                  AND C3.USE_YN      = 'Y'
	                                                  AND C3.REF_CODE5   = A.RECEIPT_PRSN    
	               LEFT JOIN BCM100T C4 WITH (NOLOCK)  ON C4.COMP_CODE   = A.COMP_CODE
	                                                  AND C4.CUSTOM_CODE = A.SALE_CUST_CD                      
	         WHERE A.COMP_CODE     = @CompCode
	           AND A.DIV_CODE      = @DivCode
	           AND B.COST_YN       = 'Y'
	           AND A.AS_STATUS     = '90'       --출고
	           AND B.INSPEC_FLAG   = 'Y'        --검사완료
	           AND ISNULL(D.ORDER_NUM,'') = ''  --매출미등록
	       	   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(REPAIR_DATE_FR)">
	           AND B.REPAIR_DATE  &gt;= #{REPAIR_DATE_FR}
	           </if>
	           <if test="@foren.Ognl@isNotEmpty(REPAIR_DATE_TO)">
	           AND B.REPAIR_DATE  &lt;= #{REPAIR_DATE_TO}
	           </if>
	         GROUP BY A.COMP_CODE  , A.DIV_CODE
	                , A.CUSTOM_CODE, C1.CUSTOM_NAME, C1.CUSTOM_NAME1, C1.CUSTOM_NAME2
	                , A.RECEIPT_NUM, A.SALE_CUST_CD, C4.CUSTOM_NAME, C4.CUSTOM_NAME1, C4.CUSTOM_NAME2
					, C1.TAX_CALC_TYPE  , C1.AGENT_TYPE 
	                , A.ITEM_CODE  , C2.ITEM_NAME  , C2.ITEM_NAME1  , C2.ITEM_NAME2
	                , B.REPAIR_NUM , C3.SUB_CODE   ,C2.STOCK_UNIT   , C1.WON_CALC_BAS
	                , C1.TAX_TYPE
	                , C2.SALE_UNIT
	         ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE
		END
		ELSE
		BEGIN
	    /* 등록인 경우 */
	        /* 조회 */
	        SELECT A.COMP_CODE                                      /* 법인코드       */
	             , A.DIV_CODE                                       /* 사업장         */
	             , A.CUSTOM_CODE                                    /* 거래처         */
			     , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			            WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                                ELSE C1.CUSTOM_NAME
			        END AS CUSTOM_NAME                              /* 거래처명       */
			     , A.RECEIPT_NUM
	             , ISNULL(A.SALE_CUST_CD, A.CUSTOM_CODE)  
	             						    AS  SALE_CUST_CD        /* 매출거래처         */
			     , CASE WHEN @RefItem = '1' THEN CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME1 ELSE C1.CUSTOM_NAME1 END
			            WHEN @RefItem = '2' THEN CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME2 ELSE C1.CUSTOM_NAME2 END
			                                ELSE CASE WHEN A.SALE_CUST_CD IS NOT NULL THEN C4.CUSTOM_NAME  ELSE C1.CUSTOM_NAME END
			        END                     AS SALE_CUST_NAME       /* 매출거래처명       */
	             , E.SALE_DATE                                      /* 매출일         */
	             , A.ITEM_CODE                                      /* 품목코드       */
	             , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			            WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                                ELSE C2.ITEM_NAME
			        END AS ITEM_NAME                                /* 품목명         */
	             , SUM(ISNULL(C.AS_AMT ,0)) AS AS_AMT               /* 공급가액       */
	             , SUM(ISNULL(C.TAX_AMT,0)) AS TAX_AMT              /* 부가세         */
	             , SUM(ISNULL(C.TOT_AMT,0)) AS TOT_AMT              /* 총액           */
	             , SUM(ISNULL(C.AS_AMT ,0)) AS AS_PRICE				/* 단가           */
	             , B.REPAIR_NUM                                     /* 수리번호       */
	             , D.INOUT_TYPE_DETAIL                              /* 출고유형       */
	             , D.BILL_NUM                                       /* 매출번호       */
	             , D.BILL_SEQ                                       /* 매출순번       */
	             , D.PROJECT_NO                                     /* 프로젝트번호   */
	             , C3.PJT_NAME				AS PJT_NAME             /* 프로젝트명     */
	             
	             , E.SALE_PRSN				
	             , D.SALE_Q
	             , E.ORDER_TYPE				AS ORDER_TYPE
	             , E.BILL_TYPE				AS BILL_TYPE
	             , D.INOUT_NUM				AS INOUT_NUM
	             , D.INOUT_SEQ				AS INOUT_SEQ
	             , D.SALE_UNIT				AS SALE_UNIT
	             , D.WH_CODE				AS WH_CODE
	             , D.TAX_TYPE				AS TAX_TYPE
	             , D.PRICE_YN				
	             , D.OUT_DIV_CODE			
	             , C2.STOCK_UNIT
	             , E.MONEY_UNIT
	             , E.EXCHG_RATE_O
	             , E.TAX_TYPE  				AS TAX_IN_OUT   	
	             , E.TAX_CALC_TYPE
	             , C2.SALE_UNIT
	          FROM            SAS100T A  WITH (NOLOCK)
	               INNER JOIN SAS300T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                  AND B.DIV_CODE     = A.DIV_CODE
	                                                  AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	               INNER JOIN SAS310T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
	                                                  AND C.DIV_CODE     = B.DIV_CODE
	                                                  AND C.REPAIR_NUM   = B.REPAIR_NUM
	               INNER JOIN SSA110T D  WITH (NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
	                                                  AND D.DIV_CODE     = B.DIV_CODE
	                                                  AND D.ORDER_NUM    = B.REPAIR_NUM
	               INNER JOIN SSA100T E  WITH (NOLOCK) ON E.COMP_CODE    = D.COMP_CODE
	                                                  AND E.DIV_CODE     = D.DIV_CODE
	                                                  AND E.BILL_NUM     = D.BILL_NUM
	               INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
	                                                  AND C1.CUSTOM_CODE = A.CUSTOM_CODE
	               INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
	                                                  AND C2.ITEM_CODE   = A.ITEM_CODE
	               LEFT  JOIN BCM600T C3 WITH (NOLOCK) ON C3.COMP_CODE   = D.COMP_CODE
		                                              AND C3.PJT_CODE    = D.PROJECT_NO
		           LEFT  JOIN BCM100T C4 WITH (NOLOCK) ON C4.COMP_CODE   = A.COMP_CODE
	                                                  AND C4.CUSTOM_CODE = A.SALE_CUST_CD                                   
	         WHERE A.COMP_CODE     = @CompCode
	           AND A.DIV_CODE      = @DivCode
	           AND B.COST_YN       = 'Y'
	           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(REPAIR_DATE_FR)">
	           AND E.SALE_DATE  &gt;= #{REPAIR_DATE_FR}
	           </if>
	           <if test="@foren.Ognl@isNotEmpty(REPAIR_DATE_TO)">
	           AND E.SALE_DATE  &lt;= #{REPAIR_DATE_TO}
	           </if>
	         GROUP BY A.COMP_CODE  , A.DIV_CODE    
	                , A.CUSTOM_CODE, C1.CUSTOM_NAME, C1.CUSTOM_NAME1, C1.CUSTOM_NAME2
	                , A.RECEIPT_NUM, A.SALE_CUST_CD, C4.CUSTOM_NAME, C4.CUSTOM_NAME1, C4.CUSTOM_NAME2
	                , A.ITEM_CODE  , C2.ITEM_NAME  , C2.ITEM_NAME1  , C2.ITEM_NAME2
	                , B.REPAIR_NUM , E.SALE_PRSN   , C2.STOCK_UNIT
	                , E.SALE_DATE  , E.ORDER_TYPE  , E.BILL_TYPE	,E.MONEY_UNIT
	                , E.EXCHG_RATE_O , E.TAX_TYPE  , E.TAX_CALC_TYPE
	                , D.INOUT_TYPE_DETAIL, D.BILL_NUM, D.BILL_SEQ, D.PROJECT_NO, C3.PJT_NAME
					, D.INOUT_NUM  , D.INOUT_SEQ   , D.SALE_UNIT		, D.WH_CODE		, D.TAX_TYPE		
					, D.SER_NO	   , D.PRICE_YN    , D.OUT_DIV_CODE	    , D.SALE_Q	
					, C2.SALE_UNIT	
	         ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE
		END
	</select>
	<insert id="s_sas400ukrv_mitServiceImpl.insertLogMaster" parameterType="Map">
		/*s_sas400ukrv_mitServiceImpl.insertLogMaster*/
		INSERT INTO L_SSA100T		--TAX_TYPE(포함, 별도), TAX_CALC_TYPE(개별, 통합)
		     ( KEY_VALUE		      , OPR_FLAG
		     , DIV_CODE               , BILL_NUM                , BILL_TYPE               , SALE_DATE               , SALE_CUSTOM_CODE
		     , MONEY_UNIT             , EXCHG_RATE_O            , SALE_AMT_O              , SALE_LOC_AMT_I          
		     , VAT_RATE               , TAX_AMT_O               , SALE_PRSN               , TAX_TYPE                , TAX_CALC_TYPE
		     , REMARK                 , CREATE_LOC              
		     , AGENT_TYPE             , ORDER_TYPE              , COMP_CODE               , TEMPC_01                , TEMPN_01
		     --20200131 추가
		     , PROJECT_NO
		     , UPDATE_DB_USER         , UPDATE_DB_TIME          , INSERT_DB_USER          , INSERT_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}		      , #{SAVE_FLAG}
		     , #{DIV_CODE}            , #{BILL_NUM}             , #{BILL_TYPE}            , #{SALE_DATE}            , #{SALE_CUST_CD}
		     , #{MONEY_UNIT}          , #{EXCHG_RATE_O}         , #{AS_AMT}           	  , #{AS_AMT}               
		     , #{VAT_RATE}            , #{TAX_AMT}              , #{SALE_PRSN}            , #{TAX_IN_OUT}           , #{TAX_CALC_TYPE}
		     , #{REMARK}              , '2'                     
		     , #{AGENT_TYPE}          , #{ORDER_TYPE}           , #{S_COMP_CODE}          , #{REPAIR_NUM}           , 1 
		     , #{PROJECT_NO}
		     , #{S_USER_ID}           , GETDATE()               , #{S_USER_ID}            , GETDATE())
	</insert>

	<insert id="s_sas400ukrv_mitServiceImpl.insertLogDetail" parameterType="Map">
		 /*s_sas400ukrv_mitServiceImpl.insertLogDetail*/
		 INSERT INTO L_SSA110T		--TAX_TYPE(과세, 면세)
		     ( KEY_VALUE		    , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , BILL_NUM              , BILL_SEQ              , INOUT_NUM
		     , INOUT_SEQ            , INOUT_TYPE            , INOUT_TYPE_DETAIL     , ITEM_CODE             , SALE_UNIT
		     , TRANS_RATE           , SALE_Q                , SALE_P                , SALE_AMT_O            , SALE_LOC_AMT_I
		     , TAX_AMT_O            , WH_CODE               , TAX_TYPE              
		     , ORDER_NUM            , SER_NO                , LC_NUM                , PJT_CODE
		     , PUB_NUM              , BEFORE_PUB_NUM        , TO_DIV_CODE           , PRICE_YN              , CUSTOM_CODE
		     , ORDER_PRSN           , OUT_DIV_CODE          , AS_NUM                , ADVAN_YN              , CHANGE_REASON
		     , REMARK               , PRICE_TYPE            , WGT_UNIT              , UNIT_WGT              , VOL_UNIT
		     , UNIT_VOL             , SALE_WGT_Q            , SALE_WGT_P            , SALE_FOR_WGT_P        , SALE_VOL_Q
		     , SALE_VOL_P           , SALE_FOR_VOL_P
		     , PROJECT_NO
			 , UPDATE_DB_USER       , UPDATE_DB_TIME        , INSERT_DB_USER        , INSERT_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}         , #{SAVE_FLAG}
		     , #{COMP_CODE}         , #{DIV_CODE}           , #{BILL_NUM}           , 1          			, #{INOUT_NUM}
		     , #{INOUT_SEQ}         , '2'     				, #{INOUT_TYPE_DETAIL}  , #{ITEM_CODE}          , #{SALE_UNIT}
		     , 1                    , #{SALE_Q}             , #{AS_PRICE}           , #{AS_AMT}         	, #{AS_AMT}
		     , #{TAX_AMT}           , #{WH_CODE}            , #{TAX_TYPE}           
		     , #{REPAIR_NUM}        , 1         			, #{LC_NUM}             , #{PJT_CODE}
		     , #{PUB_NUM}           , #{BEFORE_PUB_NUM}     , #{TO_DIV_CODE}        , #{PRICE_YN}           , #{SALE_CUST_CD}
		     , #{ORDER_PRSN}        , #{OUT_DIV_CODE}       , #{RECEIPT_NUM}             , #{ADVAN_YN}           , #{CHANGE_REASON}
		     , #{REMARK}            , #{PRICE_TYPE}         , #{WGT_UNIT}           , #{UNIT_WGT}           , #{VOL_UNIT}
		     , #{UNIT_VOL}          , #{SALE_WGT_Q}         , #{SALE_WGT_P}         , #{SALE_FOR_WGT_P}     , #{SALE_VOL_Q}
		     , #{SALE_VOL_P}        , #{SALE_FOR_VOL_P}
		     , #{PROJECT_NO}
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE())
	</insert>
	<update id="s_sas400ukrv_mitServiceImpl.updateSaleCustCd" parameterType="Map">
		UPDATE   SAS100T
		   SET   SALE_CUST_CD   = #{SALE_CUST_CD} 
		       , UPDATE_DB_USER = #{S_USER_ID}
		       , UPDATE_DB_TIME = GETDATE() 
		WHERE  COMP_CODE    = #{S_COMP_CODE}
		  AND  DIV_CODE     = #{DIV_CODE}
		  AND  RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>
	<update id="s_sas400ukrv_mitServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Ssa400ukr (
			#{KeyValue	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
<!--			{BillNum	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},  -->
			#{ErrorDesc	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
</mapper>