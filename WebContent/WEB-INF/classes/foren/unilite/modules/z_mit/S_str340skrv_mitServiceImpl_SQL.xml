<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str340skrv_mitServiceImpl">
	<select id="s_str340skrv_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @START_TIME DATETIME
		          , @END_TIME   DATETIME
		          , @DIFF_TIME  NUMERIC(10, 0)

		    SET @START_TIME = GETDATE()

		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID	*/
		          , @LangType		NVARCHAR(2)		/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A.DIV_CODE
		         , A.INOUT_CODE                                                                             AS CUSTOM_CODE
		         , (CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)                                                                                   AS CUSTOM_NAME
                 , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)                                                                                   AS ITEM_NAME
		         , C1.SPEC                                                                                  AS SPEC
		         , A.LOT_NO                                                                                 AS LOT_NO
		         , A.ORDER_UNIT_Q                                                                           AS ORDER_UNIT_Q
		         , A.INOUT_Q                                                                                AS INOUT_Q
		         , A.ORDER_UNIT                                                                             AS ORDER_UNIT
		         , A.TRNS_RATE                                                                              AS TRNS_RATE
		         , A.INOUT_TYPE_DETAIL
		         , B.CUSTOM_COMPL
		         , CASE WHEN A.ACCOUNT_YNC = 'Y' THEN '유상'
		                ELSE '무상'
		           END                                                                                      AS ACCOUNT_YNC
		         , A.INSPEC_NUM
		         , A.WH_CODE
		         , ''                                                                                       AS LOCATION
		         , B.PROC_METHOD --처리방법
		         , B.CONFIRM_YN  --확인여부
		         , B.REMARK      --비고/특이사항
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                                                                   AS INOUT_DATE
		         , A.ORDER_UNIT_P                                                                           AS ORDER_UNIT_P
		         , A.ORDER_UNIT_O                                                                           AS ORDER_UNIT_O
		         , A.INOUT_TAX_AMT                                                                          AS INOUT_TAX_AMT
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)                                                       AS TOT_INOUT_AMT
		         , A.ISSUE_REQ_NUM                                                                          AS ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ                                                                          AS ISSUE_REQ_SEQ
		         , A.PROJECT_NO                                                                             AS PROJECT_NO
		         , A.SALE_CUSTOM_CODE
		         , (CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                     ELSE D2.CUSTOM_NAME
		             END)                                                                                   AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q                                                                              AS ACCOUNT_Q
		         , A.INOUT_NUM                                                                              AS INOUT_NUM
		         , A.INOUT_SEQ                                                                              AS INOUT_SEQ
		         , A.CREATE_LOC
		         , C1.ITEM_LEVEL1
		         , C1.ITEM_LEVEL2
		         , C1.ITEM_LEVEL3
		         , A.INOUT_DATE
		    FROM       BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		    LEFT  JOIN QBA400T B   WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                        AND B.DIV_CODE        = A.DIV_CODE
		                                        AND B.INOUT_NUM       = A.INOUT_NUM
		                                        AND B.INOUT_SEQ       = A.INOUT_SEQ
		                                        AND B.INSPEC_NUM      = A.INSPEC_NUM
		    LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                        AND C1.ITEM_CODE      = A.ITEM_CODE
		    LEFT  JOIN BCM100T D1  WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
		                                        AND D1.CUSTOM_CODE    = A.INOUT_CODE
		    LEFT  JOIN BCM100T D2  WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
		                                        AND D2.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		    LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                        AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                        AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		    WHERE A.COMP_CODE   = @CompCode
		      AND A.CREATE_LOC  = '1'
		      AND A.INOUT_TYPE  = '3'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		      AND A.DIV_CODE    = #{DIV_CODE}			/* 사업장 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		      AND A.INOUT_DATE &gt;= #{INOUT_MONTH} + '01'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		      AND A.INOUT_DATE &lt;= #{INOUT_MONTH} + '31'
		</if>
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		      AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		      AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		      AND C1.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		      AND C1.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		      AND C1.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		</if>
		    ORDER BY 1, 2, 3, 4

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_str340skrv_mitServiceImpl.printSubReport" parameterType="Map" resultType="rMap">
		/* s_str340skrv_mitServiceImpl.printSubReport */
		--반품 내역(처리된 내역)
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 
		
		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		    SET @CompCode = #{S_COMP_CODE}

		    /* 데이터 조회 */
		    SELECT A.SUB_CODE
		         , A.CODE_NAME
		         , A.COMP_CODE
		         , B.DIV_CODE
		         , SUM(ISNULL(B.INOUT_Q1, 0))     AS INOUT_Q1
		         , SUM(ISNULL(B.INOUT_Q2, 0))     AS INOUT_Q2
		         , SUM(ISNULL(B.INOUT_Q3, 0))     AS INOUT_Q3
		         , SUM(ISNULL(B.INOUT_Q4, 0))     AS INOUT_Q4
		         , SUM(ISNULL(B.SUM_INOUT_Q, 0))  AS SUM_INOUT_Q
		      FROM BSA100T A WITH(NOLOCK)
		      LEFT JOIN (
		                 SELECT A.COMP_CODE
		                      , A.DIV_CODE
		                      , M2.SUB_CODE
		                      , M2.CODE_NAME
		                      , B.PROC_METHOD --처리방법
		                      , CASE WHEN B.PROC_METHOD = 'A' AND A.MONEY_UNIT = 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q1  --폐기(국내)
		                      , CASE WHEN B.PROC_METHOD = 'A' AND A.MONEY_UNIT = 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q1       --폐기(국내)
		                      , CASE WHEN B.PROC_METHOD = 'B' AND A.MONEY_UNIT = 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q2  --재입고(국내)
		                      , CASE WHEN B.PROC_METHOD = 'B' AND A.MONEY_UNIT = 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q2       --재입고(국내)
		                      , CASE WHEN B.PROC_METHOD = 'A' AND A.MONEY_UNIT != 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q3  --폐기(해외)
		                      , CASE WHEN B.PROC_METHOD = 'A' AND A.MONEY_UNIT != 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q3       --폐기(해외)
		                      , CASE WHEN B.PROC_METHOD = 'B' AND A.MONEY_UNIT != 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q4  --재입고(해외)
		                      , CASE WHEN B.PROC_METHOD = 'B' AND A.MONEY_UNIT != 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q4       --재입고(해외)
		                      , SUM(A.ORDER_UNIT_Q)                                                                      AS SUM_ORDER_UNIT_Q
		                      , SUM(A.INOUT_Q)	                                                                         AS SUM_INOUT_Q
		                 FROM       BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                 LEFT  JOIN QBA400T B   WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                                     AND B.DIV_CODE        = A.DIV_CODE
		                                                     AND B.INOUT_NUM       = A.INOUT_NUM
		                                                     AND B.INOUT_SEQ       = A.INOUT_SEQ
		                                                     AND B.INSPEC_NUM      = A.INSPEC_NUM
		                 LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                                     AND C1.ITEM_CODE      = A.ITEM_CODE
		                 LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = A.COMP_CODE
		                                                     AND M2.MAIN_CODE      = 'Z025'                    /* 반품유형 */
		                                                     AND C1.ITEM_LEVEL1 + CASE WHEN ISNULL(C1.ITEM_LEVEL2,  '*') = '*' THEN '*'
		                                                                               ELSE ISNULL(C1.ITEM_LEVEL2,  '*')
		                                                                          END + CASE WHEN ISNULL(C1.ITEM_LEVEL3,  '*') = '*' THEN '*'
		                                                                                     ELSE ISNULL(C1.ITEM_LEVEL3,  '*')
		                                                                                END LIKE M2.REF_CODE1 + '%'
		                 WHERE A.COMP_CODE   = @CompCode
		                   AND B.COMP_CODE IS NOT NULL
		                   AND M2.CODE_NAME IS NOT NULL
		                   AND A.CREATE_LOC  = '1'
		                   AND A.INOUT_TYPE  = '3'
		             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                   AND A.DIV_CODE    = #{DIV_CODE}			/* 사업장 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &gt;= #{INOUT_MONTH} + '01'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &lt;= #{INOUT_MONTH} + '31'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		                   AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		                   AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		                   AND C1.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		                   AND C1.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		                   AND C1.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		             </if>
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, M2.SUB_CODE, M2.CODE_NAME
		                        --, C1.ITEM_LEVEL1, C1.ITEM_LEVEL2, C1.ITEM_LEVEL3--, A.ORDER_UNIT
		                        , B.PROC_METHOD, A.MONEY_UNIT
		                 --ORDER BY 1, 2, 3, 4
		          ) B ON B.COMP_CODE = A.COMP_CODE
		             AND B.SUB_CODE  = A.SUB_CODE
		             AND B.CODE_NAME = A.CODE_NAME
		     WHERE A.COMP_CODE  = @CompCode
		       AND A.MAIN_CODE  = 'Z025'
		       AND A.SUB_CODE  != '$'
		     GROUP BY A.COMP_CODE, B.DIV_CODE, A.SUB_CODE, A.CODE_NAME
		     ORDER BY 1
		   SET NOCOUNT OFF
		   SET ARITHABORT OFF
		END
	</select>
	<select id="s_str340skrv_mitServiceImpl.printSubReport1" parameterType="Map" resultType="rMap">
		/* s_str340skrv_mitServiceImpl.printSubReport1 */
		--반품 내역(미처리 내역)
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 
		
		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		    SET @CompCode = #{S_COMP_CODE}

		    /* 데이터 조회 */
		    SELECT A.SUB_CODE
		         , A.CODE_NAME
		         , A.COMP_CODE
		         , B.DIV_CODE
		         , SUM(ISNULL(B.INOUT_Q1, 0))     AS INOUT_Q1
		         , SUM(ISNULL(B.INOUT_Q2, 0))     AS INOUT_Q2
		         , SUM(ISNULL(B.SUM_INOUT_Q, 0))  AS SUM_INOUT_Q
		      FROM BSA100T A WITH(NOLOCK)
		      LEFT JOIN (
		                 SELECT A.COMP_CODE
		                      , A.DIV_CODE
		                      , M2.SUB_CODE
		                      , M2.CODE_NAME
		                      , CASE WHEN A.MONEY_UNIT = 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q1  --국내
		                      , CASE WHEN A.MONEY_UNIT = 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q1       --국내
		                      , CASE WHEN A.MONEY_UNIT != 'KRW' THEN SUM(A.ORDER_UNIT_Q)
		                             ELSE 0
		                        END                                                                                      AS ORDER_UNIT_Q2  --해외
		                      , CASE WHEN A.MONEY_UNIT != 'KRW' THEN SUM(A.INOUT_Q)
		                             ELSE 0
		                        END                                                                                      AS INOUT_Q2       --해외
		                      , SUM(A.ORDER_UNIT_Q)                                                                      AS SUM_ORDER_UNIT_Q
		                      , SUM(A.INOUT_Q)	                                                                         AS SUM_INOUT_Q
		                 FROM       BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                 LEFT  JOIN QBA400T B   WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                                     AND B.DIV_CODE        = A.DIV_CODE
		                                                     AND B.INOUT_NUM       = A.INOUT_NUM
		                                                     AND B.INOUT_SEQ       = A.INOUT_SEQ
		                                                     AND B.INSPEC_NUM      = A.INSPEC_NUM
		                 LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                                     AND C1.ITEM_CODE      = A.ITEM_CODE
		                 LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                                     AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                                     AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		                 LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = A.COMP_CODE
		                                                     AND M2.MAIN_CODE      = 'Z025'                    /* 반품유형 */
		                                                     AND C1.ITEM_LEVEL1 + CASE WHEN ISNULL(C1.ITEM_LEVEL2,  '*') = '*' THEN '*'
		                                                                               ELSE ISNULL(C1.ITEM_LEVEL2,  '*')
		                                                                          END + CASE WHEN ISNULL(C1.ITEM_LEVEL3,  '*') = '*' THEN '*'
		                                                                                     ELSE ISNULL(C1.ITEM_LEVEL3,  '*')
		                                                                                END LIKE M2.REF_CODE1 + '%'
		                 WHERE A.COMP_CODE   = @CompCode
		                   AND B.COMP_CODE IS NULL
		                   AND M2.CODE_NAME IS NOT NULL
		                   AND A.CREATE_LOC  = '1'
		                   AND A.INOUT_TYPE  = '3'
		             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                   AND A.DIV_CODE    = #{DIV_CODE}			/* 사업장 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &gt;= #{INOUT_MONTH} + '01'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &lt;= #{INOUT_MONTH} + '31'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		                   AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		                   AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		                   AND C1.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		                   AND C1.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		                   AND C1.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		             </if>
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, M2.SUB_CODE, M2.CODE_NAME, A.MONEY_UNIT
		                        --, A.ITEM_CODE, C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, A.ORDER_UNIT
		                 --ORDER BY 1, 2, 3, 4
		          ) B ON B.COMP_CODE = A.COMP_CODE
		             AND B.SUB_CODE  = A.SUB_CODE
		             AND B.CODE_NAME = A.CODE_NAME
		     WHERE A.COMP_CODE  = @CompCode
		       AND A.MAIN_CODE  = 'Z025'
		       AND A.SUB_CODE  != '$'
		     GROUP BY A.COMP_CODE, B.DIV_CODE, A.SUB_CODE, A.CODE_NAME
		     ORDER BY 1

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_str340skrv_mitServiceImpl.printChartReport" parameterType="Map" resultType="rMap">
		/* s_str340skrv_mitServiceImpl.printSubReport2 */
		--반품 내역(반품 유형별)
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 
		
		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		    SET @CompCode = #{S_COMP_CODE}

		    /* 데이터 조회 */
		    SELECT SUBSTRING(#{INOUT_MONTH}, 5, 6)                            AS INOUT_MONTH
		         , A.SUB_CODE + '.' + A.CODE_NAME                             AS INOUT_TYPE_DETAIL
		         , #{INOUT_MONTH} + '01'                                      AS INOUT_MONTH_FR
		         , CONVERT(NVARCHAR(08)
		                 , DATEADD(DAY, -1, DATEADD(MONTH, 1, #{INOUT_MONTH} + '01'))
		                 , 112)                                               AS INOUT_MONTH_TO
		         , ISNULL(B.INOUT_Q, 0)                                       AS INOUT_Q
		      FROM BSA100T A WITH(NOLOCK)
		      LEFT JOIN (
		                 SELECT A.COMP_CODE
		                      , A.DIV_CODE
		                      , A.INOUT_TYPE_DETAIL
		                 	  , SUM(A.INOUT_Q) AS INOUT_Q
		                 FROM       BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                 LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                                     AND C1.ITEM_CODE      = A.ITEM_CODE
		                 LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                                     AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                                     AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		                 WHERE A.COMP_CODE   = @CompCode
		                   AND A.CREATE_LOC  = '1'
		                   AND A.INOUT_TYPE  = '3'
		             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                   AND A.DIV_CODE    = #{DIV_CODE}			/* 사업장 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &gt;= #{INOUT_MONTH} + '01'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INOUT_MONTH)">
		                   AND A.INOUT_DATE &lt;= #{INOUT_MONTH} + '31'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		                   AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		                   AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		                   AND C1.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		                   AND C1.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		                   AND C1.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		             </if>
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_TYPE_DETAIL
		          ) B ON B.COMP_CODE          = A.COMP_CODE
		             AND B.INOUT_TYPE_DETAIL  = A.SUB_CODE
		     WHERE A.COMP_CODE   = @CompCode
		        AND A.MAIN_CODE  = 'S008'
		        AND A.SUB_CODE  != '$'
		    ORDER BY 1
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>