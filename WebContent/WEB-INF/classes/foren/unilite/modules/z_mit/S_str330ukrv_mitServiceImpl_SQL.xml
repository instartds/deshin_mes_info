<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str330ukrv_mitServiceImpl">
	<select id="s_str330ukrv_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @START_TIME DATETIME
		          , @END_TIME   DATETIME
		          , @DIFF_TIME  NUMERIC(10, 0)

		    SET @START_TIME = GETDATE()

		    DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID	*/
		          , @LangType		NVARCHAR(2)		/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A.DIV_CODE
		         , A.INOUT_CODE                                                                             AS CUSTOM_CODE
		         , (CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                     ELSE D1.CUSTOM_NAME
		             END)                                                                                   AS CUSTOM_NAME
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)                                                                                   AS ITEM_NAME
		         , C1.SPEC                                                                                  AS SPEC
		         , A.LOT_NO                                                                                 AS LOT_NO
		         , A.ORDER_UNIT_Q                                                                           AS ORDER_UNIT_Q
		         , A.INOUT_Q                                                                                AS INOUT_Q
		         , A.ORDER_UNIT                                                                             AS ORDER_UNIT
		         , A.TRNS_RATE                                                                              AS TRNS_RATE
		         , A.INOUT_TYPE_DETAIL
		         , M1.CODE_NAME                                                                             AS INOUT_TYPE_DETAIL
		         --20191011 CUSTOM_COMPL 추가
		         , B.CUSTOM_COMPL
		         --20191017 CUSTOM_COMPL_GROUP 추가
		         , M2.REF_CODE2                                                                             AS CUSTOM_COMPL_GROUP
		         , CASE WHEN A.ACCOUNT_YNC = 'Y' THEN '유상'
		                ELSE '무상'
		           END                                                                                      AS ACCOUNT_YNC
		         , A.INSPEC_NUM
		         , A.WH_CODE
		         , ''                                                                                       AS LOCATION
		         , B.PROC_METHOD --처리방법
		         , B.CONFIRM_YN  --확인여부
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		         , '확인'                                                                                     AS CONFIRM_YN2  --확인여부
		</if>
		         , B.REMARK      --비고/특이사항

		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                                                                   AS INOUT_DATE
		         , A.ORDER_UNIT_P                                                                           AS ORDER_UNIT_P
		         , A.ORDER_UNIT_O                                                                           AS ORDER_UNIT_O
		         , A.INOUT_TAX_AMT                                                                          AS INOUT_TAX_AMT
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)                                                       AS TOT_INOUT_AMT
		         , A.ISSUE_REQ_NUM                                                                          AS ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ                                                                          AS ISSUE_REQ_SEQ
		         , A.PROJECT_NO                                                                             AS PROJECT_NO
		         , A.SALE_CUSTOM_CODE
		         , (CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
		                 WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                     ELSE D2.CUSTOM_NAME
		             END)                                                                                   AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q                                                                              AS ACCOUNT_Q
		         , A.INOUT_NUM                                                                              AS INOUT_NUM
		         , A.INOUT_SEQ                                                                              AS INOUT_SEQ
		         , A.CREATE_LOC
		         , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                          AS SORT
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		         --20200204 추가: OUT_DATE, RE_IN_DATE
		         , Z1.INOUT_DATE                                                                           AS OUT_DATE
		         , Z2.INOUT_DATE                                                                           AS RE_IN_DATE
		</if>
		    FROM       BTR100T A   WITH (NOLOCK, INDEX(BTR100T_IDX02))
		    LEFT  JOIN QBA400T B   WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                        AND B.DIV_CODE        = A.DIV_CODE
		                                        AND B.INOUT_NUM       = A.INOUT_NUM
		                                        AND B.INOUT_SEQ       = A.INOUT_SEQ
		                                        AND B.INSPEC_NUM      = A.INSPEC_NUM
		    LEFT  JOIN BPR100T C1  WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                        AND C1.ITEM_CODE      = A.ITEM_CODE
		    LEFT  JOIN BCM100T D1  WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
		                                        AND D1.CUSTOM_CODE    = A.INOUT_CODE
		    LEFT  JOIN BCM100T D2  WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
		                                        AND D2.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		    LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                        AND M1.MAIN_CODE      = 'S008'                    /* 반품유형 */
		                                        AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		    LEFT  JOIN BSA100T M2  WITH (NOLOCK) ON M2.COMP_CODE      = B.COMP_CODE
		                                        AND M2.MAIN_CODE      = 'Z024'                    /* 반품유형 */
		                                        AND M2.SUB_CODE       = B.CUSTOM_COMPL
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		      --20200204 추가
		      LEFT JOIN BTR100T Z1 WITH (NOLOCK) ON Z1.COMP_CODE     = A.COMP_CODE
		                                        AND Z1.DIV_CODE      = A.DIV_CODE
		                                        AND Z1.TEMPC_01      = A.INOUT_NUM
		                                        AND CONVERT(INT, Z1.TEMPN_01)     = A.INOUT_SEQ
		                                        AND Z1.INOUT_TYPE_DETAIL= '98'
		      LEFT JOIN BTR100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE     = A.COMP_CODE
		                                        AND Z2.DIV_CODE      = A.DIV_CODE
		                                        AND Z2.TEMPC_01      = A.INOUT_NUM
		                                        AND CONVERT(INT, Z2.TEMPN_01)     = A.INOUT_SEQ
		                                        AND Z2.INOUT_TYPE_DETAIL= '99'
		</if>
		    WHERE A.COMP_CODE   = @CompCode
		      AND A.CREATE_LOC  = '1'
		      AND A.INOUT_TYPE  = '3'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		      AND A.DIV_CODE    = #{DIV_CODE}			/* 사업장 */
		</if>
		<if test="CONFIRM_FLAG == &quot;N&quot;">
		      AND B.COMP_CODE IS NULL
		</if>
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		      AND B.COMP_CODE IS NOT NULL
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		      AND B.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		      AND B.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		      AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		      AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
			</if>
			
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		      AND C1.ITEM_LEVEL1 LIKE #{ITEM_LEVEL1} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		      AND C1.ITEM_LEVEL2 LIKE #{ITEM_LEVEL2} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		      AND C1.ITEM_LEVEL3 LIKE #{ITEM_LEVEL3} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		      AND A.ITEM_CODE  LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		               ELSE C1.ITEM_NAME
		          END          LIKE #{ITEM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC)">
		      AND C1.SPEC      LIKE #{SPEC} + '%'
			</if>
		</if>

		    UNION ALL

		    SELECT A.DIV_CODE
		         , A.WH_CELL_CODE                                                                          AS CUSTOM_CODE
		         , C.WH_CELL_NAME                                                                          AS CUSTOM_NAME
		         , A.ITEM_CODE
		         , B.ITEM_NAME
		         , B.SPEC
		         , A.LOT_NO
		         , A.INOUT_Q                                                                               AS ORDER_UNIT_Q
		         , A.INOUT_Q
		         , B.STOCK_UNIT			  																   AS ORDER_UNIT
		         , A.TRNS_RATE
		         , A.TEMPC_01                                                                              AS INOUT_TYPE_DETAIL
		         , M1.CODE_NAME                                                                            AS INOUT_TYPE_DETAIL
		         , M2.CUSTOM_COMPL                                                                         AS CUSTOM_COMPL
		         , M3.REF_CODE2                                                                            AS CUSTOM_COMPL_GROUP
		         , CASE WHEN A.ACCOUNT_YNC = 'Y' THEN '유상'
		                ELSE '무상'
		           END                                                                                     AS ACCOUNT_YNC
		         , A.INSPEC_NUM
		         , A.INOUT_CODE                                                                            AS WH_CODE
		         , ''                                                                                      AS LOCATION
		         , M2.PROC_METHOD                                                                          AS PROC_METHOD
		         , M2.CONFIRM_YN                                                                           AS CONFIRM_YN
		         <if test="CONFIRM_FLAG == &quot;Y&quot;">
		         , '확인'                                                                                      AS CONFIRM_YN2
		         </if>
		         , M2.REMARK                                                                               AS REMARK      --비고/특이사항
		         , A.INOUT_DATE
		         , A.ORDER_UNIT_P
		         , A.ORDER_UNIT_O
		         , A.INOUT_TAX_AMT
		         , A.ORDER_UNIT_O + A.INOUT_TAX_AMT                                                        AS TOT_INOUT_AMT
		         , A.ISSUE_REQ_NUM                                                                         AS ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ                                                                         AS ISSUE_REQ_SEQ
		         , A.PROJECT_NO                                                                            AS PROJECT_NO
		         , A.WH_CELL_CODE                                                                          AS SALE_CUSTOM_CODE
		         , C.WH_CELL_NAME                                                                          AS SALE_CUSTOM_NAME
		         , A.ACCOUNT_Q
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.CREATE_LOC
		         --, A.ITEM_STATUS
		         --, C3.DIV_NAME                                                                             AS DIV_NAME
		         --, M3.CODE_NAME                                                                            AS INOUT_PRSN
		         , A.INOUT_NUM + CONVERT(VARCHAR(08), A.INOUT_SEQ)                                         AS SORT
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		         --20200204 추가: OUT_DATE, RE_IN_DATE
		         , Z1.INOUT_DATE                                                                           AS OUT_DATE
		         , Z2.INOUT_DATE                                                                           AS RE_IN_DATE
		</if>
		      FROM      BTR100T A  WITH (NOLOCK)
		      LEFT JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE 
		                                        AND B.ITEM_CODE      = A.ITEM_CODE
		      LEFT JOIN BSA225T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE 
		                                        AND C.DIV_CODE       = A.DIV_CODE 
		                                        AND C.WH_CODE        = A.WH_CODE 
		                                        AND C.WH_CELL_CODE   = A.WH_CELL_CODE
		      LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
		                                        AND M1.MAIN_CODE     = 'S008'                    /* 반품유형 */
		                                        AND M1.SUB_CODE      = A.TEMPC_01
		      LEFT JOIN QBA400T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
		                                        AND M2.DIV_CODE      = A.DIV_CODE
		                                        AND M2.INOUT_NUM     = A.INOUT_NUM
		                                        AND M2.INOUT_SEQ     = A.INOUT_SEQ
		                                        AND M2.INSPEC_NUM    = A.INSPEC_NUM	
		      LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE     = M2.COMP_CODE
		                                        AND M3.MAIN_CODE     = 'Z024'                    /* 반품유형 */
		                                        AND M3.SUB_CODE      = M2.CUSTOM_COMPL
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		      --20200204 추가
		      LEFT JOIN BTR100T Z1 WITH (NOLOCK) ON Z1.COMP_CODE     = A.COMP_CODE
		                                        AND Z1.DIV_CODE      = A.DIV_CODE
		                                        AND Z1.TEMPC_01      = A.INOUT_NUM
		                                        AND CONVERT(INT, Z1.TEMPN_01)     = A.INOUT_SEQ
		                                        AND Z1.INOUT_TYPE_DETAIL= '98'
		      LEFT JOIN BTR100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE     = A.COMP_CODE
		                                        AND Z2.DIV_CODE      = A.DIV_CODE
		                                        AND Z2.TEMPC_01      = A.INOUT_NUM
		                                        AND CONVERT(INT, Z2.TEMPN_01)     = A.INOUT_SEQ
		                                        AND Z2.INOUT_TYPE_DETAIL= '99'
		</if>
		     WHERE A.COMP_CODE         = @CompCode
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE          = #{DIV_CODE}
			</if>
		       --고정 조건
		       AND A.INOUT_TYPE        = '2'
		       AND A.INOUT_METH        = '3'
		       AND A.CREATE_LOC        = '4'
		       AND A.INOUT_TYPE_DETAIL = '99'
		       AND A.INOUT_CODE        = '1700'
		       AND A.INOUT_CODE_DETAIL = '10'
		       AND ISNULL(A.INSPEC_NUM,'') != ''
		       --고정 조건
		<if test="CONFIRM_FLAG == &quot;N&quot;">
		      AND M2.COMP_CODE IS NULL
		</if>
		<if test="CONFIRM_FLAG == &quot;Y&quot;">
		      AND M2.COMP_CODE IS NOT NULL
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		      AND M2.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		      AND M2.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		      AND A.LOT_NO      LIKE #{LOT_NO} + '%'	/* Lot No */
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		      AND A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'	/* 반품관리번호 */
			</if>
			
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		      AND B.ITEM_LEVEL1 LIKE #{ITEM_LEVEL1} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		      AND B.ITEM_LEVEL2 LIKE #{ITEM_LEVEL2} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		      AND B.ITEM_LEVEL3 LIKE #{ITEM_LEVEL3} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		      AND A.ITEM_CODE  LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
		               WHEN @RefItem = '1' THEN B.ITEM_NAME1
		               WHEN @RefItem = '2' THEN B.ITEM_NAME2
		               ELSE B.ITEM_NAME
		          END          LIKE #{ITEM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC)">
		      AND B.SPEC      LIKE #{SPEC} + '%'
			</if>
		</if>
		    ORDER BY 17, 3, 35

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>



	<update id="s_str330ukrv_mitServiceImpl.updateList" parameterType="Map">
		/* s_str330ukrv_mitServiceImpl.updateList */
		UPDATE BTR100T
		   SET INOUT_TYPE_DETAIL = CASE WHEN INOUT_TYPE='3' AND INOUT_METH='2' THEN #{INOUT_TYPE_DETAIL} ELSE INOUT_TYPE_DETAIL END
			 , TEMPC_01 		 = CASE WHEN INOUT_TYPE='2' AND INOUT_METH='3' THEN #{INOUT_TYPE_DETAIL} ELSE TEMPC_01 END
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND INOUT_NUM  = #{INOUT_NUM}
		   AND INOUT_SEQ  = #{INOUT_SEQ}
		   AND INOUT_TYPE IN ('2', '3')


		MERGE INTO QBA400T A
		USING ( SELECT #{S_COMP_CODE}   AS COMP_CODE
		             , #{DIV_CODE}      AS DIV_CODE
		             , #{INOUT_NUM}     AS INOUT_NUM
		             , #{INOUT_SEQ}     AS INOUT_SEQ
		      )            B        ON B.COMP_CODE  = A.COMP_CODE
		                           AND B.DIV_CODE   = A.DIV_CODE
		                           AND B.INOUT_NUM  = A.INOUT_NUM
		                           AND B.INOUT_SEQ  = A.INOUT_SEQ
		WHEN MATCHED THEN
		UPDATE 
		   SET PROC_METHOD    = #{PROC_METHOD}
		     , CONFIRM_YN     = #{CONFIRM_YN}
		     , REMARK         = #{REMARK}
		     , CUSTOM_COMPL   = #{CUSTOM_COMPL}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		    INSERT (
		             COMP_CODE            /* 법인코드                                   */
		           , DIV_CODE             /* 사업장                                     */
		           , INOUT_NUM            /* 반품수불번호                               */
		           , INOUT_SEQ            /* 반품수불순번                               */
		           , INSPEC_NUM           /* 반품관리번호                               */
		           , INSPEC_DATE
		           , ITEM_CODE            /* 품목코드                                   */
		           , LOT_NO               /* LOT 번호                                */
		           , CUSTOM_COMPL         /* 고객불만유형                               */
		           , PROC_METHOD          /* S073: 처리방법                           */
		           , CONFIRM_YN           /* 확인여부                                   */
		           , REMARK               /* 비고, 특이사항                             */
		           , INSERT_DB_USER       /* 입력자                                     */
		           , INSERT_DB_TIME       /* 입력일                                     */
		           , UPDATE_DB_USER       /* 수정자                                     */
		           , UPDATE_DB_TIME       /* 수정일                                     */
		    ) VALUES (
		             #{S_COMP_CODE}
		           , #{DIV_CODE}
		           , #{INOUT_NUM}
		           , #{INOUT_SEQ}
		           , #{INSPEC_NUM}
		           , #{INSPEC_DATE}
		           , #{ITEM_CODE}
		           , #{LOT_NO}
		           , #{CUSTOM_COMPL}
		           , #{PROC_METHOD}
		           , #{CONFIRM_YN}
		           , #{REMARK}
		           , #{S_USER_ID}
		           , GETDATE()
		           , #{S_USER_ID}
		           , GETDATE()
		    );
	</update>

	<update id="s_str330ukrv_mitServiceImpl.deleteList" parameterType="Map">
		/* s_str330ukrv_mitServiceImpl.deleteList */
		DELETE FROM QBA400T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND INOUT_NUM  = #{INOUT_NUM}
		   AND INOUT_SEQ  = #{INOUT_SEQ}
	</update>



<!-- 폐기 -->
	<insert id="s_str330ukrv_mitServiceImpl.insertLog1" parameterType="Map">
		INSERT INTO L_BTR100T (
		       KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
		     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
		     , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
		     , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
		     , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
		     , LOT_NO               , REMARK                , ORDER_NUM
		     , BILL_TYPE            , SALE_TYPE             , PATH_CODE
		     , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC           , ACCOUNT_Q             , OUTSTOCK_NUM        , REF_WKORD_NUM
		     , INSERT_DB_USER       , INSERT_DB_TIME        , UPDATE_DB_USER        , UPDATE_DB_TIME
		     , TEMPC_01             , TEMPN_01
		     , ORDER_SEQ
		)
		SELECT 
		       #{KEY_VALUE}         , 'N'
		     --20200219  신규 SEQ 변수 변경: INOUT_SEQ -> NEW_INOUT_SEQ
		     , A.COMP_CODE          , ''                    , #{NEW_INOUT_SEQ}      , '2'                   , A.DIV_CODE
		     , '2'                  , '2'                   , '98'                  , '1'                   , #{DEPT_CODE}
		     , ''                   , #{OUT_DATE}           , A.ITEM_CODE           , A.ITEM_STATUS         , #{WH_CODE}
		     , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , A.INOUT_Q             , A.INOUT_P             , A.INOUT_I
		     , A.MONEY_UNIT         , A.ORDER_NUM           , A.BASIS_SEQ           , A.PROJECT_NO          , A.PJT_CODE
		     , A.LOT_NO             , A.REMARK              , ISNULL(H.REF_WKORD_NUM, A.ORDER_NUM)
		     , A.BILL_TYPE          , A.SALE_TYPE           , A.PATH_CODE
		     , A.SALE_DIV_CODE      , A.SALE_CUSTOM_CODE    , A.ACCOUNT_YNC         , A.ACCOUNT_Q           , H.OUTSTOCK_NUM      , ISNULL(H.REF_WKORD_NUM, A.ORDER_NUM)
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE()
		     , B.INOUT_NUM          , B.INOUT_SEQ
		     , A.ORDER_SEQ
		  FROM      BTR100T A  WITH(NOLOCK)
		  LEFT JOIN QBA400T B  WITH(NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                   AND B.DIV_CODE       = A.DIV_CODE
		                                   AND B.INOUT_NUM      = A.INOUT_NUM
		                                   AND B.INOUT_SEQ      = A.INOUT_SEQ
		                                   AND B.INSPEC_NUM     = A.INSPEC_NUM
		  LEFT JOIN uniLITE.fnArrayOutStockReq(#{S_COMP_CODE}, #{DIV_CODE}, #{INOUT_NUM}, 0) H
		                                    ON H.COMP_CODE      = A.COMP_CODE
		                                   AND H.DIV_CODE       = A.DIV_CODE
		                                   AND H.INOUT_NUM      = A.INOUT_NUM
		                                   AND H.INOUT_SEQ      = A.INOUT_SEQ
		                                   AND H.INOUT_TYPE     = A.INOUT_TYPE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.INOUT_NUM   = #{INOUT_NUM}
		   AND A.INOUT_SEQ   = #{INOUT_SEQ}
		   AND A.INOUT_TYPE != '1'
	</insert>

<!-- 재입고 -->
	<insert id="s_str330ukrv_mitServiceImpl.insertLog2" parameterType="Map">
		INSERT INTO L_BTR100T (
		       KEY_VALUE            , OPR_FLAG
		     , INOUT_NUM            , INOUT_SEQ          , INOUT_TYPE          , INOUT_METH
		     , INOUT_TYPE_DETAIL    , INOUT_CODE_TYPE    , IN_ITEM_STATUS      , BASIS_NUM         , BASIS_SEQ
		     , ORDER_NUM            , ORDER_SEQ          , DIV_CODE            , WH_CODE           , WH_CELL_CODE
		     , INOUT_DATE           , INOUT_FOR_P        , INOUT_FOR_O         , EXCHG_RATE_O      , MONEY_UNIT
		     , TO_DIV_CODE
		     , INOUT_CODE          , INOUT_CODE_DETAIL   , DEPT_CODE           , ITEM_CODE
		     , ITEM_STATUS          , INOUT_Q            , INOUT_PRSN          , LOT_NO            , REMARK
		     , PROJECT_NO           , CREATE_LOC         , BILL_TYPE           , SALE_TYPE         , SALE_DIV_CODE
		     , SALE_CUSTOM_CODE     , SALE_C_YN
		     , COMP_CODE            , MAKE_DATE          , MAKE_EXP_DATE
		     , INSERT_DB_USER       , INSERT_DB_TIME     , UPDATE_DB_USER      , UPDATE_DB_TIME
		     , TEMPC_01             , TEMPN_01
		)
		SELECT 
		       #{KEY_VALUE}         , 'N'
		     --20200219  신규 SEQ 변수 변경: INOUT_SEQ -> NEW_INOUT_SEQ
		     , ''                   , #{NEW_INOUT_SEQ}   , '2'                   , '3'
		     , '99'                 , '2'                , A.IN_ITEM_STATUS      , A.BASIS_NUM       , A.BASIS_SEQ
		     , A.ORDER_NUM          , A.ORDER_SEQ        , A.DIV_CODE            , #{WH_CODE}        , #{WH_CELL_CODE}
		     , #{RE_IN_DATE}        , A.INOUT_FOR_P      , A.INOUT_FOR_O         , A.EXCHG_RATE_O    , A.MONEY_UNIT
		     , CASE WHEN ISNULL(A.TO_DIV_CODE, '') = '' THEN A.DIV_CODE
		            ELSE A.TO_DIV_CODE
		       END
		     , #{IN_WH_CODE}        , #{IN_WH_CELL_CODE} , #{DEPT_CODE}          , A.ITEM_CODE
		     , A.ITEM_STATUS        , A.INOUT_Q          , #{INOUT_PRSN}         , A.LOT_NO          , A.REMARK
		     , A.PROJECT_NO         , '4'                , A.BILL_TYPE           , A.SALE_TYPE       , A.SALE_DIV_CODE
		     , A.SALE_CUSTOM_CODE   , A.SALE_C_YN
		     , A.COMP_CODE          , A.MAKE_DATE        , A.MAKE_EXP_DATE
		     , #{S_USER_ID}         , GETDATE()          , #{S_USER_ID}        , GETDATE()
		     , B.INOUT_NUM          , B.INOUT_SEQ
		  FROM      BTR100T A  WITH(NOLOCK)
		  LEFT JOIN QBA400T B  WITH(NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                   AND B.DIV_CODE        = A.DIV_CODE
		                                   AND B.INOUT_NUM       = A.INOUT_NUM
		                                   AND B.INOUT_SEQ       = A.INOUT_SEQ
		                                   AND B.INSPEC_NUM      = A.INSPEC_NUM
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.INOUT_NUM   = #{INOUT_NUM}
		   AND A.INOUT_SEQ   = #{INOUT_SEQ}
		   AND A.INOUT_TYPE != '1'
	</insert>

	<update id="s_str330ukrv_mitServiceImpl.spReseving1" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_MATRL_Mtr200ukr (
		    #{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{INOUT_NUM		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>

	<update id="s_str330ukrv_mitServiceImpl.spReseving2" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_STOCK_Btr110ukr (
		    #{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{INOUT_NUM		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
</mapper>