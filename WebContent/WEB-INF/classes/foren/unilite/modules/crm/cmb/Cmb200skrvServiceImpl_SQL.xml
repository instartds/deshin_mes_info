<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cmb200skrvServiceImpl">

	<select id="cmb200skrvServiceImpl.dummy" parameterType="Map" resultType="rMap">
		select a from dual
	</select>
	
	<select id="cmb200skrvServiceImpl.getDataList" parameterType="Map" resultType="rMap">
		/* cmb200skrvServiceImpl.getDataList / 프로젝트 진행현황 보고 */
	    /*cmb200skrv.CCmb200SKr[fnCmb200QStd] */ 
		             
        SELECT 
               CAST(0 AS BIT) AS FLAG
             , M1.CODE_NAME     AS PROCESS_NAME						/* 공정 */
             , A.CUSTOM_CODE    AS CUSTOM_CODE						/* 고객 */
             , C1.CUSTOM_NAME   AS CUSTOM_NAME						/* 고객 */
             , C2.DVRY_CUST_NM  AS DVRY_CUST_NM						/* 라인 */
             , A.PROJECT_NAME   AS PROJECT_NAME						/* 프로젝트명 */
             , M2.CODE_NAME     AS PROJECT_TYPE						/* 구분 */
             , D.EMP_NAME       AS SALE_EMP							/* 영업담당 */
         	 , A.START_DATE                AS RESULT_DATE    					/* 실행일자 */ 
             , A.TARGET_DATE AS TARGET_DATE
             , CONVERT(NUMERIC, A.MONTH_QUANTITY) AS MONTH_QUANTITY	/* 수량 */
             , A.CURRENT_DD     AS CURRENT_DD						/* 현사용제품 */
             , E.SALE_STATUS    AS SALE_STATUS						/* 영업상태 */
             , M3.CODE_NAME     AS SALE_STATUS_NM						/* 영업상태 */
             , E.SUMMARY_STR    AS SUMMARY_STR						/* 현황 */
             , F.PLAN_TARGET    AS PLAN_TARGET
             , uniLITe.fnGetItemName(A.COMP_CODE, A.PROJECT_NO, '') AS ITEM_NAME
             , A.PROJECT_NO
         	 , C.CLIENT_NAME
             , ''               AS DOC_NO
             , ''               AS PLAN_DATE
             , A.PURCHASE_AMT
		     , A.MARGIN_AMT
		     , A.MARGIN_RATE
		     , A.SALES_PROJECTION
		     , A.EXPECTED_ORDER
          FROM          CMB200T  A WITH (NOLOCK)
              LEFT JOIN (SELECT   COMP_CODE, SUB_CODE
              					, CODE_NAME AS EMP_NAME
              			 FROM BSA100T  
              			 WHERE MAIN_CODE='CB48'
              			 AND   SUB_CODE != '$'
              			 					 ) D ON D.COMP_CODE    = A.COMP_CODE
                                                 AND D.SUB_CODE    = A.SALE_EMP
              LEFT JOIN CMD100TV1 E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                 AND E.PROJECT_NO  = A.PROJECT_NO
                                                 AND E.PLAN_TYPE   = N'R'
              LEFT JOIN CMD100TV1 F WITH (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE
                                                 AND F.PROJECT_NO  = A.PROJECT_NO
                                                 AND F.PLAN_TYPE   = N'P'
              LEFT JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                                AND C1.CUSTOM_CODE = A.CUSTOM_CODE
              LEFT JOIN SCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                                                AND C2.CUSTOM_CODE = A.CUSTOM_CODE
                                                AND CONVERT(NVARCHAR, C2.DVRY_CUST_SEQ) = A.DVRY_CUST_SEQ
              LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                AND M1.MAIN_CODE   = N'ZS08'
                                                AND M1.SUB_CODE    = A.PROCESS_TYPE
              LEFT JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                                AND M2.MAIN_CODE   = N'CB20'
                                                AND M2.SUB_CODE    = A.PROJECT_TYPE
              LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
                                                AND M3.MAIN_CODE   = N'CB46'
                                                AND M3.SUB_CODE    = E.SALE_STATUS
				LEFT JOIN CMB100T C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                            AND C.CLIENT_ID    = E.OCCUR_CLIENT
                                             OR C.CLIENT_ID    = F.OCCUR_CLIENT                                                    
         WHERE A.COMP_CODE = #{S_COMP_CODE}
	   <if test="@foren.Ognl@isNotEmpty(PROJECT_OPT)">
          AND A.PROJECT_OPT      = #{PROJECT_OPT}
       </if>
          AND A.AUTHORITY_LEVEL &gt;= #{S_AUTHORITY_LEVEL}
       <if test="@foren.Ognl@isNotEmpty(IMPORTANCE_STATUS)">
           AND A.IMPORTANCE_STATUS IN  <foreach collection="IMPORTANCE_STATUS" item="item" separator="," close=")" open="(">
               #{item}
           </foreach>
       </if>  		   
	   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	   AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(START_FR_DATE)">
	   AND A.START_DATE  &gt;=  #{START_FR_DATE} 
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(START_TO_DATE)">
	   AND A.START_DATE  &lt;= #{START_TO_DATE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(END_FR_DATE)">
	   AND A.TARGET_DATE &gt;=  #{END_FR_DATE}  
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(END_TO_DATE)">
	   AND A.TARGET_DATE &lt;=  #{END_TO_DATE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(CLIENT_ID)">
	   AND  (E.OCCUR_CLIENT  = #{CLIENT_ID}   OR F.OCCUR_CLIENT  = #{CLIENT_ID})
	   </if>
	         UNION ALL
  
    SELECT 
           CAST(0 AS BIT)                                       AS FLAG
         , ''                                                   AS PROCESS_NAME    /* 공정 */
         , A.CUSTOM_CODE                                        AS CUSTOM_CODE     /* 고객 */
         , ISNULL(C1.CUSTOM_NAME, C.CUSTOM_NAME)                AS CUSTOM_NAME     /*  고객 */
         , C2.DVRY_CUST_NM                                      AS DVRY_CUST_NM    /* 라인 */
         , ''                                                   AS PROJECT_NAME    /* 프로젝트명 */
         , ''                                                   AS PROJECT_TYPE    /* 구분 */
         , D.EMP_NAME                                           AS SALE_EMP
         ,  A.RESULT_DATE  AS RESULT_DATE
         ,  A.PLAN_DATE  AS TARGET_DATE
         , 0                                                    AS MONTH_QUANTITY  /* 수량 */
         , ''                                                   AS CURRENT_DD      /* 현사용제품 */
         , ''                                                   AS SALE_STATUS     /* 영업상태 */
         , ''    AS SALE_STATUS_NM						/* 영업상태 */
         , A.SUMMARY_STR                                        AS SUMMARY_STR     /* 현황 */
         , A.PLAN_TARGET                                        AS PLAN_TARGET     /* 계획 */
         , ''                                                   AS ITEM_NAME  /* 샘플 */
         , ''                                                   AS PROJECT_NO
         , ISNULL(E.CLIENT_NAME, E1.CLIENT_NAME)
         , A.DOC_NO
         , A.PLAN_DATE
         , 0 AS PURCHASE_AMT
		 , 0 AS MARGIN_AMT
		 , 0 AS MARGIN_RATE
		 , A.SALES_PROJECTION
		 , '' AS EXPECTED_ORDER
      FROM          CMD100T   A WITH (NOLOCK)
          LEFT JOIN CMB100T   B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.CLIENT_ID    = A.PLAN_CLIENT
          LEFT JOIN BCM100T   C WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                             AND C.CUSTOM_CODE  = B.CUSTOM_CODE
          LEFT JOIN (SELECT   COMP_CODE, SUB_CODE
              					, CODE_NAME AS EMP_NAME
              			 FROM BSA100T  
              			 WHERE MAIN_CODE='CB48'
              			 AND   SUB_CODE != '$'
              			 					 )   D 
              			 					 ON D.COMP_CODE    = A.COMP_CODE
                                             AND D.SUB_CODE       = A.SALE_EMP
          LEFT JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                            AND C1.CUSTOM_CODE  = A.CUSTOM_CODE
          LEFT JOIN SCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                            AND C2.CUSTOM_CODE  = A.CUSTOM_CODE
                                            AND CONVERT(NVARCHAR, C2.DVRY_CUST_SEQ) = A.DVRY_CUST_SEQ   
          LEFT JOIN CMB100T E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                            AND E.CLIENT_ID     = A.RESULT_CLIENT
          LEFT JOIN CMB100T E1  WITH (NOLOCK) ON E1.COMP_CODE     = A.COMP_CODE
                                            AND E1.CLIENT_ID     = A.PLAN_CLIENT
     WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.AUTHORITY_LEVEL &gt;= #{S_AUTHORITY_LEVEL}
       AND A.PROJECT_NO       = ''
       <if test="@foren.Ognl@isNotEmpty(IMPORTANCE_STATUS)">
           AND A.IMPORTANCE_STATUS IN  <foreach collection="IMPORTANCE_STATUS" item="item" separator="," close=")" open="(">
               #{item}
           </foreach>
       </if>  	
	   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	   AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
	   </if>

   
   	   <if test="@foren.Ognl@isNotEmpty(START_FR_DATE)">
	   	AND A.PLAN_DATE  &gt;=  #{START_FR_DATE} 
	   </if>
   	   <if test="@foren.Ognl@isNotEmpty(START_TO_DATE)">
	   	AND A.PLAN_DATE  &lt;= #{START_TO_DATE}
	   </if>	   
	   <if test="@foren.Ognl@isNotEmpty(END_FR_DATE)">
	   	AND A.RESULT_DATE &gt;=  #{END_FR_DATE}  
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(END_TO_DATE)">
	   	AND A.RESULT_DATE &lt;=  #{END_TO_DATE}
	   </if>
   	   <if test="@foren.Ognl@isNotEmpty(CLIENT_ID)">
   		AND (A.PLAN_CLIENT  = #{CLIENT_ID} OR A.RESULT_CLIENT  = #{CLIENT_ID} )
   	   </if>
   	   
	   ORDER BY M1.CODE_NAME, C1.CUSTOM_NAME, C2.DVRY_CUST_NM
		   
		   
	</select>	
	
	
	
	<select id="cmb200skrvServiceImpl.getCustomList" parameterType="Map" resultType="rMap">
		/* cmb200skrvServiceImpl.getCustomList  */
		SELECT *
		FROM (
			SELECT ROW_NUMBER() OVER (ORDER BY A.CUSTOM_NAME) AS ROW_NUM
				,COUNT(*) OVER() TOTAL_CNT
				,A.CUSTOM_CODE
				,CASE M1.REF_ITEM
					WHEN '0'
						THEN A.CUSTOM_NAME
					WHEN '1'
						THEN A.CUSTOM_NAME1
					WHEN '2'
						THEN A.CUSTOM_NAME2
					ELSE A.CUSTOM_NAME
					END AS CUSTOM_NAME
				,CASE 
					WHEN ISNULL(A.COMPANY_NUM, '') = ''
						THEN ''
					ELSE SUBSTRING(A.COMPANY_NUM, 1, 3) + '-' + SUBSTRING(A.COMPANY_NUM, 4, 2) + '-' + SUBSTRING(A.COMPANY_NUM, 6, 5)
					END AS COMPANY_NUM
				,ISNULL(A.TOP_NAME, '') AS TOP_NAME
				,ISNULL(A.BUSINESS_TYPE, '') AS BUSINESS_TYPE
				,ISNULL(A.COMP_CLASS, '') AS COMP_CLASS
				,ISNULL(A.COMP_TYPE, '') AS COMP_TYPE
				,ISNULL(A.ADDR1, '') AS ADDR1
				,ISNULL(A.ADDR2, '') AS ADDR2
				,ISNULL(A.TELEPHON, '') AS TELEPHON
				,ISNULL(A.FAX_NUM, '') AS FAX_NUM
				,ISNULL(A.MAIL_ID, '') AS MAIL_ID
				,ISNULL(A.WON_CALC_BAS, '') AS WON_CALC_BAS
				,ISNULL(A.TO_ADDRESS, '') AS TO_ADDRESS
				,ISNULL(A.TAX_CALC_TYPE, '') AS TAX_CALC_TYPE
				,ISNULL(A.TRANS_CLOSE_DAY, '') AS TRANS_CLOSE_DAY
				,ISNULL(A.RECEIPT_DAY, '') AS RECEIPT_DAY
				,ISNULL(A.TAX_TYPE, '') AS TAX_TYPE
				,ISNULL(A.VAT_RATE, 10) AS VAT_RATE
				,ISNULL(A.MONEY_UNIT, C.SUB_CODE) AS MONEY_UNIT
				,ISNULL(A.BILL_TYPE, '') AS BILL_TYPE
				,ISNULL(A.SET_METH, '') AS SET_METH
				,ISNULL(A.CUSTOM_FULL_NAME, '') AS CUSTOM_FULL_NAME
				,uniLITE.fnCipherDecrypt(A.TOP_NUM, 'A') AS TOP_NUM
				,ISNULL(A.BANK_CODE, '') AS BANK_CODE
				,ISNULL(B.CUSTOM_NAME, '') AS BANK_NAME
				,ISNULL(A.REMARK, '') AS REMARK
				,uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') AS BANKBOOK_NUM
			FROM BCM100T A WITH (NOLOCK)
			LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
				AND B.CUSTOM_CODE = A.BANK_CODE
				AND B.CUSTOM_TYPE = '4'
			LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
				AND C.MAIN_CODE = N'B004'
				AND C.SUB_CODE != N'$'
				AND C.REF_CODE1 = N'Y'
			LEFT JOIN BSA300T M1 WITH (NOLOCK) ON A.COMP_CODE = M1.COMP_CODE
				AND M1.USER_ID = #{S_USER_ID}
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(query)">
				AND ( 
					A.CUSTOM_CODE LIKE '%'+#{query}+'%'
					OR ISNULL(A.CUSTOM_NAME, '') LIKE N'%'+#{query}+'%'
					OR ISNULL(A.COMPANY_NUM, '') LIKE N'%'+#{query}+'%'
					OR uniLITE.fnCipherDecrypt(A.TOP_NUM, '') LIKE N'%'+#{query}+'%'
				)
			</if>
			) s
		WHERE s.ROW_NUM BETWEEN ((#{page} - 1) * #{limit} ) + 1
				AND (#{page} * #{limit})
	</select>

</mapper>