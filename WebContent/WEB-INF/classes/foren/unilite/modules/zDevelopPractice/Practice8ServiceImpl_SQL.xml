<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="practice8ServiceImpl">

	<select id="practice8ServiceImpl.selectList" parameterType="Map" resultType="rMap">
		-- srq100skrv.Csrq100skrv[fnsrq100nq]Query01
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
		                  , @QRY_TYPE           NVARCHAR(10)                -- (필수) 조회유형
		                    --
		                  , @USER_ID            NVARCHAR(100)               -- (필수) USER ID
		
		--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @QRY_TYPE  = #{QRY_TYPE}
		    SET @USER_ID   = #{S_USER_ID}
			
		--  [ 명칭 참조 유형 ] ------------------------------------------------------------------------------------------------
		    DECLARE         @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
		    DECLARE         @DateFormat         NVARCHAR(10)
		
		    SELECT  TOP 1 @DateFormat = CODE_NAME
		    FROM    BSA100T WITH (NOLOCK)
		    WHERE   COMP_CODE = @COMP_CODE
		    AND     MAIN_CODE = N'B044'
		    AND     REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		    
		-----------------------------------------------------------------------------------------------------------------------
		    
		--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
		SELECT  CASE WHEN @QRY_TYPE = N'ITEM'   THEN A.ITEM_CODE
		             WHEN @QRY_TYPE = N'CUSTOM' THEN A.SALE_CUSTOM_CODE
		             WHEN @QRY_TYPE = N'WHOUSE' THEN A.WH_CODE
		             ELSE N''
		        END                                                                 AS TAB_BASE
		      , CASE WHEN @QRY_TYPE = N'ITEM'   THEN CASE WHEN @RefItem = N'0' THEN C1.ITEM_NAME
		                                                  WHEN @RefItem = N'1' THEN C1.ITEM_NAME1
		                                                  WHEN @RefItem = N'2' THEN C1.ITEM_NAME2
		                                                  ELSE C1.ITEM_NAME
		                                             END
		             WHEN @QRY_TYPE = N'CUSTOM' THEN CASE WHEN @RefItem = N'0' THEN D1.CUSTOM_NAME
		                                                  WHEN @RefItem = N'1' THEN D1.CUSTOM_NAME1
		                                                  WHEN @RefItem = N'2' THEN D1.CUSTOM_NAME2
		                                                  ELSE D1.CUSTOM_NAME
		                                             END
		             WHEN @QRY_TYPE = N'WHOUSE' THEN W1.TREE_NAME
		             ELSE N''
		        END                                                                 AS TAB_BASE1
		      , A.ITEM_CODE                                                         AS ITEM_CODE
		      , CASE WHEN @RefItem = N'0' THEN C1.ITEM_NAME
		             WHEN @RefItem = N'1' THEN C1.ITEM_NAME1
		             WHEN @RefItem = N'2' THEN C1.ITEM_NAME2
		             ELSE C1.ITEM_NAME
		        END                                                                 AS ITEM_NAME
		      , C1.ITEM_NAME1
		      , C1.SPEC                                                             AS SPEC
		      , A.ORDER_UNIT                                                        AS ORDER_UNIT
		      , A.TRANS_RATE                                                        AS TRANS_RATE
		      , A.PRICE_TYPE                                                        AS PRICE_TYPE
		      , A.ISSUE_REQ_QTY                                                     AS ISSUE_REQ_QTY
		      , A.ISSUE_REQ_PRICE                                                   AS ISSUE_REQ_PRICE
		      , A.WGT_UNIT                                                          AS WGT_UNIT
		      , A.UNIT_WGT                                                          AS UNIT_WGT
		      , A.ISSUE_WGT_Q                                                       AS ISSUE_WGT_Q
		      , A.ISSUE_FOR_WGT_P                                                   AS ISSUE_FOR_WGT_P
		      , A.ISSUE_QTY * ISNULL(A.TRANS_RATE, 1.0) * ISNULL(A.UNIT_WGT, 1.0)   AS ISSUE_QTY_WGT
		      , A.VOL_UNIT                                                          AS VOL_UNIT
		      , A.UNIT_VOL                                                          AS UNIT_VOL
		      , A.ISSUE_VOL_Q                                                       AS ISSUE_VOL_Q
		      , A.ISSUE_FOR_VOL_P                                                   AS ISSUE_FOR_VOL_P
		      , ISNULL(A.ISSUE_REQ_QTY, 0.0) * ISNULL(A.ISSUE_REQ_PRICE, 0.0)       AS ISSUE_REQ_AMT
		      , ISNULL(S2.ORDER_Q, 0.0)                                             AS ORDER_Q
		      , A.ISSUE_QTY                                                         AS ISSUE_QTY
		      , ISNULL(A.ISSUE_QTY, 0.0) * ISNULL(A.ISSUE_REQ_PRICE, 0.0)           AS ISSUE_AMT
		      , CONVERT(NVARCHAR(10),
		        REPLACE(
		        REPLACE(
		        REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.ISSUE_REQ_DATE, 1, 4))
		                           , N'MM',   SUBSTRING(A.ISSUE_REQ_DATE, 5, 2))
		                           , N'DD',   SUBSTRING(A.ISSUE_REQ_DATE, 7, 2)))   AS ISSUE_REQ_DATE
		      , CONVERT(NVARCHAR(10),
		        REPLACE(
		        REPLACE(
		        REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.ISSUE_DATE, 1, 4))
		                           , N'MM',   SUBSTRING(A.ISSUE_DATE, 5, 2))
		                           , N'DD',   SUBSTRING(A.ISSUE_DATE, 7, 2)))       AS ISSUE_DATE
		      , A.DELIVERY_TIME                                                     AS DELIVERY_TIME
		      , CONVERT(NVARCHAR(10),
		        REPLACE(
		        REPLACE(
		        REPLACE(@DateFormat, N'YYYY', SUBSTRING(S2.DVRY_DATE, 1, 4))
		                           , N'MM',   SUBSTRING(S2.DVRY_DATE, 5, 2))
		                           , N'DD',   SUBSTRING(S2.DVRY_DATE, 7, 2)))       AS DVRY_DATE
		      , S2.DVRY_TIME                                                        AS DVRY_TIME
		      , R1.DVRY_CUST_NM                                                     AS DVRY_CUST_NM
		      , A.LOT_NO                                                            AS LOT_NO
		      , S1.ORDER_TYPE                                                       AS ORDER_TYPE
		      , M1.CODE_NAME                                                        AS ORDER_TYPE_NM
		      , A.INOUT_TYPE_DETAIL                                                 AS INOUT_TYPE_DETAIL 
		      , M2.CODE_NAME                                                        AS INOUT_TYPE_DETAIL_NM
		      , A.CUSTOM_CODE                                                       AS CUSTOM_CODE
		      , CASE WHEN @RefItem = N'0' THEN D2.CUSTOM_NAME
		             WHEN @RefItem = N'1' THEN D2.CUSTOM_NAME1
		             WHEN @RefItem = N'2' THEN D2.CUSTOM_NAME2
		             ELSE D2.CUSTOM_NAME
		        END                                                                 AS CUSTOM_NAME
		      , A.SALE_CUSTOM_CODE                                                  AS SALE_CUSTOM_CODE
		      , CASE WHEN @RefItem = N'0' THEN D1.CUSTOM_NAME
		             WHEN @RefItem = N'1' THEN D1.CUSTOM_NAME1
		             WHEN @RefItem = N'2' THEN D1.CUSTOM_NAME2
		             ELSE D1.CUSTOM_NAME
		        END                                                                 AS SALE_CUSTOM_NAME
		      , A.ISSUE_DIV_CODE                                                    AS ISSUE_DIV_CODE
		      , O1.DIV_NAME                                                         AS ISSUE_DIV_CODE_NM
		      , S1.ORDER_PRSN                                                       AS ISSUE_REQ_PRSN
		      , M3.CODE_NAME                                                        AS ISSUE_REQ_PRSN_NM
		      , A.ISSUE_REQ_NUM                                                     AS ISSUE_REQ_NUM
		      , A.ISSUE_REQ_SEQ                                                     AS ISSUE_REQ_SEQ
		      , A.ORDER_NUM                                                         AS ORDER_NUM
		      , A.SER_NO                                                            AS SER_NO
		      , A.PROJECT_NO                                                        AS PROJECT_NO
		      , A.PO_NUM                                                            AS PO_NUM
		      , A.WH_CODE                                                           AS WH_CODE 
		      , W1.TREE_NAME                                                        AS WH_CODE_NM
		      , D2.AGENT_TYPE                                                       AS AGENT_TYPE
		      , D2.AREA_TYPE                                                        AS AREA_TYPE
		      , C1.ITEM_LEVEL1                                                      AS ITEM_LEVEL1
		      , C1.ITEM_LEVEL2                                                      AS ITEM_LEVEL2
		      , C1.ITEM_LEVEL3                                                      AS ITEM_LEVEL3
		      , C1.ITEM_GROUP                                                       AS ITEM_GROUP
		      , CASE WHEN @RefItem = N'0' THEN C3.ITEM_NAME
		             WHEN @RefItem = N'1' THEN C3.ITEM_NAME1
		             WHEN @RefItem = N'2' THEN C3.ITEM_NAME2
		             ELSE C3.ITEM_NAME
		        END                                                                 AS ITEM_GROUP_NM
		      , CONVERT(NVARCHAR(28),
		        A.ISSUE_REQ_NUM + CONVERT(NVARCHAR(8), A.ISSUE_REQ_SEQ))            AS SORT
		      --20181011 추가
		      , A.MONEY_UNIT														AS MONEY_UNIT
		      , S2.ORDER_P															AS ORIGINAL_PRICE
		      , S2.ORDER_P * A.ISSUE_REQ_QTY										AS ORIGINAL_REQ_AMT
		      , S2.ORDER_P * A.ISSUE_QTY											AS ORIGINAL_AMT
		      --20200116 추가
		      , CASE WHEN @RefItem = N'0' THEN C1.ITEM_NAME
		             WHEN @RefItem = N'1' THEN C1.ITEM_NAME1
		             WHEN @RefItem = N'2' THEN C1.ITEM_NAME2
		             ELSE C1.ITEM_NAME
		        END + '(' + A.ITEM_CODE + ')'                                       AS ITEM_INFO
		      , Z1.STOCK_Q
		      --20200508 추가: 비고(출하)
		      , A.REMARK															AS OUT_REMARK
		      --20200604 추가: 포장형태, 비고, 내부기록, 포장지시수량, 포장출고수량
		      , C4.PACK_TYPE
		      , S2.REMARK
		      , S2.REMARK_INTER
		      , A.ISSUE_REQ_QTY * ISNULL(A.TRANS_RATE, 1)                           AS ORDER_PACK_Q
		      , A.ISSUE_QTY * ISNULL(A.TRANS_RATE, 1)                               AS OUT_PACK_Q
		      , A.WH_CELL_CODE
			  , Z2.BOOKING_NUM
			  -- 출하지시변경사유 추가
			  , A.TEMPC_05
		FROM                SRQ100T A  WITH (NOLOCK)
		        LEFT  JOIN  SOF110T S2 WITH (NOLOCK) ON S2.COMP_CODE     = A.COMP_CODE
		                                            AND S2.OUT_DIV_CODE  = A.ISSUE_DIV_CODE
		                                            AND S2.ORDER_NUM     = A.ORDER_NUM
		                                            AND S2.SER_NO        = A.SER_NO
		        LEFT  JOIN  SOF100T S1 WITH (NOLOCK) ON S1.COMP_CODE     = S2.COMP_CODE
		                                            AND S1.DIV_CODE      = S2.DIV_CODE
		                                            AND S1.ORDER_NUM     = S2.ORDER_NUM
		        LEFT  JOIN  SCM100T R1 WITH (NOLOCK) ON R1.COMP_CODE     = A.COMP_CODE
		                                            AND R1.CUSTOM_CODE   = A.CUSTOM_CODE
		                                            AND R1.DVRY_CUST_SEQ = CASE WHEN ISNUMERIC(A.DVRY_CUST_CD) = 1 THEN A.DVRY_CUST_CD
		                                                                        ELSE 0
		                                                                   END
		        LEFT  JOIN  BOR120T O1 WITH (NOLOCK) ON O1.COMP_CODE     = A.COMP_CODE
		                                            AND O1.DIV_CODE      = A.ISSUE_DIV_CODE
		        LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
		                                            AND C1.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN  BPR100T C3 WITH (NOLOCK) ON C3.COMP_CODE     = C1.COMP_CODE
		                                            AND C3.ITEM_CODE     = C1.ITEM_GROUP
		        LEFT  JOIN  BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE
		                                            AND D1.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		        LEFT  JOIN  BCM100T D2 WITH (NOLOCK) ON D2.COMP_CODE     = A.COMP_CODE
		                                            AND D2.CUSTOM_CODE   = A.CUSTOM_CODE
		        LEFT  JOIN  BSA220T W1 WITH (NOLOCK) ON W1.COMP_CODE     = A.COMP_CODE
		                                            AND W1.TYPE_LEVEL    = A.ISSUE_DIV_CODE
		                                            AND W1.TREE_CODE     = A.WH_CODE
		        LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = S1.COMP_CODE
		                                            AND M1.MAIN_CODE     = N'S002'                          -- 판매유형
		                                            AND M1.SUB_CODE      = S1.ORDER_TYPE
		        LEFT  JOIN  BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
		                                            AND M2.MAIN_CODE     = N'S007'                          -- 출고유형
		                                            AND M2.SUB_CODE      = A.INOUT_TYPE_DETAIL
		        LEFT  JOIN  BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE     = S1.COMP_CODE
		                                            AND M3.MAIN_CODE     = N'S010'                          -- 영업담당
		                                            AND M3.SUB_CODE      = S1.ORDER_PRSN
		      INNER JOIN BPR200T C4 WITH(NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                        AND C4.DIV_CODE      = A.DIV_CODE
		                                        AND C4.ITEM_CODE     = A.ITEM_CODE
		      --20200103 추가
		      LEFT  JOIN BIV100T Q1 WITH(NOLOCK) ON Q1.COMP_CODE     = A.COMP_CODE
		                                        AND Q1.DIV_CODE      = A.DIV_CODE
		                                        AND Q1.ITEM_CODE     = A.ITEM_CODE
		                                        AND Q1.WH_CODE       = C4.WH_CODE
		      --20200116 추가
		      LEFT  JOIN BIV100T Z1 WITH(NOLOCK) ON Z1.COMP_CODE     = A.COMP_CODE
		                                        AND Z1.DIV_CODE      = A.DIV_CODE
		                                        AND Z1.ITEM_CODE     = A.ITEM_CODE
		                                        AND Z1.WH_CODE       = A.WH_CODE
			--20201201 추가
			   LEFT  JOIN TEA100T Z2  WITH (NOLOCK) ON Z2.COMP_CODE       = S1.COMP_CODE
												  AND Z2.DIV_CODE        = S1.DIV_CODE
												  AND Z2.ORDER_NUM       = S1.ORDER_NUM
													  
		WHERE   A.COMP_CODE        = @COMP_CODE
		AND     A.DIV_CODE         = @DIV_CODE		<!--사업장 -->
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)"> 
		AND     S1.ORDER_PRSN      = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
		AND     A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		</if> 
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)"> 
		 AND   ((D1.CUSTOM_NAME  LIKE '%'+#{CUSTOM_NAME}+'%' AND #{CUSTOM_NAME} != N'' AND @RefItem = N'0') 
		  OR    (D1.CUSTOM_NAME1 LIKE '%'+#{CUSTOM_NAME}+'%' AND #{CUSTOM_NAME} != N'' AND @RefItem = N'1') 
		  OR    (D1.CUSTOM_NAME2 LIKE '%'+#{CUSTOM_NAME}+'%' AND #{CUSTOM_NAME} != N'' AND @RefItem = N'2'))
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_FR)"> 	<!--출하지시일-->
		 AND A.ISSUE_REQ_DATE  &gt;= #{ISSUE_REQ_DATE_FR}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_TO)">
		 AND A.ISSUE_REQ_DATE  &lt;= #{ISSUE_REQ_DATE_TO}				/* 출하지시일(to)[공통]	*/
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)"> 	<!--품목-->
		AND     A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)"> 
		 AND   ((C1.ITEM_NAME  LIKE '%'+#{ITEM_NAME}+'%' AND #{ITEM_NAME} != N'' AND @RefItem = N'0') 
		  OR    (C1.ITEM_NAME1 LIKE '%'+#{ITEM_NAME}+'%' AND #{ITEM_NAME} != N'' AND @RefItem = N'1') 
		  OR    (C1.ITEM_NAME2 LIKE '%'+#{ITEM_NAME}+'%' AND #{ITEM_NAME} != N'' AND @RefItem = N'2'))
		</if> 
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		AND     D1.AGENT_TYPE     = #{AGENT_TYPE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
		AND     D1.AREA_TYPE      = #{AREA_TYPE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
		AND     A.INOUT_TYPE_DETAIL      = #{INOUT_TYPE_DETAIL}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		AND     C1.ITEM_LEVEL1     = #{ITEM_LEVEL1}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		AND     C1.ITEM_LEVEL2     = #{ITEM_LEVEL2}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		AND     C1.ITEM_LEVEL3     = #{ITEM_LEVEL3}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_CODE)">
		AND     C1.ITEM_GROUP      LIKE  #{ITEM_GROUP_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP_NAME)"> 
		 AND   ((C3.ITEM_NAME  LIKE '%'+#{ITEM_GROUP_NAME}+'%' AND #{ITEM_GROUP_NAME} != N'' AND @RefItem = N'0') 
		  OR    (C3.ITEM_NAME1 LIKE '%'+#{ITEM_GROUP_NAME}+'%' AND #{ITEM_GROUP_NAME} != N'' AND @RefItem = N'1') 
		  OR    (C3.ITEM_NAME2 LIKE '%'+#{ITEM_GROUP_NAME}+'%' AND #{ITEM_GROUP_NAME} != N'' AND @RefItem = N'2'))
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_QTY_FR)"> 
		 AND A.ISSUE_REQ_QTY  &gt;= #{ISSUE_REQ_QTY_FR}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_QTY_TO)">
		 AND A.ISSUE_REQ_QTY  &lt;= #{ISSUE_REQ_QTY_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM_FR)"> 
		 AND A.ISSUE_REQ_NUM  &gt;= #{ISSUE_REQ_NUM_FR}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM_TO)">
		 AND A.ISSUE_REQ_NUM  &lt;= #{ISSUE_REQ_NUM_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_FR)"> <!--출고예정일-->
		 AND A.ISSUE_DATE     &gt;= #{ISSUE_DATE_FR}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_TO)">
		 AND A.ISSUE_DATE     &lt;= #{ISSUE_DATE_TO}
		</if>
		<if test="rdoSelect4 == &quot;Y&quot;">
		AND  A.ISSUE_REQ_QTY      = A.ISSUE_QTY
		</if>
		<if test="rdoSelect4 == &quot;N&quot;">
		AND  A.ISSUE_REQ_QTY     != A.ISSUE_QTY
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)"> 
		AND  A.ORDER_TYPE         = #{ORDER_TYPE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(REF_LOC)"> 
		AND  A.REF_LOC            = #{REF_LOC}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)"> 
		AND  A.PROJECT_NO            = #{PJT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE)"> 	<!-- 매출처 -->
		AND     A.SALE_CUSTOM_CODE   LIKE #{SALE_CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">		<!--LOT 번호 --> 
		AND A.LOT_NO                LIKE #{LOT_NO} + '%'
		</if>
		
		ORDER BY 1, 2, 3
		       , CASE WHEN @QRY_TYPE  = N'ITEM' THEN A.ISSUE_REQ_NUM ELSE A.ORDER_NUM END
		       , CASE WHEN @QRY_TYPE != N'ITEM' THEN A.ISSUE_REQ_SEQ ELSE A.SER_NO    END
		 SET ARITHABORT OFF
		 SET NOCOUNT OFF
		END
	</select>

<insert id="practice8ServiceImpl.insertDetail" parameterType="Map">
</insert>

<update id="practice8ServiceImpl.updateDetail" parameterType="Map">
	UPDATE SRQ100T 
	   SET ISSUE_REQ_DATE	= #{ISSUE_REQ_DATE}
		 , TEMPC_05			= #{TEMPC_05}
	 WHERE COMP_CODE		= #{S_COMP_CODE}
	   AND ISSUE_REQ_NUM	= #{ISSUE_REQ_NUM}
</update>

<delete id="practice8ServiceImpl.deleteDetail" parameterType="Map">
</delete>
</mapper>