<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum311ukrService">
	<select id="hum311ukrService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	<select id="hum311ukrService.chkFamilyRepreNum" parameterType="Map" resultType="rMap">	
	/* hum100ukrServiceImpl.chkFamilyRepreNum */
		SELECT COUNT(PERSON_NUMB) AS CNT
	   	  FROM HUM800T
	  	 WHERE COMP_CODE = #{S_COMP_CODE}
	       AND uniLITE.fnCipherDecrypt(GUARANTOR1_RES_NO, '') = #{GUARANTOR1_RES_NO}
	       AND uniLITE.fnCipherDecrypt(GUARANTOR2_RES_NO, '') = #{GUARANTOR2_RES_NO}
	</select>
	
	<select id="hum311ukrService.chkFamilyRepreNum2" parameterType="Map" resultType="rMap">	
	/* hum100ukrServiceImpl.chkFamilyRepreNum */
		SELECT COUNT(PERSON_NUMB) AS CNT
	   	  FROM HUM800T
	  	 WHERE COMP_CODE = #{S_COMP_CODE}
	       AND uniLITE.fnCipherDecrypt(GUARANTOR1_RES_NO, '') = #{GUARANTOR2_RES_NO}
	       AND uniLITE.fnCipherDecrypt(GUARANTOR2_RES_NO, '') = #{GUARANTOR2_RES_NO}
	</select>
	
	<select id="hum311ukrService.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
		 --hum311ukr.Chum311ukr[fnHum311QStd] Query01
		    --  [ 날짜 포맷 유형 설정 ] ------------------------------------------------------------
		        DECLARE         @DateFormat         NVARCHAR(10)
		    
		        SELECT  TOP 1 @DateFormat = CODE_NAME
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE = #{S_COMP_CODE}
		        AND     MAIN_CODE = N'B044'
		        AND     REF_CODE1 = N'Y'
		    
		        SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		    --  [ 데이터 조회 ] --------------------------------------------------------------------
		    
		    SELECT
		           A.COMP_CODE
		         , B.DIV_CODE
		         , B.DEPT_NAME
		         , M4.CODE_NAME AS POST_CODE
		         , B.NAME
		         , A.PERSON_NUMB
		         
		         , A.INSURANCE_NAME         --보험명
		         , A.INSURANCE_NO           --보험번호
		         , A.INSURANCE_COMPANY      --보험사명
		         , A.INSURANCE_FARE         --보험료
		    
		         , CASE WHEN ISNULL(A.GUARANTEE_PERIOD_FR, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTEE_PERIOD_FR, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTEE_PERIOD_FR, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTEE_PERIOD_FR, 7, 2))
		            END AS GUARANTEE_PERIOD_FR       --보증기간 FR
		    
		         , CASE WHEN ISNULL(A.GUARANTEE_PERIOD_TO, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTEE_PERIOD_TO, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTEE_PERIOD_TO, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTEE_PERIOD_TO, 7, 2))
		            END AS GUARANTEE_PERIOD_TO       --보증기간 TO
		
		    
		         , A.GUARANTOR1_NAME        --보증인1 성명
		         , A.GUARANTOR1_RELATION    --보증인1 관계
		         , uniLITE.fnCipherDecrypt(A.GUARANTOR1_RES_NO, 'RR') AS GUARANTOR1_RES_NO
		         , CASE WHEN ISNULL(A.GUARANTOR1_PERIOD_FR, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTOR1_PERIOD_FR, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTOR1_PERIOD_FR, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTOR1_PERIOD_FR, 7, 2))
		            END AS GUARANTOR1_PERIOD_FR       --보증인1 보증기간 FR
		    
		         , CASE WHEN ISNULL(A.GUARANTOR1_PERIOD_TO, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTOR1_PERIOD_TO, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTOR1_PERIOD_TO, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTOR1_PERIOD_TO, 7, 2))
		            END AS GUARANTOR1_PERIOD_TO       --보증인1 보증기간 TO
		         , A.GUARANTOR1_WORK_ZONE   --보증인1 근무지
		         , A.GUARANTOR1_CLASS       --보증인1 직위
		         , A.GUARANTOR1_INCOMETAX   --보증인1 갑근세
		    
		    
		         , CASE WHEN ISNULL(A.GUARANTOR1_ZIP_CODE, '') = ''
		                THEN ''
		                ELSE SUBSTRING(A.GUARANTOR1_ZIP_CODE, 1, 3) + '-' + SUBSTRING(A.GUARANTOR1_ZIP_CODE, 4, 3)
		            END AS GUARANTOR1_ZIP_CODE
		
		    
		    
		         , A.GUARANTOR1_ADDR        --보증인1 주소
		         , A.GUARANTOR1_ADDR_DE     --보증인1 상세주소
		    
		    
		         , A.GUARANTOR2_NAME        --보증인2 성명
		         , A.GUARANTOR2_RELATION    --보증인2 관계
		         , uniLITE.fnCipherDecrypt(A.GUARANTOR2_RES_NO, 'RR') AS GUARANTOR2_RES_NO
		         , CASE WHEN ISNULL(A.GUARANTOR2_PERIOD_FR, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTOR2_PERIOD_FR, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTOR2_PERIOD_FR, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTOR2_PERIOD_FR, 7, 2))
		            END AS GUARANTOR2_PERIOD_FR       --보증인2 보증기간 FR
		         , CASE WHEN ISNULL(A.GUARANTOR2_PERIOD_TO, '') = N'' THEN N''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.GUARANTOR2_PERIOD_TO, 1, 4))
		                                        , N'MM',   SUBSTRING(A.GUARANTOR2_PERIOD_TO, 5, 2))
		                                        , N'DD',   SUBSTRING(A.GUARANTOR2_PERIOD_TO, 7, 2))
		            END AS GUARANTOR2_PERIOD_TO        --보증인2 보증기간 TO
		    
		         , A.GUARANTOR2_WORK_ZONE   --보증인2 근무지
		         , A.GUARANTOR2_CLASS       --보증인2 직위
		         , A.GUARANTOR2_INCOMETAX   --보증인2 갑근세
		         , CASE WHEN ISNULL(A.GUARANTOR2_ZIP_CODE, '') = ''
		                THEN ''
		                ELSE SUBSTRING(A.GUARANTOR2_ZIP_CODE, 1, 3) + '-' + SUBSTRING(A.GUARANTOR2_ZIP_CODE, 4, 3)
		            END AS GUARANTOR2_ZIP_CODE
		
		         , A.GUARANTOR2_ADDR        --보증인2 주소
		         , A.GUARANTOR2_ADDR_DE     --보증인2 상세주소
		    
		         , A.INSERT_DB_USER
		         , A.INSERT_DB_TIME
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		    
		      FROM       HUM800T A  WITH(NOLOCK)
		      INNER JOIN HUM100T B  WITH(NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                        AND B.PERSON_NUMB     = A.PERSON_NUMB
		    
		       LEFT JOIN CBM600T M1 WITH(NOLOCK) ON M1.COMP_CODE      = B.COMP_CODE
		                                        AND M1.COST_POOL_CODE = B.COST_KIND
		    
		       LEFT JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE      = B.COMP_CODE
		                                        AND M2.MAIN_CODE      = N'H024'
		                                        AND M2.SUB_CODE      != N'$'
		                                        AND M2.SUB_CODE       = B.EMPLOY_TYPE
		    
		       LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE     = B.COMP_CODE
		                                         AND M3.MAIN_CODE     = N'H181'
		                                         AND M3.SUB_CODE      = M2.REF_CODE1
		    
		       LEFT JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE     = B.COMP_CODE
		                                         AND M4.MAIN_CODE     = N'H005'
		                                         AND M4.SUB_CODE     != N'$'
		                                         AND M4.SUB_CODE      = B.POST_CODE
		    
		       LEFT JOIN BSA100T M5 WITH (NOLOCK) ON M5.COMP_CODE     = A.COMP_CODE
		                                         AND M5.MAIN_CODE     = N'H020'
		                                         AND M5.SUB_CODE     != N'$'
		                                         AND M5.SUB_CODE      = A.GUARANTOR1_RELATION
		    
		       LEFT JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE     = A.COMP_CODE
		                                         AND M6.MAIN_CODE     = N'H020'
		                                         AND M6.SUB_CODE     != N'$'
		                                         AND M6.SUB_CODE      = A.GUARANTOR2_RELATION
		
		    
		     WHERE A.COMP_CODE   = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		       AND B.DIV_CODE IN
					<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
		    </if> 
            <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  B.DEPT_CODE	 IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(NAME)">
			    AND B.NAME   LIKE + '%' +  #{NAME} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND B.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
			<if test="RDO_TYPE == &quot;A&quot;">
				AND B.RETR_DATE = '00000000'		-- 재직구분 (재직)
			</if>
			<if test="RDO_TYPE == &quot;B&quot;">
				AND B.RETR_DATE != '00000000'		-- 재직구분 (퇴사)
			</if>
			
			<if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_TO_FR)">
			   AND A.GUARANTEE_PERIOD_TO  	&gt;= #{GUARANTEE_PERIOD_TO_FR}			-- 만료일 FR
			</if>
			<if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_TO_TO)">
			   AND A.GUARANTEE_PERIOD_TO  	&lt;= #{GUARANTEE_PERIOD_TO_TO}			-- 만료일 TO
			</if>
			
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
			   AND B.PAY_GUBUN  	= #{PAY_GUBUN}									-- 고용형태
			</if>
			<if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">
			   AND B.EMPLOY_TYPE 	= #{EMPLOY_GUBUN}		 						-- 사원구분
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			   AND B.PAY_CODE 		= #{PAY_CODE}		 	 						-- 급여지급방식
			</if>
			<if test="@foren.Ognl@isNotEmpty(COST_POOL)">
			   AND B.COST_KIND 		= #{COST_POOL}		 	 						-- 사업명
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			   AND B.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}		 						-- 급여지급차수
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
			   AND M3.SUB_CODE 		= #{PERSON_GROUP}		 						-- 사원그룹
			</if>
		
		    ORDER BY A.COMP_CODE, B.DIV_CODE, A.PERSON_NUMB

	</select>
	
	<insert id="hum311ukrService.insertDetail" parameterType="Map">    /* 추가 */    
		--hum311ukr.Chum311ukr[fnHum311Save] Query02
		INSERT INTO HUM800T
		     ( COMP_CODE
		     , PERSON_NUMB
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_NAME)">
		     , INSURANCE_NAME
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_NO)">
		     , INSURANCE_NO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_COMPANY)">
		     , INSURANCE_COMPANY
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_FARE)">
		     , INSURANCE_FARE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_FR)">
		     , GUARANTEE_PERIOD_FR
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_TO)">
		     , GUARANTEE_PERIOD_TO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_NAME)">
		     , GUARANTOR1_NAME
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_RELATION)">
		     , GUARANTOR1_RELATION
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_RES_NO)">
		     , GUARANTOR1_RES_NO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_PERIOD_FR)">
		     , GUARANTOR1_PERIOD_FR
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_PERIOD_TO)">
		     , GUARANTOR1_PERIOD_TO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_WORK_ZONE)">
		     , GUARANTOR1_WORK_ZONE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_CLASS)">
		     , GUARANTOR1_CLASS
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_INCOMETAX)">
		     , GUARANTOR1_INCOMETAX
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ZIP_CODE)">
		     , GUARANTOR1_ZIP_CODE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ADDR)">
		     , GUARANTOR1_ADDR
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ADDR_DE)">
		     , GUARANTOR1_ADDR_DE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_NAME)">
		     , GUARANTOR2_NAME
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_RELATION)">
		     , GUARANTOR2_RELATION
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_RES_NO)">
		     , GUARANTOR2_RES_NO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_PERIOD_FR)">
		     , GUARANTOR2_PERIOD_FR
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_PERIOD_TO)">
		     , GUARANTOR2_PERIOD_TO
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_WORK_ZONE)">
		     , GUARANTOR2_WORK_ZONE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_CLASS)">
		     , GUARANTOR2_CLASS
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_INCOMETAX)">
		     , GUARANTOR2_INCOMETAX
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ZIP_CODE)">
		     , GUARANTOR2_ZIP_CODE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ADDR)">
		     , GUARANTOR2_ADDR
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ADDR_DE)">
		     , GUARANTOR2_ADDR_DE
		     </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_NAME)">
		     , #{INSURANCE_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_NO)">
		     , #{INSURANCE_NO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_COMPANY)">
		     , #{INSURANCE_COMPANY}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INSURANCE_FARE)">
		     , #{INSURANCE_FARE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_FR)">
		     , #{GUARANTEE_PERIOD_FR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTEE_PERIOD_TO)">
		     , #{GUARANTEE_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_NAME)">
		     , #{GUARANTOR1_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_RELATION)">
		     , #{GUARANTOR1_RELATION}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_RES_NO)">
		     , uniLITE.fnCipherEncrypt(#{GUARANTOR1_RES_NO} , '')
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_PERIOD_TO)">
		     , #{GUARANTOR1_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_WORK_ZONE)">
		     , #{GUARANTOR1_WORK_ZONE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_CLASS)">
		     , #{GUARANTOR1_CLASS}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_INCOMETAX)">
		     , #{GUARANTOR1_INCOMETAX}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ZIP_CODE)">
		     , #{GUARANTOR1_ZIP_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ADDR)">
		     , #{GUARANTOR1_ADDR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR1_ADDR_DE)">
		     , #{GUARANTOR1_ADDR_DE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_NAME)">
		     , #{GUARANTOR2_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_RELATION)">
		     , #{GUARANTOR2_RELATION}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_RES_NO)">
		     , uniLITE.fnCipherEncrypt(#{GUARANTOR2_RES_NO} , '')
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_PERIOD_FR)">
		     , #{GUARANTOR2_PERIOD_FR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_PERIOD_TO)">
		     , #{GUARANTOR2_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_WORK_ZONE)">
		     , #{GUARANTOR2_WORK_ZONE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_CLASS)">
		     , #{GUARANTOR2_CLASS}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_INCOMETAX)">
		     , #{GUARANTOR2_INCOMETAX}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ZIP_CODE)">
		     , #{GUARANTOR2_ZIP_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ADDR)">
		     , #{GUARANTOR2_ADDR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GUARANTOR2_ADDR_DE)">
		     , #{GUARANTOR2_ADDR_DE}
		     </if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )
	</insert>
	
	<update id="hum311ukrService.updateDetail" parameterType="Map">		/* 수정 */
		--hum311ukr.Chum311ukr[fnHum311Save] Query02
		UPDATE HUM800T
		   SET INSERT_DB_USER       = #{S_USER_ID}
		     , UPDATE_DB_USER       = #{S_USER_ID}
		     , UPDATE_DB_TIME       = GETDATE()
		     <if test="@foren.Ognl@isExists(_parameter, 'INSURANCE_NAME')">
		     , INSURANCE_NAME       = #{INSURANCE_NAME}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'INSURANCE_NO')">
		     , INSURANCE_NO         = #{INSURANCE_NO}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'INSURANCE_COMPANY')">
		     , INSURANCE_COMPANY    = #{INSURANCE_COMPANY}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'INSURANCE_FARE')">
		     , INSURANCE_FARE       = #{INSURANCE_FARE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTEE_PERIOD_FR')">
		     , GUARANTEE_PERIOD_FR  = #{GUARANTEE_PERIOD_FR}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTEE_PERIOD_TO')">
		     , GUARANTEE_PERIOD_TO  = #{GUARANTEE_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_NAME')">
		     , GUARANTOR1_NAME      = #{GUARANTOR1_NAME}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_RELATION')">
		     , GUARANTOR1_RELATION  = #{GUARANTOR1_RELATION}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_RES_NO')">
		     , GUARANTOR1_RES_NO    = uniLITE.fnCipherEncrypt(#{GUARANTOR1_RES_NO}, '')
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_PERIOD_FR')">
		     , GUARANTOR1_PERIOD_FR = #{GUARANTOR1_PERIOD_FR}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_PERIOD_TO')">
		     , GUARANTOR1_PERIOD_TO = #{GUARANTOR1_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_WORK_ZONE')">
		     , GUARANTOR1_WORK_ZONE = #{GUARANTOR1_WORK_ZONE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_CLASS')">
		     , GUARANTOR1_CLASS     = #{GUARANTOR1_CLASS}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_INCOMETAX')">
		     , GUARANTOR1_INCOMETAX = #{GUARANTOR1_INCOMETAX}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_ZIP_CODE')">
		     , GUARANTOR1_ZIP_CODE  = #{GUARANTOR1_ZIP_CODE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_ADDR')">
		     , GUARANTOR1_ADDR      = #{GUARANTOR1_ADDR}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR1_ADDR_DE')">
		     , GUARANTOR1_ADDR_DE   = #{GUARANTOR1_ADDR_DE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_NAME')">
		     , GUARANTOR2_NAME      = #{GUARANTOR2_NAME}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_RELATION')">
		     , GUARANTOR2_RELATION  = #{GUARANTOR2_RELATION}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_RES_NO')">
		     , GUARANTOR2_RES_NO    = uniLITE.fnCipherEncrypt(#{GUARANTOR2_RES_NO}, '')
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_PERIOD_FR')">
		     , GUARANTOR2_PERIOD_FR = #{GUARANTOR2_PERIOD_FR}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_PERIOD_TO')">
		     , GUARANTOR2_PERIOD_TO = #{GUARANTOR2_PERIOD_TO}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_WORK_ZONE')">
		     , GUARANTOR2_WORK_ZONE = #{GUARANTOR2_WORK_ZONE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_CLASS')">
		     , GUARANTOR2_CLASS     = #{GUARANTOR2_CLASS}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_INCOMETAX')">
		     , GUARANTOR2_INCOMETAX = #{GUARANTOR2_INCOMETAX}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_ZIP_CODE')">
		     , GUARANTOR2_ZIP_CODE  = #{GUARANTOR2_ZIP_CODE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_ADDR')">
		     , GUARANTOR2_ADDR      = #{GUARANTOR2_ADDR}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'GUARANTOR2_ADDR_DE')">
		     , GUARANTOR2_ADDR_DE   = #{GUARANTOR2_ADDR_DE}
		     </if>
		     
		 WHERE COMP_CODE            = #{S_COMP_CODE}
		   AND PERSON_NUMB          = #{PERSON_NUMB}
		  
	</update>
	
	<delete id="hum311ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
		--hum311ukr.Chum311ukr[fnHum311Save] Query01
		DELETE FROM HUM800T 
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND PERSON_NUMB = #{PERSON_NUMB}
  
  
	</delete>
</mapper>