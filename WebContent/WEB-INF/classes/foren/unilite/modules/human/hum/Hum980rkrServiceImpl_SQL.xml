<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hum980rkrServiceImpl">
	<select id="selectPrimaryDataList" parameterType="Map" resultType="rMap" >
	--hum980rkr.Chum980rkr[fnHum980nQ].Query01
	 SELECT CONVERT(VARCHAR(10),GETDATE(),102) AS TODAY
	      , A.Name
	      , A.PERSON_NUMB 
	      , A.NAME_CHI
	      , CASE WHEN A.BIRTH_DATE != '' THEN unilite.fngetUserDateComp(#{S_COMP_CODE},A.BIRTH_DATE) 
	         END AS BIRTH_DATE   
	      , CASE WHEN A.SOLAR_YN = 'Y' THEN '(양)'
	             ELSE '(음)'
	         END SOLAR_YN 
	      , CASE WHEN RETR_DATE != '' AND RETR_DATE != '00000000' THEN '퇴직'
	             Else '재직'
	         END As SITU
	      , CONVERT(VARCHAR(4), YEAR(GETDATE())-(CASE WHEN SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),7,1) IN ('1','2') THEN '19'
	                                                  WHEN SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),7,1) IN ('3','4') THEN '20'
	                                              END + LEFT(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),2)) + 1) + '세' AS YEAR_OLD
	      , unilite.fngetUserDateComp(#{S_COMP_CODE},A.WEDDING_DATE) AS WEDDING_DATE
	      , A.TELEPHON
	      , A.PHONE_NO
	      , CASE WHEN A.ZIP_CODE != '' THEN '(' + SUBSTRING(A.ZIP_CODE,1,3) + '-' + SUBSTRING(A.ZIP_CODE,4,6) + ')' + ' ' + A.KOR_ADDR
	             ELSE ''+ A.KOR_ADDR       
	         END ADDR
	      , unilite.fngetUserDateComp(#{S_COMP_CODE}, A.JOIN_DATE) AS JOIN_DATE
	      , '('+RIGHT('00'+CONVERT(VARCHAR(4),(CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,JOIN_DATE),GETDATE())))/12),2) +'.'+ 
	            RIGHT('00'+CONVERT(VARCHAR(4),(CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,JOIN_DATE),GETDATE()))) % 12),2)+'년)' AS JOIN_DATETIME
	      , CASE WHEN A.RETR_DATE != '' AND  A.RETR_DATE != '00000000' THEN unilite.fngetUserDateComp(#{S_COMP_CODE}, A.RETR_DATE) 
	         END AS RETR_DATE
	      , CASE WHEN A.ORI_JOIN_DATE != '' AND A.ORI_JOIN_DATE != '00000000' THEN unilite.fngetUserDateComp(#{S_COMP_CODE}, A.ORI_JOIN_DATE)
	         END AS ORI_JOIN_DATE           
	      , (CASE WHEN (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
	                         THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
	                         ELSE 0
	                     END)  != 0
	              THEN '('+RIGHT('00'+ CONVERT(VARCHAR(4), (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
	                                                             THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
	                                                              ELSE 0
	                                                         END)/12),2) +'.'+ 
	                       RIGHT('00'+ CONVERT(VARCHAR(4), (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
	                                                             THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
	                                                             ELSE 0
	                                                         END) % 12),2)+'년)'
	              ELSE '0'
	          END) AS ORI_JOIN_DATETIME 
	      , (RTRIM(H.SCHOOL_NAME) + 
	         CASE WHEN ISNULL(H.DEGREE,'')    = '' THEN '' ELSE '('+H.DEGREE+')' END +' '+
	         CASE WHEN ISNULL(H.CODE_NAME,'') = '' THEN '' ELSE H.CODE_NAME      END +' '+ 
	         CASE WHEN ISNULL(H.GRAD_DATE,'') = '' THEN '' ELSE LEFT(UNILITE.fnGetUserDateComp(#{S_COMP_CODE},H.GRAD_DATE),7) END) SCHOOL 
	      , M1.CODE_NAME AS JOIN_CODE
	      , F.DIV_NAME
	      , A.DEPT_NAME
	      , M2.CODE_NAME AS POST_CODE 
	      , M3.CODE_NAME AS ABIL_CODE 
	      , M4.CODE_NAME AS JOB_CODE
	      , (CASE WHEN ISNULL(M5.CODE_NAME,'') ='' THEN '' ELSE M5.CODE_NAME END+ 
	         CASE WHEN ISNULL(M8.CODE_NAME,'') ='' THEN '' ELSE '('+M8.CODE_NAME+')' END +' '+
	         CASE WHEN ISNULL(M7.CODE_NAME,'') ='' THEN '' ELSE M7.CODE_NAME END)  AS ARMY_KIND
	      , G.RETR
	      , B.HEIGHT
	      , B.WEIGHT
	      , M9.CODE_NAME +'형' AS BLOOD_KIND
	      , M10.CODE_NAME AS LIVE_KIND
	      , M11.CODE_NAME AS RELIGION
	      , C.IMG_FILE 
	      , D.RECOMMEND1_NAME
	   FROM HUM100T A LEFT JOIN HUM710T B 
                         ON A.COMP_CODE   = B.COMP_CODE
                        AND A.PERSON_NUMB = B.PERSON_NUMB
                  LEFT JOIN HUM120T C 
                         ON A.COMP_CODE   = C.COMP_CODE
                        AND A.PERSON_NUMB = C.PERSON_NUMB
                  LEFT JOIN HUM790T D 
                         ON A.COMP_CODE   = D.COMP_CODE
                        AND A.PERSON_NUMB = D.PERSON_NUMB
                  LEFT JOIN BOR120T F 
                         ON F.COMP_CODE = A.COMP_CODE
                        AND F.DIV_CODE  = A.DIV_CODE
                  LEFT JOIN (SELECT COMP_CODE
                                  , PERSON_NUMB
                                  , CASE WHEN MAX(RETR_DATE)='' THEN '' ELSE unilite.fnGetUserDateComp(#{S_COMP_CODE},MAX(RETR_DATE)) END RETR
                               FROM HRT500T 
                              WHERE COMP_CODE = #{S_COMP_CODE}
                                AND RETR_TYPE NOT IN ('S','R')
                              GROUP BY COMP_CODE, PERSON_NUMB) G
                         ON G.COMP_CODE   = A.COMP_CODE
                        AND G.PERSON_NUMB = A.PERSON_NUMB
                  LEFT JOIN (SELECT X.COMP_CODE, X.PERSON_NUMB,X.SCHOOL_NAME,X.DEGREE,M.CODE_NAME,X.GRAD_DATE
                               FROM HUM720T X INNER JOIN (SELECT COMP_CODE, PERSON_NUMB, MAX(ENTR_DATE) ENTR_DATE
                                                            FROM HUM720T
                                                           GROUP BY COMP_CODE, PERSON_NUMB) Y
                                                      ON X.COMP_CODE   = Y.COMP_CODE
                                                     AND X.PERSON_NUMB = Y.PERSON_NUMB
                                                     AND X.ENTR_DATE   = Y.ENTR_DATE
                                               LEFT JOIN BSA100T M
                                                      ON M.COMP_CODE = X.COMP_CODE
                                                     AND MAIN_CODE   = 'H087'
                                                     AND SUB_CODE    = X.FIRST_SUBJECT) H
                         ON A.COMP_CODE   = H.COMP_CODE
                        AND A.PERSON_NUMB = H.PERSON_NUMB
                  LEFT JOIN BSA100T M1 
                         ON M1.COMP_CODE = A.COMP_CODE
                        AND M1.MAIN_CODE = 'H012'
                        AND M1.SUB_CODE  = A.JOIN_CODE
                  LEFT JOIN BSA100T M2 
                         ON M2.COMP_CODE = A.COMP_CODE
                        AND M2.MAIN_CODE = 'H005'
                        AND M2.SUB_CODE  = A.POST_CODE
                  LEFT JOIN BSA100T M3 
                         ON M3.COMP_CODE = A.COMP_CODE
                        AND M3.MAIN_CODE = 'H006'
                        AND M3.SUB_CODE  = A.ABIL_CODE
                  LEFT JOIN BSA100T M4 
                         ON M4.COMP_CODE = A.COMP_CODE
                        AND M4.MAIN_CODE = 'H008'
                        AND M4.SUB_CODE  = A.JOB_CODE
                  LEFT JOIN BSA100T M5 
                         ON M5.COMP_CODE = A.COMP_CODE
                        AND M5.MAIN_CODE = 'H017'
                        AND M5.SUB_CODE  = A.ARMY_KIND
                  LEFT JOIN BSA100T M7 
                         ON M7.COMP_CODE = A.COMP_CODE
                        AND M7.MAIN_CODE = 'H016'
                        AND M7.SUB_CODE  = A.MIL_TYPE
                  LEFT JOIN BSA100T M8 
                         ON M8.COMP_CODE = A.COMP_CODE
                        AND M8.MAIN_CODE = 'H018'
                        AND M8.SUB_CODE  = A.ARMY_GRADE
                  LEFT JOIN BSA100T M9 
                         ON M9.COMP_CODE = B.COMP_CODE
                        AND M9.MAIN_CODE = 'H080'
                        AND M9.SUB_CODE  = B.BLOOD_KIND
                  LEFT JOIN BSA100T M10 
                         ON M10.COMP_CODE = B.COMP_CODE
                        AND M10.MAIN_CODE = 'H082'
                        AND M10.SUB_CODE  = B.LIVE_KIND
                  LEFT JOIN BSA100T M11 
                         ON M11.MAIN_CODE = 'H086'
                        AND M11.SUB_CODE = B.RELIGION
                  LEFT JOIN  HBS400T M12 WITH (NOLOCK) 
                         ON M12.COMP_CODE = A.COMP_CODE
                        AND M12.COMPANY_CODE = '1'  
	  WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
	    AND (M12.DAY_LABOR_RULE = '2' OR (M12.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
		 ORDER BY DEPT_CODE, POST_CODE, NAME, A.PERSON_NUMB ASC
	</select>
	<select id="ds_sub01" parameterType="Map" resultType="rMap" >
	--hum980rkr.Chum980rkr[fnHum980nQ].Query02
SELECT  CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY GRAD_DATE DESC,SCHOOL_NAME)) AS ROW_NUM 
	 ,B.PERSON_NUMB
     , B.SCHOOL_NAME
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.ENTR_DATE) AS ENTR_DATE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.GRAD_DATE) AS GRAD_DATE
     , M1.CODE_NAME AS GRAD_GUBUN 
     , M2.CODE_NAME AS FIRST_SUBJECT
     , B.CREDITS  
  FROM HUM100T A INNER JOIN HUM720T B  
                         ON A.COMP_CODE   = B.COMP_CODE
                        AND A.PERSON_NUMB = B.PERSON_NUMB
                  LEFT JOIN BSA100T M1
                         ON M1.COMP_CODE = B.COMP_CODE
                        AND M1.MAIN_CODE = 'H010'
                        AND M1.SUB_CODE  = B.GRAD_GUBUN
                  LEFT JOIN BSA100T M2
                         ON M2.COMP_CODE = B.COMP_CODE
                        AND M2.MAIN_CODE = 'H087'
                        AND M2.SUB_CODE  = B.FIRST_SUBJECT
                  LEFT JOIN  HBS400T M10 WITH (NOLOCK) 
                         ON M10.COMP_CODE = A.COMP_CODE
                        AND M10.COMPANY_CODE = '1'  
  WHERE A.COMP_CODE = #{S_COMP_CODE}
     AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
    AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
 		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

 ORDER BY GRAD_DATE DESC,SCHOOL_NAME
 
	</select>
	<select id="ds_sub02" parameterType="Map" resultType="rMap" >
	--hum980rkr.Chum980rkr[fnHum980nQ].Query03
	SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY CARR_STRT_DATE DESC, A.DEPT_CODE, A.POST_CODE, A.NAME)) AS ROW_NUM 
		 , B.PERSON_NUMB
	     , B.COMP_NAME
	     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.CARR_STRT_DATE) AS CARR_STRT_DATE
	     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.CARR_END_DATE)  AS CARR_END_DATE
	     , B.COMP_NAME
	     , B.POST_NAME
	     , B.OCPT_NAME
	     , B.JOB_NAME
	  FROM HUM100T A INNER JOIN HUM500T B
	                         ON A.COMP_CODE   = B.COMP_CODE
	                        AND A.PERSON_NUMB = B.PERSON_NUMB
	                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
	                         ON M1.COMP_CODE = A.COMP_CODE
	                        AND M1.COMPANY_CODE = '1'  
	  WHERE A.COMP_CODE = #{S_COMP_CODE}
	    AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
	    AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
	  	 	   AND A.DIV_CODE = #{DIV_CODE}
	       </if>   
	       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
	       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
	       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
	       </if>  
	       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
	       		AND A.POST_CODE = #{POST_CODE}
	       </if>                          
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
			<if test="PAY_GUBUN == &quot;Y&quot;">
			 	AND A.PAY_GUBUN = '1'
			</if>
			<if test="RETR_YN == &quot;N&quot;">
			 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
			</if>
	 	ORDER BY CARR_STRT_DATE DESC, A.DEPT_CODE, A.POST_CODE, A.NAME 
	</select>
	<select id="ds_sub03" parameterType="Map" resultType="rMap" >
	--hum980rkr.Chum980rkr[fnHum980nQ].Query04
 SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY uniLITE.fnCipherDecrypt(B.REPRE_NUM,'') DESC, FAMILY_NAME)) AS ROW_NUM 
	  , B.PERSON_NUMB AS PERSON_NUMB 
      , B.FAMILY_NAME AS FAMILY_NAME
      , M1.CODE_NAME  AS REL_CODE
      , YEAR(GETDATE()) - CONVERT(SMALLINT, CASE WHEN SUBSTRING(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),7,1) IN ('1','2') THEN '19'
                                                 WHEN SUBSTRING(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),7,1) IN ('3','4') THEN '20'
                                             END + LEFT(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),2)) +1
                      AS REPRE_NUM 
      , M2.CODE_NAME  AS SCHSHIP_CODE
      , M3.CODE_NAME  AS GRADU_TYPE
      , B.COMP_NAME 
      , B.POST_NAME
   FROM            HUM100T A 
        INNER JOIN HUM200T B
                ON A.COMP_CODE   = B.COMP_CODE
               AND A.PERSON_NUMB = B.PERSON_NUMB
         LEFT JOIN BSA100T M1
                ON M1.COMP_CODE = B.COMP_CODE
               AND M1.MAIN_CODE = 'H020'
               AND M1.SUB_CODE  = B.REL_CODE
         LEFT JOIN BSA100T M2
                ON M2.COMP_CODE = B.COMP_CODE
               AND M2.MAIN_CODE = 'H009'
               AND M2.SUB_CODE  = B.SCHSHIP_CODE
         LEFT JOIN BSA100T M3
                ON M3.COMP_CODE = B.COMP_CODE
               AND M3.MAIN_CODE = 'H010'
               AND M3.SUB_CODE  = B.GRADU_TYPE
        LEFT JOIN  HBS400T M10 WITH (NOLOCK) 
               ON M10.COMP_CODE = A.COMP_CODE
              AND M10.COMPANY_CODE = '1'  
  WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
    AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
  ORDER BY uniLITE.fnCipherDecrypt(B.REPRE_NUM,'') DESC, FAMILY_NAME
  
	</select>
	<select id="ds_sub04" parameterType="Map" resultType="rMap" >
--hum980rkr.Chum980rkr[fnHum980nQ].Query05
SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY ACQ_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB)) AS ROW_NUM 
	 , B.PERSON_NUMB
	 , CASE WHEN ISNULL(M.CODE_NAME, '') = ''
	        THEN B.QUAL_KIND
		    ELSE M.CODE_NAME
		END AS QUAL_KIND
     , B.QUAL_GRADE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.ACQ_DATE)  AS ACQ_DATE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.VALI_DATE) AS VALI_DATE
  FROM HUM100T A INNER JOIN HUM600T B 
                         ON A.COMP_CODE   = B.COMP_CODE
                        AND A.PERSON_NUMB = B.PERSON_NUMB 
                  LEFT JOIN BSA100T M 
                         ON M.COMP_CODE   = B.COMP_CODE
                        AND M.MAIN_CODE   = 'H022'
                        AND M.SUB_CODE    = B.QUAL_KIND
                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
                         ON M1.COMP_CODE = A.COMP_CODE
                        AND M1.COMPANY_CODE = '1'  
  WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
    AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
 ORDER BY ACQ_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB
 
	</select>
	<select id="ds_sub05" parameterType="Map" resultType="rMap" >
		--hum980rkr.Chum980rkr[fnHum980nQ].Query06
SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY EDU_FR_DATE DESC ,EDU_TITLE)) AS ROW_NUM 
	 , B.PERSON_NUMB
     , B.EDU_TITLE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.EDU_FR_DATE) AS EDU_FR_DATE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.EDU_TO_DATE) AS EDU_TO_DATE
     , B.EDU_GRADES 
  FROM HUM100T A INNER JOIN HUM740T B 
                         ON A.COMP_CODE   = B.COMP_CODE
                        AND A.PERSON_NUMB = B.PERSON_NUMB
                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
                         ON M1.COMP_CODE = A.COMP_CODE
                        AND M1.COMPANY_CODE = '1'  
 WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
 ORDER BY EDU_FR_DATE DESC ,EDU_TITLE
 	
	</select>
	<select id="ds_sub06" parameterType="Map" resultType="rMap" >
--hum980rkr.Chum980rkr[fnHum980nQ].Query07
SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY OCCUR_DATE DESC)) AS ROW_NUM 
	 , B.PERSON_NUMB
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.OCCUR_DATE) AS OCCUR_DATE
     , M.CODE_NAME AS KIND_PRIZE_PENALTY
     , B.NAME_PRIZE_PENALTY
     , B.REASON    
  FROM HUM100T A INNER JOIN HUM810T B
                    ON A.COMP_CODE   = B.COMP_CODE
                   AND A.PERSON_NUMB = B.PERSON_NUMB 
                  LEFT JOIN BSA100T M
                    ON M.COMP_CODE = B.COMP_CODE
                   AND M.MAIN_CODE = 'H096'
                   AND M.SUB_CODE  = B.KIND_PRIZE_PENALTY 
                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
                   ON M1.COMP_CODE = A.COMP_CODE
                  AND M1.COMPANY_CODE = '1'  
 WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'			 
   AND KIND_PRIZE_PENALTY = '1'
   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
 ORDER BY OCCUR_DATE DESC
 
	</select>
	<select id="ds_sub07" parameterType="Map" resultType="rMap" >
--hum980rkr.Chum980rkr[fnHum980nQ].Query08
SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY OCCUR_DATE DESC)) AS ROW_NUM 
	 , B.PERSON_NUMB
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.OCCUR_DATE) AS OCCUR_DATE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.VALIDITY_DATE) AS VALIDITY_DATE
     , B.NAME_PRIZE_PENALTY
     , B.REASON
  FROM HUM100T A INNER JOIN HUM810T B
                    ON A.COMP_CODE   = B.COMP_CODE
                   AND A.PERSON_NUMB = B.PERSON_NUMB 
                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
                    ON M1.COMP_CODE = A.COMP_CODE
                   AND M1.COMPANY_CODE = '1'  
 WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'					 
   AND KIND_PRIZE_PENALTY = '2'
   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
 ORDER BY OCCUR_DATE DESC
 
	</select>
	<select id="ds_sub08" parameterType="Map" resultType="rMap" >
--hum980rkr.Chum980rkr[fnHum980nQ].Query09
 SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.ANNOUNCE_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB ASC)) AS ROW_NUM 
	 , B.PERSON_NUMB
      , UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, B.ANNOUNCE_DATE) AS ANNOUNCE_DATE
      , M1.CODE_NAME                           AS ANNOUNCE_CODE
      , C.DIV_NAME                             AS AF_DIV_NAME
      , B.AF_DEPT_NAME
      , M2.CODE_NAME                           AS POST_CODE
      , M3.CODE_NAME                           AS ABIL_CODE 
      , B.ANNOUNCE_REASON
   FROM HUM100T A INNER JOIN HUM760T B
                          ON A.COMP_CODE   = B.COMP_CODE
                         AND A.PERSON_NUMB = B.PERSON_NUMB
                   LEFT JOIN BSA100T M1
                          ON M1.COMP_CODE = B.COMP_CODE
                         AND M1.MAIN_CODE = 'H094'
                         AND M1.SUB_CODE  = B.ANNOUNCE_CODE
                   LEFT JOIN BOR120T C
                          ON C.COMP_CODE  = B.COMP_CODE
                         AND C.DIV_CODE   = B.AF_DIV_NAME 
                   LEFT JOIN BSA100T M2
                          ON M2.COMP_CODE = B.COMP_CODE
                         AND M2.MAIN_CODE = 'H005'
                         AND M2.SUB_CODE  = B.POST_CODE
                   LEFT JOIN BSA100T M3
                          ON M3.COMP_CODE = B.COMP_CODE
                         AND M3.MAIN_CODE = 'H006'
                         AND M3.SUB_CODE  = B.ABIL_CODE
                   LEFT JOIN  HBS400T M10 WITH (NOLOCK) 
	                     ON M10.COMP_CODE = A.COMP_CODE
	                    AND M10.COMPANY_CODE = '1'  
  WHERE A.COMP_CODE = #{S_COMP_CODE}
    AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
    AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
  ORDER BY B.ANNOUNCE_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB ASC
 	
	</select>
	<select id="ds_sub09" parameterType="Map" resultType="rMap" >
--hum980rkr.Chum980rkr[fnHum980nQ].Query10
SELECT CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY B.PERSON_NUMB ORDER BY GAIN_DATE DESC)) AS ROW_NUM 
	 , B.PERSON_NUMB
     , M.CODE_NAME AS EXAM_KIND
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.GAIN_DATE) AS GAIN_DATE
     , B.GRADES
     , B.CLASS
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, B.VALI_DATE) AS VALI_DATE
  FROM HUM100T A INNER JOIN HUM750T B
                         ON A.COMP_CODE   = B.COMP_CODE
                        AND A.PERSON_NUMB = B.PERSON_NUMB
                  LEFT JOIN BSA100T M
                         ON M.COMP_CODE = B.COMP_CODE
                        AND M.MAIN_CODE = 'H093'
                        AND M.SUB_CODE  = B.EXAM_KIND
                  LEFT JOIN  HBS400T M1 WITH (NOLOCK) 
	                     ON M1.COMP_CODE = A.COMP_CODE
	                    AND M1.COMPANY_CODE = '1'  
  WHERE A.COMP_CODE =#{S_COMP_CODE}
   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
 ORDER BY GAIN_DATE DESC
 		
	</select>


<!-- CLIP REPORT 출력 관련 - 20200805 추가 -->
	<select id="selectHumMasterData" parameterType="Map" resultType="rMap">
		/* selectHumMasterData (hum980rkr.Chum980rkr[fnHum980nQ].Query01) */
		DECLARE @COMP_CODE NVARCHAR(08)
		    SET @COMP_CODE = #{S_COMP_CODE}

		SELECT CONVERT(VARCHAR(10),GETDATE(),102) AS TODAY
		     , A.Name
		     , A.PERSON_NUMB
		     , A.NAME_CHI
		     , CASE WHEN A.BIRTH_DATE != '' THEN unilite.fngetUserDateComp(@COMP_CODE,A.BIRTH_DATE) 
		        END AS BIRTH_DATE   
		     , CASE WHEN A.SOLAR_YN = 'Y' THEN '(양)'
		            ELSE '(음)'
		        END SOLAR_YN 
		     , CASE WHEN RETR_DATE != '' AND RETR_DATE != '00000000' THEN '퇴직'
		            Else '재직'
		        END As SITU
		     , CONVERT(VARCHAR(4), YEAR(GETDATE())-(CASE WHEN SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),7,1) IN ('1','2') THEN '19'
		                                                 WHEN SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),7,1) IN ('3','4') THEN '20'
		                                             END + LEFT(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),2)) + 1) + '세' AS YEAR_OLD
		     , unilite.fngetUserDateComp(@COMP_CODE,A.WEDDING_DATE) AS WEDDING_DATE
		     , A.TELEPHON
		     , A.PHONE_NO
		     , CASE WHEN A.ZIP_CODE != '' THEN '(' + SUBSTRING(A.ZIP_CODE,1,3) + '-' + SUBSTRING(A.ZIP_CODE,4,6) + ')' + ' ' + A.KOR_ADDR
		            ELSE ''+ A.KOR_ADDR       
		        END ADDR
		     , unilite.fngetUserDateComp(@COMP_CODE, A.JOIN_DATE) AS JOIN_DATE
		     , '('+RIGHT('00'+CONVERT(VARCHAR(4),(CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,JOIN_DATE),GETDATE())))/12),2) +'.'+ 
		           RIGHT('00'+CONVERT(VARCHAR(4),(CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,JOIN_DATE),GETDATE()))) % 12),2)+'년)' AS JOIN_DATETIME
		     , CASE WHEN A.RETR_DATE != '' AND  A.RETR_DATE != '00000000' THEN unilite.fngetUserDateComp(@COMP_CODE, A.RETR_DATE) 
		        END AS RETR_DATE
		     , CASE WHEN A.ORI_JOIN_DATE != '' AND A.ORI_JOIN_DATE != '00000000' THEN unilite.fngetUserDateComp(@COMP_CODE, A.ORI_JOIN_DATE)
		        END AS ORI_JOIN_DATE           
		     , (CASE WHEN (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
		                        THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
		                        ELSE 0
		                    END)  != 0
		             THEN '('+RIGHT('00'+ CONVERT(VARCHAR(4), (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
		                                                            THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
		                                                             ELSE 0
		                                                        END)/12),2) +'.'+ 
		                      RIGHT('00'+ CONVERT(VARCHAR(4), (CASE WHEN A.ORI_JOIN_DATE !='' AND A.ORI_JOIN_DATE != '00000000' 
		                                                            THEN CONVERT(INT,DATEDIFF(mm,CONVERT(DATETIME,ORI_JOIN_DATE),GETDATE()))
		                                                            ELSE 0
		                                                        END) % 12),2)+'년)'
		             ELSE '0'
		         END) AS ORI_JOIN_DATETIME 
		     , (RTRIM(H.SCHOOL_NAME) + 
		        CASE WHEN ISNULL(H.DEGREE,'')    = '' THEN '' ELSE '('+H.DEGREE+')' END +' '+
		        CASE WHEN ISNULL(H.CODE_NAME,'') = '' THEN '' ELSE H.CODE_NAME      END +' '+ 
		        CASE WHEN ISNULL(H.GRAD_DATE,'') = '' THEN '' ELSE LEFT(UNILITE.fnGetUserDateComp(@COMP_CODE,H.GRAD_DATE),7) END) SCHOOL 
		     , M1.CODE_NAME AS JOIN_CODE
		     , F.DIV_NAME
		     , A.DEPT_NAME
		     , M2.CODE_NAME AS POST_CODE 
		     , M3.CODE_NAME AS ABIL_CODE 
		     , M4.CODE_NAME AS JOB_CODE
		     , (CASE WHEN ISNULL(M5.CODE_NAME,'') ='' THEN '' ELSE M5.CODE_NAME END+ 
		        CASE WHEN ISNULL(M8.CODE_NAME,'') ='' THEN '' ELSE '('+M8.CODE_NAME+')' END +' '+
		        CASE WHEN ISNULL(M7.CODE_NAME,'') ='' THEN '' ELSE M7.CODE_NAME END)  AS ARMY_KIND
		     , G.RETR
		     , B.HEIGHT
		     , B.WEIGHT
		     , M9.CODE_NAME +'형' AS BLOOD_KIND
		     , M10.CODE_NAME AS LIVE_KIND
		     , M11.CODE_NAME AS RELIGION
		     , #{HUMAN_IMAGE_PATH}                                                    AS IMG_FILE 
		     , D.RECOMMEND1_NAME
		  FROM      HUM100T A WITH(NOLOCK)
		  LEFT JOIN HUM710T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                  AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN HUM120T C WITH(NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
		                                  AND A.PERSON_NUMB = C.PERSON_NUMB
		  LEFT JOIN HUM790T D WITH(NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
		                                  AND A.PERSON_NUMB = D.PERSON_NUMB
		  LEFT JOIN BOR120T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
		                                  AND F.DIV_CODE  = A.DIV_CODE
		  LEFT JOIN (SELECT COMP_CODE
		                  , PERSON_NUMB
		                  , CASE WHEN MAX(RETR_DATE)='' THEN '' ELSE unilite.fnGetUserDateComp(@COMP_CODE,MAX(RETR_DATE)) END RETR
		               FROM HRT500T 
		              WHERE COMP_CODE = @COMP_CODE
		                AND RETR_TYPE NOT IN ('S','R')
		              GROUP BY COMP_CODE, PERSON_NUMB) G ON G.COMP_CODE   = A.COMP_CODE
		                                                AND G.PERSON_NUMB = A.PERSON_NUMB
		  LEFT JOIN (SELECT X.COMP_CODE, X.PERSON_NUMB,X.SCHOOL_NAME,X.DEGREE,M.CODE_NAME,X.GRAD_DATE
		               FROM HUM720T X WITH(NOLOCK)
					   INNER JOIN (SELECT COMP_CODE, PERSON_NUMB, MAX(ENTR_DATE) ENTR_DATE
		                             FROM HUM720T WITH(NOLOCK)
		                            GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE   = Y.COMP_CODE
		                                                              AND X.PERSON_NUMB = Y.PERSON_NUMB
		                                                              AND X.ENTR_DATE   = Y.ENTR_DATE
		               LEFT  JOIN BSA100T M WITH(NOLOCK) ON M.COMP_CODE = X.COMP_CODE
		                                                AND MAIN_CODE   = 'H087'
		                                                AND SUB_CODE    = X.FIRST_SUBJECT) H ON A.COMP_CODE   = H.COMP_CODE
		                                                                                    AND A.PERSON_NUMB = H.PERSON_NUMB
		  LEFT JOIN BSA100T M1  WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                    AND M1.MAIN_CODE = 'H012'
		                                    AND M1.SUB_CODE  = A.JOIN_CODE
		  LEFT JOIN BSA100T M2  WITH(NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
		                                    AND M2.MAIN_CODE = 'H005'
		                                    AND M2.SUB_CODE  = A.POST_CODE
		  LEFT JOIN BSA100T M3  WITH(NOLOCK) ON M3.COMP_CODE = A.COMP_CODE
		                                    AND M3.MAIN_CODE = 'H006'
		                                    AND M3.SUB_CODE  = A.ABIL_CODE
		  LEFT JOIN BSA100T M4  WITH(NOLOCK) ON M4.COMP_CODE = A.COMP_CODE
		                                    AND M4.MAIN_CODE = 'H008'
		                                    AND M4.SUB_CODE  = A.JOB_CODE
		  LEFT JOIN BSA100T M5  WITH(NOLOCK) ON M5.COMP_CODE = A.COMP_CODE
		                                    AND M5.MAIN_CODE = 'H017'
		                                    AND M5.SUB_CODE  = A.ARMY_KIND
		  LEFT JOIN BSA100T M7  WITH(NOLOCK) ON M7.COMP_CODE = A.COMP_CODE
		                                    AND M7.MAIN_CODE = 'H016'
		                                    AND M7.SUB_CODE  = A.MIL_TYPE
		  LEFT JOIN BSA100T M8  WITH(NOLOCK) ON M8.COMP_CODE = A.COMP_CODE
		                                    AND M8.MAIN_CODE = 'H018'
		                                    AND M8.SUB_CODE  = A.ARMY_GRADE
		  LEFT JOIN BSA100T M9  WITH(NOLOCK) ON M9.COMP_CODE = B.COMP_CODE
		                                    AND M9.MAIN_CODE = 'H080'
		                                    AND M9.SUB_CODE  = B.BLOOD_KIND
		  LEFT JOIN BSA100T M10 WITH(NOLOCK) ON M10.COMP_CODE = B.COMP_CODE
		                                    AND M10.MAIN_CODE = 'H082'
		                                    AND M10.SUB_CODE  = B.LIVE_KIND
		  LEFT JOIN BSA100T M11 WITH(NOLOCK) ON M11.MAIN_CODE = 'H086'
		                                    AND M11.SUB_CODE = B.RELIGION
		  LEFT JOIN HBS400T M12 WITH(NOLOCK) ON M12.COMP_CODE = A.COMP_CODE
	                                        AND M12.COMPANY_CODE = '1'                                    
		 WHERE A.COMP_CODE   = @COMP_CODE
		    AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M12.DAY_LABOR_RULE = '2' OR (M12.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
		 ORDER BY DEPT_CODE, POST_CODE, NAME, A.PERSON_NUMB ASC
	</select>

	<select id="selectHumDetailData" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE NVARCHAR(08)
			SET @COMP_CODE = #{S_COMP_CODE}
		
		--학력사항(subRs1)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query02
		SELECT B.PERSON_NUMB
		     , 'subRs1'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.GRAD_DATE DESC, B.SCHOOL_NAME) AS SEQ
		--학력사항(subRs1)
		     , B.SCHOOL_NAME
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.ENTR_DATE) AS ENTR_DATE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.GRAD_DATE) AS GRAD_DATE
		     , M1.CODE_NAME                                       AS GRAD_GUBUN 
		     , CASE WHEN ISNULL(M2.CODE_NAME, '') = '' THEN B.FIRST_SUBJECT
		            ELSE M2.CODE_NAME
		        END                                               AS FIRST_SUBJECT
		     , B.CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A  WITH(NOLOCK)
		  INNER JOIN HUM720T B  WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                    AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M1 WITH(NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
		                                    AND M1.MAIN_CODE  = 'H010'
		                                    AND M1.SUB_CODE   = B.GRAD_GUBUN
		  LEFT  JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE  = B.COMP_CODE
		                                    AND M2.MAIN_CODE  = 'H087'
		                                    AND M2.SUB_CODE   = B.FIRST_SUBJECT
		  LEFT JOIN HBS400T M10 WITH(NOLOCK) ON M10.COMP_CODE = A.COMP_CODE
	                                        AND M10.COMPANY_CODE = '1'                                             
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--경력사항(subRs2)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query03
		SELECT B.PERSON_NUMB
		     , 'subRs2'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.CARR_STRT_DATE DESC, A.DEPT_CODE, A.POST_CODE, A.NAME) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , B.COMP_NAME
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.CARR_STRT_DATE) AS CARR_STRT_DATE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.CARR_END_DATE)  AS CARR_END_DATE
		     , B.COMP_NAME
		     , B.POST_NAME
		     , B.OCPT_NAME
		     , B.JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM500T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                  
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		    AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--가족사항(subRs3)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query04
		SELECT B.PERSON_NUMB AS PERSON_NUMB
		     , 'subRs3'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.REL_CODE, uniLITE.fnCipherDecrypt(B.REPRE_NUM,'') DESC, B.FAMILY_NAME) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , B.FAMILY_NAME                            AS FAMILY_NAME
		     , M1.CODE_NAME                             AS REL_CODE
		     , YEAR(GETDATE()) - CONVERT(SMALLINT, CASE WHEN SUBSTRING(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),7,1) IN ('1','2') THEN '19'
		                                                WHEN SUBSTRING(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),7,1) IN ('3','4') THEN '20'
		                                            END + LEFT(unilite.fnCipherDecrypt(B.REPRE_NUM, ''),2)) +1
		                     AS REPRE_NUM 
		     , M2.CODE_NAME  AS SCHSHIP_CODE
		     , M3.CODE_NAME  AS GRADU_TYPE
		     , B.COMP_NAME 
		     , B.POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A  WITH(NOLOCK)
		  INNER JOIN HUM200T B  WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                    AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M1 WITH(NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
		                                    AND M1.MAIN_CODE  = 'H020'
		                                    AND M1.SUB_CODE   = B.REL_CODE
		  LEFT  JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE  = B.COMP_CODE
		                                    AND M2.MAIN_CODE  = 'H009'
		                                    AND M2.SUB_CODE   = B.SCHSHIP_CODE
		  LEFT  JOIN BSA100T M3 WITH(NOLOCK) ON M3.COMP_CODE  = B.COMP_CODE
		                                    AND M3.MAIN_CODE  = 'H010'
		                                    AND M3.SUB_CODE   = B.GRADU_TYPE
		  LEFT JOIN HBS400T M10 WITH(NOLOCK) ON M10.COMP_CODE = A.COMP_CODE
	                                        AND M10.COMPANY_CODE = '1'                                   
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--자격면허(subRs4)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query05
		SELECT B.PERSON_NUMB
		     , 'subRs4'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.ACQ_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , CASE WHEN ISNULL(M.CODE_NAME, '') = ''
		            THEN B.QUAL_KIND
		            ELSE M.CODE_NAME 
		       END                                                AS QUAL_KIND
		     , B.QUAL_GRADE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.ACQ_DATE)  AS ACQ_DATE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.VALI_DATE) AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM600T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB 
		  LEFT  JOIN BSA100T M WITH(NOLOCK) ON M.COMP_CODE   = B.COMP_CODE
		                                   AND M.MAIN_CODE   = 'H022'
		                                   AND (M.SUB_CODE   = B.QUAL_KIND OR M.CODE_NAME=B.QUAL_KIND)
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                   
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--교육사항 (subRs5)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query06
		SELECT B.PERSON_NUMB
		     , 'subRs5'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.EDU_FR_DATE DESC, B.EDU_TITLE) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , B.EDU_TITLE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.EDU_FR_DATE) AS EDU_FR_DATE
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.EDU_TO_DATE) AS EDU_TO_DATE
		     , B.EDU_GRADES 
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM740T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'  
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--상벌사항 (SubRs6_1,SubRs6_2)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query07
		SELECT B.PERSON_NUMB
		     , 'SubRs6_1'                               AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.OCCUR_DATE DESC) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.OCCUR_DATE) AS OCCUR_DATE
		     , M.CODE_NAME                              AS KIND_PRIZE_PENALTY
		     , B.NAME_PRIZE_PENALTY
		     , B.REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM810T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M WITH(NOLOCK) ON M.COMP_CODE   = B.COMP_CODE
		                                   AND M.MAIN_CODE   = 'H096'
		                                   AND M.SUB_CODE    = B.KIND_PRIZE_PENALTY
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                   
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND M.REF_CODE3   = '1'
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--hum980rkr.Chum980rkr[fnHum980nQ].Query08
		SELECT B.PERSON_NUMB
		     , 'SubRs6_2'                               AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.OCCUR_DATE DESC) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.OCCUR_DATE) AS OCCUR_DATE2
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.VALIDITY_DATE) AS VALIDITY_DATE2
		     , B.NAME_PRIZE_PENALTY                     AS NAME_PRIZE_PENALTY2
		     , B.REASON                                 AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM810T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M WITH(NOLOCK) ON M.COMP_CODE   = B.COMP_CODE
		                                   AND M.MAIN_CODE   = 'H096'
		                                   AND M.SUB_CODE    = B.KIND_PRIZE_PENALTY
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                   
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND M.REF_CODE3   = '2'
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--발령사항 (subRs7)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query09
		SELECT B.PERSON_NUMB
		     , 'subRs7'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.ANNOUNCE_DATE DESC, A.DEPT_CODE, A.POST_CODE,  A.NAME , A.PERSON_NUMB ASC) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , UNILITE.fnGetUserDateComp(@COMP_CODE, B.ANNOUNCE_DATE) AS ANNOUNCE_DATE
		     , M1.CODE_NAME                            AS ANNOUNCE_CODE
		     , C.DIV_NAME                              AS AF_DIV_NAME
		     , B.AF_DEPT_NAME
		     , M2.CODE_NAME                            AS POST_CODE
		     , M3.CODE_NAME                            AS ABIL_CODE 
		     , B.ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , ''                                       AS EXAM_KIND
		     , ''                                       AS GAIN_DATE
		     , 0                                        AS GRADES
		     , ''                                       AS CLASS
		     , ''                                       AS VALI_DATE
		  FROM       HUM100T A  WITH(NOLOCK)
		  INNER JOIN HUM760T B  WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                    AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M1 WITH(NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
		                                    AND M1.MAIN_CODE  = 'H094'
		                                    AND M1.SUB_CODE   = B.ANNOUNCE_CODE
		  LEFT  JOIN BOR120T C WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                    AND C.DIV_CODE    = B.AF_DIV_NAME 
		  LEFT  JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE  = B.COMP_CODE
		                                    AND M2.MAIN_CODE  = 'H005'
		                                    AND M2.SUB_CODE   = B.POST_CODE
		  LEFT  JOIN BSA100T M3 WITH(NOLOCK) ON M3.COMP_CODE  = B.COMP_CODE
		                                    AND M3.MAIN_CODE  = 'H006'
		                                    AND M3.SUB_CODE   = B.ABIL_CODE
		  LEFT JOIN HBS400T M10 WITH(NOLOCK) ON M10.COMP_CODE  = A.COMP_CODE
	                                        AND M10.COMPANY_CODE = '1'                                         
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		  AND (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>

		UNION ALL

		--외국어 자격사항 (subRs8)
		--hum980rkr.Chum980rkr[fnHum980nQ].Query10
		SELECT B.PERSON_NUMB
		     , 'subRs8'                                 AS SUB_SUBJECT
		     , ROW_NUMBER() OVER(PARTITION BY B.PERSON_NUMB ORDER BY B.GAIN_DATE DESC) AS SEQ
		--학력사항(subRs1)
		     , ''                                       AS SCHOOL_NAME
		     , ''                                       AS ENTR_DATE
		     , ''                                       AS GRAD_DATE
		     , ''                                       AS GRAD_GUBUN 
		     , ''                                       AS FIRST_SUBJECT
		     , ''                                       AS CREDITS
		--경력사항(subRs2)
		     , ''                                       AS COMP_NAME
		     , ''                                       AS CARR_STRT_DATE
		     , ''                                       AS CARR_END_DATE
		     , ''                                       AS COMP_NAME
		     , ''                                       AS POST_NAME
		     , ''                                       AS OCPT_NAME
		     , ''                                       AS JOB_NAME
		--가족사항(subRs3)
		     , ''                                       AS FAMILY_NAME
		     , ''                                       AS REL_CODE
		     , 0                                        AS REPRE_NUM 
		     , ''                                       AS SCHSHIP_CODE
		     , ''                                       AS GRADU_TYPE
		     , ''                                       AS COMP_NAME 
		     , ''                                       AS POST_NAME
		--자격면허(subRs4)
		     , ''                                       AS QUAL_KIND
		     , ''                                       AS QUAL_GRADE
		     , ''                                       AS ACQ_DATE
		     , ''                                       AS VALI_DATE
		--교육사항 (subRs5)
		     , ''                                       AS EDU_TITLE
		     , ''                                       AS EDU_FR_DATE
		     , ''                                       AS EDU_TO_DATE
		     , 0                                        AS EDU_GRADES
		--상벌사항 (SubRs6_1)
		     , ''                                       AS OCCUR_DATE
		     , ''                                       AS KIND_PRIZE_PENALTY
		     , ''                                       AS NAME_PRIZE_PENALTY
		     , ''                                       AS REASON    
		--상벌사항 (SubRs6_2)
		     , ''                                       AS OCCUR_DATE2
		     , ''                                       AS VALIDITY_DATE2
		     , ''                                       AS NAME_PRIZE_PENALTY2
		     , ''                                       AS REASON2
		--발령사항 (subRs7)
		     , ''                                       AS ANNOUNCE_DATE
		     , ''                                       AS ANNOUNCE_CODE
		     , ''                                       AS AF_DIV_NAME
		     , ''                                       AS AF_DEPT_NAME
		     , ''                                       AS POST_CODE
		     , ''                                       AS ABIL_CODE 
		     , ''                                       AS ANNOUNCE_REASON
		--외국어 자격사항 (subRs8)
		     , M.CODE_NAME                              AS EXAM_KIND
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.GAIN_DATE) AS GAIN_DATE
		     , B.GRADES
		     , B.CLASS
		     , unilite.fnGetUserDateComp(@COMP_CODE, B.VALI_DATE) AS VALI_DATE
		  FROM       HUM100T A WITH(NOLOCK)
		  INNER JOIN HUM750T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT  JOIN BSA100T M WITH(NOLOCK) ON M.COMP_CODE = B.COMP_CODE
		                                   AND M.MAIN_CODE = 'H093'
		                                   AND M.SUB_CODE  = B.EXAM_KIND
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                         
		 WHERE A.COMP_CODE   = @COMP_CODE
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE    = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE  &lt;=#{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(POST_CODE)">
		   AND A.POST_CODE   = #{POST_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		   AND A.PAY_GUBUN   = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		   AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
	</select>
</mapper>