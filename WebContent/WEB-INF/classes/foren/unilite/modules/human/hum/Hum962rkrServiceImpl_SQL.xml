<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hum962rkrServiceImpl">
	
	<select id="hum962rkrServiceImpl.selectList1" parameterType="Map" resultType="rMap" >	
	/* hum962rkrServiceImpl.selectList1 */	
	
	--hum962rkr.Chum962rkr[fnHum962nq]
	SELECT
          A.PERSON_NUMB
        , A.NAME
        , A.NAME_CHI
        , A.NAME_ENG
        , CASE WHEN ISNULL(B8.REF_CODE1, '') = 'Y'
                    THEN CASE WHEN ISNULL(B8.REF_CODE2, '') = '1' THEN ISNULL(B1.CODE_NAME, '')
                              WHEN ISNULL(B8.REF_CODE2, '') = '2' THEN ISNULL(B1.CODE_NAME, '') + ' ' + ISNULL(B9.CODE_NAME, '')
                              ELSE B1.CODE_NAME
                         END
               ELSE B1.CODE_NAME
          END                                                               AS POST_CODE
        , A.PAY_GRADE_01
        , A.PAY_GRADE_02
        , CASE WHEN A.SEX_CODE = 'M' THEN '남' ELSE '여' END    AS SEX_CODE
        , unilite.fnCipherDecrypt(REPRE_NUM, 'RR')              AS REPRE_NUM
        , B2.CODE_NAME                                          AS JOIN_CODE
        , A.ORI_ADDR
        , A.KOR_ADDR
        , SUBSTRING(A.ZIP_CODE, 1, 3) + '-' 
       +  SUBSTRING(A.ZIP_CODE, 4, 3)                           AS ZIP_CODE
        , A.PHONE_NO
        , B3.CODE_NAME                                          AS ARMY_KIND
        , B4.CODE_NAME                                          AS ARMY_MAJOR
        , B5.CODE_NAME                                          AS ARMY_GRADE
        , A.ARMY_NO
        , CASE WHEN ISNULL(A.ARMY_STRT_DATE, '') = '' OR A.ARMY_STRT_DATE = '00000000' THEN NULL
               ELSE REPLACE(
                    REPLACE(
                    REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ARMY_STRT_DATE, 1, 4))
                                                             , 'MM',   SUBSTRING(A.ARMY_STRT_DATE, 5, 2))
                                                             , 'DD',   SUBSTRING(A.ARMY_STRT_DATE, 7, 2))
          END                                                   AS ARMY_STRT_DATE
        , CASE WHEN ISNULL(A.ARMY_LAST_DATE, '') = '' OR A.ARMY_LAST_DATE = '00000000' THEN NULL
               ELSE REPLACE(
                    REPLACE(
                    REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ARMY_LAST_DATE, 1, 4))
                                                             , 'MM',   SUBSTRING(A.ARMY_LAST_DATE, 5, 2))
                                                             , 'DD',   SUBSTRING(A.ARMY_LAST_DATE, 7, 2))
          END                                                   AS ARMY_LAST_DATE
        , CASE WHEN
                ISDATE(A.ARMY_STRT_DATE) = 1 AND ISDATE(A.ARMY_LAST_DATE) = 1
               THEN
                  CASE WHEN (datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) / 12) = 0
                       THEN ''
                       ELSE CONVERT(VARCHAR, datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) / 12) + '년 '
                  END +
                  CASE WHEN (datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) % 12) = 0
                       THEN ''
                       ELSE CONVERT(VARCHAR, datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) % 12) + '개월'
                  END   
               ELSE ''                                              
          END AS ARMY_PERIOD
        , B6.CODE_NAME                                          AS MIL_TYPE
        , D.IMG_FILE
        , A1.DIV_FULL_NAME                                      AS DIV_NAME
        , ISNULL(B7.REF_CODE1, 'N')                             AS ANNOUNCE_RPT_YN
        , ISNULL(REPLACE(
                 REPLACE(
                 REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.JOIN_DATE, 1, 4))
                                                           , 'MM'  , SUBSTRING(A.JOIN_DATE, 5, 2))
                                                           , 'DD'  , SUBSTRING(A.JOIN_DATE, 7, 2)) , '')  AS JOIN_DATE

        , ISNULL(REPLACE(
                 REPLACE(
                 REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.ORI_JOIN_DATE, 1, 4))
                                                           , 'MM'  , SUBSTRING(A.ORI_JOIN_DATE, 5, 2))
                                                           , 'DD'  , SUBSTRING(A.ORI_JOIN_DATE, 7, 2)) , '')  AS ORI_JOIN_DATE

        , CASE WHEN A.RETR_DATE = '00000000'
               THEN ''
               ELSE ISNULL(REPLACE(
                           REPLACE(
                           REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.RETR_DATE, 1, 4))
                                                                     , 'MM',   SUBSTRING(A.RETR_DATE, 5, 2))
                                                                     , 'DD',   SUBSTRING(A.RETR_DATE, 7, 2)) , '')  END AS RETR_DATE
        , '' AS CARR_STRT_DATE
        , '' AS CARR_END_DATE
        , '' AS COMP_NAME
        , '' AS ANNOUNCE_DATE
        , '' AS ANNOUNCE_CODE
        , '' AS AF_DIV_NAME
FROM              HUM100T A  WITH (NOLOCK)
        LEFT JOIN BOR120T A1 WITH (NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
                                          AND A1.DIV_CODE  = A.DIV_CODE
        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
                                          AND B1.MAIN_CODE  = 'H005'
                                          AND B1.SUB_CODE   = A.POST_CODE
        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
                                          AND B2.MAIN_CODE  = 'H012'
                                          AND B2.SUB_CODE   = A.JOIN_CODE
        LEFT JOIN BSA100T B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
                                          AND B3.MAIN_CODE  = 'H017'
                                          AND B3.SUB_CODE   = A.ARMY_KIND
        LEFT JOIN BSA100T B4 WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE
                                          AND B4.MAIN_CODE  = 'H019'
                                          AND B4.SUB_CODE   = A.ARMY_MAJOR
        LEFT JOIN BSA100T B5 WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE
                                          AND B5.MAIN_CODE  = 'H018'
                                          AND B5.SUB_CODE   = A.ARMY_GRADE
        LEFT JOIN BSA100T B6 WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE
                                          AND B6.MAIN_CODE  = 'H016'
                                          AND B6.SUB_CODE   = A.MIL_TYPE
        LEFT JOIN BSA100T B7 WITH (NOLOCK) ON B7.COMP_CODE  = A.COMP_CODE
                                          AND B7.MAIN_CODE  = 'H175'
                                          AND B7.SUB_CODE   = '13'           -- (공공)인사카드 임면사항 별지출력여부
        LEFT JOIN BSA100T B8 WITH (NOLOCK) ON B8.COMP_CODE  = A.COMP_CODE
                                          AND B8.MAIN_CODE  = 'H175'
                                          AND B8.SUB_CODE   = '11'           -- (공공)인사카드 임면사항 직급
        LEFT JOIN BSA100T B9 WITH (NOLOCK) ON B9.COMP_CODE  = A.COMP_CODE
                                          AND B9.MAIN_CODE  = 'H006'         -- 직책
                                          AND B9.SUB_CODE   = A.ABIL_CODE
        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                          AND C.MAIN_CODE   = 'B044'
                                          AND C.REF_CODE1   = 'Y'
        LEFT JOIN HUM120T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                          AND D.PERSON_NUMB = A.PERSON_NUMB
WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
		
		ORDER BY A.PERSON_NUMB ASC	
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub01" parameterType="Map" resultType="rMap" >	
	--hum962rkr.Chum962rkr[fnHum962nq]-subRs1
	SELECT   
	          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A. REL_CODE DESC)) AS ROW_NUM 
	        , A.PERSON_NUMB
	        , B1.CODE_NAME                  AS REL_CODE
	        , A.FAMILY_NAME
	        , unilite.fnGetUserDateComp(N'MASTER', CASE SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR'), 8, 1)
	            WHEN '1' THEN '19'
	            WHEN '2' THEN '19'
	            WHEN '3' THEN '20'
	            WHEN '4' THEN '20'
	            ELSE ''
	          END + SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR'), 1, 6))     AS REPRE_NUM
	        , B2.CODE_NAME                  AS SCHSHIP_CODE
	        , A.OCCUPATION
	FROM              HUM200T A  WITH (NOLOCK)
	        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
	                                          AND B1.MAIN_CODE  = 'H020'
	                                          AND B1.SUB_CODE   = A.REL_CODE
	        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
	                                          AND B2.MAIN_CODE  = 'H009'
	                                          AND B2.SUB_CODE   = A.SCHSHIP_CODE
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
	 ORDER BY A.PERSON_NUMB,A. REL_CODE
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub02" parameterType="Map" resultType="rMap" >	
	--hum962rkr.Chum962rkr[fnHum962nq]-subRs2
	SELECT    
	          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.PERSON_NUMB)) AS ROW_NUM 
	        , A.PERSON_NUMB
	        , CAST(A.HEIGHT AS VARCHAR) + '㎝'                     AS HEIGHT
	        , CAST(A.WEIGHT AS VARCHAR) + '㎏'                     AS WEIGHT
	        , '좌(' + A.SIGHT_LEFT + ') 우(' + A.SIGHT_RIGHT + ')' AS SIGHT
	        , B2.CODE_NAME                                         AS BLOOD_KIND
	        , B1.CODE_NAME                                         AS RELIGION
	        , A.SPECIAL_ABILITY
	FROM              HUM710T A  WITH (NOLOCK)
	        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
	                                          AND B1.MAIN_CODE  = 'H086'
	                                          AND B1.SUB_CODE   = A.RELIGION
	        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
	                                          AND B2.MAIN_CODE  = 'H080'
	                                          AND B2.SUB_CODE   = A.BLOOD_KIND
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
	 ORDER BY A.PERSON_NUMB
	</select>
			
	<select id="hum962rkrServiceImpl.ds_sub03" parameterType="Map" resultType="rMap" >		
	--hum962rkr.Chum962rkr[fnHum962nq]-subRs3
		SELECT  
	          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.OCCUR_DATE DESC)) AS ROW_NUM 
	        , A.PERSON_NUMB
	        , REPLACE(
	          REPLACE(
	          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.OCCUR_DATE, 1, 4))
	                                                    , 'MM',   SUBSTRING(A.OCCUR_DATE, 5, 2))
	                                                    , 'DD',   SUBSTRING(A.OCCUR_DATE, 7, 2))                      AS OCCUR_DATE
	        , A.REASON
	        , ISNULL(A.NAME_PRIZE_PENALTY, B1.CODE_NAME) AS KIND_PRIZE_PENALTY
		FROM              HUM810T A  WITH (NOLOCK)
	        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
	                                          AND B1.MAIN_CODE  = 'H096'
	                                          AND B1.SUB_CODE   = A.KIND_PRIZE_PENALTY
	        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                          AND C.MAIN_CODE   = 'B044'
	                                          AND C.REF_CODE1   = 'Y'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
					AND A.PERSON_NUMB  = #{PERSON_NUMB}
				</if>
				 AND  (ISNULL(B1.REF_CODE3, '') = '2'
			   OR   A.KIND_PRIZE_PENALTY    >= '20')
		ORDER BY A.OCCUR_DATE DESC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub04" parameterType="Map" resultType="rMap" >	
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs4
		SELECT  
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ACQ_DATE DESC)) AS ROW_NUM 
		        , A.PERSON_NUMB
		        , REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ACQ_DATE, 1, 4))
		                                                    , 'MM',   SUBSTRING(A.ACQ_DATE, 5, 2))
		                                                    , 'DD',   SUBSTRING(A.ACQ_DATE, 7, 2))                      AS ACQ_DATE
		        , ISNULL(B1.CODE_NAME, A.QUAL_KIND) AS QUAL_KIND
		        , A.QUAL_MACH
		FROM              HUM600T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H022'
		                                          AND B1.SUB_CODE   = A.QUAL_KIND
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
					AND A.PERSON_NUMB  = #{PERSON_NUMB}
				</if>
		ORDER BY A.PERSON_NUMB ASC, A.ACQ_DATE DESC
	</select>
	<select id="hum962rkrServiceImpl.ds_sub05" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs5
		SELECT 
			
		         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.EDU_FR_DATE DESC)) AS ROW_NUM 
		        ,  A.PERSON_NUMB
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.EDU_FR_DATE, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.EDU_FR_DATE, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.EDU_FR_DATE, 7, 2))  , '')                    
		        +'~'+ ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.EDU_TO_DATE, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.EDU_TO_DATE, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.EDU_TO_DATE, 7, 2)), '')                      AS EDU_TO_DATE
		        , A.EDU_TITLE
		        , ISNULL(B1.CODE_NAME, A.EDU_ORGAN) AS EDU_ORGAN
		        , A.EDU_GRADES
		FROM              HUM740T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H089'
		                                          AND B1.SUB_CODE   = A.EDU_ORGAN
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
					AND A.PERSON_NUMB  = #{PERSON_NUMB}
				</if>
		ORDER BY A.PERSON_NUMB ASC,A.EDU_FR_DATE DESC		
	</select>
	
	
	<select id="hum962rkrServiceImpl.ds_sub06" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs6
		SELECT    
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.OCCUR_DATE DESC)) AS ROW_NUM 
	       		, A.PERSON_NUMB
		        , REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.OCCUR_DATE, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.OCCUR_DATE, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.OCCUR_DATE, 7, 2))                      AS OCCUR_DATE
		        , A.NAME_PRIZE_PENALTY
		        , A.RELATION_ORGAN
		FROM              HUM810T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H096'
		                                          AND B1.SUB_CODE   = A.KIND_PRIZE_PENALTY
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
	</if>
		  AND  (ISNULL(B1.REF_CODE3, '') = N'1'
		   OR    A.KIND_PRIZE_PENALTY    = N'1')
		ORDER BY  A.PERSON_NUMB ASC,A.OCCUR_DATE DESC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub07" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs7
		SELECT     
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ENTR_DATE DESC)) AS ROW_NUM 
	       		, A.PERSON_NUMB
		        , REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ENTR_DATE, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.ENTR_DATE, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.ENTR_DATE, 7, 2))                      AS ENTR_DATE
		        , REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GRAD_DATE, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GRAD_DATE, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GRAD_DATE, 7, 2))                      AS GRAD_DATE
		        , A.SCHOOL_NAME
		        , ISNULL(B1.CODE_NAME, A.FIRST_SUBJECT) AS FIRST_SUBJECT
		        , A.DEGREE
		FROM              HUM720T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H087'
		                                          AND B1.SUB_CODE   = A.FIRST_SUBJECT
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
	</if>
		ORDER BY  A.PERSON_NUMB ASC,A.ENTR_DATE DESC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub08" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs8
		SELECT   
		         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY K1.PERSON_NUMB ORDER BY K1.PERSON_NUMB)) AS ROW_NUM 
	       	   , K1.PERSON_NUMB
		       , K1.MERITS_YEARS    AS MERITS_YEARS1
		       , K1.MERITS_GRADE    AS MERITS_GRADE1
		       , K2.MERITS_YEARS    AS MERITS_YEARS2
		       , K2.MERITS_GRADE    AS MERITS_GRADE2
		       , K3.MERITS_YEARS    AS MERITS_YEARS3
		       , K3.MERITS_GRADE    AS MERITS_GRADE3
		FROM
		    (
		        SELECT 
		                  T.IDX 
		                , T.PERSON_NUMB 
		                , T.COMP_CODE 
		                , T.MERITS_YEARS 
		                , T.MERITS_GRADE 
		        FROM (
		                SELECT  
		                        ROW_NUMBER() OVER(PARTITION BY A.PERSON_NUMB ORDER BY  A.PERSON_NUMB, A.MERITS_YEARS DESC) IDX
		                        , A.PERSON_NUMB
		                        , A.COMP_CODE
		                        , A.MERITS_YEARS
		                        , A.MERITS_GRADE
		                FROM    HUM770T A WITH(NOLOCK)
		             ) T
		        WHERE T.IDX &lt; 8
		    ) K1 LEFT JOIN 
		    (
		        SELECT 
		                  T.IDX 
		                , T.PERSON_NUMB 
		                , T.COMP_CODE 
		                , T.MERITS_YEARS 
		                , T.MERITS_GRADE 
		        FROM (
		                SELECT  
		                        ROW_NUMBER() OVER(PARTITION BY A.PERSON_NUMB ORDER BY  A.PERSON_NUMB, A.MERITS_YEARS DESC) IDX
		                        , A.PERSON_NUMB
		                        , A.COMP_CODE
		                        , A.MERITS_YEARS
		                        , A.MERITS_GRADE
		                FROM    HUM770T A WITH(NOLOCK)
		             ) T
		        WHERE T.IDX &gt; 7 AND T.IDX &lt; 15
		    ) K2 ON K2.IDX - 7 = K1.IDX AND K2.PERSON_NUMB = K1.PERSON_NUMB AND K2.COMP_CODE = K1.COMP_CODE
		    LEFT JOIN
		    (
		        SELECT 
		                  T.IDX 
		                , T.PERSON_NUMB 
		                , T.COMP_CODE 
		                , T.MERITS_YEARS 
		                , T.MERITS_GRADE 
		        FROM (
		                SELECT  
		                        ROW_NUMBER() OVER(PARTITION BY A.PERSON_NUMB ORDER BY  A.PERSON_NUMB, A.MERITS_YEARS DESC) IDX
		                        , A.PERSON_NUMB
		                        , A.COMP_CODE
		                        , A.MERITS_YEARS
		                        , A.MERITS_GRADE
		                FROM    HUM770T A WITH(NOLOCK)
		             ) T
		        WHERE T.IDX &gt; 14 AND T.IDX &lt; 22
		    ) K3 ON K3.IDX - 7 = K2.IDX AND K3.PERSON_NUMB = K2.PERSON_NUMB AND K3.COMP_CODE = K2.COMP_CODE
		WHERE K1.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND K1.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
			ORDER BY  K1.PERSON_NUMB
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub09" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs9
		SELECT     
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.GUARANTOR1_PERIOD_FR ASC)) AS ROW_NUM 
	       		, A.PERSON_NUMB
		        , A.GUARANTOR1_NAME
		        , A.GUARANTOR1_WORK_ZONE
		        , B1.CODE_NAME              AS GUARANTOR1_RELATION
		        , A.GUARANTOR1_ADDR
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTOR1_PERIOD_FR, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTOR1_PERIOD_FR, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTOR1_PERIOD_FR, 7, 2))  , '') + '~'       AS GUARANTOR1_PERIOD_FR            
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTOR1_PERIOD_TO, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTOR1_PERIOD_TO, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTOR1_PERIOD_TO, 7, 2)), '')                      AS GUARANTOR1_PERIOD_TO
		        , A.GUARANTOR2_NAME
		        , A.GUARANTOR2_WORK_ZONE
		        , B2.CODE_NAME              AS GUARANTOR2_RELATION
		        , A.GUARANTOR2_ADDR
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTOR2_PERIOD_FR, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTOR2_PERIOD_FR, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTOR2_PERIOD_FR, 7, 2))  , '') + '~'       AS GUARANTOR2_PERIOD_FR            
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTOR2_PERIOD_TO, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTOR2_PERIOD_TO, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTOR2_PERIOD_TO, 7, 2)), '')                      AS GUARANTOR2_PERIOD_TO
		FROM              HUM800T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H020'
		                                          AND B1.SUB_CODE   = A.GUARANTOR1_RELATION
		        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
		                                          AND B2.MAIN_CODE  = 'H020'
		                                          AND B2.SUB_CODE   = A.GUARANTOR2_RELATION
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB,A.GUARANTOR1_PERIOD_FR ASC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub10" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs10
		SELECT    
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.PERSON_NUMB)) AS ROW_NUM 
	       		, A.PERSON_NUMB
		        , A.INSURANCE_NO
		        , A.INSURANCE_FARE
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTEE_PERIOD_FR, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTEE_PERIOD_FR, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTEE_PERIOD_FR, 7, 2))  , '') + '~'       AS GUARANTEE_PERIOD_FR            
		        , ISNULL(REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GUARANTEE_PERIOD_TO, 1, 4))
		                                                   , 'MM',   SUBSTRING(A.GUARANTEE_PERIOD_TO, 5, 2))
		                                                   , 'DD',   SUBSTRING(A.GUARANTEE_PERIOD_TO, 7, 2)), '')                      AS GUARANTEE_PERIOD_TO
		FROM              HUM800T A  WITH (NOLOCK)
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                          AND B1.MAIN_CODE  = 'H020'
		                                          AND B1.SUB_CODE   = A.GUARANTOR1_RELATION
		        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
		                                          AND B2.MAIN_CODE  = 'H020'
		                                          AND B2.SUB_CODE   = A.GUARANTOR2_RELATION
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.MAIN_CODE   = 'B044'
		                                          AND C.REF_CODE1   = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB	
	</select>
	
	
	<select id="hum962rkrServiceImpl.ds_sub11" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs11
		DECLARE         @DateFormat         NVARCHAR(10)
		        ,       @COMP_CODE          NVARCHAR(08)
		
		SELECT  TOP 1   @DateFormat = CODE_NAME
		FROM            BSA100T WITH (NOLOCK)
		WHERE           COMP_CODE = @COMP_CODE
		        AND     MAIN_CODE = N'B044'
		        AND     REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		
		SELECT
		 
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY B.CARR_STRT_DATE DESC)) AS ROW_NUM 
	       		, A.PERSON_NUMB
		        , REPLACE(
		          REPLACE(
		          REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.CARR_STRT_DATE, 1,4))
		                             , 'MM',   SUBSTRING(B.CARR_STRT_DATE, 5, 2))
		                             , 'DD',   SUBSTRING(B.CARR_STRT_DATE, 7, 2))           AS CARR_STRT_DATE
		        , REPLACE(
		          REPLACE(
		          REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.CARR_END_DATE, 1, 4))
		                             , 'MM',   SUBSTRING(B.CARR_END_DATE, 5, 2))
		                             , 'DD',   SUBSTRING(B.CARR_END_DATE, 7, 2))           AS CARR_END_DATE
		        , ISNULL(B.COMP_NAME, '') + '  ' + ISNULL(B.POST_NAME, '')                 AS COMP_NAME
		FROM
		                  HUM100T AS A WITH (NOLOCK)
		        LEFT JOIN HUM500T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                            AND B.PERSON_NUMB = A.PERSON_NUMB
		
		WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		      AND A.PAY_GUBUN      = '1'
		      AND ISNULL(A.RETR_DATE,'00000000') = '00000000'
		ORDER BY A.PERSON_NUMB ASC, B.CARR_STRT_DATE DESC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub12" parameterType="Map" resultType="rMap" >
	--hum962rkr.Chum962rkr[fnHum962nQ]-subRs12
	SELECT    CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ANNOUNCE_DATE DESC)) AS ROW_NUM 
       		, A.PERSON_NUMB
	        , REPLACE(
	          REPLACE(
	          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ANNOUNCE_DATE, 1, 4))
	                             , 'MM',   SUBSTRING(A.ANNOUNCE_DATE, 5, 2))
	                             , 'DD',   SUBSTRING(A.ANNOUNCE_DATE, 7, 2))    AS ANNOUNCE_DATE
	        , CASE WHEN ISNULL(M1.REF_CODE1, '') = 'Y'
	                    THEN CASE WHEN ISNULL(M1.REF_CODE2, '') = '1' THEN ISNULL(B1.CODE_NAME, '')
	                              WHEN ISNULL(M1.REF_CODE2, '') = '2' THEN ISNULL(B1.CODE_NAME, '') + ' ' + ISNULL(M3.CODE_NAME, '')
	                              ELSE B1.CODE_NAME
	                         END
	               ELSE B1.CODE_NAME
	          END                                                               AS POST_CODE
	        , B2.CODE_NAME AS ANNOUNCE_CODE
	        , CASE WHEN ISNULL(M2.REF_CODE1, '') = 'Y'
	                    THEN CASE WHEN ISNULL(M2.REF_CODE2, '') = '1' THEN ISNULL(B3.DIV_FULL_NAME, '')
	                              WHEN ISNULL(M2.REF_CODE2, '') = '2' THEN ISNULL(A.AF_DEPT_NAME, '')
	                              ELSE B3.DIV_FULL_NAME
	                         END
	               ELSE B3.DIV_FULL_NAME
	          END                                                               AS AF_DIV_NAME
	
	FROM               HUM760T   A   WITH (NOLOCK)
	        LEFT  JOIN BSA100T   B1  WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
	                                              AND B1.MAIN_CODE   = 'H005'
	                                              AND B1.SUB_CODE    = A.POST_CODE
	        INNER JOIN BSA100T   B2  WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
	                                              AND B2.MAIN_CODE   = 'H094'
	                                              AND B2.SUB_CODE    = A.ANNOUNCE_CODE
	                                              AND ISNULL(B2.REF_CODE2, '') = 'Y'
	        LEFT  JOIN BOR120T   B3  WITH (NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
	                                              AND B3.DIV_CODE    = A.AF_DIV_NAME
	        LEFT  JOIN BSA100T   C   WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
	                                              AND C.MAIN_CODE    = 'B044'
	                                              AND C.REF_CODE1    = 'Y'
	        LEFT  JOIN BSA100T   M1  WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
	                                              AND M1.MAIN_CODE   = 'H175'
	                                              AND M1.SUB_CODE    = '11'           -- (공공)인사카드 임면사항 직급
	        LEFT  JOIN BSA100T   M2  WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
	                                              AND M2.MAIN_CODE   = 'H175'
	                                              AND M2.SUB_CODE    = '12'           -- (공공)인사카드 임면사항 발령청
	        LEFT  JOIN BSA100T   M3  WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
	                                              AND M3.MAIN_CODE   = 'H006'         -- 직책
	                                              AND M3.SUB_CODE    = A.ABIL_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
	ORDER BY  A.PERSON_NUMB ASC, A.ANNOUNCE_DATE DESC
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub13" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ]-subRs13
		SELECT 
		
		          CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ANNOUNCE_DATE DESC)) AS ROW_NUM 
       			, A.PERSON_NUMB
		        , REPLACE(
		          REPLACE(
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ANNOUNCE_DATE, 1, 4))
		                             , 'MM',   SUBSTRING(A.ANNOUNCE_DATE, 5, 2))
		                             , 'DD',   SUBSTRING(A.ANNOUNCE_DATE, 7, 2))    AS ANNOUNCE_DATE
		        , CASE WHEN ISNULL(M1.REF_CODE1, '') = 'Y'
		                    THEN CASE WHEN ISNULL(M1.REF_CODE2, '') = '1' THEN ISNULL(B1.CODE_NAME, '')
		                              WHEN ISNULL(M1.REF_CODE2, '') = '2' THEN ISNULL(B1.CODE_NAME, '') + ' ' + ISNULL(M3.CODE_NAME, '')
		                              ELSE B1.CODE_NAME
		                         END
		               ELSE B1.CODE_NAME
		          END                                                               AS POST_CODE
		        , B2.CODE_NAME AS ANNOUNCE_CODE
		        , CASE WHEN ISNULL(M2.REF_CODE1, '') = 'Y'
		                    THEN CASE WHEN ISNULL(M2.REF_CODE2, '') = '1' THEN ISNULL(B3.DIV_FULL_NAME, '')
		                              WHEN ISNULL(M2.REF_CODE2, '') = '2' THEN ISNULL(A.AF_DEPT_NAME, '')
		                              ELSE B3.DIV_FULL_NAME
		                         END
		               ELSE B3.DIV_FULL_NAME
		          END                                                               AS AF_DIV_NAME
		
		FROM               HUM760T   A   WITH (NOLOCK)
		        LEFT  JOIN BSA100T   B1  WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                              AND B1.MAIN_CODE   = 'H005'
		                                              AND B1.SUB_CODE    = A.POST_CODE
		        INNER JOIN BSA100T   B2  WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
		                                              AND B2.MAIN_CODE   = 'H094'
		                                              AND B2.SUB_CODE    = A.ANNOUNCE_CODE
		                                              AND ISNULL(B2.REF_CODE2, '') = 'Y'
		        LEFT  JOIN BOR120T   B3  WITH (NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
		                                              AND B3.DIV_CODE    = A.AF_DIV_NAME
		        LEFT  JOIN BSA100T   C   WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                              AND C.MAIN_CODE    = 'B044'
		                                              AND C.REF_CODE1    = 'Y'
		        LEFT  JOIN BSA100T   M1  WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.MAIN_CODE   = 'H175'
		                                              AND M1.SUB_CODE    = '11'           -- (공공)인사카드 임면사항 직급
		        LEFT  JOIN BSA100T   M2  WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                              AND M2.MAIN_CODE   = 'H175'
		                                              AND M2.SUB_CODE    = '12'           -- (공공)인사카드 임면사항 발령청
		        LEFT  JOIN BSA100T   M3  WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
		                                              AND M3.MAIN_CODE   = 'H006'         -- 직책
		                                              AND M3.SUB_CODE    = A.POST_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB ASC, A.ANNOUNCE_DATE DESC
	</select>	
	
	
	
	<select id="hum962rkrServiceImpl.selectList2" parameterType="Map" resultType="rMap" >
			--hum962rkr.Chum962rkr[fnHum962nQ2] 
    SELECT 
              A.PERSON_NUMB 
            , A.NAME 
            , A.NAME_CHI 
            , A.NAME_ENG 
            --, CASE WHEN ISNULL(B8.REF_CODE1, '') = 'Y' 
            --            THEN CASE WHEN ISNULL(B8.REF_CODE2, '') = '1' THEN ISNULL(B1.CODE_NAME, '') 
            --                      WHEN ISNULL(B8.REF_CODE2, '') = '2' THEN ISNULL(B1.CODE_NAME, '') + ' ' + ISNULL(B9.CODE_NAME, '') 
            --                      ELSE B1.CODE_NAME 
            --                 END 
            --       ELSE B1.CODE_NAME 
            --  END                                                               AS POST_CODE 
     
            , CASE WHEN ISNULL(B10.CODE_NAME, '') &lt;&gt; '' 
                   THEN ISNULL(B9.CODE_NAME, '')  + ' (' + ISNULL(B10.CODE_NAME, '') + ')' 
                   ELSE ISNULL(B9.CODE_NAME, '') 
               END AS POST_CODE 
     
              
            , A.PAY_GRADE_01 
            , A.PAY_GRADE_02 
            , CASE WHEN A.SEX_CODE = 'M' THEN N'남' ELSE N'여' END    AS SEX_CODE
            , unilite.fnCipherDecrypt(REPRE_NUM, 'RR')              AS REPRE_NUM 
            , B2.CODE_NAME                                          AS JOIN_CODE 
            , A.ORI_ADDR 
            , A.KOR_ADDR 
            , SUBSTRING(A.ZIP_CODE, 1, 3) + '-'  
           +  SUBSTRING(A.ZIP_CODE, 4, 3)                           AS ZIP_CODE 
            , A.PHONE_NO 
            , B3.CODE_NAME                                          AS ARMY_KIND 
            , B4.CODE_NAME                                          AS ARMY_MAJOR 
            , B5.CODE_NAME                                          AS ARMY_GRADE 
            , A.ARMY_NO 
            , CASE WHEN ISNULL(A.ARMY_STRT_DATE, '') = '' OR A.ARMY_STRT_DATE = '00000000' THEN NULL 
                   ELSE REPLACE( 
                        REPLACE( 
                        REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ARMY_STRT_DATE, 1, 4)) 
                                                                 , 'MM',   SUBSTRING(A.ARMY_STRT_DATE, 5, 2)) 
                                                                 , 'DD',   SUBSTRING(A.ARMY_STRT_DATE, 7, 2)) 
              END                                                   AS ARMY_STRT_DATE 
            , CASE WHEN ISNULL(A.ARMY_LAST_DATE, '') = '' OR A.ARMY_LAST_DATE = '00000000' THEN NULL 
                   ELSE REPLACE( 
                        REPLACE( 
                        REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ARMY_LAST_DATE, 1, 4)) 
                                                                 , 'MM',   SUBSTRING(A.ARMY_LAST_DATE, 5, 2)) 
                                                                 , 'DD',   SUBSTRING(A.ARMY_LAST_DATE, 7, 2)) 
              END                                                   AS ARMY_LAST_DATE 
            , CASE WHEN 
                    ISDATE(A.ARMY_STRT_DATE) = 1 AND ISDATE(A.ARMY_LAST_DATE) = 1 
                   THEN 
                      CASE WHEN (datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) / 12) = 0 
                           THEN '' 
                           ELSE CONVERT(VARCHAR, datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) / 12) + '斥 ' 
                      END + 
                      CASE WHEN (datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) % 12) = 0 
                           THEN '' 
                           ELSE CONVERT(VARCHAR, datediff(m, A.ARMY_STRT_DATE, A.ARMY_LAST_DATE) % 12) + '俺岿' 
                      END    
                   ELSE ''                                               
              END AS ARMY_PERIOD 
            , B6.CODE_NAME                                          AS MIL_TYPE 
            , D.IMG_FILE 
            , A1.DIV_FULL_NAME                                      AS DIV_NAME 
            , ISNULL(B7.REF_CODE1, 'N')                             AS ANNOUNCE_RPT_YN 
            , ISNULL(REPLACE( 
                     REPLACE( 
                     REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.JOIN_DATE, 1, 4)) 
                                                               , 'MM'  , SUBSTRING(A.JOIN_DATE, 5, 2)) 
                                                               , 'DD'  , SUBSTRING(A.JOIN_DATE, 7, 2)) , '')  AS JOIN_DATE 
     
            , ISNULL(REPLACE( 
                     REPLACE( 
                     REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.ORI_JOIN_DATE, 1, 4)) 
                                                               , 'MM'  , SUBSTRING(A.ORI_JOIN_DATE, 5, 2)) 
                                                               , 'DD'  , SUBSTRING(A.ORI_JOIN_DATE, 7, 2)) , '')  AS ORI_JOIN_DATE 
     
            , CASE WHEN A.RETR_DATE = '00000000' 
                   THEN '' 
                   ELSE ISNULL(REPLACE( 
                               REPLACE( 
                               REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.RETR_DATE, 1, 4)) 
                                                                         , 'MM',   SUBSTRING(A.RETR_DATE, 5, 2)) 
                                                                         , 'DD',   SUBSTRING(A.RETR_DATE, 7, 2)) , '')  END AS RETR_DATE 
            , ISNULL(E1.HEIGHT,0) AS HEIGHT  
            , ISNULL(E1.WEIGHT,0) AS WEIGHT  
            , ISNULL(E1.SIGHT_LEFT,'') AS SIGHT_LEFT  
            , ISNULL(E1.SIGHT_RIGHT,'') AS SIGHT_RIGHT  
            , ISNULL(E1.BLOOD_KIND,'') AS BLOOD_KIND  
    
            , ISNULL(REPLACE( 
                     REPLACE( 
                     REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD') , 'YYYY', SUBSTRING(A.BIRTH_DATE, 1, 4)) 
                                                               , 'MM'  , SUBSTRING(A.BIRTH_DATE, 5, 2)) 
                                                               , 'DD'  , SUBSTRING(A.BIRTH_DATE, 7, 2)) , '')  AS BIRTH_DATE 

            , ISNULL(E1.GARDEN,0) AS GARDEN  
            , ISNULL(E1.REAL_PROPERTY,0) AS REAL_PROPERTY  

            , '' AS ANNOUNCE_DATE 
            , '' AS POST_NAME 
            , '' AS ANNOUNCE_CODE 
            , '' AS AF_DIV_NAME 
            --, '' AS ANNOUNCE_DATE 
            --, '' AS ANNOUNCE_CODE 
            --, '' AS AF_DIV_NAME 
    FROM              HUM100T A   WITH (NOLOCK) 
            LEFT JOIN BOR120T A1  WITH (NOLOCK) ON A1.COMP_CODE = A.COMP_CODE 
                                               AND A1.DIV_CODE  = A.DIV_CODE 
            LEFT JOIN BSA100T B1  WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE 
                                               AND B1.MAIN_CODE  = 'H005' 
                                               AND B1.SUB_CODE   = A.POST_CODE 
            LEFT JOIN BSA100T B2  WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE 
                                               AND B2.MAIN_CODE  = 'H012' 
                                               AND B2.SUB_CODE   = A.JOIN_CODE 
            LEFT JOIN BSA100T B3  WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE 
                                               AND B3.MAIN_CODE  = 'H017' 
                                               AND B3.SUB_CODE   = A.ARMY_KIND 
            LEFT JOIN BSA100T B4  WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE 
                                               AND B4.MAIN_CODE  = 'H019' 
                                               AND B4.SUB_CODE   = A.ARMY_MAJOR 
            LEFT JOIN BSA100T B5  WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE 
                                               AND B5.MAIN_CODE  = 'H018' 
                                               AND B5.SUB_CODE   = A.ARMY_GRADE 
            LEFT JOIN BSA100T B6  WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE 
                                               AND B6.MAIN_CODE  = 'H016' 
                                               AND B6.SUB_CODE   = A.MIL_TYPE 
            LEFT JOIN BSA100T B7  WITH (NOLOCK) ON B7.COMP_CODE  = A.COMP_CODE 
                                               AND B7.MAIN_CODE  = 'H175' 
                                               AND B7.SUB_CODE   = '13'           -- (傍傍)牢荤墨靛 烙搁荤亲 喊瘤免仿咯何 
            LEFT JOIN BSA100T B8  WITH (NOLOCK) ON B8.COMP_CODE  = A.COMP_CODE 
                                               AND B8.MAIN_CODE  = 'H175' 
                                               AND B8.SUB_CODE   = '11'           -- (傍傍)牢荤墨靛 烙搁荤亲 流鞭 
            LEFT JOIN BSA100T B9  WITH (NOLOCK) ON B9.COMP_CODE  = A.COMP_CODE 
                                               AND B9.MAIN_CODE  = 'H006'         -- 流氓 
                                               AND B9.SUB_CODE   = A.ABIL_CODE 
            LEFT JOIN BSA100T B10 WITH (NOLOCK) ON B10.COMP_CODE  = A.COMP_CODE 
                                               AND B10.MAIN_CODE  = 'H173'         -- 流纺 
                                               AND B10.SUB_CODE   = A.AFFIL_CODE 
            LEFT JOIN BSA100T C   WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE 
                                               AND C.MAIN_CODE   = 'B044' 
                                               AND C.REF_CODE1   = 'Y' 
            LEFT JOIN HUM120T D   WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE 
                                               AND D.PERSON_NUMB = A.PERSON_NUMB 
            LEFT JOIN HUM710T E1  WITH (NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE 
                                               AND E1.PERSON_NUMB = A.PERSON_NUMB 

   WHERE A.COMP_CODE = #{S_COMP_CODE}
 		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND A.DIV_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       		AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
       		AND A.POST_CODE = #{POST_CODE}
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		<if test="PAY_GUBUN == &quot;Y&quot;">
		 	AND A.PAY_GUBUN = '1'
		</if>
		<if test="RETR_YN == &quot;N&quot;">
		 	AND ISNULL(A.RETR_DATE, '00000000') = '00000000'
		</if>
		
		ORDER BY A.PERSON_NUMB ASC	
	</select>
	
	<select id="hum962rkrServiceImpl.ds_sub31" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ2]-subRs1 
		DECLARE @compCode  nvarchar(8)
		SET     @compCode  = #{S_COMP_CODE}
		SELECT     
		         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY REL_CODE)) AS ROW_NUM 
       			,  A.PERSON_NUMB 
		        , B1.CODE_NAME                  AS REL_CODE 
		        , A.FAMILY_NAME 
		         , unilite.fnGetUserDateComp(@compCode, CASE SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR'), 8, 1) 
		             WHEN '1' THEN '19' 
		             WHEN '2' THEN '19' 
		             WHEN '3' THEN '20' 
		             WHEN '4' THEN '20' 
		             ELSE '' 
		           END + SUBSTRING(unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR'), 1, 6))     AS REPRE_NUM 
		        , unilite.fnCipherDecrypt(REPRE_NUM, 'RR')              AS REPRE_NUM 
		
		        , B2.CODE_NAME                  AS SCHSHIP_CODE 
		        , A.OCCUPATION 
		FROM              HUM200T A  WITH (NOLOCK) 
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE 
		                                          AND B1.MAIN_CODE  = 'H020' 
		                                          AND B1.SUB_CODE   = A.REL_CODE 
		        LEFT JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE 
		                                          AND B2.MAIN_CODE  = 'H009' 
		                                          AND B2.SUB_CODE   = A.SCHSHIP_CODE 
		 WHERE A.COMP_CODE = @compCode
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB ASC,REL_CODE 
	</select>
	<select id="hum962rkrServiceImpl.ds_sub32" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ2]-subRs2 
SELECT    
         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ENTR_DATE DESC)) AS ROW_NUM 
		, A.PERSON_NUMB 
        , REPLACE( 
          REPLACE( 
          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ENTR_DATE, 1, 4)) 
                                                   , 'MM',   SUBSTRING(A.ENTR_DATE, 5, 2)) 
                                                   , 'DD',   SUBSTRING(A.ENTR_DATE, 7, 2))                      AS ENTR_DATE 
        , REPLACE( 
          REPLACE( 
          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.GRAD_DATE, 1, 4)) 
                                                   , 'MM',   SUBSTRING(A.GRAD_DATE, 5, 2)) 
                                                   , 'DD',   SUBSTRING(A.GRAD_DATE, 7, 2))                      AS GRAD_DATE 
        , A.SCHOOL_NAME 
        , ISNULL(B1.CODE_NAME, A.FIRST_SUBJECT) AS FIRST_SUBJECT 
        , A.DEGREE 
FROM              HUM720T A  WITH (NOLOCK) 
        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE 
                                          AND B1.MAIN_CODE  = 'H087' 
                                          AND B1.SUB_CODE   = A.FIRST_SUBJECT 
        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE 
                                          AND C.MAIN_CODE   = 'B044' 
                                          AND C.REF_CODE1   = 'Y' 
  WHERE A.COMP_CODE = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
ORDER BY A.PERSON_NUMB ASC,A.ENTR_DATE DESC 

	</select>
	<select id="hum962rkrServiceImpl.ds_sub33" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ2]-subRs3 
		SELECT   
		         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ACQ_DATE DESC)) AS ROW_NUM 
				, A.PERSON_NUMB 
		        , REPLACE( 
		          REPLACE( 
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ACQ_DATE, 1, 4)) 
		                                                    , 'MM',   SUBSTRING(A.ACQ_DATE, 5, 2)) 
		                                                    , 'DD',   SUBSTRING(A.ACQ_DATE, 7, 2))                      AS ACQ_DATE 
		        , ISNULL(B1.CODE_NAME, A.QUAL_KIND) AS QUAL_KIND 
		        , A.QUAL_MACH 
		        , A.QUAL_NUM 
		FROM              HUM600T A  WITH (NOLOCK) 
		        LEFT JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE 
		                                          AND B1.MAIN_CODE  = 'H022' 
		                                          AND B1.SUB_CODE   = A.QUAL_KIND 
		        LEFT JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE 
		                                          AND C.MAIN_CODE   = 'B044' 
		                                          AND C.REF_CODE1   = 'Y' 
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB ASC,A.ACQ_DATE DESC 



	</select>
	<select id="hum962rkrServiceImpl.ds_sub34" parameterType="Map" resultType="rMap" >
		--hum962rkr.Chum962rkr[fnHum962nQ2]-subRs4 
		SELECT   
		         CONVERT(INT,ROW_NUMBER()  OVER(PARTITION BY A.PERSON_NUMB ORDER BY A.ANNOUNCE_DATE DESC)) AS ROW_NUM 
				, A.PERSON_NUMB 
		        , REPLACE( 
		          REPLACE( 
		          REPLACE(ISNULL(C.CODE_NAME, 'YYYY/MM/DD'), 'YYYY', SUBSTRING(A.ANNOUNCE_DATE, 1, 4)) 
		                             , 'MM',   SUBSTRING(A.ANNOUNCE_DATE, 5, 2)) 
		                             , 'DD',   SUBSTRING(A.ANNOUNCE_DATE, 7, 2))    AS ANNOUNCE_DATE 
		        , CASE WHEN ISNULL(M1.REF_CODE1, '') = 'Y' 
		                    THEN CASE WHEN ISNULL(M1.REF_CODE2, '') = '1' THEN ISNULL(B1.CODE_NAME, '') 
		                              WHEN ISNULL(M1.REF_CODE2, '') = '2' THEN ISNULL(B1.CODE_NAME, '') + ' ' + ISNULL(M3.CODE_NAME, '') 
		                              ELSE B1.CODE_NAME 
		                         END 
		               ELSE B1.CODE_NAME 
		          END                                                               AS POST_NAME 
		        , B2.CODE_NAME AS ANNOUNCE_CODE 
		        , CASE WHEN ISNULL(M2.REF_CODE1, '') = 'Y' 
		                    THEN CASE WHEN ISNULL(M2.REF_CODE2, '') = '1' THEN ISNULL(B3.DIV_FULL_NAME, '') 
		                              WHEN ISNULL(M2.REF_CODE2, '') = '2' THEN ISNULL(A.AF_DEPT_NAME, '') 
		                              ELSE B3.DIV_FULL_NAME 
		                         END 
		               ELSE B3.DIV_FULL_NAME 
		          END                                                               AS AF_DIV_NAME 
		 
		FROM               HUM760T   A   WITH (NOLOCK) 
		        LEFT  JOIN BSA100T   B1  WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE 
		                                              AND B1.MAIN_CODE   = 'H005' 
		                                              AND B1.SUB_CODE    = A.POST_CODE 
		        INNER JOIN BSA100T   B2  WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE 
		                                              AND B2.MAIN_CODE   = 'H094' 
		                                              AND B2.SUB_CODE    = A.ANNOUNCE_CODE 
		                                              AND ISNULL(B2.REF_CODE2, '') = 'Y' 
		        LEFT  JOIN BOR120T   B3  WITH (NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE 
		                                              AND B3.DIV_CODE    = A.AF_DIV_NAME 
		        LEFT  JOIN BSA100T   C   WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE 
		                                              AND C.MAIN_CODE    = 'B044' 
		                                              AND C.REF_CODE1    = 'Y' 
		        LEFT  JOIN BSA100T   M1  WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE 
		                                              AND M1.MAIN_CODE   = 'H175' 
		                                              AND M1.SUB_CODE    = '11'           -- (傍傍)牢荤墨靛 烙搁荤亲 流鞭 
		        LEFT  JOIN BSA100T   M2  WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE 
		                                              AND M2.MAIN_CODE   = 'H175' 
		                                              AND M2.SUB_CODE    = '12'           -- (傍傍)牢荤墨靛 烙搁荤亲 惯飞没 
		        LEFT  JOIN BSA100T   M3  WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE 
		                                              AND M3.MAIN_CODE   = 'H006'         -- 流氓 
		                                              AND M3.SUB_CODE    = A.POST_CODE 
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>
		ORDER BY A.PERSON_NUMB ASC, A.ANNOUNCE_DATE DESC 
	</select>
	
</mapper>