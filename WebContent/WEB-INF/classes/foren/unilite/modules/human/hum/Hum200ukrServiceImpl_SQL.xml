<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum200ukrServiceImpl">
	<select id="hum200ukrServiceImpl.selectList1" parameterType="rMap" resultType="rMap">
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		    
		<!--  <1. (파라메터)변수 선언> -->    
		    DECLARE @COMP_CODE              NVARCHAR(20)        <!--(필수) 법인코드 -->
		          , @PAYSTEP_YYYYMMDD       NVARCHAR(08)        <!--(필수) 호급승급일시 -->
		          , @DIV_CODE               NVARCHAR(20)        <!--(선택) 사업장 번호 -->
		          , @PAY_CODE               NVARCHAR(01)        <!--(선택) 급여지급방식(0:연봉직, 1:월급직 등) -->
		          , @FR_DEPT_CODE           NVARCHAR(20)        <!--(선택) FROM 부서코드 -->
		          , @TO_DEPT_CODE           NVARCHAR(20)        <!--(선택) TO   부서코드 -->
		          , @NAME                   NVARCHAR(30)        <!--(선택) 성명 -->
		          , @PERSON_NUMB            NVARCHAR(20)        <!--(선택) 사번 -->
		          , @PAY_GRADE_01           NVARCHAR(20)        <!--(선택) 급호 -->
		          , @PAY_GRADE_02           NVARCHAR(20)        <!--(선택) 호봉 -->
		          , @USER_ID                NVARCHAR(100)        <!--(필수) 사용자ID -->
		          
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @PAY_CODE           = #{PAY_CODE}
		    SET @FR_DEPT_CODE       = #{DEPT_CODE}
		    SET @TO_DEPT_CODE       = #{DEPT_CODE2}
		    SET @NAME               = #{NAME}
		    SET @PERSON_NUMB        = #{PERSON_NUMB}
		    SET @PAY_GRADE_01       = #{PAY_GRADE_01}
		    SET @PAY_GRADE_02       = #{PAY_GRADE_02}
		    SET @USER_ID            = #{USER_ID}
		
		<!--  <2. 명칭 조회 유형 설정> -->
		    DECLARE @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '')
		
		
		    DECLARE       @DateFormat       NVARCHAR(10)
		
		    SELECT TOP 1 @DateFormat = M1.CODE_NAME
		    FROM   BSA100T M1 WITH (NOLOCK)
		    WHERE  M1.COMP_CODE = @COMP_CODE
		    AND    M1.MAIN_CODE = 'B044'
		    AND    M1.REF_CODE1 = 'Y'
		    
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		    
		<!--  <3. 데이타 조회> -->
		    SELECT 
		           A.COMP_CODE                                                                            AS COMP_CODE
		         , B1.PAYSTEP_YYYYMMDD                                                                    AS PAYSTEP_YYYYMMDD
		         , A.DEPT_NAME                                                                            AS DEPT_NAME
		         , A.PAY_GRADE_01                                                                         AS PAY_GRADE_01
		         , A.PAY_GRADE_02                                                                         AS PAY_GRADE_02
		         , A.PERSON_NUMB                                                                          AS PERSON_NUMB
		         , A.NAME                                                                                 AS NAME
		         , B1.PAYSTEP_1                                                                           AS PAYSTEP_1
		         , B1.N_PAYSTEP_1                                                                         AS N_PAYSTEP_1
		         , B1.PAYSTEP_CARR                                                                        AS PAYSTEP_CARR
		         , B1.N_PAYSTEP_CARR                                                                      AS N_PAYSTEP_CARR
		         , B1.PAYSTEP_LONG_DAY                                                                    AS PAYSTEP_LONG_DAY
		         , B1.N_PAYSTEP_LONG_DAY                                                                  AS N_PAYSTEP_LONG_DAY
		         , B1.MODIFY_DAY                                                                          AS MODIFY_DAY
		         , B1.PO_NE_GUBUN                                                                         AS PO_NE_GUBUN
		         , B1.N_MODIFY_DAY                                                                        AS N_MODIFY_DAY
		         , B1.N_YYYY * (CASE WHEN ISNULL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)           AS N_YYYY
		         , B1.N_MM   * (CASE WHEN ISNULL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)           AS N_MM
		         , B1.N_DD   * (CASE WHEN ISNULL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)           AS N_DD
		         , B1.MODIFY_REASON                                                                       AS MODIFY_REASON
		         , B1.BEFORE_MODIFY_DAY                                                                   AS BEFORE_MODIFY_DAY
		         , B1.N_BEFORE_MODIFY_DAY                                                                 AS N_BEFORE_MODIFY_DAY
		         , B1.DEFER_DAY                                                                           AS DEFER_DAY
		         , B1.N_DEFER_DAY                                                                         AS N_DEFER_DAY
		         , B1.PAYSTEP_TOT_DAY                                                                     AS PAYSTEP_TOT_DAY
		         , B1.N_TOT_YYYY                                                                          AS N_TOT_YYYY
		         , B1.N_TOT_MM                                                                            AS N_TOT_MM
		         , B1.N_TOT_DD                                                                            AS N_TOT_DD
		         , B1.N_TOT_YYYY                                                                          AS N_BEFORE_TOT_YYYY
		         , B1.N_TOT_MM                                                                            AS N_BEFORE_TOT_MM
		         , B1.N_TOT_DD                                                                            AS N_BEFORE_TOT_DD
		         , REPLACE(CONVERT(NVARCHAR , CONVERT(MONEY, B1.PAYSTEP_TOT_DAY), 1), '.00', '') + ' ('
		         + CONVERT(NVARCHAR , CONVERT(INT , B1.PAYSTEP_TOT_DAY / 365     )) + '년 '
		         + CONVERT(NVARCHAR , CONVERT(INT , B1.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
		         + CONVERT(NVARCHAR , CONVERT(INT , B1.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'               AS TOT_DAY_CONVERT
		         , uniLITE.fnGetYMDFromDate2( ISNULL(B1.N_TOT_YYYY, 0), ISNULL(B1.N_TOT_MM  , 0)
		                                    , ISNULL(B1.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
		         + uniLITE.fnGetYMDFromDate2( ISNULL(B1.N_TOT_YYYY, 0), ISNULL(B1.N_TOT_MM  , 0)
		                                    , ISNULL(B1.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
		         + uniLITE.fnGetYMDFromDate2( ISNULL(B1.N_TOT_YYYY, 0), ISNULL(B1.N_TOT_MM  , 0)
		                                    , ISNULL(B1.N_TOT_DD  , 0), 'DAY  '                ) + '일 '  AS N_TOT_DAY_CONVERT
		         , B1.INSERT_DB_USER                                                                      AS INSERT_DB_USER
		         , B1.INSERT_DB_TIME                                                                      AS INSERT_DB_TIME
		         , B1.UPDATE_DB_USER                                                                      AS UPDATE_DB_USER
		         , B1.UPDATE_DB_TIME                                                                      AS UPDATE_DB_TIME
		    FROM              HUM100T AS A  WITH (NOLOCK)
		           INNER JOIN HUM240T AS B1 WITH (NOLOCK) ON  B1.COMP_CODE        = A.COMP_CODE
		                                                  AND B1.PERSON_NUMB      = A.PERSON_NUMB
		                                                  AND B1.PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD
		    WHERE    A.COMP_CODE          = @COMP_CODE
 		    AND      uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		    AND      A.RETR_DATE          = '00000000'
		    AND      A.PAY_GRADE_01       &gt; '0'
		    AND      B1.PAYSTEP_YYYYMMDD  = @PAYSTEP_YYYYMMDD
		    AND    ((A.DIV_CODE           = @DIV_CODE        AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
		    AND    ((A.PAY_CODE           = @PAY_CODE        AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
		    AND    ((A.DEPT_CODE         &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE     != '') OR (@FR_DEPT_CODE     = ''))
		    AND    ((A.DEPT_CODE         &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE     != '') OR (@TO_DEPT_CODE     = ''))
		    AND    ((A.NAME               = @NAME            AND @NAME             != '') OR (@NAME             = ''))
		    AND    ((A.PERSON_NUMB        = @PERSON_NUMB     AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
		    AND    ((A.PAY_GRADE_01       = @PAY_GRADE_01    AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
		    AND    ((A.PAY_GRADE_02       = @PAY_GRADE_02    AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
		    ORDER BY A.DEPT_NAME, A.PAY_GRADE_01, A.PAY_GRADE_02, A.PERSON_NUMB
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
		
	<select id="hum200ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
		BEGIN
	    SET NOCOUNT    ON
	    SET ARITHABORT ON
	
	<!--  <1. (파라메터)변수 선언> -->    
	    DECLARE @COMP_CODE              NVARCHAR(20)        <!--(필수) 법인코드-->
	          , @PAYSTEP_YYYYMMDD       NVARCHAR(08)        <!--(필수) 호급승급일시-->
	          , @DIV_CODE               NVARCHAR(20)        <!--(선택) 사업장 번호-->
	          , @PAY_CODE               NVARCHAR(01)        <!--(선택) 급여지급방식(0:연봉직, 1:월급직 등)-->
	          , @FR_DEPT_CODE           NVARCHAR(20)        <!--(선택) FROM 부서코드-->
	          , @TO_DEPT_CODE           NVARCHAR(20)        <!--(선택) TO   부서코드-->
	          , @NAME                   NVARCHAR(30)        <!--(선택) 성명-->
	          , @PERSON_NUMB            NVARCHAR(20)        <!--(선택) 사번-->
	          , @PAY_GRADE_01           NVARCHAR(20)        <!--(선택) 급호-->
	          , @PAY_GRADE_02           NVARCHAR(20)        <!--(선택) 호봉-->
	          , @USER_ID                NVARCHAR(100)        <!--(필수) 사용자ID-->
	          
	   		SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @PAY_CODE           = #{PAY_CODE}
		    SET @FR_DEPT_CODE       = #{DEPT_CODE}
		    SET @TO_DEPT_CODE       = #{DEPT_CODE2}
		    SET @NAME               = #{NAME}
		    SET @PERSON_NUMB        = #{PERSON_NUMB}
		    SET @PAY_GRADE_01       = #{PAY_GRADE_01}
		    SET @PAY_GRADE_02       = #{PAY_GRADE_02}
		    SET @USER_ID            = #{USER_ID}
	
	<!--  <2. 명칭 조회 유형 설정> -->
	    DECLARE @RefItem            NVARCHAR(01)
	
	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID = @USER_ID
	
	    SET @RefItem = ISNULL(@RefItem, '')
	
	
	    DECLARE       @DateFormat       NVARCHAR(10)
	
	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = 'B044'
	    AND    M1.REF_CODE1 = 'Y'
	    
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	    
	<!--  <3. 데이타 조회> -->
	
	    SELECT 
	           CAST(0 AS BIT)                                                                         AS CHOICE 
	         , A.COMP_CODE                                                                            AS COMP_CODE
	         , A.PAYSTEP_YYYYMMDD                                                                     AS PAYSTEP_YYYYMMDD
	         , A.DEPT_NAME                                                                            AS DEPT_NAME
	         , A.PAY_GRADE_01                                                                         AS PAY_GRADE_01
	         , A.PAY_GRADE_02                                                                         AS PAY_GRADE_02
	         , A.PERSON_NUMB                                                                          AS PERSON_NUMB
	         , A.NAME                                                                                 AS NAME
	         , A.TOT_DAY_CONVERT                                                                      AS TOT_DAY_CONVERT
	         , A.EXPECT_PAY_GRADE                                                                     AS EXPECT_PAY_GRADE
	         , CASE WHEN A.CONTRACT_TODATE  >= A.PAYSTEP_YYYYMMDD THEN 'N'
	                WHEN A.VALIDITY_DATE    >= A.PAYSTEP_YYYYMMDD THEN 'N'
	                WHEN CONVERT(INT, A.EXPECT_PAY_GRADE)  > CASE WHEN ISNULL(A.LIMIT, '') = '' THEN CONVERT(INT, A.EXPECT_PAY_GRADE)
	                                                                                            ELSE CONVERT(INT, A.LIMIT) END
	                                                              THEN 'N'
	                                                              ELSE 'Y'
	           END                                                                                    AS EXPECT_GUBUN
	         , CASE WHEN A.CONTRACT_TODATE >= A.PAYSTEP_YYYYMMDD THEN REPLACE(
	                                                                  REPLACE(
	                                                                  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CONTRACT_TODATE, 1, 4))
	                                                                                     , 'MM',   SUBSTRING(A.CONTRACT_TODATE, 5, 2))
	                                                                                     , 'DD',   SUBSTRING(A.CONTRACT_TODATE, 7, 2))
	                WHEN A.VALIDITY_DATE   >= A.PAYSTEP_YYYYMMDD THEN REPLACE(
	                                                                  REPLACE(
	                                                                  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.VALIDITY_DATE, 1, 4))
	                                                                                     , 'MM',   SUBSTRING(A.VALIDITY_DATE, 5, 2))
	                                                                                     , 'DD',   SUBSTRING(A.VALIDITY_DATE, 7, 2))
	                                                             ELSE ''
	           END                                                                                    AS EXPECT_YYYYMMDD
	         , CASE WHEN A.CONTRACT_TODATE >= A.PAYSTEP_YYYYMMDD THEN A.CONTRACT_REMARK
	                WHEN A.VALIDITY_DATE   >= A.PAYSTEP_YYYYMMDD THEN A.VALIDITY_REMARK
	                                                             ELSE ''
	           END                                                                                    AS EXPECT_REMARK
	    FROM   (
	            SELECT 
	                   B1.COMP_CODE                                                                            AS COMP_CODE
	                 , B1.PERSON_NUMB                                                                          AS PERSON_NUMB
	                 , B1.DEPT_NAME                                                                            AS DEPT_NAME
	                 , B1.PAY_GRADE_01                                                                         AS PAY_GRADE_01
	                 , B1.PAY_GRADE_02                                                                         AS PAY_GRADE_02
	                 , B1.NAME                                                                                 AS NAME
	                 , A.PAYSTEP_YYYYMMDD                                                                      AS PAYSTEP_YYYYMMDD
	                 , CASE WHEN B4.SUB_CODE = '1' THEN REPLACE(CONVERT(NVARCHAR , CONVERT(MONEY, A.PAYSTEP_TOT_DAY), 1), '.00', '') + ' ('
	                                                  + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY / 365     )) + '년 '
	                                                  + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
	                                                  + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'
	                                               ELSE (CASE WHEN ISNULL(A.PO_NE_GUBUN, '1') = '1' THEN '' ELSE '-' END)
	                                                  + uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
	                                                                             , ISNULL(A.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
	                                                  + uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
	                                                                             , ISNULL(A.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
	                                                  + uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
	                                                                             , ISNULL(A.N_TOT_DD  , 0), 'DAY  '                ) + '일 '   END AS TOT_DAY_CONVERT
	                 , CASE WHEN B4.SUB_CODE = '1' THEN CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY / 365))
	                                               ELSE CONVERT(NVARCHAR , CONVERT(INT , A.N_TOT_YYYY)) END    AS EXPECT_PAY_GRADE
	                 , B2.CONTRACT_TODATE                                                                      AS CONTRACT_TODATE
	                 , B2.CONTRACT_REMARK                                                                      AS CONTRACT_REMARK
	                 , B3.VALIDITY_DATE                                                                        AS VALIDITY_DATE
	                 , B3.VALIDITY_REMARK                                                                      AS VALIDITY_REMARK
	                 , B5.REF_CODE5                                                                            AS LIMIT
	            FROM              HUM240T      AS A  WITH (NOLOCK)
	                   INNER JOIN HUM100T      AS B1 WITH (NOLOCK) ON  B1.COMP_CODE        = A.COMP_CODE
	                                                               AND B1.PERSON_NUMB      = A.PERSON_NUMB
	                   LEFT  JOIN BSA100T      AS B4 WITH (NOLOCK) ON  B4.COMP_CODE        = A.COMP_CODE
	                                                               AND B4.MAIN_CODE        = N'HP03'
	                                                               AND B4.REF_CODE1        = N'Y'
	                   LEFT  JOIN BSA100T      AS B5 WITH (NOLOCK) ON  B5.COMP_CODE        = B1.COMP_CODE
	                                                               AND B5.MAIN_CODE        = N'HP01'
	                                                               AND B5.SUB_CODE         = B1.POST_CODE
	                   LEFT  JOIN (
	                               SELECT 
	                                      B1.COMP_CODE
	                                    , B1.PERSON_NUMB
	                                    , B3.CONTRACT_TODATE
	                                    , B2.CODE_NAME         AS CONTRACT_REMARK
	                               FROM              HUM840T AS B1 WITH(NOLOCK)
	                                      INNER JOIN BSA100T AS B2 WITH(NOLOCK) ON  B2.COMP_CODE = B1.COMP_CODE
	                                                                            AND B2.MAIN_CODE = N'H164'
	                                                                            AND B2.SUB_CODE  = B1.CONTRACT_GUBUN
	                                      INNER JOIN (
	                                                  SELECT 
	                                                         C1.COMP_CODE            AS COMP_CODE
	                                                       , C1.PERSON_NUMB          AS PERSON_NUMB
	                                                       , MAX(C1.CONTRACT_TODATE) AS CONTRACT_TODATE
	                                                  FROM              HUM840T AS C1 WITH(NOLOCK)
	                                                         INNER JOIN BSA100T AS C2 WITH(NOLOCK) ON  C2.COMP_CODE = C1.COMP_CODE
	                                                                                               AND C2.MAIN_CODE = N'H164'
	                                                                                               AND C2.SUB_CODE  = C1.CONTRACT_GUBUN
	                                                  WHERE  C1.COMP_CODE = @COMP_CODE
	                                                  AND    C2.REF_CODE1 = N'Y'
	                                                  GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
	                                                 ) AS B3 ON  B3.COMP_CODE       = B1.COMP_CODE
	                                                         AND B3.PERSON_NUMB     = B1.PERSON_NUMB
	                                                         AND B3.CONTRACT_TODATE = B1.CONTRACT_TODATE
	                               WHERE  B1.COMP_CODE = @COMP_CODE
	                               AND    B2.REF_CODE1 = N'Y'
	                              ) AS B2 ON  B2.COMP_CODE   = A.COMP_CODE
	                                      AND B2.PERSON_NUMB = A.PERSON_NUMB
	                   LEFT  JOIN (
	                               SELECT 
	                                      B1.COMP_CODE
	                                    , B1.PERSON_NUMB
	                                    , B1.VALIDITYTO_DATE AS VALIDITY_DATE
	                                    , B2.CODE_NAME     AS VALIDITY_REMARK
	                               FROM              HUM810T AS B1 WITH(NOLOCK)
	                                      INNER JOIN BSA100T AS B2 WITH(NOLOCK) ON  B2.COMP_CODE = B1.COMP_CODE
	                                                                            AND B2.MAIN_CODE = N'H096'
	                                                                            AND B2.SUB_CODE  = B1.KIND_PRIZE_PENALTY
	                                      INNER JOIN (
	                                                  SELECT 
	                                                         C1.COMP_CODE              AS COMP_CODE
	                                                       , C1.PERSON_NUMB            AS PERSON_NUMB
	                                                       , MAX(C1.VALIDITYTO_DATE)   AS VALIDITY_DATE
	                                                  FROM   HUM810T AS C1 WITH(NOLOCK)
	                                                  WHERE  C1.COMP_CODE                   = @COMP_CODE
	                                                  AND    LEFT(C1.KIND_PRIZE_PENALTY, 1) = N'2'
	                                                  GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
	                                                 ) AS B3 ON  B3.COMP_CODE     = B1.COMP_CODE
	                                                         AND B3.PERSON_NUMB   = B1.PERSON_NUMB
	                                                         AND B3.VALIDITY_DATE = B1.VALIDITYTO_DATE
	                               WHERE  B1.COMP_CODE                   = @COMP_CODE
	                               AND    LEFT(B1.KIND_PRIZE_PENALTY, 1) = N'2'
	                              ) AS B3 ON  B3.COMP_CODE   = A.COMP_CODE
	                                      AND B3.PERSON_NUMB = A.PERSON_NUMB
	
	            WHERE    A.COMP_CODE           = @COMP_CODE
 		        AND      uniLITE.fnCheckCompDivAuth(B1.COMP_CODE, B1.DIV_CODE, #{S_USER_ID}) = 'Y'
	            AND      A.PAYSTEP_YYYYMMDD    = @PAYSTEP_YYYYMMDD
	            AND    ((B1.DIV_CODE           = @DIV_CODE         AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
	            AND    ((B1.PAY_CODE           = @PAY_CODE         AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
	            AND    ((B1.DEPT_CODE         &gt;= @FR_DEPT_CODE     AND @FR_DEPT_CODE     != '') OR (@FR_DEPT_CODE     = ''))
	            AND    ((B1.DEPT_CODE         &lt;= @TO_DEPT_CODE     AND @TO_DEPT_CODE     != '') OR (@TO_DEPT_CODE     = ''))
	            AND    ((B1.NAME               = @NAME             AND @NAME             != '') OR (@NAME             = ''))
	            AND    ((B1.PERSON_NUMB        = @PERSON_NUMB      AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
	            AND    ((B1.PAY_GRADE_01       = @PAY_GRADE_01     AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
	            AND    ((B1.PAY_GRADE_02       = @PAY_GRADE_02     AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
	           ) AS A
	    WHERE  CONVERT(INT, A.PAY_GRADE_02) &lt; CONVERT(INT, A.EXPECT_PAY_GRADE)
	
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	
	
	<!-- 재참조 -->
	<select id="hum200ukrServiceImpl.fnHum240QStd2" parameterType="rMap" resultType="rMap">
		BEGIN
        SET NOCOUNT    ON
        SET ARITHABORT ON
        
    <!--  <1. (파라메터)변수 선언> -->
        DECLARE @COMP_CODE              NVARCHAR(20)        <!--(필수) 법인코드-->
              , @PAYSTEP_YYYYMMDD       NVARCHAR(08)        <!--(필수) 호급승급일시-->
              , @DIV_CODE               NVARCHAR(20)        <!--(선택) 사업장 번호-->
              , @PAY_CODE               NVARCHAR(01)        <!--(선택) 급여지급방식(0:연봉직, 1:월급직 등)-->
              , @FR_DEPT_CODE           NVARCHAR(20)        <!--(선택) FROM 부서코드-->
              , @TO_DEPT_CODE           NVARCHAR(20)        <!--(선택) TO   부서코드-->
              , @NAME                   NVARCHAR(30)        <!--(선택) 성명-->
              , @PERSON_NUMB            NVARCHAR(20)        <!--(선택) 사번-->
              , @PAY_GRADE_01           NVARCHAR(20)        <!--(선택) 급호-->
              , @PAY_GRADE_02           NVARCHAR(20)        <!--(선택) 호봉-->
              , @USER_ID                NVARCHAR(100)        <!--(필수) 사용자ID-->
              
        SET @COMP_CODE          = #{S_COMP_CODE}
		SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
		SET @DIV_CODE           = #{DIV_CODE}
		SET @PAY_CODE           = #{PAY_CODE}
		SET @FR_DEPT_CODE       = #{DEPT_CODE}
		SET @TO_DEPT_CODE       = #{DEPT_CODE2}
		SET @NAME               = #{NAME}
		SET @PERSON_NUMB        = #{PERSON_NUMB}
		SET @PAY_GRADE_01       = #{PAY_GRADE_01}
		SET @PAY_GRADE_02       = #{PAY_GRADE_02}
		SET @USER_ID            = #{USER_ID}
    
    <!--  <2. 명칭 조회 유형 설정> -->
        DECLARE @RefItem            NVARCHAR(01)
    
        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = @USER_ID
    
        SET @RefItem = ISNULL(@RefItem, '')
    
  
        DECLARE       @DateFormat       NVARCHAR(10)
    
        SELECT TOP 1 @DateFormat = M1.CODE_NAME
        FROM   BSA100T M1 WITH (NOLOCK)
        WHERE  M1.COMP_CODE = @COMP_CODE
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'
        
        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
        
    <!--  <3. 데이타 조회> -->
        DELETE HUM240T
        WHERE  COMP_CODE        = @COMP_CODE
        AND    PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD
    

    
        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#uniLITE201306111135')) 
           DROP TABLE #uniLITE201306111135
    
        SELECT 
               A.COMP_CODE                                                                            AS COMP_CODE
             , @PAYSTEP_YYYYMMDD                                                                      AS PAYSTEP_YYYYMMDD
             , A.DEPT_NAME                                                                            AS DEPT_NAME
             , A.PAY_GRADE_01                                                                         AS PAY_GRADE_01
             , A.PAY_GRADE_02                                                                         AS PAY_GRADE_02
             , A.PERSON_NUMB                                                                          AS PERSON_NUMB
             , A.NAME                                                                                 AS NAME
             , CONVERT(NUMERIC(30, 2), 365)                                                           AS PAYSTEP_1
             , CONVERT(NVARCHAR(100), '01/00/00')                                                     AS N_PAYSTEP_1
             , CONVERT(NUMERIC(30, 2), ISNULL(C1.PAYSTEP_CARR, 0))                                    AS PAYSTEP_CARR
             , CONVERT(NVARCHAR(100),  ISNULL(C1.N_PAYSTEP_CARR, '00/00/00'))                         AS N_PAYSTEP_CARR
             , CONVERT(NUMERIC(30, 2), ISNULL(DATEDIFF(DD, A.JOIN_DATE, @PAYSTEP_YYYYMMDD), 0))       AS PAYSTEP_LONG_DAY
             , CASE WHEN LEN(uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'FULL_YEARS')) &lt; 2 THEN '0' + uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'FULL_YEARS') + '/'
                                                                                                         ELSE uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'FULL_YEARS') + '/' END
             + CASE WHEN LEN(uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_MONTHS'))  &lt; 2 THEN '0' + uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_MONTHS') + '/'
                                                                                                         ELSE uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_MONTHS') + '/' END
             + CASE WHEN LEN(uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_DAY'))     &lt; 2 THEN '0' + uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_DAY') 
                                                                                                         ELSE uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_DAY')  END
                                                                                                      AS N_PAYSTEP_LONG_DAY
             , CONVERT(NUMERIC(30, 2), 0)                                                             AS MODIFY_DAY
             , CONVERT(NVARCHAR(100), '00/00/00')                                                     AS N_MODIFY_DAY
             , CONVERT(NVARCHAR(2000), '')                                                            AS MODIFY_REASON
             , CONVERT(NUMERIC(30, 2), ISNULL(D1.MODIFY_DAY, 0))                                      AS BEFORE_MODIFY_DAY
             , CONVERT(NVARCHAR(100),  ISNULL(D1.N_MODIFY_DAY, '00/00/00'))                           AS N_BEFORE_MODIFY_DAY
             , CONVERT(NUMERIC(30, 2), ISNULL(E1.DEFER_DAY, 0))                                       AS DEFER_DAY
             , CONVERT(NVARCHAR(100),  ISNULL(E1.N_DEFER_DAY, '00/00/00'))                            AS N_DEFER_DAY
             , CONVERT(NUMERIC(30, 2), 365)
             + CONVERT(NUMERIC(30, 2), ISNULL(C1.PAYSTEP_CARR, 0))
             + CONVERT(NUMERIC(30, 2), ISNULL(DATEDIFF(DD, A.JOIN_DATE, @PAYSTEP_YYYYMMDD), 0))
             + CONVERT(NUMERIC(30, 2), 0)
             + CONVERT(NUMERIC(30, 2), ISNULL(D1.MODIFY_DAY, 0))
             - CONVERT(NUMERIC(30, 2), ISNULL(E1.DEFER_DAY, 0))                                       AS PAYSTEP_TOT_DAY
             , CONVERT(NUMERIC(30, 2), 1)
             + CONVERT(NUMERIC(30, 2), ISNULL(C1.N_YYYY, 0))
             + CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'FULL_YEARS'))
             + CONVERT(NUMERIC(30, 2), 0)
             + CONVERT(NUMERIC(30, 2), ISNULL(D1.N_YYYY, 0))
             - CONVERT(NUMERIC(30, 2), ISNULL(E1.N_YYYY, 0))                                          AS N_TOT_YYYY
             , CONVERT(NUMERIC(30, 2), ISNULL(C1.N_MM, 0))
             + CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_MONTHS'))
             + CONVERT(NUMERIC(30, 2), 0)
             + CONVERT(NUMERIC(30, 2), ISNULL(D1.N_MM, 0))
             - CONVERT(NUMERIC(30, 2), ISNULL(E1.N_MM, 0))                                            AS N_TOT_MM
             , CONVERT(NUMERIC(30, 2), ISNULL(C1.N_DD, 0))
             + CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'RM_DAY'))
             + CONVERT(NUMERIC(30, 2), 0)
             + CONVERT(NUMERIC(30, 2), ISNULL(D1.N_DD, 0))
             - CONVERT(NUMERIC(30, 2), ISNULL(E1.N_DD, 0))                                            AS N_TOT_DD
        INTO #uniLITE201306111135
        FROM              HUM100T      AS A  WITH (NOLOCK)
               INNER JOIN BSA100T      AS B1 WITH (NOLOCK) ON  B1.COMP_CODE  = A.COMP_CODE
                                                           AND B1.MAIN_CODE  = 'H005'
                                                           AND B1.SUB_CODE   = A.POST_CODE
               LEFT  JOIN (
                            SELECT 
                                   C1.COMP_CODE                                         AS COMP_CODE
                                 , C1.PERSON_NUMB                                       AS PERSON_NUMB
                                 , SUM(ISNULL(C1.PAYSTEP_CARR, 0))                      AS PAYSTEP_CARR
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(C1.YYYY, 0))
                                                             , SUM(ISNULL(C1.MM  , 0))
                                                             , SUM(ISNULL(C1.DD  , 0))
                                                             , 'ALL'                  ) AS N_PAYSTEP_CARR
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(C1.YYYY, 0))
                                                             , SUM(ISNULL(C1.MM  , 0))
                                                             , SUM(ISNULL(C1.DD  , 0))
                                                             , 'YEARS'                ) AS N_YYYY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(C1.YYYY, 0))
                                                             , SUM(ISNULL(C1.MM  , 0))
                                                             , SUM(ISNULL(C1.DD  , 0))
                                                             , 'MONTH'                ) AS N_MM
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(C1.YYYY, 0))
                                                             , SUM(ISNULL(C1.MM  , 0))
                                                             , SUM(ISNULL(C1.DD  , 0))
                                                             , 'DAY  '                ) AS N_DD
                            FROM (
                                    SELECT 
                                           C.COMP_CODE
                                         , C.PERSON_NUMB
                                         , C.PAYSTEP_CARR
                                         , CASE WHEN ISNULL(C.REF_CODE1, 0) = 0   THEN 0 
                                                WHEN ISNULL(C.REF_CODE1, 0) = 100 THEN C.YYYY
                                                                                  ELSE uniLITE.fnGetYMDFromDate3(C.PAYSTEP_CARR, 'YEARS') 
                                           END                                                                                            AS YYYY
                                         , CASE WHEN ISNULL(C.REF_CODE1, 0) = 0   THEN 0 
                                                WHEN ISNULL(C.REF_CODE1, 0) = 100 THEN C.MM
                                                                                  ELSE uniLITE.fnGetYMDFromDate3(C.PAYSTEP_CARR, 'MONTH') 
                                           END                                                                                            AS MM
                                         , CASE WHEN ISNULL(C.REF_CODE1, 0) = 0   THEN 0 
                                                WHEN ISNULL(C.REF_CODE1, 0) = 100 THEN C.DD
                                                                                  ELSE uniLITE.fnGetYMDFromDate3(C.PAYSTEP_CARR, 'DAY') 
                                           END                                                                                            AS DD
                                    FROM   (
                                            SELECT 
                                                   C1.COMP_CODE
                                                 , C1.PERSON_NUMB
                                                 , uniLITE.fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'FULL_YEARS') AS YYYY
                                                 , uniLITE.fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'RM_MONTHS' ) AS MM
                                                 , uniLITE.fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'RM_DAY'    ) AS DD
                                                 , ISNULL(CONVERT(INT, C2.REF_CODE1), 0)                                       AS REF_CODE1
                                                 , CASE WHEN ISNULL(C2.REF_CODE1, 0) = 0 THEN 0
                                                                                         ELSE CONVERT(INT , (CONVERT(NUMERIC(30, 2), ISNULL(DATEDIFF(DD, C1.CARR_STRT_DATE, C1.CARR_END_DATE), 0)) + 1)
                                                                                                          * (CONVERT(NUMERIC(30, 2), ISNULL(C2.REF_CODE1, 0)) / 100)                            )  END AS PAYSTEP_CARR
                                            FROM              HUM500T AS C1 WITH(NOLOCK)
                                                   INNER JOIN BSA100T AS C2 WITH(NOLOCK) ON  C2.COMP_CODE = C1.COMP_CODE
                                                                                         AND C2.MAIN_CODE = 'H163'
                                                                                         AND C2.SUB_CODE  = C1.CARR_GUBUN
                                            WHERE  C1.COMP_CODE   = @COMP_CODE
                                           ) AS C
                                 ) AS C1
                            GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
                          ) AS C1 ON  C1.COMP_CODE   = A.COMP_CODE
                                  AND C1.PERSON_NUMB = A.PERSON_NUMB
               LEFT  JOIN (
                            SELECT 
                                   D.COMP_CODE                  AS COMP_CODE
                                 , D.PERSON_NUMB                AS PERSON_NUMB
                                 , SUM(ISNULL(D.MODIFY_DAY, 0)) AS MODIFY_DAY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(D.N_YYYY, 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_MM  , 0))
                                                             , SUM(ISNULL(D.N_DD  , 0))
                                                             , 'ALL'                  ) AS N_MODIFY_DAY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(D.N_YYYY, 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_MM  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_DD  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , 'YEARS'                ) AS N_YYYY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(D.N_YYYY, 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_MM  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_DD  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , 'MONTH'                ) AS N_MM
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(D.N_YYYY, 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_MM  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , SUM(ISNULL(D.N_DD  , 0) * (CASE WHEN ISNULL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                             , 'DAY  '                ) AS N_DD
                            FROM   HUM240T AS D WITH(NOLOCK)
                            WHERE  D.COMP_CODE        = @COMP_CODE
                            AND    D.PAYSTEP_YYYYMMDD &lt; @PAYSTEP_YYYYMMDD
                            GROUP  BY D.COMP_CODE, D.PERSON_NUMB
                          ) AS D1 ON  D1.COMP_CODE   = A.COMP_CODE
                                  AND D1.PERSON_NUMB = A.PERSON_NUMB
               LEFT  JOIN (
                            SELECT 
                                   E.COMP_CODE                                                       AS COMP_CODE
                                 , E.PERSON_NUMB                                                     AS PERSON_NUMB
                                 , SUM(ISNULL(E.DEFER_DAY, 0))                                       AS DEFER_DAY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(CONVERT(INT, E.YYYY), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.MM  ), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.DD  ), 0))
                                                             , 'ALL'                              ) AS N_DEFER_DAY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(CONVERT(INT, E.YYYY), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.MM  ), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.DD  ), 0))
                                                             , 'YEARS'                            ) AS N_YYYY
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(CONVERT(INT, E.YYYY), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.MM  ), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.DD  ), 0))
                                                             , 'MONTH'                            ) AS N_MM
                                 , uniLITE.fnGetYMDFromDate2(  SUM(ISNULL(CONVERT(INT, E.YYYY), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.MM  ), 0))
                                                             , SUM(ISNULL(CONVERT(INT, E.DD  ), 0))
                                                             , 'DAY  '                            ) AS N_DD
                            FROM (
                                    SELECT 
                                           E.COMP_CODE                                                                     AS COMP_CODE
                                         , E.PERSON_NUMB                                                                   AS PERSON_NUMB
                                         , CONVERT(NUMERIC(30, 2), DATEDIFF(DD, E.VALIDITYFR_DATE, E.VALIDITYTO_DATE)) + 1 AS DEFER_DAY
                                         , uniLITE.fnGetYMDFromDate(E.VALIDITYFR_DATE, E.VALIDITYTO_DATE, 'FULL_YEARS')    AS YYYY
                                         , uniLITE.fnGetYMDFromDate(E.VALIDITYFR_DATE, E.VALIDITYTO_DATE, 'RM_MONTHS' )    AS MM
                                         , uniLITE.fnGetYMDFromDate(E.VALIDITYFR_DATE, E.VALIDITYTO_DATE, 'RM_DAY'    )    AS DD
                                    FROM   HUM810T AS E WITH(NOLOCK)
                                    WHERE  E.COMP_CODE                    = @COMP_CODE
                                    AND    LEFT(E.KIND_PRIZE_PENALTY, 1)  = '2'
                                    AND    E.EX_DATE                     &gt;= @PAYSTEP_YYYYMMDD
                                 ) AS E
                            GROUP  BY E.COMP_CODE, E.PERSON_NUMB
                          ) AS E1 ON  E1.COMP_CODE   = A.COMP_CODE
                                  AND E1.PERSON_NUMB = A.PERSON_NUMB
        WHERE    A.COMP_CODE          = @COMP_CODE
 		AND      uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
        AND      A.RETR_DATE          = '00000000'
        AND      A.PAY_GRADE_01       &gt; '0'
        AND      B1.REF_CODE10        = 'Y'
        AND    ((A.DIV_CODE           = @DIV_CODE        AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
        AND    ((A.PAY_CODE           = @PAY_CODE        AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
        AND    ((A.DEPT_CODE         &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE     != '') OR (@FR_DEPT_CODE     = ''))
        AND    ((A.DEPT_CODE         &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE     != '') OR (@TO_DEPT_CODE     = ''))
        AND    ((A.NAME               = @NAME            AND @NAME             != '') OR (@NAME             = ''))
        AND    ((A.PERSON_NUMB        = @PERSON_NUMB     AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
        AND    ((A.PAY_GRADE_01       = @PAY_GRADE_01    AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
        AND    ((A.PAY_GRADE_02       = @PAY_GRADE_02    AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
    
        SELECT 
               A.COMP_CODE                                                                            AS COMP_CODE
             , A.PAYSTEP_YYYYMMDD                                                                     AS PAYSTEP_YYYYMMDD
             , A.DEPT_NAME                                                                            AS DEPT_NAME
             , A.PAY_GRADE_01                                                                         AS PAY_GRADE_01
             , A.PAY_GRADE_02                                                                         AS PAY_GRADE_02
             , A.PERSON_NUMB                                                                          AS PERSON_NUMB
             , A.NAME                                                                                 AS NAME
             , ISNULL(A.PAYSTEP_1          , 0)                                                       AS PAYSTEP_1
             , ISNULL(A.N_PAYSTEP_1        , '01/00/00')                                              AS N_PAYSTEP_1
             , ISNULL(A.PAYSTEP_CARR       , 0)                                                       AS PAYSTEP_CARR
             , ISNULL(A.N_PAYSTEP_CARR     , '00/00/00')                                              AS N_PAYSTEP_CARR
             , ISNULL(A.PAYSTEP_LONG_DAY   , 0)                                                       AS PAYSTEP_LONG_DAY
             , ISNULL(A.N_PAYSTEP_LONG_DAY , '00/00/00')                                              AS N_PAYSTEP_LONG_DAY
             , ISNULL(A.MODIFY_DAY         , 0)                                                       AS MODIFY_DAY
             , CONVERT(NVARCHAR, '1')                                                                 AS PO_NE_GUBUN
             , ISNULL(A.N_MODIFY_DAY       , '00/00/00')                                              AS N_MODIFY_DAY
             , CONVERT(NUMERIC(30, 2), 0)                                                             AS N_YYYY
             , CONVERT(NUMERIC(30, 2), 0)                                                             AS N_MM
             , CONVERT(NUMERIC(30, 2), 0)                                                             AS N_DD
             , ISNULL(A.MODIFY_REASON      , '')                                                      AS MODIFY_REASON
             , ISNULL(A.BEFORE_MODIFY_DAY  , 0)                                                       AS BEFORE_MODIFY_DAY
             , ISNULL(A.N_BEFORE_MODIFY_DAY, '00/00/00')                                              AS N_BEFORE_MODIFY_DAY
             , ISNULL(A.DEFER_DAY          , 0)                                                       AS DEFER_DAY
             , ISNULL(A.N_DEFER_DAY        , '00/00/00')                                              AS N_DEFER_DAY
             , ISNULL(A.PAYSTEP_TOT_DAY    , 0)                                                       AS PAYSTEP_TOT_DAY
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'YEARS'                ))           AS N_TOT_YYYY   
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'MONTH'                ))           AS N_TOT_MM   
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'DAY'                  ))           AS N_TOT_DD   
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'YEARS'                ))           AS N_BEFORE_TOT_YYYY   
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'MONTH'                ))           AS N_BEFORE_TOT_MM   
             , CONVERT(NUMERIC(30, 2), uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                                                , ISNULL(A.N_TOT_DD  , 0), 'DAY'                  ))           AS N_BEFORE_TOT_DD  

             , REPLACE(CONVERT(NVARCHAR , CONVERT(MONEY, A.PAYSTEP_TOT_DAY), 1), '.00', '') + ' ('
             + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY / 365     )) + '년 '
             + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
             + CONVERT(NVARCHAR , CONVERT(INT , A.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'                AS TOT_DAY_CONVERT
             , uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                        , ISNULL(A.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
             + uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                        , ISNULL(A.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
             + uniLITE.fnGetYMDFromDate2( ISNULL(A.N_TOT_YYYY, 0), ISNULL(A.N_TOT_MM  , 0)
                                        , ISNULL(A.N_TOT_DD  , 0), 'DAY  '                ) + '일 '   AS N_TOT_DAY_CONVERT
             , @USER_ID                                                                               AS INSERT_DB_USER
             , GETDATE()                                                                              AS INSERT_DB_TIME
             , @USER_ID                                                                               AS UPDATE_DB_USER
             , GETDATE()                                                                              AS UPDATE_DB_TIME
        FROM   #uniLITE201306111135 AS A WITH(NOLOCK)
        ORDER BY A.DEPT_NAME, A.PAY_GRADE_01, A.PAY_GRADE_02, A.PERSON_NUMB
    
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
	
	<update id="hum200ukrServiceImpl.update" parameterType="rMap">
		--hum240ukrv.Chum240ukrv[fnHum240Save] Query01
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		    
		    DECLARE @COMP_CODE              NVARCHAR(20)        
		          , @PAYSTEP_YYYYMMDD       NVARCHAR(08)        
		          , @PERSON_NUMB            NVARCHAR(20)        
		          , @USER_ID                NVARCHAR(100)        
		          
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
		    SET @PERSON_NUMB        = #{PERSON_NUMB}
		    SET @USER_ID            = #{USER_ID}
		
		    DELETE HUM240T
		    WHERE  COMP_CODE        = @COMP_CODE
		    AND    PERSON_NUMB      = @PERSON_NUMB
		    AND    PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD       
		
		
			INSERT INTO HUM240T
			( COMP_CODE
			, PAYSTEP_YYYYMMDD
			, PERSON_NUMB
			, PAYSTEP_1
			, N_PAYSTEP_1
			, PAYSTEP_CARR
			, N_PAYSTEP_CARR
			, PAYSTEP_LONG_DAY
			, N_PAYSTEP_LONG_DAY
			, MODIFY_DAY
			, PO_NE_GUBUN
			, N_MODIFY_DAY
			, N_YYYY
			, N_MM
			, N_DD
			, MODIFY_REASON
		    , BEFORE_MODIFY_DAY
		    , N_BEFORE_MODIFY_DAY
		    , DEFER_DAY
		    , N_DEFER_DAY			
			, PAYSTEP_TOT_DAY
			, N_TOT_YYYY
			, N_TOT_MM
			, N_TOT_DD
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME
			) 
			VALUES
			( #{S_COMP_CODE}
			, #{PAYSTEP_YYYYMMDD}
			, #{PERSON_NUMB}
			, ${PAYSTEP_1}
			, #{N_PAYSTEP_1}
			, ${PAYSTEP_CARR}
			, #{N_PAYSTEP_CARR}
			, ${PAYSTEP_LONG_DAY}
			, #{N_PAYSTEP_LONG_DAY}
			, ${MODIFY_DAY}
			, #{PO_NE_GUBUN}
			, #{N_MODIFY_DAY}
			, ${N_YYYY}
			, ${N_MM}
			, ${N_DD}
			, #{MODIFY_REASON}
			, ${BEFORE_MODIFY_DAY}
			, #{N_BEFORE_MODIFY_DAY}
			, ${DEFER_DAY}
			, #{N_DEFER_DAY}			
			, ${PAYSTEP_TOT_DAY}
			, ${N_TOT_YYYY}
			, ${N_TOT_MM}
			, ${N_TOT_DD}
			, #{USER_ID}
			, GETDATE()
			, #{USER_ID}
			, GETDATE()
			)
		        
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</update>
	
	<update id="hum200ukrServiceImpl.update2" parameterType="rMap">
		--hum240ukrv.Chum240ukrv[fnHum240Save2] Query01
		
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		    
		    DECLARE @COMP_CODE              NVARCHAR(20)        
		          , @PERSON_NUMB            NVARCHAR(20)        
		          , @EXPECT_PAY_GRADE       NVARCHAR(40)        
		          , @USER_ID                NVARCHAR(100)        
		          
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @PERSON_NUMB        = #{PERSON_NUMB}
		    SET @EXPECT_PAY_GRADE   = #{EXPECT_PAY_GRADE}
		    SET @USER_ID            = #{USER_ID}
		
		    UPDATE A
		    SET    A.PAY_GRADE_02                 = @EXPECT_PAY_GRADE
		         , A.UPDATE_DB_USER               = @USER_ID
		         , A.UPDATE_DB_TIME               = GETDATE()
		    FROM   HUM100T AS A WITH(NOLOCK)
		    WHERE  A.COMP_CODE                    = @COMP_CODE
		    AND    A.PERSON_NUMB                  = @PERSON_NUMB
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</update>
		
</mapper>