<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum760ukrServiceImpl">

    <update id="hum760ukrServiceImpl.Hum100MasterUpdate" parameterType="Map">
        -- 인사마스터에 변경된 정보를 UPDATE
        --UHum04Krv.CHum206UKr SetHum206[fnhum206save] Query04
        UPDATE HUM100T
        SET DIV_CODE = #{DIV_CODE}
            , DEPT_CODE = #{AF_DEPT_CODE}
            , DEPT_NAME = #{AF_DEPT_NAME}

        <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
            , POST_CODE = #{POST_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ABIL_CODE)">
            , ABIL_CODE = #{ABIL_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(KNOC)">
            , KNOC = #{KNOC}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
            , PAY_GRADE_01 = #{PAY_GRADE_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
            , PAY_GRADE_02 = #{PAY_GRADE_02}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_BASE)">
            , PAY_GRADE_BASE = #{PAY_GRADE_BASE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE)">
            , YEAR_GRADE = #{YEAR_GRADE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE_BASE)">
            , YEAR_GRADE_BASE = #{YEAR_GRADE_BASE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(WAGES_STD_I)">
            , WAGES_STD_I = #{WAGES_STD_I}
        </if>
        <if test="@foren.Ognl@isNotEmpty(COST_KIND)">
            , COST_KIND = #{COST_KIND}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ANNUAL_SALARY_I)">
            , ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
        </if>
        <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
            , EMPLOY_TYPE = #{EMPLOY_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
            , OFFICE_CODE = #{OFFICE_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
            , ROUTE_GROUP = #{ROUTE_GROUP}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
            , JOB_CODE = #{TEMPC_01}
        </if>

        WHERE COMP_CODE = #{S_COMP_CODE}
        AND PERSON_NUMB = #{PERSON_NUMB}
    </update>

    <update id="hum760ukrServiceImpl.Hum100MasterUpdate2" parameterType="Map">
        -- 삭제 후 인사마스터에 변경된 정보를 UPDATE
        --hum760ukrServiceImpl.Hum100MasterUpdate2
        UPDATE HUM100T
        SET DIV_CODE                = #{DIV_CODE}
            , DEPT_CODE             = B.AF_DEPT_CODE
            , DEPT_NAME             = B.AF_DEPT_NAME
            , POST_CODE             = B.POST_CODE
            , ABIL_CODE             = B.ABIL_CODE
            , KNOC                  = B.KNOC
            , PAY_GRADE_01          = B.PAY_GRADE_01
            , PAY_GRADE_02          = B.PAY_GRADE_02
            , PAY_GRADE_BASE        = B.PAY_GRADE_BASE
            , YEAR_GRADE            = B.YEAR_GRADE
            , YEAR_GRADE_BASE       = B.YEAR_GRADE_BASE
            , COST_KIND             = B.COST_KIND
            , JOB_CODE              = B.TEMPC_01
        FROM HUM100T A, (SELECT TOP 1 *  FROM HUM760T
                          WHERE PERSON_NUMB = #{PERSON_NUMB}
                          ORDER BY ANNOUNCE_DATE DESC)  B
        WHERE A.PERSON_NUMB         = B.PERSON_NUMB
        AND A.COMP_CODE             = #{S_COMP_CODE}
        AND A.PERSON_NUMB           = #{PERSON_NUMB}
    </update>

    <select id="hum760ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE, A.COMP_NAME
        FROM              BOR100T   A  WITH (NOLOCK)
               LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
                                                    AND M1.MAIN_CODE    = 'B107'
                                                    AND M1.SUB_CODE     = '20'
        WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
           OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
    </select>


    <select id="hum760ukrServiceImpl.select" parameterType="Map" resultType="rMap"> /* 조회쿼리 */
          --hum760ukr.Chum760ukr[fnHum760QStd] QUERY01
            SELECT
                    M.COMP_CODE
                 ,  A.DIV_CODE
                 ,  A.NAME
                 ,  M.PERSON_NUMB
--               ,  CONVERT(VARCHAR(10),CAST(M.ANNOUNCE_DATE AS smalldatetime),102)   AS ANNOUNCE_DATE
                 ,  M.ANNOUNCE_DATE
                 ,  D.ANNOUNCE_DATE   AS MAX_ANNOUNCE_DATE
                 ,  M.ANNOUNCE_CODE
                 ,  M.BE_DIV_NAME
                 ,  M.AF_DIV_NAME
                 ,  M.AF_DEPT_CODE
                 ,  M.AF_DEPT_NAME
                 ,  M.POST_CODE
                 ,  M.ABIL_CODE
                 ,  RTRIM(M.KNOC) AS    KNOC--직종 추가
                 ,  M.ANNOUNCE_REASON
                 ,  M.PAY_GRADE_01          --급
                 ,  M.PAY_GRADE_02          --호
                 ,  M.PAY_GRADE_BASE        --승급기준
                 ,  M.YEAR_GRADE            --근속
                 ,  M.YEAR_GRADE_BASE       --승급기준(근속)
                 ,  M.COST_KIND             --사업명
                 ,  M.WAGES_STD_I           --연봉
                 ,  M.ANNUAL_SALARY_I       --연봉
                 ,  M.OFFICE_CODE           --영업소(버스회사전용)
                 ,  M.ROUTE_GROUP           --소속그룹(버스회사전용)
                 ,  M.EMPLOY_TYPE           --사원구분(버스회사전용)

                 ,  CASE WHEN ISNULL(U1.SUB_CODE, N'')  = '' AND ISNULL(U2.SUB_CODE, N'')  = '' THEN N'직위, 직책코드 오류'
                         WHEN ISNULL(U1.SUB_CODE, N'')  = '' AND ISNULL(U2.SUB_CODE, N'') != '' THEN N'직위코드 오류'
                         WHEN ISNULL(U1.SUB_CODE, N'') != '' AND ISNULL(U2.SUB_CODE, N'')  = '' THEN N'직책코드 오류'
                         WHEN ISNULL(U1.SUB_CODE, N'') != '' AND ISNULL(U2.SUB_CODE, N'') != '' THEN N''
                    END                                                                                 AS CODE_CHECK
                 ,  M.INSERT_DB_USER
                 ,  M.INSERT_DB_TIME
                 ,  M.UPDATE_DB_USER
                 ,  M.UPDATE_DB_TIME
                 ,  M.TEMPC_01                                  --직무구분
                 ,  M.TEMPC_02                                  --비고
            FROM               HUM760T AS M WITH (NOLOCK)
                    INNER JOIN HUM100T AS A WITH (NOLOCK) ON M.COMP_CODE        = A.COMP_CODE
                                                         AND M.PERSON_NUMB      = A.PERSON_NUMB

                    LEFT  JOIN BSA100T AS B WITH (NOLOCK) ON M.COMP_CODE        = B.COMP_CODE
                                                         AND B.SUB_CODE         = A.EMPLOY_TYPE
                                                         AND B.MAIN_CODE        = 'H024'
                    LEFT  JOIN CBM600T AS C WITH (NOLOCK) ON C.COMP_CODE        = A.COMP_CODE
                                                         AND C.COST_POOL_CODE   = A.COST_KIND
                    LEFT  JOIN (SELECT  SUB_CODE, COMP_CODE
                                FROM    BSA100T
                                WHERE   COMP_CODE = #{S_COMP_CODE}
                                AND     MAIN_CODE = N'H005') AS U1 ON U1.COMP_CODE = M.COMP_CODE
                                                                  AND U1.SUB_CODE  = M.POST_CODE
                    LEFT  JOIN (SELECT  SUB_CODE, COMP_CODE
                                FROM    BSA100T
                                WHERE   COMP_CODE = #{S_COMP_CODE}
                                AND     MAIN_CODE = N'H006') AS U2 ON U2.COMP_CODE = M.COMP_CODE
                                                                  AND U2.SUB_CODE  = M.ABIL_CODE
                   INNER JOIN (SELECT COMP_CODE, PERSON_NUMB, MAX(ANNOUNCE_DATE) AS ANNOUNCE_DATE
                                 FROM HUM760T
                             GROUP BY COMP_CODE, PERSON_NUMB  ) D ON D.COMP_CODE   = A.COMP_CODE
                                                                 AND D.PERSON_NUMB = A.PERSON_NUMB
            WHERE   M.COMP_CODE     =   #{S_COMP_CODE}
                <if test="@foren.Ognl@isNotEmpty(NAME)">
                    AND A.NAME   LIKE + '%' +  #{NAME} + '%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                    AND A.PERSON_NUMB  = #{PERSON_NUMB}
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
                    --AND  A.DEPT_CODE  = #{DEPT_CODE}
                    AND  M.AF_DEPT_CODE  = #{DEPT_CODE}
                 </if>
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                    AND A.DIV_CODE = #{DIV_CODE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_DATE_FR)">
                    AND M.ANNOUNCE_DATE &gt;= #{ANNOUNCE_DATE_FR}
                </if>
                <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_DATE_TO)">
                    AND M.ANNOUNCE_DATE &lt;= #{ANNOUNCE_DATE_TO}
                </if>
                <if test="@foren.Ognl@isNotEmpty(COST_KIND)">
                    AND M.COST_KIND = #{COST_KIND}                      --회계부서
                </if>
                <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_CODE)">
                    AND M.ANNOUNCE_CODE  = #{ANNOUNCE_CODE}              -- 발령코드
                </if>
                <if test="RDO_TYPE == &quot;A&quot;">
                    AND A.RETR_DATE = '00000000'                        -- 재직구분 (재직)
                </if>
                <if test="RDO_TYPE == &quot;B&quot;">
                    AND A.RETR_DATE != '00000000'                       -- 재직구분 (퇴사)
                </if>
                <if test="@foren.Ognl@isNotEmpty(SEX_CODE)">
                    AND A.SEX_CODE   = #{SEX_CODE}                       -- 성별
                </if>
            ORDER   BY A.DIV_CODE, A.DEPT_CODE, A.POST_CODE, A.JOIN_DATE, A.NAME, A.PERSON_NUMB
    </select>

    <insert id="hum760ukrServiceImpl.insertDetail" parameterType="Map">    /* 추가 */
    --Hum760ukr.CHum760UKR[fnHum760Save] Query02
        INSERT INTO HUM760T
             ( COMP_CODE
             , PERSON_NUMB
             , ANNOUNCE_DATE
             , ANNOUNCE_CODE

             <if test="@foren.Ognl@isNotEmpty(BE_DIV_NAME)">
             , BE_DIV_NAME
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DIV_NAME)">
             , AF_DIV_NAME
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_CODE)">
             , BE_DEPT_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_NAME)">
             , BE_DEPT_NAME
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_CODE)">
             , BE_DEPT_TEAM_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_NAME)">
             , BE_DEPT_TEAM_NAME
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_CODE)">
             , AF_DEPT_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_NAME)">
             , AF_DEPT_NAME
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_CODE)">
             , AF_DEPT_TEAM_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_NAME)">
             , AF_DEPT_TEAM_NAME
             </if>

             <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
             , POST_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(ABIL_CODE)">
             , ABIL_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(KNOC)">
             , KNOC
             </if>
             <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_REASON)">
             , ANNOUNCE_REASON
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
             , PAY_GRADE_01
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
             , PAY_GRADE_02
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_BASE)">
             , PAY_GRADE_BASE
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE)">
             , YEAR_GRADE
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE_BASE)">
             , YEAR_GRADE_BASE
             </if>
             <if test="@foren.Ognl@isNotEmpty(COST_KIND)">
             , COST_KIND
             </if>
             <if test="@foren.Ognl@isNotEmpty(WAGES_STD_I)">
             , WAGES_STD_I
             </if>
             <if test="@foren.Ognl@isNotEmpty(ANNUAL_SALARY_I)">
             , ANNUAL_SALARY_I
             </if>
             <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
             , OFFICE_CODE
             </if>
             <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
             , ROUTE_GROUP
             </if>
             <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
             , EMPLOY_TYPE
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
             , TEMPC_01
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
             , TEMPC_02
             </if>

             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             )
        VALUES
             ( #{S_COMP_CODE}
             , #{PERSON_NUMB}
             , #{ANNOUNCE_DATE}
             , #{ANNOUNCE_CODE}

             <if test="@foren.Ognl@isNotEmpty(BE_DIV_NAME)">
             , #{BE_DIV_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DIV_NAME)">
             , #{AF_DIV_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_CODE)">
             , #{BE_DEPT_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_NAME)">
             , #{BE_DEPT_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_CODE)">
             , #{BE_DEPT_TEAM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_NAME)">
             , #{BE_DEPT_TEAM_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_CODE)">
             , #{AF_DEPT_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_NAME)">
             , #{AF_DEPT_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_CODE)">
             , #{AF_DEPT_TEAM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_NAME)">
             , #{AF_DEPT_TEAM_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
             , #{POST_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ABIL_CODE)">
             , #{ABIL_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(KNOC)">
             , #{KNOC}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_REASON)">
             , #{ANNOUNCE_REASON}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
             , #{PAY_GRADE_01}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
             , #{PAY_GRADE_02}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_BASE)">
             , #{PAY_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE)">
             , #{YEAR_GRADE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE_BASE)">
             , #{YEAR_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(COST_KIND)">
             , #{COST_KIND}
             </if>
             <if test="@foren.Ognl@isNotEmpty(WAGES_STD_I)">
             , #{WAGES_STD_I}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ANNUAL_SALARY_I)">
             , #{ANNUAL_SALARY_I}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
             , #{OFFICE_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
             , #{ROUTE_GROUP}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
             , #{EMPLOY_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
             , #{TEMPC_01}
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
             , #{TEMPC_02}
             </if>

             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </insert>

    <update id="hum760ukrServiceImpl.updateDetail" parameterType="Map">     /* 수정 */

    --Hum760ukr.CHum760UKR[fnHum760Save] Query02
        UPDATE HUM760T
           SET
             UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             <if test="@foren.Ognl@isNotEmpty(BE_DIV_NAME)">
             , BE_DIV_NAME     = #{BE_DIV_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DIV_NAME)">
             , AF_DIV_NAME     = #{AF_DIV_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_CODE)">
             , BE_DEPT_CODE    = #{BE_DEPT_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_NAME)">
             , BE_DEPT_NAME    = #{BE_DEPT_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_CODE)">
             , BE_DEPT_TEAM_CODE    = #{BE_DEPT_TEAM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(BE_DEPT_TEAM_NAME)">
             , BE_DEPT_TEAM_NAME    = #{BE_DEPT_TEAM_NAME}
             </if>

             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_CODE)">
             , AF_DEPT_CODE    = #{AF_DEPT_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_NAME)">
             , AF_DEPT_NAME    = #{AF_DEPT_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_CODE)">
             , AF_DEPT_TEAM_CODE    = #{AF_DEPT_TEAM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AF_DEPT_TEAM_NAME)">
             , AF_DEPT_TEAM_NAME    = #{AF_DEPT_TEAM_NAME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(POST_CODE)">
             , POST_CODE       = #{POST_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ABIL_CODE)">
             , ABIL_CODE       = #{ABIL_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(KNOC)">
             , KNOC       = #{KNOC}
             </if>

             <if test="@foren.Ognl@isNotEmpty(ANNOUNCE_REASON)">
             , ANNOUNCE_REASON = #{ANNOUNCE_REASON}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
             , PAY_GRADE_01    = #{PAY_GRADE_01}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
             , PAY_GRADE_02    = #{PAY_GRADE_02}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_BASE)">
             , PAY_GRADE_BASE  = #{PAY_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE)">
             , YEAR_GRADE      = #{YEAR_GRADE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(YEAR_GRADE_BASE)">
             , YEAR_GRADE_BASE = #{YEAR_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(COST_KIND)">
             , COST_KIND       = #{COST_KIND}
             </if>
             <if test="@foren.Ognl@isNotEmpty(WAGES_STD_I)">
             , WAGES_STD_I     = #{WAGES_STD_I}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ANNUAL_SALARY_I)">
             , ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
             , OFFICE_CODE     = #{OFFICE_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
             , ROUTE_GROUP     = #{ROUTE_GROUP}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
             , EMPLOY_TYPE     = #{EMPLOY_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
             , TEMPC_01          = #{TEMPC_01}
             </if>
             <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
             , TEMPC_02          = #{TEMPC_02}
             </if>
         WHERE COMP_CODE     = #{S_COMP_CODE}
           AND PERSON_NUMB   = #{PERSON_NUMB}
           AND ANNOUNCE_DATE = #{ANNOUNCE_DATE}
           AND ANNOUNCE_CODE = #{ANNOUNCE_CODE}
    </update>

    <delete id="hum760ukrServiceImpl.deleteDetail" parameterType="Map">     /* 삭제 */
        --Hum760ukr.CHum760UKR1[fnHum760Save] Query02
        DELETE FROM HUM760T
         WHERE COMP_CODE     = #{S_COMP_CODE}
           AND PERSON_NUMB   = #{PERSON_NUMB}
           AND ANNOUNCE_DATE = #{ANNOUNCE_DATE}
           AND ANNOUNCE_CODE = #{ANNOUNCE_CODE}
    </delete>


    <insert id="hum760ukrServiceImpl.insertExcelHum760t_xls" parameterType="Map">
    /* 엑셀insert /업로드(1)*/
        INSERT INTO HUM760t_XLS
             ( _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR
             , _EXCEL_ERROR_MSG

             , PERSON_NUMB
             , ANNOUNCE_DATE
             , ANNOUNCE_CODE

             , BE_DEPT_CODE
             , AF_DEPT_CODE
             , POST_CODE
             , ABIL_CODE
             , KNOC
             , YEAR_GRADE
             , YEAR_GRADE_BASE
             , PAY_GRADE_01
             , PAY_GRADE_02
             , PAY_GRADE_BASE
             , COST_KIND
             , TEMPC_01
             , TEMPC_02

             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE
             )
        VALUES
             ( #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
             , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
             , #{_EXCEL_ERROR,jdbcType=VARCHAR}

             , #{PERSON_NUMB}
             , #{ANNOUNCE_DATE}
             , #{ANNOUNCE_CODE}

             , #{BE_DEPT_CODE}
             , #{AF_DEPT_CODE}
             , #{POST_CODE}
             , #{ABIL_CODE}
             , #{KNOC}
             , #{YEAR_GRADE}
             , #{YEAR_GRADE_BASE}
             , #{PAY_GRADE_01}
             , #{PAY_GRADE_02}
             , #{PAY_GRADE_BASE}
             , #{COST_KIND}
             , #{TEMPC_01}
             , #{TEMPC_02}

             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             , #{S_COMP_CODE}
             )
    </insert>

    <select id="hum760ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
    /* 엑셀업로드 버튼 / 업로드(2) */
         BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
                SELECT A._EXCEL_JOBID
                     , A._EXCEL_ROWNUM
                     , A._EXCEL_HAS_ERROR
                     , A._EXCEL_ERROR_MSG
                     , B.DIV_CODE
                     , A.PERSON_NUMB        -- 사번
                     , B.NAME               -- 성명
                     , A.ANNOUNCE_DATE      -- 발령일자
                     , A.ANNOUNCE_CODE      -- 발령코드
                     , A.BE_DIV_NAME        -- 발령전사업장
                     , A.AF_DIV_NAME        -- 발령후사업장
                     , A.BE_DEPT_CODE  -- 발령전부서 팀코드
                     , C.TREE_NAME      AS BE_DEPT_NAME-- 발령전부서 팀명
                     , A.AF_DEPT_CODE  -- 발령후부서 팀코드
                     , D.TREE_NAME      AS AF_DEPT_NAME-- 발령후부서 팀명
                     , A.POST_CODE          -- 직위코드
                     , A.ABIL_CODE          -- 직책코드
                     , A.KNOC               -- 직종코드
                     , A.ANNOUNCE_REASON    -- 발령사유
                     , A.PAY_GRADE_01       -- 호봉(급)
                     , A.PAY_GRADE_02       -- 호봉(호)
                     , A.PAY_GRADE_BASE     -- 호봉승급기준
                     , A.YEAR_GRADE         -- 근속(년)
                     , A.YEAR_GRADE_BASE    -- 근속년승급기준
                     , A.WAGES_STD_I        -- 호봉테이블의기본급
                     , A.ANNUAL_SALARY_I    -- 연봉
                     , A.OFFICE_CODE        -- 영업소
                     , A.ROUTE_GROUP        -- 소속그룹
                     , A.EMPLOY_TYPE        -- 사원구분(직종)
                     , A.COST_KIND          -- 사업명
                     , A.UPDATE_DB_USER
                     , A.UPDATE_DB_TIME
                     , A.COMP_CODE
                     , A.COST_KIND          -- 회계부서
                     , A.TEMPC_01           -- 직무구분
                     , A.TEMPC_02           -- 비고
                  FROM HUM760t_XLS A
                  LEFT  JOIN HUM100T B   ON B.COMP_CODE = A.COMP_CODE
                                        AND B.PERSON_NUMB      = A.PERSON_NUMB
                  LEFT  JOIN BSA210T C   ON C.COMP_CODE =  A.COMP_CODE
                                        AND C.TREE_CODE =  A.BE_DEPT_CODE
                  LEFT  JOIN BSA210T D   ON D.COMP_CODE =  A.COMP_CODE
                                        AND D.TREE_CODE =  A.AF_DEPT_CODE
                 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
                ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
        END
    </select>

    <update id="excelValidate" >    /* 엑셀validation */

    UPDATE   A
    SET
            A._EXCEL_HAS_ERROR = (CASE WHEN
                                        A.PERSON_NUMB     IS NULL      OR       -- 성명
                                        A.ANNOUNCE_DATE   IS NULL      OR       -- 발령일자
                                        A.ANNOUNCE_CODE   IS NULL  THEN 'Y'     -- 발령코드

                                   ELSE A._EXCEL_HAS_ERROR                      -- 필수값 체크
                                 END),




            A._EXCEL_ERROR_MSG = (CASE WHEN  A.PERSON_NUMB      IS NULL         OR
                                             A.ANNOUNCE_DATE    IS NULL         OR
                                             A.ANNOUNCE_CODE    IS NULL  THEN '필수입력 값을 확인 해주세요.'
                                       ELSE  A._EXCEL_ERROR_MSG
                                 END)

    FROM HUM760t_XLS A

    UPDATE   A
    SET
            A._EXCEL_HAS_ERROR = (CASE WHEN
                                        B.PERSON_NUMB   IS NULL THEN 'Y'       -- HUM100 사번 체크
                                   ELSE A._EXCEL_HAS_ERROR              -- 필수값 체크
                                 END),




            A._EXCEL_ERROR_MSG = (CASE WHEN
                                        B.PERSON_NUMB   IS NULL  THEN '인사정보에 없는 성명이 존재합니다.'
                                   ELSE A._EXCEL_ERROR_MSG
                                 END)

    FROM HUM760t_XLS A

    LEFT JOIN HUM100T B  ON B.COMP_CODE = #{S_COMP_CODE}
                        AND B.PERSON_NUMB  = A.PERSON_NUMB



    </update>



    <select id="hum760ukrServiceImpl.selectExcelUploadApply" parameterType="Map" resultType="rMap">
        /* 엑셀업로드 버튼 / 적용 */
        BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
              , @UserId      NVARCHAR(100) /* 사용자ID    */
              , @LangType    NVARCHAR(2)  /* 언어구분    */
              , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
            SELECT A._EXCEL_JOBID
                 , A._EXCEL_ROWNUM
                 , A._EXCEL_HAS_ERROR
                 , A._EXCEL_ERROR_MSG
                 , B.DIV_CODE
                 , B.DEPT_CODE
                 , B.DEPT_NAME
                 , B.POST_CODE AS POST_CODE2
                 , B.NAME               -- 성명
                 , B.PERSON_NUMB        -- 사번
                 , A.ANNOUNCE_DATE      -- 발령일자
                 , A.ANNOUNCE_CODE      -- 발령코드
                 , A.BE_DIV_NAME        -- 발령전사업장
                 , A.AF_DIV_NAME        -- 발령후사업장
                 , A.BE_DEPT_CODE  -- 발령전부서 팀코드
                 , C.TREE_NAME      AS BE_DEPT_NAME-- 발령전부서 팀명
                 , A.AF_DEPT_CODE  -- 발령후부서 팀코드
                 , D.TREE_NAME      AS AF_DEPT_NAME-- 발령후부서 팀명
                 , A.POST_CODE          -- 직위코드
                 , A.ABIL_CODE          -- 직책코드
                 , A.KNOC
                 , A.ANNOUNCE_REASON    -- 발령사유
                 , A.PAY_GRADE_01       -- 호봉(급)
                 , A.PAY_GRADE_02       -- 호봉(호)
                 , A.PAY_GRADE_BASE     -- 호봉승급기준
                 , A.YEAR_GRADE         -- 근속(년)
                 , A.YEAR_GRADE_BASE    -- 근속년승급기준
                 , A.WAGES_STD_I        -- 호봉테이블의기본급
                 , A.ANNUAL_SALARY_I    -- 연봉
                 , A.OFFICE_CODE        -- 영업소
                 , A.ROUTE_GROUP        -- 소속그룹
                 , A.EMPLOY_TYPE        -- 사원구분(직종)
                 , A.COST_KIND          -- 사업명
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , A.COMP_CODE
                 , A.COST_KIND          -- 회계부서
                 , A.TEMPC_01           -- 직무구분
                 , A.TEMPC_02           -- 비고
              FROM HUM760t_XLS A
              LEFT  JOIN HUM100T B   ON B.COMP_CODE = A.COMP_CODE
                                    AND B.PERSON_NUMB      = A.PERSON_NUMB
              LEFT  JOIN BSA210T C   ON C.COMP_CODE =  A.COMP_CODE
                                    --AND C.TREE_CODE =  A.BE_DEPT_TEAM_CODE
                                    AND C.TREE_CODE =  A.BE_DEPT_CODE
              LEFT  JOIN BSA210T D   ON D.COMP_CODE =  A.COMP_CODE
                                    --AND D.TREE_CODE =  A.AF_DEPT_TEAM_CODE
                                    AND D.TREE_CODE =  A.AF_DEPT_CODE
             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
            ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    END
    </select>



    <select id="hum760ukrServiceImpl.selectAutoGrade" parameterType="Map" resultType="rMap">

        DECLARE @UPGRADEDT VARCHAR(08)
        SET @UPGRADEDT = #{AUTO_GRD_DT} --자동승급일 INPUT

        DECLARE @UPSTDT VARCHAR(08) --체크시작일
              , @UPEDDT VARCHAR(08) --체크종료일
        SET @UPSTDT = CONVERT(VARCHAR(08), DATEADD(YEAR, -1, @UPGRADEDT),112) --20180101
        SET @UPEDDT = CONVERT(VARCHAR(08), DATEADD(DAY, -1, DATEADD(YEAR, -1, @UPGRADEDT)),112) --20181231

        SELECT
            AA.COMP_CODE
            , AA.DIV_CODE
            , AA.NAME
            , AA.PERSON_NUMB
            , @UPGRADEDT AS ANNOUNCE_DATE   --발령일자
            , '14'AS ANNOUNCE_CODE          --발령코드 승급(14)
            , AA.DEPT_CODE AS AF_DEPT_CODE
            , AA.DEPT_NAME AS AF_DEPT_NAME
            , AA.POST_CODE                  --직위
            , AA.ABIL_CODE                  --직책
            , AA.KNOC --직종
            , AA.PAY_GRADE_01
            , RIGHT('00'+ CONVERT(VARCHAR,AA.PAY_GRADE_02 + 1),3) AS PAY_GRADE_02
            , AA.PAY_GRADE_BASE             --호봉 갑/을
            , AA.YEAR_GRADE
            , AA.YEAR_GRADE_BASE            --근속년 갑/을
            , AA.COST_KIND --회계부터
            , AA.JOB_CODE AS TEMPC_01       --담당업무
        FROM HUM100T AA
        --발령정보
        LEFT JOIN (SELECT K1.*
                    FROM HUM760T K1
                    INNER JOIN (
                                SELECT COMP_CODE, PERSON_NUMB, MAX(ANNOUNCE_DATE)  AS ANNOUNCE_DATE FROM HUM760T --304
                                WHERE ANNOUNCE_DATE &gt; @UPSTDT
                                AND ANNOUNCE_DATE &lt;= @UPEDDT
                                AND ANNOUNCE_CODE IN ( '00' --입사
                                                    , '02' --승진
                                                    , '09' --입사(수습)
                                                    , '10' --계약
                                                    , '13' --승급및승호
                                                    , '14' --승급
                                                    , '15' --승호
                                                    )
                                GROUP BY COMP_CODE,PERSON_NUMB
                                ) K2 ON K1.COMP_CODE = K2.COMP_CODE
                                    AND K1.PERSON_NUMB = K2.PERSON_NUMB
                                    AND K1.ANNOUNCE_DATE = K2.ANNOUNCE_DATE
                    ) BB ON AA.COMP_CODE = BB.COMP_CODE
                        AND AA.PERSON_NUMB = BB.PERSON_NUMB
        --상벌정보
        LEFT JOIN (SELECT distinct COMP_CODE
                        , PERSON_NUMB
                    FROM HUM810T
                   WHERE 1=1
                    AND ( 1=2
                            --포함일경우 주석
                            <if test="RDO_TYPE2 == &quot;2&quot;">
                            OR KIND_PRIZE_PENALTY = '2' --징계
                            </if>
                            <if test="RDO_TYPE3 == &quot;2&quot;">
                            OR KIND_PRIZE_PENALTY = '3' --감봉
                            </if>
                            <if test="RDO_TYPE4 == &quot;2&quot;">
                            OR KIND_PRIZE_PENALTY = '4' --정직
                            </if>
                            <if test="RDO_TYPE5 == &quot;2&quot;">
                            OR KIND_PRIZE_PENALTY = '5' --직위해제
                            </if>
                        )
                    AND VALIDITY_DATE &gt;= @UPSTDT
                    AND VALIDITY_DATE &lt;= @UPEDDT
                                                ) CC ON AA.COMP_CODE = CC.COMP_CODE
                                                    AND AA.PERSON_NUMB = CC.PERSON_NUMB
        --휴직정보
        LEFT JOIN HUM850T DD on AA.COMP_CODE = DD.COMP_CODE
                            AND @UPGRADEDT BETWEEN FROM_DATE AND TO_DATE
                            AND AA.PERSON_NUMB = DD.PERSON_NUMB

        WHERE AA.RETR_DATE = '00000000'
        <choose>
           <when test="MERITS_PAY_GUBUN == &quot;0&quot;">
           AND AA.EMPLOY_TYPE IN ('1','4')
           </when>
           <when test="MERITS_PAY_GUBUN == &quot;1&quot;">
           AND AA.EMPLOY_TYPE IN ('1')
           </when>
           <when test="MERITS_PAY_GUBUN == &quot;4&quot;">
           AND AA.EMPLOY_TYPE IN ('4')
           </when>
       </choose>
        AND AA.PAY_GRADE_01 NOT IN ('사장', '상임이사')
        AND AA.PAY_GRADE_01 NOT LIKE ('%임금피크%')
        AND BB.PERSON_NUMB IS NULL -- 1년안에 1건이라도 입사(00), 승진(02), 입사수습(09), 계약(10), 승급및승호(13), 승급(14), 승호(15) 정보 있는사람 제외
        AND CC.PERSON_NUMB IS NULL -- 1년안에 1건이라도 징계(2), 감봉(3), 정직(4), 직위해제(5) 정보 있는사람 제외

        <if test="RDO_TYPE1 == &quot;2&quot;">
        AND DD.PERSON_NUMB IS NULL -- 발령일자에 휴직중인사람 제외
        </if>

    </select>

</mapper>