<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hrt510rkrServiceImpl">
	<update id="hrt510rkrServiceImpl.createTable" parameterType="Map">
		--hrt510rkrServiceImpl.createTable
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('HRT510_TEMP')) DROP TABLE HRT510_TEMP

		CREATE TABLE HRT510_TEMP (
		    W_SEQ        NUMERIC(3)   NOT NULL,
		    WAGES_CODE   NVARCHAR(50)     NULL,
		    WAGES_NAME   NVARCHAR(50)     NULL,
		    WAGES_SEQ    NUMERIC(2)       NULL
		    CONSTRAINT HRT510_TEMP_IDX00 PRIMARY KEY CLUSTERED (
		        W_SEQ
		    )
		)
	</update>

	<select id="hrt510rkrServiceImpl.selectWages" parameterType="Map" resultType="rMap">
		--hrt510rkrServiceImpl.selectWages
		SELECT ROW_NUMBER() OVER(ORDER BY WAGES_CODE ASC) AS W_SEQ
		     , WAGES_CODE
		     , WAGES_NAME
		     , WAGES_SEQ
		 FROM HBS300T WITH(NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND RETR_WAGES = 'Y'
		ORDER BY (CASE WHEN USE_YN = 'Y' THEN 1 ELSE 2 END), WAGES_SEQ, WAGES_CODE
	</select>

	<update id="hrt510rkrServiceImpl.insertWages" parameterType="Map">
		--hrt510rkrServiceImpl.insertWages
		INSERT INTO HRT510_TEMP (
		    W_SEQ
		  , WAGES_CODE
		  , WAGES_NAME
		  , WAGES_SEQ
		) VALUES (
		    #{W_SEQ}
		  , #{WAGES_CODE}
		  , #{WAGES_NAME}
		  , #{WAGES_SEQ}
		)
	</update>

	<select id="hrt510rkrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		--hrt510rkrServiceImpl.selectMaster
		SELECT B.NAME
		     , B.PERSON_NUMB
		     , B.DIV_CODE
		     , (SELECT DIV_NAME
		          FROM BOR120T
		         WHERE COMP_CODE = B.COMP_CODE
		            AND DIV_CODE = B.DIV_CODE) AS DIV_NAME
		     , B.DEPT_CODE
		     , B.DEPT_NAME
		     , B.POST_CODE
		     , (SELECT CODE_NAME
		          FROM BSA100T
		         WHERE COMP_CODE = B.COMP_CODE
		            AND MAIN_CODE = 'H005'
		            AND SUB_CODE  = B.POST_CODE
		            AND SUB_CODE != '$') AS POST_NAME
		      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR') AS REPRE_NUM
		      , substring(B.JOIN_DATE,1,4) + '.' + substring(B.JOIN_DATE,5,2) + '.' + substring(B.JOIN_DATE,7,2) AS HUM_JOIN_DATE
		      , A.RETR_DATE
		      , substring(A.RETR_DATE,1,4) + '.' + substring(A.RETR_DATE,5,2) + '.' + substring(A.RETR_DATE,7,2) AS FIX_RETR_DATE
		      , substring(A.JOIN_DATE,1,4) + '.' + substring(A.JOIN_DATE,5,2) + '.' + substring(A.JOIN_DATE,7,2) AS HRT_JOIN_DATE
		      , substring(A.SUPP_DATE,1,4) + '.' + substring(A.SUPP_DATE,5,2) + '.' + substring(A.SUPP_DATE,7,2) AS SUPP_DATE
		      , case when a.retr_date = convert(nvarchar(08), dateadd(dd, -1, dateadd(month, 1, left(a.retr_date, 6) + '01')), 112)
		        then datediff(dd, dateadd(mm, -2, left(a.retr_date, 6) + '01'), a.retr_date) + 1
		        else datediff(dd, dateadd(dd, 1, dateadd(mm, -3, a.retr_date)), a.retr_date) + 1
		        end AS DAY_GAP 
		      , A.PAY_TOTAL_I
		      , A.BONUS_TOTAL_I
		      , A.YEAR_TOTAL_I
		      , A.TOT_WAGES_I
		      , A.AVG_PAY_3
		      , A.AVG_BONUS_I_3
		      , A.AVG_YEAR_I_3
		      , A.AVG_WAGES_I
		      , A.LONG_TOT_DAY
		      , A.LONG_TOT_MONTH
		      , A.DUTY_YYYY
		      , A.LONG_MONTH
		      , A.LONG_DAY
		      , A.ADD_MONTH
		      , A.TOT_PERIOD
		      , A.RETR_ANNU_I
		      , A.GLORY_AMOUNT_I
		      , A.GROUP_INSUR_I
		      , A.ETC_AMOUNT_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.IN_TAX_I - ISNULL(M2.IN_TAX_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.IN_TAX_I
		         END AS IN_TAX_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.LOCAL_TAX_I - ISNULL(M2.LOCAL_TAX_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.LOCAL_TAX_I 
		         END AS LOCAL_TAX_I
		      , A.DED_RETR_TURN_I
		      , A.DED_IN_TAX_ADD_I
		      , A.DED_IN_LOCAL_ADD_I
		      , A.DED_ETC_I
		      , A.SUPP_TOTAL_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.DED_TOTAL_I - ISNULL(M2.DED_TOTAL_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN  A.DED_TOTAL_I
		         END AS DED_TOTAL_I 
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.REAL_AMOUNT_I + ISNULL(M2.DED_TOTAL_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.REAL_AMOUNT_I
		         END AS REAL_AMOUNT_I  
		      , A.RETR_TYPE
		      , M.MONTH_01
		      , M.MONTH_02
		      , M.MONTH_03
		      , M.MONTH_04
		      , B.KOR_ADDR
		      , C.CUSTOM_NAME AS BANK_NAME
		      , unilite.fnCipherDecrypt(B.BANK_ACCOUNT1 , 'B')  AS BANK_ACCOUNT1
		      , A.DED_ETC_I2
		      , A.DED_ETC_I3
		      , A.DED_ETC_I4
		      , A.DED_ETC_I5
		      , A.DED_ETC_I6
		      , ISNULL(G.PAY_ANNU_I,0) AS PAY_ANNU_I
		  FROM       HRT500T A WITH(NOLOCK)
		  INNER JOIN HUM100T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN  BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                   AND C.CUSTOM_CODE = B.BANK_CODE1 
		  INNER JOIN (SELECT COMP_CODE
		                  , RETR_DATE
		                  , RETR_TYPE
		                  , PERSON_NUMB
		                  , MIN(PAY_YYYYMM) MONTH_01
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 1, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_02
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 2, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_03
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 3, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_04
		               FROM HRT300T WITH(NOLOCK)
		              WHERE COMP_CODE = #{S_COMP_CODE}
		                AND RETR_TYPE != 'S'
		              GROUP BY COMP_CODE, RETR_DATE, RETR_TYPE, PERSON_NUMB) M ON A.COMP_CODE   = B.COMP_CODE
		                                                                      AND A.COMP_CODE   = M.COMP_CODE
		                                                                      AND A.RETR_TYPE   = M.RETR_TYPE
		                                                                      AND A.RETR_DATE   = M.RETR_DATE
		                                                                      AND A.PERSON_NUMB = M.PERSON_NUMB
		  LEFT JOIN (SELECT COMP_CODE 
		                  , PERSON_NUMB
		                  , IN_TAX_I
		                  , LOCAL_TAX_I
		                  , DED_TOTAL_I
		                  , SUPP_DATE
		               FROM HRT500T WITH(NOLOCK)
		              WHERE COMP_CODE = #{S_COMP_CODE}
		                AND RETR_TYPE = 'M') AS M2 ON M2.COMP_CODE = A.COMP_CODE
		                                          AND M2.PERSON_NUMB = A.PERSON_NUMB
		                                          AND LEFT(M2.SUPP_DATE,4) = LEFT(A.RETR_DATE,4)
		  LEFT JOIN HRT610T AS F WITH(NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                     AND F.PERSON_NUMB       = B.PERSON_NUMB
		                                     AND B.RETR_PENSION_KIND = 'DB'
		  LEFT JOIN HRT510T AS G WITH(NOLOCK) ON G.COMP_CODE         = A.COMP_CODE
		                                     AND G.RETR_DATE         = A.RETR_DATE
		                                     AND G.RETR_TYPE         = A.RETR_TYPE
		                                     AND G.PERSON_NUMB       = A.PERSON_NUMB
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.RETR_TYPE != 'S'
		   <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">AND A.RETR_TYPE = #{RETR_TYPE}</if>
		   <if test="@foren.Ognl@isNotEmpty(RETR_DATE)">AND A.RETR_DATE = #{RETR_DATE}</if> 
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">AND B.DIV_CODE = #{DIV_CODE}</if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_FR)">AND B.DEPT_CODE &gt;= #{DEPT_FR}</if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_TO)">AND B.DEPT_CODE &lt;= #{DEPT_TO}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">AND B.PAY_CODE = #{PAY_CODE}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">AND B.PAY_GUBUN = #{PAY_GUBUN}</if>
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">AND B.PERSON_NUMB = #{PERSON_NUMB}</if>
		 ORDER BY B.DIV_CODE, B.DEPT_CODE, B.POST_CODE, B.NAME, B.PERSON_NUMB, A.RETR_DATE, A.RETR_TYPE
	</select>

	<select id="hrt510rkrServiceImpl.ds_sub01" parameterType="Map" resultType="rMap" >
		--hrt510rkrServiceImpl.ds_sub01
		SELECT TOT2.PERSON_NUMB
		    , TOT2.RETR_DATE
		    , TOT2.RETR_TYPE
		    , PAY_YYYYMM
		    , SUBSTRING(PAY_YYYYMM, 5, 2) AS PAY_MONTH
		    , MAX(TOT2.WAGES_DAY)         AS WAGES_DAY
		    , MAX(TOT2.PAY_STRT_DATE)     AS PAY_STRT_DATE
		    , MAX(TOT2.PAY_LAST_DATE)     AS PAY_LAST_DATE
		    , MAX(WAGES_CODE_01)          AS WAGES_CODE_01
		    , MAX(WAGES_NAME_01)          AS WAGES_NAME_01
		    , SUM(WAGES_AMTI_01)          AS WAGES_AMTI_01
		    , MAX(WAGES_CODE_02)          AS WAGES_CODE_02
		    , MAX(WAGES_NAME_02)          AS WAGES_NAME_02
		    , SUM(WAGES_AMTI_02)          AS WAGES_AMTI_02
		    , MAX(WAGES_CODE_03)          AS WAGES_CODE_03
		    , MAX(WAGES_NAME_03)          AS WAGES_NAME_03
		    , SUM(WAGES_AMTI_03)          AS WAGES_AMTI_03
		    , MAX(WAGES_CODE_04)          AS WAGES_CODE_04
		    , MAX(WAGES_NAME_04)          AS WAGES_NAME_04
		    , SUM(WAGES_AMTI_04)          AS WAGES_AMTI_04
		    , MAX(WAGES_CODE_05)          AS WAGES_CODE_05
		    , MAX(WAGES_NAME_05)          AS WAGES_NAME_05
		    , SUM(WAGES_AMTI_05)          AS WAGES_AMTI_05
		    , MAX(WAGES_CODE_06)          AS WAGES_CODE_06
		    , MAX(WAGES_NAME_06)          AS WAGES_NAME_06
		    , SUM(WAGES_AMTI_06)          AS WAGES_AMTI_06
		    , MAX(WAGES_CODE_07)          AS WAGES_CODE_07
		    , MAX(WAGES_NAME_07)          AS WAGES_NAME_07
		    , SUM(WAGES_AMTI_07)          AS WAGES_AMTI_07
		    , MAX(WAGES_CODE_08)          AS WAGES_CODE_08
		    , MAX(WAGES_NAME_08)          AS WAGES_NAME_08
		    , SUM(WAGES_AMTI_08)          AS WAGES_AMTI_08
		    , MAX(WAGES_CODE_09)          AS WAGES_CODE_09
		    , MAX(WAGES_NAME_09)          AS WAGES_NAME_09
		    , SUM(WAGES_AMTI_09)          AS WAGES_AMTI_09
		    , MAX(WAGES_CODE_10)          AS WAGES_CODE_10
		    , MAX(WAGES_NAME_10)          AS WAGES_NAME_10
		    , SUM(WAGES_AMTI_10)          AS WAGES_AMTI_10
		    , MAX(WAGES_CODE_11)          AS WAGES_CODE_11
		    , MAX(WAGES_NAME_11)          AS WAGES_NAME_11
		    , SUM(WAGES_AMTI_11)          AS WAGES_AMTI_11
		    , MAX(WAGES_CODE_12)          AS WAGES_CODE_12
		    , MAX(WAGES_NAME_12)          AS WAGES_NAME_12
		    , SUM(WAGES_AMTI_12)          AS WAGES_AMTI_12
		    , MAX(WAGES_CODE_13)          AS WAGES_CODE_13
		    , MAX(WAGES_NAME_13)          AS WAGES_NAME_13
		    , SUM(WAGES_AMTI_13)          AS WAGES_AMTI_13
		    , MAX(WAGES_CODE_14)          AS WAGES_CODE_14
		    , MAX(WAGES_NAME_14)          AS WAGES_NAME_14
		    , SUM(WAGES_AMTI_14)          AS WAGES_AMTI_14
		    , MAX(WAGES_CODE_15)          AS WAGES_CODE_15
		    , MAX(WAGES_NAME_15)          AS WAGES_NAME_15
		    , SUM(WAGES_AMTI_15)          AS WAGES_AMTI_15
		    , MAX(WAGES_CODE_16)          AS WAGES_CODE_16
		    , MAX(WAGES_NAME_16)          AS WAGES_NAME_16
		    , SUM(WAGES_AMTI_16)          AS WAGES_AMTI_16
		    , MAX(WAGES_CODE_17)          AS WAGES_CODE_17
		    , MAX(WAGES_NAME_17)          AS WAGES_NAME_17
		    , SUM(WAGES_AMTI_17)          AS WAGES_AMTI_17
		    , MAX(WAGES_CODE_18)          AS WAGES_CODE_18
		    , MAX(WAGES_NAME_18)          AS WAGES_NAME_18
		    , SUM(WAGES_AMTI_18)          AS WAGES_AMTI_18
		    , MAX(WAGES_CODE_19)          AS WAGES_CODE_19
		    , MAX(WAGES_NAME_19)          AS WAGES_NAME_19
		    , SUM(WAGES_AMTI_19)          AS WAGES_AMTI_19
		    , MAX(WAGES_CODE_20)          AS WAGES_CODE_20
		    , MAX(WAGES_NAME_20)          AS WAGES_NAME_20
		    , SUM(WAGES_AMTI_20)          AS WAGES_AMTI_20
		 FROM (SELECT PERSON_NUMB
		            , RETR_DATE
		            , RETR_TYPE
		            , PAY_YYYYMM
		            , SUBSTRING(PAY_YYYYMM, 5, 2)                               AS PAY_MONTH
		            , MAX(WAGES_DAY)                                            AS WAGES_DAY
		            , MAX(PAY_STRT_DATE)                                        AS PAY_STRT_DATE
		            , MAX(PAY_LAST_DATE)                                        AS PAY_LAST_DATE
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_01
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_01
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_01
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_02
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_02
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_02
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_03
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_03
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_03
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_04
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_04
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_04
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_05
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_05
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_05
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_06
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_06
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_06
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_07
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_07
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_07
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_08
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_08
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_08
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_09
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_09
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_09
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_10
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_10
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_10
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_11
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_11
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_11
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_12
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_12
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_12
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_13
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_13
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_13
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_14
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_14
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_14
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_15
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_15
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_15
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_16
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_16
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_16
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_17
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_17
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(AMOUNT_I)   ELSE 0 END)  AS WAGES_AMTI_17
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_18
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_18
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_18
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_19
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_19
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_19
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_20
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_20
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_20
		        FROM (SELECT (SELECT W_SEQ FROM HRT510_TEMP WITH(NOLOCK) WHERE WAGES_CODE = B.WAGES_CODE) NUM
		                   , B.RETR_DATE
		                   , B.RETR_TYPE
		                   , B.PERSON_NUMB
		                   , B.PAY_YYYYMM
		                   , SUBSTRING(B.PAY_YYYYMM, 5, 2)       AS PAY_MONTH
		                   , B.WAGES_DAY
		                   , substring(B.PAY_STRT_DATE,1,4) + '-' + substring(B.PAY_STRT_DATE,5,2) + '-' + substring(B.PAY_STRT_DATE,7,2) AS PAY_STRT_DATE
		                   , substring(B.PAY_LAST_DATE,1,4) + '-' + substring(B.PAY_LAST_DATE,5,2) + '-' + substring(B.PAY_LAST_DATE,7,2) AS PAY_LAST_DATE
		                   , B.WAGES_CODE
		                   , C.WAGES_NAME
		                   , B.AMOUNT_I
		                   , C.WAGES_SEQ
		                FROM       HRT500T A WITH(NOLOCK)
		                INNER JOIN HRT300T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                 AND A.PERSON_NUMB = B.PERSON_NUMB
		                                                 AND A.RETR_DATE   = B.RETR_DATE
		                                                 AND A.RETR_TYPE   = B.RETR_TYPE
		                INNER JOIN HBS300T C WITH(NOLOCK) ON B.COMP_CODE   = C.COMP_CODE
		                                                 AND B.WAGES_CODE  = C.WAGES_CODE
		               WHERE A.COMP_CODE = #{S_COMP_CODE}
		                 AND A.RETR_TYPE != 'S') TOT
		      GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM, NUM ) TOT2
		GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM
	</select>

	<select id="hrt510rkrServiceImpl.ds_sub02" parameterType="Map" resultType="rMap" >
		--hrt510rkrServiceImpl.ds_sub02
		SELECT TOT2.PERSON_NUMB
		     , TOT2.RETR_DATE
		     , TOT2.RETR_TYPE
		     , PAY_YYYYMM
		     , SUBSTRING(PAY_YYYYMM, 5, 2) AS PAY_MONTH
		     , MAX(TOT2.WAGES_DAY)         AS WAGES_DAY
		     , MAX(TOT2.PAY_STRT_DATE)     AS PAY_STRT_DATE
		     , MAX(TOT2.PAY_LAST_DATE)     AS PAY_LAST_DATE
		     , MAX(WAGES_CODE_01)          AS WAGES_CODE_01
		     , MAX(WAGES_NAME_01)          AS WAGES_NAME_01
		     , SUM(WAGES_AMTI_01)          AS WAGES_AMTI_01
		     , MAX(WAGES_CODE_02)          AS WAGES_CODE_02
		     , MAX(WAGES_NAME_02)          AS WAGES_NAME_02
		     , SUM(WAGES_AMTI_02)          AS WAGES_AMTI_02
		     , MAX(WAGES_CODE_03)          AS WAGES_CODE_03
		     , MAX(WAGES_NAME_03)          AS WAGES_NAME_03
		     , SUM(WAGES_AMTI_03)          AS WAGES_AMTI_03
		     , MAX(WAGES_CODE_04)          AS WAGES_CODE_04
		     , MAX(WAGES_NAME_04)          AS WAGES_NAME_04
		     , SUM(WAGES_AMTI_04)          AS WAGES_AMTI_04
		     , MAX(WAGES_CODE_05)          AS WAGES_CODE_05
		     , MAX(WAGES_NAME_05)          AS WAGES_NAME_05
		     , SUM(WAGES_AMTI_05)          AS WAGES_AMTI_05
		     , MAX(WAGES_CODE_06)          AS WAGES_CODE_06
		     , MAX(WAGES_NAME_06)          AS WAGES_NAME_06
		     , SUM(WAGES_AMTI_06)          AS WAGES_AMTI_06
		     , MAX(WAGES_CODE_07)          AS WAGES_CODE_07
		     , MAX(WAGES_NAME_07)          AS WAGES_NAME_07
		     , SUM(WAGES_AMTI_07)          AS WAGES_AMTI_07
		     , MAX(WAGES_CODE_08)          AS WAGES_CODE_08
		     , MAX(WAGES_NAME_08)          AS WAGES_NAME_08
		     , SUM(WAGES_AMTI_08)          AS WAGES_AMTI_08
		     , MAX(WAGES_CODE_09)          AS WAGES_CODE_09
		     , MAX(WAGES_NAME_09)          AS WAGES_NAME_09
		     , SUM(WAGES_AMTI_09)          AS WAGES_AMTI_09
		     , MAX(WAGES_CODE_10)          AS WAGES_CODE_10
		     , MAX(WAGES_NAME_10)          AS WAGES_NAME_10
		     , SUM(WAGES_AMTI_10)          AS WAGES_AMTI_10
		     , MAX(WAGES_CODE_11)          AS WAGES_CODE_11
		     , MAX(WAGES_NAME_11)          AS WAGES_NAME_11
		     , SUM(WAGES_AMTI_11)          AS WAGES_AMTI_11
		     , MAX(WAGES_CODE_12)          AS WAGES_CODE_12
		     , MAX(WAGES_NAME_12)          AS WAGES_NAME_12
		     , SUM(WAGES_AMTI_12)          AS WAGES_AMTI_12
		     , MAX(WAGES_CODE_13)          AS WAGES_CODE_13
		     , MAX(WAGES_NAME_13)          AS WAGES_NAME_13
		     , SUM(WAGES_AMTI_13)          AS WAGES_AMTI_13
		     , MAX(WAGES_CODE_14)          AS WAGES_CODE_14
		     , MAX(WAGES_NAME_14)          AS WAGES_NAME_14
		     , SUM(WAGES_AMTI_14)          AS WAGES_AMTI_14
		     , MAX(WAGES_CODE_15)          AS WAGES_CODE_15
		     , MAX(WAGES_NAME_15)          AS WAGES_NAME_15
		     , SUM(WAGES_AMTI_15)          AS WAGES_AMTI_15
		     , MAX(WAGES_CODE_16)          AS WAGES_CODE_16
		     , MAX(WAGES_NAME_16)          AS WAGES_NAME_16
		     , SUM(WAGES_AMTI_16)          AS WAGES_AMTI_16
		     , MAX(WAGES_CODE_17)          AS WAGES_CODE_17
		     , MAX(WAGES_NAME_17)          AS WAGES_NAME_17
		     , SUM(WAGES_AMTI_17)          AS WAGES_AMTI_17
		     , MAX(WAGES_CODE_18)          AS WAGES_CODE_18
		     , MAX(WAGES_NAME_18)          AS WAGES_NAME_18
		     , SUM(WAGES_AMTI_18)          AS WAGES_AMTI_18
		     , MAX(WAGES_CODE_19)          AS WAGES_CODE_19
		     , MAX(WAGES_NAME_19)          AS WAGES_NAME_19
		     , SUM(WAGES_AMTI_19)          AS WAGES_AMTI_19
		     , MAX(WAGES_CODE_20)          AS WAGES_CODE_20
		     , MAX(WAGES_NAME_20)          AS WAGES_NAME_20
		     , SUM(WAGES_AMTI_20)          AS WAGES_AMTI_20
		 FROM (SELECT PERSON_NUMB
		            , RETR_DATE
		            , RETR_TYPE
		            , PAY_YYYYMM
		            , SUBSTRING(PAY_YYYYMM, 5, 2)                               AS PAY_MONTH 
		            , MAX(WAGES_DAY)                                            AS WAGES_DAY
		            , MAX(PAY_STRT_DATE)                                        AS PAY_STRT_DATE
		            , MAX(PAY_LAST_DATE)                                        AS PAY_LAST_DATE
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_01
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_01
		            , (CASE WHEN TOT.NUM = 1  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_01
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_02
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_02
		            , (CASE WHEN TOT.NUM = 2  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_02
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_03
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_03
		            , (CASE WHEN TOT.NUM = 3  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_03
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_04
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_04
		            , (CASE WHEN TOT.NUM = 4  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_04
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_05
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_05
		            , (CASE WHEN TOT.NUM = 5  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_05
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_06
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_06
		            , (CASE WHEN TOT.NUM = 6  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_06
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_07
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_07
		            , (CASE WHEN TOT.NUM = 7  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_07
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_08
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_08
		            , (CASE WHEN TOT.NUM = 8  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_08
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_09
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_09
		            , (CASE WHEN TOT.NUM = 9  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_09
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_10
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_10
		            , (CASE WHEN TOT.NUM = 10 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_10
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_11
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_11
		            , (CASE WHEN TOT.NUM = 11 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_11
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_12
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_12
		            , (CASE WHEN TOT.NUM = 12 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_12
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_13
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_13
		            , (CASE WHEN TOT.NUM = 13 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_13
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_14
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_14
		            , (CASE WHEN TOT.NUM = 14 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_14
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_15
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_15
		            , (CASE WHEN TOT.NUM = 15 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_15
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_16
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_16
		            , (CASE WHEN TOT.NUM = 16 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_16
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_17
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_17
		            , (CASE WHEN TOT.NUM = 17 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_17
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_18
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_18
		            , (CASE WHEN TOT.NUM = 18 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_18
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_19
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_19
		            , (CASE WHEN TOT.NUM = 19 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_19
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_20
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_20
		            , (CASE WHEN TOT.NUM = 20 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_20
		        FROM (SELECT (SELECT W_SEQ FROM HRT510_TEMP WITH(NOLOCK) WHERE WAGES_CODE = B.WAGES_CODE) NUM
		                    , B.RETR_DATE
		                    , B.RETR_TYPE
		                    , B.PERSON_NUMB
		                    , B.PAY_YYYYMM
		                    , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MONTH
		                    , B.WAGES_DAY
		                    , substring(B.PAY_STRT_DATE,1,4) + '-' + substring(B.PAY_STRT_DATE,5,2) + '-' + substring(B.PAY_STRT_DATE,7,2) AS PAY_STRT_DATE
		                    , substring(B.PAY_LAST_DATE,1,4) + '-' + substring(B.PAY_LAST_DATE,5,2) + '-' + substring(B.PAY_LAST_DATE,7,2) AS PAY_LAST_DATE
		                    , B.WAGES_CODE
		                    , C.WAGES_NAME
		                    , B.AMOUNT_I
		                    , C.WAGES_SEQ
		                FROM       HRT500T A WITH(NOLOCK)
		                INNER JOIN HRT300T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                 AND A.PERSON_NUMB = B.PERSON_NUMB
		                                                 AND A.RETR_DATE   = B.RETR_DATE
		                                                 AND A.RETR_TYPE   = B.RETR_TYPE 
		                INNER JOIN HBS300T C WITH(NOLOCK) ON B.COMP_CODE   = C.COMP_CODE
		                                                 AND B.WAGES_CODE  = C.WAGES_CODE
		               WHERE A.COMP_CODE  = #{S_COMP_CODE}
		                 AND A.RETR_TYPE != 'S') TOT
		        GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM, NUM ) TOT2
		GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM
	</select>

	<select id="hrt510rkrServiceImpl.ds_sub03" parameterType="Map" resultType="rMap" >
		--hrt510rkrServiceImpl.ds_sub03
		SELECT TOT2.PERSON_NUMB
		     , TOT2.RETR_DATE
		     , TOT2.RETR_TYPE
		     , PAY_YYYYMM
		     , SUBSTRING(PAY_YYYYMM, 5, 2) AS PAY_MONTH
		     , MAX(TOT2.WAGES_DAY)         AS WAGES_DAY
		     , MAX(TOT2.PAY_STRT_DATE)     AS PAY_STRT_DATE
		     , MAX(TOT2.PAY_LAST_DATE)     AS PAY_LAST_DATE
		     , MAX(WAGES_CODE_01)          AS WAGES_CODE_01
		     , MAX(WAGES_NAME_01)          AS WAGES_NAME_01
		     , SUM(WAGES_AMTI_01)          AS WAGES_AMTI_01
		     , MAX(WAGES_CODE_02)          AS WAGES_CODE_02
		     , MAX(WAGES_NAME_02)          AS WAGES_NAME_02
		     , SUM(WAGES_AMTI_02)          AS WAGES_AMTI_02
		     , MAX(WAGES_CODE_03)          AS WAGES_CODE_03
		     , MAX(WAGES_NAME_03)          AS WAGES_NAME_03
		     , SUM(WAGES_AMTI_03)          AS WAGES_AMTI_03
		     , MAX(WAGES_CODE_04)          AS WAGES_CODE_04
		     , MAX(WAGES_NAME_04)          AS WAGES_NAME_04
		     , SUM(WAGES_AMTI_04)          AS WAGES_AMTI_04
		     , MAX(WAGES_CODE_05)          AS WAGES_CODE_05
		     , MAX(WAGES_NAME_05)          AS WAGES_NAME_05
		     , SUM(WAGES_AMTI_05)          AS WAGES_AMTI_05
		     , MAX(WAGES_CODE_06)          AS WAGES_CODE_06
		     , MAX(WAGES_NAME_06)          AS WAGES_NAME_06
		     , SUM(WAGES_AMTI_06)          AS WAGES_AMTI_06
		     , MAX(WAGES_CODE_07)          AS WAGES_CODE_07
		     , MAX(WAGES_NAME_07)          AS WAGES_NAME_07
		     , SUM(WAGES_AMTI_07)          AS WAGES_AMTI_07
		     , MAX(WAGES_CODE_08)          AS WAGES_CODE_08
		     , MAX(WAGES_NAME_08)          AS WAGES_NAME_08
		     , SUM(WAGES_AMTI_08)          AS WAGES_AMTI_08
		     , MAX(WAGES_CODE_09)          AS WAGES_CODE_09
		     , MAX(WAGES_NAME_09)          AS WAGES_NAME_09
		     , SUM(WAGES_AMTI_09)          AS WAGES_AMTI_09
		     , MAX(WAGES_CODE_10)          AS WAGES_CODE_10
		     , MAX(WAGES_NAME_10)          AS WAGES_NAME_10
		     , SUM(WAGES_AMTI_10)          AS WAGES_AMTI_10
		     , MAX(WAGES_CODE_11)          AS WAGES_CODE_11
		     , MAX(WAGES_NAME_11)          AS WAGES_NAME_11
		     , SUM(WAGES_AMTI_11)          AS WAGES_AMTI_11
		     , MAX(WAGES_CODE_12)          AS WAGES_CODE_12
		     , MAX(WAGES_NAME_12)          AS WAGES_NAME_12
		     , SUM(WAGES_AMTI_12)          AS WAGES_AMTI_12
		     , MAX(WAGES_CODE_13)          AS WAGES_CODE_13
		     , MAX(WAGES_NAME_13)          AS WAGES_NAME_13
		     , SUM(WAGES_AMTI_13)          AS WAGES_AMTI_13
		     , MAX(WAGES_CODE_14)          AS WAGES_CODE_14
		     , MAX(WAGES_NAME_14)          AS WAGES_NAME_14
		     , SUM(WAGES_AMTI_14)          AS WAGES_AMTI_14
		     , MAX(WAGES_CODE_15)          AS WAGES_CODE_15
		     , MAX(WAGES_NAME_15)          AS WAGES_NAME_15
		     , SUM(WAGES_AMTI_15)          AS WAGES_AMTI_15
		     , MAX(WAGES_CODE_16)          AS WAGES_CODE_16
		     , MAX(WAGES_NAME_16)          AS WAGES_NAME_16
		     , SUM(WAGES_AMTI_16)          AS WAGES_AMTI_16
		     , MAX(WAGES_CODE_17)          AS WAGES_CODE_17
		     , MAX(WAGES_NAME_17)          AS WAGES_NAME_17
		     , SUM(WAGES_AMTI_17)          AS WAGES_AMTI_17
		     , MAX(WAGES_CODE_18)          AS WAGES_CODE_18
		     , MAX(WAGES_NAME_18)          AS WAGES_NAME_18
		     , SUM(WAGES_AMTI_18)          AS WAGES_AMTI_18
		     , MAX(WAGES_CODE_19)          AS WAGES_CODE_19
		     , MAX(WAGES_NAME_19)          AS WAGES_NAME_19
		     , SUM(WAGES_AMTI_19)          AS WAGES_AMTI_19
		     , MAX(WAGES_CODE_20)          AS WAGES_CODE_20
		     , MAX(WAGES_NAME_20)          AS WAGES_NAME_20
		     , SUM(WAGES_AMTI_20)          AS WAGES_AMTI_20
		  FROM (SELECT PERSON_NUMB
		             , RETR_DATE
		             , RETR_TYPE
		             , PAY_YYYYMM
		             , SUBSTRING(PAY_YYYYMM, 5, 2)                               AS PAY_MONTH 
		             , MAX(WAGES_DAY)                                            AS WAGES_DAY
		             , MAX(PAY_STRT_DATE)                                        AS PAY_STRT_DATE
		             , MAX(PAY_LAST_DATE)                                        AS PAY_LAST_DATE
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_01
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_01
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_01
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_02
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_02
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_02
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_03
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_03
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_03
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_04
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_04
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_04
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_05
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_05
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_05
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_06
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_06
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_06
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_07
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_07
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_07
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_08
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_08
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_08
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_09
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_09
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_09
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_10
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_11
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_12
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_13
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_14
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_15
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_16
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_17
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_18
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_19
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_20
		          FROM (SELECT (SELECT W_SEQ FROM HRT510_TEMP WITH(NOLOCK) WHERE WAGES_CODE = B.WAGES_CODE) NUM
		                     , B.RETR_DATE
		                     , B.RETR_TYPE
		                     , B.PERSON_NUMB
		                     , B.PAY_YYYYMM
		                     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MONTH
		                     , B.WAGES_DAY
		                     , substring(B.PAY_STRT_DATE,1,4) + '-' + substring(B.PAY_STRT_DATE,5,2) + '-' + substring(B.PAY_STRT_DATE,7,2) AS PAY_STRT_DATE 
		                     , substring(B.PAY_LAST_DATE,1,4) + '-' + substring(B.PAY_LAST_DATE,5,2) + '-' + substring(B.PAY_LAST_DATE,7,2) AS PAY_LAST_DATE 
		                     , B.WAGES_CODE
		                     , C.WAGES_NAME
		                     , B.AMOUNT_I
		                     , C.WAGES_SEQ
		                  FROM       HRT500T A WITH(NOLOCK)
		                  INNER JOIN HRT300T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		                                                   AND A.RETR_DATE   = B.RETR_DATE
		                                                   AND A.RETR_TYPE   = B.RETR_TYPE
		                  INNER JOIN HBS300T C WITH(NOLOCK) ON B.COMP_CODE   = C.COMP_CODE
		                                                   AND B.WAGES_CODE  = C.WAGES_CODE
		                 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		                   AND A.RETR_TYPE != 'S') TOT
		         GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM, NUM
		) TOT2
		GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM
	</select>

	<select id="hrt510rkrServiceImpl.ds_sub04" parameterType="Map" resultType="rMap" >
		--hrt510rkrServiceImpl.ds_sub04
		SELECT TOT2.PERSON_NUMB
		     , TOT2.RETR_DATE
		     , TOT2.RETR_TYPE
		     , PAY_YYYYMM
		     , SUBSTRING(PAY_YYYYMM, 5, 2) AS PAY_MONTH 
		     , MAX(TOT2.WAGES_DAY)         AS WAGES_DAY
		     , MAX(TOT2.PAY_STRT_DATE)     AS PAY_STRT_DATE
		     , MAX(TOT2.PAY_LAST_DATE)     AS PAY_LAST_DATE
		     , MAX(WAGES_CODE_01)          AS WAGES_CODE_01
		     , MAX(WAGES_NAME_01)          AS WAGES_NAME_01
		     , SUM(WAGES_AMTI_01)          AS WAGES_AMTI_01
		     , MAX(WAGES_CODE_02)          AS WAGES_CODE_02
		     , MAX(WAGES_NAME_02)          AS WAGES_NAME_02
		     , SUM(WAGES_AMTI_02)          AS WAGES_AMTI_02
		     , MAX(WAGES_CODE_03)          AS WAGES_CODE_03
		     , MAX(WAGES_NAME_03)          AS WAGES_NAME_03
		     , SUM(WAGES_AMTI_03)          AS WAGES_AMTI_03
		     , MAX(WAGES_CODE_04)          AS WAGES_CODE_04
		     , MAX(WAGES_NAME_04)          AS WAGES_NAME_04
		     , SUM(WAGES_AMTI_04)          AS WAGES_AMTI_04
		     , MAX(WAGES_CODE_05)          AS WAGES_CODE_05
		     , MAX(WAGES_NAME_05)          AS WAGES_NAME_05
		     , SUM(WAGES_AMTI_05)          AS WAGES_AMTI_05
		     , MAX(WAGES_CODE_06)          AS WAGES_CODE_06
		     , MAX(WAGES_NAME_06)          AS WAGES_NAME_06
		     , SUM(WAGES_AMTI_06)          AS WAGES_AMTI_06
		     , MAX(WAGES_CODE_07)          AS WAGES_CODE_07
		     , MAX(WAGES_NAME_07)          AS WAGES_NAME_07
		     , SUM(WAGES_AMTI_07)          AS WAGES_AMTI_07
		     , MAX(WAGES_CODE_08)          AS WAGES_CODE_08
		     , MAX(WAGES_NAME_08)          AS WAGES_NAME_08
		     , SUM(WAGES_AMTI_08)          AS WAGES_AMTI_08
		     , MAX(WAGES_CODE_09)          AS WAGES_CODE_09
		     , MAX(WAGES_NAME_09)          AS WAGES_NAME_09
		     , SUM(WAGES_AMTI_09)          AS WAGES_AMTI_09
		     , MAX(WAGES_CODE_10)          AS WAGES_CODE_10
		     , MAX(WAGES_NAME_10)          AS WAGES_NAME_10
		     , SUM(WAGES_AMTI_10)          AS WAGES_AMTI_10
		     , MAX(WAGES_CODE_11)          AS WAGES_CODE_11
		     , MAX(WAGES_NAME_11)          AS WAGES_NAME_11
		     , SUM(WAGES_AMTI_11)          AS WAGES_AMTI_11
		     , MAX(WAGES_CODE_12)          AS WAGES_CODE_12
		     , MAX(WAGES_NAME_12)          AS WAGES_NAME_12
		     , SUM(WAGES_AMTI_12)          AS WAGES_AMTI_12
		     , MAX(WAGES_CODE_13)          AS WAGES_CODE_13
		     , MAX(WAGES_NAME_13)          AS WAGES_NAME_13
		     , SUM(WAGES_AMTI_13)          AS WAGES_AMTI_13
		     , MAX(WAGES_CODE_14)          AS WAGES_CODE_14
		     , MAX(WAGES_NAME_14)          AS WAGES_NAME_14
		     , SUM(WAGES_AMTI_14)          AS WAGES_AMTI_14
		     , MAX(WAGES_CODE_15)          AS WAGES_CODE_15
		     , MAX(WAGES_NAME_15)          AS WAGES_NAME_15
		     , SUM(WAGES_AMTI_15)          AS WAGES_AMTI_15
		     , MAX(WAGES_CODE_16)          AS WAGES_CODE_16
		     , MAX(WAGES_NAME_16)          AS WAGES_NAME_16
		     , SUM(WAGES_AMTI_16)          AS WAGES_AMTI_16
		     , MAX(WAGES_CODE_17)          AS WAGES_CODE_17
		     , MAX(WAGES_NAME_17)          AS WAGES_NAME_17
		     , SUM(WAGES_AMTI_17)          AS WAGES_AMTI_17
		     , MAX(WAGES_CODE_18)          AS WAGES_CODE_18
		     , MAX(WAGES_NAME_18)          AS WAGES_NAME_18
		     , SUM(WAGES_AMTI_18)          AS WAGES_AMTI_18
		     , MAX(WAGES_CODE_19)          AS WAGES_CODE_19
		     , MAX(WAGES_NAME_19)          AS WAGES_NAME_19
		     , SUM(WAGES_AMTI_19)          AS WAGES_AMTI_19
		     , MAX(WAGES_CODE_20)          AS WAGES_CODE_20
		     , MAX(WAGES_NAME_20)          AS WAGES_NAME_20
		     , SUM(WAGES_AMTI_20)          AS WAGES_AMTI_20
		  FROM (SELECT PERSON_NUMB
		             , RETR_DATE
		             , RETR_TYPE
		             , PAY_YYYYMM
		             , SUBSTRING(PAY_YYYYMM, 5, 2)                               AS PAY_MONTH
		             , MAX(WAGES_DAY)                                            AS WAGES_DAY
		             , MAX(PAY_STRT_DATE)                                        AS PAY_STRT_DATE
		             , MAX(PAY_LAST_DATE)                                        AS PAY_LAST_DATE
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_01 
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_01 
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_01 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_02 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_02 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_02 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_03 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_03 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_03 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_04 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_04 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_04 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_05 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_05 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_05 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_06 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_06 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_06 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_07 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_07 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_07 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_08 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_08 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_08 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_09 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_09 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_09 
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_10
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_11
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_12
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_13
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_14
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_15
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_16
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_17
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_18
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_19
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_20
		          FROM (SELECT (SELECT W_SEQ FROM HRT510_TEMP WITH(NOLOCK) WHERE WAGES_CODE = B.WAGES_CODE) NUM
		                     , B.RETR_DATE
		                     , B.RETR_TYPE
		                     , B.PERSON_NUMB
		                     , B.PAY_YYYYMM
		                     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MONTH
		                     , B.WAGES_DAY
		                     , substring(B.PAY_STRT_DATE,1,4) + '-' + substring(B.PAY_STRT_DATE,5,2) + '-' + substring(B.PAY_STRT_DATE,7,2) AS PAY_STRT_DATE
		                     , substring(B.PAY_LAST_DATE,1,4) + '-' + substring(B.PAY_LAST_DATE,5,2) + '-' + substring(B.PAY_LAST_DATE,7,2) AS PAY_LAST_DATE
		                     , B.WAGES_CODE
		                     , C.WAGES_NAME
		                     , B.AMOUNT_I
		                     , C.WAGES_SEQ
		                  FROM       HRT500T A WITH(NOLOCK)
		                  INNER JOIN HRT300T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		                                                   AND A.RETR_DATE   = B.RETR_DATE
		                                                   AND A.RETR_TYPE   = B.RETR_TYPE
		                  INNER JOIN HBS300T C WITH(NOLOCK) ON B.COMP_CODE   = C.COMP_CODE
		                                                   AND B.WAGES_CODE  = C.WAGES_CODE
		                 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		                   AND A.RETR_TYPE != 'S') TOT
		         GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM, NUM
		) TOT2
		GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM
	</select>



<!-- 20200730 추가: 클립리포트 추가 -->
	<select id="hrt510rkrServiceImpl.selectPrintMData" parameterType="Map" resultType="rMap" >
		/* hrt510rkrServiceImpl.selectPrintMData */
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('HRT510_TEMP')) DROP TABLE HRT510_TEMP

		CREATE TABLE HRT510_TEMP (
		    W_SEQ        NUMERIC(3)   NOT NULL,
		    WAGES_CODE   NVARCHAR(50)     NULL,
		    WAGES_NAME   NVARCHAR(50)     NULL,
		    WAGES_SEQ    NUMERIC(2)       NULL
		    CONSTRAINT HRT510_TEMP_IDX00 PRIMARY KEY CLUSTERED (
		        W_SEQ
		    )
		)

		INSERT INTO HRT510_TEMP (
		    W_SEQ
		  , WAGES_CODE
		  , WAGES_NAME
		  , WAGES_SEQ
		)
		SELECT ROW_NUMBER() OVER(ORDER BY WAGES_CODE ASC) AS W_SEQ
		     , WAGES_CODE
		     , WAGES_NAME
		     , WAGES_SEQ
		 FROM HBS300T WITH(NOLOCK)
		WHERE COMP_CODE  = #{S_COMP_CODE}
		  AND RETR_WAGES = 'Y'
		ORDER BY (CASE WHEN USE_YN = 'Y' THEN 1 ELSE 2 END), WAGES_SEQ, WAGES_CODE

		--hrt510rkrServiceImpl.selectMaster
		SELECT #{STXTVALUE2_FILETITLE}  AS STXTVALUE2_FILETITLE
		     , B.NAME
		     , B.PERSON_NUMB
		     , B.DIV_CODE
		     , (SELECT DIV_NAME
		          FROM BOR120T
		         WHERE COMP_CODE = B.COMP_CODE
		            AND DIV_CODE = B.DIV_CODE) AS DIV_NAME
		     , B.DEPT_CODE
		     , B.DEPT_NAME
		     , B.POST_CODE
		     , (SELECT CODE_NAME
		          FROM BSA100T
		         WHERE COMP_CODE = B.COMP_CODE
		            AND MAIN_CODE = 'H005'
		            AND SUB_CODE  = B.POST_CODE
		            AND SUB_CODE != '$') AS POST_NAME
		      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR') AS REPRE_NUM
		      , substring(B.JOIN_DATE,1,4) + '.' + substring(B.JOIN_DATE,5,2) + '.' + substring(B.JOIN_DATE,7,2) AS HUM_JOIN_DATE
		      , A.RETR_DATE
		      , substring(A.RETR_DATE,1,4) + '.' + substring(A.RETR_DATE,5,2) + '.' + substring(A.RETR_DATE,7,2) AS FIX_RETR_DATE
		      , substring(A.JOIN_DATE,1,4) + '.' + substring(A.JOIN_DATE,5,2) + '.' + substring(A.JOIN_DATE,7,2) AS HRT_JOIN_DATE
		      , substring(A.SUPP_DATE,1,4) + '.' + substring(A.SUPP_DATE,5,2) + '.' + substring(A.SUPP_DATE,7,2) AS SUPP_DATE
		      , case when a.retr_date = convert(nvarchar(08), dateadd(dd, -1, dateadd(month, 1, left(a.retr_date, 6) + '01')), 112)
		        then datediff(dd, dateadd(mm, -2, left(a.retr_date, 6) + '01'), a.retr_date) + 1
		        else datediff(dd, dateadd(dd, 1, dateadd(mm, -3, a.retr_date)), a.retr_date) + 1
		        end AS DAY_GAP 
		      , A.PAY_TOTAL_I
		      , A.BONUS_TOTAL_I
		      , A.YEAR_TOTAL_I
		      , A.TOT_WAGES_I
		      , A.AVG_PAY_3
		      , A.AVG_BONUS_I_3
		      , A.AVG_YEAR_I_3
		      , A.AVG_WAGES_I
		      , A.LONG_TOT_DAY
		      , A.LONG_TOT_MONTH
		      , A.DUTY_YYYY
		      , A.LONG_MONTH
		      , A.LONG_DAY
		      , A.ADD_MONTH
		      , A.TOT_PERIOD
		      , A.RETR_ANNU_I
		      , A.GLORY_AMOUNT_I
		      , A.GROUP_INSUR_I
		      , A.ETC_AMOUNT_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.IN_TAX_I - ISNULL(M2.IN_TAX_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.IN_TAX_I
		         END AS IN_TAX_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.LOCAL_TAX_I - ISNULL(M2.LOCAL_TAX_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.LOCAL_TAX_I 
		         END AS LOCAL_TAX_I
		      , A.DED_RETR_TURN_I
		      , A.DED_IN_TAX_ADD_I
		      , A.DED_IN_LOCAL_ADD_I
		      , A.DED_ETC_I
		      , A.SUPP_TOTAL_I
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.DED_TOTAL_I - ISNULL(M2.DED_TOTAL_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN  A.DED_TOTAL_I
		         END AS DED_TOTAL_I 
		      , CASE WHEN A.RETR_TYPE = 'R' THEN (A.REAL_AMOUNT_I + ISNULL(M2.DED_TOTAL_I,0))
		             WHEN A.RETR_TYPE = 'M' THEN A.REAL_AMOUNT_I
		         END AS REAL_AMOUNT_I  
		      , A.RETR_TYPE
		      , M.MONTH_01
		      , M.MONTH_02
		      , M.MONTH_03
		      , M.MONTH_04
		      , B.KOR_ADDR
		      , C.CUSTOM_NAME AS BANK_NAME
		      , unilite.fnCipherDecrypt(B.BANK_ACCOUNT1 , 'B')  AS BANK_ACCOUNT1
		      , A.DED_ETC_I2
		      , A.DED_ETC_I3
		      , A.DED_ETC_I4
		      , A.DED_ETC_I5
		      , A.DED_ETC_I6
		      , ISNULL(G.PAY_ANNU_I,0) AS PAY_ANNU_I
		  FROM       HRT500T A WITH(NOLOCK)
		  INNER JOIN HUM100T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN  BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                   AND C.CUSTOM_CODE = B.BANK_CODE1 
		  INNER JOIN (SELECT COMP_CODE
		                  , RETR_DATE
		                  , RETR_TYPE
		                  , PERSON_NUMB
		                  , MIN(PAY_YYYYMM) MONTH_01
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 1, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_02
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 2, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_03
		                  , RTRIM(CONVERT(VARCHAR(6), DATEADD(M, 3, MIN(PAY_YYYYMM) + '01'), 112)) MONTH_04
		               FROM HRT300T WITH(NOLOCK)
		              WHERE COMP_CODE = #{S_COMP_CODE}
		                AND RETR_TYPE != 'S'
		              GROUP BY COMP_CODE, RETR_DATE, RETR_TYPE, PERSON_NUMB) M ON A.COMP_CODE   = B.COMP_CODE
		                                                                      AND A.COMP_CODE   = M.COMP_CODE
		                                                                      AND A.RETR_TYPE   = M.RETR_TYPE
		                                                                      AND A.RETR_DATE   = M.RETR_DATE
		                                                                      AND A.PERSON_NUMB = M.PERSON_NUMB
		  LEFT JOIN (SELECT COMP_CODE 
		                  , PERSON_NUMB
		                  , IN_TAX_I
		                  , LOCAL_TAX_I
		                  , DED_TOTAL_I
		                  , SUPP_DATE
		               FROM HRT500T WITH(NOLOCK)
		              WHERE COMP_CODE = #{S_COMP_CODE}
		                AND RETR_TYPE = 'M') AS M2 ON M2.COMP_CODE = A.COMP_CODE
		                                          AND M2.PERSON_NUMB = A.PERSON_NUMB
		                                          AND LEFT(M2.SUPP_DATE,4) = LEFT(A.RETR_DATE,4)
		  LEFT JOIN HRT610T AS F WITH(NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                     AND F.PERSON_NUMB       = B.PERSON_NUMB
		                                     AND B.RETR_PENSION_KIND = 'DB'
		  LEFT JOIN HRT510T AS G WITH(NOLOCK) ON G.COMP_CODE         = A.COMP_CODE
		                                     AND G.RETR_DATE         = A.RETR_DATE
		                                     AND G.RETR_TYPE         = A.RETR_TYPE
		                                     AND G.PERSON_NUMB       = A.PERSON_NUMB
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.RETR_TYPE != 'S'
		   <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">AND A.RETR_TYPE = #{RETR_TYPE}</if>
		   <if test="@foren.Ognl@isNotEmpty(RETR_DATE)">AND A.RETR_DATE = #{RETR_DATE}</if> 
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">AND B.DIV_CODE = #{DIV_CODE}</if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_FR)">AND B.DEPT_CODE &gt;= #{DEPT_FR}</if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_TO)">AND B.DEPT_CODE &lt;= #{DEPT_TO}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">AND B.PAY_CODE = #{PAY_CODE}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}</if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">AND B.PAY_GUBUN = #{PAY_GUBUN}</if>
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">AND B.PERSON_NUMB = #{PERSON_NUMB}</if>
		  GROUP BY B.COMP_CODE, B.NAME, B.PERSON_NUMB, B.DIV_CODE, B.DEPT_CODE, B.DEPT_NAME, B.POST_CODE, unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR'), A.JOIN_DATE, B.JOIN_DATE, A.RETR_DATE, A.SUPP_DATE, A.PAY_TOTAL_I
		         , A.BONUS_TOTAL_I, A.YEAR_TOTAL_I, A.TOT_WAGES_I, A.AVG_PAY_3, A.AVG_BONUS_I_3, A.AVG_YEAR_I_3, A.AVG_WAGES_I, A.LONG_TOT_DAY, A.LONG_TOT_MONTH, A.DUTY_YYYY, A.LONG_MONTH, A.LONG_DAY
		         , A.ADD_MONTH, A.TOT_PERIOD, A.RETR_ANNU_I, A.GLORY_AMOUNT_I, A.GROUP_INSUR_I, A.ETC_AMOUNT_I, A.RETR_TYPE, A.DED_RETR_TURN_I, A.DED_IN_TAX_ADD_I, A.DED_IN_LOCAL_ADD_I, A.DED_ETC_I
		         , M.MONTH_01
		         , M.MONTH_02
		         , M.MONTH_03
		         , M.MONTH_04
		         , B.KOR_ADDR
		         , C.CUSTOM_NAME
		         , unilite.fnCipherDecrypt(B.BANK_ACCOUNT1 , 'B')
		         , A.DED_ETC_I2
		         , A.DED_ETC_I3
		         , A.DED_ETC_I4
		         , A.DED_ETC_I5
		         , A.DED_ETC_I6
		         , ISNULL(G.PAY_ANNU_I,0)
		         , CASE WHEN A.RETR_TYPE = 'R' THEN (A.IN_TAX_I - ISNULL(M2.IN_TAX_I,0))
		                WHEN A.RETR_TYPE = 'M' THEN A.IN_TAX_I
		           END
		         , CASE WHEN A.RETR_TYPE = 'R' THEN (A.LOCAL_TAX_I - ISNULL(M2.LOCAL_TAX_I,0))
		                WHEN A.RETR_TYPE = 'M' THEN A.LOCAL_TAX_I 
		           END
		         , CASE WHEN A.RETR_TYPE = 'R' THEN (A.DED_TOTAL_I - ISNULL(M2.DED_TOTAL_I,0))
		                WHEN A.RETR_TYPE = 'M' THEN  A.DED_TOTAL_I
		           END
		         , CASE WHEN A.RETR_TYPE = 'R' THEN (A.REAL_AMOUNT_I + ISNULL(M2.DED_TOTAL_I,0))
		                WHEN A.RETR_TYPE = 'M' THEN A.REAL_AMOUNT_I
		           END
		         , A.SUPP_TOTAL_I
		  ORDER BY B.DIV_CODE, B.DEPT_CODE, B.POST_CODE, B.NAME, B.PERSON_NUMB, A.RETR_DATE, A.RETR_TYPE
	</select>

	<select id="hrt510rkrServiceImpl.selectPrintDData" parameterType="Map" resultType="rMap" >
		/* hrt510rkrServiceImpl.selectPrintDData */
		SELECT RANK() OVER(PARTITION BY PERSON_NUMB, RETR_DATE ORDER BY PAY_YYYYMM ASC) AS PAY_SEQ
		     , TOT2.PERSON_NUMB
		     , TOT2.RETR_DATE
		     , TOT2.RETR_TYPE
		     , PAY_YYYYMM
		     , SUBSTRING(PAY_YYYYMM, 5, 2) AS PAY_MONTH 
		     , MAX(TOT2.WAGES_DAY)         AS WAGES_DAY
		     , MAX(TOT2.PAY_STRT_DATE)     AS PAY_STRT_DATE
		     , MAX(TOT2.PAY_LAST_DATE)     AS PAY_LAST_DATE
		     , MAX(WAGES_CODE_01)          AS WAGES_CODE_01
		     , MAX(WAGES_NAME_01)          AS WAGES_NAME_01
		     , SUM(WAGES_AMTI_01)          AS WAGES_AMTI_01
		     , MAX(WAGES_CODE_02)          AS WAGES_CODE_02
		     , MAX(WAGES_NAME_02)          AS WAGES_NAME_02
		     , SUM(WAGES_AMTI_02)          AS WAGES_AMTI_02
		     , MAX(WAGES_CODE_03)          AS WAGES_CODE_03
		     , MAX(WAGES_NAME_03)          AS WAGES_NAME_03
		     , SUM(WAGES_AMTI_03)          AS WAGES_AMTI_03
		     , MAX(WAGES_CODE_04)          AS WAGES_CODE_04
		     , MAX(WAGES_NAME_04)          AS WAGES_NAME_04
		     , SUM(WAGES_AMTI_04)          AS WAGES_AMTI_04
		     , MAX(WAGES_CODE_05)          AS WAGES_CODE_05
		     , MAX(WAGES_NAME_05)          AS WAGES_NAME_05
		     , SUM(WAGES_AMTI_05)          AS WAGES_AMTI_05
		     , MAX(WAGES_CODE_06)          AS WAGES_CODE_06
		     , MAX(WAGES_NAME_06)          AS WAGES_NAME_06
		     , SUM(WAGES_AMTI_06)          AS WAGES_AMTI_06
		     , MAX(WAGES_CODE_07)          AS WAGES_CODE_07
		     , MAX(WAGES_NAME_07)          AS WAGES_NAME_07
		     , SUM(WAGES_AMTI_07)          AS WAGES_AMTI_07
		     , MAX(WAGES_CODE_08)          AS WAGES_CODE_08
		     , MAX(WAGES_NAME_08)          AS WAGES_NAME_08
		     , SUM(WAGES_AMTI_08)          AS WAGES_AMTI_08
		     , MAX(WAGES_CODE_09)          AS WAGES_CODE_09
		     , MAX(WAGES_NAME_09)          AS WAGES_NAME_09
		     , SUM(WAGES_AMTI_09)          AS WAGES_AMTI_09
		     , MAX(WAGES_CODE_10)          AS WAGES_CODE_10
		     , MAX(WAGES_NAME_10)          AS WAGES_NAME_10
		     , SUM(WAGES_AMTI_10)          AS WAGES_AMTI_10
		     , MAX(WAGES_CODE_11)          AS WAGES_CODE_11
		     , MAX(WAGES_NAME_11)          AS WAGES_NAME_11
		     , SUM(WAGES_AMTI_11)          AS WAGES_AMTI_11
		     , MAX(WAGES_CODE_12)          AS WAGES_CODE_12
		     , MAX(WAGES_NAME_12)          AS WAGES_NAME_12
		     , SUM(WAGES_AMTI_12)          AS WAGES_AMTI_12
		     , MAX(WAGES_CODE_13)          AS WAGES_CODE_13
		     , MAX(WAGES_NAME_13)          AS WAGES_NAME_13
		     , SUM(WAGES_AMTI_13)          AS WAGES_AMTI_13
		     , MAX(WAGES_CODE_14)          AS WAGES_CODE_14
		     , MAX(WAGES_NAME_14)          AS WAGES_NAME_14
		     , SUM(WAGES_AMTI_14)          AS WAGES_AMTI_14
		     , MAX(WAGES_CODE_15)          AS WAGES_CODE_15
		     , MAX(WAGES_NAME_15)          AS WAGES_NAME_15
		     , SUM(WAGES_AMTI_15)          AS WAGES_AMTI_15
		     , MAX(WAGES_CODE_16)          AS WAGES_CODE_16
		     , MAX(WAGES_NAME_16)          AS WAGES_NAME_16
		     , SUM(WAGES_AMTI_16)          AS WAGES_AMTI_16
		     , MAX(WAGES_CODE_17)          AS WAGES_CODE_17
		     , MAX(WAGES_NAME_17)          AS WAGES_NAME_17
		     , SUM(WAGES_AMTI_17)          AS WAGES_AMTI_17
		     , MAX(WAGES_CODE_18)          AS WAGES_CODE_18
		     , MAX(WAGES_NAME_18)          AS WAGES_NAME_18
		     , SUM(WAGES_AMTI_18)          AS WAGES_AMTI_18
		     , MAX(WAGES_CODE_19)          AS WAGES_CODE_19
		     , MAX(WAGES_NAME_19)          AS WAGES_NAME_19
		     , SUM(WAGES_AMTI_19)          AS WAGES_AMTI_19
		     , MAX(WAGES_CODE_20)          AS WAGES_CODE_20
		     , MAX(WAGES_NAME_20)          AS WAGES_NAME_20
		     , SUM(WAGES_AMTI_20)          AS WAGES_AMTI_20
		  FROM (SELECT PERSON_NUMB
		             , RETR_DATE
		             , RETR_TYPE
		             , PAY_YYYYMM
		             , SUBSTRING(PAY_YYYYMM, 5, 2)                               AS PAY_MONTH
		             , MAX(WAGES_DAY)                                            AS WAGES_DAY
		             , MAX(PAY_STRT_DATE)                                        AS PAY_STRT_DATE
		             , MAX(PAY_LAST_DATE)                                        AS PAY_LAST_DATE
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_01 
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_01 
		             , (CASE WHEN TOT.NUM = 1  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_01 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_02 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_02 
		             , (CASE WHEN TOT.NUM = 2  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_02 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_03 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_03 
		             , (CASE WHEN TOT.NUM = 3  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_03 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_04 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_04 
		             , (CASE WHEN TOT.NUM = 4  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_04 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_05 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_05 
		             , (CASE WHEN TOT.NUM = 5  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_05 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_06 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_06 
		             , (CASE WHEN TOT.NUM = 6  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_06 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_07 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_07 
		             , (CASE WHEN TOT.NUM = 7  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_07 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_08 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_08 
		             , (CASE WHEN TOT.NUM = 8  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_08 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_09 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_09 
		             , (CASE WHEN TOT.NUM = 9  THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_09 
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_10
		             , (CASE WHEN TOT.NUM = 10 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_10
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_11
		             , (CASE WHEN TOT.NUM = 11 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_11
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_12
		             , (CASE WHEN TOT.NUM = 12 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_12
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_13
		             , (CASE WHEN TOT.NUM = 13 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_13
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_14
		             , (CASE WHEN TOT.NUM = 14 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_14
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_15
		             , (CASE WHEN TOT.NUM = 15 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_15
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_16
		             , (CASE WHEN TOT.NUM = 16 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_16
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_17
		             , (CASE WHEN TOT.NUM = 17 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_17
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_18
		             , (CASE WHEN TOT.NUM = 18 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_18
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_19
		             , (CASE WHEN TOT.NUM = 19 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_19
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_CODE) ELSE '' END) AS WAGES_CODE_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(WAGES_NAME) ELSE '' END) AS WAGES_NAME_20
		             , (CASE WHEN TOT.NUM = 20 THEN MAX(AMOUNT_I)   ELSE 0  END) AS WAGES_AMTI_20
		          FROM (SELECT (SELECT W_SEQ FROM HRT510_TEMP WITH(NOLOCK) WHERE WAGES_CODE = B.WAGES_CODE) NUM
		                     , B.RETR_DATE
		                     , B.RETR_TYPE
		                     , B.PERSON_NUMB
		                     , B.PAY_YYYYMM
		                     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MONTH
		                     , B.WAGES_DAY
		                     , substring(B.PAY_STRT_DATE,1,4) + '-' + substring(B.PAY_STRT_DATE,5,2) + '-' + substring(B.PAY_STRT_DATE,7,2) AS PAY_STRT_DATE
		                     , substring(B.PAY_LAST_DATE,1,4) + '-' + substring(B.PAY_LAST_DATE,5,2) + '-' + substring(B.PAY_LAST_DATE,7,2) AS PAY_LAST_DATE
		                     , B.WAGES_CODE
		                     , C.WAGES_NAME
		                     , B.AMOUNT_I
		                     , C.WAGES_SEQ
		                  FROM       HRT500T A WITH(NOLOCK)
		                  INNER JOIN HRT300T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                   AND A.PERSON_NUMB = B.PERSON_NUMB
		                                                   AND A.RETR_DATE   = B.RETR_DATE
		                                                   AND A.RETR_TYPE   = B.RETR_TYPE
		                  INNER JOIN HBS300T C WITH(NOLOCK) ON B.COMP_CODE   = C.COMP_CODE
		                                                   AND B.WAGES_CODE  = C.WAGES_CODE
		                 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
		                   AND A.RETR_TYPE = #{RETR_TYPE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(RETR_DATE)">
		                   AND A.RETR_DATE = #{RETR_DATE}
		   </if> 
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		                   AND B.PERSON_NUMB = #{PERSON_NUMB}
		   </if>
		                   AND A.RETR_TYPE != 'S') TOT
		         GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM, NUM
		) TOT2
		GROUP BY PERSON_NUMB, RETR_DATE, RETR_TYPE, PAY_YYYYMM
	</select>
</mapper>