<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hrt502ukrServiceImpl">
	
	<select id="hrt502ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">		
		BEGIN
		    DECLARE @COMP_CODE         NVARCHAR(08)                <!-- (필수) 법인코드 -->
		          , @RETR_TYPE         NVARCHAR(01)                <!-- (필수) 퇴직유형 -->
		          , @RETR_DATE         NVARCHAR(08)                <!-- (필수) 정산일 -->
		          , @PERSON_NUMB       NVARCHAR(10)                <!-- (필수) 사번 -->
		
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		<!--  1. 변수 값 할당 -->
		    SET @COMP_CODE    = #{S_COMP_CODE}
		    SET @RETR_TYPE    = #{RETR_TYPE}
		    SET @RETR_DATE    = #{RETR_DATE}
		    SET @PERSON_NUMB  = #{PERSON_NUMB}
		   
		
		<!--  2. 데이터 조회 -->
		
		    SELECT
		          <!-- [소득자] -->
		           uniLITE.fnCipherDecrypt(A.REPRE_NUM, 'A')                                AS REPRE_NUM                         <!-- 주민등록번호 -->
		         , A.KOR_ADDR                                                               AS ADDR_NAME                         <!-- 주소 -->
		         , LEFT(B.RETR_DATE,4) + '0101'                                             AS RETR_DATE_FR                      <!-- 귀속연도fr -->
		         , B.RETR_DATE                                                              AS RETR_DATE_TO                      <!-- 귀속연도to -->
		
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, ISNULL(B.RETR_ANN_JOIN_DATE,''))  AS RETR_ANN_JOIN_DATE                <!-- (10)확정급여형 퇴직연금 제도 가입일-->
		         , ISNULL(B.RETR_ANNU_I_20111231,0)                                         AS RETR_ANNU_I_20111231              <!-- (11)2011.12.31퇴직금 -->
		         , B.RETR_RESN                                                              AS RETR_RESN                         <!-- (12)퇴직사유 -->
		
		         <!--[퇴직급여현황 - 중간지급] -->
		         , ISNULL(B.M_DIV_NAME        ,'')                                          AS M_DIV_NAME                        <!-- (13)근무처명_중간 -->
		         , (CASE WHEN ISNULL(B.M_COMPANY_NUM,'') = ''
		                 THEN ''
		                 ELSE (SUBSTRING(B.M_COMPANY_NUM,1,3) + '-' + SUBSTRING(B.M_COMPANY_NUM,4,2) + '-' + SUBSTRING(B.M_COMPANY_NUM,6,5))
		             END)                                                                   AS M_COMPANY_NUM                     <!-- (14)사업자등록번호_중간 -->
		         , ISNULL(B.M_ANNU_TOTAL_I     , 0)                                         AS M_ANNU_TOTAL_I                    <!-- (15)퇴직급여_중간 -->
		         , ISNULL(B.M_OUT_INCOME_I     , 0)                                         AS M_OUT_INCOME_I                    <!-- (16)비과세 퇴직급여_중간 -->
		         , ISNULL(B.M_TAX_TOTAL_I      , 0)                                         AS M_TAX_TOTAL_I                     <!-- (17)과세대상 퇴직급여_중간 -->
		
		         <!--[퇴직급여현황 - 최종분] -->
		         , ISNULL(E.DIV_FULL_NAME      ,'')                                         AS R_DIV_NAME                        <!-- (13)근무처명_최종 -->
		         , (CASE WHEN ISNULL(E.COMPANY_NUM,'') = ''
		                 THEN ''
		                 ELSE (SUBSTRING(E.COMPANY_NUM,1,3) + '-' + SUBSTRING(E.COMPANY_NUM,4,2) + '-' + SUBSTRING(E.COMPANY_NUM,6,5))
		             END)                                                                   AS R_COMPANY_NUM                     <!-- (14)사업자등록번호_최종 -->
		         , ISNULL(B.R_ANNU_TOTAL_I     , 0)                                         AS R_ANNU_TOTAL_I                    <!-- (15)퇴직급여_최종 -->
		         , ISNULL(B.OUT_INCOME_I       , 0)                                         AS R_OUT_INCOME_I                    <!-- (16)비과세 퇴직급여_최종 -->
		         , ISNULL(B.R_TAX_TOTAL_I      , 0)                                         AS R_TAX_TOTAL_I                     <!-- (17)과세대상 퇴직급여_최종 -->
		
		         <!--[퇴직급여현황 - 정산] -->
		         , ISNULL(B.M_ANNU_TOTAL_I     , 0) + ISNULL(B.R_ANNU_TOTAL_I    , 0)       AS S_ANNU_TOTAL_I                    <!-- (15)퇴직급여_정산 -->
		         , ISNULL(B.M_OUT_INCOME_I     , 0) + ISNULL(B.OUT_INCOME_I      , 0)       AS S_OUT_INCOME_I                    <!-- (16)비과세퇴직급여_정산 -->
		         , ISNULL(B.M_TAX_TOTAL_I      , 0) + ISNULL(B.R_TAX_TOTAL_I     , 0)       AS S_TAX_TOTAL_I                     <!-- (17)과세대상퇴직급여_정산 -->
		
		         <!--[근속연수 - 중간지급] -->
		         , ISNULL(B.M_JOIN_DATE        ,'')                                         AS M_JOIN_DATE                       <!-- (18)입사일_중간 -->
		         , ISNULL(B.M_CALCU_END_DATE   ,'')                                         AS M_CALCU_END_DATE                  <!-- (19)기산일_중간 -->
		         , ISNULL(B.M_RETR_DATE        ,'')                                         AS M_RETR_DATE                       <!-- (20)퇴사일_중간 -->
		         , ISNULL(B.M_SUPP_DATE        ,'')                                         AS M_SUPP_DATE                       <!-- (21)지급일_중간 -->
		         , ISNULL(B.M_LONG_MONTHS      , 0)                                         AS M_LONG_MONTHS                     <!-- (22)근속월수_중간 -->
		         , ISNULL(B.M_EXEP_MONTHS_BE13 , 0)                                         AS M_EXEP_MONTHS_BE13                <!-- (23)제외월수_중간(2013이전) -->
		         , ISNULL(B.M_EXEP_MONTHS_AF13 , 0)                                         AS M_EXEP_MONTHS_AF13                <!-- (23)제외월수_중간(2013이후) -->
		         , ISNULL(B.M_EXEP_MONTHS      , 0)                                         AS M_EXEP_MONTHS                     <!-- (23)제외월수_중간 -->
		         , ISNULL(B.M_ADD_MONTHS_BE13  , 0)                                         AS M_ADD_MONTHS_BE13                 <!-- (24)가산월수_중간(2013이전) -->
		         , ISNULL(B.M_ADD_MONTHS_AF13  , 0)                                         AS M_ADD_MONTHS_AF13                 <!-- (24)가산월수_중간(2013이후) -->
		         , ISNULL(B.M_ADD_MONTHS       , 0)                                         AS M_ADD_MONTHS                      <!-- (24)가산월수_중간 -->
		         , ISNULL(B.M_LONG_YEARS       , 0)                                         AS M_LONG_YEARS                      <!-- (26)근속연수_중간 -->
		
		         <!--[근속연수 - 최종분] -->
		         , ISNULL(B.R_JOIN_DATE        ,'')                                         AS R_JOIN_DATE                       <!-- (18)입사일_최종 -->
		         , ISNULL(B.R_CALCU_END_DATE   ,'')                                         AS R_CALCU_END_DATE                  <!-- (19)기산일_최종 -->
		         , ISNULL(B.R_RETR_DATE        ,'')                                         AS R_RETR_DATE                       <!-- (20)퇴사일_최종 -->
		         , ISNULL(B.R_SUPP_DATE        ,'')                                         AS R_SUPP_DATE                       <!-- (21)지급일_최종 -->
		         , ISNULL(B.R_LONG_MONTHS      , 0)                                         AS R_LONG_MONTHS                     <!-- (22)근속월수_최종 -->
		         , ISNULL(B.R_EXEP_MONTHS_BE13 , 0)                                         AS R_EXEP_MONTHS_BE13                <!-- (23)제외월수_최종(2013이전) -->
		         , ISNULL(B.R_EXEP_MONTHS_AF13 , 0)                                         AS R_EXEP_MONTHS_AF13                <!-- (23)제외월수_최종(2013이후) -->
		         , ISNULL(B.R_EXEP_MONTHS      , 0)                                         AS R_EXEP_MONTHS                     <!-- (23)제외월수_최종 -->
		         , ISNULL(B.R_ADD_MONTHS_BE13  , 0)                                         AS R_ADD_MONTHS_BE13                 <!-- (24)가산월수_최종(2013이전) -->
		         , ISNULL(B.R_ADD_MONTHS_AF13  , 0)                                         AS R_ADD_MONTHS_AF13                 <!-- (24)가산월수_최종(2013이후) -->
		         , ISNULL(B.R_ADD_MONTHS       , 0)                                         AS R_ADD_MONTHS                      <!-- (24)가산월수_최종 -->
		         , ISNULL(B.R_LONG_YEARS       , 0)                                         AS R_LONG_YEARS                      <!-- (26)근속연수_최종 -->
		
		         <!--[근속연수 - 정산] -->
		         , ISNULL(B.S_JOIN_DATE        ,'')                                         AS S_JOIN_DATE                       <!-- (18)입사일_정산 -->
		         , ISNULL(B.S_CALCU_END_DATE   ,'')                                         AS S_CALCU_END_DATE                  <!-- (19)기산일_정산 -->
		         , ISNULL(B.S_RETR_DATE        ,'')                                         AS S_RETR_DATE                       <!-- (20)퇴사일_정산 -->
		         , ISNULL(B.S_LONG_MONTHS      , 0)                                         AS S_LONG_MONTHS                     <!-- (22)근속월수_정산 -->
		         , ISNULL(B.S_EXEP_MONTHS      , 0)                                         AS S_EXEP_MONTHS                     <!-- (23)제외월수_정산 -->
		         , ISNULL(B.S_ADD_MONTHS       , 0)                                         AS S_ADD_MONTHS                      <!-- (24)가산월수_정산 -->
		         , ISNULL(B.S_DUPLI_MONTHS     , 0)                                         AS S_DUPLI_MONTHS                    <!-- (25)중복월수_정산 -->
		         , ISNULL(B.S_LONG_YEARS       , 0)                                         AS S_LONG_YEARS                      <!-- (26)근속연수_정산 -->
		
		         <!--[근속연수 - 안분_2012.12.31이전] -->
		         , ISNULL(B.CALCU_END_DATE_BE13, 0)                                         AS CALCU_END_DATE_BE13               <!-- (19)기산일_이전 -->
		         , ISNULL(B.RETR_DATE_BE13     , 0)                                         AS RETR_DATE_BE13                    <!-- (20)퇴사일_이전 -->
		         , ISNULL(B.LONG_MONTHS_BE13   , 0)                                         AS LONG_MONTHS_BE13                  <!-- (22)근속월수_이전 -->
		         , ISNULL(B.EXEP_MONTHS_BE13   , 0)                                         AS EXEP_MONTHS_BE13                  <!-- (23)제외월수_이전 -->
		         , ISNULL(B.ADD_MONTHS_BE13    , 0)                                         AS ADD_MONTHS_BE13                   <!-- (24)가산월수_이전 -->
		         , ISNULL(B.LONG_YEARS_BE13    , 0)                                         AS LONG_YEARS_BE13                   <!-- (26)근속연수_이전 -->
		
		         <!--[근속연수 - 안분_2013.01.01이후] -->
		         , ISNULL(B.CALCU_END_DATE_AF13, 0)                                         AS CALCU_END_DATE_AF13               <!-- (19)기산일_이후 -->
		         , ISNULL(B.RETR_DATE_AF13     , 0)                                         AS RETR_DATE_AF13                    <!-- (20)퇴사일_이후 -->
		         , ISNULL(B.LONG_MONTHS_AF13   , 0)                                         AS LONG_MONTHS_AF13                  <!-- (22)근속월수_이후 -->
		         , ISNULL(B.EXEP_MONTHS_AF13   , 0)                                         AS EXEP_MONTHS_AF13                  <!-- (23)제외월수_이후 -->
		         , ISNULL(B.ADD_MONTHS_AF13    , 0)                                         AS ADD_MONTHS_AF13                   <!-- (24)가산월수_이후 -->
		         , ISNULL(B.LONG_YEARS_AF13    , 0)                                         AS LONG_YEARS_AF13                   <!-- (26)근속연수_이후 -->
		
		         <!--[퇴직소득과세표준계산] -->
		         , ISNULL(B.M_TAX_TOTAL_I      , 0)                                         AS M_TAX_TOTAL_I2                    <!-- (27)퇴직소득_중간 -->
		         , ISNULL(B.R_TAX_TOTAL_I      , 0)                                         AS R_TAX_TOTAL_I2                    <!-- (27)퇴직소득_최종 -->
		         , ISNULL(B.M_TAX_TOTAL_I      , 0) + ISNULL(B.R_TAX_TOTAL_I      , 0)      AS S_TAX_TOTAL_I2                    <!-- (27)퇴직소득_정산 -->
		
		         , ISNULL(B.SPEC_DED_I         , 0)                                         AS SPEC_DED_I                        <!-- (28)퇴직소득정률공제_정산 -->
		         , ISNULL(B.INCOME_DED_I       , 0)                                         AS INCOME_DED_I                      <!-- (29)근속연수공제_정산 -->
		         , ISNULL(B.TAX_STD_I          , 0)                                         AS TAX_STD_I                         <!-- (30)퇴직소득과세표준_정산 -->
		
		         <!--[퇴직소득세액계산] -->
		         , ISNULL(B.DIVI_TAX_STD_BE13  , 0)                                         AS DIVI_TAX_STD_BE13                 <!-- (31)과세표준안분_이전 -->
		         , ISNULL(B.DIVI_TAX_STD_AF13  , 0)                                         AS DIVI_TAX_STD_AF13                 <!-- (31)과세표준안분_이후 -->
		         , ISNULL(B.DIVI_TAX_STD_BE13  , 0) + ISNULL(DIVI_TAX_STD_AF13  , 0)        AS DIVI_TAX_STD                      <!-- (31)과세표준안분_합계 -->
		
		         , ISNULL(B.AVG_TAX_STD_BE13   , 0)                                         AS AVG_TAX_STD_BE13                  <!-- (32)연평균과세표준_이전 -->
		         , ISNULL(B.AVG_TAX_STD_AF13   , 0)                                         AS AVG_TAX_STD_AF13                  <!-- (32)연평균과세표준_이후 -->
		         , ISNULL(B.AVG_TAX_STD_I      , 0)                                         AS AVG_TAX_STD                       <!-- (32)연평균과세표준_합계  AVG_TAX_STD_BE13,AVG_TAX_STD_AF13,AVG_TAX_STD_I 동일함 -->
		
		         , ISNULL(B.EX_TAX_STD_AF13    , 0)                                         AS EX_TAX_STD_AF13                   <!-- (33)환산과세표준_이후 -->
		         , ISNULL(B.EX_TAX_STD_AF13    , 0)                                         AS EX_TAX_STD                        <!-- (33)환산과세표준_합계 -->
		
		         , ISNULL(B.EX_COMP_TAX_AF13   , 0)                                         AS EX_COMP_TAX_AF13                  <!-- (34)환산산출세액_이후 -->
		         , ISNULL(B.EX_COMP_TAX_AF13   , 0)                                         AS EX_COMP_TAX                       <!-- (34)환산산출세액_합계 -->
		
		         , ISNULL(B.AVR_COMP_TAX_BE13  , 0)                                         AS AVR_COMP_TAX_BE13                 <!-- (35)연평균산출세액_이전 -->
		         , ISNULL(B.AVR_COMP_TAX_AF13  , 0)                                         AS AVR_COMP_TAX_AF13                 <!-- (35)연평균산출세액_이후 -->
		         , ISNULL(B.AVR_COMP_TAX_I     , 0)                                         AS AVR_COMP_TAX                      <!-- (35)연평균산출세액_합계 -->
		
		         , ISNULL(B.COMP_TAX_BE13      , 0)                                         AS COMP_TAX_BE13                     <!-- (36)산출세액_이전 -->
		         , ISNULL(B.COMP_TAX_AF13      , 0)                                         AS COMP_TAX_AF13                     <!-- (36)산출세액_이후 -->
		         , ISNULL(B.COMP_TAX_I         , 0)                                         AS COMP_TAX                          <!-- (36)산출세액_합계 -->
		
		         , ISNULL(B.PAY_END_TAX        , 0)                                         AS PAY_END_TAX                       <!-- (37)기납부세액 -->
		         , ISNULL(B.DEF_TAX_I          , 0)                                         AS DEF_TAX_I                         <!-- (38)신고대상세액 -->
		
		         <!--[이연퇴직소득세액계산] -->
		         , CASE WHEN A.RETR_PENSION_KIND = 'DB' THEN ISNULL(B.DEF_TAX_I, 0)
		                ELSE 0
		            END                                                                     AS DEF_TAX_I2                        <!-- (39)신고대상세액 -->
		         , ISNULL(F.COMP_NAME          ,'')                                         AS COMP_NAME                         <!-- 연금계좌취급자 -->
		         , (CASE WHEN ISNULL(F.COMP_NUM,'') = ''
		                 THEN ''
		                 ELSE (SUBSTRING(F.COMP_NUM,1,3) + '-' + SUBSTRING(F.COMP_NUM,4,2) + '-' + SUBSTRING(F.COMP_NUM,6,5))
		             END)                                                                   AS COMP_NUM                          <!-- 사업자등록번호 -->
		         , unilite.fnCipherDecrypt(F.BANK_ACCOUNT,'B')                              AS BANK_ACCOUNT                      <!-- 계좌번호 -->
		         , ISNULL(F.DEPOSIT_DATE       ,'')                                         AS DEPOSIT_DATE                      <!-- 입금일 -->
		         , ISNULL(F.TRANS_RETR_PAY     , 0)                                         AS TRANS_RETR_PAY                    <!-- (40)계좌입금금액 -->
		         , CASE WHEN A.RETR_PENSION_KIND = 'DB' THEN ISNULL(B.R_TAX_TOTAL_I, 0) 
		                ELSE 0
		            END                                                                     AS DEFER_TAX_TOTAL_I                 <!-- (41)이연퇴직급여 -->
		         , ISNULL(F.DEFER_TAX_I        , 0)                                         AS DEFER_TAX_I                       <!-- (42)이연퇴직소득세 -->
		
		         <!--[납부명세_신고대상세액]  -->
		         , ISNULL(B.DEF_TAX_I          , 0)                                         AS IN_TAX_I1                         <!-- (43)신고대상세액_소득세 -->
		         , FLOOR(ISNULL(B.DEF_TAX_I,0) / 10)                                        AS LOCAL_TAX_I1                      <!-- (43)신고대상세액_지방소득 -->
		         , ISNULL(B.SP_TAX_I           , 0)                                         AS SP_TAX_I1                         <!-- (43)신고대상세액_농어촌 -->
		         , ISNULL(B.DEF_TAX_I          , 0)
		         + FLOOR(ISNULL(B.DEF_TAX_I,0) / 10)
		         + ISNULL(B.SP_TAX_I,0)                                                     AS SUM_TAX_I1                        <!-- (43)신고대상세액_계 -->
		
		         <!--[납부명세_이연퇴직소득세]    -->
		         , ISNULL(F.DEFER_TAX_I,0)                                                  AS IN_TAX_I2                         <!-- (44)이연퇴직소득세_소득세 -->
		         , FLOOR(ISNULL(F.DEFER_TAX_I,0) / 10)                                      AS LOCAL_TAX_I2                      <!-- (44)이연퇴직소득세_지방소득 -->
		         , ISNULL(F.DEFER_SP_TAX_I, 0)                                              AS SP_TAX_I2                         <!-- (44)이연퇴직소득세_농어촌 -->
		         , ISNULL(F.DEFER_TAX_I,0)
		         + FLOOR(ISNULL(F.DEFER_TAX_I,0) / 10) 
		         + ISNULL(F.DEFER_SP_TAX_I, 0)                                              AS SUM_TAX_I2                        <!-- (44)이연퇴직소득세_계 -->
		
		         <!--[납부명세_차감원천징수세액]  -->
		         , FLOOR((ISNULL(B.DEF_TAX_I,0) - ISNULL(F.DEFER_TAX_I,0)) / 10) * 10      AS IN_TAX_I3                          <!-- (45)차감원천징수세액_소득세 -->
		         , FLOOR((FLOOR((FLOOR((ISNULL(B.DEF_TAX_I,0) - ISNULL(F.DEFER_TAX_I,0)) / 10) * 10) / 10)) / 10) * 10    AS LOCAL_TAX_I3                      <!-- (45)차감원천징수세액_지방소득 -->
		         , FLOOR((ISNULL(B.SP_TAX_I,0) - ISNULL(F.DEFER_SP_TAX_I,0)) / 10) * 10    AS SP_TAX_I3                          <!-- (45)차감원천징수세액_농어촌 -->
		         , FLOOR((ISNULL(B.DEF_TAX_I,0) - ISNULL(F.DEFER_TAX_I,0)) / 10) * 10
		         + FLOOR((FLOOR((FLOOR((ISNULL(B.DEF_TAX_I,0) - ISNULL(F.DEFER_TAX_I,0)) / 10) * 10) / 10)) / 10) * 10
		         + FLOOR((ISNULL(B.SP_TAX_I,0) - ISNULL(F.DEFER_SP_TAX_I,0)) / 10) * 10    AS SUM_TAX_I3                         <!-- (45)차감원천징수세액_계 -->
		
		         <!--[HRT500T에서 같이 수정되어야할 항목] -->
		         , B.COMP_CODE
		         , B.RETR_DATE
		         , B.RETR_TYPE
		         , B.PERSON_NUMB
		         , B.JOIN_DATE
		         , B.DUTY_YYYY
		         , B.LONG_MONTH
		         , B.LONG_DAY
		         , B.LONG_TOT_DAY
		         , B.ADD_MONTH
		         , B.LONG_TOT_MONTH
		         , B.LONG_YEARS
		         , B.AVG_DAY
		         , B.RETR_SUM_I
		         , B.SUPP_TOTAL_I
		         , B.EARN_INCOME_I
		         , B.IN_TAX_I
		         , B.LOCAL_TAX_I
		         , B.SP_TAX_I
		         , B.DED_IN_TAX_ADD_I
		         , B.DED_IN_LOCAL_ADD_I
		         , B.DED_ETC_I
		         , B.DED_TOTAL_I
		         , B.REAL_AMOUNT_I
		         , ISNULL(A.RETR_PENSION_KIND,'') AS RETR_PENSION_KIND
		     FROM            HUM100T AS A
		          INNER JOIN HRT500T AS B ON B.COMP_CODE         = A.COMP_CODE
		                                 AND B.PERSON_NUMB       = A.PERSON_NUMB
		          INNER JOIN BOR100T AS D ON D.COMP_CODE         = A.COMP_CODE
		          INNER JOIN BOR120T AS E ON E.COMP_CODE         = A.COMP_CODE
		                                 AND E.DIV_CODE          = A.SECT_CODE
		          LEFT  JOIN HRT610T AS F ON F.COMP_CODE         = A.COMP_CODE
		                                 AND F.PERSON_NUMB       = A.PERSON_NUMB
		                                 AND A.RETR_PENSION_KIND = 'DB'
		    WHERE B.COMP_CODE   = @COMP_CODE
		      AND B.PERSON_NUMB = @PERSON_NUMB
		      AND B.RETR_TYPE   = @RETR_TYPE
		      AND B.RETR_DATE   = @RETR_DATE 
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>	
	
	<update id="hrt502ukrServiceImpl.form01update" parameterType="rMap" >
		SET XACT_ABORT ON
		BEGIN TRY
			BEGIN TRAN
		
		UPDATE HRT500T
		   SET JOIN_DATE            = #{JOIN_DATE}
		   
		   <if test="@foren.Ognl@isNotEmpty(DUTY_YYYY)">
		     , DUTY_YYYY            = ${DUTY_YYYY}
		   </if>
		   <if test="@foren.Ognl@isEmpty(DUTY_YYYY)">
		     , DUTY_YYYY             = 0
		     </if>
		     
		   <if test="@foren.Ognl@isNotEmpty(LONG_MONTH)">
		     , LONG_MONTH           = ${LONG_MONTH}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_MONTH)">
		     , LONG_MONTH             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_DAY)">
		     , LONG_DAY             = ${LONG_DAY}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_DAY)">
		     , LONG_DAY             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_TOT_DAY)">
		     , LONG_TOT_DAY         = ${LONG_TOT_DAY}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_TOT_DAY)">
		     , LONG_TOT_DAY             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ADD_MONTH)">
		     , ADD_MONTH            = ${ADD_MONTH}
		     </if>
		     <if test="@foren.Ognl@isEmpty(ADD_MONTH)">
		     , ADD_MONTH             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_TOT_MONTH)">
		     , LONG_TOT_MONTH       = ${LONG_TOT_MONTH}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_TOT_MONTH)">
		     , LONG_TOT_MONTH             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_YEARS)">
		     , LONG_YEARS           = ${LONG_YEARS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_YEARS)">
		     , LONG_YEARS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVG_DAY)">
		     , AVG_DAY              = ${AVG_DAY}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVG_DAY)">
		     , AVG_DAY             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(RETR_SUM_I)">
		     , RETR_SUM_I           = ${RETR_SUM_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(RETR_SUM_I)">
		     , RETR_SUM_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(SUPP_TOTAL_I)">
		     , SUPP_TOTAL_I         = ${SUPP_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(SUPP_TOTAL_I)">
		     , SUPP_TOTAL_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(EARN_INCOME_I)">
		     , EARN_INCOME_I        = ${EARN_INCOME_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(EARN_INCOME_I)">
		     , EARN_INCOME_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DED_IN_TAX_ADD_I)">
		     , DED_IN_TAX_ADD_I     = ${DED_IN_TAX_ADD_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DED_IN_TAX_ADD_I)">
		     , DED_IN_TAX_ADD_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DED_IN_LOCAL_ADD_I)">
		     , DED_IN_LOCAL_ADD_I   = ${DED_IN_LOCAL_ADD_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DED_IN_LOCAL_ADD_I)">
		     , DED_IN_LOCAL_ADD_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DED_ETC_I)">
		     , DED_ETC_I            = ${DED_ETC_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DED_ETC_I)">
		     , DED_ETC_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DED_TOTAL_I)">
		     , DED_TOTAL_I          = ${DED_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DED_TOTAL_I)">
		     , DED_TOTAL_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(REAL_AMOUNT_I)">
		     , REAL_AMOUNT_I        = ${REAL_AMOUNT_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(REAL_AMOUNT_I)">
		     , REAL_AMOUNT_I             = 0
		     </if>
		     
		     , RETR_RESN            = #{JOIN_DATE}
		     , RETR_ANN_JOIN_DATE   = #{JOIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(RETR_ANNU_I_20111231)">
		     , RETR_ANNU_I_20111231 = ${RETR_ANNU_I_20111231}
		     </if>
		     <if test="@foren.Ognl@isEmpty(RETR_ANNU_I_20111231)">
		     , RETR_ANNU_I_20111231             = 0
		     </if>		     
		     
		     , M_DIV_NAME           = #{JOIN_DATE}
		     , M_COMPANY_NUM        = #{JOIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(M_ANNU_TOTAL_I)">
		     , M_ANNU_TOTAL_I       = ${M_ANNU_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_ANNU_TOTAL_I)">
		     , M_ANNU_TOTAL_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_OUT_INCOME_I)">
		     , M_OUT_INCOME_I       = ${M_OUT_INCOME_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_OUT_INCOME_I)">
		     , M_OUT_INCOME_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_TAX_TOTAL_I)">		     	
		     , M_TAX_TOTAL_I        = ${M_TAX_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_TAX_TOTAL_I)">
		     , M_TAX_TOTAL_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_ANNU_TOTAL_I)">
		     , R_ANNU_TOTAL_I       = ${R_ANNU_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_ANNU_TOTAL_I)">
		     , R_ANNU_TOTAL_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(OUT_INCOME_I)">
		     , OUT_INCOME_I         = ${OUT_INCOME_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(OUT_INCOME_I)">
		     , OUT_INCOME_I             = 0
		     </if>
		     
		     <!--, OUT_INCOME_I         = ${OUT_INCOME_I} -->
		     <if test="@foren.Ognl@isNotEmpty(R_TAX_TOTAL_I)">
		     , R_TAX_TOTAL_I        = ${R_TAX_TOTAL_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_TAX_TOTAL_I)">
		     , R_TAX_TOTAL_I             = 0
		     </if>
		     
		     , M_JOIN_DATE          = #{JOIN_DATE}
		     , M_CALCU_END_DATE     = #{JOIN_DATE}
		     , M_RETR_DATE          = #{JOIN_DATE}
		     , M_SUPP_DATE          = #{JOIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(M_LONG_MONTHS)">
		     , M_LONG_MONTHS        = ${M_LONG_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_LONG_MONTHS)">
		     , M_LONG_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_EXEP_MONTHS_BE13)">
		     , M_EXEP_MONTHS_BE13   = ${M_EXEP_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_EXEP_MONTHS_BE13)">
		     , M_EXEP_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_EXEP_MONTHS_AF13)">
		     , M_EXEP_MONTHS_AF13   = ${M_EXEP_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_EXEP_MONTHS_AF13)">
		     , M_EXEP_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_EXEP_MONTHS)">
		     , M_EXEP_MONTHS        = ${M_EXEP_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_EXEP_MONTHS)">
		     , M_EXEP_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_ADD_MONTHS_BE13)">
		     , M_ADD_MONTHS_BE13    = ${M_ADD_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_ADD_MONTHS_BE13)">
		     , M_ADD_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_ADD_MONTHS_AF13)">
		     , M_ADD_MONTHS_AF13    = ${M_ADD_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_ADD_MONTHS_AF13)">
		     , M_ADD_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_ADD_MONTHS)">
		     , M_ADD_MONTHS         = ${M_ADD_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_ADD_MONTHS)">
		     , M_ADD_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(M_LONG_YEARS)">
		     , M_LONG_YEARS         = ${M_LONG_YEARS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(M_LONG_YEARS)">
		     , M_LONG_YEARS             = 0
		     </if>
		     
		     , R_JOIN_DATE          = #{JOIN_DATE}
		     , R_CALCU_END_DATE     = #{JOIN_DATE}
		     , R_RETR_DATE          = #{JOIN_DATE}
		     , R_SUPP_DATE          = #{JOIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(R_LONG_MONTHS)">
		     , R_LONG_MONTHS        = ${R_LONG_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_LONG_MONTHS)">
		     , R_LONG_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_EXEP_MONTHS_BE13)">
		     , R_EXEP_MONTHS_BE13   = ${R_EXEP_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_EXEP_MONTHS_BE13)">
		     , R_EXEP_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_EXEP_MONTHS_AF13)">
		     , R_EXEP_MONTHS_AF13   = ${R_EXEP_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_EXEP_MONTHS_AF13)">
		     , R_EXEP_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_EXEP_MONTHS)">
		     , R_EXEP_MONTHS        = ${R_EXEP_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_EXEP_MONTHS)">
		     , R_EXEP_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_ADD_MONTHS_BE13)">
		     , R_ADD_MONTHS_BE13    = ${R_ADD_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_ADD_MONTHS_BE13)">
		     , R_ADD_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_ADD_MONTHS_AF13)">
		     , R_ADD_MONTHS_AF13    = ${R_ADD_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_ADD_MONTHS_AF13)">
		     , R_ADD_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_ADD_MONTHS)">
		     , R_ADD_MONTHS         = ${R_ADD_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_ADD_MONTHS)">
		     , R_ADD_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(R_LONG_YEARS)">
		     , R_LONG_YEARS         = ${R_LONG_YEARS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(R_LONG_YEARS)">
		     , R_LONG_YEARS             = 0
		     </if>
		     
		     , S_JOIN_DATE          = #{JOIN_DATE}
		     , S_CALCU_END_DATE     = #{JOIN_DATE}
		     , S_RETR_DATE          = #{JOIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(S_LONG_MONTHS)">
		     , S_LONG_MONTHS        = ${S_LONG_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(S_LONG_MONTHS)">
		     , S_LONG_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(S_EXEP_MONTHS)">
		     , S_EXEP_MONTHS        = ${S_EXEP_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(S_EXEP_MONTHS)">
		     , S_EXEP_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(S_ADD_MONTHS)">
		     , S_ADD_MONTHS         = ${S_ADD_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(S_ADD_MONTHS)">
		     , S_ADD_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(S_DUPLI_MONTHS)">
		     , S_DUPLI_MONTHS       = ${S_DUPLI_MONTHS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(S_DUPLI_MONTHS)">
		     , S_DUPLI_MONTHS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(S_LONG_YEARS)">
		     , S_LONG_YEARS         = ${S_LONG_YEARS}
		     </if>
		     <if test="@foren.Ognl@isEmpty(S_LONG_YEARS)">
		     , S_LONG_YEARS             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(CALCU_END_DATE_BE13)">
		     , CALCU_END_DATE_BE13  = ${CALCU_END_DATE_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(CALCU_END_DATE_BE13)">
		     , CALCU_END_DATE_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(RETR_DATE_BE13)">
		     , RETR_DATE_BE13       = ${RETR_DATE_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(RETR_DATE_BE13)">
		     , RETR_DATE_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_MONTHS_BE13)">
		     , LONG_MONTHS_BE13     = ${LONG_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_MONTHS_BE13)">
		     , LONG_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(EXEP_MONTHS_BE13)">
		     , EXEP_MONTHS_BE13     = ${EXEP_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(EXEP_MONTHS_BE13)">
		     , EXEP_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ADD_MONTHS_BE13)">
		     , ADD_MONTHS_BE13      = ${ADD_MONTHS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(ADD_MONTHS_BE13)">
		     , ADD_MONTHS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_YEARS_BE13)">
		     , LONG_YEARS_BE13      = ${LONG_YEARS_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_YEARS_BE13)">
		     , LONG_YEARS_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(CALCU_END_DATE_AF13)">
		     , CALCU_END_DATE_AF13  = ${CALCU_END_DATE_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(CALCU_END_DATE_AF13)">
		     , CALCU_END_DATE_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(RETR_DATE_AF13)">
		     , RETR_DATE_AF13       = ${RETR_DATE_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(RETR_DATE_AF13)">
		     , RETR_DATE_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_MONTHS_AF13)">
		     , LONG_MONTHS_AF13     = ${LONG_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_MONTHS_AF13)">
		     , LONG_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(EXEP_MONTHS_AF13)">
		     , EXEP_MONTHS_AF13     = ${EXEP_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(EXEP_MONTHS_AF13)">
		     , EXEP_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ADD_MONTHS_AF13)">
		     , ADD_MONTHS_AF13      = ${ADD_MONTHS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(ADD_MONTHS_AF13)">
		     , ADD_MONTHS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(LONG_YEARS_AF13)">
		     , LONG_YEARS_AF13      = ${LONG_YEARS_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LONG_YEARS_AF13)">
		     , LONG_YEARS_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(SPEC_DED_I)">
		     , SPEC_DED_I           = ${SPEC_DED_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(SPEC_DED_I)">
		     , SPEC_DED_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(INCOME_DED_I)">
		     , INCOME_DED_I         = ${INCOME_DED_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(INCOME_DED_I)">
		     , INCOME_DED_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(TAX_STD_I)">
		     , TAX_STD_I            = ${TAX_STD_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(TAX_STD_I)">
		     , TAX_STD_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DIVI_TAX_STD_BE13)">
		     , DIVI_TAX_STD_BE13    = ${DIVI_TAX_STD_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DIVI_TAX_STD_BE13)">
		     , DIVI_TAX_STD_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DIVI_TAX_STD_AF13)">
		     , DIVI_TAX_STD_AF13    = ${DIVI_TAX_STD_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DIVI_TAX_STD_AF13)">
		     , DIVI_TAX_STD_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVG_TAX_STD_BE13)">
		     , AVG_TAX_STD_BE13     = ${AVG_TAX_STD_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVG_TAX_STD_BE13)">
		     , AVG_TAX_STD_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVG_TAX_STD_AF13)">
		     , AVG_TAX_STD_AF13     = ${AVG_TAX_STD_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVG_TAX_STD_AF13)">
		     , AVG_TAX_STD_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVG_TAX_STD_I)">
		     , AVG_TAX_STD_I        = ${AVG_TAX_STD_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVG_TAX_STD_I)">
		     , AVG_TAX_STD_I             = 0
		     </if>
		     
		     <!--, AVG_TAX_STD_I        = ${AVG_TAX_STD_I}-->
		     <if test="@foren.Ognl@isNotEmpty(EX_TAX_STD_AF13)">
		     , EX_TAX_STD_AF13      = ${EX_TAX_STD_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(EX_TAX_STD_AF13)">
		     , EX_TAX_STD_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(EX_COMP_TAX_AF13)">
		     , EX_COMP_TAX_AF13     = ${EX_COMP_TAX_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(EX_COMP_TAX_AF13)">
		     , EX_COMP_TAX_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVR_COMP_TAX_BE13)">
		     , AVR_COMP_TAX_BE13    = ${AVR_COMP_TAX_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVR_COMP_TAX_BE13)">
		     , AVR_COMP_TAX_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVR_COMP_TAX_AF13)">
		     , AVR_COMP_TAX_AF13    = ${AVR_COMP_TAX_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVR_COMP_TAX_AF13)">
		     , AVR_COMP_TAX_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(AVR_COMP_TAX_I)">
		     , AVR_COMP_TAX_I       = 0
		     </if>
		     <if test="@foren.Ognl@isEmpty(AVR_COMP_TAX_I)">
		     , AVR_COMP_TAX_I             = 0
		     </if>
		     
		     <!--, AVR_COMP_TAX_I       = ${AVR_COMP_TAX_I}-->
		     <if test="@foren.Ognl@isNotEmpty(COMP_TAX_BE13)">
		     , COMP_TAX_BE13        = ${COMP_TAX_BE13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(COMP_TAX_BE13)">
		     , COMP_TAX_BE13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(COMP_TAX_AF13)">
		     , COMP_TAX_AF13        = ${COMP_TAX_AF13}
		     </if>
		     <if test="@foren.Ognl@isEmpty(COMP_TAX_AF13)">
		     , COMP_TAX_AF13             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(COMP_TAX_I)">
		     , COMP_TAX_I           = 0
		     </if>
		     <if test="@foren.Ognl@isEmpty(COMP_TAX_I)">
		     , COMP_TAX_I             = 0
		     </if>
		     
		     <!--, COMP_TAX_I           = ${COMP_TAX_I}-->
		     <if test="@foren.Ognl@isNotEmpty(PAY_END_TAX)">
		     , PAY_END_TAX          = ${PAY_END_TAX}
		     </if>
		     <if test="@foren.Ognl@isEmpty(PAY_END_TAX)">
		     , PAY_END_TAX             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(DEF_TAX_I)">
		     , DEF_TAX_I            = ${DEF_TAX_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(DEF_TAX_I)">
		     , DEF_TAX_I             = 0
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(IN_TAX_I)">
		     , IN_TAX_I             = ${IN_TAX_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(IN_TAX_I)">
		     , IN_TAX_I             = 0
		     </if>
		     <!--, IN_TAX_I             = ${IN_TAX_I}-->
		     
		     <if test="@foren.Ognl@isNotEmpty(LOCAL_TAX_I)">
		     , LOCAL_TAX_I          = ${LOCAL_TAX_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(LOCAL_TAX_I)">
		     , LOCAL_TAX_I             = 0
		     </if>
		     <!--, LOCAL_TAX_I          = ${LOCAL_TAX_I}-->
		     
		     <if test="@foren.Ognl@isNotEmpty(SP_TAX_I)">
		     , SP_TAX_I             = ${SP_TAX_I}
		     </if>
		     <if test="@foren.Ognl@isEmpty(SP_TAX_I)">
		     , SP_TAX_I             = 0
		     </if>
		     <!--, SP_TAX_I             = ${SP_TAX_I}-->
		     , INSERT_DB_USER       = #{S_USER_ID}
		     , INSERT_DB_TIME       = GETDATE()
		     , UPDATE_DB_USER       = #{S_USER_ID}
		     , UPDATE_DB_TIME       = GETDATE()
		     
		 WHERE COMP_CODE            = #{S_COMP_CODE}
		   AND RETR_DATE            = #{RETR_DATE}
		   AND RETR_TYPE            = #{RETR_TYPE}
		   AND PERSON_NUMB          = #{PERSON_NUMB}
		   
		   
		   DELETE FROM HRT610T
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND PERSON_NUMB = #{PERSON_NUMB}
   
   
   INSERT INTO HRT610T
	     ( COMP_CODE
	     , PERSON_NUMB
	     , COMP_NAME
	     , COMP_NUM
	     , BANK_ACCOUNT
	     , DEPOSIT_DATE
	     , TRANS_RETR_PAY
	     , DEFER_TAX_I
	     , DEFER_SP_TAX_I
	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     ) 
	VALUES
	     ( #{S_COMP_CODE}
	     , #{PERSON_NUMB}
	     , #{COMP_NAME}
	     , #{COMP_NUM}
	     , uniLITE.fnCipherEncrypt(#{BANK_ACCOUNT}, '')
	     , #{DEPOSIT_DATE}
	     , ${TRANS_RETR_PAY}
	     , ${DEFER_TAX_I}
	     , 0
	     , #{S_USER_ID}
	     , GETDATE()
	     , #{S_USER_ID}
	     , GETDATE()
	     )
	     
	     COMMIT TRANSACTION
	     END TRY
		
		BEGIN CATCH
			IF (XACT_STATE()) = -1
			BEGIN	
				ROLLBACK TRANSACTION
			END
		END CATCH
		
		SET XACT_ABORT OFF
	     
	     
	</update>
	
	<select id="hrt502ukrServiceImpl.fnSuppTotI" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.fnSuppTotI */
		DECLARE @ERROR_CODE nvarchar(10),	@return_value numeric(03)
						
		EXEC @return_value = SP_HRT_CHANGE_RETIRE_ST_SUPP_TOTAL 
					  #{S_COMP_CODE}
					, #{PERSON_NUMB} 
					, #{RETR_DATE}
					, #{RETR_TYPE}
					, #{TAX_CALCU}
					, #{R_CALCU_END_DATE}
				<if test="@foren.Ognl@isNotEmpty(S_LONG_YEARS)">
				     , ${S_LONG_YEARS}
				     </if>
			     <if test="@foren.Ognl@isEmpty(S_LONG_YEARS)">
				     , 0
			     </if>
				     
			     <if test="@foren.Ognl@isNotEmpty(LONG_YEARS_BE13)">
			     	, ${LONG_YEARS_BE13}
			     </if>
			     <if test="@foren.Ognl@isEmpty(LONG_YEARS_BE13)">
			    	 , 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(LONG_YEARS_AF13)">
			     	, ${LONG_YEARS_AF13}
			     </if>
			     <if test="@foren.Ognl@isEmpty(LONG_YEARS_AF13)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(PAY_END_TAX)">
			     	, ${PAY_END_TAX}
			     </if>
			     <if test="@foren.Ognl@isEmpty(PAY_END_TAX)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(R_ANNU_TOTAL_I)">
			     	, ${R_ANNU_TOTAL_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(R_ANNU_TOTAL_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(OUT_INCOME_I)">
			     	, ${OUT_INCOME_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(OUT_INCOME_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(M_ANNU_TOTAL_I)">
			     	, ${M_ANNU_TOTAL_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(M_ANNU_TOTAL_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(M_OUT_INCOME_I)">
			     	, ${M_OUT_INCOME_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(M_OUT_INCOME_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(DED_IN_TAX_ADD_I)">
			     	, ${DED_IN_TAX_ADD_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(DED_IN_TAX_ADD_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(DED_IN_LOCAL_ADD_I)">
			     	, ${DED_IN_LOCAL_ADD_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(DED_IN_LOCAL_ADD_I)">
			     	, 0
			     </if>
			     
			     <if test="@foren.Ognl@isNotEmpty(DED_ETC_I)">
			     	, ${DED_ETC_I}
			     </if>
			     <if test="@foren.Ognl@isEmpty(DED_ETC_I)">
			     	, 0
			     </if>
					
					, #{S_USER_ID}
					, @ERROR_CODE OUTPUT
		SELECT	@ERROR_CODE as N'ERROR_CODE', @return_value as 'RETURN_VALUE', * FROM TEMPRETIRE
	</select>
	
	<select id="hrt502ukrServiceImpl.fnDateChanged" parameterType="rMap" resultType="rMap">
		DECLARE @ERROR_CODE nvarchar(10),	@return_value numeric(03)
		
		EXEC SP_HRT_CHANGE_RETIRE_ST_WORK_DATE 
			#{S_COMP_CODE}
			, #{M_CALCU_END_DATE}
			, #{M_RETR_DATE}
			, ${M_EXEP_MONTHS_BE13}
			, ${M_EXEP_MONTHS_AF13}
			, ${M_ADD_MONTHS_BE13}
			, ${M_ADD_MONTHS_AF13}
			, #{R_CALCU_END_DATE}
			, #{R_RETR_DATE}
			, ${R_EXEP_MONTHS_BE13}
			, ${R_EXEP_MONTHS_AF13}
			, ${R_ADD_MONTHS_BE13}
			, ${R_ADD_MONTHS_AF13}
			, #{S_USER_ID}
			, @ERROR_CODE OUTPUT
	</select>
	
	<select id="hrt502ukrServiceImpl.selectFormDataResult" parameterType="rMap" resultType="rMap">
		SELECT * FROM TEMPRETIRE
	</select>	
</mapper>