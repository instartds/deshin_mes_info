<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hbo800rkrServiceImpl">
	<select id="hbo800rkrServiceImpl.fnstand100init" parameterType="Map" resultType="rMap">	
		--hum920skr.Chum920skr[fnstand100init] QUERY 03
		SELECT  ISNULL(REF_CODE2, '') AS REF_CODE2
		FROM    BSA100T WITH (NOLOCK)
		WHERE   COMP_CODE   = #{S_COMP_CODE}
		AND     MAIN_CODE   = N'H175'
		AND     SUB_CODE    = N'10'
		AND     REF_CODE1   = N'Y'
	</select>

	<select id="hbo800rkrServiceImpl.getCostPoolList" parameterType="Map" resultType="comboItem">	
		--UBsaExKrv.CBsaExSKr[fnRecordList] Query19
		SELECT  COST_POOL_CODE AS 'value'
		      , COST_POOL_NAME AS 'text' 
		FROM    CBM600T WITH (NOLOCK)
		WHERE   COMP_CODE   =  #{S_COMP_CODE}
		ORDER BY COST_POOL_CODE  
	</select>



	<select id="hbo800rkrServiceImpl.createTable" parameterType="Map" statementType="STATEMENT">	
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('HAT200PH_MASTER')) DROP TABLE HAT200PH_MASTER
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('HPA900PH_MASTER')) DROP TABLE HPA900PH_MASTER
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('HBO800PH_MASTER')) DROP TABLE HBO800PH_MASTER
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Create HAT200PH_MASTER
		   CREATE TABLE HAT200PH_MASTER
		   (                                                    
		       SEQ              NUMERIC(3)      NOT NULL,       
		       SUB_CODE         NVARCHAR(50)    NULL,           
		       CODE_NAME        NVARCHAR(50)    NULL            
		                                                        
		       CONSTRAINT Hat200PH_MASTER_IDX00 PRIMARY KEY CLUSTERED  
		       (                                                
		               SEQ                                      
		       )                                                
		   )   
	   --UHrpt01Krv.CHpa900SKr [fnHpa900PB] Create HPA900PH_MASTER
		   CREATE TABLE HPA900PH_MASTER
		   (                                                    
		       SEQ              NUMERIC(3)      NOT NULL,       
		       SUB_CODE         NVARCHAR(50)    NULL,           
		       CODE_NAME        NVARCHAR(50)    NULL            
		                                                        
		       CONSTRAINT Hpa900PH_MASTER_IDX00 PRIMARY KEY CLUSTERED  
		       (                                                
		               SEQ                                      
		       )                                                
		   )     
		   --UHrpt01Krv.CHpa900SKr [fnHpa900PB] Create HBO800PH_MASTER
		   CREATE TABLE HBO800PH_MASTER
		   (                                                    
		       W_SEQ            NUMERIC(3)      NOT NULL,       
		       WAGES_CODE       NVARCHAR(50)    NULL,           
		       WAGES_NAME       NVARCHAR(50)    NULL,           
		       WAGES_SEQ        NUMERIC(2)      NULL            
		                                                        
		       CONSTRAINT HBO800PH_MASTER_IDX00 PRIMARY KEY CLUSTERED  
		       (                                                
		               W_SEQ                                    
		       )                                                
		   )      
	</select>
	<select id="hbo800rkrServiceImpl.selectDutyCode" parameterType="Map" resultType="rMap">	
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Select DutyCode 
		SELECT SUB_CODE                
		     , CODE_NAME               
		  FROM BSA100T                 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H033'      
		   AND USE_YN    = 'Y'         
		   AND SUB_CODE != '$'         
		 ORDER BY REF_CODE2, SUB_CODE  
	</select>
	<insert id="hbo800rkrServiceImpl.insertHAT200PH" parameterType="Map">	
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Insert HAT200PH_MASTER
		INSERT INTO HAT200PH_MASTER
		          ( SEQ                                 
		          , SUB_CODE                            
		          , CODE_NAME )                         
		   VALUES (#{TEMP_I}                       
		          , #{SUB_CODE}  
		          , #{CODE_NAME})   
		          
	</insert>
	<select id="hbo800rkrServiceImpl.selectBonusCode" parameterType="Map" resultType="rMap">	
	--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Select Bonus Code                            
		SELECT A.DED_CODE AS SUB_CODE                               
		     , B.CODE_NAME                                          
		  FROM HPA400T A INNER JOIN BSA100T B                         
		                    ON A.COMP_CODE = B.COMP_CODE
		                   AND A.DED_CODE = B.SUB_CODE           
		 WHERE B.COMP_CODE  = #{S_COMP_CODE}
		   AND A.PAY_YYYYMM = #{PAY_YYYYMM}   
		   AND A.SUPP_TYPE  = #{PROV_TYPE}                     
		   AND B.MAIN_CODE  = 'H034'                                  
		   AND B.SUB_CODE  != '$'                                     
		 GROUP BY A.DED_CODE, B.CODE_NAME, REF_CODE2                
		 ORDER BY REF_CODE2,  SUB_CODE  
	</select>       
	<select id="hbo800rkrServiceImpl.selectH034" parameterType="Map" resultType="rMap">	 
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Select H034 
		SELECT SUB_CODE            
		     , CODE_NAME           
		  FROM BSA100T             
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H034'  
		   AND SUB_CODE != '$'     
		   AND USE_YN    = 'Y'     
		 ORDER BY REF_CODE2, SUB_CODE
	 </select>
	<insert id="hbo800rkrServiceImpl.insertHPA900" parameterType="Map">	 
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] Insert Hpa900PH(Bonus)_MASTER
			INSERT INTO HPA900PH_MASTER
			          ( SEQ                                  
			          , SUB_CODE                             
			          , CODE_NAME )                          
			   VALUES ( #{TEMP_I}                       
			          , #{SUB_CODE}  
			          , #{CODE_NAME})       
	</insert>
	<select id="hbo800rkrServiceImpl.selectWagesCode" parameterType="Map" resultType="rMap">	 
	       --UHrpt01Krv.CHpa900SKr [fnHpa900PB] Select BonusCode 
			SELECT WAGES_CODE               
			     , WAGES_NAME               
			     , WAGES_SEQ                
			  FROM HBS300T                  
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND CODE_TYPE = '1'          
			   AND USE_YN    = 'Y'          
			 ORDER BY WAGES_SEQ, WAGES_CODE 
	</select>
	<insert id="hbo800rkrServiceImpl.insertHBO800" parameterType="Map">
	--UHrpt01Krv.CHpa900SKr [fnHpa900PB] INSERT HBO800PH_MASTER (Bonus) 
		INSERT INTO HBO800PH_MASTER
		          ( W_SEQ                                    
		          , WAGES_CODE                               
		          , WAGES_NAME                               
		          , WAGES_SEQ )                              
		   VALUES (  #{TEMP_I}                              
		          , #{WAGES_CODE}     
		          , #{WAGES_NAME}     
		          , #{WAGES_SEQ} )
	</insert>
	<select id="hbo800rkrServiceImpl.selectSubData" parameterType="Map" resultType="rMap">
		--UHrpt01Krv.CHpa900SKr [fnHpa900PB] strGubun B                                                        
			SELECT MAX(CASE WHEN A.W_SEQ = 1  THEN   A.WAGES_NAME   ELSE '' END) AS '1'      
			     , MAX(CASE WHEN A.W_SEQ = 2  THEN   A.WAGES_NAME   ELSE '' END) AS '2'      
			     , MAX(CASE WHEN A.W_SEQ = 3  THEN   A.WAGES_NAME   ELSE '' END) AS '3'      
			     , MAX(CASE WHEN A.W_SEQ &gt;= 4                                                 
			                     THEN 'z' + uniLITE.fnGetTxt('H0042')                        
			                     ELSE (CASE WHEN A.W_SEQ = 4 THEN A.WAGES_NAME ELSE '' END)  
			            END) AS '4'                                                          
			     , MAX(CASE WHEN B.SEQ = 1    THEN   B.CODE_NAME    ELSE '' END) AS '5'      
			     , MAX(CASE WHEN B.SEQ = 2    THEN   B.CODE_NAME    ELSE '' END) AS '6'      
			     , MAX(CASE WHEN B.SEQ = 3    THEN   B.CODE_NAME    ELSE '' END) AS '7'      
			     , MAX(CASE WHEN B.SEQ = 4    THEN   B.CODE_NAME    ELSE '' END) AS '8'      
			     , MAX(CASE WHEN B.SEQ = 5    THEN   B.CODE_NAME    ELSE '' END) AS '8_1'    
			     , MAX(CASE WHEN B.SEQ = 6    THEN   B.CODE_NAME    ELSE '' END) AS '8_2'    
			     , MAX(CASE WHEN B.SEQ = 7    THEN   B.CODE_NAME    ELSE '' END) AS '8_3'    
			     , MAX(CASE WHEN B.SEQ &gt;= 8                                                   
			                     THEN 'z' + uniLITE.fnGetTxt('H0044')                        
			                     ELSE (CASE WHEN B.SEQ = 8 THEN B.CODE_NAME ELSE '' END)     
			            END) AS '9'                                                          
			  FROM HBO800PH_MASTER A, HPA900PH_MASTER B                                                    
	</select>
	<select id="hbo800rkrServiceImpl.selectMainData" parameterType="Map" resultType="rMap">
		<if test = 'strType == "1" or strType == "3"'>
			--UHrpt01Krv.CHpa900SKr [fnHbo800p] strtype 1 
			SELECT M1.PAY_YYYYMM     , M1.SUPP_TYPE     , M1.POST_CODE
			     , M1.DIV_CODE       , M1.DEPT_CODE     , M1.DEPT_NAME
			     , M1.DEPT_CODE      , M1.PAY_CODE      , M1.PERSON_NUMB
			     , M0.NAME           
			     , M0.JOIN_DATE
			     , M0.RETR_DATE
			     , (SELECT DIV_NAME 
			          FROM BOR120T 
			         WHERE COMP_CODE = #{S_COMP_CODE}
			           AND DIV_CODE = M1.DIV_CODE) AS DIV_NAME
			     , (SELECT CODE_NAME 
			          FROM BSA100T 
			         WHERE COMP_CODE = #{S_COMP_CODE}
			           AND MAIN_CODE = 'H005' 
			           AND SUB_CODE  = M1.POST_CODE) AS POST_NM
			     , M0.SPOUSE                 , M0.SUPP_AGED_NUM          , M0.DEFORM_NUM
			     , M0.AGED_NUM            
			        
				 , CASE WHEN ISNULL(M1.BONUS_RATE, 0) = 0
				        THEN 100
						ELSE M1.BONUS_RATE
					END AS BONUS_RATE
				 , M1.MINUS_RATE
			     , M1.PLUS_RATE              , M1.SUPP_RATE              
				 , CASE WHEN ISNULL(M1.BONUS_STD_I, 0) = 0
				        THEN ISNULL(M1.BONUS_TOTAL_I, 0)
						ELSE ISNULL(M1.BONUS_STD_I, 0)
					END AS BONUS_STD_I	
					
				 , M1.BONUS_TOTAL_I			     
			     , M1.DED_TOTAL_I            , M1.REAL_AMOUNT_I
			     , ISNULL(M2.S1,0) AS S1     , ISNULL(M2.S2,0) AS S2     , ISNULL(M2.S3,0) AS S3
			     , ISNULL(M2.S4,0) AS S4     , ISNULL(M3.G4,0) AS G4     , ISNULL(M3.G5,0) AS G5
			     , ISNULL(M3.G6,0) AS G6     , ISNULL(M3.G7,0) AS G7
			     , ISNULL(M3.G7_1,0) AS G7_1
			     , ISNULL(M3.G7_2,0) AS G7_2
			     , ISNULL(M3.G7_3,0) AS G7_3
			     , ISNULL(M3.G8,0) AS G8
			     , HM2.HH1         , HM2.HH2        , HM2.HH3
			     , HM2.HH4         , HM3.HH5        , HM3.HH6
			     , HM3.HH7         , HM3.HH8        , HM3.HH8_1 
			     , HM3.HH8_2       , HM3.HH8_3      , HM3.HH9
			     , M0.CHILD_20_NUM 
			     <if test="DOC_KIND == 4">
			     	 , unilite.fnCipherDecrypt(M0.BANK_ACCOUNT1, 'RB') BANK_ACCOUNT1
			     	  , ISNULL((SELECT CUSTOM_NAME
			     	  FROM BCM100T
			     	   WHERE COMP_CODE = #{S_COMP_CODE}
			     	   AND CUSTOM_TYPE = '4' 
			     	   AND CUSTOM_CODE = M0.BANK_CODE1),'') AS BANK_NAME
			     </if>
			  FROM            HUM100T M0 WITH (NOLOCK) 
			       INNER JOIN HPA600T M1 WITH (NOLOCK) ON M1.COMP_CODE    = M0.COMP_CODE
			                                          AND M1.PERSON_NUMB  = M0.PERSON_NUMB
			       LEFT  JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE   = M0.COMP_CODE
			                                          AND B1.MAIN_CODE   = 'H024'
			                                          AND B1.SUB_CODE    = M0.EMPLOY_TYPE
			       LEFT  JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE   = M0.COMP_CODE
			                                          AND B2.MAIN_CODE   = 'H181'
			                                          AND B2.SUB_CODE    = ISNULL(B1.REF_CODE1, '')
			       INNER JOIN (SELECT T1.PERSON_NUMB    
			                        , MAX(CASE WHEN T4.C1!= '' THEN T4.C1 ELSE '' END) AS 'HH1'    
			                        , MAX(CASE WHEN T4.C2!= '' THEN T4.C2 ELSE '' END) AS 'HH2'    
			                        , MAX(CASE WHEN T4.C3!= '' THEN T4.C3 ELSE '' END) AS 'HH3'    
			                        , MAX(CASE WHEN T4.C4!= '' THEN T4.C4 ELSE '' END) AS 'HH4'     
			                        , T1.COMP_CODE
			                     FROM (SELECT MAX(CASE WHEN W_SEQ = 1 THEN WAGES_CODE ELSE '' END) AS 'C1' 
			                                , MAX(CASE WHEN W_SEQ = 2 THEN WAGES_CODE ELSE '' END) AS 'C2' 
			                                , MAX(CASE WHEN W_SEQ = 3 THEN WAGES_CODE ELSE '' END) AS 'C3' 
			                                , MAX(CASE WHEN W_SEQ &gt;= 4 
			                                                THEN 'zzz' 
			                                                ELSE (CASE WHEN W_SEQ = 4 THEN WAGES_CODE ELSE '' END) 
			                                       END) AS 'C4'  
			                             FROM HBO800PH_MASTER) T4
			                                , HPA600T T1 WITH (NOLOCK) 
			                            WHERE T1.COMP_CODE  = #{S_COMP_CODE}
			                              AND T1.PAY_YYYYMM = #{PAY_YYYYMM}
			                              AND T1.SUPP_TYPE  = #{PROV_TYPE} 
			                            GROUP BY T1.PERSON_NUMB, T1.COMP_CODE) HM2 ON HM2.COMP_CODE   = M1.COMP_CODE
			                                                                      AND HM2.PERSON_NUMB = M1.PERSON_NUMB
			       INNER JOIN (SELECT T1.PERSON_NUMB    
			                        , MAX(CASE WHEN T4.C4!= ''   THEN T4.C4   ELSE '' END) AS 'HH5'    
			                        , MAX(CASE WHEN T4.C5!= ''   THEN T4.C5   ELSE '' END) AS 'HH6'    
			                        , MAX(CASE WHEN T4.C6!= ''   THEN T4.C6   ELSE '' END) AS 'HH7'    
			                        , MAX(CASE WHEN T4.C7!= ''   THEN T4.C7   ELSE '' END) AS 'HH8'    
			                        , MAX(CASE WHEN T4.C7_1!= '' THEN T4.C7_1 ELSE '' END) AS 'HH8_1'  
			                        , MAX(CASE WHEN T4.C7_2!= '' THEN T4.C7_2 ELSE '' END) AS 'HH8_2'  
			                        , MAX(CASE WHEN T4.C7_3!= '' THEN T4.C7_3 ELSE '' END) AS 'HH8_3'  
			                        , MAX(CASE WHEN T4.C8!= ''   THEN T4.C8   ELSE '' END) AS 'HH9' 
			                        , T1.COMP_CODE
			                     FROM (SELECT MAX(CASE WHEN A.SEQ = 1 THEN A.SUB_CODE ELSE '' END) AS 'C4'  
			                                , MAX(CASE WHEN A.SEQ = 2 THEN A.SUB_CODE ELSE '' END) AS 'C5' 
			                                , MAX(CASE WHEN A.SEQ = 3 THEN A.SUB_CODE ELSE '' END) AS 'C6' 
			                                , MAX(CASE WHEN A.SEQ = 4 THEN A.SUB_CODE ELSE '' END) AS 'C7' 
			                                , MAX(CASE WHEN A.SEQ = 5 THEN A.SUB_CODE ELSE '' END) AS 'C7_1'
			                                , MAX(CASE WHEN A.SEQ = 6 THEN A.SUB_CODE ELSE '' END) AS 'C7_2'
			                                , MAX(CASE WHEN A.SEQ = 7 THEN A.SUB_CODE ELSE '' END) AS 'C7_3'
			                                , MAX(CASE WHEN A.SEQ &gt;= 8 
			                                                THEN 'zz' 
			                                                ELSE (CASE WHEN A.SEQ = 8 THEN A.SUB_CODE ELSE '' END) 
			                                       END) AS 'C8'    
			                             FROM HPA900PH_MASTER A ) T4
			                                , HPA600T T1 WITH (NOLOCK) 
			                            WHERE T1.COMP_CODE  = #{S_COMP_CODE}
			                              AND T1.PAY_YYYYMM = #{PAY_YYYYMM} 
			                              AND T1.SUPP_TYPE  = #{PROV_TYPE} 
			                            GROUP BY T1.PERSON_NUMB, T1.COMP_CODE) HM3 ON HM3.COMP_CODE   = M1.COMP_CODE
			                                                                      AND HM3.PERSON_NUMB = M1.PERSON_NUMB
			       LEFT  JOIN (SELECT T1.PERSON_NUMB  
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C1 THEN T1.AMOUNT_I ELSE 0 END) AS 'S1'   
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C2 THEN T1.AMOUNT_I ELSE 0 END) AS 'S2'  
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C3 THEN T1.AMOUNT_I ELSE 0 END) AS 'S3'  
			                        , SUM(CASE WHEN T4.C4 = 'zzz' 
			                                        THEN ISNULL(T5.ETC_AMT,0)  
			                                        ELSE (CASE WHEN T1.WAGES_CODE = T4.C4 THEN T1.AMOUNT_I ELSE 0 END) 
			                               END) AS 'S4'  
			                        , T1.COMP_CODE
			                     FROM HPA300T T1 WITH (NOLOCK) 
			                          LEFT JOIN (SELECT PERSON_NUMB
			                                          , SUM(AMOUNT_I) AS ETC_AMT 
			                                          , COMP_CODE 
			                                       FROM HPA300T WITH (NOLOCK)  
			                                      WHERE COMP_CODE  = #{S_COMP_CODE}
			                                        AND PAY_YYYYMM = #{PAY_YYYYMM}  
			                                        AND SUPP_TYPE  = #{PROV_TYPE}   
			                                        AND WAGES_CODE IN (SELECT WAGES_CODE 
			                                                             FROM HBO800PH_MASTER
			                                                            WHERE W_SEQ &gt;= 4 )  
			                                      GROUP BY PERSON_NUMB, COMP_CODE) T5 ON T5.COMP_CODE   = T1.COMP_CODE
			                                                                         AND T5.PERSON_NUMB = T1.PERSON_NUMB
			                        , (SELECT MAX(CASE WHEN W_SEQ = 1 THEN WAGES_CODE ELSE '' END) 'C1'  
			                                , MAX(CASE WHEN W_SEQ = 2 THEN WAGES_CODE ELSE '' END) 'C2'  
			                                , MAX(CASE WHEN W_SEQ = 3 THEN WAGES_CODE ELSE '' END) 'C3'  
			                                , MAX(CASE WHEN W_SEQ &gt;= 4 
			                                                THEN 'zzz' 
			                                                ELSE (CASE WHEN W_SEQ = 4 THEN WAGES_CODE ELSE '' END) 
			                                       END) AS 'C4'  
			                             FROM HBO800PH_MASTER) T4
			                    WHERE T1.COMP_CODE  = #{S_COMP_CODE}
			                      AND T1.PAY_YYYYMM = #{PAY_YYYYMM} 
			                      AND T1.SUPP_TYPE  = #{PROV_TYPE} 
			                    GROUP BY T1.PERSON_NUMB, T1.COMP_CODE ) M2 ON M2.COMP_CODE   = M1.COMP_CODE
			                                                              AND M2.PERSON_NUMB = M1.PERSON_NUMB
			       LEFT  JOIN (SELECT T1.PERSON_NUMB
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C4   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G4' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C5   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G5' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C6   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G6' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_1 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_1' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_2 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_2' 
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_3 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_3' 
			                        , MAX(CASE WHEN T4.C8 = 'zz' 
			                                        THEN ISNULL(T5.ETC_AMT,0) 
			                                        ELSE (CASE WHEN T1.DED_CODE = T4.C8 THEN T1.DED_AMOUNT_I ELSE 0 END) 
			                               END ) AS 'G8' 
			                        , T1.COMP_CODE
			                     FROM HPA400T T1 WITH (NOLOCK) 
			                          LEFT JOIN (SELECT PERSON_NUMB
			                                          , SUM(DED_AMOUNT_I) AS ETC_AMT 
			                                          , COMP_CODE 
			                                       FROM HPA400T WITH (NOLOCK) 
			                                      WHERE COMP_CODE  = #{S_COMP_CODE}
			                                        AND PAY_YYYYMM = #{PAY_YYYYMM} 
			                                        AND SUPP_TYPE  = #{PROV_TYPE}  
			                                        AND DED_CODE IN (SELECT SUB_CODE FROM HPA900PH_MASTER WHERE SEQ &gt; 7 ) 
			                                      GROUP BY PERSON_NUMB, COMP_CODE) T5 ON T5.COMP_CODE   = T1.COMP_CODE
			                                                                         AND T5.PERSON_NUMB = T1.PERSON_NUMB 
			                        , (SELECT MAX(CASE WHEN A.SEQ = 1 THEN A.SUB_CODE ELSE '' END) AS 'C4'  
			                                , MAX(CASE WHEN A.SEQ = 2 THEN A.SUB_CODE ELSE '' END) AS 'C5'  
			                                , MAX(CASE WHEN A.SEQ = 3 THEN A.SUB_CODE ELSE '' END) AS 'C6'  
			                                , MAX(CASE WHEN A.SEQ = 4 THEN A.SUB_CODE ELSE '' END) AS 'C7'  
			                                , MAX(CASE WHEN A.SEQ = 5 THEN A.SUB_CODE ELSE '' END) AS 'C7_1'  
			                                , MAX(CASE WHEN A.SEQ = 6 THEN A.SUB_CODE ELSE '' END) AS 'C7_2'  
			                                , MAX(CASE WHEN A.SEQ = 7 THEN A.SUB_CODE ELSE '' END) AS 'C7_3'  
			                                , MAX(CASE WHEN A.SEQ &gt;= 8 
			                                                THEN 'zz' 
			                                                ELSE (CASE WHEN A.SEQ = 8 THEN A.SUB_CODE ELSE '' END) 
			                                       END) AS 'C8' 
			                             FROM HPA900PH_MASTER A ) T4
			                    WHERE T1.COMP_CODE    = #{S_COMP_CODE}
			                      AND T1.PAY_YYYYMM   = #{PAY_YYYYMM}
			                      AND T1.SUPP_TYPE    = #{PROV_TYPE}  
			                    GROUP BY T1.PERSON_NUMB, T1.COMP_CODE) M3 ON M3.COMP_CODE   = M1.COMP_CODE
			                                                             AND M3.PERSON_NUMB = M1.PERSON_NUMB
			 WHERE M1.COMP_CODE    = #{S_COMP_CODE}
			   AND uniLITE.fnCheckCompDivAuth(M1.COMP_CODE, M1.DIV_CODE, #{S_USER_ID}) = 'Y'
			   AND M1.PAY_YYYYMM   = #{PAY_YYYYMM}
			   AND M1.SUPP_TYPE    = #{PROV_TYPE}  
		 </if >
		<if test='strType == "2"'>
			--UHrpt01Krv.CHpa900SKr [fnHbo800p] strtype 2              
			SELECT COUNT(M1.PERSON_NUMB) AS PER_CNT 
			     , M1.DEPT_CODE                     
			     , MAX(M1.DEPT_NAME) AS DEPT_NAME   
			     , '' AS DIV_NAME
			     --20200807 수정:상여기준금액이 없으면 상여지급금액 출력하도록 변경
			     --, SUM(M1.BONUS_STD_I) AS BONUS_STD_I
			     , CASE WHEN SUM(ISNULL(M1.BONUS_STD_I, 0)) = 0
			            THEN SUM(ISNULL(M1.BONUS_TOTAL_I, 0))
			            ELSE SUM(ISNULL(M1.BONUS_STD_I, 0))
			       END AS BONUS_STD_I
			     , SUM(M1.BONUS_TOTAL_I) AS BONUS_TOTAL_I 
			     , SUM(M1.DED_TOTAL_I) AS DED_TOTAL_I 
			     , SUM(M1.REAL_AMOUNT_I) AS REAL_AMOUNT_I
			     , SUM(ISNULL(M2.S1,0)) AS S1
			     , SUM(ISNULL(M2.S2,0)) AS S2
			     , SUM(ISNULL(M2.S3,0)) AS S3
			     , SUM(ISNULL(M2.S4,0)) AS S4
			     , SUM(ISNULL(M3.G4,0)) AS G4
			     , SUM(ISNULL(M3.G5,0)) AS G5
			     , SUM(ISNULL(M3.G6,0)) AS G6
			     , SUM(ISNULL(M3.G7,0)) AS G7
			     , SUM(ISNULL(M3.G7_1,0)) AS G7_1 
			     , SUM(ISNULL(M3.G7_2,0)) AS G7_2 
			     , SUM(ISNULL(M3.G7_3,0)) AS G7_3 
			     , SUM(ISNULL(M3.G8,0)) AS G8
			     , MAX(HM2.HH1) AS HH1       , MAX(HM2.HH2) AS HH2      , MAX(HM2.HH3) AS HH3
			     , MAX(HM2.HH4) AS HH4       , MAX(HM3.HH5) AS HH5      , MAX(HM3.HH6) AS HH6
			     , MAX(HM3.HH7) AS HH7       , MAX(HM3.HH8) AS HH8      , MAX(HM3.HH8_1) AS HH8_1
			     , MAX(HM3.HH8_2) AS HH8_2   , MAX(HM3.HH8_3) AS HH8_3  , MAX(HM3.HH9) AS HH9 
			  FROM            HUM100T M0 WITH (NOLOCK) 
			       INNER JOIN HPA600T M1 WITH (NOLOCK) ON M1.COMP_CODE    = M0.COMP_CODE
			                                          AND M1.PERSON_NUMB  = M0.PERSON_NUMB
			       LEFT  JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE   = M0.COMP_CODE
			                                          AND B1.MAIN_CODE   = 'H024'
			                                          AND B1.SUB_CODE    = M0.EMPLOY_TYPE
			       LEFT  JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE   = M0.COMP_CODE
			                                          AND B2.MAIN_CODE   = 'H181'
			                                          AND B2.SUB_CODE    = ISNULL(B1.REF_CODE1, '')
			       INNER JOIN (SELECT T1.PERSON_NUMB
			                        , MAX(CASE WHEN T4.C1!= '' THEN T4.C1 ELSE '' END) AS 'HH1'
			                        , MAX(CASE WHEN T4.C2!= '' THEN T4.C2 ELSE '' END) AS 'HH2'
			                        , MAX(CASE WHEN T4.C3!= '' THEN T4.C3 ELSE '' END) AS 'HH3'
			                        , MAX(CASE WHEN T4.C4!= '' THEN T4.C4 ELSE '' END) AS 'HH4'
			                        , T1.COMP_CODE
			                     FROM (SELECT MAX(CASE WHEN W_SEQ = 1 THEN WAGES_CODE ELSE '' END) AS 'C1'
			                                , MAX(CASE WHEN W_SEQ = 2 THEN WAGES_CODE ELSE '' END) AS 'C2'
			                                , MAX(CASE WHEN W_SEQ = 3 THEN WAGES_CODE ELSE '' END) AS 'C3'
			                                , MAX(CASE WHEN W_SEQ &gt;= 4 
			                                                THEN 'zzz' 
			                                                ELSE (CASE WHEN W_SEQ = 4 THEN WAGES_CODE ELSE '' END)
			                                       END) AS 'C4'
			                             FROM HBO800PH_MASTER) T4
			                        , HPA600T T1 WITH (NOLOCK)
			                    WHERE T1.COMP_CODE  = #{S_COMP_CODE}
			                      AND T1.PAY_YYYYMM = #{PAY_YYYYMM} 
			                      AND T1.SUPP_TYPE  = #{PROV_TYPE}  
			                    GROUP BY T1.PERSON_NUMB, T1.COMP_CODE ) HM2 ON HM2.COMP_CODE   = M1.COMP_CODE
			                                                               AND HM2.PERSON_NUMB = M1.PERSON_NUMB
			       INNER JOIN (SELECT T1.PERSON_NUMB
			                        , MAX(CASE WHEN T4.C4!= ''   THEN T4.C4    ELSE '' END) AS 'HH5'
			                        , MAX(CASE WHEN T4.C5!= ''   THEN T4.C5    ELSE '' END) AS 'HH6'
			                        , MAX(CASE WHEN T4.C6!= ''   THEN T4.C6    ELSE '' END) AS 'HH7'
			                        , MAX(CASE WHEN T4.C7!= ''   THEN T4.C7    ELSE '' END) AS 'HH8'
			                        , MAX(CASE WHEN T4.C7_1!= '' THEN T4.C7_1  ELSE '' END) AS 'HH8_1'
			                        , MAX(CASE WHEN T4.C7_2!= '' THEN T4.C7_2  ELSE '' END) AS 'HH8_2'
			                        , MAX(CASE WHEN T4.C7_3!= '' THEN T4.C7_3  ELSE '' END) AS 'HH8_3'
			                        , MAX(CASE WHEN T4.C8!= ''   THEN T4.C8    ELSE '' END) AS 'HH9'
			                        , T1.COMP_CODE
			                     FROM (SELECT MAX(CASE WHEN A.SEQ = 1 THEN A.SUB_CODE ELSE '' END) AS 'C4' 
			                                , MAX(CASE WHEN A.SEQ = 2 THEN A.SUB_CODE ELSE '' END) AS 'C5' 
			                                , MAX(CASE WHEN A.SEQ = 3 THEN A.SUB_CODE ELSE '' END) AS 'C6' 
			                                , MAX(CASE WHEN A.SEQ = 4 THEN A.SUB_CODE ELSE '' END) AS 'C7' 
			                                , MAX(CASE WHEN A.SEQ = 5 THEN A.SUB_CODE ELSE '' END) AS 'C7_1' 
			                                , MAX(CASE WHEN A.SEQ = 6 THEN A.SUB_CODE ELSE '' END) AS 'C7_2' 
			                                , MAX(CASE WHEN A.SEQ = 7 THEN A.SUB_CODE ELSE '' END) AS 'C7_3' 
			                                , MAX(CASE WHEN A.SEQ &gt;= 8 THEN 'zz' 
			                                                ELSE (CASE WHEN A.SEQ = 8 THEN A.SUB_CODE ELSE '' END) 
			                                       END) AS 'C8'
			                             FROM HPA900PH_MASTER A ) T4
			                        , HPA600T T1 WITH (NOLOCK)
			                    WHERE T1.COMP_CODE  = #{S_COMP_CODE}
			                      AND T1.PAY_YYYYMM = #{PAY_YYYYMM} 
			                      AND T1.SUPP_TYPE  = #{PROV_TYPE}   
			                    GROUP BY T1.PERSON_NUMB, T1.COMP_CODE) HM3 ON HM3.COMP_CODE   = M1.COMP_CODE
			                                                              AND HM3.PERSON_NUMB = M1.PERSON_NUMB
			       LEFT  JOIN (SELECT T1.PERSON_NUMB
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C1 THEN T1.AMOUNT_I ELSE 0 END) AS 'S1'
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C2 THEN T1.AMOUNT_I ELSE 0 END) AS 'S2'
			                        , SUM(CASE WHEN T1.WAGES_CODE = T4.C3 THEN T1.AMOUNT_I ELSE 0 END) AS 'S3'
			                        , SUM(CASE WHEN T4.C4 = 'zzz' 
			                                        THEN ISNULL(T5.ETC_AMT,0)
			                                        ELSE (CASE WHEN T1.WAGES_CODE = T4.C4 THEN T1.AMOUNT_I ELSE 0 END) 
			                               END) AS 'S4'
			                        , T1.COMP_CODE
			                     FROM HPA300T T1 WITH (NOLOCK)
			                          LEFT JOIN (SELECT PERSON_NUMB
			                                          , SUM(AMOUNT_I) AS ETC_AMT 
			                                          , COMP_CODE
			                                       FROM HPA300T WITH (NOLOCK)
			                                      WHERE COMP_CODE  = #{S_COMP_CODE}
			                                        AND PAY_YYYYMM = #{PAY_YYYYMM} 
			                                        AND SUPP_TYPE  = #{PROV_TYPE}  
			                                        AND WAGES_CODE IN (SELECT WAGES_CODE 
			                                                             FROM HBO800PH_${S_COMP_CODE}
			                                                            WHERE W_SEQ &gt;= 4 )
			                                      GROUP BY PERSON_NUMB, COMP_CODE) T5 ON T5.COMP_CODE   = T1.COMP_CODE
			                                                                         AND T5.PERSON_NUMB = T1.PERSON_NUMB
			                        , (SELECT MAX(CASE WHEN W_SEQ = 1 THEN WAGES_CODE ELSE '' END) AS 'C1'
			                                , MAX(CASE WHEN W_SEQ = 2 THEN WAGES_CODE ELSE '' END) AS 'C2'
			                                , MAX(CASE WHEN W_SEQ = 3 THEN WAGES_CODE ELSE '' END) AS 'C3'
			                                , MAX(CASE WHEN W_SEQ &gt;= 4 
			                                                THEN 'zzz' 
			                                                ELSE (CASE WHEN W_SEQ = 4 THEN WAGES_CODE ELSE '' END) 
			                                       END) AS 'C4'
			                             FROM HBO800PH_MASTER) T4
			                    WHERE T1.COMP_CODE    = #{S_COMP_CODE}
			                      AND T1.PAY_YYYYMM   = #{PAY_YYYYMM}
			                      AND T1.SUPP_TYPE    = #{PROV_TYPE}  
			                    GROUP BY T1.PERSON_NUMB, T1.COMP_CODE ) M2 ON M2.COMP_CODE   = M1.COMP_CODE
			                                                              AND M2.PERSON_NUMB = M1.PERSON_NUMB
			       LEFT  JOIN (SELECT T1.PERSON_NUMB
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C4   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G4'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C5   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G5'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C6   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G6'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7   THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_1 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_1'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_2 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_2'
			                        , SUM(CASE WHEN T1.DED_CODE = T4.C7_3 THEN T1.DED_AMOUNT_I ELSE 0 END) AS 'G7_3'
			                        , MAX(CASE WHEN T4.C8 = 'zz' THEN ISNULL(T5.ETC_AMT,0)
			                                                ELSE (CASE WHEN T1.DED_CODE = T4.C8 THEN T1.DED_AMOUNT_I ELSE 0 END)
			                               END) AS 'G8'
			                        , T1.COMP_CODE
			                     FROM HPA400T T1 WITH (NOLOCK)
			                          LEFT JOIN (SELECT PERSON_NUMB
			                                          , SUM(DED_AMOUNT_I) AS ETC_AMT 
			                                          , COMP_CODE
			                                       FROM HPA400T WITH (NOLOCK)
			                                      WHERE COMP_CODE  = #{S_COMP_CODE}
			                                        AND PAY_YYYYMM = #{PAY_YYYYMM} 
			                                        AND SUPP_TYPE  = #{PROV_TYPE}  
			                                        AND DED_CODE IN (SELECT SUB_CODE 
			                                                           FROM HPA900PH_MASTER
			                                                          WHERE SEQ &gt; 7 )
			                                      GROUP BY PERSON_NUMB, COMP_CODE) T5 ON T5.COMP_CODE   = T1.COMP_CODE
			                                                                         AND T5.PERSON_NUMB = T1.PERSON_NUMB
			                        , (SELECT MAX(CASE WHEN A.SEQ = 1 THEN A.SUB_CODE ELSE '' END) AS 'C4' 
			                                , MAX(CASE WHEN A.SEQ = 2 THEN A.SUB_CODE ELSE '' END) AS 'C5'
			                                , MAX(CASE WHEN A.SEQ = 3 THEN A.SUB_CODE ELSE '' END) AS 'C6'
			                                , MAX(CASE WHEN A.SEQ = 4 THEN A.SUB_CODE ELSE '' END) AS 'C7'
			                                , MAX(CASE WHEN A.SEQ = 5 THEN A.SUB_CODE ELSE '' END) AS 'C7_1'
			                                , MAX(CASE WHEN A.SEQ = 6 THEN A.SUB_CODE ELSE '' END) AS 'C7_2'
			                                , MAX(CASE WHEN A.SEQ = 7 THEN A.SUB_CODE ELSE '' END) AS 'C7_3'
			                                , MAX(CASE WHEN A.SEQ &gt;= 8 
			                                               THEN 'zz' 
			                                               ELSE (CASE WHEN A.SEQ = 8 THEN A.SUB_CODE ELSE '' END) 
			                                       END) AS 'C8'
			                             FROM HPA900PH_MASTER A ) T4
			                            WHERE T1.COMP_CODE    = #{S_COMP_CODE}
			                              AND T1.PAY_YYYYMM   = #{PAY_YYYYMM}
			                              AND T1.SUPP_TYPE    = #{PROV_TYPE}  
			                            GROUP BY T1.PERSON_NUMB, T1.COMP_CODE) M3 ON M3.COMP_CODE   = M1.COMP_CODE
			                                                                     AND M3.PERSON_NUMB = M1.PERSON_NUMB
			       LEFT  JOIN (SELECT TREE_CODE, COMP_CODE FROM BSA210T WHERE COMP_CODE = #{S_COMP_CODE}) M5 ON M5.COMP_CODE = M1.COMP_CODE
			                                                                                                AND M5.TREE_CODE = M1.DEPT_CODE
			 WHERE M1.COMP_CODE    = #{S_COMP_CODE}
			   AND uniLITE.fnCheckCompDivAuth(M1.COMP_CODE, M1.DIV_CODE, #{S_USER_ID}) = 'Y'
			   AND M1.PAY_YYYYMM   = #{PAY_YYYYMM}
			   AND M1.SUPP_TYPE    = #{PROV_TYPE}  
		 </if>
	   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND M1.DIV_CODE = #{DIV_CODE}
       </if>
         <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">  
  	 	   AND M1.PAY_GUBUN     = #{PAY_GUBUN}
       </if> 
       <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       		AND M1.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       		AND M1.DEPT_CODE &lt;=#{TO_DEPT_CODE}
       </if>  
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	  		AND M1.PAY_CODE    =  #{PAY_CODE}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
	  	 	AND M1.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
	  	 	AND M1.PERSON_NUMB = #{PERSON_NUMB}
	  	</if>
		<if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">  
			 AND M0.EMPLOY_TYPE  = #{EMPLOY_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">  
			AND B2.SUB_CODE   = #{EMPLOY_GROUP}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AFFIL_CODE)">  
			AND M0.AFFIL_CODE  = #{AFFIL_CODE}
		</if>
	 	<if test = 'strType == "2"'>
	 		GROUP BY M1.DEPT_CODE
	 	</if>
	 	<if test = 'strType == "3"'>
	 		GROUP BY M0.DIV_CODE
	 		ORDER BY M1.DIV_CODE, M1.DEPT_CODE, M1.POST_CODE, M0.JOIN_DATE, M0.NAME, M1.PERSON_NUMB
	 	</if>
	 	<if test = 'strType == "1"'>
	 		ORDER BY M1.DEPT_CODE, M1.POST_CODE, M0.JOIN_DATE, M0.NAME, M1.PERSON_NUMB
	 	</if>
	</select>
</mapper>