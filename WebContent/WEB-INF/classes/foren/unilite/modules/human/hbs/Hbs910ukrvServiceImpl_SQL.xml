<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hbs910ukrvServiceImpl">

	<select id="Hbs910ukrvServiceImpl.selectColumns" parameterType="loginVO" resultType="rMap">
		BEGIN
		SET NOCOUNT ON
			SET ARITHABORT ON
		
			DECLARE @HBO800PH_COUNT	INTEGER
			DECLARE @HPA900PH_COUNT INTEGER
			
			SET @HBO800PH_COUNT = (select count(W_SEQ) from HBO800PH_${compCode})
			SET @HPA900PH_COUNT = (select count(SEQ) from HPA900PH_${compCode})
			
			CREATE TABLE #HPA870_Temp
			(
				W_SEQ         INT,
				WAGES_NAME    NVARCHAR(30),
				WAGES_CODE	NVARCHAR(30)
			)
			
			INSERT INTO #HPA870_Temp			
			SELECT W_SEQ, WAGES_NAME, WAGES_CODE from HBO800PH_${compCode}
			
			WHILE @HBO800PH_COUNT &lt; 30
				BEGIN
				INSERT INTO #HPA870_Temp
				VALUES (@HBO800PH_COUNT +1, '', '')
				SET @HBO800PH_COUNT = @HBO800PH_COUNT + 1
			END
			
			INSERT INTO #HPA870_Temp			
			select SEQ + 20 as SEQ, CODE_NAME, SUB_CODE from HPA900PH_${compCode}
			
			WHILE @HPA900PH_COUNT &lt; 15
				BEGIN
				INSERT INTO #HPA870_Temp
				VALUES (@HPA900PH_COUNT +21, '', '')
				SET @HPA900PH_COUNT = @HPA900PH_COUNT + 1
			END
		
			select WAGES_NAME, WAGES_CODE from #HPA870_Temp
			
			DROP table #HPA870_Temp
		
		END
	</select>

	<update id="Hbs910ukrvServiceImpl.updateList"  parameterType="Map">
	--hbs910ukrv.Chum910ukrv[fnHum910RemarkSave] Query02
		UPDATE  HPA600T
		   SET     REMARK		= #{REMARK}
		 WHERE   COMP_CODE		= #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
	       AND     DIV_CODE		= #{DIV_CODE}
		</if>
		   AND     PAY_YYYYMM	= #{PAY_YYYYMM}
		   AND     SUPP_TYPE	= #{SUPP_TYPE}
		   AND     PERSON_NUMB	= #{PERSON_NUMB}
	</update>
	
	<insert id="Hbs910ukrvServiceImpl.insertList" parameterType="Map">
        INSERT INTO HBS910T 
        (
             COMP_CODE
            ,DIV_CODE
            ,PERSON_NUMB
            ,CLOSE_TYPE
            ,CLOSE_DATE
            ,SUPP_TYPE
            ,INSERT_DB_USER
            ,INSERT_DB_TIME
            ,UPDATE_DB_USER
            ,UPDATE_DB_TIME
        )
        SELECT
             #{S_COMP_CODE}
            ,A.DIV_CODE
            ,#{PERSON_NUMB}
            ,#{SUPP_TYPE}
            ,#{PAY_YYYYMM}
            ,'Z'
            ,#{S_USER_ID}
            ,GETDATE()
            ,#{S_USER_ID}
            ,GETDATE()
        FROM HUM100T A
        WHERE COMP_CODE   = #{S_COMP_CODE}
          AND PERSON_NUMB = #{PERSON_NUMB}
	</insert>
	
	<delete id="Hbs910ukrvServiceImpl.deleteList" parameterType="Map">
        DELETE HBS910T
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND PERSON_NUMB = #{PERSON_NUMB}
		   AND CLOSE_DATE  = #{PAY_YYYYMM}
		   AND CLOSE_TYPE  = #{SUPP_TYPE}
	</delete>
	         
	<select id="Hbs910ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">		
		SET NOCOUNT ON 
		IF EXISTS(SELECT TOP 1 1 
				  FROM tempdb.sys.objects 
				  WHERE object_id = OBJECT_ID('tempdb..#TEMPPERSON'))
		    BEGIN
		        DROP TABLE #TEMPPERSON
		    END
		CREATE TABLE #TEMPPERSON
		       ( COMP_CODE2     NVARCHAR(8)
		       , DEPT_CODE2     NVARCHAR(8)
		       , DEPT_NAME2     NVARCHAR(30)
		       , POST_CODE2     NVARCHAR(2)
		       , PERSON_NUMB2   NVARCHAR(10)
		       , NAME2          NVARCHAR(60)
		       , JOIN_DATE2     NVARCHAR(10)
		       , PAY_YYYYMM2    NVARCHAR(6)
		       , SUPP_TOTAL_I2  NUMERIC(18, 6)
		       , DED_TOTAL_I2   NUMERIC(18, 6)
		       , REAL_AMOUNT_I2 NUMERIC(18, 6)
		       )
		INSERT INTO #TEMPPERSON
		 ( COMP_CODE2
		 , DEPT_CODE2
		 , DEPT_NAME2
		 , POST_CODE2
		 , PERSON_NUMB2
		 , NAME2
		 , JOIN_DATE2
		 , PAY_YYYYMM2
		 , SUPP_TOTAL_I2
		 , DED_TOTAL_I2
		 , REAL_AMOUNT_I2
		 )
		SELECT A.COMP_CODE
		     , A.DEPT_CODE
		     , A.DEPT_NAME
		     , A.POST_CODE
		     , A.PERSON_NUMB
		     , A.NAME
		     , uniLITE.fnGetUserDateComp(#{S_COMP_CODE}, A.JOIN_DATE) AS JOIN_DATE
		     , B.PAY_YYYYMM
		     , B.SUPP_TOTAL_I
		     , B.DED_TOTAL_I
		     , B.REAL_AMOUNT_I
		  FROM HUM100T A(NOLOCK) INNER JOIN HPA600T B 
		                            ON A.COMP_CODE   = B.COMP_CODE
		                           --AND A.DIV_CODE    = B.DIV_CODE
		                           AND A.PERSON_NUMB = B.PERSON_NUMB
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND B.PAY_YYYYMM = #{PAY_YYYYMM}
		   <if test="@foren.Ognl@isNotEmpty(SUPP_TYPE)"> 
			 AND B.SUPP_TYPE  = #{SUPP_TYPE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)"> 
			 AND A.PERSON_NUMB  = #{PERSON_NUMB}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			 AND  A.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		    	 #{item}
		    </foreach>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
		  	AND A.DIV_CODE   = #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PERSON_NUM)"> 
		    AND A.PERSON_NUMB   = #{PERSON_NUM}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)"> 
		    AND B.PAY_CODE      = #{PAY_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
		    AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)"> 
		    AND B.PAY_GUBUN     = #{PAY_GUBUN}
		   </if>
		  
		  IF EXISTS (SELECT TOP 1 1 
		  			 FROM tempdb.sys.objects 
		  			 WHERE object_id = OBJECT_ID('tempdb..##HPA_T${S_COMP_CODE}'))
		    BEGIN
		        DROP TABLE [##HPA_T${S_COMP_CODE}]
		    END
			DECLARE @COMP_CODE NVARCHAR(10)
			SET @COMP_CODE= #{S_COMP_CODE}
			DECLARE @TEMPWAGE TABLE
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , WAGES_CODE NVARCHAR(10)
			        , WAGES_NAME NVARCHAR(20)
			        , USE_YN NVARCHAR(1)
			        )
			DECLARE @TEMPDED TABLE
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , DED_CODE NVARCHAR(10)
			        , DED_NAME NVARCHAR(20)
			        , USE_YN NVARCHAR(1)
			        )
			INSERT INTO @TEMPWAGE
			       ( WAGES_CODE
			       , WAGES_NAME
			       , USE_YN
			       )
			SELECT WAGES_CODE
			     , WAGES_NAME
			     , USE_YN
			  FROM HBS300T
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND USE_YN = 'Y'
			 ORDER BY SORT_SEQ
			INSERT INTO @TEMPDED
			       ( DED_CODE
			       , DED_NAME
			       , USE_YN
			       )
			SELECT SUB_CODE
			     , CODE_NAME
			     , USE_YN
			  FROM BSA100T
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE ='H034'
			   AND SUB_CODE &lt;&gt; '$'
			   AND USE_YN = 'Y'
			 ORDER BY REF_CODE2
			DECLARE @WAGES_CODE NVARCHAR(4000)
			DECLARE @CREATE_NAME NVARCHAR(4000)
			DECLARE @TEMP_CODE  NVARCHAR(20)
			DECLARE @TEMP_NAME NVARCHAR(20)
			DECLARE @TEMP_FIX NVARCHAR(1)
			DECLARE @I INT
			DECLARE @MAXNO INT
			DECLARE @I2 INT
			DECLARE @MAXNO2 INT
			SELECT @I=1
			     , @MAXNO=MAX(NID)
			  FROM @TEMPWAGE
			SELECT @I2=1
			     , @MAXNO2=MAX(NID)
			  FROM @TEMPDED
		SET @CREATE_NAME ='CREATE TABLE [##HPA_T${S_COMP_CODE}] 
		                            ( COMP_CODE NVARCHAR(10)
		                            , DEPT_CODE NVARCHAR(8)
		                            , DEPT_NAME NVARCHAR(30)
		                            , POST_CODE NVARCHAR(2)
		                            , PERSON_NUMB NVARCHAR(10)
		                            , NAME NVARCHAR(60)
		                            , JOIN_DATE NVARCHAR(10)
		                            , PAY_YYYYMM NVARCHAR(6)
		                            , SUPP_TOTAL_I NUMERIC(18,6)
		                            , DED_TOTAL_I NUMERIC(18,6)
		                            , REAL_AMOUNT_I NUMERIC(18,6)'
		WHILE @I &lt;= @MAXNO
		    BEGIN
		        SELECT @TEMP_CODE= WAGES_CODE
		          FROM @TEMPWAGE
		         WHERE NID=@I
		        SELECT @TEMP_NAME = WAGES_NAME
		          FROM @TEMPWAGE
		         WHERE NID=@I
		        SET @CREATE_NAME = @CREATE_NAME + ', WAGES_PAY' + @TEMP_CODE + ' NUMERIC(18,6)'
		        SET @I=@I+1
		    END
		WHILE @I2 &lt;=@MAXNO2
		    BEGIN
		        SELECT @TEMP_CODE = DED_CODE
		          FROM @TEMPDED
		         WHERE NID=@I2
		        SELECT @TEMP_NAME = DED_NAME
		          FROM @TEMPDED
		         WHERE NID=@I2
		        SET @CREATE_NAME = @CREATE_NAME + ', WAGES_DED' + @TEMP_CODE + '  NUMERIC(18,6)' 
		        SET @I2 = @I2 + 1
		    END
		SET @CREATE_NAME = @CREATE_NAME + ')'
		SET @WAGES_CODE = 'INSERT INTO [##HPA_T${S_COMP_CODE}]
		                                ( COMP_CODE
		                                , DEPT_CODE
		                                , DEPT_NAME
		                                , POST_CODE
		                                , PERSON_NUMB
		                                , NAME
		                                , JOIN_DATE
		                                , PAY_YYYYMM
		                                , SUPP_TOTAL_I
		                                , DED_TOTAL_I
		                                , REAL_AMOUNT_I'
		SET @I=1
		SET @I2=1
		WHILE @I &lt;= @MAXNO
		    BEGIN
		        SELECT @TEMP_CODE = WAGES_CODE
		             , @TEMP_NAME = WAGES_NAME
		          FROM @TEMPWAGE
		         WHERE NID = @I
		        SET @WAGES_CODE = @WAGES_CODE + ', WAGES_PAY' + @TEMP_CODE
		        SET @I=@I+1
		    END
		    
		WHILE @I2 &lt;= @MAXNO2
		    BEGIN
		        SELECT @TEMP_CODE = DED_CODE
		             , @TEMP_NAME = DED_NAME
		          FROM @TEMPDED
		         WHERE NID=@I2
		        SET @WAGES_CODE = @WAGES_CODE + ', WAGES_DED' + @TEMP_CODE  
		        SET @I2=@I2+1
		END
		SET @WAGES_CODE = @WAGES_CODE + ')'
		SET @WAGES_CODE = @WAGES_CODE + 'SELECT COMP_CODE2
		                                      , DEPT_CODE2
		                                      , DEPT_NAME2
		                                      , POST_CODE2
		                                      , PERSON_NUMB2
		                                      , NAME2
		                                      , JOIN_DATE2
		                                      , ${PAY_YYYYMM} 
		                                      , SUPP_TOTAL_I2
		                                      , DED_TOTAL_I2
		                                      , REAL_AMOUNT_I2'
		SET @I=1
		SET @I2=1
		WHILE @I &lt;= @MAXNO
		    BEGIN
		        SELECT @TEMP_CODE = WAGES_CODE
		             , @TEMP_NAME = WAGES_NAME
		          FROM @TEMPWAGE
		         WHERE NID=@I
		        SET @WAGES_CODE = @WAGES_CODE + ', 0'
		        SET @I=@I+1
		    END
		    
		WHILE @I2 &lt;=@MAXNO2
		    BEGIN
		        SELECT @TEMP_CODE = DED_CODE
		             , @TEMP_NAME = DED_NAME
		          FROM @TEMPDED
		         WHERE NID=@I2
		        SET @WAGES_CODE = @WAGES_CODE + ', 0' 
		        SET @I2=@I2+1
		    END
		SET @WAGES_CODE = @WAGES_CODE + ' FROM #TEMPPERSON '
		
		IF EXISTS(SELECT TOP 1 1 
				  FROM tempdb.sys.objects 
				  WHERE object_id = OBJECT_ID('tempdb..#WAGES_${S_COMP_CODE}'))
		    BEGIN
		        DROP TABLE [#WAGES_${S_COMP_CODE}]
		    END
		    
		IF EXISTS(SELECT TOP 1 1 
				  FROM tempdb.sys.objects 
				  WHERE object_id = OBJECT_ID('tempdb..#DED_T${S_COMP_CODE}'))
		    BEGIN
		        DROP TABLE [#DED_T${S_COMP_CODE}]
		    END
		    
		    
		EXEC SP_EXECUTESQL @CREATE_NAME
		EXEC SP_EXECUTESQL @WAGES_CODE
		
		CREATE TABLE [#WAGES_${S_COMP_CODE}]  
		        ( NID INT IDENTITY(1,1) NOT NULL
		        , PERSON_NUMB2 NVARCHAR(10)
		        , WAGES_CODE NVARCHAR(16)
		        , AMOUNT_I NUMERIC(18, 6)
		        )
		CREATE TABLE [#DED_T${S_COMP_CODE}]  
		        ( NID INT IDENTITY(1,1) NOT NULL
		        , PERSON_NUMB2 NVARCHAR(10)
		        , DED_CODE NVARCHAR(16)
		        , AMOUNT_I NUMERIC(18, 6)
		        )
		INSERT INTO [#WAGES_${S_COMP_CODE}] 
		        ( PERSON_NUMB2
		        , WAGES_CODE
		        , AMOUNT_I
		        )
		SELECT PERSON_NUMB
		     , 'WAGES_PAY' + A.WAGES_CODE
		     , A.AMOUNT_I
		  FROM HPA300T A (NOLOCK) LEFT OUTER JOIN HBS300T B
		                            ON A.COMP_CODE  = B.COMP_CODE
		                           AND A.WAGES_CODE = B.WAGES_CODE
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND B.USE_YN     = 'Y'
		   AND A.PAY_YYYYMM = #{PAY_YYYYMM}
		   AND A.SUPP_TYPE  =  #{SUPP_TYPE}
		ORDER BY B.SORT_SEQ
		
		INSERT INTO [#DED_T${S_COMP_CODE}]  
		        ( PERSON_NUMB2
		        , DED_CODE
		        , AMOUNT_I)
		SELECT A.PERSON_NUMB
		     , 'WAGES_DED' + A.DED_CODE
		     , DED_AMOUNT_I
		  FROM HPA400T A(NOLOCK) LEFT OUTER JOIN BSA100T B
		                           ON A.COMP_CODE = B.COMP_CODE
		                          AND A.DED_CODE  = B.SUB_CODE
		                          AND B.MAIN_CODE = 'H034'
		                          AND B.SUB_CODE &lt;&gt; '$'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND PAY_YYYYMM  = #{PAY_YYYYMM}
		   AND A.SUPP_TYPE = #{SUPP_TYPE}
		   AND B.USE_YN    = 'Y'
		 ORDER BY REF_CODE2
		 
		 
		DECLARE @SLOOP INT
		DECLARE @MAXCOUNT INT
		DECLARE @AMOUNT_I NVARCHAR(100)
		DECLARE @TEMPSQL NVARCHAR(2000)
		DECLARE @PERSON_NUMB NVARCHAR(10)
		DECLARE @COUNS INT
		SET @SLOOP=1
		
		CREATE TABLE #TBLGROUP
		(
		        NID INT IDENTITY(1,1) NOT NULL, 
		        CODE NVARCHAR(20)
		)
		
		INSERT INTO #TBLGROUP
		SELECT WAGES_CODE 
		FROM [#WAGES_${S_COMP_CODE}] 
		GROUP BY WAGES_CODE
		SELECT @MAXCOUNT= COUNT(CODE) FROM #TBLGROUP
		
/*		속도 문제로 쿼리 수정 (위 10개 행으로 대체)
		SELECT @MAXCOUNT=MAX(NID)
		  FROM [#WAGES_${S_COMP_CODE}]			*/ 
		

		WHILE @SLOOP &lt;=@MAXCOUNT
		    BEGIN
		        SELECT @WAGES_CODE = WAGES_CODE
		          FROM [#WAGES_${S_COMP_CODE}] 
		         WHERE NID=@SLOOP
		        SET @TEMPSQL = 'UPDATE [##HPA_T${S_COMP_CODE}]  SET ' + @WAGES_CODE + ' =  AMOUNT_I
		                          FROM [#WAGES_${S_COMP_CODE}] A
		                         WHERE A.PERSON_NUMB2 = PERSON_NUMB
		                           AND A.WAGES_CODE   = ''' + @WAGES_CODE + ''''
		        EXEC SP_EXECUTESQL @TEMPSQL
		        SET @SLOOP = @SLOOP + 1
		    END

		TRUNCATE  TABLE #TBLGROUP
		INSERT INTO #TBLGROUP
		SELECT DED_CODE 
		  FROM [#DED_T${S_COMP_CODE}] 
		 GROUP BY DED_CODE
		SELECT @MAXCOUNT= COUNT(CODE) FROM #TBLGROUP
		    
/*		속도 문제로 쿼리 수정(위 6개 행으로 대체)
		SELECT @COUNS = COUNT(DED_CODE)
		  FROM [#DED_T${S_COMP_CODE}]
		 GROUP BY DED_CODE
		 
		SELECT @MAXCOUNT = MAX(NID)
		  FROM [#DED_T${S_COMP_CODE}]*/
		  
		  
		SET @SLOOP=1
		WHILE @SLOOP &lt;= @MAXCOUNT
		    BEGIN
		        SELECT @WAGES_CODE = DED_CODE
		          FROM [#DED_T${S_COMP_CODE}] 
		         WHERE NID = @SLOOP
		        SET @TEMPSQL = 'UPDATE [##HPA_T${S_COMP_CODE}] SET ' + @WAGES_CODE + '= AMOUNT_I
		                          FROM [#DED_T${S_COMP_CODE}] A
		                         WHERE A.PERSON_NUMB2 = PERSON_NUMB
		                           AND A.DED_CODE = ''' + @WAGES_CODE + ''''
		        EXEC SP_EXECUTESQL @TEMPSQL
		        SET @SLOOP = @SLOOP + 1
		    END
		    
		SELECT 
			CASE WHEN D.CLOSE_DATE IS NOT NULL THEN CAST(1 AS BIT)  
			     ELSE CAST(0 AS BIT)
				 END AS CHK,
			CASE WHEN ISNULL(C.CLOSE_DATE, '') &lt;&gt; '' THEN 'Y'
			     ELSE 'N'
				 END AS COMP_CLOSE,
			CASE WHEN ISNULL(D.CLOSE_DATE, '') &lt;&gt; '' THEN 'Y'
			     ELSE 'N'
				 END AS PERSONAL_CLOSE,
			A.*, 
			E.REMARK,
			#{SUPP_TYPE} AS SUPP_TYPE
		FROM      [##HPA_T${S_COMP_CODE}] A
			LEFT JOIN HBS900T C WITH(NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
			                                AND C.CLOSE_TYPE = #{SUPP_TYPE}
			                                AND C.CLOSE_DATE >= #{PAY_YYYYMM}
			                                AND C.SUPP_TYPE  = 'Z'
			LEFT JOIN HBS910T D WITH(NOLOCK) ON D.COMP_CODE  = A.COMP_CODE
			                                AND D.PERSON_NUMB= A.PERSON_NUMB
			                                AND D.CLOSE_TYPE = #{SUPP_TYPE}
			                                AND D.CLOSE_DATE = #{PAY_YYYYMM}
			                                AND D.SUPP_TYPE  = 'Z'      
			LEFT JOIN HPA600T E WITH(NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
			                                AND E.PERSON_NUMB   = A.PERSON_NUMB
			                                AND E.PAY_YYYYMM    = #{PAY_YYYYMM}
			                                AND E.SUPP_TYPE     = #{SUPP_TYPE}
		ORDER BY A.DEPT_CODE,A.POST_CODE, A.NAME 

</select>

<select id="Hbs910ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
	SELECT A.COMP_CODE, A.COMP_NAME
	  FROM BOR100T   A  WITH (NOLOCK)
      LEFT JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                          AND M1.MAIN_CODE    = 'B107'
                                          AND M1.SUB_CODE     = '20'         
	 WHERE (A.COMP_CODE &gt; ''     	  AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
	    OR (A.COMP_CODE = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
</select>

<select id="Hbs910ukrvServiceImpl.checkPersonNumb" parameterType="Map" resultType="String">
    SELECT PERSON_NUMB
      FROM HBS910T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND CLOSE_DATE = #{PAY_YYYYMM}
       AND PERSON_NUMB= #{PERSON_NUMB}
</select>

</mapper>