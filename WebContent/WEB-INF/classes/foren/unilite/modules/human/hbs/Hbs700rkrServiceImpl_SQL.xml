<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hbs700rkrServiceImpl">

<select id="checkHbs700t" parameterType="Map" resultType="rMap" >
    /* hbs700rkrServiceImpl.checkHbs700t  */
    SELECT DECS_YN
         FROM HBS700T
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND CNRC_YEAR = #{CNRC_YEAR}
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
          AND PERSON_NUMB  = #{PERSON_NUMB}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
          AND DEPT_CODE  &gt;= #{DEPT_CODE_FR}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
          AND DEPT_CODE  &lt;= #{DEPT_CODE_TO}
    </if>
</select>

<select id="selectPrimaryDataList" parameterType="Map" resultType="rMap" >
	/* hbs700rkrServiceImpl.selectPrimaryDataList */	
	
    SELECT  
       A.COMP_CODE
      ,D.COMP_NAME
      ,(SELECT REF_CODE3 FROM BSA100T WHERE MAIN_CODE = 'H175' AND SUB_CODE = '51') + C.IMAGE_PATH AS IMAGE_PATH
      ,A.DEPT_CODE
      ,E.TREE_NAME      AS DEPT_NAME 
      ,A.PERSON_NUMB
      ,B.NAME
      ,A.ABIL_CODE                  --직급코드  H006
      ,M1.CODE_NAME     AS ABIL_NAME -- 직급명
      ,A.POST_CODE                  --직위코드  H005
      ,M2.CODE_NAME     AS POST_NAME -- 직위명

      ,A.CNRC_YEAR                  --계약기간
      ,A.ANNUAL_SALARY_I            --기본연봉
      ,A.AGRN_DATE                  --동의일자

      ,A.BSE_AMT                    /* 기본급 */
      ,A.BNS_ALWN                    /* 상여수당 */ 
      ,A.MNGM_ALWN                   /* 관리업무수당 */   
      ,A.CNWK_ALWN                   /* 근속수당 */ 
      ,A.ABIL_ASST_EXPN              /* 직급보조비 */    
      ,A.RSP_EXPN                    /* 효도휴가비 */            
      ,A.CHFD_ASST_EXPN              /* 급식보조비 */
        
      ,A.BZNS_PRGS_EXPN              /* 직책급 업무추진비 */        
      ,A.TCHN_ALWN                   /* 기술자격수당 */
      ,A.BZNS_ALWN                   /* 업무수당 */         
      ,A.DEV_BZNS_ALWN               /* 개발업무수당 */           
      ,A.FMLY_ALWN                   /* 가족수당 */         
      ,A.SCEXP_ASST_ALWN             /* 학비보조수당 */
      ,A.TRET_ALWN                   /* 대우수당 */

      ,A.MERIT_PAY                   /* 성과연봉 */     
      ,A.ANNUAL_SALARY_I                 /* 연봉 */
      ,A.WAGES_STD_I                 /* 월지급액 */


      FROM HBS700T A WITH(NOLOCK)
 LEFT JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                  AND B.PERSON_NUMB = A.PERSON_NUMB
 LEFT JOIN HEA091T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                  AND C.PERSON_NUMB = A.PERSON_NUMB
 LEFT JOIN BSA100T M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                  AND M1.MAIN_CODE = 'H006'
                                  AND M1.SUB_CODE = A.ABIL_CODE
 LEFT JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                  AND M2.MAIN_CODE = 'H005'
                                  AND M2.SUB_CODE = A.POST_CODE
 LEFT JOIN BOR100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
 LEFT JOIN BSA210T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE
                                 AND E.TREE_CODE = A.DEPT_CODE
     WHERE A.COMP_CODE = #{S_COMP_CODE} 
       AND A.CNRC_YEAR = #{CNRC_YEAR}
       
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
       AND A.PERSON_NUMB  = #{PERSON_NUMB}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
       AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
       AND A.DEPT_CODE &lt;=#{DEPT_CODE_TO}
    </if>            
</select>
	
<select id="ds_sub01" parameterType="Map" resultType="rMap" >	
    /* hbs700rkrServiceImpl.ds_sub01  */  
        SELECT 
             CNRC_YEAR
            ,max(CASE WHEN WAGES_CODE = 'ABIL_ASST_EXPN' THEN RMK END)  AS ABIL_ASST_EXPN
            ,max(CASE WHEN WAGES_CODE = 'ANNUAL_SALARY_I' THEN RMK END)  AS ANNUAL_SALARY_I
            ,max(CASE WHEN WAGES_CODE = 'BNS_ALWN' THEN RMK END)  AS BNS_ALWN
            ,max(CASE WHEN WAGES_CODE = 'BSE_AMT' THEN RMK END)  AS BSE_AMT
            ,max(CASE WHEN WAGES_CODE = 'BZNS_ALWN' THEN RMK END)  AS BZNS_ALWN
            ,max(CASE WHEN WAGES_CODE = 'BZNS_PRGS_EXPN' THEN RMK END)  AS BZNS_PRGS_EXPN
            ,max(CASE WHEN WAGES_CODE = 'CHFD_ASST_EXPN' THEN RMK END)  AS CHFD_ASST_EXPN
            ,max(CASE WHEN WAGES_CODE = 'CNWK_ALWN' THEN RMK END)  AS CNWK_ALWN
            ,max(CASE WHEN WAGES_CODE = 'DEV_BZNS_ALWN' THEN RMK END)  AS DEV_BZNS_ALWN
            ,max(CASE WHEN WAGES_CODE = 'FMLY_ALWN' THEN RMK END)  AS FMLY_ALWN
            ,max(CASE WHEN WAGES_CODE = 'MERIT_PAY' THEN RMK END)  AS MERIT_PAY
            ,max(CASE WHEN WAGES_CODE = 'MNGM_ALWN' THEN RMK END)  AS MNGM_ALWN
            ,max(CASE WHEN WAGES_CODE = 'RSP_EXPN' THEN RMK END)  AS RSP_EXPN
            ,max(CASE WHEN WAGES_CODE = 'SCEXP_ASST_ALWN' THEN RMK END)  AS SCEXP_ASST_ALWN
            ,max(CASE WHEN WAGES_CODE = 'TCHN_ALWN' THEN RMK END)  AS TCHN_ALWN
            ,max(CASE WHEN WAGES_CODE = 'TRET_ALWN' THEN RMK END)  AS TRET_ALWN
            FROM HBS701T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND CNRC_YEAR = #{CNRC_YEAR}

          GROUP BY CNRC_YEAR

</select>
	
	<select id="selectPrintList" parameterType="Map" resultType="rMap" >
	    /* hbs700rkrServiceImpl.selectPrintList  */
		BEGIN
			SET NOCOUNT    ON
			SET ARITHABORT ON
		    
		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------    
			DECLARE @COMP_CODE				NVARCHAR(08)        --	법인코드
				  , @CONTRACT_YEAR			NVARCHAR(04)        --	계약년도
				  , @DEPT_CODE_FR			NVARCHAR(20)		--	부서코드_FR
				  , @DEPT_CODE_TO			NVARCHAR(20)		--	부서코드_TO
				  , @PERSON_NUMB			NVARCHAR(40)        --	사번
				  , @CNRC_YEAR				NVARCHAR(04)
		          
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @CONTRACT_YEAR	= #{CNRC_YEAR}
			SET @DEPT_CODE_FR	= ISNULL('${DEPT_CODE_FR}', '')
			SET @DEPT_CODE_TO	= ISNULL('${DEPT_CODE_TO}', '')
			SET @PERSON_NUMB	= ISNULL('${PERSON_NUMB}', '')
		
			SELECT @CNRC_YEAR = MAX(CNRC_YEAR)
			  FROM HBS701T WITH (NOLOCK)
			 WHERE COMP_CODE  = @COMP_CODE
			   AND CNRC_YEAR &lt;= @CONTRACT_YEAR
			
			SELECT A.COMP_CODE
				 , A.PERSON_NUMB
				 , A.ABIL_CODE
				 , M1.CODE_NAME AS ABIL_NAME
				 , A.POST_CODE
				 , M2.CODE_NAME AS POST_NAME
				 , D.REPRE_NAME
				 , D.COMP_NAME
				 , A.NAME
				 , ISNULL(H3.IMAGE_PATH,'') AS PERSONAL_SIGN_PATH
				 , CASE WHEN ISNULL(B2.AGRN_YN, '') = '' THEN 'N' ELSE 'Y' END	AS PROMOTION_YN
				 , ISNULL(B2.TEMPC_03, '')										AS PROMOTE_DATE
				 /* 수당 항목 */
				 , ISNULL(B1.BSE_AMT			,0) AS BSE_AMT						/* 기본급 */		
				 , ISNULL(B1.BNS_ALWN			,0) AS BNS_ALWN						/* 상여수당 */	
				 , ISNULL(B1.MNGM_ALWN			,0) AS MNGM_ALWN					/* 관리업무수당 */	
				 , ISNULL(B1.CNWK_ALWN			,0) AS CNWK_ALWN					/* 근속수당 */	
				 , ISNULL(B1.ABIL_ASST_EXPN		,0) AS ABIL_ASST_EXPN				/* 직급보조비 */	
				 , ISNULL(B1.RSP_EXPN			,0) AS RSP_EXPN						/* 효도휴가비 */			
				 , ISNULL(B1.CHFD_ASST_EXPN		,0) AS CHFD_ASST_EXPN				/* 급식보조비 */		
				 , ISNULL(B1.BZNS_PRGS_EXPN		,0) AS BZNS_PRGS_EXPN				/* 직책급 업무추진비 */		
				 , ISNULL(B1.TCHN_ALWN			,0) AS TCHN_ALWN					/* 기술자격수당 */
				 , ISNULL(B1.BZNS_ALWN			,0) AS BZNS_ALWN					/* 업무수당 */			
				 , ISNULL(B1.DEV_BZNS_ALWN		,0) AS DEV_BZNS_ALWN				/* 개발업무수당 */			
				 , ISNULL(B1.FMLY_ALWN			,0) AS FMLY_ALWN					/* 가족수당 */			
				 , ISNULL(B1.SCEXP_ASST_ALWN	,0) AS SCEXP_ASST_ALWN				/* 학비보조수당 */
				 , ISNULL(B1.TRET_ALWN			,0) AS TRET_ALWN					/* 대우수당 */
				 , ISNULL(B1.MERIT_PAY			,0) AS MERIT_PAY					/* 성과연봉 */		
				 , ISNULL(B1.MOD_ALWN			,0) AS MOD_ALWN						/* 조정수당 */
				 
				 /* 기본연봉 */
				 , (ISNULL(B2.BSE_AMT			,ISNULL(B1.BSE_AMT			,0)) * 12) 
				 + (ISNULL(B2.BNS_ALWN			,ISNULL(B1.BNS_ALWN			,0)) * 12) 
				 + (ISNULL(B2.MNGM_ALWN			,ISNULL(B1.MNGM_ALWN		,0)) * 12) 
				 + (ISNULL(B2.CNWK_ALWN			,ISNULL(B1.CNWK_ALWN		,0)) * 12) 
				 + (ISNULL(B2.ABIL_ASST_EXPN	,ISNULL(B1.ABIL_ASST_EXPN	,0)) * 12)
				 + (ISNULL(B2.RSP_EXPN			,ISNULL(B1.RSP_EXPN			,0)) * 12) 
				 + (ISNULL(B2.CHFD_ASST_EXPN	,ISNULL(B1.CHFD_ASST_EXPN	,0)) * 12) AS ANNUAL_SALARY_I
				 
				 --, ISNULL(B1.ANNUAL_SALARY_I	,0) AS ANNUAL_SALARY_I				/* 연봉 */
				 , ISNULL(B1.WAGES_STD_I		,0) AS WAGES_STD_I					/* 월지급액 */
				 , ISNULL(B1.ADD_AMT			,0) AS ADD_AMT						/*가산금액*/	
				 , ISNULL(B1.SUB_AMT			,0) AS SUB_AMT						/*감산금액*/
				 /* 월 가 합계 */
				 , ISNULL(B1.BSE_AMT			,0) 
				 + ISNULL(B1.BNS_ALWN			,0) 
				 + ISNULL(B1.MNGM_ALWN			,0) 
				 + ISNULL(B1.CNWK_ALWN			,0) 
				 + ISNULL(B1.ABIL_ASST_EXPN		,0)
				 + ISNULL(B1.RSP_EXPN			,0) 
				 + ISNULL(B1.CHFD_ASST_EXPN		,0) AS M_GA_SUB_TOT		/* 월 가 합계 */
				 /* 월 나 합계 */
				 , ISNULL(B1.BZNS_PRGS_EXPN		,0) 
				 + ISNULL(B1.TCHN_ALWN			,0) 
				 + ISNULL(B1.BZNS_ALWN			,0) 
				 + ISNULL(B1.DEV_BZNS_ALWN		,0) 
				 + ISNULL(B1.FMLY_ALWN			,0)
				 + ISNULL(B1.SCEXP_ASST_ALWN	,0)
				 + ISNULL(B1.TRET_ALWN			,0)
				 + ISNULL(B1.MOD_ALWN			,0) AS M_NA_SUB_TOT		/* 월 나 합계 */
				 /* 월 전체 합계 */
				 , ISNULL(B1.BSE_AMT			,0)
				 + ISNULL(B1.BNS_ALWN			,0)
				 + ISNULL(B1.MNGM_ALWN			,0)
				 + ISNULL(B1.CNWK_ALWN			,0)
				 + ISNULL(B1.ABIL_ASST_EXPN		,0)
				 + ISNULL(B1.RSP_EXPN			,0)
				 + ISNULL(B1.CHFD_ASST_EXPN		,0)
				 + ISNULL(B1.BZNS_PRGS_EXPN		,0)
				 + ISNULL(B1.TCHN_ALWN			,0)
				 + ISNULL(B1.BZNS_ALWN			,0)
				 + ISNULL(B1.DEV_BZNS_ALWN		,0)
				 + ISNULL(B1.FMLY_ALWN			,0)
				 + ISNULL(B1.SCEXP_ASST_ALWN	,0)
				 + ISNULL(B1.TRET_ALWN			,0)
				 + ISNULL(B1.MOD_ALWN			,0)	AS M_TOT			/* 월 전체 합계 */
				 /* 연봉 가 합계 */
				 , (ISNULL(B1.BSE_AMT			,0) * 12) 
				 + (ISNULL(B1.BNS_ALWN			,0) * 12) 
				 + (ISNULL(B1.MNGM_ALWN			,0) * 12) 
				 + (ISNULL(B1.CNWK_ALWN			,0) * 12) 
				 + (ISNULL(B1.ABIL_ASST_EXPN	,0) * 12)
				 + (ISNULL(B1.RSP_EXPN			,0) * 12) 
				 + (ISNULL(B1.CHFD_ASST_EXPN	,0) * 12) AS Y_GA_SUB_TOT		/* 연봉 가 합계 */
				 /* 연봉 나 합계 */
				 , (ISNULL(B1.BZNS_PRGS_EXPN	,0) * 12) 
				 + (ISNULL(B1.TCHN_ALWN			,0) * 12) 
				 + (ISNULL(B1.BZNS_ALWN			,0) * 12) 
				 + (ISNULL(B1.DEV_BZNS_ALWN		,0) * 12) 
				 + (ISNULL(B1.FMLY_ALWN			,0) * 12)
				 + (ISNULL(B1.SCEXP_ASST_ALWN	,0) * 12)
				 + (ISNULL(B1.TRET_ALWN			,0) * 12)
				 + (ISNULL(B1.MOD_ALWN			,0) * 12) AS Y_NA_SUB_TOT		/* 연봉 나 합계 */
				 /* 연봉 전체 합계 */
				 , (ISNULL(B1.BSE_AMT			,0) * 12)
				 + (ISNULL(B1.BNS_ALWN			,0) * 12)
				 + (ISNULL(B1.MNGM_ALWN			,0) * 12)
				 + (ISNULL(B1.CNWK_ALWN			,0) * 12)
				 + (ISNULL(B1.ABIL_ASST_EXPN	,0) * 12)
				 + (ISNULL(B1.RSP_EXPN			,0) * 12)
				 + (ISNULL(B1.CHFD_ASST_EXPN	,0) * 12)
				 + (ISNULL(B1.BZNS_PRGS_EXPN	,0) * 12)
				 + (ISNULL(B1.TCHN_ALWN			,0) * 12)
				 + (ISNULL(B1.BZNS_ALWN			,0) * 12)
				 + (ISNULL(B1.DEV_BZNS_ALWN		,0) * 12)
				 + (ISNULL(B1.FMLY_ALWN			,0) * 12)
				 + (ISNULL(B1.SCEXP_ASST_ALWN	,0) * 12)
				 + (ISNULL(B1.TRET_ALWN			,0) * 12)
				 + (ISNULL(B1.MOD_ALWN			,0) * 12) AS Y_TOT			  	/* 연봉 전체 합계 */
				 /* 산출내역서 - 비고 */
				 , E.RMK_ANNUAL_SALARY_I
				 , E.RMK_BSE_AMT
				 , E.RMK_BNS_ALWN
				 , E.RMK_MNGM_ALWN
				 , E.RMK_CNWK_ALWN
				 , E.RMK_ABIL_ASST_EXPN
				 , E.RMK_RSP_EXPN
				 , E.RMK_CHFD_ASST_EXPN
				 , E.RMK_BZNS_PRGS_EXPN
				 , E.RMK_TCHN_ALWN
				 , E.RMK_BZNS_ALWN
				 , E.RMK_DEV_BZNS_ALWN
				 , E.RMK_FMLY_ALWN
				 , E.RMK_SCEXP_ASST_ALWN
				 , E.RMK_TRET_ALWN
				 , E.RMK_MERIT_PAY
				 , E.RMK_MOD_ALWN
			  FROM HUM100T A															
					INNER JOIN		BOR100T D
								 ON A.COMP_CODE		= D.COMP_CODE
					LEFT OUTER JOIN HEA091T H3
								 ON A.COMP_CODE		= H3.COMP_CODE
								AND A.PERSON_NUMB	= H3.PERSON_NUMB
					INNER JOIN		HBS700T B1
								 ON A.COMP_CODE		= B1.COMP_CODE
								AND A.PERSON_NUMB	= B1.PERSON_NUMB
								AND B1.CNRC_YEAR	= @CONTRACT_YEAR
								AND B1.ESS_FLAG		= 'Y'
					LEFT OUTER JOIN HBS700T_DTL B2
								 ON A.COMP_CODE		= B2.COMP_CODE
								AND A.PERSON_NUMB	= B2.PERSON_NUMB
								AND B2.CNRC_YEAR	= @CONTRACT_YEAR
								AND B2.ESS_FLAG		= 'Y'
					LEFT OUTER JOIN	BSA100T M1
								 ON A.COMP_CODE		= M1.COMP_CODE
								AND A.ABIL_CODE		= M1.SUB_CODE
								AND M1.MAIN_CODE	= 'H006'
					LEFT OUTER JOIN	BSA100T M2
								 ON A.COMP_CODE		= M2.COMP_CODE
								AND A.POST_CODE		= M2.SUB_CODE
								AND M2.MAIN_CODE	= 'H005'
					LEFT OUTER JOIN (
										SELECT A.COMP_CODE
											 , @CNRC_YEAR AS CNRC_YEAR
											 , MAX(CASE WHEN A.WAGES_CODE = 'ANNUAL_SALARY_I'	THEN A.RMK ELSE '' END)	AS RMK_ANNUAL_SALARY_I
											 , MAX(CASE WHEN A.WAGES_CODE = 'BSE_AMT'			THEN A.RMK ELSE '' END)	AS RMK_BSE_AMT
											 , MAX(CASE WHEN A.WAGES_CODE = 'BNS_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_BNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'MNGM_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_MNGM_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'CNWK_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_CNWK_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'ABIL_ASST_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_ABIL_ASST_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'RSP_EXPN'			THEN A.RMK ELSE '' END)	AS RMK_RSP_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'CHFD_ASST_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_CHFD_ASST_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'BZNS_PRGS_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_BZNS_PRGS_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'TCHN_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_TCHN_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'BZNS_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_BZNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'DEV_BZNS_ALWN'		THEN A.RMK ELSE '' END)	AS RMK_DEV_BZNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'FMLY_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_FMLY_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'SCEXP_ASST_ALWN'	THEN A.RMK ELSE '' END)	AS RMK_SCEXP_ASST_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'TRET_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_TRET_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'MERIT_PAY'			THEN A.RMK ELSE '' END)	AS RMK_MERIT_PAY
											 , MAX(CASE WHEN A.WAGES_CODE = 'MOD_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_MOD_ALWN
										  FROM HBS701T A WITH (NOLOCK)														
										 WHERE A.COMP_CODE	= @COMP_CODE
										   AND A.CNRC_YEAR	= @CNRC_YEAR
										 GROUP BY A.COMP_CODE
									) E
									 ON A.COMP_CODE = E.COMP_CODE
			 WHERE A.COMP_CODE		= @COMP_CODE
			   AND ((@PERSON_NUMB	= '') OR (A.PERSON_NUMB	 = @PERSON_NUMB))
			   AND ((@DEPT_CODE_FR	= '') OR (A.DEPT_CODE   &gt;= @DEPT_CODE_FR))
			   AND ((@DEPT_CODE_TO	= '') OR (A.DEPT_CODE   &lt;= @DEPT_CODE_TO))
			   --AND A.EMPLOY_TYPE	= '4'
		
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	
	<select id="selectPrintPromotion" parameterType="Map" resultType="rMap" >
	    /* hbs700rkrServiceImpl.selectPrintPromotion  */
		BEGIN
			SET NOCOUNT    ON
			SET ARITHABORT ON
		    
		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------    
			DECLARE @COMP_CODE				NVARCHAR(08)        --	법인코드
				  , @CONTRACT_YEAR			NVARCHAR(04)        --	계약년도
				  , @DEPT_CODE_FR			NVARCHAR(20)		--	부서코드_FR
				  , @DEPT_CODE_TO			NVARCHAR(20)		--	부서코드_TO
				  , @PERSON_NUMB			NVARCHAR(40)        --	사번
				  , @CNRC_YEAR				NVARCHAR(04)
		          
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @CONTRACT_YEAR	= #{CNRC_YEAR}
			SET @DEPT_CODE_FR	= ISNULL('${DEPT_CODE_FR}', '')
			SET @DEPT_CODE_TO	= ISNULL('${DEPT_CODE_TO}', '')
			SET @PERSON_NUMB	= ISNULL('${PERSON_NUMB}', '')
		
			SELECT @CNRC_YEAR = MAX(CNRC_YEAR)
			  FROM HBS701T WITH (NOLOCK)
			 WHERE COMP_CODE  = @COMP_CODE
			   AND CNRC_YEAR &lt;= @CONTRACT_YEAR
			
			SELECT A.COMP_CODE
				 , A.PERSON_NUMB
				 , A.ABIL_CODE
				 , M1.CODE_NAME AS ABIL_NAME
				 , A.POST_CODE
				 , M2.CODE_NAME AS POST_NAME
				 , D.REPRE_NAME
				 , D.COMP_NAME
				 , A.NAME
				 , ISNULL(H3.IMAGE_PATH,'') AS PERSONAL_SIGN_PATH
				 , CASE WHEN ISNULL(B2.AGRN_YN, '') = '' THEN 'N' ELSE 'Y' END	AS PROMOTION_YN
				 , ISNULL(B2.TEMPC_03, '')										AS PROMOTE_DATE
				 /* 수당 항목 */
				 , ISNULL(B2.BSE_AMT			,0) AS BSE_AMT						/* 기본급 */		
				 , ISNULL(B2.BNS_ALWN			,0) AS BNS_ALWN						/* 상여수당 */	
				 , ISNULL(B2.MNGM_ALWN			,0) AS MNGM_ALWN					/* 관리업무수당 */	
				 , ISNULL(B2.CNWK_ALWN			,0) AS CNWK_ALWN					/* 근속수당 */	
				 , ISNULL(B2.ABIL_ASST_EXPN		,0) AS ABIL_ASST_EXPN				/* 직급보조비 */	
				 , ISNULL(B2.RSP_EXPN			,0) AS RSP_EXPN						/* 효도휴가비 */			
				 , ISNULL(B2.CHFD_ASST_EXPN		,0) AS CHFD_ASST_EXPN				/* 급식보조비 */		
				 , ISNULL(B2.BZNS_PRGS_EXPN		,0) AS BZNS_PRGS_EXPN				/* 직책급 업무추진비 */		
				 , ISNULL(B2.TCHN_ALWN			,0) AS TCHN_ALWN					/* 기술자격수당 */
				 , ISNULL(B2.BZNS_ALWN			,0) AS BZNS_ALWN					/* 업무수당 */			
				 , ISNULL(B2.DEV_BZNS_ALWN		,0) AS DEV_BZNS_ALWN				/* 개발업무수당 */			
				 , ISNULL(B2.FMLY_ALWN			,0) AS FMLY_ALWN					/* 가족수당 */			
				 , ISNULL(B2.SCEXP_ASST_ALWN	,0) AS SCEXP_ASST_ALWN				/* 학비보조수당 */
				 , ISNULL(B2.TRET_ALWN			,0) AS TRET_ALWN					/* 대우수당 */
				 , ISNULL(B2.MERIT_PAY			,0) AS MERIT_PAY					/* 성과연봉 */		
				 , ISNULL(B2.MOD_ALWN			,0) AS MOD_ALWN						/* 조정수당 */
				 , ISNULL(B2.ANNUAL_SALARY_I	,0) AS ANNUAL_SALARY_I				/* 연봉 */
				 , ISNULL(B2.WAGES_STD_I		,0) AS WAGES_STD_I					/* 월지급액 */
				 , ISNULL(B2.ADD_AMT			,0) AS ADD_AMT						/*가산금액*/	
				 , ISNULL(B2.SUB_AMT			,0) AS SUB_AMT						/*감산금액*/
				 /* 월 가 합계 */
				 , ISNULL(B2.BSE_AMT			,0) 
				 + ISNULL(B2.BNS_ALWN			,0) 
				 + ISNULL(B2.MNGM_ALWN			,0) 
				 + ISNULL(B2.CNWK_ALWN			,0) 
				 + ISNULL(B2.ABIL_ASST_EXPN		,0)
				 + ISNULL(B2.RSP_EXPN			,0) 
				 + ISNULL(B2.CHFD_ASST_EXPN		,0) AS M_GA_SUB_TOT		/* 월 가 합계 */
				 /* 월 나 합계 */
				 , ISNULL(B2.BZNS_PRGS_EXPN		,0) 
				 + ISNULL(B2.TCHN_ALWN			,0) 
				 + ISNULL(B2.BZNS_ALWN			,0) 
				 + ISNULL(B2.DEV_BZNS_ALWN		,0) 
				 + ISNULL(B2.FMLY_ALWN			,0)
				 + ISNULL(B2.SCEXP_ASST_ALWN	,0)
				 + ISNULL(B2.TRET_ALWN			,0)
				 + ISNULL(B2.MOD_ALWN			,0) AS M_NA_SUB_TOT		/* 월 나 합계 */
				 /* 월 전체 합계 */
				 , ISNULL(B2.BSE_AMT			,0)
				 + ISNULL(B2.BNS_ALWN			,0)
				 + ISNULL(B2.MNGM_ALWN			,0)
				 + ISNULL(B2.CNWK_ALWN			,0)
				 + ISNULL(B2.ABIL_ASST_EXPN		,0)
				 + ISNULL(B2.RSP_EXPN			,0)
				 + ISNULL(B2.CHFD_ASST_EXPN		,0)
				 + ISNULL(B2.BZNS_PRGS_EXPN		,0)
				 + ISNULL(B2.TCHN_ALWN			,0)
				 + ISNULL(B2.BZNS_ALWN			,0)
				 + ISNULL(B2.DEV_BZNS_ALWN		,0)
				 + ISNULL(B2.FMLY_ALWN			,0)
				 + ISNULL(B2.SCEXP_ASST_ALWN	,0)
				 + ISNULL(B2.TRET_ALWN			,0)
				 + ISNULL(B2.MOD_ALWN			,0)	AS M_TOT			/* 월 전체 합계 */
				 /* 연봉 가 합계 */
				 , (ISNULL(B2.BSE_AMT			,0) * 12) 
				 + (ISNULL(B2.BNS_ALWN			,0) * 12) 
				 + (ISNULL(B2.MNGM_ALWN			,0) * 12) 
				 + (ISNULL(B2.CNWK_ALWN			,0) * 12) 
				 + (ISNULL(B2.ABIL_ASST_EXPN	,0) * 12)
				 + (ISNULL(B2.RSP_EXPN			,0) * 12) 
				 + (ISNULL(B2.CHFD_ASST_EXPN	,0) * 12) AS Y_GA_SUB_TOT		/* 연봉 가 합계 */
				 /* 연봉 나 합계 */
				 , (ISNULL(B2.BZNS_PRGS_EXPN	,0) * 12) 
				 + (ISNULL(B2.TCHN_ALWN			,0) * 12) 
				 + (ISNULL(B2.BZNS_ALWN			,0) * 12) 
				 + (ISNULL(B2.DEV_BZNS_ALWN		,0) * 12) 
				 + (ISNULL(B2.FMLY_ALWN			,0) * 12)
				 + (ISNULL(B2.SCEXP_ASST_ALWN	,0) * 12)
				 + (ISNULL(B2.TRET_ALWN			,0) * 12)
				 + (ISNULL(B2.MOD_ALWN			,0) * 12) AS Y_NA_SUB_TOT		/* 연봉 나 합계 */
				 /* 연봉 전체 합계 */
				 , (ISNULL(B2.BSE_AMT			,0) * 12)
				 + (ISNULL(B2.BNS_ALWN			,0) * 12)
				 + (ISNULL(B2.MNGM_ALWN			,0) * 12)
				 + (ISNULL(B2.CNWK_ALWN			,0) * 12)
				 + (ISNULL(B2.ABIL_ASST_EXPN	,0) * 12)
				 + (ISNULL(B2.RSP_EXPN			,0) * 12)
				 + (ISNULL(B2.CHFD_ASST_EXPN	,0) * 12)
				 + (ISNULL(B2.BZNS_PRGS_EXPN	,0) * 12)
				 + (ISNULL(B2.TCHN_ALWN			,0) * 12)
				 + (ISNULL(B2.BZNS_ALWN			,0) * 12)
				 + (ISNULL(B2.DEV_BZNS_ALWN		,0) * 12)
				 + (ISNULL(B2.FMLY_ALWN			,0) * 12)
				 + (ISNULL(B2.SCEXP_ASST_ALWN	,0) * 12)
				 + (ISNULL(B2.TRET_ALWN			,0) * 12)
				 + (ISNULL(B2.MOD_ALWN			,0) * 12) AS Y_TOT			  	/* 연봉 전체 합계 */
				 /* 산출내역서 - 비고 */
				 , E.RMK_ANNUAL_SALARY_I
				 , E.RMK_BSE_AMT
				 , E.RMK_BNS_ALWN
				 , E.RMK_MNGM_ALWN
				 , E.RMK_CNWK_ALWN
				 , E.RMK_ABIL_ASST_EXPN
				 , E.RMK_RSP_EXPN
				 , E.RMK_CHFD_ASST_EXPN
				 , E.RMK_BZNS_PRGS_EXPN
				 , E.RMK_TCHN_ALWN
				 , E.RMK_BZNS_ALWN
				 , E.RMK_DEV_BZNS_ALWN
				 , E.RMK_FMLY_ALWN
				 , E.RMK_SCEXP_ASST_ALWN
				 , E.RMK_TRET_ALWN
				 , E.RMK_MERIT_PAY
				 , E.RMK_MOD_ALWN
			  FROM HUM100T A															
					INNER JOIN		BOR100T D
								 ON A.COMP_CODE		= D.COMP_CODE
					LEFT OUTER JOIN HEA091T H3
								 ON A.COMP_CODE		= H3.COMP_CODE
								AND A.PERSON_NUMB	= H3.PERSON_NUMB
					INNER JOIN		HBS700T B1
								 ON A.COMP_CODE		= B1.COMP_CODE
								AND A.PERSON_NUMB	= B1.PERSON_NUMB
								AND B1.CNRC_YEAR	= @CONTRACT_YEAR
								AND B1.ESS_FLAG		= 'Y'
					INNER JOIN		HBS700T_DTL B2
								 ON A.COMP_CODE		= B2.COMP_CODE
								AND A.PERSON_NUMB	= B2.PERSON_NUMB
								AND B2.CNRC_YEAR	= @CONTRACT_YEAR
								AND B2.ESS_FLAG		= 'Y'
					LEFT OUTER JOIN	BSA100T M1
								 ON A.COMP_CODE		= M1.COMP_CODE
								AND A.ABIL_CODE		= M1.SUB_CODE
								AND M1.MAIN_CODE	= 'H006'
					LEFT OUTER JOIN	BSA100T M2
								 ON A.COMP_CODE		= M2.COMP_CODE
								AND A.POST_CODE		= M2.SUB_CODE
								AND M2.MAIN_CODE	= 'H005'
					LEFT OUTER JOIN (
										SELECT A.COMP_CODE
											 , @CNRC_YEAR AS CNRC_YEAR
											 , MAX(CASE WHEN A.WAGES_CODE = 'ANNUAL_SALARY_I'	THEN A.RMK ELSE '' END)	AS RMK_ANNUAL_SALARY_I
											 , MAX(CASE WHEN A.WAGES_CODE = 'BSE_AMT'			THEN A.RMK ELSE '' END)	AS RMK_BSE_AMT
											 , MAX(CASE WHEN A.WAGES_CODE = 'BNS_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_BNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'MNGM_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_MNGM_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'CNWK_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_CNWK_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'ABIL_ASST_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_ABIL_ASST_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'RSP_EXPN'			THEN A.RMK ELSE '' END)	AS RMK_RSP_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'CHFD_ASST_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_CHFD_ASST_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'BZNS_PRGS_EXPN'	THEN A.RMK ELSE '' END)	AS RMK_BZNS_PRGS_EXPN
											 , MAX(CASE WHEN A.WAGES_CODE = 'TCHN_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_TCHN_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'BZNS_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_BZNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'DEV_BZNS_ALWN'		THEN A.RMK ELSE '' END)	AS RMK_DEV_BZNS_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'FMLY_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_FMLY_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'SCEXP_ASST_ALWN'	THEN A.RMK ELSE '' END)	AS RMK_SCEXP_ASST_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'TRET_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_TRET_ALWN
											 , MAX(CASE WHEN A.WAGES_CODE = 'MERIT_PAY'			THEN A.RMK ELSE '' END)	AS RMK_MERIT_PAY
											 , MAX(CASE WHEN A.WAGES_CODE = 'MOD_ALWN'			THEN A.RMK ELSE '' END)	AS RMK_MOD_ALWN
										  FROM HBS701T A WITH (NOLOCK)														
										 WHERE A.COMP_CODE	= @COMP_CODE
										   AND A.CNRC_YEAR	= @CNRC_YEAR
										 GROUP BY A.COMP_CODE
									) E
									 ON A.COMP_CODE = E.COMP_CODE
			 WHERE A.COMP_CODE		= @COMP_CODE
			   AND ((@PERSON_NUMB	= '') OR (A.PERSON_NUMB	 = @PERSON_NUMB))
			   AND ((@DEPT_CODE_FR	= '') OR (A.DEPT_CODE   &gt;= @DEPT_CODE_FR))
			   AND ((@DEPT_CODE_TO	= '') OR (A.DEPT_CODE   &lt;= @DEPT_CODE_TO))
			   --AND A.EMPLOY_TYPE	= '4'
		
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

</mapper>