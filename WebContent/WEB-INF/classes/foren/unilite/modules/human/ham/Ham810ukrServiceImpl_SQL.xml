<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ham810ukrServiceImpl">
<select id="ham810ukrServiceImpl.selectColumns" parameterType="String" resultType="rMap">
   BEGIN
     
   
         DECLARE @COMP_CODE         NVARCHAR(10)
               , @COMPANY_CODE      NVARCHAR(08)
   
         SET @COMP_CODE         = #{comp_code}
         SET @COMPANY_CODE      = N'1'
   
         SELECT 
                A.EMPLOY_RATE
              , A.BUSI_SHARE_RATE
              , A.WORKER_COMPEN_RATE
           FROM HBS400T AS A WITH(NOLOCK)
          WHERE A.COMP_CODE       = @COMP_CODE
            AND A.COMPANY_CODE    = @COMPANY_CODE
   
   END
	</select>
	<select id="ham810ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
			--ham810ukrv.Cham810krv[fnHam810QStd] QUERY01
			/*******************************************************************************************
			    일용직급여(일별) 조회
			*******************************************************************************************/
			SELECT 
			     A.COMP_CODE 
			   , A.DIV_CODE              
			   , B.DEPT_NAME       --부서
			   , B.PERSON_NUMB     --사번
			   , B.NAME            --이름
			   , A.PAY_YYYYMM      --급여년월
			   , A.SUPP_DATE       --지급일자
			   , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.DUTY_YYYYMMDD) AS DUTY_YYYYMMDD   --근무일자
			
			   , A.WAGES_STD_I          --기본급
			   , A.DUTY_TIME_01         --연장수당1코드01
			   , A.DUTY_MINU_01         --연장수당1코드02
			   , A.AMOUNT_I_01          --연장수당
			   , A.DUTY_TIME_02         --연장수당2코드01
			   , A.DUTY_MINU_02         --연장수당2코드02
			   , A.AMOUNT_I_02          --야간수당
			   , A.SUPP_TOTAL_I         --지급액
			
			   , A.TAX_EXEMPTION_I      --비과세소득
			   , A.IN_TAX_I             --소득세
			   , A.LOCAL_TAX_I          --주민세
			   , A.HIR_INSUR_I          --고용보험금액
			   , A.REAL_AMOUNT_I        --실지급액
			
			  FROM            HAM810T AS A WITH(NOLOCK)
			       INNER JOIN HUM100T AS B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
			                                         AND B.PERSON_NUMB   = A.PERSON_NUMB
			
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}
			   AND A.PAY_YYYYMM  = REPLACE(#{PAY_YYYYMM},'.','')
			   AND A.PERSON_NUMB = #{PERSON_NUMB}
			     <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			   AND A.DIV_CODE    LIKE #{DIV_CODE}
			    </if> 
			   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			   AND B.DEPT_CODE   LIKE #{DEPT_CODE} 
			   </if> 
			   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">
			   AND B.DEPT_NAME   LIKE #{DEPT_CODE2}
               </if>
	</select>

    <insert id="ham810ukrServiceImpl.insertList"  parameterType="Map" useGeneratedKeys="false">
			--ham810ukrv.Cham810krv[fnHam810save] Query03
			/*******************************************************************************************
			일용근로소득내역 저장
			*******************************************************************************************/
	DECLARE @CLOSE_TYPE      NVARCHAR(2)
	SELECT @CLOSE_TYPE = unilite.fnCloseYN('1', REPLACE(#{PAY_YYYYMM},'.',''), #{S_COMP_CODE})
		IF  @CLOSE_TYPE = 'N'     
			BEGIN  
				INSERT INTO HAM810T
				(
				    COMP_CODE
				  , DIV_CODE
				  , PAY_YYYYMM
				  , PERSON_NUMB
				  , PAY_YYYY
				  , QUARTER_TYPE
				  , SUPP_DATE
				  , DUTY_YYYYMMDD
				  , WAGES_STD_I
				  , AMOUNT_I_01
				  <if test="@foren.Ognl@isNotEmpty(DUTY_TIME_01)">
				  , DUTY_TIME_01</if>
				  <if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				  , DUTY_MINU_01</if>
				  , AMOUNT_I_02
				  <if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				  , DUTY_TIME_02</if>
				  <if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				  , DUTY_MINU_02</if>
				  , SUPP_TOTAL_I
				  <if test="@foren.Ognl@isNotEmpty(REAL_AMOUNT_I)">
				  , REAL_AMOUNT_I</if>
				  , TAX_EXEMPTION_I
				  , IN_TAX_I
				  , LOCAL_TAX_I
				  , HIR_INSUR_I
				  , INSERT_DB_USER
				  , INSERT_DB_TIME
				  , UPDATE_DB_USER
				  , UPDATE_DB_TIME
				)
				VALUES
				(
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, REPLACE(#{PAY_YYYYMM},'.','')
				, #{PERSON_NUMB}
				, LEFT(#{PAY_YYYYMM},4)
				, uniLite.fnGetQuaterType(REPLACE(#{PAY_YYYYMM},'.',''))
				, REPLACE(#{SUPP_DATE},'.','')
				, REPLACE(#{DUTY_YYYYMMDD},'.','')
				, #{WAGES_STD_I}
				, #{AMOUNT_I_01}
				<if test="@foren.Ognl@isNotEmpty(DUTY_TIME_01)">
				, #{DUTY_TIME_01}</if>
				<if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				, #{DUTY_MINU_01}</if>
				, #{AMOUNT_I_02}
				<if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				, #{DUTY_TIME_02}</if>
				<if test="@foren.Ognl@isNotEmpty(DUTY_MINU_01)">
				, #{DUTY_MINU_02}</if>
				, #{SUPP_TOTAL_I}
				<if test="@foren.Ognl@isNotEmpty(REAL_AMOUNT_I)">
				, #{REAL_AMOUNT_I}</if>
				, #{TAX_EXEMPTION_I}
				, #{IN_TAX_I}
				, #{LOCAL_TAX_I}
				, #{HIR_INSUR_I}
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
				)	
		END
		  
		    BEGIN 			
				SELECT MSG_NO                         
						 , MSG_DESC
				FROM BSA000T                        
				WHERE MSG_NO  = 54240
				AND MSG_TYPE = 1
					
        END	
	 </insert>
     <update id="ham810ukrServiceImpl.updateList"  parameterType="Map">
			--ham810ukrv.Cham810krv[fnHam810save] Query04
			/*******************************************************************************************
			일용근로소득내역 저장
			*******************************************************************************************/
			BEGIN
			    SET NOCOUNT ON
			    SET ARITHABORT ON
			
			UPDATE HAM810T
			   SET WAGES_STD_I     = #{S_COMP_CODE}
			     , AMOUNT_I_01     = #{AMOUNT_I_01}
			     , AMOUNT_I_02     = #{AMOUNT_I_02}
			     , SUPP_TOTAL_I    = #{SUPP_TOTAL_I}
			     , REAL_AMOUNT_I   = #{REAL_AMOUNT_I}
			     , TAX_EXEMPTION_I = #{TAX_EXEMPTION_I}
			     , IN_TAX_I        = #{IN_TAX_I}
			     , LOCAL_TAX_I     = #{LOCAL_TAX_I}
			     , HIR_INSUR_I     = #{HIR_INSUR_I}
			     , UPDATE_DB_USER  = #{S_USER_ID}
			     , UPDATE_DB_TIME  = GETDATE()
			 WHERE COMP_CODE     = #{S_COMP_CODE}
			   AND DIV_CODE      = #{DIV_CODE}
			   AND PERSON_NUMB   = #{PERSON_NUMB}
			   AND PAY_YYYYMM    = REPLACE(#{PAY_YYYYMM},'.','')
			   AND DUTY_YYYYMMDD = REPLACE(#{DUTY_YYYYMMDD},'.','')
			
			    SET NOCOUNT OFF
			    SET ARITHABORT OFF
			END	
  
	</update>
	<delete id="ham810ukrServiceImpl.deleteList"  parameterType="Map">
	--ham810ukrv.Cham810krv[fnHam810save] Query02
	/*******************************************************************************************
	 분기별 일용근로소득 삭제
	*******************************************************************************************/
	BEGIN
	      SET NOCOUNT ON
	      SET ARITHABORT ON
	DELETE FROM HAM810T
	 WHERE COMP_CODE     = #{S_COMP_CODE}
	   AND DIV_CODE      = #{DIV_CODE}
	   AND PERSON_NUMB   = #{PERSON_NUMB}
	   AND PAY_YYYYMM    = REPLACE(#{PAY_YYYYMM},'.','')
	   AND DUTY_YYYYMMDD = REPLACE(#{DUTY_YYYYMMDD},'.','')
	
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</delete>
	
</mapper>