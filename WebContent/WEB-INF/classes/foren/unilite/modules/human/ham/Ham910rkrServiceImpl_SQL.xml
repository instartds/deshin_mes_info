<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ham910rkrServiceImpl">
	<select id="ham910rkrServiceImpl.fnHam911nQ" parameterType="Map" resultType="rMap" >	
	--ham910rkr.CHam910rkr[fnHam911nQ]
	    SELECT TOP 5 A.PERSON_NUMB 
	     FROM  HUM100T A WITH (NOLOCK) 
	                     INNER JOIN HAM800T M1 WITH (NOLOCK)
	                        ON A.COMP_CODE    = M1.COMP_CODE
	                       AND A.PERSON_NUMB  = M1.PERSON_NUMB
	                     INNER JOIN BOR120T M2 WITH (NOLOCK)
	                        ON A.COMP_CODE    = M2.COMP_CODE
	                       AND A.SECT_CODE    = M2.DIV_CODE
	                     INNER JOIN HPA600T M3 WITH (NOLOCK) 
	                        ON A.COMP_CODE    = M3.COMP_CODE
	                       AND A.PERSON_NUMB  = M3.PERSON_NUMB
	                       AND M3.PERSON_NUMB = M1.PERSON_NUMB
	                       AND M3.PAY_YYYYMM  = M1.PAY_YYYYMM
	    WHERE A.COMP_CODE            = #{S_COMP_CODE}
	      AND M1.PAY_YYYY            = #{PAY_YYYY}
	      AND M1.QUARTER_TYPE        = #{QUARTER_TYPE}
	   
	    <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
		   AND A.SECT_CODE 	= #{BILL_DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	       AND A.DEPT_CODE IN
			<foreach collection="DEPT_CODE" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE 	= #{PAY_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB 	= #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		   AND M1.SUPP_DATE 	= #{SUPP_DATE}
		</if>
	    
	    GROUP BY A.PERSON_NUMB
	    ORDER BY A.PERSON_NUMB 	      
	</select>
	
	<select id="ham910rkrServiceImpl.fnHam911nQ_2" parameterType="Map" resultType="rMap" >
		--ham910rkr.CHam910rkr[fnHam911nQ]
	    SELECT TOP 5 '1'            AS GUBUN
	         , M1.DIV_FULL_NAME                      -- 상호
	         , M1.REPRE_NAME                         -- 대표자성명
	         , SUBSTRING(M1.COMPANY_NUM, 1,3) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 4,2) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 6,5) AS COMPANY_NUM -- 사업자등록번호
	         , SUBSTRING(M2.COMP_OWN_NO, 1,6) + '-' +   
               SUBSTRING(M2.COMP_OWN_NO, 7,7) AS COMP_OWN_NO -- 법인등록번호
	         , M1.ADDR              AS COMP_ADDR     -- 소재지
	         , M1.TELEPHON          AS COMP_TEL      -- 지급자전화번호
	         , M1.EMAIL                              -- 지급자이메일
	         , B.PAY_YYYY                            -- 귀속연도
	         , B.QUARTER_TYPE                        -- 지급분기
	         , D.SUBMIT_COUNT                        --제출자료건수
	         , C.TOTAL_AMOUNT_I                      --과세소득합계
	         , C.NON_TAX_I                           --비과세소득합계
	         , C.INC_AMOUNT_I                        --소득세합계
	         , C.LOC_AMOUNT_I                        --주민세합계
	         , A.PERSON_NUMB                         --소득자사번              
	         , A.NAME                                --소득자성명
	         , CASE WHEN ISNULL(A.TELEPHON, '') = '' THEN A.PHONE_NO ELSE A.TELEPHON END AS  TELEPHON
	         , B.IN_FORE                             --외국인여부
	         , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A') AS REPRE_NUM
	         , LEFT(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),6)  AS REPRE_NUM1    --소득자주민번호1
	         , RIGHT(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),7) AS REPRE_NUM2    --소득자주민번호2 
			 , A.KOR_ADDR
	      FROM            HUM100T   AS A WITH (NOLOCK)
	           INNER JOIN HAM900T   AS B  WITH (NOLOCK)  ON A.COMP_CODE    = B.COMP_CODE
	                                                    AND A.PERSON_NUMB  = B.PERSON_NUMB  
	           INNER JOIN BOR120T   AS M1 WITH (NOLOCK)  ON A.COMP_CODE    = M1.COMP_CODE
	                                                    AND A.SECT_CODE    = M1.DIV_CODE  
	           INNER JOIN BOR100T   AS M2 WITH (NOLOCK)  ON A.COMP_CODE    = M2.COMP_CODE
	           INNER JOIN (SELECT A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYY, A.QUARTER_TYPE
	                            , SUM(ISNULL(A.SUPP_TOTAL_I,0))    AS TOTAL_AMOUNT_I
	                            , SUM(ISNULL(A.TAX_EXEMPTION_I,0)) AS NON_TAX_I
	                            , SUM(ISNULL(A.IN_TAX_I,0))        AS INC_AMOUNT_I 
	                            , SUM(ISNULL(A.LOCAL_TAX_I,0))     AS LOC_AMOUNT_I
	                         FROM            HAM800T AS A WITH (NOLOCK)
	                              INNER JOIN HUM100T AS B WITH (NOLOCK)
	                                      ON A.COMP_CODE   = B.COMP_CODE
	                                     AND A.PERSON_NUMB = B.PERSON_NUMB
	                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
	                          AND A.QUARTER_TYPE = #{QUARTER_TYPE}	                        
	                        GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYY, A.QUARTER_TYPE
	                       )AS C ON A.COMP_CODE    = C.COMP_CODE
	                                                                                            AND A.PERSON_NUMB  = C.PERSON_NUMB
	                                                                                            AND B.PAY_YYYY     = C.PAY_YYYY
	                                                                                            AND B.QUARTER_TYPE = C.QUARTER_TYPE
	             INNER JOIN (SELECT COUNT(A.WORK_MM) AS SUBMIT_COUNT
	                              , A.COMP_CODE, A.PAY_YYYY, A.QUARTER_TYPE
	                           FROM            HAM800T AS A WITH (NOLOCK)
	                                INNER JOIN HUM100T AS B WITH (NOLOCK)
	                                        ON A.COMP_CODE   = B.COMP_CODE
	                                       AND A.PERSON_NUMB = B.PERSON_NUMB
	                          WHERE A.COMP_CODE    = #{S_COMP_CODE}
	                            AND A.QUARTER_TYPE = #{QUARTER_TYPE}
	                          GROUP BY A.COMP_CODE, A.PAY_YYYY, A.QUARTER_TYPE )AS D ON A.COMP_CODE    = D.COMP_CODE 
	                                                                                AND B.PAY_YYYY     = D.PAY_YYYY
	                                                                                AND B.QUARTER_TYPE = D.QUARTER_TYPE
	     WHERE A.COMP_CODE    = #{S_COMP_CODE}
	       AND B.PAY_YYYY     = #{PAY_YYYY}
	       AND B.QUARTER_TYPE = #{QUARTER_TYPE}
	    <if test="@foren.Ognl@isNotEmpty(strPer)">
	       AND C.PERSON_NUMB IN
			<foreach collection="strPer" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if> 
	    
	    <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
		   AND A.SECT_CODE 	= #{BILL_DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	       AND A.DEPT_CODE IN
			<foreach collection="DEPT_CODE" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE 	= #{PAY_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB 	= #{PERSON_NUMB}
		</if>
	    UNION ALL
	
	    SELECT '2'                  AS GUBUN
	         , M1.DIV_FULL_NAME                      -- 상호
	         , M1.REPRE_NAME                         -- 대표자성명
	         , SUBSTRING(M1.COMPANY_NUM, 1,3) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 4,2) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 6,5) AS COMPANY_NUM -- 사업자등록번호
	         , M2.COMP_OWN_NO                        -- 법인등록번호
	         , M1.ADDR              AS COMP_ADDR     -- 소재지
	         , M1.TELEPHON          AS COMP_TEL      -- 지급자전화번호
	         , M1.EMAIL                              -- 지급자이메일
	         , B.PAY_YYYY                            -- 귀속연도
	         , B.QUARTER_TYPE                        -- 지급분기
	         , D.SUBMIT_COUNT                        --제출자료건수
	         , C.TOTAL_AMOUNT_I                      --과세소득합계
	         , C.NON_TAX_I                           --비과세소득합계
	         , C.INC_AMOUNT_I                        --소득세합계
	         , C.LOC_AMOUNT_I                        --주민세합계
	         , A.PERSON_NUMB                         --소득자사번              
	         , A.NAME                                --소득자성명
	         , CASE WHEN ISNULL(A.TELEPHON, '') = '' THEN A.PHONE_NO ELSE A.TELEPHON END AS  TELEPHON
	         , B.IN_FORE                             --외국인여부
	         , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A') AS REPRE_NUM
	         , LEFT(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),6)  AS REPRE_NUM1    --소득자주민번호1
	         , RIGHT(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),7) AS REPRE_NUM2    --소득자주민번호2 
			 , A.KOR_ADDR
	      FROM            HUM100T   AS A WITH (NOLOCK)
	           INNER JOIN HAM900T   AS B  WITH (NOLOCK)  ON A.COMP_CODE    = B.COMP_CODE
	                                                    AND A.PERSON_NUMB  = B.PERSON_NUMB  
	           INNER JOIN BOR120T   AS M1 WITH (NOLOCK)  ON A.COMP_CODE    = M1.COMP_CODE
	                                                    AND A.SECT_CODE    = M1.DIV_CODE  
	           INNER JOIN BOR100T   AS M2 WITH (NOLOCK)  ON A.COMP_CODE    = M2.COMP_CODE
	           INNER JOIN (SELECT A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYY, A.QUARTER_TYPE
	                            , SUM(ISNULL(A.SUPP_TOTAL_I,0))    AS TOTAL_AMOUNT_I
	                            , SUM(ISNULL(A.TAX_EXEMPTION_I,0)) AS NON_TAX_I
	                            , SUM(ISNULL(A.IN_TAX_I,0))        AS INC_AMOUNT_I 
	                            , SUM(ISNULL(A.LOCAL_TAX_I,0))     AS LOC_AMOUNT_I
	                         FROM            HAM800T AS A WITH (NOLOCK)
	                              INNER JOIN HUM100T AS B WITH (NOLOCK)
	                                      ON A.COMP_CODE   = B.COMP_CODE
	                                     AND A.PERSON_NUMB = B.PERSON_NUMB
	                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
	                          AND A.QUARTER_TYPE = #{QUARTER_TYPE}
	                        GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYY, A.QUARTER_TYPE)AS C ON A.COMP_CODE    = C.COMP_CODE
	                                                                                            AND A.PERSON_NUMB  = C.PERSON_NUMB
	                                                                                            AND B.PAY_YYYY     = C.PAY_YYYY
	                                                                                            AND B.QUARTER_TYPE = C.QUARTER_TYPE
	           INNER JOIN (SELECT COUNT(A.WORK_MM) AS SUBMIT_COUNT
	                            , A.COMP_CODE, A.PAY_YYYY, A.QUARTER_TYPE
	                         FROM            HAM800T AS A WITH (NOLOCK)
	                              INNER JOIN HUM100T AS B WITH (NOLOCK)
	                                      ON A.COMP_CODE   = B.COMP_CODE
	                                     AND A.PERSON_NUMB = B.PERSON_NUMB
	                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
	                          AND A.QUARTER_TYPE = #{QUARTER_TYPE}
	                        GROUP BY A.COMP_CODE, A.PAY_YYYY, A.QUARTER_TYPE )AS D ON A.COMP_CODE    = D.COMP_CODE 
	                                                                              AND B.PAY_YYYY     = D.PAY_YYYY
	                                                                              AND B.QUARTER_TYPE = D.QUARTER_TYPE
	     WHERE A.COMP_CODE    = #{S_COMP_CODE}
	       AND B.PAY_YYYY     = #{PAY_YYYY}
	       AND B.QUARTER_TYPE = #{QUARTER_TYPE}
	       
	    <if test="@foren.Ognl@isNotEmpty(strPer)">
	       AND C.PERSON_NUMB NOT IN
			<foreach collection="strPer" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if>   
	    <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
		   AND A.SECT_CODE 	= #{BILL_DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	       AND A.DEPT_CODE IN
			<foreach collection="DEPT_CODE" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE 	= #{PAY_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB 	= #{PERSON_NUMB}
		</if>
	    
	     ORDER BY A.PERSON_NUMB	
	</select>
	
	<select id="ham910rkrServiceImpl.ds_sub01" parameterType="Map" resultType="rMap" >
		 --지급자제출용 SUB
		 --ham910rkr.CHam910rkr[fnHam911nQ]_Sub
	    SELECT unilite.fnCipherDecrypt(M.REPRE_NUM, 'A') AS REPRE_NUM
	         , M.PERSON_NUMB
	         , RIGHT(A.SUPP_YYYYMM,2) AS SUPP_YYYYMM
	         , A.WORK_MM
	         , A.WORK_DAY
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(A.SUPP_TOTAL_I,0)))    AS SUPP_TOTAL_I
	         --, CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(12345678,0)))    AS SUPP_TOTAL_I
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(A.TAX_EXEMPTION_I,0))) AS NON_TAX_I
	         --, CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(1234567,0))) AS NON_TAX_I
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(A.IN_TAX_I,0)))        AS INC_AMOUNT_I
	         --, CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(1234567,0)))        AS INC_AMOUNT_I
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(A.LOCAL_TAX_I,0)))     AS LOC_AMOUNT_I
	         --, CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(123456,0)))     AS LOC_AMOUNT_I
	      FROM             HUM100T AS M WITH (NOLOCK)       
	            INNER JOIN HAM800T AS A WITH (NOLOCK) ON M.COMP_CODE   = A.COMP_CODE
	                                                 AND M.PERSON_NUMB = A.PERSON_NUMB 
	     WHERE A.COMP_CODE     = #{S_COMP_CODE}
	       AND A.QUARTER_TYPE  = #{QUARTER_TYPE}
	       AND A.PAY_YYYY      = #{PAY_YYYY}
	       
	       <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND M.PERSON_NUMB 	= #{PERSON_NUMB}
		  </if>
	       
	     ORDER BY M.PERSON_NUMB, A.WORK_MM, SUPP_YYYYMM
	     
	</select>	
	
	
	
	
	<select id="ham910rkrServiceImpl.fnHam910nQ" parameterType="Map" resultType="rMap" >
		--ham910rkr.CHam910rkr[fnHam910nQ]
	    SELECT M1.DIV_FULL_NAME                      -- 상호
	         , M1.REPRE_NAME                         -- 대표자성명
	         , SUBSTRING(M1.COMPANY_NUM, 1,3) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 4,2) + '-' + 
               SUBSTRING(M1.COMPANY_NUM, 6,5) AS COMPANY_NUM -- 사업자등록번호
	         , M2.COMP_OWN_NO                        -- 법인등록번호
	         , M1.ADDR              AS COMP_ADDR     -- 소재지
	         , M1.TELEPHON          AS COMP_TEL      -- 지급자전화번호
	         , A.NATION_CODE 
	         , A.PERSON_NUMB                         --소득자사번              
	         , A.NAME                                --소득자성명
	         , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A') AS REPRE_NUM     --소득자주민등록번호
	         , A.KOR_ADDR                            --소득자주소
	         , CASE WHEN ISNULL(A.TELEPHON, '') = '' THEN A.PHONE_NO ELSE A.TELEPHON END AS  TELEPHON     --소득자전화번호
	         , B.PAY_YYYY                            --귀속연도
	         , B.QUARTER_TYPE                        --지급분기
	      FROM            HUM100T AS A WITH (NOLOCK)
	           INNER JOIN BOR120T AS M1 WITH (NOLOCK) ON A.COMP_CODE    = M1.COMP_CODE
	                                                 AND A.SECT_CODE    = M1.DIV_CODE  
	           INNER JOIN BOR100T AS M2 WITH (NOLOCK) ON A.COMP_CODE    = M2.COMP_CODE
	           INNER JOIN HAM800T AS B  WITH (NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
	                                                 AND A.PERSON_NUMB  = B.PERSON_NUMB
	     WHERE A.COMP_CODE     = #{S_COMP_CODE}
	       AND B.QUARTER_TYPE  = #{QUARTER_TYPE}
	       AND B.PAY_YYYY      = #{PAY_YYYY}
	       
		<if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
		   AND A.SECT_CODE 	= #{BILL_DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	       AND A.DEPT_CODE IN
			<foreach collection="DEPT_CODE" item="item" separator="," close=")" open="(">
					    #{item}
			</foreach>									
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE 	= #{PAY_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB 	= #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		   AND B.SUPP_DATE 	= #{SUPP_DATE}
		</if>

	    ORDER BY A.PERSON_NUMB	
	</select>
		
	<select id="ds_sub02" parameterType="Map" resultType="rMap" >
		--ham910rkr.CHam910rkr[fnHam910nQ]_SUB
	    SELECT A.PERSON_NUMB                         --소득자사번
	         , RIGHT(B.SUPP_YYYYMM,2) AS SUPP_MM     --지급월
	         , B.WORK_MM                             --근무월
	         , B.WORK_DAY                            --근무일수
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(B.SUPP_TOTAL_I,0)))    AS SUPP_TOTAL_I    --과세소득
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(B.TAX_EXEMPTION_I,0))) AS TAX_EXEMPTION_I --비과세소득
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(B.IN_TAX_I,0)))        AS IN_TAX_I        --소득세
	         , CONVERT(NVARCHAR,CONVERT(NUMERIC(18,0), ISNULL(B.LOCAL_TAX_I,0)))     AS LOCAL_TAX_I     --주민세
	      FROM            HUM100T AS A WITH (NOLOCK)
	           INNER JOIN HAM800T AS B  WITH (NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
	                                                 AND A.PERSON_NUMB  = B.PERSON_NUMB
	     WHERE A.COMP_CODE     = #{S_COMP_CODE}
	       AND B.QUARTER_TYPE  = #{QUARTER_TYPE}
	       AND B.PAY_YYYY      = #{PAY_YYYY}
		<if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		   AND B.SUPP_DATE 	= #{SUPP_DATE}
		</if>
		 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND B.PERSON_NUMB 	= #{PERSON_NUMB}
		  </if>
	    ORDER BY A.PERSON_NUMB, B.WORK_MM, SUPP_MM
	</select>	
</mapper>