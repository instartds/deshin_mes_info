<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ham805ukrService">
	
	<select id="ham805ukrService.selectList" parameterType="Map" resultType="rMap">		
         DECLARE @CompCode      NVARCHAR(08) /* 법인코드            */
               , @UserId        NVARCHAR(100) /* 사용자ID            */
      
          SET @CompCode = #{S_COMP_CODE}
          SET @UserId   = #{S_USER_ID}
         
          SELECT
				  A.COMP_CODE			
				, A.PAY_YYYYMM		
				, A.SUPP_TYPE			
				, A.PERSON_NUMB	
				, B.NAME			AS PERSON_NAME 	
				, B.REPRE_NUM
				, A.DIV_CODE			
				, A.PAY_YYYY			
				, A.QUARTER_TYPE		
				, A.SUPP_YYYYMM		
				, A.SUPP_DATE			
				, A.WORK_MM			
				, A.WORK_DAY			
				, A.SUPP_TOTAL_I		
				, A.REAL_AMOUNT_I		
				, A.TAX_EXEMPTION_I	
				, A.IN_TAX_I			
				, A.LOCAL_TAX_I		
				, A.ANU_INSUR_I		
				, A.MED_INSUR_I		
				, A.HIR_INSUR_I		
				, A.BUSI_SHARE_I		
				, A.WORKER_COMPEN_I	
				, A.EX_DATE		    
				, A.EX_NUM    		
				, A.AC_DATE		    
				, A.SLIP_NUM    	    
				, A.PJT_CODE	    	
				, A.INSERT_DB_USER	
				, A.INSERT_DB_TIME	
				
				, A.PAY_YYYYMM		AS PAY_YYYYMM_OLD
				, A.PERSON_NUMB		AS PERSON_NUMB_OLD

          FROM			  HAM800T A WITH(NOLOCK)
		  		LEFT JOIN HUM100T B WITH (NOLOCK)	ON B.COMP_CODE		= A.COMP_CODE
		  										   AND B.PERSON_NUMB	= A.PERSON_NUMB
          
          WHERE A.COMP_CODE = #{S_COMP_CODE}
            AND A.PAY_YYYYMM = #{PAY_YYYYMM}
          <if test="@foren.Ognl@isNotEmpty(SUPP_DATE_FR)">
            AND A.SUPP_DATE &gt;= #{SUPP_DATE_FR}
          </if>
          <if test="@foren.Ognl@isNotEmpty(SUPP_DATE_TO)">
            AND A.SUPP_DATE &lt;= #{SUPP_DATE_TO}
          </if>
          <if test="@foren.Ognl@isNotEmpty(SECT_CODE)">					
	        AND A.DIV_CODE IN
				<foreach collection="SECT_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
		  </if>
          <if test="@foren.Ognl@isNotEmpty(APPLY_YN)">					
			  <if test="APPLY_YN == &quot;Y&quot;">
	            AND ISNULL(A.EX_DATE, '') != ''
	          </if>	
			  <if test="APPLY_YN == &quot;N&quot;">
	            AND ISNULL(A.EX_DATE, '') = ''
	          </if>	
      	  </if> 
          <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
      	  </if> 
      	    AND A.INPUT_PATH = 'EXCEL'                   /*INPUT_PATH = 'EXCEL'인 데이터(엑셀업로드한 데이터)만 조회 되도록 수정 */
          
          ORDER BY A.SUPP_TYPE, A.PAY_YYYYMM
	</select>
	
	<insert id="ham805ukrService.insertList" parameterType="Map">
		INSERT INTO HAM800T
			(
			  COMP_CODE			
			, PAY_YYYYMM		
			, SUPP_TYPE			
			, PERSON_NUMB		
			, DIV_CODE			
			, PAY_YYYY			
			, QUARTER_TYPE		
			, SUPP_YYYYMM		
			, SUPP_DATE			
			, WORK_MM			
			, WORK_DAY			
			, SUPP_TOTAL_I		
			, REAL_AMOUNT_I		
			, TAX_EXEMPTION_I	
			, IN_TAX_I			
			, LOCAL_TAX_I		
			, ANU_INSUR_I		
			, MED_INSUR_I		
			, HIR_INSUR_I		
			, BUSI_SHARE_I		
			, WORKER_COMPEN_I	
			, EX_DATE		    
			, EX_NUM    		
			, AC_DATE		    
			, SLIP_NUM    	    
			, PJT_CODE	    	
			, INSERT_DB_USER	
			, INSERT_DB_TIME	
			 )
		 VALUES
		 	(
			  #{S_COMP_CODE}
			, #{PAY_YYYYMM}
			, #{SUPP_TYPE}
			, #{PERSON_NUMB}
			, #{DIV_CODE}
			, #{PAY_YYYY}
			, #{QUARTER_TYPE}
			, #{SUPP_YYYYMM}
			, #{SUPP_DATE}
			, #{WORK_MM}
			, #{WORK_DAY}
			, #{SUPP_TOTAL_I}
			, #{REAL_AMOUNT_I}
			, #{TAX_EXEMPTION_I}
			, #{IN_TAX_I}
			, #{LOCAL_TAX_I}
			, #{ANU_INSUR_I}
			, #{MED_INSUR_I}
			, #{HIR_INSUR_I}
			, #{BUSI_SHARE_I}
			, #{WORKER_COMPEN_I}
			, #{EX_DATE}
			, #{EX_NUM}
			, #{AC_DATE}
			, #{SLIP_NUM}
			, #{PJT_CODE}
			, #{S_USER_ID}
			, GETDATE()
		 	)
	</insert>
	
	<update id="ham805ukrService.updateList" parameterType="Map">
		UPDATE HAM800T
		   SET SUPP_TYPE		= #{SUPP_TYPE}
		     , PERSON_NUMB		= #{PERSON_NUMB}
		     , DIV_CODE			= #{DIV_CODE}
		     , PAY_YYYYMM		= #{PAY_YYYYMM}
		     , PAY_YYYY			= #{PAY_YYYY}
		     , QUARTER_TYPE		= #{QUARTER_TYPE}
		     , SUPP_YYYYMM		= #{SUPP_YYYYMM}
		     , SUPP_DATE		= #{SUPP_DATE}
		     , WORK_MM			= #{WORK_MM}
		     , WORK_DAY			= #{WORK_DAY}
		     , SUPP_TOTAL_I		= #{SUPP_TOTAL_I}
		     , TAX_EXEMPTION_I	= #{TAX_EXEMPTION_I}
		     , IN_TAX_I			= #{IN_TAX_I}
		     , LOCAL_TAX_I		= #{LOCAL_TAX_I}
		     , ANU_INSUR_I		= #{ANU_INSUR_I}
		     , MED_INSUR_I		= #{MED_INSUR_I}
		     , HIR_INSUR_I		= #{HIR_INSUR_I}
		     , BUSI_SHARE_I		= #{BUSI_SHARE_I}
		     , WORKER_COMPEN_I	= #{WORKER_COMPEN_I}
		     , REAL_AMOUNT_I	= #{REAL_AMOUNT_I}
		     , PJT_CODE			= #{PJT_CODE}
		     , EX_DATE			= #{EX_DATE}
		     , EX_NUM			= #{EX_NUM}
		     , AC_DATE			= #{AC_DATE}
		     , SLIP_NUM			= #{SLIP_NUM}
		     
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND PAY_YYYYMM	= #{PAY_YYYYMM_OLD}
		   AND SUPP_TYPE	= #{SUPP_TYPE}
		   AND PERSON_NUMB	= #{PERSON_NUMB_OLD}
	</update>
	
	<delete id="ham805ukrService.deleteList" parameterType="Map">
		DELETE FROM HAM800T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND PAY_YYYYMM	= #{PAY_YYYYMM}
		   AND SUPP_TYPE	= #{SUPP_TYPE}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
	</delete>
	
	
	
	
	
	<!-- 엑셀업로드 관련 -->
	<insert id="ham805ukrService.insertExcelham805ukrupload" parameterType="Map">		/* 엑셀 HAM800T_XLS insert */
    	/* 금액 ISNULL 처리를 위한 작업 */
    	DECLARE @SUPP_TOTAL_I	NUMERIC(30,6)
    		  , @IN_TAX_I		NUMERIC(30,6)
    		  , @LOCAL_TAX_I	NUMERIC(30,6)
    		  , @ANU_INSUR_I	NUMERIC(30,6)
    		  , @MED_INSUR_I	NUMERIC(30,6)
    		  , @HIR_INSUR_I	NUMERIC(30,6)
    		  , @REAL_AMOUNT_I	NUMERIC(30,6)
    		  
			SET @SUPP_TOTAL_I	= #{SUPP_TOTAL_I}
			SET @IN_TAX_I		= #{IN_TAX_I}
			SET @LOCAL_TAX_I	= #{LOCAL_TAX_I}
			SET @ANU_INSUR_I	= #{ANU_INSUR_I}
			SET @MED_INSUR_I	= #{MED_INSUR_I}
			SET @HIR_INSUR_I	= #{HIR_INSUR_I}
			SET @REAL_AMOUNT_I	= #{REAL_AMOUNT_I}
    	   
    	INSERT INTO HAM800T_XLS
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG
			, COMP_CODE		
			, PERSON_NAME		
			, REPRE_NUM 		
			, REPRE_NUM_EXPOS
			, PAY_YYYYMM		
			, SUPP_DATE		
			, QUARTER_TYPE	
			, WORK_MM			
			, WORK_DAY		
			, SUPP_TOTAL_I	
			, IN_TAX_I		
			, LOCAL_TAX_I		
			, ANU_INSUR_I		
			, MED_INSUR_I		
			, HIR_INSUR_I		
			, REAL_AMOUNT_I	
			, PERSON_NUMB     
			, DEPT_CODE       
			, DEPT_NAME       
			, DIV_CODE        
			, SECT_CODE       
			, PJT_CODE        
			, INSERT_DB_USER	
			, INSERT_DB_TIME	
    		 )
    	VALUES (
    		#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}
			, #{S_COMP_CODE}
			, #{NAME}
			, #{REPRE_NUM}				/* 주민등록번호 - 암호화 안 된 데이터 */
			, ''						/* 주민등록번호 - 암호화 된 데이터 */
			, REPLACE(#{PAY_YYYYMM}, '.', '')
			, #{SUPP_DATE}
			, ''						/* 분기 ('') */
			, ''						/* 근무월 ('') */
			, #{WORK_DAY}
			, ISNULL(@SUPP_TOTAL_I	, 0)
			, ISNULL(@IN_TAX_I		, 0)
			, ISNULL(@LOCAL_TAX_I	, 0)
			, ISNULL(@ANU_INSUR_I	, 0)
			, ISNULL(@MED_INSUR_I	, 0)
			, ISNULL(@HIR_INSUR_I	, 0)
			, ISNULL(@REAL_AMOUNT_I	, 0)
			, #{PERSON_NUMB}
			, #{DEPT_CODE}
			, #{DEPT_NAME}
			, #{DIV_CODE}
			, #{SECT_CODE}
			, #{PJT_CODE}
			, #{S_USER_ID}
			, GETDATE()	
			 )
	</insert>
	
	<select id="ham805ukrService.getData" parameterType="Map" resultType="rMap">
        SELECT  * FROM HAM800T_XLS WITH(NOLOCK)
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
	</select> 
	 
	<!-- 주민등록번호 컬럼 암호화 (HAM800T_XLS의 주민등록번호는 암호화 된 상태로 변경) -->
	<update id="ham805ukrService.encryTo">
		UPDATE HAM800T_XLS
		   SET REPRE_NUM_EXPOS	= #{REPRE_NUM_EXPOS}
		 WHERE _EXCEL_JOBID		= #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{_EXCEL_ROWNUM}
	</update>  
	
	<!-- 엑셀 업로드 sp 호출 -->    
	<update id="ham805ukrService.excelValidate" parameterType="Map" statementType="CALLABLE">
		{call USP_HUMAN_ham805UKR_fnUpload (
			#{COMP_CODE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{EXCEL_JOBID	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LANG_TYPE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>  

    <!-- sp에서 발생한 에러메세지 HAM800T_xls에 insert -->   
    <update id="ham805ukrService.insertErrorMsg">
    	INSERT INTO HAM800T_XLS
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG
			, COMP_CODE		
			, PERSON_NAME		
			, REPRE_NUM 		
			, REPRE_NUM_EXPOS
			, PAY_YYYYMM		
			, SUPP_DATE		
			, INSERT_DB_USER	
			, INSERT_DB_TIME	
    		 )
    	VALUES (
    		#{_EXCEL_JOBID}, 0, 'Y', #{MSG}
			, #{S_COMP_CODE}
			, ''
			, ''
			, ''
			, ''
			, ''
			, #{S_USER_ID}
			, GETDATE()	
			 )
    </update>  

    <!-- 에러메세지 유무 확인 -->   
    <select id="ham805ukrService.getErrMsg" parameterType="Map" resultType="String">
        SELECT MAX(_EXCEL_ERROR_MSG) AS ERR_MSG
          FROM HAM800T_XLS WITH(NOLOCK)
         WHERE _EXCEL_JOBID                 = #{jobID}
          AND _EXCEL_HAS_ERROR				= 'Y'
          AND ISNULL(_EXCEL_ERROR_MSG, '') != ''
    </select>

    <!-- temp table(HAM800T_XLS) 삭제 -->   
    <update id="ham805ukrService.deleteTemp" parameterType="Map">
        DELETE
          FROM HAM800T_XLS
         WHERE _EXCEL_JOBID                 = #{jobID}
    </update>
	
</mapper>