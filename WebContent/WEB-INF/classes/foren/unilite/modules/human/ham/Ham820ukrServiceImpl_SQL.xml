<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ham820ukrServiceImpl">
	<select id="ham820ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		<if test="ACCEPT_STATUS == &quot;1&quot;"> 							
			DECLARE @COMP_CODE			NVARCHAR(08)
			      , @FR_SUPP_DATE		NVARCHAR(08)					/* 지급일(FR) */
			      , @TO_SUPP_DATE		NVARCHAR(08)					/* 지급일(TO) */
			      , @PERSON_NUMB		NVARCHAR(20)					/* 소득자 */
			      , @FR_INSERT_DATE		NVARCHAR(08)					/* 입력일(FR) */
			      , @TO_INSERT_DATE		NVARCHAR(08)					/* 입력일(TO) */
			      , @CHARGE_CODE		NVARCHAR(20)					/* 입력자 */
			      , @DED_TYPE			NVARCHAR(06)					/* 소득자타입 */
			      , @PJT_CODE			NVARCHAR(20)					/* 프로젝트코드(사업코드) */
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @FR_SUPP_DATE	= #{SUPP_DATE_FR}
			SET @TO_SUPP_DATE	= #{SUPP_DATE_TO}
			SET @PERSON_NUMB	= #{PERSON_NUMB}
			SET @FR_INSERT_DATE	= #{INSERT_DATE_FR}
			SET @TO_INSERT_DATE	= #{INSERT_DATE_TO}
			SET @CHARGE_CODE	= #{CHARGE_CODE}
			SET @PJT_CODE		= #{PJT_CODE}

			SELECT 
				   A.PAY_YYYYMM 
				 , A.SUPP_TYPE 
				 , A.PERSON_NUMB 
				 , B.NAME			AS PERSON_NAME
				 , B.REPRE_NUM
				 , A.DIV_CODE 
				 , A.PAY_YYYY 
				 , A.QUARTER_TYPE 
				 , A.SUPP_YYYYMM 
				 , A.SUPP_DATE 
				 , A.WORK_MM 
				 , A.WORK_DAY 
				 , A.SUPP_TOTAL_I 
				 , A.REAL_AMOUNT_I 
				 , A.TAX_EXEMPTION_I 
				 , A.IN_TAX_I 
				 , A.LOCAL_TAX_I 
				 , A.ANU_INSUR_I 
				 , A.MED_INSUR_I 
				 , A.HIR_INSUR_I 
				 , A.BUSI_SHARE_I 
				 , A.WORKER_COMPEN_I 
				 , A.EX_DATE 
				 , A.EX_NUM 
				 , A.AC_DATE 
				 , A.SLIP_NUM 
				 , A.PJT_CODE
				 , A.INSERT_DB_USER 
				 , A.INSERT_DB_TIME
				 , A.UPDATE_DB_USER 
				 , A.UPDATE_DB_TIME
			  FROM            HAM800T A WITH (NOLOCK) 
			  		LEFT JOIN HUM100T B WITH (NOLOCK)	ON B.COMP_CODE		= A.COMP_CODE
			  										   AND B.PERSON_NUMB	= A.PERSON_NUMB
			 WHERE A.COMP_CODE		= @COMP_CODE
			   AND A.SUPP_DATE  &gt;= @FR_SUPP_DATE
			   AND A.SUPP_DATE  &lt;= @TO_SUPP_DATE
			   AND ((A.PERSON_NUMB	= @PERSON_NUMB AND @PERSON_NUMB != '') OR (@PERSON_NUMB = ''))
			   AND (A.EX_DATE     IS NULL         OR  A.EX_DATE     = '')
			<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_FR)">    
			   AND A.UPDATE_DB_TIME    &gt;= @FR_INSERT_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_TO)">    
			   AND A.UPDATE_DB_TIME    &lt;= @TO_INSERT_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">    
			   AND A.UPDATE_DB_USER		= @CHARGE_CODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  A.PJT_CODE IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
		</if>
		
		<if test="ACCEPT_STATUS == &quot;2&quot;"> 							
			DECLARE @COMP_CODE			NVARCHAR(08)
			      , @FR_SUPP_DATE		NVARCHAR(08)					/* 지급일(FR) */
			      , @TO_SUPP_DATE		NVARCHAR(08)					/* 지급일(TO) */
			      , @PERSON_NUMB		NVARCHAR(20)					/* 소득자 */
			      , @FR_INSERT_DATE		NVARCHAR(08)					/* 입력일(FR) */
			      , @TO_INSERT_DATE		NVARCHAR(08)					/* 입력일(TO) */
			      , @CHARGE_CODE		NVARCHAR(20)					/* 입력자 */
			      , @DED_TYPE			NVARCHAR(06)					/* 소득구분 */
			      , @PJT_CODE			NVARCHAR(20)					/* 프로젝트코드(사업코드) */
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @FR_SUPP_DATE	= #{SUPP_DATE_FR}
			SET @TO_SUPP_DATE	= #{SUPP_DATE_TO}
			SET @PERSON_NUMB	= #{PERSON_NUMB}
			SET @FR_INSERT_DATE	= #{INSERT_DATE_FR}
			SET @TO_INSERT_DATE	= #{INSERT_DATE_TO}
			SET @CHARGE_CODE	= #{CHARGE_CODE}
			SET @DED_TYPE		= #{DED_TYPE}
			SET @PJT_CODE		= #{PJT_CODE}
			            
			SELECT 
				   A.PAY_YYYYMM 
				 , A.SUPP_TYPE 
				 , A.PERSON_NUMB 
				 , B.NAME			AS PERSON_NAME 
				 , A.PAY_YYYY 
				 , A.QUARTER_TYPE 
				 , A.SUPP_YYYYMM 
				 , A.SUPP_DATE 
				 , A.WORK_MM 
				 , A.WORK_DAY 
				 , A.SUPP_TOTAL_I 
				 , A.REAL_AMOUNT_I 
				 , A.TAX_EXEMPTION_I 
				 , A.IN_TAX_I 
				 , A.LOCAL_TAX_I 
				 , A.ANU_INSUR_I 
				 , A.MED_INSUR_I 
				 , A.HIR_INSUR_I 
				 , A.BUSI_SHARE_I 
				 , A.WORKER_COMPEN_I 
				 , A.EX_DATE 
				 , A.EX_NUM 
				 , A.AC_DATE 
				 , A.SLIP_NUM 
				 , A.PJT_CODE
				 , A.INSERT_DB_USER 
				 , A.INSERT_DB_TIME
				 , A.UPDATE_DB_USER 
				 , A.UPDATE_DB_TIME
				 , B.DIV_CODE
			  FROM            HAM800T A WITH (NOLOCK) 
			  		LEFT JOIN HUM100T B WITH (NOLOCK)	ON B.COMP_CODE		= A.COMP_CODE
			  										   AND B.PERSON_NUMB	= A.PERSON_NUMB
			 WHERE A.COMP_CODE		= @COMP_CODE
			   AND A.SUPP_DATE  &gt;= @FR_SUPP_DATE
			   AND A.SUPP_DATE  &lt;= @TO_SUPP_DATE
			   AND ((A.PERSON_NUMB	= @PERSON_NUMB AND @PERSON_NUMB != '') OR (@PERSON_NUMB = ''))
			   AND ISNULL(A.EX_DATE, '') != ''
			<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_FR)">    
			   AND A.UPDATE_DB_TIME    &gt;= @FR_INSERT_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_TO)">    
			   AND A.UPDATE_DB_TIME    &lt;= @TO_INSERT_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">    
			   AND A.UPDATE_DB_USER		= @CHARGE_CODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
			   AND B.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  A.PJT_CODE IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
		</if>
	</select>

	
	<insert id="ham820ukrServiceImpl.insertLogDetail" parameterType="Map">     
		INSERT INTO L_AGD230T
		SELECT 
		       #{KEY_VALUE}
		     , #{OPR_FLAG}
		     , COMP_CODE
		     , PERSON_NUMB
		     , ''
		     , PAY_YYYYMM
		     , SUPP_DATE
		     , 1
		     , SUPP_YYYYMM
		     , SUPP_DATE
		     , '9'
		     , ''
		     , ''
		     , 0
		     , 0
		     , 0
		     , 0
		     , 0
		     , ''
		     , ''
		     , ''
		     , ''
		     , ''
		     , #{EX_DATE}
		     , #{EX_NUM}
		     , ''
		     , #{WORK_DATE}
		     , ''
		     , 'UNILITE5'
		     , GETDATE()
		  FROM HAM800T WITH(NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND PAY_YYYYMM	= #{PAY_YYYYMM}
		   AND SUPP_TYPE	= #{SUPP_TYPE}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
	</insert>
	
	
	<update id="spUspAccntAutoSlip23_HAM820UKR" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip23 (
	        #{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUPP_DATE_FR, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUPP_DATE_TO, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{WORK_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{WORK_GUBUN, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        NULL,
	        #{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}, 
	        #{S_LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>   
	
	<update id="spUspAccntAutoSlip23Cancel" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip23Cancel  (
	        #{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        NULL,
	        #{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{S_LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>   
</mapper>