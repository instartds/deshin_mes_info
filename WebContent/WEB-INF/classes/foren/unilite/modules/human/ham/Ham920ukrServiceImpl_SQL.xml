<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ham920ukrServiceImpl">
	
	<select id="ham920ukrServiceImpl.selectCheckData" parameterType="Map" resultType="rMap">
		--ham920ukrServiceImpl.selectCheckData
		/*************************************************************************************************************
			일용근로전산신고자료 생성 대상 조회
		*************************************************************************************************************/
		BEGIN
			DECLARE @COMP_CODE		NVARCHAR(08)
				  , @BILL_DIV_CODE	NVARCHAR(08)
				  , @PAY_YYYY		NVARCHAR(04)
				  , @QUARTER_TYPE	NVARCHAR(10)
			
			SET NOCOUNT ON
			SET ARITHABORT ON
		
		--  1. 변수 값 할당 ----------------------------------------------------------------------------------------
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @BILL_DIV_CODE	= #{DIV_CODE}
			SET @PAY_YYYY		= #{TAX_YYYY}
			SET @QUARTER_TYPE	= #{QUARTER}
		
		--  2. 데이터 조회 -----------------------------------------------------------------------------------------
			SELECT A.SECT_CODE                                                              AS SECT_CODE
			     , CONVERT(CHAR(3), ISNULL(SUBSTRING(LTRIM(RTRIM(M1.SAFFER_TAX)),1,3), '')) AS SAFFER
			     , M1.COMPANY_NUM                                                           AS COMPANY_NUM
			     , CONVERT(CHAR(13), uniLITE.fnCipherDecrypt(A.REPRE_NUM, ''))              AS REPRE_NUM
			     , CONVERT(CHAR(30),A.NAME)                                                 AS NAME
			     , CONVERT(CHAR(1),M2.IN_FORE)                                              AS IN_FORE
			     , CONVERT(CHAR(15), REPLACE(ISNULL(A.TELEPHON,''),'-',''))                 AS TELEPHON
			     , RIGHT(M3.SUPP_YYYYMM,2)                                                  AS SUPP_YYYYMM    --지급월
			     , M3.WORK_MM                                                               AS WORK_MM        --근무월
			     , RIGHT(('0' + CONVERT(NVARCHAR(2),SUM(M3.WORK_DAY))),2)                   AS WORK_DAY       --근무일수
			     , SUM(M3.SUPP_TOTAL_I)                                                     AS TOTAL_AMOUNT_I
			     , SUM(M3.TAX_EXEMPTION_I)                                                  AS TAX_EXEMPTION
			     , SUM(M3.IN_TAX_I)                                                         AS IN_TAX_I
			     , SUM(M3.LOCAL_TAX_I)                                                      AS LOCAL_TAX_I
			     , CONVERT(CHAR(101),'')                                                    AS C_SPACE
			  FROM HUM100T A
			       INNER JOIN BOR120T M1 WITH (NOLOCK)   ON A.COMP_CODE    = M1.COMP_CODE
			                                            AND A.SECT_CODE    = M1.BILL_DIV_CODE
			                                            AND A.DIV_CODE     = M1.DIV_CODE
			       INNER JOIN HAM900T M2 WITH (NOLOCK)   ON A.COMP_CODE    = M2.COMP_CODE
			                                            AND A.PERSON_NUMB  = M2.PERSON_NUMB
			       INNER JOIN HAM800T M3 WITH (NOLOCK)   ON A.COMP_CODE    = M3.COMP_CODE
			                                            AND A.PERSON_NUMB  = M3.PERSON_NUMB
			                                            AND M2.COMP_CODE   = M3.COMP_CODE
			                                            AND M2.PERSON_NUMB = M3.PERSON_NUMB
			                                            AND M2.PAY_YYYY    = M3.PAY_YYYY
			 WHERE A.COMP_CODE = @COMP_CODE
			   AND M1.COMPANY_NUM IN ( SELECT DISTINCT T2.COMPANY_NUM
			                             FROM            HUM100T T1 WITH (NOLOCK)
			                                  INNER JOIN HAM900T T3 WITH (NOLOCK)  ON T1.COMP_CODE   = T3.COMP_CODE
			                                                                      AND T1.PERSON_NUMB = T3.PERSON_NUMB
			                                  INNER JOIN BOR120T T2 WITH (NOLOCK)  ON T1.COMP_CODE   = T2.COMP_CODE
			                                                                      AND T1.SECT_CODE   = T2.DIV_CODE
			                            WHERE T3.COMP_CODE    = @COMP_CODE
			                              AND T3.PAY_YYYY     = @PAY_YYYY
			                              AND T3.QUARTER_TYPE = @QUARTER_TYPE
			                            )
			   AND M2.PAY_YYYY       = @PAY_YYYY
			   AND M2.QUARTER_TYPE   = @QUARTER_TYPE
			   AND M3.QUARTER_TYPE   = @QUARTER_TYPE
			   AND M2.TOTAL_AMOUNT_I > 0
			   AND M1.BILL_DIV_CODE  = @BILL_DIV_CODE
			 GROUP BY A.SECT_CODE, SAFFER_TAX   , M1.COMPANY_NUM, A.REPRE_NUM
			        , A.NAME     , IN_FORE      , A.TELEPHON    , SUPP_YYYYMM
			        , M3.WORK_MM , M3.PAY_YYYYMM, uniLITE.fnCipherDecrypt(A.REPRE_NUM, '')
			 ORDER BY A.SECT_CODE, M3.PAY_YYYYMM

		    
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="ham920ukrServiceImpl.getDecryp" parameterType="rMap" resultType="rMap">
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		BEGIN
		    SELECT DISTINCT 'KEY값 생성해서 적용하기' AS KEY_VALUE
		         , A.COMP_CODE
		         , A.SECT_CODE
		         , M1.REPRE_NO
		         , '9'            AS DED_TYPE
		         , A.PERSON_NUMB
		         , A.REPRE_NUM
		      FROM HUM100T A      WITH (NOLOCK)
		                   INNER JOIN BOR120T M1      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M1.COMP_CODE
		                          AND A.SECT_CODE    = M1.BILL_DIV_CODE
		                          AND A.DIV_CODE     = M1.DIV_CODE
		                   INNER JOIN HAM900T M2      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M2.COMP_CODE
		                          AND A.PERSON_NUMB  = M2.PERSON_NUMB
		                   INNER JOIN HAM800T M3      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M3.COMP_CODE
		                          AND A.PERSON_NUMB  = M3.PERSON_NUMB
		                          AND M2.COMP_CODE   = M3.COMP_CODE
		                          AND M2.PERSON_NUMB = M3.PERSON_NUMB
		                          AND M2.PAY_YYYY    = M3.PAY_YYYY
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND M1.COMPANY_NUM IN ( SELECT DISTINCT T2.COMPANY_NUM
		                                 FROM HUM100T T1      WITH (NOLOCK)
		                                               INNER JOIN HAM900T T3      WITH (NOLOCK)
		                                                       ON T1.COMP_CODE   = T3.COMP_CODE
		                                                      AND T1.PERSON_NUMB = T3.PERSON_NUMB
		                                               INNER JOIN BOR120T T2      WITH (NOLOCK)
		                                                       ON T1.COMP_CODE   = T2.COMP_CODE
		                                                      AND T1.SECT_CODE   = T2.DIV_CODE
		                                WHERE T3.COMP_CODE    = #{S_COMP_CODE}
		                                  AND T3.PAY_YYYY     = #{TAX_YYYY}
		                                  AND T3.QUARTER_TYPE = #{QUARTER}
		                                )
		       AND M2.PAY_YYYY       = #{TAX_YYYY}
		       AND M2.QUARTER_TYPE   = #{QUARTER}
		       AND M3.QUARTER_TYPE   = #{QUARTER}
		       AND M2.TOTAL_AMOUNT_I > 0
		       AND M1.BILL_DIV_CODE  = #{DIV_CODE}
		END
		</if>
		<if test="@foren.Ognl@isEmpty(DIV_CODE)">
		BEGIN
		    SELECT DISTINCT 'KEY값 생성해서 적용하기' AS KEY_VALUE
		         , A.COMP_CODE
		         , A.SECT_CODE
		         , M1.REPRE_NO
		         , '9'            AS DED_TYPE
		         , A.PERSON_NUMB
		         , A.REPRE_NUM
		      FROM HUM100T A      WITH (NOLOCK)
		                   INNER JOIN BOR120T M1      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M1.COMP_CODE
		                          AND A.SECT_CODE    = M1.BILL_DIV_CODE
		                          AND A.DIV_CODE     = M1.DIV_CODE
		                   INNER JOIN HAM900T M2      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M2.COMP_CODE
		                          AND A.PERSON_NUMB  = M2.PERSON_NUMB
		                   INNER JOIN HAM800T M3      WITH (NOLOCK)
		                           ON A.COMP_CODE    = M3.COMP_CODE
		                          AND A.PERSON_NUMB  = M3.PERSON_NUMB
		                          AND M2.COMP_CODE   = M3.COMP_CODE
		                          AND M2.PERSON_NUMB = M3.PERSON_NUMB
		                          AND M2.PAY_YYYY    = M3.PAY_YYYY
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND M1.COMPANY_NUM IN ( SELECT DISTINCT T2.COMPANY_NUM
		                                 FROM HUM100T T1      WITH (NOLOCK)
		                                               INNER JOIN HAM900T T3      WITH (NOLOCK)
		                                                       ON T1.COMP_CODE   = T3.COMP_CODE
		                                                      AND T1.PERSON_NUMB = T3.PERSON_NUMB
		                                               INNER JOIN BOR120T T2      WITH (NOLOCK)
		                                                       ON T1.COMP_CODE   = T2.COMP_CODE
		                                                      AND T1.SECT_CODE   = T2.DIV_CODE
		                                WHERE T3.COMP_CODE    = #{S_COMP_CODE}
		                                  AND T3.PAY_YYYY     = #{TAX_YYYY}
		                                  AND T3.QUARTER_TYPE = #{QUARTER}
		                                )
		       AND M2.PAY_YYYY       = #{TAX_YYYY}
		       AND M2.QUARTER_TYPE   = #{QUARTER}
		       AND M3.QUARTER_TYPE   = #{QUARTER}
		       AND M2.TOTAL_AMOUNT_I > 0
		END
		</if>
	</select>

	<insert id="ham920ukrServiceImpl.insertDecLog" parameterType="Map">
		/* ham920ukrServiceImpl.insertDecLog */
		INSERT INTO T_HPB100T(
		    KEY_VALUE,
		    COMP_CODE,
		    SECT_CODE,
		    REPRE_NO,
		    DED_TYPE,
		    PERSON_NUMB,
		    REPRE_NUM,
		    FOREIGN_NUM
		)VALUES(
		    #{KEY_VALUE},
		    #{COMP_CODE},
		    #{SECT_CODE},
		    #{REPRE_NO},
		    #{DED_TYPE},
		    #{PERSON_NUMB},
		    #{REPRE_NUM},
		    #{FOREIGN_NUM}
		)
	</insert>

	<select id="ham920ukrServiceImpl.createFile" parameterType="rMap" resultType="rMap">        
		DECLARE @RETURN_FILENAME NVARCHAR(15),  @RETURN_TEXT NVARCHAR(MAX), @ERROR_DESC NVARCHAR(1000)

		EXEC USP_HUMAN_HAM920UKR_fnCreate 
		      #{S_COMP_CODE}      -- 법인코드
		    , #{DIV_CODE}         -- 신고사업장코드
		    , #{TAX_YYYY}         -- 귀속년도
		    , #{CRT_DATE}         -- 제출년월일
		    , #{TAX_AGENT_NO}     -- 관리번호
		    , #{HOMETAX_ID}       -- 홈택스아이디
		    , #{QUARTER}          -- 분기
		    , #{KEY_VALUE}        -- (필수) KEY 문자열
		    , #{LANG_TYPE}        -- (필수) 다국어처리
		    , #{USER_ID}          -- 사용자아이디
		    , @RETURN_FILENAME OUTPUT
		    , @RETURN_TEXT     OUTPUT
		    , @ERROR_DESC      OUTPUT

		SELECT  @ERROR_DESC AS N'ERROR_DESC', @RETURN_TEXT AS 'RETURN_VALUE', @RETURN_FILENAME AS 'FILE_NAME'
	</select>
<!--
    <select id="ham920ukrServiceImpl.loadFileData" parameterType="rMap" resultType="rMap">
    /* ham920ukrServiceImpl.loadFileData */
        select DATA from TEMP_DAILY_WORKER_FILE WITH (NOLOCK)
        DROP TABLE TEMP_DAILY_WORKER_FILE
    </select>
-->
</mapper>