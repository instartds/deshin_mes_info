<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had460ukrServiceImpl">
	<select id="had460ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	    --UHad01Krv.CHad460UKr[fnHad460qstd] QUERY01
	    DECLARE   @COMP_CODE       NVARCHAR(08)
	          ,   @YEAR_YYYY       NVARCHAR(04)
	          ,   @PERSON_NUMB     NVARCHAR(10)
	          ,   @DEPT_CODE_FR    NVARCHAR(08)
	          ,   @DEPT_CODE_TO    NVARCHAR(08)
	          ,   @DDUC_CODE       NVARCHAR(02)
	    
	    
	       SET    @PERSON_NUMB     = #{PERSON_NUMB}
	       SET    @DDUC_CODE       = #{DDUC_CODE}
	    
	    SELECT  
	           A.COMP_CODE
	         , A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , A.SEQ_NO
	         , B.NAME AS PERSON_NAME
	         , A.INCM_DDUC_CD
	         , A.BANK_CODE
	         , uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT,'') AS BANK_ACCOUNT
	         , A.PAY_YRLV
	         , A.PAY_I
	         , A.DDUC_I
	         , A.INVEST_YEAR
	         , A.INVEST_TYPE
	      FROM HAD460T A 
	           LEFT JOIN HUM100T B ON B.COMP_CODE   = A.COMP_CODE
	                              AND B.PERSON_NUMB = A.PERSON_NUMB
	     WHERE A.COMP_CODE = #{S_COMP_CODE} 
	       AND A.YEAR_YYYY = #{YEAR_YYYY}
	       AND ((@PERSON_NUMB != '' AND A.PERSON_NUMB = @PERSON_NUMB) OR (@PERSON_NUMB = ''))
	       AND ((@DDUC_CODE != ''    AND A.INCM_DDUC_CD = @DDUC_CODE) OR(@DDUC_CODE = ''))
	     ORDER BY A.PERSON_NUMB, A.SEQ_NO
    </select>	
    <select id="had460ukrServiceImpl.selectCheck" parameterType="Map" resultType="rMap">
    	--  1.1. 개인연말정산 기초자료 존재여부 및 세대주여부 확인
               
           DECLARE @HOUSEHOLDER_YN     NVARCHAR(01)
                      , @HAD400T_YN    NVARCHAR(01)
                      , @INCMCODE      NVARCHAR(02)
        			  , @ERR_DESC      NVARCHAR(4000)
        			  
        	SET     @ERR_DESC   = ''
            SET     @HOUSEHOLDER_YN     = ''
            SET     @HAD400T_YN         = 'S'
            SET     @INCMCODE           = #{INCM_DDUC_CD}
    
            SELECT  @HOUSEHOLDER_YN = HOUSEHOLDER_YN 
              FROM  HUM100T WITH (NOLOCK)
             WHERE  COMP_CODE   = #{S_COMP_CODE}
               AND  PERSON_NUMB = #{PERSON_NUMB}
    
            SELECT  @HAD400T_YN = HOUSEHOLDER_YN 
              FROM  HAD400T WITH (NOLOCK)
             WHERE  COMP_CODE   = #{S_COMP_CODE}
               AND  YEAR_YYYY   = #{YEAR_YYYY}
               AND  PERSON_NUMB = #{PERSON_NUMB}
    
            IF (@HAD400T_YN = 'S')
                SET @ERR_DESC = '55225;'
    
            IF (@HOUSEHOLDER_YN = '2' AND (@INCMCODE = '31' OR @INCMCODE = '32' OR @INCMCODE = '33'))
                SET @ERR_DESC = '55231;'
    	 
    	 	IF CHARINDEX(';', @ERR_DESC) > 0
                SELECT SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1) AS ERROR_CODE
            ELSE
                SELECT TOP 1 '' ERROR_CODE
                
    </select>
	<insert id="had460ukrServiceImpl.insert" parameterType="Map">
		DECLARE @SEQ_NO NUMERIC(5, 0)
        	BEGIN
            
            --  1.2. 연금저축소득공제 테이블에 INSERT.
                SELECT  @SEQ_NO = MAX(SEQ_NO)
                  FROM  HAD460T WITH (NOLOCK)
                 WHERE  COMP_CODE   = #{S_COMP_CODE}
                   AND  YEAR_YYYY   = #{YEAR_YYYY}
                   AND  PERSON_NUMB = #{PERSON_NUMB}
                 GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
        
                SET     @SEQ_NO = ISNULL(@SEQ_NO, 0) + 1
        
                INSERT INTO HAD460T ( COMP_CODE
                                    , YEAR_YYYY
                                    , PERSON_NUMB
                                    , SEQ_NO
                                    , INCM_DDUC_CD
                                    , BANK_CODE
                                    , BANK_ACCOUNT
                                    , PAY_YRLV
                                    , PAY_I
                                    , DDUC_I
                                    , INVEST_YEAR
                                    , INVEST_TYPE
                                    , INSERT_DB_USER
                                    , INSERT_DB_TIME
                                    , UPDATE_DB_USER
                                    , UPDATE_DB_TIME )
                             VALUES ( #{S_COMP_CODE}
                                    , #{YEAR_YYYY}
                                    , #{PERSON_NUMB}
                                    , @SEQ_NO
                                    , #{INCM_DDUC_CD}
                                    , #{BANK_CODE}
                                    , uniLITE.fnCipherEncrypt(#{BANK_ACCOUNT},'')
                                    , #{PAY_YRLV}
                                    , #{PAY_I}
                                    , #{DDUC_I}
                                    , #{INVEST_YEAR}
                                    , #{INVEST_TYPE}
                                    , #{S_USER_ID}
                                    , GETDATE()
                                    , #{S_USER_ID}
                                    , GETDATE()
                                    )
            END

	</insert>
	<update id="had460ukrServiceImpl.update" parameterType="Map">
		--had460ukr.Chad460ukr[fnHad460Save] Query02
                UPDATE HAD460T
                   SET INCM_DDUC_CD  = #{INCM_DDUC_CD}
                     , BANK_CODE     = #{BANK_CODE}
                     , BANK_ACCOUNT  = uniLITE.fnCipherEncrypt(#{BANK_ACCOUNT},'')
                     , PAY_YRLV      = #{PAY_YRLV}
                     , PAY_I         = #{PAY_I}
                     , DDUC_I        = #{DDUC_I}
                     , INVEST_YEAR   = #{INVEST_YEAR}
                     , INVEST_TYPE   = #{INVEST_TYPE}
                 WHERE COMP_CODE     = #{S_COMP_CODE}
                   AND YEAR_YYYY     = #{YEAR_YYYY}
                   AND PERSON_NUMB   = #{PERSON_NUMB}
                   AND SEQ_NO        = #{SEQ_NO}
     
	</update>
	<update id="had460ukrServiceImpl.delete" parameterType="Map">
		DELETE FROM  HAD460T
        WHERE COMP_CODE				= #{S_COMP_CODE}      
          AND YEAR_YYYY				= #{YEAR_YYYY}      
          AND PERSON_NUMB           = #{PERSON_NUMB}        
          AND SEQ_NO            	= #{SEQ_NO}      
      
	</update>
	<update id="had460ukrServiceImpl.baseUpdate1" parameterType="Map">
		--had460ukr.Chad460ukr[fnHad460Save] Query03
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @WORK_FLAG          NVARCHAR(01)
                  , @ERR_DESC1          NVARCHAR(4000)
                  , @ERR_DESC2          NVARCHAR(4000)
                  , @ERR_DESC3          NVARCHAR(4000)
                  , @ERR_DESC4          NVARCHAR(4000)
                  , @ERR_DESC5          NVARCHAR(4000)
                  , @ERR_DESC           NVARCHAR(4000)
        
            SET     @WORK_FLAG          = #{WORK_FLAG}
            SET     @ERR_DESC1          = ''
            SET     @ERR_DESC2          = ''
            SET     @ERR_DESC3          = ''
            SET     @ERR_DESC4          = ''
            SET     @ERR_DESC5          = ''
            SET     @ERR_DESC           = ''
        
        --  1. 연말정산기초자료등록 테이블에 반영 --------------------------------------------------------------
            UPDATE A
               SET A.RETIRE_PENS_I = CASE WHEN ISNULL(B.RETIRE_PENS_I, 0) = 0 THEN 0 ELSE B.RETIRE_PENS_I END 
                 , A.SCI_DEDUC_I   = CASE WHEN ISNULL(B.SCI_DEDUC_I  , 0) = 0 THEN 0 ELSE B.SCI_DEDUC_I   END 
                 , A.PRIV_PENS_I   = CASE WHEN ISNULL(B.PRIV_PENS_I  , 0) = 0 THEN 0 ELSE B.PRIV_PENS_I   END 
                 , A.PENS_I        = CASE WHEN ISNULL(B.PENS_I       , 0) = 0 THEN 0 ELSE B.PENS_I        END 
                 , A.HOUS_BU_AMT   = CASE WHEN ISNULL(B.HOUS_BU_AMT  , 0) = 0 THEN 0 ELSE B.HOUS_BU_AMT   END 
                 , A.HOUS_AMOUNT_I = CASE WHEN ISNULL(B.HOUS_AMOUNT_I, 0) = 0 THEN 0 ELSE B.HOUS_AMOUNT_I END 
                 , A.HOUS_LONG_AMT = CASE WHEN ISNULL(B.HOUS_LONG_AMT, 0) = 0 THEN 0 ELSE B.HOUS_LONG_AMT END 
                 , A.HOUS_WORK_AMT = CASE WHEN ISNULL(B.HOUS_WORK_AMT, 0) = 0 THEN 0 ELSE B.HOUS_WORK_AMT END 
                 , A.LONG_FUND_I1  = CASE WHEN ISNULL(B.LONG_FUND_I1 , 0) = 0 THEN 0 ELSE B.LONG_FUND_I1  END 
                 , A.LONG_FUND_I2  = CASE WHEN ISNULL(B.LONG_FUND_I2 , 0) = 0 THEN 0 ELSE B.LONG_FUND_I2  END 
                 , A.LONG_FUND_I3  = CASE WHEN ISNULL(B.LONG_FUND_I3 , 0) = 0 THEN 0 ELSE B.LONG_FUND_I3  END 
              FROM HAD400T A 
                   LEFT  JOIN (SELECT SUM(X.RETIRE_PENS_I) AS RETIRE_PENS_I
                                    , SUM(X.SCI_DEDUC_I)   AS SCI_DEDUC_I
                                    , SUM(X.PRIV_PENS_I)   AS PRIV_PENS_I
                                    , SUM(X.PENS_I)        AS PENS_I
                                    , SUM(X.HOUS_BU_AMT)   AS HOUS_BU_AMT
                                    , SUM(X.HOUS_AMOUNT_I) AS HOUS_AMOUNT_I
                                    , SUM(X.HOUS_LONG_AMT) AS HOUS_LONG_AMT
                                    , SUM(X.HOUS_WORK_AMT) AS HOUS_WORK_AMT
                                    , SUM(X.LONG_FUND_I1)  AS LONG_FUND_I1
                                    , SUM(X.LONG_FUND_I2)  AS LONG_FUND_I2
                                    , SUM(X.LONG_FUND_I3)  AS LONG_FUND_I3
                                    , X.COMP_CODE 
                                    , X.YEAR_YYYY 
                                    , X.PERSON_NUMB 
                                 FROM (SELECT CASE WHEN INCM_DDUC_CD = '11'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS RETIRE_PENS_I
                                            , CASE WHEN INCM_DDUC_CD = '12'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS SCI_DEDUC_I
                                            , CASE WHEN INCM_DDUC_CD = '21'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS PRIV_PENS_I
                                            , CASE WHEN INCM_DDUC_CD = '22'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS PENS_I
                                            , CASE WHEN INCM_DDUC_CD = '31'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS HOUS_BU_AMT
                                            , CASE WHEN INCM_DDUC_CD = '32'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS HOUS_AMOUNT_I
                                            , CASE WHEN INCM_DDUC_CD = '33'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS HOUS_LONG_AMT
                                            , CASE WHEN INCM_DDUC_CD = '34'                     THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS HOUS_WORK_AMT
                                            , CASE WHEN INCM_DDUC_CD = '41' AND PAY_YRLV = '01' THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS LONG_FUND_I1
                                            , CASE WHEN INCM_DDUC_CD = '41' AND PAY_YRLV = '02' THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS LONG_FUND_I2
                                            , CASE WHEN INCM_DDUC_CD = '41' AND PAY_YRLV = '03' THEN SUM(ISNULL(PAY_I, 0)) ELSE 0 END AS LONG_FUND_I3
                                            , COMP_CODE 
                                            , YEAR_YYYY 
                                            , PERSON_NUMB 
                                            , INCM_DDUC_CD
                                            , PAY_YRLV
                                         FROM HAD460T WITH (NOLOCK)
                                        WHERE COMP_CODE   = #{S_COMP_CODE}
							              AND YEAR_YYYY   = #{YEAR_YYYY}
							              AND PERSON_NUMB = #{PERSON_NUMB}
                                        GROUP BY COMP_CODE, YEAR_YYYY, PERSON_NUMB, INCM_DDUC_CD, PAY_YRLV
                                      ) X
                                GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                              ) B ON B.COMP_CODE   = A.COMP_CODE
                                 AND B.YEAR_YYYY   = A.YEAR_YYYY
                                 AND B.PERSON_NUMB = A.PERSON_NUMB
             WHERE A.COMP_CODE   = #{S_COMP_CODE}
               AND A.YEAR_YYYY   = #{YEAR_YYYY}
               AND A.PERSON_NUMB = #{PERSON_NUMB}
        END
	</update>
	<select id="had460ukrServiceImpl.baseUpdate2" parameterType="Map" resultType="rMap">
       DECLARE @WORK_FLAG          NVARCHAR(01)
                  , @ERR_DESC1          NVARCHAR(4000)
                  , @ERR_DESC2          NVARCHAR(4000)
                  , @ERR_DESC3          NVARCHAR(4000)
                  , @ERR_DESC4          NVARCHAR(4000)
                  , @ERR_DESC5          NVARCHAR(4000)
                  , @ERR_DESC           NVARCHAR(4000)
        --  2. 주택청약관련 및 장기주식형저축소득공제 한도금액 체크하기 ----------------------------------------
        --  IF ( @WORK_FLAG != 'D' )
            BEGIN
                DECLARE  @PRIV_PENS_I        NUMERIC(30, 6)
                      ,  @PENS_I             NUMERIC(30, 6)
                      ,  @HOUS_BU_AMT        NUMERIC(30, 6)
                      ,  @HOUS_AMOUNT_I      NUMERIC(30, 6)
                      ,  @HOUS_LONG_AMT      NUMERIC(30, 6)
                      ,  @HOUS_WORK_AMT      NUMERIC(30, 6)
                      ,  @LONG_FUND          NUMERIC(30, 6)
        
                      ,  @PRIV_PENS_MAX      NUMERIC(30, 6)
                      ,  @PENS_MAX           NUMERIC(30, 6)
                      ,  @HOUS_BU_MAX        NUMERIC(30, 6)
                      ,  @HOUS_AMOUNT_MAX    NUMERIC(30, 6)
                      ,  @HOUS_LONG_MAX      NUMERIC(30, 6)
                      ,  @HOUS_WORK_MAX      NUMERIC(30, 6)
                      ,  @LONG_FUND_MAX      NUMERIC(30, 6)
                      
        
            --  2.1. 연말정산기초자료등록 조회
                SELECT  @PRIV_PENS_I      = PRIV_PENS_I
                     ,  @PENS_I           = PENS_I
                     ,  @HOUS_BU_AMT      = HOUS_BU_AMT
                     ,  @HOUS_AMOUNT_I    = HOUS_AMOUNT_I
                     ,  @HOUS_LONG_AMT    = HOUS_LONG_AMT
                     ,  @HOUS_WORK_AMT    = HOUS_WORK_AMT
                     ,  @LONG_FUND        = ISNULL(LONG_FUND_I1, 0) + ISNULL(LONG_FUND_I2, 0) + ISNULL(LONG_FUND_I3, 0)
                  FROM  HAD400T WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
	               AND YEAR_YYYY   = #{YEAR_YYYY}
	               AND PERSON_NUMB = #{PERSON_NUMB}
        
                SET     @PRIV_PENS_I      = ISNULL(@PRIV_PENS_I  , 0)
                SET     @PENS_I           = ISNULL(@PENS_I       , 0)
                SET     @HOUS_BU_AMT      = ISNULL(@HOUS_BU_AMT  , 0)
                SET     @HOUS_AMOUNT_I    = ISNULL(@HOUS_AMOUNT_I, 0)
                SET     @HOUS_LONG_AMT    = ISNULL(@HOUS_LONG_AMT, 0)
                SET     @HOUS_WORK_AMT    = ISNULL(@HOUS_WORK_AMT, 0)
                SET     @LONG_FUND        = ISNULL(@LONG_FUND    , 0)
        
            --  2.2. 소득세액공제등록 조회
                SELECT  @PRIV_PENS_MAX    = PRIV_PENS_LMT_IN           --불입한도액:1200만원
                     ,  @PENS_MAX         = PENS_RATE_LMT_IN           --불입한도액:1200만원
                     ,  @HOUS_BU_MAX      = HOUS_APP_AMT_LMT 
                     ,  @HOUS_AMOUNT_MAX  = HOUS_APP_AMT_LMT 
                     ,  @HOUS_LONG_MAX    = HOUS_LONG_AMT_LMT  
                     ,  @HOUS_WORK_MAX    = HOUS_WORK_AMT_LMT
                     ,  @LONG_FUND_MAX    = LONG_FUND_LMT
                  FROM  HAD200T WITH (NOLOCK)
                 WHERE  COMP_CODE    = #{S_COMP_CODE}
                   AND  TAX_YEAR     = #{YEAR_YYYY}
                   AND  COMPANY_CODE = '2'
        
                SET     @PRIV_PENS_MAX     = ISNULL(@PRIV_PENS_MAX  , 0)
                SET     @PENS_MAX          = ISNULL(@PENS_MAX       , 0)
                SET     @HOUS_BU_MAX       = ISNULL(@HOUS_BU_MAX    , 0)
                SET     @HOUS_AMOUNT_MAX   = ISNULL(@HOUS_AMOUNT_MAX, 0)
                SET     @HOUS_LONG_MAX     = ISNULL(@HOUS_LONG_MAX  , 0)
                SET     @HOUS_WORK_MAX     = ISNULL(@HOUS_WORK_MAX  , 0)
                SET     @LONG_FUND_MAX     = ISNULL(@LONG_FUND_MAX  , 0)
        
            --  2.3. 한도금액 체크
                IF (@PRIV_PENS_I > @PRIV_PENS_MAX) OR (@PENS_I > @PENS_MAX)
                    SET @ERR_DESC1 = '55219;'
        
                IF (@HOUS_BU_AMT > @HOUS_BU_MAX) OR (@HOUS_AMOUNT_I > @HOUS_AMOUNT_MAX)
                    SET @ERR_DESC2 = '55220;'
        
                IF (@HOUS_LONG_AMT > @HOUS_LONG_MAX)
                    SET @ERR_DESC3 = '55221;'
        
                IF (@HOUS_WORK_AMT > @HOUS_WORK_MAX)
                    SET @ERR_DESC4 = '55222;'
        
                IF (@LONG_FUND > @LONG_FUND_MAX)
                    SET @ERR_DESC5 = '55223;'
        
                SET @ERR_DESC = @ERR_DESC1 + @ERR_DESC2 + @ERR_DESC3 + @ERR_DESC4 + @ERR_DESC5
        
               SELECT @ERR_DESC AS ERROR_CODE
                
                
            END
      	
        
	</select>
</mapper>