<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had421rkrServiceImpl">
	
	<select id="had421rkrServiceImpl.selectListToPrint" parameterType="Map" resultType="rMap">
		--had421rkr.Chad421rkr[fnHad421QRpt] Query1
	    -- 1. 인적사항
	    -- 3. 구분코드별 기부금의 합계
	    SELECT C.DIV_FULL_NAME                                                                                              AS DIV_FULL_NAME        -- 1-1. 근무지 또는 사업장 상호
	         , SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' + SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' + SUBSTRING(C.COMPANY_NUM, 6, 5) AS COMPANY_NUM          -- 1-2. 사업자등록번호
	         , A.PERSON_NUMB                                                                                                                        --      사번
	         , D.NAME                                                                                                                               -- 1-3. 성명
	         , unilite.fnCipherDecrypt(D.REPRE_NUM, 'RR')                                                                   AS REPRE_NUM            -- 1-4. 주민등록번호
	         , D.KOR_ADDR                                                                                                   AS KOR_ADDR             -- 1-5. 주소
	         , CASE WHEN ISNULL(D.TELEPHON, '') = '' THEN ISNULL(D.PHONE_NO, '') ELSE D.TELEPHON END                        AS TELEPHON_PERSON      --      전화번호
	         , C.ADDR                                                                                                       AS COMP_KOR_ADDR        -- 1-6. 사업장소재지
	         , C.TELEPHON                                                                                                                           --      전화번호
	         , B.GIFT_AMOUNT_I_110          -- 3. 1-10 본인     법정기부금
	         , B.GIFT_AMOUNT_I_120          -- 3. 1-20 본인     정치자금기부금
	         , B.GIFT_AMOUNT_I_140          -- 3. 1-40 본인     종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_141          -- 3. 1-41 본인     종교단체 지정기부금
	         , B.GIFT_AMOUNT_I_142          -- 3. 1-42 본인     우리사주조합기부금
	         , B.GIFT_AMOUNT_I_210          -- 3. 2-10 배우자   법정기부금
	         , B.GIFT_AMOUNT_I_240          -- 3. 2-40 배우자   종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_241          -- 3. 2-41 배우자   종교단체 지정기부금
	         , B.GIFT_AMOUNT_I_310          -- 3. 3-10 직계비속 법정기부금
	         , B.GIFT_AMOUNT_I_340          -- 3. 3-40 직계비속 종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_341          -- 3. 3-41 직계비속 종교단체 지정기부금
	         , B.GIFT_AMOUNT_I_410          -- 3. 4-10 직계존속 법정기부금
	         , B.GIFT_AMOUNT_I_440          -- 3. 4-40 직계존속 종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_441          -- 3. 4-41 직계존속 종교단체 지정기부금
	         , B.GIFT_AMOUNT_I_510          -- 3. 5-10 형제자매 법정기부금
	         , B.GIFT_AMOUNT_I_540          -- 3. 5-40 형제자매 종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_541          -- 3. 5-41 형제자매 종교단체 지정기부금
	         , B.GIFT_AMOUNT_I_610          -- 3. 6-10 그외     법정기부금
	         , B.GIFT_AMOUNT_I_640          -- 3. 6-40 그외     종교단체 외 지정기부금
	         , B.GIFT_AMOUNT_I_641          -- 3. 6-41 그외     종교단체 지정기부금
		  FROM HAD600T A WITH (NOLOCK)
	           LEFT  JOIN (SELECT A.COMP_CODE
	                            , A.YEAR_YYYY
	                            , A.PERSON_NUMB
	                            , SUM(CASE WHEN (A.REL_CODE = '1' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_110
	                            , SUM(CASE WHEN (A.REL_CODE = '1' AND A.GIFT_CODE = '20') THEN A.GIFT_AMOUNT_I - A.POLICY_INDED ELSE 0 END) AS GIFT_AMOUNT_I_120
	                            , SUM(CASE WHEN (A.REL_CODE = '1' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_140
	                            , SUM(CASE WHEN (A.REL_CODE = '1' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_141
	                            , SUM(CASE WHEN (A.REL_CODE = '1' AND A.GIFT_CODE = '42') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_142
	                            , SUM(CASE WHEN (A.REL_CODE = '2' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_210
	                            , SUM(CASE WHEN (A.REL_CODE = '2' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_240
	                            , SUM(CASE WHEN (A.REL_CODE = '2' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_241
	                            , SUM(CASE WHEN (A.REL_CODE = '3' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_310
	                            , SUM(CASE WHEN (A.REL_CODE = '3' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_340
	                            , SUM(CASE WHEN (A.REL_CODE = '3' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_341
	                            , SUM(CASE WHEN (A.REL_CODE = '4' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_410
	                            , SUM(CASE WHEN (A.REL_CODE = '4' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_440
	                            , SUM(CASE WHEN (A.REL_CODE = '4' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_441
	                            , SUM(CASE WHEN (A.REL_CODE = '5' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_510
	                            , SUM(CASE WHEN (A.REL_CODE = '5' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_540
	                            , SUM(CASE WHEN (A.REL_CODE = '5' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_541
	                            , SUM(CASE WHEN (A.REL_CODE = '6' AND A.GIFT_CODE = '10') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_610
	                            , SUM(CASE WHEN (A.REL_CODE = '6' AND A.GIFT_CODE = '40') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_640
	                            , SUM(CASE WHEN (A.REL_CODE = '6' AND A.GIFT_CODE = '41') THEN A.GIFT_AMOUNT_I                  ELSE 0 END) AS GIFT_AMOUNT_I_641
	                         FROM            HAD420T A WITH (NOLOCK)
	                              LEFT  JOIN HAD421T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                                 AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                                                 AND B.GIFT_YYYY   = LEFT(A.GIFT_YYMM, 4)
	                                                                 AND B.PERSON_NUMB = A.PERSON_NUMB
	                                                                 AND B.GIFT_CODE   = A.GIFT_CODE
	                        WHERE A.COMP_CODE   = #{S_COMP_CODE}
	                          AND A.YEAR_YYYY   = #{YEAR_YYYY}
	                        GROUP BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB) B ON B.COMP_CODE   = A.COMP_CODE
	                                                                           AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                                                           AND B.PERSON_NUMB = A.PERSON_NUMB
		       INNER JOIN HUM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                         AND D.PERSON_NUMB = A.PERSON_NUMB
		       INNER JOIN BOR120T C WITH (NOLOCK) ON C.COMP_CODE   = D.COMP_CODE
		                                         AND C.DIV_CODE    = D.SECT_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.YEAR_YYYY = #{YEAR_YYYY}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
 	   	   AND D.SECT_CODE = #{DIV_CODE}
    	</if>   
    	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       	   AND A.HALFWAY_TYPE = #{RETR_TYPE}
    	</if>                          
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	  	   AND D.PAY_CODE    =  #{PAY_CODE}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
	  	   AND D.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
		   AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       	   AND D.DEPT_CODE &gt;= #{FR_DEPT_CODE}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       	   AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
    	</if>                   
		 ORDER BY A.COMP_CODE,  A.YEAR_YYYY, A.PERSON_NUMB
	</select>	
	<select id="had421rkrServiceImpl.selectListToPrintSub1" parameterType="Map" resultType="rMap">
		--had421rkr.Chad421rkr[fnHad421QRpt] Query2
    	-- 2. 해당 연도 기부 명세
	    SELECT A.PERSON_NUMB
	         , ISNULL(M1.CODE_NAME       , '')                                      AS GIFT_NAME            -- 2.7 유형
	         , ISNULL(B.GIFT_CODE        , '')                                      AS GIFT_CODE            -- 2.8 코드
	         , ISNULL(B.GIFT_TEXT        , '')                                      AS GIFT_TEXT            -- 2.9 기부내용
	         , ISNULL(B.GIFT_COMPANY_NAME, '')                                      AS GIFT_COMPANY_NAME    -- 2.10 상호(법인명)
	         , CASE WHEN ISNULL(B.GIFT_COMPANY_NUM, '') != ''
	                THEN SUBSTRING(B.GIFT_COMPANY_NUM, 1, 3) + '-' + SUBSTRING(B.GIFT_COMPANY_NUM, 4, 2) + '-' + SUBSTRING(B.GIFT_COMPANY_NUM, 6, 5)
	                ELSE ''
	           END                                                                  AS COMPANY_NUM          -- 2.11 사업자등록번호 등
	         , ISNULL(B.REL_CODE         , '')                                      AS REL_CODE             -- 2.12 기부자 관계코드
	         , ISNULL(B.FAMILY_NAME      , '')                                      AS FAMILY_NAME          -- 2.12 기부자 성명
	         , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')                           AS REPRE_NUM            -- 2.13 기부자 주민등록번호
	         , ISNULL(B.GIFT_COUNT       , 0 )                                      AS GIFT_COUNT           --      건수
	         , ISNULL(B.GIFT_AMOUNT_I    , 0 ) - ISNULL(B.POLICY_INDED, 0)          AS GIFT_AMOUNT_I        -- 2.14 공제대상기부금액
	      FROM            HAD600T A  WITH (NOLOCK)
	           LEFT  JOIN HAD420T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                              AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                              AND B.PERSON_NUMB = A.PERSON_NUMB
	           LEFT  JOIN HAD421T E  WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
	                                              AND E.YEAR_YYYY   = B.YEAR_YYYY
	                                              AND E.GIFT_YYYY   = LEFT(B.GIFT_YYMM, 4)
	                                              AND E.PERSON_NUMB = B.PERSON_NUMB
	                                              AND E.GIFT_CODE   = B.GIFT_CODE
	           INNER JOIN HUM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                              AND D.PERSON_NUMB = A.PERSON_NUMB
	           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
	                                              AND M1.MAIN_CODE  = 'H119'
	                                              AND M1.SUB_CODE   = B.GIFT_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.YEAR_YYYY = #{YEAR_YYYY}
		   AND ISNULL(B.GIFT_AMOUNT_I, 0) - ISNULL(B.POLICY_INDED, 0) > 0
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
 	   	   AND D.SECT_CODE = #{DIV_CODE}
    	</if>   
    	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       	   AND A.HALFWAY_TYPE = #{RETR_TYPE}
    	</if>                          
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	  	   AND D.PAY_CODE    =  #{PAY_CODE}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
	  	   AND D.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
		   AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       	   AND D.DEPT_CODE &gt;= #{FR_DEPT_CODE}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       	   AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
    	</if>
    	<if test="CARRY_OVER == &quot;1&quot;">
       	   AND B.COMP_CODE IS NOT NULL
    	</if>
		 ORDER BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, B.GIFT_CODE
	</select>
	<select id="had421rkrServiceImpl.selectListToPrintSub2" parameterType="Map" resultType="rMap">
		--had421rkr.Chad421rkr[fnHad421QRpt] Query3
	    -- 3. 기부금 조정 명세
	    SELECT A.PERSON_NUMB
	         , B.GIFT_CODE
	         , B.GIFT_YYYY
	         , SUM(B.GIFT_AMOUNT_I)     AS GIFT_AMOUNT_I
	         , SUM(B.BF_DDUC_I)         AS BF_DDUC_I
	         , SUM(B.DDUC_OBJ_I)        AS DDUC_OBJ_I
	         , SUM(B.PRP_DDUC_I)        AS PRP_DDUC_I
	         , SUM(B.PRP_LAPSE_I)       AS PRP_LAPSE_I
	         , SUM(B.PRP_OVER_I)        AS PRP_OVER_I
	      FROM            HAD600T A WITH (NOLOCK)
	           LEFT  JOIN HAD421T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                             AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                             AND B.PERSON_NUMB = A.PERSON_NUMB
	           INNER JOIN HUM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                             AND D.PERSON_NUMB = A.PERSON_NUMB
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.YEAR_YYYY    = #{YEAR_YYYY}
		   AND B.GIFT_AMOUNT_I &gt; 0
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
 	   	   AND D.SECT_CODE = #{DIV_CODE}
    	</if>   
    	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       	   AND A.HALFWAY_TYPE = #{RETR_TYPE}
    	</if>                          
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	  	   AND D.PAY_CODE    =  #{PAY_CODE}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
	  	   AND D.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
		   AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       	   AND D.DEPT_CODE &gt;= #{FR_DEPT_CODE}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       	   AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
    	</if>
    	<if test="CARRY_OVER == &quot;1&quot;">
       	   AND B.COMP_CODE IS NOT NULL
    	</if>
		 GROUP BY A.PERSON_NUMB, B.GIFT_CODE, B.GIFT_YYYY
		 ORDER BY A.PERSON_NUMB, B.GIFT_YYYY DESC, B.GIFT_CODE
	</select>
</mapper>