<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had850rkrServiceImpl">
	<select id="had850rkrServiceImpl.selectlist2020Clip" parameterType="Map" resultType="rMap">
	--had850rkr.Chad850rkr[fnHad850nQ2020] selectlist2020Clip
    DECLARE @COMP_CODE NVARCHAR(08)
	      , @YEAR_YYYY NVARCHAR(04)

	SET @COMP_CODE = #{S_COMP_CODE}
	SET @YEAR_YYYY = #{YEAR_YYYY}

	IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#TEMP_PAY'))
	DROP TABLE #TEMP_PAY

	CREATE TABLE #TEMP_PAY
	(
		COMP_CODE           NVARCHAR(08)
	  , PERSON_NUMB         NVARCHAR(20)
	  , YEAR_YYYY           NVARCHAR(04)
	  , YEAR_MM             NVARCHAR(02)
	  , SUM_TAX_I           NUMERIC(30, 6)
	  , SUPP_NUM            NUMERIC(02, 0)  
	)

	IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#TEMP_EASY'))
		DROP TABLE #TEMP_EASY

	CREATE TABLE #TEMP_EASY
	(  
		TAX_YYYY            NVARCHAR(04)
	  , TAX_MM              NVARCHAR(02)
	  , TAX_STRT_AMOUNT     NUMERIC(18, 0)
	  , TAX_END_AMOUNT      NUMERIC(18, 0)
	  , DED_GRADE_NUM       NUMERIC(02, 0)
	  , DED_GRADE           NUMERIC(18, 0)   
	)
    --실소득내역
	INSERT INTO #TEMP_PAY
	EXEC uniLITE.SP_HAD840RKR_PAY @COMP_CODE, @YEAR_YYYY

	INSERT INTO #TEMP_EASY
	EXEC uniLITE.SP_HAD840RKR_EASY @YEAR_YYYY

	SELECT DISTINCT 
    	   T1.PERSON_NUMB
		 , T2.YEAR_YYYY                                                          --1.귀속연도
         , T4.DIV_FULL_NAME                                      AS COMP_NAME    --2.법인명(상호)
		 , T4.COMPANY_NUM                                                        --3.사업자등록번호
		 , T4.ADDR                                                               --4.근무처
         , T1.NAME                                                               --5.성명	
         , unilite.fnCipherDecrypt(T1.REPRE_NUM, 'A')            AS REPRE_NUM    --6.주민등록번호
		 , uniLITE.fnGetUserDateComp(T1.COMP_CODE, T1.JOIN_DATE) AS JOIN_DATE    --7.입사일
		 , CASE WHEN T1.RETR_DATE = '00000000' THEN '' 
                ELSE uniLITE.fnGetUserDateComp(T1.COMP_CODE, T1.RETR_DATE)
            END                                                  AS RETR_DATE    --7.퇴사일
		 , CASE WHEN T1.NATION_CODE = 'KR' THEN '1' ELSE '9' END AS NATIVE_GUBUN --8.내외국인구분
		 , ISNULL(M1.CODE_NAME, '') AS NATION_NAME                               --9.국적
		 , T1.NATION_CODE                                                        --9.국적코드
         , CASE WHEN T1.SPOUSE  = 'Y' THEN T1.SUPP_AGED_NUM + 2 
		        ELSE T1.SUPP_AGED_NUM + 1 
			END                                                  AS SUPP_NUM     --10.공제대상가족의 수
         , T1.CHILD_20_NUM                                                       --11.20세 이하 자녀의 수
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') = '' AND ISNULL(T3.NONTAX_TO,'') = '') THEN 'N'
		        ELSE 'Y'
		    END                                                  AS NONTAX_YN    --12.감면 적용 여부
		 , CASE WHEN T3.NONTAX_TO != '' AND T1.FOREIGN_SKILL_YN = 'Y' THEN              '외국인 기술자에 대한 감면'
		        WHEN T3.NONTAX_TO != '' AND ISNULL(T1.FOREIGN_SKILL_YN, 'N') = 'N'THEN  '중소기업에 취업하는 청년등에 대한 감면'
		   	    ELSE ''
			END                                                 AS NONTAX_TITLE  --13.감면규정		
		 , T3.NONTAX_FR                                                         --14.감면기간FR
         , T3.NONTAX_TO                                                         --14.감면기간TO
         , T1.DIV_CODE
		 , T1.DEPT_CODE
		 , T1.POST_CODE
		 , T4.REPRE_NAME  

         /*근로소득 지급명세서*/
		 --15. 지급연월
		 , T2.SUPP_YYYYMM_01       , T2.SUPP_YYYYMM_02     , T2.SUPP_YYYYMM_03
		 , T2.SUPP_YYYYMM_04       , T2.SUPP_YYYYMM_05     , T2.SUPP_YYYYMM_06
		 , T2.SUPP_YYYYMM_07       , T2.SUPP_YYYYMM_08     , T2.SUPP_YYYYMM_09
		 , T2.SUPP_YYYYMM_10       , T2.SUPP_YYYYMM_11     , T2.SUPP_YYYYMM_12

         --16. 급여
         , T2.PAY_TAX_01           , T2.PAY_TAX_02         , T2.PAY_TAX_03  
         , T2.PAY_TAX_04           , T2.PAY_TAX_05         , T2.PAY_TAX_06  
         , T2.PAY_TAX_07           , T2.PAY_TAX_08         , T2.PAY_TAX_09  
         , T2.PAY_TAX_10           , T2.PAY_TAX_11         , T2.PAY_TAX_12  
     
         --17. 상여
         , T2.BONUS_TAX_01         , T2.BONUS_TAX_02       , T2.BONUS_TAX_03
         , T2.BONUS_TAX_04         , T2.BONUS_TAX_05       , T2.BONUS_TAX_06
         , T2.BONUS_TAX_07         , T2.BONUS_TAX_08       , T2.BONUS_TAX_09
         , T2.BONUS_TAX_10         , T2.BONUS_TAX_11       , T2.BONUS_TAX_12
    
         --18. 인정상여
         , T2.ADD_BONUS_01         , T2.ADD_BONUS_02       , T2.ADD_BONUS_03
         , T2.ADD_BONUS_04         , T2.ADD_BONUS_05       , T2.ADD_BONUS_06
         , T2.ADD_BONUS_07         , T2.ADD_BONUS_08       , T2.ADD_BONUS_09
         , T2.ADD_BONUS_10         , T2.ADD_BONUS_11       , T2.ADD_BONUS_12
    
         --19. 주식매수선택권 행사이익
         , T2.PROFIT_I_01          , T2.PROFIT_I_02        , T2.PROFIT_I_03
         , T2.PROFIT_I_04          , T2.PROFIT_I_05        , T2.PROFIT_I_06
         , T2.PROFIT_I_07          , T2.PROFIT_I_08        , T2.PROFIT_I_09
         , T2.PROFIT_I_10          , T2.PROFIT_I_11        , T2.PROFIT_I_12
    
         --20. 우리사주 조합 인출금
         , T2.OWNER_STOCK_DRAW_I_01, T2.OWNER_STOCK_DRAW_I_02, T2.OWNER_STOCK_DRAW_I_03 
         , T2.OWNER_STOCK_DRAW_I_04, T2.OWNER_STOCK_DRAW_I_05, T2.OWNER_STOCK_DRAW_I_06 
         , T2.OWNER_STOCK_DRAW_I_07, T2.OWNER_STOCK_DRAW_I_08, T2.OWNER_STOCK_DRAW_I_09 
         , T2.OWNER_STOCK_DRAW_I_10, T2.OWNER_STOCK_DRAW_I_11, T2.OWNER_STOCK_DRAW_I_12 
    
		 -- 21.임원퇴직 소득금액 한도 초과액
		 , T2.OF_RETR_OVER_01, T2.OF_RETR_OVER_02, T2.OF_RETR_OVER_03, T2.OF_RETR_OVER_04, T2.OF_RETR_OVER_05, T2.OF_RETR_OVER_06
		 , T2.OF_RETR_OVER_07, T2.OF_RETR_OVER_08, T2.OF_RETR_OVER_09, T2.OF_RETR_OVER_10, T2.OF_RETR_OVER_11, T2.OF_RETR_OVER_12

		 --31. 간이세액표적용대상 급여구간
		 , T5.TAX_STRT_AMOUNT_01, T5.TAX_STRT_AMOUNT_02, T5.TAX_STRT_AMOUNT_03, T5.TAX_STRT_AMOUNT_04, T5.TAX_STRT_AMOUNT_05, T5.TAX_STRT_AMOUNT_06
		 , T5.TAX_STRT_AMOUNT_07, T5.TAX_STRT_AMOUNT_08, T5.TAX_STRT_AMOUNT_09, T5.TAX_STRT_AMOUNT_10, T5.TAX_STRT_AMOUNT_11, T5.TAX_STRT_AMOUNT_12
		 , T5.TAX_END_AMOUNT_01 , T5.TAX_END_AMOUNT_02 , T5.TAX_END_AMOUNT_03 , T5.TAX_END_AMOUNT_04 , T5.TAX_END_AMOUNT_05 , T5.TAX_END_AMOUNT_06
		 , T5.TAX_END_AMOUNT_07 , T5.TAX_END_AMOUNT_08 , T5.TAX_END_AMOUNT_09 , T5.TAX_END_AMOUNT_10 , T5.TAX_END_AMOUNT_11 , T5.TAX_END_AMOUNT_12
		 		 		
		 --32. 간이세액표적용대상 소득세(기준: 급여 + 상여 + 주식매수선택권행사이익 + 우리사주조합인출금) 
		 , T5.EASY_IN_TAX_01, T5.EASY_IN_TAX_02, T5.EASY_IN_TAX_03, T5.EASY_IN_TAX_04, T5.EASY_IN_TAX_05, T5.EASY_IN_TAX_06
		 , T5.EASY_IN_TAX_07, T5.EASY_IN_TAX_08, T5.EASY_IN_TAX_09, T5.EASY_IN_TAX_10, T5.EASY_IN_TAX_11, T5.EASY_IN_TAX_12

		 --33. 그외 소득세(기준:인정상여, 임원퇴직소득금액한도초과액)
         , T2.IN_TAX_ETC_01        , T2.IN_TAX_ETC_02      , T2.IN_TAX_ETC_03 
         , T2.IN_TAX_ETC_04        , T2.IN_TAX_ETC_05      , T2.IN_TAX_ETC_06 
         , T2.IN_TAX_ETC_07        , T2.IN_TAX_ETC_08      , T2.IN_TAX_ETC_09 
         , T2.IN_TAX_ETC_10        , T2.IN_TAX_ETC_11      , T2.IN_TAX_ETC_12 
    
         --35. 지방소득세
		 , T5.EASY_LOCAL_TAX_01, T5.EASY_LOCAL_TAX_02, T5.EASY_LOCAL_TAX_03, T5.EASY_LOCAL_TAX_04, T5.EASY_LOCAL_TAX_05, T5.EASY_LOCAL_TAX_06
		 , T5.EASY_LOCAL_TAX_07, T5.EASY_LOCAL_TAX_08, T5.EASY_LOCAL_TAX_09, T5.EASY_LOCAL_TAX_10, T5.EASY_LOCAL_TAX_11, T5.EASY_LOCAL_TAX_12
    
         /*비과세소득*/
		 , T2.NON_TAX_M_CODE          , T2.NON_TAX_Y_CODE
         --38. 국외근로소득 원화
         , T2.NON_TAX_M00_01          , T2.NON_TAX_M00_02        , T2.NON_TAX_M00_03  
         , T2.NON_TAX_M00_04          , T2.NON_TAX_M00_05        , T2.NON_TAX_M00_06  
         , T2.NON_TAX_M00_07          , T2.NON_TAX_M00_08        , T2.NON_TAX_M00_09  
         , T2.NON_TAX_M00_10          , T2.NON_TAX_M00_11        , T2.NON_TAX_M00_12  
    
         --39. 야간근로수당등
         , T2.NON_TAX_O01_01          , T2.NON_TAX_O01_02        , T2.NON_TAX_O01_03  
         , T2.NON_TAX_O01_04          , T2.NON_TAX_O01_05        , T2.NON_TAX_O01_06  
         , T2.NON_TAX_O01_07          , T2.NON_TAX_O01_08        , T2.NON_TAX_O01_09  
         , T2.NON_TAX_O01_10          , T2.NON_TAX_O01_11        , T2.NON_TAX_O01_12 
    
         --40. 출산보육수당
         , T2.NON_TAX_Q01_01          , T2.NON_TAX_Q01_02        , T2.NON_TAX_Q01_03  
         , T2.NON_TAX_Q01_04          , T2.NON_TAX_Q01_05        , T2.NON_TAX_Q01_06  
         , T2.NON_TAX_Q01_07          , T2.NON_TAX_Q01_08        , T2.NON_TAX_Q01_09  
         , T2.NON_TAX_Q01_10          , T2.NON_TAX_Q01_11        , T2.NON_TAX_Q01_12  
    
         --41.~ 49.
         , T2.NON_TAX_ETC1_01         , T2.NON_TAX_ETC1_02       , T2.NON_TAX_ETC1_03 
         , T2.NON_TAX_ETC1_04         , T2.NON_TAX_ETC1_05       , T2.NON_TAX_ETC1_06 
         , T2.NON_TAX_ETC1_07         , T2.NON_TAX_ETC1_08       , T2.NON_TAX_ETC1_09 
         , T2.NON_TAX_ETC1_10         , T2.NON_TAX_ETC1_11       , T2.NON_TAX_ETC1_12 
     
         --50. 합계
         , T2.NON_TAX_TOT_Y_01        , T2.NON_TAX_TOT_Y_02      , T2.NON_TAX_TOT_Y_03 
         , T2.NON_TAX_TOT_Y_04        , T2.NON_TAX_TOT_Y_05      , T2.NON_TAX_TOT_Y_06 
         , T2.NON_TAX_TOT_Y_07        , T2.NON_TAX_TOT_Y_08      , T2.NON_TAX_TOT_Y_09 
         , T2.NON_TAX_TOT_Y_10        , T2.NON_TAX_TOT_Y_11      , T2.NON_TAX_TOT_Y_12 
    
         --51. 식대
         , T2.NON_TAX_P01_01          , T2.NON_TAX_P01_02        , T2.NON_TAX_P01_03
         , T2.NON_TAX_P01_04          , T2.NON_TAX_P01_05        , T2.NON_TAX_P01_06
         , T2.NON_TAX_P01_07          , T2.NON_TAX_P01_08        , T2.NON_TAX_P01_09
         , T2.NON_TAX_P01_10          , T2.NON_TAX_P01_11        , T2.NON_TAX_P01_12
    								  							 
         --52. 자가운전보조금			 							 
         , T2.NON_TAX_H03_01          , T2.NON_TAX_H03_02        , T2.NON_TAX_H03_03
         , T2.NON_TAX_H03_04          , T2.NON_TAX_H03_05        , T2.NON_TAX_H03_06
         , T2.NON_TAX_H03_07          , T2.NON_TAX_H03_08        , T2.NON_TAX_H03_09
         , T2.NON_TAX_H03_10          , T2.NON_TAX_H03_11        , T2.NON_TAX_H03_12
    
         --53. ~ 59.
         , T2.NON_TAX_ETC2_01         , T2.NON_TAX_ETC2_02       , T2.NON_TAX_ETC2_03
         , T2.NON_TAX_ETC2_04         , T2.NON_TAX_ETC2_05       , T2.NON_TAX_ETC2_06
         , T2.NON_TAX_ETC2_07         , T2.NON_TAX_ETC2_08       , T2.NON_TAX_ETC2_09
         , T2.NON_TAX_ETC2_10         , T2.NON_TAX_ETC2_11       , T2.NON_TAX_ETC2_12
    
         --60. 합계
         , T2.NON_TAX_TOT_N_01        , T2.NON_TAX_TOT_N_02      , T2.NON_TAX_TOT_N_03 
         , T2.NON_TAX_TOT_N_04        , T2.NON_TAX_TOT_N_05      , T2.NON_TAX_TOT_N_06 
         , T2.NON_TAX_TOT_N_07        , T2.NON_TAX_TOT_N_08      , T2.NON_TAX_TOT_N_09 
         , T2.NON_TAX_TOT_N_10        , T2.NON_TAX_TOT_N_11      , T2.NON_TAX_TOT_N_12

		 --61. 감면소득
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_01 ELSE 0 END AS SUM_TAX_I_01
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_02 ELSE 0 END AS SUM_TAX_I_02
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_03 ELSE 0 END AS SUM_TAX_I_03
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_04 ELSE 0 END AS SUM_TAX_I_04
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_05 ELSE 0 END AS SUM_TAX_I_05
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_06 ELSE 0 END AS SUM_TAX_I_06
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_07 ELSE 0 END AS SUM_TAX_I_07
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_08 ELSE 0 END AS SUM_TAX_I_08
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_09 ELSE 0 END AS SUM_TAX_I_09
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_10 ELSE 0 END AS SUM_TAX_I_10
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_11 ELSE 0 END AS SUM_TAX_I_11
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.SUM_TAX_I_12 ELSE 0 END AS SUM_TAX_I_12

		 --62. 감면세액
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_01 + T2.IN_TAX_ETC_01 - T2.IN_TAX_01 ELSE 0 END AS TAX_REDUCE_01
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_02 + T2.IN_TAX_ETC_02 - T2.IN_TAX_02 ELSE 0 END AS TAX_REDUCE_02
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_03 + T2.IN_TAX_ETC_03 - T2.IN_TAX_03 ELSE 0 END AS TAX_REDUCE_03
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_04 + T2.IN_TAX_ETC_04 - T2.IN_TAX_04 ELSE 0 END AS TAX_REDUCE_04
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_05 + T2.IN_TAX_ETC_05 - T2.IN_TAX_05 ELSE 0 END AS TAX_REDUCE_05
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_06 + T2.IN_TAX_ETC_06 - T2.IN_TAX_06 ELSE 0 END AS TAX_REDUCE_06
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_07 + T2.IN_TAX_ETC_07 - T2.IN_TAX_07 ELSE 0 END AS TAX_REDUCE_07
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_08 + T2.IN_TAX_ETC_08 - T2.IN_TAX_08 ELSE 0 END AS TAX_REDUCE_08
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_09 + T2.IN_TAX_ETC_09 - T2.IN_TAX_09 ELSE 0 END AS TAX_REDUCE_09
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_10 + T2.IN_TAX_ETC_10 - T2.IN_TAX_10 ELSE 0 END AS TAX_REDUCE_10
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_11 + T2.IN_TAX_ETC_11 - T2.IN_TAX_11 ELSE 0 END AS TAX_REDUCE_11
		 , CASE WHEN (ISNULL(T3.NONTAX_FR,'') != '' AND ISNULL(T3.NONTAX_TO,'') != '') THEN T5.EASY_IN_TAX_12 + T2.IN_TAX_ETC_12 - T2.IN_TAX_12 ELSE 0 END AS TAX_REDUCE_12

         --64. 차감원천징수액 소득세
         , T2.IN_TAX_01        , T2.IN_TAX_02      , T2.IN_TAX_03 
         , T2.IN_TAX_04        , T2.IN_TAX_05      , T2.IN_TAX_06 
         , T2.IN_TAX_07        , T2.IN_TAX_08      , T2.IN_TAX_09 
         , T2.IN_TAX_10        , T2.IN_TAX_11      , T2.IN_TAX_12

         --65. 차감원천징수액 지방소득세
         , T2.LOCAL_TAX_01         , T2.LOCAL_TAX_02       , T2.LOCAL_TAX_03 
         , T2.LOCAL_TAX_04         , T2.LOCAL_TAX_05       , T2.LOCAL_TAX_06 
         , T2.LOCAL_TAX_07         , T2.LOCAL_TAX_08       , T2.LOCAL_TAX_09 
         , T2.LOCAL_TAX_10         , T2.LOCAL_TAX_11       , T2.LOCAL_TAX_12 		 

         --68. 연금보험
         , T2.ANU_TAX_01           , T2.ANU_TAX_02         , T2.ANU_TAX_03
         , T2.ANU_TAX_04           , T2.ANU_TAX_05         , T2.ANU_TAX_06
         , T2.ANU_TAX_07           , T2.ANU_TAX_08         , T2.ANU_TAX_09
         , T2.ANU_TAX_10           , T2.ANU_TAX_11         , T2.ANU_TAX_12
    
         --69. 건강보험
         , T2.MED_TAX_01           , T2.MED_TAX_02         , T2.MED_TAX_03
         , T2.MED_TAX_04           , T2.MED_TAX_05         , T2.MED_TAX_06
         , T2.MED_TAX_07           , T2.MED_TAX_08         , T2.MED_TAX_09
         , T2.MED_TAX_10           , T2.MED_TAX_11         , T2.MED_TAX_12
    
         --70. 고용보험
         , T2.HIR_TAX_01           , T2.HIR_TAX_02         , T2.HIR_TAX_03
         , T2.HIR_TAX_04           , T2.HIR_TAX_05         , T2.HIR_TAX_06
         , T2.HIR_TAX_07           , T2.HIR_TAX_08         , T2.HIR_TAX_09
         , T2.HIR_TAX_10           , T2.HIR_TAX_11         , T2.HIR_TAX_12
    
         --71. 기부금
         , T2.GIFT_TAX_01          , T2.GIFT_TAX_02        , T2.GIFT_TAX_03
         , T2.GIFT_TAX_04          , T2.GIFT_TAX_05        , T2.GIFT_TAX_06
         , T2.GIFT_TAX_07          , T2.GIFT_TAX_08        , T2.GIFT_TAX_09
         , T2.GIFT_TAX_10          , T2.GIFT_TAX_11        , T2.GIFT_TAX_12

		 --72. 비고
         , T2.GIFT_CODE_01         , T2.GIFT_CODE_02       , T2.GIFT_CODE_03
         , T2.GIFT_CODE_04         , T2.GIFT_CODE_05       , T2.GIFT_CODE_06
         , T2.GIFT_CODE_07         , T2.GIFT_CODE_08       , T2.GIFT_CODE_09
         , T2.GIFT_CODE_10         , T2.GIFT_CODE_11       , T2.GIFT_CODE_12

      FROM            HUM100T      T1  WITH (NOLOCK)		  
           INNER JOIN HAD800TV_NEW T2  WITH (NOLOCK) ON T2.COMP_CODE     = T1.COMP_CODE
                                                    AND T2.PERSON_NUMB   = T1.PERSON_NUMB
                                                    AND T2.YEAR_YYYY     = @YEAR_YYYY
		   INNER JOIN ( SELECT COMP_CODE
					         , PERSON_NUMB
						     ,(CASE WHEN ISNULL(YOUTH_EXEMP_DATE,'')  = '' THEN ''
								    WHEN ISNULL(YOUTH_EXEMP_DATE,'') != '' AND (@YEAR_YYYY + '0101') &lt;= ISNULL(YOUTH_EXEMP_DATE ,'') THEN 
									     (CASE WHEN (ISNULL(JOIN_DATE,'') &gt; ISNULL(YOUTH_EXEMP_DATE ,'')) THEN ''
											   ELSE (CASE WHEN LEFT(ISNULL(JOIN_DATE,''),4) = @YEAR_YYYY THEN ISNULL(JOIN_DATE,'')                        
													      ELSE @YEAR_YYYY + '0101'                          
												      END)
										   END)
								    ELSE ''
							    END) AS NONTAX_FR
							 ,(CASE WHEN ISNULL(YOUTH_EXEMP_DATE,'')  = '' THEN ''
								    WHEN ISNULL(YOUTH_EXEMP_DATE,'') != '' AND (@YEAR_YYYY + '0101') &lt;= ISNULL(YOUTH_EXEMP_DATE ,'') THEN 
										 (CASE WHEN (CASE WHEN RETR_DATE != '00000000' AND LEN(RETR_DATE) &gt; 0 THEN 
										   					   (CASE WHEN RETR_DATE &gt; @YEAR_YYYY + '1231' THEN @YEAR_YYYY + '1231'
																 	 ELSE RETR_DATE
																 END)
														  ELSE @YEAR_YYYY + '1231'
													  END) &gt; ISNULL(YOUTH_EXEMP_DATE,'') THEN ISNULL(YOUTH_EXEMP_DATE,'')                             
											   ELSE (CASE WHEN RETR_DATE != '00000000' AND LEN(RETR_DATE) > 0 THEN
															   (CASE WHEN RETR_DATE &gt; @YEAR_YYYY + '1231' THEN @YEAR_YYYY + '1231'
																  	 ELSE RETR_DATE
															     END)
														  ELSE @YEAR_YYYY + '1231'
												      END)                                                 
											END)
									ELSE ''
							    END) AS NONTAX_TO                      
						   FROM HUM100T
						  WHERE COMP_CODE = @COMP_CODE
			          )        T3                ON T3.COMP_CODE     = T1.COMP_CODE
						                        AND T3.PERSON_NUMB   = T1.PERSON_NUMB           
           INNER JOIN BOR120T  T4  WITH (NOLOCK) ON T4.COMP_CODE     = T1.COMP_CODE
                                                AND T4.DIV_CODE      = T1.SECT_CODE
           LEFT JOIN ( SELECT A.COMP_CODE
							 , A.PERSON_NUMB
							 , A.YEAR_YYYY							 
							 , SUM(CASE WHEN A.YEAR_MM = '01' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_01
							 , SUM(CASE WHEN A.YEAR_MM = '02' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_02
							 , SUM(CASE WHEN A.YEAR_MM = '03' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_03
							 , SUM(CASE WHEN A.YEAR_MM = '04' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_04
							 , SUM(CASE WHEN A.YEAR_MM = '05' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_05
							 , SUM(CASE WHEN A.YEAR_MM = '06' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_06
							 , SUM(CASE WHEN A.YEAR_MM = '07' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_07
							 , SUM(CASE WHEN A.YEAR_MM = '08' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_08
							 , SUM(CASE WHEN A.YEAR_MM = '09' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_09
							 , SUM(CASE WHEN A.YEAR_MM = '10' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_10
							 , SUM(CASE WHEN A.YEAR_MM = '11' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_11
							 , SUM(CASE WHEN A.YEAR_MM = '12' THEN ISNULL(SUM_TAX_I, 0) ELSE 0 END) AS SUM_TAX_I_12

							 , SUM(CASE WHEN A.YEAR_MM = '01' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_01
							 , SUM(CASE WHEN A.YEAR_MM = '02' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_02
							 , SUM(CASE WHEN A.YEAR_MM = '03' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_03
							 , SUM(CASE WHEN A.YEAR_MM = '04' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_04
							 , SUM(CASE WHEN A.YEAR_MM = '05' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_05
							 , SUM(CASE WHEN A.YEAR_MM = '06' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_06
							 , SUM(CASE WHEN A.YEAR_MM = '07' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_07
							 , SUM(CASE WHEN A.YEAR_MM = '08' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_08
							 , SUM(CASE WHEN A.YEAR_MM = '09' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_09
							 , SUM(CASE WHEN A.YEAR_MM = '10' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_10
							 , SUM(CASE WHEN A.YEAR_MM = '11' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_11
							 , SUM(CASE WHEN A.YEAR_MM = '12' THEN ISNULL(TAX_STRT_AMOUNT, 0) ELSE 0 END) AS TAX_STRT_AMOUNT_12

							 , SUM(CASE WHEN A.YEAR_MM = '01' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_01
							 , SUM(CASE WHEN A.YEAR_MM = '02' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_02
							 , SUM(CASE WHEN A.YEAR_MM = '03' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_03
							 , SUM(CASE WHEN A.YEAR_MM = '04' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_04
							 , SUM(CASE WHEN A.YEAR_MM = '05' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_05
							 , SUM(CASE WHEN A.YEAR_MM = '06' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_06
							 , SUM(CASE WHEN A.YEAR_MM = '07' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_07
							 , SUM(CASE WHEN A.YEAR_MM = '08' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_08
							 , SUM(CASE WHEN A.YEAR_MM = '09' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_09
							 , SUM(CASE WHEN A.YEAR_MM = '10' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_10
							 , SUM(CASE WHEN A.YEAR_MM = '11' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_11
							 , SUM(CASE WHEN A.YEAR_MM = '12' THEN ISNULL(TAX_END_AMOUNT, 0) ELSE 0 END) AS TAX_END_AMOUNT_12

							 , SUM(CASE WHEN A.YEAR_MM = '01' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_01
							 , SUM(CASE WHEN A.YEAR_MM = '02' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_02
							 , SUM(CASE WHEN A.YEAR_MM = '03' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_03
							 , SUM(CASE WHEN A.YEAR_MM = '04' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_04
							 , SUM(CASE WHEN A.YEAR_MM = '05' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_05
							 , SUM(CASE WHEN A.YEAR_MM = '06' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_06
							 , SUM(CASE WHEN A.YEAR_MM = '07' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_07
							 , SUM(CASE WHEN A.YEAR_MM = '08' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_08
							 , SUM(CASE WHEN A.YEAR_MM = '09' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_09
							 , SUM(CASE WHEN A.YEAR_MM = '10' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_10
							 , SUM(CASE WHEN A.YEAR_MM = '11' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_11
							 , SUM(CASE WHEN A.YEAR_MM = '12' THEN ISNULL(DED_GRADE, 0) ELSE 0 END) AS EASY_IN_TAX_12

							 , SUM(CASE WHEN A.YEAR_MM = '01' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_01
							 , SUM(CASE WHEN A.YEAR_MM = '02' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_02
							 , SUM(CASE WHEN A.YEAR_MM = '03' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_03
							 , SUM(CASE WHEN A.YEAR_MM = '04' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_04
							 , SUM(CASE WHEN A.YEAR_MM = '05' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_05
							 , SUM(CASE WHEN A.YEAR_MM = '06' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_06
							 , SUM(CASE WHEN A.YEAR_MM = '07' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_07
							 , SUM(CASE WHEN A.YEAR_MM = '08' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_08
							 , SUM(CASE WHEN A.YEAR_MM = '09' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_09
							 , SUM(CASE WHEN A.YEAR_MM = '10' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_10
							 , SUM(CASE WHEN A.YEAR_MM = '11' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_11
							 , SUM(CASE WHEN A.YEAR_MM = '12' THEN ISNULL(EASY_LOCAL_TAX, 0) ELSE 0 END) AS EASY_LOCAL_TAX_12
						  FROM ( SELECT A.COMP_CODE
								      , A.YEAR_YYYY
									  , A.PERSON_NUMB
									  , A.YEAR_MM
									  , MAX(B.TAX_MM)                 AS TAX_MM
									  , A.SUM_TAX_I
									  , TAX_STRT_AMOUNT
									  , TAX_END_AMOUNT
									  , DED_GRADE
									  , FLOOR((DED_GRADE/10)/10) * 10 AS EASY_LOCAL_TAX
								   FROM            #TEMP_PAY  AS A 
						  			    INNER JOIN #TEMP_EASY AS B ON B.TAX_YYYY    = A.YEAR_YYYY
						  										AND B.DED_GRADE_NUM = A.SUPP_NUM
								  WHERE A.COMP_CODE =  @COMP_CODE
								    AND A.YEAR_YYYY =  @YEAR_YYYY
								    AND A.SUM_TAX_I &gt;= B.TAX_STRT_AMOUNT
								    AND A.SUM_TAX_I &lt;  B.TAX_END_AMOUNT
								    AND A.SUPP_NUM  =  B.DED_GRADE_NUM
								    AND B.TAX_MM    &lt;= A.YEAR_MM
								    AND A.SUM_TAX_I &lt;= 10000000
								  GROUP BY A.COMP_CODE, PERSON_NUMB, YEAR_YYYY, YEAR_MM, SUPP_NUM
										 , TAX_STRT_AMOUNT, TAX_END_AMOUNT, DED_GRADE_NUM, DED_GRADE, SUM_TAX_I
										 
                                 UNION ALL

                                 SELECT X.COMP_CODE
                                      , X.YEAR_YYYY
                                      , X.PERSON_NUMB
                                      , X.YEAR_MM
                                      , X.TAX_MM                                    
                                      , X.SUM_TAX_I
                                      , X.TAX_STRT_AMOUNT
                                      , X.TAX_END_AMOUNT
                                      , X.DED_GRADE
                                      , FLOOR((X.DED_GRADE/10)/10) * 10 AS EASY_LOCAL_TAX
                                   FROM
                                        ( SELECT A.COMP_CODE
                                              , A.YEAR_YYYY
                                              , A.PERSON_NUMB
                                              , A.YEAR_MM
                                              , MAX(B.TAX_MM) AS TAX_MM
                                              , A.SUM_TAX_I
                                              , CASE WHEN A.SUM_TAX_I &gt; 10000000 AND A.SUM_TAX_I &lt;= 14000000 THEN 10000000 
                                                     WHEN A.SUM_TAX_I &gt; 14000000 AND A.SUM_TAX_I &lt;= 28000000 THEN 14000000  
                                                     WHEN A.SUM_TAX_I &gt; 28000000 AND A.SUM_TAX_I &lt;= 30000000 THEN 28000000
                                                     WHEN A.SUM_TAX_I &gt; 30000000 AND A.SUM_TAX_I &lt;= 45000000 THEN 30000000
                                                     WHEN A.SUM_TAX_I &gt; 45000000                                THEN 45000000
                                                  END AS TAX_STRT_AMOUNT  
                                              , CASE WHEN A.SUM_TAX_I &gt; 10000000 AND A.SUM_TAX_I &lt;= 14000000 THEN 14000000 
                                                     WHEN A.SUM_TAX_I &gt; 14000000 AND A.SUM_TAX_I &lt;= 28000000 THEN 28000000  
                                                     WHEN A.SUM_TAX_I &gt; 28000000 AND A.SUM_TAX_I &lt;= 30000000 THEN 30000000
                                                     WHEN A.SUM_TAX_I &gt; 30000000 AND A.SUM_TAX_I &lt;= 45000000 THEN 45000000
                                                     WHEN A.SUM_TAX_I &gt; 45000000                                THEN 200000000
                                                  END AS TAX_END_AMOUNT                                   
                                              , CASE WHEN A.SUM_TAX_I &gt; 10000000 AND A.SUM_TAX_I &lt;= 14000000 THEN FLOOR((B.DED_GRADE + (A.SUM_TAX_I-10000000) * 0.98 * 0.35)/10)*10
                                                     WHEN A.SUM_TAX_I &gt; 14000000 AND A.SUM_TAX_I &lt;= 28000000 THEN FLOOR((B.DED_GRADE + 1372000  + ( SUM_TAX_I - 14000000) * 0.98 * 0.38)/10)*10 
                                                     WHEN A.SUM_TAX_I &gt; 28000000 AND A.SUM_TAX_I &lt;= 30000000 THEN FLOOR((B.DED_GRADE + 6585600  + ( SUM_TAX_I - 28000000) * 0.98 * 0.4)/10)*10 
                                                     WHEN A.SUM_TAX_I &gt; 30000000 AND A.SUM_TAX_I &lt;= 45000000 THEN FLOOR((B.DED_GRADE + 7385600  + ( SUM_TAX_I - 30000000) * 0.4)/10)*10 
                                                     WHEN A.SUM_TAX_I &gt; 45000000                                THEN FLOOR((B.DED_GRADE + 13385600 + ( SUM_TAX_I - 45000000) * 0.42)/10)*10 
                                                 END AS DED_GRADE 
                                           FROM            #TEMP_PAY  AS A 
                                                INNER JOIN #TEMP_EASY AS B ON B.TAX_YYYY    = A.YEAR_YYYY
                                                                        AND B.DED_GRADE_NUM = A.SUPP_NUM
                                          WHERE A.COMP_CODE =  @COMP_CODE
                                            AND A.YEAR_YYYY =  @YEAR_YYYY                                   
                                            AND A.SUM_TAX_I &gt; 10000000
                                            AND A.SUPP_NUM  =  B.DED_GRADE_NUM
                                            AND B.TAX_STRT_AMOUNT = 10000000
                                            AND B.TAX_END_AMOUNT  = 10000000
                                            AND B.TAX_MM    &lt;= A.YEAR_MM                        
                                          GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.YEAR_YYYY, A.YEAR_MM, A.SUPP_NUM
                                                 , B.TAX_STRT_AMOUNT,  B.TAX_END_AMOUNT,  B.DED_GRADE_NUM,  B.DED_GRADE, A.SUM_TAX_I    
                                        ) AS X                             									 
				               ) AS A
			            GROUP BY  A.COMP_CODE, A.PERSON_NUMB, A.YEAR_YYYY
					   )	   T5                 ON T5.COMP_CODE     = T2.COMP_CODE
					                             AND T5.YEAR_YYYY     = T2.YEAR_YYYY
								 				 AND T5.PERSON_NUMB   = T2.PERSON_NUMB
           LEFT  JOIN BSA100T  M1  WITH (NOLOCK)  ON M1.COMP_CODE     = T1.COMP_CODE
                                                 AND M1.MAIN_CODE     = 'B012'
                                                 AND M1.SUB_CODE      = T1.NATION_CODE
     WHERE T1.COMP_CODE		= @COMP_CODE
       AND T2.YEAR_YYYY		= @YEAR_YYYY
    <if test="RETR_TYPE == &quot;N&quot;">
       AND ISNULL(NULLIF(T1.RETR_DATE, ''), '00000000')	 = '00000000'
    </if>
    <if test="RETR_TYPE == &quot;Y&quot;">
       AND ISNULL(NULLIF(T1.RETR_DATE, ''), '00000000')	!= '00000000'
    </if>
    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND T1.SECT_CODE		= #{DIV_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
       AND T1.PAY_CODE		= #{PAY_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
       AND T1.PAY_PROV_FLAG	= #{PAY_PROV_FLAG}
    </if>
    <choose>
		<when test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	   AND T1.PERSON_NUMB	= #{PERSON_NUMB}
		</when>
		<otherwise>
			<if test="@foren.Ognl@isNotEmpty(NAME)">
	   AND T1.NAME			&gt;= #{NAME}
			</if>
		</otherwise>
    </choose>
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       AND T1.DEPT_CODE		&gt;= #{FR_DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       AND T1.DEPT_CODE		&lt;= #{TO_DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
       AND ((T8.PAY_YYYYMM &gt;= #{PAYFRYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
       AND ((T8.PAY_YYYYMM &lt;= #{PAYTOYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
       AND T1.RETR_DATE		&gt;=  #{FRRETIREDATE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
       AND T1.RETR_DATE		&lt;= #{TORETIREDATE}
    </if>
     ORDER BY T1.DIV_CODE, T1.DEPT_CODE, T1.POST_CODE, T1.NAME, T1.PERSON_NUMB
	</select>
	
	<select id="had850rkrServiceImpl.selectlist2010" parameterType="Map" resultType="rMap">
		--had850rkr.Chad850rkr[fnHad850nQ2010] selectlist2010
    SELECT DISTINCT 
    		T1.PERSON_NUMB
         , T6.DIV_FULL_NAME          AS COMP_NAME
         , T1.YEAR_YYYY            , T4.NAME
         , unilite.fnCipherDecrypt(T4.REPRE_NUM, 'A') AS REPRE_NUM            , T1.DEPT_CODE          , T1.DEPT_NAME
    
         , ISNULL(M1.CODE_NAME, '')  AS PAY_GRADE
    
         , T1.SPOUSE               , T1.WOMAN              , T1.SUPP_NUM         
         , T1.DEFORM_NUM           , T1.AGED_NUM           , T1.BRING_CHILD_NUM  
         , T1.INCOME_SUPP_TOTAL_I  , T1.INCOME_DED_I       , T1.EARN_INCOME_I    
         , T1.PER_DED_I            , T1.SPOUSE_DED_I       , T1.SUPP_SUB_I       
         , T1.AGED_DED_I           , T1.DEFORM_DED_I       , T1.WOMAN_DED_I      
         , T1.BRING_CHILD_DED_I    , T1.ADD_DED_I          , T1.ETC_INSUR_I      
         , T1.MED_PREMINM_I        , T1.HIRE_INSUR_I       , T1.MED_INSUR_DED_I  
         , T1.MED_DED_I            , T1.EDUC_DED_I         , T1.HOUS_AMOUNT_I    
         , T1.GIFT_DED_I           , T1.STD_DED_I          , T1.DED_INCOME_I     
         , T1.PRIV_PENS_I          , T1.SKILL_DED_I        , T1.INVESTMENT_DED_I 
         , T1.CARD_DED_I           , T1.TAX_STD_I          , T1.COMP_TAX_I       
         , T1.IN_TAX_DED_I         , T1.SAVE_TAX_I         , T1.HOUS_INTER_I     
         , T1.OUTSIDE_INCOME_I     , T1.STOCK_SAVE_I       , T1.TAX_DED_SUM_I    
         , T1.INCOME_REDU_I        , T1.TAXES_REDU_I       , T1.REDU_TAX_SUM_I   
         , T1.DEF_IN_TAX_I         , T1.DEF_SP_TAX_I       , T1.DEF_LOCAL_TAX_I  
         , T1.PRE_IN_TAX_I         , T1.PRE_SP_TAX_I       , T1.PRE_LOCAL_TAX_I  
         , T1.NOW_IN_TAX_I         , T1.NOW_SP_TAX_I       , T1.NOW_LOCAL_TAX_I  
         , T1.IN_TAX_I             , T1.SP_TAX_I           , T1.LOCAL_TAX_I      
    
         , T3.ETC_INSUR_I            AS ETC_INSUR_S
         , T3.MED_TOTAL_I            AS MED_TOTAL_S
         , T3.DEFORM_MED_I           AS DEFORM_MED_S
         , T3.PER_EDUC_I             AS PER_EDUC_S
         , T3.STUD_EDUC_I            AS STUD_EDUC_S
         , T3.UNIV_EDUC_I            AS UNIV_EDUC_S
         , T3.KIND_EDUC_I            AS KIND_EDUC_S
         , T3.LEGAL_GIFT_I           AS LEGAL_GIFT_S
         , T3.ASS_GIFT_I             AS ASS_GIFT_S
         , T3.PRIV_GIFT_I            AS PRIV_GIFT_S
         , ISNULL(T3.HOUS_AMOUNT_I, 0) + ISNULL(T3.HOUS_BU_AMT  , 0)
                                       + ISNULL(T3.HOUS_WORK_AMT, 0)
                                       + ISNULL(T3.HOUS_LONG_AMT, 0) AS HOUS_AMOUNT_S
         , T3.PRIV_PENS_I            AS PRIV_PENS_S
         , T3.HOUS_INTER_I           AS HOUS_INTER_S
         , T3.FORE_TAX_I             AS FORE_TAX_S
         , T3.INVESTMENT_I           AS INVESTMENT_S
         , T3.CARD_USE_I             AS CARD_USE_S
         , T4.KOR_ADDR
         , T3.DEFORM_EDUC_I
         , T3.HOUS_AMOUNT_TOT_I
         , T1.STAFF_STOCK_DED_I
         , T3.PENS_I                 AS PENS_I_01
         , T1.PENS_I                 AS PENS_I_02
         , FLOOR(ISNULL(T1.INCOME_SUPP_TOTAL_I, 0) * ISNULL(T13.MED_DED_STD, 0)) AS MED_DED_STD 
         , ISNULL(T13.HOUS_AMOUNT_LMT, 0)                                        AS HOUS_AMOUNT_LMT
    
        /*근로소득 지급명세서*/
         --(16)급여
         , T2.PAY_TAX_01           , T2.PAY_TAX_02         , T2.PAY_TAX_03  
         , T2.PAY_TAX_04           , T2.PAY_TAX_05         , T2.PAY_TAX_06  
         , T2.PAY_TAX_07           , T2.PAY_TAX_08         , T2.PAY_TAX_09  
         , T2.PAY_TAX_10           , T2.PAY_TAX_11         , T2.PAY_TAX_12  
     
         --(17)상여
         , T2.BONUS_TAX_01         , T2.BONUS_TAX_02       , T2.BONUS_TAX_03
         , T2.BONUS_TAX_04         , T2.BONUS_TAX_05       , T2.BONUS_TAX_06
         , T2.BONUS_TAX_07         , T2.BONUS_TAX_08       , T2.BONUS_TAX_09
         , T2.BONUS_TAX_10         , T2.BONUS_TAX_11       , T2.BONUS_TAX_12
    
         --(18)인정상여
         , T2.ADD_BONUS_01         , T2.ADD_BONUS_02       , T2.ADD_BONUS_03
         , T2.ADD_BONUS_04         , T2.ADD_BONUS_05       , T2.ADD_BONUS_06
         , T2.ADD_BONUS_07         , T2.ADD_BONUS_08       , T2.ADD_BONUS_09
         , T2.ADD_BONUS_10         , T2.ADD_BONUS_11       , T2.ADD_BONUS_12
    
         --(19)주식매수선택권 행사이익
         , ISNULL(T10.PROFIT_I_01       , 0) AS PROFIT_I_01
         , ISNULL(T10.PROFIT_I_02       , 0) AS PROFIT_I_02
         , ISNULL(T10.PROFIT_I_03       , 0) AS PROFIT_I_03
         , ISNULL(T10.PROFIT_I_04       , 0) AS PROFIT_I_04
         , ISNULL(T10.PROFIT_I_05       , 0) AS PROFIT_I_05
         , ISNULL(T10.PROFIT_I_06       , 0) AS PROFIT_I_06
         , ISNULL(T10.PROFIT_I_07       , 0) AS PROFIT_I_07
         , ISNULL(T10.PROFIT_I_08       , 0) AS PROFIT_I_08
         , ISNULL(T10.PROFIT_I_09       , 0) AS PROFIT_I_09
         , ISNULL(T10.PROFIT_I_10       , 0) AS PROFIT_I_10
         , ISNULL(T10.PROFIT_I_11       , 0) AS PROFIT_I_11
         , ISNULL(T10.PROFIT_I_12       , 0) AS PROFIT_I_12
    
         --(20)우리사주 조합 인출금
         , ISNULL(T11.PAY_TOTAL_I_01    , 0) AS PAY_TOTAL_I_01 
         , ISNULL(T11.PAY_TOTAL_I_02    , 0) AS PAY_TOTAL_I_02 
         , ISNULL(T11.PAY_TOTAL_I_03    , 0) AS PAY_TOTAL_I_03 
         , ISNULL(T11.PAY_TOTAL_I_04    , 0) AS PAY_TOTAL_I_04 
         , ISNULL(T11.PAY_TOTAL_I_05    , 0) AS PAY_TOTAL_I_05 
         , ISNULL(T11.PAY_TOTAL_I_06    , 0) AS PAY_TOTAL_I_06 
         , ISNULL(T11.PAY_TOTAL_I_07    , 0) AS PAY_TOTAL_I_07 
         , ISNULL(T11.PAY_TOTAL_I_08    , 0) AS PAY_TOTAL_I_08 
         , ISNULL(T11.PAY_TOTAL_I_09    , 0) AS PAY_TOTAL_I_09 
         , ISNULL(T11.PAY_TOTAL_I_10    , 0) AS PAY_TOTAL_I_10 
         , ISNULL(T11.PAY_TOTAL_I_11    , 0) AS PAY_TOTAL_I_11 
         , ISNULL(T11.PAY_TOTAL_I_12    , 0) AS PAY_TOTAL_I_12 
    
         --(32)~(34)소득세
         , T2.IN_TAX_01            , T2.IN_TAX_02          , T2.IN_TAX_03 
         , T2.IN_TAX_04            , T2.IN_TAX_05          , T2.IN_TAX_06 
         , T2.IN_TAX_07            , T2.IN_TAX_08          , T2.IN_TAX_09 
         , T2.IN_TAX_10            , T2.IN_TAX_11          , T2.IN_TAX_12 
    
         --(35)지방소득세
         , T2.LOCAL_TAX_01         , T2.LOCAL_TAX_02       , T2.LOCAL_TAX_03 
         , T2.LOCAL_TAX_04         , T2.LOCAL_TAX_05       , T2.LOCAL_TAX_06 
         , T2.LOCAL_TAX_07         , T2.LOCAL_TAX_08       , T2.LOCAL_TAX_09 
         , T2.LOCAL_TAX_10         , T2.LOCAL_TAX_11       , T2.LOCAL_TAX_12 
    
         /*비과세소득*/
         --(38)원화
         , T2.NON_TAX3_01          , T2.NON_TAX3_02        , T2.NON_TAX3_03  
         , T2.NON_TAX3_04          , T2.NON_TAX3_05        , T2.NON_TAX3_06  
         , T2.NON_TAX3_07          , T2.NON_TAX3_08        , T2.NON_TAX3_09  
         , T2.NON_TAX3_10          , T2.NON_TAX3_11        , T2.NON_TAX3_12  
    
         --(39)야간근로수당등
         , T2.NON_TAX1_01          , T2.NON_TAX1_02        , T2.NON_TAX1_03  
         , T2.NON_TAX1_04          , T2.NON_TAX1_05        , T2.NON_TAX1_06  
         , T2.NON_TAX1_07          , T2.NON_TAX1_08        , T2.NON_TAX1_09  
         , T2.NON_TAX1_10          , T2.NON_TAX1_11        , T2.NON_TAX1_12 
    
         --(40)출산보육수당
         , T2.NON_TAX4_01          , T2.NON_TAX4_02        , T2.NON_TAX4_03  
         , T2.NON_TAX4_04          , T2.NON_TAX4_05        , T2.NON_TAX4_06  
         , T2.NON_TAX4_07          , T2.NON_TAX4_08        , T2.NON_TAX4_09  
         , T2.NON_TAX4_10          , T2.NON_TAX4_11        , T2.NON_TAX4_12  
    
         --(41)~(49)
         , T2.NON_TAX10_01         , T2.NON_TAX10_02       , T2.NON_TAX10_03 
         , T2.NON_TAX10_04         , T2.NON_TAX10_05       , T2.NON_TAX10_06 
         , T2.NON_TAX10_07         , T2.NON_TAX10_08       , T2.NON_TAX10_09 
         , T2.NON_TAX10_10         , T2.NON_TAX10_11       , T2.NON_TAX10_12 
     
         --(50)합계
         , (ISNULL(T2.NON_TAX1_01,0) + ISNULL(T2.NON_TAX3_01,0) + ISNULL(T2.NON_TAX4_01,0) + ISNULL(T2.NON_TAX10_01,0)) AS NON_TAX_TOT1_01
         , (ISNULL(T2.NON_TAX1_02,0) + ISNULL(T2.NON_TAX3_02,0) + ISNULL(T2.NON_TAX4_02,0) + ISNULL(T2.NON_TAX10_02,0)) AS NON_TAX_TOT1_02
         , (ISNULL(T2.NON_TAX1_03,0) + ISNULL(T2.NON_TAX3_03,0) + ISNULL(T2.NON_TAX4_03,0) + ISNULL(T2.NON_TAX10_03,0)) AS NON_TAX_TOT1_03
         , (ISNULL(T2.NON_TAX1_04,0) + ISNULL(T2.NON_TAX3_04,0) + ISNULL(T2.NON_TAX4_04,0) + ISNULL(T2.NON_TAX10_04,0)) AS NON_TAX_TOT1_04
         , (ISNULL(T2.NON_TAX1_05,0) + ISNULL(T2.NON_TAX3_05,0) + ISNULL(T2.NON_TAX4_05,0) + ISNULL(T2.NON_TAX10_05,0)) AS NON_TAX_TOT1_05
         , (ISNULL(T2.NON_TAX1_06,0) + ISNULL(T2.NON_TAX3_06,0) + ISNULL(T2.NON_TAX4_06,0) + ISNULL(T2.NON_TAX10_06,0)) AS NON_TAX_TOT1_06
         , (ISNULL(T2.NON_TAX1_07,0) + ISNULL(T2.NON_TAX3_07,0) + ISNULL(T2.NON_TAX4_07,0) + ISNULL(T2.NON_TAX10_07,0)) AS NON_TAX_TOT1_07
         , (ISNULL(T2.NON_TAX1_08,0) + ISNULL(T2.NON_TAX3_08,0) + ISNULL(T2.NON_TAX4_08,0) + ISNULL(T2.NON_TAX10_08,0)) AS NON_TAX_TOT1_08
         , (ISNULL(T2.NON_TAX1_09,0) + ISNULL(T2.NON_TAX3_09,0) + ISNULL(T2.NON_TAX4_09,0) + ISNULL(T2.NON_TAX10_09,0)) AS NON_TAX_TOT1_09
         , (ISNULL(T2.NON_TAX1_10,0) + ISNULL(T2.NON_TAX3_10,0) + ISNULL(T2.NON_TAX4_10,0) + ISNULL(T2.NON_TAX10_10,0)) AS NON_TAX_TOT1_10
         , (ISNULL(T2.NON_TAX1_11,0) + ISNULL(T2.NON_TAX3_11,0) + ISNULL(T2.NON_TAX4_11,0) + ISNULL(T2.NON_TAX10_11,0)) AS NON_TAX_TOT1_11
         , (ISNULL(T2.NON_TAX1_12,0) + ISNULL(T2.NON_TAX3_12,0) + ISNULL(T2.NON_TAX4_12,0) + ISNULL(T2.NON_TAX10_12,0)) AS NON_TAX_TOT1_12
    
         --(51)일직료 등
         , T2.NON_TAX11_01         , T2.NON_TAX11_02       , T2.NON_TAX11_03
         , T2.NON_TAX11_04         , T2.NON_TAX11_05       , T2.NON_TAX11_06
         , T2.NON_TAX11_07         , T2.NON_TAX11_08       , T2.NON_TAX11_09
         , T2.NON_TAX11_10         , T2.NON_TAX11_11       , T2.NON_TAX11_12
    
         --(52)자가운전보조금
         , T2.NON_TAX12_01         , T2.NON_TAX12_02       , T2.NON_TAX12_03
         , T2.NON_TAX12_04         , T2.NON_TAX12_05       , T2.NON_TAX12_06
         , T2.NON_TAX12_07         , T2.NON_TAX12_08       , T2.NON_TAX12_09
         , T2.NON_TAX12_10         , T2.NON_TAX12_11       , T2.NON_TAX12_12
    
         --(53)~(59)
         , T2.NON_TAX13_01         , T2.NON_TAX13_02       , T2.NON_TAX13_03
         , T2.NON_TAX13_04         , T2.NON_TAX13_05       , T2.NON_TAX13_06
         , T2.NON_TAX13_07         , T2.NON_TAX13_08       , T2.NON_TAX13_09
         , T2.NON_TAX13_10         , T2.NON_TAX13_11       , T2.NON_TAX13_12
    
         --(60)합계
         , (ISNULL(T2.NON_TAX11_01,0) + ISNULL(T2.NON_TAX12_01,0) + ISNULL(T2.NON_TAX13_01,0)) AS NON_TAX_TOT2_01
         , (ISNULL(T2.NON_TAX11_02,0) + ISNULL(T2.NON_TAX12_02,0) + ISNULL(T2.NON_TAX13_02,0)) AS NON_TAX_TOT2_02
         , (ISNULL(T2.NON_TAX11_03,0) + ISNULL(T2.NON_TAX12_03,0) + ISNULL(T2.NON_TAX13_03,0)) AS NON_TAX_TOT2_03
         , (ISNULL(T2.NON_TAX11_04,0) + ISNULL(T2.NON_TAX12_04,0) + ISNULL(T2.NON_TAX13_04,0)) AS NON_TAX_TOT2_04
         , (ISNULL(T2.NON_TAX11_05,0) + ISNULL(T2.NON_TAX12_05,0) + ISNULL(T2.NON_TAX13_05,0)) AS NON_TAX_TOT2_05
         , (ISNULL(T2.NON_TAX11_06,0) + ISNULL(T2.NON_TAX12_06,0) + ISNULL(T2.NON_TAX13_06,0)) AS NON_TAX_TOT2_06
         , (ISNULL(T2.NON_TAX11_07,0) + ISNULL(T2.NON_TAX12_07,0) + ISNULL(T2.NON_TAX13_07,0)) AS NON_TAX_TOT2_07
         , (ISNULL(T2.NON_TAX11_08,0) + ISNULL(T2.NON_TAX12_08,0) + ISNULL(T2.NON_TAX13_08,0)) AS NON_TAX_TOT2_08
         , (ISNULL(T2.NON_TAX11_09,0) + ISNULL(T2.NON_TAX12_09,0) + ISNULL(T2.NON_TAX13_09,0)) AS NON_TAX_TOT2_09
         , (ISNULL(T2.NON_TAX11_10,0) + ISNULL(T2.NON_TAX12_10,0) + ISNULL(T2.NON_TAX13_10,0)) AS NON_TAX_TOT2_10
         , (ISNULL(T2.NON_TAX11_11,0) + ISNULL(T2.NON_TAX12_11,0) + ISNULL(T2.NON_TAX13_11,0)) AS NON_TAX_TOT2_11
         , (ISNULL(T2.NON_TAX11_12,0) + ISNULL(T2.NON_TAX12_12,0) + ISNULL(T2.NON_TAX13_12,0)) AS NON_TAX_TOT2_12
    
         --(68)연금보험
         , T2.ANU_TAX_01           , T2.ANU_TAX_02         , T2.ANU_TAX_03
         , T2.ANU_TAX_04           , T2.ANU_TAX_05         , T2.ANU_TAX_06
         , T2.ANU_TAX_07           , T2.ANU_TAX_08         , T2.ANU_TAX_09
         , T2.ANU_TAX_10           , T2.ANU_TAX_11         , T2.ANU_TAX_12
    
         --(69)건강보험
         , T2.MED_TAX_01           , T2.MED_TAX_02         , T2.MED_TAX_03
         , T2.MED_TAX_04           , T2.MED_TAX_05         , T2.MED_TAX_06
         , T2.MED_TAX_07           , T2.MED_TAX_08         , T2.MED_TAX_09
         , T2.MED_TAX_10           , T2.MED_TAX_11         , T2.MED_TAX_12
    
         --(70)고용보험
         , T2.HIR_TAX_01           , T2.HIR_TAX_02         , T2.HIR_TAX_03
         , T2.HIR_TAX_04           , T2.HIR_TAX_05         , T2.HIR_TAX_06
         , T2.HIR_TAX_07           , T2.HIR_TAX_08         , T2.HIR_TAX_09
         , T2.HIR_TAX_10           , T2.HIR_TAX_11         , T2.HIR_TAX_12
    
         --(71)기부금
         , T2.GIFT_TAX_01          , T2.GIFT_TAX_02        , T2.GIFT_TAX_03
         , T2.GIFT_TAX_04          , T2.GIFT_TAX_05        , T2.GIFT_TAX_06
         , T2.GIFT_TAX_07          , T2.GIFT_TAX_08        , T2.GIFT_TAX_09
         , T2.GIFT_TAX_10          , T2.GIFT_TAX_11        , T2.GIFT_TAX_12
    
    
    
         , T2.NON_TAX2_01          , T2.NON_TAX2_02        , T2.NON_TAX2_03
         , T2.NON_TAX2_04          , T2.NON_TAX2_05        , T2.NON_TAX2_06
         , T2.NON_TAX2_07          , T2.NON_TAX2_08        , T2.NON_TAX2_09
         , T2.NON_TAX2_10          , T2.NON_TAX2_11        , T2.NON_TAX2_12
          
         , T2.NON_TAX5_01          , T2.NON_TAX5_02        , T2.NON_TAX5_03
         , T2.NON_TAX5_04          , T2.NON_TAX5_05        , T2.NON_TAX5_06
         , T2.NON_TAX5_07          , T2.NON_TAX5_08        , T2.NON_TAX5_09
         , T2.NON_TAX5_10          , T2.NON_TAX5_11        , T2.NON_TAX5_12
      
         , T2.NON_TAX6_01          , T2.NON_TAX6_02        , T2.NON_TAX6_03
         , T2.NON_TAX6_04          , T2.NON_TAX6_05        , T2.NON_TAX6_06
         , T2.NON_TAX6_07          , T2.NON_TAX6_08        , T2.NON_TAX6_09
         , T2.NON_TAX6_10          , T2.NON_TAX6_11        , T2.NON_TAX6_12
       
         , T2.NON_TAX7_01          , T2.NON_TAX7_02        , T2.NON_TAX7_03
         , T2.NON_TAX7_04          , T2.NON_TAX7_05        , T2.NON_TAX7_06
         , T2.NON_TAX7_07          , T2.NON_TAX7_08        , T2.NON_TAX7_09
         , T2.NON_TAX7_10          , T2.NON_TAX7_11        , T2.NON_TAX7_12
       
         , T2.NON_TAX8_01          , T2.NON_TAX8_02        , T2.NON_TAX8_03
         , T2.NON_TAX8_04          , T2.NON_TAX8_05        , T2.NON_TAX8_06
         , T2.NON_TAX8_07          , T2.NON_TAX8_08        , T2.NON_TAX8_09
         , T2.NON_TAX8_10          , T2.NON_TAX8_11        , T2.NON_TAX8_12
       
         , T2.NON_TAX9_01          , T2.NON_TAX9_02        , T2.NON_TAX9_03
         , T2.NON_TAX9_04          , T2.NON_TAX9_05        , T2.NON_TAX9_06
         , T2.NON_TAX9_07          , T2.NON_TAX9_08        , T2.NON_TAX9_09
         , T2.NON_TAX9_10          , T2.NON_TAX9_11        , T2.NON_TAX9_12
         
         , T2.MED_INSUR_01         , T2.MED_INSUR_02       , T2.MED_INSUR_03
         , T2.MED_INSUR_04         , T2.MED_INSUR_05       , T2.MED_INSUR_06
         , T2.MED_INSUR_07         , T2.MED_INSUR_08       , T2.MED_INSUR_09
         , T2.MED_INSUR_10         , T2.MED_INSUR_11       , T2.MED_INSUR_12
       
         , ISNULL(T5.P1_PAY_TOTAL_I     , 0) + ISNULL(T5.P2_PAY_TOTAL_I     , 0) AS PAY_TAX_13
         , ISNULL(T3.ETC_INCOME_I       , 0) + ISNULL(T3.EDUC_SUPP_I        , 0)
                                             + ISNULL(T3.MED_SUPP_I         , 0)
                                             + ISNULL(T5.P1_BONUS_I_TOTAL_I , 0)
                                             + ISNULL(T5.P2_BONUS_I_TOTAL_I , 0) AS BONUS_TAX_13
         , ISNULL(T5.P1_TAX_EXEMPTION1_I, 0) + ISNULL(T5.P2_TAX_EXEMPTION1_I, 0) AS NON_TAX1_13
         , ISNULL(T5.P1_TAX_EXEMPTION2_I, 0) + ISNULL(T5.P1_TAX_EXEMPTION3_I, 0)
                                             + ISNULL(T5.P1_TAX_EXEMPTION5_I, 0)
                                             + ISNULL(T5.P2_TAX_EXEMPTION2_I, 0)
                                             + ISNULL(T5.P2_TAX_EXEMPTION5_I, 0)
                                             + ISNULL(T5.P2_TAX_EXEMPTION3_I, 0) AS NON_TAX2_13
         , ISNULL(T5.P1_TAX_EXEMPTION4_I, 0) + ISNULL(T5.P2_TAX_EXEMPTION4_I, 0) AS NON_TAX3_13
         , ISNULL(T5.P1_MEDICAL_INSUR_I , 0) + ISNULL(T5.P2_MEDICAL_INSUR_I , 0)
                                             + ISNULL(T5.P1_HIRE_INSUR_I    , 0)
                                             + ISNULL(T5.P2_HIRE_INSUR_I    , 0) AS MED_INSUR_13
         , ISNULL(T5.P1_IN_TAX_I        , 0) + ISNULL(T5.P2_IN_TAX_I        , 0) AS IN_TAX_13
         , ISNULL(T5.P1_LOCAL_TAX_I     , 0) + ISNULL(T5.P2_LOCAL_TAX_I     , 0) AS LOCAL_TAX_13
         , ISNULL(T1.ANU_I              , 0)                                     AS ANU_I
         , ISNULL(T3.DEFORM_INSUR_I     , 0)                                     AS DEFORM_INSUR_I
         , ISNULL(T1.ANU_DED_I          , 0)                                     AS ANU_DED_I
         , ISNULL(T5.P1_ADD_BONUS_I     , 0) + ISNULL(T5.P2_ADD_BONUS_I     , 0) AS BONUS_TAX_ADD_13
         , ISNULL(T1.NAP_PAY_TOT_I      , 0)                                     AS PAY_TAX_14
         , ISNULL(T1.NAP_BONUS_TOTAL_I  , 0)                                     AS BONUS_TAX_14
         , ISNULL(T1.NAP_IN_TAX_I       , 0)                                     AS IN_TAX_14
         , ISNULL(T1.NAP_SP_TAX_I       , 0)                                     AS SP_TAX_14
         , ISNULL(T1.NAP_LOCAL_TAX_I    , 0)                                     AS LOCAL_TAX_14
         , ISNULL(T1.LONG_STOCK_DED_I   , 0)                                     AS LONG_STOCK_DED_I
         , ISNULL(T3.HOUS_AMOUNT_INTER_I, 0)                                     AS HOUS_AMOUNT_INTER_I
         , ISNULL(T14.ETC_INCOME        , 0) AS ETC_INCOME
         , ISNULL(T14.NON_TAX2_14       , 0) AS NON_TAX2_14
         , ISNULL(T3.OUTSIDE_INCOME_I   , 0) AS NON_TAX3_14
         , T6.DIV_NAME                  , T6.COMPANY_NUM        , T6.REPRE_NAME 
         , ISNULL(T1.FORE_DED_I         , 0) AS FORE_DED_I 
         , T4.DIV_CODE                  , T4.DEPT_CODE          , T4.POST_CODE  
         , T12.TAX_CALCU_RULE
         , uniLITE.fnGetUserDateComp(T1.COMP_CODE, T4.JOIN_DATE) AS JOIN_DATE 
         , CASE WHEN ISNULL(T4.TEMPC_02,'')='N' THEN uniLITE.fnGetUserDateComp(T1.COMP_CODE, T4.TEMPC_03)
                ELSE  CASE  WHEN T4.RETR_DATE = '00000000' THEN ''
                			ELSE uniLITE.fnGetUserDateComp(T1.COMP_CODE, T4.RETR_DATE)
            		  END 
           END AS RETR_DATE 
         , T4.NATION_CODE
         , ISNULL(M2.CODE_NAME, '') AS NATION_NAME
         , T4.CHILD_20_NUM 
         , CASE WHEN (ISNULL(T3.NONTAX_FR,'') = '' AND ISNULL(T3.NONTAX_TO,'') = '') THEN 'N'
                ELSE 'Y'
            END AS NONTAX_YN
         , ISNULL(uniLITE.fnGetUserDateComp(T1.COMP_CODE, T3.NONTAX_FR),'') AS NONTAX_FR
         , ISNULL(uniLITE.fnGetUserDateComp(T1.COMP_CODE, T3.NONTAX_TO),'') AS NONTAX_TO
         , T6.ADDR
      FROM            HAD600T  T1  WITH (NOLOCK)
           INNER JOIN HAD800TV T2  WITH (NOLOCK) ON T2.COMP_CODE     = T1.COMP_CODE
                                                AND T2.PERSON_NUMB   = T1.PERSON_NUMB
                                                AND T2.YEAR_YYYY     = T1.YEAR_YYYY
           INNER JOIN HUM100T  T4  WITH (NOLOCK) ON T4.COMP_CODE     = T1.COMP_CODE
                                                AND T4.PERSON_NUMB   = T1.PERSON_NUMB
           LEFT  JOIN HAD400T  T3  WITH (NOLOCK) ON T3.COMP_CODE     = T1.COMP_CODE
                                                AND T3.YEAR_YYYY     = T1.YEAR_YYYY
                                                AND T3.PERSON_NUMB   = T1.PERSON_NUMB
           LEFT  JOIN HAD500T  T5  WITH (NOLOCK) ON T5.COMP_CODE     = T1.COMP_CODE
                                                AND T5.YEAR_YYYY     = T1.YEAR_YYYY
                                                AND T5.PERSON_NUMB   = T1.PERSON_NUMB
           INNER JOIN BOR120T  T6  WITH (NOLOCK) ON T6.COMP_CODE     = T4.COMP_CODE
                                                AND T6.DIV_CODE      = T4.SECT_CODE
           LEFT  JOIN HPA600T  T8  WITH (NOLOCK) ON T8.COMP_CODE     = T1.COMP_CODE
                                                AND T8.PAY_YYYYMM LIKE T1.YEAR_YYYY + '%'
                                                AND T8.PERSON_NUMB   = T1.PERSON_NUMB
           LEFT  JOIN HAD700T  T9  WITH (NOLOCK) ON T9.COMP_CODE     = T1.COMP_CODE
                                                AND T9.SUPP_DATE  LIKE T1.YEAR_YYYY + '%'
                                                AND T9.PERSON_NUMB   = T1.PERSON_NUMB
           INNER JOIN BOR100T  T7  WITH (NOLOCK) ON T7.COMP_CODE     = T1.COMP_CODE
           LEFT  JOIN (SELECT X.COMP_CODE
                            , X.PERSON_NUMB
                            , LEFT(X.PAY_YYYYMM, 4) AS PAY_YYYY
                            , SUM(X.PROFIT_I_01)    AS PROFIT_I_01
                            , SUM(X.PROFIT_I_02)    AS PROFIT_I_02
                            , SUM(X.PROFIT_I_03)    AS PROFIT_I_03
                            , SUM(X.PROFIT_I_04)    AS PROFIT_I_04
                            , SUM(X.PROFIT_I_05)    AS PROFIT_I_05
                            , SUM(X.PROFIT_I_06)    AS PROFIT_I_06
                            , SUM(X.PROFIT_I_07)    AS PROFIT_I_07
                            , SUM(X.PROFIT_I_08)    AS PROFIT_I_08
                            , SUM(X.PROFIT_I_09)    AS PROFIT_I_09
                            , SUM(X.PROFIT_I_10)    AS PROFIT_I_10
                            , SUM(X.PROFIT_I_11)    AS PROFIT_I_11
                            , SUM(X.PROFIT_I_12)    AS PROFIT_I_12
                         FROM (SELECT COMP_CODE
                                    , PERSON_NUMB
                                    , PAY_YYYYMM
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '01' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_01
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '02' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_02
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '03' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_03
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '04' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_04
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '05' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_05
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '06' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_06
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '07' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_07
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '08' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_08
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '09' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_09
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '10' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_10
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '11' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_11
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '12' THEN ISNULL(TAX_AMOUNT_I,0) ELSE 0 END AS PROFIT_I_12
                                 FROM HPA810T WITH (NOLOCK)
                              ) AS X
                        GROUP BY X.COMP_CODE, X.PERSON_NUMB, LEFT(X.PAY_YYYYMM,4)
                      )        T10               ON T10.COMP_CODE    = T1.COMP_CODE
                                                AND T10.PAY_YYYY     = T1.YEAR_YYYY
                                                AND T10.PERSON_NUMB  = T1.PERSON_NUMB
           LEFT  JOIN (SELECT X.COMP_CODE
                            , X.PERSON_NUMB
                            , LEFT(X.PAY_YYYYMM, 4) AS PAY_YYYY
                            , SUM(X.PAY_TOTAL_I_01) AS PAY_TOTAL_I_01
                            , SUM(X.PAY_TOTAL_I_02) AS PAY_TOTAL_I_02
                            , SUM(X.PAY_TOTAL_I_03) AS PAY_TOTAL_I_03
                            , SUM(X.PAY_TOTAL_I_04) AS PAY_TOTAL_I_04
                            , SUM(X.PAY_TOTAL_I_05) AS PAY_TOTAL_I_05
                            , SUM(X.PAY_TOTAL_I_06) AS PAY_TOTAL_I_06
                            , SUM(X.PAY_TOTAL_I_07) AS PAY_TOTAL_I_07
                            , SUM(X.PAY_TOTAL_I_08) AS PAY_TOTAL_I_08
                            , SUM(X.PAY_TOTAL_I_09) AS PAY_TOTAL_I_09
                            , SUM(X.PAY_TOTAL_I_10) AS PAY_TOTAL_I_10
                            , SUM(X.PAY_TOTAL_I_11) AS PAY_TOTAL_I_11
                            , SUM(X.PAY_TOTAL_I_12) AS PAY_TOTAL_I_12
                         FROM (SELECT COMP_CODE
                                    , PERSON_NUMB
                                    , PAY_YYYYMM
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '01' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_01
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '02' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_02
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '03' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_03
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '04' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_04
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '05' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_05
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '06' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_06
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '07' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_07
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '08' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_08
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '09' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_09
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '10' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_10
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '11' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_11
                                    , CASE WHEN RIGHT(PAY_YYYYMM,2) = '12' THEN ISNULL(TAX_AMOUNT_I ,0) ELSE 0 END AS PAY_TOTAL_I_12
                                 FROM HPA820T WITH (NOLOCK)
                              ) AS X
                        GROUP BY X.COMP_CODE, X.PERSON_NUMB, LEFT(X.PAY_YYYYMM,4)
                      )        T11               ON T11.COMP_CODE    = T1.COMP_CODE
                                                AND T11.PAY_YYYY     = T1.YEAR_YYYY
                                                AND T11.PERSON_NUMB  = T1.PERSON_NUMB
           LEFT  JOIN HBS400T  T12 WITH (NOLOCK) ON T12.COMP_CODE    = T1.COMP_CODE
                                                AND T12.COMPANY_CODE = '1'
           LEFT  JOIN HAD200T  T13 WITH (NOLOCK) ON T13.COMP_CODE    = T1.COMP_CODE
                                                AND T13.TAX_YEAR     = T1.YEAR_YYYY
                                                AND T13.COMPANY_CODE = '2'
           LEFT  JOIN (SELECT COMP_CODE
                            , LEFT(SUPP_DATE, 4) AS SUPP_DATE
                            , PERSON_NUMB
                            , SUM(CASE WHEN WAGES_CODE != 'G99' THEN TAX_AMOUNT_I ELSE 0 END) AS ETC_INCOME
                            , SUM(NON_TAX_AMOUNT_I)                                           AS NON_TAX2_14
                         FROM HAD700T WITH (NOLOCK)
                        GROUP BY COMP_CODE, LEFT(SUPP_DATE, 4), PERSON_NUMB
                      )        T14               ON T14.COMP_CODE    = T1.COMP_CODE
                                                AND T14.SUPP_DATE    = T1.YEAR_YYYY
                                                AND T14.PERSON_NUMB  = T1.PERSON_NUMB
           LEFT  JOIN BSA100T  M1  WITH (NOLOCK) ON M1.COMP_CODE     = T4.COMP_CODE
                                                AND M1.MAIN_CODE     = 'H005'
                                                AND M1.SUB_CODE      = T4.POST_CODE
           LEFT  JOIN BSA100T  M2  WITH (NOLOCK) ON M2.COMP_CODE     = T4.COMP_CODE
                                                AND M2.MAIN_CODE     = 'B012'
                                                AND M2.SUB_CODE      = T4.NATION_CODE
     WHERE T1.COMP_CODE = #{S_COMP_CODE}
       AND T1.YEAR_YYYY = #{YEAR_YYYY}

    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    	AND T4.SECT_CODE = #{DIV_CODE}
    </if>
    
    
    <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
    	AND T1.HALFWAY_TYPE   =  #{RETR_TYPE}
    </if>
    
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	 AND T4.PAY_CODE  =  #{PAY_CODE}
    </if>
    
    
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
    	AND T4.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
    </if>
    
    <choose>
		<when test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			AND T1.PERSON_NUMB    = #{PERSON_NUMB}
		</when>
		<otherwise>
			<if test="@foren.Ognl@isNotEmpty(NAME)">
				AND T4.NAME   >= #{NAME}
			</if>
		</otherwise>
    </choose>
    
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
    	AND T4.DEPT_CODE     &gt;= #{FR_DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
    	AND T4.DEPT_CODE     &lt;= #{TO_DEPT_CODE}
    </if>
    
    
   
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
    	AND ((T8.PAY_YYYYMM &gt;= #{PAYFRYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
    	AND ((T8.PAY_YYYYMM &lt;= #{PAYTOYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
    
   
    <if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
    	AND T4.RETR_DATE    &gt;=  #{FRRETIREDATE}
    </if>
    
    <if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
    	AND T4.RETR_DATE     &lt;= #{TORETIREDATE}
    </if>
    ORDER BY T4.DIV_CODE, T4.DEPT_CODE, T4.POST_CODE, T4.NAME, T1.PERSON_NUMB

	</select>
	
	
	<select id="had850rkrServiceImpl.selectlist2009" parameterType="Map" resultType="rMap">
		--had850rkr.Chad850rkr[fnHad850nQ2009] selectlist2009
    SELECT DISTINCT T1.PERSON_NUMB                                                
         , T6.DIV_FULL_NAME AS COMP_NAME                                          
         , T1.YEAR_YYYY            , T4.NAME              
         , unilite.fnCipherDecrypt(T4.REPRE_NUM, 'A') AS REPRE_NUM            , T1.DEPT_CODE          , T1.DEPT_NAME         
         , (SELECT CODE_NAME                                                     
              FROM BSA100T                                                       
             WHERE COMP_CODE = #{S_COMP_CODE}                            
               AND MAIN_CODE = 'H005'                                            
               AND SUB_CODE  = T4.POST_CODE) AS PAY_GRADE                        
         , T1.SPOUSE               , T1.WOMAN              , T1.SUPP_NUM         
         , T1.DEFORM_NUM           , T1.AGED_NUM           , T1.BRING_CHILD_NUM  
         , T1.INCOME_SUPP_TOTAL_I  , T1.INCOME_DED_I       , T1.EARN_INCOME_I    
         , T1.PER_DED_I            , T1.SPOUSE_DED_I       , T1.SUPP_SUB_I       
         , T1.AGED_DED_I           , T1.DEFORM_DED_I       , T1.WOMAN_DED_I      
         , T1.BRING_CHILD_DED_I    , T1.ADD_DED_I          , T1.ETC_INSUR_I      
         , T1.MED_PREMINM_I        , T1.HIRE_INSUR_I       , T1.MED_INSUR_DED_I  
         , T1.MED_DED_I            , T1.EDUC_DED_I         , T1.HOUS_AMOUNT_I    
         , T1.GIFT_DED_I           , T1.STD_DED_I          , T1.DED_INCOME_I     
         , T1.PRIV_PENS_I          , T1.SKILL_DED_I        , T1.INVESTMENT_DED_I 
         , T1.CARD_DED_I           , T1.TAX_STD_I          , T1.COMP_TAX_I       
         , T1.IN_TAX_DED_I         , T1.SAVE_TAX_I         , T1.HOUS_INTER_I     
         , T1.OUTSIDE_INCOME_I     , T1.STOCK_SAVE_I       , T1.TAX_DED_SUM_I    
         , T1.INCOME_REDU_I        , T1.TAXES_REDU_I       , T1.REDU_TAX_SUM_I   
         , T1.DEF_IN_TAX_I         , T1.DEF_SP_TAX_I       , T1.DEF_LOCAL_TAX_I  
         , T1.PRE_IN_TAX_I         , T1.PRE_SP_TAX_I       , T1.PRE_LOCAL_TAX_I  
         , T1.NOW_IN_TAX_I         , T1.NOW_SP_TAX_I       , T1.NOW_LOCAL_TAX_I  
         , T1.IN_TAX_I             , T1.SP_TAX_I           , T1.LOCAL_TAX_I      
         , T3.ETC_INSUR_I AS ETC_INSUR_S       
         , T3.MED_TOTAL_I AS MED_TOTAL_S       
         , T3.DEFORM_MED_I AS DEFORM_MED_S     
         , T3.PER_EDUC_I AS PER_EDUC_S         
         , T3.STUD_EDUC_I AS STUD_EDUC_S       
         , T3.UNIV_EDUC_I AS UNIV_EDUC_S       
         , T3.KIND_EDUC_I AS KIND_EDUC_S       
         , T3.LEGAL_GIFT_I AS LEGAL_GIFT_S     
         , T3.ASS_GIFT_I AS ASS_GIFT_S         
         , T3.PRIV_GIFT_I AS PRIV_GIFT_S       
         , (T3.HOUS_AMOUNT_I + T3.HOUS_BU_AMT + T3.HOUS_WORK_AMT + T3.HOUS_LONG_AMT) AS HOUS_AMOUNT_S
         , T3.PRIV_PENS_I AS PRIV_PENS_S       
         , T3.HOUS_INTER_I AS HOUS_INTER_S     
         , T3.FORE_TAX_I AS FORE_TAX_S         
         , T3.INVESTMENT_I AS INVESTMENT_S     
         , T3.CARD_USE_I AS CARD_USE_S         
         , T4.KOR_ADDR             , T3.DEFORM_EDUC_I      , T3.HOUS_AMOUNT_TOT_I     
         , T1.STAFF_STOCK_DED_I    , T3.PENS_I AS PENS_I_01, T1.PENS_I AS PENS_I_02   
         , FLOOR(T1.INCOME_SUPP_TOTAL_I * (SELECT MED_DED_STD                         
                                             FROM HAD200T                             
                                            WHERE COMP_CODE = #{S_COMP_CODE}   
                                              AND TAX_YEAR  = #{YEAR_YYYY}   
                                              AND COMPANY_CODE = '2' )) AS MED_DED_STD
         , (SELECT HOUS_AMOUNT_LMT                                        
              FROM HAD200T                                                
             WHERE COMP_CODE = #{S_COMP_CODE}                       
               AND TAX_YEAR  = #{YEAR_YYYY}                        
               AND COMPANY_CODE = '2' ) AS HOUS_AMOUNT_LMT                
         , PAY_TAX_01              , PAY_TAX_02            , PAY_TAX_03   
         , PAY_TAX_04              , PAY_TAX_05            , PAY_TAX_06   
         , PAY_TAX_07              , PAY_TAX_08            , PAY_TAX_09   
         , PAY_TAX_10              , PAY_TAX_11            , PAY_TAX_12   
         , BONUS_TAX_01            , BONUS_TAX_02          , BONUS_TAX_03 
         , BONUS_TAX_04            , BONUS_TAX_05          , BONUS_TAX_06 
         , BONUS_TAX_07            , BONUS_TAX_08          , BONUS_TAX_09 
         , BONUS_TAX_10            , BONUS_TAX_11          , BONUS_TAX_12 
         , NON_TAX1_01             , NON_TAX1_02           , NON_TAX1_03  
         , NON_TAX1_04             , NON_TAX1_05           , NON_TAX1_06  
         , NON_TAX1_07             , NON_TAX1_08           , NON_TAX1_09  
         , NON_TAX1_10             , NON_TAX1_11           , NON_TAX1_12  
         , NON_TAX2_01             , NON_TAX2_02           , NON_TAX2_03  
         , NON_TAX2_04             , NON_TAX2_05           , NON_TAX2_06  
         , NON_TAX2_07             , NON_TAX2_08           , NON_TAX2_09  
         , NON_TAX2_10             , NON_TAX2_11           , NON_TAX2_12  
         , NON_TAX3_01             , NON_TAX3_02           , NON_TAX3_03  
         , NON_TAX3_04             , NON_TAX3_05           , NON_TAX3_06  
         , NON_TAX3_07             , NON_TAX3_08           , NON_TAX3_09  
         , NON_TAX3_10             , NON_TAX3_11           , NON_TAX3_12  
         , NON_TAX4_01             , NON_TAX4_02           , NON_TAX4_03  
         , NON_TAX4_04             , NON_TAX4_05           , NON_TAX4_06  
         , NON_TAX4_07             , NON_TAX4_08           , NON_TAX4_09  
         , NON_TAX4_10             , NON_TAX4_11           , NON_TAX4_12  
         , NON_TAX5_01             , NON_TAX5_02           , NON_TAX5_03  
         , NON_TAX5_04             , NON_TAX5_05           , NON_TAX5_06  
         , NON_TAX5_07             , NON_TAX5_08           , NON_TAX5_09  
         , NON_TAX5_10             , NON_TAX5_11           , NON_TAX5_12  
         , NON_TAX6_01             , NON_TAX6_02           , NON_TAX6_03  
         , NON_TAX6_04             , NON_TAX6_05           , NON_TAX6_06  
         , NON_TAX6_07             , NON_TAX6_08           , NON_TAX6_09  
         , NON_TAX6_10             , NON_TAX6_11           , NON_TAX6_12  
         , NON_TAX7_01             , NON_TAX7_02           , NON_TAX7_03  
         , NON_TAX7_04             , NON_TAX7_05           , NON_TAX7_06  
         , NON_TAX7_07             , NON_TAX7_08           , NON_TAX7_09  
         , NON_TAX7_10             , NON_TAX7_11           , NON_TAX7_12  
         , NON_TAX8_01             , NON_TAX8_02           , NON_TAX8_03  
         , NON_TAX8_04             , NON_TAX8_05           , NON_TAX8_06  
         , NON_TAX8_07             , NON_TAX8_08           , NON_TAX8_09  
         , NON_TAX8_10             , NON_TAX8_11           , NON_TAX8_12  
         , NON_TAX9_01             , NON_TAX9_02           , NON_TAX9_03  
         , NON_TAX9_04             , NON_TAX9_05           , NON_TAX9_06  
         , NON_TAX9_07             , NON_TAX9_08           , NON_TAX9_09  
         , NON_TAX9_10             , NON_TAX9_11           , NON_TAX9_12  
         , MED_INSUR_01            , MED_INSUR_02          , MED_INSUR_03 
         , MED_INSUR_04            , MED_INSUR_05          , MED_INSUR_06 
         , MED_INSUR_07            , MED_INSUR_08          , MED_INSUR_09 
         , MED_INSUR_10            , MED_INSUR_11          , MED_INSUR_12 
         , IN_TAX_01               , IN_TAX_02             , IN_TAX_03    
         , IN_TAX_04               , IN_TAX_05             , IN_TAX_06    
         , IN_TAX_07               , IN_TAX_08             , IN_TAX_09    
         , IN_TAX_10               , IN_TAX_11             , IN_TAX_12    
         , LOCAL_TAX_01            , LOCAL_TAX_02          , LOCAL_TAX_03 
         , LOCAL_TAX_04            , LOCAL_TAX_05          , LOCAL_TAX_06 
         , LOCAL_TAX_07            , LOCAL_TAX_08          , LOCAL_TAX_09 
         , LOCAL_TAX_10            , LOCAL_TAX_11          , LOCAL_TAX_12 
         , ANU_TAX_01              , ANU_TAX_02            , ANU_TAX_03   
         , ANU_TAX_04              , ANU_TAX_05            , ANU_TAX_06   
         , ANU_TAX_07              , ANU_TAX_08            , ANU_TAX_09   
         , ANU_TAX_10              , ANU_TAX_11            , ANU_TAX_12   
         , MED_TAX_01              , MED_TAX_02            , MED_TAX_03   
         , MED_TAX_04              , MED_TAX_05            , MED_TAX_06   
         , MED_TAX_07              , MED_TAX_08            , MED_TAX_09   
         , MED_TAX_10              , MED_TAX_11            , MED_TAX_12   
         , HIR_TAX_01              , HIR_TAX_02            , HIR_TAX_03   
         , HIR_TAX_04              , HIR_TAX_05            , HIR_TAX_06   
         , HIR_TAX_07              , HIR_TAX_08            , HIR_TAX_09   
         , HIR_TAX_10              , HIR_TAX_11            , HIR_TAX_12   
         , GIFT_TAX_01             , GIFT_TAX_02           , GIFT_TAX_03  
         , GIFT_TAX_04             , GIFT_TAX_05           , GIFT_TAX_06  
         , GIFT_TAX_07             , GIFT_TAX_08           , GIFT_TAX_09  
         , GIFT_TAX_10             , GIFT_TAX_11           , GIFT_TAX_12  
         , ISNULL(T5.P1_PAY_TOTAL_I,0) + ISNULL(T5.P2_PAY_TOTAL_I,0) AS PAY_TAX_13
         , ISNULL(T3.ETC_INCOME_I,0) + ISNULL(T3.EDUC_SUPP_I,0) + ISNULL(T3.MED_SUPP_I,0) 
           + ISNULL(T5.P1_BONUS_I_TOTAL_I,0) + ISNULL(T5.P2_BONUS_I_TOTAL_I,0) AS BONUS_TAX_13
         , ISNULL(T5.P1_TAX_EXEMPTION1_I,0) + ISNULL(T5.P2_TAX_EXEMPTION1_I,0) AS NON_TAX1_13
         , ISNULL(T5.P1_TAX_EXEMPTION2_I,0) + ISNULL(T5.P1_TAX_EXEMPTION3_I,0) 
           + ISNULL(T5.P1_TAX_EXEMPTION5_I,0) + ISNULL(T5.P2_TAX_EXEMPTION2_I,0) 
           + ISNULL(T5.P2_TAX_EXEMPTION5_I,0) + ISNULL(T5.P2_TAX_EXEMPTION3_I,0) AS NON_TAX2_13
         , ISNULL(T5.P1_TAX_EXEMPTION4_I,0) + ISNULL(T5.P2_TAX_EXEMPTION4_I,0) AS NON_TAX3_13
         , ISNULL(T5.P1_MEDICAL_INSUR_I,0) + ISNULL(T5.P2_MEDICAL_INSUR_I,0) + ISNULL(T5.P1_HIRE_INSUR_I,0) 
           + ISNULL(T5.P2_HIRE_INSUR_I,0) AS MED_INSUR_13                     
         , ISNULL(T5.P1_IN_TAX_I,0) + ISNULL(T5.P2_IN_TAX_I,0) AS IN_TAX_13   
         , ISNULL(P1_LOCAL_TAX_I,0) + ISNULL(P2_LOCAL_TAX_I,0) AS LOCAL_TAX_13
         , ISNULL(T1.ANU_I,0) AS ANU_I                                        
         , ISNULL(T3.DEFORM_INSUR_I,0) AS DEFORM_INSUR_I                      
         , ISNULL(T1.ANU_DED_I,0) AS ANU_DED_I                                
         , ISNULL(T5.P1_ADD_BONUS_I,0) + ISNULL(T5.P2_ADD_BONUS_I,0) AS BONUS_TAX_ADD_13
         , ISNULL(T1.NAP_PAY_TOT_I,0) AS PAY_TAX_14                           
         , ISNULL(T1.NAP_BONUS_TOTAL_I,0) AS BONUS_TAX_14                     
         , ISNULL(T1.NAP_IN_TAX_I,0) AS IN_TAX_14                             
         , ISNULL(T1.NAP_SP_TAX_I,0) AS SP_TAX_14                             
         , ISNULL(T1.NAP_LOCAL_TAX_I,0) AS LOCAL_TAX_14                       
         , ISNULL(T1.LONG_STOCK_DED_I,0) AS LONG_STOCK_DED_I                  
         , ISNULL(T3.HOUS_AMOUNT_INTER_I,0) AS HOUS_AMOUNT_INTER_I            
         , T2.ADD_BONUS_01         , T2.ADD_BONUS_02       , T2.ADD_BONUS_03  
         , T2.ADD_BONUS_04         , T2.ADD_BONUS_05       , T2.ADD_BONUS_06  
         , T2.ADD_BONUS_07         , T2.ADD_BONUS_08       , T2.ADD_BONUS_09  
         , T2.ADD_BONUS_10         , T2.ADD_BONUS_11       , T2.ADD_BONUS_12  
         , ISNULL((SELECT SUM(TAX_AMOUNT_I)                                   
                     FROM HAD700T                                             
                    WHERE COMP_CODE   = #{S_COMP_CODE}                  
                      AND SUBSTRING(SUPP_DATE,1,4) = T1.YEAR_YYYY             
                      AND PERSON_NUMB = T1.PERSON_NUMB                        
                      AND WAGES_CODE != 'G99'),0) AS ETC_INCOME               
         , ISNULL((SELECT SUM(NON_TAX_AMOUNT_I)                               
                     FROM HAD700T                                             
                    WHERE COMP_CODE   = #{S_COMP_CODE}                   
                      AND SUBSTRING(SUPP_DATE,1,4) = T1.YEAR_YYYY             
                      AND PERSON_NUMB = T1.PERSON_NUMB ),0) AS NON_TAX2_14    
         , ISNULL(T3.OUTSIDE_INCOME_I, 0) AS NON_TAX3_14                      
         , T6.DIV_NAME             , T6.COMPANY_NUM        , T6.REPRE_NAME    
         , ISNULL(T1.FORE_DED_I,0) FORE_DED_I                                 
         , T4.DIV_CODE             , T4.DEPT_CODE          , T4.POST_CODE     
         , ISNULL(T10.PROFIT_I_01,0) AS PROFIT_I_01
         , ISNULL(T10.PROFIT_I_02,0) AS PROFIT_I_02
         , ISNULL(T10.PROFIT_I_03,0) AS PROFIT_I_03
         , ISNULL(T10.PROFIT_I_04,0) AS PROFIT_I_04
         , ISNULL(T10.PROFIT_I_05,0) AS PROFIT_I_05
         , ISNULL(T10.PROFIT_I_06,0) AS PROFIT_I_06
         , ISNULL(T10.PROFIT_I_07,0) AS PROFIT_I_07
         , ISNULL(T10.PROFIT_I_08,0) AS PROFIT_I_08
         , ISNULL(T10.PROFIT_I_09,0) AS PROFIT_I_09
         , ISNULL(T10.PROFIT_I_10,0) AS PROFIT_I_10
         , ISNULL(T10.PROFIT_I_11,0) AS PROFIT_I_11
         , ISNULL(T10.PROFIT_I_12,0) AS PROFIT_I_12
         , ISNULL(T11.PAY_TOTAL_I_01,0) AS PAY_TOTAL_I_01
         , ISNULL(T11.PAY_TOTAL_I_02,0) AS PAY_TOTAL_I_02
         , ISNULL(T11.PAY_TOTAL_I_03,0) AS PAY_TOTAL_I_03
         , ISNULL(T11.PAY_TOTAL_I_04,0) AS PAY_TOTAL_I_04
         , ISNULL(T11.PAY_TOTAL_I_05,0) AS PAY_TOTAL_I_05
         , ISNULL(T11.PAY_TOTAL_I_06,0) AS PAY_TOTAL_I_06
         , ISNULL(T11.PAY_TOTAL_I_07,0) AS PAY_TOTAL_I_07
         , ISNULL(T11.PAY_TOTAL_I_08,0) AS PAY_TOTAL_I_08
         , ISNULL(T11.PAY_TOTAL_I_09,0) AS PAY_TOTAL_I_09
         , ISNULL(T11.PAY_TOTAL_I_10,0) AS PAY_TOTAL_I_10
         , ISNULL(T11.PAY_TOTAL_I_11,0) AS PAY_TOTAL_I_11
         , ISNULL(T11.PAY_TOTAL_I_12,0) AS PAY_TOTAL_I_12
         , (ISNULL(NON_TAX1_01,0) + ISNULL(NON_TAX2_01,0) + ISNULL(NON_TAX3_01,0) + ISNULL(NON_TAX4_01,0) + ISNULL(NON_TAX5_01,0) + 
            ISNULL(NON_TAX6_01,0) + ISNULL(NON_TAX7_01,0) + ISNULL(NON_TAX8_01,0) + ISNULL(NON_TAX9_01,0)) AS NON_TAX_TOT_01"
         , (ISNULL(NON_TAX1_02,0) + ISNULL(NON_TAX2_02,0) + ISNULL(NON_TAX3_02,0) + ISNULL(NON_TAX4_02,0) + ISNULL(NON_TAX5_02,0) + 
            ISNULL(NON_TAX6_02,0) + ISNULL(NON_TAX7_02,0) + ISNULL(NON_TAX8_02,0) + ISNULL(NON_TAX9_02,0)) AS NON_TAX_TOT_02"
         , (ISNULL(NON_TAX1_03,0) + ISNULL(NON_TAX2_03,0) + ISNULL(NON_TAX3_03,0) + ISNULL(NON_TAX4_03,0) + ISNULL(NON_TAX5_03,0) + 
            ISNULL(NON_TAX6_03,0) + ISNULL(NON_TAX7_03,0) + ISNULL(NON_TAX8_03,0) + ISNULL(NON_TAX9_03,0)) AS NON_TAX_TOT_03"
         , (ISNULL(NON_TAX1_04,0) + ISNULL(NON_TAX2_04,0) + ISNULL(NON_TAX3_04,0) + ISNULL(NON_TAX4_04,0) + ISNULL(NON_TAX5_04,0) + 
            ISNULL(NON_TAX6_04,0) + ISNULL(NON_TAX7_04,0) + ISNULL(NON_TAX8_04,0) + ISNULL(NON_TAX9_04,0)) AS NON_TAX_TOT_04"
         , (ISNULL(NON_TAX1_05,0) + ISNULL(NON_TAX2_05,0) + ISNULL(NON_TAX3_05,0) + ISNULL(NON_TAX4_05,0) + ISNULL(NON_TAX5_05,0) + 
            ISNULL(NON_TAX6_05,0) + ISNULL(NON_TAX7_05,0) + ISNULL(NON_TAX8_05,0) + ISNULL(NON_TAX9_05,0)) AS NON_TAX_TOT_05"
         , (ISNULL(NON_TAX1_06,0) + ISNULL(NON_TAX2_06,0) + ISNULL(NON_TAX3_06,0) + ISNULL(NON_TAX4_06,0) + ISNULL(NON_TAX5_06,0) + 
            ISNULL(NON_TAX6_06,0) + ISNULL(NON_TAX7_06,0) + ISNULL(NON_TAX8_06,0) + ISNULL(NON_TAX9_06,0)) AS NON_TAX_TOT_06"
         , (ISNULL(NON_TAX1_07,0) + ISNULL(NON_TAX2_07,0) + ISNULL(NON_TAX3_07,0) + ISNULL(NON_TAX4_07,0) + ISNULL(NON_TAX5_07,0) + 
            ISNULL(NON_TAX6_07,0) + ISNULL(NON_TAX7_07,0) + ISNULL(NON_TAX8_07,0) + ISNULL(NON_TAX9_07,0)) AS NON_TAX_TOT_07"
         , (ISNULL(NON_TAX1_08,0) + ISNULL(NON_TAX2_08,0) + ISNULL(NON_TAX3_08,0) + ISNULL(NON_TAX4_08,0) + ISNULL(NON_TAX5_08,0) + 
            ISNULL(NON_TAX6_08,0) + ISNULL(NON_TAX7_08,0) + ISNULL(NON_TAX8_08,0) + ISNULL(NON_TAX9_08,0)) AS NON_TAX_TOT_08"
         , (ISNULL(NON_TAX1_09,0) + ISNULL(NON_TAX2_09,0) + ISNULL(NON_TAX3_09,0) + ISNULL(NON_TAX4_09,0) + ISNULL(NON_TAX5_09,0) + 
            ISNULL(NON_TAX6_09,0) + ISNULL(NON_TAX7_09,0) + ISNULL(NON_TAX8_09,0) + ISNULL(NON_TAX9_09,0)) AS NON_TAX_TOT_09"
         , (ISNULL(NON_TAX1_10,0) + ISNULL(NON_TAX2_10,0) + ISNULL(NON_TAX3_10,0) + ISNULL(NON_TAX4_10,0) + ISNULL(NON_TAX5_10,0) + 
            ISNULL(NON_TAX6_10,0) + ISNULL(NON_TAX7_10,0) + ISNULL(NON_TAX8_10,0) + ISNULL(NON_TAX9_10,0)) AS NON_TAX_TOT_10"
         , (ISNULL(NON_TAX1_11,0) + ISNULL(NON_TAX2_11,0) + ISNULL(NON_TAX3_11,0) + ISNULL(NON_TAX4_11,0) + ISNULL(NON_TAX5_11,0) + 
            ISNULL(NON_TAX6_11,0) + ISNULL(NON_TAX7_11,0) + ISNULL(NON_TAX8_11,0) + ISNULL(NON_TAX9_11,0)) AS NON_TAX_TOT_11"
         , (ISNULL(NON_TAX1_12,0) + ISNULL(NON_TAX2_12,0) + ISNULL(NON_TAX3_12,0) + ISNULL(NON_TAX4_12,0) + ISNULL(NON_TAX5_12,0) + 
            ISNULL(NON_TAX6_12,0) + ISNULL(NON_TAX7_12,0) + ISNULL(NON_TAX8_12,0) + ISNULL(NON_TAX9_12,0)) AS NON_TAX_TOT_12
      FROM HAD600T T1                                                        
                    INNER JOIN HAD800TV T2                                   
                            ON T1.COMP_CODE   = T2.COMP_CODE                 
                           AND T1.PERSON_NUMB = T2.PERSON_NUMB               
                           AND T1.YEAR_YYYY   = T2.YEAR_YYYY                 
                    INNER JOIN HUM100T T4                                    
                            ON T1.COMP_CODE   = T4.COMP_CODE                 
                           AND T1.PERSON_NUMB = T4.PERSON_NUMB               
               LEFT OUTER JOIN HAD400T T3                                    
                            ON T1.COMP_CODE   = T3.COMP_CODE                 
                           AND T1.YEAR_YYYY   = T3.YEAR_YYYY                 
                           AND T1.PERSON_NUMB = T3.PERSON_NUMB               
               LEFT OUTER JOIN HAD500T T5                                    
                            ON T1.COMP_CODE   = T5.COMP_CODE                 
                           AND T1.YEAR_YYYY   = T5.YEAR_YYYY                 
                           AND T1.PERSON_NUMB = T5.PERSON_NUMB               
                    INNER JOIN BOR120T T6                                    
                            ON T4.COMP_CODE   = T6.COMP_CODE                 
                           AND T4.SECT_CODE   = T6.DIV_CODE                  
               LEFT OUTER JOIN HPA600T T8                                    
                            ON T1.COMP_CODE   = T8.COMP_CODE                 
                           AND T1.YEAR_YYYY   = LEFT(T8.PAY_YYYYMM, 4)       
                           AND T1.PERSON_NUMB = T8.PERSON_NUMB               
               LEFT OUTER JOIN HAD700T T9                                    
                            ON T1.COMP_CODE   = T9.COMP_CODE                 
                           AND T1.YEAR_YYYY   = LEFT(T9.SUPP_DATE, 4)        
                           AND T1.PERSON_NUMB = T9.PERSON_NUMB               
                    INNER JOIN BOR100T T7                                    
                            ON T1.COMP_CODE = T7.COMP_CODE                   
               LEFT OUTER JOIN (SELECT X.COMP_CODE
                                     , X.PERSON_NUMB
                                     , LEFT(X.PAY_YYYYMM,4) AS PAY_YYYY
                                     , SUM(X.PROFIT_I_01) AS PROFIT_I_01
                                     , SUM(X.PROFIT_I_02) AS PROFIT_I_02
                                     , SUM(X.PROFIT_I_03) AS PROFIT_I_03
                                     , SUM(X.PROFIT_I_04) AS PROFIT_I_04
                                     , SUM(X.PROFIT_I_05) AS PROFIT_I_05
                                     , SUM(X.PROFIT_I_06) AS PROFIT_I_06
                                     , SUM(X.PROFIT_I_07) AS PROFIT_I_07
                                     , SUM(X.PROFIT_I_08) AS PROFIT_I_08
                                     , SUM(X.PROFIT_I_09) AS PROFIT_I_09
                                     , SUM(X.PROFIT_I_10) AS PROFIT_I_10
                                     , SUM(X.PROFIT_I_11) AS PROFIT_I_11
                                     , SUM(X.PROFIT_I_12) AS PROFIT_I_12
                                  FROM (SELECT COMP_CODE
                                             , PERSON_NUMB 
                                             , PAY_YYYYMM
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '01' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_01
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '02' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_02
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '03' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_03
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '04' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_04
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '05' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_05
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '06' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_06
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '07' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_07
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '08' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_08
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '09' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_09
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '10' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_10
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '11' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_11
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '12' THEN ISNULL(TAX_AMOUNT_I,0)
                                                    ELSE 0
                                                END AS PROFIT_I_12
                                          FROM HPA810T)X
                                 GROUP BY X.COMP_CODE, X.PERSON_NUMB, LEFT(X.PAY_YYYYMM,4)) T10
                            ON T1.COMP_CODE   = T10.COMP_CODE
                           AND T1.YEAR_YYYY   = T10.PAY_YYYY       
                           AND T1.PERSON_NUMB = T10.PERSON_NUMB
               LEFT OUTER JOIN (SELECT X.COMP_CODE
                                     , X.PERSON_NUMB
                                     , LEFT(X.PAY_YYYYMM,4) AS PAY_YYYY 
                                     , SUM(X.PAY_TOTAL_I_01) AS PAY_TOTAL_I_01
                                     , SUM(X.PAY_TOTAL_I_02) AS PAY_TOTAL_I_02
                                     , SUM(X.PAY_TOTAL_I_03) AS PAY_TOTAL_I_03
                                     , SUM(X.PAY_TOTAL_I_04) AS PAY_TOTAL_I_04
                                     , SUM(X.PAY_TOTAL_I_05) AS PAY_TOTAL_I_05
                                     , SUM(X.PAY_TOTAL_I_06) AS PAY_TOTAL_I_06
                                     , SUM(X.PAY_TOTAL_I_07) AS PAY_TOTAL_I_07
                                     , SUM(X.PAY_TOTAL_I_08) AS PAY_TOTAL_I_08
                                     , SUM(X.PAY_TOTAL_I_09) AS PAY_TOTAL_I_09
                                     , SUM(X.PAY_TOTAL_I_10) AS PAY_TOTAL_I_10
                                     , SUM(X.PAY_TOTAL_I_11) AS PAY_TOTAL_I_11
                                     , SUM(X.PAY_TOTAL_I_12) AS PAY_TOTAL_I_12
                                  FROM (SELECT COMP_CODE
                                             , PERSON_NUMB
                                             , PAY_YYYYMM
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '01' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_01
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '02' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_02
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '03' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_03
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '04' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_04
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '05' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_05
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '06' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_06
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '07' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_07
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '08' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_08
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '09' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_09
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '10' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_10
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '11' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_11
                                             , CASE WHEN RIGHT(PAY_YYYYMM,2) = '12' THEN ISNULL(TAX_AMOUNT_I ,0)
                                                    ELSE 0
                                                END AS PAY_TOTAL_I_12
                                          FROM HPA820T)X
                                 GROUP BY X.COMP_CODE, X.PERSON_NUMB, LEFT(X.PAY_YYYYMM,4)) T11
                            ON T1.COMP_CODE   = T11.COMP_CODE
                           AND T1.YEAR_YYYY   = T11.PAY_YYYY       
                           AND T1.PERSON_NUMB = T11.PERSON_NUMB               
     WHERE T1.COMP_CODE = #{S_COMP_CODE}                                  
       AND T1.YEAR_YYYY = #{YEAR_YYYY}                             
   


    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    	AND T4.SECT_CODE = #{DIV_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
    	AND T1.HALFWAY_TYPE   =  #{RETR_TYPE}
    </if>
 
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	 AND T4.PAY_CODE  =  #{PAY_CODE}
    </if>
 
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
    	AND T4.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
    </if>

    <choose>
	<when test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		AND T1.PERSON_NUMB    = #{PERSON_NUMB}
	</when>
	<otherwise>
		<if test="@foren.Ognl@isNotEmpty(NAME)">
			AND T4.NAME   >= #{NAME}
		</if>
	</otherwise>
    </choose>
   
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
    	AND T4.DEPT_CODE     &gt;= #{FR_DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
    	AND T4.DEPT_CODE     &lt;= #{TO_DEPT_CODE}
    </if>
   
   <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
    	AND ((T8.PAY_YYYYMM &gt;= #{PAYFRYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
    	AND ((T8.PAY_YYYYMM &lt;= #{PAYTOYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
   
     ORDER BY T4.DIV_CODE, T4.DEPT_CODE, T4.POST_CODE, T4.NAME, T1.PERSON_NUMB
	</select>
	
	<select id="had850rkrServiceImpl.selectlist2008" parameterType="Map" resultType="rMap">
		--had850rkr.Chad850rkr[fnHad850nQ2008] selectlist2008
    SELECT DISTINCT T1.PERSON_NUMB                                                
         , T6.DIV_FULL_NAME AS COMP_NAME                                          
         , T1.YEAR_YYYY            , T4.NAME              
         , unilite.fnCipherDecrypt(T4.REPRE_NUM, 'A') AS REPRE_NUM            , T1.DEPT_CODE          , T1.DEPT_NAME         
         , (SELECT CODE_NAME                                                      
              FROM BSA100T                                                        
             WHERE COMP_CODE = #{S_COMP_CODE}                              
               AND MAIN_CODE = 'H005'                                             
               AND SUB_CODE  = T4.POST_CODE) AS PAY_GRADE                         
         , T1.SPOUSE               , T1.WOMAN              , T1.SUPP_NUM          
         , T1.DEFORM_NUM           , T1.AGED_NUM           , T1.BRING_CHILD_NUM   
         , T1.INCOME_SUPP_TOTAL_I  , T1.INCOME_DED_I       , T1.EARN_INCOME_I     
         , T1.PER_DED_I            , T1.SPOUSE_DED_I       , T1.SUPP_SUB_I        
         , T1.AGED_DED_I           , T1.DEFORM_DED_I       , T1.WOMAN_DED_I       
         , T1.BRING_CHILD_DED_I    , T1.ADD_DED_I          , T1.ETC_INSUR_I       
         , T1.MED_PREMINM_I        , T1.HIRE_INSUR_I       , T1.MED_INSUR_DED_I   
         , T1.MED_DED_I            , T1.EDUC_DED_I         , T1.HOUS_AMOUNT_I     
         , T1.GIFT_DED_I           , T1.STD_DED_I          , T1.DED_INCOME_I      
         , T1.PRIV_PENS_I          , T1.SKILL_DED_I        , T1.INVESTMENT_DED_I  
         , T1.CARD_DED_I           , T1.TAX_STD_I          , T1.COMP_TAX_I        
         , T1.IN_TAX_DED_I         , T1.SAVE_TAX_I         , T1.HOUS_INTER_I      
         , T1.OUTSIDE_INCOME_I     , T1.STOCK_SAVE_I       , T1.TAX_DED_SUM_I     
         , T1.INCOME_REDU_I        , T1.TAXES_REDU_I       , T1.REDU_TAX_SUM_I    
         , T1.DEF_IN_TAX_I         , T1.DEF_SP_TAX_I       , T1.DEF_LOCAL_TAX_I   
         , T1.PRE_IN_TAX_I         , T1.PRE_SP_TAX_I       , T1.PRE_LOCAL_TAX_I   
         , T1.NOW_IN_TAX_I         , T1.NOW_SP_TAX_I       , T1.NOW_LOCAL_TAX_I   
         , T1.IN_TAX_I             , T1.SP_TAX_I           , T1.LOCAL_TAX_I       
         , T3.ETC_INSUR_I AS ETC_INSUR_S        
         , T3.MED_TOTAL_I AS MED_TOTAL_S        
         , T3.DEFORM_MED_I AS DEFORM_MED_S      
         , T3.PER_EDUC_I AS PER_EDUC_S          
         , T3.STUD_EDUC_I AS STUD_EDUC_S        
         , T3.UNIV_EDUC_I AS UNIV_EDUC_S        
         , T3.KIND_EDUC_I AS KIND_EDUC_S        
         , T3.LEGAL_GIFT_I AS LEGAL_GIFT_S      
         , T3.ASS_GIFT_I AS ASS_GIFT_S          
         , T3.PRIV_GIFT_I AS PRIV_GIFT_S        
         , (T3.HOUS_AMOUNT_I + T3.HOUS_BU_AMT + T3.HOUS_WORK_AMT + T3.HOUS_LONG_AMT) AS HOUS_AMOUNT_S
         , T3.PRIV_PENS_I AS PRIV_PENS_S        
         , T3.HOUS_INTER_I AS HOUS_INTER_S      
         , T3.FORE_TAX_I AS FORE_TAX_S          
         , T3.INVESTMENT_I AS INVESTMENT_S      
         , T3.CARD_USE_I AS CARD_USE_S          
         , T4.KOR_ADDR             , T3.DEFORM_EDUC_I      , T3.HOUS_AMOUNT_TOT_I      
         , T1.STAFF_STOCK_DED_I    , T3.PENS_I AS PENS_I_01, T1.PENS_I AS PENS_I_02    
         , FLOOR(T1.INCOME_SUPP_TOTAL_I * (SELECT MED_DED_STD                          
                                             FROM HAD200T                              
                                            WHERE COMP_CODE = #{S_COMP_CODE}   
                                              AND TAX_YEAR  = #{YEAR_YYYY}  
                                              AND COMPANY_CODE = '2' )) AS MED_DED_STD 
         , (SELECT HOUS_AMOUNT_LMT                                       
              FROM HAD200T                                               
             WHERE COMP_CODE = #{S_COMP_CODE}                       
               AND TAX_YEAR  = #{YEAR_YYYY}                       
               AND COMPANY_CODE = '2' ) AS HOUS_AMOUNT_LMT               
         , PAY_TAX_01              , PAY_TAX_02            , PAY_TAX_03  
         , PAY_TAX_04              , PAY_TAX_05            , PAY_TAX_06  
         , PAY_TAX_07              , PAY_TAX_08            , PAY_TAX_09  
         , PAY_TAX_10              , PAY_TAX_11            , PAY_TAX_12  
         , BONUS_TAX_01            , BONUS_TAX_02          , BONUS_TAX_03
         , BONUS_TAX_04            , BONUS_TAX_05          , BONUS_TAX_06
         , BONUS_TAX_07            , BONUS_TAX_08          , BONUS_TAX_09
         , BONUS_TAX_10            , BONUS_TAX_11          , BONUS_TAX_12
         , NON_TAX1_01             , NON_TAX1_02           , NON_TAX1_03 
         , NON_TAX1_04             , NON_TAX1_05           , NON_TAX1_06 
         , NON_TAX1_07             , NON_TAX1_08           , NON_TAX1_09 
         , NON_TAX1_10             , NON_TAX1_11           , NON_TAX1_12 
         , NON_TAX2_01             , NON_TAX2_02           , NON_TAX2_03 
         , NON_TAX2_04             , NON_TAX2_05           , NON_TAX2_06 
         , NON_TAX2_07             , NON_TAX2_08           , NON_TAX2_09 
         , NON_TAX2_10             , NON_TAX2_11           , NON_TAX2_12 
         , NON_TAX3_01             , NON_TAX3_02           , NON_TAX3_03 
         , NON_TAX3_04             , NON_TAX3_05           , NON_TAX3_06 
         , NON_TAX3_07             , NON_TAX3_08           , NON_TAX3_09 
         , NON_TAX3_10             , NON_TAX3_11           , NON_TAX3_12 
         , NON_TAX4_01             , NON_TAX4_02           , NON_TAX4_03 
         , NON_TAX4_04             , NON_TAX4_05           , NON_TAX4_06 
         , NON_TAX4_07             , NON_TAX4_08           , NON_TAX4_09 
         , NON_TAX4_10             , NON_TAX4_11           , NON_TAX4_12 
         , NON_TAX5_01             , NON_TAX5_02           , NON_TAX5_03 
         , NON_TAX5_04             , NON_TAX5_05           , NON_TAX5_06 
         , NON_TAX5_07             , NON_TAX5_08           , NON_TAX5_09 
         , NON_TAX5_10             , NON_TAX5_11           , NON_TAX5_12 
         , MED_INSUR_01            , MED_INSUR_02          , MED_INSUR_03
         , MED_INSUR_04            , MED_INSUR_05          , MED_INSUR_06
         , MED_INSUR_07            , MED_INSUR_08          , MED_INSUR_09
         , MED_INSUR_10            , MED_INSUR_11          , MED_INSUR_12
         , IN_TAX_01               , IN_TAX_02             , IN_TAX_03   
         , IN_TAX_04               , IN_TAX_05             , IN_TAX_06   
         , IN_TAX_07               , IN_TAX_08             , IN_TAX_09   
         , IN_TAX_10               , IN_TAX_11             , IN_TAX_12   
         , LOCAL_TAX_01            , LOCAL_TAX_02          , LOCAL_TAX_03
         , LOCAL_TAX_04            , LOCAL_TAX_05          , LOCAL_TAX_06
         , LOCAL_TAX_07            , LOCAL_TAX_08          , LOCAL_TAX_09
         , LOCAL_TAX_10            , LOCAL_TAX_11          , LOCAL_TAX_12
         , ANU_TAX_01              , ANU_TAX_02            , ANU_TAX_03  
         , ANU_TAX_04              , ANU_TAX_05            , ANU_TAX_06  
         , ANU_TAX_07              , ANU_TAX_08            , ANU_TAX_09  
         , ANU_TAX_10              , ANU_TAX_11            , ANU_TAX_12  
         , MED_TAX_01              , MED_TAX_02            , MED_TAX_03  
         , MED_TAX_04              , MED_TAX_05            , MED_TAX_06  
         , MED_TAX_07              , MED_TAX_08            , MED_TAX_09  
         , MED_TAX_10              , MED_TAX_11            , MED_TAX_12  
         , HIR_TAX_01              , HIR_TAX_02            , HIR_TAX_03  
         , HIR_TAX_04              , HIR_TAX_05            , HIR_TAX_06  
         , HIR_TAX_07              , HIR_TAX_08            , HIR_TAX_09  
         , HIR_TAX_10              , HIR_TAX_11            , HIR_TAX_12  
         , GIFT_TAX_01             , GIFT_TAX_02           , GIFT_TAX_03 
         , GIFT_TAX_04             , GIFT_TAX_05           , GIFT_TAX_06 
         , GIFT_TAX_07             , GIFT_TAX_08           , GIFT_TAX_09 
         , GIFT_TAX_10             , GIFT_TAX_11           , GIFT_TAX_12 
         , ISNULL(T5.P1_PAY_TOTAL_I,0) + ISNULL(T5.P2_PAY_TOTAL_I,0) AS PAY_TAX_13
         , ISNULL(T3.ETC_INCOME_I,0) + ISNULL(T3.EDUC_SUPP_I,0) + ISNULL(T3.MED_SUPP_I,0) 
           + ISNULL(T5.P1_BONUS_I_TOTAL_I,0) + ISNULL(T5.P2_BONUS_I_TOTAL_I,0) AS BONUS_TAX_13
         , ISNULL(T5.P1_TAX_EXEMPTION1_I,0) + ISNULL(T5.P2_TAX_EXEMPTION1_I,0) AS NON_TAX1_13
         , ISNULL(T5.P1_TAX_EXEMPTION2_I,0) + ISNULL(T5.P1_TAX_EXEMPTION3_I,0) 
           + ISNULL(T5.P1_TAX_EXEMPTION5_I,0) + ISNULL(T5.P2_TAX_EXEMPTION2_I,0) 
           + ISNULL(T5.P2_TAX_EXEMPTION5_I,0) + ISNULL(T5.P2_TAX_EXEMPTION3_I,0) AS NON_TAX2_13
         , ISNULL(T5.P1_TAX_EXEMPTION4_I,0) + ISNULL(T5.P2_TAX_EXEMPTION4_I,0) AS NON_TAX3_13
         , ISNULL(T5.P1_MEDICAL_INSUR_I,0) + ISNULL(T5.P2_MEDICAL_INSUR_I,0) + ISNULL(T5.P1_HIRE_INSUR_I,0) 
           + ISNULL(T5.P2_HIRE_INSUR_I,0) AS MED_INSUR_13                      
         , ISNULL(T5.P1_IN_TAX_I,0) + ISNULL(T5.P2_IN_TAX_I,0) AS IN_TAX_13    
         , ISNULL(P1_LOCAL_TAX_I,0) + ISNULL(P2_LOCAL_TAX_I,0) AS LOCAL_TAX_13 
         , ISNULL(T1.ANU_I,0) AS ANU_I                                         
         , ISNULL(T3.DEFORM_INSUR_I,0) AS DEFORM_INSUR_I                       
         , ISNULL(T1.ANU_DED_I,0) AS ANU_DED_I                                 
         , ISNULL(T5.P1_ADD_BONUS_I,0) + ISNULL(T5.P2_ADD_BONUS_I,0) AS BONUS_TAX_ADD_13
         , ISNULL(T1.NAP_PAY_TOT_I,0) AS PAY_TAX_14                           
         , ISNULL(T1.NAP_BONUS_TOTAL_I,0) AS BONUS_TAX_14                     
         , ISNULL(T1.NAP_IN_TAX_I,0) AS IN_TAX_14                             
         , ISNULL(T1.NAP_SP_TAX_I,0) AS SP_TAX_14                             
         , ISNULL(T1.NAP_LOCAL_TAX_I,0) AS LOCAL_TAX_14                       
         , ISNULL(T1.LONG_STOCK_DED_I,0) AS LONG_STOCK_DED_I                  
         , ISNULL(T3.HOUS_AMOUNT_INTER_I,0) AS HOUS_AMOUNT_INTER_I            
         , T2.ADD_BONUS_01         , T2.ADD_BONUS_02       , T2.ADD_BONUS_03  
         , T2.ADD_BONUS_04         , T2.ADD_BONUS_05       , T2.ADD_BONUS_06  
         , T2.ADD_BONUS_07         , T2.ADD_BONUS_08       , T2.ADD_BONUS_09  
         , T2.ADD_BONUS_10         , T2.ADD_BONUS_11       , T2.ADD_BONUS_12  
         , ISNULL((SELECT SUM(TAX_AMOUNT_I)                                   
                     FROM HAD700T                                             
                    WHERE COMP_CODE   = #{S_COMP_CODE}                  
                      AND SUBSTRING(SUPP_DATE,1,4) = T1.YEAR_YYYY             
                      AND PERSON_NUMB = T1.PERSON_NUMB                        
                      AND WAGES_CODE != 'G99'),0) AS ETC_INCOME               
         , ISNULL((SELECT SUM(NON_TAX_AMOUNT_I)                               
                     FROM HAD700T                                             
                    WHERE COMP_CODE   = #{S_COMP_CODE}                  
                      AND SUBSTRING(SUPP_DATE,1,4) = T1.YEAR_YYYY             
                      AND PERSON_NUMB = T1.PERSON_NUMB ),0) AS NON_TAX2_14    
         , ISNULL(T3.OUTSIDE_INCOME_I, 0) AS NON_TAX3_14                      
         , T6.DIV_NAME             , T6.COMPANY_NUM        , T6.REPRE_NAME    
         , ISNULL(T1.FORE_DED_I,0) FORE_DED_I                                 
         , T4.DIV_CODE             , T4.DEPT_CODE          , T4.POST_CODE     
      FROM HAD600T T1                                                         
                    INNER JOIN HAD800OLDTV T2                                 
                            ON T1.COMP_CODE   = T2.COMP_CODE                  
                           AND T1.PERSON_NUMB = T2.PERSON_NUMB                
                           AND T1.YEAR_YYYY   = T2.YEAR_YYYY                  
                    INNER JOIN HUM100T T4                                     
                            ON T1.COMP_CODE   = T4.COMP_CODE                  
                           AND T1.PERSON_NUMB = T4.PERSON_NUMB                
               LEFT OUTER JOIN HAD400T T3                                     
                            ON T1.COMP_CODE   = T3.COMP_CODE                  
                           AND T1.YEAR_YYYY   = T3.YEAR_YYYY                  
                           AND T1.PERSON_NUMB = T3.PERSON_NUMB                
               LEFT OUTER JOIN HAD500T T5                                     
                            ON T1.COMP_CODE   = T5.COMP_CODE                  
                           AND T1.YEAR_YYYY   = T5.YEAR_YYYY                  
                           AND T1.PERSON_NUMB = T5.PERSON_NUMB                
                    INNER JOIN BOR120T T6                                     
                            ON T4.COMP_CODE   = T6.COMP_CODE                  
                           AND T4.SECT_CODE   = T6.DIV_CODE                   
               LEFT OUTER JOIN HPA600T T8                                     
                            ON T1.COMP_CODE   = T8.COMP_CODE                  
                           AND T1.YEAR_YYYY   = LEFT(T8.PAY_YYYYMM, 4)        
                           AND T1.PERSON_NUMB = T8.PERSON_NUMB                
               LEFT OUTER JOIN HAD700T T9                                     
                            ON T1.COMP_CODE   = T9.COMP_CODE                  
                           AND T1.YEAR_YYYY   = LEFT(T9.SUPP_DATE, 4)         
                           AND T1.PERSON_NUMB = T9.PERSON_NUMB                
                    INNER JOIN BOR100T T7                                     
                            ON T1.COMP_CODE = T7.COMP_CODE                    
     WHERE T1.COMP_CODE = #{S_COMP_CODE}                               
       AND T1.YEAR_YYYY = #{YEAR_YYYY}                                  

   

    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    	AND T4.SECT_CODE = #{DIV_CODE}
    </if>

    <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
    	AND T1.HALFWAY_TYPE   =  #{RETR_TYPE}
    </if>
 
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	 AND T4.PAY_CODE  =  #{PAY_CODE}
    </if>
 
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
    	AND T4.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
    </if>

    <choose>
		<when test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			AND T1.PERSON_NUMB    = #{PERSON_NUMB}
		</when>
		<otherwise>
			<if test="@foren.Ognl@isNotEmpty(NAME)">
				AND T4.NAME   >= #{NAME}
			</if>
		</otherwise>
    </choose>
   
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
    	AND T4.DEPT_CODE     &gt;= #{FR_DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
    	AND T4.DEPT_CODE     &lt;= #{TO_DEPT_CODE}
    </if>
   
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
    	AND ((T8.PAY_YYYYMM &gt;= #{PAYFRYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
    	AND ((T8.PAY_YYYYMM &lt;= #{PAYTOYYMM}) OR (LEFT(T9.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>

   
     ORDER BY T4.DIV_CODE, T4.DEPT_CODE, T4.POST_CODE, T4.NAME, T1.PERSON_NUMB

	</select>
	
</mapper>