<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had910rkrServiceImpl">
	<select id="had910rkrServiceImpl.selectToPrintR" parameterType="Map" resultType="rMap">
		--had910rkr.Chad910rkr [fnHad910nQ] R : 퇴직정산                    
	SELECT COUNT(A.PERSON_NUMB) AS TOTAL_COUNT
	     --, SUM(A.LOCAL_TAX_I)   AS LOCAL_TAX_I     
	     --, SUM(A.IN_TAX_I)      AS IN_TAX_I    
	     
	     , SUM(A.BAL_LOCAL_TAX_I)   	AS LOCAL_TAX_I     
	     , SUM(A.BAL_IN_TAX_I)   AS IN_TAX_I   
	     
	     , C.COMP_OWN_NO
	     , D.DIV_FULL_NAME AS DIV_FULL_NAME
	     , (SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' 
	       + SUBSTRING(D.COMPANY_NUM,6,5)) AS COMPANY_NUM
	     , D.REPRE_NAME 
	     , D.TELEPHON
	     , D.ADDR 
	     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I
	  FROM HRT500T A INNER JOIN HUM100T B 
	                              ON A.COMP_CODE = B.COMP_CODE
	                             AND A.PERSON_NUMB = B.PERSON_NUMB  
	                      INNER JOIN BOR120T D
	                              ON B.COMP_CODE = D.COMP_CODE
	                             AND B.SECT_CODE = D.DIV_CODE 
	                      INNER JOIN BOR100T C
	                              ON A.COMP_CODE = C.COMP_CODE
	 WHERE   A.COMP_CODE  = #{S_COMP_CODE}
	   AND ((A.RETR_DATE &gt;= #{FR_DATE} AND A.RETR_DATE &lt;= #{TO_DATE} AND A.RETR_TYPE = 'R') OR
	        (A.SUPP_DATE &gt;= #{FR_DATE} AND A.SUPP_DATE &lt;= #{TO_DATE} AND A.RETR_TYPE = 'M'))
	   AND A.RETR_TYPE != 'S' 
	   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   AND B.SECT_CODE = #{DIV_CODE}
       </if>   
       <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       		AND B.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       		AND B.DEPT_CODE &lt;=#{TO_DEPT_CODE}
       </if>  
       <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       		AND A.RETR_TYPE != 'S' 
       </if>                          
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	  		AND B.PAY_CODE    =  #{PAY_CODE}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
	  	 	AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
			AND A.PERSON_NUMB  = #{PERSON_NUMB}
		</if>

	 GROUP BY B.SECT_CODE, C.COMP_OWN_NO, D.DIV_FULL_NAME, D.COMPANY_NUM, D.REPRE_NAME
	        , D.TELEPHON , D.ADDR
	 ORDER BY B.SECT_CODE, C.COMP_OWN_NO, D.DIV_FULL_NAME, D.COMPANY_NUM, D.REPRE_NAME
	        , D.TELEPHON , D.ADDR
	</select>
	
	<select id="had910rkrServiceImpl.selectToPrintYN" parameterType="Map" resultType="rMap">
		--had910rkr.Chad910rkr [fnHad910nQ] Y/N  : 연말정산, 중도퇴사                   
		SELECT COUNT(A.PERSON_NUMB) AS TOTAL_COUNT
		     , (SUM(A.INCOME_SUPP_TOTAL_I) + SUM(ISNULL(E.NON_TAX_EMPTION_I,0))) AS TOTAL_AMOUNT
		     , SUM(CASE WHEN E.NON_TAX_EMPTION_I > 0 
		                     THEN 1                                    
		                     ELSE 0                                    
		            END) AS NON_TAX_COUNT                              
		     , SUM(E.NON_TAX_EMPTION_I) AS NON_TAX_AMOUNT
		     , SUM(CASE WHEN A.MED_DED_I > 0                           
		                     THEN 1                                    
		                     ELSE 0                                    
		            END) AS MED_COUNT                                  
		     , SUM(A.MED_DED_I) AS MED_AMOUNT                          
		     , SUM(CASE WHEN A.GIFT_DED_I > 0                          
		                     THEN 1                                    
		                     ELSE 0                                    
		            END) AS GIFT_COUNT                                 
		     , SUM(A.GIFT_DED_I) AS GIFT_AMOUNT                        
		     , SUM(A.DEF_IN_TAX_I) AS DEF_IN_TAX_I                     
		     , SUM(A.DEF_LOCAL_TAX_I) AS DEF_LOCAL_TAX_I               
		     , SUM(A.NAP_IN_TAX_I + A.PRE_IN_TAX_I) AS TOTAL_OLD       
		     , SUM(A.NOW_IN_TAX_I) AS TOTAL_NOW                        
		     , SUM(CASE WHEN IN_TAX_I &gt;= 0                             
		                     THEN IN_TAX_I                             
		                     ELSE 0                                    
		            END) AS TOTAL_1                                    
		     , SUM(CASE WHEN IN_TAX_I &lt; 0                              
		                     THEN IN_TAX_I                             
		                     ELSE 0                                    
		            END) * -1 AS TOTAL_2                               
		     , (CASE WHEN SUM(IN_TAX_I) &lt; 0                            
		                  THEN SUM(IN_TAX_I) * -1                      
		                  ELSE SUM(IN_TAX_I)                           
		         END) AS TOTAL_3                                       
		     , SUM(A.IN_TAX_I) AS IN_TAX_I                             
		     , SUM(A.LOCAL_TAX_I) AS LOCAL_IN_TAX_I                    
		     , SUM(A.SP_TAX_I) AS SP_TAX_I                             
		     , C.COMP_OWN_NO                                           
		     , SUM(A.DEF_IN_TAX_I) AS DEF_IN_TAX_I                     
		     , SUM(A.DEF_SP_TAX_I) AS DEF_SP_TAX_I                     
		     , SUM (A.DEF_LOCAL_TAX_I) AS DEF_LOCAL_TAX_I              
		     , D.DIV_FULL_NAME AS DIV_FULL_NAME                        
		     , (SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' 
		       + SUBSTRING(D.COMPANY_NUM,6,5)) AS COMPANY_NUM          
		     , D.REPRE_NAME                                            
		     , D.TELEPHON                                              
		     , D.ADDR                                                  
		     , LEFT(#{FR_DATE},4) AS YEAR_YYYY                        
		  FROM HAD600T A                                               
		               INNER JOIN HUM100T B                            
		                       ON A.COMP_CODE = B.COMP_CODE            
		                      AND A.PERSON_NUMB = B.PERSON_NUMB        
		               INNER JOIN BOR120T D                            
		                       ON B.COMP_CODE = D.COMP_CODE            
		                      AND B.SECT_CODE = D.DIV_CODE             
		               INNER JOIN BOR100T C                            
		                       ON A.COMP_CODE = C.COMP_CODE            
		               LEFT  JOIN (SELECT A.COMP_CODE
		                                , A.YEAR_YYYY
		                                , A.PERSON_NUMB
		                                , SUM(ISNULL(A.NON_TAX_EMPTION_I,0))
		                                + SUM(ISNULL(A.P1_NON_TAX_EMPTION_I,0))
		                                + SUM(ISNULL(A.P2_NON_TAX_EMPTION_I,0)) AS NON_TAX_EMPTION_I
		                             FROM HAD610T A 
		                                  LEFT JOIN HBS120T B ON B.COMP_CODE   = A.COMP_CODE
		                                                     AND B.NONTAX_CODE = A.NONTAX_CODE
		                                                     AND B.TAX_YYYY    = A.YEAR_YYYY
		                            WHERE B.SEND_YN = 'Y'
		                              AND A.NONTAX_CODE NOT IN ('T10','T11','T12','T13')
		                            GROUP BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB) E 
		                       ON E.COMP_CODE   = A.COMP_CODE
		                      AND E.YEAR_YYYY   = A.YEAR_YYYY 
		                      AND E.PERSON_NUMB = A.PERSON_NUMB 
		 WHERE A.COMP_CODE = #{S_COMP_CODE}   
		 
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   		AND B.SECT_CODE = #{DIV_CODE}
	       </if>   
	       <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
	       		AND B.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
	       		AND B.DEPT_CODE &lt;=#{TO_DEPT_CODE}
	       </if>  
	       <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
	       		 AND A.HALFWAY_TYPE = #{RETR_TYPE}
	       </if>                          
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
		  		AND B.PAY_CODE    =  #{PAY_CODE}
		  	</if>
		  	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  
		  	 	AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		  	</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>                   
		  <if test = "RETR_TYPE==&quot;N&quot;">
		  		 AND A.YEAR_YYYY  = LEFT(#{FR_DATE},4)
		  </if>
		  <if test = "RETR_TYPE != &quot;N&quot;">
		  	   AND A.RETR_DATE &gt;= #{FR_DATE}
			   AND A.RETR_DATE &lt;= #{TO_DATE}
			   AND A.YEAR_YYYY  = LEFT(#{FR_DATE},4)
		  </if>
		
		 GROUP BY B.SECT_CODE, C.COMP_OWN_NO, D.DIV_FULL_NAME, D.COMPANY_NUM, D.REPRE_NAME
		        , D.TELEPHON , D.ADDR 
		 ORDER BY B.SECT_CODE, C.COMP_OWN_NO, D.DIV_FULL_NAME, D.COMPANY_NUM, D.REPRE_NAME
		        , D.TELEPHON , D.ADDR 
	</select>
	<select id="had910rkrServiceImpl.selectToPrintOther" parameterType="Map" resultType="rMap">
		--had910rkr.Chad910rkr [fnHad910nQ] I/D/SR/OR/SU/OU : 사업소득, 기타소득, 이자소득, 배당소득                                       
		SELECT COUNT(DISTINCT B.PERSON_NUMB)  AS PERSON_COUNT
		     , COUNT(DISTINCT A.PERSON_NUMB+A.SUPP_DATE)           AS TOTAL_COUNT                                
		     , ISNULL(SUM(A.PAY_AMOUNT_I), 0) AS TOTAL_AMOUNT                     
		     , ISNULL(SUM(A.IN_TAX_I), 0)     AS IN_TAX_I                             
		     , ISNULL(SUM(A.LOCAL_TAX_I), 0)  AS LOCAL_IN_TAX_I                    
		     , ISNULL(SUM(A.SP_TAX_I), 0)     AS SP_TAX_I                             
		     , ISNULL(SUM(A.CP_TAX_I), 0)     AS CP_TAX_I                             
		     , D.DIV_FULL_NAME                AS DIV_FULL_NAME                                   
		     , C.COMP_OWN_NO                                                      
		     , (SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) 
		       + '-' + SUBSTRING(D.COMPANY_NUM,6,5)) AS COMPANY_NUM               
		     , D.REPRE_NAME                                                       
		     , D.TELEPHON                                                         
		     , D.ADDR                                                             
		     , LEFT(#{FR_DATE},4) AS YEAR_YYYY                                   
		     , #{RETR_TYPE} AS DED_TYPE                                   
		  FROM HPB200T A                                                          
		               INNER JOIN HPB100T B                                       
		                       ON A.COMP_CODE   = B.COMP_CODE                     
		                      AND A.PERSON_NUMB = B.PERSON_NUMB                   
		                      AND A.DED_TYPE    = B.DED_TYPE                      
		               INNER JOIN BOR120T D                                       
		                       ON A.COMP_CODE = D.COMP_CODE                       
		                      AND A.SECT_CODE = D.DIV_CODE                        
		               INNER JOIN BOR100T C                                       
		                       ON A.COMP_CODE = C.COMP_CODE                       
		 WHERE A.COMP_CODE = #{S_COMP_CODE}                                 
		   AND A.SUPP_DATE &gt;= #{FR_DATE}                      
		   AND A.SUPP_DATE &lt;= #{TO_DATE}    
		   <if test = "RETR_TYPE==&quot;SR&quot;">
		  		AND  A.DED_TYPE = '1' AND B.DWELLING_YN = '1'
		   </if>                  
		   <if test = "RETR_TYPE==&quot;OR&quot;">
		  		 AND  A.DED_TYPE = '2' AND B.DWELLING_YN = '1'
		   </if>
		   <if test = "RETR_TYPE==&quot;SU&quot;">
		  		 AND  A.DED_TYPE = '1' AND B.DWELLING_YN = '2'
		   </if>
		   <if test = "RETR_TYPE==&quot;OU&quot;">
		  		 AND  A.DED_TYPE = '2' AND B.DWELLING_YN = '2'
		   </if>
		   <if test = "RETR_TYPE==&quot;I&quot;">
		  		 AND  A.DED_TYPE = '10'
		   </if>
		   <if test = "RETR_TYPE==&quot;D&quot;">
		  		 AND  A.DED_TYPE = '20'
		   </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
  	 	   		AND A.SECT_CODE = #{DIV_CODE}
	       </if> 
	        <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
	       		AND A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
	       		AND A.DEPT_CODE &lt;=#{TO_DEPT_CODE}
	       </if> 
	       <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>   
		
		 GROUP BY A.SECT_CODE, C.COMP_OWN_NO, D.DIV_FULL_NAME, D.COMPANY_NUM, D.REPRE_NAME, D.TELEPHON,D.ADDR 
	</select>	
</mapper>