<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had840rkrServiceImpl">
		<select id="had840rkrServiceImpl.selectList2016_Query1" parameterType="Map" resultType="rMap">
BEGIN
    DECLARE @COMP_CODE              NVARCHAR(08)
          , @YEAR_YYYY              NVARCHAR(04)
          , @REPORT_GBN             NVARCHAR(01)

--  1. 변수 값 할당 ----------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @YEAR_YYYY          = #{YEAR_YYYY}
    SET @REPORT_GBN         = #{OUTPUT}

--  2. 조회 ------------------------------------------------------------------------------------------------------
    SELECT  DISTINCT
            CASE WHEN ISNULL(D.LIVE_GUBUN, '') = '' THEN '1'
                 ELSE D.LIVE_GUBUN
            END                                                         AS LIVE_GUBUN
         ,  ISNULL(A.FORE_SINGLE_YN        , 'N')                       AS FORE_SINGLE_YN
         ,  ISNULL(A.FOREIGN_DISPATCH_YN   , 'N')                       AS FOREIGN_DISPATCH_YN
         ,  D.NATION_CODE
         ,  ISNULL(M1.CODE_NAME            , '')                        AS NATION_NAME
         ,  A.HOUSEHOLDER_YN                                            AS HOUSEHOLDER_YN 
         ,  A.HALFWAY_TYPE                                              AS HALFWAY_TYPE  

            --징수의무자
         ,  C.DIV_FULL_NAME                                             AS DIV_FULL_NAME
         ,  C.REPRE_NAME                                                AS REPRE_NAME
         ,  SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 6, 5)                              AS COMPANY_NUM 
         ,  E.COMP_OWN_NO                                               AS COMP_REPRE_NO
         ,  C.ADDR                                                      AS COMP_KOR_ADDR

            --소득자
         ,  A.PERSON_NUMB
         ,  D.NAME
         ,  unilite.fnCipherDecrypt(D.REPRE_NUM, 'A')                   AS REPRE_NUM
         ,  D.KOR_ADDR                                                  AS KOR_ADDR
         ,  D.DIV_CODE                                                  AS DIV_CODE
         ,  D.DEPT_CODE                                                 AS DEPT_CODE
         ,  D.POST_CODE                                                 AS POST_CODE

            /*근무처별소득명세*/
            --근무처명
         ,  ISNULL(B.P1_COMPANY_NAME            , '')                   AS P1_COMPANY_NAME
         ,  ISNULL(B.P2_COMPANY_NAME            , '')                   AS P2_COMPANY_NAME
         ,  ISNULL(F.P3_COMPANY_NAME            , '')                   AS NAP_NAME
            --사업자등록번호
         ,  ISNULL(B.P1_COMPANY_NUM             , '')                   AS P1_COMPANY_NUM
         ,  ISNULL(B.P2_COMPANY_NUM             , '')                   AS P2_COMPANY_NUM
         ,  ISNULL(F.P3_COMPANY_NUM             , '')                   AS P3_COMPANY_NUM
            --근무기간
         ,  CASE WHEN LEFT(D.JOIN_DATE, 4) = @YEAR_YYYY THEN D.JOIN_DATE
                 ELSE @YEAR_YYYY + '0101'
            END                                                         AS FJOIN_DATE
         ,  ISNULL(B.P1_WORKDATE_FR             , '')                   AS P1_WORKDATE_FR
         ,  ISNULL(B.P2_WORKDATE_FR             , '')                   AS P2_WORKDATE_FR
         ,  ISNULL(F.P3_WORKDATE_FR             , '')                   AS P3_WORKDATE_FR
         ,  CASE WHEN ISNULL(D.TEMPC_02,'')='N' THEN CASE WHEN LEFT(D.TEMPC_03,4) = @YEAR_YYYY THEN D.TEMPC_03
                										  ELSE @YEAR_YYYY + '1231'
                									 END
                 ELSE CASE WHEN LEFT(A.RETR_DATE, 4) = @YEAR_YYYY THEN A.RETR_DATE
		         	        ELSE @YEAR_YYYY + '1231'
		         	  END 
		    END  														AS FRETR_DATE                          
         -- 사이트버전 추가 후 원복
         --,  CASE WHEN LEFT(A.RETR_DATE, 4) = @YEAR_YYYY THEN A.RETR_DATE
         --        ELSE @YEAR_YYYY + '1231'
         --   END                                                         AS FRETR_DATE
         ,  ISNULL(B.P1_WORKDATE_TO             , '')                   AS P1_WORKDATE_TO                                                             
         ,  ISNULL(B.P2_WORKDATE_TO             , '')                   AS P2_WORKDATE_TO
         ,  ISNULL(F.P3_WORKDATE_TO             , '')                   AS P3_WORKDATE_TO
            --감면기간
         ,  ISNULL(F.NONTAX_FR                  , '')                   AS NONTAX_FR
         ,  ISNULL(B.P1_NONTAX_FR               , '')                   AS P1_NONTAX_FR
         ,  ISNULL(B.P2_NONTAX_FR               , '')                   AS P2_NONTAX_FR
         ,  ISNULL(F.P3_NONTAX_FR               , '')                   AS P3_NONTAX_FR
         ,  ISNULL(F.NONTAX_TO                  , '')                   AS NONTAX_TO
         ,  ISNULL(B.P1_NONTAX_TO               , '')                   AS P1_NONTAX_TO
         ,  ISNULL(B.P2_NONTAX_TO               , '')                   AS P2_NONTAX_TO
         ,  ISNULL(F.P3_NONTAX_TO               , '')                   AS P3_NONTAX_TO
            --급여
         ,  ISNULL(A.NOW_PAY_TOT_I              , 0 )                   AS NOW_PAY_TOT_I
         ,  ISNULL(B.P1_PAY_TOTAL_I             , 0 )                   AS P1_PAY_TOTAL_I
         ,  ISNULL(B.P2_PAY_TOTAL_I             , 0 )                   AS P2_PAY_TOTAL_I
         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 )                   AS NAP_PAY_TOT_I
            --상여
         ,  ISNULL(A.NOW_BONUS_TOTAL_I          , 0 )                   AS NOW_BONUS_TOTAL_I
         ,  ISNULL(B.P1_BONUS_I_TOTAL_I         , 0 )                   AS P1_BONUS_I_TOTAL_I
         ,  ISNULL(B.P2_BONUS_I_TOTAL_I         , 0 )                   AS P2_BONUS_I_TOTAL_I
         ,  ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_BONUS_TOTAL_I
            --인정상여
         ,  ISNULL(A.NOW_ADD_BONUS_I            , 0 )                   AS NOW_ADD_BONUS_I
         ,  ISNULL(B.P1_ADD_BONUS_I             , 0 )                   AS P1_ADD_BONUS_I
         ,  ISNULL(B.P2_ADD_BONUS_I             , 0 )                   AS P2_ADD_BONUS_I
            --주식매수선택권행사이익
         ,  ISNULL(A.NOW_STOCK_PROFIT_I         , 0 )                   AS NOW_STOCK_PROFIT_I
         ,  ISNULL(B.P1_STOCK_BUY_PROFIT_I      , 0 )                   AS P1_STOCK_BUY_PROFIT_I
         ,  ISNULL(B.P2_STOCK_BUY_PROFIT_I      , 0 )                   AS P2_STOCK_BUY_PROFIT_I
            --우리사주조합인출금
         ,  ISNULL(A.NOW_OWNER_STOCK_DRAW_I     , 0 )                   AS NOW_STOCK_DRAW_I
         ,  ISNULL(B.P1_OWNER_STOCK_DRAW_I      , 0 )                   AS P1_OWNER_STOCK_DRAW_I
         ,  ISNULL(B.P2_OWNER_STOCK_DRAW_I      , 0 )                   AS P2_OWNER_STOCK_DRAW_I
            --임원퇴직소득금액한도초과액
         ,  ISNULL(A.NOW_OF_RETR_OVER_I         , 0 )                   AS NOW_OF_RETR_OVER_I
         ,  ISNULL(B.P1_OF_RETR_OVER_I          , 0 )                   AS P1_OF_RETR_OVER_I
         ,  ISNULL(B.P2_OF_RETR_OVER_I          , 0 )                   AS P2_OF_RETR_OVER_I

         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 ) +
            ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_PAY_HAM

            /*비과세 및 감면소득명세*/

            --국외근로
         ,  ISNULL(L.NON_TAX_EMPTION_I_M01      , 0 )                   AS NON_TAX_EMPTION_I_M01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_M01   , 0 )                   AS P1_NON_TAX_EMPTION_I_M01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_M01   , 0 )                   AS P2_NON_TAX_EMPTION_I_M01
            --야간근로수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_O01      , 0 )                   AS NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_O01   , 0 )                   AS P1_NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_O01   , 0 )                   AS P2_NON_TAX_EMPTION_I_O01
            --출산보육수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_Q01      , 0 )                   AS NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P1_NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P2_NON_TAX_EMPTION_I_Q01
            --연구보조비
         ,  ISNULL(L.NON_TAX_EMPTION_I_4        , 0 )                   AS NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_4     , 0 )                   AS P1_NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_4     , 0 )                   AS P2_NON_TAX_EMPTION_I_4
            --비과세학자금
         ,  ISNULL(L.NON_TAX_EMPTION_I_5        , 0 )                   AS NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_5     , 0 )                   AS P1_NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_5     , 0 )                   AS P2_NON_TAX_EMPTION_I_5
            --취재수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_6        , 0 )                   AS NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_6     , 0 )                   AS P1_NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_6     , 0 )                   AS P2_NON_TAX_EMPTION_I_6
            --그외기재비과세
         ,  ISNULL(L.NON_TAX_EMPTION_I_19       , 0 )                   AS NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_19    , 0 )                   AS P1_NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_19    , 0 )                   AS P2_NON_TAX_EMPTION_I_19
    
            --감면세액
         ,  ISNULL(A.SKILL_DED_I                , 0 )                   AS SKILL_DED_I
         ,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 )                   AS P1_REDUCE_TAX_T01
         ,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 )                   AS P2_REDUCE_TAX_T01
         ,  ISNULL(A.YOUTH_DED_I_SUM            , 0 )                   AS YOUTH_DED_I
         ,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 ) +
            ISNULL(L.P1_REDUCE_TAX_T10          , 0 )                   AS P1_REDUCE_TAX_T10
         ,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 ) +
            ISNULL(L.P2_REDUCE_TAX_T10          , 0 )                   AS P2_REDUCE_TAX_T10
         ,  ISNULL(A.TAXES_REDU_I               , 0 )                   AS TAXES_REDU_I
         ,  ISNULL(L.P1_REDUCE_TAX_T20          , 0 )                   AS P1_REDUCE_TAX_T20
         ,  ISNULL(L.P2_REDUCE_TAX_T20          , 0 )                   AS P2_REDUCE_TAX_T20
    
            --수련보조수당
         ,  ISNULL(NON_TAX_EMPTION_I_Y22        , 0 )                   AS NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P1_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P1_NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P2_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P2_NON_TAX_EMPTION_I_Y22
            --감면소득계
         ,  ISNULL(A.SKILL_DED_I                , 0 ) + 
            ISNULL(A.YOUTH_DED_I_SUM            , 0 ) + 
            ISNULL(A.TAXES_REDU_I               , 0 )                   AS REDUCE_TAX_SUM_I
         ,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P1_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P1_REDUCE_TAX_T20          , 0 )                   AS P1_REDUCE_TAX_SUM_I
         ,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P2_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P2_REDUCE_TAX_T20          , 0 )                   AS P2_REDUCE_TAX_SUM_I

            /*세액명세*/
            --결정세액
         ,  ISNULL(A.DEF_IN_TAX_I               , 0 )                   AS DEF_IN_TAX_I
         ,  ISNULL(A.DEF_LOCAL_TAX_I            , 0 )                   AS DEF_LOCAL_TAX_I
         ,  ISNULL(A.DEF_SP_TAX_I               , 0 )                   AS DEF_SP_TAX_I
            --기납부세액
         ,  ISNULL(B.P1_IN_TAX_I                , 0 )                   AS P1_IN_TAX_I
         ,  ISNULL(B.P1_LOCAL_TAX_I             , 0 )                   AS P1_LOCAL_TAX_I
         ,  ISNULL(B.P1_SP_TAX_I                , 0 )                   AS P1_SP_TAX_I
         ,  ISNULL(B.P2_IN_TAX_I                , 0 )                   AS P2_IN_TAX_I
         ,  ISNULL(B.P2_LOCAL_TAX_I             , 0 )                   AS P2_LOCAL_TAX_I
         ,  ISNULL(B.P2_SP_TAX_I                , 0 )                   AS P2_SP_TAX_I
         ,  ISNULL(A.NOW_IN_TAX_I               , 0 )                   AS NOW_IN_TAX_I
         ,  ISNULL(A.NOW_LOCAL_TAX_I            , 0 )                   AS NOW_LOCAL_TAX_I
         ,  ISNULL(A.NOW_SP_TAX_I               , 0 )                   AS NOW_SP_TAX_I
         ,  ISNULL(A.IN_TAX_I                   , 0 )                   AS IN_TAX_I
         ,  ISNULL(A.LOCAL_TAX_I                , 0 )                   AS LOCAL_TAX_I
         ,  ISNULL(A.SP_TAX_I                   , 0 )                   AS SP_TAX_I

            /*정산명세*/
         ,  ISNULL(A.INCOME_SUPP_TOTAL_I        , 0 )                   AS INCOME_SUPP_TOTAL_I
         ,  ISNULL(A.INCOME_DED_I               , 0 )                   AS INCOME_DED_I
         ,  ISNULL(A.EARN_INCOME_I              , 0 )                   AS EARN_INCOME_I
            --기본공제
         ,  ISNULL(A.PER_DED_I                  , 0 )                   AS PER_DED_I
         ,  ISNULL(A.SPOUSE_DED_I               , 0 )                   AS SPOUSE_DED_I
         ,  ISNULL(A.SUPP_SUB_I                 , 0 )                   AS SUPP_SUB_I
         ,  ISNULL(A.SUPP_NUM                   , 0 )                   AS SUPP_NUM
            --추가공제
         ,  ISNULL(A.AGED_DED_I                 , 0 )                   AS AGED_DED_I
         ,  ISNULL(A.AGED_NUM                   , 0 )                   AS AGED_NUM
         ,  ISNULL(A.DEFORM_DED_I               , 0 )                   AS DEFORM_DED_I
         ,  ISNULL(A.DEFORM_NUM                 , 0 )                   AS DEFORM_NUM
         ,  ISNULL(A.WOMAN_DED_I                , 0 )                   AS WOMAN_DED_I
         ,  ISNULL(A.ONE_PARENT_DED_I           , 0 )                   AS ONE_PARENT_DED_I
            --연금 보험료 공제
         ,  ISNULL(A.ANU_DED_I                  , 0 )                   AS ANU_DED_I
         ,  ISNULL(A.PUBLIC_PENS_I              , 0 )                   AS PUBLIC_PENS_I
         ,  ISNULL(A.SOLDIER_PENS_I             , 0 )                   AS SOLDIER_PENS_I
         ,  ISNULL(A.SCH_PENS_I                 , 0 )                   AS SCH_PENS_I
         ,  ISNULL(A.POST_PENS_I                , 0 )                   AS POST_PENS_I
            --특별소득공제
         ,  ISNULL(A.MED_PREMINM_I              , 0 )                   AS MED_PREMINM_I
         ,  ISNULL(A.HIRE_INSUR_I               , 0 )                   AS HIRE_INSUR_I
         ,  ISNULL(A.HOUS_AMOUNT_I              , 0 )                   AS HOUS_AMOUNT_I
         ,  ISNULL(A.HOUS_AMOUNT_I_2            , 0 )                   AS HOUS_AMOUNT_I_2
         ,  ISNULL(A.MORTGAGE_RETURN_I_2        , 0 )                   AS MORTGAGE_RETURN_I_2
         ,  ISNULL(A.MORTGAGE_RETURN_I          , 0 )                   AS MORTGAGE_RETURN_I  
         ,  ISNULL(A.MORTGAGE_RETURN_I_3        , 0 )                   AS MORTGAGE_RETURN_I_3
         ,  ISNULL(A.MORTGAGE_RETURN_I_5        , 0 )                   AS MORTGAGE_RETURN_I_5
         ,  ISNULL(A.MORTGAGE_RETURN_I_4        , 0 )                   AS MORTGAGE_RETURN_I_4
         ,  ISNULL(A.MORTGAGE_RETURN_I_6        , 0 )                   AS MORTGAGE_RETURN_I_6
         ,  ISNULL(A.MORTGAGE_RETURN_I_7        , 0 )                   AS MORTGAGE_RETURN_I_7
         ,  ISNULL(A.MORTGAGE_RETURN_I_8        , 0 )                   AS MORTGAGE_RETURN_I_8
         ,  ISNULL(A.MORTGAGE_RETURN_I_9        , 0 )                   AS MORTGAGE_RETURN_I_9
            --기부금(이월분)
         ,  ISNULL(A.GIFT_DED_I                 , 0 )                   AS GIFT_DED_I
            --(계)
         ,  ISNULL(A.MED_PREMINM_I              , 0 ) +
            ISNULL(A.HIRE_INSUR_I               , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I              , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I_2            , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_2        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I          , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_3        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_5        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_4        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_6        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_7        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_8        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_9        , 0 ) +
            ISNULL(A.GIFT_DED_I                 , 0 )                   AS STD_DED_I_1
            --차감소득금액
         ,  ISNULL(A.DED_INCOME_I               , 0 )                   AS DED_INCOME_I
            --그밖의소득공제
         ,  ISNULL(A.PRIV_PENS_I                , 0 )                   AS PRIV_PENS_I
         ,  ISNULL(A.COMP_PREMINUM_DED_I        , 0 )                   AS COMP_PREMINUM_DED_I
         ,  ISNULL(A.HOUS_BU_AMT                , 0 ) +
            ISNULL(A.HOUS_BU_ADD_AMT            , 0 )                   AS HOUS_BU_AMT
         ,  ISNULL(A.HOUS_BU_AMOUNT_I           , 0 ) +
            ISNULL(A.HOUS_BU_AMOUNT_ADD_I       , 0 )                   AS HOUS_BU_AMOUNT_I
         ,  ISNULL(A.HOUS_WORK_AMT              , 0 )                   AS HOUS_WORK_AMT
         ,  ISNULL(A.INVESTMENT_DED_I           , 0 )                   AS INVESTMENT_DED_I
         ,  ISNULL(A.CARD_DED_I                 , 0 )                   AS CARD_DED_I
         ,  ISNULL(A.STAFF_STOCK_DED_I          , 0 )                   AS STAFF_STOCK_DED_I
         ,  ISNULL(A.STAFF_GIFT_DED_I           , 0 )                   AS STAFF_GIFT_DED_I
         ,  ISNULL(A.EMPLOY_WORKER_DED_I        , 0 )                   AS EMPLOY_WORKER_DED_I
         ,  ISNULL(A.NOT_AMOUNT_LOAN_DED_I      , 0 )                   AS NOT_AMOUNT_LOAN_DED_I
         ,  ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS LONG_INVEST_STOCK_DED_I
         ,  ISNULL(A.PRIV_PENS_I                , 0 ) + 
            ISNULL(A.COMP_PREMINUM_DED_I        , 0 ) +
            ISNULL(A.HOUS_BU_AMT                , 0 ) +
            ISNULL(A.HOUS_BU_ADD_AMT            , 0 ) +
            ISNULL(A.HOUS_BU_AMOUNT_I           , 0 ) +
            ISNULL(A.HOUS_BU_AMOUNT_ADD_I       , 0 ) +
            ISNULL(A.HOUS_WORK_AMT              , 0 ) +
            ISNULL(A.INVESTMENT_DED_I           , 0 ) +
            ISNULL(A.CARD_DED_I                 , 0 ) +
            ISNULL(A.STAFF_STOCK_DED_I          , 0 ) +
            ISNULL(A.STAFF_GIFT_DED_I           , 0 ) +
            ISNULL(A.EMPLOY_WORKER_DED_I        , 0 ) +
            ISNULL(A.NOT_AMOUNT_LOAN_DED_I      , 0 ) +
            ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS ETC_INCOME_DED_I
            --특별공제종합한도초과액
         ,  ISNULL(A.OVER_INCOME_DED_LMT        , 0 )                   AS OVER_INCOME_DED_LMT
            --종합소득과세표준
         ,  ISNULL(A.TAX_STD_I                  , 0 )                   AS TAX_STD_I
            --산출세액
         ,  ISNULL(A.COMP_TAX_I                 , 0 )                   AS COMP_TAX_I
            --세액감면
         ,  ISNULL(A.INCOME_REDU_I              , 0 )                   AS INCOME_REDU_I
         ,  ISNULL(A.SKILL_DED_I                , 0 )                   AS SKILL_DED_I2
         ,  ISNULL(A.YOUTH_DED_I                , 0 ) +
            ISNULL(A.YOUTH_DED_I2               , 0 ) +
            ISNULL(A.YOUTH_DED_I3               , 0 )                   AS YOUTH_DED_I2
                                                                                                                               --55.조세조약(TAXES_REDU_I, 앞에 정의됨)
                                                                                                                               --56.세액감면계(레포트에서계산)
            --세액공제
         ,  ISNULL(A.IN_TAX_DED_I               , 0 )                   AS IN_TAX_DED_I
         ,  ISNULL(A.CHILD_TAX_DED_I            , 0 )                   AS CHILD_TAX_DED_I
         ,  ISNULL(A.MANY_CHILD_NUM             , 0 )                   AS MANY_CHILD_NUM
         ,  ISNULL(A.BRING_CHILD_DED_I          , 0 )                   AS BRING_CHILD_DED_I
         ,  ISNULL(A.BRING_CHILD_NUM            , 0 )                   AS BRING_CHILD_NUM
         ,  ISNULL(A.BIRTH_ADOPT_I              , 0 )                   AS BIRTH_ADOPT_I
         ,  ISNULL(A.BIRTH_ADOPT_NUM            , 0 )                   AS BIRTH_ADOPT_NUM
         --(연금계좌소득공제)
         ,  ISNULL(A.SCI_DEDUC_I                , 0 )                   AS SCI_DEDUC_I
         ,  ISNULL(A.SCI_TAX_DED_I              , 0 ) +
            ISNULL(A.SCI_TAX_DED_I1             , 0 )                   AS SCI_TAX_DED_I
         ,  ISNULL(A.RETIRE_PENS_I              , 0 )                   AS RETIRE_PENS_I
         ,  ISNULL(A.RETIRE_TAX_DED_I           , 0 ) +
            ISNULL(A.RETIRE_TAX_DED_I1          , 0 )                   AS RETIRE_TAX_DED_I
         ,  ISNULL(A.PENS_I                     , 0 )                   AS PENS_I
         ,  ISNULL(A.PENS_TAX_DED_I1            , 0 ) +
            ISNULL(A.PENS_TAX_DED_I             , 0 )                   AS PENS_TAX_DED_I1
            --특별세액공제
         ,  ISNULL(A.ETC_INSUR_I                , 0 )                   AS ETC_INSUR_I
         ,  ISNULL(A.ETC_INSUR_TAX_DED_I        , 0 )                   AS ETC_INSUR_TAX_DED_I
         ,  ISNULL(A.DEFORM_INSUR_I             , 0 )                   AS DEFORM_INSUR_I
         ,  ISNULL(A.DEFORM_INSUR_TAX_DED_I     , 0 )                   AS DEFORM_INSUR_TAX_DED_I
         ,  ISNULL(A.MED_DED_I                  , 0 )                   AS MED_DED_I
         ,  ISNULL(A.MED_TAX_DED_I              , 0 )                   AS MED_TAX_DED_I
         ,  ISNULL(A.EDUC_DED_I                 , 0 )                   AS EDUC_DED_I
         ,  ISNULL(A.EDUC_TAX_DED_I             , 0 )                   AS EDUC_TAX_DED_I
    
         ,  ISNULL(A.POLICY_INDED_DED_AMT       , 0 )                   AS POLICY_INDED_DED_AMT
         ,  ISNULL(A.POLICY_INDED_TAX_DED_I     , 0 )                   AS POLICY_INDED_TAX_DED_I
         ,  ISNULL(A.POLICY_GIFT_DED_AMT        , 0 )                   AS POLICY_GIFT_DED_AMT
         ,  ISNULL(A.POLICY_GIFT_TAX_DED_I      , 0 )                   AS POLICY_GIFT_TAX_DED_I
         ,  ISNULL(A.LEGAL_DED_AMT              , 0 )                   AS LEGAL_DED_AMT
         ,  ISNULL(A.LEGAL_GIFT_TAX_DED_I       , 0 )                   AS LEGAL_GIFT_TAX_DED_I
         ,  ISNULL(A.STAFF_DED_AMT              , 0 )                   AS STAFF_DED_AMT
         ,  ISNULL(A.STAFF_GIFT_TAX_DED_I       , 0 )                   AS STAFF_GIFT_TAX_DED_I
         ,  ISNULL(A.APPOINT_ASS_TAX_DED_AMT    , 0 )                   AS APPOINT_ASS_TAX_DED_AMT
         ,  ISNULL(A.APPOINT_GIFT_TAX_DED_I     , 0 ) +
            ISNULL(A.ASS_GIFT_TAX_DED_I         , 0 )                   AS APPOINT_GIFT_TAX_DED_I
            --(표준세액공제)
         ,  ISNULL(A.STD_TAX_DED_I              , 0 )                   AS STD_TAX_DED_I
            --납세조합공제
         ,  ISNULL(A.NAP_TAX_DED_I              , 0 )                   AS NAP_TAX_DED_I
         ,  ISNULL(A.HOUS_INTER_I               , 0 )                   AS HOUS_INTER_I
         ,  ISNULL(A.OUTSIDE_INCOME_I           , 0 )                   AS OUTSIDE_INCOME_I
         , (CASE WHEN ISNULL(F.MON_RENT_I, 0) >= 7500000 THEN 7500000
                 ELSE ISNULL(F.MON_RENT_I, 0)
            END)                                                        AS MON_RENT_I_1
         , ISNULL(A.MON_RENT_I                  , 0 )                   AS MON_RENT_I_2

         /*소득공제 명세*/
         ,  I.SUPP_CNT
         ,  ISNULL(I.SUPP_TOT_ETC_INSUR_1       , 0 )                   AS SUPP_TOT_ETC_INSUR1
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR_1    , 0 )                   AS SUPP_TOT_DEFORM_INSUR1
         ,  ISNULL(I.SUPP_TOT_ETC_INSUR_2       , 0 )                   AS SUPP_TOT_ETC_INSUR2
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR_2    , 0 )                   AS SUPP_TOT_DEFORM_INSUR2
         ,  ISNULL(A.MED_PREMINM_I              , 0 ) +
            ISNULL(A.HIRE_INSUR_I               , 0 )                   AS SUPP_TOT_INSUR2
         ,  ISNULL(I.SUPP_TOT_MED1              , 0 )                   AS SUPP_TOT_MED1
         ,  ISNULL(I.SUPP_TOT_MED2              , 0 )                   AS SUPP_TOT_MED2
         ,  ISNULL(I.SUPP_TOT_EDU1              , 0 )                   AS SUPP_TOT_EDU1
         ,  ISNULL(I.SUPP_TOT_EDU2              , 0 )                   AS SUPP_TOT_EDU2
         ,  ISNULL(I.SUPP_TOT_CARD1             , 0 )                   AS SUPP_TOT_CARD1
         ,  ISNULL(I.SUPP_TOT_CARD2             , 0 )                   AS SUPP_TOT_CARD2
         ,  ISNULL(I.SUPP_TOT_DEBIT1            , 0 )                   AS SUPP_TOT_DEBIT1
         ,  ISNULL(I.SUPP_TOT_DEBIT2            , 0 )                   AS SUPP_TOT_DEBIT2
         ,  ISNULL(I.SUPP_TOT_CASH1             , 0 )                   AS SUPP_TOT_CASH1
         ,  ISNULL(I.SUPP_TOT_TRA1              , 0 )                   AS SUPP_TOT_TRA1
         ,  ISNULL(I.SUPP_TOT_TRA2              , 0 )                   AS SUPP_TOT_TRA2
         ,  ISNULL(I.SUPP_TOT_TRAFFIC1          , 0 )                   AS SUPP_TOT_TRAFFIC1
         ,  ISNULL(I.SUPP_TOT_TRAFFIC2          , 0 )                   AS SUPP_TOT_TRAFFIC2
         ,  ISNULL(I.SUPP_TOT_GIFT1             , 0 )                   AS SUPP_TOT_GIFT1
         ,  ISNULL(I.SUPP_TOT_GIFT2             , 0 )                   AS SUPP_TOT_GIFT2
         ,  ISNULL(J.ANU_AMOUNT_I               , 0 )                   AS ANU_AMOUNT_I
         ,  ISNULL(J.MED_AMOUNT_I               , 0 )                   AS MED_AMOUNT_I
         ,  ISNULL(J.HIR_AMOUNT_I               , 0 )                   AS HIR_AMOUNT_I
    FROM              HAD600T AS A   WITH (NOLOCK)
           INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                  AND D.PERSON_NUMB    = A.PERSON_NUMB
           INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                  AND C.DIV_CODE       = D.SECT_CODE
           INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
           LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                  AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND F.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                  AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND B.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HPA600T AS G   WITH (NOLOCK) ON G.COMP_CODE      = A.COMP_CODE
                                                  AND G.PAY_YYYYMM  LIKE A.YEAR_YYYY + '%'
                                                  AND G.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD700T AS H   WITH (NOLOCK) ON H.COMP_CODE      = A.COMP_CODE
                                                  AND H.SUPP_DATE   LIKE A.YEAR_YYYY + '%'
                                                  AND H.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT COMP_CODE
                           , YEAR_YYYY
                           , PERSON_NUMB
                           , COUNT(DISTINCT unilite.fnCipherDecrypt(REPRE_NUM, '')) AS SUPP_CNT
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR_1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR_1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(MED_USE_I       , 0)  ELSE 0 END) AS SUPP_TOT_MED1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(EDU_USE_I       , 0)  ELSE 0 END) AS SUPP_TOT_EDU1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_CARD1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END) AS SUPP_TOT_DEBIT1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_CASH1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END) AS SUPP_TOT_TRA1 
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END) AS SUPP_TOT_TRAFFIC1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_GIFT1
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR_2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR_2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(INSUR_USE_I     , 0)  ELSE 0 END) AS SUPP_TOT_INSUR2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(MED_USE_I       , 0)  ELSE 0 END) AS SUPP_TOT_MED2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(EDU_USE_I       , 0)  ELSE 0 END) AS SUPP_TOT_EDU2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_CARD2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END) AS SUPP_TOT_DEBIT2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_CASH2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END) AS SUPP_TOT_TRA2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END) AS SUPP_TOT_TRAFFIC2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END) AS SUPP_TOT_GIFT2
                      FROM   HAD430T WITH (NOLOCK)
                      WHERE  COMP_CODE = @COMP_CODE
                      AND    YEAR_YYYY = @YEAR_YYYY
                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
                      )       AS I                 ON I.COMP_CODE      = A.COMP_CODE
                                                  AND I.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND I.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT X.COMP_CODE
                           , X.YEAR_YYYY
                           , X.PERSON_NUMB

                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_M01

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P1_NON_TAX_EMPTION_I   ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P2_NON_TAX_EMPTION_I   ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_O01

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Q01

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'X01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_X01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'X01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_X01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'X01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_X01

                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_4

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_5

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_6

                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H12','H13','H01','K01','S01','Y02','Y03','H05','I01','R10','H14','H15','H16') THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H12','H13','H01','K01','S01','Y02','Y03','H05','I01','R10','H14','H15','H16') THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H12','H13','H01','K01','S01','Y02','Y03','H05','I01','R10','H14','H15','H16') THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_19

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Y22

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T01

                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T10
                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T10

                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T20
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T20
                      FROM  (
                            -- 연말정산비과세소득
                            SELECT A.COMP_CODE
                                 , A.YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.NON_TAX_EMPTION_I   , 0))    AS NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0))    AS P1_NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P2_NON_TAX_EMPTION_I, 0))    AS P2_NON_TAX_EMPTION_I
                            FROM   HAD610T   A WITH (NOLOCK)
                            WHERE  A.COMP_CODE = @COMP_CODE
                            AND    A.YEAR_YYYY = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                            UNION  ALL

                            -- 주식매수선택권행사이익 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA810T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                            UNION ALL

                            -- 우리사주조합인출금 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA820T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                            ) X
                      GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                      )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                  AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND L.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                        SELECT A.COMP_CODE
                             , LEFT(A.PAY_YYYYMM, 4) AS PAY_YYYY
                             , A.PERSON_NUMB
                             , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE)  =  'ANU'                THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)  AS ANU_AMOUNT_I
                             , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE) IN ('MED', 'RME', 'LCI') THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)  AS MED_AMOUNT_I
                             , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE)  =  'HIR'                THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)
                             + ISNULL(C.HIR_TAX_I, 0)                                                                                           AS HIR_AMOUNT_I
                        FROM   HPA400T A WITH (NOLOCK)
                               LEFT  JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                 AND B.MAIN_CODE   = 'H034'
                                                                 AND B.SUB_CODE    = A.DED_CODE
                               LEFT  JOIN (SELECT COMP_CODE
                                                , LEFT(PAY_YYYYMM, 4) AS PAY_YYYY
                                                , PERSON_NUMB
                                                , SUM(ISNULL(HIR_TAX_I, 0)) AS HIR_TAX_I
                                           FROM   HPA820T WITH (NOLOCK)
                                           WHERE  COMP_CODE           = @COMP_CODE
                                           AND    LEFT(PAY_YYYYMM, 4) = @YEAR_YYYY
                                           GROUP BY COMP_CODE, LEFT(PAY_YYYYMM, 4), PERSON_NUMB
                                           ) AS C                 ON C.COMP_CODE   = A.COMP_CODE
                                                                 AND C.PAY_YYYY    = LEFT(A.PAY_YYYYMM, 4)
                                                                 AND C.PERSON_NUMB = A.PERSON_NUMB
                        WHERE  A.COMP_CODE           = @COMP_CODE
                        AND    LEFT(A.PAY_YYYYMM, 4) = @YEAR_YYYY
                        GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, C.HIR_TAX_I
                      )       AS J                 ON J.COMP_CODE      = A.COMP_CODE
                                                  AND J.PAY_YYYY       = A.YEAR_YYYY
                                                  AND J.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                  AND M1.MAIN_CODE     = 'B012'
                                                  AND M1.SUB_CODE      = D.NATION_CODE
           
    WHERE  A.COMP_CODE = @COMP_CODE
    AND    A.YEAR_YYYY = @YEAR_YYYY
   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND D.SECT_CODE = #{DIV_CODE}
    </if>
	
	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       AND A.HALFWAY_TYPE = #{RETR_TYPE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
       AND D.PAY_CODE  = #{PAY_CODE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
       AND D.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
       AND A.PERSON_NUMB = #{PERSON_NUMB}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       AND D.DEPT_CODE >= #{FR_DEPT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
	</if>
      
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
          AND ((G.pay_yyyymm >= #{PAYFRYYMM}) OR (LEFT(H.SUPP_DATE, 6) >= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
          AND ((G.pay_yyyymm &lt;= #{PAYTOYYMM})
          OR (LEFT(H.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
    	AND    D.RETR_DATE     >= #{FRRETIREDATE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
    	AND    D.RETR_DATE     &lt;= #{TORETIREDATE}
    </if>
    
    ORDER BY D.DIV_CODE, D.DEPT_CODE, D.POST_CODE, D.NAME, A.PERSON_NUMB
END
	</select>
		<select id="had840rkrServiceImpl.selectList2016_Query2" parameterType="Map" resultType="rMap">
		--had840rkr.Chad840rkr[fnHad840nQ2015] Query2
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2014'))
        DROP TABLE #HAD430T2014

    SELECT A.YEAR_YYYY
         , A.PERSON_NUMB
         , A.IN_FORE
         , A.REL_CODE
         , A.FAMILY_NAME
         , unilite.fnCipherDecrypt(A.REPRE_NUM, '') AS REPRE_NUM
         , CASE WHEN ISNULL(A.DEFAULT_DED_YN    , '') = 'Y' THEN '○' ELSE '' END AS DEFAULT_DED_YN     --기본공제YN
         , CASE WHEN ISNULL(A.WOMAN_DED_YN      , '') = 'Y' THEN '○' ELSE '' END AS WOMAN_DED_YN       --부녀자YN
         , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS ONE_PARENT_DED_YN  --한부모YN
         , CASE WHEN ISNULL(A.OLD_DED_YN        , '') = 'Y' THEN '○' ELSE '' END AS OLD_DED_YN         --경로우대YN
         , CASE WHEN ISNULL(A.DEFORM_DED_YN     , '') = 'Y' THEN '○' ELSE '' END AS DEFORM_DED_YN      --장애인YN
         , ISNULL(A.DEFORM_KIND_CODE,'')                                          AS DEFORM_KIND_CODE   --장애인코드
         , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BIRTH_ADOPT_DED_YN --출산입양YN
         , CASE WHEN ISNULL(A.BRING_CHILD_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BRING_CHILD_DED_YN --6세이하YN
         , CASE WHEN ISNULL(A.MANY_CHILD_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS MANY_CHILD_DED_YN  --다자녀YN
         , A.SEQ_NUM                                                                                    --자료구분
         , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
                THEN ISNULL(M2.MED_PREMINM_I  , 0) + ISNULL(M2.HIRE_INSUR_I, 0)
                ELSE ISNULL(A.INSUR_USE_I, 0)
            END                                                                  AS INSUR_USE_I         --보험료
         , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
                WHEN A.INSUR_CODE = '2' THEN 0
                ELSE ISNULL(A.INSUR_USE_I, 0)
           END                                                                   AS ETC_USE_I           --기타보장성
         , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
                WHEN A.INSUR_CODE = '1' THEN 0
                ELSE ISNULL(A.INSUR_USE_I, 0)
           END                                                                   AS DEFORM_USE_I        --장애인전용보장성
         , ISNULL(A.MED_USE_I       , 0)                                         AS MED_USE_I           --의료비
         , ISNULL(A.EDU_USE_I       , 0)                                         AS EDU_USE_I           --교육비
         , ISNULL(A.CARD_USE_I      , 0)                                         AS CARD_USE_I          --신용카드
         , ISNULL(A.DEBIT_CARD_USE_I, 0)                                         AS DEBIT_CARD_USE_I    --직불카드
         , ISNULL(A.CASH_USE_I      , 0)                                         AS CASH_USE_I          --현금영수증
         , ISNULL(A.TRA_MARKET_USE_I, 0)                                         AS TRA_MARKET_USE_I    --전통시장
         , ISNULL(A.TRAFFIC_USE_I   , 0)                                         AS TRAFFIC_USE_I       --대중교통
         , ISNULL(A.GIFT_USE_I      , 0)                                         AS GIFT_USE_I          --기부금
    INTO   #HAD430T2014
    FROM              HAD430T A  WITH (NOLOCK)
           INNER JOIN HUM100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                              AND M1.PERSON_NUMB = A.PERSON_NUMB
           INNER JOIN HAD600T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                              AND M2.YEAR_YYYY   = A.YEAR_YYYY
                                              AND M2.PERSON_NUMB = A.PERSON_NUMB
    WHERE  A.COMP_CODE       = #{S_COMP_CODE}
    AND    A.YEAR_YYYY       = #{YEAR_YYYY}
    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	   AND    M1.SECT_CODE = #{DIV_CODE}
		</if>
	<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
	    AND    M1.DEPT_CODE = #{TREE_CD}
		</if>
	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
	    AND    M2.HALFWAY_TYPE = #{RETR_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	    AND    M1.PAY_CODE  = #{PAY_CODE}
		</if>
	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
	    AND    M1.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
		</if>
	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	    AND    A.PERSON_NUMB = #{PERSON_NUMB}
	</if>
    SET NOCOUNT OFF
    SET ARITHABORT OFF

    SELECT *
    FROM   #HAD430T2014 A
    ORDER  BY A.PERSON_NUMB, A.REL_CODE, A.REPRE_NUM, A.SEQ_NUM
END
	</select>

<select id="had840rkrServiceImpl.selectList2018_Query1" parameterType="Map" resultType="rMap">
BEGIN
    DECLARE @COMP_CODE              NVARCHAR(08)
          , @YEAR_YYYY              NVARCHAR(04)
          , @REPORT_GBN             NVARCHAR(01)

--  1. 변수 값 할당 ----------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @YEAR_YYYY          = #{YEAR_YYYY}
    SET @REPORT_GBN         = #{OUTPUT}

--  2. 조회 ------------------------------------------------------------------------------------------------------
    SELECT  DISTINCT
            CASE WHEN ISNULL(D.LIVE_GUBUN, '') = '' THEN '1'
                 ELSE D.LIVE_GUBUN
            END                                                         AS LIVE_GUBUN           --거주구분
         ,  ISNULL(A.FORE_SINGLE_YN        , 'N')                       AS FORE_SINGLE_YN       --외국인단일세율적용
         ,  ISNULL(A.FOREIGN_DISPATCH_YN   , 'N')                       AS FOREIGN_DISPATCH_YN  --외국법인소속파견근로자여부
         ,  D.NATION_CODE
         ,  ISNULL(M1.CODE_NAME            , '')                        AS NATION_NAME    --국적
         ,  A.HOUSEHOLDER_YN                                            AS HOUSEHOLDER_YN --세대주여부
         ,  A.HALFWAY_TYPE                                              AS HALFWAY_TYPE   --연말정산구분(Y:중도퇴사, N:연말정산)

            --징수의무자
         ,  C.DIV_FULL_NAME                                             AS DIV_FULL_NAME --1.법인명(상호)
         ,  C.REPRE_NAME                                                AS REPRE_NAME    --2.대표자(성명)
         ,  SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 6, 5)                              AS COMPANY_NUM   --3.사업자등록번호
		 ,  ISNULL(M2.TAX_BASE, '0')                                    AS TAX_BASE      --3-1. 사업자단위과세자여부
		 ,  ISNULL(C.SUB_DIV_NUM, '')                                   AS SUB_DIV_NUM   --3-2 종사업장일련번호
         ,  E.COMP_OWN_NO                                               AS COMP_REPRE_NO --4.주민(법인)등록번호
         ,  C.ADDR                                                      AS COMP_KOR_ADDR --5.소재지(주소)

            --소득자
         ,  A.PERSON_NUMB															     --사번
         ,  D.NAME																		 --6.성명
         ,  unilite.fnCipherDecrypt(D.REPRE_NUM, 'A')                   AS REPRE_NUM	 --7.주민(외국인)등록번호
         ,  D.KOR_ADDR                                                  AS KOR_ADDR		 --8.주소
         ,  D.DIV_CODE                                                  AS DIV_CODE      --사업장
         ,  D.DEPT_CODE                                                 AS DEPT_CODE     --부서
         ,  D.POST_CODE                                                 AS POST_CODE     --직위

            /*근무처별소득명세*/
            --근무처명
         ,  ISNULL(B.P1_COMPANY_NAME            , '')                   AS P1_COMPANY_NAME --9.종(전) 근무처명
         ,  ISNULL(B.P2_COMPANY_NAME            , '')                   AS P2_COMPANY_NAME --9.종(전) 근무처명
         ,  ISNULL(F.P3_COMPANY_NAME            , '')                   AS NAP_NAME        --9.납세조합 근무처명
            --사업자등록번호
         ,  ISNULL(B.P1_COMPANY_NUM             , '')                   AS P1_COMPANY_NUM  --10.종(전) 사업자등록번호
         ,  ISNULL(B.P2_COMPANY_NUM             , '')                   AS P2_COMPANY_NUM  --10.종(전) 사업자등록번호
         ,  ISNULL(F.P3_COMPANY_NUM             , '')                   AS P3_COMPANY_NUM  --10.납세조합 사업자등록번호
            --근무기간
         ,  CASE WHEN LEFT(D.JOIN_DATE, 4) = @YEAR_YYYY THEN D.JOIN_DATE
                 ELSE @YEAR_YYYY + '0101'
            END                                                         AS FJOIN_DATE     --11.주(현)근무기간 From
         ,  ISNULL(B.P1_WORKDATE_FR             , '')                   AS P1_WORKDATE_FR --11.종(전)근무기간 From
         ,  ISNULL(B.P2_WORKDATE_FR             , '')                   AS P2_WORKDATE_FR --11.종(전)근무기간 From
         ,  ISNULL(F.P3_WORKDATE_FR             , '')                   AS P3_WORKDATE_FR --11.납세조합 근무기간 From
         ,  CASE WHEN LEFT(A.RETR_DATE, 4) = @YEAR_YYYY THEN A.RETR_DATE
                 ELSE @YEAR_YYYY + '1231'
            END                                                         AS FRETR_DATE     --11.주(현)근무기간 To
         ,  ISNULL(B.P1_WORKDATE_TO             , '')                   AS P1_WORKDATE_TO --11.종(전)근무기간 To                                                            
         ,  ISNULL(B.P2_WORKDATE_TO             , '')                   AS P2_WORKDATE_TO --11.종(전)근무기간 To
         ,  ISNULL(F.P3_WORKDATE_TO             , '')                   AS P3_WORKDATE_TO --11.납세조합 근무기간 To
            --감면기간
         ,  ISNULL(F.NONTAX_FR                  , '')                   AS NONTAX_FR      --12.주(현)감면기한 From
         ,  ISNULL(B.P1_NONTAX_FR               , '')                   AS P1_NONTAX_FR	  --12.종(전)감면기한 From
         ,  ISNULL(B.P2_NONTAX_FR               , '')                   AS P2_NONTAX_FR   --12.종(전)감면기한 From
         ,  ISNULL(F.P3_NONTAX_FR               , '')                   AS P3_NONTAX_FR   --12.납세조합 감면기한 From
         ,  ISNULL(F.NONTAX_TO                  , '')                   AS NONTAX_TO	  --12.주(현)감면기한 To
         ,  ISNULL(B.P1_NONTAX_TO               , '')                   AS P1_NONTAX_TO	  --12.종(전)감면기한 To
         ,  ISNULL(B.P2_NONTAX_TO               , '')                   AS P2_NONTAX_TO	  --12.종(전)감면기한 To
         ,  ISNULL(F.P3_NONTAX_TO               , '')                   AS P3_NONTAX_TO	  --12.납세조합 감면기한 To
            --급여
         ,  ISNULL(A.NOW_PAY_TOT_I              , 0 )                   AS NOW_PAY_TOT_I  --13.주(현)상여
         ,  ISNULL(B.P1_PAY_TOTAL_I             , 0 )                   AS P1_PAY_TOTAL_I --13.종(전)상여
         ,  ISNULL(B.P2_PAY_TOTAL_I             , 0 )                   AS P2_PAY_TOTAL_I --13.종(전)상여
         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 )                   AS NAP_PAY_TOT_I  --13.납세조합 상여
            --상여
         ,  ISNULL(A.NOW_BONUS_TOTAL_I          , 0 )                   AS NOW_BONUS_TOTAL_I   --14.주(현)급여
         ,  ISNULL(B.P1_BONUS_I_TOTAL_I         , 0 )                   AS P1_BONUS_I_TOTAL_I  --14.종(전)급여
         ,  ISNULL(B.P2_BONUS_I_TOTAL_I         , 0 )                   AS P2_BONUS_I_TOTAL_I  --14.종(전)급여
         ,  ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_BONUS_TOTAL_I   --14.납세조합 급여
            --인정상여
         ,  ISNULL(A.NOW_ADD_BONUS_I            , 0 )                   AS NOW_ADD_BONUS_I     --15.주(현)인정상여
         ,  ISNULL(B.P1_ADD_BONUS_I             , 0 )                   AS P1_ADD_BONUS_I      --15.종(전)인정상여
         ,  ISNULL(B.P2_ADD_BONUS_I             , 0 )                   AS P2_ADD_BONUS_I      --15.종(전)인정상여
            --주식매수선택권행사이익
         ,  ISNULL(A.NOW_STOCK_PROFIT_I         , 0 )                   AS NOW_STOCK_PROFIT_I   --15-1.주(현)주식매수선택권행사이익
         ,  ISNULL(B.P1_STOCK_BUY_PROFIT_I      , 0 )                   AS P1_STOCK_BUY_PROFIT_I--15-1.종(전)주식매수선택권행사이익
         ,  ISNULL(B.P2_STOCK_BUY_PROFIT_I      , 0 )                   AS P2_STOCK_BUY_PROFIT_I--15-1.종(전)주식매수선택권행사이익
            --우리사주조합인출금
         ,  ISNULL(A.NOW_OWNER_STOCK_DRAW_I     , 0 )                   AS NOW_STOCK_DRAW_I      --15-2.주(현)우리사주조합인출금
         ,  ISNULL(B.P1_OWNER_STOCK_DRAW_I      , 0 )                   AS P1_OWNER_STOCK_DRAW_I --15-2.종(전)우리사주조합인출금
         ,  ISNULL(B.P2_OWNER_STOCK_DRAW_I      , 0 )                   AS P2_OWNER_STOCK_DRAW_I --15-2.종(전)우리사주조합인출금
            --임원퇴직소득금액한도초과액
         ,  ISNULL(A.NOW_OF_RETR_OVER_I         , 0 )                   AS NOW_OF_RETR_OVER_I  --15-3.주(현)임원퇴직소득금액한도초과액
         ,  ISNULL(B.P1_OF_RETR_OVER_I          , 0 )                   AS P1_OF_RETR_OVER_I   --15-3.종(전)임원퇴직소득금액한도초과액
         ,  ISNULL(B.P2_OF_RETR_OVER_I          , 0 )                   AS P2_OF_RETR_OVER_I   --15-3.종(전)임원퇴직소득금액한도초과액
            --직무발명보상금
		 ,  ISNULL(A.NOW_TAX_INVENTION_I        , 0 )                   AS NOW_TAX_INVENTION_I --15-4.주(현)직무발명보상금
		 ,  ISNULL(B.P1_TAX_INVENTION_I         , 0 )                   AS P1_TAX_INVENTION_I  --15-4.종(전)직무발명보상금 
		 ,  ISNULL(B.P2_TAX_INVENTION_I         , 0 )                   AS P2_TAX_INVENTION_I  --15-4.종(전)직무발명보상금
		    --납세조합 계
         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 ) +
            ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_PAY_HAM          --16.납세조합 계

            /*비과세 및 감면소득명세*/
            --18.국외근로
         ,  ISNULL(L.NON_TAX_EMPTION_I_M01      , 0 )                   AS NON_TAX_EMPTION_I_M01    
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_M01   , 0 )                   AS P1_NON_TAX_EMPTION_I_M01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_M01   , 0 )                   AS P2_NON_TAX_EMPTION_I_M01
            --18-1.야간근로수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_O01      , 0 )                   AS NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_O01   , 0 )                   AS P1_NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_O01   , 0 )                   AS P2_NON_TAX_EMPTION_I_O01
            --18-2.출산보육수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_Q01      , 0 )                   AS NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P1_NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P2_NON_TAX_EMPTION_I_Q01
            --18-4.연구보조비
         ,  ISNULL(L.NON_TAX_EMPTION_I_4        , 0 )                   AS NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_4     , 0 )                   AS P1_NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_4     , 0 )                   AS P2_NON_TAX_EMPTION_I_4
            --18-5.비과세학자금
         ,  ISNULL(L.NON_TAX_EMPTION_I_5        , 0 )                   AS NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_5     , 0 )                   AS P1_NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_5     , 0 )                   AS P2_NON_TAX_EMPTION_I_5
            --18-6.취재수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_6        , 0 )                   AS NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_6     , 0 )                   AS P1_NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_6     , 0 )                   AS P2_NON_TAX_EMPTION_I_6
            --그외기재비과세(~)
         ,  ISNULL(L.NON_TAX_EMPTION_I_19       , 0 )                   AS NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_19    , 0 )                   AS P1_NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_19    , 0 )                   AS P2_NON_TAX_EMPTION_I_19
		    --18-32.청년세액감면 대상 총급여 
		 ,  ISNULL(A.YOUTH_DED_I_SUM            , 0 )                   AS YOUTH_DED_I
         ,  ISNULL(L.P1_REDUCE_TAX_T10          , 0 )                   AS P1_REDUCE_TAX_T10
         ,  ISNULL(L.P2_REDUCE_TAX_T10          , 0 )                   AS P2_REDUCE_TAX_T10
			----세액감면 외국인 기술자
		 --,  ISNULL(A.SKILL_DED_I                , 0 )                   AS SKILL_DED_I
		 --,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 )                   AS P1_REDUCE_TAX_T01
		 --,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 )                   AS P2_REDUCE_TAX_T01
			----조세조약
		 --,  ISNULL(A.TAXES_REDU_I               , 0 )                   AS TAXES_REDU_I
		 --,  ISNULL(L.P1_REDUCE_TAX_T20          , 0 )                   AS P1_REDUCE_TAX_T20
		 --,  ISNULL(L.P2_REDUCE_TAX_T20          , 0 )                   AS P2_REDUCE_TAX_T20
            
		    --19.수련보조수당
         ,  ISNULL(NON_TAX_EMPTION_I_Y22        , 0 )                   AS NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P1_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P1_NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P2_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P2_NON_TAX_EMPTION_I_Y22		
            --20-1.감면소득계
         ,  ISNULL(A.SKILL_DED_I                , 0 ) + 
            ISNULL(A.YOUTH_DED_I_SUM            , 0 ) + 
            ISNULL(A.TAXES_REDU_I               , 0 )                   AS REDUCE_TAX_SUM_I
         ,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P1_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P1_REDUCE_TAX_T20          , 0 )                   AS P1_REDUCE_TAX_SUM_I
         ,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P2_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P2_REDUCE_TAX_T20          , 0 )                   AS P2_REDUCE_TAX_SUM_I

            /*세액명세*/
            --72.결정세액
         ,  ISNULL(A.DEF_IN_TAX_I               , 0 )                   AS DEF_IN_TAX_I      --78.소득세
         ,  ISNULL(A.DEF_LOCAL_TAX_I            , 0 )                   AS DEF_LOCAL_TAX_I   --79.지방소득세
         ,  ISNULL(A.DEF_SP_TAX_I               , 0 )                   AS DEF_SP_TAX_I      --80.농어촌특별세
		    --기납부세액
            --73.종(전)근무지
		 ,  SUBSTRING(B.P1_COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(B.P1_COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(B.P1_COMPANY_NUM, 6, 5)                           AS P1_COMPANY_NUM    --사업자등록번호	 
         ,  ISNULL(B.P1_IN_TAX_I                , 0 )                   AS P1_IN_TAX_I       --78.소득세
         ,  ISNULL(B.P1_LOCAL_TAX_I             , 0 )                   AS P1_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(B.P1_SP_TAX_I                , 0 )                   AS P1_SP_TAX_I		 --80.농어촌특별세
		 ,  SUBSTRING(B.P2_COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(B.P2_COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(B.P2_COMPANY_NUM, 6, 5)                           AS P2_COMPANY_NUM    --사업자등록번호	 
         ,  ISNULL(B.P2_IN_TAX_I                , 0 )                   AS P2_IN_TAX_I		 --78.소득세
         ,  ISNULL(B.P2_LOCAL_TAX_I             , 0 )                   AS P2_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(B.P2_SP_TAX_I                , 0 )                   AS P2_SP_TAX_I		 --80.농어촌특별세
		    --74.주(현)근무지
         ,  ISNULL(A.NOW_IN_TAX_I               , 0 )                   AS NOW_IN_TAX_I      --78.소득세
         ,  ISNULL(A.NOW_LOCAL_TAX_I            , 0 )                   AS NOW_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(A.NOW_SP_TAX_I               , 0 )                   AS NOW_SP_TAX_I		 --80.농어촌특별세
		    --76.차감징수세액
         ,  ISNULL(A.IN_TAX_I                   , 0 )                   AS IN_TAX_I			 --78.소득세
         ,  ISNULL(A.LOCAL_TAX_I                , 0 )                   AS LOCAL_TAX_I		 --79.지방소득세
         ,  ISNULL(A.SP_TAX_I                   , 0 )                   AS SP_TAX_I			 --80.농어촌특별세

            /*정산명세*/
         ,  ISNULL(A.INCOME_SUPP_TOTAL_I        , 0 )                   AS INCOME_SUPP_TOTAL_I --21.총급여액 
         ,  ISNULL(A.INCOME_DED_I               , 0 )                   AS INCOME_DED_I		   --22.근로소득공제
         ,  ISNULL(A.EARN_INCOME_I              , 0 )                   AS EARN_INCOME_I	   --23.근로소득금액
            --기본공제																			
         ,  ISNULL(A.PER_DED_I                  , 0 )                   AS PER_DED_I		   --24.본인
         ,  ISNULL(A.SPOUSE_DED_I               , 0 )                   AS SPOUSE_DED_I		   --25.배우자
         ,  ISNULL(A.SUPP_SUB_I                 , 0 )                   AS SUPP_SUB_I		   --26.부양가족
         ,  ISNULL(A.SUPP_NUM                   , 0 )                   AS SUPP_NUM			   --   (명)
            --추가공제																			
         ,  ISNULL(A.AGED_DED_I                 , 0 )                   AS AGED_DED_I		   --27.경로우대
         ,  ISNULL(A.AGED_NUM                   , 0 )                   AS AGED_NUM			   --   (명)
         ,  ISNULL(A.DEFORM_DED_I               , 0 )                   AS DEFORM_DED_I		   --28.장애인
         ,  ISNULL(A.DEFORM_NUM                 , 0 )                   AS DEFORM_NUM		   --   (명)
         ,  ISNULL(A.WOMAN_DED_I                , 0 )                   AS WOMAN_DED_I		   --29.부녀자
         ,  ISNULL(A.ONE_PARENT_DED_I           , 0 )                   AS ONE_PARENT_DED_I	   --30.한부모가족
            --연금 보험료 공제	
		 ,  ISNULL(F.ANU_I, 0) + ISNULL(F.ANU_ADD_I, 0)                 AS ANU_TARGET_I         --31.국민연금보험료 대상금액																
         ,  ISNULL(A.ANU_DED_I                  , 0 )                   AS ANU_DED_I		    --31.국민연금보험료 공제금액
		 ,  ISNULL(F.PUBLIC_PENS_I				, 0 )                   AS PUBLIC_PENS_TARGET_I --32.가 공적연금보험료공제-공무원연금 대상금액
         ,  ISNULL(A.PUBLIC_PENS_I              , 0 )                   AS PUBLIC_PENS_I	    --32.가 공적연금보험료공제-공무원연금 공제금액
		 ,  ISNULL(F.SOLDIER_PENS_I             , 0 )                   AS SOLDIER_PENS_TARGET_I--   나 공적연금보험료공제-군인연금 대상금액
         ,  ISNULL(A.SOLDIER_PENS_I             , 0 )                   AS SOLDIER_PENS_I	    --   나 공적연금보험료공제-군인연금 공제금액
		 ,  ISNULL(F.SCH_PENS_I                 , 0 )                   AS SCH_PENS_TARGET_I	--   다 공적연금보험료공제-사립학교교직원연금 대상금액
         ,  ISNULL(A.SCH_PENS_I                 , 0 )                   AS SCH_PENS_I			--   다 공적연금보험료공제-사립학교교직원연금 공제금액
		 ,  ISNULL(F.POST_PENS_I                , 0 )                   AS POST_PENS_TARGET_I	--   라 공적연금보험료공제-별정우체국연금 대상금액
         ,  ISNULL(A.POST_PENS_I                , 0 )                   AS POST_PENS_I			--   라 공적연금보험료공제-별정우체국연금 공제금액
            --특별소득공제	
		 ,  ISNULL(F.MED_PREMINM_I, 0) + ISNULL(F.MED_PREMINM_ADD_I, 0) AS MED_PREMINM_TARGET_I --33.가 건강보험료(노인장기요양보험료포함)대상금액 																	
         ,  ISNULL(A.MED_PREMINM_I              , 0 )                   AS MED_PREMINM_I	    --   가 건강보험료(노인장기요양보험료포함)공제금액
		 ,  ISNULL(F.HIRE_INSUR_I, 0)  + ISNULL(F.HIRE_INSUR_ADD_I, 0)  AS HIRE_INSUR_TARGET_I  --   나 고용보험료 대상금액
         ,  ISNULL(A.HIRE_INSUR_I               , 0 )                   AS HIRE_INSUR_I		    --   나 고용보험료 공제금액
         ,  ISNULL(A.HOUS_AMOUNT_I              , 0 )                   AS HOUS_AMOUNT_I	    --34.가 주택임차차입금원리금상환액(대출기관)
         ,  ISNULL(A.HOUS_AMOUNT_I_2            , 0 )                   AS HOUS_AMOUNT_I_2	    --      주택임차차입금원리금상환액(거주자)
         ,  ISNULL(A.MORTGAGE_RETURN_I_2        , 0 )                   AS MORTGAGE_RETURN_I_2  --   나 장기주택저당차입금이자상환액-2011년이전(15년미만)
         ,  ISNULL(A.MORTGAGE_RETURN_I          , 0 )                   AS MORTGAGE_RETURN_I    --      장기주택저당차입금이자상환액-2011년이전(15년~29년)
         ,  ISNULL(A.MORTGAGE_RETURN_I_3        , 0 )                   AS MORTGAGE_RETURN_I_3  --      장기주택저당차입금이자상환액-2011년이전(30년이상)
         ,  ISNULL(A.MORTGAGE_RETURN_I_5        , 0 )                   AS MORTGAGE_RETURN_I_5  --      2012년 이후-고정금리비거치상환대출(1500만원한도)
         ,  ISNULL(A.MORTGAGE_RETURN_I_4        , 0 )                   AS MORTGAGE_RETURN_I_4  --      2012년 이후-그밖의 대출(500만원한도)
         ,  ISNULL(A.MORTGAGE_RETURN_I_6        , 0 )                   AS MORTGAGE_RETURN_I_6  --      2015년 이후-15년이상(고정금리이면서 비거치상환)
         ,  ISNULL(A.MORTGAGE_RETURN_I_7        , 0 )                   AS MORTGAGE_RETURN_I_7  --      2015년 이후-15년이상(고정금리이거나 비거치상환)
         ,  ISNULL(A.MORTGAGE_RETURN_I_8        , 0 )                   AS MORTGAGE_RETURN_I_8  --      2015년 이후-15년이상(그밖의대출)
         ,  ISNULL(A.MORTGAGE_RETURN_I_9        , 0 )                   AS MORTGAGE_RETURN_I_9  --      2015년 이후-10년이상(고정금리이거나 비거치상환)
            --35.기부금(이월분)																	    
         ,  ISNULL(A.GIFT_DED_I                 , 0 )                   AS GIFT_DED_I		    --35.기부금(이월분)
            --36.계
         ,  ISNULL(A.MED_PREMINM_I              , 0 ) +
            ISNULL(A.HIRE_INSUR_I               , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I              , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I_2            , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_2        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I          , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_3        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_5        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_4        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_6        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_7        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_8        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_9        , 0 ) +
            ISNULL(A.GIFT_DED_I                 , 0 )                   AS STD_DED_I_1             --36.계
            --37.차감소득금액																		  -
         ,  ISNULL(A.DED_INCOME_I               , 0 )                   AS DED_INCOME_I			   --37.차감근로소득
            --그밖의소득공제																		
         ,  ISNULL(A.PRIV_PENS_I                , 0 )                   AS PRIV_PENS_I			   --38.개인연금저축소득공제
         ,  ISNULL(A.COMP_PREMINUM_DED_I        , 0 )                   AS COMP_PREMINUM_DED_I	   --39.소기업,소상공인공제부금소득공제
         ,  ISNULL(A.HOUS_BU_AMT                , 0 )                   AS HOUS_BU_AMT			   --40.가 청약저축
         ,  ISNULL(A.HOUS_BU_AMOUNT_I           , 0 )					AS HOUS_BU_AMOUNT_I		   --   나 주택청약종합저축
         ,  ISNULL(A.HOUS_WORK_AMT              , 0 )                   AS HOUS_WORK_AMT		   --   다 근로자주택마련저축
         ,  ISNULL(A.INVESTMENT_DED_I           , 0 )                   AS INVESTMENT_DED_I		   --41.투자조합출자 등
         ,  ISNULL(A.CARD_DED_I                 , 0 )                   AS CARD_DED_I			   --42.신용카드 등 사용액
         ,  ISNULL(A.STAFF_STOCK_DED_I          , 0 )                   AS STAFF_STOCK_DED_I	   --43.우리사주조합출연금
         ,  ISNULL(A.EMPLOY_WORKER_DED_I        , 0 )                   AS EMPLOY_WORKER_DED_I	   --44.고용유지중소기업근로자
         ,  ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS LONG_INVEST_STOCK_DED_I --45.장기집합투자증권저축
         ,  ISNULL(A.PRIV_PENS_I                , 0 ) + 
            ISNULL(A.COMP_PREMINUM_DED_I        , 0 ) +
            ISNULL(A.HOUS_BU_AMT                , 0 ) + 
            ISNULL(A.HOUS_BU_AMOUNT_I           , 0 ) +
            ISNULL(A.HOUS_WORK_AMT              , 0 ) +
            ISNULL(A.INVESTMENT_DED_I           , 0 ) +
            ISNULL(A.CARD_DED_I                 , 0 ) +
            ISNULL(A.STAFF_STOCK_DED_I          , 0 ) +  
            ISNULL(A.EMPLOY_WORKER_DED_I        , 0 ) +
            ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS ETC_INCOME_DED_I       --46.그밖의소득공제계                       
            --특별공제종합한도초과액																	
         ,  ISNULL(A.OVER_INCOME_DED_LMT        , 0 )                   AS OVER_INCOME_DED_LMT	  --47.소득공제 종합한도 초과액
            --종합소득과세표준																			
         ,  ISNULL(A.TAX_STD_I                  , 0 )                   AS TAX_STD_I			  --48.종합소득과세표준
            --산출세액																				 
         ,  ISNULL(A.COMP_TAX_I                 , 0 )                   AS COMP_TAX_I			  --49.산출세액
            --세액감면																								  
         ,  ISNULL(A.INCOME_REDU_I              , 0 )                   AS INCOME_REDU_I		  --50.소득세법
         ,  ISNULL(A.SKILL_DED_I                , 0 )                   AS SKILL_DED_I2			  --51.조세특례제한법(52제외)- 외국인기술공제
         ,  ISNULL(A.YOUTH_DED_I                , 0 )					AS YOUTH_DED_I2			  --52.조세특례제한법 제30조 - 중소기업청년소득세감면금액
		 ,  ISNULL(A.TAXES_REDU_I               , 0 )                   AS TAXES_REDU_I		      --53.조세조약
																								  --54.세액감면계(레포트에서계산)																					  											  
         ,  ISNULL(A.IN_TAX_DED_I               , 0 )                   AS IN_TAX_DED_I			  --55.근로소득 
         ,  ISNULL(A.CHILD_TAX_DED_I            , 0 )                   AS CHILD_TAX_DED_I		  --56.자녀-공제대상자녀
         ,  ISNULL(A.MANY_CHILD_NUM             , 0 )                   AS MANY_CHILD_NUM		  --        (명)
         ,  ISNULL(A.BIRTH_ADOPT_I              , 0 )                   AS BIRTH_ADOPT_I		  --   자녀-출산입양자
         ,  ISNULL(A.BIRTH_ADOPT_NUM            , 0 )                   AS BIRTH_ADOPT_NUM		  --        (명)
         --(연금계좌소득공제)																		  
         ,  ISNULL(A.SCI_DEDUC_I                , 0 )                   AS SCI_DEDUC_I			  --57.(공제대상)과학기술인공제
         ,  ISNULL(A.SCI_TAX_DED_I              , 0 ) +											  
            ISNULL(A.SCI_TAX_DED_I1             , 0 )                   AS SCI_TAX_DED_I		  --   (세액공제)과학기술인공제
         ,  ISNULL(A.RETIRE_PENS_I              , 0 )                   AS RETIRE_PENS_I		  --58.(공제대상)근로자퇴직급여보장법
         ,  ISNULL(A.RETIRE_TAX_DED_I           , 0 ) +											  
            ISNULL(A.RETIRE_TAX_DED_I1          , 0 )                   AS RETIRE_TAX_DED_I		  --   (세액공제)과학기술인공제
         ,  ISNULL(A.PENS_I                     , 0 )                   AS PENS_I				  --59.(공제대상)연금저축
         ,  ISNULL(A.PENS_TAX_DED_I1            , 0 ) +											  
            ISNULL(A.PENS_TAX_DED_I             , 0 )                   AS PENS_TAX_DED_I1		  --   (세액공제)연금저축
            --특별세액공제																			  
         ,  ISNULL(A.ETC_INSUR_I                , 0 )                   AS ETC_INSUR_I			  --60.(공제대상)보장성보험
         ,  ISNULL(A.ETC_INSUR_TAX_DED_I        , 0 )                   AS ETC_INSUR_TAX_DED_I	  --   (세액공제)보장성보험
         ,  ISNULL(A.DEFORM_INSUR_I             , 0 )                   AS DEFORM_INSUR_I		  --   (공제대상)장애인전용보장성보험
         ,  ISNULL(A.DEFORM_INSUR_TAX_DED_I     , 0 )                   AS DEFORM_INSUR_TAX_DED_I --   (세액공제)장애인전용보장성보험
         ,  ISNULL(A.MED_DED_I                  , 0 )                   AS MED_DED_I			  --61.(공제대상)의료비
         ,  ISNULL(A.MED_TAX_DED_I              , 0 )                   AS MED_TAX_DED_I		  --   (세액공제)의료비
         ,  ISNULL(A.EDUC_DED_I                 , 0 )                   AS EDUC_DED_I			  --62.(공제대상)교육비
         ,  ISNULL(A.EDUC_TAX_DED_I             , 0 )                   AS EDUC_TAX_DED_I		  --   (세액공제)교육비
         ,  ISNULL(A.POLICY_INDED_DED_AMT       , 0 )                   AS POLICY_INDED_DED_AMT	  --63.가 (공제대상)정치자금기부금-10만원이하
         ,  ISNULL(A.POLICY_INDED_TAX_DED_I     , 0 )                   AS POLICY_INDED_TAX_DED_I --      (세액공제)정치자금기부금-10만원이하
         ,  ISNULL(A.POLICY_GIFT_DED_AMT        , 0 )                   AS POLICY_GIFT_DED_AMT	  --      (공제대상)정치자금기부금-10만원초과
         ,  ISNULL(A.POLICY_GIFT_TAX_DED_I      , 0 )                   AS POLICY_GIFT_TAX_DED_I  --      (세액공제)정치자금기부금-10만원초과
         ,  ISNULL(A.LEGAL_DED_AMT              , 0 )                   AS LEGAL_DED_AMT		  --   나 (공제대상)법정기부금
         ,  ISNULL(A.LEGAL_GIFT_TAX_DED_I       , 0 )                   AS LEGAL_GIFT_TAX_DED_I	  --      (세액공제)법정기부금
         ,  ISNULL(A.STAFF_DED_AMT              , 0 )                   AS STAFF_DED_AMT		  --   다 (공제대상)우리사주조합기부금
         ,  ISNULL(A.STAFF_GIFT_TAX_DED_I       , 0 )                   AS STAFF_GIFT_TAX_DED_I	  --      (세액공제)우리사주조합기부금
         ,  CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0 												  
                 ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT 			 
                            THEN (CASE WHEN A.APPOINT_GIFT_TAX_DED_I = 0 THEN 0 ELSE A.APPOINT_ASS_TAX_DED_AMT END)	 
                            ELSE A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I										     
                       END)																							 
            END                                                         AS APPOINT_ASS_TAX_DED_AMT --   라 (공제대상)지정기부금(종교단체외)
         , ISNULL(A.APPOINT_GIFT_TAX_DED_I, 0)                          AS APPOINT_GIFT_TAX_DED_I  --      (세액공제)지정기부금(종교단체외)
         , CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0 																	   
                ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT 			   
                           THEN 0
                           ELSE (CASE WHEN A.ASS_GIFT_TAX_DED_I = 0 THEN 0 
                                      ELSE A.APPOINT_ASS_TAX_DED_AMT - (A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I) 
                                 END) 
                      END)
           END                                                         AS APPOINT_ASS_TAX_DED_AMT2 --  마 (공제대상) 지정기부금(종교단체)
         , ISNULL(A.ASS_GIFT_TAX_DED_I, 0)                             AS APPOINT_GIFT_TAX_DED_I2  --     (세액공제) 지정기부금(종교단체)           
         ,  ISNULL(A.STD_TAX_DED_I              , 0 )                   AS STD_TAX_DED_I           --65.표준세액공제         
         ,  ISNULL(A.NAP_TAX_DED_I              , 0 )                   AS NAP_TAX_DED_I		   --66.납세조합공제
         ,  ISNULL(A.HOUS_INTER_I               , 0 )                   AS HOUS_INTER_I			   --67.주택차입금
         ,  ISNULL(A.OUTSIDE_INCOME_I           , 0 )                   AS OUTSIDE_INCOME_I        --68.외국납부
         , (CASE WHEN ISNULL(F.MON_RENT_I, 0) &gt;= 7500000 THEN 7500000
                 ELSE ISNULL(F.MON_RENT_I, 0)
            END)                                                        AS MON_RENT_I_1             --69.(공제대상)월세액
         , ISNULL(A.MON_RENT_I                  , 0 )                   AS MON_RENT_I_2             --   (세액공제)월세액

         /*부양가족 소득공제 명세 합계*/
         ,  I.SUPP_CNT
		 --보험료
		 ,  ISNULL(A.MED_PREMINM_I             , 0 )				   AS SUPP_TOT_INSUR1        --(기타)건강
         ,  ISNULL(A.HIRE_INSUR_I              , 0 )                   AS SUPP_TOT_INSUR2        --(기타)고용
         ,  ISNULL(I.SUPP_TOT_ETC_INSUR1       , 0 )                   AS SUPP_TOT_ETC_INSUR1	 --(국세청)보장성 
		 ,  ISNULL(I.SUPP_TOT_ETC_INSUR2       , 0 )                   AS SUPP_TOT_ETC_INSUR2	 --(기타) 보장성 
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR1    , 0 )                   AS SUPP_TOT_DEFORM_INSUR1 --(국세청)장애인전용보장성         
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR2    , 0 )                   AS SUPP_TOT_DEFORM_INSUR2 --(기타)장애인전용보장성
		 --의료비
         ,  ISNULL(I.SUPP_TOT_MED1             , 0 )                   AS SUPP_TOT_MED1          --(국세청)일반 
		 ,  ISNULL(I.SUPP_TOT_MED2             , 0 )                   AS SUPP_TOT_MED2		     --(기타)  일반
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED1     , 0 )                   AS SUPP_TOT_SURGERY_MED1  --(국세청)난임    
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED2     , 0 )                   AS SUPP_TOT_SURGERY_MED2  --(기타)  난임   
		 ,  ISNULL(I.SUPP_TOT_DEFORM_MED1      , 0 )                   AS SUPP_TOT_DEFORM_MED1   --(국세청)장애인/건보산정특례    
         ,  ISNULL(I.SUPP_TOT_DEFORM_MED2      , 0 )                   AS SUPP_TOT_DEFORM_MED2   --(기타)  장애인/건보산정특례
		 --교육비   
         ,  ISNULL(I.SUPP_TOT_EDU1             , 0 )                   AS SUPP_TOT_EDU1          --(국세청)일반
         ,  ISNULL(I.SUPP_TOT_EDU2             , 0 )                   AS SUPP_TOT_EDU2			 --(기타)  일반
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU1	   , 0 )				   AS SUPP_TOT_DEFORM_EDU1   --(국세청)장애인특수교육
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU2	   , 0 )				   AS SUPP_TOT_DEFORM_EDU2   --(기타)  장애인특수교육
		 --신용카드등 사용액
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CARD1,0) END 
		    + ISNULL(I.SUPP_TOT_CARD1            , 0 )    		       AS SUPP_TOT_CARD1          --(국세청)신용카드
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CARD2,0) END 
		    + ISNULL(I.SUPP_TOT_CARD2            , 0 )                 AS SUPP_TOT_CARD2		  --(기타)  신용카드
		 ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CASH1,0) END 
		    + ISNULL(I.SUPP_TOT_CASH1            , 0 )                 AS SUPP_TOT_CASH1		  --(국세청)현금영수증
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_DEBIT1,0) END 
		    + ISNULL(I.SUPP_TOT_DEBIT1           , 0 )                 AS SUPP_TOT_DEBIT1         --(국세청)직불카드 등
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_DEBIT2,0) END 
		    + ISNULL(I.SUPP_TOT_DEBIT2           , 0 )                 AS SUPP_TOT_DEBIT2         --(기타)  직불카드 등		
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(I.BOOK_CONCERT_CARD1,0) + 
															ISNULL(I.BOOK_CONCERT_CASH1,0) + 
															ISNULL(I.BOOK_CONCERT_DEBIT1,0) ELSE 0 END AS SUPP_TOT_BOOK1 --(국세청)도서공연사용분
		 ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(I.BOOK_CONCERT_CARD2,0) + 
															ISNULL(I.BOOK_CONCERT_CASH2,0) + 
															ISNULL(I.BOOK_CONCERT_DEBIT2,0) ELSE 0 END AS SUPP_TOT_BOOK2 --(기타)  도서공연사용분
         ,  ISNULL(I.SUPP_TOT_TRA1             , 0 )                   AS SUPP_TOT_TRA1          --(국세청)전통시장사용분
         ,  ISNULL(I.SUPP_TOT_TRA2             , 0 )                   AS SUPP_TOT_TRA2          --(기타)  전통시장사용분
         ,  ISNULL(I.SUPP_TOT_TRAFFIC1         , 0 )                   AS SUPP_TOT_TRAFFIC1      --(국세청)대중교통이용분
         ,  ISNULL(I.SUPP_TOT_TRAFFIC2         , 0 )                   AS SUPP_TOT_TRAFFIC2      --(기타)  대중교통이용분
         ,  ISNULL(I.SUPP_TOT_GIFT1            , 0 )                   AS SUPP_TOT_GIFT1         --(국세청)기부금
         ,  ISNULL(I.SUPP_TOT_GIFT2            , 0 )                   AS SUPP_TOT_GIFT2         --(기타)  기부금
         --,  ISNULL(J.ANU_AMOUNT_I               , 0 )                   AS ANU_AMOUNT_I
         --,  ISNULL(J.MED_AMOUNT_I               , 0 )                   AS MED_AMOUNT_I
         --,  ISNULL(J.HIR_AMOUNT_I               , 0 )                   AS HIR_AMOUNT_I
         , ISNULL(I.DEFAULT_DED_SUM            , 0 )				   AS DEFAULT_DED_SUM     
		 , ISNULL(A.MANY_CHILD_NUM		       , 0 )				   AS MANY_CHILD_DED_SUM
		 , ISNULL(I.WOMAN_DED_SUM			   , 0 )				   AS WOMAN_DED_SUM		
		 , ISNULL(I.ONE_PARENT_DED_SUM		   , 0 )				   AS ONE_PARENT_DED_SUM
		 , ISNULL(I.OLD_DED_SUM				   , 0 )				   AS OLD_DED_SUM		
		 , ISNULL(I.BIRTH_ADOPT_DED_SUM		   , 0 )				   AS BIRTH_ADOPT_DED_SUM
    FROM              HAD600T AS A   WITH (NOLOCK)
           INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                  AND D.PERSON_NUMB    = A.PERSON_NUMB
           INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                  AND C.DIV_CODE       = D.SECT_CODE
           INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
           LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                  AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND F.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                  AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND B.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HPA600T AS G   WITH (NOLOCK) ON G.COMP_CODE      = A.COMP_CODE
                                                  AND G.PAY_YYYYMM  LIKE A.YEAR_YYYY + '%'
                                                  AND G.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD700T AS H   WITH (NOLOCK) ON H.COMP_CODE      = A.COMP_CODE
                                                  AND H.SUPP_DATE   LIKE A.YEAR_YYYY + '%'
                                                  AND H.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT COMP_CODE
                           , YEAR_YYYY
                           , PERSON_NUMB
                           , COUNT(DISTINCT unilite.fnCipherDecrypt(REPRE_NUM, '')) AS SUPP_CNT
						   --국세청
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(MED_USE_I, 0)          ELSE 0 END)                                     AS SUPP_TOT_MED1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SURGERY_MED_I , 0)     ELSE 0 END)                                     AS SUPP_TOT_SURGERY_MED1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SERIOUS_SICK_MED_I, 0) ELSE 0 END)                                     AS SUPP_TOT_DEFORM_MED1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(EDU_USE_I           + FIELD_EDUC_I + 
						                                           EDU_PRINCIPAL_RTN_I + UNIFORM_USE_I, 0)         ELSE 0 END)            AS SUPP_TOT_EDU1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEFORM_EDU_USE_I, 0)  ELSE 0 END)                                      AS SUPP_TOT_DEFORM_EDU1					
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CARD1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CASH1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_DEBIT1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I , 0) ELSE 0 END) AS BOOK_CONCERT_CARD1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I, 0) ELSE 0 END) AS BOOK_CONCERT_DEBIT1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I , 0) ELSE 0 END) AS BOOK_CONCERT_CASH1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_TRA1 
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END)	AS SUPP_TOT_TRAFFIC1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_GIFT1
						   --기타
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(MED_USE_I, 0)          ELSE 0 END)                                     AS SUPP_TOT_MED2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SURGERY_MED_I , 0)     ELSE 0 END)                                     AS SUPP_TOT_SURGERY_MED2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SERIOUS_SICK_MED_I, 0) ELSE 0 END)                                     AS SUPP_TOT_DEFORM_MED2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(EDU_USE_I           + FIELD_EDUC_I  + 
						                                           EDU_PRINCIPAL_RTN_I + UNIFORM_USE_I, 0)         ELSE 0 END)		      AS SUPP_TOT_EDU2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEFORM_EDU_USE_I, 0)  ELSE 0 END)									  AS SUPP_TOT_DEFORM_EDU2	
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CARD2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CASH2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_DEBIT2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I , 0) ELSE 0 END) AS BOOK_CONCERT_CARD2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I, 0) ELSE 0 END) AS BOOK_CONCERT_DEBIT2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I , 0) ELSE 0 END) AS BOOK_CONCERT_CASH2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_TRA2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END)	AS SUPP_TOT_TRAFFIC2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_GIFT2
                           --인적공제수
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN DEFAULT_DED_YN     = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS DEFAULT_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN MANY_CHILD_DED_YN  = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS MANY_CHILD_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN WOMAN_DED_YN       = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS WOMAN_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN ONE_PARENT_DED_YN  = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS ONE_PARENT_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN OLD_DED_YN         = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS OLD_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN BIRTH_ADOPT_DED_YN = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS BIRTH_ADOPT_DED_SUM	
                      FROM   HAD430T WITH (NOLOCK)
                      WHERE  COMP_CODE = @COMP_CODE
                      AND    YEAR_YYYY = @YEAR_YYYY
                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
                      )       AS I                 ON I.COMP_CODE      = A.COMP_CODE
                                                  AND I.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND I.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT X.COMP_CODE
                           , X.YEAR_YYYY
                           , X.PERSON_NUMB
						   --국외근로
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_M01
						   --야간근로수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P1_NON_TAX_EMPTION_I   ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P2_NON_TAX_EMPTION_I   ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_O01
						   --출산보육수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Q01
						   --연구보조비
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_4
						   --비과세학자금
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_5
						   --취재수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_6
						   --그밖의제출수당
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04') THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04') THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04') THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_19
						   --수련보조수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Y22
						   --외국인기술자
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T01
						   --청년세액감면
                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T10
                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T10
						   --조세조약
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T20
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T20
                      FROM  (
                            -- 연말정산비과세소득
                            SELECT A.COMP_CODE
                                 , A.YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.NON_TAX_EMPTION_I   , 0)) AS NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0)) AS P1_NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS P2_NON_TAX_EMPTION_I
                            FROM   HAD610T   A WITH (NOLOCK)
                            WHERE  A.COMP_CODE = @COMP_CODE
                            AND    A.YEAR_YYYY = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                            UNION  ALL

                            -- 주식매수선택권행사이익 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)			 AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA810T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                            UNION ALL

                            -- 우리사주조합인출금 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)             AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA820T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                            ) X
                      GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                      )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                  AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND L.PERSON_NUMB    = A.PERSON_NUMB
           --LEFT  JOIN (
           --             SELECT A.COMP_CODE
           --                  , LEFT(A.PAY_YYYYMM, 4) AS PAY_YYYY
           --                  , A.PERSON_NUMB
           --                  , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE)  =  'ANU'                THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)  AS ANU_AMOUNT_I
           --                  , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE) IN ('MED', 'RME', 'LCI') THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)  AS MED_AMOUNT_I
           --                  , SUM(CASE WHEN ISNULL(B.REF_CODE4, A.DED_CODE)  =  'HIR'                THEN ISNULL(DED_AMOUNT_I, 0) ELSE 0 END)
           --                  + ISNULL(C.HIR_TAX_I, 0)                                                                                           AS HIR_AMOUNT_I
           --             FROM   HPA400T A WITH (NOLOCK)
           --                    LEFT  JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
           --                                                      AND B.MAIN_CODE   = 'H034'
           --                                                      AND B.SUB_CODE    = A.DED_CODE
           --                    LEFT  JOIN (SELECT COMP_CODE
           --                                     , LEFT(PAY_YYYYMM, 4) AS PAY_YYYY
           --                                     , PERSON_NUMB
           --                                     , SUM(ISNULL(HIR_TAX_I, 0)) AS HIR_TAX_I
           --                                FROM   HPA820T WITH (NOLOCK)
           --                                WHERE  COMP_CODE           = @COMP_CODE
           --                                AND    LEFT(PAY_YYYYMM, 4) = @YEAR_YYYY
           --                                GROUP BY COMP_CODE, LEFT(PAY_YYYYMM, 4), PERSON_NUMB
           --                                ) AS C                 ON C.COMP_CODE   = A.COMP_CODE
           --                                                      AND C.PAY_YYYY    = LEFT(A.PAY_YYYYMM, 4)
           --                                                      AND C.PERSON_NUMB = A.PERSON_NUMB
           --             WHERE  A.COMP_CODE           = @COMP_CODE
           --             AND    LEFT(A.PAY_YYYYMM, 4) = @YEAR_YYYY
           --             GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, C.HIR_TAX_I
           --           )       AS J                 ON J.COMP_CODE      = A.COMP_CODE
           --                                       AND J.PAY_YYYY       = A.YEAR_YYYY
           --                                       AND J.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                  AND M1.MAIN_CODE     = 'B012'
                                                  AND M1.SUB_CODE      = D.NATION_CODE
           LEFT  JOIN ABA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = @COMP_CODE
                                                  AND M2.BASE_CODE     = '01'
           
    WHERE  A.COMP_CODE = @COMP_CODE
    AND    A.YEAR_YYYY = @YEAR_YYYY
   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND D.SECT_CODE = #{DIV_CODE}
    </if>
	
	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       AND A.HALFWAY_TYPE = #{RETR_TYPE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
       AND D.PAY_CODE  = #{PAY_CODE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
       AND D.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
       AND A.PERSON_NUMB = #{PERSON_NUMB}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       AND D.DEPT_CODE &gt;= #{FR_DEPT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
	</if>
      
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
          AND ((G.pay_yyyymm &gt;= #{PAYFRYYMM}) OR (LEFT(H.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
          AND ((G.pay_yyyymm &lt;= #{PAYTOYYMM})
          OR (LEFT(H.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
    	AND    D.RETR_DATE     &gt;= #{FRRETIREDATE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
    	AND    D.RETR_DATE     &lt;= #{TORETIREDATE}
    </if>
    
    ORDER BY D.DIV_CODE, D.DEPT_CODE, D.POST_CODE, D.NAME, A.PERSON_NUMB
END
	</select>

	<select id="had840rkrServiceImpl.selectList2018_Query2" parameterType="Map" resultType="rMap">
		--had840rkr.Chad840rkr[fnHad840nQ2015] Query2
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2018_1'))
		        DROP TABLE #HAD430T2018_1
		
		    SELECT A.YEAR_YYYY   AS YEAR_YYYY1
		         , A.PERSON_NUMB AS PERSON_NUMB1
		         , A.IN_FORE     AS IN_FORE1
		         , A.REL_CODE    AS REL_CODE1
		         , A.FAMILY_NAME AS FAMILY_NAME1
		         , unilite.fnCipherDecrypt(A.REPRE_NUM, '') AS REPRE_NUM1 
		         , CASE WHEN ISNULL(A.DEFAULT_DED_YN    , '') = 'Y' THEN '○' ELSE '' END AS DEFAULT_DED_YN1     --기본공제YN
		         , CASE WHEN ISNULL(A.WOMAN_DED_YN      , '') = 'Y' THEN '○' ELSE '' END AS WOMAN_DED_YN1       --부녀자YN
		         , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS ONE_PARENT_DED_YN1  --한부모YN
		         , CASE WHEN ISNULL(A.OLD_DED_YN        , '') = 'Y' THEN '○' ELSE '' END AS OLD_DED_YN1         --경로우대YN
		         , CASE WHEN ISNULL(A.DEFORM_DED_YN     , '') = 'Y' THEN '○' ELSE '' END AS DEFORM_DED_YN1      --장애인YN
		         , ISNULL(A.DEFORM_KIND_CODE,'')                                          AS DEFORM_KIND_CODE1   --장애인코드
		         , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BIRTH_ADOPT_DED_YN1 --출산입양YN
		         , CASE WHEN ISNULL(A.MANY_CHILD_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS MANY_CHILD_DED_YN1  --자녀YN
		         , A.SEQ_NUM                                                              AS SEQ_NUM1            --자료구분
		         , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.MED_PREMINM_I  , 0)
		                ELSE 0
		            END                                                                  AS MED_PREMINM_I1       --건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.HIRE_INSUR_I, 0)
		                ELSE 0
		            END                                                                  AS HIRE_INSUR_I1        --고용보험료
		         , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '2' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS ETC_USE_I1           --보장성보험료
		         , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '1' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS DEFORM_USE_I1        --장애인전용보장성보험료
		         , ISNULL(A.MED_USE_I          , 0)                                      AS MED_USE_I1           --일반의료비
				 , ISNULL(A.SURGERY_MED_I      , 0)                                      AS SURGERY_MED_I1       --난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I , 0)                                      AS SERIOUS_SICK_MED_I1  --장애인/건보산정특례자
		         , ISNULL(A.EDU_USE_I           + A.FIELD_EDUC_I +
				          A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I, 0)                    AS EDU_USE_I1           --일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I   , 0)                                      AS DEFORM_EDU_USE_I1    --장애인특수교육비
		         , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CARD_I, 0)  END +
				   ISNULL(A.CARD_USE_I         , 0)                                      AS CARD_USE_I1          --신용카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CASH_I, 0)  END +
		           ISNULL(A.CASH_USE_I         , 0)                                      AS CASH_USE_I1          --현금영수증
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_DEBIT_I, 0) END +
		           ISNULL(A.DEBIT_CARD_USE_I   , 0)                                      AS DEBIT_CARD_USE_I1    --직불카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(A.BOOK_CONCERT_CARD_I, 0) +
				                                                    ISNULL(A.BOOK_CONCERT_CASH_I, 0) + 
																	ISNULL(A.BOOK_CONCERT_DEBIT_I, 0)
															   ELSE 0 END				 AS BOOK_CONCERT_USE_I1  --도서공연사용분
		         , ISNULL(A.TRA_MARKET_USE_I   , 0)                                      AS TRA_MARKET_USE_I1    --전통시장사용분
		         , ISNULL(A.TRAFFIC_USE_I      , 0)                                      AS TRAFFIC_USE_I1       --대중교통이용분
		         , ISNULL(A.GIFT_USE_I         , 0)                                      AS GIFT_USE_I1          --기부금
		    INTO   #HAD430T2018_1
		    FROM              HAD430T A  WITH (NOLOCK)
		           INNER JOIN HUM100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.PERSON_NUMB = A.PERSON_NUMB
		           INNER JOIN HAD600T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                              AND M2.YEAR_YYYY   = A.YEAR_YYYY
		                                              AND M2.PERSON_NUMB = A.PERSON_NUMB
			
			WHERE  A.COMP_CODE       = #{S_COMP_CODE}
		    AND    A.YEAR_YYYY       = #{YEAR_YYYY}
		    AND    A.SEQ_NUM         = '1'
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND    M1.SECT_CODE = #{DIV_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			    AND    M1.DEPT_CODE = #{TREE_CD}
				</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			    AND    M2.HALFWAY_TYPE = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			    AND    M1.PAY_CODE  = #{PAY_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			    AND    M1.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND    A.PERSON_NUMB = #{PERSON_NUMB}
			</if>
		
		
		
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2018_2'))
		        DROP TABLE #HAD430T2018_2
		
		    SELECT A.YEAR_YYYY   AS YEAR_YYYY2
		         , A.PERSON_NUMB AS PERSON_NUMB2
		         , A.IN_FORE     AS IN_FORE2
		         , A.REL_CODE    AS REL_CODE2
		         , A.FAMILY_NAME AS FAMILY_NAME2
		         , unilite.fnCipherDecrypt(A.REPRE_NUM, '') AS REPRE_NUM2 
		         , CASE WHEN ISNULL(A.DEFAULT_DED_YN    , '') = 'Y' THEN '○' ELSE '' END AS DEFAULT_DED_YN2     --기본공제YN
		         , CASE WHEN ISNULL(A.WOMAN_DED_YN      , '') = 'Y' THEN '○' ELSE '' END AS WOMAN_DED_YN2       --부녀자YN
		         , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS ONE_PARENT_DED_YN2  --한부모YN
		         , CASE WHEN ISNULL(A.OLD_DED_YN        , '') = 'Y' THEN '○' ELSE '' END AS OLD_DED_YN2         --경로우대YN
		         , CASE WHEN ISNULL(A.DEFORM_DED_YN     , '') = 'Y' THEN '○' ELSE '' END AS DEFORM_DED_YN2      --장애인YN
		         , ISNULL(A.DEFORM_KIND_CODE,'')                                          AS DEFORM_KIND_CODE2   --장애인코드
		         , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BIRTH_ADOPT_DED_YN2 --출산입양YN
		         , CASE WHEN ISNULL(A.MANY_CHILD_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS MANY_CHILD_DED_YN2  --자녀YN
		         , A.SEQ_NUM                                                              AS SEQ_NUM2            --자료구분
		         , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.MED_PREMINM_I  , 0)
		                ELSE 0
		            END                                                                  AS MED_PREMINM_I2       --건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.HIRE_INSUR_I, 0)
		                ELSE 0
		            END                                                                  AS HIRE_INSUR_I2        --고용보험료
		         , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '2' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS ETC_USE_I2           --보장성보험료
		         , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '1' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS DEFORM_USE_I2        --장애인전용보장성보험료
		         , ISNULL(A.MED_USE_I          , 0)                                      AS MED_USE_I2           --일반의료비
				 , ISNULL(A.SURGERY_MED_I      , 0)                                      AS SURGERY_MED_I2       --난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I , 0)                                      AS SERIOUS_SICK_MED_I2  --장애인/건보산정특례자
		         , ISNULL(A.EDU_USE_I           + A.FIELD_EDUC_I +
				          A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I, 0)                    AS EDU_USE_I2           --일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I   , 0)                                      AS DEFORM_EDU_USE_I2    --장애인특수교육비
		         , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CARD_I, 0)  END +
				   ISNULL(A.CARD_USE_I         , 0)                                      AS CARD_USE_I2          --신용카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CASH_I, 0)  END +
		           ISNULL(A.CASH_USE_I         , 0)                                      AS CASH_USE_I2          --현금영수증
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_DEBIT_I, 0) END +
		           ISNULL(A.DEBIT_CARD_USE_I   , 0)                                      AS DEBIT_CARD_USE_I2    --직불카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(A.BOOK_CONCERT_CARD_I, 0) +
				                                                    ISNULL(A.BOOK_CONCERT_CASH_I, 0) + 
																	ISNULL(A.BOOK_CONCERT_DEBIT_I, 0)
															   ELSE 0 END				 AS BOOK_CONCERT_USE_I2  --도서공연사용분
		         , ISNULL(A.TRA_MARKET_USE_I   , 0)                                      AS TRA_MARKET_USE_I2    --전통시장사용분
		         , ISNULL(A.TRAFFIC_USE_I      , 0)                                      AS TRAFFIC_USE_I2       --대중교통이용분
		         , ISNULL(A.GIFT_USE_I         , 0)                                      AS GIFT_USE_I2          --기부금
		    INTO   #HAD430T2018_2
		    FROM              HAD430T A  WITH (NOLOCK)
		           INNER JOIN HUM100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.PERSON_NUMB = A.PERSON_NUMB
		           INNER JOIN HAD600T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                              AND M2.YEAR_YYYY   = A.YEAR_YYYY
		                                              AND M2.PERSON_NUMB = A.PERSON_NUMB
		    WHERE  A.COMP_CODE       = #{S_COMP_CODE}
		    AND    A.YEAR_YYYY       = #{YEAR_YYYY}
		    AND    A.SEQ_NUM         = '2'
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND    M1.SECT_CODE = #{DIV_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			    AND    M1.DEPT_CODE = #{TREE_CD}
				</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			    AND    M2.HALFWAY_TYPE = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			    AND    M1.PAY_CODE  = #{PAY_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			    AND    M1.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND    A.PERSON_NUMB = #{PERSON_NUMB}
			</if>
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    SELECT A.*, B.*
		    FROM              #HAD430T2018_1 A 
			       INNER JOIN #HAD430T2018_2 B ON A.YEAR_YYYY1 = B.YEAR_YYYY2
				                              AND A.PERSON_NUMB1 = B.PERSON_NUMB2
											  AND A.REPRE_NUM1   = B.REPRE_NUM2
		    ORDER  BY A.PERSON_NUMB1, A.REL_CODE1, A.REPRE_NUM1, A.SEQ_NUM1
			   
		END
	</select>
	
<select id="had840rkrServiceImpl.selectList2019_Query1" parameterType="Map" resultType="rMap">
BEGIN
    DECLARE @COMP_CODE              NVARCHAR(08)
          , @YEAR_YYYY              NVARCHAR(04)
          , @REPORT_GBN             NVARCHAR(01)

--  1. 변수 값 할당 ----------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @YEAR_YYYY          = #{YEAR_YYYY}
    SET @REPORT_GBN         = #{OUTPUT}

--  2. 조회 ------------------------------------------------------------------------------------------------------
    SELECT  DISTINCT
            CASE WHEN ISNULL(D.LIVE_GUBUN, '') = '' THEN '1'
                 ELSE D.LIVE_GUBUN
            END                                                         AS LIVE_GUBUN           --거주구분
         ,  ISNULL(A.FORE_SINGLE_YN        , 'N')                       AS FORE_SINGLE_YN       --외국인단일세율적용
         ,  ISNULL(A.FOREIGN_DISPATCH_YN   , 'N')                       AS FOREIGN_DISPATCH_YN  --외국법인소속파견근로자여부
         ,  D.NATION_CODE
         ,  ISNULL(M1.CODE_NAME            , '')                        AS NATION_NAME    --국적
		 ,  D.LIVE_CODE
		 ,  ISNULL(M3.CODE_NAME            , '')                        AS LIVE_NAME      --거주지국
         ,  A.HOUSEHOLDER_YN                                            AS HOUSEHOLDER_YN --세대주여부
         ,  A.HALFWAY_TYPE                                              AS HALFWAY_TYPE   --연말정산구분(Y:중도퇴사, N:연말정산)

            --징수의무자
         ,  C.DIV_FULL_NAME                                             AS DIV_FULL_NAME --1.법인명(상호)
         ,  C.REPRE_NAME                                                AS REPRE_NAME    --2.대표자(성명)
         ,  SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(C.COMPANY_NUM, 6, 5)                              AS COMPANY_NUM   --3.사업자등록번호
		 ,  ISNULL(M2.TAX_BASE, '0')                                    AS TAX_BASE      --3-1. 사업자단위과세자여부
		 ,  ISNULL(C.SUB_DIV_NUM, '')                                   AS SUB_DIV_NUM   --3-2 종사업장일련번호
         ,  E.COMP_OWN_NO                                               AS COMP_REPRE_NO --4.주민(법인)등록번호
         ,  C.ADDR                                                      AS COMP_KOR_ADDR --5.소재지(주소)

            --소득자
         ,  A.PERSON_NUMB															     --사번
         ,  D.NAME																		 --6.성명
         ,  unilite.fnCipherDecrypt(D.REPRE_NUM, 'A')                   AS REPRE_NUM	 --7.주민(외국인)등록번호
         ,  D.KOR_ADDR                                                  AS KOR_ADDR		 --8.주소
         ,  D.DIV_CODE                                                  AS DIV_CODE      --사업장
         ,  D.DEPT_CODE                                                 AS DEPT_CODE     --부서
         ,  D.POST_CODE                                                 AS POST_CODE     --직위

            /*근무처별소득명세*/
            --근무처명
         ,  ISNULL(B.P1_COMPANY_NAME            , '')                   AS P1_COMPANY_NAME --9.종(전) 근무처명
         ,  ISNULL(B.P2_COMPANY_NAME            , '')                   AS P2_COMPANY_NAME --9.종(전) 근무처명
         ,  ISNULL(F.P3_COMPANY_NAME            , '')                   AS NAP_NAME        --9.납세조합 근무처명
            --사업자등록번호
         ,  ISNULL(B.P1_COMPANY_NUM             , '')                   AS P1_COMPANY_NUM  --10.종(전) 사업자등록번호
         ,  ISNULL(B.P2_COMPANY_NUM             , '')                   AS P2_COMPANY_NUM  --10.종(전) 사업자등록번호
         ,  ISNULL(F.P3_COMPANY_NUM             , '')                   AS P3_COMPANY_NUM  --10.납세조합 사업자등록번호
            --근무기간
         ,  CASE WHEN LEFT(D.JOIN_DATE, 4) = @YEAR_YYYY THEN D.JOIN_DATE
                 ELSE @YEAR_YYYY + '0101'
            END                                                         AS FJOIN_DATE     --11.주(현)근무기간 From
         ,  ISNULL(B.P1_WORKDATE_FR             , '')                   AS P1_WORKDATE_FR --11.종(전)근무기간 From
         ,  ISNULL(B.P2_WORKDATE_FR             , '')                   AS P2_WORKDATE_FR --11.종(전)근무기간 From
         ,  ISNULL(F.P3_WORKDATE_FR             , '')                   AS P3_WORKDATE_FR --11.납세조합 근무기간 From
         ,  CASE WHEN LEFT(A.RETR_DATE, 4) = @YEAR_YYYY THEN A.RETR_DATE
                 ELSE @YEAR_YYYY + '1231'
            END                                                         AS FRETR_DATE     --11.주(현)근무기간 To
         ,  ISNULL(B.P1_WORKDATE_TO             , '')                   AS P1_WORKDATE_TO --11.종(전)근무기간 To                                                            
         ,  ISNULL(B.P2_WORKDATE_TO             , '')                   AS P2_WORKDATE_TO --11.종(전)근무기간 To
         ,  ISNULL(F.P3_WORKDATE_TO             , '')                   AS P3_WORKDATE_TO --11.납세조합 근무기간 To
            --감면기간
         ,  ISNULL(F.NONTAX_FR                  , '')                   AS NONTAX_FR      --12.주(현)감면기한 From
         ,  ISNULL(B.P1_NONTAX_FR               , '')                   AS P1_NONTAX_FR	  --12.종(전)감면기한 From
         ,  ISNULL(B.P2_NONTAX_FR               , '')                   AS P2_NONTAX_FR   --12.종(전)감면기한 From
         ,  ISNULL(F.P3_NONTAX_FR               , '')                   AS P3_NONTAX_FR   --12.납세조합 감면기한 From
         ,  ISNULL(F.NONTAX_TO                  , '')                   AS NONTAX_TO	  --12.주(현)감면기한 To
         ,  ISNULL(B.P1_NONTAX_TO               , '')                   AS P1_NONTAX_TO	  --12.종(전)감면기한 To
         ,  ISNULL(B.P2_NONTAX_TO               , '')                   AS P2_NONTAX_TO	  --12.종(전)감면기한 To
         ,  ISNULL(F.P3_NONTAX_TO               , '')                   AS P3_NONTAX_TO	  --12.납세조합 감면기한 To
            --급여
         ,  ISNULL(A.NOW_PAY_TOT_I              , 0 )                   AS NOW_PAY_TOT_I  --13.주(현)상여
         ,  ISNULL(B.P1_PAY_TOTAL_I             , 0 )                   AS P1_PAY_TOTAL_I --13.종(전)상여
         ,  ISNULL(B.P2_PAY_TOTAL_I             , 0 )                   AS P2_PAY_TOTAL_I --13.종(전)상여
         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 )                   AS NAP_PAY_TOT_I  --13.납세조합 상여
            --상여
         ,  ISNULL(A.NOW_BONUS_TOTAL_I          , 0 )                   AS NOW_BONUS_TOTAL_I   --14.주(현)급여
         ,  ISNULL(B.P1_BONUS_I_TOTAL_I         , 0 )                   AS P1_BONUS_I_TOTAL_I  --14.종(전)급여
         ,  ISNULL(B.P2_BONUS_I_TOTAL_I         , 0 )                   AS P2_BONUS_I_TOTAL_I  --14.종(전)급여
         ,  ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_BONUS_TOTAL_I   --14.납세조합 급여
            --인정상여
         ,  ISNULL(A.NOW_ADD_BONUS_I            , 0 )                   AS NOW_ADD_BONUS_I     --15.주(현)인정상여
         ,  ISNULL(B.P1_ADD_BONUS_I             , 0 )                   AS P1_ADD_BONUS_I      --15.종(전)인정상여
         ,  ISNULL(B.P2_ADD_BONUS_I             , 0 )                   AS P2_ADD_BONUS_I      --15.종(전)인정상여
            --주식매수선택권행사이익
         ,  ISNULL(A.NOW_STOCK_PROFIT_I         , 0 )                   AS NOW_STOCK_PROFIT_I   --15-1.주(현)주식매수선택권행사이익
         ,  ISNULL(B.P1_STOCK_BUY_PROFIT_I      , 0 )                   AS P1_STOCK_BUY_PROFIT_I--15-1.종(전)주식매수선택권행사이익
         ,  ISNULL(B.P2_STOCK_BUY_PROFIT_I      , 0 )                   AS P2_STOCK_BUY_PROFIT_I--15-1.종(전)주식매수선택권행사이익
            --우리사주조합인출금
         ,  ISNULL(A.NOW_OWNER_STOCK_DRAW_I     , 0 )                   AS NOW_STOCK_DRAW_I      --15-2.주(현)우리사주조합인출금
         ,  ISNULL(B.P1_OWNER_STOCK_DRAW_I      , 0 )                   AS P1_OWNER_STOCK_DRAW_I --15-2.종(전)우리사주조합인출금
         ,  ISNULL(B.P2_OWNER_STOCK_DRAW_I      , 0 )                   AS P2_OWNER_STOCK_DRAW_I --15-2.종(전)우리사주조합인출금
            --임원퇴직소득금액한도초과액
         ,  ISNULL(A.NOW_OF_RETR_OVER_I         , 0 )                   AS NOW_OF_RETR_OVER_I  --15-3.주(현)임원퇴직소득금액한도초과액
         ,  ISNULL(B.P1_OF_RETR_OVER_I          , 0 )                   AS P1_OF_RETR_OVER_I   --15-3.종(전)임원퇴직소득금액한도초과액
         ,  ISNULL(B.P2_OF_RETR_OVER_I          , 0 )                   AS P2_OF_RETR_OVER_I   --15-3.종(전)임원퇴직소득금액한도초과액
            --직무발명보상금
		 ,  ISNULL(A.NOW_TAX_INVENTION_I        , 0 )                   AS NOW_TAX_INVENTION_I --15-4.주(현)직무발명보상금
		 ,  ISNULL(B.P1_TAX_INVENTION_I         , 0 )                   AS P1_TAX_INVENTION_I  --15-4.종(전)직무발명보상금 
		 ,  ISNULL(B.P2_TAX_INVENTION_I         , 0 )                   AS P2_TAX_INVENTION_I  --15-4.종(전)직무발명보상금
		    --납세조합 계
         ,  ISNULL(A.NAP_PAY_TOT_I              , 0 ) +
            ISNULL(A.NAP_BONUS_TOTAL_I          , 0 )                   AS NAP_PAY_HAM          --16.납세조합 계

            /*비과세 및 감면소득명세*/
            --18.국외근로
         ,  ISNULL(L.NON_TAX_EMPTION_I_M01      , 0 )                   AS NON_TAX_EMPTION_I_M01    
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_M01   , 0 )                   AS P1_NON_TAX_EMPTION_I_M01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_M01   , 0 )                   AS P2_NON_TAX_EMPTION_I_M01
            --18-1.야간근로수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_O01      , 0 )                   AS NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_O01   , 0 )                   AS P1_NON_TAX_EMPTION_I_O01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_O01   , 0 )                   AS P2_NON_TAX_EMPTION_I_O01
            --18-2.출산보육수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_Q01      , 0 )                   AS NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P1_NON_TAX_EMPTION_I_Q01
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_Q01   , 0 )                   AS P2_NON_TAX_EMPTION_I_Q01
            --18-4.연구보조비
         ,  ISNULL(L.NON_TAX_EMPTION_I_4        , 0 )                   AS NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_4     , 0 )                   AS P1_NON_TAX_EMPTION_I_4
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_4     , 0 )                   AS P2_NON_TAX_EMPTION_I_4
            --18-5.비과세학자금
         ,  ISNULL(L.NON_TAX_EMPTION_I_5        , 0 )                   AS NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_5     , 0 )                   AS P1_NON_TAX_EMPTION_I_5
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_5     , 0 )                   AS P2_NON_TAX_EMPTION_I_5
            --18-6.취재수당
         ,  ISNULL(L.NON_TAX_EMPTION_I_6        , 0 )                   AS NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_6     , 0 )                   AS P1_NON_TAX_EMPTION_I_6
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_6     , 0 )                   AS P2_NON_TAX_EMPTION_I_6
            --그외기재비과세(~)
         ,  ISNULL(L.NON_TAX_EMPTION_I_19       , 0 )                   AS NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P1_NON_TAX_EMPTION_I_19    , 0 )                   AS P1_NON_TAX_EMPTION_I_19
         ,  ISNULL(L.P2_NON_TAX_EMPTION_I_19    , 0 )                   AS P2_NON_TAX_EMPTION_I_19
		    --18-34.중소기업 핵심인력 성과보상기금 
		 ,  ISNULL(NON_TAX_EMPTION_I_T40        , 0 )                   AS NON_TAX_EMPTION_I_T40
         ,  ISNULL(P1_NON_TAX_EMPTION_I_T40     , 0 )                   AS P1_NON_TAX_EMPTION_I_T40
         ,  ISNULL(P2_NON_TAX_EMPTION_I_T40     , 0 )                   AS P2_NON_TAX_EMPTION_I_T40
		    --19.수련보조수당
         ,  ISNULL(NON_TAX_EMPTION_I_Y22        , 0 )                   AS NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P1_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P1_NON_TAX_EMPTION_I_Y22
         ,  ISNULL(P2_NON_TAX_EMPTION_I_Y22     , 0 )                   AS P2_NON_TAX_EMPTION_I_Y22		
            --20-1.감면소득계
         ,  ISNULL(A.SKILL_DED_I                , 0 ) + 
            ISNULL(A.YOUTH_DED_I_SUM            , 0 ) + 
            ISNULL(A.TAXES_REDU_I               , 0 ) -
           (ISNULL(L.P1_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P1_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P1_REDUCE_TAX_T20          , 0 ))-
           (ISNULL(L.P2_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P2_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P2_REDUCE_TAX_T20          , 0 ))                  AS REDUCE_TAX_SUM_I
         ,  ISNULL(L.P1_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P1_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P1_REDUCE_TAX_T20          , 0 )                   AS P1_REDUCE_TAX_SUM_I
         ,  ISNULL(L.P2_REDUCE_TAX_T01          , 0 ) + 
            ISNULL(L.P2_REDUCE_TAX_T10          , 0 ) +
            ISNULL(L.P2_REDUCE_TAX_T20          , 0 )                   AS P2_REDUCE_TAX_SUM_I

            /*세액명세*/
            --72.결정세액
         ,  ISNULL(A.DEF_IN_TAX_I               , 0 )                   AS DEF_IN_TAX_I      --78.소득세
         ,  ISNULL(A.DEF_LOCAL_TAX_I            , 0 )                   AS DEF_LOCAL_TAX_I   --79.지방소득세
         ,  ISNULL(A.DEF_SP_TAX_I               , 0 )                   AS DEF_SP_TAX_I      --80.농어촌특별세
		    --기납부세액
            --73.종(전)근무지
		 ,  SUBSTRING(B.P1_COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(B.P1_COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(B.P1_COMPANY_NUM, 6, 5)                           AS P1_COMPANY_NUM    --사업자등록번호	 
         ,  ISNULL(B.P1_IN_TAX_I                , 0 )                   AS P1_IN_TAX_I       --78.소득세
         ,  ISNULL(B.P1_LOCAL_TAX_I             , 0 )                   AS P1_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(B.P1_SP_TAX_I                , 0 )                   AS P1_SP_TAX_I		 --80.농어촌특별세
		 ,  SUBSTRING(B.P2_COMPANY_NUM, 1, 3) + '-' + 
            SUBSTRING(B.P2_COMPANY_NUM, 4, 2) + '-' + 
            SUBSTRING(B.P2_COMPANY_NUM, 6, 5)                           AS P2_COMPANY_NUM    --사업자등록번호	 
         ,  ISNULL(B.P2_IN_TAX_I                , 0 )                   AS P2_IN_TAX_I		 --78.소득세
         ,  ISNULL(B.P2_LOCAL_TAX_I             , 0 )                   AS P2_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(B.P2_SP_TAX_I                , 0 )                   AS P2_SP_TAX_I		 --80.농어촌특별세
		    --74.주(현)근무지
         ,  ISNULL(A.NOW_IN_TAX_I               , 0 )                   AS NOW_IN_TAX_I      --78.소득세
         ,  ISNULL(A.NOW_LOCAL_TAX_I            , 0 )                   AS NOW_LOCAL_TAX_I	 --79.지방소득세
         ,  ISNULL(A.NOW_SP_TAX_I               , 0 )                   AS NOW_SP_TAX_I		 --80.농어촌특별세
		    --76.차감징수세액
         ,  ISNULL(A.IN_TAX_I                   , 0 )                   AS IN_TAX_I			 --78.소득세
         ,  ISNULL(A.LOCAL_TAX_I                , 0 )                   AS LOCAL_TAX_I		 --79.지방소득세
         ,  ISNULL(A.SP_TAX_I                   , 0 )                   AS SP_TAX_I			 --80.농어촌특별세

            /*정산명세*/
         ,  ISNULL(A.INCOME_SUPP_TOTAL_I        , 0 )                   AS INCOME_SUPP_TOTAL_I --21.총급여액 
         ,  ISNULL(A.INCOME_DED_I               , 0 )                   AS INCOME_DED_I		   --22.근로소득공제
         ,  ISNULL(A.EARN_INCOME_I              , 0 )                   AS EARN_INCOME_I	   --23.근로소득금액
            --기본공제																			
         ,  ISNULL(A.PER_DED_I                  , 0 )                   AS PER_DED_I		   --24.본인
         ,  ISNULL(A.SPOUSE_DED_I               , 0 )                   AS SPOUSE_DED_I		   --25.배우자
         ,  ISNULL(A.SUPP_SUB_I                 , 0 )                   AS SUPP_SUB_I		   --26.부양가족
         ,  ISNULL(A.SUPP_NUM                   , 0 )                   AS SUPP_NUM			   --   (명)
            --추가공제																			
         ,  ISNULL(A.AGED_DED_I                 , 0 )                   AS AGED_DED_I		   --27.경로우대
         ,  ISNULL(A.AGED_NUM                   , 0 )                   AS AGED_NUM			   --   (명)
         ,  ISNULL(A.DEFORM_DED_I               , 0 )                   AS DEFORM_DED_I		   --28.장애인
         ,  ISNULL(A.DEFORM_NUM                 , 0 )                   AS DEFORM_NUM		   --   (명)
         ,  ISNULL(A.WOMAN_DED_I                , 0 )                   AS WOMAN_DED_I		   --29.부녀자
         ,  ISNULL(A.ONE_PARENT_DED_I           , 0 )                   AS ONE_PARENT_DED_I	   --30.한부모가족
            --연금 보험료 공제	
		 ,  ISNULL(F.ANU_I, 0) + ISNULL(F.ANU_ADD_I, 0)                 AS ANU_TARGET_I         --31.국민연금보험료 대상금액																
         ,  ISNULL(A.ANU_DED_I                  , 0 )                   AS ANU_DED_I		    --31.국민연금보험료 공제금액
		 ,  ISNULL(F.PUBLIC_PENS_I				, 0 )                   AS PUBLIC_PENS_TARGET_I --32.가 공적연금보험료공제-공무원연금 대상금액
         ,  ISNULL(A.PUBLIC_PENS_I              , 0 )                   AS PUBLIC_PENS_I	    --32.가 공적연금보험료공제-공무원연금 공제금액
		 ,  ISNULL(F.SOLDIER_PENS_I             , 0 )                   AS SOLDIER_PENS_TARGET_I--   나 공적연금보험료공제-군인연금 대상금액
         ,  ISNULL(A.SOLDIER_PENS_I             , 0 )                   AS SOLDIER_PENS_I	    --   나 공적연금보험료공제-군인연금 공제금액
		 ,  ISNULL(F.SCH_PENS_I                 , 0 )                   AS SCH_PENS_TARGET_I	--   다 공적연금보험료공제-사립학교교직원연금 대상금액
         ,  ISNULL(A.SCH_PENS_I                 , 0 )                   AS SCH_PENS_I			--   다 공적연금보험료공제-사립학교교직원연금 공제금액
		 ,  ISNULL(F.POST_PENS_I                , 0 )                   AS POST_PENS_TARGET_I	--   라 공적연금보험료공제-별정우체국연금 대상금액
         ,  ISNULL(A.POST_PENS_I                , 0 )                   AS POST_PENS_I			--   라 공적연금보험료공제-별정우체국연금 공제금액
            --특별소득공제	
		 ,  ISNULL(F.MED_PREMINM_I, 0) + ISNULL(F.MED_PREMINM_ADD_I, 0) AS MED_PREMINM_TARGET_I --33.가 건강보험료(노인장기요양보험료포함)대상금액 																	
         ,  ISNULL(A.MED_PREMINM_I              , 0 )                   AS MED_PREMINM_I	    --   가 건강보험료(노인장기요양보험료포함)공제금액
		 ,  ISNULL(F.HIRE_INSUR_I, 0)  + ISNULL(F.HIRE_INSUR_ADD_I, 0)  AS HIRE_INSUR_TARGET_I  --   나 고용보험료 대상금액
         ,  ISNULL(A.HIRE_INSUR_I               , 0 )                   AS HIRE_INSUR_I		    --   나 고용보험료 공제금액
         ,  ISNULL(A.HOUS_AMOUNT_I              , 0 )                   AS HOUS_AMOUNT_I	    --34.가 주택임차차입금원리금상환액(대출기관)
         ,  ISNULL(A.HOUS_AMOUNT_I_2            , 0 )                   AS HOUS_AMOUNT_I_2	    --      주택임차차입금원리금상환액(거주자)
         ,  ISNULL(A.MORTGAGE_RETURN_I_2        , 0 )                   AS MORTGAGE_RETURN_I_2  --   나 장기주택저당차입금이자상환액-2011년이전(15년미만)
         ,  ISNULL(A.MORTGAGE_RETURN_I          , 0 )                   AS MORTGAGE_RETURN_I    --      장기주택저당차입금이자상환액-2011년이전(15년~29년)
         ,  ISNULL(A.MORTGAGE_RETURN_I_3        , 0 )                   AS MORTGAGE_RETURN_I_3  --      장기주택저당차입금이자상환액-2011년이전(30년이상)
         ,  ISNULL(A.MORTGAGE_RETURN_I_5        , 0 )                   AS MORTGAGE_RETURN_I_5  --      2012년 이후-고정금리비거치상환대출(1500만원한도)
         ,  ISNULL(A.MORTGAGE_RETURN_I_4        , 0 )                   AS MORTGAGE_RETURN_I_4  --      2012년 이후-그밖의 대출(500만원한도)
         ,  ISNULL(A.MORTGAGE_RETURN_I_6        , 0 )                   AS MORTGAGE_RETURN_I_6  --      2015년 이후-15년이상(고정금리이면서 비거치상환)
         ,  ISNULL(A.MORTGAGE_RETURN_I_7        , 0 )                   AS MORTGAGE_RETURN_I_7  --      2015년 이후-15년이상(고정금리이거나 비거치상환)
         ,  ISNULL(A.MORTGAGE_RETURN_I_8        , 0 )                   AS MORTGAGE_RETURN_I_8  --      2015년 이후-15년이상(그밖의대출)
         ,  ISNULL(A.MORTGAGE_RETURN_I_9        , 0 )                   AS MORTGAGE_RETURN_I_9  --      2015년 이후-10년이상(고정금리이거나 비거치상환)
            --35.기부금(이월분)																	    
         ,  ISNULL(A.GIFT_DED_I                 , 0 )                   AS GIFT_DED_I		    --35.기부금(이월분)
            --36.계
         ,  ISNULL(A.MED_PREMINM_I              , 0 ) +
            ISNULL(A.HIRE_INSUR_I               , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I              , 0 ) +
            ISNULL(A.HOUS_AMOUNT_I_2            , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_2        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I          , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_3        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_5        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_4        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_6        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_7        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_8        , 0 ) +
            ISNULL(A.MORTGAGE_RETURN_I_9        , 0 ) +
            ISNULL(A.GIFT_DED_I                 , 0 )                   AS STD_DED_I_1             --36.계
            --37.차감소득금액																		  -
         ,  ISNULL(A.DED_INCOME_I               , 0 )                   AS DED_INCOME_I			   --37.차감근로소득
            --그밖의소득공제																		
         ,  ISNULL(A.PRIV_PENS_I                , 0 )                   AS PRIV_PENS_I			   --38.개인연금저축소득공제
         ,  ISNULL(A.COMP_PREMINUM_DED_I        , 0 )                   AS COMP_PREMINUM_DED_I	   --39.소기업,소상공인공제부금소득공제
         ,  ISNULL(A.HOUS_BU_AMT                , 0 )                   AS HOUS_BU_AMT			   --40.가 청약저축
         ,  ISNULL(A.HOUS_BU_AMOUNT_I           , 0 )					AS HOUS_BU_AMOUNT_I		   --   나 주택청약종합저축
         ,  ISNULL(A.HOUS_WORK_AMT              , 0 )                   AS HOUS_WORK_AMT		   --   다 근로자주택마련저축
         ,  ISNULL(A.INVESTMENT_DED_I           , 0 )                   AS INVESTMENT_DED_I		   --41.투자조합출자 등
         ,  ISNULL(A.CARD_DED_I                 , 0 )                   AS CARD_DED_I			   --42.신용카드 등 사용액
         ,  ISNULL(A.STAFF_STOCK_DED_I          , 0 )                   AS STAFF_STOCK_DED_I	   --43.우리사주조합출연금
         ,  ISNULL(A.EMPLOY_WORKER_DED_I        , 0 )                   AS EMPLOY_WORKER_DED_I	   --44.고용유지중소기업근로자
         ,  ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS LONG_INVEST_STOCK_DED_I --45.장기집합투자증권저축
         ,  ISNULL(A.PRIV_PENS_I                , 0 ) + 
            ISNULL(A.COMP_PREMINUM_DED_I        , 0 ) +
            ISNULL(A.HOUS_BU_AMT                , 0 ) + 
            ISNULL(A.HOUS_BU_AMOUNT_I           , 0 ) +
            ISNULL(A.HOUS_WORK_AMT              , 0 ) +
            ISNULL(A.INVESTMENT_DED_I           , 0 ) +
            ISNULL(A.CARD_DED_I                 , 0 ) +
            ISNULL(A.STAFF_STOCK_DED_I          , 0 ) +  
            ISNULL(A.EMPLOY_WORKER_DED_I        , 0 ) +
            ISNULL(A.LONG_INVEST_STOCK_DED_I    , 0 )                   AS ETC_INCOME_DED_I       --46.그밖의소득공제계                       
            --특별공제종합한도초과액																	
         ,  ISNULL(A.OVER_INCOME_DED_LMT        , 0 )                   AS OVER_INCOME_DED_LMT	  --47.소득공제 종합한도 초과액
            --종합소득과세표준																			
         ,  ISNULL(A.TAX_STD_I                  , 0 )                   AS TAX_STD_I			  --48.종합소득과세표준
            --산출세액																				 
         ,  ISNULL(A.COMP_TAX_I                 , 0 )                   AS COMP_TAX_I			  --49.산출세액
            --세액감면																								  
         ,  ISNULL(A.INCOME_REDU_I              , 0 )                   AS INCOME_REDU_I		  --50.소득세법
         ,  ISNULL(A.SKILL_DED_I                , 0 )                   AS SKILL_DED_I2			  --51.조세특례제한법(52제외)- 외국인기술공제
         ,  ISNULL(A.YOUTH_DED_I                , 0 )					AS YOUTH_DED_I2			  --52.조세특례제한법 제30조 - 중소기업청년소득세감면금액
		 ,  ISNULL(A.TAXES_REDU_I               , 0 )                   AS TAXES_REDU_I		      --53.조세조약
																								  --54.세액감면계(레포트에서계산)																					  											  
         ,  ISNULL(A.IN_TAX_DED_I               , 0 )                   AS IN_TAX_DED_I			  --55.근로소득 
         ,  ISNULL(A.CHILD_TAX_DED_I            , 0 )                   AS CHILD_TAX_DED_I		  --56.자녀-공제대상자녀
         ,  ISNULL(A.BRING_CHILD_NUM            , 0 )                   AS MANY_CHILD_NUM		  --        (명)
         ,  ISNULL(A.BIRTH_ADOPT_I              , 0 )                   AS BIRTH_ADOPT_I		  --   자녀-출산입양자
         ,  ISNULL(A.BIRTH_ADOPT_NUM            , 0 )                   AS BIRTH_ADOPT_NUM		  --        (명)
         --(연금계좌소득공제)																		  
         ,  ISNULL(A.SCI_DEDUC_I                , 0 )                   AS SCI_DEDUC_I			  --57.(공제대상)과학기술인공제
         ,  ISNULL(A.SCI_TAX_DED_I              , 0 ) +											  
            ISNULL(A.SCI_TAX_DED_I1             , 0 )                   AS SCI_TAX_DED_I		  --   (세액공제)과학기술인공제
         ,  ISNULL(A.RETIRE_PENS_I              , 0 )                   AS RETIRE_PENS_I		  --58.(공제대상)근로자퇴직급여보장법
         ,  ISNULL(A.RETIRE_TAX_DED_I           , 0 ) +											  
            ISNULL(A.RETIRE_TAX_DED_I1          , 0 )                   AS RETIRE_TAX_DED_I		  --   (세액공제)과학기술인공제
         ,  ISNULL(A.PENS_I                     , 0 )                   AS PENS_I				  --59.(공제대상)연금저축
         ,  ISNULL(A.PENS_TAX_DED_I1            , 0 ) +											  
            ISNULL(A.PENS_TAX_DED_I             , 0 )                   AS PENS_TAX_DED_I1		  --   (세액공제)연금저축
            --특별세액공제																			  
         ,  ISNULL(A.ETC_INSUR_I                , 0 )                   AS ETC_INSUR_I			  --60.(공제대상)보장성보험
         ,  ISNULL(A.ETC_INSUR_TAX_DED_I        , 0 )                   AS ETC_INSUR_TAX_DED_I	  --   (세액공제)보장성보험
         ,  ISNULL(A.DEFORM_INSUR_I             , 0 )                   AS DEFORM_INSUR_I		  --   (공제대상)장애인전용보장성보험
         ,  ISNULL(A.DEFORM_INSUR_TAX_DED_I     , 0 )                   AS DEFORM_INSUR_TAX_DED_I --   (세액공제)장애인전용보장성보험
         ,  ISNULL(A.MED_DED_I                  , 0 )                   AS MED_DED_I			  --61.(공제대상)의료비
         ,  ISNULL(A.MED_TAX_DED_I              , 0 )                   AS MED_TAX_DED_I		  --   (세액공제)의료비
         ,  ISNULL(A.EDUC_DED_I                 , 0 )                   AS EDUC_DED_I			  --62.(공제대상)교육비
         ,  ISNULL(A.EDUC_TAX_DED_I             , 0 )                   AS EDUC_TAX_DED_I		  --   (세액공제)교육비
         ,  ISNULL(A.POLICY_INDED_DED_AMT       , 0 )                   AS POLICY_INDED_DED_AMT	  --63.가 (공제대상)정치자금기부금-10만원이하
         ,  ISNULL(A.POLICY_INDED_TAX_DED_I     , 0 )                   AS POLICY_INDED_TAX_DED_I --      (세액공제)정치자금기부금-10만원이하
         ,  ISNULL(A.POLICY_GIFT_DED_AMT        , 0 )                   AS POLICY_GIFT_DED_AMT	  --      (공제대상)정치자금기부금-10만원초과
         ,  ISNULL(A.POLICY_GIFT_TAX_DED_I      , 0 )                   AS POLICY_GIFT_TAX_DED_I  --      (세액공제)정치자금기부금-10만원초과
         ,  ISNULL(A.LEGAL_DED_AMT              , 0 )                   AS LEGAL_DED_AMT		  --   나 (공제대상)법정기부금
         ,  ISNULL(A.LEGAL_GIFT_TAX_DED_I       , 0 )                   AS LEGAL_GIFT_TAX_DED_I	  --      (세액공제)법정기부금
         ,  ISNULL(A.STAFF_DED_AMT              , 0 )                   AS STAFF_DED_AMT		  --   다 (공제대상)우리사주조합기부금
         ,  ISNULL(A.STAFF_GIFT_TAX_DED_I       , 0 )                   AS STAFF_GIFT_TAX_DED_I	  --      (세액공제)우리사주조합기부금
         ,  CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0 												  
                 ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT 			 
                            THEN (CASE WHEN A.APPOINT_GIFT_TAX_DED_I = 0 THEN 0 ELSE A.APPOINT_ASS_TAX_DED_AMT END)	 
                            ELSE A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I										     
                       END)																							 
            END                                                         AS APPOINT_ASS_TAX_DED_AMT --   라 (공제대상)지정기부금(종교단체외)
         , ISNULL(A.APPOINT_GIFT_TAX_DED_I, 0)                          AS APPOINT_GIFT_TAX_DED_I  --      (세액공제)지정기부금(종교단체외)
         , CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0 																	   
                ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT 			   
                           THEN 0
                           ELSE (CASE WHEN A.ASS_GIFT_TAX_DED_I = 0 THEN 0 
                                      ELSE A.APPOINT_ASS_TAX_DED_AMT - (A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I) 
                                 END) 
                      END)
           END                                                         AS APPOINT_ASS_TAX_DED_AMT2 --  마 (공제대상) 지정기부금(종교단체)
         , ISNULL(A.ASS_GIFT_TAX_DED_I, 0)                             AS APPOINT_GIFT_TAX_DED_I2  --     (세액공제) 지정기부금(종교단체)           
         ,  ISNULL(A.STD_TAX_DED_I              , 0 )                   AS STD_TAX_DED_I           --65.표준세액공제         
         ,  ISNULL(A.NAP_TAX_DED_I              , 0 )                   AS NAP_TAX_DED_I		   --66.납세조합공제
         ,  ISNULL(A.HOUS_INTER_I               , 0 )                   AS HOUS_INTER_I			   --67.주택차입금
         ,  ISNULL(A.OUTSIDE_INCOME_I           , 0 )                   AS OUTSIDE_INCOME_I        --68.외국납부
         , (CASE WHEN ISNULL(F.MON_RENT_I, 0) &gt;= 7500000 THEN 7500000
                 ELSE ISNULL(F.MON_RENT_I, 0)
            END)                                                        AS MON_RENT_I_1             --69.(공제대상)월세액
         , ISNULL(A.MON_RENT_I                  , 0 )                   AS MON_RENT_I_2             --   (세액공제)월세액

         /*부양가족 소득공제 명세 합계*/
         ,  I.SUPP_CNT
		 --보험료
		 ,  ISNULL(A.MED_PREMINM_I             , 0 )				   AS SUPP_TOT_INSUR1        --(기타)건강
         ,  ISNULL(A.HIRE_INSUR_I              , 0 )                   AS SUPP_TOT_INSUR2        --(기타)고용
         ,  ISNULL(I.SUPP_TOT_ETC_INSUR1       , 0 )                   AS SUPP_TOT_ETC_INSUR1	 --(국세청)보장성 
		 ,  ISNULL(I.SUPP_TOT_ETC_INSUR2       , 0 )                   AS SUPP_TOT_ETC_INSUR2	 --(기타) 보장성 
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR1    , 0 )                   AS SUPP_TOT_DEFORM_INSUR1 --(국세청)장애인전용보장성         
         ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR2    , 0 )                   AS SUPP_TOT_DEFORM_INSUR2 --(기타)장애인전용보장성
		 --의료비
         ,  ISNULL(I.SUPP_TOT_MED1             , 0 )                   AS SUPP_TOT_MED1          --(국세청)일반 
		 ,  ISNULL(I.SUPP_TOT_MED2             , 0 )                   AS SUPP_TOT_MED2		     --(기타)  일반
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED1     , 0 )                   AS SUPP_TOT_SURGERY_MED1  --(국세청)난임    
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED2     , 0 )                   AS SUPP_TOT_SURGERY_MED2  --(기타)  난임   
		 ,  ISNULL(I.SUPP_TOT_DEFORM_MED1      , 0 )                   AS SUPP_TOT_DEFORM_MED1   --(국세청)장애인/건보산정특례    
         ,  ISNULL(I.SUPP_TOT_DEFORM_MED2      , 0 )                   AS SUPP_TOT_DEFORM_MED2   --(기타)  장애인/건보산정특례
		 ,  ISNULL(I.SUPP_TOT_MED_INSUR_I1     , 0 )                   AS SUPP_TOT_MED_INSUR_I1  --(국세청)실손의료보험금
		 ,  ISNULL(I.SUPP_TOT_MED_INSUR_I2     , 0 )                   AS SUPP_TOT_MED_INSUR_I2  --(기타)  실손의료보험금
		 --교육비   
         ,  ISNULL(I.SUPP_TOT_EDU1             , 0 )                   AS SUPP_TOT_EDU1          --(국세청)일반
         ,  ISNULL(I.SUPP_TOT_EDU2             , 0 )                   AS SUPP_TOT_EDU2			 --(기타)  일반
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU1	   , 0 )				   AS SUPP_TOT_DEFORM_EDU1   --(국세청)장애인특수교육
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU2	   , 0 )				   AS SUPP_TOT_DEFORM_EDU2   --(기타)  장애인특수교육
		 --신용카드등 사용액
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CARD1,0) END 
		    + ISNULL(I.SUPP_TOT_CARD1            , 0 )    		       AS SUPP_TOT_CARD1          --(국세청)신용카드
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CARD2,0) END 
		    + ISNULL(I.SUPP_TOT_CARD2            , 0 )                 AS SUPP_TOT_CARD2		  --(기타)  신용카드
		 ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_CASH1,0) END 
		    + ISNULL(I.SUPP_TOT_CASH1            , 0 )                 AS SUPP_TOT_CASH1		  --(국세청)현금영수증
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_DEBIT1,0) END 
		    + ISNULL(I.SUPP_TOT_DEBIT1           , 0 )                 AS SUPP_TOT_DEBIT1         --(국세청)직불카드 등
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(I.BOOK_CONCERT_DEBIT2,0) END 
		    + ISNULL(I.SUPP_TOT_DEBIT2           , 0 )                 AS SUPP_TOT_DEBIT2         --(기타)  직불카드 등		
         ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(I.BOOK_CONCERT_CARD1,0) + 
															ISNULL(I.BOOK_CONCERT_CASH1,0) + 
															ISNULL(I.BOOK_CONCERT_DEBIT1,0) ELSE 0 END AS SUPP_TOT_BOOK1 --(국세청)도서공연사용분
		 ,  CASE WHEN A.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(I.BOOK_CONCERT_CARD2,0) + 
															ISNULL(I.BOOK_CONCERT_CASH2,0) + 
															ISNULL(I.BOOK_CONCERT_DEBIT2,0) ELSE 0 END AS SUPP_TOT_BOOK2 --(기타)  도서공연사용분
         ,  ISNULL(I.SUPP_TOT_TRA1             , 0 )                   AS SUPP_TOT_TRA1          --(국세청)전통시장사용분
         ,  ISNULL(I.SUPP_TOT_TRA2             , 0 )                   AS SUPP_TOT_TRA2          --(기타)  전통시장사용분
         ,  ISNULL(I.SUPP_TOT_TRAFFIC1         , 0 )                   AS SUPP_TOT_TRAFFIC1      --(국세청)대중교통이용분
         ,  ISNULL(I.SUPP_TOT_TRAFFIC2         , 0 )                   AS SUPP_TOT_TRAFFIC2      --(기타)  대중교통이용분
         ,  ISNULL(I.SUPP_TOT_GIFT1            , 0 )                   AS SUPP_TOT_GIFT1         --(국세청)기부금
         ,  ISNULL(I.SUPP_TOT_GIFT2            , 0 )                   AS SUPP_TOT_GIFT2         --(기타)  기부금
         , ISNULL(I.DEFAULT_DED_SUM            , 0 )				   AS DEFAULT_DED_SUM     
		 , ISNULL(A.MANY_CHILD_NUM		       , 0 )				   AS MANY_CHILD_DED_SUM
		 , ISNULL(I.BRING_CHILD_DED_SUM	       , 0 )				   AS BRING_CHILD_DED_SUM
		 , ISNULL(I.WOMAN_DED_SUM			   , 0 )				   AS WOMAN_DED_SUM		
		 , ISNULL(I.ONE_PARENT_DED_SUM		   , 0 )				   AS ONE_PARENT_DED_SUM
		 , ISNULL(I.OLD_DED_SUM				   , 0 )				   AS OLD_DED_SUM		
		 , ISNULL(I.BIRTH_ADOPT_DED_SUM		   , 0 )				   AS BIRTH_ADOPT_DED_SUM
		 , ISNULL(I.DEFORM_DED_SUM			   , 0 )				   AS DEFORM_DED_SUM
    FROM              HAD600T AS A   WITH (NOLOCK)
           INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                  AND D.PERSON_NUMB    = A.PERSON_NUMB
           INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                  AND C.DIV_CODE       = D.SECT_CODE
           INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
           LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                  AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND F.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                  AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND B.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HPA600T AS G   WITH (NOLOCK) ON G.COMP_CODE      = A.COMP_CODE
                                                  AND G.PAY_YYYYMM  LIKE A.YEAR_YYYY + '%'
                                                  AND G.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN HAD700T AS H   WITH (NOLOCK) ON H.COMP_CODE      = A.COMP_CODE
                                                  AND H.SUPP_DATE   LIKE A.YEAR_YYYY + '%'
                                                  AND H.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT COMP_CODE
                           , YEAR_YYYY
                           , PERSON_NUMB
                           , COUNT(DISTINCT unilite.fnCipherDecrypt(REPRE_NUM, '')) AS SUPP_CNT
						   --국세청
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(MED_USE_I, 0)          ELSE 0 END)                                     AS SUPP_TOT_MED1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SURGERY_MED_I , 0)     ELSE 0 END)                                     AS SUPP_TOT_SURGERY_MED1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SERIOUS_SICK_MED_I, 0) ELSE 0 END)                                     AS SUPP_TOT_DEFORM_MED1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(REAL_LOSS_MED_INSUR_I, 0) ELSE 0 END)                                  AS SUPP_TOT_MED_INSUR_I1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(EDU_USE_I           + FIELD_EDUC_I + 
						                                           EDU_PRINCIPAL_RTN_I + UNIFORM_USE_I, 0)         ELSE 0 END)            AS SUPP_TOT_EDU1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEFORM_EDU_USE_I, 0)  ELSE 0 END)                                      AS SUPP_TOT_DEFORM_EDU1					
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CARD1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CASH1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_DEBIT1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I , 0) ELSE 0 END) AS BOOK_CONCERT_CARD1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I, 0) ELSE 0 END) AS BOOK_CONCERT_DEBIT1
						   , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I , 0) ELSE 0 END) AS BOOK_CONCERT_CASH1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_TRA1 
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END)	AS SUPP_TOT_TRAFFIC1
                           , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_GIFT1
						   --기타
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_ETC_INSUR2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0) ELSE 0 END ELSE 0 END) AS SUPP_TOT_DEFORM_INSUR2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(MED_USE_I, 0)          ELSE 0 END)                                     AS SUPP_TOT_MED2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SURGERY_MED_I , 0)     ELSE 0 END)                                     AS SUPP_TOT_SURGERY_MED2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SERIOUS_SICK_MED_I, 0) ELSE 0 END)                                     AS SUPP_TOT_DEFORM_MED2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(REAL_LOSS_MED_INSUR_I, 0) ELSE 0 END)                                  AS SUPP_TOT_MED_INSUR_I2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(EDU_USE_I           + FIELD_EDUC_I  + 
						                                           EDU_PRINCIPAL_RTN_I + UNIFORM_USE_I, 0)         ELSE 0 END)		      AS SUPP_TOT_EDU2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEFORM_EDU_USE_I, 0)  ELSE 0 END)									  AS SUPP_TOT_DEFORM_EDU2	
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CARD2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_CASH2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_DEBIT2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I , 0) ELSE 0 END) AS BOOK_CONCERT_CARD2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I, 0) ELSE 0 END) AS BOOK_CONCERT_DEBIT2
						   , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I , 0) ELSE 0 END) AS BOOK_CONCERT_CASH2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I, 0)  ELSE 0 END)	AS SUPP_TOT_TRA2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I   , 0)  ELSE 0 END)	AS SUPP_TOT_TRAFFIC2
                           , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(GIFT_USE_I      , 0)  ELSE 0 END)	AS SUPP_TOT_GIFT2
                           --인적공제수
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN DEFAULT_DED_YN     = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS DEFAULT_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN MANY_CHILD_DED_YN  = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS MANY_CHILD_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN BRING_CHILD_DED_YN = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS BRING_CHILD_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN WOMAN_DED_YN       = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS WOMAN_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN ONE_PARENT_DED_YN  = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS ONE_PARENT_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN OLD_DED_YN         = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS OLD_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN BIRTH_ADOPT_DED_YN = 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS BIRTH_ADOPT_DED_SUM
						   , SUM(CASE WHEN SEQ_NUM = '1' THEN  CASE WHEN DEFORM_DED_YN		= 'Y' THEN 1 ELSE 0 END ELSE 0 END ) AS DEFORM_DED_SUM	
                      FROM   HAD430T WITH (NOLOCK)
                      WHERE  COMP_CODE = @COMP_CODE
                      AND    YEAR_YYYY = @YEAR_YYYY
                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
                      )       AS I                 ON I.COMP_CODE      = A.COMP_CODE
                                                  AND I.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND I.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN (
                      SELECT X.COMP_CODE
                           , X.YEAR_YYYY
                           , X.PERSON_NUMB
						   --국외근로
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_M01
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                               THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_M01
						   --야간근로수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P1_NON_TAX_EMPTION_I   ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_O01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'                                                              THEN P2_NON_TAX_EMPTION_I   ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_O01
						   --출산보육수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Q01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Q01
						   --연구보조비
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_4
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                 THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_4
						   --비과세학자금
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_5
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_5
						   --취재수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_6
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_6
						   --그밖의제출수당
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30') THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30') THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_19
                           , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30') THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_19
						   --수련보조수당
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_Y22
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_Y22
						   --중소기업 핵심인력 성과보상기금
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'                                                              THEN X.NON_TAX_EMPTION_I    ELSE 0 END)  AS NON_TAX_EMPTION_I_T40
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_NON_TAX_EMPTION_I_T40
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_NON_TAX_EMPTION_I_T40
						   --외국인기술자
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T01
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T01
						   --청년세액감면
                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T10
                           , SUM(CASE WHEN X.NONTAX_CODE  IN ('T10','T11','T12','T13')                                          THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T10
						   --조세조약
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P1_NON_TAX_EMPTION_I ELSE 0 END)  AS P1_REDUCE_TAX_T20
                           , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'                                                              THEN X.P2_NON_TAX_EMPTION_I ELSE 0 END)  AS P2_REDUCE_TAX_T20
                      FROM  (
                            -- 연말정산비과세소득
                            SELECT A.COMP_CODE
                                 , A.YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.NON_TAX_EMPTION_I   , 0)) AS NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0)) AS P1_NON_TAX_EMPTION_I
                                 , SUM(ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS P2_NON_TAX_EMPTION_I
                            FROM   HAD610T   A WITH (NOLOCK)
                            WHERE  A.COMP_CODE = @COMP_CODE
                            AND    A.YEAR_YYYY = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                            UNION  ALL

                            -- 주식매수선택권행사이익 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)			 AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA810T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                            UNION ALL

                            -- 우리사주조합인출금 등록
                            SELECT A.COMP_CODE 
                                 , LEFT(A.PAY_YYYYMM, 4)             AS YEAR_YYYY
                                 , A.PERSON_NUMB
                                 , A.NONTAX_CODE
                                 , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS NON_TAX_EMPTION_I
                                 , ISNULL(B1.TAX_EXEMPTION_I   , 0)  AS P1_NON_TAX_EMPTION_I
                                 , ISNULL(B2.TAX_EXEMPTION_I   , 0)  AS P2_NON_TAX_EMPTION_I
                            FROM             HPA820T   A  WITH (NOLOCK)
                                   LEFT JOIN HAD510T   B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                       AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B1.NONTAX_CODE = A.NONTAX_CODE
                                   LEFT JOIN HAD520T   B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                       AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                       AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                       AND B2.NONTAX_CODE = A.NONTAX_CODE
                            WHERE  A.COMP_CODE          = @COMP_CODE
                            AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
                            GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                            ) X
                      GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                      )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                  AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                  AND L.PERSON_NUMB    = A.PERSON_NUMB
           LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                  AND M1.MAIN_CODE     = 'B012'
                                                  AND M1.SUB_CODE      = D.NATION_CODE
           LEFT  JOIN BSA100T AS M3  WITH (NOLOCK) ON M3.COMP_CODE     = D.COMP_CODE
                                                  AND M3.MAIN_CODE     = 'B012'
                                                  AND M3.SUB_CODE      = D.LIVE_CODE
           LEFT  JOIN ABA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = @COMP_CODE
                                                  AND M2.BASE_CODE     = '01'
           
    WHERE  A.COMP_CODE = @COMP_CODE
    AND    A.YEAR_YYYY = @YEAR_YYYY
   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND D.SECT_CODE = #{DIV_CODE}
    </if>
	
	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
       AND A.HALFWAY_TYPE = #{RETR_TYPE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
       AND D.PAY_CODE  = #{PAY_CODE}
    </if>
	
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
       AND D.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
       AND A.PERSON_NUMB = #{PERSON_NUMB}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
       AND D.DEPT_CODE &gt;= #{FR_DEPT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
       AND D.DEPT_CODE &lt;= #{TO_DEPT_CODE}
	</if>
      
    <if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
          AND ((G.pay_yyyymm &gt;= #{PAYFRYYMM}) OR (LEFT(H.SUPP_DATE, 6) &gt;= #{PAYFRYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
          AND ((G.pay_yyyymm &lt;= #{PAYTOYYMM})
          OR (LEFT(H.SUPP_DATE, 6) &lt;= #{PAYTOYYMM}))
    </if>
    <if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
    	AND    D.RETR_DATE     &gt;= #{FRRETIREDATE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
    	AND    D.RETR_DATE     &lt;= #{TORETIREDATE}
    </if>
    
    ORDER BY D.DIV_CODE, D.DEPT_CODE, D.POST_CODE, D.NAME, A.PERSON_NUMB
END
	</select>

	<select id="had840rkrServiceImpl.selectList2019_Query2" parameterType="Map" resultType="rMap">
		--had840rkr.Chad840rkr[fnHad840nQ2019] Query2
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2019_1'))
		        DROP TABLE #HAD430T2019_1
		
		    SELECT A.YEAR_YYYY   AS YEAR_YYYY1
		         , A.PERSON_NUMB AS PERSON_NUMB1
		         , A.IN_FORE     AS IN_FORE1
		         , A.REL_CODE    AS REL_CODE1
		         , A.FAMILY_NAME AS FAMILY_NAME1
		         , unilite.fnCipherDecrypt(A.REPRE_NUM, '') AS REPRE_NUM1 
		         , CASE WHEN ISNULL(A.DEFAULT_DED_YN    , '') = 'Y' THEN '○' ELSE '' END AS DEFAULT_DED_YN1     --기본공제YN
		         , CASE WHEN ISNULL(A.WOMAN_DED_YN      , '') = 'Y' THEN '○' ELSE '' END AS WOMAN_DED_YN1       --부녀자YN
		         , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS ONE_PARENT_DED_YN1  --한부모YN
		         , CASE WHEN ISNULL(A.OLD_DED_YN        , '') = 'Y' THEN '○' ELSE '' END AS OLD_DED_YN1         --경로우대YN
		         , CASE WHEN ISNULL(A.DEFORM_DED_YN     , '') = 'Y' THEN '○' ELSE '' END AS DEFORM_DED_YN1      --장애인YN
		         , ISNULL(A.DEFORM_KIND_CODE,'')                                          AS DEFORM_KIND_CODE1   --장애인코드
		         , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BIRTH_ADOPT_DED_YN1 --출산입양YN
		         , CASE WHEN ISNULL(A.BRING_CHILD_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS MANY_CHILD_DED_YN1  --자녀YN
		         , A.SEQ_NUM                                                              AS SEQ_NUM1            --자료구분
		         , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.MED_PREMINM_I  , 0)
		                ELSE 0
		            END                                                                  AS MED_PREMINM_I1       --건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.HIRE_INSUR_I, 0)
		                ELSE 0
		            END                                                                  AS HIRE_INSUR_I1        --고용보험료
		         , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '2' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS ETC_USE_I1           --보장성보험료
		         , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '1' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS DEFORM_USE_I1        --장애인전용보장성보험료
		         , ISNULL(A.MED_USE_I          , 0)                                      AS MED_USE_I1           --일반의료비
				 , ISNULL(A.SURGERY_MED_I      , 0)                                      AS SURGERY_MED_I1       --난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I , 0)                                      AS SERIOUS_SICK_MED_I1  --장애인/건보산정특례자
				 , ISNULL(A.REAL_LOSS_MED_INSUR_I, 0)									 AS REAL_LOSS_MED_INSUR_I1	-- 실손의료보험료
		         , ISNULL(A.EDU_USE_I           + A.FIELD_EDUC_I +
				          A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I, 0)                    AS EDU_USE_I1           --일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I   , 0)                                      AS DEFORM_EDU_USE_I1    --장애인특수교육비
		         , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CARD_I, 0)  END +
				   ISNULL(A.CARD_USE_I         , 0)                                      AS CARD_USE_I1          --신용카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CASH_I, 0)  END +
		           ISNULL(A.CASH_USE_I         , 0)                                      AS CASH_USE_I1          --현금영수증
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_DEBIT_I, 0) END +
		           ISNULL(A.DEBIT_CARD_USE_I   , 0)                                      AS DEBIT_CARD_USE_I1    --직불카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(A.BOOK_CONCERT_CARD_I, 0) +
				                                                    ISNULL(A.BOOK_CONCERT_CASH_I, 0) + 
																	ISNULL(A.BOOK_CONCERT_DEBIT_I, 0)
															   ELSE 0 END				 AS BOOK_CONCERT_USE_I1  --도서공연사용분
		         , ISNULL(A.TRA_MARKET_USE_I   , 0)                                      AS TRA_MARKET_USE_I1    --전통시장사용분
		         , ISNULL(A.TRAFFIC_USE_I      , 0)                                      AS TRAFFIC_USE_I1       --대중교통이용분
		         , ISNULL(A.GIFT_USE_I         , 0)                                      AS GIFT_USE_I1          --기부금
		    INTO   #HAD430T2019_1
		    FROM              HAD430T A  WITH (NOLOCK)
		           INNER JOIN HUM100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.PERSON_NUMB = A.PERSON_NUMB
		           INNER JOIN HAD600T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                              AND M2.YEAR_YYYY   = A.YEAR_YYYY
		                                              AND M2.PERSON_NUMB = A.PERSON_NUMB
			
			WHERE  A.COMP_CODE       = #{S_COMP_CODE}
		    AND    A.YEAR_YYYY       = #{YEAR_YYYY}
		    AND    A.SEQ_NUM         = '1'
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND    M1.SECT_CODE = #{DIV_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			    AND    M1.DEPT_CODE = #{TREE_CD}
				</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			    AND    M2.HALFWAY_TYPE = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			    AND    M1.PAY_CODE  = #{PAY_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			    AND    M1.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND    A.PERSON_NUMB = #{PERSON_NUMB}
			</if>
		
		
		
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2019_2'))
		        DROP TABLE #HAD430T2019_2
		
		    SELECT A.YEAR_YYYY   AS YEAR_YYYY2
		         , A.PERSON_NUMB AS PERSON_NUMB2
		         , A.IN_FORE     AS IN_FORE2
		         , A.REL_CODE    AS REL_CODE2
		         , A.FAMILY_NAME AS FAMILY_NAME2
		         , unilite.fnCipherDecrypt(A.REPRE_NUM, '') AS REPRE_NUM2 
		         , CASE WHEN ISNULL(A.DEFAULT_DED_YN    , '') = 'Y' THEN '○' ELSE '' END AS DEFAULT_DED_YN2     --기본공제YN
		         , CASE WHEN ISNULL(A.WOMAN_DED_YN      , '') = 'Y' THEN '○' ELSE '' END AS WOMAN_DED_YN2       --부녀자YN
		         , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN , '') = 'Y' THEN '○' ELSE '' END AS ONE_PARENT_DED_YN2  --한부모YN
		         , CASE WHEN ISNULL(A.OLD_DED_YN        , '') = 'Y' THEN '○' ELSE '' END AS OLD_DED_YN2         --경로우대YN
		         , CASE WHEN ISNULL(A.DEFORM_DED_YN     , '') = 'Y' THEN '○' ELSE '' END AS DEFORM_DED_YN2      --장애인YN
		         , ISNULL(A.DEFORM_KIND_CODE,'')                                          AS DEFORM_KIND_CODE2   --장애인코드
		         , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS BIRTH_ADOPT_DED_YN2 --출산입양YN
		         , CASE WHEN ISNULL(A.BRING_CHILD_DED_YN, '') = 'Y' THEN '○' ELSE '' END AS MANY_CHILD_DED_YN2  --자녀YN
		         , A.SEQ_NUM                                                              AS SEQ_NUM2            --자료구분
		         , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.MED_PREMINM_I  , 0)
		                ELSE 0
		            END                                                                  AS MED_PREMINM_I2       --건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
		                THEN ISNULL(M2.HIRE_INSUR_I, 0)
		                ELSE 0
		            END                                                                  AS HIRE_INSUR_I2        --고용보험료
		         , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '2' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS ETC_USE_I2           --보장성보험료
		         , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
		                WHEN A.INSUR_CODE = '1' THEN 0
		                ELSE ISNULL(A.INSUR_USE_I, 0)
		           END                                                                   AS DEFORM_USE_I2        --장애인전용보장성보험료
		         , ISNULL(A.MED_USE_I          , 0)                                      AS MED_USE_I2           --일반의료비
				 , ISNULL(A.SURGERY_MED_I      , 0)                                      AS SURGERY_MED_I2       --난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I , 0)                                      AS SERIOUS_SICK_MED_I2  --장애인/건보산정특례자
				 , ISNULL(A.REAL_LOSS_MED_INSUR_I, 0)									 AS REAL_LOSS_MED_INSUR_I2	-- 실손의료보험료
		         , ISNULL(A.EDU_USE_I           + A.FIELD_EDUC_I +
				          A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I, 0)                    AS EDU_USE_I2           --일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I   , 0)                                      AS DEFORM_EDU_USE_I2    --장애인특수교육비
		         , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CARD_I, 0)  END +
				   ISNULL(A.CARD_USE_I         , 0)                                      AS CARD_USE_I2          --신용카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_CASH_I, 0)  END +
		           ISNULL(A.CASH_USE_I         , 0)                                      AS CASH_USE_I2          --현금영수증
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN 0 ELSE ISNULL(A.BOOK_CONCERT_DEBIT_I, 0) END +
		           ISNULL(A.DEBIT_CARD_USE_I   , 0)                                      AS DEBIT_CARD_USE_I2    --직불카드
				 , CASE WHEN M2.INCOME_SUPP_TOTAL_I &lt; 70000000 THEN ISNULL(A.BOOK_CONCERT_CARD_I, 0) +
				                                                    ISNULL(A.BOOK_CONCERT_CASH_I, 0) + 
																	ISNULL(A.BOOK_CONCERT_DEBIT_I, 0)
															   ELSE 0 END				 AS BOOK_CONCERT_USE_I2  --도서공연사용분
		         , ISNULL(A.TRA_MARKET_USE_I   , 0)                                      AS TRA_MARKET_USE_I2    --전통시장사용분
		         , ISNULL(A.TRAFFIC_USE_I      , 0)                                      AS TRAFFIC_USE_I2       --대중교통이용분
		         , ISNULL(A.GIFT_USE_I         , 0)                                      AS GIFT_USE_I2          --기부금
		    INTO   #HAD430T2019_2
		    FROM              HAD430T A  WITH (NOLOCK)
		           INNER JOIN HUM100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.PERSON_NUMB = A.PERSON_NUMB
		           INNER JOIN HAD600T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                              AND M2.YEAR_YYYY   = A.YEAR_YYYY
		                                              AND M2.PERSON_NUMB = A.PERSON_NUMB
		    WHERE  A.COMP_CODE       = #{S_COMP_CODE}
		    AND    A.YEAR_YYYY       = #{YEAR_YYYY}
		    AND    A.SEQ_NUM         = '2'
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND    M1.SECT_CODE = #{DIV_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			    AND    M1.DEPT_CODE = #{TREE_CD}
				</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			    AND    M2.HALFWAY_TYPE = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			    AND    M1.PAY_CODE  = #{PAY_CODE}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			    AND    M1.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
				</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND    A.PERSON_NUMB = #{PERSON_NUMB}
			</if>
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    SELECT A.*, B.*
		    FROM              #HAD430T2019_1 A 
			       INNER JOIN #HAD430T2019_2 B ON A.YEAR_YYYY1 = B.YEAR_YYYY2
				                              AND A.PERSON_NUMB1 = B.PERSON_NUMB2
											  AND A.REPRE_NUM1   = B.REPRE_NUM2
		    ORDER  BY A.PERSON_NUMB1, A.REL_CODE1, A.REPRE_NUM1, A.SEQ_NUM1
			   
		END
	</select>
	
	<select id="had840rkrServiceImpl.selectList2020_Query1" parameterType="Map" resultType="rMap">
--had840rkr.Chad840rkr[fnHad840nQ2020] Query1
BEGIN
	DECLARE @COMP_CODE			NVARCHAR(08)
		  , @YEAR_YYYY			NVARCHAR(04)
		  , @REPORT_GBN			NVARCHAR(01)

--  1. 변수 값 할당 ----------------------------------------------------------------------------------------------
	SET @COMP_CODE		= #{S_COMP_CODE}
	SET @YEAR_YYYY		= #{YEAR_YYYY}
	SET @REPORT_GBN		= #{OUTPUT}

--  2. 조회 ------------------------------------------------------------------------------------------------------
	SELECT  DISTINCT
			CASE WHEN ISNULL(D.LIVE_GUBUN, '') = '' THEN '1'
				 ELSE D.LIVE_GUBUN
			END													AS LIVE_GUBUN				--거주구분
		 ,  ISNULL(A.FORE_SINGLE_YN				, 'N')			AS FORE_SINGLE_YN			--외국인단일세율적용
		 ,  ISNULL(A.FOREIGN_DISPATCH_YN		, 'N')			AS FOREIGN_DISPATCH_YN		--외국법인소속파견근로자여부
		 ,  D.NATION_CODE
		 ,  ISNULL(M1.CODE_NAME					, '')			AS NATION_NAME				--국적
		 ,  D.LIVE_CODE
		 ,  ISNULL(M3.CODE_NAME					, '')			AS LIVE_NAME				--거주지국
		 ,  A.HOUSEHOLDER_YN									AS HOUSEHOLDER_YN			--세대주여부
		 ,  A.HALFWAY_TYPE										AS HALFWAY_TYPE				--연말정산구분(Y:중도퇴사, N:연말정산)

			--징수의무자
		 ,  C.DIV_FULL_NAME										AS DIV_FULL_NAME			--1.법인명(상호)
		 ,  C.REPRE_NAME										AS REPRE_NAME				--2.대표자(성명)
		 ,  SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' + 
			SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' + 
			SUBSTRING(C.COMPANY_NUM, 6, 5)						AS COMPANY_NUM				--3.사업자등록번호
		 ,  ISNULL(M2.TAX_BASE					, '0')			AS TAX_BASE					--3-1. 사업자단위과세자여부
		 ,  ISNULL(C.SERVANT_COMPANY_NUM_YETA	, '')			AS SUB_DIV_NUM				--3-2 종사업장일련번호
		 ,  E.COMP_OWN_NO										AS COMP_REPRE_NO			--4.주민(법인)등록번호
		 ,  C.ADDR												AS COMP_KOR_ADDR			--5.소재지(주소)

			--소득자
		 ,  A.PERSON_NUMB																	--사번
		 ,  D.NAME																			--6.성명
		 ,  unilite.fnCipherDecrypt(D.REPRE_NUM, 'A')			AS REPRE_NUM				--7.주민(외국인)등록번호
		 ,  D.KOR_ADDR											AS KOR_ADDR					--8.주소
		 ,  D.DIV_CODE											AS DIV_CODE					--사업장
		 ,  D.DEPT_CODE											AS DEPT_CODE				--부서
		 ,  D.POST_CODE											AS POST_CODE				--직위

			/*근무처별소득명세*/
			--근무처명
		 ,  ISNULL(B.P1_COMPANY_NAME			, '')			AS P1_COMPANY_NAME			--9.종(전) 근무처명
		 ,  ISNULL(B.P2_COMPANY_NAME			, '')			AS P2_COMPANY_NAME			--9.종(전) 근무처명
		 ,  ISNULL(F.P3_COMPANY_NAME			, '')			AS NAP_NAME					--9.납세조합 근무처명
			--사업자등록번호
		 ,  ISNULL(B.P1_COMPANY_NUM				, '')			AS P1_COMPANY_NUM			--10.종(전) 사업자등록번호
		 ,  ISNULL(B.P2_COMPANY_NUM				, '')			AS P2_COMPANY_NUM			--10.종(전) 사업자등록번호
		 ,  ISNULL(F.P3_COMPANY_NUM				, '')			AS P3_COMPANY_NUM			--10.납세조합 사업자등록번호
			--근무기간
		 ,  CASE WHEN LEFT(D.JOIN_DATE, 4) = @YEAR_YYYY THEN D.JOIN_DATE
				 ELSE @YEAR_YYYY + '0101'
			END													AS FJOIN_DATE				--11.주(현)근무기간 From
		 ,  ISNULL(B.P1_WORKDATE_FR				, '')			AS P1_WORKDATE_FR			--11.종(전)근무기간 From
		 ,  ISNULL(B.P2_WORKDATE_FR				, '')			AS P2_WORKDATE_FR			--11.종(전)근무기간 From
		 ,  ISNULL(F.P3_WORKDATE_FR				, '')			AS P3_WORKDATE_FR			--11.납세조합 근무기간 From
		 ,  CASE WHEN LEFT(A.RETR_DATE, 4) = @YEAR_YYYY THEN A.RETR_DATE
				 ELSE @YEAR_YYYY + '1231'
			END													AS FRETR_DATE				--11.주(현)근무기간 To
		 ,  ISNULL(B.P1_WORKDATE_TO				, '')			AS P1_WORKDATE_TO			--11.종(전)근무기간 To
		 ,  ISNULL(B.P2_WORKDATE_TO				, '')			AS P2_WORKDATE_TO			--11.종(전)근무기간 To
		 ,  ISNULL(F.P3_WORKDATE_TO				, '')			AS P3_WORKDATE_TO			--11.납세조합 근무기간 To
			--감면기간
		 ,  ISNULL(F.NONTAX_FR					, '')			AS NONTAX_FR				--12.주(현)감면기한 From
		 ,  ISNULL(B.P1_NONTAX_FR				, '')			AS P1_NONTAX_FR				--12.종(전)감면기한 From
		 ,  ISNULL(B.P2_NONTAX_FR				, '')			AS P2_NONTAX_FR				--12.종(전)감면기한 From
		 ,  ISNULL(F.P3_NONTAX_FR				, '')			AS P3_NONTAX_FR				--12.납세조합 감면기한 From
		 ,  ISNULL(F.NONTAX_TO					, '')			AS NONTAX_TO				--12.주(현)감면기한 To
		 ,  ISNULL(B.P1_NONTAX_TO				, '')			AS P1_NONTAX_TO				--12.종(전)감면기한 To
		 ,  ISNULL(B.P2_NONTAX_TO				, '')			AS P2_NONTAX_TO				--12.종(전)감면기한 To
		 ,  ISNULL(F.P3_NONTAX_TO				, '')			AS P3_NONTAX_TO				--12.납세조합 감면기한 To
			--급여
		 ,  ISNULL(A.NOW_PAY_TOT_I				, 0 )			AS NOW_PAY_TOT_I			--13.주(현)상여
		 ,  ISNULL(B.P1_PAY_TOTAL_I				, 0 )			AS P1_PAY_TOTAL_I			--13.종(전)상여
		 ,  ISNULL(B.P2_PAY_TOTAL_I				, 0 )			AS P2_PAY_TOTAL_I			--13.종(전)상여
		 ,  ISNULL(A.NAP_PAY_TOT_I				, 0 )			AS NAP_PAY_TOT_I			--13.납세조합 상여
			--상여
		 ,  ISNULL(A.NOW_BONUS_TOTAL_I			, 0 )			AS NOW_BONUS_TOTAL_I		--14.주(현)급여
		 ,  ISNULL(B.P1_BONUS_I_TOTAL_I			, 0 )			AS P1_BONUS_I_TOTAL_I		--14.종(전)급여
		 ,  ISNULL(B.P2_BONUS_I_TOTAL_I			, 0 )			AS P2_BONUS_I_TOTAL_I		--14.종(전)급여
		 ,  ISNULL(A.NAP_BONUS_TOTAL_I			, 0 )			AS NAP_BONUS_TOTAL_I		--14.납세조합 급여
			--인정상여
		 ,  ISNULL(A.NOW_ADD_BONUS_I			, 0 )			AS NOW_ADD_BONUS_I			--15.주(현)인정상여
		 ,  ISNULL(B.P1_ADD_BONUS_I				, 0 )			AS P1_ADD_BONUS_I			--15.종(전)인정상여
		 ,  ISNULL(B.P2_ADD_BONUS_I				, 0 )			AS P2_ADD_BONUS_I			--15.종(전)인정상여
			--주식매수선택권행사이익
		 ,  ISNULL(A.NOW_STOCK_PROFIT_I			, 0 )			AS NOW_STOCK_PROFIT_I		--15-1.주(현)주식매수선택권행사이익
		 ,  ISNULL(B.P1_STOCK_BUY_PROFIT_I		, 0 )			AS P1_STOCK_BUY_PROFIT_I	--15-1.종(전)주식매수선택권행사이익
		 ,  ISNULL(B.P2_STOCK_BUY_PROFIT_I		, 0 )			AS P2_STOCK_BUY_PROFIT_I	--15-1.종(전)주식매수선택권행사이익
			--우리사주조합인출금
		 ,  ISNULL(A.NOW_OWNER_STOCK_DRAW_I		, 0 )			AS NOW_STOCK_DRAW_I			--15-2.주(현)우리사주조합인출금
		 ,  ISNULL(B.P1_OWNER_STOCK_DRAW_I		, 0 )			AS P1_OWNER_STOCK_DRAW_I	--15-2.종(전)우리사주조합인출금
		 ,  ISNULL(B.P2_OWNER_STOCK_DRAW_I		, 0 )			AS P2_OWNER_STOCK_DRAW_I	--15-2.종(전)우리사주조합인출금
			--임원퇴직소득금액한도초과액
		 ,  ISNULL(A.NOW_OF_RETR_OVER_I			, 0 )			AS NOW_OF_RETR_OVER_I		--15-3.주(현)임원퇴직소득금액한도초과액
		 ,  ISNULL(B.P1_OF_RETR_OVER_I			, 0 )			AS P1_OF_RETR_OVER_I		--15-3.종(전)임원퇴직소득금액한도초과액
		 ,  ISNULL(B.P2_OF_RETR_OVER_I			, 0 )			AS P2_OF_RETR_OVER_I		--15-3.종(전)임원퇴직소득금액한도초과액
			--직무발명보상금
		 ,  ISNULL(A.NOW_TAX_INVENTION_I		, 0 )			AS NOW_TAX_INVENTION_I		--15-4.주(현)직무발명보상금
		 ,  ISNULL(B.P1_TAX_INVENTION_I			, 0 )			AS P1_TAX_INVENTION_I		--15-4.종(전)직무발명보상금
		 ,  ISNULL(B.P2_TAX_INVENTION_I			, 0 )			AS P2_TAX_INVENTION_I		--15-4.종(전)직무발명보상금
			--납세조합 계
		 ,  ISNULL(A.NAP_PAY_TOT_I				, 0 ) +
			ISNULL(A.NAP_BONUS_TOTAL_I			, 0 )			AS NAP_PAY_HAM				--16.납세조합 계

			/*비과세 및 감면소득명세*/
			--18.국외근로
		 ,  ISNULL(L.NON_TAX_EMPTION_I_M01		, 0 )			AS NON_TAX_EMPTION_I_M01
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_M01	, 0 )			AS P1_NON_TAX_EMPTION_I_M01
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_M01	, 0 )			AS P2_NON_TAX_EMPTION_I_M01
			--18-1.야간근로수당
		 ,  ISNULL(L.NON_TAX_EMPTION_I_O01		, 0 )			AS NON_TAX_EMPTION_I_O01
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_O01	, 0 )			AS P1_NON_TAX_EMPTION_I_O01
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_O01	, 0 )			AS P2_NON_TAX_EMPTION_I_O01
			--18-2.출산보육수당
		 ,  ISNULL(L.NON_TAX_EMPTION_I_Q01		, 0 )			AS NON_TAX_EMPTION_I_Q01
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_Q01	, 0 )			AS P1_NON_TAX_EMPTION_I_Q01
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_Q01	, 0 )			AS P2_NON_TAX_EMPTION_I_Q01
			--18-4.연구보조비
		 ,  ISNULL(L.NON_TAX_EMPTION_I_4		, 0 )			AS NON_TAX_EMPTION_I_4
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_4		, 0 )			AS P1_NON_TAX_EMPTION_I_4
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_4		, 0 )			AS P2_NON_TAX_EMPTION_I_4
			--18-5.비과세학자금
		 ,  ISNULL(L.NON_TAX_EMPTION_I_5		, 0 )			AS NON_TAX_EMPTION_I_5
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_5		, 0 )			AS P1_NON_TAX_EMPTION_I_5
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_5		, 0 )			AS P2_NON_TAX_EMPTION_I_5
			--18-6.취재수당
		 ,  ISNULL(L.NON_TAX_EMPTION_I_6		, 0 )			AS NON_TAX_EMPTION_I_6
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_6		, 0 )			AS P1_NON_TAX_EMPTION_I_6
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_6		, 0 )			AS P2_NON_TAX_EMPTION_I_6
			--그외기재비과세(~)
		 ,  ISNULL(L.NON_TAX_EMPTION_I_19		, 0 )			AS NON_TAX_EMPTION_I_19
		 ,  ISNULL(L.P1_NON_TAX_EMPTION_I_19	, 0 )			AS P1_NON_TAX_EMPTION_I_19
		 ,  ISNULL(L.P2_NON_TAX_EMPTION_I_19	, 0 )			AS P2_NON_TAX_EMPTION_I_19
			--18-34.중소기업 핵심인력 성과보상기금 
		 ,  ISNULL(NON_TAX_EMPTION_I_T40		, 0 )			AS NON_TAX_EMPTION_I_T40
		 ,  ISNULL(P1_NON_TAX_EMPTION_I_T40		, 0 )			AS P1_NON_TAX_EMPTION_I_T40
		 ,  ISNULL(P2_NON_TAX_EMPTION_I_T40		, 0 )			AS P2_NON_TAX_EMPTION_I_T40
			--19.수련보조수당
		 ,  ISNULL(NON_TAX_EMPTION_I_Y22		, 0 )			AS NON_TAX_EMPTION_I_Y22
		 ,  ISNULL(P1_NON_TAX_EMPTION_I_Y22		, 0 )			AS P1_NON_TAX_EMPTION_I_Y22
		 ,  ISNULL(P2_NON_TAX_EMPTION_I_Y22		, 0 )			AS P2_NON_TAX_EMPTION_I_Y22
			--20-1.감면소득계
		 ,  ISNULL(A.SKILL_DED_I				, 0 ) +
			ISNULL(A.YOUTH_DED_I_SUM			, 0 ) +
			ISNULL(A.TAXES_REDU_I				, 0 ) -
			( ISNULL(L.P1_REDUCE_TAX_T01		, 0 ) +
			  ISNULL(L.P1_REDUCE_TAX_T10		, 0 ) +
			  ISNULL(L.P1_REDUCE_TAX_T20		, 0 ))-
			( ISNULL(L.P2_REDUCE_TAX_T01		, 0 ) +
			  ISNULL(L.P2_REDUCE_TAX_T10		, 0 ) +
			  ISNULL(L.P2_REDUCE_TAX_T20		, 0 ))			AS REDUCE_TAX_SUM_I
		 ,  ISNULL(L.P1_REDUCE_TAX_T01			, 0 ) +
			ISNULL(L.P1_REDUCE_TAX_T10			, 0 ) +
			ISNULL(L.P1_REDUCE_TAX_T20			, 0 )			AS P1_REDUCE_TAX_SUM_I
		 ,  ISNULL(L.P2_REDUCE_TAX_T01			, 0 ) +
			ISNULL(L.P2_REDUCE_TAX_T10			, 0 ) +
			ISNULL(L.P2_REDUCE_TAX_T20			, 0 )			AS P2_REDUCE_TAX_SUM_I

			/*세액명세*/
			--72.결정세액
		 ,  ISNULL(A.DEF_IN_TAX_I				, 0 )			AS DEF_IN_TAX_I				--78.소득세
		 ,  ISNULL(A.DEF_LOCAL_TAX_I			, 0 )			AS DEF_LOCAL_TAX_I			--79.지방소득세
		 ,  ISNULL(A.DEF_SP_TAX_I				, 0 )			AS DEF_SP_TAX_I				--80.농어촌특별세
			--기납부세액
			--73.종(전)근무지
		 ,  SUBSTRING(B.P1_COMPANY_NUM, 1, 3) + '-' +
			SUBSTRING(B.P1_COMPANY_NUM, 4, 2) + '-' +
			SUBSTRING(B.P1_COMPANY_NUM, 6, 5)					AS P1_COMPANY_NUM			--사업자등록번호
		 ,  ISNULL(B.P1_IN_TAX_I				, 0 )			AS P1_IN_TAX_I				--78.소득세
		 ,  ISNULL(B.P1_LOCAL_TAX_I				, 0 )			AS P1_LOCAL_TAX_I			--79.지방소득세
		 ,  ISNULL(B.P1_SP_TAX_I				, 0 )			AS P1_SP_TAX_I				--80.농어촌특별세
		 ,  SUBSTRING(B.P2_COMPANY_NUM, 1, 3) + '-' +
			SUBSTRING(B.P2_COMPANY_NUM, 4, 2) + '-' +
			SUBSTRING(B.P2_COMPANY_NUM, 6, 5)					AS P2_COMPANY_NUM			--사업자등록번호
		 ,  ISNULL(B.P2_IN_TAX_I				, 0 )			AS P2_IN_TAX_I				--78.소득세
		 ,  ISNULL(B.P2_LOCAL_TAX_I				, 0 )			AS P2_LOCAL_TAX_I			--79.지방소득세
		 ,  ISNULL(B.P2_SP_TAX_I				, 0 )			AS P2_SP_TAX_I				--80.농어촌특별세
			--74.주(현)근무지
		 ,  ISNULL(A.NOW_IN_TAX_I				, 0 )			AS NOW_IN_TAX_I				--78.소득세
		 ,  ISNULL(A.NOW_LOCAL_TAX_I			, 0 )			AS NOW_LOCAL_TAX_I			--79.지방소득세
		 ,  ISNULL(A.NOW_SP_TAX_I				, 0 )			AS NOW_SP_TAX_I				--80.농어촌특별세
			--76.차감징수세액
		 ,  ISNULL(A.IN_TAX_I					, 0 )			AS IN_TAX_I					--78.소득세
		 ,  ISNULL(A.LOCAL_TAX_I				, 0 )			AS LOCAL_TAX_I				--79.지방소득세
		 ,  ISNULL(A.SP_TAX_I					, 0 )			AS SP_TAX_I					--80.농어촌특별세

			/*정산명세*/
		 ,  ISNULL(A.INCOME_SUPP_TOTAL_I		, 0 )			AS INCOME_SUPP_TOTAL_I		--21.총급여액 
		 ,  ISNULL(A.INCOME_DED_I				, 0 )			AS INCOME_DED_I				--22.근로소득공제
		 ,  ISNULL(A.EARN_INCOME_I				, 0 )			AS EARN_INCOME_I			--23.근로소득금액
			--기본공제
		 ,  ISNULL(A.PER_DED_I					, 0 )			AS PER_DED_I				--24.본인
		 ,  ISNULL(A.SPOUSE_DED_I				, 0 )			AS SPOUSE_DED_I				--25.배우자
		 ,  ISNULL(A.SUPP_SUB_I					, 0 )			AS SUPP_SUB_I				--26.부양가족
		 ,  ISNULL(A.SUPP_NUM					, 0 )			AS SUPP_NUM					--(명)
			--추가공제
		 ,  ISNULL(A.AGED_DED_I					, 0 )			AS AGED_DED_I				--27.경로우대
		 ,  ISNULL(A.AGED_NUM					, 0 )			AS AGED_NUM					--(명)
		 ,  ISNULL(A.DEFORM_DED_I				, 0 )			AS DEFORM_DED_I				--28.장애인
		 ,  ISNULL(A.DEFORM_NUM					, 0 )			AS DEFORM_NUM				--(명)
		 ,  ISNULL(A.WOMAN_DED_I				, 0 )			AS WOMAN_DED_I				--29.부녀자
		 ,  ISNULL(A.ONE_PARENT_DED_I			, 0 )			AS ONE_PARENT_DED_I			--30.한부모가족
			--연금 보험료 공제
		 ,  ISNULL(F.ANU_I						, 0 ) +
			ISNULL(F.ANU_ADD_I					, 0 )			AS ANU_TARGET_I				--31.국민연금보험료 대상금액
		 ,  ISNULL(A.ANU_DED_I					, 0 )			AS ANU_DED_I				--31.국민연금보험료 공제금액
		 ,  ISNULL(F.PUBLIC_PENS_I				, 0 )			AS PUBLIC_PENS_TARGET_I		--32.가 공적연금보험료공제-공무원연금 대상금액
		 ,  ISNULL(A.PUBLIC_PENS_I				, 0 )			AS PUBLIC_PENS_I			--32.가 공적연금보험료공제-공무원연금 공제금액
		 ,  ISNULL(F.SOLDIER_PENS_I				, 0 )			AS SOLDIER_PENS_TARGET_I	--나 공적연금보험료공제-군인연금 대상금액
		 ,  ISNULL(A.SOLDIER_PENS_I				, 0 )			AS SOLDIER_PENS_I			--나 공적연금보험료공제-군인연금 공제금액
		 ,  ISNULL(F.SCH_PENS_I					, 0 )			AS SCH_PENS_TARGET_I		--다 공적연금보험료공제-사립학교교직원연금 대상금액
		 ,  ISNULL(A.SCH_PENS_I					, 0 )			AS SCH_PENS_I				--다 공적연금보험료공제-사립학교교직원연금 공제금액
		 ,  ISNULL(F.POST_PENS_I				, 0 )			AS POST_PENS_TARGET_I		--라 공적연금보험료공제-별정우체국연금 대상금액
		 ,  ISNULL(A.POST_PENS_I				, 0 )			AS POST_PENS_I				--라 공적연금보험료공제-별정우체국연금 공제금액
			--특별소득공제
		 ,  ISNULL(F.MED_PREMINM_I				, 0 ) +
			ISNULL(F.MED_PREMINM_ADD_I			, 0 )			AS MED_PREMINM_TARGET_I		--33.가 건강보험료(노인장기요양보험료포함)대상금액
		 ,  ISNULL(A.MED_PREMINM_I				, 0 )			AS MED_PREMINM_I			--가 건강보험료(노인장기요양보험료포함)공제금액
		 ,  ISNULL(F.HIRE_INSUR_I				, 0 ) +
			ISNULL(F.HIRE_INSUR_ADD_I			, 0 )			AS HIRE_INSUR_TARGET_I		--나 고용보험료 대상금액
		 ,  ISNULL(A.HIRE_INSUR_I				, 0 )			AS HIRE_INSUR_I				--나 고용보험료 공제금액
		 ,  ISNULL(A.HOUS_AMOUNT_I				, 0 )			AS HOUS_AMOUNT_I			--34.가 주택임차차입금원리금상환액(대출기관)
		 ,  ISNULL(A.HOUS_AMOUNT_I_2			, 0 )			AS HOUS_AMOUNT_I_2			--	  주택임차차입금원리금상환액(거주자)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_2		, 0 )			AS MORTGAGE_RETURN_I_2		--나 장기주택저당차입금이자상환액-2011년이전(15년미만)
		 ,  ISNULL(A.MORTGAGE_RETURN_I			, 0 )			AS MORTGAGE_RETURN_I		--	  장기주택저당차입금이자상환액-2011년이전(15년~29년)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_3		, 0 )			AS MORTGAGE_RETURN_I_3		--	  장기주택저당차입금이자상환액-2011년이전(30년이상)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_5		, 0 )			AS MORTGAGE_RETURN_I_5		--	  2012년 이후-고정금리비거치상환대출(1500만원한도)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_4		, 0 )			AS MORTGAGE_RETURN_I_4		--	  2012년 이후-그밖의 대출(500만원한도)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_6		, 0 )			AS MORTGAGE_RETURN_I_6		--	  2015년 이후-15년이상(고정금리이면서 비거치상환)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_7		, 0 )			AS MORTGAGE_RETURN_I_7		--	  2015년 이후-15년이상(고정금리이거나 비거치상환)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_8		, 0 )			AS MORTGAGE_RETURN_I_8		--	  2015년 이후-15년이상(그밖의대출)
		 ,  ISNULL(A.MORTGAGE_RETURN_I_9		, 0 )			AS MORTGAGE_RETURN_I_9		--	  2015년 이후-10년이상(고정금리이거나 비거치상환)
			--35.기부금(이월분)
		 ,  ISNULL(A.GIFT_DED_I					, 0 )			AS GIFT_DED_I				--35.기부금(이월분)
			--36.계
		 ,  ISNULL(A.MED_PREMINM_I				, 0 ) +
			ISNULL(A.HIRE_INSUR_I				, 0 ) +
			ISNULL(A.HOUS_AMOUNT_I				, 0 ) +
			ISNULL(A.HOUS_AMOUNT_I_2			, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_2		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I			, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_3		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_5		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_4		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_6		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_7		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_8		, 0 ) +
			ISNULL(A.MORTGAGE_RETURN_I_9		, 0 ) +
			ISNULL(A.GIFT_DED_I					, 0 )			AS STD_DED_I_1				--36.계
			--37.차감소득금액
		 ,  ISNULL(A.DED_INCOME_I				, 0 )			AS DED_INCOME_I				--37.차감근로소득
			--그밖의소득공제
		 ,  ISNULL(A.PRIV_PENS_I				, 0 )			AS PRIV_PENS_I				--38.개인연금저축소득공제
		 ,  ISNULL(A.COMP_PREMINUM_DED_I		, 0 )			AS COMP_PREMINUM_DED_I		--39.소기업,소상공인공제부금소득공제
		 ,  ISNULL(A.HOUS_BU_AMT				, 0 )			AS HOUS_BU_AMT				--40.가 청약저축
		 ,  ISNULL(A.HOUS_BU_AMOUNT_I			, 0 )			AS HOUS_BU_AMOUNT_I			--나 주택청약종합저축
		 ,  ISNULL(A.HOUS_WORK_AMT				, 0 )			AS HOUS_WORK_AMT			--다 근로자주택마련저축
		 ,  ISNULL(A.INVESTMENT_DED_I			, 0 )			AS INVESTMENT_DED_I			--41.투자조합출자 등
		 ,  ISNULL(A.CARD_DED_I					, 0 )			AS CARD_DED_I				--42.신용카드 등 사용액
		 ,  ISNULL(A.STAFF_STOCK_DED_I			, 0 )			AS STAFF_STOCK_DED_I		--43.우리사주조합출연금
		 ,  ISNULL(A.EMPLOY_WORKER_DED_I		, 0 )			AS EMPLOY_WORKER_DED_I		--44.고용유지중소기업근로자
		 ,  ISNULL(A.LONG_INVEST_STOCK_DED_I	, 0 )			AS LONG_INVEST_STOCK_DED_I	--45.장기집합투자증권저축
		 ,  ISNULL(A.PRIV_PENS_I				, 0 ) +
			ISNULL(A.COMP_PREMINUM_DED_I		, 0 ) +
			ISNULL(A.HOUS_BU_AMT				, 0 ) +
			ISNULL(A.HOUS_BU_AMOUNT_I			, 0 ) +
			ISNULL(A.HOUS_WORK_AMT				, 0 ) +
			ISNULL(A.INVESTMENT_DED_I			, 0 ) +
			ISNULL(A.CARD_DED_I					, 0 ) +
			ISNULL(A.STAFF_STOCK_DED_I			, 0 ) +
			ISNULL(A.EMPLOY_WORKER_DED_I		, 0 ) +
			ISNULL(A.LONG_INVEST_STOCK_DED_I	, 0 )			AS ETC_INCOME_DED_I			--46.그밖의소득공제계
			--특별공제종합한도초과액
		 ,  ISNULL(A.OVER_INCOME_DED_LMT		, 0 )			AS OVER_INCOME_DED_LMT		--47.소득공제 종합한도 초과액
			--종합소득과세표준
		 ,  ISNULL(A.TAX_STD_I					, 0 )			AS TAX_STD_I				--48.종합소득과세표준
			--산출세액
		 ,  ISNULL(A.COMP_TAX_I					, 0 )			AS COMP_TAX_I				--49.산출세액
			--세액감면
		 ,  ISNULL(A.INCOME_REDU_I				, 0 )			AS INCOME_REDU_I			--50.소득세법
		 ,  ISNULL(A.SKILL_DED_I				, 0 ) +
			ISNULL(A.MANAGE_RESULT_REDU_I		, 0 ) +
			ISNULL(A.CORE_COMPEN_FUND_REDU_I	, 0 ) +
			ISNULL(A.RETURN_WORKER_REDU_I		, 0 )			AS SKILL_DED_I2				--51.조세특례제한법(52제외)- 외국인기술공제
		 ,  ISNULL(A.YOUTH_DED_I				, 0 )			AS YOUTH_DED_I2				--52.조세특례제한법 제30조 - 중소기업청년소득세감면금액
		 ,  ISNULL(A.TAXES_REDU_I				, 0 )			AS TAXES_REDU_I				--53.조세조약
																							--54.세액감면계(레포트에서계산)
		 ,  ISNULL(A.IN_TAX_DED_I				, 0 )			AS IN_TAX_DED_I				--55.근로소득 
		 ,  ISNULL(A.CHILD_TAX_DED_I			, 0 )			AS CHILD_TAX_DED_I			--56.자녀-공제대상자녀
		 ,  ISNULL(A.BRING_CHILD_NUM			, 0 )			AS MANY_CHILD_NUM			--		(명)
		 ,  ISNULL(A.BIRTH_ADOPT_I				, 0 )			AS BIRTH_ADOPT_I			--자녀-출산입양자
		 ,  ISNULL(A.BIRTH_ADOPT_NUM			, 0 )			AS BIRTH_ADOPT_NUM			--		(명)
			--연금계좌소득공제
		 ,  ISNULL(A.SCI_DEDUC_I				, 0 )			AS SCI_DEDUC_I				--57.(공제대상)과학기술인공제
		 ,  ISNULL(A.SCI_TAX_DED_I				, 0 ) +
			ISNULL(A.SCI_TAX_DED_I1				, 0 )			AS SCI_TAX_DED_I			--(세액공제)과학기술인공제
		 ,  ISNULL(A.RETIRE_PENS_I				, 0 )			AS RETIRE_PENS_I			--58.(공제대상)근로자퇴직급여보장법
		 ,  ISNULL(A.RETIRE_TAX_DED_I			, 0 ) +
			ISNULL(A.RETIRE_TAX_DED_I1			, 0 )			AS RETIRE_TAX_DED_I			--(세액공제)과학기술인공제
		 ,  ISNULL(A.PENS_I						, 0 )			AS PENS_I					--59.(공제대상)연금저축
		 ,  ISNULL(A.PENS_TAX_DED_I1			, 0 ) +
			ISNULL(A.PENS_TAX_DED_I				, 0 )			AS PENS_TAX_DED_I1			--(세액공제)연금저축
			--특별세액공제
		 ,  ISNULL(A.ETC_INSUR_I				, 0 )			AS ETC_INSUR_I				--60.(공제대상)보장성보험
		 ,  ISNULL(A.ETC_INSUR_TAX_DED_I		, 0 )			AS ETC_INSUR_TAX_DED_I		--(세액공제)보장성보험
		 ,  ISNULL(A.DEFORM_INSUR_I				, 0 )			AS DEFORM_INSUR_I			--(공제대상)장애인전용보장성보험
		 ,  ISNULL(A.DEFORM_INSUR_TAX_DED_I		, 0 )			AS DEFORM_INSUR_TAX_DED_I	--(세액공제)장애인전용보장성보험
		 ,  ISNULL(A.MED_DED_I					, 0 )			AS MED_DED_I				--61.(공제대상)의료비
		 ,  ISNULL(A.MED_TAX_DED_I				, 0 )			AS MED_TAX_DED_I			--(세액공제)의료비
		 ,  ISNULL(A.EDUC_DED_I					, 0 )			AS EDUC_DED_I				--62.(공제대상)교육비
		 ,  ISNULL(A.EDUC_TAX_DED_I				, 0 )			AS EDUC_TAX_DED_I			--(세액공제)교육비
		 ,  ISNULL(A.POLICY_INDED_DED_AMT		, 0 )			AS POLICY_INDED_DED_AMT		--63.가 (공제대상)정치자금기부금-10만원이하
		 ,  ISNULL(A.POLICY_INDED_TAX_DED_I		, 0 )			AS POLICY_INDED_TAX_DED_I	--	  (세액공제)정치자금기부금-10만원이하
		 ,  ISNULL(A.POLICY_GIFT_DED_AMT		, 0 )			AS POLICY_GIFT_DED_AMT		--	  (공제대상)정치자금기부금-10만원초과
		 ,  ISNULL(A.POLICY_GIFT_TAX_DED_I		, 0 )			AS POLICY_GIFT_TAX_DED_I	--	  (세액공제)정치자금기부금-10만원초과
		 ,  ISNULL(A.LEGAL_DED_AMT				, 0 )			AS LEGAL_DED_AMT			--   나 (공제대상)법정기부금
		 ,  ISNULL(A.LEGAL_GIFT_TAX_DED_I		, 0 )			AS LEGAL_GIFT_TAX_DED_I		--	  (세액공제)법정기부금
		 ,  ISNULL(A.STAFF_DED_AMT				, 0 )			AS STAFF_DED_AMT			--   다 (공제대상)우리사주조합기부금
		 ,  ISNULL(A.STAFF_GIFT_TAX_DED_I		, 0 )			AS STAFF_GIFT_TAX_DED_I		--	  (세액공제)우리사주조합기부금
		 ,  CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0
				 ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT
							THEN (CASE WHEN A.APPOINT_GIFT_TAX_DED_I = 0 THEN 0 ELSE A.APPOINT_ASS_TAX_DED_AMT					 END)
							ELSE (CASE WHEN A.APPOINT_GIFT_TAX_DED_I = 0 THEN 0 ELSE A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I END)
					   END)
			END													AS APPOINT_ASS_TAX_DED_AMT	--   라 (공제대상)지정기부금(종교단체외)
		 ,  ISNULL(A.APPOINT_GIFT_TAX_DED_I, 0)					AS APPOINT_GIFT_TAX_DED_I	--	  (세액공제)지정기부금(종교단체외)
		 ,  CASE WHEN A.STD_TAX_DED_I &gt; 0 THEN 0
				ELSE (CASE WHEN A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I &gt;= A.APPOINT_ASS_TAX_DED_AMT
						   THEN 0
						   ELSE (CASE WHEN A.ASS_GIFT_TAX_DED_I = 0 THEN 0
									  ELSE A.APPOINT_ASS_TAX_DED_AMT - (A.APPOINT_GIFT_I_PREV_14 + A.APPOINT_GIFT_I)
								 END)
					  END)
			END													AS APPOINT_ASS_TAX_DED_AMT2	--   마 (공제대상) 지정기부금(종교단체)
		 ,  ISNULL(A.ASS_GIFT_TAX_DED_I			, 0 )			AS APPOINT_GIFT_TAX_DED_I2	--	  (세액공제) 지정기부금(종교단체)
		 ,  ISNULL(A.STD_TAX_DED_I				, 0 )			AS STD_TAX_DED_I			--65.표준세액공제
		 ,  ISNULL(A.NAP_TAX_DED_I				, 0 )			AS NAP_TAX_DED_I			--66.납세조합공제
		 ,  ISNULL(A.HOUS_INTER_I				, 0 )			AS HOUS_INTER_I				--67.주택차입금
		 ,  ISNULL(A.OUTSIDE_INCOME_I			, 0 )			AS OUTSIDE_INCOME_I			--68.외국납부
		 ,  (CASE WHEN ISNULL(F.MON_RENT_I, 0) &gt;= 7500000 THEN 7500000
				  ELSE ISNULL(F.MON_RENT_I, 0)
			 END)												AS MON_RENT_I_1				--69.(공제대상)월세액
		 ,  ISNULL(A.MON_RENT_I					, 0 )			AS MON_RENT_I_2				--(세액공제)월세액
		 
		 ,  ISNULL(A.ACTUAL_TAX_RATE			, 0 )			AS ACTUAL_TAX_RATE			--81.실효세율

			/*부양가족 소득공제 명세 합계*/
		 ,  I.SUPP_CNT
			--보험료
		 ,  ISNULL(A.MED_PREMINM_I				, 0 )			AS SUPP_TOT_INSUR1			--(기타)건강
		 ,  ISNULL(A.HIRE_INSUR_I				, 0 )			AS SUPP_TOT_INSUR2			--(기타)고용
		 ,  ISNULL(I.SUPP_TOT_ETC_INSUR1		, 0 )			AS SUPP_TOT_ETC_INSUR1		--(국세청)보장성 
		 ,  ISNULL(I.SUPP_TOT_ETC_INSUR2		, 0 )			AS SUPP_TOT_ETC_INSUR2		--(기타) 보장성 
		 ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR1		, 0 )			AS SUPP_TOT_DEFORM_INSUR1	--(국세청)장애인전용보장성
		 ,  ISNULL(I.SUPP_TOT_DEFORM_INSUR2		, 0 )			AS SUPP_TOT_DEFORM_INSUR2	--(기타)장애인전용보장성
			--의료비
		 ,  ISNULL(I.SUPP_TOT_MED1				, 0 )			AS SUPP_TOT_MED1			--(국세청)일반
		 ,  ISNULL(I.SUPP_TOT_MED2				, 0 )			AS SUPP_TOT_MED2			--(기타)  일반
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED1		, 0 )			AS SUPP_TOT_SURGERY_MED1	--(국세청)난임
		 ,  ISNULL(I.SUPP_TOT_SURGERY_MED2		, 0 )			AS SUPP_TOT_SURGERY_MED2	--(기타)  난임
		 ,  ISNULL(I.SUPP_TOT_DEFORM_MED1		, 0 )			AS SUPP_TOT_DEFORM_MED1		--(국세청)장애인/건보산정특례
		 ,  ISNULL(I.SUPP_TOT_DEFORM_MED2		, 0 )			AS SUPP_TOT_DEFORM_MED2		--(기타)  장애인/건보산정특례
		 ,  ISNULL(I.SUPP_TOT_MED_INSUR_I1		, 0 )			AS SUPP_TOT_MED_INSUR_I1	--(국세청)실손의료보험금
		 ,  ISNULL(I.SUPP_TOT_MED_INSUR_I2		, 0 )			AS SUPP_TOT_MED_INSUR_I2	--(기타)  실손의료보험금
			--교육비
		 ,  ISNULL(I.SUPP_TOT_EDU1				, 0 )			AS SUPP_TOT_EDU1			--(국세청)일반
		 ,  ISNULL(I.SUPP_TOT_EDU2				, 0 )			AS SUPP_TOT_EDU2			--(기타)  일반
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU1		, 0 )			AS SUPP_TOT_DEFORM_EDU1		--(국세청)장애인특수교육
		 ,	ISNULL(I.SUPP_TOT_DEFORM_EDU2		, 0 )			AS SUPP_TOT_DEFORM_EDU2		--(기타)  장애인특수교육
			--신용카드등 사용액
		 ,  ISNULL(I.SUPP_TOT_CARD1				, 0 )			AS SUPP_TOT_CARD1			--(국세청)신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_A1			, 0 )			AS SUPP_TOT_CARD_A1			--(국세청)신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_B1			, 0 )			AS SUPP_TOT_CARD_B1			--(국세청)신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_C1			, 0 )			AS SUPP_TOT_CARD_C1			--(국세청)신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD2				, 0 )			AS SUPP_TOT_CARD2			--(기타)  신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_A2			, 0 )			AS SUPP_TOT_CARD_A2			--(기타)  신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_B2			, 0 )			AS SUPP_TOT_CARD_B2			--(기타)  신용카드
		 ,  ISNULL(I.SUPP_TOT_CARD_C2			, 0 )			AS SUPP_TOT_CARD_C2			--(기타)  신용카드
		 ,  ISNULL(I.SUPP_TOT_CASH1				, 0 )			AS SUPP_TOT_CASH1			--(국세청)현금영수증
		 ,  ISNULL(I.SUPP_TOT_CASH_A1			, 0 )			AS SUPP_TOT_CASH_A1			--(국세청)현금영수증
		 ,  ISNULL(I.SUPP_TOT_CASH_B1			, 0 )			AS SUPP_TOT_CASH_B1			--(국세청)현금영수증
		 ,  ISNULL(I.SUPP_TOT_CASH_C1			, 0 )			AS SUPP_TOT_CASH_C1			--(국세청)현금영수증
		 ,  ISNULL(I.SUPP_TOT_DEBIT1			, 0 )			AS SUPP_TOT_DEBIT1			--(국세청)직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_A1			, 0 )			AS SUPP_TOT_DEBIT_A1		--(국세청)직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_B1			, 0 )			AS SUPP_TOT_DEBIT_B1		--(국세청)직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_C1			, 0 )			AS SUPP_TOT_DEBIT_C1		--(국세청)직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT2			, 0 )			AS SUPP_TOT_DEBIT2			--(기타)  직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_A2			, 0 )			AS SUPP_TOT_DEBIT_A2		--(기타)  직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_B2			, 0 )			AS SUPP_TOT_DEBIT_B2		--(기타)  직불카드 등
		 ,  ISNULL(I.SUPP_TOT_DEBIT_C2			, 0 )			AS SUPP_TOT_DEBIT_C2		--(기타)  직불카드 등
		 ,  ISNULL(I.BOOK_CONCERT_CARD1			, 0) +
			ISNULL(I.BOOK_CONCERT_CASH1			, 0) +	
			ISNULL(I.BOOK_CONCERT_DEBIT1		, 0)			AS SUPP_TOT_BOOK1			--(국세청)도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_A1		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_A1		, 0) +	
			ISNULL(I.BOOK_CONCERT_DEBIT_A1		, 0)			AS SUPP_TOT_BOOK_A1			--(국세청)도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_B1		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_B1		, 0) +	
			ISNULL(I.BOOK_CONCERT_DEBIT_B1		, 0)			AS SUPP_TOT_BOOK_B1			--(국세청)도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_C1		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_C1		, 0) +	
			ISNULL(I.BOOK_CONCERT_DEBIT_C1		, 0)			AS SUPP_TOT_BOOK_C1			--(국세청)도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD2			, 0) +
			ISNULL(I.BOOK_CONCERT_CASH2			, 0) +
			ISNULL(I.BOOK_CONCERT_DEBIT2		, 0)			AS SUPP_TOT_BOOK2			--(기타)  도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_A2		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_A2		, 0) +
			ISNULL(I.BOOK_CONCERT_DEBIT_A2		, 0)			AS SUPP_TOT_BOOK_A2			--(기타)  도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_B2		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_B2		, 0) +
			ISNULL(I.BOOK_CONCERT_DEBIT_B2		, 0)			AS SUPP_TOT_BOOK_B2			--(기타)  도서공연사용분
		 ,  ISNULL(I.BOOK_CONCERT_CARD_C2		, 0) +
			ISNULL(I.BOOK_CONCERT_CASH_C2		, 0) +
			ISNULL(I.BOOK_CONCERT_DEBIT_C2		, 0)			AS SUPP_TOT_BOOK_C2			--(기타)  도서공연사용분
		 ,  ISNULL(I.SUPP_TOT_TRA1				, 0 )			AS SUPP_TOT_TRA1			--(국세청)전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_A1			, 0 )			AS SUPP_TOT_TRA1_A			--(국세청)전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_B1			, 0 )			AS SUPP_TOT_TRA1_B			--(국세청)전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_C1			, 0 )			AS SUPP_TOT_TRA1_C			--(국세청)전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA2				, 0 )			AS SUPP_TOT_TRA2			--(기타)  전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_A2			, 0 )			AS SUPP_TOT_TRA2_A			--(기타)  전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_B2			, 0 )			AS SUPP_TOT_TRA2_B			--(기타)  전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRA_C2			, 0 )			AS SUPP_TOT_TRA2_C			--(기타)  전통시장사용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC1			, 0 )			AS SUPP_TOT_TRAFFIC1		--(국세청)대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_A1		, 0 )			AS SUPP_TOT_TRAFFIC1_A		--(국세청)대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_B1		, 0 )			AS SUPP_TOT_TRAFFIC1_B		--(국세청)대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_C1		, 0 )			AS SUPP_TOT_TRAFFIC1_C		--(국세청)대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC2			, 0 )			AS SUPP_TOT_TRAFFIC2		--(기타)  대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_A2		, 0 )			AS SUPP_TOT_TRAFFIC2_A		--(기타)  대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_B2		, 0 )			AS SUPP_TOT_TRAFFIC2_B		--(기타)  대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_TRAFFIC_C2		, 0 )			AS SUPP_TOT_TRAFFIC2_C		--(기타)  대중교통이용분
		 ,  ISNULL(I.SUPP_TOT_GIFT1				, 0 )			AS SUPP_TOT_GIFT1			--(국세청)기부금
		 ,  ISNULL(I.SUPP_TOT_GIFT2				, 0 )			AS SUPP_TOT_GIFT2			--(기타)  기부금
		 ,  ISNULL(I.DEFAULT_DED_SUM			, 0 )			AS DEFAULT_DED_SUM
		 ,  ISNULL(A.MANY_CHILD_NUM				, 0 )			AS MANY_CHILD_DED_SUM
		 ,  ISNULL(I.BRING_CHILD_DED_SUM		, 0 )			AS BRING_CHILD_DED_SUM
		 ,  ISNULL(I.WOMAN_DED_SUM				, 0 )			AS WOMAN_DED_SUM
		 ,  ISNULL(I.ONE_PARENT_DED_SUM			, 0 )			AS ONE_PARENT_DED_SUM
		 ,  ISNULL(I.OLD_DED_SUM				, 0 )			AS OLD_DED_SUM
		 ,  ISNULL(I.BIRTH_ADOPT_DED_SUM		, 0 )			AS BIRTH_ADOPT_DED_SUM
		 ,  ISNULL(I.DEFORM_DED_SUM				, 0 )			AS DEFORM_DED_SUM
	FROM		   HAD600T AS A		WITH (NOLOCK)
		INNER JOIN HUM100T AS D		WITH (NOLOCK) ON D.COMP_CODE	 = A.COMP_CODE
												 AND D.PERSON_NUMB	 = A.PERSON_NUMB
		INNER JOIN BOR120T AS C		WITH (NOLOCK) ON C.COMP_CODE	 = D.COMP_CODE
												 AND C.DIV_CODE		 = D.SECT_CODE
		INNER JOIN BOR100T AS E		WITH (NOLOCK) ON E.COMP_CODE	 = A.COMP_CODE
		LEFT  JOIN HAD400T AS F		WITH (NOLOCK) ON F.COMP_CODE	 = A.COMP_CODE
												 AND F.YEAR_YYYY	 = A.YEAR_YYYY
												 AND F.PERSON_NUMB	 = A.PERSON_NUMB
		LEFT  JOIN HAD500T AS B		WITH (NOLOCK) ON B.COMP_CODE	 = A.COMP_CODE
												 AND B.YEAR_YYYY	 = A.YEAR_YYYY
												 AND B.PERSON_NUMB	 = A.PERSON_NUMB
		LEFT  JOIN HPA600T AS G		WITH (NOLOCK) ON G.COMP_CODE	 = A.COMP_CODE
												 AND G.PAY_YYYYMM LIKE A.YEAR_YYYY + '%'
												 AND G.PERSON_NUMB	 = A.PERSON_NUMB
		LEFT  JOIN HAD700T AS H		WITH (NOLOCK) ON H.COMP_CODE	 = A.COMP_CODE
												 AND H.SUPP_DATE  LIKE A.YEAR_YYYY + '%'
												 AND H.PERSON_NUMB	 = A.PERSON_NUMB
		LEFT  JOIN	(
						SELECT COMP_CODE
							 , YEAR_YYYY
							 , PERSON_NUMB
							 , COUNT(DISTINCT unilite.fnCipherDecrypt(REPRE_NUM, ''))																AS SUPP_CNT
							 --국세청
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0)	ELSE 0 END	ELSE 0 END)		AS SUPP_TOT_ETC_INSUR1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0)	ELSE 0 END	ELSE 0 END)		AS SUPP_TOT_DEFORM_INSUR1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(MED_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_MED1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SURGERY_MED_I			, 0)									ELSE 0 END)		AS SUPP_TOT_SURGERY_MED1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(SERIOUS_SICK_MED_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEFORM_MED1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(REAL_LOSS_MED_INSUR_I	, 0)									ELSE 0 END)		AS SUPP_TOT_MED_INSUR_I1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(EDU_USE_I				+ FIELD_EDUC_I +
							 										 EDU_PRINCIPAL_RTN_I	+ UNIFORM_USE_I		, 0)				ELSE 0 END)		AS SUPP_TOT_EDU1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEFORM_EDU_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEFORM_EDU1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_CARD1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I_A			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I_B			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CARD_USE_I_C			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_CASH1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I_A			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I_B			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(CASH_USE_I_C			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(DEBIT_CARD_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CARD_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_DEBIT_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(BOOK_CONCERT_CASH_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRA_MARKET_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I			, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_A1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_B1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(TRAFFIC_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_C1
							 , SUM(CASE SEQ_NUM WHEN '1' THEN ISNULL(GIFT_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_GIFT1
							 --기타
							 , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '1' THEN ISNULL(INSUR_USE_I, 0)	ELSE 0 END	ELSE 0 END)		AS SUPP_TOT_ETC_INSUR2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN CASE WHEN INSUR_CODE = '2' THEN ISNULL(INSUR_USE_I, 0)	ELSE 0 END	ELSE 0 END)		AS SUPP_TOT_DEFORM_INSUR2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(MED_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_MED2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SURGERY_MED_I			, 0)									ELSE 0 END)		AS SUPP_TOT_SURGERY_MED2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(SERIOUS_SICK_MED_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEFORM_MED2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(REAL_LOSS_MED_INSUR_I	, 0)									ELSE 0 END)		AS SUPP_TOT_MED_INSUR_I2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(EDU_USE_I				+ FIELD_EDUC_I +
							 										 EDU_PRINCIPAL_RTN_I	+ UNIFORM_USE_I		, 0)				ELSE 0 END)		AS SUPP_TOT_EDU2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEFORM_EDU_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEFORM_EDU2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_CARD2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I_A			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I_B			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CARD_USE_I_C			, 0)									ELSE 0 END)		AS SUPP_TOT_CARD_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_CASH2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I_A			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I_B			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(CASH_USE_I_C			, 0)									ELSE 0 END)		AS SUPP_TOT_CASH_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(DEBIT_CARD_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_DEBIT_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CARD_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CARD_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_DEBIT_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_DEBIT_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I_A	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I_B	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(BOOK_CONCERT_CASH_I_C	, 0)									ELSE 0 END)		AS BOOK_CONCERT_CASH_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRA_MARKET_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_TRA_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I			, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I_A		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_A2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I_B		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_B2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(TRAFFIC_USE_I_C		, 0)									ELSE 0 END)		AS SUPP_TOT_TRAFFIC_C2
							 , SUM(CASE SEQ_NUM WHEN '2' THEN ISNULL(GIFT_USE_I				, 0)									ELSE 0 END)		AS SUPP_TOT_GIFT2
							 --인적공제수
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN DEFAULT_DED_YN		= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS DEFAULT_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN MANY_CHILD_DED_YN	= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS MANY_CHILD_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN BRING_CHILD_DED_YN	= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS BRING_CHILD_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN WOMAN_DED_YN		= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS WOMAN_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN ONE_PARENT_DED_YN	= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS ONE_PARENT_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN OLD_DED_YN			= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS OLD_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN BIRTH_ADOPT_DED_YN	= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS BIRTH_ADOPT_DED_SUM
							 , SUM(CASE SEQ_NUM WHEN '1' THEN CASE WHEN DEFORM_DED_YN		= 'Y' THEN 1	ELSE 0 END				ELSE 0 END)		AS DEFORM_DED_SUM
						  FROM HAD430T WITH (NOLOCK)
						 WHERE COMP_CODE	= @COMP_CODE
						   AND YEAR_YYYY	= @YEAR_YYYY
						 GROUP BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
					) AS I						 ON I.COMP_CODE		= A.COMP_CODE
												AND I.YEAR_YYYY		= A.YEAR_YYYY
												AND I.PERSON_NUMB	= A.PERSON_NUMB
		LEFT  JOIN	(
						SELECT X.COMP_CODE
							 , X.YEAR_YYYY
							 , X.PERSON_NUMB
							 --국외근로
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')												THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_M01
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')												THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_M01
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')												THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_M01
							 --야간근로수당
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_O01
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'															THEN P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_O01
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'O01'															THEN P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_O01
							 --출산보육수당
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_Q01
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_Q01
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Q01'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_Q01
							 --연구보조비
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')								THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_4
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')								THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_4
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')								THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_4
							 --비과세학자금
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_5
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_5
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'G01'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_5
							 --취재수당
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_6
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_6
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'H11'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_6
							 --그밖의제출수당
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30')	THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_19
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30')	THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_19
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('H01','H05','H14','H15','H12','H13','H16','H17','I01','K01','R10','R11','S01','U01','Y02','Y03','Y04','T30')	THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_19
							 --수련보조수당
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_Y22
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_Y22
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'Y22'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_Y22
							 --중소기업 핵심인력 성과보상기금
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'															THEN X.NON_TAX_EMPTION_I	ELSE 0 END)		AS NON_TAX_EMPTION_I_T40
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_NON_TAX_EMPTION_I_T40
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T40'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_NON_TAX_EMPTION_I_T40
							 --외국인기술자
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_REDUCE_TAX_T01
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T01'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_REDUCE_TAX_T01
							 --청년세액감면
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('T11','T12','T13')												THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_REDUCE_TAX_T10
							 , SUM(CASE WHEN X.NONTAX_CODE IN ('T11','T12','T13')												THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_REDUCE_TAX_T10
							 --조세조약
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'															THEN X.P1_NON_TAX_EMPTION_I	ELSE 0 END)		AS P1_REDUCE_TAX_T20
							 , SUM(CASE WHEN X.NONTAX_CODE  =  'T20'															THEN X.P2_NON_TAX_EMPTION_I	ELSE 0 END)		AS P2_REDUCE_TAX_T20
						  FROM (
								-- 연말정산비과세소득
								SELECT A.COMP_CODE
									 , A.YEAR_YYYY
									 , A.PERSON_NUMB
									 , A.NONTAX_CODE
									 , SUM(ISNULL(A.NON_TAX_EMPTION_I	, 0))	AS NON_TAX_EMPTION_I
									 , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0))	AS P1_NON_TAX_EMPTION_I
									 , SUM(ISNULL(A.P2_NON_TAX_EMPTION_I, 0))	AS P2_NON_TAX_EMPTION_I
								  FROM HAD610T A WITH (NOLOCK)
								 WHERE A.COMP_CODE	= @COMP_CODE
								   AND A.YEAR_YYYY	= @YEAR_YYYY
								 GROUP BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

								UNION  ALL

								-- 주식매수선택권행사이익 등록
								SELECT A.COMP_CODE 
									 , LEFT(A.PAY_YYYYMM, 4)					AS YEAR_YYYY
									 , A.PERSON_NUMB
									 , A.NONTAX_CODE
									 , SUM(ISNULL(A.TAX_EXEMPTION_I		, 0))	AS NON_TAX_EMPTION_I
									 , ISNULL(B1.TAX_EXEMPTION_I		, 0)	AS P1_NON_TAX_EMPTION_I
									 , ISNULL(B2.TAX_EXEMPTION_I		, 0)	AS P2_NON_TAX_EMPTION_I
								  FROM				HPA810T A	WITH (NOLOCK)
										LEFT  JOIN	HAD510T B1	WITH (NOLOCK) ON B1.COMP_CODE	= A.COMP_CODE
																			 AND B1.YEAR_YYYY	= LEFT(A.PAY_YYYYMM, 4)
																			 AND B1.PERSON_NUMB	= A.PERSON_NUMB
																			 AND B1.NONTAX_CODE	= A.NONTAX_CODE
										LEFT  JOIN	HAD520T B2	WITH (NOLOCK) ON B2.COMP_CODE	= A.COMP_CODE
																			 AND B2.YEAR_YYYY	= LEFT(A.PAY_YYYYMM, 4)
																			 AND B2.PERSON_NUMB	= A.PERSON_NUMB
																			 AND B2.NONTAX_CODE	= A.NONTAX_CODE
								 WHERE A.COMP_CODE			 = @COMP_CODE
								   AND LEFT(A.PAY_YYYYMM, 4) = @YEAR_YYYY
								 GROUP BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

								UNION ALL

								-- 우리사주조합인출금 등록
								SELECT A.COMP_CODE 
									 , LEFT(A.PAY_YYYYMM, 4)					AS YEAR_YYYY
									 , A.PERSON_NUMB
									 , A.NONTAX_CODE
									 , SUM(ISNULL(A.TAX_EXEMPTION_I		, 0))	AS NON_TAX_EMPTION_I
									 , ISNULL(B1.TAX_EXEMPTION_I		, 0)	AS P1_NON_TAX_EMPTION_I
									 , ISNULL(B2.TAX_EXEMPTION_I		, 0)	AS P2_NON_TAX_EMPTION_I
								  FROM				HPA820T A	WITH (NOLOCK)
										LEFT  JOIN	HAD510T B1	WITH (NOLOCK) ON B1.COMP_CODE	= A.COMP_CODE
																			 AND B1.YEAR_YYYY	= LEFT(A.PAY_YYYYMM, 4)
																			 AND B1.PERSON_NUMB	= A.PERSON_NUMB
																			 AND B1.NONTAX_CODE	= A.NONTAX_CODE
										LEFT  JOIN	HAD520T B2	WITH (NOLOCK) ON B2.COMP_CODE	= A.COMP_CODE
																			 AND B2.YEAR_YYYY	= LEFT(A.PAY_YYYYMM, 4)
																			 AND B2.PERSON_NUMB	= A.PERSON_NUMB
																			 AND B2.NONTAX_CODE	= A.NONTAX_CODE
								 WHERE A.COMP_CODE			 = @COMP_CODE
								   AND LEFT(A.PAY_YYYYMM, 4) = @YEAR_YYYY
								 GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
					) X
				 GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
					  )	AS L				 ON L.COMP_CODE	  = A.COMP_CODE
												  AND L.YEAR_YYYY	  = A.YEAR_YYYY
												  AND L.PERSON_NUMB	= A.PERSON_NUMB
		LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE	 = D.COMP_CODE
												  AND M1.MAIN_CODE	 = 'B012'
												  AND M1.SUB_CODE	  = D.NATION_CODE
		LEFT  JOIN BSA100T AS M3  WITH (NOLOCK) ON M3.COMP_CODE	 = D.COMP_CODE
												  AND M3.MAIN_CODE	 = 'B012'
												  AND M3.SUB_CODE	  = D.LIVE_CODE
		LEFT  JOIN ABA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE	 = @COMP_CODE
												  AND M2.BASE_CODE	 = '01'
		
	WHERE	A.COMP_CODE		 = @COMP_CODE
	  AND	A.YEAR_YYYY		 = @YEAR_YYYY
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	  AND	D.SECT_CODE		 = #{DIV_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
	  AND	A.HALFWAY_TYPE	 = #{RETR_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	  AND	D.PAY_CODE		 = #{PAY_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
	  AND	D.PAY_PROV_FLAG	 = #{PAY_PROV_FLAG}
	</if>
	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	  AND	A.PERSON_NUMB	 = #{PERSON_NUMB}
	</if>
	<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
	  AND	D.DEPT_CODE		&gt;= #{FR_DEPT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
	  AND	D.DEPT_CODE		&lt;= #{TO_DEPT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(PAYFRYYMM)">
	  AND ((G.pay_yyyymm	&gt;= #{PAYFRYYMM}) OR (LEFT(H.SUPP_DATE, 6)	&gt;= #{PAYFRYYMM}))
	</if>
	<if test="@foren.Ognl@isNotEmpty(PAYTOYYMM)">
	  AND ((G.pay_yyyymm	&lt;= #{PAYTOYYMM}) OR (LEFT(H.SUPP_DATE, 6)	&lt;= #{PAYTOYYMM}))
	</if>
	<if test="@foren.Ognl@isNotEmpty(FRRETIREDATE)">
	  AND	D.RETR_DATE		&gt;= #{FRRETIREDATE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(TORETIREDATE)">
	  AND	D.RETR_DATE		&lt;= #{TORETIREDATE}
	</if>
	ORDER BY D.DIV_CODE, D.DEPT_CODE, D.POST_CODE, D.NAME, A.PERSON_NUMB
END
	</select>

	<select id="had840rkrServiceImpl.selectList2020_Query2" parameterType="Map" resultType="rMap">
		--had840rkr.Chad840rkr[fnHad840nQ2019] Query2
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2019_1'))
				DROP TABLE #HAD430T2019_1
			
			SELECT A.YEAR_YYYY																	AS YEAR_YYYY1
				 , A.PERSON_NUMB																AS PERSON_NUMB1
				 , A.IN_FORE																	AS IN_FORE1
				 , A.REL_CODE																	AS REL_CODE1
				 , A.FAMILY_NAME																AS FAMILY_NAME1
				 , unilite.fnCipherDecrypt(A.REPRE_NUM		, '')								AS REPRE_NUM1
				 , CASE WHEN ISNULL(A.DEFAULT_DED_YN		, '') = 'Y' THEN '○' ELSE '' END	AS DEFAULT_DED_YN1			--기본공제YN
				 , CASE WHEN ISNULL(A.WOMAN_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS WOMAN_DED_YN1			--부녀자YN
				 , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN		, '') = 'Y' THEN '○' ELSE '' END	AS ONE_PARENT_DED_YN1		--한부모YN
				 , CASE WHEN ISNULL(A.OLD_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS OLD_DED_YN1				--경로우대YN
				 , CASE WHEN ISNULL(A.DEFORM_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS DEFORM_DED_YN1			--장애인YN
				 ,			 ISNULL(A.DEFORM_KIND_CODE		, '')								AS DEFORM_KIND_CODE1		--장애인코드
				 , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN	, '') = 'Y' THEN '○' ELSE '' END	AS BIRTH_ADOPT_DED_YN1		--출산입양YN
				 , CASE WHEN ISNULL(A.BRING_CHILD_DED_YN	, '') = 'Y' THEN '○' ELSE '' END	AS MANY_CHILD_DED_YN1		--자녀YN
				 , A.SEQ_NUM																	AS SEQ_NUM1					--자료구분
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
						THEN ISNULL(M2.MED_PREMINM_I		, 0)
						ELSE 0
				   END																			AS MED_PREMINM_I1			--건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
						THEN ISNULL(M2.HIRE_INSUR_I			, 0)
						ELSE 0
				   END																			AS HIRE_INSUR_I1			--고용보험료
				 , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
						WHEN A.INSUR_CODE = '2' THEN 0
						ELSE ISNULL(A.INSUR_USE_I, 0)
				   END																			AS ETC_USE_I1				--보장성보험료
				 , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
						WHEN A.INSUR_CODE = '1' THEN 0
						ELSE ISNULL(A.INSUR_USE_I, 0)
				   END																			AS DEFORM_USE_I1			--장애인전용보장성보험료
				 , ISNULL(A.MED_USE_I						, 0)								AS MED_USE_I1				--일반의료비
				 , ISNULL(A.SURGERY_MED_I					, 0)								AS SURGERY_MED_I1			--난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I				, 0)								AS SERIOUS_SICK_MED_I1		--장애인/건보산정특례자
				 , ISNULL(A.REAL_LOSS_MED_INSUR_I			, 0)								AS REAL_LOSS_MED_INSUR_I1	-- 실손의료보험료
				 , ISNULL(A.EDU_USE_I			+ A.FIELD_EDUC_I +
						  A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I	, 0)						AS EDU_USE_I1				--일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I				, 0)								AS DEFORM_EDU_USE_I1		--장애인특수교육비
				 , ISNULL(A.CARD_USE_I						, 0)								AS CARD_USE_I1				--신용카드
				 , ISNULL(A.CARD_USE_I_A					, 0)								AS CARD_USE_I_A1			--신용카드
				 , ISNULL(A.CARD_USE_I_B					, 0)								AS CARD_USE_I_B1			--신용카드
				 , ISNULL(A.CARD_USE_I_C					, 0)								AS CARD_USE_I_C1			--신용카드
				 , ISNULL(A.CASH_USE_I						, 0)								AS CASH_USE_I1				--현금영수증
				 , ISNULL(A.CASH_USE_I_A					, 0)								AS CASH_USE_I_A1			--현금영수증
				 , ISNULL(A.CASH_USE_I_B					, 0)								AS CASH_USE_I_B1			--현금영수증
				 , ISNULL(A.CASH_USE_I_C					, 0)								AS CASH_USE_I_C1			--현금영수증
				 , ISNULL(A.DEBIT_CARD_USE_I				, 0)								AS DEBIT_CARD_USE_I1		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_A				, 0)								AS DEBIT_CARD_USE_I_A1		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_B				, 0)								AS DEBIT_CARD_USE_I_B1		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_C				, 0)								AS DEBIT_CARD_USE_I_C1		--직불카드
				 , ISNULL(A.BOOK_CONCERT_CARD_I				, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I				, 0)								AS BOOK_CONCERT_USE_I1		--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_A			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_A			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_A			, 0)								AS BOOK_CONCERT_USE_I_A1	--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_B			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_B			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_B			, 0)								AS BOOK_CONCERT_USE_I_B1	--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_C			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_C			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_C			, 0)								AS BOOK_CONCERT_USE_I_C1	--도서공연사용분
				 , ISNULL(A.TRA_MARKET_USE_I				, 0)								AS TRA_MARKET_USE_I1		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_A				, 0)								AS TRA_MARKET_USE_I_A1		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_B				, 0)								AS TRA_MARKET_USE_I_B1		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_C				, 0)								AS TRA_MARKET_USE_I_C1		--전통시장사용분
				 , ISNULL(A.TRAFFIC_USE_I					, 0)								AS TRAFFIC_USE_I1			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_A					, 0)								AS TRAFFIC_USE_I_A1			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_B					, 0)								AS TRAFFIC_USE_I_B1			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_C					, 0)								AS TRAFFIC_USE_I_C1			--대중교통이용분
				 , ISNULL(A.GIFT_USE_I						, 0)								AS GIFT_USE_I1				--기부금
			INTO			#HAD430T2019_1
			FROM			HAD430T A	WITH (NOLOCK)
				INNER JOIN	HUM100T M1	WITH (NOLOCK) ON M1.COMP_CODE	= A.COMP_CODE
													 AND M1.PERSON_NUMB	= A.PERSON_NUMB
				INNER JOIN	HAD600T M2	WITH (NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
													 AND M2.YEAR_YYYY	= A.YEAR_YYYY
													 AND M2.PERSON_NUMB	= A.PERSON_NUMB
			WHERE	A.COMP_CODE		 = #{S_COMP_CODE}
			  AND	A.YEAR_YYYY		 = #{YEAR_YYYY}
			  AND	A.SEQ_NUM		 = '1'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			  AND	M1.SECT_CODE	 = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			  AND	M1.DEPT_CODE	 = #{TREE_CD}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			  AND	M2.HALFWAY_TYPE	 = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			  AND	M1.PAY_CODE		 = #{PAY_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			  AND	M1.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			  AND	A.PERSON_NUMB	 = #{PERSON_NUMB}
			</if>
			
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD430T2019_2'))
				DROP TABLE #HAD430T2019_2
			
			SELECT A.YEAR_YYYY																	AS YEAR_YYYY2
				 , A.PERSON_NUMB																AS PERSON_NUMB2
				 , A.IN_FORE																	AS IN_FORE2
				 , A.REL_CODE																	AS REL_CODE2
				 , A.FAMILY_NAME																AS FAMILY_NAME2
				 , unilite.fnCipherDecrypt(A.REPRE_NUM		, '')								AS REPRE_NUM2
				 , CASE WHEN ISNULL(A.DEFAULT_DED_YN		, '') = 'Y' THEN '○' ELSE '' END	AS DEFAULT_DED_YN2			--기본공제YN
				 , CASE WHEN ISNULL(A.WOMAN_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS WOMAN_DED_YN2			--부녀자YN
				 , CASE WHEN ISNULL(A.ONE_PARENT_DED_YN		, '') = 'Y' THEN '○' ELSE '' END	AS ONE_PARENT_DED_YN2		--한부모YN
				 , CASE WHEN ISNULL(A.OLD_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS OLD_DED_YN2				--경로우대YN
				 , CASE WHEN ISNULL(A.DEFORM_DED_YN			, '') = 'Y' THEN '○' ELSE '' END	AS DEFORM_DED_YN2			--장애인YN
				 ,			 ISNULL(A.DEFORM_KIND_CODE		, '')								AS DEFORM_KIND_CODE2		--장애인코드
				 , CASE WHEN ISNULL(A.BIRTH_ADOPT_DED_YN	, '') = 'Y' THEN '○' ELSE '' END	AS BIRTH_ADOPT_DED_YN2		--출산입양YN
				 , CASE WHEN ISNULL(A.BRING_CHILD_DED_YN	, '') = 'Y' THEN '○' ELSE '' END	AS MANY_CHILD_DED_YN2		--자녀YN
				 , A.SEQ_NUM																	AS SEQ_NUM2					--자료구분
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
						THEN ISNULL(M2.MED_PREMINM_I		, 0)
						ELSE 0
				   END																			AS MED_PREMINM_I2			--건강보험료
				 , CASE WHEN A.REL_CODE = '0'  AND  A.SEQ_NUM = 2
						THEN ISNULL(M2.HIRE_INSUR_I			, 0)
						ELSE 0
				   END																			AS HIRE_INSUR_I2			--고용보험료
				 , CASE WHEN A.INSUR_CODE = '1' THEN ISNULL(A.INSUR_USE_I, 0)
						WHEN A.INSUR_CODE = '2' THEN 0
						ELSE ISNULL(A.INSUR_USE_I, 0)
				   END																			AS ETC_USE_I2				--보장성보험료
				 , CASE WHEN A.INSUR_CODE = '2' THEN ISNULL(A.INSUR_USE_I, 0)
						WHEN A.INSUR_CODE = '1' THEN 0
						ELSE ISNULL(A.INSUR_USE_I, 0)
				   END																			AS DEFORM_USE_I2			--장애인전용보장성보험료
				 , ISNULL(A.MED_USE_I						, 0)								AS MED_USE_I2				--일반의료비
				 , ISNULL(A.SURGERY_MED_I					, 0)								AS SURGERY_MED_I2			--난임의료비
				 , ISNULL(A.SERIOUS_SICK_MED_I				, 0)								AS SERIOUS_SICK_MED_I2		--장애인/건보산정특례자
				 , ISNULL(A.REAL_LOSS_MED_INSUR_I			, 0)								AS REAL_LOSS_MED_INSUR_I2	-- 실손의료보험료
				 , ISNULL(A.EDU_USE_I			+ A.FIELD_EDUC_I +
						  A.EDU_PRINCIPAL_RTN_I + A.UNIFORM_USE_I	, 0)						AS EDU_USE_I2				--일반교육비(교육비 + 체험학습비 + 학자금원리금상환액 + 교복구입비)
				 , ISNULL(A.DEFORM_EDU_USE_I				, 0)								AS DEFORM_EDU_USE_I2		--장애인특수교육비
				 , ISNULL(A.CARD_USE_I						, 0)								AS CARD_USE_I2				--신용카드
				 , ISNULL(A.CARD_USE_I_A					, 0)								AS CARD_USE_I_A2			--신용카드
				 , ISNULL(A.CARD_USE_I_B					, 0)								AS CARD_USE_I_B2			--신용카드
				 , ISNULL(A.CARD_USE_I_C					, 0)								AS CARD_USE_I_C2			--신용카드
				 , ISNULL(A.CASH_USE_I						, 0)								AS CASH_USE_I2				--현금영수증
				 , ISNULL(A.CASH_USE_I_A					, 0)								AS CASH_USE_I_A2			--현금영수증
				 , ISNULL(A.CASH_USE_I_B					, 0)								AS CASH_USE_I_B2			--현금영수증
				 , ISNULL(A.CASH_USE_I_C					, 0)								AS CASH_USE_I_C2			--현금영수증
				 , ISNULL(A.DEBIT_CARD_USE_I				, 0)								AS DEBIT_CARD_USE_I2		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_A				, 0)								AS DEBIT_CARD_USE_I_A2		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_B				, 0)								AS DEBIT_CARD_USE_I_B2		--직불카드
				 , ISNULL(A.DEBIT_CARD_USE_I_C				, 0)								AS DEBIT_CARD_USE_I_C2		--직불카드
				 , ISNULL(A.BOOK_CONCERT_CARD_I				, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I				, 0)								AS BOOK_CONCERT_USE_I2		--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_A			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_A			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_A			, 0)								AS BOOK_CONCERT_USE_I_A2	--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_B			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_B			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_B			, 0)								AS BOOK_CONCERT_USE_I_B2	--도서공연사용분
				 , ISNULL(A.BOOK_CONCERT_CARD_I_C			, 0)
				 + ISNULL(A.BOOK_CONCERT_DEBIT_I_C			, 0)
				 + ISNULL(A.BOOK_CONCERT_CASH_I_C			, 0)								AS BOOK_CONCERT_USE_I_C2	--도서공연사용분
				 , ISNULL(A.TRA_MARKET_USE_I				, 0)								AS TRA_MARKET_USE_I2		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_A				, 0)								AS TRA_MARKET_USE_I_A2		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_B				, 0)								AS TRA_MARKET_USE_I_B2		--전통시장사용분
				 , ISNULL(A.TRA_MARKET_USE_I_C				, 0)								AS TRA_MARKET_USE_I_C2		--전통시장사용분
				 , ISNULL(A.TRAFFIC_USE_I					, 0)								AS TRAFFIC_USE_I2			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_A					, 0)								AS TRAFFIC_USE_I_A2			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_B					, 0)								AS TRAFFIC_USE_I_B2			--대중교통이용분
				 , ISNULL(A.TRAFFIC_USE_I_C					, 0)								AS TRAFFIC_USE_I_C2			--대중교통이용분
				 , ISNULL(A.GIFT_USE_I						, 0)								AS GIFT_USE_I2				--기부금
			INTO			#HAD430T2019_2
			FROM			HAD430T A	WITH (NOLOCK)
				INNER JOIN	HUM100T M1	WITH (NOLOCK) ON M1.COMP_CODE	= A.COMP_CODE
													 AND M1.PERSON_NUMB	= A.PERSON_NUMB
				INNER JOIN	HAD600T M2	WITH (NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
													 AND M2.YEAR_YYYY	= A.YEAR_YYYY
													 AND M2.PERSON_NUMB	= A.PERSON_NUMB
			WHERE	A.COMP_CODE		 = #{S_COMP_CODE}
			  AND	A.YEAR_YYYY		 = #{YEAR_YYYY}
			  AND	A.SEQ_NUM		 = '2'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			  AND	M1.SECT_CODE	 = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_CD)">
			  AND	M1.DEPT_CODE	 = #{TREE_CD}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">
			  AND	M2.HALFWAY_TYPE	 = #{RETR_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			  AND	M1.PAY_CODE		 = #{PAY_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			  AND	M1.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			  AND	A.PERSON_NUMB	 = #{PERSON_NUMB}
			</if>
			
			SET NOCOUNT OFF
			SET ARITHABORT OFF
			
			SELECT A.*, B.*
			FROM			#HAD430T2019_1 A	WITH (NOLOCK)
				INNER JOIN	#HAD430T2019_2 B	WITH (NOLOCK) ON A.YEAR_YYYY1	= B.YEAR_YYYY2
															 AND A.PERSON_NUMB1	= B.PERSON_NUMB2
															 AND A.REPRE_NUM1	= B.REPRE_NUM2
			ORDER  BY A.PERSON_NUMB1, A.REL_CODE1, A.REPRE_NUM1, A.SEQ_NUM1
		END
	</select>
</mapper>