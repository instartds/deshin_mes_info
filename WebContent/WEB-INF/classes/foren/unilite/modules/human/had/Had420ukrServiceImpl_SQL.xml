<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had420ukrServiceImpl">
	<select id="had420ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--had410ukr.Chad410ukr[fnHad420QStd] Query01
	    /**********************************************************************************************************************
	     기부금명세 조회
	    **********************************************************************************************************************/
	    BEGIN
	        DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
	                      , @YEAR_YYYY          NVARCHAR(04)                -- (필수) 정산년도
	                      , @PERSON_NUMB        NVARCHAR(10)                -- (필수) 사번
	                      , @USER_ID            NVARCHAR(100)                -- (필수) 사용자ID
	    
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	    
	    --  1. 변수 값 할당 -------------------------------------------------------------------------------------------------
	        SET @COMP_CODE          = #{S_COMP_CODE} 
	        SET @YEAR_YYYY          = #{YEAR_YYYY}
	        SET @PERSON_NUMB        = #{PERSON_NUMB}
	        SET @USER_ID            = #{S_USER_ID}
	    
	    --  2. 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------------
	        DECLARE @DateFormat             NVARCHAR(01)
	        
	        SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
	        FROM   BSA100T WITH (NOLOCK)
	        WHERE  COMP_CODE = @COMP_CODE
	        AND    MAIN_CODE = 'B044'
	        AND    REF_CODE1 = 'Y'
	        
	        SET @DateFormat = ISNULL(@DateFormat, '.')
	    
	    --  3. 데이터 조회 --------------------------------------------------------------------------------------------------
	        SELECT 
	               A.YEAR_YYYY
	             , A.SEQ_NUM
	             , A.IN_FORE
	             , A.PERSON_NUMB
	             , C1.NAME
	             , CASE WHEN LEN(REPLACE(A.GIFT_COMPANY_NUM,'-','')) = 13 THEN LEFT(REPLACE(A.GIFT_COMPANY_NUM,'-',''),6) +'-'+RIGHT(REPLACE(A.GIFT_COMPANY_NUM,'-',''),7) 
	             		WHEN LEN(REPLACE(A.GIFT_COMPANY_NUM,'-','')) = 10 THEN LEFT(REPLACE(A.GIFT_COMPANY_NUM,'-',''),3) +'-'+SUBSTRING(REPLACE(A.GIFT_COMPANY_NUM,'-',''),4,2)+'-'+RIGHT(REPLACE(A.GIFT_COMPANY_NUM,'-',''),5) 
	             		ELSE REPLACE(A.GIFT_COMPANY_NUM,'-','')    
	             	END GIFT_COMPANY_NUM
	             , A.GIFT_COMPANY_NAME
	             , A.GIFT_TEXT
	             , CASE WHEN ISNULL(A.GIFT_YYMM, '') = '' THEN ''
	                    ELSE SUBSTRING(A.GIFT_YYMM, 1, 4) + @DateFormat + 
 	                         SUBSTRING(A.GIFT_YYMM, 5, 2) + '01'
	               END                                                      AS GIFT_YYMM
	             , A.GIFT_CODE
	             , A.TAX_GU
	             , A.GIFT_COUNT
	             , A.GIFT_AMOUNT_I
	             , A.SBDY_APLN_SUM
	             , A.CONB_SUM
	             , A.POLICY_INDED
	             , A.FAMILY_NAME
	             , CASE WHEN LEN(REPLACE(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),'-','')) = 13 THEN LEFT(REPLACE(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),'-',''),6) +'-'+RIGHT(REPLACE(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),'-',''),7) 
	             		ELSE REPLACE(unilite.fnCipherDecrypt(A.REPRE_NUM, 'A'),'-','')    
	             	END            AS REPRE_NUM
	             , A.REL_CODE
	             , C1.LIVE_GUBUN
	        FROM              HAD420T  A  WITH (NOLOCK)
	               INNER JOIN HUM100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
	                                                   AND C1.PERSON_NUMB   = A.PERSON_NUMB
	        WHERE  A.COMP_CODE      = @COMP_CODE
	        AND    A.YEAR_YYYY      = @YEAR_YYYY
	        AND    A.PERSON_NUMB    = @PERSON_NUMB

	        ORDER  BY A.SEQ_NUM
	    
	        SET NOCOUNT OFF
	        SET ARITHABORT OFF
	    END
    
	</select>	
	<select id="had420ukrServiceImpl.selectCheckFamily" parameterType="Map" resultType="rMap">
		--had420ukr.Chad420ukr[fnHad420Save] Query3-01
        SELECT count(*) as CNT
          FROM   HAD420T  A  WITH (NOLOCK)
         WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	       AND   A.YEAR_YYYY      = #{YEAR_YYYY}
	       AND   A.PERSON_NUMB    = #{PERSON_NUMB}
	       AND   A.PAY_YN         = 'Y'
	</select>	
	<insert id="had420ukrServiceImpl.insert" parameterType="Map">
		INSERT INTO HAD420T
           (COMP_CODE
           ,YEAR_YYYY
           ,PERSON_NUMB
           ,GIFT_YYMM
           ,IN_FORE
           ,GIFT_COMPANY_NUM
           ,GIFT_COMPANY_NAME
           ,GIFT_CODE
           ,GIFT_COUNT
           ,GIFT_AMOUNT_I
           ,SBDY_APLN_SUM
           ,CONB_SUM
           ,POLICY_INDED
           ,GIFT_TEXT
           ,TAX_GU
           ,FAMILY_NAME
           ,REL_CODE
           ,GIFT_NUM
           ,INSERT_DB_USER
           ,INSERT_DB_TIME
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME
           ,REPRE_NUM)
     VALUES
           (#{S_COMP_CODE}
           ,#{YEAR_YYYY}
           ,#{PERSON_NUMB}
           ,LEFT(REPLACE(#{GIFT_YYMM},'.',''),6)
           ,#{IN_FORE}
           ,REPLACE(#{GIFT_COMPANY_NUM},'-','')
           ,#{GIFT_COMPANY_NAME}
           ,#{GIFT_CODE}
           ,#{GIFT_COUNT}
           ,#{GIFT_AMOUNT_I}
           ,#{SBDY_APLN_SUM}
           ,#{CONB_SUM}
           ,#{POLICY_INDED}
           ,#{GIFT_TEXT}
           ,#{TAX_GU}
           ,#{FAMILY_NAME}
           ,#{REL_CODE}
           ,#{GIFT_NUM}
           ,#{S_USER_ID}			            
		   ,GETDATE()			                
		   ,#{S_USER_ID}			            
		   ,GETDATE()	    
           ,uniLITE.fnCipherEncrypt(REPLACE(#{REPRE_NUM},'-',''),'') )
	</insert>
	<update id="had420ukrServiceImpl.update" parameterType="Map">
		UPDATE HAD420T
        SET  
            GIFT_YYMM         = LEFT(REPLACE(#{GIFT_YYMM},'.',''),6)  
           ,IN_FORE           = #{IN_FORE}          
           ,GIFT_COMPANY_NUM  = REPLACE(#{GIFT_COMPANY_NUM},'-','') 
           ,GIFT_COMPANY_NAME = #{GIFT_COMPANY_NAME}
           ,GIFT_CODE         = #{GIFT_CODE}        
           ,GIFT_COUNT        = #{GIFT_COUNT}       
           ,GIFT_AMOUNT_I     = #{GIFT_AMOUNT_I}    
           ,SBDY_APLN_SUM	  = #{SBDY_APLN_SUM}
           ,CONB_SUM		  = #{CONB_SUM}
           ,POLICY_INDED      = #{POLICY_INDED}     
           ,GIFT_TEXT         = #{GIFT_TEXT}        
           ,TAX_GU            = #{TAX_GU}             
           ,FAMILY_NAME       = #{FAMILY_NAME}      
           ,REL_CODE          = #{REL_CODE}         
           ,GIFT_NUM          = #{GIFT_NUM}         
           ,REPRE_NUM		  = uniLITE.fnCipherEncrypt(REPLACE(#{REPRE_NUM},'-',''),'')
           ,UPDATE_DB_USER    = #{S_USER_ID}   
           ,UPDATE_DB_TIME    = GETDATE()   
          
          
        WHERE   COMP_CODE      = #{S_COMP_CODE}
	      AND   YEAR_YYYY      = #{YEAR_YYYY}
	      AND   PERSON_NUMB    = #{PERSON_NUMB}  
	      AND   SEQ_NUM         = #{SEQ_NUM}    
	</update>
	<update id="had420ukrServiceImpl.delete" parameterType="Map">
		DELETE FROM  HAD420T
         WHERE   COMP_CODE      = #{S_COMP_CODE}
	       AND   YEAR_YYYY      = #{YEAR_YYYY}
	       AND   PERSON_NUMB    = #{PERSON_NUMB} 
	       AND   SEQ_NUM        = #{SEQ_NUM}  
	</update>
	<update id="had420ukrServiceImpl.update400" parameterType="Map">
		--had410ukr.Chad410ukr[fnHad420Save] Query4
	    UPDATE A
	    SET    A.LEGAL_GIFT_I       = ISNULL(B.LEGAL_GIFT_I   , 0.0)                                         -- 법정기부금
	         , A.POLICY_INDED       = CASE WHEN ISNULL(B.POLICY_INDED, 0.0) > 100000.0 THEN 100000.0
	                                       ELSE ISNULL(B.POLICY_INDED, 0.0)
	                                  END                                                                    -- 정치자금세액공제
	         , A.POLICY_GIFT_I      = CASE WHEN ISNULL(B.POLICY_INDED, 0.0) > 100000.0 THEN ISNULL(B.POLICY_GIFT_I, 0.0) - 100000.0
	                                       ELSE ISNULL(B.POLICY_GIFT_I, 0.0) - ISNULL(B.POLICY_INDED, 0.0)
	                                  END                                                                    -- 정치자금기부금
	         , A.PRIV_GIFT_I        = ISNULL(B.PRIV_GIFT_I    , 0.0)                                         -- 특례기부금
	         , A.PUBLIC_GIFT_I      = ISNULL(B.PUBLIC_GIFT_I  , 0.0)                                         -- 공익법인신탁기부금
	         , A.STAFF_GIFT_I       = ISNULL(B.STAFF_GIFT_I   , 0.0)                                         -- 우리사주기부금
	         , A.APPOINT_GIFT_I     = ISNULL(B.APPOINT_GIFT_I , 0.0)                                         -- 지정기부금(종교단체기부금 제외)
	         , A.ASS_GIFT_I         = ISNULL(B.ASS_GIFT_I     , 0.0)                                         -- 종교단체 지정기부금
	    FROM              HAD400T  A  WITH (NOLOCK)
	           LEFT  JOIN (
	                      SELECT S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '10' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS LEGAL_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '20' THEN S1.POLICY_INDED  ELSE 0.0 END) AS POLICY_INDED
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '20' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS POLICY_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '50'  AND S1.GIFT_CODE = '30' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS PRIV_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '50'  AND S1.GIFT_CODE = '31' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS PUBLIC_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '30'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS STAFF_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '15'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS APPOINT_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '10'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS ASS_GIFT_I
	                      FROM              HAD420T  S1 WITH (NOLOCK)
	                             LEFT  JOIN BSA100T  M1 WITH (NOLOCK) ON M1.COMP_CODE   = S1.COMP_CODE
	                                                                 AND M1.MAIN_CODE   = 'H119'
	                                                                 AND M1.SUB_CODE    = S1.GIFT_CODE
	                      WHERE  S1.COMP_CODE   = #{S_COMP_CODE}
	                      AND    S1.YEAR_YYYY   = #{YEAR_YYYY}
	                      AND    S1.PERSON_NUMB = #{PERSON_NUMB}
	                      GROUP  BY
	                             S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB
	                      ) B                      ON B.COMP_CODE       = A.COMP_CODE
	                                              AND B.YEAR_YYYY       = A.YEAR_YYYY
	                                              AND B.PERSON_NUMB     = A.PERSON_NUMB
	   
    	 WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	       AND   A.YEAR_YYYY      = #{YEAR_YYYY}
	       AND   A.PERSON_NUMB    = #{PERSON_NUMB} 
	</update>
	<update id="had420ukrServiceImpl.update430" parameterType="Map">
		--had410ukr.Chad410ukr[fnHad420Save] Query5
	    UPDATE A
	    SET    A.GIFT_USE_I     = ISNULL(B.GIFT_AMOUNT_I, 0)  
	    FROM              HAD430T  A  WITH (NOLOCK)
	           LEFT  JOIN (
	                      SELECT S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB, S1.FAMILY_NAME, unilite.fnCipherDecrypt(S1.REPRE_NUM, '') AS REPRE_NUM, S1.TAX_GU
	                           , SUM(S1.GIFT_AMOUNT_I)  AS GIFT_AMOUNT_I
	                           , SUM(S1.POLICY_INDED)   AS POLICY_INDED
	                      FROM   HAD420T  S1 WITH (NOLOCK)
	                      WHERE  S1.COMP_CODE   = #{S_COMP_CODE}
	                      AND    S1.YEAR_YYYY   = #{YEAR_YYYY}
	                      AND    S1.PERSON_NUMB = #{PERSON_NUMB}
	                      GROUP  BY
	                             S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB, S1.FAMILY_NAME, unilite.fnCipherDecrypt(S1.REPRE_NUM, ''), S1.TAX_GU
	                      ) B                      ON B.COMP_CODE       = A.COMP_CODE
	                                              AND B.YEAR_YYYY       = A.YEAR_YYYY
	                                              AND B.PERSON_NUMB     = A.PERSON_NUMB
	                                              AND B.FAMILY_NAME     = A.FAMILY_NAME
	                                              AND B.REPRE_NUM       = unilite.fnCipherDecrypt(A.REPRE_NUM, '')
	                                              AND B.TAX_GU          = A.SEQ_NUM
	    WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	       AND   A.YEAR_YYYY      = #{YEAR_YYYY}
	       AND   A.PERSON_NUMB    = #{PERSON_NUMB}
	</update>
	
	<select id="had420ukrServiceImpl.selectCheck420" parameterType="Map" resultType="rMap">
	--had420ukr.Chad420ukr[fnHad420QPay] Query01
    SELECT MED_DED_STD, MED_DED_LMT, DEFORM_MED_RATE, FOREIGN_LMT_RATE 
         , TAX_EXEMPTION_LMT 
      FROM HAD200T  WITH (NOLOCK)
     WHERE COMP_CODE    =  #{S_COMP_CODE}
       AND TAX_YEAR     =  #{YEAR_YYYY}
       AND COMPANY_CODE =  '2'
	</select>
	<update id="had420ukrServiceImpl.update420_1" parameterType="Map">
		--had410ukr.Chad410ukr[fnHad420Sav1] Query02
	    DECLARE     @COMP_CODE          NVARCHAR(08)            -- 법인코드
	              , @YEAR_YYYY          NVARCHAR(04)            -- 정산년도
	              , @PERSON_NUMB        NVARCHAR(10)            -- 사번
	              , @USER_ID            NVARCHAR(100)            -- 로그인ID
	    
	    SET @COMP_CODE          = #{S_COMP_CODE} 
        SET @YEAR_YYYY          = #{YEAR_YYYY}
        SET @PERSON_NUMB        = #{PERSON_NUMB}
        SET @USER_ID            = #{S_USER_ID}
	    
	    -- 기등록된 공제금기부내역 삭제
	    IF EXISTS (
	              SELECT TOP 1 1
	              FROM   HAD420T  A  WITH (NOLOCK)
	              WHERE  A.COMP_CODE   = @COMP_CODE
	              AND    A.YEAR_YYYY   = @YEAR_YYYY
	              AND    A.PERSON_NUMB = @PERSON_NUMB
	              AND    A.PAY_YN      = 'Y'
	              )
	    BEGIN
	        DELETE A
	        FROM   HAD420T  A  WITH (NOLOCK)
	        WHERE  A.COMP_CODE   = @COMP_CODE
	        AND    A.YEAR_YYYY   = @YEAR_YYYY
	        AND    A.PERSON_NUMB = @PERSON_NUMB
	        AND    A.PAY_YN      = 'Y'
	    END
	    
	    -- 공제금기부내역 등록
	    INSERT INTO HAD420T
	    (      COMP_CODE
	         , PERSON_NUMB
	         , YEAR_YYYY
	         , IN_FORE
	         , GIFT_COMPANY_NUM
	         , GIFT_COMPANY_NAME
	         , GIFT_TEXT
	         , GIFT_YYMM
	         , GIFT_CODE
	         , GIFT_COUNT
	         , GIFT_AMOUNT_I
	         , CONB_SUM
	         , FAMILY_NAME
	         , REPRE_NUM
	         , REL_CODE
	         , TAX_GU
	         , PAY_YN
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME
	    )
	    SELECT A.COMP_CODE
	         , A.PERSON_NUMB
	         , LEFT(PAY_YYYYMM, 4)                                      AS YEAR_YYYY
	         , CASE WHEN unilite.fnCipherDecrypt(C1.FOREIGN_NUM, '') = '' OR unilite.fnCipherDecrypt(C1.FOREIGN_NUM, '') IS NULL THEN '1'
	                ELSE '9'
	           END                                                      AS IN_FORE
	         , ISNULL(C2.COMPANY_NUM  , '')                             AS GIFT_COMPANY_NUM
	         , ISNULL(C2.DIV_FULL_NAME, '')                             AS GIFT_COMPANY_NAME
	         , ISNULL(M1.CODE_NAME    , '')                             AS GIFT_TEXT
	         , @YEAR_YYYY + '12'                                        AS GIFT_YYMM
	         , ISNULL(M1.REF_CODE3    , '')                             AS GIFT_CODE
	         , COUNT(A.PAY_YYYYMM)                                      AS GIFT_COUNT
	         , SUM(ISNULL(A.DED_AMOUNT_I,0))                            AS GIFT_AMOUNT_I
	         , SUM(ISNULL(A.DED_AMOUNT_I,0))                            AS CONB_SUM
	         , C1.NAME                                                  AS FAMILY_NAME
	         , uniLITE.fnCipherEncrypt(REPLACE(unilite.fnCipherDecrypt(C1.REPRE_NUM, ''),'-',''),'')                AS REPRE_NUM
	         , '1'                                                      AS REL_CODE
	         , '2'                                                      AS TAX_GU
	         , 'Y'                                                      AS PAY_YN
	         , @USER_ID                                                 AS UPDATE_DB_USER
	         , GETDATE()                                                AS UPDATE_DB_TIME
	    FROM              HPA400T  A  WITH (NOLOCK)
	           INNER JOIN HUM100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
	                                               AND C1.PERSON_NUMB   = A.PERSON_NUMB
	           INNER JOIN BOR120T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = C1.COMP_CODE
	                                               AND C2.DIV_CODE      = C1.SECT_CODE
	           INNER JOIN BSA100T  M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
	                                               AND M1.MAIN_CODE     = N'H034'
	                                               AND M1.SUB_CODE     != N'$'
	                                               AND M1.SUB_CODE      = A.DED_CODE
	                                               AND M1.USE_YN        = N'Y'
	                                               AND ISNULL(M1.REF_CODE3, '') != ''
	    WHERE  A.COMP_CODE          = @COMP_CODE
	    AND    LEFT(A.PAY_YYYYMM,4) = @YEAR_YYYY
	    AND    A.PERSON_NUMB        = @PERSON_NUMB
	    AND    A.SUPP_TYPE          = '1'
	    GROUP  BY A.COMP_CODE , A.PERSON_NUMB , LEFT(A.PAY_YYYYMM, 4), C2.COMPANY_NUM, C2.DIV_FULL_NAME
	            , M1.REF_CODE3, unilite.fnCipherDecrypt(C1.FOREIGN_NUM, ''), M1.CODE_NAME, C1.NAME, unilite.fnCipherDecrypt(C1.REPRE_NUM, '')
	    HAVING SUM(ISNULL(A.DED_AMOUNT_I, 0)) > 0
	
	</update>
	<update id="had420ukrServiceImpl.update420_2" parameterType="Map">
	    --===== 3) 개인연말정산정보에 기부금 UPDATE
	    --had410ukr.Chad410ukr[fnHad420Sav1] Query03
	    UPDATE A
	    SET    A.LEGAL_GIFT_I       = ISNULL(B.LEGAL_GIFT_I   , 0.0)                                        -- 법정기부금
	         , A.POLICY_INDED       = CASE WHEN ISNULL(B.POLICY_INDED, 0.0) &gt; 100000.0 THEN 100000.0
	                                       ELSE ISNULL(B.POLICY_INDED, 0.0)
	                                  END                                                                   -- 정치자금세액공제
	         , A.POLICY_GIFT_I      = CASE WHEN ISNULL(B.POLICY_INDED, 0.0) &gt; 100000.0 THEN ISNULL(B.POLICY_GIFT_I, 0.0) - 100000.0
	                                       ELSE ISNULL(B.POLICY_GIFT_I, 0.0) - ISNULL(B.POLICY_INDED, 0.0)
	                                  END                                                                   -- 정치자금기부금
	         , A.PRIV_GIFT_I        = ISNULL(B.PRIV_GIFT_I   , 0.0)                                         -- 특례기부금
	         , A.PUBLIC_GIFT_I      = ISNULL(B.PUBLIC_GIFT_I , 0.0)                                         -- 공익법인신탁기부금
	         , A.STAFF_GIFT_I       = ISNULL(B.STAFF_GIFT_I  , 0.0)                                         -- 우리사주기부금
	         , A.APPOINT_GIFT_I     = ISNULL(B.APPOINT_GIFT_I, 0.0)                                         -- 지정기부금(종교단체기부금 제외)
	         , A.ASS_GIFT_I         = ISNULL(B.ASS_GIFT_I    , 0.0)                                         -- 종교단체 지정기부금
	    FROM              HAD400T  A  WITH (NOLOCK)
	           LEFT  JOIN (
	                      SELECT S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '10' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS LEGAL_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '20' THEN S1.POLICY_INDED  ELSE 0.0 END) AS POLICY_INDED
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '100' AND S1.GIFT_CODE = '20' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS POLICY_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '50'  AND S1.GIFT_CODE = '30' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS PRIV_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '50'  AND S1.GIFT_CODE = '31' THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS PUBLIC_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '30'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS STAFF_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '15'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS APPOINT_GIFT_I
	                           , SUM(CASE WHEN ISNULL(M1.REF_CODE1, '') = '10'                          THEN S1.GIFT_AMOUNT_I ELSE 0.0 END) AS ASS_GIFT_I
	                      FROM              HAD420T  S1 WITH (NOLOCK)
	                             LEFT  JOIN BSA100T  M1 WITH (NOLOCK) ON M1.COMP_CODE   = S1.COMP_CODE
	                                                                 AND M1.MAIN_CODE   = 'H119'
	                                                                 AND M1.SUB_CODE    = S1.GIFT_CODE
	                      WHERE  S1.COMP_CODE   = #{S_COMP_CODE}
	                      AND    S1.YEAR_YYYY   = #{YEAR_YYYY}
	                      AND    S1.PERSON_NUMB = #{PERSON_NUMB}
	                      GROUP  BY
	                             S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB
	                      ) B                      ON B.COMP_CODE       = A.COMP_CODE
	                                              AND B.YEAR_YYYY       = A.YEAR_YYYY
	                                              AND B.PERSON_NUMB     = A.PERSON_NUMB
	    WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	      AND   A.YEAR_YYYY      = #{YEAR_YYYY}
	      AND   A.PERSON_NUMB    = #{PERSON_NUMB}
	
	</update>
	<update id="had420ukrServiceImpl.update420_3" parameterType="Map">
	    
	    --===== 4) 부양가족명세정보에 기부금 UPDATE
	    --had410ukr.Chad410ukr[fnHad420Sav1] Query04
	    UPDATE A
	    SET    A.GIFT_USE_I     = ISNULL(B.GIFT_AMOUNT_I, 0) 
	    FROM              HAD430T  A  WITH (NOLOCK)
	           LEFT  JOIN (
	                      SELECT S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB, S1.FAMILY_NAME, REPLACE(unilite.fnCipherDecrypt(S1.REPRE_NUM, ''),'-','') AS REPRE_NUM, S1.TAX_GU
	                           , SUM(S1.GIFT_AMOUNT_I)  AS GIFT_AMOUNT_I
	                           , SUM(S1.POLICY_INDED)   AS POLICY_INDED
	                      FROM   HAD420T  S1 WITH (NOLOCK)
	                      WHERE  S1.COMP_CODE   = #{S_COMP_CODE}
	                      AND    S1.YEAR_YYYY   = #{YEAR_YYYY}
	                      AND    S1.PERSON_NUMB = #{PERSON_NUMB}
	                      GROUP  BY
	                             S1.COMP_CODE, S1.YEAR_YYYY, S1.PERSON_NUMB, S1.FAMILY_NAME, unilite.fnCipherDecrypt(S1.REPRE_NUM, ''), S1.TAX_GU
	                      ) B                      ON B.COMP_CODE       = A.COMP_CODE
	                                              AND B.YEAR_YYYY       = A.YEAR_YYYY
	                                              AND B.PERSON_NUMB     = A.PERSON_NUMB
	                                              AND B.FAMILY_NAME     = A.FAMILY_NAME
	                                              AND B.REPRE_NUM       = REPLACE(unilite.fnCipherDecrypt(A.REPRE_NUM, ''),'-','')
	                                              AND B.TAX_GU          = A.SEQ_NUM
	    WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	      AND   A.YEAR_YYYY      = #{YEAR_YYYY}
	      AND   A.PERSON_NUMB    = #{PERSON_NUMB}
	</update>
</mapper>