<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had810skrServiceImpl">
	<!-- 2019 -->
	<select id="had810skrServiceImpl.gridSelectList1_2019" parameterType="Map" resultType="rMap">
	    SELECT A.*
	    FROM   (
	            SELECT uniLITE.fnGetTxt('H0033')                                                               AS TITLE --년말기초
	                 , ETC_INCOME_I
	                 , OUTSIDE_INCOME_I
	                 , EDUC_SUPP_I
	                 , MED_SUPP_I
	            FROM   HAD400T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    YEAR_YYYY      = #{YEAR_YYYY}
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
 	    
	            UNION  ALL
	    
	            SELECT uniLITE.fnGetTxt('H0034')                                                               AS TITLE --기타소득
	                 , SUM(CASE WHEN WAGES_CODE != 'G01' AND WAGES_CODE != 'G02' THEN SUPP_TOTAL_I ELSE 0 END) AS ETC_INCOME_I
	                 , 0                                                                                       AS OUTSIDE_INCOME_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G02'                         THEN SUPP_TOTAL_I ELSE 0 END) AS EDUC_SUPP_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G01'                         THEN SUPP_TOTAL_I ELSE 0 END) AS MED_SUPP_I 
	            FROM   HAD700T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    SUPP_DATE   LIKE #{YEAR_YYYY}+'%'
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
	           ) A
	    WHERE A.ETC_INCOME_I != 0 OR A.OUTSIDE_INCOME_I != 0 OR A.EDUC_SUPP_I != 0 OR A.MED_SUPP_I != 0
    </select>
    
    <select id="had810skrServiceImpl.gridSelectList2_2019" parameterType="Map" resultType="rMap">
	    SELECT A.NONTAX_CODE
	         , B.NONTAX_CODE_NAME
	         , A.NON_TAX_EMPTION_I
	         , A.P1_NON_TAX_EMPTION_I
	         , A.P2_NON_TAX_EMPTION_I
	    FROM  (
	           -- 연말정산 비과세소득
	           SELECT COMP_CODE 
	                , YEAR_YYYY
	                , PERSON_NUMB
	                , NONTAX_CODE
	                , SUM(NON_TAX_EMPTION_I)    AS NON_TAX_EMPTION_I
	                , SUM(P1_NON_TAX_EMPTION_I) AS P1_NON_TAX_EMPTION_I
	                , SUM(P2_NON_TAX_EMPTION_I) AS P2_NON_TAX_EMPTION_I
	           FROM   HAD610T WITH (NOLOCK)
	           GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB, NONTAX_CODE
	    
	           UNION  ALL
	    
	           -- 주식매수선택권행사이익 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA810T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP  BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	    
	           UNION  ALL
	    
	           -- 우리사주조합인출금 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA820T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	          ) A
	            LEFT JOIN HBS120T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                             AND B.TAX_YYYY     = A.YEAR_YYYY
	                                             AND B.NONTAX_CODE  = A.NONTAX_CODE
	    WHERE  A.COMP_CODE   = #{S_COMP_CODE}
	    AND    A.YEAR_YYYY   = #{YEAR_YYYY}
	    AND    A.PERSON_NUMB = #{PERSON_NUMB}
	    ORDER  BY A.NONTAX_CODE
    </select>
    
    <select id="had810skrServiceImpl.selectForm_2019" parameterType="Map" resultType="rMap">
	    SELECT A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , ISNULL(C.NAME, '')                                                           AS NAME
	         , ISNULL(A.FORE_SINGLE_YN   ,'N') AS FORE_SINGLE_YN
	    
	    --주(현)
	         , ISNULL(A.NOW_PAY_TOT_I         , 0)                                          AS NOW_PAY_TOT_I
	         , ISNULL(A.NOW_BONUS_TOTAL_I     , 0)                                          AS NOW_BONUS_TOTAL_I
	         , ISNULL(A.NOW_ADD_BONUS_I       , 0)                                          AS NOW_ADD_BONUS_I
	         , ISNULL(A.NOW_STOCK_PROFIT_I    , 0)                                          AS NOW_STOCK_PROFIT_I
	         , ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)                                          AS NOW_OWNER_STOCK_DRAW_I
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.NOW_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.NOW_ADD_BONUS_I       , 0)
	                                               + ISNULL(A.NOW_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)    AS NOW_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0)                                          AS NOW_IN_TAX_I
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0)                                          AS NOW_LOCAL_TAX_I
	         , ISNULL(A.NOW_SP_TAX_I          , 0)                                          AS NOW_SP_TAX_I
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I  , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)    AS NOW_LOCAL_HAM
	    
	    --종(전)
	         , ISNULL(A.OLD_PAY_TOT_I         , 0)                                          AS OLD_PAY_TOT_I
	         , ISNULL(A.OLD_BONUS_TOTAL_I     , 0)                                          AS OLD_BONUS_TOTAL_I
	         , ISNULL(A.OLD_ADD_BONUS_I       , 0)                                          AS OLD_ADD_BONUS_I
	         , ISNULL(B.OLD_STOCK_PROFIT_I    , 0)                                          AS OLD_STOCK_PROFIT_I
	         , ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)                                          AS OLD_OWNER_STOCK_DRAW_I
	         , ISNULL(A.OLD_PAY_TOT_I         , 0) + ISNULL(A.OLD_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.OLD_ADD_BONUS_I       , 0)
	                                               + ISNULL(B.OLD_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)    AS OLD_PAY_HAM
	         , ISNULL(A.PRE_IN_TAX_I          , 0)                                          AS PRE_IN_TAX_I
	         , ISNULL(A.PRE_LOCAL_TAX_I       , 0)                                          AS PRE_LOCAL_TAX_I
	         , ISNULL(A.PRE_SP_TAX_I          , 0)                                          AS PRE_SP_TAX_I
	         , ISNULL(A.PRE_IN_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I, 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)    AS PRE_LOCAL_HAM
	    
	    --납세조합
	         , ISNULL(A.NAP_PAY_TOT_I         , 0)                                          AS NAP_PAY_TOT_I
	         , ISNULL(A.NAP_BONUS_TOTAL_I     , 0)                                          AS NAP_BONUS_TOTAL_I
	         , ISNULL(A.NAP_PAY_TOT_I         , 0) + ISNULL(A.NAP_BONUS_TOTAL_I     , 0)    AS NAP_PAY_HAM
	         , ISNULL(A.NAP_IN_TAX_I          , 0)                                          AS NAP_IN_TAX_I
	         , ISNULL(A.NAP_LOCAL_TAX_I       , 0)                                          AS NAP_LOCAL_TAX_I
	         , ISNULL(A.NAP_SP_TAX_I          , 0)                                          AS NAP_SP_TAX_I
	         , ISNULL(A.NAP_IN_TAX_I          , 0) + ISNULL(A.NAP_SP_TAX_I, 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS NAP_LOCAL_HAM
	    
	    --합계
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.OLD_PAY_TOT_I         , 0)
	                                               + ISNULL(A.NAP_PAY_TOT_I         , 0)    AS PAY_TOTAL_I
	         , ISNULL(A.BONUS_TOTAL_I         , 0)                                          AS BONUS_TOTAL_I
	         , ISNULL(A.ADD_BONUS_I           , 0)                                          AS ADD_BONUS_I
	         , ISNULL(A.STOCK_PROFIT_I        , 0)                                          AS STOCK_PROFIT_I
	         , ISNULL(A.OWNER_STOCK_DRAW_I    , 0)                                          AS OWNER_STOCK_DRAW_I
	         , ISNULL(A.PAY_TOTAL_I           , 0) + ISNULL(A.BONUS_TOTAL_I         , 0)
	                                               + ISNULL(A.ADD_BONUS_I           , 0)    AS TOT_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)    AS IN_TAX_HAM
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0) + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS LOCAL_TAX_HAM
	         , ISNULL(A.NOW_SP_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)    AS SP_TAX_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I          , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS CHONG_HAM
	    
	    --결정소득세
	         , ISNULL(A.DEF_IN_TAX_I          , 0)                                          AS DEF_IN_TAX_I
	         , ISNULL(A.DEF_LOCAL_TAX_I       , 0)                                          AS DEF_LOCAL_TAX_I
	         , ISNULL(A.DEF_SP_TAX_I          , 0)                                          AS DEF_SP_TAX_I
	         , ISNULL(A.DEF_IN_TAX_I          , 0) + ISNULL(A.DEF_SP_TAX_I          , 0)
	                                               + ISNULL(A.DEF_LOCAL_TAX_I       , 0)    AS DEF_HAM
	    
	    --차감세액
	         , ISNULL(A.IN_TAX_I              , 0)                                          AS IN_TAX_I
	         , ISNULL(A.LOCAL_TAX_I           , 0)                                          AS LOCAL_TAX_I
	         , ISNULL(A.SP_TAX_I              , 0)                                          AS SP_TAX_I
	         , ISNULL(A.IN_TAX_I              , 0) + ISNULL(A.SP_TAX_I              , 0)
	                                               + ISNULL(A.LOCAL_TAX_I           , 0)    AS LOCAL_HAM
	    
	    --과세대상
	         , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                               AS INCOME_SUPP_TOTAL_I        --총급여액
	         , ISNULL(A.INCOME_DED_I          , 0)                               AS INCOME_DED_I               --근로소득공제
	         , ISNULL(A.EARN_INCOME_I         , 0)                               AS EARN_INCOME_I              --근로소득금액
	    
	         , ISNULL(A.PER_DED_I             , 0)                               AS PER_DED_I                  --본인공제
	         , ISNULL(A.SPOUSE                ,'N')                              AS SPOUSE                     --배우자유무
	         , ISNULL(A.SPOUSE_DED_I          , 0)                               AS SPOUSE_DED_I               --배우자공제
	         , ISNULL(A.SUPP_NUM              , 0)                               AS SUPP_NUM                   --부양자
	         , ISNULL(A.SUPP_SUB_I            , 0)                               AS SUPP_SUB_I                 --부양자공제
	         , ISNULL(A.AGED_NUM              , 0)                               AS AGED_NUM                   --경로자
	         , ISNULL(A.DEFORM_NUM            , 0)                               AS DEFORM_NUM                 --장애자
	         , ISNULL(A.WOMAN                 ,'N')                              AS WOMAN                      --부녀자유무
	         , ISNULL(A.ONE_PARENT            ,'N')                              AS ONE_PARENT                 --부녀자유무
	         , ISNULL(A.AGED_DED_I            , 0)                               AS AGED_DED_I                 --경로공제
	         , ISNULL(A.DEFORM_DED_I          , 0)                               AS DEFORM_DED_I               --장애인공제
	         , ISNULL(A.WOMAN_DED_I           , 0)                               AS WOMAN_DED_I                --부녀자공제
	         , ISNULL(A.ONE_PARENT_DED_I      , 0)                               AS ONE_PARENT_DED_I           --한부모공제
	    
	         , ISNULL(A.ANU_DED_I             , 0)                               AS ANU_DED_I                  --국민연금공제금액
	         , ISNULL(A.PUBLIC_PENS_I         , 0)                               AS PUBLIC_PENS_I              --공무원연금
	         , ISNULL(A.SOLDIER_PENS_I        , 0)                               AS SOLDIER_PENS_I             --군인연금
	         , ISNULL(A.SCH_PENS_I            , 0)                               AS SCH_PENS_I                 --사립학교교직원연금
	         , ISNULL(A.POST_PENS_I           , 0)                               AS POST_PENS_I                --별정우체국연금
	    
	         , ISNULL(A.MED_PREMINM_I         , 0)                               AS MED_PREMINM_I              --건강보험료
	         , ISNULL(A.HIRE_INSUR_I          , 0)                               AS HIRE_INSUR_I               --고용보험료
	    
	         , ISNULL(A.HOUS_AMOUNT_I         , 0)                               AS HOUS_AMOUNT_I              --주택자금불입액(대출기관)
	         , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                               AS HOUS_AMOUNT_I_2            --주택자금불입액(거주자)
	         , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                               AS MORTGAGE_RETURN_I_2        --장기주택저당차입금이자상환액(15년미만)
	         , ISNULL(A.MORTGAGE_RETURN_I     , 0)                               AS MORTGAGE_RETURN_I          --장기주택저당차입금이자상환액(15년~29년)
	         , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                               AS MORTGAGE_RETURN_I_3        --장기주택저당차입금이자상환액(30년이상)
	         , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                               AS MORTGAGE_RETURN_I_5        --고정금리비거치상환대출(1500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                               AS MORTGAGE_RETURN_I_4        --기타대출(500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                               AS MORTGAGE_RETURN_I_6        --15년이상(고정금리이면서 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                               AS MORTGAGE_RETURN_I_7        --15년이상(고정금리이거나 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                               AS MORTGAGE_RETURN_I_8        --15년이상(그밖의대출)
	         , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                               AS MORTGAGE_RETURN_I_9        --10년이상(고정금리이거나 비거치상환)
	    
	         , ISNULL(A.PRIV_PENS_I           , 0)                               AS PRIV_PENS_I                --개인연금저축소득공제
	    
	         , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.HOUS_BU_AMT           , 0)                               AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT         , 0)                               AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I      , 0)                               AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.GIFT_DED_I            , 0)                               AS GIFT_DED_I                 --(소득공제)기부금소득공제합계
	    
	         , ISNULL(A.DED_INCOME_I          , 0)                               AS DED_INCOME_I               --차감근로소득
	    
	         , ISNULL(A.CARD_DED_I            , 0)                               AS CARD_DED_I                 --신용카드공제
	         , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                               AS COMP_PREMINUM_DED_I        --소기업,소상공인공제부금소득공제
	         , ISNULL(A.INVESTMENT_DED_I      , 0)                               AS INVESTMENT_DED_I           --투자조합출자공제
	         , ISNULL(A.STAFF_STOCK_DED_I     , 0)                               AS STAFF_STOCK_DED_I          --우리사주조합출연금액
	         , ISNULL(A.STAFF_GIFT_DED_I      , 0)                               AS STAFF_GIFT_DED_I           --(소득공제)우리사주기부금
	         , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                               AS EMPLOY_WORKER_DED_I        --고용유지중소기업근로자소득공제
	         , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                               AS NOT_AMOUNT_LOAN_DED_I      --목돈안드는전세이자상환액
	         , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                              AS LONG_INVEST_STOCK_DED_I    --장기집합투자증권저축
	    
	         , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                               AS OVER_INCOME_DED_LMT        --특별공제 종합한도 초과액
	         , ISNULL(A.TAX_STD_I             , 0)                               AS TAX_STD_I                  --소득과세표준
	         , ISNULL(A.COMP_TAX_I            , 0)                               AS COMP_TAX_I                 --산출세액
	    
	         , ISNULL(A.INCOME_REDU_I         , 0)                               AS INCOME_REDU_I              --소득세법
	         , ISNULL(A.YOUTH_DED_I           , 0)                               AS YOUTH_DED_I                --중소기업청년소득세감면금액(100%)
	         , ISNULL(A.YOUTH_DED_I3          , 0)                               AS YOUTH_DED_I3               --중소기업청년소득세감면금액(70%)
	         , ISNULL(A.YOUTH_DED_I2          , 0)                               AS YOUTH_DED_I2               --중소기업청년소득세감면금액(50%)
	         , ISNULL(A.SKILL_DED_I           , 0)                               AS SKILL_DED_I                --외국인기술공제
	         , ISNULL(A.TAXES_REDU_I          , 0)                               AS TAXES_REDU_I               --조감법
	    
	         , ISNULL(A.IN_TAX_DED_I          , 0)                               AS IN_TAX_DED_I               --근로소득세액공제
	         , ISNULL(A.MANY_CHILD_NUM        , 0)                               AS MANY_CHILD_NUM             --자녀양육
	         , ISNULL(A.CHILD_TAX_DED_I       , 0)                               AS CHILD_TAX_DED_I            --자녀세액공제
	    
	         , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)     AS SCI_TAX_DED_I              --과학기술인공제
	         , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)     AS RETIRE_TAX_DED_I           --근로자퇴직급여보장법
	         , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)     AS PENS_TAX_DED_I             --연금저축소득공제
	    
	         , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                               AS ETC_INSUR_TAX_DED_I        --보장성보험
	         , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                               AS DEFORM_INSUR_TAX_DED_I     --장애인전용보장성보험
	    
	         , ISNULL(A.MED_TAX_DED_I         , 0)                               AS MED_TAX_DED_I              --의료비공제금액
	         , ISNULL(A.EDUC_TAX_DED_I        , 0)                               AS EDUC_TAX_DED_I             --교육비공제
	         , ISNULL(A.GIFT_TAX_DED_I        , 0)                               AS GIFT_TAX_DED_I             --(세액공제)기부금세액공제합계
	    
	         , ISNULL(A.STD_TAX_DED_I         , 0)                               AS STD_TAX_DED_I              --표준세액공제
	    
	         , ISNULL(A.NAP_TAX_DED_I         , 0)                               AS NAP_TAX_DED_I              --납세조합세액공제
	         , ISNULL(A.HOUS_INTER_I          , 0)                               AS HOUS_INTER_I               --주택자금상환액
	         , ISNULL(A.OUTSIDE_INCOME_I      , 0)                               AS OUTSIDE_INCOME_I           --외국납부세액
	         , ISNULL(A.MON_RENT_I            , 0)                               AS MON_RENT_I                 --월세액
	      FROM           HAD600T A WITH (NOLOCK)
	           LEFT JOIN (SELECT COMP_CODE
	                           , YEAR_YYYY
	                           , PERSON_NUMB
	                           , SUM(ISNULL(P1_STOCK_BUY_PROFIT_I,0)) + SUM(ISNULL(P2_STOCK_BUY_PROFIT_I,0)) AS OLD_STOCK_PROFIT_I
	                           , SUM(ISNULL(P1_OWNER_STOCK_DRAW_I,0)) + SUM(ISNULL(P2_OWNER_STOCK_DRAW_I,0)) AS OLD_OWNER_STOCK_DRAW_I
	                      FROM   HAD500T WITH (NOLOCK)
	                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
	                     )       B               ON B.COMP_CODE   = A.COMP_CODE
	                                            AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                            AND B.PERSON_NUMB = A.PERSON_NUMB
	           LEFT JOIN HUM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                            AND C.PERSON_NUMB = A.PERSON_NUMB
	     WHERE A.COMP_CODE   = #{S_COMP_CODE}
	       AND A.YEAR_YYYY   = #{YEAR_YYYY}
	       AND A.PERSON_NUMB = #{PERSON_NUMB}
    </select>	
	<!-- 2018 -->
	<select id="had810skrServiceImpl.gridSelectList1_2018" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2018] QUERY01
	    SELECT A.*
	    FROM   (
	            SELECT uniLITE.fnGetTxt('H0033')                                                               AS TITLE --년말기초
	                 , ETC_INCOME_I
	                 , OUTSIDE_INCOME_I
	                 , EDUC_SUPP_I
	                 , MED_SUPP_I
	            FROM   HAD400T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    YEAR_YYYY      = #{YEAR_YYYY}
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
 	    
	            UNION  ALL
	    
	            SELECT uniLITE.fnGetTxt('H0034')                                                               AS TITLE --기타소득
	                 , SUM(CASE WHEN WAGES_CODE != 'G01' AND WAGES_CODE != 'G02' THEN SUPP_TOTAL_I ELSE 0 END) AS ETC_INCOME_I
	                 , 0                                                                                       AS OUTSIDE_INCOME_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G02'                         THEN SUPP_TOTAL_I ELSE 0 END) AS EDUC_SUPP_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G01'                         THEN SUPP_TOTAL_I ELSE 0 END) AS MED_SUPP_I 
	            FROM   HAD700T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    SUPP_DATE   LIKE #{YEAR_YYYY}+'%'
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
	           ) A
	    WHERE A.ETC_INCOME_I != 0 OR A.OUTSIDE_INCOME_I != 0 OR A.EDUC_SUPP_I != 0 OR A.MED_SUPP_I != 0
    </select>
    
    <select id="had810skrServiceImpl.gridSelectList2_2018" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2018] QUERY03
	    SELECT A.NONTAX_CODE
	         , B.NONTAX_CODE_NAME
	         , A.NON_TAX_EMPTION_I
	         , A.P1_NON_TAX_EMPTION_I
	         , A.P2_NON_TAX_EMPTION_I
	    FROM  (
	           -- 연말정산 비과세소득
	           SELECT COMP_CODE 
	                , YEAR_YYYY
	                , PERSON_NUMB
	                , NONTAX_CODE
	                , SUM(NON_TAX_EMPTION_I)    AS NON_TAX_EMPTION_I
	                , SUM(P1_NON_TAX_EMPTION_I) AS P1_NON_TAX_EMPTION_I
	                , SUM(P2_NON_TAX_EMPTION_I) AS P2_NON_TAX_EMPTION_I
	           FROM   HAD610T WITH (NOLOCK)
	           GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB, NONTAX_CODE
	    
	           UNION  ALL
	    
	           -- 주식매수선택권행사이익 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA810T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP  BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	    
	           UNION  ALL
	    
	           -- 우리사주조합인출금 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA820T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	          ) A
	            LEFT JOIN HBS120T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                             AND B.TAX_YYYY     = A.YEAR_YYYY
	                                             AND B.NONTAX_CODE  = A.NONTAX_CODE
	    WHERE  A.COMP_CODE   = #{S_COMP_CODE}
	    AND    A.YEAR_YYYY   = #{YEAR_YYYY}
	    AND    A.PERSON_NUMB = #{PERSON_NUMB}
	    ORDER  BY A.NONTAX_CODE
    </select>
    
    <select id="had810skrServiceImpl.selectForm_2018" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2018] QUERY02
	    SELECT A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , ISNULL(C.NAME, '')                                                           AS NAME
	         , ISNULL(A.FORE_SINGLE_YN   ,'N') AS FORE_SINGLE_YN
	    
	    --주(현)
	         , ISNULL(A.NOW_PAY_TOT_I         , 0)                                          AS NOW_PAY_TOT_I
	         , ISNULL(A.NOW_BONUS_TOTAL_I     , 0)                                          AS NOW_BONUS_TOTAL_I
	         , ISNULL(A.NOW_ADD_BONUS_I       , 0)                                          AS NOW_ADD_BONUS_I
	         , ISNULL(A.NOW_STOCK_PROFIT_I    , 0)                                          AS NOW_STOCK_PROFIT_I
	         , ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)                                          AS NOW_OWNER_STOCK_DRAW_I
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.NOW_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.NOW_ADD_BONUS_I       , 0)
	                                               + ISNULL(A.NOW_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)    AS NOW_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0)                                          AS NOW_IN_TAX_I
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0)                                          AS NOW_LOCAL_TAX_I
	         , ISNULL(A.NOW_SP_TAX_I          , 0)                                          AS NOW_SP_TAX_I
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I  , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)    AS NOW_LOCAL_HAM
	    
	    --종(전)
	         , ISNULL(A.OLD_PAY_TOT_I         , 0)                                          AS OLD_PAY_TOT_I
	         , ISNULL(A.OLD_BONUS_TOTAL_I     , 0)                                          AS OLD_BONUS_TOTAL_I
	         , ISNULL(A.OLD_ADD_BONUS_I       , 0)                                          AS OLD_ADD_BONUS_I
	         , ISNULL(B.OLD_STOCK_PROFIT_I    , 0)                                          AS OLD_STOCK_PROFIT_I
	         , ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)                                          AS OLD_OWNER_STOCK_DRAW_I
	         , ISNULL(A.OLD_PAY_TOT_I         , 0) + ISNULL(A.OLD_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.OLD_ADD_BONUS_I       , 0)
	                                               + ISNULL(B.OLD_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)    AS OLD_PAY_HAM
	         , ISNULL(A.PRE_IN_TAX_I          , 0)                                          AS PRE_IN_TAX_I
	         , ISNULL(A.PRE_LOCAL_TAX_I       , 0)                                          AS PRE_LOCAL_TAX_I
	         , ISNULL(A.PRE_SP_TAX_I          , 0)                                          AS PRE_SP_TAX_I
	         , ISNULL(A.PRE_IN_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I, 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)    AS PRE_LOCAL_HAM
	    
	    --납세조합
	         , ISNULL(A.NAP_PAY_TOT_I         , 0)                                          AS NAP_PAY_TOT_I
	         , ISNULL(A.NAP_BONUS_TOTAL_I     , 0)                                          AS NAP_BONUS_TOTAL_I
	         , ISNULL(A.NAP_PAY_TOT_I         , 0) + ISNULL(A.NAP_BONUS_TOTAL_I     , 0)    AS NAP_PAY_HAM
	         , ISNULL(A.NAP_IN_TAX_I          , 0)                                          AS NAP_IN_TAX_I
	         , ISNULL(A.NAP_LOCAL_TAX_I       , 0)                                          AS NAP_LOCAL_TAX_I
	         , ISNULL(A.NAP_SP_TAX_I          , 0)                                          AS NAP_SP_TAX_I
	         , ISNULL(A.NAP_IN_TAX_I          , 0) + ISNULL(A.NAP_SP_TAX_I, 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS NAP_LOCAL_HAM
	    
	    --합계
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.OLD_PAY_TOT_I         , 0)
	                                               + ISNULL(A.NAP_PAY_TOT_I         , 0)    AS PAY_TOTAL_I
	         , ISNULL(A.BONUS_TOTAL_I         , 0)                                          AS BONUS_TOTAL_I
	         , ISNULL(A.ADD_BONUS_I           , 0)                                          AS ADD_BONUS_I
	         , ISNULL(A.STOCK_PROFIT_I        , 0)                                          AS STOCK_PROFIT_I
	         , ISNULL(A.OWNER_STOCK_DRAW_I    , 0)                                          AS OWNER_STOCK_DRAW_I
	         , ISNULL(A.PAY_TOTAL_I           , 0) + ISNULL(A.BONUS_TOTAL_I         , 0)
	                                               + ISNULL(A.ADD_BONUS_I           , 0)    AS TOT_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)    AS IN_TAX_HAM
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0) + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS LOCAL_TAX_HAM
	         , ISNULL(A.NOW_SP_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)    AS SP_TAX_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I          , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS CHONG_HAM
	    
	    --결정소득세
	         , ISNULL(A.DEF_IN_TAX_I          , 0)                                          AS DEF_IN_TAX_I
	         , ISNULL(A.DEF_LOCAL_TAX_I       , 0)                                          AS DEF_LOCAL_TAX_I
	         , ISNULL(A.DEF_SP_TAX_I          , 0)                                          AS DEF_SP_TAX_I
	         , ISNULL(A.DEF_IN_TAX_I          , 0) + ISNULL(A.DEF_SP_TAX_I          , 0)
	                                               + ISNULL(A.DEF_LOCAL_TAX_I       , 0)    AS DEF_HAM
	    
	    --차감세액
	         , ISNULL(A.IN_TAX_I              , 0)                                          AS IN_TAX_I
	         , ISNULL(A.LOCAL_TAX_I           , 0)                                          AS LOCAL_TAX_I
	         , ISNULL(A.SP_TAX_I              , 0)                                          AS SP_TAX_I
	         , ISNULL(A.IN_TAX_I              , 0) + ISNULL(A.SP_TAX_I              , 0)
	                                               + ISNULL(A.LOCAL_TAX_I           , 0)    AS LOCAL_HAM
	    
	    --과세대상
	         , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                               AS INCOME_SUPP_TOTAL_I        --총급여액
	         , ISNULL(A.INCOME_DED_I          , 0)                               AS INCOME_DED_I               --근로소득공제
	         , ISNULL(A.EARN_INCOME_I         , 0)                               AS EARN_INCOME_I              --근로소득금액
	    
	         , ISNULL(A.PER_DED_I             , 0)                               AS PER_DED_I                  --본인공제
	         , ISNULL(A.SPOUSE                ,'N')                              AS SPOUSE                     --배우자유무
	         , ISNULL(A.SPOUSE_DED_I          , 0)                               AS SPOUSE_DED_I               --배우자공제
	         , ISNULL(A.SUPP_NUM              , 0)                               AS SUPP_NUM                   --부양자
	         , ISNULL(A.SUPP_SUB_I            , 0)                               AS SUPP_SUB_I                 --부양자공제
	         , ISNULL(A.AGED_NUM              , 0)                               AS AGED_NUM                   --경로자
	         , ISNULL(A.DEFORM_NUM            , 0)                               AS DEFORM_NUM                 --장애자
	         , ISNULL(A.WOMAN                 ,'N')                              AS WOMAN                      --부녀자유무
	         , ISNULL(A.ONE_PARENT            ,'N')                              AS ONE_PARENT                 --부녀자유무
	         , ISNULL(A.AGED_DED_I            , 0)                               AS AGED_DED_I                 --경로공제
	         , ISNULL(A.DEFORM_DED_I          , 0)                               AS DEFORM_DED_I               --장애인공제
	         , ISNULL(A.WOMAN_DED_I           , 0)                               AS WOMAN_DED_I                --부녀자공제
	         , ISNULL(A.ONE_PARENT_DED_I      , 0)                               AS ONE_PARENT_DED_I           --한부모공제
	    
	         , ISNULL(A.ANU_DED_I             , 0)                               AS ANU_DED_I                  --국민연금공제금액
	         , ISNULL(A.PUBLIC_PENS_I         , 0)                               AS PUBLIC_PENS_I              --공무원연금
	         , ISNULL(A.SOLDIER_PENS_I        , 0)                               AS SOLDIER_PENS_I             --군인연금
	         , ISNULL(A.SCH_PENS_I            , 0)                               AS SCH_PENS_I                 --사립학교교직원연금
	         , ISNULL(A.POST_PENS_I           , 0)                               AS POST_PENS_I                --별정우체국연금
	    
	         , ISNULL(A.MED_PREMINM_I         , 0)                               AS MED_PREMINM_I              --건강보험료
	         , ISNULL(A.HIRE_INSUR_I          , 0)                               AS HIRE_INSUR_I               --고용보험료
	    
	         , ISNULL(A.HOUS_AMOUNT_I         , 0)                               AS HOUS_AMOUNT_I              --주택자금불입액(대출기관)
	         , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                               AS HOUS_AMOUNT_I_2            --주택자금불입액(거주자)
	         , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                               AS MORTGAGE_RETURN_I_2        --장기주택저당차입금이자상환액(15년미만)
	         , ISNULL(A.MORTGAGE_RETURN_I     , 0)                               AS MORTGAGE_RETURN_I          --장기주택저당차입금이자상환액(15년~29년)
	         , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                               AS MORTGAGE_RETURN_I_3        --장기주택저당차입금이자상환액(30년이상)
	         , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                               AS MORTGAGE_RETURN_I_5        --고정금리비거치상환대출(1500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                               AS MORTGAGE_RETURN_I_4        --기타대출(500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                               AS MORTGAGE_RETURN_I_6        --15년이상(고정금리이면서 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                               AS MORTGAGE_RETURN_I_7        --15년이상(고정금리이거나 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                               AS MORTGAGE_RETURN_I_8        --15년이상(그밖의대출)
	         , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                               AS MORTGAGE_RETURN_I_9        --10년이상(고정금리이거나 비거치상환)
	    
	         , ISNULL(A.PRIV_PENS_I           , 0)                               AS PRIV_PENS_I                --개인연금저축소득공제
	    
	         , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.HOUS_BU_AMT           , 0)                               AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT         , 0)                               AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I      , 0)                               AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.GIFT_DED_I            , 0)                               AS GIFT_DED_I                 --(소득공제)기부금소득공제합계
	    
	         , ISNULL(A.DED_INCOME_I          , 0)                               AS DED_INCOME_I               --차감근로소득
	    
	         , ISNULL(A.CARD_DED_I            , 0)                               AS CARD_DED_I                 --신용카드공제
	         , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                               AS COMP_PREMINUM_DED_I        --소기업,소상공인공제부금소득공제
	         , ISNULL(A.INVESTMENT_DED_I      , 0)                               AS INVESTMENT_DED_I           --투자조합출자공제
	         , ISNULL(A.STAFF_STOCK_DED_I     , 0)                               AS STAFF_STOCK_DED_I          --우리사주조합출연금액
	         , ISNULL(A.STAFF_GIFT_DED_I      , 0)                               AS STAFF_GIFT_DED_I           --(소득공제)우리사주기부금
	         , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                               AS EMPLOY_WORKER_DED_I        --고용유지중소기업근로자소득공제
	         , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                               AS NOT_AMOUNT_LOAN_DED_I      --목돈안드는전세이자상환액
	         , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                              AS LONG_INVEST_STOCK_DED_I    --장기집합투자증권저축
	    
	         , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                               AS OVER_INCOME_DED_LMT        --특별공제 종합한도 초과액
	         , ISNULL(A.TAX_STD_I             , 0)                               AS TAX_STD_I                  --소득과세표준
	         , ISNULL(A.COMP_TAX_I            , 0)                               AS COMP_TAX_I                 --산출세액
	    
	         , ISNULL(A.INCOME_REDU_I         , 0)                               AS INCOME_REDU_I              --소득세법
	         , ISNULL(A.YOUTH_DED_I           , 0)                               AS YOUTH_DED_I                --중소기업청년소득세감면금액(100%)
	         , ISNULL(A.YOUTH_DED_I3          , 0)                               AS YOUTH_DED_I3               --중소기업청년소득세감면금액(70%)
	         , ISNULL(A.YOUTH_DED_I2          , 0)                               AS YOUTH_DED_I2               --중소기업청년소득세감면금액(50%)
	         , ISNULL(A.SKILL_DED_I           , 0)                               AS SKILL_DED_I                --외국인기술공제
	         , ISNULL(A.TAXES_REDU_I          , 0)                               AS TAXES_REDU_I               --조감법
	    
	         , ISNULL(A.IN_TAX_DED_I          , 0)                               AS IN_TAX_DED_I               --근로소득세액공제
	         , ISNULL(A.MANY_CHILD_NUM        , 0)                               AS MANY_CHILD_NUM             --자녀양육
	         , ISNULL(A.CHILD_TAX_DED_I       , 0)                               AS CHILD_TAX_DED_I            --자녀세액공제
	    
	         , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)     AS SCI_TAX_DED_I              --과학기술인공제
	         , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)     AS RETIRE_TAX_DED_I           --근로자퇴직급여보장법
	         , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)     AS PENS_TAX_DED_I             --연금저축소득공제
	    
	         , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                               AS ETC_INSUR_TAX_DED_I        --보장성보험
	         , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                               AS DEFORM_INSUR_TAX_DED_I     --장애인전용보장성보험
	    
	         , ISNULL(A.MED_TAX_DED_I         , 0)                               AS MED_TAX_DED_I              --의료비공제금액
	         , ISNULL(A.EDUC_TAX_DED_I        , 0)                               AS EDUC_TAX_DED_I             --교육비공제
	         , ISNULL(A.GIFT_TAX_DED_I        , 0)                               AS GIFT_TAX_DED_I             --(세액공제)기부금세액공제합계
	    
	         , ISNULL(A.STD_TAX_DED_I         , 0)                               AS STD_TAX_DED_I              --표준세액공제
	    
	         , ISNULL(A.NAP_TAX_DED_I         , 0)                               AS NAP_TAX_DED_I              --납세조합세액공제
	         , ISNULL(A.HOUS_INTER_I          , 0)                               AS HOUS_INTER_I               --주택자금상환액
	         , ISNULL(A.OUTSIDE_INCOME_I      , 0)                               AS OUTSIDE_INCOME_I           --외국납부세액
	         , ISNULL(A.MON_RENT_I            , 0)                               AS MON_RENT_I                 --월세액
	      FROM           HAD600T A WITH (NOLOCK)
	           LEFT JOIN (SELECT COMP_CODE
	                           , YEAR_YYYY
	                           , PERSON_NUMB
	                           , SUM(ISNULL(P1_STOCK_BUY_PROFIT_I,0)) + SUM(ISNULL(P2_STOCK_BUY_PROFIT_I,0)) AS OLD_STOCK_PROFIT_I
	                           , SUM(ISNULL(P1_OWNER_STOCK_DRAW_I,0)) + SUM(ISNULL(P2_OWNER_STOCK_DRAW_I,0)) AS OLD_OWNER_STOCK_DRAW_I
	                      FROM   HAD500T WITH (NOLOCK)
	                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
	                     )       B               ON B.COMP_CODE   = A.COMP_CODE
	                                            AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                            AND B.PERSON_NUMB = A.PERSON_NUMB
	           LEFT JOIN HUM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                            AND C.PERSON_NUMB = A.PERSON_NUMB
	     WHERE A.COMP_CODE   = #{S_COMP_CODE}
	       AND A.YEAR_YYYY   = #{YEAR_YYYY}
	       AND A.PERSON_NUMB = #{PERSON_NUMB}
    </select>	
    <!-- 2017 -->
	<select id="had810skrServiceImpl.gridSelectList1_2017" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2017] QUERY01
	    SELECT A.*
	    FROM   (
	            SELECT uniLITE.fnGetTxt('H0033')                                                               AS TITLE --년말기초
	                 , ETC_INCOME_I
	                 , OUTSIDE_INCOME_I
	                 , EDUC_SUPP_I
	                 , MED_SUPP_I
	            FROM   HAD400T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    YEAR_YYYY      = #{YEAR_YYYY}
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
 	    
	            UNION  ALL
	    
	            SELECT uniLITE.fnGetTxt('H0034')                                                               AS TITLE --기타소득
	                 , SUM(CASE WHEN WAGES_CODE != 'G01' AND WAGES_CODE != 'G02' THEN SUPP_TOTAL_I ELSE 0 END) AS ETC_INCOME_I
	                 , 0                                                                                       AS OUTSIDE_INCOME_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G02'                         THEN SUPP_TOTAL_I ELSE 0 END) AS EDUC_SUPP_I
	                 , SUM(CASE WHEN WAGES_CODE  = 'G01'                         THEN SUPP_TOTAL_I ELSE 0 END) AS MED_SUPP_I 
	            FROM   HAD700T WITH (NOLOCK)
	            WHERE  COMP_CODE      = #{S_COMP_CODE}
	            AND    SUPP_DATE   LIKE #{YEAR_YYYY}+'%'
	            AND    PERSON_NUMB    = #{PERSON_NUMB}
	           ) A
	    WHERE A.ETC_INCOME_I != 0 OR A.OUTSIDE_INCOME_I != 0 OR A.EDUC_SUPP_I != 0 OR A.MED_SUPP_I != 0
    </select>
    
    <select id="had810skrServiceImpl.gridSelectList2_2017" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2017] QUERY03
	    SELECT A.NONTAX_CODE
	         , B.NONTAX_CODE_NAME
	         , A.NON_TAX_EMPTION_I
	         , A.P1_NON_TAX_EMPTION_I
	         , A.P2_NON_TAX_EMPTION_I
	    FROM  (
	           -- 연말정산 비과세소득
	           SELECT COMP_CODE 
	                , YEAR_YYYY
	                , PERSON_NUMB
	                , NONTAX_CODE
	                , SUM(NON_TAX_EMPTION_I)    AS NON_TAX_EMPTION_I
	                , SUM(P1_NON_TAX_EMPTION_I) AS P1_NON_TAX_EMPTION_I
	                , SUM(P2_NON_TAX_EMPTION_I) AS P2_NON_TAX_EMPTION_I
	           FROM   HAD610T WITH (NOLOCK)
	           GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB, NONTAX_CODE
	    
	           UNION  ALL
	    
	           -- 주식매수선택권행사이익 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA810T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP  BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	    
	           UNION  ALL
	    
	           -- 우리사주조합인출금 등록
	           SELECT A1.COMP_CODE 
	                , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
	                , A1.PERSON_NUMB
	                , A1.NONTAX_CODE
	                , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
	                , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
	                , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
	           FROM             HPA820T A1 WITH (NOLOCK)
	                  LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
	                                                    AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B1.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B1.NONTAX_CODE = A1.NONTAX_CODE
	                  LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
	                                                    AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
	                                                    AND B2.PERSON_NUMB = A1.PERSON_NUMB
	                                                    AND B2.NONTAX_CODE = A1.NONTAX_CODE
	           GROUP BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
	          ) A
	            LEFT JOIN HBS120T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                             AND B.TAX_YYYY     = A.YEAR_YYYY
	                                             AND B.NONTAX_CODE  = A.NONTAX_CODE
	    WHERE  A.COMP_CODE   = #{S_COMP_CODE}
	    AND    A.YEAR_YYYY   = #{YEAR_YYYY}
	    AND    A.PERSON_NUMB = #{PERSON_NUMB}
	    ORDER  BY A.NONTAX_CODE
    </select>
    
    <select id="had810skrServiceImpl.selectForm_2017" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2017] QUERY02
	    SELECT A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , ISNULL(C.NAME, '')                                                           AS NAME
	         , ISNULL(A.FORE_SINGLE_YN   ,'N') AS FORE_SINGLE_YN
	    
	    --주(현)
	         , ISNULL(A.NOW_PAY_TOT_I         , 0)                                          AS NOW_PAY_TOT_I
	         , ISNULL(A.NOW_BONUS_TOTAL_I     , 0)                                          AS NOW_BONUS_TOTAL_I
	         , ISNULL(A.NOW_ADD_BONUS_I       , 0)                                          AS NOW_ADD_BONUS_I
	         , ISNULL(A.NOW_STOCK_PROFIT_I    , 0)                                          AS NOW_STOCK_PROFIT_I
	         , ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)                                          AS NOW_OWNER_STOCK_DRAW_I
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.NOW_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.NOW_ADD_BONUS_I       , 0)
	                                               + ISNULL(A.NOW_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)    AS NOW_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0)                                          AS NOW_IN_TAX_I
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0)                                          AS NOW_LOCAL_TAX_I
	         , ISNULL(A.NOW_SP_TAX_I          , 0)                                          AS NOW_SP_TAX_I
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I  , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)    AS NOW_LOCAL_HAM
	    
	    --종(전)
	         , ISNULL(A.OLD_PAY_TOT_I         , 0)                                          AS OLD_PAY_TOT_I
	         , ISNULL(A.OLD_BONUS_TOTAL_I     , 0)                                          AS OLD_BONUS_TOTAL_I
	         , ISNULL(A.OLD_ADD_BONUS_I       , 0)                                          AS OLD_ADD_BONUS_I
	         , ISNULL(B.OLD_STOCK_PROFIT_I    , 0)                                          AS OLD_STOCK_PROFIT_I
	         , ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)                                          AS OLD_OWNER_STOCK_DRAW_I
	         , ISNULL(A.OLD_PAY_TOT_I         , 0) + ISNULL(A.OLD_BONUS_TOTAL_I     , 0)
	                                               + ISNULL(A.OLD_ADD_BONUS_I       , 0)
	                                               + ISNULL(B.OLD_STOCK_PROFIT_I    , 0)
	                                               + ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)    AS OLD_PAY_HAM
	         , ISNULL(A.PRE_IN_TAX_I          , 0)                                          AS PRE_IN_TAX_I
	         , ISNULL(A.PRE_LOCAL_TAX_I       , 0)                                          AS PRE_LOCAL_TAX_I
	         , ISNULL(A.PRE_SP_TAX_I          , 0)                                          AS PRE_SP_TAX_I
	         , ISNULL(A.PRE_IN_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I, 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)    AS PRE_LOCAL_HAM
	    
	    --납세조합
	         , ISNULL(A.NAP_PAY_TOT_I         , 0)                                          AS NAP_PAY_TOT_I
	         , ISNULL(A.NAP_BONUS_TOTAL_I     , 0)                                          AS NAP_BONUS_TOTAL_I
	         , ISNULL(A.NAP_PAY_TOT_I         , 0) + ISNULL(A.NAP_BONUS_TOTAL_I     , 0)    AS NAP_PAY_HAM
	         , ISNULL(A.NAP_IN_TAX_I          , 0)                                          AS NAP_IN_TAX_I
	         , ISNULL(A.NAP_LOCAL_TAX_I       , 0)                                          AS NAP_LOCAL_TAX_I
	         , ISNULL(A.NAP_SP_TAX_I          , 0)                                          AS NAP_SP_TAX_I
	         , ISNULL(A.NAP_IN_TAX_I          , 0) + ISNULL(A.NAP_SP_TAX_I, 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS NAP_LOCAL_HAM
	    
	    --합계
	         , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.OLD_PAY_TOT_I         , 0)
	                                               + ISNULL(A.NAP_PAY_TOT_I         , 0)    AS PAY_TOTAL_I
	         , ISNULL(A.BONUS_TOTAL_I         , 0)                                          AS BONUS_TOTAL_I
	         , ISNULL(A.ADD_BONUS_I           , 0)                                          AS ADD_BONUS_I
	         , ISNULL(A.STOCK_PROFIT_I        , 0)                                          AS STOCK_PROFIT_I
	         , ISNULL(A.OWNER_STOCK_DRAW_I    , 0)                                          AS OWNER_STOCK_DRAW_I
	         , ISNULL(A.PAY_TOTAL_I           , 0) + ISNULL(A.BONUS_TOTAL_I         , 0)
	                                               + ISNULL(A.ADD_BONUS_I           , 0)    AS TOT_PAY_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)    AS IN_TAX_HAM
	         , ISNULL(A.NOW_LOCAL_TAX_I       , 0) + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS LOCAL_TAX_HAM
	         , ISNULL(A.NOW_SP_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)    AS SP_TAX_HAM
	         , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I          , 0)
	                                               + ISNULL(A.NOW_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.PRE_IN_TAX_I          , 0)
	                                               + ISNULL(A.PRE_SP_TAX_I          , 0)
	                                               + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
	                                               + ISNULL(A.NAP_IN_TAX_I          , 0)
	                                               + ISNULL(A.NAP_SP_TAX_I          , 0)
	                                               + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS CHONG_HAM
	    
	    --결정소득세
	         , ISNULL(A.DEF_IN_TAX_I          , 0)                                          AS DEF_IN_TAX_I
	         , ISNULL(A.DEF_LOCAL_TAX_I       , 0)                                          AS DEF_LOCAL_TAX_I
	         , ISNULL(A.DEF_SP_TAX_I          , 0)                                          AS DEF_SP_TAX_I
	         , ISNULL(A.DEF_IN_TAX_I          , 0) + ISNULL(A.DEF_SP_TAX_I          , 0)
	                                               + ISNULL(A.DEF_LOCAL_TAX_I       , 0)    AS DEF_HAM
	    
	    --차감세액
	         , ISNULL(A.IN_TAX_I              , 0)                                          AS IN_TAX_I
	         , ISNULL(A.LOCAL_TAX_I           , 0)                                          AS LOCAL_TAX_I
	         , ISNULL(A.SP_TAX_I              , 0)                                          AS SP_TAX_I
	         , ISNULL(A.IN_TAX_I              , 0) + ISNULL(A.SP_TAX_I              , 0)
	                                               + ISNULL(A.LOCAL_TAX_I           , 0)    AS LOCAL_HAM
	    
	    --과세대상
	         , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                               AS INCOME_SUPP_TOTAL_I        --총급여액
	         , ISNULL(A.INCOME_DED_I          , 0)                               AS INCOME_DED_I               --근로소득공제
	         , ISNULL(A.EARN_INCOME_I         , 0)                               AS EARN_INCOME_I              --근로소득금액
	    
	         , ISNULL(A.PER_DED_I             , 0)                               AS PER_DED_I                  --본인공제
	         , ISNULL(A.SPOUSE                ,'N')                              AS SPOUSE                     --배우자유무
	         , ISNULL(A.SPOUSE_DED_I          , 0)                               AS SPOUSE_DED_I               --배우자공제
	         , ISNULL(A.SUPP_NUM              , 0)                               AS SUPP_NUM                   --부양자
	         , ISNULL(A.SUPP_SUB_I            , 0)                               AS SUPP_SUB_I                 --부양자공제
	         , ISNULL(A.AGED_NUM              , 0)                               AS AGED_NUM                   --경로자
	         , ISNULL(A.DEFORM_NUM            , 0)                               AS DEFORM_NUM                 --장애자
	         , ISNULL(A.WOMAN                 ,'N')                              AS WOMAN                      --부녀자유무
	         , ISNULL(A.ONE_PARENT            ,'N')                              AS ONE_PARENT                 --부녀자유무
	         , ISNULL(A.AGED_DED_I            , 0)                               AS AGED_DED_I                 --경로공제
	         , ISNULL(A.DEFORM_DED_I          , 0)                               AS DEFORM_DED_I               --장애인공제
	         , ISNULL(A.WOMAN_DED_I           , 0)                               AS WOMAN_DED_I                --부녀자공제
	         , ISNULL(A.ONE_PARENT_DED_I      , 0)                               AS ONE_PARENT_DED_I           --한부모공제
	    
	         , ISNULL(A.ANU_DED_I             , 0)                               AS ANU_DED_I                  --국민연금공제금액
	         , ISNULL(A.PUBLIC_PENS_I         , 0)                               AS PUBLIC_PENS_I              --공무원연금
	         , ISNULL(A.SOLDIER_PENS_I        , 0)                               AS SOLDIER_PENS_I             --군인연금
	         , ISNULL(A.SCH_PENS_I            , 0)                               AS SCH_PENS_I                 --사립학교교직원연금
	         , ISNULL(A.POST_PENS_I           , 0)                               AS POST_PENS_I                --별정우체국연금
	    
	         , ISNULL(A.MED_PREMINM_I         , 0)                               AS MED_PREMINM_I              --건강보험료
	         , ISNULL(A.HIRE_INSUR_I          , 0)                               AS HIRE_INSUR_I               --고용보험료
	    
	         , ISNULL(A.HOUS_AMOUNT_I         , 0)                               AS HOUS_AMOUNT_I              --주택자금불입액(대출기관)
	         , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                               AS HOUS_AMOUNT_I_2            --주택자금불입액(거주자)
	         , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                               AS MORTGAGE_RETURN_I_2        --장기주택저당차입금이자상환액(15년미만)
	         , ISNULL(A.MORTGAGE_RETURN_I     , 0)                               AS MORTGAGE_RETURN_I          --장기주택저당차입금이자상환액(15년~29년)
	         , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                               AS MORTGAGE_RETURN_I_3        --장기주택저당차입금이자상환액(30년이상)
	         , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                               AS MORTGAGE_RETURN_I_5        --고정금리비거치상환대출(1500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                               AS MORTGAGE_RETURN_I_4        --기타대출(500만원한도)
	         , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                               AS MORTGAGE_RETURN_I_6        --15년이상(고정금리이면서 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                               AS MORTGAGE_RETURN_I_7        --15년이상(고정금리이거나 비거치상환)
	         , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                               AS MORTGAGE_RETURN_I_8        --15년이상(그밖의대출)
	         , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                               AS MORTGAGE_RETURN_I_9        --10년이상(고정금리이거나 비거치상환)
	    
	         , ISNULL(A.PRIV_PENS_I           , 0)                               AS PRIV_PENS_I                --개인연금저축소득공제
	    
	         , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.HOUS_BU_AMT           , 0)                               AS HOUS_BU_AMT                --청약저축
	         , ISNULL(A.HOUS_WORK_AMT         , 0)                               AS HOUS_WORK_AMT              --근로자주택마련저축
	         , ISNULL(A.HOUS_BU_AMOUNT_I      , 0)                               AS HOUS_BU_AMOUNT_I           --주택청약종합저축
	    
	         , ISNULL(A.GIFT_DED_I            , 0)                               AS GIFT_DED_I                 --(소득공제)기부금소득공제합계
	    
	         , ISNULL(A.DED_INCOME_I          , 0)                               AS DED_INCOME_I               --차감근로소득
	    
	         , ISNULL(A.CARD_DED_I            , 0)                               AS CARD_DED_I                 --신용카드공제
	         , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                               AS COMP_PREMINUM_DED_I        --소기업,소상공인공제부금소득공제
	         , ISNULL(A.INVESTMENT_DED_I      , 0)                               AS INVESTMENT_DED_I           --투자조합출자공제
	         , ISNULL(A.STAFF_STOCK_DED_I     , 0)                               AS STAFF_STOCK_DED_I          --우리사주조합출연금액
	         , ISNULL(A.STAFF_GIFT_DED_I      , 0)                               AS STAFF_GIFT_DED_I           --(소득공제)우리사주기부금
	         , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                               AS EMPLOY_WORKER_DED_I        --고용유지중소기업근로자소득공제
	         , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                               AS NOT_AMOUNT_LOAN_DED_I      --목돈안드는전세이자상환액
	         , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                              AS LONG_INVEST_STOCK_DED_I    --장기집합투자증권저축
	    
	         , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                               AS OVER_INCOME_DED_LMT        --특별공제 종합한도 초과액
	         , ISNULL(A.TAX_STD_I             , 0)                               AS TAX_STD_I                  --소득과세표준
	         , ISNULL(A.COMP_TAX_I            , 0)                               AS COMP_TAX_I                 --산출세액
	    
	         , ISNULL(A.INCOME_REDU_I         , 0)                               AS INCOME_REDU_I              --소득세법
	         , ISNULL(A.YOUTH_DED_I           , 0)                               AS YOUTH_DED_I                --중소기업청년소득세감면금액(100%)
	         , ISNULL(A.YOUTH_DED_I3          , 0)                               AS YOUTH_DED_I3               --중소기업청년소득세감면금액(70%)
	         , ISNULL(A.YOUTH_DED_I2          , 0)                               AS YOUTH_DED_I2               --중소기업청년소득세감면금액(50%)
	         , ISNULL(A.SKILL_DED_I           , 0)                               AS SKILL_DED_I                --외국인기술공제
	         , ISNULL(A.TAXES_REDU_I          , 0)                               AS TAXES_REDU_I               --조감법
	    
	         , ISNULL(A.IN_TAX_DED_I          , 0)                               AS IN_TAX_DED_I               --근로소득세액공제
	         , ISNULL(A.MANY_CHILD_NUM        , 0)                               AS MANY_CHILD_NUM             --자녀양육
	         , ISNULL(A.CHILD_TAX_DED_I       , 0)                               AS CHILD_TAX_DED_I            --자녀세액공제
	    
	         , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)     AS SCI_TAX_DED_I              --과학기술인공제
	         , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)     AS RETIRE_TAX_DED_I           --근로자퇴직급여보장법
	         , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)     AS PENS_TAX_DED_I             --연금저축소득공제
	    
	         , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                               AS ETC_INSUR_TAX_DED_I        --보장성보험
	         , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                               AS DEFORM_INSUR_TAX_DED_I     --장애인전용보장성보험
	    
	         , ISNULL(A.MED_TAX_DED_I         , 0)                               AS MED_TAX_DED_I              --의료비공제금액
	         , ISNULL(A.EDUC_TAX_DED_I        , 0)                               AS EDUC_TAX_DED_I             --교육비공제
	         , ISNULL(A.GIFT_TAX_DED_I        , 0)                               AS GIFT_TAX_DED_I             --(세액공제)기부금세액공제합계
	    
	         , ISNULL(A.STD_TAX_DED_I         , 0)                               AS STD_TAX_DED_I              --표준세액공제
	    
	         , ISNULL(A.NAP_TAX_DED_I         , 0)                               AS NAP_TAX_DED_I              --납세조합세액공제
	         , ISNULL(A.HOUS_INTER_I          , 0)                               AS HOUS_INTER_I               --주택자금상환액
	         , ISNULL(A.OUTSIDE_INCOME_I      , 0)                               AS OUTSIDE_INCOME_I           --외국납부세액
	         , ISNULL(A.MON_RENT_I            , 0)                               AS MON_RENT_I                 --월세액
	      FROM           HAD600T A WITH (NOLOCK)
	           LEFT JOIN (SELECT COMP_CODE
	                           , YEAR_YYYY
	                           , PERSON_NUMB
	                           , SUM(ISNULL(P1_STOCK_BUY_PROFIT_I,0)) + SUM(ISNULL(P2_STOCK_BUY_PROFIT_I,0)) AS OLD_STOCK_PROFIT_I
	                           , SUM(ISNULL(P1_OWNER_STOCK_DRAW_I,0)) + SUM(ISNULL(P2_OWNER_STOCK_DRAW_I,0)) AS OLD_OWNER_STOCK_DRAW_I
	                      FROM   HAD500T WITH (NOLOCK)
	                      GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
	                     )       B               ON B.COMP_CODE   = A.COMP_CODE
	                                            AND B.YEAR_YYYY   = A.YEAR_YYYY
	                                            AND B.PERSON_NUMB = A.PERSON_NUMB
	           LEFT JOIN HUM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                            AND C.PERSON_NUMB = A.PERSON_NUMB
	     WHERE A.COMP_CODE   = #{S_COMP_CODE}
	       AND A.YEAR_YYYY   = #{YEAR_YYYY}
	       AND A.PERSON_NUMB = #{PERSON_NUMB}
    </select>	
	<select id="had810skrServiceImpl.gridSelectList1" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2015] QUERY01
		SELECT A.*
		FROM   (
		        SELECT 
		               uniLITE.fnGetTxt('H0033')                                                               AS TITLE --년말기초
		             , ETC_INCOME_I
		             , OUTSIDE_INCOME_I
		             , EDUC_SUPP_I
		             , MED_SUPP_I
		        FROM   HAD400T WITH (NOLOCK)
		        WHERE  COMP_CODE      = #{S_COMP_CODE}
		        AND    YEAR_YYYY      = #{YEAR_YYYY}
		        AND    PERSON_NUMB    = #{PERSON_NUMB}
		
		        UNION  ALL
		
		        SELECT 
		               uniLITE.fnGetTxt('H0034')                                                               AS TITLE --기타소득
		             , SUM(CASE WHEN WAGES_CODE != 'G01' AND WAGES_CODE != 'G02' THEN SUPP_TOTAL_I ELSE 0 END) AS ETC_INCOME_I
		             , 0                                                                                       AS OUTSIDE_INCOME_I
		             , SUM(CASE WHEN WAGES_CODE  = 'G02'                         THEN SUPP_TOTAL_I ELSE 0 END) AS EDUC_SUPP_I
		             , SUM(CASE WHEN WAGES_CODE  = 'G01'                         THEN SUPP_TOTAL_I ELSE 0 END) AS MED_SUPP_I 
		        FROM   HAD700T WITH (NOLOCK)
		        WHERE  COMP_CODE      = #{S_COMP_CODE}
		        AND    SUPP_DATE   LIKE #{YEAR_YYYY} + '%'
		        AND    PERSON_NUMB    = #{PERSON_NUMB}
		       ) A
		WHERE A.ETC_INCOME_I != 0 OR A.OUTSIDE_INCOME_I != 0 OR A.EDUC_SUPP_I != 0 OR A.MED_SUPP_I != 0
    </select>
    
    <select id="had810skrServiceImpl.gridSelectList2" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2015] QUERY03
		SELECT A.NONTAX_CODE
		     , B.NONTAX_CODE_NAME
		     , A.NON_TAX_EMPTION_I
		     , A.P1_NON_TAX_EMPTION_I
		     , A.P2_NON_TAX_EMPTION_I
		FROM  (
		       -- 연말정산 비과세소득
		       SELECT 
		              COMP_CODE 
		            , YEAR_YYYY
		            , PERSON_NUMB
		            , NONTAX_CODE
		            , SUM(NON_TAX_EMPTION_I)    AS NON_TAX_EMPTION_I
		            , SUM(P1_NON_TAX_EMPTION_I) AS P1_NON_TAX_EMPTION_I
		            , SUM(P2_NON_TAX_EMPTION_I) AS P2_NON_TAX_EMPTION_I
		       FROM   HAD610T WITH (NOLOCK)
		       GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB, NONTAX_CODE
		
		       UNION  ALL
		
		       -- 주식매수선택권행사이익 등록
		       SELECT 
		              A1.COMP_CODE 
		            , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
		            , A1.PERSON_NUMB
		            , A1.NONTAX_CODE
		            , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
		            , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
		            , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
		       FROM             HPA810T A1 WITH (NOLOCK)
		              LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
		                                                AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
		                                                AND B1.PERSON_NUMB = A1.PERSON_NUMB
		                                                AND B1.NONTAX_CODE = A1.NONTAX_CODE
		              LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
		                                                AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
		                                                AND B2.PERSON_NUMB = A1.PERSON_NUMB
		                                                AND B2.NONTAX_CODE = A1.NONTAX_CODE
		       GROUP  BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
		
		       UNION  ALL
		
		       -- 우리사주조합인출금 등록
		       SELECT 
		              A1.COMP_CODE 
		            , LEFT(A1.PAY_YYYYMM, 4)        AS YEAR_YYYY
		            , A1.PERSON_NUMB
		            , A1.NONTAX_CODE
		            , SUM(A1.TAX_EXEMPTION_I)       AS NON_TAX_EMPTION_I
		            , ISNULL(B1.TAX_EXEMPTION_I, 0) AS P1_NON_TAX_EMPTION_I
		            , ISNULL(B2.TAX_EXEMPTION_I, 0) AS P2_NON_TAX_EMPTION_I
		       FROM             HPA820T A1 WITH (NOLOCK)
		              LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A1.COMP_CODE
		                                                AND B1.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
		                                                AND B1.PERSON_NUMB = A1.PERSON_NUMB
		                                                AND B1.NONTAX_CODE = A1.NONTAX_CODE
		              LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A1.COMP_CODE
		                                                AND B2.YEAR_YYYY   = LEFT(A1.PAY_YYYYMM, 4)
		                                                AND B2.PERSON_NUMB = A1.PERSON_NUMB
		                                                AND B2.NONTAX_CODE = A1.NONTAX_CODE
		       GROUP BY A1.COMP_CODE, LEFT(A1.PAY_YYYYMM, 4), A1.PERSON_NUMB, A1.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
		      ) A
		        LEFT JOIN HBS120T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.TAX_YYYY     = A.YEAR_YYYY
		                                         AND B.NONTAX_CODE  = A.NONTAX_CODE
		WHERE  A.COMP_CODE   = #{S_COMP_CODE}    
		AND    A.YEAR_YYYY   = #{YEAR_YYYY}      
		AND    A.PERSON_NUMB = #{PERSON_NUMB}    
		ORDER  BY A.NONTAX_CODE
    </select>
    
    <select id="had810skrServiceImpl.selectForm" parameterType="Map" resultType="rMap">
		--had810skr.Chad810skr[fnHad810Q2015] QUERY02
		SELECT 
		       A.YEAR_YYYY
		     , A.PERSON_NUMB
		     , ISNULL(C.NAME, '')                                                           AS NAME
		     , ISNULL(A.FORE_SINGLE_YN   ,'N') 				AS FORE_SINGLE_YN
		     , ISNULL(A.NOW_PAY_TOT_I         , 0)                                          AS NOW_PAY_TOT_I
		     , ISNULL(A.NOW_BONUS_TOTAL_I     , 0)                                          AS NOW_BONUS_TOTAL_I
		     , ISNULL(A.NOW_ADD_BONUS_I       , 0)                                          AS NOW_ADD_BONUS_I
		     , ISNULL(A.NOW_STOCK_PROFIT_I    , 0)                                          AS NOW_STOCK_PROFIT_I
		     , ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)                                          AS NOW_OWNER_STOCK_DRAW_I
		     , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.NOW_BONUS_TOTAL_I     , 0)
		                                           + ISNULL(A.NOW_ADD_BONUS_I       , 0)
		                                           + ISNULL(A.NOW_STOCK_PROFIT_I    , 0)
		                                           + ISNULL(A.NOW_OWNER_STOCK_DRAW_I, 0)    AS NOW_PAY_HAM
		     , ISNULL(A.NOW_IN_TAX_I          , 0)                                          AS NOW_IN_TAX_I
		     , ISNULL(A.NOW_LOCAL_TAX_I       , 0)                                          AS NOW_LOCAL_TAX_I
		     , ISNULL(A.NOW_SP_TAX_I          , 0)                                          AS NOW_SP_TAX_I
		     , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I  , 0)
		                                           + ISNULL(A.NOW_LOCAL_TAX_I       , 0)    AS NOW_LOCAL_HAM
		     , ISNULL(A.OLD_PAY_TOT_I         , 0)                                          AS OLD_PAY_TOT_I
		     , ISNULL(A.OLD_BONUS_TOTAL_I     , 0)                                          AS OLD_BONUS_TOTAL_I
		     , ISNULL(A.OLD_ADD_BONUS_I       , 0)                                          AS OLD_ADD_BONUS_I
		     , ISNULL(B.OLD_STOCK_PROFIT_I    , 0)                                          AS OLD_STOCK_PROFIT_I
		     , ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)                                          AS OLD_OWNER_STOCK_DRAW_I
		     , ISNULL(A.OLD_PAY_TOT_I         , 0) + ISNULL(A.OLD_BONUS_TOTAL_I     , 0)
		                                           + ISNULL(A.OLD_ADD_BONUS_I       , 0)
		                                           + ISNULL(B.OLD_STOCK_PROFIT_I    , 0)
		                                           + ISNULL(B.OLD_OWNER_STOCK_DRAW_I, 0)    AS OLD_PAY_HAM
		     , ISNULL(A.PRE_IN_TAX_I          , 0)                                          AS PRE_IN_TAX_I
		     , ISNULL(A.PRE_LOCAL_TAX_I       , 0)                                          AS PRE_LOCAL_TAX_I
		     , ISNULL(A.PRE_SP_TAX_I          , 0)                                          AS PRE_SP_TAX_I
		     , ISNULL(A.PRE_IN_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I, 0)
		                                           + ISNULL(A.PRE_LOCAL_TAX_I       , 0)    AS PRE_LOCAL_HAM
		     , ISNULL(A.NAP_PAY_TOT_I         , 0)                                          AS NAP_PAY_TOT_I
		     , ISNULL(A.NAP_BONUS_TOTAL_I     , 0)                                          AS NAP_BONUS_TOTAL_I
		     , ISNULL(A.NAP_PAY_TOT_I         , 0) + ISNULL(A.NAP_BONUS_TOTAL_I     , 0)    AS NAP_PAY_HAM
		     , ISNULL(A.NAP_IN_TAX_I          , 0)                                          AS NAP_IN_TAX_I
		     , ISNULL(A.NAP_LOCAL_TAX_I       , 0)                                          AS NAP_LOCAL_TAX_I
		     , ISNULL(A.NAP_SP_TAX_I          , 0)                                          AS NAP_SP_TAX_I
		     , ISNULL(A.NAP_IN_TAX_I          , 0) + ISNULL(A.NAP_SP_TAX_I, 0)
		                                           + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS NAP_LOCAL_HAM
		     , ISNULL(A.NOW_PAY_TOT_I         , 0) + ISNULL(A.OLD_PAY_TOT_I         , 0)
		                                           + ISNULL(A.NAP_PAY_TOT_I         , 0)    AS PAY_TOTAL_I
		     , ISNULL(A.BONUS_TOTAL_I         , 0)                                          AS BONUS_TOTAL_I
		     , ISNULL(A.ADD_BONUS_I           , 0)                                          AS ADD_BONUS_I
		     , ISNULL(A.STOCK_PROFIT_I        , 0)                                          AS STOCK_PROFIT_I
		     , ISNULL(A.OWNER_STOCK_DRAW_I    , 0)                                          AS OWNER_STOCK_DRAW_I
		     , ISNULL(A.PAY_TOTAL_I           , 0) + ISNULL(A.BONUS_TOTAL_I         , 0)
		                                           + ISNULL(A.ADD_BONUS_I           , 0)    AS TOT_PAY_HAM
		     , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.PRE_IN_TAX_I          , 0)
		                                           + ISNULL(A.NAP_IN_TAX_I          , 0)    AS IN_TAX_HAM
		     , ISNULL(A.NOW_LOCAL_TAX_I       , 0) + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
		                                           + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS LOCAL_TAX_HAM
		     , ISNULL(A.NOW_SP_TAX_I          , 0) + ISNULL(A.PRE_SP_TAX_I          , 0)
		                                           + ISNULL(A.NAP_SP_TAX_I          , 0)    AS SP_TAX_HAM
		     , ISNULL(A.NOW_IN_TAX_I          , 0) + ISNULL(A.NOW_SP_TAX_I          , 0)
		                                           + ISNULL(A.NOW_LOCAL_TAX_I       , 0)
		                                           + ISNULL(A.PRE_IN_TAX_I          , 0)
		                                           + ISNULL(A.PRE_SP_TAX_I          , 0)
		                                           + ISNULL(A.PRE_LOCAL_TAX_I       , 0)
		                                           + ISNULL(A.NAP_IN_TAX_I          , 0)
		                                           + ISNULL(A.NAP_SP_TAX_I          , 0)
		                                           + ISNULL(A.NAP_LOCAL_TAX_I       , 0)    AS CHONG_HAM
		     , ISNULL(A.DEF_IN_TAX_I          , 0)                                          AS DEF_IN_TAX_I
		     , ISNULL(A.DEF_LOCAL_TAX_I       , 0)                                          AS DEF_LOCAL_TAX_I
		     , ISNULL(A.DEF_SP_TAX_I          , 0)                                          AS DEF_SP_TAX_I
		     , ISNULL(A.DEF_IN_TAX_I          , 0) + ISNULL(A.DEF_SP_TAX_I          , 0)
		                                           + ISNULL(A.DEF_LOCAL_TAX_I       , 0)    AS DEF_HAM
		     , ISNULL(A.IN_TAX_I              , 0)                                          AS IN_TAX_I
		     , ISNULL(A.LOCAL_TAX_I           , 0)                                          AS LOCAL_TAX_I
		     , ISNULL(A.SP_TAX_I              , 0)                                          AS SP_TAX_I
		     , ISNULL(A.IN_TAX_I              , 0) + ISNULL(A.SP_TAX_I              , 0)
		                                           + ISNULL(A.LOCAL_TAX_I           , 0)    AS LOCAL_HAM
		     , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                               AS INCOME_SUPP_TOTAL_I
		     , ISNULL(A.INCOME_DED_I          , 0)                               AS INCOME_DED_I
		     , ISNULL(A.EARN_INCOME_I         , 0)                               AS EARN_INCOME_I
		     , ISNULL(A.PER_DED_I             , 0)                               AS PER_DED_I
		     , ISNULL(A.SPOUSE                ,'N')                              AS SPOUSE
		     , ISNULL(A.SPOUSE_DED_I          , 0)                               AS SPOUSE_DED_I
		     , ISNULL(A.SUPP_NUM              , 0)                               AS SUPP_NUM
		     , ISNULL(A.SUPP_SUB_I            , 0)                               AS SUPP_SUB_I
		     , ISNULL(A.AGED_NUM              , 0)                               AS AGED_NUM
		     , ISNULL(A.DEFORM_NUM            , 0)                               AS DEFORM_NUM
		     , ISNULL(A.WOMAN                 ,'N')                              AS WOMAN
		     , ISNULL(A.ONE_PARENT            ,'N')                              AS ONE_PARENT
		     , ISNULL(A.AGED_DED_I            , 0)                               AS AGED_DED_I
		     , ISNULL(A.DEFORM_DED_I          , 0)                               AS DEFORM_DED_I
		     , ISNULL(A.WOMAN_DED_I           , 0)                               AS WOMAN_DED_I
		     , ISNULL(A.ONE_PARENT_DED_I      , 0)                               AS ONE_PARENT_DED_I
		     , ISNULL(A.ANU_DED_I             , 0)                               AS ANU_DED_I
		     , ISNULL(A.PUBLIC_PENS_I         , 0)                               AS PUBLIC_PENS_I
		     , ISNULL(A.SOLDIER_PENS_I        , 0)                               AS SOLDIER_PENS_I
		     , ISNULL(A.SCH_PENS_I            , 0)                               AS SCH_PENS_I
		     , ISNULL(A.POST_PENS_I           , 0)                               AS POST_PENS_I
		     , ISNULL(A.MED_PREMINM_I         , 0)                               AS MED_PREMINM_I
		     , ISNULL(A.HIRE_INSUR_I          , 0)                               AS HIRE_INSUR_I
		     , ISNULL(A.HOUS_AMOUNT_I         , 0)                               AS HOUS_AMOUNT_I
		     , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                               AS HOUS_AMOUNT_I_2
		     , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                               AS MORTGAGE_RETURN_I_2
		     , ISNULL(A.MORTGAGE_RETURN_I     , 0)                               AS MORTGAGE_RETURN_I
		     , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                               AS MORTGAGE_RETURN_I_3
		     , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                               AS MORTGAGE_RETURN_I_5
		     , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                               AS MORTGAGE_RETURN_I_4
		     , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                               AS MORTGAGE_RETURN_I_6
		     , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                               AS MORTGAGE_RETURN_I_7
		     , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                               AS MORTGAGE_RETURN_I_8
		     , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                               AS MORTGAGE_RETURN_I_9
		     , ISNULL(A.PRIV_PENS_I           , 0)                               AS PRIV_PENS_I
		     , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT
		     , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT
		     , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I
		     , ISNULL(A.GIFT_DED_I            , 0)                               AS GIFT_DED_I
		     , ISNULL(A.DED_INCOME_I          , 0)                               AS DED_INCOME_I
		     , ISNULL(A.CARD_DED_I            , 0)                               AS CARD_DED_I
		     , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                               AS COMP_PREMINUM_DED_I
		     , ISNULL(A.INVESTMENT_DED_I      , 0)                               AS INVESTMENT_DED_I
		     , ISNULL(A.STAFF_STOCK_DED_I     , 0)                               AS STAFF_STOCK_DED_I
		     , ISNULL(A.STAFF_GIFT_DED_I      , 0)                               AS STAFF_GIFT_DED_I
		     , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                               AS EMPLOY_WORKER_DED_I
		     , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                               AS NOT_AMOUNT_LOAN_DED_I
		     , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                              AS LONG_INVEST_STOCK_DED_I
		     , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                               AS OVER_INCOME_DED_LMT
		     , ISNULL(A.TAX_STD_I             , 0)                               AS TAX_STD_I
		     , ISNULL(A.COMP_TAX_I            , 0)                               AS COMP_TAX_I
		     , ISNULL(A.INCOME_REDU_I         , 0)                               AS INCOME_REDU_I
		     , ISNULL(A.YOUTH_DED_I           , 0)                               AS YOUTH_DED_I
		     , ISNULL(A.YOUTH_DED_I2          , 0)                               AS YOUTH_DED_I2
		     , ISNULL(A.YOUTH_DED_I3          , 0)                               AS YOUTH_DED_I3               
		     , ISNULL(A.SKILL_DED_I           , 0)                               AS SKILL_DED_I
		     , ISNULL(A.TAXES_REDU_I          , 0)                               AS TAXES_REDU_I
		     , ISNULL(A.IN_TAX_DED_I          , 0)                               AS IN_TAX_DED_I
		     , ISNULL(A.MANY_CHILD_NUM        , 0)                               AS MANY_CHILD_NUM
		     , ISNULL(A.CHILD_TAX_DED_I       , 0)                               AS CHILD_TAX_DED_I
		     , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)     AS SCI_TAX_DED_I
		     , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)     AS RETIRE_TAX_DED_I
		     , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)     AS PENS_TAX_DED_I
		     , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                               AS ETC_INSUR_TAX_DED_I
		     , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                               AS DEFORM_INSUR_TAX_DED_I
		     , ISNULL(A.MED_TAX_DED_I         , 0)                               AS MED_TAX_DED_I
		     , ISNULL(A.EDUC_TAX_DED_I        , 0)                               AS EDUC_TAX_DED_I
		     , ISNULL(A.GIFT_TAX_DED_I        , 0)                               AS GIFT_TAX_DED_I
		     , ISNULL(A.STD_TAX_DED_I         , 0)                               AS STD_TAX_DED_I
		     , ISNULL(A.NAP_TAX_DED_I         , 0)                               AS NAP_TAX_DED_I
		     , ISNULL(A.HOUS_INTER_I          , 0)                               AS HOUS_INTER_I
		     , ISNULL(A.OUTSIDE_INCOME_I      , 0)                               AS OUTSIDE_INCOME_I
		     , ISNULL(A.MON_RENT_I            , 0)                               AS MON_RENT_I
		  FROM           HAD600T A WITH (NOLOCK)
		       LEFT JOIN (SELECT COMP_CODE
		                       , YEAR_YYYY
		                       , PERSON_NUMB
		                       , SUM(ISNULL(P1_STOCK_BUY_PROFIT_I,0)) + SUM(ISNULL(P2_STOCK_BUY_PROFIT_I,0)) AS OLD_STOCK_PROFIT_I
		                       , SUM(ISNULL(P1_OWNER_STOCK_DRAW_I,0)) + SUM(ISNULL(P2_OWNER_STOCK_DRAW_I,0)) AS OLD_OWNER_STOCK_DRAW_I
		                  FROM   HAD500T WITH (NOLOCK)
		                  GROUP  BY COMP_CODE, YEAR_YYYY, PERSON_NUMB
		                 )       B               ON B.COMP_CODE   = A.COMP_CODE
		                                        AND B.YEAR_YYYY   = A.YEAR_YYYY
		                                        AND B.PERSON_NUMB = A.PERSON_NUMB
		       LEFT JOIN HUM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                        AND C.PERSON_NUMB = A.PERSON_NUMB
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.YEAR_YYYY   = #{YEAR_YYYY}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
    </select>	
    <select id="had810skrServiceImpl.selectPrevious" parameterType="rMap" resultType="rMap">
		    DECLARE @JoinDate           NVARCHAR(08)                -- (필수) 입사기준일
		          , @RetireDateFr       NVARCHAR(08)                -- (필수) 퇴사기준일(Fr)
		          , @RetireDateTo       NVARCHAR(08)                -- (필수) 퇴사기준일(To)
	
		    SET @JoinDate     = #{YEAR_YYYY} + '1231'
		    SET @RetireDateFr = #{YEAR_YYYY} + '0101'
		    SET @RetireDateTo = #{YEAR_YYYY} + '1231'
		
	        SELECT TOP 1 A.PERSON_NUMB AS PREV_PERSON_NUMB, A.NAME, ISNULL(B.FORE_SINGLE_YN        , '') AS FORE_SINGLE_YN
	          FROM HUM100T A WITH (NOLOCK)
	          LEFT  JOIN HAD400T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.YEAR_YYYY   = #{YEAR_YYYY}
                                                  AND B.PERSON_NUMB = A.PERSON_NUMB
	         WHERE A.COMP_CODE   = #{S_COMP_CODE}
	           AND A.PERSON_NUMB &lt; #{PERSON_NUMB}
	           AND A.JOIN_DATE   &lt; @JoinDate
	           AND (A.RETR_DATE = '00000000' OR (A.RETR_DATE &gt;= @RetireDateFr AND RETR_DATE &lt;= @RetireDateTo))
	         ORDER BY A.PERSON_NUMB DESC
		 
	</select>
    <select id="had810skrServiceImpl.selectNext" parameterType="rMap" resultType="rMap">
		    DECLARE @JoinDate           NVARCHAR(08)                -- (필수) 입사기준일
		          , @RetireDateFr       NVARCHAR(08)                -- (필수) 퇴사기준일(Fr)
		          , @RetireDateTo       NVARCHAR(08)                -- (필수) 퇴사기준일(To)
	
		    SET @JoinDate     = #{YEAR_YYYY} + '1231'
		    SET @RetireDateFr = #{YEAR_YYYY} + '0101'
		    SET @RetireDateTo = #{YEAR_YYYY} + '1231'
		    
	        SELECT TOP 1  
	        	  A.PERSON_NUMB AS NEXT_PERSON_NUMB
	        	, A.NAME
	        	, ISNULL(B.FORE_SINGLE_YN        , '') AS FORE_SINGLE_YN
	          FROM HUM100T A WITH (NOLOCK)
	          LEFT  JOIN HAD400T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.YEAR_YYYY   = #{YEAR_YYYY}
                                                  AND B.PERSON_NUMB = A.PERSON_NUMB
	         WHERE A.COMP_CODE   = #{S_COMP_CODE}
	           AND A.PERSON_NUMB &gt; #{PERSON_NUMB}
	           AND A.JOIN_DATE   &lt; @JoinDate
	           AND (A.RETR_DATE = '00000000' OR (A.RETR_DATE &gt;= @RetireDateFr AND RETR_DATE &lt;= @RetireDateTo))
	         ORDER BY A.PERSON_NUMB ASC
	</select>
    
</mapper>