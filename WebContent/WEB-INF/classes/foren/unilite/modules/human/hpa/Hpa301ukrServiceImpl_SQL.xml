<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa301ukrServiceImpl">
	<select id="hpa301ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">
		--hpa301ukr.Chpa301ukr[fnHpa301Qstd] QUERY01
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		
		--  1. 변수 정의 -----------------------------------------------------------------------------------------------------------
		    DECLARE   @COMP_CODE    NVARCHAR(08)
		            , @FR_BASE_DATE NVARCHAR(08)
		            , @TO_BASE_DATE NVARCHAR(08)
		            , @DIV_CODE     NVARCHAR(08)
		            , @FR_DEPT      NVARCHAR(08)
		            , @TO_DEPT      NVARCHAR(08)
		            , @PERSON_NUMB  NVARCHAR(10)
		            , @NAME         NVARCHAR(10)
		            , @INSUR_TYPE   NVARCHAR(01)
		            , @EMPLOY_TYPE  NVARCHAR(02)
		            , @USERID       NVARCHAR(100)
		            , @DateFormat   NVARCHAR(10)
		        
		--  2. 변수 값 할당 -----------------------------------------------------------------------------------------------------------
		    SET @COMP_CODE      = #{S_COMP_CODE}        --법인코드
		    SET @FR_BASE_DATE   = #{FR_BASE_DATE}     	--기준일 FR
		    SET @TO_BASE_DATE   = #{TO_BASE_DATE}       --기준일 TO
		    SET @DIV_CODE       = #{DIV_CODE}        	--사업장		    
		    SET @INSUR_TYPE     = #{INSUR_TYPE}        	--보험구분
		    SET @EMPLOY_TYPE    = #{EMPLOY_TYPE}        --사원구분
		    SET @NAME           = #{NAME}       		--성명
		    SET @PERSON_NUMB    = #{PERSON_NUMB}        --사번
		    SET @USERID         = #{S_USER_ID} 	        --로그인
		
		--  3. 기준일자 가져오기 -----------------------------------------------------------------------------------------------------------
		    DECLARE  @MAX_BASE_DATE    NVARCHAR(08)
		
		    SELECT   @MAX_BASE_DATE = MAX(BASE_DATE)
		    FROM     HPA100T WITH (NOLOCK)
		    WHERE    COMP_CODE     = @COMP_CODE
		    AND      INSUR_TYPE    = @INSUR_TYPE
		
		--  4. 날짜포맷 가져오기 -----------------------------------------------------------------------------------------------------------
		    SELECT TOP 1 @DateFormat = M1.CODE_NAME
		    FROM    BSA100T M1 WITH (NOLOCK)
		    WHERE   M1.COMP_CODE = @COMP_CODE
		    AND     M1.MAIN_CODE = N'B044'
		    AND     M1.REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		
		--  5. Main Query -----------------------------------------------------------------------------------------------------------
		    SELECT 
		              CAST(0 AS BIT)                              AS CHOICE 
		            , M.COMP_CODE                                 AS COMP_CODE
		            , M.BASE_DATE                                 AS BASE_DATE
		            , M.INSUR_TYPE                                AS INSUR_TYPE
		            , B.DIV_CODE                                  AS DIV_CODE    
		            , A.DEPT_NAME                                 AS DEPT_NAME
		            , M1.CODE_NAME                                AS POST_CODE
		            , M.BASE_DATE                                 AS BASE_DATE
		            , A.NAME                                      AS NAME
		            , A.PERSON_NUMB                               AS PERSON_NUMB
		            , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')  AS REPRE_NUM
		            , REPLACE(
		              REPLACE(
		              REPLACE(@DateFormat,  'YYYY', SUBSTRING( A.JOIN_DATE, 1, 4))  ,
		                                    'MM'  , SUBSTRING( A.JOIN_DATE, 5, 2))  ,
		                                    'DD'  , SUBSTRING( A.JOIN_DATE, 7, 2))      AS JOIN_DATE
		            , AF_INSUR_AVG_I
		            , M.AF_INSUR_I
		            , M.AF_ORIMED_INSUR_I
		            , M.AF_OLDMED_INSUR_I
		            , M.APPLY_YN
		    FROM                HPA100T     M WITH(NOLOCK)  
		            INNER JOIN  HUM100T     A WITH(NOLOCK)  ON  A.COMP_CODE     = M.COMP_CODE
		                                                    AND A.PERSON_NUMB   = M.PERSON_NUMB
		            LEFT  JOIN  BOR120T     B WITH(NOLOCK)  ON  B.COMP_CODE     = A.COMP_CODE
		                                                    AND B.DIV_CODE      = A.DIV_CODE
		            LEFT  JOIN  BSA100T    M1 WITH(NOLOCK)  ON  M1.COMP_CODE    = A.COMP_CODE
		                                                    AND M1.MAIN_CODE    = 'H005'
		                                                    AND M1.SUB_CODE     = A.POST_CODE
		            
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE &gt;= @FR_BASE_DATE
		    AND     M.BASE_DATE &lt;= @TO_BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   LIKE @PERSON_NUMB + '%'
		    AND     A.DIV_CODE      LIKE @DIV_CODE + '%'
		    <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
			   AND     A.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
				 	#{item}
				</foreach>									
			</if>
		    AND     A.EMPLOY_TYPE   LIKE @EMPLOY_TYPE + '%'
		    AND     A.NAME          LIKE @NAME + '%'
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END		
	</select>
	
	<update id="hpa301ukrServiceImpl.insertDetail" parameterType="Map">
		--hap300ukr.Chpa300ukr[fnHpa301Save] Query02
		INSERT INTO HPA100T
		SELECT 
			  #{S_COMP_CODE}
			, #{BASE_DATE}
			, #{INSUR_TYPE}
			, #{PERSON_NUMB}
			, 0
			, 0
			, 0
			, 0
			, #{AF_INSUR_AVG_I}
			, #{AF_INSUR_I}
			, #{AF_ORIMED_INSUR_I}
			, #{AF_OLDMED_INSUR_I}
			, 'N'
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
			, NULL,NULL,NULL,0,0,0
	</update>
	
	<update id="hpa301ukrServiceImpl.updateDetail" parameterType="Map">
		--hap300ukr.Chpa300ukr[fnHpa301Save] Query02
		UPDATE HPA100T
		    SET   AF_INSUR_AVG_I        = #{AF_INSUR_AVG_I}   
		        , AF_INSUR_I            = #{AF_INSUR_I}       
		        , AF_ORIMED_INSUR_I     = #{AF_ORIMED_INSUR_I}
		        , AF_OLDMED_INSUR_I     = #{AF_OLDMED_INSUR_I}
		        , UPDATE_DB_USER        = #{S_USER_ID}
		        , UPDATE_DB_TIME        = GETDATE()
		
		WHERE   1=1
		AND     COMP_CODE   = #{S_COMP_CODE}
		AND     BASE_DATE   = #{BASE_DATE}
		AND     INSUR_TYPE  = #{INSUR_TYPE}
		AND     PERSON_NUMB = #{PERSON_NUMB}
		AND     APPLY_YN    = #{APPLY_YN}
	</update>
	
	<delete id="hpa301ukrServiceImpl.deleteDetail" parameterType="Map">
		--hpa301ukr.Chpa301ukr[fnHpa301Save] Query01
		DELETE HPA100T
		WHERE   1=1
		AND     COMP_CODE   = #{S_COMP_CODE}
		AND     BASE_DATE   = #{BASE_DATE} 
		AND     INSUR_TYPE  = #{INSUR_TYPE} 
		AND     PERSON_NUMB = #{PERSON_NUMB}
		AND     APPLY_YN    = #{APPLY_YN}
	</delete>
	
	<select id="hpa301ukrServiceImpl.applyMaster" parameterType="Map" resultType="int">
		--hpa301ukr.Chpa301ukr[fnHpa301Apply] Query04
		--인사정보반영(국민연금)
		DECLARE @COMP_CODE      NVARCHAR(10),
		        @BASE_DATE   NVARCHAR(10),
		        @INSUR_TYPE     NVARCHAR(1) ,
		        @USERID         NVARCHAR(100)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BASE_DATE      = #{BASE_DATE}
		SET @INSUR_TYPE     = #{INSUR_TYPE}
		SET @USERID         = #{S_USER_ID}
		
		IF @INSUR_TYPE = '1'
		BEGIN
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I  = A.ANU_BASE_I
		            , M.BE_INSUR_I      = A.ANU_INSUR_I
		            , M.APPLY_YN        = 'Y'
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		    UPDATE  A
		        SET   A.ANU_BASE_I  = M.AF_INSUR_AVG_I
		            , A.ANU_INSUR_I = M.AF_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		END
		
		--인사정보반영(건강보험)
		IF @INSUR_TYPE = '2'
		BEGIN
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I      = A.MED_AVG_I
		            , M.BE_INSUR_I          = A.MED_INSUR_I
		            , M.APPLY_YN               = 'Y'
		            , M.BE_ORIMED_INSUR_I   = A.ORI_MED_INSUR_I
		            , M.BE_OLDMED_INSUR_I   = A.OLD_MED_INSUR_I
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		    UPDATE  A
		        SET   A.MED_AVG_I       = M.AF_INSUR_AVG_I
		            , A.MED_INSUR_I     = M.AF_INSUR_I
		            , A.ORI_MED_INSUR_I = M.AF_ORIMED_INSUR_I
		            , A.OLD_MED_INSUR_I = M.AF_OLDMED_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		END
		
		--인사정보반영(고용보험)
		IF @INSUR_TYPE = '3'
		BEGIN
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I  = A.HIRE_AVG_I
		            , M.BE_INSUR_I      = A.HIRE_INSUR_I
		            , M.APPLY_YN           = 'Y'
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		    UPDATE  A
		        SET   A.HIRE_AVG_I      = M.AF_INSUR_AVG_I
		            , A.HIRE_INSUR_I    = M.AF_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		END

	</select>
	
	<select id="hpa301ukrServiceImpl.cancelMaster" parameterType="Map" resultType="int">
		--hpa301ukr.Chpa301ukr[fnHpa301Cancel] Query05
		--인사정보반영(국민연금)
		DECLARE @COMP_CODE      NVARCHAR(10),
		        @BASE_DATE   NVARCHAR(10),
		        @INSUR_TYPE     NVARCHAR(1) ,
		        @USERID         NVARCHAR(100)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BASE_DATE      = #{BASE_DATE}
		SET @INSUR_TYPE     = #{INSUR_TYPE}
		SET @USERID         = #{S_USER_ID}
		
		
		IF @INSUR_TYPE = '1'
		BEGIN
		    UPDATE  A
		        SET   A.ANU_BASE_I  = M.BE_INSUR_AVG_I
		            , A.ANU_INSUR_I = M.BE_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I  = 0
		            , M.BE_INSUR_I      = 0
		            , M.APPLY_YN           = 'N'
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		END
		
		--인사정보반영(건강보험)
		IF @INSUR_TYPE = '2'
		BEGIN
		    UPDATE  A
		        SET   A.MED_AVG_I       = M.BE_INSUR_AVG_I
		            , A.MED_INSUR_I     = M.BE_INSUR_I
		            , A.ORI_MED_INSUR_I = M.BE_ORIMED_INSUR_I
		            , A.OLD_MED_INSUR_I = M.BE_OLDMED_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I      = 0
		            , M.BE_INSUR_I          = 0
		            , M.BE_ORIMED_INSUR_I   = 0
		            , M.BE_OLDMED_INSUR_I   = 0
		            , M.APPLY_YN           = 'N'
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		    
		END
		
		--인사정보반영(고용보험)
		IF @INSUR_TYPE = '3'
		BEGIN
		
		    UPDATE  A
		        SET   A.HIRE_AVG_I      = M.BE_INSUR_AVG_I
		            , A.HIRE_INSUR_I    = M.BE_INSUR_I
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		    UPDATE  M
		        SET   M.BE_INSUR_AVG_I  = 0
		            , M.BE_INSUR_I      = 0
		            , M.APPLY_YN           = 'N'
		            , M.UPDATE_DB_USER  = @USERID
		            , M.UPDATE_DB_TIME  = GETDATE()
		    FROM    HPA100T             M
		            INNER JOIN HUM100T  A   ON  M.COMP_CODE     = A.COMP_CODE
		                                    AND M.PERSON_NUMB   = A.PERSON_NUMB
		    WHERE   1=1
		    AND     M.COMP_CODE     = @COMP_CODE
		    AND     M.BASE_DATE     = @BASE_DATE
		    AND     M.INSUR_TYPE    = @INSUR_TYPE
		    AND     M.PERSON_NUMB   = #{PERSON_NUMB}
		    
		END
	</select>	
	
	<insert id="hpa301ukrServiceImpl.insertExcelHpa100t_xls" parameterType="Map">
    	/*hpa301ukrServiceImpl.insertExcelHbs210t_xls*/
    	INSERT INTO HPA100T_XLS
    		(
    		_EXCEL_JOBID, 
    		_EXCEL_ROWNUM, 
    		_EXCEL_HAS_ERROR, 
    		_EXCEL_ERROR_MSG, 
    		COMP_CODE, 
    		NAME,
    		REPRE_NUM, 
    		AF_INSUR_AVG_I, 
    		AF_INSUR_I, 
    		AF_ORIMED_INSUR_I, 
    		AF_OLDMED_INSUR_I,
    		UPDATE_DB_TIME,
    		UPDATE_DB_USER,
    		INSERT_DB_TIME,
    		INSERT_DB_USER    		
    		)
    	VALUES (
    		#{_EXCEL_JOBID}, 
    		#{_EXCEL_ROWNUM}, 
    		#{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, 
    		#{_EXCEL_ERROR,jdbcType=VARCHAR}, 
    		#{S_COMP_CODE}, 
    		#{NAME},
    		#{REPRE_NUM}, 
    		CASE WHEN ISNULL(#{AF_INSUR_AVG_I}, 0)    = 0  THEN 0	ELSE #{AF_INSUR_AVG_I}	    END, 
    		CASE WHEN ISNULL(#{AF_INSUR_I}, 0) 	      = 0  THEN 0   ELSE #{AF_INSUR_I}	        END,
    		CASE WHEN ISNULL(#{AF_ORIMED_INSUR_I}, 0) = 0  THEN 0   ELSE #{AF_ORIMED_INSUR_I}	END,
    		CASE WHEN ISNULL(#{AF_OLDMED_INSUR_I}, 0) = 0  THEN 0   ELSE #{AF_OLDMED_INSUR_I}	END,
    		GETDATE(),
    		#{S_USER_ID},
    		GETDATE(),
    		#{S_USER_ID} 
    	)
    </insert>
    
    <update id="hpa301ukrServiceImpl.excelValidate" >
    	/*hpa301ukrServiceImpl.excelValidate*/    	
    	UPDATE   A
		SET 
				_EXCEL_HAS_ERROR = (CASE WHEN B.PERSON_NUMB IS NULL
										   THEN 'Y' 
								      ELSE _EXCEL_HAS_ERROR 
								      END),
				_EXCEL_ERROR_MSG = (CASE WHEN B.PERSON_NUMB IS NULL 
										   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '인사정보에 없는 주민등록번호입니다.' 
									  ELSE _EXCEL_ERROR_MSG END)
		FROM HPA100T_XLS 	A
		LEFT JOIN  HUM100T  B    ON B.COMP_CODE= #{S_COMP_CODE}
							    AND REPLACE(A.REPRE_NUM,'-','') = unilite.fnCipherDecrypt(B.REPRE_NUM, '')
		WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>
    
    <select id="hpa301ukrServiceImpl.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
		/*hpa301ukrServiceImpl.selectExcelUploadSheet1*/
		SELECT #{BASE_DATE}	AS BASE_DATE
			 , #{INSUR_TYPE}	AS INSUR_TYPE
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A._EXCEL_JOBID
			 , A.NAME
			 <if test="@foren.Ognl@isEmpty(BASE_DATE)">
			 , A.REPRE_NUM
			 </if>
			 , B.RETR_DATE
			 <if test="@foren.Ognl@isNotEmpty(BASE_DATE)">
			 , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')  AS REPRE_NUM
			 </if>
			 , A.AF_INSUR_AVG_I
			 , A.AF_INSUR_I
			 , A.AF_ORIMED_INSUR_I
			 , A.AF_OLDMED_INSUR_I
			 , B.PERSON_NUMB
			 , B.DEPT_NAME
			 , B.JOIN_DATE
			 , D.CODE_NAME		AS POST_CODE
			 , C.DIV_CODE			 
		 FROM 				HPA100T_XLS		A
	 			LEFT  JOIN  HUM100T     	B WITH(NOLOCK)  ON B.COMP_CODE     = A.COMP_CODE
	                                       	               AND uniLITE.fnCipherDecrypt(B.REPRE_NUM, 'B')     = REPLACE(A.REPRE_NUM,'-','')
	            LEFT  JOIN  BOR120T     	C WITH(NOLOCK)  ON C.COMP_CODE     = B.COMP_CODE
	                                          	           AND C.DIV_CODE      = B.DIV_CODE
	            LEFT  JOIN  BSA100T    	    D WITH(NOLOCK)  ON D.COMP_CODE     = B.COMP_CODE
	                                             	       AND D.MAIN_CODE     = 'H005'
	                                                       AND D.SUB_CODE      = B.POST_CODE
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		   AND B. RETR_DATE = '00000000'
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>

	<select id="hpa301ukrServiceImpl.getMonthInsurI" parameterType="Map" resultType="rMap">
	/* hpa301ukrServiceImpl.getMonthInsurI */
		DECLARE @STD_AMT NUMERIC(30,2),
				@INSU_AMT1 NUMERIC(30,0),
				@INSU_AMT2 NUMERIC(30,0),
				@INSUR_RATE1 NUMERIC(30,2)
		SET @STD_AMT = #{MONTH_AVG_I}
		SELECT @INSU_AMT1 =  		 
				ROUND((CASE WHEN INSUR_SEQ = '1' THEN STD_END_AMOUNT_I * (INSUR_RATE /100) * (INSURPAY_RATE/100)
				    WHEN INSUR_SEQ = '2' THEN (@STD_AMT * (INSUR_RATE / 100)) * (INSURPAY_RATE / 100)
				    WHEN INSUR_SEQ = '3' THEN (STD_STRT_AMOUNT_I * (INSUR_RATE / 100)) * (INSURPAY_RATE / 100)
				    ELSE 0
				END) ,-1, 1),
			   @INSUR_RATE1 = INSUR_RATE1
		FROM (
				SELECT INSUR_SEQ
					 
					 , STD_STRT_AMOUNT_I
					 , STD_END_AMOUNT_I
					 , INSUR_RATE
					 , CASE WHEN INSUR_TYPE = '1' THEN ANUT_PRSN_RATE1
							ELSE MED_PRSN_RATE
							END AS INSURPAY_RATE
					 , INSUR_RATE1
				  FROM HAD300T A INNER JOIN HBS400T B
									ON A.COMP_CODE = B.COMP_CODE
				 WHERE A.COMP_CODE = #{S_COMP_CODE}
				   AND A.BASE_YEAR = LEFT(CONVERT(NVARCHAR(10), GETDATE(), 112), 4)
				   AND INSUR_TYPE = #{TYPE} ) AS A
		 WHERE @STD_AMT BETWEEN  STD_STRT_AMOUNT_I AND STD_END_AMOUNT_I
		
		 SELECT @INSU_AMT2 = @INSU_AMT1 + @INSU_AMT1 * (@INSUR_RATE1/100)
		<if test="TYPE == 2">
		 SELECT @INSU_AMT1 AS INSUR_I, floor(@INSU_AMT2 / 10)* 10 AS INSUR_I2, floor(@INSU_AMT2 / 10)* 10  - @INSU_AMT1 AS INSUR_I3
		</if>
		<if test="TYPE != 2">
		 SELECT @INSU_AMT2 AS INSUR_I 
		</if>
	</select>
</mapper>