<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa350ukrServiceImpl">

	<select id="hpa350ukrServiceImpl.selectColumns" parameterType="String" resultType="rMap">
		SELECT WAGES_NAME
		     , 'WAGES_PAY' + WAGES_CODE AS WAGES_CODES
		     , WAGES_CODE
		     , SORT_SEQ
		     , 'WAGES_PAY' AS CODE_GUBUN  	-- 화면에서 값 수정시 지급금액, 공제금액을 sum 하기 위한 필드구분
		  FROM HBS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND USE_YN='Y'
		    
		 union all
		
		SELECT CODE_NAME    
		     , 'WAGES_DED' + SUB_CODE AS WAGES_CODES    
		     , SUB_CODE 
		     , (40) +ROW_NUMBER() OVER(ORDER BY REF_CODE2)
		     , 'WAGES_DED' AS CODE_GUBUN  	-- 화면에서 값 수정시 지급금액, 공제금액을 sum 하기 위한 필드구분
		  FROM BSA100T    
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H034'    
		   AND USE_YN='Y'    
		   AND SUB_CODE != '$'     
		 
		 ORDER BY SORT_SEQ
	</select>
	<select id="hpa350ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
			IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#TEMPPERSON'))  
				BEGIN
					DROP TABLE #TEMPPERSON
				END

			IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#WAGES_T'))
				BEGIN 
					DROP TABLE #WAGES_T	
				END

			IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#DED_T'))
				BEGIN 
					DROP TABLE #DED_T	
				END

			IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..##HPA_T'))
				BEGIN
					DROP TABLE ##HPA_T	
				END
				
			IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#TBLGROUP'))
				BEGIN
					DROP TABLE #TBLGROUP	
				END
			
			
			CREATE TABLE #TEMPPERSON
			       ( COMP_CODE2 NVARCHAR(08)
			       , DIV_CODE2  NVARCHAR(08)
			       , DEPT_CODE2 NVARCHAR(08)
			       , DEPT_NAME2 NVARCHAR(30)
			       , POST_CODE2 NVARCHAR(02)
			       , NAME2 NVARCHAR(60)
			       , PERSON_NUMB2 NVARCHAR(10)
			       , JOIN_DATE2 NVARCHAR(10)
			       , PAY_YYYYMM2 NVARCHAR(06)
				   , TAX_AMOUNT_I2 NUMERIC(18,6)
				   , TAX_EXEMPTION_I2 NUMERIC(18,6)
			       , SUPP_TOTAL_I2 NUMERIC(18, 6)
			       , DED_TOTAL_I2 NUMERIC(18, 6)
			       , REAL_AMOUNT_I2 NUMERIC(18, 6)
			       , PAY_CODE NVARCHAR(01)
			       , PAY_PROV_FLAG NVARCHAR(01)
			       , SUPP_DATE NVARCHAR(08)
				   , YOUTH_EXEMP_RATE	NVARCHAR(01)
				   , YOUTH_EXEMP_DATE	NVARCHAR(08)
			       )
			INSERT INTO #TEMPPERSON
			 ( COMP_CODE2
			 , DIV_CODE2
			 , DEPT_CODE2
			 , DEPT_NAME2
			 , POST_CODE2
			 , NAME2
			 , PERSON_NUMB2
			 , JOIN_DATE2
			 , PAY_YYYYMM2
			 , TAX_AMOUNT_I2
			 , TAX_EXEMPTION_I2
			 , SUPP_TOTAL_I2
			 , DED_TOTAL_I2
			 , REAL_AMOUNT_I2
			 , PAY_CODE
			 , PAY_PROV_FLAG
			 , SUPP_DATE
			 , YOUTH_EXEMP_RATE
			 , YOUTH_EXEMP_DATE
			 )
			SELECT A.COMP_CODE
			     , B.DIV_CODE
			     , B.DEPT_CODE
			     , B.DEPT_NAME
			     , A.POST_CODE
			     , A.NAME
			     , A.PERSON_NUMB
			     , uniLITE.fnGetUserDateComp(#{S_COMP_CODE}, A.JOIN_DATE) AS JOIN_DATE
			     , B.PAY_YYYYMM
				 , B.TAX_AMOUNT_I
				 , B.TAX_EXEMPTION_I
			     , B.SUPP_TOTAL_I
			     , B.DED_TOTAL_I
			     , B.REAL_AMOUNT_I
			     , B.PAY_CODE
				 , B.PAY_PROV_FLAG
				 , B.SUPP_DATE
				 , CASE WHEN B.PAY_YYYYMM > LEFT(A.YOUTH_EXEMP_DATE, 6)
				        THEN ''
						ELSE A.YOUTH_EXEMP_RATE
					END AS YOUTH_EXEMP_RATE

				 , CASE WHEN B.PAY_YYYYMM > LEFT(A.YOUTH_EXEMP_DATE, 6)
				        THEN ''
						ELSE A.YOUTH_EXEMP_DATE
					END AS YOUTH_EXEMP_DATE
			  FROM            HUM100T AS A WITH(NOLOCK)
			       INNER JOIN (
			                   SELECT
			                          B.COMP_CODE
			                        , B.DIV_CODE
			                        , B.PERSON_NUMB
			                        , B.PAY_YYYYMM
			                        , B.PAY_PROV_FLAG
			                        , B.PAY_GUBUN
			                        , B.PAY_GUBUN2
			                        , B.PAY_CODE
			                        , B.DEPT_CODE
			                        , B.DEPT_NAME
				 					, MAX(B.SUPP_DATE)  AS SUPP_DATE
									, MAX(ISNULL(B.TAX_AMOUNT_I, 0)
										 +ISNULL(B.BONUS_TAX_I , 0))		AS TAX_AMOUNT_I
									, MAX(ISNULL(B.TAX_EXEMPTION1_I, 0)
										 +ISNULL(B.TAX_EXEMPTION2_I, 0)
										 +ISNULL(B.TAX_EXEMPTION3_I, 0)
										 +ISNULL(B.TAX_EXEMPTION4_I, 0)
										 +ISNULL(B.TAX_EXEMPTION5_I, 0)
										 +ISNULL(B.TAX_EXEMPTION6_I, 0))	AS TAX_EXEMPTION_I
			                        , MAX(ISNULL(B.SUPP_TOTAL_I, 0))  AS SUPP_TOTAL_I
			                        , MAX(ISNULL(B.DED_TOTAL_I, 0))   AS DED_TOTAL_I
			                        , MAX(ISNULL(B.REAL_AMOUNT_I, 0)) AS REAL_AMOUNT_I
			                     FROM HPA600T AS B WITH(NOLOCK)
			                    Where B.COMP_CODE     = #{S_COMP_CODE}
			                     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
			                      AND B.DIV_CODE      = #{DIV_CODE}
			                     </if>
			                      AND B.PAY_YYYYMM    = #{PAY_YYYYMM}
			                      AND B.SUPP_TYPE     = #{SUPP_TYPE}
			                    GROUP BY B.COMP_CODE, B.DIV_CODE, B.PERSON_NUMB, B.PAY_YYYYMM, B.PAY_PROV_FLAG, B.PAY_GUBUN, B.PAY_GUBUN2, B.PAY_CODE 
			                           , B.DEPT_CODE, B.DEPT_NAME
			                   ) AS B ON B.COMP_CODE   = A.COMP_CODE			                      
			                         AND B.PERSON_NUMB = A.PERSON_NUMB
			 WHERE A.COMP_CODE  = #{S_COMP_CODE}
			   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
					<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">         
			   			AND A.PERSON_NUMB  LIKE #{PERSON_NUMB}
			   		</if>
					<if test="@foren.Ognl@isNotEmpty(PAY_CODE)"> 
				    	AND B.PAY_CODE LIKE #{PAY_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
				    	AND B.PAY_PROV_FLAG  LIKE #{PAY_PROV_FLAG}
					</if>
					<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)"> 
				    	AND B.PAY_GUBUN  LIKE #{PAY_GUBUN}
					</if>
					
                    <if test="@foren.Ognl@isNotEmpty(DEPTS2)">                   
                        AND A.DEPT_CODE IN
                        <foreach collection="DEPTS2" item="item2" separator="," close=")" open="(">
                         #{item2}
                        </foreach>                                  
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
                    AND  A.DEPT_CODE     IN
                     <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
                             #{item}
                     </foreach>
                    </if>
					<!-- <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
						AND A.DEPT_CODE  BETWEEN #{DEPT_CODE_FROM} AND  #{DEPT_CODE_TO}
						</if>
					</if>
					<if test="@foren.Ognl@isEmpty(DEPT_CODE_FROM)">
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					    AND A.DEPT_CODE  &lt;=  #{DEPT_CODE_TO}
						</if>
					</if>
					<if test="@foren.Ognl@isEmpty(DEPT_CODE_TO)">
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">				  	
						AND A.DEPT_CODE  &gt;=  #{DEPT_CODE_FROM}
						</if>
					</if> -->
                    
                        
			 ORDER BY B.DIV_CODE, B.DEPT_CODE, A.POST_CODE, A.JOIN_DATE, A.NAME
			
			   
			DECLARE @COMP_CODE NVARCHAR(10)
			SET @COMP_CODE=#{S_COMP_CODE}
			DECLARE @TEMPWAGE TABLE
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , WAGES_CODE NVARCHAR(10)
			        , WAGES_NAME NVARCHAR(20)
			        , USE_YN NVARCHAR(1)
			        )
			DECLARE @TEMPDED TABLE
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , DED_CODE NVARCHAR(10)
			        , DED_NAME NVARCHAR(20)
			        , USE_YN NVARCHAR(1)
			        )
			        
			        
			INSERT INTO @TEMPWAGE
			       ( WAGES_CODE
			       , WAGES_NAME
			       , USE_YN
			       )
			SELECT WAGES_CODE
			     , WAGES_NAME
			     , USE_YN
			  FROM HBS300T
			 WHERE COMP_CODE = @COMP_CODE
			   AND USE_YN = 'Y'
			 ORDER BY SORT_SEQ
			 
			 
			INSERT INTO @TEMPDED
			       ( DED_CODE
			       , DED_NAME
			       , USE_YN
			       )
			SELECT SUB_CODE
			     , CODE_NAME
			     , USE_YN
			  FROM BSA100T
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE ='H034'
			   AND SUB_CODE &lt;&gt; '$'
			   AND USE_YN = 'Y'
			 ORDER BY REF_CODE2
			 
			 
			DECLARE @WAGES_CODE NVARCHAR(4000)
			DECLARE @CREATE_NAME NVARCHAR(4000)
			DECLARE @TEMP_CODE  NVARCHAR(20)
			DECLARE @TEMP_NAME NVARCHAR(20)
			DECLARE @TEMP_FIX NVARCHAR(1)
			DECLARE @I INT
			DECLARE @MAXNO INT
			DECLARE @I2 INT
			DECLARE @MAXNO2 INT
			
			SELECT @I=1
			     , @MAXNO=MAX(NID)
			  FROM @TEMPWAGE
			SELECT @I2=1
			     , @MAXNO2=MAX(NID)
			  FROM @TEMPDED
			  
			  
			SET @CREATE_NAME ='CREATE TABLE [##HPA_T] 
			                            ( COMP_CODE NVARCHAR(10)
			                            , DIV_CODE  NVARCHAR(08)
			                            , DEPT_CODE NVARCHAR(08)
			                            , DEPT_NAME NVARCHAR(30)
			                            , POST_CODE NVARCHAR(02)
			                            , NAME NVARCHAR(60)
			                            , PERSON_NUMB NVARCHAR(10)
			                            , JOIN_DATE NVARCHAR(10)
			                            , PAY_YYYYMM NVARCHAR(06)
										, TAX_AMOUNT_I NUMERIC(18,6)
										, TAX_EXEMPTION_I NUMERIC(18,6)
			                            , SUPP_TOTAL_I NUMERIC(18,6)
			                            , DED_TOTAL_I NUMERIC(18,6)
			                            , REAL_AMOUNT_I NUMERIC(18,6)
			                            , PAY_CODE NVARCHAR(01)
								        , PAY_PROV_FLAG NVARCHAR(01)
								        , SUPP_DATE NVARCHAR(08)
										, YOUTH_EXEMP_RATE NVARCHAR(01)
										, YOUTH_EXEMP_DATE NVARCHAR(08)'
										
			WHILE @I &lt;=@MAXNO
			    BEGIN
			        SELECT @TEMP_CODE= WAGES_CODE
			          FROM @TEMPWAGE
			         WHERE NID=@I
			        SELECT @TEMP_NAME = WAGES_NAME
			          FROM @TEMPWAGE
			         WHERE NID=@I
			        SET @CREATE_NAME = @CREATE_NAME + ', WAGES_PAY' + @TEMP_CODE + ' NUMERIC(18,6)'
			        SET @I=@I+1
			    END
			WHILE @I2 &lt;=@MAXNO2
			    BEGIN
			        SELECT @TEMP_CODE = DED_CODE
			          FROM @TEMPDED
			         WHERE NID=@I2
			        SELECT @TEMP_NAME = DED_NAME
			          FROM @TEMPDED
			         WHERE NID=@I2
			        SET @CREATE_NAME = @CREATE_NAME + ', WAGES_DED' + @TEMP_CODE + '  NUMERIC(18,6)' 
			        SET @I2 = @I2 + 1
			    END
			SET @CREATE_NAME = @CREATE_NAME + ')'
			SET @WAGES_CODE = 'INSERT INTO [##HPA_T]
			                                ( COMP_CODE
			                                , DIV_CODE
			                                , DEPT_CODE
			                                , DEPT_NAME
			                                , POST_CODE
			                                , NAME
			                                , PERSON_NUMB
			                                , JOIN_DATE
			                                , PAY_YYYYMM
											, TAX_AMOUNT_I
											, TAX_EXEMPTION_I
			                                , SUPP_TOTAL_I
			                                , DED_TOTAL_I
			                                , REAL_AMOUNT_I
			                                , PAY_CODE
									        , PAY_PROV_FLAG
									        , SUPP_DATE
											, YOUTH_EXEMP_RATE
											, YOUTH_EXEMP_DATE'
											
			SET @I=1
			SET @I2=1
			WHILE @I &lt;=@MAXNO
			    BEGIN
			        SELECT @TEMP_CODE = WAGES_CODE
			             , @TEMP_NAME = WAGES_NAME
			          FROM @TEMPWAGE
			         WHERE NID = @I
			        SET @WAGES_CODE = @WAGES_CODE + ', WAGES_PAY' + @TEMP_CODE
			        SET @I=@I+1
			    END
			WHILE @I2 &lt;= @MAXNO2
			    BEGIN
			        SELECT @TEMP_CODE = DED_CODE
			             , @TEMP_NAME = DED_NAME
			          FROM @TEMPDED
			         WHERE NID=@I2
			        SET @WAGES_CODE = @WAGES_CODE + ', WAGES_DED' + @TEMP_CODE  
			        SET @I2=@I2+1
			END
			SET @WAGES_CODE = @WAGES_CODE + ')'
			SET @WAGES_CODE = @WAGES_CODE + 'SELECT COMP_CODE2
			                                      , DIV_CODE2
			                                      , DEPT_CODE2
			                                      , DEPT_NAME2
			                                      , POST_CODE2
			                                      , NAME2
			                                      , PERSON_NUMB2
			                                      , JOIN_DATE2
		                                          , ''${PAY_YYYYMM}''  
												  , TAX_AMOUNT_I2
												  , TAX_EXEMPTION_I2
			                                      , SUPP_TOTAL_I2
			                                      , DED_TOTAL_I2
			                                      , REAL_AMOUNT_I2
			                                      , PAY_CODE
										          , PAY_PROV_FLAG
										          , SUPP_DATE
												  , YOUTH_EXEMP_RATE
												  , YOUTH_EXEMP_DATE'
										          
			SET @I=1
			SET @I2=1
			WHILE @I &lt;=@MAXNO
			    BEGIN
			        SELECT @TEMP_CODE = WAGES_CODE
			             , @TEMP_NAME = WAGES_NAME
			          FROM @TEMPWAGE
			         WHERE NID=@I
			        SET @WAGES_CODE = @WAGES_CODE + ', 0'
			        SET @I=@I+1
			    END
			WHILE @I2 &lt;=@MAXNO2
			    BEGIN
			        SELECT @TEMP_CODE = DED_CODE
			             , @TEMP_NAME = DED_NAME
			          FROM @TEMPDED
			         WHERE NID=@I2
			        SET @WAGES_CODE = @WAGES_CODE + ', 0' 
			        SET @I2=@I2+1
			    END
			SET @WAGES_CODE = @WAGES_CODE + ' FROM #TEMPPERSON '
			EXEC SP_EXECUTESQL @CREATE_NAME
			EXEC SP_EXECUTESQL @WAGES_CODE
			----TEMP테이블 생성끝----------------------
			
			
			CREATE TABLE [#WAGES_T]  
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , PERSON_NUMB2 NVARCHAR(10)
			        , WAGES_CODE NVARCHAR(16)
			        , AMOUNT_I NUMERIC(18, 6)
			        )
			
			CREATE TABLE [#DED_T]  
			        ( NID INT IDENTITY(1,1) NOT NULL
			        , PERSON_NUMB2 NVARCHAR(10)
			        , DED_CODE NVARCHAR(16)
			        , AMOUNT_I NUMERIC(18, 6)
			        )
			        
			        
			INSERT INTO [#WAGES_T] 
			        ( PERSON_NUMB2
			        , WAGES_CODE
			        , AMOUNT_I
			        )
			SELECT PERSON_NUMB
			     , 'WAGES_PAY' + A.WAGES_CODE
			     , A.AMOUNT_I
			  FROM HPA300T A (NOLOCK) LEFT OUTER JOIN HBS300T B
			                            ON A.COMP_CODE  = B.COMP_CODE
			                           AND A.WAGES_CODE = B.WAGES_CODE
			 WHERE A.COMP_CODE  = #{S_COMP_CODE}
			   AND B.USE_YN     = 'Y'
			   AND A.PAY_YYYYMM = #{PAY_YYYYMM}
			   --AND A.SUPP_TYPE  = N'1'
			   AND A.SUPP_TYPE  = #{SUPP_TYPE}
			ORDER BY B.SORT_SEQ
			
			
			INSERT INTO [#DED_T]  
			        ( PERSON_NUMB2
			        , DED_CODE
			        , AMOUNT_I)
			SELECT A.PERSON_NUMB
			     , 'WAGES_DED' + A.DED_CODE
			     , DED_AMOUNT_I
			  FROM HPA400T A(NOLOCK) LEFT OUTER JOIN BSA100T B
			                           ON A.COMP_CODE = B.COMP_CODE
			                          AND A.DED_CODE  = B.SUB_CODE
			                          AND B.MAIN_CODE = 'H034'
			                          AND B.SUB_CODE &lt;&gt; '$'
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND PAY_YYYYMM  = #{PAY_YYYYMM}
			   --AND A.SUPP_TYPE = N'1'
			   AND A.SUPP_TYPE = #{SUPP_TYPE}
			   AND B.USE_YN    = 'Y'
			 ORDER BY REF_CODE2
			 
			 
			DECLARE @SLOOP INT
			DECLARE @MAXCOUNT INT
			DECLARE @AMOUNT_I NVARCHAR(100)
			DECLARE @TEMPSQL NVARCHAR(2000)
			DECLARE @PERSON_NUMB NVARCHAR(10)
			DECLARE @COUNS INT
			SET @SLOOP=1
			
			CREATE TABLE #TBLGROUP
			(
			        NID INT IDENTITY(1,1) NOT NULL, 
			        CODE NVARCHAR(20)
			)
			
			INSERT INTO #TBLGROUP
			SELECT WAGES_CODE 
			FROM [#WAGES_T] 
			GROUP BY WAGES_CODE
			
			
			SELECT @MAXCOUNT= COUNT(CODE) from #TBLGROUP
			WHILE @SLOOP &lt;=@MAXCOUNT
			    BEGIN
			        SELECT @WAGES_CODE = CODE
			          FROM #TBLGROUP
			         WHERE NID=@SLOOP
			        SET @TEMPSQL = 'UPDATE [##HPA_T]  SET ' + @WAGES_CODE + ' =  AMOUNT_I
			                          FROM [#WAGES_T] A
			                         WHERE A.PERSON_NUMB2 = PERSON_NUMB
			                           AND A.WAGES_CODE   = ''' + @WAGES_CODE + ''''
			        EXEC SP_EXECUTESQL @TEMPSQL
			        SET @SLOOP = @SLOOP + 1
			    END
			    
			TRUNCATE TABLE #TBLGROUP
			  INSERT INTO #TBLGROUP
			  SELECT DED_CODE 
			    FROM [#DED_T] 
			   GROUP BY DED_CODE
			   
			SELECT @MAXCOUNT= COUNT(CODE) from #TBLGROUP
			
			SET @SLOOP=1
			WHILE @SLOOP &lt;= @MAXCOUNT
			    BEGIN
			        SELECT @WAGES_CODE = CODE
			          FROM #TBLGROUP
			         WHERE NID = @SLOOP
			        SET @TEMPSQL = 'UPDATE [##HPA_T] SET ' + @WAGES_CODE + '= AMOUNT_I
			                          FROM [#DED_T] A
			                         WHERE A.PERSON_NUMB2 = PERSON_NUMB
			                           AND A.DED_CODE = ''' + @WAGES_CODE + ''''
			        EXEC SP_EXECUTESQL @TEMPSQL
			        SET @SLOOP = @SLOOP + 1
			    END
			    
			    
			SELECT 
			CASE WHEN D.CLOSE_DATE IS NOT NULL THEN 'Y'
			     ELSE 'N'
			END AS CLOSE_YN,
			A.* 
			FROM      [##HPA_T] A
			LEFT JOIN HBS910T D WITH(NOLOCK) ON D.COMP_CODE  = A.COMP_CODE
			                                AND D.PERSON_NUMB= A.PERSON_NUMB
			                                AND D.CLOSE_TYPE = N'1'
			                                AND D.CLOSE_DATE = #{PAY_YYYYMM}
			                                AND D.SUPP_TYPE  = 'Z'      
			ORDER BY A.DIV_CODE, A.DEPT_CODE,A.POST_CODE, A.JOIN_DATE, A.NAME 
	</select>

	<update id="hpa350ukrServiceImpl.updateDetail" parameterType="Map">	
	DECLARE	@ERR_DESC1 nvarchar(2000)
	EXEC SP_HPA_PAYLIST_SAVE #{S_COMP_CODE},#{DIV_CODE},#{PAY_YYYYMM}, #{SUPP_TYPE}, #{PERSON_NUMB}, #{DEPT_CODE_FROM}, 
	                   #{DEPT_CODE_TO},#{WAGERS_DATA}, #{GUBUN}, #{S_USER_ID},	#{HIR_YES}, #{TAX_YES}, #{WORK_YES}, #{PAY_DATE}, @ERR_DESC1 OUTPUT						
    SELECT	@ERR_DESC1 as N'@ERR_DESC1'				   
	</update>
	<update id="hpa350ukrServiceImpl.updateList1" parameterType="rMap" >
        /* hpa350ukrServiceImpl.updateList1 */
        UPDATE HPA300T
           SET AMOUNT_I       = #{AMOUNT_I}
           WHERE COMP_CODE      = #{S_COMP_CODE}
             AND PAY_YYYYMM     = #{PAY_YYYYMM}
             AND SUPP_TYPE      = #{SUPP_TYPE}
             AND PERSON_NUMB    = #{PERSON_NUMB}
             AND WAGES_CODE     = #{WAGES_CODE}  
           
    </update>
    <update id="hpa350ukrServiceImpl.updateList2" parameterType="rMap" >
        /* hpa350ukrServiceImpl.updateList1 */
        UPDATE HPA400T
           SET DED_AMOUNT_I       = #{DED_AMOUNT_I}
           WHERE COMP_CODE      = #{S_COMP_CODE}
             AND PAY_YYYYMM     = #{PAY_YYYYMM}
             AND SUPP_TYPE      = #{SUPP_TYPE}
             AND PERSON_NUMB    = #{PERSON_NUMB}  
             AND DED_CODE     = #{DED_CODE}
     
     </update>
	<select id="hpa350ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
	SELECT A.COMP_CODE, A.COMP_NAME
	FROM              BOR100T   A  WITH (NOLOCK)
	       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
	                                            AND M1.MAIN_CODE    = 'B107'
	                                            AND M1.SUB_CODE     = '20'         
	WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
	   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	<select id="hpa350ukrServiceImpl.payroll" parameterType="Map" resultType="rMap">
		DECLARE @JSON_PARAM NVARCHAR(2000), @ERROR_DESC NVARCHAR(2000)
		SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","PAY_YYYYMM":"${PAY_YYYYMM}","SUPP_DATE":"${SUPP_DATE}","SUPP_TYPE":"${SUPP_TYPE}","DIV_CODE":"${DIV_CODE}","DEPT_CODE_FR":"${DEPT_CODE}","DEPT_CODE_TO":"${DEPT_CODE}","PAY_CODE":"${PAY_CODE}","PAY_PROV_FLAG":"${PAY_PROV_FLAG}","PERSON_NUMB":"${PERSON_NUMB}","BATCH_YN":"N","DELETE_YN":"${DELETE_YN}","CALC_TAX_YN":"${CALC_TAX_YN}","CALC_HIR_YN":"${CALC_HIR_YN}","CALC_IND_YN":"${CALC_IND_YN}","CALC_MED_YN":"${CALC_MED_YN}","UPDATE_DB_USER":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
		EXEC uniLITE.USP_HUMAN_Payroll @JSON_PARAM, @ERROR_DESC OUTPUT
		SELECT @ERROR_DESC AS ErrorDesc
	</select> 
	
</mapper>