<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa960ukrServiceImpl">
	<select id="hpa960ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
			--UHpa01Krv.CHpa960UKr[fnHpa960QStd1] QUERY01
			DECLARE @COMP_CODE         NVARCHAR(08)     --(필수)법인코드
			      , @DIV_CODE          NVARCHAR(08)     --(선택)사업장
			      , @PAY_YYYYMM_FR     NVARCHAR(06)     --(필수)귀속년월 FR
			      , @PAY_YYYYMM_TO     NVARCHAR(06)     --(필수)귀속년월 TO
			      , @SUPP_DATE_FR      NVARCHAR(08)     --(선택)지급일자 시작일
			      , @SUPP_DATE_TO      NVARCHAR(08)     --(선택)지급일자 종료일
			      , @PERSON_NUMB       NVARCHAR(10)     --(선택)사번
			
			    SET @COMP_CODE         = #{S_COMP_CODE}
			    SET @DIV_CODE          = #{DIV_CODE}
			    SET @PAY_YYYYMM_FR     = #{PAY_YM_FR}
			    SET @PAY_YYYYMM_TO     = #{PAY_YM_TO}
			    SET @SUPP_DATE_FR      = #{DATE_FR}
			    SET @SUPP_DATE_TO      = #{DATE_TO}
			    SET @PERSON_NUMB       = #{PERSON_NUMB}
			
			SELECT A.COMP_CODE     
			     , A.PERSON_NUMB
			     , B.NAME     
			     , B.DEPT_NAME
			     , B.POST_CODE
			     , uniLITE.fnGetUserDateComp(@COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
			     , uniLITE.fnGetUserDateComp(@COMP_CODE, A.SUPP_DATE) AS SUPP_DATE
			     , uniLITE.fnGetUserDateComp(@COMP_CODE, A.GIVE_DATE) AS GIVE_DATE
			     , A.STOCK_QTY
			     , A.ORGIN_I
			     , A.BUYING_I
			     , A.PROFIT_I
			     , A.TAX_EXEMPTION_I
			     , A.TAX_AMOUNT_I
			     , A.IN_TAX_I
			     , A.LOC_TAX_I
			     , A.HIR_TAX_I
			     , (ISNULL(A.PROFIT_I,0) -  ISNULL(A.IN_TAX_I,0) - ISNULL(A.LOC_TAX_I,0) - ISNULL(A.HIR_TAX_I,0))AS REAL_SUPP_I
			     , A.NONTAX_CODE
			     , A.PRINT_LOCATION
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
			     , A.INSERT_DB_USER
			     , A.INSERT_DB_TIME
			  FROM            HPA810T A WITH(NOLOCK)
			       INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
			                                        AND B.PERSON_NUMB = A.PERSON_NUMB
			 WHERE A.COMP_CODE   = @COMP_CODE
			   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
			   AND A.PAY_YYYYMM  &gt;= @PAY_YYYYMM_FR
			   AND A.PAY_YYYYMM  &lt;= @PAY_YYYYMM_TO
			   AND ((@DIV_CODE     = '') OR (@DIV_CODE     &lt;&gt; '' AND B.DIV_CODE    = @DIV_CODE)) 
			   AND ((@SUPP_DATE_FR = '') OR (@SUPP_DATE_FR &lt;&gt; '' AND A.SUPP_DATE  &gt;= @SUPP_DATE_FR))
			   AND ((@SUPP_DATE_TO = '') OR (@SUPP_DATE_TO &lt;&gt; '' AND A.SUPP_DATE  &lt;= @SUPP_DATE_TO))
			   AND ((@PERSON_NUMB  = '') OR (@PERSON_NUMB  &lt;&gt; '' AND A.PERSON_NUMB = @PERSON_NUMB))
	        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  B.DEPT_CODE IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
			 ORDER BY A.PERSON_NUMB
	</select>
	<select id="hpa960ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--UHpa01Krv.CHpa960UKr[fnHpa960QStd2] QUERY02
			DECLARE @COMP_CODE         NVARCHAR(08)     --(필수)법인코드
			      , @DIV_CODE          NVARCHAR(08)     --(선택)사업장
			      , @PAY_YYYYMM_FR     NVARCHAR(06)     --(필수)귀속년월 FR
			      , @PAY_YYYYMM_TO     NVARCHAR(06)     --(필수)귀속년월 TO
			      , @SUPP_DATE_FR      NVARCHAR(08)     --(선택)지급일자 시작일
			      , @SUPP_DATE_TO      NVARCHAR(08)     --(선택)지급일자 종료일
			      , @PERSON_NUMB       NVARCHAR(10)     --(선택)사번
			
			    SET @COMP_CODE         = #{S_COMP_CODE}
			    SET @DIV_CODE          = #{DIV_CODE}
			    SET @PAY_YYYYMM_FR     = #{PAY_YM_FR}
			    SET @PAY_YYYYMM_TO     = #{PAY_YM_TO}
			    SET @SUPP_DATE_FR      = #{DATE_FR}
			    SET @SUPP_DATE_TO      = #{DATE_TO}
			    SET @PERSON_NUMB       = #{PERSON_NUMB}
			
			SELECT A.COMP_CODE
			     , A.PERSON_NUMB
			     , B.NAME     
			     , B.DEPT_NAME
			     , B.POST_CODE
			     , uniLITE.fnGetUserDateComp(@COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
			     , uniLITE.fnGetUserDateComp(@COMP_CODE, A.SUPP_DATE) AS SUPP_DATE
			     , A.PAY_TOTAL_I
			     , A.TAX_EXEMPTION_I
			     , A.TAX_AMOUNT_I
			     , A.IN_TAX_I
			     , A.LOC_TAX_I
			     , A.HIR_TAX_I
			     , (ISNULL(A.PAY_TOTAL_I,0) -  ISNULL(A.IN_TAX_I,0) - ISNULL(A.LOC_TAX_I,0) - ISNULL(A.HIR_TAX_I,0))AS REAL_SUPP_I
			     , A.NONTAX_CODE     
			     , A.PRINT_LOCATION
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
			     , A.INSERT_DB_USER
			     , A.INSERT_DB_TIME
			  FROM            HPA820T A WITH(NOLOCK)
			       INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
			                                        AND B.PERSON_NUMB = A.PERSON_NUMB
			 WHERE A.COMP_CODE   = @COMP_CODE
			   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
			   AND A.PAY_YYYYMM &gt;= @PAY_YYYYMM_FR
			   AND A.PAY_YYYYMM &lt;= @PAY_YYYYMM_TO
			   AND ((@DIV_CODE     = '') OR (@DIV_CODE     &lt;&gt; '' AND B.DIV_CODE    = @DIV_CODE))
			   AND ((@SUPP_DATE_FR = '') OR (@SUPP_DATE_FR &lt;&gt; '' AND A.SUPP_DATE  &gt;= @SUPP_DATE_FR))
			   AND ((@SUPP_DATE_TO = '') OR (@SUPP_DATE_TO &lt;&gt; '' AND A.SUPP_DATE  &lt;= @SUPP_DATE_TO))
			   AND ((@PERSON_NUMB  = '') OR (@PERSON_NUMB  &lt;&gt; '' AND A.PERSON_NUMB = @PERSON_NUMB))
	        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  B.DEPT_CODE IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
			 ORDER BY A.PERSON_NUMB	
    </select>
	<insert id="hpa960ukrServiceImpl.insertList1"  parameterType="Map">
			--UHpa01Krv.CHpa960UKr[fnHpa960Save1] Query02
			INSERT INTO HPA810T
			     ( COMP_CODE
			     , PERSON_NUMB
			     , PAY_YYYYMM
			     , SUPP_DATE
			     , GIVE_DATE
			     , STOCK_QTY
			     , ORGIN_I
			     , BUYING_I
			     , PROFIT_I
			     , TAX_EXEMPTION_I
			     , TAX_AMOUNT_I
			     , IN_TAX_I
			     , LOC_TAX_I
			     , HIR_TAX_I
			     , NONTAX_CODE
			     , PRINT_LOCATION
			     , UPDATE_DB_USER
			     , UPDATE_DB_TIME
			     , INSERT_DB_USER
			     , INSERT_DB_TIME
			     ) 
			VALUES
			     ( #{S_COMP_CODE}
			     , #{PERSON_NUMB}
			     , REPLACE(#{PAY_YYYYMM},'.','')
			     , #{SUPP_DATE}
			     , #{GIVE_DATE}
			     , #{STOCK_QTY}
			     , #{ORGIN_I}
			     , #{BUYING_I}
			     , #{PROFIT_I}
			     , #{TAX_EXEMPTION_I}
			     , #{TAX_AMOUNT_I}
			     , #{IN_TAX_I}
			     , #{LOC_TAX_I}
			     , #{HIR_TAX_I}
			     , #{NONTAX_CODE}
			     , #{PRINT_LOCATION}
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			     )
	 </insert>
	<insert id="hpa960ukrServiceImpl.insertList2"  parameterType="Map">
			--UHpa01Krv.CHpa960UKr[fnHpa960Save2] Query02
			INSERT INTO HPA820T
			     ( COMP_CODE
			     , PERSON_NUMB
			     , PAY_YYYYMM
			     , SUPP_DATE
			     , PAY_TOTAL_I
			     , TAX_EXEMPTION_I
			     , TAX_AMOUNT_I
			     , IN_TAX_I
			     , LOC_TAX_I
			     , HIR_TAX_I
			     , NONTAX_CODE
			     , UPDATE_DB_USER
			     , UPDATE_DB_TIME
			     , INSERT_DB_USER
			     , INSERT_DB_TIME
			     ) 
			VALUES
			     ( #{S_COMP_CODE}
			     , #{PERSON_NUMB}
			     , REPLACE(#{PAY_YYYYMM},'.','')
			     , #{SUPP_DATE}
			     , #{PAY_TOTAL_I}
			     , #{TAX_EXEMPTION_I}
			     , #{TAX_AMOUNT_I}
			     , #{IN_TAX_I}
			     , #{LOC_TAX_I}
			     , #{HIR_TAX_I}
			     , #{NONTAX_CODE}
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			     )			
	</insert>
	<update id="hpa960ukrServiceImpl.updateList1"  parameterType="Map">
			--UHpa01Krv.CHpa960UKr[fnHpa960Save1] Query02
			UPDATE HPA810T
			   SET SUPP_DATE       = #{SUPP_DATE}
			     , STOCK_QTY       = #{STOCK_QTY}
			     , ORGIN_I         = #{ORGIN_I}
			     , BUYING_I        = #{BUYING_I}
			     , PROFIT_I        = #{PROFIT_I}
			     , TAX_EXEMPTION_I = #{TAX_EXEMPTION_I}
			     , TAX_AMOUNT_I    = #{TAX_AMOUNT_I}
			     , IN_TAX_I        = #{IN_TAX_I}
			     , LOC_TAX_I       = #{LOC_TAX_I}
			     , HIR_TAX_I       = #{HIR_TAX_I}
			     , NONTAX_CODE     = #{NONTAX_CODE}
			     , PRINT_LOCATION  = #{PRINT_LOCATION}
			     , UPDATE_DB_USER  = #{S_USER_ID}
			     , UPDATE_DB_TIME  = GETDATE()
			     , INSERT_DB_USER  =  #{S_USER_ID}
			     
			 WHERE COMP_CODE       =  #{S_COMP_CODE}
			   AND PERSON_NUMB     =  #{PERSON_NUMB}
			   AND PAY_YYYYMM      =  REPLACE(#{PAY_YYYYMM},'.','')
			   AND GIVE_DATE       =  #{GIVE_DATE}		
	</update>
	<update id="hpa960ukrServiceImpl.updateList2"  parameterType="Map">
			--UHpa01Krv.CHpa960UKr[fnHpa960Save2] Query02
			UPDATE HPA820T
			   SET SUPP_DATE       = #{SUPP_DATE}
			     , PAY_TOTAL_I     = #{PAY_TOTAL_I}
			     , TAX_EXEMPTION_I = #{TAX_EXEMPTION_I}
			     , TAX_AMOUNT_I    = #{TAX_AMOUNT_I}
			     , IN_TAX_I        = #{IN_TAX_I}
			     , LOC_TAX_I       = #{LOC_TAX_I}
			     , HIR_TAX_I       = #{HIR_TAX_I}
			     , NONTAX_CODE     = #{NONTAX_CODE}
			     , PRINT_LOCATION  = #{PRINT_LOCATION}
			     , UPDATE_DB_USER  = #{S_USER_ID}
			     , UPDATE_DB_TIME  = GETDATE()
			     , INSERT_DB_USER  = #{S_USER_ID}
			     
			 WHERE COMP_CODE       = #{S_COMP_CODE}
			   AND PERSON_NUMB     = #{PERSON_NUMB}
			   AND PAY_YYYYMM      = REPLACE(#{PAY_YYYYMM},'.','')
  
	</update>
	<delete id="hpa960ukrServiceImpl.deleteList1"  parameterType="Map">
		--UHpa01Krv.CHpa960UKr[fnHpa960Save1] Query01
			DELETE FROM HPA810T 
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND PERSON_NUMB = #{PERSON_NUMB}
			   AND PAY_YYYYMM  = REPLACE(#{PAY_YYYYMM},'.','')
			   AND GIVE_DATE   = #{GIVE_DATE}
	</delete>
	<delete id="hpa960ukrServiceImpl.deleteList2"  parameterType="Map">
		--UHpa01Krv.CHpa960UKr[fnHpa960Save2] Query01
			DELETE FROM HPA820T 
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND PERSON_NUMB = #{PERSON_NUMB}
			   AND PAY_YYYYMM  = REPLACE(#{PAY_YYYYMM},'.','')
	</delete>
	<select id="hpa960ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE, A.COMP_NAME
		  FROM BOR100T   A  WITH (NOLOCK)
          LEFT JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                              AND M1.MAIN_CODE    = 'B107'
                                              AND M1.SUB_CODE     = '20'         
		 WHERE (A.COMP_CODE &gt; ''     	  AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		    OR (A.COMP_CODE = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<select id="hpa960ukrServiceImpl.fnGetTax" parameterType="Map" resultType="rMap">
		--hpa960ukr.Chpa960ukr[fnGetTax] Query01
		SELECT A.PERSON_NUMB
		     , A.SPOUSE
		     , A.WOMAN
		     , A.SUPP_AGED_NUM AS SUPP_NUM
		     , #{ORGIN_I} AS  TAX_AMOUNT_I
		     , ISNULL(A.ANU_INSUR_I,0) * 12 ANU_AMT
		     , ISNULL(A.CHILD_20_NUM, 0) CHILD_20_NUM  
		     , C.TAX_CALCU_RULE  
		  FROM            HUM100T A
		       INNER JOIN HBS400T C ON A.COMP_CODE   = C.COMP_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		   AND A.COMP_TAX_I  = 'Y' 
	</select>
	
	<select id="hpa960ukrServiceImpl.fnGetTax2" parameterType="Map" resultType="rMap">
		--hpa960ukr.Chpa960ukr[fnGetTax] Query03
		SELECT TAX_STD_LO_I
		     , TAX_STD_HI_I
		     , TAX_RATE
		     , ACCUM_SUB_I
		  FROM HAD100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND TAX_YEAR  = LEFT(#{PAY_YYYYMM}, 4)
	</select>

	<select id="hpa960ukrServiceImpl.fnGetTax3" parameterType="Map" resultType="rMap">
		--UHbs01Krv.CTaxCalcuKr[fnEaseTaxRate] ssql
		SELECT SUPp.PERSON_NUMB
		     , FLOOR(CASE WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =1  THEN DED_GRADE1 
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =2  THEN DED_GRADE2
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =3  THEN DED_GRADE3 
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =4  THEN DED_GRADE4
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =5  THEN DED_GRADE5
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =6  THEN DED_GRADE6
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =7  THEN DED_GRADE7
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =8  THEN DED_GRADE8
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =9  THEN DED_GRADE9
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =10 THEN DED_GRADE10
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM =11 THEN DED_GRADE11
		            WHEN 1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM > 11 THEN
		                            CASE WHEN DED_GRADE11 - ((DED_GRADE10 - DED_GRADE11) * (1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM -11)) &lt;= 0 THEN 0
		                                 ELSE DED_GRADE11 - ((DED_GRADE10 - DED_GRADE11) * (1 + SUPP.SPOUSE + SUPP_AGED_NUM + SUPP.CHILD_20_NUM -11))
		                            END
		        END * SUPP.SIMPLE_DUTY_RATE / 10) * 10 AS DED_INC   --원미만절사
		  FROM HBS110T TAX (NOLOCK)
		       INNER JOIN (SELECT CASE WHEN SPOUSE='Y' THEN 1 
		                                ELSE 0 
		                           END SPOUSE
		                         , S1.SUPP_AGED_NUM
		                         , S1.CHILD_20_NUM
		                         , S1.PERSON_NUMB
		                         , S1.COMP_CODE
		                         , CASE WHEN LEFT(#{PAY_YYYYMM}, 4) &lt; '201507' THEN 100
		                                ELSE
		                                     CONVERT(NUMERIC(5,0), CASE WHEN ISNULL(S2.REF_CODE1,'')='' THEN '100' ELSE S2.REF_CODE1 END) 
		                           END / 100.0 AS SIMPLE_DUTY_RATE
		                      FROM HUM100T S1 (NOLOCK) 
		                           LEFT JOIN BSA100T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.TAXRATE_BASE=S2.SUB_CODE AND S2.MAIN_CODE='H190'
		                     WHERE S1.COMP_CODE   = #{S_COMP_CODE}
		                       AND S1.PERSON_NUMB = #{PERSON_NUMB}) SUPP ON 1=1
		 WHERE TAX.TAX_YYYY+TAX.TAX_MONTH = ISNULL((SELECT MAX(TAX_YYYY+TAX_MONTH) FROM HBS110T WITH (NOLOCK) WHERE TAX_YYYY+TAX_MONTH &lt;= #{PAY_YYYYMM}),'01')
		   AND SUPP.PERSON_NUMB    = (#{PERSON_NUMB}
		<if test="TAX_AMOUNT_I &lt; 10000000">
		   AND TAX.TAX_STRT_AMOUNT &lt;= #{TAX_AMOUNT_I} 
		   AND TAX.TAX_END_AMOUNT  &gt; #{TAX_AMOUNT_I}
		</if>
		<if test="TAX_AMOUNT_I &gt;= 10000000">
		   AND TAX.TAX_STRT_AMOUNT = #{TAX_AMOUNT_I} 
		   AND TAX.TAX_END_AMOUNT  = #{TAX_AMOUNT_I}
		</if>
	</select>

	<update id="hpa960ukrServiceImpl.spFnGetTax" parameterType="Map" statementType="CALLABLE">
		{call USP_HPA340_FNEASETAXRATE_UKR (
			#{S_COMP_CODE,	mode=IN, 	jdbcType=VARCHAR, 	javaType=java.lang.String},
			#{PERSON_NUMB,	mode=IN, 	jdbcType=VARCHAR, 	javaType=java.lang.String},
			#{YEAR_YY, 		mode=IN, 	jdbcType=VARCHAR, 	javaType=java.lang.String},
			#{YEAR_MONTH,	mode=IN, 	jdbcType=VARCHAR, 	javaType=java.lang.String},
			#{TAX_AMOUNT,	mode=IN, 	jdbcType=NUMERIC, 	javaType=java.lang.Integer},
			#{CPARAM0,		mode=OUT, 	jdbcType=NUMERIC, 	javaType=java.lang.Integer},	
			#{CPARAM1,		mode=OUT, 	jdbcType=NUMERIC, 	javaType=java.lang.Integer},	
			#{ERR_DESC,		mode=OUT, 	jdbcType=VARCHAR, 	javaType=java.lang.String}
		)}
	</update> 

</mapper>