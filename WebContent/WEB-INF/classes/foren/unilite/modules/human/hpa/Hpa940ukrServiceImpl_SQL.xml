<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hpa940ukrServiceImpl">
	<select id="Hpa940ukrServiceImpl.selectsenduser" parameterType="Map" resultType="rMap">
            
        SELECT SEND_METHOD
             , SERVER_NAME
             , SERVER_PROT
             , PICKUP_FOLDER_PATH
             , SEND_USER_NAME
             , SEND_PASSWORD
             , CONN_TIMEOUT
             , SSL_USE_YN
        FROM HBS240T
        WHERE COMP_CODE    = #{S_COMP_CODE} 
         
    </select>   
	<select id="Hpa940ukrServiceImpl.selectByDivCode" parameterType="Map" resultType="rMap">
		--UBsaExKrv.CBsaExSKr[fnRecordList] Query16           
		SELECT DIV_NAME                       
		  FROM BOR120T WITH (NOLOCK)          
		 WHERE COMP_CODE = #{S_COMP_CODE}
			AND	DIV_CODE = #{DIV_CODE}
		 ORDER BY DIV_CODE
	</select>
	<select id="Hpa940ukrServiceImpl.selectByPostCode" parameterType="Map" resultType="rMap">
		--UBsaExKrv.CBsaExSKr[fnRecordList] Query01              
		SELECT CODE_NAME
		  FROM BSA100T WITH (NOLOCK)             
		 WHERE COMP_CODE = #{S_COMP_CODE}  
		   AND MAIN_CODE = 'H005'
		   AND SUB_CODE = #{POST_CODE}                 
	</select>

	<select id="Hpa940ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">		

		SELECT CAST(1 AS BIT) AS GUBN                               
		     , PAY_YYYYMM                                           
		     , SUPP_TYPE                                            
		     , A.DIV_CODE                                           
		     , A.DEPT_CODE                                          
		     , A.DEPT_NAME                                          
		     , A.POST_CODE                                          
		     , NAME                                                 
		     , A.PERSON_NUMB                                        
		     , EMAIL_ADDR                                           
		  FROM HPA600T A INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE AND A.PERSON_NUMB = B.PERSON_NUMB     
		 WHERE B.COMP_CODE     	= 	#{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   	AND B.EMAIL_SEND_YN = 	'Y'
		  	AND A.PAY_YYYYMM    = 	#{PAY_YYYYMM}                             
			AND A.SUPP_TYPE  = #{SUPP_TYPE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
			AND A.DIV_CODE   = #{DIV_CODE}
		</if>
	   	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
	  		AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		   AND  A.DEPT_CODE IN
			 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	          		 #{item}
	    	 </foreach>
		</if>
		 ORDER BY A.DEPT_CODE, A.POST_CODE, B.NAME, A.PERSON_NUMB  

	</select>
	
	<select id="Hpa940ukrServiceImpl.selectEmailList" parameterType="Map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrEmailModel">		

		SELECT A.PERSON_NUMB                                     
		     , A.DEPT_CODE                                       
		     , A.DEPT_NAME                                       
		     , B.NAME                                            
		     , (SELECT CODE_NAME                                 
		          FROM BSA100T                                   
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND MAIN_CODE = 'H005'                        
		           AND SUB_CODE  = A.POST_CODE ) AS POST_NAME    
		     , (SELECT ISNULL(CUSTOM_NAME,'')                    
		          FROM BCM100T                                   
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND CUSTOM_CODE = B.BANK_CODE1) AS BANK_NAME  
		     , unilite.fnCipherDecrypt(B.BANK_ACCOUNT1, 'RB') AS BANK_ACCOUNT1                                  
		     , replace(convert(varchar(30), cast(SUPP_TOTAL_I   as money), 1), '.00', '') SUPP_TOTAL_I                                      
		     , replace(convert(varchar(30), cast(DED_TOTAL_I as money), 1), '.00', '') DED_TOTAL_I                                       
		     , replace(convert(varchar(30), cast(REAL_AMOUNT_I as money), 1), '.00', '') REAL_AMOUNT_I                                        
		     , C.WEEK_DAY                                        
		     ,  floor(C.WORK_DAY)   WORK_DAY                                   
		     , CONVERT(NUMERIC(5, 2), C.WORK_TIME) AS WORK_TIME                                                    
		     , A.YEAR_CRT                                        
		     , A.YEAR_ADD                                        
		     , MONTH_CRT                                         
		     , MON_YEAR_USE                                      
		     , MON_YEAR_PROV                                     
		     , CASE WHEN ISNULL(A.BONUS_STD_I, 0) = 0
			        THEN ISNULL(A.BONUS_TOTAL_I, 0)
					ELSE ISNULL(A.BONUS_STD_I, 0)
				END AS BONUS_STD_I                                 
		     , CASE WHEN ISNULL(A.BONUS_RATE, 0) = 0
				    THEN 100
					ELSE A.BONUS_RATE
				END AS BONUS_RATE                                       
		     , A.BONUS_TOTAL_I                                   
		     , SUBSTRING(REPLACE(uniLITE.fnCipherDecrypt(REPRE_NUM,''), '-', ''),7,7) AS EMAIL_PWD
		  FROM HPA600T A                                         
		               INNER JOIN HUM100T B                      
		                       ON A.COMP_CODE   = B.COMP_CODE    
		                      AND A.PERSON_NUMB = B.PERSON_NUMB  
		          LEFT OUTER JOIN HAT300T C                      
		                       ON A.COMP_CODE   = C.COMP_CODE    
		                      AND A.PAY_YYYYMM  = C.DUTY_YYYYMM  
		                      AND A.PERSON_NUMB = C.PERSON_NUMB  
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM)">  
		   AND A.PAY_YYYYMM  = #{PAY_YYYYMM}              
		 </if>   
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		   AND A.SUPP_TYPE   = #{SUPP_TYPE}             

	</select>
	
	
	<select id="Hpa940ukrServiceImpl.selectSmtpInfo" parameterType="String" resultType="foren.unilite.modules.human.hpa.Hpa940ukrSmtpModel">		
		
        SELECT SEND_METHOD          
             , SERVER_NAME          
             , SERVER_PROT          
             , PICKUP_FOLDER_PATH   
             , SEND_USER_NAME       
             , SEND_PASSWORD        
             , CONN_TIMEOUT         
             , SSL_USE_YN           
          FROM unilite.HBS240T               
         WHERE COMP_CODE    = #{S_COMP_CODE}

	</select>
	
	<select id="Hpa940ukrServiceImpl.selectYearInfo" parameterType="map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrYearModel">		
		
        SELECT YEAR_SAVE                                            
		     , YEAR_BONUS_I                                         
		     , MONTH_NUM
		     , MONTH_PROV                                             
		     , YEAR_USE + MONTH_USE AS YEAR_USE                     
		     , ((YEAR_SAVE + YEAR_BONUS_I - YEAR_USE - YEAR_PROV) + (MONTH_NUM - MONTH_USE- MONTH_PROV)) YEAR_PROV                                           
		  FROM HAT700T                                              
		 WHERE COMP_CODE                    = #{S_COMP_CODE}
		   AND LEFT(DUTY_YYYYMMDDFR_USE,6) &lt;= #{PAY_YYYYMM}   
		   AND LEFT(DUTY_YYYYMMDDTO_USE,6) &gt;= #{PAY_YYYYMM}
		   AND PERSON_NUMB = #{PERSON_NUMB}

	</select>
	
	<select id="Hpa940ukrServiceImpl.selectWorkInfo" parameterType="map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrWorkModel">		
		
        SELECT PERSON_NUMB 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'51' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE0 
		    , N'연장근무' AS DUTY_NAME0 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'52' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE1 
		    , N'야간근무' AS DUTY_NAME1 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'53' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE2 
		    , N'휴일정상' AS DUTY_NAME2 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'54' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE3 
		    , N'휴일연장' AS DUTY_NAME3 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'55' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE4 
		    , N'휴일야간' AS DUTY_NAME4 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'20' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE5 
		    , N'년차' AS DUTY_NAME5 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'11' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE6 
		    , N'결근' AS DUTY_NAME6 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'50' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE7 
		    , N'조기출근' AS DUTY_NAME7     , '' AS DUTY_CODE8 
		    , '' AS DUTY_NAME8 
		
		  FROM HAT200T                            
		 WHERE COMP_CODE   = #{S_COMP_CODE}  
		   AND DUTY_YYYYMM = #{PAY_YYYYMM}  
		   AND PERSON_NUMB = #{PERSON_NUMB}  
		 GROUP BY DUTY_YYYYMM , PERSON_NUMB

	</select>
	

	
	<select id="Hpa940ukrServiceImpl.selectCode1" parameterType="map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrCode1Model">
		select b.sub_code, b.code_name, sum(duty_num+duty_time) duty_code from 
		  ( select person_numb, duty_code, duty_num, duty_time, duty_yyyymm
		   FROM HAT200T                            
		 WHERE COMP_CODE   = #{S_COMP_CODE}  
		   AND DUTY_YYYYMM = #{PAY_YYYYMM}  
		   AND PERSON_NUMB = #{PERSON_NUMB}  
		   ) a inner join (
		    SELECT SUB_CODE  , CODE_NAME              
		  FROM unilite.BSA100T                
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H033'     
		   AND SUB_CODE &lt;&gt; '$'        
		   AND USE_YN    = 'Y'            
		 ) b on a.duty_code = b.sub_code
		  GROUP BY b.sub_code, b.code_name
		  HAVING sum(duty_num+duty_time) &gt; 0 
	</select>
	
		<select id="Hpa940ukrServiceImpl.selectCode2" parameterType="map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrCode2Model">
		DECLARE 	@CONTAIN_ZERO		NVARCHAR(01)
		        , 	@DETAIL_ZERO		NVARCHAR(01)
		        
		   SET 		@CONTAIN_ZERO =   #{CONTAIN_ZERO}
		   SET 		@DETAIL_ZERO  =   #{DETAIL_ZERO}
		
		IF @DETAIL_ZERO = 'Y'
			BEGIN
				select b.wages_code, b.wages_name,
				<if test='CONTAIN_ZERO =="N" '>
				case when replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') = '0'
				     then ''
				     else replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') 
				  end as amt
				</if>
				<if test='CONTAIN_ZERO =="Y" '>
					 replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') amt
			    </if>
				  from 
					(SELECT *
					          FROM HPA300T                             
					         WHERE COMP_CODE   = #{S_COMP_CODE}   
					           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
					           AND PERSON_NUMB = #{PERSON_NUMB}   
					           AND SUPP_TYPE   = #{SUPP_TYPE}     
					
					)a  inner join (
					SELECT  WAGES_CODE         
					     , WAGES_NAME
					     , PRINT_SEQ           
					  FROM unilite.HBS300T                   
					 WHERE COMP_CODE = #{S_COMP_CODE}
					   AND USE_YN    = 'Y'
					 )b on  a.wages_code = b.wages_code
					 group by b.wages_code, b.wages_name, b.PRINT_SEQ
					 <if test='CONTAIN_ZERO =="N" '>
					 --having sum(amount_i) &gt; 0 
					 </if>
					 order by b.PRINT_SEQ 
					 
			END
		ELSE
			BEGIN
				select b.wages_code, b.wages_name,
				case when replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') = '0'
				     then ''
				     else replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') 
				  end as amt
				  from 
					(SELECT *
					          FROM HPA300T                             
					         WHERE COMP_CODE   = #{S_COMP_CODE}   
					           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
					           AND PERSON_NUMB = #{PERSON_NUMB}   
					           AND SUPP_TYPE   = #{SUPP_TYPE}     
					
					)a  inner join (
					SELECT  WAGES_CODE         
					     , WAGES_NAME
					     , PRINT_SEQ           
					  FROM unilite.HBS300T                   
					 WHERE COMP_CODE = #{S_COMP_CODE}
					   AND USE_YN    = 'Y'
					 )b on  a.wages_code = b.wages_code
					 group by b.wages_code, b.wages_name, b.PRINT_SEQ
					 having sum(amount_i) != 0 
					 order by b.PRINT_SEQ 
			END
		
	</select>
	
	<select id="Hpa940ukrServiceImpl.selectCode3" parameterType="map" resultType="foren.unilite.modules.human.hpa.Hpa940ukrCode3Model">
		DECLARE 	@CONTAIN_ZERO		NVARCHAR(01)
		        , 	@DETAIL_ZERO		NVARCHAR(01)
		        
		   SET 		@CONTAIN_ZERO =   #{CONTAIN_ZERO}
		   SET 		@DETAIL_ZERO  =   #{DETAIL_ZERO}
		
		IF @DETAIL_ZERO = 'Y'
			BEGIN   
				SELECT 
					B.SUB_CODE, 
					B.CODE_NAME, 
					<if test='CONTAIN_ZERO =="N" '>
					CASE WHEN REPLACE(CONVERT(VARCHAR(30), CAST(SUM(A.DED_AMOUNT_I) AS MONEY), 1), '.00', '') = '0'
					      THEN ''
						  ELSE REPLACE(CONVERT(VARCHAR(30), CAST(SUM(A.DED_AMOUNT_I) AS MONEY), 1), '.00', '')
					  END AS AMT
					</if>
					<if test='CONTAIN_ZERO =="Y" '>
					REPLACE(CONVERT(VARCHAR(30), CAST(SUM(A.DED_AMOUNT_I) AS MONEY), 1), '.00', '') AMT
					</if>
				FROM
						(
							SELECT * 
							FROM unilite.HPA400T
							 WHERE COMP_CODE   = #{S_COMP_CODE}   
					           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
					           AND PERSON_NUMB = #{PERSON_NUMB}   
					           AND SUPP_TYPE   = #{SUPP_TYPE}     
						) A INNER JOIN
						(
							SELECT SUB_CODE   
								 , CODE_NAME   
								 , REF_CODE2 --정렬순서
							  FROM unilite.BSA100T            
							 WHERE COMP_CODE = #{S_COMP_CODE}
							   AND MAIN_CODE = 'H034' 
							   AND SUB_CODE &lt;&gt; '$'    
							   AND USE_YN    = 'Y'
						  ) B on A.DED_CODE = B.SUB_CODE 
				  GROUP BY B.SUB_CODE, B.CODE_NAME, B.REF_CODE2
				  --having sum(a.ded_amount_i) > 0
				  ORDER BY B.REF_CODE2, B.SUB_CODE				  
			END
		ELSE
			BEGIN   
				SELECT 
					B.SUB_CODE, 
					B.CODE_NAME, 
					CASE WHEN REPLACE(CONVERT(VARCHAR(30), CAST(SUM(A.DED_AMOUNT_I) AS MONEY), 1), '.00', '') = '0'
					      THEN ''
						  ELSE REPLACE(CONVERT(VARCHAR(30), CAST(SUM(A.DED_AMOUNT_I) AS MONEY), 1), '.00', '')
					  END AS AMT
				FROM
						(
							SELECT * 
							FROM UNILITE.HPA400T
							 WHERE COMP_CODE   = #{S_COMP_CODE}   
					           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
					           AND PERSON_NUMB = #{PERSON_NUMB}   
					           AND SUPP_TYPE   = #{SUPP_TYPE}     
						) A INNER JOIN 
						(
							SELECT SUB_CODE   
								 , CODE_NAME   
								 , REF_CODE2 --정렬순서
							  FROM UNILITE.BSA100T            
							 WHERE COMP_CODE = #{S_COMP_CODE}
							   AND MAIN_CODE = 'H034' 
							   AND SUB_CODE &lt;&gt; '$'    
							   AND USE_YN    = 'Y'
						  ) B ON A.DED_CODE = B.SUB_CODE 
				  GROUP BY B.SUB_CODE, B.CODE_NAME, B.REF_CODE2
				  HAVING SUM(A.DED_AMOUNT_I) != 0
				  ORDER BY B.REF_CODE2, B.SUB_CODE
				  
			END
		
	</select>
	<select id="Hpa940ukrServiceImpl.selectResultList" parameterType="Map" resultType="rMap">
		SELECT    A.PAY_YYYYMM		
				, A.SUPP_TYPE		
				, A.PERSON_NUMB		
				, A.SEND_SEQ       
				, A.DIV_CODE		
				, B.NAME    	
				, B.POST_CODE	
				, A.DEPT_CODE		
				, A.DEPT_NAME		
				, A.EMAIL_ADDR		
				, A.SEND_RESULT		
				, A.ERROR_MSG   	
				, A.INSERT_DB_USER
				, CONVERT(NVARCHAR(19), A.INSERT_DB_TIME, 121) AS INSERT_DB_TIME
		 FROM L_HPA600T_EMAIL A
		INNER JOIN HUM100T B           ON A.COMP_CODE   = B.COMP_CODE 
		                              AND A.PERSON_NUMB = B.PERSON_NUMB     
		WHERE A.COMP_CODE 	= #{S_COMP_CODE}
		  AND A.DIV_CODE  	= #{DIV_CODE}
		  AND A.PAY_YYYYMM 	= #{PAY_YYYYMM}
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  AND A.PERSON_NUMB = #{PERSON_NUMB}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		  AND A.DEPT_CODE IN
			 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	          		 #{item}
	    	 </foreach>
		  </if>
		ORDER BY A.DEPT_CODE, B.POST_CODE, B.NAME, A.PERSON_NUMB , A.SEND_SEQ DESC
	</select>
	<update id="Hpa940ukrServiceImpl.updateLog" parameterType="Map">
		DECLARE 	@SEND_SEQ		INTEGER
		
		SELECT @SEND_SEQ = ISNULL(MAX(SEND_SEQ),0) + 1 
		  FROM L_HPA600T_EMAIL 
		 WHERE COMP_CODE = #{S_COMP_CODE} 
		   AND PERSON_NUMB = #{PERSON_NUMB}
		
		INSERT INTO L_HPA600T_EMAIL
		(	COMP_CODE		
			, PAY_YYYYMM		
			, SUPP_TYPE		
			, PERSON_NUMB		
			, SEND_SEQ       
			, DIV_CODE		
			, NAME    		
			, DEPT_CODE		
			, DEPT_NAME		
			, EMAIL_ADDR		
			, SEND_RESULT		
			, ERROR_MSG   	
			, INSERT_DB_USER
			, INSERT_DB_TIME
		) VALUES (
			  #{S_COMP_CODE}		
			, #{PAY_YYYYMM}		
			, #{SUPP_TYPE}		
			, #{PERSON_NUMB}		
			, @SEND_SEQ      
			, #{DIV_CODE}		
			, #{NAME}    		
			, #{DEPT_CODE}		
			, #{DEPT_NAME}		
			, #{EMAIL_ADDR}		
			, #{SEND_RESULT}		
			, #{SEND_MSG}   	
			, #{S_USER_ID}
			, GETDATE()
		)
	</update>
	
</mapper>