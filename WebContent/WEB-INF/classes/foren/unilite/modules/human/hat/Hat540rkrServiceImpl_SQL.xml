<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat540rkrServiceImpl">	
	<select id="hat540rkrServiceImpl.selectHBS400T" parameterType="Map" resultType="rMap">
		--hat540rkrServiceImpl.hat540rkrServiceImpl
		SELECT DUTY_INPUT_RULE
		  FROM HBS400T
		 WHERE COMP_CODE = #{S_COMP_CODE} 
		  
	</select>
	<select id="hat540rkrServiceImpl.selectDutyCode" parameterType="Map" resultType="rMap">	
	--hat540rkrServiceImpl.selectDutyCode
		SELECT TOP 20 SUB_CODE
		     , CODE_NAME
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND SUB_CODE != '$'
		   AND MAIN_CODE = 'H033'
		   AND USE_YN    = #{USE_YN}	--'Y'
		 ORDER BY REF_CODE2 
	</select>
	
	<select id="hat540rkrServiceImpl.selectToPrint" parameterType="Map" resultType="rMap">
		<choose>
			<when test='DUTY_INPUT_RULE == "N"'>
				--hat540rkrServiceImpl.selectToPrint - Query01
				SELECT B.DUTY_YYYYMMDD
				     , DIV_CODE = (A.DIV_CODE)
				     , DIV_NAME = (SELECT C.DIV_NAME 
				                     FROM BOR120T AS C 
				                    WHERE A.COMP_CODE = C.COMP_CODE
				                      AND A.DIV_CODE  = C.DIV_CODE)
				     , A.DEPT_CODE
				     , A.DEPT_NAME
				     , POST_CODE = (A.POST_CODE)
				     , POST_NAME = (SELECT C.CODE_NAME 
				                      FROM BSA100T AS C 
				                     WHERE C.COMP_CODE = A.COMP_CODE
				                       AND C.MAIN_CODE = 'H005' 
				                       AND C.SUB_CODE  = A.POST_CODE)
				     , A.NAME
				     , B.PERSON_NUMB
				     <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">					
							<foreach collection="DUTY_CODE" item="item"  index="index">
								 <if test="index &lt;= FIELD_NUM">
								 	 , MAX(CASE WHEN DUTY_CODE =  '${item.SUB_CODE}'
				                     THEN CASE WHEN DUTY_NUM != 0 
				                                    THEN DUTY_NUM 
				                               WHEN (DUTY_TIME != 0 OR  DUTY_MINU != 0) 
				                                    THEN DUTY_TIME + (DUTY_MINU / 60) 
				                                    ELSE CONVERT(FLOAT,0) 
				                           END 
				                     ELSE CONVERT(FLOAT,0) 
				           			END) AS FIELD${index+1} 
								 </if>
							</foreach>
							<if test = "DUTY_CODE_SIZE &lt; FIELD_NUM">
								<foreach collection="DUTY_CODE_SUPPLY" item="item"  index="index">
							     	 , CONVERT(FLOAT,0)  AS FIELD${item} 
							     </foreach>
						     </if>
				   		</if> 
				  FROM HUM100T A 
				               INNER JOIN HAT600T B
				                       ON A.COMP_CODE   = B.COMP_CODE
				                      AND A.PERSON_NUMB = B.PERSON_NUMB
				 WHERE B.COMP_CODE      = #{S_COMP_CODE}
				   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
				   AND B.DUTY_YYYYMMDD &gt;= #{DUTY_DATE_FR}
				   AND B.DUTY_YYYYMMDD &lt;= #{DUTY_DATE_TO}
				   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">	          
		   				AND A.DIV_CODE = #{DIV_CODE}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">	
				   		AND A.DEPT_CODE &gt;= #{FR_DEPT_CODE} 
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">	
				   		AND A.DEPT_CODE &lt;= #{TO_DEPT_CODE} 
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
				 		AND A.PAY_CODE  = #{PAY_CODE}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
				   		AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">     
				   		AND A.PAY_GUBUN = #{PAY_GUBUN}
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">   
				   		AND B.PERSON_NUMB = #{PERSON_NUMB}
				   </if>
				 GROUP BY A.COMP_CODE, B.DUTY_YYYYMMDD, B.PERSON_NUMB,A.DIV_CODE,A.DEPT_NAME,A.POST_CODE,A.NAME,A.DEPT_CODE
				  ORDER BY B.DUTY_YYYYMMDD,A.DIV_CODE,A.DEPT_CODE,A.POST_CODE, B.PERSON_NUMB
			</when>
		<otherwise>
			--hat540rkrServiceImpl.selectToPrint - Query02
			SELECT K.DUTY_YYYYMMDD
			     , K.DIV_CODE
			     , K.DIV_NAME
			     , K.DEPT_CODE
			     , K.DEPT_NAME
			     , S.NAME
			     , K.POST_CODE
			     , K.POST_NAME
			     , K.PERSON_NUMB
			     , MAX(FIELD1) AS FIELD1
			     , MAX(FIELD2) AS FIELD2
			     , MAX(FIELD3) AS FIELD3
			     , MAX(FIELD4) AS FIELD4 
			     , MAX(FIELD5) AS FIELD5 
			     , MAX(FIELD6) AS FIELD6
			     , MAX(FIELD7) AS FIELD7
			     , MAX(FIELD8) AS FIELD8
			     , MAX(FIELD9) AS FIELD9
			     , MAX(FIELD10) AS FIELD10
			     , MAX(FIELD11) AS FIELD11 
			     , MAX(FIELD12) AS FIELD12
			     , MAX(FIELD13) AS FIELD13
			     , MAX(FIELD14) AS FIELD14
			     , MAX(FIELD15) AS FIELD15
			     , MAX(FIELD16) AS FIELD16
			     , MAX(FIELD17) AS FIELD17
			     , MAX(FIELD18) AS FIELD18 
			     , MAX(FIELD19) AS FIELD19
			     , MAX(FIELD20) AS FIELD20
			  FROM (SELECT DD.DUTY_YYYYMMDD
			             , X.DIV_CODE
			             , (SELECT C.DIV_NAME
			                  FROM BOR120T AS C
			                 WHERE X.COMP_CODE = C.COMP_CODE 
			                   AND X.DIV_CODE  = C.DIV_CODE) AS DIV_NAME 
			             , X.DEPT_CODE 
			             , X.DEPT_NAME 
			             , X.POST_CODE 
			             , (SELECT C.CODE_NAME 
			                  FROM BSA100T AS C 
			                 WHERE X.COMP_CODE = C.COMP_CODE 
			                   AND C.MAIN_CODE = 'H005'
			                   AND C.SUB_CODE  = X.POST_CODE) AS POST_NAME 
			             , X.PERSON_NUMB
			             , X.NAME 
			             <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">					
							<foreach collection="DUTY_CODE" item="item"  index="index">
								 <if test="index &lt;= FIELD_NUM">
								 	<choose>
								 		<when test ='item.SUB_CODE != 64 and item.SUB_CODE != 65 and item.SUB_CODE != 51'>
								 		, CASE WHEN DUTY_CODE= #{item.SUB_CODE}
							                         THEN CONVERT(FLOAT,1)
							                         ELSE CONVERT(FLOAT,0)   
							                END FIELD${index+1}   
									 	</when>
									 	<otherwise>
									 		,CASE WHEN DUTY_CODE= #{item.SUB_CODE} 
							                        THEN (DD.DUTY_TIME+CONVERT(FLOAT,DUTY_MINU)/60) 
							                        ELSE CONVERT(FLOAT,0) 
							               END FIELD${index+1}  
									 	</otherwise>
								 	</choose>
								 </if>
							</foreach>
							<if test = "DUTY_CODE_SIZE &lt; FIELD_NUM">
								<foreach collection="DUTY_CODE_SUPPLY" item="item"  index="index">
							     	 , CONVERT(FLOAT,0)  AS FIELD${item} 
							     </foreach>
						     </if>
				   		</if> 
			             
			             
			             
			            
			          FROM (SELECT CC.WORK_TEAM 
			                     , CC.PERSON_NUMB
			                     , CC.DUTY_YYYYMMDD 
			                     , CASE WHEN CC.DUTY_CODE IS NULL 
			                                 THEN '64' 
			                                 ELSE CC.DUTY_CODE 
			                        END AS DUTY_CODE 
			                     , CASE WHEN CC.DUTY_CODE IS NULL 
			                                 THEN 0  
			                                 ELSE 1 
			                        END AS DUTY_NUM 
			                     , ISNULL(CC.DUTY_TIME,0) DUTY_TIME 
			                     , ISNULL(CC.DUTY_MINU,0) AS DUTY_MINU 
			                  FROM (SELECT BB.WORK_TEAM 
			                             , BB.PERSON_NUMB
			                             , BB.DUTY_YYYYMMDD
			                             , BB.DUTY_CODE 
			                             , CASE WHEN BB.DUTY_FR_TOT_REAL &lt;= BB.REST_FR_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI) / 60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI) / 60
			                                                END) 
			                                    WHEN BB.DUTY_FR_TOT_REAL > BB.REST_FR_TOT AND BB.DUTY_FR_TOT_REAL &lt;= BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.REST_FR_TOT - BB.DUTY_FR_TOT_ORI) / 60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.REST_FR_TOT - BB.DUTY_FR_TOT_ORI) / 60 
			                                                END) 
			                                    WHEN BB.DUTY_FR_TOT_REAL > BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI - (BB.REST_TO_TOT - BB.REST_FR_TOT)) / 60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI - (BB.REST_TO_TOT - BB.REST_FR_TOT)) /60 
			                                                END) 
			                                END AS DUTY_TIME 
			                             , CASE WHEN BB.DUTY_FR_TOT_REAL &lt;= BB.REST_FR_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI) % 60 &lt; 0 
			                                                         THEN 0
			                                                         ELSE (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI) % 60 
			                                                END) 
			                                    WHEN BB.DUTY_FR_TOT_REAL > BB.REST_FR_TOT AND BB.DUTY_FR_TOT_REAL &lt;= BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.REST_FR_TOT - BB.DUTY_FR_TOT_ORI) % 60 &lt; 0 
			                                                         THEN 0
			                                                         ELSE (BB.REST_FR_TOT - BB.DUTY_FR_TOT_ORI) % 60 
			                                                END)  
			                                    WHEN BB.DUTY_FR_TOT_REAL > BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI - (BB.REST_TO_TOT - BB.REST_FR_TOT)) % 60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_FR_TOT_REAL - BB.DUTY_FR_TOT_ORI - (BB.REST_TO_TOT - BB.REST_FR_TOT)) % 60
			                                                END) 
			                                END AS DUTY_MINU 
			                          FROM (SELECT AA.WORK_TEAM, AA.PERSON_NUMB
			                                     , AA.DUTY_YYYYMMDD, AA.DUTY_CODE 
			                                     , (DATEDIFF(DAY,  ORI_FR_DATE, REAL_FR_DATE ) * 24 * 60) + ( CONVERT(INT,DUTY_FR_H_REAL) * 60) 
			                                                                                              + (CONVERT(INT,DUTY_FR_M_REAL)) AS   DUTY_FR_TOT_REAL 
			                                     , (CONVERT(INT, DUTY_FR_H_ORI) * 60) + (CONVERT(INT,DUTY_FR_M_ORI)) AS  DUTY_FR_TOT_ORI 
			                                     , ISNULL((DATEDIFF(DAY, DUTY_YYYYMMDD, REST_FR_D_01 ) * 24 * 60) + (CONVERT(INT, REST_FR_H_01) * 60) 
			                                                                                                      + (CONVERT(INT,REST_FR_M_01)), 0) AS REST_FR_TOT 
			                                     , ISNULL((DATEDIFF(DAY,  DUTY_YYYYMMDD, REST_TO_D_01 ) * 24 * 60) + (CONVERT(INT, REST_TO_H_01) * 60) 
			                                                                                                       + (CONVERT(INT,REST_TO_M_01)), 0) AS REST_TO_TOT 
			                                  FROM (SELECT CASE D.REST_FR_D_01 
			                                                    WHEN '2' THEN A.DUTY_YYYYMMDD 
			                                                    WHEN '3' THEN DATEADD(DAY, 1, A.DUTY_YYYYMMDD) 
			                                                END REST_FR_D_01
			                                             , D.REST_FR_H_01
			                                             , D.REST_FR_M_01 
			                                             , CASE D.REST_TO_D_01 
			                                                    WHEN '2' THEN A.DUTY_YYYYMMDD 
			                                                    WHEN '3' THEN DATEADD(DAY, 1, A.DUTY_YYYYMMDD) 
			                                                END REST_TO_D_01
			                                             , D.REST_TO_H_01
			                                             , D.REST_TO_M_01 
			                                             , A.WORK_TEAM 
			                                             , A.PERSON_NUMB
			                                             , A.DUTY_YYYYMMDD
			                                             , A.DUTY_CODE  
			                                             , CONVERT(DATETIME , A.DUTY_FR_D) AS REAL_FR_DATE 
			                                             , CASE WHEN LEN(A.DUTY_FR_H) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), A.DUTY_FR_H, 112)  
			                                                         ELSE CONVERT(NVARCHAR(2), A.DUTY_FR_H, 112)  
			                                                END AS DUTY_FR_H_REAL  
			                                             , CASE WHEN LEN(A.DUTY_FR_M) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), A.DUTY_FR_M, 112) 
			                                                         ELSE CONVERT(NVARCHAR(2), A.DUTY_FR_M, 112) 
			                                                END AS DUTY_FR_M_REAL 
			                                             , CASE WHEN D.DUTY_FR_D = '1' 
			                                                         THEN DATEADD(DAY, -1 , CONVERT(DATETIME , A.DUTY_YYYYMMDD)) 
			                                                    WHEN D.DUTY_FR_D = '2' 
			                                                         THEN CONVERT(DATETIME , A.DUTY_YYYYMMDD)  
			                                                    WHEN D.DUTY_FR_D = '3' 
			                                                         THEN DATEADD(DAY, 1 , CONVERT(DATETIME , A.DUTY_YYYYMMDD)) 
			                                                END AS ORI_FR_DATE  
			                                             , CASE WHEN LEN(D.DUTY_FR_H) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), D.DUTY_FR_H, 112) 
			                                                         ELSE CONVERT(NVARCHAR(2), D.DUTY_FR_H, 112) 
			                                                END AS DUTY_FR_H_ORI  
			                                             , CASE WHEN LEN(D.DUTY_FR_M) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), D.DUTY_FR_M, 112) 
			                                                         ELSE CONVERT(NVARCHAR(2), D.DUTY_FR_M, 112) 
			                                                END AS DUTY_FR_M_ORI 
			                                          FROM HAT500T A
			                                                       INNER JOIN HUM100T B
			                                                               ON A.COMP_CODE     = B.COMP_CODE 
			                                                              AND A.PERSON_NUMB   = B.PERSON_NUMB 
			                                                       INNER JOIN HBS600T C
			                                                               ON A.COMP_CODE     = C.COMP_CODE 
			                                                              AND A.DUTY_YYYYMMDD = C.CAL_DATE 
			                                                              AND B.DIV_CODE      = C.DIV_CODE 
			                                                       INNER JOIN HAT100T D 
			                                                               ON A.COMP_CODE     = D.COMP_CODE 
			                                                              AND A.WORK_TEAM     = D.WORK_TEAM 
			                                                              AND C.HOLY_TYPE     = D.HOLY_TYPE
			                                                              
			                                         WHERE A.COMP_CODE      = #{S_COMP_CODE}
													   AND A.DUTY_YYYYMMDD &gt;= #{DUTY_DATE_FR}
													   AND A.DUTY_YYYYMMDD &lt;= #{DUTY_DATE_TO} )
			                                       AA)
			                               BB)
			                       CC 
			                 WHERE ( (CC.DUTY_CODE IS NULL) AND ( (CC.DUTY_TIME > 0 AND CC.DUTY_TIME IS NOT NULL) 
			                                                   OR (CC.DUTY_MINU > 0 AND CC.DUTY_MINU IS NOT NULL)) ) 
			                 UNION ALL 
			                SELECT CC.WORK_TEAM 
			                     , CC.PERSON_NUMB
			                     , CC.DUTY_YYYYMMDD 
			                     ,'65' AS DUTY_CODE 
			                     , 0 AS DUTY_NUM
			                     , CC.DUTY_TIME
			                     , CC.DUTY_MINU 
			                  FROM (SELECT BB.WORK_TEAM 
			                             , BB.PERSON_NUMB
			                             , BB.DUTY_YYYYMMDD
			                             , BB.DUTY_CODE 
			                             , CASE WHEN BB.DUTY_TO_TOT_REAL &lt;= BB.REST_FR_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL - (BB.REST_TO_TOT - BB.REST_FR_TOT)) /60  &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL - (BB.REST_TO_TOT - BB.REST_FR_TOT)) /60 
			                                                END) 
			                                    WHEN BB.DUTY_TO_TOT_REAL > BB.REST_FR_TOT AND BB.DUTY_TO_TOT_REAL &lt;= BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.REST_TO_TOT) /60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_TO_TOT_ORI - BB.REST_TO_TOT) /60 
			                                                END) 
			                                    WHEN BB.DUTY_TO_TOT_REAL > BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL ) /60  &lt; 0 
			                                                         THEN 0
			                                                         ELSE (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL) /60
			                                                END) 
			                                END AS DUTY_TIME 
			                             , CASE WHEN BB.DUTY_TO_TOT_REAL &lt;= BB.REST_FR_TOT
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL - (BB.REST_TO_TOT - BB.REST_FR_TOT)) % 60  &lt; 0 
			                                                         THEN 0 ELSE (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL - (BB.REST_TO_TOT - BB.REST_FR_TOT)) % 60
			                                                END) 
			                                    WHEN BB.DUTY_TO_TOT_REAL > BB.REST_FR_TOT AND BB.DUTY_TO_TOT_REAL &lt;= BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.REST_TO_TOT) % 60 &lt; 0 
			                                                         THEN 0 
			                                                         ELSE (BB.DUTY_TO_TOT_ORI - BB.REST_TO_TOT) % 60 
			                                                END) 
			                                    WHEN BB.DUTY_TO_TOT_REAL > BB.REST_TO_TOT 
			                                         THEN (CASE WHEN (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL ) % 60  &lt; 0
			                                                         THEN 0
			                                                         ELSE (BB.DUTY_TO_TOT_ORI - BB.DUTY_TO_TOT_REAL) % 60 
			                                                END) 
			                                END AS DUTY_MINU 
			                          FROM (SELECT AA.WORK_TEAM, AA.PERSON_NUMB, AA.DUTY_YYYYMMDD, AA.DUTY_CODE 
			                                     , (DATEDIFF(DAY, DUTY_YYYYMMDDT, ORI_TO_DATE ) * 24 * 60) + ( CONVERT(INT,DUTY_TO_H_ORI) * 60) 
			                                                                                               + (CONVERT(INT,DUTY_TO_M_ORI)) AS   DUTY_TO_TOT_ORI 
			                                     , (DATEDIFF(DAY, DUTY_YYYYMMDDT, REAL_TO_DATE ) * 24* 60) + (CONVERT(INT, DUTY_TO_H_REAL) * 60) 
			                                                                                               + (CONVERT(INT,DUTY_TO_M_REAL)) AS   DUTY_TO_TOT_REAL 
			                                     , ISNULL((DATEDIFF(DAY, DUTY_YYYYMMDDT, REST_FR_D_01 ) * 24* 60) + (CONVERT(INT, REST_FR_H_01) * 60) 
			                                                                                                      + (CONVERT(INT,REST_FR_M_01)), 0) AS   REST_FR_TOT 
			                                     , ISNULL((DATEDIFF(DAY, DUTY_YYYYMMDDT, REST_TO_D_01 ) * 24* 60) + (CONVERT(INT, REST_TO_H_01) * 60) 
			                                                                                                      + (CONVERT(INT,REST_TO_M_01)), 0) AS   REST_TO_TOT 
			                                  FROM (SELECT CASE D.REST_FR_D_01
			                                                    WHEN '2' THEN A.DUTY_YYYYMMDD 
			                                                    WHEN '3' THEN DATEADD(DAY, 1, A.DUTY_YYYYMMDD) 
			                                                END REST_FR_D_01
			                                             , D.REST_FR_H_01
			                                             , D.REST_FR_M_01 
			                                             , CASE D.REST_TO_D_01 
			                                                    WHEN '2' THEN A.DUTY_YYYYMMDD 
			                                                    WHEN '3' THEN DATEADD(DAY, 1, A.DUTY_YYYYMMDD) 
			                                                END REST_TO_D_01
			                                             , D.REST_TO_H_01
			                                             , D.REST_TO_M_01 
			                                             , A.WORK_TEAM , A.PERSON_NUMB, A.DUTY_YYYYMMDD, A.DUTY_CODE 
			                                             , CONVERT(DATETIME , A.DUTY_YYYYMMDD) AS DUTY_YYYYMMDDT  
			                                             , CONVERT(DATETIME , A.DUTY_TO_D) AS REAL_TO_DATE 
			                                             , CASE WHEN LEN(A.DUTY_TO_H) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), A.DUTY_TO_H, 112) 
			                                                         ELSE CONVERT(NVARCHAR(2), A.DUTY_TO_H, 112) 
			                                                END AS DUTY_TO_H_REAL  
			                                             , CASE WHEN LEN(A.DUTY_TO_M) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), A.DUTY_TO_M, 112)  
			                                                         ELSE CONVERT(NVARCHAR(2), A.DUTY_TO_M, 112)  
			                                                END AS DUTY_TO_M_REAL  
			                                             , CASE WHEN D.DUTY_TO_D = '1' 
			                                                         THEN DATEADD(DAY, -1 , CONVERT(DATETIME , A.DUTY_YYYYMMDD)) 
			                                                    WHEN D.DUTY_TO_D = '2'
			                                                         THEN CONVERT(DATETIME , A.DUTY_YYYYMMDD) 
			                                                    WHEN D.DUTY_TO_D = '3' 
			                                                         THEN DATEADD(DAY, 1 , CONVERT(DATETIME , A.DUTY_YYYYMMDD)) 
			                                                END  AS ORI_TO_DATE  
			                                             , CASE WHEN LEN(D.DUTY_TO_H) = 1 
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), D.DUTY_TO_H, 112)  
			                                                         ELSE CONVERT(NVARCHAR(2), D.DUTY_TO_H, 112) 
			                                                END AS DUTY_TO_H_ORI  
			                                             , CASE WHEN LEN(D.DUTY_TO_M) = 1
			                                                         THEN '0' +  CONVERT(NVARCHAR(2), D.DUTY_TO_M, 112)  
			                                                         ELSE CONVERT(NVARCHAR(2), D.DUTY_TO_M, 112)  
			                                                END AS DUTY_TO_M_ORI  
			                                          FROM HAT500T A
			                                                       INNER JOIN HUM100T B
			                                                               ON A.COMP_CODE     = B.COMP_CODE 
			                                                              AND A.PERSON_NUMB   = B.PERSON_NUMB 
			                                                       INNER JOIN HBS600T C
			                                                               ON A.COMP_CODE     = C.COMP_CODE 
			                                                              AND A.DUTY_YYYYMMDD = C.CAL_DATE 
			                                                              AND B.DIV_CODE      = C.DIV_CODE 
			                                                       INNER JOIN HAT100T D 
			                                                               ON A.COMP_CODE     = D.COMP_CODE 
			                                                              AND A.WORK_TEAM     = D.WORK_TEAM 
			                                                              AND C.HOLY_TYPE     = D.HOLY_TYPE
			                                         WHERE A.COMP_CODE      = #{S_COMP_CODE}
													   AND A.DUTY_YYYYMMDD &gt;= #{DUTY_DATE_FR}
													   AND A.DUTY_YYYYMMDD &lt;= #{DUTY_DATE_TO} )
			                                       AA)
			                               BB) 
			                       CC 
			                 WHERE ((CC.DUTY_CODE  IS NOT NULL) 
			                       OR (CC.DUTY_TIME > 0 AND CC.DUTY_TIME IS NOT NULL) 
			                       OR (CC.DUTY_MINU > 0 AND CC.DUTY_MINU IS NOT NULL)) 
			                   AND DUTY_CODE IS NULL 
			                 UNION ALL 
			                SELECT WORK_TEAM, PERSON_NUMB, DUTY_YYYYMMDD  
			                     , DUTY_CODE,  DUTY_NUM, DUTY_TIME, DUTY_MINU  
			                  FROM (SELECT CC.WORK_TEAM , CC.PERSON_NUMB, CC.DUTY_YYYYMMDD  
			                             , CC.DUTY_CODE,  0 AS DUTY_NUM 
			                             , CONVERT(INT,ROUND((REAL_TIME / 60 ) ,0,1)) AS  DUTY_TIME  
			                             , CONVERT(INT,(REAL_TIME ),0) % 60  AS DUTY_MINU 
			                          FROM (SELECT BB.WORK_TEAM, BB.DUTY_CODE, BB.DUTY_YYYYMMDD, BB.PERSON_NUMB 
			                                     , CASE WHEN TO500TIME &lt;  TO110TIME 
			                                                 THEN TO500TIME 
			                                                 ELSE TO110TIME
			                                        END 
			                                     - CASE WHEN FR500TIME &lt;  FR110TIME 
			                                                 THEN FR110TIME 
			                                                 ELSE FR500TIME 
			                                        END 
			                                     - CASE WHEN TOH500 > REST_FR_H_01 
			                                                 THEN CASE WHEN FRH500 &lt; REST_FR_H_01 
			                                                           THEN REST_01 ELSE 0 
			                                                       END 
			                                                 ELSE 0 
			                                        END 
			                                     - CASE WHEN TOH500 > REST_FR_H_02 
			                                                 THEN CASE WHEN FRH500 &lt; REST_FR_H_02 
			                                                                THEN REST_02 
			                                                                ELSE 0 
			                                                       END 
			                                                 ELSE 0
			                                        END 
			                                     - CASE WHEN TOH500 > REST_FR_H_03 
			                                                 THEN CASE WHEN FRH500 &lt; REST_FR_H_03 
			                                                                THEN REST_03 
			                                                                ELSE 0 
			                                                       END 
			                                                 ELSE 0 
			                                        END 
			                                         AS REAL_TIME 
			                                  FROM (SELECT AA.WORK_TEAM, AA.DUTY_CODE, AA.DUTY_YYYYMMDD, AA.PERSON_NUMB 
			                                             , (FRDT500 * 24 * 60) +  (FRH500   * 60 ) +FRM500  AS FR500TIME 
			                                             , (TODT500 * 24 * 60) +  (TOH500 * 60 ) +TOM500  AS TO500TIME 
			                                             , (FRD100 * 24 * 60) +  (FRH100 * 60) + FRM100  AS FR100TIME 
			                                             , (TOD100 * 24 * 60) +  (TOH100 * 60)  +TOM100  AS TO100TIME 
			                                             , (FRD110 * 24 * 60) +  (FRH110 * 60) + FRM110  AS FR110TIME 
			                                             , (TOD110 * 24 * 60) +  (TOH110 * 60)  +TOM110  AS TO110TIME 
			                                             , CASE WHEN REST_FR_D_01  IS NOT  NULL 
			                                                         THEN ((REST_TO_D_01 * 24 * 60) +  (REST_TO_H_01   * 60 ) + REST_TO_M_01) 
			                                                            - ((REST_FR_D_01 * 24 * 60) +  (REST_FR_H_01   * 60 ) + REST_FR_M_01) 
			                                                         ELSE  0 
			                                                END REST_01 
			                                             , CASE WHEN REST_FR_D_02  IS NOT  NULL 
			                                                         THEN ((REST_TO_D_02 * 24 * 60) +  (REST_TO_H_02   * 60 ) + REST_TO_M_02) 
			                                                            - ((REST_FR_D_02 * 24 * 60) +  (REST_FR_H_02   * 60 ) + REST_FR_M_02) 
			                                                         ELSE  0 
			                                                END REST_02 
			                                             , CASE WHEN REST_FR_D_03  IS NOT  NULL 
			                                                         THEN ((REST_TO_D_03 * 24 * 60) +  (REST_TO_H_03   * 60 ) + REST_TO_M_03) 
			                                                            - ((REST_FR_D_03 * 24 * 60) +  (REST_FR_H_03   * 60 ) + REST_FR_M_03)  
			                                                         ELSE  0 
			                                                END REST_03 
			                                             , (FRDT500 * 24) + FRH500 AS FRH500, (TODT500 * 24) + TOH500 AS TOH500 
			                                             , (REST_FR_D_01 * 24) + REST_FR_H_01 AS REST_FR_H_01, (REST_TO_D_01 * 24) + REST_TO_H_01 AS REST_TO_H_01 
			                                             , (REST_FR_D_02 * 24) + REST_FR_H_02 AS REST_FR_H_02, (REST_TO_D_02 * 24) + REST_TO_H_02 AS REST_TO_H_02 
			                                             , (REST_FR_D_03 * 24) + REST_FR_H_03 AS REST_FR_H_03, (REST_TO_D_03 * 24) + REST_TO_H_03 AS REST_TO_H_03 
			                                          FROM (SELECT C.WORK_TEAM, C.DUTY_CODE, A.DUTY_YYYYMMDD ,A.PERSON_NUMB 
			                                                     , DATEDIFF(DAY, A.DUTY_YYYYMMDD, A.DUTY_FR_D) AS FRDT500 
			                                                     , A.DUTY_FR_H AS FRH500 , A.DUTY_FR_M  AS FRM500 
			                                                     , DATEDIFF(DAY, A.DUTY_YYYYMMDD, A.DUTY_TO_D) AS TODT500 
			                                                     , A.DUTY_TO_H AS TOH500, A.DUTY_TO_M AS TOM500 
			                                                     , CASE WHEN  F.DUTY_FR_D = '1' THEN  -1 
			                                                            WHEN  F.DUTY_FR_D = '2' THEN  0 
			                                                            WHEN  F.DUTY_FR_D = '3' THEN  1 END  AS FRD100 
			                                                     , F.DUTY_FR_H AS FRH100,  F.DUTY_FR_M  AS FRM100  
			                                                     , CASE WHEN  F.DUTY_TO_D = '1' THEN  -1 
			                                                            WHEN  F.DUTY_TO_D = '2' THEN  0 
			                                                            WHEN  F.DUTY_TO_D = '3' THEN  1 END  TOD100 
			                                                     , F.DUTY_TO_H AS TOH100, F.DUTY_TO_M AS TOM100  
			                                                     , CASE WHEN  C.DUTY_FR_D = '1' THEN  -1 
			                                                            WHEN  C.DUTY_FR_D = '2' THEN  0 
			                                                            WHEN  C.DUTY_FR_D = '3' THEN  1 END  AS FRD110 
			                                                     , C.DUTY_FR_H AS FRH110,  C.DUTY_FR_M  AS FRM110 
			                                                     , CASE WHEN  C.DUTY_TO_D = '1' THEN  -1 
			                                                            WHEN  C.DUTY_TO_D = '2' THEN  0 
			                                                            WHEN  C.DUTY_TO_D = '3' THEN  1 END  TOD110 
			                                                     , C.DUTY_TO_H AS TOH110, C.DUTY_TO_M AS TOM110 
			                                                     , CASE WHEN  C.REST_FR_D_01 = '1' THEN  -1 
			                                                            WHEN  C.REST_FR_D_01 = '2' THEN  0 
			                                                            WHEN  C.REST_FR_D_01 = '3' THEN  1 END  AS REST_FR_D_01 
			                                                     , C.REST_FR_H_01 ,  C.REST_FR_M_01  
			                                                     , CASE WHEN  C.REST_TO_D_01 = '1' THEN  -1 
			                                                            WHEN  C.REST_TO_D_01 = '2' THEN  0 
			                                                            WHEN  C.REST_TO_D_01 = '3' THEN  1 END  REST_TO_D_01 
			                                                     , C.REST_TO_H_01, C.REST_TO_M_01 
			                                                     , CASE WHEN  C.REST_FR_D_02 = '1' THEN  -1  
			                                                            WHEN  C.REST_FR_D_02 = '2' THEN  0 
			                                                            WHEN  C.REST_FR_D_02 = '3' THEN  1 END  AS REST_FR_D_02 
			                                                     , C.REST_FR_H_02 ,  C.REST_FR_M_02  
			                                                     , CASE WHEN  C.REST_TO_D_02 = '1' THEN  -1 
			                                                            WHEN  C.REST_TO_D_02 = '2' THEN  0  
			                                                            WHEN  C.REST_TO_D_02 = '3' THEN  1 END  REST_TO_D_02 
			                                                     , C.REST_TO_H_02, C.REST_TO_M_02 
			                                                     , CASE WHEN  C.REST_FR_D_03 = '1' THEN  -1 
			                                                            WHEN  C.REST_FR_D_03 = '2' THEN  0  
			                                                            WHEN  C.REST_FR_D_03 = '3' THEN  1 END  AS REST_FR_D_03 
			                                                     , C.REST_FR_H_03 ,  C.REST_FR_M_03 
			                                                     , CASE WHEN  C.REST_TO_D_03 = '1' THEN  -1 
			                                                            WHEN  C.REST_TO_D_03 = '2' THEN  0 
			                                                            WHEN  C.REST_TO_D_03 = '3' THEN  1 END  REST_TO_D_03 
			                                                     , C.REST_TO_H_03, C.REST_TO_M_03 
			                                                  FROM HAT500T A
			                                                               INNER JOIN HUM100T B
			                                                                       ON A.COMP_CODE     = B.COMP_CODE
			                                                                      AND A.PERSON_NUMB   = B.PERSON_NUMB
			                                                               INNER JOIN HAT110T C
			                                                                       ON B.COMP_CODE     = C.COMP_CODE
			                                                                      AND B.PAY_CODE      = C.PAY_CODE 
			                                                                      AND A.WORK_TEAM     = C.WORK_TEAM 
			                                                               INNER JOIN HBS600T D
			                                                                       ON A.COMP_CODE     = D.COMP_CODE
			                                                                      AND A.DUTY_YYYYMMDD = D.CAL_DATE 
			                                                                      AND B.DIV_CODE      = D.DIV_CODE 
			                                                                      AND C.HOLY_TYPE     = D.HOLY_TYPE 
			                                                          LEFT OUTER JOIN HAT100T F 
			                                                                       ON A.COMP_CODE     = F.COMP_CODE
			                                                                      AND D.HOLY_TYPE     = F.HOLY_TYPE 
			                                                                      AND A.WORK_TEAM     = F.WORK_TEAM 
			                                                 WHERE A.COMP_CODE      = #{S_COMP_CODE}
															   AND A.DUTY_YYYYMMDD &gt;= #{DUTY_DATE_FR}
															   AND A.DUTY_YYYYMMDD &lt;= #{DUTY_DATE_TO}
			                                                   AND A.DUTY_CODE IS NULL 
			                                               ) AS AA 
			                                       ) AS BB 
			                               ) AS CC 
			                       ) AS DD 
			                 WHERE DUTY_TIME >= 0 AND DUTY_MINU >= 0 
			                 UNION ALL 
			                SELECT CC.WORK_TEAM , CC.PERSON_NUMB, CC.DUTY_YYYYMMDD 
			                     , CASE WHEN CC.DUTY_CODE IS NULL
			                                 THEN '64' 
			                                 ELSE CC.DUTY_CODE 
			                        END AS DUTY_CODE 
			                     , CASE WHEN CC.DUTY_CODE IS NULL 
			                                 THEN 0 
			                                 ELSE 1 
			                        END AS DUTY_NUM 
			                     , 0 AS DUTY_TIME 
			                     , 0 AS DUTY_MINU 
			                  FROM (SELECT BB.WORK_TEAM , BB.PERSON_NUMB, BB.DUTY_YYYYMMDD, BB.DUTY_CODE 
			                          FROM (SELECT AA.WORK_TEAM, AA.PERSON_NUMB, AA.DUTY_YYYYMMDD, AA.DUTY_CODE 
			                                  FROM (SELECT A.WORK_TEAM, A.PERSON_NUMB, A.DUTY_YYYYMMDD, A.DUTY_CODE 
			                                          FROM HAT500T A
			                                                       INNER JOIN HUM100T B
			                                                               ON A.COMP_CODE     = B.COMP_CODE
			                                                              AND A.PERSON_NUMB   = B.PERSON_NUMB 
			                                                       INNER JOIN HBS600T C 
			                                                               ON A.COMP_CODE     = C.COMP_CODE
			                                                              AND A.DUTY_YYYYMMDD = C.CAL_DATE 
			                                                              AND B.DIV_CODE      = C.DIV_CODE 
			                                         WHERE A.COMP_CODE      = #{S_COMP_CODE}
													   AND A.DUTY_YYYYMMDD &gt;= #{DUTY_DATE_FR}
													   AND A.DUTY_YYYYMMDD &lt;= #{DUTY_DATE_TO}
			                                       ) AA
			                               ) BB 
			                       ) CC 
			         WHERE ((CC.DUTY_CODE IS NOT NULL)) 
			       ) DD
			       , HUM100T X 
			   WHERE X.PERSON_NUMB = DD.PERSON_NUMB 
			     AND X.COMP_CODE   = #{S_COMP_CODE}
			     <if test = "@foren.Ognl@isNotEmpty(DUTY_CODE_N)">
			     <foreach collection="DUTY_CODE_N" item="item"  index="index">      
			           AND DD.DUTY_CODE != #{item.SUB_CODE}
				</foreach>
			     </if>
			     
			   GROUP BY DD.DUTY_YYYYMMDD, X.COMP_CODE, X.DIV_CODE, X.DEPT_CODE, X.POST_CODE, DD.PERSON_NUMB 
			       , X.DEPT_NAME, X.PERSON_NUMB, X.NAME, DD.DUTY_CODE,DD.DUTY_TIME,DD.DUTY_MINU 
			       ) K 
			     , HUM100T S 
			 WHERE S.PERSON_NUMB = K.PERSON_NUMB
			   AND S.COMP_CODE   = #{S_COMP_CODE}
			   AND uniLITE.fnCheckCompDivAuth(S.COMP_CODE, S.DIV_CODE, #{S_USER_ID}) = 'Y'
			    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">	          
		   			AND S.DIV_CODE = #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">	
			   		AND S.DEPT_CODE &gt;= #{FR_DEPT_CODE} 
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">	
			   		AND S.DEPT_CODE &lt;= #{TO_DEPT_CODE} 
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
				 	AND S.PAY_CODE  = #{PAY_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
			   		AND S.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">     
			   		AND S.PAY_GUBUN = #{PAY_GUBUN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">   
			   		AND S.PERSON_NUMB = #{PERSON_NUMB}
			   </if>
			 GROUP BY K.DUTY_YYYYMMDD, K.DIV_CODE, K.DEPT_CODE, K.POST_CODE, K.PERSON_NUMB
			        , K.DEPT_NAME, K.DIV_NAME, K.POST_NAME, S.NAME 
			 ORDER BY K.DUTY_YYYYMMDD, K.DIV_NAME, K.POST_NAME, S.NAME, K.PERSON_NUMB 
		</otherwise>
		</choose>
 		</select>
	
	
</mapper>