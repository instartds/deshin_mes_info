<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat502ukrServiceImpl">

	<select id="hat502ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">
		/* hat502ukrServiceImpl.selectDataList */		
		SELECT #{S_USER_ID} AS USER_ID
		      ,A.DRAFT_STATUS
		      ,A.PERSON_NUMB
		      ,B.NAME
		      ,C.WORK_TEAM
		      ,B.DEPT_CODE
		      ,B.DEPT_NAME
		      ,A.DUTY_CODE
		      ,A.DUTY_YYYYMMDD
		      ,A.DUTY_FR_D
		      ,A.DUTY_TO_D
		      , REPLICATE(0, 2 - LEN(A.DUTY_FR_H)) + A.DUTY_FR_H DUTY_FR_H
		      , REPLICATE(0, 2 - LEN(A.DUTY_TO_H)) + A.DUTY_TO_H DUTY_TO_H
		      , REPLICATE(0, 2 - LEN(A.DUTY_FR_M)) + A.DUTY_FR_M DUTY_FR_M
		      , REPLICATE(0, 2 - LEN(A.DUTY_TO_M)) + A.DUTY_TO_M DUTY_TO_M
		      ,A.REMARK
		      ,A.COMP_CODE
		      ,A.TEMPC_01 AS DIV_CODE
		FROM   HEA501T A
		    LEFT JOIN HUM100T B ON B.COMP_CODE     = A.COMP_CODE
		                      AND  B.PERSON_NUMB   = A.PERSON_NUMB
		    LEFT JOIN HAT400T C ON C.COMP_CODE     = A.COMP_CODE
                              AND  C.PERSON_NUMB   = A.PERSON_NUMB
                              AND  C.DUTY_YYYYMMDD = (SELECT MAX(C.DUTY_YYYYMMDD)
                                                      FROM HAT400T C WITH (NOLOCK)
                                                      WHERE C.COMP_CODE         = A.COMP_CODE
                                                        AND C.PERSON_NUMB       = A.PERSON_NUMB
                                                        AND C.DUTY_YYYYMMDD &lt;= #{DVRY_DATE_FR}) 
		                                            
        WHERE A.COMP_CODE        = #{S_COMP_CODE}
 		 AND A.DUTY_YYYYMMDD &gt;= #{DVRY_DATE_FR}	
	     AND A.DUTY_YYYYMMDD &lt;= #{DVRY_DATE_TO}
       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">		 
       	AND A.TEMPC_01 = #{DIV_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">		 
       	AND A.PERSON_NUMB = #{PERSON_NUMB}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		 
       	AND B.DEPT_CODE = #{DEPT_CODE}
       </if>              
       
       <!--              
       <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
		   AND     A.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
	   </if>
	   -->

	</select>
	
	<select id="hat502ukrServiceImpl.getDutyList" parameterType="rMap" resultType="rMap">
		/* hat502ukrServiceImpl.getDutyList */
		SELECT A.SUB_CODE, A.CODE_NAME
          FROM (
                  SELECT B.SUB_CODE
                       , B.CODE_NAME
                       , B.COMP_CODE
                       , B.REF_CODE2 
                    FROM            HBS100T A
                         INNER JOIN BSA100T B ON B.COMP_CODE = A.COMP_CODE
                                             AND B.SUB_CODE  = A.DUTY_CODE
                   WHERE A.COMP_CODE = #{S_COMP_CODE}
                   	 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
                     AND A.PAY_CODE  = #{PAY_CODE}
                   	 </if>
                     AND A.COTR_TYPE = '1'
                     AND B.MAIN_CODE = 'H033'
                     AND ISNULL(B.REF_CODE5,'') &lt;&gt; 'N'
                     AND B.USE_YN    = 'Y'
               ) A 
         WHERE A.COMP_CODE = #{S_COMP_CODE}
         ORDER BY A.REF_CODE2, A.SUB_CODE
	</select>
	
	<select id="hat502ukrServiceImpl.getWorkTeam" parameterType="rMap" resultType="String">
		/* hat502ukrServiceImpl.getWorkTeam */
		SELECT ISNULL(WORK_TEAM,'1') AS WORK_TEAM 
	       FROM HAT400T WITH(NOLOCK)
	      WHERE COMP_CODE     = #{S_COMP_CODE}
	        AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	        AND PERSON_NUMB   = #{PERSON_NUMB}
	</select>
	
	<insert id="hat502ukrServiceImpl.insertList"  parameterType="rMap">
		/* hat502ukrServiceImpl.insertList */
		INSERT INTO HEA501T (
			     COMP_CODE          /*   NVARCHAR(08)    NOT NULL DEFAULT 'MASTER' ,      법인               */                      
			    ,BASIS_NUM			/*   NVARCHAR(40)    NOT NULL ,                       근태구분코드      */
			    ,DRAFT_STATUS		/*   NVARCHAR(10)    NOT NULL ,                       근태구분코드      */
			    ,DUTY_CODE          /*   NVARCHAR(02)        NULL ,                       근태구분코드      */
			    ,DUTY_FR_D          /*   NVARCHAR(08)        NULL ,                       출근시각(일자)    */                      
			    ,DUTY_FR_H          /*   NUMERIC(2,0)    NOT NULL DEFAULT 0 ,             출근시각(시)      */                      
			    ,DUTY_FR_M          /*   NUMERIC(2,0)    NOT NULL DEFAULT 0 ,             출근시각(분)      */                      
			    ,DUTY_TO_D          /*   NVARCHAR(08)        NULL ,                       퇴근시각(일자)    */                      
			    ,DUTY_TO_H          /*   NUMERIC(2,0)    NOT NULL DEFAULT 0 ,             퇴근시각(시)      */                      
			    ,DUTY_TO_M          /*   NUMERIC(2,0)    NOT NULL DEFAULT 0 ,             퇴근시각(분)      */	    
			    ,PERSON_NUMB        /*   NVARCHAR(10)    NOT NULL ,                       사번              */                      
			    ,DUTY_YYYYMMDD      /*   NVARCHAR(08)    NOT NULL ,                       근태일자          */
			    ,REMARK             /*   NVARCHAR(300)       NULL ,                       비고              */                        
		   		,INSERT_DB_USER     /*   NVARCHAR(20)    NOT NULL DEFAULT 'uniLITE' ,     입력자            */                      
			    ,INSERT_DB_TIME     /*   SMALLDATETIME   NOT NULL DEFAULT GETDATE() ,     입력일            */                      
			    ,UPDATE_DB_USER     /*   NVARCHAR(20)    NOT NULL DEFAULT 'uniLITE' ,     수정자            */                      
			    ,UPDATE_DB_TIME     /*   SMALLDATETIME   NOT NULL DEFAULT GETDATE() ,     수정일            */
			    ,TEMPC_01                        
			  )                                                                                              
		VALUES                                                                                          
			 (    
			 	  #{S_COMP_CODE}
			 	  , #{PERSON_NUMB}+#{DUTY_FR_D}+Right('00' + CONVERT(NVARCHAR, #{DUTY_FR_H}), 2) +Right('00' + CONVERT(NVARCHAR, #{DUTY_FR_M}), 2) 
			 	  , 'N'
			 	  , #{DUTY_CODE}
			      , #{DUTY_FR_D}
			      , REPLICATE(0, 2 - LEN(#{DUTY_FR_H})) + #{DUTY_FR_H}
			      , REPLICATE(0, 2 - LEN(#{DUTY_FR_M})) + #{DUTY_FR_M}
			      , #{DUTY_TO_D}
			      , REPLICATE(0, 2 - LEN(#{DUTY_TO_H})) + #{DUTY_TO_H}
			      , REPLICATE(0, 2 - LEN(#{DUTY_TO_M})) + #{DUTY_TO_M}
			 	  , #{PERSON_NUMB}
			 	  , #{DUTY_FR_D}
			 	  , #{REMARK}
			 	  , #{S_USER_ID}
			 	  , GETDATE()
			 	  , #{S_USER_ID}                                                                                        
			 	  , GETDATE()
			 	  , #{DIV_CODE}	   
			)  
	</insert>
	
	<update id="hat502ukrServiceImpl.updateList"  parameterType="rMap">
		/* hat502ukrServiceImpl.updateList */
		UPDATE HEA501T
               SET DUTY_CODE = #{DUTY_CODE}
                 , DUTY_FR_D = #{DUTY_FR_D}
                 , DUTY_FR_H = REPLICATE(0, 2 - LEN(#{DUTY_FR_H})) + #{DUTY_FR_H}
                 , DUTY_FR_M = REPLICATE(0, 2 - LEN(#{DUTY_FR_M})) + #{DUTY_FR_M}
                 , DUTY_TO_D = #{DUTY_TO_D}
                 , DUTY_TO_H = REPLICATE(0, 2 - LEN(#{DUTY_TO_H})) + #{DUTY_TO_H}
                 , DUTY_TO_M = REPLICATE(0, 2 - LEN(#{DUTY_TO_M})) + #{DUTY_TO_M}
                 , REMARK = #{REMARK}
                 , UPDATE_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_TIME = GETDATE()
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND PERSON_NUMB = #{PERSON_NUMB}
               AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD} 
	</update>
	
	<delete id="hat502ukrServiceImpl.deleteList"  parameterType="rMap">
		/* hat502ukrServiceImpl.deleteList */
		DELETE HEA501T
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND PERSON_NUMB = #{PERSON_NUMB}
               AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
               AND DUTY_CODE = #{DUTY_CODE}
	</delete>
	
</mapper>