<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat400ukrServiceImpl">
	<!--
		Sorry, I can`t migrate	Hum100ukrModel
		See console output for further details 
	-->
	<!--
		Sorry, I can`t migrate	Hum710ukrModel
		See console output for further details 
	-->	
	<!--
		Sorry, I can`t migrate	Hum790ukrModel
		See console output for further details 
	-->
	<!--
		Sorry, I can`t migrate	Hum800ukrModel
		See console output for further details 
	-->
	
	<select id="hat400ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">		
	/* hat400ukrServiceImpl.selectList */
	
	EXEC SP_HAT400UKR  #{S_COMP_CODE}, #{S_USER_ID}, #{S_LANG_CODE}, #{DVRY_DATE_FR}, #{DVRY_DATE_TO}, #{DIV_CODE},
					   #{DEPT_CODE}, #{PERSON_NUMB}, #{PAY_CODE}, #{PAY_PROV_FLAG}, #{PAY_GUBUN}, #{WORK_TEAM}
		
	</select>
	
	<update id="hat400ukrServiceImpl.update" parameterType="Map">		
	/* hat400ukrServiceImpl.update */
	
	INSERT INTO HAT400T( COMP_CODE, 
						 DUTY_YYYYMMDD, 
						 PERSON_NUMB, 
						 WORK_TEAM, 
						 UPDATE_DB_USER, 
						 UPDATE_DB_TIME, 
						 INSERT_DB_USER, 
						 INSERT_DB_TIME
						 )
				VALUES ( #{S_COMP_CODE},
						 #{DUTY_YYYYMMDD},
						 #{PERSON_NUMB},
						 #{WORK_TEAM},
						 #{S_USER_ID},
						 getDate(),
						 #{S_USER_ID},
						 getDate()
						)
	</update>
	
	<update id="hat400ukrServiceImpl.update_exist" parameterType="Map">
		/* hat400ukrServiceImpl.update_exist */
		UPDATE HAT400T
		SET WORK_TEAM = #{WORK_TEAM}
		WHERE PERSON_NUMB = #{PERSON_NUMB} 
		  	  AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	</update>
	
	<update id="hat400ukrServiceImpl.workBatch" parameterType="Map">		
		/* hat400ukrServiceImpl.workBatch */
		BEGIN
			
		DECLARE    
			   @COMPCODE         NVARCHAR(08)
			 , @UserId           NVARCHAR(100)
			 , @LangType         NVARCHAR(2)
			 , @StartDate        NVARCHAR(20)
			 , @EndDate          NVARCHAR(20)
			 , @DIV_CODE         NVARCHAR(8)
			 , @DEPT_CODE        NVARCHAR(8)
			 , @PERSON_NUMB      NVARCHAR(10)
			 , @PAY_CODE         NVARCHAR(1) 
			 , @PAY_PROV_FLAG    NVARCHAR(1)
			 , @PAY_GUBUN        NVARCHAR(2)
			 , @WORK_TEAM        NVARCHAR(1)
			 --END PARAM
			 
			 , @DateDiff         INT
		     , @LoopIndex        INT
		     , @StartDateLoop    DATETIME
		     , @StartDateLoopStr NVARCHAR(20)
		     , @strSQL           NVARCHAR(2000)
		     , @strSOL_Loop      NVARCHAR(2000)
		     , @paramSQL         NVARCHAR(2000)
		      
		  SET @COMPCODE =	#{S_COMP_CODE}
		  SET @UserId =		#{S_USER_ID}
		  SET @LangType =   #{S_LANG_CODE}
		  SET @StartDate =  #{DVRY_DATE_FR_H}
		  SET @EndDate =    #{DVRY_DATE_TO_H}
		  SET @DIV_CODE =   #{DIV_CODE_H}
		  SET @DEPT_CODE =  #{DEPT_CODE_H}
		  SET @PERSON_NUMB = #{PERSON_NUMB_H}
		  SET @PAY_CODE =    #{PAY_CODE_H}
		  SET @PAY_PROV_FLAG = #{PAY_PROV_FLAG_H}
		  SET @PAY_GUBUN =   #{PAY_GUBUN_H}
		  SET @WORK_TEAM =   ''
		  --END PARAM
	
	
		  SET @DateDiff = DateDiff("d", @StartDate, @EndDate) + 1  
		  SET @LoopIndex = 1
		  SET @StartDateLoop = @StartDate
			  
			  SET @strSQL = 'SELECT ' + @StartDate +' AS DUTY_YYYYMMDD' +
									', A.DIV_CODE'+
									', A.DEPT_CODE'+
									', A.DEPT_NAME'+
									', A.POST_CODE'+
									', A.NAME'+
									', CASE WHEN B.PERSON_NUMB IS NULL THEN A.PERSON_NUMB '+
												'ELSE B.PERSON_NUMB '+
										'END PERSON_NUMB'+
									', B.WORK_TEAM'+
									', CASE WHEN B.PERSON_NUMB IS NULL THEN ' + CHAR(39) + 'N' + CHAR(39) + 
												' Else' + CHAR(39) + 'U' + CHAR(39) +  
										' END AS FLAG '+
							'FROM HUM100T A '+
								'LEFT JOIN HAT400T B ON B.COMP_CODE   = A.COMP_CODE '+
								'AND B.PERSON_NUMB = A.PERSON_NUMB '+
								'AND B.DUTY_YYYYMMDD = ' + @StartDate + 
							' WHERE A.COMP_CODE  = '+ CHAR(39) +@CompCode + CHAR(39) +
								' AND A.JOIN_DATE &lt;= '+@StartDate +
								--' AND (A.RETR_DATE =' + CHAR(39) + '00000000' + CHAR(39) + 'OR A.RETR_DATE &gt;= ' + @StartDate +')'
								' AND (ISNULL(A.RETR_DATE, ' + CHAR(39) + '00000000' + CHAR(39) + ') =' + CHAR(39) + '00000000' + CHAR(39) + 'OR A.RETR_DATE &gt;= ' + @StartDate +' OR A.RETR_DATE = ' + CHAR(39)  + CHAR(39) +')'
			  
			  SET @paramSQL = ''
			  IF @DIV_CODE IS NOT NULL AND @DIV_CODE != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.DIV_CODE = ' + CHAR(39) + @DIV_CODE + CHAR(39)
		        END
			  IF @DEPT_CODE IS NOT NULL AND @DEPT_CODE != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.DEPT_CODE = ' + CHAR(39) + @DEPT_CODE + CHAR(39)
		        END
		      IF @PERSON_NUMB IS NOT NULL AND @PERSON_NUMB != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.PERSON_NUMB = ' + CHAR(39) +@PERSON_NUMB + CHAR(39)
		        END
		      IF @PAY_CODE IS NOT NULL AND @PAY_CODE != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.PAY_CODE = ' + CHAR(39) +@PAY_CODE + CHAR(39)
		        END
		      IF @PAY_PROV_FLAG IS NOT NULL AND @PAY_PROV_FLAG != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.PAY_PROV_FLAG = ' + CHAR(39) +@PAY_PROV_FLAG + CHAR(39)
		        END
		      IF @PAY_GUBUN IS NOT NULL AND @PAY_GUBUN != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND A.PAY_GUBUN = ' + CHAR(39) +@PAY_GUBUN + CHAR(39)
		        END
		      IF @WORK_TEAM IS NOT NULL AND @WORK_TEAM != ''
		        BEGIN
					SET @paramSQL = @paramSQL + ' AND B.WORK_TEAM = ' + CHAR(39) +@WORK_TEAM + CHAR(39)
		        END
			
			    SET @strSQL = @strSQL + @paramSQL	    
			    
				PRINT @strSQL
				
				CREATE TABLE #HAT400_Temp
				(
					DUTY_YYYYMMDD NVARCHAR(8),
					DIV_CODE      NVARCHAR(8), 
					DEPT_CODE     NVARCHAR(8),
					DEPT_NAME     NVARCHAR(30),
					POST_CODE     NVARCHAR(2),
					NAME          NVARCHAR(30),
					PERSON_NUMB   NVARCHAR(10),   
					WORK_TEAM     NVARCHAR(1),
					FLAG          NVARCHAR(1)
				)
		
				INSERT INTO #HAT400_Temp
				EXECUTE(@strSQL)
		  
		    IF @DateDiff &gt; 1
		     BEGIN
		     WHILE @LoopIndex &lt; @DateDiff
		      BEGIN
		       SET @StartDateLoop = dateadd(day, 1, @StartDateLoop)
		       
		       SET @strSOL_Loop = 'SELECT ' + convert(NVARCHAR(10), @StartDateLoop, 112) +' AS DUTY_YYYYMMDD' +
									', A.DIV_CODE'+
									', A.DEPT_CODE'+
									', A.DEPT_NAME'+
									', A.POST_CODE'+
									', A.NAME'+
									', CASE WHEN B.PERSON_NUMB IS NULL THEN A.PERSON_NUMB '+
												'ELSE B.PERSON_NUMB '+
										'END PERSON_NUMB'+
									', B.WORK_TEAM'+
									', CASE WHEN B.PERSON_NUMB IS NULL THEN ' + CHAR(39) + 'N' + CHAR(39) + 
												' Else' + CHAR(39) + 'U' + CHAR(39) +  
										' END AS FLAG '+
							'FROM HUM100T A '+
								'LEFT JOIN HAT400T B ON B.COMP_CODE   = A.COMP_CODE '+
								'AND B.PERSON_NUMB = A.PERSON_NUMB '+
								'AND B.DUTY_YYYYMMDD = ' + convert(NVARCHAR(10), @StartDateLoop, 112) +
							' WHERE A.COMP_CODE  = '+ CHAR(39) +@CompCode + CHAR(39) +
								' AND A.JOIN_DATE &lt;= ' + convert(NVARCHAR(10), @StartDateLoop, 112) +
								--' AND (A.RETR_DATE =' + CHAR(39) + '00000000' + CHAR(39) + 'OR A.RETR_DATE &gt;= ' + convert(NVARCHAR(10), @StartDateLoop, 112) +')'
								' AND (ISNULL(A.RETR_DATE, ' + CHAR(39) + '00000000' + CHAR(39) + ') =' + CHAR(39) + '00000000' + CHAR(39) + 'OR A.RETR_DATE &gt;= ' + convert(NVARCHAR(10), @StartDateLoop, 112) +' OR A.RETR_DATE = ' + CHAR(39)  + CHAR(39) +')'
			   SET @strSOL_Loop = @strSOL_Loop + @paramSQL
			   --PRINT @strSOL_Loop
			   
		       INSERT INTO #HAT400_Temp
			   EXECUTE(@strSOL_Loop)
		       
		       SET @LoopIndex = @LoopIndex + 1
		      END
		    END
			BEGIN
            
				DELETE FROM HAT400T
				WHERE PERSON_NUMB in (select PERSON_NUMB from #HAT400_Temp )
					and  COMP_CODE 		= #{S_COMP_CODE}
				  AND DUTY_YYYYMMDD &gt;= #{DVRY_DATE_FR} 
				  AND DUTY_YYYYMMDD &lt;= #{DVRY_DATE_TO}
                  
			END
			BEGIN
				INSERT INTO HAT400T (
					COMP_CODE, 
					DUTY_YYYYMMDD,
					PERSON_NUMB,
					WORK_TEAM,
					UPDATE_DB_USER, 
					UPDATE_DB_TIME, 
					INSERT_DB_USER, 
					INSERT_DB_TIME
				)
				SELECT
				    #{S_COMP_CODE}, 
					DUTY_YYYYMMDD,
					PERSON_NUMB, 
					#{WORK_TEAM}, 
					#{S_USER_ID},
					GETDATE(),
					#{S_USER_ID},
					GETDATE()  
				FROM #HAT400_Temp 
		    END			
		    
		    DROP TABLE #HAT400_Temp
		END
	</update>
	
	<delete id="hat400ukrServiceImpl.delete" parameterType="Map">
		/* hat400ukrServiceImpl.delete */
		DELETE FROM HAT400T 		  
		WHERE PERSON_NUMB = #{PERSON_NUMB} 
			  AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	</delete>
	
	<delete id="hat400ukrServiceImpl.deleteAll" parameterType="Map">
		/* hat400ukrServiceImpl.deleteAll */
		DELETE HAT400T  
		 WHERE PERSON_NUMB IN  (
			SELECT PERSON_NUMB 
			  FROM HUM100T
			 WHERE COMP_CODE =	    #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE_H)">
			   AND DIV_CODE = 		#{DIV_CODE_H}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_H)">
			   AND DEPT_CODE = 		#{DEPT_CODE_H}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(PAY_CODE_H)">
			   AND PAY_CODE = 		#{PAY_CODE_H}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG_H)">
			   AND PAY_PROV_FLAG =  #{PAY_PROV_FLAG_H}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN_H)">
			   AND PAY_GUBUN = 		#{PAY_GUBUN_H}	  
			 </if>
			)
		  AND COMP_CODE = #{S_COMP_CODE}	
		 <if test="@foren.Ognl@isNotEmpty(WORK_TEAM_H)">
		  AND WORK_TEAM = #{WORK_TEAM_H}
		 </if>		  
	     AND DUTY_YYYYMMDD &gt;=  #{DVRY_DATE_FR_H}	
	     AND DUTY_YYYYMMDD &lt;=  #{DVRY_DATE_TO_H}	
	</delete>
		
</mapper>