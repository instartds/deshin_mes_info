<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat520skrServiceImpl">

	<select id="hat520skrServiceImpl.selectDutycode" parameterType="String" resultType="rMap">
		SELECT SUB_CODE
			 , CODE_NAME
	      FROM BSA100T
	     WHERE COMP_CODE = #{S_COMP_CODE}
	       AND SUB_CODE &lt;&gt; '$'
	       AND MAIN_CODE = 'H033'
	       AND USE_YN = 'Y'
      ORDER BY CONVERT(INT, REF_CODE2)
	</select>


	<select id="hat520skrServiceImpl.selectDataList" parameterType="rMap" resultType="rMap">
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAT520SKR_160318'))
	        DROP TABLE #HAT520SKR_160318
	    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAT520SKR_160318_2'))
	        DROP TABLE #HAT520SKR_160318_2

			CREATE TABLE #HAT520SKR_160318 (
				 GUBUN            	NVARCHAR(01)
			   , DUTY_YYYYMMDD		NVARCHAR(16)
               , DIV_CODE           NVARCHAR(16)
               , DEPT_CODE			NVARCHAR(16)
               , DEPT_NAME          NVARCHAR(50)
               , POST_CODE        	NVARCHAR(4)
               , NAME        		NVARCHAR(60)
               , PERSON_NUMB        NVARCHAR(20)
               , DUTY_CODE          NVARCHAR(4)
               , DUTY_FR_D          NVARCHAR(16)
               , DUTY_FR_H          NVARCHAR(5)
               , DUTY_FR_M          NVARCHAR(5)
               , DUTY_TO_D          NVARCHAR(16)
               , DUTY_TO_H          NVARCHAR(5)
               , DUTY_TO_M          NVARCHAR(5)
            <foreach collection="DUTY_CODE" item="item" index="index" >
		       , DUTY_NUM${index}	NUMERIC(10, 2)
		       , DUTY_TIME${index}  NUMERIC(10, 2)
			</foreach>
               , COMP_CODE			NVARCHAR(16)
            )
		INSERT INTO #HAT520SKR_160318
			(    GUBUN
			   , DUTY_YYYYMMDD
			   , DIV_CODE
			   , DEPT_CODE
			   , DEPT_NAME
			   , POST_CODE
			   , NAME
			   , PERSON_NUMB
			   , DUTY_CODE
			   , DUTY_FR_D
			   , DUTY_FR_H
			   , DUTY_FR_M
			   , DUTY_TO_D
			   , DUTY_TO_H
			   , DUTY_TO_M
			   , COMP_CODE
			<foreach collection="DUTY_CODE" item="item" index="index" >
		       , DUTY_NUM${index}
		       , DUTY_TIME${index}
			</foreach> 	)
		/* hat520skrServiceImpl.selectDataList */
    	SELECT
    		   GUBUN = '1'
    		 , DUTY_YYYYMMDD = uniLITE.fnGetUserDateComp(B.COMP_CODE, B.DUTY_YYYYMMDD)
             , A.DIV_CODE
             , DEPT_CODE
             , MAX(A.DEPT_NAME) DEPT_NAME
             , A.POST_CODE
             , A.NAME
             , B.PERSON_NUMB
             , DUTY_CODE = MAX(B.DUTY_CODE)
             , DUTY_FR_D = uniLITE.fnGetUserDateComp(B.COMP_CODE, MAX(B.DUTY_FR_D))
             , DUTY_FR_H = MAX(B.DUTY_FR_H)
             , DUTY_FR_M = MAX(B.DUTY_FR_M)
             , DUTY_TO_D = uniLITE.fnGetUserDateComp(B.COMP_CODE, MAX(B.DUTY_TO_D))
             , DUTY_TO_H = MAX(B.DUTY_TO_H)
             , DUTY_TO_M = MAX(B.DUTY_TO_M)
             , B.COMP_CODE
			<foreach collection="DUTY_CODE" item="item" index="index">
             ,DUTY_NUM${index} =
             						 (
                                     SELECT SUM(C.DUTY_NUM)
                                        FROM HAT600T AS C
                                     WHERE C.COMP_CODE     = #{S_COMP_CODE}
                                        AND C.PERSON_NUMB   = B.PERSON_NUMB
                                        AND 	C.DUTY_YYYYMMDD = B.DUTY_YYYYMMDD
                                        AND C.DUTY_CODE = CONVERT( NVARCHAR(8), '${item.SUB_CODE}')

                                      )
             ,DUTY_TIME${index} =
									(

            <if test="halfhourunit == &quot;N&quot;">
                                          SELECT  SUM(ROUND((((C.DUTY_TIME *60) + C.DUTY_MINU))/60, 1, 1))
            </if>
            <if test="halfhourunit == &quot;Y&quot;">
                                          SELECT CASE WHEN CONVERT(FLOAT,CEILING(SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 )))=SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 )
                                                           THEN SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 )
                                                           ELSE CASE WHEN CONVERT(FLOAT,ROUND(SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 ),0))>CONVERT(FLOAT,FLOOR(SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 )))+0.5
                                                                          THEN CONVERT(FLOAT,FLOOR(SUM((((C.DUTY_TIME *60)) + C.DUTY_MINU))/60 ))+0.5
                                                                          ELSE CONVERT(FLOAT,FLOOR(SUM((((C.DUTY_TIME *60) + C.DUTY_MINU))/60 )))
                                                                 END
                                                  END
            </if>
                                            FROM HAT600T AS C
                                           WHERE C.COMP_CODE     = #{S_COMP_CODE}
                                             AND C.PERSON_NUMB   = B.PERSON_NUMB
                                             AND C.DUTY_YYYYMMDD = B.DUTY_YYYYMMDD
                                             AND C.DUTY_CODE = CONVERT( NVARCHAR(8), '${item.SUB_CODE}')
                                      )
		  </foreach>

          FROM HUM100T AS A
          JOIN (SELECT COMP_CODE
                          , PERSON_NUMB
                          , DUTY_YYYYMMDD
                          , DUTY_CODE = DUTY_CODE
                          , DUTY_FR_D = DUTY_FR_D
                          , DUTY_FR_H = DUTY_FR_H
                          , DUTY_FR_M = DUTY_FR_M
                          , DUTY_TO_D = DUTY_TO_D
                          , DUTY_TO_H = DUTY_TO_H
                          , DUTY_TO_M = DUTY_TO_M
                          , TDUTY_CODE = NULL
                          , TDUTY_NUM = NULL
                          , TDUTY_TIME = NULL
                       FROM HAT500T
                      WHERE COMP_CODE = #{S_COMP_CODE}
                        AND DUTY_YYYYMMDD &gt;= #{ORDER_DATE_FR}
           				AND DUTY_YYYYMMDD &lt;= #{ORDER_DATE_TO}
                      UNION ALL
                     SELECT COMP_CODE
                          , PERSON_NUMB
                          , DUTY_YYYYMMDD
                          , DUTY_CODE = NULL
                          , DUTY_FR_D = NULL
                          , DUTY_FR_H = NULL
                          , DUTY_FR_M = NULL
                          , DUTY_TO_D = NULL
                          , DUTY_TO_H = NULL
                          , DUTY_TO_M = NULL
                          , TDUTY_CODE = DUTY_CODE
                          , TDUTY_NUM = DUTY_NUM
                          , TDUTY_TIME = DUTY_TIME
                       FROM HAT600T
                      WHERE COMP_CODE = #{S_COMP_CODE}
                        AND DUTY_YYYYMMDD &gt;= #{ORDER_DATE_FR}
           				AND DUTY_YYYYMMDD &lt;= #{ORDER_DATE_TO}
         		) AS B
                              ON A.COMP_CODE   = B.COMP_CODE
                             AND A.PERSON_NUMB = B.PERSON_NUMB
         WHERE B.DUTY_YYYYMMDD &gt;= #{ORDER_DATE_FR}
           AND B.DUTY_YYYYMMDD &lt;= #{ORDER_DATE_TO}
           AND A.COMP_CODE = #{S_COMP_CODE}
           AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
           <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
           AND A.PAY_CODE  =  #{PAY_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND A.DIV_CODE = #{DIV_CODE}
           </if>

		   <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	       AND A.DEPT_CODE IN
		   	<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>
	 	   </if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    AND B.PERSON_NUMB = #{PERSON_NUMB} </if>
		<if test="@foren.Ognl@isNotEmpty(SDUTY_CODE)">
			AND B.DUTY_CODE = #{SDUTY_CODE}
		</if>
        GROUP BY B.COMP_CODE, DUTY_YYYYMMDD,A.DIV_CODE,A.DEPT_CODE,A.POST_CODE,A.NAME, B.PERSON_NUMB
        ORDER BY B.COMP_CODE, B.DUTY_YYYYMMDD,A.DIV_CODE,A.DEPT_CODE,A.POST_CODE,A.NAME,B.PERSON_NUMB

        <if test="CHKCNT != &quot;on&quot;">
        	INSERT INTO #HAT520SKR_160318			-- TOTAL 총계
	        	(
	        	  GUBUN
	        	, DUTY_YYYYMMDD
	        	, DIV_CODE
	        	, DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , DUTY_NUM${index}
	            , DUTY_TIME${index}
			</foreach>
				, COMP_CODE
				)
			 SELECT
			  	  '5'
			  	, MAX(DUTY_YYYYMMDD)		AS	DUTY_YYYYMMDD
	        	, MAX(DIV_CODE)				AS  DIV_CODE
	        	, MAX(DEPT_CODE)			AS  DEPT_CODE
	         <foreach collection="DUTY_CODE" item="item" index="index" >
	            , SUM(DUTY_NUM${index})		AS	DUTY_NUM${index}
	            , SUM(DUTY_TIME${index})    AS	DUTY_TIME${index}
			 </foreach>
			 	, COMP_CODE					AS COMP_CODE
	         FROM #HAT520SKR_160318
	         GROUP BY COMP_CODE

        	SELECT
	       		 A.GUBUN
			   , (CASE WHEN A.GUBUN = '5' THEN '총계'
			   							  ELSE DUTY_YYYYMMDD
			   	  END
			   	 )		AS		DUTY_YYYYMMDD
			   , (CASE WHEN A.GUBUN = '5' THEN ''
			   							  ELSE B.DIV_NAME
			   	  END
			   	 )		AS		DIV_NAME
			   , (CASE WHEN A.GUBUN = '5' THEN ''
			   							  ELSE A.DEPT_CODE
			   	  END
			   	 )		AS		DEPT_CODE
			   , A.DEPT_NAME
			   , A.POST_CODE
			   , A.NAME
			   , A.PERSON_NUMB
			   , A.DUTY_CODE
			   , A.DUTY_FR_D
			   , A.DUTY_FR_H
			   , A.DUTY_FR_M
			   , A.DUTY_TO_D
			   , A.DUTY_TO_H
			   , A.DUTY_TO_M
			<foreach collection="DUTY_CODE" item="item" index="index" >
	           , A.DUTY_NUM${index}
	           , A.DUTY_TIME${index}
			</foreach>
			   , A.COMP_CODE
		   FROM 	#HAT520SKR_160318	A
		   INNER JOIN BOR120T B ON A.COMP_CODE = B.COMP_CODE
			 				     AND A.DIV_CODE  = B.DIV_CODE
	 	   ORDER BY A.COMP_CODE, A.DUTY_YYYYMMDD, A.DIV_CODE, A.DEPT_CODE, A.GUBUN, A.POST_CODE, A.NAME, A.PERSON_NUMB
        </if>

        <if test="CHKCNT == &quot;on&quot;">	--합계 표기 Y 일시
	        INSERT INTO #HAT520SKR_160318
	        	(
	        	  GUBUN
	        	, DUTY_YYYYMMDD
	        	, DIV_CODE
	        	, DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , DUTY_NUM${index}
	            , DUTY_TIME${index}
			</foreach>
				, COMP_CODE
				)
			 SELECT
			  	  '2'
	        	, DUTY_YYYYMMDD				AS	DUTY_YYYYMMDD
	        	, DIV_CODE					AS  DIV_CODE
	        	, DEPT_CODE					AS  DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , SUM(DUTY_NUM${index})		AS	DUTY_NUM${index}
	            , SUM(DUTY_TIME${index})    AS	DUTY_TIME${index}
			</foreach>
				, COMP_CODE					AS COMP_CODE
	         FROM #HAT520SKR_160318
	         GROUP BY COMP_CODE, DUTY_YYYYMMDD, DIV_CODE, DEPT_CODE

	        INSERT INTO #HAT520SKR_160318
	        	(
	        	  GUBUN
	        	, DUTY_YYYYMMDD
	        	, DIV_CODE
	        	, DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , DUTY_NUM${index}
	            , DUTY_TIME${index}
			</foreach>
				, COMP_CODE
				)
			 SELECT
			  	  '3'
	        	, DUTY_YYYYMMDD				AS	DUTY_YYYYMMDD
	        	, DIV_CODE					AS  DIV_CODE
	        	, MAX(DEPT_CODE)			AS  DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , SUM(DUTY_NUM${index})		AS	DUTY_NUM${index}
	            , SUM(DUTY_TIME${index})    AS	DUTY_TIME${index}
			</foreach>
				, COMP_CODE					AS COMP_CODE
	         FROM #HAT520SKR_160318
	         WHERE GUBUN != '2'
	         GROUP BY COMP_CODE, DUTY_YYYYMMDD, DIV_CODE


	        INSERT INTO #HAT520SKR_160318
	        	(
	        	  GUBUN
	        	, DUTY_YYYYMMDD
	        	, DIV_CODE
	        	, DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , DUTY_NUM${index}
	            , DUTY_TIME${index}
			</foreach>
				, COMP_CODE
				)
			 SELECT
			  	  '4'
	        	, DUTY_YYYYMMDD				AS	DUTY_YYYYMMDD
	        	, MAX(DIV_CODE)				AS  DIV_CODE
	        	, MAX(DEPT_CODE)			AS  DEPT_CODE
	         <foreach collection="DUTY_CODE" item="item" index="index" >
	            , SUM(DUTY_NUM${index})		AS	DUTY_NUM${index}
	            , SUM(DUTY_TIME${index})    AS	DUTY_TIME${index}
			 </foreach>
			 	, COMP_CODE					AS COMP_CODE
	         FROM #HAT520SKR_160318
	         WHERE GUBUN != '2' AND GUBUN != '3'
	         GROUP BY COMP_CODE, DUTY_YYYYMMDD


	        INSERT INTO #HAT520SKR_160318			-- TOTAL 총계
	        	(
	        	  GUBUN
	        	, DUTY_YYYYMMDD
	        	, DIV_CODE
	        	, DEPT_CODE
	        <foreach collection="DUTY_CODE" item="item" index="index" >
	            , DUTY_NUM${index}
	            , DUTY_TIME${index}
			</foreach>
				, COMP_CODE
				)
			 SELECT
			  	  '5'
			  	, MAX(DUTY_YYYYMMDD)		AS	DUTY_YYYYMMDD
	        	, MAX(DIV_CODE)				AS  DIV_CODE
	        	, MAX(DEPT_CODE)			AS  DEPT_CODE
	         <foreach collection="DUTY_CODE" item="item" index="index" >
	            , SUM(DUTY_NUM${index})		AS	DUTY_NUM${index}
	            , SUM(DUTY_TIME${index})    AS	DUTY_TIME${index}
			 </foreach>
			 	, COMP_CODE					AS COMP_CODE
	         FROM #HAT520SKR_160318
	         WHERE GUBUN != '2' AND GUBUN != '3' AND GUBUN != '4'
	         GROUP BY COMP_CODE

	       SELECT
	       		 GUBUN
			   , DUTY_YYYYMMDD
			   , DIV_CODE
			   , DEPT_CODE
			   , DEPT_NAME
			   , POST_CODE
			   , NAME
			   , PERSON_NUMB
			   , DUTY_CODE
			   , DUTY_FR_D
			   , DUTY_FR_H
			   , DUTY_FR_M
			   , DUTY_TO_D
			   , DUTY_TO_H
			   , DUTY_TO_M
			<foreach collection="DUTY_CODE" item="item" index="index" >
	           , DUTY_NUM${index}
	           , DUTY_TIME${index}
			</foreach>
			   , COMP_CODE
			   , ROW_NUMBER() OVER( ORDER BY COMP_CODE, DUTY_YYYYMMDD, DIV_CODE, DEPT_CODE, GUBUN, POST_CODE, NAME, PERSON_NUMB ) AS S_SEQ
		   INTO 	#HAT520SKR_160318_2
		   FROM 	#HAT520SKR_160318
	 	   ORDER BY COMP_CODE, DUTY_YYYYMMDD, DIV_CODE, DEPT_CODE, GUBUN, POST_CODE, NAME, PERSON_NUMB

			--ALTER TABLE #HAT520SKR_160318_2 ADD SEQ INT IDENTITY(1,1)

			SELECT
				 A.GUBUN
			   , (CASE WHEN A.GUBUN = '4' THEN '합계'
			   		   WHEN A.GUBUN = '5' THEN '총계'
			   							ELSE DUTY_YYYYMMDD
			   	  END
			   	 )		AS		DUTY_YYYYMMDD
			   , (CASE WHEN A.GUBUN = '3' THEN '합계'
			   		   WHEN A.GUBUN = '4' THEN ''
			   		   WHEN A.GUBUN = '5' THEN ''
			   							ELSE A.DIV_CODE
			   	  END
			   	 )		AS		DIV_CODE
			   , (CASE WHEN A.GUBUN = '3' THEN '합계'
			   		   WHEN A.GUBUN = '4' THEN ''
			   		   WHEN A.GUBUN = '5' THEN ''
			   							ELSE B.DIV_NAME
			   	  END
			   	 )		AS		DIV_NAME
			   , (CASE WHEN A.GUBUN = '3' THEN ''
			   		   WHEN A.GUBUN = '4' THEN ''
			   		   WHEN A.GUBUN = '5' THEN ''
			   	  						ELSE DEPT_CODE
				  END
			   	 )		AS	 DEPT_CODE
			   , (CASE WHEN A.GUBUN = '2' THEN '합계'
			   		   WHEN A.GUBUN = '3' THEN ''
			   		   WHEN A.GUBUN = '4' THEN ''
			   		   WHEN A.GUBUN = '5' THEN ''
			   	  						ELSE DEPT_NAME
				  END
			   	 )		AS	 DEPT_NAME
			   , A.POST_CODE
			   , A.NAME
			   , A.PERSON_NUMB
			   , A.DUTY_CODE
			   , A.DUTY_FR_D
			   , A.DUTY_FR_H
			   , A.DUTY_FR_M
			   , A.DUTY_TO_D
			   , A.DUTY_TO_H
			   , A.DUTY_TO_M
			<foreach collection="DUTY_CODE" item="item" index="index" >
		       , DUTY_NUM${index}
		       , DUTY_TIME${index}
			</foreach>
			 FROM 	#HAT520SKR_160318_2	A
			 INNER JOIN BOR120T B ON A.COMP_CODE = B.COMP_CODE
			 				     AND A.DIV_CODE  = B.DIV_CODE
		 	 ORDER BY A.S_SEQ
        </if>
	</select>


</mapper>