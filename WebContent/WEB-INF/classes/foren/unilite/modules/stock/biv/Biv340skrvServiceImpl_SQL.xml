<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv340skrvServiceImpl">

	<select id="biv340skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* UBRpt02Krv.CBiv340Kr[fnBiv340QStd] Query03 */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON

		DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		      , @UserId			NVARCHAR(100)	/* 사용자ID		*/
		      , @LangType		NVARCHAR(2)		/* 언어구분		*/
	          , @RefItem		NVARCHAR(01)
	          , @DateFormat		NVARCHAR(10)

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = N'KR'

		/* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
		FROM BSA300T WITH (NOLOCK)
		WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE = @CompCode
			AND MAIN_CODE = N'B044'
			AND REF_CODE1 = N'Y'

	    SET @DateFormat  = ISNULL(@DateFormat,  'YYYY.MM.DD')

		/* 데이터 조회 */
		SELECT	CASE WHEN @LangType = 'KR' THEN M1.CODE_NAME
					 WHEN @LangType = 'EN' THEN M1.CODE_NAME_EN
					 WHEN @LangType = 'CN' THEN M1.CODE_NAME_CN
					 WHEN @LangType = 'JP' THEN M1.CODE_NAME_JP
										   ELSE M1.CODE_NAME
				END																		AS ITEM_ACCOUNT
	          , C2.ITEM_ACCOUNT															AS ACCOUNT1
	          , A.DIV_CODE																AS DIV_CODE
	          , C3.TREE_NAME															AS WH_CODE
	          , A.ITEM_CODE																AS ITEM_CODE
	          , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                 ELSE C1.ITEM_NAME
	            END																		AS ITEM_NAME
	          , ISNULL(C1.SPEC, ' ')													AS SPEC
	          , ISNULL(C1.STOCK_UNIT, ' ')												AS STOCK_UNIT
	          -- , A.INOUT_TYPE															AS INOUT_TYPE
			  -- ,	CASE WHEN @LangType = 'KR' THEN M2.CODE_NAME
			  --		 WHEN @LangType = 'EN' THEN M2.CODE_NAME_EN
			  --		 WHEN @LangType = 'CN' THEN M2.CODE_NAME_CN
			  --		 WHEN @LangType = 'JP' THEN M2.CODE_NAME_JP
			  --							   ELSE M2.CODE_NAME
			  --	END																		  AS INOUT_TYPE
			   , CASE WHEN ISNULL(A1.INOUT_DATE, '') = '' THEN ''
	                  ELSE REPLACE(
	                       REPLACE(
	                       REPLACE(@DateFormat, 'YYYY', SUBSTRING(A1.INOUT_DATE, 1, 4))
	                                          , 'MM',   SUBSTRING(A1.INOUT_DATE, 5, 2))
	                                          , 'DD',   SUBSTRING(A1.INOUT_DATE, 7, 2))
	             END																		AS FINAL_RECEIPT_DATE --최종입고일
			   , CASE WHEN ISNULL(A2.INOUT_DATE, '') = '' THEN ''
	                  ELSE REPLACE(
	                       REPLACE(
	                       REPLACE(@DateFormat, 'YYYY', SUBSTRING(A2.INOUT_DATE, 1, 4))
	                                          , 'MM',   SUBSTRING(A2.INOUT_DATE, 5, 2))
	                                          , 'DD',   SUBSTRING(A2.INOUT_DATE, 7, 2))
	             END																		AS FINAL_ISSUE_DATE --최종출고일
			  , DATEDIFF(DD,CAST(A.INOUT_DATE AS DATETIME), CAST(#{BASE_DATE}   AS DATETIME)) AS STAGNATION_DAY	     --기준일과 최종수불일 차이 (정체일)
	          , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
	                 ELSE REPLACE(
	                      REPLACE(
	                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                         , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
	                                         , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
	            END																		AS FINAL_INOUT_DATE
			  , CASE WHEN ISNULL(M3.SUB_CODE, '') = '1'
							AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')    /* 기준단가 적용 제품/반제품 금액 */
						  THEN	ISNULL(C2.BASIS_P,  0)
				     ELSE		ISNULL(C.AVERAGE_P, 0)
			    END                                                                     AS AVERAGE_P
			  , ISNULL(C.STOCK_Q, 0)													AS STOCK_Q
			  , CASE WHEN ISNULL(M3.SUB_CODE, '') = '1'
							AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
						  THEN	ISNULL(C2.BASIS_P,  0) * ISNULL(C.STOCK_Q, 0)
				     ELSE		ISNULL(C.AVERAGE_P, 0) * ISNULL(C.STOCK_Q, 0)
			    END                                                                     AS STOCK_O
		FROM (
				SELECT COMP_CODE
					 , DIV_CODE
					 , WH_CODE
					 , ITEM_CODE
					 , MIN(INOUT_TYPE) AS INOUT_TYPE
					 , MAX(INOUT_DATE) AS INOUT_DATE
					 , MAX(COMP_CODE + ITEM_CODE + DIV_CODE + WH_CODE) AS SORT
				FROM BTR100T WITH (NOLOCK)
				WHERE	COMP_CODE	= @CompCode
					AND INOUT_DATE	<![CDATA[<]]> #{BASE_DATE}
					AND DIV_CODE	= #{DIV_CODE}
				GROUP BY COMP_CODE, ITEM_CODE, DIV_CODE, WH_CODE ) A --수불데이터
			LEFT    JOIN
			(SELECT COMP_CODE
					 , DIV_CODE
					 , WH_CODE
					 , ITEM_CODE
				--	 , MIN(INOUT_TYPE) AS INOUT_TYPE
					 , MAX(INOUT_DATE) AS INOUT_DATE
					 , MAX(COMP_CODE + ITEM_CODE + DIV_CODE + WH_CODE) AS SORT
				FROM BTR100T WITH (NOLOCK)
				WHERE	COMP_CODE	= @CompCode
					AND INOUT_DATE	<![CDATA[<]]> #{BASE_DATE}
					AND DIV_CODE	= #{DIV_CODE}
					AND INOUT_TYPE   = '1'
				GROUP BY COMP_CODE, ITEM_CODE, DIV_CODE, WH_CODE ) A1 ON A1.SORT = A.SORT  --최종입고내역
			LEFT    JOIN (
	           SELECT COMP_CODE
					 , DIV_CODE
					 , WH_CODE
					 , ITEM_CODE
				--	 , MIN(INOUT_TYPE) AS INOUT_TYPE
					 , MAX(INOUT_DATE) AS INOUT_DATE
					 , MAX(COMP_CODE + ITEM_CODE + DIV_CODE + WH_CODE) AS SORT
				FROM BTR100T WITH (NOLOCK)
				WHERE	COMP_CODE	= @CompCode
					AND INOUT_DATE	<![CDATA[<]]> #{BASE_DATE}
					AND DIV_CODE	= #{DIV_CODE}
					AND INOUT_TYPE  = '2'
				GROUP BY COMP_CODE, ITEM_CODE, DIV_CODE, WH_CODE) A2 ON A2.SORT = A.SORT    --최종출고내역
			LEFT    JOIN (
	            SELECT DISTINCT (COMP_CODE + ITEM_CODE + DIV_CODE + WH_CODE) AS SORT
	            FROM BTR100T WITH (NOLOCK)
	            WHERE	COMP_CODE	= @CompCode
					AND INOUT_DATE >= #{BASE_DATE}
					AND DIV_CODE    = #{DIV_CODE} ) B	ON  B.SORT = A.SORT
			LEFT   JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE	= A.COMP_CODE
	                                            AND C1.ITEM_CODE	= A.ITEM_CODE
			LEFT   JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE	= A.COMP_CODE
												AND C2.DIV_CODE		= A.DIV_CODE
												AND C2.ITEM_CODE	= A.ITEM_CODE
	        INNER  JOIN BIV100T C  WITH (NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
	                                            AND C.DIV_CODE		= A.DIV_CODE
	                                            AND C.WH_CODE		= A.WH_CODE
	                                            AND C.ITEM_CODE		= A.ITEM_CODE
	        LEFT   JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE	= C2.COMP_CODE
	                                            AND M1.MAIN_CODE	= N'B020'
	                                            AND M1.SUB_CODE		= C2.ITEM_ACCOUNT
	        LEFT   JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE	= A.COMP_CODE
	                                            AND C3.TREE_CODE	= A.WH_CODE
	        LEFT   JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
	                                            AND M2.MAIN_CODE	= N'B035'			/* 수불타입 */
												AND M2.SUB_CODE		= A.INOUT_TYPE
			LEFT  JOIN BSA100T  M3 WITH (NOLOCK) ON M3.COMP_CODE	= A.COMP_CODE
												AND M3.MAIN_CODE	= 'B069'			/* 재고단가적용방법(제품/반제품) */
												AND M3.SUB_CODE		= '1'               /* 기준재고단가		*/
												AND M3.REF_CODE1	= 'Y'

	    WHERE	A.COMP_CODE    = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE     = #{DIV_CODE}
		</if>
			AND C.STOCK_Q      &gt; 0
			AND B.SORT IS NULL

			/* 선택조건 Start */
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND C2.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND A.WH_CODE       = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			AND C1.ITEM_LEVEL1  = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			AND C1.ITEM_LEVEL2  = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			AND C1.ITEM_LEVEL3  = #{ITEM_LEVEL3}
		</if>
			/* 선택조건 End */

		ORDER BY C2.ITEM_ACCOUNT, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE

		SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
</mapper>