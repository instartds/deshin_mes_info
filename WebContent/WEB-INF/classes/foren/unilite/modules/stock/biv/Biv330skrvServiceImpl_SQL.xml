<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv330skrvServiceImpl">

	<select id="biv330skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>

	<select id="biv330skrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
	/*biv330skrv.Cbiv330skrv[fnBiv330QStd] Query01*/
	/*기간별 수불현황 조회(OLD)*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/

	                  , @FR_INOUT_DATE      NVARCHAR(08)                /* (필수) 시작 수불일*/
	                  , @TO_INOUT_DATE      NVARCHAR(08)                /* (필수) 종료 수불일*/

	                  , @ITEM_CODE          NVARCHAR(20)                /* (선택) 품목코드*/
	                  , @ITEM_NAME          NVARCHAR(200)               /* (선택) 품목명*/

	                  , @ITEM_ACCOUNT       NVARCHAR(02)                /* (선택) 품목 계정코드*/

	                  , @WH_CODE            NVARCHAR(08)                /* (선택) 창고코드*/

	                  , @ITEM_LEVEL1        NVARCHAR(10)                /* 대분류*/
	                  , @ITEM_LEVEL2        NVARCHAR(10)                /* 중분류*/
	                  , @ITEM_LEVEL3        NVARCHAR(10)                /* 소분류*/

	                  , @EVAL_FLAG          NVARCHAR(01)                /* 실사조정 포함 여부(Y/N)*/

	                  , @INOUT_METH         NVARCHAR(02)                /* 수불방법*/
	                  , @CREATE_LOC         NVARCHAR(02)                /* 생성경로*/
	                  , @INOUT_CODE_TYPE    NVARCHAR(02)                /* 수불처 유형*/
	                  , @ITEM_STATUS        NVARCHAR(01)                /* 품목상태*/

	                  , @INOUT_NUM          NVARCHAR(20)                /* 수불번호*/
	                  , @LOT_NO             NVARCHAR(20)                /* Lot No.*/

	                  , @INOUT_FLAG         NVARCHAR(01)                /* 수불 발생 유형(1: 발생, 2: 미발생, 3: 전체)*/

	                  , @QRY_TYPE           NVARCHAR(02)                /* 조회유형 (1: 품목별,  2: 창고별)*/

	                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/

	    SET NOCOUNT ON
	    SET ARITHABORT ON

	/*  1. 변수 값 할당 */
	    SET @COMP_CODE       = #{S_COMP_CODE}
	    SET @DIV_CODE        = #{DIV_CODE}

	    SET @FR_INOUT_DATE   = CASE WHEN #{FR_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(08), GETDATE(), 112) ELSE #{FR_INOUT_DATE} END
	    SET @TO_INOUT_DATE   = CASE WHEN #{TO_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(08), GETDATE(), 112) ELSE #{TO_INOUT_DATE} END

	    SET @ITEM_CODE       = #{ITEM_CODE} 
	    SET @ITEM_NAME       = #{ITEM_NAME} 

	    SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

	    SET @WH_CODE         = #{WH_CODE}

	    SET @ITEM_LEVEL1     = N''
	    SET @ITEM_LEVEL2     = N''
	    SET @ITEM_LEVEL3     = N''

	    SET @EVAL_FLAG       = #{EVAL_FLAG}

	    SET @INOUT_METH      = N''
	    SET @CREATE_LOC      = N''
	    SET @INOUT_CODE_TYPE = N''
	    SET @ITEM_STATUS     = N''

	    SET @INOUT_NUM       = N''
	    SET @LOT_NO          = #{LOT_NO}

	    SET @INOUT_FLAG      = N'1'    /* 수불발생 정보만 조회*/

	    SET @QRY_TYPE        = CASE WHEN SUBSTRING('1', 1, 1) = '' THEN '1' ELSE SUBSTRING('1', 1, 1) END

	    SET @USER_ID         = #{S_USER_ID}

	    /* 로컬 변수 선언*/
	    DECLARE     @TypeKey                NVARCHAR(20)

	    SET @TypeKey      = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

	    IF @DIV_CODE = 'ZZ' OR @DIV_CODE = ''
	    BEGIN
	        SELECT TOP 0
	               CONVERT(NVARCHAR(100), '')                                                   AS ITEM_ACCOUNT
	             , CONVERT(NVARCHAR(20), '')                                                    AS ACCOUNT1
	             , A.ITEM_CODE                                                                  AS ITEM_CODE
	             , CONVERT(NVARCHAR(40), '')                                                    AS ITEM_NAME
	             , A.SPEC                                                                       AS SPEC
	             , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	             , CONVERT(NVARCHAR(10), '')                                                    AS INOUT_DATE
	             , A.BASIS_Q                                                                    AS STOCK_Q
	             , A.IN_Q                                                                       AS IN_Q
	             , A.OUT_Q                                                                      AS OUT_Q
	             , A.RTN_Q                                                                      AS RET_Q
	             , A.STOCK_Q                                                                    AS END_STOCK_Q
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_CODE_TYPE
	             , CONVERT(NVARCHAR(30), '')                                                    AS INOUT_CODE_NAME
	             , CONVERT(NVARCHAR(30), '')                                                    AS DIV_CODE_NAME
	             , CONVERT(NVARCHAR(30), '')                                                    AS WH_CODE_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_TYPE_DETAIL_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_PRSN_NAME
	             , A.INOUT_NUM                                                                  AS INOUT_NUM
	             , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	             , CONVERT(NVARCHAR(100), '')                                                   AS CREATE_LOC_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_MATH_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS ITEM_STATUS
	             , A.BASIS_I                                                                    AS STOCK_I
	             , A.IN_I                                                                       AS IN_I
	             , A.OUT_I                                                                      AS OUT_I
	             , A.RTN_I                                                                      AS RET_I
	             , A.STOCK_I                                                                    AS END_STOCK_I
	             , A.LOT_NO                                                                     AS LOT_NO
	        FROM   T_BIV360SKRV1 A  WITH (NOLOCK)
	        WHERE  A.TYPE_KEY = ''

	        RETURN
	    END

	/*  2. 명칭 조회 유형 설정 */
	    DECLARE             @RefItem            NVARCHAR(01)

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID = @USER_ID

	    SET @RefItem = ISNULL(@RefItem, '')

	/*  3. 날짜 유형 설정 */
	    DECLARE       @DateFormat       NVARCHAR(10)

	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = 'B044'
	    AND    M1.REF_CODE1 = 'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

	/*  4. 재고단가 계산 방법 설정 */
	    DECLARE             @StockP             NVARCHAR(01)

	    SELECT TOP 1 @StockP = SUB_CODE
	    FROM   BSA100T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE                                               /* 단가처리 기준*/
	    AND    MAIN_CODE = 'B069'
	    AND    SUB_CODE  = '1'                                                      /* 기준재고단가*/
	    AND    REF_CODE1 = 'Y'

	    SET @StockP = ISNULL(@StockP, '')

	/*  5. 가장 최근 마감월 조회 */
	    DECLARE             @QryYYYYMM          NVARCHAR(06)                        /* 조회월*/
	                      , @LastYYYYMM         NVARCHAR(06)                        /* 기초 조회월*/
	                      , @ErrorDesc          NVARCHAR(1000)

	    SET @QryYYYYMM  = CONVERT(NVARCHAR(06), @FR_INOUT_DATE, 112)
	    SET @LastYYYYMM = CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, @FR_INOUT_DATE), 112)

	    EXEC uniLITE.SP_STOCK_AdjustMonthlyColsing @COMP_CODE, @DIV_CODE, @QryYYYYMM, @WH_CODE, @ITEM_CODE, @USER_ID, @ErrorDesc OUTPUT

	    IF ISNULL(@ErrorDesc, '') != ''
	    BEGIN
	        RETURN
	    END

	    /* 1) 하루전 임시 데이터 삭제*/
	    IF NOT EXISTS   (
	                    SELECT TOP 1 1
	                    FROM   T_BIV360SKRV1 WITH (NOLOCK)
	                    WHERE  TYPE_KEY LIKE CONVERT(NVARCHAR(08), GETDATE(), 112) + '%'
	                    )
	        TRUNCATE TABLE T_BIV360SKRV1

	/*  6. 조회 데이터 생성 */
	/*  6-1. 수불 발생 내역 조회*/
	    INSERT INTO T_BIV360SKRV1
	         ( TYPE_KEY
	         , TYPE_FLAG               , COMP_CODE               , DIV_CODE
	         , ITEM_ACCOUNT            , ITEM_CODE               , SPEC                    , STOCK_UNIT
	         , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
	         , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
	         , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
	         , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
	         , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
	         , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
	         , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
	         , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE            , SORT_FLD
	         , UPDATE_DB_TIME
             --20181031 추가
             , INSERT_DB_USER          , INSERT_DB_TIME
             --20181217 추가
             , MAKE_DATE               , MAKE_LOT_NO             , ORDER_NUM)
	    SELECT
	           @TypeKey                                                                                      AS TYPE_KEY
	         , '10'                                                                                          AS TYPE_FLAG
	         , A.COMP_CODE, A.DIV_CODE
	         , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
	         , A.ITEM_CODE
	         , ISNULL(C1.SPEC, '')                                                                           AS SPEC
	         , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
	         , A.INOUT_DATE                                                                                  AS INOUT_DATE
	         , ISNULL(A.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
	         , ISNULL(A.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
	         , ISNULL(A.MOVE_TYPE, '')                                                                       AS MOVE_TYPE

	         , ISNULL(D1.STOCK_Q, 0)                                                                         AS BASIS_Q
	         , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
	                WHEN A.INOUT_TYPE = '4' THEN ISNULL(A.INOUT_Q, 0) *(-1) ELSE 0 END                       AS IN_Q
	         , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
	         , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q

	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) * ISNULL(D1.STOCK_Q, 0)
	                ELSE ISNULL(D1.STOCK_I, 0)
	           END                                                                                           AS BASIS_I
/* by pyo 20170628
	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
	                           WHEN A.INOUT_TYPE = '4' THEN ISNULL(A.INOUT_Q, 0)*(-1)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                           WHEN A.INOUT_TYPE = '4' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)*(-1) ELSE 0 END) END    AS IN_I

	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0) ELSE 0 END) END         AS OUT_I
	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0) ELSE 0 END) END         AS RTN_I
*/
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS IN_I
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS OUT_I
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS RTN_I

	         , ISNULL(A.MOVE_TYPE, '')                                                                       AS INOUT_TYPE_DETAIL
	         , ISNULL(A.INOUT_METH, '')                                                                      AS INOUT_METH
	         , ISNULL(A.WH_CODE, '')                                                                         AS WH_CODE
	         , ''                                                                                            AS SUBCON_CODE
	         , ISNULL(A.CREATE_LOC, '')                                                                      AS CREATE_LOC
	         , ISNULL(A.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
	         , ISNULL(A.INOUT_CODE, '')                                                                      AS INOUT_CODE
	         , ISNULL(A.ORDER_TYPE, '')                                                                      AS ORDER_TYPE
	         , ISNULL(A.ORDER_UNIT, '')                                                                      AS ORDER_UNIT
	         , ISNULL(A.ORDER_UNIT_P, 0)                                                                     AS ORDER_UNIT_P
	         , ISNULL(A.ORDER_UNIT_Q, 0)                                                                     AS ORDER_UNIT_Q
	         , ISNULL(A.ORDER_UNIT_O, 0)                                                                     AS ORDER_UNIT_O
	         , ISNULL(A.TRNS_RATE, 0)                                                                        AS TRNS_RATE
	         , ISNULL(A.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
	         , ISNULL(A.INOUT_NUM, '')                                                                       AS INOUT_NUM
	         , A.INOUT_SEQ                                                                                   AS INOUT_SEQ
	         , ISNULL(A.PROJECT_NO, '')                                                                      AS PROJECT_NO
	         , ISNULL(A.LOT_NO, '')                                                                          AS LOT_NO
	         , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE ISNULL(A.WH_CODE, '') END            AS SORT_WH_CODE
	         , CASE WHEN A.INOUT_TYPE = '1' THEN '1'
	                WHEN A.INOUT_TYPE = '2' THEN '3'
	                WHEN A.INOUT_TYPE = '3' THEN '2'
	                ELSE ''
	           END                                                                                           AS SORT_FLD
	         , A.UPDATE_DB_TIME                                                                              AS UPDATE_DB_TIME

	         --20181031 추가 20181115 NULL처리
	         , ISNULL(A.INSERT_DB_USER, A.UPDATE_DB_USER)                                                    AS INSERT_DB_USER
	         , ISNULL(A.INSERT_DB_TIME, A.UPDATE_DB_TIME)                                                    AS INSERT_DB_TIME
	         --20181217 추가 (MAKE_DATE, MAKE_LOT_NO, ORDER_NUM)
	         , A.MAKE_DATE
	         , A.MAKE_LOT_NO
/*
	         , CASE WHEN A.CREATE_LOC = '3' AND A.INOUT_TYPE = '2' AND A.INOUT_TYPE_DETAIL  = '10'         --수불유형이 생산출고인 경우 ORDER_NUM 조회
	                     THEN A.ORDER_NUM
	                ELSE ''
	           END                                                                                           AS ORDER_NUM
*/
	         , CASE WHEN A.CREATE_LOC = '3' AND A.INOUT_TYPE = '2' AND A.INOUT_TYPE_DETAIL  = '10'         --수불유형이 생산출고인 경우 ORDER_NUM 조회
	                     THEN A.ORDER_NUM
					WHEN A.CREATE_LOC = '2' AND A.INOUT_TYPE_DETAIL = '95' AND A.INOUT_METH = '3' 
						THEN X.REF_WKORD_NUM
	                ELSE ''
	           END                                                                                           AS ORDER_NUM

	    FROM              BTR100T   A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
	           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 품목*/
	                                                AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	           INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                AND C2.DIV_CODE        = A.DIV_CODE
	                                                AND C2.ITEM_CODE       = A.ITEM_CODE
	           LEFT  JOIN (
	                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                           , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
	                      FROM   BIV200T A  WITH (NOLOCK)
	                      WHERE  A.COMP_CODE    = @COMP_CODE
	                      AND    A.DIV_CODE     = @DIV_CODE
	                      AND    A.BASIS_YYYYMM = @LastYYYYMM
	                      GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                      ) D1                       ON D1.COMP_CODE = A.COMP_CODE
	                                                AND D1.DIV_CODE  = A.DIV_CODE
	                                                AND D1.ITEM_CODE = A.ITEM_CODE
	                                                AND D1.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE D1.WH_CODE END
				LEFT JOIN PMP350T X WITH (NOLOCK) ON X.COMP_CODE = A.COMP_CODE
												AND X.DIV_CODE	= A.DIV_CODE
												AND X.INOUT_NUM IN( A.INOUT_NUM, A.BASIS_NUM)
												AND X.INOUT_SEQ = A.INOUT_SEQ
												--AND X.INOUT_TYPE = A.INOUT_TYPE
				LEFT  JOIN BSA100T C6 WITH (NOLOCK) ON C6.COMP_CODE  = A.COMP_CODE
                                                      AND C6.MAIN_CODE  = 'B914'
                                                      AND C6.SUB_CODE   = '01'
	    WHERE  A.COMP_CODE       = @COMP_CODE
	    AND    A.DIV_CODE        = @DIV_CODE
	    AND    A.INOUT_DATE     &gt;= @FR_INOUT_DATE                                                                  /* 수불년월*/
	    AND    A.INOUT_DATE     &lt;= @TO_INOUT_DATE
	  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND (
                ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '1' AND A.ITEM_CODE LIKE @ITEM_CODE + '%')
                OR ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '2' AND A.ITEM_CODE = @ITEM_CODE)
            )
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND  (
	          (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '0')
	    OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '1')
	    OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '2')
	          )
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE         = @WH_CODE
	  </if>

	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	    AND    C1.ITEM_LEVEL1    = @ITEM_LEVEL1
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	    AND    C1.ITEM_LEVEL2    = @ITEM_LEVEL2
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	    AND    C1.ITEM_LEVEL3    = @ITEM_LEVEL3
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(EVAL_FLAG)">
	    AND    A.INOUT_METH      = '4'        /* 실사조정 포함여부*/
	  </if>

	  <if test="@foren.Ognl@isNotEmpty(INOUT_METH)">
		AND    A.INOUT_METH      = @INOUT_METH
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
		AND    A.CREATE_LOC      = @CREATE_LOC
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
		AND    A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_STATUS)">
		AND    A.ITEM_STATUS     = @ITEM_STATUS
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		AND    A.INOUT_NUM    LIKE @INOUT_NUM + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		AND    A.LOT_NO       LIKE @LOT_NO    + '%'
	  </if>

	/*  6-2. 전제조회시, 이전월합 정보중 기간별 미발생 수불내역 조회*/
	    IF @INOUT_FLAG = '2'
	        INSERT INTO T_BIV360SKRV1
	             ( TYPE_KEY
	             , TYPE_FLAG               , COMP_CODE               , DIV_CODE                , ITEM_ACCOUNT
	             , ITEM_CODE               , SPEC                    , STOCK_UNIT
	             , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
	             , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
	             , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
	             , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
	             , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
	             , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
	             , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
	             , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE            , UPDATE_DB_TIME
	             --20181031 추가
	             , INSERT_DB_USER          , INSERT_DB_TIME)
	        SELECT
	               @TypeKey                                                                                      AS TYPE_KEY
	             , '11'                                                                                          AS TYPE_FLAG
	             , A.COMP_CODE, A.DIV_CODE
	             , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
	             , A.ITEM_CODE
	             , ISNULL(C1.SPEC, '')                                                                           AS SPEC
	             , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
	             , @FR_INOUT_DATE                                                                                AS INOUT_DATE
	             , ''                                                                                            AS ITEM_STATUS
	             , ''                                                                                            AS INOUT_TYPE
	             , ''                                                                                            AS MOVE_TYPE

	             , ISNULL(D1.STOCK_Q, 0)                                                                         AS BASIS_Q
	             , 0.0                                                                                           AS IN_Q
	             , 0.0                                                                                           AS OUT_Q
	             , 0.0                                                                                           AS RTN_Q

	             , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                    THEN ISNULL(C2.BASIS_P, 0) * ISNULL(D1.STOCK_Q, 0)
	                    ELSE ISNULL(D1.STOCK_I, 0)
	               END                                                                                           AS BASIS_I
	             , 0.0                                                                                           AS IN_I
	             , 0.0                                                                                           AS OUT_I
	             , 0.0                                                                                           AS RTN_I

	             , ''                                                                                            AS INOUT_TYPE_DETAIL
	             , ''                                                                                            AS INOUT_METH
	             , A.WH_CODE                                                                                     AS WH_CODE
	             , ''                                                                                            AS SUBCON_CODE
	             , ''                                                                                            AS CREATE_LOC
	             , ''                                                                                            AS INOUT_CODE_TYPE
	             , ''                                                                                            AS INOUT_CODE
	             , ''                                                                                            AS ORDER_TYPE
	             , ''                                                                                            AS ORDER_UNIT
	             , 0.0                                                                                           AS ORDER_UNIT_P
	             , 0.0                                                                                           AS ORDER_UNIT_Q
	             , 0.0                                                                                           AS ORDER_UNIT_O
	             , 0.0                                                                                           AS TRNS_RATE
	             , ''                                                                                            AS INOUT_PRSN
	             , ''                                                                                            AS INOUT_NUM
	             , 0                                                                                             AS INOUT_SEQ
	             , ''                                                                                            AS PROJECT_NO
	             , ''                                                                                            AS LOT_NO
	             , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE A.WH_CODE END                        AS SORT_WH_CODE
	             , GETDATE()                                                                                     AS UPDATE_DB_TIME

	             --20181031 추가
	             , ''                                                                                            AS INSERT_DB_USER
	             , ''                                                                                            AS INSERT_DB_TIME
	        FROM              BIV200T       A  WITH (NOLOCK)
	               LEFT  JOIN T_BIV360SKRV1 B  WITH (NOLOCK) ON  B.TYPE_KEY   = @TypeKey
	                                                        AND  B.COMP_CODE  = A.COMP_CODE
	                                                        AND  B.DIV_CODE   = A.DIV_CODE
	                                                        AND  B.ITEM_CODE  = A.ITEM_CODE
	                                                        AND  B.WH_CODE    = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
	               INNER JOIN BPR100T       C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          /* 품목*/
	                                                        AND C1.ITEM_CODE  = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	               INNER JOIN BPR200T       C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          /* 사업장 품목*/
	                                                        AND C2.DIV_CODE   = A.DIV_CODE
	                                                        AND C2.ITEM_CODE  = A.ITEM_CODE
	               LEFT  JOIN (
	                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                               , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
	                          FROM   BIV200T A  WITH (NOLOCK)
	                          WHERE  A.COMP_CODE    = @COMP_CODE
	                          AND    A.DIV_CODE     = @DIV_CODE
	                          AND    A.BASIS_YYYYMM = @LastYYYYMM
	                          GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                          )             D1               ON D1.COMP_CODE = A.COMP_CODE
	                                                        AND D1.DIV_CODE  = A.DIV_CODE
	                                                        AND D1.ITEM_CODE = A.ITEM_CODE
	                                                        AND D1.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE D1.WH_CODE END
	               LEFT  JOIN BSA100T C6 WITH (NOLOCK) ON C6.COMP_CODE  = A.COMP_CODE
                                                      AND C6.MAIN_CODE  = 'B914'
                                                      AND C6.SUB_CODE   = '01'
	        WHERE  A.COMP_CODE       = @COMP_CODE
	        AND    A.DIV_CODE        = @DIV_CODE
	        AND    A.BASIS_YYYYMM    = @LastYYYYMM
	        AND   (A.STOCK_Q        != 0.0
	        OR     A.STOCK_I        != 0.0)
	        AND    B.TYPE_KEY       IS NULL
		  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		    AND (
                ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '1' AND A.ITEM_CODE LIKE @ITEM_CODE + '%')
                OR ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '2' AND A.ITEM_CODE = @ITEM_CODE)
            )
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		    AND  (
		          (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '0')
		    OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '1')
		    OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '2')
		          )
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		    AND    C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		    AND    A.WH_CODE         = @WH_CODE
		  </if>
	
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		    AND    C1.ITEM_LEVEL1    = @ITEM_LEVEL1
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		    AND    C1.ITEM_LEVEL2    = @ITEM_LEVEL2
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		    AND    C1.ITEM_LEVEL3    = @ITEM_LEVEL3
		  </if>

	/*  6-3. 이전월합+32 ~ 수불조회시작 이전 수불내역 합계를 기초에 반영*/
	    UPDATE  A
	    SET     A.BASIS_Q = A.BASIS_Q + ISNULL(B.STOCK_Q, 0.0)
	          , A.BASIS_I = A.BASIS_I + ISNULL(B.STOCK_I, 0)
	    FROM                T_BIV360SKRV1 A  WITH (NOLOCK)
	            INNER JOIN  (
	                        SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                             , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
	                                        ELSE 0 END)                                             AS STOCK_Q
/* by pyo 20170628 purchase_p필드가 없음
	                             , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        ELSE 0 END)                                             AS STOCK_I
*/
                                 , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                            WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_CAL_I, 0)
                                            WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                            ELSE 0 END)                                             AS STOCK_I
	                        FROM   BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
	                        WHERE  A.COMP_CODE   = @COMP_CODE
	                        AND    A.DIV_CODE    = @DIV_CODE
	                        AND    A.INOUT_DATE &gt;= @LastYYYYMM + '32'                                                          /* 수불년월*/
	                        AND    A.INOUT_DATE  &lt; @FR_INOUT_DATE
	                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                        )      B                   ON  B.COMP_CODE = A.COMP_CODE
	                                                  AND  B.DIV_CODE  = A.DIV_CODE
	                                                  AND  B.ITEM_CODE = A.ITEM_CODE
	                                                  AND  B.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
	    WHERE   A.TYPE_KEY = @TypeKey


	/*  6-4. 기초수량/금액 계산*/
	    DECLARE         @StockQ             NUMERIC(30, 6)
	                  , @StockI             NUMERIC(30, 6)
	                  , @BasisQ             NUMERIC(30, 6)
	                  , @BasisI             NUMERIC(30, 6)
	                  , @PreItem            NVARCHAR(20)
	                  , @WhCode             NVARCHAR(10)

	    IF @QRY_TYPE = '1'    /*품목별*/
	        BEGIN
	            UPDATE A
	            SET    @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
	                 , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
	                 , @StockQ   = ISNULL(@BasisQ, 0) + A.IN_Q - A.OUT_Q + A.RTN_Q
	                 , @StockI   = ISNULL(@BasisI, 0) + A.IN_I - A.OUT_I + A.RTN_I
	                 , @PreItem  = A.ITEM_CODE
	                 , A.BASIS_Q = @BasisQ
	                 , A.BASIS_I = @BasisI
	                 , A.STOCK_Q = @StockQ
	                 , A.STOCK_I = @StockI
	            FROM   T_BIV360SKRV1 A WITH (NOLOCK, INDEX(T_BIV360SKRV1_IDX00))
	            WHERE  A.TYPE_KEY = @TypeKey
	        END
	     ELSE                 /*창고별*/
	        BEGIN
	            UPDATE A
	            SET    @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@WhCode, '') != A.WH_CODE THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
	                 , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@WhCode, '') != A.WH_CODE THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
	                 , @StockQ   = ISNULL(@BasisQ, 0) + A.IN_Q - A.OUT_Q + A.RTN_Q
	                 , @StockI   = ISNULL(@BasisI, 0) + A.IN_I - A.OUT_I + A.RTN_I
	                 , @PreItem  = A.ITEM_CODE
	                 , @WhCode   = A.WH_CODE
	                 , A.BASIS_Q = @BasisQ
	                 , A.BASIS_I = @BasisI
	                 , A.STOCK_Q = @StockQ
	                 , A.STOCK_I = @StockI
	            FROM   T_BIV360SKRV1 A WITH (NOLOCK, INDEX(T_BIV360SKRV1_IDX00))
	            WHERE  A.TYPE_KEY = @TypeKey
	        END

	/*  7. 데이터 조회 */
	    IF @QRY_TYPE = '1'    /*품목별*/
	        BEGIN
	            SELECT ISNULL(M1.CODE_NAME, '')                                                     AS ITEM_ACCOUNT
	                 , A.ITEM_ACCOUNT                                                               AS ACCOUNT1
	                 , A.ITEM_CODE                                                                  AS ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                        ELSE C1.ITEM_NAME
	                   END                                                                          AS ITEM_NAME
	                 , A.SPEC                                                                       AS SPEC
	                 , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	                 , REPLACE(
	                   REPLACE(
	                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                      , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
	                                      , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))                  AS INOUT_DATE
	                 , A.BASIS_Q                                                                    AS STOCK_Q
	                 , A.IN_Q                                                                       AS IN_Q
	                 , A.OUT_Q                                                                      AS OUT_Q
	                 , A.RTN_Q                                                                      AS RET_Q
	                 , A.STOCK_Q                                                                    AS END_STOCK_Q
	                 , ISNULL(M6.CODE_NAME, '')                                                     AS INOUT_CODE_TYPE
	                 , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
	                                                                       WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
	                                                                       WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
	                                                                       ELSE C7.CUSTOM_NAME
	                                                                  END
	                   ELSE '' END                                                                  AS INOUT_CODE_NAME
	                 , ISNULL(C8.DIV_NAME, '')                                                      AS DIV_CODE_NAME
	                 , ISNULL(C3.TREE_CODE, '')                                                     AS WH_CODE_CODE
	                 , ISNULL(C3.TREE_NAME, '')                                                     AS WH_CODE_NAME
	                 , ISNULL(D1.MOVE_TYPE_NAME, '')                                                AS INOUT_TYPE_DETAIL_NAME
	                 , ISNULL(M8.CODE_NAME, '')                                                     AS INOUT_PRSN_NAME
	                 , A.INOUT_NUM                                                                  AS INOUT_NUM
	                 , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	                 , ISNULL(M5.CODE_NAME, '')                                                     AS CREATE_LOC_NAME
	                 , ISNULL(M4.CODE_NAME, '')                                                     AS INOUT_MATH_NAME
	                 , ISNULL(M2.CODE_NAME, '')                                                     AS ITEM_STATUS
	                 , A.BASIS_I                                                                    AS STOCK_I
	                 , A.IN_I                                                                       AS IN_I
	                 , A.OUT_I                                                                      AS OUT_I
	                 , A.RTN_I                                                                      AS RET_I
	                 , A.STOCK_I                                                                    AS END_STOCK_I
	                 , A.LOT_NO                                                                     AS LOT_NO
	                 --20181031 추가
	                 , A.INOUT_PRSN
	                 , A.INSERT_DB_USER
	                 , A.INSERT_DB_TIME
	                 --20181217 추가
	                 , A.MAKE_DATE
	                 , A.MAKE_LOT_NO
	                 , A.ORDER_NUM
	            FROM              T_BIV360SKRV1 A  WITH (NOLOCK)
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C2.DIV_CODE        = A.DIV_CODE
	                                                        AND C2.ITEM_CODE       = A.ITEM_CODE
	                   LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             /* 창고코드*/
	                                                        AND C3.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C3.TREE_CODE       = A.WH_CODE
	                   LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(1) => 부서코드*/
	                                                        AND C4.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C4.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '1'
	                   LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(2) => 창고코드*/
	                                                        AND C5.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C5.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '2'
	                   LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(3) => 작업장코드*/
	                                                        AND C6.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C6.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '3'
	                   LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(4) => 거래처코드*/
	                                                        AND C7.CUSTOM_CODE     = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE IN ('4', '5')
	                   LEFT  JOIN BOR120T   C8 WITH (NOLOCK) ON C8.COMP_CODE       = A.COMP_CODE             /* 사업장코드*/
	                                                        AND C8.DIV_CODE        = A.DIV_CODE
	                   LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             /* 수불유형*/
	                                                        AND D1.MOVE_TYPE       = A.MOVE_TYPE
	                   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE       = 'B020'                  /* 계정구분*/
	                                                        AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
	                   LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             /* 품목상태*/
	                                                        AND M2.MAIN_CODE       = 'B021'
	                                                        AND M2.SUB_CODE        = A.ITEM_STATUS
	/*                   LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE              입/출고유형*/
															 /* AND M3.MAIN_CODE       = 'B035'*/
	/*                                                        AND M3.SUB_CODE        = A.INOUT_TYPE*/
	                   LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             /* 수불방법*/
	                                                        AND M4.MAIN_CODE       = 'B036'
	                                                        AND M4.SUB_CODE        = A.INOUT_METH
	                   LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             /* 생성경로*/
	                                                        AND M5.MAIN_CODE       = 'B031'
	                                                        AND M5.SUB_CODE        = A.CREATE_LOC
	                   LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             /* 수불처 유형*/
	                                                        AND M6.MAIN_CODE       = 'B005'
	                                                        AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
	/*                   LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE              수/발주 구분*/
	/*                                                        AND M7.MAIN_CODE       = 'M001'*/
	/*                                                        AND M7.SUB_CODE        = A.ORDER_TYPE*/
	                   LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             /* 수불담당자*/
	                                                        AND M8.MAIN_CODE       = 'B024'
	                                                        AND M8.SUB_CODE        = A.INOUT_PRSN
	            WHERE  A.TYPE_KEY = @TypeKey
	            AND   (A.BASIS_Q  != 0
	            OR     A.BASIS_I  != 0
	            OR     A.IN_Q     != 0
	            OR     A.IN_I     != 0
	            OR     A.OUT_Q    != 0
	            OR     A.OUT_I    != 0
	            OR     A.RTN_Q    != 0
	            OR     A.RTN_I    != 0
	            OR     A.STOCK_Q  != 0
	            OR     A.STOCK_I  != 0)
	            ORDER BY A.COMP_CODE, A.ITEM_ACCOUNT, A.DIV_CODE, A.ITEM_CODE, A.SORT_WH_CODE, A.INOUT_DATE, A.SORT_FLD, A.INOUT_NUM, A.INOUT_SEQ
	        END
	     ELSE                 /*창고별*/
	        BEGIN
	            SELECT ISNULL(C3.TREE_NAME, '')                                                     AS ITEM_ACCOUNT
	                 , A.WH_CODE                                                                    AS ACCOUNT1
	                 , A.ITEM_CODE                                                                  AS ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                        ELSE C1.ITEM_NAME
	                   END                                                                          AS ITEM_NAME
	                 , A.SPEC                                                                       AS SPEC
	                 , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	                 , REPLACE(
	                   REPLACE(
	                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                      , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
	                                      , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))                  AS INOUT_DATE
	                 , A.BASIS_Q                                                                    AS STOCK_Q
	                 , A.IN_Q                                                                       AS IN_Q
	                 , A.OUT_Q                                                                      AS OUT_Q
	                 , A.RTN_Q                                                                      AS RET_Q
	                 , A.STOCK_Q                                                                    AS END_STOCK_Q
	                 , ISNULL(M6.CODE_NAME, '')                                                     AS INOUT_CODE_TYPE
	                 , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
	                                                                       WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
	                                                                       WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
	                                                                       ELSE C7.CUSTOM_NAME
	                                                                  END
	                   ELSE '' END                                                                  AS INOUT_CODE_NAME
	                 , ISNULL(C8.DIV_NAME, '')                                                      AS DIV_CODE_NAME
	                 , ISNULL(C3.TREE_CODE, '')                                                     AS WH_CODE_CODE
	                 , ISNULL(C3.TREE_NAME, '')                                                     AS WH_CODE_NAME
	                 , ISNULL(D1.MOVE_TYPE_NAME, '')                                                AS INOUT_TYPE_DETAIL_NAME
	                 , ISNULL(M8.CODE_NAME, '')                                                     AS INOUT_PRSN_NAME
	                 , A.INOUT_NUM                                                                  AS INOUT_NUM
	                 , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	                 , ISNULL(M5.CODE_NAME, '')                                                     AS CREATE_LOC_NAME
	                 , ISNULL(M4.CODE_NAME, '')                                                     AS INOUT_MATH_NAME
	                 , ISNULL(M2.CODE_NAME, '')                                                     AS ITEM_STATUS
	                 , A.BASIS_I                                                                    AS STOCK_I
	                 , A.IN_I                                                                       AS IN_I
	                 , A.OUT_I                                                                      AS OUT_I
	                 , A.RTN_I                                                                      AS RET_I
	                 , A.STOCK_I                                                                    AS END_STOCK_I
	                 , A.LOT_NO                                                                     AS LOT_NO
	                 --20181031 추가
	                 , A.INOUT_PRSN
	                 , A.INSERT_DB_USER
	                 , A.INSERT_DB_TIME
	                 --20181217 추가
	                 , A.MAKE_DATE
	                 , A.MAKE_LOT_NO
	                 , A.ORDER_NUM
	            FROM              T_BIV360SKRV1 A  WITH (NOLOCK)
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C2.DIV_CODE        = A.DIV_CODE
	                                                        AND C2.ITEM_CODE       = A.ITEM_CODE
	                   LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             /* 창고코드*/
	                                                        AND C3.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C3.TREE_CODE       = A.WH_CODE
	                   LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(1) => 부서코드*/
	                                                        AND C4.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C4.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '1'
	                   LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(2) => 창고코드*/
	                                                        AND C5.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C5.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '2'
	                   LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(3) => 작업장코드*/
	                                                        AND C6.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C6.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '3'
	                   LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(4) => 거래처코드*/
	                                                        AND C7.CUSTOM_CODE     = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE IN ('4', '5')
	                   LEFT  JOIN BOR120T   C8 WITH (NOLOCK) ON C8.COMP_CODE       = A.COMP_CODE             /* 사업장코드*/
	                                                        AND C8.DIV_CODE        = A.DIV_CODE
	                   LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             /* 수불유형*/
	                                                        AND D1.MOVE_TYPE       = A.MOVE_TYPE
	                   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE       = 'B020'                  /* 계정구분*/
	                                                        AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
	                   LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             /* 품목상태*/
	                                                        AND M2.MAIN_CODE       = 'B021'
	                                                        AND M2.SUB_CODE        = A.ITEM_STATUS
	/*                   LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE              입/출고유형*/
	/*                                                        AND M3.MAIN_CODE       = 'B035'*/
	/*                                                        AND M3.SUB_CODE        = A.INOUT_TYPE*/
	                   LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             /* 수불방법*/
	                                                        AND M4.MAIN_CODE       = 'B036'
	                                                        AND M4.SUB_CODE        = A.INOUT_METH
	                   LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             /* 생성경로*/
	                                                        AND M5.MAIN_CODE       = 'B031'
	                                                        AND M5.SUB_CODE        = A.CREATE_LOC
	                   LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             /* 수불처 유형*/
	                                                        AND M6.MAIN_CODE       = 'B005'
	                                                        AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
	/*                   LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE             수/발주 구분*/
	/*                                                        AND M7.MAIN_CODE       = 'M001'*/
	/*                                                        AND M7.SUB_CODE        = A.ORDER_TYPE*/
	                   LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             /* 수불담당자*/
	                                                        AND M8.MAIN_CODE       = 'B024'
	                                                        AND M8.SUB_CODE        = A.INOUT_PRSN
	            WHERE  A.TYPE_KEY = @TypeKey
	            AND   (A.BASIS_Q  != 0
	            OR     A.BASIS_I  != 0
	            OR     A.IN_Q     != 0
	            OR     A.IN_I     != 0
	            OR     A.OUT_Q    != 0
	            OR     A.OUT_I    != 0
	            OR     A.RTN_Q    != 0
	            OR     A.RTN_I    != 0
	            OR     A.STOCK_Q  != 0
	            OR     A.STOCK_I  != 0)
	            ORDER BY A.COMP_CODE, A.ITEM_ACCOUNT, A.DIV_CODE, A.ITEM_CODE, A.SORT_WH_CODE, A.INOUT_DATE, A.SORT_FLD, A.INOUT_NUM, A.INOUT_SEQ
	         END

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>

	<select id="biv330skrvServiceImpl.selectMasterList2" parameterType="Map" resultType="rMap">
	/*biv330skrv.Cbiv330skrv[fnBiv330QStd] Query01*/
	/*기간별 수불현황 조회(OLD)*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/

	                  , @FR_INOUT_DATE      NVARCHAR(08)                /* (필수) 시작 수불일*/
	                  , @TO_INOUT_DATE      NVARCHAR(08)                /* (필수) 종료 수불일*/

	                  , @ITEM_CODE          NVARCHAR(20)                /* (선택) 품목코드*/
	                  , @ITEM_NAME          NVARCHAR(200)               /* (선택) 품목명*/

	                  , @ITEM_ACCOUNT       NVARCHAR(02)                /* (선택) 품목 계정코드*/

	                  , @WH_CODE            NVARCHAR(08)                /* (선택) 창고코드*/

	                  , @ITEM_LEVEL1        NVARCHAR(10)                /* 대분류*/
	                  , @ITEM_LEVEL2        NVARCHAR(10)                /* 중분류*/
	                  , @ITEM_LEVEL3        NVARCHAR(10)                /* 소분류*/

	                  , @EVAL_FLAG          NVARCHAR(01)                /* 실사조정 포함 여부(Y/N)*/

	                  , @INOUT_METH         NVARCHAR(02)                /* 수불방법*/
	                  , @CREATE_LOC         NVARCHAR(02)                /* 생성경로*/
	                  , @INOUT_CODE_TYPE    NVARCHAR(02)                /* 수불처 유형*/
	                  , @ITEM_STATUS        NVARCHAR(01)                /* 품목상태*/

	                  , @INOUT_NUM          NVARCHAR(20)                /* 수불번호*/
	                  , @LOT_NO             NVARCHAR(20)                /* Lot No.*/

	                  , @INOUT_FLAG         NVARCHAR(01)                /* 수불 발생 유형(1: 발생, 2: 미발생, 3: 전체)*/

	                  , @QRY_TYPE           NVARCHAR(02)                /* 조회유형 (1: 품목별,  2: 창고별)*/

	                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/

	    SET NOCOUNT ON
	    SET ARITHABORT ON

	/*  1. 변수 값 할당 */
	    SET @COMP_CODE       = #{S_COMP_CODE}
	    SET @DIV_CODE        = #{DIV_CODE}

	    SET @FR_INOUT_DATE   = CASE WHEN #{FR_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(08), GETDATE(), 112) ELSE #{FR_INOUT_DATE} END
	    SET @TO_INOUT_DATE   = CASE WHEN #{TO_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(08), GETDATE(), 112) ELSE #{TO_INOUT_DATE} END

	    SET @ITEM_CODE       = #{ITEM_CODE}
	    SET @ITEM_NAME       = #{ITEM_NAME}

	    SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

	    SET @WH_CODE         = #{WH_CODE}

	    SET @ITEM_LEVEL1     = N''
	    SET @ITEM_LEVEL2     = N''
	    SET @ITEM_LEVEL3     = N''

	    SET @EVAL_FLAG       = #{EVAL_FLAG}

	    SET @INOUT_METH      = N''
	    SET @CREATE_LOC      = N''
	    SET @INOUT_CODE_TYPE = N''
	    SET @ITEM_STATUS     = N''

	    SET @INOUT_NUM       = N''
	    SET @LOT_NO          = #{LOT_NO}

	    SET @INOUT_FLAG      = N'1'    /* 수불발생 정보만 조회*/

	    SET @QRY_TYPE        = CASE WHEN SUBSTRING('2', 1, 1) = '' THEN '1' ELSE SUBSTRING('2', 1, 1) END

	    SET @USER_ID         = #{S_USER_ID}

	    /* 로컬 변수 선언*/
	    DECLARE     @TypeKey                NVARCHAR(20)

	    SET @TypeKey      = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

	    IF @DIV_CODE = 'ZZ' OR @DIV_CODE = ''
	    BEGIN
	        SELECT TOP 0
	               CONVERT(NVARCHAR(100), '')                                                   AS ITEM_ACCOUNT
	             , CONVERT(NVARCHAR(20), '')                                                    AS ACCOUNT1
	             , A.ITEM_CODE                                                                  AS ITEM_CODE
	             , CONVERT(NVARCHAR(40), '')                                                    AS ITEM_NAME
	             , A.SPEC                                                                       AS SPEC
	             , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	             , CONVERT(NVARCHAR(10), '')                                                    AS INOUT_DATE
	             , A.BASIS_Q                                                                    AS STOCK_Q
	             , A.IN_Q                                                                       AS IN_Q
	             , A.OUT_Q                                                                      AS OUT_Q
	             , A.RTN_Q                                                                      AS RET_Q
	             , A.STOCK_Q                                                                    AS END_STOCK_Q
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_CODE_TYPE
	             , CONVERT(NVARCHAR(30), '')                                                    AS INOUT_CODE_NAME
	             , CONVERT(NVARCHAR(30), '')                                                    AS DIV_CODE_NAME
	             , CONVERT(NVARCHAR(30), '')                                                    AS WH_CODE_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_TYPE_DETAIL_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_PRSN_NAME
	             , A.INOUT_NUM                                                                  AS INOUT_NUM
	             , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	             , CONVERT(NVARCHAR(100), '')                                                   AS CREATE_LOC_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS INOUT_MATH_NAME
	             , CONVERT(NVARCHAR(100), '')                                                   AS ITEM_STATUS
	             , A.BASIS_I                                                                    AS STOCK_I
	             , A.IN_I                                                                       AS IN_I
	             , A.OUT_I                                                                      AS OUT_I
	             , A.RTN_I                                                                      AS RET_I
	             , A.STOCK_I                                                                    AS END_STOCK_I
	             , A.LOT_NO                                                                     AS LOT_NO
	        FROM   T_BIV360SKRV1 A  WITH (NOLOCK)
	        WHERE  A.TYPE_KEY = ''

	        RETURN
	    END

	/*  2. 명칭 조회 유형 설정 */
	    DECLARE             @RefItem            NVARCHAR(01)

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID = @USER_ID

	    SET @RefItem = ISNULL(@RefItem, '')

	/*  3. 날짜 유형 설정 */
	    DECLARE       @DateFormat       NVARCHAR(10)

	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = 'B044'
	    AND    M1.REF_CODE1 = 'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

	/*  4. 재고단가 계산 방법 설정 */
	    DECLARE             @StockP             NVARCHAR(01)

	    SELECT TOP 1 @StockP = SUB_CODE
	    FROM   BSA100T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE                                               /* 단가처리 기준*/
	    AND    MAIN_CODE = 'B069'
	    AND    SUB_CODE  = '1'                                                      /* 기준재고단가*/
	    AND    REF_CODE1 = 'Y'

	    SET @StockP = ISNULL(@StockP, '')

	/*  5. 가장 최근 마감월 조회 */
	    DECLARE             @QryYYYYMM          NVARCHAR(06)                        /* 조회월*/
	                      , @LastYYYYMM         NVARCHAR(06)                        /* 기초 조회월*/
	                      , @ErrorDesc          NVARCHAR(1000)

	    SET @QryYYYYMM  = CONVERT(NVARCHAR(06), @FR_INOUT_DATE, 112)
	    SET @LastYYYYMM = CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, @FR_INOUT_DATE), 112)

	    EXEC uniLITE.SP_STOCK_AdjustMonthlyColsing @COMP_CODE, @DIV_CODE, @QryYYYYMM, @WH_CODE, @ITEM_CODE, @USER_ID, @ErrorDesc OUTPUT

	    IF ISNULL(@ErrorDesc, '') != ''
	    BEGIN
	        RETURN
	    END

	    /* 1) 하루전 임시 데이터 삭제*/
	    IF NOT EXISTS   (
	                    SELECT TOP 1 1
	                    FROM   T_BIV360SKRV1 WITH (NOLOCK)
	                    WHERE  TYPE_KEY LIKE CONVERT(NVARCHAR(08), GETDATE(), 112) + '%'
	                    )
	        TRUNCATE TABLE T_BIV360SKRV1

	/*  6. 조회 데이터 생성 */
	/*  6-1. 수불 발생 내역 조회*/
	    INSERT INTO T_BIV360SKRV1
	         ( TYPE_KEY
	         , TYPE_FLAG               , COMP_CODE               , DIV_CODE
	         , ITEM_ACCOUNT            , ITEM_CODE               , SPEC                    , STOCK_UNIT
	         , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
	         , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
	         , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
	         , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
	         , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
	         , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
	         , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
	         , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE            , SORT_FLD
	         , UPDATE_DB_TIME
             --20181031 추가
             , INSERT_DB_USER          , INSERT_DB_TIME)
	    SELECT
	           @TypeKey                                                                                      AS TYPE_KEY
	         , '10'                                                                                          AS TYPE_FLAG
	         , A.COMP_CODE, A.DIV_CODE
	         , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
	         , A.ITEM_CODE
	         , ISNULL(C1.SPEC, '')                                                                           AS SPEC
	         , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
	         , A.INOUT_DATE                                                                                  AS INOUT_DATE
	         , ISNULL(A.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
	         , ISNULL(A.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
	         , ISNULL(A.MOVE_TYPE, '')                                                                       AS MOVE_TYPE

	         , ISNULL(D1.STOCK_Q, 0)                                                                         AS BASIS_Q
	         , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS IN_Q
	         , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
	         , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q

	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) * ISNULL(D1.STOCK_Q, 0)
	                ELSE ISNULL(D1.STOCK_I, 0)
	           END                                                                                           AS BASIS_I
/* by pyo 20170628 purchase_p필드없음
	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0) ELSE 0 END) END         AS IN_I
	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0) ELSE 0 END) END         AS OUT_I
	         , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                THEN ISNULL(C2.BASIS_P, 0) *
	                     (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
	                ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0) ELSE 0 END) END         AS RTN_I
*/
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS IN_I
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS OUT_I
            , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                   THEN ISNULL(C2.BASIS_P, 0) *
                        (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                   ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS RTN_I


	         , ISNULL(A.MOVE_TYPE, '')                                                                       AS INOUT_TYPE_DETAIL
	         , ISNULL(A.INOUT_METH, '')                                                                      AS INOUT_METH
	         , ISNULL(A.WH_CODE, '')                                                                         AS WH_CODE
	         , ''                                                                                            AS SUBCON_CODE
	         , ISNULL(A.CREATE_LOC, '')                                                                      AS CREATE_LOC
	         , ISNULL(A.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
	         , ISNULL(A.INOUT_CODE, '')                                                                      AS INOUT_CODE
	         , ISNULL(A.ORDER_TYPE, '')                                                                      AS ORDER_TYPE
	         , ISNULL(A.ORDER_UNIT, '')                                                                      AS ORDER_UNIT
	         , ISNULL(A.ORDER_UNIT_P, 0)                                                                     AS ORDER_UNIT_P
	         , ISNULL(A.ORDER_UNIT_Q, 0)                                                                     AS ORDER_UNIT_Q
	         , ISNULL(A.ORDER_UNIT_O, 0)                                                                     AS ORDER_UNIT_O
	         , ISNULL(A.TRNS_RATE, 0)                                                                        AS TRNS_RATE
	         , ISNULL(A.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
	         , ISNULL(A.INOUT_NUM, '')                                                                       AS INOUT_NUM
	         , A.INOUT_SEQ                                                                                   AS INOUT_SEQ
	         , ISNULL(A.PROJECT_NO, '')                                                                      AS PROJECT_NO
	         , ISNULL(A.LOT_NO, '')                                                                          AS LOT_NO
	         , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE ISNULL(A.WH_CODE, '') END            AS SORT_WH_CODE
	         , CASE WHEN A.INOUT_TYPE = '1' THEN '1'
	                WHEN A.INOUT_TYPE = '2' THEN '3'
	                WHEN A.INOUT_TYPE = '3' THEN '2'
	                ELSE ''
	           END                                                                                           AS SORT_FLD
	         , A.UPDATE_DB_TIME                                                                              AS UPDATE_DB_TIME

	         --20181031 추가
	         , ISNULL(A.INSERT_DB_USER , A.UPDATE_DB_USER)                                                                             AS INSERT_DB_USER
	         , ISNULL(A.INSERT_DB_TIME, A.UPDATE_DB_TIME)                                                                              AS INSERT_DB_TIME
	    FROM              BTR100T   A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
	           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 품목*/
	                                                AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	           INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                AND C2.DIV_CODE        = A.DIV_CODE
	                                                AND C2.ITEM_CODE       = A.ITEM_CODE
	           LEFT  JOIN (
	                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                           , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
	                      FROM   BIV200T A  WITH (NOLOCK)
	                      WHERE  A.COMP_CODE    = @COMP_CODE
	                      AND    A.DIV_CODE     = @DIV_CODE
	                      AND    A.BASIS_YYYYMM = @LastYYYYMM
	                      GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                      ) D1                       ON D1.COMP_CODE = A.COMP_CODE
	                                                AND D1.DIV_CODE  = A.DIV_CODE
	                                                AND D1.ITEM_CODE = A.ITEM_CODE
	                                                AND D1.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE D1.WH_CODE END
	           LEFT  JOIN BSA100T C6 WITH (NOLOCK) ON C6.COMP_CODE  = A.COMP_CODE
                                                      AND C6.MAIN_CODE  = 'B914'
                                                      AND C6.SUB_CODE   = '01'
	    WHERE  A.COMP_CODE       = @COMP_CODE
	    AND    A.DIV_CODE        = @DIV_CODE
	    AND    A.INOUT_DATE     &gt;= @FR_INOUT_DATE                                                                  /* 수불년월*/
	    AND    A.INOUT_DATE     &lt;= @TO_INOUT_DATE

	  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND (
                ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '1' AND A.ITEM_CODE LIKE @ITEM_CODE + '%')
                OR ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '2' AND A.ITEM_CODE = @ITEM_CODE)
            )
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND  (
	          (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '0')
	    OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '1')
	    OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '2')
	          )
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE         = @WH_CODE
	  </if>

	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	    AND    C1.ITEM_LEVEL1    = @ITEM_LEVEL1
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	    AND    C1.ITEM_LEVEL2    = @ITEM_LEVEL2
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	    AND    C1.ITEM_LEVEL3    = @ITEM_LEVEL3
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(EVAL_FLAG)">
	    AND    A.INOUT_METH      = '4'        /* 실사조정 포함여부*/
	  </if>

	  <if test="@foren.Ognl@isNotEmpty(INOUT_METH)">
		AND    A.INOUT_METH      = @INOUT_METH
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
		AND    A.CREATE_LOC      = @CREATE_LOC
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
		AND    A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_STATUS)">
		AND    A.ITEM_STATUS     = @ITEM_STATUS
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		AND    A.INOUT_NUM    LIKE @INOUT_NUM + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		AND    A.LOT_NO       LIKE @LOT_NO    + '%'
	  </if>

	/*  6-2. 전제조회시, 이전월합 정보중 기간별 미발생 수불내역 조회*/
	    IF @INOUT_FLAG = '2'
	        INSERT INTO T_BIV360SKRV1
	             ( TYPE_KEY
	             , TYPE_FLAG               , COMP_CODE               , DIV_CODE                , ITEM_ACCOUNT
	             , ITEM_CODE               , SPEC                    , STOCK_UNIT
	             , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
	             , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
	             , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
	             , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
	             , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
	             , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
	             , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
	             , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE            , UPDATE_DB_TIME
	             --20181031 추가
	             , INSERT_DB_USER          , INSERT_DB_TIME)
	        SELECT
	               @TypeKey                                                                                      AS TYPE_KEY
	             , '11'                                                                                          AS TYPE_FLAG
	             , A.COMP_CODE, A.DIV_CODE
	             , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
	             , A.ITEM_CODE
	             , ISNULL(C1.SPEC, '')                                                                           AS SPEC
	             , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
	             , @FR_INOUT_DATE                                                                                AS INOUT_DATE
	             , ''                                                                                            AS ITEM_STATUS
	             , ''                                                                                            AS INOUT_TYPE
	             , ''                                                                                            AS MOVE_TYPE

	             , ISNULL(D1.STOCK_Q, 0)                                                                         AS BASIS_Q
	             , 0.0                                                                                           AS IN_Q
	             , 0.0                                                                                           AS OUT_Q
	             , 0.0                                                                                           AS RTN_Q

	             , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
	                    THEN ISNULL(C2.BASIS_P, 0) * ISNULL(D1.STOCK_Q, 0)
	                    ELSE ISNULL(D1.STOCK_I, 0)
	               END                                                                                           AS BASIS_I
	             , 0.0                                                                                           AS IN_I
	             , 0.0                                                                                           AS OUT_I
	             , 0.0                                                                                           AS RTN_I

	             , ''                                                                                            AS INOUT_TYPE_DETAIL
	             , ''                                                                                            AS INOUT_METH
	             , A.WH_CODE                                                                                     AS WH_CODE
	             , ''                                                                                            AS SUBCON_CODE
	             , ''                                                                                            AS CREATE_LOC
	             , ''                                                                                            AS INOUT_CODE_TYPE
	             , ''                                                                                            AS INOUT_CODE
	             , ''                                                                                            AS ORDER_TYPE
	             , ''                                                                                            AS ORDER_UNIT
	             , 0.0                                                                                           AS ORDER_UNIT_P
	             , 0.0                                                                                           AS ORDER_UNIT_Q
	             , 0.0                                                                                           AS ORDER_UNIT_O
	             , 0.0                                                                                           AS TRNS_RATE
	             , ''                                                                                            AS INOUT_PRSN
	             , ''                                                                                            AS INOUT_NUM
	             , 0                                                                                             AS INOUT_SEQ
	             , ''                                                                                            AS PROJECT_NO
	             , ''                                                                                            AS LOT_NO
	             , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE A.WH_CODE END                        AS SORT_WH_CODE
	             , GETDATE()                                                                                     AS UPDATE_DB_TIME

	             --20181031 추가
	             , ''                                                                                            AS INSERT_DB_USER
	             , ''                                                                                            AS INSERT_DB_TIME
	        FROM              BIV200T       A  WITH (NOLOCK)
	               LEFT  JOIN T_BIV360SKRV1 B  WITH (NOLOCK) ON  B.TYPE_KEY   = @TypeKey
	                                                        AND  B.COMP_CODE  = A.COMP_CODE
	                                                        AND  B.DIV_CODE   = A.DIV_CODE
	                                                        AND  B.ITEM_CODE  = A.ITEM_CODE
	                                                        AND  B.WH_CODE    = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
	               INNER JOIN BPR100T       C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          /* 품목*/
	                                                        AND C1.ITEM_CODE  = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	               INNER JOIN BPR200T       C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          /* 사업장 품목*/
	                                                        AND C2.DIV_CODE   = A.DIV_CODE
	                                                        AND C2.ITEM_CODE  = A.ITEM_CODE
	               LEFT  JOIN (
	                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                               , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
	                          FROM   BIV200T A  WITH (NOLOCK)
	                          WHERE  A.COMP_CODE    = @COMP_CODE
	                          AND    A.DIV_CODE     = @DIV_CODE
	                          AND    A.BASIS_YYYYMM = @LastYYYYMM
	                          GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                          )             D1               ON D1.COMP_CODE = A.COMP_CODE
	                                                        AND D1.DIV_CODE  = A.DIV_CODE
	                                                        AND D1.ITEM_CODE = A.ITEM_CODE
	                                                        AND D1.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE D1.WH_CODE END
	               LEFT  JOIN BSA100T C6 WITH (NOLOCK) ON C6.COMP_CODE  = A.COMP_CODE
                                                      AND C6.MAIN_CODE  = 'B914'
                                                      AND C6.SUB_CODE   = '01' 
	        WHERE  A.COMP_CODE       = @COMP_CODE
	        AND    A.DIV_CODE        = @DIV_CODE
	        AND    A.BASIS_YYYYMM    = @LastYYYYMM
	        AND   (A.STOCK_Q        != 0.0
	        OR     A.STOCK_I        != 0.0)
	        AND    B.TYPE_KEY       IS NULL

		  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		    AND (
                ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '1' AND A.ITEM_CODE LIKE @ITEM_CODE + '%')
                OR ((CASE WHEN ISNULL(C6.REF_CODE2, '') = '' THEN '1' ELSE C6.REF_CODE2 END) = '2' AND A.ITEM_CODE = @ITEM_CODE)
            )
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		    AND  (
		          (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '0')
		    OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '1')
		    OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '2')
		          )
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		    AND    C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		    AND    A.WH_CODE         = @WH_CODE
		  </if>
	
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		    AND    C1.ITEM_LEVEL1    = @ITEM_LEVEL1
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		    AND    C1.ITEM_LEVEL2    = @ITEM_LEVEL2
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		    AND    C1.ITEM_LEVEL3    = @ITEM_LEVEL3
		  </if>

	/*  6-3. 이전월합+32 ~ 수불조회시작 이전 수불내역 합계를 기초에 반영*/
	    UPDATE  A
	    SET     A.BASIS_Q = A.BASIS_Q + ISNULL(B.STOCK_Q, 0.0)
	          , A.BASIS_I = A.BASIS_I + ISNULL(B.STOCK_I, 0)
	    FROM                T_BIV360SKRV1 A  WITH (NOLOCK)
	            INNER JOIN  (
	                        SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
	                             , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
	                                        ELSE 0 END)                                             AS STOCK_Q
/* by pyo 20170628 purchase_p 없음
	                             , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.PURCHASE_P, 0) * ISNULL(A.INOUT_Q, 0)
	                                        ELSE 0 END)                                             AS STOCK_I
*/
                                 , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                            WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_CAL_I, 0)
                                            WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                            ELSE 0 END)                                             AS STOCK_I
	                        FROM   BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
	                        WHERE  A.COMP_CODE   = @COMP_CODE
	                        AND    A.DIV_CODE    = @DIV_CODE
	                        AND    A.INOUT_DATE &gt;= @LastYYYYMM + '32'                                                          /* 수불년월*/
	                        AND    A.INOUT_DATE  &lt; @FR_INOUT_DATE
	                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
	                        )      B                   ON  B.COMP_CODE = A.COMP_CODE
	                                                  AND  B.DIV_CODE  = A.DIV_CODE
	                                                  AND  B.ITEM_CODE = A.ITEM_CODE
	                                                  AND  B.WH_CODE   = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
	    WHERE   A.TYPE_KEY = @TypeKey


	/*  6-4. 기초수량/금액 계산*/
	    DECLARE         @StockQ             NUMERIC(30, 6)
	                  , @StockI             NUMERIC(30, 6)
	                  , @BasisQ             NUMERIC(30, 6)
	                  , @BasisI             NUMERIC(30, 6)
	                  , @PreItem            NVARCHAR(20)
	                  , @WhCode             NVARCHAR(10)

	    IF @QRY_TYPE = '1'    /*품목별*/
	        BEGIN
	            UPDATE A
	            SET    @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
	                 , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
	                 , @StockQ   = ISNULL(@BasisQ, 0) + A.IN_Q - A.OUT_Q + A.RTN_Q
	                 , @StockI   = ISNULL(@BasisI, 0) + A.IN_I - A.OUT_I + A.RTN_I
	                 , @PreItem  = A.ITEM_CODE
	                 , A.BASIS_Q = @BasisQ
	                 , A.BASIS_I = @BasisI
	                 , A.STOCK_Q = @StockQ
	                 , A.STOCK_I = @StockI
	            FROM   T_BIV360SKRV1 A WITH (NOLOCK, INDEX(T_BIV360SKRV1_IDX00))
	            WHERE  A.TYPE_KEY = @TypeKey
	        END
	     ELSE                 /*창고별*/
	        BEGIN
	            UPDATE A
	            SET    @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@WhCode, '') != A.WH_CODE THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
	                 , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@WhCode, '') != A.WH_CODE THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
	                 , @StockQ   = ISNULL(@BasisQ, 0) + A.IN_Q - A.OUT_Q + A.RTN_Q
	                 , @StockI   = ISNULL(@BasisI, 0) + A.IN_I - A.OUT_I + A.RTN_I
	                 , @PreItem  = A.ITEM_CODE
	                 , @WhCode   = A.WH_CODE
	                 , A.BASIS_Q = @BasisQ
	                 , A.BASIS_I = @BasisI
	                 , A.STOCK_Q = @StockQ
	                 , A.STOCK_I = @StockI
	            FROM   T_BIV360SKRV1 A WITH (NOLOCK, INDEX(T_BIV360SKRV1_IDX00))
	            WHERE  A.TYPE_KEY = @TypeKey
	        END

	/*  7. 데이터 조회 */
	    IF @QRY_TYPE = '1'    /*품목별*/
	        BEGIN
	            SELECT ISNULL(M1.CODE_NAME, '')                                                     AS ITEM_ACCOUNT
	                 , A.ITEM_ACCOUNT                                                               AS ACCOUNT1
	                 , A.ITEM_CODE                                                                  AS ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                        ELSE C1.ITEM_NAME
	                   END                                                                          AS ITEM_NAME
	                 , A.SPEC                                                                       AS SPEC
	                 , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	                 , REPLACE(
	                   REPLACE(
	                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                      , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
	                                      , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))                  AS INOUT_DATE
	                 , A.BASIS_Q                                                                    AS STOCK_Q
	                 , A.IN_Q                                                                       AS IN_Q
	                 , A.OUT_Q                                                                      AS OUT_Q
	                 , A.RTN_Q                                                                      AS RET_Q
	                 , A.STOCK_Q                                                                    AS END_STOCK_Q
	                 , ISNULL(M6.CODE_NAME, '')                                                     AS INOUT_CODE_TYPE
	                 , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
	                                                                       WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
	                                                                       WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
	                                                                       ELSE C7.CUSTOM_NAME
	                                                                  END
	                   ELSE '' END                                                                  AS INOUT_CODE_NAME
	                 , ISNULL(C8.DIV_NAME, '')                                                      AS DIV_CODE_NAME
	                 , ISNULL(C3.TREE_CODE, '')                                                     AS WH_CODE_CODE
	                 , ISNULL(C3.TREE_NAME, '')                                                     AS WH_CODE_NAME
	                 , ISNULL(D1.MOVE_TYPE_NAME, '')                                                AS INOUT_TYPE_DETAIL_NAME
	                 , ISNULL(M8.CODE_NAME, '')                                                     AS INOUT_PRSN_NAME
	                 , A.INOUT_NUM                                                                  AS INOUT_NUM
	                 , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	                 , ISNULL(M5.CODE_NAME, '')                                                     AS CREATE_LOC_NAME
	                 , ISNULL(M4.CODE_NAME, '')                                                     AS INOUT_MATH_NAME
	                 , ISNULL(M2.CODE_NAME, '')                                                     AS ITEM_STATUS
	                 , A.BASIS_I                                                                    AS STOCK_I
	                 , A.IN_I                                                                       AS IN_I
	                 , A.OUT_I                                                                      AS OUT_I
	                 , A.RTN_I                                                                      AS RET_I
	                 , A.STOCK_I                                                                    AS END_STOCK_I
	                 , A.LOT_NO                                                                     AS LOT_NO
	                 --20181031 추가
	                 , A.INOUT_PRSN
	                 , A.INSERT_DB_USER
	                 , A.INSERT_DB_TIME
	            FROM              T_BIV360SKRV1 A  WITH (NOLOCK)
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C2.DIV_CODE        = A.DIV_CODE
	                                                        AND C2.ITEM_CODE       = A.ITEM_CODE
	                   LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             /* 창고코드*/
	                                                        AND C3.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C3.TREE_CODE       = A.WH_CODE
	                   LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(1) => 부서코드*/
	                                                        AND C4.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C4.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '1'
	                   LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(2) => 창고코드*/
	                                                        AND C5.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C5.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '2'
	                   LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(3) => 작업장코드*/
	                                                        AND C6.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C6.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '3'
	                   LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(4) => 거래처코드*/
	                                                        AND C7.CUSTOM_CODE     = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE IN ('4', '5')
	                   LEFT  JOIN BOR120T   C8 WITH (NOLOCK) ON C8.COMP_CODE       = A.COMP_CODE             /* 사업장코드*/
	                                                        AND C8.DIV_CODE        = A.DIV_CODE
	                   LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             /* 수불유형*/
	                                                        AND D1.MOVE_TYPE       = A.MOVE_TYPE
	                   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE       = 'B020'                  /* 계정구분*/
	                                                        AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
	                   LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             /* 품목상태*/
	                                                        AND M2.MAIN_CODE       = 'B021'
	                                                        AND M2.SUB_CODE        = A.ITEM_STATUS
	/*                   LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE              입/출고유형*/
															 /* AND M3.MAIN_CODE       = 'B035'*/
	/*                                                        AND M3.SUB_CODE        = A.INOUT_TYPE*/
	                   LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             /* 수불방법*/
	                                                        AND M4.MAIN_CODE       = 'B036'
	                                                        AND M4.SUB_CODE        = A.INOUT_METH
	                   LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             /* 생성경로*/
	                                                        AND M5.MAIN_CODE       = 'B031'
	                                                        AND M5.SUB_CODE        = A.CREATE_LOC
	                   LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             /* 수불처 유형*/
	                                                        AND M6.MAIN_CODE       = 'B005'
	                                                        AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
	/*                   LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE              수/발주 구분*/
	/*                                                        AND M7.MAIN_CODE       = 'M001'*/
	/*                                                        AND M7.SUB_CODE        = A.ORDER_TYPE*/
	                   LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             /* 수불담당자*/
	                                                        AND M8.MAIN_CODE       = 'B024'
	                                                        AND M8.SUB_CODE        = A.INOUT_PRSN
	            WHERE  A.TYPE_KEY = @TypeKey
	            AND   (A.BASIS_Q  != 0
	            OR     A.BASIS_I  != 0
	            OR     A.IN_Q     != 0
	            OR     A.IN_I     != 0
	            OR     A.OUT_Q    != 0
	            OR     A.OUT_I    != 0
	            OR     A.RTN_Q    != 0
	            OR     A.RTN_I    != 0
	            OR     A.STOCK_Q  != 0
	            OR     A.STOCK_I  != 0)
	            ORDER BY A.COMP_CODE, A.ITEM_ACCOUNT, A.DIV_CODE, A.ITEM_CODE, A.SORT_WH_CODE, A.INOUT_DATE, A.SORT_FLD, A.INOUT_NUM, A.INOUT_SEQ
	        END
	     ELSE                 /*창고별*/
	        BEGIN
	            SELECT ISNULL(C3.TREE_NAME, '')                                                     AS ITEM_ACCOUNT
	                 , A.WH_CODE                                                                    AS ACCOUNT1
	                 , A.ITEM_CODE                                                                  AS ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                        ELSE C1.ITEM_NAME
	                   END                                                                          AS ITEM_NAME
	                 , A.SPEC                                                                       AS SPEC
	                 , A.STOCK_UNIT                                                                 AS STOCK_UNIT
	                 , REPLACE(
	                   REPLACE(
	                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                      , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
	                                      , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))                  AS INOUT_DATE
	                 , A.BASIS_Q                                                                    AS STOCK_Q
	                 , A.IN_Q                                                                       AS IN_Q
	                 , A.OUT_Q                                                                      AS OUT_Q
	                 , A.RTN_Q                                                                      AS RET_Q
	                 , A.STOCK_Q                                                                    AS END_STOCK_Q
	                 , ISNULL(M6.CODE_NAME, '')                                                     AS INOUT_CODE_TYPE
	                 , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
	                        WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
	                                                                       WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
	                                                                       WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
	                                                                       ELSE C7.CUSTOM_NAME
	                                                                  END
	                   ELSE '' END                                                                  AS INOUT_CODE_NAME
	                 , ISNULL(C8.DIV_NAME, '')                                                      AS DIV_CODE_NAME
	                 , ISNULL(C3.TREE_CODE, '')                                                     AS WH_CODE_CODE
	                 , ISNULL(C3.TREE_NAME, '')                                                     AS WH_CODE_NAME
	                 , ISNULL(D1.MOVE_TYPE_NAME, '')                                                AS INOUT_TYPE_DETAIL_NAME
	                 , ISNULL(M8.CODE_NAME, '')                                                     AS INOUT_PRSN_NAME
	                 , A.INOUT_NUM                                                                  AS INOUT_NUM
	                 , A.INOUT_SEQ                                                                  AS INOUT_SEQ
	                 , ISNULL(M5.CODE_NAME, '')                                                     AS CREATE_LOC_NAME
	                 , ISNULL(M4.CODE_NAME, '')                                                     AS INOUT_MATH_NAME
	                 , ISNULL(M2.CODE_NAME, '')                                                     AS ITEM_STATUS
	                 , A.BASIS_I                                                                    AS STOCK_I
	                 , A.IN_I                                                                       AS IN_I
	                 , A.OUT_I                                                                      AS OUT_I
	                 , A.RTN_I                                                                      AS RET_I
	                 , A.STOCK_I                                                                    AS END_STOCK_I
	                 , A.LOT_NO                                                                     AS LOT_NO
	                 --20181031 추가
	                 , A.INOUT_PRSN
	                 , A.INSERT_DB_USER
	                 , A.INSERT_DB_TIME
	            FROM              T_BIV360SKRV1 A  WITH (NOLOCK)
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C1.ITEM_CODE       = A.ITEM_CODE
	                                                        AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             /* 사업장 품목*/
	                                                        AND C2.DIV_CODE        = A.DIV_CODE
	                                                        AND C2.ITEM_CODE       = A.ITEM_CODE
	                   LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             /* 창고코드*/
	                                                        AND C3.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C3.TREE_CODE       = A.WH_CODE
	                   LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(1) => 부서코드*/
	                                                        AND C4.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C4.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '1'
	                   LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(2) => 창고코드*/
	                                                        AND C5.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C5.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '2'
	                   LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(3) => 작업장코드*/
	                                                        AND C6.TYPE_LEVEL      = A.DIV_CODE
	                                                        AND C6.TREE_CODE       = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE  = '3'
	                   LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             /* 수불처 코드(4) => 거래처코드*/
	                                                        AND C7.CUSTOM_CODE     = A.INOUT_CODE
	                                                        AND A.INOUT_CODE_TYPE IN ('4', '5')
	                   LEFT  JOIN BOR120T   C8 WITH (NOLOCK) ON C8.COMP_CODE       = A.COMP_CODE             /* 사업장코드*/
	                                                        AND C8.DIV_CODE        = A.DIV_CODE
	                   LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             /* 수불유형*/
	                                                        AND D1.MOVE_TYPE       = A.MOVE_TYPE
	                   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE       = 'B020'                  /* 계정구분*/
	                                                        AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
	                   LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             /* 품목상태*/
	                                                        AND M2.MAIN_CODE       = 'B021'
	                                                        AND M2.SUB_CODE        = A.ITEM_STATUS
	/*                   LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE              입/출고유형*/
	/*                                                        AND M3.MAIN_CODE       = 'B035'*/
	/*                                                        AND M3.SUB_CODE        = A.INOUT_TYPE*/
	                   LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             /* 수불방법*/
	                                                        AND M4.MAIN_CODE       = 'B036'
	                                                        AND M4.SUB_CODE        = A.INOUT_METH
	                   LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             /* 생성경로*/
	                                                        AND M5.MAIN_CODE       = 'B031'
	                                                        AND M5.SUB_CODE        = A.CREATE_LOC
	                   LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             /* 수불처 유형*/
	                                                        AND M6.MAIN_CODE       = 'B005'
	                                                        AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
	/*                   LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE             수/발주 구분*/
	/*                                                        AND M7.MAIN_CODE       = 'M001'*/
	/*                                                        AND M7.SUB_CODE        = A.ORDER_TYPE*/
	                   LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             /* 수불담당자*/
	                                                        AND M8.MAIN_CODE       = 'B024'
	                                                        AND M8.SUB_CODE        = A.INOUT_PRSN
	            WHERE  A.TYPE_KEY = @TypeKey
	            AND   (A.BASIS_Q  != 0
	            OR     A.BASIS_I  != 0
	            OR     A.IN_Q     != 0
	            OR     A.IN_I     != 0
	            OR     A.OUT_Q    != 0
	            OR     A.OUT_I    != 0
	            OR     A.RTN_Q    != 0
	            OR     A.RTN_I    != 0
	            OR     A.STOCK_Q  != 0
	            OR     A.STOCK_I  != 0)
	            ORDER BY A.COMP_CODE, A.ITEM_ACCOUNT, A.DIV_CODE, A.ITEM_CODE, A.SORT_WH_CODE, A.INOUT_DATE, A.SORT_FLD, A.INOUT_NUM, A.INOUT_SEQ
	         END

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
</mapper>