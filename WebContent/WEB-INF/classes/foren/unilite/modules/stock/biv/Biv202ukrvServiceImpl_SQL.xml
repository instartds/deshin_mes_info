<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv202ukrvServiceImpl">
	<select id="biv202ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>
	
	<select id="biv202ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* 제조품목 판매정보 */
BEGIN

SET NOCOUNT ON
SET ARITHABORT ON
	
DECLARE	 @COMP_CODE		NVARCHAR(08)
		,@DIV_CODE		NVARCHAR(08)
		,@SALE_DATE_FR	NVARCHAR(08)
		,@SALE_DATE_TO	NVARCHAR(08)
		,@DEPT_CODE		NVARCHAR(08)
		,@WH_CODE		NVARCHAR(08)
		,@ITEM_CODE		NVARCHAR(20)
		,@INOUT_DATE	NVARCHAR(08)

	SET @COMP_CODE		= #{S_COMP_CODE}
	SET @DIV_CODE		= #{DIV_CODE}
	SET @SALE_DATE_FR	= #{SALE_DATE_FR}
	SET @SALE_DATE_TO	= #{SALE_DATE_TO}
	SET @DEPT_CODE		= #{DEPT_CODE}
	SET @WH_CODE		= #{WH_CODE}
	SET @ITEM_CODE		= #{PROD_ITEM_CODE}
	SET @INOUT_DATE		= #{INOUT_DATE}

	SELECT 
		 B.COMP_CODE				AS COMP_CODE
		,B.DIV_CODE					AS DIV_CODE
		,A.DEPT_CODE				AS DEPT_CODE
		,D.TREE_NAME				AS DEPT_NAME
		,B.WH_CODE					AS WH_CODE
		,E.TREE_NAME				AS WH_NAME
		,B.ITEM_CODE				AS PROD_ITEM_CODE
		,MAX(C.ITEM_NAME)			AS PROD_ITEM_NAME
		,SUM(B.SALE_Q)				AS SALE_Q
		,MAX(STOCK_UNIT)			AS STOCK_UNIT
		FROM         SSA100T A WITH(NOLOCK)
		  INNER JOIN SSA110T B WITH(NOLOCK)	ON A.COMP_CODE = B.COMP_CODE
										   AND A.DIV_CODE  = B.DIV_CODE
										   AND A.BILL_NUM  = B.BILL_NUM
										   AND EXISTS(SELECT ITEM_CODE FROM BPR200T WITH(NOLOCK) 
																	   WHERE COMP_CODE		= B.COMP_CODE 
																		 AND DIV_CODE		= B.DIV_CODE 
																		 AND ITEM_CODE		= B.ITEM_CODE 
																		 AND ITEM_ACCOUNT	= '10')
		  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = B.COMP_CODE AND C.ITEM_CODE = B.ITEM_CODE	  
		  INNER JOIN BSA210T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
           								   AND D.TYPE_LEVEL = A.DIV_CODE
           								   AND D.TREE_CODE = A.DEPT_CODE
          INNER JOIN BSA220T E WITH(NOLOCK) ON B.COMP_CODE = E.COMP_CODE 
          								   AND B.DIV_CODE  = E.TYPE_LEVEL 
          								   AND B.WH_CODE   = E.TREE_CODE
          								   
		--AND C.USE_YN = 'Y'
	WHERE A.COMP_CODE  = @COMP_CODE
	  AND A.DIV_CODE   = @DIV_CODE
	  AND A.SALE_DATE &gt;= @SALE_DATE_FR
	  AND A.SALE_DATE &lt;= @SALE_DATE_TO
	  AND B.ITEM_CODE IN (SELECT PROD_ITEM_CODE FROM BPR500T WITH(NOLOCK) 
	  										   WHERE COMP_CODE 		  = B.COMP_CODE 
	  										     AND DIV_CODE  		  = B.DIV_CODE
	  										     AND PROD_ITEM_CODE	  = B.ITEM_CODE 
	  										     AND CHILD_ITEM_CODE != '$')
	  
	  AND (@DEPT_CODE  = '' OR (@DEPT_CODE != ''	AND A.DEPT_CODE = @DEPT_CODE))
	  AND (@WH_CODE    = '' OR (@WH_CODE   != ''	AND B.WH_CODE	= @WH_CODE))
	  AND (@ITEM_CODE  = '' OR (@ITEM_CODE != ''	AND B.ITEM_CODE	= @ITEM_CODE))
	
		GROUP BY B.COMP_CODE, B.DIV_CODE, A.DEPT_CODE,D.TREE_NAME, B.WH_CODE,E.TREE_NAME, B.ITEM_CODE
		HAVING SUM(B.SALE_Q) != 0.0
	
		ORDER BY B.COMP_CODE, B.DIV_CODE, A.DEPT_CODE,D.TREE_NAME, B.WH_CODE,E.TREE_NAME, B.ITEM_CODE

SET ARITHABORT OFF
SET NOCOUNT OFF

END

	</select>	
	<select id="biv202ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
	
/* 제조품목 원자재 품목(투입)집계 */

BEGIN

SET NOCOUNT ON
SET ARITHABORT ON
	
	DECLARE	 @COMP_CODE		NVARCHAR(08)
			,@DIV_CODE		NVARCHAR(08)
			,@SALE_DATE_FR	NVARCHAR(08)
			,@SALE_DATE_TO	NVARCHAR(08)
			,@DEPT_CODE		NVARCHAR(08)
			,@WH_CODE		NVARCHAR(08)
			,@ITEM_CODE		NVARCHAR(20)
			,@INOUT_DATE	NVARCHAR(08)
			,@USER_ID		NVARCHAR(100)
			,@FLAG			NVARCHAR(01)
			,@ERROR_DESC	NVARCHAR(1000)
			,@WON_CALC_BAS	NVARCHAR(01)
	
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{DIV_CODE}
		SET @SALE_DATE_FR	= #{SALE_DATE_FR}
		SET @SALE_DATE_TO	= #{SALE_DATE_TO}
		SET @DEPT_CODE		= #{DEPT_CODE_G}
		SET @WH_CODE		= #{WH_CODE_G}
		SET @ITEM_CODE		= #{PROD_ITEM_CODE_G}
		SET @INOUT_DATE		= #{INOUT_DATE}
		SET @USER_ID		= #{S_USER_ID}
		SET @WON_CALC_BAS	= #{WON_CALC_BAS}

	SELECT
			 A.COMP_CODE					AS COMP_CODE
			,A.DIV_CODE						AS DIV_CODE
			,A.DEPT_CODE					AS DEPT_CODE
			,A.WH_CODE						AS WH_CODE
			,@ITEM_CODE						AS PROD_ITEM_CODE
			,MAX(A.ITEM_CODE)				AS ITEM_CODE
			,MAX(B.ITEM_NAME)				AS ITEM_NAME
			,SUM(A.SALE_Q)					AS SALE_Q
			,SUM(A.INOUT_Q)					AS INOUT_Q
			,CASE WHEN @WON_CALC_BAS = '1' THEN CEILING(SUM(A.INOUT_Q))
				  WHEN @WON_CALC_BAS = '2' THEN FLOOR(SUM(A.INOUT_Q))
				  WHEN @WON_CALC_BAS = '3' THEN ROUND(SUM(A.INOUT_Q), 0) END AS CALC_INOUT_Q
			,@INOUT_DATE					AS INOUT_DATE
			,A.INOUT_TYPE_DETAIL			AS INOUT_TYPE_DETAIL
			,A.INOUT_NUM					AS INOUT_NUM
			,A.INOUT_SEQ					AS INOUT_SEQ
			,CASE WHEN ISNULL(A.INOUT_NUM,'') = '' THEN 'N' ELSE 'D' END FLAG
			,CASE WHEN ISNULL(A.INOUT_NUM,'') = '' THEN '미확정' ELSE '확정' END CONFIRM_FLAG
			,CASE WHEN ISNULL(A.INOUT_NUM,'') = '' THEN '미확정' ELSE '확정' END CONFIRM_FLAG_DUMMY
			,A.INSERT_DB_USER
			,A.INSERT_DB_TIME
	FROM(
		SELECT 
				 B.COMP_CODE					AS COMP_CODE
				,B.DIV_CODE						AS DIV_CODE
				,A.DEPT_CODE					AS DEPT_CODE
				,B.WH_CODE						AS WH_CODE
				,C.CHILD_ITEM_CODE				AS ITEM_CODE
				--,B.ITEM_CODE					AS PROD_ITEM_CODE
				,(B.SALE_Q)						AS SALE_Q
				,(((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * (B.SALE_Q)) + ((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * (B.SALE_Q) * ((C.LOSS_RATE) / 100))) AS INOUT_Q
				,ISNULL(C.UNIT_Q, 1.0) 			AS UNIT_Q
				,ISNULL(C.PROD_UNIT_Q, 1.0) 	AS PROD_UNIT_Q
				,ISNULL(C.LOSS_RATE, 1.0) 		AS LOSS_RATE
				,D.INOUT_NUM
				,D.INOUT_SEQ
				,ISNULL(D.INOUT_TYPE_DETAIL, '10') AS INOUT_TYPE_DETAIL
				,CASE WHEN ISNULL(D.INOUT_NUM,'') = '' THEN @USER_ID  ELSE D.UPDATE_DB_USER END AS INSERT_DB_USER
				,CASE WHEN ISNULL(D.INOUT_NUM,'') = '' THEN GETDATE() ELSE D.UPDATE_DB_TIME END AS INSERT_DB_TIME				
		FROM       SSA100T A WITH(NOLOCK)
		INNER JOIN SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
										 AND A.DIV_CODE	 = B.DIV_CODE
										 AND A.BILL_NUM	 = B.BILL_NUM
										 AND EXISTS(SELECT ITEM_CODE FROM BPR200T WITH(NOLOCK)
																	WHERE COMP_CODE		 = B.COMP_CODE 
																		AND DIV_CODE	 = B.DIV_CODE 
																		AND ITEM_CODE	 = B.ITEM_CODE
																		AND ITEM_ACCOUNT = '10')
		INNER JOIN BPR500T C WITH(NOLOCK) ON C.COMP_CODE 	   = B.COMP_CODE 
										 AND C.DIV_CODE  	   = B.DIV_CODE 
										 AND C.PROD_ITEM_CODE  = B.ITEM_CODE 
										 AND C.CHILD_ITEM_CODE != '$'
		LEFT JOIN BTR100T  D WITH(NOLOCK) ON D.COMP_CODE  = B.COMP_CODE  
										 AND D.DIV_CODE   = B.DIV_CODE 
										 AND D.ITEM_CODE  = C.CHILD_ITEM_CODE
										 AND D.DEPT_CODE  = A.DEPT_CODE
										 AND D.WH_CODE    = B.WH_CODE										 
										 AND D.CREATE_LOC        = '3' 
										 AND D.INOUT_TYPE        = '2' 
										 AND D.INOUT_TYPE_DETAIL = '10'
										 AND D.INOUT_CODE = '000000'

																		
										 
	WHERE A.COMP_CODE  = @COMP_CODE
		AND A.DIV_CODE = @DIV_CODE
		AND A.SALE_DATE &gt;= @SALE_DATE_FR
		AND A.SALE_DATE &lt;= @SALE_DATE_TO
		AND (@DEPT_CODE  = '' OR (@DEPT_CODE != ''	AND A.DEPT_CODE = @DEPT_CODE))
		AND (@WH_CODE    = '' OR (@WH_CODE	 != ''	AND B.WH_CODE	= @WH_CODE))
		--AND (@ITEM_CODE  = '' OR (@ITEM_CODE != ''	AND B.ITEM_CODE	= @ITEM_CODE))
		) A
		INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE 
										 AND B.ITEM_CODE = A.ITEM_CODE
	
		GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, A.WH_CODE, A.ITEM_CODE, A.INOUT_TYPE_DETAIL, A.INOUT_NUM, A.INOUT_SEQ, A.INSERT_DB_USER, A.INSERT_DB_TIME
		HAVING SUM(A.INOUT_Q) &gt; 0
		ORDER BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, A.WH_CODE, A.ITEM_CODE

SET ARITHABORT OFF
SET NOCOUNT OFF

END
	</select>		
<insert id="biv202ukrvServiceImpl.insertLog" parameterType="Map"> 

INSERT INTO L_MTR100T
     ( KEY_VALUE		,OPR_FLAG
      ,COMP_CODE        ,DIV_CODE           ,SALE_DATE_FR           ,SALE_DATE_TO           ,DEPT_CODE
	  ,WH_CODE			,PROD_ITEM_CODE	    ,ITEM_CODE	  			,SEQ				    ,LEVEL
	  ,SALE_Q			,INOUT_Q	  	    ,INOUT_NUM     	    	,INOUT_SEQ	            ,INOUT_DATE
	  ,INSERT_DB_USER	,INSERT_DB_TIME 	,UPDATE_DB_USER 	    ,UPDATE_DB_TIME
	 
    )
VALUES
     ( #{KEY_VALUE}     , #{OPR_FLAG}
      ,#{S_COMP_CODE}   ,#{DIV_CODE}           ,#{SALE_DATE_FR}     ,#{SALE_DATE_TO}        ,#{DEPT_CODE}
	  ,#{WH_CODE}		,#{PROD_ITEM_CODE}	   ,#{ITEM_CODE}	  	,#{SEQ}				    ,#{LEVEL}
	  ,#{SALE_Q}		,#{INOUT_Q}	  		   ,#{INOUT_NUM}     	,#{INOUT_SEQ}	    	,#{INOUT_DATE}        
	  ,#{S_USER_ID}		, GETDATE()			   ,#{S_USER_ID}		, GETDATE()
     
     )	

</insert>	

<update id="biv202ukrvServiceImpl.spRawItemReducing" parameterType="Map" statementType="CALLABLE">
		
		{call SP_STOCK_RawItemReducing (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>	
</mapper>