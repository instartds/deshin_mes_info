<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv130ukrvService">

	<select id="biv130ukrvService.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>

	<select id="biv130ukrvService.selectMasterList" parameterType="Map" resultType="rMap">	/* 조회 */
	/* nbiv130ukrv.Cbiv130ukrv[fnBiv130QStd] Query01 */
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드 */

	                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고코드 */
	                  , @WH_CELL_CODE       NVARCHAR(20)                /* (선택) 창고 CELL코드 */

	                  , @COUNT_DATE         NVARCHAR(10)                /* (필수) 실사선별일 */

	                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID */

	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @DIV_CODE       = #{DIV_CODE}

	    SET @WH_CODE        = #{WH_CODE}
	    SET @WH_CELL_CODE   = #{WH_CELL_CODE}

	    SET @COUNT_DATE     = #{COUNT_DATE}

	    SET @USER_ID        = #{S_USER_ID}

	    DECLARE         @RefItem            NVARCHAR(01)

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID = @USER_ID

	    SET @RefItem = ISNULL(@RefItem, '0')


	    SELECT
	           A.DIV_CODE
	         , A.COUNT_DATE
	         , A.WH_CODE
	         , A.WH_CELL_CODE
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                                  AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , A.GOOD_STOCK_BOOK_Q
	         , A.BAD_STOCK_BOOK_Q
	         , A.GOOD_STOCK_Q
	         , A.BAD_STOCK_Q
	         , CASE WHEN A.COUNT_CONT_DATE = '00000000' THEN ''
	                ELSE uniLITE.fnGetUserDate(A.COMP_CODE, A.COUNT_CONT_DATE)
	           END                                                  AS COUNT_CONT_DATE
	         , A.COUNT_FLAG
	    FROM              BIV300T A  WITH (NOLOCK)
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                              AND C1.ITEM_CODE = A.ITEM_CODE
	    WHERE  A.COMP_CODE    = @COMP_CODE
	    AND    A.DIV_CODE     = @DIV_CODE
	    AND    A.WH_CODE      = @WH_CODE
	    AND    A.WH_CELL_CODE = @WH_CELL_CODE
	    AND    A.COUNT_DATE   = @COUNT_DATE
	    ORDER BY A.ITEM_CODE

	    SET NOCOUNT ON
	    SET ARITHABORT ON
	END
	</select>

	<select id="biv130ukrvService.selectMasterList2" parameterType="Map" resultType="rMap">	/* 실사등록 조회 */
	/* biv130ukrv.Cbiv130ukrv[fnbiv130QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT A.COMP_CODE
	         , A.DIV_CODE
	         , A.WH_CODE
	         , A.COUNT_DATE
	         , C2.ITEM_ACCOUNT
	         , M1.LEVEL_NAME   AS ITEM_LEVEL1
	         , M2.LEVEL_NAME   AS ITEM_LEVEL2
	         , M3.LEVEL_NAME   AS ITEM_LEVEL3
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                              AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , ISNULL(C1.UNIT_WGT, 1.0)                         AS UNIT_WGT
	         , C1.WGT_UNIT
	         , A.WH_CELL_CODE
	         , C3.WH_CELL_NAME
	         , A.LOT_NO
	         , A.GOOD_STOCK_BOOK_Q
	         , A.BAD_STOCK_BOOK_Q
	         , A.GOOD_STOCK_BOOK_Q * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_BOOK_W
	         , A.BAD_STOCK_BOOK_Q  * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_BOOK_W
	         , A.GOOD_STOCK_Q
	         , A.BAD_STOCK_Q
	         , A.GOOD_STOCK_Q      * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_W
	         , A.BAD_STOCK_Q       * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_W
	         , A.COUNT_FLAG
	         , A.COUNT_CONT_DATE
	         , A.REMARK
	         , A.UPDATE_DB_USER
	         , A.UPDATE_DB_TIME
	    FROM              BIV300T A  WITH (NOLOCK)
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.ITEM_CODE    = A.ITEM_CODE
	           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.DIV_CODE     = A.DIV_CODE
	                                              AND C2.ITEM_CODE    = A.ITEM_CODE
	           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
	                                              AND C3.DIV_CODE     = A.DIV_CODE
	                                              AND C3.WH_CODE      = A.WH_CODE
	                                              AND C3.WH_CELL_CODE = A.WH_CELL_CODE
	           LEFT  JOIN BPR000T M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
	                                              AND M1.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M1.LEVEL2       = '*'
	                                              AND M1.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
	                                              AND M2.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M2.LEVEL2      != '*'
	                                              AND M2.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M2.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M3 WITH (NOLOCK) ON M3.COMP_CODE    = C1.COMP_CODE
	                                              AND M3.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M3.LEVEL2      != '*'
	                                              AND M3.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M3.LEVEL3      != '*'
	                                              AND M3.LEVEL3       = C1.ITEM_LEVEL3
	           LEFT  JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE    = A.COMP_CODE
	                                              AND M4.MAIN_CODE    = N'B084'
	                                              AND M4.SUB_CODE     = N'D'
	    WHERE  A.COMP_CODE        = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE         = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE          = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE     = #{WH_CELL_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
	    AND    A.COUNT_DATE       = #{COUNT_DATE}
	    </if>
	    AND    C1.STOCK_CARE_YN   = 'Y'
	    AND    C2.REAL_CARE_YN    = 'Y'

	    /* 2009/12/09 창고 Cell 관리를 할 경우 창고 Cell 코드가 있는 데이터만 조회 */
	    AND  ((A.WH_CELL_CODE     &lt; '' AND ISNULL(M4.REF_CODE1, 'N') = 'Y') OR (ISNULL(M4.REF_CODE1, 'N') = 'N'))
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C2.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	            END)           LIKE #{ITEM_NAME}
		</if>

	    <if test="@foren.Ognl@isNotEmpty(DIFF_YN)">
	    AND (((A.GOOD_STOCK_BOOK_Q != A.GOOD_STOCK_Q OR A.BAD_STOCK_BOOK_Q != A.BAD_STOCK_Q) AND #{DIFF_YN}   = 'Y') OR (#{DIFF_YN}   = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(BOOK_ZERO)">
	    AND (((A.GOOD_STOCK_BOOK_Q != 0.0            OR A.BAD_STOCK_BOOK_Q != 0.0          ) AND #{BOOK_ZERO} = 'Y') OR (#{BOOK_ZERO} = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CONT_ZERO)">
	    AND (((A.GOOD_STOCK_Q      != 0.0            OR A.BAD_STOCK_Q      != 0.0          ) AND #{CONT_ZERO} = 'Y') OR (#{CONT_ZERO} = 'N'))
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	    AND    C1.ITEM_LEVEL1     = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	    AND    C1.ITEM_LEVEL2     = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	    AND    C1.ITEM_LEVEL3     = #{ITEM_LEVEL3}
		</if>
	    ORDER BY A.ITEM_CODE

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<select id="biv130ukrvService.insertMasterList" parameterType="Map" resultType="rMap">	/* 실행 */
	/*biv130ukrv.Cbiv130ukrv[fnBiv130Save] Query02*/
    /*실사선별 저장*/
    BEGIN
        DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
                      , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/

                      , @WH_CODE            NVARCHAR(08)                /* (필수) 창고코드*/
                      , @WH_CELL_CODE       NVARCHAR(20)                /* (선택) 창고 CELL코드*/

                      , @COUNT_DATE         NVARCHAR(08)                /* (필수) 실사선별일*/

                      , @ITEM_ACCOUNT       NVARCHAR(02)                /* (선택) 품목 계정코드*/

                      , @ITEM_LEVEL1        NVARCHAR(10)                /* (선택) 대분류*/
                      , @ITEM_LEVEL2        NVARCHAR(10)                /* (선택) 중분류*/
                      , @ITEM_LEVEL3        NVARCHAR(10)                /* (선택) 소분류*/

                      , @ABC_FLAG           NVARCHAR(01)                /* (선택) ABC Flag*/

                      , @QRY_TYPE           NVARCHAR(01)                /* (필수) 실사주기 적용 유형(1: 실사주기적용 예, 2: 실사주기적용 아니오)*/
                      , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/

        SET NOCOUNT ON
        SET ARITHABORT ON

    /*  에러변수*/
        DECLARE         @ErrorCode          NVARCHAR(20)                /* 에러코드*/
                      , @ErrorDesc          NVARCHAR(1000)              /* 에러 메세지*/

    /*  1. 변수 값 할당 */
        SET @COMP_CODE       = #{S_COMP_CODE}
        SET @DIV_CODE        = #{DIV_CODE}

        SET @WH_CODE         = #{WH_CODE}
        SET @WH_CELL_CODE    = #{WH_CELL_CODE}

        SET @COUNT_DATE      = #{COUNT_DATE}

        SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

        SET @ITEM_LEVEL1     = #{ITEM_LEVEL1}
        SET @ITEM_LEVEL2     = #{ITEM_LEVEL2}
        SET @ITEM_LEVEL3     = #{ITEM_LEVEL3}

        SET @ABC_FLAG        = #{ABC_FLAG}

        SET @QRY_TYPE        = #{QRY_TYPE}
        SET @USER_ID         = #{S_USER_ID}

    /*  2. 실사선별시 전체 품목 적용여부*/
        DECLARE         @TotalItemYN        NVARCHAR(01)

        SELECT TOP 1 @TotalItemYN = ISNULL(REF_CODE1, 'N')              /* 실사선별시 전체 품목 적용여부*/
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE  = @COMP_CODE
        AND    MAIN_CODE  = N'I003'
        AND    SUB_CODE   = N'1'

        SET @TotalItemYN = ISNULL(@TotalItemYN, 'N')

    /*  3. LOT NO 관리여부 설정*/
        DECLARE         @LOTFlagYN           NVARCHAR(01)

        SELECT TOP 1 @LOTFlagYN = ISNULL(REF_CODE1, 'N')                /* 재고합산 관리여부(C: LOT 관리여부)*/
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE  = @COMP_CODE
        AND    MAIN_CODE  = N'B084'
        AND    SUB_CODE   = N'C'

        SET @LOTFlagYN = ISNULL(@LOTFlagYN, 'N')

    /*  4. 창고 Cell 관리여부 설정*/
        DECLARE         @WhCellFlagYN           NVARCHAR(01)

        SELECT TOP 1 @WhCellFlagYN = ISNULL(REF_CODE1, 'N')             /* 재고합산 관리여부(D: 창고 Cell 관리여부)*/
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE  = @COMP_CODE
        AND    MAIN_CODE  = N'B084'
        AND    SUB_CODE   = N'D'

        SET @LOTFlagYN = ISNULL(@LOTFlagYN, 'N')

    /*  5. 가장 최근 마감월 조회*/
        DECLARE         @LastYYYYMM          NVARCHAR(06)     /* 가장 최근 마감월*/

    /*  마감체크*/
        SELECT TOP 1 @LastYYYYMM = MAX(LAST_YYYYMM)
        FROM   BIV900T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    DIV_CODE  = @DIV_CODE
        AND    WH_CODE   = @WH_CODE

        IF ISNULL(@LastYYYYMM, '000000') &gt;= CONVERT(NVARCHAR(06), @COUNT_DATE, 112)
        BEGIN
            SET @ErrorCode = '54100'
            GOTO ERROR_HANDLER
        END

    /*  실사선별 보다 작은 가장 최근 마감정보 조회*/
        SELECT TOP 1 @LastYYYYMM = MAX(BASIS_YYYYMM)
        FROM   BIV200T WITH (NOLOCK)
        WHERE  COMP_CODE    = @COMP_CODE
        AND    DIV_CODE     = @DIV_CODE
        AND    WH_CODE      = @WH_CODE
        AND    BASIS_YYYYMM &lt; CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @COUNT_DATE), 112)

        SET @LastYYYYMM = ISNULL(@LastYYYYMM, '190001')

    /*  5. 임시 테이블 선언*/
        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#uniLITE200810301500'))
           DROP TABLE #uniLITE200810301500

        CREATE TABLE #uniLITE200810301500
                     (
                     TYPE_FLAG              NVARCHAR(02)
                   , COMP_CODE              NVARCHAR(08)
                   , DIV_CODE               NVARCHAR(08)
                   , COUNT_DATE             NVARCHAR(08)
                   , WH_CODE                NVARCHAR(08)
                   , WH_CELL_CODE           NVARCHAR(20)   DEFAULT ''
                   , ITEM_CODE              NVARCHAR(20)
                   , LOT_NO                 NVARCHAR(20)   DEFAULT ''
                   , COUNT_CONT_DATE        NVARCHAR(08)
                   , GOOD_STOCK_BOOK_Q      NUMERIC(20, 6) DEFAULT 0
                   , BAD_STOCK_BOOK_Q       NUMERIC(20, 6) DEFAULT 0
                   , GOOD_STOCK_Q           NUMERIC(20, 6) DEFAULT 0
                   , BAD_STOCK_Q            NUMERIC(20, 6) DEFAULT 0
                   , GOOD_STOCK_LOT_Q       NUMERIC(20, 6) DEFAULT 0
                   , BAD_STOCK_LOT_Q        NUMERIC(20, 6) DEFAULT 0
                   , COUNT_FLAG             NVARCHAR(01)
                   , UPDATE_DB_USER         NVARCHAR(100)
                   , UPDATE_DB_TIME         SMALLDATETIME
                     )

    /*  6. 해당일자의 실사정보 삭제*/
        DELETE BIV300T
        WHERE  COMP_CODE    = @COMP_CODE
        AND    DIV_CODE     = @DIV_CODE
        AND    WH_CODE      = @WH_CODE
        AND  ((WH_CELL_CODE = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
        AND    COUNT_DATE   = @COUNT_DATE

    /*  7. 실사 데이터 생성(실사주기 적용)*/
    /*  현재고 생성*/
        INSERT INTO #uniLITE200810301500
              (TYPE_FLAG, COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO, COUNT_CONT_DATE, COUNT_FLAG
             , GOOD_STOCK_BOOK_Q, BAD_STOCK_BOOK_Q, GOOD_STOCK_Q, BAD_STOCK_Q, GOOD_STOCK_LOT_Q, BAD_STOCK_LOT_Q
             , UPDATE_DB_USER, UPDATE_DB_TIME)
        SELECT '10' AS TYPE_FLAG, A.COMP_CODE, A.DIV_CODE, @COUNT_DATE AS COUNT_DATE, A.WH_CODE, '' AS WH_CELL_CODE, A.ITEM_CODE, '' AS LOT_NO, '00000000' AS COUNT_CONT_DATE, 'O' AS COUNT_FLAG
             , A.GOOD_STOCK_Q AS GOOD_STOCK_BOOK_Q, A.BAD_STOCK_Q AS BAD_STOCK_BOOK_Q, A.GOOD_STOCK_Q, A.BAD_STOCK_Q, A.GOOD_STOCK_LOT_Q, A.BAD_STOCK_LOT_Q
             , @USER_ID AS UPDATE_DB_USER
             , CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
        FROM   (
               SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                    , SUM(ISNULL(A.GOOD_STOCK_Q, 0))     AS GOOD_STOCK_Q,     SUM(ISNULL(A.BAD_STOCK_Q, 0))     AS BAD_STOCK_Q
                    , SUM(ISNULL(A.GOOD_STOCK_LOT_Q, 0)) AS GOOD_STOCK_LOT_Q, SUM(ISNULL(A.BAD_STOCK_LOT_Q, 0)) AS BAD_STOCK_LOT_Q
               FROM   (
                      SELECT A.COMP_CODE, B.DIV_CODE, A.ITEM_CODE, @WH_CODE AS WH_CODE, 0 AS GOOD_STOCK_Q, 0 AS BAD_STOCK_Q, 0 AS GOOD_STOCK_LOT_Q, 0 AS BAD_STOCK_LOT_Q
                      FROM              BPR100T  A  WITH (NOLOCK)
                             INNER JOIN BPR200T  B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE                         /* 사업장 품목*/
                                                                 AND B.DIV_CODE     = @DIV_CODE
                                                                 AND B.ITEM_CODE    = A.ITEM_CODE
                                                                 AND B.REAL_CARE_YN = 'Y'                                 /* 실사대상 여부*/
                             LEFT  JOIN BIV100T  C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                                                 AND C.DIV_CODE     = B.DIV_CODE
                                                                 AND C.ITEM_CODE    = B.ITEM_CODE
                                                                 AND C.WH_CODE      = @WH_CODE
                      WHERE  A.COMP_CODE        = @COMP_CODE
                      AND    A.USE_YN           = 'Y'                                                                     /* 사용여부*/
                      AND    A.STOCK_CARE_YN    = 'Y'                                                                     /* 재고관리대상*/
                      AND  ((A.ITEM_LEVEL1      = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '')  OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                      AND  ((A.ITEM_LEVEL2      = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '')  OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                      AND  ((A.ITEM_LEVEL3      = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '')  OR (@ITEM_LEVEL3  = ''))        /* 소분류*/

                      AND  ((B.ITEM_ACCOUNT     = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '')  OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                      AND  ((B.ABC_FLAG         = @ABC_FLAG     AND @ABC_FLAG     != '')  OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                      AND  ((B.REAL_CARE_PERIOD &gt; ''            AND @TotalItemYN   = 'N' AND  @QRY_TYPE     = '1') OR (@TotalItemYN  = 'Y'))       /* 모든 품목 선택시 적용*/
                      UNION ALL
                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                           , ISNULL(A.STOCK_Q, 0) - ISNULL(A.BAD_STOCK_Q, 0)      AS GOOD_STOCK_Q
                           , ISNULL(A.BAD_STOCK_Q, 0)                             AS BAD_STOCK_Q
                           , SUM(ISNULL(C.STOCK_Q, 0) - ISNULL(C.BAD_STOCK_Q, 0)) AS GOOD_STOCK_LOT_Q
                           , SUM(ISNULL(C.BAD_STOCK_Q, 0))                        AS BAD_STOCK_LOT_Q
                      FROM              BIV200T  A  WITH (NOLOCK)
                             INNER JOIN (
                                        SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                        FROM              BIV200T  A  WITH (NOLOCK)
                                               INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE      /* 품목*/
                                                                                   AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                                   AND C1.USE_YN        = 'Y'              /* 사용여부*/
                                                                                   AND C1.STOCK_CARE_YN = 'Y'              /* 재고관리대상*/
                                               INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE      /* 사업장 품목*/
                                                                                   AND C2.DIV_CODE      = A.DIV_CODE
                                                                                   AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                                   AND C2.REAL_CARE_YN  = 'Y'              /* 실사대상 여부*/
                                        WHERE  A.COMP_CODE      = @COMP_CODE
                                        AND    A.DIV_CODE       = @DIV_CODE
                                        AND    A.WH_CODE        = @WH_CODE
                                        AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                        AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                        AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                                        AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                                        AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                                        AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                                        AND  ((C2.ABC_FLAG      = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
                                        ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                 AND B.DIV_CODE     = A.DIV_CODE
                                                                 AND B.WH_CODE      = A.WH_CODE
                                                                 AND B.ITEM_CODE    = A.ITEM_CODE
                                                                 AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                             LEFT  JOIN BIV250T  C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                                                 AND C.DIV_CODE     = A.DIV_CODE
                                                                 AND C.WH_CODE      = A.WH_CODE
                                                                 AND C.ITEM_CODE    = A.ITEM_CODE
                                                                 AND C.BASIS_YYYYMM = A.BASIS_YYYYMM
                                                                 AND C.SUM_TYPE     = 'C'
                                                                 AND @LOTFlagYN     = 'Y'
                      GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.STOCK_Q, A.BAD_STOCK_Q
                      UNION ALL
                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS GOOD_STOCK_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS BAD_STOCK_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS GOOD_STOCK_LOT_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' AND A.LOT_NO &gt; '' AND @LOTFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS BAD_STOCK_LOT_Q
                      FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                             INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                     /* 품목*/
                                                                 AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                 AND C1.USE_YN        = 'Y'                             /* 사용여부*/
                                                                 AND C1.STOCK_CARE_YN = 'Y'                             /* 재고관리대상*/
                             INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                     /* 사업장 품목*/
                                                                 AND C2.DIV_CODE      = A.DIV_CODE
                                                                 AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                 AND C2.REAL_CARE_YN  = 'Y'                             /* 실사대상 여부*/
                      WHERE  A.COMP_CODE       = @COMP_CODE
                      AND    A.DIV_CODE        = @DIV_CODE
                      AND    A.WH_CODE         = @WH_CODE
                      AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                      AND    A.INOUT_DATE     &lt;= @COUNT_DATE
                      AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                      AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                      AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                      AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                      AND  ((C2.ABC_FLAG       = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
    <if test="CELL_FLAG_YN == &quot;Y&quot;">
    				UNION ALL
                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                           , ISNULL(A.STOCK_Q, 0) - ISNULL(A.BAD_STOCK_Q, 0)      AS GOOD_STOCK_Q
                           , ISNULL(A.BAD_STOCK_Q, 0)                             AS BAD_STOCK_Q
                           , SUM(ISNULL(C.STOCK_Q, 0) - ISNULL(C.BAD_STOCK_Q, 0)) AS GOOD_STOCK_LOT_Q
                           , SUM(ISNULL(C.BAD_STOCK_Q, 0))                        AS BAD_STOCK_LOT_Q
                      FROM              BIV200T  A  WITH (NOLOCK)
                             INNER JOIN (
                                        SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                        FROM              BIV200T  A  WITH (NOLOCK)
                                               INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE      /* 품목*/
                                                                                   AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                                   AND C1.USE_YN        = 'Y'              /* 사용여부*/
                                                                                   AND C1.STOCK_CARE_YN = 'Y'              /* 재고관리대상*/
                                               INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE      /* 사업장 품목*/
                                                                                   AND C2.DIV_CODE      = A.DIV_CODE
                                                                                   AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                                   AND C2.REAL_CARE_YN  = 'Y'              /* 실사대상 여부*/
                                        WHERE  A.COMP_CODE      = @COMP_CODE
                                        AND    A.DIV_CODE       = @DIV_CODE
                                        AND    A.WH_CODE        = @WH_CODE
                                        AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                        AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                        AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                                        AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                                        AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                                        AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                                        AND  ((C2.ABC_FLAG      = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
                                        ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                 AND B.DIV_CODE     = A.DIV_CODE
                                                                 AND B.WH_CODE      = A.WH_CODE
                                                                 AND B.ITEM_CODE    = A.ITEM_CODE
                                                                 AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                             LEFT  JOIN BIV250T  C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                                                 AND C.DIV_CODE     = A.DIV_CODE
                                                                 AND C.WH_CODE      = A.WH_CODE
                                                                 AND C.ITEM_CODE    = A.ITEM_CODE
                                                                 AND C.BASIS_YYYYMM = A.BASIS_YYYYMM
                                                                 AND C.SUM_TYPE     = 'D'
                                                                 AND @WhCellFlagYN  = 'Y'
                      GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.STOCK_Q, A.BAD_STOCK_Q
                      UNION ALL
                      SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS GOOD_STOCK_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS BAD_STOCK_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS GOOD_STOCK_LOT_Q
                           , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                  WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' AND A.WH_CELL_CODE &gt; '' AND @WhCellFlagYN = 'Y' THEN      ISNULL(A.INOUT_Q, 0)
                                  ELSE 0 END                                             AS BAD_STOCK_LOT_Q
                      FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                             INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                     /* 품목*/
                                                                 AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                 AND C1.USE_YN        = 'Y'                             /* 사용여부*/
                                                                 AND C1.STOCK_CARE_YN = 'Y'                             /* 재고관리대상*/
                             INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                     /* 사업장 품목*/
                                                                 AND C2.DIV_CODE      = A.DIV_CODE
                                                                 AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                 AND C2.REAL_CARE_YN  = 'Y'                             /* 실사대상 여부*/
                      WHERE  A.COMP_CODE       = @COMP_CODE
                      AND    A.DIV_CODE        = @DIV_CODE
                      AND    A.WH_CODE         = @WH_CODE
                      AND  ((A.WH_CELL_CODE    = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
                      AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                      AND    A.INOUT_DATE     &lt;= @COUNT_DATE
                      AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                      AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                      AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                      AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                      AND  ((C2.ABC_FLAG       = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
    </if>
    				) A
               GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
               ) A

    /* LOT 현재고 생성 (창고 Cell관리를 안할 경우에 생성한다.)*/
       IF @LOTFlagYN = 'Y' AND @WhCellFlagYN != 'Y'
            INSERT INTO #uniLITE200810301500
                  (TYPE_FLAG, COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, ITEM_CODE, LOT_NO, COUNT_CONT_DATE, COUNT_FLAG
                 , GOOD_STOCK_BOOK_Q, BAD_STOCK_BOOK_Q, GOOD_STOCK_Q, BAD_STOCK_Q
                 , UPDATE_DB_USER, UPDATE_DB_TIME)
            SELECT '20' AS TYPE_FLAG, A.COMP_CODE, A.DIV_CODE, @COUNT_DATE AS COUNT_DATE, A.WH_CODE, A.ITEM_CODE, A.LOT_NO, '00000000' AS COUNT_CONT_DATE, 'O' AS COUNT_FLAG
                 , A.GOOD_STOCK_Q AS GOOD_STOCK_BOOK_Q, A.BAD_STOCK_Q AS BAD_STOCK_BOOK_Q, A.GOOD_STOCK_Q, A.BAD_STOCK_Q
                 , @USER_ID AS UPDATE_DB_USER
                 , CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
            FROM   (
                   SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.LOT_NO
                        , SUM(ISNULL(A.GOOD_STOCK_Q, 0)) AS GOOD_STOCK_Q, SUM(ISNULL(A.BAD_STOCK_Q, 0)) AS BAD_STOCK_Q
                   FROM   (
                          SELECT A.COMP_CODE, B.DIV_CODE, A.ITEM_CODE, @WH_CODE AS WH_CODE, C.LOT_NO, 0 AS GOOD_STOCK_Q, 0 AS BAD_STOCK_Q
                          FROM              BPR100T  A  WITH (NOLOCK)
                                 INNER JOIN BPR200T  B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE                         /* 사업장 품목*/
                                                                     AND B.DIV_CODE     = @DIV_CODE
                                                                     AND B.ITEM_CODE    = A.ITEM_CODE
                                                                     AND B.REAL_CARE_YN = 'Y'                                 /* 실사대상 여부*/
                                 INNER JOIN BIV150T  C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                                                     AND C.DIV_CODE     = B.DIV_CODE
                                                                     AND C.ITEM_CODE    = B.ITEM_CODE
                                                                     AND C.WH_CODE      = @WH_CODE
                                                                     AND C.SUM_TYPE     = 'C'
                          WHERE  A.COMP_CODE        = @COMP_CODE
                          AND    A.USE_YN           = 'Y'                                                                     /* 사용여부*/
                          AND    A.STOCK_CARE_YN    = 'Y'                                                                     /* 재고관리대상*/
                          AND  ((A.ITEM_LEVEL1      = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '')  OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                          AND  ((A.ITEM_LEVEL2      = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '')  OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                          AND  ((A.ITEM_LEVEL3      = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '')  OR (@ITEM_LEVEL3  = ''))        /* 소분류*/

                          AND  ((B.ITEM_ACCOUNT     = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '')  OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                          AND  ((B.ABC_FLAG         = @ABC_FLAG     AND @ABC_FLAG     != '')  OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                          UNION ALL
                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.LOT_NO
                               , ISNULL(A.STOCK_Q, 0) - ISNULL(A.BAD_STOCK_Q, 0) AS GOOD_STOCK_Q, ISNULL(A.BAD_STOCK_Q, 0) AS BAD_STOCK_Q
                          FROM              BIV250T  A  WITH (NOLOCK)
                                 INNER JOIN (
                                            SELECT A.COMP_CODE, A.KEY_STRING, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                            FROM              BIV250T  A  WITH (NOLOCK)
                                                   INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE      /* 품목*/
                                                                                       AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                                       AND C1.USE_YN        = 'Y'              /* 사용여부*/
                                                                                       AND C1.STOCK_CARE_YN = 'Y'              /* 재고관리대상*/
                                                   INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE      /* 사업장 품목*/
                                                                                       AND C2.DIV_CODE      = A.DIV_CODE
                                                                                       AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                                       AND C2.REAL_CARE_YN  = 'Y'              /* 실사대상 여부*/
                                            WHERE  A.COMP_CODE      = @COMP_CODE
                                            AND    A.SUM_TYPE       = 'C'
                                            AND    A.DIV_CODE       = @DIV_CODE
                                            AND    A.WH_CODE        = @WH_CODE
                                            AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                            AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                            AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                                            AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                                            AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                                            AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                                            AND  ((C2.ABC_FLAG      = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                                            GROUP BY A.COMP_CODE, A.KEY_STRING
                                            ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                     AND B.KEY_STRING   = A.KEY_STRING
                                                                     AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                          WHERE  A.COMP_CODE = @COMP_CODE
                          AND    A.SUM_TYPE  = 'C'
                          AND    A.DIV_CODE  = @DIV_CODE
                          AND    A.WH_CODE   = @WH_CODE
                          UNION ALL
                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.LOT_NO
                               , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                      ELSE 0 END                                             AS GOOD_STOCK_Q
                               , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                      ELSE 0 END                                             AS BAD_STOCK_Q
                          FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                                 INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                     /* 품목*/
                                                                     AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                     AND C1.USE_YN        = 'Y'                             /* 사용여부*/
                                                                     AND C1.STOCK_CARE_YN = 'Y'                             /* 재고관리대상*/
                                 INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                     /* 사업장 품목*/
                                                                     AND C2.DIV_CODE      = A.DIV_CODE
                                                                     AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                     AND C2.REAL_CARE_YN  = 'Y'                             /* 실사대상 여부*/
                          WHERE  A.COMP_CODE       = @COMP_CODE
                          AND    A.DIV_CODE        = @DIV_CODE
                          AND    A.WH_CODE         = @WH_CODE
                          AND    A.LOT_NO          &gt; ''
                          AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                          AND    A.INOUT_DATE     &lt;= @COUNT_DATE
                          AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                          AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                          AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                          AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                          AND  ((C2.ABC_FLAG       = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                          ) A
                   GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.LOT_NO
                   ) A

    /* 창고 Cell 현재고 생성*/
       IF @WhCellFlagYN = 'Y'
            INSERT INTO #uniLITE200810301500
                  (TYPE_FLAG, COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO, COUNT_CONT_DATE, COUNT_FLAG
                 , GOOD_STOCK_BOOK_Q, BAD_STOCK_BOOK_Q, GOOD_STOCK_Q, BAD_STOCK_Q
                 , UPDATE_DB_USER, UPDATE_DB_TIME)
            SELECT '30' AS TYPE_FLAG, A.COMP_CODE, A.DIV_CODE, @COUNT_DATE AS COUNT_DATE, A.WH_CODE, A.WH_CELL_CODE, A.ITEM_CODE, A.LOT_NO, '00000000' AS COUNT_CONT_DATE, 'O' AS COUNT_FLAG
                 , A.GOOD_STOCK_Q AS GOOD_STOCK_BOOK_Q, A.BAD_STOCK_Q AS BAD_STOCK_BOOK_Q, A.GOOD_STOCK_Q, A.BAD_STOCK_Q
                 , @USER_ID AS UPDATE_DB_USER
                 , CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
            FROM   (
                   SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO
                        , SUM(ISNULL(A.GOOD_STOCK_Q, 0)) AS GOOD_STOCK_Q, SUM(ISNULL(A.BAD_STOCK_Q, 0)) AS BAD_STOCK_Q
                   FROM   (
                          SELECT A.COMP_CODE, B.DIV_CODE, A.ITEM_CODE, @WH_CODE AS WH_CODE, C.WH_CELL_CODE, C.LOT_NO, 0 AS GOOD_STOCK_Q, 0 AS BAD_STOCK_Q
                          FROM              BPR100T  A  WITH (NOLOCK)
                                 INNER JOIN BPR200T  B  WITH (NOLOCK) ON   B.COMP_CODE    = A.COMP_CODE                         /* 사업장 품목*/
                                                                     AND   B.DIV_CODE     = @DIV_CODE
                                                                     AND   B.ITEM_CODE    = A.ITEM_CODE
                                                                     AND   B.REAL_CARE_YN = 'Y'                                 /* 실사대상 여부*/
                                 INNER JOIN BIV150T  C  WITH (NOLOCK) ON   C.COMP_CODE    = B.COMP_CODE
                                                                     AND   C.DIV_CODE     = B.DIV_CODE
                                                                     AND   C.ITEM_CODE    = B.ITEM_CODE
                                                                     AND   C.WH_CODE      = @WH_CODE
                                                                     AND ((C.WH_CELL_CODE = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
                                                                     AND   C.SUM_TYPE     = 'D'
                          WHERE  A.COMP_CODE        = @COMP_CODE
                          AND    A.USE_YN           = 'Y'                                                                     /* 사용여부*/
                          AND    A.STOCK_CARE_YN    = 'Y'                                                                     /* 재고관리대상*/
                          AND  ((A.ITEM_LEVEL1      = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '')  OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                          AND  ((A.ITEM_LEVEL2      = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '')  OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                          AND  ((A.ITEM_LEVEL3      = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '')  OR (@ITEM_LEVEL3  = ''))        /* 소분류*/

                          AND  ((B.ITEM_ACCOUNT     = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '')  OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                          AND  ((B.ABC_FLAG         = @ABC_FLAG     AND @ABC_FLAG     != '')  OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                          UNION ALL
                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO
                               , ISNULL(A.STOCK_Q, 0) - ISNULL(A.BAD_STOCK_Q, 0) AS GOOD_STOCK_Q, ISNULL(A.BAD_STOCK_Q, 0) AS BAD_STOCK_Q
                          FROM              BIV250T  A  WITH (NOLOCK)
                                 INNER JOIN (
                                            SELECT A.COMP_CODE, A.KEY_STRING, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                            FROM              BIV250T  A  WITH (NOLOCK)
                                                   INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE      /* 품목*/
                                                                                       AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                                       AND C1.USE_YN        = 'Y'              /* 사용여부*/
                                                                                       AND C1.STOCK_CARE_YN = 'Y'              /* 재고관리대상*/
                                                   INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE      /* 사업장 품목*/
                                                                                       AND C2.DIV_CODE      = A.DIV_CODE
                                                                                       AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                                       AND C2.REAL_CARE_YN  = 'Y'              /* 실사대상 여부*/
                                            WHERE  A.COMP_CODE      = @COMP_CODE
                                            AND    A.SUM_TYPE       = 'D'
                                            AND    A.DIV_CODE       = @DIV_CODE
                                            AND    A.WH_CODE        = @WH_CODE
                                            AND  ((A.WH_CELL_CODE   = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
                                            AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                            AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                            AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                                            AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                                            AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                                            AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                                            AND  ((C2.ABC_FLAG      = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                                            GROUP BY A.COMP_CODE, A.KEY_STRING
                                            ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                     AND B.KEY_STRING   = A.KEY_STRING
                                                                     AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                          WHERE  A.COMP_CODE    = @COMP_CODE
                          AND    A.SUM_TYPE     = 'D'
                          AND    A.DIV_CODE     = @DIV_CODE
                          AND    A.WH_CODE      = @WH_CODE
                          AND  ((A.WH_CELL_CODE = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
                          UNION ALL
                          SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO
                               , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '1' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                      ELSE 0 END                                             AS GOOD_STOCK_Q
                               , CASE WHEN A.INOUT_TYPE = '1' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '2' AND A.ITEM_STATUS = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                      WHEN A.INOUT_TYPE = '3' AND A.ITEM_STATUS = '2' THEN      ISNULL(A.INOUT_Q, 0)
                                      ELSE 0 END                                             AS BAD_STOCK_Q
                          FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                                 INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                     /* 품목*/
                                                                     AND C1.ITEM_CODE     = A.ITEM_CODE
                                                                     AND C1.USE_YN        = 'Y'                             /* 사용여부*/
                                                                     AND C1.STOCK_CARE_YN = 'Y'                             /* 재고관리대상*/
                                 INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                     /* 사업장 품목*/
                                                                     AND C2.DIV_CODE      = A.DIV_CODE
                                                                     AND C2.ITEM_CODE     = A.ITEM_CODE
                                                                     AND C2.REAL_CARE_YN  = 'Y'                             /* 실사대상 여부*/
                          WHERE  A.COMP_CODE       = @COMP_CODE
                          AND    A.DIV_CODE        = @DIV_CODE
                          AND    A.WH_CODE         = @WH_CODE
                          AND    A.WH_CELL_CODE    &gt; ''
                          AND  ((A.WH_CELL_CODE    = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
                          AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                          AND    A.INOUT_DATE     &lt;= @COUNT_DATE
                          AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
                          AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
                          AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
                          AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/
                          AND  ((C2.ABC_FLAG       = @ABC_FLAG     AND @ABC_FLAG     != '') OR (@ABC_FLAG     = ''))        /* ABC 구분*/
                          ) A
                   GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO
                   ) A

    /*  실사선별 데이터 등록*/
    	INSERT INTO BIV300T
          (COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO, COUNT_CONT_DATE, COUNT_FLAG
         , GOOD_STOCK_BOOK_Q, BAD_STOCK_BOOK_Q, GOOD_STOCK_Q, BAD_STOCK_Q
         , UPDATE_DB_USER, UPDATE_DB_TIME)
        SELECT COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, WH_CELL_CODE, ITEM_CODE, ISNULL(LOT_NO,'') AS LOT_NO, COUNT_CONT_DATE, COUNT_FLAG
             , GOOD_STOCK_BOOK_Q - GOOD_STOCK_LOT_Q AS GOOD_STOCK_BOOK_Q, BAD_STOCK_BOOK_Q - BAD_STOCK_LOT_Q AS BAD_STOCK_BOOK_Q
             , GOOD_STOCK_Q - GOOD_STOCK_LOT_Q AS GOOD_STOCK_Q, BAD_STOCK_Q - BAD_STOCK_LOT_Q AS BAD_STOCK_Q
             , UPDATE_DB_USER, UPDATE_DB_TIME
        FROM   #uniLITE200810301500
        WHERE  NOT (GOOD_STOCK_LOT_Q &gt; 0 AND GOOD_STOCK_BOOK_Q = GOOD_STOCK_LOT_Q)
        AND   ABS(GOOD_STOCK_BOOK_Q)+ABS(BAD_STOCK_BOOK_Q) != 0			/* -수량이 있을 수 있으므로 절대값으로 변경후 체크 */

    /* 8. Error Handler 처리*/
    ERROR_HANDLER:
        IF ISNULL(@ErrorCode, '') != ''
           SET @ErrorDesc = @ErrorCode + ';' + ISNULL(@ErrorDesc, '')

        SET NOCOUNT OFF
        SET ARITHABORT OFF

        SELECT TOP 1 ISNULL(@ErrorCode, '') AS ERROR_CODE, ISNULL(@ErrorDesc, '') AS ERROR_DESC
    END
	</select>
</mapper>