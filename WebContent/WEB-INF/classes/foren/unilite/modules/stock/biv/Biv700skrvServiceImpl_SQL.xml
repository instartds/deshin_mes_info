<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv700skrvServiceImpl">
	<select id="biv700skrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		/* biv700skrvServiceImpl.selectMasterList */
		    BEGIN
		<if test="OPTSEL == &quot;1&quot;">
		       /* 정방향*/
		        SET NOCOUNT ON
		        SET ARITHABORT ON

		       DECLARE @COMP_CODE        NVARCHAR(08)
				      , @DIV_CODE         NVARCHAR(08)
					  , @CITEM_CODE       NVARCHAR(20)
					  , @CITEM_LOT_NO     NVARCHAR(20)
					  , @USER_ID            NVARCHAR(100)


				SET @COMP_CODE     = #{S_COMP_CODE}
				SET @DIV_CODE      = #{DIV_CODE}
				SET @CITEM_CODE    = #{ITEM_CODE}
				SET @CITEM_LOT_NO  = #{LOT_NO}
				SET @USER_ID       = #{S_USER_ID}

				    DECLARE             @RefItem            NVARCHAR(01)

				    SELECT TOP 1 @RefItem = REF_ITEM
				    FROM   BSA300T WITH (NOLOCK)
				    WHERE  USER_ID = @USER_ID

				    SET @RefItem = ISNULL(@RefItem, '')


		       SELECT 	   uniLITE.fnGetUserDate(@COMP_CODE, A.INOUT_DATE)                              AS INOUT_DATE
					     , A.ITEM_CODE
					     , A.ITEM_STATUS       , ISNULL(M2.CODE_NAME, '')                               AS ITEM_STATUS_NAME
						 , A.INOUT_TYPE        , ISNULL(M3.CODE_NAME, '')                               AS INOUT_TYPE_NAME
						 , CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_Q ELSE 0 END AS IN_Q
						 , CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q ELSE 0 END AS OUT_Q
						 , A.INOUT_NUM
						 , A.INOUT_SEQ
						 , A.MOVE_TYPE, ISNULL(D1.MOVE_TYPE_NAME, '')                          AS MOVE_TYPE_NAME
						 , A.WH_CODE           , ISNULL(C3.TREE_NAME, '')                               AS WH_NAME
						 , A.CREATE_LOC        , ISNULL(M5.CODE_NAME, '')                               AS CREATE_LOC_NAME
					     , A.INOUT_CODE
					     , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
					                                                           WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
					                                                           WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
					                                                           ELSE C7.CUSTOM_NAME
					                                                       END
					            ELSE '' END                                                             AS INOUT_CODE_NAME
						 , A.BASIS_NUM
						 , A.BASIS_SEQ
						 , A.ORDER_NUM
						 , A.ORDER_SEQ
						 , A.INSPEC_NUM
						 , A.INSPEC_SEQ
					     , A.UPDATE_DB_TIME                                                             AS UPDATE_DB_TIME
					     , A.INOUT_PRSN        , ISNULL(M8.CODE_NAME, '')                               AS INOUT_PRSN_NAME
					     , A.REMARK
					     , (SELECT ISNULL(SUM(GOOD_STOCK_Q),0)
							  FROM  BIV100T  WITH (NOLOCK) WHERE COMP_CODE		 = A.COMP_CODE
														     AND DIV_CODE        = A.DIV_CODE
														     AND ITEM_CODE       = A.ITEM_CODE )       AS STOCK_Q
					  FROM BTR100T A WITH (NOLOCK)
                      INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C1.ITEM_CODE       = A.ITEM_CODE
                      INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C2.DIV_CODE        = A.DIV_CODE
                                                           AND C2.ITEM_CODE       = A.ITEM_CODE
                      LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             -- 창고코드
                                                           AND C3.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C3.TREE_CODE       = A.WH_CODE
                      LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(1) => 부서코드
                                                           AND C4.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C4.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '1'
                      LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(2) => 창고코드
                                                           AND C5.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C5.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '2'
                      LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(3) => 작업장코드
                                                           AND C6.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C6.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '3'
                      LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(4) => 거래처코드
                                                           AND C7.CUSTOM_CODE     = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE IN ('4', '5')
                      LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             -- 수불유형
                                                           AND D1.MOVE_TYPE       = A.MOVE_TYPE
                      LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
                                                           AND M1.MAIN_CODE       = 'B020'                  -- 계정구분
                                                           AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
                      LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             -- 품목상태
                                                           AND M2.MAIN_CODE       = 'B021'
                                                           AND M2.SUB_CODE        = A.ITEM_STATUS
                      LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE             -- 입/출고유형
                                                           AND M3.MAIN_CODE       = 'B035'
                                                           AND M3.SUB_CODE        = A.INOUT_TYPE
                      LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             -- 수불방법
                                                           AND M4.MAIN_CODE       = 'B036'
                                                           AND M4.SUB_CODE        = A.INOUT_METH
                      LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             -- 생성경로
                                                           AND M5.MAIN_CODE       = 'B031'
                                                           AND M5.SUB_CODE        = A.CREATE_LOC
                      LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             -- 수불처 유형
                                                           AND M6.MAIN_CODE       = 'B005'
                                                           AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
                      LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE             -- 수/발주 구분
                                                           AND M7.MAIN_CODE       = 'M001'
                                                           AND M7.SUB_CODE        = A.ORDER_TYPE
                      LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             -- 수불담당자
                                                           AND M8.MAIN_CODE       = 'B024'
                                                           AND M8.SUB_CODE        = A.INOUT_PRSN

					 WHERE A.COMP_CODE = @COMP_CODE
					   AND A.DIV_CODE  = @DIV_CODE
					   AND A.ITEM_CODE = @CITEM_CODE
					   --AND A.LOT_NO    = @CITEM_LOT_NO
					   <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
						AND A.ORDER_NUM = #{WKORD_NUM}
			       	   </if>
			       	   <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
						AND A.ORDER_NUM = #{ORDER_NUM}
			       	   </if>
			       	   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
						AND A.INOUT_CODE = #{CUSTOM_CODE}
			       	   </if>
			       	   <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
						AND A.INOUT_DATE >= #{ORDER_DATE_FR}
			       	   </if>
			       	   <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
						AND A.INOUT_DATE <![CDATA[<=]]> #{ORDER_DATE_TO}
			       	   </if>
			       	  ORDER BY A.INOUT_DATE DESC
		       SET NOCOUNT OFF
		       SET ARITHABORT OFF
		</if>
		<if test="OPTSEL == &quot;0&quot;">
		        /* 역방향 */
		        SET NOCOUNT ON
		        SET ARITHABORT ON

		       DECLARE @COMP_CODE        NVARCHAR(08)
				      , @DIV_CODE         NVARCHAR(08)
					  , @CITEM_CODE       NVARCHAR(20)
					  , @CITEM_LOT_NO     NVARCHAR(20)
					  , @USER_ID            NVARCHAR(100)


				SET @COMP_CODE     = #{S_COMP_CODE}
				SET @DIV_CODE      = #{DIV_CODE}
				SET @CITEM_CODE    = #{ITEM_CODE}
				SET @CITEM_LOT_NO  = #{LOT_NO}
				SET @USER_ID       = #{S_USER_ID}

				    DECLARE             @RefItem            NVARCHAR(01)

				    SELECT TOP 1 @RefItem = REF_ITEM
				    FROM   BSA300T WITH (NOLOCK)
				    WHERE  USER_ID = @USER_ID

				    SET @RefItem = ISNULL(@RefItem, '')


		       SELECT 	   uniLITE.fnGetUserDate(@COMP_CODE, A.INOUT_DATE)                              AS INOUT_DATE
		       			 , A.ITEM_CODE
					     , A.ITEM_STATUS       , ISNULL(M2.CODE_NAME, '')                               AS ITEM_STATUS_NAME
						 , A.INOUT_TYPE        , ISNULL(M3.CODE_NAME, '')                               AS INOUT_TYPE_NAME
						 , CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_Q ELSE 0 END AS IN_Q
						 , CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q ELSE 0 END AS OUT_Q
						 , A.INOUT_NUM
						 , A.INOUT_SEQ
						 , A.MOVE_TYPE, ISNULL(D1.MOVE_TYPE_NAME, '')                          AS MOVE_TYPE_NAME
						 , A.WH_CODE           , ISNULL(C3.TREE_NAME, '')                               AS WH_NAME
						 , A.CREATE_LOC        , ISNULL(M5.CODE_NAME, '')                               AS CREATE_LOC_NAME
					     , A.INOUT_CODE
					     , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
					            WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
					                                                           WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
					                                                           WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
					                                                           ELSE C7.CUSTOM_NAME
					                                                       END
					            ELSE '' END                                                             AS INOUT_CODE_NAME
						 , A.BASIS_NUM
						 , A.BASIS_SEQ
						 , A.ORDER_NUM
						 , A.ORDER_SEQ
						 , A.INSPEC_NUM
						 , A.INSPEC_SEQ
					     , A.UPDATE_DB_TIME                                                             AS UPDATE_DB_TIME
					     , A.INOUT_PRSN        , ISNULL(M8.CODE_NAME, '')                               AS INOUT_PRSN_NAME
					     , A.REMARK
					     ,(SELECT ISNULL(SUM(GOOD_STOCK_Q),0)
							  FROM  BIV100T  WITH (NOLOCK) WHERE COMP_CODE		 = A.COMP_CODE
														     AND DIV_CODE        = A.DIV_CODE
														     AND ITEM_CODE       = A.ITEM_CODE )       AS STOCK_Q
					  FROM BTR100T A WITH (NOLOCK)
                      INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C1.ITEM_CODE       = A.ITEM_CODE
                      INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C2.DIV_CODE        = A.DIV_CODE
                                                           AND C2.ITEM_CODE       = A.ITEM_CODE
                      LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             -- 창고코드
                                                           AND C3.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C3.TREE_CODE       = A.WH_CODE
                      LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(1) => 부서코드
                                                           AND C4.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C4.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '1'
                      LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(2) => 창고코드
                                                           AND C5.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C5.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '2'
                      LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(3) => 작업장코드
                                                           AND C6.TYPE_LEVEL      = A.DIV_CODE
                                                           AND C6.TREE_CODE       = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE  = '3'
                      LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(4) => 거래처코드
                                                           AND C7.CUSTOM_CODE     = A.INOUT_CODE
                                                           AND A.INOUT_CODE_TYPE IN ('4', '5')
                      LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             -- 수불유형
                                                           AND D1.MOVE_TYPE       = A.MOVE_TYPE
                      LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
                                                           AND M1.MAIN_CODE       = 'B020'                  -- 계정구분
                                                           AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
                      LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             -- 품목상태
                                                           AND M2.MAIN_CODE       = 'B021'
                                                           AND M2.SUB_CODE        = A.ITEM_STATUS
                      LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE             -- 입/출고유형
                                                           AND M3.MAIN_CODE       = 'B035'
                                                           AND M3.SUB_CODE        = A.INOUT_TYPE
                      LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             -- 수불방법
                                                           AND M4.MAIN_CODE       = 'B036'
                                                           AND M4.SUB_CODE        = A.INOUT_METH
                      LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             -- 생성경로
                                                           AND M5.MAIN_CODE       = 'B031'
                                                           AND M5.SUB_CODE        = A.CREATE_LOC
                      LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             -- 수불처 유형
                                                           AND M6.MAIN_CODE       = 'B005'
                                                           AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
                      LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE             -- 수/발주 구분
                                                           AND M7.MAIN_CODE       = 'M001'
                                                           AND M7.SUB_CODE        = A.ORDER_TYPE
                      LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             -- 수불담당자
                                                           AND M8.MAIN_CODE       = 'B024'
                                                           AND M8.SUB_CODE        = A.INOUT_PRSN

					 WHERE A.COMP_CODE = @COMP_CODE
					   AND A.DIV_CODE  = @DIV_CODE
					   AND A.ITEM_CODE = @CITEM_CODE
					   AND A.LOT_NO    = @CITEM_LOT_NO
					 ORDER BY A.INOUT_DATE DESC
		       SET NOCOUNT OFF
		       SET ARITHABORT OFF
		</if>
		    END
	</select>

	<select id="biv700skrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* biv700skrvServiceImpl.selectDetailList */
		<if test="OPTSEL == &quot;1&quot;">
		    /* 정전개 */
		    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		    SELECT DISTINCT A.DIV_CODE
		         , A.PROD_ITEM_CODE
		         , B.ITEM_CODE
		         , uniLITE.fnItemNameComp(#{USE_YN}, #{ITEM_CODE}, B.ITEM_CODE) AS ITEM_NAME
		         , B.SPEC
		         , B.STOCK_UNIT
		         , (A.UNIT_Q * 0 + 1) UNIT_Q
		         , (A.PROD_UNIT_Q * 0 + 1) PROD_UNIT_Q
		         , (A.LOSS_RATE * 0) LOSS_RATE
		         , 0 SEQ
		      FROM       BPR500T A WITH (NOLOCK)
		      INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                        AND B.ITEM_CODE = A.PROD_ITEM_CODE
		      INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                        AND C.DIV_CODE  = A.DIV_CODE
		                                        AND C.ITEM_CODE = A.PROD_ITEM_CODE
		     WHERE A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.DIV_CODE       = #{DIV_CODE}
		       AND A.PROD_ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="OPTSEL == &quot;0&quot;">
		/* 0. 임시테이블 삭제 */
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE id=object_id('tempdb..#TEST'))
		    DROP TABLE #TEST

		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE id=object_id('tempdb..#TEST2'))
		    DROP TABLE #TEST2

		BEGIN
		/* 1. 재귀쿼리 실행해서 해당 품목의 BOM 정보 임시테이블(TEST)에 저장 */
		    WITH BOM(COMP_CODE, DIV_CODE, PROD_ITEM_CODE, CHILD_ITEM_CODE, SEQ, UNIT_Q, PROD_UNIT_Q, LOSS_RATE, START_DATE, STOP_DATE, PATH_CODE, LEVEL)
		    AS (
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.PROD_ITEM_CODE
		             , A.CHILD_ITEM_CODE
		             , A.SEQ
		             , A.UNIT_Q
		             , A.PROD_UNIT_Q
		             , A.LOSS_RATE
		             , A.START_DATE
		             , A.STOP_DATE
		             , A.PATH_CODE
		             , 1
		          FROM BPR500T A WITH(NOLOCK)
		         WHERE A.COMP_CODE       = #{S_COMP_CODE}
		           AND A.DIV_CODE        = #{DIV_CODE}
		           AND A.CHILD_ITEM_CODE = #{ITEM_CODE}
		       <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		           AND A.USE_YN          = #{USE_YN}
		       </if>

		        UNION ALL

		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.PROD_ITEM_CODE
		             , A.CHILD_ITEM_CODE
		             , A.SEQ
		             , A.UNIT_Q
		             , A.PROD_UNIT_Q
		             , A.LOSS_RATE
		             , A.START_DATE
		             , A.STOP_DATE
		             , A.PATH_CODE
		             , B.LEVEL + 1
		          FROM       BPR500T A WITH(NOLOCK)
		          INNER JOIN BOM     B ON B.COMP_CODE      = A.COMP_CODE
		                              AND B.DIV_CODE       = A.DIV_CODE
		                              AND B.PROD_ITEM_CODE = A.CHILD_ITEM_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.DIV_CODE  = #{DIV_CODE}
		       <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		           AND A.USE_YN    = #{USE_YN}
		       </if>
		    )
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.LEVEL
		         , A.SEQ
		         , A.PROD_ITEM_CODE
		         , A.CHILD_ITEM_CODE
		         , B.ITEM_CODE
		         , uniLITE.fnItemNameComp(#{S_COMP_CODE}, 'OMEGA+', B.ITEM_CODE) as ITEM_NAME
		         , B.SPEC
		         , B.STOCK_UNIT
		         , A.UNIT_Q
		         , A.PROD_UNIT_Q
		         , A.LOSS_RATE
		         , A.START_DATE
		         , A.STOP_DATE
		         , A.PATH_CODE
		         , C.ITEM_ACCOUNT
		      INTO #TEST
		      FROM       BOM     A
		      INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                        AND B.ITEM_CODE       = A.PROD_ITEM_CODE
		      INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
		                                        AND C.DIV_CODE        = A.DIV_CODE
		                                        AND C.ITEM_CODE       = A.PROD_ITEM_CODE
		     ORDER BY A.LEVEL, A.SEQ


		/* 2. BOM 정보 중 가장 마지막 LEVEL 품목정보만 추출하여 임시테이블(#TEST2)에 저장 */
		    DECLARE @maxLevel INT

		    SELECT @maxLevel = MAX(LEVEL)
		      FROM #TEST

		    SELECT *
		      INTO #TEST2
		      FROM #TEST
		     WHERE LEVEL = @maxLevel

		    SET @maxLevel = @maxLevel - 1
		    WHILE @maxLevel >= 1
		        BEGIN
		            INSERT #TEST2
		            SELECT A.*
		              FROM #TEST A
		              LEFT JOIN #TEST2 B ON B.CHILD_ITEM_CODE = A.PROD_ITEM_CODE
		                                AND B.LEVEL = @maxLevel + 1
		             WHERE A.LEVEL = @maxLevel
		               AND B.COMP_CODE IS NULL

		            SET @maxLevel = @maxLevel - 1
		        END

		/* 3. 최종 데이터 조회 */
		    SELECT A.*
		      FROM #TEST2 A
		   <if test="ITEM_SEARCH == &quot;C&quot;">
		     WHERE START_DATE  = (SELECT MAX(START_DATE)
		                            FROM BPR500T WITH(NOLOCK)
		                           WHERE COMP_CODE        = A.COMP_CODE
		                             AND DIV_CODE         = A.DIV_CODE
		                             AND PROD_ITEM_CODE   = A.PROD_ITEM_CODE
		                             AND CHILD_ITEM_CODE  = A.CHILD_ITEM_CODE
		                             AND PATH_CODE        = A.PATH_CODE
		                             AND START_DATE      &lt;= CONVERT(VARCHAR(8), GETDATE(), 112))
		       AND (STOP_DATE &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
		         OR STOP_DATE IS NULL)
		   </if>
		     ORDER BY LEVEL, ITEM_CODE
		END
		</if>
	</select>

	<select id="biv700skrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">
		/* biv700skrvServiceImpl.selectDetailList2 */
		<if test="OPTSEL == &quot;1&quot;">
		    /* 역방향 */
		    SELECT A.DIV_CODE
		         , A.PROD_ITEM_CODE
		         , B.ITEM_CODE
		         , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) as ITEM_NAME
		         , B.SPEC
		         , B.STOCK_UNIT
		         , A.UNIT_Q
		         , A.PROD_UNIT_Q
		         , A.LOSS_RATE
		         , A.SEQ
		         , C.ITEM_ACCOUNT
		      FROM       BPR500T A WITH (NOLOCK)
		      INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                        AND B.ITEM_CODE = A.CHILD_ITEM_CODE
		      INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                        AND C.DIV_CODE  = A.DIV_CODE
		                                        AND C.ITEM_CODE = A.CHILD_ITEM_CODE
		     WHERE A.DIV_CODE       = #{DIV_CODE}
		       AND A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.PROD_ITEM_CODE = #{ITEM_CODE}
		       AND (
		              (A.USE_YN         = 'Y' AND 'Y' != '')
		           OR ('' = '')
		           )
		    <if test="ITEM_SEARCH == &quot;C&quot;">
		       AND (
		              (CONVERT(NVARCHAR(10), GETDATE(), 112)  = '')
		           OR (CONVERT(NVARCHAR(10), GETDATE(), 112) != '' AND A.START_DATE  = (
		                                                                                SELECT MAX(START_DATE)
		                                                                                  FROM BPR500T WITH(NOLOCK)
		                                                                                 WHERE COMP_CODE        = #{S_COMP_CODE}
		                                                                                   AND DIV_CODE         = #{DIV_CODE}
		                                                                                   AND PROD_ITEM_CODE   = A.PROD_ITEM_CODE
		                                                                                   AND CHILD_ITEM_CODE  = A.CHILD_ITEM_CODE
		                                                                                   AND PATH_CODE        = A.PATH_CODE
		                                                                                   AND START_DATE      &lt;= CONVERT(NVARCHAR(10), GETDATE(), 112)
		                                                               )
		              )
		           )
		       AND (
		              (CONVERT(NVARCHAR(10), GETDATE(), 112)  = '') OR (CONVERT(NVARCHAR(10), GETDATE(), 112)  != '' AND A.STOP_DATE    &gt;= CONVERT(NVARCHAR(10), GETDATE(), 112))
		           OR (A.STOP_DATE          IS NULL)
		           )
		    </if>
		     ORDER BY  A.SEQ
		</if>
	</select>

	<select id="biv700skrvServiceImpl.selectDetailChildList1" parameterType="Map" resultType="rMap">
		--공정별생산현황

				DECLARE @COMP_CODE   NVARCHAR(08)
				      , @DIV_CODE    NVARCHAR(08)
					  , @ITEM_CODE   NVARCHAR(20)
					  , @LOT_NO      NVARCHAR(20)


				SET @COMP_CODE = #{S_COMP_CODE}
				SET @DIV_CODE  = #{DIV_CODE}
				SET @ITEM_CODE = #{CHILD_ITEM_CODE}
				SET @LOT_NO    = #{LOT_NO}

				SELECT uniLITE.fnGetUserdateComp(@COMP_CODE, A.PRODT_DATE)
							  AS PRODT_DATE
							 , B.WORK_SHOP_CODE
							 , F.TREE_NAME
							 , A.PROG_WORK_CODE
							 , E.PROG_WORK_NAME
							 , A.EQUIP_CODE
							 , H.EQU_NAME       AS EQUIP_NAME
							 , A.FR_TIME
							 , A.TO_TIME
							 , A.WKORD_NUM
							 , B.ORDER_NUM
							 , B.ITEM_CODE
							 , C.ITEM_NAME
							 , C.STOCK_UNIT
							 , G.CODE_NAME
							 , B.WKORD_Q
							 , A.WORK_Q
							 , A.GOOD_WORK_Q    AS PRODT_Q
							 , A.LOT_NO
							 , A.MAN_HOUR
							 , A.REMARK
						  FROM PMR100T A WITH(NOLOCK)
						  LEFT  JOIN (SELECT COMP_CODE, WKORD_NUM, WORK_SHOP_CODE, PROG_WORK_CODE, ITEM_CODE, MAX(WKORD_Q) AS WKORD_Q, MAX(WORK_END_YN) AS WORK_END_YN, MAX(WKORD_STATUS) AS WKORD_STATUS
						                   ,  (SO_NUM + LTRIM(STR(SO_SEQ))) AS ORDER_NUM
						                FROM PMP100T WITH(NOLOCK)
						               WHERE COMP_CODE = @COMP_CODE
										 AND DIV_CODE  = @DIV_CODE
									  GROUP BY COMP_CODE, WKORD_NUM, WORK_SHOP_CODE, PROG_WORK_CODE, ITEM_CODE
									         , (SO_NUM + LTRIM(STR(SO_SEQ))) ) B ON A.WKORD_NUM      = B.WKORD_NUM
																					  AND A.PROG_WORK_CODE = B.PROG_WORK_CODE
						  INNER JOIN BPR100T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
														   AND B.ITEM_CODE = C.ITEM_CODE
						  INNER JOIN BPR200T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
														   AND A.DIV_CODE  = D.DIV_CODE
														   AND B.ITEM_CODE = D.ITEM_CODE
						  LEFT  JOIN PBS200T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
														   AND A.DIV_CODE  = E.DIV_CODE
														   AND A.PROG_WORK_CODE = E.PROG_WORK_CODE
														   AND B.WORK_SHOP_CODE = E.WORK_SHOP_CODE
						  LEFT  JOIN BSA230T F WITH(NOLOCK) ON F.COMP_CODE = B.COMP_CODE
														   AND F.TREE_CODE = B.WORK_SHOP_CODE
						  LEFT  JOIN BSA100T G WITH(NOLOCK) ON G.COMP_CODE = A.COMP_CODE
														   AND G.MAIN_CODE = 'P001'
														   AND G.SUB_CODE  = ISNULL(A.CONTROL_STATUS,'2')
						  LEFT  JOIN EQU200T H WITH(NOLOCK) ON H.COMP_CODE = A.COMP_CODE
														   AND H.DIV_CODE  = A.DIV_CODE
														   AND H.EQU_CODE  = A.EQUIP_CODE
						  LEFT  JOIN BPR000T J WITH (NOLOCK) ON J.COMP_CODE       = C.COMP_CODE             /* 품목 대분류*/
					                                   		AND J.LEVEL1          = C.ITEM_LEVEL1
					                                   		AND J.LEVEL1         != '*'
					                                   		AND J.LEVEL2          = '*'
					                                   		AND J.LEVEL3          = '*'
						 WHERE A.COMP_CODE = @COMP_CODE
						   AND A.DIV_CODE  = @DIV_CODE
						   AND B.ITEM_CODE = @ITEM_CODE
						  -- AND ((A.LOT_NO    = @LOT_NO) OR (LOT_NO = ''))


	</select>
	<select id="biv700skrvServiceImpl.selectDetailChildList2" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE   NVARCHAR(08)
      , @DIV_CODE    NVARCHAR(08)
	  , @ITEM_CODE   NVARCHAR(20)
	  , @LOT_NO      NVARCHAR(20)
	  , @WKORD_NUM   NVARCHAR(20)


		SET @COMP_CODE = #{S_COMP_CODE}
		SET @DIV_CODE  = #{DIV_CODE}
		SET @ITEM_CODE = #{CHILD_ITEM_CODE}
		SET @LOT_NO    = #{LOT_NO}
		SET @WKORD_NUM = #{WKORD_NUM}

        SELECT A.WKORD_NUM                                                   AS WKORD_NUM
             , B.ITEM_CODE                                                   AS CITEM_CODE
             , ISNULL(C2.ITEM_NAME, '') + ' / ' + ISNULL(C2.SPEC, '')        AS CITEM_NAME
             , ISNULL(D.LOT_NO,'')                                           AS CITEM_LOT_NO
             , C2.STOCK_UNIT                                                 AS CSTOCK_UNIT
             , B.UNIT_Q                                                      AS UNIT_Q
             , B.ALLOCK_Q                                                    AS ALLOCK_Q
             , ISNULL(B.PRODT_Q, 0)                                          AS PRODT_Q
             , ISNULL(B.ALLOCK_Q, 0) - ISNULL(B.PRODT_Q, 0)                  AS UN_PRODT_Q
             , uniLITE.fnGetUserDate(@COMP_CODE, B.OUTSTOCK_REQ_DATE)        AS OUTSTOCK_REQ_DATE
             , C4.WH_CODE                                                    AS WH_CODE
             , M3.TREE_NAME                                                  AS WH_CODE_NAME
             , B.OUT_METH                                                    AS OUT_METH
             , M2.CODE_NAME                                                  AS OUT_METH_NAME
             , ISNULL(C5.GOOD_STOCK_Q, 0)                                    AS GOOD_STOCK_Q
             , CASE WHEN B.OUT_METH = '3' THEN B.ALLOCK_Q
                    ELSE ISNULL(C.OUTSTOCK_REQ_Q, 0) END                     AS OUTSTOCK_REQ_Q
             , CASE WHEN B.OUT_METH = '3' THEN B.ALLOCK_Q
                    ELSE ISNULL(C.OUTSTOCK_Q, 0) - ISNULL(C.CANCEL_Q, 0) END AS OUTSTOCK_Q
             , CASE WHEN B.OUT_METH = '3' THEN 0
                    ELSE ISNULL(C.OUTSTOCK_REQ_Q, 0) -
                         ISNULL(C.OUTSTOCK_Q, 0) -
                         ISNULL(C.CANCEL_Q, 0) END                           AS UN_OUTSTOCK_Q
        FROM              PMP100TV1 A  WITH (NOLOCK)
		       INNER JOIN PMR100T   A1 WITH (NOLOCK) ON A1.COMP_CODE   = A.COMP_CODE
			                                        AND A1.DIV_CODE    = A.DIV_CODE
													AND A1.WKORD_NUM   = A.WKORD_NUM
													AND A1.PROG_WORK_CODE = A.PROG_WORK_CODE
               INNER JOIN PMP200T   B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                    AND B.DIV_CODE     = A.DIV_CODE
                                                    AND B.WKORD_NUM    = A.WKORD_NUM
               LEFT  JOIN PMP300T   C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                                    AND C.DIV_CODE     = B.DIV_CODE
                                                    AND C.REF_WKORD_NUM = B.WKORD_NUM
                                                    AND C.ITEM_CODE    = B.ITEM_CODE
                                                    AND C.PATH_CODE    = B.PATH_CODE
               LEFT  JOIN BTR100T   D  WITH (NOLOCK, INDEX(BTR100T_IDX04)) ON D.COMP_CODE    = B.COMP_CODE
                                                    AND D.DIV_CODE     = B.DIV_CODE
													AND D.INOUT_TYPE        = '2'        -- 출고
													AND D.INOUT_TYPE_DETAIL = '10'       -- 생산출고
													AND D.INOUT_CODE_TYPE   = '3'        -- 작업장
                                                    AND D.ORDER_NUM	   = B.WKORD_NUM
                                                    AND D.ITEM_CODE    = B.ITEM_CODE
													AND ISNULL(D.PATH_CODE, '0')    = B.PATH_CODE
               LEFT  JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                                    AND C1.ITEM_CODE   = A.ITEM_CODE
               LEFT  JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                    AND C2.ITEM_CODE   = B.ITEM_CODE
               LEFT  JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
                                                    AND C3.DIV_CODE    = A.DIV_CODE
                                                    AND C3.ITEM_CODE   = A.ITEM_CODE
               LEFT  JOIN BPR200T   C4 WITH (NOLOCK) ON C4.COMP_CODE   = B.COMP_CODE
                                                    AND C4.DIV_CODE    = B.DIV_CODE
                                                    AND C4.ITEM_CODE   = B.ITEM_CODE
               LEFT  JOIN BIV100T   C5 WITH (NOLOCK) ON C5.COMP_CODE   = C4.COMP_CODE
                                                    AND C5.DIV_CODE    = C4.DIV_CODE
                                                    AND C5.WH_CODE     = C4.WH_CODE
                                                    AND C5.ITEM_CODE   = C4.ITEM_CODE
               LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                    AND M1.MAIN_CODE   = 'P001'
                                                    AND M1.SUB_CODE    = A.WKORD_STATUS
               LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE   = B.COMP_CODE
                                                    AND M2.MAIN_CODE   = 'B039'
                                                    AND M2.SUB_CODE    = B.OUT_METH
               LEFT  JOIN BSA220T   M3 WITH (NOLOCK) ON M3.COMP_CODE   = C4.COMP_CODE
                                                    AND M3.TYPE_LEVEL  = C4.DIV_CODE
                                                    AND M3.TREE_CODE   = C4.WH_CODE
               LEFT  JOIN BSA230T   M4 WITH (NOLOCK) ON M4.COMP_CODE   = A.COMP_CODE
                                                    AND M4.TYPE_LEVEL  = A.DIV_CODE
                                                    AND M4.TREE_CODE   = A.WORK_SHOP_CODE


        WHERE  A.COMP_CODE      = @COMP_CODE
        AND    A.DIV_CODE       = @DIV_CODE
		AND    A.WKORD_NUM      = @WKORD_NUM
        AND    A.ITEM_CODE      = @ITEM_CODE
		--AND    A1.LOT_NO        = @LOT_NO
		GROUP BY  A.COMP_CODE , A.DIV_CODE , A.WKORD_NUM , A.WKORD_STATUS , M1.CODE_NAME, A.WORK_SHOP_CODE , M4.TREE_NAME
			 , A.ITEM_CODE, ISNULL(C1.ITEM_NAME1, ''), ISNULL(C1.ITEM_NAME2, ''), ISNULL(C1.ITEM_NAME, ''), ISNULL(C1.SPEC, ''), C1.STOCK_UNIT, A.WKORD_Q, A.PRODT_Q, A.PRODT_START_DATE, A.PRODT_END_DATE
             , B.ITEM_CODE, ISNULL(C2.ITEM_NAME1, ''), ISNULL(C2.ITEM_NAME2, ''), ISNULL(C2.ITEM_NAME, ''), ISNULL(C2.SPEC, ''), C2.STOCK_UNIT, B.UNIT_Q , B.ALLOCK_Q, B.OUTSTOCK_REQ_DATE, C4.WH_CODE, M3.TREE_NAME
			 , B.OUT_METH, M2.CODE_NAME, C5.GOOD_STOCK_Q, C.OUTSTOCK_REQ_Q, C.OUTSTOCK_Q, C.CANCEL_Q, D.LOT_NO, B.PRODT_Q, C4.MINI_PACK_Q, A.TOP_WKORD_NUM



	</select>
	<select id="biv700skrvServiceImpl.selectDetailChildList3" parameterType="Map" resultType="rMap">
		--품목LOT이력(역방향)

		DECLARE @COMP_CODE        NVARCHAR(08)
		      , @DIV_CODE         NVARCHAR(08)
			  , @CITEM_CODE       NVARCHAR(20)
			  , @CITEM_LOT_NO     NVARCHAR(20)
			  , @USER_ID            NVARCHAR(100)


				SET @COMP_CODE     =  #{S_COMP_CODE}
				SET @DIV_CODE      =  #{DIV_CODE}
				SET @CITEM_CODE    =  #{CHILD_ITEM_CODE}
				SET @CITEM_LOT_NO  =  #{LOT_NO}
				SET @USER_ID       =  #{S_USER_ID}

		    DECLARE             @RefItem            NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '')


			SELECT uniLITE.fnGetUserDate(@COMP_CODE, A.INOUT_DATE)                              AS INOUT_DATE
			     , A.ITEM_STATUS       , ISNULL(M2.CODE_NAME, '')                               AS ITEM_STATUS_NAME
				 , A.INOUT_TYPE        , ISNULL(M3.CODE_NAME, '')                               AS INOUT_TYPE_NAME
				 , CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_Q ELSE 0 END AS IN_Q
				 , CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q ELSE 0 END AS OUT_Q
				 , A.INOUT_NUM
				 , A.INOUT_SEQ
				 , A.MOVE_TYPE, ISNULL(D1.MOVE_TYPE_NAME, '')                          AS MOVE_TYPE_NAME
				 , A.WH_CODE           , ISNULL(C3.TREE_NAME, '')                               AS WH_NAME
				 , A.CREATE_LOC        , ISNULL(M5.CODE_NAME, '')                               AS CREATE_LOC_NAME
			     , A.INOUT_CODE
			     , CASE WHEN A.INOUT_CODE_TYPE = '1'         THEN C4.TREE_NAME
			            WHEN A.INOUT_CODE_TYPE = '2'         THEN C5.TREE_NAME
			            WHEN A.INOUT_CODE_TYPE = '3'         THEN C6.TREE_NAME
			            WHEN A.INOUT_CODE_TYPE IN ('4', '5') THEN CASE WHEN @RefItem = '0' THEN C7.CUSTOM_NAME
			                                                           WHEN @RefItem = '1' THEN C7.CUSTOM_NAME1
			                                                           WHEN @RefItem = '2' THEN C7.CUSTOM_NAME2
			                                                           ELSE C7.CUSTOM_NAME
			                                                       END
			            ELSE '' END                                                             AS INOUT_CODE_NAME
				 , A.BASIS_NUM
				 , A.BASIS_SEQ
				 , A.ORDER_NUM
				 , A.ORDER_SEQ
				 , A.INSPEC_NUM
				 , A.INSPEC_SEQ
			     , A.UPDATE_DB_TIME                                                             AS UPDATE_DB_TIME
			     , A.INOUT_PRSN        , ISNULL(M8.CODE_NAME, '')                               AS INOUT_PRSN_NAME
			     , A.REMARK
			     , A.LOT_NO
			     , A.ITEM_CODE
			  FROM BTR100T A WITH (NOLOCK)
			                      INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
			                                                           AND C1.ITEM_CODE       = A.ITEM_CODE
			                      INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
			                                                           AND C2.DIV_CODE        = A.DIV_CODE
			                                                           AND C2.ITEM_CODE       = A.ITEM_CODE
			                      LEFT  JOIN BSA220T   C3 WITH (NOLOCK) ON C3.COMP_CODE       = A.COMP_CODE             -- 창고코드
			                                                           AND C3.TYPE_LEVEL      = A.DIV_CODE
			                                                           AND C3.TREE_CODE       = A.WH_CODE
			                      LEFT  JOIN BSA210T   C4 WITH (NOLOCK) ON C4.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(1) => 부서코드
			                                                           AND C4.TYPE_LEVEL      = A.DIV_CODE
			                                                           AND C4.TREE_CODE       = A.INOUT_CODE
			                                                           AND A.INOUT_CODE_TYPE  = '1'
			                      LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(2) => 창고코드
			                                                           AND C5.TYPE_LEVEL      = A.DIV_CODE
			                                                           AND C5.TREE_CODE       = A.INOUT_CODE
			                                                           AND A.INOUT_CODE_TYPE  = '2'
			                      LEFT  JOIN BSA230T   C6 WITH (NOLOCK) ON C6.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(3) => 작업장코드
			                                                           AND C6.TYPE_LEVEL      = A.DIV_CODE
			                                                           AND C6.TREE_CODE       = A.INOUT_CODE
			                                                           AND A.INOUT_CODE_TYPE  = '3'
			                      LEFT  JOIN BCM100T   C7 WITH (NOLOCK) ON C7.COMP_CODE       = A.COMP_CODE             -- 수불처 코드(4) => 거래처코드
			                                                           AND C7.CUSTOM_CODE     = A.INOUT_CODE
			                                                           AND A.INOUT_CODE_TYPE IN ('4', '5')
			                      LEFT  JOIN BTR100TV2 D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             -- 수불유형
			                                                           AND D1.MOVE_TYPE       = A.MOVE_TYPE
			                      LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
			                                                           AND M1.MAIN_CODE       = 'B020'                  -- 계정구분
			                                                           AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
			                      LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE       = A.COMP_CODE             -- 품목상태
			                                                           AND M2.MAIN_CODE       = 'B021'
			                                                           AND M2.SUB_CODE        = A.ITEM_STATUS
			                      LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE       = A.COMP_CODE             -- 입/출고유형
			                                                           AND M3.MAIN_CODE       = 'B035'
			                                                           AND M3.SUB_CODE        = A.INOUT_TYPE
			                      LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE       = A.COMP_CODE             -- 수불방법
			                                                           AND M4.MAIN_CODE       = 'B036'
			                                                           AND M4.SUB_CODE        = A.INOUT_METH
			                      LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE       = A.COMP_CODE             -- 생성경로
			                                                           AND M5.MAIN_CODE       = 'B031'
			                                                           AND M5.SUB_CODE        = A.CREATE_LOC
			                      LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE       = A.COMP_CODE             -- 수불처 유형
			                                                           AND M6.MAIN_CODE       = 'B005'
			                                                           AND M6.SUB_CODE        = A.INOUT_CODE_TYPE
			                      LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE       = A.COMP_CODE             -- 수/발주 구분
			                                                           AND M7.MAIN_CODE       = 'M001'
			                                                           AND M7.SUB_CODE        = A.ORDER_TYPE
			                      LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE       = A.COMP_CODE             -- 수불담당자
			                                                           AND M8.MAIN_CODE       = 'B024'
			                                                           AND M8.SUB_CODE        = A.INOUT_PRSN

			 WHERE A.COMP_CODE = @COMP_CODE
			   AND A.DIV_CODE  = @DIV_CODE
			   AND A.ITEM_CODE = @CITEM_CODE
			   AND A.LOT_NO    = @CITEM_LOT_NO


	</select>
</mapper>