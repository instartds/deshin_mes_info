<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr100ukrvServiceImpl">
	
	<select id="btr100ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>
	
	<select id="btr100ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">		/* 조회 */
	
	/*btr100ukrv.Cbtr100ukrv[fnBtr100QStd] Query01 */
	/*btr100ukrv.Cbtr100ukrv[fnBtr100QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = 'MASTER'
	    SET @UserId   = 'UNILITE5'
	    SET @LangType = 'ko'    
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */
	    SELECT  
	           A.REQSTOCK_NUM
	         , A.REQSTOCK_SEQ
	         , A.OUT_DIV_CODE
	         , A.OUT_WH_CODE
	         , C2.TREE_NAME                                        AS OUT_WH_NAME
	         , A.OUT_WH_CELL_CODE
	         , C3.WH_CELL_NAME                                     AS OUT_WH_CELL_NAME
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                                 AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , A.ITEM_STATUS
	         , A.REQSTOCK_Q
	         , A.OUTSTOCK_Q
	         ,(A.REQSTOCK_Q - A.OUTSTOCK_Q)                        AS NOTSTOCK_Q
	         --, ISNULL(B.GOOD_STOCK_Q, 0)                         AS GOOD_STOCK_Q
	        -- , ISNULL(B.BAD_STOCK_Q, 0)                          AS BAD_STOCK_Q
	         , ISNULL(B1.STOCK_Q, 0)		 					   AS GOOD_STOCK_Q
	         , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN ISNULL(C.BAD_STOCK_Q,  0)
	                 ELSE ISNULL(B.BAD_STOCK_Q,  0)
	           END                          					   AS BAD_STOCK_Q        				
			 , (CASE WHEN ISNULL(A.OUTSTOCK_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.OUTSTOCK_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.OUTSTOCK_DATE, 7, 2))
	             END)                                           AS OUTSTOCK_DATE
	         , A.CLOSE_YN
	         , A.DIV_CODE
	         , A.WH_CODE
	         , A.WH_CELL_CODE
	         , A.REQ_PRSN
			 , (CASE WHEN ISNULL(A.REQSTOCK_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.REQSTOCK_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.REQSTOCK_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.REQSTOCK_DATE, 7, 2))
	             END)                                           AS REQSTOCK_DATE
	         , A.LOT_NO
	         , A.REMARK
	         , A.PROJECT_NO
	         , A.UPDATE_DB_USER
	         , A.UPDATE_DB_TIME 
	         , A.COMP_CODE
	         , C4.ITEM_ACCOUNT
	    FROM              BIV500T A  WITH (NOLOCK)
	           LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
	                                              AND B.DIV_CODE      = A.OUT_DIV_CODE
	                                              AND B.WH_CODE       = A.OUT_WH_CODE
	                                              AND B.ITEM_CODE     = A.ITEM_CODE
	           LEFT JOIN (
	                   SELECT 
	                   X.COMP_CODE, X.DIV_CODE, X.WH_CODE, X.ITEM_CODE, SUM(ISNULL(X.STOCK_Q,0)) AS STOCK_Q
	                   FROM
	                   (
                       SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
         					 FROM BIV100T WITH(NOLOCK)
                         WHERE  COMP_CODE =  'MASTER'
                           --AND  DIV_CODE  =  '01'
                           --AND  WH_CODE  =  'W052'
         				 

                         UNION ALL
                       
           				SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
          					  FROM UNILITE.VGetDailyStock WITH(NOLOCK)
                         WHERE  COMP_CODE =  'MASTER'
                           --AND  DIV_CODE  =  '01'
                           --AND  WH_CODE  =  'W052'
         			
                   ) X GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE         
                       )  B1 
                           ON A.COMP_CODE = B1.COMP_CODE
					      AND A.ITEM_CODE = B1.ITEM_CODE
						  AND A.OUT_DIV_CODE  = B1.DIV_CODE
						  AND A.OUT_WH_CODE   = B1.WH_CODE
			   LEFT  JOIN BIV150T C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
	                                               AND C.DIV_CODE      = A.DIV_CODE
	                                               AND C.WH_CODE       = A.WH_CODE
	                                               AND C.WH_CELL_CODE  = A.WH_CELL_CODE
	                                               AND C.ITEM_CODE     = A.ITEM_CODE
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.ITEM_CODE    = A.ITEM_CODE
	           INNER JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.TYPE_LEVEL   = A.OUT_DIV_CODE
	                                              AND C2.TREE_CODE    = A.OUT_WH_CODE
	           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
	                                              AND C3.DIV_CODE     = A.OUT_DIV_CODE
	                                              AND C3.WH_CODE      = A.OUT_WH_CODE
	                                              AND C3.WH_CELL_CODE = A.OUT_WH_CELL_CODE
	           LEFT  JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
	                                              AND C4.DIV_CODE     = A.DIV_CODE
	                                              AND C4.ITEM_CODE    = A.ITEM_CODE
	           /*'20121017 JOIN 오류  LOT_NO JOIN  추가*/
	            LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
	                                               AND M1.MAIN_CODE    = N'B084'
	                                               AND M1.SUB_CODE     = N'D'
	            --LEFT  JOIN BSA210T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
	            --                                   AND M2.TYPE_LEVEL   = A.DIV_CODE
	            --                                   --AND M2.TREE_CODE    = A.DEPT_CODE
	    WHERE  A.COMP_CODE                = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE                 = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">	
	    AND    A.WH_CODE                  = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE  			  = #{WH_CELL_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE)">
	    AND    A.REQSTOCK_DATE            = #{REQSTOCK_DATE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
	    AND    A.REQSTOCK_NUM             = #{REQSTOCK_NUM}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
	    AND    A.REQ_PRSN                 = #{REQ_PRSN}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUT_DIV_CODE)">
	    AND    A.OUT_DIV_CODE             = #{OUT_DIV_CODE}
	    </if>
	    
	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
		SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END 
		
	</select>
	
	<select id="btr100ukrvServiceImpl.QtySet" parameterType="Map" resultType="rMap">		/* ITEM_CODE 선택시 수량 SET */
		/* btr110ukrv.Cbtr110ukrv[fnInvInfo] Query01 */
		BEGIN
		    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
		                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장 */
		                  , @BASIS_YYYYMM       NVARCHAR(06)                /* (필수) 기준일 */
		                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고 */
		                  , @WH_CELL_CODE       NVARCHAR(20)                /* (필수) 창고CELL */
		                  , @ITEM_CODE          NVARCHAR(20)                /* (필수) 품목코드 */
		
		/*  1. 변수 값 할당 */
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @BASIS_YYYYMM       = #{INOUT_DATE}
		    SET @WH_CODE            = #{WH_CODE}
		    SET @WH_CELL_CODE       = #{WH_CELL_CODE}
		    SET @ITEM_CODE          = #{ITEM_CODE}
		
		    SELECT ISNULL(MAX(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.GOOD_STOCK_Q
		                           ELSE B.GOOD_STOCK_Q
		                      END ), 0)        AS GOOD_STOCK_Q
		         , ISNULL(MAX(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.BAD_STOCK_Q
		                           ELSE B.BAD_STOCK_Q
		                      END ), 0)        AS BAD_STOCK_Q
		         , ISNULL(MAX(C.AVERAGE_P), 0) AS AVERAGE_P
		    FROM              BPR200T A  WITH (NOLOCK)
		           LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                              AND B.DIV_CODE     = A.DIV_CODE
		                                              AND B.WH_CODE      = @WH_CODE
		                                              AND B.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BIV200T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                              AND C.DIV_CODE     = B.DIV_CODE
		                                              AND C.BASIS_YYYYMM = @BASIS_YYYYMM
		                                              AND C.WH_CODE      = B.WH_CODE
		                                              AND C.ITEM_CODE    = B.ITEM_CODE
		           LEFT  JOIN BIV150T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                              AND D.DIV_CODE     = A.DIV_CODE
		                                              AND D.WH_CODE      = @WH_CODE
		                                              AND D.WH_CELL_CODE = @WH_CELL_CODE
		                                              AND D.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.MAIN_CODE   = N'B084'
		                                              AND M1.SUB_CODE    = N'D'
		    WHERE  A.COMP_CODE = @COMP_CODE
		    AND    A.DIV_CODE  = @DIV_CODE
		    AND    A.ITEM_CODE = @ITEM_CODE
		    GROUP BY CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.COMP_CODE    ELSE B.COMP_CODE END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.DIV_CODE     ELSE B.DIV_CODE  END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CODE      ELSE B.WH_CODE   END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CELL_CODE END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.ITEM_CODE    ELSE B.ITEM_CODE END
		END
	</select>
	
	<select id="btr100ukrvServiceImpl.QtySetYsu" parameterType="Map" resultType="rMap">		/* ITEM_CODE 선택시 수량 SET */
          SELECT 
                   X.COMP_CODE, X.ITEM_CODE, SUM(ISNULL(X.STOCK_Q,0)) AS STOCK_Q
                   FROM
                   (
                            SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
          FROM BIV100T WITH(NOLOCK)
                         WHERE  COMP_CODE =  #{S_COMP_CODE}
                           AND  DIV_CODE  =  #{DIV_CODE}
                           AND  WH_CODE  =  #{WH_CODE}
         				   AND  ITEM_CODE  = #{ITEM_CODE}

                         UNION ALL
                       
           SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
          FROM UNILITE.VGetDailyStock WITH(NOLOCK)
                         WHERE  COMP_CODE =  #{S_COMP_CODE}
                           AND  DIV_CODE  =  #{DIV_CODE}
                           AND  WH_CODE  =  #{WH_CODE}
         				   AND  ITEM_CODE  = #{ITEM_CODE}
                   ) X GROUP BY COMP_CODE, ITEM_CODE
	</select>
				
	<select id="btr100ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		/* 검색 */
	/*btr100ukrv.Cbtr100ukrv[fnBtr100QPop] Query01*/
	BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */
	    SELECT A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                                 AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
			 , (CASE WHEN ISNULL(A.OUTSTOCK_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.OUTSTOCK_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.OUTSTOCK_DATE, 7, 2))
	             END)                                           AS OUTSTOCK_DATE 
	         ,(A.REQSTOCK_Q - A.OUTSTOCK_Q )                       AS NOTSTOCK_Q
	         , A.DIV_CODE
	         , A.WH_CODE
	         , C2.TREE_NAME                                        AS WH_NAME
	         , A.WH_CELL_CODE
	         , C3.WH_CELL_NAME
	         , A.OUT_DIV_CODE
	         , C4.TREE_NAME                                        AS OUT_WH_CODE
	         , C5.WH_CELL_NAME                                     AS OUT_WH_CELL_CODE
	         , A.LOT_NO
	         , A.REQ_PRSN
	         , A.CLOSE_YN
	         , A.REQSTOCK_NUM
	         , A.REQSTOCK_DATE
	         , A.REQSTOCK_SEQ
	    FROM   BIV500T A  WITH (NOLOCK)
	
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.ITEM_CODE    = A.ITEM_CODE
	           INNER JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.TYPE_LEVEL   = A.DIV_CODE
	                                              AND C2.TREE_CODE    = A.WH_CODE
	           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
	                                              AND C3.DIV_CODE     = A.DIV_CODE
	                                              AND C3.WH_CODE      = A.WH_CODE
	                                              AND C3.WH_CELL_CODE = A.WH_CELL_CODE
	           INNER JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
	                                              AND C4.TYPE_LEVEL   = A.OUT_DIV_CODE
	                                              AND C4.TREE_CODE    = A.OUT_WH_CODE
	           LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
	                                              AND C5.DIV_CODE     = A.OUT_DIV_CODE
	                                              AND C5.WH_CODE      = A.OUT_WH_CODE
	                                              AND C5.WH_CELL_CODE = A.OUT_WH_CELL_CODE
	    WHERE  A.COMP_CODE      = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE       = #{DIV_CODE}
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE        = #{WH_CODE}
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE   = #{WH_CELL_CODE}
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
	    AND    A.REQSTOCK_DATE &gt;= #{FR_INOUT_DATE}
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
	    AND    A.REQSTOCK_DATE &lt;= #{TO_INOUT_DATE}
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND    A.ITEM_CODE   LIKE    #{ITEM_CODE} + '%'
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	            END)        LIKE     #{ITEM_NAME} + '%'
	    </if>	
	    <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
	    AND    A.REQ_PRSN       = #{REQ_PRSN}
	    </if>	
	    ORDER BY A.WH_CODE, A.REQSTOCK_DATE
	    
	SET NOCOUNT OFF
    SET ARITHABORT OFF
	END
	</select>
	
	<select id="btr100ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		/* 참조 */
		
	/*btr100ukrv.Cbtr100ukrv[fnBtr100QPopStock] Query01*/
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE} 
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */
	    SELECT CAST(0 AS BIT)             AS CHOICE
	         , A.DIV_CODE 
	         , A.WH_CODE
	         , C2.TREE_NAME               AS WH_NAME 
	         , A.ITEM_CODE 
	         , ISNULL(B.STOCK_Q, 0)       AS STOCK_Q
	         , ISNULL(B.GOOD_STOCK_Q, 0)  AS GOOD_STOCK_Q
	         , ISNULL(B.BAD_STOCK_Q, 0)   AS BAD_STOCK_Q
	         , A.NOT_IN_Q
	         , A.NOT_OUT_Q
	         , ISNULL(C1.SAFE_STOCK_Q, 0) AS SAFE_STOCK_Q
	         , ISNULL(B.STOCK_Q, 0) + A.NOT_IN_Q - A.NOT_OUT_Q - ISNULL(C1.SAFE_STOCK_Q, 0) AS USE_STOCK_Q
	    FROM   (
	           SELECT X.DIV_CODE
	                , X.COMP_CODE
	                , X.WH_CODE
	                , X.ITEM_CODE
	                , SUM(X.NOT_IN_Q)  AS NOT_IN_Q
	                , SUM(X.NOT_OUT_Q) AS NOT_OUT_Q
	           FROM   (
	                  SELECT A.DIV_CODE
	                       , A.COMP_CODE
	                       , A.WH_CODE
	                       , A.ITEM_CODE
	                       ,(ISNULL((SELECT SUM((ISNULL(S1.QTY,0) - ISNULL(S1.RECEIPT_QTY,0)) * S1.TRNS_RATE) AS QTY
	                                 FROM   TIA110T S1 WITH (NOLOCK)
	                                 WHERE  S1.COMP_CODE             = A.COMP_CODE
	                                 AND    S1.DIV_CODE              = A.DIV_CODE
	                                 AND    S1.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S1.COMP_CODE             = @CompCode
	                                 AND    S1.CLOSE_FLAG           != 'Y'
	                                 AND   (S1.QTY - S1.RECEIPT_QTY) &gt; 0
	                                 <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE)">
	                                 AND    S1.DELIVERY_DATE        &lt;= #{DELIVERY_DATE}
	                                 </if>
	                                 ), 0)
	                       + ISNULL((SELECT SUM(CASE WHEN S1.WORK_END_YN = 'Y' 
	                                                      THEN ISNULL(S2.PRODT_Q,0) - ISNULL(S2.INSTOCK_Q,0)
	                                                 ELSE CASE WHEN ISNULL(S3.CONTROL_STATUS,'2') NOT IN ('8', '9')
	                                                                THEN S1.WKORD_Q - ISNULL(S2.INSTOCK_Q,0)
	                                                           ELSE ISNULL(S2.PRODT_Q,0) - ISNULL(S2.INSTOCK_Q,0)
	                                                      END
	                                            END)   AS QTY2
	                                 FROM   PMP100T S1 WITH (NOLOCK)
	                                        LEFT  JOIN (
	                                                   SELECT COMP_CODE
	                                                        , DIV_CODE
	                                                        , WKORD_NUM
	                                                        , SUM(ISNULL(IN_STOCK_Q, 0)) AS INSTOCK_Q
	                                                        , SUM(ISNULL(PRODT_Q, 0))    AS PRODT_Q
	                                                   FROM   PMR200T WITH (NOLOCK)
	                                                   WHERE  COMP_CODE = @CompCode
	                                                   GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM
	                                                   ) S2 ON S2.COMP_CODE = S1.COMP_CODE
	                                                       AND S2.DIV_CODE  = S1.DIV_CODE
	                                                       AND S2.WKORD_NUM = S1.WKORD_NUM 
	                                        LEFT  JOIN (
	                                                   SELECT COMP_CODE
	                                                        , DIV_CODE
	                                                        , WKORD_NUM
	                                                        , CONTROL_STATUS
	                                                   FROM   PMR100T WITH (NOLOCK)
	                                                   WHERE  COMP_CODE = @CompCode
	                                                   GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, CONTROL_STATUS
	                                                   ) S3 ON S3.COMP_CODE = S1.COMP_CODE
	                                                       AND S3.DIV_CODE  = S1.DIV_CODE
	                                                       AND S3.WKORD_NUM = S1.WKORD_NUM
	                                 WHERE  S1.COMP_CODE             = A.COMP_CODE
	                                 AND    S1.DIV_CODE              = A.DIV_CODE
	                                 AND    S1.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S1.COMP_CODE             = @CompCode
	                                 AND    S1.LINE_END_YN           = 'Y'
	                                 AND    S1.WKORD_Q               &gt; ISNULL(S2.INSTOCK_Q, 0)
	                                 AND   (S1.WORK_END_YN          != 'Y'
	                                     OR S1.PRODT_Q              &gt; 0 )
	                  				 <if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
	                                 AND    S1.PRODT_END_DATE       &lt;= #{PRODT_END_DATE}
	                                 </if>
	                                 ), 0)) AS NOT_IN_Q
	                       , 0  AS NOT_OUT_Q
	                  FROM   BPR200T A WITH (NOLOCK)
	                  WHERE  A.COMP_CODE  = @CompCode
	                  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	                  AND    A.ITEM_CODE  = #{ITEM_CODE}
	                  </if>
	
	                  UNION  All
	
	                  SELECT B.DIV_CODE
	                       , B.COMP_CODE
	                       , B.WH_CODE
	                       , B.ITEM_CODE
	                       , ISNULL(SUM(B.ORDER_Q - B.INSTOCK_Q),0) AS NOT_IN_Q
	                       , 0                                      AS NOT_OUT_Q
	                  FROM              MPO100T A WITH (NOLOCK)
	                         INNER JOIN MPO200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                           AND B.DIV_CODE  = A.DIV_CODE
	                                                           AND B.ORDER_NUM = A.ORDER_NUM
	                  WHERE  B.COMP_CODE               = @CompCode
	                  <if test="@foren.Ognl@isNotEmpty(DVRY_DATE)">
	                  AND    B.DVRY_DATE              &lt;= #{DVRY_DATE}
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	                  AND    B.ITEM_CODE               = #{ITEM_CODE}
	                  </if>
	                  AND    B.CONTROL_STATUS         != '9'
	                  AND   (B.ORDER_Q - B.INSTOCK_Q)  &gt; 0
	                  GROUP  BY B.COMP_CODE, B.DIV_CODE, B.WH_CODE, B.ITEM_CODE
	
	                  UNION  All
	
	                  SELECT A.DIV_CODE
	                       , A.COMP_CODE
	                       , A.WH_CODE
	                       , A.ITEM_CODE
	                       , 0 AS NOT_IN_Q
	                       ,(ISNULL((SELECT SUM((ISNULL(S2.QTY,0) - ISNULL(S2.SALE_QTY,0)) * S2.TRANS_RATE) AS QTY
	                                 FROM              TEA100T S1 WITH (NOLOCK)
	                                        INNER JOIN TEA110T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
	                                                                           AND S2.DIV_CODE  = S1.DIV_CODE
	                                                                           AND S2.SO_SER_NO = S1.SO_SER_NO
	                                 WHERE  S2.COMP_CODE             = A.COMP_CODE
	                                 AND    S2.DIV_CODE              = A.DIV_CODE
	                                 AND    S2.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S2.COMP_CODE             = @CompCode
	                                 AND   (S2.QTY - S2.SALE_QTY)    &gt; 0
	                                 AND    S1.SO_CONFIRM            = 'Y'
	                  			     <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE)">
	                                 AND    S2.DELIVERY_DATE        &lt;= #{DELIVERY_DATE}
	                                 </if>
	                                 ), 0)
	                       + ISNULL((SELECT SUM(S2.ORDER_Q + S2.RETURN_Q - S2.OUTSTOCK_Q) AS QTY1
	                                 FROM              SOF100T S1 WITH (NOLOCK)
	                                        INNER JOIN SOF110T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
	                                                                           AND S2.DIV_CODE  = S1.DIV_CODE
	                                                                           AND S2.ORDER_NUM = S1.ORDER_NUM
	                                 WHERE  S2.COMP_CODE             = A.COMP_CODE
	                                 AND    S2.DIV_CODE              = A.DIV_CODE
	                                 AND    S2.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S2.COMP_CODE             = @CompCode
	                                 AND   (S2.ORDER_Q + S2.RETURN_Q - S2.OUTSTOCK_Q) &gt; 0
	                                 AND    S2.ORDER_STATUS          = 'N'
	                                 <if test="@foren.Ognl@isNotEmpty(DVRY_DATE)">
	                                 AND    S2.DVRY_DATE            &lt;= #{DVRY_DATE}
	                                 </if>
	                                 ), 0)
	                       + ISNULL((SELECT SUM(ISNULL(S2.ALLOCK_Q, 0) - ISNULL(S2.OUTSTOCK_REQ_Q, 0)) AS QTY2
	                                 FROM              PMP100T S1 WITH (NOLOCK)
	                                        INNER JOIN PMP200T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
	                                                                           AND S2.DIV_CODE  = S1.DIV_CODE
	                                                                           AND S2.WKORD_NUM = S1.WKORD_NUM
	                                 WHERE  S2.COMP_CODE             = A.COMP_CODE
	                                 AND    S2.DIV_CODE              = A.DIV_CODE
	                                 AND    S2.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S2.COMP_CODE             = @CompCode
	                                 AND    S1.WORK_END_YN           = 'N'
	                                 AND    S1.LINE_END_YN           = 'Y'
	                                 AND    ISNULL(S2.ALLOCK_Q, 0)   &gt; ISNULL(S2.OUTSTOCK_REQ_Q, 0)
	                                 AND    S2.OUT_METH              = '2'
	                                 <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
	                                 AND    S1.PRODT_START_DATE     &lt;= #{PRODT_START_DATE}
	                                 </if>
	                                 ), 0)
	                       + ISNULL((SELECT SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) - ISNULL(S1.OUTSTOCK_Q, 0) + ISNULL(S1.CANCEL_Q, 0)) AS QTY3
	                                 FROM   PMP300T S1 WITH (NOLOCK)
	                                 WHERE  S1.COMP_CODE             = A.COMP_CODE
	                                 AND    S1.DIV_CODE              = A.DIV_CODE
	                                 AND    S1.ITEM_CODE             = A.ITEM_CODE
	                                 AND    S1.COMP_CODE             = @CompCode
	                                 AND    ISNULL(S1.CONTROL_STATUS,'0') &lt; '8' 
	                                 AND   (ISNULL(S1.OUTSTOCK_REQ_Q,0) - ISNULL(S1.OUTSTOCK_Q,0) + ISNULL(S1.CANCEL_Q,0)) &gt; 0 
	                                 <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE)">
	                                 AND    S1.OUTSTOCK_REQ_DATE    &lt;= #{OUTSTOCK_REQ_DATE}
	                                 </if>
	                                 ), 0)) AS NOT_OUT_Q
	                  FROM   BPR200T A WITH (NOLOCK)
	                  WHERE  A.COMP_CODE  = @CompCode
	                  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	                  AND    A.ITEM_CODE  = #{ITEM_CODE}
	                  </if>
	                  ) X
	           WHERE  X.COMP_CODE = @CompCode
	           GROUP BY X.COMP_CODE, X.DIV_CODE, X.WH_CODE, X.ITEM_CODE
	           ) A
	           LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                              AND B.DIV_CODE    = A.DIV_CODE
	                                              AND B.WH_CODE     = A.WH_CODE
	                                              AND B.ITEM_CODE   = A.ITEM_CODE
	           LEFT  JOIN BPR200T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
	                                              AND C1.DIV_CODE   = A.DIV_CODE
	                                              AND C1.ITEM_CODE  = A.ITEM_CODE
	           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
	                                              AND C2.TYPE_LEVEL = A.DIV_CODE
	                                              AND C2.TREE_CODE  = A.WH_CODE
	    WHERE  A.COMP_CODE = @CompCode
	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
	SET NOCOUNT OFF
    SET ARITHABORT OFF
	END
		
	</select>
	

	 
	<insert id="btr100ukrvServiceImpl.insertLogMaster" parameterType="Map">	/* 저장쿼리 */
	/*btr100ukrvServiceImpl.selectSaveList*/
	INSERT INTO L_BIV500T
     ( KEY_VALUE		    , OPR_FLAG,
    	REQSTOCK_NUM,		
		REQSTOCK_SEQ,		
		OUT_DIV_CODE,		
		OUT_WH_CODE,		
		OUT_WH_CELL_CODE,	
		ITEM_CODE,		
		ITEM_STATUS,		
		REQSTOCK_Q,			
		OUTSTOCK_Q,			
		OUTSTOCK_DATE,		
		CLOSE_YN,			
		DIV_CODE,			
		WH_CODE,			
		WH_CELL_CODE,		
		REQ_PRSN,			
		REQSTOCK_DATE,		
		LOT_NO,				
		REMARK,				
		PROJECT_NO,			
		INSERT_DB_USER,		
		INSERT_DB_TIME,		
		UPDATE_DB_USER,		
		UPDATE_DB_TIME,	
		COMP_CODE		 )
	
	VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG},
     	#{REQSTOCK_NUM},		
		#{REQSTOCK_SEQ},		
		#{OUT_DIV_CODE},		
		#{OUT_WH_CODE},		
		#{OUT_WH_CELL_CODE},	
		#{ITEM_CODE},			
		#{ITEM_STATUS},		
		#{REQSTOCK_Q},			
		#{OUTSTOCK_Q},		
		#{OUTSTOCK_DATE},		
		#{CLOSE_YN},			
		#{DIV_CODE},			
		#{WH_CODE},			
		#{WH_CELL_CODE},		
		#{REQ_PRSN},			
		#{REQSTOCK_DATE},		
		#{LOT_NO},				
		#{REMARK},				
		#{PROJECT_NO},	
		#{S_USER_ID},
		GETDATE(),
		#{S_USER_ID},
		GETDATE(),
		#{S_COMP_CODE}	 )				
	
	</insert> 
	
	<update id="btr100ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		
		{call SP_STOCK_StockMoveRequesting (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ReqstockNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
</mapper>