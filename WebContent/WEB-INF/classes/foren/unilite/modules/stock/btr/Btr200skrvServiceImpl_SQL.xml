<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr200skrvServiceImpl">
	<select id="btr200skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
		/* 창고 초기화 */
		SELECT A.WH_CODE
		  FROM BSA210T A WITH(NOLOCK)
		  LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                  AND B.DEPT_CODE = A.TREE_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND B.USER_ID   = #{S_USER_ID}
	</select>

	<select id="btr200skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* btr200skrvServiceImpl.selectList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode        NVARCHAR(08)    /* 법인코드        */
		          , @UserId          NVARCHAR(100)   /* 사용자ID        */
		          , @LangType        NVARCHAR(02)    /* 언어구분        */
		          , @RefItem         NVARCHAR(01)
		          , @DateFormat      NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT  A.ITEM_CODE
		          , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                 ELSE C1.ITEM_NAME
		            END                                           AS ITEM_NAME
		          , C1.SPEC
		          , C1.STOCK_UNIT
		          , A.OUT_DIV_CODE
		          , M1.TREE_CODE                                  AS OUT_WH_NAME
		          , M1.TREE_NAME                                  AS OUT_WH_CODE
		          , A.OUT_WH_CELL_CODE
		          , M3.WH_CELL_NAME                               AS OUT_WH_CELL_NAME
		          , CASE WHEN @LangType = 'KR' THEN M6.CODE_NAME
		                 WHEN @LangType = 'EN' THEN M6.CODE_NAME_EN
		                 WHEN @LangType = 'CN' THEN M6.CODE_NAME_CN
		                 WHEN @LangType = 'JP' THEN M6.CODE_NAME_JP
		                                       ELSE M6.CODE_NAME
		            END                                           AS ITEM_STATUS_NAME
		          , A.REQSTOCK_Q
		          , A.OUTSTOCK_Q
		          , A.REQSTOCK_Q - A.OUTSTOCK_Q                   AS NOTSTOCK_Q
		          , ISNULL(M5.GOOD_STOCK_Q,0)                     AS GOOD_STOCK_Q
		          , ISNULL(M5.BAD_STOCK_Q,0)                      AS BAD_STOCK_Q
		          , CASE WHEN ISNULL(A.OUTSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.OUTSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.OUTSTOCK_DATE, 7, 2))
		            END                                           AS OUTSTOCK_DATE
		          , A.REQSTOCK_NUM
		          , A.REQSTOCK_SEQ
		          , CASE WHEN ISNULL(A.REQSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.REQSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.REQSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.REQSTOCK_DATE, 7, 2))
		            END                                           AS REQSTOCK_DATE
		          , A.CLOSE_YN
		          , A.DIV_CODE
		          , M2.TREE_CODE                                  AS WH_NAME
		          , M2.TREE_NAME                                  AS WH_CODE
		          , M4.WH_CELL_NAME
		          , ISNULL(B.INOUT_Q, 0)                          AS INSTOCK_Q
		          , A.REQ_PRSN
		          , A.LOT_NO
		          , A.REMARK
		          , A.PROJECT_NO
		          , A.UPDATE_DB_USER
		          , A.UPDATE_DB_TIME
		          , A.ORDER_NUM
		          , A.ORDER_SEQ
		          , B.INOUT_DATE
		       FROM       BIV500T A  WITH (NOLOCK)
		       LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, MAX(ISNULL(A.ORDER_NUM, '')) ORDER_NUM, MAX(ISNULL(A.ORDER_SEQ, 0)) AS ORDER_SEQ
		                        , SUM(B.INOUT_Q) AS INOUT_Q , MAX(A.INOUT_DATE) AS INOUT_DATE
		                     FROM BTR100T A WITH(NOLOCK)
		                     LEFT  JOIN BTR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.DIV_CODE  = A.TO_DIV_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		                                                      AND B.BASIS_NUM = A.INOUT_NUM
		                                                      AND B.BASIS_SEQ = A.INOUT_SEQ
		                    WHERE A.INOUT_TYPE        = '2'
		                      AND A.CREATE_LOC        = '4'
		                      AND A.INOUT_METH        = '3'
		                      AND A.INOUT_TYPE_DETAIL = '99'
		                    GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ORDER_NUM, A.ORDER_SEQ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                                                                                  AND B.DIV_CODE  = A.OUT_DIV_CODE
		                                                                                                  AND B.ITEM_CODE = A.ITEM_CODE
		                                                                                                  AND B.ORDER_NUM = A.REQSTOCK_NUM
		                                                                                                  AND B.ORDER_SEQ = A.REQSTOCK_SEQ
		       LEFT  JOIN BPR100T C1 WITH (NOLOCK)  ON C1.COMP_CODE    = A.COMP_CODE
		                                           AND C1.ITEM_CODE    = A.ITEM_CODE
		       LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
		                                           AND M1.TYPE_LEVEL   = A.OUT_DIV_CODE
		                                           AND M1.TREE_CODE    = A.OUT_WH_CODE
		       LEFT  JOIN BSA220T M2 WITH (NOLOCK)  ON M2.COMP_CODE    = A.COMP_CODE
		                                           AND M2.TYPE_LEVEL   = A.DIV_CODE
		                                           AND M2.TREE_CODE    = A.WH_CODE
		       LEFT  JOIN BSA225T M3 WITH (NOLOCK)  ON M3.COMP_CODE    = A.COMP_CODE
		                                           AND M3.DIV_CODE     = A.OUT_DIV_CODE
		                                           AND M3.WH_CODE      = A.OUT_WH_CODE
		                                           AND M3.WH_CELL_CODE = A.OUT_WH_CELL_CODE
		       LEFT  JOIN BSA225T M4 WITH (NOLOCK)  ON M4.COMP_CODE    = A.COMP_CODE
		                                           AND M4.DIV_CODE     = A.DIV_CODE
		                                           AND M4.WH_CODE      = A.WH_CODE
		                                           AND M4.WH_CELL_CODE = A.WH_CELL_CODE
		       LEFT  JOIN BIV100T M5 WITH (NOLOCK)  ON M5.COMP_CODE    = A.COMP_CODE
		                                           AND M5.DIV_CODE     = A.OUT_DIV_CODE
		                                           AND M5.WH_CODE      = A.OUT_WH_CODE
		                                           AND M5.ITEM_CODE    = A.ITEM_CODE
		       LEFT  JOIN BSA100T M6 WITH (NOLOCK)  ON M6.COMP_CODE    = A.COMP_CODE
		                                           AND M6.SUB_CODE     = A.ITEM_STATUS
		                                           AND M6.MAIN_CODE    = 'B021'    /*양불구분*/
		    WHERE A.COMP_CODE         = @CompCode
		      AND A.DIV_CODE          = #{DIV_CODE}
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		      AND A.WH_CODE IN
		          <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
		                     #{item}
		          </foreach>                                     -- 창고
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		      AND A.WH_CELL_CODE IN
		          <foreach collection="WH_CELL_CODE" item="item2" separator="," close=")" open="(">
		                     #{item2}
		          </foreach>                                     -- 창고CELL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_FR)">
		      AND A.OUTSTOCK_DATE    &gt;= #{REQSTOCK_DATE_FR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_TO)">
		      AND A.OUTSTOCK_DATE    &lt;= #{REQSTOCK_DATE_TO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
		      AND A.REQ_PRSN          = #{REQ_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		      AND A.ITEM_CODE         LIKE #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		           END)               LIKE '%' + #{ITEM_NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_DIV_CODE)">
		      AND A.OUT_DIV_CODE      = #{OUT_DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CODE)">
		      AND A.OUT_WH_CODE IN
		          <foreach collection="OUT_WH_CODE" item="item" separator="," close=")" open="(">
		                     #{item}
		          </foreach>                                     -- 출고창고
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CELL_CODE)">
		      AND A.OUT_WH_CELL_CODE IN
		          <foreach collection="OUT_WH_CELL_CODE" item="item2" separator="," close=")" open="(">
		                     #{item2}
		          </foreach>                                     -- 출고창고CELL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		      AND C1.ITEM_LEVEL1      = #{ITEM_LEVEL1}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		      AND C1.ITEM_LEVEL2      = #{ITEM_LEVEL2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		      AND C1.ITEM_LEVEL3      = #{ITEM_LEVEL3}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM_FR)">
		      AND A.REQSTOCK_NUM     &gt;= #{REQSTOCK_NUM_FR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM_TO)">
		      AND A.REQSTOCK_NUM     &lt;= #{REQSTOCK_NUM_TO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		      AND A.ORDER_NUM         LIKE #{ORDER_NUM} + '%'
		    </if>
		    <if test="OUT_YN == &quot;Y&quot;">
		    --미출고
		      AND ISNULL(A.REQSTOCK_Q, 0) - A.OUTSTOCK_Q &gt; 0
		    </if>
		    <if test="OUT_YN == &quot;N&quot;">
		    --출고완료
		      AND A.REQSTOCK_Q - A.OUTSTOCK_Q &lt;= 0
		    </if>
		    <if test="IN_YN == &quot;Y&quot;">
		    --미입고
		      AND A.OUTSTOCK_Q - ISNULL(B.INOUT_Q, 0) &gt; 0
		    </if>
		    <if test="IN_YN == &quot;N&quot;">
		    --입고완료
		      AND A.OUTSTOCK_Q - ISNULL(B.INOUT_Q, 0) &lt;= 0
		      AND A.OUTSTOCK_Q &gt; 0
		    </if>
		    /* 선택조건 End        */

		UNION ALL

		    SELECT A.ITEM_CODE 
		         , CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                ELSE B.ITEM_NAME
		           END                                        AS ITEM_NAME
		         , B.SPEC
		         , B.STOCK_UNIT
		         , A.DIV_CODE                                 AS OUT_DIV_CODE
		         , M1.TREE_CODE                               AS OUT_WH_NAME
		         , M1.TREE_NAME                               AS OUT_WH_CODE
		         , M4.WH_CELL_CODE
		         , M6.WH_CELL_NAME                            AS OUT_CELL_NAME
		         , CASE WHEN @LangType = 'KR' THEN M5.CODE_NAME
		                WHEN @LangType = 'EN' THEN M5.CODE_NAME_EN
		                WHEN @LangType = 'CN' THEN M5.CODE_NAME_CN
		                WHEN @LangType = 'JP' THEN M5.CODE_NAME_JP
		                                      ELSE M5.CODE_NAME
		           END                                        AS ITEM_STATUS_NAME
		         , 0                                          AS REQSTOCK_Q        --출고요청수량
		         , A.INOUT_Q                                  AS OUTSTOCK_Q        --출고수량
		         , 0                                          AS NOTSTOCK_Q        --미출고수량
		         , ISNULL(M7.GOOD_STOCK_Q,0)                  AS GOOD_STOCK_Q
		         , ISNULL(M7.BAD_STOCK_Q,0)                   AS BAD_STOCK_Q
		         , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                        , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                        , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		           END                                        AS OUTSTOCK_DATE
		         , ''                                         AS REQSTOCK_NUM
		         , 0                                          AS REQSTOCK_SEQ
		         , ''                                         AS REQSTOCK_DATE
		         , ''                                         AS CLOSE_YN
		         , A.TO_DIV_CODE                              AS DIV_CODE
		         , M3.TREE_CODE                               AS WH_NAME
		         , M3.TREE_NAME                               AS WH_CODE
		         , C.WH_CELL_NAME 
		         , ISNULL(M4.INOUT_Q,0)                       AS INSTOCK_Q        --입고량
		         , ''                                         AS REQ_PRSN
		         , A.LOT_NO
		         , A.REMARK
		         , A.PROJECT_NO
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , ''                                         AS ORDER_NUM
		         , 0                                          AS ORDER_SEQ
		         , A.INOUT_DATE
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN BPR100T B  WITH (NOLOCK)  ON B.COMP_CODE   = A.COMP_CODE
		                                            AND B.ITEM_CODE   = A.ITEM_CODE
		        LEFT  JOIN BSA225T C  WITH (NOLOCK)  ON C.COMP_CODE   = A.COMP_CODE
		                                            AND C.DIV_CODE    = A.DIV_CODE
		                                            AND C.WH_CODE     = A.WH_CODE
		                                            AND C.WH_CELL_CODE= A.WH_CELL_CODE
		        LEFT  JOIN BIV500T D  WITH (NOLOCK)  ON D.COMP_CODE   = A.COMP_CODE
		                                            AND D.DIV_CODE    = A.DIV_CODE
		                                            AND D.REQSTOCK_NUM= A.ORDER_NUM
		                                            AND D.REQSTOCK_SEQ= A.ORDER_SEQ
		        LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
		                                            AND M1.TREE_CODE  = A.WH_CODE
		        LEFT  JOIN BOR120T M2 WITH (NOLOCK)  ON M2.COMP_CODE  = A.COMP_CODE
		                                            AND M2.DIV_CODE   = A.TO_DIV_CODE
		        LEFT  JOIN BSA220T M3 WITH (NOLOCK)  ON M3.COMP_CODE  = A.COMP_CODE
		                                            AND M3.TREE_CODE  = A.INOUT_CODE
		        LEFT JOIN ( SELECT COMP_CODE, DIV_CODE, BASIS_NUM, BASIS_SEQ, SUM(ISNULL(INOUT_Q, 0)) AS INOUT_Q, WH_CODE, WH_CELL_CODE
		                      FROM BTR100T WITH(NOLOCK)
		                     WHERE INOUT_TYPE        = '1'
		                       AND CREATE_LOC        = '4'
		                       AND INOUT_METH        = '3'
		                       AND INOUT_TYPE_DETAIL = '99'
		                       AND DIV_CODE          = '01'
		                    GROUP BY COMP_CODE, DIV_CODE, BASIS_NUM, BASIS_SEQ, WH_CODE, WH_CELL_CODE ) M4 ON M4.COMP_CODE  = A.COMP_CODE
		                                                                                                  AND M4.DIV_CODE   = A.TO_DIV_CODE
		                                                                                                  AND M4.BASIS_NUM  = A.INOUT_NUM
		                                                                                                  AND M4.BASIS_SEQ  = A.INOUT_SEQ
		        LEFT JOIN BSA225T M6 WITH (NOLOCK)  ON  M6.COMP_CODE    = M4.COMP_CODE
		                                            AND M6.DIV_CODE     = M4.DIV_CODE
		                                            AND M6.WH_CODE      = M4.WH_CODE
		                                            AND M6.WH_CELL_CODE = M4.WH_CELL_CODE
		        LEFT  JOIN BSA100T M5 WITH (NOLOCK)  ON M5.COMP_CODE    = A.COMP_CODE
		                                            AND M5.SUB_CODE     = A.ITEM_STATUS
		                                            AND M5.MAIN_CODE    = 'B021'    /*양불구분*/
		        LEFT  JOIN BIV100T M7 WITH (NOLOCK)  ON M7.COMP_CODE    = A.COMP_CODE
		                                            AND M7.DIV_CODE     = A.DIV_CODE
		                                            AND M7.WH_CODE      = A.WH_CODE
		                                            AND M7.ITEM_CODE    = A.ITEM_CODE
		    WHERE A.COMP_CODE             = @CompCode
		      AND A.TO_DIV_CODE           = #{DIV_CODE}
		      AND A.INOUT_TYPE            = '2'
		      AND A.CREATE_LOC            = '4'
		      AND A.INOUT_METH            = '3'
		      AND A.INOUT_TYPE_DETAIL     = '99'
		      AND ISNULL(A.ORDER_NUM, '') = ''
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		      AND M3.TREE_CODE IN
		          <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
		                     #{item}
		          </foreach>                                     -- 창고
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		      AND A.WH_CELL_CODE IN
		          <foreach collection="WH_CELL_CODE" item="item2" separator="," close=")" open="(">
		                     #{item2}
		          </foreach>                                     -- 창고CELL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_FR)">
		      AND A.INOUT_DATE        &gt;= #{REQSTOCK_DATE_FR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_TO)">
		      AND A.INOUT_DATE        &lt;= #{REQSTOCK_DATE_TO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
		    --없음
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		      AND A.ITEM_CODE         LIKE #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                    ELSE B.ITEM_NAME
		           END)               LIKE '%' + #{ITEM_NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_DIV_CODE)">
		      AND A.DIV_CODE              = #{OUT_DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CODE)">
		      AND M1.TREE_CODE IN
		          <foreach collection="OUT_WH_CODE" item="item" separator="," close=")" open="(">
		                     #{item}
		          </foreach>                                     -- 출고창고
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CELL_CODE)">
		      AND M4.WH_CELL_CODE IN
		          <foreach collection="OUT_WH_CELL_CODE" item="item2" separator="," close=")" open="(">
		                     #{item2}
		          </foreach>                                     -- 출고창고CELL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		      AND B.ITEM_LEVEL1      = #{ITEM_LEVEL1}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		      AND B.ITEM_LEVEL2      = #{ITEM_LEVEL2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		      AND B.ITEM_LEVEL3      = #{ITEM_LEVEL3}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM_FR)">
		    --없음
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM_TO)">
		    --없음
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		    --없음
		    </if>
		    <if test="OUT_YN == &quot;Y&quot;">
		    --없음
		    	AND 1 = 2
		    </if>
		    <if test="OUT_YN == &quot;N&quot;">
		    --없음
		    </if>
		    <if test="IN_YN == &quot;Y&quot;">
		    --미입고
		      AND A.INOUT_Q - ISNULL(M4.INOUT_Q,0) &gt; 0
		    </if>
		    <if test="IN_YN == &quot;N&quot;">
		    --입고완료
		      AND A.INOUT_Q - ISNULL(M4.INOUT_Q,0) &lt;= 0
		    </if>

		    ORDER BY OUT_WH_CODE, WH_CODE, ITEM_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>