<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr101ukrvServiceImpl">
<!-- 20210129추가: 창고CELL 코드 가져오는 로직 -->
	<select id="btr101ukrvServiceImpl.getWhCellCode" parameterType="Map" resultType="string">
		/* btr101ukrvServiceImpl.getWhCellCode */
		SELECT WH_CELL_CODE
		  FROM BSA225T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND WH_CODE    = #{WH_CODE}
		   AND DEFAULT_YN = 'Y'
	</select>

    <select id="btr101ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">    /* 창고 초기화 */
        SELECT
            A.WH_CODE
        FROM BSA210T A WITH(NOLOCK)
            LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                            AND B.DEPT_CODE = A.TREE_CODE
        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND B.USER_ID = #{S_USER_ID}
    </select>

    <select id="btr101ukrvServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  BIV500T    A WITH (NOLOCK)
            WHERE   A.COMP_CODE      = #{S_COMP_CODE}
              AND   A.REQSTOCK_NUM   = #{REQSTOCK_NUM}
    </select>

    <select id="btr101ukrvServiceImpl.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE BIV500T
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND REQSTOCK_NUM    = #{REQSTOCK_NUM}
    </select>

    <select id="btr101ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">      /* 조회 */

    --btr100ukrv.Cbtr100ukrv[fnBtr100QStd] Query01
    BEGIN

    -----------------------------------------------------------------------------------------------------------------------
        DECLARE @RefItem            NVARCHAR(01)

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = #{S_USER_ID}

        SET @RefItem = ISNULL(@RefItem, '0')

    -----------------------------------------------------------------------------------------------------------------------
        SELECT
               A.REQSTOCK_NUM
             , A.REQSTOCK_SEQ
             , A.OUT_DIV_CODE
             , A.OUT_WH_CODE
             , C2.TREE_NAME                                        AS OUT_WH_NAME
             , A.OUT_WH_CELL_CODE
             , C3.WH_CELL_NAME                                     AS OUT_WH_CELL_NAME
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE C1.ITEM_NAME
               END                                                 AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , A.ITEM_STATUS
             , A.REQSTOCK_Q
             , A.OUTSTOCK_Q
             ,(A.REQSTOCK_Q - A.OUTSTOCK_Q)                        AS NOTSTOCK_Q
             ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, #{REQSTOCK_DATE}, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
             , ISNULL(B.GOOD_STOCK_Q, 0)                           AS GOOD_STOCK_Q
             , ISNULL(B.BAD_STOCK_Q, 0)                            AS BAD_STOCK_Q
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_DATE) AS OUTSTOCK_DATE
             , A.CLOSE_YN
             , A.DIV_CODE
             , A.WH_CODE
             , A.WH_CELL_CODE
             , A.REQ_PRSN
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.REQSTOCK_DATE) AS REQSTOCK_DATE
             , A.LOT_NO
             , A.REMARK
             , A.PROJECT_NO
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , A.COMP_CODE
             , C4.ITEM_ACCOUNT
             , A.ORDER_NUM
             , A.ORDER_SEQ
             , A.GW_FLAG
             , A.GW_DOC
             , A.DRAFT_NO
        FROM              BIV500T A  WITH (NOLOCK)
               LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                  AND B.DIV_CODE      = A.OUT_DIV_CODE
                                                  AND B.WH_CODE       = A.OUT_WH_CODE
                                                  AND B.ITEM_CODE     = A.ITEM_CODE
               INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                  AND C1.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                  AND C2.TYPE_LEVEL   = A.OUT_DIV_CODE
                                                  AND C2.TREE_CODE    = A.OUT_WH_CODE
               LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
                                                  AND C3.DIV_CODE     = A.OUT_DIV_CODE
                                                  AND C3.WH_CODE      = A.OUT_WH_CODE
                                                  AND C3.WH_CELL_CODE = A.OUT_WH_CELL_CODE
               LEFT  JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                                  AND C4.DIV_CODE     = A.DIV_CODE
                                                  AND C4.ITEM_CODE    = A.ITEM_CODE
        WHERE  A.COMP_CODE                = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND    A.DIV_CODE                 = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
        AND    A.REQSTOCK_NUM             = #{REQSTOCK_NUM}
        </if>


        --ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
        ORDER BY A.REQSTOCK_NUM

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END

    </select>

    <select id="btr101ukrvServiceImpl.QtySet" parameterType="Map" resultType="rMap">        /* ITEM_CODE 선택시 수량 SET */
        /* btr110ukrv.Cbtr110ukrv[fnInvInfo] Query01 */
        BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
                          , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장 */
                          , @BASIS_YYYYMM       NVARCHAR(06)                /* (필수) 기준일 */
                          , @WH_CODE            NVARCHAR(08)                /* (필수) 창고 */
                          , @WH_CELL_CODE       NVARCHAR(20)                /* (필수) 창고CELL */
                          , @ITEM_CODE          NVARCHAR(20)                /* (필수) 품목코드 */

        /*  1. 변수 값 할당 */
            SET @COMP_CODE          = #{S_COMP_CODE}
            SET @DIV_CODE           = #{DIV_CODE}
            SET @BASIS_YYYYMM       = #{INOUT_DATE}
            SET @WH_CODE            = #{WH_CODE}
            SET @WH_CELL_CODE       = #{WH_CELL_CODE}
            SET @ITEM_CODE          = #{ITEM_CODE}

            SELECT ISNULL(SUM(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.GOOD_STOCK_Q
                                   ELSE B.GOOD_STOCK_Q
                              END ), 0)        AS GOOD_STOCK_Q
                 , ISNULL(SUM(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.BAD_STOCK_Q
                                   ELSE B.BAD_STOCK_Q
                              END ), 0)        AS BAD_STOCK_Q
                 , ISNULL(MAX(C.AVERAGE_P), 0) AS AVERAGE_P
            FROM              BPR200T A  WITH (NOLOCK)
                   LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                      AND B.DIV_CODE     = A.DIV_CODE
                                                      AND B.WH_CODE      = @WH_CODE
                                                      AND B.ITEM_CODE    = A.ITEM_CODE
                   LEFT  JOIN BIV200T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                                      AND C.DIV_CODE     = B.DIV_CODE
                                                      AND C.BASIS_YYYYMM = @BASIS_YYYYMM
                                                      AND C.WH_CODE      = B.WH_CODE
                                                      AND C.ITEM_CODE    = B.ITEM_CODE
                   LEFT  JOIN BIV150T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                                      AND D.DIV_CODE     = A.DIV_CODE
                                                      AND D.WH_CODE      = @WH_CODE
--                                                    AND D.WH_CELL_CODE = @WH_CELL_CODE
                                                      AND D.ITEM_CODE    = A.ITEM_CODE
                                                      AND D.SUM_TYPE     = 'D'
                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                      AND M1.MAIN_CODE   = N'B084'
                                                      AND M1.SUB_CODE    = N'D'
            WHERE  A.COMP_CODE = @COMP_CODE
            AND    A.DIV_CODE  = @DIV_CODE
            AND    A.ITEM_CODE = @ITEM_CODE
            GROUP BY CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.COMP_CODE    ELSE B.COMP_CODE END
                   , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.DIV_CODE     ELSE B.DIV_CODE  END
                   , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CODE      ELSE B.WH_CODE   END
--                 , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CELL_CODE END
                   , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.ITEM_CODE    ELSE B.ITEM_CODE END
        END
    </select>

    <select id="btr101ukrvServiceImpl.QtySetYsu" parameterType="Map" resultType="rMap">     /* ITEM_CODE 선택시 수량 SET */
          SELECT
                   X.COMP_CODE, X.ITEM_CODE, SUM(ISNULL(X.STOCK_Q,0)) AS STOCK_Q
                   FROM
                   (
                            SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
          FROM BIV100T WITH(NOLOCK)
                         WHERE  COMP_CODE =  #{S_COMP_CODE}
                           AND  DIV_CODE  =  #{DIV_CODE}
                           AND  WH_CODE  =  #{WH_CODE}
                           AND  ITEM_CODE  = #{ITEM_CODE}

                         UNION ALL

           SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
          FROM UNILITE.VGetDailyStock WITH(NOLOCK)
                         WHERE  COMP_CODE =  #{S_COMP_CODE}
                           AND  DIV_CODE  =  #{DIV_CODE}
                           AND  WH_CODE  =  #{WH_CODE}
                           AND  ITEM_CODE  = #{ITEM_CODE}
                   ) X GROUP BY COMP_CODE, ITEM_CODE
    </select>

    <select id="btr101ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">      /* 검색 */
    /*btr101ukrv.Cbtr101ukrv[fnBtr101QPop] Query01*/
    BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

        DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
              , @UserId      NVARCHAR(100) /* 사용자ID    */
              , @LangType    NVARCHAR(2)  /* 언어구분    */
              , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
        SELECT     A.ITEM_CODE
				 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
				        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
				        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
				        ELSE C1.ITEM_NAME
				   END                                                 AS ITEM_NAME
				 , C1.SPEC
				 , C1.STOCK_UNIT
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_DATE) AS OUTSTOCK_DATE
				 , ISNULL(A.REQSTOCK_Q, 0)                             AS REQSTOCK_Q
				 ,(A.REQSTOCK_Q - A.OUTSTOCK_Q )                       AS NOTSTOCK_Q
				 , A.DIV_CODE
				 , A.WH_CODE
				 , C2.TREE_NAME                                        AS WH_NAME
				 , A.WH_CELL_CODE
				 , C3.WH_CELL_NAME
				 , A.OUT_DIV_CODE
				 , C4.TREE_NAME                                        AS OUT_WH_CODE
				 , C5.WH_CELL_NAME                                     AS OUT_WH_CELL_CODE
				 , A.LOT_NO
				 , A.PROJECT_NO
				 , A.REQ_PRSN
				 , A.CLOSE_YN
				 , A.REQSTOCK_NUM
				 , A.REQSTOCK_DATE
				 , A.REQSTOCK_SEQ
				 , A.TEMPC_01 AS REQUEST_TYPE
         FROM       BIV500T A  WITH (NOLOCK)
         INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                            AND C1.ITEM_CODE    = A.ITEM_CODE
         INNER JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                            AND C2.TYPE_LEVEL   = A.DIV_CODE
                                            AND C2.TREE_CODE    = A.WH_CODE
         LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
                                            AND C3.DIV_CODE     = A.DIV_CODE
                                            AND C3.WH_CODE      = A.WH_CODE
                                            AND C3.WH_CELL_CODE = A.WH_CELL_CODE
         INNER JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                            AND C4.TYPE_LEVEL   = A.OUT_DIV_CODE
                                            AND C4.TREE_CODE    = A.OUT_WH_CODE
         LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
                                            AND C5.DIV_CODE     = A.OUT_DIV_CODE
                                            AND C5.WH_CODE      = A.OUT_WH_CODE
                                            AND C5.WH_CELL_CODE = A.OUT_WH_CELL_CODE
        WHERE  A.COMP_CODE      = @CompCode
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND    A.DIV_CODE       = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
        AND    A.WH_CODE        = #{WH_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
        AND    A.WH_CELL_CODE   = #{WH_CELL_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
        AND    A.REQSTOCK_DATE &gt;= #{FR_INOUT_DATE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
        AND    A.REQSTOCK_DATE &lt;= #{TO_INOUT_DATE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
        AND    A.ITEM_CODE   LIKE    #{ITEM_CODE} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
        AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                         ELSE C1.ITEM_NAME
                END)        LIKE     #{ITEM_NAME} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
        AND    A.REQ_PRSN       = #{REQ_PRSN}
        </if>
        <if test="REQUEST_TYPE == &quot;R&quot;">
        AND     A.TEMPC_01 = 'R'
        </if>
        <if test="REQUEST_TYPE == &quot;N&quot;">
        AND     A.TEMPC_01 = 'N'
        </if>
        ORDER BY A.REQSTOCK_NUM, A.REQSTOCK_SEQ, A.WH_CODE, A.REQSTOCK_DATE

    SET NOCOUNT OFF
    SET ARITHABORT OFF
    END
    </select>
    <select id="btr101ukrvServiceImpl.selectSalesOrderList" parameterType="Map" resultType="rMap">
        /* str103ukrv.Cstr103ukrv[fnSof101QRef] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE   @CompCode    NVARCHAR(08)/* 법인코드    */
                    , @UserId      NVARCHAR(100)/* 사용자ID    */
                    , @LangType    NVARCHAR(2) /* 언어구분    */
                    , @RefItem     NVARCHAR(01)/* 명칭 참조 유형  */
                    , @DateFormat  NVARCHAR(10)/* 날짜 포맷 유형 설정 */
                    , @TimeSI      NVARCHAR(01)
                    , @TimeSR      NVARCHAR(01)
                    , @TimeSS      NVARCHAR(01)

            SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
                 , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
                 , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
             FROM BSA100T
            WHERE COMP_CODE = @CompCode
              AND MAIN_CODE = N'S048'
              AND SUB_CODE IN(N'SI', N'SR', N'SS')

            IF @TimeSI IS NULL
                SET @TimeSI = 'N'
            IF @TimeSR IS NULL
                SET @TimeSR = 'N'
            IF @TimeSS IS NULL
                SET @TimeSS = 'N'

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH(NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH(NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            SELECT
                  CAST(0 AS BIT)AS CHOICE
                , A.ORDER_NUM
                , A.SER_NO
                , A.SO_KIND
                , ISNULL(C4.REF_CODE2,'')AS INOUT_TYPE_DETAIL
                , A.ITEM_CODE
                , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
                        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
                                            ELSE C2.ITEM_NAME
                    END)                                           AS ITEM_NAME
                , C2.SPEC
                , CASE WHEN ISNULL(E.CONST_ITEM_CODE, '') = '' THEN 'false' ELSE 'true' END  AS SET_APPLY
                , CASE WHEN ISNULL(E.CONST_ITEM_CODE, '') = '' THEN 'N' ELSE 'Y' END         AS SET_YN
                , A.ORDER_UNIT
                , A.TRANS_RATE
                ,(CASE WHEN ISNULL(A.DVRY_DATE , '')= ''
                       THEN ''
                       ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.DVRY_DATE, 1, 4))
                                                                , 'MM'   , SUBSTRING(A.DVRY_DATE, 5, 2))
                                                                , 'DD'   , SUBSTRING(A.DVRY_DATE, 7, 2))
                END)+ RTRIM(' ' + CASE @TimeSS WHEN 'Y' THEN ISNULL(A.DVRY_DATE,'')
                                                ELSE ''
                                    END)                                           AS DVRY_DATE
                ,(A.ORDER_Q +
                A.RETURN_Q -
                A.OUTSTOCK_Q -
               (A.ISSUE_REQ_Q -
                  ISNULL(SUM(C.ISSUE_QTY),0)))AS NOT_INOUT_Q
                , A.ORDER_Q
                , A.ISSUE_REQ_Q
                , A.ORDER_WGT_Q
                , A.ORDER_VOL_Q
                , ISNULL(A.PROJECT_NO, B.PROJECT_NO)AS PROJECT_NO
                , (CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
                        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
                                            ELSE C1.CUSTOM_NAME
                    END)                                           AS CUSTOM_NAME
                , A.PO_NUM
                , CONVERT(NVARCHAR, '')             AS PAY_METHODE1
                , CONVERT(NVARCHAR, '')             AS LC_SER_NO
                , B.CUSTOM_CODE
                , CONVERT(NVARCHAR, A.OUT_DIV_CODE) AS OUT_DIV_CODE
                , A.ORDER_P
                , A.ORDER_O
                , A.TAX_TYPE
                , A.TEMPC_01    AS WH_CODE
                , B.MONEY_UNIT
                , B.EXCHG_RATE_O
                , A.ACCOUNT_YNC
                , A.DISCOUNT_RATE
                , B.ORDER_PRSN AS ORDER_PRSN
                , A.DVRY_CUST_CD
                , A.SALE_CUST_CD
                ,(SELECT CUSTOM_NAME
                    FROM BCM100T WITH(NOLOCK)
                    WHERE COMP_CODE   = A.COMP_CODE
                    AND CUSTOM_CODE = A.SALE_CUST_CD)AS SALE_CUST_NM
                , B.BILL_TYPE
                , B.ORDER_TYPE
                , A.PRICE_YN
                , A.PO_SEQ
                , C1.CREDIT_YN
                , ISNULL(C1.WON_CALC_BAS , '3')AS WON_CALC_BAS
                , B.TAX_INOUT
                , B.AGENT_TYPE
                , ISNULL(C2.STOCK_CARE_YN, 'Y')AS STOCK_CARE_YN
                , C2.STOCK_UNIT
                ,(SELECT DVRY_CUST_NM
                    FROM SCM100T WITH(NOLOCK)
                    WHERE COMP_CODE   = A.COMP_CODE
                    AND CUSTOM_CODE = B.CUSTOM_CODE
                    AND CAST(DVRY_CUST_SEQ AS NVARCHAR(8))= A.DVRY_CUST_CD)AS DVRY_CUST_NAME
                ,(CASE A.RETURN_Q
                        WHEN 0
                            THEN 'N'
                            ELSE(CASE(A.RETURN_Q / ABS(A.RETURN_Q))
                                        WHEN -1
                                            THEN 'N'
                                        WHEN 0
                                            THEN 'N'
                                            ELSE 'Y'
                                    END)
                    END)AS RETURN_Q_YN
                , A.DIV_CODE                                                       /* 영업담당의 사업장 */
                , A.ORDER_TAX_O                                                    /* 세액 */
                ,(SELECT ISNULL(EXCESS_RATE,0)
                    FROM BPR100T WITH(NOLOCK)
                    WHERE COMP_CODE = A.COMP_CODE
                    AND ITEM_CODE = A.ITEM_CODE)AS EXCESS_RATE
                , B.DEPT_CODE
                , C3.ITEM_ACCOUNT
                , ISNULL(C5.GOOD_STOCK_Q, 0)                              AS STOCK_Q
                , A.REMARK
                , A.PRICE_TYPE
                , A.ORDER_WGT_P                                            AS ORDER_FOR_WGT_P
                , A.ORDER_VOL_P                                            AS ORDER_FOR_VOL_P
                , A.ORDER_WGT_P * B.EXCHG_RATE_O                           AS ORDER_WGT_P
                , A.ORDER_VOL_P * B.EXCHG_RATE_O                           AS ORDER_VOL_P
                , A.WGT_UNIT
                , A.UNIT_WGT
                , A.VOL_UNIT
                , A.UNIT_VOL
                , ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(D.REQSTOCK_Q, 0)      AS NOT_REQSTOCK_Q
            FROM           SOF110T A  WITH(NOLOCK)
                INNER JOIN SOF100T B  WITH(NOLOCK)   ON B.COMP_CODE      = A.COMP_CODE
                                                    AND B.DIV_CODE       = A.DIV_CODE
                                                    AND B.ORDER_NUM      = A.ORDER_NUM
                LEFT  JOIN SRQ100T C  WITH(NOLOCK)   ON C.COMP_CODE      = A.COMP_CODE
                                                    AND C.ISSUE_DIV_CODE = A.OUT_DIV_CODE
                                                    AND C.ORDER_NUM      = A.ORDER_NUM
                                                    AND C.SER_NO         = A.SER_NO
                INNER JOIN BCM100T C1 WITH(NOLOCK)  ON  C1.COMP_CODE     = B.COMP_CODE
                                                    AND C1.CUSTOM_CODE   = B.CUSTOM_CODE
                INNER JOIN BPR100T C2 WITH(NOLOCK)   ON C2.COMP_CODE     = A.COMP_CODE
                                                    AND C2.ITEM_CODE     = A.ITEM_CODE
                INNER JOIN BPR200T C3 WITH(NOLOCK)   ON C3.COMP_CODE     = A.COMP_CODE
                                                    AND C3.DIV_CODE      = A.DIV_CODE
                                                    AND C3.ITEM_CODE     = A.ITEM_CODE
                LEFT  JOIN BSA100T C4 WITH(NOLOCK)   ON C4.COMP_CODE     = A.COMP_CODE
                                                    AND C4.MAIN_CODE     = 'S065'
                                                    AND C4.SUB_CODE      = A.SO_KIND
                LEFT  JOIN BIV100T C5 WITH(NOLOCK)   ON C5.COMP_CODE     = A.COMP_CODE
                                                    AND C5.DIV_CODE      = A.DIV_CODE
                                                    AND C5.WH_CODE       = C3.WH_CODE
                                                    AND C5.ITEM_CODE     = A.ITEM_CODE
                LEFT JOIN (SELECT
				                 COMP_CODE
							    ,DIV_CODE
							    ,ORDER_NUM
							    ,ORDER_SEQ
							    ,SUM(REQSTOCK_Q) AS REQSTOCK_Q
						   FROM BIV500T WITH(NOLOCK)
						   WHERE COMP_CODE = @CompCode
						     AND DIV_CODE  = #{DIV_CODE}
							 AND ORDER_NUM &gt; ''
							 AND ORDER_SEQ &gt; 0
						   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ
						   ) D ON D.COMP_CODE  = A.COMP_CODE
						      AND D.DIV_CODE   = A.DIV_CODE
						      AND D.ORDER_NUM  = A.ORDER_NUM
						      AND D.ORDER_SEQ  = A.SER_NO
			    LEFT JOIN SET100T E WITH(NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
			                                    AND E.DIV_CODE        = A.DIV_CODE
			                                    AND E.SET_ITEM_CODE   = A.ITEM_CODE
			                                    AND E.CONST_ITEM_CODE = '$'
			                                    AND EXISTS(SELECT 'X'
			                                                 FROM SET100T X WITH(NOLOCK)
			                                                WHERE X.COMP_CODE       = E.COMP_CODE
			                                                  AND X.DIV_CODE        = E.DIV_CODE
			                                                  AND X.SET_ITEM_CODE   = E.SET_ITEM_CODE
			                                                  AND X.CONST_ITEM_CODE != '$'
			                                               )

            WHERE A.ORDER_STATUS      = 'N'                                            /* 미마감인 건만 조회 */
              AND ISNULL(B.STATUS,'6')= '6'
                                                      /* 승인완결여부 */
            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
              AND B.MONEY_UNIT       = #{MONEY_UNIT}            /*마스터폼 정보*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
              AND A.OUT_DIV_CODE     = #{DIV_CODE}          /*마스터폼 정보*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              AND B.CUSTOM_CODE      = #{CUSTOM_CODE}           /*마스터폼 정보*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
              AND C1.CUSTOM_NAME     = #{CUSTOM_NAME}           /*마스터폼 정보*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
              AND A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
              AND C2.ITEM_NAME    LIKE #{ITEM_NAME} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
              AND A.DVRY_DATE    &gt;= #{DVRY_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
              AND A.DVRY_DATE    &lt;= #{DVRY_DATE_TO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
              AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
              AND A.PROJECT_NO  LIKE #{PROJECT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(NATION_INOUT)">
              AND B.NATION_INOUT  = #{NATION_INOUT}
            </if>

              AND A.COMP_CODE        = @CompCode

            GROUP BY A.ORDER_NUM  , A.SER_NO      , C1.CUSTOM_NAME , B.CUSTOM_CODE  , A.ITEM_CODE
                , C2.ITEM_NAME    , C2.SPEC       , A.ORDER_UNIT   , A.TRANS_RATE   , A.DVRY_DATE
                , A.ORDER_Q       , A.RETURN_Q    , A.OUTSTOCK_Q   , A.ISSUE_REQ_Q  , A.PROJECT_NO
                , A.PO_NUM        , A.OUT_DIV_CODE, A.ORDER_P      , A.ORDER_O      , A.TAX_TYPE
                , B.MONEY_UNIT    , B.EXCHG_RATE_O, A.ACCOUNT_YNC  , A.DISCOUNT_RATE, B.PROJECT_NO
                , A.DVRY_CUST_CD  , A.SALE_CUST_CD, B.BILL_TYPE    , B.ORDER_TYPE   , A.PRICE_YN
                , A.PO_SEQ        , C1.CREDIT_YN  , C1.WON_CALC_BAS, B.TAX_INOUT    , B.AGENT_TYPE
                , C2.STOCK_CARE_YN, C2.STOCK_UNIT , A.DIV_CODE     , A.ORDER_STATUS , A.ORDER_TAX_O
                , A.COMP_CODE     , A.DVRY_TIME   , B.DEPT_CODE    , B.ORDER_PRSN   , C3.ITEM_ACCOUNT
                , C5.GOOD_STOCK_Q , A.REMARK      , A.ORDER_WGT_Q  , A.ORDER_VOL_Q  , A.PRICE_TYPE
                , A.PRICE_TYPE    , A.ORDER_WGT_P , A.ORDER_VOL_P  , A.WGT_UNIT     , A.SO_KIND, C4.REF_CODE2
                , A.UNIT_WGT      , A.UNIT_WGT    , A.VOL_UNIT     , A.UNIT_VOL     , C1.CUSTOM_NAME1
                , C1.CUSTOM_NAME2 , C2.ITEM_NAME1 , C2.ITEM_NAME2  , A.TEMPC_01
                , ISNULL(A.ORDER_UNIT_Q, 0), ISNULL(D.REQSTOCK_Q, 0), E.CONST_ITEM_CODE
              HAVING ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(D.REQSTOCK_Q, 0) > 0
--            HAVING A.ORDER_Q + A.RETURN_Q - A.OUTSTOCK_Q  -(A.ISSUE_REQ_Q - ISNULL(SUM(C.ISSUE_QTY), 0))&gt; 0
            ORDER BY A.ORDER_NUM, A.SER_NO, C1.CUSTOM_NAME, B.ORDER_PRSN, A.ITEM_CODE, A.DVRY_DATE


        SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    <select id="btr101ukrvServiceImpl.selectSetItemList" parameterType="Map" resultType="rMap">
        /*set하위 품목 list가져오기 */
        SELECT * FROM unilite.fnGetSetChildItem(#{S_COMP_CODE}, #{DIV_CODE}, #{ITEM_CODE}, #{NOT_REQSTOCK_Q})
    </select>
    <select id="btr101ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">     /* 참조 */

    /*btr101ukrv.Cbtr101ukrv[fnBtr101QPopStock] Query01*/
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
              , @UserId      NVARCHAR(100) /* 사용자ID    */
              , @LangType    NVARCHAR(2)  /* 언어구분    */
              , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
        SELECT CAST(0 AS BIT)             AS CHOICE
             , A.DIV_CODE
             , A.WH_CODE
             , C2.TREE_NAME               AS WH_NAME
             , A.ITEM_CODE
             , ISNULL(B.STOCK_Q, 0)       AS STOCK_Q
             , ISNULL(B.GOOD_STOCK_Q, 0)  AS GOOD_STOCK_Q
             , ISNULL(B.BAD_STOCK_Q, 0)   AS BAD_STOCK_Q
             , A.NOT_IN_Q
             , A.NOT_OUT_Q
             , ISNULL(C1.SAFE_STOCK_Q, 0) AS SAFE_STOCK_Q
             , ISNULL(B.STOCK_Q, 0) + A.NOT_IN_Q - A.NOT_OUT_Q - ISNULL(C1.SAFE_STOCK_Q, 0) AS USE_STOCK_Q
        FROM   (
               SELECT X.DIV_CODE
                    , X.COMP_CODE
                    , X.WH_CODE
                    , X.ITEM_CODE
                    , SUM(X.NOT_IN_Q)  AS NOT_IN_Q
                    , SUM(X.NOT_OUT_Q) AS NOT_OUT_Q
               FROM   (
                      SELECT A.DIV_CODE
                           , A.COMP_CODE
                           , A.WH_CODE
                           , A.ITEM_CODE
                           ,(ISNULL((SELECT SUM((ISNULL(S1.QTY,0) - ISNULL(S1.RECEIPT_QTY,0)) * S1.TRNS_RATE) AS QTY
                                     FROM   TIA110T S1 WITH (NOLOCK)
                                     WHERE  S1.COMP_CODE             = A.COMP_CODE
                                     AND    S1.DIV_CODE              = A.DIV_CODE
                                     AND    S1.ITEM_CODE             = A.ITEM_CODE
                                     AND    S1.COMP_CODE             = @CompCode
                                     AND    S1.CLOSE_FLAG           != 'Y'
                                     AND   (S1.QTY - S1.RECEIPT_QTY) &gt; 0
                                     <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE)">
                                     AND    S1.DELIVERY_DATE        &lt;= #{DELIVERY_DATE}
                                     </if>
                                     ), 0)
                           + ISNULL((SELECT SUM(CASE WHEN S1.WORK_END_YN = 'Y'
                                                          THEN ISNULL(S2.PRODT_Q,0) - ISNULL(S2.INSTOCK_Q,0)
                                                     ELSE CASE WHEN ISNULL(S3.CONTROL_STATUS,'2') NOT IN ('8', '9')
                                                                    THEN S1.WKORD_Q - ISNULL(S2.INSTOCK_Q,0)
                                                               ELSE ISNULL(S2.PRODT_Q,0) - ISNULL(S2.INSTOCK_Q,0)
                                                          END
                                                END)   AS QTY2
                                     FROM   PMP100T S1 WITH (NOLOCK)
                                            LEFT  JOIN (
                                                       SELECT COMP_CODE
                                                            , DIV_CODE
                                                            , WKORD_NUM
                                                            , SUM(ISNULL(IN_STOCK_Q, 0)) AS INSTOCK_Q
                                                            , SUM(ISNULL(PRODT_Q, 0))    AS PRODT_Q
                                                       FROM   PMR200T WITH (NOLOCK)
                                                       WHERE  COMP_CODE = @CompCode
                                                       GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM
                                                       ) S2 ON S2.COMP_CODE = S1.COMP_CODE
                                                           AND S2.DIV_CODE  = S1.DIV_CODE
                                                           AND S2.WKORD_NUM = S1.WKORD_NUM
                                            LEFT  JOIN (
                                                       SELECT COMP_CODE
                                                            , DIV_CODE
                                                            , WKORD_NUM
                                                            , CONTROL_STATUS
                                                       FROM   PMR100T WITH (NOLOCK)
                                                       WHERE  COMP_CODE = @CompCode
                                                       GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, CONTROL_STATUS
                                                       ) S3 ON S3.COMP_CODE = S1.COMP_CODE
                                                           AND S3.DIV_CODE  = S1.DIV_CODE
                                                           AND S3.WKORD_NUM = S1.WKORD_NUM
                                     WHERE  S1.COMP_CODE             = A.COMP_CODE
                                     AND    S1.DIV_CODE              = A.DIV_CODE
                                     AND    S1.ITEM_CODE             = A.ITEM_CODE
                                     AND    S1.COMP_CODE             = @CompCode
                                     AND    S1.LINE_END_YN           = 'Y'
                                     AND    S1.WKORD_Q               &gt; ISNULL(S2.INSTOCK_Q, 0)
                                     AND   (S1.WORK_END_YN          != 'Y'
                                         OR S1.PRODT_Q              &gt; 0 )
                                     <if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
                                     AND    S1.PRODT_END_DATE       &lt;= #{PRODT_END_DATE}
                                     </if>
                                     ), 0)) AS NOT_IN_Q
                           , 0  AS NOT_OUT_Q
                      FROM   BPR200T A WITH (NOLOCK)
                      WHERE  A.COMP_CODE  = @CompCode
                      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                      AND    A.ITEM_CODE  = #{ITEM_CODE}
                      </if>

                      UNION  All

                      SELECT B.DIV_CODE
                           , B.COMP_CODE
                           , B.WH_CODE
                           , B.ITEM_CODE
                           , ISNULL(SUM(B.ORDER_Q - B.INSTOCK_Q),0) AS NOT_IN_Q
                           , 0                                      AS NOT_OUT_Q
                      FROM              MPO100T A WITH (NOLOCK)
                             INNER JOIN MPO200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.DIV_CODE  = A.DIV_CODE
                                                               AND B.ORDER_NUM = A.ORDER_NUM
                      WHERE  B.COMP_CODE               = @CompCode
                      <if test="@foren.Ognl@isNotEmpty(DVRY_DATE)">
                      AND    B.DVRY_DATE              &lt;= #{DVRY_DATE}
                      </if>
                      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                      AND    B.ITEM_CODE               = #{ITEM_CODE}
                      </if>
                      AND    B.CONTROL_STATUS         != '9'
                      AND   (B.ORDER_Q - B.INSTOCK_Q)  &gt; 0
                      GROUP  BY B.COMP_CODE, B.DIV_CODE, B.WH_CODE, B.ITEM_CODE

                      UNION  All

                      SELECT A.DIV_CODE
                           , A.COMP_CODE
                           , A.WH_CODE
                           , A.ITEM_CODE
                           , 0 AS NOT_IN_Q
                           ,(ISNULL((SELECT SUM((ISNULL(S2.QTY,0) - ISNULL(S2.SALE_QTY,0)) * S2.TRANS_RATE) AS QTY
                                     FROM              TEA100T S1 WITH (NOLOCK)
                                            INNER JOIN TEA110T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
                                                                               AND S2.DIV_CODE  = S1.DIV_CODE
                                                                               AND S2.SO_SER_NO = S1.SO_SER_NO
                                     WHERE  S2.COMP_CODE             = A.COMP_CODE
                                     AND    S2.DIV_CODE              = A.DIV_CODE
                                     AND    S2.ITEM_CODE             = A.ITEM_CODE
                                     AND    S2.COMP_CODE             = @CompCode
                                     AND   (S2.QTY - S2.SALE_QTY)    &gt; 0
                                     AND    S1.SO_CONFIRM            = 'Y'
                                     <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE)">
                                     AND    S2.DELIVERY_DATE        &lt;= #{DELIVERY_DATE}
                                     </if>
                                     ), 0)
                           + ISNULL((SELECT SUM(S2.ORDER_Q + S2.RETURN_Q - S2.OUTSTOCK_Q) AS QTY1
                                     FROM              SOF100T S1 WITH (NOLOCK)
                                            INNER JOIN SOF110T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
                                                                               AND S2.DIV_CODE  = S1.DIV_CODE
                                                                               AND S2.ORDER_NUM = S1.ORDER_NUM
                                     WHERE  S2.COMP_CODE             = A.COMP_CODE
                                     AND    S2.DIV_CODE              = A.DIV_CODE
                                     AND    S2.ITEM_CODE             = A.ITEM_CODE
                                     AND    S2.COMP_CODE             = @CompCode
                                     AND   (S2.ORDER_Q + S2.RETURN_Q - S2.OUTSTOCK_Q) &gt; 0
                                     AND    S2.ORDER_STATUS          = 'N'
                                     <if test="@foren.Ognl@isNotEmpty(DVRY_DATE)">
                                     AND    S2.DVRY_DATE            &lt;= #{DVRY_DATE}
                                     </if>
                                     ), 0)
                           + ISNULL((SELECT SUM(ISNULL(S2.ALLOCK_Q, 0) - ISNULL(S2.OUTSTOCK_REQ_Q, 0)) AS QTY2
                                     FROM              PMP100T S1 WITH (NOLOCK)
                                            INNER JOIN PMP200T S2 WITH (NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
                                                                               AND S2.DIV_CODE  = S1.DIV_CODE
                                                                               AND S2.WKORD_NUM = S1.WKORD_NUM
                                     WHERE  S2.COMP_CODE             = A.COMP_CODE
                                     AND    S2.DIV_CODE              = A.DIV_CODE
                                     AND    S2.ITEM_CODE             = A.ITEM_CODE
                                     AND    S2.COMP_CODE             = @CompCode
                                     AND    S1.WORK_END_YN           = 'N'
                                     AND    S1.LINE_END_YN           = 'Y'
                                     AND    ISNULL(S2.ALLOCK_Q, 0)   &gt; ISNULL(S2.OUTSTOCK_REQ_Q, 0)
                                     AND    S2.OUT_METH              = '2'
                                     <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
                                     AND    S1.PRODT_START_DATE     &lt;= #{PRODT_START_DATE}
                                     </if>
                                     ), 0)
                           + ISNULL((SELECT SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) - ISNULL(S1.OUTSTOCK_Q, 0) + ISNULL(S1.CANCEL_Q, 0)) AS QTY3
                                     FROM   PMP300T S1 WITH (NOLOCK)
                                     WHERE  S1.COMP_CODE             = A.COMP_CODE
                                     AND    S1.DIV_CODE              = A.DIV_CODE
                                     AND    S1.ITEM_CODE             = A.ITEM_CODE
                                     AND    S1.COMP_CODE             = @CompCode
                                     AND    ISNULL(S1.CONTROL_STATUS,'0') &lt; '8'
                                     AND   (ISNULL(S1.OUTSTOCK_REQ_Q,0) - ISNULL(S1.OUTSTOCK_Q,0) + ISNULL(S1.CANCEL_Q,0)) &gt; 0
                                     <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE)">
                                     AND    S1.OUTSTOCK_REQ_DATE    &lt;= #{OUTSTOCK_REQ_DATE}
                                     </if>
                                     ), 0)) AS NOT_OUT_Q
                      FROM   BPR200T A WITH (NOLOCK)
                      WHERE  A.COMP_CODE  = @CompCode
                      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                      AND    A.ITEM_CODE  = #{ITEM_CODE}
                      </if>
                      ) X
               WHERE  X.COMP_CODE = @CompCode
               GROUP BY X.COMP_CODE, X.DIV_CODE, X.WH_CODE, X.ITEM_CODE
               ) A
               LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.DIV_CODE    = A.DIV_CODE
                                                  AND B.WH_CODE     = A.WH_CODE
                                                  AND B.ITEM_CODE   = A.ITEM_CODE
               LEFT  JOIN BPR200T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
                                                  AND C1.DIV_CODE   = A.DIV_CODE
                                                  AND C1.ITEM_CODE  = A.ITEM_CODE
               LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
                                                  AND C2.TYPE_LEVEL = A.DIV_CODE
                                                  AND C2.TREE_CODE  = A.WH_CODE
        WHERE  A.COMP_CODE = @CompCode
        ORDER BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
    SET NOCOUNT OFF
    SET ARITHABORT OFF
    END

    </select>

    <insert id="btr101ukrvServiceImpl.insertLogMaster" parameterType="Map"> /* 저장쿼리 */
    /*btr101ukrvServiceImpl.selectSaveList*/
    INSERT INTO L_BIV500T
     ( KEY_VALUE            , OPR_FLAG,
        REQSTOCK_NUM,
        REQSTOCK_SEQ,
        OUT_DIV_CODE,
        OUT_WH_CODE,
        OUT_WH_CELL_CODE,
        ITEM_CODE,
        ITEM_STATUS,
        REQSTOCK_Q,
        OUTSTOCK_Q,
        OUTSTOCK_DATE,
        CLOSE_YN,
        DIV_CODE,
        WH_CODE,
        WH_CELL_CODE,
        REQ_PRSN,
        REQSTOCK_DATE,
        LOT_NO,
        REMARK,
        PROJECT_NO,
        INSERT_DB_USER,
        INSERT_DB_TIME,
        UPDATE_DB_USER,
        UPDATE_DB_TIME,
        COMP_CODE,
        ORDER_NUM,
        ORDER_SEQ,
        TEMPC_01
    )

    VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG},
        #{REQSTOCK_NUM},
        #{REQSTOCK_SEQ},
        #{OUT_DIV_CODE},
        #{OUT_WH_CODE},
        #{OUT_WH_CELL_CODE},
        #{ITEM_CODE},
        #{ITEM_STATUS},
        #{REQSTOCK_Q},
        #{OUTSTOCK_Q},
        #{OUTSTOCK_DATE},
        #{CLOSE_YN},
        #{DIV_CODE},
        #{WH_CODE},
        #{WH_CELL_CODE},
        #{REQ_PRSN},
        #{REQSTOCK_DATE},
        #{LOT_NO},
        #{REMARK},
        #{PROJECT_NO},
        #{S_USER_ID},
        GETDATE(),
        #{S_USER_ID},
        GETDATE(),
        #{S_COMP_CODE},
        #{ORDER_NUM},
        #{ORDER_SEQ},
        #{REQUEST_TYPE}
   )

    </insert>

    <update id="btr101ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">

        {call USP_STOCK_Btr100ukr (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ReqstockNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <!-- excel 추가 -->
    <insert id="btr101ukrvServiceImpl.insertExcelBtr101t_excel" parameterType="Map">
        /*btr101ukrvServiceImpl.insertExcelBtr101t_excel*/
        INSERT INTO BTR101T_EXCEL
            (_EXCEL_JOBID
            , _EXCEL_ROWNUM
            , _EXCEL_HAS_ERROR
            , _EXCEL_ERROR_MSG
            , ITEM_CODE
            , REQSTOCK_Q
            , OUT_WH_CODE
            , OUT_WH_CELL_CODE
            , WH_CODE
            , WH_CELL_CODE
            , LOT_NO)
        VALUES (
            #{_EXCEL_JOBID}
            , #{_EXCEL_ROWNUM}
            , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
            , #{_EXCEL_ERROR,jdbcType=VARCHAR}
            , #{ITEM_CODE}
            , #{REQSTOCK_Q}
            , #{OUT_WH_CODE}
            , #{OUT_WH_CELL_CODE}
            , #{WH_CODE}
            , #{WH_CELL_CODE}
            , #{LOT_NO}
        )
    </insert>

    <select id="btr101ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /*btr101ukrvServiceImpl.selectExcelUploadSheet1*/

                SELECT A._EXCEL_JOBID
	                     , A._EXCEL_ROWNUM
	                     , A._EXCEL_HAS_ERROR
	                     , A._EXCEL_ERROR_MSG
	                     , A.OUT_WH_CODE
	                     , A.OUT_WH_CELL_CODE
	                     , A.WH_CODE
	                     , A.WH_CELL_CODE
	                     , A.ITEM_CODE
	                     , ISNULL(B.ITEM_NAME ,'') AS ITEM_NAME
	                     , ISNULL(B.SPEC      ,'') AS SPEC
	                     , ISNULL(B.STOCK_UNIT   ,''        ) AS STOCK_UNIT
	                     , A.REQSTOCK_Q
	                     , C.STOCK_Q AS PAB_STOCK_Q
						 , C.GOOD_STOCK_Q
						 , C.BAD_STOCK_Q
						 , A.LOT_NO
                  FROM BTR101T_EXCEL A
                       LEFT JOIN BPR100T   B
                       ON   B.COMP_CODE = #{S_COMP_CODE}
                       AND  A.ITEM_CODE = B.ITEM_CODE
	                     LEFT JOIN	(SELECT  A.COMP_CODE
												    ,A.DIV_CODE
												    ,A.WH_CODE
												    ,A.ITEM_CODE
												    ,SUM(A.STOCK_Q) AS STOCK_Q
												    ,SUM(A.GOOD_STOCK_Q) AS GOOD_STOCK_Q
												    ,SUM(A.BAD_STOCK_Q) AS BAD_STOCK_Q
										FROM BIV150T A
											INNER JOIN BSA220T B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.TYPE_LEVEL AND A.WH_CODE=B.TREE_CODE
										WHERE A.SUM_TYPE='D'
										AND B.PABSTOCK_YN = 'Y'
										GROUP BY A.COMP_CODE,A.DIV_CODE,A.WH_CODE,A.ITEM_CODE) C
						  ON A.ITEM_CODE = C.ITEM_CODE
						  AND C.COMP_CODE = #{S_COMP_CODE}
						  AND C.DIV_CODE 	=  #{DIV_CODE}
						  AND C.WH_CODE 	=  A.OUT_WH_CODE
                 WHERE    A._EXCEL_JOBID = #{_EXCEL_JOBID}
                 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
    </select>

    <update id="excelValidate" >
        /*btr101ukrvServiceImpl.excelValidate*/

       UPDATE   A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL
                                           THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL
                                           THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 품목정보가 존재하지 않습니다. '
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM BTR101T_EXCEL A
        LEFT JOIN  BPR100T B    ON B.COMP_CODE= #{S_COMP_CODE}
                               AND A.ITEM_CODE = B.ITEM_CODE
        LEFT JOIN  BPR200T C    ON C.COMP_CODE= #{S_COMP_CODE}
                               AND C.DIV_CODE = #{DIV_CODE}
                               AND A.ITEM_CODE = C.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}

        UPDATE  A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN B.USE_YN = 'N'
                                            THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN B.USE_YN = 'N'
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용중지된 품목입니다.'
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM BTR101T_EXCEL A
        INNER JOIN  BPR100T B  ON B.COMP_CODE= #{S_COMP_CODE}
                              AND A.ITEM_CODE = B.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}

    </update>

	<select id="btr101ukrvServiceImpl.selectDraftNo" parameterType="Map" resultType="rMap">
        SELECT  DRAFT_NO
          FROM  BIV500T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.DIV_CODE       = #{DIV_CODE}
           AND A.REQSTOCK_NUM    = #{REQSTOCK_NUM}
    </select>

</mapper>