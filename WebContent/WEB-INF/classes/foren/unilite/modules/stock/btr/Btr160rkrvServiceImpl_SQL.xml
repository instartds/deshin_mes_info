<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr160rkrvServiceImpl">
	<select id="btr160rkrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
		/* btr160rkrvServiceImpl.userWhcode */
		SELECT A.WH_CODE
		  FROM      BSA210T A WITH(NOLOCK)
		  LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                  AND B.DEPT_CODE = A.TREE_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND B.USER_ID   = #{S_USER_ID}
	</select>


<!-- 그리드 / 출력 detail data 조회 -->
	<select id="btr160rkrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* UBRpt02Krv.CBtr160Skr[fnBtr160QStd] Query01 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
		
			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
			      , @UserId			NVARCHAR(100)	/* 사용자ID		*/
			      , @LangType		NVARCHAR(02)	/* 언어구분		*/
		          , @RefItem		NVARCHAR(01)
		          , @DateFormat		NVARCHAR(10)
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'
		
			/* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
			FROM BSA300T WITH (NOLOCK)
			WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			FROM BSA100T WITH (NOLOCK)
			WHERE COMP_CODE = @CompCode
				AND MAIN_CODE = N'B044'
				AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT  A.ITEM_CODE
		          , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                 ELSE C1.ITEM_NAME
		            END                          AS ITEM_NAME
		          , C1.SPEC
		          , C1.STOCK_UNIT
		          , A.OUT_DIV_CODE
		          , M1.TREE_CODE                 AS OUT_WH_NAME
		          , M1.TREE_NAME                 AS OUT_WH_CODE
		          , M3.WH_CELL_NAME              AS OUT_WH_CELL_NAME
		          , CASE WHEN @LangType = 'KR' THEN M6.CODE_NAME
		                 WHEN @LangType = 'EN' THEN M6.CODE_NAME_EN
		                 WHEN @LangType = 'CN' THEN M6.CODE_NAME_CN
		                 WHEN @LangType = 'JP' THEN M6.CODE_NAME_JP
		                 ELSE M6.CODE_NAME
		            END                          AS ITEM_STATUS_NAME
		          , A.REQSTOCK_Q
		          , A.OUTSTOCK_Q
		          , A.REQSTOCK_Q - A.OUTSTOCK_Q  AS NOTSTOCK_Q
		          , ISNULL(M5.GOOD_STOCK_Q,0)    AS GOOD_STOCK_Q
		          , ISNULL(M5.BAD_STOCK_Q,0)     AS BAD_STOCK_Q
		          , CASE WHEN ISNULL(A.OUTSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.OUTSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.OUTSTOCK_DATE, 7, 2))
		            END                          AS OUTSTOCK_DATE
		          , A.REQSTOCK_NUM
		          , A.REQSTOCK_SEQ
		          , CASE WHEN ISNULL(A.REQSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.REQSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.REQSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.REQSTOCK_DATE, 7, 2))
		            END                          AS REQSTOCK_DATE
		          , A.CLOSE_YN
		          , A.DIV_CODE
		          , M2.TREE_CODE                 AS WH_NAME
		          , M2.TREE_NAME                 AS WH_CODE
		          , M4.WH_CELL_NAME
		          , ISNULL(B.INOUT_Q, 0)         AS INSTOCK_Q
		          , A.REQ_PRSN
		          , A.LOT_NO
		          , A.REMARK
		          , A.PROJECT_NO
		          , A.UPDATE_DB_USER
		          , A.UPDATE_DB_TIME
		          --20200320 추가: ORDER_NUM, ORDER_SEQ
		          , A.ORDER_NUM
		          , A.ORDER_SEQ
		          , ISNULL(A.PRINT_YN, 'N')      AS PRINT_YN
		    FROM        BIV500T A  WITH (NOLOCK)
		    LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ORDER_NUM, A.ORDER_SEQ
		                     , SUM(B.INOUT_Q) AS INOUT_Q 
		                  FROM      BTR100T A WITH(NOLOCK)
		                  LEFT JOIN BTR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                  AND B.DIV_CODE  = A.TO_DIV_CODE
		                                                  AND B.ITEM_CODE = A.ITEM_CODE
		                                                  AND B.INOUT_NUM = A.BASIS_NUM
		                                                  AND B.INOUT_SEQ = A.BASIS_SEQ
		                WHERE A.INOUT_TYPE        = '2'
		                  AND A.CREATE_LOC        = '4'
		                  AND A.INOUT_METH        = '3'
		                  AND A.INOUT_TYPE_DETAIL = '99'
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ORDER_NUM, A.ORDER_SEQ
		                              ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                     AND B.DIV_CODE  = A.OUT_DIV_CODE
		                                     AND B.ITEM_CODE = A.ITEM_CODE
		                                     AND B.ORDER_NUM = A.REQSTOCK_NUM
		                                     AND B.ORDER_SEQ = A.REQSTOCK_SEQ    
		    LEFT  JOIN BPR100T C1 WITH (NOLOCK)  ON C1.COMP_CODE    = A.COMP_CODE
		                                        AND C1.ITEM_CODE    = A.ITEM_CODE
		    LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
		                                        AND M1.TYPE_LEVEL   = A.OUT_DIV_CODE
		                                        AND M1.TREE_CODE    = A.OUT_WH_CODE
		    LEFT  JOIN BSA220T M2 WITH (NOLOCK)  ON M2.COMP_CODE    = A.COMP_CODE
		                                        AND M2.TYPE_LEVEL   = A.DIV_CODE
		                                        AND M2.TREE_CODE    = A.WH_CODE
		    LEFT  JOIN BSA225T M3 WITH (NOLOCK)  ON M3.COMP_CODE    = A.COMP_CODE
		                                        AND M3.DIV_CODE     = A.OUT_DIV_CODE
		                                        AND M3.WH_CODE      = A.OUT_WH_CODE
		                                        AND M3.WH_CELL_CODE = A.OUT_WH_CELL_CODE
		    LEFT  JOIN BSA225T M4 WITH (NOLOCK)  ON M4.COMP_CODE    = A.COMP_CODE
		                                        AND M4.DIV_CODE     = A.DIV_CODE
		                                        AND M4.WH_CODE      = A.WH_CODE
		                                        AND M4.WH_CELL_CODE = A.WH_CELL_CODE
		    LEFT  JOIN BIV100T M5 WITH (NOLOCK)  ON M5.COMP_CODE    = A.COMP_CODE
		                                        AND M5.DIV_CODE     = A.OUT_DIV_CODE
		                                        AND M5.WH_CODE      = A.OUT_WH_CODE
		                                        AND M5.ITEM_CODE    = A.ITEM_CODE
		    LEFT  JOIN BSA100T M6 WITH (NOLOCK)  ON M6.COMP_CODE    = A.COMP_CODE
		                                        AND M6.SUB_CODE     = A.ITEM_STATUS
		                                        AND M6.MAIN_CODE    = 'B021'    /*양불구분*/
		   WHERE A.COMP_CODE      = @CompCode
		     AND A.DIV_CODE       = #{DIV_CODE}
		<if test="@foren.Ognl@isEmpty(PRINT_FLAG)">
		   <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_FR)">
		     AND A.OUTSTOCK_DATE &gt;= #{REQSTOCK_DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(REQSTOCK_DATE_TO)">
		     AND A.OUTSTOCK_DATE &lt;= #{REQSTOCK_DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		     AND A.WH_CODE IN
		     <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
		                #{item}
		     </foreach>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(REQ_PRSN)">
		     AND A.REQ_PRSN       = #{REQ_PRSN}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PRINT_YN)">
		     AND ISNULL(A.PRINT_YN, 'N') = #{PRINT_YN}
		   </if>
		   <if test="OUT_YN == &quot;Y&quot;">
		     AND A.REQSTOCK_Q - A.OUTSTOCK_Q = 0
		   </if>
		   <if test="OUT_YN == &quot;N&quot;">
		     AND A.REQSTOCK_Q - A.OUTSTOCK_Q &gt; 0
		   </if>
		</if>
<!-- 클립 리포트 출력, 20210128 수정: 재고이동요청 등록 (btr101ukrv)에서 출력 기능 같이 사용하기 위해 로직 수정 -->
	<if test="@foren.Ognl@isNotEmpty(PRINT_FLAG)">
		<if test="@foren.Ognl@isNotEmpty(REQ_INFO_LIST)">
		     AND A.REQSTOCK_NUM + '/' + CONVERT(NVARCHAR, A.REQSTOCK_SEQ) IN
		    <foreach collection="REQ_INFO_LIST" item="item" separator="," close=")" open="(">
		                            '${item.REQ_INFO}'
		    </foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
		     AND A.REQSTOCK_NUM = #{REQSTOCK_NUM}
		</if>
	</if>
		   ORDER BY A.COMP_CODE, A.DIV_CODE, A.REQSTOCK_NUM, A.REQSTOCK_SEQ, A.ITEM_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

<!-- master data 조회 -->
	<select id="btr160rkrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		/* btr160rkrvServiceImpl.selectMasterList */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

		    DECLARE @CompCode   NVARCHAR(08)  /* 법인코드   */
		          , @UserId     NVARCHAR(100) /* 사용자ID */
		          , @LangType   NVARCHAR(02)  /* 언어구분   */
		          , @DateFormat NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT  A.OUT_DIV_CODE
		          , M1.TREE_NAME                      AS OUT_WH_CODE
		          , SUM(A.REQSTOCK_Q)                 AS REQSTOCK_Q
		          , SUM(A.OUTSTOCK_Q)                 AS OUTSTOCK_Q
		          , SUM(A.REQSTOCK_Q - A.OUTSTOCK_Q)  AS NOTSTOCK_Q
		          , A.REQSTOCK_NUM
		          , CASE WHEN ISNULL(A.REQSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.REQSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.REQSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.REQSTOCK_DATE, 7, 2))
		            END                               AS REQSTOCK_DATE
		          --20200324 추가
		          , CASE WHEN ISNULL(A.OUTSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.OUTSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.OUTSTOCK_DATE, 7, 2))
		            END                          AS OUTSTOCK_DATE
		          , A.DIV_CODE
		          , M2.TREE_NAME                      AS WH_CODE
		          , SUM(ISNULL(B.INOUT_Q, 0))         AS INSTOCK_Q
		          , A.REMARK
		          , A.REQ_PRSN                        AS REQ_PRSN_CD
		          , ISNULL(Z1.CODE_NAME, '')          AS REQ_PRSN      --20201208 수정: 담당자 명 가져오도록 수정
		          , ISNULL(Z1.REF_CODE5, '')          AS REQ_PRSN_TEL  --20201208 수정: 사용자 정보 테이블이 아닌 B024.REF_CODE5에서 연락처 가져오도록 수정
		          --, ISNULL(Z2.TELEPHON, Z2.PHONE)     AS REQ_PRSN_TEL
		    FROM        BIV500T A  WITH (NOLOCK)
		    LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ORDER_NUM, A.ORDER_SEQ
		                     , SUM(B.INOUT_Q) AS INOUT_Q 
		                  FROM      BTR100T A WITH(NOLOCK)
		                  LEFT JOIN BTR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                  AND B.DIV_CODE  = A.TO_DIV_CODE
		                                                  AND B.ITEM_CODE = A.ITEM_CODE
		                                                  AND B.INOUT_NUM = A.BASIS_NUM
		                                                  AND B.INOUT_SEQ = A.BASIS_SEQ
		                WHERE A.INOUT_TYPE        = '2'
		                  AND A.CREATE_LOC        = '4'
		                  AND A.INOUT_METH        = '3'
		                  AND A.INOUT_TYPE_DETAIL = '99'
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ORDER_NUM, A.ORDER_SEQ
		                              ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                     AND B.DIV_CODE  = A.OUT_DIV_CODE
		                                     AND B.ITEM_CODE = A.ITEM_CODE
		                                     AND B.ORDER_NUM = A.REQSTOCK_NUM
		                                     AND B.ORDER_SEQ = A.REQSTOCK_SEQ    
		    LEFT  JOIN BPR100T C1 WITH (NOLOCK)  ON C1.COMP_CODE    = A.COMP_CODE
		                                        AND C1.ITEM_CODE    = A.ITEM_CODE
		    LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
		                                        AND M1.TYPE_LEVEL   = A.OUT_DIV_CODE
		                                        AND M1.TREE_CODE    = A.OUT_WH_CODE
		    LEFT  JOIN BSA220T M2 WITH (NOLOCK)  ON M2.COMP_CODE    = A.COMP_CODE
		                                        AND M2.TYPE_LEVEL   = A.DIV_CODE
		                                        AND M2.TREE_CODE    = A.WH_CODE
		    LEFT  JOIN BSA100T Z1 WITH (NOLOCK)  ON Z1.COMP_CODE    = A.COMP_CODE
		                                        AND Z1.MAIN_CODE    = 'B024'
		                                        AND Z1.SUB_CODE     = A.REQ_PRSN
		    --LEFT  JOIN BSA300T Z2 WITH (NOLOCK)  ON Z2.COMP_CODE    = Z1.COMP_CODE
		    --                                    AND Z2.USER_ID      = Z1.REF_CODE10
		   WHERE A.COMP_CODE      = @CompCode
		     AND A.DIV_CODE       = #{DIV_CODE}
<!-- 20210128 수정: 재고이동요청 등록 (btr101ukrv)에서 출력 기능 같이 사용하기 위해 로직 수정 -->
		<if test="@foren.Ognl@isNotEmpty(REQ_INFO_LIST)">
		     AND A.REQSTOCK_NUM + '/' + CONVERT(NVARCHAR, A.REQSTOCK_SEQ) IN      --20210318 수정: nvarchar(01) -> nvarchar
		    <foreach collection="REQ_INFO_LIST" item="item" separator="," close=")" open="(">
		                            '${item.REQ_INFO}'
		    </foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
		     AND A.REQSTOCK_NUM = #{REQSTOCK_NUM}
		</if>
		   GROUP BY A.COMP_CODE, A.DIV_CODE, A.REQSTOCK_NUM, A.REQSTOCK_DATE, A.OUT_DIV_CODE, A.REQ_PRSN, A.REMARK, M1.TREE_NAME, M2.TREE_NAME, Z1.CODE_NAME, Z1.REF_CODE5 --Z2.TELEPHON, Z2.PHONE - --20201208 수정: 사용자 정보 테이블이 아닌 B024.REF_CODE5에서 연락처 가져오도록 수정
		                       , A.OUTSTOCK_DATE  --20210324 추가
		   ORDER BY A.COMP_CODE, A.DIV_CODE, A.REQSTOCK_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

<!-- 출력한 데이터 출력여부 UPDATE 로직 추가 -->
	<update id="btr160rkrvServiceImpl.updatePrintStatus" parameterType="Map">
		/* btr160rkrvServiceImpl.updatePrintStatus */
		UPDATE BIV500T
		   SET PRINT_YN = 'Y'
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND DIV_CODE      = #{DIV_CODE}
<!-- 20210128 수정: 재고이동요청 등록 (btr101ukrv)에서 출력 기능 같이 사용하기 위해 로직 수정 -->
		<if test="@foren.Ognl@isNotEmpty(REQ_ORDER_LIST)">
		   AND REQSTOCK_NUM + '/' + CONVERT(NVARCHAR, REQSTOCK_SEQ) IN      --20210318 수정: nvarchar(01) -> nvarchar
		    <foreach collection="REQ_ORDER_LIST" item="item" separator="," close=")" open="(">
		                            '${item.REQ_ORDER_INFO}'
		    </foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
		     AND REQSTOCK_NUM = #{REQSTOCK_NUM}
		</if>
	</update>
</mapper>