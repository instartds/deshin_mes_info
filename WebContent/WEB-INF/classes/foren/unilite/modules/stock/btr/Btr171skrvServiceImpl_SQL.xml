<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr171skrvServiceImpl">
				
	<select id="btr171skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--UBRpt04Krv.CBtr171Skr[fnBtr171QStd] Query01
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
    
        DECLARE        @COMP_CODE        NVARCHAR(08)        -- (필수) 법인코드
                     , @DIV_CODE         NVARCHAR(08)        -- (필수) 사업장코드
                     , @FR_INOUT_DATE    NVARCHAR(08)        -- (필수) 출고일(FROM)
                     , @TO_INOUT_DATE    NVARCHAR(08)        -- (필수) 출고일(TO)
                     , @WH_CODE          NVARCHAR(08)        -- (선택) 창고코드
                     , @INOUT_NUM        NVARCHAR(20)        -- (선택) 대체번호
                     , @ITEM_CODE        NVARCHAR(20)        -- (선택) 품목코드
                     , @ITEM_NAME        NVARCHAR(200)       -- (선택) 품명
                     , @USER_ID          NVARCHAR(100)       -- (필수) 사용자 ID
    
        SET @COMP_CODE       = ISNULL(@COMP_CODE,       #{S_COMP_CODE})
        SET @FR_INOUT_DATE   = ISNULL(@FR_INOUT_DATE,   #{FR_INOUT_DATE})
        SET @TO_INOUT_DATE   = ISNULL(@TO_INOUT_DATE,   #{TO_INOUT_DATE})
        SET @INOUT_NUM       = ISNULL(@INOUT_NUM,       #{INOUT_NUM})
        SET @USER_ID         = ISNULL(@USER_ID,         #{S_USER_ID})
        SET @DIV_CODE        = ISNULL(@DIV_CODE,        #{DIV_CODE})
        SET @WH_CODE         = ISNULL(@WH_CODE,         #{WH_CODE})
        SET @ITEM_CODE       = ISNULL(@ITEM_CODE,       #{ITEM_CODE})
        SET @ITEM_NAME       = ISNULL(@ITEM_NAME,       #{ITEM_NAME})
    
    -----------------------------------------------------------------------------------------------------------------------
        DECLARE        @RefItem          NVARCHAR(01)
    
        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = @USER_ID
    
        SET @RefItem = ISNULL(@RefItem, '')
    
    -----------------------------------------------------------------------------------------------------------------------
    
        SELECT CONVERT(NVARCHAR(1), A.INOUT_TYPE)       AS WORK_TYPE
             , A.COMP_CODE
             , A.DIV_CODE                               AS ODIV_CODE
             , B1.REF_CODE1                             AS REF_CODE_DIV
             , A.WH_CODE                                AS OWH_CODE
             , C2.TREE_NAME                             AS OWH_NAME
             , A.WH_CELL_CODE                           AS OWH_CELL_CODE
             , C5.WH_CELL_NAME                          AS OWH_CELL_NAME
             , B2.REF_CODE1                             AS REF_CODE_WH
             , A.ITEM_CODE                              AS OITEM_CODE
             , CASE WHEN @RefItem = '1' THEN C3.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C3.ITEM_NAME2
                    ELSE C3.ITEM_NAME
               END                                      AS OITEM_NAME
             , B3.REF_CODE1                             AS REF_CODE_ITEM
             , C3.SPEC
             , C3.STOCK_UNIT
             , C4.ITEM_ACCOUNT
    
             , ISNULL(A.INOUT_CAL_P,0) AS OINOUT_P
             , B4.REF_CODE1                             AS REF_CODE_P
             , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '1'                               THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS OGOOD_STOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '2'           AND A.INOUT_SEQ = 1 THEN A.INOUT_Q
                                                  WHEN ISNULL(B.COMP_CODE, '') != '' AND A.INOUT_SEQ > 1 THEN B.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS OBAD_STOCK_Q
             , A.LOT_NO                                 AS LOT_NO
             , B5.REF_CODE1                             AS REF_CODE_Q
             , CASE WHEN A.INOUT_SEQ > 1 THEN '' ELSE A.ITEM_STATUS END AS ITEM_STATUS
             , B6.REF_CODE1                             AS REF_CODE_ITEM_STATUS
    
             , ISNULL(A.INOUT_CAL_I,0) AS OINOUT_I
             , CONVERT(NUMERIC(18,4),NULL)              AS AMT_CHANGE
             , A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_TYPE
             , A.INOUT_DATE
             , A.DIV_CODE
             , A.WH_CODE
             , A.WH_CELL_CODE
             , A.ITEM_CODE
             , uniLITE.fnFormat(A.COMP_CODE, A.INOUT_P, 'R_FSET_PS') AS INOUT_P
             , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '1' THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS GOOD_STOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '2' THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS BAD_STOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, A.INOUT_I, 'R_FSET_PS') AS INOUT_I
             , A.UPDATE_DB_USER, A.UPDATE_DB_TIME
        FROM               BTR100T  A  WITH (NOLOCK)
               LEFT  JOIN  BTR100T  B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                    AND B.INOUT_NUM   = A.INOUT_NUM
                                                    --AND B.INOUT_SEQ   = 3
                                                    AND B.BASIS_NUM   = A.INOUT_NUM
                                                    AND B.BASIS_SEQ   = A.INOUT_SEQ
                                                    AND B.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)
                                                    AND B.INOUT_METH  = '6'         -- 수불방법(6: 대체)
                                                    --AND B.INOUT_TYPE_DETAIL IN ('93','97')  -- 입고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
               LEFT  JOIN  BSA220T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
                                                    AND C2.TYPE_LEVEL = A.DIV_CODE
                                                    AND C2.TREE_CODE  = A.WH_CODE
               LEFT  JOIN  BPR100T  C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
                                                    AND C3.ITEM_CODE  = A.ITEM_CODE
               LEFT  JOIN  BPR200T  C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
                                                    AND C4.DIV_CODE   = A.DIV_CODE
                                                    AND C4.ITEM_CODE  = A.ITEM_CODE
               LEFT  JOIN  BSA225T  C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
                                                    AND C5.DIV_CODE     = A.DIV_CODE
                                                    AND C5.WH_CODE      = A.WH_CODE
                                                    AND C5.WH_CELL_CODE = A.WH_CELL_CODE
               LEFT  JOIN  BSA100T  B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
                                                    AND B1.MAIN_CODE  = 'I001'
                                                    AND B1.SUB_CODE   = '1'
               LEFT  JOIN  BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
                                                    AND B2.MAIN_CODE  = 'I001'
                                                    AND B2.SUB_CODE   = '2'
               LEFT  JOIN  BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
                                                    AND B3.MAIN_CODE  = 'I001'
                                                    AND B3.SUB_CODE   = '3'
               LEFT  JOIN  BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE
                                                    AND B4.MAIN_CODE  = 'I001'
                                                    AND B4.SUB_CODE   = '6'
               LEFT  JOIN  BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE
                                                    AND B5.MAIN_CODE  = 'I001'
                                                    AND B5.SUB_CODE   = '5'
               LEFT  JOIN  BSA100T  B6 WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE
                                                    AND B6.MAIN_CODE  = 'I001'
                                                    AND B6.SUB_CODE   = '4'
        WHERE  A.COMP_CODE   = @COMP_CODE
        AND    A.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)
        AND    A.INOUT_METH  = '6'         -- 수불방법(6: 대체)
        --AND    A.INOUT_TYPE_DETAIL IN ('93','97')  -- 출고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
        AND    ((A.INOUT_DATE >= @FR_INOUT_DATE AND @FR_INOUT_DATE != '') OR (@FR_INOUT_DATE = ''))
        AND    ((A.INOUT_DATE &lt;= @TO_INOUT_DATE AND @TO_INOUT_DATE != '') OR (@TO_INOUT_DATE = ''))
        AND    (
               (@INOUT_NUM     = '')
        OR     (@INOUT_NUM    != '' AND A.INOUT_NUM LIKE @INOUT_NUM + '%')
               )
        AND    (
               (@DIV_CODE      = '')
        OR     (@DIV_CODE     != '' AND A.DIV_CODE     = @DIV_CODE)
               )
        AND    (
               (@WH_CODE       = '')
        OR     (@WH_CODE      != '' AND A.WH_CODE      = @WH_CODE)
               )
               
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		   AND C4.ITEM_ACCOUNT IN
				<foreach collection="ITEM_ACCOUNT" item="item2" separator="," close=")" open="(">
					#{item2}
				</foreach>								 -- 계정
		</if>
               
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND A.ITEM_CODE 		  = @ITEM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
			AND A.ITEM_CODE 	   LIKE @ITEM_CODE + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND (
                (@RefItem = '0' AND C3.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%')
            OR  (@RefItem = '1' AND C3.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%')
            OR  (@RefItem = '2' AND C3.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%')
                )
		</if>
		
        ORDER BY A.INOUT_NUM, A.INOUT_TYPE DESC, A.INOUT_SEQ, A.WH_CODE, A.ITEM_CODE
    
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
</mapper>