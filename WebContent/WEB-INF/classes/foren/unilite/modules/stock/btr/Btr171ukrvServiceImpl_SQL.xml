<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr171ukrvService">

	<select id="btr171ukrvService.selectList" parameterType="Map" resultType="rMap">
	-- btr171ukrv.Cbtr171ukrv[fnBtr171QStd]Query01
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE        @COMP_CODE        NVARCHAR(08)      --(필수) 법인코드
                 , @DIV_CODE         NVARCHAR(08)      --(필수) 사업장코드
                 , @INOUT_DATE       NVARCHAR(08)      --(필수) 대체일
                 , @WH_CODE          NVARCHAR(08)      --(선택) 창고코드
                 , @INOUT_NUM        NVARCHAR(20)      --(선택) 대체번호
                 , @ITEM_CODE        NVARCHAR(20)      --(선택) 품목코드
                 , @ITEM_NAME        NVARCHAR(200)     --(선택) 품명
                 , @ITEM_ACCOUNT     NVARCHAR(02)      --(선택) 계정구
                 , @USER_ID          NVARCHAR(100)      --(필수) 사용자 ID
                 , @DateFormat     NVARCHAR(10) --날짜 포맷 유형 설정     */

    SET @COMP_CODE    = #{S_COMP_CODE}
    SET @USER_ID      = #{S_USER_ID}


-----------------------------------------------------------------------------------------------------------------

    DECLARE        @RefItem          NVARCHAR(01)

    SELECT TOP 1 @RefItem = REF_ITEM
    FROM   BSA300T WITH (NOLOCK)
    WHERE  USER_ID = @USER_ID

    SET @RefItem = ISNULL(@RefItem, '')

-----------------------------------------------------------------------------------------------------------------

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @COMP_CODE
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

-----------------------------------------------------------------------------------------------------------------

    SELECT TOP 2 CONVERT(NVARCHAR(1), A.INOUT_TYPE) AS WORK_TYPE
         , A.COMP_CODE
         , A.DIV_CODE   AS ODIV_CODE
         , B1.REF_CODE1 AS REF_CODE_DIV
         , A.WH_CODE    AS OWH_CODE
         , C2.TREE_NAME AS OWH_NAME
         , A.WH_CELL_CODE AS OWH_CELL_CODE
         , C5.WH_CELL_NAME AS OWH_CELL_NAME
         , B2.REF_CODE1 AS REF_CODE_WH
         , A.ITEM_CODE  AS OITEM_CODE
         , CASE WHEN @RefItem = '1' THEN C3.ITEM_NAME1
                WHEN @RefItem = '2' THEN C3.ITEM_NAME2
                ELSE C3.ITEM_NAME
           END As OITEM_NAME
         , B3.REF_CODE1 AS REF_CODE_ITEM
         , C3.SPEC, C3.STOCK_UNIT
         , C4.ITEM_ACCOUNT
         , uniLITE.fnFormat(A.COMP_CODE, A.INOUT_P,    'R_FSET_PS') AS OINOUT_P
         , B4.REF_CODE1 AS REF_CODE_P
         , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '1'                               THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS OGOOD_STOCK_Q
         , uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '2'           AND A.INOUT_SEQ = 1 THEN A.INOUT_Q
                                              WHEN ISNULL(B.COMP_CODE, '') != '' AND A.INOUT_SEQ &gt; 1 THEN B.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS OBAD_STOCK_Q
         , A.LOT_NO     AS OLOT_NO
         , B5.REF_CODE1 AS REF_CODE_Q
         , CASE WHEN A.INOUT_SEQ &gt; 1 THEN '' ELSE A.ITEM_STATUS END AS ITEM_STATUS
         , B6.REF_CODE1 AS REF_CODE_ITEM_STATUS
         , uniLITE.fnFormat(A.COMP_CODE, A.INOUT_I, 'R_FSET_PS') AS OINOUT_I
         , CONVERT(NUMERIC(18,4),NULL) AS AMT_CHANGE
         , A.INOUT_NUM
         , A.INOUT_SEQ
         , A.INOUT_TYPE
         , A.INOUT_DATE
         --, A.DIV_CODE
         --, A.WH_CODE
         --, A.WH_CELL_CODE
         --, A.ITEM_CODE
         --, uniLITE.fnFormat(A.COMP_CODE, A.INOUT_P, 'R_FSET_PS') AS INOUT_P
         --, uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '1' THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS GOOD_STOCK_Q
         --, uniLITE.fnFormat(A.COMP_CODE, CASE WHEN A.ITEM_STATUS = '2' THEN A.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS BAD_STOCK_Q
         --, uniLITE.fnFormat(A.COMP_CODE, A.INOUT_I, 'R_FSET_PS') AS INOUT_I
         --, A.LOT_NO
         , X.DIV_CODE
         , X.WH_CODE
         , X.WH_CELL_CODE
         , X.ITEM_CODE
         , uniLITE.fnFormat(X.COMP_CODE, X.INOUT_P, 'R_FSET_PS') AS INOUT_P
         , uniLITE.fnFormat(X.COMP_CODE, CASE WHEN X.ITEM_STATUS = '1' THEN X.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS GOOD_STOCK_Q
         , uniLITE.fnFormat(X.COMP_CODE, CASE WHEN X.ITEM_STATUS = '2' THEN X.INOUT_Q ELSE 0 END, 'R_FSET_QS') AS BAD_STOCK_Q
         , uniLITE.fnFormat(X.COMP_CODE, X.INOUT_I, 'R_FSET_PS') AS INOUT_I
         , X.LOT_NO     AS LOT_NO
         , A.UPDATE_DB_USER, A.UPDATE_DB_TIME
         , A.INOUT_PRSN
         --20200123 추가
         , A.REMARK
    FROM               BTR100T  A  WITH (NOLOCK)
           LEFT  JOIN  BTR100T  B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                AND B.INOUT_NUM   = A.INOUT_NUM
                                                AND B.INOUT_SEQ   = 3
                                                AND B.BASIS_NUM   = A.INOUT_NUM
                                                AND B.BASIS_SEQ   = 1
                                                AND B.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)
                                                AND B.INOUT_METH  = '6'         -- 수불방법(6: 대체)
                                                AND B.INOUT_TYPE_DETAIL IN ('93','97')  -- 입고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
           LEFT  JOIN  BTR100T  X WITH (NOLOCK) ON X.COMP_CODE    = A.COMP_CODE
                                                AND X.INOUT_NUM   = A.INOUT_NUM
                                                AND X.INOUT_TYPE  = 2
                                                AND X.BASIS_NUM   = A.INOUT_NUM
                                                AND X.BASIS_SEQ   = 1
                                                AND X.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)
                                                AND X.INOUT_METH  = '6'         -- 수불방법(6: 대체)
                                                AND X.INOUT_TYPE_DETAIL IN ('93','97')  -- 출고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
           LEFT  JOIN  BSA220T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
                                                AND C2.TYPE_LEVEL = A.DIV_CODE
                                                AND C2.TREE_CODE  = A.WH_CODE
           LEFT  JOIN  BPR100T  C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
                                                AND C3.ITEM_CODE  = A.ITEM_CODE
           LEFT  JOIN  BPR200T  C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
                                                AND C4.DIV_CODE   = A.DIV_CODE
                                                AND C4.ITEM_CODE  = A.ITEM_CODE
           LEFT  JOIN  BSA225T  C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
                                                AND C5.DIV_CODE     = A.DIV_CODE
                                                AND C5.WH_CODE      = A.WH_CODE
                                                AND C5.WH_CELL_CODE = A.WH_CELL_CODE
           LEFT  JOIN  BSA100T  B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
                                                AND B1.MAIN_CODE  = 'I001'
                                                AND B1.SUB_CODE   = '1'
           LEFT  JOIN  BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
                                                AND B2.MAIN_CODE  = 'I001'
                                                AND B2.SUB_CODE   = '2'
           LEFT  JOIN  BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
                                                AND B3.MAIN_CODE  = 'I001'
                                                AND B3.SUB_CODE   = '3'
           LEFT  JOIN  BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE
                                                AND B4.MAIN_CODE  = 'I001'
                                                AND B4.SUB_CODE   = '6'
           LEFT  JOIN  BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE
                                                AND B5.MAIN_CODE  = 'I001'
                                                AND B5.SUB_CODE   = '5'
           LEFT  JOIN  BSA100T  B6 WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE
                                                AND B6.MAIN_CODE  = 'I001'
                                                AND B6.SUB_CODE   = '4'
    WHERE  A.COMP_CODE   = @COMP_CODE
    AND    A.INOUT_NUM   = #{INOUT_NUM}
    AND    A.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)
    AND    A.INOUT_METH  = '6'         -- 수불방법(6: 대체)
    AND    A.INOUT_TYPE_DETAIL IN ('93','97')  -- 출고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND A.DIV_CODE     = #{DIV_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	AND A.WH_CODE      = #{WH_CODE}
    </if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
	AND A.ITEM_CODE = #{ITEM_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
	AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
	AND CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
			 WHEN @RefItem = '1' THEN C3.ITEM_NAME1
			 WHEN @RefItem = '2' THEN C3.ITEM_NAME2
			 ELSE C3.ITEM_NAME
		END LIKE '%' + #{ITEM_NAME} + '%'
	</if>
    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
    AND C4.ITEM_ACCOUNT = @ITEM_ACCOUNT
    </if>

    ORDER BY A.INOUT_TYPE DESC, A.INOUT_SEQ, A.WH_CODE, A.ITEM_CODE

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END

	</select>


	<select id="btr171ukrvService.selectDetailList" parameterType="Map" resultType="rMap">
	/*//btr171ukrv.Cbtr171ukrv[fnBtr171QPop]Query01*/
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) --법인코드    */
	          , @UserId      NVARCHAR(100) --사용자ID    */
	          , @LangType    NVARCHAR(2)  --언어구분    */
	          , @RefItem     NVARCHAR(01) --명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) --날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT A.INOUT_NUM, A.ITEM_CODE
	         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END AS ITEM_NAME
	         , C1.SPEC, C1.STOCK_UNIT
			 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
	             END)                                           AS INOUT_DATE
	         , uniLITE.fnFormat(A.COMP_CODE, A.INOUT_Q, 'R_FSET_QS') AS INOUT_Q
	         , A.WH_CODE AS OUT_WH_CODE
	         , A.WH_CELL_CODE AS OUT_WH_CELL_CODE
	         , A.INOUT_CODE AS IN_WH_CODE
	         , A.INOUT_PRSN
	         , A.DIV_CODE AS FROM_DIV_CODE
	         , A.TO_DIV_CODE
	         , A.MAKE_EXP_DATE
         	 , A.MAKE_DATE
	    FROM               BTR100T  A  WITH (NOLOCK)
	           LEFT  JOIN  BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
	                                                AND C1.ITEM_CODE  = A.ITEM_CODE
	    WHERE  A.COMP_CODE   = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE    = #{DIV_CODE}
	    </if>
	    AND    A.INOUT_TYPE  = '1'         -- 대체입고에 대하여 조회*/
	    AND    A.CREATE_LOC  = '4'         -- 수불생성경로(4: 재고)*/
	    AND    A.INOUT_METH  = '6'         -- 수불방법(6: 대체)*/
	    AND    A.INOUT_TYPE_DETAIL IN ('93','97')  --출고유형(M103-93: 타계정 입고 97:재고대체, M104-93: 타계정 출고 97:재고대체)
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND	   A.WH_CODE     = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
	    AND    A.INOUT_DATE &gt;= #{FR_INOUT_DATE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
	    AND    A.INOUT_DATE &lt;= #{TO_INOUT_DATE}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
				 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
				 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
				 ELSE C1.ITEM_NAME
			END LIKE '%' + #{ITEM_NAME} + '%'
		</if>
	    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
	    AND    A.INOUT_PRSN  = #{INOUT_PRSN}
	    </if>

	    ORDER BY A.ITEM_CODE, A.INOUT_TYPE_DETAIL, A.INOUT_DATE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>


	<select id="btr171ukrvService.selectOrderNumMaster" parameterType="Map" resultType="rMap">
	-- btr171ukrv.Cbtr171ukrv[fnBtr171QRef1] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) --법인코드
	          , @UserId         NVARCHAR(100) --사용자ID
	          , @LangType       NVARCHAR(2)  --언어구분
	          , @RefItem        NVARCHAR(01) --명칭 참조 유형
	          , @DateFormat     NVARCHAR(10) --날짜 포맷 유형 설정

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    --/* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    --/* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    --/* 데이터 조회 */
	    SELECT CONVERT(BIT,0)   AS CHECK_FLAG
	         , A.DIV_CODE
	         , B1.REF_CODE1     AS REF_CODE_DIV
	         , A.WH_CODE
	         , A.WH_CELL_CODE
	         , C2.TREE_NAME     AS WH_NAME
	         , B2.REF_CODE1     AS REF_CODE_WH
	         , A.ITEM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C3.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C3.ITEM_NAME2
	                 ELSE C3.ITEM_NAME
	             END)           AS ITEM_NAME
	         , B3.REF_CODE1     AS REF_CODE_ITEM
	         , C3.SPEC
	         , C3.STOCK_UNIT
	         , C4.ITEM_ACCOUNT
	         , A.LOT_NO
	         , D.AVERAGE_P
	         , B4.REF_CODE1     AS REF_CODE_P
	         , uniLITE.fnFormat(A.COMP_CODE, A.GOOD_STOCK_Q, 'R_FSET_Q') AS GOOD_STOCK_Q
	         , uniLITE.fnFormat(A.COMP_CODE, A.BAD_STOCK_Q,  'R_FSET_Q') AS BAD_STOCK_Q
	         , B5.REF_CODE1     AS REF_CODE_Q
	         , B6.REF_CODE1     AS REF_CODE_ITEM_STATUS
	         --, uniLITE.fnFormat(A.COMP_CODE, A.STOCK_I,      'R_FSET_P') AS STOCK_I
	         , uniLITE.fnFormat(A.COMP_CODE, D.AVERAGE_P * A.GOOD_STOCK_Q, 'R_FSET_P') AS STOCK_I
	         , A.MAKE_EXP_DATE
	         , A.USE_BY_DATE AS MAKE_DATE
	    FROM               BIV150TV  A  WITH (NOLOCK)
	           LEFT  JOIN  BPR100T  C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
	                                                AND C3.ITEM_CODE  = A.ITEM_CODE
	           LEFT  JOIN  BPR200T  C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
	                                                AND C4.DIV_CODE   = A.DIV_CODE
	                                                AND C4.ITEM_CODE  = A.ITEM_CODE
	           LEFT  JOIN  BSA220T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
	                                                AND C2.TYPE_LEVEL = A.DIV_CODE
	                                                AND C2.TREE_CODE  = A.WH_CODE
	           LEFT  JOIN  BSA100T  B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
	                                                AND B1.MAIN_CODE  = 'I001'
	                                                AND B1.SUB_CODE   = '1'
	           LEFT  JOIN  BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
	                                                AND B2.MAIN_CODE  = 'I001'
	                                                AND B2.SUB_CODE   = '2'
	           LEFT  JOIN  BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
	                                                AND B3.MAIN_CODE  = 'I001'
	                                                AND B3.SUB_CODE   = '3'
	           LEFT  JOIN  BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE
	                                                AND B4.MAIN_CODE  = 'I001'
	                                                AND B4.SUB_CODE   = '6'
	           LEFT  JOIN  BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE
	                                                AND B5.MAIN_CODE  = 'I001'
	                                                AND B5.SUB_CODE   = '5'
	           LEFT  JOIN  BSA100T  B6 WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE
	                                                AND B6.MAIN_CODE  = 'I001'
	                                                AND B6.SUB_CODE   = '4'
	           LEFT  JOIN  BIV100T  D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                AND D.DIV_CODE    = A.DIV_CODE
	                                                AND D.WH_CODE     = A.WH_CODE
	                                                AND D.ITEM_CODE   = A.ITEM_CODE
	    WHERE  A.COMP_CODE      = @CompCode
	   -- AND    A.SUM_TYPE = 'C'
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE       = #{DIV_CODE}
	    </if>
	    AND    A.STOCK_Q       != 0
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE        = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
        AND    A.WH_CELL_CODE        = #{WH_CELL_CODE}
        </if>
	    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C4.ITEM_ACCOUNT  = #{ITEM_ACCOUNT}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
				 WHEN @RefItem = '1' THEN C3.ITEM_NAME1
				 WHEN @RefItem = '2' THEN C3.ITEM_NAME2
				 ELSE C3.ITEM_NAME
			END LIKE '%' + #{ITEM_NAME} + '%'
		</if>
	    ORDER BY A.WH_CODE, A.ITEM_CODE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>


	<select id="btr171ukrvService.selectBiv100tMasterRefer" parameterType="Map" resultType="rMap">
	-- btr171ukrvService.selectBiv100tMasterRefer */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) --법인코드
	          , @UserId         NVARCHAR(100) --사용자ID
	          , @LangType       NVARCHAR(2)  --언어구분
	          , @RefItem        NVARCHAR(01) --명칭 참조 유형
	          , @DateFormat     NVARCHAR(10) --날짜 포맷 유형 설정

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    --/* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    --/* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    --/* 데이터 조회 */
	    SELECT CONVERT(BIT,0)   AS CHECK_FLAG
	         , A.DIV_CODE
	         , B1.REF_CODE1     AS REF_CODE_DIV
	         , A.WH_CODE
	         , C2.TREE_NAME     AS WH_NAME
	         , B2.REF_CODE1     AS REF_CODE_WH
	         , A.ITEM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C3.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C3.ITEM_NAME2
	                 ELSE C3.ITEM_NAME
	             END)           AS ITEM_NAME
	         , B3.REF_CODE1     AS REF_CODE_ITEM
	         , C3.SPEC
	         , C3.STOCK_UNIT
	         , C4.ITEM_ACCOUNT
	         , D.AVERAGE_P
	         , B4.REF_CODE1     AS REF_CODE_P
	         , uniLITE.fnFormat(A.COMP_CODE, A.GOOD_STOCK_Q, 'R_FSET_Q') AS GOOD_STOCK_Q
	         , uniLITE.fnFormat(A.COMP_CODE, A.BAD_STOCK_Q,  'R_FSET_Q') AS BAD_STOCK_Q
	         , B5.REF_CODE1     AS REF_CODE_Q
	         , B6.REF_CODE1     AS REF_CODE_ITEM_STATUS
	         --, uniLITE.fnFormat(A.COMP_CODE, A.STOCK_I,      'R_FSET_P') AS STOCK_I
	         , uniLITE.fnFormat(A.COMP_CODE, D.AVERAGE_P * A.GOOD_STOCK_Q, 'R_FSET_P') AS STOCK_I
	    FROM               BIV100T  A  WITH (NOLOCK)
	           LEFT  JOIN  BPR100T  C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
	                                                AND C3.ITEM_CODE  = A.ITEM_CODE
	           LEFT  JOIN  BPR200T  C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
	                                                AND C4.DIV_CODE   = A.DIV_CODE
	                                                AND C4.ITEM_CODE  = A.ITEM_CODE
	           LEFT  JOIN  BSA220T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
	                                                AND C2.TYPE_LEVEL = A.DIV_CODE
	                                                AND C2.TREE_CODE  = A.WH_CODE
	           LEFT  JOIN  BSA100T  B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
	                                                AND B1.MAIN_CODE  = 'I001'
	                                                AND B1.SUB_CODE   = '1'
	           LEFT  JOIN  BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
	                                                AND B2.MAIN_CODE  = 'I001'
	                                                AND B2.SUB_CODE   = '2'
	           LEFT  JOIN  BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
	                                                AND B3.MAIN_CODE  = 'I001'
	                                                AND B3.SUB_CODE   = '3'
	           LEFT  JOIN  BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE  = A.COMP_CODE
	                                                AND B4.MAIN_CODE  = 'I001'
	                                                AND B4.SUB_CODE   = '6'
	           LEFT  JOIN  BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE  = A.COMP_CODE
	                                                AND B5.MAIN_CODE  = 'I001'
	                                                AND B5.SUB_CODE   = '5'
	           LEFT  JOIN  BSA100T  B6 WITH (NOLOCK) ON B6.COMP_CODE  = A.COMP_CODE
	                                                AND B6.MAIN_CODE  = 'I001'
	                                                AND B6.SUB_CODE   = '4'
	           LEFT  JOIN  BIV100T  D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                AND D.DIV_CODE    = A.DIV_CODE
	                                                AND D.WH_CODE     = A.WH_CODE
	                                                AND D.ITEM_CODE   = A.ITEM_CODE
	    WHERE  A.COMP_CODE      = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE       = #{DIV_CODE}
	    </if>
	    AND    A.STOCK_Q       != 0
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE        = #{WH_CODE}
	    </if>

	    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C4.ITEM_ACCOUNT  = #{ITEM_ACCOUNT}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 정규화 -->
		AND CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
				 WHEN @RefItem = '1' THEN C3.ITEM_NAME1
				 WHEN @RefItem = '2' THEN C3.ITEM_NAME2
				 ELSE C3.ITEM_NAME
			END LIKE '%' + #{ITEM_NAME} + '%'
		</if>
	    ORDER BY A.WH_CODE, A.ITEM_CODE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>

	<select id="btr171ukrvService.updateDetail" parameterType="Map" resultType="rMap">
	   --btr171ukrv.Cbtr171ukrv[fnBtr171Save] Query - 1
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE        @CHECK_FLAG       NVARCHAR(01)        -- (필수) Check Flag (N: New, D: Delete, U: Update)
                         , @COMP_CODE        NVARCHAR(08)        -- (필수) 법인코드
                         , @INOUT_DATE       NVARCHAR(08)        -- (필수) 대체일
                         , @DIV_CODE         NVARCHAR(08)        -- (필수) 대체입고 사업장코드
                         , @WH_CODE          NVARCHAR(08)        -- (필수) 대체입고 창고코드
                         , @WH_CELL_CODE     NVARCHAR(20)        -- (필수) 대체입고 CELL창고코드
                         , @ITEM_CODE        NVARCHAR(20)        -- (필수) 대체입고 품목코드
                         , @INOUT_P          NUMERIC(18, 6)      -- (필수) 대체입고 단가
                         , @GOOD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체입고 양품대체
                         , @BAD_STOCK_Q      NUMERIC(18, 6)      -- (필수) 대체입고 불량대체
                         , @INOUT_Q          NUMERIC(18, 6)      -- (필수) 대체입고 수량
                         , @ITEM_STATUS      NVARCHAR(1)         -- (필수) 대체입고 재고유형
                         , @INOUT_I          NUMERIC(18, 6)      -- (필수) 대체입고 재고금액
                         , @GOOD_INOUT_I     NUMERIC(18, 6)      -- (필수) 대체입고 양품 재고금액
                         , @BAD_INOUT_I      NUMERIC(18, 6)      -- (필수) 대체입고 불량 재고금액
                         , @LOT_NO           NVARCHAR(20)        -- (필수) 대체입고 LOT NO.
                         , @INOUT_NUM        NVARCHAR(20)        -- (필수) 대체입고 수불번호
                         , @INOUT_SEQ        NUMERIC(4, 0)       -- (필수) 대체입고 수불순번
                         , @INOUT_TYPE       NVARCHAR(02)        -- (필수) 대체입고 수불유형
                         , @ODIV_CODE        NVARCHAR(08)        -- (필수) 대체출고 사업장코드
                         , @OWH_CODE         NVARCHAR(08)        -- (필수) 대체출고 창고코드
                         , @OWH_CELL_CODE    NVARCHAR(20)        -- (필수) 대체출고 CELL창고코드
                         , @OITEM_CODE       NVARCHAR(20)        -- (필수) 대체출고 품목코드
                         , @OINOUT_P         NUMERIC(18, 6)      -- (필수) 대체출고 단가
                         , @OGOOD_STOCK_Q    NUMERIC(18, 6)      -- (필수) 대체출고 양품대체
                         , @OBAD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체출고 불량대체
                         , @OINOUT_Q         NUMERIC(18, 6)      -- (필수) 대체출고 수량
                         , @OINOUT_I         NUMERIC(18, 6)      -- (필수) 대체출고 재고금액
                         , @OLOT_NO          NVARCHAR(20)        -- (필수) 대체출고 LOT NO.
                         , @USER_ID          NVARCHAR(100)        -- (필수) 사용자 ID
                         , @INOUT_PRSN       NVARCHAR(10)        -- (필수) 수불담당
						 , @MAKE_DATE        NVARCHAR(08)        -- 제조일자
                         , @MAKE_EXP_DATE    NVARCHAR(08)        -- 유통기한


            SET @CHECK_FLAG    = ISNULL(@CHECK_FLAG,	#{CHECK_FLAG})
            SET @COMP_CODE     = ISNULL(@COMP_CODE,   	#{S_COMP_CODE})
            SET @INOUT_DATE    = ISNULL(@INOUT_DATE,  	#{INOUT_DATE})

            SET @DIV_CODE      = ISNULL(@DIV_CODE,    	#{ODIV_CODE})
            SET @WH_CODE       = ISNULL(@WH_CODE,     	#{OWH_CODE})
            SET @WH_CELL_CODE  = ISNULL(@WH_CELL_CODE, 	#{OWH_CELL_CODE})
            SET @ITEM_CODE     = ISNULL(@ITEM_CODE,   	#{OITEM_CODE})
            SET @GOOD_STOCK_Q  = ISNULL(@GOOD_STOCK_Q,  #{OGOOD_STOCK_Q})
            SET @BAD_STOCK_Q   = ISNULL(@BAD_STOCK_Q,   #{OBAD_STOCK_Q})
            SET @INOUT_P       = ISNULL(@INOUT_P,       #{OINOUT_P})
            SET @INOUT_Q       = @GOOD_STOCK_Q + @BAD_STOCK_Q
            SET @GOOD_INOUT_I  = @GOOD_STOCK_Q * @INOUT_P
            SET @BAD_INOUT_I   = @BAD_STOCK_Q  * @INOUT_P
            SET @ITEM_STATUS   = ISNULL(@ITEM_STATUS, 	#{ITEM_STATUS})
            SET @INOUT_I       = ISNULL(@INOUT_I,       #{OINOUT_I})
            SET @LOT_NO        = ISNULL(@LOT_NO,      	#{OLOT_NO})

            SET @ODIV_CODE     = ISNULL(@ODIV_CODE,   	#{DIV_CODE})
            SET @OWH_CODE      = ISNULL(@OWH_CODE,    	#{WH_CODE})
            SET @OWH_CELL_CODE = ISNULL(@OWH_CELL_CODE,	#{WH_CELL_CODE})
            SET @OITEM_CODE    = ISNULL(@OITEM_CODE,  	#{ITEM_CODE})
            SET @OINOUT_P      = ISNULL(@OINOUT_P,      #{INOUT_P})
            SET @OGOOD_STOCK_Q = ISNULL(@OGOOD_STOCK_Q, #{GOOD_STOCK_Q})
            SET @OBAD_STOCK_Q  = ISNULL(@OBAD_STOCK_Q,  #{BAD_STOCK_Q})
            SET @OINOUT_Q      = @OGOOD_STOCK_Q + @OBAD_STOCK_Q
            SET @OINOUT_I      = ISNULL(@OINOUT_I,      #{INOUT_I})
            SET @OLOT_NO       = ISNULL(@OLOT_NO,     	#{LOT_NO})

            SET @INOUT_NUM     = ISNULL(@INOUT_NUM,   	#{INOUT_NUM})         -- 수불번호가 = ''일 경우 신규, != ''일 경우 수정
            SET @INOUT_SEQ     = ISNULL(@INOUT_SEQ,     #{INOUT_SEQ})
            SET @INOUT_TYPE    = ISNULL(@INOUT_TYPE,  	#{INOUT_TYPE})
            SET @USER_ID       = ISNULL(@USER_ID,     	#{S_USER_ID})
            SET @INOUT_PRSN    = ISNULL(@INOUT_PRSN,  	#{INOUT_PRSN})
            SET @MAKE_DATE     = #{MAKE_DATE}
            SET @MAKE_EXP_DATE = #{MAKE_EXP_DATE}

            DECLARE        @InOutNum         NVARCHAR(20)       -- 대체 수불번호
                         , @InOutSeq         NUMERIC(4, 0)      -- 대체 수불순번
                         , @InOutType        NVARCHAR(02)       -- 대체 수불유형
                         , @DivCode          NVARCHAR(08)       -- 사업장
                         , @ItemCode         NVARCHAR(20)       -- 품목코드
                         , @InOutDate        NVARCHAR(08)       -- 대체 수불일자
                         , @WhCode           NVARCHAR(08)       -- 창고코드
                         , @LotNo            NVARCHAR(20)       -- LOT NO
						 , @InoutTypeDetail NVARCHAR(10)

            DECLARE        @RefItem          NVARCHAR(01)       -- 사용자 참조명칭
                         , @MoneyUnit        NVARCHAR(03)       -- 화폐단위
                         , @ErrorCode        NVARCHAR(05)       -- 에러 번호
                         , @ErrorDesc        NVARCHAR(1000)     -- 에러 설명


        -----------------------------------------------------------------------------------------------------------------------
		/* 공통코드 "B049"에 따라 호출하는 재고평가SP 분개하기 위한 작업 */
			DECLARE @EstimatemMethod	NVARCHAR(1)
			      , @AverageCalcPeriod	NVARCHAR(1)

			-- 단가계산방법
			SELECT TOP 1
				   @EstimatemMethod  = SUB_CODE
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND ISNULL(REF_CODE1,'') = 'Y'

			SET @EstimatemMethod  = CASE WHEN ISNULL(@EstimatemMethod, '')  = '' THEN '1' ELSE @EstimatemMethod  END         -- 재고금액 평가 유형(창고/사업장)

			SELECT TOP 1
				   @AverageCalcPeriod = REF_CODE5
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND SUB_CODE != '$'
			   AND SUB_CODE  = @EstimatemMethod

			SET @AverageCalcPeriod  = CASE WHEN ISNULL(@AverageCalcPeriod, '')  = '' THEN '1' ELSE @AverageCalcPeriod  END         -- 재고금액 평가 유형(창고/사업장)

        -----------------------------------------------------------------------------------------------------------------------

        --  사용자 참조명칭 기준 조회
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')                          -- Default: 명칭 0

        --  MONEY UNIT 조회
            SELECT TOP 1 @MoneyUnit = SUB_CODE
            FROM   BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE  = @COMP_CODE
            AND    MAIN_CODE  = 'B004'
            AND    SUB_CODE  != '$'
            AND    USE_YN     = 'Y'
            AND    REF_CODE1  = 'Y'

            SET @MoneyUnit = ISNULL(@MoneyUnit, 'KRW')                    -- Default: KRW

        -----------------------------------------------------------------------------------------------------------------------
        --  1. 삭제/변경된 수불 정보에 대한 삭제 처리
            IF @CHECK_FLAG IN ('D', 'U')                      -- 수정, 삭제일 경우 해당 대체 출고 내역 삭제
            BEGIN
        --      1-1. 현재, 수정/삭제 처리한 입고정보에 대한 대체출고 전표 조회
                DECLARE CUR_0378 CURSOR local static FOR
                    SELECT INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, ITEM_CODE, INOUT_DATE, WH_CODE, LOT_NO
                    FROM   BTR100T WITH (NOLOCK)
                    WHERE  COMP_CODE         = @COMP_CODE
                    AND    INOUT_NUM         = @INOUT_NUM
                    AND    BASIS_NUM         = @INOUT_NUM
        --            AND    LOT_NO            = @LOT_NO        -- @LOT번호 변경시 오류발생하여 삭제함
                    AND    CREATE_LOC        = '4'
                    AND    INOUT_METH        = '6'
                    AND    INOUT_TYPE_DETAIL IN ('93','97')
                    ORDER BY INOUT_NUM, INOUT_SEQ DESC

                OPEN CUR_0378
                FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo

                IF @@CURSOR_ROWS &lt;= 1
                BEGIN
                    SET @ErrorCode = '54724'                 -- 54724: 품목대체 처리한 출고 수불정보를 찾을 수 없습니다. [대체입고 수불번호: 1, 수불순번: 2]
                    SET @ErrorDesc = uniLITE.fnGetErrorMsg(54724, @INOUT_NUM)
                    CLOSE CUR_0378
                    DEALLOCATE CUR_0378

                    GOTO ERROR_HANDLER
                END

                WHILE (@@FETCH_STATUS = 0)
                BEGIN
        --          1-2. 대체 수불 내역 삭제
                    DELETE FROM BTR100T
                    WHERE COMP_CODE    = @COMP_CODE
                    AND   DIV_CODE     = @DivCode
                    AND   INOUT_NUM    = @InOutNum
                    AND   INOUT_SEQ    = @InOutSeq
                    AND   INOUT_TYPE   = @InOutType
                    AND   LOT_NO       = @LotNo

        --          1-3. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        CLOSE CUR_0378
                        DEALLOCATE CUR_0378

                        GOTO ERROR_HANDLER
                   END

                   FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo
                END
                CLOSE CUR_0378
                DEALLOCATE CUR_0378
            END

        -----------------------------------------------------------------------------------------------------------------------
        --  2. 신규 대체 입고 등록 처리
            IF @CHECK_FLAG IN ('U', 'N')                      -- 수정, 신규일 경우 해당 대체 출고 내역 등록
            BEGIN

				SELECT  @InoutTypeDetail = CASE WHEN ITEM_ACCOUNT = (SELECT ITEM_ACCOUNT FROM BPR200T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND ITEM_CODE=@ITEM_CODE) 
												THEN '97' 
												ELSE '93' 
										   END
				FROM BPR200T A
				WHERE COMP_CODE=@COMP_CODE
				AND DIV_CODE=@DIV_CODE
				AND ITEM_CODE=@OITEM_CODE

				
                IF @GOOD_STOCK_Q != 0 Or @BAD_STOCK_Q != 0
				BEGIN

        --      2-1. 신규 등록일 경우, 수불번호 채번
                IF ISNULL(@INOUT_NUM, '') = ''
                    EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, 'BTR100T', 'R', @INOUT_DATE, '1', @INOUT_NUM OUTPUT      -- 일채번

                SET @INOUT_SEQ  = 1
                SET @INOUT_TYPE = '1'             -- 입고

        --      2-2. 대체입고 내역 등록
        --           INOUT_TYPE               수불타입                              ( 1: 입고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STAUS)                          (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체출고 창고코드)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번 1.)
        --           WH_CODE                  창고코드                              (대체입고 창고코드)
                INSERT INTO BTR100T (COMP_CODE,                   DIV_CODE,                          INOUT_NUM,                        INOUT_SEQ,                       ITEM_CODE
                                   , WH_CODE,                     WH_CELL_CODE,                      INOUT_DATE
                                   , INOUT_Q,                     INOUT_P,                           INOUT_I,                          MONEY_UNIT
                                   , BILL_TYPE,                   SALE_TYPE,                         SALE_DIV_CODE,                    SALE_CUSTOM_CODE
                                   , TO_DIV_CODE,                 IN_ITEM_STATUS
                                   , INOUT_TYPE,                  CREATE_LOC,                        ITEM_STATUS,                      LOT_NO
                                   , INOUT_METH,                  INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                  INOUT_CODE
                                   , BASIS_NUM,                   BASIS_SEQ,                         UPDATE_DB_USER,                   UPDATE_DB_TIME
                                   , INOUT_PRSN
                                   , MAKE_EXP_DATE
                                   , MAKE_DATE
                                   --20200123 추가
                                   , REMARK
                                   )
                SELECT @COMP_CODE    AS COMP_CODE,   @DIV_CODE     AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ    AS INOUT_SEQ,        @ITEM_CODE AS ITEM_CODE
                     , @WH_CODE      AS WH_CODE,     @WH_CELL_CODE AS WH_CELL_CODE,      @INOUT_DATE  AS INOUT_DATE
                     , @INOUT_Q      AS INOUT_Q,     @INOUT_P      AS INOUT_P,           @INOUT_I     AS INOUT_I,         @MoneyUnit    AS MONEY_UNIT
                     , '*'           AS BILL_TYPE,   '*'          AS SALE_TYPE,         '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
                     , @ODIV_CODE    AS TO_DIV_CODE, @ITEM_STATUS AS IN_ITEM_STATUS
                     , @INOUT_TYPE   AS INOUT_TYPE,  '4'          AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO       AS LOT_NO
                     , '6'           AS INOUT_METH,  @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE,   @OWH_CODE   AS INOUT_CODE
                     , @INOUT_NUM    AS BASIS_NUM,   CASE WHEN @GOOD_STOCK_Q != 0 THEN 2
                                                          WHEN @BAD_STOCK_Q  != 0 THEN 3
                                                          ELSE 1
                                                     END          AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()     AS UPDATE_DB_TIME
                     , @INOUT_PRSN   AS INOUT_PRSN
                     , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                     , @MAKE_DATE     AS MAKE_DATE
                     --20200123 추가
                     , #{REMARK}

        --      2-2. 재고평가 수행
        --      EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
				IF @EstimatemMethod = '1'
				BEGIN
					-- 실시간 처리
					IF @AverageCalcPeriod = '1'
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
					END
					-- 월마감 처리
					ELSE
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
					END
				END

                IF CHARINDEX(';', @ErrorDesc) &gt; 0
                BEGIN
                    SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                    SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                    GOTO ERROR_HANDLER
                END
            END

        -----------------------------------------------------------------------------------------------------------------------
        --      2-3. 대체 출고 내역 등록 처리
        --           INOUT_TYPE               수불타입                              ( 2: 출고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STATUS)                         (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체입고 창고)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번)
        --           WH_CODE                  창고코드                              (대체출고 창고)

                SET @INOUT_TYPE  = '2'             -- 출고

                IF @GOOD_STOCK_Q != 0
                BEGIN
                    SET @INOUT_SEQ   = 2
                    SET @ITEM_STATUS = '1'             -- 양품

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                           INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                       INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                            INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                          SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                         ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                  INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                          UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )
                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM    AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @GOOD_STOCK_Q AS INOUT_Q,    @INOUT_P    AS INOUT_P,           @GOOD_INOUT_I AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'            AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS  AS ITEM_STATUS,     @OLOT_NO    AS LOT_NO
                         , '6'           AS INOUT_METH, @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'           AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID      AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @OLOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END

                IF @BAD_STOCK_Q != 0
                BEGIN
                    SET @INOUT_SEQ   = 3
                    SET @ITEM_STATUS = '2'             -- 불량

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                          INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                      INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                           INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                         SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                        ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                         UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )

                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @BAD_STOCK_Q  AS INOUT_Q,    @INOUT_P    AS INOUT_P,           @BAD_INOUT_I AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'           AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO     AS LOT_NO
                         , '6'           AS INOUT_METH, @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 방법에 따라 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END


                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END
            END

        ERROR_HANDLER:
            SET NOCOUNT OFF
            SET ARITHABORT OFF

            SELECT TOP 1 @ErrorCode AS ERROR_CODE, @ErrorDesc AS ERROR_DESC, @INOUT_NUM AS INOUT_NUM, 1 AS INOUT_SEQ
        END
	</select>
	<insert id="btr171ukrvService.insertExcel" parameterType="Map">
    	/*str110ukrvServiceImpl.insertExcel*/
    	INSERT INTO L_BTR171T (
    		   _EXCEL_JOBID    
			 , _EXCEL_ROWNUM   
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , DIV_CODE
			 , INOUT_DATE
			 , OWH_CODE			
			 , OWH_CELL_CODE		
			 , OITEM_CODE	
			 , OLOT_NO		
			 , OINOUT_P			
			 , WH_CODE			
			 , WH_CELL_CODE		
			 , ITEM_CODE	
			 , LOT_NO		
			 , INOUT_P				
			 , INOUT_Q		
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
    	 )  VALUES (
    		   #{_EXCEL_JOBID}
    		 , #{_EXCEL_ROWNUM}
    		 , #{_EXCEL_HAS_ERROR}
    		 , #{_EXCEL_ERROR_MSG}
    		 , #{DIV_CODE}
    		 , #{INOUT_DATE}
			 , #{OWH_CODE}			
			 , #{OWH_CELL_CODE}		
			 , #{OITEM_CODE}	
			 , #{OLOT_NO}		
			 , #{OINOUT_P}			
			 , #{WH_CODE}			
			 , #{WH_CELL_CODE}		
			 , #{ITEM_CODE}	
			 , #{LOT_NO}		
			 , #{INOUT_P}				
			 , #{INOUT_Q}		
			 , #{S_USER_ID}          
			 , GETDATE()
			 , #{S_USER_ID}          
			 , GETDATE()
    	)
    </insert>
	<select id="btr171ukrvService.selectExcelist" parameterType="Map" resultType="rMap">	
		/*str110ukrvService.insertExcelist*/
		
	    /* 데이터 조회 */
		SELECT	 A._EXCEL_JOBID    
			   , A._EXCEL_ROWNUM   
			   , A._EXCEL_HAS_ERROR
			   , A._EXCEL_ERROR_MSG
			   , A.DIV_CODE
			   , A.INOUT_DATE
			   , A.OWH_CODE			
			   , A.OWH_CELL_CODE		
			   , A.OITEM_CODE	
			   , B.ITEM_NAME  AS OITEM_NAME
			   , B.SPEC  AS OSPEC
			   , A.OLOT_NO		
			   , A.OINOUT_P			
			   , A.WH_CODE			
			   , A.WH_CELL_CODE		
			   , A.ITEM_CODE
			   , C.ITEM_NAME  AS ITEM_NAME	
			   , C.SPEC  AS SPEC	
			   , A.LOT_NO		
			   , A.INOUT_P				
			   , A.INOUT_Q		
		 FROM  L_BTR171T A
		 LEFT JOIN BPR100T B WITH (NOLOCK)  ON B.ITEM_CODE = A.OITEM_CODE
		 LEFT JOIN BPR100T C WITH (NOLOCK)  ON C.ITEM_CODE = A.ITEM_CODE                             
	    WHERE  _EXCEL_JOBID = #{_EXCEL_JOBID}
		ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
		 
	</select>
	<update id="btr171ukrvService.excelValidate" >		
	/*str110ukrvServiceImpl.excelValidate*/
	--출고단가
    UPDATE   A
	   SET  OINOUT_P = B.AVERAGE_P
	  FROM  L_BTR171T A
	  INNER JOIN BIV200T B WITH (NOLOCK) ON B.COMP_CODE    = #{S_COMP_CODE}
	                                    AND B.DIV_CODE     = A.DIV_CODE 
	                                    AND B.BASIS_YYYYMM = LEFT(INOUT_DATE,6)
	                                    AND B.WH_CODE      = A.OWH_CODE
	                                    AND B.ITEM_CODE    = A.OITEM_CODE
	 WHERE  _EXCEL_JOBID = #{_EXCEL_JOBID}
	  AND   (OINOUT_P IS NULL OR OINOUT_P  = 0)
	--입고단가
	UPDATE   A
	   SET  INOUT_P = B.AVERAGE_P
	  FROM  L_BTR171T A
	  INNER JOIN BIV200T B WITH (NOLOCK) ON B.COMP_CODE    = #{S_COMP_CODE}
	                                    AND B.DIV_CODE     = A.DIV_CODE 
	                                    AND B.BASIS_YYYYMM = LEFT(INOUT_DATE,6)
	                                    AND B.WH_CODE      = A.WH_CODE
	                                    AND B.ITEM_CODE    = A.ITEM_CODE
	 WHERE  _EXCEL_JOBID = #{_EXCEL_JOBID}
	  AND   (INOUT_P IS NULL OR INOUT_P  = 0)
	  
    UPDATE   A
	   SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	= 0 THEN 'Y'
									   WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.OITEM_CODE)	= 0 THEN 'Y'
									   WHEN    A.DIV_CODE IS NULL OR A.INOUT_DATE IS NULL OR A.OWH_CODE     IS NULL OR A.OWH_CELL_CODE IS NULL OR A.OITEM_CODE IS NULL OR A.OLOT_NO IS NULL 
									        OR A.WH_CODE    IS NULL OR A.WH_CELL_CODE IS NULL OR A.ITEM_CODE IS NULL OR A.LOT_NO IS NULL OR A.INOUT_Q IS NULL THEN 'Y'
								  ELSE A._EXCEL_HAS_ERROR 
							      END),
							     
			A._EXCEL_ERROR_MSG = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	= 0 THEN ISNULL(_EXCEL_ERROR_MSG,'') + '등록되지 않은 품목입니다. '
									   WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.OITEM_CODE)	= 0 THEN ISNULL(_EXCEL_ERROR_MSG,'') + '등록되지 않은 품목입니다. '
									   WHEN A.DIV_CODE IS NULL OR A.INOUT_DATE IS NULL OR A.OWH_CODE     IS NULL OR A.OWH_CELL_CODE IS NULL OR A.OITEM_CODE IS NULL OR A.OLOT_NO IS NULL 
									        OR A.WH_CODE    IS NULL OR A.WH_CELL_CODE IS NULL OR A.ITEM_CODE IS NULL OR A.LOT_NO IS NULL OR A.INOUT_Q IS NULL	THEN ISNULL(_EXCEL_ERROR_MSG,'') + '필수입력값을 확인하십시오. '
								 ELSE A._EXCEL_ERROR_MSG 
								 END)
	FROM L_BTR171T A WITH (NOLOCK)  
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>