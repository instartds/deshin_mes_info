<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="btr130rkrvServiceImpl">
	<select id="btr130rkrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
		/* btr130rkrvServiceImpl.userWhcode */
		SELECT A.WH_CODE
		  FROM      BSA210T A WITH(NOLOCK)
		  LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                  AND B.DEPT_CODE = A.TREE_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND B.USER_ID   = #{S_USER_ID}
	</select>


<!-- 그리드 data 조회 -->
	<select id="btr130rkrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* UBRpt02Krv.CBtr160Skr[fnBtr160QStd] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode        NVARCHAR(08)    /* 법인코드        */
		          , @UserId            NVARCHAR(100)    /* 사용자ID        */
		          , @LangType        NVARCHAR(2)        /* 언어구분        */
		          , @RefItem        NVARCHAR(01)
		          , @DateFormat        NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM BSA100T WITH (NOLOCK)
		    WHERE COMP_CODE = @CompCode
		        AND MAIN_CODE = N'B044'
		        AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT    A.DIV_CODE
		          , M1.TREE_CODE AS WH_NAME
		          , M1.TREE_NAME AS WH_CODE
		          , A.ITEM_CODE
		          , CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                 ELSE B.ITEM_NAME
		            END AS ITEM_NAME
		          , B.SPEC
		          , A.LOT_NO
		          , B.STOCK_UNIT
		          , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		            END    AS INOUT_DATE
		          , CASE WHEN @LangType = 'KR' THEN M5.CODE_NAME
		                 WHEN @LangType = 'EN' THEN M5.CODE_NAME_EN
		                 WHEN @LangType = 'CN' THEN M5.CODE_NAME_CN
		                 WHEN @LangType = 'JP' THEN M5.CODE_NAME_JP
		                                       ELSE M5.CODE_NAME
		            END    AS ITEM_STATUS_NAME
		          , A.INOUT_Q
		          , M2.DIV_NAME  AS TO_DIV_CODE
		          , M3.TREE_CODE AS INOUT_NAME
		          , M3.TREE_NAME AS INOUT_CODE
		          , CASE WHEN ISNULL(M4.INOUT_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(M4.INOUT_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(M4.INOUT_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(M4.INOUT_DATE, 7, 2))
		            END    AS MOVE_IN_DATE
		          , ISNULL(M4.INOUT_Q,0) AS MOVE_IN_Q
		          , A.INOUT_PRSN
		          , A.WH_CELL_CODE
		          , C.WH_CELL_NAME 
		          , A.LOT_NO
		          , A.INOUT_NUM
		          , A.INOUT_SEQ
		          , D.REQSTOCK_NUM
		          , D.REQSTOCK_SEQ
		          , CASE WHEN ISNULL(D.REQSTOCK_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.REQSTOCK_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(D.REQSTOCK_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(D.REQSTOCK_DATE, 7, 2))
		            END    AS REQSTOCK_DATE
		          , A.REMARK
		          , A.PROJECT_NO
		          , M4.WH_CELL_CODE AS INOUT_CELL_CODE
		          , M6.WH_CELL_NAME AS INOUT_CELL_NAME
		          , ISNULL(A.PRINT_YN, 'N')                                                                                                   AS PRINT_YN
		          , ISNULL(D.ORDER_NUM, (SELECT TOP 1 ORDER_NUM 
		                                 FROM ORDER_LOT_V_SITE 
		                                 WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND ITEM_CODE=A.ITEM_CODE AND LOT_NO=A.LOT_NO) ) AS ORDER_NUM
		          , ISNULL(D.ORDER_SEQ, (SELECT TOP 1 ORDER_SEQ 
		                                 FROM ORDER_LOT_V_SITE 
		                                 WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND ITEM_CODE=A.ITEM_CODE AND LOT_NO=A.LOT_NO) ) AS ORDER_SEQ
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN BPR100T B  WITH (NOLOCK)  ON B.COMP_CODE     = A.COMP_CODE
		                                            AND B.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN BSA225T C  WITH (NOLOCK)  ON C.COMP_CODE     = A.COMP_CODE
		                                            AND C.DIV_CODE      = A.DIV_CODE
		                                            AND C.WH_CODE       = A.WH_CODE
		                                            AND C.WH_CELL_CODE  = A.WH_CELL_CODE
		        LEFT  JOIN BIV500T D  WITH (NOLOCK)  ON D.COMP_CODE     = A.COMP_CODE
		                                            AND D.DIV_CODE      = A.DIV_CODE
		                                            AND D.REQSTOCK_NUM  = A.ORDER_NUM
		                                            AND D.REQSTOCK_SEQ  = A.ORDER_SEQ
		        LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
		                                            AND M1.TREE_CODE    = A.WH_CODE
		        LEFT  JOIN BOR120T M2 WITH (NOLOCK)  ON M2.COMP_CODE    = A.COMP_CODE
		                                            AND M2.DIV_CODE     = A.TO_DIV_CODE
		        LEFT  JOIN BSA220T M3 WITH (NOLOCK)  ON M3.COMP_CODE    = A.COMP_CODE
		                                            AND M3.TREE_CODE    = A.INOUT_CODE
		        /*입고정보*/
		        LEFT  JOIN BTR100T M4 WITH (NOLOCK)  ON M4.COMP_CODE    = A.COMP_CODE
		                                            AND M4.DIV_CODE     = A.TO_DIV_CODE
		                                            AND M4.INOUT_NUM    = A.BASIS_NUM
		                                            AND M4.INOUT_SEQ    = A.BASIS_SEQ
		                                            AND M4.INOUT_TYPE   = '1'
		        LEFT JOIN BSA225T M6 WITH (NOLOCK)  ON  M6.COMP_CODE    = M4.COMP_CODE
		                                            AND M6.DIV_CODE     = M4.DIV_CODE
		                                            AND M6.WH_CODE      = M4.WH_CODE
		                                            AND M6.WH_CELL_CODE = M4.WH_CELL_CODE
		        LEFT  JOIN BSA100T M5 WITH (NOLOCK)  ON M5.COMP_CODE    = A.COMP_CODE
		                                            AND M5.SUB_CODE     = A.ITEM_STATUS
		                                            AND M5.MAIN_CODE    = 'B021'    /*양불구분*/
		    WHERE A.COMP_CODE         = @CompCode
		      AND A.DIV_CODE          = #{DIV_CODE}
		      AND A.INOUT_TYPE        = '2'
		      AND A.CREATE_LOC        = '4'
		      AND A.INOUT_METH        = '3'
		      AND A.INOUT_TYPE_DETAIL = '99'
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		      AND A.INOUT_DATE       &gt;= #{INOUT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		      AND A.INOUT_DATE       &lt;= #{INOUT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		      AND A.WH_CODE = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		      AND A.INOUT_PRSN        = #{INOUT_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRINT_YN)">
		      AND ISNULL(A.PRINT_YN, 'N') = #{PRINT_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(IN_WH_CODE)">
		      AND A.INOUT_CODE        = #{IN_WH_CODE}
		</if>
		    ORDER BY A.WH_CODE, A.ITEM_CODE, A.INOUT_TYPE_DETAIL, A.INOUT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>




<!-- 출력 -->
<!-- master data 조회 -->
	<select id="btr130rkrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		/* btr130rkrvServiceImpl.selectMasterList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode        NVARCHAR(08)    /* 법인코드        */
		          , @UserId          NVARCHAR(100)   /* 사용자ID        */
		          , @LangType        NVARCHAR(2)     /* 언어구분        */
		          , @RefItem         NVARCHAR(01)
		          , @DateFormat      NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT  A.DIV_CODE
		         /* 공급자정보 */
		         , B.DIV_CODE                                         AS MY_CUSTOM_CODE
		         , B.DIV_NAME                                         AS MY_CUSTOM_NAME
		         , B.REPRE_NAME                                       AS MY_TOP_NAME
		         , CASE WHEN ISNULL(B.COMPANY_NUM,'') = '' THEN ''
		                ELSE SUBSTRING(B.COMPANY_NUM,1,3) + '-'
		                   + SUBSTRING(B.COMPANY_NUM,4,2) + '-'
		                   + SUBSTRING(B.COMPANY_NUM,6,5)
		           END                                                AS MY_COMPANY_NUM
		         , A.INOUT_NUM
		         , M1.TREE_NAME                                       AS WH_CODE
		         , M1.CUSTOM_CODE
		         , ISNULL(B1.ADDR1, '') + ISNULL(B1.ADDR2, '')        AS ADDR
		         , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		           END                                                AS INOUT_DATE
		         , M3.TREE_NAME                                       AS INOUT_CODE
		         , A.INOUT_PRSN
		         , Z1.CODE_NAME + CASE WHEN ISNULL(Z1.REF_CODE5, '') = '' THEN ''
		                             ELSE ' / ' + ISNULL(Z1.REF_CODE5, '')
		           END                                                AS INOUT_PRSN_NM
		         , ISNULL(B3.ADDR1, '') + ISNULL(B3.ADDR2, '')        AS ADDR2
		         , SUM(INOUT_Q)                                       AS INOUT_Q
		      FROM       BTR100T A  WITH (NOLOCK)
		      INNER JOIN BOR120T B  WITH (NOLOCK)  ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		      LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.TREE_CODE   = A.WH_CODE
		      LEFT  JOIN BCM100T B1 WITH (NOLOCK)  ON B1.COMP_CODE   = M1.COMP_CODE
		                                          AND B1.CUSTOM_CODE = M1.CUSTOM_CODE
		      LEFT  JOIN BSA220T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                          AND M3.TREE_CODE   = A.INOUT_CODE
		      LEFT  JOIN BCM100T B3 WITH (NOLOCK)  ON B3.COMP_CODE   = M3.COMP_CODE
		                                          AND B3.CUSTOM_CODE = M3.CUSTOM_CODE
		      LEFT  JOIN BSA100T Z1 WITH (NOLOCK)  ON Z1.COMP_CODE   = A.COMP_CODE
		                                          AND Z1.MAIN_CODE   = 'B024'
		                                          AND Z1.SUB_CODE    = A.INOUT_PRSN
		     WHERE A.COMP_CODE         = @CompCode
		       AND A.DIV_CODE          = #{DIV_CODE}
		       AND A.INOUT_TYPE        = '2'
		       AND A.CREATE_LOC        = '4'
		       AND A.INOUT_METH        = '3'
		       AND A.INOUT_TYPE_DETAIL = '99'
		<if test="@foren.Ognl@isEmpty(INOUT_INFO_LIST)">
		       AND A.INOUT_NUM         = #{INOUT_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_INFO_LIST)">
		       AND A.INOUT_NUM + '/' + CONVERT(NVARCHAR, A.INOUT_SEQ) IN
		    <foreach collection="INOUT_INFO_LIST" item="item" separator="," close=")" open="(">
		                            '${item.INOUT_INFO}'
		    </foreach>
		</if>
		     GROUP BY A.COMP_CODE, A.DIV_CODE, B.DIV_CODE, B.DIV_NAME, B.REPRE_NAME, B.COMPANY_NUM, A.INOUT_NUM
		            , M1.TREE_NAME, M1.CUSTOM_CODE, B1.ADDR1, B1.ADDR2, A.INOUT_DATE, M3.TREE_NAME, A.INOUT_PRSN
		            , Z1.CODE_NAME, Z1.REF_CODE5, B3.ADDR1, B3.ADDR2--, A.REMARK     --20210316 주석
		END
	</select>

<!-- detail data 조회 -->
	<select id="btr130rkrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* btr130rkrvServiceImpl.selectDetailList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode        NVARCHAR(08)    /* 법인코드        */
		          , @UserId          NVARCHAR(100)   /* 사용자ID        */
		          , @LangType        NVARCHAR(2)     /* 언어구분        */
		          , @RefItem         NVARCHAR(01)
		          , @DateFormat      NVARCHAR(10)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = N'KR'

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT  A.DIV_CODE
		         /* 공급자정보 */
		         , B.DIV_CODE                                         AS MY_CUSTOM_CODE
		         , B.DIV_NAME                                         AS MY_CUSTOM_NAME
		         , B.REPRE_NAME                                       AS MY_TOP_NAME
		         , CASE WHEN ISNULL(B.COMPANY_NUM,'') = '' THEN ''
		                ELSE SUBSTRING(B.COMPANY_NUM,1,3) + '-'
		                   + SUBSTRING(B.COMPANY_NUM,4,2) + '-'
		                   + SUBSTRING(B.COMPANY_NUM,6,5)
		           END                                                AS MY_COMPANY_NUM
		         , A.INOUT_NUM
		         , M1.TREE_NAME                                       AS WH_CODE
		         , M1.CUSTOM_CODE
		         , ISNULL(B1.ADDR1, '') + ISNULL(B1.ADDR2, '')        AS ADDR
		         , B.TELEPHON
		         , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		           END                                                AS INOUT_DATE
		         , M3.TREE_NAME                                       AS INOUT_CODE
		         , A.INOUT_PRSN
		         , Z1.CODE_NAME + CASE WHEN ISNULL(Z1.REF_CODE5, '') = '' THEN ''
		                             ELSE ' / ' + ISNULL(Z1.REF_CODE5, '')
		           END                                                AS INOUT_PRSN_NM
		         , ISNULL(B3.ADDR1, '') + ISNULL(B3.ADDR2, '')        AS ADDR2
		         , A.ITEM_CODE
		         , C.ITEM_NAME
		         , C.SPEC
		         , A.INOUT_Q
		         , A.REMARK
		      FROM       BTR100T A  WITH (NOLOCK)
		      INNER JOIN BOR120T B  WITH (NOLOCK)  ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		      INNER JOIN BPR100T C  WITH (NOLOCK)  ON C.COMP_CODE    = A.COMP_CODE
		                                          AND C.ITEM_CODE    = A.ITEM_CODE
		      LEFT  JOIN BSA220T M1 WITH (NOLOCK)  ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.TREE_CODE   = A.WH_CODE
		      LEFT  JOIN BCM100T B1 WITH (NOLOCK)  ON B1.COMP_CODE   = M1.COMP_CODE
		                                          AND B1.CUSTOM_CODE = M1.CUSTOM_CODE
		      LEFT  JOIN BSA220T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                          AND M3.TREE_CODE   = A.INOUT_CODE
		      LEFT  JOIN BCM100T B3 WITH (NOLOCK)  ON B3.COMP_CODE   = M3.COMP_CODE
		                                          AND B3.CUSTOM_CODE = M3.CUSTOM_CODE
		      LEFT  JOIN BSA100T Z1 WITH (NOLOCK)  ON Z1.COMP_CODE   = A.COMP_CODE
		                                          AND Z1.MAIN_CODE   = 'B024'
		                                          AND Z1.SUB_CODE    = A.INOUT_PRSN
		     WHERE A.COMP_CODE         = @CompCode
		       AND A.DIV_CODE          = #{DIV_CODE}
		       AND A.INOUT_TYPE        = '2'
		       AND A.CREATE_LOC        = '4'
		       AND A.INOUT_METH        = '3'
		       AND A.INOUT_TYPE_DETAIL = '99'
		<if test="@foren.Ognl@isEmpty(INOUT_INFO_LIST)">
		       AND A.INOUT_NUM         = #{INOUT_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_INFO_LIST)">
		       AND A.INOUT_NUM + '/' + CONVERT(NVARCHAR, A.INOUT_SEQ) IN
		    <foreach collection="INOUT_INFO_LIST" item="item" separator="," close=")" open="(">
		                            '${item.INOUT_INFO}'
		    </foreach>
		</if>
		END
	</select>

<!-- 출력한 데이터 출력여부 UPDATE 로직 추가 -->
	<update id="btr130rkrvServiceImpl.updatePrintStatus" parameterType="Map">
		/* btr130rkrvServiceImpl.updatePrintStatus */
		UPDATE BTR100T
		   SET PRINT_YN       = 'Y'
		     , DELIVERY_DATE  = CONVERT(NVARCHAR(08), GETDATE(), 112)
		     , UPDATE_DB_TIME = GETDATE()
		     , UPDATE_DB_USER = #{S_USER_ID}
		 WHERE COMP_CODE         = #{S_COMP_CODE}
		   AND DIV_CODE          = #{DIV_CODE}
		   AND INOUT_TYPE        = '2'
		   AND CREATE_LOC        = '4'
		   AND INOUT_METH        = '3'
		   AND INOUT_TYPE_DETAIL = '99'
		<if test="@foren.Ognl@isEmpty(INOUT_INFO_LIST)">
		   AND INOUT_NUM         = #{INOUT_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_INFO_LIST)">
		   AND INOUT_NUM + '/' + CONVERT(NVARCHAR, INOUT_SEQ) IN
		    <foreach collection="INOUT_INFO_LIST" item="item" separator="," close=")" open="(">
		                            '${item.INOUT_INFO}'
		    </foreach>
		</if>
	</update>
</mapper>