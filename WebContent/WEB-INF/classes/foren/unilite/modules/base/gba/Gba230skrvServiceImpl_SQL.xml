<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gba230skrvServiceImpl">
	<select id="gba230skrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
SELECT  	CASE WHEN A.ORDER_TYPE  &gt;= '40'  AND A.ORDER_TYPE &lt; '80' THEN '해외' ELSE '국내' END BILL_TYPE
			, A.ORDER_DATE AS ORDER_DATE
			, MAX(B.DVRY_DATE)		AS DVRY_DATE
			, A.PROJECT_NO
			, E.PJT_NAME			AS PROJECT_NAME
			, J.CUSTOM_NAME			AS CUSTOM_NAME
			, SUM(B.ORDER_O)		AS ORDER_O
			, SUM(CASE WHEN (F.CODE_NAME = '제품' OR F.CODE_NAME = '반제품') THEN   ((ISNULL(H.PL_COST,0)+ISNULL(H.PL_AMOUNT,0))* B.ORDER_UNIT_Q) ELSE D.PURCHASE_BASE_P*B.ORDER_Q END) BUDGET_O
		   	, CASE WHEN SUM(B.ORDER_O) = 0 THEN 0 ELSE (SUM(B.ORDER_P*B.OUTSTOCK_Q)/SUM(B.ORDER_O)*100)     END SALE_RATE
		    , SUM(B.ORDER_P*B.OUTSTOCK_Q)		AS SALE_O
			, ISNULL(M.AMOUNT_I, 0) AS PURCHASE_O
			, ((SUM(CASE WHEN (F.CODE_NAME = '제품' OR F.CODE_NAME = '반제품') THEN   ((ISNULL(H.PL_COST,0)+ISNULL(H.PL_AMOUNT,0))* B.ORDER_UNIT_Q) ELSE D.PURCHASE_BASE_P*B.ORDER_Q END)
					* (CASE WHEN SUM(B.ORDER_O) = 0 THEN 0 ELSE (SUM(B.ORDER_P*B.OUTSTOCK_Q)/SUM(B.ORDER_O)*100)     END)/ 100 )
					- ISNULL(N.MPO_AMT,0))		AS STOCK_O
			, K.AMT_I AS D_ETC_AMT
			, 0								AS SUB_TOT_O
			, L.AMT_I AS ETC_AMT 
		 FROM SOF100T A WITH(NOLOCK)
				INNER JOIN SOF110T B WITH(NOLOCK) ON A.COMP_CODE	= B.COMP_CODE
												 AND A.DIV_CODE		= B.DIV_CODE
												 AND A.ORDER_NUM	= B.ORDER_NUM
				INNER JOIN BPR100T C WITH(NOLOCK) ON B.COMP_CODE	= C.COMP_CODE
												 AND B.ITEM_CODE	= C.ITEM_CODE
				INNER JOIN BPR200T D WITH(NOLOCK) ON B.COMP_CODE	= D.COMP_CODE
												 AND B.DIV_CODE		= D.DIV_CODE
												 AND B.ITEM_CODE	= D.ITEM_CODE
				LEFT  JOIN BCM600T E WITH(NOLOCK) ON A.COMP_CODE	= E.COMP_CODE
												 AND A.PROJECT_NO 	= E.PJT_CODE
				LEFT  JOIN BSA100T F WITH(NOLOCK) ON F.COMP_CODE	= A.COMP_CODE
												 AND F.MAIN_CODE	= 'B020'
												 AND F.SUB_CODE		= D.ITEM_ACCOUNT
				LEFT  JOIN BPL100T H WITH(NOLOCK) ON H.COMP_CODE	= A.COMP_CODE
												 AND H.DIV_CODE		= A.DIV_CODE
												 AND H.PROD_ITEM_CODE	= B.ITEM_CODE
				LEFT  JOIN BCM100T J WITH(NOLOCK) ON J.COMP_CODE	= A.COMP_CODE
												 AND J.CUSTOM_CODE	= A.CUSTOM_CODE
				LEFT  JOIN (SELECT COMP_CODE, ISNULL(AC_DATA1, '') AS PROJECT_NO, SUM(AMT_I) AS AMT_I 
												FROM AGJ210T K WITH(NOLOCK)
											   WHERE ACCNT		&gt; '49999' 
												 AND MOD_DIVI IS NULL 
											GROUP BY COMP_CODE, ISNULL(AC_DATA1, '') ) K ON K.COMP_CODE		= A.COMP_CODE
																						AND K.PROJECT_NO	= A.PROJECT_NO

				LEFT  JOIN (SELECT COMP_CODE, ISNULL(AC_DATA1, '') AS PROJECT_NO, SUM(AMT_I) AS AMT_I 
												FROM AGJ210T K WITH(NOLOCK)
												WHERE (ACCNT  LIKE '4%' OR ACCNT LIKE '216%') 
												 AND MOD_DIVI IS NULL 
												 AND ACCNT != '41200'		AND ACCNT != '41500'
												 AND AC_DATA1 != '00-000-0'	AND AC_DATA1 != '00-000-1'
											GROUP BY COMP_CODE, ISNULL(AC_DATA1, '') ) L ON L.COMP_CODE		= A.COMP_CODE
																						AND L.PROJECT_NO	= A.PROJECT_NO

				LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, PROJECT_NO, SUM(AMOUNT_I) AS AMOUNT_I 
												FROM MAP200T WITH(NOLOCK) 
											GROUP BY COMP_CODE, DIV_CODE, PROJECT_NO ) M ON M.COMP_CODE		= A.COMP_CODE
																						AND M.DIV_CODE		= A.DIV_CODE 
																						AND M.PROJECT_NO	= A.PROJECT_NO
				LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE, C.PROJECT_NO, SUM(A.AMOUNT_I) AS MPO_AMT
												FROM MAP200T A 
												INNER JOIN BTR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
																				AND A.DIV_CODE  = B.DIV_CODE
																				AND A.INOUT_NUM = B.INOUT_NUM
																				AND A.INOUT_SEQ = B.INOUT_SEQ
																				AND A.CUSTOM_CODE = B.INOUT_CODE
																				AND A.ITEM_CODE = B.ITEM_CODE
												INNER JOIN MPO100T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
																				AND A.DIV_CODE  = C.DIV_CODE
																				AND B.ORDER_NUM = C.ORDER_NUM
																				AND A.CUSTOM_CODE = C.CUSTOM_CODE
											GROUP BY A.COMP_CODE, A.DIV_CODE, C.PROJECT_NO) N ON N.COMP_CODE		= A.COMP_CODE
																							 AND N.DIV_CODE			= A.DIV_CODE 
																							 AND N.PROJECT_NO		= A.PROJECT_NO
    		Where A.COMP_CODE=#{S_COMP_CODE} 
    		  AND A.DIV_CODE=#{DIV_CODE}  
    			<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				 AND A.PROJECT_NO LIKE #{PJT_CODE}+'%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(rdoSelect)">	 
							   			<choose>
										    <when test="rdoSelect == 1">
										    	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE)">
												AND	A.ORDER_DATE &gt;= #{ORDER_DATE}
												</if>
												<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
												AND	A.ORDER_DATE &lt;= #{ORDER_DATE_TO}
												</if>
										    </when>
										    <when test="rdoSelect == 2">
										    	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE)">
										    	AND	B.DVRY_DATE &gt;= #{ORDER_DATE}
										    	</if>
												<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
												AND	B.DVRY_DATE &lt;= #{ORDER_DATE_TO}
												</if>
										    </when>
										</choose>
				</if>
				<if test="@foren.Ognl@isNotEmpty(STATE)"> 
					AND ISNULL(E.DIVI, 'N')           =       #{STATE}   
				</if> 
			GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_TYPE, A.PROJECT_NO, E.PJT_NAME, J.CUSTOM_NAME, A.ORDER_NUM, A.ORDER_DATE  ,K.AMT_I, L.AMT_I, M.AMOUNT_I, N.MPO_AMT

   	ORDER BY A.PROJECT_NO
	</select>
</mapper>