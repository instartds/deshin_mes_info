<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bcm130skrvServiceImpl">
					
	<select id="bcm130skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
		          , @UserId         NVARCHAR(100) /* 사용자ID    */
		          , @LangType       NVARCHAR(2)  /* 언어구분    */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}   
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    		
		 SELECT A.CUSTOM_CODE                                           
		         , A.CUSTOM_TYPE  
		         , (CASE WHEN A.OPR_FLAG = 'N' THEN '신규' 
		         		 WHEN A.OPR_FLAG = 'U' THEN '수정'
		         		 ELSE '삭제'	END)		AS OPR_FLAG                                         
		         , A.CUSTOM_NAME                                           
		         , A.CUSTOM_NAME1                                          
		         , A.CUSTOM_NAME2                                          
		         , A.CUSTOM_FULL_NAME                                      
		         , A.NATION_CODE                                           
		         , (SUBSTRING(A.COMPANY_NUM,1,3) + '-' +                   
		            SUBSTRING(A.COMPANY_NUM,4,2) + '-' +                   
		            SUBSTRING(A.COMPANY_NUM,6,5)) AS COMPANY_NUM           
		         , unilite.fnCipherDecrypt(A.TOP_NUM, 'A') AS TOP_NUM      
		         , A.TOP_NAME                                              
		         , A.BUSINESS_TYPE                                         
		         , A.USE_YN                                                
		         , A.COMP_TYPE                                             
		         , A.COMP_CLASS                                            
		         , A.AGENT_TYPE                                            
		         , A.AGENT_TYPE2                                           
		         , A.AGENT_TYPE3                                           
		    
		         , A.AREA_TYPE                                             
		         , (SUBSTRING(A.ZIP_CODE, 1, 3) + '-' +                    
		            SUBSTRING(A.ZIP_CODE, 4, 3)) AS ZIP_CODE               
		         , A.ADDR1                                                 
		         , A.ADDR2                                                 
		         , A.TELEPHON                                              
		         , A.FAX_NUM                                               
		         , A.HTTP_ADDR                                             
		         , A.MAIL_ID                                               
		         , A.WON_CALC_BAS                                          
		         , uniLITE.fnGetUserDate(A.COMP_CODE, START_DATE) AS START_DATE 
		         , uniLITE.fnGetUserDate(A.COMP_CODE,STOP_DATE)   AS STOP_DATE  
		         , A.TO_ADDRESS                                            
		         , A.TAX_CALC_TYPE                                         
		         , A.RECEIPT_DAY                                           
		         , A.MONEY_UNIT                                            
		         , A.TAX_TYPE                                              
		         , A.BILL_TYPE                                             
		         , A.SET_METH                                              
		         , A.VAT_RATE                                              
		         , A.TRANS_CLOSE_DAY                                       
		         , A.COLLECT_DAY                                           
		         , A.CREDIT_YN                                             
		         , A.TOT_CREDIT_AMT                                        
		         , A.CREDIT_AMT                                            
		         , uniLITE.fnGetUserDate(A.COMP_CODE, CREDIT_YMD) AS CREDIT_YMD             
		         , ISNULL(COLLECT_CARE, '2') AS COLLECT_CARE       
		         , A.SAP_CODE      
		         , A.BUSI_PRSN                                             
		         , A.TAX_CALC_ORDER                                             
		         , A.REMARK                                                
		         , A.MANAGE_CUSTOM                                         
		         , (CASE ISNULL(A.MANAGE_CUSTOM, '')                     
		                 WHEN ''                                         
		                      THEN ''                                    
		                      ELSE (SELECT CUSTOM_NAME                   
		                              FROM BCM100T WITH (NOLOCK)                       
		                             WHERE A.COMP_CODE     = COMP_CODE   
		                               AND A.MANAGE_CUSTOM = CUSTOM_CODE)
		             END) AS MCUSTOM_NAME                                
		         , A.COLLECTOR_CP                                          
		         , (CASE ISNULL(A.COLLECTOR_CP, '')                      
		                 WHEN ''                                         
		                      THEN ''                                    
		                      ELSE (SELECT CUSTOM_NAME                   
		                              FROM BCM100T WITH (NOLOCK)                       
		                             WHERE A.COMP_CODE    = COMP_CODE    
		                               AND A.COLLECTOR_CP = CUSTOM_CODE) 
		             END) AS COLLECTOR_CP_NAME                           
		         , A.BANK_CODE                                             
		         , (CASE ISNULL(A.BANK_CODE, '')                         
		                 WHEN ''                                         
		                      THEN ''                                    
		                      ELSE (SELECT CUSTOM_NAME                   
		                              FROM BCM100T WITH (NOLOCK)                       
		                             WHERE A.COMP_CODE = COMP_CODE       
		                               AND A.BANK_CODE = CUSTOM_CODE     
		                               AND CUSTOM_TYPE = '4')            
		             END) AS BANK_NAME                                   
		         , unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') AS BANKBOOK_NUM
		         , A.BANKBOOK_NAME                                         
		         , '' AS CUST_CHK                                        
		         , '' AS SSN_CHK                                         
		         , A.UPDATE_DB_USER 
		         , A.PURCHASE_BANK
		         , (CASE ISNULL(A.PURCHASE_BANK, '') WHEN '' THEN ''  
		                                                     ELSE (SELECT CUSTOM_NAME 
		                                                             FROM BCM100T WITH (NOLOCK)
		                                                            WHERE A.COMP_CODE     = COMP_CODE
		                                                              AND A.PURCHASE_BANK = CUSTOM_CODE
		                                                              AND CUSTOM_TYPE = '4') 
		             END) AS PURBANKNAME
		         , A.BILL_PRSN
		         , A.HAND_PHON
		         , A.BILL_MAIL_ID
		         , A.CUSTOM_SALE_PRSN
		         , A.CUSTOM_SALE_HAND_PHON
		         , A.CUSTOM_SALE_MAIL_ID
		         , A.BILL_PRSN2
		         , A.HAND_PHON2
		         , A.BILL_MAIL_ID2
		         , A.BILL_MEM_TYPE
		         , A.ADDR_TYPE  
		         , A.COMP_CODE                                            
		         , A.CHANNEL
		         , A.BILL_CUSTOM
		         , (CASE ISNULL(A.BILL_CUSTOM, '')                    
		                 WHEN ''                                      
		                      THEN ''                                 
		                      ELSE (SELECT CUSTOM_NAME                
		                              FROM BCM100T WITH (NOLOCK)                    
		                             WHERE A.COMP_CODE   = COMP_CODE  
		                               AND A.BILL_CUSTOM = CUSTOM_CODE)
		             END) AS BILL_CUSTOM_NAME                          
		         , ISNULL(A.CREDIT_OVER_YN, 'N') AS CREDIT_OVER_YN
		    	 , A.DEPT_CODE
		    	 , A.CUST_LEVEL1
		    	 , A.SERVANT_COMPANY_NUM
		    	 , A.RETURN_CODE
		    	 , A.UPDATE_DB_TIME
		    	 , A.CREDIT_OVER_YN
		    	 , A.DVRY_PRSN
		    	 , A.DVRY_PHON
		    	 , A.DVRY_LT
		    	 , A.PUBLICATION_FLD1
		    	 , A.PUBLICATION_FLD2
		    	 , A.PUBLICATION_FLD3
		    	 , A.CARD_NO1
		    	 , A.CARD_NO2
		    	 , A.CARD_NO3
		    	 , A.CARD_NO4 
		    	 , A.WH_CODE   	 
		    	 , A.MODIFY_REASON
		    	 , A.KEY_VALUE
		    	 , B.TREE_NAME 	AS DEPT_NAME
		    	 , C.USER_NAME
		      FROM L_BCM100T A WITH(NOLOCK)  
		      LEFT JOIN BSA210T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		      					               AND A.DEPT_CODE = B.TREE_CODE
			  LEFT JOIN BSA300T C WITH (NOLOCK) ON A.COMP_CODE = C.COMP_CODE
			  					               AND A.UPDATE_DB_USER = C.USER_ID      					 
		
		    WHERE   A.COMP_CODE                                     =  @CompCode
		
		<if test="@foren.Ognl@isNotEmpty(FROM_DATE)">
		    AND     CONVERT(NVARCHAR(08), A.UPDATE_DB_TIME, 112)   &gt;=  #{FROM_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_DATE)">
		    AND     CONVERT(NVARCHAR(08), A.UPDATE_DB_TIME, 112)   &lt;=  #{TO_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(USER_ID)">
		    AND   A.UPDATE_DB_USER    =  #{USER_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		    AND   A.AGENT_TYPE        = #{AGENT_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		    AND   A.CUSTOM_CODE       = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		    AND   A.COMPANY_NUM       = #{COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
		    AND   A.CUSTOM_TYPE       = #{CUSTOM_TYPE}
		</if>
		    
		    ORDER  BY A.CUSTOM_CODE, A.UPDATE_DB_TIME, A.OPR_FLAG
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>
	
	<select id="bcm130skrvServiceImpl.getChangeHistory" parameterType="Map" resultType="rMap">
		BEGIN

	  SET NOCOUNT ON
	  
	---SELECT VAT_RATE, * FROM L_BCM100T WITH (NOLOCK) WHERE CUSTOM_CODE = '103154'
	  DECLARE @COMP_CODE		NVARCHAR(08)
				   ,@CUSTOM_CODE	NVARCHAR(20)
				   ,@SYSDATE				DATETIME
				   ,@KEY_VALUE			NVARCHAR(20)
	
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @SYSDATE		= GETDATE()
		SET @KEY_VALUE		= #{KEY_VALUE}
		SET @CUSTOM_CODE	= #{CUSTOM_CODE}
	
		--SET @CUSTOM_CODE	= '103154'
	
		SELECT TOP 1 @SYSDATE		 = UPDATE_DB_TIME
		FROM l_bcm100t  WITH (NOLOCK)
		WHERE COMP_CODE = @COMP_CODE and KEY_VALUE = @KEY_VALUE
	
	  --UPDATE A SET A.MODIFY_FACTOR = 
	  --약명3-&gt;약명4
	
	  --'거래처명 : [' + B.CUSTOM_NAME + '-&gt;' + A.CUSTOM_NAME + ']'
	  
	    --UPDATE A SET A.MODIFY_FACTOR =  B.CUSTOM_NAME + B.CUSTOM_FULL_NAME + B.CUSTOM_NAME1 + B.CUSTOM_NAME2
	
	
	  --,(CASE WHEN B.COLLECTOR_CP != A.COLLECTOR_CP		THEN (ISNULL(B.COLLECTOR_CP, '')		+ '-&gt;' + ISNULL(A.COLLECTOR_CP, ''))		+ CHAR(10)	ELSE '' END) AS COLLECTOR_CP /*수금거래처 */
	
	SELECT
			B.CUSTOM_NAME + B.CUSTOM_FULL_NAME + B.CUSTOM_NAME1 + B.CUSTOM_NAME2 + B.CUSTOM_TYPE + 
			B.AGENT_TYPE + B.CUST_LEVEL1 + B.BUSINESS_TYPE + B.COMPANY_NUM + B.TOP_NAME + B.COMP_TYPE + 
			B.COMP_CLASS + B.AREA_TYPE + B.RETURN_CODE + B.START_DATE + B.STOP_DATE + B.USE_YN + 
			B.NATION_CODE + B.MONEY_UNIT + B.TAX_TYPE + B.TAX_CALC_TYPE + B.TAX_CALC_ORDER + 
			B.WON_CALC_BAS + B.BILL_TYPE + B.BUSI_PRSN + B.MODIFY_REASON + 
			B.BANK_CODE + B.BANKBOOK_NAME + B.COLLECT_DAY + B.RECEIPT_DAY + B.SET_METH + 
			B.CREDIT_YN + B.COLLECT_CARE + B.SAP_CODE + B.ZIP_CODE + B.ADDR1 + B.ADDR2 + B.TELEPHON + 
			B.FAX_NUM + B.HTTP_ADDR + B.BILL_PRSN + B.HAND_PHON + B.BILL_MAIL_ID + B.BILL_MEM_TYPE + 
			B.CUSTOM_SALE_PRSN + B.CUSTOM_SALE_HAND_PHON + B.CUSTOM_SALE_MAIL_ID + B.MANAGE_CUSTOM + B.COLLECTOR_CP + 
			B.WH_CODE + B.DVRY_PRSN + B.DVRY_PHON + B.PUBLICATION_FLD1 + B.REMARK + B.VAT_RATE +
			
			B.DVRY_LT+B.BANKBOOK_NUM+B.TOP_NUM+B.TOT_CREDIT_AMT+B.CREDIT_AMT+B.VAT_RATE										AS MODIFY_FACTOR
	
	  FROM L_BCM100T A WITH (NOLOCK)
	  INNER JOIN 
		(
	   SELECT 
	   A.CUSTOM_CODE
	  ,A.KEY_VALUE
	  ,(CASE WHEN ISNULL(B.CUSTOM_NAME, '') != ISNULL(A.CUSTOM_NAME, '')						THEN '거래처명: '					+ ISNULL(CASE WHEN B.CUSTOM_NAME ='' THEN NULL ELSE B.CUSTOM_NAME END, '[]')							+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_NAME ='' THEN NULL ELSE A.CUSTOM_NAME END, '[]')							+ CHAR(10)	ELSE '' END) AS CUSTOM_NAME
	  ,(CASE WHEN ISNULL(B.CUSTOM_FULL_NAME, '') != ISNULL(A.CUSTOM_FULL_NAME, '')				THEN '거래처명(전명): '				+ ISNULL(CASE WHEN B.CUSTOM_FULL_NAME ='' THEN NULL ELSE B.CUSTOM_FULL_NAME END, '[]')					+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_FULL_NAME ='' THEN NULL ELSE A.CUSTOM_FULL_NAME END, '[]')					+ CHAR(10)	ELSE '' END) AS CUSTOM_FULL_NAME
	  ,(CASE WHEN ISNULL(B.CUSTOM_NAME1, '') != ISNULL(A.CUSTOM_NAME1, '')						THEN '약명1: '					+ ISNULL(CASE WHEN B.CUSTOM_NAME1 ='' THEN NULL ELSE B.CUSTOM_NAME1 END, '[]')							+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_NAME1 ='' THEN NULL ELSE A.CUSTOM_NAME1 END, '[]')							+ CHAR(10)	ELSE '' END) AS CUSTOM_NAME1
	  ,(CASE WHEN ISNULL(B.CUSTOM_NAME2, '') != ISNULL(A.CUSTOM_NAME2, '')						THEN '약명2: '					+ ISNULL(CASE WHEN B.CUSTOM_NAME2 ='' THEN NULL ELSE B.CUSTOM_NAME2 END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_NAME2 ='' THEN NULL ELSE A.CUSTOM_NAME2 END , '[]')							+ CHAR(10)	ELSE '' END) AS CUSTOM_NAME2	
	  ,(CASE WHEN ISNULL(B.CUSTOM_TYPE, '') != ISNULL(A.CUSTOM_TYPE, '')						THEN '구분: '						+ ISNULL(CASE WHEN B.CUSTOM_TYPE ='' THEN NULL ELSE B.CUSTOM_TYPE END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_TYPE ='' THEN NULL ELSE A.CUSTOM_TYPE END , '[]')							+ CHAR(10)	ELSE '' END) AS CUSTOM_TYPE  /* 구분 */
	  ,(CASE WHEN ISNULL(B.AGENT_TYPE, '') != ISNULL(A.AGENT_TYPE, '')							THEN '고객분류: '					+ ISNULL(CASE WHEN B.AGENT_TYPE ='' THEN NULL ELSE B.AGENT_TYPE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.AGENT_TYPE ='' THEN NULL ELSE A.AGENT_TYPE END , '[]')								+ CHAR(10)	ELSE '' END) AS AGENT_TYPE /*고객분류 */
	  ,(CASE WHEN ISNULL(B.CUST_LEVEL1, '') != ISNULL(A.CUST_LEVEL1, '')						THEN '고객구분: '					+ ISNULL(CASE WHEN B.CUST_LEVEL1 ='' THEN NULL ELSE B.CUST_LEVEL1 END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.CUST_LEVEL1 ='' THEN NULL ELSE A.CUST_LEVEL1 END , '[]')							+ CHAR(10)	ELSE '' END) AS CUST_LEVEL1 /*고객구분 */
	  ,(CASE WHEN ISNULL(B.COMPANY_NUM, '') != ISNULL(A.COMPANY_NUM, '')						THEN '사업자번호: '					+ ISNULL(CASE WHEN B.COMPANY_NUM ='' THEN NULL ELSE B.COMPANY_NUM END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.COMPANY_NUM ='' THEN NULL ELSE A.COMPANY_NUM END , '[]')							+ CHAR(10)	ELSE '' END) AS COMPANY_NUM /*사업자번호 */
	  ,(CASE WHEN ISNULL(B.TOP_NAME, '') != ISNULL(A.TOP_NAME, '')								THEN '대표자명: '					+ ISNULL(CASE WHEN B.TOP_NAME ='' THEN NULL ELSE B.TOP_NAME END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.TOP_NAME ='' THEN NULL ELSE A.TOP_NAME END , '[]')									+ CHAR(10)	ELSE '' END) AS TOP_NAME /*대표자명 */	  
	  ,(CASE WHEN ISNULL(B.COMP_TYPE, '') != ISNULL(A.COMP_TYPE, '')							THEN '업태: '						+ ISNULL(CASE WHEN B.COMP_TYPE ='' THEN NULL ELSE B.COMP_TYPE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.COMP_TYPE ='' THEN NULL ELSE A.COMP_TYPE END , '[]')								+ CHAR(10)	ELSE '' END) AS COMP_TYPE /*업태 */
	  ,(CASE WHEN ISNULL(B.COMP_CLASS, '') != ISNULL(A.COMP_CLASS, '')							THEN '업종: '						+ ISNULL(CASE WHEN B.COMP_CLASS ='' THEN NULL ELSE B.COMP_CLASS END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.COMP_CLASS ='' THEN NULL ELSE A.COMP_CLASS END , '[]')								+ CHAR(10)	ELSE '' END) AS COMP_CLASS /*업종 */
	  ,(CASE WHEN ISNULL(B.AREA_TYPE, '') != ISNULL(A.AREA_TYPE, '')							THEN '지역: '						+ ISNULL(CASE WHEN B.AREA_TYPE ='' THEN NULL ELSE B.AREA_TYPE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.AREA_TYPE ='' THEN NULL ELSE A.AREA_TYPE END , '[]')								+ CHAR(10)	ELSE '' END) AS AREA_TYPE /*지역 */
	  ,(CASE WHEN ISNULL(B.RETURN_CODE, '') != ISNULL(A.RETURN_CODE, '')						THEN '반품처: '					+ ISNULL(CASE WHEN B.RETURN_CODE ='' THEN NULL ELSE B.RETURN_CODE END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.RETURN_CODE ='' THEN NULL ELSE A.RETURN_CODE END , '[]')							+ CHAR(10)	ELSE '' END) AS RETURN_CODE /*반품처 */
	  ,(CASE WHEN ISNULL(B.START_DATE, '') != ISNULL(A.START_DATE, '')							THEN '거래시작일: '					+ ISNULL(CASE WHEN B.START_DATE ='' THEN NULL ELSE B.START_DATE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.START_DATE ='' THEN NULL ELSE A.START_DATE END , '[]')								+ CHAR(10)	ELSE '' END) AS START_DATE /*거래시작일 */
	  ,(CASE WHEN ISNULL(B.STOP_DATE, '') != ISNULL(A.STOP_DATE, '')							THEN '거래중단일: '					+ ISNULL(CASE WHEN B.STOP_DATE ='' THEN NULL ELSE B.STOP_DATE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.STOP_DATE ='' THEN NULL ELSE A.STOP_DATE END , '[]')								+ CHAR(10)	ELSE '' END) AS STOP_DATE /*거래중단일 */
	  ,(CASE WHEN ISNULL(B.USE_YN, '') != ISNULL(A.USE_YN, '')									THEN '사용여부: '					+ ISNULL(CASE WHEN B.USE_YN ='' THEN NULL ELSE B.USE_YN END , '[]')										+ ' → ' + ISNULL(CASE WHEN A.USE_YN ='' THEN NULL ELSE A.USE_YN END , '[]')										+ CHAR(10)	ELSE '' END) AS USE_YN /*사용여부 */
	  ,(CASE WHEN ISNULL(B.NATION_CODE, '') != ISNULL(A.NATION_CODE, '')						THEN '국가코드: '					+ ISNULL(CASE WHEN B.NATION_CODE ='' THEN NULL ELSE B.NATION_CODE END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.NATION_CODE ='' THEN NULL ELSE A.NATION_CODE END , '[]')							+ CHAR(10)	ELSE '' END) AS NATION_CODE /*국가코드 */
	  ,(CASE WHEN ISNULL(B.MONEY_UNIT, '') != ISNULL(A.MONEY_UNIT, '')							THEN '기준화폐: '					+ ISNULL(CASE WHEN B.MONEY_UNIT ='' THEN NULL ELSE B.MONEY_UNIT END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.MONEY_UNIT ='' THEN NULL ELSE A.MONEY_UNIT END , '[]')								+ CHAR(10)	ELSE '' END) AS MONEY_UNIT /*기준화폐 */
	  ,(CASE WHEN ISNULL(B.TAX_TYPE, '') != ISNULL(A.TAX_TYPE, '')								THEN '세액포함여부: '				+ ISNULL(CASE WHEN B.TAX_TYPE ='' THEN NULL ELSE B.TAX_TYPE END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.TAX_TYPE ='' THEN NULL ELSE A.TAX_TYPE END , '[]')									+ CHAR(10)	ELSE '' END) AS TAX_TYPE /*세액포함여부 */
	  ,(CASE WHEN ISNULL(B.TAX_CALC_TYPE, '') != ISNULL(A.TAX_CALC_TYPE, '')					THEN '세액계산방법: '				+ ISNULL(CASE WHEN B.TAX_CALC_TYPE ='' THEN NULL ELSE B.TAX_CALC_TYPE END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.TAX_CALC_TYPE ='' THEN NULL ELSE A.TAX_CALC_TYPE END , '[]')						+ CHAR(10)	ELSE '' END) AS TAX_CALC_TYPE /*세액계산방법 */	
	  ,(CASE WHEN ISNULL(B.TAX_CALC_ORDER, '') != ISNULL(A.TAX_CALC_ORDER, '')					THEN '세액계산순서: '				+ ISNULL(CASE WHEN B.TAX_CALC_ORDER ='' THEN NULL ELSE B.TAX_CALC_ORDER END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.TAX_CALC_ORDER ='' THEN NULL ELSE A.TAX_CALC_ORDER END , '[]')						+ CHAR(10)	ELSE '' END) AS TAX_CALC_ORDER /*세액계산순서 */
	  ,(CASE WHEN ISNULL(B.BILL_TYPE, '') != ISNULL(A.BILL_TYPE, '')							THEN '계산서종류: '					+ ISNULL(CASE WHEN B.BILL_TYPE ='' THEN NULL ELSE B.BILL_TYPE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.BILL_TYPE ='' THEN NULL ELSE A.BILL_TYPE END , '[]')								+ CHAR(10)	ELSE '' END) AS BILL_TYPE /*계산서종류 */
	  ,(CASE WHEN ISNULL(B.BUSI_PRSN, '') != ISNULL(A.BUSI_PRSN, '')							THEN '주영업담당: '					+ ISNULL(CASE WHEN B.BUSI_PRSN ='' THEN NULL ELSE B.BUSI_PRSN END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.BUSI_PRSN ='' THEN NULL ELSE A.BUSI_PRSN END , '[]')								+ CHAR(10)	ELSE '' END) AS BUSI_PRSN /*원미만계산 */
	  ,(CASE WHEN ISNULL(B.MODIFY_REASON, '') != ISNULL(A.MODIFY_REASON, '')					THEN '변경사유: '					+ ISNULL(CASE WHEN B.MODIFY_REASON ='' THEN NULL ELSE B.MODIFY_REASON END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.MODIFY_REASON ='' THEN NULL ELSE A.MODIFY_REASON END , '[]')						+ CHAR(10)	ELSE '' END) AS MODIFY_REASON /*변경사유 */
	  ,(CASE WHEN ISNULL(B.BANK_CODE, '') != ISNULL(A.BANK_CODE, '')							THEN '은행: '						+ ISNULL(CASE WHEN B.BANK_CODE ='' THEN NULL ELSE B.BANK_CODE END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.BANK_CODE ='' THEN NULL ELSE A.BANK_CODE END , '[]')								+ CHAR(10)	ELSE '' END) AS BANK_CODE /*은행 */	  
	  ,(CASE WHEN ISNULL(B.BANKBOOK_NAME, '') != ISNULL(A.BANKBOOK_NAME, '')					THEN '예금주: '					+ ISNULL(CASE WHEN B.BANKBOOK_NAME ='' THEN NULL ELSE B.BANKBOOK_NAME END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.BANKBOOK_NAME ='' THEN NULL ELSE A.BANKBOOK_NAME END , '[]')						+ CHAR(10)	ELSE '' END) AS BANKBOOK_NAME /*예금주 */
	  ,(CASE WHEN ISNULL(B.COLLECT_DAY, '') != ISNULL(A.COLLECT_DAY, '')						THEN '수금(지불)일: '				+ ISNULL(CASE WHEN B.COLLECT_DAY ='' THEN NULL ELSE B.COLLECT_DAY END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.COLLECT_DAY ='' THEN NULL ELSE A.COLLECT_DAY END , '[]')							+ CHAR(10)	ELSE '' END) AS COLLECT_DAY /*수금(지불)일 */
	  ,(CASE WHEN ISNULL(B.RECEIPT_DAY, '') != ISNULL(A.RECEIPT_DAY, '')						THEN '결제조건: '					+ ISNULL(CASE WHEN B.RECEIPT_DAY ='' THEN NULL ELSE B.RECEIPT_DAY END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.RECEIPT_DAY ='' THEN NULL ELSE A.RECEIPT_DAY END , '[]')							+ CHAR(10)	ELSE '' END) AS RECEIPT_DAY /*결제조건 */
	  ,(CASE WHEN ISNULL(B.SET_METH, '') != ISNULL(A.SET_METH, '')								THEN '결제방법: '					+ ISNULL(CASE WHEN B.SET_METH ='' THEN NULL ELSE B.SET_METH END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.SET_METH ='' THEN NULL ELSE A.SET_METH END , '[]')									+ CHAR(10)	ELSE '' END) AS SET_METH /*결제방법 */	  
	  ,(CASE WHEN ISNULL(B.CREDIT_YN, '') != ISNULL(A.CREDIT_YN, '')							THEN '여신/한도적용여부: '			+ ISNULL(CASE WHEN B.CREDIT_YN ='' THEN NULL ELSE B.CREDIT_YN END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.CREDIT_YN ='' THEN NULL ELSE A.CREDIT_YN END , '[]')								+ CHAR(10)	ELSE '' END) AS CREDIT_YN /*여신/한도적용여부 */	  	  
	  ,(CASE WHEN ISNULL(B.SAP_CODE, '') != ISNULL(A.SAP_CODE, '')								THEN 'SAP등록코드: '				+ ISNULL(CASE WHEN B.SAP_CODE ='' THEN NULL ELSE B.SAP_CODE END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.SAP_CODE ='' THEN NULL ELSE A.SAP_CODE END , '[]')									+ CHAR(10)	ELSE '' END) AS SAP_CODE /*SAP등록코드 */
	  ,(CASE WHEN ISNULL(B.ZIP_CODE, '') != ISNULL(A.ZIP_CODE, '')								THEN '우편번호: '					+ ISNULL(CASE WHEN B.ZIP_CODE ='' THEN NULL ELSE B.ZIP_CODE END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.ZIP_CODE ='' THEN NULL ELSE A.ZIP_CODE END , '[]')									+ CHAR(10)	ELSE '' END) AS ZIP_CODE /*우편번호 */
	  ,(CASE WHEN ISNULL(B.ADDR1, '') != ISNULL(A.ADDR1, '')									THEN '우편주소: '					+ ISNULL(CASE WHEN B.ADDR1 ='' THEN NULL ELSE B.ADDR1 END , '[]')										+ ' → ' + ISNULL(CASE WHEN A.ADDR1 ='' THEN NULL ELSE A.ADDR1 END , '[]')										+ CHAR(10)	ELSE '' END) AS ADDR1 /*우편주소 */
	  ,(CASE WHEN ISNULL(B.ADDR2, '') != ISNULL(A.ADDR2, '')									THEN '상세주소: '					+ ISNULL(CASE WHEN B.ADDR2 ='' THEN NULL ELSE B.ADDR2 END , '[]')										+ ' → ' + ISNULL(CASE WHEN A.ADDR2 ='' THEN NULL ELSE A.ADDR2 END , '[]')										+ CHAR(10)	ELSE '' END) AS ADDR2 /*상세주소 */
	  ,(CASE WHEN ISNULL(B.TELEPHON, '') != ISNULL(A.TELEPHON, '')								THEN '전화번호: '					+ ISNULL(CASE WHEN B.TELEPHON ='' THEN NULL ELSE B.TELEPHON END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.TELEPHON ='' THEN NULL ELSE A.TELEPHON END , '[]')									+ CHAR(10)	ELSE '' END) AS TELEPHON /*전화번호 */
	  ,(CASE WHEN ISNULL(B.FAX_NUM, '') != ISNULL(A.FAX_NUM, '')								THEN '팩스: '						+ ISNULL(CASE WHEN B.FAX_NUM ='' THEN NULL ELSE B.FAX_NUM END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.FAX_NUM ='' THEN NULL ELSE A.FAX_NUM END , '[]')									+ CHAR(10)	ELSE '' END) AS FAX_NUM /*팩스 */
	  ,(CASE WHEN ISNULL(B.HTTP_ADDR, '') != ISNULL(A.HTTP_ADDR, '')							THEN '홈페이지: '					+ ISNULL(CASE WHEN B.HTTP_ADDR ='' THEN NULL ELSE B.HTTP_ADDR END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.HTTP_ADDR ='' THEN NULL ELSE A.HTTP_ADDR END , '[]')								+ CHAR(10)	ELSE '' END) AS HTTP_ADDR /*홈페이지 */
	  ,(CASE WHEN ISNULL(B.BILL_PRSN, '') != ISNULL(A.BILL_PRSN, '')							THEN '전자문서담당: '				+ ISNULL(CASE WHEN B.BILL_PRSN ='' THEN NULL ELSE B.BILL_PRSN END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.BILL_PRSN ='' THEN NULL ELSE A.BILL_PRSN END , '[]')								+ CHAR(10)	ELSE '' END) AS BILL_PRSN /*전자문서담당 */
	  ,(CASE WHEN ISNULL(B.HAND_PHON, '') != ISNULL(A.HAND_PHON, '')							THEN '핸드폰: '					+ ISNULL(CASE WHEN B.HAND_PHON ='' THEN NULL ELSE B.HAND_PHON END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.HAND_PHON ='' THEN NULL ELSE A.HAND_PHON END , '[]')								+ CHAR(10)	ELSE '' END) AS HAND_PHON /*핸드폰 */
	  ,(CASE WHEN ISNULL(B.BILL_MAIL_ID, '') != ISNULL(A.BILL_MAIL_ID, '')						THEN 'e-MAIL: '					+ ISNULL(CASE WHEN B.BILL_MAIL_ID ='' THEN NULL ELSE B.BILL_MAIL_ID END , '[]')							+ ' → ' + ISNULL(CASE WHEN A.BILL_MAIL_ID ='' THEN NULL ELSE A.BILL_MAIL_ID END , '[]')							+ CHAR(10)	ELSE '' END) AS BILL_MAIL_ID /*e-MAIL */
	  ,(CASE WHEN ISNULL(B.BILL_MEM_TYPE, '') != ISNULL(A.BILL_MEM_TYPE, '')					THEN '전자문서구분: '				+ ISNULL(CASE WHEN B.BILL_MEM_TYPE ='' THEN NULL ELSE B.BILL_MEM_TYPE END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.BILL_MEM_TYPE ='' THEN NULL ELSE A.BILL_MEM_TYPE END , '[]')						+ CHAR(10)	ELSE '' END) AS BILL_MEM_TYPE /*전자문서구분 */
	  ,(CASE WHEN ISNULL(B.CUSTOM_SALE_PRSN, '') != ISNULL(A.CUSTOM_SALE_PRSN, '')				THEN '영업담당: '					+ ISNULL(CASE WHEN B.CUSTOM_SALE_PRSN ='' THEN NULL ELSE B.CUSTOM_SALE_PRSN END , '[]')					+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_SALE_PRSN ='' THEN NULL ELSE A.CUSTOM_SALE_PRSN END , '[]')					+ CHAR(10)	ELSE '' END) AS CUSTOM_SALE_PRSN /*영업담당 */
	  ,(CASE WHEN ISNULL(B.CUSTOM_SALE_HAND_PHON, '') != ISNULL(A.CUSTOM_SALE_HAND_PHON, '')	THEN '핸드폰: '					+ (ISNULL(CASE WHEN B.CUSTOM_SALE_HAND_PHON ='' THEN NULL ELSE B.CUSTOM_SALE_HAND_PHON END , '[]')		+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_SALE_HAND_PHON ='' THEN NULL ELSE A.CUSTOM_SALE_HAND_PHON END , '[]'))		+ CHAR(10)	ELSE '' END) AS CUSTOM_SALE_HAND_PHON /*핸드폰 */
	  ,(CASE WHEN ISNULL(B.CUSTOM_SALE_MAIL_ID, '') != ISNULL(A.CUSTOM_SALE_MAIL_ID, '')		THEN 'e-MAIL: '					+ (ISNULL(CASE WHEN B.CUSTOM_SALE_MAIL_ID ='' THEN NULL ELSE B.CUSTOM_SALE_MAIL_ID END , '[]')			+ ' → ' + ISNULL(CASE WHEN A.CUSTOM_SALE_MAIL_ID ='' THEN NULL ELSE A.CUSTOM_SALE_MAIL_ID END , '[]'))			+ CHAR(10)	ELSE '' END) AS CUSTOM_SALE_MAIL_ID /*e-MAIL */
	  ,(CASE WHEN ISNULL(B.MANAGE_CUSTOM, '') != ISNULL(A.MANAGE_CUSTOM, '')					THEN '집계거래처: '					+ (ISNULL(CASE WHEN B.MANAGE_CUSTOM ='' THEN NULL ELSE B.MANAGE_CUSTOM END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.MANAGE_CUSTOM ='' THEN NULL ELSE A.MANAGE_CUSTOM END , '[]'))						+ CHAR(10)	ELSE '' END) AS MANAGE_CUSTOM /*집계거래처 */	  
	  ,(CASE WHEN ISNULL(B.COLLECTOR_CP, '') != ISNULL(A.COLLECTOR_CP, '')						THEN '수금거래처: '					+ (ISNULL(CASE WHEN B.COLLECTOR_CP ='' THEN NULL ELSE B.COLLECTOR_CP END , '[]')						+ ' → ' + ISNULL(CASE WHEN A.COLLECTOR_CP ='' THEN NULL ELSE A.COLLECTOR_CP END , '[]'))						+ CHAR(10)	ELSE '' END) AS COLLECTOR_CP /*수금거래처 */	  
	  ,(CASE WHEN ISNULL(B.WH_CODE, '') != ISNULL(A.WH_CODE, '')								THEN '주창고: '					+ (ISNULL(CASE WHEN B.WH_CODE ='' THEN NULL ELSE B.WH_CODE END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.WH_CODE ='' THEN NULL ELSE A.WH_CODE END , '[]'))									+ CHAR(10)	ELSE '' END) AS WH_CODE /*주창고 */
	  ,(CASE WHEN ISNULL(B.DVRY_PRSN, '') != ISNULL(A.DVRY_PRSN, '')							THEN '배송처담당자: '				+ (ISNULL(CASE WHEN B.DVRY_PRSN ='' THEN NULL ELSE B.DVRY_PRSN END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.DVRY_PRSN ='' THEN NULL ELSE A.DVRY_PRSN END , '[]'))								+ CHAR(10)	ELSE '' END) AS DVRY_PRSN /*배송처담당자 */
	  ,(CASE WHEN ISNULL(B.DVRY_PHON, '') != ISNULL(A.DVRY_PHON, '')							THEN '배송담당자연락처: '			+ (ISNULL(CASE WHEN B.DVRY_PHON ='' THEN NULL ELSE B.DVRY_PHON END , '[]')								+ ' → ' + ISNULL(CASE WHEN A.DVRY_PHON ='' THEN NULL ELSE A.DVRY_PHON END , '[]'))								+ CHAR(10)	ELSE '' END) AS DVRY_PHON /*배송담당자연락처 */ 												
	  ,(CASE WHEN ISNULL(B.PUBLICATION_FLD1, '') != ISNULL(A.PUBLICATION_FLD1, '')				THEN '출판분야: '					+ (ISNULL(CASE WHEN B.PUBLICATION_FLD1 ='' THEN NULL ELSE B.PUBLICATION_FLD1 END , '[]')				+ ' → ' + ISNULL(CASE WHEN A.PUBLICATION_FLD1 ='' THEN NULL ELSE A.PUBLICATION_FLD1 END , '[]'))				+ CHAR(10)	ELSE '' END) AS PUBLICATION_FLD1 /*출판분야 */
	  ,(CASE WHEN ISNULL(B.REMARK, '') != ISNULL(A.REMARK, '')									THEN '비고: '						+ (ISNULL(CASE WHEN B.REMARK ='' THEN NULL ELSE B.REMARK END , '[]')									+ ' → ' + ISNULL(CASE WHEN A.REMARK ='' THEN NULL ELSE A.REMARK END , '[]'))									+ CHAR(10)	ELSE '' END) AS REMARK /*비고*/
	  
	  ,(CASE WHEN B.VAT_RATE != A.VAT_RATE														THEN '세율: '						+ CONVERT(nvarchar(10),(ISNULL(CASE WHEN B.VAT_RATE ='' THEN NULL ELSE B.VAT_RATE END , '[]'))									+ ' → ' + CONVERT(nvarchar(50),ISNULL(CASE WHEN A.VAT_RATE ='' THEN NULL ELSE A.VAT_RATE END , '[]')))									+ CHAR(10)	ELSE '' END) AS VAT_RATE /*세율 */
	  ,(CASE WHEN B.TOT_CREDIT_AMT != A.TOT_CREDIT_AMT											THEN '여신/한도액: '				+ CONVERT(nvarchar(60),(ISNULL(CASE WHEN B.TOT_CREDIT_AMT ='' THEN NULL ELSE B.TOT_CREDIT_AMT END , '[]'))						+ ' → ' + CONVERT(nvarchar(60),ISNULL(CASE WHEN A.TOT_CREDIT_AMT ='' THEN NULL ELSE A.TOT_CREDIT_AMT END , '[]')))						+ CHAR(10)	ELSE '' END) AS TOT_CREDIT_AMT /*여신/한도액 */
	  ,(CASE WHEN B.CREDIT_AMT != A.CREDIT_AMT													THEN '신용여신액: '					+ CONVERT(nvarchar(60),(ISNULL(CASE WHEN B.CREDIT_AMT ='' THEN NULL ELSE B.CREDIT_AMT END , '[]'))								+ ' → ' + CONVERT(nvarchar(60),ISNULL(CASE WHEN A.CREDIT_AMT ='' THEN NULL ELSE A.CREDIT_AMT END , '[]')))								+ CHAR(10)	ELSE '' END) AS CREDIT_AMT /*신용여신액 */
	  ,(CASE WHEN B.DVRY_LT != A.DVRY_LT														THEN '배송L/T: '					+ CONVERT(nvarchar(60),(ISNULL(CASE WHEN B.DVRY_LT ='' THEN NULL ELSE B.DVRY_LT END , '[]'))									+ ' → ' +CONVERT(nvarchar(60),ISNULL(CASE WHEN A.DVRY_LT ='' THEN NULL ELSE A.DVRY_LT END , '[]')))										+ CHAR(10)	ELSE '' END) AS DVRY_LT /*배송L/T */
	  ,(CASE WHEN ISNULL(B.BUSINESS_TYPE, '') != ISNULL(A.BUSINESS_TYPE, '')					THEN '법인/개인: '					+ ISNULL(CASE WHEN CONVERT(NVARCHAR(2),B.BUSINESS_TYPE) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),B.BUSINESS_TYPE) END, '[]')		+ ' → ' + ISNULL(CASE WHEN CONVERT(NVARCHAR(2),A.BUSINESS_TYPE) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),A.BUSINESS_TYPE) END, '[]')		+ CHAR(10)	ELSE '' END) AS BUSINESS_TYPE /*법인/개인 */
	  ,(CASE WHEN ISNULL(B.WON_CALC_BAS, '') != ISNULL(A.WON_CALC_BAS, '')						THEN '원미만계산: '					+ ISNULL(CASE WHEN CONVERT(NVARCHAR(2),B.WON_CALC_BAS) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),B.WON_CALC_BAS) END , '[]')		+ ' → ' + ISNULL(CASE WHEN CONVERT(NVARCHAR(2),A.WON_CALC_BAS) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),A.WON_CALC_BAS) END , '[]')		+ CHAR(10)	ELSE '' END) AS WON_CALC_BAS /*원미만계산 */	
	  ,(CASE WHEN ISNULL(B.COLLECT_CARE, '') != ISNULL(A.COLLECT_CARE, '')						THEN '미수관리방법: '				+ ISNULL(CASE WHEN CONVERT(NVARCHAR(2),B.COLLECT_CARE) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),B.COLLECT_CARE) END , '[]')		+ ' → ' + ISNULL(CASE WHEN CONVERT(NVARCHAR(2),A.COLLECT_CARE) ='' THEN NULL ELSE CONVERT(NVARCHAR(2),A.COLLECT_CARE) END , '[]')		+ CHAR(10)	ELSE '' END) AS COLLECT_CARE /*미수관리방법 */
	  ,(CASE WHEN ISNULL(unilite.fnCipherDecrypt(B.TOP_NUM, 'B'), '')	   != ISNULL(unilite.fnCipherDecrypt(A.TOP_NUM, 'B'), '')										THEN '주민번호: ' + (ISNULL(CASE WHEN unilite.fnCipherDecrypt(B.TOP_NUM, 'B') ='' THEN NULL ELSE unilite.fnCipherDecrypt(B.TOP_NUM, 'B') END , '[]')				+ ' → ' + ISNULL(CASE WHEN unilite.fnCipherDecrypt(A.TOP_NUM, 'B') ='' THEN NULL ELSE unilite.fnCipherDecrypt(A.TOP_NUM, 'B') END , '[]'))					+ CHAR(10)	ELSE '' END) AS TOP_NUM /*주민번호 */ 
	  ,(CASE WHEN ISNULL(unilite.fnCipherDecrypt(B.BANKBOOK_NUM, 'B'), '') != ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B'), '')									THEN '계좌번호: ' + (ISNULL(CASE WHEN unilite.fnCipherDecrypt(B.BANKBOOK_NUM, 'B') ='' THEN NULL ELSE unilite.fnCipherDecrypt(B.BANKBOOK_NUM, 'B') END , '[]')		+ ' → ' + ISNULL(CASE WHEN unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') ='' THEN NULL ELSE unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') END , '[]'))		+ CHAR(10)	ELSE '' END) AS BANKBOOK_NUM /*계좌번호 */
	  --,(CASE WHEN CONVERT(nvarchar(40),ISNULL(B.UPDATE_DB_TIME, '')) != CONVERT(nvarchar(40),ISNULL(A.UPDATE_DB_TIME, ''))			THEN '수정시간: ' + CONVERT(nvarchar(40),(ISNULL(B.UPDATE_DB_TIME, ''))					+ ' → ' + CONVERT(nvarchar(40),ISNULL(A.UPDATE_DB_TIME, '')))		+ CHAR(10)	ELSE '' END) AS UPDATE_DB_TIME /*비고*/
	  FROM L_BCM100T A WITH(NOLOCK)
	  INNER JOIN (SELECT TOP 1
	                 COMP_CODE, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_FULL_NAME, CUSTOM_NAME1, CUSTOM_NAME2,
					 CUSTOM_TYPE, AGENT_TYPE, CUST_LEVEL1, BUSINESS_TYPE, COMPANY_NUM, TOP_NAME, TOP_NUM,
					 COMP_TYPE, COMP_CLASS, AREA_TYPE, RETURN_CODE, START_DATE, STOP_DATE,UPDATE_DB_TIME,
					 USE_YN	,NATION_CODE,MONEY_UNIT,TAX_TYPE,TAX_CALC_TYPE,TAX_CALC_ORDER,WON_CALC_BAS,	
					 BILL_TYPE,BUSI_PRSN,CREDIT_OVER_YN,CREDIT_AMT,CREDIT_YMD, VAT_RATE,
					 MODIFY_REASON,BANK_CODE,BANKBOOK_NUM,BANKBOOK_NAME,COLLECT_DAY,RECEIPT_DAY,SET_METH,
					 TRANS_CLOSE_DAY,CREDIT_YN,TOT_CREDIT_AMT,COLLECT_CARE,SAP_CODE,ZIP_CODE,ADDR1,ADDR2,
					 TELEPHON,FAX_NUM,HTTP_ADDR,BILL_PRSN,HAND_PHON,BILL_MAIL_ID,BILL_MEM_TYPE,CUSTOM_SALE_PRSN,
					 CUSTOM_SALE_HAND_PHON,CUSTOM_SALE_MAIL_ID,MANAGE_CUSTOM,COLLECTOR_CP,
					 WH_CODE,DVRY_PRSN,DVRY_PHON,DVRY_LT,PUBLICATION_FLD1,REMARK	
	
					 
					 FROM L_BCM100T WITH(NOLOCK)
					 WHERE COMP_CODE		= @COMP_CODE
						AND CUSTOM_CODE	= @CUSTOM_CODE
						AND KEY_VALUE NOT IN (@KEY_VALUE)
						AND OPR_FLAG IN ('N', 'U')
					    AND UPDATE_DB_TIME &lt; @SYSDATE
					 ORDER BY UPDATE_DB_TIME DESC
					 ) B ON A.COMP_CODE = B.COMP_CODE AND A.CUSTOM_CODE = B.CUSTOM_CODE
	 WHERE A.COMP_CODE		= @COMP_CODE
		AND A.CUSTOM_CODE		= @CUSTOM_CODE
		AND A.KEY_VALUE           = @KEY_VALUE
		) B ON A.CUSTOM_CODE  = B.CUSTOM_CODE
		AND A.KEY_VALUE			= B.KEY_VALUE
	
		
	  SET NOCOUNT OFF
	
	END
	</select>
	
</mapper>