<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr120skrvServiceImpl">
					
	<select id="bpr120skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
		          , @UserId         NVARCHAR(100) /* 사용자ID    */		          
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}   
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    		
		 SELECT A.ITEM_CODE
			  , A.KEY_VALUE
			  , (CASE WHEN A.OPR_FLAG = 'N' THEN '신규' 
	         		  WHEN A.OPR_FLAG = 'U' THEN '수정'
         		 	  ELSE '삭제'	END)					AS OPR_FLAG
			  , A.COMP_CODE
			  , A.DIV_CODE
			  , C.DIV_NAME
			  , A.ITEM_CODE
			  , A.ITEM_NAME
			  , A.ITEM_LEVEL1
			  , A.ITEM_LEVEL2
			  , A.ITEM_LEVEL3
			  , A.STOCK_UNIT
			  , A.STOCK_CARE_YN
			  , A.TAX_TYPE
			  , A.CONSIGNMENT_FEE
			  , A.SALE_BASIS_P
			  , A.AUTO_DISCOUNT
			  , A.SALE_UNIT
			  , A.ITEM_ACCOUNT
			  , A.SUPPLY_TYPE
			  , A.ORDER_UNIT
			  , A.TRNS_RATE
			  , A.BIG_BOX_BARCODE
			  , A.K_PRINTER
			  , A.BARCODE
			  , A.UPDATE_DB_TIME
			  , A.UPDATE_DB_USER
			  , B.USER_NAME
		         
		      FROM L_BPR200T A WITH(NOLOCK)  
			  LEFT  JOIN BSA300T B WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE
			  		     		                AND A.UPDATE_DB_USER = B.USER_ID    
			  INNER JOIN BOR120T C WITH (NOLOCK) ON A.COMP_CODE 	   = C.COMP_CODE
			  					                AND A.DIV_CODE	   = C.DIV_CODE			  					   					 
		
		    WHERE   A.COMP_CODE  =  @CompCode
			<if test="@foren.Ognl@isNotEmpty(FROM_DATE)">
			    AND     CONVERT(NVARCHAR(08), A.UPDATE_DB_TIME, 112)   &gt;=  #{FROM_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_DATE)">
			    AND     CONVERT(NVARCHAR(08), A.UPDATE_DB_TIME, 112)   &lt;=  #{TO_DATE}
			</if>
		 	<if test="@foren.Ognl@isNotEmpty(USER_ID)">
			    AND   A.UPDATE_DB_USER    =  #{USER_ID}
			</if>
		 	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			    AND   A.ITEM_CODE       = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			    AND   A.ITEM_NAME       = #{ITEM_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			    AND   A.DIV_CODE       = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			    AND   A.ITEM_ACCOUNT       = #{ITEM_ACCOUNT}
			</if>
		    
		    ORDER  BY A.DIV_CODE, A.ITEM_CODE, A.UPDATE_DB_TIME, A.OPR_FLAG
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END 
    </select>
	
	<select id="bpr120skrvServiceImpl.getChangeHistory" parameterType="Map" resultType="rMap">
		  BEGIN

		  SET NOCOUNT ON
		  
		---SELECT VAT_RATE, * FROM L_BCM100T WHERE CUSTOM_CODE = '103154'
		  DECLARE @COMP_CODE		NVARCHAR(08)
				 ,@ITEM_CODE		NVARCHAR(20)
				 ,@SYSDATE			DATETIME
				 ,@KEY_VALUE		NVARCHAR(20)
	
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @SYSDATE		= GETDATE()
			SET @KEY_VALUE		= #{KEY_VALUE}
			SET @ITEM_CODE		= #{ITEM_CODE}
	
		
			SELECT TOP 1 @SYSDATE		 = UPDATE_DB_TIME
			FROM L_BPR200T WITH (NOLOCK) 
			WHERE COMP_CODE = @COMP_CODE and KEY_VALUE = @KEY_VALUE
		
		 
		
		SELECT
				 B.ITEM_NAME				+ B.ITEM_LEVEL1			+ B.ITEM_LEVEL2			+ B.ITEM_LEVEL3			+ B.STOCK_UNIT			+ B.STOCK_CARE_YN			
				+ B.TAX_TYPE				+ CONVERT(VARCHAR,B.CONSIGNMENT_FEE)		+ B.AUTO_DISCOUNT		+ B.SALE_UNIT			+ B.ITEM_ACCOUNT		+ B.SUPPLY_TYPE			
				+ B.ORDER_UNIT				+ B.BIG_BOX_BARCODE		+ B.K_PRINTER	+ B.SALE_BASIS_P		+ B.BARCODE				+ CONVERT(VARCHAR,B.TRNS_RATE)		AS MODIFY_FACTOR		
		  FROM L_BPR200T A WITH (NOLOCK)
		  INNER JOIN 
			(
		   SELECT 
		   A.ITEM_CODE
		  ,A.KEY_VALUE
		  ,(CASE WHEN ISNULL(B.ITEM_NAME		, '') != ISNULL(A.ITEM_NAME			, '') THEN '품목명: '			 + ISNULL(CASE WHEN B.ITEM_NAME			='' THEN NULL ELSE B.ITEM_NAME			END,  '[]') + ' → ' + ISNULL(CASE WHEN A.ITEM_NAME			='' THEN NULL ELSE A.ITEM_NAME			END,  '[]') + CHAR(10)	ELSE '' END) AS ITEM_NAME		
		  ,(CASE WHEN ISNULL(B.ITEM_LEVEL1		, '') != ISNULL(A.ITEM_LEVEL1		, '') THEN '대분류: '	 + ISNULL(CASE WHEN B.ITEM_LEVEL1		='' THEN NULL ELSE B.ITEM_LEVEL1		END,  '[]')	+ ' → ' + ISNULL(CASE WHEN A.ITEM_LEVEL1		='' THEN NULL ELSE A.ITEM_LEVEL1		END,  '[]')	+ CHAR(10)	ELSE '' END) AS ITEM_LEVEL1		
		  ,(CASE WHEN ISNULL(B.ITEM_LEVEL2		, '') != ISNULL(A.ITEM_LEVEL2		, '') THEN '중분류: '			 + ISNULL(CASE WHEN B.ITEM_LEVEL2		='' THEN NULL ELSE B.ITEM_LEVEL2		END,  '[]')	+ ' → ' + ISNULL(CASE WHEN A.ITEM_LEVEL2		='' THEN NULL ELSE A.ITEM_LEVEL2		END,  '[]')	+ CHAR(10)	ELSE '' END) AS ITEM_LEVEL2		
		  ,(CASE WHEN ISNULL(B.ITEM_LEVEL3		, '') != ISNULL(A.ITEM_LEVEL3		, '') THEN '소분류: '			 + ISNULL(CASE WHEN B.ITEM_LEVEL3		='' THEN NULL ELSE B.ITEM_LEVEL3		END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.ITEM_LEVEL3		='' THEN NULL ELSE A.ITEM_LEVEL3		END , '[]')	+ CHAR(10)	ELSE '' END) AS ITEM_LEVEL3		
		  ,(CASE WHEN ISNULL(B.STOCK_UNIT		, '') != ISNULL(A.STOCK_UNIT		, '') THEN '재고단위: '				 + ISNULL(CASE WHEN B.STOCK_UNIT		='' THEN NULL ELSE B.STOCK_UNIT			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.STOCK_UNIT		='' THEN NULL ELSE A.STOCK_UNIT			END , '[]')	+ CHAR(10)	ELSE '' END) AS STOCK_UNIT		
		  ,(CASE WHEN ISNULL(B.STOCK_CARE_YN	, '') != ISNULL(A.STOCK_CARE_YN		, '') THEN '재고관리대상: '			 + ISNULL(CASE WHEN B.STOCK_CARE_YN		='' THEN NULL ELSE B.STOCK_CARE_YN		END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.STOCK_CARE_YN		='' THEN NULL ELSE A.STOCK_CARE_YN		END , '[]')	+ CHAR(10)	ELSE '' END) AS STOCK_CARE_YN	
		  ,(CASE WHEN ISNULL(B.TAX_TYPE			, '') != ISNULL(A.TAX_TYPE			, '') THEN '세구분: '			 + ISNULL(CASE WHEN B.TAX_TYPE			='' THEN NULL ELSE B.TAX_TYPE			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.TAX_TYPE			='' THEN NULL ELSE A.TAX_TYPE			END , '[]')	+ CHAR(10)	ELSE '' END) AS TAX_TYPE			
		  ,(CASE WHEN ISNULL(CONVERT(VARCHAR,B.CONSIGNMENT_FEE)	, '') != ISNULL(CONVERT(VARCHAR,A.CONSIGNMENT_FEE)	, '') THEN '위탁수수료: '		 + ISNULL(CASE WHEN CONVERT(VARCHAR,B.CONSIGNMENT_FEE)	='' THEN NULL ELSE CONVERT(VARCHAR,B.CONSIGNMENT_FEE)	END , '[]')	+ ' → ' + ISNULL(CASE WHEN CONVERT(VARCHAR,A.CONSIGNMENT_FEE)	='' THEN NULL ELSE CONVERT(VARCHAR,A.CONSIGNMENT_FEE)	END , '[]')	+ CHAR(10)	ELSE '' END) AS CONSIGNMENT_FEE	
		  ,(CASE WHEN ISNULL(B.AUTO_DISCOUNT	, '') != ISNULL(A.AUTO_DISCOUNT		, '') THEN '자동할인: '			 + ISNULL(CASE WHEN B.AUTO_DISCOUNT		='' THEN NULL ELSE B.AUTO_DISCOUNT		END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.AUTO_DISCOUNT		='' THEN NULL ELSE A.AUTO_DISCOUNT		END , '[]')	+ CHAR(10)	ELSE '' END) AS AUTO_DISCOUNT	
		  ,(CASE WHEN ISNULL(B.SALE_UNIT		, '') != ISNULL(A.SALE_UNIT			, '') THEN '판매단위: '				 + ISNULL(CASE WHEN B.SALE_UNIT			='' THEN NULL ELSE B.SALE_UNIT			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.SALE_UNIT			='' THEN NULL ELSE A.SALE_UNIT			END , '[]')	+ CHAR(10)	ELSE '' END) AS SALE_UNIT		
		  ,(CASE WHEN ISNULL(B.ITEM_ACCOUNT		, '') != ISNULL(A.ITEM_ACCOUNT		, '') THEN '품목계정: '				 + ISNULL(CASE WHEN B.ITEM_ACCOUNT		='' THEN NULL ELSE B.ITEM_ACCOUNT		END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.ITEM_ACCOUNT		='' THEN NULL ELSE A.ITEM_ACCOUNT		END , '[]')	+ CHAR(10)	ELSE '' END) AS ITEM_ACCOUNT		
		  ,(CASE WHEN ISNULL(B.SUPPLY_TYPE		, '') != ISNULL(A.SUPPLY_TYPE		, '') THEN '조달구분: '				 + ISNULL(CASE WHEN B.SUPPLY_TYPE		='' THEN NULL ELSE B.SUPPLY_TYPE		END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.SUPPLY_TYPE		='' THEN NULL ELSE A.SUPPLY_TYPE		END , '[]')	+ CHAR(10)	ELSE '' END) AS SUPPLY_TYPE		
		  ,(CASE WHEN ISNULL(B.ORDER_UNIT		, '') != ISNULL(A.ORDER_UNIT		, '') THEN '구매단위: '			 + ISNULL(CASE WHEN B.ORDER_UNIT		='' THEN NULL ELSE B.ORDER_UNIT			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.ORDER_UNIT		='' THEN NULL ELSE A.ORDER_UNIT			END , '[]')	+ CHAR(10)	ELSE '' END) AS ORDER_UNIT		
		  ,(CASE WHEN ISNULL(CONVERT(VARCHAR,B.TRNS_RATE)		, '') != ISNULL(CONVERT(VARCHAR,A.TRNS_RATE)			, '') THEN '구매입수: '		 + ISNULL(CASE WHEN CONVERT(VARCHAR,B.TRNS_RATE)			='' THEN NULL ELSE CONVERT(VARCHAR,B.TRNS_RATE)			END , '[]')	+ ' → ' + ISNULL(CASE WHEN CONVERT(VARCHAR,A.TRNS_RATE)			='' THEN NULL ELSE CONVERT(VARCHAR,A.TRNS_RATE)			END , '[]')	+ CHAR(10)	ELSE '' END) AS TRNS_RATE		
		  ,(CASE WHEN ISNULL(B.BIG_BOX_BARCODE	, '') != ISNULL(A.BIG_BOX_BARCODE	, '') THEN '물류바코드: '		 + ISNULL(CASE WHEN B.BIG_BOX_BARCODE	='' THEN NULL ELSE B.BIG_BOX_BARCODE	END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.BIG_BOX_BARCODE	='' THEN NULL ELSE A.BIG_BOX_BARCODE	END , '[]')	+ CHAR(10)	ELSE '' END) AS BIG_BOX_BARCODE	
		  ,(CASE WHEN ISNULL(B.K_PRINTER		, '') != ISNULL(A.K_PRINTER			, '') THEN '주방프린터: '			 + ISNULL(CASE WHEN B.K_PRINTER			='' THEN NULL ELSE B.K_PRINTER			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.K_PRINTER			='' THEN NULL ELSE A.K_PRINTER			END , '[]')	+ CHAR(10)	ELSE '' END) AS K_PRINTER		
		  ,(CASE WHEN ISNULL(CONVERT(VARCHAR,B.SALE_BASIS_P)	, '') != ISNULL(CONVERT(VARCHAR,A.SALE_BASIS_P)	, '') THEN '판매단가: '		 + ISNULL(CASE WHEN CONVERT(VARCHAR,B.SALE_BASIS_P)	='' THEN NULL ELSE CONVERT(VARCHAR,B.SALE_BASIS_P)	END , '[]')	+ ' → ' + ISNULL(CASE WHEN CONVERT(VARCHAR,A.SALE_BASIS_P)	='' THEN NULL ELSE CONVERT(VARCHAR,A.SALE_BASIS_P)	END , '[]')	+ CHAR(10)	ELSE '' END) AS SALE_BASIS_P		
		  ,(CASE WHEN ISNULL(B.BARCODE		, '') != ISNULL(A.BARCODE			, '') THEN '상품바코드: '			 + ISNULL(CASE WHEN B.BARCODE			='' THEN NULL ELSE B.BARCODE			END , '[]')	+ ' → ' + ISNULL(CASE WHEN A.BARCODE			='' THEN NULL ELSE A.BARCODE			END , '[]')	+ CHAR(10)	ELSE '' END) AS BARCODE
		  FROM L_BPR200T A WITH(NOLOCK)
		  INNER JOIN (SELECT TOP 1
		                 	 COMP_CODE				
							, DIV_CODE				
							, ITEM_CODE				
							, ITEM_NAME				
							, ITEM_LEVEL1			
							, ITEM_LEVEL2			
							, ITEM_LEVEL3			
							, STOCK_UNIT			
							, STOCK_CARE_YN			
							, TAX_TYPE				
							, CONSIGNMENT_FEE
							, SALE_BASIS_P		
							, AUTO_DISCOUNT			
							, SALE_UNIT				
							, ITEM_ACCOUNT				
							, SUPPLY_TYPE			
							, ORDER_UNIT			
							, TRNS_RATE				
							, BIG_BOX_BARCODE		
							, K_PRINTER			
							, BARCODE	
							, UPDATE_DB_USER		
							, UPDATE_DB_TIME		
							, INSERT_DB_USER		
							, INSERT_DB_TIME	
						 FROM L_BPR200T WITH(NOLOCK)
						 WHERE COMP_CODE		= @COMP_CODE
							AND ITEM_CODE		= @ITEM_CODE
							AND KEY_VALUE NOT IN (@KEY_VALUE)
							AND OPR_FLAG IN ('N', 'U')
						    AND UPDATE_DB_TIME &lt; @SYSDATE
						 ORDER BY UPDATE_DB_TIME DESC
						 ) B ON A.COMP_CODE = B.COMP_CODE AND A.ITEM_CODE = B.ITEM_CODE
		 WHERE A.COMP_CODE		= @COMP_CODE
			AND A.ITEM_CODE		= @ITEM_CODE
			AND A.KEY_VALUE           = @KEY_VALUE
			) B ON A.ITEM_CODE  = B.ITEM_CODE
			AND A.KEY_VALUE			= B.KEY_VALUE
		
			
		  SET NOCOUNT OFF
		
		END 
	</select>
	
</mapper>