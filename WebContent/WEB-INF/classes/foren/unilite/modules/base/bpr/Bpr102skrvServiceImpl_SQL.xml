<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr102skrvService">
	
	<select id="bpr102skrvService.selectDetailList" parameterType="Map" resultType="rMap">
		/* bpr100ukrvService.selectList */
		/* bpr100ukrv.Cbpr100ukrv[fnBpr100QStd] Query01 */
		BEGIN
		    DECLARE @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = #{S_USER_ID}
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		    
		    SELECT 
		           A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.SPEC
		         , A.STOCK_UNIT
		         , A.ITEM_LEVEL1
		         , C3.LEVEL_NAME                                   AS ITEM_LEVEL_NAME1
		         , A.ITEM_LEVEL2
		         , C4.LEVEL_NAME                                   AS ITEM_LEVEL_NAME2
		         , A.ITEM_LEVEL3
		         , C5.LEVEL_NAME                                   AS ITEM_LEVEL_NAME3
		         , A.SALE_UNIT
		         , A.TRNS_RATE
		         , A.TAX_TYPE
		         , A.SALE_BASIS_P
		         , A.BF_SALE_BASIS_P
		         , A.ITEM_NAME1
		         , A.ITEM_NAME2
		         , A.ITEM_GROUP
		         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                ELSE C1.ITEM_NAME
		           END                                             AS ITEM_GROUP_NAME
		         , A.STOCK_CARE_YN
		         , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)AS START_DATE
		         , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE) AS STOP_DATE
		         , A.USE_YN
		         , A.BOOK_P
		         , CASE WHEN ISNULL(A.AUTO_DISCOUNT, '') = '' THEN 'N' ELSE A.AUTO_DISCOUNT END  AS AUTO_DISCOUNT
		         , A.SPEC_CONTROL
		         , A.SPEC_CONTROL_CODE
		         , ISNULL(A.EXCESS_RATE, 0)                        AS EXCESS_RATE
		         , A.BOOK_LINK
		         , A.ISBN_CODE
		         , A.PUBLISHER_CODE
		         , A.PUBLISHER
		         , A.AUTHOR1
		         , A.AUTHOR2
		         , A.TRANSRATOR
		         , A.PUB_DATE		         
		         , B.FIRST_PURCHASE_DATE
		         , B.LAST_PURCHASE_DATE
		         , B.FIRST_SALES_DATE
		         , B.LAST_SALES_DATE
		         , B.LAST_RETURN_DATE
		         , B.LAST_DELIVERY_DATE
		         , B.LAST_DELIVERY_CUSTOM
		         , A.REMARK1
		         , A.REMARK2
		         , A.REMARK3
		         , A.DOM_FORIGN
		         , B.DIV_CODE
		         , B.ITEM_ACCOUNT
		         , B.SUPPLY_TYPE
		         , B.ORDER_UNIT
		         , B.BUY_RATE
		         , B.WH_CODE
		         , B.LOCATION
		         , B.ORDER_PLAN
		         , B.MATRL_PRESENT_DAY
		         , B.PURCHASE_BASE_P
		         , B.CUSTOM_CODE
		         , B.BIN_NUM
		         , C7.DOC_NAME  				AS BIN_NAME       
		         , B.BIN_FLOOR
		         , B.MEMBER_DISCOUNT_YN		         
		         , CASE WHEN A.STOCK_CARE_YN = 'Y' THEN ISNULL(B1.STOCK_Q, 0) ELSE 0 	END		AS STOCK_Q		         
				 , ISNULL(B2.SAFETY_Q, 0)       AS PROPER_STOCK_Q	--적정재고
				 , ISNULL(B3.ISSUE_PLAN_Q, 0)   AS ISSUE_PLAN_Q	
				 , ISNULL(B4.RTN_REMAIN_Q, 0)   AS RTN_REMAIN_Q
		         , C6.CUSTOM_NAME
		        -- , (SELECT MAX(APLY_START_DATE) FROM BPR400T WHERE ITEM_CODE = A.ITEM_CODE AND COMP_CODE = A.COMP_CODE) AS SALE_DATE
		         , A.SALE_COMMON_P
 		         , CASE WHEN ISNULL(C8.ITEM_CODE,'') = '' THEN 'N' ELSE 'Y' END TXT_CLASS --교재여부		         
		    FROM              BPR100T A  WITH (NOLOCK)
		    	   LEFT  JOIN BPR200T B WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
		    	   									  AND B.DIV_CODE   = #{DIV_CODE}
		    	   									  AND B.ITEM_CODE  = A.ITEM_CODE
				   LEFT JOIN (
				               SELECT 
				               X.COMP_CODE, X.ITEM_CODE, SUM(X.STOCK_Q) AS STOCK_Q
				               FROM
				               (
	                           SELECT COMP_CODE, ITEM_CODE,STOCK_Q
							   FROM BIV150T WITH(NOLOCK)
		                       WHERE  COMP_CODE =  #{S_COMP_CODE}
		                         AND  DIV_CODE  =  #{DIV_CODE}
		                           
		                       UNION ALL
		                     
			 				   SELECT COMP_CODE, ITEM_CODE, STOCK_Q
							   FROM UNILITE.VGetDailyStock
		                       WHERE  COMP_CODE =  #{S_COMP_CODE}
		                         AND  DIV_CODE  =  #{DIV_CODE}
				               ) X GROUP BY COMP_CODE, ITEM_CODE         
                       
                       		)  B1 
		                         ON A.ITEM_CODE = B1.ITEM_CODE 
		                        AND A.COMP_CODE = B1.COMP_CODE
                   LEFT JOIN (SELECT 
	                           COMP_CODE, ITEM_CODE 
							   ,SUM(SAFETY_Q) AS SAFETY_Q
							   FROM MRP600T WITH(NOLOCK)
							   WHERE COMP_CODE = #{S_COMP_CODE}
							      AND DIV_CODE     = #{DIV_CODE}
                       GROUP BY 	COMP_CODE, ITEM_CODE)  B2 ON A.ITEM_CODE = B2.ITEM_CODE AND A.COMP_CODE = B2.COMP_CODE
                   LEFT JOIN (SELECT 
	                           A.COMP_CODE, B.ITEM_CODE 
							   ,SUM(B.ORDER_Q - B.OUTSTOCK_Q) AS ISSUE_PLAN_Q
							   FROM        SOF100T  A WITH(NOLOCK)
							   INNER JOIN SOF110T  B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.DIV_CODE = B.DIV_CODE AND A.ORDER_NUM = B.ORDER_NUM
							   WHERE A.COMP_CODE = #{S_COMP_CODE}
							      AND A.DIV_CODE     = #{DIV_CODE}
								  AND B.ORDER_Q - B.OUTSTOCK_Q > 0
								  AND B.ORDER_STATUS = 'N'
                       GROUP BY A.COMP_CODE, B.ITEM_CODE)  B3 ON A.ITEM_CODE = B3.ITEM_CODE AND A.COMP_CODE = B3.COMP_CODE
                       
                   LEFT JOIN (SELECT A.COMP_CODE, A.ITEM_CODE
						           ,SUM(A.RETURN_Q - A.INOUT_Q) AS RTN_REMAIN_Q
						 	 FROM MRT200T A WITH(NOLOCK)
						 	WHERE A.COMP_CODE = #{S_COMP_CODE}
							  AND A.DIV_CODE  = #{DIV_CODE}
							  AND A.CLOSE_YN  = 'N'
						   	  AND ISNULL(A.RETURN_Q, 0) - ISNULL(A.INOUT_Q, 0) > 0
						 	 GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B4 ON A.ITEM_CODE = B4.ITEM_CODE
                       										 		  		  AND A.COMP_CODE = B4.COMP_CODE    		    	   									  
				   LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                              AND C1.ITEM_CODE  = A.ITEM_GROUP
		           LEFT  JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
		                                              AND C2.ITEM_CODE  = A.TOTAL_ITEM				   		                                              		    	   									  
		           LEFT  JOIN BPR000T C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
		                                              AND C3.LEVEL1    != '*'
		                                              AND C3.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C3.LEVEL2     = '*'
		                                              AND C3.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
		                                              AND C4.LEVEL1    != '*'
		                                              AND C4.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C4.LEVEL2    != '*'
		                                              AND C4.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C4.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C5 WITH (NOLOCK) ON C5.COMP_CODE  = A.COMP_CODE
		                                              AND C5.LEVEL1    != '*'
		                                              AND C5.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C5.LEVEL2    != '*'
		                                              AND C5.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C5.LEVEL3    != '*'
		                                              AND C5.LEVEL3     = A.ITEM_LEVEL3
				   LEFT  JOIN BCM100T C6 WITH (NOLOCK) ON C6.COMP_CODE   = A.COMP_CODE
		                                              AND C6.CUSTOM_CODE = B.CUSTOM_CODE	
		     	   LEFT  JOIN BPR210T C7 WITH (NOLOCK) ON C7.COMP_CODE   = A.COMP_CODE
		                                              AND C7.DIV_CODE    = #{DIV_CODE}
		                                              AND C7.BIN_NUM	 = B.BIN_NUM  
                   LEFT  JOIN (SELECT ITEM_CODE
                               FROM TXT100T WITH (NOLOCK)
                               GROUP BY ITEM_CODE) C8 ON C8.ITEM_CODE = A.ITEM_CODE		                                                  
				   --LEFT  JOIN TXT100T C8 WITH (NOLOCK) ON A.ITEM_CODE    = C8.ITEM_CODE		                                                                                                                               		                                              
		    WHERE  A.COMP_CODE     =       #{S_COMP_CODE}
		    	AND B.ITEM_ACCOUNT = '00'
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">  
		    	AND A.ITEM_CODE  LIKE       #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    	AND B.DIV_CODE 	   =     #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">  
		    	AND  ((REPLACE(A.ITEM_NAME, ' ', '')  LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '0') 
		    	 OR   (REPLACE(A.ITEM_NAME1, ' ', '') LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '1') 
		    	 OR   (REPLACE(A.ITEM_NAME2, ' ', '') LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '2')
				)
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		    	AND	A.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
		    	AND	A.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		    	AND	A.ITEM_LEVEL3 = #{ITEM_LEVEL3}  
		    </if>

		    <if test="TXTFIND_TYPE == &quot;01&quot;">
		    	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		    		AND	A.SPEC = #{TXT_SEARCH}
		    	</if>
		    </if>
		    
		    <if test="TXTFIND_TYPE == &quot;02&quot;">
		    	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		    		AND	A.SPEC_NUM = #{TXT_SEARCH}
		    	</if>
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		    	AND	A.USE_YN = #{USE_YN}
		    </if>
		    
		     <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		    	AND	A.ITEM_GROUP = #{ITEM_GROUP}
		    </if>

		     <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
				AND EXISTS (SELECT X.CUSTOM_CODE
				              FROM BPR400T X WITH(NOLOCK) 
							 WHERE X.COMP_CODE  = B.COMP_CODE
								AND X.DIV_CODE	= B.DIV_CODE
								AND X.ITEM_CODE	= B.ITEM_CODE
								AND X.TYPE = '1'
								AND X.CUSTOM_CODE IN (SELECT CUSTOM_CODE FROM BCM100T WITH(NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND AGENT_TYPE = #{AGENT_TYPE})
							  )
		    </if>
		    		    
		     ORDER  BY 
		     <if test="SORT1 == &quot;ITEM_CODE&quot;">
		    		A.ITEM_CODE 
					 <if test="SORT1_SEQ == &quot;DESC&quot;">
					 	DESC
					 </if>
					 <if test="SORT2 == &quot;ITEM_NAME&quot;">
					 	, A.ITEM_NAME
					 	<if test="SORT2_SEQ == &quot;DESC&quot;">
						 	DESC
						 </if>
					 </if>
		     </if>
		     <if test="SORT1 == &quot;ITEM_NAME&quot;">
		     		 A.ITEM_NAME 
					 <if test="SORT1_SEQ == &quot;DESC&quot;">
					 	DESC
					 </if>
					 <if test="SORT2 == &quot;ITEM_CODE&quot;">
					 	, A.ITEM_CODE
					 	<if test="SORT2_SEQ == &quot;DESC&quot;">
						 	DESC
						 </if>
					 </if>
		     </if>
		     <if test="SORT1 != &quot;ITEM_CODE&quot;">
		     	<if test="SORT1 != &quot;ITEM_NAME&quot;">
		     	A.ITEM_CODE
		     	</if>
		     </if>
     	END
	</select>
	
	<select id="bpr102skrvService.selectSubDetailList" parameterType="Map" resultType="rMap">		
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
		          , @UserId         NVARCHAR(100) /* 사용자ID    */
		          , @LangType       NVARCHAR(2)  /* 언어구분    */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}   
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
			
		SELECT A.TYPE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , A.CUSTOM_CODE
		     , MAX(CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
		             WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
		                                 ELSE B.CUSTOM_NAME
		         END)                        AS CUSTOM_NAME
		     , A.MONEY_UNIT
		     , A.ORDER_UNIT		     
		     , A.ITEM_P
		     , (CASE WHEN ISNULL(MAX(A.APLY_START_DATE), '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.APLY_START_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.APLY_START_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.APLY_START_DATE, 7, 2))
		         END)                AS APLY_START_DATE
		     , (CASE WHEN ISNULL(MAX(A.APLY_END_DATE), '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.APLY_END_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.APLY_END_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.APLY_END_DATE, 7, 2))
		         END)                AS APLY_END_DATE      
		     , A.ORDER_RATE
		     , A.PURCHASE_RATE
		     , A.USE_YN
		     ,(A.ITEM_P * A.ORDER_RATE) AS PRICE
		     , A.PURCHASE_TYPE
		     , A.SALES_TYPE
		     , MAX(A.UPDATE_DB_USER) AS UPDATE_DB_USER
		     , MAX(A.UPDATE_DB_TIME) AS UPDATE_DB_TIME
		     , A.COMP_CODE
		     , A.BASIS_P
		  FROM BPR400T A WITH (NOLOCK)
		     , BCM100T B WITH (NOLOCK)
		 WHERE A.COMP_CODE        = B.COMP_CODE
		   AND A.CUSTOM_CODE      = B.CUSTOM_CODE
		   AND A.TYPE             = N'1'
		   AND A.COMP_CODE        = #{S_COMP_CODE}	
		   AND A.DIV_CODE         = #{DIV_CODE}
		   AND A.ITEM_CODE        = #{ITEM_CODE}
		 GROUP BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE, A.MONEY_UNIT
		        , A.ORDER_UNIT, A.ORDER_RATE, A.PURCHASE_RATE, A.USE_YN, A.COMP_CODE , B.CUSTOM_NAME, B.CUSTOM_NAME1, B.CUSTOM_NAME2, A.APLY_START_DATE
		 		, A.APLY_END_DATE, A.ITEM_P,     A.PURCHASE_TYPE,   A.SALES_TYPE, A.BASIS_P
		 ORDER BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE,  A.MONEY_UNIT
		        , A.ORDER_UNIT, A.ORDER_RATE
		        
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END	
	</select>
	
	<select id="bpr102skrvService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	<select id="bpr102skrvService.checkChildCode" parameterType="Map" resultType="rMap">
		SELECT PROD_ITEM_CODE
                     , CHILD_ITEM_CODE
                  FROM BPR500T WITH (NOLOCK) 
                 WHERE COMP_CODE       = #{COMP_CODE}
                   AND CHILD_ITEM_CODE = #{ITEM_CODE}
	</select>
	<select id="bpr102skrvService.checkItemCode" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR200T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{S_COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
		      AND  DIV_CODE=#{DIV_CODE}			
		    </if>
	</select>
	<select id="bpr102skrvService.checkItemDuplicate" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR200T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{S_COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}	
	</select>
	<select id="bpr102skrvService.checkItemPrice" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR400T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}			
	</select>
	<select id="bpr102skrvService.chkSaleBasisPDuplicate" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR400T
		    WHERE  COMP_CODE    = 	  #{S_COMP_CODE} 
			  AND	TYPE	    = 	  #{TYPE}
		      AND	DIV_CODE	= 	  #{DIV_CODE}
		      AND	ITEM_CODE   = 	  #{ITEM_CODE}
		      AND	CUSTOM_CODE = 	  #{CUSTOM_CODE}
		      AND	MONEY_UNIT  = 	  #{MONEY_UNIT}		
		      AND	ORDER_UNIT  = 	  #{ORDER_UNIT}
		      AND	APLY_START_DATE = #{APLY_START_DATE}			
	</select>
	
	<delete id="bpr102skrvService.deleteSaleBasisPDuplicate" parameterType="Map" >
		  
	</delete>
	
	<select id="bpr102skrvService.getDivList" parameterType="Map" resultType="rMap">
		    SELECT DIV_CODE  FROM   BOR120T WITH (NOLOCK)	WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="bpr102skrvService.setBookInfo" parameterType="Map" resultType="rMap">
		    SELECT TOP 1 TXT_YYYY --학년
		    ,CASE TXT_SEQ WHEN 1 THEN '1학기'
		         WHEN 2 THEN '2학기' 
		         WHEN 3 THEN '여름학기'
		         WHEN 4 THEN '겨울학기' END AS TXT_SEQ  --학기
		    ,MAJOR_NAME --학과
		    ,SUBJECT_NAME --과목
		    ,PROFESSOR_NAME --담당교수
		  FROM TXT100T WITH (NOLOCK)
		  WHERE ITEM_CODE = #{ITEM_CODE}
		  ORDER BY TXT_YYYY, TXT_SEQ		    
	</select>	
	
	<select id="bpr102skrvService.selectStockList" parameterType="Map" resultType="rMap">
		SELECT   
		      A.COMP_CODE
		     ,A.WH_CODE
		     ,C.TREE_NAME                      			   AS WH_NAME
		 	 ,ISNULL(D.CUSTOM_CODE, '') 	   			   AS CUSTOM_CODE
		     ,ISNULL(D.CUSTOM_NAME, '') 	   		       AS CUSTOM_NAME
		     ,ISNULL(A.PURCHASE_P, 0)     	   			   AS PURCHASE_P
		     ,SUM(CASE WHEN E.STOCK_CARE_YN = 'Y' THEN ISNULL(A.STOCK_Q, 0) ELSE 0 	END	)			   AS STOCK_Q
		 FROM (
               SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, B.PURCHASE_CUSTOM_CODE, B.PURCHASE_P, A.STOCK_Q
			   FROM 	   BIV150T A WITH(NOLOCK)
			   LEFT JOIN   BIV350T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE 
			                                     AND A.DIV_CODE    = B.DIV_CODE 
			                                     AND A.LOT_NO      = B.LOT_NO
			                                     AND A.WH_CODE     = B.WH_CODE
			                                     AND A.ITEM_CODE   = B.ITEM_CODE
               WHERE A.COMP_CODE =  #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
			   		AND  A.DIV_CODE  = #{DIV_CODE}
			   </if>
			   
               UNION ALL
             
			   SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.PURCHASE_CUSTOM_CODE, A.PURCHASE_P, A.STOCK_Q
			   FROM UNILITE.VGetDailyStock A
               WHERE A.COMP_CODE =  #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
			   		AND  A.DIV_CODE  = #{DIV_CODE}
			   </if>
		      ) A
			    INNER JOIN  BSA220T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
									               AND A.DIV_CODE    = C.TYPE_LEVEL
									               AND A.WH_CODE     = C.TREE_CODE
			    LEFT  JOIN  BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
			                                       AND D.CUSTOM_CODE = A.PURCHASE_CUSTOM_CODE
				INNER JOIN  BPR100T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
												   AND E.ITEM_CODE   = A.ITEM_CODE			                                       
		   
		 WHERE  A.COMP_CODE = #{S_COMP_CODE}
		   AND  A.ITEM_CODE = #{ITEM_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
		   AND  A.DIV_CODE  = #{DIV_CODE}
		   </if>
		   GROUP BY A.COMP_CODE, A.WH_CODE, C.TREE_NAME, D.CUSTOM_CODE, D.CUSTOM_NAME, A.PURCHASE_P
		   ORDER BY A.WH_CODE		
	</select>
	<select id="bpr102skrvService.getAutoItemCode" parameterType="Map" resultType="rMap">
		
	</select>	
	<update id="bpr102skrvService.bpr100tInsertDetail" parameterType="Map">
		
	</update>
	<update id="bpr102skrvService.bpr200tInsertDetail" parameterType="Map">		
	
	</update>
	
	<update id="bpr102skrvService.bpr400tInsertDetail" parameterType="Map">		
       
	</update>
	<update id="bpr102skrvService.bpr200tUpdateDetail" parameterType="Map">		
		
	</update>
	<update id="bpr102skrvService.bpr100tUpdateDetail" parameterType="Map">
		
		
	</update>
	<update id="bpr102skrvService.bpr400tUpdateDetail" parameterType="Map">
		
	</update>
	<update id="bpr102skrvService.updateSaleBasisP1" parameterType="Map">	
		
	</update>
	<update id="bpr102skrvService.updateSaleBasisP2" parameterType="Map">	
		
	</update>
	<update id="bpr102skrvService.updateSaleBasisP3" parameterType="Map">	     		
		
	</update>
	<delete id="bpr102skrvService.bpr200tDeleteDetail" parameterType="Map">
		
	</delete>
	
	<delete id="bpr102skrvService.bpr100tDeleteDetail" parameterType="Map">
		
	</delete>
	
	<insert id="bpr102skrvService.insertLogDetail" parameterType="Map">		
   	
	</insert>
	
	<update id="bpr102skrvService.goInterFace" parameterType="Map" statementType="CALLABLE">
	
	</update>
	
	<update id="bpr102skrvService.insertSubDetail" parameterType="Map">		
		
	</update>
	
	<update id="bpr102skrvService.updateSubDetail" parameterType="Map">		
		
	</update>
	
	<delete id="bpr102skrvService.deleteSubDetail" parameterType="Map">
		
	</delete>
	
	<select id="bpr102skrvService.searchMenu" parameterType="Map" resultType="rMap">        
		SELECT A.ITEM_NAME 
		 FROM 		BPR100T A  WITH (NOLOCK)
	     LEFT  JOIN BPR200T B WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
								  			AND B.ITEM_CODE  = A.ITEM_CODE 
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.ITEM_NAME LIKE '%' + #{searchStr} +'%'
		  AND B.ITEM_ACCOUNT = '00'
		  AND B.DIV_CODE = #{DIV_CODE}
    </select>	
</mapper>