<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr260ukrvServiceImpl">
	<select id="bpr260ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* bpr260ukrvServiceImpl.selectDetailList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ITEM_CODE
		         , B.ITEM_NAME
		         , A.LABEL_NAME
		         , A.HOSPITAL_ITEM
		         , A.USE_TARGET
		         , A.REPORT_NO
		         , C.KEEP_TEMPER
		         , B.ITEM_WIDTH
		         , C.PACK_QTY
		         , C.PACK_TYPE
		         , A.LABEL_TYPE
		         , A.TYPE_NAME
		         , A.LOT_ID
/*						   
		         --20200511 추가: 하위 반제품의 코드의 값이 앞자리가 항상 0이므로 강제로 코드 검색하여 반제품코드 및 오토라벨러 출력명을 검색
		         , (SELECT ITEM_CODE
		              FROM BPR100T WITH(NOLOCK)
		             WHERE ITEM_CODE = '0'+ RIGHT(A.ITEM_CODE, LEN(A.ITEM_CODE)-1))   AS ACCOUNT20_CODE
		         , (SELECT CASE WHEN ISNULL(ITEM_NAME2, '') = '' THEN ITEM_NAME
		                        ELSE ITEM_NAME2
		                   END
		             FROM BPR100T WITH(NOLOCK)
		            WHERE ITEM_CODE = '0'+ RIGHT(A.ITEM_CODE, LEN(A.ITEM_CODE)-1))    AS ACCOUNT20_NAME
*/					
				--20210128 변경 : 하위 반제품의 코드를 BOM테이블에서 읽어오도록 수정
				 , D.CHILD_ITEM_CODE AS ACCOUNT20_CODE
				 , CASE WHEN ISNULL(D.ITEM_NAME2, '') = '' THEN D.ITEM_NAME
		                        ELSE D.ITEM_NAME2
		                   END AS ACCOUNT20_NAME
		      FROM      BPR250T A WITH(NOLOCK)
		      LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		                                      AND A.ITEM_CODE = B.ITEM_CODE
		      LEFT JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
		                                      AND A.DIV_CODE  = C.DIV_CODE
		                                      AND A.ITEM_CODE = C.ITEM_CODE

			  LEFT  JOIN (
							--반제품만 적용
							SELECT S1.COMP_CODE, S1.DIV_CODE, S1.PROD_ITEM_CODE, S1.CHILD_ITEM_CODE, S3.ITEM_NAME, S3.ITEM_NAME2
							FROM BPR500T S1 WITH (NOLOCK)
								 INNER JOIN BPR200T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S2.DIV_CODE=S2.DIV_CODE AND S1.CHILD_ITEM_CODE=S2.ITEM_CODE
								 INNER JOIN BPR100T S3 WITH (NOLOCK) ON S1.COMP_CODE=S3.COMP_CODE AND S1.CHILD_ITEM_CODE=S3.ITEM_CODE
							WHERE S1.COMP_CODE=#{S_COMP_CODE}
							AND S1.DIV_CODE=#{DIV_CODE}
							AND S2.ITEM_ACCOUNT = '20'			  
			  
						) D ON A.COMP_CODE = D.COMP_CODE
						   AND A.DIV_CODE  = D.DIV_CODE
						   AND A.ITEM_CODE = D.PROD_ITEM_CODE											  
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE = #{ITEM_CODE}
		    </if>
		     ORDER BY  A.ITEM_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<insert id="bpr260ukrvServiceImpl.insertDetail" parameterType="Map">	/* 추가 */
		INSERT INTO BPR250T (
		       COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , LABEL_NAME
		     , HOSPITAL_ITEM
		     , USE_TARGET
		     , REPORT_NO
		     , LABEL_TYPE
		     , TYPE_NAME
		     , LOT_ID
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{LABEL_NAME}
		     , #{HOSPITAL_ITEM}
		     , #{USE_TARGET}
		     , #{REPORT_NO}
		     , #{LABEL_TYPE}
		     , #{TYPE_NAME}
		     , #{LOT_ID}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="bpr260ukrvServiceImpl.updateDetail" parameterType="Map">	/* 수정 */
		UPDATE BPR250T
		   SET LABEL_NAME     = #{LABEL_NAME}
		     , HOSPITAL_ITEM  = #{HOSPITAL_ITEM}
		     , USE_TARGET     = #{USE_TARGET}
		     , REPORT_NO      = #{REPORT_NO}
		     , LABEL_TYPE     = #{LABEL_TYPE}
		     , TYPE_NAME      = #{TYPE_NAME}
		     , LOT_ID         = #{LOT_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}	
	</update>

	<update id="bpr260ukrvServiceImpl.updateDetail2" parameterType="Map">
		UPDATE BPR100T
		   SET UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , ITEM_WIDTH     = #{ITEM_WIDTH}
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</update>

	<update id="bpr260ukrvServiceImpl.updateDetail3" parameterType="Map">
		UPDATE BPR200T
		   SET UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		<if test="@foren.Ognl@isNotEmpty(KEEP_TEMPER)">
		     , KEEP_TEMPER    = #{KEEP_TEMPER}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PACK_QTY)">
		     , PACK_QTY       = #{PACK_QTY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PACK_TYPE)">
		     , PACK_TYPE      = #{PACK_TYPE}
		</if>
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</update>

	<delete id="bpr260ukrvServiceImpl.deleteDetail" parameterType="Map">	/* 삭제 */
		DELETE FROM BPR250T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}     --20200511 추가: DIV_CODE조건 추가
		   AND ITEM_CODE = #{ITEM_CODE}
	</delete>

	<select id="bpr260ukrvServiceImpl.checkDataInfo" parameterType="Map" resultType="rMap">
		/* bpr260ukrvServiceImpl.checkDataInfo */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    SELECT B.KEEP_TEMPER
		         , A.ITEM_WIDTH
		         , B.PACK_QTY
		         , B.PACK_TYPE
		         , ISNULL(C.ITEM_CODE, '') AS ITEM_CODE
		      FROM      BPR100T A WITH(NOLOCK)
		      LEFT JOIN BPR200T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		                                      AND A.ITEM_CODE = B.ITEM_CODE
		      LEFT JOIN BPR250T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
		                                      AND A.ITEM_CODE = C.ITEM_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.ITEM_CODE = #{ITEM_CODE}

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>