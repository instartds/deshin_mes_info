<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa301ukrvServiceImpl">
	<select id="bsa301ukrvServiceImpl.getDataList" parameterType="Map" resultType="rMap">
	/* bsa301ukrvServiceImpl.getDataList */
	/* bsa301ukrv.Cbsa301ukrv[fnBsa300QStd] Query02*/
        SET NOCOUNT ON
        SELECT ROW_NUMBER() OVER (ORDER BY A.USER_ID)   AS SEQ 
             , A.USER_ID
             , A.USER_NAME
             , #{csINIT_SYSTEM_PWD} AS PASSWORD
             , A.PERSON_NUMB
             , A.PERSON_NUMB						    AS PERSON_NUMB_UPDATE
             , ISNULL(C1.NAME, '')                      AS NAME
             , ISNULL(A.ERP_USER, 'N')                  AS ERP_USER
             , A.DEPT_CODE
             , C2.TREE_NAME                             AS DEPT_NAME						
             , A.DIV_CODE
             , A.USER_LEVEL
             , A.MAIN_COMP_YN
             , A.POS_ID
             , uniLITE.fnCipherDecrypt(A.POS_PASS,'')	AS POS_PASS
             , A.POS_LEVEL
             , A.REF_ITEM
             , A.USE_YN
             , A.PWD_UPDATE_DATE
             , ISNULL(A.FAIL_CNT, 0)                    AS FAIL_CNT
             , ISNULL(A.LOCK_YN, 'N')                   AS LOCK_YN
             /* , A.UPDATE_MAN
             , A.UPDATE_DATE */
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , A.COMP_CODE
             , A.AUTHORITY_LEVEL
             , 'N'										AS IS_PW_CHANGE
             , A.SSO_USER
             , A.CUSTOM_CODE
             , C3.CUSTOM_NAME
             
             , A.PHONE
             
             , A.CMS_ID
        FROM              BSA300T   A  WITH (NOLOCK)
               LEFT  JOIN HUM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                    AND C1.PERSON_NUMB  = A.PERSON_NUMB
               LEFT  JOIN BSA210T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                    AND C2.TREE_CODE    = A.DEPT_CODE
               LEFT JOIN BCM100T   C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
                                                    AND C3.CUSTOM_CODE  = A.CUSTOM_CODE                                                                                      
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}
        
        <if test="@foren.Ognl@isNotEmpty(USER_ID)">
            AND    A.USER_ID     LIKE #{USER_ID} +'%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
            AND    A.USER_NAME   LIKE '%'+ #{USER_NAME} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
            AND    A.USE_YN         = #{USE_YN}
        </if>
        SET NOCOUNT OFF

	</select>
	<select id="bsa301ukrvServiceImpl.checkEncryptYN" parameterType="Map" resultType="rMap">
	/* bsa301ukrvServiceImpl.checkEncryptYN */
	/* bsa301ukrv.Cbsa301ukrv[fnBsa300Save] Query01   */
    SELECT TOP 1 1 as CNT
            , ISNULL((
                SELECT  TOP 1 UPPER(REF_CODE1) AS CASE_SENS_YN 
                FROM    BSA100T WITH (NOLOCK)
                WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'
            ),'N') AS CASE_SENS_YN
    FROM BSA100T WITH (NOLOCK) 
    WHERE COMP_CODE='MASTER' 
    AND MAIN_CODE='B239' AND SUB_CODE='10' AND REF_CODE1='Y'
	</select>
	<select id="bsa301ukrvServiceImpl.checkUniqueID" parameterType="Map" resultType="rMap">
		/* bsa301ukrvServiceImpl.checkUniqueID */
		/* bsa301ukrv.Cbsa301ukrv[fnBsa300Save] Query05  */                        
        SELECT TOP 1 A.COMP_CODE, B.COMP_NAME, A.USER_ID
        FROM            BSA300T A WITH (NOLOCK)        
        INNER JOIN BOR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
        WHERE A.COMP_CODE &gt; '' AND A.USER_ID = #{USER_ID} 
          AND A.MAIN_COMP_YN = 'Y'

	</select>
	<insert id="bsa301ukrvServiceImpl.insertMulti" parameterType="Map">  
	/* bsa301ukrvServiceImpl.insertMulti */                    
		INSERT INTO BSA300T
            ( COMP_CODE
              , INSERT_DB_USER
              , INSERT_DB_TIME
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , USER_ID               
              , PWD_UPDATE_DATE
        <if test="@foren.Ognl@isNotEmpty(AUTHORITY_LEVEL)">
              , AUTHORITY_LEVEL
        </if>
              , PERSON_NUMB
        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
              , USER_NAME
        </if>
        <if test="@foren.Ognl@isNotEmpty(PASSWORD)">
              ,PASSWORD
        </if>
        <if test="@foren.Ognl@isNotEmpty(ERP_USER)">
              , ERP_USER
        </if>
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
              , DIV_CODE
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_ID)">
              , POS_ID
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_PASS)">
              , POS_PASS
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_LEVEL)">
              , POS_LEVEL
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
              , DEPT_CODE
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
              , USE_YN
        </if>
        <if test="@foren.Ognl@isNotEmpty(REF_ITEM)">
              , REF_ITEM
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_LEVEL)">
              , USER_LEVEL
        </if>
        <if test="@foren.Ognl@isNotEmpty(MAIN_COMP_YN)">
              , MAIN_COMP_YN
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
              , TEMPC_01
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
              , TEMPC_02
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
              , TEMPC_03
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
              , TEMPN_01
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
              , TEMPN_02
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
              , TEMPN_03
        </if>
        <if test="@foren.Ognl@isNotEmpty(FAIL_CNT)">
        		,FAIL_CNT
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOCK_YN)">
              , LOCK_YN
        </if>
        <if test="@foren.Ognl@isNotEmpty(SSO_USER)">
              , SSO_USER
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              , CUSTOM_CODE
        </if>
        
        <if test="@foren.Ognl@isNotEmpty(PHONE)">
              , PHONE
        </if>
        
        <if test="@foren.Ognl@isNotEmpty(CMS_ID)">
              , CMS_ID
        </if>
        )
VALUES      (#{S_COMP_CODE}
             , #{S_USER_ID}
             , getdate()
             , #{S_USER_ID}
             , getdate()
             , #{USER_ID}
             , getdate()
         <if test="@foren.Ognl@isNotEmpty(AUTHORITY_LEVEL)">
              , #{AUTHORITY_LEVEL}
        </if>
        
             , #{SEQ_PERSON_NUMB}

        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
             , #{USER_NAME}
        </if>
        <if test="bSecurityFlag == &quot;True&quot;"> 
               , PWDENCRYPT(#{PASSWORD})
		</if>
		<if test="bSecurityFlag == &quot;False&quot;"> 
	           , #{PASSWORD}
		</if>
        <if test="@foren.Ognl@isNotEmpty(ERP_USER)">
             , #{ERP_USER}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
             , #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_ID)">
             , #{POS_ID}
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_PASS)">
             , uniLITE.fnCipherEncrypt(#{POS_PASS},'')
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_LEVEL)">
             , #{POS_LEVEL}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
             , #{DEPT_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             , #{USE_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(REF_ITEM)">
             , #{REF_ITEM}
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_LEVEL)">
             , #{USER_LEVEL}
        </if>
        <if test="@foren.Ognl@isNotEmpty(MAIN_COMP_YN)">
             , #{MAIN_COMP_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
             , #{TEMPC_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
             , #{TEMPC_02}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
             , #{TEMPC_03}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
             , #{TEMPN_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
             , #{TEMPN_02}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
             , #{TEMPN_03}
        </if>
        <if test="@foren.Ognl@isNotEmpty(FAIL_CNT)">
        		,#{FAIL_CNT}
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOCK_YN)">
             , #{LOCK_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SSO_USER)">
              , #{SSO_USER}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              , #{CUSTOM_CODE}
        </if>
        
        <if test="@foren.Ognl@isNotEmpty(PHONE)">
              , #{PHONE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CMS_ID)">
              , #{CMS_ID}
        </if>
		)
	</insert>
	
	<insert id="bsa301ukrvServiceImpl.insertSubcode" parameterType="Map">                      
	/* bsa301ukrvServiceImpl.insertSubcode */ 	
		IF  EXISTS(
		  SELECT 1 
		    FROM BSA100G
		   WHERE  COMP_CODE = #{S_COMP_CODE}  
		     AND  MAIN_CODE = 'A009'
		     AND  SUB_CODE = #{PERSON_NUMB}
		)
		BEGIN
            UPDATE BSA100G 
            SET           
                   CODE_NAME        = #{USER_NAME}
                 , REF_CODE1        = #{USER_ID}
                 , UPDATE_DB_USER   = #{S_USER_ID}
                 , UPDATE_DB_TIME   = GETDATE()
             WHERE COMP_CODE    = #{S_COMP_CODE}
                AND MAIN_CODE   = 'A009'
                AND SUB_CODE    = #{PERSON_NUMB}	         
		END
		ELSE
		BEGIN
            INSERT INTO BSA100G
                ( COMP_CODE               
                  , MAIN_CODE
                  , SUB_CODE
                  , CODE_NAME
                   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                  , USE_YN
                   </if>
                  , SORT_SEQ
                  , REF_CODE1 
                  , REF_CODE2
                  , SYSTEM_CODE_YN       
                  , INSERT_DB_USER
                  , INSERT_DB_TIME
                  , UPDATE_DB_USER
                  , UPDATE_DB_TIME)
        VALUES (#{S_COMP_CODE}               
                 , 'A009'
                 , #{SEQ_PERSON_NUMB}
                 , #{USER_NAME}
                 <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                 , 'Y'
                 </if>
                 , 1
                 , #{USER_ID}
                 , 1
                 , '2'
                 , #{S_USER_ID}
                 , getdate()
                 , #{S_USER_ID}
                 , getdate()
                 )
		END
		
	</insert>	
	
	<insert id="bsa301ukrvServiceImpl.insertPersonNumb" parameterType="Map">                      
	/* bsa301ukrvServiceImpl.insertPersonNumb */ 	
			IF  EXISTS(
              SELECT 1 
                FROM HUM100T
               WHERE  COMP_CODE = #{S_COMP_CODE}  
                 AND  PERSON_NUMB = #{PERSON_NUMB}
            )
            BEGIN
                UPDATE HUM100T
                SET
                      UPDATE_DB_USER = #{S_USER_ID}  
                     ,UPDATE_DB_TIME = GETDATE()             
                     , SECT_CODE     = #{DIV_CODE}
                     , DIV_CODE      = #{DIV_CODE}
                     , NAME          = #{NAME}
                     , DEPT_CODE     = #{DEPT_CODE}
                     , DEPT_NAME     = #{DEPT_NAME}
                WHERE COMP_CODE      = #{S_COMP_CODE}
                  AND PERSON_NUMB    = #{PERSON_NUMB}
            END
            ELSE
            BEGIN
                INSERT INTO HUM100T
                   (COMP_CODE
                   ,PERSON_NUMB 
                   ,REPRE_NUM
                   ,MAKE_SALE
                   ,SECT_CODE
                    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                   ,DIV_CODE
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(NAME)">
                   ,NAME
                    </if>
                   ,NATION_CODE
                    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
                   ,DEPT_CODE
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
                   ,DEPT_NAME
                    </if>
                   ,JOIN_CODE
                   ,SEX_CODE
                   ,JOIN_DATE
                   ,PAY_GUBUN
                   ,INSERT_DB_USER    
                   ,INSERT_DB_TIME     
                   ,UPDATE_DB_USER   
                   ,UPDATE_DB_TIME
                   )
             VALUES
                  (#{S_COMP_CODE}                   
                  ,#{SEQ_PERSON_NUMB}                   
                  ,uniLITE.fnCipherEncrypt('1111111111111','')    
                  , '1'
                  ,#{DIV_CODE} 
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                    
                  ,#{DIV_CODE} 
                </if>
                <if test="@foren.Ognl@isNotEmpty(NAME)">                        
                  ,#{NAME}  
                </if>                   
                  ,'KR'     
                <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">               
                  ,#{DEPT_CODE}    
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">                   
                  ,#{DEPT_NAME} 
                </if>                   
                  ,'9'                          
                  ,'M'                      
                  ,CONVERT(VARCHAR, GETDATE(), 112)  
                   ,'1'   
                   ,#{S_USER_ID}  
                   ,GETDATE()          
                   ,#{S_USER_ID}  
                   ,GETDATE()           
                   )
            END
			
	</insert>	
	
	<insert id="bsa301ukrvServiceImpl.insertBSA301T" parameterType="Map">
		 INSERT INTO BSA301T (COMP_CODE, USER_ID, PASSWORD, INSERT_DB_USER, UPDATE_DB_USER)
         VALUES(#{COMP_CODE}, #{USER_ID}, uniLite.fnCipherEncrypt(#{PASSWORD},''), #{S_USER_ID}, #{S_USER_ID})
	</insert>
	<update id="bsa301ukrvServiceImpl.updateMulti" parameterType="Map">
		/* bsa301ukrvServiceImpl.updateMulti */ 
			UPDATE BSA300T 
			SET  
			COMP_CODE = #{S_COMP_CODE}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = getDate()
			<if test="@foren.Ognl@isExists(_parameter, 'AUTHORITY_LEVEL')">
              	, AUTHORITY_LEVEL = #{AUTHORITY_LEVEL}
        	</if>
			<if test="@foren.Ognl@isExists(_parameter, 'PERSON_NUMB')">
				 , PERSON_NUMB = #{PERSON_NUMB}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USER_NAME')">
				 , USER_NAME = #{USER_NAME}
			</if>
			<if test="IS_PW_CHANGE == &quot;Y&quot;">
				<if test="bSecurityFlag == &quot;True&quot;"> 
	               ,  PASSWORD = PWDENCRYPT(#{PASSWORD})
				</if>
				<if test="bSecurityFlag == &quot;False&quot;"> 
		            ,  PASSWORD = #{PASSWORD}
				</if>
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ERP_USER')">
				 , ERP_USER = #{ERP_USER}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'DIV_CODE')">
				 , DIV_CODE = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_ID')">
				 , POS_ID = #{POS_ID}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_PASS')">
				 , POS_PASS = uniLITE.fnCipherEncrypt(#{POS_PASS},'')
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_LEVEL')">
				 , POS_LEVEL = #{POS_LEVEL}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'DEPT_CODE')">
				 , DEPT_CODE = #{DEPT_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USE_YN')">
				 , USE_YN = #{USE_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'REF_ITEM')">
				 , REF_ITEM = #{REF_ITEM}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USER_LEVEL')">
				 , USER_LEVEL = #{USER_LEVEL}
			</if>
            <if test="@foren.Ognl@isExists(_parameter, 'MAIN_COMP_YN')">
                 , MAIN_COMP_YN = #{MAIN_COMP_YN}
            </if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_01')">
				 , TEMPC_01 = #{TEMPC_01}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_02')">
				 , TEMPC_02 = #{TEMPC_02}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_03')">
				 , TEMPC_03 = #{TEMPC_03}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_01')">
				 , TEMPN_01 = #{TEMPN_01}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_02')">
				 , TEMPN_02 = #{TEMPN_02}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_03')">
				 , TEMPN_03 = #{TEMPN_03}
			</if>
			<if test="LOCK_YN == &quot;N&quot;"> 
					 , FAIL_CNT = 0
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'LOCK_YN')">
				 , LOCK_YN = #{LOCK_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SSO_USER')">
              	 , SSO_USER = #{SSO_USER}
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'CUSTOM_CODE')">
                 , CUSTOM_CODE = #{CUSTOM_CODE}
            </if>
            
            <if test="@foren.Ognl@isExists(_parameter, 'PHONE')">
                 , PHONE = #{PHONE}
            </if>
            
            <if test="@foren.Ognl@isExists(_parameter, 'CMS_ID')">
                 , CMS_ID = #{CMS_ID}
            </if>
		 WHERE 	COMP_CODE = #{COMP_CODE} 
			 AND USER_ID = #{USER_ID} 
			 
			 
		UPDATE BSA100G 
		SET           
		       CODE_NAME		= #{USER_NAME} 
			 , SUB_CODE			= #{PERSON_NUMB}
		     , UPDATE_DB_USER   = #{S_USER_ID}
		     , UPDATE_DB_TIME   = GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		 	AND MAIN_CODE	= 'A009'
		    AND SUB_CODE	= #{PERSON_NUMB}		
		    
		   
		UPDATE HUM100T
		SET
			  UPDATE_DB_USER = #{S_USER_ID}  
	      	 ,UPDATE_DB_TIME = GETDATE()   	      	 
			 , SECT_CODE 	 = #{DIV_CODE}
			 , DIV_CODE 	 = #{DIV_CODE}
			 , NAME 		 = #{NAME}
			 , DEPT_CODE 	 = #{DEPT_CODE}
			 , DEPT_NAME 	 = #{DEPT_NAME}
		WHERE COMP_CODE   	 = #{S_COMP_CODE}
		  AND PERSON_NUMB 	 = #{PERSON_NUMB}
			  		    	 
	</update>
	<update id="bsa301ukrvServiceImpl.updatePassword" parameterType="Map">
		UPDATE BSA300T 
		SET
		<if test="bSecurityFlag == &quot;True&quot;"> 
               PASSWORD = PWDENCRYPT(#{PASSWORD})
		</if>
		<if test="bSecurityFlag == &quot;False&quot;"> 
               PASSWORD = #{PASSWORD}
		</if>
             , PWD_UPDATE_DATE = GETDATE()
        WHERE COMP_CODE       = #{COMP_CODE}
           AND USER_ID         = #{USER_ID}
                  
	</update>
	<update id="bsa301ukrvServiceImpl.updateBSA301T" parameterType="Map">
		UPDATE BSA301T 
		SET
			PASSWORD = uniLITE.fnCipherEncrypt(#{PASSWORD},'')
		WHERE COMP_CODE       = #{COMP_CODE}
           AND USER_ID         = #{USER_ID}
	</update>
	<delete id="bsa301ukrvServiceImpl.deleteMulti" parameterType="Map">
		/* bsa301ukrvServiceImpl.deleteMulti */
		/*bsa301ukrv.Cbsa301ukrv[fnBsa300Save] Query03*/		
		DELETE FROM BSA300T 
		 WHERE 	COMP_CODE = #{COMP_CODE} 
			 AND USER_ID = #{USER_ID} 
	</delete>
	<delete id="bsa301ukrvServiceImpl.deleteSecurityFlagMulti" parameterType="Map">
		/* bsa301ukrvServiceImpl.deleteSecurityFlagMulti */
		/* bsa301ukrv.Cbsa301ukrv[fnBsa300Save] Query04 */
		DELETE FROM BSA301T 
		 WHERE 	COMP_CODE = #{COMP_CODE} 
			 AND USER_ID = #{USER_ID} 
	</delete>
	<insert id="bsa301ukrvServiceImpl.insertPasswordLog" parameterType="Map">
		/* bsa301ukrvServiceImpl.insertPasswordLog */
		/* UBsa01Krv.CBsa400UKr[fnPwdLog] Query03    */
	
	   DECLARE @COMP_CODE NVARCHAR(10), @USER_ID NVARCHAR(100), @CASE_SENS_YN NVARCHAR(10), @ENCRYPT_YN NVARCHAR(10)
	   SET @COMP_CODE  = ''
	   SET @USER_ID    = #{USER_ID}
	   IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME='LOG200T' AND XTYPE='U')
	   BEGIN
	    
	       SELECT  @CASE_SENS_YN = ISNULL((SELECT  TOP 1  UPPER(REF_CODE1) 
	                                       FROM    BSA100T WITH (NOLOCK)
	                                       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'),'N') ,
	               @ENCRYPT_YN   = ISNULL((SELECT  TOP 1 REF_CODE1 
	                                       FROM    BSA100T WITH (NOLOCK) 
	                                       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B239' AND SUB_CODE='10'), 'N')
	    
	
	       SELECT  TOP 1 @CASE_SENS_YN = UPPER(REF_CODE1) 
	       FROM    BSA100T WITH (NOLOCK)
	       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'
	    
	       IF @CASE_SENS_YN IS NULL OR @CASE_SENS_YN = ''
	           SET @CASE_SENS_YN = 'N'
	    
	       IF @ENCRYPT_YN = 'Y'
	       BEGIN
	           IF EXISTS (SELECT TOP 1 1 FROM LOG200T WITH (NOLOCK) WHERE COMP_CODE &gt; '' AND USER_ID=@USER_ID)
	               INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
	               SELECT  TOP 1 COMP_CODE, USER_ID, MAX(CHANGE_CNT)+1, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{PASSWORD} ELSE UPPER(#{PASSWORD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
	               FROM    LOG200T WITH (NOLOCK)
	               WHERE   COMP_CODE &gt; '' AND USER_ID=@USER_ID
	               GROUP BY COMP_CODE, USER_ID
	           ELSE
	               INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
	               SELECT  TOP 1 COMP_CODE, @USER_ID USER_ID, 1 CHANGE_CNT, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{PASSWORD} ELSE UPPER(#{PASSWORD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
	               FROM    BSA300T WITH (NOLOCK)
	               WHERE   COMP_CODE &gt; '' AND USER_ID=@USER_ID
	       END
	   	END
	</insert>
	<select id="bsa301ukrvServiceImpl.selectUserList" parameterType="Map" resultType="rMap">
		/* bsa301ukrvServiceImpl.selectUserList */
	    SELECT USER_ID
	      FROM BSA300T WITH (NOLOCK)                   
	     WHERE USE_YN = 'Y'
	       AND COMP_CODE = #{S_COMP_CODE}
	</select>	
	
	<select id="bsa301ukrvServiceImpl.checkSubcode" parameterType="Map" resultType="rMap">
		SELECT	COUNT(SUB_CODE)	AS CNT
		FROM   BSA100G  WITH (NOLOCK)
		WHERE  COMP_CODE = #{S_COMP_CODE}
		  AND  MAIN_CODE = 'A009'
		  AND  SUB_CODE	 = #{SEQ_PERSON_NUMB}
	</select>	
	
	<select id="bsa301ukrvServiceImpl.getPersonNumb" parameterType="Map" resultType="rMap">
		SELECT  #{S_COMP_CODE} + RIGHT('0000' + CONVERT(nvarchar(4), ISNULL(RIGHT(MAX(H.PERSON_NUMB),4),0) + 1), 4) AS PERSON_NUMB
		FROM HUM100T H WITH (NOLOCK)
		WHERE H.COMP_CODE = #{S_COMP_CODE}
		AND   LEN(H.PERSON_NUMB) = LEN(H.COMP_CODE) + 4	
	</select>	
</mapper>