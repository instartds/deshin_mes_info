<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmr101ukrvServiceImpl">

	<select id="pmr101ukrvServiceImpl.checkWorkEnd" parameterType="Map" resultType="rMap">
	SELECT ISNULL(WORK_END_YN,'N') AS WORK_END_YN
	  FROM PMP100T WITH(NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND WKORD_NUM = #{WKORD_NUM}
	   AND PROG_WORK_CODE = #{PROG_WORK_CODE}
	</select>
	<select id="pmr101ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
	--pmr101ukrv.Cpmr101ukrv[fnPmr100QStd] Query01
	 BEGIN
	     DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 9.) 법인코드
	              , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
	              , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 1.) 작업장코드
	              , @FROM_PRODT            NVARCHAR(08)        -- (선택 2.) From 착수예정일
	              , @TO_PRODT              NVARCHAR(08)        -- (선택 3.) To 착수예정일
	              , @ITEM_CODE             NVARCHAR(20)        -- (선택 4.) 품목코드
	              , @CONTROL_STATUS        NVARCHAR(01)        -- (선택 5.) 작업실적 상태
	              , @CONTROL_STATUS1       NVARCHAR(01)        -- (선택10.) 작업실적 상태
	              , @CONTROL_STATUS2       NVARCHAR(01)        -- (선택11.) 작업실적 상태
	              , @WKORD_NUM             NVARCHAR(20)        -- (선택 8.) 작업지시 번호
	              , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID
	              , @PROD_SPEC             NVARCHAR(100)        -- (선택 12.) 작지품목스펙(업체품번)

	     SET @COMP_CODE         = #{S_COMP_CODE}
	     SET @DIV_CODE          = #{DIV_CODE}
	     SET @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
	     SET @FROM_PRODT        = #{PRODT_START_DATE_FR}
	     SET @TO_PRODT          = #{PRODT_START_DATE_TO}
	     SET @ITEM_CODE         = #{ITEM_CODE}
	     SET @CONTROL_STATUS    = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS1   = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS2   = #{CONTROL_STATUS}
	     SET @WKORD_NUM         = #{WKORD_NUM}
	     SET @USER_ID           = #{S_USER_ID}
	     SET @PROD_SPEC         = #{PROD_SPEC}

	     -- pmr101ukrv.Cpmr101ukrv[fnPmr100QStd] Query1
	     SELECT
	            A.*
	     FROM   (
	            SELECT ISNULL(A.wkord_status, '2') AS CONTROL_STATUS
	                 , A.WKORD_NUM
	                 , A.PROG_WORK_CODE
	                 , A.WORK_SHOP_CODE
	                 , A.ITEM_CODE
	                 , uniLITE.fnItemNameComp(A.comp_code, @USER_ID, A.item_code) AS ITEM_NAME
	                 , C1.SPEC
	                 , C1.STOCK_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS WKORD_Q
	                 , uniLITE.fnFormat(A.comp_code, A.work_q,  'P_FSET_QS') AS WORK_Q
	                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS PRODT_Q
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_start_date) AS PRODT_START_DATE
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_end_date)   AS PRODT_END_DATE
	                 , A.REMARK
	                 , A.WK_PLAN_NUM
	                 , A.SO_NUM AS ORDER_NUM
	                 , A.LINE_END_YN
	                 , A.WORK_END_YN
	                 , A.LINE_SEQ
	                 , A.PROG_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.prog_unit_q, 'P_FSET_QS')  AS PROG_UNIT_Q
	                 , C2.OUT_METH
	                 , '' AS AB
	                 , A.PROJECT_NO
	                 , A.PJT_CODE
	                 , A.LOT_NO
	                 , C2.RESULT_YN                               -- 생산실적시 영업 자동입고 방법
	                 , C2.INSPEC_YN                               -- 생산실적시 영업 출하검사 방법
	                 , C2.WH_CODE                                 -- 기준창고
	                 , ISNULL(C2.BASIS_P, 0) AS BASIS_P           -- 재고금액
	                 , A.DIV_CODE						          -- 사업장
	                 , F.INSPEC_TYPE
	                 , G.REF_CODE3 AS STD_ITEM_ACCOUNT
					 , C3.DVRY_DATE										--납품요청일
					 , C3.INIT_DVRY_DATE								--납기변경일
					 , C3.SER_NO AS ORDER_SEQ
					 , C1.ITEM_LEVEL1
					 , C1.EXPIRATION_DAY
					 , C2.ITEM_ACCOUNT
					 ,R1.CUSTOM_NAME AS SOF_CUSTOM_NAME
					 ,R2.ITEM_NAME AS SOF_ITEM_NAME
					 ,A.EQUIP_CODE			--설비
			  		 ,R3.EQU_NAME AS EQUIP_NAME
			  		 ,ISNULL(B1.TEMPC_01, 'A')  AS PROG_WORK_GUBUN
	            FROM              PMP100TV1 A  WITH (NOLOCK)
	                   LEFT  JOIN PPL100T B WITH(NOLOCK)   ON  B.COMP_CODE   = A.COMP_CODE
															AND B.DIV_CODE    = A.DIV_CODE
															AND B.WK_PLAN_NUM   = A.WK_PLAN_NUM
						LEFT JOIN PBS200T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
						                                 AND B1.DIV_CODE  = A.DIV_CODE
														 AND B1.WORK_SHOP_CODE = A.WORK_SHOP_CODE
														 AND B1.PROG_WORK_CODE = A.PROG_WORK_CODE
						LEFT  JOIN SOF110T C3 WITH(NOLOCK)   ON  C3.COMP_CODE   = A.COMP_CODE
															--AND C3.OUT_DIV_CODE    = A.DIV_CODE
															AND C3.ORDER_NUM   = A.SO_NUM
															AND C3.SER_NO	   = A.SO_SEQ
						LEFT  JOIN SOF100T C WITH(NOLOCK)   ON  C.COMP_CODE   = C3.COMP_CODE
															AND C.DIV_CODE    = C3.DIV_CODE
															AND C.ORDER_NUM   = C3.ORDER_NUM
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.comp_code = A.comp_code
	                                                        AND C1.item_code = A.item_code
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.comp_code = A.comp_code
	                                                        AND C2.div_code  = A.div_code
	                                                        AND C2.item_code = A.item_code
	                   LEFT  JOIN BSA230T F WITH (NOLOCK)   ON F.COMP_CODE = A.COMP_CODE
															AND F.TREE_CODE = A.WORK_SHOP_CODE
						 LEFT JOIN BSA100T G WITH (NOLOCK)    ON  A.COMP_CODE  = G.COMP_CODE
														   AND  G.MAIN_CODE = 'B020'
														   AND  G.SUB_CODE  = C2.ITEM_ACCOUNT
					LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = C.COMP_CODE
													 AND R1.CUSTOM_CODE = C.CUSTOM_CODE
					LEFT JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = C3.COMP_CODE
													 AND R2.DIV_CODE = C3.DIV_CODE
													 AND R2.ITEM_CODE = C3.ITEM_CODE
					LEFT JOIN EQU200T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
												 AND R3.DIV_CODE = A.DIV_CODE
												 AND R3.EQU_CODE = A.EQUIP_CODE
												 AND R3.EQU_CODE_TYPE = '2'

	            WHERE  A.comp_code         = @COMP_CODE
	            AND    A.div_code          = @DIV_CODE
	            AND    A.work_shop_code    = @WORK_SHOP_CODE
	            AND    A.line_end_yn       = 'Y'
	            AND    A.work_end_yn       = CASE WHEN @CONTROL_STATUS != '8' THEN A.work_end_yn      ELSE 'Y'             END
	            AND    A.prodt_start_date &gt;= CASE WHEN @FROM_PRODT      = ''  THEN A.prodt_start_date ELSE @FROM_PRODT     END
	            AND    A.prodt_end_date   &lt;= CASE WHEN @TO_PRODT        = ''  THEN A.prodt_end_date   ELSE @TO_PRODT       END
	            AND    A.item_code      LIKE CASE WHEN @ITEM_CODE       = ''  THEN A.item_code        ELSE @ITEM_CODE      END + '%'
	            AND    A.wkord_num      LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.wkord_num        ELSE @WKORD_NUM      END + '%'

		        <if test="@foren.Ognl@isNotEmpty(WK_PLAN_NUM)">
				AND A.WK_PLAN_NUM = #{WK_PLAN_NUM}
	       		</if>
<!-- 20200311 추가  -->
		<if test="@foren.Ognl@isNotEmpty(SO_INFO)">
				AND ( C.ORDER_NUM    LIKE #{SO_INFO} + '%'
				   OR R1.CUSTOM_NAME LIKE #{SO_INFO} + '%')
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROD_SPEC)">
		        AND    C1.SPEC    LIKE '%' + @PROD_SPEC + '%'
		</if>
	            ) A
	     WHERE  (

	            	<if test="CONTROL_STATUS == &quot;2&quot;">
	     				A.control_status in ('2','3')
	     			</if>
	     			<if test="CONTROL_STATUS != &quot;2&quot;">
	     				 (@CONTROL_STATUS = '') OR (@CONTROL_STATUS  != ''  AND A.control_status  = @CONTROL_STATUS )
			                                    OR (@CONTROL_STATUS1 != ''  AND A.control_status  = @CONTROL_STATUS1)
			                                    OR (@CONTROL_STATUS2 != ''  AND A.control_status  = @CONTROL_STATUS2)
	     			</if>


	            )
	     ORDER BY A.WKORD_NUM
	 END
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		<!-- 작업지시별등록 조회 -->
	--pmr101ukrv.Cpmr101ukrv[fnPmr100QSt3] Query01
    BEGIN
        DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 5.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 2.) 작업지시 번호
                 , @WKORD_Q               NUMERIC(18, 6)      -- (선택 3.) 작업지시 수량
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 4.) 공정코드
                 , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}
        SET @WKORD_Q        = #{WKORD_Q}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}

        -- pmr101ukrv.Cpmr101ukrv[fnPmr100QSt3] Query1
        SELECT
               uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date)      AS PRODT_DATE
             , uniLITE.fnFormat(A.comp_code, C.work_q,     'P_FSET_QS') AS PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.good_prodt_q,'P_FSET_QS') AS GOOD_PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.bad_prodt_q, 'P_FSET_QS') AS BAD_PRODT_Q
             , B.DAY_NIGHT
             , B.MAN_HOUR
             , C.MAN_CNT
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q,      'P_FSET_QS') AS WKORD_Q
             , uniLITE.fnFormat(A.comp_code, A.prodt_q,     'P_FSET_QS') AS PRODT_SUM
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q - ISNULL(A.prodt_q, 0), 'P_FSET_QS') AS JAN_Q
             , uniLITE.fnFormat(A.comp_code, ISNULL(A.in_stock_q, 0), 'P_FSET_QS')         AS IN_STOCK_Q
             , B.PRODT_NUM
             , @PROG_WORK_CODE      AS PROG_WORK_CODE
             , ISNULL(A.lot_no, '') AS LOT_NO
             , B.REMARK
             , B.PROJECT_NO
             , B.PJT_CODE
             , ISNULL(A.fr_serial_no, '') AS FR_SERIAL_NO
             , ISNULL(A.to_serial_no, '') AS TO_SERIAL_NO
             , '' AS UPDATE_DB_USER
             , '' AS UPDATE_DB_TIME
             , A.COMP_CODE
             , A.DIV_CODE
             --20180605 추가
			 , B.CONTROL_STATUS
			 , A.WKORD_NUM
			 , CAST(B.FR_TIME AS smalldatetime)                   AS FR_TIME
             , CAST(B.TO_TIME AS smalldatetime)                   AS TO_TIME
			 , '1' AS LUNCH_CHK
        FROM              PMR200T  A  WITH (NOLOCK)
               INNER JOIN PMR110T  B  WITH (NOLOCK) ON B.comp_code = A.comp_code
                                                   AND B.div_code  = A.div_code
                                                   AND B.prodt_num = A.prodt_num
               INNER JOIN PMR100T  C  WITH (NOLOCK) ON C.comp_code = A.comp_code
                                                   AND C.div_code  = A.div_code
                                                   AND C.prodt_num = A.prodt_num
        WHERE  A.comp_code = @COMP_CODE
        AND    A.div_code  = @DIV_CODE
        AND    A.wkord_num = @WKORD_NUM

        ORDER BY B.prodt_date
    END
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회1 -->
	--pmr101ukrv.Cpmr101ukrv[fnPmr100QSt1] Query01  공정별등록 조회1
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

                 , @CALC_TYPE             NVARCHAR(01)        -- 생산잔량 계산타입

        SET @SHEET_TYPE     = ISNULL('SHEET1', 'SHEET1')
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

		SELECT TOP 1
			@CALC_TYPE = ISNULL(SUB_CODE,'A')
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'P517'
		   AND REF_CODE1 = 'Y'

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.work_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 , '1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                  ,(
					CASE WHEN ISNULL(@CALC_TYPE,'A') = 'A' THEN
								uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
						 WHEN ISNULL(@CALC_TYPE,'A') = 'B' THEN
								uniLITE.fnFormat(A.comp_code, A.wkord_q - A.work_q, 'P_FSET_QS')
						ELSE uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
					END
				 ) AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , A.MOLD_CODE
                 , C3.EQU_NAME AS MOLD_NAME
                 , A.CAVIT_BASE_Q
                 , A.EQUIP_CODE
				 , C2.EQU_NAME AS EQUIP_NAME
				 , A.PRODT_PRSN
				 , A.EXPIRATION_DATE
				 , '1' AS LUNCH_CHK
				-- ,CAST('1/01/2008 08:30:00' AS smalldatetime)   AS FR_TIME --기본값 세팅시 2008/1/1로 해야 셀 클릭시 변경된 날짜로 인식을 안 함
				-- ,CAST('1/01/2008 17:30:00' AS smalldatetime)   AS TO_TIME
				,'' AS FR_TIME
				,'' AS TO_TIME
                 ,0 AS BOX_TRNS_RATE
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
                   LEFT JOIN EQU200T  C2 WITH (NOLOCK) ON C2.COMP_CODE		 = A.COMP_CODE
													  AND C2.DIV_CODE		 = A.DIV_CODE
													  AND C2.EQU_CODE		 = A.EQUIP_CODE
													  AND C2.EQU_CODE_TYPE	 = '2'
				   LEFT JOIN EQU200T  C3 WITH (NOLOCK) ON C3.COMP_CODE		 = A.COMP_CODE
													  AND C3.DIV_CODE		 = A.DIV_CODE
													  AND C3.EQU_CODE		 = A.MOLD_CODE
													  AND C3.EQU_CODE_TYPE	 = '1'
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            AND    A.work_shop_code = @WORK_SHOP_CODE
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.work_q, 0),      'P_FSET_QS') AS WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회2 -->
	--pmr101ukrv.Cpmr101ukrv[fnPmr100QSt1] Query01   공정별등록 조회2
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

        SET @SHEET_TYPE     = ISNULL('SHEET2', 'SHEET1')
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.work_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 ,'1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , A.MOLD_CODE
                 , C3.EQU_NAME AS MOLD_NAME
                 , C3.CAVIT_BASE_Q
                 , A.EQUIP_CODE
				 , C2.EQU_NAME AS EQUIP_NAME
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , 1 AS PRINT_CNT
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
                   LEFT JOIN EQU200T  C2 WITH (NOLOCK) ON C2.COMP_CODE		 = A.COMP_CODE
													  AND C2.DIV_CODE		 = A.DIV_CODE
													  AND C2.EQU_CODE		 = A.EQUIP_CODE
													  AND C2.EQU_CODE_TYPE	 = '2'
				   LEFT JOIN EQU200T  C3 WITH (NOLOCK) ON C3.COMP_CODE		 = A.COMP_CODE
													  AND C3.DIV_CODE		 = A.DIV_CODE
													  AND C3.EQU_CODE		 = A.MOLD_CODE
													  AND C3.EQU_CODE_TYPE	 = '1'
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            AND    A.work_shop_code = @WORK_SHOP_CODE
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.work_q, 0),      'P_FSET_QS') AS WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , CAST('2008-01-01 ' + A.FR_TIME AS smalldatetime)                   AS FR_TIME
                 , CAST('2008-01-01 ' + A.TO_TIME AS smalldatetime)                   AS TO_TIME
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                -- , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                , A.LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , ISNULL(BOX_TRNS_RATE,1) AS BOX_TRNS_RATE
                 , BOX_Q
                 , SAVING_Q
                 , CAPACITY_Q
                 , HARDNESS_Q
                 , MAN_CNT
                 , CASE WHEN HAZARD_CHECK = 'Y' THEN 1 ELSE 0 END AS HAZARD_CHECK
                 , CASE WHEN MICROBE_CHECK = 'Y' THEN 1 ELSE 0 END AS MICROBE_CHECK
                 , A.PIECE
                 , A.EXPIRATION_DATE
                 , A.YIELD
                 , A.LOSS_Q
                 , A.BOX_TRNS_RATE
                 , A.ETC_Q
                 , A.PRODT_PRSN
				 , A.EQUIP_CODE
				 , C.EQU_NAME AS EQUIP_NAME
				 , 1 AS PRINT_CNT
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
				    LEFT JOIN EQU200T C WITH (NOLOCK)  ON C.COMP_CODE	= A.COMP_CODE
													  AND C.DIV_CODE	= A.DIV_CODE
													  AND C.EQU_CODE	= A.EQUIP_CODE
					LEFT JOIN EQU200T  C2 WITH (NOLOCK) ON C2.COMP_CODE		 = A.COMP_CODE
													  AND C2.DIV_CODE		 = A.DIV_CODE
													  AND C2.EQU_CODE		 = A.EQUIP_CODE
													  AND C2.EQU_CODE_TYPE	 = '2'
				   LEFT JOIN EQU200T  C3 WITH (NOLOCK) ON C3.COMP_CODE		 = A.COMP_CODE
													  AND C3.DIV_CODE		 = A.DIV_CODE
													  AND C3.EQU_CODE		 = A.MOLD_CODE
													  AND C3.EQU_CODE_TYPE	 = '1'
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList6" parameterType="Map" resultType="rMap">		<!-- 특이사항등록 조회 -->
	 --pmr101ukrv.Cpmr101ukrv[fnPmr100QSt4] Query01
     SELECT
           A.DIV_CODE
         , A.WORK_SHOP_CODE
         , A.WKORD_NUM
         , A.PROG_WORK_CODE
         , B.PROG_WORK_NAME
         , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
         , A.CTL_CD1
         , A.TROUBLE_TIME
         , A.TROUBLE
         , A.TROUBLE_CS
         , A.ANSWER
         , A.SEQ
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , A.COMP_CODE
         , CASE WHEN ISNULL(FR_TIME,'') = '' THEN '' ELSE CAST('2008-01-01 ' + FR_TIME AS smalldatetime)  END  AS FR_TIME --기본값 세팅시 2008/1/1로 해야 셀 클릭시 변경된 날짜로 인식을 안 함
         , CASE WHEN ISNULL(TO_TIME,'') = '' THEN '' ELSE CAST('2008-01-01 ' + TO_TIME AS smalldatetime) END  AS TO_TIME
     FROM             PMR400T A WITH (NOLOCK)
           INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                             AND B.DIV_CODE       = A.DIV_CODE
                                             AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                             AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
           INNER JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                             AND C.MAIN_CODE      = 'P002'
                                             AND C.sub_code       = A.CTL_CD1
     WHERE A.COMP_CODE      = #{S_COMP_CODE}
     AND   A.DIV_CODE       = #{DIV_CODE}
     AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
     AND   A.WKORD_NUM      = #{WKORD_NUM}
     ORDER BY A.PRODT_DATE, A.PROG_WORK_CODE, A.CTL_CD1
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList7" parameterType="Map" resultType="rMap">		<!-- 제조이력등록 조회(제조이력등록) -->
		/* pmr101ukrvServiceImpl.selectDetailList7 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , C.WORK_SHOP_CODE
			 , CASE WHEN ISNULL(D.PRODT_NUM, '') = '' THEN A.PRODT_NUM
					ELSE D.PRODT_NUM
			   END								AS PRODT_NUM
			 , CASE WHEN ISNULL(D.PRODT_DATE, '') = '' THEN A.PRODT_DATE
					ELSE D.PRODT_DATE
			   END								AS PRODT_DATE
			 , A.WKORD_NUM
			 , CASE WHEN ISNULL(D.SEQ, '') = '' THEN C.SEQ
					ELSE D.SEQ
			   END								AS SEQ
			 , C.ITEM_CODE
			 , B.ITEM_NAME
			 , B.SPEC
			 , B.STOCK_UNIT
			 , C.UNIT_Q
			 , C.ALLOCK_Q
			 , D.MODIFY_RATE
			 , D.REMARK
		  --COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, REF_TYPE, PATH_CODE
		  FROM       PMR100T A WITH(NOLOCK)
		  INNER JOIN PMP200T C WITH(NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
										   AND C.DIV_CODE   = A.DIV_CODE
										   AND C.WKORD_NUM  = A.WKORD_NUM
		  INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE  = C.COMP_CODE
										   AND B.ITEM_CODE  = C.ITEM_CODE
		  --COMP_CODE, DIV_CODE, WKORD_NUM, WORK_SHOP_CODE, PRODT_DATE, SEQ
		  LEFT  JOIN PMR500T D WITH(NOLOCK) ON D.COMP_CODE  = A.COMP_CODE
										   AND D.DIV_CODE   = A.DIV_CODE
										   AND D.PRODT_NUM  = A.PRODT_NUM
										   AND D.ITEM_CODE  = C.ITEM_CODE
										   AND D.SEQ        = C.SEQ
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.PRODT_NUM = #{PRODT_NUM}
	</select>

	<select id="pmr101ukrvServiceImpl.selectDetailList8" parameterType="Map" resultType="rMap">		<!-- 제조이력등록 조회(실적현황) -->
		/* pmr101ukrvServiceImpl.selectDetailList8 */
		BEGIN
			DECLARE	@COMP_CODE			NVARCHAR(08)		-- (필수 4.) 법인코드
				  , @DIV_CODE			NVARCHAR(08)		-- (필수 1.) 사업장코드
				  , @WORK_SHOP_CODE		NVARCHAR(08)		-- (필수 2.) 작업장코드
				  , @PROG_WORK_CODE		NVARCHAR(08)		-- (필수 2.) 공정코드
				  , @WKORD_NUM			NVARCHAR(20)		-- (선택 3.) 작업지시 번호

			SET @COMP_CODE      = #{S_COMP_CODE}
			SET @DIV_CODE       = #{DIV_CODE}
			SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
			SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
			SET @WKORD_NUM      = #{WKORD_NUM}

			SELECT
				   A.DIV_CODE
				 , A.PRODT_NUM
				 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
				 , uniLITE.fnFormat(A.comp_code, ISNULL(A.work_q, 0),	  'P_FSET_QS') AS WORK_Q
				 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
				 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
				 , A.DAY_NIGHT
				 , A.MAN_HOUR
				 , CAST(A.FR_TIME AS smalldatetime)				   AS FR_TIME
				 , CAST(A.TO_TIME AS smalldatetime)				   AS TO_TIME
				 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
				 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
				 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),	  'P_FSET_QS') AS PASS_Q
				 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
				-- , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')	   ELSE '' END AS LOT_NO
				, A.LOT_NO
				 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
				 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
				 , A.REMARK
				 , '' AS UPDATE_DB_USER
				 , '' AS UPDATE_DB_TIME
				 , A.COMP_CODE
				 , BOX_TRNS_RATE
				 , BOX_Q
				 , SAVING_Q
				 , MAN_CNT
				 , CASE WHEN HAZARD_CHECK = 'Y' THEN 1 ELSE 0 END AS HAZARD_CHECK
				 , CASE WHEN MICROBE_CHECK = 'Y' THEN 1 ELSE 0 END AS MICROBE_CHECK
			FROM			  PMR100T  A  WITH (NOLOCK)
				   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
													   AND B.DIV_CODE   = A.DIV_CODE
													   AND B.WKORD_NUM  = A.WKORD_NUM
													   AND B.PRODT_NUM  = A.PRODT_NUM
													   AND B.PRODT_DATE = A.PRODT_DATE
			WHERE A.COMP_CODE = @COMP_CODE
			  AND A.DIV_CODE  = @DIV_CODE
			  AND A.WKORD_NUM = @WKORD_NUM
			  AND A.LINE_END_YN = 'Y'
			ORDER BY A.PRODT_DATE, A.PRODT_NUM
		END
	</select>

    <select id="pmr101ukrvServiceImpl.selectIfSite" parameterType="Map" resultType="rMap">
        <!--    SELECT REF_CODE1
            	 , REF_CODE2
            FROM   BSA100T WITH (NOLOCK)
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE    = 'BS83'
              AND SUB_CODE   = #{DIV_CODE}

            UNION ALL

             SELECT REF_CODE1
            	 , REF_CODE2
            FROM   BSA100T WITH (NOLOCK)
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE    = 'BS82'
              AND SUB_CODE   = #{DIV_CODE} -->


         SELECT MAX(CASE WHEN  A.MAIN_CODE = 'BS83'
					THEN  A.REF_CODE1
				    ELSE	''		 END )AS RESULT_REF_CODE1 --실적연동여부
			 ,MAX(CASE WHEN   A.MAIN_CODE = 'BS83'
					THEN  A.REF_CODE2
				    ELSE	''		 END) AS RESULT_REF_CODE2  --실적연동주소
			 ,MAX(CASE WHEN   A.MAIN_CODE = 'BS82'
					THEN  A.REF_CODE1
				    ELSE	''		 END) AS PLAN_REF_CODE1		--작지연동여부
			 ,MAX(CASE WHEN   A.MAIN_CODE = 'BS82'
					THEN  A.REF_CODE2
				    ELSE	''		 END )AS PLAN_REF_CODE2    --작지연동주소
		FROM
		(SELECT REF_CODE1
		            	 , REF_CODE2
						 , MAIN_CODE
						 , COMP_CODE
		            FROM   BSA100T WITH (NOLOCK)
		            WHERE COMP_CODE  = #{S_COMP_CODE}
		              AND MAIN_CODE  = 'BS83'
		              AND SUB_CODE   = #{DIV_CODE}

		            UNION ALL

		             SELECT REF_CODE1
		            	 , REF_CODE2
						 , MAIN_CODE
						 ,COMP_CODE
		            FROM   BSA100T WITH (NOLOCK)
		            WHERE COMP_CODE  = #{S_COMP_CODE}
		              AND MAIN_CODE  = 'BS82'
		              AND SUB_CODE   = #{DIV_CODE} ) A
		GROUP BY A.COMP_CODE
    </select>



    <select id="pmr101ukrvServiceImpl.selectInterfaceInfo" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE          NVARCHAR(08)
              , @DIV_CODE           NVARCHAR(08)

        SET     @COMP_CODE          = #{S_COMP_CODE}
        SET     @DIV_CODE           = #{DIV_CODE}

        SELECT TOP 1 CONVERT(NVARCHAR, CONVERT(NUMERIC(20), RAND(convert(varbinary, newid())) * 100000000000000000000))     AS IF_SEQ_1      -- IF 시퀀스
             ,CONVERT(NVARCHAR, CONVERT(NUMERIC(20), RAND(convert(varbinary, newid())) * 100000000000000000000))     		AS IF_SEQ_2
             ,CONVERT(NVARCHAR, CONVERT(NUMERIC(20), RAND(convert(varbinary, newid())) * 100000000000000000000))     		AS IF_SEQ_3
             , CASE WHEN A.DIV_CODE = '01' THEN '3'
			        WHEN A.DIV_CODE = '02' THEN '4'
					ELSE '3'
				 END                 AS COMPANY_NO  -- 법인코드
			 , A.PRODT_START_DATE    AS PRDCTN_DT   -- 생산일자
             , A.WKORD_NUM           AS PRDCTN_PRODUCT_NO     -- 작업실적번호
			 , A.ITEM_CODE           AS PRDCTN_PRODUCT_CD     -- 제품코드
			 , B.ITEM_NAME           AS PRDCTN_PRODUCT_NM     -- 제품명
			 , A.PROG_UNIT           AS UNIT_CD         -- 생산단위
			 , CASE WHEN D.TEMPC_01 = 'C' THEN (SELECT ISNULL(SUM(WKORD_Q),0)
												FROM   PMP100T
												WHERE  COMP_CODE = A.COMP_CODE
												AND	   DIV_CODE  = A.DIV_CODE
												AND    SO_NUM    = A.SO_NUM
												AND    PROG_WORK_CODE = D.PROG_WORK_CODE
												AND    LINE_END_YN  = 'Y')
					ELSE ISNULL(A.WKORD_Q,0)
			   END					 AS PLAN_OUTTRN     -- MES 연계 작지수량 포장일경우에만 수주번호 별로 SUM
			 ,  CASE WHEN D.TEMPC_01 = 'C' THEN ( SELECT   ISNULL(SUM(BB.WORK_Q),0)
													FROM   PMP100T AA
													INNER JOIN PMR100T BB ON AA.COMP_CODE = BB.COMP_CODE
																		 AND AA.DIV_CODE  = BB.DIV_CODE
																		 AND AA.WKORD_NUM = BB.WKORD_NUM
																		 AND AA.PROG_WORK_CODE = BB.PROG_WORK_CODE
													WHERE  AA.COMP_CODE    = A.COMP_CODE
													AND	   AA.DIV_CODE     = A.DIV_CODE
													AND    AA.SO_NUM       = A.SO_NUM
													AND    AA.PROG_WORK_CODE = D.PROG_WORK_CODE
													AND    AA.LINE_END_YN  = 'Y')
				     ELSE ISNULL(A1.WORK_Q, 0)
				END					 AS ACMSLT_OUTTRN   -- MES 연계 실적수량 포장일경우에만 수주번호 별로 SUM
             , CASE WHEN(ISNULL(A1.WORK_Q, 0) = 0 AND  A.WKORD_STATUS = '2') THEN '00'
             		WHEN(A.WORK_END_YN = 'N' AND ISNULL(A.WKORD_Q,0) <![CDATA[<=]]> ISNULL(A1.WORK_Q,0)) THEN '03'
			        WHEN(ISNULL(A1.WORK_Q, 0) > 0 AND  A.WKORD_STATUS = '2') THEN '01'
					WHEN(A.WORK_END_YN = 'Y' AND A.WKORD_STATUS = '8') THEN '02'
					WHEN(A.WORK_END_YN = 'N' AND A.WKORD_STATUS = '9') THEN '03'
			        ELSE '00'
				END                 AS PROGRS_KIND_CD  -- 진행상태코드(00: 대기 01: 생산중 02: 중지 03: 종료)
			 , 1                    AS MEMBER_NO       -- USER
			 , 'I'                  AS ACMSLT_I_OR_D
			 , 'I'                  AS ORDR_I_OR_D
			 , A.SO_NUM AS ORDER_NUM
			 , CASE WHEN @DIV_CODE = '01' THEN
						CASE WHEN D.TEMPC_01 = 'B' THEN '02' --사업장이 김천이고 충전이면
							 ELSE '03'						 --사업장이 김천이고 포장이면
						END
				ELSE 	CASE WHEN D.TEMPC_01 = 'B' THEN '01' --사업장이 화성이고 성형이면
							 ELSE '03'						 --사업장이 화성이고 포장이면
						END
			  END					 AS WRKSHP_TY
			 , ISNULL((SELECT LOT_NO
					 	  FROM PMR100T
					 	  WHERE COMP_CODE = A.COMP_CODE
					 	  AND DIV_CODE 	  = A.DIV_CODE
					 	  AND PRODT_NUM   = #{GS_PRODT_NUM}), A1.LOT_NO) AS ERP_LOT_NO -- ERP LOT No.
			 , A.PROG_UNIT_Q         AS PACKNG_QTY      	     			 -- 포장단위
          FROM  PMP100T A WITH(NOLOCK)
                LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WKORD_NUM, PROG_WORK_CODE
				                , SUM(WORK_Q) 	   AS WORK_Q
				                , MAX(A1.LOT_NO)   AS LOT_NO
				             FROM PMR100T A1 WITH(NOLOCK)
							WHERE LINE_END_YN = 'Y'
							GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, PROG_WORK_CODE
				                           ) AS A1 ON A1.COMP_CODE = A.COMP_CODE
                                                  AND A1.DIV_CODE  = A.DIV_CODE
                                                  AND A1.WKORD_NUM = A.WKORD_NUM
				INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
				                                 AND B.ITEM_CODE = A.ITEM_CODE
				INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
				                                 AND C.DIV_CODE  = A.DIV_CODE
				                                 AND C.ITEM_CODE = A.ITEM_CODE
   				LEFT JOIN PBS200T D WITH(NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
												AND D.DIV_CODE       = A.DIV_CODE
												AND D.WORK_SHOP_CODE = A.WORK_SHOP_CODE
												AND D.PROG_WORK_CODE = A.PROG_WORK_CODE
        WHERE  A.COMP_CODE      = @COMP_CODE
        AND    A.DIV_CODE       = @DIV_CODE
        AND    A.WKORD_NUM      = #{WKORD_NUM}

        AND    D.TEMPC_01       IN ( 'B', 'C') --포장 ,충전,성형인 것만 인터페이스 되도록
    </select>

<!-- 등록 -->
	<update id="pmr101ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

	<insert id="pmr101ukrvServiceImpl.insertDetail2" parameterType="Map">		/* 작업지시별등록 추가 */
	--pmr101ukrv.Cpmr101ukrv[fnPmr100Sav2] Query2
	 INSERT INTO PMR110T
	      ( COMP_CODE
		  , DIV_CODE
	      , PRODT_NUM
		  , WORK_SHOP_CODE
	      , WKORD_NUM
		  , ITEM_CODE
	      , PRODT_DATE
		  , PRODT_Q
	      , GOOD_PRODT_Q
		  , BAD_PRODT_Q
	      , CONTROL_STATUS
	      , DAY_NIGHT
		  , MAN_HOUR
	      , REMARK
		  , PROJECT_NO
		  , PJT_CODE
	      , LOT_NO
	      , FR_SERIAL_NO
		  , TO_SERIAL_NO
	      , UPDATE_DB_USER
		  , UPDATE_DB_TIME
		  , FR_TIME
		  , TO_TIME
		  , WORK_MAN)
	 VALUES
	      ( #{S_COMP_CODE}
	      , #{DIV_CODE}
	      , #{PRODT_NUM}
	      , #{WORK_SHOP_CODE}
	      , #{WKORD_NUM}
	      , #{ITEM_CODE}
	      , #{PRODT_DATE}
	      , #{PRODT_Q}
	      , #{GOOD_PRODT_Q}
	      , #{BAD_PRODT_Q}
	      , #{CONTROL_STATUS}
	      , #{DAY_NIGHT}
	      , #{MAN_HOUR}
	      , #{REMARK}
	      , #{PROJECT_NO}
	      , #{PJT_CODE}
	      , #{LOT_NO}
	      , #{FR_SERIAL_NO}
	      , #{TO_SERIAL_NO}
	      , #{S_USER_ID}
	      , getDate()
	      , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
	      , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8))
	      , #{MAN_CNT}
	      )
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail2" parameterType="Map">
        --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav1] Query2
        UPDATE PMR110T
           SET PRODT_DATE     = #{PRODT_DATE}
             , WORK_SHOP_CODE = #{WORK_SHOP_CODE}
             , PRODT_Q         = #{PRODT_Q}
             , GOOD_PRODT_Q    = #{GOOD_PRODT_Q}
             , BAD_PRODT_Q     = #{BAD_PRODT_Q}
             , WKORD_NUM      = #{WKORD_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , DAY_NIGHT      = #{DAY_NIGHT}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
             , FR_TIME		  = (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
             , TO_TIME		  = (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8))
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail2" parameterType="Map">
		--pmr101ukrv.Cpmr101ukrv[fnPmr100Sav1] Query1
        DELETE FROM PMR110T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>

<update id="pmr101ukrvServiceImpl.updateMoldShot" parameterType="Map">
DECLARE
	@OPR_FLAG NVARCHAR(01)
	,@CHECK1 NVARCHAR(01)
	,@COMP_CODE NVARCHAR(10)
	,@DIV_CODE NVARCHAR(10)
	,@WKORD_NUM NVARCHAR(20)
	,@PRODT_Q NUMERIC(30,6)

	,@MOLD_CODE NVARCHAR(20)

SET @OPR_FLAG = #{STATUS}
SET @COMP_CODE = #{S_COMP_CODE}
SET @DIV_CODE = #{DIV_CODE}
SET @WKORD_NUM = #{WKORD_NUM}
SET @PRODT_Q = ${PRODT_Q}

SELECT
	@CHECK1 = SUB_CODE
  FROM BSA100T
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND MAIN_CODE = 'P521'
   AND SUB_CODE != '$'
   AND REF_CODE1 = 'Y'

IF(@CHECK1 = 'Y')
BEGIN
	DECLARE CUR_01 CURSOR FOR
		SELECT MOLD_CODE FROM PMP100T WHERE COMP_CODE = @COMP_CODE AND DIV_CODE = @DIV_CODE AND WKORD_NUM = @WKORD_NUM AND ISNULL(MOLD_CODE,'') != ''

	OPEN CUR_01
	FETCH NEXT FROM CUR_01 INTO @MOLD_CODE
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		UPDATE EQU200T
		   SET WORK_Q =
				(CASE WHEN @OPR_FLAG = 'N' THEN (WORK_Q + (CASE WHEN ISNULL(CAVIT_BASE_Q,0) = 0 THEN 0
															  ELSE CEILING(@PRODT_Q/CAVIT_BASE_Q)
														END))
					  WHEN @OPR_FLAG = 'D' THEN (WORK_Q - (CASE WHEN ISNULL(CAVIT_BASE_Q,0) = 0 THEN 0
															  ELSE CEILING(@PRODT_Q/CAVIT_BASE_Q)
														END))
					 ELSE WORK_Q
				END)
		 WHERE COMP_CODE = @COMP_CODE
		   AND DIV_CODE = @DIV_CODE
		   AND EQU_CODE_TYPE = '1'
		   AND EQU_CODE = @MOLD_CODE

		FETCH NEXT FROM CUR_01 INTO @MOLD_CODE
	END

	CLOSE CUR_01
	DEALLOCATE CUR_01
END
</update>


	<update id="pmr101ukrvServiceImpl.updateMoldPlus" parameterType="Map">
        /* pmr101ukrvServiceImpl.updateMold */
        UPDATE EQU200T
           SET WORK_Q     = WORK_Q + CEILING(${WORK_Q} / ${CAVIT_BASE_Q})
			 , TOT_PUNCH_Q = WORK_Q + CEILING(${WORK_Q} / ${CAVIT_BASE_Q})
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND EQU_CODE      = #{MOLD_CODE}
    </update>
	<update id="pmr101ukrvServiceImpl.updateMoldMinus" parameterType="Map">
        /* pmr101ukrvServiceImpl.updateMold */
        UPDATE EQU200T
           SET WORK_Q     = (CASE WHEN WORK_Q - CEILING(${WORK_Q} / ${CAVIT_BASE_Q}) &lt; 0 THEN 0
            					 ELSE WORK_Q - CEILING(${WORK_Q} / ${CAVIT_BASE_Q})
            				END)
             , TOT_PUNCH_Q = (CASE WHEN WORK_Q - CEILING(${WORK_Q} / ${CAVIT_BASE_Q}) &lt; 0 THEN 0
            					 ELSE WORK_Q - CEILING(${WORK_Q} / ${CAVIT_BASE_Q})
            				END)
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND EQU_CODE      = #{MOLD_CODE}
    </update>

	<insert id="pmr101ukrvServiceImpl.insertDetail3" parameterType="Map">		/* 공정별등록 추가1 */
	--pmr101ukrv.Cpmr101ukrv[fnPmr100Sav1] Query3
	INSERT INTO PMR100T
	     ( COMP_CODE
	     , DIV_CODE
	     , PRODT_NUM
	     , PRODT_DATE
	     , PROG_WORK_CODE
	     , PROG_WKORD_Q
	     , WORK_Q
	     , PASS_Q
	     , GOOD_WORK_Q
	     , BAD_WORK_Q
	     , DAY_NIGHT
	     , WKORD_NUM
	     , LINE_END_YN
	     , WK_PLAN_NUM
	     , CONTROL_STATUS
	     , CAPACITY_Q
	     , HARDNESS_Q
	     , MAN_HOUR
	     , REMARK
	     , PROJECT_NO
	     , PJT_CODE
	     , LOT_NO
	     , FR_SERIAL_NO
	     , TO_SERIAL_NO
	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     , FR_TIME
	     , TO_TIME
	     , EQUIP_CODE
	     , PRODT_PRSN
	     , BOX_TRNS_RATE
		 , BOX_Q
		 , SAVING_Q
		 , MAN_CNT
		 , HAZARD_CHECK
		 , MICROBE_CHECK
		 , PIECE
		 , EXPIRATION_DATE
		 , YIELD
		 , LOSS_Q
		 , ETC_Q
	     )
	VALUES
	     ( #{S_COMP_CODE}
	     , #{DIV_CODE}
	     , #{PRODT_NUM}
	     , #{PRODT_DATE}
	     , #{PROG_WORK_CODE}
	     , #{PROG_WKORD_Q}
	     , #{WORK_Q}
	     , #{GOOD_WORK_Q}
	     , #{GOOD_WORK_Q}
	     , #{BAD_WORK_Q}
	     , #{DAY_NIGHT}
	     , #{WKORD_NUM}
	     , #{LINE_END_YN}
	     , #{WK_PLAN_NUM}
	     , #{CONTROL_STATUS}
	     , #{CAPACITY_Q}
	     , #{HARDNESS_Q}
	     , #{MAN_HOUR}
	     , #{REMARK}
	     , #{PROJECT_NO}
	     , #{PJT_CODE}
	     , #{LOT_NO}
	     , #{FR_SERIAL_NO}
	     , #{TO_SERIAL_NO}
	     , #{S_USER_ID}
	     , getDate()
	     , #{S_USER_ID}
	     , getDate()
	     , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
	     , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8))
	     , #{EQUIP_CODE}
	     , #{PRODT_PRSN}
	     , #{BOX_TRNS_RATE}
		 , #{BOX_Q}
		 , #{SAVING_Q}
		 , #{MAN_CNT}
		 , CASE WHEN #{HAZARD_CHECK} = '1' THEN 'Y' ELSE 'N' END
		 , CASE WHEN #{MICROBE_CHECK}= '1' THEN 'Y' ELSE 'N' END
		 ,  #{PIECE}
		 ,  #{EXPIRATION_DATE}
		 ,  #{YIELD}
		 ,  #{LOSS_Q}
		 ,  #{ETC_Q}
	     )
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail3" parameterType="Map">
        --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav1] Query2
        UPDATE PMR100T
           SET PRODT_DATE     = #{PRODT_DATE}
             , PROG_WORK_CODE = #{PROG_WORK_CODE}
             , PROG_WKORD_Q   = #{PROG_WKORD_Q}
             , WORK_Q         = #{WORK_Q}
             , PASS_Q         = #{PASS_Q}
             , GOOD_WORK_Q    = #{GOOD_WORK_Q}
             , BAD_WORK_Q     = #{BAD_WORK_Q}
             , DAY_NIGHT      = #{DAY_NIGHT}
             , WKORD_NUM      = #{WKORD_NUM}
             , LINE_END_YN    = #{LINE_END_YN}
             , WK_PLAN_NUM    = #{WK_PLAN_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , CAPACITY_Q     = #{CAPACITY_Q}
             , HARDNESS_Q     = #{HARDNESS_Q}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
             , FR_TIME		  = (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
             , TO_TIME		  = (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8))
             , EQUIP_CODE  = #{EQUIP_CODE}
             , PRODT_PRSN  = #{PRODT_PRSN}
             , BOX_TRNS_RATE   = #{BOX_TRNS_RATE}
             , BOX_Q           		= #{BOX_Q}
             , SAVING_Q       		= #{SAVING_Q}
             , MAN_CNT        		= #{MAN_CNT}
             , HAZARD_CHECK    = CASE WHEN #{HAZARD_CHECK} = '1' THEN 'Y' ELSE 'N' END
             , MICROBE_CHECK   = CASE WHEN #{MICROBE_CHECK}= '1' THEN 'Y' ELSE 'N' END
             , PIECE				    = #{PIECE}
             , EXPIRATION_DATE	= #{EXPIRATION_DATE}
             , YIELD				    = #{YIELD}
             , LOSS_Q				= #{LOSS_Q}
         WHERE COMP_CODE     = #{S_COMP_CODE}
           AND DIV_CODE          = #{DIV_CODE}
           AND PRODT_NUM       = #{PRODT_NUM}
    </update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail3" parameterType="Map">
		--pmr101ukrv.Cpmr101ukrv[fnPmr100Sav1] Query1
        DELETE FROM PMR100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>



	<update id="pmr101ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{BAD_WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC         ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>



	<select id="pmr101ukrvServiceImpl.selectDetailList5" parameterType="Map" resultType="rMap">		<!-- 불량내역등록 조회 -->
	--pmr101ukrv.Cpmr101ukrv[fnPmr100QSt2] Query01
    SELECT
           A.DIV_CODE
         , A.WORK_SHOP_CODE
         , A.WKORD_NUM
         , A.PROG_WORK_CODE
         , B.PROG_WORK_NAME
         , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
         , A.ITEM_CODE
         , A.BAD_CODE
         , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS') AS BAD_Q
         , A.REMARK
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , A.COMP_CODE
     FROM             PMR300T A WITH (NOLOCK)
           INNER JOIN PBS200T B WITH (NOLOCK) ON B.comp_code      = A.comp_code
                                             AND B.div_code       = A.div_code
                                             AND B.work_shop_code = A.work_shop_code
                                             AND B.prog_work_code = A.prog_work_code
     WHERE A.COMP_CODE      = #{S_COMP_CODE}
     AND   A.DIV_CODE       = #{DIV_CODE}
     AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
     AND   A.WKORD_NUM      = #{WKORD_NUM}
     ORDER BY A.PROG_WORK_CODE ASC ,A.PRODT_DATE ASC
	 </select>

	<insert id="pmr101ukrvServiceImpl.insertDetail5" parameterType="Map">		/* 불량내역등록 추가 */
	INSERT INTO PMR300T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , ITEM_CODE
		 , BAD_CODE
		 , BAD_Q
		 , REMARK
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE )
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{ITEM_CODE}
		 , #{BAD_CODE}
		 , #{BAD_Q}
		 , #{REMARK}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE} )
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail5" parameterType="Map">        /* 불량내역등록 수정 */
         --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav2] Query1
         UPDATE PMR300T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , ITEM_CODE      = #{ITEM_CODE}
              , BAD_Q          = #{BAD_Q}
              , REMARK         = #{REMARK}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND BAD_CODE       = #{BAD_CODE}
            AND COMP_CODE      = #{S_COMP_CODE}
	</update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail5" parameterType="Map">        /* 불량내역등록 삭제 */
        --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav2] Query1
        DELETE FROM PMR300T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND BAD_CODE       = #{BAD_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}
	</delete>



	<insert id="pmr101ukrvServiceImpl.insertDetail6" parameterType="Map">		/* 특이사항등록 추가 */
	INSERT INTO PMR400T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , CTL_CD1
		 , TROUBLE_TIME
		 , TROUBLE
		 , TROUBLE_CS
		 , ANSWER
		 , SEQ
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE
		 , FR_TIME
		 , TO_TIME)
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{CTL_CD1}
		 , #{TROUBLE_TIME}
		 , #{TROUBLE}
		 , #{TROUBLE_CS}
		 , #{ANSWER}
		 , #{SEQ}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE}
		 , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
	     , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8)))
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail6" parameterType="Map">        /* 특이사항등록 수정 */
         --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav4] Query1
         UPDATE PMR400T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , CTL_CD1        			= #{CTL_CD1}
              , TROUBLE_TIME   		= #{TROUBLE_TIME}
              , TROUBLE        			= #{TROUBLE}
              , TROUBLE_CS     		= #{TROUBLE_CS}
              , ANSWER         		= #{ANSWER}
              , UPDATE_DB_USER 	= #{S_USER_ID}
              , UPDATE_DB_TIME 	= GETDATE()
              , FR_TIME 				= (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
              , TO_TIME 				= (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8))

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND SEQ            = #{SEQ}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail6" parameterType="Map">        /* 특이사항등록 삭제 */
        --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav4] Query1
        DELETE FROM PMR400T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND SEQ            = #{SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
	</delete>



	<insert id="pmr101ukrvServiceImpl.insertDetail7" parameterType="Map">		/* 제조이력 추가(updateDetail7에서 처리) */
		INSERT INTO PMR500T (
			   COMP_CODE
			 , DIV_CODE
			 , WORK_SHOP_CODE
			 , PRODT_NUM
			 , PRODT_DATE
			 , SEQ
			 , WKORD_NUM
			 , ITEM_CODE
			 , MODIFY_RATE
			 , REMARK
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		) VALUES (
			   #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{WORK_SHOP_CODE}
			 , #{PRODT_NUM}
			 , #{PRODT_DATE}
			 , #{SEQ}
			 , #{WKORD_NUM}
			 , #{ITEM_CODE}
			 , #{MODIFY_RATE}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail7" parameterType="Map">		/* 제조이력 수정 */
		/* pmr101ukrvServiceImpl.updateDetail7 */
		DECLARE @COMP_CODE	NVARCHAR(08)
			  , @DIV_CODE	NVARCHAR(08)
			  , @PRODT_NUM	NVARCHAR(20)
			  , @ITEM_CODE	NVARCHAR(20)
			  , @SEQ		NVARCHAR(06)

		   SET @COMP_CODE	= #{S_COMP_CODE}
		   SET @DIV_CODE	= #{DIV_CODE}
		   SET @PRODT_NUM	= #{PRODT_NUM}
		   SET @ITEM_CODE	= #{ITEM_CODE}
		   SET @SEQ			= #{SEQ}


		MERGE INTO PMR500T									A
		USING ( SELECT @COMP_CODE		AS COMP_CODE
					 , @DIV_CODE		AS DIV_CODE
					 , @PRODT_NUM		AS PRODT_NUM
					 , @ITEM_CODE		AS ITEM_CODE
					 , @SEQ				AS SEQ
			  )												B		ON B.COMP_CODE		= A.COMP_CODE
																   AND B.DIV_CODE		= A.DIV_CODE
																   AND B.PRODT_NUM		= A.PRODT_NUM
																   AND B.ITEM_CODE		= A.ITEM_CODE
																   AND B.SEQ			= A.SEQ

		WHEN MATCHED THEN
			UPDATE
			   SET MODIFY_RATE		= #{MODIFY_RATE}
				 , REMARK			= #{REMARK}
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()

		WHEN NOT MATCHED THEN
			INSERT (
				   COMP_CODE
				 , DIV_CODE
				 , WORK_SHOP_CODE
				 , PRODT_NUM
				 , PRODT_DATE
				 , SEQ
				 , WKORD_NUM
				 , ITEM_CODE
				 , MODIFY_RATE
				 , REMARK
				 , UPDATE_DB_USER
				 , UPDATE_DB_TIME
				 , INSERT_DB_USER
				 , INSERT_DB_TIME
			) VALUES (
				   #{S_COMP_CODE}
				 , #{DIV_CODE}
				 , #{WORK_SHOP_CODE}
				 , #{PRODT_NUM}
				 , #{PRODT_DATE}
				 , #{SEQ}
				 , #{WKORD_NUM}
				 , #{ITEM_CODE}
				 , #{MODIFY_RATE}
				 , #{REMARK}
				 , #{S_USER_ID}
				 , GETDATE()
				 , #{S_USER_ID}
				 , GETDATE()
			);
	</update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail7" parameterType="Map">		/* 제조이력 삭제 */
		 /* pmr101ukrvServiceImpl.deleteDetail7 */
		 DELETE FROM PMR500T
		  WHERE COMP_CODE = #{S_COMP_CODE}
			AND DIV_CODE  = #{DIV_CODE}
			AND PRODT_NUM = #{PRODT_NUM}
			AND ITEM_CODE = #{ITEM_CODE}
			AND SEQ		  = #{SEQ}
	</delete>

	<select id="pmr101ukrvServiceImpl.mainReport" parameterType="Map" resultType="rMap">
		/*pmr101ukrvServiceImpl.mainReport*/
	   SELECT B.ITEM_CODE
		      ,C.ITEM_NAME
			  ,A.PRODT_DATE --포장일, 생산일
			  ,ISNULL(A.LOT_NO, B.LOT_NO) AS LOT_NO
			  ,A.GOOD_WORK_Q
			  ,A.PASS_Q
			  ,R2.CODE_NAME AS INSPEC_METHOD
			  ,C.STOCK_UNIT
			  ,B.PRODT_WKORD_DATE --제조일
			  ,C.ITEM_LEVEL1
			  ,C1.ITEM_ACCOUNT
			  ,A.WKORD_NUM
			  ,A.PRODT_NUM
			  ,R3.CODE_NAME AS PRODT_PRSN_NM
			  ,A.EXPIRATION_DATE
			  ,R4.REF_CODE3 AS STD_ITEM_ACCOUNT
			  ,C.SPEC
		FROM PMR100T A WITH (NOLOCK)
		INNER JOIN PMP100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
										  AND A.DIV_CODE  = B.DIV_CODE
										  AND A.WKORD_NUM = B.WKORD_NUM
										   AND B.LINE_END_YN = 'Y'
	    INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE = C.COMP_CODE
										  AND B.ITEM_CODE = C.ITEM_CODE
	    INNER JOIN BPR200T C1 WITH (NOLOCK) ON A.COMP_CODE = C1.COMP_CODE
										  AND  A.DIV_CODE  = C1.DIV_CODE
										  AND  B.ITEM_CODE = C1.ITEM_CODE
	    LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
										AND R2.MAIN_CODE = 'Q007'
										AND R2.SUB_CODE  = C1.INSPEC_METH_PRODT
		LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									AND R3.MAIN_CODE = 'P505'
									AND R3.SUB_CODE  =  A.PRODT_PRSN
		LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
										  AND R4.MAIN_CODE = 'B020'
										  AND R4.SUB_CODE != '$'
										  AND R4.SUB_CODE = C1.ITEM_ACCOUNT
	    WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND   A.DIV_CODE  = #{DIV_CODE}
		AND   A.PRODT_NUM = #{PRODT_NUM}

	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.PRODT_NUM
	</select>
	<select id="pmr101ukrvServiceImpl.subReport" parameterType="Map" resultType="rMap">
      		 /* 조회2 */
		/*pmr101ukrvServiceImpl.subReport*/
		BEGIN
			SET NOCOUNT	ON
			SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
			DECLARE @COMP_CODE			NVARCHAR(20)		--(필수) 법인코드
				  , @DIV_CODE			NVARCHAR(20)		--(필수) 사업장 번호
				  , @PRODT_NUM			NVARCHAR(40)		--(필수) 검사번호
				  , @TEST_GROUP	NVARCHAR(40)		--대분류코드
				  , @INSPEC_ITEM		NVARCHAR(02)		--(필수) 검사품목
				   , @ITEM_CODE	   		NVARCHAR(50)		--(필수) 품목코드
			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @DIV_CODE		= #{DIV_CODE}
			SET @PRODT_NUM	=#{PRODT_NUM}
			SET @TEST_GROUP	= #{ITEM_LEVEL1}
			SET @INSPEC_ITEM = #{STD_ITEM_ACCOUNT}
			SET @ITEM_CODE = #{ITEM_CODE}


		    IF @INSPEC_ITEM = '10'--제품
				BEGIN
					SELECT A.TEST_CODE
						 , B.TEST_NAME			AS TEST_NAME
						 , B.TEST_COND
						 , B.TEST_COND_FROM
						 , B.TEST_COND_TO
						 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
								  AND (ISNULL(B.TEST_COND_FROM, 0) > 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[<]]> 0)) THEN '부적합'
								ELSE B.TEST_RESULT
						   END					AS SPEC		--[QMS410T.SPEC]
					  FROM		 QBA120T A WITH(NOLOCK)
					  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													   AND B.DIV_CODE  = A.DIV_CODE
													   AND B.TEST_CODE = A.TEST_CODE
					 INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
													   AND C.DIV_CODE  = A.DIV_CODE
													   AND C.ITEM_CODE = @ITEM_CODE
													   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
					 WHERE A.COMP_CODE    = @COMP_CODE
					   AND A.DIV_CODE     = @DIV_CODE
					   AND A.TEST_GROUP  = @TEST_GROUP
				END
			ELSE IF @INSPEC_ITEM = '20'  --반제품
				BEGIN
					SELECT A.TEST_CODE
						 , B.TEST_NAME			AS TEST_NAME
						 , B.TEST_COND
						 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
								  AND (ISNULL(B.TEST_COND_FROM, 0) > 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[<]]> 0)) THEN '부적합'
								ELSE B.TEST_RESULT
						   END					AS SPEC		--[QMS410T.SPEC]
					  FROM		 QBA120T A WITH(NOLOCK)
					  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													   AND B.DIV_CODE  = A.DIV_CODE
													   AND B.TEST_CODE = A.TEST_CODE
					  INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
													   AND C.DIV_CODE  = A.DIV_CODE
													   AND C.ITEM_CODE = @ITEM_CODE
													   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
					 WHERE A.COMP_CODE    = @COMP_CODE
					   AND A.DIV_CODE     =@DIV_CODE
					   AND A.TEST_GROUP  = @TEST_GROUP
				END
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	<select id="pmr101ukrvServiceImpl.subReport2" parameterType="Map" resultType="rMap">
     /*pmr101ukrvServiceImpl.subReport2*/
      SELECT  A.COMP_CODE
						, A.DIV_CODE
						, A.TEST_CODE
						, B.TEST_NAME
						, B.TEST_COND
						, B.TEST_COND_FROM
						, B.TEST_COND_TO
						, CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
								AND (ISNULL(B.TEST_COND_FROM, 0) > 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[< ]]>0)) THEN '부적합'
							ELSE B.TEST_RESULT
						END					AS SPEC
					   , A.TEST_GROUP
					   , C.ITEM_CODE
					FROM		 QBA120T A WITH(NOLOCK)
					INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													AND B.DIV_CODE  = A.DIV_CODE
													AND B.TEST_CODE = A.TEST_CODE
					INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
													AND C.DIV_CODE  = A.DIV_CODE
													AND C.ITEM_ACCOUNT = A.TEST_GROUP2
					WHERE A.COMP_CODE   = #{S_COMP_CODE}
					AND  	 C.ITEM_CODE = #{ITEM_CODE}
					AND A.DIV_CODE    = #{DIV_CODE}

	</select>
	<select id="pmr101ukrvServiceImpl.selectRefItem" parameterType="Map" resultType="rMap">
		  SELECT
		    B.CHILD_ITEM_CODE  AS ITEM_CODE
		   ,R1.ITEM_NAME	AS ITEM_NAME
		   ,R1.SPEC	AS SPEC
		   ,R1.STOCK_UNIT	AS STOCK_UNIT
		   ,A.SO_NUM	        AS ORDER_NUM
		   ,D.CUSTOM_CODE
		   ,R3.CUSTOM_NAME
		   , '' AS WKORD_NUM
		   ,C.GOOD_STOCK_Q	AS 	PASS_Q
		   , '' AS PRODT_WKORD_DATE
		   ,C.LOT_NO
		   ,C.INSTOCK_DATE	AS PRODT_DATE
		   ,C.USE_BY_DATE	AS EXPIRATION_DATE
		   ,R2.ITEM_ACCOUNT
		   FROM PMP100T A WITH(NOLOCK)
		  INNER JOIN BPR500T B WITH(NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
		                                   AND B.DIV_CODE = A.DIV_CODE
		                                   AND B.PROD_ITEM_CODE = A.ITEM_CODE
		           AND B.CHILD_ITEM_CODE != '$'
		  INNER JOIN BIV150T C WITH(NOLOCK)  ON C.COMP_CODE = B.COMP_CODE
		                                   AND C.DIV_CODE = B.DIV_CODE
		                                   AND C.ITEM_CODE = B.CHILD_ITEM_CODE
		          -- AND C.GOOD_STOCK_Q > 0       -- 20200131 수정 YOON
		  LEFT JOIN SOF100T D WITH(NOLOCK)  ON D.COMP_CODE = A.COMP_CODE
		                                   --AND D.DIV_CODE = A.DIV_CODE
		                                   AND D.ORDER_NUM = A.SO_NUM
		  INNER JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
		           AND R1.ITEM_CODE = B.CHILD_ITEM_CODE
		  INNER JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
		           AND R2.DIV_CODE  = B.DIV_CODE
		           AND R2.ITEM_CODE = B.CHILD_ITEM_CODE
		           AND R2.ITEM_ACCOUNT IN ('20', '30')  --내용물(벌크)
		  LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE   = D.COMP_CODE
		           AND R3.CUSTOM_CODE = D.CUSTOM_CODE
		  LEFT JOIN BSA230T R4 WITH(NOLOCK) ON   R4.COMP_CODE  = A.COMP_CODE
											AND  R4.TYPE_LEVEL = A.DIV_CODE
											AND  R4.TREE_CODE  = A.WORK_SHOP_CODE
		  WHERE A.COMP_CODE = #{S_COMP_CODE}
		    AND A.DIV_CODE = #{DIV_CODE}
		    AND A.LINE_END_YN = 'Y'
		    AND A.WKORD_NUM = #{WKORD_NUM}
		    AND CASE WHEN ISNULL(R4.WH_CODE,'') = ''
		    		 THEN ''
	    	    ELSE C.WH_CODE END = CASE WHEN ISNULL(R4.WH_CODE,'') = ''
					       				  THEN ''
					  				 ELSE R4.WH_CODE END --2020.11.19 재공창고를 사용하는 경우는 재공창고의 것만 나오도록 수정
		  ORDER BY LOT_NO DESC                  -- 20200131 수정 YOON
 	</select>

	<select id="pmr101ukrvServiceImpl.mainReport_label" parameterType="Map" resultType="rMap">
		/*pmr101ukrvServiceImpl.mainReport_label*/
	   /*라벨 출력 개수 관련 처리 */
	   DECLARE @PRINT_CNT INT
	   DECLARE @I INT
	   DECLARE @J INT
	   DECLARE @PRODT_NUM NVARCHAR(20)
	   SET @I = 1
	   SET @J = #{PAGE_START}
	   SET @PRODT_NUM = #{PRODT_NUM}
	   SET @PRINT_CNT = #{PRINT_CNT}
	   CREATE TABLE #TEMP_PRINT(
		PRODT_NUM NVARCHAR(20),
		PAGE_NUM INT NULL
	   )
	   WHILE @I <![CDATA[<=]]> @PRINT_CNT
	   BEGIN
		    INSERT INTO #TEMP_PRINT
			(
				PRODT_NUM,
				PAGE_NUM
			)
			VALUES(
				@PRODT_NUM,
				@J
			)
	    	SET @I = @I + 1
	    	SET @J = @J + 1
	   END

	   SELECT B.ITEM_CODE
		      ,LTRIM(RTRIM(C.ITEM_NAME)) AS ITEM_NAME
			  ,ISNULL(A.LOT_NO, B.LOT_NO) AS LOT_NO



			<if test="GUBUN == &quot;SHIN&quot;">
			  , #{PRODT_DATE} AS PRODT_DATE		--포장일, 생산일
			  ,#{PRODT_QTY} AS GOOD_WORK_Q
			</if>

			<if test="GUBUN == &quot;STANDARD&quot;">
			  ,A.PRODT_DATE --포장일, 생산일
			  ,A.GOOD_WORK_Q
			</if>

			  ,A.PASS_Q
			  ,R2.CODE_NAME AS INSPEC_METHOD
			  ,C.STOCK_UNIT
			  ,B.PRODT_WKORD_DATE --제조일
			  ,C.ITEM_LEVEL1
			  ,C1.ITEM_ACCOUNT
			  ,A.WKORD_NUM
			  ,A.PRODT_NUM
			  ,R3.CODE_NAME AS PRODT_PRSN_NM
			  , SUBSTRING(A.PRODT_DATE,1,4) + REPLICATE('0', 3 - len(convert(varchar,uniLITE.fnGetCalWeek('MASTER', A.PRODT_DATE)))) + convert(varchar,uniLITE.fnGetCalWeek('MASTER', A.PRODT_DATE)) AS PRODT_WEEK --생산주차
			  ,A.EXPIRATION_DATE    		  			-- 보관기한
			  ,B.SO_NUM AS ORDER_NUM   				    -- 수주번호
			  ,B.SO_SEQ AS ORDER_SEQ                    -- 수주순번
			  ,R7.CUSTOM_NAME   AS SOF_CUSTOM_NAME		-- 수주정보의 거래처
			  ,R5.ITEM_CODE 	AS SOF_ITEM_CODE  		-- 수주품목
			  ,R8.ITEM_NAME 	AS SOF_ITEM_NAME  		-- 수주품목명
			  ,R9.CUSTOM_ITEM_CODE 			  			-- 수주품목의 거래처 품목코드
			  ,R9.CUSTOM_ITEM_NAME 			  			-- 수주품목의 거래처 품목명
			  ,@PRINT_CNT AS PRINT_CNT
			  ,R8.SPEC AS SOF_ITEM_SPEC
			  ,R11.CODE_NAME + '/' + R10.CODE_NAME AS COLORMATERIAL
			  ,R4.PAGE_NUM
			  ,CASE WHEN #{KEY_IN_ITEM_CODE} IS NULL	THEN R5.ITEM_CODE ELSE #{KEY_IN_ITEM_CODE} END AS KEY_IN_ITEM_CODE
			  ,CASE WHEN #{KEY_IN_ITEM_NAME} IS NULL 	THEN
				  		CASE WHEN ISNULL(R8.ITEM_NAME1,'') = '' THEN ISNULL(R9.CUSTOM_ITEM_NAME, R8.ITEM_NAME)
							 ELSE ISNULL(R8.ITEM_NAME1,'') END
			        WHEN #{KEY_IN_ITEM_NAME} IS NOT NULL 	THEN #{KEY_IN_ITEM_NAME}
			   END 		 AS KEY_IN_ITEM_NAME
			  ,CASE WHEN #{KEY_IN_PART_ITEM_NAME} IS NULL 	THEN LTRIM(RTRIM(C.ITEM_NAME2)) ELSE #{KEY_IN_PART_ITEM_NAME}  END AS KEY_IN_PART_ITEM_NAME
			  ,#{KEY_IN_WEIGHT}	     AS KEY_IN_WEIGHT
			  ,#{KEY_IN_MANAGE_NUM}  AS KEY_IN_MANAGE_NUM
			  ,#{KEY_IN_PRODT_NUM}   AS KEY_IN_PRODT_NUM
			  ,R5.DVRY_CUST_CD
			  ,CASE WHEN ISNULL(R12.DVRY_CUST_NM, '') = '' THEN R7.CUSTOM_NAME ELSE R12.DVRY_CUST_NM END DVRY_CUSTOM_NAME
			  , B.WKORD_Q
			  , R5.DVRY_DATE
			  , R5.ORDER_Q
			  , B1.CHILD_ITEM_CODE
			  , #{PROG_WORK_GUBUN}   AS PROG_WORK_GUBUN
		FROM PMR100T A WITH (NOLOCK)
		INNER JOIN PMP100T B WITH (NOLOCK) ON A.COMP_CODE  	 = B.COMP_CODE
										  AND A.DIV_CODE  	 = B.DIV_CODE
										  AND A.WKORD_NUM 	 = B.WKORD_NUM
										  AND B.LINE_END_YN  = 'Y'
		  LEFT JOIN (SELECT TOP 1 A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM, B.CHILD_ITEM_CODE
		                FROM PMP100T A WITH(NOLOCK)
		                     INNER JOIN BPR500T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.DIV_CODE  = A.DIV_CODE
		                                                      AND B.PROD_ITEM_CODE = A.ITEM_CODE
		                                                      AND B.CHILD_ITEM_CODE != '$'
							  INNER JOIN BIV150T C WITH(NOLOCK)  ON C.COMP_CODE = B.COMP_CODE
															   AND C.DIV_CODE = B.DIV_CODE
															   AND C.ITEM_CODE = B.CHILD_ITEM_CODE
									  -- AND C.GOOD_STOCK_Q > 0       -- 20200131 수정 YOON
							  LEFT JOIN SOF100T D WITH(NOLOCK)  ON D.COMP_CODE = A.COMP_CODE
															   --AND D.DIV_CODE = A.DIV_CODE
															   AND D.ORDER_NUM = A.SO_NUM
							  INNER JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
									   AND R1.ITEM_CODE = B.CHILD_ITEM_CODE
							  INNER JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
									   AND R2.DIV_CODE  = B.DIV_CODE
									   AND R2.ITEM_CODE = B.CHILD_ITEM_CODE
									   AND R2.ITEM_ACCOUNT IN ('20', '30')  --내용물(벌크)
							  LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE   = D.COMP_CODE
									   AND R3.CUSTOM_CODE = D.CUSTOM_CODE
						WHERE A.LINE_END_YN = 'Y'
						 AND C.LOT_NO + A.WKORD_NUM   = (SELECT LOT_NO  + WKORD_NUM
														 FROM PMR100T
														 WHERE COMP_CODE = #{S_COMP_CODE}
														 AND DIV_CODE	= #{DIV_CODE}
														 AND PRODT_NUM	= #{PRODT_NUM} )

						) AS B1  ON B1.COMP_CODE  = B.COMP_CODE
						                                 AND B1.DIV_CODE   = B.DIV_CODE
														 AND B1.WKORD_NUM  = B.WKORD_NUM
	    INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE 	 = C.COMP_CODE
										  AND B.ITEM_CODE 	 = C.ITEM_CODE
	    INNER JOIN BPR200T C1 WITH (NOLOCK) ON A.COMP_CODE 	 = C1.COMP_CODE
										  AND  A.DIV_CODE  	 = C1.DIV_CODE
										  AND  B.ITEM_CODE 	 = C1.ITEM_CODE
	    LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE 	 = A.COMP_CODE
										 AND R2.MAIN_CODE 	 = 'Q007'
										 AND R2.SUB_CODE  	 = C1.INSPEC_METH_PRODT
		LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE 	 = A.COMP_CODE
										 AND R3.MAIN_CODE 	 = 'P505'
										 AND R3.SUB_CODE  	 =  A.PRODT_PRSN
		LEFT JOIN SOF110T R5 WITH(NOLOCK) ON R5.COMP_CODE	 = B.COMP_CODE
										 AND R5.OUT_DIV_CODE = B.DIV_CODE
										 AND R5.ORDER_NUM    = B.SO_NUM
										 AND R5.SER_NO       = B.SO_SEQ
		LEFT JOIN SOF100T R6 WITH(NOLOCK) ON R6.COMP_CODE	 = R5.COMP_CODE
										 AND R6.DIV_CODE	 = R5.DIV_CODE
										 AND R6.ORDER_NUM    = R5.ORDER_NUM
		LEFT JOIN BCM100T R7 WITH(NOLOCK) ON R7.COMP_CODE    = R6.COMP_CODE  --수주의 거래처정보
										 AND R7.CUSTOM_CODE  = R6.CUSTOM_CODE
		LEFT JOIN BPR100T R8 WITH(NOLOCK) ON R8.COMP_CODE	 = R5.COMP_CODE  --수주품목정보
										 AND R8.ITEM_CODE	 = R5.ITEM_CODE
		LEFT JOIN BPR300T R9 WITH(NOLOCK) ON R9.COMP_CODE    = R5.COMP_CODE  --수주품목의 거래처 품목 정보
										 AND R9.DIV_CODE     = R5.DIV_CODE
										 AND R9.ITEM_CODE    = R5.ITEM_CODE
										 AND R9.CUSTOM_CODE  = R6.CUSTOM_CODE
										 AND R9.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
																   FROM   BPR300T
																   WHERE  COMP_CODE   = R9.COMP_CODE
																	 AND  DIV_CODE    = R9.DIV_CODE
																	 AND  ITEM_CODE   = R9.ITEM_CODE
																	 AND  CUSTOM_CODE = R9.CUSTOM_CODE)
		LEFT JOIN BSA100T R10 WITH(NOLOCK) ON R10.COMP_CODE = A.COMP_CODE
									      AND R10.MAIN_CODE = 'Z021'
										  AND R10.SUB_CODE != '$'
										  AND R10.SUB_CODE  = SUBSTRING(B.ITEM_CODE,6,2)
		LEFT JOIN BSA100T R11 WITH(NOLOCK) ON R11.COMP_CODE = A.COMP_CODE
									      AND R11.MAIN_CODE = 'Z050'
										  AND R11.SUB_CODE != '$'
										  AND R11.SUB_CODE  = SUBSTRING(B.ITEM_CODE,12,2)
		LEFT  JOIN SCM100T R12 WITH (NOLOCK) ON A.COMP_CODE       = R12.COMP_CODE
											AND R6.CUSTOM_CODE    = R12.CUSTOM_CODE
											AND R5.DVRY_CUST_CD   = CAST(R12.DVRY_CUST_SEQ AS NVARCHAR(80))
		LEFT JOIN #TEMP_PRINT R4 WITH (NOLOCK) ON R4.PRODT_NUM = A.PRODT_NUM
	    WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND   A.DIV_CODE  = #{DIV_CODE}
		AND   A.PRODT_NUM = #{PRODT_NUM}

	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.PRODT_NUM

	     DROP TABLE #TEMP_PRINT
	</select>

	<select id="pmr101ukrvServiceImpl.selectBadcodes" parameterType="String" resultType="rMap">

      /* pmr101ukrvServiceImpl.selectBadcodes */
     SELECT SUB_CODE
			  ,CODE_NAME
		FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE =  #{S_COMP_CODE}
		AND MAIN_CODE = 'P003'
		AND SUB_CODE != '$'
    </select>

    <select id="pmr101ukrvServiceImpl.selectBadcodeRemarks" parameterType="String" resultType="rMap">

      /* pmr101ukrvServiceImpl.selectBadcodeRemarks */
     SELECT SUB_CODE
			  ,CODE_NAME
		FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE =  #{S_COMP_CODE}
		AND MAIN_CODE = 'P003'
		AND SUB_CODE != '$'
		AND SUB_CODE IN ('1090', '2090')
    </select>

    <select id="pmr101ukrvServiceImpl.selectDetailList10" parameterType="Map" resultType="rMap">		<!--자재불량내역 조회 -->
		/* pmr101ukrvServiceImpl.selectDetailList10 */

		DECLARE         @CompCode          NVARCHAR(08)
                          , @DivCode           NVARCHAR(08)
                          , @WkordNum          NVARCHAR(20)
        				  , @UserId            NVARCHAR(100) /* 사용자ID */
                  		  , @RefItem           NVARCHAR(01) /* 명칭 참조 유형  */


            SET @CompCode  = #{S_COMP_CODE}
            SET @DivCode  	= #{DIV_CODE}
            SET @WkordNum = #{WKORD_NUM}
            SET @UserId   	= #{S_USER_ID}

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, '')

			SELECT A.COMP_CODE
					  ,A.DIV_CODE
					  ,A.ITEM_CODE
					  ,CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
				                             WHEN @RefItem = '1' THEN B.ITEM_NAME1
				                             WHEN @RefItem = '2' THEN B.ITEM_NAME2
				               ELSE B.ITEM_NAME
				        END                         AS ITEM_NAME
			       	  , B.SPEC
					  , B.STOCK_UNIT
					  , A.WKORD_NUM
					  , A1.WORK_SHOP_CODE
					  , B1.CUSTOM_CODE
					  , B2.CUSTOM_NAME
					  <foreach collection="badQtyArray" item="item" separator="" close="" open="">
			 		  ,0 AS BAD_${item}
					  </foreach>
					  ,'' AS PRODT_NUM
					  ,A.SEQ
					  ,'N' AS SAVE_FLAG
					  <foreach collection="badRemarkArray" item="item" separator="" close="" open="">
			 		  ,'' AS REMARK_${item}
					  </foreach>
			FROM PMP200T A
			LEFT JOIN PMP100T A1 ON A.COMP_CODE    = A1.COMP_CODE
										  AND A.DIV_CODE	    = A1.DIV_CODE
										  AND A.WKORD_NUM	= A1.WKORD_NUM
										  AND A1.LINE_END_YN = 'Y'
			INNER JOIN BPR100T B ON A.COMP_CODE		= B.COMP_CODE
										AND A.ITEM_CODE		= B.ITEM_CODE
			INNER JOIN BPR200T B1 ON A.COMP_CODE	= B1.COMP_CODE
								  		AND A.DIV_CODE	= B1.DIV_CODE
								  		AND A.ITEM_CODE	= B1.ITEM_CODE
			LEFT JOIN BCM100T B2 ON B1.COMP_CODE = B2.COMP_CODE
											AND B1.CUSTOM_CODE = B2.CUSTOM_CODE
			LEFT JOIN BSA100T C  ON A.COMP_CODE = C.COMP_CODE
										 AND C.MAIN_CODE = 'B020'
										 AND C.SUB_CODE	 != '$'
										 AND C.SUB_CODE  = B1.ITEM_ACCOUNT
			WHERE A.COMP_CODE = @CompCode
			  	AND A.DIV_CODE = @DivCode
			  	AND A.WKORD_NUM = @WkordNum
			  	AND ((CASE WHEN ISNULL(C.REF_CODE3,'') = '' THEN B1.ITEM_ACCOUNT
					 ELSE C.REF_CODE3
					END) IN ('40','50'))
			 ORDER BY A.COMP_CODE, A.DIV_CODE, A.SEQ, A.ITEM_CODE

    </select>
    <select id="pmr101ukrvServiceImpl.selectDetailList10_2" parameterType="Map" resultType="rMap">		<!--자재불량내역 조회 -->
		/* pmr101ukrvServiceImpl.selectDetailList10_2 */
		DECLARE         @CompCode          NVARCHAR(08)
                          , @DivCode           NVARCHAR(08)
                          , @WkordNum          NVARCHAR(20)
        				  , @UserId            NVARCHAR(100) /* 사용자ID */
                  		  , @RefItem           NVARCHAR(01) /* 명칭 참조 유형  */
						  , @ProdtNum           NVARCHAR(20) /* 실적번호  */

            SET @CompCode  = #{S_COMP_CODE}
            SET @DivCode  	= #{DIV_CODE}
            SET @WkordNum = #{WKORD_NUM}
            SET @UserId   	= #{S_USER_ID}
			SET @ProdtNum   	= #{PRODT_NUM}
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, '')

			SELECT A.COMP_CODE
					  ,A.DIV_CODE
					  ,A.ITEM_CODE
					  ,CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
				                             WHEN @RefItem = '1' THEN B.ITEM_NAME1
				                             WHEN @RefItem = '2' THEN B.ITEM_NAME2
				               ELSE B.ITEM_NAME
				        END                         AS ITEM_NAME
			       	  , B.SPEC
					  , B.STOCK_UNIT
					  , A.WKORD_NUM
					  , A1.WORK_SHOP_CODE
					  <foreach collection="badQtyArray" item="item" separator="" close="" open="">
			 		  ,SUM(CASE WHEN P.BAD_CODE = ${item} THEN P.BAD_Q ELSE 0 END) AS BAD_${item}
					  </foreach>
					  , P.PRODT_NUM
					  , ISNULL(P.SEQ, A.SEQ) AS SEQ
					  ,(SELECT MAX(CUSTOM_CODE)
											FROM BIV150T
											WHERE COMP_CODE = A.COMP_CODE
											AND DIV_CODE = A.DIV_CODE
											AND ITEM_CODE = A.ITEM_CODE
											AND LOT_NO = P1.LOT_NO) AS CUSTOM_CODE
					  , uniLITE.fnCustNameComp(A.COMP_CODE
														   , @UserId
														   ,(SELECT MAX(CUSTOM_CODE)
															FROM BIV150T
															WHERE COMP_CODE = A.COMP_CODE
															AND DIV_CODE = A.DIV_CODE
															AND ITEM_CODE = A.ITEM_CODE
															AND LOT_NO = P1.LOT_NO)
														   ) AS CUSTOM_NAME
					,'U' AS SAVE_FLAG
					  <foreach collection="badRemarkArray" item="item" separator="" close="" open="">
						, MAX(CASE WHEN BAD_CODE = ${item} THEN P.REMARK
					               ELSE ''
					           END) AS REMARK_${item}
					  </foreach>

			FROM PMP200T A
			LEFT JOIN PMP100T A1 ON A.COMP_CODE    = A1.COMP_CODE
										  AND A.DIV_CODE	    = A1.DIV_CODE
										  AND A.WKORD_NUM	= A1.WKORD_NUM
										  AND A1.LINE_END_YN = 'Y'
			INNER JOIN BPR100T B ON A.COMP_CODE		= B.COMP_CODE
										AND A.ITEM_CODE		= B.ITEM_CODE
			INNER JOIN BPR200T B1 ON A.COMP_CODE	= B1.COMP_CODE
								  		AND A.DIV_CODE	= B1.DIV_CODE
								  		AND A.ITEM_CODE	= B1.ITEM_CODE
			LEFT JOIN BSA100T C  ON A.COMP_CODE = C.COMP_CODE
										 AND C.MAIN_CODE = 'B020'
										 AND C.SUB_CODE	 != '$'
										 AND C.SUB_CODE  = B1.ITEM_ACCOUNT
			LEFT JOIN PMR510T P  ON A.COMP_CODE = P.COMP_CODE
								AND A.DIV_CODE = P.DIV_CODE
								AND P.PRODT_NUM = @ProdtNum
								AND A.ITEM_CODE = P.ITEM_CODE
		   LEFT JOIN BCM100T P2 ON P.COMP_CODE = P2.COMP_CODE
										AND P.CUSTOM_CODE = P2.CUSTOM_CODE
				LEFT JOIN	(SELECT COMP_CODE
							  , DIV_CODE
							  , ORDER_NUM
							  , BASIS_NUM
							  , ITEM_CODE
							  , LOT_NO
						FROM    BTR100T
						WHERE COMP_CODE = @CompCode
						AND   DIV_CODE  = @DivCode
						AND   ORDER_NUM = @WkordNum
						AND   BASIS_NUM = @ProdtNum
						AND   INOUT_TYPE = '2'
						GROUP BY COMP_CODE
								, DIV_CODE
								, ORDER_NUM
								, BASIS_NUM
								, ITEM_CODE
								, LOT_NO) P1 ON P1.COMP_CODE = A.COMP_CODE
											AND P1.DIV_CODE = A.DIV_CODE
											AND P1.ITEM_CODE = A.ITEM_CODE
			WHERE A.COMP_CODE   = @CompCode
			  	AND A.DIV_CODE 	    = @DivCode
			  	AND A.WKORD_NUM  = @WkordNum
			  	AND C.REF_CODE3 IN ('40','50')
			GROUP BY A.COMP_CODE
						, A.DIV_CODE
						, A.WKORD_NUM
						, A.ITEM_CODE
						, A.SEQ
						, P.PRODT_NUM
						, P.SEQ
						,CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
								 WHEN @RefItem = '1' THEN B.ITEM_NAME1
								 WHEN @RefItem = '2' THEN B.ITEM_NAME2
								ELSE B.ITEM_NAME
							END
					   , B.SPEC
					   , B.STOCK_UNIT
					   , A1.WORK_SHOP_CODE
					   , P1.LOT_NO
					   , P.CUSTOM_CODE
					   , P2.CUSTOM_NAME
					   , P.COMP_CODE
					   , B1.CUSTOM_CODE
			ORDER BY 	A.COMP_CODE, A.DIV_CODE, A.SEQ, A.ITEM_CODE
    </select>

    <update id="pmr101ukrvServiceImpl.updateDetail10" parameterType="Map">
		/* pmr101ukrvServiceImpl.updateDetail10 */
		MERGE INTO PMR510T    A
        USING ( SELECT #{S_COMP_CODE}       AS COMP_CODE
                    		 , #{DIV_CODE}          	   AS DIV_CODE
					 		 , #{PRODT_NUM}           AS PRODT_NUM
                     		 , #{ITEM_CODE}            AS ITEM_CODE
                     		 , #{BAD_CODE}			    AS BAD_CODE
              )                                              B
                                                                    ON A.COMP_CODE      = B.COMP_CODE
                                                                   AND A.DIV_CODE         = B.DIV_CODE
                                                                   AND A.PRODT_NUM      = B.PRODT_NUM
                                                                   AND A.ITEM_CODE		  = B.ITEM_CODE
																   AND A.BAD_CODE		  = B.BAD_CODE
        WHEN MATCHED THEN
                UPDATE
                    SET BAD_Q       		   = #{BAD_Q}
                      	, UPDATE_DB_USER  = #{S_USER_ID}
                      	, UPDATE_DB_TIME  = GETDATE()

        WHEN NOT MATCHED THEN
               INSERT  (
			  		 COMP_CODE
					,DIV_CODE
					,PRODT_NUM
					,SEQ
					,ITEM_CODE
					,BAD_CODE
					,WORK_SHOP_CODE
					,PRODT_DATE
					,WKORD_NUM
					,BAD_Q
					,REMARK
					,CUSTOM_CODE
					,UPDATE_DB_USER
					,UPDATE_DB_TIME
					,INSERT_DB_USER
					,INSERT_DB_TIME
					,TEMPC_01
					,TEMPC_02
					,TEMPC_03
					,TEMPN_01
					,TEMPN_02
					,TEMPN_03
		) VALUES (
			   #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{PRODT_NUM}
			 ,#{SEQ}
			 ,#{ITEM_CODE}
			 ,#{BAD_CODE}
			 ,#{WORK_SHOP_CODE}
			 ,#{PRODT_DATE}
			 ,#{WKORD_NUM}
			 ,#{BAD_Q}
			 ,#{REMARK}
			 ,#{CUSTOM_CODE}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
			 ,#{TEMPC_01}
			 ,#{TEMPC_02}
			 ,#{TEMPC_03}
			 ,#{TEMPN_01}
			 ,#{TEMPN_02}
			 ,#{TEMPN_03}
		);
	</update>

	<update id="pmr101ukrvServiceImpl.updateProductionResultRemark" parameterType="Map">
        --pmr101ukrvServiceImpl.updateProductionResultRemark
        UPDATE PMR100T
           SET    REMARK    			 = #{REMARK}
           			,MAN_CNT           = #{MAN_CNT}
					,FR_TIME             = #{FR_TIME}
					,TO_TIME            = #{TO_TIME}
					,MAN_HOUR          = #{MAN_HOUR}
					,CAPACITY_Q        = #{CAPACITY_Q}
					,HARDNESS_Q        = #{HARDNESS_Q}
					,DAY_NIGHT         = #{DAY_NIGHT}
					,PRODT_PRSN       = #{PRODT_PRSN}
					,EQUIP_CODE       = #{EQUIP_CODE}
					,PRODT_DATE       = #{PRODT_DATE}
					,WORK_Q       	   = #{WORK_Q}
             	, UPDATE_DB_USER   = #{S_USER_ID}
             	, UPDATE_DB_TIME   = GETDATE()
         WHERE COMP_CODE      	= #{S_COMP_CODE}
          	 AND DIV_CODE       	  	= #{DIV_CODE}
           	AND PRODT_NUM        	= #{PRODT_NUM}
    </update>
	<delete id="pmr101ukrvServiceImpl.deleteDetail10" parameterType="Map">		/* 제조이력 삭제 */
		 /* pmr101ukrvServiceImpl.deleteDetail10 */
		 DELETE FROM PMR510T
		  WHERE COMP_CODE = #{S_COMP_CODE}
			AND DIV_CODE  = #{DIV_CODE}
			AND PRODT_NUM = #{PRODT_NUM}
			AND ITEM_CODE = #{ITEM_CODE}
	</delete>

	<insert id="pmr101ukrvServiceImpl.insertDetail9" parameterType="Map">		/*생산실적 특이사항등록 추가 */
	INSERT INTO PMR410T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PRODT_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , CTL_CD1
		 , TROUBLE_TIME
		 , TROUBLE
		 , TROUBLE_CS
		 , ANSWER
		 , SEQ
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE
		 , FR_TIME
		 , TO_TIME)
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PRODT_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{CTL_CD1}
		 , #{TROUBLE_TIME}
		 , #{TROUBLE}
		 , #{TROUBLE_CS}
		 , #{ANSWER}
		 , #{SEQ}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE}
		 , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{FR_TIME} AS smalldatetime), 108),1,8))
	     , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{TO_TIME} AS smalldatetime), 108),1,8)))
	</insert>

	<update id="pmr101ukrvServiceImpl.updateDetail9" parameterType="Map">        /* 생산실적 특기사항등록 수정 */
         --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav4] Query1
         UPDATE PMR410T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , CTL_CD1        			= #{CTL_CD1}
              , TROUBLE_TIME   		= #{TROUBLE_TIME}
              , TROUBLE        			= #{TROUBLE}
              , TROUBLE_CS     		= #{TROUBLE_CS}
              , ANSWER         		= #{ANSWER}
              , UPDATE_DB_USER 	= #{S_USER_ID}
              , UPDATE_DB_TIME 	= GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND SEQ            = #{SEQ}
            AND COMP_CODE      = #{S_COMP_CODE}
            AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="pmr101ukrvServiceImpl.deleteDetail9" parameterType="Map">        /* 특이사항등록 삭제 */
        --pmr101ukrv.Cpmr101ukrv[fnPmr100Sav4] Query1
        DELETE FROM PMR410T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND SEQ            = #{SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
	</delete>

	<select id="pmr101ukrvServiceImpl.mainReport_label_afterProg" parameterType="Map" resultType="rMap">
		/*pmr101ukrvServiceImpl.mainReport_label_afterProg*/
	  BEGIN

		   WITH BOM(CD_ITEM, CD_MATL, LEVEL, COMP_CODE, DIV_CODE)
		   AS
		   (
		      SELECT   A.PROD_ITEM_CODE
		               ,A.CHILD_ITEM_CODE
		               ,1
					   ,A.COMP_CODE
					   ,A.DIV_CODE
		      FROM BPR500T A
		      WHERE A.COMP_CODE = #{COMP_CODE}
			    AND A.DIV_CODE  = #{DIV_CODE}
				AND A.PROD_ITEM_CODE = #{SOF_ITEM_CODE}

			  UNION ALL

			  SELECT  A.PROD_ITEM_CODE
		             ,A.CHILD_ITEM_CODE
		             ,B.LEVEL + 1
					 ,A.COMP_CODE
					 ,A.DIV_CODE
		      FROM BPR500T A
		      INNER JOIN BOM B ON A.PROD_ITEM_CODE = B.CD_MATL
							  AND A.DIV_CODE  = B.DIV_CODE
			  WHERE A.COMP_CODE = #{COMP_CODE}
				AND A.DIV_CODE  = #{DIV_CODE}
		   )
		   SELECT TOP 1
		   		  A.CD_ITEM AS AFTER_PROG_ITEM_CODE
				 ,A.CD_MATL AS CHILD_ITEM_CODE
				 ,A.LEVEL
				 ,A.COMP_CODE
				 ,A.DIV_CODE
				 ,B.CODE_NAME AS  AFTER_PROG_NAME
				 ,(SELECT CUSTOM_NAME FROM BCM100T WHERE COMP_CODE = A.COMP_CODE
													 AND CUSTOM_CODE = (SELECT TOP 1 CUSTOM_CODE
																		FROM MPO200T TT WHERE TT.COMP_CODE = A.COMP_CODE
																						AND TT.SO_NUM = #{ORDER_NUM}
																						AND TT.SO_SEQ = #{ORDER_SEQ}
																						AND TT.ITEM_CODE = A.CD_ITEM
																		ORDER BY TT.INSERT_DB_TIME DESC
																						)) AS AFTER_PROG_CUSTOM_NAME
		   FROM BOM A LEFT JOIN BSA100T B ON A.COMP_CODE = B.COMP_CODE
									     AND B.MAIN_CODE = 'Z040'
										 AND B.SUB_CODE  != '$'
										 AND B.SUB_CODE   = SUBSTRING(A.CD_ITEM, 11,1)

		   WHERE CD_MATL = #{ITEM_CODE}

		END
	</select>

	<select id="pmr101ukrvServiceImpl.mainReport_Pmplabel" parameterType="Map" resultType="rMap">
		/*pmr101ukrvServiceImpl.mainReport_Pmplabel*/
		/*작업지시라벨*/
	    /*라벨 출력 개수 관련 처리 */
	   DECLARE @PRINT_CNT INT
	   DECLARE @I INT
	   DECLARE @J INT
	   DECLARE @PRODT_NUM NVARCHAR(20)
	   SET @I = 1
	   SET @J = #{PAGE_START}
	   SET @PRODT_NUM = #{WKORD_NUM}
	   SET @PRINT_CNT = #{PRINT_CNT}
	   CREATE TABLE #TEMP_PRINT(
		PRODT_NUM NVARCHAR(20),
		PAGE_NUM INT NULL
	   )
	   WHILE @I <![CDATA[<=]]> @PRINT_CNT
	   BEGIN
		    INSERT INTO #TEMP_PRINT
			(
				PRODT_NUM,
				PAGE_NUM
			)
			VALUES(
				@PRODT_NUM,
				@J
			)
	    	SET @I = @I + 1
	    	SET @J = @J + 1
	   END

	   SELECT A.ITEM_CODE
		      ,LTRIM(RTRIM(C.ITEM_NAME)) AS ITEM_NAME
			  ,ISNULL(A.LOT_NO, '') AS LOT_NO



			<if test="GUBUN == &quot;SHIN&quot;">
			  ,#{PRODT_DATE} AS PRODT_DATE		--포장일, 생산일
			  ,#{PRODT_QTY} AS GOOD_WORK_Q
			</if>

			<if test="GUBUN == &quot;STANDARD&quot;">
			  ,PRODT_WKORD_DATE AS PRODT_DATE -- 작업지시일
			  ,A.WKORD_Q AS GOOD_WORK_Q
			</if>
			  ,A.WKORD_Q
			  ,R2.CODE_NAME AS INSPEC_METHOD
			  ,C.STOCK_UNIT
			  ,A.PRODT_WKORD_DATE --작업지시일
			  ,C.ITEM_LEVEL1
			  ,C1.ITEM_ACCOUNT
			  ,A.WKORD_NUM
			  ,R3.CODE_NAME AS PRODT_PRSN_NM
			  , SUBSTRING(A.PRODT_WKORD_DATE,1,4) + REPLICATE('0', 3 - len(convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.PRODT_WKORD_DATE)))) + convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.PRODT_WKORD_DATE)) AS PRODT_WEEK --생산주차
			  ,A.EXPIRATION_DATE    		  			-- 보관기한
			  ,A.SO_NUM AS ORDER_NUM   				    -- 수주번호
			  ,A.SO_SEQ AS ORDER_SEQ                    -- 수주순번
			  ,R7.CUSTOM_NAME   AS SOF_CUSTOM_NAME		-- 수주정보의 거래처
			  ,R5.ITEM_CODE 	AS SOF_ITEM_CODE  		-- 수주품목
			  ,R8.ITEM_NAME 	AS SOF_ITEM_NAME  		-- 수주품목명
			  ,R9.CUSTOM_ITEM_CODE 			  			-- 수주품목의 거래처 품목코드
			  ,R9.CUSTOM_ITEM_NAME 			  			-- 수주품목의 거래처 품목명
			  ,@PRINT_CNT AS PRINT_CNT
			  ,R8.SPEC AS SOF_ITEM_SPEC
			  ,ISNULL(R11.CODE_NAME,'') + '/' + ISNULL(R10.CODE_NAME,'') AS COLORMATERIAL
			  ,R4.PAGE_NUM
			  ,CASE WHEN #{KEY_IN_ITEM_CODE} IS NULL	THEN R5.ITEM_CODE ELSE #{KEY_IN_ITEM_CODE} END AS KEY_IN_ITEM_CODE
			  ,CASE WHEN #{KEY_IN_ITEM_NAME} IS NULL 	THEN
				  		CASE WHEN ISNULL(R8.ITEM_NAME1,'') = '' THEN ISNULL(R9.CUSTOM_ITEM_NAME, R8.ITEM_NAME)
							 ELSE ISNULL(R8.ITEM_NAME1,'') END
			        WHEN #{KEY_IN_ITEM_NAME} IS NOT NULL 	THEN #{KEY_IN_ITEM_NAME}
			   END 		 AS KEY_IN_ITEM_NAME
			  ,CASE WHEN #{KEY_IN_PART_ITEM_NAME} IS NULL 	THEN LTRIM(RTRIM(C.ITEM_NAME2)) ELSE #{KEY_IN_PART_ITEM_NAME}  END AS KEY_IN_PART_ITEM_NAME
			  ,#{KEY_IN_WEIGHT}	     AS KEY_IN_WEIGHT
			  ,#{KEY_IN_MANAGE_NUM}  AS KEY_IN_MANAGE_NUM
			  ,#{KEY_IN_PRODT_NUM}   AS KEY_IN_PRODT_NUM
			  ,R5.DVRY_CUST_CD
			  ,CASE WHEN ISNULL(R12.DVRY_CUST_NM, '') = '' THEN R7.CUSTOM_NAME ELSE R12.DVRY_CUST_NM END DVRY_CUSTOM_NAME
		FROM PMP100T A
	    INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE 	 = C.COMP_CODE
										  AND A.ITEM_CODE 	 = C.ITEM_CODE
	    INNER JOIN BPR200T C1 WITH (NOLOCK) ON A.COMP_CODE 	 = C1.COMP_CODE
										  AND  A.DIV_CODE  	 = C1.DIV_CODE
										  AND  A.ITEM_CODE 	 = C1.ITEM_CODE
	    LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE 	 = A.COMP_CODE
										 AND R2.MAIN_CODE 	 = 'Q007'
										 AND R2.SUB_CODE  	 = C1.INSPEC_METH_PRODT
		LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE 	 = A.COMP_CODE
										 AND R3.MAIN_CODE 	 = 'P505'
										 AND R3.SUB_CODE  	 = A.PRODT_PRSN
		LEFT JOIN SOF110T R5 WITH(NOLOCK) ON R5.COMP_CODE	 = A.COMP_CODE
										-- AND R5.OUT_DIV_CODE = A.DIV_CODE
										 AND R5.ORDER_NUM    = A.SO_NUM
										 AND R5.SER_NO       = A.SO_SEQ
		LEFT JOIN SOF100T R6 WITH(NOLOCK) ON R6.COMP_CODE	 = R5.COMP_CODE
										 AND R6.DIV_CODE	 = R5.DIV_CODE
										 AND R6.ORDER_NUM    = R5.ORDER_NUM
		LEFT JOIN BCM100T R7 WITH(NOLOCK) ON R7.COMP_CODE    = R6.COMP_CODE  --수주의 거래처정보
										 AND R7.CUSTOM_CODE  = R6.CUSTOM_CODE
		LEFT JOIN BPR100T R8 WITH(NOLOCK) ON R8.COMP_CODE	 = R5.COMP_CODE  --수주품목정보
										 AND R8.ITEM_CODE	 = R5.ITEM_CODE
		LEFT JOIN BPR300T R9 WITH(NOLOCK) ON R9.COMP_CODE    = R5.COMP_CODE  --수주품목의 거래처 품목 정보
										 AND R9.DIV_CODE     = R5.DIV_CODE
										 AND R9.ITEM_CODE    = R5.ITEM_CODE
										 AND R9.CUSTOM_CODE  = R6.CUSTOM_CODE
										 AND R9.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
																   FROM   BPR300T
																   WHERE  COMP_CODE   = R9.COMP_CODE
																	 AND  DIV_CODE    = R9.DIV_CODE
																	 AND  ITEM_CODE   = R9.ITEM_CODE
																	 AND  CUSTOM_CODE = R9.CUSTOM_CODE)
		LEFT JOIN BSA100T R10 WITH(NOLOCK) ON R10.COMP_CODE = A.COMP_CODE
									      AND R10.MAIN_CODE = 'Z021'
										  AND R10.SUB_CODE != '$'
										  AND R10.SUB_CODE  = SUBSTRING(A.ITEM_CODE,6,2)
		LEFT JOIN BSA100T R11 WITH(NOLOCK) ON R11.COMP_CODE = A.COMP_CODE
									      AND R11.MAIN_CODE = 'Z050'
										  AND R11.SUB_CODE != '$'
										  AND R11.SUB_CODE  = SUBSTRING(A.ITEM_CODE,12,2)
		LEFT  JOIN SCM100T R12 WITH (NOLOCK) ON A.COMP_CODE       = R12.COMP_CODE
											AND R6.CUSTOM_CODE    = R12.CUSTOM_CODE
											AND R5.DVRY_CUST_CD   = CAST(R12.DVRY_CUST_SEQ AS NVARCHAR(80))
		LEFT JOIN #TEMP_PRINT R4 WITH (NOLOCK) ON R4.PRODT_NUM = A.WKORD_NUM
	    WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND   A.DIV_CODE  = #{DIV_CODE}
		AND   A.WKORD_NUM = #{WKORD_NUM}
		AND   A.LINE_END_YN = 'Y'

	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM

	     DROP TABLE #TEMP_PRINT
	</select>
</mapper>