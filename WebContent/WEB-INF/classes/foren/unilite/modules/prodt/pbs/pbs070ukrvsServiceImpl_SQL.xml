<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pbs070ukrvsService">
	<select id="pbs070ukrvsService.selectList1" parameterType="Map" resultType="rMap">
		SELECT HOLY_MONTH
		     , HOLY_DAY
		     , REMARK
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		  FROM BCM410T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		 ORDER BY CAST(HOLY_MONTH AS INT)
	</select>

	<select id="pbs070ukrvsService.checkDate" parameterType="Map" resultType="rMap">
		SELECT HOLY_MONTH
		     , HOLY_DAY
		     , REMARK
		  FROM BCM410T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>

	<select id="pbs070ukrvsService.checkCompCode" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE, A.COMP_NAME
		FROM              BOR100T   A  WITH (NOLOCK)
		       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
		                                            AND M1.MAIN_CODE    = 'B107'
		                                            AND M1.SUB_CODE     = '20'
		WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<insert id="pbs070ukrvsService.insertDetail1" parameterType="Map">    /* 추가 */
		INSERT INTO BCM410T
		     ( HOLY_MONTH
		     , HOLY_DAY
		     <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK
		     </if>
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     )
		VALUES
		     ( #{HOLY_MONTH}
		     , #{HOLY_DAY}
		     <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , #{REMARK}
		     </if>
		     , #{S_USER_ID}
		     , getDate()
		     , #{S_COMP_CODE}
		     )
	</insert>

	<update id="pbs070ukrvsService.updateDetail1" parameterType="Map">      /* 수정 */
		UPDATE BCM410T
		   SET
		      <if test="@foren.Ognl@isExists(_parameter, 'REMARK')">
		       REMARK = #{REMARK}
		      </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE HOLY_MONTH     = #{HOLY_MONTH}
		   AND HOLY_DAY       = #{HOLY_DAY}
		   AND COMP_CODE      = #{S_COMP_CODE}
	</update>

	<delete id="pbs070ukrvsService.deleteDetail1" parameterType="Map">      /* 삭제 */
		DELETE FROM BCM410T
		 WHERE HOLY_MONTH = #{HOLY_MONTH}
		   AND HOLY_DAY   = #{HOLY_DAY}
		   AND COMP_CODE  = #{S_COMP_CODE}
	</delete>



	<select id="pbs070ukrvsService.selectList2" parameterType="Map" resultType="rMap">
		SELECT HOLY_MONTH
		     , HOLY_DAY
		     , REMARK
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     , HOLY_MONTH  AS HOLY_MONTH_RENDER
		     , HOLY_DAY    AS HOLY_DAY_RENDER
		  FROM BCM410T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		 ORDER BY CAST(HOLY_MONTH AS INT)
	</select>

	<select id="pbs070ukrvsService.checkYear" parameterType="Map" resultType="rMap">
		SELECT CAL_TYPE
		  FROM BCM420T WITH(NOLOCK)
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND CAL_TYPE        = #{CAL_TYPE}
		   AND LEFT(CAL_NO, 4) = #{START_DATE}
	</select>

	<update id="pbs070ukrvsService.updateDetail2" parameterType="Map">    /* 추가 */
		BEGIN
		   DECLARE @CompCode        NVARCHAR(08)
		         , @CalYear         NVARCHAR(04)
		         , @CalType         NVARCHAR(02)
		         , @HolyType        NVARCHAR(02)
		         , @UserId          NVARCHAR(100)
		         , @WeekDay         INTEGER
		         , @Julian          INTEGER
		         , @WorkDay         INTEGER
		         , @CalCount        INTEGER
		         , @TempData        INTEGER
		         , @StartDate       NVARCHAR(08)
		         , @EndDate         NVARCHAR(08)
		         , @HolyDay1        INTEGER
		         , @HolyDay2        INTEGER
		         , @HolyDay3        INTEGER
		         , @HolyDay4        INTEGER
		         , @HolyDay5        INTEGER
		         , @HolyDay6        INTEGER
		         , @HolyDay7        INTEGER
		         , @dCalDate        SMALLDATETIME
		         , @dPrevYear0101   SMALLDATETIME
		         , @dPrevYear1231   SMALLDATETIME
		         , @dCurrYear0101   SMALLDATETIME
		         , @dCurrYear1231   SMALLDATETIME
		         , @WeekStartDate   SMALLDATETIME
		         , @WeekEndDate     SMALLDATETIME
		         , @sCurrYear       NVARCHAR(04)
		         , @iPrevWeek       INTEGER
		         , @iCurrWeek       INTEGER
		         , @iLastWeek       INTEGER
		         , @BasisWeekDay    INTEGER
		         , @BasisWeekDay_1  INTEGER
		         , @sFirstFlag      NVARCHAR(1)

		   SET NOCOUNT ON
		   SET ARITHABORT ON

		   SET @CompCode = #{S_COMP_CODE}
		   SET @CalType  = #{CAL_TYPE}
		   SET @CalYear  = #{START_DATE}
		   SET @UserID   = #{S_USER_ID}

		   SELECT TOP 1 @BasisWeekDay_1 = SUB_CODE
		     FROM BSA100T WITH(NOLOCK)
		    WHERE COMP_CODE = #{S_COMP_CODE}
		      AND MAIN_CODE = 'B604'
		      AND SUB_CODE != '$'
		      AND REF_CODE1 = 'Y'

		   SET @BasisWeekDay =  @BasisWeekDay_1  /* B604 SUB_CODE 값 */

		   DELETE BCM400T
		    WHERE COMP_CODE = @CompCode
		      AND CAL_TYPE  = @CalType
		      AND CAL_DATE  BETWEEN @CalYear + '0101' AND @CalYear + '1231'

		   DELETE BCM420T
		    WHERE COMP_CODE = @CompCode
		      AND CAL_TYPE  = @CalType
		      AND (LEFT(START_DATE,4) = @CalYear OR LEFT(END_DATE,4) = @CalYear)

		   SET @Julian   = 0
		   SET @WorkDay  = 0
		   SET @CalCount = 0
		   SET @TempData = 0
		   SET @HolyDay1 = 0
		   SET @HolyDay2 = 0
		   SET @HolyDay3 = 0
		   SET @HolyDay4 = 0
		   SET @HolyDay5 = 0
		   SET @HolyDay6 = 0
		   SET @HolyDay7 = 0
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY1)">
		   SET @HolyDay1 = #{HOLYDAY1}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY2)">
		   SET @HolyDay2 = #{HOLYDAY2}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY3)">
		   SET @HolyDay3 = #{HOLYDAY3}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY4)">
		   SET @HolyDay4 = #{HOLYDAY4}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY5)">
		   SET @HolyDay5 = #{HOLYDAY5}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY6)">
		   SET @HolyDay6 = #{HOLYDAY6}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(HOLYDAY7)">
		   SET @HolyDay7 = #{HOLYDAY7}
		   </if>


		   SET @dCalDate = CONVERT(SMALLDATETIME, @CalYear + '0101')

		   /*주차계산*/
		   SET @dCurrYear0101 = CONVERT(SMALLDATETIME, @CalYear + '0101')
		   SET @dCurrYear1231 = CONVERT(SMALLDATETIME, @CalYear + '1231')
		   SET @dPrevYear0101 = DATEADD(YEAR,-1,@dCurrYear0101)
		   SET @dPrevYear1231 = DATEADD(YEAR,-1,@dCurrYear1231)

		   SET @iPrevWeek = (CASE WHEN DATEPART(WEEKDAY, @dPrevYear0101) &lt;= (@BasisWeekDay + 3)
		                          THEN (CASE WHEN DATEPART(WEEKDAY, @dPrevYear1231) &lt; (@BasisWeekDay + 3)
		                                     THEN 52
		                                     ELSE 53
		                                 END)
		                          ELSE (CASE WHEN DATEPART(WEEKDAY, @dPrevYear1231) &lt; (@BasisWeekDay + 3)
		                                     THEN 51
		                                     ELSE 52
		                                 END)
		                      END)

		   SET @iLastWeek = (CASE WHEN DATEPART(WEEKDAY, @dCurrYear0101) &lt;= (@BasisWeekDay + 3)
		                          THEN (CASE WHEN DATEPART(WEEKDAY, @dCurrYear1231) &lt; (@BasisWeekDay + 3)
		                                     THEN 52
		                                     ELSE 53
		                                 END)
		                          ELSE (CASE WHEN DATEPART(WEEKDAY, @dCurrYear1231) &lt; (@BasisWeekDay + 3)
		                                     THEN 51
		                                     ELSE 52
		                                 END)
		                      END)

		   IF DATEPART(WEEKDAY, @dCurrYear0101) &lt;= (@BasisWeekDay + 3)
		   BEGIN
		      SET @sFirstFlag= 'T'
		      SET @sCurrYear = @CalYear
		      SET @iCurrWeek = 1
		   END
		   ELSE
		   BEGIN
		      SET @sFirstFlag= 'F'
		      SET @sCurrYear = CONVERT(NVARCHAR(04), DATEADD(YEAR,-1,@dCurrYear0101), 112)
		      SET @iCurrWeek = @iPrevWeek
		   END

		   SET @WeekStartDate = CONVERT(NVARCHAR(8),DATEADD(DAY,@BasisWeekDay - DATEPART(WEEKDAY,@dCalDate),@dCalDate),112)
		   SET @WeekEndDate   = CONVERT(NVARCHAR(8),DATEADD(DAY,6,@WeekStartDate),112)

		   WHILE (@dCalDate &lt;= @dCurrYear1231)
		   BEGIN
		      /* 요일구분(일요일을 기준으로 일-1,월-2 ... 금-6,토-7)    */
		      SET @WeekDay = DATEPART(WEEKDAY, @dCalDate)

		      /* 일수계산(일자가 증가할 때마다 더하기 1)    */
		      SET @Julian = @Julian + 1

		      /* 휴무구분(전일-2,반일-1,휴일-0)   */
		      SET @HolyType = 2
		      SET @HolyType = (CASE @WeekDay WHEN 7         THEN 1 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay1 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay2 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay3 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay4 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay5 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay6 THEN 0 ELSE @HolyType END)
		      SET @HolyType = (CASE @WeekDay WHEN @HolyDay7 THEN 0 ELSE @HolyType END)

		      /* 작업일수(휴일이 아닌 경우에 더하기 1) */
		      IF @HolyType != 0 SET @WorkDay = @WorkDay + 1

		      /* 생산칼렌더 정보 생성    */
		      INSERT INTO BCM400T
		           ( COMP_CODE, CAL_TYPE, CAL_DATE, CAL_NO, WEEK_DAY
		           , HOLY_TYPE, JULIAN  , WORK_DAY
		           , UPDATE_DB_USER
		           , UPDATE_DB_TIME)
		      VALUES
		           ( @CompCode
		           , @CalType
		           , CONVERT(NVARCHAR(8), @dCalDate, 112)
		           , @iCurrWeek
		           , @WeekDay
		           , @HolyType
		           , @Julian
		           , @WorkDay
		           , @UserId
		           , GETDATE())

		      /* 기간칼렌더 정보 생성    */
		      /* 월단위            */
		      IF @CalType = '1'
		      BEGIN
		         IF @TempData != DATEPART(MONTH, @dCalDate)
		         BEGIN
		            SET @CalCount = @CalCount + 1
		            SET @EndDate = CONVERT(NVARCHAR(8),DATEADD(DAY,-1,DATEADD(MONTH,1,@dCalDate)),112)
		            IF @EndDate &gt; @dCurrYear1231 SET @EndDate = @CalYear + '1231'

		            INSERT INTO BCM420T
		                 ( COMP_CODE, CAL_TYPE, CAL_NO, START_DATE, END_DATE
		                 , UPDATE_DB_USER
		                 , UPDATE_DB_TIME)
		            VALUES
		                 ( @CompCode
		                 , @CalType
		                 , @CalYear + RIGHT('000' + CONVERT(NVARCHAR(02),@CalCount),3)
		                 , CONVERT(NVARCHAR(8), @dCalDate, 112)
		                 , @EndDate
		                 , @UserId
		                 , GETDATE())

		            SET @TempData = DATEPART(MONTH, @dCalDate)
		         END
		      END

		      /* 순단위    */
		      ELSE IF @CalType = '2'
		      BEGIN
		         IF (@TempData % 10) = 0
		         BEGIN
		            SET @CalCount = @CalCount + 1

		            SET @EndDate = CONVERT(NVARCHAR(8),DATEADD(DAY,9,@dCalDate),112)
		            IF @EndDate &gt;  @dCurrYear1231 SET @EndDate = @CalYear + '1231'

		            INSERT INTO BCM420T
		                 ( COMP_CODE, CAL_TYPE, CAL_NO, START_DATE, END_DATE
		                 , UPDATE_DB_USER
		                 , UPDATE_DB_TIME)
		            VALUES
		                 ( @CompCode
		                 , @CalType
		                 , @CalYear + RIGHT('000' + CONVERT(NVARCHAR(03),@CalCount),3)
		                 , CONVERT(NVARCHAR(8), @dCalDate, 112)
		                 , @EndDate
		                 , @UserId
		                 , GETDATE())
		         END
		         SET @TempData = @TempData + 1
		      END

		      /* 주단위    */
		      ELSE IF @CalType = '3'
		      BEGIN
		         IF (DATEPART(WEEKDAY, @dCalDate) = @BasisWeekDay AND @sFirstFlag = 'T') OR @CalCount = 0
		         BEGIN
		            SET @CalCount = @CalCount + 1

		            INSERT INTO BCM420T
		                 ( COMP_CODE, CAL_TYPE, CAL_NO, START_DATE, END_DATE
		                 , UPDATE_DB_USER
		                 , UPDATE_DB_TIME)
		            VALUES
		                 ( @CompCode
		                 , @CalType
		                 , @sCurrYear + RIGHT('000' + CONVERT(NVARCHAR(02),@iCurrWeek),3)
		                 , CONVERT(NVARCHAR(8), @WeekStartDate, 112)
		                 , CONVERT(NVARCHAR(8), @WeekEndDate, 112)
		                 , @UserId
		                 , GETDATE())
		         END
		      END

		      /* 일단위    */
		      ELSE IF @CalType = '4'
		      BEGIN
		         SET @CalCount = @CalCount + 1

		         INSERT INTO BCM420T
		              ( COMP_CODE, CAL_TYPE, CAL_NO, START_DATE, END_DATE
		              , UPDATE_DB_USER
		              , UPDATE_DB_TIME)
		         VALUES
		              ( @CompCode
		              , @CalType
		              , @CalYear + RIGHT('000' + CONVERT(NVARCHAR(03),@CalCount),3)
		              , CONVERT(NVARCHAR(8), @dCalDate, 112)
		              , CONVERT(NVARCHAR(8), @dCalDate, 112)
		              , @UserId
		              , GETDATE())
		      END

		      /* 다음일자   */
		      SET @dCalDate = DATEADD(DAY,1,@dCalDate)

		      /* 주차계산   */
		      IF DATEPART(WEEKDAY, @dCalDate) = @BasisWeekDay
		      BEGIN
		         IF @sFirstFlag = 'T'
		         BEGIN
		            IF @iCurrWeek &lt; @iLastWeek
		               SET @iCurrWeek = @iCurrWeek + 1
		            ELSE
		            BEGIN
		               SET @iCurrWeek = 1
		               SET @sCurrYear = CONVERT(NVARCHAR(04), DATEADD(YEAR,1,@dCurrYear0101), 112)
		            END
		         END
		         ELSE
		         BEGIN
		            SET @sFirstFlag = 'T'
		            SET @sCurrYear  = @CalYear
		            SET @iCurrWeek  = 1
		         END

		         SET @WeekStartDate = CONVERT(NVARCHAR(8),DATEADD(DAY,@BasisWeekDay - DATEPART(WEEKDAY,@dCalDate),@dCalDate),112)
		         SET @WeekEndDate   = CONVERT(NVARCHAR(8),DATEADD(DAY,6,@WeekStartDate),112)
		      END
		   END

		   DECLARE @HolyMonth   NVARCHAR(02)
		        ,  @HolyDay     NVARCHAR(02)
		        ,  @Remark      NVARCHAR(500)


		     DECLARE DESIGNATED_HOLIDAY CURSOR FOR      /* 커서명 정의 */
		             SELECT (CASE WHEN LEN(HOLY_MONTH) = 1
		                          THEN '0' + HOLY_MONTH
		                          ELSE HOLY_MONTH
		                    END)                             AS HOLY_MONTH
		                    ,(CASE WHEN LEN(HOLY_DAY) = 1
		                          THEN '0' + HOLY_DAY
		                          ELSE HOLY_DAY
		                    END)                             AS HOLY_DAY
		                  , REMARK
		               FROM BCM410T
		              WHERE COMP_CODE = #{S_COMP_CODE}

		        OPEN DESIGNATED_HOLIDAY                     /* 커서 열기 */
		        FETCH NEXT FROM DESIGNATED_HOLIDAY  INTO @HolyMonth, @HolyDay, @Remark

		        WHILE(@@FETCH_STATUS = 0)
		        BEGIN
		             SELECT @HolyMonth  AS HOLY_MONTH
		                  , @HolyDay    AS HOLY_DAY
		                  , @Remark     AS REMARK

		             UPDATE BCM400T                                             /* UPDATE 1번 쿼리 */
		                SET HOLY_TYPE =   '0'
		                  , REMARK    =   @Remark
		                WHERE COMP_CODE = #{S_COMP_CODE}
		                AND CAL_DATE  =   #{START_DATE}+@HolyMonth+@HolyDay
		                AND CAL_TYPE  =   #{CAL_TYPE}

		             UPDATE BCM400T                                             /* UPDATE 2번 쿼리 */
		                SET WORK_DAY  = WORK_DAY - 1
		                WHERE COMP_CODE =  #{S_COMP_CODE}
		                AND CAL_DATE BETWEEN #{START_DATE}+@HolyMonth+@HolyDay
		                                 AND #{START_DATE}+'1231'
		                AND CAL_TYPE  = #{CAL_TYPE}

		            FETCH NEXT FROM DESIGNATED_HOLIDAY  INTO @HolyMonth, @HolyDay, @Remark
		        END

		        CLOSE DESIGNATED_HOLIDAY                    /* 커서 닫기 */
		        DEALLOCATE DESIGNATED_HOLIDAY               /* 커서 삭제 */

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF
		END
	</update>

	<delete id="pbs070ukrvsService.deleteDetail2_1" parameterType="Map">        /* 삭제 */
		DELETE BCM400T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CAL_TYPE  = #{CAL_TYPE}
		   AND CAL_DATE BETWEEN  #{START_DATE}+'0101'
		                    AND  #{START_DATE}+'1231'
	</delete>

	<delete id="pbs070ukrvsService.deleteDetail2_2" parameterType="Map">        /* 삭제 */
		DELETE BCM420T
		 WHERE COMP_CODE           = #{S_COMP_CODE}
		   AND CAL_TYPE            = #{CAL_TYPE}
		   AND (LEFT(START_DATE,4) = #{START_DATE} OR LEFT(END_DATE,4) = #{START_DATE})
	</delete>



	<select id="pbs070ukrvsService.getCalendarList" parameterType="Map" resultType="foren.unilite.modules.com.ext.CalendarModel">
	</select>

	<select id="pbs070ukrvsService.getEventList" parameterType="Map" resultType="HashMap">
		--pbs110ukrv.Cpbs110ukrv[fnPbs110QStd]Query01
		SELECT
		       ROW_NUMBER() OVER (ORDER BY CAL_DATE) AS id --ID(Carlendar Component 매핑)
		     , CAL_TYPE
		     , CAL_DATE  AS startDate           ---일자(Carlendar Component 매핑)
		     , CAL_DATE  AS endDate             ---일자(Carlendar Component 매핑)
		     , CAL_NO
		     , WEEK_DAY
		     , HOLY_TYPE
		     , CASE WHEN HOLY_TYPE = '2' THEN '전일'
		            WHEN HOLY_TYPE = '1' THEN '반일'
		            WHEN HOLY_TYPE = '0' THEN '휴일'
		       END  AS title
		     , CASE WHEN HOLY_TYPE = '2' THEN 'white-rectangular'
		            WHEN HOLY_TYPE = '1' THEN 'blue-rectangular'
		            WHEN HOLY_TYPE = '0' THEN 'red-rectangular'
		       END  AS calendarId
		     , JULIAN
		     , WORK_DAY
		     , REMARK
		  FROM BCM400T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CAL_DATE BETWEEN #{startDate}
		                    AND #{endDate}
		   AND CAL_TYPE  = #{CAL_TYPE}
		 ORDER   BY  CAL_DATE
	</select>

	<update id="pbs070ukrvsService.updateDetail3" parameterType="Map">
		DECLARE @CAL_DATE   NVARCHAR(8),
		        @HOLY_TYPE  NVARCHAR(1),
		        @WORK_CNT   NUMERIC(5)

		UPDATE BCM400T
		   SET HOLY_TYPE = #{HOLY_TYPE}
		     , REMARK    = #{REMARK}
		 WHERE CAL_DATE  = #{EX_DATE}
		   AND COMP_CODE = #{S_COMP_CODE}

		DECLARE #BCM400T_CUR CURSOR FOR     --커서 생성

		--pbs110ukrv.Cpbs110ukrv[fnPbs110Sav2]Query01
		SELECT  CAL_DATE
		      , HOLY_TYPE
		  FROM BCM400T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CAL_DATE BETWEEN LEFT(#{EX_DATE}, 4) + '0101'
		                    AND LEFT(#{EX_DATE}, 4) + '1231'
		 ORDER BY CAL_DATE

		 OPEN #BCM400T_CUR
		 FETCH FROM #BCM400T_CUR INTO   @CAL_DATE, @HOLY_TYPE
		
		 SET @WORK_CNT = 0
		 WHILE @@fetch_status = 0
		    BEGIN
		        IF(@HOLY_TYPE &gt; 0)
		        BEGIN
		           SET @WORK_CNT = @WORK_CNT + 1
		        END
		        --pbs110ukrv.Cpbs110ukrv[fnPbs110Sav2]Query02
		        UPDATE BCM400T
		           SET WORK_DAY  = @WORK_CNT
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND CAL_DATE  = @CAL_DATE

		        FETCH NEXT FROM #BCM400T_CUR INTO   @CAL_DATE, @HOLY_TYPE
		    END

		CLOSE #BCM400T_CUR            -- 대상자 커서 클로즈
		DEALLOCATE #BCM400T_CUR       -- 대상자 커서 제거
	</update>



	<select id="pbs070ukrvsService.selectList4" parameterType="Map" resultType="rMap">
		SELECT A.CAL_NO
		     , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
		     , uniLITE.fnGetUserDate(A.COMP_CODE, A.END_DATE)   AS END_DATE
		     , (SELECT COUNT(*)
		          FROM BCM400T WITH(NOLOCK)
		         WHERE COMP_CODE  = #{S_COMP_CODE}
		           AND CAL_TYPE   = #{CAL_TYPE}
		           AND HOLY_TYPE != '0'
		           AND CAL_DATE  &gt;= A.START_DATE
		           AND CAl_DATE  &lt;= A.END_DATE) AS WORK_DAY
		 FROM BCM420T AS A WITH(NOLOCK)
		WHERE A.COMP_CODE      = #{S_COMP_CODE}
		  AND A.CAL_TYPE       = #{CAL_TYPE}
		  AND A.START_DATE LIKE  #{START_DATE} + '%'
	</select>



	<select id="pbs070ukrvsService.selectList5" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @COMP_CODE  = #{S_COMP_CODE}
		    SET @UserId     = #{S_USER_ID}
		    SET @LangType   = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           A.DIV_CODE
		         , A.WORK_SHOP_CODE
		         , B.TREE_NAME          AS WORK_SHOP_NAME
		         , A.PROG_WORK_CODE
		         , A.PROG_WORK_NAME
		         , A.STD_TIME
		         , A.PROG_UNIT
		         , A.PROG_UNIT_COST
		         , A.USE_YN
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , (CASE WHEN A.PROG_WORK_CODE = C.PROG_WORK_CODE
		                      THEN 'Y'
		                      ELSE 'N'
		             END) AS EXIST
		         , A.COMP_CODE
		         , A.REMARK
		         , A.MAN_Q
		         , A.BATCH_Q
		         , A.CAPA_Q
		         , A.EQU_CODE
		         , D.EQU_NAME
		         , ISNULL(A.LAST_YN, 'N') AS LAST_YN
		         , A.TEMPC_01                 --진행수량집계구분 공통코드추가(P522)
		         , ISNULL(A.WKORD_YN, 'Y') AS	WKORD_YN	-- 작업지시적용 유무 --2021.09.10 추가
		    FROM              PBS200T A WITH (NOLOCK)
		           INNER JOIN BSA230T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                             AND B.TYPE_LEVEL     = A.DIV_CODE
		                                             AND B.TREE_CODE      = A.WORK_SHOP_CODE
		           LEFT  JOIN (
		                      SELECT COMP_CODE, DIV_CODE, PROG_WORK_CODE, WORK_SHOP_CODE
		                      FROM   PBS300T WITH (NOLOCK)
		                      WHERE  COMP_CODE = @COMP_CODE
		                      GROUP  BY COMP_CODE, DIV_CODE, PROG_WORK_CODE, WORK_SHOP_CODE
		                      ) C                     ON C.COMP_CODE      = A.COMP_CODE
		                                             AND C.DIV_CODE       = A.DIV_CODE
		                                             AND C.PROG_WORK_CODE = A.PROG_WORK_CODE
		                                             AND C.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		           LEFT JOIN EQU200T D WITH (NOLOCK)  ON A.COMP_CODE      = D.COMP_CODE
		                                             AND A.DIV_CODE       = D.DIV_CODE
		                                             AND A.EQU_CODE       = D.EQU_CODE
		    WHERE  A.COMP_CODE      = @COMP_CODE
		    AND    B.USE_YN         = N'Y'
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND A.DIV_CODE = #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		    AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    </if>
		    ORDER BY
		       A.WORK_SHOP_CODE, A.PROG_WORK_CODE
		END
	</select>

	<select id="pbs070ukrvsService.selectList5SameSelect" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @COMP_CODE  = #{S_COMP_CODE}
		    SET @UserId     = #{S_USER_ID}
		    SET @LangType   = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           A.DIV_CODE
		         , A.WORK_SHOP_CODE
		         , A.PROG_WORK_CODE
		         , A.COMP_CODE
		    FROM   PBS200T A WITH (NOLOCK)
		    WHERE  A.COMP_CODE      = @COMP_CODE
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND A.DIV_CODE = #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		    AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    </if>
		    ORDER BY
		       A.WORK_SHOP_CODE, A.PROG_WORK_CODE
		END
	</select>

	<insert id="pbs070ukrvsService.insertDetail5" parameterType="Map">    /* 추가 */
		INSERT INTO PBS200T
		     (    DIV_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , PROG_WORK_NAME
		        , STD_TIME
		        <if test="@foren.Ognl@isNotEmpty(PROG_UNIT)">
		        , PROG_UNIT
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(PROG_UNIT_COST)">
		        , PROG_UNIT_COST
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		        , USE_YN
		        </if>
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		        , COMP_CODE
		        , REMARK
		        , MAN_Q
		        , CAPA_Q
		        , BATCH_Q
		        , EQU_CODE
		        , LAST_YN
		        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
		        , TEMPC_01
		        </if>
		     )
		VALUES
		     (    #{DIV_CODE}
		        , #{WORK_SHOP_CODE}
		        , #{PROG_WORK_CODE}
		        , #{PROG_WORK_NAME}
		        , #{STD_TIME}
		        <if test="@foren.Ognl@isNotEmpty(PROG_UNIT)">
		        , #{PROG_UNIT}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(PROG_UNIT_COST)">
		        , #{PROG_UNIT_COST}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		        , #{USE_YN}
		        </if>
		        , #{S_USER_ID}
		        , getDate()
		        , #{S_COMP_CODE}
		        , #{REMARK}
		        , #{MAN_Q}
		        , #{CAPA_Q}
		        , #{BATCH_Q}
		        , #{EQU_CODE}
		        , #{LAST_YN}
		        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
		        , #{TEMPC_01}
		        </if>		        
		     )
	</insert>

	<update id="pbs070ukrvsService.updateDetail5" parameterType="Map">      /* 수정 */
		UPDATE PBS200T
		 SET
		      <if test="@foren.Ognl@isNotEmpty('PROG_WORK_CODE')">
		       PROG_WORK_CODE = #{PROG_WORK_CODE}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty('PROG_WORK_NAME')">
		     , PROG_WORK_NAME = #{PROG_WORK_NAME}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty('STD_TIME')">
		     , STD_TIME = #{STD_TIME}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty('PROG_UNIT')">
		     , PROG_UNIT = #{PROG_UNIT}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty('PROG_UNIT_COST')">
		     , PROG_UNIT_COST = #{PROG_UNIT_COST}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty('USE_YN')">
		     , USE_YN = #{USE_YN}
		      </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , REMARK = #{REMARK}
		     , MAN_Q = #{MAN_Q}
		     , CAPA_Q = #{CAPA_Q}
		     , BATCH_Q = #{BATCH_Q}
		     , EQU_CODE = #{EQU_CODE}
		     , LAST_YN = #{LAST_YN}
		      <if test="@foren.Ognl@isNotEmpty('TEMPC_01')">
		     , TEMPC_01 = #{TEMPC_01}
		      </if>		     
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</update>

	<delete id="pbs070ukrvsService.deleteDetail5" parameterType="Map">      /* 삭제 */
		DELETE FROM PBS200T
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</delete>


	<select id="pbs070ukrvsService.selectList5_2" parameterType="Map" resultType="rMap">    /* 공정/금형 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @COMP_CODE  = #{S_COMP_CODE}
		    SET @UserId     = #{S_USER_ID}
		    SET @LangType   = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           A.COMP_CODE
		         , A.DIV_CODE
		         , A.WORK_SHOP_CODE
		         , A.PROG_WORK_CODE
		         , A.EQUIP_CODE
		         --, B.EQUIP_NAME
		         , A.SELECT_BASIS
		         , A.REMARK
		    FROM              S_WRE900T_KD A WITH (NOLOCK)
		           INNER JOIN BSA230T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                             AND B.TYPE_LEVEL     = A.DIV_CODE
		                                             AND B.TREE_CODE      = A.WORK_SHOP_CODE
		    WHERE  A.COMP_CODE          = @COMP_CODE
		      AND  A.DIV_CODE           = #{DIV_CODE}
		      AND  A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
		      AND  A.PROG_WORK_CODE     = #{PROG_WORK_CODE}
		    ORDER  BY A.WORK_SHOP_CODE, A.PROG_WORK_CODE, A.EQUIP_CODE
		END
	</select>

	<insert id="pbs070ukrvsService.insertDetail5_2" parameterType="Map">    /* 공정/설비 추가 */
		INSERT INTO S_WRE900T_KD
		     (    DIV_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , PROG_WORK_NAME
		        , EQUIP_CODE
		        , SELECT_BASIS
		        , REMARK
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		        , COMP_CODE
		     )
		VALUES
		     (    #{DIV_CODE}
		        , #{WORK_SHOP_CODE}
		        , #{PROG_WORK_CODE}
		        , #{PROG_WORK_NAME}
		        , #{EQUIP_CODE}
		        , #{SELECT_BASIS}
		        , #{REMARK}
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_COMP_CODE}
		     )
	</insert>

	<update id="pbs070ukrvsService.updateDetail5_2" parameterType="Map">      /* 공정/설비 수정 */
		UPDATE S_WRE900T_KD
		   SET EQUIP_CODE       = #{EQUIP_CODE}
		      <if test="@foren.Ognl@isNotEmpty('SELECT_BASIS')">
		      ,SELECT_BASIS     = #{SELECT_BASIS}
		       </if>
		      <if test="@foren.Ognl@isNotEmpty('REMARK')">
		      ,REMARK           = #{REMARK}
		      </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND EQUIP_CODE       = #{EQUIP_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</update>

	<delete id="pbs070ukrvsService.deleteDetail5_2" parameterType="Map">      /* 공정/설비 삭제 */
		DELETE FROM S_WRE900T_KD
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND EQUIP_CODE       = #{DIV_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</delete>


	<select id="pbs070ukrvsService.selectList5_3" parameterType="Map" resultType="rMap">    /* 공정/금형 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @COMP_CODE  = #{S_COMP_CODE}
		    SET @UserId     = #{S_USER_ID}
		    SET @LangType   = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           A.COMP_CODE
		         , A.DIV_CODE
		         , A.WORK_SHOP_CODE
		         , A.PROG_WORK_CODE
		         , A.MOLD_CODE
		         --, B.MOLD_NAME
		         , A.SELECT_BASIS
		         , A.REMARK
		    FROM              S_WRM900T_KD A WITH (NOLOCK)
		           INNER JOIN BSA230T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                             AND B.TYPE_LEVEL     = A.DIV_CODE
		                                             AND B.TREE_CODE      = A.WORK_SHOP_CODE
		    WHERE  A.COMP_CODE          = @COMP_CODE
		      AND  A.DIV_CODE           = #{DIV_CODE}
		      AND  A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
		      AND  A.PROG_WORK_CODE     = #{PROG_WORK_CODE}
		    ORDER  BY A.WORK_SHOP_CODE, A.PROG_WORK_CODE, A.MOLD_CODE
		END
	</select>

	<insert id="pbs070ukrvsService.insertDetail5_3" parameterType="Map">    /* 공정/금형 추가 */
		INSERT INTO S_WRM900T_KD
		     (    DIV_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , PROG_WORK_NAME
		        , MOLD_CODE
		        , SELECT_BASIS
		        , REMARK
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		        , COMP_CODE
		     )
		VALUES
		     (    #{DIV_CODE}
		        , #{WORK_SHOP_CODE}
		        , #{PROG_WORK_CODE}
		        , #{PROG_WORK_NAME}
		        , #{MOLD_CODE}
		        , #{SELECT_BASIS}
		        , #{REMARK}
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_COMP_CODE}
		     )
	</insert>

	<update id="pbs070ukrvsService.updateDetail5_3" parameterType="Map">      /* 공정/금형 수정 */
		UPDATE S_WRM900T_KD
		   SET MOLD_CODE        = #{MOLD_CODE}
		      <if test="@foren.Ognl@isNotEmpty('SELECT_BASIS')">
		      ,SELECT_BASIS     = #{SELECT_BASIS}
		       </if>
		      <if test="@foren.Ognl@isNotEmpty('REMARK')">
		      ,REMARK           = #{REMARK}
		      </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND MOLD_CODE        = #{MOLD_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</update>

	<delete id="pbs070ukrvsService.deleteDetail5_3" parameterType="Map">      /* 공정/금형 삭제 */
		DELETE FROM S_WRM900T_KD
		 WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
		   AND MOLD_CODE        = #{MOLD_CODE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND COMP_CODE        = #{S_COMP_CODE}
	</delete>



	<select id="pbs070ukrvsService.selectList6" parameterType="Map" resultType="rMap">
		--pbs300ukrv.Cpbs300ukrv[fnPbs300QStd]Query01
		DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
		          , @WORK_SHOP_CODE     NVARCHAR(08)    -- (필수) 작업장
		          , @ITEM_FR_CODE       NVARCHAR(20)    -- (선택) 품목코드(FROM)
		          , @ITEM_FR_NAME       NVARCHAR(100)   -- (선택) 품목명(FROM)
		          , @ITEM_TO_CODE       NVARCHAR(20)    -- (선택) 품목코드(TO)
		          , @ITEM_ACCOUNT       NVARCHAR(02)    -- (선택) 품목계정
		          , @SUPPLY_TYPE        NVARCHAR(02)    -- (선택) 조달구분
		          , @ITEM_LEVEL1        NVARCHAR(05)    -- (선택) 대분류
		          , @ITEM_LEVEL2        NVARCHAR(05)    -- (선택) 중분류
		          , @ITEM_LEVEL3        NVARCHAR(05)    -- (선택) 소분류
		          , @ACC_STATUS         NVARCHAR(01)    -- (필수) 등록여부
		          , @USER_ID            NVARCHAR(100)    -- (필수) 사용자ID

		SET     @COMP_CODE          = #{S_COMP_CODE}
		SET     @DIV_CODE           = #{DIV_CODE}
		SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
		SET     @ITEM_FR_CODE       = #{ITEM_FR_CODE}
		SET     @ITEM_FR_NAME       = #{ITEM_FR_NAME}
		SET     @ITEM_TO_CODE       = #{ITEM_TO_CODE}
		SET     @ITEM_ACCOUNT       = #{ITEM_ACCOUNT}
		SET     @SUPPLY_TYPE        = #{SUPPLY_TYPE}
		SET     @ITEM_LEVEL1        = #{ITEM_LEVEL1}
		SET     @ITEM_LEVEL2        = #{ITEM_LEVEL2}
		SET     @ITEM_LEVEL3        = #{ITEM_LEVEL3}
		SET     @ACC_STATUS         = #{ACC_STATUS}
		SET     @USER_ID            = #{S_USER_ID}

		DECLARE     @RefItem            NVARCHAR(01)    -- 사용자 품목명 참조 유형

		SELECT TOP 1 @RefItem = REF_ITEM
		FROM   BSA300T WITH (NOLOCK)
		WHERE  COMP_CODE = @COMP_CODE
		AND    USER_ID   = @USER_ID

		SET @RefItem = ISNULL(@RefItem, '0')

		SELECT
		       A.ITEM_CODE
		     , A.ITEM_NAME
		     , A.SPEC
		     , A.STOCK_UNIT
		     , A.ITEM_ACCOUNT
		     , A.ITEMACCOUNT_NAME
		     , A.SUPPLY_TYPE
		     , A.PROG_CNT
		     , A.ITEMLEVEL1_NAME
		     , A.ITEMLEVEL2_NAME
		     , A.ITEMLEVEL3_NAME
		     , A.COMP_CODE
		FROM   (
		       SELECT A.ITEM_CODE
		            , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
		                   WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                   WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                   ELSE                     B.ITEM_NAME
		              END  AS ITEM_NAME
		            , B.SPEC
		            , B.STOCK_UNIT
		            , A.ITEM_ACCOUNT
		            , M1.CODE_NAME           AS ITEMACCOUNT_NAME
		            , A.SUPPLY_TYPE
		            , M2.LEVEL_NAME         AS ITEMLEVEL1_NAME
		            , M3.LEVEL_NAME         AS ITEMLEVEL2_NAME
		            , M4.LEVEL_NAME         AS ITEMLEVEL3_NAME
		            , ISNULL(C.PROG_CNT, 0) AS PROG_CNT
		            , A.COMP_CODE
		       FROM              BPR200T A  WITH (NOLOCK)
		              INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                 AND B.ITEM_CODE = A.ITEM_CODE
		              LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE
		                               , COUNT(ITEM_CODE) AS PROG_CNT
		                          FROM   PBS300T WITH (NOLOCK)
		                          WHERE  COMP_CODE      = @COMP_CODE
		                          AND    DIV_CODE       = @DIV_CODE
		                          AND    WORK_SHOP_CODE = @WORK_SHOP_CODE
		                          GROUP  BY COMP_CODE, DIV_CODE, ITEM_CODE
		                         ) C  ON C.COMP_CODE    = A.COMP_CODE
		                             AND C.DIV_CODE     = A.DIV_CODE
		                             AND C.ITEM_CODE    = A.ITEM_CODE
		              LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                                 AND M1.MAIN_CODE = 'B020'
		                                                 AND M1.SUB_CODE  = A.ITEM_ACCOUNT
		              LEFT  JOIN BPR000T M2 WITH (NOLOCK) ON M2.COMP_CODE = B.COMP_CODE
		                                                 AND M2.LEVEL1    = B.ITEM_LEVEL1
		                                                 AND M2.LEVEL2    = '*'
		                                                 AND M2.LEVEL3    = '*'
		              LEFT  JOIN BPR000T M3 WITH (NOLOCK) ON M3.COMP_CODE = B.COMP_CODE
		                                                 AND M3.LEVEL1    = B.ITEM_LEVEL1
		                                                 AND M3.LEVEL2   != '*'
		                                                 AND M3.LEVEL2    = B.ITEM_LEVEL2
		                                                 AND M3.LEVEL3    = '*'
		              LEFT  JOIN BPR000T M4 WITH (NOLOCK) ON M4.COMP_CODE = B.COMP_CODE
		                                                 AND M4.LEVEL1    = B.ITEM_LEVEL1
		                                                 AND M4.LEVEL2    = B.ITEM_LEVEL2
		                                                 AND M4.LEVEL2   != '*'
		                                                 AND M4.LEVEL3    = B.ITEM_LEVEL3
		                                                 AND M4.LEVEL3   != '*'
		       WHERE  A.COMP_CODE      = @COMP_CODE
		       AND    A.DIV_CODE       = @DIV_CODE
		       AND    A.ITEM_ACCOUNT  IN ('10', '20')
		       AND  ((A.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
		       AND  ((A.SUPPLY_TYPE    = @SUPPLY_TYPE  AND @SUPPLY_TYPE  != '') OR (@SUPPLY_TYPE  = ''))
		<if test="@foren.Ognl@isNotEmpty(ITEM_FR_CODE) and @foren.Ognl@isNotEmpty(ITEM_FR_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
			   AND A.ITEM_CODE = #{ITEM_FR_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_FR_CODE) and @foren.Ognl@isEmpty(ITEM_FR_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
			   AND A.ITEM_CODE LIKE #{ITEM_FR_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_FR_CODE) and @foren.Ognl@isNotEmpty(ITEM_FR_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
			   AND CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
	                    WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                    WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                    ELSE B.ITEM_NAME
	               END LIKE '%' + #{ITEM_FR_NAME} + '%' 
		</if>
		       AND  ((B.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))
		       AND  ((B.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))
		       AND  ((B.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))
		       ) A
		WHERE ((A.PROG_CNT &gt;= 0 AND @ACC_STATUS = '0')
		    OR (A.PROG_CNT &gt;= 1 AND @ACC_STATUS = '1')
		    OR (A.PROG_CNT  = 0 AND @ACC_STATUS = '2'))
		ORDER  BY A.ITEM_ACCOUNT, A.ITEM_CODE
	</select>

	<select id="pbs070ukrvsService.selectList6_2" parameterType="Map" resultType="rMap">
		--pbs300ukrv.Cpbs300ukrv[fnPbs300QSt1]Query01
		DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
		          , @WORK_SHOP_CODE     NVARCHAR(08)    -- (필수) 작업장
		          , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드(FROM)

		SET     @COMP_CODE          = #{S_COMP_CODE}
		SET     @DIV_CODE           = #{DIV_CODE}
		SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
		SET     @ITEM_CODE          = #{ITEM_CODE1}

		SELECT *
		FROM   (
		       SELECT A.LINE_SEQ                 AS SORT_FLD
		            , A.DIV_CODE
		            , A.ITEM_CODE
		            , A.WORK_SHOP_CODE
		            , A.PROG_WORK_CODE
		            , B.PROG_WORK_NAME
		            , CAST(A.LINE_SEQ AS BIGINT) AS LINE_SEQ
		            , A.MAKE_LDTIME
		            , A.PROG_RATE
		            , A.PROG_UNIT_Q
		            , A.PROG_UNIT
		            , A.COMP_CODE
		       FROM             PBS300T A WITH (NOLOCK)
		              LEFT JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                               AND B.DIV_CODE       = A.DIV_CODE
		                                               AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                                               AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		       WHERE  A.COMP_CODE       = @COMP_CODE
		       AND    A.DIV_CODE        = @DIV_CODE
		       AND    A.WORK_SHOP_CODE  = @WORK_SHOP_CODE
		       AND    A.ITEM_CODE       = @ITEM_CODE
		       AND    B.USE_YN          = 'Y'

		       UNION

		       SELECT CONVERT(NVARCHAR(03), 'N') AS SORT_FLD
		            , A.DIV_CODE
		            , @ITEM_CODE                 AS ITEM_CODE
		            , A.WORK_SHOP_CODE
		            , A.PROG_WORK_CODE
		            , A.PROG_WORK_NAME
		            , NULL                       AS LINE_SEQ
		            , A.STD_TIME                 AS MAKE_LDTIME
		            , NULL                       AS PROG_RATE
		            , NULL                       AS PROG_UNIT_Q
		            , A.PROG_UNIT
		            , A.COMP_CODE
		       FROM   PBS200T A WITH (NOLOCK)
		       WHERE  A.COMP_CODE           = @COMP_CODE
		       AND    A.DIV_CODE            = @DIV_CODE
		       AND    A.WORK_SHOP_CODE      = @WORK_SHOP_CODE
		       AND    A.PROG_WORK_CODE NOT IN (SELECT DISTINCT PROG_WORK_CODE
		                                       FROM   PBS300T WITH (NOLOCK)
		                                       WHERE  COMP_CODE      = @COMP_CODE
		                                       AND    DIV_CODE       = @DIV_CODE
		                                       AND    WORK_SHOP_CODE = @WORK_SHOP_CODE
		                                       AND    ITEM_CODE      = @ITEM_CODE)
		       AND    A.USE_YN = 'Y'
		       ) A
		 ORDER BY CASE WHEN ISNULL(LINE_SEQ, 999999) = 0 THEN 999999
		               ELSE ISNULL(LINE_SEQ, 999999)
		          END
	</select>

	<select id="pbs070ukrvsService.selectItemCopyList" parameterType="Map" resultType="rMap">
		--uniLITE5Popup.CPopup[getItemCopy] Query01
		       SELECT A.DIV_CODE
		         , A.ITEM_CODE
		         , C.ITEM_NAME
		         , A.LINE_SEQ
		         , A.WORK_SHOP_CODE
		         , A.PROG_WORK_CODE
		         , B.PROG_WORK_NAME
		         , A.PROG_UNIT
		         , A.MAKE_LDTIME
		         , ISNULL(A.PROG_RATE, 0) AS PROG_RATE
		         , A.PROG_UNIT_Q
		      FROM PBS300T A WITH (NOLOCK)
		         , PBS200T B WITH (NOLOCK)
		         , BPR100T C WITH (NOLOCK)
		         , BPR200T D WITH (NOLOCK)
		     WHERE A.DIV_CODE       = B.DIV_CODE
		       AND A.PROG_WORK_CODE = B.PROG_WORK_CODE
		       AND A.WORK_SHOP_CODE = B.WORK_SHOP_CODE
		       AND A.DIV_CODE       = D.DIV_CODE
		       AND A.ITEM_CODE      = C.ITEM_CODE
		       AND A.ITEM_CODE      = D.ITEM_CODE
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE       = #{DIV_CODE}
		       </if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE 			  = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE 	 	   LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND C.ITEM_NAME 	 LIKE '%' + #{ITEM_NAME} + '%'
			</if>
		       <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		       AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		       </if>
		    ORDER BY A.WORK_SHOP_CODE, A.LINE_SEQ ASC
	</select>

	<select id="pbs070ukrvsService.selectWorkShopCopyWindowList" parameterType="Map" resultType="rMap">
		/* pbs070ukrvsService.selectWorkShopCopyWindowList */
		DECLARE @COMP_CODE             NVARCHAR(08)
		      , @DIV_CODE              NVARCHAR(08)
		      , @WORK_SHOP_CODE        NVARCHAR(08)
		      , @WORK_SHOP_CODE_QUERY  NVARCHAR(100)

		SET     @COMP_CODE            = #{S_COMP_CODE}
		SET     @DIV_CODE             = #{DIV_CODE}
		SET     @WORK_SHOP_CODE       = #{WORK_SHOP_CODE}
		SET     @WORK_SHOP_CODE_QUERY = #{WORK_SHOP_CODE_QUERY}

		SELECT A.COMP_CODE
		     , A.TYPE_LEVEL
		     , A.TREE_CODE
		     , A.TREE_NAME
		  FROM BSA230T A WITH(NOLOCK)
		 WHERE A.COMP_CODE  = @COMP_CODE
		   AND A.TYPE_LEVEL = @DIV_CODE
		   AND A.USE_YN     = 'Y'
		   AND A.TREE_CODE IN (
		                       SELECT A.WORK_SHOP_CODE
		                            --, ISNULL(B.COUNT, 0)           AS COUNT1
		                            --, ISNULL(C.COUNT, 0)           AS COUNT2
		                         FROM PBS200T A WITH(NOLOCK)
		                         --1. 기존에 등록되어 있는 작업장에 대한 공정정보 갯수
		                         LEFT JOIN (
		                                    SELECT A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, COUNT(A.PROG_WORK_CODE) AS COUNT
		                                      FROM PBS200T A WITH(NOLOCK)
		                                     WHERE A.COMP_CODE       = @COMP_CODE
		                                       AND A.DIV_CODE        = @DIV_CODE
		                                       AND A.WORK_SHOP_CODE != @WORK_SHOP_CODE
		                                     GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE
		                                   ) B ON B.COMP_CODE      = A.COMP_CODE
		                                      AND B.DIV_CODE       = A.DIV_CODE
		                                      AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                         --2. 복사할 작업장과 동일한 공정정보 갯수
		                         LEFT JOIN (
		                                    SELECT A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, COUNT(A.PROG_WORK_CODE) AS COUNT
		                                      FROM PBS200T A WITH(NOLOCK)
		                                     WHERE A.COMP_CODE       = @COMP_CODE
		                                       AND A.DIV_CODE        = @DIV_CODE
		                                       AND A.WORK_SHOP_CODE != @WORK_SHOP_CODE
		                                       AND A.PROG_WORK_CODE IN (SELECT PROG_WORK_CODE
		                                                                  FROM PBS200T WITH(NOLOCK)
		                                                                 WHERE COMP_CODE      = @COMP_CODE
		                                                                   AND DIV_CODE       = @DIV_CODE
		                                                                   AND WORK_SHOP_CODE = @WORK_SHOP_CODE
		                                                             )
		                                     GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE
		                                   ) C ON C.COMP_CODE      = A.COMP_CODE
		                                      AND C.DIV_CODE       = A.DIV_CODE
		                                      AND C.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                         --3. 복사할 작업장의 공정정보 갯수
		                         LEFT JOIN (
		                                    SELECT A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, COUNT(A.PROG_WORK_CODE) AS COUNT
		                                      FROM PBS200T A WITH(NOLOCK)
		                                     WHERE A.COMP_CODE       = @COMP_CODE
		                                       AND A.DIV_CODE        = @DIV_CODE
		                                       AND A.WORK_SHOP_CODE  = @WORK_SHOP_CODE
		                                     GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE
		                                   ) D ON D.COMP_CODE      = A.COMP_CODE
		                                      AND D.DIV_CODE       = A.DIV_CODE
		                        WHERE ISNULL(B.COUNT, 0) = ISNULL(C.COUNT, 0)
		                          AND ISNULL(B.COUNT, 0) = ISNULL(D.COUNT, 0)
		                      )
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE_QUERY)">
		   AND (A.TREE_CODE LIKE @WORK_SHOP_CODE_QUERY + '%'
		     OR A.TREE_NAME LIKE @WORK_SHOP_CODE_QUERY + '%')
		</if>

		 ORDER BY
		<if test="ACC_STATUS == &quot;0&quot;">
		          A.TREE_CODE
		</if>
		<if test="ACC_STATUS == &quot;1&quot;">
		          A.TREE_NAME
		</if>
	</select>

	<update id="pbs070ukrvsService.copyWorkShopProgCode" parameterType="Map">
		/* pbs070ukrvsService.copyWorkShopProgCode */
		DECLARE @COMP_CODE         NVARCHAR(08)     --법인코드
		      , @DIV_CODE          NVARCHAR(08)     --사업장코드(TYPE_LEVEL)
		      , @ITEM_CODES        NVARCHAR(MAX)    --선택된 품목코드들
		      , @WORK_SHOP_CODE    NVARCHAR(08)     --복사할 원본 작업장(WORK_SHOP_CODE)
		      , @WORK_SHOP_CODE_TO NVARCHAR(08)     --복사할 대상 작업장(TREE_CODE)
		      , @USER_ID           NVARCHAR(100)
		
		SET     @COMP_CODE         = #{S_COMP_CODE}
		SET     @DIV_CODE          = #{TYPE_LEVEL}
		SET     @ITEM_CODES        = #{ITEM_CODES}
		SET     @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
		SET     @WORK_SHOP_CODE_TO = #{TREE_CODE}
		SET     @USER_ID           = #{S_USER_ID}
		
		--COMP_CODE, DIV_CODE, ITEM_CODE, WORK_SHOP_CODE, PROG_WORK_CODE
		IF EXISTS (SELECT TOP 1 1
		             FROM PBS300T WITH(NOLOCK)
		            WHERE COMP_CODE       = @COMP_CODE
		              AND DIV_CODE        = @DIV_CODE
		              AND ITEM_CODE       IN (SELECT value FROM uniLITE.fnSplit(@ITEM_CODES, ','))
		              AND WORK_SHOP_CODE  = @WORK_SHOP_CODE_TO)
		    BEGIN
		        DELETE FROM PBS300T
		         WHERE COMP_CODE       = @COMP_CODE
		           AND DIV_CODE        = @DIV_CODE
		           AND ITEM_CODE       IN (SELECT value FROM uniLITE.fnSplit(@ITEM_CODES, ','))
		           AND WORK_SHOP_CODE  = @WORK_SHOP_CODE_TO
		    END
		
		INSERT INTO PBS300T (
		          COMP_CODE
		        , DIV_CODE
		        , ITEM_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , LINE_SEQ
		        , MAKE_LDTIME
		        , PROG_UNIT
		        , PROG_UNIT_Q
		        , PROG_RATE
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		)
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , @WORK_SHOP_CODE_TO
		     , A.PROG_WORK_CODE
		     , A.LINE_SEQ
		     , A.MAKE_LDTIME
		     , A.PROG_UNIT
		     , A.PROG_UNIT_Q
		     , A.PROG_RATE
		     , @USER_ID
		     , GETDATE()
		     , @USER_ID
		     , GETDATE()
		  FROM PBS300T A WITH(NOLOCK)
		  LEFT JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                   AND B.DIV_CODE       = A.DIV_CODE
		                                   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                                   AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		 WHERE A.COMP_CODE       = @COMP_CODE
		   AND A.DIV_CODE        = @DIV_CODE
		   AND A.ITEM_CODE       IN (SELECT value FROM uniLITE.fnSplit(@ITEM_CODES, ','))
		   AND A.WORK_SHOP_CODE  = @WORK_SHOP_CODE
		   AND B.USE_YN          = 'Y'
	</update>

	<insert id="pbs070ukrvsService.insertDetail6" parameterType="Map">    /* 추가 */
	</insert>

	<insert id="pbs070ukrvsService.insertDetail6_2" parameterType="Map">    /* 추가 */
		/* pbs070ukrvsService.insertDetail6_2 */
		INSERT PBS300T
		     ( COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , WORK_SHOP_CODE
		     , PROG_WORK_CODE
		     , LINE_SEQ
		     , MAKE_LDTIME
		     , PROG_UNIT_Q
		     , PROG_UNIT
		     , PROG_RATE
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME)
		VALUES
		     ( #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{WORK_SHOP_CODE}
		     , #{PROG_WORK_CODE}
		     , #{LINE_SEQ}
		     , #{MAKE_LDTIME}
		     , #{PROG_UNIT_Q}
		     , #{PROG_UNIT}
		     , #{PROG_RATE}
		     , #{S_USER_ID}
		     , GETDATE()
		     );
	</insert>

	<update id="pbs070ukrvsService.updateDetail6_2" parameterType="Map">        /* 수정 */
		MERGE INTO PBS300T                                   A
		USING ( SELECT #{S_COMP_CODE}       AS COMP_CODE
		             , #{DIV_CODE}          AS DIV_CODE
		             , #{ITEM_CODE}         AS ITEM_CODE
		             , #{WORK_SHOP_CODE}    AS WORK_SHOP_CODE
		             , #{PROG_WORK_CODE}    AS PROG_WORK_CODE
		      )                                              B
		                                                            ON A.COMP_CODE      = B.COMP_CODE
		                                                           AND A.DIV_CODE       = B.DIV_CODE
		                                                           AND A.ITEM_CODE      = B.ITEM_CODE
		                                                           AND A.WORK_SHOP_CODE = B.WORK_SHOP_CODE
		                                                           AND A.PROG_WORK_CODE = B.PROG_WORK_CODE

		WHEN MATCHED THEN
		        UPDATE
		            SET LINE_SEQ       = #{LINE_SEQ}
		              , PROG_WORK_CODE = #{PROG_WORK_CODE}
		              , PROG_RATE      = #{PROG_RATE}
		              , PROG_UNIT_Q    = #{PROG_UNIT_Q}
		              , PROG_UNIT      = #{PROG_UNIT}
		              , MAKE_LDTIME    = #{MAKE_LDTIME}
		              , UPDATE_DB_USER = #{S_USER_ID}
		              , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		        INSERT
		             ( COMP_CODE
		             , DIV_CODE
		             , ITEM_CODE
		             , WORK_SHOP_CODE
		             , PROG_WORK_CODE
		             , LINE_SEQ
		             , MAKE_LDTIME
		             , PROG_UNIT_Q
		             , PROG_UNIT
		             , PROG_RATE
		             , UPDATE_DB_USER
		             , UPDATE_DB_TIME)
		        VALUES
		             ( #{S_COMP_CODE}
		             , #{DIV_CODE}
		             , #{ITEM_CODE}
		             , #{WORK_SHOP_CODE}
		             , #{PROG_WORK_CODE}
		             , #{LINE_SEQ}
		             , #{MAKE_LDTIME}
		             , #{PROG_UNIT_Q}
		             , #{PROG_UNIT}
		             , #{PROG_RATE}
		             , #{S_USER_ID}
		             , GETDATE()
		             );
	</update>

	<delete id="pbs070ukrvsService.deleteDetail6_2" parameterType="Map">        /* 삭제 */
		DELETE PBS300T
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND DIV_CODE       = #{DIV_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND ITEM_CODE      = #{ITEM_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
		   AND PROG_WORK_CODE = #{PROG_WORK_CODE}
		 </if>
	</delete>
</mapper>