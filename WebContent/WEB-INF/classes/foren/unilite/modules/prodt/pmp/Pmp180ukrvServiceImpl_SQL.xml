<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmp180ukrvServiceImpl">

	<select id="pmp180ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
       	/* pmp180ukrv.Cpmp180ukrv[fnPmp180QStd] Query1  */
    	DECLARE @COMP_CODE      NVARCHAR(08)   -- 법인코드             (시스템코드)
              , @USER_ID        NVARCHAR(100)   -- 사용자 ID            (시스템코드)
              , @DIV_CODE       NVARCHAR(08)   -- 사업장코드           (조회조건)
              , @CUSTOM_CODE    NVARCHAR(08)   -- 거래처 코드          (조회조건)
              , @CUSTOM_NAME    NVARCHAR(20)   -- 거래처명             (조회조건)
              , @FROM_DATE      NVARCHAR(08)   -- 착수예정일 FROM      (조회조건)
              , @TO_DATE        NVARCHAR(08)   -- 착수예정일 TO        (조회조건)
              , @WORK_SHOP_CODE NVARCHAR(08)   -- 작업장코드           (조회조건)
              , @ITEM_CODE      NVARCHAR(20)   -- 품목코드             (조회조건)
              , @ITEM_NAME      NVARCHAR(200)  -- 품명                 (조회조건)
              , @FROM_DVRY      NVARCHAR(08)   -- 납기일 FROM          (조회조건)
              , @TO_DVRY        NVARCHAR(08)   -- 납기일 TO            (조회조건)
              , @FROM_NUM       NVARCHAR(20)   -- 작업지시번호 FROM    (조회조건)
              , @TO_NUM         NVARCHAR(20)   -- 작업지시번호 TO      (조회조건)
              , @STATUS_CODE    NVARCHAR(01)   -- 상태 Flag            (조회조건)
              , @FROM_SO        NVARCHAR(08)   -- 수주일 FROM          (조회조건)
              , @TO_SO          NVARCHAR(08)   -- 수주일 TO            (조회조건)
              , @OUT_ORDER_YN   NVARCHAR(01)   -- 외주여부             (조회조건)
              , @ORDER_TYPE     NVARCHAR(08)   -- 판매유형            (조회조건)

            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @USER_ID        = #{S_USER_ID}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @CUSTOM_CODE    = #{CUSTOM_CODE}
            SET @CUSTOM_NAME    = #{CUSTOM_NAME}
            SET @FROM_DATE      = #{PRODT_END_DATE_FR}
            SET @TO_DATE        = #{PRODT_END_DATE_TO}
            SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
            SET @ITEM_CODE      = #{ITEM_CODE}
            SET @ITEM_NAME      = #{ITEM_NAME}
            SET @FROM_DVRY      = #{DVRY_DATE_FR}
            SET @TO_DVRY        = #{DVRY_DATE_TO}
            SET @FROM_NUM       = #{WKORD_NUM_FR}
            SET @TO_NUM         = #{WKORD_NUM_TO}
            SET @STATUS_CODE    = #{STATUS_CODE}     --'전체:''/진행:'2'/완료:'9'/마감:'8'
            SET @FROM_SO        = #{ORDER_DATE_FR}
            SET @TO_SO          = #{ORDER_DATE_TO}
            SET @OUT_ORDER_YN   = #{OUT_ORDER_YN}     --'전체:''/예:'Y'/아니오:'N'
            SET @ORDER_TYPE     = #{ORDER_TYPE}

        SELECT 0 AS FLAG
             , A.COMP_CODE
             , A.DIV_CODE
             , A.STATUS_CODE
             , A.STATUS_NAME
             , A.OUT_ORDER_YN
             , A.TOP_WKORD_NUM
             , A.WKORD_NUM
             , A.ITEM_CODE
             , A.ITEM_NAME
             , A.SPEC
             , uniLITE.fnGetUserDate(@COMP_CODE, A.PRODT_START_DATE) AS PRODT_START_DATE
             , uniLITE.fnGetUserDate(@COMP_CODE, A.PRODT_END_DATE)   AS PRODT_END_DATE
             , A.WKORD_Q
             , A.PRODT_Q
             , A.BAL_Q
             , A.PROG_UNIT
             , A.ORDER_NUM
             , A.SEQ
             , A.ORDER_Q
             , A.PROD_Q
             , uniLITE.fnGetUserDate(@COMP_CODE, A.DVRY_DATE)     AS DVRY_DATE
             , uniLITE.fnGetUserDate(@COMP_CODE, A.PROD_END_DATE) AS PROD_END_DATE
             , A.CUSTOM_NAME
             , A.LOT_NO
             , A.REMARK
             , A.PROJECT_NO
             , A.PJT_CODE
             , A.ORDER_YN
             , A.PRODT_PRSN
          FROM (SELECT A.COMP_CODE
                     , A.DIV_CODE
                     , ISNULL(M3.SUB_CODE, '')          AS STATUS_CODE
                     , ISNULL(M3.CODE_NAME, '')         AS STATUS_NAME
                     , CASE WHEN ISNULL(E.WKORD_NUM, '') = ''
                                 THEN 'N'
                                 ELSE 'Y'
                        END                             AS OUT_ORDER_YN
                     , ISNULL(A.WKORD_NUM, '')          AS WKORD_NUM
                     , ISNULL(A.TOP_WKORD_NUM, ' ')      AS TOP_WKORD_NUM
                     , ISNULL(A.ITEM_CODE, '')          AS ITEM_CODE
                     , ISNULL(uniLITE.fnItemNameComp(@COMP_CODE, @USER_ID, A.ITEM_CODE), '') AS ITEM_NAME
                     , ISNULL(M1.SPEC, '')              AS SPEC
                     , ISNULL(A.PRODT_START_DATE, '')   AS PRODT_START_DATE
                     , ISNULL(A.PRODT_END_DATE, '')     AS PRODT_END_DATE
                     , ISNULL(A.WKORD_Q, 0.0)           AS WKORD_Q
                     , ISNULL(A.PRODT_Q, 0.0)           AS PRODT_Q
                     , ISNULL(A.WKORD_Q, 0.0) - ISNULL(A.PRODT_Q, 0.0) AS BAL_Q
                     , ISNULL(A.PROG_UNIT, '')          AS PROG_UNIT
                     , ISNULL(B.ORDER_NUM, '')          AS ORDER_NUM
                     , ISNULL(B.SEQ    , 0)             AS SEQ
                     , ISNULL(C.ORDER_Q, 0.0)           AS ORDER_Q
                     , ISNULL(C.PROD_Q , 0.0)           AS PROD_Q
                     , ISNULL(C.DVRY_DATE, '')          AS DVRY_DATE
                     , ISNULL(D.ORDER_DATE, '')         AS ORDER_DATE
                     , ISNULL(C.PROD_END_DATE, '')      AS PROD_END_DATE
                     , ISNULL(D.CUSTOM_CODE, '')        AS CUSTOM_CODE
                     , ISNULL(M2.CUSTOM_NAME, '')       AS CUSTOM_NAME
                     , ISNULL(A.LOT_NO, '')             AS LOT_NO
                     , ISNULL(A.REMARK, '')             AS REMARK
                     , ISNULL(B.PROJECT_NO, '')         AS PROJECT_NO
                     , ISNULL(B.PJT_CODE, '')           AS PJT_CODE
                     , ISNULL(E.ORDER_YN, '')           AS ORDER_YN
                     , A.PRODT_PRSN
                  FROM PMP100TV1 A WITH (NOLOCK)
                                 LEFT JOIN PPL100T B WITH (NOLOCK)
                                        ON B.COMP_CODE    = A.COMP_CODE
                                       AND B.DIV_CODE     = A.DIV_CODE
                                       AND B.WK_PLAN_NUM  = A.WK_PLAN_NUM
                                 LEFT JOIN SOF110T C WITH (NOLOCK)
                                        ON C.COMP_CODE    = B.COMP_CODE
                                       AND C.OUT_DIV_CODE     = B.DIV_CODE
                                       AND C.ORDER_NUM    = B.ORDER_NUM
                                       AND C.SER_NO       = B.SEQ
                                 LEFT JOIN SOF100T D WITH (NOLOCK)
                                        ON D.COMP_CODE    = C.COMP_CODE
                                       AND D.DIV_CODE     = C.DIV_CODE
                                       AND D.ORDER_NUM    = C.ORDER_NUM
                                 LEFT JOIN MRP400T E WITH (NOLOCK)
                                        ON E.COMP_CODE    = A.COMP_CODE
                                       AND E.DIV_CODE     = A.DIV_CODE
                                       AND E.WKORD_NUM    = A.WKORD_NUM
                                       AND E.ITEM_CODE    = A.ITEM_CODE
                                       AND E.SUPPLY_TYPE != '2'
                                 LEFT JOIN BPR100T M1 WITH (NOLOCK)
                                        ON M1.COMP_CODE   = A.COMP_CODE
                                       AND M1.ITEM_CODE   = A.ITEM_CODE
                                 LEFT JOIN BCM100T M2 WITH (NOLOCK)
                                        ON M2.COMP_CODE   = D.COMP_CODE
                                       AND M2.CUSTOM_CODE = D.CUSTOM_CODE
                          --       LEFT JOIN BSA100T M3 WITH (NOLOCK)
                          --              ON M3.COMP_CODE   = A.COMP_CODE
                          --             AND M3.MAIN_CODE   = 'P004'
                          --             AND M3.SUB_CODE    = A.WORK_END_YN     --  마감여부

                          		LEFT JOIN BSA100T M3 WITH(NOLOCK) ON M3.COMP_CODE = A.COMP_CODE
                          										 AND M3.MAIN_CODE = 'P001'
                          										 AND M3.SUB_CODE = A.WKORD_STATUS

                 WHERE A.COMP_CODE      = @COMP_CODE
                   AND A.DIV_CODE       = @DIV_CODE
                   AND (
                       (@WORK_SHOP_CODE = '') OR (@WORK_SHOP_CODE != '' AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE)
                       )
                   AND (
                       (@ORDER_TYPE     = '') OR (@ORDER_TYPE     != '' AND D.ORDER_TYPE     = @ORDER_TYPE)
                       )
                   ) A

    	    WHERE (
                  	<if test="STATUS_CODE == &quot;2&quot;">
	     				A.STATUS_CODE NOT IN ('8', '9')
	     			</if>
	     			<if test="STATUS_CODE != &quot;2&quot;">
	     				(@STATUS_CODE  = '') OR (@STATUS_CODE  != '' AND A.STATUS_CODE       = @STATUS_CODE)
	     			</if>

                  )
				<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)"> <!-- 20210825 수정: 거래처 팝업창 정규화 -->
					AND A.CUSTOM_CODE	  = #{CUSTOM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)"> <!-- 20210825 수정: 거래처 팝업창 정규화 -->
					AND A.CUSTOM_CODE	  LIKE #{CUSTOM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)"> <!-- 20210825 수정: 거래처 팝업창 정규화 -->
					AND A.CUSTOM_NAME   LIKE '%' + #{CUSTOM_NAME} + '%'
				</if>
              AND (
                  (@FROM_DATE    = '') OR (@FROM_DATE    != '' AND A.PRODT_END_DATE &gt;= @FROM_DATE)
                  )
              AND (
                  (@TO_DATE      = '') OR (@TO_DATE      != '' AND A.PRODT_END_DATE &lt;= @TO_DATE)
                  )
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210825 수정: 품목 팝업창 정규화 -->
					AND A.ITEM_CODE	  = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210825 수정: 품목 팝업창 정규화 -->
					AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210825 수정: 품목 팝업창 정규화 -->
					AND A.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
				</if>
              AND (
                  (@FROM_DVRY    = '') OR (@FROM_DVRY    != '' AND A.DVRY_DATE        &gt;= @FROM_DVRY)
                  )
              AND (
                  (@TO_DVRY      = '') OR (@TO_DVRY      != '' AND A.DVRY_DATE        &lt;= @TO_DVRY)
                  )
              AND (
                  (@FROM_NUM     = '') OR (@FROM_NUM     != '' AND A.WKORD_NUM        &gt;= @FROM_NUM)
                  )
              AND (
                  (@TO_NUM       = '') OR (@TO_NUM       != '' AND A.WKORD_NUM        &lt;= @TO_NUM)
                  )
              AND (
                  (@FROM_SO      = '') OR (@FROM_SO      != '' AND A.ORDER_DATE       &gt;= @FROM_SO)
                  )
              AND (
                  (@TO_SO        = '') OR (@TO_SO        != '' AND A.ORDER_DATE       &lt;= @TO_SO)
                  )
              AND (
                  (@OUT_ORDER_YN = '') OR (@OUT_ORDER_YN != '' AND A.OUT_ORDER_YN      = @OUT_ORDER_YN)
                  )
              

    	   ORDER BY A.STATUS_CODE, ISNULL(A.TOP_WKORD_NUM, ''), A.PRODT_START_DATE, A.ITEM_CODE
	</select>

	<update id="pmp180ukrvServiceImpl.updateDetail" parameterType="rMap">	/* 저장 */
	--UPmp40Kr.CPmp180UKr[fnPmp180Save] Query1

	BEGIN
	    SET NOCOUNT ON

	--  입력 변수
	    DECLARE @COMP_CODE              NVARCHAR(16)            -- 회사코드
	          , @DIV_CODE               NVARCHAR(08)            -- 사업장코드
	          , @WKORD_NUM              NVARCHAR(20)            -- 작업지시 번호
	          , @ITEM_CODE              NVARCHAR(20)            -- 품목코드
	          , @PROC_TYPE              NVARCHAR(10)            -- 저장구분     (CLOSE:마감/ ORDER:공정외주)
	          , @STATUS_CODE            NVARCHAR(01)            -- 마감여부     (N:진행/ Y:마감)
	          , @OUT_ORDER_YN           NVARCHAR(01)            -- 공정외주여부 (Y:예/ N:아니오)
	          , @USER_ID                NVARCHAR(100)            -- 사용자 ID    (시스템 코드)

	--  구매오더를 위한 변수
	    DECLARE @CustomCode             NVARCHAR(08)            -- 주거래처
	          , @OrderReqNum            NVARCHAR(20)            -- 발주예정정보

	--  일반 변수
	    DECLARE @ErrorCode              NVARCHAR(20)            -- 에러코드
	          , @ErrorDesc              NVARCHAR(1000)          -- 에러메세지

	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @DIV_CODE       = #{DIV_CODE}
	    SET @WKORD_NUM      = #{WKORD_NUM}
	    SET @ITEM_CODE      = #{ITEM_CODE}
	    SET @PROC_TYPE      = #{PROC_TYPE}
	    SET @STATUS_CODE    = #{STATUS_CODE}
	    SET @OUT_ORDER_YN   = #{OUT_ORDER_YN}
	    SET @USER_ID        = #{S_USER_ID}

	    SET @ErrorCode  = ''
	    SET @ErrorDesc  = ''

	------------------------------------------------------------------------------------------------------
	--  1. 진행중인 작업지시의 마감처리
	    IF @STATUS_CODE NOT IN ('8', '9')	--데이터 상태가 진행일때
	    BEGIN

	--      1-1. 진행중인 출고요청에 대한 마감 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS = '8'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	                WHERE A.COMP_CODE      = @COMP_CODE
	                  AND A.DIV_CODE       = @DIV_CODE
	                  AND A.CONTROL_STATUS &lt; '8'
	                  AND B.OUTSTOCK_NUM  IS NOT NULL

	--      1-2. 진행중인 작업지시 마감 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'Y'
	              , WKORD_STATUS = '8'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM
	    END

	------------------------------------------------------------------------------------------------------
	--  완료처리된 작업지시의 진행 처리
	    IF @STATUS_CODE = '9'	--데이터 상태가 완료일때
	    BEGIN

	--  완료처리된 출고요청에 대한 진행 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS  = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	        WHERE   A.COMP_CODE      = @COMP_CODE
	        AND     A.DIV_CODE       = @DIV_CODE
	        AND     A.CONTROL_STATUS = '9'
	        AND     B.OUTSTOCK_NUM  IS NOT NULL

	--  완료처리된 작업지시 진행 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'N'
	              , WKORD_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM

			UPDATE PMR100T
			  SET  CONTROL_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
			WHERE  COMP_CODE = @COMP_CODE
			  AND  DIV_CODE = @DIV_CODE
			  AND  WKORD_NUM = @WKORD_NUM


	    END
	------------------------------------------------------------------------------------------------------
	--  2. 마감처리된 작업지시의 진행 처리
	    IF @STATUS_CODE = '8'	--데이터 상태가 마감일때
	    BEGIN

	--      2-1. 마감처리된 출고요청에 대한 진행 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS  = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	        WHERE   A.COMP_CODE      = @COMP_CODE
	        AND     A.DIV_CODE       = @DIV_CODE
	        AND     A.CONTROL_STATUS = '8'
	        AND     B.OUTSTOCK_NUM  IS NOT NULL

	--      2-2. 마감처리된 작업지시 진행 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'N'
	              , WKORD_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM
	    END

	------------------------------------------------------------------------------------------------------
	--  3. 공정외주 처리로직
	    IF @PROC_TYPE = 'ORDER'
	    BEGIN

	--      3-1. 공정외주 등록
	        IF @OUT_ORDER_YN = 'N'
	        BEGIN

	--          3-1-1. 해당품목의 주거래처 조회
	            SELECT  TOP 1
	                    @CustomCode = ISNULL(CUSTOM_CODE, '')
	            FROM    BPR200T WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     ITEM_CODE   = @ITEM_CODE

	--          3-1-2. 발주예정번호 채번
	            EXEC SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, 'MRP400T', 'M', '', '1', @OrderReqNum OUTPUT  -- 일채번

	--          3-1-3. 발주예정정보 생성
	            INSERT  INTO    MRP400T
	            (       COMP_CODE               -- 법인코드
	                  , DIV_CODE                -- 사업장
	                  , ORDER_REQ_NUM           -- 발주예정번호
	                  , MRP_CONTROL_NUM         -- MRP 관리번호
	                  , ITEM_CODE               -- 품목코드
	                  , BASIS_DATE              -- 투입일자
	                  , CREATE_DATE             -- 요청일자
	                  , SUPPLY_TYPE             -- 조달구분  (B014) - 1:구매, 2:사내가공, 3:외주
	                  , DOM_FORIGN              -- 국내외구분(B019) - 1:국내, 2:해외, 3:국내외
	                  , REQ_PLAN_Q              -- 요청량
	                  , ORDER_PLAN_Q            -- 발주예정량(재고단위)
	                  , ORDER_PLAN_DATE         -- 발주예정일
	                  , ORDER_YN                -- 발주예정반영여부 (M003) - N:미반영, X:불필요, Y:반영
	                  , CUSTOM_CODE             -- 거래처코드
	                  , MRP_YN                  -- MRP_YN
	                  , WK_PLAN_NUM             -- 생산계획번호
	                  , WKORD_NUM               -- 작업지시번호
	                  , PROJECT_NO              -- 관리번호
	                  , REMARK                  -- 비고
	                  , LOT_NO                  -- LOT_NO
	            )
	            SELECT  COMP_CODE
	                  , DIV_CODE
	                  , @OrderReqNum            AS ORDER_REQ_NUM
	                  , '*'                     AS MRP_CONTROL_NUM
	                  , ITEM_CODE
	                  , PRODT_END_DATE          AS BASIS_DATE
	                  , PRODT_START_DATE        AS CREATE_DATE
	                  , '3'                     AS SUPPLY_TYPE
	                  , '1'                     AS DOM_FORIGN
	                  , WKORD_Q                 AS REQ_PLAN_Q
	                  , WKORD_Q                 AS ORDER_PLAN_Q
	                  , PRODT_START_DATE        AS ORDER_PLAN_DATE
	                  , 'N'                     AS ORDER_YN
	                  , @CustomCode             AS CUSTOM_CODE
	                  , 'Y'                     AS MRP_YN
	                  , WK_PLAN_NUM
	                  , WKORD_NUM
	                  , PROJECT_NO
	                  , REMARK
	                  , LOT_NO
	            FROM    PMP100TV1 WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM

	        END

	--      3-2. 공정외주 취소
	        IF @OUT_ORDER_YN = 'Y'
	        BEGIN

	            SELECT  TOP 1 @ErrorDesc = uniLITE.fnGetErrorMsg(54524, @WKORD_NUM)
	            FROM    MRP400T WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM
	            AND     ORDER_YN    = 'Y'
	            AND     SUPPLY_TYPE != '2'

	            IF @@ROWCOUNT &gt;= 1
	                BEGIN
	                    SET @ErrorCode = '54524'
	                    GOTO ERROR_HANDLER
	                END

	--          3-2-2. 구매오더 삭제
	            DELETE  FROM    MRP400T
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM
	            AND     ORDER_YN    = 'N'

	        END

	    END

	------------------------------------------------------------------------------------------------------
	-- 4. Error Handler 처리
	ERROR_HANDLER:
	    SELECT TOP 1 ISNULL(@ErrorCode, '') ERROR_CODE, ISNULL(@ErrorDesc, '') ERROR_DESC

	END
	</update>

	<select id="pmp180ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<select id="pmp180ukrvServiceImpl.fnWorkShopCode" parameterType="Map" resultType="rMap">
		    SELECT TOP 1 TREE_CODE, TREE_NAME
			  FROM BSA230T
			 WHERE COMP_CODE  = #{COMP_CODE}
			   AND TYPE_LEVEL = #{DIV_CODE}
			   AND USE_YN     = 'Y'
	</select>
</mapper>