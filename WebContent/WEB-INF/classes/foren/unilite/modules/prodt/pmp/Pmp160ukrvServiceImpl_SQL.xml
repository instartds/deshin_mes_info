<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmp160ukrvServiceImpl">
	<select id="pmp160ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* pmp160ukrv.Cpmp160ukrv[fnPmp130QStd] Query1 */
		BEGIN
			SET NOCOUNT ON
		    SET ARITHABORT ON
			
			DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
			      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
			      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
			      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
			      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */
						
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}  
			
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId
			
			SET @RefItem = ISNULL(@RefItem, N'0')
			
		    /* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'
			
			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
			
			 /* 데이터 조회 */
		    SELECT  
		        CASE WHEN A.WKORD_STATUS = '2' THEN '3' ELSE A.WKORD_STATUS END     AS WORK_END_YN
		        , A.DIV_CODE
		        , A.WKORD_NUM
		        , A.WORK_SHOP_CODE
		        , A.ITEM_CODE
		        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		               ELSE C1.ITEM_NAME
		          END                                                                AS ITEM_NAME
		        , C1.SPEC
		        , C1.STOCK_UNIT
		        , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
		           END)                                                             AS PRODT_START_DATE
		        , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
		           END)                                                             AS PRODT_END_DATE
		        , ISNULL(A.WKORD_Q, 0)                                              AS WKORD_Q
		        , ISNULL(A.PRODT_Q, 0)                                              AS PRODT_Q
		        , A.LOT_NO                                                          AS LOT_NO
		        , A.REMARK                                                          AS REMARK1
		        , A.PROJECT_NO
		        , A.PJT_CODE
		        , B.ORDER_NUM
		        , CASE WHEN B.PLAN_TYPE != 'T' THEN ISNULL(C.ORDER_Q, 0)
		               ELSE ISNULL(D.QTY, 0) * ISNULL(D.TRANS_RATE, 0)
		          END                                                               AS ORDER_Q
		        , CASE WHEN B.PLAN_TYPE != 'T' THEN (CASE WHEN ISNULL(C.DVRY_DATE, '') = ''
		                                                  THEN ''
		                                                  ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(C.DVRY_DATE, 1, 4))
		                                                                                          , 'MM'  , SUBSTRING(C.DVRY_DATE, 5, 2))
		                                                                                          , 'DD'  , SUBSTRING(C.DVRY_DATE, 7, 2))
		                                             END)                           
		                                        ELSE(CASE WHEN ISNULL(D.DELIVERY_DATE, '') = ''
		                                                  THEN ''
		                                                  ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.DELIVERY_DATE, 1, 4))
		                                                                                          , 'MM'  , SUBSTRING(D.DELIVERY_DATE, 5, 2))
		                                                                                          , 'DD'  , SUBSTRING(D.DELIVERY_DATE, 7, 2))
		                                             END)                           
		        END                                                                 AS DVRY_DATE
		        , ISNULL(B.REMARK, '')                                              AS REMARK2
		        , ISNULL(C2.WH_CODE, '')                                            AS WH_CODE
		      FROM            PMP100T   A  WITH (NOLOCK)
		           LEFT  JOIN PPL100T   B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
		                                                AND  B.DIV_CODE    = A.DIV_CODE
		                                                AND  B.WK_PLAN_NUM = A.WK_PLAN_NUM
		           LEFT  JOIN SOF110T   C  WITH (NOLOCK) ON  C.COMP_CODE   = B.COMP_CODE
		                                                AND  C.ORDER_NUM   = B.ORDER_NUM
		                                                AND  C.SER_NO      = B.SEQ
		                                                AND  B.PLAN_TYPE  != 'T'
		           LEFT  JOIN TEA110T   D  WITH (NOLOCK) ON  D.COMP_CODE   = B.COMP_CODE
		                                                AND  D.SO_SER_NO   = B.ORDER_NUM
		                                                AND  D.SO_SER      = B.SEQ
		                                                AND  B.PLAN_TYPE   = 'T'
		           LEFT  JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                                AND C1.ITEM_CODE   = A.ITEM_CODE
		           LEFT  JOIN BSA230T   C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                                AND C2.TREE_CODE   = A.WORK_SHOP_CODE
		
		     WHERE  A.COMP_CODE         = @CompCode
		     AND    A.LINE_END_YN       = 'Y'
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
		     AND    A.DIV_CODE          = #{DIV_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		     AND    A.WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
		     </if>		       
			 <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_FR)">
		     AND    A.PRODT_START_DATE &gt;= #{PRODT_START_DATE_FR}         /*  시작 착수예정일  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_TO)">
		     AND    A.PRODT_START_DATE &lt;= #{PRODT_START_DATE_TO}         /* 종료 착수예정일    */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WKORD_NUM_FR)">
		     AND    A.WKORD_NUM        &gt;= #{WKORD_NUM_FR}                /* 시작 작업지시번호  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WKORD_NUM_TO)">
		     AND    A.WKORD_NUM        &lt;= #{WKORD_NUM_TO}                /* 종료 작업지시번호  */
		     </if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
				   AND A.ITEM_CODE = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
				   AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
				   AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                    ELSE C1.ITEM_NAME
		               END LIKE '%' + #{ITEM_NAME} + '%' 
			</if>
		     <if test="@foren.Ognl@isNotEmpty(LOT_NO_FR)">
		     AND    A.LOT_NO    &gt;= #{LOT_NO_FR}          /* LOT번호 FROM  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(LOT_NO_TO)">
		     AND    A.LOT_NO    &lt;= #{LOT_NO_TO}          /*  LOT번호 TO  */
		     </if>
		     
		      <if test="@foren.Ognl@isNotEmpty(wkordNumList)">
		     AND A.WKORD_NUM IN
		     <foreach collection="wkordNumList" item="item" separator="," close=")" open="(">
		           #{item}
		     </foreach>
		 </if>
		     
		    
		     ORDER BY A.WKORD_NUM, A.ITEM_CODE
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="pmp160ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">
		/* pmp160ukrv.Cpmp160ukrv[fnPmp130QSt1] Query2 */
		BEGIN
	    	SET NOCOUNT ON
	        SET ARITHABORT ON
	        
	        DECLARE  @DATE      NVARCHAR(100)
	                ,@ITEM_CODE NVARCHAR(100)
	        
	        DECLARE PMP200T_CUR CURSOR LOCAL FOR
	        
	                SELECT  CASE WHEN ISNULL(A.OUTSTOCK_REQ_DATE, '00000000') = '00000000'
	                             THEN CONVERT(NVARCHAR(08), GETDATE(), 112)
	                             ELSE A.OUTSTOCK_REQ_DATE
	                         END AS BASE_DATE
	                      , A.ITEM_CODE
	                  FROM PMP200T AS A WITH (NOLOCK)
	                 WHERE A.COMP_CODE = #{S_COMP_CODE}
	                   AND A.DIV_CODE  = #{DIV_CODE}
	                   AND A.WKORD_NUM = #{WKORD_NUM}
	                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.OUTSTOCK_REQ_DATE, A.ITEM_CODE
	         
	         DECLARE  @DATE2      VARCHAR(MAX)
	                 ,@ITEM_CODE2 VARCHAR(MAX)  
	        
	        SET @DATE2 = ''
	        SET @ITEM_CODE2 = ''
	        
	        OPEN PMP200T_CUR
	        FETCH PMP200T_CUR INTO @DATE, @ITEM_CODE
	        
	         WHILE(@@FETCH_STATUS = 0)
	          BEGIN
	              SET @DATE2 =  @DATE2 + @DATE + '|#'
	              SET @ITEM_CODE2 =  @ITEM_CODE2 + @ITEM_CODE + '|#'
	        
	           --PRINT @DATE2
	           --PRINT @ITEM_CODE2
	        
	              FETCH NEXT FROM PMP200T_CUR INTO @DATE, @ITEM_CODE
	          END
	        
	        CLOSE PMP200T_CUR
	        DEALLOCATE PMP200T_CUR
	        
	        --PRINT 'END'
	        
	        --PRINT @DATE2
	        --PRINT @ITEM_CODE2
	        
	        
	        DECLARE         @CompCode          NVARCHAR(08)
	                      , @DivCode           NVARCHAR(08)
	                      , @WkordNum          NVARCHAR(20)
	    
	    				  , @UserId            NVARCHAR(100) /* 사용자ID */
	              		  , @LangType          NVARCHAR(2)  /* 언어구분    */
	              		  , @RefItem           NVARCHAR(01) /* 명칭 참조 유형  */
	              		  , @DateFormat        NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	              		  
	              		  
	                      , @BaseDate          VARCHAR(8000)
	                      , @FromItem          VARCHAR(8000)
	                      , @ToItem            NVARCHAR(20)
	                      , @QryType           NVARCHAR(01)
	    
	        SET @CompCode = #{S_COMP_CODE}
	        SET @LangType = #{S_LANG_CODE}   
	        SET @DivCode  = #{DIV_CODE}
	        SET @BaseDate = @DATE2
	        SET @FromItem = @ITEM_CODE2
	        SET @ToItem   = ''
	        SET @WkordNum = #{WKORD_NUM}
	        SET @QryType  = '5'
	        SET @UserId   = #{S_USER_ID}
	    
	        SELECT TOP 1 @RefItem = REF_ITEM
	        FROM   BSA300T WITH (NOLOCK)
	        WHERE  USER_ID = @UserId
	    
	        SET @RefItem = ISNULL(@RefItem, '')
	    
	        DECLARE @ItemAccount        NVARCHAR(02)
	    
	        SELECT TOP 1 @ItemAccount = C1.ITEM_ACCOUNT
	        FROM              PMP100TV1 A  WITH (NOLOCK)
	               INNER JOIN BPR200T   C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                    AND C1.DIV_CODE  = A.DIV_CODE
	                                                    AND C1.ITEM_CODE = A.ITEM_CODE
	        WHERE  A.COMP_CODE = @CompCode
	        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	      	AND A.DIV_CODE     = #{DIV_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	    	AND A.WKORD_NUM     = #{WKORD_NUM}
	        </if>
	    
	        SET @ItemAccount = ISNULL(@ItemAccount, '')
	    
	        DECLARE @EXChgYN            NVARCHAR(01)
	    
	        SELECT @EXChgYN = MAX(A.USE_YN)
	        FROM   (/* BOM 대체품목 등록여부 */
	               SELECT TOP 1 COMP_CODE, SUB_CODE AS USE_YN
	               FROM   BSA100T WITH (NOLOCK)
	               WHERE  COMP_CODE = @CompCode
	               AND    MAIN_CODE = 'B081'
	               AND    (
	                      REF_CODE1 = 'Y'
	                   OR REF_CODE1 = 'y'
	                      )
	               UNION ALL
	               SELECT TOP 1 COMP_CODE, ISNULL(REF_CODE1, 'N') AS USE_YN
	               FROM   BSA100T WITH (NOLOCK)
	               WHERE  COMP_CODE = @CompCode
	               AND    MAIN_CODE = 'S067'
	               AND    SUB_CODE  = '1'
	               ) A
	        WHERE  A.COMP_CODE = @CompCode
	    
	        SET @EXChgYN = ISNULL(@EXChgYN, 'N')
	    
	        IF @EXChgYN = 'Y'
	    
	            SELECT  
	                    A.COMP_CODE
	                  , A.DIV_CODE
	                  , A.WKORD_NUM
	                  , A.ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME
	                    END                         AS ITEM_NAME
	                  , A.WORK_SHOP_CODE
	                  , C1.SPEC
	                  , C1.STOCK_UNIT
	                  , A.UNIT_Q
	                  --20180801 추가
	                  , A.LOSS_RATE
	                  , A.ALLOCK_Q
	                  , ISNULL(D.PAB_STOCK_Q,0)     AS PAB_STOCK_Q
	                  , CASE WHEN ISNULL(A.ALLOCK_Q,0) - ISNULL(D.PAB_STOCK_Q,0) &gt; 0
	                         THEN ISNULL(A.ALLOCK_Q,0) - ISNULL(D.PAB_STOCK_Q,0)
	                         ELSE 0
	                     END                        AS SHORTAGE_Q
	                  , CASE WHEN @ItemAccount = '00' 
	                              THEN ISNULL((SELECT TOP 1 'Y'
	                                           FROM   SET110T WITH (NOLOCK)
	                                           WHERE  COMP_CODE       = A.COMP_CODE
	                                           AND    DIV_CODE        = A.DIV_CODE
	                                           AND    SET_ITEM_CODE   = B.ITEM_CODE
	                                           AND    CONST_ITEM_CODE = A.ITEM_CODE), 'N')
	    
	                              ELSE ISNULL((SELECT TOP 1 'Y' 
	                  											   FROM (
	                  											   		SELECT TOP 1 1 S
	                  											   		FROM   BPR510T S1 WITH (NOLOCK)
	                  											   		WHERE  COMP_CODE       = A.COMP_CODE
	                  											   		AND    DIV_CODE        = A.DIV_CODE
	                  											   		AND    PROD_ITEM_CODE  = B.ITEM_CODE
	                  											   		AND    CHILD_ITEM_CODE = A.ITEM_CODE
	                  											   		UNION --팬텀BOM의 의해 만들어진것은 부모품목이 틀리므로 추가
	                  											   		SELECT TOP 1 1 S
	                  											   		FROM   BPR510T S1 WITH (NOLOCK)
	                  											   				INNER JOIN BPR500T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.PROD_ITEM_CODE=S2.CHILD_ITEM_CODE
	                  											   		WHERE  S1.COMP_CODE       = A.COMP_CODE
	                  											   		AND    S1.DIV_CODE        = A.DIV_CODE
	                  											   		AND    S2.PROD_ITEM_CODE  = B.ITEM_CODE
	                  											   		AND    S1.CHILD_ITEM_CODE = A.ITEM_CODE
	                  											   ) X  
	                  										), 'N')
	                    END                         AS EXCHG_EXIST_YN
	                  , A.REF_ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C2.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                         ELSE C2.ITEM_NAME
	                    END                         AS REF_ITEM_NAME
	                  , A.EXCHG_YN
	                  , A.OUT_METH
	                  , (CASE WHEN ISNULL(A.OUTSTOCK_REQ_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_REQ_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(A.OUTSTOCK_REQ_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(A.OUTSTOCK_REQ_DATE, 7, 2))
	                 END)													        AS OUTSTOCK_REQ_DATE
	                  , A.OUTSTOCK_REQ_Q
	                  , A.OUTSTOCK_NUM
	                  , ISNULL(C.OUTSTOCK_Q, 0)     AS OUTSTOCK_Q
	                  , A.REF_TYPE
	                  , A.GRANT_TYPE
	                  , A.REMARK
	                  , A.PROJECT_NO
	                  , A.PJT_CODE
	                  , ISNULL(A.PATH_CODE, '0')    AS PATH_CODE
	                  , ISNULL(A.WH_CODE, '')       AS WH_CODE
	                  , ''                          AS UPDATE_DB_USER
	                  , ''                          AS UPDATE_DB_TIME
	                  , A.SEQ
	                  , A.GROUP_CODE
	                  --20200324 추가
	                  , A.WEIGHT_RATE
	            FROM               PMP200T AS A  WITH (NOLOCK)
	                    INNER JOIN PMP100T AS B  WITH (NOLOCK) ON  B.COMP_CODE       = A.COMP_CODE
	                                                          AND  B.DIV_CODE        = A.DIV_CODE
	                                                          AND  B.WKORD_NUM       = A.WKORD_NUM
	                                                          AND  B.LINE_END_YN     = 'Y'
	                    LEFT  JOIN PMP300T AS C  WITH (NOLOCK) ON  C.COMP_CODE       = A.COMP_CODE
	                                                          AND  C.DIV_CODE        = A.DIV_CODE
	                                                          AND  C.OUTSTOCK_NUM    = A.OUTSTOCK_NUM
	                                                          AND  C.ITEM_CODE       = A.ITEM_CODE
	                                                          AND  C.REF_WKORD_NUM   = A.WKORD_NUM
	                                                          AND  C.PATH_CODE       = A.PATH_CODE
	                    LEFT  JOIN uniLITE.fnGetPABStock(@CompCode, @DivCode, @BaseDate, @FromItem, @ToItem, @QryType) D
	                                                           ON  D.COMP_CODE       = A.COMP_CODE
	                                                          AND  D.DIV_CODE        = A.DIV_CODE
	                                                          AND  D.ITEM_CODE       = A.ITEM_CODE
	                                                          AND  D.BASE_DATE       = ISNULL(A.OUTSTOCK_REQ_DATE, CONVERT(NVARCHAR(08), GETDATE(), 112))	--20200311 중복데이터 발생으로 주석 해제
	                                                          -- AND  D.BASE_DATE       = (CASE WHEN ISNULL(A.OUTSTOCK_REQ_DATE,'00000000')='00000000' THEN B.PRODT_START_DATE ELSE A.OUTSTOCK_REQ_DATE END)   --190611 가용재고표시안되는 문제로 제거
	                    LEFT  JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE
	                                                          AND C1.ITEM_CODE       = A.ITEM_CODE
	                    LEFT  JOIN BPR100T AS C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE
	                                                          AND C2.ITEM_CODE       = A.REF_ITEM_CODE
	            WHERE   A.COMP_CODE = @CompCode
	            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	      	  	AND A.DIV_CODE     = #{DIV_CODE}
	            </if>
	            <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	        	AND A.WKORD_NUM     = #{WKORD_NUM}
	            </if>
	            
	            ORDER BY A.SEQ
	        ELSE
	            SELECT  
	                    A.COMP_CODE
	                  , A.DIV_CODE
	                  , A.WKORD_NUM
	                  , A.ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME
	                    END                         AS ITEM_NAME
	                  , A.WORK_SHOP_CODE
	                  , C1.SPEC
	                  , C1.STOCK_UNIT
	                  , A.UNIT_Q
	                  --20180801 추가
	                  , A.LOSS_RATE
	                  , A.ALLOCK_Q
	                  , 0                           AS PAB_STOCK_Q
	                  , CASE WHEN ISNULL(A.ALLOCK_Q,0) &gt; 0
	                         THEN ISNULL(A.ALLOCK_Q,0)
	                         ELSE 0
	                    END                         AS SHORTAGE_Q
	                  , 'N'                         AS EXCHG_EXIST_YN
	                  , A.REF_ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C2.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                         ELSE C2.ITEM_NAME
	                    END                         AS REF_ITEM_NAME
	                  , A.EXCHG_YN
	                  , A.OUT_METH
	                  , (CASE WHEN ISNULL(A.OUTSTOCK_REQ_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_REQ_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(A.OUTSTOCK_REQ_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(A.OUTSTOCK_REQ_DATE, 7, 2))
	                   END)													          AS OUTSTOCK_REQ_DATE
	                  , A.OUTSTOCK_REQ_Q
	                  , A.OUTSTOCK_NUM
	                  , ISNULL(C.OUTSTOCK_Q, 0)     AS OUTSTOCK_Q
	                  , A.REF_TYPE
	                  , A.GRANT_TYPE
	                  , A.REMARK
	                  , A.PROJECT_NO
	                  , A.PJT_CODE
	                  , ISNULL(A.PATH_CODE, '0')    AS PATH_CODE
	                  , ISNULL(A.WH_CODE, '')       AS WH_CODE
	                  , ''                          AS UPDATE_DB_USER
	                  , ''                          AS UPDATE_DB_TIME
	                  --20200324 추가
	                  , A.WEIGHT_RATE
	            FROM               PMP200T AS A  WITH (NOLOCK)
	                    LEFT  JOIN PMP300T AS C  WITH (NOLOCK) ON  C.COMP_CODE       = A.COMP_CODE
	                                                          AND  C.DIV_CODE        = A.DIV_CODE
	                                                          AND  C.OUTSTOCK_NUM    = A.OUTSTOCK_NUM
	                                                          AND  C.ITEM_CODE       = A.ITEM_CODE
	                                                          AND  C.REF_WKORD_NUM   = A.WKORD_NUM
	                                                          AND  C.PATH_CODE       = A.PATH_CODE
	                    LEFT  JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE
	                                                          AND C1.ITEM_CODE       = A.ITEM_CODE
	                    LEFT  JOIN BPR100T AS C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE
	                                                          AND C2.ITEM_CODE       = A.REF_ITEM_CODE
	            WHERE   A.COMP_CODE = @CompCode
	            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	      	  	AND A.DIV_CODE     = #{DIV_CODE}
	            </if>
	            <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	        	AND A.WKORD_NUM     = #{WKORD_NUM}
	            </if>
	            
	            ORDER BY A.SEQ
	            
	        SET NOCOUNT ON
	        SET ARITHABORT ON
		END
	</select>

	<select id="pmp160ukrvServiceImpl.selectReplaceItem1" parameterType="Map" resultType="rMap">
	    --pmp160ukrv.Cpmp160ukrv[fnPmp130QPop] Query01
	    BEGIN
	        DECLARE @COMP_CODE          NVARCHAR(08)        -- (필수) 법인코드
	              , @DIV_CODE           NVARCHAR(08)        -- (필수) 사업장
	              , @PROD_ITEM_CODE     NVARCHAR(20)        -- (필수) 모품목코드
	              , @CHILD_ITEM_CODE    NVARCHAR(20)        -- (필수) 자품목코드
	              , @BASE_DATE1         NVARCHAR(08)        -- (필수) 기준일자
	              , @USER_ID            NVARCHAR(100)        -- (필수) 사용자ID
	    
	        SET @COMP_CODE          = #{S_COMP_CODE}
	        SET @DIV_CODE           = #{DIV_CODE}
	        SET @PROD_ITEM_CODE     = #{PROD_ITEM_CODE}
	        SET @CHILD_ITEM_CODE    = #{CHILD_ITEM_CODE}
	        SET @BASE_DATE1         = CONVERT(NVARCHAR(10), GETDATE(), 112)
	        SET @USER_ID            = #{S_USER_ID}
	    
	    -----------------------------------------------------------------------------------------------------------------------
	        DECLARE @ItemAccount        NVARCHAR(02)
	    
	        SELECT TOP 1 @ItemAccount = A.ITEM_ACCOUNT
	        FROM   BPR200T   A WITH (NOLOCK)
	        WHERE  A.COMP_CODE = @COMP_CODE
	        AND    A.DIV_CODE  = @DIV_CODE
	        AND    A.ITEM_CODE = @PROD_ITEM_CODE
	    
	        SET @ItemAccount = ISNULL(@ItemAccount, '')
	    
	    -----------------------------------------------------------------------------------------------------------------------
	        IF @ItemAccount = '00'      -- 모품목이 '상품'일 경우 SET 대체품목조회
	        BEGIN
	            SELECT A.COMP_CODE
	                 , A.DIV_CODE
	                 , A.ITEM_CODE
	                 , @BASE_DATE1  AS BASE_DATE
	            FROM   (-- SET 대체품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.EXCHG_ITEM_CODE AS ITEM_CODE
	                   FROM   SET110T  A WITH (NOLOCK)
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.SET_ITEM_CODE   = @PROD_ITEM_CODE
	                   AND    A.CONST_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = 'Y'
	    
	                   UNION ALL
	    
	                   -- SET 구성품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.CONST_ITEM_CODE AS ITEM_CODE
	                   FROM   SET100T  A WITH (NOLOCK)
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.SET_ITEM_CODE   = @PROD_ITEM_CODE
	                   AND    A.CONST_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = 'Y'
	                   ) A
	            WHERE  A.COMP_CODE  = @COMP_CODE
	            AND    A.DIV_CODE   = @DIV_CODE
	            GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
	        END
	        ELSE                        -- 모품목이 '상품'이 아닐 경우 기존 BOM 대체품목조회
	        BEGIN
	            SELECT A.COMP_CODE
	                 , A.DIV_CODE
	                 , A.ITEM_CODE
	                 , @BASE_DATE1  AS BASE_DATE
	            FROM   (-- 대체품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.EXCHG_ITEM_CODE AS ITEM_CODE
	                   FROM   uniLITE.fnValidEXCHG(@COMP_CODE, @DIV_CODE, @BASE_DATE1) A
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.PROD_ITEM_CODE  = @PROD_ITEM_CODE
	                   AND    A.CHILD_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = '1'
	    
	                   UNION ALL
	    
	                   -- 자품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.CHILD_ITEM_CODE AS ITEM_CODE
	                   FROM   uniLITE.fnValidBOM(@COMP_CODE, @DIV_CODE, @BASE_DATE1, '') A
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.PROD_ITEM_CODE  = @PROD_ITEM_CODE
	                   AND    A.CHILD_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = '1'
	                   ) A
	            WHERE  A.COMP_CODE  = @COMP_CODE
	            AND    A.DIV_CODE   = @DIV_CODE
	            GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
	        END
	    END            
	</select>	

	<select id="pmp160ukrvServiceImpl.selectReplaceItem2" parameterType="Map" resultType="rMap">
	    BEGIN
	        DECLARE @COMP_CODE          NVARCHAR(08)        -- (필수) 법인코드
	              , @DIV_CODE           NVARCHAR(08)        -- (필수) 사업장
	              , @PROD_ITEM_CODE     NVARCHAR(20)        -- (필수) 모품목코드
	              , @CHILD_ITEM_CODE    NVARCHAR(20)        -- (필수) 자품목코드
	              , @BASE_DATE1         NVARCHAR(08)        -- (필수) 기준일자(fnValidEXCHG)
	              , @BASE_DATE2         VARCHAR(8000)       -- (필수) 기준일자(fnGetPABStock)
	              , @FROM_ITEM          VARCHAR(8000)       -- (필수) 품목코드(FROM)
	              , @TO_ITEM            NVARCHAR(20)        -- (필수) 품목코드(TO)
	              , @QRY_TYPE           NVARCHAR(01)        -- (필수) 쿼리유형(1: 현재고,  2: 현재고+입고예정, 3: 현재고+입고예정+출고예정, 4: 현재고+입고예정+출고예정+외주재고, 5: Array 조회)
	              , @USER_ID            NVARCHAR(100)        -- (필수) 사용자ID
	    
	        SET @COMP_CODE          = #{S_COMP_CODE}
	        SET @DIV_CODE           = #{DIV_CODE}
	        SET @PROD_ITEM_CODE     = #{PROD_ITEM_CODE}
	        SET @CHILD_ITEM_CODE    = #{CHILD_ITEM_CODE}
	        SET @BASE_DATE1         = CONVERT(NVARCHAR(10), GETDATE(), 112)
	        SET @BASE_DATE2         = #{BASE_DATE2}
	        SET @FROM_ITEM          = #{FROM_ITEM}
	        SET @TO_ITEM            = N''
	        SET @QRY_TYPE           = N'5'
	        SET @USER_ID            = #{S_USER_ID}
	    
	    -----------------------------------------------------------------------------------------------------------------------
	        DECLARE @RefItem            NVARCHAR(01)
	    
	        SELECT TOP 1 @RefItem = REF_ITEM
	        FROM   BSA300T WITH (NOLOCK)
	        WHERE  USER_ID = @USER_ID
	    
	        SET @RefItem = ISNULL(@RefItem, '')
	    
	    -----------------------------------------------------------------------------------------------------------------------
	        DECLARE @ItemAccount        NVARCHAR(02)
	    
	        SELECT TOP 1 @ItemAccount = A.ITEM_ACCOUNT
	        FROM   BPR200T   A WITH (NOLOCK)
	        WHERE  A.COMP_CODE = @COMP_CODE
	        AND    A.DIV_CODE  = @DIV_CODE
	        AND    A.ITEM_CODE = @PROD_ITEM_CODE
	    
	        SET @ItemAccount = ISNULL(@ItemAccount, '')
	    
	    -----------------------------------------------------------------------------------------------------------------------
	        IF @ItemAccount = '00'      -- 모품목이 '상품'일 경우 SET 대체품목조회
	        BEGIN
	            SELECT A.ITEM_CODE
	                 , A.ITEM_NAME
	                 , A.SPEC
	                 , A.STOCK_UNIT
	                 , A.PAB_STOCK_Q
	                 , A.ALLOCK_Q
	                 , A.UNIT_Q
	                 , A.PROD_UNIT_Q
	                 , A.LOSS_RATE
	                 , A.UNIT_P1
	                 , A.UNIT_P2
	                 , A.UNIT_P3
	                 , A.MAN_HOUR
	                 , A.USE_YN
	                 , A.BOM_YN
	                 , A.START_DATE
	                 , A.STOP_DATE
	                 , A.REMARK
	                 , A.PRIOR_SEQ
	            FROM   (-- SET 대체품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.EXCHG_ITEM_CODE          AS ITEM_CODE
	                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                               ELSE C1.ITEM_NAME
	                          END                        AS ITEM_NAME
	                        , C1.SPEC
	                        , C1.STOCK_UNIT
	                        , ISNULL(B.PAB_STOCK_Q,0)    AS PAB_STOCK_Q
	                        , CONVERT(NUMERIC(18,6), 0)  AS ALLOCK_Q
	                        , A.CONST_Q                  AS UNIT_Q
	                        , A.BASIS_SET_Q              AS PROD_UNIT_Q
	                        , CONVERT(NUMERIC(05,2), 0)  AS LOSS_RATE
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P1
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P2
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P3
	                        , CONVERT(NUMERIC(06,4), 0)  AS MAN_HOUR
	                        , A.USE_YN
	                        , CONVERT(NVARCHAR(02), '1') AS BOM_YN
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, GETDATE()) AS START_DATE
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, GETDATE()) AS STOP_DATE 
	                        , A.REMARK
	                        , A.PRIOR_SEQ
	                   FROM   SET110T A  WITH (NOLOCK)
	                          LEFT  JOIN uniLITE.fnGetPABStock(@COMP_CODE, @DIV_CODE, @BASE_DATE2, @FROM_ITEM, @TO_ITEM, @QRY_TYPE) B
	                                  ON B.COMP_CODE   = A.COMP_CODE
	                                 AND B.DIV_CODE    = A.DIV_CODE
	                                 AND B.ITEM_CODE   = A.EXCHG_ITEM_CODE
	                                 AND B.BASE_DATE   = @BASE_DATE1
	                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                             AND C1.ITEM_CODE = A.EXCHG_ITEM_CODE
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.SET_ITEM_CODE   = @PROD_ITEM_CODE
	                   AND    A.CONST_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = 'Y'
	    
	                   UNION ALL
	    
	                   -- SET 구성품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.CONST_ITEM_CODE          AS ITEM_CODE
	                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                               ELSE C1.ITEM_NAME
	                          END                        AS ITEM_NAME
	                        , C1.SPEC
	                        , C1.STOCK_UNIT
	                        , ISNULL(B.PAB_STOCK_Q,0)    AS PAB_STOCK_Q
	                        , CONVERT(NUMERIC(18,6), 0)  AS ALLOCK_Q
	                        , A.CONST_Q                  AS UNIT_Q
	                        , A.BASIS_SET_Q              AS PROD_UNIT_Q
	                        , CONVERT(NUMERIC(05,2), 0)  AS LOSS_RATE
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P1
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P2
	                        , CONVERT(NUMERIC(18,4), 0)  AS UNIT_P3
	                        , CONVERT(NUMERIC(06,4), 0)  AS MAN_HOUR
	                        , A.USE_YN
	                        , CONVERT(NVARCHAR(02), '1') AS BOM_YN
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, GETDATE()) AS START_DATE
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, GETDATE()) AS STOP_DATE 
	                        , A.REMARK
	                        , CONVERT(NUMERIC(03,0), 0)  AS PRIOR_SEQ
	                   FROM   SET100T A  WITH (NOLOCK)
	                          LEFT  JOIN uniLITE.fnGetPABStock(@COMP_CODE, @DIV_CODE, @BASE_DATE2, @FROM_ITEM, @TO_ITEM, @QRY_TYPE) B
	                                  ON B.COMP_CODE   = A.COMP_CODE
	                                 AND B.DIV_CODE    = A.DIV_CODE
	                                 AND B.ITEM_CODE   = A.CONST_ITEM_CODE
	                                 AND B.BASE_DATE   = @BASE_DATE1
	                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                             AND C1.ITEM_CODE = A.CONST_ITEM_CODE
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.SET_ITEM_CODE   = @PROD_ITEM_CODE
	                   AND    A.CONST_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = 'Y'
	                   ) A
	            WHERE  A.COMP_CODE  = @COMP_CODE
	            ORDER BY A.PRIOR_SEQ
	        END
	        ELSE
	        BEGIN
	            SELECT A.ITEM_CODE
	                 , A.ITEM_NAME
	                 , A.SPEC
	                 , A.STOCK_UNIT
	                 , A.PAB_STOCK_Q
	                 , A.ALLOCK_Q
	                 , A.UNIT_Q
	                 , A.PROD_UNIT_Q
	                 , A.LOSS_RATE
	                 , A.UNIT_P1
	                 , A.UNIT_P2
	                 , A.UNIT_P3
	                 , A.MAN_HOUR
	                 , A.USE_YN
	                 , A.BOM_YN
	                 , A.START_DATE
	                 , A.STOP_DATE
	                 , A.REMARK
	                 , A.PRIOR_SEQ
	            FROM   (-- 대체품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.EXCHG_ITEM_CODE          AS ITEM_CODE
	                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                               ELSE C1.ITEM_NAME
	                          END                        AS ITEM_NAME
	                        , C1.SPEC
	                        , C1.STOCK_UNIT
	                        , ISNULL(B.PAB_STOCK_Q,0)    AS PAB_STOCK_Q
	                        , CONVERT(NUMERIC(18,6), 0)  AS ALLOCK_Q
	                        , A.UNIT_Q
	                        , A.PROD_UNIT_Q
	                        , A.LOSS_RATE
	                        , A.UNIT_P1
	                        , A.UNIT_P2
	                        , A.UNIT_P3
	                        , A.MAN_HOUR
	                        , A.USE_YN
	                        , A.BOM_YN
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE 
	                        , A.REMARK
	                        , A.PRIOR_SEQ
	                   FROM              uniLITE.fnValidEXCHG(@COMP_CODE, @DIV_CODE, @BASE_DATE1) A
	                          LEFT  JOIN uniLITE.fnGetPABStock(@COMP_CODE, @DIV_CODE, @BASE_DATE2, @FROM_ITEM, @TO_ITEM, @QRY_TYPE) B
	                                  ON B.COMP_CODE   = A.COMP_CODE
	                                 AND B.DIV_CODE    = A.DIV_CODE
	                                 AND B.ITEM_CODE   = A.EXCHG_ITEM_CODE
	                                 AND B.BASE_DATE   = @BASE_DATE1
	                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                             AND C1.ITEM_CODE = A.EXCHG_ITEM_CODE
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.PROD_ITEM_CODE  = @PROD_ITEM_CODE
	                   AND    A.CHILD_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = '1'
	    
	                   UNION ALL
	    
	                   -- 자품목정보
	                   SELECT A.COMP_CODE
	                        , A.DIV_CODE
	                        , A.CHILD_ITEM_CODE          AS ITEM_CODE
	                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                               ELSE C1.ITEM_NAME
	                          END                        AS ITEM_NAME
	                        , C1.SPEC
	                        , C1.STOCK_UNIT
	                        , ISNULL(B.PAB_STOCK_Q,0)    AS PAB_STOCK_Q
	                        , CONVERT(NUMERIC(18,6), 0)  AS ALLOCK_Q
	                        , A.UNIT_Q
	                        , A.PROD_UNIT_Q
	                        , A.LOSS_RATE
	                        , A.UNIT_P1
	                        , A.UNIT_P2
	                        , A.UNIT_P3
	                        , A.MAN_HOUR
	                        , A.USE_YN
	                        , A.BOM_YN
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
	                        , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE 
	                        , A.REMARK
	                        , CONVERT(NUMERIC(03,0), 0)  AS PRIOR_SEQ
	                   FROM              uniLITE.fnValidBOM(@COMP_CODE, @DIV_CODE, @BASE_DATE1, '') A
	                          LEFT  JOIN uniLITE.fnGetPABStock(@COMP_CODE, @DIV_CODE, @BASE_DATE2, @FROM_ITEM, @TO_ITEM, @QRY_TYPE) B
	                                  ON B.COMP_CODE   = A.COMP_CODE
	                                 AND B.DIV_CODE    = A.DIV_CODE
	                                 AND B.ITEM_CODE   = A.CHILD_ITEM_CODE
	                                 AND B.BASE_DATE   = @BASE_DATE1
	                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                             AND C1.ITEM_CODE = A.CHILD_ITEM_CODE
	                   WHERE  A.COMP_CODE       = @COMP_CODE
	                   AND    A.DIV_CODE        = @DIV_CODE
	                   AND    A.PROD_ITEM_CODE  = @PROD_ITEM_CODE
	                   AND    A.CHILD_ITEM_CODE = @CHILD_ITEM_CODE
	                   AND    A.USE_YN          = '1'
	                   ) A
	            WHERE  A.COMP_CODE  = @COMP_CODE
	            ORDER BY A.PRIOR_SEQ
	        END
	    END	    	
	</select>

	<select id="pmp160ukrvServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">
		 /* pmp160ukrv.Cpmp160ukrv[fnPmp130QStd] Query2 */
		BEGIN
			SET NOCOUNT ON
		    SET ARITHABORT ON
			
			DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
			      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
			      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
			      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
			      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}   
			
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId
			
			SET @RefItem = ISNULL(@RefItem, N'0')
			
		    /* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'
			
			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			/* 데이터 조회 */

		     SELECT MAX(A.USE_YN) AS USE_YN
		     FROM   (/* BOM 대체품목 등록여*/
		           SELECT TOP 1 COMP_CODE, SUB_CODE AS USE_YN
		           FROM   BSA100T WITH (NOLOCK)
		           WHERE  COMP_CODE = @CompCode
		           AND    MAIN_CODE = 'B081'
		           AND    (
		                  REF_CODE1 = 'Y'
		               OR REF_CODE1 = 'y'
		                  )
		           UNION ALL
		           SELECT TOP 1 COMP_CODE, ISNULL(REF_CODE1, 'N') AS USE_YN
		           FROM   BSA100T WITH (NOLOCK)
		           WHERE  COMP_CODE = @CompCode
		           AND    MAIN_CODE = 'S067'
		           AND    SUB_CODE  = '1'
		           ) A
		     WHERE  A.COMP_CODE = @CompCode

		     SET NOCOUNT OFF
		     SET ARITHABORT OFF
		END
	</select>

	<insert id="pmp160ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/*pmp160ukrvServiceImpl.insertLogMaster*/
		INSERT INTO L_PMP200T
		     ( KEY_VALUE		    , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , WKORD_NUM             , ITEM_CODE             , WORK_SHOP_CODE
		     , ALLOCK_Q             , OUTSTOCK_REQ_DATE     , OUTSTOCK_REQ_Q        , UNIT_Q                , OUTSTOCK_NUM
		     , OUT_METH             , REF_ITEM_CODE         , EXCHG_YN              , REMARK                , PROJECT_NO
		     , PJT_CODE             , PATH_CODE             , WH_CODE               , GRANT_TYPE            , REF_TYPE
		     --20180801 추가
		     , LOSS_RATE
		     --20200324 추가
		     , WEIGHT_RATE
		     , INSERT_DB_USER       , INSERT_DB_TIME        , UPDATE_DB_USER        , UPDATE_DB_TIME
		)
		VALUES
		     ( #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{COMP_CODE}         , #{DIV_CODE}           , #{WKORD_NUM}          , #{ITEM_CODE}          , #{WORK_SHOP_CODE}
		     , #{ALLOCK_Q}          , #{OUTSTOCK_REQ_DATE}  , #{OUTSTOCK_REQ_Q}     , #{UNIT_Q}             , #{OUTSTOCK_NUM}
		     , #{OUT_METH}          , #{REF_ITEM_CODE}      , #{EXCHG_YN}           , #{REMARK}             , #{PROJECT_NO}
		     , #{PJT_CODE}          , #{PATH_CODE}          , #{WH_CODE}            , #{GRANT_TYPE}         , #{REF_TYPE}
		     --20180801 추가
		     , #{LOSS_RATE}
		     --20200324 추가
		     , #{WEIGHT_RATE}
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE()
		)
	</insert> 

	<update id="pmp160ukrvServiceImpl.USP_PRODT_Pmp100ukr" parameterType="Map" statementType="CALLABLE">
		{call USP_PRODT_Pmp160ukr (
		    #{KeyValue,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
		    #{ErrorDesc,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
		)}
	</update>










	<!-- detailGrid의 품목정보 입력 시, LOSS_RATE 가져오는 로직 -->
	<select id="pmp160ukrvServiceImpl.getLossRate" parameterType="Map" resultType="rMap">
		/* pmp160ukrvServiceImpl.getLossRate */
		SELECT ISNULL(LOSS_RATE, 0) AS LOSS_RATE
		  FROM BPR500T WITH(NOLOCK)
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND PATH_CODE		= #{PATH_CODE}
		   AND PROD_ITEM_CODE	= #{PROD_ITEM_CODE}
		   AND CHILD_ITEM_CODE	= #{ITEM_CODE}
		   AND START_DATE	&lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
	</select>


<!-- 예약자재 재생성 호출 로직 - 20200403 추가 -->
	<update id="pmp160ukrvServiceImpl.fnRegeneration" parameterType="Map" statementType="CALLABLE">
		{call fnRegeneration (
		    #{KEY_VALUE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
		    #{ERROR_DESC,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
		)}
	</update>
</mapper>