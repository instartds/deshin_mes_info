<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ppl117ukrvService">

	<select id="ppl117ukrvService.getCalendarList" parameterType="Map" resultType="foren.unilite.modules.com.ext.CalendarModel">
	</select>
	<select id="ppl117ukrvService.getEventList" parameterType="Map" resultType="rMap">
		/*ppl300ukrvServiceImpl.selectDetailList*/
		 WITH TMP AS (SELECT  A.EQU_CODE						            -- 설비코드
						    , A.ITEM_CODE									-- 품목코드
							, C.PROG_WORK_CODE
				FROM	  PPL350T A  WITH (NOLOCK)						--APS 결과 테이블

				LEFT JOIN PBS410T B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE		--설비별 생산 공수 등록 테이블
												 AND  A.DIV_CODE       = B.DIV_CODE
												 AND  A.EQU_CODE       = B.EQU_CODE
												 AND  A.ITEM_CODE      = B.ITEM_CODE
												 --AND  B.USE_YN     = 'Y'
				LEFT JOIN PBS200T C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE        --공정 정보
												 AND C.DIV_CODE        = B.DIV_CODE
												 AND C.WORK_SHOP_CODE  = B.WORK_SHOP_CODE
												 AND C.PROG_WORK_CODE  = B.PROG_WORK_CODE

				WHERE A.COMP_CODE      = 'MASTER'
				  AND A.DIV_CODE   	   = '02'

				--  AND B.USE_YN = 'Y'
				  AND A.PLAN_START_DATE >= '20210519'


				   AND A.MRP_CONTROL_NUM  = ( SELECT MAX(MRP_CONTROL_NUM)
											  FROM PPL350T
											  WHERE COMP_CODE = A.COMP_CODE
											    AND DIV_CODE  = A.DIV_CODE
											    AND ORDER_NUM = A.ORDER_NUM
											    AND SEQ       = A.SEQ
											)
				  AND A.CONFIRM_YN		 != 'Y'

				 UNION ALL

		 			SELECT  A.EQU_CODE									-- 설비코드
						  , A.ITEM_CODE									-- 품목코드
						  , C.PROG_WORK_CODE
				FROM	  PPL350T A  WITH (NOLOCK)						--APS 결과 테이블
				LEFT JOIN PBS410T B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE		--설비별 생산 공수 등록 테이블
												 AND  A.DIV_CODE       = B.DIV_CODE
												 AND  A.EQU_CODE       = B.EQU_CODE
												 AND  A.ITEM_CODE      = B.ITEM_CODE
												 --AND  B.USE_YN     = 'Y'
				LEFT JOIN PBS200T C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE        --공정 정보
												 AND C.DIV_CODE        = B.DIV_CODE
												 AND C.WORK_SHOP_CODE  = B.WORK_SHOP_CODE
												 AND C.PROG_WORK_CODE  = B.PROG_WORK_CODE

				WHERE A.COMP_CODE        = 'MASTER'
				  AND A.DIV_CODE   	     = '02'
				--  AND B.USE_YN = 'Y'
				  AND A.PLAN_START_DATE >= '20210519'
				  AND A.CONFIRM_YN		 = 'Y'
			)

	  SELECT AA.SCHEDULE_NO AS EventId
	        ,AA.ORDER_NUM
			,AA.SEQ
		    ,AA.WORK_SHOP_CODE
		    ,AA.WORK_SHOP_CODE_NM
		    ,AA.EQU_CODE AS EQUIP_CODE
		    ,AA.EQU_NAME
		    ,AA.EQU_NAME + '/' + AA.ITEM_CODE AS title
		    ,AA.WKORD_YN
		    ,AA.ORDER_Q
		    ,AA.DVRY_DATE
		    ,AA.WK_PLAN_Q
		    ,AA.LOT_Q
		    ,AA.PLAN_START_DATE
		    ,AA.PLAN_START_TIME_OLD
		    ,AA.PLAN_END_DATE
		    ,AA.PLAN_END_TIME_OLD
		    ,AA.PLAN_TIME
		    ,AA.SINGLE_PRODT_CT
		    ,AA.WORK_MEN
		    ,AA.LOT_NO
		    ,AA.EVIDENCE_NO
		    ,AA.WKORD_NUM
		    ,AA.WKORD_Q
		    ,AA.PRODT_Q
		    ,AA.WK_PLAN_NUM
		    ,AA.ACT_SET_M
		    ,AA.ACT_OUT_M
		    ,AA.PLAN_START_TIME AS startDate
		    ,AA.PLAN_END_TIME AS endDate
			,AA.PROG_WORK_CODE
			,AA.CONFIRM_YN
			,CASE WHEN ISNULL(AA.DUMMY_YN,'') = '' THEN 'N' ELSE AA.DUMMY_YN END AS DUMMY_YN

			,'2' AS CalendarId
			,'false' AS IsAllDay
	  FROM
		  (  	SELECT  A.SCHEDULE_NO							    -- 스케쥴 번호(PK)
					  , A.ORDER_NUM								    -- 수주번호
					  , A.SEQ									    -- 수주순번
					  , A.WORK_SHOP_CODE						    -- 작업장
					  , '' AS WORK_SHOP_CODE_NM						-- 작업장명
					  , A.EQU_CODE									-- 설비코드
				  	  , D.EQU_NAME									-- 설비명
					  , A.ITEM_CODE									-- 품목코드
					  , CASE WHEN  A.CONFIRM_YN = 'Y'  THEN 'true' ELSE 'false' END CONFIRM_YN -- 확정여부
					  , 0 AS WKORD_YN									-- 작지여부
					  , A.ORDER_Q									-- 누적계획량
					  , '20210805' AS	DVRY_DATE						-- 납기일
					  , 0 AS WK_PLAN_Q								-- 계획량
					  , A.LOT_Q										-- LOT 분할
					  , A.PLAN_START_DATE							-- 시작일
					  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE  + ' ' + H.CODE_NAME),120),'-','.') AS PLAN_START_TIME_OLD					    -- 시작시간
					  , A.PLAN_END_DATE								-- 종료일
					  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_END_TIME,A.PLAN_END_DATE  + ' ' + H.CODE_NAME),120),'-','.')     AS PLAN_END_TIME_OLD							-- 종료시간
					  , A.PLAN_TIME									-- 제조시간
					  , B.SINGLE_PRODT_CT							-- 개별 CT
					  , A.WORK_MEN									-- 작업인원
					  , A.LOT_NO									-- LOT_NO
					  , A.MRP_CONTROL_NUM AS EVIDENCE_NO			-- 실행근거번호
					  , '' AS WKORD_NUM									-- 작지번호
					  , 0  AS WKORD_Q               					-- 지시량
					  , 0  AS PRODT_Q									-- 실적수량
					  , '' AS WK_PLAN_NUM								-- 생산계획번호
					  , 0  AS ACT_SET_M
					  , 0  AS ACT_OUT_M
					  ,A.DUMMY_START_TIME					AS PLAN_START_TIME
					  ,A.DUMMY_END_TIME   			    	AS PLAN_END_TIME
					  ,I.PROG_WORK_CODE
					  ,A.DUMMY_YN
			FROM	  PPL350T A  WITH (NOLOCK)						--APS 결과 테이블

			LEFT JOIN PBS410T B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE		--설비별 생산 공수 등록 테이블
											 AND  A.DIV_CODE       = B.DIV_CODE
											 AND  A.EQU_CODE       = B.EQU_CODE
											 AND  A.ITEM_CODE      = B.ITEM_CODE
											 --AND  B.USE_YN     = 'Y'
			LEFT JOIN PBS200T C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE        --공정 정보
											 AND C.DIV_CODE        = B.DIV_CODE
											 AND C.WORK_SHOP_CODE  = B.WORK_SHOP_CODE
											 AND C.PROG_WORK_CODE  = B.PROG_WORK_CODE
			LEFT JOIN EQU200T D  WITH (NOLOCK) ON D.COMP_CODE	   = A.COMP_CODE		--설비 기준 정보
											 AND  D.DIV_CODE       = A.DIV_CODE
											 AND  D.EQU_CODE       = A.EQU_CODE

			LEFT JOIN  BSA100T H WITH (NOLOCK)  ON  H.COMP_CODE    = A.COMP_CODE
											   AND H.MAIN_CODE    = 'P200'
											   AND H.SUB_CODE    != '$'
											   AND H.SUB_CODE     = 'A1'
			INNER JOIN			(SELECT EQU_CODE
							   		   ,PROG_WORK_CODE
									   ,MAX(ITEM_CODE) AS ITEM_CODE
						 		  FROM  TMP
						 		  GROUP BY EQU_CODE
								  ,PROG_WORK_CODE) I  ON I.EQU_CODE = A.EQU_CODE
			WHERE A.COMP_CODE      = 'MASTER'
			  AND A.DIV_CODE   	   = '02'

			  AND A.DUMMY_YN = 'Y'

		     UNION ALL


	  		SELECT  A.SCHEDULE_NO							    -- 스케쥴 번호(PK)
				  , A.ORDER_NUM								    -- 수주번호
				  , A.SEQ									    -- 수주순번
				  , A.WORK_SHOP_CODE						    -- 작업장
				  , E.TREE_NAME AS WORK_SHOP_CODE_NM			-- 작업장명
				  , A.EQU_CODE									-- 설비코드
			  	  , D.EQU_NAME									-- 설비명
				  , A.ITEM_CODE									-- 품목코드
				  , CASE WHEN  A.CONFIRM_YN = 'Y'  THEN 'true' ELSE 'false' END CONFIRM_YN -- 확정여부
				  , A4.WKORD_YN									-- 작지여부
				  , A.ORDER_Q									-- 누적계획량
				  , SUBSTRING (A5.DVRY_DATE,1,4) + '.' +  SUBSTRING (A5.DVRY_DATE,5,2) + '.' + SUBSTRING (A5.DVRY_DATE,7,2) AS	DVRY_DATE						-- 납기일
				  , A4.WK_PLAN_Q								-- 계획량
				  , A.LOT_Q										-- LOT 분할
				  , A.PLAN_START_DATE							-- 시작일
				  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' 08:30'),120),'-','.') AS PLAN_START_TIME_OLD					    -- 시작시간
				  , A.PLAN_END_DATE								-- 종료일
				  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_END_TIME,A.PLAN_END_DATE + ' 08:30'),120),'-','.')     AS PLAN_END_TIME_OLD							-- 종료시간
				  , A.PLAN_TIME									-- 제조시간
				  , B.SINGLE_PRODT_CT							-- 개별 CT
				  , A.WORK_MEN									-- 작업인원
				  , A.LOT_NO									-- LOT_NO
				  , A.MRP_CONTROL_NUM AS EVIDENCE_NO			-- 실행근거번호
				  , F.WKORD_NUM									-- 작지번호
				  , F.WKORD_Q               					-- 지시량
				  , F.PRODT_Q									-- 실적수량
				  , A.WK_PLAN_NUM								-- 생산계획번호
				  , A.ACT_SET_M
				  , A.ACT_OUT_M
				  ,CONVERT(NVARCHAR,CASE WHEN A.PLAN_START_TIME = 0 THEN
							DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)
					   ELSE
					         CASE WHEN  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
								  THEN  DATEADD(MI,A.PLAN_START_TIME + G.LUNCH_TIME + G.MORNING_REST_TIME + G.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   THEN DATEADD(MI,A.PLAN_START_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								    WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_START_TIME + G.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + H.CODE_NAME)

									WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)  &lt;   CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_START_TIME  , A.PLAN_START_DATE + ' ' + H.CODE_NAME)
								   ELSE ''
							  END
				   END,120)																														AS  PLAN_START_TIME

				,CONVERT(NVARCHAR,CASE WHEN  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
								  THEN  DATEADD(MI,A.PLAN_END_TIME + G.LUNCH_TIME + G.MORNING_REST_TIME + G.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   THEN
									    CASE WHEN DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
											 THEN DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME+ G.AFTERNOON_REST_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)
											 ELSE  DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)
                                        END

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)     &lt;    CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN   DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   ELSE ''
							 END,120)																											AS PLAN_END_TIME
				 ,C.PROG_WORK_CODE
				 ,A.DUMMY_YN
		FROM	  PPL350T A  WITH (NOLOCK)						--APS 결과 테이블
		LEFT JOIN PPL100T A4  WITH (NOLOCK) ON A.COMP_CODE     = A4.COMP_CODE
										   AND A.DIV_CODE      = A4.DIV_CODE
										   AND A.WK_PLAN_NUM   = A4.WK_PLAN_NUM
		LEFT JOIN SOF110T A5 WITH (NOLOCK) ON A5.COMP_CODE     = A.COMP_CODE
										  AND A5.OUT_DIV_CODE  = A.DIV_CODE
										  AND A5.ORDER_NUM     = A.ORDER_NUM
										  AND A5.SER_NO        = A.SEQ
		LEFT JOIN SOF100T A1 WITH (NOLOCK) ON A1.COMP_CODE     = A5.COMP_CODE
										  AND A1.DIV_CODE      = A5.DIV_CODE
										  AND A1.ORDER_NUM     = A5.ORDER_NUM
		LEFT JOIN BCM100T A2 WITH (NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
										  AND A2.CUSTOM_CODE   = A1.CUSTOM_CODE
		LEFT JOIN BPR100T A3 WITH (NOLOCK) ON A3.COMP_CODE     = A.COMP_CODE
										  AND A3.ITEM_CODE     = A.ITEM_CODE
		LEFT JOIN PBS410T B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE		--설비별 생산 공수 등록 테이블
										 AND  A.DIV_CODE       = B.DIV_CODE
										 AND  A.EQU_CODE       = B.EQU_CODE
										 AND  A.ITEM_CODE      = B.ITEM_CODE
										 --AND  B.USE_YN     = 'Y'
		LEFT JOIN PBS200T C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE        --공정 정보
										 AND C.DIV_CODE        = B.DIV_CODE
										 AND C.WORK_SHOP_CODE  = B.WORK_SHOP_CODE
										 AND C.PROG_WORK_CODE  = B.PROG_WORK_CODE
		LEFT JOIN PMP100T F  WITH (NOLOCK) ON F.COMP_CODE      = B.COMP_CODE	    --작업지시 정보
										 AND  F.DIV_CODE       = B.DIV_CODE
										 AND  F.PROG_WORK_CODE = B.PROG_WORK_CODE
										 AND  F.WK_PLAN_NUM    = A.WK_PLAN_NUM
		LEFT JOIN EQU200T D  WITH (NOLOCK) ON D.COMP_CODE	   = A.COMP_CODE		--설비 기준 정보
										 AND  D.DIV_CODE       = A.DIV_CODE
										 AND  D.EQU_CODE       = A.EQU_CODE
		LEFT JOIN BSA230T E  WITH (NOLOCK) ON E.COMP_CODE	   = A.COMP_CODE		--작업장 정보
										  AND E.TYPE_LEVEL     = A.DIV_CODE
										  AND E.TREE_CODE      = A.WORK_SHOP_CODE
		LEFT JOIN (SELECT  COMP_CODE
	    				  ,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END) 			  AS MORNING_REST_START_TIME  	--오전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END) 			  AS MORNING_REST_END_TIME	  	--오전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END),
									   MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END)) AS MORNING_REST_TIME 			--오전 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END) 			  AS LUNCH_START_TIME  			--점심 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END) 			  AS LUNCH_END_TIME    			--점심 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END)) AS LUNCH_TIME 				--점심 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END) 			  AS AFTERNOON_REST_START_TIME  --오후 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END) 			  AS AFTERNOON_REST_END_TIME	--오후 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END)) AS AFTERNOON_REST_TIME        --오후 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END) 			  AS OVER_REST_START_TIME		--야근 전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END) 			  AS OVER_REST_END_TIME         --야근 전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END)) AS OVER_REST_TIME             --야근 전 휴식 시간
					FROM BSA100T WITH (NOLOCK)
					WHERE MAIN_CODE = 'P202'
					  AND SUB_CODE != '$'
					GROUP BY COMP_CODE) G ON G.COMP_CODE = E.COMP_CODE
			LEFT JOIN  BSA100T H WITH (NOLOCK)  ON  H.COMP_CODE    = E.COMP_CODE
												AND H.MAIN_CODE    = 'P200'
												AND H.SUB_CODE    != '$'
												AND H.SUB_CODE     = 'A1'
		WHERE A.COMP_CODE      = 'MASTER'
		  AND A.DIV_CODE   	   = '02'

		--  AND B.USE_YN = 'Y'
		  AND A.PLAN_START_DATE 	 		  >= 	  '20210519'


		   AND A.MRP_CONTROL_NUM  = ( SELECT MAX(MRP_CONTROL_NUM)
									  FROM PPL350T
									  WHERE COMP_CODE = A.COMP_CODE
									    AND DIV_CODE  = A.DIV_CODE
									    AND ORDER_NUM = A.ORDER_NUM
									    AND SEQ       = A.SEQ
									)
		  AND A.CONFIRM_YN		 != 'Y'

		 UNION ALL

 			SELECT  A.SCHEDULE_NO							    -- 스케쥴 번호(PK)
				  , A.ORDER_NUM								    -- 수주번호
				  , A.SEQ									    -- 수주순번
				  , A.WORK_SHOP_CODE						    -- 작업장
				  , E.TREE_NAME AS WORK_SHOP_CODE_NM			-- 작업장명
				  , A.EQU_CODE									-- 설비코드
			  	  , D.EQU_NAME									-- 설비명
				  , A.ITEM_CODE									-- 품목코드
				  , CASE WHEN  A.CONFIRM_YN = 'Y'  THEN 'true' ELSE 'false' END CONFIRM_YN -- 확정여부
				  , A4.WKORD_YN									-- 작지여부
				  , A.ORDER_Q									-- 누적계획량
				  , SUBSTRING (A5.DVRY_DATE,1,4) + '.' +  SUBSTRING (A5.DVRY_DATE,5,2) + '.' + SUBSTRING (A5.DVRY_DATE,7,2) AS	DVRY_DATE						-- 납기일
				  , A4.WK_PLAN_Q								-- 계획량
				  , A.LOT_Q										-- LOT 분할
				  , A.PLAN_START_DATE							-- 시작일
				  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' 08:30'),120),'-','.') AS PLAN_START_TIME_OLD					    -- 시작시간
				  , A.PLAN_END_DATE								-- 종료일
				  , REPLACE(CONVERT(NVARCHAR,DATEADD(MI,A.PLAN_END_TIME,A.PLAN_END_DATE + ' 08:30'),120),'-','.')     AS PLAN_END_TIME_OLD							-- 종료시간
				  , A.PLAN_TIME									-- 제조시간
				  , B.SINGLE_PRODT_CT							-- 개별 CT
				  , A.WORK_MEN									-- 작업인원
				  , A.LOT_NO									-- LOT_NO
				  , A.MRP_CONTROL_NUM AS EVIDENCE_NO			-- 실행근거번호
				  , F.WKORD_NUM									-- 작지번호
				  , F.WKORD_Q               					-- 지시량
				  , F.PRODT_Q									-- 실적수량
				  , A.WK_PLAN_NUM								-- 생산계획번호
				  , A.ACT_SET_M
				  , A.ACT_OUT_M
				  ,CONVERT(NVARCHAR,CASE WHEN A.PLAN_START_TIME = 0 THEN
							DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)
					   ELSE
					         CASE WHEN  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
								  THEN  DATEADD(MI,A.PLAN_START_TIME + G.LUNCH_TIME + G.MORNING_REST_TIME + G.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   THEN DATEADD(MI,A.PLAN_START_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								    WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_START_TIME + G.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + H.CODE_NAME)

									WHEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)    &lt;   CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_START_TIME  , A.PLAN_START_DATE + ' ' + H.CODE_NAME)
								   ELSE ''
							  END
				   END,120)																														AS  PLAN_START_TIME

				,CONVERT(NVARCHAR,CASE WHEN  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
								  THEN  DATEADD(MI,A.PLAN_END_TIME + G.LUNCH_TIME + G.MORNING_REST_TIME + G.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.LUNCH_START_TIME)
								   THEN
									    CASE WHEN DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.AFTERNOON_REST_START_TIME)
											 THEN DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME+ G.AFTERNOON_REST_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)
											 ELSE  DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME + G.LUNCH_TIME, A.PLAN_START_DATE + ' ' + H.CODE_NAME)
                                        END

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME) >= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN  DATEADD(MI,A.PLAN_END_TIME + G.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   WHEN DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)     &lt;    CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + G.MORNING_REST_START_TIME)
								   THEN   DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + H.CODE_NAME)

								   ELSE ''
							 END,120)																											AS PLAN_END_TIME
							 ,C.PROG_WORK_CODE
							 ,A.DUMMY_YN
		FROM	  PPL350T A  WITH (NOLOCK)						--APS 결과 테이블
		LEFT JOIN PPL100T A4  WITH (NOLOCK) ON A.COMP_CODE     = A4.COMP_CODE
										   AND A.DIV_CODE      = A4.DIV_CODE
										   AND A.WK_PLAN_NUM   = A4.WK_PLAN_NUM
		LEFT JOIN SOF110T A5 WITH (NOLOCK) ON A5.COMP_CODE     = A.COMP_CODE
										  AND A5.OUT_DIV_CODE  = A.DIV_CODE
										  AND A5.ORDER_NUM     = A.ORDER_NUM
										  AND A5.SER_NO        = A.SEQ
		LEFT JOIN SOF100T A1 WITH (NOLOCK) ON A1.COMP_CODE     = A5.COMP_CODE
										  AND A1.DIV_CODE      = A5.DIV_CODE
										  AND A1.ORDER_NUM     = A5.ORDER_NUM
		LEFT JOIN BCM100T A2 WITH (NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
										  AND A2.CUSTOM_CODE   = A1.CUSTOM_CODE
		LEFT JOIN BPR100T A3 WITH (NOLOCK) ON A3.COMP_CODE     = A.COMP_CODE
										  AND A3.ITEM_CODE     = A.ITEM_CODE
		LEFT JOIN PBS410T B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE		--설비별 생산 공수 등록 테이블
										 AND  A.DIV_CODE       = B.DIV_CODE
										 AND  A.EQU_CODE       = B.EQU_CODE
										 AND  A.ITEM_CODE      = B.ITEM_CODE
										 --AND  B.USE_YN     = 'Y'
		LEFT JOIN PBS200T C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE        --공정 정보
										 AND C.DIV_CODE        = B.DIV_CODE
										 AND C.WORK_SHOP_CODE  = B.WORK_SHOP_CODE
										 AND C.PROG_WORK_CODE  = B.PROG_WORK_CODE
		LEFT JOIN PMP100T F  WITH (NOLOCK) ON F.COMP_CODE      = B.COMP_CODE	    --작업지시 정보
										 AND  F.DIV_CODE       = B.DIV_CODE
										 AND  F.PROG_WORK_CODE = B.PROG_WORK_CODE
										 AND  F.WK_PLAN_NUM    = A.WK_PLAN_NUM
		LEFT JOIN EQU200T D  WITH (NOLOCK) ON D.COMP_CODE	   = A.COMP_CODE		--설비 기준 정보
										 AND  D.DIV_CODE       = A.DIV_CODE
										 AND  D.EQU_CODE       = A.EQU_CODE
		LEFT JOIN BSA230T E  WITH (NOLOCK) ON E.COMP_CODE	   = A.COMP_CODE		--작업장 정보
										  AND E.TYPE_LEVEL     = A.DIV_CODE
										  AND E.TREE_CODE      = A.WORK_SHOP_CODE
		LEFT JOIN (SELECT  COMP_CODE
	    				  ,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END) 			  AS MORNING_REST_START_TIME  	--오전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END) 			  AS MORNING_REST_END_TIME	  	--오전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END),
									   MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END)) AS MORNING_REST_TIME 			--오전 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END) 			  AS LUNCH_START_TIME  			--점심 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END) 			  AS LUNCH_END_TIME    			--점심 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END)) AS LUNCH_TIME 				--점심 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END) 			  AS AFTERNOON_REST_START_TIME  --오후 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END) 			  AS AFTERNOON_REST_END_TIME	--오후 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END)) AS AFTERNOON_REST_TIME        --오후 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END) 			  AS OVER_REST_START_TIME		--야근 전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END) 			  AS OVER_REST_END_TIME         --야근 전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END)) AS OVER_REST_TIME             --야근 전 휴식 시간
					FROM BSA100T WITH (NOLOCK)
					WHERE MAIN_CODE = 'P202'
					  AND SUB_CODE != '$'
					GROUP BY COMP_CODE) G ON G.COMP_CODE = E.COMP_CODE
			LEFT JOIN  BSA100T H WITH (NOLOCK)  ON  H.COMP_CODE    = E.COMP_CODE
												AND H.MAIN_CODE    = 'P200'
												AND H.SUB_CODE    != '$'
												AND H.SUB_CODE     = 'A1'
		WHERE A.COMP_CODE      = 'MASTER'
		  AND A.DIV_CODE   	   = '02'

		--  AND B.USE_YN = 'Y'
		  AND A.PLAN_START_DATE 	     >=      '20210519'

		  AND A.CONFIRM_YN		 = 'Y'
    ) AA
   -- WHERE AA.EQU_CODE ='M2202'
    
    

	ORDER BY AA.PROG_WORK_CODE, AA.EQU_CODE , AA.PLAN_START_DATE, AA.PLAN_START_TIME 
	</select>
	<select  id="ppl117ukrvService.selectHolydayList" parameterType="Map" resultType="rMap">
	 DECLARE @COMP_CODE              NVARCHAR(08)             --(필수) 법인코드
              , @USER_ID                NVARCHAR(100)            --(필수) 사용자 ID
              , @START_DATE				NVARCHAR(10)             --(필수) 달력표시시작일
              , @END_DATE				NVARCHAR(10)             --(필수) 달력표시종료일

        SET @COMP_CODE  = #{S_COMP_CODE}
        SET @USER_ID    = #{S_USER_ID}
        
        SET @START_DATE = #{startDate} 
        SET @END_DATE   = #{endDate} 
        
        IF(@START_DATE IS NULL OR @START_DATE  ='' )	
        BEGIN
        	SET @START_DATE = CONVERT(NVARCHAR(10), DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) , 120) 
        END
        
        
        IF(@END_DATE IS NULL OR @END_DATE = '' )	
        BEGIN
        	SET @END_DATE   =  CONVERT(NVARCHAR(10), EOMONTH(GETDATE()), 120)
		END
		
		SELECT     cal_date 
	        	 , CONVERT(DATETIME, (CAL_DATE +' 00:00:00'),120)     AS startDate 
			     , CONVERT(DATETIME, (CAL_DATE +' 00:00:00'),120)     AS endDate     
	        	 , CASE WHEN HOLY_TYPE = '0' THEN '휴일' + CASE WHEN ISNULL(REMARK, '') = '' THEN '' ELSE '('+REMARK+')' END 
				        WHEN HOLY_TYPE = '1' THEN '반일' + CASE WHEN ISNULL(REMARK, '') = '' THEN '' ELSE '('+REMARK+')' END  
				        ELSE ''     
					END                                                                                AS title
				, holy_type
	   FROM BCM400T WITH (NOLOCK)
	  WHERE COMP_CODE = @COMP_CODE
	    AND CAL_TYPE = '4'
		AND HOLY_TYPE IN ('0','1')
		AND CAL_DATE BETWEEN CONVERT(NVARCHAR(8), ISNULL(CONVERT(DATETIME, @START_DATE, 120), GETDATE()), 112) 
	                     AND CONVERT(NVARCHAR(8), ISNULL(CONVERT(DATETIME, @END_DATE  , 120), EOMONTH(GETDATE())), 112) 
	</select>
	<select id="ppl117ukrvService.selectTitle" parameterType="Map" resultType="rMap">
		SELECT REF_CODE2, REF_CODE3 
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND MAIN_CODE   = 'P524'
		   AND USE_YN      = 'Y'
		   AND REF_CODE1   = 'Y'
		 ORDER BY CONVERT(INT,REF_CODE2)
	</select>
	
	<select id="ppl117ukrvService.checkClose" parameterType="Map" resultType="String">
		SELECT WKORD_STATUS 
		  FROM PMP100T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
		   AND LINE_END_YN = 'Y'
		   AND WKORD_NUM   = #{WKORD_NUM}
	</select>
	<select id="ppl117ukrvService.holidayCheck" parameterType="Map" resultType="String">
		SELECT WKORD_STATUS 
		  FROM PMP100T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
		   AND LINE_END_YN = 'Y'
		   AND WKORD_NUM   = #{WKORD_NUM}
	</select>
	<update id="ppl117ukrvService.updateDetail" parameterType="Map">
		DECLARE     @START_DATE				NVARCHAR(10)             --(필수) 달력표시시작일
	              , @END_DATE				NVARCHAR(10)             --(필수) 달력표시종료일
	              , @START_TIME				NVARCHAR(10)             --(필수) 달력표시시작일
	              , @END_TIME				NVARCHAR(10)             --(필수) 달력표시종료일
		
		SET @START_DATE = CONVERT(NVARCHAR(8), CONVERT(DATETIME, REPLACE(#{startDate}, 'T',' '), 120), 112)
        SET @END_DATE   = CONVERT(NVARCHAR(8), CONVERT(DATETIME, REPLACE(#{endDate}, 'T',' '), 120), 112)
        SET @START_TIME = CASE WHEN ISNULL(#{startDate},'') ='' 
        					   THEN ''
        					   ELSE CONVERT(NVARCHAR(5), CONVERT(DATETIME, REPLACE(#{startDate}, 'T',' '), 120), 24)
        				  END
        SET @END_TIME   = CASE WHEN ISNULL(#{endDate},'') =''  
        					   THEN ''
        					   ELSE CONVERT(NVARCHAR(5), CONVERT(DATETIME, REPLACE(#{endDate}, 'T',' '), 120), 24)
        				  END	   					   
		UPDATE PMP100T
		   SET PRODT_START_DATE = @START_DATE
		     , PRODT_END_DATE   = @END_DATE
		     , PRODT_START_TIME = @START_TIME
		     , PRODT_END_TIME =  @END_TIME 
		     , EQUIP_CODE = #{EQUIP_CODE}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
		   AND LINE_END_YN = 'Y'
		   AND WKORD_NUM   = #{WKORD_NUM}
	</update>
</mapper>