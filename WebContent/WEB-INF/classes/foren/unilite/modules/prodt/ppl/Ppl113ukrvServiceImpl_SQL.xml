<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ppl113ukrvServiceImpl">


	<select id="ppl113ukrvServiceImpl.selectProgWorkCode" parameterType="Map" resultType="rMap">

	SELECT
		ROW_NUMBER() OVER (ORDER BY   COMP_CODE, DIV_CODE, WORK_SHOP_CODE, PROG_WORK_CODE) AS LINE_SEQ
		,PROG_WORK_CODE
	  FROM PBS200T
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
	   AND USE_YN = 'Y'
	ORDER BY   COMP_CODE, DIV_CODE, WORK_SHOP_CODE, PROG_WORK_CODE

	</select>

	<select id="ppl113ukrvServiceImpl.selectP100" parameterType="Map" resultType="rMap">

	SELECT
		COMP_CODE
		, DIV_CODE
		, WK_PLAN_NUM
		, MAX(WKORD_NUM) AS WKORD_NUM
	  FROM   PMP100TV1 WITH (NOLOCK)
	  WHERE COMP_CODE =#{S_COMP_CODE}
	  AND DIV_CODE = #{DIV_CODE}
	  AND WK_PLAN_NUM = #{WK_PLAN_NUM}
	  GROUP BY COMP_CODE, DIV_CODE, WK_PLAN_NUM

	</select>
   <insert id="ppl113ukrvServiceImpl.insertLPmp100" parameterType="Map">
        /*pmp110ukrvServiceImpl.insertLogMaster*/
        INSERT INTO L_PMP100T
             ( KEY_VALUE            , OPR_FLAG
             , LINE_SEQ             , PROG_WORK_CODE            , PROG_UNIT_Q           , WKORD_Q               , PROG_UNIT
             , DIV_CODE             , WKORD_NUM                 , WORK_SHOP_CODE        , PRODT_START_DATE      , PRODT_END_DATE
             , PRODT_WKORD_DATE     , ITEM_CODE                 , REMARK


             , PROJECT_NO
             , LOT_NO
             , REWORK_YN
             , STOCK_EXCHG_TYPE

             , COMP_CODE

             , EQUIP_CODE
             , MOLD_CODE


             , WK_PLAN_NUM

		     --20180705추가
		    , PRODT_PRSN
		    , PRODT_MACH
		    , PRODT_TIME
		    , DAY_NIGHT

             , INSERT_DB_USER       , INSERT_DB_TIME            , UPDATE_DB_USER        , UPDATE_DB_TIME


             , CAVIT_BASE_Q
             , CAPA_HR_Q
             , CAPA_DAY_Q
             , WKORD_PRSN

			 --20190123 추가(PMP100T.CUSTOM_NAME 저장할 데이터)
             , CUSTOM_NAME
             , CUSTOM_CODE


             , PRODT_DATE
             , EXPIRATION_DATE
             , SO_NUM
             , SO_SEQ
             )
        VALUES
             ( #{KEY_VALUE}         , 'N'
             , #{LINE_SEQ}         			, #{PROG_WORK_CODE}         , 1        				,#{WK_PLAN_Q}           , #{STOCK_UNIT}
             , #{DIV_CODE}          , #{WKORD_NUM}              , #{WORK_SHOP_CODE}     , CONVERT(CHAR(8), GETDATE(), 112)   			, CONVERT(CHAR(8), GETDATE(), 112)
             , CONVERT(CHAR(8), GETDATE(), 112)  			, #{ITEM_CODE}              , #{REMARK}

             ,''-- , PROJECT_NO
			,''--, LOT_NO
            ,'N'--  , REWORK_YN
			,''--, STOCK_EXCHG_TYPE

             , #{S_COMP_CODE}



           ,''-- , EQUIP_CODE
		   ,''--  , MOLD_CODE


             , #{WK_PLAN_NUM}
		     --20180705추가
		    ,''-- , PRODT_PRSN
			,''--, PRODT_MACH
			,''--, PRODT_TIME
			,''--,DAY_NIGHT

             , #{S_USER_ID}         , GETDATE()                 , #{S_USER_ID}          , GETDATE()

             ,'0'-- , CAVIT_BASE_Q
			,'0'--     , CAPA_HR
			,'0'-- , CAPA_DAY
			,''--, WKORD_PRSN


 			 --20190123 추가(PMP100T.CUSTOM_NAME 저장할 데이터)
 			 , #{CUSTOM_NAME}
 			,'' --	 , CUSTOM_CODE

 		 , CONVERT(CHAR(8), GETDATE(), 112) --, PRODT_DATE
 		 ,''--	, EXPIRATION_DATE
 		 ,  #{ORDER_NUM}
 		 ,  #{SEQ}
            )
    </insert>

    <update id="ppl113ukrvServiceImpl.USP_PRODT_Pmp100ukr" parameterType="Map" statementType="CALLABLE">
        {call USP_PRODT_Pmp100ukr (
            #{KeyValue,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{LOT_NO,       mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>



	<select id="ppl113ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	/* ppl113ukrv.Cppl113ukrv[fnPpl111QStd]query01 */
	/* ----------------- 생 산 계 획 등 록 --------------*/
		BEGIN
			SET NOCOUNT ON
				DECLARE	 @COMP_CODE		NVARCHAR(08),		-- (필수) 법인
							@DIV_CODE		 NVARCHAR(08),		-- (필수) 사업장

							@WEEK_NUM_FR    NVARCHAR(07),  -- (필수) 계획주차 FROM
							@WEEK_NUM_TO    NVARCHAR(07),  -- (필수) 계획주차 TO


							@ITEM_CODE		NVARCHAR(20),		-- (선택) 품목
							@ITEM_NAME		NVARCHAR(200),		-- (선택) 품명
							@ITEM_LEVEL1	  NVARCHAR(10),		-- (선택) 품목 대분류
							@WK_PLAN_NUM	  NVARCHAR(20),		-- (선택) 생산계획 번호
							@ORDER_NUM		NVARCHAR(20),		-- (선택) 수주번호
							@ORDER_SEQ		NUMERIC(05),		 -- (선택) 수주순번
							@USER_ID		  NVARCHAR(100)		 -- (필수) 사용자 ID

				DECLARE	 @RefItem		  NVARCHAR(01)

				SET @COMP_CODE	  = #{S_COMP_CODE}
				SET @DIV_CODE	   = #{DIV_CODE}

				SET @WEEK_NUM_FR = #{WEEK_NUM_FR}
				SET @WEEK_NUM_TO = #{WEEK_NUM_TO}





				SET @ITEM_CODE	  = #{ITEM_CODE}
				SET @ITEM_NAME	  = #{ITEM_NAME}
				SET @ITEM_LEVEL1	= #{ITEM_LEVEL1}
				SET @WK_PLAN_NUM	= #{WK_PLAN_NUM}
				SET @ORDER_NUM	  = #{ORDER_NUM}
				<if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
				SET @ORDER_SEQ	  = #{ORDER_SEQ}
				</if>
				SET @USER_ID		= #{S_USER_ID}

				SET @ORDER_SEQ = ISNULL(@ORDER_SEQ, 0)

				SELECT TOP 1 @REFITEM = REF_ITEM
				FROM   BSA300T WITH (NOLOCK)
				WHERE  USER_ID = @USER_ID

				SELECT
					   A.COMP_CODE
					 , A.DIV_CODE
					 , C1.LEVEL_NAME AS ITEM_LEVEL1
					 , A.PLAN_TYPE
					 , A.ORDER_NUM
					 , A.SEQ
					 , A.ITEM_CODE
					 , CASE WHEN @REFITEM = '0' THEN C2.ITEM_NAME
							WHEN @REFITEM = '1' THEN C2.ITEM_NAME1
							WHEN @REFITEM = '2' THEN C2.ITEM_NAME2
							ELSE C2.ITEM_NAME
					   END AS ITEM_NAME
					 , C2.SPEC
					 , C2.STOCK_UNIT
					 , ISNULL(T1.STOCK_Q, 0) AS STOCK_Q
					 , CASE WHEN A.PLAN_TYPE = 'S' THEN uniLITE.fnGetUserDate(@COMP_CODE, B1.ORDER_DATE)
							WHEN A.PLAN_TYPE = 'T' THEN uniLITE.fnGetUserDate(@COMP_CODE, B2.ORDER_DATE)
							WHEN A.PLAN_TYPE = 'W' THEN uniLITE.fnGetUserDate(@COMP_CODE, B3.ORDER_DATE)
							WHEN A.PLAN_TYPE = 'M' THEN uniLITE.fnGetUserDate(@COMP_CODE, B4.ORDER_DATE)
							ELSE ''
					   END As ORDER_DATE
					 , CASE WHEN A.PLAN_TYPE = 'S' THEN uniLITE.fnGetUserDate(@COMP_CODE, B1.DVRY_DATE)
							WHEN A.PLAN_TYPE = 'T' THEN uniLITE.fnGetUserDate(@COMP_CODE, B2.DVRY_DATE)
							WHEN A.PLAN_TYPE = 'W' THEN uniLITE.fnGetUserDate(@COMP_CODE, B3.DVRY_DATE)
							WHEN A.PLAN_TYPE = 'M' THEN uniLITE.fnGetUserDate(@COMP_CODE, B4.DVRY_DATE)
							ELSE ''
					   END As DVRY_DATE
					 , CASE WHEN A.PLAN_TYPE = 'S' THEN uniLITE.fnGetUserDate(@COMP_CODE, B1.PROD_END_DATE)
							WHEN A.PLAN_TYPE = 'T' THEN uniLITE.fnGetUserDate(@COMP_CODE, B2.PROD_END_DATE)
							WHEN A.PLAN_TYPE = 'W' THEN uniLITE.fnGetUserDate(@COMP_CODE, B3.PROD_END_DATE)
							WHEN A.PLAN_TYPE = 'M' THEN uniLITE.fnGetUserDate(@COMP_CODE, B4.PROD_END_DATE)
							ELSE ''
					   END As PROD_END_DATE
					 , CASE WHEN A.PLAN_TYPE = 'S' THEN B1.ORDER_Q
							WHEN A.PLAN_TYPE = 'T' THEN B2.ORDER_Q
							WHEN A.PLAN_TYPE = 'W' THEN B3.ORDER_Q
							WHEN A.PLAN_TYPE = 'M' THEN B4.ORDER_Q
							ELSE 0
					   END As ORDER_UNIT_Q
					 , CASE WHEN A.PLAN_TYPE = 'S' THEN B1.PROD_Q
							WHEN A.PLAN_TYPE = 'T' THEN B2.PROD_Q
							WHEN A.PLAN_TYPE = 'W' THEN B3.PROD_Q
							WHEN A.PLAN_TYPE = 'M' THEN B4.PROD_Q
							ELSE 0
					   END As PROD_Q
					 , S2.SUM_WK_PLAN_Q
					 , A.PROJECT_NO
					 , A.PJT_CODE
					 , A.WK_PLAN_NUM
					 , A.WORK_SHOP_CODE
					 , uniLITE.fnGetUserDate(@COMP_CODE, A.PRODT_PLAN_DATE) AS PRODT_PLAN_DATE
					 , A.PRODT_PLAN_TIME
					 , A.WK_PLAN_Q
					 , A.REMARK
					 , CASE WHEN ISNULL(A.MRP_CONTROL_NUM, '') = '' THEN 'N' ELSE 'Y' END AS MRP_YN
					 , CASE WHEN ISNULL(S1.WKORD_NUM, '') = '' THEN '대기' ELSE '확정' END AS WKORD_YN
					 , ISNULL(S1.WKORD_STATUS, '대기') AS WKORD_STATUS
					 , S1.WKORD_NUM
					 , S1.WKORD_Q
					 , A.PRODT_Q
					 , A.UPDATE_DB_USER
					 , A.UPDATE_DB_TIME
					 , A.CAPA_OVER_FLAG
					  , B5.LOT_NO
					 , A.PRODT_END_DATE   /* 생산완료일 */

					 , C3.ITEM_ACCOUNT  --추가20190219
					 , A.WEEK_NUM  --추가20190219
					 , A.MRP_CONTROL_NUM --추가20190219


					 , B5.INIT_DVRY_DATE
					 , B5.WEEK_NUM AS SOF_WEEK_NUM


					 ,(SELECT TOP 1 (CASE WHEN COUNT(S1.CHILD_ITEM_CODE) &gt; 0 THEN 'X'+' (' + CONVERT(VARCHAR, COUNT(S1.CHILD_ITEM_CODE)) + ')' ELSE 'O' END)
						  FROM BPR500T S1 WITH(NOLOCK)
						  INNER JOIN BPR200T S2 WITH(NOLOCK) ON S1.COMP_CODE  = S2.COMP_CODE
														   AND S1.DIV_CODE	= S2.DIV_CODE
														   AND S1.CHILD_ITEM_CODE = S2.ITEM_CODE
						  LEFT  JOIN BIV100T S3 WITH(NOLOCK) ON S1.COMP_CODE  = S3.COMP_CODE
														   AND S1.DIV_CODE	= S3.DIV_CODE
														   AND S1.CHILD_ITEM_CODE = S3.ITEM_CODE
						 WHERE S1.COMP_CODE		= A.COMP_CODE
						   AND S1.DIV_CODE		= A.DIV_CODE
						   AND S1.CHILD_ITEM_CODE != '$'
						   AND S1.PROD_ITEM_CODE =  A.ITEM_CODE
						   AND S1.USE_YN = '1'
						   AND (S1.UNIT_Q / S1.PROD_UNIT_Q) * A.WK_PLAN_Q * (ISNULL(S1.SET_QTY, 100) / 100) &gt; ISNULL(S3.GOOD_STOCK_Q, 0)
						) AS PS_OX
					 ,CASE WHEN ISNULL((SELECT TOP 1 S1.ORDER_YN  FROM MRP400T S1 WITH(NOLOCK) WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.MRP_CONTROL_NUM = A.MRP_CONTROL_NUM),'N') = 'N' THEN '대기' ELSE '확정' END AS ORDER_YN--발주확정
					 ,A.REMARK AS CUSTOM_NAME
					 ,(SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END FROM SOF102T WHERE COMP_CODE = A.COMP_CODE AND DOC_NO = A.ORDER_NUM) AS DOC_YN

					 ,CASE WHEN A.CONFIRM_YN = 'Y' THEN 'true'
					 	   ELSE 'false'
					 END AS CONFIRM_YN

				  FROM PPL100T A  WITH (NOLOCK)
				  LEFT JOIN (
						SELECT A.COMP_CODE, A.OUT_DIV_CODE, A.ORDER_NUM, A.SER_NO, C.ORDER_DATE, A.DVRY_DATE, A.PROD_END_DATE, A.ORDER_Q, A.PROD_Q
						  FROM SOF110T  A WITH (NOLOCK)
					INNER JOIN SOF100T  C WITH (NOLOCK) ON C.comp_code  = A.comp_code
														AND C.div_code   = A.div_code
														AND C.order_num  = A.order_num
					INNER JOIN BPR200T M1 WITH (NOLOCK) ON M1.comp_code = A.comp_code
														AND M1.div_code  = A.div_code
														AND M1.item_code = A.item_code
														AND ISNULL(M1.order_meth, '3') IN ('2', '3')     -- MTS, Mixed 품목만 계획 생성
														-- AND M1.item_account IN ('10', '20')              -- 제품, 반제품만 생산계획 수립 (2018.11.8 YOONBH 막음, 아래 공통코드로 체크)
					INNER JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
														AND M2.MAIN_CODE = 'B020'
														AND M2.SUB_CODE  = M1.ITEM_ACCOUNT
														AND ISNULL(M2.REF_CODE3, M1.ITEM_ACCOUNT) IN ('10', '20')					-- 제품, 반제품만 생산계획 수립				-- 제품, 반제품만 생산계획 수립
						WHERE (A.PROD_Q IS NOT NULL AND  A.PROD_Q > 0.0)
					) B1	ON B1.COMP_CODE	   = A.COMP_CODE
							AND B1.OUT_DIV_CODE		= A.DIV_CODE
							AND B1.ORDER_NUM	   = A.ORDER_NUM
							AND B1.SER_NO		  = A.SEQ
							AND A.PLAN_TYPE		= 'S'



				--	   LEFT  JOIN SOF110TV1 B1 WITH (NOLOCK) ON B1.COMP_CODE	   = A.COMP_CODE
				--											AND B1.OUT_DIV_CODE		= A.DIV_CODE
				--											AND B1.ORDER_NUM	   = A.ORDER_NUM
				--											AND B1.SER_NO		  = A.SEQ
				--											AND A.PLAN_TYPE		= 'S'




					   LEFT  JOIN TEA110TV1 B2 WITH (NOLOCK) ON B2.COMP_CODE	   = A.COMP_CODE
															AND B2.DIV_CODE		= A.DIV_CODE
															AND B2.ORDER_NUM	   = A.ORDER_NUM
															AND B2.SER_NO		  = A.SEQ
															AND A.PLAN_TYPE		= 'T'
					   LEFT  JOIN SSP200TV1 B3 WITH (NOLOCK) ON B3.COMP_CODE	   = A.COMP_CODE
															AND B3.DIV_CODE		= A.DIV_CODE
															AND B3.ITEM_CODE	   = ISNULL(A.PROD_ITEM_CODE, A.ITEM_CODE)
															AND B3.ORDER_NUM	   = A.ORDER_NUM
															AND A.PLAN_TYPE		= 'W'
					   LEFT  JOIN SSP100TV1 B4 WITH (NOLOCK) ON B4.COMP_CODE	   = A.COMP_CODE
															AND B4.DIV_CODE		= A.DIV_CODE
															AND B4.ITEM_CODE	   = ISNULL(A.PROD_ITEM_CODE, A.ITEM_CODE)
															AND B4.ORDER_NUM	   = A.ORDER_NUM
															AND A.PLAN_TYPE		= 'M'
					    LEFT  JOIN SOF110T B5 WITH (NOLOCK) ON B5.COMP_CODE	   = A.COMP_CODE
															AND B5.OUT_DIV_CODE		= A.DIV_CODE
															AND B5.ITEM_CODE	   = ISNULL(A.PROD_ITEM_CODE, A.ITEM_CODE)
															AND B5.ORDER_NUM	   = A.ORDER_NUM
															AND B5.SER_NO		  = A.SEQ
					   INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE	   = A.COMP_CODE
															AND C2.ITEM_CODE	   = A.ITEM_CODE
															AND (
																(@ITEM_LEVEL1	  = '') OR (@ITEM_LEVEL1 != '' AND C2.ITEM_LEVEL1 = @ITEM_LEVEL1)
																)
					   INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE	   = A.COMP_CODE
					   										AND C3.DIV_CODE		   = A.DIV_CODE
															AND C3.ITEM_CODE	   = A.ITEM_CODE
					   LEFT JOIN   BPR000T  C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
		                                                    AND C1.LEVEL1          != '*'
		                                                    AND C1.LEVEL1           = C2.ITEM_LEVEL1
		                                                    AND C1.LEVEL2           = '*'
		                                                    AND C1.LEVEL3           = '*'
					   LEFT  JOIN (																										/* 작업지시 번호		*/
								  SELECT A.COMP_CODE, A.DIV_CODE, A.WK_PLAN_NUM, MAX(A.WKORD_NUM) AS WKORD_NUM, SUM(ISNULL(A.WKORD_Q, 0)) AS WKORD_Q, MAX(B.CODE_NAME) AS WKORD_STATUS
								  FROM   PMP100TV1 A WITH (NOLOCK)
								   LEFT JOIN BSA100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
																	AND B.MAIN_CODE = 'P001'
																	AND B.SUB_CODE  = A.WKORD_STATUS
								  WHERE  A.COMP_CODE = @COMP_CODE
								  AND	A.DIV_CODE  = @DIV_CODE
								  GROUP BY A.COMP_CODE, A.DIV_CODE, A.WK_PLAN_NUM
								  ) S1					 ON S1.COMP_CODE   = A.COMP_CODE
														  AND S1.DIV_CODE	= A.DIV_CODE
 														  AND S1.WK_PLAN_NUM = A.WK_PLAN_NUM
					   LEFT  JOIN (																										/* 작업지시 번호		*/
								  SELECT COMP_CODE, DIV_CODE, PLAN_TYPE, ITEM_CODE, ORDER_NUM, SEQ, SUM(WK_PLAN_Q) SUM_WK_PLAN_Q		/* 수주별 생산계획 합계	*/
								  FROM   PPL100T WITH (NOLOCK)
								  WHERE  COMP_CODE = @COMP_CODE
								  AND	DIV_CODE  = @DIV_CODE
								  GROUP BY COMP_CODE, DIV_CODE, PLAN_TYPE, ITEM_CODE, ORDER_NUM, SEQ
								  ) S2					 ON S2.COMP_CODE = A.COMP_CODE
														  AND S2.DIV_CODE  = A.DIV_CODE
														  AND S2.PLAN_TYPE = A.PLAN_TYPE
														  AND S2.ITEM_CODE = A.ITEM_CODE
														  AND S2.ORDER_NUM = A.ORDER_NUM
														  AND S2.SEQ	   = A.SEQ
					   LEFT  JOIN (																										/* 작업지시 번호	*/
								  SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(STOCK_Q) AS STOCK_Q
								  FROM   BIV100T WITH (NOLOCK)
								  WHERE  COMP_CODE = @COMP_CODE
								  AND	DIV_CODE  = @DIV_CODE
								  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
								  ) T1					 ON T1.COMP_CODE = A.COMP_CODE
														  AND T1.DIV_CODE  = A.DIV_CODE
														  AND T1.ITEM_CODE = A.ITEM_CODE
				WHERE  A.COMP_CODE		= @COMP_CODE
				AND	A.DIV_CODE		 = @DIV_CODE

				AND A.WEEK_NUM &gt;= @WEEK_NUM_FR
				AND A.WEEK_NUM &lt;= @WEEK_NUM_TO


				AND	(
					   (@WK_PLAN_NUM	  = '') OR (@WK_PLAN_NUM	!= '' AND A.WK_PLAN_NUM	LIKE @WK_PLAN_NUM + '%')
					   )
				AND	(
					   (@ORDER_NUM		= '') OR (@ORDER_NUM	  != '' AND A.ORDER_NUM	  LIKE @ORDER_NUM + '%')
					   )
				<if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
				AND	A.SEQ	 = #{ORDER_SEQ}
				</if>

				AND	(
					   (@ITEM_CODE		= '') OR (@ITEM_CODE	  != '' AND A.ITEM_CODE	  = @ITEM_CODE)
					   )
				AND	(
					   (@ITEM_NAME		= '') OR (@REFITEM = '0' AND @ITEM_NAME != '' AND C2.ITEM_NAME  LIKE @ITEM_NAME + '%')
												OR (@REFITEM = '1' AND @ITEM_NAME != '' AND C2.ITEM_NAME1 LIKE @ITEM_NAME + '%')
												OR (@REFITEM = '2' AND @ITEM_NAME != '' AND C2.ITEM_NAME2 LIKE @ITEM_NAME + '%')
					   )

				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				AND C3.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
				AND	B1.ORDER_TYPE	 = #{ORDER_TYPE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
				AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
				</if>
				<if test="WKORD_YN == &quot;N&quot;">
				AND CASE WHEN ISNULL(S1.WKORD_NUM, '') = '' THEN '대기' ELSE '확정' END = '대기'
				</if>
				<if test="WKORD_YN == &quot;Y&quot;">
				AND CASE WHEN ISNULL(S1.WKORD_NUM, '') = '' THEN '대기' ELSE '확정' END = '확정'
				</if>

				ORDER BY CASE WHEN A.PLAN_TYPE = 'S' THEN '1' WHEN A.PLAN_TYPE = 'T' THEN '2'
							  WHEN A.PLAN_TYPE = 'M' THEN '3' WHEN A.PLAN_TYPE = 'P' THEN '4'
							  ELSE '4'
						 END, A.ORDER_NUM, A.SEQ, A.ITEM_CODE, A.WK_PLAN_NUM

				SET NOCOUNT OFF
			END
	</select>

	<select id="ppl113ukrvServiceImpl.selectSublList" parameterType="Map" resultType="rMap">

SELECT
	A.PROD_ITEM_CODE,	--모품목코드 (상단그리드품목)
	A.SEQ,		--순번
	B.ITEM_ACCOUNT,		--품목계정
	A.CHILD_ITEM_CODE,		--자품목코드(하단그리드 품목)
	R1.ITEM_NAME,	--자품목명(하단그리드 품명)
	R1.SPEC,		--규격
	R1.STOCK_UNIT,	--단위

		(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CEILING(A.UNIT_Q)
		 ELSE A.UNIT_Q
	END) AS UNIT_Q,		--원단위수량

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CEILING(A.SET_QTY)
		 ELSE A.SET_QTY
	END) AS SET_QTY,		--실사용율

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CONVERT(NUMERIC(30 ,6),CEILING((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}))
		 ELSE (A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}
	END) AS NEED_Q, --소요량

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CONVERT(NUMERIC(30 ,6),CEILING((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q} * (ISNULL(SET_QTY, 100) / 100)))
		 ELSE (A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q} * (ISNULL(SET_QTY, 100) / 100)
	END) AS REAL_NEED_Q,  --실소요량

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CONVERT(NUMERIC(30 ,6),CEILING(ISNULL(D.WAITING_Q,0)))
		 ELSE ISNULL(D.WAITING_Q,0)
	END) AS WAITING_Q,

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CONVERT(NUMERIC(30 ,6),CEILING(ISNULL(C.GOOD_STOCK_Q, 0)))
		 ELSE ISNULL(C.GOOD_STOCK_Q, 0)
	END) AS STOCK_Q,		--현재고

	(CASE WHEN R1.STOCK_UNIT = 'EA' THEN CONVERT(NUMERIC(30 ,6),CEILING((CASE WHEN ((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}) - ISNULL(C.GOOD_STOCK_Q, 0) >  0 THEN ((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}) - ISNULL(C.GOOD_STOCK_Q, 0)
         ELSE 0 END)))
		 ELSE (CASE WHEN ((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}) - ISNULL(C.GOOD_STOCK_Q, 0) >  0 THEN ((A.UNIT_Q / A.PROD_UNIT_Q) * ${WK_PLAN_Q}) - ISNULL(C.GOOD_STOCK_Q, 0)
         ELSE 0 END)
	END) AS LACK_Q --부족량

  FROM BPR500T A WITH(NOLOCK)
  INNER JOIN BPR200T B WITH(NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
								   AND A.DIV_CODE	= B.DIV_CODE
								   AND A.CHILD_ITEM_CODE = B.ITEM_CODE
  LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								   AND R1.ITEM_CODE = A.CHILD_ITEM_CODE
	LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(ISNULL(GOOD_STOCK_Q, 0))  AS GOOD_STOCK_Q   -- 2019.04.19 수정
	      FROM BIV100T WITH(NOLOCK)
	GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) C ON A.COMP_CODE   = C.COMP_CODE
	            AND A.DIV_CODE	= C.DIV_CODE
	            AND A.CHILD_ITEM_CODE = C.ITEM_CODE

	LEFT JOIN (
		SELECT
			S1.COMP_CODE
			, S1.DIV_CODE
			, S1.ITEM_CODE
			,SUM(ISNULL(S1.RECEIPT_Q,0)) -
				(CASE WHEN MAX(ISNULL(S2.TRNS_RATE,0)) != 0 THEN SUM(ISNULL(S2.INOUT_Q,0)) / MAX(ISNULL(S2.TRNS_RATE,0))
					ELSE 0
				END)
			AS WAITING_Q
			,INSPEC_FLAG
		FROM QMS100T S1 WITH(NOLOCK)
		LEFT JOIN BTR100T S2 WITH(NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
										AND S2.DIV_CODE = S1.DIV_CODE
										AND S2.RECEIPT_NUM = S1.RECEIPT_NUM
										AND S2.RECEIPT_SEQ = S1.RECEIPT_SEQ
		LEFT JOIN BPR200T S3 WITH(NOLOCK) ON S3.COMP_CODE = S1.COMP_CODE
										AND S3.DIV_CODE = S1.DIV_CODE
										 AND S3.ITEM_CODE = S1.ITEM_CODE
		WHERE  ISNULL(S3.INSPEC_YN,'N') = 'Y'
		GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.INSPEC_FLAG
	) D ON D.COMP_CODE = A.COMP_CODE
		AND D.DIV_CODE = A.DIV_CODE
		AND D.ITEM_CODE = A.CHILD_ITEM_CODE
		AND ISNULL(D.INSPEC_FLAG,'N') = 'Y'

 WHERE A.COMP_CODE		= #{S_COMP_CODE}
   AND A.DIV_CODE		= #{DIV_CODE}
   AND A.CHILD_ITEM_CODE != '$'
   AND A.PROD_ITEM_CODE =  #{PROD_ITEM_CODE}
   AND A.USE_YN = '1'
ORDER BY SEQ
	</select>
	<select id="ppl113ukrvServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
		/* ppl113ukrv.Cppl113ukrv SetPpl111Kr[fnSof100QStd] QUERY01  */
		/* ---------------------- 수 주 정 보 참 조 ------------------------*/

		DECLARE @USER_ID   NVARCHAR(10),	 /*  사용자 ID				   */
				@DIV_CODE  NVARCHAR(08),	 /*  사업장코드	  (조회조건)  */


		--		@FROM_DATE NVARCHAR(10),	 /*  요청납기일 FROM (조회조건)  */
		--		@TO_DATE   NVARCHAR(10),	 /*  요청납기일 TO   (조회조건)  */

				@WEEK_NUM_FR    NVARCHAR(07),  -- (필수) 계획주차 FROM
				@WEEK_NUM_TO    NVARCHAR(07),  -- (필수) 계획주차 TO

				@ORDER_NUM  NVARCHAR(20),	 /*  수주번호   (조회조건)  */
				@ITEM_CODE NVARCHAR(20),	 /*  품목코드  */
				@COMP_CODE NVARCHAR(08)	  /*  법인코드		(조회조건)  */

			SET @USER_ID	= #{S_USER_ID}
			SET @DIV_CODE   = #{DIV_CODE}


				SET @WEEK_NUM_FR = #{WEEK_NUM_FR}
				SET @WEEK_NUM_TO = #{WEEK_NUM_TO}



			SET @ORDER_NUM  = #{ORDER_NUM}


			SET @ITEM_CODE  = #{ITEM_CODE}
			SET @COMP_CODE  = #{S_COMP_CODE}

		 SELECT
				CAST(0 AS BIT) GUBUN
			  , A.PLAN_TYPE
			  , ISNULL(M3.CODE_NAME, '') PLANTYPE_NAME
			  , A.ITEM_CODE
			  , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) ITEM_NAME
			  , M1.SPEC
			  , M1.STOCK_UNIT
			  , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.PROD_Q, 'Q_FSET_QS'), 0.0) PROD_Q
			  , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.NOTREF_Q, 'Q_FSET_QS'), 0.0) NOTREF_Q
			  , ISNULL(uniLITE.fnGetUserDate(A.COMP_CODE, A.PROD_END_DATE), '') PROD_END_DATE
			  , ISNULL(uniLITE.fnGetUserDate(A.COMP_CODE, A.DVRY_DATE), '') DVRY_DATE
			  , ISNULL(uniLITE.fnGetUserDate(A.COMP_CODE, A.ORDER_DATE), '') ORDER_DATE
			  , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.ORDER_Q,  'Q_FSET_QS'), 0.0) ORDER_Q
			  , M2.CUSTOM_NAME
			  , A.SER_NO
			  , A.WORK_SHOP_CODE
			  , A.ORDER_NUM
			  , A.PROJECT_NO
			  , A.PJT_CODE
			  , M4.USER_NAME
			  , A.INSERT_DB_TIME
			  , A.WEEK_NUM
			  , A.INIT_DVRY_DATE
			  , A.REMARK
			  , A.PO_NUM
		   FROM (SELECT COMP_CODE
					  , PLAN_TYPE
					  , ORDER_NUM
					  , SER_NO
					  , ITEM_CODE
					  , CUSTOM_CODE
					  , WORK_SHOP_CODE
					  , PROJECT_NO
					  , PJT_CODE
					  , ORDER_DATE
					  , DVRY_DATE
					  , PROD_END_DATE
					  , ORDER_Q
					  , PROD_Q
					  , NOTREF_Q
					  , INSERT_DB_USER
					  , INSERT_DB_TIME
					  , WEEK_NUM
					  , INIT_DVRY_DATE
					  , REMARK
					  , PO_NUM
				   FROM SOF110TV1 WITH (NOLOCK)
				  WHERE COMP_CODE	= @COMP_CODE
					AND OUT_DIV_CODE	 = @DIV_CODE
					AND ORDER_STATUS = 'N'
					AND STATUS	   = '6'
			) A
											INNER JOIN BPR100T M1 WITH (NOLOCK)
													ON M1.COMP_CODE = A.COMP_CODE
												   AND M1.ITEM_CODE = A.ITEM_CODE
											INNER JOIN BCM100T M2 WITH (NOLOCK)
													ON M2.COMP_CODE   = A.COMP_CODE
												   AND M2.CUSTOM_CODE = A.CUSTOM_CODE
											 LEFT JOIN BSA100T M3 WITH (NOLOCK)
													ON M3.COMP_CODE = A.COMP_CODE
												   AND M3.MAIN_CODE = 'P402'
												   AND M3.SUB_CODE  = A.PLAN_TYPE	/*  생산계획 참조 유형 */
											LEFT JOIN  BSA300T M4 WITH(NOLOCK)
													ON M4.COMP_CODE = A.COMP_CODE
												   AND M4.USER_ID   = A.INSERT_DB_USER
		  WHERE A.NOTREF_Q	   &gt; 0.0




			AND A.WEEK_NUM &gt;= CASE WHEN ISNULL(@WEEK_NUM_FR, '') = ''
											 THEN A.PROD_END_DATE
											 ELSE @WEEK_NUM_FR
									END
			AND A.WEEK_NUM &lt;= CASE WHEN ISNULL(@WEEK_NUM_TO, '')   = ''
											 THEN A.PROD_END_DATE
											 ELSE @WEEK_NUM_TO
									END



			AND A.ORDER_NUM	 = CASE WHEN ISNULL(@ORDER_NUM, '')  = ''
											 THEN A.ORDER_NUM
											 ELSE @ORDER_NUM
									END

			AND A.ITEM_CODE	 = CASE WHEN ISNULL(@ITEM_CODE, '') = ''
											 THEN A.ITEM_CODE
											 ELSE @ITEM_CODE
									END
		  ORDER BY A.ORDER_NUM, A.SER_NO
	</select>

	<select id="ppl113ukrvServiceImpl.selectRefList" parameterType="Map" resultType="rMap">
	 /*	UPpl01Krv.CPpl100ukr SetPpl100Kr[fnSsp100QStd] QUERY01	*/
	 /* ---------------------- 판 매 계 획 참 조 -----------------------*/
		DECLARE @USER_ID	   NVARCHAR(10), /*  사용자 ID				   */
				@COMP_CODE	 NVARCHAR(08), /*  법인코드					 (조회조건)  */
				@DIV_CODE	  NVARCHAR(08), /*  사업장코드		  	 (조회조건)  */
				@FROM_MONTH	NVARCHAR(10), /*  계획기간-월 FROM	(조회조건)  */
				@TO_MONTH	  NVARCHAR(10), /*  계획기간-월 TO	  (조회조건)  */
				@FROM_WEEK	 NVARCHAR(10), /*  계획기간-주 FROM	(조회조건)  */
				@TO_WEEK	   NVARCHAR(10), /*  계획기간-주 TO	  (조회조건)  */
				@SALE_TYPE	 NVARCHAR(02), /*  판매유형				 	 (조회조건)  */
				@ITEM_GROUP	NVARCHAR(20), /*  대표모델					 (조회조건)  */
				@ITEM_LEVEL1   NVARCHAR(05), /*  대분류			  		 (조회조건)  */
				@ITEM_LEVEL2   NVARCHAR(05), /*  중분류			  		 (조회조건)  */
				@ITEM_LEVEL3   NVARCHAR(05), /*  소분류			  		 (조회조건)  */
				@ITEM_ACCOUNT  NVARCHAR(05)  /*  품목계정 */

			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @USER_ID	  = #{S_USER_ID}
			SET @DIV_CODE	 = #{DIV_CODE}
			SET @FROM_MONTH   = #{FROM_MONTH}			/* 수정필요 월  ~ 월 xtype 필요 */
			SET @TO_MONTH	 = #{TO_MONTH}				/* 수정필요 월  ~ 월 xtype 필요 */
			SET @FROM_WEEK	= #{FROM_WEEK}			/* 수정필요 년도+주  ~ 년도+주 xtype 필요 */
			SET @TO_WEEK	  = #{TO_WEEK}				/* 수정필요 년도+주  ~ 년도+주 xtype 필요 */
			SET @SALE_TYPE	= #{SALE_TYPE}
			SET @ITEM_GROUP   = #{ITEM_GROUP}
			SET @ITEM_LEVEL1  = #{TXTLV_L1}
			SET @ITEM_LEVEL2  = #{TXTLV_L1}
			SET @ITEM_LEVEL3  = #{TXTLV_L1}
			SET @ITEM_ACCOUNT = #{ITEM_ACCOUNT}

			DECLARE @RefItem  NVARCHAR(01)

			SELECT TOP 1 @RefItem = REF_ITEM
			FROM   BSA300T WITH (NOLOCK)
			WHERE  USER_ID = @USER_ID

			SET @RefItem = ISNULL(@RefItem, '0')

		/* 주간 판매계획이 존재하면 주간 판매계획을 조회하고	*/
		/* 없으면 월간 판매계획 조회한다.				*/
			IF EXISTS(SELECT TOP 1 PLAN_WEEK
					  FROM   SSP200T WITH(NOLOCK)
					  WHERE  COMP_CODE  = @COMP_CODE
					  AND	DIV_CODE   = @DIV_CODE
					  AND	PLAN_WEEK &gt;= @FROM_WEEK
					  AND	PLAN_WEEK &lt;= @TO_WEEK
			 )
				SELECT
					   CAST(0 AS BIT) AS GUBUN
					 , A.PLAN_TYPE
					 , ISNULL(M1.CODE_NAME, '') AS PLANTYPE_NAME
					 , A.ITEM_ACCOUNT
					 , A.ITEM_CODE
					 , CASE WHEN @RefItem = '0' THEN A.ITEM_NAME WHEN @RefItem = '1' THEN A.ITEM_NAME1 WHEN @RefItem = '2' THEN A.ITEM_NAME2 ELSE A.ITEM_NAME END AS ITEM_NAME
					 , A.STOCK_UNIT
					 , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.PLAN_QTY, 'Q_FSET_QS'), 0.0) PLAN_QTY
					 , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.NOTREF_Q, 'Q_FSET_QS'), 0.0) NOTREF_Q
					 , ISNULL(uniLITE.fnGetUserDate(A.COMP_CODE, A.BASE_DATE), '') BASE_DATE
					 , A.SALE_TYPE
					 , A.WORK_SHOP_CODE
					 , A.DIV_CODE
					 , A.ORDER_NUM
					 , A.SEQ AS SER_NO
					 , A.ORDER_Q
				FROM			  SSP200TV1 A  WITH (NOLOCK)
					   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
															AND M1.MAIN_CODE = 'P402'
															AND M1.SUB_CODE  = A.PLAN_TYPE
				WHERE  A.COMP_CODE  = @COMP_CODE
				AND	A.DIV_CODE   = @DIV_CODE
				AND	A.PLAN_WEEK &gt;= @FROM_WEEK
				AND	A.PLAN_WEEK &lt;= @TO_WEEK
				AND	A.NOTREF_Q   &gt; 0.0
				AND	(
					   (@SALE_TYPE	= '') OR (@SALE_TYPE	!= '' AND A.SALE_TYPE	= @SALE_TYPE)
					   )
				AND	(
					   (@ITEM_GROUP   = '') OR (@ITEM_GROUP   != '' AND A.ITEM_GROUP   = @ITEM_GROUP)
					   )
				AND	(
					   (@ITEM_LEVEL1  = '') OR (@ITEM_LEVEL1  != '' AND A.ITEM_LEVEL1  = @ITEM_LEVEL1)
					   )
				AND	(
					   (@ITEM_LEVEL2  = '') OR (@ITEM_LEVEL2  != '' AND A.ITEM_LEVEL2  = @ITEM_LEVEL2)
					   )
				AND	(
					   (@ITEM_LEVEL3  = '') OR (@ITEM_LEVEL3  != '' AND A.ITEM_LEVEL3  = @ITEM_LEVEL3)
					   )
				AND	(
					   (@ITEM_ACCOUNT = '') OR (@ITEM_ACCOUNT != '' AND A.ITEM_ACCOUNT = @ITEM_ACCOUNT)
					   )
				ORDER BY A.PLAN_TYPE, A.BASE_DATE, A.ITEM_CODE
			ELSE
				SELECT
					   CAST(0 AS BIT) AS GUBUN
					 , A.PLAN_TYPE
					 , ISNULL(M1.CODE_NAME, '') AS PLANTYPE_NAME
					 , A.ITEM_ACCOUNT
					 , A.ITEM_CODE
					 , CASE WHEN @RefItem = '0' THEN A.ITEM_NAME WHEN @RefItem = '1' THEN A.ITEM_NAME1 WHEN @RefItem = '2' THEN A.ITEM_NAME2 ELSE A.ITEM_NAME END AS ITEM_NAME
					 , A.STOCK_UNIT
					 , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.PLAN_QTY, 'Q_FSET_QS'), 0.0) PLAN_QTY
					 , ISNULL(uniLITE.fnFormat(A.COMP_CODE, A.NOTREF_Q, 'Q_FSET_QS'), 0.0) NOTREF_Q
					 , ISNULL(uniLITE.fnGetUserDate(A.COMP_CODE, A.BASE_DATE), '') BASE_DATE
					 , A.SALE_TYPE
					 , A.WORK_SHOP_CODE
					 , A.DIV_CODE
					 , A.ORDER_NUM
					 , A.SEQ AS SER_NO
					 , A.ORDER_Q
				FROM			  SSP100TV1 A  WITH (NOLOCK)
					   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
															AND M1.MAIN_CODE = 'P402'
															AND M1.SUB_CODE  = A.PLAN_TYPE
				WHERE  A.COMP_CODE  = @COMP_CODE
				AND	A.DIV_CODE   = @DIV_CODE
				AND	A.BASE_DATE &gt;= @FROM_MONTH + '01'
				AND	A.BASE_DATE &lt;= @TO_MONTH + '31'
				AND	A.NOTREF_Q   &gt; 0.0
				AND	(
					   (@SALE_TYPE	= '') OR (@SALE_TYPE	!= '' AND A.SALE_TYPE	= @SALE_TYPE)
					   )
				AND	(
					   (@ITEM_GROUP   = '') OR (@ITEM_GROUP   != '' AND A.ITEM_GROUP   = @ITEM_GROUP)
					   )
				AND	(
					   (@ITEM_LEVEL1  = '') OR (@ITEM_LEVEL1  != '' AND A.ITEM_LEVEL1  = @ITEM_LEVEL1)
					   )
				AND	(
					   (@ITEM_LEVEL2  = '') OR (@ITEM_LEVEL2  != '' AND A.ITEM_LEVEL2  = @ITEM_LEVEL2)
					   )
				AND	(
					   (@ITEM_LEVEL3  = '') OR (@ITEM_LEVEL3  != '' AND A.ITEM_LEVEL3  = @ITEM_LEVEL3)
					   )
				AND	(
					   (@ITEM_ACCOUNT = '') OR (@ITEM_ACCOUNT != '' AND A.ITEM_ACCOUNT = @ITEM_ACCOUNT)
					   )
				ORDER BY A.PLAN_TYPE, A.BASE_DATE, A.ITEM_CODE
	</select>

	<insert id="ppl113ukrvServiceImpl.insertDetail" parameterType="Map">		/* 추가 */
	</insert>

	<update id="ppl113ukrvServiceImpl.updateDetail" parameterType="Map">		/* 수정 */
	</update>

	<delete id="ppl113ukrvServiceImpl.deleteDetail" parameterType="Map">		/* 삭제 */
		/* UPpl01Krv.CPpl111ukr SetPpl111Kr[fnPpl111SDel] QUERY01"	*/
		DELETE FROM PPL100T
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE		 = #{DIV_CODE}
   		   AND WEEK_NUM &gt;= #{WEEK_NUM_FR}
		   AND WEEK_NUM &lt;= #{WEEK_NUM_TO}
		   AND WKORD_YN		 = 'N'
		   AND (MRP_CONTROL_NUM IS NULL OR MRP_CONTROL_NUM = '')
		   AND PLAN_TYPE	   != 'P'
	</delete>

	<select id="ppl113ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE, A.COMP_NAME
		FROM			  BOR100T   A  WITH (NOLOCK)
			   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE	= #{S_COMP_CODE}
													AND M1.MAIN_CODE	= 'B107'
													AND M1.SUB_CODE		= '20'
		WHERE (A.COMP_CODE	  &gt; ''		AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		   OR (A.COMP_CODE	  = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>





	<insert id="ppl113ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/* ppl113ukrvServiceImpl.insertLogMaster */
		INSERT INTO L_PPL100T
		 ( KEY_VALUE			, OPR_FLAG
		 , COMP_CODE			, DIV_CODE				, WK_PLAN_NUM
		 , WORK_SHOP_CODE		, ITEM_CODE				, WK_PLAN_Q			, PRODT_PLAN_DATE		, PRODT_PLAN_TIME
		 , ORDER_NUM			, SEQ					, ORDER_Q			, PRODT_Q				, PLAN_TYPE			, REMARK
		 , LOT_NO         , PRODT_END_DATE
		 , INSERT_DB_USER 		, INSERT_DB_TIME 		, UPDATE_DB_USER 	, UPDATE_DB_TIME
		 , WEEK_NUM

		 , CONFIRM_YN
		 )
	VALUES
		 ( #{KEY_VALUE}			, #{OPR_FLAG}
		 , #{COMP_CODE}			, #{DIV_CODE}			, #{WK_PLAN_NUM}
		 , #{WORK_SHOP_CODE}	, #{ITEM_CODE}			, #{WK_PLAN_Q}		, #{PRODT_PLAN_DATE}	, #{PRODT_PLAN_TIME}
		 , #{ORDER_NUM}			, #{SEQ}				, #{ORDER_Q}		, #{PRODT_Q}			, #{PLAN_TYPE}		, #{REMARK}
		 , #{LOT_NO}        , #{PRODT_END_DATE}
		 , #{S_USER_ID}			, GETDATE()				, #{S_USER_ID}		, GETDATE()
		 , #{WEEK_NUM}
		<if test="CONFIRM_YN == true">
		 , 'Y'
		</if>
		<if test="CONFIRM_YN != true">
		 , 'N'
		</if>
		 )
	</insert>


	<update id="ppl113ukrvServiceImpl.spProdtPlanForepart" parameterType="Map" statementType="CALLABLE">
		{call SP_PRODT_ProductionPlanForepart (
			#{KeyValue,		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode,		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{RtnWkPlanNum, mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc,	mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>





	<insert id="ppl113ukrvServiceImpl.insertEstiListPlan" parameterType="Map">
		/*ppl113ukrvServiceImpl.insertEstiListPlan*/
		/* bParam(5) = "S" '영업수주참조  */
		INSERT INTO MRP350T
			 (
			   COMP_CODE			, DIV_CODE				, MRP_CONTROL_NUM		, WORK_SHOP_CODE		, ITEM_CODE
			 , PROD_ITEM_CODE		, BASIS_DATE			, ORDER_PLAN_DATE		, PROD_Q				, ORDER_Q
			 , ORDER_NUM			, ORDER_SEQ				, CUSTOM_NAME			, PLAN_TYPE				, APPLY_TYPE
			 , PROJECT_NO			, PJT_CODE)
		VALUES
			 (
			   #{S_COMP_CODE}		, #{DIV_CODE}			, #{MRP_CONTROL_NUM}	, #{WORK_SHOP_CODE}		, #{ITEM_CODE}
			 , #{ITEM_CODE}			, #{PROD_END_DATE}		, #{PROD_END_DATE}		, #{NOTREF_Q}			, #{ORDER_Q}
			 , #{ORDER_NUM}			, #{SER_NO}				, #{CUSTOM_NAME}		, #{PLAN_TYPE}			, 'P'
			 , #{PROJECT_NO}		, #{PJT_CODE})
 	</insert>

 	<insert id="ppl113ukrvServiceImpl.insertRefListPlan" parameterType="Map">
		/*ppl113ukrvServiceImpl.insertRefListPlan*/
		/* bParam(5) = "M"	'판매계획참조 */
		INSERT INTO MRP350T
			 (
			   COMP_CODE			, DIV_CODE				, MRP_CONTROL_NUM		, WORK_SHOP_CODE		, ITEM_CODE
			 , PROD_ITEM_CODE				, BASIS_DATE			, PROD_Q				, ORDER_Q
			 , ORDER_NUM			, ORDER_SEQ				, CUSTOM_NAME			, PLAN_TYPE				, APPLY_TYPE
			 , PROJECT_NO			, PJT_CODE)
		VALUES
			 (
			   #{S_COMP_CODE}		, #{DIV_CODE}			, #{MRP_CONTROL_NUM}	, #{WORK_SHOP_CODE}		, #{ITEM_CODE}
			 , #{ITEM_CODE}						, #{BASE_DATE}			, #{PLAN_QTY}			, #{ORDER_Q}
			 , #{ORDER_NUM}			, #{SER_NO}				, ''					, #{PLAN_TYPE}			, 'P'
			 , ''					, '')
 	</insert>


 	<update id="ppl113ukrvServiceImpl.spProdtPlan" parameterType="Map" statementType="CALLABLE">
		{call SP_PRODT_ProductionPlan (
			#{KeyValue,   mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{PadStockYn, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode,   mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc,  mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	 </update>



	 <!-- 인증서 정보 -->
    <select id="ppl113ukrvServiceImpl.getItemInfo" parameterType="Map" resultType="rMap">
        SELECT
              *
             , CONVERT(NVARCHAR, UPDATE_DB_TIME)        AS CHANGE_YN

           FROM BPR101T  WITH (NOLOCK)
          WHERE COMP_CODE   = #{S_COMP_CODE}
            AND ITEM_CODE   = #{ITEM_CODE}
         ORDER BY FILE_TYPE, MANAGE_NO
    </select>

    <insert id="ppl113ukrvServiceImpl.itemInfoInsert" parameterType="Map">
        INSERT INTO BPR101T(
               COMP_CODE
             , ITEM_CODE
             , FILE_TYPE
             , MANAGE_NO
             , REMARK
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
        )
        VALUES
        (
               #{S_COMP_CODE}
             , #{ITEM_CODE}
             , #{FILE_TYPE}
             , #{MANAGE_NO}
             , #{REMARK}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
         )
    </insert>

    <update id="ppl113ukrvServiceImpl.itemInfoUpdate" parameterType="Map">
        UPDATE BPR101T
           SET REMARK           = #{REMARK}

         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND ITEM_CODE    = #{ITEM_CODE}
           AND MANAGE_NO    = #{MANAGE_NO}
           AND FILE_TYPE    = #{FILE_TYPE}
    </update>

    <delete id="ppl113ukrvServiceImpl.itemInfoDelete" parameterType="Map">
        DELETE FROM BPR101T
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND ITEM_CODE    = #{ITEM_CODE}
           AND MANAGE_NO    = #{MANAGE_NO}
           AND FILE_TYPE    = #{FILE_TYPE}
    </delete>

    <!-- 사진업로드 후, 등록자정보 update -->
    <update id="ppl113ukrvServiceImpl.photoModified" parameterType="Map">
        /* ppl113ukrvServiceImpl.photoModified */
        UPDATE BPR101T
           SET CERT_FILE        = #{CERT_FILE}          --실제파일명 (ORIGINAL_FILE_NAME)
             , FILE_ID          = #{FILE_ID}            --서버에 저장한 파일명 (FID)
             , MIME_TYPE        = #{MIME_TYPE}          --파일형식
             , FILE_EXT         = #{FILE_EXT}           --파일확장자
             , FILE_SIZE        = #{FILE_SIZE}          --파일크기
             , FILE_PATH        = #{FILE_PATH}          --파일경로 (PATH)
             , UPDATE_DB_USER   = #{S_USER_ID}
             , UPDATE_DB_TIME   = GETDATE()

        WHERE COMP_CODE     = #{S_COMP_CODE}
          AND ITEM_CODE     = #{ITEM_CODE}
          AND MANAGE_NO     = #{MANAGE_NO}
          AND FILE_TYPE     = #{FILE_TYPE}

    </update>

    <!-- 품목 관련 파일 다운로드(관련 파일 정보) -->
    <select id="ppl113ukrvServiceImpl.selectFileInfo" parameterType="Map" resultType="gMap">
        /* ppl113ukrvServiceImpl.selectFileInfo */
        SELECT FILE_ID          AS FID
             , CERT_FILE        AS ORIGINAL_FILE_NAME
             , FILE_PATH        AS PATH
             , MIME_TYPE        AS MIME_TYPE            -- 'image/jpeg'
             , FILE_SIZE        AS SIZE
          FROM BPR101T WITH (NOLOCK)
         WHERE FILE_ID = #{fid}
    </select>

    <select id="ppl113ukrvServiceImpl.getFileList" parameterType="Map" resultType="rMap">
        /* ppl113ukrvServiceImpl.getFileList  */
        SELECT    A.FID AS id
                , A.FID AS fid
                , A.ORIGINAL_FILE_NAME AS name
                , B.SIZE as size
                , '6' AS status
         FROM SOF102T A  WITH (NOLOCK)
         INNER JOIN BFL200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.FID = B.FID
        WHERE A.COMP_CODE= #{S_COMP_CODE}
         AND A.DOC_NO = #{DOC_NO}

    </select>
</mapper>