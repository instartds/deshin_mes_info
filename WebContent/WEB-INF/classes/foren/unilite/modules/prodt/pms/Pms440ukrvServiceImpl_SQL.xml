<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pms440ukrvServiceImpl">

<select id="pms440ukrvServiceImpl.selectBadData" parameterType="Map" resultType="rMap">

    SELECT  TOP 1
           A.INSPEC_NUM													/* 검사번호	*/
          , A.INSPEC_SEQ													/* 검사순번 */
          , C.CUSTOM_NAME								/* 거래처명	*/
          , ISNULL(uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},A.ITEM_CODE),'') AS ITEM_NAME												/* 품명		*/
          , CAST(CONVERT(NUMERIC(30,2),ISNULL(A.INSPEC_Q,0)) AS NVARCHAR(50)) AS INSPEC_Q					/* 검사수량	*/
		  ,C.SO_NUM															/* 수주번호	*/
		  ,E.BAD_INSPEC_CODE1 AS BAD_CODE1
		  ,E.BAD_INSPEC_CODE2 AS BAD_CODE2
		  ,E.BAD_INSPEC_CODE3 AS BAD_CODE3
		  ,ISNULL(R1.CODE_NAME,'') AS BAD_NAME1
		  ,ISNULL(R2.CODE_NAME,'') AS BAD_NAME2
		  ,ISNULL(R3.CODE_NAME,'') AS BAD_NAME3
		  ,E.BAD_INSPEC_Q1 AS BAD_Q1
		  ,E.BAD_INSPEC_Q2 AS BAD_Q2
		  ,E.BAD_INSPEC_Q3 AS BAD_Q3
		  ,ISNULL(E.INSPEC_REMARK1,'') AS INSPEC_REMARK1
		  ,ISNULL(E.INSPEC_REMARK2,'') AS INSPEC_REMARK2
		  ,ISNULL(E.INSPEC_REMARK3,'') AS INSPEC_REMARK3

		  ,CASE WHEN ISNULL(E.BAD_INSPEC_CODE1,'') != '' AND ISNULL(E.BAD_INSPEC_CODE2,'') = '' AND ISNULL(E.BAD_INSPEC_CODE3,'') = '' THEN ISNULL(R1.CODE_NAME,'') + '-' + ISNULL(E.INSPEC_REMARK1,'') + '('+ CAST(CONVERT(NUMERIC(30,1),ISNULL(E.BAD_INSPEC_Q1,0)) AS NVARCHAR(50)) +')'
				WHEN ISNULL(E.BAD_INSPEC_CODE1,'') != '' AND (ISNULL(E.BAD_INSPEC_CODE2,'') != '' OR ISNULL(E.BAD_INSPEC_CODE3,'') != '') THEN ISNULL(R1.CODE_NAME,'') + '-' + ISNULL(E.INSPEC_REMARK1,'') + '('+ CAST(CONVERT(NUMERIC(30,1),ISNULL(E.BAD_INSPEC_Q1,0)) AS NVARCHAR(50)) +')' + ', '
				ELSE ''
		   END
		   +
		   CASE WHEN ISNULL(E.BAD_INSPEC_CODE2,'') != '' AND ISNULL(E.BAD_INSPEC_CODE3,'') = '' THEN ISNULL(R2.CODE_NAME,'') + '-' + ISNULL(E.INSPEC_REMARK2,'') + '('+ CAST(CONVERT(NUMERIC(30,1),ISNULL(E.BAD_INSPEC_Q2,0)) AS NVARCHAR(50)) +')'
				WHEN ISNULL(E.BAD_INSPEC_CODE2,'') != '' AND ISNULL(E.BAD_INSPEC_CODE3,'') != '' THEN ISNULL(R2.CODE_NAME,'') + '-' + ISNULL(E.INSPEC_REMARK2,'') + '('+ CAST(CONVERT(NUMERIC(30,1),ISNULL(E.BAD_INSPEC_Q2,0)) AS NVARCHAR(50)) +')' + ', '
				ELSE ''
		   END
		   +
		   CASE WHEN ISNULL(E.BAD_INSPEC_CODE3,'') != '' THEN ISNULL(R3.CODE_NAME,'') + '-' + ISNULL(E.INSPEC_REMARK3,'') + '('+ CAST(CONVERT(NUMERIC(30,1),ISNULL(E.BAD_INSPEC_Q3,0)) AS NVARCHAR(50)) +')'
				ELSE ''
		   END
		   AS BAD_REMARK

	     FROM QMS400T A WITH (NOLOCK)
		 LEFT JOIN PMP100T C ON C.COMP_CODE = A.COMP_CODE
							AND C.DIV_CODE = A.DIV_CODE
							AND C.WKORD_NUM = A.WKORD_NUM
							AND C.LINE_END_YN = 'Y'

		 INNER JOIN BPR100T B WITH (NOLOCK) ON  A.COMP_CODE = B.COMP_CODE
											AND A.ITEM_CODE = B.ITEM_CODE
		LEFT JOIN (
			SELECT
				T.COMP_CODE
				,T.DIV_CODE
				,T.INSPEC_NUM
				,T.INSPEC_SEQ
				,MAX(T.BAD_INSPEC_CODE1) AS BAD_INSPEC_CODE1
				,MAX(T.BAD_INSPEC_CODE2) AS BAD_INSPEC_CODE2
				,MAX(T.BAD_INSPEC_CODE3) AS BAD_INSPEC_CODE3
				,MAX(T.BAD_INSPEC_Q1) AS BAD_INSPEC_Q1
				,MAX(T.BAD_INSPEC_Q2) AS BAD_INSPEC_Q2
				,MAX(T.BAD_INSPEC_Q3) AS BAD_INSPEC_Q3

				,MAX(T.INSPEC_REMARK1) AS INSPEC_REMARK1
				,MAX(T.INSPEC_REMARK2) AS INSPEC_REMARK2
				,MAX(T.INSPEC_REMARK3) AS INSPEC_REMARK3
			 FROM (
				SELECT COMP_CODE
					,DIV_CODE
					,INSPEC_NUM
					,INSPEC_SEQ
					,CASE WHEN SEQ =1 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE1
					 ,CASE WHEN SEQ =2 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE2
					 ,CASE WHEN SEQ =3 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE3

					 ,CASE WHEN SEQ =1 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q1
					 ,CASE WHEN SEQ =2 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q2
					 ,CASE WHEN SEQ =3 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q3

					  ,CASE WHEN SEQ =1 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK1
					 ,CASE WHEN SEQ =2 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK2
					 ,CASE WHEN SEQ =3 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK3

					,SEQ
				FROM QMS410T WITH(NOLOCK)
				WHERE SEQ IN (1,2,3)
			GROUP BY COMP_CODE
					,DIV_CODE
					,INSPEC_NUM
					,INSPEC_SEQ
					,BAD_INSPEC_CODE
					,BAD_INSPEC_Q
					,INSPEC_REMARK
					,SEQ
			) T

			GROUP BY T.COMP_CODE
				,T.DIV_CODE
				,T.INSPEC_NUM
				,T.INSPEC_SEQ

		) E ON E.COMP_CODE = A.COMP_CODE
			AND E.DIV_CODE = A.DIV_CODE
			AND E.INSPEC_NUM = A.INSPEC_NUM
			AND E.INSPEC_SEQ = A.INSPEC_SEQ
		LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = E.COMP_CODE
										 AND R1.MAIN_CODE = 'Q013'
										 AND R1.SUB_CODE = E.BAD_INSPEC_CODE1
		LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = E.COMP_CODE
										 AND R2.MAIN_CODE = 'Q013'
										 AND R2.SUB_CODE = E.BAD_INSPEC_CODE2
		LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = E.COMP_CODE
										 AND R3.MAIN_CODE = 'Q013'
										 AND R3.SUB_CODE = E.BAD_INSPEC_CODE3

	WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND A.DIV_CODE = #{DIV_CODE}
		AND A.INSPEC_NUM = #{INSPEC_NUM}
		AND A.INSPEC_SEQ = #{INSPEC_SEQ}
</select>
<!-- 조회팝업창 조회 -->
	<select id="pms440ukrvServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
		/* pms402ukrv.Cpms402ukrv SetQms401Kr[fnQms401QPop] QUERY01 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드			*/
				  , @UserId			NVARCHAR(100)	/* 사용자ID			*/
				  , @LangType		NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat		NVARCHAR(10)	/* 날짜 포맷 유형 설정		*/

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT A.INSPEC_NUM
				 , A.INSPEC_SEQ
				 , (CASE WHEN ISNULL(A.INSPEC_DATE, '') = ''
					 THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INSPEC_DATE, 1, 4))
															 , 'MM'  , SUBSTRING(A.INSPEC_DATE, 5, 2))
															 , 'DD'  , SUBSTRING(A.INSPEC_DATE, 7, 2))
					 END)													AS INSPEC_DATE
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , A.INSPEC_Q
				 , A.GOOD_INSPEC_Q
				 , A.BAD_INSPEC_Q
				 , A.INSPEC_TYPE
				 , A.INSPEC_PRSN
				 , A.LOT_NO
				 , A.PRODT_NUM
				 , A.WKORD_NUM
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , C.PRODT_DATE
			  FROM QMS400T A WITH (NOLOCK)
			   INNER JOIN BPR100T B WITH (NOLOCK)
					   ON A.ITEM_CODE = B.ITEM_CODE
					  AND A.COMP_CODE = B.COMP_CODE
	          INNER JOIN unilite.PMP100T C WITH (NOLOCK)
					  ON A.RECEIPT_NUM  = C.WKORD_NUM
					  AND A.RECEIPT_SEQ = C.LINE_SEQ
					  AND A.COMP_CODE  = C.COMP_CODE
					  AND A.DIV_CODE   = C.DIV_CODE
			  --20190425 추가: 검사품목에 따라 공정검사 / 출하검사 구분하여 참조하도록 수정
			   LEFT  JOIN BSA230T F WITH (NOLOCK)
					   ON F.COMP_CODE = C.COMP_CODE
					  AND F.TREE_CODE = C.WORK_SHOP_CODE
			 WHERE A.COMP_CODE		= @CompCode
				--20190425 추가: 검사품목에 따라 공정검사 / 출하검사 구분하여 참조하도록 수정
			   AND F.INSPEC_TYPE	= #{INSPEC_TYPE}
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			 AND A.DIV_CODE	 = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
			 AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
			 AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
			 </if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE	  = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
			</if>
			 <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			 AND C.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
			 AND A.LOT_NO = #{LOT_NO}
			 </if>

			 ORDER BY A.INSPEC_NUM, A.INSPEC_SEQ

			 SET NOCOUNT OFF
			 SET ARITHABORT OFF
		END
	</select>

<!-- 공정검사정보 조회 -->
	<select id="pms440ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">		/* 조회1 */
	 	/*pms440ukrv.Cpms440ukrv SetQms440Kr[fnQms440QStd] QUERY01 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드			*/
				  , @UserId			NVARCHAR(100)	/* 사용자ID			*/
				  , @LangType		NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat		NVARCHAR(10)	/* 날짜 포맷 유형 설정		*/

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT
				   B.ITEM_LEVEL1
				 , A.DIV_CODE
				 , A.INSPEC_NUM
				 , A.INSPEC_SEQ
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , E.WKORD_Q AS PRODT_Q
				 , A.INSPEC_TYPE
				 , A.INSPEC_METHOD
	--			 , (CASE WHEN A.INSPEC_TYPE = '01'
	--						  THEN ''
	--						  ELSE A.GOODBAD_TYPE
	--				 END) AS GOODBAD_TYPE
				 , A.GOODBAD_TYPE
				 , ISNULL(A.RECEIPT_Q,0) AS RECEIPT_Q
				 , A.INSPEC_Q
				 , A.GOOD_INSPEC_Q
				 , A.BAD_INSPEC_Q
				 , A.INSTOCK_Q
				 , A.INSPEC_PRSN
				 , A.RECEIPT_NUM
				 , A.RECEIPT_SEQ
				 , (CASE WHEN ISNULL(A.INSPEC_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE('20230218', 'YYYY', SUBSTRING(A.INSPEC_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.INSPEC_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.INSPEC_DATE, 7, 2))
						 END)													AS INSPEC_DATE
				 , A.LOT_NO
				 , A.PRODT_NUM
				 , A.WKORD_NUM
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , A.REMARK
				 , A.COMP_CODE
				 , ISNULL(C.WH_CODE, '')	AS GOOD_WH_CODE
				 , ISNULL(C.INOUT_PRSN, '') AS GOOD_PRSN
				 , ISNULL(C.WH_CODE, '')	AS BAD_WH_CODE
				 , ISNULL(C.INOUT_PRSN, '') AS BAD_PRSN
				 , D.ITEM_ACCOUNT
				 , C.WH_CODE
				 , E.PRODT_DATE
				 , E.SO_NUM
				 , F.BOX_Q
			FROM			QMS400T A WITH (NOLOCK)
			   	 INNER JOIN BPR100T B WITH (NOLOCK) ON A.ITEM_CODE   = B.ITEM_CODE
													AND A.COMP_CODE   = B.COMP_CODE
			   	   LEFT  JOIN (
							  SELECT  TOP 1 COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ
								   , WH_CODE, INOUT_PRSN
							  FROM   BTR100T WITH (NOLOCK)
							  WHERE  COMP_CODE   =  @CompCode
							  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
							  AND	DIV_CODE	= #{DIV_CODE}
							  </if>
							  <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
							  AND	INSPEC_NUM  = #{INSPEC_NUM}
							  </if>
							  AND	ITEM_STATUS = '2'
							  ) C  ON A.COMP_CODE   = C.COMP_CODE
								  AND A.DIV_CODE	= C.DIV_CODE
								  AND A.INSPEC_NUM  = C.INSPEC_NUM
								  AND A.INSPEC_SEQ  = C.INSPEC_SEQ
				     INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
													 AND D.DIV_CODE  = A.DIV_CODE
													 AND D.ITEM_CODE = A.ITEM_CODE
					 LEFT JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE
													 AND E.DIV_CODE = A.DIV_CODE
													 AND E.WKORD_NUM = A.WKORD_NUM
													 AND E.LINE_END_YN = 'Y'
					 LEFT JOIN PMR100T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
					 								 AND F.DIV_CODE = A.DIV_CODE
					 								 AND F.PRODT_NUM = A.PRODT_NUM
			WHERE A.COMP_CODE		 = @CompCode
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE	 = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE)">
			AND A.INSPEC_DATE = #{INSPEC_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE	  = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
				AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_PRSN)">
			AND A.INSPEC_PRSN = #{INSPEC_PRSN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
			AND A.INSPEC_TYPE = #{INSPEC_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND A.INSPEC_NUM  = #{INSPEC_NUM}
			</if>

		ORDER BY A.INSPEC_SEQ

		SET NOCOUNT OFF
		SET ARITHABORT OFF
		END
	</select>

<!-- 공정검사 상세정보 조회 -->
	<select id="pms440ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">		/* 조회2 */
		/* pms440ukrvServiceImpl.selectDetail */
		BEGIN
			SET NOCOUNT	ON
			SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
			DECLARE @COMP_CODE			NVARCHAR(20)		--(필수) 법인코드
				  , @DIV_CODE			NVARCHAR(20)		--(필수) 사업장 번호
				  , @MAIN_CODE			NVARCHAR(20)		--(필수) 메인코드
				  , @INSPEC_NUM			NVARCHAR(40)		--(필수) 검사번호
				  , @INSPEC_SEQ			NUMERIC(4, 0)		--(필수) 검사순번
				  , @ITEM_CODE			NVARCHAR(40)		--(필수) 품목코드
				  , @BEFORE_INSPEC_NUM	NVARCHAR(40)		--(필수) 검사번호
				  , @BEFORE_INSPEC_SEQ	NUMERIC(4, 0)		--(필수) 검사순번
				  , @INSPEC_ITEM		NVARCHAR(02)		--(필수) 검사품목

			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @DIV_CODE	= #{DIV_CODE}
			SET @MAIN_CODE	= 'Q013'
			SET @INSPEC_NUM	= #{INSPEC_NUM}
			SET @INSPEC_SEQ	= #{INSPEC_SEQ}
			SET @ITEM_CODE	= #{ITEM_CODE}
			SET @INSPEC_ITEM= #{INSPEC_ITEM}

			IF EXISTS (
					   SELECT TOP 1 1
						 FROM QMS410T WITH(NOLOCK)
						WHERE COMP_CODE  = @COMP_CODE
						  AND DIV_CODE   = @DIV_CODE
						  AND INSPEC_NUM = @INSPEC_NUM
						  AND INSPEC_SEQ = @INSPEC_SEQ
					  )
				BEGIN
					SELECT 'U'					AS SAVE_FLAG
						 , A.COMP_CODE
						 , A.DIV_CODE
						 , A.INSPEC_NUM
						 , A.INSPEC_SEQ
						 , A.BAD_INSPEC_CODE	AS TEST_CODE
						 , A.BAD_INSPEC_CODE	AS TEST_NAME
						 --, A2.TEST_NAME
						 --20190429 QMS410T에 저장하고 불러오도록 수정
						 , A.TEST_COND
						 , A.MEASURED_FROM		AS TEST_COND_FROM
						 , A.MEASURED_TO		AS TEST_COND_TO
					--	 , A2.TEST_COND
					--	 , A2.TEST_COND_FROM
					--	 , A2.TEST_COND_TO
						 , A.SPEC
						 , A.MEASURED_VALUE
						 , A.BAD_INSPEC_Q
						 , A.INSPEC_REMARK
						 , A.MANAGE_REMARK
				    	 , 0 AS SEQ
					  FROM		QMS410T A WITH (NOLOCK)
				--	  LEFT JOIN QBA120T A1 WITH(NOLOCK) ON A1.COMP_CODE   = A.COMP_CODE
				--									   AND A1.DIV_CODE    = A.DIV_CODE
				--									   AND A1.TEST_CODE   = A.BAD_INSPEC_CODE
					  LEFT JOIN QBA100T A2 WITH(NOLOCK) ON A2.COMP_CODE = A.COMP_CODE
													   AND A2.DIV_CODE  = A.DIV_CODE
													   AND A2.TEST_CODE = A.BAD_INSPEC_CODE
					 WHERE A.COMP_CODE	= @COMP_CODE
					   AND A.DIV_CODE	= @DIV_CODE
					   AND A.INSPEC_NUM	= @INSPEC_NUM
					   AND A.INSPEC_SEQ	= @INSPEC_SEQ
				END
			ELSE
				BEGIN
					SELECT 'N'					AS SAVE_FLAG
						 , A.COMP_CODE
						 , A.DIV_CODE
						 , #{INSPEC_NUM}		AS INSPEC_NUM
						 , #{INSPEC_SEQ}		AS INSPEC_SEQ
						 , A.TEST_CODE
						 , A.TEST_CODE			AS TEST_NAME
						 --, B.TEST_NAME
						 , B.TEST_COND
						 , B.TEST_COND_FROM
						 , B.TEST_COND_TO
						 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
								  AND (ISNULL(B.TEST_COND_FROM, 0) &gt; 0 OR ISNULL(B.TEST_COND_TO, 0) &lt; 0)) THEN '부적합'
								ELSE B.TEST_RESULT
						   END					AS SPEC		--[QMS410T.SPEC]
					--	 , B.TEST_RESULT		AS SPEC		--[QMS410T.SPEC]
						 , 0 AS SEQ
					  FROM		 QBA120T A WITH(NOLOCK)
					  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													   AND B.DIV_CODE  = A.DIV_CODE
													   AND B.TEST_CODE = A.TEST_CODE
					  INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
													   AND C.DIV_CODE  = A.DIV_CODE
													   AND C.ITEM_CODE = @ITEM_CODE
													   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
					 WHERE A.COMP_CODE   = #{S_COMP_CODE}
					   AND A.DIV_CODE    = #{DIV_CODE}
					   AND A.TEST_GROUP  = #{ITEM_LEVEL1}
				END
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

<!-- 접수참조 -->
	<select id="pms440ukrvServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
		/* pms440ukrv.Cpms440ukrv SetQms440Kr[fnQms440QNotAccept] QUERY01 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08) /* 법인코드				*/
				  , @UserId			NVARCHAR(100) /* 사용자ID				*/
				  , @LangType		NVARCHAR(2)  /* 언어구분				*/
				  , @RefItem		NVARCHAR(01) /* 명칭 참조 유형			*/
				  , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정	 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT CAST('' AS BIT)						   AS CHK
				 , C.ITEM_LEVEL1
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , C.SPEC
				 , C.STOCK_UNIT
				 , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
					END)										 AS RECEIPT_DATE
				 , A.WKORD_Q AS PRODT_Q					-- 생산량
				 , ISNULL(D.INSPEC_Q,0) AS INSPEC_Q		-- 접수량
				 , ISNULL(A.WKORD_Q,0) -  ISNULL(D.INSPEC_Q,0) AS NOT_INSPEC_Q   --  미검사량
				 , B.INSPEC_METH_PRODT				-- 검사유형
				 , A.WKORD_NUM AS RECEIPT_NUM 		-- 작업번호
				 , A.LINE_SEQ  AS RECEIPT_SEQ		-- 접수순번
				 , A.LOT_NO							-- LOT NO
				 , A.WORK_SHOP_CODE					-- 작업장코드
				 , A.TOP_WKORD_NUM	AS 	PRODT_NUM	-- 생산실적번호
				 , A.WKORD_NUM						-- 작업지시번호
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , B.ITEM_ACCOUNT
				 , B.WH_CODE
				 , A.PRODT_DATE
				 , F.WH_CELL_CODE AS WH_CELL_CODE
				 --20210222 추가
				/* , CASE WHEN ISNULL(D.WH_CELL_CODE, '') = '' THEN Z.WH_CELL_CODE
				        ELSE D.WH_CELL_CODE
				   END                                         AS WH_CELL_CODE  */
				  FROM PMP100T A WITH (NOLOCK)
	  	  		  LEFT OUTER JOIN  QMS300T D WITH (NOLOCK)
		   			   ON ISNULL(A.WKORD_NUM,'')  = ISNULL(D.PRODT_NUM,'')
		    		  AND A.DIV_CODE			  = D.DIV_CODE
					  AND A.COMP_CODE			 = D.COMP_CODE
	   		      INNER JOIN  BPR200T B WITH (NOLOCK)
					   ON A.ITEM_CODE = B.ITEM_CODE
					  AND A.COMP_CODE = B.COMP_CODE
					  AND B.ITEM_ACCOUNT = '20'
			   	  INNER JOIN  BPR100T C WITH (NOLOCK)
					   ON A.ITEM_CODE = C.ITEM_CODE
					  AND A.COMP_CODE = C.COMP_CODE
				--20190425 추가: 검사품목에 따라 공정검사 / 출하검사 구분하여 참조하도록 수정
			   	  LEFT  JOIN  BSA230T F WITH (NOLOCK)
					   ON F.COMP_CODE = C.COMP_CODE
					   AND F.TREE_CODE = B.WORK_SHOP_CODE

				WHERE  A.COMP_CODE	  = @CompCode
				--20190425 추가: 검사품목에 따라 공정검사 / 출하검사 구분하여 참조하도록 수정
				AND	F.INSPEC_TYPE	   = #{INSPEC_TYPE}

				<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND	A.DIV_CODE	   = #{DIV_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
				AND A.PRODT_WKORD_DATE	 &gt;= #{RECEIPT_DATE_FR}
				</if>
				<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
				AND A.PRODT_WKORD_DATE	 &lt;= #{RECEIPT_DATE_TO}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
					AND A.ITEM_CODE	  = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
					AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
					AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				AND A.LOT_NO	  LIKE #{LOT_NO} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
				AND A.PROJECT_NO  LIKE #{PROJECT_NO} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
				AND B.WORK_SHOP_CODE	 = #{WORK_SHOP_CODE}
				</if>

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

<!-- 접수참조 -->
	<select id="pms440ukrvServiceImpl.getTestResult" parameterType="Map" resultType="string">
		SELECT TEST_RESULT
		  FROM QBA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND TEST_CODE = #{TEST_CODE}
	</select>



<!-- 공정검사정보 저장 -->
	<insert id="pms440ukrvServiceImpl.insertLogMaster" parameterType="Map">
		--pms440ukrv.Cpms440ukrv SetQms440Kr[fnQms440Save] QUERY04
		INSERT L_QMS400T
			 ( KEY_VALUE
			 , OPR_FLAG
			 , COMP_CODE
			 , DIV_CODE
			 , INSPEC_NUM
			 , INSPEC_SEQ
			 , INSPEC_DATE
			 , ITEM_CODE
			 , INSPEC_TYPE
			 , GOODBAD_TYPE
			 , RECEIPT_Q
			 , INSPEC_Q
			 , GOOD_INSPEC_Q
			 , BAD_INSPEC_Q
			 , INSPEC_PRSN
			 , LOT_NO
			 , PRODT_NUM
			 , WKORD_NUM
			 , PROJECT_NO
			 , PJT_CODE
			 , RECEIPT_NUM
			 , RECEIPT_SEQ
			 , REMARK
			 , GOOD_WH_CODE
			 , BAD_WH_CODE
			 , GOOD_PRSN
			 , BAD_PRSN
			 , GOOD_WH_CELL_CODE --20190725 CELL 추가
			 , BAD_WH_CELL_CODE
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME)
		VALUES
			 ( #{KEY_VALUE}
			 , #{OPR_FLAG}
			 , #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{INSPEC_NUM}
			<if test="@foren.Ognl@isEmpty(INSPEC_SEQ)">
			 , '0'
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_SEQ)">
			 , #{INSPEC_SEQ}
			</if>
			 , #{INSPEC_DATE}
			 , #{ITEM_CODE}
			 , #{INSPEC_TYPE}
			 , #{GOODBAD_TYPE}
			 , #{RECEIPT_Q}
			 , #{INSPEC_Q}
			 , #{GOOD_INSPEC_Q}
			 , #{BAD_INSPEC_Q}
			 , #{INSPEC_PRSN}
			 , #{LOT_NO}
			 , #{PRODT_NUM}
			 , #{WKORD_NUM}
			 , #{PROJECT_NO}
			 , #{PJT_CODE}
			 , #{RECEIPT_NUM}
			 , #{RECEIPT_SEQ}
			 , #{REMARK}
			 , #{GOOD_WH_CODE}
			 , #{BAD_WH_CODE}
			 , #{GOOD_PRSN}
			 , #{BAD_PRSN}
			 , #{GOOD_WH_CELL_CODE} --20190725 CELL 추가
			 , #{BAD_WH_CELL_CODE}
			 , #{S_USER_ID}
			 , GETDATE())
	</insert>

<!-- 공정검사상세정보 저장 -->
	<insert id="pms440ukrvServiceImpl.insertLogMaster2" parameterType="Map">
		--pms440ukrv.Cpms440ukrv SetQms440Kr[fnQms440Save] QUERY10
		INSERT L_QMS410T
			 ( KEY_VALUE
			 , OPR_FLAG
			 , COMP_CODE
			 , DIV_CODE
			 , INSPEC_NUM
			 , INSPEC_SEQ
			 , BAD_INSPEC_CODE
			 , BAD_INSPEC_Q
			 , INSPEC_REMARK
			 , MANAGE_REMARK
			 , SPEC
			 , MEASURED_VALUE

			 --20190429 QMS410T에 저장하도록 수정
			 , TEST_COND
			 , MEASURED_FROM
			 , MEASURED_TO
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME)
		 VALUES
			 ( #{KEY_VALUE}
			 , #{OPR_FLAG}
			 , #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{INSPEC_NUM}
			 , #{INSPEC_SEQ}
			 , #{TEST_CODE}
			 , #{BAD_INSPEC_Q}
			 , #{INSPEC_REMARK}
			 , #{MANAGE_REMARK}
			 , #{SPEC}
			 , #{MEASURED_VALUE}

			 --20190429 QMS410T에 저장하도록 수정
			 , #{TEST_COND}
			 , #{TEST_COND_FROM}
			 , #{TEST_COND_TO}

			 , #{S_USER_ID}
			 , GETDATE())
	</insert>

	<update id="pms440ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_PRODT_Pms400ukr (
			#{KeyValue,	 mode=IN,	jdbcType=VARCHAR,   javaType=java.lang.String},
			#{INSPEC_NUM,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
			#{ErrorDesc,	mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
		)}
	</update>

	<select id="pms440ukrvServiceImpl.inspecQtyCheck" parameterType="Map" resultType="rMap">
		  /* pms440ukrvServiceImpl.inspecQtyCheck*/
	    SELECT INOUT_Q
	      FROM BTR100T
	     WHERE COMP_CODE  = #{S_COMP_CODE}
	       AND DIV_CODE   = #{DIV_CODE}
	       AND INSPEC_NUM = #{INSPEC_NUM}
	       AND INSPEC_SEQ = #{INSPEC_SEQ}
	       AND CREATE_LOC = '1'
	</select>
</mapper>