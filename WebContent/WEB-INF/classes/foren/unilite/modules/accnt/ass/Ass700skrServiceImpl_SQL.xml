<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ass700skrServiceImpl">
	<select id="ass700skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/*ass700skr.Cass700SKR[fnass700nq] Query1*/
		SELECT C.ALTER_DIVI              AS ALTER_DIVI
		     , H.CODE_NAME               AS ALTER_DIVINM
		     , C.SEQ                     AS SEQ
		     , ISNULL(unilite.fnGetUserDateComp(#{S_COMP_CODE}, C.ALTER_DATE), '') AS ALTER_DATE
		     , C.ASST                    AS ASST
		     , C.ASST_NAME               AS ASST_NAME
		     , D.ACCNT_NAME              AS ACCNT_NAME
		     , CAST(C.DRB_YEAR AS INT)   AS DRB_YEAR
		     , ISNULL(unilite.fnGetUserDateComp(#{S_COMP_CODE}, C.ACQ_DATE), '')   AS ACQ_DATE
		     , ISNULL(C.ACQ_AMT_I,0)     AS ACQ_AMT_I
		     , ISNULL(C.ACQ_Q,0)         AS ACQ_Q
		     , ISNULL(C.ALTER_AMT_I,0)   AS ALTER_AMT_I
		     , C.REMARK                  AS REMARK
		     , E.CODE_NAME               AS MONEY_UNIT_NM
		     , ISNULL(C.EXCHG_RATE_O,0)  AS EXCHG_RATE_O
		     , ISNULL(C.FOR_ACQ_AMT_I,0) AS FOR_ACQ_AMT_I
		     , J.TREE_NAME               AS PRE_DIV_NAME
		     , I.TREE_NAME               AS PRE_DEPT_NAME 
		     , G.DIV_NAME                AS DIV_NAME
		     , F.TREE_NAME               AS TREE_NAME
		     , C.EX_DATE                 AS EX_DATE
		     , C.EX_NUM                  AS EX_NUM
		     , C.AGREE_YN                AS AGREE_YN
		     , C.PJT_CODE                AS PJT_CODE
		     , C.PJT_NAME                AS PJT_NAME
		  FROM (SELECT '1'  ALTER_DIVI             --변동구분
		             , 0 SEQ                       --변동순번
		             , A.ACQ_DATE ALTER_DATE       --변동일
		             , A.ASST                      --자산코드
		             , A.ASST_NAME                 --자산명
		             , A.ACCNT                     --계정코드 --> 계정과목
		             , A.DRB_YEAR                  --내용년수
		             , A.ACQ_DATE                  --취득일
		             , A.ACQ_AMT_I                 --취득금액
		             , A.ACQ_Q                     --변동수량
		             , A.ACQ_AMT_I ALTER_AMT_I     --변동금액
		             , A.REMARK                    --변동사유
		             , A.MONEY_UNIT                --화폐단위
		             , A.EXCHG_RATE_O              --환율
		             , A.FOR_ACQ_AMT_I             --외화변동액
		             , '' AS PRE_DIV_CODE
		             , '' AS PRE_DEPT_CODE
		             , A.DIV_CODE                  --사업장
		             , A.DEPT_CODE                 --부서
		             , A.EX_DATE                   --결의일
		             , A.EX_NUM                    --결의번호
		             , '' AS AGREE_YN              --결의여부
		             , A.PJT_CODE
		             , B.PJT_NAME
		          FROM      ASS300T A WITH(NOLOCK)
		          LEFT JOIN BCM600T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                           AND B.PJT_CODE  = A.PJT_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}

		        UNION ALL

		        SELECT CASE A.ALTER_DIVI 
		                    WHEN '1' THEN '2'
		                    WHEN '2' THEN '3' 
		                    WHEN '3' THEN '4' 
		                             ELSE '0' 
		                END ALTER_DIVI
		             , A.SEQ
		             , A.ALTER_DATE
		             , A.ASST
		             , B.ASST_NAME
		             , B.ACCNT
		             , B.DRB_YEAR
		             , B.ACQ_DATE
		             , B.ACQ_AMT_I
		             , A.ALTER_Q
		             , A.ALTER_AMT_I
		             , A.ALTER_REASON
		             , A.MONEY_UNIT
		             , A.EXCHG_RATE_O
		             , A.FOR_ALTER_AMT_I
		             , A.PRE_DIV_CODE
		             , A.PRE_DEPT_CODE
		             , B.DIV_CODE
		             , B.DEPT_CODE
		             , A.EX_DATE
		             , A.EX_NUM
		             , '' AS AGREE_YN
		             , B.PJT_CODE
		             , C.PJT_NAME
		          FROM      ASS500T A WITH(NOLOCK)
		          LEFT JOIN ASS300T B WITH (NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
		                                           AND A.ASST      = B.ASST
		          LEFT JOIN BCM600T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
		                                           AND C.PJT_CODE  = B.PJT_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		  ) C 
		                       LEFT OUTER JOIN ABA400T D WITH(NOLOCK)
		                                    ON D.COMP_CODE = #{S_COMP_CODE}
		                                   AND C.ACCNT = D.ACCNT
		                       LEFT OUTER JOIN (SELECT SUB_CODE
		                                             , CODE_NAME
		                                          FROM BSA100T WITH(NOLOCK)
		                                         WHERE COMP_CODE = #{S_COMP_CODE}
		                                           AND MAIN_CODE = 'B004' ) E
		                                    ON E.SUB_CODE = C.MONEY_UNIT
		                       LEFT OUTER JOIN BSA210T F WITH(NOLOCK)
		                                    ON F.COMP_CODE = #{S_COMP_CODE}
		                                   AND F.TREE_CODE = C.DEPT_CODE
		                       LEFT OUTER JOIN BOR120T G WITH(NOLOCK)
		                                    ON G.COMP_CODE =  #{S_COMP_CODE}
		                                   AND G.DIV_CODE  = C.DIV_CODE
		                       LEFT OUTER JOIN (SELECT SUB_CODE, CODE_NAME
		                                          FROM BSA100T WITH(NOLOCK)
		                                         WHERE COMP_CODE = #{S_COMP_CODE}
		                                           AND MAIN_CODE = 'A091') H
		                                    ON H.SUB_CODE = C.ALTER_DIVI
		                       LEFT OUTER JOIN BSA210T I WITH(NOLOCK)
		                                    ON I.COMP_CODE =  #{S_COMP_CODE}
		                                   AND I.TREE_CODE  = C.PRE_DEPT_CODE
		                       LEFT OUTER JOIN BSA210T J WITH(NOLOCK)
		                                    ON J.COMP_CODE =  #{S_COMP_CODE}
		                                   AND J.TREE_CODE  = C.PRE_DIV_CODE
		 WHERE 1 = 1
		   AND C.ALTER_DATE &gt;= #{ALTER_DATE_FR}
		   AND C.ALTER_DATE &lt;= #{ALTER_DATE_TO}
		   <if test="@foren.Ognl@isNotEmpty(ALTER_DIVI)">
		   AND C.ALTER_DIVI = #{ALTER_DIVI}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
		   AND C.ACCNT = #{ACCNT_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
		   AND C.ASST &gt;= #{ASSET_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ASSET_CODE2)">
		   AND C.ASST &lt;= #{ASSET_CODE2}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND     C.DIV_CODE IN
		       <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
		           #{item}
		       </foreach>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		   AND C.DEPT_CODE = #{DEPT_CODE}
		   </if>
		 ORDER BY ALTER_DIVI,ALTER_DIVINM, ALTER_DATE, ASST, SEQ
	</select>
</mapper>