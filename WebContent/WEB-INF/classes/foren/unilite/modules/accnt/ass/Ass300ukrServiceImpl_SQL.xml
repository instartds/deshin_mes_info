<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ass300ukrServiceImpl">
	<!--
		Sorry, I can`t migrate	Bor100ukrvModel
		See console output for further details 
	-->
	<select id="ass300ukrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		--ass300ukrv.Cass300ukr[fnAss300QStd] Query01
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @ASST           NVARCHAR(15)
		      , @ASST_NAME      NVARCHAR(30)
		
		SET     @COMP_CODE      = #{S_COMP_CODE}
		SET     @ASST           = #{ASSET_CODE}
		SET     @ASST_NAME      = #{ASSET_NAME}
		
		SELECT TOP 1
		        A.COMP_CODE
		     ,  A.ASST
		     ,  A.ASST_NAME
		     ,  A.SPEC
		     ,  A.SERIAL_NO
		     ,  A.ASST_DIVI
		     ,  A.ACCNT
		     ,  N1.ACCNT_NAME
		     ,  A.DIV_CODE
		     ,  A.PJT_CODE											AS AC_PROJECT_CODE
		     ,  N2.PJT_NAME											AS AC_PROJECT_NAME
		     ,  A.DRB_YEAR
		     ,  CONVERT(NUMERIC, M1.CODE_NAME) / 1000               AS DPR_RATE
		     ,  A.MONEY_UNIT
		     ,  A.EXCHG_RATE_O
		     ,  A.FOR_ACQ_AMT_I
		     ,  A.ACQ_AMT_I
		     ,  A.ACQ_Q
		     ,  A.STOCK_Q
		     ,  A.QTY_UNIT
		     ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
		     ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.USE_DATE)  AS USE_DATE
		
		     ,  A.DEPT_CODE
		     ,  A.DEPT_NAME
		     ,  A.PURCHASE_DEPT_CODE
		     ,  A.PURCHASE_DEPT_NAME
		     ,  A.PERSON_NUMB
		     ,  N4.NAME                                             AS NAME
		     ,  A.PLACE_INFO
		     ,  A.CUSTOM_CODE
		     ,  ISNULL(N3.CUSTOM_NAME, A.CUSTOM_NAME)               AS CUSTOM_NAME
		     ,  A.BAR_CODE
		     ,  A.MAKER_NAME
		     ,  A.REMARK
		
		     ,  A.COST_POOL_CODE
		     ,  A.COST_DIRECT
		     ,  A.ITEM_LEVEL1
		     ,  A.ITEM_LEVEL2
		     ,  A.ITEM_LEVEL3
		
		     ,  A.DPR_STS
		     ,  A.SALE_MANAGE_COST
		     ,  A.PRODUCE_COST
		     ,  A.SALE_COST
		     ,  A.FI_CAPI_TOT_I
		     ,  A.FI_SALE_TOT_I
		     ,  A.FI_SALE_DPR_TOT_I
		     ,  A.FI_DPR_TOT_I
		     ,  A.FL_BALN_I
		     ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.WASTE_YYYYMM)  AS WASTE_YYYYMM
		     ,  A.WASTE_SW
		     ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.DPR_YYYYMM)    AS DPR_YYYYMM
		     ,  A.DPR_STS2
		
		     ,  A.SET_TYPE
		     ,  A.PROOF_KIND
		     ,  A.SUPPLY_AMT_I
		     ,  A.TAX_AMT_I
		     ,  A.AC_CUSTOM_CODE
		     ,  N5.CUSTOM_NAME                                          AS AC_CUSTOM_NAME
		     ,  A.SAVE_CODE
		     ,  N6.SAVE_NAME
		     ,  A.CRDT_NUM
		     ,  N7.CRDT_NAME
		     ,  A.REASON_CODE
		     ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_DATE)     AS PAY_DATE
		     ,  A.EB_YN
		     ,  CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN ''
		             ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, A.EX_DATE)
		        END                                                    AS EX_DATE
		     ,  A.EX_NUM
		     ,  A.INSERT_DB_USER
		     ,  A.INSERT_DB_TIME
		     ,  CASE WHEN R1.ASST IS NOT NULL OR R2.ASST IS NOT NULL THEN 'Y'
		             ELSE 'N'
		        END AS EXIST_YN
		FROM           ASS300T  AS A  WITH (NOLOCK) 
		    LEFT  JOIN ASS100T  AS B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
		                                            AND B.ACCNT        = A.ACCNT
		    LEFT  JOIN ABA400T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE   = A.COMP_CODE
		                                            AND N1.ACCNT       = A.ACCNT
		    LEFT  JOIN BCM600T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = A.COMP_CODE
		                                            AND N2.PJT_CODE    = A.PJT_CODE
		    LEFT  JOIN BCM100T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
		                                            AND N3.CUSTOM_CODE = A.CUSTOM_CODE
		    LEFT  JOIN HUM100T  AS N4 WITH (NOLOCK) ON  N4.COMP_CODE   = A.COMP_CODE
		                                            AND N4.PERSON_NUMB = A.PERSON_NUMB
		    LEFT  JOIN BCM100T  AS N5 WITH (NOLOCK) ON  N5.COMP_CODE   = A.COMP_CODE
		                                            AND N5.CUSTOM_CODE = A.AC_CUSTOM_CODE
		    LEFT  JOIN AFS100T  AS N6 WITH (NOLOCK) ON  N6.COMP_CODE   = A.COMP_CODE
		                                            AND N6.SAVE_CODE   = A.SAVE_CODE
		    LEFT  JOIN ABA500T  AS N7 WITH (NOLOCK) ON  N7.COMP_CODE   = A.COMP_CODE
		                                            AND N7.CRDT_NUM    = A.CRDT_NUM
		    LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE   = A.COMP_CODE
		                                            AND M1.MAIN_CODE   = (CASE WHEN B.DEP_CTL = '1' THEN 'A033'
		                                                                       WHEN B.DEP_CTL = '2' THEN 'A034'
		                                                                  END)
		                                            AND M1.SUB_CODE    = SUBSTRING(CONVERT(NVARCHAR, 1000+A.DRB_YEAR), 2, 3)
		    LEFT  JOIN ASC100T  AS R1 WITH (NOLOCK) ON  R1.COMP_cODE   = A.COMP_CODE
		                                            AND R1.ASST        = A.ASST
		    LEFT  JOIN ASS500T  AS R2 WITH (NOLOCK) ON  R1.COMP_CODE   = A.COMP_CODE
		                                            AND R1.ASST        = A.ASST
		WHERE A.COMP_CODE      =       @COMP_CODE
		AND   ((A.ASST      LIKE       @ASST      + '%' AND @ASST      != '') OR (@ASST      = ''))
		ORDER BY A.ASST

	</select>
	<insert id="ass300ukrServiceImpl.insertForm" parameterType="Map">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query04
		--자산정보 저장
		INSERT INTO ASS300T 
		     ( COMP_CODE         
		     , ASST              
		     , ASST_NAME         
		     , SPEC              
		     , ACCNT             
		     , DIV_CODE          
		     , DEPT_CODE         
		     , DEPT_NAME         
		     , PJT_CODE          
		     , DRB_YEAR          
		     , MONEY_UNIT        
		     , EXCHG_RATE_O      
		     , FOR_ACQ_AMT_I     
		     , ACQ_AMT_I         
		     , ACQ_Q             
		     , STOCK_Q           
		     , QTY_UNIT          
		     , ACQ_DATE          
		     , USE_DATE          
		     , COST_POOL_CODE    
		     , COST_DIRECT       
		     , ITEM_LEVEL1       
		     , ITEM_LEVEL2       
		     , ITEM_LEVEL3       
		     , CUSTOM_CODE       
		     , CUSTOM_NAME       
		     , PERSON_NUMB       
		     , PLACE_INFO        
		     , SERIAL_NO         
		     , BAR_CODE          
		     , REMARK            
		     , DPR_STS           
		     , SALE_MANAGE_COST  
		     , PRODUCE_COST      
		     , SALE_COST         
		     , FI_CAPI_TOT_I     
		     , FI_SALE_TOT_I     
		     , FI_SALE_DPR_TOT_I 
		     , FI_DPR_TOT_I      
		     , FL_BALN_I         
		     , WASTE_YYYYMM      
		     , WASTE_SW          
		     , DPR_YYYYMM        
		     , DPR_STS2          
		     , SET_TYPE          
		     , PROOF_KIND        
		     , SUPPLY_AMT_I      
		     , TAX_AMT_I         
		     , AC_CUSTOM_CODE    
		     , SAVE_CODE         
		     , CRDT_NUM          
		     , REASON_CODE       
		     , PAY_DATE          
		     , EB_YN             
		     , INSERT_DB_USER	
		     , INSERT_DB_TIME	
		     , UPDATE_DB_USER	
		     , UPDATE_DB_TIME	
		     , ASST_DIVI         
		     , PURCHASE_DEPT_CODE
		     , PURCHASE_DEPT_NAME
		     , MAKER_NAME 
		     ) 
		VALUES
			(  #{COMP_CODE}         
			   ,#{ASST}              
			   ,#{ASST_NAME}         
			   ,#{SPEC}              
			   ,#{ACCNT}             
			   ,#{DIV_CODE}          
			   ,#{DEPT_CODE}         
			   ,#{DEPT_NAME}         
			   ,#{PJT_CODE}          
			   ,#{DRB_YEAR}          
			   ,#{MONEY_UNIT}        
			   ,#{EXCHG_RATE_O}
			   <if test="@foren.Ognl@isEmpty(FOR_ACQ_AMT_I)">
			   , 0
			   </if>    
			   <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I)">  
			   ,#{FOR_ACQ_AMT_I} 
			   </if>
			   <if test="@foren.Ognl@isEmpty(ACQ_AMT_I)">
			   , 0
			   </if>    
			   <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I)">  
			   ,#{ACQ_AMT_I}         
			   </if>
			   ,#{ACQ_Q}             
			   ,#{STOCK_Q}           
			   ,#{QTY_UNIT}          
			   ,#{ACQ_DATE}          
			   ,#{USE_DATE}          
			   ,#{COST_POOL_CODE}    
			   ,#{COST_DIRECT}       
			   ,#{ITEM_LEVEL1}       
			   ,#{ITEM_LEVEL2}       
			   ,#{ITEM_LEVEL3}       
			   ,#{CUSTOM_CODE}       
			   ,#{CUSTOM_NAME}       
			   ,#{PERSON_NUMB}       
			   ,#{PLACE_INFO}        
			   ,#{SERIAL_NO}         
			   ,#{BAR_CODE}          
			   ,#{REMARK}            
			   ,#{DPR_STS}           
			   ,#{SALE_MANAGE_COST}  
			   ,#{PRODUCE_COST}      
			   ,#{SALE_COST} 
			   <if test="@foren.Ognl@isEmpty(FI_CAPI_TOT_I)">
			   , 0
			   </if> 
			   <if test="@foren.Ognl@isNotEmpty(FI_CAPI_TOT_I)">         
			   ,#{FI_CAPI_TOT_I}
			   </if>
			   <if test="@foren.Ognl@isEmpty(FI_SALE_TOT_I)">
			   , 0
			   </if>     
			   <if test="@foren.Ognl@isNotEmpty(FI_SALE_TOT_I)">  
			   ,#{FI_SALE_TOT_I}
			   </if>
			   <if test="@foren.Ognl@isEmpty(FI_SALE_DPR_TOT_I)">
			   , 0
			   </if>   
			   <if test="@foren.Ognl@isNotEmpty(FI_SALE_DPR_TOT_I)">    
			   ,#{FI_SALE_DPR_TOT_I} 
			   </if>
			   <if test="@foren.Ognl@isEmpty(FI_DPR_TOT_I)">
			   , 0
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(FI_DPR_TOT_I)">  
			   ,#{FI_DPR_TOT_I}
			   </if>
			   <if test="@foren.Ognl@isEmpty(FL_BALN_I)">
			   , 0
			   </if>      
			   <if test="@foren.Ognl@isNotEmpty(FL_BALN_I)"> 
			   ,#{FL_BALN_I}         
			   </if>
			   ,#{WASTE_YYYYMM}      
			   ,#{WASTE_SW}          
			   ,#{DPR_YYYYMM}        
			   ,#{DPR_STS2}          
			   ,#{SET_TYPE}          
			   ,#{PROOF_KIND}  
			   <if test="@foren.Ognl@isEmpty(SUPPLY_AMT_I)">
			   , 0
			   </if>      
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_AMT_I)">  
			   ,#{SUPPLY_AMT_I}  
			   </if>
			   <if test="@foren.Ognl@isEmpty(TAX_AMT_I)">
			   , 0
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TAX_AMT_I)">      
			   ,#{TAX_AMT_I}         
			   </if>
			   ,#{AC_CUSTOM_CODE}    
			   ,#{SAVE_CODE}         
			   ,#{CRDT_NUM}          
			   ,#{REASON_CODE}       
			   ,#{PAY_DATE}          
			   ,#{EB_YN}             
			   ,#{USER_ID}	
			   ,GETDATE()	
			   ,#{USER_ID}	
			   ,GETDATE()	
			   ,#{ASST_DIVI}         
			   ,#{PURCHASE_DEPT_CODE}
			   ,#{PURCHASE_DEPT_NAME}
			   ,#{MAKER_NAME} 
		     )			
	</insert>
	
	<update id="ass300ukrServiceImpl.updateForm" parameterType="Map">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query04
		--자산정보 저장
		UPDATE ASS300T
		   SET ASST_NAME          =  #{ASST_NAME}         
		     , SPEC               =  #{SPEC}              
		     , ACCNT              =  #{ACCNT}             
		     , DIV_CODE           =  #{DIV_CODE}          
		     , DEPT_CODE          =  #{DEPT_CODE}         
		     , DEPT_NAME          =  #{DEPT_NAME}         
		     , PJT_CODE           =  #{PJT_CODE}          
		     , DRB_YEAR           =  #{DRB_YEAR}          
		     , MONEY_UNIT         =  #{MONEY_UNIT}        
		     , EXCHG_RATE_O       =  #{EXCHG_RATE_O}      
		     <if test="@foren.Ognl@isEmpty(FOR_ACQ_AMT_I)">
			 , FOR_ACQ_AMT_I	  =  0
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I)">
			 , FOR_ACQ_AMT_I	  =  #{FOR_ACQ_AMT_I}   
		     </if>    
		     <if test="@foren.Ognl@isEmpty(ACQ_AMT_I)">
		   	 , ACQ_AMT_I          =  0
		     </if>    
		     <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I)">  
		   	 , ACQ_AMT_I          =  #{ACQ_AMT_I}        
		     </if>		              
		     , ACQ_Q              =  #{ACQ_Q}             
		     , STOCK_Q            =  #{STOCK_Q}           
		     , QTY_UNIT           =  #{QTY_UNIT}          
		     , ACQ_DATE           =  #{ACQ_DATE}          
		     , USE_DATE           =  #{USE_DATE}          
		     , COST_POOL_CODE     =  #{COST_POOL_CODE}    
		     , COST_DIRECT        =  #{COST_DIRECT}       
		     , ITEM_LEVEL1        =  #{ITEM_LEVEL1}       
		     , ITEM_LEVEL2        =  #{ITEM_LEVEL2}       
		     , ITEM_LEVEL3        =  #{ITEM_LEVEL3}       
		     , CUSTOM_CODE        =  #{CUSTOM_CODE}       
		     , CUSTOM_NAME        =  #{CUSTOM_NAME}       
		     , PERSON_NUMB        =  #{PERSON_NUMB}       
		     , PLACE_INFO         =  #{PLACE_INFO}        
		     , SERIAL_NO          =  #{SERIAL_NO}         
		     , BAR_CODE           =  #{BAR_CODE}          
		     , REMARK             =  #{REMARK}            
		     , DPR_STS            =  #{DPR_STS}           
		     , SALE_MANAGE_COST   =  #{SALE_MANAGE_COST}  
		     , PRODUCE_COST       =  #{PRODUCE_COST}      
		     , SALE_COST          =  #{SALE_COST}         
		     , FI_CAPI_TOT_I      =  #{FI_CAPI_TOT_I}     
		     , FI_SALE_TOT_I      =  #{FI_SALE_TOT_I}     
		     , FI_SALE_DPR_TOT_I  =  #{FI_SALE_DPR_TOT_I} 
		     , FI_DPR_TOT_I       =  #{FI_DPR_TOT_I}      
		     , FL_BALN_I          =  #{FL_BALN_I}         
		     , WASTE_YYYYMM       =  #{WASTE_YYYYMM}      
		     , WASTE_SW           =  #{WASTE_SW}          
		     , DPR_YYYYMM         =  #{DPR_YYYYMM}        
		     , DPR_STS2           =  #{DPR_STS2}          
		     , SET_TYPE           =  #{SET_TYPE}          
		     , PROOF_KIND         =  #{PROOF_KIND}        
		     , SUPPLY_AMT_I       =  #{SUPPLY_AMT_I}      
		     , TAX_AMT_I          =  #{TAX_AMT_I}         
		     , AC_CUSTOM_CODE     =  #{AC_CUSTOM_CODE}    
		     , SAVE_CODE          =  #{SAVE_CODE}         
		     , CRDT_NUM           =  #{CRDT_NUM}          
		     , REASON_CODE        =  #{REASON_CODE}       
		     , PAY_DATE           =  #{PAY_DATE}          
		     , EB_YN              =  #{EB_YN}      
		     , UPDATE_DB_USER     =  #{USER_ID}    
		     , UPDATE_DB_TIME     =  GETDATE()  
		     , ASST_DIVI          =  #{ASST_DIVI}         
		     , PURCHASE_DEPT_CODE =  #{PURCHASE_DEPT_CODE}
		     , PURCHASE_DEPT_NAME =  #{PURCHASE_DEPT_NAME}
		     , MAKER_NAME         =  #{MAKER_NAME}        
		     
		 WHERE COMP_CODE          = #{COMP_CODE}
		   AND ASST               = #{ASST}
	</update>
	
	<update id="ass300ukrServiceImpl.deleteForm" parameterType="Map">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query02
		--자산정보 삭제
		DELETE FROM ASS300T 
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND ASST      = #{ASST}
		  
	</update>
	
	<select id="ass300ukrServiceImpl.beforeDelCheck" parameterType="Map" resultType="rMap">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query01
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @COMP_CODE  NVARCHAR(08)
		          , @ASST       NVARCHAR(15)
		
		          , @ERR_DESC   NVARCHAR(4000)
		
		    SET     @COMP_CODE  = #{COMP_CODE}
		    SET     @ASST       = #{ASST}
		
		    SET     @ERR_DESC   = ''
		
		    --1. 상각내역 존재여부 확인
		    DECLARE @ExistYN    NUMERIC(01)
		    SET     @ExistYN    = 0
		
		    SELECT  TOP 1
		            @ExistYN    = 1
		    FROM           ASC100T AS A WITH (NOLOCK)
		        INNER JOIN ASS300T AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
		                                               AND B.ASST      = A.ASST
		    WHERE A.COMP_CODE = @COMP_CODE
		    AND   A.ASST      = @ASST
		
		    IF ( @ExistYN  != 0 )
		    BEGIN
		        --자산의 상각내역이 존재합니다. 감가상각내역을 먼저 삭제한 후 자산을 삭제하십시오.
		        SET @ERR_DESC = '55379;'
		        GOTO ERROR_HANDLER
		    END
		
		    --2. 변동내역 존재여부 확인
		    SET     @ExistYN    = 0
		
		    SELECT  TOP 1
		            @ExistYN    = 1
		    FROM           ASS500T AS A WITH (NOLOCK)
		        INNER JOIN ASS300T AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
		                                               AND B.ASST      = A.ASST
		    WHERE A.COMP_CODE = @COMP_CODE
		    AND   A.ASST      = @ASST
		
		    IF ( @ExistYN  != 0 )
		    BEGIN
		        --자산의 변동내역이 존재합니다. 자산변동내역을 먼저 삭제한 후 자산을 삭제하십시오.
		        SET @ERR_DESC = '55348;'
		        GOTO ERROR_HANDLER
		    END
		
		ERROR_HANDLER:
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    IF CHARINDEX(';', @ERR_DESC) &gt; 0
		        SELECT SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)               AS ERROR_CODE
		             , SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC))  AS ERROR_DESC
		    ELSE
		        SELECT TOP 1 '' ERROR_CODE, '' ERROR_DESC
		END
	</select>
	
	<select id="ass300ukrServiceImpl.beforeSaveCheck" parameterType="Map" resultType="rMap">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query03
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @COMP_CODE  NVARCHAR(08)
		          , @ASST       NVARCHAR(15)
		          , @ACCNT      NVARCHAR(16)
		          , @ACQ_DATE   NVARCHAR(08)
		          , @WORK_FLAG  NVARCHAR(01)
		
		          , @ERR_DESC   NVARCHAR(4000)
		
		    SET     @COMP_CODE  = #{COMP_CODE}
		    SET     @ASST       = #{ASST}
		    SET     @ACCNT      = #{ACCNT}
		    SET     @ACQ_DATE   = #{ACQ_DATE}
		    SET     @WORK_FLAG  = #{SAVE_FLAG}
		
		    SET     @ERR_DESC   = ''
		
		    --1. 자산코드 존재여부 확인
		    DECLARE @ExistYN    NUMERIC(01)
		    SET     @ExistYN    = 0
		
		    SELECT  TOP 1
		            @ExistYN    = 1
		    FROM    ASS300T AS A WITH (NOLOCK)
		    WHERE   A.COMP_CODE = @COMP_cODE
		    AND     A.ASST      = @ASST
		
		    IF ( @WORK_FLAG = 'N' )
		        BEGIN
		            IF ( @ExistYN  != 0 )
		            BEGIN
		                --중복되는 자료가 입력 되었습니다.
		                SET @ERR_DESC = '2627;'
		                GOTO ERROR_HANDLER
		            END
		        END
		    ELSE
		        BEGIN
		            IF ( @ExistYN  = 0 )
		            BEGIN
		                --참조된 데이터가 삭제되었습니다.       확인 후 작업하십시요.
		                SET @ERR_DESC = '55306;'
		                GOTO ERROR_HANDLER
		            END
		        END
		
		    --3. 자산번호 채번
		    IF ( @WORK_FLAG = 'N' )
		    BEGIN
		        DECLARE @AutoNoYN   NVARCHAR(01)
		              , @AutoNo     NVARCHAR(15)
		
		        SET     @AutoNoYN   = 'N'
		        SET     @AutoNo     = ''
		
		        SELECT  @AutoNoYN   = ISNULL(REF_CODE1, 'N')
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE   = @COMP_CODE
		        AND     MAIN_CODE   = 'A151'
		        AND     SUB_CODE    = '1'
		
		        IF ( @AutoNoYN = 'Y' )
		        BEGIN
		            DECLARE @Prefix     NVARCHAR(05)
		                  , @SeqNum     NUMERIC(01)
		
		            --3.1. 채번규칙 가져오기
		            SELECT  @Prefix     = ISNULL(PREFIX , '')
		                 ,  @SeqNum     = ISNULL(SEQ_NUM, 5 )
		            FROM    ASS100T WITH (NOLOCK)
		            WHERE   COMP_CODE   = @COMP_CODE
		            AND     ACCNT       = @ACCNT
		
		            SET     @Prefix     = ISNULL(@Prefix, '')
		            SET     @SeqNum     = ISNULL(@SeqNum, 5 )
		
		            IF ( @Prefix = '' )
		            BEGIN
		                --자산코드를 자동채번하기 위한 채번구분자 정보가 없습니다. 회계-Configuration 정보-기본정보등록-고정자산기본정보등록 메뉴에서 자산이 속한 계정의 채번구분자를 등록하십시오.
		                SET @ERR_DESC = '55342;A0004:' + @ACCNT
		                GOTO ERROR_HANDLER
		            END
		
		            IF ( @SeqNum = 0 )
		            BEGIN
		                --자산코드를 자동채번하기 위한 채번자리수 정보가 없습니다. 회계-Configuration 정보-기본정보등록-고정자산기본정보등록 메뉴에서 자산이 속한 계정의 채번자리수를 등록하십시오.
		                SET @ERR_DESC = '55394;A0004:' + @ACCNT
		                GOTO ERROR_HANDLER
		            END
		
		            --3.2. 채번규칙을 따르는 최종자산코드 가져오기
		            DECLARE @MaxAsst    NVARCHAR(15)
		                  , @MaxSeq     NUMERIC(11)
		
		            SELECT  @MaxAsst    = MAX(ISNULL(A.ASST, ''))
		            FROM    ASS300T AS A WITH (NOLOCK)
		            WHERE   A.COMP_CODE = @COMP_CODE
		            AND     A.ASST      LIKE @Prefix + LEFT(@ACQ_DATE, 4) + '%'
		
		            SET     @MaxAsst    = ISNULL(@MaxAsst, '')
		
		            IF ( @MaxAsst = '' )
		                SET @AutoNo = @Prefix + LEFT(@ACQ_DATE, 4) + RIGHT('0000000000' + '1', @SeqNum)
		            ELSE
		                BEGIN
		                    SET @MaxSeq = CONVERT(NUMERIC(15), RIGHT(@MaxAsst, LEN(@MaxAsst) - LEN(@Prefix) - 4))
		                    SET @AutoNo = @Prefix + LEFT(@ACQ_DATE, 4) + RIGHT('0000000000' + CONVERT(NVARCHAR, @MaxSeq + 1), @SeqNum)
		                END
		        END
		
		        SET @ASST = (CASE WHEN @AutoNo = '' THEN @ASST
		                          ELSE @AutoNo
		                     END)
		    END
		
		ERROR_HANDLER:
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    IF CHARINDEX(';', @ERR_DESC) &gt; 0
		        SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)               AS ERROR_CODE
		             ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC))  AS ERROR_DESC
		             ,  ''                                                                   AS ASST
		    ELSE
		        SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC, @ASST   AS ASST
		    END
	</select>
	
	<select id="ass300ukrServiceImpl.autoNumbering" parameterType="Map" resultType="rMap">
		--ass300ukrv.Cass300ukr[fnAss300Save] Query03
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @COMP_CODE  NVARCHAR(08)
		          , @ASST       NVARCHAR(15)
		          , @ACCNT      NVARCHAR(16)
		          , @ACQ_DATE   NVARCHAR(08)
		          , @WORK_FLAG  NVARCHAR(01)
		
		          , @ERR_DESC   NVARCHAR(4000)
		
		    SET     @COMP_CODE  = #{COMP_CODE}
		    SET     @ASST       = N''
		    SET     @ACCNT      = #{ACCNT}
		    SET     @ACQ_DATE   = #{ACQ_DATE}
		    SET     @WORK_FLAG  = N'N'
		
		    SET     @ERR_DESC   = ''
		
		    --1. 자산코드 존재여부 확인
		    DECLARE @ExistYN    NUMERIC(01)
		    SET     @ExistYN    = 0
		
		    SELECT  TOP 1
		            @ExistYN    = 1
		    FROM    ASS300T AS A WITH (NOLOCK)
		    WHERE   A.COMP_CODE = @COMP_cODE
		    AND     A.ASST      = @ASST
		
		    IF ( @WORK_FLAG = 'N' )
		        BEGIN
		            IF ( @ExistYN  != 0 )
		            BEGIN
		                --중복되는 자료가 입력 되었습니다.
		                SET @ERR_DESC = '2627;'
		                GOTO ERROR_HANDLER
		            END
		        END
		    ELSE
		        BEGIN
		            IF ( @ExistYN  = 0 )
		            BEGIN
		                --참조된 데이터가 삭제되었습니다.       확인 후 작업하십시요.
		                SET @ERR_DESC = '55306;'
		                GOTO ERROR_HANDLER
		            END
		        END
		
		    --3. 자산번호 채번
		    IF ( @WORK_FLAG = 'N' )
		    BEGIN
		        DECLARE @AutoNoYN   NVARCHAR(01)
		              , @AutoNo     NVARCHAR(15)
		
		        SET     @AutoNoYN   = 'N'
		        SET     @AutoNo     = ''
		
		        SELECT  @AutoNoYN   = ISNULL(REF_CODE1, 'N')
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE   = @COMP_CODE
		        AND     MAIN_CODE   = 'A151'
		        AND     SUB_CODE    = '1'
		
		        IF ( @AutoNoYN = 'Y' )
		        BEGIN
		            DECLARE @Prefix     NVARCHAR(05)
		                  , @SeqNum     NUMERIC(01)
		
		            --3.1. 채번규칙 가져오기
		            SELECT  @Prefix     = ISNULL(PREFIX , '')
		                 ,  @SeqNum     = ISNULL(SEQ_NUM, 5 )
		            FROM    ASS100T WITH (NOLOCK)
		            WHERE   COMP_CODE   = @COMP_CODE
		            AND     ACCNT       = @ACCNT
		
		            SET     @Prefix     = ISNULL(@Prefix, '')
		            SET     @SeqNum     = ISNULL(@SeqNum, 5 )
		
		            IF ( @Prefix = '' )
		            BEGIN
		                --자산코드를 자동채번하기 위한 채번구분자 정보가 없습니다. 회계-Configuration 정보-기본정보등록-고정자산기본정보등록 메뉴에서 자산이 속한 계정의 채번구분자를 등록하십시오.
		                SET @ERR_DESC = '55342;A0004:' + @ACCNT
		                GOTO ERROR_HANDLER
		            END
		
		            IF ( @SeqNum = 0 )
		            BEGIN
		                --자산코드를 자동채번하기 위한 채번자리수 정보가 없습니다. 회계-Configuration 정보-기본정보등록-고정자산기본정보등록 메뉴에서 자산이 속한 계정의 채번자리수를 등록하십시오.
		                SET @ERR_DESC = '55394;A0004:' + @ACCNT
		                GOTO ERROR_HANDLER
		            END
		
		            --3.2. 채번규칙을 따르는 최종자산코드 가져오기
		            DECLARE @MaxAsst    NVARCHAR(15)
		                  , @MaxSeq     NUMERIC(11)
		
		            SELECT  @MaxAsst    = MAX(ISNULL(A.ASST, ''))
		            FROM    ASS300T AS A WITH (NOLOCK)
		            WHERE   A.COMP_CODE = @COMP_CODE
		            AND     A.ASST      LIKE @Prefix + LEFT(@ACQ_DATE, 4) + '%'
		
		            SET     @MaxAsst    = ISNULL(@MaxAsst, '')
		
		            IF ( @MaxAsst = '' )
		                SET @AutoNo = @Prefix + LEFT(@ACQ_DATE, 4) + RIGHT('0000000000' + '1', @SeqNum)
		            ELSE
		                BEGIN
		                    SET @MaxSeq = CONVERT(NUMERIC(15), RIGHT(@MaxAsst, LEN(@MaxAsst) - LEN(@Prefix) - 4))
		                    SET @AutoNo = @Prefix + LEFT(@ACQ_DATE, 4) + RIGHT('0000000000' + CONVERT(NVARCHAR, @MaxSeq + 1), @SeqNum)
		                END
		        END
		
		        SET @ASST = (CASE WHEN @AutoNo = '' THEN @ASST
		                          ELSE @AutoNo
		                     END)
		    END
		
		ERROR_HANDLER:
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    IF CHARINDEX(';', @ERR_DESC) &gt; 0
		        SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)               AS ERROR_CODE
		             ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC))  AS ERROR_DESC
		             ,  ''                                                                   AS ASST
		    ELSE
		        SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC, @ASST   AS ASST
		    END
	</select>
	
</mapper>