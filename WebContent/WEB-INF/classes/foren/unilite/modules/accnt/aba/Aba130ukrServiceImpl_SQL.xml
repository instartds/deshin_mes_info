<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aba130ukrService">
	
	<select id="aba130ukrService.selectMasterList1" parameterType="Map" resultType="rMap">
	/* aba130ukr.Caba130ukr[fnaba131q] Query1	*/
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		
		SELECT COMP_CODE							-- 법인
			 , GUBUN								-- 집계항목설정차수(A093)
			 , DIVI									-- 구분(A054)
			 , SEQ									-- 순번
			 , ANNOT								-- 주석번호
			 , ACCNT_CD								-- 출력계정코드
			 , ACCNT_NAME							-- 출력계정명
			 , ISNULL(OPT_DIVI,'')		OPT_DIVI	-- 집계구분(A052)
			 , ISNULL(DIS_DIVI,'')		DIS_DIVI	-- 출력구분(A050)
			 , ISNULL(KIND_DIVI,'')		KIND_DIVI	-- 집계항목
			 , ISNULL(KIND_DIVI,'')		KIND_DIVI2
			 , ISNULL(ACCNT_NAME2,'')	ACCNT_NAME2	-- 출력계정명2
			 , ISNULL(ACCNT_NAME3,'')	ACCNT_NAME3	-- 출력계정명3
			 , ISNULL(RIGHT_LEFT,'')	RIGHT_LEFT	-- 좌우구분(A051)
			 , ISNULL(DISPLAY_YN, 'N')	DISPLAY_YN	-- 인쇄여부

			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		  FROM ABA120T WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND GUBUN		= #{GUBUN}
		   AND DIVI			= #{ITEM_SUM}
		 ORDER BY SEQ, ACCNT_CD
	
	</select>

	<select id="aba130ukrService.selectDetailList" parameterType="Map" resultType="rMap">
	/* aba130ukr.Caba130ukr[fnaba131q] Query2	*/	
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT A.GUBUN
		     , A.DIVI
		     , A.ACCNT_CD
		     , ISNULL(A.CAL_TYPE,'') CAL_TYPE
		     , A.ACCNT
		     , CASE WHEN A.CAL_TYPE = '2' THEN ''
                    ELSE CASE WHEN A.DIVI = '48' THEN C.AC_NAME
                              ELSE B.ACCNT_NAME
                         END
               END                   AS ACCNT_NAME
		     , ISNULL(A.DR_CR,'')    AS DR_CR
		     , ISNULL(A.CAL_DIVI,'') AS CAL_DIVI
		     , ISNULL(A.REFER,'')    AS REFER
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		     , A.COMP_CODE
		  FROM           ABA130T A WITH (NOLOCK)
		       LEFT JOIN ABA400T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                        AND B.ACCNT     = A.ACCNT
               LEFT JOIN ABA210T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                AND C.AC_CD     = 'E3'
                                                AND C.AC_DATA   = A.ACCNT
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.GUBUN     = #{GUBUN}
		   AND A.DIVI      = #{ITEM_SUM}
		   AND A.ACCNT_CD  = #{ACCNT_CD}
		 ORDER BY A.ACCNT
 	</select>
	
	<insert id="aba130ukrService.insertMaster" parameterType="Map">
		--aba130ukr.Caba130ukr[fnInsertABA131T] Query9
		INSERT INTO ABA120T
		     (
		       GUBUN
		     , DIVI
		     , SEQ
		     , ACCNT_CD
		     , ACCNT_NAME
		     <if test="@foren.Ognl@isNotEmpty(OPT_DIVI)">
		     , OPT_DIVI
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DIS_DIVI)">
		     , DIS_DIVI
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(KIND_DIVI)">
		     , KIND_DIVI
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME2)">
		     , ACCNT_NAME2
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME3)">
     		 , ACCNT_NAME3
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DISPLAY_YN)">
		     , DISPLAY_YN
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(RIGHT_LEFT)">
		     , RIGHT_LEFT
		     </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{GUBUN}
		     , #{DIVI}
		     , #{SEQ}
		     , #{ACCNT_CD}
		     , #{ACCNT_NAME}  
		     <if test="@foren.Ognl@isNotEmpty(OPT_DIVI)">  
		     , #{OPT_DIVI}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DIS_DIVI)">
		     , #{DIS_DIVI}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(KIND_DIVI)">
		     , #{KIND_DIVI}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME2)">
		     , #{ACCNT_NAME2}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME3)">
     		 , #{ACCNT_NAME3}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DISPLAY_YN)">
		     , #{DISPLAY_YN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(RIGHT_LEFT)">
		     , #{RIGHT_LEFT}
		     </if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>

	<update id="aba130ukrService.deleteMaster" parameterType="Map">
		--aba130ukr.Caba130ukr[fnInsertABA131T] Query7
		 DELETE FROM ABA120T 
		 WHERE GUBUN          = #{GUBUN}
		   AND DIVI           = #{DIVI}
		   AND COMP_CODE      = #{COMP_CODE}
	</update>
	
	
	
	<insert id="aba130ukrService.insertDetail" parameterType="Map">
		--aba130ukr.Caba130ukr[fnInsertABA131T] Query11
		INSERT INTO ABA130T
		     ( GUBUN
		     , DIVI
		     , ACCNT_CD
		     , CAL_TYPE
		     , ACCNT
		     <if test="@foren.Ognl@isNotEmpty(DR_CR)">
		     , DR_CR
		     </if>
		     , CAL_DIVI
		     <if test="@foren.Ognl@isNotEmpty(REFER)">
		     , REFER
		     </if>
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{GUBUN}         
		     , #{DIVI}          
		     , #{ACCNT_CD}      
		     , #{CAL_TYPE}      
		     , #{ACCNT}  
		     <if test="@foren.Ognl@isNotEmpty(DR_CR)">       
		     , #{DR_CR}         
		     </if>
		     , #{CAL_DIVI}
		     <if test="@foren.Ognl@isNotEmpty(REFER)">     
		     , #{REFER}  
		     </if>		            
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}     
		     )
	</insert>
	
	<update id="aba130ukrService.updateDetail" parameterType="Map">		
		--aba130ukr.Caba130ukr[fnInsertABA131T] Query11
		UPDATE ABA130T
		   SET CAL_TYPE       = #{CAL_TYPE}
		     , DR_CR          = #{DR_CR}
		     , CAL_DIVI       = #{CAL_DIVI}
		     <if test="@foren.Ognl@isExists(_parameter, 'REFER')"> 
		     , REFER          = #{REFER}
		     </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE GUBUN          = #{GUBUN}
		   AND DIVI           = #{DIVI}
		   AND ACCNT_CD       = #{ACCNT_CD}
		   AND ACCNT          = #{ACCNT}
		   AND COMP_CODE      = #{COMP_CODE}
		  
	</update>
	
	<update id="aba130ukrService.deleteDetail" parameterType="Map">
		 --aba130ukr.Caba130ukr[fnInsertABA131T] Query10
		 DELETE FROM ABA130T 
		 WHERE GUBUN          = #{GUBUN}
		   AND DIVI           = #{DIVI}
		   AND ACCNT_CD       = #{ACCNT_CD}
		   AND ACCNT          = #{ACCNT}
		   AND COMP_CODE      = #{COMP_CODE}
		  
	</update>
	<select id="aba130ukrService.duplCheck1" parameterType="Map" resultType="rMap">		
		SELECT COUNT(1) AS CNT
		  FROM ABA120T WITH (NOLOCK)
		 WHERE GUBUN = #{GUBUN1}
		   AND COMP_CODE = #{S_COMP_CODE}
	</select>
	<select id="aba130ukrService.duplCheck2" parameterType="Map" resultType="rMap">
		--aba130ukr.Caba130ukr[fnaba130pnq] Query43
		SELECT COUNT(1) AS CNT
		  FROM ABA120T WITH (NOLOCK)
		 WHERE GUBUN = #{GUBUN2}
		   AND COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<insert id="aba130ukrService.insertFormCopy1" parameterType="Map">
		--aba130ukr.Caba130ukr[fnaba130pnq] Query38
		INSERT INTO ABA120T(
		       COMP_CODE
		     , GUBUN
		     , ADD_ACCNT
		     , DIVI
		     , SEQ
		     , ACCNT_CD
		     , ACCNT_NAME
		     , ACCNT_NAME2
		     , ACCNT_NAME3
		     , START_ACCNT
		     , END_ACCNT
		     , OPT_DIVI
		     , RIGHT_LEFT
		     , DIS_DIVI
		     , KIND_DIVI
		     , DISPLAY_YN
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME)
		SELECT COMP_CODE 
		     , #{GUBUN2} 
		     , ADD_ACCNT
		     , DIVI
		     , SEQ
		     , ACCNT_CD
		     , ACCNT_NAME
		     , ACCNT_NAME2
		     , ACCNT_NAME3
		     , START_ACCNT
		     , END_ACCNT
		     , OPT_DIVI
		     , RIGHT_LEFT
		     , DIS_DIVI
		     , KIND_DIVI
		     , DISPLAY_YN
		     , UPDATE_DB_USER
		     , GETDATE()
		  FROM ABA120T WITH (NOLOCK)
		 WHERE GUBUN     = #{GUBUN1}
		   AND COMP_CODE = #{S_COMP_CODE}
	</insert>
	
	<insert id="aba130ukrService.insertFormCopy2" parameterType="Map">
		--aba130ukr.Caba130ukr[fnaba130pnq] Query39
		INSERT INTO ABA130T ( 
		       COMP_CODE
		     , GUBUN
		     , DIVI
		     , ACCNT_CD
		     , ACCNT
		     , CAL_TYPE
		     , DR_CR
		     , CAL_DIVI
		     , REFER
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME)
		SELECT COMP_CODE
		     , #{GUBUN2}
		     , DIVI
		     , ACCNT_CD
		     , ACCNT
		     , CAL_TYPE
		     , DR_CR
		     , CAL_DIVI
		     , REFER
		     , UPDATE_DB_USER
		     , GETDATE()
		  FROM ABA130T WITH (NOLOCK)
		 WHERE GUBUN     = #{GUBUN1}
		   AND COMP_CODE = #{S_COMP_CODE}
	</insert>
	
	<insert id="aba130ukrService.insertFormCopy3" parameterType="Map">
		--aba130ukr.Caba130ukr[fnaba130pnq] Query40
		INSERT INTO ABA131T ( 
		       COMP_CODE
		     ,  GUBUN
		     , DIVI
		     , ACCNT_CD
		     , ACCNT
		     , DR_CR
		     , CAL_DIVI
		     , DISPLAY_YN
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME)
		SELECT COMP_CODE
		     , #{GUBUN2}
		     , DIVI
		     , ACCNT_CD
		     , ACCNT
		     , DR_CR
		     , CAL_DIVI
		     , DISPLAY_YN
		     , UPDATE_DB_USER
		     , GETDATE()
		  FROM ABA131T WITH (NOLOCK)
		 WHERE GUBUN     = #{GUBUN1}
		   AND COMP_CODE = #{S_COMP_CODE}
	</insert>
	
	<select id="aba130ukrService.USP_ACCNT_ABA130UKR" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE NVARCHAR(10), @GUBUN NVARCHAR(10), @LANG_TYPE NVARCHAR(02), @USER_ID NVARCHAR(100), @ERROR_DESC NVARCHAR(2000)
        SET @COMP_CODE= #{S_COMP_CODE}
        SET @GUBUN= #{GUBUN}
        SET @LANG_TYPE = #{S_LANG_CODE}
        SET @USER_ID = #{S_USER_ID}
        EXEC unilite.USP_ACCNT_ABA130UKR @COMP_CODE, @GUBUN, @LANG_TYPE, @USER_ID, @ERROR_DESC OUTPUT

        SELECT ISNULL(@ERROR_DESC, '')	AS errorDesc

	</select>
</mapper>