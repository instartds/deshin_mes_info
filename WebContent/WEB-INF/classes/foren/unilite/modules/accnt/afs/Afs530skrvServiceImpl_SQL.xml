<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afs530skrServiceImpl">
	
	<select id="afs530skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		

	--afs530skr Query1
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
    SELECT A.ACCNT                                          AS ACCNT_CODE
         , D.ACCNT_NAME
         , A.BANK_CODE
         , ISNULL(C.CUSTOM_NAME,'')                         AS BANK_NAME
         , uniLITE.fnCipherDecrypt(B.BANK_ACCOUNT,'')       AS BANK_ACCOUNT
         , A.SAVE_CODE
         , B.SAVE_NAME
         , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{ST_DATE} AND A.AC_DATE &lt; #{AC_DATE_FR} 
                           THEN CASE WHEN D.SPEC_DIVI = 'P' THEN ISNULL(A.CR_AMT_I, 0) - ISNULL(A.DR_AMT_I, 0)
                                                            ELSE ISNULL(A.DR_AMT_I, 0) - ISNULL(A.CR_AMT_I, 0)
                                END
                           ELSE 0
                      END, 0))                              AS IWALL_AMT_I
         , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{AC_DATE_FR}  AND A.AC_DATE &lt;= #{AC_DATE_TO} 
                           THEN ISNULL(A.DR_AMT_I, 0)
                           ELSE 0
                      END, 0))                              AS DR_AMT_I
         , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{AC_DATE_FR}  AND A.AC_DATE &lt;= #{AC_DATE_TO} 
                           THEN ISNULL(A.CR_AMT_I, 0)
                           ELSE 0
                      END, 0))                              AS CR_AMT_I
         , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{ST_DATE} AND A.AC_DATE &lt;= #{AC_DATE_TO} 
                           THEN CASE WHEN D.SPEC_DIVI = 'P' THEN ISNULL(A.CR_AMT_I, 0) - ISNULL(A.DR_AMT_I, 0)
                                                            ELSE ISNULL(A.DR_AMT_I, 0) - ISNULL(A.CR_AMT_I, 0)
                                END
                           ELSE 0
                      END, 0))                              AS JAN_AMT_I
    FROM              AGB500T A WITH (NOLOCK)
           LEFT  JOIN AFS100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                             AND B.SAVE_CODE   = A.SAVE_CODE
           LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                             AND C.CUSTOM_TYPE = '4'
                                             AND C.CUSTOM_CODE = A.BANK_CODE
           LEFT  JOIN ABA400T D WITH(NOLOCK)  ON D.COMP_CODE   = A.COMP_CODE
                                             AND D.ACCNT       = A.ACCNT
           LEFT  JOIN BOR120T E WITH(NOLOCK)  ON E.COMP_CODE   = A.COMP_CODE
                                             AND E.DIV_CODE    = A.DIV_CODE
    WHERE  A.COMP_CODE = #{S_COMP_CODE}
    AND    A.AC_DATE  &gt;= #{ST_DATE}
    AND    A.AC_DATE  &lt;= #{AC_DATE_TO}
    
    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">                  
    AND    A.DIV_CODE IN
        <foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
            #{item}
        </foreach>                                  
    </if>
    <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
    AND    A.ACCNT   = #{ACCNT_CODE}
    </if>   
                
    <if test="@foren.Ognl@isNotEmpty(BANK_BOOK_CODE)">
    AND    A.SAVE_CODE   LIKE '%' + #{BANK_BOOK_CODE} + '%'
    </if>

    AND NOT ( LEN(A.AC_DATE) = 6 AND A.AC_DATE &lt;&gt; #{ST_DATE})
    
    GROUP BY A.ACCNT, D.ACCNT_NAME, A.BANK_CODE, C.CUSTOM_NAME, A.SAVE_CODE, B.SAVE_NAME, uniLITE.fnCipherDecrypt(B.BANK_ACCOUNT,'')
    HAVING  (    
    			(SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{ST_DATE} AND A.AC_DATE &lt; #{AC_DATE_FR} 
                           THEN CASE WHEN D.SPEC_DIVI = 'P' THEN ISNULL(A.CR_AMT_I, 0) - ISNULL(A.DR_AMT_I, 0)
                                                            ELSE ISNULL(A.DR_AMT_I, 0) - ISNULL(A.CR_AMT_I, 0)
                                END
                           ELSE 0
                      END, 0)) != 0
                  )
                OR  
		         (SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{AC_DATE_FR}  AND A.AC_DATE &lt;= #{AC_DATE_TO} 
		                           THEN ISNULL(A.DR_AMT_I, 0)
		                           ELSE 0
		                      END, 0))   != 0
                  )
		       OR
		         (SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{AC_DATE_FR}  AND A.AC_DATE &lt;= #{AC_DATE_TO} 
		                           THEN ISNULL(A.CR_AMT_I, 0)
		                           ELSE 0
		                      END, 0)) != 0
                  )
		       OR
		         (SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= #{ST_DATE} AND A.AC_DATE &lt;= #{AC_DATE_TO} 
		                           THEN CASE WHEN D.SPEC_DIVI = 'P' THEN ISNULL(A.CR_AMT_I, 0) - ISNULL(A.DR_AMT_I, 0)
		                                                            ELSE ISNULL(A.DR_AMT_I, 0) - ISNULL(A.CR_AMT_I, 0)
		                                END
		                           ELSE 0
		                      END, 0))  != 0
                  )
			)

    ORDER BY A.ACCNT, A.BANK_CODE, A.SAVE_CODE
	

	</select>
	
</mapper>