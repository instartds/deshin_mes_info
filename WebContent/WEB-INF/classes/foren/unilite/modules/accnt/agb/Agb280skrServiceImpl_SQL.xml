<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb280skrServiceImpl">
	<select id="agb280skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--agb280skr.Cagb280skr[fnAgb280QStd] Query01
		BEGIN
			SET NOCOUNT ON
		
			--  임시테이블 삭제 ---------------------------------------------------------------------------
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE id=object_id('tempdb..#AFB210T_0513'))
				DROP TABLE #AFB210T_0513
		
			DECLARE @COMP_CODE			NVARCHAR(08)
				  , @DATE_FR			NVARCHAR(08)
				  , @DATE_TO			NVARCHAR(08)
				  , @DIV_CODE			NVARCHAR(08)
				  , @GUBUN				NVARCHAR(08)
				  , @DYNAMIC_CODE_FR	NVARCHAR(30)
				  , @DYNAMIC_CODE_TO	NVARCHAR(30)
				  , @ACCNT_CODE_FR		NVARCHAR(16)
				  , @ACCNT_CODE_TO		NVARCHAR(16)
				  , @CUSTOM_CODE		NVARCHAR(08)
				  , @DEPT_CODE_FR		NVARCHAR(08)
				  , @DEPT_CODE_TO		NVARCHAR(08)
				  , @REMARK				NVARCHAR(100)
				  , @PRINT_GUBUN		NVARCHAR(01)
			
			SET @COMP_CODE		= #{S_COMP_CODE}	/* 법인코드     필수 */
			SET @DATE_FR		= #{FR_DATE}		/* 전표일 FR 필수 */
			SET @DATE_TO		= #{TO_DATE}		/* 전표일 TO 필수 */
			SET @GUBUN			= #{MANAGE_CODE}	/* 관리항목     필수 */
			SET @PRINT_GUBUN	= #{SUM}
			
			SELECT X.COMP_CODE
				 , X.AC_CODE
				 , X.PEND_CD
				 , X.PEND_NAME
				 , X.ACCNT
				 , X.ACCNT_NAME
				 , X.CUSTOM_CODE
				 , X.CUSTOM_NAME
				 , X.DR_AMT_I
				 , X.CR_AMT_I
				 , X.REMARK
				 , X.AC_DATE
				 , X.SLIP_NUM
				 , X.SLIP_SEQ
				 , X.DIV_CODE
				 , X.DIV_NAME
				 , X.DEPT_CODE
				 , X.DEPT_NAME
				 , X.MONEY_UNIT
				 , X.EXCHG_RATE_O
				 , X.DR_FOR_AMT_I
				 , X.CR_FOR_AMT_I
				 , X.INPUT_PATH
				 , X.INPUT_DIVI
			  INTO #AFB210T_0513
			  FROM ( 
					SELECT A.COMP_CODE
						 , A.PEND_CD
						 , A.PEND_NAME
						 , A.AC_CODE
						 , A.ACCNT
						 , M3.ACCNT_NAME
						 , A.CUSTOM_CODE
						 , M2.CUSTOM_NAME
						 , A.DR_AMT_I
						 , A.CR_AMT_I
						 , A.REMARK
						 , uniLITE.fnGetUserDate(A.COMP_CODE, A.AC_DATE) AS AC_DATE
						 , A.SLIP_NUM
						 , A.SLIP_SEQ
						 , A.DIV_CODE
						 , M4.DIV_NAME
						 , A.DEPT_CODE
						 , A.DEPT_NAME
						 , A.MONEY_UNIT
						 , A.EXCHG_RATE_O
						 , A.DR_FOR_AMT_I
						 , A.CR_FOR_AMT_I
						 , A.INPUT_PATH
						 , A.INPUT_DIVI
					  FROM (SELECT K.COMP_CODE
								 , CASE WHEN K.AC_CODE1= @GUBUN THEN K.AC_CODE1
										WHEN K.AC_CODE2= @GUBUN THEN K.AC_CODE2
										WHEN K.AC_CODE3= @GUBUN THEN K.AC_CODE3
										WHEN K.AC_CODE4= @GUBUN THEN K.AC_CODE4
										WHEN K.AC_CODE5= @GUBUN THEN K.AC_CODE5
										WHEN K.AC_CODE6= @GUBUN THEN K.AC_CODE6
										ELSE ''
								   END	AS AC_CODE
								 , CASE WHEN K.AC_CODE1= @GUBUN THEN K.AC_DATA1
										WHEN K.AC_CODE2= @GUBUN THEN K.AC_DATA2
										WHEN K.AC_CODE3= @GUBUN THEN K.AC_DATA3
										WHEN K.AC_CODE4= @GUBUN THEN K.AC_DATA4
										WHEN K.AC_CODE5= @GUBUN THEN K.AC_DATA5
										WHEN K.AC_CODE6= @GUBUN THEN K.AC_DATA6
										ELSE ''
								   END	AS PEND_CD
								 , CASE WHEN K.AC_CODE1= 'A4' THEN K.AC_DATA1
										WHEN K.AC_CODE2= 'A4' THEN K.AC_DATA2
										WHEN K.AC_CODE3= 'A4' THEN K.AC_DATA3
										WHEN K.AC_CODE4= 'A4' THEN K.AC_DATA4
										WHEN K.AC_CODE5= 'A4' THEN K.AC_DATA5
										WHEN K.AC_CODE6= 'A4' THEN K.AC_DATA6
										ELSE K.CUSTOM_CODE
								   END	AS CUSTOM_CODE
								 , K.ACCNT
								 , CASE WHEN K.DR_CR = '1' THEN K.AMT_I
										ELSE 0
								   END	AS DR_AMT_I
								 , CASE WHEN K.DR_CR = '2' THEN K.AMT_I
										ELSE 0
								   END	AS CR_AMT_I
								 , K.REMARK
								 , K.AC_DATE
								 , K.SLIP_NUM
								 , K.SLIP_SEQ
								 , K.DIV_CODE
								 , K.DEPT_CODE
								 , K.DEPT_NAME
								 , K.MONEY_UNIT
								 , K.EXCHG_RATE_O
								 , CASE WHEN K.DR_CR = '1' THEN K.FOR_AMT_I
										ELSE 0
								   END	AS DR_FOR_AMT_I
								 , CASE WHEN K.DR_CR = '2' THEN K.FOR_AMT_I
										ELSE 0
								   END	AS CR_FOR_AMT_I 
								 , K.INPUT_PATH
								 , K.INPUT_DIVI
								 , ISNULL(CASE	WHEN ISNULL(K.AC_CODE1, '') = @GUBUN
													 THEN M5.AC_NAME
												WHEN ISNULL(K.AC_CODE2, '') = @GUBUN
													 THEN M6.AC_NAME
												WHEN ISNULL(K.AC_CODE3, '') = @GUBUN
													 THEN M7.AC_NAME
												WHEN ISNULL(K.AC_CODE4, '') = @GUBUN
													 THEN M8.AC_NAME
												WHEN ISNULL(K.AC_CODE5, '') = @GUBUN
													 THEN M9.AC_NAME
												WHEN ISNULL(K.AC_CODE6, '') = @GUBUN
													 THEN M10.AC_NAME
										  END, '')	AS PEND_NAME
							  FROM			  AGJ210T  K	WITH(NOLOCK)
									LEFT JOIN ABA200TV M5	WITH(NOLOCK) ON M5.COMP_CODE	= K.COMP_CODE
																		AND M5.AC_CODE		= ISNULL(AC_CODE1,'')
																		AND M5.AC_DATA		= ISNULL(AC_DATA1,'')
									LEFT JOIN ABA200TV M6	WITH(NOLOCK) ON M6.COMP_CODE	= K.COMP_CODE
																		AND M6.AC_CODE		= ISNULL(AC_CODE2,'')
																		AND M6.AC_DATA		= ISNULL(AC_DATA2,'')
									LEFT JOIN ABA200TV M7	WITH(NOLOCK) ON M7.COMP_CODE	= K.COMP_CODE
																		AND M7.AC_CODE		= ISNULL(AC_CODE3,'')
																		AND M7.AC_DATA		= ISNULL(AC_DATA3,'')
									LEFT JOIN ABA200TV M8	WITH(NOLOCK) ON M8.COMP_CODE	= K.COMP_CODE
																		AND M8.AC_CODE		= ISNULL(AC_CODE4,'')
																		AND M8.AC_DATA		= ISNULL(AC_DATA4,'')
									LEFT JOIN ABA200TV M9	WITH(NOLOCK) ON M9.COMP_CODE	= K.COMP_CODE
																		AND M9.AC_CODE		= ISNULL(AC_CODE5,'')
																		AND M9.AC_DATA		= ISNULL(AC_DATA5,'')
									LEFT JOIN ABA200TV M10	WITH(NOLOCK) ON M10.COMP_CODE	= K.COMP_CODE
																		AND M10.AC_CODE		= ISNULL(AC_CODE6,'')
								  AND  M10.AC_DATA    = ISNULL(AC_DATA6,'')
							 WHERE ISNULL(K.MOD_DIVI, '') = ''
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
							   AND K.DIV_CODE IN
									<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
										#{item}
									</foreach>
		</if>
						   ) AS A
							LEFT JOIN BCM100T M2	WITH(NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
																AND M2.CUSTOM_CODE	= A.CUSTOM_CODE
							LEFT JOIN ABA400T M3	WITH(NOLOCK) ON M3.COMP_CODE	= A.COMP_CODE
																AND M3.ACCNT		= A.ACCNT
							LEFT JOIN BOR120T M4	WITH(NOLOCK) ON M4.COMP_CODE	= A.COMP_CODE
																AND M4.DIV_CODE		= A.DIV_CODE
					 WHERE A.COMP_CODE = @COMP_CODE
					   AND A.PEND_CD  != '' 
					   AND A.AC_DATE  &gt;= @DATE_FR
					   AND A.AC_DATE  &lt;= @DATE_TO
		<if test="@foren.Ognl@isNotEmpty(DYNAMIC_CODE_FR)">     
					   AND PEND_CD    	  &gt;= #{DYNAMIC_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DYNAMIC_CODE_TO)">     
					   AND PEND_CD    	  &lt;= #{DYNAMIC_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">     
					   AND A.ACCNT    	  &gt;= #{ACCNT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">     
					   AND A.ACCNT    	  &lt;= #{ACCNT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUST_CODE)">     
					   AND A.CUSTOM_CODE   LIKE  '%' + #{CUST_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">     
					   AND A.DEPT_CODE    &gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">     
					   AND A.DEPT_CODE    &lt;= #{DEPT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK_CODE)">     
					   AND A.REMARK   LIKE  '%' + #{REMARK_CODE} + '%'
		</if>
				   ) AS X
			
			SET NOCOUNT OFF
		<if test="SUM == &quot;2&quot;">
			-- 출력
			BEGIN 
				SELECT Y.COMP_CODE
					 , Y.AC_CODE
					 , Y.PEND_CD
					 , Y.PEND_NAME
					 , Y.ACCNT
					 , Y.ACCNT_NAME
					 , Y.CUSTOM_CODE
					 , Y.CUSTOM_NAME
					 , Y.DR_AMT_I
					 , Y.CR_AMT_I
					 , Y.REMARK
					 , Y.AC_DATE
					 , Y.SLIP_NUM
					 , Y.SLIP_SEQ
					 , Y.DIV_CODE
					 , Y.DIV_NAME
					 , Y.DEPT_CODE
					 , Y.DEPT_NAME
					 , Y.MONEY_UNIT
					 , Y.EXCHG_RATE_O
					 , Y.DR_FOR_AMT_I
					 , Y.CR_FOR_AMT_I
					 , Y.INPUT_PATH
					 , Y.INPUT_DIVI
					 , Y.GUBUN
				  FROM (
						SELECT COMP_CODE
							 , AC_CODE
							 , PEND_CD
							 , PEND_NAME
							 , ACCNT
							 , ACCNT_NAME
							 , CUSTOM_CODE
							 , CUSTOM_NAME
							 , DR_AMT_I
							 , CR_AMT_I
							 , REMARK
							 , AC_DATE
							 , SLIP_NUM
							 , SLIP_SEQ
							 , DIV_CODE
							 , DIV_NAME
							 , DEPT_CODE
							 , DEPT_NAME
							 , MONEY_UNIT
							 , EXCHG_RATE_O
							 , DR_FOR_AMT_I
							 , CR_FOR_AMT_I
							 , INPUT_PATH
							 , INPUT_DIVI
							 , '1'							AS GUBUN
						  FROM #AFB210T_0513	WITH (NOLOCK)
						
						UNION ALL
						
						SELECT COMP_CODE
							 , AC_CODE
							 , PEND_CD
							 , PEND_NAME
							 , CONVERT(NVARCHAR(16) , '')	AS ACCNT
							 , CONVERT(NVARCHAR(50) , '')	AS ACCNT_NAME
							 , CONVERT(NVARCHAR(08) , '')	AS CUSTOM_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS CUSTOM_NAME
							 , SUM(DR_AMT_I)				AS DR_AMT_I
							 , SUM(CR_AMT_I)				AS CR_AMT_I
							 , CONVERT(NVARCHAR(100), '')	AS REMARK
							 , CONVERT(NVARCHAR(08) , '')	AS AC_DATE
							 , CONVERT(NUMERIC(07,0), 0 )	AS SLIP_NUM
							 , CONVERT(NUMERIC(05,0), 0 )	AS SLIP_SEQ
							 , CONVERT(NVARCHAR(08) , '')	AS DIV_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS DIV_NAME
							 , CONVERT(NVARCHAR(08) , '')	AS DEPT_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS DEPT_NAME
							 , CONVERT(NVARCHAR(03) , '')	AS MONEY_UNIT
							 , CONVERT(NUMERIC(30,6), 0 )	AS EXCHG_RATE_O
							 , SUM(DR_FOR_AMT_I)			AS DR_FOR_AMT_I
							 , SUM(CR_FOR_AMT_I)			AS CR_FOR_AMT_I
							 , CONVERT(NVARCHAR(02), '')	AS INPUT_PATH
							 , CONVERT(NVARCHAR(02), '')	AS INPUT_DIVI
							 , '2'							AS GUBUN
						  FROM #AFB210T_0513	WITH (NOLOCK)
						 GROUP BY COMP_CODE, AC_CODE, PEND_CD, PEND_NAME
						
						UNION ALL
						
						SELECT COMP_CODE
							 , CONVERT(NVARCHAR(03) , 'ZZZ')	AS AC_CODE
							 , CONVERT(NVARCHAR(30) , '')		AS PEND_CD
							 , CONVERT(NVARCHAR(40) , '')		AS PEND_NAME
							 , CONVERT(NVARCHAR(16) , '')		AS ACCNT
							 , CONVERT(NVARCHAR(50) , '')		AS ACCNT_NAME
							 , CONVERT(NVARCHAR(08) , '')		AS CUSTOM_CODE
							 , CONVERT(NVARCHAR(40) , '')		AS CUSTOM_NAME
							 , SUM(DR_AMT_I)					AS DR_AMT_I
							 , SUM(CR_AMT_I)					AS CR_AMT_I
							 , CONVERT(NVARCHAR(100), '')		AS REMARK
							 , CONVERT(NVARCHAR(08) , '')		AS AC_DATE
							 --, CONVERT(NUMERIC(07,0), 0 )		AS SLIP_NUM
							 --, CONVERT(NUMERIC(05,0), 0 )		AS SLIP_SEQ
							 , NULL								AS SLIP_NUM
							 , NULL								AS SLIP_SEQ
							 , CONVERT(NVARCHAR(08) , '')		AS DIV_CODE
							 , CONVERT(NVARCHAR(40) , '')		AS DIV_NAME
							 , CONVERT(NVARCHAR(08) , '')		AS DEPT_CODE
							 , CONVERT(NVARCHAR(40) , '')		AS DEPT_NAME
							 , CONVERT(NVARCHAR(03) , '')		AS MONEY_UNIT
							 --, CONVERT(NUMERIC(30,6), 0 )		AS EXCHG_RATE_O
							 , NULL								AS EXCHG_RATE_O
							 , SUM(DR_FOR_AMT_I)				AS DR_FOR_AMT_I
							 , SUM(CR_FOR_AMT_I)				AS CR_FOR_AMT_I
							 , CONVERT(NVARCHAR(02), '')		AS INPUT_PATH
							 , CONVERT(NVARCHAR(02), '')		AS INPUT_DIVI
							 , '3'								AS GUBUN
						  FROM #AFB210T_0513	WITH (NOLOCK)
						 GROUP BY COMP_CODE
					   ) Y
				 ORDER BY Y.AC_CODE, Y.PEND_CD, Y.PEND_NAME, Y.GUBUN
			END 
		</if>
		<if test="SUM == &quot;1&quot;">
			-- 미출력
			BEGIN 
				SELECT Y.COMP_CODE
					 , Y.AC_CODE
					 , Y.PEND_CD 
					 , Y.PEND_NAME
					 , Y.ACCNT
					 , Y.ACCNT_NAME
					 , Y.CUSTOM_CODE
					 , Y.CUSTOM_NAME
					 , Y.DR_AMT_I
					 , Y.CR_AMT_I
					 , Y.REMARK
					 , Y.AC_DATE
					 , Y.SLIP_NUM
					 , Y.SLIP_SEQ
					 , Y.DIV_CODE
					 , Y.DIV_NAME
					 , Y.DEPT_CODE
					 , Y.DEPT_NAME
					 , Y.MONEY_UNIT
					 , Y.EXCHG_RATE_O
					 , Y.DR_FOR_AMT_I
					 , Y.CR_FOR_AMT_I
					 , Y.INPUT_PATH
					 , Y.INPUT_DIVI
					 , Y.GUBUN
				  FROM (
						SELECT COMP_CODE
							 , AC_CODE
							 , PEND_CD
							 , PEND_NAME
							 , ACCNT
							 , ACCNT_NAME
							 , CUSTOM_CODE
							 , CUSTOM_NAME
							 , DR_AMT_I
							 , CR_AMT_I
							 , REMARK
							 , AC_DATE
							 , SLIP_NUM
							 , SLIP_SEQ
							 , DIV_CODE
							 , DIV_NAME
							 , DEPT_CODE
							 , DEPT_NAME
							 , MONEY_UNIT
							 , EXCHG_RATE_O
							 , DR_FOR_AMT_I
							 , CR_FOR_AMT_I
							 , INPUT_PATH
							 , INPUT_DIVI
							 , '1'							AS GUBUN
						  FROM #AFB210T_0513  WITH (NOLOCK)
						
						UNION ALL
						
						SELECT COMP_CODE
							 , CONVERT(NVARCHAR(03) , '')	AS AC_CODE
							 , CONVERT(NVARCHAR(30) , '')	AS PEND_CD
							 , CONVERT(NVARCHAR(40) , '')	AS PEND_NAME
							 , CONVERT(NVARCHAR(16) , '')	AS ACCNT
							 , CONVERT(NVARCHAR(50) , '')	AS ACCNT_NAME
							 , CONVERT(NVARCHAR(08) , '')	AS CUSTOM_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS CUSTOM_NAME
							 , SUM(DR_AMT_I)				AS DR_AMT_I
							 , SUM(CR_AMT_I)				AS CR_AMT_I
							 , CONVERT(NVARCHAR(100), '')	AS REMARK
							 , CONVERT(NVARCHAR(08) , '')	AS AC_DATE
							 , CONVERT(NUMERIC(07,0), 0 )	AS SLIP_NUM
							 , CONVERT(NUMERIC(05,0), 0 )	AS SLIP_SEQ
							 , CONVERT(NVARCHAR(08) , '')	AS DIV_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS DIV_NAME
							 , CONVERT(NVARCHAR(08) , '')	AS DEPT_CODE
							 , CONVERT(NVARCHAR(40) , '')	AS DEPT_NAME
							 , CONVERT(NVARCHAR(03) , '')	AS MONEY_UNIT
							 , CONVERT(NUMERIC(30,6), 0 )	AS EXCHG_RATE_O
							 , SUM(DR_FOR_AMT_I)			AS DR_FOR_AMT_I
							 , SUM(CR_FOR_AMT_I)			AS CR_FOR_AMT_I
							 , CONVERT(NVARCHAR(02), '')	AS INPUT_PATH
							 , CONVERT(NVARCHAR(02), '')	AS INPUT_DIVI
							 , '3'							AS GUBUN
						  FROM #AFB210T_0513	WITH (NOLOCK)
						 GROUP BY COMP_CODE
					   ) Y
				 ORDER BY Y.GUBUN, Y.PEND_CD, Y.PEND_NAME
			END
		</if>
		END
	</select>
</mapper>