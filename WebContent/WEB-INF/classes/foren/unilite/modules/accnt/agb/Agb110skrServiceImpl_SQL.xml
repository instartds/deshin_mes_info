<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb110skrServiceImpl">

	<select id="agb110skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--agb110skrv.Cagb110skrv[fnAgb110QStd] QUERY01BEGIN
	
	    SET     NOCOUNT    ON
	    SET     ARITHABORT ON
	
	    ------- 1. 변수 선언
	    DECLARE @COMP_CODE      NVARCHAR(08)
	          , @FR_DATE        NVARCHAR(08)
	          , @TO_DATE        NVARCHAR(08)
	          , @ACCNT          NVARCHAR(16)
	          , @P_ACCNT        NVARCHAR(16)
	          , @P_ACCNT_NAME   NVARCHAR(50)
	
	          /*, @DIV_CODE       NVARCHAR(100)							--사업장은 멀티콤보박스 사용*/
	          , @DIV_NAME       NVARCHAR(40)
	          , @BOOK_DATA1     NVARCHAR(30)
	          , @BOOK_NAME1     NVARCHAR(40)
	          , @BOOK_DATA2     NVARCHAR(30)
	          , @BOOK_NAME2     NVARCHAR(40)
	
	          , @SHOW_MOD_DATA  NVARCHAR(01)
	          , @POSTIT_YN      NVARCHAR(01)
	          , @ST_DATE        NVARCHAR(06)
	          , @FR_AMT_I       NUMERIC(30, 6)
	          , @TO_AMT_I       NUMERIC(30, 6)
	          , @FR_FOR_AMT_I   NUMERIC(30, 6)
	          , @TO_FOR_AMT_I   NUMERIC(30, 6)
	          , @CUSTOM_CODE    NVARCHAR(08)
	          , @CUSTOM_NAME    NVARCHAR(30)
	
	          , @POSTIT         NVARCHAR(100)
	          , @CHARGE_CODE    NVARCHAR(10)
	          , @CHARGE_NAME    NVARCHAR(50)
	          , @REMARK         NVARCHAR(100)
	          , @FR_DEPT_CODE   NVARCHAR(08)
	          , @TO_DEPT_CODE   NVARCHAR(08)
	          , @MONEY_UNIT     NVARCHAR(03)
	
	    ------- 2.1 변수값 설정
	    SET     @COMP_CODE      = #{S_COMP_CODE}
	    SET     @FR_DATE        = #{AC_DATE_FR}
	    SET     @TO_DATE        = #{AC_DATE_TO}
	    SET     @ACCNT          = #{ACCNT_CODE}
	    SET     @P_ACCNT        = #{P_ACCNT_CD}
	    SET     @P_ACCNT_NAME   = #{P_ACCNT_NM}
	    /*SET     @DIV_CODE       = N'01'						--사업장은 멀티콤보박스 사용
	    SET     @DIV_NAME       = N''*/
	    SET     @BOOK_DATA1     = #{BOOK_CODE1}
	    SET     @BOOK_NAME1     = #{BOOK_NAME1}
	    SET     @BOOK_DATA2     = #{BOOK_CODE2}
	    SET     @BOOK_NAME2     = #{BOOK_NAME2}
	    SET     @SHOW_MOD_DATA  = #{CHECK_DELETE}
	    SET     @POSTIT_YN      = #{CHECK_POST_IT}
	    SET     @ST_DATE        = #{START_DATE}
	    SET     @FR_AMT_I       = NULLIF(#{AMT_FR}, '')
	    SET     @TO_AMT_I       = NULLIF(#{AMT_TO}, '')
	    SET     @FR_FOR_AMT_I   = NULLIF(#{FOR_AMT_FR}, '')
	    SET     @TO_FOR_AMT_I   = NULLIF(#{FOR_AMT_TO}, '')
	    SET     @CUSTOM_CODE    = #{CUSTOM_CODE}
	    SET     @CUSTOM_NAME    = #{CUSTOM_NAME}
	    SET     @POSTIT         = #{POST_IT}
	    SET     @CHARGE_CODE    = #{CHARGE_CODE}
	    SET     @CHARGE_NAME    = #{CHARGE_NAME}
	    SET     @REMARK         = #{REMARK}
	    SET     @FR_DEPT_CODE   = #{DEPT_CODE_FR}
	    SET     @TO_DEPT_CODE   = #{DEPT_CODE_TO}
	    SET     @MONEY_UNIT     = #{MONEY_UNIT}
	
	    ------- 2.2 날짜 포맷 유형 설정
	    DECLARE         @DateFormat         NVARCHAR(10)
	
	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = N'B044'
	    AND    M1.REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	
	    ------- 3. 임시테이블 선언(전표거래내역 및 소계,누계 계산용)
	    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects   WHERE id=object_id('tempdb..#AGJ210T_160427'))
	        DROP TABLE #AGJ210T_160427
	
	    CREATE TABLE #AGJ210T_160427 (  AC_DATE         NVARCHAR(10)
	                                  , SLIP_NUM        NUMERIC(07, 0)
	                                  , SLIP_SEQ        NUMERIC(05, 0)
	                                  , REMARK          NVARCHAR(100)
	                                  , CUSTOM_NAME     NVARCHAR(50)
	                                  , P_ACCNT_NAME    NVARCHAR(50)
	                                  , DR_AMT_I        NUMERIC(30, 6)
	                                  , CR_AMT_I        NUMERIC(30, 6)
	                                  , JAN_AMT_I       NUMERIC(30, 6)
	                                  , MONEY_UNIT      NVARCHAR(03)
	                                  , EXCHG_RATE      NUMERIC(30, 6)
	                                  , DR_FOR_AMT_I    NUMERIC(30, 6)
	                                  , CR_FOR_AMT_I    NUMERIC(30, 6)
	                                  , JAN_FOR_AMT_I   NUMERIC(30, 6)
	                                  , JAN_DIVI        NVARCHAR(01)
	                                  , DEPT_CODE       NVARCHAR(08)
	                                  , DEPT_NAME       NVARCHAR(30)
									  , DIV_CODE		NVARCHAR(08)
									  , DIV_NAME		NVARCHAR(40)
	                                  , AC_DATA1        NVARCHAR(30)
	                                  , AC_DATA_NAME1   NVARCHAR(40)
	                                  , AC_DATA2        NVARCHAR(30)
	                                  , AC_DATA_NAME2   NVARCHAR(40)
	                                  , AC_DATA3        NVARCHAR(30)
	                                  , AC_DATA_NAME3   NVARCHAR(40)
	                                  , AC_DATA4        NVARCHAR(30)
	                                  , AC_DATA_NAME4   NVARCHAR(40)
	                                  , AC_DATA5        NVARCHAR(30)
	                                  , AC_DATA_NAME5   NVARCHAR(40)
	                                  , AC_DATA6        NVARCHAR(30)
	                                  , AC_DATA_NAME6   NVARCHAR(40)
	                                  , GUBUN           NVARCHAR(01)
	                                  , AUTO_NUM        BIGINT
	                                  , POSTIT_YN       NVARCHAR(01)
	                                  , POSTIT          NVARCHAR(80)
	                                  , POSTIT_USER_ID  NVARCHAR(10)
	                                  , INPUT_PATH      NVARCHAR(02)
	                                  , MOD_DIVI        NVARCHAR(01)
	                                  , INPUT_DIVI      NVARCHAR(02)
									  , INPUT_USER_ID	NVARCHAR(100)
									  , INPUT_USER_NAME	NVARCHAR(100)
	                                  , CHR_SLIP_NUM    NVARCHAR(07)
	                                  , CHR_SLIP_SEQ    NVARCHAR(05)
	                                  , KEY_STRING      AS RTRIM(AC_DATE) + RTRIM(GUBUN) + RTRIM(CHR_SLIP_NUM) + RTRIM(CHR_SLIP_SEQ)
	                                  )
	   CREATE INDEX AGJ210T_160427_IDX01 ON #AGJ210T_160427(KEY_STRING, GUBUN)
	
	    ------- 4. 데이터 조회
	    ------- 4.1. 이월금액
	    IF ( ISNULL(@BOOK_DATA1,'') != '' OR ISNULL(@BOOK_DATA2,'') != '' OR ISNULL(@BOOK_NAME1, '') != '' OR ISNULL(@BOOK_NAME2, '') != '' )
	    ------- 4.1.1. 계정명세 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160427( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I,	DIV_CODE,	DIV_NAME
	                                       , MONEY_UNIT, EXCHG_RATE, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI, CHR_SLIP_NUM ,CHR_SLIP_SEQ)
	               SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
--20200330 수정
	                 ,  N'이월금액(' + ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') + ')' AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI= '1'
	                        THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                        ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
					 ,	''			AS DIV_CODE
					 ,	''			AS DIV_NAME
--20200330 수정
	                 ,  ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') AS MONEY_UNIT
--	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
--20200330 수정
	                 , SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) AS DR_FOR_AMT_I
	                 , SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) AS CR_FOR_AMT_I
	                 , (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
	                                    WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
	                   END)                            AS JAN_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                    END AS DR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                    END AS CR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                                               WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                                END)
--	                    END AS JAN_FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
				AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1,'')   + '%' AND ISNULL(@BOOK_DATA1,'')   != '') OR (ISNULL(@BOOK_DATA1,'')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2,'')   + '%' AND ISNULL(@BOOK_DATA2,'')   != '') OR (ISNULL(@BOOK_DATA2,'')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            AND   ((ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW')     = @MONEY_UNIT               AND @MONEY_UNIT   != '') OR (@MONEY_UNIT   = ''))
--20200330 수정
	            GROUP BY C.JAN_DIVI, ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW')
	
	            --거래합계
	            INSERT INTO #AGJ210T_160427( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I,	DIV_CODE,	DIV_NAME
	                                       , MONEY_UNIT, EXCHG_RATE, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	             SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계(' + ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') + ')' AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
					 ,	''			AS DIV_CODE
					 ,	''			AS DIV_NAME
--20200330 수정
	                 ,  ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') AS MONEY_UNIT
--	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
--20200330 수정
	                 , SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) AS DR_FOR_AMT_I
	                 , SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) AS CR_FOR_AMT_I
	                 , (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
	                                    WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
	                   END)                            AS JAN_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                    END AS DR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                    END AS CR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE (CASE WHEN C.JAN_DIVI = '1'
--	                                    THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                                    ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                                END)
--	                    END AS JAN_FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @FR_DATE
	            AND   A.AC_DATE         &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)     = 6
	            AND   A.INPUT_PATH       = 'A1'
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
				AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1,'')   + '%' AND ISNULL(@BOOK_DATA1,'')   != '') OR (ISNULL(@BOOK_DATA1,'')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2,'')   + '%' AND ISNULL(@BOOK_DATA2,'')   != '') OR (ISNULL(@BOOK_DATA2,'')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            AND   ((ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW')     = @MONEY_UNIT               AND @MONEY_UNIT   != '') OR (@MONEY_UNIT   = ''))
--20200330 수정
	            GROUP BY C.JAN_DIVI, ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW')
	            HAVING SUM(ISNULL(A.DR_AMT_I,0.0)) != 0 OR SUM(ISNULL(A.CR_AMT_I,0.0)) !=  0
	        END
	
	    ELSE
	    ------- 4.1.2. 총계정원장 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160427( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I,	DIV_CODE,	DIV_NAME
	                                       , MONEY_UNIT, EXCHG_RATE, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
--20200330 수정
	                 ,  N'이월금액(' + ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') + ')'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0)) - SUM(ISNULL(A.CR_AMT_I,0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0)) - SUM(ISNULl(A.DR_AMT_I,0))
	                    END                         AS JAN_AMT_I
					 ,	''			AS DIV_CODE
					 ,	''			AS DIV_NAME
--20200330 수정
	                 ,  ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') AS MONEY_UNIT
--	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0                           AS EXCHG_RATE
--20200330 수정
	                 , SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) AS DR_FOR_AMT_I
	                 , SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) AS CR_FOR_AMT_I
	                 , (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
	                                    WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
	                    END)                            AS JAN_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                    END                         AS DR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                    END                         AS CR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                                               WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                                END)
--	                    END                         AS JAN_FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB100TV AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
				AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            AND   ((ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW')     = @MONEY_UNIT               AND @MONEY_UNIT   != '') OR (@MONEY_UNIT   = ''))
--20200330 수정
	            GROUP BY C.JAN_DIVI, ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW')
	
	            --거래합계
	            INSERT INTO #AGJ210T_160427( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I       , JAN_AMT_I,	DIV_CODE,	DIV_NAME
	                                       , MONEY_UNIT, EXCHG_RATE, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I  , JAN_DIVI )
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계(' + ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') + ')' AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1' 
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
					 ,	''			AS DIV_CODE
					 ,	''			AS DIV_NAME
--20200330 수정
	                 ,  ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW') AS MONEY_UNIT
--	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
--20200330 수정
	                 , SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) AS DR_FOR_AMT_I
	                 , SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) AS CR_FOR_AMT_I
	                 , (CASE C.JAN_DIVI WHEN '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
	                                    WHEN '2' THEN SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
	                    END)                            AS JAN_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                    END AS DR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                    END AS CR_FOR_AMT_I
--	                 ,  CASE WHEN @MONEY_UNIT = ''
--	                         THEN 0
--	                         ELSE (CASE WHEN C.JAN_DIVI = '1'
--	                                    THEN SUM(ISNULL(A.DR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.CR_FOR_AMT_I,0.0))
--	                                    ELSE SUM(ISNULL(A.CR_FOR_AMT_I,0.0)) - SUM(ISNULL(A.DR_FOR_AMT_I,0.0))
--	                                END)
--	                    END AS JAN_FOR_AMT_I
	                 ,  C.JAN_DIVI
	            FROM           AGB100T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE 
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE       = @COMP_CODE
	            AND   A.AC_DATE        &gt;= @FR_DATE
	            AND   A.AC_DATE        &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)    = 6
	            AND   A.INPUT_PATH      = 'A1'
	            AND   ((A.ACCNT         = @ACCNT                     AND @ACCNT        != '') OR
	                   (C.ACCNT_CD      = @ACCNT                     AND @ACCNT        != '') OR
	                   (@ACCNT          = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
            <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
				AND	A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            AND   ((ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW')     = @MONEY_UNIT               AND @MONEY_UNIT   != '') OR (@MONEY_UNIT   = ''))
--20200330 수정
	            GROUP BY C.JAN_DIVI, ISNULL(NULLIF(MONEY_UNIT, ''), 'KRW')
	            HAVING SUM(ISNULL(A.DR_AMT_I, 0)) != 0 OR SUM(ISNULL(A.CR_AMT_I, 0)) !=  0
	        END
	
	    ------- 4.2. 전표거래내역
	    INSERT INTO #AGJ210T_160427
	    SELECT  REPLACE(
	            REPLACE(
	            REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AC_DATE, 1, 4))
	                               , 'MM'  , SUBSTRING(A.AC_DATE, 5, 2))
	                               , 'DD'  , SUBSTRING(A.AC_DATE, 7, 2))       AS AC_DATE
	
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK,'') AS REMARK
	         ,  CASE WHEN ISNULL(A.CUSTOM_NAME,'') = ''
	                 THEN C1.CUSTOM_NAME
	                 ELSE A.CUSTOM_NAME
	            END AS CUSTOM_NAME
	         ,  ISNULL(C3.ACCNT_NAME,'') AS P_ACCNT_NAME
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN A.AMT_I
	                 ELSE 0.0
	            END AS DR_AMT_I
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN 0.0
	                 ELSE A.AMT_I
	            END AS CR_AMT_I
	         ,  CASE WHEN C2.JAN_DIVI = A.DR_CR
	                 THEN A.AMT_I
	                 ELSE A.AMT_I * (-1)
	            END AS JAN_AMT_I
	         ,  ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW') AS MONEY_UNIT
	         ,  A.EXCHG_RATE_O AS EXCHG_RATE
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN A.FOR_AMT_I
	                 ELSE 0.0
	            END AS DR_FOR_AMT_I
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN 0.0
	                 ELSE A.FOR_AMT_I
	            END CR_FOR_AMT_I
	         ,  CASE WHEN C2.JAN_DIVI = A.DR_CR
	                 THEN A.FOR_AMT_I
	                 ELSE A.FOR_AMT_I * (-1)
	            END AS JAN_FOR_AMT_I
	         ,  C2.JAN_DIVI
	         ,  A.DEPT_CODE
	         ,  F7.TREE_NAME AS DEPT_NAME
			 ,	B.DIV_CODE
			 ,	B.DIV_NAME
	         ,  CASE WHEN ISNULL(A.AC_DATA1,'') = ''
	                 THEN NULL
	                 ELSE (CASE F1.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA1)
	                            ELSE A.AC_DATA1
	                        END)
	            END AS AC_DATA1
	         ,  A.AC_DATA_NAME1
	         ,  CASE WHEN ISNULL(A.AC_DATA2,'') = '' THEN NULL
	                 ELSE (CASE F2.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA2)
	                            ELSE A.AC_DATA2
	                        END)
	            END AS AC_DATA2
	         ,  A.AC_DATA_NAME2
	         ,  CASE WHEN ISNULL(A.AC_DATA3,'') = '' THEN NULL
	                 ELSE (CASE F3.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA3)
	                            ELSE A.AC_DATA3
	                        END)
	            END AS AC_DATA3
	         ,  A.AC_DATA_NAME3
	         ,  CASE WHEN ISNULL(A.AC_DATA4,'') = '' THEN NULL
	                 ELSE (CASE F4.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA4)
	                            ELSE A.AC_DATA4
	                        END)
	            END AS AC_DATA4
	         ,  A.AC_DATA_NAME4
	         ,  CASE WHEN ISNULL(A.AC_DATA5,'') = '' THEN NULL
	                 ELSE (CASE F5.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA5)
	                            ELSE A.AC_DATA5
	                        END)
	            END AS AC_DATA5
	         ,  A.AC_DATA_NAME5
	         ,  CASE WHEN ISNULL(A.AC_DATA6,'') = '' THEN NULL
	                 ELSE (CASE F6.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA6)
	                            ELSE A.AC_DATA6
	                        END)
	            END AS AC_DATA6
	         ,  A.AC_DATA_NAME6
	         ,  N'1'                            AS GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     , 'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '' )   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '' )   AS POSTIT_USER_ID
	         ,  A.INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '' )   AS MOD_DIVI
	         ,  A.INPUT_DIVI
			 ,	A.INPUT_USER_ID
			 ,  D1.USER_NAME					AS INPUT_USER_NAME
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), A.SLIP_NUM))) + (CONVERT(NVARCHAR(7), A.SLIP_NUM)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), A.SLIP_SEQ))) + (CONVERT(NVARCHAR(5), A.SLIP_SEQ)) AS CHR_SLIP_SEQ
	    FROM           AGJ210T  AS A  WITH (NOLOCK)
	        INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
	                                                AND B.DIV_CODE     = A.DIV_CODE
	        LEFT  JOIN BCM100T  AS C1 WITH (NOLOCK) ON  C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN ABA400T  AS C2 WITH (NOLOCK) ON  C2.COMP_CODE   = A.COMP_CODE
	                                                AND C2.ACCNT       = A.ACCNT
	        LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE   = A.COMP_CODE
	                                                AND C3.ACCNT       = A.P_ACCNT
	        LEFT  JOIN ABA200T  AS F1 WITH (NOLOCK) ON  F1.COMP_CODE   = A.COMP_CODE
	                                                AND F1.AC_CD       = A.AC_CODE1
	        LEFT  JOIN ABA200T  AS F2 WITH (NOLOCK) ON  F2.COMP_CODE   = A.COMP_CODE
	                                                AND F2.AC_CD       = A.AC_CODE2
	        LEFT  JOIN ABA200T  AS F3 WITH (NOLOCK) ON  F3.COMP_CODE   = A.COMP_CODE
	                                                AND F3.AC_CD       = A.AC_CODE3
	        LEFT  JOIN ABA200T  AS F4 WITH (NOLOCK) ON  F4.COMP_CODE   = A.COMP_CODE
	                                                AND F4.AC_CD       = A.AC_CODE4
	        LEFT  JOIN ABA200T  AS F5 WITH (NOLOCK) ON  F5.COMP_CODE   = A.COMP_CODE
	                                                AND F5.AC_CD       = A.AC_CODE5
	        LEFT  JOIN ABA200T  AS F6 WITH (NOLOCK) ON  F6.COMP_CODE   = A.COMP_CODE
	                                                AND F6.AC_CD       = A.AC_CODE6
	        LEFT  JOIN BSA210T  AS F7 WITH (NOLOCK) ON  F7.COMP_CODE   = A.COMP_CODE
	                                                AND F7.TREE_CODE   = A.DEPT_CODE
	        LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = 'A009'
	                                                AND M1.SUB_CODE    = A.CHARGE_CODE
			LEFT  JOIN BSA300T  AS D1 WITH (NOLOCK) ON  A.COMP_CODE    = D1.COMP_CODE
													AND A.INPUT_USER_ID= D1.USER_ID
	    WHERE A.COMP_CODE = @COMP_CODE
	    AND   A.AC_DATE  &gt;= @FR_DATE
	    AND   A.AC_DATE  &lt;= @TO_DATE
	    AND   ((A.ACCNT                  = @ACCNT                    AND @ACCNT        != '') OR
	           (C2.ACCNT_CD              = @ACCNT                    AND @ACCNT        != '') OR
	           (@ACCNT                   = ''))
	    AND   ((A.P_ACCNT             LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT         = ''))
	    AND   ((C3.ACCNT_NAME         LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME    = ''))
	
	<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
		AND A.DIV_CODE IN
		<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>         
	</if>	
	    AND   ((A.BOOK_DATA1             = ISNULL(@BOOK_DATA1,'')               AND ISNULL(@BOOK_DATA1,'')   != '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (A.BOOK_DATA1          LIKE '%' + ISNULL(@BOOK_DATA1,'')  + '%'  AND ISNULL(@BOOK_DATA1,'')   != '' AND ISNULL(@BOOK_NAME1, '')  = '') OR
	           (A.BOOK_DATA_NAME1     LIKE '%' + ISNULL(@BOOK_NAME1, '')  + '%'  AND ISNULL(@BOOK_DATA1,'')    = '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (ISNULL(@BOOK_DATA1,'')              = ''                        AND ISNULL(@BOOK_NAME1, '')    = ''))
	
	    AND   ((A.BOOK_DATA2             = ISNULL(@BOOK_DATA2,'')               AND ISNULL(@BOOK_DATA2,'')   != '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (A.BOOK_DATA2          LIKE '%' + ISNULL(@BOOK_DATA2,'')  + '%'  AND ISNULL(@BOOK_DATA2,'')   != '' AND ISNULL(@BOOK_NAME2, '')  = '') OR
	           (A.BOOK_DATA_NAME2     LIKE '%' + ISNULL(@BOOK_NAME2, '')  + '%'  AND ISNULL(@BOOK_DATA2,'')    = '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (ISNULL(@BOOK_DATA2,'')              = ''                        AND ISNULL(@BOOK_NAME2, '')    = ''))
	
	    AND   ((ISNULL(A.MOD_DIVI,'')    = ''                        AND @SHOW_MOD_DATA = 'N') OR (@SHOW_MOD_DATA  = 'Y'))
	    AND   ((A.POSTIT_YN              = @POSTIT_YN                AND @POSTIT_YN    != '' ) OR (@POSTIT_YN      = ''))
	
	    AND   ((ISNULL(A.AMT_I,0.0)     &gt;= @FR_AMT_I                 AND @FR_AMT_I     IS NOT NULL) OR (@FR_AMT_I     IS NULL))
	    AND   ((ISNULL(A.AMT_I,0.0)     &lt;= @TO_AMT_I                 AND @TO_AMT_I     IS NOT NULL) OR (@TO_AMT_I     IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &gt;= @FR_FOR_AMT_I             AND @FR_FOR_AMT_I IS NOT NULL) OR (@FR_FOR_AMT_I IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &lt;= @TO_FOR_AMT_I             AND @TO_FOR_AMT_I IS NOT NULL) OR (@TO_FOR_AMT_I IS NULL))
	
	    AND   ((A.CUSTOM_CODE            = @CUSTOM_CODE              AND @CUSTOM_CODE  != '' AND @CUSTOM_NAME  != '') OR
	           (A.CUSTOM_CODE         LIKE       @CUSTOM_CODE + '%'  AND @CUSTOM_CODE  != '' AND @CUSTOM_NAME   = '') OR
	           (A.CUSTOM_NAME         LIKE '%' + @CUSTOM_NAME + '%'  AND @CUSTOM_CODE   = '' AND @CUSTOM_NAME  != '') OR
	           (@CUSTOM_CODE             = ''                        AND @CUSTOM_NAME   = ''))
	
	    AND   ((A.POSTIT              LIKE '%' + @POSTIT + '%'       AND @POSTIT       != '') OR (@POSTIT       = ''))
	    AND   ((A.CHARGE_CODE         LIKE '%' + @CHARGE_CODE + '%'  AND @CHARGE_CODE  != '') OR (@CHARGE_CODE  = ''))
	    AND   ((M1.CODE_NAME          LIKE '%' + @CHARGE_NAME + '%'  AND @CHARGE_NAME  != '') OR (@CHARGE_NAME  = ''))
	    AND   ((A.REMARK              LIKE '%' + ISNULL(@REMARK,'')+ '%'       AND ISNULL(@REMARK,'')       != '') OR (ISNULL(@REMARK,'')       = ''))
	    AND   ((A.DEPT_CODE             &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	    AND   ((A.DEPT_CODE             &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	    AND   ((ISNULL(NULLIF(A.MONEY_UNIT, ''), 'KRW')             = @MONEY_UNIT               AND @MONEY_UNIT   != '') OR (@MONEY_UNIT   = ''))
	
	    --------- 4.2.3 잔액 계산하여 UPDATE
	    --DECLARE         @AccrueI            NUMERIC(30,6)               -- 잔액
	
	    --SET @AccrueI   = 0
	
	    --UPDATE  A
	    --SET     @AccrueI        = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	    --                               ELSE ISNULL(@AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	    --                          END
	    --     ,  A.JAN_AMT_I     = @AccrueI
	    --FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
	    --WHERE   (A.GUBUN = '0' OR A.GUBUN = '1')
	
	    ------- 4.3. 소계(월)
--20200330 수정: GROUP BY MONEY_UNIT 추가
	    INSERT INTO #AGJ210T_160427 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, DR_FOR_AMT_I, CR_FOR_AMT_I, GUBUN, MONEY_UNIT)
	    SELECT  MAX(LEFT(ISNULL(A.AC_DATE, ''), 8)) + '32'    AS AC_DATE
	         ,  N'소     계 (' + MONEY_UNIT + ')'         AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  CASE WHEN MONEY_UNIT = 'KRW' THEN 0
	                 ELSE SUM(ISNULL(A.DR_FOR_AMT_I , 0 ))
	            END                                 AS DR_FOR_AMT_I
	         ,  CASE WHEN MONEY_UNIT = 'KRW' THEN 0
	                 ELSE SUM(ISNULL(A.CR_FOR_AMT_I , 0 ))
	            END                                 AS CR_FOR_AMT_I
	         --,  0    AS DR_FOR_AMT_I
	         --,  0    AS CR_FOR_AMT_I
	         ,  N'3'                                AS GUBUN
	         , MONEY_UNIT
	    FROM  #AGJ210T_160427 A WITH (NOLOCK)
	    WHERE A.GUBUN    = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7), MONEY_UNIT
	
	    ------- 4.4. 누계
--20200330 수정: GROUP BY MONEY_UNIT 추가
	    INSERT INTO #AGJ210T_160427 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, JAN_AMT_I, MONEY_UNIT, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI, GUBUN, CHR_SLIP_NUM, CHR_SLIP_SEQ)
	    SELECT  MAX(LEFT(ISNULL(A.AC_DATE, ''), 8)) + '33'    AS AC_DATE
	         ,  N'누     계 (' + MONEY_UNIT + ')'         AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  CASE WHEN A.JAN_DIVI = '1' THEN SUM(ISNULL(A.DR_AMT_I, 0 ) - ISNULL(A.CR_AMT_I, 0 ))
	                 ELSE SUM(ISNULL(A.CR_AMT_I, 0 ) - ISNULL(A.DR_AMT_I, 0 ))
	            END                                 AS JAN_AMT_I
	         ,  MONEY_UNIT                          AS MONEY_UNIT
	         ,  CASE WHEN MONEY_UNIT = 'KRW' THEN 0
	                 ELSE SUM(ISNULL(A.DR_FOR_AMT_I , 0 ))
	            END                                 AS DR_FOR_AMT_I
	         ,  CASE WHEN MONEY_UNIT = 'KRW' THEN 0
	                 ELSE SUM(ISNULL(A.CR_FOR_AMT_I , 0 ))
	            END                                 AS CR_FOR_AMT_I
	         ,  CASE WHEN MONEY_UNIT = 'KRW' THEN 0
	                 ELSE CASE WHEN A.JAN_DIVI = '1' THEN SUM(ISNULL(A.DR_FOR_AMT_I, 0 ) - ISNULL(A.CR_FOR_AMT_I, 0 ))
	                           ELSE SUM(ISNULL(A.CR_FOR_AMT_I, 0 ) - ISNULL(A.DR_FOR_AMT_I, 0 ))
	                      END
	            END                                 AS JAN_FOR_AMT_I
--	         ,  0    AS DR_FOR_AMT_I
--	         ,  0    AS CR_FOR_AMT_I
--	         ,  0    AS JAN_FOR_AMT_I
	         ,  A.JAN_DIVI
	         ,  N'4'                                 AS GUBUN
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 9999999))) + (CONVERT(NVARCHAR(7), 9999999)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 99999)))   + (CONVERT(NVARCHAR(5), 99999))   AS CHR_SLIP_SEQ
	    FROM  #AGJ210T_160427 A WITH (NOLOCK)
	    WHERE (A.GUBUN = '0' OR A.GUBUN = '1')
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7), A.JAN_DIVI, MONEY_UNIT
	
	 --   ------- 4.4.1 누계차변계, 대변계, 잔액 계산하여 UPDATE
	 --   DECLARE         @4_AccrueI      NUMERIC(30,6)               -- 잔액
	 --                 , @4_DrAmtI       NUMERIC(30,6)               -- 누계차변의 누적금액
	 --                 , @4_CrAmtI       NUMERIC(30,6)               -- 누계대변의 누적금액
	
	 --   SET @4_AccrueI   = 0
	 --   SET @4_DrAmtI    = 0
	 --   SET @4_CrAmtI    = 0
	
	 --   UPDATE  A
	 --   SET     @4_AccrueI      = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	 --                                  ELSE                       ISNULL(@4_AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	 --                             END
	 --        ,  A.JAN_AMT_I     = @4_AccrueI
	 --        ,  @4_DrAmtI       = ISNULL(@4_DrAmtI, 0)  + A.DR_AMT_I
	 --        ,  @4_CrAmtI       = ISNULL(@4_CrAmtI, 0)  + A.CR_AMT_I
	 --        ,  A.DR_AMT_I      = @4_DrAmtI
	 --        ,  A.CR_AMT_I      = @4_CrAmtI
	 --   FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
		--INNER JOIN (SELECT MONEY_UNIT
		--              FROM #AGJ210T_160427 WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
	 --                WHERE (GUBUN = '0' OR GUBUN = '4')
		--             GROUP BY MONEY_UNIT
		--		     ) B ON B.MONEY_UNIT = A.MONEY_UNIT
	 --   WHERE (A.GUBUN = '0' OR A.GUBUN = '4')

----20200330 추가: 누계차변계, 대변계, 잔액 계산하여 UPDATE
--	    SET @4_AccrueI   = 0
--	    SET @4_DrAmtI    = 0
--	    SET @4_CrAmtI    = 0
	
--	    UPDATE  A
--	    SET     @4_AccrueI      = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueI, 0) + A.DR_FOR_AMT_I - A.CR_FOR_AMT_I
--	                                   ELSE                       ISNULL(@4_AccrueI, 0) + A.CR_FOR_AMT_I - A.DR_FOR_AMT_I
--	                              END
--	         ,  A.JAN_FOR_AMT_I = @4_AccrueI
--	         ,  @4_DrAmtI       = ISNULL(@4_DrAmtI, 0)  + A.DR_FOR_AMT_I
--	         ,  @4_CrAmtI       = ISNULL(@4_CrAmtI, 0)  + A.CR_FOR_AMT_I
--	         ,  A.DR_FOR_AMT_I  = @4_DrAmtI
--	         ,  A.CR_FOR_AMT_I  = @4_CrAmtI
--	    FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
--		INNER JOIN (SELECT MONEY_UNIT
--		              FROM #AGJ210T_160427 WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
--	                 WHERE (GUBUN = '0' OR GUBUN = '4')
--		             GROUP BY MONEY_UNIT
--				     ) B ON B.MONEY_UNIT = A.MONEY_UNIT
--	    WHERE (A.GUBUN = '0' OR A.GUBUN = '4')

        ------- 4.3.1 잔액 계산하여 UPDATE
        DECLARE         @AccrueI            NUMERIC(30,6)               -- 잔액
                      , @AccrueForI         NUMERIC(30,6)               -- 잔액(외화)
                      , @AccntCustom        NVARCHAR(50)                -- 계정코드 + 거래처코드

					  , @cv_CUSTOM_CODE		NVARCHAR(40)
					  , @cv_MONEY_UNIT		NVARCHAR(10)
    
        ------- 4.4.1 누계차변계, 대변계, 잔액 계산하여 UPDATE
        DECLARE         @4_AccrueI            NUMERIC(30,6)               -- 잔액
                      , @4_AccrueForI         NUMERIC(30,6)               -- 잔액(외화)
                      , @4_DrAmtI             NUMERIC(30,6)               -- 누계차변의 누적금액
                      , @4_CrAmtI             NUMERIC(30,6)               -- 누계대변의 누적금액
                      , @4_DrForAmtI          NUMERIC(30,6)               -- 누계차변(외화)의 누적금액
                      , @4_CrForAmtI          NUMERIC(30,6)               -- 누계대변(외화)의 누적금액
                      , @4_AccntCustom        NVARCHAR(50)                -- 계정코드 + 거래처코드

					  , @cv_MON_CUR			NVARCHAR(06)
					  , @cv_MON_MAX			NVARCHAR(06)
    
        --SET @4_AccrueI         = 0
        --SET @4_AccrueForI      = 0
        --SET @4_DrAmtI          = 0
        --SET @4_CrAmtI          = 0
        --SET @4_DrForAmtI       = 0
        --SET @4_CrForAmtI       = 0
        --SET @4_AccntCustom     = ''
    
		DECLARE CUR_MID_TOTAL CURSOR FOR
			SELECT DISTINCT MONEY_UNIT
			  FROM #AGJ210T_160427
			 GROUP BY MONEY_UNIT

		OPEN CUR_MID_TOTAL
		FETCH NEXT FROM CUR_MID_TOTAL INTO @cv_MONEY_UNIT
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @AccrueI         = 0
			SET @AccrueForI      = 0
			SET @AccntCustom     = ''
    
			UPDATE  A
			SET     @AccrueI        = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
											ELSE ISNULL(@AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
									  END
				 ,  @AccrueForI     = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@AccrueForI, 0) + A.DR_FOR_AMT_I - A.CR_FOR_AMT_I
											ELSE ISNULL(@AccrueForI, 0) + A.CR_FOR_AMT_I - A.DR_FOR_AMT_I
									  END
				 ,  A.JAN_AMT_I     = @AccrueI
				 ,  A.JAN_FOR_AMT_I = @AccrueForI
			FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
			WHERE   (A.GUBUN = '0' OR A.GUBUN = '1')
			  AND	A.MONEY_UNIT	= @cv_MONEY_UNIT
			
			SET @4_AccrueI         = 0
			SET @4_AccrueForI      = 0
			SET @4_DrAmtI          = 0
			SET @4_CrAmtI          = 0
			SET @4_DrForAmtI       = 0
			SET @4_CrForAmtI       = 0
			SET @4_AccntCustom     = ''
    
			UPDATE  A
			SET     @4_AccrueI      = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
											ELSE                       ISNULL(@4_AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
									  END
				 ,  @4_AccrueForI   = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueForI, 0) + A.DR_FOR_AMT_I - A.CR_FOR_AMT_I
											ELSE                       ISNULL(@4_AccrueForI, 0) + A.CR_FOR_AMT_I - A.DR_FOR_AMT_I
									  END
				 ,  A.JAN_AMT_I     = @4_AccrueI
				 ,  A.JAN_FOR_AMT_I = @4_AccrueForI
    
				 ,  @4_DrAmtI       = ISNULL(@4_DrAmtI, 0)  + A.DR_AMT_I
				 ,  @4_CrAmtI       = ISNULL(@4_CrAmtI, 0)  + A.CR_AMT_I
				 ,  @4_DrForAmtI    = ISNULL(@4_DrForAmtI, 0)  + A.DR_FOR_AMT_I
				 ,  @4_CrForAmtI    = ISNULL(@4_CrForAmtI, 0)  + A.CR_FOR_AMT_I
            
				 ,  A.DR_AMT_I      = @4_DrAmtI
				 ,  A.CR_AMT_I      = @4_CrAmtI
				 ,  A.DR_FOR_AMT_I  = @4_DrForAmtI
				 ,  A.CR_FOR_AMT_I  = @4_CrForAmtI
			FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
			WHERE   A.GUBUN = '4'
			  AND	A.MONEY_UNIT	= @cv_MONEY_UNIT

			SET @cv_MON_CUR	= SUBSTRING(@FR_DATE, 1, 6)
			SET @cv_MON_MAX	= SUBSTRING(@TO_DATE, 1, 6)

			WHILE (@cv_MON_CUR &lt;= @cv_MON_MAX)
			BEGIN
				IF NOT EXISTS (	SELECT *
								  FROM #AGJ210T_160427
								 WHERE GUBUN		= '4'
								   AND MONEY_UNIT	= @cv_MONEY_UNIT
								   AND REPLACE(AC_DATE, '.', '')	= @cv_MON_CUR + '33'	)
				   AND EXISTS (	SELECT *
								  FROM #AGJ210T_160427
								 WHERE GUBUN		= '1'
								   --AND MONEY_UNIT	= @cv_MONEY_UNIT
								   AND SUBSTRING(REPLACE(AC_DATE, '.', ''), 1, 6)	= @cv_MON_CUR	)
								
				BEGIN
					IF EXISTS (	SELECT *
								  FROM #AGJ210T_160427
								 WHERE GUBUN		= '4'
								   AND MONEY_UNIT	= @cv_MONEY_UNIT
								   AND SUBSTRING(REPLACE(AC_DATE, '.', ''), 1, 6)	&lt; @cv_MON_CUR	)
					BEGIN
						INSERT INTO #AGJ210T_160427 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, JAN_AMT_I, MONEY_UNIT, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI, GUBUN, CHR_SLIP_NUM, CHR_SLIP_SEQ)
						SELECT  SUBSTRING(@cv_MON_CUR, 1, 4) + '.' + SUBSTRING(@cv_MON_CUR, 5, 2) + '.33'		AS AC_DATE
							 ,  N'누     계 (' + A.MONEY_UNIT + ')'	AS REMARK
							 ,  ISNULL(A.DR_AMT_I, 0 )				AS DR_AMT_I
							 ,  ISNULL(A.CR_AMT_I, 0 )				AS CR_AMT_I
							 ,  ISNULL(A.JAN_AMT_I, 0 )				AS JAN_AMT_I
							 ,  A.MONEY_UNIT
							 ,  ISNULL(A.DR_FOR_AMT_I, 0 )			AS DR_FOR_AMT_I
							 ,  ISNULL(A.CR_FOR_AMT_I, 0 )			AS CR_FOR_AMT_I
							 ,  ISNULL(A.JAN_FOR_AMT_I, 0 )			AS JAN_FOR_AMT_I
							 ,  A.JAN_DIVI
							 ,  N'4'                                 AS GUBUN
							 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 9999999))) + (CONVERT(NVARCHAR(7), 9999999)) AS CHR_SLIP_NUM
							 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 99999)))   + (CONVERT(NVARCHAR(5), 99999))   AS CHR_SLIP_SEQ
						FROM  #AGJ210T_160427 A WITH (NOLOCK)
						WHERE A.GUBUN		= '4'
						  AND A.MONEY_UNIT	= @cv_MONEY_UNIT
						  AND A.AC_DATE		= (	SELECT MAX(AC_DATE)
												  FROM #AGJ210T_160427
												 WHERE GUBUN		= '4'
												   AND MONEY_UNIT	= @cv_MONEY_UNIT
												   AND SUBSTRING(REPLACE(AC_DATE, '.', ''), 1, 6)	&lt; @cv_MON_CUR	)
					END
				END

				SET @cv_MON_CUR	= CONVERT(NVARCHAR(06), DATEADD(M, 1, @cv_MON_CUR + '01'), 112)
			END
    
		FETCH NEXT FROM CUR_MID_TOTAL INTO @cv_MONEY_UNIT
		END
    
		CLOSE CUR_MID_TOTAL
		DEALLOCATE CUR_MID_TOTAL

		
	    --------- 4.4.2 이월금액, 누계의 외화잔액이 존재하는 경우 환율 계산하여 UPDATE
	    --DECLARE         @ExchgRate      NUMERIC(30,6)               -- 환율
	
	    --SET @ExchgRate   = 0
	
	    --UPDATE  A
	    --SET     @ExchgRate      = ISNULL(A.JAN_AMT_I, 0) / ISNULL(A.JAN_FOR_AMT_I, 0)
	    --     ,  A.EXCHG_RATE    = @ExchgRate
	    --FROM    #AGJ210T_160427 A WITH (NOLOCK, INDEX(AGJ210T_160427_IDX01))
	    --WHERE   (A.GUBUN = '0' OR A.GUBUN = '4')
		--AND     ISNULL(A.JAN_FOR_AMT_I, 0) != 0
	
		IF (SELECT COUNT(DISTINCT MONEY_UNIT)
			  FROM #AGJ210T_160427) &gt;= 2
		BEGIN
		
			INSERT INTO #AGJ210T_160427 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, JAN_AMT_I, MONEY_UNIT, DR_FOR_AMT_I, CR_FOR_AMT_I, JAN_FOR_AMT_I, JAN_DIVI, GUBUN, CHR_SLIP_NUM, CHR_SLIP_SEQ)
			SELECT  MAX(LEFT(ISNULL(A.AC_DATE, ''), 8)) + '34'		AS AC_DATE
				 ,  N'합     계'									AS REMARK
				 ,  NULL											AS DR_AMT_I
				 ,  NULL											AS CR_AMT_I
				 ,  CASE WHEN A.JAN_DIVI = '1' THEN SUM(ISNULL(A.DR_AMT_I, 0 ) - ISNULL(A.CR_AMT_I, 0 ))
						 ELSE SUM(ISNULL(A.CR_AMT_I, 0 ) - ISNULL(A.DR_AMT_I, 0 ))
					END												AS JAN_AMT_I
				 ,  'KRW'											AS MONEY_UNIT
				 ,  NULL											AS DR_FOR_AMT_I
				 ,  NULL											AS CR_FOR_AMT_I
				 ,  NULL											AS JAN_FOR_AMT_I
				 ,  NULL											AS JAN_DIVI
				 ,  N'4'											AS GUBUN
				 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 9999999))) + (CONVERT(NVARCHAR(7), 9999999)) AS CHR_SLIP_NUM
				 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 99999)))   + (CONVERT(NVARCHAR(5), 99999))   AS CHR_SLIP_SEQ
			FROM  #AGJ210T_160427 A WITH (NOLOCK)
			WHERE (A.GUBUN = '0' OR A.GUBUN = '1')
			AND   ISNULL(A.MOD_DIVI, '') = ''
			GROUP BY A.JAN_DIVI
		END
		
	    ------- 5. 리턴 데이터
	    SELECT  CASE WHEN A.GUBUN IN ('0', '3', '4') THEN NULL ELSE A.AC_DATE END AS AC_DATE
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK        , '')   AS REMARK
	         ,  ISNULL(A.CUSTOM_NAME   , '')   AS CUSTOM_NAME
	         ,  ISNULL(A.P_ACCNT_NAME  , '')   AS P_ACCNT_NAME
	         ,  ISNULL(A.DR_AMT_I , 0 )        AS DR_AMT_I
	         ,  ISNULL(A.CR_AMT_I , 0 )        AS CR_AMT_I
	         ,  ISNULL(A.JAN_AMT_I, 0 )        AS JAN_AMT_I
	         ,  A.MONEY_UNIT
	         ,  ISNULL(A.EXCHG_RATE, 0)        AS EXCHG_RATE
	         ,  ISNULL(A.DR_FOR_AMT_I , 0 )    AS DR_FOR_AMT_I
	         ,  ISNULL(A.CR_FOR_AMT_I , 0 )    AS CR_FOR_AMT_I
	         ,  ISNULL(A.JAN_FOR_AMT_I, 0 )    AS JAN_FOR_AMT_I
	         ,  ISNULL(A.DEPT_CODE     , '')   AS DEPT_CODE
	         ,  ISNULL(A.DEPT_NAME     , '')   AS DEPT_NAME
	         ,  ISNULL(A.DIV_CODE		, '')	AS DIV_CODE
	         ,  ISNULL(A.DIV_NAME		, '')	AS DIV_NAME
	         ,  ISNULL(A.AC_DATA1      , '')   AS AC_DATA1
	         ,  ISNULL(A.AC_DATA_NAME1 , '')   AS AC_DATA_NAME1
	         ,  ISNULL(A.AC_DATA2      , '')   AS AC_DATA2
	         ,  ISNULL(A.AC_DATA_NAME2 , '')   AS AC_DATA_NAME2
	         ,  ISNULL(A.AC_DATA3      , '')   AS AC_DATA3
	         ,  ISNULL(A.AC_DATA_NAME3 , '')   AS AC_DATA_NAME3
	         ,  ISNULL(A.AC_DATA4      , '')   AS AC_DATA4
	         ,  ISNULL(A.AC_DATA_NAME4 , '')   AS AC_DATA_NAME4
	         ,  ISNULL(A.AC_DATA5      , '')   AS AC_DATA5
	         ,  ISNULL(A.AC_DATA_NAME5 , '')   AS AC_DATA_NAME5
	         ,  ISNULL(A.AC_DATA6      , '')   AS AC_DATA6
	         ,  ISNULL(A.AC_DATA_NAME6 , '')   AS AC_DATA_NAME6
	         ,  A.GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     ,'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '')   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '')   AS POSTIT_USER_ID
	         ,  ISNULL(A.INPUT_PATH    , '')   AS INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '')   AS MOD_DIVI
	         ,  ISNULL(A.INPUT_DIVI    , '')   AS INPUT_DIVI
			 ,	A.INPUT_USER_ID
			 ,	A.INPUT_USER_NAME
	    FROM           #AGJ210T_160427 AS A  WITH (NOLOCK)
	    ORDER BY A.AC_DATE, A.GUBUN, A.SLIP_NUM, A.SLIP_SEQ, A.AUTO_NUM, A.MONEY_UNIT
	
	    SET     NOCOUNT    OFF
	    SET     ARITHABORT OFF
	</select>	
    
	<select id="agb110skrServiceImpl.selectListTo110rkrPrint" parameterType="Map" resultType="rMap">
	--agb110skrServiceImpl.selectListTo110rkrPrint
     BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON
           
		   -- 1. 변수 선언
	       DECLARE @COMP_CODE        NVARCHAR(08)
	              ,@ACCNT_DIVI       NVARCHAR(03)
	              ,@START_DATE	     NVARCHAR(12)
	              ,@AC_DATE_FR	     NVARCHAR(12)
	              ,@AC_DATE_TO       NVARCHAR(12)
	              ,@ACCNT_CODE_FR    NVARCHAR(255)
	              ,@ACCNT_CODE_TO    NVARCHAR(255)
		   
		    	  ,@DIV_NAME         NVARCHAR(255)
			      ,@FR_DEPT_CODE     NVARCHAR(255)
    			  ,@TO_DEPT_CODE     NVARCHAR(255)
	    		  ,@POSTIT           NVARCHAR(255)
		    	  ,@CHARGE_CODE      NVARCHAR(255)
			      ,@CUSTOM_CODE      NVARCHAR(255)
    			  ,@REMARK           NVARCHAR(255)
	    		  ,@CUSTOM_NAME      NVARCHAR(255)
		    	  ,@FR_AMT_I         NUMERIC(30, 6)
			      ,@TO_AMT_I         NUMERIC(30, 6)
    			  ,@FR_FOR_AMT_I     NUMERIC(30, 6)
	    		  ,@TO_FOR_AMT_I     NUMERIC(30, 6)
		    	  ,@msgBalance       NVARCHAR(255)
			      ,@msgDealTotal     NVARCHAR(255)
                  
                SET @COMP_CODE     = #{S_COMP_CODE}      
                SET @AC_DATE_FR    = #{AC_DATE_FR}      
                SET @AC_DATE_TO    = #{AC_DATE_TO}      
		        SET @ACCNT_DIVI    = #{ACCNT_DIVI}
		        SET @START_DATE    = #{START_DATE}
		        SET @ACCNT_CODE_FR = #{ACCNT_CODE_FR}
		        SET @ACCNT_CODE_TO = #{ACCNT_CODE_TO}
		
		        SET @DIV_NAME      = #{ACCNT_DIV_NAME}
		        SET @FR_DEPT_CODE  = #{FR_DEPT_CODE}
	            SET @TO_DEPT_CODE  = #{TO_DEPT_CODE}
	            SET @POSTIT        = #{POSTIT}
	            SET @CHARGE_CODE   = #{CHARGE_CODE}
	            SET @CUSTOM_CODE   = #{CUSTOM_CODE}
	            SET @REMARK        = #{REMARK}
	            SET @CUSTOM_NAME   = #{CUSTOM_NAME}
	    
	           -- 2.1 변수값 설정
	           SET @FR_AMT_I       = #{FR_AMT_I}
	           SET @TO_AMT_I       = #{TO_AMT_I}
	           SET @FR_FOR_AMT_I   = #{FR_FOR_AMT_I}
	           SET @TO_FOR_AMT_I   = #{TO_FOR_AMT_I}
               
               
               IF ( ISNULL(@AC_DATE_FR,      '') = '' ) SET @AC_DATE_FR     = ''
               IF ( ISNULL(@AC_DATE_TO,      '') = '' ) SET @AC_DATE_TO     = ''
               IF ( ISNULL(@ACCNT_DIVI,      '') = '' ) SET @ACCNT_DIVI     = ''
               IF ( ISNULL(@START_DATE,      '') = '' ) SET @START_DATE     = ''
               IF ( ISNULL(@ACCNT_CODE_FR,   '') = '' ) SET @ACCNT_CODE_FR  = ''
               IF ( ISNULL(@ACCNT_CODE_TO,   '') = '' ) SET @ACCNT_CODE_TO  = ''
               IF ( ISNULL(@DIV_NAME,        '') = '' ) SET @DIV_NAME       = ''
               IF ( ISNULL(@FR_DEPT_CODE,    '') = '' ) SET @FR_DEPT_CODE   = ''
               IF ( ISNULL(@TO_DEPT_CODE,    '') = '' ) SET @TO_DEPT_CODE   = ''
               IF ( ISNULL(@POSTIT,          '') = '' ) SET @POSTIT         = ''
               IF ( ISNULL(@CHARGE_CODE,     '') = '' ) SET @CHARGE_CODE    = ''
               IF ( ISNULL(@CUSTOM_CODE,     '') = '' ) SET @CUSTOM_CODE    = ''
               IF ( ISNULL(@REMARK,          '') = '' ) SET @REMARK         = ''
               IF ( ISNULL(@CUSTOM_NAME,     '') = '' ) SET @CUSTOM_NAME    = ''
               IF ( ISNULL(@FR_AMT_I,         0) = 0 )  SET @FR_AMT_I       = 0
               IF ( ISNULL(@TO_AMT_I,         0) = 0 )  SET @TO_AMT_I       = 0
               IF ( ISNULL(@FR_FOR_AMT_I,     0) = 0 )  SET @FR_FOR_AMT_I   = 0
               IF ( ISNULL(@TO_FOR_AMT_I,     0) = 0 )  SET @TO_FOR_AMT_I   = 0
	 
	
	           -- 2.2 날짜 포맷 유형 설정
	       DECLARE      @DateFormat         NVARCHAR(10)
	
	       SELECT TOP 1 @DateFormat = M1.CODE_NAME
	         FROM BSA100T M1 WITH (NOLOCK)
	        WHERE M1.COMP_CODE = @COMP_CODE
	          AND M1.MAIN_CODE = N'B044'
	          AND M1.REF_CODE1 = N'Y'
	
	          SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	    
	       SELECT TOP 1 @msgBalance = MSG_DESC
		     FROM BSA010T   WITH (NOLOCK)                       
		    WHERE MSG_TYPE = '1'                 
		      AND MSG_NO ='A0139';
		   
		   SELECT TOP 1 @msgDealTotal = MSG_DESC
		     FROM BSA010T    WITH (NOLOCK)                      
		    WHERE MSG_TYPE = '1'                 
		      AND MSG_NO   ='A0141'; 
		   
	       SELECT '' AS AC_DATE                                          
	            , NULL AS SLIP_NUM                                       
	            , NULL AS SLIP_SEQ                                       
	            , CONVERT(NVARCHAR(100), @msgBalance) AS REMARK                                     
	            , ACCNT                                                  
	            , ISNULL((SELECT ACCNT_NAME                              
	                        FROM ABA400T  WITH (NOLOCK)                                 
	                       WHERE COMP_CODE = @COMP_CODE
	                         AND ACCNT     = A.ACCNT),'') AS ACCNT_NAME      
	           , '' AS CUSTOM_NAME                                      
	           , '' AS P_ACCNT_NAME                                     
	           , ISNULL(SUM(DR_AMT_I),0.0) AS DR_AMT_I                  
	           , ISNULL(SUM(CR_AMT_I),0.0) AS CR_AMT_I                  
	           , ISNULL(CASE (SELECT JAN_DIVI                           
	                            FROM ABA400T  WITH (NOLOCK)                            
	                           WHERE COMP_CODE = @COMP_CODE
	                             AND ACCNT     = A.ACCNT)                   
	                            WHEN '1'                                
	                                 THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
	                            WHEN '2'                                
	                                 THEN SUM(CR_AMT_I) - SUM(DR_AMT_I)
	                     END,0.0) AS JAN_AMT_I                          
	           , ''  AS MONEY_UNIT                                       
	           , 0   AS FOR_AMT_I                                         
	           , '2' AS GUBUN                                           
	           , 'N' AS POSTIT_YN                                       
	           , ''  AS POSTIT                                           
	           , ''  AS MOD_DIVI                                         
	       FROM  (SELECT A.AC_DATE 
	                   --, B.ACCNT_CD ACCNT 
                       , A.ACCNT        --테스트
	                   , A.DEPT_CODE 
	                   , A.DR_AMT_I 
	                   , A.CR_AMT_I 
	                   , A.DIV_CODE 
	                   , A.JAN_DIVI 
	                   , INPUT_PATH 
	                   , B.SUBJECT_DIVI
	                FROM AGB100TV A  WITH (NOLOCK)
	                   , ABA400T  B  WITH (NOLOCK) 
	               WHERE A.COMP_CODE = @COMP_CODE
	                 AND B.COMP_CODE = @COMP_CODE
	                AND A.ACCNT     = B.ACCNT)  A  ----sSqlTable
	          , BOR120T B                         
	      WHERE B.COMP_CODE    = @COMP_CODE
	        AND AC_DATE    &gt;= @START_DATE           
	        AND A.DIV_CODE     = B.DIV_CODE                                
	        AND AC_DATE    &lt; @AC_DATE_FR    
	        <if test='ACCNT_DIVI != "1"'>
	            AND A.SUBJECT_DIVI = '2'
	        </if>
            
----sSqlWhere
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR) or @foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">
			AND ACCNT &gt;= @ACCNT_CODE_FR
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
			AND ACCNT &lt;= @ACCNT_CODE_TO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX1)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX1}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX2)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX2}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX3)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX3}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX4)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX4}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX5)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX5}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX6)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX6}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX7)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX7}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX8)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX8}  
		</if>
		
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP1)">
			OR ACCNT = #{ACCNT_CODE_SP1}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP2)">
			OR ACCNT = #{ACCNT_CODE_SP2}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP3)">
			OR ACCNT = #{ACCNT_CODE_SP3}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP4)">
			OR ACCNT = #{ACCNT_CODE_SP4}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP5)">
			OR ACCNT = #{ACCNT_CODE_SP5}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP6)">
			OR ACCNT = #{ACCNT_CODE_SP6}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP7)">
			OR ACCNT = #{ACCNT_CODE_SP7}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP8)">
			OR ACCNT = #{ACCNT_CODE_SP8}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP9)">
			OR ACCNT = #{ACCNT_CODE_SP9}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP10)">
			OR ACCNT = #{ACCNT_CODE_SP10}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP11)">
			OR ACCNT = #{ACCNT_CODE_SP11}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP12)">
			OR ACCNT = #{ACCNT_CODE_SP12}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP13)">
			OR ACCNT = #{ACCNT_CODE_SP13}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP14)">
			OR ACCNT = #{ACCNT_CODE_SP14}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP15)">
			OR ACCNT = #{ACCNT_CODE_SP15}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP16)">
			OR ACCNT = #{ACCNT_CODE_SP16}  
	</if>
----END sSqlWhere

	<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
		AND 	A.DIV_CODE IN (select value from  uniLITE.fnSplit(#{ACCNT_DIV_CODE}, ','))
	</if>
	<if test="@foren.Ognl@isNotEmpty(DIV_NAME)">
		 AND B.DIV_NAME LIKE N'%' + @DIV_NAME + '%'    
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		AND DEPT_CODE &gt;= @FR_DEPT_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		AND DEPT_CODE &lt;= @TO_DEPT_CODE
	</if>
	      GROUP BY ACCNT, JAN_DIVI
       
        UNION ALL                                                    
         
       SELECT ''   AS AC_DATE                                          
            , NULL AS SLIP_NUM                                       
            , NULL AS SLIP_SEQ                                       
            , CONVERT(NVARCHAR(100), @msgDealTotal) AS REMARK                                   
            , ACCNT                                                  
            , ISNULL((SELECT ACCNT_NAME                              
                        FROM ABA400T   WITH (NOLOCK)                                
                       WHERE COMP_CODE = @COMP_CODE
                         AND ACCNT     = A.ACCNT),'') AS ACCNT_NAME      
            , '' AS CUSTOM_NAME                                      
            , '' AS P_ACCNT_NAME                                     
            , ISNULL(SUM(DR_AMT_I),0.0) AS DR_AMT_I                  
            , ISNULL(SUM(CR_AMT_I),0.0) AS CR_AMT_I                  
            , ISNULL(CASE (SELECT JAN_DIVI                           
                             FROM ABA400T   WITH (NOLOCK)                           
                            WHERE COMP_CODE = @COMP_CODE
                              AND ACCNT     = A.ACCNT)                   
                             WHEN '1'                                
                                  THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
                             WHEN '2'                                
                                  THEN SUM(CR_AMT_I) - SUM(DR_AMT_I)
                      END,0.0) AS JAN_AMT_I                          
            , ''  AS MONEY_UNIT                                       
            ,  0  AS FOR_AMT_I                                         
            , '2' AS GUBUN                                           
            , 'N' AS POSTIT_YN                                       
            , ''  AS POSTIT                                           
            , ''  AS MOD_DIVI                                         
         FROM  (SELECT A.AC_DATE 
	             --, B.ACCNT_CD ACCNT
                 , A.ACCNT      --테스트
	             , A.DEPT_CODE 
	             , A.DR_AMT_I 
	             , A.CR_AMT_I 
	             , A.DIV_CODE 
	             , A.JAN_DIVI 
	             , INPUT_PATH 
	             , B.SUBJECT_DIVI
	          FROM AGB100TV A  WITH (NOLOCK)
	             , ABA400T  B  WITH (NOLOCK) 
	         WHERE A.COMP_CODE = @COMP_CODE
	           AND B.COMP_CODE = @COMP_CODE
	           AND A.ACCNT     = B.ACCNT)  A  ----sSqlTable
            , BOR120T B                         
        WHERE B.COMP_CODE  = @COMP_CODE
          AND AC_DATE BETWEEN @AC_DATE_FR   
                          AND @AC_DATE_TO   
          AND INPUT_PATH   ='A1'                                        
          AND LEN(AC_DATE) = 6                                         
          AND A.DIV_CODE   = B.DIV_CODE                                
   		<if test='ACCNT_DIVI != "1"'>
            AND A.SUBJECT_DIVI = '2'
        </if>
        
----sSqlWhere
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR) or @foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">
			AND ACCNT &gt;= @ACCNT_CODE_FR
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
			AND ACCNT &lt;= @ACCNT_CODE_TO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX1)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX1}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX2)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX2}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX3)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX3}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX4)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX4}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX5)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX5}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX6)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX6}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX7)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX7}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX8)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX8}  
		</if>
		
	</if>
    
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP1)">
			OR ACCNT = #{ACCNT_CODE_SP1}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP2)">
			OR ACCNT = #{ACCNT_CODE_SP2}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP3)">
			OR ACCNT = #{ACCNT_CODE_SP3}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP4)">
			OR ACCNT = #{ACCNT_CODE_SP4}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP5)">
			OR ACCNT = #{ACCNT_CODE_SP5}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP6)">
			OR ACCNT = #{ACCNT_CODE_SP6}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP7)">
			OR ACCNT = #{ACCNT_CODE_SP7}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP8)">
			OR ACCNT = #{ACCNT_CODE_SP8}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP9)">
			OR ACCNT = #{ACCNT_CODE_SP9}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP10)">
			OR ACCNT = #{ACCNT_CODE_SP10}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP11)">
			OR ACCNT = #{ACCNT_CODE_SP11}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP12)">
			OR ACCNT = #{ACCNT_CODE_SP12}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP13)">
			OR ACCNT = #{ACCNT_CODE_SP13}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP14)">
			OR ACCNT = #{ACCNT_CODE_SP14}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP15)">
			OR ACCNT = #{ACCNT_CODE_SP15}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP16)">
			OR ACCNT = #{ACCNT_CODE_SP16}  
	</if>
----END sSqlWhere

   <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
		AND 	A.DIV_CODE IN (select value from  uniLITE.fnSplit(#{ACCNT_DIV_CODE}, ','))
	</if>
	<if test="@foren.Ognl@isNotEmpty(DIV_NAME)">
		 AND B.DIV_NAME LIKE N'%' + @DIV_NAME + '%'    
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		AND DEPT_CODE &gt;= @FR_DEPT_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		AND DEPT_CODE &lt;= @TO_DEPT_CODE
	</if>
        GROUP BY ACCNT, JAN_DIVI 
        HAVING SUM(DR_AMT_I) &lt;&gt; 0 OR SUM(CR_AMT_I) &lt;&gt;  0 
         
        UNION ALL  
         

       SELECT unilite.fnGetUserDateComp(@COMP_CODE, ac_date) AS AC_DATE                                                     
            , SLIP_NUM                                                                                      
            , SLIP_SEQ  
	        <if test='RPT_SIZE == "1"'>                                                                                    
	        , ISNULL(SUBSTRING(REMARK, 1, 50),'')   AS REMARK  
	        </if>                                               
		    <if test='RPT_SIZE != "1"'>   
		     , ISNULL(SUBSTRING(REMARK, 1, 100),'') AS REMARK                                                 
		    </if> 
            , ACCNT                                                                                         
            , ISNULL((SELECT ACCNT_NAME                                                                     
                        FROM ABA400T  WITH (NOLOCK)                                                                        
                       WHERE COMP_CODE = @COMP_CODE
                         AND ACCNT     = A.ACCNT),'') AS ACCNT_NAME                                             
            , CASE WHEN ISNULL(A.CUSTOM_CODE,'') &lt;&gt; ''                                                       
                        THEN (SELECT CUSTOM_NAME                                                            
                                FROM BCM100T                                                                
                               WHERE COMP_CODE   = @COMP_CODE
                                 AND CUSTOM_CODE = A.CUSTOM_CODE)                                           
                        ELSE ISNULL(A.CUSTOM_NAME, '')                                                      
               END AS CUSTOM_NAME                                                                           
            , ISNULL((SELECT ACCNT_NAME                                                                     
                        FROM ABA400T   WITH (NOLOCK)                                                                       
                       WHERE COMP_CODE = @COMP_CODE
                         AND ACCNT     = A.P_ACCNT),'') AS P_ACCNT_NAME                                         
            , CASE DR_CR WHEN '1'                                                                           
                              THEN AMT_I                                                                    
                         WHEN '2'                                                                           
                              THEN 0.0                                                                      
               END AS DR_AMT_I                                                                              
            , CASE DR_CR WHEN '1'                                                                           
                              THEN 0.0                                                                      
                         WHEN '2'                                                                           
                              THEN AMT_I                                                                    
               END AS CR_AMT_I                                                                              
            , CASE JAN_DIVI WHEN DR_CR                                                                      
                                 THEN AMT_I                                                                 
                            ELSE -1 * AMT_I                                                            
               END AS JAN_AMT_I                                                                             
            , ISNULL(A.MONEY_UNIT, '') AS MONEY_UNIT                                                        
            , ISNULL(A.FOR_AMT_I, 0)   AS FOR_AMT_I                                                           
            , '1'                      AS GUBUN                                                                                  
            , ISNULL(POSTIT_YN,'N')    AS POSTIT_YN                                                            
            , ISNULL(POSTIT,'')        AS POSTIT                                                                   
            , ISNULL(MOD_DIVI, 'N')    AS MOD_DIVI                                                             
	     FROM   (SELECT 
	 				   DIV_CODE  
	                 , AC_DATE  
	                 , SLIP_NUM  
	                 , SLIP_SEQ 
	                 , REMARK  
	                 --, B.ACCNT_CD AS ACCNT
                     , A.ACCNT  --테스트 
	                 , B.SUBJECT_DIVI 
	                 , CUSTOM_CODE 
	                 , CUSTOM_NAME 
	                 , P_ACCNT 
	                 , DEPT_CODE 
	                 , DR_CR 
	                 , AMT_I 
	                 , A.JAN_DIVI 
	                 , POSTIT_YN 
	                 , POSTIT 
	                 , MOD_DIVI 
	                 , INPUT_PATH 
	                 , CHARGE_CODE 
	                 , MONEY_UNIT 
	                 , FOR_AMT_I 
	              FROM AGJ210T A  WITH (NOLOCK)
                     , ABA400T B  WITH (NOLOCK)
	             WHERE A.COMP_CODE = @COMP_CODE
	               AND B.COMP_CODE = @COMP_CODE
	               AND A.ACCNT     = B.ACCNT ) A --sSqlTable210
            , BOR120T B                                                             
        WHERE B.COMP_CODE  = @COMP_CODE
          AND AC_DATE BETWEEN @AC_DATE_FR AND @AC_DATE_TO
          AND A.DIV_CODE   = B.DIV_CODE 
          <if test='ACCNT_DIVI != "1"'>
            AND A.SUBJECT_DIVI = '2'
        </if>                                                                      
      ----sSqlWhere
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR) or @foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">
			AND ACCNT &gt;= @ACCNT_CODE_FR
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
			AND ACCNT &lt;= @ACCNT_CODE_TO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX1)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX1}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX2)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX2}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX3)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX3}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX4)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX4}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX5)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX5}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX6)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX6}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX7)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX7}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX8)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX8}  
		</if>
		
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP1)">
			OR ACCNT = #{ACCNT_CODE_SP1}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP2)">
			OR ACCNT = #{ACCNT_CODE_SP2}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP3)">
			OR ACCNT = #{ACCNT_CODE_SP3}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP4)">
			OR ACCNT = #{ACCNT_CODE_SP4}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP5)">
			OR ACCNT = #{ACCNT_CODE_SP5}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP6)">
			OR ACCNT = #{ACCNT_CODE_SP6}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP7)">
			OR ACCNT = #{ACCNT_CODE_SP7}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP8)">
			OR ACCNT = #{ACCNT_CODE_SP8}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP9)">
			OR ACCNT = #{ACCNT_CODE_SP9}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP10)">
			OR ACCNT = #{ACCNT_CODE_SP10}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP11)">
			OR ACCNT = #{ACCNT_CODE_SP11}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP12)">
			OR ACCNT = #{ACCNT_CODE_SP12}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP13)">
			OR ACCNT = #{ACCNT_CODE_SP13}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP14)">
			OR ACCNT = #{ACCNT_CODE_SP14}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP15)">
			OR ACCNT = #{ACCNT_CODE_SP15}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP16)">
			OR ACCNT = #{ACCNT_CODE_SP16}  
	</if>
----END sSqlWhere
----sSqlWhere2
    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
		AND 	A.DIV_CODE IN (select value from  uniLITE.fnSplit(#{ACCNT_DIV_CODE}, ','))
	</if>
	<if test="@foren.Ognl@isNotEmpty(DIV_NAME)">
		 AND B.DIV_NAME LIKE N'%' + @DIV_NAME + '%'    
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		AND DEPT_CODE &gt;= @FR_DEPT_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		AND DEPT_CODE &lt;= @TO_DEPT_CODE
	</if>	 
	<if test='INCLUDE_DELETE == "N"'>
           AND ISNULL(MOD_DIVI,'')  = ''
    </if>
    <if test='POSTIT_YN == "Y"'>
           AND POSTIT_YN = 'Y'
        <if test="@foren.Ognl@isNotEmpty(POSTIT)">
          AND POSTIT LIKE @POSTIT +'%'
        </if>    
    </if>  
    <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
		AND ISNULL(AMT_I,0.0) &gt;= @FR_AMT_I
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
		AND ISNULL(AMT_I,0.0) &lt;= @TO_AMT_I
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
		AND ISNULL(FOR_AMT_I,0.0) &gt;= @FR_FOR_AMT_I
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
		AND ISNULL(FOR_AMT_I,0.0) &lt;= @TO_FOR_AMT_I
	</if> 	    
	<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
		AND CHARGE_CODE = @CHARGE_CODE
	</if>	  
   <if test="@foren.Ognl@isNotEmpty(REMARK)">
		AND REMARK LIKE N'%'+ @REMARK +'%'
	</if>	
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)  and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		AND CUSTOM_CODE = @CUSTOM_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND CUSTOM_CODE LIKE  @CUSTOM_CODE +'%'
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND CUSTOM_NAME LIKE N'%' + @CUSTOM_NAME +'%' 
	</if>	
----end sSqlWhere2
<if test='ACCNT_DIVI == "1"'>
      
        UNION ALL                                                                        
         
       SELECT A.AC_DATE                                                                  
            , A.SLIP_NUM                                                                 
            , A.SLIP_SEQ                                                                 
            , A.REMARK                                                                   
            , A.ACCNT                                                                    
            , A.ACCNT_NAME                                                               
            , A.CUSTOM_NAME                                                              
            , A.P_ACCNT_NAME                                                             
            , A.DR_AMT_I                                                                 
            , A.CR_AMT_I                                                                 
            , A.JAN_AMT_I                                                                
            , A.MONEY_UNIT                                                               
            , A.FOR_AMT_I                                                                
            , A.GUBUN                                                                    
            , A.POSTIT_YN                                                                
            , A.POSTIT                                                                   
            , A.MOD_DIVI                                                                 
         FROM (SELECT unilite.fnGetUserDateComp(@COMP_CODE, ac_date) AS AC_DATE                          
                    , SLIP_NUM                                                           
                    , SLIP_SEQ                                                           
   			 <if test='RPT_SIZE == "1"'>                                                                                    
	         , ISNULL(SUBSTRING(REMARK, 1, 50),'') AS REMARK  
	         </if>                                               
		     <if test='RPT_SIZE != "1"'>   
		     , ISNULL(SUBSTRING(REMARK, 1, 100),'') AS REMARK                                                 
		     </if> 
    
                    , (SELECT ACCNT_CD                                                   
                         FROM ABA400T  WITH (NOLOCK)                                                    
                        WHERE COMP_CODE = @COMP_CODE
                          AND ACCNT     = A.ACCNT) AS ACCNT                                    
                    , ISNULL((SELECT ACCNT_NAME                                          
                                FROM ABA400T  WITH (NOLOCK)                                             
                               WHERE COMP_CODE = @COMP_CODE
                                 AND ACCNT     = (SELECT ACCNT_CD                            
                                                    FROM ABA400T                             
                                                   WHERE COMP_CODE = @COMP_CODE
                                                     AND ACCNT     = A.ACCNT)),'') AS ACCNT_NAME 
                    , CASE WHEN ISNULL(A.CUSTOM_NAME,'') = ''                            
                                THEN (SELECT CUSTOM_NAME                                 
                                        FROM BCM100T   WITH (NOLOCK)                                    
                                       WHERE COMP_CODE   = @COMP_CODE
                                         AND CUSTOM_CODE = A.CUSTOM_CODE)                
                                ELSE ISNULL(A.CUSTOM_NAME, '')                           
                       END AS CUSTOM_NAME                                                
                    , ISNULL((SELECT ACCNT_NAME                                          
                                FROM ABA400T   WITH (NOLOCK)                                            
                               WHERE COMP_CODE = @COMP_CODE
                                 AND ACCNT     = A.P_ACCNT),'') AS P_ACCNT_NAME              
                    , CASE DR_CR WHEN '1'                                                
                                      THEN AMT_I                                         
                                 WHEN '2'                                                
                                      THEN 0.0                                           
                       END AS DR_AMT_I                                                   
                    , CASE DR_CR WHEN '1'                                                
                                      THEN 0.0                                           
                                 WHEN '2'                                                
                                      THEN AMT_I                                         
                       END AS CR_AMT_I                                                   
                    , CASE JAN_DIVI WHEN DR_CR                                           
                                         THEN AMT_I                                      
                                    ELSE -1 * AMT_I                                 
                       END JAN_AMT_I                                                     
                    , ISNULL(A.MONEY_UNIT, '') AS MONEY_UNIT                             
                    , ISNULL(A.FOR_AMT_I, 0)   AS FOR_AMT_I                                
                    , '1' AS GUBUN                                                       
                    , ISNULL(POSTIT_YN,'N')    AS POSTIT_YN                                 
                    , ISNULL(POSTIT,'')        AS POSTIT                                        
                    , ISNULL(MOD_DIVI, 'N')    AS MOD_DIVI                                  
                 FROM   (SELECT 
	 				   DIV_CODE  
	                 , AC_DATE  
	                 , SLIP_NUM  
	                 , SLIP_SEQ 
	                 , REMARK  
	                 --, B.ACCNT_CD AS ACCNT
                     , A.ACCNT  --테스트  
	                 , B.SUBJECT_DIVI 
	                 , CUSTOM_CODE 
	                 , CUSTOM_NAME 
	                 , P_ACCNT 
	                 , DEPT_CODE 
	                 , DR_CR 
	                 , AMT_I 
	                 , A.JAN_DIVI 
	                 , POSTIT_YN 
	                 , POSTIT 
	                 , MOD_DIVI 
	                 , INPUT_PATH 
	                 , CHARGE_CODE 
	                 , MONEY_UNIT 
	                 , FOR_AMT_I 
	                  FROM AGJ210T A  WITH (NOLOCK) , ABA400T B  WITH (NOLOCK)
	                 WHERE A.COMP_CODE = @COMP_CODE
	                   AND B.COMP_CODE = @COMP_CODE
	                   AND A.ACCNT  = B.ACCNT ) A   ---sSqlTable210                               
                    , BOR120T B                                  
                WHERE B.COMP_CODE = @COMP_CODE
                  AND AC_DATE BETWEEN @AC_DATE_FR AND @AC_DATE_TO
                  AND A.DIV_CODE  = B.DIV_CODE                                            
                  AND (SELECT SUBJECT_DIVI                                               
		                 FROM ABA400T  WITH (NOLOCK)                                                    
		                WHERE COMP_CODE = @COMP_CODE
		                  AND ACCNT     = A.ACCNT) = '2'   
			            <if test='ACCNT_DIVI != "1"'>
			              AND A.SUBJECT_DIVI = '2'
			            </if>                                                                             
      ----sSqlWhere2
   <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
		AND 	A.DIV_CODE IN (select value from  uniLITE.fnSplit(#{ACCNT_DIV_CODE}, ','))
	</if>
	<if test="@foren.Ognl@isNotEmpty(DIV_NAME)">
		 AND B.DIV_NAME LIKE N'%'+@DIV_NAME+'%'  
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		AND DEPT_CODE &gt;= @FR_DEPT_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		AND DEPT_CODE &lt;= @TO_DEPT_CODE
	</if>	 
	<if test='INCLUDE_DELETE == "N"'>
           AND ISNULL(MOD_DIVI,'')  = ''
    </if>
    <if test='POSTIT_YN == "Y"'>
           AND POSTIT_YN = 'Y'
        <if test="@foren.Ognl@isNotEmpty(POSTIT)">
          AND POSTIT LIKE N'%'+@POSTIT+'%'
        </if>    
    </if>  
    <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
		AND ISNULL(AMT_I,0.0) &gt;= @FR_AMT_I
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
		AND ISNULL(AMT_I,0.0) &lt;= @TO_AMT_I
	</if>    
	<if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
		AND ISNULL(FOR_AMT_I,0.0) &gt;= @FR_FOR_AMT_I
	</if>
	<if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
		AND ISNULL(FOR_AMT_I,0.0) &lt;= @TO_FOR_AMT_I
	</if> 	    
	<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
		AND CHARGE_CODE = @CHARGE_CODE
	</if>	  
   <if test="@foren.Ognl@isNotEmpty(REMARK)">
		AND REMARK LIKE N'%'+ @REMARK +'%'
	</if>	
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)  and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		AND CUSTOM_CODE = @CUSTOM_CODE
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND CUSTOM_CODE LIKE  @CUSTOM_CODE +'%'
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND CUSTOM_NAME LIKE N'%' + @CUSTOM_NAME +'%'
	</if>	
----end sSqlWhere2
        ) A 
        WHERE 1=1 
----sSqlWhere
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR) or @foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">
			AND ACCNT &gt;= @ACCNT_CODE_FR
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
			AND ACCNT &lt;= @ACCNT_CODE_TO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX1)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX1}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX2)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX2}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX3)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX3}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX4)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX4}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX5)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX5}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX6)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX6}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX7)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX7}  
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_EX8)">
			AND ACCNT &lt;&gt; #{ACCNT_CODE_EX8}  
		</if>
		
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP1)">
			OR ACCNT = #{ACCNT_CODE_SP1}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP2)">
			OR ACCNT = #{ACCNT_CODE_SP2}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP3)">
			OR ACCNT = #{ACCNT_CODE_SP3}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP4)">
			OR ACCNT = #{ACCNT_CODE_SP4}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP5)">
			OR ACCNT = #{ACCNT_CODE_SP5}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP6)">
			OR ACCNT = #{ACCNT_CODE_SP6}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP7)">
			OR ACCNT = #{ACCNT_CODE_SP7}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP8)">
			OR ACCNT = #{ACCNT_CODE_SP8}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP9)">
			OR ACCNT = #{ACCNT_CODE_SP9}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP10)">
			OR ACCNT = #{ACCNT_CODE_SP10}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP11)">
			OR ACCNT = #{ACCNT_CODE_SP11}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP12)">
			OR ACCNT = #{ACCNT_CODE_SP12}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP13)">
			OR ACCNT = #{ACCNT_CODE_SP13}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP14)">
			OR ACCNT = #{ACCNT_CODE_SP14}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP15)">
			OR ACCNT = #{ACCNT_CODE_SP15}  
	</if>
	<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_SP16)">
			OR ACCNT = #{ACCNT_CODE_SP16}  
	</if>
----END sSqlWhere
</if>
        ORDER BY ACCNT, AC_DATE, SLIP_NUM, SLIP_SEQ 
        
	    SET ARITHABORT OFF
		SET NOCOUNT OFF
	END  
    
	</select>
    
	<select id="agb110skrServiceImpl.getGridName" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntInfo]
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @ACCNT          NVARCHAR(16)
		
		      , @BudgProBase    NVARCHAR(01)
		
		SET @COMP_CODE = #{S_COMP_CODE}
		SET @ACCNT     = #{ACCNT_CODE}
		
		--회계업무설정에서 사용하는 예산프로세스 가져오기
		SELECT @BudgProBase = BUDG_PRO_BASE
		  FROM ABA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		
		SET @BudgProBase = ISNULL(@BudgProBase, '1')
		
		--계정정보 가져오기
		SELECT ACCNT
		     , ISNULL(ACCNT_NAME  , '')     AS ACCNT_NAME
		     , ISNULL(AC_FULL_NAME, '')     AS AC_FULL_NAME
		     , ISNULL(ACCNT_NAME2 , '')     AS ACCNT_NAME2
		     , ISNULL(ACCNT_NAME3 , '')     AS ACCNT_NAME3
		     , ISNULL(AC_CODE1    , '')     AS AC_CODE1
		     , ISNULL(AC_CODE2    , '')     AS AC_CODE2
		     , ISNULL(AC_CODE3    , '')     AS AC_CODE3
		     , ISNULL(AC_CODE4    , '')     AS AC_CODE4
		     , ISNULL(AC_CODE5    , '')     AS AC_CODE5
		     , ISNULL(AC_CODE6    , '')     AS AC_CODE6
		     , ISNULL(C1.AC_NAME  , '')     AS AC_NAME1
		     , ISNULL(C2.AC_NAME  , '')     AS AC_NAME2
		     , ISNULL(C3.AC_NAME  , '')     AS AC_NAME3
		     , ISNULL(C4.AC_NAME  , '')     AS AC_NAME4
		     , ISNULL(C5.AC_NAME  , '')     AS AC_NAME5
		     , ISNULL(C6.AC_NAME  , '')     AS AC_NAME6
		     , ISNULL(DR_CTL1     ,'N')     AS DR_CTL1
		     , ISNULL(DR_CTL2     ,'N')     AS DR_CTL2
		     , ISNULL(DR_CTL3     ,'N')     AS DR_CTL3
		     , ISNULL(DR_CTL4     ,'N')     AS DR_CTL4
		     , ISNULL(DR_CTL5     ,'N')     AS DR_CTL5
		     , ISNULL(DR_CTL6     ,'N')     AS DR_CTL6
		     , ISNULL(CR_CTL1     ,'N')     AS CR_CTL1
		     , ISNULL(CR_CTL2     ,'N')     AS CR_CTL2
		     , ISNULL(CR_CTL3     ,'N')     AS CR_CTL3
		     , ISNULL(CR_CTL4     ,'N')     AS CR_CTL4
		     , ISNULL(CR_CTL5     ,'N')     AS CR_CTL5
		     , ISNULL(CR_CTL6     ,'N')     AS CR_CTL6
		     , ISNULL(BOOK_CODE1  , '')     AS BOOK_CODE1
		     , ISNULL(BOOK_CODE2  , '')     AS BOOK_CODE2
		     , ISNULL(D1.AC_NAME  , '')     AS BOOK_NAME1
		     , ISNULL(D2.AC_NAME  , '')     AS BOOK_NAME2
		     , ISNULL(ACCNT_SPEC  , '')     AS ACCNT_SPEC
		     , ISNULL(SPEC_DIVI   , '')     AS SPEC_DIVI
		     , ISNULL(PROFIT_DIVI , '')     AS PROFIT_DIVI
		     , ISNULL(PEND_YN     ,'N')     AS PEND_YN
		     , ISNULL(PEND_CODE   , '')     AS PEND_CODE
		     , ISNULL(BUDG_YN     ,'N')     AS BUDG_YN
		     , ISNULL(BUDGCTL_YN  ,'N')     AS BUDGCTL_YN
		     , ISNULL(DR_FUND     , '')     AS DR_FUND
		     , ISNULL(CR_FUND     , '')     AS CR_FUND
		     , ISNULL(COST_DIVI   , '')     AS COST_DIVI
		     , ISNULL(FOR_YN      ,'N')     AS FOR_YN
		     , ISNULL(ACCNT_DIVI  , '')     AS ACCNT_DIVI
		     , ISNULL(JAN_DIVI    , '')     AS JAN_DIVI
		     , ISNULL(GROUP_YN    ,'N')     AS GROUP_YN
		     , ISNULL(SLIP_SW     ,'N')     AS SLIP_SW
		     , ISNULL(A.SYSTEM_YN ,'N')     AS SYSTEM_YN
		     , ISNULL(C1.DT_TYPE  , '')     AS AC_TYPE1
		     , ISNULL(C2.DT_TYPE  , '')     AS AC_TYPE2
		     , ISNULL(C3.DT_TYPE  , '')     AS AC_TYPE3
		     , ISNULL(C4.DT_TYPE  , '')     AS AC_TYPE4
		     , ISNULL(C5.DT_TYPE  , '')     AS AC_TYPE5
		     , ISNULL(C6.DT_TYPE  , '')     AS AC_TYPE6
		     , ISNULL(C1.DT_LEN   , 0 )     AS AC_LEN1
		     , ISNULL(C2.DT_LEN   , 0 )     AS AC_LEN2
		     , ISNULL(C3.DT_LEN   , 0 )     AS AC_LEN3
		     , ISNULL(C4.DT_LEN   , 0 )     AS AC_LEN4
		     , ISNULL(C5.DT_LEN   , 0 )     AS AC_LEN5
		     , ISNULL(C6.DT_LEN   , 0 )     AS AC_LEN6
		     , CASE WHEN A.AC_CODE1 = 'A7' AND @BudgProBase = '1' 
		            THEN 'N'
		            ELSE ISNULL(C1.DT_POPUP,'N')
		        END AC_POPUP1
		     , CASE WHEN A.AC_CODE2 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C2.DT_POPUP,'N')
		        END AC_POPUP2
		     , CASE WHEN A.AC_CODE3 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C3.DT_POPUP,'N')
		        END AC_POPUP3
		     , CASE WHEN A.AC_CODE4 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C4.DT_POPUP,'N')
		        END AC_POPUP4
		     , CASE WHEN A.AC_CODE5 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C5.DT_POPUP,'N')
		        END AC_POPUP5
		     , CASE WHEN A.AC_CODE6 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C6.DT_POPUP,'N')
		        END AC_POPUP6
		     , ISNULL(B.AC_NAME   , '')     AS PEND_NAME
		     , ISNULL(B.DT_TYPE   , '')     AS PEND_TYPE
		     , ISNULL(B.DT_LEN    ,'0')     AS PEND_LEN
		     , ISNULL(B.DT_POPUP  ,'N')     AS PEND_POPUP
		     , A.COMP_CODE
		     ,  ISNULL(C1.DT_FMT  , 0 )     AS AC_FORMAT1
		     ,  ISNULL(C2.DT_FMT  , 0 )     AS AC_FORMAT2
		     ,  ISNULL(C3.DT_FMT  , 0 )     AS AC_FORMAT3
		     ,  ISNULL(C4.DT_FMT  , 0 )     AS AC_FORMAT4
		     ,  ISNULL(C5.DT_FMT  , 0 )     AS AC_FORMAT5
		     ,  ISNULL(C6.DT_FMT  , 0 )     AS AC_FORMAT6
		  FROM            ABA400T AS A  WITH (NOLOCK)
		       LEFT  JOIN ABA200T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE AND B.AC_CD  = A.PEND_CODE
		
		       LEFT  JOIN ABA200T AS C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE AND C1.AC_CD = A.AC_CODE1
		       LEFT  JOIN ABA200T AS C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE AND C2.AC_CD = A.AC_CODE2
		       LEFT  JOIN ABA200T AS C3 WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE AND C3.AC_CD = A.AC_CODE3
		       LEFT  JOIN ABA200T AS C4 WITH (NOLOCK) ON C4.COMP_CODE = A.COMP_CODE AND C4.AC_CD = A.AC_CODE4
		       LEFT  JOIN ABA200T AS C5 WITH (NOLOCK) ON C5.COMP_CODE = A.COMP_CODE AND C5.AC_CD = A.AC_CODE5
		       LEFT  JOIN ABA200T AS C6 WITH (NOLOCK) ON C6.COMP_CODE = A.COMP_CODE AND C6.AC_CD = A.AC_CODE6
		
		       LEFT  JOIN ABA200T AS D1 WITH (NOLOCK) ON D1.COMP_CODE = A.COMP_CODE AND D1.AC_CD = A.BOOK_CODE1
		       LEFT  JOIN ABA200T AS D2 WITH (NOLOCK) ON D2.COMP_CODE = A.COMP_CODE AND D2.AC_CD = A.BOOK_CODE2
		 WHERE A.COMP_CODE = @COMP_CODE
		   AND A.ACCNT     = @ACCNT	 
	</select>	

	<select id="agb110skrServiceImpl.getPostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetPostIt] Query01
		BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON
		
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         SELECT POSTIT
		           FROM AGJ110T  WITH (NOLOCK)
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         SELECT POSTIT
		           FROM AGJ210T  WITH (NOLOCK)
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		   SET ARITHABORT OFF
		   SET NOCOUNT OFF
		END
	</select>	

	<select id="agb110skrServiceImpl.updatePostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnUpdatePostIt] Query 02
		BEGIN
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         UPDATE AGJ110T
		            SET POSTIT_YN      = 'Y'
		              , POSTIT         = #{POSTIT}
		              , POSTIT_USER_ID = #{S_USER_ID}
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         UPDATE AGJ210T
		            SET POSTIT_YN      = 'Y'
		              , POSTIT         = #{POSTIT}
		              , POSTIT_USER_ID = #{S_USER_ID}
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		END
	</select>
	
	<select id="agb110skrServiceImpl.deletePostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnUpdatePostIt] Query 02
		BEGIN
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         UPDATE AGJ110T
		            SET POSTIT_YN      = 'N'
		              , POSTIT         = ''
		              , POSTIT_USER_ID = ''
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         UPDATE AGJ210T
		            SET POSTIT_YN      = 'N'
		              , POSTIT         = ''
		              , POSTIT_USER_ID = ''
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		END
	</select>
	
</mapper>