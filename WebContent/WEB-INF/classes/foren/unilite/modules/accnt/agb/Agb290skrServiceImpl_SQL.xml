<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb290skrServiceImpl">
	
	<select id="agb290skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--agb290skr.Cagb290skr[fnAgb290QStd] Query01
		BEGIN
			SET NOCOUNT ON
			
			--  임시테이블 삭제 ---------------------------------------------------------------------------
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE id=object_id('tempdb..#AFB210T_0513'))
				DROP TABLE #AFB210T_0513
			
			DECLARE @COMP_CODE			NVARCHAR(08)
				  , @DATE_FR			NVARCHAR(08)
				  , @DATE_TO			NVARCHAR(08)
				  , @DIV_CODE			NVARCHAR(08)
				  , @GUBUN				NVARCHAR(08)
				  , @DYNAMIC_CODE_FR	NVARCHAR(30)
				  , @DYNAMIC_CODE_TO	NVARCHAR(30)
				  , @ACCNT_CODE_FR		NVARCHAR(16)
				  , @ACCNT_CODE_TO		NVARCHAR(16)
				  , @DEPT_CODE_FR		NVARCHAR(08)
				  , @DEPT_CODE_TO		NVARCHAR(08)
				  , @PRINT_GUBUN		NVARCHAR(01)
			
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @DATE_FR		= #{FR_DATE}		/* 전표일 FR 필수 */
			SET @DATE_TO		= #{TO_DATE}		/* 전표일 TO 필수 */
			SET @GUBUN			= #{MANAGE_CODE}	/* 관리항목     필수 */
			SET @PRINT_GUBUN	= #{SUM}
			
			SELECT X.COMP_CODE
				 , X.AC_CODE
				 , X.PEND_CD
				 , X.PEND_NAME
				 , X.ACCNT
				 , X.ACCNT_NAME      
				 , X.DR_AMT_I
				 , X.CR_AMT_I
			  INTO #AFB210T_0513  
			  FROM ( 
					SELECT A.COMP_CODE
						 , A.AC_CODE
						 , A.PEND_CD
						 , A.PEND_NAME
						 , A.ACCNT
						 , M3.ACCNT_NAME
						 , A.DR_AMT_I
						 , A.CR_AMT_I   
					  FROM (SELECT K.COMP_CODE
								 , K.DIV_CODE
								 , CASE WHEN K.AC_CODE1= @GUBUN THEN AC_CODE1
										WHEN K.AC_CODE2= @GUBUN THEN AC_CODE2
										WHEN K.AC_CODE3= @GUBUN THEN AC_CODE3
										WHEN K.AC_CODE4= @GUBUN THEN AC_CODE4
										WHEN K.AC_CODE5= @GUBUN THEN AC_CODE5
										WHEN K.AC_CODE6= @GUBUN THEN AC_CODE6
										ELSE ''
								   END AS AC_CODE  
								 , CASE WHEN K.AC_CODE1= @GUBUN THEN AC_DATA1
										WHEN K.AC_CODE2= @GUBUN THEN AC_DATA2
										WHEN K.AC_CODE3= @GUBUN THEN AC_DATA3
										WHEN K.AC_CODE4= @GUBUN THEN AC_DATA4
										WHEN K.AC_CODE5= @GUBUN THEN AC_DATA5
										WHEN K.AC_CODE6= @GUBUN THEN AC_DATA6
										ELSE ''
								   END AS PEND_CD
								 , ISNULL(CASE	WHEN ISNULL(K.AC_CODE1, '') = @GUBUN
													 THEN M5.AC_NAME
												WHEN ISNULL(K.AC_CODE2, '') = @GUBUN
													 THEN M6.AC_NAME
												WHEN ISNULL(K.AC_CODE3, '') = @GUBUN
													 THEN M7.AC_NAME
												WHEN ISNULL(K.AC_CODE4, '') = @GUBUN
													 THEN M8.AC_NAME
												WHEN ISNULL(K.AC_CODE5, '') = @GUBUN
													 THEN M9.AC_NAME
												WHEN ISNULL(K.AC_CODE6, '') = @GUBUN
													 THEN M10.AC_NAME
								   END, '') AS PEND_NAME
								 , ACCNT
								 , DEPT_CODE
								 , AC_DATE
								 , CASE WHEN K.DR_CR = '1' THEN K.AMT_I
										ELSE 0
								   END AS DR_AMT_I
								 , CASE WHEN K.DR_CR = '2' THEN K.AMT_I
										ELSE 0
								   END AS CR_AMT_I 
							  FROM			  AGJ210T  K	WITH(NOLOCK)
									LEFT JOIN ABA200TV M5	WITH(NOLOCK) ON M5.COMP_CODE	= K.COMP_CODE
																		AND  M5.AC_CODE		= ISNULL(AC_CODE1,'')
																		AND  M5.AC_DATA		= ISNULL(AC_DATA1,'')
									LEFT JOIN ABA200TV M6	WITH(NOLOCK) ON M6.COMP_CODE	= K.COMP_CODE
																		AND  M6.AC_CODE		= ISNULL(AC_CODE2,'')
																		AND  M6.AC_DATA		= ISNULL(AC_DATA2,'')
									LEFT JOIN ABA200TV M7	WITH(NOLOCK) ON M7.COMP_CODE	= K.COMP_CODE
																		AND  M7.AC_CODE		= ISNULL(AC_CODE3,'')
																		AND  M7.AC_DATA		= ISNULL(AC_DATA3,'')
									LEFT JOIN ABA200TV M8	WITH(NOLOCK) ON M8.COMP_CODE	= K.COMP_CODE
																		AND  M8.AC_CODE		= ISNULL(AC_CODE4,'')
																		AND  M8.AC_DATA		= ISNULL(AC_DATA4,'')
									LEFT JOIN ABA200TV M9	WITH(NOLOCK) ON M9.COMP_CODE	= K.COMP_CODE
																		AND  M9.AC_CODE		= ISNULL(AC_CODE5,'')
																		AND  M9.AC_DATA		= ISNULL(AC_DATA5,'')
									LEFT JOIN ABA200TV M10	WITH(NOLOCK) ON M10.COMP_CODE	= K.COMP_CODE
																		AND  M10.AC_CODE	= ISNULL(AC_CODE6,'')
																		AND  M10.AC_DATA	= ISNULL(AC_DATA6,'')
							 WHERE ISNULL(MOD_DIVI, '') = ''
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
							   AND K.DIV_CODE IN
									<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
										#{item}
									</foreach>
		</if>
						   ) AS A 
							LEFT JOIN ABA400T M3	WITH(NOLOCK) ON M3.COMP_CODE	= A.COMP_CODE
																AND M3.ACCNT		= A.ACCNT
					 WHERE A.COMP_CODE	 = @COMP_CODE
					   AND A.PEND_CD	!= ''
					   AND A.AC_DATE	&gt;= @DATE_FR
					   AND A.AC_DATE	&lt;= @DATE_TO
		<if test="@foren.Ognl@isNotEmpty(DYNAMIC_CODE_FR)">
					   AND A.PEND_CD	&gt;= #{DYNAMIC_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DYNAMIC_CODE_TO)">
					   AND A.PEND_CD	&lt;= #{DYNAMIC_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_FR)">
					   AND A.ACCNT		&gt;= #{ACCNT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE_TO)">
					   AND A.ACCNT		&lt;= #{ACCNT_CODE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					   AND A.DEPT_CODE	&gt;= #{DEPT_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					   AND A.DEPT_CODE	&lt;= #{DEPT_CODE_TO}
		</if>
				   ) AS X
			
			SET NOCOUNT OFF
			
		<if test="SUM == &quot;2&quot;">
			-- 출력         
			BEGIN 
				SELECT Y.COMP_CODE		AS COMP_CODE
					 , Y.AC_CODE		AS AC_CODE
					 , Y.PEND_CD		AS PEND_CD
					 , MAX(Y.PEND_NAME)	AS PEND_NAME
					 , Y.ACCNT			AS ACCNT
					 , Y.ACCNT_NAME		AS ACCNT_NAME
					 , SUM(Y.WAL_AMT_I)	AS WAL_AMT_I
					 , SUM(Y.DR_AMT_I)	AS DR_AMT_I
					 , SUM(Y.CR_AMT_I)	AS CR_AMT_I
					 , SUM(Y.JAN_AMT_I)	AS JAN_AMT_I
					 , Y.GUBUN			AS GUBUN
				  FROM (
						SELECT A.COMP_CODE
							 , A.AC_CODE
							 , A.PEND_CD
							 , A.PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , 0				AS WAL_AMT_I
							 , SUM(A.DR_AMT_I)	AS DR_AMT_I
							 , SUM(A.CR_AMT_I)	AS CR_AMT_I
							 , 0				AS JAN_AMT_I
							 , '1'				AS GUBUN
						  FROM #AFB210T_0513 A WITH(NOLOCK)
						 GROUP BY A.COMP_CODE, A.AC_CODE, A.PEND_CD, A.PEND_NAME, A.PEND_NAME, A.ACCNT, A.ACCNT_NAME
						
						UNION ALL
						
						--이월
						SELECT A.COMP_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
							 , ''				AS PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
														WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
									   END), 0)	AS WAL_AMT_I
							 , 0				AS DR_AMT_I
							 , 0				AS CR_AMT_I
							 , 0				AS JAN_AMT_I
							 , '1'				AS GUBUN
						  FROM			  AGB200TV C	WITH(NOLOCK)
								LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																	AND C.ACCNT		= A.ACCNT
								INNER JOIN	(
												SELECT COMP_CODE
													 , AC_CODE
													 , PEND_CD
													 , ACCNT
												  FROM #AFB210T_0513
												  GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
											) B  ON B.COMP_CODE = C.COMP_CODE
												AND B.ACCNT = A.ACCNT
												AND B.AC_CODE = CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
												AND B.PEND_CD = CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						 WHERE A.COMP_CODE = @COMP_CODE
						   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
						   AND C.DIV_CODE IN
								<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
									#{item}
								</foreach>
			</if>
						   AND C.AC_DATE &gt;= #{ST_MONTH}
						   AND C.AC_DATE &lt;  @DATE_FR
						 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME
							 , C.JAN_DIVI
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
					
						UNION ALL
						
						--잔액 
						SELECT A.COMP_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
							 , ''				AS PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , 0				AS WAL_AMT_I
							 , 0				AS DR_AMT_I
							 , 0				AS CR_AMT_I 
							 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
														WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
									   END), 0)	AS JAN_AMT_I
							 , '1' AS GUBUN
						  FROM			  AGB200TV C	WITH(NOLOCK)
								LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																	AND C.ACCNT		= A.ACCNT
								INNER JOIN	(
												SELECT COMP_CODE
													 , AC_CODE
													 , PEND_CD
													 , ACCNT
												  FROM #AFB210T_0513
												 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
											) B  ON B.COMP_CODE	= C.COMP_CODE
												AND B.ACCNT		= A.ACCNT
												AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
												AND PEND_CD		= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						 WHERE  A.COMP_CODE = @COMP_CODE
						   AND  ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
						   AND C.DIV_CODE IN
								<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
									#{item}
								</foreach>
			</if>
						   AND C.AC_DATE &gt;= #{ST_MONTH}
						   AND C.AC_DATE &lt;= @DATE_TO
						 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
							 , C.JAN_DIVI
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						
					--	UNION ALL
					
					--	SELECT COMP_CODE
					--		 , CONVERT(NVARCHAR(03), 'ZZZ')	AS AC_CODE
					--		 , CONVERT(NVARCHAR(30), '')	AS PEND_CD
					--		 , CONVERT(NVARCHAR(40), '')	AS PEND_NAME
					--		 , CONVERT(NVARCHAR(16), '')	AS ACCNT
					--		 , CONVERT(NVARCHAR(50), '')	AS ACCNT_NAME
					--		 , 0							AS WAL_AMT_I
					--		 , SUM(DR_AMT_I)				AS DR_AMT_I
					--		 , SUM(CR_AMT_I)				AS CR_AMT_I
					--		 , 0							AS JAN_AMT_I 
					--		 , '3'							AS GUBUN
					--	  FROM #AFB210T_0513 WITH (NOLOCK)
					--	 GROUP BY COMP_CODE
					
						UNION ALL
						
						SELECT X1.COMP_CODE  AS COMP_CODE
							 , X1.AC_CODE
							 , X1.PEND_CD
							 , MAX(X1.PEND_NAME)			AS PEND_NAME
							 , CONVERT(NVARCHAR(16), 'ZZZ')	AS ACCNT
							 , CONVERT(NVARCHAR(50), '')	AS ACCNT_NAME
							 , SUM(X1.WAL_AMT_I)			AS WAL_AMT_I
							 , SUM(X1.DR_AMT_I)				AS DR_AMT_I
							 , SUM(X1.CR_AMT_I)				AS CR_AMT_I
							 , SUM(X1.JAN_AMT_I)			AS JAN_AMT_I
							 , '2'							AS GUBUN
						  FROM (
								SELECT A.COMP_CODE
									 , A.AC_CODE
									 , A.PEND_CD
									 , A.PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , SUM(A.DR_AMT_I)	AS DR_AMT_I
									 , SUM(A.CR_AMT_I)	AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '2'				AS GUBUN
								  FROM #AFB210T_0513 A WITH (NOLOCK)
								 GROUP BY A.COMP_CODE, A.AC_CODE, A.PEND_CD, A.PEND_NAME, A.PEND_NAME, A.ACCNT, A.ACCNT_NAME
								
								UNION ALL
								
								--이월
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0)) 
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0)) 
											   END), 0)	AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '1'				AS GUBUN
								  FROM  		  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND B.PEND_CD	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE  A.COMP_CODE = @COMP_CODE
								   AND  ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt; @DATE_FR
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								
								UNION ALL
								
								--잔액 
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I 
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
											   END), 0)	AS JAN_AMT_I  
									 , '1'				AS GUBUN
								  FROM			  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND PEND_CD		= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE A.COMP_CODE = @COMP_CODE
								   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt;= @DATE_TO
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
							   ) X1 
						 GROUP BY X1.COMP_CODE
							 , X1.AC_CODE
							 , X1.PEND_CD
						 --ORDER BY X1.AC_CODE, X1.PEND_CD, X1.PEND_NAME, X1.ACCNT, X1.GUBUN
						
						UNION ALL
						
						SELECT X2.COMP_CODE					AS COMP_CODE
							 , CONVERT(NVARCHAR(03), 'ZZZ')	AS AC_CODE
							 , CONVERT(NVARCHAR(30), '')	AS PEND_CD
							 , CONVERT(NVARCHAR(40), '')	AS PEND_NAME
							 , CONVERT(NVARCHAR(16), '')	AS ACCNT
							 , CONVERT(NVARCHAR(50), '')	AS ACCNT_NAME
							 , SUM(X2.WAL_AMT_I)			AS WAL_AMT_I
							 , SUM(X2.DR_AMT_I)				AS DR_AMT_I
							 , SUM(X2.CR_AMT_I)				AS CR_AMT_I
							 , SUM(X2.JAN_AMT_I)			AS JAN_AMT_I
							 , '3'							AS GUBUN
						  FROM (
								SELECT A.COMP_CODE
									 , A.AC_CODE
									 , A.PEND_CD
									 , A.PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , SUM(A.DR_AMT_I)	AS DR_AMT_I
									 , SUM(A.CR_AMT_I)	AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '2'				AS GUBUN
								  FROM #AFB210T_0513 A WITH (NOLOCK)
								 GROUP BY A.COMP_CODE, A.AC_CODE, A.PEND_CD, A.PEND_NAME, A.PEND_NAME, A.ACCNT, A.ACCNT_NAME
								
								UNION ALL
								
								--이월
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0)) 
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0)) 
											   END), 0)	AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '1'				AS GUBUN
								  FROM			  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND B.PEND_CD	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE A.COMP_CODE = @COMP_CODE
								   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt;  @DATE_FR
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								
								UNION ALL
								
								--잔액 
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
											   END), 0)	AS JAN_AMT_I
									, '1'				AS GUBUN
								  FROM			  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND PEND_CD		= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE A.COMP_CODE = @COMP_CODE
								   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt;= @DATE_TO
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
							   ) X2
						 GROUP BY X2.COMP_CODE
					   ) Y
				 GROUP BY Y.COMP_CODE
					 , Y.AC_CODE
					 , Y.PEND_CD
					 , Y.ACCNT
					 , Y.ACCNT_NAME
					 , Y.GUBUN
				 ORDER BY Y.AC_CODE, Y.PEND_CD, Y.ACCNT, Y.GUBUN
			END
		</if>
		<if test="SUM == &quot;1&quot;">
			-- 미출력    
			BEGIN 
				SELECT Y.COMP_CODE		AS COMP_CODE
					 , Y.AC_CODE		AS AC_CODE
					 , Y.PEND_CD		AS PEND_CD
					 , MAX(Y.PEND_NAME)	AS PEND_NAME
					 , Y.ACCNT			AS ACCNT
					 , Y.ACCNT_NAME		AS ACCNT_NAME
					 , SUM(Y.WAL_AMT_I)	AS WAL_AMT_I
					 , SUM(Y.DR_AMT_I)	AS DR_AMT_I
					 , SUM(Y.CR_AMT_I)	AS CR_AMT_I
					 , SUM(Y.JAN_AMT_I)	AS JAN_AMT_I
					 , Y.GUBUN			AS GUBUN
				  FROM (
						SELECT A.COMP_CODE
							 , A.AC_CODE
							 , A.PEND_CD
							 , A.PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , 0				AS WAL_AMT_I
							 , SUM(A.DR_AMT_I)	AS DR_AMT_I
							 , SUM(A.CR_AMT_I)	AS CR_AMT_I
							 , 0				AS JAN_AMT_I
							 , '1'				AS GUBUN
						  FROM #AFB210T_0513 A WITH(NOLOCK)
						 GROUP BY A.COMP_CODE, A.AC_CODE, A.PEND_CD, A.PEND_NAME, A.PEND_NAME, A.ACCNT, A.ACCNT_NAME
						
						UNION ALL
						
						--이월
						SELECT A.COMP_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
							 , ''				AS PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
														WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
									   END), 0)	AS WAL_AMT_I
							 , 0				AS DR_AMT_I
							 , 0				AS CR_AMT_I
							 , 0				AS JAN_AMT_I
							 , '1'				AS GUBUN
						  FROM			  AGB200TV C	WITH(NOLOCK)
								LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																	AND C.ACCNT		= A.ACCNT
								INNER JOIN	(
												SELECT COMP_CODE
													 , AC_CODE
													 , PEND_CD
													 , ACCNT
												  FROM #AFB210T_0513
												  GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
											) B  ON B.COMP_CODE = C.COMP_CODE
												AND B.ACCNT = A.ACCNT
												AND B.AC_CODE = CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
												AND B.PEND_CD = CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						 WHERE A.COMP_CODE = @COMP_CODE
						   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
						   AND C.DIV_CODE IN
								<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
									#{item}
								</foreach>
			</if>
						   AND C.AC_DATE &gt;= #{ST_MONTH}
						   AND C.AC_DATE &lt;  @DATE_FR
						 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME
							 , C.JAN_DIVI
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
					
						UNION ALL
						
						--잔액 
						SELECT A.COMP_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
							 , ''				AS PEND_NAME
							 , A.ACCNT
							 , A.ACCNT_NAME
							 , 0				AS WAL_AMT_I
							 , 0				AS DR_AMT_I
							 , 0				AS CR_AMT_I 
							 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
														WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
									   END), 0)	AS JAN_AMT_I
							 , '1' AS GUBUN
						  FROM			  AGB200TV C	WITH(NOLOCK)
								LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																	AND C.ACCNT		= A.ACCNT
								INNER JOIN	(
												SELECT COMP_CODE
													 , AC_CODE
													 , PEND_CD
													 , ACCNT
												  FROM #AFB210T_0513
												 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
											) B  ON B.COMP_CODE	= C.COMP_CODE
												AND B.ACCNT		= A.ACCNT
												AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
												AND PEND_CD		= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						 WHERE  A.COMP_CODE = @COMP_CODE
						   AND  ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
						   AND C.DIV_CODE IN
								<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
									#{item}
								</foreach>
			</if>
						   AND C.AC_DATE &gt;= #{ST_MONTH}
						   AND C.AC_DATE &lt;= @DATE_TO
						 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
							 , C.JAN_DIVI
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
							 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
						
					--	UNION ALL
					
					--	SELECT COMP_CODE
					--		 , CONVERT(NVARCHAR(03), 'ZZZ')	AS AC_CODE
					--		 , CONVERT(NVARCHAR(30), '')	AS PEND_CD
					--		 , CONVERT(NVARCHAR(40), '')	AS PEND_NAME
					--		 , CONVERT(NVARCHAR(16), '')	AS ACCNT
					--		 , CONVERT(NVARCHAR(50), '')	AS ACCNT_NAME
					--		 , 0							AS WAL_AMT_I
					--		 , SUM(DR_AMT_I)				AS DR_AMT_I
					--		 , SUM(CR_AMT_I)				AS CR_AMT_I
					--		 , 0							AS JAN_AMT_I 
					--		 , '3'							AS GUBUN
					--	  FROM #AFB210T_0513 WITH (NOLOCK)
					--	 GROUP BY COMP_CODE
					
						UNION ALL
						
						SELECT X2.COMP_CODE					AS COMP_CODE
							 , CONVERT(NVARCHAR(03), 'ZZZ')	AS AC_CODE
							 , CONVERT(NVARCHAR(30), '')	AS PEND_CD
							 , CONVERT(NVARCHAR(40), '')	AS PEND_NAME
							 , CONVERT(NVARCHAR(16), '')	AS ACCNT
							 , CONVERT(NVARCHAR(50), '')	AS ACCNT_NAME
							 , SUM(X2.WAL_AMT_I)			AS WAL_AMT_I
							 , SUM(X2.DR_AMT_I)				AS DR_AMT_I
							 , SUM(X2.CR_AMT_I)				AS CR_AMT_I
							 , SUM(X2.JAN_AMT_I)			AS JAN_AMT_I
							 , '3'							AS GUBUN
						  FROM (
								SELECT A.COMP_CODE
									 , A.AC_CODE
									 , A.PEND_CD
									 , A.PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , SUM(A.DR_AMT_I)	AS DR_AMT_I
									 , SUM(A.CR_AMT_I)	AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '2'				AS GUBUN
								  FROM #AFB210T_0513 A WITH (NOLOCK)
								 GROUP BY A.COMP_CODE, A.AC_CODE, A.PEND_CD, A.PEND_NAME, A.PEND_NAME, A.ACCNT, A.ACCNT_NAME
								
								UNION ALL
								
								--이월
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0)) 
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0)) 
											   END), 0)	AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I
									 , 0				AS JAN_AMT_I
									 , '1'				AS GUBUN
								  FROM			  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND B.PEND_CD	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE  A.COMP_CODE = @COMP_CODE
								   AND  ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt; @DATE_FR
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME 
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								
								UNION ALL
								
								--잔액 
								SELECT A.COMP_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END	AS AC_CODE
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END	AS PEND_CD
									 , ''				AS PEND_NAME
									 , A.ACCNT
									 , A.ACCNT_NAME
									 , 0				AS WAL_AMT_I
									 , 0				AS DR_AMT_I
									 , 0				AS CR_AMT_I 
									 , ISNULL((CASE C.JAN_DIVI	WHEN '1' THEN SUM(ISNULL(C.DR_AMT_I, 0)) - SUM(ISNULL(C.CR_AMT_I, 0))
																WHEN '2' THEN SUM(ISNULL(C.CR_AMT_I, 0)) - SUM(ISNULL(C.DR_AMT_I, 0))
											   END), 0)	AS JAN_AMT_I  
									 , '1'				AS GUBUN
								  FROM			  AGB200TV C	WITH(NOLOCK)
										LEFT JOIN ABA400T  A	WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
																			AND C.ACCNT		= A.ACCNT
										INNER JOIN	(
														SELECT COMP_CODE
															 , AC_CODE
															 , PEND_CD
															 , ACCNT
														  FROM #AFB210T_0513
														 GROUP BY COMP_CODE, AC_CODE, PEND_CD, ACCNT
													) B  ON B.COMP_CODE	= C.COMP_CODE
														AND B.ACCNT		= A.ACCNT
														AND B.AC_CODE	= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
														AND PEND_CD		= CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
								 WHERE A.COMP_CODE = @COMP_CODE
								   AND ((C.BOOK_CODE1 = @GUBUN) OR ( C.BOOK_CODE2 = @GUBUN))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
								   AND C.DIV_CODE IN
										<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
											#{item}
										</foreach>
			</if>
								   AND C.AC_DATE &gt;= #{ST_MONTH}
								   AND C.AC_DATE &lt;= @DATE_TO
								 GROUP BY A.COMP_CODE, A.ACCNT, A.ACCNT_NAME
									 , C.JAN_DIVI
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_CODE1 ELSE C.BOOK_CODE2 END
									 , CASE WHEN C.BOOK_CODE1 = @GUBUN THEN C.BOOK_DATA1 ELSE C.BOOK_DATA2 END
							   ) X2
						 GROUP BY X2.COMP_CODE
					   ) Y
				 GROUP BY Y.COMP_CODE
					 , Y.AC_CODE
					 , Y.PEND_CD
					 , Y.ACCNT
					 , Y.ACCNT_NAME
					 , Y.GUBUN
				 ORDER BY Y.AC_CODE, Y.PEND_CD, Y.ACCNT, Y.GUBUN
			END
		</if>
		END
	</select>
</mapper>