<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afn201ukrServiceImpl">
					
<select id="afn201ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/*UAfn01Krv.Cafn200UKR[fnafn200nq] Query1*/
SELECT A.NOTE_DIVI
     , A.NOTE_NUM
     , A.BANK_CODE
     , B.CUSTOM_NAME AS BANK_NAME
     , A.INSOCK_DATE
     , A.FLOAT_DATE
     , A.SET_DATE 
     , A.PROC_SW
     , A.UPDATE_DB_USER
     , A.UPDATE_DB_TIME
     , A.COMP_CODE
FROM            AFN200T AS A WITH (NOLOCK)
     LEFT  JOIN BCM100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                          AND B.CUSTOM_CODE = A.BANK_CODE
                                          AND B.CUSTOM_TYPE = '4'
WHERE A.COMP_CODE = #{S_COMP_CODE}
<if test="@foren.Ognl@isNotEmpty(NOTE_DIVI)">
	AND A.NOTE_DIVI = #{NOTE_DIVI}
</if>
<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
	AND A.BANK_CODE LIKE '%'+ #{BANK_CODE} + '%'
</if>
<if test="@foren.Ognl@isNotEmpty(INSOCK_DATE_FR)">
	AND A.INSOCK_DATE &gt;= #{INSOCK_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(INSOCK_DATE_TO)">
	AND A.INSOCK_DATE &lt;= #{INSOCK_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(NOTE_NUM_FR)">
	AND A.NOTE_NUM &gt;= #{NOTE_NUM_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(NOTE_NUM_TO)">
	AND A.NOTE_NUM &lt;= #{NOTE_NUM_TO}
 </if>

</select>

<insert id="afn201ukrServiceImpl.insertBatch" parameterType="Map">     
/*UAfn01Krv.Cafn200UKR[fnafn200set] Query3*/

INSERT INTO AFN200T
     ( NOTE_DIVI
     , NOTE_NUM
     , BANK_CODE
     , INSOCK_DATE
     , PROC_SW
     , FLOAT_DATE
     , SET_DATE
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( CASE WHEN #{NOTE_DIVI} = '지급어음' THEN '1'
            WHEN #{NOTE_DIVI} = '수표'     THEN '2'
            ELSE '9'
       END        
     , #{NOTE_NUM}         
     , #{BANK_CODE}        
     , #{INSOCK_DATE}      
     , CASE WHEN #{PROC_SW} = '발행'     THEN '1'
            WHEN #{PROC_SW} = '미발행'   THEN '2'
            WHEN #{PROC_SW} = '결제'     THEN '3'
            WHEN #{PROC_SW} = '폐기'     THEN '4'
            WHEN #{PROC_SW} = '반결제'   THEN '5'
            ELSE '9'
       END   
     , #{FLOAT_DATE}
     , #{SET_DATE} 
     , #{S_USER_ID}   
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
)
</insert>

<insert id="afn201ukrServiceImpl.insertDetail" parameterType="Map">    	
/*UAfn01Krv.Cafn200UKR[fnafn200set] Query3*/

INSERT INTO AFN200T
     ( NOTE_DIVI
     , NOTE_NUM
     , BANK_CODE
     , INSOCK_DATE
     , PROC_SW
     , FLOAT_DATE
     , SET_DATE
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{NOTE_DIVI}        
     , #{NOTE_NUM}         
     , #{BANK_CODE}        
     , #{INSOCK_DATE}      
     , #{PROC_SW}   
     , #{FLOAT_DATE}
     , #{SET_DATE}       
     , #{S_USER_ID}   
     , GETDATE()
     , #{S_COMP_CODE}        
     )
</insert>
	
<update id="afn201ukrServiceImpl.updateDetail" parameterType="Map">		
/*UAfn01Krv.Cafn200UKR[fnafn200set] Query3*/

UPDATE AFN200T
   SET INSOCK_DATE    = #{INSOCK_DATE}
     , FLOAT_DATE     = #{FLOAT_DATE}
     , SET_DATE       = #{SET_DATE}
     , PROC_SW        = #{PROC_SW}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE NOTE_DIVI      = #{NOTE_DIVI}
   AND NOTE_NUM       = #{NOTE_NUM}
   AND BANK_CODE      = #{BANK_CODE}
   AND COMP_CODE      = #{S_COMP_CODE}

</update>

<update id="afn201ukrServiceImpl.deleteDetail" parameterType="Map">
  /*UAfn01Krv.Cafn200UKR[fnafn200set] Query2*/
DELETE FROM AFN200T 
 WHERE NOTE_DIVI = #{NOTE_DIVI}       
   AND NOTE_NUM  = #{NOTE_NUM}        
   AND BANK_CODE = #{BANK_CODE}       
   AND COMP_CODE = #{S_COMP_CODE}     
  
</update>

<select id="afn201ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
</select>
	
	
</mapper>