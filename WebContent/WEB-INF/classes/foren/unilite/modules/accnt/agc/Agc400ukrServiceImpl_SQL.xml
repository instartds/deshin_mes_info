<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agc400ukrServiceImpl">
	
	<select id="agc400ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		-- 1. 변수 선언 및 설정
		DECLARE @COMP_CODE			NVARCHAR(08)
	          , @DIV_CODE           NVARCHAR(08)            -- 사업장
			  , @AC_YYYYMM			NVARCHAR(06)            -- 평가년월
	          , @GUBUN              NVARCHAR(01)            -- 구분
	          , @MONEY_UNIT         NVARCHAR(03)            -- 화폐단위
	          , @ACCNT              NVARCHAR(16)            -- 계정코드
	
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DIV_CODE	= #{DIV_CODE}
		SET @AC_YYYYMM	= REPLACE(#{AC_YYYYMM}, '.','')
		SET @GUBUN	    = #{GUBUN}
		SET @MONEY_UNIT	= #{MONEY_UNIT}
		SET @ACCNT		= #{ACCNT}
	
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.AC_YYYYMM
			 , A.GUBUN
			 , A.MONEY_UNIT
			 , B.ACCNT        AS ACCNT
			 , B.SEQ	
			 , B.D_ACCNT
			 , B.D_DIV_CODE   
			 , C.ACCNT_NAME     AS D_ACCNT_NAME
			 , B.D_CUSTOM_CODE  AS D_CUSTOM_CODE
			 , D.CUSTOM_NAME    AS D_CUSTOM_NAME
			 , B.D_MONEY_UNIT   AS D_MONEY_UNIT
			 , B.JAN_FOR_AMT
			 , B.EXCHG_RATE_O
			 , B.JAN_AMT
			 , B.EVAL_EXCHG_RATE
			 , B.EVAL_JAN_AMT
			 , B.EVAL_DIFF_AMT
			 , ''          AS FLAG
			 , A.EX_DATE
			 , A.J_EX_DATE
			 , ORG_AC_DATE
			 , ORG_SLIP_NUM
		  FROM            AGC400T A WITH (NOLOCK)
	           INNER JOIN AGC401T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
	                                             AND B.AC_YYYYMM   = A.AC_YYYYMM 
	                                             AND B.DIV_CODE    = A.DIV_CODE  
	                                             AND B.GUBUN       = A.GUBUN     
	                                             AND B.MONEY_UNIT  = A.MONEY_UNIT
	                                             AND B.ACCNT       = A.ACCNT     
	           INNER JOIN ABA400T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
							                     AND C.ACCNT       = B.D_ACCNT
	           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
							                     AND D.CUSTOM_CODE = B.D_CUSTOM_CODE
	     WHERE A.COMP_CODE  = @COMP_CODE
		   AND A.DIV_CODE   = @DIV_CODE
		   AND A.AC_YYYYMM  = @AC_YYYYMM
		   AND A.GUBUN      = @GUBUN
		   AND A.MONEY_UNIT = @MONEY_UNIT
		   AND A.ACCNT      = @ACCNT
		 ORDER BY B.D_ACCNT, B.D_CUSTOM_CODE, B.D_MONEY_UNIT
	</select>	
	<select id="agc400ukrServiceImpl.selectNewList" parameterType="Map" resultType="rMap">
		-- 1. 변수 선언 및 설정
		DECLARE @COMP_CODE			NVARCHAR(08)
	          , @DIV_CODE           NVARCHAR(08)            -- 사업장
			  , @AC_YYYYMM			NVARCHAR(06)            -- 평가년월
	          , @GUBUN              NVARCHAR(01)            -- 구분
	          , @MONEY_UNIT         NVARCHAR(03)            -- 화폐단위
	          , @ACCNT              NVARCHAR(16)            -- 계정코드
	          , @START_DATE			NVARCHAR(08)
			  , @LAST_DATE			NVARCHAR(08)
	
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DIV_CODE	= #{DIV_CODE}
		SET @AC_YYYYMM	= #{AC_YYYYMM}
		SET @GUBUN	    = #{GUBUN}
		SET @MONEY_UNIT	= #{MONEY_UNIT}
		SET @ACCNT		= #{ACCNT}
	
		SET @LAST_DATE	= CONVERT(NVARCHAR(08), DATEADD(D, -1, DATEADD(M, 1, @AC_YYYYMM + '01')), 112)
		
		IF(@GUBUN = '1' )
		BEGIN
			SELECT A.COMP_CODE
				 , @DIV_CODE        AS DIV_CODE
				 , @AC_YYYYMM	    AS AC_YYYYMM
			     , @GUBUN	        AS GUBUN
			     , @MONEY_UNIT	    AS MONEY_UNIT
			     , @ACCNT		    AS ACCNT
			     , A.DIV_CODE       AS D_DIV_CODE
				 , A.ACCNT		    AS D_ACCNT		
				 , B.ACCNT_NAME     AS D_ACCNT_NAME
				 , A.PEND_DATA_CODE	AS D_CUSTOM_CODE
				 , D.CUSTOM_NAME    AS D_CUSTOM_NAME
				 , A.MONEY_UNIT     AS D_MONEY_UNIT
				 , A.ORG_AC_DATE
                 , A.ORG_SLIP_NUM
				 , CASE WHEN A.MONEY_UNIT = 'KRW' THEN A.BLN_I	ELSE A.FOR_BLN_I	END	AS JAN_FOR_AMT
				 , CASE WHEN A.MONEY_UNIT = 'KRW' THEN 1		ELSE A.EXCHG_RATE_O	END	AS EXCHG_RATE_O
				 , A.BLN_I		AS JAN_AMT
				 , 0			AS EVAL_EXCHG_RATE
				 , 0			AS EVAL_JAN_AMT
				 , 0			AS EVAL_DIFF_AMT
				 , 'S'          AS FLAG
				 , ''           AS EX_DATE
				 , ''           AS J_EX_DATE
			  FROM            AGB300T A WITH (NOLOCK)
		           INNER JOIN ABA400T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
								                     AND B.ACCNT       = A.ACCNT
		           INNER JOIN AGA400T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                             AND C.GUBUN       = @GUBUN
		                                             AND C.ACCNT       = A.ACCNT
		           LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
								                     AND D.CUSTOM_CODE = A.PEND_DATA_CODE
		     WHERE A.COMP_CODE     = @COMP_CODE
			   AND A.DIV_CODE      = @DIV_CODE
			   AND A.ORG_AC_DATE  &lt;= @LAST_DATE
			   AND A.MONEY_UNIT    = @MONEY_UNIT
			   AND A.BLN_I         &gt; 0
			   AND A.PEND_CODE     = 'A4'
			   AND ((@ACCNT IS NULL)	OR (@ACCNT = '') OR (A.ACCNT = @ACCNT))
			 ORDER BY A.ACCNT, A.PEND_DATA_CODE, A.MONEY_UNIT, A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ
			 
		 END
		 ELSE 
		 BEGIN
		    --당기시작일 
		 	SET @START_DATE   = LEFT(#{STDT}, 6)
		 	
		 	SELECT COMP_CODE
		 	 	 , @DIV_CODE        AS DIV_CODE
				 , @AC_YYYYMM	    AS AC_YYYYMM
			     , @GUBUN	        AS GUBUN
			     , @MONEY_UNIT	    AS MONEY_UNIT
			     , @ACCNT		    AS ACCNT
		         , DIV_CODE 		AS D_DIV_CODE
		         , ACCNT			AS D_ACCNT	
		         , ACCNT_NAME		AS D_ACCNT_NAME
		         , BOOK_DATA1   	AS D_CUSTOM_CODE
		         , BOOK_NAME1   	AS D_CUSTOM_NAME
		         , MONEY_UNIT 		AS D_MONEY_UNIT
		         , NULL AS ORG_AC_DATE
		         , NULL AS ORG_SLIP_NUM
		         , JAN_FOR_AMT_I AS JAN_FOR_AMT
		         , (CASE WHEN JAN_FOR_AMT_I = 0 THEN 0 ELSE JAN_AMT_I / JAN_FOR_AMT_I END) AS EXCHG_RATE_O
		         , JAN_AMT_I    AS JAN_AMT
				 , 0			AS EVAL_EXCHG_RATE
				 , 0			AS EVAL_JAN_AMT
				 , 0			AS EVAL_DIFF_AMT
				 , 'S'          AS FLAG
				 , ''           AS EX_DATE
				 , ''           AS J_EX_DATE
		      FROM (SELECT A.COMP_CODE
		                 , A.DIV_CODE 
		                 , A.ACCNT
		                 , A.ACCNT_NAME
		                 , CASE WHEN ISNULL(A.BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(A.BOOK_DATA1,'') END AS BOOK_DATA1
		                 , ISNULL((SELECT AC_NAME 
		                             FROM ABA200TV   WITH (NOLOCK)
		                            WHERE COMP_CODE = A.COMP_CODE
		                              AND AC_CODE   = A.BOOK_CODE1 
		                              AND AC_DATA   = CASE WHEN ISNULL(A.BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(A.BOOK_DATA1,'') END),'') BOOK_NAME1
		                 , A.MONEY_UNIT
		                 , SUM(CASE WHEN A.AC_DATE BETWEEN @START_DATE AND @LAST_DATE
		                            THEN CASE A.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_FOR_AMT_I,0) - ISNULL(A.CR_FOR_AMT_I,0)
		                                                 WHEN '2' THEN ISNULL(A.CR_FOR_AMT_I,0) - ISNULL(A.DR_FOR_AMT_I,0)
		                                  END
		                            ELSE 0 
		                        END) JAN_FOR_AMT_I
		                 , SUM(CASE WHEN A.AC_DATE BETWEEN @START_DATE AND @LAST_DATE
		                            THEN CASE A.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                                 WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
		                                  END
		                            ELSE 0
		                        END) JAN_AMT_I
		              FROM            AGB110TV A WITH (NOLOCK)
		                   INNER JOIN AGA400T  C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                      AND C.GUBUN     = @GUBUN
		                                                      AND C.ACCNT     = A.ACCNT
		             WHERE A.COMP_CODE  = @COMP_CODE
			           AND A.DIV_CODE   = @DIV_CODE
		               AND A.MONEY_UNIT = @MONEY_UNIT
		               AND A.AC_DATE   &gt;= @START_DATE
		               AND A.AC_DATE   &lt;= @LAST_DATE
		               AND A.FOR_YN     = 'Y'
		   	           AND ((@ACCNT = NULL)	OR (@ACCNT = '') OR (A.ACCNT = @ACCNT))
		             GROUP BY A.COMP_CODE,A.DIV_CODE, A.ACCNT, ACCNT_NAME, A.MONEY_UNIT
		                    , CASE WHEN ISNULL(A.BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(A.BOOK_DATA1,'') END
		                    , BOOK_CODE1
		           ) T 
		     WHERE (T.JAN_FOR_AMT_I != 0 Or T.JAN_AMT_I != 0)
		     ORDER BY ACCNT, BOOK_DATA1, MONEY_UNIT
		 END
	</select>	
	<select id="agc400ukrServiceImpl.getExchgRate" parameterType="Map" resultType="rMap">
		BEGIN
			DECLARE	@COMP_CODE	NVARCHAR(08)	= #{S_COMP_CODE}
				  , @AC_DATE	NVARCHAR(06)	= #{AC_DATE}
				  , @MONEY_UNIT	NVARCHAR(10)	= #{MONEY_UNIT}
				  , @LAST_DATE	NVARCHAR(08)	= ''
		
			SET @LAST_DATE = CONVERT(NVARCHAR(08), DATEADD(D, -1, DATEADD(M, 1, @AC_DATE + '01')), 112)
		
			SELECT TOP 1
				   AC_DATE
				 , BASE_EXCHG
			  FROM (
					SELECT AC_DATE
						 , BASE_EXCHG
					  FROM BCM510T
					 WHERE COMP_CODE	= @COMP_CODE
					   AND EXCHG_DIVI	= '1'
					   AND MONEY_UNIT	= @MONEY_UNIT
					   AND AC_DATE		= @AC_DATE
		
					UNION ALL
			
					SELECT AC_DATE
						 , BASE_EXCHG
					  FROM BCM510T
					 WHERE COMP_CODE	= @COMP_CODE
					   AND EXCHG_DIVI	= '2'
					   AND MONEY_UNIT	= @MONEY_UNIT
					   AND AC_DATE		= @LAST_DATE
			   
					UNION ALL
			
					SELECT @LAST_DATE
						 , 0			AS BASE_EXCHG
				   ) A
		END
	</select>
	<select id="agc400ukrServiceImpl.selectCheckMaster" parameterType="Map" resultType="rMap">
		SELECT COUNT(*) AS CNT 
              FROM AGC400T WITH (NOLOCK)
             WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
	</select>	
	<insert  id="agc400ukrServiceImpl.insertMaster" parameterType="Map">
			INSERT INTO AGC400T
			(
				   COMP_CODE   
				 , AC_YYYYMM 
				 , DIV_CODE  
				 , GUBUN     
				 , MONEY_UNIT
				 , ACCNT     
				 , INSERT_DB_USER	
				 , INSERT_DB_TIME	
				 , UPDATE_DB_USER	
				 , UPDATE_DB_TIME						
			
			)  VALUES  (
			      #{S_COMP_CODE}   
				, #{AC_YYYYMM} 
				, #{DIV_CODE}  
				, #{GUBUN}     
				, #{MONEY_UNIT}
				, #{ACCNT}     
				, #{S_USER_ID}
			    , getDate()
			    , #{S_USER_ID}
			    , getDate()
			)
	</insert>
	<delete  id="agc400ukrServiceImpl.deleteMaster" parameterType="Map">
		DELETE FROM AGC400T				
		 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
	</delete>
	<select id="agc400ukrServiceImpl.selectSeq" parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(SEQ), 0) + 1 AS SEQ 
              FROM AGC401T WITH (NOLOCK)
             WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
	</select>	
	<insert  id="agc400ukrServiceImpl.insertDetail" parameterType="Map">
			INSERT INTO AGC401T
			(
				   COMP_CODE   
				 , AC_YYYYMM 
				 , DIV_CODE  
				 , GUBUN     
				 , MONEY_UNIT
				 , ACCNT    
				 , SEQ
				 
				 , D_DIV_CODE     
				 , D_ACCNT        
				 , D_CUSTOM_CODE  
				 , D_MONEY_UNIT   
				 , JAN_FOR_AMT    
				 , EXCHG_RATE_O   
				 , JAN_AMT        
				 , EVAL_EXCHG_RATE
				 , EVAL_JAN_AMT   
				 , EVAL_DIFF_AMT  
				 
				 , ORG_AC_DATE
				 , ORG_SLIP_NUM
				 , INSERT_DB_USER	
				 , INSERT_DB_TIME	
				 , UPDATE_DB_USER	
				 , UPDATE_DB_TIME						
			
			)  VALUES  (
			      #{S_COMP_CODE}   
				, #{AC_YYYYMM} 
				, #{DIV_CODE}  
				, #{GUBUN}     
				, #{MONEY_UNIT}
				, #{ACCNT}  
				, #{SEQ}   
				, #{D_DIV_CODE}     
				, #{D_ACCNT}        
				, #{D_CUSTOM_CODE}  
				, #{D_MONEY_UNIT}   
				, #{JAN_FOR_AMT}    
				, #{EXCHG_RATE_O}   
				, #{JAN_AMT}        
				, #{EVAL_EXCHG_RATE}
				, #{EVAL_JAN_AMT}   
				, #{EVAL_DIFF_AMT}  
				, #{ORG_AC_DATE}
				, #{ORG_SLIP_NUM}				
				, #{S_USER_ID}
			    , getDate()
			    , #{S_USER_ID}
			    , getDate()
			)	
	</insert>
	<update  id="agc400ukrServiceImpl.updateDetail" parameterType="Map">
			UPDATE AGC401T
  			  SET  
				   EVAL_EXCHG_RATE= #{EVAL_EXCHG_RATE}
				 , EVAL_JAN_AMT   = #{EVAL_JAN_AMT}
				 , EVAL_DIFF_AMT  = #{EVAL_DIFF_AMT}
				 , UPDATE_DB_USER = #{S_USER_ID}	
				 , UPDATE_DB_TIME =	GETDATE()					
			WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
			   AND SEQ         = #{SEQ}
	</update>
	<delete  id="agc400ukrServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM AGC401T				
		 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
			   AND SEQ         = #{SEQ}
	</delete>
	<select id="agc400ukrServiceImpl.selectCheckDelete" parameterType="Map" resultType="rMap">
		SELECT EX_DATE , J_EX_NUM
              FROM AGC400T WITH (NOLOCK)
             WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
	</select>	
	<select id="agc400ukrServiceImpl.selectRef1" parameterType="Map" resultType="rMap">
	    DECLARE @COMP_CODE			NVARCHAR(08)
	          , @DIV_CODE           NVARCHAR(08)            -- 사업장
			  , @AC_YYYYMM			NVARCHAR(06)            -- 평가년월
	          , @MONEY_UNIT         NVARCHAR(03)            -- 화폐단위
	
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DIV_CODE	= #{DIV_CODE}
		SET @AC_YYYYMM	= #{AC_YYYYMM}
		SET @MONEY_UNIT	= #{MONEY_UNIT}
	
		SELECT A.COMP_CODE                                          -- 법인
			 , A.DIV_CODE                                           -- 사업장
			 , LEFT(A.AC_YYYYMM,4) + '.' + RIGHT(A.AC_YYYYMM,2) AS AC_YYYYMM    -- 평가년월
	         , A.GUBUN                                              -- (Hidden) 구분
	         , A.MONEY_UNIT                                         -- 평가통화
	         , A.ACCNT                                              -- (Hidden) 계정코드
	         , M2.ACCNT_NAME                                         -- (Hidden) 계정코드명
	         , SUM(ISNULL(B.EVAL_DIFF_AMT,0))   AS EVAL_DIFF_AMT    -- 평가차액
	         , ISNULL(A.EX_DATE  ,'' )          AS EX_DATE          -- 결의일
	         , ISNULL(A.EX_NUM   ,0  )          AS EX_NUM           -- 결의번호
	         , ISNULL(A.AGREE_YN ,'N')          AS AGREE_YN         -- 환평가전표승인여부
	         , ISNULL(A.J_EX_DATE,'' )          AS J_EX_DATE        -- 차감결의일
	         , ISNULL(A.J_EX_NUM ,0  )          AS J_EX_NUM         -- 차감결의번호
	         , M1.USER_NAME						AS INPUT_USER_NAME  -- 입력자
	         , CONVERT(  NVARCHAR(8) 
	                   , A.INSERT_DB_TIME
	                   , 112)                   AS INPUT_DATE       -- 입력일
		  FROM            AGC400T A WITH (NOLOCK)
	           INNER JOIN AGC401T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
	                                             AND B.AC_YYYYMM   = A.AC_YYYYMM 
	                                             AND B.DIV_CODE    = A.DIV_CODE  
	                                             AND B.GUBUN       = A.GUBUN     
	                                             AND B.MONEY_UNIT  = A.MONEY_UNIT
	                                             AND B.ACCNT       = A.ACCNT     
	           LEFT JOIN BSA300T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                             AND M1.USER_ID    = A.INSERT_DB_USER
	           LEFT JOIN ABA400T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
	                                             AND M2.ACCNT      = A.ACCNT
	     WHERE A.COMP_CODE     = @COMP_CODE
		   AND ((@AC_YYYYMM  IS NULL) OR (@AC_YYYYMM  = '') OR (A.AC_YYYYMM  = @AC_YYYYMM))
		   AND ((@DIV_CODE   IS NULL) OR (@DIV_CODE   = '') OR (A.DIV_CODE   = @DIV_CODE))
		   AND ((@MONEY_UNIT IS NULL) OR (@MONEY_UNIT = '') OR (A.MONEY_UNIT = @MONEY_UNIT))
	     GROUP BY A.COMP_CODE, A.DIV_CODE, A.AC_YYYYMM, A.GUBUN, A.MONEY_UNIT, A.ACCNT
	            , ISNULL(A.EX_DATE  ,'' )  
	            , ISNULL(A.EX_NUM   ,0  )   
	            , ISNULL(A.AGREE_YN ,'N')
	            , ISNULL(A.J_EX_DATE,'' )
	            , ISNULL(A.J_EX_NUM ,0  ) 
	            , A.INSERT_DB_USER            , A.INSERT_DB_TIME
	            , M2.ACCNT_NAME
	            , M1.USER_NAME
		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.AC_YYYYMM, A.MONEY_UNIT
	</select>
		<delete  id="agc400ukrServiceImpl.deleteAll" parameterType="Map">
		DELETE FROM AGC400T				
		 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
		DELETE FROM AGC401T				
		 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND AC_YYYYMM   = #{AC_YYYYMM}
			   AND DIV_CODE    = #{DIV_CODE}
			   AND GUBUN       = #{GUBUN}
			   AND MONEY_UNIT  = #{MONEY_UNIT}
			   AND ACCNT       = #{ACCNT}
	</delete>
	
</mapper>