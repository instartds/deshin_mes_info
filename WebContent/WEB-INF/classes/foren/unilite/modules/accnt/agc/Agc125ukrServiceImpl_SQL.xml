<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agc125ukrServiceImpl">
	<select id="agc125ukrServiceImpl.checkAGC130T" parameterType="Map" resultType="rMap">
		/*UAgc01Krv.Cagc125UKR[fnagc125q] Query2*/
		SELECT 1 FROM AGC130T  WITH (NOLOCK)
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND AC_STDATE    = #{AC_STDATE}
		   AND AC_TODATE    = #{AC_TODATE}
		   AND CHG_DIVI     = #{CHG_DIVI}
	</select>
	
	<select id="agc125ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/*UAgc01Krv.Cagc125UKR[fnagc125q] Query3*/
		SELECT ISNULL(AC_STDATE, '')      AC_STDATE
		     , ISNULL(AC_TODATE, '')      AC_TODATE
		     , ISNULL(CHG_DIVI, '')       CHG_DIVI 
		     , ISNULL(SEQ, 0.0)           SEQ
		     , ISNULL(ACCNT_CD, '')       ACCNT_CD
		     , ISNULL(ACCNT_NAME, '')     ACCNT_NAME
		     , ISNULL(AMT_I1, 0.0)        AMT_I1
		     , ISNULL(AMT_I2, 0.0)        AMT_I2
		     , ISNULL(AMT_I3, 0.0)        AMT_I3
		     , ISNULL(AMT_I4, 0.0)        AMT_I4
		     , ISNULL(AMT_I5, 0.0)        AMT_I5
		     , ISNULL(AMT_I6, 0.0)        AMT_I6
		     , ISNULL(OPT_DIVI, '')       OPT_DIVI
		     , ISNULL(KIND_DIVI, '')      KIND_DIVI
		     , ISNULL(UPPER_ACCNT_CD, '') UPPER_ACCNT_CD
		     , ISNULL(UPDATE_DB_USER, '') UPDATE_DB_USER
		     , CONVERT(SMALLDATETIME,'')  UPDATE_DB_TIME
		     , COMP_CODE
		  FROM AGC130T  WITH (NOLOCK) 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND AC_STDATE = #{AC_STDATE}
		   AND AC_TODATE = #{AC_TODATE}
		   AND CHG_DIVI  = #{CHG_DIVI}
		 ORDER BY SEQ
	</select>
	
	
	<select id="agc125ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/*UAgc01Krv.Cagc125UKR[fnCreateTmpTbl] Query4*/
SELECT GUBUN
     , DIVI
     , SEQ
     , ACCNT_CD
     , ACCNT_NAME
   /*, ACCNT*/
   /*, KIND_DIVI*/
     , OPT_DIVI
     , DIS_DIVI
     , CAL_DIVI
     , Z.KIND_DIVI
     /*자본금*/
     , CASE KIND_DIVI WHEN '10' THEN SUM( CASE ISNULL(DR_CR,'')   
                                               WHEN '10' THEN ISNULL(AMT_I10,0.0)
                                               WHEN '20' THEN ISNULL(AMT_I20,0.0)
                                               WHEN '30' THEN ISNULL(AMT_I30,0.0)
                                               WHEN '40' THEN ISNULL(AMT_I30,0.0) - ISNULL(AMT_I20,0.0)
                                               WHEN '50' THEN ISNULL(AMT_I50,0.0)
                                               WHEN '60' THEN ISNULL(AMT_I60,0.0)
                                               WHEN '70' THEN ISNULL(AMT_I50,0.0) - ISNULL(AMT_I60,0.0)
                                               WHEN '80' THEN ISNULL(AMT_I80,0.0)
                                           END) * (CASE ISNULL(CAL_DIVI,'')   
                                                        WHEN '1' THEN   1 
                                                        WHEN '2' THEN (-1)   
                                                    END) 
                      ELSE 0.0 
        END AMT_I1
     /*자본잉여금*/
     , CASE KIND_DIVI WHEN '20' THEN SUM(CASE ISNULL(DR_CR,'')   
                                              WHEN '10' THEN ISNULL(AMT_I10,0.0)
                                              WHEN '20' THEN ISNULL(AMT_I20,0.0)
                                              WHEN '30' THEN ISNULL(AMT_I30,0.0)
                                              WHEN '40' THEN ISNULL(AMT_I30,0.0) - ISNULL(AMT_I20,0.0)
                                              WHEN '50' THEN ISNULL(AMT_I50,0.0)
                                              WHEN '60' THEN ISNULL(AMT_I60,0.0)
                                              WHEN '70' THEN ISNULL(AMT_I50,0.0) - ISNULL(AMT_I60,0.0)
                                              WHEN '80' THEN ISNULL(AMT_I80,0.0)
                                          END) * (CASE ISNULL(CAL_DIVI,'')   
                                                       WHEN '1' THEN   1 
                                                       WHEN '2' THEN (-1)   
                                                   END)
                      ELSE 0.0 
        END AMT_I2
     /*자본조정*/
     , CASE KIND_DIVI WHEN '30' THEN SUM(CASE ISNULL(DR_CR,'')   
                                              WHEN '10' THEN ISNULL(AMT_I10,0.0)
                                              WHEN '20' THEN ISNULL(AMT_I20,0.0)
                                              WHEN '30' THEN ISNULL(AMT_I30,0.0)
                                              WHEN '40' THEN ISNULL(AMT_I30,0.0) - ISNULL(AMT_I20,0.0)
                                              WHEN '50' THEN ISNULL(AMT_I50,0.0)
                                              WHEN '60' THEN ISNULL(AMT_I60,0.0)
                                              WHEN '70' THEN ISNULL(AMT_I50,0.0) - ISNULL(AMT_I60,0.0)
                                              WHEN '80' THEN ISNULL(AMT_I80,0.0)
                                          END) * (CASE ISNULL(CAL_DIVI,'')   
                                                       WHEN '1' THEN   1 
                                                       WHEN '2' THEN (-1)   
                                                   END)
                      ELSE 0.0 
        END AMT_I3
     /*기타포괄손익*/
     , CASE KIND_DIVI WHEN '40' THEN SUM(CASE ISNULL(DR_CR,'')   
                                              WHEN '10' THEN ISNULL(AMT_I10,0.0)
                                              WHEN '20' THEN ISNULL(AMT_I20,0.0)
                                              WHEN '30' THEN ISNULL(AMT_I30,0.0)
                                              WHEN '40' THEN ISNULL(AMT_I30,0.0) - ISNULL(AMT_I20,0.0)
                                              WHEN '50' THEN ISNULL(AMT_I50,0.0)
                                              WHEN '60' THEN ISNULL(AMT_I60,0.0)
                                              WHEN '70' THEN ISNULL(AMT_I50,0.0) - ISNULL(AMT_I60,0.0)
                                              WHEN '80' THEN ISNULL(AMT_I80,0.0)
                                          END) * (CASE ISNULL(CAL_DIVI,'')   
                                                       WHEN '1' THEN   1 
                                                       WHEN '2' THEN (-1)   
                                                   END)
                      ELSE 0.0 
        END AMT_I4
      /*이익잉여금*/
      ,CASE KIND_DIVI WHEN '50' THEN SUM(CASE ISNULL(DR_CR,'')   WHEN '10' THEN ISNULL(AMT_I10,0.0)
                                                        WHEN '20' THEN ISNULL(AMT_I20,0.0)
                                                        WHEN '30' THEN ISNULL(AMT_I30,0.0)
                                                        WHEN '40' THEN ISNULL(AMT_I30,0.0) - ISNULL(AMT_I20,0.0)
                                                        WHEN '50' THEN ISNULL(AMT_I50,0.0)
                                                        WHEN '60' THEN ISNULL(AMT_I60,0.0)
                                                        WHEN '70' THEN ISNULL(AMT_I50,0.0) - ISNULL(AMT_I60,0.0)
                                                        WHEN '80' THEN ISNULL(AMT_I80,0.0)
                                 END) * (CASE ISNULL(CAL_DIVI,'')   WHEN '1' THEN   1 
                                                                    WHEN '2' THEN (-1)   END)
                      ELSE 0.0 END AMT_I5
 INTO #TEMP01
 FROM (
 
       SELECT B.GUBUN
            , B.DIVI
            , B.SEQ
            , Z.ACCNT_CD
            , B.ACCNT_NAME
            , Z.ACCNT
            , Z.DR_CR
            , Z.CAL_DIVI
            , B.KIND_DIVI
            , B.OPT_DIVI
            , B.DIS_DIVI
            , SUM(AMT_I10) AS AMT_I10
            , SUM(AMT_I20) AS AMT_I20
            , SUM(AMT_I30) AS AMT_I30
            , SUM(AMT_I50) AS AMT_I50
            , SUM(AMT_I60) AS AMT_I60
            , SUM(AMT_I80) AS AMT_I80
         FROM (
               SELECT A.ACCNT_CD
                    , A.ACCNT
                    , A.DR_CR
                    , A.CAL_DIVI
                    , B.INPUT_PATH
                    , B.AC_DATE
                    /*년초*/
                    , CASE WHEN AC_DATE = #{THIS_ST_DATE} AND INPUT_PATH IN ('A0','A1','10','11') 
                           THEN SUM(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(DR_AMT_I, 0.0) - ISNULL(CR_AMT_I, 0.0)
                                                    WHEN '2' THEN ISNULL(CR_AMT_I, 0.0) - ISNULL(DR_AMT_I, 0.0)
                                                    ELSE 0.0 END)
                           ELSE 0.0 
                       END AS AMT_I10
                    /*기초금액*/
                    ,  CASE WHEN AC_DATE &gt;= #{THIS_ST_DATE} AND AC_DATE &lt; #{AC_STDATE} 
                            THEN SUM(CASE  C.JAN_DIVI WHEN '1' THEN ISNULL(DR_AMT_I,0.0) - ISNULL(CR_AMT_I,0.0)
                                                      WHEN '2' THEN ISNULL(CR_AMT_I,0.0) - ISNULL(DR_AMT_I,0.0)
                                                      ELSE 0.0    END)
                            ELSE 0.0 
                       END AS AMT_I20
                    /*기말잔액*/
                    , CASE WHEN AC_DATE &gt;= #{THIS_ST_DATE} AND AC_DATE &lt;= #{AC_TODATE}
                           THEN SUM(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(DR_AMT_I,0.0) - ISNULL(CR_AMT_I,0.0)
                                                    WHEN '2' THEN ISNULL(CR_AMT_I,0.0) - ISNULL(DR_AMT_I,0.0)
                                                    ELSE 0.0      
                                     END)
                           ELSE 0.0 
                       END AMT_I30
                    /*차변발생*/
                    , CASE WHEN  AC_DATE    &gt;= #{AC_STDATE}   AND AC_DATE    &lt;= #{AC_TODATE}
                           THEN SUM(DR_AMT_I) ELSE 0.0 
                       END AMT_I50
                    /*대변발생*/
                    , CASE WHEN AC_DATE   &gt;= #{AC_STDATE} AND AC_DATE   &lt;= #{AC_TODATE}
                           THEN SUM(CR_AMT_I) ELSE 0.0 
                       END AMT_I60
                    /*대체대변*/
                    , CASE WHEN AC_DATE   &gt;= #{AC_STDATE} AND AC_DATE   &lt;= #{AC_TODATE} AND INPUT_PATH = '52' 
                           THEN SUM(CR_AMT_I) ELSE 0.0 
                       END AMT_I80
                 FROM ABA131T A   WITH (NOLOCK)
                              LEFT OUTER JOIN AGB100TV B   WITH (NOLOCK)
                                           ON B.COMP_CODE = A.COMP_CODE
                                          AND B.ACCNT     = A.ACCNT
                              LEFT OUTER JOIN (SELECT ACCNT
                                                    , JAN_DIVI 
                                                 FROM ABA400T  WITH (NOLOCK)
                                                WHERE COMP_CODE = #{S_COMP_CODE}) C 
                                           ON B.ACCNT = C.ACCNT
                WHERE A.COMP_CODE = #{S_COMP_CODE}
                  AND A.GUBUN     = #{GUBUN}
                  <if test="CHG_DIVI == &quot;1&quot;">
                  AND A.DIVI = '35'
                  </if>
                  <if test="CHG_DIVI != &quot;1&quot;">
                  AND A.DIVI = '36'
                  </if>
                  AND B.AC_DATE &gt;= #{THIS_ST_DATE}
                  AND B.AC_DATE &lt;= #{AC_TODATE}
                GROUP BY A.ACCNT_CD, A.ACCNT, A.DR_CR, A.CAL_DIVI, B.AC_DATE, B.INPUT_PATH
            ) Z 
              LEFT OUTER JOIN ABA120T B WITH (NOLOCK)
                           ON B.COMP_CODE = #{S_COMP_CODE}
                          AND Z.ACCNT_CD  = B.ACCNT_CD
         WHERE B.GUBUN = #{GUBUN}
 
         	<if test="CHG_DIVI == &quot;1&quot;">
            AND B.DIVI = '35'
            </if>
            <if test="CHG_DIVI != &quot;1&quot;">
            AND B.DIVI = '36'
            </if>
         GROUP BY B.GUBUN, B.DIVI,     B.SEQ,       Z.ACCNT_CD, Z.ACCNT
             , Z.DR_CR,    Z.CAL_DIVI, B.KIND_DIVI, B.OPT_DIVI, B.DIS_DIVI
             , B.ACCNT_NAME
      ) Z
 WHERE ISNULL(Z.KIND_DIVI,'') != ''
 GROUP BY Z.GUBUN, Z.DIVI,   Z.SEQ,       Z.ACCNT_CD,   Z.OPT_DIVI
     , Z.DIS_DIVI, CAL_DIVI, Z.KIND_DIVI, Z.ACCNT_NAME
 




 
/*UAgc01Krv.Cagc125UKR[fnCreateTmpTbl] Query5*/
SELECT AC_STDATE
     , AC_TODATE
     , CHG_DIVI
     , SEQ
     , ACCNT_CD
     , ACCNT_NAME
     , AMT_I1
     , AMT_I2
     , AMT_I3
     , AMT_I4
     , AMT_I5
     , AMT_I6
     , OPT_DIVI
     , KIND_DIVI
     , UPPER_ACCNT_CD
     , UPDATE_DB_USER
     , UPDATE_DB_TIME 
     , COMP_CODE
     , 'N' AS SAVE_FLAG
  FROM AGC130T   WITH (NOLOCK)
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND AC_STDATE IS NULL 

 UNION ALL

 SELECT ISNULL(#{AC_STDATE}, '') AC_STDATE
      , ISNULL(#{AC_TODATE}, '') AC_TODATE
      , ISNULL(#{CHG_DIVI}, '') CHG_DIVI
      , ISNULL(SEQ, 0.0) SEQ
      , ISNULL(ACCNT_CD, '') AS ACCNT_CD
      , CASE WHEN ACCNT_CD = '1000' THEN UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, #{AC_STDATE}) + ACCNT_NAME 
             WHEN ACCNT_CD = '2000' THEN UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, #{AC_TODATE}) 
             ELSE ISNULL(ACCNT_NAME, '') 
         END AS ACCNT_NAME
      , ISNULL(AMT_I1, 0.0)   AMT_I1
      , ISNULL(AMT_I2, 0.0)   AMT_I2
      , ISNULL(AMT_I3, 0.0)   AMT_I3
      , ISNULL(AMT_I4, 0.0)   AMT_I4
      , ISNULL(AMT_I5, 0.0)   AMT_I5
      , ISNULL(AMT_I6, 0.0)   AMT_I6
      , ISNULL(OPT_DIVI, '')  OPT_DIVI
      , ISNULL(KIND_DIVI, '') KIND_DIVI
      , ISNULL((SELECT CASE WHEN MAX(ISNULL(ACCNT_CD, '')) &gt; '2000' OR (MAX(ISNULL(ACCNT_CD, '')) IS NULL AND ISNULL(OPT_DIVI,'')!= '5') 
                            THEN '2000' ELSE MAX(ACCNT_CD) 
                        END ACCNT_CD 
                  FROM ABA130T   WITH (NOLOCK)
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND GUBUN     = #{GUBUN} 
                   <if test="CHG_DIVI == &quot;1&quot;">
		           AND DIVI = '35'
		           </if>
		           <if test="CHG_DIVI != &quot;1&quot;">
		           AND DIVI = '36'
		           </if>
                   AND ACCNT = Z.ACCNT_CD ), '') UPPER_ACCNT_CD
      , ISNULL(#{S_USER_ID}, '')  AS UPDATE_DB_USER
      , CONVERT(SMALLDATETIME,'') AS UPDATE_DB_TIME
      , #{S_COMP_CODE}
      , 'N' AS SAVE_FLAG
 FROM (
       SELECT B.SEQ
            , A.ACCNT_CD
            , B.ACCNT_NAME 
            , B.OPT_DIVI
            , B.KIND_DIVI
            , AMT_I1
            , AMT_I2
            , AMT_I3
            , AMT_I4
            , AMT_I5
            , (AMT_I1 + AMT_I2 + AMT_I3 + AMT_I4 + AMT_I5) AMT_I6
            , 'N' AS SAVE_FLAG
         FROM (
               SELECT A.GUBUN, A.DIVI, A.ACCNT_CD
                    , ROUND(SUM(AMT_I1)/1,0) AS AMT_I1
                    , ROUND(SUM(AMT_I2)/1,0) AS AMT_I2
                    , ROUND(SUM(AMT_I3)/1,0) AS AMT_I3
                    , ROUND(SUM(AMT_I4)/1,0) AS AMT_I4
                    , ROUND(SUM(AMT_I5)/1,0) AS AMT_I5
                 FROM ABA130T A   WITH (NOLOCK)
                              LEFT OUTER JOIN #TEMP01 B 
                                           ON A.GUBUN = B.GUBUN 
                                          AND A.DIVI  = B.DIVI 
                                          AND A.ACCNT = B.ACCNT_CD 
                WHERE A.COMP_CODE = #{S_COMP_CODE}
                  AND B.DIS_DIVI  = '4' 
                  AND A.CAL_TYPE  = '2'
                GROUP BY A.GUBUN, A.DIVI, A.ACCNT_CD  
                    ) A 
                      LEFT OUTER JOIN ABA120T B WITH (NOLOCK)
                                   ON B.COMP_CODE = N'MASTER'
                                  AND A.GUBUN     = B.GUBUN 
                                  AND A.DIVI      = B.DIVI 
                                  AND A.ACCNT_CD  = B.ACCNT_CD
        WHERE ISNULL(B.KIND_DIVI, '') = ''
 
        UNION ALL
 
        SELECT A.SEQ
             , A.ACCNT_CD
             , CASE WHEN ISNULL(A.OPT_DIVI,'') = '1' AND AMT_I5 &lt; 0 
                    THEN (SELECT ACCNT_NAME 
                            FROM ABA120T   WITH (NOLOCK)
                           WHERE COMP_CODE = #{S_COMP_CODE}
                             AND GUBUN     = #{GUBUN}
                             <if test="CHG_DIVI == &quot;1&quot;">
				             AND DIVI = '35'
				             </if>
				             <if test="CHG_DIVI != &quot;1&quot;">
				             AND DIVI = '36'
				             </if>
                             AND ACCNT_CD =  (SELECT MAX(ACCNT_CD) ACCNT_CD 
                                                FROM ABA120T   WITH (NOLOCK)
                                               WHERE COMP_CODE = #{S_COMP_CODE}
                                                 AND GUBUN     = #{GUBUN}
                             <if test="CHG_DIVI == &quot;1&quot;">
				             AND DIVI = '35'
				             </if>
				             <if test="CHG_DIVI != &quot;1&quot;">
				             AND DIVI = '36'
				             </if>
                             AND OPT_DIVI = '2' 
                             AND ACCNT_CD &gt; A.ACCNT_CD ))
                    ELSE A.ACCNT_NAME 
                END ACCNT_NAME
             , A.OPT_DIVI
             , A.KIND_DIVI
             , ROUND(ISNULL(AMT_I1, 0.0)/1,0) AS AMT_I1
             , ROUND(ISNULL(AMT_I2, 0.0)/1,0) AS AMT_I2
             , ROUND(ISNULL(AMT_I3, 0.0)/1,0) AS AMT_I3
             , ROUND(ISNULL(AMT_I4, 0.0)/1,0) AS AMT_I4
             , ROUND(ISNULL(AMT_I5, 0.0)/1,0) AS AMT_I5
             , ROUND(ISNULL(AMT_I1, 0.0)/1,0)  
             + ROUND(ISNULL(AMT_I2, 0.0)/1,0)  
             + ROUND(ISNULL(AMT_I3, 0.0)/1,0)  
             + ROUND(ISNULL(AMT_I4, 0.0)/1,0)  
             + ROUND(ISNULL(AMT_I5, 0.0)/1,0) AS AMT_I6
             , 'N' AS SAVE_FLAG
          FROM ABA120T A   WITH (NOLOCK)
                       LEFT OUTER JOIN (SELECT GUBUN
                                             , DIVI
                                             , ACCNT_CD
                                             , DIS_DIVI
                                             , SUM(AMT_I1) AMT_I1
                                             , SUM(AMT_I2) AMT_I2
                                             , SUM(AMT_I3) AMT_I3
                                             , SUM(AMT_I4) AMT_I4
                                             , SUM(AMT_I5) AMT_I5   
                                          FROM #TEMP01
                                         GROUP BY GUBUN, DIVI, ACCNT_CD, DIS_DIVI
                                             ) B 
                                               ON A.GUBUN    = B.GUBUN 
                                              AND A.DIVI     = B.DIVI 
                                              AND A.ACCNT_CD = B.ACCNT_CD
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.DIS_DIVI != '4'
           AND ISNULL(A.OPT_DIVI,'') != '2'
           AND A.GUBUN = #{GUBUN}
           <if test="CHG_DIVI == &quot;1&quot;">
           AND A.DIVI = '35'
           </if>
           <if test="CHG_DIVI != &quot;1&quot;">
           AND A.DIVI = '36'
           </if>
           AND ISNULL(A.KIND_DIVI, '') != '' 
       ) Z
 ORDER BY SEQ


	</select>
	
	<insert id="agc125ukrServiceImpl.insertDetail" parameterType="Map">
		/*UAgc01Krv.Cagc125UKR[fnagc125set] Query8*/  
INSERT INTO agc130t
     ( AC_STDATE
     , AC_TODATE
     , CHG_DIVI
     , SEQ
     , ACCNT_CD
     , ACCNT_NAME
     , AMT_I1
     , AMT_I2
     , AMT_I3
     , AMT_I4
     , AMT_I5
     , AMT_I6
     , OPT_DIVI
     , KIND_DIVI
     , UPPER_ACCNT_CD
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{AC_STDATE}
     , #{AC_TODATE}
     , #{CHG_DIVI}
     , #{SEQ}
     , #{ACCNT_CD}
     , #{ACCNT_NAME}
     , #{AMT_I1}
     , #{AMT_I2}
     , #{AMT_I3}
     , #{AMT_I4}
     , #{AMT_I5}
     , #{AMT_I6}
     , #{OPT_DIVI}
     , #{KIND_DIVI}
     , #{UPPER_ACCNT_CD}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{COMP_CODE}
     )
	</insert>
	
	<update id="agc125ukrServiceImpl.updateDetail" parameterType="Map">		
		
	</update>
	
	<update id="agc125ukrServiceImpl.deleteDetail" parameterType="Map">
		/*UAgc01Krv.Cagc125UKR[fnagc125set] Query7*/  
		DELETE AGC130T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND AC_STDATE = #{AC_STDATE}
		   AND AC_TODATE = #{AC_TODATE}
		   AND CHG_DIVI  = #{CHG_DIVI}
	</update>
</mapper>