<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aisc110skrvServiceImpl">
	<select id="aisc110skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--aisc110skrv.CAisc110SKr[fnAisc110QStd] QUERY01
	BEGIN
	    DECLARE @COMP_CODE      NVARCHAR(08)        --(필수) 법인코드
	          , @FR_YYMM        NVARCHAR(06)        --(필수) FROM 상각년월
	          , @TO_YYMM        NVARCHAR(06)        --(필수) TO   상각년월
	          , @ACCNT          NVARCHAR(16)        --(선택) 계정코드
	          , @ACCNT_NAME     NVARCHAR(50)        --(선택) 계정명
	          , @DPR_STS2       NVARCHAR(01)        --(선택) 상각완료여부
	          , @FR_ASST        NVARCHAR(15)        --(선택) FROM 자산코드
	          , @TO_ASST        NVARCHAR(15)        --(선택) TO   자산코드
	
	          , @AsstDivi       NVARCHAR(01)        --자산구분(1:고정자산, 2:부외자산)
	
	    SET     @COMP_CODE      = #{S_COMP_CODE}
	    SET     @FR_YYMM        = #{DVRY_DATE_FR}
	    SET     @TO_YYMM        = #{DVRY_DATE_TO}
	    SET     @ACCNT          = #{ACCNT}
	    SET     @ACCNT_NAME     = #{ACCNT_NAME}
	    SET     @DPR_STS2       = #{DPR_STS}
	    SET     @FR_ASST        = #{ASSET_CODE_FR}
	    SET     @TO_ASST        = #{ASSET_CODE_TO}
	
	    --SET     @AsstDivi       = N'1'
	
	    SET     NOCOUNT    ON
	    SET     ARITHABORT ON
	
	    --1. 감가상각비상세내역 목록
	    SELECT  
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ASST_NAME
	         ,  uniLITE.fnGetUserTypeDate(A.COMP_CODE, B.DPR_YYMM, 'M') AS DPR_YYMM
	         -------------------------------------------------------------------
	         --전월미상각잔액
	         -------------------------------------------------------------------
	         ,  ISNULL(A.ACQ_AMT_I, 0)
	            + (ISNULL(A.FI_CAPI_TOT_I    , 0) - ISNULL(S1.TM_CPT_I     , 0))
	            - (ISNULL(A.FI_SALE_TOT_I    , 0) - ISNULL(S1.TM_SALE_I    , 0))
	            - (ISNULL(A.FI_SALE_DPR_TOT_I, 0) - ISNULL(S1.TM_REDUCE_I  , 0))
	            - (ISNULL(A.FI_DPR_TOT_I     , 0) - (ISNULL(S1.TM_DPR_I    , 0) - ISNULL(S1.TM_REDUCE_I    , 0) - ISNULL(S1.REVAL_REDUCE_I, 0)))
	            - (ISNULL(A.FI_DMGLOS_TOT_I  , 0) - (ISNULL(S1.DMGLOS_EX_I , 0) - ISNULL(S1.DMGLOS_IN_I    , 0)))
	            - (CASE WHEN ISNULL(S4.ASST_VARI_AMT_I, 0) != 0
	                    THEN ISNULL(A.ACQ_AMT_I, 0) - ISNULL(A.FI_REVAL_TOT_I, 0) - ISNULL(S1.ASST_VARI_AMT_I, 0)
	                    ELSE 0
	               END)    AS PM_BALN_I
	         -------------------------------------------------------------------
	         --당월상각액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.TM_DPR_I, 0)   AS TM_DPR_I
	         -------------------------------------------------------------------
	         --당월상각감소액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.TM_REDUCE_I, 0) + ISNULL(B.REVAL_REDUCE_I, 0)  AS TM_REDUCE_I
	         -------------------------------------------------------------------
	         --당월말상각누계액
	         -------------------------------------------------------------------
	         ,  ISNULL(A.FI_DPR_TOT_I, 0) - (ISNULL(S2.TM_DPR_I, 0) - ISNULL(S2.TM_REDUCE_I, 0) - ISNULL(S2.REVAL_REDUCE_I, 0)) AS TM_DPR_TOT_I
	         -------------------------------------------------------------------
	         --당기간상각비
	         -------------------------------------------------------------------
	         ,  CASE WHEN ISNULL(S3.TM_DPR_I, 0) - ISNULL(S3.TM_REDUCE_I, 0) - ISNULL(S3.REVAL_REDUCE_I, 0) &lt; 0
	                 THEN 0
	                 ELSE ISNULL(S3.TM_DPR_I, 0) - ISNULL(S3.TM_REDUCE_I, 0) - ISNULL(S3.REVAL_REDUCE_I, 0)
	            END AS CT_DPR_I
	         -------------------------------------------------------------------
	         --당월손상차손
	         -------------------------------------------------------------------
	         ,  ISNULL(B.DMGLOS_EX_I, 0)    AS TM_DMGLOS_EX_I
	         -------------------------------------------------------------------
	         --당월손상차손환입
	         -------------------------------------------------------------------
	         ,  ISNULL(B.DMGLOS_IN_I, 0)    AS TM_DMGLOS_IN_I
	         -------------------------------------------------------------------
	         --당월손상차손누계액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.DMGLOS_EX_I, 0) - ISNULL(B.DMGLOS_IN_I, 0) AS TM_DMGLOS_TOT_I
	         -------------------------------------------------------------------
	         --당월재평가손익
	         -------------------------------------------------------------------
			 ,	ISNULL(B.ASST_VARI_AMT_I	, 0)		AS ASST_VARI_AMT_I_YYMM
	         -------------------------------------------------------------------
	         --재평가손익누계액
	         -------------------------------------------------------------------
			 ,	ISNULL(S2.ASST_VARI_AMT_I	, 0)		AS ASST_VARI_AMT_I
	         -------------------------------------------------------------------
	         --당월말미상각잔액
	         -------------------------------------------------------------------
	         ,  ISNULL(A.ACQ_AMT_I, 0)
	            + (ISNULL(A.FI_CAPI_TOT_I    , 0) - ISNULL(S2.TM_CPT_I     , 0))
	            - (ISNULL(A.FI_SALE_TOT_I    , 0) - ISNULL(S2.TM_SALE_I    , 0))
	            - (ISNULL(A.FI_SALE_DPR_TOT_I, 0) - ISNULL(S2.TM_REDUCE_I  , 0))
	            - (ISNULL(A.FI_DPR_TOT_I     , 0) - (ISNULL(S2.TM_DPR_I    , 0) - ISNULL(S2.TM_REDUCE_I    , 0) - ISNULL(S2.REVAL_REDUCE_I, 0)))
	            - (ISNULL(A.FI_DMGLOS_TOT_I  , 0) - (ISNULL(S2.DMGLOS_EX_I , 0) - ISNULL(S2.DMGLOS_IN_I    , 0)))
	            - (CASE WHEN ISNULL(A.FI_REVAL_TOT_I, 0) != 0
	                    --THEN ISNULL(A.ACQ_AMT_I, 0) - ISNULL(A.FI_REVAL_TOT_I, 0) - ISNULL(S2.ASST_VARI_AMT_I, 0)
	                    THEN ISNULL(A.ACQ_AMT_I, 0) + ISNULL(S2.ASST_VARI_AMT_I, 0)
	                    ELSE 0
	               END)    AS TM_BALN_I
	         -------------------------------------------------------------------
	         --자본적지출액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.TM_CPT_I, 0)   AS TM_CPT_I
	         -------------------------------------------------------------------
	         --매각폐기금액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.TM_SALE_I, 0)  AS TM_SALE_I
	         -------------------------------------------------------------------
	         --재평가액
	         -------------------------------------------------------------------
	         ,  ISNULL(B.TM_REVAL_I, 0) AS TM_REVAL_I
	         -------------------------------------------------------------------
	         --상각여부
	         -------------------------------------------------------------------
	         ,  B.DPR_STS
	
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
	         ,  A.ACQ_AMT_I
	         ,  CASE WHEN B.DRB_YEAR = 0 THEN A.DRB_YEAR
	                 ELSE B.DRB_YEAR
	            END AS DRB_YEAR
	         ,  CASE WHEN ISNULL(B.DEP_CTL, '') = '' THEN A.DEP_CTL
	                 ELSE B.DEP_CTL
	            END AS DEP_CTL
	         ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, B.EX_DATE) AS EX_DATE
	         ,  CASE WHEN B.EX_NUM = 0
	                 THEN NULL
	                 ELSE B.EX_NUM
	            END AS EX_NUM
	         ,  N3.COST_POOL_NAME
	         ,  CASE WHEN ISNULL(A.COST_DIRECT, '') = 'Y' THEN N4.CODE_NAME
	                 ELSE ''
	            END                          AS COST_DIRECT
	         ,  M1.LEVEL_NAME                AS ITEMLEVEL1_NAME
	         ,  M2.LEVEL_NAME                AS ITEMLEVEL2_NAME
	         ,  M3.LEVEL_NAME                AS ITEMLEVEL3_NAME
	         ,  ''                           AS REMARK

             ,  ISNULL(A.GOV_GRANT_AMT_I    , 0)                                                                          AS GOV_GRANT_AMT_I          -- 국고보조금
             , (ISNULL(A.GOV_GRANT_AMT_I    , 0) - (ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S1.GOV_GRANT_TM_DPR_I, 0))) AS PM_GOV_GRANT_BALN_I      -- 국고보조금 전월미차감잔액
	         ,  ISNULL(B.GOV_GRANT_TM_DPR_I , 0)                                                                          AS TM_GOV_GRANT_DPR_I       -- 국고보조금 당월차감액
	         ,  ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S2.GOV_GRANT_TM_DPR_I, 0)                                       AS TM_GOV_GRANT_DPR_TOT_I   -- 국고보조금 당월말차감누계액
	         ,  ISNULL(A.GOV_GRANT_AMT_I    , 0) - (ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S2.GOV_GRANT_TM_DPR_I, 0))  AS TM_GOV_GRANT_BALN_I      -- 국고보조금 당월말미차감잔액

			 -- 전월미상각잔액 - 국고전월미차감잔액
	         ,  ISNULL(A.ACQ_AMT_I, 0)
	            + (ISNULL(A.FI_CAPI_TOT_I    , 0) - ISNULL(S1.TM_CPT_I     , 0))
	            - (ISNULL(A.FI_SALE_TOT_I    , 0) - ISNULL(S1.TM_SALE_I    , 0))
	            - (ISNULL(A.FI_SALE_DPR_TOT_I, 0) - ISNULL(S1.TM_REDUCE_I  , 0))
	            - (ISNULL(A.FI_DPR_TOT_I     , 0) - (ISNULL(S1.TM_DPR_I    , 0) - ISNULL(S1.TM_REDUCE_I    , 0) - ISNULL(S1.REVAL_REDUCE_I, 0)))
	            - (ISNULL(A.FI_DMGLOS_TOT_I  , 0) - (ISNULL(S1.DMGLOS_EX_I , 0) - ISNULL(S1.DMGLOS_IN_I    , 0)))
	            - (CASE WHEN ISNULL(S4.ASST_VARI_AMT_I, 0) != 0
	                    THEN ISNULL(A.ACQ_AMT_I, 0) - ISNULL(A.FI_REVAL_TOT_I, 0) - ISNULL(S1.ASST_VARI_AMT_I, 0)
	                    ELSE 0
	               END)
             - (ISNULL(A.GOV_GRANT_AMT_I    , 0) - (ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S1.GOV_GRANT_TM_DPR_I, 0))) AS BL_PM_GOV_GRANT_BALN_I      

             -- 당월상각액 - 국고보조금 당월차감액
	         ,  ISNULL(B.TM_DPR_I, 0)
			 -  ISNULL(B.GOV_GRANT_TM_DPR_I , 0)                                                                          AS BL_TM_GOV_GRANT_DPR_I
			 
			 -- 당월말상각누계액 - 국고보조금 당월말차감누계액
	         ,  (ISNULL(A.FI_DPR_TOT_I, 0) - (ISNULL(S2.TM_DPR_I, 0) - ISNULL(S2.TM_REDUCE_I, 0) - ISNULL(S2.REVAL_REDUCE_I, 0)))
	         -  (ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S2.GOV_GRANT_TM_DPR_I, 0))                                     AS BL_TM_GOV_GRANT_DPR_TOT_I   

			 -- 당월말미상각잔액 - 국고보조금 당월말미차감잔액
	         ,  ISNULL(A.ACQ_AMT_I, 0)
	            + (ISNULL(A.FI_CAPI_TOT_I    , 0) - ISNULL(S2.TM_CPT_I     , 0))
	            - (ISNULL(A.FI_SALE_TOT_I    , 0) - ISNULL(S2.TM_SALE_I    , 0))
	            - (ISNULL(A.FI_SALE_DPR_TOT_I, 0) - ISNULL(S2.TM_REDUCE_I  , 0))
	            - (ISNULL(A.FI_DPR_TOT_I     , 0) - (ISNULL(S2.TM_DPR_I    , 0) - ISNULL(S2.TM_REDUCE_I    , 0) - ISNULL(S2.REVAL_REDUCE_I, 0)))
	            - (ISNULL(A.FI_DMGLOS_TOT_I  , 0) - (ISNULL(S2.DMGLOS_EX_I , 0) - ISNULL(S2.DMGLOS_IN_I    , 0)))
	            - (CASE WHEN ISNULL(A.FI_REVAL_TOT_I, 0) != 0
	                    --THEN ISNULL(A.ACQ_AMT_I, 0) - ISNULL(A.FI_REVAL_TOT_I, 0) - ISNULL(S2.ASST_VARI_AMT_I, 0)
	                    THEN ISNULL(A.ACQ_AMT_I, 0) + ISNULL(S2.ASST_VARI_AMT_I, 0)
	                    ELSE 0
	               END)
             - (ISNULL(A.GOV_GRANT_AMT_I    , 0) - (ISNULL(A.GOV_GRANT_DPR_TOT_I, 0) - ISNULL(S2.GOV_GRANT_TM_DPR_I, 0))) AS BL_TM_GOV_GRANT_BALN_I      
	    FROM            AISS300T    AS A  WITH (NOLOCK)
	        INNER JOIN  AISC100T    AS B  WITH (NOLOCK) ON  B.COMP_CODE = A.COMP_CODE
	                                                    AND B.ASST      = A.ASST
	                                                    AND B.DPR_YYMM &gt;= @FR_YYMM
	                                                    AND B.DPR_YYMM &lt;= @TO_YYMM
	        LEFT  JOIN (SELECT  A.COMP_CODE
	                         ,  A.ASST
	                         ,  A.DPR_YYMM
	                         ,  SUM(ISNULL(B.TM_CPT_I          , 0)) AS TM_CPT_I
	                         ,  SUM(ISNULL(B.TM_SALE_I         , 0)) AS TM_SALE_I
	                         ,  SUM(ISNULL(B.TM_DPR_I          , 0)) AS TM_DPR_I
	                         ,  SUM(ISNULL(B.TM_REDUCE_I       , 0)) AS TM_REDUCE_I
	                         ,  SUM(ISNULL(B.ASST_VARI_AMT_I   , 0)) AS ASST_VARI_AMT_I
	                         ,  SUM(ISNULL(B.REVAL_REDUCE_I    , 0)) AS REVAL_REDUCE_I
	                         ,  SUM(ISNULL(B.DMGLOS_EX_I       , 0)) AS DMGLOS_EX_I
	                         ,  SUM(ISNULL(B.DMGLOS_IN_I       , 0)) AS DMGLOS_IN_I
	                         ,  SUM(ISNULL(B.GOV_GRANT_TM_DPR_I, 0)) AS GOV_GRANT_TM_DPR_I
	                    FROM           AISC100T AS A WITH (NOLOCK)
	                        LEFT  JOIN AISC100T AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
	                                                                AND B.ASST      = A.ASST
	                                                                AND B.DPR_YYMM &gt;= A.DPR_YYMM
	                    WHERE A.COMP_CODE = @COMP_CODE
	                    AND   A.DPR_YYMM &gt;= @FR_YYMM
	                    AND   ((A.ASST   &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
	                    AND   ((A.ASST   &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
	                    GROUP BY A.COMP_CODE, A.ASST, A.DPR_YYMM
	                   )        AS S1               ON  S1.COMP_CODE = A.COMP_CODE
	                                                AND S1.ASST      = A.ASST
	                                                AND S1.DPR_YYMM  = B.DPR_YYMM
	        LEFT  JOIN (SELECT  A.COMP_CODE
	                         ,  A.ASST
	                         ,  A.DPR_YYMM
							 ,	SUM(ISNULL(A.ASST_VARI_AMT_I   , 0)) AS ASST_VARI_AMT_I_YYMM
	                         ,  SUM(ISNULL(B.TM_CPT_I          , 0)) AS TM_CPT_I
	                         ,  SUM(ISNULL(B.TM_SALE_I         , 0)) AS TM_SALE_I
	                         ,  SUM(ISNULL(B.TM_DPR_I          , 0)) AS TM_DPR_I
	                         ,  SUM(ISNULL(B.TM_REDUCE_I       , 0)) AS TM_REDUCE_I
	                         ,  SUM(ISNULL(B.ASST_VARI_AMT_I   , 0)) AS ASST_VARI_AMT_I
	                         ,  SUM(ISNULL(B.REVAL_REDUCE_I    , 0)) AS REVAL_REDUCE_I
	                         ,  SUM(ISNULL(B.DMGLOS_EX_I       , 0)) AS DMGLOS_EX_I
	                         ,  SUM(ISNULL(B.DMGLOS_IN_I       , 0)) AS DMGLOS_IN_I
	                         ,  SUM(ISNULL(B.GOV_GRANT_TM_DPR_I, 0)) AS GOV_GRANT_TM_DPR_I
	                    FROM           AISC100T AS A WITH (NOLOCK)
	                        LEFT  JOIN AISC100T AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
	                                                                AND B.ASST      = A.ASST
	                                                                AND B.DPR_YYMM  &gt; A.DPR_YYMM
	                    WHERE A.COMP_CODE = @COMP_CODE
	                    AND   A.DPR_YYMM &gt;= @FR_YYMM
	                    AND   ((A.ASST   &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
	                    AND   ((A.ASST   &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
	                    GROUP BY A.COMP_CODE, A.ASST, A.DPR_YYMM
	                   )        AS S2               ON  S2.COMP_CODE = A.COMP_CODE
	                                                AND S2.ASST      = A.ASST
	                                                AND S2.DPR_YYMM  = B.DPR_YYMM
	        LEFT  JOIN (SELECT  A.COMP_CODE
	                         ,  A.ASST
	                         ,  A.DPR_YYMM
	                         ,  SUM(ISNULL(B.TM_CPT_I       , 0))   AS TM_CPT_I
	                         ,  SUM(ISNULL(B.TM_SALE_I      , 0))   AS TM_SALE_I
	                         ,  SUM(ISNULL(B.TM_DPR_I       , 0))   AS TM_DPR_I
	                         ,  SUM(ISNULL(B.TM_REDUCE_I    , 0))   AS TM_REDUCE_I
	                         ,  SUM(ISNULL(B.ASST_VARI_AMT_I, 0))   AS ASST_VARI_AMT_I
	                         ,  SUM(ISNULL(B.REVAL_REDUCE_I , 0))   AS REVAL_REDUCE_I
	                         ,  SUM(ISNULL(B.DMGLOS_EX_I    , 0))   AS DMGLOS_EX_I
	                         ,  SUM(ISNULL(B.DMGLOS_IN_I    , 0))   AS DMGLOS_IN_I
	                    FROM           AISC100T AS A WITH (NOLOCK)
	                        LEFT  JOIN AISC100T AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
	                                                                AND B.ASST      = A.ASST
	                                                                AND B.DPR_YYMM &gt;= @FR_YYMM
	                                                                AND B.DPR_YYMM &lt;= A.DPR_YYMM
	                    WHERE A.COMP_CODE = @COMP_CODE
	                    AND   A.DPR_YYMM &gt;= @FR_YYMM
	                    AND   ((A.ASST   &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
	                    AND   ((A.ASST   &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
	                    GROUP BY A.COMP_CODE, A.ASST, A.DPR_YYMM
	                   )        AS S3               ON  S3.COMP_CODE = A.COMP_CODE
	                                                AND S3.ASST      = A.ASST
	                                                AND S3.DPR_YYMM  = B.DPR_YYMM
	        LEFT  JOIN (SELECT  COMP_CODE
	                         ,  ASST
	                         ,  SUM(ISNULL(ASST_VARI_AMT_I, 0)) AS ASST_VARI_AMT_I
	                      FROM  AISC100T WITH (NOLOCK)
	                      WHERE COMP_CODE = @COMP_CODE
	                      AND   DPR_YYMM  &lt; @FR_YYMM
	                      GROUP BY COMP_CODE, ASST
	                   )        AS S4               ON  S4.COMP_CODE         = A.COMP_CODE
	                                                AND S4.ASST              = A.ASST
	        LEFT  JOIN ABA400T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE         = A.COMP_CODE
	                                                AND N1.ACCNT             = A.ACCNT
	        LEFT  JOIN BOR120T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE         = A.COMP_CODE
	                                                AND N2.DIV_CODE          = A.DIV_CODE
	        LEFT  JOIN CBM600T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE         = A.COMP_CODE
	                                                AND N3.COST_POOL_CODE    = A.COST_POOL_CODE
	        LEFT  JOIN BSA100T  AS N4 WITH (NOLOCK) ON  N4.COMP_CODE         = A.COMP_CODE
	                                                AND N4.MAIN_CODE         = N'B010'
	                                                AND N4.SUB_CODE          = A.COST_DIRECT
	        LEFT  JOIN BPR000T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE         = A.COMP_CODE
	                                                AND M1.LEVEL1           != '*'
	                                                AND M1.LEVEL1            = A.ITEM_LEVEL1
	                                                AND M1.LEVEL2            = '*'
	                                                AND M1.LEVEL3            = '*'
	        LEFT  JOIN BPR000T  AS M2 WITH (NOLOCK) ON  M2.COMP_CODE         = A.COMP_CODE
	                                                AND M2.LEVEL1           != '*'
	                                                AND M2.LEVEL1            = A.ITEM_LEVEL1
	                                                AND M2.LEVEL2           != '*'
	                                                AND M2.LEVEL2            = A.ITEM_LEVEL2
	                                                AND M2.LEVEL3            = '*'
	        LEFT  JOIN BPR000T  AS M3 WITH (NOLOCK) ON  M3.COMP_CODE         = A.COMP_CODE
	                                                AND M3.LEVEL1           != '*'
	                                                AND M3.LEVEL1            = A.ITEM_LEVEL1
	                                                AND M3.LEVEL2           != '*'
	                                                AND M3.LEVEL2            = A.ITEM_LEVEL2
	                                                AND M3.LEVEL3           != '*'
	                                                AND M3.LEVEL3            = A.ITEM_LEVEL3
	    WHERE A.COMP_CODE          = @COMP_CODE
	    --AND   A.ASST_DIVI          = @AsstDivi
	    AND   A.ASST_DIVI         IN ('1', '3')
        <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
			AND A.DIV_CODE IN
			<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				#{item}
			</foreach>         
		</if>
	    AND   ((A.ACCNT         LIKE       @ACCNT      + '%' AND @ACCNT        != '') OR (@ACCNT        = ''))
	    AND   ((N1.ACCNT_NAME   LIKE '%' + @ACCNT_NAME + '%' AND @ACCNT_NAME   != '') OR (@ACCNT_NAME   = ''))
	    AND   ((A.DPR_STS2         = @DPR_STS2               AND @DPR_STS2     != '') OR (@DPR_STS2     = ''))
	    AND   ((A.ASST            &gt;= @FR_ASST                AND @FR_ASST      != '') OR (@FR_ASST      = ''))
	    AND   ((A.ASST            &lt;= @TO_ASST                AND @TO_ASST      != '') OR (@TO_ASST      = ''))
	    ORDER BY A.ASST, B.DPR_YYMM
	
	    SET     NOCOUNT OFF
	    SET     ARITHABORT OFF
	END
	</select>
	
	
	
	
	
	
	
	
	
	
	
	<select id="aisc110skrvServiceImpl.getDetail" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON
			SELECT A.ASST												AS ASSET_CODE
			     , A.ASST_NAME											AS ASSET_NAME
			     , A.ACCNT												
			     , D.ACCNT_NAME											
			     , unilite.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)	AS AC_DATE
			     , A.ACQ_AMT_I											AS AC_AMT_I
			     , A.ACQ_Q												AS ACQ_Q
			     , A.DRB_YEAR											AS DRB_YEAR
			     , CONVERT(INTEGER, ISNULL(C.CODE_NAME, '0')) * 0.001	AS DEPRECTION
			FROM              AISS300T   A WITH (NOLOCK) 
			       LEFT  JOIN AISS100T   B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
				      								    AND B.ACCNT     = A.ACCNT
				   LEFT  JOIN BSA100T   C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
				      							       AND C.MAIN_CODE = (CASE WHEN B.DEP_CTL = '1' THEN 'A033' ELSE 'A034' END)
				    								   AND C.SUB_CODE  = RIGHT(CONVERT(NVARCHAR(04), 1000 + A.DRB_YEAR), 3)
				   LEFT  JOIN ABA400T   D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
				                                       AND D.ACCNT     = A.ACCNT 
			WHERE  A.COMP_CODE    = #{S_COMP_CODE}			
	          AND (ASST LIKE #{ASST} + '%'                             
         			OR ASST_NAME LIKE '%'+ #{ASST_NAME} + '%' )     
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END 
	</select>

</mapper>