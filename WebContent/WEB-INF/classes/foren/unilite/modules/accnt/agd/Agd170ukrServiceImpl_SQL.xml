<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd170ukrServiceImpl">
	<select id="agd170ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT 
           A.DIV_CODE   
         , A.PUB_NUM   
         , A.BILL_FLAG          
         , A.BILL_DATE  
         , A.BUSI_TYPE        
         , A.PROOF_KIND   
         , A.CUSTOM_CODE  
         , ISNULL(D.CUSTOM_NAME  , '')             AS CUSTOM_NAME  
         , SUM(B.SALE_LOC_AMT_I)                                              AS SALE_LOC_AMT_I 
         , SUM(B.TAX_AMT_O)                                                   AS  TAX_AMT_O     
        , SUM(ISNULL(B.SALE_LOC_AMT_I, 0 ) + ISNULL(B.TAX_AMT_O, 0))  AS SALE_TAX_AMT_I 
         , (
           SELECT BILL_DIV_CODE FROM BOR120T  WITH (NOLOCK)
            WHERE COMP_CODE = A.COMP_CODE
            AND DIV_CODE  = A.DIV_CODE
           )                AS BILL_DIV_CODE 
         , A.REMARK    
         , A.EX_DATE        
         , A.EX_NUM    
        , CASE A.AGREE_YN WHEN 'Y' THEN '2'
             WHEN 'N' THEN '1'
             ELSE ''
             END           AS AGREE_YN
         
        FROM  ATX110T  AS A WITH (NOLOCK) 
		  LEFT JOIN	ATX111T  AS B WITH (NOLOCK)		ON B.COMP_CODE	= A.COMP_CODE
												   AND B.DIV_CODE	= A.DIV_CODE
												   AND B.PUB_NUM	= A.PUB_NUM
		  LEFT JOIN BSA100T  AS C WITH (NOLOCK)     ON C.COMP_CODE	= A.COMP_CODE
	                                               AND C.MAIN_CODE	= 'A009'
	                                               AND C.REF_CODE1	= A.UPDATE_DB_USER
		  LEFT JOIN BCM100T  AS D WITH (NOLOCK)     ON D.COMP_CODE  = A.COMP_CODE
	                                               AND D.CUSTOM_CODE= A.CUSTOM_CODE
		   
		 WHERE A.COMP_CODE			= #{S_COMP_CODE}
		   AND A.PUB_FR_DATE	&gt;= #{PUB_DATE_FR}
		   AND A.PUB_TO_DATE	&lt;= #{PUB_DATE_TO}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE= #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_FR)">
		   AND CONVERT(NVARCHAR(08), A.INSERT_DB_TIME,112) &gt;= #{INSERT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSERT_DATE_TO)">
		   AND CONVERT(NVARCHAR(08), A.INSERT_DB_TIME,112) &lt;= #{INSERT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
		   AND C.SUB_CODE	= #{CHARGE_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
		   AND A.DIV_CODE IN
			<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
				#{item}
			</foreach>         
		</if>

		<if test="WORK_DIVI == &quot;1&quot;"> 
		   AND ISNULL(A.EX_DATE,'') = ''
		</if>
		<if test="WORK_DIVI == &quot;2&quot;">
		   AND ISNULL(A.EX_DATE,'') != '' 
		</if>
		 GROUP BY A.COMP_CODE, A.DIV_CODE, A.PUB_NUM, A.BILL_FLAG, A.BILL_DATE, A.BUSI_TYPE, A.PROOF_KIND, A.CUSTOM_CODE, D.CUSTOM_NAME, A.REMARK, A.EX_DATE, A.EX_NUM
          , CASE A.AGREE_YN WHEN 'Y' THEN '2' WHEN 'N' THEN '1' ELSE '' END
		 ORDER BY A.PUB_NUM

	</select>
	
	<insert id="agd170ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_AGD170T
	           (
	             KEY_VALUE
       		   , OPR_FLAG
       		   , COMP_CODE
			   , DIV_CODE
			   , PUB_NUM
			   , BILL_FLAG
			   , BILL_DATE
			   , BUSI_TYPE
			   , PROOF_KIND
			   , CUSTOM_CODE
			   , CUSTOM_NAME
			   , SALE_LOC_AMT_I
			   , TAX_AMT_O
			   , SALE_TAX_AMT_I
			   , BILL_DIV_CODE
			   , REMARK
		<if test="@foren.Ognl@isNotEmpty(EX_DATE)">
			   , EX_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_NUM)">
			   , EX_NUM
		</if>
			   , AGREE_YN	
			   , WORK_DATE		
	           , INSERT_DB_USER
	           , INSERT_DB_TIME     
	           )
	     VALUES
	           ( 
	             #{KEY_VALUE}
       		   , #{OPR_FLAG} 
       		   , #{S_COMP_CODE}        
			   , #{DIV_CODE}
			   , #{PUB_NUM}
			   , #{BILL_FLAG}
			   , #{BILL_DATE}
			   , #{BUSI_TYPE}
			   , #{PROOF_KIND}
			   , #{CUSTOM_CODE}
			   , #{CUSTOM_NAME}
			   , #{SALE_LOC_AMT_I}
			   , #{TAX_AMT_O}
			   , #{SALE_TAX_AMT_I}
			   , #{BILL_DIV_CODE}
			   , #{REMARK}
		<if test="@foren.Ognl@isNotEmpty(EX_DATE)">
			   , #{EX_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_NUM)">
			   , #{EX_NUM}
		</if>
			   , CASE #{AGREE_YN}	WHEN '2' THEN 'Y'
			    					WHEN '1' THEN 'N'
		    	 					ELSE ''
		    	 					END			
	           , #{PROC_DATE}
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	
	<update id="cancelSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip34CANCEL(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BILL_PUB_NUM,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUM_TYPE,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EBYN_MESSAGE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	  
	<update id="runAutoSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip34(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BILL_PUB_NUM,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUM_TYPE,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EBYN_MESSAGE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
</mapper>