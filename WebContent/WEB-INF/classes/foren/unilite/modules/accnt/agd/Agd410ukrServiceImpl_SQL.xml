<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd410ukrServiceImpl">
	<!-- select 쿼리 -->
	<select id="agd410ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		<if test="WORK_DIVI == &quot;1&quot;"> 					/* 자동기표일 때, 조회 로직 */
			SELECT A.COMP_CODE
				 , A.AC_DATE 												AS ORG_AC_DATE
				 , A.SLIP_NUM 												AS ORG_SLIP_NUM
				 , A.SLIP_SEQ												AS ORG_SLIP_SEQ
				 , A.ACCNT													AS ACCNT
				 ,(SELECT ISNULL(ACCNT_NAME  , '')
					  FROM ABA400T  WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND ACCNT     = A.ACCNT
				   ) 														AS ACCNT_NAME
				 , #{UNIT} 													AS GUBUN
				 , CASE WHEN A.AC_CODE1		= 'E1' THEN A.AC_DATA1
						WHEN A.AC_CODE2		= 'E1' THEN A.AC_DATA2
						WHEN A.AC_CODE3		= 'E1' THEN A.AC_DATA3
						WHEN A.AC_CODE4		= 'E1' THEN A.AC_DATA4
						WHEN A.AC_CODE5		= 'E1' THEN A.AC_DATA5
						WHEN A.AC_CODE6		= 'E1' THEN A.AC_DATA6
						WHEN A.AC_CODE1		= 'B1' THEN A.AC_DATA1
						WHEN A.AC_CODE2		= 'B1' THEN A.AC_DATA2
						WHEN A.AC_CODE3		= 'B1' THEN A.AC_DATA3
						WHEN A.AC_CODE4		= 'B1' THEN A.AC_DATA4
						WHEN A.AC_CODE5		= 'B1' THEN A.AC_DATA5
						WHEN A.AC_CODE6		= 'B1' THEN A.AC_DATA6
				   END														AS PJT_CODE
				 , CASE WHEN A.AC_CODE1		= 'E1' THEN A.AC_DATA_NAME1
						WHEN A.AC_CODE2		= 'E1' THEN A.AC_DATA_NAME2
						WHEN A.AC_CODE3		= 'E1' THEN A.AC_DATA_NAME3
						WHEN A.AC_CODE4		= 'E1' THEN A.AC_DATA_NAME4
						WHEN A.AC_CODE5		= 'E1' THEN A.AC_DATA_NAME5
						WHEN A.AC_CODE6		= 'E1' THEN A.AC_DATA_NAME6
						WHEN A.AC_CODE1		= 'B1' THEN A.AC_DATA_NAME1
						WHEN A.AC_CODE2		= 'B1' THEN A.AC_DATA_NAME2
						WHEN A.AC_CODE3		= 'B1' THEN A.AC_DATA_NAME3
						WHEN A.AC_CODE4		= 'B1' THEN A.AC_DATA_NAME4
						WHEN A.AC_CODE5		= 'B1' THEN A.AC_DATA_NAME5
						WHEN A.AC_CODE6		= 'B1' THEN A.AC_DATA_NAME6
				   END														AS PJT_NAME
				 , A.REMARK
				 , A.AMT_I
				 , A.DIV_CODE
				 , A.DEPT_CODE
				 , A.DEPT_NAME
				 , '' 														AS AC_DATE
				 , NULL														AS SLIP_NUM
				 , NULL														AS SLIP_SEQ
			  FROM		AGJ210T A WITH (NOLOCK)
			  
			  LEFT JOIN ABA120T	C WITH (NOLOCK)          					/* 비용범위 참조 */
							 ON	C.COMP_CODE		= #{S_COMP_CODE}
							AND	C.GUBUN			= '01'
							AND	C.DIVI			= '50'
							AND	C.ACCNT_CD		= '4300'					/* 판매비와 일반관리비 */
			  LEFT JOIN ABA120T	D WITH (NOLOCK)			
							 ON	D.COMP_CODE		= #{S_COMP_CODE}
							AND	D.GUBUN			= '01'
							AND	D.DIVI			= '50'
							AND	D.ACCNT_CD		= '5200'					/* 노       무      비 */
			  LEFT JOIN ABA120T	E WITH (NOLOCK)							
							 ON	E.COMP_CODE		= #{S_COMP_CODE}
							AND	E.GUBUN			= '01'
							AND	E.DIVI			= '50'
							AND	E.ACCNT_CD		= '5300'					/* 제    조    경   비 */
			  LEFT JOIN ABA120T F WITH (NOLOCK)       
                             ON F.COMP_CODE     = #{S_COMP_CODE}
                            AND F.GUBUN         = '01'
                            AND F.DIVI          = '50'
                            AND F.ACCNT_CD      = '6300'                        /* 사    업    경   비 */

			  LEFT JOIN	AGD410T B WITH (NOLOCK)
							 ON	B.COMP_CODE		= A.COMP_CODE
							AND	B.ORG_AC_DATE	= A.AC_DATE
							AND	B.ORG_SLIP_NUM	= A.SLIP_NUM
							AND	B.ORG_SLIP_SEQ	= A.SLIP_SEQ
							
			 WHERE		A.COMP_CODE		= #{S_COMP_CODE}
			   AND		B.COMP_CODE IS NULL									/* AGD390에는 없는 데이터만 조회 */
		</if>
		
		<if test="WORK_DIVI == &quot;2&quot;"> 					/* 기표취소일 때, 조회 로직 */
			SELECT A.COMP_CODE
				 , A.AC_DATE 												AS ORG_AC_DATE
				 , A.SLIP_NUM 												AS ORG_SLIP_NUM
				 , A.SLIP_SEQ												AS ORG_SLIP_SEQ
				 , A.ACCNT													AS ACCNT
				 ,(SELECT ISNULL(ACCNT_NAME  , '')
					  FROM ABA400T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND ACCNT     = A.ACCNT
				   ) 														AS ACCNT_NAME
				 , #{UNIT} 													AS GUBUN
				 , CASE WHEN A.AC_CODE1		= 'E1' THEN A.AC_DATA1
						WHEN A.AC_CODE2		= 'E1' THEN A.AC_DATA2
						WHEN A.AC_CODE3		= 'E1' THEN A.AC_DATA3
						WHEN A.AC_CODE4		= 'E1' THEN A.AC_DATA4
						WHEN A.AC_CODE5		= 'E1' THEN A.AC_DATA5
						WHEN A.AC_CODE6		= 'E1' THEN A.AC_DATA6
						WHEN A.AC_CODE1		= 'B1' THEN A.AC_DATA1
						WHEN A.AC_CODE2		= 'B1' THEN A.AC_DATA2
						WHEN A.AC_CODE3		= 'B1' THEN A.AC_DATA3
						WHEN A.AC_CODE4		= 'B1' THEN A.AC_DATA4
						WHEN A.AC_CODE5		= 'B1' THEN A.AC_DATA5
						WHEN A.AC_CODE6		= 'B1' THEN A.AC_DATA6
				   END														AS PJT_CODE
				 , CASE WHEN A.AC_CODE1		= 'E1' THEN A.AC_DATA_NAME1
						WHEN A.AC_CODE2		= 'E1' THEN A.AC_DATA_NAME2
						WHEN A.AC_CODE3		= 'E1' THEN A.AC_DATA_NAME3
						WHEN A.AC_CODE4		= 'E1' THEN A.AC_DATA_NAME4
						WHEN A.AC_CODE5		= 'E1' THEN A.AC_DATA_NAME5
						WHEN A.AC_CODE6		= 'E1' THEN A.AC_DATA_NAME6
						WHEN A.AC_CODE1		= 'B1' THEN A.AC_DATA_NAME1
						WHEN A.AC_CODE2		= 'B1' THEN A.AC_DATA_NAME2
						WHEN A.AC_CODE3		= 'B1' THEN A.AC_DATA_NAME3
						WHEN A.AC_CODE4		= 'B1' THEN A.AC_DATA_NAME4
						WHEN A.AC_CODE5		= 'B1' THEN A.AC_DATA_NAME5
						WHEN A.AC_CODE6		= 'B1' THEN A.AC_DATA_NAME6
				   END														AS PJT_NAME
				 , A.REMARK
				 , A.AMT_I
				 , A.DIV_CODE
				 , A.DEPT_CODE
				 , A.DEPT_NAME
				 , CASE WHEN ISNULL(G.AC_DATE, '') = '' THEN ''
				 		ELSE G.AC_DATE  
				   END 														AS AC_DATE
				 , CASE WHEN ISNULL(G.SLIP_NUM, 0) = 0  THEN NULL
				 		ELSE G.SLIP_NUM
				   END 														AS SLIP_NUM
				 , CASE WHEN ISNULL(G.SLIP_SEQ, 0) = 0  THEN NULL
				 		ELSE G.SLIP_SEQ
				   END 														AS SLIP_SEQ
			  FROM		AGJ210T A WITH (NOLOCK)
			  
			 INNER JOIN	AGD410T B WITH (NOLOCK)
							 ON	B.COMP_CODE		= A.COMP_CODE				/* AGD410T에 있는 데이터만 조회 */
							AND	B.ORG_AC_DATE	= A.AC_DATE
							AND	B.ORG_SLIP_NUM	= A.SLIP_NUM
							AND	B.ORG_SLIP_SEQ	= A.SLIP_SEQ
			  LEFT JOIN ABA120T	C WITH (NOLOCK)								/* 비용범위 참조 */
							 ON	C.COMP_CODE		= #{S_COMP_CODE}
							AND	C.GUBUN			= '01'
							AND	C.DIVI			= '50'
							AND	C.ACCNT_CD		= '4300'					/* 판매비와 일반관리비 */
			  LEFT JOIN ABA120T	D WITH (NOLOCK)		
							 ON	D.COMP_CODE		= #{S_COMP_CODE}
							AND	D.GUBUN			= '01'
							AND	D.DIVI			= '50'
							AND	D.ACCNT_CD		= '5200'					/* 노       무      비 */
			  LEFT JOIN ABA120T	E WITH (NOLOCK)							
							 ON	E.COMP_CODE		= #{S_COMP_CODE}
							AND	E.GUBUN			= '01'
							AND	E.DIVI			= '50'
							AND	E.ACCNT_CD		= '5300'					/* 제    조    경   비 */
			  LEFT JOIN ABA120T F WITH (NOLOCK)       
                             ON F.COMP_CODE     = #{S_COMP_CODE}
                            AND F.GUBUN         = '01'
                            AND F.DIVI          = '50'
                            AND F.ACCNT_CD      = '6300'       /* 사    업    경   비 */
			  LEFT JOIN	(
			  			SELECT  COMP_CODE
			  				 ,  AC_DATE
			  				 ,  SLIP_NUM
							 ,  SLIP_SEQ
			  			  FROM  AGJ210T WITH (NOLOCK)
			  			 WHERE  COMP_CODE	= #{S_COMP_CODE}
			  			   AND (MOD_DIVI	= '' OR MOD_DIVI IS NULL)
			  			)       G 
							 ON	G.COMP_CODE		= B.COMP_CODE
							AND	G.AC_DATE		= B.AC_DATE
							AND	G.SLIP_NUM		= B.SLIP_NUM
							AND	G.SLIP_SEQ		= B.SLIP_SEQ
							
			 WHERE		A.COMP_CODE		= #{S_COMP_CODE}
		</if>
			<if test="UNIT == &quot;1&quot;">									/* 구분이 "사업단위" 일 때 */
			   AND ( CASE WHEN A.AC_CODE1 = 'E1' THEN AC_DATA1
                          WHEN A.AC_CODE2 = 'E1' THEN AC_DATA2
                          WHEN A.AC_CODE3 = 'E1' THEN AC_DATA3
                          WHEN A.AC_CODE4 = 'E1' THEN AC_DATA4
                          WHEN A.AC_CODE5 = 'E1' THEN AC_DATA5
                          WHEN A.AC_CODE6 = 'E1' THEN AC_DATA6
               END  ) != ''
			</if>
			<if test="UNIT == &quot;2&quot;">									/* 구분이 "품목단위" 일 때 */
			   AND ( CASE WHEN A.AC_CODE1 = 'B1' THEN AC_DATA1
                          WHEN A.AC_CODE2 = 'B1' THEN AC_DATA2
                          WHEN A.AC_CODE3 = 'B1' THEN AC_DATA3
                          WHEN A.AC_CODE4 = 'B1' THEN AC_DATA4
                          WHEN A.AC_CODE5 = 'B1' THEN AC_DATA5
                          WHEN A.AC_CODE6 = 'B1' THEN AC_DATA6
                      END  ) != ''
			</if>
			   AND	(	A.MOD_DIVI		= ''   OR A.MOD_DIVI IS NULL	)
			   AND A.DR_CR			= '1'									/* 차변인 데이터만 조회 */
			   AND	(														/* 비용범위 참조 */
			   		 (A.ACCNT &gt;= C.START_ACCNT AND A.ACCNT &lt;= C.END_ACCNT)
				  OR (A.ACCNT &gt;= D.START_ACCNT AND A.ACCNT &lt;= D.END_ACCNT)
				  OR (A.ACCNT &gt;= E.START_ACCNT AND A.ACCNT &lt;= E.END_ACCNT)
				  OR (A.ACCNT &gt;= F.START_ACCNT AND A.ACCNT &lt;= F.END_ACCNT)
				  	)
			   AND A.AC_DATE	&gt;= #{AC_DATE_FR}
			   AND A.AC_DATE	&lt;= #{AC_DATE_TO}
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
			   AND A.DEPT_CODE	= #{DEPT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">     
			   AND A.ACCNT		= #{ACCNT_CODE}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(DEPTS)">
                AND ( CASE WHEN A.AC_CODE1 = 'E1' THEN AC_DATA1
                           WHEN A.AC_CODE2 = 'E1' THEN AC_DATA2
                           WHEN A.AC_CODE3 = 'E1' THEN AC_DATA3
                           WHEN A.AC_CODE4 = 'E1' THEN AC_DATA4
                           WHEN A.AC_CODE5 = 'E1' THEN AC_DATA5
                           WHEN A.AC_CODE6 = 'E1' THEN AC_DATA6
                END ) IN
                 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
                         #{item}
                 </foreach>
            </if>
			<if test="@foren.Ognl@isNotEmpty(CUST_ITEM_CODE)">     
			   AND E.ITEM_CODE	= #{CUST_ITEM_CODE}
			</if>
	</select>
	
	
	<!-- INSERT AGD410T -->
	<insert id="agd410ukrServiceImpl.insertAgd410" parameterType="Map">     
	    INSERT INTO AGD410T
	           (
			     COMP_CODE     
			   , ORG_AC_DATE   
			   , ORG_SLIP_NUM  
			   , ORG_SLIP_SEQ  
			   , ACCNT         
			   , GUBUN         
			   , PJT_CODE      
			   , REMARK        
			   , AMT_I         
			   , DIV_CODE      
			   , DEPT_CODE     
			   , DEPT_NAME     
			   , AC_DATE       
			   , SLIP_NUM      
			   , RE_AC_DATE    
			   , RE_SLIP_NUM   
			   , INSERT_DB_USER
			   , INSERT_DB_TIME
	           )
	     VALUES
	           ( 
			     #{S_COMP_CODE}     
			   , #{ORG_AC_DATE}   
			   , NULLIF(#{ORG_SLIP_NUM}, '')
			   , NULLIF(#{ORG_SLIP_SEQ}, '')
			   , #{ACCNT} 
			   , #{GUBUN}        
			   , #{PJT_CODE}      
			   , #{REMARK}
			   , #{AMT_I}
			   , #{DIV_CODE}      
			   , #{DEPT_CODE}     
			   , #{DEPT_NAME}
			   , #{AC_DATE}
			   , NULLIF(#{SLIP_NUM}, '')
			   , #{RE_AC_DATE}    
			   , NULLIF(#{RE_SLIP_NUM}, '')   
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	
	<!-- INSERT LOG TABLE -->
	<insert id="agd410ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_AGD410T
	           (
	             KEY_VALUE
       		   , OPR_FLAG
       		   , DOC_ID
			   , COMP_CODE     
			   , ORG_AC_DATE   
			   , ORG_SLIP_NUM  
			   , ORG_SLIP_SEQ  
			   , ACCNT            
			   , GUBUN           
			   , PJT_CODE  
			   , AC_DATE       
			   , SLIP_NUM      
			   , RE_AC_DATE    
			   , RE_SLIP_NUM   
			   , INSERT_DB_USER
			   , INSERT_DB_TIME
	           )
	     VALUES
	           ( 
	             #{KEY_VALUE}
       		   , #{OPR_FLAG}
       		   ,(
       		     SELECT DOC_ID 
       		       FROM AGD410T  WITH (NOLOCK)
       		      WHERE COMP_CODE		= #{S_COMP_CODE}
       		        AND ORG_AC_DATE		= #{ORG_AC_DATE}
       		        AND ORG_SLIP_NUM	= #{ORG_SLIP_NUM}
       		        AND ORG_SLIP_SEQ	= #{ORG_SLIP_SEQ}
       		    )
			   , #{S_COMP_CODE}     
			   , #{ORG_AC_DATE}   
			   , NULLIF(#{ORG_SLIP_NUM}, '')
			   , NULLIF(#{ORG_SLIP_SEQ}, '')
			   , #{ACCNT} 
			   , #{GUBUN}  
			   , #{PJT_CODE}    
			   , #{AC_DATE}
			   , NULLIF(#{SLIP_NUM}, '')   
			   , #{RE_AC_DATE}    
			   , NULLIF(#{RE_SLIP_NUM}, '') 
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	
	<!-- 기표취소 SP 호출 -->
	<update id="cancelSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip86Cancel(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	  
	<!-- 자동기표 SP 호출 -->
	<update id="runAutoSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip86(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{S_ACCNT,	     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
</mapper>