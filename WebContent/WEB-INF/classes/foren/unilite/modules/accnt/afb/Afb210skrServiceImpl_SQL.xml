<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb210skrServiceImpl">
	<select id="afb210skrServiceImpl.getAmtPoint" parameterType="Map" resultType="rMap">
	/* ==단수 처리==================================================================== */
		 SELECT AMT_POINT
		   FROM ABA100T  WITH (NOLOCK)
		  WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="afb210skrServiceImpl.getStrBound1" parameterType="Map" resultType="rMap">
		SELECT REF_CODE1, REF_CODE2
		 FROM BSA100T   WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		 AND MAIN_CODE		= 'A074'
		 AND SUB_CODE	   != '$'
	</select>
	
	<select id="afb210skrServiceImpl.getStrBound2" parameterType="Map" resultType="rMap">
		SELECT REF_CODE1, REF_CODE2
		 FROM BSA100T   WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		 AND MAIN_CODE		= 'A075'
		 AND SUB_CODE	   != '$'
 	</select>

	<select id="afb210skrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		--UBdi01Krv.CBDicKr[fnMsgDic] Query01 selectList1
		   DECLARE @MSG_DESC		NVARCHAR(10)
			SELECT @MSG_DESC = MSG_DESC 
			  FROM BSA010T        WITH (NOLOCK)                  
			 WHERE MSG_TYPE = '1'                 
			   AND MSG_NO IN ('A0194')

		/* 2. 금액단위 */
		--UArpt08KR.Cafb210SKR[fnMakeSQL]Query3
		   DECLARE @lUnit		NVARCHAR(10)
			SELECT @lUnit = REF_CODE1
			  FROM BSA100T  WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE = 'B042'
			   AND SUB_CODE  = #{AMT_UNIT}
		
		
		/* 5. Main Query */
		/* ============================================================================== */
		/*    0 재무제표양식 차수 가져오기												 */
		/* ============================================================================== */
		--UArpt08KR.Cafb210SKR[fnMakeSQL] Query4
			DECLARE @sGubun NVARCHAR(10) 
			 SELECT @sGubun = SUB_CODE
			   FROM BSA100T   WITH (NOLOCK)
			  WHERE COMP_CODE = #{S_COMP_CODE}
			    AND MAIN_CODE = 'A093'
			    AND ISNULL(REF_CODE1,'') = 'Y' 
		/* ================================================================================== */
		/*    ① 과목데이터																	 */
		/* ================================================================================== */
			--UArpt08KR.Cafb210SKR[fnMakeSQL]Query5
			SELECT T.DEPT_CODE
			     , T.DEPT_NAME
			     , T.ACCNT_CD
			     , T.ACCNT
			     , T.ACCNT_NAME
			     , T.OPT_DIVI
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG ELSE 0 
			                         END) /@lUnit 
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE1
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG  ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.RESULT  ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG2
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT2
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BALANCE ELSE 0
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE2
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.RESULT ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE2
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG_T1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT_T1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE_T1
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
			                                    END), 0) > 0
			                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT ELSE 0 
			                                          END), 0) /
			                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
			                                          END), 0) * 100
			                         ELSE 0
			               END, 0) ACHIEVE_T1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG3
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT3
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE3
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG  ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.RESULT  ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE3
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG4
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT4
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BALANCE ELSE 0
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE4
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.RESULT ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE4
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG_T3
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT_T3
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE_T3
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                                    END), 0) > 0
			                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
			                                          END), 0) /
			                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                                          END), 0) * 100
			                         ELSE 0
			               END, 0) ACHIEVE_T3
			     , '1' ACCNT_DIVI
			  FROM(
			<foreach collection="quarterly" item="month" index="index" >
		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , (SELECT ACCNT_CD 
			                  FROM ABA400T  WITH (NOLOCK)
			                 WHERE COMP_CODE = #{S_COMP_CODE}
			                   AND ACCNT     = A.ACCNT) ACCNT
			             , (SELECT ACCNT_NAME
			                  FROM ABA400T WITH (NOLOCK)
			                 WHERE COMP_CODE = #{S_COMP_CODE}
			                   AND ACCNT     = (SELECT ACCNT_CD 
			                                      FROM ABA400T WITH (NOLOCK)
			                                     WHERE COMP_CODE = #{S_COMP_CODE}
			                                       AND ACCNT     = A.ACCNT)) ACCNT_NAME
			             , '0' OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
			             , A.EX_AMT_I+A.AC_AMT_I RESULT
			             , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
			          FROM AFB110T A   WITH (NOLOCK)
			                       INNER JOIN ABA121T B   WITH (NOLOCK)
			                               ON B.COMP_CODE = #{S_COMP_CODE}
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.DIVI      = '50' 
			                              AND B.OPT_DIVI  = '4'
			                              AND B.GUBUN     = @SGUBUN
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
                                            
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD
			                                  AND SUBJECT_DIVI='1'
			                                  AND GROUP_YN    ='Y'))
			
			         UNION ALL
			
			</foreach>
		    <foreach collection="quarterly" item="month" index="index">
		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , '0' ACCNT
			             , B.ACCNT_NAME
			             , B.OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			             , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			             , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			          FROM AFB110T A  WITH (NOLOCK)
			                       INNER JOIN ABA121T B  WITH (NOLOCK)
			                               ON B.COMP_CODE = #{S_COMP_CODE}
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.DIVI      = '50' 
			                              AND B.OPT_DIVI  = '4'
			                              AND B.GUBUN     = @SGUBUN
			                              
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD 
			                                  AND SUBJECT_DIVI= '1'
			                                  AND GROUP_YN    = 'Y')
			         GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
			
			         UNION ALL
		    </foreach>
		    
		    <foreach collection="quarterly" item="month" index="index" separator="UNION ALL">
		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , '0' ACCNT
			             , B.ACCNT_NAME
			             , B.OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			             , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			             , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			          FROM AFB110T A   WITH (NOLOCK)
			                       INNER JOIN ABA121T B  WITH (NOLOCK)
			                               ON B.COMP_CODE = #{S_COMP_CODE}
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.DIVI      = '50'
			                              AND B.OPT_DIVI  = '5'
			                              AND B.GUBUN     = @SGUBUN
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD 
			                                  AND SUBJECT_DIVI= '1'
			                                  AND GROUP_YN    = 'Y')
			         GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		    </foreach>			         
			       ) T
			 GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI
			 
	    UNION
	    
		<if test="rdoSelect == &quot;2&quot;"> 
		/*==================================================================================*/
		/*   ② 세목데이터																	*/
		/*==================================================================================*/
			--UArpt08KR.Cafb210SKR[fnMakeSQL]Query6
		    	SELECT T.DEPT_CODE
		    	     , T.DEPT_NAME
		    	     , T.ACCNT_CD
		    	     , T.ACCNT
		    	     , T.ACCNT_NAME
		    	     , T.OPT_DIVI

		    /*1분기*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG ELSE 0 
		    	                         END) / @lUnit
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG1
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT1
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE1
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG ELSE 0 
		    	                                    END), 0)>0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' THEN T.BUDG ELSE 0
		    	                                          END), 0) * 100
		    	                         ELSE 0
		    	               END, 0) ACHIEVE_RATE1
		    /*2분기*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG2
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT2
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE2
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0 
		    	                                    END), 0)>0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6' THEN T.BUDG ELSE 0 
		    	                                          END), 0) * 100
		    	                         ELSE 0 
		    	               END, 0) ACHIEVE_RATE2
		    /*상반기 계*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG_T1
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT_T1
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE_T1
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0
		    	                                    END), 0) > 0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
		    	                                          END), 0) * 100
		    	                         ELSE 0
		    	               END, 0) ACHIEVE_T1

		    /*3분기*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG ELSE 0 
		    	                         END) / @lUnit
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG3
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT3
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE3
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG ELSE 0 
		    	                                    END), 0)>0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' THEN T.BUDG ELSE 0
		    	                                          END), 0) * 100
		    	                         ELSE 0
		    	               END, 0) ACHIEVE_RATE3
		    /*4분기*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG4
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT4
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE4
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0 
		    	                                    END), 0)>0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12' THEN T.BUDG ELSE 0 
		    	                                          END), 0) * 100
		    	                         ELSE 0 
		    	               END, 0) ACHIEVE_RATE4
		    /*하반기 계*/
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BUDG_T3
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) RESULT_T3
		    	     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BALANCE ELSE 0 
		    	                         END) / @lUnit 
									<if test="AMT_POINT == &quot;1&quot;"> 
										, 0, 1
									</if>
									<if test="AMT_POINT == &quot;2&quot;"> 
										+0.0045, 0, 1
									</if>
									<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
										, 0
									</if>
		    	                         ), 0) BALANCE_T3
		    	     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0
		    	                                    END), 0) > 0
		    	                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
		    	                                          END), 0) /
		    	                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
		    	                                          END), 0) * 100
		    	                         ELSE 0
		    	               END, 0) ACHIEVE_T3

		    	     , '2' ACCNT_DIVI
		    	  FROM (
		    <foreach collection="quarterly" item="month" index="index">
		    	        (SELECT A.BUDG_YYYYMM
		    	              , B.ACCNT_CD
		    	              , A.ACCNT
		    	              , (SELECT ACCNT_NAME FROM ABA400T  WITH (NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND ACCNT=A.ACCNT) ACCNT_NAME
		    	              , '0' OPT_DIVI
		    	              , A.DEPT_CODE
		    	              , A.DEPT_NAME
		    	              , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
		    	              , A.EX_AMT_I+A.AC_AMT_I RESULT
		    	              , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
		    	           FROM AFB110T A   WITH (NOLOCK)
		    	                        INNER JOIN ABA121T B   WITH (NOLOCK)
		    	                                ON B.COMP_CODE = #{S_COMP_CODE}
		    	                               AND A.ACCNT     = B.ACCNT
		    	                               AND B.DIVI      = '50'
		    	                               AND B.OPT_DIVI  = '4'
		    	                               AND B.GUBUN     = @SGUBUN
		    	                        LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		    	          WHERE A.COMP_CODE = #{S_COMP_CODE}
		    	            AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
		    	            AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
		    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						    AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		    	            )
		    	
		    	          UNION ALL
		    </foreach>
		    
		    <foreach collection="quarterly" item="month" index="index">
		    	        (SELECT A.BUDG_YYYYMM
		    	              ,  B.ACCNT_CD
		    	              , '0' ACCNT
		    	              , B.ACCNT_NAME
		    	              , B.OPT_DIVI
		    	              , A.DEPT_CODE
		    	              , A.DEPT_NAME
		    	              , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		    	              , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		    	              , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		    	           FROM AFB110T A  WITH (NOLOCK)
		    	                        INNER JOIN ABA121T B  WITH (NOLOCK)
		    	                                ON B.COMP_CODE = #{S_COMP_CODE}
		    	                               AND A.ACCNT     = B.ACCNT
		    	                               AND B.DIVI      ='50' 
		    	                               AND B.OPT_DIVI  ='4'
		    	                               AND B.GUBUN     = @SGUBUN
		    	                        LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		    	          WHERE A.COMP_CODE = #{S_COMP_CODE}
		    	            AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
		    	            AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate}
		    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						    AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		    	          GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		    	
		    	          UNION ALL
		    </foreach>
		    
		    <foreach collection="quarterly" item="month" index="index" separator="UNION ALL">
		    	        (SELECT A.BUDG_YYYYMM
		    	              , B.ACCNT_CD
		    	              , '0' ACCNT
		    	              , B.ACCNT_NAME
		    	              , B.OPT_DIVI
		    	              , A.DEPT_CODE
		    	              , A.DEPT_NAME
		    	              , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		    	              , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		    	              , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		    	           FROM AFB110T A   WITH (NOLOCK)
		    	                        INNER JOIN ABA121T B  WITH (NOLOCK)
		    	                                ON B.COMP_CODE = #{S_COMP_CODE}
		    	                               AND A.ACCNT     = B.ACCNT 
		    	                               AND B.DIVI      ='50'
		    	                               AND B.OPT_DIVI  ='5'
		    	                               AND B.GUBUN     = @SGUBUN
		    	                        LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		    	          WHERE A.COMP_CODE = #{S_COMP_CODE}
		    	            AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
		    	            AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
		    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						    AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		    	          GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		    </foreach>
		    	       )T
		    	 WHERE ACCNT IN (SELECT ACCNT 
		    	                   FROM ABA400T  WITH (NOLOCK)
		    	                  WHERE COMP_CODE    = #{S_COMP_CODE}
		    	                    AND ACCNT       != ACCNT_CD 
		    	                    AND SUBJECT_DIVI ='2')
		    	 GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI

		    	 UNION
		</if>
		
		/*==================================================================================*/
		/*   ③ 총계 데이터																	*/
		/*==================================================================================*/
			--UArpt08KR.Cafb210SKR[fnMakeSQL]Query7
			SELECT DEPT_CODE
			     , '' 			AS DEPT_NAME
			     , '99999' 		AS ACCNT_CD
			     , '99999'		AS ACCNT
			     , @MSG_DESC	AS ACCNT_NAME
			     , '' 			AS OPT_DIVI
			     , ISNULL(SUM(BUDG1),0) BUDG1
			     , ISNULL(SUM(RESULT1),0) RESULT1
			     , ISNULL(SUM(BALANCE1),0) BALANCE1
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG1),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT1) / SUM(BUDG1) * 100), 2, 1),0)  ELSE 0 
			                END),0) ACHIEVE_RATE1
			     , ISNULL(SUM(BUDG2),0) BUDG2
			     , ISNULL(SUM(RESULT2),0) RESULT2
			     , ISNULL(SUM(BALANCE2),0) BALANCE2
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG2),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT2) / SUM(BUDG2) * 100), 2, 1),0) ELSE 0 
			                END),0) ACHIEVE_RATE2
			     , ISNULL(SUM(BUDG_T1),0) BUDG_T1
			     , ISNULL(SUM(RESULT_T1),0) RESULT_T1
			     , ISNULL(SUM(BALANCE_T1),0) BALANCE_T1
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG_T1),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT_T1) / SUM(BUDG_T1) * 100), 2, 1),0) ELSE 0
			                END),0) ACHIEVE_T1
			     , ISNULL(SUM(BUDG3),0) BUDG3
			     , ISNULL(SUM(RESULT3),0) RESULT3
			     , ISNULL(SUM(BALANCE3),0) BALANCE3
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG3),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT3) / SUM(BUDG3) * 100), 2, 1),0)  ELSE 0 
			                END),0) ACHIEVE_RATE3
			     , ISNULL(SUM(BUDG4),0) BUDG4
			     , ISNULL(SUM(RESULT4),0) RESULT4
			     , ISNULL(SUM(BALANCE4),0) BALANCE4
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG4),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT4) / SUM(BUDG4) * 100), 2, 1),0) ELSE 0 
			                END),0) ACHIEVE_RATE4
			     , ISNULL(SUM(BUDG_T3),0) BUDG_T3
			     , ISNULL(SUM(RESULT_T3),0) RESULT_T3
			     , ISNULL(SUM(BALANCE_T3),0) BALANCE_T3
			     , ISNULL((CASE WHEN ISNULL(SUM(BUDG_T3),0) >0
			                         THEN ISNULL(ROUND((SUM(RESULT_T3) / SUM(BUDG_T3) * 100), 2, 1),0) ELSE 0
			                END),0) ACHIEVE_T3
			     , '1' ACCNT_DIVI
			  FROM (
		    
			        SELECT T.DEPT_CODE
			             , T.DEPT_NAME
			             , T.ACCNT_CD
			             , T.ACCNT
			             , T.ACCNT_NAME
			             , T.OPT_DIVI
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' 
			                                          THEN T.BUDG  ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3' 
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3'
			                                          THEN T.BALANCE ELSE 0 
			                                 END) /1, 0, 1), 0) BALANCE1
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0)>0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3'
			                                                          THEN T.RESULT ELSE 0
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'3'
			                                                          THEN T.BUDG ELSE 0 
			                                                 END), 0) * 100
			                                 ELSE 0
			                       END, 0) ACHIEVE_RATE1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                          THEN T.BUDG ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG2
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT2
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                          THEN T.BALANCE  ELSE 0 
			                                 END) /1, 0, 1), 0) BALANCE2
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0)>0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                                          THEN T.RESULT ELSE 0 
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'4' AND N'6'
			                                                          THEN T.BUDG ELSE 0
			                                                 END), 0) * 100
			                                ELSE 0 END, 0) ACHIEVE_RATE2
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                          THEN T.BUDG ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG_T1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT_T1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                          THEN T.BALANCE  ELSE 0
			                                 END) /1, 0, 1), 0) BALANCE_T1
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0) > 0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                                          THEN T.RESULT ELSE 0 
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6'
			                                                          THEN T.BUDG ELSE 0
			                                                 END), 0) * 100
			                                ELSE 0
			                       END, 0) ACHIEVE_T1
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' 
			                                          THEN T.BUDG  ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG3
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9' 
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT3
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9'
			                                          THEN T.BALANCE ELSE 0 
			                                 END) /1, 0, 1), 0) BALANCE3
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0)>0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9'
			                                                          THEN T.RESULT ELSE 0
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'9'
			                                                          THEN T.BUDG ELSE 0 
			                                                 END), 0) * 100
			                                 ELSE 0
			                       END, 0) ACHIEVE_RATE3
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                          THEN T.BUDG ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG4
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT4
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                          THEN T.BALANCE  ELSE 0 
			                                 END) /1, 0, 1), 0) BALANCE4
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0)>0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                                          THEN T.RESULT ELSE 0 
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'10' AND N'12'
			                                                          THEN T.BUDG ELSE 0
			                                                 END), 0) * 100
			                                ELSE 0 END, 0) ACHIEVE_RATE4
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                          THEN T.BUDG ELSE 0 
			                                 END) /1, 0, 1), 0) BUDG_T3
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                          THEN T.RESULT ELSE 0 
			                                 END) /1, 0, 1), 0) RESULT_T3
			             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                          THEN T.BALANCE  ELSE 0
			                                 END) /1, 0, 1), 0) BALANCE_T3
			             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                                     THEN T.BUDG ELSE 0 
			                                            END), 0) > 0
			                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                                          THEN T.RESULT ELSE 0 
			                                                 END), 0) /
			                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12'
			                                                          THEN T.BUDG ELSE 0
			                                                 END), 0) * 100
			                                ELSE 0
			                       END, 0) ACHIEVE_T3
			          FROM (
		    <foreach collection="quarterly" item="month" index="index">
			                (SELECT A.BUDG_YYYYMM
			                      , B.ACCNT_CD
			                      , A.ACCNT
			                      , (SELECT ACCNT_NAME FROM ABA400T  WITH (NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND ACCNT=A.ACCNT) ACCNT_NAME
			                      , '0' OPT_DIVI
			                      , A.DEPT_CODE
			                      , A.DEPT_NAME
			                      , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
			                      , A.EX_AMT_I+A.AC_AMT_I RESULT
			                      , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
			                   FROM AFB110T A   WITH (NOLOCK)
			                                INNER JOIN ABA121T B   WITH (NOLOCK)
			                                        ON B.COMP_CODE = #{S_COMP_CODE}
			                                       AND A.ACCNT     = B.ACCNT
			                                       AND B.DIVI      = '50'
			                                       AND B.OPT_DIVI  = '4'
			                                       AND B.GUBUN     = @SGUBUN
			                                LEFT  JOIN (
                                               SELECT X.COMP_CODE
                                                    , X.ACCNT
                                                    , X.DEPT_CODE
                                                    , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                                 FROM AFB121T X WITH (NOLOCK)
                                                WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                                  AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                  AND X.DIVERT_DIVI IN ('1', '3')
                                                  AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                                  AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                                GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                           ) D  ON D.COMP_CODE = A.COMP_CODE
                                               AND D.DEPT_CODE = A.DEPT_CODE
                                               AND D.ACCNT     = A.ACCNT
			                  WHERE A.COMP_CODE = #{S_COMP_CODE}
			                    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			                    AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate}
			    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							    AND A.DEPT_CODE = #{DEPT_CODE}
							</if>
			                    AND NOT A.ACCNT IN (SELECT ACCNT 
			                                          FROM ABA400T  WITH (NOLOCK)
			                                         WHERE COMP_CODE   = #{S_COMP_CODE}
			                                           AND ACCNT       = ACCNT_CD 
			                                           AND SUBJECT_DIVI='1'
			                                           AND GROUP_YN    ='Y'))
			
			                  UNION ALL
		    </foreach>
		    
		    <foreach collection="quarterly" item="month" index="index">
			                (SELECT A.BUDG_YYYYMM
			                      , B.ACCNT_CD
			                      , '0' ACCNT
			                      , B.ACCNT_NAME
			                      , B.OPT_DIVI
			                      , A.DEPT_CODE
			                      , A.DEPT_NAME
			                      , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			                      , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			                      , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			                   FROM AFB110T A   WITH (NOLOCK)
			                                INNER JOIN ABA121T B  WITH (NOLOCK)
			                                        ON B.COMP_CODE = #{S_COMP_CODE}
			                                       AND A.ACCNT   = B.ACCNT
			                                       AND B.DIVI    ='50'
			                                       AND B.OPT_DIVI='4'
			                                       AND B.GUBUN   = @SGUBUN
			                                LEFT  JOIN (
                                               SELECT X.COMP_CODE
                                                    , X.ACCNT
                                                    , X.DEPT_CODE
                                                    , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                                 FROM AFB121T X WITH (NOLOCK)
                                                WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                                  AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                  AND X.DIVERT_DIVI IN ('1', '3')
                                                  AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                                  AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                                GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                           ) D  ON D.COMP_CODE = A.COMP_CODE
                                               AND D.DEPT_CODE = A.DEPT_CODE
                                               AND D.ACCNT     = A.ACCNT
			                  WHERE A.COMP_CODE = #{S_COMP_CODE}
			                    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			                    AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
			    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							    AND A.DEPT_CODE = #{DEPT_CODE}
							</if>
			                    AND NOT A.ACCNT IN (SELECT ACCNT
			                                          FROM ABA400T   WITH (NOLOCK)
			                                         WHERE COMP_CODE   = #{S_COMP_CODE}
			                                           AND ACCNT       = ACCNT_CD
			                                           AND SUBJECT_DIVI='1'
			                                           AND GROUP_YN    ='Y')
			                  GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
			
			                  UNION ALL
		    </foreach>
		    
		    <foreach collection="quarterly" item="month" index="index" separator="UNION ALL">
			                (SELECT A.BUDG_YYYYMM
			                      , B.ACCNT_CD
			                      , '0' ACCNT
			                      , B.ACCNT_NAME
			                      , B.OPT_DIVI
			                      , A.DEPT_CODE
			                      , A.DEPT_NAME
			                      , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			                      , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			                      , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			                   FROM AFB110T A   WITH (NOLOCK)
			                                INNER JOIN ABA121T B  WITH (NOLOCK)
			                                        ON B.COMP_CODE = #{S_COMP_CODE}
			                                       AND A.ACCNT   = B.ACCNT 
			                                       AND B.DIVI    = '50' 
			                                       AND B.OPT_DIVI= '5'
			                                       AND B.GUBUN   = @SGUBUN
			                                LEFT  JOIN (
                                               SELECT X.COMP_CODE
                                                    , X.ACCNT
                                                    , X.DEPT_CODE
                                                    , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                                 FROM AFB121T X WITH (NOLOCK)
                                                WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                                  AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                  AND X.DIVERT_DIVI IN ('1', '3')
                                                  AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                                  AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                                GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                           ) D  ON D.COMP_CODE = A.COMP_CODE
                                               AND D.DEPT_CODE = A.DEPT_CODE
                                               AND D.ACCNT     = A.ACCNT
			                  WHERE A.COMP_CODE = #{S_COMP_CODE}
			                    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN N'${month.REF_CODE1}' AND N'${month.REF_CODE2}' 
			                    AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate}  
			    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							    AND A.DEPT_CODE = #{DEPT_CODE}
							</if>
			                    AND NOT A.ACCNT IN (SELECT ACCNT 
			                                          FROM ABA400T   WITH (NOLOCK)
			                                         WHERE COMP_CODE   = #{S_COMP_CODE}
			                                           AND ACCNT       = ACCNT_CD
			                                           AND SUBJECT_DIVI='1'
			                                           AND GROUP_YN    ='Y')
			                  GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
			
		    </foreach>
			               )T
			         GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI
			       ) A
			 WHERE OPT_DIVI='0'
			 GROUP BY DEPT_CODE
			 ORDER BY DEPT_CODE, ACCNT_CD,  ACCNT , OPT_DIVI
	</select>

	<select id="afb210skrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--UBdi01Krv.CBDicKr[fnMsgDic] Query01 selectList2
		   DECLARE @MSG_DESC		NVARCHAR(10)
			SELECT @MSG_DESC = MSG_DESC 
			  FROM BSA010T     WITH (NOLOCK)    
			 WHERE MSG_TYPE = '1'                 
			   AND MSG_NO IN ('A0194')

		/* 2. 금액단위 */
		--UArpt08KR.Cafb210SKR[fnMakeSQL]Query3
		   DECLARE @lUnit		NVARCHAR(10)
			SELECT @lUnit = REF_CODE1
			  FROM BSA100T  WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE = 'B042'
			   AND SUB_CODE  = #{AMT_UNIT}
		
		
		/* 5. Main Query */
		/* ============================================================================== */
		/*    0 재무제표양식 차수 가져오기												 */
		/* ============================================================================== */
		--UArpt08KR.Cafb210SKR[fnMakeSQL] Query4
			DECLARE @sGubun NVARCHAR(10) 
			 SELECT @sGubun = SUB_CODE
			   FROM BSA100T   WITH (NOLOCK)
			  WHERE COMP_CODE = #{S_COMP_CODE}
			    AND MAIN_CODE = 'A093'
			    AND ISNULL(REF_CODE1,'') = 'Y' 
		/* ================================================================================== */
		/*    ① 과목데이터																	 */
		/* ================================================================================== */
			--UArpt08KR.Cafb210SKR[fnMakeSQL]Query5
			SELECT T.DEPT_CODE
			     , T.DEPT_NAME
			     , T.ACCNT_CD
			     , T.ACCNT
			     , T.ACCNT_NAME
			     , T.OPT_DIVI
	     	/* 상반기 계 */
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
			                         END) /@lUnit 
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT1
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE1
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG  ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.RESULT  ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'6' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE1
	     	/* 하반기 계 */
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG2
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT2
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BALANCE ELSE 0
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE2
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                                    END), 0)>0
			                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.RESULT ELSE 0 
			                                         END), 0) /
			                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'7' AND N'12' THEN T.BUDG ELSE 0 
			                                         END), 0) * 100
			                        ELSE 0 
			               END, 0) ACHIEVE_RATE2
			            
	     	/* 년간 계 */   
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.BUDG ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BUDG_T
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.RESULT ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) RESULT_T
			     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.BALANCE ELSE 0 
			                         END) /@lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
			                         ), 0) BALANCE_T
			     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.BUDG ELSE 0 
			                                    END), 0) > 0
			                         THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.RESULT ELSE 0 
			                                          END), 0) /
			                              ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN N'1' AND N'12' THEN T.BUDG ELSE 0 
			                                          END), 0) * 100
			                         ELSE 0
			               END, 0) ACHIEVE_T
			     , '1' ACCNT_DIVI
			  FROM(
		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , (SELECT ACCNT_CD 
			                  FROM ABA400T  WITH (NOLOCK)
			                 WHERE COMP_CODE = #{S_COMP_CODE}
			                   AND ACCNT     = A.ACCNT) ACCNT
			             , (SELECT ACCNT_NAME
			                  FROM ABA400T   WITH (NOLOCK)
			                 WHERE COMP_CODE = #{S_COMP_CODE}
			                   AND ACCNT     = (SELECT ACCNT_CD 
			                                      FROM ABA400T   WITH (NOLOCK)
			                                     WHERE COMP_CODE = #{S_COMP_CODE}
			                                       AND ACCNT     = A.ACCNT)) ACCNT_NAME
			             , '0' OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
			             , A.EX_AMT_I+A.AC_AMT_I RESULT
			             , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
			          FROM AFB110T A   WITH (NOLOCK)
			                       INNER JOIN ABA121T B   WITH (NOLOCK)
			                               ON A.COMP_CODE = B.COMP_CODE
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.DIVI      = '50' 
			                              AND B.OPT_DIVI  = '4'
			                              AND B.GUBUN     = @SGUBUN
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD
			                                  AND SUBJECT_DIVI='1'
			                                  AND GROUP_YN    ='Y'))
			
			         UNION ALL

		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , '0' ACCNT
			             , B.ACCNT_NAME
			             , B.OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			             , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			             , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			          FROM AFB110T A  WITH (NOLOCK)
			                       INNER JOIN ABA121T B  WITH (NOLOCK)
			                               ON A.COMP_CODE = B.COMP_CODE
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.GUBUN     = @SGUBUN
			                              AND B.DIVI      = '50' 
			                              AND B.OPT_DIVI  = '4'
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD 
			                                  AND SUBJECT_DIVI= '1'
			                                  AND GROUP_YN    = 'Y')
			         GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
			
			         UNION ALL

		           (SELECT A.BUDG_YYYYMM
			             , B.ACCNT_CD
			             , '0' ACCNT
			             , B.ACCNT_NAME
			             , B.OPT_DIVI
			             , A.DEPT_CODE
			             , A.DEPT_NAME
			             , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
			             , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			             , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			          FROM AFB110T A   WITH (NOLOCK)
			                       INNER JOIN ABA121T B  WITH (NOLOCK)
			                               ON A.COMP_CODE = B.COMP_CODE
			                              AND A.ACCNT     = B.ACCNT
			                              AND B.GUBUN     = @SGUBUN
			                              AND B.DIVI      = '50'
			                              AND B.OPT_DIVI  = '4'
			                       LEFT  JOIN (
                                       SELECT X.COMP_CODE
                                            , X.ACCNT
                                            , X.DEPT_CODE
                                            , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                         FROM AFB121T X WITH (NOLOCK)
                                        WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                          AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                          AND X.DIVERT_DIVI IN ('1', '3')
                                          AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                          AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                        GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                   ) D  ON D.COMP_CODE = A.COMP_CODE
                                       AND D.DEPT_CODE = A.DEPT_CODE
                                       AND D.ACCNT     = A.ACCNT
			         WHERE A.COMP_CODE = #{S_COMP_CODE}
			           AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' 
			           AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
	    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE = #{DEPT_CODE}
					</if>
			           AND NOT A.ACCNT IN (SELECT ACCNT 
			                                 FROM ABA400T  WITH (NOLOCK)
			                                WHERE COMP_CODE   = #{S_COMP_CODE}
			                                  AND ACCNT       = ACCNT_CD 
			                                  AND SUBJECT_DIVI= '1'
			                                  AND GROUP_YN    = 'Y')
			         GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)	   
			 
		    UNION ALL
		    
			(SELECT A.BUDG_YYYYMM
			      , B.ACCNT_CD
			      , '0' ACCNT
			      , B.ACCNT_NAME
			      , B.OPT_DIVI
			      , A.DEPT_CODE
			      , A.DEPT_NAME
			      , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS  BUDG
			      , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			      , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			   FROM AFB110T A   WITH (NOLOCK)
			                INNER JOIN ABA121T B  WITH (NOLOCK)
			                        ON A.COMP_CODE = B.COMP_CODE
			                       AND A.ACCNT     = B.ACCNT 
			                       AND B.GUBUN     = @SGUBUN 
			                       AND B.DIVI      = '50' 
			                       AND B.OPT_DIVI  = '5'
			                LEFT  JOIN (
                               SELECT X.COMP_CODE
                                    , X.ACCNT
                                    , X.DEPT_CODE
                                    , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                 FROM AFB121T X WITH (NOLOCK)
                                WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                  AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                  AND X.DIVERT_DIVI IN ('1', '3')
                                  AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                  AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                           ) D  ON D.COMP_CODE = A.COMP_CODE
                               AND D.DEPT_CODE = A.DEPT_CODE
                               AND D.ACCNT     = A.ACCNT
			  WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
			    AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{ToDate}
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
				AND A.DEPT_CODE = #{DEPT_CODE}
			</if>
			    AND NOT A.ACCNT IN (SELECT ACCNT 
			                          FROM ABA400T   WITH (NOLOCK)
			                         WHERE COMP_CODE   = #{S_COMP_CODE}
			                           AND ACCNT       = ACCNT_CD
			                           AND SUBJECT_DIVI='1'
			                           AND GROUP_YN    ='Y')
			  GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
			
			  UNION ALL
			
			(SELECT A.BUDG_YYYYMM
			      , B.ACCNT_CD
			      , '0' ACCNT
			      , B.ACCNT_NAME
			      , B.OPT_DIVI
			      , A.DEPT_CODE
			      , A.DEPT_NAME
			      , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) BUDG
			      , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
			      , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
			   FROM AFB110T A   WITH (NOLOCK)
			                INNER JOIN ABA121T B  WITH (NOLOCK)
			                        ON A.COMP_CODE = B.COMP_CODE
			                       AND A.ACCNT     = B.ACCNT 
			                       AND B.GUBUN     = @SGUBUN 
			                       AND B.DIVI      = '50' 
			                       AND B.OPT_DIVI  = '5'
			                LEFT  JOIN (
                               SELECT X.COMP_CODE
                                    , X.ACCNT
                                    , X.DEPT_CODE
                                    , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                 FROM AFB121T X WITH (NOLOCK)
                                WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                  AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                  AND X.DIVERT_DIVI IN ('1', '3')
                                  AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                  AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                           ) D  ON D.COMP_CODE = A.COMP_CODE
                               AND D.DEPT_CODE = A.DEPT_CODE
                               AND D.ACCNT     = A.ACCNT
			  WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12'
			    AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate}
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
				AND A.DEPT_CODE = #{DEPT_CODE}
			</if>
			    AND NOT A.ACCNT IN (SELECT ACCNT 
			                          FROM ABA400T   WITH (NOLOCK)
			                         WHERE COMP_CODE   = #{S_COMP_CODE}
			                           AND ACCNT       = ACCNT_CD 
			                           AND SUBJECT_DIVI='1'
			                           AND GROUP_YN    ='Y')
			  GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
	        )T
		  GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI
			
		  UNION	    
	    
		<if test="rdoSelect == &quot;2&quot;"> 
		/*==================================================================================*/
		/*   ② 세목데이터																	*/
		/*==================================================================================*/
		--UArpt08KR.Cafb210SKR[fnMakeSQL2]Query12
		SELECT T.DEPT_CODE
		     , T.DEPT_NAME
		     , T.ACCNT_CD
		     , T.ACCNT
		     , T.ACCNT_NAME
		     , T.OPT_DIVI
		/* 상반기계 */
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BUDG1
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.RESULT ELSE 0
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) RESULT1
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BALANCE  ELSE 0
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BALANCE1
		     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG ELSE 0
		                                    END), 0)>0
		                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.RESULT ELSE 0
		                                         END), 0) /
		                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG ELSE 0
		                                         END), 0) * 100
		                        ELSE 0
		               END , 0) ACHIEVE_RATE1
		/* 하반기계 */
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.BUDG ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BUDG2
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.RESULT ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) RESULT2
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.BALANCE ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BALANCE2
		     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12'  THEN T.BUDG ELSE 0 
		                                    END), 0)>0
		                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.RESULT ELSE 0 
		                                         END), 0) /
		                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12'  THEN T.BUDG ELSE 0
		                                         END), 0) * 100
		                        ELSE 0 
		               END, 0) ACHIEVE_RATE2
		/* 년간계 */
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BUDG_T
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.RESULT ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) RESULT_T
		     , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BALANCE ELSE 0 
		                         END) / @lUnit
								<if test="AMT_POINT == &quot;1&quot;"> 
									, 0, 1
								</if>
								<if test="AMT_POINT == &quot;2&quot;"> 
									+0.0045, 0, 1
								</if>
								<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
									, 0
								</if>
             	), 0) BALANCE_T
		     , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0 
		                                   END), 0) > 0
		                        THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.RESULT ELSE 0
		                                         END), 0) /
		                             ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0 
		                                         END), 0) * 100
		                        ELSE 0 
		               END, 0) ACHIEVE_T
		     , '2' ACCNT_DIVI
		  FROM (
		         (SELECT A.BUDG_YYYYMM
		               , B.ACCNT_CD
		               , A.ACCNT
		               , (SELECT ACCNT_NAME 
		                    FROM ABA400T   WITH (NOLOCK)
		                   WHERE COMP_CODE = #{S_COMP_CODE}
		                     AND ACCNT     = A.ACCNT) ACCNT_NAME
		               , '0' OPT_DIVI
		               , A.DEPT_CODE
		               , A.DEPT_NAME
		               , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
		               , A.EX_AMT_I+A.AC_AMT_I RESULT
		               , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
		            FROM AFB110T A   WITH (NOLOCK)
		                         INNER JOIN ABA121T B   WITH (NOLOCK)
		                                 ON A.COMP_CODE = B.COMP_CODE
		                                AND A.ACCNT     = B.ACCNT 
		                                AND B.GUBUN     = @SGUBUN 
		                                AND B.DIVI      = '50' 
		                                AND B.OPT_DIVI  = '4'
		                         LEFT  JOIN (
                                   SELECT X.COMP_CODE
                                        , X.ACCNT
                                        , X.DEPT_CODE
                                        , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                     FROM AFB121T X WITH (NOLOCK)
                                    WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                      AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                      AND X.DIVERT_DIVI IN ('1', '3')
                                      AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                      AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                    GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                               ) D  ON D.COMP_CODE = A.COMP_CODE
                                   AND D.DEPT_CODE = A.DEPT_CODE
                                   AND D.ACCNT     = A.ACCNT
		           WHERE A.COMP_CODE = #{S_COMP_CODE}
		             AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' 
				     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					 AND A.DEPT_CODE = #{DEPT_CODE}
				</if>
					)
		
		           UNION
		
		         (SELECT A.BUDG_YYYYMM
		               ,  B.ACCNT_CD
		               , '0' ACCNT
		               , B.ACCNT_NAME
		               , B.OPT_DIVI
		               , A.DEPT_CODE
		               , A.DEPT_NAME
		               , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS  BUDG
		               , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		               , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		            FROM AFB110T A   WITH (NOLOCK)
		                        INNER JOIN ABA121T B  WITH (NOLOCK)
		                                ON A.COMP_CODE = B.COMP_CODE
		                               AND A.ACCNT     = B.ACCNT 
		                               AND B.GUBUN     = @SGUBUN 
		                               AND B.DIVI      = '50' 
		                               AND B.OPT_DIVI  = '4'
		                        LEFT  JOIN (
                                   SELECT X.COMP_CODE
                                        , X.ACCNT
                                        , X.DEPT_CODE
                                        , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                     FROM AFB121T X WITH (NOLOCK)
                                    WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                      AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                      AND X.DIVERT_DIVI IN ('1', '3')
                                      AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                      AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                    GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                               ) D  ON D.COMP_CODE = A.COMP_CODE
                                   AND D.DEPT_CODE = A.DEPT_CODE
                                   AND D.ACCNT     = A.ACCNT
		           WHERE A.COMP_CODE = #{S_COMP_CODE}
		             AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
				     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					 AND A.DEPT_CODE = #{DEPT_CODE}
				</if>
		           GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		           UNION ALL
		
		         (SELECT A.BUDG_YYYYMM
		               ,  B.ACCNT_CD
		               , '0' ACCNT
		               , B.ACCNT_NAME
		               , B.OPT_DIVI
		               , A.DEPT_CODE
		               , A.DEPT_NAME
		               , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS  BUDG
		               , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		               , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		            FROM AFB110T A   WITH (NOLOCK)
		                         INNER JOIN ABA121T B  WITH (NOLOCK)
		                                 ON A.COMP_CODE = B.COMP_CODE
		                                AND A.ACCNT     = B.ACCNT 
		                                AND B.GUBUN     = @SGUBUN  
		                                AND B.DIVI      = '50' 
		                                AND B.OPT_DIVI  = '4'
		                         LEFT  JOIN (
                                   SELECT X.COMP_CODE
                                        , X.ACCNT
                                        , X.DEPT_CODE
                                        , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                     FROM AFB121T X WITH (NOLOCK)
                                    WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                      AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                      AND X.DIVERT_DIVI IN ('1', '3')
                                      AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                      AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                    GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                               ) D  ON D.COMP_CODE = A.COMP_CODE
                                   AND D.DEPT_CODE = A.DEPT_CODE
                                   AND D.ACCNT     = A.ACCNT
		           WHERE A.COMP_CODE = #{S_COMP_CODE}
		             AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' 
				     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					 AND A.DEPT_CODE = #{DEPT_CODE}
				</if>
		           GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		           UNION ALL
		
		         (SELECT A.BUDG_YYYYMM
		               , B.ACCNT_CD
		               , '0' ACCNT
		               , B.ACCNT_NAME
		               , B.OPT_DIVI
		               , A.DEPT_CODE
		               , A.DEPT_NAME
		               , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) BUDG
		               , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		               , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		            FROM AFB110T A   WITH (NOLOCK)
		                         INNER JOIN ABA121T B  WITH (NOLOCK)
		                                 ON A.COMP_CODE = B.COMP_CODE
		                                AND A.ACCNT     = B.ACCNT 
		                                AND B.GUBUN     = @SGUBUN 
		                                AND B.DIVI      = '50' 
		                                AND B.OPT_DIVI  = '5'
		                         LEFT  JOIN (
                                   SELECT X.COMP_CODE
                                        , X.ACCNT
                                        , X.DEPT_CODE
                                        , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                     FROM AFB121T X WITH (NOLOCK)
                                    WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                      AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                      AND X.DIVERT_DIVI IN ('1', '3')
                                      AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                      AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                    GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                               ) D  ON D.COMP_CODE = A.COMP_CODE
                                   AND D.DEPT_CODE = A.DEPT_CODE
                                   AND D.ACCNT     = A.ACCNT
		           WHERE A.COMP_CODE = #{S_COMP_CODE}
		             AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
				     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					 AND A.DEPT_CODE = #{DEPT_CODE}
				</if>
		           GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		           UNION ALL
		
		         (SELECT A.BUDG_YYYYMM
		               , B.ACCNT_CD
		               , '0' ACCNT
		               , B.ACCNT_NAME
		               , B.OPT_DIVI
		               , A.DEPT_CODE
		               , A.DEPT_NAME
		               , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		               , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		               , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		            FROM AFB110T A   WITH (NOLOCK)
		                         INNER JOIN ABA121T B  WITH (NOLOCK)
		                                 ON A.COMP_CODE = B.COMP_CODE
		                                AND A.ACCNT     = B.ACCNT 
		                                AND B.GUBUN     = @SGUBUN 
		                                AND B.DIVI      = '50' 
		                                AND B.OPT_DIVI  = '5'
		                         LEFT  JOIN (
                                   SELECT X.COMP_CODE
                                        , X.ACCNT
                                        , X.DEPT_CODE
                                        , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                     FROM AFB121T X WITH (NOLOCK)
                                    WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                      AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                      AND X.DIVERT_DIVI IN ('1', '3')
                                      AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                      AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                    GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                               ) D  ON D.COMP_CODE = A.COMP_CODE
                                   AND D.DEPT_CODE = A.DEPT_CODE
                                   AND D.ACCNT     = A.ACCNT
		           WHERE A.COMP_CODE = #{S_COMP_CODE}
		             AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' 
				     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					 AND A.DEPT_CODE = #{DEPT_CODE}
				</if>
		           GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		       ) T
		 WHERE ACCNT IN (SELECT ACCNT 
		                   FROM ABA400T   WITH (NOLOCK)
		                  WHERE COMP_CODE    = #{S_COMP_CODE}
		                    AND ACCNT       != ACCNT_CD 
		                    AND SUBJECT_DIVI = '2')
		 GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI
		 
		 UNION

		</if>
		
		/*==================================================================================*/
		/*   ③ 총계 데이터																	*/
		/*==================================================================================*/
		--UArpt08KR.Cafb210SKR[fnMakeSQL2]Query13
		SELECT DEPT_CODE
		     , '' DEPT_NAME
		     , '99999' ACCNT_CD
		     , '99999' ACCNT
		     , @MSG_DESC ACCNT_NAME
		     , '' OPT_DIVI
		     , ISNULL(SUM(BUDG1),0) BUDG1
		     , ISNULL(SUM(RESULT1),0) RESULT1
		     , ISNULL(SUM(BALANCE1),0) BALANCE1
		     , ISNULL((CASE WHEN ISNULL(SUM(BUDG1),0) >0
		                         THEN ISNULL(ROUND((SUM(RESULT1) / SUM(BUDG1) * 100) 
			 				<if test="AMT_POINT == &quot;1&quot;"> 
			 					, 2, 1
			 				</if>
			 				<if test="AMT_POINT == &quot;2&quot;"> 
			 					+0.0045, 2, 1
			 				</if>
			 				<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
			 					, 2
			 				</if>
			 					), 0) ELSE 0 
		             END),0) ACHIEVE_RATE1
		     , ISNULL(SUM(BUDG2),0) BUDG2
		     , ISNULL(SUM(RESULT2),0) RESULT2
		     , ISNULL(SUM(BALANCE2),0) BALANCE2
		     , ISNULL((CASE WHEN ISNULL(SUM(BUDG2),0) >0
		                         THEN ISNULL(ROUND((SUM(RESULT2) / SUM(BUDG2) * 100) 
			 				<if test="AMT_POINT == &quot;1&quot;"> 
			 					, 2, 1
			 				</if>
			 				<if test="AMT_POINT == &quot;2&quot;"> 
			 					+0.0045, 2, 1
			 				</if>
			 				<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
			 					, 2
			 				</if>
			 					), 0) ELSE 0 
		             END),0) ACHIEVE_RATE2
		     , ISNULL(SUM(BUDG_T),0)    BUDG_T
		     , ISNULL(SUM(RESULT_T),0)  RESULT_T
		     , ISNULL(SUM(BALANCE_T),0) BALANCE_T
		     , ISNULL((CASE WHEN ISNULL(SUM(BUDG_T),0) >0
		                         THEN ISNULL(ROUND((SUM(RESULT_T) / SUM(BUDG_T) * 100)
			 					<if test="AMT_POINT == &quot;1&quot;"> 
			 						, 2, 1
			 					</if>
			 					<if test="AMT_POINT == &quot;2&quot;"> 
			 						+0.0045, 2, 1
			 					</if>
			 					<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
			 						, 2
			 					</if>
			 					), 0)  ELSE 0 
		                END),0) ACHIEVE_T
		     , '1' ACCNT_DIVI
		  FROM
		       (
		        SELECT T.DEPT_CODE
		             , T.DEPT_NAME
		             , T.ACCNT_CD
		             , T.ACCNT
		             , T.ACCNT_NAME
		             , T.OPT_DIVI
		    /* 상반기 계 */
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG  ELSE 0
		                                 END) / @lUnit 
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BUDG1
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.RESULT ELSE 0
		                                 END) / @lUnit 
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) RESULT1
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BALANCE ELSE 0
		                                 END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BALANCE1
		             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG ELSE 0
		                                            END), 0)>0
		                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.RESULT ELSE 0
		                                                 END), 0) /
		                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' THEN T.BUDG ELSE 0
		                                                 END), 0) * 100
		                                ELSE 0 
		                       END , 0) ACHIEVE_RATE1
		    /* 하반기 계 */
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.BUDG ELSE 0
		                                 END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BUDG2
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.RESULT ELSE 0
		                                 END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) RESULT2
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.BALANCE  ELSE 0
		                                 END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BALANCE2
		             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.BUDG ELSE 0
		                                            END), 0)>0
		                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' THEN T.RESULT ELSE 0
		                                                 END), 0) /
		                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '7' AND '12'  THEN T.BUDG  ELSE 0 END), 0) * 100
		                                ELSE 0
		                       END, 0) ACHIEVE_RATE2
		    /* 년간 계 */
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0
		                                END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BUDG_T
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.RESULT ELSE 0
		                                END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) RESULT_T
		             , ISNULL(ROUND(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BALANCE ELSE 0 
		                                 END) / @lUnit
										<if test="AMT_POINT == &quot;1&quot;"> 
											, 0, 1
										</if>
										<if test="AMT_POINT == &quot;2&quot;"> 
											+0.0045, 0, 1
										</if>
										<if test="AMT_POINT != &quot;1&quot; and AMT_POINT != &quot;2&quot;"> 
											, 0
										</if>
		             	), 0) BALANCE_T
		             , ISNULL(CASE WHEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0 
		                                            END), 0) > 0
		                                THEN ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.RESULT  ELSE 0
		                                                 END), 0) /
		                                     ISNULL(SUM(CASE WHEN CONVERT(INTEGER, RIGHT(T.BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' THEN T.BUDG ELSE 0
		                                                 END), 0) * 100
		                                ELSE 0
		                       END, 0) ACHIEVE_T
		          FROM (
		                 (SELECT A.BUDG_YYYYMM
		                       , B.ACCNT_CD
		                       , A.ACCNT
		                       , (SELECT ACCNT_NAME 
		                            FROM ABA400T   WITH (NOLOCK)
		                           WHERE COMP_CODE = #{S_COMP_CODE}
		                             AND ACCNT     = A.ACCNT) ACCNT_NAME
		                       , '0' OPT_DIVI
		                       , A.DEPT_CODE
		                       , A.DEPT_NAME
		                       , (ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) - ISNULL(D.DIVERT_BUDG_I, 0)) AS BUDG
		                       , A.EX_AMT_I+A.AC_AMT_I RESULT
		                       , ISNULL(A.BUDG_CONF_I,0) + ISNULL(A.BUDG_CONV_I,0) + ISNULL(A.BUDG_ASGN_I,0) + ISNULL(A.BUDG_SUPP_I,0) + ISNULL(A.BUDG_IWALL_I,0) -A.EX_AMT_I-A.AC_AMT_I - ISNULL(D.DIVERT_BUDG_I, 0) BALANCE
		                    FROM AFB110T A   WITH (NOLOCK)
		                                 INNER JOIN ABA121T B   WITH (NOLOCK)
		                                         ON A.COMP_CODE = B.COMP_CODE
		                                        AND A.ACCNT     = B.ACCNT 
		                                        AND B.GUBUN     = @SGUBUN 
		                                        AND B.DIVI      = '50' 
		                                        AND B.OPT_DIVI  = '4'
		                                 LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		                   WHERE A.COMP_CODE = #{S_COMP_CODE}
		                     AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '12' 
						     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							 AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		                     AND NOT A.ACCNT IN (SELECT ACCNT 
		                                           FROM ABA400T  WITH (NOLOCK)
		                                          WHERE COMP_CODE   = #{S_COMP_CODE}
		                                            AND ACCNT       = ACCNT_CD 
		                                            AND SUBJECT_DIVI='1'
		                                            AND GROUP_YN    ='Y'))
		
		                   UNION ALL
		
		                 (SELECT A.BUDG_YYYYMM
		                       ,  B.ACCNT_CD
		                       , '0' ACCNT
		                       , B.ACCNT_NAME
		                       , B.OPT_DIVI
		                       , A.DEPT_CODE
		                       , A.DEPT_NAME
		                       , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		                       , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		                       , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		                    FROM AFB110T A   WITH (NOLOCK)
		                                 INNER JOIN ABA121T B  WITH (NOLOCK)
		                                         ON A.COMP_CODE = B.COMP_CODE
		                                        AND A.ACCNT     = B.ACCNT 
		                                        AND B.GUBUN     = @SGUBUN 
		                                        AND B.DIVI      = '50' 
		                                        AND B.OPT_DIVI  = '4'
		                                 LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		                   WHERE A.COMP_CODE = #{S_COMP_CODE}
		                     AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
						     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							 AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		                     AND NOT A.ACCNT IN (SELECT ACCNT 
		                                           FROM ABA400T  WITH (NOLOCK)
		                                          WHERE ACCNT       = ACCNT_CD 
		                                            AND COMP_CODE   = #{S_COMP_CODE}
		                                            AND SUBJECT_DIVI='1'
		                                            AND GROUP_YN    ='Y')
		                   GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		                   UNION ALL
		
		                 (SELECT A.BUDG_YYYYMM
		                       ,  B.ACCNT_CD
		                       , '0' ACCNT
		                       , B.ACCNT_NAME
		                       , B.OPT_DIVI
		                       , A.DEPT_CODE
		                       , A.DEPT_NAME
		                       , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		                       , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		                       , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		                    FROM AFB110T A   WITH (NOLOCK)
		                                 INNER JOIN ABA121T B  WITH (NOLOCK)
		                                         ON A.COMP_CODE = B.COMP_CODE
		                                        AND A.ACCNT     = B.ACCNT 
		                                        AND B.GUBUN     = @SGUBUN  
		                                        AND B.DIVI      = '50' 
		                                        AND B.OPT_DIVI  = '4'
		                                 LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		                   WHERE A.COMP_CODE = #{S_COMP_CODE}
		                     AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' 
						     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							 AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		                     AND NOT A.ACCNT IN (SELECT ACCNT
		                                           FROM ABA400T   WITH (NOLOCK)
		                                          WHERE COMP_CODE   = #{S_COMP_CODE}
		                                            AND ACCNT       = ACCNT_CD 
		                                            AND SUBJECT_DIVI='1'
		                                            AND GROUP_YN    ='Y')
		                   GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		                   UNION ALL
		
		                 (SELECT A.BUDG_YYYYMM
		                       , B.ACCNT_CD
		                       , '0' ACCNT
		                       , B.ACCNT_NAME
		                       , B.OPT_DIVI
		                       , A.DEPT_CODE
		                       , A.DEPT_NAME
		                       , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		                       , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		                       , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		                    FROM AFB110T A   WITH (NOLOCK)
		                                 INNER JOIN ABA121T B  WITH (NOLOCK)
		                                         ON A.COMP_CODE = B.COMP_CODE
		                                        AND A.ACCNT     = B.ACCNT 
		                                        AND B.GUBUN     = @SGUBUN  
		                                        AND B.DIVI      = '50' 
		                                        AND B.OPT_DIVI  = '5'
		                                 LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		                   WHERE A.COMP_CODE = #{S_COMP_CODE}
		                     AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '1' AND '6' 
						     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							 AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		                     AND NOT A.ACCNT IN (SELECT ACCNT
		                                           FROM ABA400T   WITH (NOLOCK)
		                                          WHERE COMP_CODE   = #{S_COMP_CODE}
		                                            AND ACCNT       = ACCNT_CD 
		                                            AND SUBJECT_DIVI='1'
		                                            AND GROUP_YN    ='Y')
		                   GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		
		                   UNION ALL
		
		                 (SELECT A.BUDG_YYYYMM
		                       , B.ACCNT_CD
		                       , '0' ACCNT
		                       , B.ACCNT_NAME
		                       , B.OPT_DIVI
		                       , A.DEPT_CODE
		                       , A.DEPT_NAME
		                       , (SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) - SUM(ISNULL(D.DIVERT_BUDG_I, 0))) AS BUDG
		                       , SUM(A.EX_AMT_I)+SUM(A.AC_AMT_I) RESULT
		                       , SUM(ISNULL(A.BUDG_CONF_I,0)) + SUM(ISNULL(A.BUDG_CONV_I,0)) + SUM(ISNULL(A.BUDG_ASGN_I,0)) + SUM(ISNULL(A.BUDG_SUPP_I,0)) + SUM(ISNULL(A.BUDG_IWALL_I,0)) -SUM(A.EX_AMT_I)-SUM(A.AC_AMT_I) - SUM(ISNULL(D.DIVERT_BUDG_I, 0)) BALANCE
		                    FROM AFB110T A  WITH (NOLOCK)
		                                 INNER JOIN ABA121T B  WITH (NOLOCK)
		                                         ON A.COMP_CODE = B.COMP_CODE
		                                        AND A.ACCNT     = B.ACCNT 
		                                        AND B.GUBUN     = @SGUBUN  
		                                        AND B.DIVI      = '50' 
		                                        AND B.OPT_DIVI  = '5'
		                                 LEFT  JOIN (
                                           SELECT X.COMP_CODE
                                                , X.ACCNT
                                                , X.DEPT_CODE
                                                , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                             FROM AFB121T X WITH (NOLOCK)
                                            WHERE X.COMP_CODE    = #{S_COMP_CODE}
                                              AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                              AND X.DIVERT_DIVI IN ('1', '3')
                                              AND LEFT(X.BUDG_YYYYMM,4) &gt;= #{BUDGET_YYMM}
                                              AND LEFT(X.BUDG_YYYYMM,4) &lt;= #{BUDGET_YYMM}
                                            GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM
                                       ) D  ON D.COMP_CODE = A.COMP_CODE
                                           AND D.DEPT_CODE = A.DEPT_CODE
                                           AND D.ACCNT     = A.ACCNT
		                  WHERE A.COMP_CODE = #{S_COMP_CODE}
		                    AND CONVERT(INTEGER, RIGHT(BUDG_YYYYMM, 2)) BETWEEN '7' AND '12' 
						     AND BUDG_YYYYMM BETWEEN #{sFrDate} AND #{sToDate} 
						<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
							 AND A.DEPT_CODE = #{DEPT_CODE}
						</if>
		                    AND NOT A.ACCNT IN (SELECT ACCNT 
		                                          FROM ABA400T   WITH (NOLOCK)
		                                         WHERE COMP_CODE   = #{S_COMP_CODE}
		                                           AND ACCNT       = ACCNT_CD 
		                                           AND SUBJECT_DIVI='1'
		                                           AND GROUP_YN    ='Y')
		                  GROUP BY A.BUDG_YYYYMM, B.ACCNT_CD, B.ACCNT_NAME, B.OPT_DIVI, A.DEPT_CODE, A.DEPT_NAME)
		               )T
		         GROUP BY T.DEPT_CODE, T.DEPT_NAME, T.ACCNT_CD, T.ACCNT, T.ACCNT_NAME, T.OPT_DIVI
		       ) A
		 WHERE OPT_DIVI='0'
		 GROUP BY DEPT_CODE
		 ORDER BY DEPT_CODE, ACCNT_CD , ACCNT, OPT_DIVI
	</select>
</mapper>