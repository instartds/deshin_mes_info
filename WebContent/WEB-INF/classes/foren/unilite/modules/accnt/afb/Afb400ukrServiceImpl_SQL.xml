<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb400ukrServiceImpl">
	
<select id="afb400ukrServiceImpl.selectList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">			/* 조회 */		
DECLARE   @COMP_CODE   NVARCHAR(08)
      ,   @AC_YYYY     NVARCHAR(04)
      ,   @BUDG_TYPE   NVARCHAR(01)
 
    SET   @COMP_CODE   = #{S_COMP_CODE}
    SET   @AC_YYYY     = #{AC_YYYY}
    SET   @BUDG_TYPE   = #{BUDG_TYPE}

SELECT S.BUDG_CODE		AS 'id'
	 , CASE WHEN ISNULL(S.PARENT_NODE, '') = ''THEN 'root'	        
			ELSE S.PARENT_NODE 
	   END 'parentId'
	 , S.BUDG_CODE      AS BUDG_CODE
     , S.BUDG_NAME      AS BUDG_NAME
     , S.GROUP_YN       AS GROUP_YN
     , S.ACCNT          AS ACCNT
     , S.ACCNT_NAME     AS ACCNT_NAME
     , S.CTL_CAL_UNIT   AS CTL_CAL_UNIT
     , S.CTL_TERM_UNIT  AS CTL_TERM_UNIT
     , S.BUDGCTL_SUM_UNIT   AS BUDGCTL_SUM_UNIT
     , S.PJT_CODE       AS PJT_CODE
     , S.PJT_NAME       AS PJT_NAME
      <if test="BUDG_TYPE == &quot;1&quot;">
     , '1'              AS BUDG_TYPE
     </if>
     <if test="BUDG_TYPE == &quot;2&quot;">
     , '2'              AS BUDG_TYPE
     </if>
     , S.IF_CODE        AS IF_CODE 
     , S.COMP_CODE      AS COMP_CODE 
     , S.AC_YYYY        AS AC_YYYY
     , S.CODE_LEVEL     AS LEVEL_TOP
     , S.CODE_LEVEL     AS CODE_LEVEL
     , S.TREE_LEVEL     AS TREE_LEVEL
     , ISNULL(CASE WHEN S.CODE_LEVEL = 1 THEN ISNULL(S.LEVEL_NUM1, 0)
            WHEN S.CODE_LEVEL = 2 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)
            WHEN S.CODE_LEVEL = 3 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)
            WHEN S.CODE_LEVEL = 4 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
            WHEN S.CODE_LEVEL = 5 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)
            WHEN S.CODE_LEVEL = 6 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)
            WHEN S.CODE_LEVEL = 7 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)+ ISNULL(S.LEVEL_NUM7, 0)
            WHEN S.CODE_LEVEL = 8 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)+ ISNULL(S.LEVEL_NUM7, 0)+ ISNULL(S.LEVEL_NUM8, 0)
       END, 2) AS LEVEL_LEN
     , ISNULL(S.LEVEL_NUM1, 0)  AS LEVEL_NUM1
     , ISNULL(S.LEVEL_NUM2, 0)  AS LEVEL_NUM2
     , ISNULL(S.LEVEL_NUM3, 0)  AS LEVEL_NUM3
     , ISNULL(S.LEVEL_NUM4, 0)  AS LEVEL_NUM4
     , ISNULL(S.LEVEL_NUM5, 0)  AS LEVEL_NUM5
     , ISNULL(S.LEVEL_NUM6, 0)  AS LEVEL_NUM6
     , ISNULL(S.LEVEL_NUM7, 0)  AS LEVEL_NUM7
     , ISNULL(S.LEVEL_NUM8, 0)  AS LEVEL_NUM8
     , S.INSERT_DB_USER AS INSERT_DB_USER
     , S.INSERT_DB_TIME AS INSERT_DB_TIME
     , S.UPDATE_DB_USER AS UPDATE_DB_USER
     , S.UPDATE_DB_TIME AS UPDATE_DB_TIME
  FROM (SELECT a.TREE_LEVEL parent_node			
			,a.*
			, C.ACCNT_NAME
			, C.BUDGCTL_SUM_UNIT
			, D.PJT_NAME 
			,B.LEVEL_NUM1
			,B.LEVEL_NUM2
			,B.LEVEL_NUM3
			,B.LEVEL_NUM4
			,B.LEVEL_NUM5
			,B.LEVEL_NUM6
			,B.LEVEL_NUM7
			,B.LEVEL_NUM8
		FROM 	AFB400T A WITH(NOLOCK)
       LEFT JOIN AFB300T B WITH(NOLOCK)
              ON A.COMP_CODE = B.COMP_CODE
             AND A.AC_YYYY   = B.AC_YYYY
       LEFT JOIN ABA400T C WITH(NOLOCK)
              ON A.COMP_CODE = C.COMP_CODE
             AND A.ACCNT     = C.ACCNT
       LEFT JOIN BCM600T D WITH(NOLOCK)
              ON A.COMP_CODE = D.COMP_CODE
             AND A.PJT_CODE  = D.PJT_CODE
WHERE A.COMP_CODE = @COMP_CODE
  AND A.AC_YYYY   = @AC_YYYY
  AND A.BUDG_CODE = '01'
  )  s
 
 UNION ALL
 
SELECT  S.BUDG_CODE		AS 'id'
	 , CASE WHEN ISNULL(S.PARENT_NODE, '') = ''THEN 'root'	        
			ELSE S.PARENT_NODE 
	   END 'parentId'
	 , S.BUDG_CODE      AS BUDG_CODE
     , S.BUDG_NAME      AS BUDG_NAME
     , S.GROUP_YN       AS GROUP_YN
     , S.ACCNT          AS ACCNT
     , S.ACCNT_NAME     AS ACCNT_NAME
     , S.CTL_CAL_UNIT   AS CTL_CAL_UNIT
     , S.CTL_TERM_UNIT  AS CTL_TERM_UNIT
     , S.BUDGCTL_SUM_UNIT   AS BUDGCTL_SUM_UNIT
     , S.PJT_CODE       AS PJT_CODE
     , S.PJT_NAME       AS PJT_NAME
     , S.BUDG_TYPE      AS BUDG_TYPE
     , S.IF_CODE        AS IF_CODE
     , S.COMP_CODE      AS COMP_CODE
     , S.AC_YYYY        AS AC_YYYY
     , S.CODE_LEVEL     AS LEVEL_TOP
     , S.CODE_LEVEL     AS CODE_LEVEL
     , S.TREE_LEVEL     AS TREE_LEVEL
     , ISNULL(CASE WHEN S.CODE_LEVEL = 1 THEN ISNULL(S.LEVEL_NUM1, 0)
            WHEN S.CODE_LEVEL = 2 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)
            WHEN S.CODE_LEVEL = 3 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)
            WHEN S.CODE_LEVEL = 4 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
            WHEN S.CODE_LEVEL = 5 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)
            WHEN S.CODE_LEVEL = 6 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(S.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)
            WHEN S.CODE_LEVEL = 7 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(s.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)+ ISNULL(s.LEVEL_NUM7, 0)
            WHEN S.CODE_LEVEL = 8 THEN ISNULL(S.LEVEL_NUM1, 0)+ ISNULL(S.LEVEL_NUM2, 0)+ ISNULL(s.LEVEL_NUM3, 0)+ ISNULL(S.LEVEL_NUM4, 0)
                                     + ISNULL(S.LEVEL_NUM5, 0)+ ISNULL(S.LEVEL_NUM6, 0)+ ISNULL(s.LEVEL_NUM7, 0)+ ISNULL(S.LEVEL_NUM8, 0)
       END, 2) AS LEVEL_LEN
     , ISNULL(S.LEVEL_NUM1, 0)  AS LEVEL_NUM1
     , ISNULL(S.LEVEL_NUM2, 0)  AS LEVEL_NUM2
     , ISNULL(S.LEVEL_NUM3, 0)  AS LEVEL_NUM3
     , ISNULL(S.LEVEL_NUM4, 0)  AS LEVEL_NUM4
     , ISNULL(S.LEVEL_NUM5, 0)  AS LEVEL_NUM5
     , ISNULL(S.LEVEL_NUM6, 0)  AS LEVEL_NUM6
     , ISNULL(S.LEVEL_NUM7, 0)  AS LEVEL_NUM7
     , ISNULL(S.LEVEL_NUM8, 0)  AS LEVEL_NUM8
     , S.INSERT_DB_USER AS INSERT_DB_USER
     , S.INSERT_DB_TIME AS INSERT_DB_TIME
     , S.UPDATE_DB_USER AS UPDATE_DB_USER
     , S.UPDATE_DB_TIME AS UPDATE_DB_TIME
  FROM (SELECT a.TREE_LEVEL 'parent_node'
				,a.*
				,C.ACCNT_NAME
				,C.BUDGCTL_SUM_UNIT
				,D.PJT_NAME
				,B.LEVEL_NUM1
				,B.LEVEL_NUM2
				,B.LEVEL_NUM3
				,B.LEVEL_NUM4
				,B.LEVEL_NUM5
				,B.LEVEL_NUM6
				,B.LEVEL_NUM7
				,B.LEVEL_NUM8
			FROM AFB400T A WITH(NOLOCK)
       LEFT JOIN AFB300T B WITH(NOLOCK)
              ON A.COMP_CODE = B.COMP_CODE
             AND A.AC_YYYY   = B.AC_YYYY
       LEFT JOIN ABA400T C WITH(NOLOCK)
              ON A.COMP_CODE = C.COMP_CODE
             AND A.ACCNT     = C.ACCNT
       LEFT JOIN BCM600T D WITH(NOLOCK)
              ON A.COMP_CODE = D.COMP_CODE
             AND A.PJT_CODE  = D.PJT_CODE
 WHERE A.COMP_CODE = @COMP_CODE
   AND A.AC_YYYY   = @AC_YYYY
   AND ((@BUDG_TYPE = '') OR  (@BUDG_TYPE != '' AND A.BUDG_TYPE = @BUDG_TYPE))
)  s
ORDER BY s.BUDG_CODE 
</select>				
	
<select id="afb400ukrServiceImpl.selectCheck" parameterType="Map" resultType="rMap">			
--afb400ukr.Cafb400ukr[fnafb400Save] Query02
SELECT TOP 1 1
FROM    AFB400T WITH (NOLOCK)
WHERE   COMP_CODE = #{S_COMP_CODE}
  AND   AC_YYYY   = #{AC_YYYY}
</select>
		
<select id="afb400ukrServiceImpl.selectCheck2" parameterType="Map" resultType="rMap">
--afb400ukr.Cafb400ukr[fnafb400CheckQ2] Query01
SELECT TOP 1 1 
  FROM AFB410T  WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY}
  AND BUDG_CODE = #{BUDG_CODE}
</select>	

<select id="afb400ukrServiceImpl.checkPK" parameterType="Map" resultType="rMap">
/* afb400ukrServiceImpl.checkPK */
SELECT COUNT(BUDG_CODE) AS CNT
FROM AFB400T   WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY}
  AND BUDG_CODE = #{BUDG_CODE}
</select>
					
<insert id="afb400ukrServiceImpl.insert" parameterType="Map"> 		/* 추가 */   	
--afb400ukr.Cafb400ukr[fnAfb400Save] Query02
INSERT INTO AFB400T
     ( BUDG_CODE
     , BUDG_NAME
     , GROUP_YN
     , ACCNT
     , CTL_CAL_UNIT
     , CTL_TERM_UNIT
     , PJT_CODE
     , BUDG_TYPE
     , IF_CODE
     , COMP_CODE
     , AC_YYYY
     , CODE_LEVEL
     , TREE_LEVEL
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     ) 
VALUES
     ( #{BUDG_CODE}      
     , #{BUDG_NAME}      
     , #{GROUP_YN}       
     , #{ACCNT}          
     , #{CTL_CAL_UNIT}   
     , #{CTL_TERM_UNIT}  
     , #{PJT_CODE}       
     , #{BUDG_TYPE}  
     , #{IF_CODE}    
     , #{S_COMP_CODE}      
     , #{AC_YYYY}        
     , #{CODE_LEVEL}     
     , #{TREE_LEVEL}     
     , #{S_USER_ID} 
     , GETDATE()
     , #{S_USER_ID} 
     , GETDATE()
     )
</insert>

<update id="afb400ukrServiceImpl.update" parameterType="Map">			/* 수정 */
--afb400ukr.Cafb400ukr[fnAfb400Save] Query02
UPDATE AFB400T
   SET BUDG_NAME      = #{BUDG_NAME}
     , GROUP_YN       = #{GROUP_YN}
     , ACCNT          = #{ACCNT}
     , CTL_CAL_UNIT   = #{CTL_CAL_UNIT}
     , CTL_TERM_UNIT  = #{CTL_TERM_UNIT}
     , PJT_CODE       = #{PJT_CODE}
     , BUDG_TYPE      = #{BUDG_TYPE}
     , IF_CODE        = #{IF_CODE}
     , CODE_LEVEL     = #{CODE_LEVEL}
     , TREE_LEVEL     = #{TREE_LEVEL}
     , INSERT_DB_USER = #{S_USER_ID}
     , INSERT_DB_TIME = GETDATE()
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE BUDG_CODE      = #{BUDG_CODE}
   AND COMP_CODE      = #{S_COMP_CODE}
   AND AC_YYYY        = #{AC_YYYY}
</update>

<select id="afb400ukrServiceImpl.selectAfb410tBeforeSave" parameterType="Map" resultType="rMap">			/* 410t조회(삭제전) */		
--afb400ukr.Cafb400ukr[fnafb400CheckQ2] Query01
SELECT TOP 1 1 
  FROM AFB410T  WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY}
  AND BUDG_CODE = #{BUDG_CODE}
</select>

<delete id="afb400ukrServiceImpl.delete" parameterType="Map">			/* 삭제 */
--afb400ukr.Cafb400ukr[fnAfb400Save] Query01
DELETE FROM AFB400T 
 WHERE BUDG_CODE = #{BUDG_CODE}
   AND COMP_CODE = #{S_COMP_CODE}
   AND AC_YYYY   = #{AC_YYYY}
  
</delete>

<select id="afb400ukrServiceImpl.selectAfb400t" parameterType="Map" resultType="rMap">			/* 400t조회 */			
--afb400ukr.Cafb400ukr[fnafb400CheckQ] Query01
SELECT TOP 1 1 
  FROM AFB400T  WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY_NEXT}
</select>

<select id="afb400ukrServiceImpl.selectAfb410t" parameterType="Map" resultType="rMap">			/* 410t조회 */		
--afb400ukr.Cafb400ukr[fnafb400CheckQ1] Query01
SELECT TOP 1 1 
  FROM AFB410T  WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY_NEXT}
</select>

<insert id="afb400ukrServiceImpl.insertDataCopy" parameterType="Map">    	/* 전년도자료복사 */
--afb400ukr.Cafb400ukr[fnafb400Copy] Query01
DECLARE   @COMP_CODE            NVARCHAR(08)
      ,   @USER_ID              NVARCHAR(100)
      ,   @AC_YYYY_THIS         NVARCHAR(04)
      ,   @AC_YYYY_NEXT         NVARCHAR(04)

SET @COMP_CODE          = #{S_COMP_CODE}
SET @AC_YYYY_NEXT       = #{AC_YYYY_NEXT}
SET @AC_YYYY_THIS       = #{AC_YYYY_THIS}
SET @USER_ID            = #{S_USER_ID}

        DELETE FROM AFB400T
              WHERE COMP_CODE = @COMP_CODE
                AND AC_YYYY   = @AC_YYYY_NEXT
    
        INSERT INTO AFB400T
                  ( COMP_CODE,    AC_YYYY,       BUDG_CODE,       BUDG_NAME,      ACCNT
                  , CTL_CAL_UNIT, CTL_TERM_UNIT, PJT_CODE,        BUDG_TYPE,      GROUP_YN
                  , CODE_LEVEL,   TREE_LEVEL,    IF_CODE,         INSERT_DB_USER,  INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
                  )
            (SELECT COMP_CODE,      @AC_YYYY_NEXT AS AC_YYYY, BUDG_CODE,       BUDG_NAME, ACCNT
                  , CTL_CAL_UNIT,   CTL_TERM_UNIT,            PJT_CODE,        BUDG_TYPE, GROUP_YN
                  , CODE_LEVEL,     TREE_LEVEL,               IF_CODE,         @USER_ID,  GETDATE() AS INSERT_DB_TIME, @USER_ID, GETDATE() AS UPDATE_DB_TIME
               FROM AFB400T  WITH (NOLOCK)
              WHERE COMP_CODE = @COMP_CODE
                AND AC_YYYY   = @AC_YYYY_THIS
            )
        <selectKey keyProperty="idx" resultType="double" order="AFTER">
        select 1 AS idx
        </selectKey>
</insert>

<delete id="afb400ukrServiceImpl.deleteDataCopy" parameterType="Map">			/* 전년도자료삭제 */
--afb400ukr.Cafb400ukr[fnafb400DetAll] Query01
DECLARE   @COMP_CODE            NVARCHAR(08)
      ,   @AC_YYYY_NEXT         NVARCHAR(04)

SET @COMP_CODE          = #{S_COMP_CODE}
SET @AC_YYYY_NEXT       = #{AC_YYYY_NEXT}

        BEGIN
            DELETE FROM AFB400T
                  WHERE COMP_CODE = @COMP_CODE
                    AND AC_YYYY   = @AC_YYYY_NEXT
        END
</delete>
	
</mapper>