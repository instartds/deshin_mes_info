<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb540skrServiceImpl">
<select id="afb540skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02
BEGIN
    DECLARE         @COMP_CODE          NVARCHAR(08)

--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}
--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  *
    FROM    uniLITE.fnGetBudgLevelName(@COMP_CODE, #{ST_DATE})
END	
</select>	

<select id="afb540skrServiceImpl.selectChargeGubun" parameterType="Map" resultType="rMap">		/* 집계구분 셋팅*/
--afb540skr.Cafb500skr[fnAfb540QStd] Query03
SELECT CASE WHEN ISNULL(B.DEPT_CODE, '') = '' THEN ISNULL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE ISNULL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , ISNULL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , ISNULL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A  WITH (NOLOCK)
       LEFT  JOIN HUM100T AS B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E  WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F  WITH (NOLOCK) ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = N'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = N'A169'
                                             AND M2.SUB_CODE    = N'60'
       LEFT  JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = N'A169'
                                             AND M3.SUB_CODE    = N'61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb540skrServiceImpl.selectDeptBudg" parameterType="Map" resultType="rMap">		/* 부서정보, 예산현황 조회*/
--afb500skr.Cafb500skr[fnAfb500QStd] Query03
SELECT CASE WHEN ISNULL(B.DEPT_CODE, '') = '' THEN ISNULL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE ISNULL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE2
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , ISNULL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , ISNULL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A  WITH (NOLOCK)
       LEFT  JOIN HUM100T AS B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E  WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F  WITH (NOLOCK) ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = N'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = N'A169'
                                             AND M2.SUB_CODE    = N'60'
       LEFT  JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = N'A169'
                                             AND M3.SUB_CODE    = N'61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb540skrServiceImpl.selectAmtPoint" parameterType="Map" resultType="rMap">
--afb540skr.Cafb540skr[fnAfb540QStd]Query01                  
SELECT ISNULL(AMT_POINT, '1') AS AMT_POINT 
	  ,ISNULL(BUDG_BASE, '1') AS BUDG_BASE    
 FROM ABA100T WITH (NOLOCK)                 
WHERE COMP_CODE = #{S_COMP_CODE}
</select>
	
<select id="afb540skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb540skr.Cafb540skr[fnAfb540QStd] Query05
BEGIN
    SET NOCOUNT ON

    DECLARE @COMP_CODE         NVARCHAR(08)   --(필수) 법인코드 
          , @AC_YYYY           NVARCHAR(04)   --(필수) 예산년도
          , @FR_YYYYMM         NVARCHAR(08)   --(필수) 시작 예산년월
          , @TO_YYYYMM         NVARCHAR(08)   --(필수) 종료 예산년월
          , @DEPT_CODE         NVARCHAR(08)   --(선택) 부서코드
          , @FR_BUDG_CODE      NVARCHAR(30)   --(선택) FROM 예산과목
          , @TO_BUDG_CODE      NVARCHAR(30)   --(선택) TO   예산과목
          , @BUDG_TYPE         NVARCHAR(01)   --(선택) 수지구분
          , @USER_ID           NVARCHAR(100)   --(필수) 사용자ID
          , @PV_YYYYMM         NVARCHAR(08)   --(필수) 시작 예산년월의 전월
          , @LOWER_DEPT        NVARCHAR(01)   --(선택) 하위부서포함
          , @BA_YYYYMM         NVARCHAR(08)   --(필수) 시작년월
          , @PROJECT_NO        NVARCHAR(20)   --(선택) 프로젝트
          , @BUDG_GUBUN        NVARCHAR(01)   --(선택) 예산실적집계

          , @FnMonth           NVARCHAR(08)   -- 회계시작월
          , @ToMonth           NVARCHAR(08)   -- 회계종료월

          , @DataType          NVARCHAR(01)   -- 예산확정테이블의 데이터 존재여부
          , @LEN               NUMERIC(2,0)
          , @TREE_LEVEL        NVARCHAR(08)   -- 부서코드레벨
          , @LEVEL_LEN         NUMERIC(2,0)   -- 부서코드레벨 길이
          , @USE_BUDGYN        NVARCHAR(01)   -- 예산현황_사용예산코드만 조회
          , @USER_DEPT_CODE    NVARCHAR(08)   -- 사용자ID의 예산부서(없으면 부서)
          , @CHARGE_GUBUN      NVARCHAR(01)   -- 사용자ID의 현업부서 구분(1:회계부서, 2:현업부서)

          , @LEVEL_LEN1        NUMERIC(2,0)
          , @LEVEL_LEN2        NUMERIC(2,0)
          , @LEVEL_LEN3        NUMERIC(2,0)
          , @LEVEL_LEN4        NUMERIC(2,0)
          , @LEVEL_LEN5        NUMERIC(2,0)
          , @LEVEL_LEN6        NUMERIC(2,0)
          , @LEVEL_LEN7        NUMERIC(2,0)
          , @LEVEL_LEN8        NUMERIC(2,0)

          , @BUDG_BASE         NVARCHAR(01)   -- 예산통제기준
          , @slUnit 		NVARCHAR(10)
		  , @lUnit 			NVARCHAR(10)
		SELECT @slUnit = REF_CODE1 
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B042' 
		   AND SUB_CODE  = #{MONEY_UNIT}
		   
		IF EXISTS(SELECT TOP 1 REF_CODE1 FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND MAIN_CODE = 'B042' AND SUB_CODE  = #{MONEY_UNIT})
			BEGIN
				SET @lUnit = @slUnit
			END
		
		IF NOT EXISTS(SELECT TOP 1 REF_CODE1 FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND MAIN_CODE = 'B042' AND SUB_CODE  = #{MONEY_UNIT})
			BEGIN
				SET @lUnit = '1'
			END

--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @FR_YYYYMM      = #{FR_YYYYMM}
    SET @TO_YYYYMM      = #{TO_YYYYMM}
    SET @AC_YYYY        = #{AC_YYYY}
    SET @DEPT_CODE      = #{DEPT_CODE}
    SET @FR_BUDG_CODE   = #{BUDG_CODE_FR}
    SET @TO_BUDG_CODE   = #{BUDG_CODE_TO}
    SET @BUDG_TYPE      = #{BUDG_TYPE}
    SET @USER_ID        = #{S_USER_ID}
    SET @PV_YYYYMM      = CONVERT(int, @FR_YYYYMM) - '1'
    SET @LOWER_DEPT     = #{LOWER_DEPT}
    SET @BA_YYYYMM      = SUBSTRING(@FR_YYYYMM, 0, 4) + '01'
    SET @PROJECT_NO     = #{AC_PROJECT_CODE}
    <if test="BUDG_GUBUN == &quot;3&quot;">
    SET @BUDG_GUBUN   = ''
    </if>
    <if test="BUDG_GUBUN != &quot;3&quot;">
    SET @BUDG_GUBUN   = #{BUDG_GUBUN}
    </if>

    SET @BUDG_BASE      = ${sSqlBudgBase}

    SET @LEN            = LEN(@TO_BUDG_CODE)

--  [ 부서코드레벨 및 길이 가져오기 ] --------------------------------------------------------------------------------------------------
    IF @DEPT_CODE != ''
        SELECT @TREE_LEVEL = TREE_LEVEL
             , @LEVEL_LEN  = LEN(TREE_LEVEL)
          FROM BSA210T WITH (NOLOCK)
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'

--  [ 회계기간 가져오기 ] --------------------------------------------------------------------------------------------------
    SELECT @FnMonth  = SUBSTRING(FN_DATE, 5, 2)
         , @ToMonth  = SUBSTRING(TO_DATE, 5, 2)
      FROM BOR100T WITH (NOLOCK)
     WHERE COMP_CODE = @COMP_CODE

--  [ 예산코드자릿수 가져오기 ] --------------------------------------------------------------------------------------------------
    SELECT @LEVEL_LEN1 = ISNULL(LEVEL_NUM1, 0)
         , @LEVEL_LEN2 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0)
         , @LEVEL_LEN3 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0)
         , @LEVEL_LEN4 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
         , @LEVEL_LEN5 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
                       + ISNULL(LEVEL_NUM5, 0)
         , @LEVEL_LEN6 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
                       + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0)
         , @LEVEL_LEN7 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
                       + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0) + ISNULL(LEVEL_NUM7, 0)
         , @LEVEL_LEN8 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
                       + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0) + ISNULL(LEVEL_NUM7, 0) + ISNULL(LEVEL_NUM8, 0)
      FROM AFB300T WITH (NOLOCK)
     WHERE COMP_CODE = @COMP_CODE
       AND AC_YYYY   = @AC_YYYY

--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    DECLARE     @TypeKey                NVARCHAR(20)

    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

    IF NOT EXISTS   (
                    SELECT TOP 1 1
                    FROM   T_AFB540SKR1 WITH (NOLOCK)
                    WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + '%'
                    )
    BEGIN
        TRUNCATE TABLE T_AFB540SKR1
    END

--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
    -- 1. 예산확정정보 테이블(AFB510T)에서 데이터 조회하여 그리드 포맷에 맞춰 임시테이블에 INSERT
    --    (예산코드명을 레벨순서대로 펼침, 예산금액을 12개월로 펼침)
    INSERT INTO T_AFB540SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, AC_YYYY, BUDG_YYYYMM, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME
                           , BUDG_I_TOT, BUDG_CONF_I, BUDG_CONV_I, BUDG_ASGN_I, BUDG_SUPP_I, BUDG_IWALL_I
                           , ACT_I_01, ACT_I_02, ACT_I_02_1, ACT_I_02_2, ACT_I_03, ACT_I_03_1, ACT_I_03_2
                           , BAL_I, NON_PAY_I, BUDG_TYPE
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                           , BUDG_CODE_${index+1}
    </foreach>
                            )
    SELECT @TypeKey                  AS TYPE_KEY
         , N'0'                      AS TYPE_FLAG
         , B.COMP_CODE               AS COMP_CODE
         , @AC_YYYY                  AS AC_YYYY
         , B.BUDG_YYYYMM             AS BUDG_YYYYMM
         , B.DEPT_CODE               AS DEPT_CODE
         , C.TREE_NAME               AS DEPT_NAME
         , B.BUDG_CODE               AS BUDG_CODE
         , D.BUDG_NAME               AS BUDG_NAME
         , ISNULL(B.BUDG_CONF_I , 0)
         + ISNULL(B.BUDG_CONV_I , 0)
         + ISNULL(B.BUDG_ASGN_I , 0)
         + ISNULL(B.BUDG_SUPP_I , 0)
         + ISNULl(B.BUDG_IWALL_I, 0) AS BUDG_I_TOT
         , ISNULL(B.BUDG_CONF_I , 0) AS BUDG_CONF_I
         , ISNULL(B.BUDG_CONV_I , 0) AS BUDG_CONV_I
         , ISNULL(B.BUDG_ASGN_I , 0) AS BUDG_ASGN_I
         , ISNULL(B.BUDG_SUPP_I , 0) AS BUDG_SUPP_I
         , ISNULL(B.BUDG_IWALL_I, 0) AS BUDG_IWALL_I

           -- 계
         , CASE WHEN @BUDG_BASE = '1' THEN
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
                ELSE
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
           END                       AS ACT_I_01 

           -- 기집행액(합계)
         , CASE WHEN @BUDG_BASE = '1' THEN
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @PV_YYYYMM   THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
                ELSE
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @PV_YYYYMM   THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
           END                       AS ACT_I_02

           -- 기집행액(기안잔액)
         , CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @PV_YYYYMM   THEN ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0)
                ELSE 0
           END                       AS ACT_I_02_1

           -- 기집행액(지출금액)
         , CASE WHEN @BUDG_BASE = '1' THEN
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @PV_YYYYMM   THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
                ELSE
                     CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @PV_YYYYMM   THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
           END                       AS ACT_I_02_2

           -- 집행액(합계)
         , CASE WHEN @BUDG_BASE = '1' THEN
                     CASE WHEN B.BUDG_YYYYMM &gt;= @FR_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
                ELSE
                     CASE WHEN B.BUDG_YYYYMM &gt;= @FR_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
           END                       AS ACT_I_03

           -- 집행액(기안잔액)
         , CASE WHEN B.BUDG_YYYYMM &gt;= @FR_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0)
                ELSE 0
           END                       AS ACT_I_03_1

           -- 집행액(지출금액)
         , CASE WHEN @BUDG_BASE = '1' THEN
                     CASE WHEN B.BUDG_YYYYMM &gt;= @FR_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
                ELSE
                     CASE WHEN B.BUDG_YYYYMM &gt;= @FR_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM   THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.REQ_AMT, 0)
                          ELSE 0
                     END
           END                       AS ACT_I_03_2

           -- 집행잔액
         , CASE WHEN @BUDG_BASE = '1' THEN
                     ISNULL(B.BUDG_CONF_I , 0)
                   + ISNULL(B.BUDG_CONV_I , 0)
                   + ISNULL(B.BUDG_ASGN_I , 0)
                   + ISNULL(B.BUDG_SUPP_I , 0)
                   + ISNULL(B.BUDG_IWALL_I, 0)
                   - (CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM THEN ISNULL(B.EX_AMT_I, 0) + ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                           ELSE 0
                      END)
                ELSE
                     ISNULL(B.BUDG_CONF_I , 0)
                   + ISNULL(B.BUDG_CONV_I , 0)
                   + ISNULL(B.BUDG_ASGN_I , 0)
                   + ISNULL(B.BUDG_SUPP_I , 0)
                   + ISNULL(B.BUDG_IWALL_I, 0)
                   - (CASE WHEN B.BUDG_YYYYMM &gt;= @BA_YYYYMM AND B.BUDG_YYYYMM &lt;= @TO_YYYYMM THEN ISNULL(B.AC_AMT_I, 0) + ISNULL(B.DRAFT_AMT, 0) + ISNULL(B.ORDER_AMT, 0) + ISNULL(B.REQ_AMT, 0)
                           ELSE 0
                      END)
            END                      AS BAL_I

           -- 미지급액
         , ISNULL(E.NON_PAY_I, 0)      AS NON_PAY_I
    
         , D.BUDG_TYPE               AS BUDG_TYPE
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
         , LEFT(B.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE_${index+1}
    </foreach>
    
      FROM            AFB510T AS B  WITH (NOLOCK)
    
    --사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
           INNER JOIN (SELECT COMP_CODE
                            , BUDG_CODE
                       FROM   AFB410T WITH (NOLOCK)
                       WHERE  COMP_CODE = @COMP_CODE
                       AND    AC_YYYY   = @AC_YYYY
                       AND    DEPT_CODE = #{DEPT_CODE2}
                       AND    USE_YN    = 'Y'
                       )        A                 ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE
    	</if>
    </if>
           LEFT  JOIN AFB410T AS A  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.AC_YYYY        = @AC_YYYY
                                                 AND A.DEPT_CODE      = B.DEPT_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE
    
           LEFT  JOIN BSA210T AS C  WITH (NOLOCK) ON C.COMP_CODE      = B.COMP_CODE
                                                 AND C.TREE_CODE      = B.DEPT_CODE
           LEFT  JOIN AFB400T AS D  WITH (NOLOCK) ON D.COMP_CODE      = B.COMP_CODE
                                                 AND D.AC_YYYY        = @AC_YYYY
                                                 AND D.BUDG_CODE      = B.BUDG_CODE
           LEFT  JOIN (
                        SELECT  S1.COMP_CODE, LEFT(S1.SLIP_DATE, 6) PAY_YYYYMM, S2.DEPT_CODE, S2.BUDG_CODE
                              , ISNULL((SUM(ISNULL(S2.TOT_AMT_I, 0)) - SUM(ISNULL(T.TOT_AMT_I, 0))), 0) NON_PAY_I 
                        FROM                AFB700T   S1 WITH (NOLOCK)
                                INNER JOIN  AFB710T   S2 WITH (NOLOCK) ON S2.COMP_CODE      = S1.COMP_CODE
                                                                      AND S2.PAY_DRAFT_NO   = S1.PAY_DRAFT_NO
                                LEFT  JOIN (SELECT COMP_CODE
                                                 , TRANS_SEQ
                                                 , SUM(TOT_AMT_I) AS TOT_AMT_I
                                            FROM   AFB900T WITH (NOLOCK)
                                            WHERE  COMP_CODE    = @COMP_CODE
                                            AND    TRANS_DATE  &gt;= @BA_YYYYMM + '01'
                                            AND    TRANS_DATE  &lt;= @TO_YYYYMM + '31'
                                            GROUP BY COMP_CODE, TRANS_SEQ
                                            )         T                ON T.COMP_CODE       = S2.COMP_CODE
                                                                      AND T.TRANS_SEQ       = S2.TRANS_SEQ
                                LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE      = S1.COMP_CODE
                                                                      AND M1.MAIN_CODE      = 'S091'
                                                                      AND M1.SUB_CODE       = S1.COMP_CODE
                                LEFT  JOIN  T_GWIF    S3 WITH (NOLOCK) ON S3.GWIF_ID        = M1.REF_CODE1 + '1' + S1.PAY_DRAFT_NO
                        WHERE   S1.COMP_CODE             = @COMP_CODE
                        AND     S1.SLIP_DATE            &gt;= @BA_YYYYMM + '01'
                        AND     S1.SLIP_DATE            &lt;= @TO_YYYYMM + '31'
                        AND     ISNULL(S3.GW_STATUS, S1.STATUS) != '5'
                        GROUP BY S1.COMP_CODE, LEFT(S1.SLIP_DATE, 6), S2.DEPT_CODE, S2.BUDG_CODE
                      )       AS E                ON E.COMP_CODE     = B.COMP_CODE
                                                 AND E.PAY_YYYYMM    = B.BUDG_YYYYMM
                                                 AND E.DEPT_CODE     = B.DEPT_CODE
                                                 AND E.BUDG_CODE     = B.BUDG_CODE
     WHERE B.COMP_CODE                = @COMP_CODE
       AND B.BUDG_YYYYMM             &gt;= @AC_YYYY + @FnMonth  -- 예산년도 + 회계시작월
       AND B.BUDG_YYYYMM             &lt;= @AC_YYYY + @ToMonth  -- 예산년도 + 회계종료월
       AND ((B.DEPT_CODE              = @DEPT_CODE        AND @DEPT_CODE    != '' AND @LOWER_DEPT   != 'Y') OR 
            (C.TREE_LEVEL          LIKE @TREE_LEVEL + '%' AND @DEPT_CODE    != '' AND @LOWER_DEPT    = 'Y') OR
            (@DEPT_CODE               = '' ))
       AND ((B.BUDG_CODE             &gt;= @FR_BUDG_CODE     AND @FR_BUDG_CODE != '') OR (@FR_BUDG_CODE = ''))
       AND ((LEFT(B.BUDG_CODE, @LEN) &lt;= @TO_BUDG_CODE     AND @TO_BUDG_CODE != '') OR (@TO_BUDG_CODE = ''))
       AND ((D.BUDG_TYPE              = @BUDG_TYPE        AND @BUDG_TYPE    != '') OR (@BUDG_TYPE    = ''))
       AND D.GROUP_YN                 = N'N'
       AND (B.BUDG_I != 0 OR B.BUDG_CONF_I != 0 OR B.BUDG_CONV_I != 0 OR  B.BUDG_ASGN_I != 0 OR  B.BUDG_SUPP_I != 0
        OR  B.BUDG_IWALL_I!= 0 OR  B.EX_AMT_I != 0 OR  B.AC_AMT_I != 0 OR  B.DRAFT_AMT != 0 OR  B.ORDER_AMT != 0 OR  B.REQ_AMT != 0)
    
       AND ((B.BUDG_GUBUN   = @BUDG_GUBUN       AND @BUDG_GUBUN   != '')  OR (@BUDG_GUBUN   = ''))
       AND ((D.PJT_CODE     = @PROJECT_NO       AND @PROJECT_NO   != '')  OR (@PROJECT_NO   = ''))
       

    -- 임시테이블에 레벨별 합계 INSERT
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
        INSERT INTO T_AFB540SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME, CODE_LEVEL
                               , BUDG_I_TOT, BUDG_CONF_I, BUDG_CONV_I, BUDG_ASGN_I, BUDG_SUPP_I, BUDG_IWALL_I
                               , ACT_I_01, ACT_I_02, ACT_I_02_1, ACT_I_02_2, ACT_I_03, ACT_I_03_1, ACT_I_03_2
                               , BAL_I, NON_PAY_I, BUDG_TYPE)
        SELECT X.TYPE_KEY   AS TYPE_KEY
             , N'1'         AS TYPE_FLAG
             , X.COMP_CODE  AS COMP_CODE
        <if test="RDO == &quot;1&quot;">
             , X.DEPT_CODE  AS DEPT_CODE
             , X.DEPT_NAME  AS DEPT_NAME
        </if>
        <if test="RDO == &quot;2&quot;">
             , CONVERT(NVARCHAR(08),'') AS DEPT_CODE
             , CONVERT(NVARCHAR(30),'') AS DEPT_NAME
        </if>
             , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE
             , SPACE(( ${index+1} -1) * 2) + Y.BUDG_NAME AS BUDG_NAME
             , Y.CODE_LEVEL                                AS CODE_LEVEL
             , ISNULL(ROUND(SUM(X.BUDG_I_TOT)   / @lUnit ${sSqlAmtPoint},0)    AS BUDG_I_TOT
             , ISNULL(ROUND(SUM(X.BUDG_CONF_I)  / @lUnit ${sSqlAmtPoint},0)    AS BUDG_CONF_I
             , ISNULL(ROUND(SUM(X.BUDG_CONV_I)  / @lUnit ${sSqlAmtPoint},0)    AS BUDG_CONV_I
             , ISNULL(ROUND(SUM(X.BUDG_ASGN_I)  / @lUnit ${sSqlAmtPoint},0)    AS BUDG_ASGN_I
             , ISNULL(ROUND(SUM(X.BUDG_SUPP_I)  / @lUnit ${sSqlAmtPoint},0)    AS BUDG_SUPP_I
             , ISNULL(ROUND(SUM(X.BUDG_IWALL_I) / @lUnit ${sSqlAmtPoint},0)    AS BUDG_IWALL_I
             , ISNULL(ROUND(SUM(X.ACT_I_01)     / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_01
             , ISNULL(ROUND(SUM(X.ACT_I_02)     / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_02
             , ISNULL(ROUND(SUM(X.ACT_I_02_1)   / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_02_1
             , ISNULL(ROUND(SUM(X.ACT_I_02_2)   / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_02_2
             , ISNULL(ROUND(SUM(X.ACT_I_03)     / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_03
             , ISNULL(ROUND(SUM(X.ACT_I_03_1)   / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_03_1
             , ISNULL(ROUND(SUM(X.ACT_I_03_2)   / @lUnit ${sSqlAmtPoint},0)    AS ACT_I_03_2
             , ISNULL(ROUND(SUM(X.BAL_I)        / @lUnit ${sSqlAmtPoint},0)    AS BAL_I
             , ISNULL(ROUND(SUM(X.NON_PAY_I)    / @lUnit ${sSqlAmtPoint},0)    AS NON_PAY_I
        
             , X.BUDG_TYPE
        
        FROM          T_AFB540SKR1 X WITH (NOLOCK)
            LEFT JOIN AFB400T      Y WITH (NOLOCK) ON Y.COMP_CODE = X.COMP_CODE
                                                  AND Y.AC_YYYY   = X.AC_YYYY
                                                  AND Y.BUDG_CODE = X.BUDG_CODE_${index+1}
        WHERE  TYPE_KEY  = @TypeKey
        AND    TYPE_FLAG = '0'
       
        GROUP BY X.TYPE_KEY, X.COMP_CODE
        
        <if test="RDO == &quot;1&quot;">
                   , X.DEPT_CODE, X.DEPT_NAME, X.BUDG_TYPE
        </if>
        
               , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ), Y.BUDG_NAME, Y.CODE_LEVEL, X.BUDG_TYPE
        
    </foreach>

    -- Main Query
    SELECT COMP_CODE
         , DEPT_CODE
         , DEPT_NAME
         , BUDG_CODE
         , BUDG_NAME
         , CODE_LEVEL
         , BUDG_I_TOT
         , BUDG_CONF_I
         , BUDG_CONV_I
         , BUDG_ASGN_I
         , BUDG_SUPP_I
         , BUDG_IWALL_I
         , ACT_I_01
         , ACT_I_02
         , ACT_I_02_1
         , ACT_I_02_2
         , ACT_I_03
         , ACT_I_03_1
         , ACT_I_03_2
         , BAL_I
         , NON_PAY_I
         , BUDG_TYPE
    FROM   T_AFB540SKR1  WITH (NOLOCK)
    WHERE  TYPE_KEY  = @TypeKey
    AND    TYPE_FLAG = '1'
    ORDER BY COMP_CODE, DEPT_CODE, BUDG_CODE

    SET NOCOUNT OFF
END
</select>

</mapper>