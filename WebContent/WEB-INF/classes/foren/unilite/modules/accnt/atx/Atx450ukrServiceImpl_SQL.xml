<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx450ukrServiceImpl">					

<select id="atx450ukrServiceImpl.selectFirst" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q]
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , GUBUN
     , NUM
     , SUPPLY_AMT
     , TAX_AMT
     , REMARK
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
  FROM ATX451T  WITH (NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
   AND FR_PUB_DATE = #{FR_PUB_DATE}
   AND TO_PUB_DATE = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
</select> 

<select id="atx450ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q] ATX451T조회
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT FR_PUB_DATE 
     , TO_PUB_DATE 
     , BILL_DIV_CODE 
     , GUBUN 
     , (SELECT CODE_NAME 
          FROM BSA100T   WITH (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'A070' 
           AND SUB_CODE != '$'  
           AND REF_CODE1 = A.GUBUN) AS CODE_NAME
     , A.NUM  
     , A.SUPPLY_AMT  
     , A.TAX_AMT   
     , ISNULL(A.REMARK, '') AS REMARK  
     , INSERT_DB_USER 
     , INSERT_DB_TIME 
     , UPDATE_DB_USER 
     , UPDATE_DB_TIME 
     , COMP_CODE
  FROM ATX451T A   WITH (NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
   AND FR_PUB_DATE = #{FR_PUB_DATE}
   AND TO_PUB_DATE = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
</select>

<select id="atx450ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q] !!
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT FR_PUB_DATE 
     , TO_PUB_DATE 
     , BILL_DIV_CODE 
     , SEQ 
     , SUPPLY_AMT 
     , TAX_AMT 
     , TOT_SUPPLY_AMT 
     , TAXFREE_AMT 
     , NONTAX_AMT 
     , '' AS REMARK
     , INSERT_DB_USER 
     , INSERT_DB_TIME 
     , UPDATE_DB_USER 
     , UPDATE_DB_TIME 
     , COMP_CODE
  FROM ATX452T   WITH (NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
   AND FR_PUB_DATE = #{FR_PUB_DATE}
   AND TO_PUB_DATE = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
</select>

<select id="atx450ukrServiceImpl.selectList3" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q] !!!
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT FR_PUB_DATE 
     , TO_PUB_DATE 
     , BILL_DIV_CODE 
     , SEQ 
     , TOT_TAX_AMT 
     , NONTAX_AMT			/* 그리드 추가된 부분 20160923*/
     , TOT_SUPPLY_AMT		/* 그리드 추가된 부분 20160923*/
     , TAXFREE_RATE 
     , TOT_NONTAX_AMT 
     , GI_NONTAX_AMT 
     , DEDUCT_AMT 
     , '' AS REMARK
     , INSERT_DB_USER 
     , INSERT_DB_TIME 
     , UPDATE_DB_USER 
     , UPDATE_DB_TIME 
     , COMP_CODE
  FROM ATX453T   WITH (NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
   AND FR_PUB_DATE = #{FR_PUB_DATE}
   AND TO_PUB_DATE = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
</select>

<select id="atx450ukrServiceImpl.selectList4" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q] !!!!
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT FR_PUB_DATE 
     , TO_PUB_DATE 
     , BILL_DIV_CODE 
     , SEQ 
     , PO_AMT 
     , RECAL_RATE 
     , TAXFREE_RATE 
     , DEDUCT_AMT 
     , '' AS REMARK
     , INSERT_DB_USER 
     , INSERT_DB_TIME 
     , UPDATE_DB_USER 
     , UPDATE_DB_TIME 
     , COMP_CODE
  FROM ATX454T   WITH (NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
   AND FR_PUB_DATE = #{FR_PUB_DATE}
   AND TO_PUB_DATE = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
</select>

<select id="atx450ukrServiceImpl.selectList_1" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q] ATX100T조회1 (2.공제받지 못할 매입세액 내역)
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT '' AS FR_PUB_DATE 
     , '' AS TO_PUB_DATE 
     , '' AS BILL_DIV_CODE 
     , B.REF_CODE1 AS GUBUN  
     , B.CODE_NAME AS CODE_NAME 
     , COUNT(A.REASON_CODE) AS NUM  
     , SUM(ISNULL(A.SUPPLY_AMT_I,0)) AS SUPPLY_AMT 
     , SUM(ISNULL(A.TAX_AMT_I,0)) AS TAX_AMT  
     , '' AS REMARK  
     , '' AS INSERT_DB_USER 
     , '' AS INSERT_DB_TIME 
     , '' AS UPDATE_DB_USER 
     , '' AS UPDATE_DB_TIME 
     , '' AS COMP_CODE
     , 'N' AS FLAG
  FROM           BSA100T B  WITH (NOLOCK)
       LEFT JOIN ATX100T A  WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
                                          AND A.REASON_CODE = B.SUB_CODE 
                                          AND A.PROOF_KIND IN ('54', '61') 
                                          AND A.PUB_DATE   &gt;= #{FR_PUB_DATE}
                                          AND A.PUB_DATE   &lt;= #{TO_PUB_DATE}
                                          AND A.BILL_DIVI_CODE = #{BILL_DIV_CODE}
 WHERE B.COMP_CODE   = #{S_COMP_CODE}
 AND   B.MAIN_CODE   = 'A070' 
 AND   B.SUB_CODE   != '$'
 AND   ISNULL(B.REF_CODE1,'') != ''
 GROUP BY A.COMP_CODE, A.REASON_CODE, B.REF_CODE1, B.CODE_NAME
 ORDER BY B.REF_CODE1
</select>

<select id="atx450ukrServiceImpl.selectList2_2" parameterType="Map" resultType="rMap">
/* --atx450ukr.Catx450ukr[fnatx450q] ATX100T조회2 (3.공통매입세액 안분계산 내역) */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE         @COMP_CODE          NVARCHAR(08)
                  , @FR_PUB_DATE        NVARCHAR(08)
                  , @TO_PUB_DATE        NVARCHAR(08)
                  , @BILL_DIV_CODE      NVARCHAR(08)

/* --  [ 변수 값 할당 ] -------------------------------------------------------------------------------------------------- */
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @FR_PUB_DATE    = #{FR_PUB_DATE}
    SET @TO_PUB_DATE    = #{TO_PUB_DATE}
    SET @BILL_DIV_CODE  = #{BILL_DIV_CODE}


/* --  [ 예정기간 ] -------------------------------------------------------------------------------------------------- */
    DECLARE         @TERM_DIVI          NVARCHAR(01)

    SELECT  @TERM_DIVI   = SUB_CODE
    FROM    BSA100T WITH (NOLOCK)
    WHERE   COMP_CODE = @COMP_CODE
    AND     MAIN_CODE = N'A067'
    AND    (RIGHT(ISNULL(REF_CODE1,''), 4) = RIGHT(@TO_PUB_DATE, 4)
     OR     RIGHT(ISNULL(REF_CODE2,''), 4) = RIGHT(@TO_PUB_DATE, 4))

    IF (@TERM_DIVI = '1')
    BEGIN
/* -- (12)총공급가액등 = 과세표준명세 + 면세사업수입금액 - 간주임대료 */
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SELECT '' AS FR_PUB_DATE 
		 , '' AS TO_PUB_DATE 
		 , '' AS BILL_DIV_CODE 
		 , 1 AS SEQ 
		 , SUM(ISNULL(A.SUPPLY_AMT_I,0))          AS SUPPLY_AMT 
		 , SUM(ISNULL(A.TAX_AMT_I,0))             AS TAX_AMT  
		 , (ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0))                 AS TOT_SUPPLY_AMT 
		 , ISNULL(C.NONTAX_SUPPLY_TOT, 0)         AS TAXFREE_AMT 
		 , CASE WHEN (ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) = 0 THEN 0
				ELSE SUM(ISNULL(A.TAX_AMT_I,0)) 
							 * (ISNULL(C.NONTAX_SUPPLY_TOT, 0)
							 / (ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)))
		   END                                    AS NONTAX_AMT 
		 , '' AS REMARK  
		 , '' AS INSERT_DB_USER 
		 , '' AS INSERT_DB_TIME 
		 , '' AS UPDATE_DB_USER 
		 , '' AS UPDATE_DB_TIME 
		 , '' AS COMP_CODE
	  FROM            ATX100T A WITH (NOLOCK)
		   LEFT  JOIN (SELECT A.COMP_CODE
							, SUM(ISNULL(A.SUPPLY_AMT_I, 0)) AS TAX_SUPPLY_TOT
					   FROM              ATX100T A  WITH (NOLOCK)
							  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
																 AND M1.MAIN_CODE = 'A022'
																 AND M1.REF_CODE6 = '1'
																 AND M1.SUB_CODE  = A.PROOF_KIND
					   WHERE  A.COMP_CODE       = @COMP_CODE
						 AND  A.PUB_DATE    &gt;= @FR_PUB_DATE
						 AND  A.PUB_DATE    &lt;= @TO_PUB_DATE
						 AND  A.INOUT_DIVI      = N'2'
						 AND  A.BILL_DIVI_CODE  = @BILL_DIV_CODE
			
        
					   GROUP BY A.COMP_CODE
					  )       B                ON B.COMP_CODE   = A.COMP_CODE
		   LEFT  JOIN (SELECT A.COMP_CODE
							, SUM(ISNULL(A.SUPPLY_AMT_I, 0)) AS NONTAX_SUPPLY_TOT
					   FROM              ATX100T A  WITH (NOLOCK)
							  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
																 AND M1.MAIN_CODE = 'A022'
																 AND M1.REF_CODE6 = '2'
																 AND M1.SUB_CODE  = A.PROOF_KIND
					   WHERE  A.COMP_CODE       = @COMP_CODE
						 AND  A.PUB_DATE    &gt;= @FR_PUB_DATE
						 AND  A.PUB_DATE    &lt;= @TO_PUB_DATE
						 AND  A.INOUT_DIVI      = N'2'
						 AND  A.BILL_DIVI_CODE  = @BILL_DIV_CODE
			
        
					   GROUP BY A.COMP_CODE
					  )       C                ON C.COMP_CODE   = A.COMP_CODE
		   LEFT  JOIN (SELECT A.COMP_CODE
							, SUM(A.INTEREST) AS INTEREST
					   FROM    ATX400T A  WITH (NOLOCK)
					   WHERE  A.COMP_CODE         = @COMP_CODE
						 AND  A.FR_PUB_DATE   &gt;= @FR_PUB_DATE
						 AND  A.TO_PUB_DATE   &lt;= @TO_PUB_DATE
						 AND  A.BILL_DIV_CODE     = @BILL_DIV_CODE
			
        
					   GROUP BY A.COMP_CODE
					  )       D                ON D.COMP_CODE   = A.COMP_CODE
		   INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
											  AND M1.MAIN_CODE  = 'A070'
											  AND M1.SUB_CODE   = A.REASON_CODE
											  AND M1.SUB_CODE   = '15'
		   INNER JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
											  AND M2.MAIN_CODE  = 'A022'
											  AND M2.SUB_CODE   = A.PROOF_KIND
											  AND M2.REF_CODE5  = 'Y'  -- 불공제분
	 WHERE A.COMP_CODE   	= @COMP_CODE
	   AND A.PUB_DATE   &gt;= @FR_PUB_DATE
	   AND A.PUB_DATE   &lt;= @TO_PUB_DATE
	   AND A.BILL_DIVI_CODE = @BILL_DIV_CODE
			
        
	 GROUP BY B.TAX_SUPPLY_TOT, C.NONTAX_SUPPLY_TOT, D.INTEREST
	 END

		ELSE
		BEGIN
			SELECT TOP 0 '' AS FR_PUB_DATE 
				 , '' AS TO_PUB_DATE 
				 , '' AS BILL_DIV_CODE 
				 , 0 AS SEQ 
				 , 0 AS SUPPLY_AMT
				 , 0 AS TAX_AMT 
				 , 0 AS TOT_SUPPLY_AMT 
				 , 0 AS TAXFREE_AMT 
				 , 0 AS NONTAX_AMT 
				 , '' AS REMARK  
				 , '' AS INSERT_DB_USER 
				 , '' AS INSERT_DB_TIME 
				 , '' AS UPDATE_DB_USER 
				 , '' AS UPDATE_DB_TIME 
				 , '' AS COMP_CODE
		END

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
</select>

<select id="atx450ukrServiceImpl.selectList3_3" parameterType="Map" resultType="rMap">
/* --atx450ukr.Catx450ukr[fnatx450q]ATX100T조회3 (4.공통매입세액의 정산 내역) */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE         @COMP_CODE          NVARCHAR(08)
                  , @FR_PUB_DATE        NVARCHAR(08)
                  , @TO_PUB_DATE        NVARCHAR(08)
                  , @BILL_DIV_CODE      NVARCHAR(08)

/* --  [ 변수 값 할당 ] -------------------------------------------------------------------------------------------------- */
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @FR_PUB_DATE    = #{FR_PUB_DATE}
    SET @TO_PUB_DATE    = #{TO_PUB_DATE}
    SET @BILL_DIV_CODE  = #{BILL_DIV_CODE}


/* --  [ 예정기간 ] -------------------------------------------------------------------------------------------------- */
    DECLARE         @TERM_DIVI          NVARCHAR(01)
                  , @FR_DUE_DATE        NVARCHAR(08)
                  , @TO_DUE_DATE        NVARCHAR(08)

    SELECT  @TERM_DIVI   = SUB_CODE
          , @FR_DUE_DATE = CASE WHEN RIGHT(@TO_PUB_DATE, 4) = RIGHT(ISNULL(REF_CODE1,''), 4) THEN LEFT(@TO_PUB_DATE, 4) + '0101'
                                ELSE  LEFT(@TO_PUB_DATE, 4) + '0701'
                           END
          , @TO_DUE_DATE = CASE WHEN RIGHT(@TO_PUB_DATE, 4) = RIGHT(ISNULL(REF_CODE1,''), 4) THEN LEFT(@TO_PUB_DATE, 4) + '0331'
                                ELSE  LEFT(@TO_PUB_DATE, 4) + '0930'
                           END
    FROM    BSA100T WITH (NOLOCK)
    WHERE   COMP_CODE = @COMP_CODE
    AND     MAIN_CODE = N'A067'
    AND    (RIGHT(ISNULL(REF_CODE1,''), 4) = RIGHT(@TO_PUB_DATE, 4)
     OR     RIGHT(ISNULL(REF_CODE2,''), 4) = RIGHT(@TO_PUB_DATE, 4))

    IF (@TERM_DIVI = '2')
		BEGIN
		SELECT '' AS FR_PUB_DATE 
			 , '' AS TO_PUB_DATE 
			 , '' AS BILL_DIV_CODE 
			 , 1 AS SEQ 
			 , SUM(ISNULL(A.TAX_AMT_I,0)) + ISNULL(E.DUE_TAX_AMT, 0)   AS TOT_TAX_AMT
			 
			 , ISNULL(C.NONTAX_SUPPLY_TOT, 0) + ISNULL(E.DUE_TAXFREE_AMT, 0)	AS NONTAX_AMT																/* 20160923 추가된 컬럼 */
			 , (ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0)	AS TOT_SUPPLY_AMT	/* 20160923 추가된 컬럼 */
			 
			 , CASE WHEN ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0)) = 0 THEN 0
					ELSE (ISNULL(C.NONTAX_SUPPLY_TOT, 0) + ISNULL(E.DUE_TAXFREE_AMT, 0))
						  / ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0)) * 100
			   END                                                     AS TAXFREE_RATE

			 , FLOOR((SUM(ISNULL(A.TAX_AMT_I,0)) + ISNULL(E.DUE_TAX_AMT, 0))
				   * CASE WHEN ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0)) = 0 THEN 0
						  ELSE (ISNULL(C.NONTAX_SUPPLY_TOT, 0) + ISNULL(E.DUE_TAXFREE_AMT, 0))
								/ ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0))
					 END
					)                                                  AS TOT_NONTAX_AMT
			 , ISNULL(E.DUE_NONTAX_AMT, 0)                             AS GI_NONTAX_AMT
			 , FLOOR((SUM(ISNULL(A.TAX_AMT_I,0)) + ISNULL(E.DUE_TAX_AMT, 0))
				   * CASE WHEN ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0)) = 0 THEN 0
						  ELSE (ISNULL(C.NONTAX_SUPPLY_TOT, 0) + ISNULL(E.DUE_TAXFREE_AMT, 0))
								/ ((ISNULL(B.TAX_SUPPLY_TOT, 0) + ISNULL(C.NONTAX_SUPPLY_TOT, 0) - ISNULL(D.INTEREST, 0)) + ISNULL(E.DUE_TOT_SUPPLY_AMT, 0))
					 END
					)
			   - ISNULL(E.DUE_NONTAX_AMT, 0)                           AS DEDUCT_AMT

			 , '' AS REMARK  
			 , '' AS INSERT_DB_USER 
			 , '' AS INSERT_DB_TIME 
			 , '' AS UPDATE_DB_USER 
			 , '' AS UPDATE_DB_TIME 
			 , '' AS COMP_CODE
		  FROM            ATX100T A WITH (NOLOCK)

			   /* -- 과세공급가액 */
			   LEFT  JOIN (SELECT A.COMP_CODE
								, SUM(ISNULL(A.SUPPLY_AMT_I, 0)) AS TAX_SUPPLY_TOT
						   FROM              ATX100T A  WITH (NOLOCK)
								  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
																	 AND M1.MAIN_CODE = 'A022'
																	 AND M1.REF_CODE6 = '1'
																	 AND M1.SUB_CODE  = A.PROOF_KIND
						   WHERE  A.COMP_CODE       = @COMP_CODE
							 AND  A.PUB_DATE    &gt;= @FR_PUB_DATE
							 AND  A.PUB_DATE    &lt;= @TO_PUB_DATE
							 AND  A.INOUT_DIVI      = N'2'
							 AND  A.BILL_DIVI_CODE  = @BILL_DIV_CODE
        
        
						   GROUP BY A.COMP_CODE
						  )       B                ON B.COMP_CODE   = A.COMP_CODE

			   /* -- 면세공급가액 */
			   LEFT  JOIN (SELECT A.COMP_CODE
								, SUM(ISNULL(A.SUPPLY_AMT_I, 0)) AS NONTAX_SUPPLY_TOT
						   FROM              ATX100T A  WITH (NOLOCK)
								  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
																	 AND M1.MAIN_CODE = 'A022'
																	 AND M1.REF_CODE6 = '2'
																	 AND M1.SUB_CODE  = A.PROOF_KIND
							 AND  A.PUB_DATE    &gt;= @FR_PUB_DATE
							 AND  A.PUB_DATE    &lt;= @TO_PUB_DATE
							 AND  A.INOUT_DIVI      = N'2'
							 AND  A.BILL_DIVI_CODE  = @BILL_DIV_CODE
        
        
						   GROUP BY A.COMP_CODE
						  )       C                ON C.COMP_CODE   = A.COMP_CODE

			   /* -- 부동산임대공급가액의 간주임대료 */
			   LEFT  JOIN (SELECT A.COMP_CODE
								, SUM(A.INTEREST) AS INTEREST
						   FROM    ATX400T A  WITH (NOLOCK)
						   WHERE  A.COMP_CODE         = @COMP_CODE
							 AND  A.FR_PUB_DATE   &gt;= @FR_PUB_DATE
							 AND  A.TO_PUB_DATE   &lt;= @TO_PUB_DATE
							 AND  A.BILL_DIV_CODE     = @BILL_DIV_CODE
        
        
						   GROUP BY A.COMP_CODE
						  )       D                ON D.COMP_CODE   = A.COMP_CODE

			   /* -- 예정기간의 공통매입세액 안분계산내역 */
			   LEFT  JOIN (SELECT A.COMP_CODE
								, SUM(ISNULL(A.SUPPLY_AMT    , 0)) AS DUE_SUPPLY_AMT
								, SUM(ISNULL(A.TAX_AMT       , 0)) AS DUE_TAX_AMT
								, SUM(ISNULL(A.TOT_SUPPLY_AMT, 0)) AS DUE_TOT_SUPPLY_AMT
								, SUM(ISNULL(A.TAXFREE_AMT   , 0)) AS DUE_TAXFREE_AMT
								, SUM(ISNULL(A.NONTAX_AMT    , 0)) AS DUE_NONTAX_AMT
						   FROM    ATX452T A  WITH (NOLOCK)
						   WHERE  A.COMP_CODE         = @COMP_CODE
							 AND  A.FR_PUB_DATE   &gt;= @FR_DUE_DATE
							 AND  A.TO_PUB_DATE   &lt;= @TO_DUE_DATE
							 AND  A.BILL_DIV_CODE     = @BILL_DIV_CODE
        
        
						   GROUP BY A.COMP_CODE
						  )       E                ON E.COMP_CODE   = A.COMP_CODE
			   INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
												  AND M1.MAIN_CODE  = 'A070'
												  AND M1.SUB_CODE   = A.REASON_CODE
												  AND M1.SUB_CODE   = '15'
			   INNER JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
												  AND M2.MAIN_CODE  = 'A022'
												  AND M2.SUB_CODE   = A.PROOF_KIND
												  AND M2.REF_CODE5  = 'Y'  /* -- 불공제분 */
		WHERE A.COMP_CODE      = @COMP_CODE
		  AND A.PUB_DATE   &gt;= @FR_PUB_DATE
		  AND A.PUB_DATE   &lt;= @TO_PUB_DATE
		  AND A.BILL_DIVI_CODE = @BILL_DIV_CODE
        
        
		GROUP BY B.TAX_SUPPLY_TOT, C.NONTAX_SUPPLY_TOT, D.INTEREST, E.DUE_TAX_AMT, E.DUE_TOT_SUPPLY_AMT, E.DUE_TAXFREE_AMT, E.DUE_NONTAX_AMT
    END

    ELSE
		BEGIN
			SELECT TOP 0 '' AS FR_PUB_DATE 
				 , '' AS TO_PUB_DATE 
				 , '' AS BILL_DIV_CODE 
				 , 0 AS SEQ 
				 , 0 AS TOT_TAX_AMT
				 , 0 AS NONTAX_AMT 
				 , 0 AS TOT_SUPPLY_AMT 
				 , 0 AS TAXFREE_RATE 
				 , 0 AS TOT_NONTAX_AMT 
				 , 0 AS GI_NONTAX_AMT 
				 , 0 AS DEDUCT_AMT 
				 , '' AS REMARK  
				 , '' AS INSERT_DB_USER 
				 , '' AS INSERT_DB_TIME 
				 , '' AS UPDATE_DB_USER 
				 , '' AS UPDATE_DB_TIME 
				 , '' AS COMP_CODE
		END

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END
</select>

<select id="atx450ukrServiceImpl.selectList4_4" parameterType="Map" resultType="rMap">
--atx450ukr.Catx450ukr[fnatx450q]ATX100T조회4 (5.납부세액 또는 환급세액 재계산 내역)
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT '' AS FR_PUB_DATE 
     , '' AS TO_PUB_DATE 
     , '' AS BILL_DIV_CODE 
     , 0 AS SEQ 
     , A.TAX_AMT_I AS PO_AMT  
     , 0 AS RECAL_RATE 
     , 0 AS TAXFREE_RATE 
     , 0 AS DEDUCT_AMT 
     , '' AS REMARK  
     , '' AS INSERT_DB_USER 
     , '' AS INSERT_DB_TIME 
     , '' AS UPDATE_DB_USER 
     , '' AS UPDATE_DB_TIME 
     , '' AS COMP_CODE
  FROM            ATX100T A  WITH (NOLOCK)
       INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                          AND M1.MAIN_CODE  = 'A070'
                                          AND M1.SUB_CODE   = A.REASON_CODE
                                          AND M1.SUB_CODE   = '18'
       INNER JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                          AND M2.MAIN_CODE  = 'A022'
                                          AND M2.SUB_CODE   = A.PROOF_KIND
                                          AND M2.REF_CODE5  = 'Y'  -- 불공제분
 WHERE A.COMP_CODE = #{S_COMP_CODE}  
   AND A.PUB_DATE &gt;= #{FR_PUB_DATE}         
   AND A.PUB_DATE &lt;= #{TO_PUB_DATE}         
   AND A.BILL_DIVI_CODE = #{BILL_DIV_CODE}         
</select>

<insert id="atx450ukrServiceImpl.insertDetail" parameterType="Map">
--atx450ukr.Catx450ukr [fnSaveSet] N
INSERT INTO ATX451T
     ( FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , GUBUN
     , NUM
     , SUPPLY_AMT
     , TAX_AMT
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{FR_PUB_DATE}
     , #{TO_PUB_DATE}
     , #{BILL_DIV_CODE}
     , #{GUBUN}
     , #{NUM}
     , #{SUPPLY_AMT}
     , #{TAX_AMT}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )
</insert>

<update id="atx450ukrServiceImpl.updateDetail" parameterType="Map">	
--atx450ukr.Catx450ukr [fnSaveSet] U
UPDATE ATX451T
   SET NUM            = #{NUM}
     , SUPPLY_AMT     = #{SUPPLY_AMT}
     , TAX_AMT        = #{TAX_AMT}
     , REMARK         = #{REMARK}
     , INSERT_DB_USER = #{S_USER_ID}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
   AND TO_PUB_DATE    = #{TO_PUB_DATE}
   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
   AND GUBUN          = #{GUBUN}
   AND COMP_CODE      = #{S_COMP_CODE}
  
</update>

<insert id="atx450ukrServiceImpl.insertDetail2" parameterType="Map">
--atx450ukr.Catx450ukr [fnSaveSet] N
INSERT INTO ATX452T
     ( FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , SEQ
     , SUPPLY_AMT
     , TAX_AMT
     , TOT_SUPPLY_AMT
     , TAXFREE_AMT
     , NONTAX_AMT
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{FR_PUB_DATE}
     , #{TO_PUB_DATE}
     , #{BILL_DIV_CODE}
     , #{SEQ}
     , #{SUPPLY_AMT}
     , #{TAX_AMT}
     , #{TOT_SUPPLY_AMT}
     , #{TAXFREE_AMT}
     , #{NONTAX_AMT}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )	
</insert>   

<update id="atx450ukrServiceImpl.updateDetail2" parameterType="Map">	
--atx450ukr.Catx450ukr [fnSaveSet] U
UPDATE ATX452T
   SET SUPPLY_AMT     = #{SUPPLY_AMT}
     , TAX_AMT        = #{TAX_AMT}
     , TOT_SUPPLY_AMT = #{TOT_SUPPLY_AMT}
     , TAXFREE_AMT    = #{TAXFREE_AMT}
     , NONTAX_AMT     = #{NONTAX_AMT}
     , INSERT_DB_USER = #{S_USER_ID}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
   AND TO_PUB_DATE    = #{TO_PUB_DATE}
   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
   AND SEQ            = #{SEQ}
   AND COMP_CODE      = #{S_COMP_CODE}
  
</update>

<delete id="atx450ukrServiceImpl.deleteDetail2" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX452T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND SEQ           = #{SEQ}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<insert id="atx450ukrServiceImpl.insertDetail3" parameterType="Map">
--atx450ukr.Catx450ukr [fnSaveSet] N
INSERT INTO ATX453T
     ( FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , SEQ
     , TOT_TAX_AMT
     , TAXFREE_RATE
     , TOT_NONTAX_AMT
     , GI_NONTAX_AMT
     , DEDUCT_AMT
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{FR_PUB_DATE}
     , #{TO_PUB_DATE}
     , #{BILL_DIV_CODE}
     , #{SEQ}
     , #{TOT_TAX_AMT}
     , #{TAXFREE_RATE}
     , #{TOT_NONTAX_AMT}
     , #{GI_NONTAX_AMT}
     , #{DEDUCT_AMT}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )	
</insert>   

<update id="atx450ukrServiceImpl.updateDetail3" parameterType="Map">	
--atx450ukr.Catx450ukr [fnSaveSet] U
UPDATE ATX453T
   SET TOT_TAX_AMT    = #{TOT_TAX_AMT}
     , TAXFREE_RATE   = #{TAXFREE_RATE}
     , NONTAX_AMT	  = #{NONTAX_AMT}		/* 그리드 추가된 부분 20160923*/
     , TOT_SUPPLY_AMT =	#{TOT_SUPPLY_AMT}	/* 그리드 추가된 부분 20160923*/
     , TOT_NONTAX_AMT = #{TOT_NONTAX_AMT}
     , GI_NONTAX_AMT  = #{GI_NONTAX_AMT}
     , DEDUCT_AMT     = #{DEDUCT_AMT}
     , INSERT_DB_USER = #{S_USER_ID}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
   AND TO_PUB_DATE    = #{TO_PUB_DATE}
   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
   AND SEQ            = #{SEQ}
   AND COMP_CODE      = #{S_COMP_CODE}
  
</update>

<delete id="atx450ukrServiceImpl.deleteDetail3" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX453T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND SEQ           = #{SEQ}
   AND COMP_CODE     = #{S_COMP_CODE} 
</delete>

<insert id="atx450ukrServiceImpl.insertDetail4" parameterType="Map">
--atx450ukr.Catx450ukr [fnSaveSet] N
INSERT INTO ATX454T
     ( FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , SEQ
     , PO_AMT
     , RECAL_RATE
     , TAXFREE_RATE
     , DEDUCT_AMT
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{FR_PUB_DATE}
     , #{TO_PUB_DATE}
     , #{BILL_DIV_CODE}
     , #{SEQ}
     , #{PO_AMT}
     , #{RECAL_RATE}
     , #{TAXFREE_RATE}
     , #{DEDUCT_AMT}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )	
</insert>   

<update id="atx450ukrServiceImpl.updateDetail4" parameterType="Map">	
--atx450ukr.Catx450ukr [fnSaveSet] U
UPDATE ATX454T
   SET PO_AMT         = #{PO_AMT}
     , RECAL_RATE     = #{RECAL_RATE}
     , TAXFREE_RATE   = #{TAXFREE_RATE}
     , DEDUCT_AMT     = #{DEDUCT_AMT}
     , INSERT_DB_USER = #{S_USER_ID}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
   AND TO_PUB_DATE    = #{TO_PUB_DATE}
   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
   AND SEQ            = #{SEQ}
   AND COMP_CODE      = #{S_COMP_CODE}
  
</update>

<delete id="atx450ukrServiceImpl.deleteDetail4" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX454T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND SEQ           = #{SEQ}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<delete id="atx450ukrServiceImpl.deleteDataCheck" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX451T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<delete id="atx450ukrServiceImpl.deleteDataCheck2" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX452T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<delete id="atx450ukrServiceImpl.deleteDataCheck3" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX453T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<delete id="atx450ukrServiceImpl.deleteDataCheck4" parameterType="Map">	
--atx450ukr.Catx450ukr [fnDeleteSet] D
DELETE FROM ATX454T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<select id="atx450ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
SELECT A.COMP_CODE, A.COMP_NAME
FROM              BOR100T   A  WITH (NOLOCK)
       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                            AND M1.MAIN_CODE    = 'B107'
                                            AND M1.SUB_CODE     = '20'         
WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
	   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
</select>
</mapper>