<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx410ukrServiceImpl">
					
	
<select id="atx410ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
--atx410ukr.CAtx410UKR Setatx410[fnatx410q]
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT A.SEQ
     , A.BILL_DIV_CODE
     , A.BUILD_CODE
     , A.BUILD_NAME
     , A.BUILD_STATE
     , A.DONG
     , A.UP_UNDER
     , A.UP_FLOOR
     , A.HOUSE  
     , A.HOUSE_CNT  
     , A.HIRE_CUST_CD, (SELECT CUSTOM_NAME 
                        FROM BCM100T   WITH (NOLOCK)
                       WHERE COMP_CODE   = A.COMP_CODE
                         AND CUSTOM_CODE = A.HIRE_CUST_CD) AS HIRE_CUST_NM 
     , A.AREA
     , A.USE_REMARK 
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, A.START_DATE)  AS START_DATE 
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, A.END_DATE)    AS END_DATE 
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, A.UPDATE_DATE) AS UPDATE_DATE 
     , A.GUARANTY
     , A.MONTHLY_RENT
     , A.MANAGE_MONEY
     , A.REMARK
     , A.UPDATE_DB_USER
     , A.UPDATE_DB_TIME
     , A.COMP_CODE
  FROM ATX410T A  WITH (NOLOCK)
       INNER JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                        AND B.CUSTOM_CODE = A.HIRE_CUST_CD
 WHERE A.COMP_CODE   = #{S_COMP_CODE}
<if test="@foren.Ognl@isNotEmpty(HIRE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(HIRE_CUSTOM_NAME)">
	AND A.HIRE_CUST_CD = #{HIRE_CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(HIRE_CUSTOM_CODE) and @foren.Ognl@isEmpty(HIRE_CUSTOM_NAME)">
	AND A.HIRE_CUST_CD LIKE #{HIRE_CUSTOM_CODE} + '%'
</if>
<if test="@foren.Ognl@isEmpty(HIRE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(HIRE_CUSTOM_NAME)">
	AND B.CUSTOM_NAME LIKE '%' + #{HIRE_CUSTOM_NAME} + '%' 
</if>
 <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
   AND A.BILL_DIV_CODE = #{BILL_DIV_CODE}
 </if>
 <if test="BUILD_STATE0 == &quot;0&quot;">  
   AND A.BUILD_STATE IN('1', '2', '3', '4')
 </if>
 <if test="BUILD_STATE0 != &quot;0&quot;"> 
 <if test="BUILD_STATE0 == &quot;N&quot;"> 
   AND (1 = 0 
	 <if test="BUILD_STATE1 == &quot;1&quot;">  
	   OR A.BUILD_STATE = '1'
	 </if>
	 <if test="BUILD_STATE2 == &quot;2&quot;">  
	   OR A.BUILD_STATE = '2'
	 </if>
	 <if test="BUILD_STATE3 == &quot;3&quot;">  
	   OR A.BUILD_STATE = '3'
	 </if>
	 <if test="BUILD_STATE4 == &quot;4&quot;">  
	   OR A.BUILD_STATE = '4'
	 </if>
	 )
</if>
</if>
  ORDER BY A.BILL_DIV_CODE, A.BUILD_NAME, A.UP_UNDER, A.UP_FLOOR, A.HOUSE, A.HIRE_CUST_CD
</select>


<select id="atx410ukrServiceImpl.selectMaxSeq" parameterType="Map" resultType="rMap">
--atx410ukr.CAtx410UKR Setatx410[fnatx410Set] 01
SELECT MAX(SEQ) AS SEQ
     , COMP_CODE
  FROM ATX410T WITH(NOLOCK)
 WHERE COMP_CODE   = #{S_COMP_CODE}
 GROUP BY COMP_CODE	
</select>


<insert id="atx410ukrServiceImpl.insertDetail" parameterType="Map">   
 --atx410ukr.CAtx410UKR Setatx410[fnatx410Set] N
INSERT INTO ATX410T ( COMP_CODE
                    , SEQ
                    , BILL_DIV_CODE
                    , BUILD_CODE
                    , BUILD_NAME
                    , BUILD_STATE
                    , DONG
                    , UP_UNDER
                    , UP_FLOOR
                    , HOUSE
                    , HOUSE_CNT
                    , HIRE_CUST_CD
                    , AREA
                    , USE_REMARK
                    , START_DATE
                    , END_DATE
                    , UPDATE_DATE
                    , GUARANTY
                    , MONTHLY_RENT
                    , MANAGE_MONEY
                    , REMARK
                    , INSERT_DB_USER
                    , INSERT_DB_TIME
                    , UPDATE_DB_USER
                    , UPDATE_DB_TIME
                    )
             VALUES ( #{S_COMP_CODE}
                    , #{SEQ}
                    , #{BILL_DIV_CODE}
                    , #{BUILD_CODE}
                    , #{BUILD_NAME}
                    , #{BUILD_STATE}
                    , #{DONG}
                    , #{UP_UNDER}
                    , #{UP_FLOOR}
                    , #{HOUSE}
                    , #{HOUSE_CNT}
                    , #{HIRE_CUST_CD}
                    , #{AREA}
                    , #{USE_REMARK}
                    , #{START_DATE}
                    , #{END_DATE}
                    , #{UPDATE_DATE}
                    , #{GUARANTY}
                    , #{MONTHLY_RENT}
                    , #{MANAGE_MONEY}
                    , #{REMARK}
                    , #{S_USER_ID}
                    , GETDATE()
                    , #{S_USER_ID}
                    , GETDATE()
                    )
</insert>

	
<update id="atx410ukrServiceImpl.updateDetail" parameterType="Map">		
--atx410ukr.CAtx410UKR Setatx410[fnatx410Set] U
UPDATE ATX410T
   SET BILL_DIV_CODE  = #{BILL_DIV_CODE}
     , BUILD_CODE     = #{BUILD_CODE}
     , BUILD_NAME     = #{BUILD_NAME}
     , BUILD_STATE    = #{BUILD_STATE}
     , DONG           = #{DONG}
     , UP_UNDER       = #{UP_UNDER}
     , UP_FLOOR       = #{UP_FLOOR}
     , HOUSE          = #{HOUSE}
     , HOUSE_CNT      = #{HOUSE_CNT}
     , HIRE_CUST_CD   = #{HIRE_CUST_CD}
     , AREA           = #{AREA}
     , USE_REMARK     = #{USE_REMARK}
     , START_DATE     = #{START_DATE}
     , END_DATE       = #{END_DATE}
     , UPDATE_DATE    = #{UPDATE_DATE}
     , GUARANTY       = #{GUARANTY}
     , MONTHLY_RENT   = #{MONTHLY_RENT}
     , MANAGE_MONEY   = #{MANAGE_MONEY}
     , REMARK         = #{REMARK}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE SEQ            = #{SEQ}
   AND COMP_CODE      = #{S_COMP_CODE}
</update>


<delete id="atx410ukrServiceImpl.deleteDetail" parameterType="Map">		
--atx410ukr.CAtx410UKR Setatx410[fnatx410Set] D
DELETE FROM ATX410T 
 WHERE SEQ       = #{SEQ}
   AND COMP_CODE = #{S_COMP_CODE}
  
</delete>
 

<select id="atx410ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
SELECT A.COMP_CODE, A.COMP_NAME
FROM              BOR100T   A  WITH (NOLOCK)
       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                            AND M1.MAIN_CODE    = 'B107'
                                            AND M1.SUB_CODE     = '20'         
WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
</select>


</mapper>