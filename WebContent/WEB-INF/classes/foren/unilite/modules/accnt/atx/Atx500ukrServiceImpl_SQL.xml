<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx500ukrServiceImpl">
	
	<select id="atx500ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* 3.내국신용장/구매확인서에 의한 공급실적 명세서 */
		--atx500ukr.Catx500UKR Setatx500[fnatx500q]--QUERY1
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
			DECLARE @COMP_CODE     NVARCHAR(08)
			      , @FR_PUB_DATE   NVARCHAR(08)
			      , @TO_PUB_DATE   NVARCHAR(08)
			      , @BILL_DIV_CODE NVARCHAR(08)
			   SET @COMP_CODE     = #{S_COMP_CODE}
			   SET @FR_PUB_DATE   = #{FR_PUB_DATE}
			   SET @TO_PUB_DATE   = #{TO_PUB_DATE}
			   SET @BILL_DIV_CODE = #{DIV_CODE}
			SELECT A.COMP_CODE
			     , A.FR_PUB_DATE
			     , A.TO_PUB_DATE
			     , A.BILL_DIV_CODE
			     , A.SEQ
			     , A.GUBUN
			     , A.DOCU_NUM
			     , uniLITE.fnGetUserdate(A.COMP_CODE, A.DOCU_DATE) AS DOCU_DATE
			     , SUBSTRING(A.COMPANY_NUM, 1, 3) + '-'
			     + SUBSTRING(A.COMPANY_NUM, 4, 2) + '-'
			     + SUBSTRING(A.COMPANY_NUM, 6, 5)                  AS COMPANY_NUM
			     , A.AMT_I
			     , A.REMARK
			     , A.INSERT_DB_USER
			     , A.INSERT_DB_TIME
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
			  FROM ATX500T A WITH (NOLOCK)
			 WHERE A.COMP_CODE			= @COMP_CODE
			   AND A.FR_PUB_DATE	&gt;= @FR_PUB_DATE
			   AND A.TO_PUB_DATE	&lt;= @TO_PUB_DATE
			   AND A.BILL_DIV_CODE = @BILL_DIV_CODE
			  ORDER BY A.SEQ		
	</select>
	<select id="atx500ukrServiceImpl.selectCount" parameterType="Map" resultType="rMap">
			SELECT COUNT(*) AS CNT
			  FROM ATX500T A WITH (NOLOCK)
			 WHERE A.COMP_CODE			= #{S_COMP_CODE}
			   AND A.FR_PUB_DATE	&gt;= #{FR_PUB_DATE}
			   AND A.TO_PUB_DATE	&lt;= #{TO_PUB_DATE}
			   AND A.BILL_DIV_CODE = #{DIV_CODE}
	</select>
	<select id="atx500ukrServiceImpl.selectListInit" parameterType="Map" resultType="rMap">
	--atx500ukr.Catx500UKR Setatx500[fnatx500q]--QUERY2
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		DECLARE @COMP_CODE     NVARCHAR(08)
		      , @FR_PUB_DATE   NVARCHAR(08)
		      , @TO_PUB_DATE   NVARCHAR(08)
		      , @BILL_DIV_CODE NVARCHAR(08)
		      , @NAEGUK_CNT    NUMERIC(18,0)
		      , @NAEGUK_AMT    NUMERIC(30,0)
		      , @GUMAE_CNT     NUMERIC(18,0)
		      , @GUMAE_AMT     NUMERIC(30,0)
		   SET @COMP_CODE     = #{S_COMP_CODE}
		   SET @FR_PUB_DATE   = #{FR_PUB_DATE}
		   SET @TO_PUB_DATE   = #{TO_PUB_DATE}
		   SET @BILL_DIV_CODE = #{DIV_CODE}
		
		--내국신용장
		SELECT @NAEGUK_CNT = COUNT(GUBUN) 
		     , @NAEGUK_AMT = SUM(AMT_I) 
		  FROM ATX500T  WITH (NOLOCK)
		 WHERE COMP_CODE     = @COMP_CODE
		   AND FR_PUB_DATE	&gt;= @FR_PUB_DATE
		   AND TO_PUB_DATE	&lt;= @TO_PUB_DATE
		   AND BILL_DIV_CODE = @BILL_DIV_CODE
		   AND GUBUN         = 'L'
		
		--구매확인서
		SELECT @GUMAE_CNT = COUNT(GUBUN)
		     , @GUMAE_AMT = SUM(AMT_I)
		  FROM ATX500T   WITH (NOLOCK)
		 WHERE COMP_CODE     = @COMP_CODE
		   AND FR_PUB_DATE	&gt;= @FR_PUB_DATE
		   AND TO_PUB_DATE	&lt;= @TO_PUB_DATE
		   AND BILL_DIV_CODE = @BILL_DIV_CODE
		   AND GUBUN         = 'A'
		
		--1. 신고인 인적사항
		SELECT ISNULL(A.DIV_FULL_NAME,'')                   AS COMPANY_NAME   -- 상호(법인명)
		     , ISNULL(SUBSTRING(A.COMPANY_NUM,1,3) + '-' + 
		              SUBSTRING(A.COMPANY_NUM,4,2) + '-' + 
		              SUBSTRING(A.COMPANY_NUM, 6, 5), '')   AS COMPANY_NUM    -- 사업자등록번호
		     , ISNULL(A.REPRE_NAME,'')                      AS REPRE_NAME     -- 성명(대표자)
		     , ISNULL(A.ADDR,'')                            AS ADDR           -- 사업장 소재지
		     , ISNULL(A.COMP_TYPE,'')                       AS COMP_TYPE      -- 업태
		     , ISNULL(A.COMP_CLASS,'')                      AS COMP_CLASS     -- 종목
		     , ISNULL(A.SAFFER_TAX_NM, '')                  AS SAFFER_TAX_NM  -- 세무서장
		     , (SELECT SUB_CODE
		          FROM BSA100T  WITH (NOLOCK)
		         WHERE COMP_CODE = @COMP_CODE
		           AND MAIN_CODE = 'A065' 
		           AND SUB_CODE  &lt;&gt; '$'
		           AND (REF_CODE1  &lt;= RIGHT(@TO_PUB_DATE,4) 
		           AND  REF_CODE2 &gt;= RIGHT(@TO_PUB_DATE,4))) AS TERM_CODE
		
		--2. 내국신용장/구매확인서에 의한 공급실적 합계
		     , ISNULL(@NAEGUK_CNT,0)                        AS NAEGUK_CNT
		     , ISNULL(@NAEGUK_AMT,0)                        AS NAEGUK_AMT
		     , ISNULL(@GUMAE_CNT,0)                         AS GUMAE_CNT
		     , ISNULL(@GUMAE_AMT,0)                         AS GUMAE_AMT
		     , ISNULL(@NAEGUK_CNT,0) + ISNULL(@GUMAE_CNT,0) AS TOT_CNT
		     , ISNULL(@NAEGUK_AMT,0) + ISNULL(@GUMAE_AMT,0) AS TOT_AMT
		  FROM BOR120T A WITH (NOLOCK)     
		 WHERE A.COMP_CODE     = @COMP_CODE
		   AND A.BILL_DIV_CODE = @BILL_DIV_CODE
	</select>
	<select id="atx500ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* 1.신고인 인적사항 */
		--atx500ukr.Catx500UKR Setatx500[fnatx500q]--QUERY2
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
			DECLARE @COMP_CODE     NVARCHAR(08)
			      , @FR_PUB_DATE   NVARCHAR(08)
			      , @TO_PUB_DATE   NVARCHAR(08)
			      , @BILL_DIV_CODE NVARCHAR(08)
			      , @NAEGUK_CNT    NUMERIC(18,0)
			      , @NAEGUK_AMT    NUMERIC(30,0)
			      , @GUMAE_CNT     NUMERIC(18,0)
			      , @GUMAE_AMT     NUMERIC(30,0)
			   SET @COMP_CODE     = #{S_COMP_CODE}
			   SET @FR_PUB_DATE   = #{FR_PUB_DATE}
			   SET @TO_PUB_DATE   = #{TO_PUB_DATE}
			   SET @BILL_DIV_CODE = #{DIV_CODE}
			
			/* 내국신용장 */
			SELECT @NAEGUK_CNT = COUNT(GUBUN) 
			     , @NAEGUK_AMT = SUM(AMT_I) 
			  FROM ATX500T  WITH (NOLOCK)
			 WHERE COMP_CODE		= @COMP_CODE
			   AND FR_PUB_DATE	&gt;= @FR_PUB_DATE
			   AND TO_PUB_DATE	&lt;= @TO_PUB_DATE
			   AND BILL_DIV_CODE = @BILL_DIV_CODE
			   AND GUBUN         = 'L'
			
			/* 구매확인서 */
			SELECT @GUMAE_CNT = COUNT(GUBUN)
			     , @GUMAE_AMT = SUM(AMT_I)
			  FROM ATX500T   WITH (NOLOCK)
			 WHERE COMP_CODE		= @COMP_CODE
			   AND FR_PUB_DATE	&gt;= @FR_PUB_DATE
			   AND TO_PUB_DATE	&lt;= @TO_PUB_DATE
			   AND BILL_DIV_CODE = @BILL_DIV_CODE
			   AND GUBUN         = 'A'
			
			SELECT
			/* 1. 신고인 인적사항			---		은 데이터 조회에 필요 없어 주석 처리
				   ISNULL(A.DIV_FULL_NAME,'')                   AS COMPANY_NAME   -- 상호(법인명)
			     , ISNULL(SUBSTRING(A.COMPANY_NUM,1,3) + '-' + 
			              SUBSTRING(A.COMPANY_NUM,4,2) + '-' + 
			              SUBSTRING(A.COMPANY_NUM, 6, 5), '')   AS COMPANY_NUM    -- 사업자등록번호
			     , ISNULL(A.REPRE_NAME,'')                      AS REPRE_NAME     -- 성명(대표자)
			     , ISNULL(A.ADDR,'')                            AS ADDR           -- 사업장 소재지
			     , ISNULL(A.COMP_TYPE,'')                       AS COMP_TYPE      -- 업태
			     , ISNULL(A.COMP_CLASS,'')                      AS COMP_CLASS     -- 종목
			     , ISNULL(A.SAFFER_TAX_NM, '')                  AS SAFFER_TAX_NM  -- 세무서장
			     , (SELECT SUB_CODE
			          FROM BSA100T  WITH (NOLOCK)
			         WHERE COMP_CODE = @COMP_CODE
			           AND MAIN_CODE = 'A065' 
			           AND SUB_CODE  같지 않다 '$'
			           AND (REF_CODE1 작거나 같다 RIGHT(@TO_PUB_DATE,4) 
			           AND  REF_CODE2 크거나 같다 RIGHT(@TO_PUB_DATE,4))) AS TERM_CODE					*/
			
			/* 2. 내국신용장/구매확인서에 의한 공급실적 합계 */
			       ISNULL(@NAEGUK_CNT,0)                        AS NAEGUK_CNT
			     , ISNULL(@NAEGUK_AMT,0)                        AS NAEGUK_AMT
			     , ISNULL(@GUMAE_CNT,0)                         AS GUMAE_CNT
			     , ISNULL(@GUMAE_AMT,0)                         AS GUMAE_AMT
			     , ISNULL(@NAEGUK_CNT,0) + ISNULL(@GUMAE_CNT,0) AS TOT_CNT
			     , ISNULL(@NAEGUK_AMT,0) + ISNULL(@GUMAE_AMT,0) AS TOT_AMT
			/*  FROM BOR120T A WITH (NOLOCK)     
			 WHERE A.COMP_CODE     = @COMP_CODE
			   AND A.BILL_DIV_CODE = @BILL_DIV_CODE												*/
	</select>
		
	<select id="atx500ukrServiceImpl.selectReference" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE      NVARCHAR(8)
              , @BILL_DIVI_CODE NVARCHAR(8)
              , @FR_PUB_DATE    NVARCHAR(8)
              , @TO_PUB_DATE    NVARCHAR(8) 
        
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BILL_DIVI_CODE = #{DIV_CODE}
		SET @FR_PUB_DATE    = #{FR_PUB_DATE}
		SET @TO_PUB_DATE    = #{TO_PUB_DATE}
        
		-- 임시 테이블 생성
        BEGIN
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202007101159')) 
	            DROP TABLE #OMEGA202007101159
			     
	        CREATE TABLE #OMEGA202007101159
	             ( COMP_CODE            NVARCHAR(08)
                 , PUB_DATE             NVARCHAR(08)
	             , FR_PUB_DATE          NVARCHAR(08)
	             , TO_PUB_DATE          NVARCHAR(08)
	             , BILL_DIV_CODE        NVARCHAR(08)
	             , GUBUN                NVARCHAR(01)
	             , DOCU_NUM             NVARCHAR(40)
	             , DOCU_DATE            NVARCHAR(08)
	             , COMPANY_NUM          NVARCHAR(12)
	             , AMT_I                NUMERIC(30, 6)
	             , REMARK               NVARCHAR(100) )
        END

        -- 부가세조정에서 입력한 데이터 집계
        BEGIN
            INSERT INTO #OMEGA202007101159
            SELECT A.COMP_CODE
                 , A.PUB_DATE
                 , @FR_PUB_DATE     AS FR_PUB_DATE
                 , @TO_PUB_DATE     AS TO_PUB_DATE
                 , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                 , 'A'              AS GUBUN
                 , ''               AS DOCU_NUM
                 , ''               AS DOCU_DATE
                 , ''               AS COMPANY_NUM
                 , A.SUPPLY_AMT_I   AS AMT_I
                 , ''               AS REMARK
              FROM            ATX100T A WITH (NOLOCK)
                   LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                     AND B.AC_DATE   = A.AC_DATE
                                                     AND B.SLIP_NUM  = A.SLIP_NUM
                                                     AND B.DR_CR     = '2'
                                                     AND B.SLIP_SEQ != A.SLIP_SEQ
                                                     AND ISNULL(B.MOD_DIVI, '') != 'D'
             WHERE A.COMP_CODE       = @COMP_CODE
               AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		       AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		       AND A.PUB_DATE       &lt;= @TO_PUB_DATE
               AND A.PROOF_KIND      = '12'		
               AND ISNULL(B.COMP_CODE,'') = ''
        END

		-- 전표에서 입력한 데이터 집계
        BEGIN
            DECLARE @CurAcDate      NVARCHAR(08)
                  , @CurSlipNum     NUMERIC(7,0)

            DECLARE CUR_ATX500T CURSOR FOR
                SELECT DISTINCT A.AC_DATE, A.SLIP_NUM
                  FROM            ATX100T A WITH (NOLOCK)
                       LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.AC_DATE   = A.AC_DATE
                                                         AND B.SLIP_NUM  = A.SLIP_NUM
                                                         AND B.SLIP_SEQ  = A.SLIP_SEQ
                                                         AND ISNULL(B.MOD_DIVI, '') != 'D'
                 WHERE A.COMP_CODE       = @COMP_CODE
                   AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		           AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		           AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                   AND A.PROOF_KIND      = '12'		
                   AND ISNULL(B.COMP_CODE,'') != ''
                
            OPEN CUR_ATX500T
            FETCH NEXT FROM CUR_ATX500T INTO @CurAcDate, @CurSlipNum
            WHILE (@@FETCH_STATUS = 0)
            BEGIN
                INSERT INTO #OMEGA202007101159
                SELECT DISTINCT
                       A.COMP_CODE
                     , A.PUB_DATE
                     , @FR_PUB_DATE AS FR_PUB_DATE
                     , @TO_PUB_DATE AS TO_PUB_DATE
                     , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                     , 'A'          AS GUBUN
                     , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DC' THEN ISNULL(B.AC_DATA1,'')
                                   WHEN ISNULL(B.AC_CODE2,'') = 'DC' THEN ISNULL(B.AC_DATA2,'')
                                   WHEN ISNULL(B.AC_CODE3,'') = 'DC' THEN ISNULL(B.AC_DATA3,'')
                                   WHEN ISNULL(B.AC_CODE4,'') = 'DC' THEN ISNULL(B.AC_DATA4,'')
                                   WHEN ISNULL(B.AC_CODE5,'') = 'DC' THEN ISNULL(B.AC_DATA5,'')
                                   WHEN ISNULL(B.AC_CODE6,'') = 'DC' THEN ISNULL(B.AC_DATA6,'')
                               END,'') AS DOCU_NUM
                     , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DD' THEN ISNULL(B.AC_DATA1,'')
                                   WHEN ISNULL(B.AC_CODE2,'') = 'DD' THEN ISNULL(B.AC_DATA2,'')
                                   WHEN ISNULL(B.AC_CODE3,'') = 'DD' THEN ISNULL(B.AC_DATA3,'')
                                   WHEN ISNULL(B.AC_CODE4,'') = 'DD' THEN ISNULL(B.AC_DATA4,'')
                                   WHEN ISNULL(B.AC_CODE5,'') = 'DD' THEN ISNULL(B.AC_DATA5,'')
                                   WHEN ISNULL(B.AC_CODE6,'') = 'DD' THEN ISNULL(B.AC_DATA6,'')
                               END,'') AS DOCU_DATE
                     , ISNULL((SELECT SUBSTRING(X.COMPANY_NUM, 1, 3) + '-'
                                    + SUBSTRING(X.COMPANY_NUM, 4, 2) + '-'
                                    + SUBSTRING(X.COMPANY_NUM, 6, 5)
                                 FROM BCM100T X WITH (NOLOCK)
                                WHERE X.COMP_CODE = A.COMP_CODE
                                  AND X.CUSTOM_CODE = ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'A4' THEN ISNULL(B.AC_DATA1,'')
                                                                  WHEN ISNULL(B.AC_CODE2,'') = 'A4' THEN ISNULL(B.AC_DATA2,'')
                                                                  WHEN ISNULL(B.AC_CODE3,'') = 'A4' THEN ISNULL(B.AC_DATA3,'')
                                                                  WHEN ISNULL(B.AC_CODE4,'') = 'A4' THEN ISNULL(B.AC_DATA4,'')
                                                                  WHEN ISNULL(B.AC_CODE5,'') = 'A4' THEN ISNULL(B.AC_DATA5,'')
                                                                  WHEN ISNULL(B.AC_CODE6,'') = 'A4' THEN ISNULL(B.AC_DATA6,'')
                                                              END,'')),'') AS COMPANY_NUM
                     , ISNULL(B.AMT_I, A.SUPPLY_AMT_I) AS AMT_I
                     , '' AS REMARK
                  FROM            ATX100T A WITH (NOLOCK)
                       INNER JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.AC_DATE   = A.AC_DATE
                                                         AND B.SLIP_NUM  = A.SLIP_NUM
                                                         AND B.DR_CR     = '2'
                                                         AND ISNULL(B.MOD_DIVI, '') != 'D'
                                                         AND B.SLIP_SEQ NOT IN (SELECT X.SLIP_SEQ
                                                                                  FROM ATX100T X WITH (NOLOCK)
                                                                                 WHERE X.COMP_CODE       = @COMP_CODE
                                                                                   AND X.BILL_DIVI_CODE  = @BILL_DIVI_CODE
                                                                		           AND X.PUB_DATE       &gt;= @FR_PUB_DATE
                                                                		           AND X.PUB_DATE       &lt;= @TO_PUB_DATE
                                                                                   AND X.PROOF_KIND      = '12'
                                                                                   AND X.AC_DATE         = @CurAcDate
                                                                                   AND X.SLIP_NUM        = @CurSlipNum)
                 WHERE A.COMP_CODE       = @COMP_CODE
                   AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		           AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		           AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                   AND A.PROOF_KIND      = '12'		
                   AND A.AC_DATE         = @CurAcDate
                   AND A.SLIP_NUM        = @CurSlipNum

                FETCH NEXT FROM CUR_ATX500T INTO @CurAcDate, @CurSlipNum
            END
            CLOSE      CUR_ATX500T
            DEALLOCATE CUR_ATX500T
        END

        SELECT COMP_CODE        
	         , FR_PUB_DATE      
	         , TO_PUB_DATE      
	         , BILL_DIV_CODE    
             , ROW_NUMBER() OVER (ORDER BY PUB_DATE) AS SEQ
	         , GUBUN            
	         , DOCU_NUM         
	         , DOCU_DATE        
	         , COMPANY_NUM      
	         , AMT_I            
	         , REMARK 
          FROM #OMEGA202007101159
	</select>

	<update id="atx500ukrServiceImpl.deleteDetail" parameterType="Map">
		--atx500ukr.Catx500ukr[fnatx500set] Query01
		DELETE FROM ATX500T 
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND FR_PUB_DATE    = #{FR_PUB_DATE}
		   AND TO_PUB_DATE    = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
		   AND SEQ            = ${SEQ}
	</update>
		
	<update id="atx500ukrServiceImpl.updateDetail" parameterType="Map">		
		--atx500ukr.Catx500ukr[fnatx500set] Query02
		UPDATE ATX500T
		   SET GUBUN          = #{GUBUN}
		     , DOCU_NUM       = #{DOCU_NUM}
		     , DOCU_DATE      = #{DOCU_DATE}
		     , COMPANY_NUM    = #{COMPANY_NUM}
		     , AMT_I          = ${AMT_I}
		     , REMARK         = #{REMARK}
		     , INSERT_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND FR_PUB_DATE    = #{FR_PUB_DATE}
		   AND TO_PUB_DATE    = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
		   AND SEQ            = ${SEQ}
	</update>

	<insert id="atx500ukrServiceImpl.insertDetail" parameterType="Map">    	
		--atx500ukr.Catx500ukr[fnatx500set] Query02
		INSERT INTO ATX500T
		     ( COMP_CODE
		     , FR_PUB_DATE
		     , TO_PUB_DATE
		     , BILL_DIV_CODE
		     , SEQ
		     , GUBUN
		     , DOCU_NUM
		     , DOCU_DATE
		     , COMPANY_NUM
		     , AMT_I
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{FR_PUB_DATE}
		     , #{TO_PUB_DATE}
		     , #{BILL_DIV_CODE}
		     , ${SEQ}
		     , #{GUBUN}
		     , #{DOCU_NUM}
		     , #{DOCU_DATE}
		     , #{COMPANY_NUM}
		     , ${AMT_I}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )	
	</insert>

	<!-- Excel -->
	<select id="atx500ukrServiceImpl.fnDocuChk" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE     NVARCHAR(08)
		      , @FR_PUB_DATE   NVARCHAR(08)
		      , @TO_PUB_DATE   NVARCHAR(08)
		      , @BILL_DIV_CODE NVARCHAR(08)
		      , @GUBUN         NVARCHAR(01)
		      , @DOCU_NUM      NVARCHAR(40)
		      , @COMPANY_NUM   NVARCHAR(10)
		  SET @COMP_CODE     = #{S_COMP_CODE}
		  SET @FR_PUB_DATE   = #{FR_PUB_DATE}
		  SET @TO_PUB_DATE   = #{TO_PUB_DATE}
		  SET @BILL_DIV_CODE = #{DIV_CODE}
		SELECT *
		  FROM ATX500T   WITH (NOLOCK)
		 WHERE COMP_CODE		= @COMP_CODE
		   AND FR_PUB_DATE	&gt;= @FR_PUB_DATE
		   AND TO_PUB_DATE	&lt;= @TO_PUB_DATE
		   AND BILL_DIV_CODE = @BILL_DIV_CODE
	</select>

	<insert id="atx500ukrServiceImpl.insertExcelatx500upload" parameterType="Map">
    	INSERT INTO ATX500T_UPLOAD
    		(_EXCEL_JOBID, 
    		 _EXCEL_ROWNUM, 
    		 _EXCEL_HAS_ERROR, 
    		 _EXCEL_ERROR_MSG, 
    		 GUBUN,		
    		 DOCU_NUM,		
    		 DOCU_DATE,	
    		 COMPANY_NUM,	
    		 AMT_I,		
    		 REMARK		
    	)
    	VALUES (
    		 #{_EXCEL_JOBID}, 
    		 #{_EXCEL_ROWNUM}, 
    		 #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}, 
    		 #{_EXCEL_ERROR		,jdbcType=VARCHAR},     		  
    		 #{GUBUN},		
    		 #{DOCU_NUM},		
    		 #{DOCU_DATE},	
    		 #{COMPANY_NUM},	
    		 #{AMT_I},		
    		 #{REMARK}		
    	)
    </insert>
    
	<select id="atx500ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*atx500ukrServiceImpl.selectExcelUploadSheet1*/
		SELECT _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR       
			 , _EXCEL_ERROR_MSG
    		 , GUBUN	
    		 , DOCU_NUM		
    		 , DOCU_DATE	
    		 , COMPANY_NUM	
    		 , AMT_I
    		 , REMARK		
		  FROM ATX500T_UPLOAD   WITH (NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>
    
    <update id="atx500ukrServiceImpl.excelValidate" >
    	/*atx500ukrServiceImpl.excelValidate*/
    </update>
    
	<select id="atx500ukrServiceImpl.selectPrintDetail" parameterType="Map" resultType="rMap">
		/* 3.내국신용장/구매확인서에 의한 공급실적 명세서 */
		--atx500ukrServiceImpl.selectPrintDetail
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
			DECLARE @COMP_CODE     NVARCHAR(08)
			      , @FR_PUB_DATE   NVARCHAR(08)
			      , @TO_PUB_DATE   NVARCHAR(08)
			      , @BILL_DIV_CODE NVARCHAR(08)
			   SET @COMP_CODE     = #{S_COMP_CODE}
			   SET @FR_PUB_DATE   = #{FR_PUB_DATE}
			   SET @TO_PUB_DATE   = #{TO_PUB_DATE}
			   SET @BILL_DIV_CODE = #{DIV_CODE}
			SELECT A.COMP_CODE
			     , A.FR_PUB_DATE
			     , A.TO_PUB_DATE
			     , A.BILL_DIV_CODE
			     , ROW_NUMBER() OVER(ORDER BY A.SEQ)				AS SUB_SEQ
			     , CASE WHEN A.GUBUN = 'A' THEN '구매확인서'
			     		WHEN A.GUBUN = 'L' THEN '내국신용장'
			     		ELSE A.GUBUN
			       END												AS GUBUN
			     , A.DOCU_NUM
			     , uniLITE.fnGetUserdate(A.COMP_CODE, A.DOCU_DATE)	AS DOCU_DATE
			     , SUBSTRING(A.COMPANY_NUM, 1, 3) + '-'
			     + SUBSTRING(A.COMPANY_NUM, 4, 2) + '-'
			     + SUBSTRING(A.COMPANY_NUM, 6, 5)					AS COMPANY_NUM_SUB
			     , A.AMT_I
			     , A.REMARK
			     , A.INSERT_DB_USER
			     , A.INSERT_DB_TIME
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
			  FROM ATX500T A WITH (NOLOCK)
			 WHERE A.COMP_CODE			= @COMP_CODE
			   AND A.FR_PUB_DATE	&gt;= @FR_PUB_DATE
			   AND A.TO_PUB_DATE	&lt;= @TO_PUB_DATE
			   AND A.BILL_DIV_CODE = @BILL_DIV_CODE
			  ORDER BY A.SEQ		
	</select>
</mapper>