<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx115skrServiceImpl">
	
	<select id="atx115skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#ATX115SKR_TEMP'))
		BEGIN
			DROP TABLE #ATX115SKR_TEMP
		END
		
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
	
			DECLARE         @COMP_CODE          NVARCHAR(08)               /* -- (필수) 법인코드		 */
						  , @DIV_CODE           NVARCHAR(08)               /* -- (필수) 사업장			 */
						  , @FROM_DATE          NVARCHAR(08)               /* -- (선택) 조회 시작일	     */
						  , @TO_DATE            NVARCHAR(08)               /* -- (선택) 조회 종료일	     */
						  , @SALE_PRSN          NVARCHAR(04)               /* -- (선택) 영업담당(매출)	 */
						  , @CUSTOM_CODE        NVARCHAR(08)               /* -- (선택) 거래처 코드	     */
						  , @CUSTOM_NAME        NVARCHAR(50)               /* -- (선택) 거래처명		 */
						  , @SLIP_YN            NVARCHAR(01)               /* -- (선택) 매출기표여부	     */
						  , @USER_ID            NVARCHAR(100)               /* -- (필수) USER ID		 */
	
		/* --  [ 변수 값 할당 ] -------------------------------------------------------------------------------------------------- */
			SET @COMP_CODE          = #{S_COMP_CODE}
			SET @DIV_CODE           = #{DIV_CODE}
			SET @FROM_DATE          = #{DATE_FR}
			SET @TO_DATE            = #{DATE_TO}
			SET @SALE_PRSN          = #{SALE_PRSN}
			SET @CUSTOM_CODE        = #{CUSTOM_CODE}
			SET @CUSTOM_NAME        = #{CUSTOM_NAME}
			SET @SLIP_YN            = #{AUTO_YN}
			SET @USER_ID            = #{S_USER_ID}
	
		-- DIV_CODE가 없을 경우 모든 사업장의 데이터 조회
		--/* --  [ 초기화 ] -------------------------------------------------------------------------------------------------------- */
		--	IF @DIV_CODE = N'' OR @DIV_CODE = N'NULL' OR @DIV_CODE = N'*'
		--	BEGIN
		--		SELECT  TOP 0
		--				CONVERT(NVARCHAR(08)  , NULL)           AS CUSTOM_CODE
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS CUSTOM_FULL_NAME
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS CUSTOM_NAME
		--			  , CONVERT(NVARCHAR(4000), NULL)           AS BILL_DATE
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS BILL_TYPE_CD
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS BILL_TYPE_NM
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS PUB_NUM
		--			  , CONVERT(NUMERIC(30, 6), NULL)           AS SALE_LOC_AMT_I
		--			  , CONVERT(NUMERIC(30, 6), NULL)           AS TAX_AMT_O
		--			  , CONVERT(NUMERIC(31, 6), NULL)           AS TOT_SALE_LOC_AMT
		--			  , CONVERT(NVARCHAR(4000), NULL)           AS PUB_FR_DATE
		--			  , CONVERT(NVARCHAR(4000), NULL)           AS PUB_TO_DATE
		--			  , CONVERT(NVARCHAR(4000), NULL)           AS RECEIPT_PLAN_DATE
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS AGENT_TYPE
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS AREA_TYPE
		--			  , CONVERT(NVARCHAR(08)  , NULL)           AS MANAGE_CUSTOM_CD
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS MANAGE_CUSTOM_NM
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS PROJECT_NO
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS PJT_CODE
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS PJT_NAME
		--			  , CONVERT(NVARCHAR(1000), NULL)           AS REMARK
		--			  , CONVERT(NVARCHAR(13)  , NULL)           AS COMPANY_NUM1
		--			  , CONVERT(INT           , NULL)           AS GUBUN
		--			  , CONVERT(NVARCHAR(08)  , NULL)           AS DIV_CODE
		--			  , CONVERT(NVARCHAR(36)  , NULL)           AS SORT
		--			  , CONVERT(NVARCHAR(08)  , NULL)           AS SALE_DIV_CODE
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS BILL_SEND_YN
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS EB_NUM
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS BILL_FLAG
		--			  , CONVERT(NVARCHAR(01)  , NULL)           AS BILL_PUBLISH_TYPE
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS MODI_REASON
		--			  , CONVERT(NVARCHAR(100) , NULL)           AS SALE_PRSN
		--			  , CONVERT(NVARCHAR(1000), NULL)           AS BEFORE_PUB_NUM
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS ORIGINAL_PUB_NUM
		--			  , CONVERT(NVARCHAR(01)  , NULL)           AS PLUS_MINUS_TYPE
		--			  , CONVERT(NVARCHAR(13)  , NULL)           AS COMPANY_NUM
		--			  , CONVERT(NVARCHAR(04)  , NULL)           AS SERVANT_COMPANY_NUM
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS TOP_NAME
		--			  , CONVERT(NVARCHAR(200) , NULL)           AS ADDR
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS COMP_CLASS
		--			  , CONVERT(NVARCHAR(50)  , NULL)           AS COMP_TYPE
		--			  , CONVERT(NVARCHAR(40)  , NULL)           AS RECEIVE_PRSN_NAME
		--			  , CONVERT(NVARCHAR(40)  , NULL)           AS RECEIVE_PRSN_EMAIL
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS RECEIVE_PRSN_TEL
		--			  , CONVERT(NVARCHAR(20)  , NULL)           AS RECEIVE_PRSN_MOBL
		--			  , CONVERT(NVARCHAR(40)  , NULL)           AS BROK_PRSN_NAME
		--			  , CONVERT(NVARCHAR(40)  , NULL)           AS BROK_PRSN_EMAIL
		--			  , CONVERT(NVARCHAR(12)  , NULL)           AS BROK_PRSN_PHONE
	    --
		--		RETURN
		--	END
	
		/* --  [ 명칭 참조 유형 ] ------------------------------------------------------------------------------------------------ */
			DECLARE         @RefItem            NVARCHAR(01)
	
			SELECT  TOP 1 @RefItem = REF_ITEM
			  FROM  BSA300T WITH (NOLOCK)
			 WHERE  USER_ID = @USER_ID
	
			SET @RefItem = ISNULL(@RefItem, N'0')
	
		/* --  [ 날짜 포맷 유형 설정 ] ------------------------------------------------------------------------------------------- */
			DECLARE         @DateFormat         NVARCHAR(10)
	
			SELECT  TOP 1 @DateFormat = CODE_NAME
			  FROM  BSA100T WITH (NOLOCK)
			 WHERE  COMP_CODE = @COMP_CODE
			   AND  MAIN_CODE = N'B044'
			   AND  REF_CODE1 = N'Y'
	
			SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
	
			/* --  [ 데이터 조회 ] --------------------------------------------------------------------------------------------------- */
				SELECT  '0' 																			AS SEQ
					 ,  A.CUSTOM_CODE
					 ,  CASE WHEN ISNULL(A.CUSTOM_NAME,'') = '' THEN C1.CUSTOM_FULL_NAME
							 ELSE A.CUSTOM_NAME
						END                                                                             AS CUSTOM_FULL_NAME
					 ,  CASE WHEN @RefItem = N'1' THEN C1.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C1.CUSTOM_NAME2
							 ELSE C1.CUSTOM_NAME
						END                                                                             AS CUSTOM_NAME
					 ,  CASE WHEN ISNULL(A.BILL_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
													 , 'MM',   SUBSTRING(A.BILL_DATE, 5, 2))
													 , 'DD',   SUBSTRING(A.BILL_DATE, 7, 2))
						END                                                                             AS BILL_DATE
					 ,  A.BILL_TYPE                                                                     AS BILL_TYPE_CD
					 ,  ISNULL(M7.CODE_NAME, '')                                                        AS BILL_TYPE_NM
					 ,  A.PUB_NUM
					 ,  ISNULL(A.SALE_LOC_AMT_I, 0.0)                                                   AS SALE_LOC_AMT_I
					 ,  ISNULL(A.TAX_AMT_O, 0.0)                                                        AS TAX_AMT_O
					 ,  ISNULL(A.SALE_LOC_AMT_I, 0.0) + ISNULL(A.TAX_AMT_O, 0.0)                        AS TOT_SALE_LOC_AMT
					 ,  CASE WHEN ISNULL(A.PUB_FR_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PUB_FR_DATE, 1, 4))
													 , 'MM',   SUBSTRING(A.PUB_FR_DATE, 5, 2))
													 , 'DD',   SUBSTRING(A.PUB_FR_DATE, 7, 2))
						END                                                                             AS PUB_FR_DATE
					 ,  CASE WHEN ISNULL(A.PUB_TO_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PUB_TO_DATE, 1, 4))
													 , 'MM',   SUBSTRING(A.PUB_TO_DATE, 5, 2))
													 , 'DD',   SUBSTRING(A.PUB_TO_DATE, 7, 2))
						END                                                                             AS PUB_TO_DATE
					 ,  CASE WHEN ISNULL(A.RECEIPT_PLAN_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_PLAN_DATE, 1, 4))
													 , 'MM',   SUBSTRING(A.RECEIPT_PLAN_DATE, 5, 2))
													 , 'DD',   SUBSTRING(A.RECEIPT_PLAN_DATE, 7, 2))
						END                                                                             AS RECEIPT_PLAN_DATE
					 ,  ISNULL(M1.CODE_NAME, '')                                                        AS AGENT_TYPE
					 ,  ISNULL(M2.CODE_NAME, '')                                                        AS AREA_TYPE
					 ,  ISNULL(C2.MANAGE_CUSTOM, '')                                                    AS MANAGE_CUSTOM_CD
					 ,  CASE WHEN @RefItem = N'1' THEN C2.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C2.CUSTOM_NAME2
							 ELSE C2.CUSTOM_NAME
						END                                                                             AS MANAGE_CUSTOM_NM
					 ,  A.PROJECT_NO
					 ,  ISNULL(A.PJT_CODE, '')                                                          AS PJT_CODE
					 ,  ISNULL(P1.PJT_NAME, '')                                                         AS PJT_NAME
					 ,  A.REMARK
					 ,  ISNULL(C2.COMPANY_NUM, '')                                                      AS COMPANY_NUM1
					 ,  1                                                                               AS GUBUN
					 ,  A.DIV_CODE
					 ,  A.PUB_NUM + A.DIV_CODE + A.CUSTOM_CODE                                          AS SORT
					 ,  A.SALE_DIV_CODE
					 ,  D.TREE_NAME																		AS DEPT_NAME
		
						/* -- 추가 시작 */
					 ,  ISNULL(M8.CODE_NAME, '')                                                        AS BILL_SEND_YN
					 ,  A.EB_NUM
					 ,  ISNULL(M3.CODE_NAME, '')                                                        AS BILL_FLAG
					 ,  ISNULL(A.BILL_PUBLISH_TYPE, '')													AS BILL_PUBLISH_TYPE
					 ,  ISNULL(M4.CODE_NAME, '')                                                        AS MODI_REASON
					 ,  ISNULL(M5.CODE_NAME, '')                                                        AS SALE_PRSN
					 ,  CASE WHEN A.BILL_FLAG = '1' THEN uniLITE.fnGetTxt('B0112')
							 WHEN A.BILL_FLAG = '2' THEN A.BEFORE_PUB_NUM
						END                                                                             AS BEFORE_PUB_NUM
					 ,  A.ORIGINAL_PUB_NUM
					 ,  A.PLUS_MINUS_TYPE
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.COMPANY_NUM
							 ELSE A.COMPANY_NUM
						END                                                                             AS COMPANY_NUM
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.SERVANT_COMPANY_NUM
							 ELSE A.SERVANT_COMPANY_NUM
						END                                                                             AS SERVANT_COMPANY_NUM
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.TOP_NAME
							 ELSE A.TOP_NAME
						END                                                                             AS TOP_NAME
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.ADDR1 + C1.ADDR2
							 ELSE A.ADDR
						END                                                                             AS ADDR
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.COMP_CLASS
							 ELSE A.COMP_CLASS
						END                                                                             AS COMP_CLASS
					 ,  CASE WHEN ISNULL(A.BILL_SEND_YN, 'N') = 'N' THEN C1.COMP_TYPE
							 ELSE A.COMP_TYPE
						END                                                                             AS COMP_TYPE
					 ,  A.PRSN_NAME                                                                     AS RECEIVE_PRSN_NAME
					 ,  A.PRSN_EMAIL                                                                    AS RECEIVE_PRSN_EMAIL
					 ,  A.PRSN_PHONE                                                                    AS RECEIVE_PRSN_TEL
					 ,  A.PRSN_HANDPHONE                                                                AS RECEIVE_PRSN_MOBL

					 ,  A.ISSU_ID
					 ,  A.STAT_CODE
					 ,  A.REQ_STAT_CODE
					 ,  A.ERR_CD
					 ,  A.ERR_MSG
					 ,  A.SEND_PNAME
					 ,  A.SEND_ERR_DESC
					 ,  A.SND_STAT
					 ,  A.RCV_VIEW_YN
					 ,  A.MAIL_SEQNO
					 
					 ,  A.BROK_PRSN_NAME
					 ,  A.BROK_PRSN_EMAIL
					 ,  A.BROK_PRSN_PHONE
					 
					 ,  A.EX_DATE	
					 ,  A.EX_NUM	
					 ,  CASE A.AGREE_YN WHEN 'Y' THEN '2'
					 					ELSE '1'
					 	END									AS AGREE_YN
					 ,  A.SEND_NAME
					 
				INTO #ATX115SKR_TEMP	 
				FROM                ATX110T     A  WITH (NOLOCK)
						INNER JOIN  BCM100T     C1 WITH (NOLOCK) ON C1.COMP_CODE    =  A.COMP_CODE
																AND C1.CUSTOM_CODE  =  A.CUSTOM_CODE
						LEFT  JOIN  BCM100T     C2 WITH (NOLOCK) ON C2.COMP_CODE    = C1.COMP_CODE
																AND C2.CUSTOM_CODE  = C1.MANAGE_CUSTOM
						LEFT  JOIN  BCM600T     P1 WITH (NOLOCK) ON P1.COMP_CODE    =  A.COMP_CODE
																AND P1.PJT_CODE     =  A.PJT_CODE
						LEFT  JOIN  BSA100T     M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
																AND M1.MAIN_CODE    =  N'B055'
																AND M1.SUB_CODE     = C1.AGENT_TYPE
						LEFT  JOIN  BSA100T     M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
																AND M2.MAIN_CODE    =  N'B056'
																AND M2.SUB_CODE     = C1.AREA_TYPE
						LEFT  JOIN  BSA100T     M3 WITH (NOLOCK) ON M3.COMP_CODE    =  A.COMP_CODE
																AND M3.MAIN_CODE    =  N'S096'
																AND M3.SUB_CODE     =  A.BILL_FLAG
						LEFT  JOIN  BSA100T     M4 WITH (NOLOCK) ON M4.COMP_CODE    =  A.COMP_CODE
																AND M4.MAIN_CODE    =  N'S095'
																AND M4.SUB_CODE     =  A.MODI_REASON
						LEFT  JOIN  BSA100T     M5 WITH (NOLOCK) ON M5.COMP_CODE    =  A.COMP_CODE
																AND M5.MAIN_CODE    =  N'S010'
																AND M5.SUB_CODE     =  A.SALE_PRSN
						LEFT  JOIN  BSA100T     M6 WITH (NOLOCK) ON M6.COMP_CODE    =  A.COMP_CODE
																AND M6.MAIN_CODE    =  N'S024'
																AND M6.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M7 WITH (NOLOCK) ON M7.COMP_CODE    =  A.COMP_CODE
																AND M7.MAIN_CODE    =  N'A022'
																AND M7.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M8 WITH (NOLOCK) ON M8.COMP_CODE    =  A.COMP_CODE
																AND M8.MAIN_CODE    =  N'S119'
																AND M8.SUB_CODE     =  A.BILL_SEND_YN
						LEFT  JOIN  BSA210T     D  WITH (NOLOCK) ON D.COMP_CODE     =  A.COMP_CODE
																AND D.TREE_CODE		= A.DEPT_CODE
				WHERE   A.COMP_CODE         =  #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">             
				AND     A.SALE_DIV_CODE     =  #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_FR)">             
				AND     A.BILL_DATE        &gt;=  #{DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_TO)">             
				AND     A.BILL_DATE        &lt;=  #{DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">             
				AND     A.SALE_PRSN         =  #{SALE_PRSN}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>		   
		   <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">        
				AND     CASE WHEN @RefItem = N'1' THEN C1.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C1.CUSTOM_NAME2
							 ELSE C1.CUSTOM_NAME
						END              LIKE '%' + #{CUSTOM_NAME} + '%'
		   </if>
		
		   <if test="AUTO_YN == &quot;Y&quot;">
			    AND     ISNULL(A.EX_DATE,'') != ''     /* 기표된 데이터만 리턴 */
		   </if>
		   <if test="AUTO_YN == &quot;N&quot;">
			    AND     ISNULL(A.EX_DATE,'')  = ''     /* 미기표된 데이터만 리턴 */
		   </if>
		   
	/* 일자계 구하기 */			   
	INSERT INTO #ATX115SKR_TEMP
				SELECT  '1' AS SEQ
					 ,  A.CUSTOM_CODE
					 ,  CASE WHEN ISNULL(A.CUSTOM_NAME,'') = '' THEN C1.CUSTOM_FULL_NAME
							 ELSE A.CUSTOM_NAME
						END                                                                             AS CUSTOM_FULL_NAME
					 ,  '' AS CUSTOM_NAME
					 ,  CASE WHEN ISNULL(A.BILL_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
													 , 'MM',   SUBSTRING(A.BILL_DATE, 5, 2))
													 , 'DD',   SUBSTRING(A.BILL_DATE, 7, 2))
						END                                                                             AS BILL_DATE
					 ,  '' AS BILL_TYPE_CD
					 ,  '' AS BILL_TYPE_NM
					 ,  '' AS PUB_NUM
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I   , 0 ))	AS SALE_LOC_AMT_I
					 ,  SUM(ISNULL(A.TAX_AMT_O		, 0 ))		AS TAX_AMT_O
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I, 0.0) + ISNULL(A.TAX_AMT_O, 0.0))	AS TOT_SALE_LOC_AMT
					 ,  '' AS PUB_FR_DATE
					 ,  '' AS PUB_TO_DATE
					 ,  '' AS RECEIPT_PLAN_DATE
					 ,  '' AS AGENT_TYPE
					 ,  '' AS AREA_TYPE
					 ,  '' AS MANAGE_CUSTOM_CD
					 ,  '' AS MANAGE_CUSTOM_NM
					 ,  '' AS PROJECT_NO
					 ,  '' AS PJT_CODE
					 ,  '' AS PJT_NAME
					 ,  '' AS REMARK
					 ,  '' AS COMPANY_NUM1
					 ,  '' AS GUBUN
					 ,  '' AS DIV_CODE
					 ,  '' AS SORT
					 ,  '' AS SALE_DIV_CODE
					 ,  '' AS DEPT_NAME
		
						/* -- 추가 시작 */
					 ,  '' AS BILL_SEND_YN
					 ,  '' AS EB_NUM
					 ,  '' AS BILL_FLAG
					 ,  '' AS BILL_PUBLISH_TYPE
					 ,  '' AS MODI_REASON
					 ,  '' AS SALE_PRSN
					 ,  '' AS BEFORE_PUB_NUM
					 ,  '' AS ORIGINAL_PUB_NUM
					 ,  '' AS PLUS_MINUS_TYPE
					 ,  '' AS COMPANY_NUM
					 ,  '' AS SERVANT_COMPANY_NUM
					 ,  '' AS TOP_NAME
					 ,  '' AS ADDR
					 ,  '' AS COMP_CLASS
					 ,  '' AS COMP_TYPE
					 ,  '' AS RECEIVE_PRSN_NAME
					 ,  '' AS RECEIVE_PRSN_EMAIL
					 ,  '' AS RECEIVE_PRSN_TEL
					 ,  '' AS RECEIVE_PRSN_MOBL
					 
					 ,  '' AS ISSU_ID
					 ,  '' AS STAT_CODE
					 ,  '' AS REQ_STAT_CODE
					 ,  '' AS ERR_CD
					 ,  '' AS ERR_MSG
					 ,  '' AS SEND_PNAME
					 ,  '' AS SEND_ERR_DESC
					 ,  '' AS SND_STAT
					 ,  '' AS RCV_VIEW_YN
					 ,  '' AS MAIL_SEQNO

					 ,  '' AS BROK_PRSN_NAME
					 ,  '' AS BROK_PRSN_EMAIL
					 ,  '' AS BROK_PRSN_PHONE
					 
					 ,  '' AS EX_DATE	
					 ,  NULL AS EX_NUM	
					 ,  '' AS AGREE_YN
					 ,  '' AS SEND_NAME

				FROM                ATX110T     A  WITH (NOLOCK)
						INNER JOIN  BCM100T     C1 WITH (NOLOCK) ON C1.COMP_CODE    =  A.COMP_CODE
																AND C1.CUSTOM_CODE  =  A.CUSTOM_CODE
						LEFT  JOIN  BCM100T     C2 WITH (NOLOCK) ON C2.COMP_CODE    = C1.COMP_CODE
																AND C2.CUSTOM_CODE  = C1.MANAGE_CUSTOM
						LEFT  JOIN  BCM600T     P1 WITH (NOLOCK) ON P1.COMP_CODE    =  A.COMP_CODE
																AND P1.PJT_CODE     =  A.PJT_CODE
						LEFT  JOIN  BSA100T     M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
																AND M1.MAIN_CODE    =  N'B055'
																AND M1.SUB_CODE     = C1.AGENT_TYPE
						LEFT  JOIN  BSA100T     M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
																AND M2.MAIN_CODE    =  N'B056'
																AND M2.SUB_CODE     = C1.AREA_TYPE
						LEFT  JOIN  BSA100T     M3 WITH (NOLOCK) ON M3.COMP_CODE    =  A.COMP_CODE
																AND M3.MAIN_CODE    =  N'S096'
																AND M3.SUB_CODE     =  A.BILL_FLAG
						LEFT  JOIN  BSA100T     M4 WITH (NOLOCK) ON M4.COMP_CODE    =  A.COMP_CODE
																AND M4.MAIN_CODE    =  N'S095'
																AND M4.SUB_CODE     =  A.MODI_REASON
						LEFT  JOIN  BSA100T     M5 WITH (NOLOCK) ON M5.COMP_CODE    =  A.COMP_CODE
																AND M5.MAIN_CODE    =  N'S010'
																AND M5.SUB_CODE     =  A.SALE_PRSN
						LEFT  JOIN  BSA100T     M6 WITH (NOLOCK) ON M6.COMP_CODE    =  A.COMP_CODE
																AND M6.MAIN_CODE    =  N'S024'
																AND M6.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M7 WITH (NOLOCK) ON M7.COMP_CODE    =  A.COMP_CODE
																AND M7.MAIN_CODE    =  N'A022'
																AND M7.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M8 WITH (NOLOCK) ON M8.COMP_CODE    =  A.COMP_CODE
																AND M8.MAIN_CODE    =  N'S119'
																AND M8.SUB_CODE     =  A.BILL_SEND_YN
				WHERE   A.COMP_CODE         =  #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">             
				AND     A.SALE_DIV_CODE     =  #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_FR)">             
				AND     A.BILL_DATE        &gt;=  #{DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_TO)">             
				AND     A.BILL_DATE        &lt;=  #{DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">             
				AND     A.SALE_PRSN         =  #{SALE_PRSN}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>		   
		   <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">         
				AND     CASE WHEN @RefItem = N'1' THEN C1.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C1.CUSTOM_NAME2
							 ELSE C1.CUSTOM_NAME
						END              LIKE '%' + #{CUSTOM_NAME} + '%'
		   </if>
		
		   <if test="AUTO_YN == &quot;Y&quot;">
			    AND     ISNULL(A.EX_DATE,'') != ''     /* 기표된 데이터만 리턴 */
		   </if>
		   <if test="AUTO_YN == &quot;N&quot;">
			    AND     ISNULL(A.EX_DATE,'')  = ''     /* 미기표된 데이터만 리턴 */
		   </if>
	    	GROUP BY A.COMP_CODE, A.CUSTOM_CODE, A.CUSTOM_NAME, C1.CUSTOM_FULL_NAME, A.BILL_DATE
	
	/* 고객계 구하기 */
	INSERT INTO #ATX115SKR_TEMP
				SELECT  '2' AS SEQ
					 ,  A.CUSTOM_CODE
					 ,  '' AS CUSTOM_FULL_NAME
					 ,  '' AS CUSTOM_NAME
					 ,  '8888.88.88' AS BILL_DATE
					 ,  '' AS BILL_TYPE_CD
					 ,  '' AS BILL_TYPE_NM
					 ,  '' AS PUB_NUM
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I   , 0 ))	AS SALE_LOC_AMT_I
					 ,  SUM(ISNULL(A.TAX_AMT_O		, 0 ))		AS TAX_AMT_O
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I, 0.0) + ISNULL(A.TAX_AMT_O, 0.0))	AS TOT_SALE_LOC_AMT
					 ,  '' AS PUB_FR_DATE
					 ,  '' AS PUB_TO_DATE
					 ,  '' AS RECEIPT_PLAN_DATE
					 ,  '' AS AGENT_TYPE
					 ,  '' AS AREA_TYPE
					 ,  '' AS MANAGE_CUSTOM_CD
					 ,  '' AS MANAGE_CUSTOM_NM
					 ,  '' AS PROJECT_NO
					 ,  '' AS PJT_CODE
					 ,  '' AS PJT_NAME
					 ,  '' AS REMARK
					 ,  '' AS COMPANY_NUM1
					 ,  '' AS GUBUN
					 ,  '' AS DIV_CODE
					 ,  '' AS SORT
					 ,  '' AS SALE_DIV_CODE
					 ,  '' AS DEPT_NAME
		
						/* -- 추가 시작 */
					 ,  '' AS BILL_SEND_YN
					 ,  '' AS EB_NUM
					 ,  '' AS BILL_FLAG
					 ,  '' AS BILL_PUBLISH_TYPE
					 ,  '' AS MODI_REASON
					 ,  '' AS SALE_PRSN
					 ,  '' AS BEFORE_PUB_NUM
					 ,  '' AS ORIGINAL_PUB_NUM
					 ,  '' AS PLUS_MINUS_TYPE
					 ,  '' AS COMPANY_NUM
					 ,  '' AS SERVANT_COMPANY_NUM
					 ,  '' AS TOP_NAME
					 ,  '' AS ADDR
					 ,  '' AS COMP_CLASS
					 ,  '' AS COMP_TYPE
					 ,  '' AS RECEIVE_PRSN_NAME
					 ,  '' AS RECEIVE_PRSN_EMAIL
					 ,  '' AS RECEIVE_PRSN_TEL
					 ,  '' AS RECEIVE_PRSN_MOBL

					 ,  '' AS ISSU_ID
					 ,  '' AS STAT_CODE
					 ,  '' AS REQ_STAT_CODE
					 ,  '' AS ERR_CD
					 ,  '' AS ERR_MSG
					 ,  '' AS SEND_PNAME
					 ,  '' AS SEND_ERR_DESC
					 ,  '' AS SND_STAT
					 ,  '' AS RCV_VIEW_YN
					 ,  '' AS MAIL_SEQNO

					 ,  '' AS BROK_PRSN_NAME
					 ,  '' AS BROK_PRSN_EMAIL
					 ,  '' AS BROK_PRSN_PHONE
					 
					 ,  '' AS EX_DATE	
					 ,  NULL AS EX_NUM	
					 ,  '' AS AGREE_YN
					 ,  '' AS SEND_NAME

				FROM                ATX110T     A  WITH (NOLOCK)
						INNER JOIN  BCM100T     C1 WITH (NOLOCK) ON C1.COMP_CODE    =  A.COMP_CODE
																AND C1.CUSTOM_CODE  =  A.CUSTOM_CODE
						LEFT  JOIN  BCM100T     C2 WITH (NOLOCK) ON C2.COMP_CODE    = C1.COMP_CODE
																AND C2.CUSTOM_CODE  = C1.MANAGE_CUSTOM
						LEFT  JOIN  BCM600T     P1 WITH (NOLOCK) ON P1.COMP_CODE    =  A.COMP_CODE
																AND P1.PJT_CODE     =  A.PJT_CODE
						LEFT  JOIN  BSA100T     M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
																AND M1.MAIN_CODE    =  N'B055'
																AND M1.SUB_CODE     = C1.AGENT_TYPE
						LEFT  JOIN  BSA100T     M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
																AND M2.MAIN_CODE    =  N'B056'
																AND M2.SUB_CODE     = C1.AREA_TYPE
						LEFT  JOIN  BSA100T     M3 WITH (NOLOCK) ON M3.COMP_CODE    =  A.COMP_CODE
																AND M3.MAIN_CODE    =  N'S096'
																AND M3.SUB_CODE     =  A.BILL_FLAG
						LEFT  JOIN  BSA100T     M4 WITH (NOLOCK) ON M4.COMP_CODE    =  A.COMP_CODE
																AND M4.MAIN_CODE    =  N'S095'
																AND M4.SUB_CODE     =  A.MODI_REASON
						LEFT  JOIN  BSA100T     M5 WITH (NOLOCK) ON M5.COMP_CODE    =  A.COMP_CODE
																AND M5.MAIN_CODE    =  N'S010'
																AND M5.SUB_CODE     =  A.SALE_PRSN
						LEFT  JOIN  BSA100T     M6 WITH (NOLOCK) ON M6.COMP_CODE    =  A.COMP_CODE
																AND M6.MAIN_CODE    =  N'S024'
																AND M6.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M7 WITH (NOLOCK) ON M7.COMP_CODE    =  A.COMP_CODE
																AND M7.MAIN_CODE    =  N'A022'
																AND M7.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M8 WITH (NOLOCK) ON M8.COMP_CODE    =  A.COMP_CODE
																AND M8.MAIN_CODE    =  N'S119'
																AND M8.SUB_CODE     =  A.BILL_SEND_YN
				WHERE   A.COMP_CODE         =  #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">             
				AND     A.SALE_DIV_CODE     =  #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_FR)">             
				AND     A.BILL_DATE        &gt;=  #{DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_TO)">             
				AND     A.BILL_DATE        &lt;=  #{DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">             
				AND     A.SALE_PRSN         =  #{SALE_PRSN}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>		   
		   <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">                
				AND     CASE WHEN @RefItem = N'1' THEN C1.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C1.CUSTOM_NAME2
							 ELSE C1.CUSTOM_NAME
						END              LIKE '%' + #{CUSTOM_NAME} + '%'
		   </if>
		
		   <if test="AUTO_YN == &quot;Y&quot;">
			    AND     ISNULL(A.EX_DATE,'') != ''     /* 기표된 데이터만 리턴 */
		   </if>
		   <if test="AUTO_YN == &quot;N&quot;">
			    AND     ISNULL(A.EX_DATE,'')  = ''     /* 미기표된 데이터만 리턴 */
		   </if>
		    GROUP BY A.COMP_CODE, A.CUSTOM_CODE
	
	/* 총계 구하기 */
	INSERT INTO #ATX115SKR_TEMP
				SELECT  '3' AS SEQ
					 ,  'ZZZZZZ' AS CUSTOM_CODE
					 ,  '' AS CUSTOM_FULL_NAME
					 ,  '' AS CUSTOM_NAME
					 ,  '9999.99.99' AS BILL_DATE
					 ,  '' AS BILL_TYPE_CD
					 ,  '' AS BILL_TYPE_NM
					 ,  '' AS PUB_NUM
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I   , 0 ))	AS SALE_LOC_AMT_I
					 ,  SUM(ISNULL(A.TAX_AMT_O		, 0 ))		AS TAX_AMT_O
					 ,  SUM(ISNULL(A.SALE_LOC_AMT_I, 0.0) + ISNULL(A.TAX_AMT_O, 0.0))	AS TOT_SALE_LOC_AMT
					 ,  '' AS PUB_FR_DATE
					 ,  '' AS PUB_TO_DATE
					 ,  '' AS RECEIPT_PLAN_DATE
					 ,  '' AS AGENT_TYPE
					 ,  '' AS AREA_TYPE
					 ,  '' AS MANAGE_CUSTOM_CD
					 ,  '' AS MANAGE_CUSTOM_NM
					 ,  '' AS PROJECT_NO
					 ,  '' AS PJT_CODE
					 ,  '' AS PJT_NAME
					 ,  '' AS REMARK
					 ,  '' AS COMPANY_NUM1
					 ,  '' AS GUBUN
					 ,  '' AS DIV_CODE
					 ,  '' AS SORT
					 ,  '' AS SALE_DIV_CODE
					 ,  '' AS DEPT_NAME
		
						/* -- 추가 시작 */
					 ,  '' AS BILL_SEND_YN
					 ,  '' AS EB_NUM
					 ,  '' AS BILL_FLAG
					 ,  '' AS BILL_PUBLISH_TYPE
					 ,  '' AS MODI_REASON
					 ,  '' AS SALE_PRSN
					 ,  '' AS BEFORE_PUB_NUM
					 ,  '' AS ORIGINAL_PUB_NUM
					 ,  '' AS PLUS_MINUS_TYPE
					 ,  '' AS COMPANY_NUM
					 ,  '' AS SERVANT_COMPANY_NUM
					 ,  '' AS TOP_NAME
					 ,  '' AS ADDR
					 ,  '' AS COMP_CLASS
					 ,  '' AS COMP_TYPE
					 ,  '' AS RECEIVE_PRSN_NAME
					 ,  '' AS RECEIVE_PRSN_EMAIL
					 ,  '' AS RECEIVE_PRSN_TEL
					 ,  '' AS RECEIVE_PRSN_MOBL
					 
					 ,  '' AS ISSU_ID
					 ,  '' AS STAT_CODE
					 ,  '' AS REQ_STAT_CODE
					 ,  '' AS ERR_CD
					 ,  '' AS ERR_MSG
					 ,  '' AS SEND_PNAME
					 ,  '' AS SEND_ERR_DESC
					 ,  '' AS SND_STAT
					 ,  '' AS RCV_VIEW_YN
					 ,  '' AS MAIL_SEQNO

					 ,  '' AS BROK_PRSN_NAME
					 ,  '' AS BROK_PRSN_EMAIL
					 ,  '' AS BROK_PRSN_PHONE
					 
					 ,  '' AS EX_DATE	
					 ,  NULL AS EX_NUM	
					 ,  '' AS AGREE_YN
					 ,  '' AS SEND_NAME
					 
				FROM                ATX110T     A  WITH (NOLOCK)
						INNER JOIN  BCM100T     C1 WITH (NOLOCK) ON C1.COMP_CODE    =  A.COMP_CODE
																AND C1.CUSTOM_CODE  =  A.CUSTOM_CODE
						LEFT  JOIN  BCM100T     C2 WITH (NOLOCK) ON C2.COMP_CODE    = C1.COMP_CODE
																AND C2.CUSTOM_CODE  = C1.MANAGE_CUSTOM
						LEFT  JOIN  BCM600T     P1 WITH (NOLOCK) ON P1.COMP_CODE    =  A.COMP_CODE
																AND P1.PJT_CODE     =  A.PJT_CODE
						LEFT  JOIN  BSA100T     M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
																AND M1.MAIN_CODE    =  N'B055'
																AND M1.SUB_CODE     = C1.AGENT_TYPE
						LEFT  JOIN  BSA100T     M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
																AND M2.MAIN_CODE    =  N'B056'
																AND M2.SUB_CODE     = C1.AREA_TYPE
						LEFT  JOIN  BSA100T     M3 WITH (NOLOCK) ON M3.COMP_CODE    =  A.COMP_CODE
																AND M3.MAIN_CODE    =  N'S096'
																AND M3.SUB_CODE     =  A.BILL_FLAG
						LEFT  JOIN  BSA100T     M4 WITH (NOLOCK) ON M4.COMP_CODE    =  A.COMP_CODE
																AND M4.MAIN_CODE    =  N'S095'
																AND M4.SUB_CODE     =  A.MODI_REASON
						LEFT  JOIN  BSA100T     M5 WITH (NOLOCK) ON M5.COMP_CODE    =  A.COMP_CODE
																AND M5.MAIN_CODE    =  N'S010'
																AND M5.SUB_CODE     =  A.SALE_PRSN
						LEFT  JOIN  BSA100T     M6 WITH (NOLOCK) ON M6.COMP_CODE    =  A.COMP_CODE
																AND M6.MAIN_CODE    =  N'S024'
																AND M6.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M7 WITH (NOLOCK) ON M7.COMP_CODE    =  A.COMP_CODE
																AND M7.MAIN_CODE    =  N'A022'
																AND M7.SUB_CODE     =  A.BILL_TYPE
						LEFT  JOIN  BSA100T     M8 WITH (NOLOCK) ON M8.COMP_CODE    =  A.COMP_CODE
																AND M8.MAIN_CODE    =  N'S119'
																AND M8.SUB_CODE     =  A.BILL_SEND_YN
				WHERE   A.COMP_CODE         =  #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">             
				AND     A.SALE_DIV_CODE     =  #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_FR)">             
				AND     A.BILL_DATE        &gt;=  #{DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_TO)">             
				AND     A.BILL_DATE        &lt;=  #{DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">             
				AND     A.SALE_PRSN         =  #{SALE_PRSN}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>		   
		   <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">                
				AND     CASE WHEN @RefItem = N'1' THEN C1.CUSTOM_NAME1
							 WHEN @RefItem = N'2' THEN C1.CUSTOM_NAME2
							 ELSE C1.CUSTOM_NAME
						END              LIKE '%' + #{CUSTOM_NAME} + '%'
		   </if>
		
		   <if test="AUTO_YN == &quot;Y&quot;">
			    AND     ISNULL(A.EX_DATE,'') != ''     /* 기표된 데이터만 리턴 */
		   </if>
		   <if test="AUTO_YN == &quot;N&quot;">
			    AND     ISNULL(A.EX_DATE,'')  = ''     /* 미기표된 데이터만 리턴 */
		   </if>
		    GROUP BY A.COMP_CODE
			
			/* 데이 조회 */
			SELECT  SEQ
				 ,  (SELECT COUNT(SEQ) FROM #ATX115SKR_TEMP WHERE SEQ = '0')        AS COUNT
				 ,  CUSTOM_CODE														AS ORI_CUSTOM_CODE
				 ,  BILL_DATE														AS ORI_BILL_DATE	
				 ,  CASE WHEN ISNULL(SEQ, '') = '2' THEN '고객계'
						 WHEN ISNULL(SEQ, '') = '3' THEN '총계'
						 ELSE CUSTOM_CODE
					END                                                             AS CUSTOM_CODE
					
				 ,  CUSTOM_FULL_NAME
				 ,  CUSTOM_NAME

				 ,  CASE WHEN ISNULL(SEQ, '') = '1' THEN '일자계'
						 WHEN ISNULL(SEQ, '') = '2' THEN ''
						 WHEN ISNULL(SEQ, '') = '3' THEN ''
						 ELSE BILL_DATE
					END                                                             AS BILL_DATE
				 ,  BILL_TYPE_CD
				 ,  BILL_TYPE_NM
				 ,  PUB_NUM
				 ,  SALE_LOC_AMT_I
				 ,  TAX_AMT_O
				 ,  TOT_SALE_LOC_AMT
				 ,  PUB_FR_DATE
				 ,  PUB_TO_DATE
				 ,  RECEIPT_PLAN_DATE
				 ,  AGENT_TYPE
				 ,  AREA_TYPE
				 ,  MANAGE_CUSTOM_CD
				 ,  MANAGE_CUSTOM_NM
				 ,  PROJECT_NO
				 ,  PJT_CODE
				 ,  PJT_NAME
				 ,  REMARK
				 ,  COMPANY_NUM1
				 ,  GUBUN
				 ,  DIV_CODE
				 ,  SORT
				 ,  SALE_DIV_CODE
				 ,  DEPT_NAME
				 ,  BILL_SEND_YN
				 ,  EB_NUM
				 ,  BILL_FLAG
				 ,  BILL_PUBLISH_TYPE
				 ,  MODI_REASON
				 ,  SALE_PRSN
				 ,  BEFORE_PUB_NUM
				 ,  ORIGINAL_PUB_NUM
				 ,  PLUS_MINUS_TYPE
				 ,  COMPANY_NUM
				 ,  SERVANT_COMPANY_NUM
				 ,  TOP_NAME
				 ,  ADDR
				 ,  COMP_CLASS
				 ,  COMP_TYPE
				 ,  RECEIVE_PRSN_NAME
				 ,  RECEIVE_PRSN_EMAIL
				 ,  RECEIVE_PRSN_TEL
				 ,  RECEIVE_PRSN_MOBL
				 
				 ,  ISSU_ID
				 ,  STAT_CODE
				 ,  REQ_STAT_CODE
				 ,  ERR_CD
				 ,  ERR_MSG
				 ,  SEND_PNAME
				 ,  SEND_ERR_DESC
				 ,  SND_STAT
				 ,  RCV_VIEW_YN
				 ,  MAIL_SEQNO

				 ,  BROK_PRSN_NAME
				 ,  BROK_PRSN_EMAIL
				 ,  BROK_PRSN_PHONE
					 
				 ,  EX_DATE	
				 ,  EX_NUM	
				 ,  AGREE_YN
				 ,  SEND_NAME

		 	  FROM  #ATX115SKR_TEMP
		   <if test="MIN_TOTAL == &quot;N&quot;">
		   	 WHERE  SEQ IN ('0', '3')
		   </if>
			 ORDER BY ORI_CUSTOM_CODE, ORI_BILL_DATE, SEQ
		
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	
	<select id="atx115skrServiceImpl.getLinkID" parameterType="Map" resultType="String">
	/* --atx115skr.Catx115skr[Atx115QStd] Query02 */
		SELECT CODE_NAME 
		  FROM BSA100T  WITH (NOLOCK)
		 WHERE MAIN_CODE = 'A125'
		   AND SUB_CODE  = '3'
		   AND COMP_CODE = #{S_COMP_CODE}
	</select>
</mapper>