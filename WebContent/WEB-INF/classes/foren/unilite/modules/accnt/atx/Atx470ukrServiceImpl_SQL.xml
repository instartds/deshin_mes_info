<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx470ukrServiceImpl">
	<select id="atx470ukrServiceImpl.selectListFirst" parameterType="Map" resultType="rMap">
		/* atx470ukrServiceImpl.selectListFirst */
		SELECT A.COMP_CODE
		     , A.FR_PUB_DATE
		     , A.TO_PUB_DATE
		     , A.DIV_CODE
		     , B.ADDR
		     , A.AMT_S1
		     , A.TAX_S1
		     , A.AMT_S2
		     , A.TAX_S2
		     , A.TAX_S1 + A.TAX_S2 AS SUM_TAX_SALES
		     , A.AMT_P1
		     , A.TAX_P1
		     , A.AMT_P2
		     , A.TAX_P2
		     , A.TAX_P1 + A.TAX_P2 AS SUM_TAX_PURCHASE
		     , A.AMT_T1
		     , A.AMT_T2
		     , A.AMT_I1
		     , A.AMT_I2
		     , A.SUM_TAX_REFUND
		     , A.REMARK1
		     , A.REMARK2
		  FROM       ATX470T A WITH(NOLOCK)
		  INNER JOIN BOR120T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                   AND B.DIV_CODE  = A.DIV_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE}
		 ORDER BY A.DIV_CODE 
	</select>

	<select id="atx470ukrServiceImpl.selectListPrint" parameterType="Map" resultType="rMap">
		/* atx470ukrServiceImpl.selectListPrint */
		SELECT A.COMP_CODE
		     , A.FR_PUB_DATE
		     , A.TO_PUB_DATE
		     , A.DIV_CODE
		     , B.DIV_NAME
		     , CASE WHEN ISNULL(B.COMPANY_NUM, '') = '' THEN ''
		            ELSE SUBSTRING(B.COMPANY_NUM,1,3) + '-' +
		                 SUBSTRING(B.COMPANY_NUM,4,2) + '-' +
		                 SUBSTRING(B.COMPANY_NUM,6,5)
		       END                                           AS COMPANY_NUM
		     , B.ADDR
		     , A.AMT_S1
		     , A.TAX_S1
		     , A.AMT_S2
		     , A.TAX_S2
		     , A.AMT_P1
		     , A.TAX_P1
		     , A.AMT_P2
		     , A.TAX_P2
		     , A.AMT_T1
		     , A.AMT_T2
		     , A.AMT_I1
		     , A.AMT_I2
		     , A.SUM_TAX_REFUND
		     , A.REMARK1
		     , A.REMARK2
		     , ISNULL(C.APP_NUM, '')                                                  AS APP_NUM
		     , SUBSTRING(#{FR_PUB_DATE}, 1, 4) + '년'
		     + ' 제' + CASE WHEN SUBSTRING(#{TO_PUB_DATE}, 5, 2) > '06' THEN '2'
		                    ELSE '1'
		               END + '기 ('
		     + SUBSTRING(#{FR_PUB_DATE}, 5, 2) + '월 ' + SUBSTRING(#{FR_PUB_DATE}, 7, 2) + '일 ~ '
		     + SUBSTRING(#{TO_PUB_DATE}, 5, 2) + '월 ' + SUBSTRING(#{TO_PUB_DATE}, 7, 2) + '일)'    AS REPORT_PERIOD
		  FROM       ATX470T A WITH(NOLOCK)
		  INNER JOIN BOR120T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                   AND B.DIV_CODE  = A.DIV_CODE
		  LEFT  JOIN ABA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE}
		 ORDER BY A.DIV_CODE 
	</select>

	<select id="atx470ukrServiceImpl.selectListSecond" parameterType="Map" resultType="rMap">
		/* atx470ukrServiceImpl.selectListSecond */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , D.ADDR
		     , #{FR_PUB_DATE}                                                                                                          AS FR_PUB_DATE
		     , #{TO_PUB_DATE}                                                                                                          AS TO_PUB_DATE
		     --매출세액
		     , SUM(CASE WHEN A.PROOF_KIND IN ('11', '14', '19', '25', '27', '32', '37'
		                                    , '13', '18', '22', '23', '24', '26', '36')  THEN ISNULL(A.SUPPLY_AMT_I, 0) ELSE 0 END)    AS AMT_S1
		     , SUM(CASE WHEN A.PROOF_KIND IN ('11', '14', '19', '25', '27', '32', '37'
		                                    , '13', '18', '22', '23', '24', '26', '36')  THEN ISNULL(A.TAX_AMT_I   , 0) ELSE 0 END)    AS TAX_S1
		     , SUM(CASE WHEN A.PROOF_KIND IN ('12', '17', '21', '30', '35', '40')        THEN ISNULL(A.SUPPLY_AMT_I, 0) ELSE 0 END)    AS AMT_S2
		     --매입세액
		     , SUM(CASE WHEN A.PROOF_KIND IN ('51', '52', '54', '55', '56', '61', '65'
		                                    , '70', '71')                                THEN ISNULL(A.SUPPLY_AMT_I, 0) ELSE 0 END)    AS AMT_P1
		     , SUM(CASE WHEN A.PROOF_KIND IN ('51', '52', '54', '55', '56', '61', '65'
		                                    , '70', '71')                                THEN ISNULL(A.TAX_AMT_I   , 0) ELSE 0 END)    AS TAX_P1
		     --의제 등
		     , SUM(CASE WHEN A.PROOF_KIND IN ('53', '62', '68', '69')                    THEN ISNULL(A.SUPPLY_AMT_I, 0)
		                WHEN A.PROOF_KIND IN ('54', '61', '70', '71')                    THEN ISNULL(A.SUPPLY_AMT_I, 0) * -1
		                ELSE 0 END)                                                                                                    AS AMT_P2
		     , SUM(CASE WHEN A.PROOF_KIND IN ('53', '62', '68', '69')                    THEN ISNULL(A.TAX_AMT_I   , 0)
		                WHEN A.PROOF_KIND IN ('54', '61', '70', '71')                    THEN ISNULL(A.TAX_AMT_I   , 0) * -1
		                ELSE 0 END)                                                                                                    AS TAX_P2
		     --합계
		     , SUM(CASE WHEN A.PROOF_KIND IN ('11', '14', '19', '25', '27', '32', '37')  THEN ISNULL(A.TAX_AMT_I   , 0)
		                WHEN A.PROOF_KIND IN ('13', '18', '22', '23', '24', '26', '36')  THEN ISNULL(A.TAX_AMT_I   , 0)
		                ELSE 0 END)                                                                                                    AS SUM_TAX_SALES
<!-- 20200722 수정: case에 중복된 '54', '61'은 1, 3행 양쪽에서 삭제 -->
		     , SUM(CASE WHEN A.PROOF_KIND IN ('51', '52', '55', '56', '65')              THEN ISNULL(A.TAX_AMT_I   , 0)
		                WHEN A.PROOF_KIND IN ('53', '62', '68', '69')                    THEN ISNULL(A.TAX_AMT_I   , 0)
		                WHEN A.PROOF_KIND IN ('70', '71')                                THEN ISNULL(A.TAX_AMT_I   , 0) * -1
		                ELSE 0 END)                                                                                                    AS SUM_TAX_PURCHASE
		     , 'N'                                                                                                                     AS SAVE_FLAG
		  FROM       ATX100T A WITH (NOLOCK)
		  INNER JOIN BOR120T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                    AND D.DIV_CODE  = A.DIV_CODE
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.PUB_DATE &gt;= #{FR_PUB_DATE}
		   AND A.PUB_DATE &lt;= #{TO_PUB_DATE}
		 GROUP BY A.COMP_CODE, A.DIV_CODE, D.ADDR
	</select>



	<insert id="atx470ukrServiceImpl.insertDetail" parameterType="Map">
		--1.변수 정의
		DECLARE @AMT_S1         NUMERIC(30, 6)
		      , @TAX_S1         NUMERIC(30, 6)
		      , @AMT_S2         NUMERIC(30, 6)
		      , @TAX_S2         NUMERIC(30, 6)
		      , @AMT_P1         NUMERIC(30, 6)
		      , @TAX_P1         NUMERIC(30, 6)
		      , @AMT_P2         NUMERIC(30, 6)
		      , @TAX_P2         NUMERIC(30, 6)
		      , @AMT_T1         NUMERIC(30, 6)
		      , @AMT_T2         NUMERIC(30, 6)
		      , @AMT_I1         NUMERIC(30, 6)
		      , @AMT_I2         NUMERIC(30, 6)
		      , @SUM_TAX_REFUND NUMERIC(30, 6)

		--2.변수값 SET
		SET     @AMT_S1         = #{AMT_S1}
		SET     @TAX_S1         = #{TAX_S1}
		SET     @AMT_S2         = #{AMT_S2}
		SET     @TAX_S2         = #{TAX_S2}
		SET     @AMT_P1         = #{AMT_P1}
		SET     @TAX_P1         = #{TAX_P1}
		SET     @AMT_P2         = #{AMT_P2}
		SET     @TAX_P2         = #{TAX_P2}
		SET     @AMT_T1         = #{AMT_T1}
		SET     @AMT_T2         = #{AMT_T2}
		SET     @AMT_I1         = #{AMT_I1}
		SET     @AMT_I2         = #{AMT_I2}
		SET     @SUM_TAX_REFUND = #{SUM_TAX_REFUND}

		--2.변수값 SET2
		SET     @AMT_S1         = ISNULL(@AMT_S1        , 0)
		SET     @TAX_S1         = ISNULL(@TAX_S1        , 0)
		SET     @AMT_S2         = ISNULL(@AMT_S2        , 0)
		SET     @TAX_S2         = ISNULL(@TAX_S2        , 0)
		SET     @AMT_P1         = ISNULL(@AMT_P1        , 0)
		SET     @TAX_P1         = ISNULL(@TAX_P1        , 0)
		SET     @AMT_P2         = ISNULL(@AMT_P2        , 0)
		SET     @TAX_P2         = ISNULL(@TAX_P2        , 0)
		SET     @AMT_T1         = ISNULL(@AMT_T1        , 0)
		SET     @AMT_T2         = ISNULL(@AMT_T2        , 0)
		SET     @AMT_I1         = ISNULL(@AMT_I1        , 0)
		SET     @AMT_I2         = ISNULL(@AMT_I2        , 0)
		SET     @SUM_TAX_REFUND = ISNULL(@SUM_TAX_REFUND, 0)

		INSERT INTO ATX470T(
		       COMP_CODE
		     , FR_PUB_DATE
		     , TO_PUB_DATE
		     , DIV_CODE
		     , AMT_S1
		     , TAX_S1
		     , AMT_S2
		     , TAX_S2
		     , AMT_P1
		     , TAX_P1
		     , AMT_P2
		     , TAX_P2
		     , AMT_T1
		     , AMT_T2
		     , AMT_I1
		     , AMT_I2
		     , SUM_TAX_REFUND
		     , REMARK1
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{FR_PUB_DATE}
		     , #{TO_PUB_DATE}
		     , #{DIV_CODE}
		     , @AMT_S1
		     , @TAX_S1
		     , @AMT_S2
		     , @TAX_S2
		     , @AMT_P1
		     , @TAX_P1
		     , @AMT_P2
		     , @TAX_P2
		     , @AMT_T1
		     , @AMT_T2
		     , @AMT_I1
		     , @AMT_I2
		     , @SUM_TAX_REFUND
		     , #{REMARK1}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="atx470ukrServiceImpl.updateDetail" parameterType="Map">
		/* atx470ukrServiceImpl.updateDetail */
		--1.변수 정의
		DECLARE @AMT_S1         NUMERIC(30, 6)
		      , @TAX_S1         NUMERIC(30, 6)
		      , @AMT_S2         NUMERIC(30, 6)
		      , @TAX_S2         NUMERIC(30, 6)
		      , @AMT_P1         NUMERIC(30, 6)
		      , @TAX_P1         NUMERIC(30, 6)
		      , @AMT_P2         NUMERIC(30, 6)
		      , @TAX_P2         NUMERIC(30, 6)
		      , @AMT_T1         NUMERIC(30, 6)
		      , @AMT_T2         NUMERIC(30, 6)
		      , @AMT_I1         NUMERIC(30, 6)
		      , @AMT_I2         NUMERIC(30, 6)
		      , @SUM_TAX_REFUND NUMERIC(30, 6)

		--2.변수값 SET
		SET     @AMT_S1         = #{AMT_S1}
		SET     @TAX_S1         = #{TAX_S1}
		SET     @AMT_S2         = #{AMT_S2}
		SET     @TAX_S2         = #{TAX_S2}
		SET     @AMT_P1         = #{AMT_P1}
		SET     @TAX_P1         = #{TAX_P1}
		SET     @AMT_P2         = #{AMT_P2}
		SET     @TAX_P2         = #{TAX_P2}
		SET     @AMT_T1         = #{AMT_T1}
		SET     @AMT_T2         = #{AMT_T2}
		SET     @AMT_I1         = #{AMT_I1}
		SET     @AMT_I2         = #{AMT_I2}
		SET     @SUM_TAX_REFUND = #{SUM_TAX_REFUND}

		--2.변수값 SET2
		SET     @AMT_S1         = ISNULL(@AMT_S1        , 0)
		SET     @TAX_S1         = ISNULL(@TAX_S1        , 0)
		SET     @AMT_S2         = ISNULL(@AMT_S2        , 0)
		SET     @TAX_S2         = ISNULL(@TAX_S2        , 0)
		SET     @AMT_P1         = ISNULL(@AMT_P1        , 0)
		SET     @TAX_P1         = ISNULL(@TAX_P1        , 0)
		SET     @AMT_P2         = ISNULL(@AMT_P2        , 0)
		SET     @TAX_P2         = ISNULL(@TAX_P2        , 0)
		SET     @AMT_T1         = ISNULL(@AMT_T1        , 0)
		SET     @AMT_T2         = ISNULL(@AMT_T2        , 0)
		SET     @AMT_I1         = ISNULL(@AMT_I1        , 0)
		SET     @AMT_I2         = ISNULL(@AMT_I2        , 0)
		SET     @SUM_TAX_REFUND = ISNULL(@SUM_TAX_REFUND, 0)

		UPDATE ATX470T
		   SET AMT_S1         = @AMT_S1
		     , TAX_S1         = @TAX_S1
		     , AMT_S2         = @AMT_S2
		     , TAX_S2         = @TAX_S2
		     , AMT_P1         = @AMT_P1
		     , TAX_P1         = @TAX_P1
		     , AMT_P2         = @AMT_P2
		     , TAX_P2         = @TAX_P2
		     , AMT_T1         = @AMT_T1
		     , AMT_T2         = @AMT_T2
		     , AMT_I1         = @AMT_I1
		     , AMT_I2         = @AMT_I2
		     , SUM_TAX_REFUND = @SUM_TAX_REFUND
		     , REMARK1        = #{REMARK1}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE   = #{S_COMP_CODE}
		  AND FR_PUB_DATE = #{FR_PUB_DATE}
		  AND TO_PUB_DATE = #{TO_PUB_DATE}
		  AND DIV_CODE    = #{DIV_CODE}
	</update>

	<update id="atx470ukrServiceImpl.deleteDetail" parameterType="Map">
		/* atx470ukrServiceImpl.deleteDetail */
		DELETE ATX470T
		WHERE COMP_CODE   = #{S_COMP_CODE}
		  AND FR_PUB_DATE = #{FR_PUB_DATE}
		  AND TO_PUB_DATE = #{TO_PUB_DATE}
		  AND DIV_CODE    = #{DIV_CODE}
	</update>

	<update id="atx470ukrServiceImpl.deleteDetailAll" parameterType="Map">
		/* atx470ukrServiceImpl.deleteDetailAll */
		DELETE ATX470T
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE}
	</update>
</mapper>