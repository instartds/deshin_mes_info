<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx170ukrServiceImpl">
	
	<select id="atx170ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* '웹캐시연계 */
		/* sBwrLangFld 다국어 설정은 일단 대기 */
	    BEGIN
	    
	            SET NOCOUNT ON
	            SET ARITHABORT ON
	    
			    SELECT 
		               CASE WHEN ISNULL(A.ERR_CD, '') = ''					 THEN M2.CODE_NAME
		               		WHEN A.ERR_CD != '000000' AND A.ERR_CD != 'SEND' THEN 'Error'
                            ELSE M2.CODE_NAME
	                   END                                                                      AS TRANSYN_NAME     /* -- 전송여부명		*/
	                 , CASE WHEN  (ISNULL(A.STAT_CODE, '') = '' AND A.BILL_SEND_YN = 'Y')   THEN '01'
	                 		ELSE  A.STAT_CODE
	                   END 			                                                            AS STAT_CODE        /* -- 상태				*/
	                 , M3.CODE_NAME	 /* sBwrLangFld */                                      	AS STS              /* -- 상태				*/
	                 , CONVERT(NVARCHAR, A.CRT_LOC)                                             AS CRT_LOC          /* -- 생성경로			*/
	                 , A.BILL_FLAG                                                              AS BILL_FLAG        /* -- 세금계산서구분	*/
	                 
	                 , CASE WHEN A.BILL_FLAG = '1' THEN ( CASE WHEN A.BILL_PUBLISH_TYPE = '3' THEN  /* 위수탁 */
				                 				                                                    CASE WHEN A.BILL_TYPE = '11' THEN '0103'					/* --과세	  */
												                                                         WHEN A.BILL_TYPE = '20' THEN '0303'					/* --면세	  */
												                                                         WHEN A.BILL_TYPE = '12' THEN '0105'					/* --영세율 */
												                                                    END

	                 										   ELSE /* --정상 */
				                                                      CASE WHEN A.BILL_TYPE = '11' THEN '0101'					/* --과세	  */
				                                                           WHEN A.BILL_TYPE = '20' THEN '0301'					/* --면세	  */
				                                                           WHEN A.BILL_TYPE = '12' THEN '0102'					/* --영세율 */
				                                                       END
				                                           END
	                                                    )
	                        WHEN A.BILL_FLAG = '2' THEN ( /* --수정 */														  
	                                                      CASE WHEN A.BILL_TYPE = '11' THEN '0201'					/* --과세		*/
	                                                           WHEN A.BILL_TYPE = '20' THEN '0401'					/* --면세		*/
	                                                           WHEN A.BILL_TYPE = '12' THEN '0202'					/* --영세율	*/
	                                                       END
	                                                    )
	                    END                                                                     AS TAX_TYPE         /* -- 세금계산서종류 */
	    
	                 , A.BILL_GUBUN                                                             AS POPS_CODE        /* -- 영수/청구 구분		*/
	                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE)                      AS REGS_DATE        /* -- 발행일				*/
	                 , C1.COMPANY_NUM                                                           AS SELR_CORP_NO     /* -- 공급자 사업자번호		*/
	                 , CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
	                                                               ELSE C1.DIV_FULL_NAME														
	                    END                                                                     AS SELR_CORP_NM     /* -- 공급자 업체명			*/
	                 , C1.SUB_DIV_NUM                                                           AS SELR_CODE        /* -- 공급자 종사업장번호	*/
	                 , C1.REPRE_NAME                                                            AS SELR_CEO         /* -- 공급자 대표자명		*/
	                 , C1.COMP_TYPE                                                             AS SELR_BUSS_CONS   /* -- 공급자 업태			*/
	                 , C1.COMP_CLASS                                                            AS SELR_BUSS_TYPE   /* -- 공급자 업종			*/
	                 , C1.ADDR                                                                  AS SELR_ADDR        /* -- 공급자 주소			*/
					 , CASE WHEN ISNULL(A.SEND_NAME, '') != ''  THEN A.SEND_NAME
															    ELSE (CASE WHEN ISNULL(E1.CODE_NAME, '') != '' THEN E1.CODE_NAME /* sBwrLangFld */ 
																											   ELSE ( CASE WHEN ISNULL(E2.CODE_NAME /* sBwrLangFld */ , '') != '' THEN E2.CODE_NAME /* sBwrLangFld */ 
																																												  ELSE ''
																													  END )
																      END)
	                                                           
	                   END                                                                      AS SELR_CHRG_NM     /* -- 공급자 담당자명	*/
	                 , CASE WHEN ISNULL(E3.TREE_NAME, '') != '' THEN E3.TREE_NAME
	                                                            ELSE ( CASE WHEN ISNULL(E4.TREE_NAME, '') != '' THEN E4.TREE_NAME
	                                                                                                            ELSE ''
	                                                                    END )
	                                                           
	                    END                                                                     AS SELR_CHRG_POST   /* -- 공급자 부서명	*/
	                 , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
	                                                            ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
	                                                                                                            ELSE C1.TELEPHON
	                                                                    END )
	                                                           
	                    END                                                                     AS SELR_CHRG_TEL    /* -- 공급자 전화번호	*/ 
	                 , CASE WHEN ISNULL(A.SEND_EMAIL, '') != '' THEN A.SEND_EMAIL
															    ELSE (CASE WHEN ISNULL(E1.REF_CODE7, '') != '' THEN E1.REF_CODE7
																											   ELSE ( CASE WHEN ISNULL(E2.REF_CODE7, '') != '' THEN E2.REF_CODE7
																													  										   ELSE C2.EMAIL
																													  END )
																	  END)
	                                                           
					   END                               										AS SELR_CHRG_EMAIL  /* -- 공급자 이메일주소	*/     
	                 , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
	                                                            ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
	                                                                                                            ELSE C1.HANDPHONE
	                                                                    END )
	                    END                                                                     AS SELR_CHRG_MOBL   /* -- 공급자 휴대폰번호	*/
	                 , A.CUSTOM_CODE                                                            AS CUSTOM_CODE      /* -- 고객코드	*/
	                 , C.CUSTOM_FULL_NAME                                                       AS BUYR_CORP_NM     /* -- 고객명	*/
	                 , CASE WHEN C.BUSINESS_TYPE = '3' THEN '02'													/* -- 주민등록번호	*/
	                                                   ELSE '01'													/* -- 사업자등록번호	*/
	                    END                                                                     AS BUYR_GB          /* -- 공급받는자구분코드	*/
	                 , (CASE WHEN C.BUSINESS_TYPE = '3' THEN unilite.fnCipherDecrypt(C.TOP_NUM, 'A')
	                                                    ELSE SUBSTRING(C.COMPANY_NUM,1,3)
	                                                        + '-' + SUBSTRING(C.COMPANY_NUM,4,2)                          
	                                                        + '-' + SUBSTRING(C.COMPANY_NUM,6,5)
	                    END)                    												AS BUYR_CORP_NO		/* -- 공급받는자 사업자번호 	*/
	                 , A.SERVANT_COMPANY_NUM                                                    AS BUYR_CODE        /* -- 공급받는자 종사업자번호	*/
	                 , M1.CODE_NAME /* sBwrLangFld */                                           AS BILLTYPENAME     /* -- 계산서유형	*/
	                 , Z.REMARK 																AS ISSUE_DETAILS
	                 , A.SALE_LOC_AMT_I                                                         AS CHRG_AMT         /* -- 공급가액	*/
	                 , A.TAX_AMT_O                                                              AS TAX_AMT          /* -- 세액	*/
	                 , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS TOTL_AMT         /* -- 합계	*/
	                 , C.TOP_NAME                                                               AS BUYR_CEO         /* -- 공급받는자 대표자명	*/
	                 , C.COMP_TYPE                                                              AS BUYR_BUSS_CONS   /* -- 공급받는자 업태	*/
	                 , C.COMP_CLASS                                                             AS BUYR_BUSS_TYPE   /* -- 공급받는자 업종	*/
	                 , ISNULL(C.ADDR1, '') + ISNULL(C.ADDR2, '')                                AS BUYR_ADDR        /* -- 공급받는자 주소	*/
	                 , A.PRSN_NAME																AS BUYR_CHRG_NM1    /* -- 전자문서담당자	*/
	                 , A.PRSN_PHONE                                                             AS BUYR_CHRG_TEL1	/* -- 전자문서전화번호	*/
	                 , A.PRSN_EMAIL                                                             AS BUYR_CHRG_EMAIL1 /* -- 전자문서E-MAIL		*/
	                 , (CASE WHEN ISNULL(A.PRSN_HANDPHONE  , '') = '' THEN (CASE WHEN ISNULL(C4.PRSN_NAME, '') = '' THEN ISNULL(C.HAND_PHON, C.TELEPHON)
					                                                             ELSE ISNULL(C4.HAND_PHON, C4.TELEPHONE_NUM1)
					                    									END)
	                         ELSE A.PRSN_HANDPHONE
	                    END)                                                                    AS BUYR_CHRG_MOBL1	/* -- 전자문서핸드폰	*/
	                 , C.BILL_PRSN2                                                             AS BUYR_CHRG_NM2     /* -- 전자문서담당자2		*/
	                 , C.HAND_PHON2                                                             AS BUYR_CHRG_MOBL2   /* -- 전자문서핸드폰2		*/
	                 , C.BILL_MAIL_ID2                                                          AS BUYR_CHRG_EMAIL2  /* -- 전자문서E-MAIL2		*/
				/* 수탁관련 데이터 */
					 , A.BROK_CUSTOM_CODE
					 , Z2.COMPANY_NUM															AS BROK_COMPANY_NUM
					 , Z2.TOP_NUM																AS BROK_TOP_NUM
					 , A.BROK_PRSN_NAME
					 , A.BROK_PRSN_EMAIL

	                 , B.SEND_LOG_TIME                                                          AS SEND_DATE         /* -- 전송일시			*/
	                 , A.EB_NUM                                                                 AS ISSU_SEQNO        /* -- 전자문서번호			*/
	                 , A.PUB_NUM                                                                AS SELR_MGR_ID3      /* -- 계산서번호			*/
	                 , ISNULL(A.REMARK, '')                                                     AS NOTE1             /* -- 비고				*/
	                 , ISNULL(A.MODI_REASON, '')                                                AS MODY_CODE         /* -- 수정코드			*/
	                 , CASE WHEN ISNULL(A.REQ_STAT_CODE, '') = '' THEN CASE WHEN A.BILL_FLAG = '2' THEN '06' ELSE '01' END
	                 											  ELSE A.REQ_STAT_CODE
	                   END 																		AS REQ_STAT_CODE	 /* -- 요청상태코드		   	*/
	                 , ISNULL(A.BILL_PUBLISH_TYPE,'')                                           AS BILL_PUBLISH_TYPE /* -- 정/역/수탁발행 구분	*/
<if test="ISSUE_GUBUN == &quot;2&quot;"> 
	                 , '2'					                                                 AS BILL_TYPE         /* -- 매출/매입구분		*/
</if>
<if test="ISSUE_GUBUN != &quot;2&quot;"> 
	                 , '1'					                                                 AS BILL_TYPE         /* -- 매출/매입구분		*/
</if>
	                 , ISNULL(E5.REF_CODE1, 'N')                                                AS SND_MAIL_YN       /* -- EMail발행요청유무	*/
	                 , ISNULL(E6.REF_CODE1, 'N')                                                AS SND_SMS_YN        /* -- SMS발행요청유무		*/
	                 , ISNULL(E7.REF_CODE1, 'N')                                                AS SND_FAX_YN        /* -- FAX발행요청유무		*/
	                 , A.COMP_CODE                                                              AS COMP_CODE         /* -- 법인코드            		*/
	                 , A.DIV_CODE                                                               AS DIV_CODE          /* -- 사업장코드			*/
	                 , A.SALE_DIV_CODE                                                          AS SALE_DIV_CODE     /* -- 사업장코드			*/
	                 , M3.REF_CODE1                                                             AS DEL_YN            /* -- 삭제가능여부			*/
	                 , ISNULL(A.MODI_REASON, '')                                                AS REPORT_AMEND_CD   /* -- 신고문서 수정사유코드	*/
	                 , A.BFO_ISSU_ID                                                            AS BFO_ISSU_ID       /* -- 당초승인번호			*/
	                 , A.ISSU_ID                                                                AS ISSU_ID           /* -- 국세청전송 일련번호		*/
					 , CASE WHEN ISNULL(A.ERR_MSG, '') = '' THEN
																	(CASE WHEN ISNULL((CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
										  													ELSE C1.DIV_FULL_NAME														
										  													END ), '') = '' 
																			OR ISNULL(C1.REPRE_NAME, '') = '' 												THEN '공급자 정보를 확인하세요.(업체명, 대표자명)'

																		  WHEN ISNULL(C.CUSTOM_NAME, '') = '' 
																		  	OR ISNULL(C.TOP_NAME, '') = '' 													THEN '공급 받는자 정보를 확인하세요.(업체명, 대표자명)'
																		  
																		  WHEN ISNULL((CASE WHEN ISNULL(A.PRSN_EMAIL,'') = '' THEN (CASE WHEN ISNULL(C4.PRSN_NAME, '') = '' THEN ISNULL(C.BILL_MAIL_ID, '')
																													  					ELSE ISNULL(C4.MAIL_ID, '')
																													  			   END)
																					   ELSE A.PRSN_EMAIL
																					   END), '') = ''														THEN '공급 받는자 정보를 확인하세요.(이메일주소)'
<if test="ISSUE_GUBUN == &quot;3&quot;"> 	--위수탁사업자체크로직 추가	   
																		  WHEN ISNULL(Z2.CUSTOM_NAME, '') = '' 
																		  	OR ISNULL(Z2.TOP_NAME, '') = '' 												THEN '수탁사업자 정보를 확인하세요.(업체명, 대표자명)'
																		  
																		  WHEN ISNULL((CASE WHEN ISNULL(A.BROK_PRSN_EMAIL,'') = '' THEN (CASE WHEN ISNULL(C5.PRSN_NAME, '') = '' THEN ISNULL(C.BILL_MAIL_ID, '')
																													  					ELSE ISNULL(C4.MAIL_ID, '')
																													  			   END)
																					   ELSE A.PRSN_EMAIL
																					   END), '') = ''														THEN '수탁사업자 정보를 확인하세요.(이메일주소)'
</if>
																		  ELSE ''
																	END )
							ELSE A.ERR_MSG
							END																	AS ERR_MSG           /* -- 에러메세지		*/
	                 , A.BEFORE_PUB_NUM																				 /* -- 수정전세금계산서번호	*/
	                 , A.ORIGINAL_PUB_NUM																			 /* -- 원본세금계산서번호		*/
	                 , A.PLUS_MINUS_TYPE																			 /* -- 계산서 구분('+','-')	*/
	                 , A.SEND_ERR_DESC                                                                               /* -- 전송 중 오류메시지   */
	                 , CASE WHEN A.PLUS_MINUS_TYPE = '-' THEN 1
	                                                     ELSE 2
	                    END                                                                     AS SEQ_GUBUN		 /* -- 순번정열			*/
	                  , A.SND_STAT
	                  , A.RCV_VIEW_YN
                      , C.BUSINESS_TYPE
	              FROM (
	                     /* -- 1.2 회계 세금계산서 테이블	*/
	                     SELECT  
	                            A.COMP_CODE
	                          , A.DIV_CODE
	                          , A.SALE_DIV_CODE
	                          , A.EB_NUM
	                          , A.BILL_DATE
	                          , A.CUSTOM_CODE
	                          , A.BILL_TYPE
	                          , A.BILL_SEND_YN
	                          , A.BILL_FLAG
	                          , A.SALE_LOC_AMT_I
	                          , A.TAX_AMT_O
	                          , A.PUB_NUM
	                          , A.MODI_REASON
	                          , A.REMARK
	                          , CASE WHEN A.BILL_GUBUN = '1' OR A.BILL_GUBUN = '01' THEN '01'
	                                 WHEN A.BILL_GUBUN = '2' OR A.BILL_GUBUN = '02' THEN '02'
	                             END                    AS BILL_GUBUN												/* -- 영수/청구 구분		*/
	                          , CONVERT(NVARCHAR, '3')  AS CRT_LOC													/* -- 생성경로		  	*/
	                          , ISNULL(A.SALE_PRSN, '') AS SALE_PRSN
	                          , A.BEFORE_PUB_NUM
	                          , A.ORIGINAL_PUB_NUM
	                          , A.PLUS_MINUS_TYPE
	                          , A.BFO_ISSU_ID
	                          , A.COMPANY_NUM
							  , A.SEND_NAME
							  , A.SEND_EMAIL
							  , A.SMS_CHECK
	                          , A.CUSTOM_NAME
	                          , A.TOP_NAME
	                          , A.ADDR
	                          , A.COMP_CLASS
	                          , A.COMP_TYPE
	                          , A.SERVANT_COMPANY_NUM
	                          , A.RECEIVE_PRSN_NAME
	                          , A.RECEIVE_PRSN_EMAIL
	                          , A.RECEIVE_PRSN_TEL
	                          , A.RECEIVE_PRSN_MOBL
							  , A.ISSU_ID
							  , A.ERR_MSG
							  , A.STAT_CODE
							  , A.REQ_STAT_CODE
							  , A.BILL_PUBLISH_TYPE
							  , A.ERR_CD
							  , A.SEND_ERR_DESC                                                                      /* -- 전송 중 오류메시지   */
			                  , A.PRSN_NAME	
			                  , A.PRSN_PHONE 
			                  , A.PRSN_EMAIL 
			                  , A.PRSN_HANDPHONE
			                  , A.SND_STAT
			                  , A.RCV_VIEW_YN
							  , A.BROK_CUSTOM_CODE
							  , A.BROK_PRSN_NAME
							  , A.BROK_PRSN_EMAIL
	                       FROM           ATX110T AS A WITH (NOLOCK)
	                            LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
	                                                                AND C.CUSTOM_CODE   = A.CUSTOM_CODE
	                            LEFT JOIN BCM100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE   = C.COMP_CODE                                    
	                                                                 AND C1.CUSTOM_CODE = C.MANAGE_CUSTOM
	
	                            /* --LEFT JOIN WEBCASH_DB. sETaxDBUser .ITIS_ISSU_MSTR AS D WITH(NOLOCK) ON D.ISSU_SEQNO = A.EB_NUM				--전자세금계산서 DB사용 안함 ATX110T에 컬럼 추가 */ 
	                            LEFT JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
	                                                                 AND M2.MAIN_CODE   = 'S099'
	                                                                 AND M2.SUB_CODE    = '3'
	                      WHERE
	                              A.COMP_CODE              = #{S_COMP_CODE}
	                        AND   A.BILL_DATE          &gt;= #{DATE_FR}
	                        AND   A.BILL_DATE          &lt;= #{DATE_TO}
	                        AND   A.PLUS_MINUS_TYPE        = N'+'
	                        AND   A.BILL_PUBLISH_TYPE      = #{ISSUE_GUBUN}
	                        AND ((ISNULL(A.AC_DATE, '') &gt; N'' AND M2.REF_CODE1 = 'Y') OR (M2.REF_CODE1 IS NULL OR M2.REF_CODE1  = 'N' OR M2.REF_CODE1 = ''))
							<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                     
							AND   A.SALE_DIV_CODE          = #{DIV_CODE} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(BILL_DATE_FR)">                     
							AND   A.BILL_DATE       &gt;= #{BILL_DATE_FR} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(BILL_DATE_TO)">                     
							AND   A.BILL_DATE       &lt;= #{BILL_DATE_TO} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                     
							AND   A.CUSTOM_CODE         = #{CUSTOM_CODE} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">                     
							AND   C.CUSTOM_NAME         = #{CUSTOM_NAME} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">                     
							AND   A.BILL_TYPE           = #{BILL_TYPE} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(BILL_STAT)">                     
							-- AND   D.BILL_STAT        = #{BILL_STAT} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">                     
							AND   A.BILL_SEND_YN        = #{BILL_SEND_YN} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(MANAGE_CUST_CD)">                     
							AND   C1.CUSTOM_CODE  LIKE    #{MANAGE_CUST_CD} +'%' 
							</if>
							<if test="@foren.Ognl@isNotEmpty(MANAGE_CUST_NM)">                     
							AND   C1.CUSTOM_NAME  LIKE '%'+ #{MANAGE_CUST_NM} +'%' 
							</if>
							<if test="@foren.Ognl@isNotEmpty(INSERT_DB_TIME_FR)">                     
							AND   CONVERT(VARCHAR(8), A.INSERT_DB_TIME, 112)    &gt;= #{INSERT_DB_TIME_FR} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(INSERT_DB_TIME_TO)">                     
							AND   CONVERT(VARCHAR(8), A.INSERT_DB_TIME, 112)    &lt;= #{INSERT_DB_TIME_TO} 
							</if>
							<if test="@foren.Ognl@isNotEmpty(REMARK)">                     
							AND   A.REMARK           LIKE %'+ #{REMARK} +'%' 
							</if>
	                    ) AS A
	                        LEFT JOIN (SELECT MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
	                                        , DIV_CODE
	                                        , EB_NUM
	                                        , BILL_DATE
	                                        , CUSTOM_CODE
	                                        , MAX(EB_STEP) AS EB_STEP 
	                                        , COMP_CODE
	                                     FROM STB200T WITH (NOLOCK)
	                                    WHERE COMP_CODE  = #{S_COMP_CODE}
										<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                     
										  AND DIV_CODE = #{DIV_CODE} 
										</if>
	                                      AND EB_STEP IN('1', '2')                                                                  
	                                 GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) AS B  ON B.COMP_CODE   = A.COMP_CODE
	                                                                                                    AND B.DIV_CODE    = A.DIV_CODE
	                                                                                                    AND B.EB_NUM      = A.EB_NUM
	                                                                                                    AND B.BILL_DATE   = A.BILL_DATE
	                                                                                                    AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                        
	                        LEFT JOIN ATX111T AS Z WITH (NOLOCK) ON Z.COMP_CODE   = A.COMP_CODE										/* 정/역/수탁발행 구분 JOIN */
																AND Z.DIV_CODE	  = A.DIV_CODE
																AND Z.PUB_NUM	  = A.PUB_NUM
																AND Z.SEQ		  = 1
	                        LEFT JOIN BCM100T AS Z2 WITH (NOLOCK)ON Z2.COMP_CODE  = A.COMP_CODE										/* 수탁 관련 데이터 JOIN */
																AND Z2.CUSTOM_CODE= A.BROK_CUSTOM_CODE
	                        LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                                            AND C.CUSTOM_CODE = A.CUSTOM_CODE
	                        /* --LEFT JOIN WEBCASH_DB. sETaxDBUser .ITIS_ISSU_MSTR AS D  ON D.ISSU_SEQNO  = A.EB_NUM				--전자세금계산서 DB사용 안함 ATX110T에 컬럼 추가 */
	                        LEFT JOIN BOR120T AS C1 WITH (NOLOCK)  ON C1.COMP_CODE   = A.COMP_CODE
	                                                           AND C1.DIV_CODE    = A.DIV_CODE
	                        LEFT JOIN BOR100T AS C2 WITH (NOLOCK)  ON C2.COMP_CODE   = A.COMP_CODE                          
	                        LEFT JOIN (SELECT A.COMP_CODE
	                                        , A.CUSTOM_CODE
	                                        , A.PRSN_NAME
	                                        , A.MAIL_ID
	                                        , A.HAND_PHON, A.TELEPHONE_NUM1
	                                     FROM            BCM120T AS A WITH(NOLOCK) 
	                                          INNER JOIN ( SELECT A.COMP_CODE
	                                                            , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
	                                                            , MIN(A.SEQ)         AS SEQ
	                                                         FROM BCM120T AS A WITH(NOLOCK)
	                                                        WHERE A.MAIN_BILL_YN ='Y'
	                                                          AND A.BILL_TYPE IN ('1','3')
	                                                        GROUP BY A.COMP_CODE, A.CUSTOM_CODE
	                                                     ) AS B ON B.COMP_CODE   = A.COMP_CODE
	                                                           AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                                                           AND B.SEQ         = A.SEQ
	                                   ) C4 ON C4.COMP_CODE   = A.COMP_CODE
	                                       AND C4.CUSTOM_CODE = A.CUSTOM_CODE
	                        LEFT JOIN (SELECT A.COMP_CODE
	                                        , A.CUSTOM_CODE
	                                        , A.PRSN_NAME
	                                        , A.MAIL_ID
	                                        , A.HAND_PHON, A.TELEPHONE_NUM1
	                                     FROM            BCM120T AS A WITH(NOLOCK) 
	                                          INNER JOIN ( SELECT A.COMP_CODE
	                                                            , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
	                                                            , MIN(A.SEQ)         AS SEQ
	                                                         FROM BCM120T AS A WITH(NOLOCK)
	                                                        WHERE A.MAIN_BILL_YN ='Y'
	                                                          AND A.BILL_TYPE IN ('1','3')
	                                                        GROUP BY A.COMP_CODE, A.CUSTOM_CODE
	                                                     ) AS B ON B.COMP_CODE   = A.COMP_CODE
	                                                           AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                                                           AND B.SEQ         = A.SEQ
	                                   ) C5 ON C5.COMP_CODE   = A.COMP_CODE
	                                       AND C5.CUSTOM_CODE = A.BROK_CUSTOM_CODE
	                        LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE   = A.COMP_CODE
	                                                           AND M1.MAIN_CODE   = 'B066'
	                                                           AND M1.SUB_CODE   != '$'
	                                                           AND M1.SUB_CODE    = CASE WHEN A.BILL_TYPE = '12' THEN '11'
	                                                                                                             ELSE A.BILL_TYPE
	                                                                                 END                        
	                        LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE   = A.COMP_CODE
	                                                           AND M2.MAIN_CODE   = 'B087'
	                                                           AND M2.SUB_CODE   != '$'
	                                                           AND M2.SUB_CODE    = A.BILL_SEND_YN
	                        LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
	                                                           AND M3.MAIN_CODE   = 'S080'
	                                                           AND M3.SUB_CODE   != '$'
	                                                           AND M3.SUB_CODE    = A.STAT_CODE                                       
	                        LEFT JOIN BSA100T AS M4 WITH (NOLOCK)  ON M4.COMP_CODE   = A.COMP_CODE
	                                                           AND M4.MAIN_CODE   = 'S081'
	                                                           AND M4.SUB_CODE   != '$'
	                                                           AND M4.SUB_CODE    = A.REQ_STAT_CODE          

	                        LEFT JOIN BSA100T AS E1 WITH (NOLOCK)  ON E1.COMP_CODE   = A.COMP_CODE
	                                                           AND E1.MAIN_CODE   = 'S010'
	                                                           AND E1.SUB_CODE   != '$'
	                                                           AND E1.SUB_CODE    = A.SALE_PRSN
	                        LEFT JOIN BSA100T AS E2 WITH (NOLOCK)  ON E2.COMP_CODE   = C.COMP_CODE
	                                                           AND E2.MAIN_CODE   = 'S010'
	                                                           AND E2.SUB_CODE   != '$'
	                                                           AND E2.SUB_CODE    = C.BUSI_PRSN
	                        LEFT JOIN BSA210T AS E3 WITH (NOLOCK)  ON E3.COMP_CODE   = E1.COMP_CODE
	                                                           AND E3.TREE_CODE   = E1.REF_CODE2
	                        LEFT JOIN BSA210T AS E4 WITH (NOLOCK)  ON E4.COMP_CODE   = E2.COMP_CODE
	                                                           AND E4.TREE_CODE   = E2.REF_CODE2 
	                        LEFT JOIN BSA100T AS E5 WITH (NOLOCK)  ON E5.COMP_CODE   = A.COMP_CODE
	                                                           AND E5.MAIN_CODE   = 'S083'
	                                                           AND E5.SUB_CODE   != '$'
	                                                           AND E5.SUB_CODE    = '01'
	                        LEFT JOIN BSA100T AS E6 WITH (NOLOCK)  ON E6.COMP_CODE   = A.COMP_CODE
	                                                           AND E6.MAIN_CODE   = 'S083'
	                                                           AND E6.SUB_CODE   != '$'
	                                                           AND E6.SUB_CODE    = '02'
	                        LEFT JOIN BSA100T AS E7 WITH (NOLOCK)  ON E7.COMP_CODE   = A.COMP_CODE
	                                                           AND E7.MAIN_CODE   = 'S083'
	                                                           AND E7.SUB_CODE   != '$'
	                                                           AND E7.SUB_CODE    = '03'
	             WHERE 1=1
				 <if test="@foren.Ognl@isNotEmpty(CRT_LOC)">
				   AND A.CRT_LOC = #{CRT_LOC}
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(SEND_LOG_TIME_FR)">
				   AND CONVERT(VARCHAR(8), B.SEND_LOG_TIME, 112)    &gt;= #{SEND_LOG_TIME_FR}
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(SEND_LOG_TIME_TO)">
				   AND CONVERT(VARCHAR(8), B.SEND_LOG_TIME, 112)    &lt;= #{SEND_LOG_TIME_TO}
				 </if>
	               AND ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0) != 0.0
	    
	             ORDER BY A.BILL_DATE, A.CUSTOM_CODE, SEQ_GUBUN
	    
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF
	    END
	</select>



	<!-- 전자문서번호(ISSU_SEQNO) 자동채번을 위한 로직 (일단 대기) -->
	<select id="atx170ukrServiceImpl.fnGetIssuSeqNo" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE    NVARCHAR(08)
	          , @PREFIX       NVARCHAR(03)
	          , @SYS_DATE     NVARCHAR(08)
	          , @ISSU_SEQNO   NVARCHAR(24)
		
		SET @COMP_CODE = 'MASTER'
		SET @DIV_CODE  = LEFT(@COMP_CODE, 3)
		SET @PREFIX    = 'ACC'
		SET @SYS_DATE = CONVERT(NVARCHAR(8),GETDATE(),112)
		
		EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, N'ATX110T', @PREFIX, @SYS_DATE, N'', @ISSU_SEQNO OUTPUT
		
		SELECT @ISSU_SEQNO
	</select>



	<!-- SP 호출 -->
	<!-- 전자세금계산서 전송 -->
	<insert id="atx170ukrServiceImpl.insertLogTable" parameterType="Map">
		INSERT INTO L_ATX170T
			(
			  KEY_VALUE
			, OPR_FLAG
			, ISSU_ID
			, STAT_CODE
			, STS
			, REQ_STAT_CODE
			, ERR_MSG
			, COMP_CODE
			, TRANSYN_NAME
			, CRT_LOC
			, BILL_FLAG
			, TAX_TYPE
			, POPS_CODE
			, REGS_DATE
			, SELR_CORP_NO
			, SELR_CORP_NM
			, SELR_CODE
			, SELR_CEO
			, SELR_BUSS_CONS
			, SELR_BUSS_TYPE
			, SELR_ADDR
			, SELR_CHRG_NM
			, SELR_CHRG_POST
			, SELR_CHRG_TEL
			, SELR_CHRG_EMAIL
			, SELR_CHRG_MOBL
			, CUSTOM_CODE
			, BUYR_CORP_NM
			, BUYR_GB
			, BUYR_CORP_NO
			, BUYR_CODE
			, BILLTYPENAME
			, ISSUE_DETAILS
			, CHRG_AMT
			, TAX_AMT
			, TOTL_AMT
			, BUYR_CEO
			, BUYR_BUSS_CONS
			, BUYR_BUSS_TYPE
			, BUYR_ADDR
			, BUYR_CHRG_NM1
			, BUYR_CHRG_TEL1
			, BUYR_CHRG_MOBL1
			, BUYR_CHRG_EMAIL1
			, BUYR_CHRG_NM2
			, BUYR_CHRG_MOBL2
			, BUYR_CHRG_EMAIL2
			, BROK_CUSTOM_CODE
			, BROK_COMPANY_NUM
			, BROK_TOP_NUM
			, BROK_PRSN_NAME
			, BROK_PRSN_EMAIL
			, ISSU_SEQNO
			, SELR_MGR_ID3
			, NOTE1
			, MODY_CODE
			, BILL_PUBLISH_TYPE
			, BILL_TYPE
			, SND_MAIL_YN
			, SND_SMS_YN
			, SND_FAX_YN
			, DIV_CODE
			, SALE_DIV_CODE
			, DEL_YN
			, REPORT_AMEND_CD
			, BFO_ISSU_ID
			, BEFORE_PUB_NUM
			, ORIGINAL_PUB_NUM
			, PLUS_MINUS_TYPE
			, SEQ_GUBUN
			, INSERT_DB_USER
			, INSERT_DB_TIME
			)
		VALUES
			(
			  #{KEY_VALUE}
			, #{OPR_FLAG}
			, #{ISSU_ID}
			, #{STAT_CODE}
			, #{STS}
			, #{REQ_STAT_CODE}
			, #{ERR_MSG}
			, #{S_COMP_CODE}
			, #{TRANSYN_NAME}
			, #{CRT_LOC}
			, #{BILL_FLAG}
			, #{TAX_TYPE}
			, #{POPS_CODE}
			, REPLACE(#{REGS_DATE}, '.','')
			, REPLACE(#{SELR_CORP_NO}, '-','')
			, #{SELR_CORP_NM}
			, #{SELR_CODE}
			, #{SELR_CEO}
			, #{SELR_BUSS_CONS}
			, #{SELR_BUSS_TYPE}
			, #{SELR_ADDR}
			, #{SELR_CHRG_NM}
			, #{SELR_CHRG_POST}
			, REPLACE(#{SELR_CHRG_TEL}, '-','')
			, #{SELR_CHRG_EMAIL}
			, REPLACE(#{SELR_CHRG_MOBL}, '-','')
			, #{CUSTOM_CODE}
			, #{BUYR_CORP_NM}
			, #{BUYR_GB}
			, REPLACE(#{BUYR_CORP_NO}, '-','')
			, #{BUYR_CODE}
			, #{BILLTYPENAME}
			, #{ISSUE_DETAILS}
			, #{CHRG_AMT}
			, #{TAX_AMT}
			, #{TOTL_AMT}
			, #{BUYR_CEO}
			, #{BUYR_BUSS_CONS}
			, #{BUYR_BUSS_TYPE}
			, #{BUYR_ADDR}
			, #{BUYR_CHRG_NM1}
			, REPLACE(#{BUYR_CHRG_TEL1}, '-','')
			, REPLACE(#{BUYR_CHRG_MOBL1}, '-','')
			, #{BUYR_CHRG_EMAIL1}
			, #{BUYR_CHRG_NM2}
			, REPLACE(#{BUYR_CHRG_MOBL2}, '-','')
			, #{BUYR_CHRG_EMAIL2}
			, #{BROK_CUSTOM_CODE}
			, REPLACE(#{BROK_COMPANY_NUM}, '-','')
			, unilite.fnCipherEncrypt(#{BROK_TOP_NUM}, '')
			, #{BROK_PRSN_NAME}
			, #{BROK_PRSN_EMAIL}
			, #{ISSU_SEQNO}
			, #{SELR_MGR_ID3}
			, #{NOTE1}
			, #{MODY_CODE}
			, #{BILL_PUBLISH_TYPE}
			, #{BILL_TYPE}
			, #{SND_MAIL_YN}
			, #{SND_SMS_YN}
			, #{SND_FAX_YN}
			, #{DIV_CODE}
			, #{SALE_DIV_CODE}
			, #{DEL_YN}
			, #{REPORT_AMEND_CD}
			, #{BFO_ISSU_ID}
			, #{BEFORE_PUB_NUM}
			, #{ORIGINAL_PUB_NUM}
			, #{PLUS_MINUS_TYPE}
			, #{SEQ_GUBUN}
			, #{S_USER_ID}
			, GETDATE()        
			)
	</insert>

	<update id="atx170ukrServiceImpl.forReSendEtax" parameterType="Map">
        UPDATE ATX110T
           SET BILL_SEND_YN       = 'N'
             , EB_NUM             = NULL
         WHERE COMP_CODE          = #{S_COMP_CODE}
           AND DIV_CODE           = #{DIV_CODE}
           AND PUB_NUM            = #{SELR_MGR_ID3}
	</update>

	<update id="atx170ukrServiceImpl.runProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_ATX170UKR_fnSend  (
			#{COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG2		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG3		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LANG_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String} 
		)}
	</update>
	
	<!-- 이메일 재전송 -->
	<insert id="atx170ukrServiceImpl.insertMailLogTable" parameterType="Map">
		INSERT INTO L_ATX171T
			(
		      KEY_VALUE          
		    , COMP_CODE          
		    , ISSU_SEQNO         
		    , BUYR_CHRG_EMAIL1   
	 	    , INSERT_DB_USER     
	 	    , INSERT_DB_TIME     
			)
		VALUES
			(
			  #{KEY_VALUE}
		    , #{S_COMP_CODE}          
		    , #{ISSU_SEQNO}  
		    , #{BUYR_CHRG_EMAIL1}   
			, #{S_USER_ID}
			, GETDATE()        
			)
	</insert>

	<update id="atx170ukrServiceImpl.runMailProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_ATX170UKR_fnReSend (
			#{COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LANG_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String} 
		)}
	</update>
	
	
	
    <select id="atx170ukrServiceImpl.getItisIssuUrl" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisIssuUrl */
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'etax_issu_url'
      AND MAIN_CODE = 'B609'
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'accnt_atx170_url'
      AND MAIN_CODE = 'B609' 
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'etax_issu_url2'
      AND MAIN_CODE = 'B609'
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'accnt_atx170_url2'
      AND MAIN_CODE = 'B609' 
    </select>
    
    <select id="atx170ukrServiceImpl.getItisIssu" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisIssu */
    SELECT DISTINCT ISSU_SEQNO AS ISSU_SEQNO
      FROM L_ITIS_ISSU_MSTR A  WITH (NOLOCK)
     WHERE KEY_VALUE = #{KEY_VALUE}
    </select>
    
    <select id="atx170ukrServiceImpl.getItisIssuMstr" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisIssuMstr */
    SELECT #{COMP_CODE} COMP_CODE
           ,'FAB' APP_ID        -- 회계
           , 'Y' PUSH_YN
           , '1' PUSH_TYPE
           , #{PUSH_URL1} PUSH_URL1
           , #{PUSH_URL2} PUSH_URL2
           ,  A.*
           , 'I' STATUS
      FROM L_ITIS_ISSU_MSTR A  WITH (NOLOCK)
     WHERE ISSU_SEQNO = #{ISSU_SEQNO}
    </select>
    
    <select id="atx170ukrServiceImpl.getItisIssuDetail" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisIssuDetail */
    SELECT  #{COMP_CODE} COMP_CODE
           ,'FAB' APP_ID        -- 회계
           , A.*
           , 'I' STATUS
      FROM L_ITIS_ISSU_DETAIL A  WITH (NOLOCK)
     WHERE ISSU_SEQNO = #{ISSU_SEQNO}
    </select>
    
    
    
    <select id="atx170ukrServiceImpl.getItisMailUrl" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisMailUrl */
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'etax_email_url'
      AND MAIN_CODE = 'B609'
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'accnt_atx170_url'
      AND MAIN_CODE = 'B609' 
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'etax_email_url2'
      AND MAIN_CODE = 'B609'
    UNION ALL
    SELECT CODE_NAME
      FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE    = 'MASTER'
      AND SUB_CODE     = 'accnt_atx170_url2'
      AND MAIN_CODE = 'B609' 
    </select>

    <select id="atx170ukrServiceImpl.getItisBizMail" parameterType="Map" resultType="rMap">
    /* atx170ukrServiceImpl.getItisBizMail */
    SELECT  #{COMP_CODE} COMP_CODE
           ,'FAB' APP_ID        -- 회계
           , 'Y' PUSH_YN
           , '1' PUSH_TYPE
           , #{PUSH_URL1} PUSH_URL1
           , #{PUSH_URL2} PUSH_URL2
           , A.*
           , 'I' STATUS
      FROM L_ITIS_BIZ_MAIL A  WITH (NOLOCK)
     WHERE KEY_VALUE = #{KEY_VALUE}
    </select>
    
    <update id="atx170ukrServiceImpl.updtAtx170err" parameterType="Map">
    /* atx170ukrServiceImpl.updtAtx170err */
    BEGIN
        SET NOCOUNT    ON
        SET ARITHABORT ON
    
        DECLARE @PUB_NUM         NVARCHAR(20)
        
        SELECT @PUB_NUM = PUB_NUM
          FROM L_ITIS_ISSU_MSTR  WITH (NOLOCK)
         WHERE ISSU_SEQNO = #{ISSU_SEQNO}
        
        UPDATE ATX110T SET
               BILL_SEND_YN   = #{BILL_SEND_YN}
             , EB_NUM         = #{EB_NUM}
             , SEND_ERR_DESC  = #{SEND_ERR_DESC}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = getdate()
         WHERE PUB_NUM = @PUB_NUM
            
        SET NOCOUNT    OFF
        SET ARITHABORT OFF
    END
    </update>
    
	<!-- 필요없을 시 삭제 -->
	<select id="atx170ukrServiceImpl.getGsBillYN" parameterType="Map" resultType="rMap">
		SELECT TOP 1
			   ISNULL(SUB_CODE , '01'  )  AS SUB_CODE
			 , ISNULL(REF_CODE4, 'NAME')  AS REF_CODE4
			 , ISNULL(REF_CODE5, 'N'   )  AS REF_CODE5
			 , ISNULL(REF_CODE6, 'N'   )  AS REF_CODE6
			 , ISNULL(REF_CODE7, ''    )  AS REF_CODE7
			 , ISNULL(REF_CODE8, '8'   )  AS REF_CODE8
			 , ISNULL(REF_CODE9, 'N'   )  AS REF_CODE9
		  FROM BSA100T  WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = N'S084'
		   AND SUB_CODE != N'$'
		   AND REF_CODE1 = N'Y'
	</select>
</mapper>