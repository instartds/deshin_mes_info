<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx400ukrServiceImpl">
	<select id="atx400ukrServiceImpl.selectBor120TList" parameterType="Map" resultType="rMap">
	SELECT ISNULL(D.DIV_FULL_NAME,'')      AS COMP_NAME  
	     , ISNULL(D.COMPANY_NUM, '')       AS COMPANY_NUM  
	     , ISNULL(D.REPRE_NAME,'')         AS REPRE_NAME 
	     , (SELECT COMP_OWN_NO 
	          FROM BOR100T  WITH (NOLOCK)
	         WHERE COMP_CODE = D.COMP_CODE) AS COMP_OWN_NO 
	     , ISNULL(D.COMP_CLASS, '')         AS COMP_CLASS 
	     , ISNULL(D.COMP_TYPE, '')          AS COMP_TYPE 
	     , ISNULL(D.ADDR,'')                AS ADDR 
	     , ISNULL(D.SAFFER_TAX_NM, '')      AS SAFFER_TAX_NM 
	     , #{FN_DATE}     AS FN_DATE 
	     , #{TO_DATE}     AS TO_DATE 
	  FROM BOR120T D  WITH (NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
   		AND D.DIV_CODE = #{BILL_DIV_CODE}
	</select>
					
	
<select id="atx400ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
--atx400ukr.CAtx400UKR[fnatx400q] 과세월수는 무조건 3개월이 아니라 입주일, 퇴거일에 기준하여 구한다
SELECT FR_PUB_DATE  
     , TO_PUB_DATE  
     , CONVERT(NVARCHAR(8), BILL_DIV_CODE) AS BILL_DIV_CODE  
     , CONVERT(NUMERIC(5,0), SEQ)          AS SEQ 
     , CONVERT(NVARCHAR(30), DONG)         AS DONG 
     , CONVERT(NVARCHAR(1),  UP_UNDER)     AS UP_UNDER 
     , CONVERT(NVARCHAR(10), UP_FLOOR)     AS UP_FLOOR 
     , CONVERT(NVARCHAR(10), HOUSE)        AS HOUSE 
     , CONVERT(NUMERIC(30,6), AREA)        AS AREA 
     , CONVERT(NVARCHAR(8), HIRE_CUST_CD)  AS HIRE_CUST_CD 
     , CONVERT(NVARCHAR(20), (SELECT CUSTOM_NAME 
                                FROM BCM100T   WITH (NOLOCK)
                               WHERE COMP_CODE   = A.COMP_CODE
                                 AND CUSTOM_CODE = A.HIRE_CUST_CD)) AS HIRE_CUST_NM 
     , CONVERT(NVARCHAR(14), (SELECT CASE  WHEN (ISNULL(BUSINESS_TYPE,'') = '2' OR ISNULL(BUSINESS_TYPE,'') = '3') AND ISNULL(COMPANY_NUM,'') = '' 
                                           THEN unilite.fnCipherDecrypt(TOP_NUM, 'A')
                                           ELSE (SUBSTRING(COMPANY_NUM,1,3) + '-' + SUBSTRING(COMPANY_NUM,4,2) + '-' + SUBSTRING(COMPANY_NUM,6,5)) 
                                      END
                                FROM BCM100T  WITH (NOLOCK)
                               WHERE COMP_CODE   = A.COMP_CODE
                                 AND CUSTOM_CODE = A.HIRE_CUST_CD)) COMPANY_NUM
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, MOVE_IN_DATE) AS MOVE_IN_DATE 
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, UPDATE_DATE)  AS UPDATE_DATE 
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, LEAVING_DATE) AS LEAVING_DATE 
     , CONVERT(NUMERIC(30,6), GUARANTY)            AS GUARANTY 
     , CONVERT(NUMERIC(30,6), MONTHLY_RENT)        AS MONTHLY_RENT 
     , CONVERT(NUMERIC(30,6), ISNULL(INTEREST, 0) + (ISNULL(MONTHLY_TOTAL,0))) AS TOTAL 
     , CONVERT(NUMERIC(30,6), ISNULL(INTEREST, 0)) AS INTEREST 
     , CONVERT(NUMERIC(30,6), ISNULL(MONTHLY_TOTAL, 0)) AS MONTHLY_TOTAL 
     , CONVERT(NUMERIC(5,0), CASE WHEN SORT_ORDER=99999 
                                  THEN NULL 
                                  ELSE SORT_ORDER 
                             END)                  AS SORT_ORDER 
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     , 'A'								AS FLAG
  FROM ATX400T A  WITH (NOLOCK)
 WHERE COMP_CODE     = #{S_COMP_CODE}
   AND FR_PUB_DATE   &gt;= #{FR_PUB_DATE}
   AND TO_PUB_DATE   &lt;= #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
 ORDER BY FR_PUB_DATE, TO_PUB_DATE, BILL_DIV_CODE, SORT_ORDER, HIRE_CUST_CD, UP_UNDER, UP_FLOOR, HOUSE
</select>

<select id="atx400ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
--atx400ukr.CAtx400UKR[fnatx400q] ATX400T 합계 조회 : 출력물에서 이용
SELECT CONVERT(NUMERIC(30,6), SUM(AREA))                     AS AREA_TOT 
     , CONVERT(NUMERIC(30,6), SUM(GUARANTY))                 AS GUARANTY_TOT 
     , CONVERT(NUMERIC(30,6), SUM(MONTHLY_RENT))             AS MONTHLY_RENT_TOT 
     , CONVERT(NUMERIC(30,6), SUM(ISNULL(INTEREST, 0) + (ISNULL(MONTHLY_TOTAL,0)))) AS TOTAL_TOT 
     , CONVERT(NUMERIC(30,6), SUM(ISNULL(INTEREST, 0)))      AS INTEREST_TOT 
     , CONVERT(NUMERIC(30,6), SUM(ISNULL(MONTHLY_TOTAL, 0))) AS MONTHLY_TOTAL_TOT
  FROM ATX400T A  WITH (NOLOCK)
 WHERE COMP_CODE     = #{S_COMP_CODE}
   AND FR_PUB_DATE   &gt;= #{FR_PUB_DATE}
   AND TO_PUB_DATE   &lt;= #{TO_PUB_DATE} 
   AND BILL_DIV_CODE = #{BILL_DIV_CODE} 
</select>

<select id="atx400ukrServiceImpl.fnGetInterestRate" parameterType="Map" resultType="rMap">
--atx400ukrServiceImpl.fnGetInterestRate
SELECT INTEREST_RATE
  FROM ATX411T A  WITH (NOLOCK)
 WHERE COMP_CODE  = #{S_COMP_CODE}
   AND APPLY_DATE = (SELECT MAX(APPLY_DATE) 
                       FROM ATX411T 
                      WHERE COMP_CODE   = A.COMP_CODE 
                        AND APPLY_DATE &lt;= GETDATE())
</select>

<select id="atx400ukrServiceImpl.selectList4" parameterType="Map" resultType="rMap">
--atx400ukr.CAtx400UKR[fnatx400q] 해당 레코드셋의 데이터들을 이용하여 보증금이자를 계산
DECLARE @FR_PUB_DATE    NVARCHAR(08)
      , @TO_PUB_DATE    NVARCHAR(08)
      , @COMP_CODE      NVARCHAR(08)
      , @BILL_DIV_CODE  NVARCHAR(08)
      
      , @FR_PUB_DATE_CALC    NVARCHAR(08)
      , @TO_PUB_DATE_CALC    NVARCHAR(08)
      , @INTEREST_RATE  NUMERIC(30,6)

SET     @FR_PUB_DATE    = #{FR_PUB_DATE}
SET     @TO_PUB_DATE    = #{TO_PUB_DATE}
SET     @COMP_CODE      = #{S_COMP_CODE}
SET     @BILL_DIV_CODE  = #{BILL_DIV_CODE}

SET 	@FR_PUB_DATE_CALC = SUBSTRING(@FR_PUB_DATE,1,4) + '0101'
SET 	@TO_PUB_DATE_CALC = SUBSTRING(@TO_PUB_DATE,1,4) + '1231'
SET     @INTEREST_RATE  = CONVERT(NUMERIC(30, 6), ISNULL(NULLIF('${INTEREST_RATE}', ''), 0)) * 0.01




SELECT CONVERT(NVARCHAR(8), @FR_PUB_DATE)                          AS FR_PUB_DATE  
     , CONVERT(NVARCHAR(8), @TO_PUB_DATE)                          AS TO_PUB_DATE  
     , CONVERT(NVARCHAR(8), @BILL_DIV_CODE)                        AS BILL_DIV_CODE  
     , CONVERT(NUMERIC(5,0), SEQ)                                  AS SEQ 
     , CONVERT(NVARCHAR(30), DONG)                                 AS DONG 
     , CONVERT(NVARCHAR(1),  UP_UNDER)                             AS UP_UNDER 
     , CONVERT(NVARCHAR(10), UP_FLOOR)                             AS UP_FLOOR 
     , CONVERT(NVARCHAR(10), HOUSE)                                AS HOUSE 
     , CONVERT(NUMERIC(30,6),AREA)                                 AS AREA 
     , CONVERT(NVARCHAR(8),  HIRE_CUST_CD)                         AS HIRE_CUST_CD 
     , CONVERT(NVARCHAR(20), (SELECT CUSTOM_NAME  
                                FROM BCM100T   WITH (NOLOCK)
                               WHERE COMP_CODE   = A.COMP_CODE
                                 AND CUSTOM_CODE = A.HIRE_CUST_CD)) AS HIRE_CUST_NM
     , CONVERT(NVARCHAR(14), (SELECT CASE WHEN (ISNULL(BUSINESS_TYPE,'') = '2' OR ISNULL(BUSINESS_TYPE,'') = '3') and ISNULL(COMPANY_NUM,'') = ''
                                          THEN uniLITE.fnCipherDecrypt(TOP_NUM, 'A')
                                          ELSE (SUBSTRING(COMPANY_NUM,1,3) + '-' + SUBSTRING(COMPANY_NUM,4,2) + '-' + SUBSTRING(COMPANY_NUM,6,5))
                                      END
                                FROM BCM100T  WITH (NOLOCK)
                               WHERE COMP_CODE   = A.COMP_CODE
                                 AND CUSTOM_CODE = A.HIRE_CUST_CD))                 AS COMPANY_NUM 
     , CASE WHEN START_DATE &lt; @FR_PUB_DATE THEN '' 
                 ELSE unilite.fnGetUserDateComp(@COMP_CODE, START_DATE)
        END                                                        AS MOVE_IN_DATE 
     , CASE WHEN UPDATE_DATE &gt;= @FR_PUB_DATE AND UPDATE_DATE &lt;= @TO_PUB_DATE
                 THEN unilite.fnGetUserDateComp(@COMP_CODE, UPDATE_DATE)
            ELSE ''
        END                                                        AS UPDATE_DATE
     , CASE WHEN END_DATE &gt; @TO_PUB_DATE THEN '' 
                 ELSE unilite.fnGetUserDateComp(@COMP_CODE, END_DATE)
        END                                                        AS LEAVING_DATE 
     , CONVERT(NUMERIC(30,6), GUARANTY)                            AS GUARANTY  
     , CONVERT(NUMERIC(30,6), (ISNULL(A.MONTHLY_RENT,0) + ISNULL(A.MANAGE_MONEY,0))) AS MONTHLY_RENT  
     , CONVERT(NUMERIC(30,6), ((ISNULL(A.MONTHLY_RENT,0) + ISNULL(A.MANAGE_MONEY,0) + ISNULL(A.MONTHLY_TOTAL,0)) * (datediff(mm, convert(datetime, case when @FR_PUB_DATE &lt; start_date then start_date else @FR_PUB_DATE end) , convert(datetime, case when @TO_PUB_DATE &gt; end_date then end_date else @TO_PUB_DATE end)) + 1)) + Round((isnull(a.guaranty,0) * @INTEREST_RATE * (datediff(dd, convert(datetime, case when @FR_PUB_DATE &lt; start_date then start_date else @FR_PUB_DATE end) , convert(datetime, case when @TO_PUB_DATE &gt; end_date then end_date else @TO_PUB_DATE end)) + 1) / (DateDiff(d, @FR_PUB_DATE_CALC, @TO_PUB_DATE_CALC) + 1)),0,1)) AS TOTAL 
     , CONVERT(NUMERIC(30,6), Round((isnull(a.guaranty,0) * @INTEREST_RATE * (datediff(dd, convert(datetime, case when @FR_PUB_DATE &lt; start_date then start_date else @FR_PUB_DATE end) , convert(datetime, case when @TO_PUB_DATE &gt; end_date then end_date else @TO_PUB_DATE end)) + 1) / (DateDiff(d, @FR_PUB_DATE_CALC, @TO_PUB_DATE_CALC) + 1)),0,1))                   AS INTEREST 
     , CONVERT(NUMERIC(30,6), (ISNULL(A.MONTHLY_RENT,0) + ISNULL(A.MANAGE_MONEY,0) + ISNULL(A.MONTHLY_TOTAL,0)) * (datediff(mm, convert(datetime, case when @FR_PUB_DATE &lt; start_date then start_date else @FR_PUB_DATE end) , convert(datetime, case when @TO_PUB_DATE &gt; end_date then end_date else @TO_PUB_DATE end)) + 1)) AS MONTHLY_TOTAL 
     , CONVERT(NUMERIC(5,0), NULL)                                 AS SORT_ORDER 
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     , 'N'								AS FLAG
  FROM ATX410T A  WITH (NOLOCK)
 WHERE COMP_CODE = @COMP_CODE
   AND ((ISNULL(START_DATE, '') = '') OR
        (ISNULL(END_DATE  , '') = '') OR
        (START_DATE &lt;= @FR_PUB_DATE AND END_DATE   &gt;= @TO_PUB_DATE) OR
        (START_DATE &gt;= @FR_PUB_DATE AND START_DATE &lt;= @TO_PUB_DATE) OR
        (END_DATE   &gt;= @FR_PUB_DATE AND END_DATE   &lt;= @TO_PUB_DATE) OR
        (START_DATE &gt;= @FR_PUB_DATE AND END_DATE   &lt;= @TO_PUB_DATE))
   AND A.BILL_DIV_CODE = @BILL_DIV_CODE
 ORDER BY UP_UNDER, UP_FLOOR, HOUSE
</select>


<select id="atx400ukrServiceImpl.selectInterestRate" parameterType="Map" resultType="rMap">
--UAtx02Krv.CAtx411PKR Setatx411[fnatx411q] 
SELECT INTEREST_RATE
     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, APPLY_DATE) AS APPLY_DATE
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
  FROM ATX411T   WITH (NOLOCK)
 WHERE COMP_CODE = #{S_COMP_CODE}	
</select>

<insert id="atx400ukrServiceImpl.insertDetail" parameterType="Map">   
--atx400ukr.CAtx400UKR[fnatx400Set] N/D
INSERT INTO ATX400T
     ( FR_PUB_DATE
     , TO_PUB_DATE
     , BILL_DIV_CODE
     , SEQ
     , DONG
     , HOUSE
     , UP_FLOOR
     , AREA
     , HIRE_CUST_CD
     , COMPANY_NUM
     , GUARANTY
     , MONTHLY_RENT
     , INTEREST
     , MONTHLY_TOTAL
     , SORT_ORDER
     <if test="@foren.Ognl@isNotEmpty(MOVE_IN_DATE)">
     , MOVE_IN_DATE
     </if>
     <if test="@foren.Ognl@isNotEmpty(UPDATE_DATE)">
     , UPDATE_DATE
     </if>
     <if test="@foren.Ognl@isNotEmpty(LEAVING_DATE)">
     , LEAVING_DATE
     </if>
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{FR_PUB_DATE}
     , #{TO_PUB_DATE}
     , #{BILL_DIV_CODE}
     , #{SEQ}
     , #{DONG}
     , #{HOUSE}
     , #{UP_FLOOR}
     , #{AREA}
     , #{HIRE_CUST_CD}
     , #{COMPANY_NUM}
     , #{GUARANTY}
     , #{MONTHLY_RENT}
     , #{INTEREST}
     , #{MONTHLY_TOTAL}
     , ISNULL(#{SORT_ORDER}, 99999)
     <if test="@foren.Ognl@isNotEmpty(MOVE_IN_DATE)">
     , #{MOVE_IN_DATE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(UPDATE_DATE)">
     , #{UPDATE_DATE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(LEAVING_DATE)">
     , #{LEAVING_DATE}
     </if>
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )
</insert>

<insert id="atx400ukrServiceImpl.insertInterestRate" parameterType="Map">
--UAtx02Krv.CAtx411PKR Setatx411[fnatx411Set] N/U
INSERT INTO ATX411T
     ( INTEREST_RATE
     , APPLY_DATE
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     ) 
VALUES
     ( #{INTEREST_RATE}
     , #{APPLY_DATE}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )
</insert>
	
<update id="atx400ukrServiceImpl.updateDetail" parameterType="Map">		
--atx400ukr.CAtx400UKR[fnatx400Set] N/D
UPDATE ATX400T
   SET DONG           = #{DONG}
     , UP_UNDER       = #{UP_UNDER}
     , UP_FLOOR       = #{UP_FLOOR}
     , HOUSE          = #{HOUSE}
     , AREA           = #{AREA}
     , HIRE_CUST_CD   = #{HIRE_CUST_CD}
     , COMPANY_NUM    = #{COMPANY_NUM}
     , MOVE_IN_DATE   = #{MOVE_IN_DATE}
     , UPDATE_DATE    = #{UPDATE_DATE}
     , LEAVING_DATE   = #{LEAVING_DATE}
     , GUARANTY       = #{GUARANTY}
     , MONTHLY_RENT   = #{MONTHLY_RENT}
     , INTEREST       = #{INTEREST}
     , MONTHLY_TOTAL  = #{MONTHLY_TOTAL}
     , SORT_ORDER     = #{SORT_ORDER}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
   AND TO_PUB_DATE    = #{TO_PUB_DATE}
   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
   AND SEQ            = #{SEQ}
   AND COMP_CODE      = #{S_COMP_CODE}
  
</update>

<update id="atx400ukrServiceImpl.updateInterestRate" parameterType="Map">	
--UAtx02Krv.CAtx411PKR Setatx411[fnatx411Set] N/U
UPDATE ATX411T
   SET INTEREST_RATE  = #{INTEREST_RATE}
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = GETDATE()
     
 WHERE APPLY_DATE     = #{APPLY_DATE}
   AND COMP_CODE      = #{S_COMP_CODE}
</update>

<delete id="atx400ukrServiceImpl.deleteDetail" parameterType="Map">		
--atx400ukr.CAtx400UKR[fnatx400Set] D
DELETE FROM ATX400T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND SEQ           = #{SEQ}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete>

<delete id="atx400ukrServiceImpl.deleteInterestRate" parameterType="Map">		
--UAtx02Krv.CAtx411PKR Setatx411[fnatx411Set] D
DELETE FROM ATX411T 
 WHERE APPLY_DATE = #{APPLY_DATE}
   AND COMP_CODE  = #{S_COMP_CODE}
</delete> 

<delete id="atx400ukrServiceImpl.deleteDetail2" parameterType="Map">	/* 재참조 */	
--atx400ukr.CAtx400UKR[fnatx400Set] D
DELETE FROM ATX400T 
 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
   AND TO_PUB_DATE   = #{TO_PUB_DATE}
   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   AND COMP_CODE     = #{S_COMP_CODE}
  
</delete> 

<select id="atx400ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
SELECT A.COMP_CODE, A.COMP_NAME
FROM              BOR100T   A  WITH (NOLOCK)
       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                            AND M1.MAIN_CODE    = 'B107'
                                            AND M1.SUB_CODE     = '20'         
WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
</select>


</mapper>