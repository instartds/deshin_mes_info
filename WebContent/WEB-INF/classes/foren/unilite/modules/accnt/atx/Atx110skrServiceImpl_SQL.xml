<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx110skrServiceImpl">
	<select id="atx110skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/*atx110skr.Catx110Skr Setatx110[fnatx110nq] Query1*/
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		
		/*1. 날짜 포맷 유형 설정*/
		    DECLARE @DateFormat         NVARCHAR(01)
		
		    SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
		    FROM   BSA100T WITH (NOLOCK)
		    WHERE  COMP_CODE = #{S_COMP_CODE}
		    AND    MAIN_CODE = 'B044'
		    AND    REF_CODE1 = 'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, '.')
		
		/*2. 임시테이블 선언(순번을 자동채번값으로 대체하기 위해)*/
		    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#ATX100T_110711'))
		        DROP TABLE #ATX100T_110711
		
		    CREATE TABLE #ATX100T_110711
		            (  COMP_CODE              NVARCHAR(08)
		            ,  AUTO_NUM               INT IDENTITY(1,1)
		            ,  GUBUN                  NVARCHAR(6)
		            ,  PUB_DATE               NVARCHAR(10)
		            ,  CUSTOM_CODE            NVARCHAR(8)
		            ,  CUSTOM_NAME            NVARCHAR(50)
		            ,  COMPANY_NUM            NVARCHAR(13)
		            ,  I_SUPPLY_AMT           NUMERIC(30,6)
		            ,  I_TAX_AMT              NUMERIC(30,6)
		            ,  I_SUPPLY_SUM           NUMERIC(30,6)
		            ,  O_SUPPLY_AMT           NUMERIC(30,6)
		            ,  O_TAX_AMT              NUMERIC(30,6)
		            ,  O_SUPPLY_SUM           NUMERIC(30,6)
		            ,  PROOF_KIND             NVARCHAR(30)
		            ,  REMARK                 NVARCHAR(100)
		            ,  BILL_DIVI_CODE         NVARCHAR(8)
		            ,  BILL_DIVI_NAME         NVARCHAR(30)
		            ,  DIV_CODE               NVARCHAR(8)
		            ,  DIV_NAME               NVARCHAR(30)
		            ,  AC_DATE                NVARCHAR(10)
		            ,  SLIP_NUM               NUMERIC(7,0)
		            ,  SLIP_SEQ               NUMERIC(5,0)
		            ,  INPUT_PATH             NVARCHAR(2)
		            ,  INPUT_PATH_NAME        NVARCHAR(30)
		            ,  INPUT_DIVI             NVARCHAR(2)
		            ,  PROOF_KIND2            NVARCHAR(2)
		            ,  INOUT_DIVI             NVARCHAR(1)
		            ,  EB_YN                  NVARCHAR(1)
		            ,  EB_YN_NAME             NVARCHAR(30)
		            ,  TAX_INPUT_DIVI         NVARCHAR(1)
		            ,  TAX_PUB_PATH           NVARCHAR(5)
		            ,  REASON_CODE            NVARCHAR(30)
		            ,  CREDIT_NUM             NVARCHAR(255)
		            ,  AUTO_SLIP_NUM          NVARCHAR(100)
		            ,  EX_DATE                NVARCHAR(10)
		            ,  EX_NUM                 NUMERIC(7,0)
		            ,  UPDATE_DB_TIME         DATETIME
		            ,  DEPT_CODE            NVARCHAR(50)   
		            ,  DEPT_NAME            NVARCHAR(50)   
		            )
		
		/*3. 임시테이블에 정보를 INSERT>*/
		    INSERT INTO #ATX100T_110711
		            (
		                COMP_CODE             
		            ,  GUBUN                  
		            ,  PUB_DATE               
		            ,  CUSTOM_CODE            
		            ,  CUSTOM_NAME            
		            ,  COMPANY_NUM            
		            ,  I_SUPPLY_AMT           
		            ,  I_TAX_AMT              
		            ,  I_SUPPLY_SUM           
		            ,  O_SUPPLY_AMT           
		            ,  O_TAX_AMT              
		            ,  O_SUPPLY_SUM           
		            ,  PROOF_KIND             
		            ,  REMARK                 
		            ,  BILL_DIVI_CODE         
		            ,  BILL_DIVI_NAME         
		            ,  DIV_CODE         
		            ,  DIV_NAME         
		            ,  AC_DATE                
		            ,  SLIP_NUM               
		            ,  SLIP_SEQ               
		            ,  INPUT_PATH             
		            ,  INPUT_PATH_NAME        
		            ,  INPUT_DIVI             
		            ,  PROOF_KIND2            
		            ,  INOUT_DIVI             
		            ,  EB_YN                  
		            ,  EB_YN_NAME             
		            ,  TAX_INPUT_DIVI         
		            ,  TAX_PUB_PATH           
		            ,  REASON_CODE           
		            ,  CREDIT_NUM           
		            ,  AUTO_SLIP_NUM           
		            ,  EX_DATE                
		            ,  EX_NUM         
		            ,  UPDATE_DB_TIME    
		            ,  DEPT_CODE 
		            ,  DEPT_NAME 
		            )
		    SELECT A.COMP_CODE
		         , SUBSTRING(A.PUB_DATE,1,6) GUBUN
		         , SUBSTRING(A.PUB_DATE, 1, 4) + @DateFormat + 
		           SUBSTRING(A.PUB_DATE, 5, 2) + @DateFormat + 
		           SUBSTRING(A.PUB_DATE, 7, 2)                  AS PUB_DATE
		         , A.CUSTOM_CODE  
		         , M1.CUSTOM_NAME  
		         , SUBSTRING(A.COMPANY_NUM,1,3) + '-' + 
		           SUBSTRING(A.COMPANY_NUM,4,2) + '-' + 
		           SUBSTRING(A.COMPANY_NUM,6,5)                 AS COMPANY_NUM  
		         , CASE WHEN A.INOUT_DIVI = '1'
		                     THEN A.SUPPLY_AMT_I 
		                     ELSE 0 
		            END                                         AS I_SUPPLY_AMT 
		         , CASE WHEN A.INOUT_DIVI = '1' 
		                     THEN A.TAX_AMT_I 
		                     ELSE 0 
		            END                                         AS I_TAX_AMT  
		         , CASE WHEN A.INOUT_DIVI = '1' 
		                     THEN (A.SUPPLY_AMT_I + A.TAX_AMT_I) 
		                     ELSE 0 
		            END                                         AS I_SUPPLY_SUM  
		         , CASE WHEN A.INOUT_DIVI = '2'
		                     THEN A.SUPPLY_AMT_I
		                     ELSE 0 
		            END                                         AS O_SUPPLY_AMT 
		         , CASE WHEN A.INOUT_DIVI = '2' 
		                     THEN A.TAX_AMT_I
		                     ELSE 0
		            END                                         AS O_TAX_AMT  
		         , CASE WHEN A.INOUT_DIVI = '2' 
		                     THEN (A.SUPPLY_AMT_I + A.TAX_AMT_I) 
		                     ELSE 0 
		            END                                         AS O_SUPPLY_SUM  
		         , M2.CODE_NAME                                 AS PROOF_KIND 
		         , A.REMARK 
		         , B.BILL_DIV_CODE                              AS BILL_DIVI_CODE
		         , B.DIV_NAME                                   AS BILL_DIVI_NAME 
		         , A.DIV_CODE                                   AS DIV_CODE
		         , B2.DIV_NAME                                  AS DIV_NAME 
		         , SUBSTRING(A.AC_DATE, 1, 4) + @DateFormat + 
		           SUBSTRING(A.AC_DATE, 5, 2) + @DateFormat + 
		           SUBSTRING(A.AC_DATE, 7, 2)                  AS AC_DATE
		         , A.SLIP_NUM
		         , A.SLIP_SEQ
		         , A.INPUT_PATH 
		         , M4.CODE_NAME                                AS INPUT_PATH_NAME
		         , C.INPUT_DIVI
		         , A.PROOF_KIND                                AS PROOF_KIND2 
		         , A.INOUT_DIVI 
		         , A.EB_YN
		         , M3.CODE_NAME                                AS EB_YN_NAME
		         , A.INPUT_DIVI                                AS TAX_INPUT_DIVI
		         , M4.REF_CODE6                                AS TAX_PUB_PATH
		         , M5.CODE_NAME                                AS REASON_CODE
		         , CASE WHEN ISNULL(M2.REF_CODE3, '') = '1' AND ISNULL(M2.REF_CODE1, '') = 'F'
		                     THEN unilite.fnCipherDecrypt(A.CREDIT_NUM, '')
		                ELSE unilite.fnCipherDecrypt(A.CREDIT_NUM, 'C')
		           END                                                  AS CREDIT_NUM
		         , CASE WHEN A.INPUT_PATH IN ('79', '80') THEN ISNULL(C.AUTO_SLIP_NUM, '')
		                ELSE ''
		           END                                         AS AUTO_SLIP_NUM
		         , CASE WHEN ISNULL(C.EX_DATE, '') = '' THEN NULL
		                ELSE SUBSTRING(C.EX_DATE, 1, 4) + @DateFormat + 
		                     SUBSTRING(C.EX_DATE, 5, 2) + @DateFormat + 
		                     SUBSTRING(C.EX_DATE, 7, 2)
		           END                                         AS EX_DATE
		         , CASE WHEN ISNULL(C.EX_NUM, 0) = 0 THEN NULL
		                ELSE C.EX_NUM
		           END                                         AS EX_NUM
		           , A.UPDATE_DB_TIME
		         , C.DEPT_CODE     
		         , C.DEPT_NAME    
		      FROM            ATX100T A  WITH (NOLOCK) 
		           LEFT  JOIN BOR120T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                              AND B.DIV_CODE      = A.BILL_DIVI_CODE
		           LEFT  JOIN BOR120T B2 WITH (NOLOCK) ON B2.COMP_CODE    = A.COMP_CODE
		                                              AND B2.DIV_CODE     = A.DIV_CODE
		           LEFT  JOIN AGJ210T C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                              AND C.AC_DATE       = A.AC_DATE
		                                              AND C.SLIP_NUM      = A.SLIP_NUM
		                                              AND C.SLIP_SEQ      = A.SLIP_SEQ
		                                              AND ISNULL(C.MOD_DIVI,'')=''
		           LEFT  JOIN BCM100T M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
		                                              AND M1.CUSTOM_CODE  = A.CUSTOM_CODE
		           LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
		                                              AND M2.MAIN_CODE    = 'A022'
		                                              AND M2.SUB_CODE     = A.PROOF_KIND
		           LEFT  JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE    = A.COMP_CODE
		                                              AND M3.MAIN_CODE    = 'A149'
		                                              AND M3.SUB_CODE     = A.EB_YN
		           LEFT  JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE    = A.COMP_CODE
		                                              AND M4.MAIN_CODE    = 'A011'
		                                              AND M4.SUB_CODE     = A.INPUT_PATH
		           LEFT  JOIN BSA100T M5 WITH (NOLOCK) ON M5.COMP_CODE    = A.COMP_CODE
		                                              AND M5.MAIN_CODE    = 'A070'
		                                              AND M5.SUB_CODE     = A.REASON_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.PUB_DATE &gt;= #{txtFrDate}
		       AND A.PUB_DATE &lt;= #{txtToDate}
		       
		       <if test="@foren.Ognl@isNotEmpty(txtDivi)">
		       AND A.INOUT_DIVI        = #{txtDivi}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtOrgCd)">
		       AND A.BILL_DIVI_CODE    = #{txtOrgCd}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtProofKind)">
		       AND A.PROOF_KIND        = #{txtProofKind} 
		       </if>
				<if test="@foren.Ognl@isNotEmpty(txtCustom) and @foren.Ognl@isNotEmpty(txtCustomName)">
					AND A.CUSTOM_CODE = #{txtCustom}
				</if>
				<if test="@foren.Ognl@isNotEmpty(txtCustom) and @foren.Ognl@isEmpty(txtCustomName)">
					AND A.CUSTOM_CODE LIKE #{txtCustom} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(txtCustom) and @foren.Ognl@isNotEmpty(txtCustomName)">
					AND M1.CUSTOM_NAME LIKE '%' + #{txtCustomName} + '%' 
				</if>		       
		       <if test="@foren.Ognl@isNotEmpty(txtCompanyNum)">
		       AND A.COMPANY_NUM       = #{txtCompanyNum}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtAcFrDate)">
		       AND A.AC_DATE &gt;= #{txtAcFrDate}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtAcToDate)">
		       AND A.AC_DATE &lt;= #{txtAcToDate}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtFrSlipNum)">
		       AND A.SLIP_NUM &gt;= #{txtFrSlipNum}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtToSlipNum)">
		       AND A.SLIP_NUM &lt;= #{txtToSlipNum}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(EbNm)">
		       AND A.EB_YN    = #{EbNm}
		       </if>
		       
		      <if test="SorGbn == &quot;1&quot;">   
		      <if test="@foren.Ognl@isNotEmpty(txtFrAmt)">
		          AND A.INOUT_DIVI = '1' AND A.SUPPLY_AMT_I &gt;= #{txtFrAmt}
		          </if>
		          <if test="@foren.Ognl@isNotEmpty(txtToAmt)">
		          AND A.INOUT_DIVI = '1' AND A.SUPPLY_AMT_I &lt;= #{txtToAmt}
		          </if>
		      </if>
		      <if test="SorGbn == &quot;2&quot;">    
		          <if test="@foren.Ognl@isNotEmpty(txtFrAmt)">  
		          AND (A.INOUT_DIVI = '1' AND A.TAX_AMT_I &gt;= #{txtFrAmt})
		          </if>
		          <if test="@foren.Ognl@isNotEmpty(txtToAmt)">
		          AND (A.INOUT_DIVI = '1' AND A.TAX_AMT_I &lt;= #{txtToAmt})
		          </if>
		      </if>
		      <if test="SorGbn == &quot;3&quot;">   
		          <if test="@foren.Ognl@isNotEmpty(txtFrAmt)">
		          AND A.INOUT_DIVI = '2' AND A.SUPPLY_AMT_I &gt;= #{txtFrAmt}
		          </if>
		          <if test="@foren.Ognl@isNotEmpty(txtToAmt)">
		          AND A.INOUT_DIVI = '2' AND A.SUPPLY_AMT_I &lt;= #{txtToAmt}
		          </if>
		      </if>
		      <if test="SorGbn == &quot;4&quot;">    
		          <if test="@foren.Ognl@isNotEmpty(txtFrAmt)">  
		          AND (A.INOUT_DIVI = '2' AND A.TAX_AMT_I &gt;= #{txtFrAmt})
		          </if>
		          <if test="@foren.Ognl@isNotEmpty(txtToAmt)">
		          AND (A.INOUT_DIVI = '2' AND A.TAX_AMT_I &lt;= #{txtToAmt})
		          </if>
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(txtInputFrDate)">  
		      AND CONVERT(NVARCHAR(8), A.INSERT_DB_TIME, 112) &gt;= #{txtInputFrDate}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(txtInputToDate)"> 
		      AND CONVERT(NVARCHAR(8), A.INSERT_DB_TIME, 112) &lt;= #{txtInputToDate}
		      </if>
		       <if test="@foren.Ognl@isNotEmpty(txtRemark)">
		       AND A.REMARK   LIKE '%' + #{txtRemark} + '%'
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(txtInputDivi)">
		       AND A.INPUT_DIVI  = #{txtInputDivi}
		       </if>
		       <if test="BillGbn == &quot;1&quot;">  
		       AND M2.REF_CODE1 IN ('A', 'D')
		       </if>
		       <if test="BillGbn == &quot;2&quot;">     
		       AND M2.REF_CODE1 = 'B'
		       </if>
		       <if test="BillGbn == &quot;3&quot;">     
		       AND M2.REF_CODE1 = 'C'
		       </if>
		       <if test="BillGbn == &quot;4&quot;">     
		       AND M2.REF_CODE1 = 'E'
		       </if>
		       <if test="BillGbn == &quot;5&quot;">     
		       AND M2.REF_CODE1 = 'F'
		       </if>    
		       <if test="@foren.Ognl@isNotEmpty(txtPubPath)">
		       AND M4.REF_CODE6  = #{txtPubPath}
		       </if>
		       <if test="ChkDed == &quot;Y&quot;">   
		       AND M2.REF_CODE5  = #{ChkDed}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(cboReasonCode)">
		       AND A.REASON_CODE = #{cboReasonCode}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		       AND C.DEPT_CODE = #{DEPT_CODE}
		       </if>
		       <if test="SortGbn == &quot;1&quot;">  
		       ORDER BY A.PUB_DATE, A.COMPANY_NUM, M1.CUSTOM_NAME
		       </if>
		       <if test="SortGbn == &quot;2&quot;">  
		       ORDER BY A.PUB_DATE, A.AC_DATE, A.SLIP_NUM, A.SLIP_SEQ
		       </if>
		       <if test="SortGbn == &quot;3&quot;">  
		       ORDER BY A.COMPANY_NUM, A.PUB_DATE
		       </if>
		
		/*4. Main Query>*/
		    SELECT AUTO_NUM AS SEQ
		         , GUBUN
		         , PUB_DATE
		         , CUSTOM_CODE
		         , CUSTOM_NAME
		         , COMPANY_NUM
		         , I_SUPPLY_AMT
		         , I_TAX_AMT
		         , I_SUPPLY_SUM
		         , O_SUPPLY_AMT
		         , O_TAX_AMT
		         , O_SUPPLY_SUM
		         , PROOF_KIND
		         , REMARK
		         , BILL_DIVI_CODE
		         , BILL_DIVI_NAME
		         , DIV_CODE
		         , DIV_NAME
		         , AC_DATE
		         , SLIP_NUM
		         , SLIP_SEQ
		         , INPUT_PATH
		         , INPUT_PATH_NAME
		         , INPUT_DIVI
		         , PROOF_KIND2
		         , INOUT_DIVI
		         , EB_YN
		         , EB_YN_NAME
		         , TAX_INPUT_DIVI
		         , TAX_PUB_PATH
		         , REASON_CODE
		         , CREDIT_NUM
		         , AUTO_SLIP_NUM
		         , EX_DATE
		         , EX_NUM
		         , '' BIGO
		         , UPDATE_DB_TIME
		         , DEPT_CODE 
		         , DEPT_NAME
		      FROM #ATX100T_110711  WITH (NOLOCK)
		
		    SET NOCOUNT    OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="atx110skrServiceImpl.getLinkID" parameterType="Map" resultType="rMap">
		/*atx110skr.Catx110skr [fnatx110nq] QUERY04*/
		SELECT  MAX(PAY_ID) PAY_ID, MAX(IN_ID) IN_ID
		FROM    (
		        SELECT  CASE WHEN SUB_CODE = '5' THEN CODE_NAME ELSE '' END    AS PAY_ID      /*지출결의등록 프로그램ID*/
		              , CASE WHEN SUB_CODE = '6' THEN CODE_NAME ELSE '' END    AS IN_ID       /*수입결의등록 프로그램ID*/
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE   = #{S_COMP_CODE}
		        AND     MAIN_CODE   = N'A125'
		        AND     SUB_CODE   IN ('5', '6')
		) T
	</select>
	<select id="atx110skrServiceImpl.getProofKind" parameterType="Map" resultType="comboItem">
		/*UBsaExKrv.CBsaExSKr[fnRecordList] Query25*/
		SELECT SUB_CODE AS 'value'
		     , CODE_NAME AS 'text'
		     , '' AS search
		     , '' AS 'option'
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'A022'
		   AND SUB_CODE != '$'
		<if test="@foren.Ognl@isNotEmpty(txtDivi)">
		   AND REF_CODE3 = #{txtDivi}
		</if>
		 ORDER BY SORT_SEQ, SUB_CODE
	</select>
</mapper>