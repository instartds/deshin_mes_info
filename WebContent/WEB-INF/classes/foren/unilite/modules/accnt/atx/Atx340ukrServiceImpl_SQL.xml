<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx340ukrServiceImpl">
	<select id="atx340ukrServiceImpl.checkList" parameterType="Map" resultType="rMap">
	DECLARE @CNT NUMERIC(30,0);
		SELECT  @CNT = COUNT(*) 
		  FROM ATX340T   WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE} 
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		   
		SELECT  @CNT = @CNT + COUNT(*) 
		  FROM ATX341T   WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE} 
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		   
		SELECT @CNT AS CNT
	</select>					
	<select id="atx340ukrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		--UAtx01Krv.CATX340UKR[FNATX340Q] QUERY1
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT FR_PUB_DATE
		     , TO_PUB_DATE 
		     , ISNULL(BILL_DIV_CODE, '')  BILL_DIV_CODE
		     , ISNULL(OTHER_NUM, 0)       OTHER_NUM3 
		     , ISNULL(FOR_OTHER_AMT_I, 0) FOR_OTHER_AMT3
		     , ISNULL(OTHER_AMT_I, 0)     OTEHR_AMT3 
		     , ISNULL(REMARK1, '')        REMARK1
		     , ISNULL(REMARK2, '')        REMARK2
		     , ISNULL(REMARK3, '')        REMARK3
		     , UPDATE_DB_USER, UPDATE_DB_TIME 
		     , ''	AS DATA_FLAG
		  FROM ATX340T   WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE} 
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		 ORDER BY FR_PUB_DATE, TO_PUB_DATE, BILL_DIV_CODE ASC 	
	</select>
	<update id="atx340ukrServiceImpl.update" parameterType="foren.unilite.modules.accnt.atx.Atx340ukrModel">
		/* master저장 */
		DECLARE @COMP_CODE        NVARCHAR(08)
		      , @FR_PUB_DATE      NVARCHAR(08)
		      , @TO_PUB_DATE      NVARCHAR(08)
		      , @BILL_DIV_CODE    NVARCHAR(08)
		      , @OTHER_NUM        NUMERIC(5,0)
		      , @FOR_OTHER_AMT_I  NUMERIC(18,4)
		      , @OTHER_AMT_I      NUMERIC(18,4)
		      , @REMARK1          NVARCHAR(50)
		      , @REMARK2          NVARCHAR(50)
		      , @REMARK3          NVARCHAR(50)
		      , @UPDATE_DB_USER   NVARCHAR(100)
		      , @INSERT_DB_USER   NVARCHAR(100)
		
		SET   @COMP_CODE       = #{S_COMP_CODE}
		SET   @FR_PUB_DATE     = #{FR_PUB_DATE}
		SET   @TO_PUB_DATE     = #{TO_PUB_DATE}
		SET   @BILL_DIV_CODE   = #{BILL_DIV_CODE}
		SET   @OTHER_NUM       = #{OTHER_NUM3}
		SET   @FOR_OTHER_AMT_I = #{FOR_OTHER_AMT3}
		SET   @OTHER_AMT_I     = #{OTEHR_AMT3}
		SET   @REMARK1         = #{REMARK1}
		SET   @REMARK2         = #{REMARK2}
		SET   @REMARK3         = #{REMARK3}
		SET   @UPDATE_DB_USER  = #{S_USER_ID}
		SET   @INSERT_DB_USER  = #{S_USER_ID}
		
		IF EXISTS(SELECT TOP 1 1
		           FROM ATX340T  WITH (NOLOCK)
		          WHERE COMP_CODE    = @COMP_CODE
		           AND FR_PUB_DATE   = @FR_PUB_DATE
		           AND TO_PUB_DATE   = @TO_PUB_DATE
		           AND BILL_DIV_CODE = @BILL_DIV_CODE)
		    BEGIN
		
		        UPDATE ATX340T
		           SET OTHER_NUM       = @OTHER_NUM
		             , FOR_OTHER_AMT_I = @FOR_OTHER_AMT_I
		             , OTHER_AMT_I     = @OTHER_AMT_I
		             , REMARK1         = @REMARK1
		             , REMARK2         = @REMARK2
		             , REMARK3         = @REMARK3
		             , UPDATE_DB_USER  = @UPDATE_DB_USER
		             , UPDATE_DB_TIME  = GETDATE()
		          FROM ATX340T 
		         WHERE COMP_CODE     = @COMP_CODE
		           AND FR_PUB_DATE   = @FR_PUB_DATE
		           AND TO_PUB_DATE   = @TO_PUB_DATE
		           AND BILL_DIV_CODE = @BILL_DIV_CODE
		
		    END
		ELSE
		    BEGIN
		        INSERT INTO ATX340T
		             ( COMP_CODE,   FR_PUB_DATE,        TO_PUB_DATE,    BILL_DIV_CODE
		             , OTHER_NUM,   FOR_OTHER_AMT_I,    OTHER_AMT_I,    REMARK1 
		             , REMARK2,     REMARK3
		             , UPDATE_DB_USER,  UPDATE_DB_TIME
		             , INSERT_DB_USER,  INSERT_DB_TIME)
		       VALUES( @COMP_CODE,  @FR_PUB_DATE,       @TO_PUB_DATE,   @BILL_DIV_CODE
		             , @OTHER_NUM,  @FOR_OTHER_AMT_I,   @OTHER_AMT_I,   @REMARK1    
		             , @REMARK2,    @REMARK3
		             , @UPDATE_DB_USER, GETDATE()
		             , @INSERT_DB_USER, GETDATE())
		
		    END	
	</update>


	<select id="atx340ukrServiceImpl.selectDetail" parameterType="Map" resultType="rMap">	/* Detail조회 */
		--UAtx01Krv.CATX340UKR[FNATX340Q] QUERY2
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT FR_PUB_DATE
		     , TO_PUB_DATE
		     , BILL_DIV_CODE 
		     , SEQ 
		     , ISNULL(EXPORT_NUM, 0)   EXPORT_NUM 
		     , ISNULL(uniLITE.fnGetUserDateComp(COMP_CODE, SHIP_DATE), '') SHIP_DATE
		     , ISNULL(MONEY_UNIT, '')  MONEY_UNIT 
		     , ISNULL(EXCHG_RATE_O, 0) EXCHG_RATE_O 
		     , ISNULL(FOR_AMT_I, 0)    FOR_AMT_I  
		     , ISNULL(AMT_I, 0)        AMT_I 
		     , UPDATE_DB_USER 
		     , UPDATE_DB_TIME 
		     , COMP_CODE 
		  FROM ATX341T   WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE} 
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		 ORDER BY FR_PUB_DATE, TO_PUB_DATE, BILL_DIV_CODE,SEQ ASC 	
	</select>

	<insert id="atx340ukrServiceImpl.insertDetail" parameterType="Map">   
		--UAtx01Krv.CATX340UKR[fnatx340Set] Query8
		INSERT INTO ATX341T
		     ( FR_PUB_DATE
		     , TO_PUB_DATE
		     , BILL_DIV_CODE
		     , SEQ
		     , EXPORT_NUM
		     , SHIP_DATE
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , FOR_AMT_I
		     , AMT_I
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{FR_PUB_DATE}
		     , #{TO_PUB_DATE}
		     , #{BILL_DIV_CODE}
		     , #{SEQ}
		     , #{EXPORT_NUM}
		     , #{SHIP_DATE}
		     , #{MONEY_UNIT}
		     , #{EXCHG_RATE_O}
		     , #{FOR_AMT_I}
		     , #{AMT_I}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
		
	<update id="atx340ukrServiceImpl.updateDetail" parameterType="Map">		
		--UAtx01Krv.CATX340UKR[fnatx340Set] Query8
		UPDATE ATX341T
		   SET EXPORT_NUM     = #{EXPORT_NUM}
		     , SHIP_DATE      = #{SHIP_DATE}
		     , MONEY_UNIT     = #{MONEY_UNIT}
		     , EXCHG_RATE_O   = #{EXCHG_RATE_O}
		     , FOR_AMT_I      = #{FOR_AMT_I}
		     , AMT_I          = #{AMT_I}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE FR_PUB_DATE    = #{FR_PUB_DATE}
		   AND TO_PUB_DATE    = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE  = #{BILL_DIV_CODE}
		   AND SEQ            = #{SEQ}
		   AND COMP_CODE      = #{S_COMP_CODE}
	  
	</update>
	
	<update id="atx340ukrServiceImpl.deleteDetail" parameterType="Map">
		--UAtx01Krv.CATX340UKR[fnatx340Set] Query7
		DELETE FROM ATX341T 
		 WHERE FR_PUB_DATE   = #{FR_PUB_DATE}
		   AND TO_PUB_DATE   = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		   AND SEQ           = #{SEQ}
		   AND COMP_CODE     = #{S_COMP_CODE}
	  
	</update>
	
	<insert id="atx340ukrServiceImpl.insertExcelAtx342t" parameterType="Map">		/* 엑셀insert */
		INSERT INTO ATX342T
		     (_EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     , EXPORT_NUM
		     , SHIP_DATE
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , FOR_AMT_I
		     , AMT_I
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
		     , #{_EXCEL_ERROR,jdbcType=VARCHAR}
		     , #{EXPORT_NUM}
		     , REPLACE(#{SHIP_DATE}, '-', '')
		     , #{MONEY_UNIT}
		<if test="@foren.Ognl@isNotEmpty(EXCHG_RATE_O)">
			<if test="EXCHG_RATE_O != &quot;&quot;">
			 , ${EXCHG_RATE_O}
			</if>
			<if test="EXCHG_RATE_O == &quot;&quot;">
		     , 0
			</if>
		</if>
		<if test="@foren.Ognl@isEmpty(EXCHG_RATE_O)">
		     , 0
		</if>
		<if test="@foren.Ognl@isNotEmpty(FOR_AMT_I)">
			<if test="FOR_AMT_I != &quot;&quot;">
			 , ${FOR_AMT_I}
			</if>
			<if test="FOR_AMT_I == &quot;&quot;">
		     , 0
			</if>
		</if>
		<if test="@foren.Ognl@isEmpty(FOR_AMT_I)">
		     , 0
		</if>
		     , CASE WHEN ISNULL(#{AMT_I}, '') = '' THEN 0 ELSE #{AMT_I} END
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<select id="atx340ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 버튼 / 조회 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */	
		    SELECT _EXCEL_JOBID
				 , _EXCEL_ROWNUM
				 , _EXCEL_HAS_ERROR
				 , _EXCEL_ERROR_MSG
		         , ''	AS FR_PUB_DATE
			     , ''	AS TO_PUB_DATE
			     , ''	AS BILL_DIV_CODE 
			     , _EXCEL_ROWNUM AS SEQ 
			     , ISNULL(EXPORT_NUM, 0)   EXPORT_NUM 
			     , ISNULL(uniLITE.fnGetUserDateComp(COMP_CODE, SHIP_DATE), '') SHIP_DATE
			     , ISNULL(MONEY_UNIT, '')  MONEY_UNIT 
			     , ISNULL(EXCHG_RATE_O, 0) EXCHG_RATE_O 
			     , ISNULL(FOR_AMT_I, 0)    FOR_AMT_I  
			     , ISNULL(AMT_I, 0)        AMT_I 
			     , UPDATE_DB_USER 
			     , UPDATE_DB_TIME 
			     , COMP_CODE 
			  FROM ATX342T   WITH (NOLOCK)
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		  	ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
		END
	</select>
	
	<update id="excelValidate" >	/* 엑셀validation */
		/*biv105ukrvServiceImpl.excelValidate*/
		/*다국어 메세지 처리 함수 필요. S_LANG_CODE와 msg_no를 파라미터로 받아 BSA000T에서 조회*/
			
		UPDATE   A
		SET 
				A._EXCEL_HAS_ERROR = (CASE WHEN LEN(REPLACE(A.EXPORT_NUM, '-', '')) > '15'		THEN 'Y'
								  		ELSE A._EXCEL_HAS_ERROR 
							      	 END),
							     
				A._EXCEL_ERROR_MSG = (CASE WHEN LEN(REPLACE(A.EXPORT_NUM, '-', '')) > '15'		THEN '수출신고번호는 15자까지 입력할수 있습니다 .'
								  		ELSE A._EXCEL_HAS_ERROR 
							      	 END)
									 
		FROM ATX342T A 	
	</update>
	<select id="atx340ukrServiceImpl.selectReportParam" parameterType="Map" resultType="rMap">	

	--UAtx01Krv.CATX340UKR[FNATX340Q] QUERY4
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SELECT ISNULL(D.DIV_FULL_NAME,'') COMP_NAME
	     , ISNULL(D.COMPANY_NUM, '')  COMPANY_NUM 
	     , ISNULL(D.REPRE_NAME,'')    REPRE_NAME
	     , ISNULL(D.COMP_CLASS, '')   COMP_CLASS
	     , ISNULL(D.COMP_TYPE, '')    COMP_TYPE
	     , ISNULL(D.ADDR,'')          ADDR
	     , (SELECT SUB_CODE
	          FROM BSA100T   WITH (NOLOCK)
	         WHERE COMP_CODE  = #{S_COMP_CODE}
	           AND MAIN_CODE  = 'A065' 
	           AND REF_CODE1 &lt;= RIGHT(#{TO_PUB_DATE},4)
	           AND REF_CODE2 &gt;= RIGHT(#{TO_PUB_DATE},4)) TERM_CODE
	  FROM BOR120T D  WITH (NOLOCK)
	 WHERE COMP_CODE   = #{S_COMP_CODE}
   	 AND BILL_DIV_CODE = #{BILL_DIV_CODE}
   	 

	</select>

	<select id="atx340ukrServiceImpl.selectListTo340PrintSum" parameterType="Map" resultType="rMap">
		--UArpt09Krv.Catx01SKR[fnatx340r] Query7
		SELECT 
		     SUM(ISNULL(FOR_AMT_I, 0))    TOT_FOR 
		     , SUM(ISNULL(AMT_I, 0))      TOT_AMT 
		     , COUNT(1) 				AS RECORD_COUNT
		  FROM ATX341T   WITH (NOLOCK)
		  WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND FR_PUB_DATE = #{FR_PUB_DATE}
		   AND TO_PUB_DATE = #{TO_PUB_DATE} 
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		 
	</select>
	<select id="atx340ukrServiceImpl.selectReference" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE      NVARCHAR(8)
		      , @BILL_DIVI_CODE NVARCHAR(8)
		      , @FR_PUB_DATE    NVARCHAR(8)
		      , @TO_PUB_DATE    NVARCHAR(8)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BILL_DIVI_CODE = #{BILL_DIV_CODE}
		SET @FR_PUB_DATE    = #{FR_PUB_DATE}
		SET @TO_PUB_DATE    = #{TO_PUB_DATE}
		
		-- 임시 테이블 생성
        BEGIN
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202007141013')) 
	            DROP TABLE #OMEGA202007141013
			     
	        CREATE TABLE #OMEGA202007141013
	             ( COMP_CODE            NVARCHAR(08)
                 , PUB_DATE             NVARCHAR(08)
                 , GUBUN                NVARCHAR(01)
	             , FR_PUB_DATE          NVARCHAR(08)
	             , TO_PUB_DATE          NVARCHAR(08)
	             , BILL_DIV_CODE        NVARCHAR(08)
	             , EXPORT_NUM           NVARCHAR(20)
	             , SHIP_DATE            NVARCHAR(08)
	             , MONEY_UNIT           NVARCHAR(3)
	             , EXCHG_RATE_O         NUMERIC(30, 6)
	             , FOR_AMT_I            NUMERIC(30, 6)
	             , AMT_I                NUMERIC(30, 6) )
        END

        -- 부가세조정에서 입력한 데이터 집계
        BEGIN
            INSERT INTO #OMEGA202007141013
            SELECT A.COMP_CODE
                 , A.PUB_DATE
                 , '1'                  AS GUBUN        --1:수출재화/2:기타영세율
                 , @FR_PUB_DATE         AS FR_PUB_DATE
                 , @TO_PUB_DATE         AS TO_PUB_DATE
                 , A.BILL_DIVI_CODE     AS BILL_DIV_CODE
                 , ''                   AS EXPORT_NUM
                 , ''                   AS SHIP_DATE
                 , A.MONEY_UNIT         AS MONEY_UNIT
                 , A.EXCHG_RATE_O       AS EXCHG_RATE_O
                 , A.FOR_SUPPLY_AMT_I   AS FOR_AMT_I
                 , A.SUPPLY_AMT_I       AS AMT_I
              FROM            ATX100T A WITH (NOLOCK)
                   LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                     AND B.AC_DATE   = A.AC_DATE
                                                     AND B.SLIP_NUM  = A.SLIP_NUM
                                                     AND B.DR_CR     = '2'
                                                     AND B.SLIP_SEQ != A.SLIP_SEQ
                                                     AND ISNULL(B.MOD_DIVI, '') != 'D'
             WHERE A.COMP_CODE       = @COMP_CODE
               AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		       AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		       AND A.PUB_DATE       &lt;= @TO_PUB_DATE
               AND A.PROOF_KIND      = '21'		
               AND ISNULL(B.COMP_CODE,'') = ''
        END

		-- 전표에서 입력한 데이터 집계
        BEGIN
            DECLARE @CurAcDate      NVARCHAR(08)
                  , @CurSlipNum     NUMERIC(7,0)
                  , @TradeType      NVARCHAR(5)

            DECLARE CUR_ATX340T CURSOR FOR
                SELECT DISTINCT A.AC_DATE, A.SLIP_NUM
                  FROM            ATX100T A WITH (NOLOCK)
                       LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.AC_DATE   = A.AC_DATE
                                                         AND B.SLIP_NUM  = A.SLIP_NUM
                                                         AND B.SLIP_SEQ  = A.SLIP_SEQ
                                                         AND ISNULL(B.MOD_DIVI, '') != 'D'
                 WHERE A.COMP_CODE       = @COMP_CODE
                   AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		           AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		           AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                   AND A.PROOF_KIND      = '21'		
                   AND ISNULL(B.COMP_CODE,'') != ''
                
            OPEN CUR_ATX340T
            FETCH NEXT FROM CUR_ATX340T INTO @CurAcDate, @CurSlipNum
            WHILE (@@FETCH_STATUS = 0)
            BEGIN
                SELECT @TradeType = TRADE_TYPE
                  FROM TED100T WITH (NOLOCK)
                 WHERE COMP_CODE = @COMP_CODE
                   AND AC_DATE   = @CurAcDate
                   AND AC_NUM    = @CurSlipNum

                SET @TradeType = ISNULL(@TradeType,'')

                -- 수출재화로 집계되는 경우 : 수출선적등록의 무역종류가 일반무역(=1) 인 경우, 수출선적등록의 데이터가 없는 경우(무역모듈을 사용하지 않는 경우)
                IF @TradeType = '1' OR @TradeType = ''
                BEGIN
                    INSERT INTO #OMEGA202007141013
                    SELECT DISTINCT
                           A.COMP_CODE
                         , A.PUB_DATE
                         , '1'          AS GUBUN        --1:수출재화/2:기타영세율
                         , @FR_PUB_DATE AS FR_PUB_DATE
                         , @TO_PUB_DATE AS TO_PUB_DATE
                         , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DA' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DA' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DA' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DA' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DA' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DA' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS EXPORT_NUM
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DB' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DB' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DB' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DB' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DB' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DB' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS SHIP_DATE
		                 , ISNULL(B.MONEY_UNIT  , A.MONEY_UNIT)         AS MONEY_UNIT
		                 , ISNULL(B.EXCHG_RATE_O, A.EXCHG_RATE_O)       AS EXCHG_RATE_O
		                 , ISNULL(B.FOR_AMT_I   , A.FOR_SUPPLY_AMT_I)   AS FOR_AMT_I
		                 , ISNULL(B.AMT_I       , A.SUPPLY_AMT_I)       AS AMT_I
                      FROM            ATX100T A WITH (NOLOCK)
                           INNER JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                             AND B.AC_DATE   = A.AC_DATE
                                                             AND B.SLIP_NUM  = A.SLIP_NUM
                                                             AND B.DR_CR     = '2'
                                                             AND ISNULL(B.MOD_DIVI, '') != 'D'
                                                             AND B.SLIP_SEQ NOT IN (SELECT X.SLIP_SEQ
                                                                                      FROM ATX100T X WITH (NOLOCK)
                                                                                     WHERE X.COMP_CODE       = @COMP_CODE
                                                                                       AND X.BILL_DIVI_CODE  = @BILL_DIVI_CODE
                                                                		               AND X.PUB_DATE       &gt;= @FR_PUB_DATE
                                                                		               AND X.PUB_DATE       &lt;= @TO_PUB_DATE
                                                                                       AND X.PROOF_KIND      = '21'
                                                                                       AND X.AC_DATE         = @CurAcDate
                                                                                       AND X.SLIP_NUM        = @CurSlipNum)
                     WHERE A.COMP_CODE       = @COMP_CODE
                       AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		               AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		               AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                       AND A.PROOF_KIND      = '21'		
                       AND A.AC_DATE         = @CurAcDate
                       AND A.SLIP_NUM        = @CurSlipNum
                END

                -- 기타영세율로 집계되는 경우
                ELSE
                BEGIN
                    INSERT INTO #OMEGA202007141013
                    SELECT DISTINCT
                           A.COMP_CODE
                         , A.PUB_DATE
                         , '2'          AS GUBUN        --1:수출재화/2:기타영세율
                         , @FR_PUB_DATE AS FR_PUB_DATE
                         , @TO_PUB_DATE AS TO_PUB_DATE
                         , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DA' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DA' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DA' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DA' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DA' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DA' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS EXPORT_NUM
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DB' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DB' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DB' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DB' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DB' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DB' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS SHIP_DATE
		                 , ISNULL(B.MONEY_UNIT  , A.MONEY_UNIT)         AS MONEY_UNIT
		                 , ISNULL(B.EXCHG_RATE_O, A.EXCHG_RATE_O)       AS EXCHG_RATE_O
		                 , ISNULL(B.FOR_AMT_I   , A.FOR_SUPPLY_AMT_I)   AS FOR_AMT_I
		                 , ISNULL(B.AMT_I       , A.SUPPLY_AMT_I)       AS AMT_I
                      FROM            ATX100T A WITH (NOLOCK)
                           INNER JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                             AND B.AC_DATE   = A.AC_DATE
                                                             AND B.SLIP_NUM  = A.SLIP_NUM
                                                             AND B.DR_CR     = '2'
                                                             AND ISNULL(B.MOD_DIVI, '') != 'D'
                                                             AND B.SLIP_SEQ NOT IN (SELECT X.SLIP_SEQ
                                                                                      FROM ATX100T X WITH (NOLOCK)
                                                                                     WHERE X.COMP_CODE       = @COMP_CODE
                                                                                       AND X.BILL_DIVI_CODE  = @BILL_DIVI_CODE
                                                                		               AND X.PUB_DATE       &gt;= @FR_PUB_DATE
                                                                		               AND X.PUB_DATE       &lt;= @TO_PUB_DATE
                                                                                       AND X.PROOF_KIND      = '21'
                                                                                       AND X.AC_DATE         = @CurAcDate
                                                                                       AND X.SLIP_NUM        = @CurSlipNum)
                     WHERE A.COMP_CODE       = @COMP_CODE
                       AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		               AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		               AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                       AND A.PROOF_KIND      = '21'		
                       AND A.AC_DATE         = @CurAcDate
                       AND A.SLIP_NUM        = @CurSlipNum
                END
                FETCH NEXT FROM CUR_ATX340T INTO @CurAcDate, @CurSlipNum
            END
            CLOSE      CUR_ATX340T
            DEALLOCATE CUR_ATX340T
        END

        SELECT COMP_CODE        
	         , FR_PUB_DATE      
	         , TO_PUB_DATE      
	         , BILL_DIV_CODE    
             , ROW_NUMBER() OVER (ORDER BY PUB_DATE) AS SEQ
	         , EXPORT_NUM         
	         , SHIP_DATE        
	         , MONEY_UNIT      
	         , EXCHG_RATE_O            
	         , FOR_AMT_I            
	         , AMT_I            
          FROM #OMEGA202007141013
         WHERE GUBUN = '1'
	</select>
	<select id="atx340ukrServiceImpl.getReference" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE      NVARCHAR(8)
		      , @BILL_DIVI_CODE NVARCHAR(8)
		      , @FR_PUB_DATE    NVARCHAR(8)
		      , @TO_PUB_DATE    NVARCHAR(8)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BILL_DIVI_CODE = #{BILL_DIV_CODE}
		SET @FR_PUB_DATE    = #{FR_PUB_DATE}
		SET @TO_PUB_DATE    = #{TO_PUB_DATE}
		
		-- 임시 테이블 생성
        BEGIN
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202007142256')) 
	            DROP TABLE #OMEGA202007142256
			     
	        CREATE TABLE #OMEGA202007142256
	             ( COMP_CODE            NVARCHAR(08)
                 , PUB_DATE             NVARCHAR(08)
                 , GUBUN                NVARCHAR(01)
	             , FR_PUB_DATE          NVARCHAR(08)
	             , TO_PUB_DATE          NVARCHAR(08)
	             , BILL_DIV_CODE        NVARCHAR(08)
	             , EXPORT_NUM           NVARCHAR(20)
	             , SHIP_DATE            NVARCHAR(08)
	             , MONEY_UNIT           NVARCHAR(3)
	             , EXCHG_RATE_O         NUMERIC(30, 6)
	             , FOR_AMT_I            NUMERIC(30, 6)
	             , AMT_I                NUMERIC(30, 6) )
        END

        -- 부가세조정에서 입력한 데이터 집계
        BEGIN
            INSERT INTO #OMEGA202007142256
            SELECT A.COMP_CODE
                 , A.PUB_DATE
                 , '1'                  AS GUBUN        --1:수출재화/2:기타영세율
                 , @FR_PUB_DATE         AS FR_PUB_DATE
                 , @TO_PUB_DATE         AS TO_PUB_DATE
                 , A.BILL_DIVI_CODE     AS BILL_DIV_CODE
                 , ''                   AS EXPORT_NUM
                 , ''                   AS SHIP_DATE
                 , A.MONEY_UNIT         AS MONEY_UNIT
                 , A.EXCHG_RATE_O       AS EXCHG_RATE_O
                 , A.FOR_SUPPLY_AMT_I   AS FOR_AMT_I
                 , A.SUPPLY_AMT_I       AS AMT_I
              FROM            ATX100T A WITH (NOLOCK)
                   LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                     AND B.AC_DATE   = A.AC_DATE
                                                     AND B.SLIP_NUM  = A.SLIP_NUM
                                                     AND B.DR_CR     = '2'
                                                     AND B.SLIP_SEQ != A.SLIP_SEQ
                                                     AND ISNULL(B.MOD_DIVI, '') != 'D'
             WHERE A.COMP_CODE       = @COMP_CODE
               AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		       AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		       AND A.PUB_DATE       &lt;= @TO_PUB_DATE
               AND A.PROOF_KIND      = '21'		
               AND ISNULL(B.COMP_CODE,'') = ''
        END

		-- 전표에서 입력한 데이터 집계
        BEGIN
            DECLARE @CurAcDate      NVARCHAR(08)
                  , @CurSlipNum     NUMERIC(7,0)
                  , @TradeType      NVARCHAR(5)

            DECLARE CUR_ATX340T CURSOR FOR
                SELECT DISTINCT A.AC_DATE, A.SLIP_NUM
                  FROM            ATX100T A WITH (NOLOCK)
                       LEFT  JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.AC_DATE   = A.AC_DATE
                                                         AND B.SLIP_NUM  = A.SLIP_NUM
                                                         AND B.SLIP_SEQ  = A.SLIP_SEQ
                                                         AND ISNULL(B.MOD_DIVI, '') != 'D'
                 WHERE A.COMP_CODE       = @COMP_CODE
                   AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		           AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		           AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                   AND A.PROOF_KIND      = '21'		
                   AND ISNULL(B.COMP_CODE,'') != ''
                
            OPEN CUR_ATX340T
            FETCH NEXT FROM CUR_ATX340T INTO @CurAcDate, @CurSlipNum
            WHILE (@@FETCH_STATUS = 0)
            BEGIN
                SELECT @TradeType = TRADE_TYPE
                  FROM TED100T WITH (NOLOCK)
                 WHERE COMP_CODE = @COMP_CODE
                   AND AC_DATE   = @CurAcDate
                   AND AC_NUM    = @CurSlipNum

                SET @TradeType = ISNULL(@TradeType,'')

                -- 수출재화로 집계되는 경우 : 수출선적등록의 무역종류가 일반무역(=1) 인 경우, 수출선적등록의 데이터가 없는 경우(무역모듈을 사용하지 않는 경우)
                IF @TradeType = '1' OR @TradeType = ''
                BEGIN
                    INSERT INTO #OMEGA202007142256
                    SELECT DISTINCT
                           A.COMP_CODE
                         , A.PUB_DATE
                         , '1'          AS GUBUN        --1:수출재화/2:기타영세율
                         , @FR_PUB_DATE AS FR_PUB_DATE
                         , @TO_PUB_DATE AS TO_PUB_DATE
                         , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DA' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DA' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DA' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DA' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DA' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DA' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS EXPORT_NUM
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DB' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DB' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DB' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DB' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DB' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DB' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS SHIP_DATE
		                 , ISNULL(B.MONEY_UNIT  , A.MONEY_UNIT)         AS MONEY_UNIT
		                 , ISNULL(B.EXCHG_RATE_O, A.EXCHG_RATE_O)       AS EXCHG_RATE_O
		                 , ISNULL(B.FOR_AMT_I   , A.FOR_SUPPLY_AMT_I)   AS FOR_AMT_I
		                 , ISNULL(B.AMT_I       , A.SUPPLY_AMT_I)       AS AMT_I
                      FROM            ATX100T A WITH (NOLOCK)
                           INNER JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                             AND B.AC_DATE   = A.AC_DATE
                                                             AND B.SLIP_NUM  = A.SLIP_NUM
                                                             AND B.DR_CR     = '2'
                                                             AND ISNULL(B.MOD_DIVI, '') != 'D'
                                                             AND B.SLIP_SEQ NOT IN (SELECT X.SLIP_SEQ
                                                                                      FROM ATX100T X WITH (NOLOCK)
                                                                                     WHERE X.COMP_CODE       = @COMP_CODE
                                                                                       AND X.BILL_DIVI_CODE  = @BILL_DIVI_CODE
                                                                		               AND X.PUB_DATE       &gt;= @FR_PUB_DATE
                                                                		               AND X.PUB_DATE       &lt;= @TO_PUB_DATE
                                                                                       AND X.PROOF_KIND      = '21'
                                                                                       AND X.AC_DATE         = @CurAcDate
                                                                                       AND X.SLIP_NUM        = @CurSlipNum)
                     WHERE A.COMP_CODE       = @COMP_CODE
                       AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		               AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		               AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                       AND A.PROOF_KIND      = '21'		
                       AND A.AC_DATE         = @CurAcDate
                       AND A.SLIP_NUM        = @CurSlipNum
                END

                -- 기타영세율로 집계되는 경우
                ELSE
                BEGIN
                    INSERT INTO #OMEGA202007142256
                    SELECT DISTINCT
                           A.COMP_CODE
                         , A.PUB_DATE
                         , '2'          AS GUBUN        --1:수출재화/2:기타영세율
                         , @FR_PUB_DATE AS FR_PUB_DATE
                         , @TO_PUB_DATE AS TO_PUB_DATE
                         , A.BILL_DIVI_CODE AS BILL_DIV_CODE
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DA' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DA' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DA' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DA' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DA' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DA' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS EXPORT_NUM
                         , ISNULL(CASE WHEN ISNULL(B.AC_CODE1,'') = 'DB' THEN ISNULL(B.AC_DATA1,'')
                                       WHEN ISNULL(B.AC_CODE2,'') = 'DB' THEN ISNULL(B.AC_DATA2,'')
                                       WHEN ISNULL(B.AC_CODE3,'') = 'DB' THEN ISNULL(B.AC_DATA3,'')
                                       WHEN ISNULL(B.AC_CODE4,'') = 'DB' THEN ISNULL(B.AC_DATA4,'')
                                       WHEN ISNULL(B.AC_CODE5,'') = 'DB' THEN ISNULL(B.AC_DATA5,'')
                                       WHEN ISNULL(B.AC_CODE6,'') = 'DB' THEN ISNULL(B.AC_DATA6,'')
                                   END,'') AS SHIP_DATE
		                 , ISNULL(B.MONEY_UNIT  , A.MONEY_UNIT)         AS MONEY_UNIT
		                 , ISNULL(B.EXCHG_RATE_O, A.EXCHG_RATE_O)       AS EXCHG_RATE_O
		                 , ISNULL(B.FOR_AMT_I   , A.FOR_SUPPLY_AMT_I)   AS FOR_AMT_I
		                 , ISNULL(B.AMT_I       , A.SUPPLY_AMT_I)       AS AMT_I
                      FROM            ATX100T A WITH (NOLOCK)
                           INNER JOIN AGJ210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                             AND B.AC_DATE   = A.AC_DATE
                                                             AND B.SLIP_NUM  = A.SLIP_NUM
                                                             AND B.DR_CR     = '2'
                                                             AND ISNULL(B.MOD_DIVI, '') != 'D'
                                                             AND B.SLIP_SEQ NOT IN (SELECT X.SLIP_SEQ
                                                                                      FROM ATX100T X WITH (NOLOCK)
                                                                                     WHERE X.COMP_CODE       = @COMP_CODE
                                                                                       AND X.BILL_DIVI_CODE  = @BILL_DIVI_CODE
                                                                		               AND X.PUB_DATE       &gt;= @FR_PUB_DATE
                                                                		               AND X.PUB_DATE       &lt;= @TO_PUB_DATE
                                                                                       AND X.PROOF_KIND      = '21'
                                                                                       AND X.AC_DATE         = @CurAcDate
                                                                                       AND X.SLIP_NUM        = @CurSlipNum)
                     WHERE A.COMP_CODE       = @COMP_CODE
                       AND A.BILL_DIVI_CODE  = @BILL_DIVI_CODE
		               AND A.PUB_DATE       &gt;= @FR_PUB_DATE
		               AND A.PUB_DATE       &lt;= @TO_PUB_DATE
                       AND A.PROOF_KIND      = '21'		
                       AND A.AC_DATE         = @CurAcDate
                       AND A.SLIP_NUM        = @CurSlipNum
                END
                FETCH NEXT FROM CUR_ATX340T INTO @CurAcDate, @CurSlipNum
            END
            CLOSE      CUR_ATX340T
            DEALLOCATE CUR_ATX340T
        END
        
        SELECT FR_PUB_DATE
             , TO_PUB_DATE
         	 , BILL_DIV_CODE    
             , SUM(OTHER_NUM3)      AS OTHER_NUM3
             , SUM(FOR_OTHER_AMT3)  AS FOR_OTHER_AMT3       
             , SUM(OTEHR_AMT3)      AS OTEHR_AMT3   
             , ''                   AS REMARK1    
             , ''                   AS REMARK2    
             , ''                   AS REMARK3    
			 , 'N'					AS DATA_FLAG
          FROM (SELECT FR_PUB_DATE      
         	         , TO_PUB_DATE      
         	         , BILL_DIV_CODE    
                     , COUNT(*)         AS OTHER_NUM3
         	         , SUM(FOR_AMT_I)   AS FOR_OTHER_AMT3            
         	         , SUM(AMT_I)       AS OTEHR_AMT3            
                   FROM #OMEGA202007142256
                  WHERE GUBUN = '2'
                  GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE, BILL_DIV_CODE
                UNION ALL
         		SELECT #{FR_PUB_DATE}					AS FR_PUB_DATE
         			 , #{TO_PUB_DATE}					AS TO_PUB_DATE
         			 , #{BILL_DIV_CODE}					AS BILL_DIV_CODE
         			 , COUNT(*)							AS OTHER_NUM3
         			 , ISNULL(SUM(FOR_SUPPLY_AMT_I), 0)	AS FOR_OTHER_AMT3
         			 , ISNULL(SUM(SUPPLY_AMT_I), 0)		AS OTEHR_AMT3
         		  FROM ATX100T
         		 WHERE COMP_CODE		=		#{S_COMP_CODE}
         		   AND PUB_DATE			BETWEEN #{FR_PUB_DATE}
         								AND		#{TO_PUB_DATE}
         		   AND BILL_DIVI_CODE	=		#{BILL_DIV_CODE}
         		   AND PROOF_KIND		=		'41') A
          GROUP BY FR_PUB_DATE, TO_PUB_DATE, BILL_DIV_CODE 
	</select>
	<update  id="atx340ukrServiceImpl.deleteForReference" parameterType="Map">
		-- 재참조 전 삭제
		DELETE FROM ATX341T 
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND FR_PUB_DATE   = #{FR_PUB_DATE}
		   AND TO_PUB_DATE   = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
		
		DELETE FROM ATX340T 
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND FR_PUB_DATE   = #{FR_PUB_DATE}
		   AND TO_PUB_DATE   = #{TO_PUB_DATE}
		   AND BILL_DIV_CODE = #{BILL_DIV_CODE}
	</update>
</mapper>