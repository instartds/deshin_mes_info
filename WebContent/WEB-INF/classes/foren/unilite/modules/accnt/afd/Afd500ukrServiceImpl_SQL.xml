<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afd500ukrService">
	
	<select id="afd500ukrService.selectAmtPoint" parameterType="Map" resultType="rMap">	    
	--Uafd500ukr.Cafd500ukr[fnafd500nq]Query1
	SELECT AMT_POINT 
	  FROM ABA100T A  WITH (NOLOCK)
	     , BSA110T B  WITH (NOLOCK)
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND B.COMP_CODE = #{S_COMP_CODE}
	   AND B.JOB_CODE  = '13'
	</select>
	
	<select id="afd500ukrService.selectList" parameterType="Map" resultType="rMap">	    
	--Uafd500ukr.Cafd500ukr[fnafd500nq] Query2
	SELECT B.SAVE_CODE                                                                                          
	     , MAX(A.SAVE_NAME)    AS SAVE_NAME                                                                         
	     , MAX(B.SAVE_DESC)    AS SAVE_DESC                                                                         
	     , MAX(A.BANK_ACCOUNT) AS BANK_ACCOUNT                                                        
	     , MAX(A.DIV_CODE)     AS DIV_CODE                                                                           
	     , A.BANK_CODE                                                                                           
	     , (SELECT CUSTOM_NAME
	          FROM BCM100T  WITH (NOLOCK)
	         WHERE COMP_CODE   = A.COMP_CODE
	           AND CUSTOM_CODE = A.BANK_CODE) AS BANK_NAME                          
	     , A.ACCNT                                                                                               
	     , (SELECT ACCNT_NAME
	          FROM ABA400T   WITH (NOLOCK)
	         WHERE COMP_CODE   = A.COMP_CODE
	           AND ACCNT       = A.ACCNT) AS ACCNT_NAME                                    
	     , (SELECT SPEC_DIVI 
	          FROM ABA400T  WITH (NOLOCK)
	         WHERE COMP_CODE   = A.COMP_CODE
	           AND ACCNT        = A.ACCNT) AS SPEC_DIVI                                     
	     , UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, MAX(B.PUB_DATE)) AS PUB_DATE                                                    
	     , UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, MAX(B.EXP_DATE)) AS EXP_DATE                                                    
	     , MAX(B.MONEY_UNIT)    AS MONEY_UNIT                                                                       
	     , MAX(B.EXP_AMT_I)     AS EXP_AMT_I                                                                         
	     , MAX(B.EXP_FOR_AMT_I) AS EXP_FOR_AMT_I                                                                 
	     , MAX(B.MONTH_AMT)     AS MONTH_AMT                                                                         
	     , MAX(B.MONTH_FOR_AMT) AS MONTH_FOR_AMT                                                                 
	     , SUM(C.DR_AMT_I)      AS NOW_AMT_I                                                                          
	     , SUM(C.DR_FOR_AMT_I)  AS NOW_FOR_AMT_I                                                                  
	     , MAX(B.TOT_CNT)       AS TOT_CNT                                                                             
	     , CASE (SELECT SUBSTRING(ISNULL(SPEC_DIVI,''),1,1) 
	               FROM ABA400T  WITH (NOLOCK)
	              WHERE COMP_CODE   = A.COMP_CODE
	                AND ACCNT       = A.ACCNT)                    
	            WHEN 'B'
	                 THEN 1                                                                                 
	                 ELSE ROUND(CASE ISNULL(MAX(M1.REF_CODE1),'')                                           
	                                 WHEN 'Y'
	                                      THEN SUM(C.DR_AMT_I)/MAX(B.MONTH_AMT)                          
	                                      ELSE SUM(C.DR_FOR_AMT_I)/MAX(B.MONTH_FOR_AMT)                  
	                             END
					 <if test="AMT_POINT == &quot;1&quot;"> 
				     	, 0 , 1)
				     </if>
				     <if test="AMT_POINT == &quot;2&quot;"> 
				     	+ 0.4 * 10 ^ (-0), 0, 1) 
				     </if>
				     <if test="AMT_POINT == &quot;3&quot;"> 
				     	, 0) 
				     </if>                                                                     
	        END AS NOW_CNT                                                                                       
	     , MAX(B.RETURN_PERIOD) AS RETURN_PERIOD                                                                 
	     , MAX(B.INT_RATE)      AS INT_RATE                                                                           
	     , MAX(B.INT_PERIOD)    AS INT_PERIOD                                                                       
	     , MAX(B.MIDCLOSE_RATE) AS MIDCLOSE_RATE                                                                 
	     , UNILITE.fnGetUserDateComp(#{S_COMP_CODE}, MAX(B.CLOSE_DATE)) AS CLOSE_DATE                                                
	     , MAX(B.PLD_YN)        AS PLD_YN                                                                               
	     , MAX(B.PLD_DESC)      AS PLD_DESC   
	     , MAX(B.ITEM_TYPE)     AS ITEM_TYPE          -- 10.08 추가
	     , MAX(B.SCD_CREATE_YN) AS SCD_CREATE_YN      -- 10.08 추가                                                         
	  FROM            AFS100T A  WITH (NOLOCK)
	       INNER JOIN AFN400T B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                           AND B.SAVE_CODE  = A.SAVE_CODE                                     
	       LEFT  JOIN AGB200T C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                           AND C.ACCNT      = A.ACCNT                                             
	                                           AND ((C.BOOK_CODE1='O1' AND C.BOOK_DATA1=A.SAVE_CODE)           
	                                           OR   (C.BOOK_CODE2='O1' AND C.BOOK_DATA2=A.SAVE_CODE))          
	                                           AND C.AC_DATE   &gt;= #{ST_DATE2}
	                                           AND C.AC_DATE   &lt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
	       INNER JOIN BSA100T M1 WITH (NOLOCK) ON  M1.COMP_CODE = A.COMP_CODE
	                                           AND M1.MAIN_CODE = 'B004'                                         
	                                           AND M1.SUB_CODE  = B.MONEY_UNIT                                  
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
       AND A.DIV_CODE IN
			<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>									
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(BANK_BOOK_CODE2)">
	   AND B.SAVE_CODE LIKE #{BANK_BOOK_CODE2} + '%'
	 </if>
	 <if test="RADIO_DATE == &quot;A&quot;">	
	  	<if test="@foren.Ognl@isNotEmpty(BASE_DATE_FR)">
		 AND B.EXP_DATE &gt;= #{BASE_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BASE_DATE_TO)">
		 AND B.EXP_DATE &lt;= #{BASE_DATE_TO}
		</if>
	 </if>
	 <if test="RADIO_DATE == &quot;B&quot;">	
	 	<if test="@foren.Ognl@isNotEmpty(BASE_DATE_FR)">
		 AND B.PUB_DATE &gt;= #{BASE_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BASE_DATE_TO)">
		 AND B.PUB_DATE &lt;= #{BASE_DATE_TO}
		</if>
	 </if>
	 GROUP BY A.COMP_CODE, B.SAVE_CODE, A.BANK_CODE, A.ACCNT                                                                  
	 ORDER BY B.SAVE_CODE                                                                                        
	</select>
	
	
	<update id="afd500ukrService.updateDetail" parameterType="Map">	
	--Uafd500ukr.Cafd500ukr[fnafd500set]Query6
	UPDATE AFN400T
	   SET PUB_DATE       = #{PUB_DATE}
	     , EXP_DATE       = #{EXP_DATE}
	     , SAVE_DESC      = #{SAVE_DESC}
	     , EXP_AMT_I      = #{EXP_AMT_I}
	     , EXP_FOR_AMT_I  = #{EXP_FOR_AMT_I}
	     , MONTH_AMT      = #{MONTH_AMT}
	     , MONTH_FOR_AMT  = #{MONTH_FOR_AMT}
	     , MONEY_UNIT     = #{MONEY_UNIT}
	     , TOT_CNT        = #{TOT_CNT}
	     , RETURN_PERIOD  = #{RETURN_PERIOD}
	     , INT_RATE       = #{INT_RATE}
	     , PLD_YN         = #{PLD_YN}
	     , PLD_DESC       = #{PLD_DESC}
	     , INT_PERIOD     = #{INT_PERIOD}
	     , MIDCLOSE_RATE  = #{MIDCLOSE_RATE}
	     , CLOSE_DATE     = #{CLOSE_DATE}
	     , ITEM_TYPE      = #{ITEM_TYPE}			-- 10.08 추가
	     , SCD_CREATE_YN  = #{SCD_CREATE_YN}		-- 10.08 추가
	     , UPDATE_DB_USER = #{S_USER_ID}
	     , UPDATE_DB_TIME = GETDATE()
	     
	 WHERE SAVE_CODE      = #{SAVE_CODE}
	   AND COMP_CODE      = #{S_COMP_CODE}
	</update>
	
	<insert id="afd500ukrService.insertDetail" parameterType="Map">
	INSERT INTO AFN400T
	     ( COMP_CODE
	     , SAVE_CODE
	     , PUB_DATE
	     , EXP_DATE
	     , SAVE_DESC
	     , EXP_FOR_AMT_I
	     , MONTH_FOR_AMT
	     , MONEY_UNIT
	     , TOT_CNT
	     , RETURN_PERIOD
	     , EXP_AMT_I
	     , MONTH_AMT
	     <if test="@foren.Ognl@isNotEmpty(INT_RATE)">
	     , INT_RATE
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PLD_YN)">
	     , PLD_YN
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PLD_DESC)">
	     , PLD_DESC
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(INT_PERIOD)">
	     , INT_PERIOD
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(MIDCLOSE_RATE)">
	     , MIDCLOSE_RATE
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CLOSE_DATE)">
	     , CLOSE_DATE
	     </if>
	     , SCD_CREATE_YN			-- 10.08 추가
	     , INT_CAL_TYPE				--	2020.11.19 추가. DDL에 컬럼은 2016년도 추가되었으나 NOT NULL 컬럼이라 프로그램상으로 등록할 방법이 없음. 하드코딩으로 추가.
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     ) 
	VALUES
	     ( #{S_COMP_CODE}
	     , #{SAVE_CODE}
	     , #{PUB_DATE}
	     , #{EXP_DATE}
	     , #{SAVE_DESC}
	     , ISNULL(#{EXP_FOR_AMT_I}, 0)
	     , ISNULL(#{MONTH_FOR_AMT}, 0)
	     , #{MONEY_UNIT}
	     , #{TOT_CNT}
	     , #{RETURN_PERIOD}
	     , #{EXP_AMT_I}
	     , #{MONTH_AMT}
	     <if test="@foren.Ognl@isNotEmpty(INT_RATE)">
	     , #{INT_RATE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PLD_YN)">
	     , #{PLD_YN}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PLD_DESC)">
	     , #{PLD_DESC}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(INT_PERIOD)">
	     , #{INT_PERIOD}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(MIDCLOSE_RATE)">
	     , #{MIDCLOSE_RATE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CLOSE_DATE)">
	     , #{CLOSE_DATE}
	     </if>
	     , #{SCD_CREATE_YN}
	     , 'A03'
	     , #{S_USER_ID}
	     , GETDATE()
	     )
	</insert>
	
	<delete id="afd500ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
	--Uafd500ukr.Cafd500ukr[fnafd500set]Query4
	DELETE FROM AFN400T 
	 WHERE SAVE_CODE = #{SAVE_CODE}
	   AND COMP_CODE = #{S_COMP_CODE}
	</delete>
	
	<select id="afd500ukrService.saveCodeCheck" parameterType="Map" resultType="rMap">
	--Uafd500ukr.Cafd500ukr[fnafd500set]Query5
	SELECT SAVE_CODE                               
	  FROM AFN400T   WITH (NOLOCK)                                  
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND SAVE_CODE = #{SAVE_CODE}
	</select>
	
	<select id="afd500ukrService.checkCompCode" parameterType="Map" resultType="rMap">
	SELECT A.COMP_CODE, A.COMP_NAME
	FROM              BOR100T   A  WITH (NOLOCK)
	       LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
	                                            AND M1.MAIN_CODE    = 'B107'
	                                            AND M1.SUB_CODE     = '20'         
	WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
	   OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
</mapper>