<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agj205ukrServiceImpl">
	
	<select id="agj205ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">		
	/* agj205ukrServiceImpl.selectList */
	SELECT A.AC_DATE                                    OLD_AC_DATE
	     , A.SLIP_NUM                                   OLD_SLIP_NUM
	     , A.SLIP_SEQ                                   OLD_SLIP_SEQ
	     , A.SLIP_SEQ
	     , A.SLIP_DIVI
	     , A.DR_CR
	     , A.ACCNT
	     , ISNULL(C1.ACCNT_NAME ,'')                   ACCNT_NAME
	     , ISNULL(A.CUSTOM_CODE ,'')                   CUSTOM_CODE
	     , ISNULL(C2.CUSTOM_NAME,'')                   CUSTOM_NAME
	     , ISNULL(A.AMT_I, 0.0) 					   AMT_I
	     , CASE A.DR_CR WHEN '1' THEN ISNULL(A.AMT_I, 0.0) ELSE 0.0 END DR_AMT_I
	     , CASE A.DR_CR WHEN '2' THEN ISNULL(A.AMT_I, 0.0) ELSE 0.0 END CR_AMT_I
	     , ISNULL(A.REMARK,'')                          REMARK
	     , ISNULL(M1.CODE_NAME,'')                      PROOF_KIND_NM
	     , ISNULL(A.DEPT_NAME,'')                       DEPT_NAME
	     , ISNULL(A.DIV_CODE,'')                        DIV_CODE
	    
	     , ISNULL(A.DEPT_CODE,'')                       DEPT_CODE
	     , ISNULL(A.P_ACCNT,'')                         P_ACCNT
	     , ISNULL(A.PROOF_KIND,'')                      PROOF_KIND
	     , ISNULL(A.MONEY_UNIT,'')                      MONEY_UNIT
	     , ISNULL(A.EXCHG_RATE_O,0.0)                   EXCHG_RATE_O
	     , ISNULL(A.FOR_AMT_I,0.0)                      FOR_AMT_I
	     , ISNULL(A.IN_DIV_CODE,'')                     IN_DIV_CODE
	     , ISNULL(A.IN_DEPT_CODE,'')                    IN_DEPT_CODE
	     , ISNULL(A.IN_DEPT_NAME,'')                    IN_DEPT_NAME
	     , ISNULL(A.BILL_DIV_CODE,'')                   BILL_DIV_CODE
	     , ISNULL(A.AC_CODE1,'')                        AC_CODE1,         ISNULL(A.AC_CODE2,'')        AC_CODE2
	     , ISNULL(A.AC_CODE3,'')                        AC_CODE3,         ISNULL(A.AC_CODE4,'')        AC_CODE4
	     , ISNULL(A.AC_CODE5,'')                        AC_CODE5,         ISNULL(A.AC_CODE6,'')        AC_CODE6
	     , ISNULL(A.AC_DATA1,'')                        AC_DATA1,         ISNULL(A.AC_DATA2,'')        AC_DATA2
	     , ISNULL(A.AC_DATA3,'')                        AC_DATA3,         ISNULL(A.AC_DATA4,'')        AC_DATA4
	     , ISNULL(A.AC_DATA5,'')                        AC_DATA5,         ISNULL(A.AC_DATA6,'')        AC_DATA6
	     , ISNULL(A.AC_DATA_NAME1,'')                   AC_DATA_NAME1,    ISNULL(A.AC_DATA_NAME2,'')   AC_DATA_NAME2
	     , ISNULL(A.AC_DATA_NAME3,'')                   AC_DATA_NAME3,    ISNULL(A.AC_DATA_NAME4,'')   AC_DATA_NAME4
	     , ISNULL(A.AC_DATA_NAME5,'')                   AC_DATA_NAME5,    ISNULL(A.AC_DATA_NAME6,'')   AC_DATA_NAME6
	     , ISNULL(A.BOOK_CODE1,'')                      BOOK_CODE1,       ISNULL(A.BOOK_CODE2,'')      BOOK_CODE2
	     , ISNULL(A.BOOK_DATA1,'')                      BOOK_DATA1,       ISNULL(A.BOOK_DATA2,'')      BOOK_DATA2
	     , ISNULL(A.BOOK_DATA_NAME1,'')                 BOOK_DATA_NAME1,  ISNULL(A.BOOK_DATA_NAME2,'') BOOK_DATA_NAME2
	     , ISNULL(A.ACCNT_SPEC,'')                      ACCNT_SPEC,       ISNULL(A.SPEC_DIVI,'')       SPEC_DIVI
	     , ISNULL(A.PROFIT_DIVI,'')                     PROFIT_DIVI,      ISNULL(A.JAN_DIVI,'')        JAN_DIVI
	     , ISNULL(A.PEND_YN,'N')                        PEND_YN,          ISNULL(A.PEND_CODE,'')       PEND_CODE
	     , ISNULL(A.PEND_DATA_CODE,'')                  PEND_DATA_CODE,   ISNULL(A.BUDG_YN,'N')        BUDG_YN
	     , ISNULL(A.BUDGCTL_YN,'N')                     BUDGCTL_YN,       ISNULL(A.FOR_YN,'N')         FOR_YN
	     , ISNULL(A.POSTIT_YN,'')                       POSTIT_YN,        ISNULL(A.POSTIT,'')          POSTIT
	     , ISNULL(A.POSTIT_USER_ID,'')                  POSTIT_USER_ID ,  ISNULL(A.INPUT_PATH,'')      INPUT_PATH
	     , ISNULL(A.INPUT_DIVI,'')                      INPUT_DIVI,       ISNULL(A.AUTO_SLIP_NUM,'')   AUTO_SLIP_NUM
	     , ISNULL(A.CLOSE_FG,'')                        CLOSE_FG,         ISNULL(A.INPUT_DATE,'')      INPUT_DATE
	     , ISNULL(A.INPUT_USER_ID,'')                   INPUT_USER_ID,    ISNULL(A.CHARGE_CODE,'')     CHARGE_CODE
	     , ISNULL(A.CREDIT_CODE,'')                     CREDIT_CODE,      ISNULL(A.REASON_CODE,'')     REASON_CODE
	     , uniLITE.fnCipherDecrypt(A.CREDIT_NUM, '')    CREDIT_NUM_EXPOS, ISNULL(A.CREDIT_NUM, '')     CREDIT_NUM
	     , ISNULL(A.AP_DATE,'')         AP_DATE
	     , ISNULL(A.AP_USER_ID,'')                      AP_USER_ID ,      ISNULL(A.EX_DATE,'')         EX_DATE
	     , ISNULL(A.EX_NUM,0)                           EX_NUM,           ISNULL(A.EX_SEQ,0)           EX_SEQ
	    
	     , ISNULL(N1.AC_NAME ,'' )                      AC_NAME1 ,        ISNULL(N2.AC_NAME ,'' )      AC_NAME2
	     , ISNULL(N3.AC_NAME ,'' )                      AC_NAME3 ,        ISNULL(N4.AC_NAME ,'' )      AC_NAME4
	     , ISNULL(N5.AC_NAME ,'' )                      AC_NAME5 ,        ISNULL(N6.AC_NAME ,'' )      AC_NAME6
	     , ISNULL(A.AC_CTL1  ,'N')                      AC_CTL1  ,        ISNULL(A.AC_CTL2  ,'N')      AC_CTL2
	     , ISNULL(A.AC_CTL3  ,'N')                      AC_CTL3  ,        ISNULL(A.AC_CTL4  ,'N')      AC_CTL4
	     , ISNULL(A.AC_CTL5  ,'N')                      AC_CTL5  ,        ISNULL(A.AC_CTL6  ,'N')      AC_CTL6
	     , ISNULL(N1.DT_TYPE ,0  )                      AC_TYPE1 ,        ISNULL(N2.DT_TYPE ,0  )      AC_TYPE2
	     , ISNULL(N3.DT_TYPE ,0  )                      AC_TYPE3 ,        ISNULL(N4.DT_TYPE ,0  )      AC_TYPE4
	     , ISNULL(N5.DT_TYPE ,0  )                      AC_TYPE5 ,        ISNULL(N6.DT_TYPE ,0  )      AC_TYPE6
	     , ISNULL(N1.DT_LEN  ,0  )                      AC_LEN1  ,        ISNULL(N2.DT_LEN  ,0  )      AC_LEN2
	     , ISNULL(N3.DT_LEN  ,0  )                      AC_LEN3  ,        ISNULL(N4.DT_LEN  ,0  )      AC_LEN4
	     , ISNULL(N5.DT_LEN  ,0  )                      AC_LEN5  ,        ISNULL(N6.DT_LEN  ,0  )      AC_LEN6
	     , ISNULL(N1.DT_POPUP,'N')                      AC_POPUP1,        ISNULL(N2.DT_POPUP,'N')      AC_POPUP2
	     , ISNULL(N3.DT_POPUP,'N')                      AC_POPUP3,        ISNULL(N4.DT_POPUP,'N')      AC_POPUP4
	     , ISNULL(N5.DT_POPUP,'N')                      AC_POPUP5,        ISNULL(N6.DT_POPUP,'N')      AC_POPUP6
	     , CONVERT(BIT,0)                               CHK
	     , ISNULL(A.AMT_I,0.0)                          AMT_I
	     , ISNULL(N1.DT_FMT,'0')                        AC_FORMAT1,       ISNULL(N2.DT_FMT,'0')    AC_FORMAT2
	     , ISNULL(N3.DT_FMT,'0')                        AC_FORMAT3,       ISNULL(N4.DT_FMT,'0')    AC_FORMAT4
	     , ISNULL(N5.DT_FMT,'0')                        AC_FORMAT5,       ISNULL(N6.DT_FMT,'0')    AC_FORMAT6
	     , ISNULL(A.ASST_SUPPLY_AMT_I, 0.0)			    ASST_SUPPLY_AMT_I
         , ISNULL(A.ASST_TAX_AMT_I, 0.0)			   	ASST_TAX_AMT_I
         , A.ASST_DIVI
	  FROM             AGJ210T  AS A  WITH (NOLOCK)
	        LEFT  JOIN ABA400T  AS C1 WITH (NOLOCK) ON  C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.ACCNT       = A.ACCNT
	        LEFT  JOIN BCM100T  AS C2 WITH (NOLOCK) ON  C2.COMP_CODE   = A.COMP_CODE
	                                                AND C2.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = 'A022' 
	                                                AND M1.SUB_CODE    = A.PROOF_KIND
	        LEFT  JOIN ABA200T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE   = A.COMP_CODE
	                                                AND N1.AC_CD       = A.AC_CODE1
	        LEFT  JOIN ABA200T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = A.COMP_CODE
	                                                AND N2.AC_CD       = A.AC_CODE2
	        LEFT  JOIN ABA200T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
	                                                AND N3.AC_CD       = A.AC_CODE3
	        LEFT  JOIN ABA200T  AS N4 WITH (NOLOCK) ON  N4.COMP_CODE   = A.COMP_CODE
	                                                AND N4.AC_CD       = A.AC_CODE4
	        LEFT  JOIN ABA200T  AS N5 WITH (NOLOCK) ON  N5.COMP_CODE   = A.COMP_CODE
	                                                AND N5.AC_CD       = A.AC_CODE5
	        LEFT  JOIN ABA200T  AS N6 WITH (NOLOCK) ON  N6.COMP_CODE   = A.COMP_CODE
	                                                AND N6.AC_CD       = A.AC_CODE6
	 WHERE A.COMP_CODE    = #{S_COMP_CODE}
	   AND A.AC_DATE      &gt;= #{AC_DATE}
	   AND A.AC_DATE      &lt;= #{AC_DATE}
	   <if test="@foren.Ognl@isNotEmpty(SLIP_NUM)">
		   AND A.SLIP_NUM        = #{SLIP_NUM}        
		</if>
   		<if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
		   AND A.INPUT_PATH        = #{INPUT_PATH}        
		</if>
		<if test="AUTHORITY == &quot;2&quot;">
	 	<if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE) and @foren.Ognl@isNotEmpty(CHARGE_CODE)">
	 	 	AND ( A.IN_DEPT_CODE = #{IN_DEPT_CODE} 
	        OR  A.CHARGE_CODE  = #{CHARGE_CODE} )
	 	</if>
	 	<if test="@foren.Ognl@isEmpty(IN_DEPT_CODE)">
		 	<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">		 	
		      AND   A.CHARGE_CODE  = #{CHARGE_CODE} 
		 	</if>
	 	</if>
	   </if>
	   AND ISNULL(A.CASH_NUM, 0) = 0
	   AND ISNULL(A.MOD_DIVI,'') = ''
	 ORDER BY A.AC_DATE, A.SLIP_NUM, A.SLIP_SEQ
	</select>
	<select id="agj205ukrServiceImpl.getPrevSlipNum" parameterType="Map" resultType="rMap">		
		--UAgj01Krv.Cagj205UKR[fnPrevNextSlip] Query4
        DECLARE @COMP_CODE      NVARCHAR(08)
              , @FR_DATE        NVARCHAR(08)
              , @SLIP_NUM       NUMERIC(07,0)
        
        SET     @COMP_CODE      = #{S_COMP_CODE}
        SET     @FR_DATE        = ISNULL(#{AC_DATE},'99999999' ) 
        SET     @SLIP_NUM       = ISNULL(#{SLIP_NUM},'99999' )  
        
        SELECT TOP 1 AC_DATE, SLIP_NUM
          FROM AGJ210T WITH (NOLOCK)
         WHERE COMP_CODE = @COMP_CODE
           AND ((AC_DATE = @FR_DATE AND SLIP_NUM &lt; @SLIP_NUM) OR (AC_DATE &lt; @FR_DATE))
           <if test="AUTHORITY == &quot;2&quot;">
		 	<if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE) and @foren.Ognl@isNotEmpty(CHARGE_CODE)">
		 	 	AND ( IN_DEPT_CODE = #{IN_DEPT_CODE} 
		        OR  CHARGE_CODE  = #{CHARGE_CODE} )
		 	</if>
		 	<if test="@foren.Ognl@isEmpty(IN_DEPT_CODE)">
			 	<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">		 	
			      AND   CHARGE_CODE  = #{CHARGE_CODE} 
			 	</if>
		 	</if>
		   </if>	
            
           AND ISNULL(MOD_DIVI,'') = ''
         ORDER BY AC_DATE DESC, SLIP_NUM DESC
	</select>
	<select id="agj205ukrServiceImpl.getNextSlipNum" parameterType="Map" resultType="rMap">		
		--UAgj01Krv.Cagj205UKR[fnPrevNextSlip] Query5
        DECLARE @COMP_CODE      NVARCHAR(08)
              , @FR_DATE        NVARCHAR(08)
              , @SLIP_NUM       NUMERIC(07,0)
        
        SET     @COMP_CODE      = #{S_COMP_CODE}
        SET     @FR_DATE        = ISNULL(#{AC_DATE}, '00000000') 
        SET     @SLIP_NUM       = ISNULL(#{SLIP_NUM}, '00000')   
        
        SELECT TOP 1 AC_DATE, SLIP_NUM
          FROM AGJ210T WITH (NOLOCK)
         WHERE COMP_CODE = @COMP_CODE
           AND ((AC_DATE = @FR_DATE AND SLIP_NUM &gt; @SLIP_NUM) OR (AC_DATE &gt; @FR_DATE))
           <if test="AUTHORITY == &quot;2&quot;">
		 	<if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE) and @foren.Ognl@isNotEmpty(CHARGE_CODE)">
		 	 	AND ( IN_DEPT_CODE = #{IN_DEPT_CODE} 
		        OR  CHARGE_CODE  = #{CHARGE_CODE} )
		 	</if>
		 	<if test="@foren.Ognl@isEmpty(IN_DEPT_CODE)">
			 	<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">		 	
			      AND   CHARGE_CODE  = #{CHARGE_CODE} 
			 	</if>
		 	</if>
		   </if>
           AND ISNULL(MOD_DIVI,'') = ''
         ORDER BY AC_DATE, SLIP_NUM
	</select>
</mapper>