<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agj231ukrServiceImpl">
	<select id="agj231ukrServiceImpl.selectEXList" parameterType="Map" resultType="rMap">			    
		    SELECT A.EX_SEQ
		         , B.CODE_NAME                                  SLIP_DIVI_NM
		         , A.ACCNT
		         , C.ACCNT_NAME                                 ACCNT_NAME
		         , ISNULL(A.CUSTOM_CODE,'')                     CUSTOM_CODE 
		         , CASE WHEN ISNULL(A.CUSTOM_NAME,'') = ''
		                THEN ISNULL(G.CUSTOM_NAME,'') 
		                ELSE ISNULL(A.CUSTOM_NAME,'') 
		            END                                         CUSTOM_NAME
		         , A.AMT_I
		         , ISNULL(A.MONEY_UNIT,'')                      MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.FOR_AMT_I
		         , ISNULL(A.REMARK,'')                          REMARK
		         , A.DEPT_NAME
		         , D.DIV_NAME                                   DIV_NAME
		         , E.CODE_NAME                                  PROOF_KIND_NM
		         , uniLITE.fnCipherDecrypt(A.CREDIT_NUM, 'RC')  CREDIT_NUM
		         , M1.CODE_NAME                                 REASON_CODE
		         , ISNULL(A.POSTIT_YN,'N')                      POSTIT_YN
		    
		         , ISNULL(A.AC_CODE1,'')        AC_CODE1,      ISNULL(A.AC_CODE2,'')        AC_CODE2
		         , ISNULL(A.AC_CODE3,'')        AC_CODE3,      ISNULL(A.AC_CODE4,'')        AC_CODE4
		         , ISNULL(A.AC_CODE5,'')        AC_CODE5,      ISNULL(A.AC_CODE6,'')        AC_CODE6
		         , ISNULL(A.AC_DATA1,'')        AC_DATA1,      ISNULL(A.AC_DATA2,'')        AC_DATA2
		         , ISNULL(A.AC_DATA3,'')        AC_DATA3,      ISNULL(A.AC_DATA4,'')        AC_DATA4
		         , ISNULL(A.AC_DATA5,'')        AC_DATA5,      ISNULL(A.AC_DATA6,'')        AC_DATA6
		         , ISNULL(A.AC_DATA_NAME1,'')   AC_DATA_NAME1, ISNULL(A.AC_DATA_NAME2,'')   AC_DATA_NAME2
		         , ISNULL(A.AC_DATA_NAME3,'')   AC_DATA_NAME3, ISNULL(A.AC_DATA_NAME4,'')   AC_DATA_NAME4
		         , ISNULL(A.AC_DATA_NAME5,'')   AC_DATA_NAME5, ISNULL(A.AC_DATA_NAME6,'')   AC_DATA_NAME6
		    
		         , ISNULL(F1.AC_NAME,'')        AC_NAME1
		         , ISNULL(F2.AC_NAME,'')        AC_NAME2
		         , ISNULL(F3.AC_NAME,'')        AC_NAME3
		         , ISNULL(F4.AC_NAME,'')        AC_NAME4
		         , ISNULL(F5.AC_NAME,'')        AC_NAME5
		         , ISNULL(F6.AC_NAME,'')        AC_NAME6
		    
		         , ISNULL(F1.DT_TYPE,0)         AC_TYPE1
		         , ISNULL(F2.DT_TYPE,0)         AC_TYPE2
		         , ISNULL(F3.DT_TYPE,0)         AC_TYPE3
		         , ISNULL(F4.DT_TYPE,0)         AC_TYPE4
		         , ISNULL(F5.DT_TYPE,0)         AC_TYPE5
		         , ISNULL(F6.DT_TYPE,0)         AC_TYPE6
		    
		         , ISNULL(F1.DT_FMT,'0')        AC_FORMAT1
		         , ISNULL(F2.DT_FMT,'0')        AC_FORMAT2
		         , ISNULL(F3.DT_FMT,'0')        AC_FORMAT3
		         , ISNULL(F4.DT_FMT,'0')        AC_FORMAT4
		         , ISNULL(F5.DT_FMT,'0')        AC_FORMAT5
		         , ISNULL(F6.DT_FMT,'0')        AC_FORMAT6
		         
		         , ISNULL(F1.DT_LEN,'0')        AC_LEN1
		         , ISNULL(F2.DT_LEN,'0')        AC_LEN2
		         , ISNULL(F3.DT_LEN,'0')        AC_LEN3
		         , ISNULL(F4.DT_LEN,'0')        AC_LEN4
		         , ISNULL(F5.DT_LEN,'0')        AC_LEN5
		         , ISNULL(F6.DT_LEN,'0')        AC_LEN6
		         
		         , ISNULL(F1.DT_POPUP,'0')        AC_POPUP1
		         , ISNULL(F2.DT_POPUP,'0')        AC_POPUP2
		         , ISNULL(F3.DT_POPUP,'0')        AC_POPUP3
		         , ISNULL(F4.DT_POPUP,'0')        AC_POPUP4
		         , ISNULL(F5.DT_POPUP,'0')        AC_POPUP5
		         , ISNULL(F6.DT_POPUP,'0')        AC_POPUP6
		         
		         , ISNULL(F1.DT_TYPE,'0')        AC_TYPE1
		         , ISNULL(F2.DT_TYPE,'0')        AC_TYPE2
		         , ISNULL(F3.DT_TYPE,'0')        AC_TYPE3
		         , ISNULL(F4.DT_TYPE,'0')        AC_TYPE4
		         , ISNULL(F5.DT_TYPE,'0')        AC_TYPE5
		         , ISNULL(F6.DT_TYPE,'0')        AC_TYPE6
		         
		    
		      FROM            AGJ110T A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T B  WITH (NOLOCK)  ON  B.COMP_CODE     = A.COMP_CODE
		                                                AND B.MAIN_CODE     = 'A001'
		                                                AND B.SUB_CODE      = A.DR_CR
		           INNER JOIN ABA400T C  WITH (NOLOCK)  ON  C.COMP_CODE     = A.COMP_CODE
		                                                AND C.ACCNT         = A.ACCNT
		           LEFT  JOIN BOR120T D  WITH (NOLOCK)  ON  D.COMP_CODE     = A.COMP_CODE
		                                                AND D.DIV_CODE      = A.DIV_CODE
		           LEFT  JOIN BSA100T E  WITH (NOLOCK)  ON  E.COMP_CODE     = A.COMP_CODE
		                                                AND E.MAIN_CODE     = 'A022'
		                                                AND E.SUB_CODE      = A.PROOF_KIND
		           LEFT  JOIN ABA200T F1 WITH (NOLOCK)  ON  F1.COMP_CODE    = A.COMP_CODE
		                                                AND F1.AC_CD        = A.AC_CODE1 
		           LEFT  JOIN ABA200T F2 WITH (NOLOCK)  ON  F2.COMP_CODE    = A.COMP_CODE
		                                                AND F2.AC_CD        = A.AC_CODE2 
		           LEFT  JOIN ABA200T F3 WITH (NOLOCK)  ON  F3.COMP_CODE    = A.COMP_CODE
		                                                AND F3.AC_CD        = A.AC_CODE3 
		           LEFT  JOIN ABA200T F4 WITH (NOLOCK)  ON  F4.COMP_CODE    = A.COMP_CODE
		                                                AND F4.AC_CD        = A.AC_CODE4 
		           LEFT  JOIN ABA200T F5 WITH (NOLOCK)  ON  F5.COMP_CODE    = A.COMP_CODE
		                                                AND F5.AC_CD        = A.AC_CODE5 
		           LEFT  JOIN ABA200T F6 WITH (NOLOCK)  ON  F6.COMP_CODE    = A.COMP_CODE
		                                                AND F6.AC_CD        = A.AC_CODE6 
		           LEFT  JOIN BCM100T G  WITH (NOLOCK)  ON  G.COMP_CODE     = A.COMP_CODE
		                                                AND G.CUSTOM_CODE   = A.CUSTOM_CODE
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK)  ON  M1.COMP_CODE    = A.COMP_CODE
		                                                AND M1.MAIN_CODE    = 'A070'
		                                                AND M1.SUB_CODE     = A.REASON_CODE
		     WHERE A.COMP_CODE  = #{S_COMP_CODE}
		       AND A.EX_DATE    = #{EX_DATE}
		       AND A.EX_NUM     = #{EX_NUM}
		       AND A.AP_STS     = #{AP_STS}
		       AND A.INPUT_PATH = #{INPUT_PATH}
		       AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
		     ORDER BY A.EX_SEQ
	</select>
	<select id="agj231ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">		
	/* --UAgj01Krv.Cagj230UKR[fnagj230nq] Query1	*/

    /*  1. 날짜 포맷 유형 설정> --------------------------------------------------------------------------------------    */
        DECLARE         @DateFormat         NVARCHAR(10)
    
        SELECT TOP 1 @DateFormat = M1.CODE_NAME
        FROM   BSA100T M1 WITH (NOLOCK)
        WHERE  M1.COMP_CODE = #{S_COMP_CODE}
        AND    M1.MAIN_CODE = N'B044'
        AND    M1.REF_CODE1 = N'Y'
    
        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
    
    /*  2.임시테이블 생성(사업장과 거래처코드 조건이 들어갈 경우 차대변금액 일부만 보이는 문제 때문에 조건을 먼저 처리함 */
        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#AGJ110T_20130315'))
            DROP TABLE #AGJ110T_20130315
    
        SELECT  COMP_CODE
              , EX_DATE
              , EX_NUM
        INTO    #AGJ110T_20130315
        FROM    AGJ110T WITH (NOLOCK)
        WHERE   COMP_CODE      = #{S_COMP_CODE}
        AND     EX_DATE       &gt;= #{EX_DATE_FR}
        AND     EX_DATE       &lt;= #{EX_DATE_TO}
        AND    (MOD_DIVI      IS NULL OR MOD_DIVI = '')
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
		AND DIV_CODE IN
		<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>         
	</if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
       	AND	(	CUSTOM_CODE    =        #{CUSTOM_CODE}		
       			OR
       			CUSTOM_NAME LIKE N'%' + #{CUSTOM_NAME} + '%'
       		)
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
        AND  CUSTOM_CODE    =        #{CUSTOM_CODE}	
        </if>
        <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
        AND  CUSTOM_NAME LIKE N'%' + #{CUSTOM_NAME} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(AMT_I_FR)">
        AND   AMT_I         &gt;= #{AMT_I_FR}   
        </if>
        <if test="@foren.Ognl@isNotEmpty(AMT_I_TO)">
        AND   AMT_I         &lt;= #{AMT_I_TO} 
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
        AND   DEPT_CODE          = #{DEPT_CODE}   
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
        AND (CASE 'A6' WHEN AC_CODE1 THEN AC_DATA1
                       WHEN AC_CODE2 THEN AC_DATA2
                       WHEN AC_CODE3 THEN AC_DATA3
                       WHEN AC_CODE4 THEN AC_DATA4
                       WHEN AC_CODE5 THEN AC_DATA5
                       WHEN AC_CODE6 THEN AC_DATA6
                       ELSE '' 
                       END)        = #{PERSON_NUMB}
        </if>
        GROUP  BY COMP_CODE, EX_DATE, EX_NUM
    
    	/*  3. Main Query> ------------------------------------------------------------------------------------------------------ */
        SELECT  CAST(0 AS BIT)                                                       AS CHK
              , A.AP_STS                                                             AS AP_STS
              , CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN ''
                     ELSE REPLACE(
                          REPLACE(
                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
                                             , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
                                             , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
                END                                                                  AS EX_DATE
              , A.EX_NUM                                                             AS EX_NUM
              , CASE WHEN ISNULL(A.AC_DATE, '') = '' THEN ''
                     ELSE REPLACE(
                          REPLACE(
                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AC_DATE, 1, 4))
                                             , 'MM'  , SUBSTRING(A.AC_DATE, 5, 2))
                                             , 'DD'  , SUBSTRING(A.AC_DATE, 7, 2))
                END                                                                  AS AC_DATE
              , A.SLIP_NUM                                                           AS SLIP_NUM
              , SUM(ISNULL(A.DR_AMT_I, 0))                                           AS DR_AMT_I
              , SUM(ISNULL(A.CR_AMT_I, 0))                                           AS CR_AMT_I
              , A.INPUT_PATH                                                         AS INPUT_PATH
              , uniLITE.fnGetLastChargeName(A.COMP_CODE,A.EX_DATE, A.EX_NUM, '2')    AS CHARGE_NAME
              , uniLITE.fnGetLastInputDate(A.COMP_CODE ,A.EX_DATE, A.EX_NUM, '2')    AS INPUT_DATE
              , MAX(ISNULL(M1.CODE_NAME, ''))                                        AS AP_CHARGE_NAME
              , CASE WHEN ISNULL(A.AP_DATE, '') = '' THEN ''
                     ELSE REPLACE(
                          REPLACE(
                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AP_DATE, 1, 4))
                                             , 'MM'  , SUBSTRING(A.AP_DATE, 5, 2))
                                             , 'DD'  , SUBSTRING(A.AP_DATE, 7, 2))
                END                                                                  AS AP_DATE
              , A.INPUT_DIVI
              , MAX(A.REMARK)                                                                   AS REMARK
              , A.CHARGE_CODE
          FROM    (
                SELECT  A.COMP_CODE
                      , A.EX_DATE
                      , A.EX_NUM
                      , A.AC_DATE
                      , A.SLIP_NUM
                      , CASE WHEN A.DR_CR = '1' THEN SUM(ISNULL(A.AMT_I, 0)) ELSE 0.0 END DR_AMT_I
                      , CASE WHEN A.DR_CR = '2' THEN SUM(ISNULL(A.AMT_I, 0)) ELSE 0.0 END CR_AMT_I
                      , A.AP_STS
                      , A.INPUT_PATH
                      , A.AP_CHARGE_CODE
                      , A.AP_DATE
                      , A.INPUT_DIVI
                      , 'false' AS CHK
                      , A.CHARGE_CODE
                      , A.DIV_CODE
                      , MAX(A.REMARK) AS REMARK
                FROM                AGJ110T             A WITH (NOLOCK)
                        INNER JOIN  #AGJ110T_20130315   B               ON B.COMP_CODE  = A.COMP_CODE
                                                                       AND B.EX_DATE    = A.EX_DATE
                                                                       AND B.EX_NUM     = A.EX_NUM
                         LEFT JOIN  BSA100T             C WITH (NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
                                                                       AND C.MAIN_CODE  = N'A011'
                                                                       AND C.SUB_CODE   = A.INPUT_PATH
                                                                       --AND ISNULL(C.REF_CODE8, '') != 'Y'  -- 조회 대상 제외
                WHERE   A.COMP_CODE = #{S_COMP_CODE}
                AND     A.EX_DATE  &gt;= #{EX_DATE_FR}
                AND     A.EX_DATE  &lt;= #{EX_DATE_TO}
                AND    (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
                AND    ((A.DRAFT_CODE = '3') OR (ISNULL(C.REF_CODE10, '') = 'Y'))
                AND    (CASE WHEN A.DRAFT_YN  = ''   THEN 'N'
                             WHEN A.DRAFT_YN IS NULL THEN 'N'
                             ELSE A.DRAFT_YN
                        END) = (CASE WHEN A.AGREE_YN  = ''   THEN 'N'
                                     WHEN A.AGREE_YN IS NULL THEN 'N'
                                     ELSE A.AGREE_YN
                                END)
                <if test="@foren.Ognl@isNotEmpty(INPUT_DATE_FR)">
                AND  A.INPUT_DATE        &gt;= #{INPUT_DATE_FR}      
                </if>
                <if test="@foren.Ognl@isNotEmpty(INPUT_DATE_TO)">
                AND   A.INPUT_DATE        &lt;= #{INPUT_DATE_TO} 
                </if>
                <if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE)">
                AND   A.IN_DEPT_CODE       = #{IN_DEPT_CODE} 
                </if>
                <if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
                AND   A.CHARGE_CODE        = #{CHARGE_CODE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
                AND   A.INPUT_PATH         = #{INPUT_PATH}
                </if>
                <if test="@foren.Ognl@isNotEmpty(AP_STS)">
                AND   A.AP_STS             = #{AP_STS}
                </if>
                <if test="@foren.Ognl@isNotEmpty(EX_NUM_FR)">
                AND   A.EX_NUM            &gt;= #{EX_NUM_FR}
                </if>
                <if test="@foren.Ognl@isNotEmpty(EX_NUM_TO)">
                AND   A.EX_NUM            &lt;= #{EX_NUM_TO}  
                </if>
                <if test="@foren.Ognl@isNotEmpty(AC_DATE_FR)">
                AND   A.AC_DATE           &gt;= #{AC_DATE_FR}  
                </if>
                <if test="@foren.Ognl@isNotEmpty(AC_DATE_TO)">
                AND   A.AC_DATE          &lt;= #{AC_DATE_TO}
                </if>
                <if test="@foren.Ognl@isNotEmpty(SLIP_NUM_FR)">
                AND   A.SLIP_NUM          &gt;= #{SLIP_NUM_FR}               
                </if>
                <if test="@foren.Ognl@isNotEmpty(SLIP_NUM_TO)">
                AND   A.SLIP_NUM         &lt;= #{SLIP_NUM_TO}
                </if>
                <if test="@foren.Ognl@isNotEmpty(AP_CHARGE_CODE)">
                AND   A.AP_CHARGE_CODE     = #{AP_CHARGE_CODE}
                </if>
                
                
                
                
                GROUP   BY  A.COMP_CODE     , A.EX_DATE         , A.EX_NUM  , A.AC_DATE , A.SLIP_NUM    , A.DR_CR
                          , A.AP_STS        , A.AP_CHARGE_CODE  , A.AP_DATE
                          , A.INPUT_PATH    , A.INPUT_DIVI, A.CHARGE_CODE, A.DIV_CODE,A.EX_SEQ
                ) A
                LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                                      AND M1.MAIN_CODE  = 'A009' 
                                                      AND M1.SUB_CODE   = A.AP_CHARGE_CODE
                LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                                      AND M2.MAIN_CODE  = 'A011'
                                                      AND M2.SUB_CODE   = A.INPUT_PATH
    
        GROUP   BY  A.COMP_CODE , A.EX_DATE         , A.EX_NUM  , A.AC_DATE     , A.SLIP_NUM
                  , A.AP_STS    , A.AP_CHARGE_CODE  , A.AP_DATE , A.INPUT_PATH  , A.INPUT_DIVI  , M1.CODE_NAME, A.CHARGE_CODE
    
        ORDER   BY A.EX_DATE    , A.EX_NUM

	</select>
	<select id="agj231ukrServiceImpl.getMaxAutoNum" parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(AUTO_NUM),0) +1 AS "MAX_AUTO_NUM" FROM L_AGJ230T  WITH (NOLOCK)
	</select>
	<update id="agj231ukrServiceImpl.insertLog" parameterType="Map">
		INSERT INTO L_AGJ230T (                                                                                                                       
			                                                                                                                                        
     	KEY_VALUE              	  ,COMP_CODE				, AUTO_NUM	                                                                                                         
 		     <if test="@foren.Ognl@isNotEmpty(EX_DATE    )">,EX_DATE 					</if><if test="@foren.Ognl@isNotEmpty(EX_NUM      )">,EX_NUM            		
 		</if><if test="@foren.Ognl@isNotEmpty(AC_DATE    )">,AC_DATE					</if><if test="@foren.Ognl@isNotEmpty(SLIP_NUM    )">,SLIP_NUM                                                                                                        
	   	</if><if test="@foren.Ognl@isNotEmpty(AP_STS     )">,AP_STS               		</if><if test="@foren.Ognl@isNotEmpty(INPUT_DATE  )">,INPUT_DATE             	   	                                                                                     
	   	</if><if test="@foren.Ognl@isNotEmpty(INPUT_PATH )">,INPUT_PATH                	</if><if test="@foren.Ognl@isNotEmpty(INPUT_DIVI  )">,INPUT_DIVI                                                                                                      
	   	</if><if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">,CHARGE_CODE         		</if><if test="@foren.Ognl@isNotEmpty(CHARGE_NAME )">,CHARGE_NAME          	   	                                                                                     
	   	</if><if test="@foren.Ognl@isNotEmpty(DR_AMT_I   )">,DR_AMT_I           	   	</if><if test="@foren.Ognl@isNotEmpty(CR_AMT_I    )">,CR_AMT_I   	   	                                                                                   
	   	</if>                                                                                                                                                         
                                                                                                                                              
	   	                                                                                                                                        
	   ,INSERT_DB_USER       	   	,INSERT_DB_TIME       	      	,UPDATE_DB_USER       	   	,UPDATE_DB_TIME                                     
                                                                                                                                              
		) VALUES (                                                                                                                                  
		 	#{KEY_VALUE}   ,#{S_COMP_CODE}		,#{AUTO_NUM}					        	   	
			     <if test="@foren.Ognl@isNotEmpty(EX_DATE    )">,#{EX_DATE}     		</if><if test="@foren.Ognl@isNotEmpty(EX_NUM     )">,#{EX_NUM}            		
 			</if><if test="@foren.Ognl@isNotEmpty(AC_DATE    )">,#{AC_DATE}				</if><if test="@foren.Ognl@isNotEmpty(SLIP_NUM   )">,#{SLIP_NUM}                                                                       
			</if><if test="@foren.Ognl@isNotEmpty(AP_STS     )">,#{AP_STS}             	</if><if test="@foren.Ognl@isNotEmpty(INPUT_DATE )">,#{INPUT_DATE}             	   				
			</if><if test="@foren.Ognl@isNotEmpty(INPUT_PATH )">,#{INPUT_PATH}  	   	</if><if test="@foren.Ognl@isNotEmpty(INPUT_DIVI )">,#{INPUT_DIVI}                 
			</if><if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">,#{CHARGE_CODE}         </if><if test="@foren.Ognl@isNotEmpty(CHARGE_NAME)">,#{CHARGE_NAME}          	   	
			</if><if test="@foren.Ognl@isNotEmpty(DR_AMT_I   )">,#{DR_AMT_I}    	   	</if><if test="@foren.Ognl@isNotEmpty(CR_AMT_I   )">,#{CR_AMT_I}           	   	
			</if>                                                                                                  
			,#{S_USER_ID}           		,GETDATE()           			,#{S_USER_ID}           ,GETDATE()              
                                             
	   	)
	</update>
	<update id="agj231ukrServiceImpl.SP_ACCNT_ApproveSlip" parameterType="Map" statementType="CALLABLE">
	   
		<!-- 1) parameterMap 정의 후 사용하는 법  -->
		<!-- {call SP_SALES_SalesOrder (?,?,?,?)} -->
		
		<!-- 2) parameterMap 없이 사용하는 법  -->
		{call USP_ACCNT_ApproveSlip (
			#{CompCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{UserLang, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{UserID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	   
	 </update>
	 <select id="agj231ukrServiceImpl.selectLog" parameterType="Map" resultType="rMap">	
		SELECT KEY_VALUE    	,AUTO_NUM    ,CASE WHEN SLIP_NUM = 0 THEN NULL ELSE SLIP_NUM END AS  SLIP_NUM  ,AP_STS     , AC_DATE, AP_DATE, AP_CHARGE_CODE, AP_CHARGE_NAME     	   	
		FROM  L_AGJ230T  WITH (NOLOCK)
		WHERE KEY_VALUE = #{KEY_VALUE}
		  AND AUTO_NUM = #{AUTO_NUM}
	</select>
</mapper>