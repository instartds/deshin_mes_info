<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agj400skrServiceImpl">
	
	<select id="agj400skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		

     --   날짜 포맷 유형 설정 
     DECLARE         @DateFormat         NVARCHAR(10)
 
     SELECT TOP 1 @DateFormat = M1.CODE_NAME
     FROM   BSA100T M1 WITH (NOLOCK)
     WHERE  M1.COMP_CODE = #{S_COMP_CODE}
     AND    M1.MAIN_CODE = N'B044'
     AND    M1.REF_CODE1 = N'Y'
 
     SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
     
     --   그룹웨어 연동여부 설정 
     DECLARE         @LinkedGW           NVARCHAR(01)
 
     SELECT TOP 1 @LinkedGW = M1.REF_CODE1
     FROM   BSA100T M1 WITH (NOLOCK)
     WHERE  M1.COMP_CODE = #{S_COMP_CODE}
     AND    M1.MAIN_CODE = N'A169'
     AND    M1.SUB_CODE  = N'20'
 
     SET @LinkedGW = ISNULL(@LinkedGW, 'N')
         
	SELECT       A.COMP_CODE                                                                 AS COMP_CODE
               , ROW_NUMBER() OVER (ORDER BY A.PAY_DATE, A.PAY_DRAFT_NO, B.SEQ)              AS ORDER_SEQ
               , M10.CODE_NAME                                                               AS STATUS
               , M14.CODE_NAME                                                               AS CONFIRM_YN
               , A.PAY_DRAFT_NO                                                              AS PAY_DRAFT_NO
               , B.SEQ                                                                       AS SEQ
               , A.PAY_DATE                                                                  AS PAY_DATE
               , A.SLIP_DATE                                                                 AS PAY_SLIP_DATE
               , A.TITLE                                                                     AS TITLE
               , F1.TOT_AMT_I                                                                AS TOTAL_AMT_I
               , M6.CODE_NAME                                                                AS GUBUN
               , M4.CODE_NAME                                                                AS PAY_TYPE
               , M5.CODE_NAME                                                                AS MAKE_SALE
               , B.ACCNT                                                                     AS ACCNT
               , C2.ACCNT_NAME                                                               AS ACCNT_NAME
               , M2.CODE_NAME                                                                AS PAY_DIVI
               , M1.CODE_NAME                                                                AS PROOF_DIVI
    
               , B.QTY                                                                       AS QTY
               , B.PRICE                                                                     AS PRICE
    
    
               , B.SUPPLY_AMT_I                                                              AS SUPPLY_AMT_I
               , B.TAX_AMT_I                                                                 AS TAX_AMT_I
               , B.ADD_REDUCE_AMT_I                                                          AS ADD_REDUCE_AMT_I
               , B.TOT_AMT_I                                                                 AS TOT_AMT_I
               , CASE WHEN ISNULL(M2.REF_CODE2, '') = 'C' THEN B.CUSTOM_NAME
                      ELSE ISNULL(C1.CUSTOM_NAME, B.CUSTOM_NAME)
                 END                                                                         AS CUSTOM_NAME
               ,(SUBSTRING(C1.COMPANY_NUM,1,3) + '-' +
	             SUBSTRING(C1.COMPANY_NUM,4,2) + '-' +
	             SUBSTRING(C1.COMPANY_NUM,6,5))                                              AS COMPANY_NUM  
               , M7.CODE_NAME                                                                AS AGENT_TYPE
               , M12.CODE_NAME                                                               AS AGENT_TYPE2
               , M13.CODE_NAME                                                               AS AGENT_TYPE3
               , M8.CODE_NAME                                                                AS EB_YN
               , B.CRDT_NUM                                                                  AS CRDT_NUM
               , C7.CRDT_NAME                                                                AS CRDT_NAME
               , uniLITE.fnCipherDecrypt(C7.CRDT_FULL_NUM, '')                   			 AS CRDT_FULL_NUM
               , B.APP_NUM                                                                   AS APP_NUM
               , M9.CODE_NAME                                                                AS REASON_CODE
               , B.PAY_CUSTOM_CODE                                                           AS PAY_CUSTOM_CODE
               , C4.PAY_CUSTOM_NAME                                                          AS PAY_CUSTOM_NAME
               , CASE WHEN ISNULL(B.SEND_DATE, '') = '' THEN ''
                      ELSE REPLACE(
                           REPLACE(
                           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.SEND_DATE, 1, 4))
                                              , 'MM'  , SUBSTRING(B.SEND_DATE, 5, 2))
                                              , 'DD'  , SUBSTRING(B.SEND_DATE, 7, 2))
                 END                                                                         AS SEND_DATE
               , CASE WHEN ISNULL(B.BILL_DATE, '') = '' THEN ''
                      ELSE REPLACE(
                           REPLACE(
                           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.BILL_DATE, 1, 4))
                                              , 'MM'  , SUBSTRING(B.BILL_DATE, 5, 2))
                                              , 'DD'  , SUBSTRING(B.BILL_DATE, 7, 2))
                 END                                                                         AS BILL_DATE
               , B.SAVE_CODE                                                                 AS SAVE_CODE
               , C6.SAVE_NAME                                                                AS SAVE_NAME
               , uniLITE.fnCipherDecrypt(C6.BANK_ACCOUNT, '')                                AS OUT_BANKBOOK_NUM
               , C3.PJT_NAME                                                                 AS PJT_NAME
               , D1.NAME                                                                     AS DRAFTER
               , D2.NAME                                                                     AS PAY_USER
               , B.DEPT_NAME                                                                 AS DEPT_NAME
               , B.DIV_CODE                                                                  AS DIV_CODE
               , C8.DIV_NAME                                                                 AS DIV_NAME
               , CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN ''
                      ELSE REPLACE(
                           REPLACE(
                           REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
                                              , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
                                              , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
                 END                                                                         AS EX_DATE
               , A.EX_NUM                                                                    AS EX_NUM
               , M3.CODE_NAME                                                                AS AP_STS
               , A.FILE_NUM
               , B.BOOK_CODE													 AS BOOK_CODE
			   , C10.BOOK_NAME													 AS BOOK_NAME
			   , C10.BANK_CODE													 
			   , c11.CUSTOM_NAME                                                 AS BANK_NAME
			   , C10.BANKBOOK_NAME												 
			   , uniLITE.fnCipherDecrypt(C10.BANKBOOK_NUM, '') 					 AS CUST_BOOK_ACCOUNT
			   , B.USE_DATE
			   , B.MONEY_UNIT
			   , B.EXCHG_RATE_O
			   , B.FOR_AMT_I
         FROM                AGJ400T   A  WITH (NOLOCK)
                 INNER JOIN  AGJ410T   B  WITH (NOLOCK) ON B.COMP_CODE           = A.COMP_CODE
                                                       AND B.PAY_DRAFT_NO        = A.PAY_DRAFT_NO
                 LEFT  JOIN  (
                             SELECT  COMP_CODE, EX_DATE, EX_NUM, AP_STS
                             FROM    AGJ110T WITH (NOLOCK)
                             WHERE   COMP_CODE    = #{S_COMP_CODE}
                             AND     INPUT_PATH   = '80'
                             AND     MOD_DIVI    IS NULL
                             GROUP BY COMP_CODE, EX_DATE, EX_NUM, AP_STS
                             )         E                ON E.COMP_CODE           = A.COMP_CODE
                                                       AND E.EX_DATE             = A.EX_DATE
                                                       AND E.EX_NUM              = A.EX_NUM
                 LEFT  JOIN  BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE          = B.COMP_CODE
                                                       AND C1.CUSTOM_CODE        = B.CUSTOM_CODE
                 LEFT  JOIN  ABA400T   C2 WITH (NOLOCK) ON C2.COMP_CODE          = B.COMP_CODE
                                                       AND C2.ACCNT              = B.ACCNT
                 LEFT  JOIN  BCM600T   C3 WITH (NOLOCK) ON C3.COMP_CODE          = B.COMP_CODE
                                                       AND C3.PJT_CODE           = B.PJT_CODE
                 LEFT  JOIN  ABH200TV  C4 WITH (NOLOCK) ON C4.COMP_CODE          = B.COMP_CODE
                                                       AND C4.PEND_CODE          = B.PEND_CODE
                                                       AND C4.PAY_CUSTOM_CODE    = B.PAY_CUSTOM_CODE
                 LEFT  JOIN  AFS100T   C6 WITH (NOLOCK) ON C6.COMP_CODE          = B.COMP_CODE
                                                       AND C6.SAVE_CODE          = B.SAVE_CODE
                 LEFT  JOIN  ABA500T   C7 WITH (NOLOCK) ON C7.COMP_CODE          = B.COMP_CODE
                                                       AND C7.CRDT_NUM           = B.CRDT_NUM
                 LEFT  JOIN  BOR120T   C8 WITH (NOLOCK) ON C8.COMP_CODE          = B.COMP_CODE
                                                       AND C8.DIV_CODE           = B.DIV_CODE
                 LEFT  JOIN  HUM100T   D1 WITH (NOLOCK) ON D1.COMP_CODE          = A.COMP_CODE
                                                       AND D1.PERSON_NUMB        = A.DRAFTER
                 LEFT  JOIN  HUM100T   D2 WITH (NOLOCK) ON D2.COMP_CODE          = A.COMP_CODE
                                                       AND D2.PERSON_NUMB        = A.PAY_USER
                 LEFT  JOIN  (
                             SELECT  COMP_CODE
                                   , PAY_DRAFT_NO
                                   , SUM(TOT_AMT_I) AS TOT_AMT_I
                             FROM    AGJ410T WITH (NOLOCK)
                             WHERE   COMP_CODE = #{S_COMP_CODE}
                             GROUP   BY  COMP_CODE, PAY_DRAFT_NO
                             )         F1               ON F1.COMP_CODE          = A.COMP_CODE
                                                       AND F1.PAY_DRAFT_NO       = A.PAY_DRAFT_NO
                 LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE          = B.COMP_CODE
                                                       AND M1.MAIN_CODE          = 'A173'             -- 증빙구분
                                                       AND M1.SUB_CODE           = B.PROOF_DIVI
                 LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE          = B.COMP_CODE
                                                       AND M2.MAIN_CODE          = 'A172'             -- 결제방법
                                                       AND M2.SUB_CODE           = B.PAY_DIVI
                 LEFT  JOIN  BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE          = B.COMP_CODE
                                                       AND M3.MAIN_CODE          = 'A014'
                                                       AND M3.SUB_CODE           = E.AP_STS
                 LEFT  JOIN  BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE          = B.COMP_CODE
                                                       AND M4.MAIN_CODE          = 'A177'             -- 지출유형
                                                       AND M4.SUB_CODE           = B.PAY_TYPE
                 LEFT  JOIN  BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE          = B.COMP_CODE
                                                       AND M5.MAIN_CODE          = 'A006'
                                                       AND M5.SUB_CODE           = B.MAKE_SALE        -- 제조판관구분
                 LEFT  JOIN  BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE          = B.COMP_CODE
                                                       AND M6.MAIN_CODE          = 'A178'
                                                       AND M6.SUB_CODE           = B.GUBUN            -- 구분
                 LEFT  JOIN  BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE          = C1.COMP_CODE
                                                       AND M7.MAIN_CODE          = 'B055'
                                                       AND M7.SUB_CODE           = C1.AGENT_TYPE
                 LEFT  JOIN  BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE          = B.COMP_CODE
                                                       AND M8.MAIN_CODE          = 'A149'
                                                       AND M8.SUB_CODE           = B.EB_YN
                 LEFT  JOIN  BSA100T   M9 WITH (NOLOCK) ON M9.COMP_CODE          = B.COMP_CODE
                                                       AND M9.MAIN_CODE          = 'A070'
                                                       AND M9.SUB_CODE           = B.REASON_CODE
                 LEFT  JOIN  BSA100T  M10 WITH (NOLOCK) ON M10.COMP_CODE         = A.COMP_CODE
                                                       AND M10.MAIN_CODE         = 'A134'
                                                       AND M10.SUB_CODE          = CASE WHEN @LinkedGW = 'Y' THEN '0' --ISNULL(C.GW_STATUS, '0')
                                                                                        ELSE A.STATUS
                                                                                   END
                 LEFT  JOIN  BSA100T  M12 WITH (NOLOCK) ON M12.COMP_CODE         = C1.COMP_CODE
                                                       AND M12.MAIN_CODE         = 'B111'
                                                       AND M12.SUB_CODE          = C1.AGENT_TYPE2
                 LEFT  JOIN  BSA100T  M13 WITH (NOLOCK) ON M13.COMP_CODE         = C1.COMP_CODE
                                                       AND M13.MAIN_CODE         = 'B112'
                                                       AND M13.SUB_CODE          = C1.AGENT_TYPE3
                 LEFT  JOIN  BSA100T  M14 WITH (NOLOCK) ON M14.COMP_CODE         = A.COMP_CODE
                                                       AND M14.MAIN_CODE         = 'A207'
                                                       AND M14.SUB_CODE          = A.CONFIRM_YN
                 LEFT  JOIN  BCM130T  C10 WITH (NOLOCK) ON C10.COMP_CODE         = B.COMP_CODE
		                                               AND C10.CUSTOM_CODE       = B.CUSTOM_CODE
		                                               AND C10.BOOK_CODE         = B.BOOK_CODE
		         LEFT JOIN	 BCM100T  c11 WITH (NOLOCK) ON C11.COMP_CODE   = C10.COMP_CODE
													   AND C11.CUSTOM_CODE = C10.BANK_CODE
											 		   AND C11.CUSTOM_TYPE = '4'                                      
         WHERE   A.COMP_CODE        = #{S_COMP_CODE}
         AND     A.PAY_DATE        &gt;= #{PAY_DATE_FR}
         AND     A.PAY_DATE        &lt;= #{PAY_DATE_TO}
    	<if test="@foren.Ognl@isNotEmpty(PAY_SLIP_DATE_FR)">
    	 AND     A.SLIP_DATE       &gt;= #{PAY_SLIP_DATE_FR}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(PAY_SLIP_DATE_TO)">
    	 AND     A.SLIP_DATE       &lt;= #{PAY_SLIP_DATE_TO}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(DRAFTER)">
         AND     A.DRAFTER       LIKE '%'+ #{DRAFTER} +'%'
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(NAME)">
         AND     D1.NAME         LIKE '%'+ #{NAME} +'%'
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(PAY_DIVI)">
         AND     B.PAY_DIVI         = #{PAY_DIVI}
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(TITLE)">
         AND     A.TITLE         LIKE '%'+ #{TITLE} +'%'
    	</if>
    	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
         AND     B.DIV_CODE        IN 
	    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
						#{item}
			</foreach>
		</if>
    	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
         AND     B.DEPT_CODE     LIKE #{DEPT_CODE} +'%'
    	 </if>
    	<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
         AND     B.DEPT_NAME     LIKE '%'+ #{DEPT_NAME} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(PAY_USER)">
         AND     A.PAY_USER      LIKE #{PAY_USER} +'%'
     	</if>
   	 	<if test="@foren.Ognl@isNotEmpty(USER_NAME)">
         AND     D2.NAME         LIKE '%'+ #{USER_NAME} +'%'
    	</if>
    	
	    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND   B.CUSTOM_CODE     = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">	
				AND   B.CUSTOM_CODE  LIKE  #{CUSTOM_CODE} + '%'
		</if>

		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND   C1.CUSTOM_NAME     LIKE '%' + #{CUSTOM_NAME} + '%'
		</if>       	
     	
    	<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
         AND     B.PJT_CODE      LIKE #{PJT_CODE} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
         AND     C3.PJT_NAME     LIKE '%'+ #{PJT_NAME} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(PAY_TYPE)">
         AND     B.PAY_TYPE      LIKE #{PAY_TYPE} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(GUBUN)">
         AND     B.GUBUN         LIKE '%'+ #{GUBUN} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(PAY_DRAFT_NO)">
         AND     A.PAY_DRAFT_NO  LIKE '%'+ #{PAY_DRAFT_NO} +'%'
     	</if>
    	<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
         AND     C1.AGENT_TYPE      = #{AGENT_TYPE}
     	</if>
	</select>

</mapper>