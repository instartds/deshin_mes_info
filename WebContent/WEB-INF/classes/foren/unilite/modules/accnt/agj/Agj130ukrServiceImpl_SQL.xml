<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agj130ukrServiceImpl">
<!-- 조회  -->
	<select id="agj130ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/*agj130ukrServiceImpl.selectList*/
		SELECT 
			   A._EXCEL_JOBID		, A._EXCEL_ROWNUM		, A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG	, A.COMP_CODE			, A.DIV_CODE
			 , A.DEPT_CODE			, A.DEPT_NAME			, A.BILL_DIV_CODE
			 , A.IN_DIV_CODE		, A.IN_DEPT_CODE		, A.IN_DEPT_NAME
			 , A.EX_DATE			, A.EX_NUM				, A.EX_SEQ
			 , A.SLIP_DIVI			, A.DR_CR				, A.CASH_NUM
			 , A.ACCNT				, B.ACCNT_NAME
			 , A.P_ACCNT			, A.CUSTOM_CODE			, A.CUSTOM_NAME
			 , A.MONEY_UNIT			, A.EXCHG_RATE_O
			 , A.AMT_I				, A.FOR_AMT_I			, A.REMARK
			 , A.AC_CODE1			, A.AC_CODE2			, A.AC_CODE3
			 , A.AC_CODE4			, A.AC_CODE5			, A.AC_CODE6
			 , A.AC_DATA1			, A.AC_DATA2			, A.AC_DATA3
			 , A.AC_DATA4			, A.AC_DATA5			, A.AC_DATA6
			 , A.AC_DATA_NAME1		, A.AC_DATA_NAME2		, A.AC_DATA_NAME3
			 , A.AC_DATA_NAME4		, A.AC_DATA_NAME5		, A.AC_DATA_NAME6
			 , A.BOOK_CODE1			, A.BOOK_CODE2
			 , A.BOOK_DATA1			, A.BOOK_DATA2
			 , A.BOOK_DATA_NAME1	, A.BOOK_DATA_NAME2
			 , A.AC_CTL1			, A.AC_CTL2				, A.AC_CTL3
			 , A.AC_CTL4			, A.AC_CTL5				, A.AC_CTL6
			 , A.ACCNT_SPEC			, A.SPEC_DIVI			, A.PROFIT_DIVI
			 , A.JAN_DIVI			, A.PEND_YN				, A.PEND_CODE
			 , A.PEND_DATA_CODE		, A.BUDG_YN				, A.BUDGCTL_YN
			 , A.FOR_YN				, A.PROOF_KIND			, A.CREDIT_NUM
			 , A.CREDIT_CODE		, A.REASON_CODE			, A.POSTIT_YN
			 , A.POSTIT				, A.POSTIT_USER_ID		, A.INPUT_PATH
			 , A.INPUT_DIVI			, A.AUTO_SLIP_NUM		, A.CLOSE_FG
			 , A.INPUT_DATE			, A.INPUT_USER_ID		, A.CHARGE_CODE
			 , A.AP_STS				, A.AP_DATE				, A.AP_USER_ID
			 , A.AP_CHARGE_CODE		, A.AC_DATE				, A.SLIP_NUM
			 , A.SLIP_SEQ			, A.DRAFT_YN			, A.AGREE_YN
			 , A.MOD_USER_ID		, A.MOD_DIVI			, A.MOD_DATE
			 , A.REPORT_TYPE		, A.REMARK2				, A.DRAFT_CODE
			 , A.DRAFT_NO			, A.GW_DOC
			 , A.ASST_SUPPLY_AMT_I	, A.ASST_TAX_AMT_I		, A.ASST_DIVI
		  FROM					AGJ110T_XLS A	WITH (NOLOCK)
				INNER JOIN		ABA400T B		WITH (NOLOCK)
							 ON A.COMP_CODE	= B.COMP_CODE
							AND A.ACCNT		= B.ACCNT
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE = #{DIV_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(jobID)">
		   AND A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</if>
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>


<!-- Excel Upload  -->
	<insert id="agj130ukrServiceImpl.insertExcelAgj110T_XLS" parameterType="Map">
		/*agj130ukrServiceImpl.insertExcelAgj110T_XLS*/
		INSERT INTO AGJ110T_XLS
			 ( _EXCEL_JOBID		, _EXCEL_ROWNUM		, _EXCEL_HAS_ERROR	, _EXCEL_ERROR_MSG
			 , COMP_CODE		, EX_DATE
			 , EX_NUM			, EX_SEQ
			 , SLIP_DIVI		, DR_CR				, ACCNT
			 , P_ACCNT			, CUSTOM_CODE		, CUSTOM_NAME		, MONEY_UNIT
			 , EXCHG_RATE_O		, AMT_I				, FOR_AMT_I			, PROOF_KIND
			 , IN_DIV_CODE		, IN_DEPT_CODE		, IN_DEPT_NAME		, REMARK
			 , DIV_CODE			, DEPT_CODE			, DEPT_NAME			, BILL_DIV_CODE
			 , AC_DATA1			, AC_DATA2			, AC_DATA3			, AC_DATA4
			 , AC_DATA5			, AC_DATA6
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
			 /*  기타 필수 컬럼들 디폴트값 처리 */
			 , INPUT_PATH		, INPUT_DIVI		, INPUT_USER_ID		, INPUT_DATE
			 ) 
		VALUES 
			( #{_EXCEL_JOBID}	, #{_EXCEL_ROWNUM}	, #{_EXCEL_HAS_ERROR}, #{_EXCEL_ERROR_MSG}
			, #{COMP_CODE}		, REPLACE(#{EX_DATE}, '-', '')
			, ${EX_NUM}			, 0
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DR)">
			, '3'				, '1'				, #{ACCNT_DR}
		</if>
		<if test="@foren.Ognl@isEmpty(ACCNT_DR)">
			, '4'				, '2'				, #{ACCNT_CR}
		</if>
			, '99999'			, #{CUSTOM_CODE}	, #{CUSTOM_NAME}	, #{MONEY_UNIT}
			, ${EXCHG_RATE_O}	, ${AMT_I}			, ${AMT_I}			, #{PROOF_KIND}
			, #{DIV_CODE}		, #{DEPT_CODE}		, #{DEPT_NAME}		, #{REMARK}
			, #{DIV_CODE}		, #{DEPT_CODE}		, #{DEPT_NAME}		, #{DIV_CODE}
			, #{AC_DATA1}		, #{AC_DATA2}		, #{AC_DATA3}		, #{AC_DATA4}
			, #{AC_DATA5}		, #{AC_DATA6}
			, #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()
			, 'Z1'				, '1'				, #{S_USER_ID}		, REPLACE(#{EX_DATE}, '-', '')
			 )
	</insert>
	
	<insert id="agj130ukrServiceImpl.insertExcelAgj110T_XLS_BAK" parameterType="Map">
		/*agj130ukrServiceImpl.insertExcelAgj110T_XLS*/
		INSERT INTO AGJ110T_XLS(
			   _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE
			 , EX_DATE
			 , EX_NUM
			 , EX_SEQ
			 , SLIP_DIVI
			 , DR_CR
			 , CASH_NUM
			 , ACCNT
			 , P_ACCNT
			 , CUSTOM_CODE
			 , CUSTOM_NAME
			 , MONEY_UNIT
			 , EXCHG_RATE_O
			 , AMT_I
			 , FOR_AMT_I
			 , REMARK
			 , IN_DIV_CODE
			 , IN_DEPT_CODE
			 , IN_DEPT_NAME
			 , DIV_CODE
			 , DEPT_CODE
			 , DEPT_NAME
			 , BILL_DIV_CODE
			 , AC_CODE1
			 , AC_CODE2
			 , AC_CODE3
			 , AC_CODE4
			 , AC_CODE5
			 , AC_CODE6
			 , AC_DATA1
			 , AC_DATA2
			 , AC_DATA3
			 , AC_DATA4
			 , AC_DATA5
			 , AC_DATA6
			 , AC_DATA_NAME1
			 , AC_DATA_NAME2
			 , AC_DATA_NAME3
			 , AC_DATA_NAME4
			 , AC_DATA_NAME5
			 , AC_DATA_NAME6
			 , BOOK_CODE1
			 , BOOK_CODE2
			 , BOOK_DATA1
			 , BOOK_DATA2
			 , BOOK_DATA_NAME1
			 , BOOK_DATA_NAME2
			 , AC_CTL1
			 , AC_CTL2
			 , AC_CTL3
			 , AC_CTL4
			 , AC_CTL5
			 , AC_CTL6
			 , ACCNT_SPEC
			 , SPEC_DIVI
			 , PROFIT_DIVI
			 , JAN_DIVI
			 , PEND_YN
			 , PEND_CODE
			 , PEND_DATA_CODE
			 , BUDG_YN
			 , BUDGCTL_YN
			 , FOR_YN
			 , PROOF_KIND
			 , CREDIT_NUM
			 , CREDIT_CODE
			 , REASON_CODE
			 , POSTIT_YN
			 , POSTIT
			 , POSTIT_USER_ID
			 , INPUT_PATH
			 , INPUT_DIVI
			 , AUTO_SLIP_NUM
			 , CLOSE_FG
			 , INPUT_DATE
			 , INPUT_USER_ID
			 , CHARGE_CODE
			 , AP_STS
			 , AP_DATE
			 , AP_USER_ID
			 , AP_CHARGE_CODE
			 , AC_DATE
			 , SLIP_NUM
			 , SLIP_SEQ
			 , DRAFT_YN
			 , AGREE_YN
			 , MOD_USER_ID
			 , MOD_DIVI
			 , MOD_DATE
			 , REPORT_TYPE
			 , REMARK2
			 , DRAFT_CODE
			 , DRAFT_NO
			 , GW_DOC
			 , ASST_SUPPLY_AMT_I
			 , ASST_TAX_AMT_I
			 , ASST_DIVI
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 ) 
		VALUES 
			( #{_EXCEL_JOBID}
			, #{_EXCEL_ROWNUM}
			, #{_EXCEL_HAS_ERROR}
			, #{_EXCEL_ERROR_MSG}
			, #{S_COMP_CODE}
			, #{EX_DATE}
			, ${EX_NUM}
			, ${EX_SEQ}
			, #{SLIP_DIVI}
			, #{DR_CR}
			, ${CASH_NUM}
			, #{ACCNT}
			, #{P_ACCNT}
			, #{CUSTOM_CODE}
			, #{CUSTOM_NAME}
			, #{MONEY_UNIT}
			, ${EXCHG_RATE_O}
			, ${AMT_I}
			, ${FOR_AMT_I}
			, #{REMARK}
			, #{IN_DIV_CODE}
			, #{IN_DEPT_CODE}
			, #{IN_DEPT_NAME}
			, #{DIV_CODE}
			, #{DEPT_CODE}
			, #{DEPT_NAME}
			, #{BILL_DIV_CODE}
			, #{AC_CODE1}
			, #{AC_CODE2}
			, #{AC_CODE3}
			, #{AC_CODE4}
			, #{AC_CODE5}
			, #{AC_CODE6}
			, #{AC_DATA1}
			, #{AC_DATA2}
			, #{AC_DATA3}
			, #{AC_DATA4}
			, #{AC_DATA5}
			, #{AC_DATA6}
			, #{AC_DATA_NAME1}
			, #{AC_DATA_NAME2}
			, #{AC_DATA_NAME3}
			, #{AC_DATA_NAME4}
			, #{AC_DATA_NAME5}
			, #{AC_DATA_NAME6}
			, #{BOOK_CODE1}
			, #{BOOK_CODE2}
			, #{BOOK_DATA1}
			, #{BOOK_DATA2}
			, #{BOOK_DATA_NAME1}
			, #{BOOK_DATA_NAME2}
			, #{AC_CTL1}
			, #{AC_CTL2}
			, #{AC_CTL3}
			, #{AC_CTL4}
			, #{AC_CTL5}
			, #{AC_CTL6}
			, #{ACCNT_SPEC}
			, #{SPEC_DIVI}
			, #{PROFIT_DIVI}
			, #{JAN_DIVI}
			, #{PEND_YN}
			, #{PEND_CODE}
			, #{PEND_DATA_CODE}
			, #{BUDG_YN}
			, #{BUDGCTL_YN}
			, #{FOR_YN}
			, #{PROOF_KIND}
			, uniLITE.fnCipherEncrypt(#{CREDIT_NUM}, '')
			, #{CREDIT_CODE}
			, #{REASON_CODE}
			, #{POSTIT_YN}
			, #{POSTIT}
			, #{POSTIT_USER_ID}
			, #{INPUT_PATH}
			, #{INPUT_DIVI}
			, #{AUTO_SLIP_NUM}
			, #{CLOSE_FG}
			, #{INPUT_DATE}
			, #{INPUT_USER_ID}
			, #{CHARGE_CODE}
			, #{AP_STS}
			, #{AP_DATE}
			, #{AP_USER_ID}
			, #{AP_CHARGE_CODE}
			, #{AC_DATE}
			, ${SLIP_NUM}
			, ${SLIP_SEQ}
			, #{DRAFT_YN}
			, #{AGREE_YN}
			, #{MOD_USER_ID}
			, #{MOD_DIVI}
			, #{MOD_DATE}
			, #{REPORT_TYPE}
			, #{REMARK2}
			, #{DRAFT_CODE}
			, #{DRAFT_NO}
			, #{GW_DOC}
			, ${ASST_SUPPLY_AMT_I}
			, ${ASST_TAX_AMT_I}
			, #{ASST_DIVI}
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
			 )
	</insert>
	
	
	

<!-- 수정  -->
	<update id="agj130ukrServiceImpl.updateDetail" parameterType="Map">
		/*agj130ukrServiceImpl.updateDetail*/
		UPDATE AGJ110T_XLS
		   SET 
			   SLIP_DIVI         = #{SLIP_DIVI}
			 , DR_CR             = #{DR_CR}
			 , CASH_NUM          = ${CASH_NUM}
			 , ACCNT             = #{ACCNT}
			 , P_ACCNT           = #{P_ACCNT}
			 , CUSTOM_CODE       = #{CUSTOM_CODE}
			 , CUSTOM_NAME       = #{CUSTOM_NAME}
			 , MONEY_UNIT        = #{MONEY_UNIT}
			 , EXCHG_RATE_O      = ${EXCHG_RATE_O}
			 , AMT_I             = ${AMT_I}
			 , FOR_AMT_I         = ${FOR_AMT_I}
			 , REMARK            = #{REMARK}
			 , IN_DIV_CODE       = #{IN_DIV_CODE}
			 , IN_DEPT_CODE      = #{IN_DEPT_CODE}
			 , IN_DEPT_NAME      = #{IN_DEPT_NAME}
			 , DIV_CODE          = #{DIV_CODE}
			 , DEPT_CODE         = #{DEPT_CODE}
			 , DEPT_NAME         = #{DEPT_NAME}
			 , BILL_DIV_CODE     = #{BILL_DIV_CODE}
			 , AC_CODE1          = #{AC_CODE1}
			 , AC_CODE2          = #{AC_CODE2}
			 , AC_CODE3          = #{AC_CODE3}
			 , AC_CODE4          = #{AC_CODE4}
			 , AC_CODE5          = #{AC_CODE5}
			 , AC_CODE6          = #{AC_CODE6}
			 , AC_DATA1          = #{AC_DATA1}
			 , AC_DATA2          = #{AC_DATA2}
			 , AC_DATA3          = #{AC_DATA3}
			 , AC_DATA4          = #{AC_DATA4}
			 , AC_DATA5          = #{AC_DATA5}
			 , AC_DATA6          = #{AC_DATA6}
			 , AC_DATA_NAME1     = #{AC_DATA_NAME1}
			 , AC_DATA_NAME2     = #{AC_DATA_NAME2}
			 , AC_DATA_NAME3     = #{AC_DATA_NAME3}
			 , AC_DATA_NAME4     = #{AC_DATA_NAME4}
			 , AC_DATA_NAME5     = #{AC_DATA_NAME5}
			 , AC_DATA_NAME6     = #{AC_DATA_NAME6}
			 , BOOK_CODE1        = #{BOOK_CODE1}
			 , BOOK_CODE2        = #{BOOK_CODE2}
			 , BOOK_DATA1        = #{BOOK_DATA1}
			 , BOOK_DATA2        = #{BOOK_DATA2}
			 , BOOK_DATA_NAME1   = #{BOOK_DATA_NAME1}
			 , BOOK_DATA_NAME2   = #{BOOK_DATA_NAME2}
			 , AC_CTL1           = #{AC_CTL1}
			 , AC_CTL2           = #{AC_CTL2}
			 , AC_CTL3           = #{AC_CTL3}
			 , AC_CTL4           = #{AC_CTL4}
			 , AC_CTL5           = #{AC_CTL5}
			 , AC_CTL6           = #{AC_CTL6}
			 , ACCNT_SPEC        = #{ACCNT_SPEC}
			 , SPEC_DIVI         = #{SPEC_DIVI}
			 , PROFIT_DIVI       = #{PROFIT_DIVI}
			 , JAN_DIVI          = #{JAN_DIVI}
			 , PEND_YN           = #{PEND_YN} 
			 , PEND_CODE         = #{PEND_CODE}
			 , PEND_DATA_CODE    = #{PEND_DATA_CODE}
			 , BUDG_YN           = #{BUDG_YN}
			 , BUDGCTL_YN        = #{BUDGCTL_YN}
			 , FOR_YN            = #{FOR_YN}
			 , PROOF_KIND        = #{PROOF_KIND}
			 , CREDIT_NUM        = #{CREDIT_NUM}
			 , CREDIT_CODE       = #{CREDIT_CODE}
			 , REASON_CODE       = #{REASON_CODE}
			 , POSTIT_YN         = #{POSTIT_YN}
			 , POSTIT            = #{POSTIT}
			 , POSTIT_USER_ID    = #{POSTIT_USER_ID}
			 , INPUT_PATH        = #{INPUT_PATH}
			 , INPUT_DIVI        = #{INPUT_DIVI}
			 , AUTO_SLIP_NUM     = #{AUTO_SLIP_NUM}
			 , CLOSE_FG          = #{CLOSE_FG}
			 , INPUT_DATE        = #{INPUT_DATE}
			 , INPUT_USER_ID     = #{INPUT_USER_ID}
			 , CHARGE_CODE       = #{CHARGE_CODE}
			 , AP_STS            = #{AP_STS}
			 , AP_DATE           = #{AP_DATE}
			 , AP_USER_ID        = #{AP_USER_ID}
			 , AP_CHARGE_CODE    = #{AP_CHARGE_CODE}
			 , AC_DATE           = #{AC_DATE}
			 , SLIP_NUM          = ${SLIP_NUM}
			 , SLIP_SEQ          = ${SLIP_SEQ}
			 , DRAFT_YN          = #{DRAFT_YN}
			 , AGREE_YN          = #{AGREE_YN}
			 , MOD_USER_ID       = #{MOD_USER_ID}
			 , MOD_DIVI          = #{MOD_DIVI}
			 , MOD_DATE          = #{MOD_DATE}
			 , REPORT_TYPE       = #{REPORT_TYPE}
			 , REMARK2           = #{REMARK2}
			 , DRAFT_CODE        = #{DRAFT_CODE}
			 , DRAFT_NO          = #{DRAFT_NO}
			 , GW_DOC            = #{GW_DOC}
			 , ASST_SUPPLY_AMT_I = ${ASST_SUPPLY_AMT_I}
			 , ASST_TAX_AMT_I    = ${ASST_TAX_AMT_I}
			 , ASST_DIVI         = #{ASST_DIVI}
			 , UPDATE_DB_USER    = #{S_USER_ID}
			 , UPDATE_DB_TIME    = GETDATE()
		WHERE _EXCEL_JOBID       = #{_EXCEL_JOBID}
		AND	 _EXCEL_ROWNUM       = ${_EXCEL_ROWNUM}
	</update>


<!-- 오류가 없는 데이터 실테이블에 insert -->
	<insert id="agj130ukrServiceImpl.insertList" parameterType="Map">
		INSERT INTO AGJ110T
		(
			   COMP_CODE
			 , EX_DATE
			 , EX_NUM
			 , EX_SEQ
			 , SLIP_DIVI
			 , DR_CR
			 , CASH_NUM
			 , ACCNT
			 , P_ACCNT
			 , CUSTOM_CODE
			 , CUSTOM_NAME
			 , MONEY_UNIT
			 , EXCHG_RATE_O
			 , AMT_I
			 , FOR_AMT_I
			 , REMARK
			 , IN_DIV_CODE
			 , IN_DEPT_CODE
			 , IN_DEPT_NAME
			 , DIV_CODE
			 , DEPT_CODE
			 , DEPT_NAME
			 , BILL_DIV_CODE
			 , AC_CODE1
			 , AC_CODE2
			 , AC_CODE3
			 , AC_CODE4
			 , AC_CODE5
			 , AC_CODE6
			 , AC_DATA1
			 , AC_DATA2
			 , AC_DATA3
			 , AC_DATA4
			 , AC_DATA5
			 , AC_DATA6
			 , AC_DATA_NAME1
			 , AC_DATA_NAME2
			 , AC_DATA_NAME3
			 , AC_DATA_NAME4
			 , AC_DATA_NAME5
			 , AC_DATA_NAME6
			 , BOOK_CODE1
			 , BOOK_CODE2
			 , BOOK_DATA1
			 , BOOK_DATA2
			 , BOOK_DATA_NAME1
			 , BOOK_DATA_NAME2
			 , AC_CTL1
			 , AC_CTL2
			 , AC_CTL3
			 , AC_CTL4
			 , AC_CTL5
			 , AC_CTL6
			 , ACCNT_SPEC
			 , SPEC_DIVI
			 , PROFIT_DIVI
			 , JAN_DIVI
			 , PEND_YN
			 , PEND_CODE
			 , PEND_DATA_CODE
			 , BUDG_YN
			 , BUDGCTL_YN
			 , FOR_YN
			 , PROOF_KIND
			 , CREDIT_NUM
			 , CREDIT_CODE
			 , REASON_CODE
			 , POSTIT_YN
			 , POSTIT
			 , POSTIT_USER_ID
			 , INPUT_PATH
			 , INPUT_DIVI
			 , AUTO_SLIP_NUM
			 , CLOSE_FG
			 , INPUT_DATE
			 , INPUT_USER_ID
			 , CHARGE_CODE
			 , AP_STS
			 , AP_DATE
			 , AP_USER_ID
			 , AP_CHARGE_CODE
			 , AC_DATE
			 , SLIP_NUM
			 , SLIP_SEQ
			 , DRAFT_YN
			 , AGREE_YN
			 , MOD_USER_ID
			 , MOD_DIVI
			 , MOD_DATE
			 , REPORT_TYPE
			 , REMARK2
			 , DRAFT_CODE
			 , DRAFT_NO
			 , GW_DOC
			 , ASST_SUPPLY_AMT_I
			 , ASST_TAX_AMT_I
			 , ASST_DIVI
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME

) SELECT 
		COMP_CODE
		,EX_DATE
		,EX_NUM
		,EX_SEQ
		,SLIP_DIVI
		,DR_CR
		,CASH_NUM
		,ACCNT
		,P_ACCNT
		,CUSTOM_CODE
		,CUSTOM_NAME
		,MONEY_UNIT
		,EXCHG_RATE_O
		,AMT_I
		,FOR_AMT_I
		,REMARK
		,IN_DIV_CODE
		,IN_DEPT_CODE
		,IN_DEPT_NAME
		,DIV_CODE
		,DEPT_CODE
		,DEPT_NAME
		,BILL_DIV_CODE
		,AC_CODE1
		,AC_CODE2
		,AC_CODE3
		,AC_CODE4
		,AC_CODE5
		,AC_CODE6
		,AC_DATA1
		,AC_DATA2
		,AC_DATA3
		,AC_DATA4
		,AC_DATA5
		,AC_DATA6
		,AC_DATA_NAME1
		,AC_DATA_NAME2
		,AC_DATA_NAME3
		,AC_DATA_NAME4
		,AC_DATA_NAME5
		,AC_DATA_NAME6
		,BOOK_CODE1
		,BOOK_CODE2
		,BOOK_DATA1
		,BOOK_DATA2
		,BOOK_DATA_NAME1
		,BOOK_DATA_NAME2
		,AC_CTL1
		,AC_CTL2
		,AC_CTL3
		,AC_CTL4
		,AC_CTL5
		,AC_CTL6
		,ACCNT_SPEC
		,SPEC_DIVI
		,PROFIT_DIVI
		,JAN_DIVI
		,PEND_YN
		,PEND_CODE
		,PEND_DATA_CODE
		,BUDG_YN
		,BUDGCTL_YN
		,FOR_YN
		,PROOF_KIND
		,CREDIT_NUM
		,CREDIT_CODE
		,REASON_CODE
		,POSTIT_YN
		,POSTIT
		,POSTIT_USER_ID
		,INPUT_PATH
		,INPUT_DIVI
		,AUTO_SLIP_NUM
		,CLOSE_FG
		,INPUT_DATE
		,INPUT_USER_ID
		,CHARGE_CODE
		,AP_STS
		,AP_DATE
		,AP_USER_ID
		,AP_CHARGE_CODE
		,AC_DATE
		,SLIP_NUM
		,SLIP_SEQ
		,DRAFT_YN
		,AGREE_YN
		,MOD_USER_ID
		,MOD_DIVI
		,MOD_DATE
		,REPORT_TYPE
		,REMARK2
		,DRAFT_CODE
		,DRAFT_NO
		,GW_DOC
		,ASST_SUPPLY_AMT_I
		,ASST_TAX_AMT_I
		,ASST_DIVI
		, #{S_USER_ID}
		, GETDATE()
		, #{S_USER_ID}
		, GETDATE()
		FROM         AGJ110T_XLS  WITH (NOLOCK)

		WHERE  _EXCEL_JOBID        = #{_EXCEL_JOBID}
		AND    _EXCEL_HAS_ERROR    !='Y'
		ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</insert>

<!-- 삭제  -->
    <delete id="agj130ukrServiceImpl.deleteDetail" parameterType="Map">
   		/*agj130ukrServiceImpl.deleteDetai*/
   		DELETE FROM AGJ110T_XLS
   		WHERE _EXCEL_JOBID      = #{_EXCEL_JOBID}
		AND	  _EXCEL_ROWNUM     = #{_EXCEL_ROWNUM}
	</delete>


<!-- 엑셀 테이블 삭제  -->	
    <delete id="agj130ukrServiceImpl.deleteAll" parameterType="Map">
    	/*agj130ukrServiceImpl.deleteAll*/
		BEGIN
			DELETE FROM AGJ110T_XLS
		END
	</delete>
	
	
<!-- 오류 기본값 업데이트  -->
	<update id="agj130ukrServiceImpl.updateError" parameterType="Map">
		/*  agj130ukrServiceImpl.updateError  */
		--	법인코드 확인, 법인코드에 따른 자사화폐 확인 후 자국금액/외화금액 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(B.COMP_CODE, '') = '' THEN 'Y'
											WHEN ISNULL(C.COMP_CODE, '') = '' THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(B.COMP_CODE, '') = '' THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 법인코드를 확인하여 주십시오.'
											WHEN ISNULL(C.COMP_CODE, '') = '' THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 회사정보등록의 자사화폐를 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AMT_I			=	( CASE	WHEN A.MONEY_UNIT = C.SUB_CODE	THEN A.AMT_I
											ELSE A.FOR_AMT_I * A.EXCHG_RATE_O
									  END )
			 , A.FOR_AMT_I		=	( CASE	WHEN A.MONEY_UNIT = C.SUB_CODE	THEN 0
											ELSE A.FOR_AMT_I
									  END )
			 , A.EXCHG_RATE_O	=	( CASE	WHEN A.MONEY_UNIT = C.SUB_CODE	THEN 0
											ELSE A.EXCHG_RATE_O
									  END )
			 , A.EX_DATE		=	( CASE	WHEN LEN(A.EX_DATE)		 &lt; 8	THEN CONVERT(NVARCHAR(08), DATEADD(D, CONVERT(NUMERIC, A.EX_DATE)	 - 2, '19000101'), 112)
											ELSE REPLACE(A.EX_DATE	 , '.', '')
									  END )
			 , A.INPUT_DATE		=	( CASE	WHEN LEN(A.INPUT_DATE)	 &lt; 8	THEN CONVERT(NVARCHAR(08), DATEADD(D, CONVERT(NUMERIC, A.INPUT_DATE) - 2, '19000101'), 112)
											ELSE REPLACE(A.INPUT_DATE, '.', '')
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BOR100T B
							 ON A.COMP_CODE	= B.COMP_CODE
				LEFT OUTER JOIN	BSA100T C
							 ON C.COMP_CODE	= A.COMP_CODE
							AND C.MAIN_CODE	= 'B004'
							AND C.REF_CODE1	= 'Y'
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	사업장코드 확인, 사업장코드에 따른 신고사업장 업데이트, 전표순번 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(B.COMP_CODE, '') = ''					THEN 'Y'
											WHEN ISNULL(D.DR_AMT_I, 0) != ISNULL(D.CR_AMT_I, 0)	THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(B.COMP_CODE, '') = ''					THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 사업장코드를 확인하여 주십시오.'
											WHEN ISNULL(D.DR_AMT_I, 0) != ISNULL(D.CR_AMT_I, 0)	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 차대변 금액이 일치하지 않습니다.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.BILL_DIV_CODE	=	B.BILL_DIV_CODE
			 , A.EX_SEQ			=	C.EX_SEQ
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BOR120T B
							 ON A.COMP_CODE	= B.COMP_CODE
							AND A.DIV_CODE	= B.DIV_CODE
				INNER JOIN	(	SELECT _EXCEL_JOBID
									 , _EXCEL_ROWNUM
									 , ROW_NUMBER() OVER(PARTITION BY _EXCEL_JOBID, EX_DATE, EX_NUM ORDER BY _EXCEL_ROWNUM)	AS EX_SEQ
								  FROM AGJ110T_XLS
								 WHERE _EXCEL_JOBID	= #{_EXCEL_JOBID}
							) C
							 ON A._EXCEL_JOBID	= C._EXCEL_JOBID
							AND A._EXCEL_ROWNUM	= C._EXCEL_ROWNUM
				INNER JOIN	(	SELECT _EXCEL_JOBID
									 , EX_DATE
									 , EX_NUM
									 , SUM(CASE WHEN DR_CR = '1' THEN AMT_I ELSE 0 END)	AS DR_AMT_I
									 , SUM(CASE WHEN DR_CR = '2' THEN AMT_I ELSE 0 END)	AS CR_AMT_I
								  FROM AGJ110T_XLS
								 WHERE _EXCEL_JOBID	= #{_EXCEL_JOBID}
								 GROUP BY _EXCEL_JOBID
									 , EX_DATE
									 , EX_NUM
							) D
							 ON A._EXCEL_JOBID	= D._EXCEL_JOBID
							AND A.EX_DATE		= D.EX_DATE
							AND A.EX_NUM		= D.EX_NUM
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	계정코드 확인, 계정마스터로부터 관리항목 코드 등 필요정보 업데이트, 회계담당자코드 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(B.ACCNT		, '') = '' THEN 'Y'
											WHEN ISNULL(C.COMP_CODE	, '') = '' THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(B.ACCNT		, '') = '' THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 계정코드를 확인하여 주십시오.'
											WHEN ISNULL(C.COMP_CODE	, '') = '' THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 업로드 사용자의 회계담당자코드가 존재하지 않습니다.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_CODE1		=	B.AC_CODE1
			 , A.AC_CODE2		=	B.AC_CODE2
			 , A.AC_CODE3		=	B.AC_CODE3
			 , A.AC_CODE4		=	B.AC_CODE4
			 , A.AC_CODE5		=	B.AC_CODE5
			 , A.AC_CODE6		=	B.AC_CODE6
			 , A.BOOK_CODE1		=	B.BOOK_CODE1
			 , A.BOOK_CODE2		=	B.BOOK_CODE2
			 , A.AC_CTL1		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL1 ELSE B.CR_CTL1 END
			 , A.AC_CTL2		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL2 ELSE B.CR_CTL2 END
			 , A.AC_CTL3		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL3 ELSE B.CR_CTL3 END
			 , A.AC_CTL4		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL4 ELSE B.CR_CTL4 END
			 , A.AC_CTL5		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL5 ELSE B.CR_CTL5 END
			 , A.AC_CTL6		=	CASE WHEN A.DR_CR = '1' THEN B.DR_CTL6 ELSE B.CR_CTL6 END
			 , A.ACCNT_SPEC		=	B.ACCNT_SPEC
			 , A.SPEC_DIVI		=	B.SPEC_DIVI
			 , A.PROFIT_DIVI	=	B.PROFIT_DIVI
			 , A.JAN_DIVI		=	B.JAN_DIVI
			 , A.PEND_YN		=	B.PEND_YN
			 , A.PEND_CODE		=	B.PEND_CODE
			 , A.BUDG_YN		=	B.BUDG_YN
			 , A.BUDGCTL_YN		=	B.BUDGCTL_YN
			 , A.FOR_YN			=	B.FOR_YN
			 , A.CHARGE_CODE	=	C.SUB_CODE
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	ABA400T B
							 ON A.COMP_CODE	= B.COMP_CODE
							AND A.ACCNT		= B.ACCNT
				LEFT OUTER JOIN	BSA100T C
							 ON C.COMP_CODE	= A.COMP_CODE
							AND C.MAIN_CODE	= 'A009'
							AND C.REF_CODE1	= A.INPUT_USER_ID
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명1 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA1, '') != '' AND A.AC_CODE1 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME1	=	( CASE	WHEN A.AC_CODE1 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE1 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE1 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE1 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE1 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE1 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE1 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE1 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE1 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME1
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA1
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA1
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA1
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA1
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA1
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA1
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA1
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA1
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명2 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA2, '') != '' AND A.AC_CODE2 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME2	=	( CASE	WHEN A.AC_CODE2 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE2 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE2 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE2 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE2 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE2 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE2 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE2 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE2 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME2
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA2
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA2
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA2
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA2
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA2
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA2
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA2
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA2
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명3 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA3, '') != '' AND A.AC_CODE3 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME3	=	( CASE	WHEN A.AC_CODE3 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE3 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE3 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE3 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE3 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE3 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE3 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE3 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE3 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME3
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA3
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA3
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA3
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA3
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA3
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA3
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA3
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA3
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명4 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA4, '') != '' AND A.AC_CODE4 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME4	=	( CASE	WHEN A.AC_CODE4 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE4 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE4 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE4 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE4 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE4 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE4 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE4 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE4 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME4
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA4
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA4
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA4
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA4
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA4
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA4
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA4
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA4
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명5 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA5, '') != '' AND A.AC_CODE5 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME5	=	( CASE	WHEN A.AC_CODE5 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE5 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE5 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE5 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE5 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE5 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE5 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE5 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE5 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME5
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA5
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA5
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA5
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA5
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA5
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA5
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA5
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA5
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	관리항목명6 업데이트
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(NULLIF(A._EXCEL_HAS_ERROR, ''), 'W')
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A2' AND ISNULL(A2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A3' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A4' AND ISNULL(A4.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'A6' AND ISNULL(A6.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'D2' AND ISNULL(D2.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'E1' AND ISNULL(E1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'I5' AND ISNULL(I5.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'I7' AND ISNULL(I7.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_DATA6, '') != '' AND A.AC_CODE6 = 'O1' AND ISNULL(O1.COMP_CODE, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.AC_DATA_NAME6	=	( CASE	WHEN A.AC_CODE6 = 'A2' THEN A2.TREE_NAME
											WHEN A.AC_CODE6 = 'A3' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE6 = 'A4' THEN A4.CUSTOM_NAME
											WHEN A.AC_CODE6 = 'A6' THEN A6.NAME
											WHEN A.AC_CODE6 = 'D2' THEN D2.CODE_NAME
											WHEN A.AC_CODE6 = 'E1' THEN E1.PJT_NAME
											WHEN A.AC_CODE6 = 'I5' THEN I5.CODE_NAME
											WHEN A.AC_CODE6 = 'I7' THEN I7.CODE_NAME
											WHEN A.AC_CODE6 = 'O1' THEN O1.SAVE_NAME
											ELSE A.AC_DATA_NAME6
									  END )
		  FROM AGJ110T_XLS A
				LEFT OUTER JOIN	BSA210T A2
							 ON A2.COMP_CODE	= A.COMP_CODE
							AND A2.TREE_CODE	= A.AC_DATA6
				LEFT OUTER JOIN	BCM100T A4
							 ON A4.COMP_CODE	= A.COMP_CODE
							AND A4.CUSTOM_CODE	= A.AC_DATA6
				LEFT OUTER JOIN	HUM100T A6
							 ON A6.COMP_CODE	= A.COMP_CODE
							AND A6.PERSON_NUMB	= A.AC_DATA6
				LEFT OUTER JOIN BSA100T D2
							 ON D2.COMP_CODE	= A.COMP_CODE
							AND D2.SUB_CODE		= A.AC_DATA6
							AND D2.MAIN_CODE	= 'B004'
				LEFT OUTER JOIN	BCM600T E1
							 ON E1.COMP_CODE	= A.COMP_CODE
							AND E1.PJT_CODE		= A.AC_DATA6
				LEFT OUTER JOIN BSA100T I5
							 ON I5.COMP_CODE	= A.COMP_CODE
							AND I5.SUB_CODE		= A.AC_DATA6
							AND I5.MAIN_CODE	= 'A022'
				LEFT OUTER JOIN BSA100T I7
							 ON I7.COMP_CODE	= A.COMP_CODE
							AND I7.SUB_CODE		= A.AC_DATA6
							AND I7.MAIN_CODE	= 'A149'
				LEFT OUTER JOIN AFS100T O1
							 ON O1.COMP_CODE	= A.COMP_CODE
							AND O1.SAVE_CODE	= A.AC_DATA6
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	계정잔액1, 계정잔액2, 미결코드 업데이트
		UPDATE A
		   SET A.BOOK_DATA1		=	( CASE	WHEN A.BOOK_CODE1 = A.AC_CODE1			THEN A.AC_DATA1
											WHEN A.BOOK_CODE1 = A.AC_CODE2			THEN A.AC_DATA2
											WHEN A.BOOK_CODE1 = A.AC_CODE3			THEN A.AC_DATA3
											WHEN A.BOOK_CODE1 = A.AC_CODE4			THEN A.AC_DATA4
											WHEN A.BOOK_CODE1 = A.AC_CODE5			THEN A.AC_DATA5
											WHEN A.BOOK_CODE1 = A.AC_CODE6			THEN A.AC_DATA6
											ELSE										 NULL
									  END )
			 , A.BOOK_DATA_NAME1=	( CASE	WHEN A.BOOK_CODE1 = A.AC_CODE1			THEN A.AC_DATA_NAME1
											WHEN A.BOOK_CODE1 = A.AC_CODE2			THEN A.AC_DATA_NAME2
											WHEN A.BOOK_CODE1 = A.AC_CODE3			THEN A.AC_DATA_NAME3
											WHEN A.BOOK_CODE1 = A.AC_CODE4			THEN A.AC_DATA_NAME4
											WHEN A.BOOK_CODE1 = A.AC_CODE5			THEN A.AC_DATA_NAME5
											WHEN A.BOOK_CODE1 = A.AC_CODE6			THEN A.AC_DATA_NAME6
											ELSE										 NULL
									  END )
			 , A.BOOK_DATA2		=	( CASE	WHEN A.BOOK_CODE2 = A.AC_CODE1			THEN A.AC_DATA1
											WHEN A.BOOK_CODE2 = A.AC_CODE2			THEN A.AC_DATA2
											WHEN A.BOOK_CODE2 = A.AC_CODE3			THEN A.AC_DATA3
											WHEN A.BOOK_CODE2 = A.AC_CODE4			THEN A.AC_DATA4
											WHEN A.BOOK_CODE2 = A.AC_CODE5			THEN A.AC_DATA5
											WHEN A.BOOK_CODE2 = A.AC_CODE6			THEN A.AC_DATA6
											ELSE										 NULL
									  END )
			 , A.BOOK_DATA_NAME2=	( CASE	WHEN A.BOOK_CODE2 = A.AC_CODE1			THEN A.AC_DATA_NAME1
											WHEN A.BOOK_CODE2 = A.AC_CODE2			THEN A.AC_DATA_NAME2
											WHEN A.BOOK_CODE2 = A.AC_CODE3			THEN A.AC_DATA_NAME3
											WHEN A.BOOK_CODE2 = A.AC_CODE4			THEN A.AC_DATA_NAME4
											WHEN A.BOOK_CODE2 = A.AC_CODE5			THEN A.AC_DATA_NAME5
											WHEN A.BOOK_CODE2 = A.AC_CODE6			THEN A.AC_DATA_NAME6
											ELSE										 NULL
									  END )
			 , A.PEND_DATA_CODE	=	( CASE	WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE1	THEN A.AC_DATA1
											WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE2	THEN A.AC_DATA2
											WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE3	THEN A.AC_DATA3
											WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE4	THEN A.AC_DATA4
											WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE5	THEN A.AC_DATA5
											WHEN A.PEND_YN = 'Y' AND A.PEND_CODE = A.AC_CODE6	THEN A.AC_DATA6
											ELSE													 A.PEND_DATA_CODE
									  END )
		  FROM AGJ110T_XLS A
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		
		--	필수입력 사항 체크
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN ISNULL(A.AC_CTL1, '') = 'Y' AND ISNULL(A.AC_DATA1, '') = ''	THEN 'Y'
											WHEN ISNULL(A.AC_CTL2, '') = 'Y' AND ISNULL(A.AC_DATA2, '') = ''	THEN 'Y'
											WHEN ISNULL(A.AC_CTL3, '') = 'Y' AND ISNULL(A.AC_DATA3, '') = ''	THEN 'Y'
											WHEN ISNULL(A.AC_CTL4, '') = 'Y' AND ISNULL(A.AC_DATA4, '') = ''	THEN 'Y'
											WHEN ISNULL(A.AC_CTL5, '') = 'Y' AND ISNULL(A.AC_DATA5, '') = ''	THEN 'Y'
											WHEN ISNULL(A.AC_CTL6, '') = 'Y' AND ISNULL(A.AC_DATA6, '') = ''	THEN 'Y'
											WHEN ISNULL(A.DEPT_CODE, '') = ''									THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN ISNULL(A.AC_CTL1, '') = 'Y' AND ISNULL(A.AC_DATA1, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목1을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_CTL2, '') = 'Y' AND ISNULL(A.AC_DATA2, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목2를 확인하여 주십시오.'
											WHEN ISNULL(A.AC_CTL3, '') = 'Y' AND ISNULL(A.AC_DATA3, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목3을 확인하여 주십시오.'
											WHEN ISNULL(A.AC_CTL4, '') = 'Y' AND ISNULL(A.AC_DATA4, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목4를 확인하여 주십시오.'
											WHEN ISNULL(A.AC_CTL5, '') = 'Y' AND ISNULL(A.AC_DATA5, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목5를 확인하여 주십시오.'
											WHEN ISNULL(A.AC_CTL6, '') = 'Y' AND ISNULL(A.AC_DATA6, '') = ''	THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 관리항목6을 확인하여 주십시오.'
											WHEN ISNULL(A.DEPT_CODE, '') = ''									THEN ISNULL(A._EXCEL_ERROR_MSG, '') + ' 부서코드를 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
		  FROM AGJ110T_XLS A
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
	</update>
	
	<update id="agj130ukrServiceImpl.updateError_BAK" parameterType="Map">
	UPDATE AGJ110T_XLS
	SET _EXCEL_HAS_ERROR = 'N'
	FROM AGJ110T_XLS AS A,
		(
			SELECT _EXCEL_JOBID, _EXCEL_ROWNUM FROM AGJ110T_XLS
			WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
			AND _EXCEL_ERROR_MSG IS NULL
		) AS B
	WHERE 	A._EXCEL_JOBID 	= B._EXCEL_JOBID
	AND 	A._EXCEL_ROWNUM = B._EXCEL_ROWNUM
	</update>
	
	
	
</mapper>