<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa260ukrvService">

	<select id="bsa260ukrvService.dummy" parameterType="Map" resultType="rMap">
		select a from dual
	</select>
	
	<select id="bsa260ukrvService.getAutoCode" parameterType="Map"  resultType="rMap" >
    	SELECT ISNULL(REPLICATE('0',5-LEN(CONVERT(varchar,MAX(CONVERT(int,GROUP_CODE))+1)))+CONVERT(varchar,MAX(CONVERT(int,GROUP_CODE))+1),'00001') AS GROUP_CODE
		FROM PPI100T
		WHERE COMP_CODE =  #{S_COMP_CODE}
		  AND DIV_CODE  =  #{DIV_CODE}
    </select>
	
	
	
	<select id="bsa260ukrvService.selectMasterCodeList" parameterType="Map" resultType="rMap">
		/* bsa260ukrvService.selectMasterCodeList */
		
		SELECT COUNT(*) OVER() TOTAL_CNT
			 , A.COMP_CODE
		     , A.DIV_CODE
		     , A.GROUP_CODE
		     , A.GROUP_NAME                                 
		     , A.DEPT_CODE 
		     , B.TREE_NAME AS DEPT_NAME
		  FROM PPI100T A WITH(NOLOCK) 
		  LEFT JOIN BSA210T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		  								  AND A.DIV_CODE  = B.TYPE_LEVEL
		  								  AND A.DEPT_CODE = B.TREE_CODE   
		  
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE 	= #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		   AND A.DEPT_CODE     = #{DEPT_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(GROUP_NAME)">
		   AND A.GROUP_NAME LIKE '%'+#{GROUP_NAME} + '%'
		   </if>
		 order by A.GROUP_CODE
	</select>
	
	<select id="bsa260ukrvService.selectDetailCodeList" parameterType="Map" resultType="rMap">
		/* bsa260ukrvService.selectDetailCodeList */
		SELECT 
		       A.COMP_CODE
			 , A.DIV_CODE
			 , A.GROUP_CODE
		     , A.PRESET_CODE
		     , A.ITEM_CODE
		     , C.ITEM_NAME
		     , D.SALE_BASIS_P
		     , A.DEPT_CODE 
		     , E.TREE_NAME AS DEPT_NAME
		  FROM PPI200T 			  A WITH(NOLOCK) 
		  INNER JOIN PPI100T B WITH(NOLOCK) ON   A.COMP_CODE 	= B.COMP_CODE
		  									AND  A.DEPT_CODE 	= B.DEPT_CODE
		  									AND  A.GROUP_CODE   = B.GROUP_CODE
											AND  A.DIV_CODE	    = B.DIV_CODE 
		  LEFT OUTER JOIN BPR200T C WITH(NOLOCK) ON B.COMP_CODE  = C.COMP_CODE
		  										AND B.DIV_CODE   = C.DIV_CODE
		  										AND A.ITEM_CODE  = C.ITEM_CODE
		  LEFT OUTER JOIN BPR100T D WITH(NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
												AND A.ITEM_CODE  = D.ITEM_CODE
		  LEFT JOIN BSA210T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
		  								  AND A.DIV_CODE  = E.TYPE_LEVEL
		  								  AND A.DEPT_CODE = E.TREE_CODE											
		  
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.GROUP_CODE 	= #{GROUP_CODE} 
		   AND A.DIV_CODE	 	= #{DIV_CODE}
		   AND A.DEPT_CODE      = #{DEPT_CODE}
		 ORDER BY A.PRESET_CODE
	</select>
	
	<update id="bsa260ukrvService.MainupdateCode" parameterType="Map">
		UPDATE PPI100T SET
			<if test="_parameter.containsKey('GROUP_NAME')">
		       GROUP_NAME      = #{GROUP_NAME}
            </if>
        	 , UPDATE_DB_USER    = #{S_USER_ID}
		     , UPDATE_DB_TIME    = GETDATE()
		 WHERE COMP_CODE	   = #{S_COMP_CODE}
		 	AND DIV_CODE 	   = #{DIV_CODE}
		    AND GROUP_CODE     = #{GROUP_CODE}
		    AND DEPT_CODE      = #{DEPT_CODE}   
	</update>
	
	<update id="bsa260ukrvService.DetailupdateCode" parameterType="Map">
		UPDATE PPI200T SET
			 
            <if test="_parameter.containsKey('ITEM_CODE')">
		       ITEM_CODE         = #{ITEM_CODE}
            </if>
            <if test="_parameter.containsKey('SALE_BASIS_P')">
		     , SALE_BASIS_P      = #{SALE_BASIS_P}
            </if>
        	 , UPDATE_DB_USER    = #{S_USER_ID}
		     , UPDATE_DB_TIME    = GETDATE()
		 WHERE 
		 	   COMP_CODE		 = #{S_COMP_CODE}
		   AND GROUP_CODE	     = #{GROUP_CODE}
		   AND PRESET_CODE       = #{PRESET_CODE} 
		   AND DIV_CODE       	 = #{DIV_CODE} 
		   AND DEPT_CODE       	 = #{DEPT_CODE} 
	</update>
	
	
	
	<select id="bsa260ukrvService.chkCode" parameterType="Map" resultType="rMap">
		SELECT COUNT(*) AS CNT
		  FROM PPI100T
		 WHERE COMP_CODE   = #{S_COMP_CODE}	             
		   AND DIV_CODE    = #{DIV_CODE}
		   AND GROUP_CODE  = #{GROUP_CODE}
		
	</select>
	
	<insert id="bsa260ukrvService.MaininsertCode" parameterType="Map">

		  INSERT PPI100T(
		  
		  			COMP_CODE, 
		  			DIV_CODE, 
		  			GROUP_CODE, 
		  			GROUP_NAME, 
		  			DEPT_CODE, 
		  			INSERT_DB_TIME, 
		  			INSERT_DB_USER,
		  			UPDATE_DB_TIME, 
		  			UPDATE_DB_USER
		  		)
			SELECT  #{S_COMP_CODE}, 
					#{DIV_CODE}, 
					(ISNULL(REPLICATE('0',5-LEN(CONVERT(varchar,MAX(CONVERT(int,GROUP_CODE))+1)))+CONVERT(varchar,MAX(CONVERT(int,GROUP_CODE))+1),'00001')),
					#{GROUP_NAME}, 
					#{DEPT_CODE}, 
					GETDATE(), 
					#{S_USER_ID}, 
					GETDATE(), 
					#{S_USER_ID}
			FROM PPI100T
			WHERE COMP_CODE =  #{S_COMP_CODE}
		  	  AND DIV_CODE  =  #{DIV_CODE}
		  	  AND DEPT_CODE =  #{DEPT_CODE}          
		             
	</insert>
	
	<insert id="bsa260ukrvService.DetailinsertCode" parameterType="Map">	
		
		INSERT INTO PPI200T
				(   COMP_CODE
				  , GROUP_CODE
				  , DIV_CODE
				  , PRESET_CODE
				  , ITEM_CODE
				  , DEPT_CODE
				  <if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">
				  , SALE_BASIS_P
				  </if>
				  , INSERT_DB_USER
	              , INSERT_DB_TIME
	              , UPDATE_DB_USER
	              , UPDATE_DB_TIME)
	     SELECT      
	     			  #{S_COMP_CODE}
	     			, #{GROUP_CODE}
	                , #{DIV_CODE}
	     			, (ISNULL(REPLICATE('0',5-LEN(CONVERT(varchar,MAX(CONVERT(int,PRESET_CODE))+1)))+CONVERT(varchar,MAX(CONVERT(int,PRESET_CODE))+1),'00001'))
	     			, #{ITEM_CODE}
	     			, #{DEPT_CODE}
	     			<if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">
		            , #{SALE_BASIS_P}
		            </if>
					 , #{S_USER_ID}
		             , getdate()
		             , #{S_USER_ID}
		             , getdate()
		             
		       FROM PPI200T
			WHERE COMP_CODE =  #{S_COMP_CODE}
		  	  AND DIV_CODE  =  #{DIV_CODE}
		  	  AND DEPT_CODE =  #{DEPT_CODE}
		  	  AND GROUP_CODE = #{GROUP_CODE} 
		             
	</insert>
	
	
	<update id="bsa260ukrvService.MaindeleteCode" parameterType="Map">
		DELETE FROM PPI100T 
		 WHERE COMP_CODE 	= #{S_COMP_CODE}
		   AND DIV_CODE 	= #{DIV_CODE}
		   AND GROUP_CODE   = #{GROUP_CODE}
		   AND DEPT_CODE    = #{DEPT_CODE}
	</update>
	
	<update id="bsa260ukrvService.DetaildeleteCode" parameterType="Map">
		DELETE FROM PPI200T 
		 WHERE COMP_CODE 	= #{S_COMP_CODE}
		   AND GROUP_CODE 	= #{GROUP_CODE}
		   AND PRESET_CODE 	= #{PRESET_CODE}
		   AND ITEM_CODE    = #{ITEM_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND DEPT_CODE    = #{DEPT_CODE}
	</update>
	
	<select id="bsa260ukrvService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
</mapper>