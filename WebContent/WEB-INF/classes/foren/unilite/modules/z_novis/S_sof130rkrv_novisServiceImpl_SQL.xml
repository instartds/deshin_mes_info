<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sof130rkrv_novisServiceImpl">

	<select id="s_sof130rkrv_novisServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* S_sof130rkrv_novis.CS_sof130rkrv_novis[fnsof100Tnq] Query01 */
		/* S_sof130rkrv_in.CS_sof130rkrv_in[fnsof100Tnq] Query01 */

    SELECT X.ITEM_CODE
    		--, ISNULL(Y.LABEL_NAME, ISNULL(M1.ITEM_NAME2, M1.ITEM_NAME)) AS ITEM_NAME
    		, M1.ITEM_NAME
			, X.LOT_NO

    		, X.ORDER_Q
    		, M1.SALE_UNIT										AS ORDER_UNIT
			, M1.STOCK_UNIT
    		, ISNULL(R1.INOUT_Q,0) AS IN_Q	-- 입고량
    		, X.ORDER_Q - ISNULL(R1.INOUT_Q,0) AS OUT_Q	-- 출고량
			, ISNULL(M2.PACK_TYPE, '')	AS BOX_TYPE				--박스유형
    		, CASE WHEN ISNULL(M2.PACK_TYPE, '') = ''
    		       THEN 1
    		   ELSE LTRIM(STR((X.ORDER_Q - ISNULL(R1.INOUT_Q,0)))) END	AS PRINT_Q
    		--, M2.KEEP_TEMPER
    		, M2.PACK_TYPE
    		, LTRIM(STR(M2.PACK_QTY)) AS PACK_QTY
    		, LTRIM(STR(M1.ITEM_WIDTH)) AS ITEM_SIZE
    		, X.MAKE_DATE
    		--, X.EXPIR_DATE
    		--, Y.HOSPITAL_ITEM AS H_ITEM_NAME
    		--, Y.USE_TARGET AS USE_TARGET
    		--, Y.REPORT_NO AS REGIST_NO
    		, CASE WHEN ISNULL(Y.LABEL_TYPE,'') = '' THEN 'A' ELSE Y.LABEL_TYPE END AS LABEL_TYPE
			, X.ORDER_NUM
			, X.ORDER_SEQ
			, OPT
			, CASE WHEN ISNULL(M3.REF_CODE1, 0) = 0
			       THEN X.ORDER_Q - ISNULL(R1.INOUT_Q,0)
				   ELSE M3.REF_CODE1
			   END AS EA_QTY
			, CASE WHEN ISNULL(M3.REF_CODE1, 0) = 0
			       THEN 0
				   ELSE (X.ORDER_Q - ISNULL(R1.INOUT_Q,0)) % CONVERT(INT, M3.REF_CODE1)
			   END AS MOD_QTY
			, CASE WHEN ISNULL(M3.CODE_NAME, '') = ''
			       THEN M1.STOCK_UNIT
				   ELSE SUBSTRING(M3.CODE_NAME, LEN(M3.SUB_CODE) + 1, LEN(M3.CODE_NAME) -  LEN(M3.SUB_CODE))
			   END AS BOX_UNIT
    FROM (

			SELECT A.COMP_CODE, A.DIV_CODE
				, A.ITEM_CODE
				, A.LOT_NO
				, NULL			AS TRANS_RATE
				, A.PRODT_Q		AS ORDER_Q
				, A.PRODT_Q		AS WKORD_Q
				, uniLITE.fnGetUserdateComp(A.COMP_CODE, A.PRODT_DATE) AS MAKE_DATE
				, A.PRODT_NUM	AS ORDER_NUM
				, 0				AS ORDER_SEQ
				, 'P' AS OPT
			FROM PMR110T  A


      		WHERE A.COMP_CODE=#{S_COMP_CODE}
      			AND A.DIV_CODE=#{DIV_CODE}
      			<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		    		AND      A.PRODT_DATE         &gt;=  #{PRODT_START_DATE}			/* 발주일(FR)   */
			    </if>
				<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
			    	AND   A.PRODT_DATE       &lt;=  #{PRODT_END_DATE}			/* 발주일(TO)	*/
			    </if>
      			<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		    		AND      A.WORK_SHOP_CODE       =  #{WORK_SHOP_CODE}
			    </if>


	   		UNION

  			SELECT A.COMP_CODE, A.DIV_CODE
  					, B.ITEM_CODE AS ITEM_CODE
  					, B.LOT_NO
  					, B.TRNS_RATE
					, LTRIM(STR(B.ORDER_Q)) AS ORDER_Q
					, B.ORDER_UNIT_Q AS WKORD_Q
  					, uniLITE.fnGetUserdateComp(A.COMP_CODE, A.ORDER_DATE) AS MAKE_DATE
					, B.ORDER_NUM AS ORDER_NUM
					, B.ORDER_SEQ AS ORDER_SEQ

  					, 'M' AS OPT
  			FROM MPO100T A					WITH (NOLOCK)
  				 INNER JOIN MPO200T B		WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
  			 											AND A.DIV_CODE = B.DIV_CODE
  			 											AND A.ORDER_NUM = B.ORDER_NUM
  			WHERE A.COMP_CODE= #{S_COMP_CODE}
      		AND A.DIV_CODE= #{DIV_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		    	AND      A.ORDER_DATE         &gt;=  #{PRODT_START_DATE}			/* 발주일(FR)   */
		    </if>
			<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		    	AND     A.ORDER_DATE       &lt;=  #{PRODT_END_DATE}			/* 발주일(TO)	*/
		    </if>

  			AND A.ORDER_TYPE = '4'

    ) X
		LEFT JOIN BPR250T Y WITH (NOLOCK) ON X.COMP_CODE=Y.COMP_CODE AND X.DIV_CODE=Y.DIV_CODE AND X.ITEM_CODE=Y.ITEM_CODE
  		LEFT JOIN BPR100T M1 WITH (NOLOCK) ON X.COMP_CODE=M1.COMP_CODE AND X.ITEM_CODE=M1.ITEM_CODE
  		LEFT JOIN BPR200T M2 WITH (NOLOCK) ON X.COMP_CODE=M2.COMP_CODE AND X.DIV_CODE=M2.DIV_CODE AND X.ITEM_CODE=M2.ITEM_CODE
		LEFT JOIN BSA100T M3 WITH (NOLOCK) ON X.COMP_CODE=M3.COMP_CODE AND M3.MAIN_CODE = 'B138' AND  M3.SUB_CODE = M2.PACK_TYPE
		LEFT  JOIN (
             SELECT S1.COMP_CODE, S1.DIV_CODE, S1.BASIS_NUM, SUM(S1.INOUT_Q) AS INOUT_Q
             FROM   BTR100T S1 WITH (NOLOCK)
             WHERE  S1.COMP_CODE   = #{S_COMP_CODE}
             AND    S1.DIV_CODE    = #{DIV_CODE}
             AND    S1.INOUT_TYPE  = '1'
             AND    S1.CREATE_LOC  = '1'
             GROUP  BY S1.COMP_CODE, S1.DIV_CODE, S1.BASIS_NUM
         ) R1 ON X.COMP_CODE = R1.COMP_CODE
            AND X.DIV_CODE  = R1.DIV_CODE
            AND X.ORDER_NUM = R1.BASIS_NUM

    	WHERE 1=1
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		AND X.ITEM_CODE = #{ITEM_CODE}
		</if>

		AND X.OPT = #{OPT}
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		AND X.LOT_NO LIKE #{LOT_NO}+'%'
		</if>

    ORDER BY X.ITEM_CODE

    </select>

    <select id="s_sof130rkrv_novisServiceImpl.clipselect1" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @COUNT			INT
			   		, @PRINT_Q		INT
					, @ORDER_NUM_SEQ NVARCHAR(50)

			CREATE TABLE #S_ORDER_PRINT
			( PRINT_Q			VARCHAR(20)
	  		, ORDER_NUM_SEQ		VARCHAR(50)
			, QTY				VARCHAR(10)
			, BOX_QTY			VARCHAR(10)
			, SEL_BOX_UNIT		VARCHAR(20)
			)

			DECLARE   @MOD_QTY   	 VARCHAR(10)
  		     	   ,  @QTY     		 VARCHAR(10)
                   ,  @SEL_BOX_TYPE  VARCHAR(20)
                   ,  @SEL_BOX_UNIT  VARCHAR(20)

			DECLARE ORDER_PRINT_CUR CURSOR FOR

			SELECT SUBSTRING(SUBSTRING(A.value,CHARINDEX(':',A.value) + 1,LEN(A.value)),1,CHARINDEX('^',SUBSTRING(A.value,CHARINDEX(':',A.value) + 1,LEN(A.value))) -LEN('^') )   AS PRINT_Q
				  		    , SUBSTRING(A.value,1,CHARINDEX(':', A.value) - 1) AS ORDER_NUM_SEQ
				  		    , SUBSTRING(A.value,CHARINDEX('^', A.value) + LEN('^'),(CHARINDEX('^^', A.value) - CHARINDEX('^', A.value) - LEN('^'))) AS QTY
							, SUBSTRING(A.value,CHARINDEX('^^', A.value) + LEN('^^'),LEN(A.value)) AS MOD_QTY
							, ISNULL(B.SEL_BOX_TYPE, SUBSTRING(A.value,CHARINDEX('^', A.value) + LEN('^'),(CHARINDEX('^^', A.value) - CHARINDEX('^', A.value) - LEN('^'))) + C.SEL_BOX_UNIT) AS SEL_BOX_TYPE
							, C.SEL_BOX_UNIT
	        FROM uniLITE.fnSplit(#{ITEM_PRINT}, ',') A LEFT JOIN
			(SELECT (SELECT CODE_NAME
					FROM BSA100T
					WHERE COMP_CODE = #{S_COMP_CODE}
					AND MAIN_CODE = 'B138'
					AND SUB_CODE = SUBSTRING(value, CHARINDEX(':', value)+1, LEN(value)- CHARINDEX(':', value))) AS SEL_BOX_TYPE
					,idx
			FROM uniLITE.fnSplit(#{SEL_BOX_TYPE}, ',')) B ON A.idx = B.idx
			LEFT JOIN
			(SELECT SUBSTRING(value, CHARINDEX(':', value)+1, LEN(value)- CHARINDEX(':', value))AS SEL_BOX_UNIT
					,idx
			FROM uniLITE.fnSplit(#{SEL_BOX_UNIT}, ',')) C ON A.idx = C.idx
			OPEN ORDER_PRINT_CUR
			FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_Q, @ORDER_NUM_SEQ, @QTY, @MOD_QTY,  @SEL_BOX_TYPE, @SEL_BOX_UNIT
				SET @COUNT      = 0
				WHILE @@FETCH_STATUS = 0
					BEGIN
						WHILE  @COUNT  <![CDATA[<]]>  @PRINT_Q
							BEGIN
							IF @COUNT  =  @PRINT_Q - 1 AND @MOD_QTY  <![CDATA[>]]> 0
								BEGIN
								INSERT INTO #S_ORDER_PRINT(ORDER_NUM_SEQ, QTY, BOX_QTY, SEL_BOX_UNIT)
								VALUES(@ORDER_NUM_SEQ, @MOD_QTY, @MOD_QTY + @SEL_BOX_UNIT, @SEL_BOX_UNIT)
								SET @COUNT = @COUNT+1
								END
							ELSE
								BEGIN
								INSERT INTO #S_ORDER_PRINT(ORDER_NUM_SEQ, QTY, BOX_QTY, SEL_BOX_UNIT )
								VALUES(@ORDER_NUM_SEQ, @QTY,  @SEL_BOX_TYPE, @SEL_BOX_UNIT)
								SET @COUNT = @COUNT+1
								END
							END
							SET @COUNT     = 0
						FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_Q, @ORDER_NUM_SEQ, @QTY, @MOD_QTY,  @SEL_BOX_TYPE, @SEL_BOX_UNIT
					END

			CLOSE ORDER_PRINT_CUR
			DEALLOCATE ORDER_PRINT_CUR

		--라벨출력(생산)

			SELECT A.ITEM_CODE, C.ITEM_NAME
				, D.LEVEL_NAME
				, B.LABEL_NAME
				, C.SPEC

				, B.TYPE_NAME  --형명
				, A.PRODT_DATE --제조연월
				, CONVERT(NVARCHAR(08), DATEADD(MM, ISNULL(C.EXPIRATION_DAY, 0)
												, DATEADD(DD, -1, A.PRODT_DATE))
												, 112) AS EXPIRE_DATE --사용기한
				, A.LOT_NO
				, C.BARCODE
				-----------------------------------
				, B.HOSPITAL_ITEM
				, 0								AS UNIT_QTY		--수량(50EA/BOX)

				, '제3351호 / ' +  B.REPORT_NO  AS REPORT_NO --제조 및 품목허가번호

				, F.CUSTOM_FULL_NAME			AS SELLER		--판매원
				, F.ADDR1						AS SELLER_ADDR	--판매원 주소

				,  E.DIV_NAME					--제조원
				,  E.ADDR						--제조원 주소
				, '※ 본제품은 일회용 멸균 의료기기이므로 재사용을 금지함.' AS NOTICE

				, CASE WHEN ISNULL(B.LABEL_TYPE, 'A')  IN ( 'A', '' )  THEN 'A' ELSE B.LABEL_TYPE END  LEBEL_TYPE    -- 라벨타입
				, A.ITEM_CODE + '$' + CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN '*' ELSE A.LOT_NO END + '$' + F1.QTY AS BARCORD2
				, H.FILE_PATH + '\' + H.FILE_ID + '.' + H.FILE_EXT AS FILE_PATH
				, H1.REF_CODE1 AS PACK_QTY
				, F1.BOX_QTY AS PRINT_QTY
				, F1.SEL_BOX_UNIT
				, A.GOOD_PRODT_Q
				, C.STOCK_UNIT
			--	, *
			FROM PMR110T A WITH(NOLOCK)
			LEFT JOIN BPR250T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
							AND B.DIV_CODE = A.DIV_CODE
							AND B.ITEM_CODE = A.ITEM_CODE
            LEFT JOIN BPR200T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
							AND B1.DIV_CODE = A.DIV_CODE
							AND B1.ITEM_CODE = A.ITEM_CODE
			INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
							AND C.ITEM_CODE = A.ITEM_CODE
			LEFT JOIN BPR000T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
							AND D.LEVEL1 = C.ITEM_LEVEL1
							AND D.LEVEL2 = '*'
							AND D.LEVEL3 = '*'
			INNER JOIN BOR120T E ON E.COMP_CODE = A.COMP_CODE
								AND E.DIV_CODE = A.DIV_CODE
			LEFT JOIN BCM100T F ON F.COMP_CODE = A.COMP_CODE
								AND F.CUSTOM_CODE = #{CUSTOM_CODE}
		    LEFT JOIN BPR101T H ON H.COMP_CODE = A.COMP_CODE
								    AND H.ITEM_CODE = A.ITEM_CODE
									AND H.FILE_TYPE = '00'
			LEFT JOIN BSA100T H1 ON H1.COMP_CODE = A.COMP_CODE
								    AND H1.MAIN_CODE = 'B138'
									AND H1.SUB_CODE	 = B1.PACK_TYPE
		    LEFT  JOIN #S_ORDER_PRINT F1 ON A.PRODT_NUM  = F1.ORDER_NUM_SEQ

			WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.DIV_CODE = #{DIV_CODE}
			AND  A.PRODT_NUM  IN (select value from  uniLITE.fnSplit(#{PRINT_KEY}, ','))
			ORDER BY A.PRODT_NUM, A.ITEM_CODE ASC,  LEN(F1.BOX_QTY) DESC
          DROP TABLE #S_ORDER_PRINT
 	END

    </select>

	<select id="s_sof130rkrv_novisServiceImpl.clipselect2" parameterType="Map" resultType="rMap">
	--clipselect2
	BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @COUNT			INT
			   		, @PRINT_Q		INT
					, @ORDER_NUM_SEQ NVARCHAR(50)

			CREATE TABLE #S_ORDER_PRINT
			( PRINT_Q			VARCHAR(20)
	  		, ORDER_NUM_SEQ		VARCHAR(50)
			, QTY				VARCHAR(10)
			, BOX_QTY			VARCHAR(10)
			)

			DECLARE  @MOD_QTY   VARCHAR(10)
	  		     	  ,  @QTY     	VARCHAR(10)
	  		          ,  @SEL_BOX_TYPE  VARCHAR(20)


			DECLARE ORDER_PRINT_CUR CURSOR FOR

			SELECT SUBSTRING(SUBSTRING(A.value,CHARINDEX(':',A.value) + 1,LEN(A.value)),1,CHARINDEX('^',SUBSTRING(A.value,CHARINDEX(':',A.value) + 1,LEN(A.value))) -LEN('^') )   AS PRINT_Q
				  		    , SUBSTRING(A.value,1,CHARINDEX(':', A.value) - 1) AS ORDER_NUM_SEQ
				  		    , SUBSTRING(A.value,CHARINDEX('^', A.value) + LEN('^'),(CHARINDEX('^^', A.value) - CHARINDEX('^', A.value) - LEN('^'))) AS QTY
							, SUBSTRING(A.value,CHARINDEX('^^', A.value) + LEN('^^'),LEN(A.value)) AS MOD_QTY
							, B.SEL_BOX_TYPE
	        FROM uniLITE.fnSplit(#{ITEM_PRINT}, ',') A LEFT JOIN
			(SELECT (SELECT CODE_NAME
					FROM BSA100T
					WHERE COMP_CODE = #{S_COMP_CODE}
					AND MAIN_CODE = 'B138'
					AND SUB_CODE = SUBSTRING(value, CHARINDEX(':', value)+1, LEN(value)- CHARINDEX(':', value))) AS SEL_BOX_TYPE
					,idx
			FROM uniLITE.fnSplit(#{SEL_BOX_TYPE}, ',')) B ON A.idx = B.idx

			OPEN ORDER_PRINT_CUR
			FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_Q, @ORDER_NUM_SEQ, @QTY, @MOD_QTY,  @SEL_BOX_TYPE
				SET @COUNT      = 0
				WHILE @@FETCH_STATUS = 0
					BEGIN
						WHILE  @COUNT  <![CDATA[<]]>  @PRINT_Q
							BEGIN
							IF @COUNT  =  @PRINT_Q - 1 AND @MOD_QTY  <![CDATA[>]]> 0
								BEGIN
								INSERT INTO #S_ORDER_PRINT(PRINT_Q, ORDER_NUM_SEQ, QTY, BOX_QTY  )
								VALUES(@PRINT_Q , @ORDER_NUM_SEQ, @MOD_QTY, @MOD_QTY + 'EA/BOX')
								SET @COUNT = @COUNT+1
								END
							ELSE
								BEGIN
								INSERT INTO #S_ORDER_PRINT(PRINT_Q, ORDER_NUM_SEQ, QTY, BOX_QTY )
								VALUES(@PRINT_Q , @ORDER_NUM_SEQ, @QTY,  @SEL_BOX_TYPE)
								SET @COUNT = @COUNT+1
								END
							END
							SET @COUNT     = 0
						FETCH NEXT FROM ORDER_PRINT_CUR INTO @PRINT_Q, @ORDER_NUM_SEQ, @QTY, @MOD_QTY,  @SEL_BOX_TYPE
					END

			CLOSE ORDER_PRINT_CUR
			DEALLOCATE ORDER_PRINT_CUR

		--라벨출력(외주)

				--라벨출력(외주발주)
				SELECT A.ITEM_CODE
						, C.ITEM_NAME
					, D.LEVEL_NAME
					, B.LABEL_NAME
					, C.SPEC

					, B.TYPE_NAME  --형명
					, A1.ORDER_DATE AS PRODT_DATE --제조연월
					, CONVERT(NVARCHAR(08), DATEADD(MM, ISNULL(C.EXPIRATION_DAY, 0)
													, DATEADD(DD, -1, A1.ORDER_DATE))
													, 112) AS EXPIRE_DATE --사용기한
					,  CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN '*' ELSE A.LOT_NO END AS LOT_NO
					, C.BARCODE
					-----------------------------------
					, B.HOSPITAL_ITEM
					, 0								AS UNIT_QTY		--수량(50EA/BOX)

					, '제3351호 / ' +  B.REPORT_NO  AS REPORT_NO --제조 및 품목허가번호

					, F.CUSTOM_FULL_NAME			AS SELLER		--판매원
					, F.ADDR1						AS SELLER_ADDR	--판매원 주소

					,  E.DIV_NAME					--제조원
					,  E.ADDR						--제조원 주소
					, '※ 본제품은 일회용 멸균 의료기기이므로 재사용을 금지함.' AS NOTICE

					, CASE WHEN ISNULL(B.LABEL_TYPE, 'A')  IN ( 'A', '' )  THEN 'A' ELSE B.LABEL_TYPE END  LEBEL_TYPE    -- 라벨타입
					, A.ITEM_CODE + '$' + CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN '*' ELSE A.LOT_NO END + '$' + G.QTY AS BARCORD2
					, H.FILE_PATH + '\' + H.FILE_ID + '.' + H.FILE_EXT AS FILE_PATH
					, H1.REF_CODE1 AS PACK_QTY
					, G.BOX_QTY AS PRINT_QTY
					, A.ORDER_Q AS GOOD_PRODT_Q
					, C.STOCK_UNIT
				--	, *
				FROM MPO200T A WITH(NOLOCK)
				INNER JOIN MPO100T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
								AND A1.DIV_CODE = A.DIV_CODE
								AND A1.ORDER_NUM = A.ORDER_NUM
				LEFT JOIN BPR250T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								AND B.DIV_CODE = A.DIV_CODE
								AND B.ITEM_CODE = A.ITEM_CODE
				LEFT JOIN BPR200T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
												AND B1.DIV_CODE = A.DIV_CODE
												AND B1.ITEM_CODE = A.ITEM_CODE
				INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
								AND C.ITEM_CODE = A.ITEM_CODE
				LEFT JOIN BPR000T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
								AND D.LEVEL1 = C.ITEM_LEVEL1
								AND D.LEVEL2 = '*'
								AND D.LEVEL3 = '*'
				INNER JOIN BOR120T E ON E.COMP_CODE = A.COMP_CODE
									AND E.DIV_CODE = A.DIV_CODE
				LEFT JOIN BCM100T F ON F.COMP_CODE = A.COMP_CODE
									AND F.CUSTOM_CODE = #{CUSTOM_CODE}
				LEFT JOIN BPR101T H ON H.COMP_CODE = A.COMP_CODE
									AND H.ITEM_CODE = A.ITEM_CODE
									AND H.FILE_TYPE = '00'
					LEFT JOIN BSA100T H1 ON H1.COMP_CODE = A.COMP_CODE
									AND H1.MAIN_CODE = 'B138'
									AND H1.SUB_CODE	 = B1.PACK_TYPE
				LEFT  JOIN #S_ORDER_PRINT G ON A.ORDER_NUM + CONVERT(NVARCHAR(10),A.ORDER_SEQ) = G.ORDER_NUM_SEQ
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			  AND A.DIV_CODE  = #{DIV_CODE}
			  AND A.ORDER_NUM + CONVERT(NVARCHAR(10),A.ORDER_SEQ)  IN (select value from  uniLITE.fnSplit(#{PRINT_KEY}, ','))
			ORDER BY A.ORDER_NUM, A.ORDER_SEQ ASC,  LEN(G.BOX_QTY) DESC

	        DROP TABLE #S_ORDER_PRINT
	END
    </select>

	<select id="s_sof130rkrv_novisServiceImpl.clipselect3_mainReport" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON


		--출고전표(생산)

			SELECT TOP 1
			      A.ITEM_CODE
			    , C.ITEM_NAME
				, D.LEVEL_NAME
				, B.LABEL_NAME
				, C.SPEC

				, B.TYPE_NAME  --형명
				, A.PRODT_DATE --제조연월
				, CONVERT(NVARCHAR(08), DATEADD(MM, ISNULL(C.EXPIRATION_DAY, 0)
												, DATEADD(DD, -1, A.PRODT_DATE))
												, 112) AS EXPIRE_DATE --사용기한
				, A.LOT_NO
				, C.BARCODE
				-----------------------------------
				, B.HOSPITAL_ITEM
				, 0								AS UNIT_QTY		--수량(50EA/BOX)

				, '제3351호 / ' +  B.REPORT_NO  AS REPORT_NO --제조 및 품목허가번호

				, F.CUSTOM_FULL_NAME			AS SELLER		--판매원
				, F.ADDR1						AS SELLER_ADDR	--판매원 주소

				,  E.DIV_NAME					--제조원
				,  E.ADDR						--제조원 주소
				, '※ 본제품은 일회용 멸균 의료기기이므로 재사용을 금지함.' AS NOTICE

				, CASE WHEN ISNULL(B.LABEL_TYPE, 'A')  IN ( 'A', '' )  THEN 'A' ELSE B.LABEL_TYPE END  LEBEL_TYPE    -- 라벨타입
				, H.FILE_PATH + '\' + H.FILE_ID + '.' + H.FILE_EXT AS FILE_PATH
				, H1.REF_CODE1 AS PACK_QTY
				, A.GOOD_PRODT_Q
				, C.STOCK_UNIT
				, A.PRODT_Q
				, A1.LOT_NO
				, A1.EXPIRATION_DATE
				, A1.PRODT_PRSN
			    , H2.CODE_NAME
			FROM PMR110T A WITH(NOLOCK)
			INNER JOIN PMR100T A1 WITH(NOLOCK) ON A.COMP_CODE = A1.COMP_CODE
											  AND A.DIV_CODE  = A1.DIV_CODE
											  AND A.PRODT_NUM = A1.PRODT_NUM
			LEFT JOIN BPR250T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
							AND B.DIV_CODE = A.DIV_CODE
							AND B.ITEM_CODE = A.ITEM_CODE
            LEFT JOIN BPR200T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
							AND B1.DIV_CODE = A.DIV_CODE
							AND B1.ITEM_CODE = A.ITEM_CODE
			INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
							AND C.ITEM_CODE = A.ITEM_CODE
			LEFT JOIN BPR000T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
							AND D.LEVEL1 = C.ITEM_LEVEL1
							AND D.LEVEL2 = '*'
							AND D.LEVEL3 = '*'
			INNER JOIN BOR120T E ON E.COMP_CODE = A.COMP_CODE
								AND E.DIV_CODE = A.DIV_CODE
			LEFT JOIN BCM100T F ON F.COMP_CODE = A.COMP_CODE
								AND F.CUSTOM_CODE = #{CUSTOM_CODE}
		    LEFT JOIN BPR101T H ON H.COMP_CODE = A.COMP_CODE
								    AND H.ITEM_CODE = A.ITEM_CODE
									AND H.FILE_TYPE = '00'
			LEFT JOIN BSA100T H1 ON H1.COMP_CODE = A.COMP_CODE
								    AND H1.MAIN_CODE = 'B138'
									AND H1.SUB_CODE	 = B1.PACK_TYPE
			LEFT JOIN BSA100T H2 ON H1.COMP_CODE = A.COMP_CODE
								    AND H2.MAIN_CODE = 'P505'
									AND H2.SUB_CODE	 = A1.PRODT_PRSN

			WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.DIV_CODE = #{DIV_CODE}
			AND
			 <foreach collection="ORDER_NUMS" item="item" separator="OR" close=")" open="(">
					  	  (A.PRODT_NUM = '${item.ORDER_NUM}')
			 </foreach>
			ORDER BY A.PRODT_NUM, A.ITEM_CODE ASC

 	END

    </select>

    <select id="s_sof130rkrv_novisServiceImpl.clipselect3_subReport" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON



	DECLARE @TMP_TB1 TABLE
		(
			COMP_CODE NVARCHAR(100),
			DIV_CODE NVARCHAR(100),
			PRODT_NUM NVARCHAR(100),
			OUT_Q NUMERIC(30,6)

		)

 <foreach collection="ORDER_NUMS" item="item" separator="" close="" open="">
	INSERT INTO @TMP_TB1(COMP_CODE,DIV_CODE,PRODT_NUM,OUT_Q)
	(

		SELECT
			A.COMP_CODE
			,A.DIV_CODE
			,A.PRODT_NUM
			,${item.OUT_Q}

		FROM PMR110T A  WITH (NOLOCK)

	   WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.DIV_CODE = #{DIV_CODE}
			AND A.PRODT_NUM = '${item.ORDER_NUM}'
	)
 </foreach>





		--출고전표(생산)

			SELECT A.ITEM_CODE
			    , C.ITEM_NAME
				, D.LEVEL_NAME
				, B.LABEL_NAME
				, C.SPEC

				, B.TYPE_NAME  --형명
				, A.PRODT_DATE --제조연월
				, CONVERT(NVARCHAR(08), DATEADD(MM, ISNULL(C.EXPIRATION_DAY, 0)
												, DATEADD(DD, -1, A.PRODT_DATE))
												, 112) AS EXPIRE_DATE --사용기한
				, A.LOT_NO
				, C.BARCODE
				-----------------------------------
				, B.HOSPITAL_ITEM
				, 0								AS UNIT_QTY		--수량(50EA/BOX)

				, '제3351호 / ' +  B.REPORT_NO  AS REPORT_NO --제조 및 품목허가번호

				, F.CUSTOM_FULL_NAME			AS SELLER		--판매원
				, F.ADDR1						AS SELLER_ADDR	--판매원 주소

				,  E.DIV_NAME					--제조원
				,  E.ADDR						--제조원 주소
				, '※ 본제품은 일회용 멸균 의료기기이므로 재사용을 금지함.' AS NOTICE

				, CASE WHEN ISNULL(B.LABEL_TYPE, 'A')  IN ( 'A', '' )  THEN 'A' ELSE B.LABEL_TYPE END  LEBEL_TYPE    -- 라벨타입
				, H.FILE_PATH + '\' + H.FILE_ID + '.' + H.FILE_EXT AS FILE_PATH
				, H1.REF_CODE1 AS PACK_QTY
				, A.GOOD_PRODT_Q
				, C.STOCK_UNIT
				, A.PRODT_Q
				, A1.LOT_NO
				, A1.EXPIRATION_DATE
				, A1.PRODT_PRSN
			    , H2.CODE_NAME

			    ,R1.OUT_Q
			FROM PMR110T A WITH(NOLOCK)
			INNER JOIN PMR100T A1 WITH(NOLOCK) ON A.COMP_CODE = A1.COMP_CODE
											  AND A.DIV_CODE  = A1.DIV_CODE
											  AND A.PRODT_NUM = A1.PRODT_NUM
			LEFT JOIN BPR250T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
							AND B.DIV_CODE = A.DIV_CODE
							AND B.ITEM_CODE = A.ITEM_CODE
            LEFT JOIN BPR200T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
							AND B1.DIV_CODE = A.DIV_CODE
							AND B1.ITEM_CODE = A.ITEM_CODE
			INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
							AND C.ITEM_CODE = A.ITEM_CODE
			LEFT JOIN BPR000T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
							AND D.LEVEL1 = C.ITEM_LEVEL1
							AND D.LEVEL2 = '*'
							AND D.LEVEL3 = '*'
			INNER JOIN BOR120T E ON E.COMP_CODE = A.COMP_CODE
								AND E.DIV_CODE = A.DIV_CODE
			LEFT JOIN BCM100T F ON F.COMP_CODE = A.COMP_CODE
								AND F.CUSTOM_CODE = #{CUSTOM_CODE}
		    LEFT JOIN BPR101T H ON H.COMP_CODE = A.COMP_CODE
								    AND H.ITEM_CODE = A.ITEM_CODE
									AND H.FILE_TYPE = '00'
			LEFT JOIN BSA100T H1 ON H1.COMP_CODE = A.COMP_CODE
								    AND H1.MAIN_CODE = 'B138'
									AND H1.SUB_CODE	 = B1.PACK_TYPE
			LEFT JOIN BSA100T H2 ON H1.COMP_CODE = A.COMP_CODE
								    AND H2.MAIN_CODE = 'P505'
									AND H2.SUB_CODE	 = A1.PRODT_PRSN

			INNER JOIN @TMP_TB1 R1 ON R1.COMP_CODE = A.COMP_CODE
								  AND R1.DIV_CODE = A.DIV_CODE
								  AND R1.PRODT_NUM = A.PRODT_NUM

			WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.DIV_CODE = #{DIV_CODE}
			AND
			 <foreach collection="ORDER_NUMS" item="item" separator="OR" close=")" open="(">
					  	  (A.PRODT_NUM = '${item.ORDER_NUM}')
			 </foreach>

			ORDER BY A.PRODT_NUM, A.ITEM_CODE ASC

 	END

    </select>
</mapper>