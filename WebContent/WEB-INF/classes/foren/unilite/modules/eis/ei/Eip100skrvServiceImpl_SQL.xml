<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eip100skrvServiceImpl">
	
	
	<select id="eip100skrvServiceImpl.selectChart" parameterType="Map" resultType="rMap">

IF OBJECT_ID('tempdb..#TEMP1') IS NOT NULL
    DROP TABLE #TEMP1

CREATE TABLE #TEMP1
(
        SECTION_CD     NVARCHAR(20) NULL
    ,   PER_PRE_YEAR_ALL NUMERIC(30,6) NULL
    ,   PER_YEAR_ALL NUMERIC(30,6) NULL
)

INSERT INTO #TEMP1
SELECT 
	A.SECTION_CD 
	,ISNULL(B.PRE_YEAR_SUM_INOUT_Q_ALL,0) / ISNULL(A.PRE_YEAR_SUM_QTY_ALL,0) * 100	AS PER_PRE_YEAR_ALL --전년도 실적계
	,ISNULL(B.SUM_INOUT_Q_ALL,0) / ISNULL(A.SUM_QTY_ALL,0) * 100	AS PER_YEAR_ALL --이번년도 실적계
FROM
(SELECT 
	(SELECT  
		SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q1,0) > 0  THEN S1.MOD_PLAN_Q1  ELSE ISNULL(S1.PLAN_QTY1,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q2,0) > 0  THEN S1.MOD_PLAN_Q2  ELSE ISNULL(S1.PLAN_QTY2,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q3,0) > 0  THEN S1.MOD_PLAN_Q3  ELSE ISNULL(S1.PLAN_QTY3,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q4,0) > 0  THEN S1.MOD_PLAN_Q4  ELSE ISNULL(S1.PLAN_QTY4,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q5,0) > 0  THEN S1.MOD_PLAN_Q5  ELSE ISNULL(S1.PLAN_QTY5,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q6,0) > 0  THEN S1.MOD_PLAN_Q6  ELSE ISNULL(S1.PLAN_QTY6,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q7,0) > 0  THEN S1.MOD_PLAN_Q7  ELSE ISNULL(S1.PLAN_QTY7,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q8,0) > 0  THEN S1.MOD_PLAN_Q8  ELSE ISNULL(S1.PLAN_QTY8,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q9,0) > 0  THEN S1.MOD_PLAN_Q9  ELSE ISNULL(S1.PLAN_QTY9,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q10,0) > 0 THEN S1.MOD_PLAN_Q10 ELSE ISNULL(S1.PLAN_QTY10,0) END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q11,0) > 0 THEN S1.MOD_PLAN_Q11 ELSE ISNULL(S1.PLAN_QTY11,0) END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q12,0) > 0 THEN S1.MOD_PLAN_Q12 ELSE ISNULL(S1.PLAN_QTY12,0) END) AS SUM_QTY
	FROM S_SSP100T_KD S1 WITH(NOLOCK)
			LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = S1.COMP_CODE
											AND R1.DIV_CODE  = S1.DIV_CODE
											AND R1.ITEM_CODE = S1.PLAN_TYPE2_CODE
			LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												AND R2.TYPE_LEVEL = R1.DIV_CODE
												AND R2.TREE_CODE = R1.WORK_SHOP_CODE
	WHERE S1.COMP_CODE = 'MASTER'
		AND S1.DIV_CODE = '01'
		AND S1.PLAN_TYPE2 = '6'
		AND S1.PLAN_YEAR  = LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4)
		AND R2.SECTION_CD =  T1.SECTION_CD
	GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.PLAN_YEAR, R2.SECTION_CD
	)	AS PRE_YEAR_SUM_QTY_ALL
	,*
	FROM ( 
		SELECT A.COMP_CODE
			, A.DIV_CODE
			, R2.SECTION_CD
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q1,0) > 0  THEN A.MOD_PLAN_Q1  ELSE ISNULL(A.PLAN_QTY1,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q2,0) > 0  THEN A.MOD_PLAN_Q2  ELSE ISNULL(A.PLAN_QTY2,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q3,0) > 0  THEN A.MOD_PLAN_Q3  ELSE ISNULL(A.PLAN_QTY3,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q4,0) > 0  THEN A.MOD_PLAN_Q4  ELSE ISNULL(A.PLAN_QTY4,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q5,0) > 0  THEN A.MOD_PLAN_Q5  ELSE ISNULL(A.PLAN_QTY5,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q6,0) > 0  THEN A.MOD_PLAN_Q6  ELSE ISNULL(A.PLAN_QTY6,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q7,0) > 0  THEN A.MOD_PLAN_Q7  ELSE ISNULL(A.PLAN_QTY7,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q8,0) > 0  THEN A.MOD_PLAN_Q8  ELSE ISNULL(A.PLAN_QTY8,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q9,0) > 0  THEN A.MOD_PLAN_Q9  ELSE ISNULL(A.PLAN_QTY9,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q10,0) > 0 THEN A.MOD_PLAN_Q10 ELSE ISNULL(A.PLAN_QTY10,0) END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q11,0) > 0 THEN A.MOD_PLAN_Q11 ELSE ISNULL(A.PLAN_QTY11,0) END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q12,0) > 0 THEN A.MOD_PLAN_Q12 ELSE ISNULL(A.PLAN_QTY12,0) END) AS SUM_QTY_ALL
		FROM S_SSP100T_KD A WITH(NOLOCK)
				LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												AND R1.DIV_CODE  = A.DIV_CODE
												AND R1.ITEM_CODE = A.PLAN_TYPE2_CODE
				LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												 AND R2.TYPE_LEVEL = R1.DIV_CODE
												 AND R2.TREE_CODE = R1.WORK_SHOP_CODE
		WHERE A.COMP_CODE = 'MASTER'
			AND A.DIV_CODE = '01'
			AND A.PLAN_TYPE2 = '6'	--품목별
			AND A.PLAN_YEAR  = LEFT(CONVERT(CHAR(8), GETDATE(), 112),4)
			AND R2.SECTION_CD IN ('A','B','C')
		GROUP BY A.COMP_CODE, A.DIV_CODE, A.PLAN_YEAR, R2.SECTION_CD
	) T1 
) A
	LEFT JOIN 
(
SELECT
	(SELECT  
		SUM(INOUT_Q) AS SUM_INOUT_Q
		FROM BTR100T S1 WITH(NOLOCK)
	LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = S1.COMP_CODE
									AND R1.DIV_CODE  = S1.DIV_CODE
									AND R1.ITEM_CODE = S1.ITEM_CODE
	LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
									AND R2.TYPE_LEVEL = R1.DIV_CODE
									AND R2.TREE_CODE = R1.WORK_SHOP_CODE
		WHERE S1.COMP_CODE = 'MASTER'
			AND S1.DIV_CODE = '01'
			AND S1.INOUT_TYPE  = '1'	--입고
		AND S1.CREATE_LOC  = '1'		--수불생성경로 (1 : 영업
		AND S1.INOUT_CODE_TYPE = '3'	-- 수불처구분 (3 : 작업장
		AND EXISTS(SELECT S2.PRODT_NUM FROM PMR100T S2 WITH(NOLOCK) WHERE S2.PRODT_NUM = S1.BASIS_NUM )

		AND LEFT(S1.INOUT_DATE,4) = LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4)
		
		AND R2.SECTION_CD =  T2.SECTION_CD
		GROUP BY S1.COMP_CODE, S1.DIV_CODE, R2.SECTION_CD
	)	AS PRE_YEAR_SUM_INOUT_Q_ALL
	,*
	FROM (
		SELECT 
			A.COMP_CODE
			, A.DIV_CODE
			, R2.SECTION_CD
			,SUM(INOUT_Q) AS SUM_INOUT_Q_ALL
			FROM BTR100T A WITH(NOLOCK)
			LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
											AND R1.DIV_CODE  = A.DIV_CODE
											AND R1.ITEM_CODE = A.ITEM_CODE
			LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												AND R2.TYPE_LEVEL = R1.DIV_CODE
												AND R2.TREE_CODE = R1.WORK_SHOP_CODE
			WHERE A.COMP_CODE = 'MASTER'
				AND A.DIV_CODE = '01'
				AND A.INOUT_TYPE  = '1'
			AND A.CREATE_LOC  = '1'
			AND A.INOUT_CODE_TYPE = '3'
			AND EXISTS(SELECT S1.PRODT_NUM FROM PMR100T S1 WITH(NOLOCK) WHERE S1.PRODT_NUM = A.BASIS_NUM )
			AND LEFT(A.INOUT_DATE,4) = LEFT(CONVERT(CHAR(8), GETDATE(), 112),4)
			AND R2.SECTION_CD IN ('A','B','C')
			GROUP BY A.COMP_CODE, A.DIV_CODE, R2.SECTION_CD
		) T2
	)B	ON B.COMP_CODE = A.COMP_CODE
			   AND B.DIV_CODE = A.DIV_CODE
			   AND B.SECTION_CD = A.SECTION_CD

SELECT 
	T.SECTION_CD
	,(CASE WHEN T.YEAR  = LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4) THEN TT.PER_PRE_YEAR_ALL
		  ELSE TT.PER_YEAR_ALL
	  END) AS PER
	,T.YEAR
FROM
(
	SELECT 
		'A' AS SECTION_CD
		,0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4) AS YEAR
	UNION ALL 
	SELECT
		'A' AS SECTION_CD
		, 0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), GETDATE(), 112),4) AS YEAR
	UNION ALL 
	SELECT 
		'B' AS SECTION_CD
		,0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4) AS YEAR
	UNION ALL
	SELECT
		'B' AS SECTION_CD
		, 0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), GETDATE(), 112),4) AS YEAR
	UNION ALL
	SELECT 
		'C' AS SECTION_CD
		,0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4) AS YEAR
	UNION ALL
	SELECT
		'C' AS SECTION_CD
		, 0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), GETDATE(), 112),4) AS YEAR
	UNION ALL
	SELECT 
		'ALL' AS SECTION_CD
		,0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4) AS YEAR
	UNION ALL
	SELECT
		'ALL' AS SECTION_CD
		, 0.000000 AS PER
		,LEFT(CONVERT(CHAR(8), GETDATE(), 112),4) AS YEAR
) T
LEFT JOIN 
	(
		SELECT
			A.SECTION_CD
			,A.PER_PRE_YEAR_ALL
			,A.PER_YEAR_ALL
		FROM
		(
		SELECT * FROM #TEMP1
			UNION ALL
		SELECT
			'ALL' AS  SECTION_CD
			,AVG(PER_PRE_YEAR_ALL)	  AS PER_PRE_YEAR_ALL
			,AVG(PER_YEAR_ALL)		  AS PER_YEAR_ALL
		FROM #TEMP1
		) A
	) TT ON TT.SECTION_CD = T.SECTION_CD
WHERE T.SECTION_CD = #{SECTION_CD}
	</select>
		
	
	<select id="eip100skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* eip100skrvServiceImpl.selectList */

IF OBJECT_ID('tempdb..#TEMP1') IS NOT NULL
    DROP TABLE #TEMP1

CREATE TABLE #TEMP1
(
        SECTION_CD     NVARCHAR(20) NULL
    ,    SECTION_NAME     NVARCHAR(20) NULL
    ,   PER_PRE_YEAR_ALL NUMERIC(30,6) NULL
	
    ,   PER_01 NUMERIC(30,6) NULL
    ,   PER_02 NUMERIC(30,6) NULL
    ,   PER_03 NUMERIC(30,6) NULL
    ,   PER_04 NUMERIC(30,6) NULL
    ,   PER_05 NUMERIC(30,6) NULL
    ,   PER_06 NUMERIC(30,6) NULL
    ,   PER_07 NUMERIC(30,6) NULL
    ,   PER_08 NUMERIC(30,6) NULL
    ,   PER_09 NUMERIC(30,6) NULL
    ,   PER_10 NUMERIC(30,6) NULL
    ,   PER_11 NUMERIC(30,6) NULL
    ,   PER_12 NUMERIC(30,6) NULL
    ,   PER_YEAR_ALL NUMERIC(30,6) NULL
    ,   PER_YEAR_CALC NUMERIC(30,6) NULL

    ,   REMARK     NVARCHAR(100) NULL

)

INSERT INTO #TEMP1

SELECT 
	A.SECTION_CD 
	,A.SECTION_NAME
	,ISNULL(B.PRE_YEAR_SUM_INOUT_Q_ALL,0) / ISNULL(A.PRE_YEAR_SUM_QTY_ALL,0) * 100	AS PER_PRE_YEAR_ALL --전년도 실적계

	,ISNULL(B.SUM_INOUT_Q01,0) / ISNULL(A.SUM_QTY_01,0) * 100	AS PER_01 --1월 실적계
	,ISNULL(B.SUM_INOUT_Q02,0) / ISNULL(A.SUM_QTY_02,0) * 100	AS PER_02 --2월 실적계
	,ISNULL(B.SUM_INOUT_Q03,0) / ISNULL(A.SUM_QTY_03,0) * 100	AS PER_03 --3월 실적계
	,ISNULL(B.SUM_INOUT_Q04,0) / ISNULL(A.SUM_QTY_04,0) * 100	AS PER_04 --4월 실적계
	,ISNULL(B.SUM_INOUT_Q05,0) / ISNULL(A.SUM_QTY_05,0) * 100	AS PER_05 --5월 실적계
	,ISNULL(B.SUM_INOUT_Q06,0) / ISNULL(A.SUM_QTY_06,0) * 100	AS PER_06 --6월 실적계
	,ISNULL(B.SUM_INOUT_Q07,0) / ISNULL(A.SUM_QTY_07,0) * 100	AS PER_07 --7월 실적계
	,ISNULL(B.SUM_INOUT_Q08,0) / ISNULL(A.SUM_QTY_08,0) * 100	AS PER_08 --8월 실적계
	,ISNULL(B.SUM_INOUT_Q09,0) / ISNULL(A.SUM_QTY_09,0) * 100	AS PER_09 --9월 실적계
	,ISNULL(B.SUM_INOUT_Q10,0) / ISNULL(A.SUM_QTY_10,0) * 100	AS PER_10 --10월 실적계
	,ISNULL(B.SUM_INOUT_Q11,0) / ISNULL(A.SUM_QTY_11,0) * 100	AS PER_11 --11월 실적계
	,ISNULL(B.SUM_INOUT_Q12,0) / ISNULL(A.SUM_QTY_12,0) * 100	AS PER_12 --12월 실적계
	
	,ISNULL(B.SUM_INOUT_Q_ALL,0) / ISNULL(A.SUM_QTY_ALL,0) * 100	AS PER_YEAR_ALL --이번년도 실적계

	,ISNULL(B.SUM_INOUT_Q_ALL,0) / ISNULL(A.SUM_QTY_ALL,0) * 100 - ISNULL(B.PRE_YEAR_SUM_INOUT_Q_ALL,0) / ISNULL(A.PRE_YEAR_SUM_QTY_ALL,0) * 100 AS PER_YEAR_CALC --전년 대비 증감율

	,'' AS REMARK

FROM
(SELECT 
	(SELECT  

			SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q1,0) > 0  THEN S1.MOD_PLAN_Q1  ELSE ISNULL(S1.PLAN_QTY1,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q2,0) > 0  THEN S1.MOD_PLAN_Q2  ELSE ISNULL(S1.PLAN_QTY2,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q3,0) > 0  THEN S1.MOD_PLAN_Q3  ELSE ISNULL(S1.PLAN_QTY3,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q4,0) > 0  THEN S1.MOD_PLAN_Q4  ELSE ISNULL(S1.PLAN_QTY4,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q5,0) > 0  THEN S1.MOD_PLAN_Q5  ELSE ISNULL(S1.PLAN_QTY5,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q6,0) > 0  THEN S1.MOD_PLAN_Q6  ELSE ISNULL(S1.PLAN_QTY6,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q7,0) > 0  THEN S1.MOD_PLAN_Q7  ELSE ISNULL(S1.PLAN_QTY7,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q8,0) > 0  THEN S1.MOD_PLAN_Q8  ELSE ISNULL(S1.PLAN_QTY8,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q9,0) > 0  THEN S1.MOD_PLAN_Q9  ELSE ISNULL(S1.PLAN_QTY9,0)  END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q10,0) > 0 THEN S1.MOD_PLAN_Q10 ELSE ISNULL(S1.PLAN_QTY10,0) END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q11,0) > 0 THEN S1.MOD_PLAN_Q11 ELSE ISNULL(S1.PLAN_QTY11,0) END) 
		+ SUM(CASE WHEN ISNULL(S1.MOD_PLAN_Q12,0) > 0 THEN S1.MOD_PLAN_Q12 ELSE ISNULL(S1.PLAN_QTY12,0) END) AS SUM_QTY
	FROM S_SSP100T_KD S1 WITH(NOLOCK)
			LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = S1.COMP_CODE
											AND R1.DIV_CODE  = S1.DIV_CODE
											AND R1.ITEM_CODE = S1.PLAN_TYPE2_CODE
			LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												AND R2.TYPE_LEVEL = R1.DIV_CODE
												AND R2.TREE_CODE = R1.WORK_SHOP_CODE
	WHERE S1.COMP_CODE = 'MASTER'
		AND S1.DIV_CODE = '01'
		AND S1.PLAN_TYPE2 = '6'
		AND S1.PLAN_YEAR  = LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4)
		AND R2.SECTION_CD =  T1.SECTION_CD
	GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.PLAN_YEAR, R2.SECTION_CD


	)	AS PRE_YEAR_SUM_QTY_ALL
	,*
	FROM ( 
		SELECT A.COMP_CODE
			, A.DIV_CODE
			, R2.SECTION_CD
			, MAX(R3.CODE_NAME) AS SECTION_NAME

			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q1,0) > 0  THEN A.MOD_PLAN_Q1  ELSE ISNULL(A.PLAN_QTY1,0)  END) AS SUM_QTY_01
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q2,0) > 0  THEN A.MOD_PLAN_Q2  ELSE ISNULL(A.PLAN_QTY2,0)  END) AS SUM_QTY_02
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q3,0) > 0  THEN A.MOD_PLAN_Q3  ELSE ISNULL(A.PLAN_QTY3,0)  END) AS SUM_QTY_03
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q4,0) > 0  THEN A.MOD_PLAN_Q4  ELSE ISNULL(A.PLAN_QTY4,0)  END) AS SUM_QTY_04
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q5,0) > 0  THEN A.MOD_PLAN_Q5  ELSE ISNULL(A.PLAN_QTY5,0)  END) AS SUM_QTY_05
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q6,0) > 0  THEN A.MOD_PLAN_Q6  ELSE ISNULL(A.PLAN_QTY6,0)  END) AS SUM_QTY_06
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q7,0) > 0  THEN A.MOD_PLAN_Q7  ELSE ISNULL(A.PLAN_QTY7,0)  END) AS SUM_QTY_07
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q8,0) > 0  THEN A.MOD_PLAN_Q8  ELSE ISNULL(A.PLAN_QTY8,0)  END) AS SUM_QTY_08
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q9,0) > 0  THEN A.MOD_PLAN_Q9  ELSE ISNULL(A.PLAN_QTY9,0)  END) AS SUM_QTY_09
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q10,0) > 0 THEN A.MOD_PLAN_Q10 ELSE ISNULL(A.PLAN_QTY10,0) END) AS SUM_QTY_10
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q11,0) > 0 THEN A.MOD_PLAN_Q11 ELSE ISNULL(A.PLAN_QTY11,0) END) AS SUM_QTY_11
			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q12,0) > 0 THEN A.MOD_PLAN_Q12 ELSE ISNULL(A.PLAN_QTY12,0) END) AS SUM_QTY_12

			, SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q1,0) > 0  THEN A.MOD_PLAN_Q1  ELSE ISNULL(A.PLAN_QTY1,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q2,0) > 0  THEN A.MOD_PLAN_Q2  ELSE ISNULL(A.PLAN_QTY2,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q3,0) > 0  THEN A.MOD_PLAN_Q3  ELSE ISNULL(A.PLAN_QTY3,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q4,0) > 0  THEN A.MOD_PLAN_Q4  ELSE ISNULL(A.PLAN_QTY4,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q5,0) > 0  THEN A.MOD_PLAN_Q5  ELSE ISNULL(A.PLAN_QTY5,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q6,0) > 0  THEN A.MOD_PLAN_Q6  ELSE ISNULL(A.PLAN_QTY6,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q7,0) > 0  THEN A.MOD_PLAN_Q7  ELSE ISNULL(A.PLAN_QTY7,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q8,0) > 0  THEN A.MOD_PLAN_Q8  ELSE ISNULL(A.PLAN_QTY8,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q9,0) > 0  THEN A.MOD_PLAN_Q9  ELSE ISNULL(A.PLAN_QTY9,0)  END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q10,0) > 0 THEN A.MOD_PLAN_Q10 ELSE ISNULL(A.PLAN_QTY10,0) END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q11,0) > 0 THEN A.MOD_PLAN_Q11 ELSE ISNULL(A.PLAN_QTY11,0) END) 
			+ SUM(CASE WHEN ISNULL(A.MOD_PLAN_Q12,0) > 0 THEN A.MOD_PLAN_Q12 ELSE ISNULL(A.PLAN_QTY12,0) END) AS SUM_QTY_ALL
		FROM S_SSP100T_KD A WITH(NOLOCK)
				LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												AND R1.DIV_CODE  = A.DIV_CODE
												AND R1.ITEM_CODE = A.PLAN_TYPE2_CODE
				LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												 AND R2.TYPE_LEVEL = R1.DIV_CODE
												 AND R2.TREE_CODE = R1.WORK_SHOP_CODE
				LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
												 AND R3.MAIN_CODE = 'B113'
												 AND R3.SUB_CODE = R2.SECTION_CD
		WHERE A.COMP_CODE = 'MASTER'
			AND A.DIV_CODE = '01'
			AND A.PLAN_TYPE2 = '6'	--품목별
			AND A.PLAN_YEAR  = LEFT(CONVERT(CHAR(8), GETDATE(), 112),4)
			AND R2.SECTION_CD IN ('A','B','C')
		GROUP BY A.COMP_CODE, A.DIV_CODE, A.PLAN_YEAR, R2.SECTION_CD
  
	) T1 
) A

	LEFT JOIN 
(
SELECT
	(SELECT  
		SUM(INOUT_Q) AS SUM_INOUT_Q
		FROM BTR100T S1 WITH(NOLOCK)
	LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = S1.COMP_CODE
									AND R1.DIV_CODE  = S1.DIV_CODE
									AND R1.ITEM_CODE = S1.ITEM_CODE
	LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
									AND R2.TYPE_LEVEL = R1.DIV_CODE
									AND R2.TREE_CODE = R1.WORK_SHOP_CODE
		WHERE S1.COMP_CODE = 'MASTER'
			AND S1.DIV_CODE = '01'
			AND S1.INOUT_TYPE  = '1'	--입고
		AND S1.CREATE_LOC  = '1'		--수불생성경로 (1 : 영업
		AND S1.INOUT_CODE_TYPE = '3'	-- 수불처구분 (3 : 작업장
		AND EXISTS(SELECT S2.PRODT_NUM FROM PMR100T S2 WITH(NOLOCK) WHERE S2.PRODT_NUM = S1.BASIS_NUM )

		AND LEFT(S1.INOUT_DATE,4) = LEFT(CONVERT(CHAR(8), DATEADD(year, -1, GETDATE()), 112),4)
		
		AND R2.SECTION_CD =  T2.SECTION_CD
		GROUP BY S1.COMP_CODE, S1.DIV_CODE, R2.SECTION_CD


	)	AS PRE_YEAR_SUM_INOUT_Q_ALL
	,*
	FROM (
		SELECT 
			A.COMP_CODE
			, A.DIV_CODE
			, R2.SECTION_CD
			, MAX(R3.CODE_NAME) AS SECTION_NAME

			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '01' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q01
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '02' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q02
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '03' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q03
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '04' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q04
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '05' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q05
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '06' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q06
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '07' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q07
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '08' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q08
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '09' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q09
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '10' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q10
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '11' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q11
			,SUM(CASE WHEN SUBSTRING(A.INOUT_DATE,5,2) = '12' THEN INOUT_Q
				ELSE 0 END) SUM_INOUT_Q12
						
			,SUM(INOUT_Q) AS SUM_INOUT_Q_ALL
					
			FROM BTR100T A WITH(NOLOCK)
			LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
											AND R1.DIV_CODE  = A.DIV_CODE
											AND R1.ITEM_CODE = A.ITEM_CODE
			LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
												AND R2.TYPE_LEVEL = R1.DIV_CODE
												AND R2.TREE_CODE = R1.WORK_SHOP_CODE
			LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
												AND R3.MAIN_CODE = 'B113'
												AND R3.SUB_CODE = R2.SECTION_CD 
			WHERE A.COMP_CODE = 'MASTER'
				AND A.DIV_CODE = '01'
				AND A.INOUT_TYPE  = '1'
			AND A.CREATE_LOC  = '1'
			AND A.INOUT_CODE_TYPE = '3'
			AND EXISTS(SELECT S1.PRODT_NUM FROM PMR100T S1 WITH(NOLOCK) WHERE S1.PRODT_NUM = A.BASIS_NUM )

			AND LEFT(A.INOUT_DATE,4) = LEFT(CONVERT(CHAR(8), GETDATE(), 112),4)
		
				AND R2.SECTION_CD IN ('A','B','C')

			GROUP BY A.COMP_CODE, A.DIV_CODE, R2.SECTION_CD
  
		) T2
	)B	ON B.COMP_CODE = A.COMP_CODE
			   AND B.DIV_CODE = A.DIV_CODE
			   AND B.SECTION_CD = A.SECTION_CD



SELECT * FROM #TEMP1

UNION ALL 

SELECT 
	'ALL' AS  SECTION_CD    
	,'합계' AS SECTION_NAME   
   
	,AVG(PER_PRE_YEAR_ALL)	  AS PER_PRE_YEAR_ALL
	,AVG(PER_01)			  AS PER_01
	,AVG(PER_02)			  AS PER_02
	,AVG(PER_03)			  AS PER_03
	,AVG(PER_04)			  AS PER_04
	,AVG(PER_05)			  AS PER_05
	,AVG(PER_06)			  AS PER_06
	,AVG(PER_07)			  AS PER_07
	,AVG(PER_08)			  AS PER_08
	,AVG(PER_09)			  AS PER_09
	,AVG(PER_10)			  AS PER_10
	,AVG(PER_11)			  AS PER_11
	,AVG(PER_12)			  AS PER_12
	,AVG(PER_YEAR_ALL)		  AS PER_YEAR_ALL
	,AVG(PER_YEAR_CALC)		  AS PER_YEAR_CALC

	,'' AS REMARK 
FROM #TEMP1


	</select>
</mapper>