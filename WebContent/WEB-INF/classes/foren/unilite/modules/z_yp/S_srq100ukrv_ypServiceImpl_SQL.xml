<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_srq100ukrv_ypServiceImpl">

    <select id="s_srq100ukrv_ypServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
        /* s_srq100ukrv_yp.Cs_srq100ukrv_yp[fnSrq101QPop] Query01 */
        BEGIN
             SET NOCOUNT ON
             SET ARITHABORT ON

             DECLARE    @CompCode    NVARCHAR(08) /* 법인코드    */
                      , @UserId      NVARCHAR(100) /* 사용자ID    */
                      , @LangType    NVARCHAR(2)  /* 언어구분    */
                      , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                      , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

             SET @CompCode = #{S_COMP_CODE}
             SET @UserId   = #{S_USER_ID}
             SET @LangType = #{S_LANG_CODE}

             /* 명칭 참조 유형 */
                SELECT TOP 1 @RefItem = REF_ITEM
                  FROM BSA300T WITH (NOLOCK)
                 WHERE USER_ID = @UserId

                SET @RefItem = ISNULL(@RefItem, N'0')

             /* 날짜 포맷 유형 설정 */
                SELECT TOP 1 @DateFormat = CODE_NAME
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'B044'
                   AND REF_CODE1 = N'Y'

                SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

             /* 데이터 조회 */


            SELECT A.CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
                                             ELSE B.CUSTOM_NAME
                    END)                    AS CUSTOM_NAME
                 , SUM(A.ISSUE_REQ_QTY)								AS ISSUE_REQ_QTY
                 , (CASE WHEN ISNULL ( A.ISSUE_REQ_DATE , '' ) = ''
                         THEN ''
                         ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.ISSUE_REQ_DATE, 1, 4))
                                                                       , 'MM'   , SUBSTRING (A.ISSUE_REQ_DATE, 5, 2))
                                                                       , 'DD'   , SUBSTRING (A.ISSUE_REQ_DATE, 7, 2))
                      END)                                              AS ISSUE_REQ_DATE

                 , A.ORDER_TYPE
                 , A.ISSUE_REQ_NUM
                 , A.DIV_CODE
                 , A.ISSUE_REQ_PRSN
              FROM            SRQ100T A WITH (NOLOCK)
                   INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                     AND B.CUSTOM_CODE = A.CUSTOM_CODE
                   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                     AND C.ITEM_CODE   = A.ITEM_CODE
                                                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                                                     AND A.CUSTOM_CODE    LIKE #{CUSTOM_CODE} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
                                                     AND B.CUSTOM_NAME    LIKE #{CUSTOM_NAME} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_PRSN)">
                                                     AND A.ISSUE_REQ_PRSN    = #{ISSUE_REQ_PRSN}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                                                     AND A.ORDER_TYPE        = #{ORDER_TYPE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
                                                     AND A.INOUT_TYPE_DETAIL = #{INOUT_TYPE_DETAIL}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_FR)">
                                                     AND A.ISSUE_REQ_DATE   &gt;= #{ISSUE_REQ_DATE_FR}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_TO)">
                                                     AND A.ISSUE_REQ_DATE   &lt;= #{ISSUE_REQ_DATE_TO}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_DIV_CODE)">
                                                     AND A.ISSUE_DIV_CODE    = #{ISSUE_DIV_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                                                     AND A.WH_CODE           = #{WH_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                                                     AND A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                                                     AND C.ITEM_NAME      LIKE #{ITEM_NAME} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
                                                     AND A.PROJECT_NO        = #{PROJECT_NO}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                                     AND A.DIV_CODE          = #{DIV_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
                                                     AND A.COMP_CODE         = #{COMP_CODE}
                                                    </if>
			GROUP BY A.ISSUE_REQ_NUM, A.CUSTOM_CODE, B.CUSTOM_NAME1, B.CUSTOM_NAME2, B.CUSTOM_NAME, A.ISSUE_REQ_DATE, A.ORDER_TYPE, A.DIV_CODE, A.ISSUE_REQ_PRSN
            ORDER BY A.CUSTOM_CODE, A.ISSUE_REQ_DATE, A.ISSUE_REQ_NUM
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    <select id="s_srq100ukrv_ypServiceImpl.selectOrderNumDetail" parameterType="Map" resultType="rMap">
        /* s_srq100ukrv_yp.Cs_srq100ukrv_yp[fnSrq101QPop] Query01 */
        BEGIN
             SET NOCOUNT ON
             SET ARITHABORT ON

             DECLARE    @CompCode    NVARCHAR(08) /* 법인코드    */
                      , @UserId      NVARCHAR(100) /* 사용자ID    */
                      , @LangType    NVARCHAR(2)  /* 언어구분    */
                      , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                      , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

             SET @CompCode = #{S_COMP_CODE}
             SET @UserId   = #{S_USER_ID}
             SET @LangType = #{S_LANG_CODE}

             /* 명칭 참조 유형 */
                SELECT TOP 1 @RefItem = REF_ITEM
                  FROM BSA300T WITH (NOLOCK)
                 WHERE USER_ID = @UserId

                SET @RefItem = ISNULL(@RefItem, N'0')

             /* 날짜 포맷 유형 설정 */
                SELECT TOP 1 @DateFormat = CODE_NAME
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'B044'
                   AND REF_CODE1 = N'Y'

                SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

             /* 데이터 조회 */


            SELECT A.CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
                                             ELSE B.CUSTOM_NAME
                    END)                    AS CUSTOM_NAME

                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                    END)                    AS ITEM_NAME

                 , C.SPEC
                 , A.ISSUE_REQ_QTY
                 , (CASE WHEN ISNULL ( A.ISSUE_REQ_DATE , '' ) = ''
                         THEN ''
                         ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.ISSUE_REQ_DATE, 1, 4))
                                                                       , 'MM'   , SUBSTRING (A.ISSUE_REQ_DATE, 5, 2))
                                                                       , 'DD'   , SUBSTRING (A.ISSUE_REQ_DATE, 7, 2))
                      END)                                              AS ISSUE_REQ_DATE

                 , (CASE WHEN ISNULL ( A.ISSUE_DATE , '' ) = ''
                         THEN ''
                         ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.ISSUE_DATE, 1, 4))
                                                                       , 'MM'   , SUBSTRING (A.ISSUE_DATE, 5, 2))
                                                                       , 'DD'   , SUBSTRING (A.ISSUE_DATE, 7, 2))
                      END)                                              AS ISSUE_DATE
                 , A.ISSUE_DIV_CODE
                 , A.WH_CODE
                 , A.ORDER_TYPE
                 , A.INOUT_TYPE_DETAIL
                 , A.PROJECT_NO
                 , A.ISSUE_REQ_NUM
                 , A.DIV_CODE
                 , A.ISSUE_REQ_PRSN
                 , RTRIM(A.ISSUE_REQ_NUM) + RTRIM(CONVERT(VARCHAR(4),A.ISSUE_REQ_SEQ)) AS SORT_KEY
              FROM            SRQ100T A WITH (NOLOCK)
                   INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                     AND B.CUSTOM_CODE = A.CUSTOM_CODE
                   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                     AND C.ITEM_CODE   = A.ITEM_CODE
                                                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                                                     AND A.CUSTOM_CODE    LIKE #{CUSTOM_CODE} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
                                                     AND B.CUSTOM_NAME    LIKE #{CUSTOM_NAME} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_PRSN)">
                                                     AND A.ISSUE_REQ_PRSN    = #{ISSUE_REQ_PRSN}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                                                     AND A.ORDER_TYPE        = #{ORDER_TYPE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
                                                     AND A.INOUT_TYPE_DETAIL = #{INOUT_TYPE_DETAIL}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_FR)">
                                                     AND A.ISSUE_REQ_DATE   &gt;= #{ISSUE_REQ_DATE_FR}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_TO)">
                                                     AND A.ISSUE_REQ_DATE   &lt;= #{ISSUE_REQ_DATE_TO}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ISSUE_DIV_CODE)">
                                                     AND A.ISSUE_DIV_CODE    = #{ISSUE_DIV_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                                                     AND A.WH_CODE           = #{WH_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                                                     AND A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                                                     AND C.ITEM_NAME      LIKE #{ITEM_NAME} + '%'
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
                                                     AND A.PROJECT_NO        = #{PROJECT_NO}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                                     AND A.DIV_CODE          = #{DIV_CODE}
                                                    </if>
                                                    <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
                                                     AND A.COMP_CODE         = #{COMP_CODE}
                                                    </if>
            ORDER BY A.CUSTOM_CODE, A.ISSUE_REQ_DATE, A.ISSUE_REQ_NUM
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    <select id="s_srq100ukrv_ypServiceImpl.selectList" parameterType="Map" resultType="rMap">
        /* s_srq100ukrv_ypServiceImpl.selectList */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE       NVARCHAR(08)
                  , @DIV_CODE        NVARCHAR(08)
                  , @ISSUE_REQ_NUM   NVARCHAR(20)
                  , @USER_ID         NVARCHAR(100)

        /*  1. 변수 값 할당 */
            SET @COMP_CODE     =  #{S_COMP_CODE}
            SET @DIV_CODE      =  #{DIV_CODE}

            SET @USER_ID       =  #{S_USER_ID}

        /*  2. 명칭 조회 유형 설정 */
            DECLARE @RefItem         NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')

        /*  3. 데이터 조회 */
            SELECT
                   A.DIV_CODE                                                                      /*01.사업장          */
                 , A.ISSUE_REQ_METH                                                                /*02.출하지시방법    */
                 , A.ISSUE_REQ_PRSN                                                                /*03.출하지시담당자  */
                 , A.ISSUE_REQ_DATE                                                                /*04.출하지시일      */
                 , A.ISSUE_REQ_NUM                                                                 /*05.출하지시번호    */
                 , A.ISSUE_REQ_SEQ                                                                 /*06.출하지시순번    */
                 , A.CUSTOM_CODE                                                                   /*07.고객            */
                 , (CASE WHEN @RefItem = '1' THEN M3.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN M3.CUSTOM_NAME2
                                             ELSE M3.CUSTOM_NAME
                     END)                                                   AS CUSTOM_NAME         /*08.고객명          */
                 , A.BILL_TYPE                                                                     /*09.부가세유형      */
                 , A.ORDER_TYPE                                                                    /*10.수주구분        */
                 , A.INOUT_TYPE_DETAIL                                                             /*11.출고유형        */
                 , A.ISSUE_DIV_CODE                                                                /*12.출고사업장      */
                 , A.WH_CODE                                                                       /*13.출하창고        */
                 , A.ITEM_CODE                                                                     /*14.품목코드        */
                 , M1.ITEM_NAME                                                                    /*15.품목명          */
                 , M1.SPEC                                                                         /*16.규격            */
                 , A.ORDER_UNIT                                                                    /*17.판매단위        */

                 , A.PRICE_TYPE                                                                    /*단가구분*/

                 , A.TRANS_RATE                                                                    /*18.입수            */
                 , ISNULL(D1.STOCK_Q,0) / ISNULL(A.TRANS_RATE,1)            AS STOCK_Q             /*19.재고수량(판매단위재고량)*/

                 , A.ISSUE_REQ_QTY                                                                 /*20.출하지시량      */
                 , ISNULL(A.ISSUE_FOR_PRICE, 0)                             AS ISSUE_FOR_PRICE     /*외화단가*/

                 , ISNULL(A.ISSUE_WGT_Q, 0)                                 AS ISSUE_WGT_Q         /*출하지시량(중량단위)*/
                 , ISNULL(A.ISSUE_FOR_WGT_P, 0)                             AS ISSUE_FOR_WGT_P     /*외화단가(중량단위)*/
                 , ISNULL(A.ISSUE_VOL_Q, 0)                                 AS ISSUE_VOL_Q         /*출하지시량(부피단위)*/
                 , ISNULL(A.ISSUE_FOR_VOL_P, 0)                             AS ISSUE_FOR_VOL_P     /*외화단가(부피단위)*/

                 , ISNULL(A.ISSUE_FOR_AMT, 0)                               AS ISSUE_FOR_AMT       /*외화금액*/
                 , A.ISSUE_REQ_PRICE                                                               /*21.단가       */

                 , A.ISSUE_WGT_P                                                                   /*21.단가(중량단위)  */
                 , A.ISSUE_VOL_P                                                                   /*21.단가(부피단위)  */

                 , A.ISSUE_REQ_AMT                                                                 /*22.금액           */
                 , A.TAX_TYPE                                                                      /*23.과세여부       */
                 , A.ISSUE_REQ_TAX_AMT                                                             /*24.세액            */

                 , A.WGT_UNIT                                                                      /*중량단위*/
                 , A.UNIT_WGT                                                                      /*단위중량*/
                 , A.VOL_UNIT                                                                      /*부피단위*/
                 , A.UNIT_VOL                                                                      /*단위부피*/

                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.ISSUE_DATE)         AS ISSUE_DATE          /*25.출고요청일      */
                 , A.DELIVERY_TIME                                                                 /*25.출고요청시간    */
                 , A.DISCOUNT_RATE                                                                 /*26.할인율          */
                 , A.LOT_NO                                                                        /*27.Lot번호         */
                 , A.PRICE_YN                                                                      /*28.단가구분        */
                 , A.SALE_CUSTOM_CODE                                                              /*29.매출처          */
                 , (CASE WHEN @RefItem = '1' THEN M4.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN M4.CUSTOM_NAME2
                                             ELSE M4.CUSTOM_NAME
                     END)                                                   AS SALE_CUSTOM_NAME    /*30.매출처          */
                 , A.ACCOUNT_YNC                                                                   /*31.매출대상        */
                 , A.DVRY_CUST_CD                                                                  /*32.배송처          */
                 , M5.DVRY_CUST_NM                                          AS DVRY_CUST_NAME      /*33.배송처명        */
                 , A.PROJECT_NO                                                                    /*34.관리번호        */
                 , A.PO_NUM                                                                        /*35.P/O NO          */
                 , A.PO_SEQ                                                                        /*35.P/O SEQ         */
                 , A.ORDER_NUM                                                                     /*36.수주번호        */
                 , A.SER_NO                                                                        /*37.수주순번        */
                 , A.REMARK                                                                        /*38.비고            */
                 , A.UPDATE_DB_USER                                                                /*39.수정자          */
                 , A.UPDATE_DB_TIME                                                                /*40.수정일          */
                 , A.DEPT_CODE                                                                     /*41.출하지시부서    */
                 , A.TREE_NAME                                                                     /*42.부서명          */
                 , A.MONEY_UNIT                                                                    /*43.화폐단위        */
                 , A.EXCHANGE_RATE                                                                 /*44.환율            */
                 , ISNULL(A.ISSUE_QTY, 0) AS ISSUE_QTY                                             /*45.출고량          */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN ISNULL(R11.RETURN_Q,0)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN ISNULL(R51.RETURN_Q,0)
                                                          ELSE 0
                     END)                                                   AS RETURN_Q            /*46.수주의반품량    */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN ISNULL(R11.ORDER_Q,0)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN ISNULL(R51.ORDER_Q,0)
                                                          ELSE 0
                     END)                                                   AS ORDER_Q             /*47.수주의수주량    */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN ISNULL(R11.ISSUE_REQ_Q,0)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN ISNULL(R51.ISSUE_REQ_Q,0)
                                                          ELSE 0
                     END)                                                   AS ISSUE_REQ_Q         /*48.수주의출하요청량*/
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN uniLITE.fnGetUserDate(A.COMP_CODE, R13.DVRY_DATE)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN uniLITE.fnGetUserDate(A.COMP_CODE, R53.DELIVERY_DATE)
                                                          ELSE ''
                     END)                                                   AS DVRY_DATE           /*49-1.납기일        */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN R13.DVRY_TIME
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN R53.DELIVERY_TIME
                                                          ELSE ''
                     END)                                                   AS DVRY_TIME           /*49-2.납기시간      */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN R12.TAX_INOUT
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN '2'
                                                          ELSE M3.TAX_TYPE
                     END)                                                   AS TAX_INOUT           /*50.세액포함여부    */
                 , M1.STOCK_UNIT                                                                   /*51.재고단위        */
                 , A.ACCOUNT_YNC                                            AS PRE_ACCNT_YN        /*52.원매출대상여부  */
                 , CAST('F' AS VARCHAR(1))                                  AS REF_FLAG            /*53.참조여부        */
                 , CAST(0.0 AS NUMERIC(18,4))                               AS SALE_P              /*54.거래처/품목/단위 별 단가set하는 필드*/
                 , ISNULL(A.TREE_NAME,'N')                                  AS AMEND_YN            /*55.할인정보세트후, 수정여부(부서명FIELD을 사용)*/
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN ISNULL(R11.OUTSTOCK_Q,0)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN ISNULL(R51.OUTSTOCK_Q,0)
                                                          ELSE 0
                     END)                                                   AS OUTSTOCK_Q          /*56.수주의 출고량   */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN (CASE WHEN @RefItem = '1' THEN R14.CUSTOM_NAME1
                                                                     WHEN @RefItem = '2' THEN R14.CUSTOM_NAME2
                                                                                         ELSE R14.CUSTOM_NAME
                                                                 END)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN (CASE WHEN @RefItem = '1' THEN R54.CUSTOM_NAME1
                                                                     WHEN @RefItem = '2' THEN R54.CUSTOM_NAME2
                                                                                         ELSE R54.CUSTOM_NAME
                                                                 END)
                                                          ELSE ''
                     END)                                                   AS ORDER_CUST_NM       /*57.수주거래처      */
                 , ISNULL(M1.STOCK_CARE_YN, 'Y')                            AS STOCK_CARE_YN       /*58.재고관리대상    */
                 , (CASE WHEN ISNULL(A.REF_LOC, '') = '1' THEN ISNULL(R11.ORDER_Q,0) + ISNULL(R11.RETURN_Q,0) - ISNULL(R11.OUTSTOCK_Q,0) - ISNULL(R1.NOTOUT_Q,0)
                         WHEN ISNULL(A.REF_LOC, '') = '5' THEN ISNULL(R51.ORDER_Q,0) + ISNULL(R51.RETURN_Q,0) - ISNULL(R51.OUTSTOCK_Q,0) - ISNULL(R1.NOTOUT_Q,0)
                                                          ELSE 0
                     END)                                                   AS NOTOUT_Q            /*59.미납량          */
                 , RTRIM(A.ISSUE_REQ_NUM) + RTRIM(CONVERT(VARCHAR(4),A.ISSUE_REQ_SEQ)) AS SORT_KEY /*60.SORT KEY용      */
                 , M3.AGENT_TYPE                                            AS REF_AGENT_TYPE      /*61.거래처분류      */
                 , M3.WON_CALC_BAS                                          AS REF_WON_CALC_TYPE   /*62.원미만계산      */
                 , ISNULL(M6.REF_CODE2, M6.SUB_CODE)                        AS REF_CODE2           /*63.해당 출고유형의 시스템출고유형*/
                 , A.COMP_CODE                                                                     /*64.법인코드        */
                 , ISNULL(A.SCM_FLAG_YN, 'N')                               AS SCM_FLAG_YN         /*65.타시스템연계여부*/
                 , ISNULL(A.REF_LOC, '')                                    AS REF_LOC             /*66.참고경로        */
                 , ISNULL(R52.PAY_METHODE1, '')                             AS PAY_METHODE1
                 , ISNULL(R52.LC_SER_NO, '')                                AS LC_SER_NO
                 , 'FEFER'                                                  AS GUBUN
              FROM            SRQ100T A WITH (NOLOCK)
                   INNER JOIN BPR100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                      AND M1.ITEM_CODE   = A.ITEM_CODE
                   LEFT  JOIN BPR200T M7 WITH (NOLOCK) ON M7.COMP_CODE   = A.COMP_CODE
                                                      AND M7.DIV_CODE    = A.DIV_CODE
                                                      AND M7.ITEM_CODE   = A.ITEM_CODE
                   INNER JOIN BCM100T M3 WITH (NOLOCK) ON M3.COMP_CODE   = A.COMP_CODE
                                                      AND M3.CUSTOM_CODE = A.CUSTOM_CODE
                   INNER JOIN BCM100T M4 WITH (NOLOCK) ON M4.COMP_CODE   = A.COMP_CODE
                                                      AND M4.CUSTOM_CODE = A.SALE_CUSTOM_CODE
                   LEFT  JOIN SCM100T M5 WITH (NOLOCK) ON M5.COMP_CODE   = A.COMP_CODE
                                                      AND M5.CUSTOM_CODE = A.CUSTOM_CODE
                                                      AND CAST(M5.DVRY_CUST_SEQ AS NVARCHAR(8)) = A.DVRY_CUST_CD
                   LEFT  JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE   = A.COMP_CODE
                                                      AND M6.MAIN_CODE   = 'S007'
                                                      AND M6.SUB_CODE    = A.INOUT_TYPE_DETAIL
                   LEFT  JOIN (SELECT
                                      COMP_CODE
                                    , DIV_CODE
                                    , ITEM_CODE
                                    , WH_CODE
                                    , SUM(STOCK_Q) AS STOCK_Q
                                 FROM BIV100T WITH (NOLOCK)
                                GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) D1 ON D1.COMP_CODE = A.COMP_CODE
                                                                                    AND D1.DIV_CODE  = A.ISSUE_DIV_CODE
                                                                                    AND D1.ITEM_CODE = A.ITEM_CODE
                                                                                    AND D1.WH_CODE   = A.WH_CODE
                   LEFT  JOIN (SELECT
                                      COMP_CODE
                                    , ORDER_NUM
                                    , SER_NO
                                    , SUM(ISSUE_REQ_QTY - ISSUE_QTY) AS NOTOUT_Q
                                 FROM SRQ100T WITH (NOLOCK)
                                GROUP BY COMP_CODE, ORDER_NUM, SER_NO) R1 ON R1.COMP_CODE = A.COMP_CODE
                                                                         AND R1.ORDER_NUM = A.ORDER_NUM
                                                                         AND R1.SER_NO    = A.SER_NO

                   LEFT JOIN (SELECT
                                     COMP_CODE
                                   , ORDER_NUM
                                   , SER_NO
                                   , ITEM_CODE
                                   , SUM(OUTSTOCK_Q)  AS OUTSTOCK_Q
                                   , SUM(RETURN_Q)    AS RETURN_Q
                                   , SUM(ORDER_Q)     AS ORDER_Q
                                   , SUM(ISSUE_REQ_Q) AS ISSUE_REQ_Q
                                FROM SOF110T WITH (NOLOCK)
                               GROUP BY COMP_CODE, ORDER_NUM, SER_NO, ITEM_CODE) R11 ON R11.COMP_CODE = A.COMP_CODE
                                                                                    AND R11.ORDER_NUM = A.ORDER_NUM
                                                                                    AND R11.SER_NO    = A.SER_NO
                                                                                    AND R11.ITEM_CODE = A.ITEM_CODE
                   LEFT JOIN SOF100T R12 WITH (NOLOCK) ON R12.COMP_CODE   = A.COMP_CODE
                                                      AND R12.ORDER_NUM   = A.ORDER_NUM
                   LEFT JOIN SOF110T R13 WITH (NOLOCK) ON R13.COMP_CODE   = A.COMP_CODE
                                                      AND R13.ORDER_NUM   = A.ORDER_NUM
                                                      AND R13.SER_NO      = A.SER_NO
                   LEFT JOIN BCM100T R14 WITH (NOLOCK) ON R14.COMP_CODE   = R12.COMP_CODE
                                                      AND R14.CUSTOM_CODE = R12.CUSTOM_CODE
                   LEFT JOIN (SELECT
                                     COMP_CODE
                                   , SO_SER_NO
                                   , SO_SER
                                   , ITEM_CODE
                                   , SUM(SALE_QTY)  AS OUTSTOCK_Q
                                   , 0              AS RETURN_Q
                                   , SUM(QTY)       AS ORDER_Q
                                   , 0              AS ISSUE_REQ_Q
                                FROM TEA110T WITH (NOLOCK)
                               GROUP BY COMP_CODE, SO_SER_NO, SO_SER, ITEM_CODE) R51 ON R51.COMP_CODE = A.COMP_CODE
                                                                                    AND R51.SO_SER_NO = A.ORDER_NUM
                                                                                    AND R51.SO_SER    = A.SER_NO
                                                                                    AND R51.ITEM_CODE = A.ITEM_CODE
                   LEFT JOIN TEA100T R52 WITH (NOLOCK) ON R52.COMP_CODE   = A.COMP_CODE
                                                      AND R52.DIV_CODE    = A.DIV_CODE
                                                      AND R52.SO_SER_NO   = A.ORDER_NUM
                   LEFT JOIN TEA110T R53 WITH (NOLOCK) ON R53.COMP_CODE   = A.COMP_CODE
                                                      AND R53.DIV_CODE    = A.DIV_CODE
                                                      AND R53.SO_SER_NO   = A.ORDER_NUM
                                                      AND R53.SO_SER      = A.SER_NO
                   LEFT JOIN BCM100T R54 WITH (NOLOCK) ON R54.COMP_CODE   = R52.COMP_CODE
                                                      AND R54.CUSTOM_CODE = R52.IMPORTER

             WHERE A.COMP_CODE     = @COMP_CODE
               AND A.DIV_CODE      = @DIV_CODE
               <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
                    AND A.ISSUE_REQ_NUM IN
                    <foreach collection="ISSUE_REQ_NUM" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>
                </if>

             ORDER BY A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    <select id="s_srq100ukrv_ypServiceImpl.selectReferList1" parameterType="Map" resultType="rMap">
        --s_srq100ukrv_yp.Cs_srq100ukrv_yp[fnSof100QRef] Query01
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        SELECT    CAST(0 AS BIT) AS CHOICE
             , B.CUSTOM_CODE
             , D.CUSTOM_NAME
             , A.ITEM_CODE
             , C.ITEM_NAME
             , C.SPEC
             , A.ORDER_UNIT
             , A.TRANS_RATE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.DVRY_DATE) AS DVRY_DATE
             , A.DVRY_TIME
             , ISNULL((A.ORDER_Q + A.RETURN_Q - A.OUTSTOCK_Q) -
                       ISNULL((SELECT    SUM(ISSUE_REQ_QTY - ISSUE_QTY)
                                 FROM SRQ100T
                                WHERE COMP_CODE = A.COMP_CODE
                                  AND ORDER_NUM = A.ORDER_NUM
                                  AND SER_NO    = A.SER_NO),0), 0) AS NOTOUT_Q
             , A.ORDER_Q
             , B.ORDER_TYPE
             , B.ORDER_PRSN
             , A.ORDER_NUM
             , A.SER_NO
             , A.PROJECT_NO
             , A.SALE_CUST_CD
             , (SELECT    CUSTOM_NAME
                  FROM BCM100T
                 WHERE COMP_CODE   = A.COMP_CODE
                   AND CUSTOM_CODE = A.SALE_CUST_CD) AS SALE_CUST_NAME
             , A.OUT_DIV_CODE
             , A.PO_NUM
             , A.PO_SEQ
             , A.DIV_CODE
             , A.DISCOUNT_RATE
             , A.ACCOUNT_YNC
             , A.DVRY_CUST_CD
             , (SELECT    DVRY_CUST_NM
                  FROM SCM100T
                 WHERE COMP_CODE   = B.COMP_CODE
                   AND CUSTOM_CODE = B.CUSTOM_CODE
                   AND CAST(DVRY_CUST_SEQ AS NVARCHAR(8)) = A.DVRY_CUST_CD) AS DVRY_CUST_NAME
             , A.PRICE_YN
             , A.ORDER_P
             , A.ORDER_O
             , A.TAX_TYPE
             , A.ORDER_TAX_O
             , ISNULL((SELECT    SUM(STOCK_Q)
                         FROM BIV100T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ITEM_CODE = A.ITEM_CODE
                          AND DIV_CODE  = A.OUT_DIV_CODE),0) AS STOCK_Q
             , A.ISSUE_REQ_Q
             , A.OUTSTOCK_Q
             , A.RETURN_Q
             , A.SALE_Q
             , C.STOCK_UNIT
             , B.ORDER_DATE AS REF_ORDER_DATE
             , B.MONEY_UNIT AS REF_MONEY_UNIT
             , B.EXCHG_RATE_O AS REF_EXCHG_RATE_O
             , (SELECT    WH_CODE
                  FROM BPR200T
                 WHERE COMP_CODE = A.COMP_CODE
                   AND ITEM_CODE = A.ITEM_CODE
                   AND DIV_CODE  = A.OUT_DIV_CODE) AS REF_WH_CODE
             , B.BILL_TYPE
             , B.TAX_INOUT
             , RTRIM(A.ORDER_NUM) + RTRIM(CONVERT(VARCHAR(4),A.SER_NO)) AS SORT_KEY
             , D.AGENT_TYPE AS REF_AGENT_TYPE
             , D.WON_CALC_BAS AS REF_WON_CALC_TYPE
          FROM            SOF110T A WITH (NOLOCK)
               INNER JOIN SOF100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                                 AND A.DIV_CODE    = B.DIV_CODE
                                                 AND A.ORDER_NUM   = B.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                                 AND A.ITEM_CODE   = C.ITEM_CODE
               INNER JOIN BCM100T D WITH (NOLOCK) ON B.COMP_CODE   = D.COMP_CODE
                                                 AND B.CUSTOM_CODE = D.CUSTOM_CODE
         WHERE A.ORDER_STATUS       = 'N'
           AND ISNULL(B.STATUS,'6') = '6'
           AND ISNULL((A.ORDER_Q + A.RETURN_Q - A.OUTSTOCK_Q) -
                       ISNULL((SELECT    SUM(ISSUE_REQ_QTY - ISSUE_QTY)
                                 FROM SRQ100T
                                WHERE COMP_CODE = A.COMP_CODE
                                  AND ORDER_NUM = A.ORDER_NUM
                                  AND SER_NO    = A.SER_NO),0), 0) > 0
           AND A.COMP_CODE      = #{S_COMP_CODE}
          <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND B.DIV_CODE       = #{DIV_CODE}
          </if>
           <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE_FR)">
           AND A.DVRY_DATE     &gt;= #{DELIVERY_DATE_FR}
          </if>
           <if test="@foren.Ognl@isNotEmpty(DELIVERY_DATE_TO)">
           AND A.DVRY_DATE     &lt;= #{DELIVERY_DATE_TO}
          </if>
           <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
           AND B.ORDER_PRSN       =  #{ORDER_PRSN}
          </if>
           <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
           AND B.ORDER_TYPE       =  #{ORDER_TYPE}
          </if>
          <if test="@foren.Ognl@isNotEmpty(SO_NO)">
           AND B.ORDER_NUM       =  #{SO_NO}
          </if>
          <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
           AND B.CUSTOM_CODE       =  #{CUSTOM_CODE}
          </if>
          <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE       =  #{ITEM_CODE}
          </if>
         ORDER BY B.CUSTOM_CODE, A.ITEM_CODE, A.DVRY_DATE, B.ORDER_NUM, A.SER_NO

    </select>
    <select id="s_srq100ukrv_ypServiceImpl.selectReferList" parameterType="Map" resultType="rMap">
            /* srq101ukrv.Csrq101ukrv[fnSof101QRef] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                  , @Exchg_Rate_O    NUMERIC(18, 6)

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}
            SET @Exchg_Rate_O = 1.0

             /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')


            /* 데이터 조회 */
            SELECT
                   CAST(0 AS BIT)                                           AS CHOICE
                 , B.CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN M3.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN M3.CUSTOM_NAME2
                                             ELSE M3.CUSTOM_NAME
                     END)                                                   AS CUSTOM_NAME
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN M1.ITEM_NAME1
                         WHEN @RefItem = '2' THEN M1.ITEM_NAME2
                                             ELSE M1.ITEM_NAME
                     END)                                                   AS ITEM_NAME
                 , M1.SPEC
                 , A.ORDER_UNIT
                 , A.TRANS_RATE
                 , A.EXP_ISSUE_DATE
                 , (CASE WHEN ISNULL (A.DVRY_DATE , '' ) = ''
                         THEN ''
                         ELSE REPLACE (REPLACE(REPLACE (@DateFormat , 'YYYY'  , SUBSTRING (A.DVRY_DATE, 1 , 4))
                                                                    , 'MM'    , SUBSTRING (A.DVRY_DATE, 5 , 2))
                                                                    , 'DD'    , SUBSTRING (A.DVRY_DATE, 7 , 2))
                      END)                                                AS DVRY_DATE
                 , A.DVRY_TIME
                 , CASE WHEN ISNULL(Z2.PRODT_Q, 0) = 0 THEN ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)
						ELSE ISNULL(Z2.PRODT_Q, 0) - ( ISNULL((SELECT SUM(ISSUE_REQ_QTY)
																 FROM SRQ100T WITH(NOLOCK)
																WHERE COMP_CODE = Z2.COMP_CODE
																  AND DIV_CODE = Z2.DIV_CODE
																  AND ORDER_NUM = Z2.ORDER_NUM
																  AND SER_NO = Z2.SER_NO
																  AND LOT_NO = Z2.LOT_NO), 0)
															  )
				   END																												AS NOTOUT_Q
                 , A.ORDER_Q
                 , (ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.UNIT_WGT AS ORDER_WGT_Q
                 , (ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.UNIT_VOL AS ORDER_VOL_Q
                 , B.ORDER_TYPE
                 , B.ORDER_PRSN
                 , A.ORDER_NUM
                 , A.SER_NO
                 , A.PROJECT_NO
                 , A.SALE_CUST_CD
                 , (CASE WHEN @RefItem = '1' THEN M4.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN M4.CUSTOM_NAME2
                                             ELSE M4.CUSTOM_NAME
                     END)                                                   AS SALE_CUST_NAME
                 , A.OUT_DIV_CODE
                 , ''                                                       AS PAY_METHODE1
                 , ''                                                       AS LC_SER_NO
                 , A.PO_NUM
                 , A.PO_SEQ
                 , A.DIV_CODE
                 , A.DISCOUNT_RATE
                 , A.ACCOUNT_YNC
                 , A.DVRY_CUST_CD
                 , M5.DVRY_CUST_NM                                          AS DVRY_CUST_NAME
                 , A.PRICE_YN
                 , A.ORDER_P                                                AS ORDER_FOR_P
                 , CASE WHEN ISNULL(A.OUTSTOCK_Q    , 0) &gt; 0 THEN ((ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.ORDER_P)
                        WHEN ISNULL(D1.NOT_ISSUE_QTY, 0) &gt; 0 THEN ((ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.ORDER_P)
                                                             ELSE A.ORDER_O
                    END                                                     AS ORDER_FOR_O

                 , A.ORDER_P * B.EXCHG_RATE_O                               AS ORDER_P
                 , CASE WHEN ISNULL(A.OUTSTOCK_Q    , 0) &gt; 0 THEN ((ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.ORDER_P) * B.EXCHG_RATE_O
                        WHEN ISNULL(D1.NOT_ISSUE_QTY, 0) &gt; 0 THEN ((ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0)) * A.ORDER_P) * B.EXCHG_RATE_O
                                                             ELSE A.ORDER_O * B.EXCHG_RATE_O
                    END                                                     AS ORDER_O
                 , A.TAX_TYPE
                 , A.ORDER_TAX_O
                 , ISNULL(D2.STOCK_Q,0)                                     AS STOCK_Q
                 , A.ISSUE_REQ_Q
                 , A.OUTSTOCK_Q
                 , D3.RETURN_Q
                 , A.SALE_Q
                 , M1.STOCK_UNIT
                 , (CASE WHEN ISNULL (B.ORDER_DATE , '' ) = ''
                         THEN ''
                         ELSE REPLACE (REPLACE(REPLACE (@DateFormat , 'YYYY'  , SUBSTRING (B.ORDER_DATE, 1 , 4))
                                                                    , 'MM'    , SUBSTRING (B.ORDER_DATE, 5 , 2))
                                                                    , 'DD'    , SUBSTRING (B.ORDER_DATE, 7 , 2))
                    END)                                                    AS REF_ORDER_DATE
                 , B.MONEY_UNIT                                             AS REF_MONEY_UNIT
                 , B.EXCHG_RATE_O                                           AS REF_EXCHG_RATE_O
                 , M2.WH_CODE                                               AS REF_WH_CODE
                 , B.BILL_TYPE
                 , B.TAX_INOUT
                 , RTRIM(A.ORDER_NUM) + RTRIM(CONVERT(VARCHAR(4),A.SER_NO)) AS SORT_KEY
                 , M3.AGENT_TYPE                                            AS REF_AGENT_TYPE
                 , M3.WON_CALC_BAS                                          AS REF_WON_CALC_TYPE
                 , '1'                                                      AS REF_LOC
                 , A.REMARK
                 , A.PRICE_TYPE
                 , A.ORDER_WGT_P                                            AS ORDER_FOR_WGT_P
                 , A.ORDER_VOL_P                                            AS ORDER_FOR_VOL_P
                 , A.ORDER_WGT_P * B.EXCHG_RATE_O                           AS ORDER_WGT_P
                 , A.ORDER_VOL_P * B.EXCHG_RATE_O                           AS ORDER_VOL_P
                 , A.WGT_UNIT
                 , A.UNIT_WGT
                 , A.VOL_UNIT
                 , A.UNIT_VOL
                 , CASE WHEN ISNULL(Z2.LOT_NO, '') = '' THEN CASE WHEN M2.SUPPLY_TYPE = '1' THEN Z2.LOT_NO
                 												   ELSE Z1.LOT_NO
															  END
						ELSE Z2.LOT_NO
                 	END														AS LOT_NO
              FROM            SOF110T A  WITH (NOLOCK)
                   INNER JOIN SOF100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                      AND B.DIV_CODE     = A.DIV_CODE
                                                      AND B.ORDER_NUM    = A.ORDER_NUM
                   INNER JOIN BPR100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                      AND M1.ITEM_CODE   = A.ITEM_CODE
                   INNER JOIN BPR200T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                                      AND M2.DIV_CODE    = A.OUT_DIV_CODE
                                                      AND M2.ITEM_CODE   = A.ITEM_CODE
                   INNER JOIN BCM100T M3 WITH (NOLOCK) ON M3.COMP_CODE   = B.COMP_CODE
                                                      AND M3.CUSTOM_CODE = B.CUSTOM_CODE
                   INNER JOIN BCM100T M4 WITH (NOLOCK) ON M4.COMP_CODE   = A.COMP_CODE
                                                      AND M4.CUSTOM_CODE = A.SALE_CUST_CD
                   LEFT JOIN SCM100T M5 WITH (NOLOCK)  ON M5.COMP_CODE   = B.COMP_CODE
                                                      AND M5.CUSTOM_CODE = B.CUSTOM_CODE
                                                      AND CAST(M5.DVRY_CUST_SEQ AS NVARCHAR(8)) = A.DVRY_CUST_CD
                   LEFT  JOIN (SELECT
                                      COMP_CODE
                                    , DIV_CODE
                                    , ORDER_NUM
                                    , SER_NO
                                    , SUM(ISSUE_REQ_QTY - ISSUE_QTY) AS NOT_ISSUE_QTY
                                 FROM SRQ100T WITH (NOLOCK)
                                GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, SER_NO) D1 ON D1.COMP_CODE = A.COMP_CODE
                                                                                   AND D1.DIV_CODE  = A.DIV_CODE
                                                                                   AND D1.ORDER_NUM = A.ORDER_NUM
                                                                                   AND D1.SER_NO    = A.SER_NO
                   LEFT  JOIN (SELECT
                                      COMP_CODE
                                    , DIV_CODE
                                    , ITEM_CODE
                                    , SUM(STOCK_Q) AS STOCK_Q
                                 FROM BIV100T WITH (NOLOCK)
                                GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) D2 ON D2.COMP_CODE = A.COMP_CODE
                                                                           AND D2.DIV_CODE  = A.OUT_DIV_CODE
                                                                           AND D2.ITEM_CODE = A.ITEM_CODE
                   LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ISNULL(ORDER_NUM, '') AS ORDER_NUM, ORDER_SEQ, SUM(INOUT_Q) AS RETURN_Q
                                 FROM BTR100T WITH (NOLOCK)
                                WHERE INOUT_TYPE = '3'
                                  AND ITEM_STATUS = '1'
                                GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) AS D3 ON D3.COMP_CODE = A.COMP_CODE
                                                                                         AND D3.DIV_CODE  = A.DIV_CODE
                                                                                         AND D3.ORDER_NUM = A.ORDER_NUM
                                                                                         AND D3.ORDER_SEQ = A.SER_NO
                   LEFT JOIN PMP100T		Z1 WITH (NOLOCK)  ON Z1.COMP_CODE   = A.COMP_CODE
                                                      		 AND Z1.DIV_CODE    = A.DIV_CODE
                                                      		 AND Z1.ORDER_NUM   = A.ORDER_NUM
                                                      		 AND Z1.SER_NO      = A.SER_NO
                   LEFT JOIN S_PMP111T_YP	Z2 WITH (NOLOCK)  ON Z2.COMP_CODE   = A.COMP_CODE
                                                      		 AND Z2.DIV_CODE    = A.DIV_CODE
                                                      		 AND Z2.ORDER_NUM   = A.ORDER_NUM
                                                      		 AND Z2.SER_NO      = A.SER_NO
             WHERE A.COMP_CODE            = @CompCode
               AND B.DIV_CODE             = #{S_DIV_CODE}
               AND A.ORDER_STATUS         = 'N'           /* 마감여부 */
               AND ISNULL(B.STATUS,'6')   = '6'           /* 승인완결여부 */
               AND ISNULL(A.ORDER_Q,0) + ISNULL(D3.RETURN_Q,0) - ISNULL(A.OUTSTOCK_Q,0) - ISNULL(D1.NOT_ISSUE_QTY,0) &gt; 0
			   AND (
					( SELECT MAX(COMP_CODE)
						FROM SRQ100T WITH(NOLOCK)
						WHERE COMP_CODE = Z2.COMP_CODE
							AND DIV_CODE = Z2.DIV_CODE
							AND ORDER_NUM = Z2.ORDER_NUM
							AND SER_NO = Z2.SER_NO
							AND LOT_NO = Z2.LOT_NO
						) IS NULL
					OR (
						Z2.PRODT_Q != ( SELECT SUM(ISSUE_REQ_QTY)
										 FROM SRQ100T WITH(NOLOCK)
										WHERE COMP_CODE = Z2.COMP_CODE
										  AND DIV_CODE = Z2.DIV_CODE
										  AND ORDER_NUM = Z2.ORDER_NUM
										  AND SER_NO = Z2.SER_NO
										  AND LOT_NO = Z2.LOT_NO
									  )
						AND
						Z2.LOT_NO = ( SELECT MAX(LOT_NO)
										FROM SRQ100T WITH(NOLOCK)
									   WHERE COMP_CODE = Z2.COMP_CODE
										 AND DIV_CODE = Z2.DIV_CODE
										 AND ORDER_NUM = Z2.ORDER_NUM
										 AND SER_NO = Z2.SER_NO
										 AND LOT_NO = Z2.LOT_NO
									  )
						)
					)
             <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
               AND B.ORDER_PRSN           = #{ORDER_PRSN}       /*마스터폼에서 넘어온값*/
             </if>
             <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
               AND B.ORDER_TYPE           = #{ORDER_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(SO_SER_NO)">
               AND B.ORDER_NUM         LIKE #{SO_SER_NO} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(EXP_ISSUE_DATE_FR)">
               AND A.DVRY_DATE        &gt;= #{EXP_ISSUE_DATE_FR}	/* EXP_ISSUE_DATE_FR 를 납기일로 사용함 */
             </if>
             <if test="@foren.Ognl@isNotEmpty(EXP_ISSUE_DATE_TO)">
               AND A.DVRY_DATE        &lt;= #{EXP_ISSUE_DATE_TO}	/* EXP_ISSUE_DATE_TO 를 납기일로 사용함 */
             </if>
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND B.CUSTOM_CODE       LIKE #{CUSTOM_CODE} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
               AND M3.CUSTOM_NAME      LIKE #{CUSTOM_NAME} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE         LIKE #{ITEM_CODE} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND M1.ITEM_NAME        LIKE #{ITEM_NAME} + '%'
             </if>



           ORDER BY B.CUSTOM_CODE, A.DVRY_DATE, A.ORDER_NUM, A.SER_NO


            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>

    <insert id="s_srq100ukrv_ypServiceImpl.insertLogDetail" parameterType="Map">
    INSERT INTO L_SRQ100T
         ( KEY_VALUE            , OPR_FLAG
         , COMP_CODE            , DIV_CODE              , ISSUE_REQ_NUM         , ISSUE_REQ_SEQ         , ISSUE_REQ_METH
         , ISSUE_REQ_DATE       , DEPT_CODE             , TREE_NAME             , CUSTOM_CODE           , AGENT_TYPE
         , INOUT_TYPE_DETAIL    , WH_CODE               , ITEM_CODE             , ISSUE_REQ_QTY         , ISSUE_REQ_PRICE
         , ISSUE_REQ_AMT        , ISSUE_REQ_TAX_AMT     , ORDER_UNIT            , TRANS_RATE            , PRICE_YN
         , TAX_TYPE             , DISCOUNT_RATE         , MONEY_UNIT            , EXCHANGE_RATE         , ISSUE_FOR_PRICE
         , ISSUE_FOR_AMT        , ISSUE_REQ_PRSN        , ISSUE_DIV_CODE        , ISSUE_DATE            , ISSUE_TIME
         , DELIVERY_TIME        , SALE_CUSTOM_CODE      , DVRY_CUST_CD          , CARD_CUST_CD          , BILL_TYPE
         , ORDER_TYPE           , RECEIPT_PLAN_DATE     , WH_CELL_CODE          , ISSUE_QTY             , ACCOUNT_YNC
         , ORDER_NUM            , SER_NO                , PO_NUM                , PO_SEQ                , DO_NO
         , DO_SEQ               , COMFIRM_DO_FLAG       , SCM_FLAG_YN           , REF_LOC               , SO_KIND
         , CUSTOMER_ID          , RECEIVER_ID           , PICK_BOX_QTY          , PICK_EA_QTY           , PICK_STATUS
         , PROJECT_NO           , LOT_NO                , REMARK                , PRICE_TYPE            , WGT_UNIT
         , UNIT_WGT             , VOL_UNIT              , UNIT_VOL              , ISSUE_WGT_Q           , ISSUE_WGT_P
         , ISSUE_FOR_WGT_P      , ISSUE_VOL_Q           , ISSUE_VOL_P           , ISSUE_FOR_VOL_P
         , INSERT_DB_USER		, INSERT_DB_TIME		, UPDATE_DB_USER		, UPDATE_DB_TIME
        /* , PLAN_YEAR          , PLAN_TYPE1            , PLAN_TYPE2            , ENT_MONEY_UNIT */
        )
    VALUES
         ( #{KEY_VALUE}         , #{OPR_FLAG}
         , #{COMP_CODE}         , #{DIV_CODE}           , #{ISSUE_REQ_NUM}      , #{ISSUE_REQ_SEQ}      , #{ISSUE_REQ_METH}
         , #{ISSUE_REQ_DATE}    , #{DEPT_CODE}          , #{TREE_NAME}          , #{CUSTOM_CODE}        , #{AGENT_TYPE}
         , #{INOUT_TYPE_DETAIL} , #{WH_CODE}            , #{ITEM_CODE}          , #{ISSUE_REQ_QTY}      , #{ISSUE_REQ_PRICE}
         , #{ISSUE_REQ_AMT}     , #{ISSUE_REQ_TAX_AMT}  , #{ORDER_UNIT}         , #{TRANS_RATE}         , #{PRICE_YN}
         , #{TAX_TYPE}          , #{DISCOUNT_RATE}      , #{MONEY_UNIT}         , #{EXCHANGE_RATE}      , #{ISSUE_FOR_PRICE}
         , #{ISSUE_FOR_AMT}     , #{ISSUE_REQ_PRSN}     , #{ISSUE_DIV_CODE}     , #{ISSUE_DATE}         , #{ISSUE_TIME}
         , #{DELIVERY_TIME}     , #{SALE_CUSTOM_CODE}   , #{DVRY_CUST_CD}       , #{CARD_CUST_CD}       , #{BILL_TYPE}
         , #{ORDER_TYPE}        , #{RECEIPT_PLAN_DATE}  , #{WH_CELL_CODE}       , #{ISSUE_QTY}          , #{ACCOUNT_YNC}
         , #{ORDER_NUM}         , #{SER_NO}             , #{PO_NUM}             , #{PO_SEQ}             , #{DO_NO}
         , #{DO_SEQ}            , #{COMFIRM_DO_FLAG}    , #{SCM_FLAG_YN}        , #{REF_LOC}            , #{SO_KIND}
         , #{CUSTOMER_ID}       , #{RECEIVER_ID}        , #{PICK_BOX_QTY}       , #{PICK_EA_QTY}        , #{PICK_STATUS}
         , #{PROJECT_NO}        , #{LOT_NO}             , #{REMARK}             , #{PRICE_TYPE}         , #{WGT_UNIT}
         , #{UNIT_WGT}          , #{VOL_UNIT}           , #{UNIT_VOL}           , #{ISSUE_WGT_Q}        , #{ISSUE_WGT_P}
         , #{ISSUE_FOR_WGT_P}   , #{ISSUE_VOL_Q}        , #{ISSUE_VOL_P}        , #{ISSUE_FOR_VOL_P}
         , #{S_USER_ID}			, GETDATE()				, #{S_USER_ID}			, GETDATE()
        /* ,''                  , ''                    , ''                    , '' */
        )
     </insert>
     <update id="s_srq100ukrv_ypServiceImpl.spSalesShipment" parameterType="Map" statementType="CALLABLE">

        <!-- 1) parameterMap 정의 후 사용하는 법  -->
        <!-- {call SP_SALES_SalesOrder (?,?,?,?)} -->

        <!-- 2) parameterMap 없이 사용하는 법  -->
        {call SP_SALES_IssueReq (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{IssueReqNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
     </update>

     <select id="s_srq100ukrv_ypServiceImpl.printList1" parameterType="Map" resultType="rMap">
         BEGIN
            DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
                                , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
                                , @USER_ID             NVARCHAR(100)             --(필수) USER ID
                                , @ISSUE_REQ_NUM       NVARCHAR(1000)           --(선택) 출하지시번호
                                , @PRINT_USER          NVARCHAR(100)            --(선택) 출력자
                                , @VIEW_PRINT_INFO_YN  NVARCHAR(01)             --인쇄출력정보 여부
                                , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2

            SET NOCOUNT ON
            SET ARITHABORT ON

            SET @COMP_CODE                  =   ISNULL(#{S_COMP_CODE}, '')
            SET @DIV_CODE                   =   ISNULL(#{DIV_CODE}, '')
            SET @USER_ID                    =   ISNULL(#{S_USER_ID}, '')
            SET @ISSUE_REQ_NUM              =   ISNULL(#{ISSUE_REQ_NUM}, '')

            SET @QUERY_TYPE                 =   N'2'

            SELECT @PRINT_USER = USER_NAME
                FROM BSA300T WITH(NOLOCK)
                WHERE COMP_CODE = @COMP_CODE
                AND USER_ID = @USER_ID

            SELECT @VIEW_PRINT_INFO_YN = SUB_CODE
                FROM BSA100T WITH(NOLOCK)
                WHERE COMP_CODE = @COMP_CODE
                AND MAIN_CODE = 'B249'
                AND SUB_CODE != '$'
                AND REF_CODE1 = 'Y'





            SELECT A.ISSUE_DATE --공급일자
                , SUBSTRING(A.ISSUE_DATE, 1, 4) AS YYYY--공급일자YYYY
                , SUBSTRING(A.ISSUE_DATE, 5, 2) AS MM--공급일자MM
                , SUBSTRING(A.ISSUE_DATE, 7, 2) AS DD--공급일자DD
                , A.CUSTOM_CODE --거래처 코드
                , C.CUSTOM_NAME --거래처 명
                , C.TOP_NAME       --거래처 대표자
                , CASE ISNULL(C.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(C.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(C.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(C.COMPANY_NUM,6,5)
                END AS COMPANY_NUM   --거래처 등록번호
                , C.ZIP_CODE         --거래처 우편번호
                , RTRIM(ISNULL(C.ADDR1,'') + ISNULL(C.ADDR2,'')) AS ADDR
                , E.DIV_CODE    AS MY_CUSTOM_CODE      --사업장코드
                , E.DIV_NAME    AS MY_CUSTOM_NAME      --상호
                , E.REPRE_NAME  AS MY_TOP_NAME         --대표자
                , E.COMP_TYPE                       --업태
                , E.COMP_CLASS                      --종목
                , CASE ISNULL(E.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(E.COMPANY_NUM,6,5)
                END          AS MY_COMPANY_NUM          --등록번호
                , E.ZIP_CODE    AS MY_ZIP_CODE          --우편번호
                , E.ADDR AS  MY_ADDR              --주소
                , E.TELEPHON                            --전화번호
                , E.FAX_NUM                             --팩스

                , A.ISSUE_REQ_NUM   AS ISSUE_REQ_NUM
                , '*' + A.ISSUE_REQ_NUM + '*'                                              AS BARCODE
                , ROW_NUMBER() OVER(PARTITION BY A.ISSUE_REQ_NUM + A.CUSTOM_CODE + A.TAX_TYPE ORDER BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_REQ_NUM, ISSUE_REQ_SEQ) AS PRINT_SEQ
                , A.ISSUE_REQ_SEQ   AS INOUT_SEQ
                , A.ITEM_CODE
                , B.ITEM_NAME
                , B.SPEC
                --, '' AS REGION  --(지역)
                , CASE WHEN ISNULL(CASE WHEN A7.SUPPLY_TYPE = '2' THEN
										CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.ORIGIN
										ELSE
											CASE WHEN ISNULL(T5.REF_CODE1, '') = '' THEN T5.CODE_NAME ELSE T5.REF_CODE1 END
										END
									ELSE
											CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.ORIGIN
											ELSE
												CASE WHEN ISNULL(A4.REF_CODE1, '') = '' THEN A4.CODE_NAME ELSE A4.REF_CODE1 END
											END
									END, '') = '' THEN ''
						ELSE CASE WHEN A7.SUPPLY_TYPE = '2' THEN
									CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.ORIGIN
									ELSE
										CASE WHEN ISNULL(T5.REF_CODE1, '') = '' THEN T5.CODE_NAME ELSE T5.REF_CODE1 END
									END
								ELSE
										CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.ORIGIN
										ELSE
											CASE WHEN ISNULL(A4.REF_CODE1, '') = '' THEN A4.CODE_NAME ELSE A4.REF_CODE1 END
										END
								END
				  END															AS REGION

                , A.ORDER_UNIT
                , ISNULL(A.ISSUE_REQ_QTY, 0)        AS INOUT_Q
                , ISNULL(A.ISSUE_REQ_PRICE, 0)      AS INOUT_P
                , ISNULL(A.ISSUE_REQ_AMT, 0)        AS INOUT_O
                , ISNULL(A.ISSUE_REQ_TAX_AMT, 0)    aS INOUT_TAX_O
                , ISNULL(A.ISSUE_REQ_AMT, 0) + ISNULL(A.ISSUE_REQ_TAX_AMT, 0)   AS INOUT_TOT
                , ISNULL(X.ISSUE_REQ_QTY, 0)        AS INOUT_Q_AMT
                , ISNULL(X.ISSUE_REQ_PRICE, 0)      AS INOUT_P_AMT
                , ISNULL(X.ISSUE_REQ_AMT, 0)        AS INOUT_O_AMT
                , ISNULL(X.ISSUE_REQ_TAX_AMT, 0)    AS INOUT_TAX_O_AMT
                , ISNULL(X.ISSUE_REQ_AMT, 0) + ISNULL(X.ISSUE_REQ_TAX_AMT, 0)   AS INOUT_TOT_AMT
                , REPLACE(unilite.fnConvertToAmt(ISNULL(X.ISSUE_REQ_AMT, 0) + ISNULL(X.ISSUE_REQ_TAX_AMT, 0)), ' ','') + '원정'   AS INOUT_TOT_AMT_KO
				--, A.REMARK  --(인증번호)
--				, CASE WHEN A7.SUPPLY_TYPE = '2' THEN
--						CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.CERT_NO
--						ELSE T4.CERT_NO
--						END
--					ELSE
--						CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.CERT_NO
--						ELSE A3.CERT_NO
--						END
--					END			                                        AS REMARK
                , CASE WHEN A7.SUPPLY_TYPE = '2' THEN
                    CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.FARM_NAME + '(' + T3.CERT_NO + ')'
                    ELSE
                        CASE WHEN ISNULL(T2.CUSTOM_NAME1, '') = '' THEN T2.CUSTOM_NAME + '(' + T4.CERT_NO + ')'
                             ELSE T2.CUSTOM_NAME1 + '(' + T4.CERT_NO + ')'
                        END
                    END
                ELSE
                    CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.FARM_NAME + '(' + A2.CERT_NO + ')'
                    ELSE
                        CASE WHEN ISNULL(A1.CUSTOM_NAME1, '') = '' THEN A1.CUSTOM_NAME + '(' + A3.CERT_NO + ')'
                             ELSE A1.CUSTOM_NAME1 + '(' + A3.CERT_NO + ')'
                        END
                    END
                END                                                 AS REMARK

                , @PRINT_USER           AS PRINT_USER                   --출력자 이름
                , @VIEW_PRINT_INFO_YN   AS VIEW_PRINT_INFO_YN           --인쇄출력정보 표시여부
                , A.ISSUE_REQ_NUM + A.CUSTOM_CODE  + A.TAX_TYPE AS GROUP_KEY
                , Z.CODE_NAME               AS TAX_TYPE
            FROM SRQ100T A WITH(NOLOCK)
			INNER JOIN BPR200T A7 WITH(NOLOCK) ON A7.COMP_CODE = A.COMP_CODE
											AND A7.DIV_CODE = A.DIV_CODE
											AND A7.ITEM_CODE = A.ITEM_CODE
            LEFT JOIN BCM100T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
                                            AND ( ISNULL(A1.CHANNEL, '') = SUBSTRING(A.LOT_NO, 1, 2) AND ISNULL(A.LOT_NO, '') != '')
											AND A1.USE_YN = 'Y'

            LEFT JOIN S_BCM106T_YP A2 WITH(NOLOCK) ON A2.COMP_CODE = A1.COMP_CODE               --거래처 농가정보
                                                AND A2.CUSTOM_CODE = A1.CUSTOM_CODE
                                                AND A2.FARM_CODE = SUBSTRING(A.LOT_NO, 8, 2)
            LEFT JOIN S_BCM100T_YP A3 WITH(NOLOCK) ON A3.COMP_CODE = A1.COMP_CODE              --인증서
                                                AND A3.CUSTOM_CODE = A1.CUSTOM_CODE
                                                AND A3.APLY_START_DATE &lt;= A.ISSUE_REQ_DATE
                                                AND A3.APLY_END_DATE &gt;= A.ISSUE_REQ_DATE
                                                AND A3.TYPE   = SUBSTRING(A.LOT_NO, 10, 1)

            LEFT JOIN BSA100T A4 WITH(NOLOCK) ON A4.COMP_CODE = A1.COMP_CODE
                                                AND A4.MAIN_CODE = 'B056'
                                                AND A4.SUB_CODE = A1.AREA_TYPE


            INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                AND B.ITEM_CODE = A.ITEM_CODE
            INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                AND C.CUSTOM_CODE = A.CUSTOM_CODE
            INNER JOIN BOR120T E WITH(NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                            AND E.DIV_CODE    = A.DIV_CODE
            LEFT  JOIN ( SELECT   SUM(A.ISSUE_REQ_QTY)      AS ISSUE_REQ_QTY
                                , SUM(A.ISSUE_REQ_PRICE)    AS ISSUE_REQ_PRICE
                                , SUM(A.ISSUE_REQ_AMT)      AS ISSUE_REQ_AMT
                                , SUM(A.ISSUE_REQ_TAX_AMT)  AS ISSUE_REQ_TAX_AMT
                                , A.COMP_CODE
                                , A.DIV_CODE
                                , A.ISSUE_REQ_NUM
                                , A.TAX_TYPE
                                , A.CUSTOM_CODE
                           FROM SRQ100T A WITH(NOLOCK)
                           INNER JOIN uniLITE.fnSplit(@ISSUE_REQ_NUM, ',') AS B ON B.VALUE = A.ISSUE_REQ_NUM
                          WHERE A.COMP_CODE = @COMP_CODE
                            AND A.DIV_CODE = @DIV_CODE
                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_REQ_NUM, A.CUSTOM_CODE, A.TAX_TYPE
                ) X ON X.COMP_CODE = A.COMP_CODE
                           AND X.DIV_CODE = A.DIV_CODE
                           AND X.ISSUE_REQ_NUM = A.ISSUE_REQ_NUM
                           AND X.TAX_TYPE = A.TAX_TYPE
                           AND X.CUSTOM_CODE = A.CUSTOM_CODE
            INNER JOIN  ( SELECT VALUE
								FROM uniLITE.fnSplit(@ISSUE_REQ_NUM, ',')
								GROUP BY VALUE)	AS F ON F.VALUE = A.ISSUE_REQ_NUM

          --  LEFT JOIN SOF110T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
          --                                  AND D.ORDER_NUM   = A.ORDER_NUM
          --                                  AND D.SER_NO      = A.SER_NO
            LEFT JOIN BSA100T Z WITH (NOLOCK) ON Z.COMP_CODE   = A.COMP_CODE
                                            AND Z.MAIN_CODE   = 'B059'
                                            AND Z.SUB_CODE    = A.TAX_TYPE

 --사내가공품은 원자재의 인증번호 가져오게..
			LEFT JOIN PMP100T T WITH(NOLOCK) ON T.COMP_CODE = A.COMP_CODE
											AND T.DIV_CODE = A.DIV_CODE
											AND T.ORDER_NUM = A.ORDER_NUM
											AND T.SER_NO = A.SER_NO
											AND T.LOT_NO = A.LOT_NO
			LEFT JOIN PMP200T T1 WITH(NOLOCK) ON T1.COMP_CODE = T.COMP_CODE
											AND T1.DIV_CODE = T.DIV_CODE
											AND T1.WKORD_NUM = T.WKORD_NUM

            LEFT JOIN BCM100T T2 WITH(NOLOCK) ON T2.COMP_CODE = T1.COMP_CODE				--매입처
                                            AND ( ISNULL(T2.CHANNEL, '') = SUBSTRING(T1.LOT_NO, 1, 2) AND ISNULL(T1.LOT_NO, '') != '')
											AND A1.USE_YN = 'Y'

            LEFT JOIN S_BCM106T_YP T3 WITH(NOLOCK) ON T3.COMP_CODE = T2.COMP_CODE               --매입처 농가정보
                                                AND T3.CUSTOM_CODE = T2.CUSTOM_CODE
                                                AND T3.FARM_CODE = SUBSTRING(T1.LOT_NO, 8, 2)
            LEFT JOIN S_BCM100T_YP T4 WITH(NOLOCK) ON T4.COMP_CODE = T2.COMP_CODE              --매입처 인증서
                                                AND T4.CUSTOM_CODE = T2.CUSTOM_CODE
                                                AND T4.APLY_START_DATE &lt;= A.ISSUE_REQ_DATE
                                                AND T4.APLY_END_DATE &gt;= A.ISSUE_REQ_DATE
                                                AND T4.TYPE   = SUBSTRING(T1.LOT_NO, 10, 1)
            LEFT JOIN BSA100T T5 WITH(NOLOCK) ON T5.COMP_CODE = T2.COMP_CODE
                                            AND T5.MAIN_CODE = 'B056'
                                            AND T5.SUB_CODE = T2.AREA_TYPE
		--	LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE,ORDER_NUM, SER_NO, WONSANGI
		--						                 FROM S_PMP111T_YP WITH(NOLOCK)
		--						        GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE,ORDER_NUM, SER_NO, WONSANGI
		--						        ) AS ZZ   ON ZZ.COMP_CODE  = A.COMP_CODE
		--						             AND ZZ.DIV_CODE   = A.DIV_CODE
		--						             AND ZZ.ITEM_CODE  = A.ITEM_CODE
		--						             AND ZZ.ORDER_NUM  = A.ORDER_NUM
		--						             AND ZZ.SER_NO   = A.SER_NO

            WHERE A.COMP_CODE = @COMP_CODE
              AND A.DIV_CODE = @DIV_CODE



            ORDER BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_REQ_NUM, ISSUE_REQ_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
     </select>

     <select id="s_srq100ukrv_ypServiceImpl.printList2" parameterType="Map" resultType="rMap">
        /* s_srq100ukrv_ypServiceImpl.printList2 */
        BEGIN
            DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
                                , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
                                , @USER_ID             NVARCHAR(100)             --(필수) USER ID
                                , @ISSUE_REQ_NUM       NVARCHAR(1000)           --(선택) 출하지시번호
                                , @PRINT_USER          NVARCHAR(100)            --(선택) 출력자
                                , @VIEW_PRINT_INFO_YN  NVARCHAR(01)             --인쇄출력정보 여부
                                , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2

            SET NOCOUNT ON
            SET ARITHABORT ON

            SET @COMP_CODE                  =   ISNULL(#{S_COMP_CODE}, '')
            SET @DIV_CODE                   =   ISNULL(#{DIV_CODE}, '')
            SET @USER_ID                    =   ISNULL(#{S_USER_ID}, '')
            SET @ISSUE_REQ_NUM              =   ISNULL(#{ISSUE_REQ_NUM}, '')

            SET @QUERY_TYPE                 =   N'2'

            SELECT @PRINT_USER = USER_NAME
                FROM BSA300T WITH(NOLOCK)
                WHERE COMP_CODE = @COMP_CODE
                AND USER_ID = @USER_ID

            SELECT @VIEW_PRINT_INFO_YN = SUB_CODE
                FROM BSA100T WITH(NOLOCK)
                WHERE COMP_CODE = @COMP_CODE
                AND MAIN_CODE = 'B249'
                AND SUB_CODE != '$'
                AND REF_CODE1 = 'Y'

       --     SELECT A.ISSUE_DATE                                       --공급일자
                --, SUBSTRING(A.ISSUE_DATE, 1, 4) AS YYYY               --공급일자YYYY
                --, SUBSTRING(A.ISSUE_DATE, 5, 2) AS MM             --공급일자MM
                --, SUBSTRING(A.ISSUE_DATE, 7, 2) AS DD             --공급일자DD

           SELECT A.DVRY_DATE   AS ISSUE_DATE                       --공급일자
                , SUBSTRING(A.DVRY_DATE, 1, 4) AS YYYY              --공급일자YYYY
                , SUBSTRING(A.DVRY_DATE, 5, 2) AS MM                --공급일자MM
                , SUBSTRING(A.DVRY_DATE, 7, 2) AS DD                --공급일자DD

                , A.CUSTOM_CODE                                     --거래처 코드
                , C.CUSTOM_NAME                                     --거래처 명
                , C.TOP_NAME                                        --거래처 대표자
                , CASE ISNULL(C.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(C.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(C.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(C.COMPANY_NUM,6,5)
                END AS COMPANY_NUM                                  --거래처 등록번호
                , C.ZIP_CODE                                        --거래처 우편번호
                , RTRIM(ISNULL(C.ADDR1,'') + ISNULL(C.ADDR2,'')) AS ADDR
                , E.DIV_CODE    AS MY_CUSTOM_CODE                   --사업장코드
                , E.DIV_NAME    AS MY_CUSTOM_NAME                   --상호
                , E.REPRE_NAME  AS MY_TOP_NAME                      --대표자
                , E.COMP_TYPE                                       --업태
                , E.COMP_CLASS                                      --종목
                , CASE ISNULL(E.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(E.COMPANY_NUM,6,5)
                    END          AS MY_COMPANY_NUM                  --등록번호
                , E.ZIP_CODE    AS MY_ZIP_CODE                      --우편번호
                , E.ADDR AS  MY_ADDR                                --주소
                , E.TELEPHON                                        --전화번호
                , E.FAX_NUM                                         --팩스

                --, A.ISSUE_REQ_NUM   AS ISSUE_REQ_NUM
                , X.ORDER_NUM   AS ISSUE_REQ_NUM

                --, ROW_NUMBER() OVER(PARTITION BY A.CUSTOM_CODE + A.DVRY_DATE + A.TAX_TYPE ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.DVRY_DATE, A.ORDER_NUM, A.SER_NO) AS PRINT_SEQ
                , ROW_NUMBER() OVER(PARTITION BY A.CUSTOM_CODE + A.DVRY_DATE + A.TAX_TYPE ORDER BY A.ORDER_NUM, A.SER_NO) AS PRINT_SEQ
                --, A.ISSUE_REQ_SEQ   AS INOUT_SEQ
                , A.SER_NO   AS INOUT_SEQ

                , A.ITEM_CODE
                , B.ITEM_NAME
                , B.SPEC
				--, '' AS REGION --(지역)
                , CASE WHEN ISNULL(CASE WHEN A7.SUPPLY_TYPE = '2' THEN
										CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.ORIGIN
										ELSE
											CASE WHEN ISNULL(T5.REF_CODE1, '') = '' THEN T5.CODE_NAME ELSE T5.REF_CODE1 END
										END
									ELSE
											CASE WHEN SUBSTRING(R.LOT_NO, 8, 2) != '00' THEN R2.ORIGIN
											ELSE
												CASE WHEN ISNULL(R4.REF_CODE1, '') = '' THEN R4.CODE_NAME ELSE R4.REF_CODE1 END
											END
									END, '') = '' THEN ZZ.WONSANGI
						ELSE CASE WHEN A7.SUPPLY_TYPE = '2' THEN
									CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.ORIGIN
									ELSE
										CASE WHEN ISNULL(T5.REF_CODE1, '') = '' THEN T5.CODE_NAME ELSE T5.REF_CODE1 END
									END
								ELSE
										CASE WHEN SUBSTRING(R.LOT_NO, 8, 2) != '00' THEN R2.ORIGIN
										ELSE
											CASE WHEN ISNULL(R4.REF_CODE1, '') = '' THEN R4.CODE_NAME ELSE R4.REF_CODE1 END
										END
								END
				  END															AS REGION
                , A.ORDER_UNIT

                --, ISNULL(A.ISSUE_REQ_QTY, 0)        AS INOUT_Q
                --, ISNULL(A.ISSUE_REQ_PRICE, 0)      AS INOUT_P
                --, ISNULL(A.ISSUE_REQ_AMT, 0)        AS INOUT_O
                --, ISNULL(A.ISSUE_REQ_TAX_AMT, 0)    aS INOUT_TAX_O
                --, ISNULL(A.ISSUE_REQ_AMT, 0) + ISNULL(A.ISSUE_REQ_TAX_AMT, 0)   AS INOUT_TOT

                , ISNULL(A.ISSUE_REQ_Q, 0)                          AS INOUT_Q
                , ISNULL(A.ORDER_P, 0)                              AS INOUT_P
                , ISNULL(A.ORDER_O, 0)                              AS INOUT_O
                , ISNULL(A.ORDER_TAX_O , 0)                         AS INOUT_TAX_O
                , ISNULL(A.ORDER_O, 0) + ISNULL(A.ORDER_TAX_O, 0)   AS INOUT_TOT

                , ISNULL(X.ISSUE_REQ_QTY, 0)        AS INOUT_Q_AMT
                , ISNULL(X.ISSUE_REQ_PRICE, 0)      AS INOUT_P_AMT
                , ISNULL(X.ISSUE_REQ_AMT, 0)        AS INOUT_O_AMT
                , ISNULL(X.ISSUE_REQ_TAX_AMT, 0)    AS INOUT_TAX_O_AMT
                , ISNULL(X.ISSUE_REQ_AMT, 0) + ISNULL(X.ISSUE_REQ_TAX_AMT, 0)   AS INOUT_TOT_AMT
                , REPLACE(unilite.fnConvertToAmt(ISNULL(X.ISSUE_REQ_AMT, 0) + ISNULL(X.ISSUE_REQ_TAX_AMT, 0)), ' ','') + '원정'   AS INOUT_TOT_AMT_KO

                , Z2.CODE_NAME          AS TAX_TYPE

				--, A.REMARK   --(인증번호)
 				, CASE WHEN A7.SUPPLY_TYPE = '2' THEN
						CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.CERT_NO
						ELSE T4.CERT_NO
						END
				  ELSE
					CASE WHEN SUBSTRING(R.LOT_NO, 8, 2) != '00' THEN R2.CERT_NO
					ELSE R3.CERT_NO
					END
				  END                                           AS REMARK

                , A.CUSTOM_CODE + A.DVRY_DATE + A.TAX_TYPE AS GROUP_KEY
                , @PRINT_USER           AS PRINT_USER                   --출��자 이름
                , @VIEW_PRINT_INFO_YN   AS VIEW_PRINT_INFO_YN           --인쇄출력정보 표시여부

            FROM -- SRQ100T A
                ( SELECT X.*, X1.CUSTOM_CODE
                  FROM SOF110T X
                 INNER JOIN SOF100T X1 ON X1.COMP_CODE = X.COMP_CODE
                                        AND X1.DIV_CODE = X.DIV_CODE
                                        AND  X1.ORDER_NUM = X.ORDER_NUM ) A
            INNER JOIN BPR100T B ON B.COMP_CODE = A.COMP_CODE  AND B.ITEM_CODE = A.ITEM_CODE
            INNER JOIN BCM100T C ON C.COMP_CODE = A.COMP_CODE AND C.CUSTOM_CODE = A.CUSTOM_CODE
            INNER JOIN BOR120T E  WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                        AND E.DIV_CODE    = A.DIV_CODE
            LEFT  JOIN ( SELECT   SUM(A.ISSUE_REQ_Q)    AS ISSUE_REQ_QTY
                                , SUM(A.ORDER_P)        AS ISSUE_REQ_PRICE
                                , SUM(A.ISSUE_REQ_Q * A.ORDER_P)        AS ISSUE_REQ_AMT
                                , SUM(CASE WHEN ISNULL(A.TAX_TYPE, '1') = '2' THEN 0
                                           WHEN ISNULL(A.TAX_TYPE, '1') = '1' THEN A.ISSUE_REQ_Q * A.ORDER_P * 0.1
                                           ELSE 0
                                   END) AS ISSUE_REQ_TAX_AMT
                                , MAX(A.ORDER_NUM)      AS ORDER_NUM
                                , A.COMP_CODE
                                , A.DIV_CODE
                                , A.CUSTOM_CODE
                                , A.DVRY_DATE
                                , A.TAX_TYPE
                            --FROM SRQ100T A WITH(NOLOCK)
                            FROM ( SELECT X.*, X1.CUSTOM_CODE
                                    FROM SOF110T X WITH(NOLOCK)
                                    INNER JOIN SOF100T X1 WITH(NOLOCK) ON X1.COMP_CODE = X.COMP_CODE
                                                            AND X1.DIV_CODE = X.DIV_CODE
                                                            AND  X1.ORDER_NUM = X.ORDER_NUM ) A
                                    INNER JOIN ( SELECT A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ISSUE_DATE
                                                FROM SRQ100T A  WITH(NOLOCK)
                                                 INNER JOIN (SELECT VALUE
																	FROM uniLITE.fnSplit(@ISSUE_REQ_NUM, ',')
																	GROUP BY VALUE) AS F ON F.VALUE = A.ISSUE_REQ_NUM
                                                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ISSUE_DATE
                                         ) Z ON Z.COMP_CODE = A.COMP_CODE AND Z.DIV_CODE = A.DIV_CODE
                                                AND Z.CUSTOM_CODE = A.CUSTOM_CODE
                                                AND Z.ISSUE_DATE = A.DVRY_DATE
                                   WHERE A.COMP_CODE = @COMP_CODE
                                        AND A.DIV_CODE = @DIV_CODE
                                   GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.DVRY_DATE, A.TAX_TYPE
                        ) X ON X.COMP_CODE = A.COMP_CODE
                            AND X.DIV_CODE = A.DIV_CODE
                            --AND X.ISSUE_REQ_NUM = A.ISSUE_REQ_NUM
                            AND X.CUSTOM_CODE   = A.CUSTOM_CODE
                            AND X.DVRY_DATE     = A.DVRY_DATE
                            AND X.TAX_TYPE  = A.TAX_TYPE
                INNER JOIN
                        ( SELECT A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ISSUE_DATE
                            FROM SRQ100T A  WITH(NOLOCK)
                            INNER JOIN(SELECT VALUE
											FROM uniLITE.fnSplit(@ISSUE_REQ_NUM, ',')
											GROUP BY VALUE)	AS F ON F.VALUE = A.ISSUE_REQ_NUM
                            GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ISSUE_DATE
                         ) Z ON Z.COMP_CODE         = A.COMP_CODE
                                AND Z.DIV_CODE = A.DIV_CODE
                                AND Z.CUSTOM_CODE   = A.CUSTOM_CODE
                                AND Z.ISSUE_DATE    = A.DVRY_DATE
                LEFT JOIN BSA100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE   = A.COMP_CODE
                                                  AND Z2.MAIN_CODE   = 'B059'
                                                  AND Z2.SUB_CODE    = A.TAX_TYPE

             LEFT JOIN SRQ100T R WITH(NOLOCK) ON R.COMP_CODE = A.COMP_CODE
                                                AND R.DIV_CODE = A.DIV_CODE
                                                AND R.ORDER_NUM = A.ORDER_NUM
                                                AND R.SER_NO = A.SER_NO
            LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = R.COMP_CODE
                                            AND ( ISNULL(R1.CHANNEL, '') = SUBSTRING(R.LOT_NO, 1, 2) AND ISNULL(R.LOT_NO, '') != '')
											AND R1.USE_YN = 'Y'

            LEFT JOIN S_BCM106T_YP R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE               --거래처 농가정보
                                                AND R2.CUSTOM_CODE = R1.CUSTOM_CODE
                                                AND R2.FARM_CODE = SUBSTRING(R.LOT_NO, 8, 2)
            LEFT JOIN S_BCM100T_YP R3 WITH(NOLOCK) ON R3.COMP_CODE = R1.COMP_CODE              --인증서
                                                AND R3.CUSTOM_CODE = R1.CUSTOM_CODE
                                                AND R3.APLY_START_DATE &lt;= R.ISSUE_REQ_DATE
                                                AND R3.APLY_END_DATE &gt;= R.ISSUE_REQ_DATE
                                                AND R3.TYPE   = SUBSTRING(R.LOT_NO, 10, 1)
            LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE = R1.COMP_CODE
                                                AND R4.MAIN_CODE = 'B056'
                                                AND R4.SUB_CODE = R1.AREA_TYPE
 			INNER JOIN BPR200T A7 WITH(NOLOCK) ON A7.COMP_CODE = A.COMP_CODE
											AND A7.DIV_CODE = A.DIV_CODE
											AND A7.ITEM_CODE = A.ITEM_CODE
--사내가공품은 원자재의 인증번호 가져오게..
			LEFT JOIN PMP100T T WITH(NOLOCK) ON T.COMP_CODE = R.COMP_CODE
											AND T.DIV_CODE = R.DIV_CODE
											AND T.ORDER_NUM = R.ORDER_NUM
											AND T.SER_NO = R.SER_NO
											AND T.LOT_NO = R.LOT_NO
			LEFT JOIN PMP200T T1 WITH(NOLOCK) ON T1.COMP_CODE = T.COMP_CODE
											AND T1.DIV_CODE = T.DIV_CODE
											AND T1.WKORD_NUM = T.WKORD_NUM

            LEFT JOIN BCM100T T2 WITH(NOLOCK) ON T2.COMP_CODE = T1.COMP_CODE				--매입처
                                            AND ( ISNULL(T2.CHANNEL, '') = SUBSTRING(T1.LOT_NO, 1, 2) AND ISNULL(T1.LOT_NO, '') != '')
											AND T2.USE_YN = 'Y'

            LEFT JOIN S_BCM106T_YP T3 WITH(NOLOCK) ON T3.COMP_CODE = T2.COMP_CODE               --매입처 농가정보
                                                AND T3.CUSTOM_CODE = T2.CUSTOM_CODE
                                                AND T3.FARM_CODE = SUBSTRING(T1.LOT_NO, 8, 2)
            LEFT JOIN S_BCM100T_YP T4 WITH(NOLOCK) ON T4.COMP_CODE = T2.COMP_CODE              --매입처 인증서
                                                AND T4.CUSTOM_CODE = T2.CUSTOM_CODE
                                                AND T4.APLY_START_DATE &lt;= R.ISSUE_REQ_DATE
                                                AND T4.APLY_END_DATE &gt;= R.ISSUE_REQ_DATE
                                                AND T4.TYPE   = SUBSTRING(T1.LOT_NO, 10, 1)
            LEFT JOIN BSA100T T5 WITH(NOLOCK) ON T5.COMP_CODE = T2.COMP_CODE
                                            AND T5.MAIN_CODE = 'B056'
                                            AND T5.SUB_CODE = T2.AREA_TYPE
			LEFT  JOIN S_PMP111T_YP ZZ WITH(NOLOCK)  ON ZZ.COMP_CODE		= R.COMP_CODE
													AND ZZ.DIV_CODE			= R.DIV_CODE
													AND ZZ.ITEM_CODE		= R.ITEM_CODE
													AND ZZ.ORDER_NUM		= R.ORDER_NUM
													AND ZZ.SER_NO			= R.SER_NO
            WHERE A.COMP_CODE = @COMP_CODE
              AND A.DIV_CODE = @DIV_CODE

               --거래처,
            --ORDER BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_REQ_NUM, ISSUE_REQ_SEQ
            ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.DVRY_DATE, A.ORDER_NUM, A.SER_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
     </select>
</mapper>