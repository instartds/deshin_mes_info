<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mtr110skrv_ypServiceImpl">
	<select id="s_mtr110skrv_ypServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--SP_HELP BTR100T
--SP_HELP BPR200T
--SP_HELP MPO100T
--SP_HELP MAP100T

--BTR100T_IDX00     COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE
--BTR100T_IDX01     COMP_CODE, INOUT_TYPE, WH_CODE, ITEM_CODE, DIV_CODE
--BTR100T_IDX02     COMP_CODE, INOUT_DATE, INOUT_TYPE, DIV_CODE
--BTR100T_IDX03     COMP_CODE, ITEM_CODE, INOUT_DATE, WH_CODE, DIV_CODE
--BTR100T_IDX04     COMP_CODE, ORDER_NUM, ORDER_SEQ, INOUT_TYPE, DIV_CODE
--BTR100T_IDX05     COMP_CODE, BASIS_NUM, BASIS_SEQ, INOUT_TYPE, DIV_CODE
--BTR100T_IDX06     COMP_CODE, INOUT_METH, INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, DIV_CODE

-- BTR100T M1         /  BPR100T M2         /   BPR200T M3   /   BCM100T M4
-- MPO100T M5         /  MPO200T M6         /   MAP100T M7   /   MAP200T M8
-- BOR120T B1         /  BSA100T B2 ~ B5    /   BSA220T B6

--UMrpt01krv.CMtr110kr, Public[fnmtr110q] Query01 자재 입고현황
BEGIN
        DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
                            , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
                            , @INOUT_FR_DATE       NVARCHAR(08)             --(필수) 입고일(FR)
                            , @INOUT_TO_DATE       NVARCHAR(08)             --(필수) 입고일(TO)
                            , @ORDER_TYPE          NVARCHAR(02)             --(선택) 발주형태
                            , @INOUT_CODE          NVARCHAR(20)             --(선택) 거래처코드
                            , @INOUT_PRSN          NVARCHAR(10)             --(선택) 입고담당자
                            , @WH_CODE             NVARCHAR(08)             --(선택) 입고창고
                            , @ITEM_ACCOUNT        NVARCHAR(02)             --(선택) 품목계정
                            , @ITEM_CODE           NVARCHAR(20)             --(선택) 품목코드
                            , @INOUT_TYPE_DETAIL   NVARCHAR(03)              --(선택) 입고유형
                            , @DVRY_TYPE           NVARCHAR(01)              --(필수) 납기경과 (전체 : 0 , 납기준수 : 1, 납기경과 : 2)
                            , @PROJECT_NO          NVARCHAR(20)             --(선택) 관리번호
                            , @ORDER_FR_DATE       NVARCHAR(08)             --(선택) 발주일(FR)
                            , @ORDER_TO_DATE       NVARCHAR(08)             --(선택) 발주일(TO)
                            , @DVRY_FR_DATE        NVARCHAR(08)             --(선택) 납기일(FR)
                            , @DVRY_TO_DATE        NVARCHAR(08)             --(선택) 납기일(TO)
                            , @INOUT_NAME          NVARCHAR(20)             --(선택) 거래처명
                            , @ITEM_NAME           NVARCHAR(200)             --(선택) 품목명
                            , @USER_ID             NVARCHAR(100)             --(필수) USER ID
                            , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2
                            , @MONEY_UNIT          NVARCHAR(3)              --통화
                            , @ITEM_LEVEL1         NVARCHAR(05)             --대분류
                            , @ITEM_LEVEL2         NVARCHAR(05)             --중분류
                            , @ITEM_LEVEL3         NVARCHAR(05)             --소분류
                            , @CREATE_LOC          NVARCHAR(03)             --생성경로

        SET NOCOUNT ON
        SET ARITHABORT ON

        SET @COMP_CODE                  =   #{S_COMP_CODE}
        SET @DIV_CODE                   =   #{DIV_CODE}
        SET @INOUT_FR_DATE              =   #{INOUT_FR_DATE}
        SET @INOUT_TO_DATE              =   #{INOUT_TO_DATE}
        SET @ORDER_TYPE                 =   #{ORDER_TYPE}
        SET @INOUT_CODE                 =   #{CUSTOM_CODE}
        SET @INOUT_PRSN                 =   #{INOUT_PRSN}
        SET @WH_CODE                    =   #{WH_CODE}
        SET @ITEM_ACCOUNT               =   #{ITEM_ACCOUNT}
        SET @ITEM_CODE                  =   #{ITEM_CODE}
        SET @INOUT_TYPE_DETAIL          =   #{INOUT_TYPE_DETAIL}
        SET @DVRY_TYPE                  =   #{DVRY_TYPE}
        SET @PROJECT_NO                 =   #{PJT_CODE}
        SET @ORDER_FR_DATE              =   #{ORDER_FR_DATE}
        SET @ORDER_TO_DATE              =   #{ORDER_TO_DATE}
        SET @DVRY_FR_DATE               =   #{DVRY_FR_DATE}
        SET @DVRY_TO_DATE               =   #{DVRY_TO_DATE}
        SET @INOUT_NAME                 =   #{CUSTOM_NAME}
        SET @ITEM_NAME                  =   #{ITEM_NAME}
        SET @USER_ID                    =   #{S_USER_ID}

        SET @QUERY_TYPE                 =   #{QUERY_TYPE}
        SET @MONEY_UNIT                 =   #{MONEY_UNIT}
        SET @ITEM_LEVEL1                =   #{ITEM_LEVEL1}
        SET @ITEM_LEVEL2                =   #{ITEM_LEVEL2}
        SET @ITEM_LEVEL3                =   #{ITEM_LEVEL3}
        SET @CREATE_LOC                 =   #{CREATE_LOC}



        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			SELECT
		</if>
        <if test="@foren.Ognl@isEmpty(DIV_CODE)">
			SELECT TOP 0
		</if>
		<choose>
			<when test="QUERY_TYPE == 1">
				A.ITEM_LEVEL1
              , A.ITEM_LEVEL2
              , A.ITEM_LEVEL3

              , A.INDEX01            --  품목별 : A.ITEM_CODE      ,거래처별 : A.INOUT_CODE
              , A.INDEX02            --  품목별 : A.ITEM_NAME      ,거래처별 : A.CUSTOM_NAME

              , A.BARCODE            --  바코드

              , A.INDEX03            --  품목별 : A.SPEC           ,거래처별 : A.INOUT_DATE
              , A.INDEX04            --  품목별 : A.INOUT_DATE     ,거래처별 : A.ITEM_CODE
              , A.INDEX05            --  품목별 : A.INOUT_CODE     ,거래처별 : A.ITEM_NAME
              , A.INDEX06            --  품목별 : A.CUSTOM_NAME    ,거래처별 : A.SPEC
			</when>
			<when test="QUERY_TYPE == 2">
			    A.INDEX01            --  품목별 : A.ITEM_CODE      ,거래처별 : A.INOUT_CODE
			  , A.INDEX02            --  품목별 : A.ITEM_NAME      ,거래처별 : A.CUSTOM_NAME
			  , A.INDEX03            --  품목별 : A.SPEC           ,거래처별 : A.INOUT_DATE

			  , A.ITEM_LEVEL1
			  , A.ITEM_LEVEL2
			  , A.ITEM_LEVEL3

			  , A.INDEX04            --  품목별 : A.INOUT_DATE     ,거래처별 : A.ITEM_CODE
			  , A.INDEX05            --  품목별 : A.INOUT_CODE     ,거래처별 : A.ITEM_NAME

			  , A.BARCODE            --  바코드"

			  , A.INDEX06            --  품목별 : A.CUSTOM_NAME    ,거래처별 : A.SPEC
			</when>
			<when test="QUERY_TYPE == 3">
			   A.INDEX01            --  품목별 : A.ITEM_CODE      ,거래처별 : A.INOUT_CODE
			 , A.INDEX02            --  품목별 : A.ITEM_NAME      ,거래처별 : A.CUSTOM_NAME
			 , A.INDEX03            --  품목별 : A.SPEC           ,거래처별 : A.INOUT_DATE

			 , A.INDEX04            --  품목별 : A.INOUT_DATE     ,거래처별 : A.ITEM_CODE

			 , A.BARCODE            --  바코드"

			 , A.INDEX05            --  품목별 : A.INOUT_CODE     ,거래처별 : A.ITEM_NAME
			 , A.INDEX06            --  품목별 : A.CUSTOM_NAME    ,거래처별 : A.SPEC

			 , A.ITEM_LEVEL1
			 , A.ITEM_LEVEL2
			 , A.ITEM_LEVEL3
			</when>
			<otherwise>
			   A.INDEX01            --  품목별 : A.ITEM_CODE      ,거래처별 : A.INOUT_CODE
			 , A.INDEX02            --  품목별 : A.ITEM_NAME      ,거래처별 : A.CUSTOM_NAME
			 , A.INDEX03            --  품목별 : A.SPEC           ,거래처별 : A.INOUT_DATE

			 , A.INDEX04            --  품목별 : A.INOUT_DATE     ,거래처별 : A.ITEM_CODE

			 , A.BARCODE            --  바코드"

			 , A.INDEX05            --  품목별 : A.INOUT_CODE     ,거래처별 : A.ITEM_NAME
			 , A.INDEX06            --  품목별 : A.CUSTOM_NAME    ,거래처별 : A.SPEC

			 , A.ITEM_LEVEL1
			 , A.ITEM_LEVEL2
			 , A.ITEM_LEVEL3
			</otherwise>
		</choose>

              , A.INOUT_Q
              , A.INOUT_P
              , A.INOUT_I
              , A.EXPENSE_I
              , A.INOUT_I_TOTAL
              , A.INOUT_FOR_P
              , A.INOUT_FOR_O
              , A.MONEY_UNIT
              , A.EXCHG_RATE_O
              , A.STOCK_UNIT
              , A.WH_CODE
              , A.INOUT_PRSN
              , A.INOUT_NUM
              , A.INOUT_METH
              , A.INOUT_TYPE_DETAIL
              , A.ORDER_DATE
              , A.ORDER_NUM
              , A.ORDER_SEQ
              , A.ORDER_UNIT_Q --발주량
			  , A.ORDER_UNIT   --구매단위
			  , A.TRNS_RATE	   --변환계수
			  , A.ORDER_UNIT_P --구매단가
              , A.DVRY_DATE
              , A.BUY_Q
              , A.REMARK
              , A.PROJECT_NO
              , A.LOT_NO
              , A.LC_NUM
              , A.BL_NUM
              , A.CREATE_LOC
              , A.DIV_CODE
              , A.TAX_TYPE
              , UPDATE_DB_TIME
              , A.FARM_CODE  --농가코드
			  , A.FARM_NAME	 --농가명
			  , A.ORIGIN     --원산지
			  , A.TRNS_RATE_IN -- 입수(BTR100)
            FROM
                (
                    SELECT CASE WHEN @QUERY_TYPE = '1' THEN  M1.ITEM_CODE
                                WHEN @QUERY_TYPE = '2' THEN  M1.INOUT_CODE
                                WHEN @QUERY_TYPE = '3' THEN  M1.INOUT_CODE
                                ELSE ''
                           END                                                                                             AS INDEX01
                         , CASE WHEN @QUERY_TYPE = '1' THEN  uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)
                                WHEN @QUERY_TYPE = '2' THEN  uniLITE.fnCustNameComp(M1.COMP_CODE, @USER_ID, M1.INOUT_CODE)
                                WHEN @QUERY_TYPE = '3' THEN  uniLITE.fnCustNameComp(M1.COMP_CODE, @USER_ID, M1.INOUT_CODE)
                                ELSE ''
                           END                                                                                             AS INDEX02
                         , CASE WHEN @QUERY_TYPE = '1' THEN  M2.SPEC
                                WHEN @QUERY_TYPE = '2' THEN  uniLITE.fnGetUserDateComp(M1.COMP_CODE, M1.INOUT_DATE)
                                WHEN @QUERY_TYPE = '3' THEN  M1.ITEM_CODE
                                ELSE ''
                           END                                                                                             AS INDEX03
                         , CASE WHEN @QUERY_TYPE = '1' THEN  unilite.fnGetUserDateComp(M1.COMP_CODE, M1.INOUT_DATE)
                                WHEN @QUERY_TYPE = '2' THEN  M1.ITEM_CODE
                                WHEN @QUERY_TYPE = '3' THEN  uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)
                                ELSE ''
                           END                                                                                             AS INDEX04
                         , CASE WHEN @QUERY_TYPE = '1' THEN  M1.INOUT_CODE
                                WHEN @QUERY_TYPE = '2' THEN  uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)
                                WHEN @QUERY_TYPE = '3' THEN  M2.SPEC
                                ELSE ''
                           END                                                                                             AS INDEX05
                         , CASE WHEN @QUERY_TYPE = '1' THEN  uniLITE.fnCustNameComp(M1.COMP_CODE, @USER_ID, M1.INOUT_CODE)
                                WHEN @QUERY_TYPE = '2' THEN  M2.SPEC
                                WHEN @QUERY_TYPE = '3' THEN  uniLITE.fnGetUserDateComp(M1.COMP_CODE, M1.INOUT_DATE)
                                ELSE ''
                           END                                                                                             AS INDEX06
                         , CASE M1.INOUT_METH
                                WHEN '6' THEN M1.INOUT_Q * -1
                                WHEN '5' THEN M1.INOUT_Q * -1
                                ELSE M1.INOUT_Q
                           END                                                                                             AS INOUT_Q

                         , CASE M1.INOUT_METH
                                WHEN '6' THEN M1.INOUT_P * -1
                                WHEN '5' THEN M1.INOUT_P * -1
                                ELSE M1.INOUT_P
                           END                                                                                             AS INOUT_P
                         , CASE M1.INOUT_METH
                                WHEN '6' THEN M1.INOUT_I * -1
                                WHEN '5' THEN M1.INOUT_I * -1
                                ELSE M1.INOUT_I
                           END                                                                                             AS INOUT_I
                         , ISNULL(M1.EXPENSE_I, 0)                                                                         AS EXPENSE_I
                         , M1.INOUT_I + ISNULL(M1.EXPENSE_I, 0)                                                            AS INOUT_I_TOTAL
                         , CASE M1.MONEY_UNIT
                                WHEN B2.SUB_CODE THEN 0
                                ELSE
                                    CASE M1.INOUT_METH
                                         WHEN '6' THEN M1.INOUT_FOR_P * -1
                                         WHEN '5' THEN M1.INOUT_FOR_P * -1
                                         ELSE M1.INOUT_FOR_P
                                    END
                           END                                                                                             AS INOUT_FOR_P
                         , CASE M1.MONEY_UNIT
                                WHEN B2.SUB_CODE THEN 0
                                ELSE
                                    CASE M1.INOUT_METH
                                         WHEN '6' THEN M1.INOUT_FOR_O * -1
                                         WHEN '5' THEN M1.INOUT_FOR_O * -1
                                         ELSE M1.INOUT_FOR_O
                                    END
                           END                                                                                             AS INOUT_FOR_O
                         , M1.MONEY_UNIT                                                                                   AS MONEY_UNIT
                         , M1.EXCHG_RATE_O                                                                                 AS EXCHG_RATE_O
                         , M2.STOCK_UNIT
                         , B6.TREE_NAME                                                                                    AS WH_CODE
                         , B3.CODE_NAME                                                                 AS INOUT_PRSN
                         , M1.INOUT_NUM                                                                                    AS INOUT_NUM
                         , B4.CODE_NAME                                                                 AS INOUT_METH
                         , B5.CODE_NAME                                                                 AS INOUT_TYPE_DETAIL
                         , uniLITE.fnGetUserDateComp(@COMP_CODE, M5.ORDER_DATE)                                            AS ORDER_DATE
                         , M5.ORDER_NUM                                                                                    AS ORDER_NUM
                         , M6.ORDER_SEQ                                                                                    AS ORDER_SEQ
                         , M6.ORDER_UNIT_Q  --발주량
						 , M6.ORDER_UNIT	--구매단위
						 --, M6.TRNS_RATE		--입수
						 , ISNULL(M6.TRNS_RATE, M2.TRNS_RATE) AS TRNS_RATE		--입수
						 , M6.ORDER_UNIT_P  --단가
                         , uniLITE.fnGetUserDateComp(@COMP_CODE, M6.DVRY_DATE)                                             AS DVRY_DATE
                         , M7.BUY_Q                                                                                        AS BUY_Q
                         , M1.REMARK                                                                                       AS REMARK
                         , M1.PROJECT_NO                                                                                   AS PROJECT_NO
                         , M1.LOT_NO                                                                                       AS LOT_NO
                         , M1.LC_NUM                                                                                       AS LC_NUM
                         , M1.BL_NUM                                                                                       AS BL_NUM
                         , CASE WHEN M1.CREATE_LOC = '2' THEN '1' ELSE '2' END                                             AS CREATE_LOC
                         , B1.DIV_NAME                                                                                     AS DIV_CODE
                         , M1.UPDATE_DB_TIME                                                                               AS UPDATE_DB_TIME
                         , C1.LEVEL_NAME AS ITEM_LEVEL1
                         , C2.LEVEL_NAME AS ITEM_LEVEL2
                         , C3.LEVEL_NAME AS ITEM_LEVEL3
                         , M2.BARCODE
                         , M2.TAX_TYPE
                         , C4.FARM_CODE
						 , C4.FARM_NAME
						 --, C4.ORIGIN
						 , ISNULL(C4.ORIGIN, M1.WONSANGI_NUM) AS ORIGIN						 
						 , M1.TRNS_RATE AS TRNS_RATE_IN

                    FROM                BTR100T  M1 WITH (NOLOCK)
                            LEFT JOIN   BPR100T  M2 WITH (NOLOCK) ON M2.COMP_CODE        = M1.COMP_CODE
                                                                 AND M2.ITEM_CODE        = M1.ITEM_CODE
                            LEFT JOIN   BPR200T  M3 WITH (NOLOCK) ON M3.COMP_CODE        = M1.COMP_CODE
                                                                 AND M3.DIV_CODE         = M1.DIV_CODE
                                                                 AND M3.ITEM_CODE        = M1.ITEM_CODE
                            LEFT JOIN   BCM100T  M4 WITH (NOLOCK) ON M4.COMP_CODE        = M1.COMP_CODE
                                                                 AND M4.CUSTOM_CODE      = M1.INOUT_CODE
                            LEFT JOIN   MPO100T  M5 WITH (NOLOCK) ON M5.COMP_CODE        = M1.COMP_CODE
                                                                 AND M5.DIV_CODE         = M1.DIV_CODE
                                                                 AND M5.CUSTOM_CODE      = M1.INOUT_CODE
                                                                 AND M5.ORDER_NUM        = M1.ORDER_NUM
                            LEFT JOIN   MPO200T  M6 WITH (NOLOCK) ON M6.COMP_CODE        = M1.COMP_CODE
                                                                 AND M6.DIV_CODE         = M1.DIV_CODE
                                                                 AND M6.CUSTOM_CODE      = M1.INOUT_CODE
                                                                 AND M6.ORDER_NUM        = M1.ORDER_NUM
                                                                 AND M6.ORDER_SEQ        = M1.ORDER_SEQ
                            LEFT JOIN ( SELECT SUM(BUY_Q) AS BUY_Q
                                             , COMP_CODE
                                             , DIV_CODE
                                             , INOUT_NUM
                                             , INOUT_SEQ
                                             , ITEM_CODE
                                          FROM MAP200T
                                         GROUP BY COMP_CODE, DIV_CODE, INOUT_NUM, INOUT_SEQ, ITEM_CODE) AS M7 ON M7.COMP_CODE        = M1.COMP_CODE
                                                                                                             AND M7.DIV_CODE         = M1.DIV_CODE
                                                                                                             AND M7.INOUT_NUM        = M1.INOUT_NUM
                                                                                                             AND M7.INOUT_SEQ        = M1.INOUT_SEQ
                                                                                                             AND M7.ITEM_CODE        = M1.ITEM_CODE
                            LEFT JOIN   BOR120T  B1 WITH (NOLOCK) ON B1.COMP_CODE        = M1.COMP_CODE
                                                                 AND B1.DIV_CODE         = M1.DIV_CODE
                            LEFT JOIN   BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE        = M1.COMP_CODE
                                                                 AND B2.MAIN_CODE        = N'B004'
                                                                 AND B2.REF_CODE1        = N'Y'
                            LEFT JOIN   BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE        = M1.COMP_CODE
                                                                 AND B3.MAIN_CODE        = N'B024'
                                                                 AND B3.SUB_CODE         = M1.INOUT_PRSN
                            LEFT JOIN   BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE        = M1.COMP_CODE
                                                                 AND B4.MAIN_CODE        = N'B036'
                                                                 AND B4.SUB_CODE         = M1.INOUT_METH
                            LEFT JOIN   BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE        = M1.COMP_CODE
                                                                 AND B5.MAIN_CODE        = N'M103'
                                                                 AND B5.SUB_CODE         = M1.INOUT_TYPE_DETAIL
                            LEFT JOIN   BSA220T  B6 WITH (NOLOCK) ON B6.COMP_CODE        = M1.COMP_CODE
                                                                 AND B6.TREE_CODE        = M1.WH_CODE
                            LEFT JOIN   BPR000T  C1 WITH (NOLOCK) ON C1.COMP_CODE        = M2.COMP_CODE
                                                                 AND C1.LEVEL1          != '*'
                                                                 AND C1.LEVEL1           = M2.ITEM_LEVEL1
                                                                 AND C1.LEVEL2           = '*'
                                                                 AND C1.LEVEL3           = '*'

                            LEFT JOIN   BPR000T  C2 WITH (NOLOCK) ON C2.COMP_CODE        = M2.COMP_CODE
                                                                 AND C2.LEVEL1          != '*'
                                                                 AND C2.LEVEL1           = M2.ITEM_LEVEL1
                                                                 AND C2.LEVEL2          != '*'
                                                                 AND C2.LEVEL2           = M2.ITEM_LEVEL2
                                                                 AND C2.LEVEL3           = '*'
--
                            LEFT JOIN   BPR000T  C3 WITH (NOLOCK) ON C3.COMP_CODE        = M2.COMP_CODE
                                                                 AND C3.LEVEL1          != '*'
                                                                 AND C3.LEVEL1           = M2.ITEM_LEVEL1
                                                                 AND C3.LEVEL2          != '*'
                                                                 AND C3.LEVEL2           = M2.ITEM_LEVEL2
                                                                 AND C3.LEVEL3          != '*'
                                                                 AND C3.LEVEL3           = M2.ITEM_LEVEL3
                            LEFT JOIN S_BCM106T_YP C4 WITH(NOLOCK) ON C4.COMP_CODE = M1.COMP_CODE
																  AND C4.CUSTOM_CODE = M1.INOUT_CODE
																  AND C4.FARM_CODE = SUBSTRING(M1.LOT_NO , 8, 2)

                    WHERE  M1.COMP_CODE             =  @COMP_CODE
                       AND M1.DIV_CODE              =  @DIV_CODE
                       AND M1.INOUT_DATE           &gt;=  @INOUT_FR_DATE
                       AND M1.INOUT_DATE           &lt;=  @INOUT_TO_DATE
                       AND M1.INOUT_TYPE            =  N'1'
                       AND ISNULL(M1.ORDER_TYPE,'') != N'4'
                       AND M1.CREATE_LOC           IN (N'2', N'6')
                       AND ISNULL(M6.CONTROL_STATUS, '') != N'8'
                       AND ((M1.ORDER_TYPE          =  @ORDER_TYPE             AND @ORDER_TYPE          != '') OR (@ORDER_TYPE         = ''))
                       AND ((M1.INOUT_CODE       LIKE  @INOUT_CODE + '%'       AND @INOUT_CODE          != '') OR (@INOUT_CODE         = ''))
                       AND ((M4.CUSTOM_NAME      LIKE  '%' + @INOUT_NAME + '%' AND @INOUT_NAME          != '') OR (@INOUT_NAME         = ''))
                       AND ((M1.INOUT_PRSN          =  @INOUT_PRSN             AND @INOUT_PRSN          != '') OR (@INOUT_PRSN         = ''))
                       AND ((M1.WH_CODE             =  @WH_CODE                AND @WH_CODE             != '') OR (@WH_CODE            = ''))
                       AND ((M3.ITEM_ACCOUNT        =  @ITEM_ACCOUNT           AND @ITEM_ACCOUNT        != '') OR (@ITEM_ACCOUNT       = ''))
                       AND ((M1.ITEM_CODE        LIKE  @ITEM_CODE + '%'        AND @ITEM_CODE           != '') OR (@ITEM_CODE          = ''))
                       AND ((M2.ITEM_NAME        LIKE  '%' + @ITEM_NAME + '%'  AND @ITEM_NAME           != '') OR (@ITEM_NAME          = ''))
                       AND ((M1.INOUT_TYPE_DETAIL   =  @INOUT_TYPE_DETAIL      AND @INOUT_TYPE_DETAIL   != '') OR (@INOUT_TYPE_DETAIL  = ''))
                       AND ((M1.INOUT_DATE         &lt;=  M6.DVRY_DATE            AND @DVRY_TYPE           = '1') OR
                            (M1.INOUT_DATE          &gt;  M6.DVRY_DATE            AND @DVRY_TYPE           = '2') OR (@DVRY_TYPE          = '0'))
                       AND ((M1.PROJECT_NO          =  @PROJECT_NO             AND @PROJECT_NO          != '') OR (@PROJECT_NO         = ''))
                       AND ((M5.ORDER_DATE         &gt;=  @ORDER_FR_DATE          AND @ORDER_FR_DATE       != '') OR (@ORDER_FR_DATE      = ''))
                       AND ((M5.ORDER_DATE         &lt;=  @ORDER_TO_DATE          AND @ORDER_TO_DATE       != '') OR (@ORDER_TO_DATE      = ''))
                       AND ((M6.DVRY_DATE          &gt;=  @DVRY_FR_DATE           AND @DVRY_FR_DATE        != '') OR (@DVRY_FR_DATE       = ''))
                       AND ((M6.DVRY_DATE          &lt;=  @DVRY_TO_DATE           AND @DVRY_TO_DATE        != '') OR (@DVRY_TO_DATE       = ''))
                       AND ((M1.MONEY_UNIT          =  @MONEY_UNIT             AND @MONEY_UNIT          != '') OR (@MONEY_UNIT         = ''))
                       AND ((M2.ITEM_LEVEL1         =  @ITEM_LEVEL1            AND @ITEM_LEVEL1         != '') OR (@ITEM_LEVEL1        = ''))
                       AND ((M2.ITEM_LEVEL2         =  @ITEM_LEVEL2            AND @ITEM_LEVEL2         != '') OR (@ITEM_LEVEL2        = ''))
                       AND ((M2.ITEM_LEVEL3         =  @ITEM_LEVEL3            AND @ITEM_LEVEL3         != '') OR (@ITEM_LEVEL3        = ''))
                       AND ((M1.CREATE_LOC          =  N'2'                    AND @CREATE_LOC          = '1')
                         OR (M1.CREATE_LOC          =  N'6'                    AND @CREATE_LOC          = '2') OR (@CREATE_LOC         = ''))
                ) A
            ORDER BY 1,2,3,4,5,6, 7, 8, 9

        SET NOCOUNT OFF
        SET ARITHABORT OFF

END
	</select>
	<select id="s_mtr110skrv_ypServiceImpl.selectList1" parameterType="Map" resultType="rMap">

/* UMrpt01krv.CMtr110kr, Public[fnmtr110q] Query01 자재 입고현황 */
BEGIN
	SET NOCOUNT ON
	SET ARITHABORT ON

	 DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
          , @UserId         NVARCHAR(100) /* 사용자ID    */
          , @LangType       NVARCHAR(2)  /* 언어구분    */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	/* 데이터 조회(품목별 기준) --------------------------------------------------------- */


	DECLARE             @DVRY_TYPE           NVARCHAR(01)            /* (필수) 납기경과 (전체 : 0 , 납기준수 : 1, 납기경과 : 2) */
						, @CREATE_LOC          NVARCHAR(03)            /*생성경로*/


	SET @DVRY_TYPE                  =   #{INOUT_DATE}
	SET @CREATE_LOC                 =   @CREATE_LOC




	SELECT
			A.ITEM_LEVEL1
		  , A.ITEM_LEVEL2
		  , A.ITEM_LEVEL3
		  , A.ITEM_CODE
		  , A.ITEM_NAME
		  , A.SPEC
		  , A.INOUT_DATE
		  , A.INOUT_CODE
		  , A.CUSTOM_NAME
		  , A.INOUT_Q
		  , A.INOUT_P
		  , A.INOUT_I
		  , A.EXPENSE_I
		  , A.INOUT_I_TOTAL
		  , A.INOUT_FOR_P
		  , A.INOUT_FOR_O
		  , A.MONEY_UNIT
		  , A.EXCHG_RATE_O
		  , A.STOCK_UNIT
		  , A.WH_CODE
		  , A.INOUT_PRSN
		  , A.INOUT_NUM
		  , A.INOUT_METH
		  , A.INOUT_TYPE_DETAIL
		  , A.ORDER_DATE
		  , A.ORDER_NUM
		  , A.ORDER_SEQ
		  , A.DVRY_DATE
		  , A.BUY_Q
		  , A.REMARK
		  , A.PROJECT_NO
		  , A.LOT_NO
		  , A.LC_NUM
		  , A.BL_NUM
		  , A.CREATE_LOC
		  , A.DIV_CODE
		  , UPDATE_DB_TIME

		FROM (
				SELECT  M1.ITEM_CODE
					  , CASE WHEN @RefItem = '1' THEN M2.ITEM_NAME1
							 WHEN @RefItem = '2' THEN M2.ITEM_NAME2
							 ELSE M2.ITEM_NAME
						END													AS ITEM_NAME		/* 품명		*/
					  , M2.SPEC
					  , CASE WHEN ISNULL(M1.INOUT_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(M1.INOUT_DATE, 1, 4))
													 , 'MM',   SUBSTRING(M1.INOUT_DATE, 5, 2))
													 , 'DD',   SUBSTRING(M1.INOUT_DATE, 7, 2))
						END				AS INOUT_DATE											/* 입고일	*/
					  , M1.INOUT_CODE															/* 거래처   */
					  , CASE WHEN @RefItem = '1' THEN M4.CUSTOM_NAME1
							 WHEN @RefItem = '2' THEN M4.CUSTOM_NAME2
							 ELSE M4.CUSTOM_NAME
						END													AS CUSTOM_NAME		/* 거래처명	*/
					  , CASE M1.INOUT_METH
							 WHEN '6' THEN M1.INOUT_Q * -1
							 WHEN '5' THEN M1.INOUT_Q * -1
							 ELSE M1.INOUT_Q
					    END                                                 AS INOUT_Q

					  , CASE M1.INOUT_METH
							 WHEN '6' THEN M1.INOUT_P * -1
							 WHEN '5' THEN M1.INOUT_P * -1
							 ELSE M1.INOUT_P
					    END                                                 AS INOUT_P
					  , CASE M1.INOUT_METH
							 WHEN '6' THEN M1.INOUT_I * -1
							 WHEN '5' THEN M1.INOUT_I * -1
							 ELSE M1.INOUT_I
					    END                                                 AS INOUT_I
					  , ISNULL(M1.EXPENSE_I, 0)                             AS EXPENSE_I
					  , M1.INOUT_I + ISNULL(M1.EXPENSE_I, 0)                AS INOUT_I_TOTAL
					  , CASE M1.MONEY_UNIT
							 WHEN B2.SUB_CODE THEN 0
							 ELSE
								 CASE M1.INOUT_METH
									  WHEN '6' THEN M1.INOUT_FOR_P * -1
									  WHEN '5' THEN M1.INOUT_FOR_P * -1
									  ELSE M1.INOUT_FOR_P
								 END
					     END                                                AS INOUT_FOR_P
					  , CASE M1.MONEY_UNIT
							 WHEN B2.SUB_CODE THEN 0
							 ELSE
								 CASE M1.INOUT_METH
									  WHEN '6' THEN M1.INOUT_FOR_O * -1
									  WHEN '5' THEN M1.INOUT_FOR_O * -1
								 	  ELSE M1.INOUT_FOR_O
				 				 END
					    END                                                 AS INOUT_FOR_O
					  , M1.MONEY_UNIT                                       AS MONEY_UNIT
					  , M1.EXCHG_RATE_O                                     AS EXCHG_RATE_O
					  , M2.STOCK_UNIT
					  , B6.TREE_NAME                                        AS WH_CODE
					  , B3.CODE_NAME                                        AS INOUT_PRSN
					  , M1.INOUT_NUM                                        AS INOUT_NUM
					  , B4.CODE_NAME                                        AS INOUT_METH
					  , B5.CODE_NAME                                        AS INOUT_TYPE_DETAIL
					  , CASE WHEN ISNULL(M5.ORDER_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(M5.ORDER_DATE, 1, 4))
													 , 'MM',   SUBSTRING(M5.ORDER_DATE, 5, 2))
													 , 'DD',   SUBSTRING(M5.ORDER_DATE, 7, 2))
						END													AS ORDER_DATE		/* 입고일	*/

					  , M5.ORDER_NUM										AS ORDER_NUM
					  , M6.ORDER_SEQ										AS ORDER_SEQ
					  , CASE WHEN ISNULL(M6.DVRY_DATE, '') = '' THEN ''
							 ELSE REPLACE(
								  REPLACE(
								  REPLACE(@DateFormat, 'YYYY', SUBSTRING(M6.DVRY_DATE, 1, 4))
													 , 'MM',   SUBSTRING(M6.DVRY_DATE, 5, 2))
													 , 'DD',   SUBSTRING(M6.DVRY_DATE, 7, 2))
						END													AS DVRY_DATE		/* 납기일	*/
					  , M7.BUY_Q											AS BUY_Q
					  , M1.REMARK											AS REMARK
					  , M1.PROJECT_NO										AS PROJECT_NO
					  , M1.LOT_NO											AS LOT_NO
					  , M1.LC_NUM											AS LC_NUM
					  , M1.BL_NUM											AS BL_NUM
					  , CASE WHEN M1.CREATE_LOC = '2' THEN '1' ELSE '2' END AS CREATE_LOC
					  , B1.DIV_NAME											AS DIV_CODE
					  , M1.UPDATE_DB_TIME									AS UPDATE_DB_TIME
					  , C1.LEVEL_NAME										AS ITEM_LEVEL1
					  , C2.LEVEL_NAME										AS ITEM_LEVEL2
					  , C3.LEVEL_NAME										AS ITEM_LEVEL3

				FROM                BTR100T  M1 WITH (NOLOCK)
						LEFT JOIN   BPR100T  M2 WITH (NOLOCK) ON M2.COMP_CODE        = M1.COMP_CODE
															 AND M2.ITEM_CODE        = M1.ITEM_CODE
						LEFT JOIN   BPR200T  M3 WITH (NOLOCK) ON M3.COMP_CODE        = M1.COMP_CODE
															 AND M3.DIV_CODE         = M1.DIV_CODE
															 AND M3.ITEM_CODE        = M1.ITEM_CODE
						LEFT JOIN   BCM100T  M4 WITH (NOLOCK) ON M4.COMP_CODE        = M1.COMP_CODE
															 AND M4.CUSTOM_CODE      = M1.INOUT_CODE
						LEFT JOIN   MPO100T  M5 WITH (NOLOCK) ON M5.COMP_CODE        = M1.COMP_CODE
															 AND M5.DIV_CODE         = M1.DIV_CODE
															 AND M5.CUSTOM_CODE      = M1.INOUT_CODE
															 AND M5.ORDER_NUM        = M1.ORDER_NUM
						LEFT JOIN   MPO200T  M6 WITH (NOLOCK) ON M6.COMP_CODE        = M1.COMP_CODE
															 AND M6.DIV_CODE         = M1.DIV_CODE
															 AND M6.CUSTOM_CODE      = M1.INOUT_CODE
															 AND M6.ORDER_NUM        = M1.ORDER_NUM
															 AND M6.ORDER_SEQ        = M1.ORDER_SEQ
						LEFT JOIN ( SELECT SUM(BUY_Q) AS BUY_Q
										 , COMP_CODE
										 , DIV_CODE
										 , INOUT_NUM
										 , INOUT_SEQ
										 , ITEM_CODE
									  FROM MAP200T
									 GROUP BY COMP_CODE, DIV_CODE, INOUT_NUM, INOUT_SEQ, ITEM_CODE
								) AS M7   ON M7.COMP_CODE        = M1.COMP_CODE
										 AND M7.DIV_CODE         = M1.DIV_CODE
										 AND M7.INOUT_NUM        = M1.INOUT_NUM
										 AND M7.INOUT_SEQ        = M1.INOUT_SEQ
										 AND M7.ITEM_CODE        = M1.ITEM_CODE
						LEFT JOIN   BOR120T  B1 WITH (NOLOCK) ON B1.COMP_CODE        = M1.COMP_CODE
															 AND B1.DIV_CODE         = M1.DIV_CODE
						LEFT JOIN   BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE        = M1.COMP_CODE
															 AND B2.MAIN_CODE        = N'B004'
															 AND B2.REF_CODE1        = N'Y'
						LEFT JOIN   BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE        = M1.COMP_CODE
															 AND B3.MAIN_CODE        = N'B024'
															 AND B3.SUB_CODE         = M1.INOUT_PRSN
						LEFT JOIN   BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE        = M1.COMP_CODE
															 AND B4.MAIN_CODE        = N'B036'
															 AND B4.SUB_CODE         = M1.INOUT_METH
						LEFT JOIN   BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE        = M1.COMP_CODE
															 AND B5.MAIN_CODE        = N'M103'
															 AND B5.SUB_CODE         = M1.INOUT_TYPE_DETAIL
						LEFT JOIN   BSA220T  B6 WITH (NOLOCK) ON B6.COMP_CODE        = M1.COMP_CODE
															 AND B6.TREE_CODE        = M1.WH_CODE
						LEFT JOIN   BPR000T  C1 WITH (NOLOCK) ON C1.COMP_CODE        = M2.COMP_CODE
															 AND C1.LEVEL1          != '*'
															 AND C1.LEVEL1           = M2.ITEM_LEVEL1
															 AND C1.LEVEL2           = '*'
															 AND C1.LEVEL3           = '*'
						LEFT JOIN   BPR000T  C2 WITH (NOLOCK) ON C2.COMP_CODE        = M2.COMP_CODE
															 AND C2.LEVEL1          != '*'
															 AND C2.LEVEL1           = M2.ITEM_LEVEL1
															 AND C2.LEVEL2          != '*'
															 AND C2.LEVEL2           = M2.ITEM_LEVEL2
															 AND C2.LEVEL3           = '*'
						LEFT JOIN   BPR000T  C3 WITH (NOLOCK) ON C3.COMP_CODE        = M2.COMP_CODE
															 AND C3.LEVEL1          != '*'
															 AND C3.LEVEL1           = M2.ITEM_LEVEL1
															 AND C3.LEVEL2          != '*'
															 AND C3.LEVEL2           = M2.ITEM_LEVEL2
															 AND C3.LEVEL3          != '*'
															 AND C3.LEVEL3           = M2.ITEM_LEVEL3
						INNER JOIN BSA210T F WITH (NOLOCK) ON F.COMP_CODE = M1.COMP_CODE
              									AND F.TYPE_LEVEL = M1.DIV_CODE
              									AND F.TREE_CODE = M1.DEPT_CODE

				WHERE   M1.COMP_CODE             =  @CompCode
				<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
					AND M1.DIV_CODE              =  #{DIV_CODE}
				</if>

					AND M1.INOUT_TYPE            =  N'1'

					AND ISNULL(M1.ORDER_TYPE,'') != N'4'

					/* 생성경로 제한적 처리 : 2-자재와 6-무역 */

					AND M1.CREATE_LOC           IN (N'2', N'6')


					AND ISNULL(M6.CONTROL_STATUS, '') != N'8'

					/* 선택 조건 Start */
				<if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
					AND M1.INOUT_DATE           &gt;=  #{INOUT_FR_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
					AND M1.INOUT_DATE           &lt;=  #{INOUT_TO_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
					AND M1.ORDER_TYPE            =  #{ORDER_TYPE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
					AND M1.INOUT_CODE         LIKE  #{INOUT_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND M4.CUSTOM_NAME        LIKE  '%' + #{CUSTOM_NAME} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
					AND M1.INOUT_PRSN            =  #{INOUT_PRSN}
				</if>
				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
					AND M1.WH_CODE               =  #{WH_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					AND M3.ITEM_ACCOUNT          =  #{ITEM_ACCOUNT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND M1.ITEM_CODE          LIKE  #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND M2.ITEM_NAME          LIKE  '%' + #{ITEM_NAME} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
					AND M1.INOUT_TYPE_DETAIL   =  #{INOUT_TYPE_DETAIL}
				</if>
                    /* 납기준수 여부 */
                <if test="DVRY_DATE == &quot;B&quot;">
					AND M1.INOUT_DATE         &lt;=  M6.DVRY_DATE
				</if>
                <if test="DVRY_DATE == &quot;C&quot;">
					AND M1.INOUT_DATE           &gt;  M6.DVRY_DATE
				</if>
				<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
					AND M1.PROJECT_NO            =  #{PROJECT_NO}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ORDER_FR_DATE)">
					AND M5.ORDER_DATE           &gt;=  #{ORDER_FR_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ORDER_TO_DATE)">
					AND M5.ORDER_DATE           &lt;=  #{ORDER_TO_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(DVRY_FR_DATE)">
					AND M6.DVRY_DATE            &gt;=  #{DVRY_FR_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(DVRY_TO_DATE)">
					AND M6.DVRY_DATE            &lt;=  #{DVRY_TO_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
					AND M1.MONEY_UNIT            =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
					AND M2.ITEM_LEVEL1           =  #{ITEM_LEVEL1}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
					AND M2.ITEM_LEVEL2           =  #{ITEM_LEVEL2}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
					AND M2.ITEM_LEVEL3           =  #{ITEM_LEVEL3}
				</if>

				<if test="CREATE_LOC == 1">
					AND M1.CREATE_LOC          =  N'2'
				</if>
				<if test="CREATE_LOC == 2">
					AND M1.CREATE_LOC           =  N'6'
				</if>
	    		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
			    	AND    F.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =F.COMP_CODE AND TYPE_LEVEL=F.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
				</if>



					/* 선택 조건 End */
			) A
		ORDER BY 1,2,3,4,5,6, 7, 8, 9

	SET NOCOUNT OFF
	SET ARITHABORT OFF

END
	</select>

<select id="s_mtr110skrv_ypServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
SELECT
	A.WH_CODE
FROM BSA210T A WITH(NOLOCK)
	LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									AND B.DEPT_CODE = A.TREE_CODE
WHERE A.COMP_CODE = #{S_COMP_CODE}
AND B.USER_ID = #{S_USER_ID}

</select>

</mapper>