<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_spp100ukrv_ypServiceImpl">

    <!-- 페이지 오픈 시, 영업담당 정보 가져오는 로직  -->
    <select id="s_spp100ukrv_ypServiceImpl.getSalePrsn" parameterType="Map" resultType="String">
		SELECT SUB_CODE AS ESTI_PRSN
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'S010'
		   AND REF_CODE5 = #{S_USER_ID}
	</select>

	<!-- Main 조회 쿼리 -->
	<select id="s_spp100ukrv_ypServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_spp100ukrv_ypServiceImpl.selectList */
		SELECT A.COMP_CODE
			 , A.CUSTOM_ITEM_CODE
			 , A.CUSTOM_ITEM_NAME
			 , A.CUSTOM_ITEM_SPEC
			 , A.ESTI_NUM
			 , A.ESTI_SEQ
			 , A.ESTI_DEG
			 , (CASE WHEN A.ITEM_CODE = '*'
						  THEN ''
						  ELSE A.ITEM_CODE
				END)										AS ITEM_CODE
			 , (CASE WHEN A.ITEM_CODE = '*'
						  THEN A.ITEM_NAME
						  ELSE uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)
				END)										AS ITEM_NAME
			 , (CASE WHEN A.ITEM_CODE = '*'
						  THEN ''
						  ELSE B.SPEC
				END)										AS SPEC
			 , (CASE WHEN A.ITEM_CODE = '*'
						  THEN ''
						  ELSE B.STOCK_UNIT
				END)										AS STOCK_UNIT
			 , A.ESTI_UNIT
			 , A.TRANS_RATE
			 , A.ESTI_QTY
			 , A.ESTI_PRICE
			 , A.ESTI_AMT
			 , A.ESTI_CFM_PRICE
			 , A.ESTI_CFM_AMT
			 , A.TAX_TYPE
			 , D.TAX_TYPE									AS TAX_CALC_TYPE
			 , A.ESTI_TAX_AMT
			 , A.PROFIT_RATE
			 , A.ORDER_Q
			 , '' AS REF_FLAG
			 , A.ESTI_EX_AMT
			 , A.ESTI_CFM_EX_AMT
			 , A.ESTI_CFM_TAX_AMT
			 , C.CUSTOM_CODE
			 , (CASE WHEN C.CUSTOM_CODE = '*'
						  THEN C.CUSTOM_NAME
						  ELSE uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
				 END)										AS CUSTOM_NAME
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 , ''											AS REF_NUM
			 , ''											AS REF_SEQ
			 , C.ESTI_PRSN
			 , (SELECT WH_CODE
				  FROM BPR200T
				 WHERE COMP_CODE = C.COMP_CODE
				   AND DIV_CODE  = C.DIV_CODE
				   AND ITEM_CODE = A.ITEM_CODE)				AS WH_CODE
			 , ISNULL(B.STOCK_CARE_YN, 'Y')					AS STOCK_CARE_YN
			 , (SELECT ITEM_ACCOUNT
				  FROM BPR200T
				 WHERE COMP_CODE = C.COMP_CODE
				   AND DIV_CODE  = C.DIV_CODE
				   AND ITEM_CODE = A.ITEM_CODE)				AS ITEM_ACCOUNT
			/* master 정보 */
			 , C.DIV_CODE
			 , C.ESTI_DATE
			 , C.ESTI_TITLE
			 , C.CONFIRM_FLAG
			 , C.CONFIRM_DATE
			 , C.REMARK
			 , C.ESTI_AMT									AS TOT_ESTI_AMT
			 , C.ESTI_CFM_AMT								AS TOT_ESTI_CFM_AMT
			 , C.PROFIT_RATE								AS TOT_PROFIT_RATE
			 , SUBSTRING(C.ESTI_VALIDTERM, 1, 8)			AS FR_DATE
			 , SUBSTRING(C.ESTI_VALIDTERM, 9, 16)			AS TO_DATE
			 , A.PURCHA_CUSTOM_CODE
			 , A.PURCHA_CUSTOM_NAME

		  FROM		 SES110T A WITH(NOLOCK)
		  LEFT JOIN  BPR100T B WITH(NOLOCK)
								 ON A.COMP_CODE = B.COMP_CODE
								AND A.ITEM_CODE = B.ITEM_CODE
		  INNER JOIN SES100T C WITH(NOLOCK)
								 ON A.COMP_CODE = C.COMP_CODE
								AND A.ESTI_NUM  = C.ESTI_NUM
		  INNER JOIN BCM100T D WITH(NOLOCK)
								 ON D.COMP_CODE    = C.COMP_CODE
								AND D.CUSTOM_CODE  = C.CUSTOM_CODE

		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND C.ESTI_NUM		= #{ESTI_NUM}

		 ORDER BY A.ESTI_NUM, A.ESTI_SEQ
	</select>

	<!-- 조회 팝업 조회쿼리 -->
	<select id="s_spp100ukrv_ypServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		<if test="RDO_TYPE == &quot;master&quot;">
		/* 견적내역정보 조회(popup): master */
		SELECT A.DIV_CODE
			 , A.CUSTOM_CODE
			 , (CASE WHEN A.CUSTOM_CODE = '*'
						  THEN A.CUSTOM_NAME
						  ELSE uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE)
				 END)										AS CUSTOM_NAME
			 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ESTI_DATE) AS ESTI_DATE
			 , A.ESTI_TITLE
			 , A.ESTI_PRSN
			 , SUM(B.ESTI_QTY)								AS ESTI_QTY
			 , A.ESTI_CFM_AMT
			 , CASE WHEN A.CONFIRM_FLAG = '2' THEN '확정'
			 		ELSE '진행'
			 	END											AS CONFIRM_FLAG
			 , SUBSTRING(A.ESTI_VALIDTERM, 1, 8)			AS FR_DATE
			 , SUBSTRING(A.ESTI_VALIDTERM, 9, 16)			AS TO_DATE
			 , A.REMARK
			 , A.ESTI_NUM
		  FROM			  SES100T A WITH(NOLOCK)
			 ,			  SES110T B WITH(NOLOCK)
		 WHERE A.COMP_CODE	= B.COMP_CODE
		   AND A.ESTI_NUM	= B.ESTI_NUM
		   AND A.COMP_CODE	= #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE	   = #{DIV_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND B.ITEM_NAME   LIKE #{ITEM_NAME} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_FR)">
		   AND A.ESTI_DATE	 &gt;= #{ESTI_DATE_FR}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_TO)">
		   AND A.ESTI_DATE	 &lt;= #{ESTI_DATE_TO}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
		   AND A.ESTI_PRSN	  = #{ESTI_PRSN}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_TITLE)">
		   AND A.ESTI_TITLE  LIKE #{ESTI_TITLE} + '%'
		 </if>
		   AND A.CONFIRM_FLAG = #{CONFIRM_FLAG}
		 GROUP BY A.COMP_CODE, A.CUSTOM_CODE, A.CUSTOM_NAME, A.DIV_CODE, A.CUSTOM_CODE, A.ESTI_DATE, A.ESTI_TITLE, A.ESTI_PRSN, A.ESTI_CFM_AMT, A.CONFIRM_FLAG, A.ESTI_VALIDTERM, A.REMARK, A.ESTI_NUM
		 ORDER BY A.ESTI_NUM
		</if>

		<if test="RDO_TYPE == &quot;detail&quot;">
		/* 견적내역정보 조회(popup): detail */
		SELECT (CASE WHEN B.ITEM_CODE = '*'
						  THEN ''
						  ELSE B.ITEM_CODE
				 END) AS ITEM_CODE
			 , (CASE WHEN B.ITEM_CODE = '*'
						  THEN B.ITEM_NAME
						  ELSE uniLITE.fnItemNameComp(B.COMP_CODE, #{S_USER_ID}, B.ITEM_CODE)
				 END) AS ITEM_NAME
			 , (CASE WHEN B.ITEM_CODE = '*'
						  THEN ''
						  ELSE C.SPEC
				 END) AS SPEC
			 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ESTI_DATE) AS ESTI_DATE
			 , B.ESTI_QTY
			 , A.ESTI_PRSN
			 , B.ESTI_NUM
			 , A.ESTI_TITLE
			 , A.CONFIRM_FLAG
			 , A.CUSTOM_CODE
			 , (CASE WHEN A.CUSTOM_CODE = '*'
						  THEN A.CUSTOM_NAME
						  ELSE uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE)
				 END) AS CUSTOM_NAME
			 , A.DIV_CODE
		  FROM			  SES100T A WITH(NOLOCK)
			 ,			  SES110T B WITH(NOLOCK)
		  LEFT OUTER JOIN BPR100T C WITH(NOLOCK)
									  ON B.COMP_CODE = C.COMP_CODE
									 AND B.ITEM_CODE = C.ITEM_CODE
		 WHERE A.COMP_CODE	= B.COMP_CODE
		   AND A.ESTI_NUM	= B.ESTI_NUM
		   AND A.COMP_CODE	= #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE	   = #{DIV_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND B.ITEM_NAME   LIKE #{ITEM_NAME} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_FR)">
		   AND A.ESTI_DATE	 &gt;= #{ESTI_DATE_FR}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_TO)">
		   AND A.ESTI_DATE	 &lt;= #{ESTI_DATE_TO}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
		   AND A.ESTI_PRSN	  = #{ESTI_PRSN}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ESTI_TITLE)">
		   AND A.ESTI_TITLE  LIKE #{ESTI_TITLE} + '%'
		 </if>
		   AND A.CONFIRM_FLAG = #{CONFIRM_FLAG}
		 ORDER BY A.ESTI_NUM
		</if>
	</select>



	<!-- 주문상품명 입력시, 매핑된 품목정보 확인 -->
	<select id="s_spp100ukrv_ypServiceImpl.getItemInfo" parameterType="Map" resultType="rMap">
		/* s_spp100ukrv_ypServiceImpl.getItemInfo */
		SELECT ISNULL(A.CUSTOM_ITEM_CODE, '')	AS CUSTOM_ITEM_CODE
			 , ISNULL(A.CUSTOM_ITEM_NAME, '')	AS CUSTOM_ITEM_NAME
			 , ISNULL(A.CUSTOM_ITEM_SPEC, '')	AS CUSTOM_ITEM_SPEC
			 , A.ITEM_CODE
			 , C.ITEM_NAME
			 , C.SPEC
			 , A.TRNS_RATE
			 , A.ORDER_UNIT
			 , CASE WHEN ISNULL(D.ITEM_P, 0) = 0 THEN ISNULL(D1.ITEM_P, 0)
			 		ELSE ISNULL(D.ITEM_P, 0)
			   END																								AS SALE_BASIS_P
			 , C.TAX_TYPE

			 , C.SALE_UNIT
			 , C.STOCK_UNIT
			 , C.WGT_UNIT
			 , C.VOL_UNIT
			 , C.UNIT_WGT
			 , C.UNIT_VOL
			 , D.PURCHA_CUSTOM_CODE
			 , D.PURCHA_CUSTOM_NAME
		  FROM		 BPR300T A WITH(NOLOCK)
		  LEFT  JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE			= A.COMP_CODE
		  								   AND B.CUSTOM_CODE		= A.CUSTOM_CODE
		  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE			= A.COMP_CODE
		  								   AND C.ITEM_CODE			= A.ITEM_CODE
		  LEFT JOIN  BPR400T D WITH(NOLOCK) ON D.COMP_CODE			= A.COMP_CODE
  											AND D.DIV_CODE			= A.DIV_CODE
  											AND D.CUSTOM_CODE		= A.CUSTOM_CODE
  											AND D.ITEM_CODE			= A.ITEM_CODE
  											AND D.ORDER_UNIT		= A.ORDER_UNIT
  											AND D.MONEY_UNIT		= #{MONEY_UNIT}
  											AND D.TYPE              = '2'
											AND D.APLY_START_DATE   = (SELECT MAX(X.APLY_START_DATE)
											                             FROM BPR400T X WITH(NOLOCK)
																		WHERE X.COMP_CODE   = D.COMP_CODE
																		  AND X.DIV_CODE    = D.DIV_CODE
																		  AND X.TYPE        = D.TYPE
																		  AND X.CUSTOM_CODE = D.CUSTOM_CODE
																		  AND X.ITEM_CODE   = D.ITEM_CODE
																		  AND X.ORDER_UNIT  = D.ORDER_UNIT
																		  AND X.APLY_START_DATE  &lt;=  #{FR_DATE}
 																		  AND X.APLY_END_DATE    &gt;=  #{FR_DATE}
																	   )
		  LEFT JOIN BPR400T D1 WITH(NOLOCK) ON D1.COMP_CODE			= A.COMP_CODE
  											AND D1.DIV_CODE		 &gt; N''
  											AND D1.CUSTOM_CODE		= '*'
  											AND D1.ITEM_CODE		= A.ITEM_CODE
  											AND D1.ORDER_UNIT		= A.ORDER_UNIT
  											AND D1.MONEY_UNIT		= #{MONEY_UNIT}
  											AND D1.TYPE             = '2'
											AND D1.APLY_START_DATE  = (SELECT MAX(X.APLY_START_DATE)
											                             FROM BPR400T X WITH(NOLOCK)
																		WHERE X.COMP_CODE   = D1.COMP_CODE
																		  AND X.DIV_CODE    = D1.DIV_CODE
																		  AND X.TYPE        = D1.TYPE
																		  AND X.CUSTOM_CODE = D1.CUSTOM_CODE
																		  AND X.ITEM_CODE   = D1.ITEM_CODE
																		  AND X.ORDER_UNIT  = D1.ORDER_UNIT
																		  AND X.APLY_START_DATE  &lt;=  #{FR_DATE}
																		  AND X.APLY_END_DATE    &gt;=  #{FR_DATE}
																	   )
		 WHERE A.COMP_CODE			= #{S_COMP_CODE}
		   AND A.TYPE				= '2'
		   AND A.DIV_CODE			= #{DIV_CODE}
		   AND A.CUSTOM_CODE		= #{CUSTOM_CODE}
		   AND A.APLY_START_DATE   = (SELECT MAX(X.APLY_START_DATE)
										FROM BPR300T X WITH(NOLOCK)
									  WHERE X.COMP_CODE   = A.COMP_CODE
										AND X.DIV_CODE    = A.DIV_CODE
										AND X.TYPE        = A.TYPE
										AND X.CUSTOM_CODE = A.CUSTOM_CODE
										AND X.ITEM_CODE   = A.ITEM_CODE
									)
		   AND (
				REPLACE(A.CUSTOM_ITEM_CODE, ' ', '') = REPLACE(#{CUSTOM_ITEM_NAME}, ' ', '')
					OR
				REPLACE(A.CUSTOM_ITEM_NAME, ' ', '') = REPLACE(#{CUSTOM_ITEM_NAME}, ' ', '')
				)
	</select>



	<!-- 저장 전 자동채번 -->
	<select id="s_spp100ukrv_ypServiceImpl.autoNum" parameterType="Map" resultType="rMap">
		DECLARE		@AUTO_NUM	  NVARCHAR(20),
					@REGDATE	   NVARCHAR(8)
		SET @REGDATE = CONVERT(NVARCHAR(8), GETDATE(), 112)
		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'SES100T', 'S', @REGDATE, '', @AUTO_NUM OUTPUT
		SELECT  @AUTO_NUM AS ORDER_NUM
	</select>

	<insert id="s_spp100ukrv_ypServiceImpl.insertMaster" parameterType="Map" useGeneratedKeys="false">
		INSERT INTO SES100T
			(
			   COMP_CODE
			 , DIV_CODE
			 , ESTI_NUM
			 , ESTI_TITLE
			 , CUSTOM_CODE
			 , CUSTOM_NAME
			 , ESTI_DATE
		<if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
			 , ESTI_PRSN
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_ESTI_AMT)">
			 , ESTI_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_ESTI_CFM_AMT)">
			 , ESTI_CFM_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_PROFIT_RATE)">
			 , PROFIT_RATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
			 , REMARK
		</if>
			 , MONEY_UNIT
			 , ESTI_VALIDTERM
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		)
		VALUES (
			   #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{ESTI_NUM}
			 , #{ESTI_TITLE}
			 , #{CUSTOM_CODE}
			 , #{CUSTOM_NAME}
			 , #{ESTI_DATE}
		<if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
			 , #{ESTI_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_ESTI_AMT)">
			 , #{TOT_ESTI_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_ESTI_CFM_AMT)">
			 , #{TOT_ESTI_CFM_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_PROFIT_RATE)">
			 , #{TOT_PROFIT_RATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
			 , #{REMARK}
		</if>
			 , #{MONEY_UNIT}
			 , #{FR_DATE}+#{TO_DATE}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</insert>

	<update id="s_spp100ukrv_ypServiceImpl.updateMaster" parameterType="Map">
		UPDATE SES100T
		   SET ESTI_TITLE		= #{ESTI_TITLE}
			 , ESTI_VALIDTERM	= #{FR_DATE}+#{TO_DATE}
			 , REMARK			= #{REMARK}
			 , ESTI_AMT			= #{TOT_ESTI_AMT}
			 , ESTI_CFM_AMT		= #{TOT_ESTI_CFM_AMT}
			 , PROFIT_RATE		= #{TOT_PROFIT_RATE}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
	</update>

<!-- 아직 사용 안 함, 추후 전체삭제버튼 추가 시 사용 -->
	<delete id="s_spp100ukrv_ypServiceImpl.deleteMaster" parameterType="Map">
		DELETE SES110T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}

		DELETE SES100T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
	</delete>






	<!-- detail data insert/update/delete -->
	<insert id="s_spp100ukrv_ypServiceImpl.insertList" parameterType="Map" useGeneratedKeys="false">
		INSERT INTO SES110T
			(
			   COMP_CODE
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_CODE)">
			 , CUSTOM_ITEM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_NAME)">
			 , CUSTOM_ITEM_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_SPEC)">
			 , CUSTOM_ITEM_SPEC
		</if>
			 , DIV_CODE
			 , ESTI_SEQ
			 , ESTI_NUM
			 , ITEM_CODE
			 , ITEM_NAME
		<if test="@foren.Ognl@isNotEmpty(SPEC)">
			 , ITEM_SPEC
		</if>
			 , ESTI_UNIT
			 , TRANS_RATE
		<if test="@foren.Ognl@isNotEmpty(ESTI_QTY)">
			 , ESTI_QTY
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_PRICE)">
			 , ESTI_PRICE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_AMT)">
			 , ESTI_AMT
		</if>
			 , TAX_TYPE
		<if test="@foren.Ognl@isNotEmpty(ESTI_TAX_AMT)">
			 , ESTI_TAX_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_CFM_PRICE)">
			 , ESTI_CFM_PRICE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_CFM_AMT)">
			 , ESTI_CFM_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROFIT_RATE)">
			 , PROFIT_RATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHA_CUSTOM_CODE)">
			 , PURCHA_CUSTOM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHA_CUSTOM_NAME)">
			 , PURCHA_CUSTOM_NAME
		</if>
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		)
		VALUES (
			   #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_CODE)">
			 , #{CUSTOM_ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_NAME)">
			 , #{CUSTOM_ITEM_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_ITEM_SPEC)">
			 , #{CUSTOM_ITEM_SPEC}
		</if>
			 , #{DIV_CODE}
			 , #{ESTI_SEQ}
			 , #{ESTI_NUM}
			 , #{ITEM_CODE}
			 , #{ITEM_NAME}
		<if test="@foren.Ognl@isNotEmpty(SPEC)">
			 , #{SPEC}
		</if>
			 , #{ESTI_UNIT}
			 , #{TRANS_RATE}
		<if test="@foren.Ognl@isNotEmpty(ESTI_QTY)">
			 , #{ESTI_QTY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_PRICE)">
			 , #{ESTI_PRICE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_AMT)">
			 , #{ESTI_AMT}
		</if>
			 , #{TAX_TYPE}
		<if test="@foren.Ognl@isNotEmpty(ESTI_TAX_AMT)">
			 , #{ESTI_TAX_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_CFM_PRICE)">
			 , #{ESTI_CFM_PRICE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_CFM_AMT)">
			 , #{ESTI_CFM_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROFIT_RATE)">
			 , #{PROFIT_RATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHA_CUSTOM_CODE)">
			 , #{PURCHA_CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHA_CUSTOM_NAME)">
			 , #{PURCHA_CUSTOM_NAME}
		</if>
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</insert>

	<update id="s_spp100ukrv_ypServiceImpl.updateList" parameterType="Map">
		UPDATE SES110T
		   SET ESTI_QTY				= #{ESTI_QTY}
			 , ESTI_CFM_PRICE		= #{ESTI_CFM_PRICE}
			 , ESTI_CFM_AMT			= #{ESTI_CFM_AMT}
			 , ESTI_PRICE				= #{ESTI_PRICE}
			 , ESTI_AMT				= #{ESTI_AMT}
			 , ESTI_TAX_AMT			= #{ESTI_TAX_AMT}
			 , PROFIT_RATE			= #{PROFIT_RATE}
			 , TAX_TYPE				= #{TAX_TYPE}
			 , PURCHA_CUSTOM_CODE	= #{PURCHA_CUSTOM_CODE}
			 , PURCHA_CUSTOM_NAME	= #{PURCHA_CUSTOM_NAME}
			 , UPDATE_DB_USER		= #{S_USER_ID}
			 , UPDATE_DB_TIME		= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
		   AND ESTI_DEG		= #{ESTI_DEG}
		   AND ESTI_SEQ		= #{ESTI_SEQ}
	</update>

	<delete id="s_spp100ukrv_ypServiceImpl.deleteList" parameterType="Map">
		DELETE SES110T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
		   AND ESTI_DEG		= #{ESTI_DEG}
		   AND ESTI_SEQ		= #{ESTI_SEQ}


		/* detail data가 모두 삭제되면, master data도 삭제 */
		IF NOT EXISTS ( SELECT TOP 1 1
						  FROM SES110T WITH(NOLOCK)
						 WHERE COMP_CODE	= #{S_COMP_CODE}
						   AND DIV_CODE		= #{DIV_CODE}
						   AND ESTI_NUM		= #{ESTI_NUM}
						)
		BEGIN
			DELETE SES100T
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND ESTI_NUM		= #{ESTI_NUM}
		END
	</delete>








<!-- 견적확정/진행 버튼 로직 -->
<!-- 로그테이블 저장로직 사용 안 함
 	<insert id="s_spp100ukrv_ypServiceImpl.insertLogTable" parameterType="Map">						/* 로그테이블에 insert */
		/* spp100ukrvServiceImpl.insertLogTable */
		INSERT L_S_SPP100T_YP (
				 KEY_VALUE
			   , OPR_FLAG
			   , COMP_CODE
			   , ESTI_NUM
			   , INSERT_DB_USER
			   , INSERT_DB_TIME

		) VALUES (
				 KEY_VALUE
			   , OPR_FLAG
			   , #{S_COMP_CODE}
			   , #{}
			   , #{S_USER_ID}
			   , GETDATE()
		)
	</insert>
	-->


	<update id="s_spp100ukrv_ypServiceImpl.confirmEstimate" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_S_SPP100UKRV_YP_fnConfirmEstimate (
			#{COMP_CODE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ESTI_NUM		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{OPR_FLAG		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{CONFIRM_DATE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{FR_DATE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{TO_DATE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LANG_TYPE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>








<!-- Excel Upload-->
	<update id="s_spp100ukrv_ypServiceImpl.insertExcels_spp100ukrv_ypUpload" parameterType="Map">
		/* temp Table에 insert */
		DECLARE @ESTI_UNIT			NVARCHAR(03)

			SET @ESTI_UNIT			= #{ESTI_UNIT}


		INSERT INTO S_SPP100T_YP_XLS
			(
			   _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE

			 , ESTI_SEQ
			 , CUSTOM_ITEM_NAME
			 , CUSTOM_ITEM_SPEC
			 , ESTI_UNIT
			 , ESTI_QTY
			 , ESTI_CFM_PRICE
			 , TAX_TYPE
			 , PURCHA_CUSTOM_CODE
			 , PURCHA_CUSTOM_NAME

			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		)
		VALUES (
			   #{_EXCEL_JOBID}
			 , #{_EXCEL_ROWNUM}
			 , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
			 , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
			 , #{S_COMP_CODE}

			 , #{ESTI_SEQ}
			 , #{CUSTOM_ITEM_NAME}
			 , #{CUSTOM_ITEM_SPEC}
			 , UPPER(@ESTI_UNIT)
			 , #{ESTI_QTY}
			 , #{ESTI_CFM_PRICE}
			 , #{TAX_TYPE}
			 , #{PURCHA_CUSTOM_CODE}
			 , #{PURCHA_CUSTOM_NAME}

			 , #{S_USER_ID}
			 , GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="s_spp100ukrv_ypServiceImpl.getData" parameterType="Map" resultType="rMap">
		SELECT *
		  FROM		S_SPP100T_YP_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 1 (현재 사용 안 함) -->
	<select id="s_spp100ukrv_ypServiceImpl.checkItem" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'

		IF EXISTS (
					SELECT TOP 1 1
					  FROM BPR100T WITH(NOLOCK)
					 WHERE COMP_CODE = #{COMP_CODE}
					   AND ITEM_CODE = #{ITEM_CODE}
				  )
			BEGIN
				SET @CHECK_DATA = 'Y'
			END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 2 (현재 사용 안 함) -->
	<select id="s_spp100ukrv_ypServiceImpl.checkCust" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'

		IF EXISTS (
					SELECT TOP 1 1
					  FROM BCM100T WITH(NOLOCK)
					 WHERE COMP_CODE	= #{COMP_CODE}
					   AND CUSTOM_CODE	= #{CUSTOM_CODE}
				  )
			BEGIN
				SET @CHECK_DATA = 'Y'
			END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<!-- 에러메세지 insert (현재 사용 안 함) -->
	<update id="s_spp100ukrv_ypServiceImpl.insertErrorMsg">
		UPDATE S_SPP100T_YP_XLS
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>

	<select id="s_spp100ukrv_ypServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*s_spp100ukrv_ypServiceImpl.selectExcelUploadSheet1*/
		SELECT A._EXCEL_JOBID
			 , A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A.COMP_CODE

			 , A.ESTI_SEQ
			 , A.CUSTOM_ITEM_NAME
			 , A.CUSTOM_ITEM_SPEC
			 , A.ESTI_UNIT
			 , A.ESTI_QTY
			 , CASE WHEN ISNULL(A.ESTI_CFM_PRICE, 0) = 0 THEN CASE WHEN ISNULL(D.ITEM_P, 0) = 0 THEN ISNULL(D1.ITEM_P, 0)
			 													   ELSE ISNULL(D.ITEM_P, 0)
			 												  END
			 		ELSE A.ESTI_CFM_PRICE
			   END																								AS ESTI_CFM_PRICE
			 , (A.ESTI_QTY
			 * CASE WHEN ISNULL(A.ESTI_CFM_PRICE, 0) = 0 THEN CASE WHEN ISNULL(D.ITEM_P, 0) = 0 THEN ISNULL(D1.ITEM_P, 0)
			 													   ELSE ISNULL(D.ITEM_P, 0)
			 												  END
			 		ELSE A.ESTI_CFM_PRICE
			   END)																								AS ESTI_CFM_AMT
			 , C.TAX_TYPE
			 , ISNULL(B.ITEM_CODE, '')              AS ITEM_CODE
			 , ISNULL(C.ITEM_NAME, '')              AS ITEM_NAME
			 , C.SPEC
			 , B.TRNS_RATE							AS TRANS_RATE
			 , CASE WHEN ISNULL(D.ITEM_P, 0) = 0 THEN ISNULL(D1.ITEM_P, 0)
			 		ELSE ISNULL(D.ITEM_P, 0)
			   END																								AS ESTI_PRICE
			 , (A.ESTI_QTY
			 * CASE WHEN ISNULL(D.ITEM_P, 0) = 0 THEN ISNULL(D1.ITEM_P, 0)
			 		ELSE ISNULL(D.ITEM_P, 0)
			   END)																								AS ESTI_AMT
			-- , D.ITEM_P								AS ESTI_PRICE
			-- , A.ESTI_QTY * ISNULL(D.ITEM_P, 0)		AS ESTI_AMT
			 , A.INSERT_DB_USER
			 , A.INSERT_DB_TIME
			 , CASE WHEN ISNULL(E.CUSTOM_NAME, '') = '' AND ISNULL(F.CUSTOM_CODE, '') != ''
			 			THEN F.CUSTOM_CODE
			 		WHEN ISNULL(E.CUSTOM_NAME, '') = '' AND ISNULL(F.CUSTOM_CODE, '') = ''
			 			THEN ''
					ELSE A.PURCHA_CUSTOM_CODE
			   END										AS PURCHA_CUSTOM_CODE
			 , CASE WHEN ISNULL(E.CUSTOM_NAME, '') = '' AND ISNULL(F.CUSTOM_CODE, '') != ''
			 			THEN A.PURCHA_CUSTOM_NAME
			 		WHEN ISNULL(E.CUSTOM_NAME, '') = '' AND ISNULL(F.CUSTOM_CODE, '') = ''
			 			THEN ''
					ELSE E.CUSTOM_NAME
			   END										AS PURCHA_CUSTOM_NAME

		  FROM		 S_SPP100T_YP_XLS A WITH(NOLOCK)
		  LEFT JOIN  BPR300T		  B WITH(NOLOCK) ON B.COMP_CODE			= #{S_COMP_CODE}
													AND B.TYPE				= '2'
													AND B.DIV_CODE			= #{DIV_CODE}
													AND B.CUSTOM_CODE		= #{CUSTOM_CODE}
													AND B.APLY_START_DATE   = (SELECT MAX(X.APLY_START_DATE)
													                             FROM BPR300T X WITH(NOLOCK)
																				WHERE X.COMP_CODE   = B.COMP_CODE
																				  AND X.DIV_CODE    = B.DIV_CODE
																				  AND X.TYPE        = B.TYPE
																				  AND X.CUSTOM_CODE = B.CUSTOM_CODE
																			   )
													AND (
														REPLACE(B.CUSTOM_ITEM_CODE, ' ', '') = REPLACE(A.CUSTOM_ITEM_NAME, ' ', '')
															OR
														REPLACE(B.CUSTOM_ITEM_NAME, ' ', '') = REPLACE(A.CUSTOM_ITEM_NAME, ' ', '')
														)

		  LEFT JOIN  BPR100T		  C WITH(NOLOCK) ON C.COMP_CODE			= B.COMP_CODE
		  											AND C.ITEM_CODE			= B.ITEM_CODE
		  LEFT JOIN  BPR400T		  D WITH(NOLOCK) ON D.COMP_CODE			= B.COMP_CODE
		  											AND D.DIV_CODE			= B.DIV_CODE
		  											AND D.CUSTOM_CODE		= B.CUSTOM_CODE
		  											AND D.ITEM_CODE			= B.ITEM_CODE
		  											AND D.ORDER_UNIT		= B.ORDER_UNIT
		  											AND D.MONEY_UNIT		= #{MONEY_UNIT}
		  											AND D.TYPE              = '2'
													AND D.APLY_START_DATE   = (SELECT MAX(X.APLY_START_DATE)
													                             FROM BPR400T X WITH(NOLOCK)
																				WHERE X.COMP_CODE   = D.COMP_CODE
																				  AND X.DIV_CODE    = D.DIV_CODE
																				  AND X.TYPE        = D.TYPE
																				  AND X.CUSTOM_CODE = D.CUSTOM_CODE
																				  AND X.ITEM_CODE   = D.ITEM_CODE
																				  AND X.ORDER_UNIT  = D.ORDER_UNIT
																				  AND X.APLY_START_DATE  &lt;=  #{FR_DATE}
																				  AND X.APLY_END_DATE    &gt;=  #{FR_DATE}
																			   )
		  LEFT JOIN  BPR400T		 D1 WITH(NOLOCK) ON D1.COMP_CODE		= B.COMP_CODE
		  											AND D1.DIV_CODE		 &gt; N''
		  											AND D1.CUSTOM_CODE		= '*'
		  											AND D1.ITEM_CODE		= B.ITEM_CODE
		  											AND D1.ORDER_UNIT		= B.ORDER_UNIT
		  											AND D1.MONEY_UNIT		= #{MONEY_UNIT}
		  											AND D1.TYPE              = '2'
													AND D1.APLY_START_DATE   = (SELECT MAX(X.APLY_START_DATE)
													                             FROM BPR400T X WITH(NOLOCK)
																				WHERE X.COMP_CODE   = D1.COMP_CODE
																				  AND X.DIV_CODE    = D1.DIV_CODE
																				  AND X.TYPE        = D1.TYPE
																				  AND X.CUSTOM_CODE = D1.CUSTOM_CODE
																				  AND X.ITEM_CODE   = D1.ITEM_CODE
																				  AND X.ORDER_UNIT  = D1.ORDER_UNIT
																				  AND X.APLY_START_DATE  &lt;=  #{FR_DATE}
																				  AND X.APLY_END_DATE    &gt;=  #{FR_DATE}
																			   )
		  LEFT JOIN BCM100T			 E WITH(NOLOCK)	ON E.COMP_CODE		= A.COMP_CODE
		  										   AND E.CUSTOM_CODE	= A.PURCHA_CUSTOM_CODE
		  LEFT JOIN BCM100T			 F WITH(NOLOCK)	ON F.COMP_CODE		= A.COMP_CODE
		  										   AND F.CUSTOM_NAME	= A.PURCHA_CUSTOM_NAME
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM

	</select>



	<select id="s_spp100ukrv_ypServiceImpl.getCustomItemCode" parameterType="Map" resultType="rMap">
		/* s_spp100ukrv_ypServiceImpl.getCustomItemCode */
		SELECT A.CUSTOM_ITEM_CODE
			 , A.CUSTOM_ITEM_NAME
			 , A.CUSTOM_ITEM_SPEC
		  FROM BPR300T A WITH(NOLOCK)
		 WHERE A.COMP_CODE				= #{S_COMP_CODE}
		   AND A.TYPE					= '2'
		   AND A.DIV_CODE				= #{DIV_CODE}
		<if test="QUERY_FLAG == &quot;1&quot;">
		   AND A.ITEM_CODE				= #{ITEM_CODE}
		</if>
		<if test="QUERY_FLAG == &quot;2&quot;">
		   AND A.CUSTOM_ITEM_NAME		= #{ITEM_NAME}
		</if>
		   AND A.CUSTOM_CODE			= #{CUSTOM_CODE}
		   AND A.APLY_START_DATE	&lt;= #{ESTI_DATE}
		   AND A.APLY_END_DATE		&gt;= #{ESTI_DATE}
	</select>








<!-- ITEM_CODE, ITEM_NAME 선택 시, 판매단가 가져오는 로직 (현재 사용 안 함 - 다른 로직으로 대체,20171211)-->
	<select id="s_spp100ukrv_ypServiceImpl.getSalesP" parameterType="Map" resultType="String">
		SELECT A.ITEM_P
		  FROM BPR400T A WITH(NOLOCK)
		 WHERE A.COMP_CODE				= #{S_COMP_CODE}
		   AND A.TYPE					= '2'
		   AND A.DIV_CODE				= #{DIV_CODE}
		   AND A.CUSTOM_CODE			= '*'								--B.CUSTOM_CODE
		   AND A.ITEM_CODE				= #{ITEM_CODE}
		   AND A.ORDER_UNIT				= #{ORDER_UNIT}						--'KG'
		   AND A.MONEY_UNIT				= #{MONEY_UNIT}						--'KRW'
		   AND A.APLY_START_DATE	&lt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
		   AND A.APLY_END_DATE		&gt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
	</select>

	<select id="s_spp100ukrv_ypServiceImpl.printList" parameterType="Map" resultType="rMap">
        BEGIN
            DECLARE   @PRINT_USER          NVARCHAR(100)            --(선택) 출력자
                    , @VIEW_PRINT_INFO_YN  NVARCHAR(01)             --인쇄출력정보 여부


            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT @PRINT_USER = USER_NAME
                    FROM BSA300T WITH(NOLOCK)
                    WHERE COMP_CODE = #{S_COMP_CODE}
                    AND USER_ID = #{S_USER_ID}

            SELECT @VIEW_PRINT_INFO_YN = SUB_CODE
                FROM BSA100T WITH(NOLOCK)
                WHERE COMP_CODE = #{S_COMP_CODE}
                AND MAIN_CODE = 'B249'
                AND SUB_CODE != '$'
                AND REF_CODE1 = 'Y'

            SELECT A.COMP_CODE
                 , A.CUSTOM_ITEM_CODE
                 , A.CUSTOM_ITEM_NAME
                 , A.CUSTOM_ITEM_SPEC
                 , A.ESTI_NUM
                 , A.ESTI_SEQ
                 , A.ESTI_DEG
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE A.ITEM_CODE
                    END)                                        AS ITEM_CODE
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN A.ITEM_NAME
                              ELSE uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)
                    END)                                        AS ITEM_NAME
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE B.SPEC
                    END)                                        AS SPEC
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE B.STOCK_UNIT
                    END)                                        AS STOCK_UNIT
                 , A.ESTI_UNIT
                 , A.TRANS_RATE
                 , A.ESTI_QTY
                 , A.ESTI_PRICE
                 , A.ESTI_AMT
                 , A.ESTI_CFM_PRICE
                 , A.ESTI_CFM_AMT
                 , A.ESTI_TAX_AMT
                 , ISNULL(A.ESTI_CFM_AMT, 0) + ISNULL(A.ESTI_TAX_AMT, 0)        AS ESTI_CFM_AMT_TOT
                 , A.TAX_TYPE
                 , D.TAX_TYPE                                   AS TAX_CALC_TYPE
                 , A.PROFIT_RATE
                 , A.ORDER_Q
                 , '' AS REF_FLAG
                 , A.ESTI_EX_AMT
                 , A.ESTI_CFM_EX_AMT
                 , C.CUSTOM_CODE
                 , (CASE WHEN C.CUSTOM_CODE = '*'
                              THEN C.CUSTOM_NAME
                              ELSE uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
                     END) AS CUSTOM_NAME
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , ''                                           AS REF_NUM
                 , ''                                           AS REF_SEQ
                 , C.ESTI_PRSN
                 , (SELECT WH_CODE
                      FROM BPR200T
                     WHERE COMP_CODE = C.COMP_CODE
                       AND DIV_CODE  = C.DIV_CODE
                       AND ITEM_CODE = A.ITEM_CODE)             AS WH_CODE
                 , ISNULL(B.STOCK_CARE_YN, 'Y')                 AS STOCK_CARE_YN
                 , (SELECT ITEM_ACCOUNT
                      FROM BPR200T
                     WHERE COMP_CODE = C.COMP_CODE
                       AND DIV_CODE  = C.DIV_CODE
                       AND ITEM_CODE = A.ITEM_CODE)             AS ITEM_ACCOUNT
                /* master 정보 */
                 , C.DIV_CODE
                 , C.ESTI_DATE
                 , C.ESTI_TITLE
                 , C.CONFIRM_FLAG
                 , C.CONFIRM_DATE
                 , C.REMARK
                 , C.ESTI_AMT                                   AS TOT_ESTI_AMT
                 , C.ESTI_CFM_AMT                               AS TOT_ESTI_CFM_AMT
                 , C.PROFIT_RATE                                AS TOT_PROFIT_RATE
                 , E.DIV_CODE    AS MY_CUSTOM_CODE      --사업장코드
                 , E.DIV_NAME    AS MY_CUSTOM_NAME      --상호
                 , E.REPRE_NAME  AS MY_TOP_NAME         --대표자
                 , E.COMP_TYPE                      --업태
                 , E.COMP_CLASS                     --종목
                 , CASE ISNULL(E.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(E.COMPANY_NUM,6,5)
                 END          AS MY_COMPANY_NUM         --등록번호
                 , E.ZIP_CODE    AS MY_ZIP_CODE          --우편번호
                 , E.ADDR AS  MY_ADDR              --주소
                 , E.TELEPHON                           --전화번호
                 , E.FAX_NUM                                --팩스
                 , X.ESTI_QTY                       AS  ESTI_QTY_AMT
                 , X.ESTI_CFM_PRICE                 AS  ESTI_CFM_PRICE_AMT
                 , X.ESTI_CFM_AMT                   AS  ESTI_CFM_TOT_AMT
                 , X.ESTI_TAX_AMT                   AS  ESTI_TAX_TOT_AMT
                 , ISNULL(X.ESTI_CFM_AMT, 0) + ISNULL(X.ESTI_TAX_AMT, 0)          AS  ESTI_TOT_AMT
                 , REPLACE(unilite.fnConvertToAmt(ISNULL(X.ESTI_CFM_AMT, 0) + ISNULL(X.ESTI_TAX_AMT, 0)), ' ','') + '원정'    AS ESTI_TOT_AMT_KO
                 , (CASE WHEN ISNULL(#{FR_DATE}, '') = ''
                        THEN ''
                        ELSE REPLACE(REPLACE(REPLACE('YYYY.MM.DD', 'YYYY', SUBSTRING(#{FR_DATE}, 1, 4))
                                                                    , 'MM'  , SUBSTRING(#{FR_DATE}, 5, 2))
                                                                    , 'DD'  , SUBSTRING(#{FR_DATE}, 7, 2))
                        END)                                                AS FR_DATE
                , (CASE WHEN ISNULL(#{TO_DATE}, '') = ''
                        THEN ''
                        ELSE REPLACE(REPLACE(REPLACE('YYYY.MM.DD', 'YYYY', SUBSTRING(#{TO_DATE}, 1, 4))
                                                                    , 'MM'  , SUBSTRING(#{TO_DATE}, 5, 2))
                                                                    , 'DD'  , SUBSTRING(#{TO_DATE}, 7, 2))
                    END)                                                AS TO_DATE
                 , @PRINT_USER           AS PRINT_USER                   --출력자 이름
                 , @VIEW_PRINT_INFO_YN   AS VIEW_PRINT_INFO_YN           --인쇄출력정보 표시여부

              FROM       SES110T A WITH(NOLOCK)
              LEFT JOIN  BPR100T B WITH(NOLOCK)
                                     ON A.COMP_CODE = B.COMP_CODE
                                    AND A.ITEM_CODE = B.ITEM_CODE
              INNER JOIN SES100T C WITH(NOLOCK)
                                     ON A.COMP_CODE = C.COMP_CODE
                                    AND A.ESTI_NUM  = C.ESTI_NUM
              INNER JOIN BCM100T D WITH(NOLOCK)
                                     ON D.COMP_CODE    = C.COMP_CODE
                                    AND D.CUSTOM_CODE  = C.CUSTOM_CODE
              INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                AND E.DIV_CODE    = A.DIV_CODE
              LEFT  JOIN ( SELECT SUM(A.ESTI_QTY)           AS ESTI_QTY
                                , SUM(A.ESTI_CFM_PRICE)     AS ESTI_CFM_PRICE
                                , SUM(A.ESTI_CFM_AMT)       AS ESTI_CFM_AMT
                                , SUM(A.ESTI_TAX_AMT)       AS ESTI_TAX_AMT
                                , A.COMP_CODE
                                , A.DIV_CODE
                                , A.ESTI_NUM
                           FROM SES110T A WITH(NOLOCK)
                          WHERE A.COMP_CODE = #{S_COMP_CODE}
                            AND A.DIV_CODE = #{DIV_CODE}
                            AND A.ESTI_NUM = #{ESTI_NUM}
                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ESTI_NUM
            ) X ON X.COMP_CODE = A.COMP_CODE
               AND X.DIV_CODE = A.DIV_CODE
               AND X.ESTI_NUM = A.ESTI_NUM

             WHERE A.COMP_CODE      = #{S_COMP_CODE}
               AND C.ESTI_NUM       = #{ESTI_NUM}

             ORDER BY A.ESTI_NUM, A.ESTI_SEQ


        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
    </select>
</mapper>