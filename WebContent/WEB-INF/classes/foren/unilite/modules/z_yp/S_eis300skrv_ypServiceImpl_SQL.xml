<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_eis300skrv_ypServiceImpl">
	<select id="s_eis300skrv_ypServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_eis300skrv_ypServiceImpl.selectList */
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @QUERY_YEAR		NVARCHAR(04)
			  , @QUERY_MONTH	NVARCHAR(06)
			  , @AMOUNT_UNIT	INT
			  , @ITEM_GUBUN		NVARCHAR(02)
			  , @ITEM_REF1		NVARCHAR(04)
			  , @ITEM_REF2		NVARCHAR(04)
			  , @ITEM_REF3		NVARCHAR(04)
			  
		    SET @COMP_CODE		= #{S_COMP_CODE}
		    SET @QUERY_MONTH	= #{QUERY_MONTH}
		    SET @QUERY_YEAR		= SUBSTRING(@QUERY_MONTH, 1, 4)
		    SET @ITEM_GUBUN		= #{ITEM_GUBUN}
		  
		 --입력된 금액단위로 보여줌
		 SELECT @AMOUNT_UNIT = REF_CODE1
		   FROM BSA100T WITH(NOLOCK)
		  WHERE MAIN_CODE = 'B042'
		    AND SUB_CODE  = #{MONEY_UNIT}
		
		   SET @AMOUNT_UNIT	= ISNULL(@AMOUNT_UNIT, 1000000)
		
		<if test="@foren.Ognl@isNotEmpty(ITEM_GUBUN)"> 
		 --ITEM_GUBUN에 따른 품목 조회
		 SELECT @ITEM_REF1 = REF_CODE1
			  , @ITEM_REF2 = CASE WHEN ISNULL(REF_CODE2, '*') = '' THEN '*'
								  ELSE ISNULL(REF_CODE2, '*')
							 END
			  , @ITEM_REF3 = CASE WHEN ISNULL(REF_CODE3, '*') = '' THEN '*'
								  ELSE ISNULL(REF_CODE3, '*')
							 END
		   FROM BSA100T WITH(NOLOCK)
		  WHERE MAIN_CODE = 'Z008'
		    AND SUB_CODE  = @ITEM_GUBUN
		</if> 

		SELECT A.COMP_CODE
			 , A.CODE_NAME				AS GUBUN
			 , ISNULL(ZZ.QTY_YEAR, 0)	AS QTY_YEAR
			 , ISNULL(ZZ.AMT_YEAR, 0)	AS AMT_YEAR
			 , ISNULL(ZZ.QTY, 0)		AS QTY
			 , ISNULL(ZZ.AMT, 0)		AS AMT
			 , ISNULL(ZZ.QTY1, 0)		AS QTY1
			 , ISNULL(ZZ.AMT1, 0)		AS AMT1
			 , ISNULL(ZZ.QTY2, 0)		AS QTY2
			 , ISNULL(ZZ.AMT2, 0)		AS AMT2
			 , ISNULL(ZZ.QTY3, 0)		AS QTY3
			 , ISNULL(ZZ.AMT3, 0)		AS AMT3
			 , ISNULL(ZZ.QTY4, 0)		AS QTY4
			 , ISNULL(ZZ.AMT4, 0)		AS AMT4
			 , ISNULL(ZZ.QTY5, 0)		AS QTY5
			 , ISNULL(ZZ.AMT5, 0)		AS AMT5
			 , ISNULL(ZZ.QTY6, 0)		AS QTY6
			 , ISNULL(ZZ.AMT6, 0)		AS AMT6
			 , ISNULL(ZZ.QTY7, 0)		AS QTY7
			 , ISNULL(ZZ.AMT7, 0)		AS AMT7
			 , ISNULL(ZZ.QTY8, 0)		AS QTY8
			 , ISNULL(ZZ.AMT8, 0)		AS AMT8
			 , ISNULL(ZZ.QTY9, 0)		AS QTY9
			 , ISNULL(ZZ.AMT9, 0)		AS AMT9
			 , ISNULL(ZZ.QTY10, 0)		AS QTY10
			 , ISNULL(ZZ.AMT10, 0)		AS AMT10
			 , ISNULL(ZZ.QTY11, 0)		AS QTY11
			 , ISNULL(ZZ.AMT11, 0)		AS AMT11
			 , ISNULL(ZZ.QTY12, 0)		AS QTY12
			 , ISNULL(ZZ.AMT12, 0)		AS AMT12
		  FROM BSA100T A WITH(NOLOCK)
		  LEFT JOIN (
					SELECT
						   Z.COMP_CODE
						 , Z.ORDER_TYPE
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.QTY_YEAR), 'S_FSET_QS'), 0)				AS QTY_YEAR
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.AMT_YEAR) / @AMOUNT_UNIT, 'S_FSET_PS'), 0)	AS AMT_YEAR
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.QTY), 'S_FSET_QS'), 0)						AS QTY
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.AMT) / @AMOUNT_UNIT, 'S_FSET_PS'), 0)		AS AMT
			<foreach collection="MONTH" item="item" index="index">
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.QTY${index + 1}), 'S_FSET_QS'), 0)					AS QTY${index + 1}
						 , ISNULL(unilite.fnFormatComp(@COMP_CODE, SUM(Z.AMT${index + 1}) / @AMOUNT_UNIT, 'S_FSET_PS'), 0)		AS AMT${index + 1}
			</foreach>
					 FROM (	
							SELECT --MASTER정보
									A.COMP_CODE
								  , B.ORDER_TYPE
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) BETWEEN @QUERY_YEAR + '01' AND @QUERY_YEAR + '12' THEN A.SALE_Q
										 ELSE 0
									END										AS QTY_YEAR
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) BETWEEN @QUERY_YEAR + '01' AND @QUERY_YEAR + '12' THEN ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)
										 ELSE 0
									END										AS AMT_YEAR
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) BETWEEN @QUERY_YEAR + '01' AND @QUERY_MONTH THEN A.SALE_Q
										 ELSE 0
									END										AS QTY
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) BETWEEN @QUERY_YEAR + '01' AND @QUERY_MONTH THEN ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)
										 ELSE 0
									END										AS AMT
			<foreach collection="MONTH" item="item" index="index">
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) = @QUERY_YEAR + #{item} THEN A.SALE_Q
										 ELSE 0
									END										AS QTY${index + 1}
								  , CASE WHEN SUBSTRING(B.SALE_DATE, 1, 6) = @QUERY_YEAR + #{item} THEN ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)
										 ELSE 0
									END										AS AMT${index + 1}
			</foreach>
							  FROM		 SSA110T AS A WITH(NOLOCK)
							  INNER JOIN SSA100T AS B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
																  AND B.DIV_CODE	= A.DIV_CODE  
																  AND B.BILL_NUM	= A.BILL_NUM
							  INNER JOIN BPR100T AS C WITH(NOLOCK) ON C.COMP_CODE	= A.COMP_CODE
																  AND C.ITEM_CODE	= A.ITEM_CODE
							   LEFT JOIN BTR100T D  WITH (NOLOCK) ON D.COMP_CODE	= A.COMP_CODE
																 AND D.DIV_CODE		= A.DIV_CODE
																 AND D.INOUT_NUM	= A.INOUT_NUM
																 AND D.INOUT_SEQ	= A.INOUT_SEQ
																 AND D.INOUT_TYPE	= A.INOUT_TYPE
						)Z
						GROUP BY Z.COMP_CODE, Z.ORDER_TYPE
			)ZZ 																	ON ZZ.COMP_CODE = A.COMP_CODE
																				   AND ZZ.ORDER_TYPE = A.SUB_CODE
			 WHERE A.COMP_CODE	= @COMP_CODE
			   AND A.MAIN_CODE	= 'S002'
			   AND A.REF_CODE10	= 'Y'
			<if test="@foren.Ognl@isNotEmpty(ITEM_GUBUN)"> 
			   AND C.ITEM_LEVEL1= @ITEM_REF1
			   AND C.ITEM_LEVEL2= @ITEM_REF2
			   AND C.ITEM_LEVEL3= @ITEM_REF3
			   --AND D.INOUT_TYPE_DETAIL = '15'
			   --AND D.INOUT_TYPE		= '1'
			   --AND D.CREATE_LOC		= '2'
			</if> 
	</select>
</mapper>