<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hat200ukr_ypServiceImpl">
	<!--
			Sorry, I can`t migrate	Hum100ukrModel
			See console output for further details 
		-->
	<!--
			Sorry, I can`t migrate	Hum710ukrModel
			See console output for further details 
		-->	
	<!--
			Sorry, I can`t migrate	Hum790ukrModel
			See console output for further details 
		-->
	<!--
			Sorry, I can`t migrate	Hum800ukrModel
			See console output for further details 
		-->
	
	<select id="s_hat200ukr_ypServiceImpl.vrecord2" parameterType="rMap" resultType="rMap">
		SELECT F.SUB_CODE, F.REF_CODE1
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F 
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031' 
		AND F.SUB_CODE != '$' 
		AND F.SUB_CODE LIKE '#{PAY_PROV_FLAG}%'
		</if>
		<if test="@foren.Ognl@isEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F 
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031' 
		AND F.SUB_CODE != '$' 
		AND F.SUB_CODE LIKE '%'
		</if>
	</select>
	
		
	<select id="s_hat200ukr_ypServiceImpl.selectList" parameterType="rMap" resultType="rMap">		
		/* s_hat200ukr_ypServiceImpl.selectList */
		DECLARE @diff varchar(8)
		DECLARE @sDate varchar(8)
		DECLARE @eDate varchar(8)
		DECLARE @yyyymm varchar(6)
		
		SET @yyyymm = #{DUTY_YYYYMM}    
	    SET @sDate = #{sDate}
	    SET @eDate = #{eDate}	
		SET @diff = #{diff}
		
		SELECT T.* FROM( 		
			SELECT 'U' FLAG
		     , MAX(DEPT_CODE) DEPT_CODE           
		     , MAX(POST_CODE) POST_CODE           
		     , MAX(DIV_CODE) DIV_CODE             
		     , MAX(B.DUTY_YYYYMM) DUTY_YYYYMM     
		     , MAX(A.DEPT_NAME) DEPT_NAME         
		     , MAX(A.NAME) NAME                   
		     , MAX(A.PERSON_NUMB) PERSON_NUMB     
		     , MAX(A.SEX_CODE) SEX_CODE           
		     , uniLITE.fnGetUserDateComp(A.COMP_CODE, MAX(A.JOIN_DATE)) JOIN_DATE  
		     , MAX(A.RETR_DATE) RETR_DATE         
		     , MAX(A.YEAR_GIVE) YEAR_GIVE         
		     , MAX(A.MONTH_GIVE) MONTH_GIVE       
		     , MAX(A.PAY_CODE) PAY_CODE           
		     , MAX(0) PAY_DD                      
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) TOTDAY      
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.SUN_DAY ELSE 0 END))DAYCNT       
		     , MAX(ISNULL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM                           
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) AS DAYDIFF  
		     , MAX((0)) AS DATACHAK                                                       
		     , MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG
			<foreach collection="DUTY_CODE" item="item" index="index">	     
	             , ISNULL(MAX(
	        		CASE 
	        			WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN 'U'
					END ),'N')  AS FLAG${item.SUB_CODE}
				, ISNULL(MAX(
					CASE 
						WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN DUTY_NUM 
					END),0) AS DUTY_NUM${item.SUB_CODE}
				, ISNULL(MAX(
					CASE 
						WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN DUTY_TIME 
					END),0) AS DUTY_TIME${item.SUB_CODE}
			</foreach>
			, @sDate DUTY_FROM 
		    , @eDate DUTY_TO
		    
		    , #{DEPT_CODE2} DEPT_CODE2
		    , MAX(D.REMARK) REMARK 
			FROM HUM100T A 
			   INNER JOIN HAT200T B ON B.COMP_CODE   = A.COMP_CODE
			                       AND B.PERSON_NUMB = A.PERSON_NUMB
			   LEFT  JOIN HAT300T D ON D.COMP_CODE   = A.COMP_CODE
			                       AND D.PERSON_NUMB = A.PERSON_NUMB
			                       AND D.COMP_CODE   = B.COMP_CODE
			                       AND D.DUTY_YYYYMM = B.DUTY_YYYYMM
			   LEFT  JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
			                       AND E.PERSON_NUMB = A.PERSON_NUMB
			                       AND ((SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6)  &lt;= #{DUTY_YYYYMM} )
			                       AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6)   &gt;= #{DUTY_YYYYMM}))
			WHERE A.COMP_CODE = #{S_COMP_CODE}           
	    <if test="@foren.Ognl@isNotEmpty(DUTY_YYYYMM)">
	    	AND  B.DUTY_YYYYMM = #{DUTY_YYYYMM}
	    </if>
	    
	    <if test="@foren.Ognl@isNotEmpty(DEPTS2)">                   
            AND A.DEPT_CODE IN
            <foreach collection="DEPTS2" item="item2" separator="," close=")" open="(">
             #{item2}
            </foreach>                                  
        </if>
	    
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
	   	    AND A.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>									
	 	</if>
	    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
	       	AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}  
	     </if>    
	     <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
	       	AND A.PAY_GUBUN = #{PAY_GUBUN}  
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	       	AND A.PERSON_NUMB = #{PERSON_NUMB}  
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    	AND  A.DIV_CODE = #{DIV_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	    	AND  A.PAY_CODE = #{PAY_CODE}
	    </if>       
	        AND (A.RETR_DATE  = '00000000' OR SUBSTRING(A.RETR_DATE,1,6) >= LEFT(@sDate,6)
	        )  
	            	
	     	GROUP BY  A.COMP_CODE, A.PERSON_NUMB, B.DUTY_YYYYMM
	     	
	     	<foreach collection="VRECORD2" item="vrecord2" index="index">
	     	
		UNION ALL 
		SELECT 'N' FLAG
		     , MAX(DEPT_CODE) DEPT_CODE   
		     , MAX(POST_CODE) POST_CODE   
		     , DIV_CODE
		     , @yyyymm AS  DUTY_YYYYMM
		     , MAX(A.DEPT_NAME) DEPT_NAME
		     , MAX(A.NAME) NAME
		     , MAX(A.PERSON_NUMB) PERSON_NUMB
		     , MAX(A.SEX_CODE) SEX_CODE
		    
		     , uniLITE.fnGetUserDate(A.COMP_CODE, MAX(A.JOIN_DATE))JOIN_DATE
		     , MAX(A.RETR_DATE) RETR_DATE
		     , MAX(A.YEAR_GIVE) YEAR_GIVE
		     , MAX(A.MONTH_GIVE) MONTH_GIVE
		     , MAX(A.PAY_CODE) PAY_CODE
		     , MAX(0) PAY_DD
		     , MAX(0) AS TOTDAY
		     , MAX(0) AS DAYCNT
		     , MAX(ISNULL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM 
		     , MAX(@diff) AS DAYDIFF
		     , MAX((0)) AS DATACHAK
		     , MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG	
	        <foreach collection="DUTY_CODE" item="item" index="index">
	        	, 'N' AS  FLAG#{item.SUB_CODE}
	                    , (SELECT COUNT(*) 
	                          FROM HAT800T 
	                         WHERE COMP_CODE       = #{S_COMP_CODE}
	                           AND PERSON_NUMB     = A.PERSON_NUMB 
	                           AND DUTY_CODE       =   '${item.SUB_CODE}'
	                           AND DUTY_YYYYMMDD  &gt;=   @sDate
	                           AND DUTY_YYYYMMDD  &lt;=   @eDate) NUM${item.SUB_CODE}
	                    , 0  AS TIME${item.SUB_CODE}
	        </foreach>
	         , @sDate  AS DUTY_FROM
			 , @eDate   AS DUTY_TO
			 
		     , #{DEPT_CODE2} DEPT_CODE2
			 , MAX('') REMARK 
			FROM HUM100T A
			   LEFT JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
			                      AND E.PERSON_NUMB = A.PERSON_NUMB
			                      AND ((SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6) &lt;= #{DUTY_YYYYMM})
			                      AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6) &gt;= #{DUTY_YYYYMM}))  
			WHERE A.COMP_CODE    = #{S_COMP_CODE}
			AND (A.RETR_DATE  = '00000000' OR A.RETR_DATE &gt;= @sDate)
			AND (A.JOIN_DATE &lt;= @eDate)
			AND (A.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}')
			
			AND A.PERSON_NUMB NOT IN ( SELECT DISTINCT(B.PERSON_NUMB) AS  PERSON_NUMB 
			                            FROM HUM100T C, HAT200T B 
			                           WHERE C.COMP_CODE   = B.COMP_CODE
			                             AND C.PERSON_NUMB = B.PERSON_NUMB
			                             AND C.COMP_CODE   = #{S_COMP_CODE}
			                             AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
			                             AND B.PERSON_NUMB = C.PERSON_NUMB 
			                             AND C.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}')
			<if test="@foren.Ognl@isNotEmpty(DEPTS2)">                   
                AND A.DEPT_CODE IN
                <foreach collection="DEPTS2" item="item2" separator="," close=")" open="(">
                 #{item2}
                </foreach>                                  
            </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
		   	   AND A.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
		 	</if>
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND  A.DIV_CODE = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
			   	AND A.PAY_GUBUN = #{PAY_GUBUN}  
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			  	AND A.PERSON_NUMB = #{PERSON_NUMB}  
			</if>	     
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			   	AND  A.PAY_CODE = #{PAY_CODE}
			</if>		    			
			GROUP BY A.COMP_CODE, A.DEPT_NAME, A.PERSON_NUMB , A.JOIN_DATE, A.RETR_DATE ,A.DIV_CODE              
	     </foreach>
		 ) T
		 ORDER BY T.DIV_CODE, T.DEPT_CODE, T.POST_CODE, T.JOIN_DATE, T.NAME, T.PERSON_NUMB
	</select>
	
	<select id="s_hat200ukr_ypServiceImpl.selectList2" parameterType="rMap" resultType="rMap">	
		SELECT TOT_DAY
		     , MONTH_GIVE
		     , DED_TIME
		     , WORK_TIME
		     , WEEK_DAY
		     , MENS_GIVE
		     , DED_DAY
		     , WORK_DAY
		     , SUN_DAY
		     , WEEK_GIVE
		     , FULL_GIVE
		     , MONTH_GIVE
		     , MENS_GIVE
		     , SAT_DAY
		     , EXTEND_WORK_TIME
		     , NON_WEEK_DAY
		     , HOLIDAY
		  FROM HAT300T
		WHERE COMP_CODE = #{S_COMP_CODE}		 
			AND DUTY_YYYYMM = #{DUTY_YYYYMM}		
			AND PERSON_NUMB = #{PERSON_NUMB}
		 
	</select>
	
	
	
<!-- UHat01Krv.Chbs100Kr SetHbs100[fnHbs100nq] -->
<select id="s_hat200ukr_ypServiceImpl.fnHbs100nq" parameterType="rMap" resultType="rMap">
SELECT PAY_CODE                        
        , DUTY_CODE                       
        , DUTY_TYPE                       
        , COTR_TYPE                       
        , DUTY_STRT_MM                    
        , DUTY_STRT_DD                    
        , DUTY_LAST_MM                    
        , DUTY_LAST_DD                    
        , MARGIR_TYPE                     
        , MONTH_REL_CODE                  
        , YEAR_REL_CODE                   
        , MENS_REL_CODE                   
        , WEEK_REL_CODE                   
        , FULL_REL_CODE                   
  FROM HBS100T                         
  WHERE COMP_CODE = #{S_COMP_CODE}
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	AND PAY_CODE  = #{PAY_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">
      AND DUTY_CODE = #{SUB_CODE}
    </if>
</select>

	
<!--	UHBS01KRV.CHCLOSEYN[fncloseYN] strsql -->
<!-- 마감여부 체크 -->
<select id="s_hat200ukr_ypServiceImpl.fnCheckCloseMonth" parameterType="Map" resultType="rMap">
	SELECT substring(CLOSE_DATE,1,6) AS CLOSE_DATE
	FROM HBS900T
	WHERE COMP_CODE = #{S_COMP_CODE}
	AND CLOSE_TYPE = 'D'
</select>

<!--Delete -->
<update id="s_hat200ukr_ypServiceImpl.delete" parameterType="rMap">
	
SET XACT_ABORT ON
	BEGIN TRY
		BEGIN TRAN

	<foreach collection="paramList" item="item" index="index">
		DELETE FROM HAT200T 
	 	WHERE DUTY_YYYYMM = #{DUTY_YYYYMM}
	   	AND PERSON_NUMB = #{PERSON_NUMB}
	   	AND DUTY_CODE   = '${item}'
	   	AND COMP_CODE   = #{COMP_CODE}
	</foreach>	
	
	<!--UHat01Krv.Chat200Kr-fnDelSum.dSql(0) -->
    UPDATE HAT700T SET YEAR_USE = H_YEAR_USE
                     , YEAR_SAVE  = H_YEAR_NUM
                     , MONTH_NUM = H_HMONTH_NUM
                     , MONTH_USE = H_MONTH_USE
                     , MONTH_PROV = H_MONTH_PROV
                     , UPDATE_DB_USER = #{USER_ID}
                     , UPDATE_DB_TIME = GETDATE()
      FROM (SELECT A.DUTY_YYYY AS H_DUTY_YYYY
                 , A.YEAR_USE -  B.YEAR_USE AS H_YEAR_USE
                 , A.YEAR_SAVE -  B.YEAR_GIVE AS H_YEAR_NUM
                 , A.MONTH_NUM -  B.MONTH_NUM AS H_HMONTH_NUM
                 , A.MONTH_USE -  B.MONTH_USE AS H_MONTH_USE
                 , A.MONTH_PROV -  B.MONTH_GIVE AS H_MONTH_PROV
                 , A.PERSON_NUMB AS H_PERSON_NUMB
              FROM HAT700T A INNER JOIN HAT300T B
                                ON A.COMP_CODE   = B.COMP_CODE
                               AND A.PERSON_NUMB = B.PERSON_NUMB
                             INNER JOIN HUM100T V
                                ON A.COMP_CODE   = B.COMP_CODE
                               AND A.PERSON_NUMB = V.PERSON_NUMB
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.DUTY_YYYYMM &gt;= LEFT(A.DUTY_YYYYMMDDFR_USE,6) 
               AND B.DUTY_YYYYMM &lt;= LEFT(A.DUTY_YYYYMMDDTO_USE,6) 
               AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
               AND B.PERSON_NUMB = #{PERSON_NUMB}
               AND V.PAY_PROV_FLAG =  #{PAY_PROV_FLAG}
               AND V.DIV_CODE = #{DIV_CODE}) AA
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND DUTY_YYYY   = AA.H_DUTY_YYYY 
       AND PERSON_NUMB = AA.H_PERSON_NUMB
       
       
       
       
       <!--UHat01Krv.Chat200Kr-fnDelSum.dSql(1) -->
    DELETE HAT300T 
      FROM HAT300T T INNER JOIN HUM100T V
                        ON T.COMP_CODE   = V.COMP_CODE
                       AND T.PERSON_NUMB = V.PERSON_NUMB
     WHERE T.COMP_CODE     = #{S_COMP_CODE}
       AND T.DUTY_YYYYMM   = #{DUTY_YYYYMM}
       AND V.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
       AND V.DIV_CODE      = #{DIV_CODE}
       AND T.PERSON_NUMB   = #{PERSON_NUMB}
	
	COMMIT TRANSACTION
		
	END TRY
	
	BEGIN CATCH
		IF (XACT_STATE()) = -1
		BEGIN	
			ROLLBACK TRANSACTION
		END
	END CATCH
	
	SET XACT_ABORT OFF
		
	
	
</update>

<!--UHat01Krv.Chat200UKr[fnHat200Set] -->
<select id="s_hat200ukr_ypServiceImpl.fnHat200Set" parameterType="rMap" resultType="rMap">
	SELECT F.SUB_CODE
	, CONVERT(VARCHAR(8), CASE F.REF_CODE1 WHEN '00' THEN CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')
										ELSE DATEADD(DAY, 1, DATEADD(MONTH, -1, CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE1)))
										END, 112) STRT_DT
	, CONVERT(VARCHAR(8), CASE F.REF_CODE1 WHEN '00' THEN DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')))
										ELSE CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE1)
										END, 112) END_DT
	, F.REF_CODE1
	, CONVERT(VARCHAR(8), CASE F.REF_CODE2 WHEN '00' THEN CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')
										ELSE DATEADD(DAY, 1, DATEADD(MONTH, -1, CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE2)))
										END, 112) PAY_STRT_DT
	, CONVERT(VARCHAR(8), CASE F.REF_CODE2 WHEN '00' THEN DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')))
										ELSE CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE2)
										END, 112) PAY_END_DT
	, F.REF_CODE2
FROM BSA100T F
WHERE F.COMP_CODE = #{S_COMP_CODE}
	AND F.MAIN_CODE = 'H031'
	AND F.SUB_CODE != '$'
	AND F.SUB_CODE  = #{PAY_PROV_FLAG}
</select>

<!--Update -->
<update id="s_hat200ukr_ypServiceImpl.update" parameterType="rMap">
	SET XACT_ABORT ON
	BEGIN TRY
		BEGIN TRAN				
		
		
			<if test='FLAG.equals("U")'>			
			<foreach collection="paramList" item="item" index="index">				
				UPDATE HAT200T
				   SET DUTY_NUM       = '${item.DUTY_NUM}'
				     , DUTY_TIME      = '${item.DUTY_TIME}'
				     , UPDATE_DB_USER = #{USER_ID}
				     , UPDATE_DB_TIME = GETDATE()
				     
				 WHERE DUTY_YYYYMM    = #{DUTY_YYYYMM}
				   AND PERSON_NUMB    = #{PERSON_NUMB}
				   AND DUTY_CODE      = '${item.DUTY_CODE}'
				   AND COMP_CODE      = #{COMP_CODE}
			</foreach>
			</if>
			<if test='FLAG.equals("N")'>
			<foreach collection="paramList" item="item" index="index">
				INSERT INTO HAT200T
			     ( DUTY_YYYYMM
			     , PERSON_NUMB
			     , DUTY_CODE
			     , DUTY_NUM
			     , DUTY_TIME
			     , UPDATE_DB_USER
			     , UPDATE_DB_TIME
			     , COMP_CODE
			     ) 
				VALUES
			     ( #{DUTY_YYYYMM}
			     , #{PERSON_NUMB}
			     , '${item.DUTY_CODE}'
			     , '${item.DUTY_NUM}'
			     , '${item.DUTY_TIME}'
			     , #{USER_ID}
			     , GETDATE()
			     , #{COMP_CODE}
			     )			
			</foreach>
			</if>			
			
			DECLARE @ERR_DESC2 NVARCHAR(2000)
			EXEC SP_HAT_doTotalWork_innerFunctions  #{PAY_PROV_FLAG}, #{DUTY_YYYYMM}, #{DUTY_FROM}, #{DUTY_TO}, #{DIV_CODE}, '', '', #{PERSON_NUMB}, #{USER_ID}, '', #{COMP_CODE},#{PAY_STRT_DT}, #{PAY_END_DT}, '', @ERR_DESC2 OUTPUT
	
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
			UPDATE HAT300T SET REMARK = #{REMARK}
			WHERE COMP_CODE   = #{COMP_CODE}
			   AND DUTY_YYYYMM = #{DUTY_YYYYMM}
			   AND PERSON_NUMB = #{PERSON_NUMB}
			</if>
			
	COMMIT TRANSACTION
		
	END TRY
	
	BEGIN CATCH
		IF (XACT_STATE()) = -1
		BEGIN	
			ROLLBACK TRANSACTION
		END
	END CATCH
	
	SET XACT_ABORT OFF
	
</update>

<select id="s_hat200ukr_ypServiceImpl.wirteCheck" parameterType="rMap" resultType="rMap">
	--UHat01Krv.Chbs100Kr SetHbs100[fnHbs100nq]              
	SELECT PAY_CODE                        
	     , DUTY_CODE                       
	     , DUTY_TYPE                       
	     , COTR_TYPE                       
	     , DUTY_STRT_MM                    
	     , DUTY_STRT_DD                    
	     , DUTY_LAST_MM                    
	     , DUTY_LAST_DD                    
	     , MARGIR_TYPE                     
	     , MONTH_REL_CODE                  
	     , YEAR_REL_CODE                   
	     , MENS_REL_CODE                   
	     , WEEK_REL_CODE                   
	     , FULL_REL_CODE                   
	  FROM HBS100T                         
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND PAY_CODE  = #{PAY_CODE}
	   AND DUTY_CODE = #{DUTY_CODE}
</select>

	
	<insert id="s_hat200ukr_ypServiceImpl.insertExcelHat200t_xls" parameterType="Map">       /* 엑셀insert */
        INSERT INTO HAT200T_XLS
             ( _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE   
             , PERSON_NUMB       
             , NAME       
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME14)">
             , DUTY_TIME14   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME04)">
             , DUTY_TIME04  
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME51)"> 
             , DUTY_TIME51   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME52)">
             , DUTY_TIME52   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME17)">
             , DUTY_TIME17   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME18)">
             , DUTY_TIME18   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME19)">
             , DUTY_TIME19    
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME80)">
             , DUTY_TIME80    
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM10)">   
             , DUTY_NUM10   
            </if>  
        
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM07)">  
             , DUTY_NUM07
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM23)">
             , DUTY_NUM23
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM70)">
             , DUTY_NUM70
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM71)">
             , DUTY_NUM71
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM53)">
             , DUTY_NUM53
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM57)">
             , DUTY_NUM57
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM58)">
             , DUTY_NUM58
            </if>
               
             , INSERT_DB_USER
             , INSERT_DB_TIME   
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
             , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
             , #{_EXCEL_ERROR,jdbcType=VARCHAR}
             
             , #{S_COMP_CODE}
             , #{PERSON_NUMB}
             , #{NAME}
             <if test="@foren.Ognl@isNotEmpty(DUTY_TIME14)">
             , ${DUTY_TIME14}   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME04)">
             , ${DUTY_TIME04} 
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME51)"> 
             , ${DUTY_TIME51}   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME52)">
             , ${DUTY_TIME52}   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME17)">
             , ${DUTY_TIME17}   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME18)">
             , ${DUTY_TIME18}   
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME19)">
             , ${DUTY_TIME19}    
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME80)">
             , ${DUTY_TIME80}    
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM10)">   
             , ${DUTY_NUM10}   
            </if>  
    
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM07)">  
             , ${DUTY_NUM07}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM23)">
             , ${DUTY_NUM23}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM70)">
             , ${DUTY_NUM70}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM71)">
             , ${DUTY_NUM71}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM53)">
             , ${DUTY_NUM53}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM57)">
             , ${DUTY_NUM57}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM58)">
             , ${DUTY_NUM58}
            </if>
             
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </insert>

    <select id="s_hat200ukr_ypServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">    /* 엑셀업로드 버튼 / 조회 */
         BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}  
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId
        
            SET @RefItem = ISNULL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */    
                SELECT 
                _EXCEL_JOBID
                     , _EXCEL_ROWNUM
                     , _EXCEL_HAS_ERROR
                     , _EXCEL_ERROR_MSG
                    ,COMP_CODE
                    ,PERSON_NUMB
                    ,NAME
                    ,DUTY_TIME14
                    ,DUTY_TIME04
                    ,DUTY_TIME51
                    ,DUTY_TIME52
                    ,DUTY_TIME17
                    ,DUTY_TIME18
                    ,DUTY_TIME19
                    ,DUTY_TIME80
                    ,DUTY_NUM10
                    ,DUTY_NUM20
                    ,DUTY_NUM21
                    ,DUTY_NUM22
                    ,DUTY_NUM07
                    ,DUTY_NUM23
                    ,DUTY_NUM70
                    ,DUTY_NUM71
                    ,DUTY_NUM53
                    ,DUTY_NUM57
                    ,DUTY_NUM58
                    
                  FROM HAT200T_XLS                               
                 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
                ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
        END
    </select>

    <update id="excelValidate" >    /* 엑셀validation */
        
    UPDATE   A
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN 
                                        A.PERSON_NUMB     IS NULL THEN 'Y'     -- 발령코드
                                        
                                   ELSE A._EXCEL_HAS_ERROR                      -- 필수값 체크
                                 END),
            
            
    
                             
            A._EXCEL_ERROR_MSG = (CASE WHEN  A.PERSON_NUMB      IS NULL THEN '필수입력 값을 확인 해주세요.'
                                       ELSE  A._EXCEL_ERROR_MSG 
                                 END)
                                 
    FROM HAT200T_XLS A  

    UPDATE   A
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN 
                                        B.PERSON_NUMB   IS NULL THEN 'Y'       -- HUM100 사번 체크
                                   ELSE A._EXCEL_HAS_ERROR              -- 필수값 체크
                                 END),
                                 
            A._EXCEL_ERROR_MSG = (CASE WHEN  
                                        B.PERSON_NUMB   IS NULL  THEN '인사정보에 없는 사번이 존재합니다.'
                                   ELSE A._EXCEL_ERROR_MSG 
                                 END)
                                 
    FROM HAT200T_XLS A 
    
    LEFT JOIN HUM100T B  ON B.COMP_CODE = #{S_COMP_CODE}
                        AND B.PERSON_NUMB  = A.PERSON_NUMB
                        
    
    
    </update>
    
    
    
    <select id="s_hat200ukr_ypServiceImpl.selectExcelUploadApply" parameterType="Map" resultType="rMap"> /* 엑셀업로드 버튼 / 조회 */
        BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
    
        DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
              , @UserId      NVARCHAR(100) /* 사용자ID    */
              , @LangType    NVARCHAR(2)  /* 언어구분    */
              , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
    
        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}  
    
        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId
    
        SET @RefItem = ISNULL(@RefItem, N'0')
    
        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'
    
        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
    
        /* 데이터 조회 */    
            SELECT _EXCEL_JOBID
                 ,_EXCEL_ROWNUM
                 , _EXCEL_HAS_ERROR
                 , _EXCEL_ERROR_MSG
                 
                    ,COMP_CODE
                    ,PERSON_NUMB
                    ,NAME
                    ,DUTY_TIME14
                    ,DUTY_TIME04
                    ,DUTY_TIME51
                    ,DUTY_TIME52
                    ,DUTY_TIME17
                    ,DUTY_TIME18
                    ,DUTY_TIME19
                    ,DUTY_TIME80
                    ,DUTY_NUM10
                    ,DUTY_NUM20
                    ,DUTY_NUM21
                    ,DUTY_NUM22
                    ,DUTY_NUM07
                    ,DUTY_NUM23
                    ,DUTY_NUM70
                    ,DUTY_NUM71
                    ,DUTY_NUM53
                    ,DUTY_NUM57
                    ,DUTY_NUM58
              FROM HAT200T_XLS                                   
             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
            ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    END
    </select>
</mapper>