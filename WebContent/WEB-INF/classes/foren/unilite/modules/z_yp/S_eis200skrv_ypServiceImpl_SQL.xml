<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_eis200skrv_ypServiceImpl">
   
	<select id="s_eis200skrv_ypServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_eis000skrv_ypServiceImpl.selectList */
		DECLARE @COMP_CODE	NVARCHAR(08)
			  , @DIV_CODE	NVARCHAR(08)
			  , @BASIS_DATE	NVARCHAR(08)
			  
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DIV_CODE	= #{DIV_CODE}
		SET @BASIS_DATE	= #{BASIS_DATE}
		
		/* 수주 데이터 조회 */
		SELECT '영업'							AS REGION
			 , '영업수주'						AS GUBUN
			 , ISNULL(SUM(S1.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(S1.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(S1.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(S1.O1)	, 0)	AS O1
			 , ISNULL(SUM(S1.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(S1.O2)	, 0)	AS O2
			 , ISNULL(SUM(S1.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(S1.O3)	, 0)	AS O3
			 , ISNULL(SUM(S1.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(S1.O4)	, 0)	AS O4
			 , ISNULL(SUM(S1.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(S1.O5)	, 0)	AS O5
			 , ISNULL(SUM(S1.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(S1.O6)	, 0)	AS O6
			 , ISNULL(SUM(S1.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(S1.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.ORDER_Q)												AS SUM_Q
					  , SUM(A.ORDER_O)												AS SUM_O
					  , CASE WHEN A.DVRY_DATE = @BASIS_DATE THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.ORDER_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN A.DVRY_DATE = @BASIS_DATE THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O1
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O2
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O3
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O4
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O5
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O6
					  , CASE WHEN A.DVRY_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.ORDER_O)
							 ELSE 0
						END															AS O7
				  FROM		SOF110T A WITH(NOLOCK)
				 INNER JOIN SOF100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												   AND B.DIV_CODE	= A.DIV_CODE
												   AND B.ORDER_NUM	= A.ORDER_NUM
				 WHERE A.COMP_CODE		= @COMP_CODE
				   AND A.DIV_CODE		= @DIV_CODE
			--	   AND B.ORDER_STATUS	= 'Y'						--마감 된 데이터
			--	   AND B.ORDER_STATUS	= 'N'						--미마감 된 데이터
			--	   AND B.STATUS			= '6'						--승인 된 데이터
			--	   AND B.STATUS			= '5'						--반려 된 데이터
			--	   AND B.STATUS	IN ('1', '2', '3', '4')				--미승인 된 데이터
				   AND A.DVRY_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY A.DVRY_DATE
		) AS S1
		
		/* 출하지시 데이터 조회 */
		UNION ALL
		SELECT '영업'							AS REGION
			 , '출하지시'						AS GUBUN
			 , ISNULL(SUM(S2.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(S2.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(S2.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(S2.O1)	, 0)	AS O1
			 , ISNULL(SUM(S2.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(S2.O2)	, 0)	AS O2
			 , ISNULL(SUM(S2.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(S2.O3)	, 0)	AS O3
			 , ISNULL(SUM(S2.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(S2.O4)	, 0)	AS O4
			 , ISNULL(SUM(S2.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(S2.O5)	, 0)	AS O5
			 , ISNULL(SUM(S2.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(S2.O6)	, 0)	AS O6
			 , ISNULL(SUM(S2.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(S2.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.ISSUE_REQ_QTY)										AS SUM_Q
					  , SUM(A.ISSUE_REQ_AMT)										AS SUM_O
					  , CASE WHEN A.ISSUE_REQ_DATE = @BASIS_DATE THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_QTY)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN A.ISSUE_REQ_DATE = @BASIS_DATE THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O1
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O2
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O3
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O4
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O5
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O6
					  , CASE WHEN A.ISSUE_REQ_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.ISSUE_REQ_AMT)
							 ELSE 0
						END															AS O7
				  FROM		SRQ100T A WITH(NOLOCK)
				 WHERE A.COMP_CODE		= @COMP_CODE
				   AND A.DIV_CODE		= @DIV_CODE
			--	   AND A.ISSUE_REQ_QTY	= A.ISSUE_QTY				--출고 완료된 건만 조회
			--	   AND A.ISSUE_REQ_QTY != A.ISSUE_QTY				--출고 미완료된 건만 조회
				   AND A.ISSUE_REQ_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY A.ISSUE_REQ_DATE
		) AS S2
		
		/* 영업 매출(출고) 데이터 조회 */
		UNION ALL
		SELECT '영업'							AS REGION
			 , '영업 매출(출고)'					AS GUBUN
			 , ISNULL(SUM(S3.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(S3.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(S3.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(S3.O1)	, 0)	AS O1
			 , ISNULL(SUM(S3.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(S3.O2)	, 0)	AS O2
			 , ISNULL(SUM(S3.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(S3.O3)	, 0)	AS O3
			 , ISNULL(SUM(S3.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(S3.O4)	, 0)	AS O4
			 , ISNULL(SUM(S3.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(S3.O5)	, 0)	AS O5
			 , ISNULL(SUM(S3.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(S3.O6)	, 0)	AS O6
			 , ISNULL(SUM(S3.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(S3.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.SALE_Q)												AS SUM_Q
					  , SUM(A.SALE_AMT_O)											AS SUM_O
					  , CASE WHEN B.SALE_DATE = @BASIS_DATE THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.SALE_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN B.SALE_DATE = @BASIS_DATE THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O1
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O2
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O3
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O4
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O5
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O6
					  , CASE WHEN B.SALE_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.SALE_AMT_O)
							 ELSE 0
						END															AS O7
				  FROM		SSA110T A WITH(NOLOCK)
				 INNER JOIN SSA100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												  AND B.DIV_CODE	= A.DIV_CODE
												  AND B.BILL_NUM	= A.BILL_NUM
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
				   AND B.SALE_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY B.SALE_DATE
		) AS S3
		
		/* 구매 발주 */
		UNION ALL
		SELECT '구매'							AS REGION
			 , '구매 발주'						AS GUBUN
			 , ISNULL(SUM(M1.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(M1.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(M1.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(M1.O1)	, 0)	AS O1
			 , ISNULL(SUM(M1.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(M1.O2)	, 0)	AS O2
			 , ISNULL(SUM(M1.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(M1.O3)	, 0)	AS O3
			 , ISNULL(SUM(M1.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(M1.O4)	, 0)	AS O4
			 , ISNULL(SUM(M1.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(M1.O5)	, 0)	AS O5
			 , ISNULL(SUM(M1.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(M1.O6)	, 0)	AS O6
			 , ISNULL(SUM(M1.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(M1.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(B.ORDER_UNIT_Q)											AS SUM_Q
					  , SUM(B.ORDER_O)												AS SUM_O
					  , CASE WHEN A.ORDER_DATE = @BASIS_DATE THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(B.ORDER_UNIT_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN A.ORDER_DATE = @BASIS_DATE THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O1
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O2
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O3
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O4
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O5
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O6
					  , CASE WHEN A.ORDER_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(B.ORDER_O)
							 ELSE 0
						END															AS O7
				  FROM		MPO100T A WITH(NOLOCK)
				 INNER JOIN MPO200T B WITH (NOLOCK) ON  B.COMP_CODE    =  A.COMP_CODE
												   AND  B.DIV_CODE     =  A.DIV_CODE
												   AND  B.CUSTOM_CODE  =  A.CUSTOM_CODE
												   AND  B.ORDER_NUM    =  A.ORDER_NUM
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
				   AND ISNULL(A.ORDER_TYPE,'')!=  N'4'				--외주가 아닌것
				   AND B.CONTROL_STATUS !=  N'8'					--수입참조중이 아닌것
				   --AND B.CONTROL_STATUS !=  N'9'					--마감이 아닌것
				   AND A.ORDER_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY A.ORDER_DATE
		) AS M1
		
		/* 구매 입고 */
		UNION ALL
		SELECT '구매'							AS REGION
			 , '구매 입고'						AS GUBUN
			 , ISNULL(SUM(M2.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(M2.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(M2.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(M2.O1)	, 0)	AS O1
			 , ISNULL(SUM(M2.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(M2.O2)	, 0)	AS O2
			 , ISNULL(SUM(M2.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(M2.O3)	, 0)	AS O3
			 , ISNULL(SUM(M2.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(M2.O4)	, 0)	AS O4
			 , ISNULL(SUM(M2.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(M2.O5)	, 0)	AS O5
			 , ISNULL(SUM(M2.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(M2.O6)	, 0)	AS O6
			 , ISNULL(SUM(M2.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(M2.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.INOUT_Q)												AS SUM_Q
					  , SUM(A.INOUT_I)												AS SUM_O
					  , CASE WHEN A.INOUT_DATE = @BASIS_DATE THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.INOUT_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN A.INOUT_DATE = @BASIS_DATE THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O1
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O2
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O3
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O4
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O5
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O6
					  , CASE WHEN A.INOUT_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.INOUT_I)
							 ELSE 0
						END															AS O7
				  FROM		BTR100T A WITH(NOLOCK)
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
				   AND A.INOUT_TYPE	= '1'							--입고
				   AND ISNULL(A.ORDER_TYPE,'')!=  N'4'				--외주가 아닌 것
				   AND A.CREATE_LOC	= N'2'							--생성경로가 '자재'인 것
				   AND A.INOUT_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY A.INOUT_DATE
		) AS M2

		/* 작업지시 */
		UNION ALL
		SELECT '생산'							AS REGION
			 , '작업지시'						AS GUBUN
			 , ISNULL(SUM(P1.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(P1.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(P1.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(P1.O1)	, 0)	AS O1
			 , ISNULL(SUM(P1.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(P1.O2)	, 0)	AS O2
			 , ISNULL(SUM(P1.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(P1.O3)	, 0)	AS O3
			 , ISNULL(SUM(P1.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(P1.O4)	, 0)	AS O4
			 , ISNULL(SUM(P1.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(P1.O5)	, 0)	AS O5
			 , ISNULL(SUM(P1.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(P1.O6)	, 0)	AS O6
			 , ISNULL(SUM(P1.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(P1.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.WKORD_Q)												AS SUM_Q
					  , 0															AS SUM_O
					  , CASE WHEN A.PRODT_WKORD_DATE = @BASIS_DATE THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.WKORD_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN A.PRODT_WKORD_DATE = @BASIS_DATE THEN 0
							 ELSE 0
						END															AS O1
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O2
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O3
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O4
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O5
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O6
					  , CASE WHEN A.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O7
				  FROM		PMP100T A WITH(NOLOCK)
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
				   AND A.PRODT_WKORD_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY A.PRODT_WKORD_DATE
		) AS P1

		/* 생산실적 */
		UNION ALL
		SELECT '생산'							AS REGION
			 , '생산실적'						AS GUBUN
			 , ISNULL(SUM(P2.SUM_Q)	, 0)	AS SUM_Q
			 , ISNULL(SUM(P2.SUM_O)	, 0)	AS SUM_O
			 , ISNULL(SUM(P2.Q1)	, 0)	AS Q1
			 , ISNULL(SUM(P2.O1)	, 0)	AS O1
			 , ISNULL(SUM(P2.Q2)	, 0)	AS Q2
			 , ISNULL(SUM(P2.O2)	, 0)	AS O2
			 , ISNULL(SUM(P2.Q3)	, 0)	AS Q3
			 , ISNULL(SUM(P2.O3)	, 0)	AS O3
			 , ISNULL(SUM(P2.Q4)	, 0)	AS Q4
			 , ISNULL(SUM(P2.O4)	, 0)	AS O4
			 , ISNULL(SUM(P2.Q5)	, 0)	AS Q5
			 , ISNULL(SUM(P2.O5)	, 0)	AS O5
			 , ISNULL(SUM(P2.Q6)	, 0)	AS Q6
			 , ISNULL(SUM(P2.O6)	, 0)	AS O6
			 , ISNULL(SUM(P2.Q7)	, 0)	AS Q7
			 , ISNULL(SUM(P2.O7)	, 0)	AS O7
		  FROM (	  
				SELECT 	SUM(A.ALLOCK_Q)												AS SUM_Q
					  , 0															AS SUM_O
					  , CASE WHEN B.PRODT_WKORD_DATE = @BASIS_DATE THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q1
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q2
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q3
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q4
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q5
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q6
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN SUM(A.ALLOCK_Q)
							 ELSE 0
						END															AS Q7
					  , CASE WHEN B.PRODT_WKORD_DATE = @BASIS_DATE THEN 0
							 ELSE 0
						END															AS O1
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -1, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O2
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -2, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O3
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -3, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O4
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -4, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O5
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -5, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O6
					  , CASE WHEN B.PRODT_WKORD_DATE = CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) THEN 0
							 ELSE 0
						END															AS O7
				  FROM		PMP200T A WITH(NOLOCK)
				 INNER JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												  AND B.DIV_CODE	= A.DIV_CODE
												  AND B.WKORD_NUM	= A.WKORD_NUM
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
				   AND B.PRODT_WKORD_DATE BETWEEN CONVERT(NVARCHAR(08), DATEADD(DAY, -6, @BASIS_DATE), 112) AND @BASIS_DATE
				 GROUP BY B.PRODT_WKORD_DATE
		) AS P2
	</select>
</mapper>