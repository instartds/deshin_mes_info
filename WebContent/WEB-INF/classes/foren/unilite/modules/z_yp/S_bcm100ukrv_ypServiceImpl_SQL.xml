<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bcm100ukrv_ypServiceImpl">
	
	<select id="s_bcm100ukrv_ypServiceImpl.getDataList" parameterType="Map" resultType="rMap">
	/* s_bcm100ukrv_ypServiceImpl.getDataList */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON

		DECLARE  @REF_ITEM NVARCHAR(1)
			   , @DateFormat	 NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		SELECT @REF_ITEM = ISNULL(REF_ITEM, '1')
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID   = #{S_USER_ID} 
		   AND COMP_CODE = #{S_COMP_CODE}
		   
		SET @REF_ITEM = ISNULL(@REF_ITEM, '0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B044'
		   AND REF_CODE1 = 'Y'
	
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
					 
		SELECT A.CUSTOM_CODE
			 , A.CUSTOM_TYPE
			 , A.CUSTOM_NAME
			 , A.CUSTOM_NAME1
			 , A.CUSTOM_NAME2
			 , A.CUSTOM_FULL_NAME
			 , A.NATION_CODE
			 , (SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
				SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
				SUBSTRING(A.COMPANY_NUM,6,5)) AS COMPANY_NUM
			 , unilite.fnCipherDecrypt(A.TOP_NUM, 'A') AS TOP_NUM
			 , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.TOP_NUM, 'A'), '') = '' THEN ''
					ELSE '**************'
			   END 														AS TOP_NUM_EXPOS
			 , A.TOP_NAME
			 , A.BUSINESS_TYPE
			 , A.USE_YN
			 , A.COMP_TYPE
			 , A.COMP_CLASS
			 , A.AGENT_TYPE
			 , A.AGENT_TYPE2
			 , A.AGENT_TYPE3
		
			 , A.AREA_TYPE
			 , A.DELIVERY_UNION										--출하회
			 , (SUBSTRING(A.ZIP_CODE, 1, 3) + '-' +
				SUBSTRING(A.ZIP_CODE, 4, 3)) AS ZIP_CODE
			 , A.ADDR1
			 , A.ADDR2
			 , A.TELEPHON
			 , A.FAX_NUM
			 , A.HTTP_ADDR
			 , A.MAIL_ID
			 , A.WON_CALC_BAS
			 , (CASE WHEN ISNULL(A.START_DATE, '') = '' THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.START_DATE, 1, 4))
															 , 'MM'  , SUBSTRING(A.START_DATE, 5, 2))
															 , 'DD'  , SUBSTRING(A.START_DATE, 7, 2))
				END)				AS START_DATE   
			 , (CASE WHEN ISNULL(A.STOP_DATE, '') = '' THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.STOP_DATE, 1, 4))
															 , 'MM'  , SUBSTRING(A.STOP_DATE, 5, 2))
															 , 'DD'  , SUBSTRING(A.STOP_DATE, 7, 2))
				END)				AS STOP_DATE
			 , A.TO_ADDRESS
			 , A.TAX_CALC_TYPE
			 , A.RECEIPT_DAY
			 , A.MONEY_UNIT
			 , A.TAX_TYPE
			 , A.BILL_TYPE
			 , A.SET_METH
			 , A.VAT_RATE
			 , A.TRANS_CLOSE_DAY
			 , A.COLLECT_DAY
			 , A.CREDIT_YN
			 , A.TOT_CREDIT_AMT
			 , A.CREDIT_AMT
			 , (CASE WHEN ISNULL(A.CREDIT_YMD, '') = '' THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CREDIT_YMD, 1, 4))
															 , 'MM'  , SUBSTRING(A.CREDIT_YMD, 5, 2))
															 , 'DD'  , SUBSTRING(A.CREDIT_YMD, 7, 2))
				END)				AS CREDIT_YMD
			 , ISNULL(COLLECT_CARE, '2') AS COLLECT_CARE
			 , A.BUSI_PRSN
			 , A.CAL_TYPE
			 , A.REMARK
			 , A.MANAGE_CUSTOM
			 , (CASE ISNULL(A.MANAGE_CUSTOM, '')
					 WHEN ''
						  THEN ''
						  ELSE (SELECT CUSTOM_NAME
								  FROM BCM100T WITH (NOLOCK)
								 WHERE A.COMP_CODE	 = COMP_CODE
								   AND A.MANAGE_CUSTOM = CUSTOM_CODE)
				 END) AS MCUSTOM_NAME
			 , A.COLLECTOR_CP
			 , (CASE ISNULL(A.COLLECTOR_CP, '')
					 WHEN ''
						  THEN ''
						  ELSE (SELECT CUSTOM_NAME
								  FROM BCM100T WITH (NOLOCK)
								 WHERE A.COMP_CODE	= COMP_CODE
								   AND A.COLLECTOR_CP = CUSTOM_CODE)
				 END) AS COLLECTOR_CP_NAME
			 , A.BANK_CODE
			 , (CASE ISNULL(A.BANK_CODE, '')
					 WHEN ''
						  THEN ''
						  ELSE (SELECT CUSTOM_NAME
								  FROM BCM100T WITH (NOLOCK)
								 WHERE A.COMP_CODE = COMP_CODE
								   AND A.BANK_CODE = CUSTOM_CODE
								   AND CUSTOM_TYPE = '4')
				 END) AS BANK_NAME
			 , ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B'), '') AS BANKBOOK_NUM
			 , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B'), '') = '' THEN ''
					ELSE '**************'
			   END 														AS BANKBOOK_NUM_EXPOS
			 , A.BANKBOOK_NAME
			 , '' AS CUST_CHK
			 , '' AS SSN_CHK
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
	
			 , A.PURCHASE_BANK
			 , (CASE ISNULL(A.PURCHASE_BANK, '') WHEN '' THEN ''  
														 ELSE (SELECT CUSTOM_NAME 
																 FROM BCM100T WITH (NOLOCK)
																WHERE A.COMP_CODE	 = COMP_CODE
																  AND A.PURCHASE_BANK = CUSTOM_CODE
																  AND CUSTOM_TYPE = '4') 
				 END) AS PURBANKNAME
			 , A.BILL_PRSN
			 , A.HAND_PHON
			 , A.BILL_MAIL_ID
			 , A.BILL_PRSN2
			 , A.HAND_PHON2
			 , A.BILL_MAIL_ID2
			 , A.BILL_MEM_TYPE
			 , A.ADDR_TYPE
			 , A.COMP_CODE
			 , A.CHANNEL
			 , A.BILL_CUSTOM
			 , (CASE ISNULL(A.BILL_CUSTOM, '')
					 WHEN ''
						  THEN ''
						  ELSE (SELECT CUSTOM_NAME
								  FROM BCM100T WITH (NOLOCK)
								 WHERE A.COMP_CODE   = COMP_CODE
								   AND A.BILL_CUSTOM = CUSTOM_CODE)
				 END) AS BILL_CUSTOM_NAME
			 , ISNULL(A.CREDIT_OVER_YN, 'N') AS CREDIT_OVER_YN
			 , A.DEPT_CODE
			 , B.TREE_NAME AS DEPT_NAME 
			 , A.BILL_PUBLISH_TYPE
			 -- 추가(극동)
			 , A.R_PAYMENT_YN 
			 -- 추가(양평공사)
--			 , A.PURCH_TYPE
			 , A.ITEM_NAME
			 , A.CULTI_AREA
			 , A.CULTI_ADDR
			 --인증서정보 관련 추가
			 , C.TYPE				--인증구분
			 , C.CERT_NO			--인증번호
			 , C.CERT_DATE			--인증일자
			 , C.APLY_START_DATE	--인증기간(시작)
			 , C.APLY_END_DATE		--인증기간(종료)
			 , C.CERT_ORG			--인증기관
			 , C.CERT_COUNT			--인증서수	
		  FROM           BCM100T A WITH (NOLOCK)
		       LEFT JOIN BSA210T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		  		  							    AND A.DEPT_CODE = B.TREE_CODE
               LEFT JOIN (SELECT A.COMP_CODE, A.CUSTOM_CODE, A.TYPE, A.CERT_NO, A.CERT_DATE, A.APLY_START_DATE, A.APLY_END_DATE, A.CERT_ORG, C.CERT_COUNT
                            FROM (SELECT COMP_CODE, CUSTOM_CODE, TYPE, CERT_NO, CERT_DATE, APLY_START_DATE, APLY_END_DATE, CERT_ORG
                                    FROM S_BCM100T_YP WITH (NOLOCK)) A
                                 INNER JOIN  
                                 (SELECT COMP_CODE, CUSTOM_CODE, MAX(CERT_NO) AS CERT_NO
                                    FROM S_BCM100T_YP WITH (NOLOCK)
                                   GROUP BY COMP_CODE, CUSTOM_CODE) B ON B.COMP_CODE   = A.COMP_CODE
		                                                             AND B.CUSTOM_CODE = A.CUSTOM_CODE
								                                     AND B.CERT_NO     = A.CERT_NO
                                 INNER JOIN 
                                 (SELECT COMP_CODE, CUSTOM_CODE, COUNT(CERT_NO) AS CERT_COUNT
                                    FROM S_BCM100T_YP WITH (NOLOCK)
                                   GROUP BY COMP_CODE, CUSTOM_CODE) C ON C.COMP_CODE   = A.COMP_CODE
		                                                             AND C.CUSTOM_CODE = A.CUSTOM_CODE) C ON C.COMP_CODE   = A.COMP_CODE
		                                                                                                 AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                                   
		 WHERE A.CUSTOM_CODE IS NOT NULL AND A.CUSTOM_CODE != '*'
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL1)">
				 AND A.CUSTOM_LEVEL1	= #{CUSTOM_LEVEL1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL2)">
				 AND A.CUSTOM_LEVEL2	=	= #{CUSTOM_LEVEL2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL3)">
				 AND A.CUSTOM_LEVEL3	=	= #{CUSTOM_LEVEL3}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				 AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
			</if>
		   
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				 	 AND (
				 	 		(@REF_ITEM = '0' AND A.CUSTOM_NAME  LIKE '%'+ #{CUSTOM_NAME} +'%')
				 	 		OR			 	 		
							(@REF_ITEM = '1' AND A.CUSTOM_NAME1 LIKE '%'+ #{CUSTOM_NAME} +'%')
							OR
							(@REF_ITEM = '2' AND A.CUSTOM_NAME2 LIKE '%'+ #{CUSTOM_NAME} +'%' )
						 )
			</if>
			<if test="@foren.Ognl@isNotEmpty(CHANNEL)">
				 AND A.CHANNEL   LIKE #{CHANNEL} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
		  		 AND A.CUSTOM_TYPE	  = #{CUSTOM_TYPE}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		  		 AND A.AGENT_TYPE	   = #{AGENT_TYPE}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
		  		AND A.AREA_TYPE		= #{AREA_TYPE}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(BUSI_PRSN)">
		  		AND A.BUSI_PRSN		= #{BUSI_PRSN}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(USE_YN)">
		  		AND A.USE_YN		   = #{USE_YN}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(BUSINESS_TYPE)">
		  		AND A.BUSINESS_TYPE	= #{BUSINESS_TYPE}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
		  		AND A.TOP_NAME	  LIKE #{TOP_NAME} +'%'
			</if>  
			<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		  		AND A.COMPANY_NUM   LIKE #{COMPANY_NUM} + '%'
			</if>
		  		AND A.COMP_CODE		= #{S_COMP_CODE}		
			<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		  		 AND A.COMPANY_NUM   LIKE '%' + #{COMPANY_NUM} + '%'
			</if>  
	
			 ORDER BY A.CUSTOM_CODE
			 
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>


	<select id="s_bcm100ukrv_ypServiceImpl.getAutoCustomCode" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE			NVARCHAR(10)
		 	  , @AGENT_TYPE			NVARCHAR(10)		--고객분류
			  , @sAUTO_CUSTOM_CODE	NVARCHAR(20)
			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @AGENT_TYPE	= #{AGENT_TYPE}
		   EXEC uniLITE.USP_GetAutoCustomCode_yp @COMP_CODE, @AGENT_TYPE, @sAUTO_CUSTOM_CODE OUTPUT

		 SELECT @sAUTO_CUSTOM_CODE	AS	CUSTOM_CODE
	</select>	
	
	<select id="s_bcm100ukrv_ypServiceImpl.getAutoFinanceCustomCode" parameterType="Map" resultType="rMap">		
		DECLARE @COMP_CODE NVARCHAR(10), @sAUTO_CUSTOM_CODE NVARCHAR(20)
			SET @COMP_CODE = #{S_COMP_CODE}
		   EXEC uniLITE.USP_GetFinanceCustomCode @COMP_CODE, @sAUTO_CUSTOM_CODE OUTPUT

		 SELECT @sAUTO_CUSTOM_CODE  AS  CUSTOM_CODE
	</select>
	
	<select id="s_bcm100ukrv_ypServiceImpl.insertQuery01" parameterType="Map" resultType="rMap">
		/** s_bcm100ukrv_ypServiceImpl.insertQuery01 */
		SELECT A.COMP_CODE
		FROM			  BOR100T   A  WITH (NOLOCK)
  		LEFT  JOIN BSA100T   M1 WITH (NOLOCK) 	ON M1.COMP_CODE	= #{S_COMP_CODE}
   											  	AND M1.MAIN_CODE	='B107'
												AND M1.SUB_CODE	 ='10'
		WHERE (A.COMP_CODE	&gt; ''		 AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		  OR  (A.COMP_CODE	= #{S_COMP_CODE} AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>	
	<select id="s_bcm100ukrv_ypServiceImpl.checkCh" parameterType="Map" resultType="rMap">
		/* s_bcm100ukrv_ypServiceImpl.checkCh */
			SELECT COUNT(CHANNEL)   AS CNT
			FROM   BCM100T WITH (NOLOCK)
			WHERE  COMP_CODE	= #{S_COMP_CODE}
			  AND  CUSTOM_CODE != #{CUSTOM_CODE}
			  AND  CHANNEL		= #{CHANNEL}
	</select>
	<select id="s_bcm100ukrv_ypServiceImpl.createCH" parameterType="Map" resultType="string">
		/* s_bcm100ukrv_ypServiceImpl.createCH */
		SELECT MIN(A.CHAN_CODE)					AS CHANNEL
		  FROM		BCM100T_YP	A WITH(NOLOCK)
		  LEFT JOIN BCM100T		B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
											  AND B.CHANNEL		= A.CHAN_CODE
											  AND B.CUSTOM_TYPE IN ('1', '2')
											  AND B.USE_YN		= 'Y'
		 WHERE B.COMP_CODE IS NULL
	</select>
	<select id="s_bcm100ukrv_ypServiceImpl.insertQuery06" parameterType="Map" resultType="rMap">
		/* bcm106ukrv.Cbcm106ukrv[fnBcm100Save] Query06 */
			SELECT COUNT(CUSTOM_CODE)   as CNT
		   	FROM   BCM100T WITH (NOLOCK)
		 	WHERE  COMP_CODE = #{S_COMP_CODE}
		 	  AND  CUSTOM_CODE = #{CUSTOM_CODE}
	</select>
	<select id="s_bcm100ukrv_ypServiceImpl.updateQuery04" parameterType="Map" resultType="rMap">
		/* bcm106ukrv.Cbcm106ukrv[fnBcm100Save] Query04 */
		SELECT  TOP 1 A.CUSTOM_NAME
		FROM	BCM100T   A  WITH (NOLOCK)
	   	WHERE   A.COMP_CODE	  = #{COMP_CODE}
		  AND   A.CUSTOM_CODE	= #{CUSTOM_CODE}
	</select>
	
	<select id="s_bcm100ukrv_ypServiceImpl.deleteQuery02" parameterType="Map" resultType="rMap">
		/* bcm106ukrv.Cbcm106ukrv[fnBcm100Save] Query02 */
 		SELECT ISNULL((SELECT TOP 1 1
				  FROM AGJ110T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND (MOD_DIVI IS NULL OR MOD_DIVI = '')
				   AND ((AC_CODE1='A4' AND AC_DATA1 = #{CUSTOM_CODE})
					OR  (AC_CODE2='A4' AND AC_DATA2 = #{CUSTOM_CODE})
					OR  (AC_CODE3='A4' AND AC_DATA3 = #{CUSTOM_CODE})
					OR  (AC_CODE4='A4' AND AC_DATA4 = #{CUSTOM_CODE})
					OR  (AC_CODE5='A4' AND AC_DATA5 = #{CUSTOM_CODE})
					OR  (AC_CODE6='A4' AND AC_DATA6 = #{CUSTOM_CODE}))), 0) +
		ISNULL((SELECT TOP 1 1
				  FROM AGJ210T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND (MOD_DIVI IS NULL OR MOD_DIVI = '')
				   AND ((AC_CODE1='A4' AND AC_DATA1 = #{CUSTOM_CODE})
					OR  (AC_CODE2='A4' AND AC_DATA2 = #{CUSTOM_CODE})
					OR  (AC_CODE3='A4' AND AC_DATA3 = #{CUSTOM_CODE})
					OR  (AC_CODE4='A4' AND AC_DATA4 = #{CUSTOM_CODE})
					OR  (AC_CODE5='A4' AND AC_DATA5 = #{CUSTOM_CODE})
					OR  (AC_CODE6='A4' AND AC_DATA6 = #{CUSTOM_CODE}))), 0) +
		ISNULL((SELECT TOP 1 1
				  FROM AGJ800T  WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND (BOOK_CODE1='A4' AND BOOK_DATA1 = #{CUSTOM_CODE})
					OR (BOOK_CODE2='A4' AND BOOK_DATA2 = #{CUSTOM_CODE})), 0)  AS CNT
	</select>
	
	<update id="s_bcm100ukrv_ypServiceImpl.insertMulti" parameterType="Map">
							  
					INSERT INTO BCM100T
						( COMP_CODE
						  ,CUSTOM_CODE
						  ,CUSTOM_TYPE
						  ,CUSTOM_FULL_NAME
						  ,CUSTOM_NAME
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME1)">
						  ,CUSTOM_NAME1
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME2)">
						  ,CUSTOM_NAME2
		</if>
		<if test="@foren.Ognl@isNotEmpty(NATION_CODE)">
						  ,NATION_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
						  ,COMPANY_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(SERVANT_COMPANY_NUM)">
						  ,SERVANT_COMPANY_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
						  ,TOP_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSINESS_TYPE)">
						  ,BUSINESS_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
						  ,USE_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_CLASS)">
						  ,COMP_CLASS
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_TYPE)">
						  ,COMP_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
						  ,ZIP_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR1)">
						  ,ADDR1
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR2)">
						  ,ADDR2
		</if>
		<if test="@foren.Ognl@isNotEmpty(TELEPHON)">
						  ,TELEPHON
		</if>
		<if test="@foren.Ognl@isNotEmpty(FAX_NUM)">
						  ,FAX_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(MAIL_ID)">
						  ,MAIL_ID
		</if>
		<if test="@foren.Ognl@isNotEmpty(WON_CALC_BAS)">
						  ,WON_CALC_BAS
		</if>
		<if test="@foren.Ognl@isNotEmpty(START_DATE)">
						  ,START_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
						  ,STOP_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ADDRESS)">
						  ,TO_ADDRESS
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_CALC_TYPE)">
						  ,TAX_CALC_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TRANS_CLOSE_DAY)">
						  ,TRANS_CLOSE_DAY
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
						  ,RECEIPT_DAY
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
						  ,MONEY_UNIT
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
						  ,TAX_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
						  ,BILL_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(SET_METH)">
						  ,SET_METH
		</if>
		<if test="@foren.Ognl@isNotEmpty(VAT_RATE)">
						  ,VAT_RATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM)">
						  ,MANAGE_CUSTOM
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
						  ,AGENT_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
						  ,AREA_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(DELIVERY_UNION)">
						  ,DELIVERY_UNION
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_YN)">
						  ,CREDIT_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_CREDIT_AMT)">
						  ,TOT_CREDIT_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_AMT)">
						  ,CREDIT_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_YMD)">
						  ,CREDIT_YMD
		</if>
		<if test="@foren.Ognl@isNotEmpty(RESULT_CARE_YN)">
						  ,RESULT_CARE_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(HTTP_ADDR)">
						  ,HTTP_ADDR
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
						  ,BANK_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NAME)">
						  ,BANKBOOK_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECTOR_CP)">
						  ,COLLECTOR_CP
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_CARE)">
						  ,COLLECT_CARE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSI_PRSN)">
						  ,BUSI_PRSN
		</if>
		<if test="@foren.Ognl@isNotEmpty(CAL_TYPE)">
						  ,CAL_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
						  ,REMARK
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
						  ,COLLECT_DAY
		</if>
		<if test="@foren.Ognl@isNotEmpty(HAND_PHON)">
						  ,HAND_PHON
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_BANK)">
						  ,PURCHASE_BANK
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PRSN)">
						  ,BILL_PRSN
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MAIL_ID)">
						  ,BILL_MAIL_ID
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MEM_TYPE)">
						  ,BILL_MEM_TYPE
		</if>
						  ,INSERT_DB_USER
						  ,INSERT_DB_TIME
						  ,UPDATE_DB_USER
						  ,UPDATE_DB_TIME
		<if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
						  ,TEMPC_01
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
						  ,TEMPC_02
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
						  ,TEMPC_03
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
						  ,TEMPN_01
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
						  ,TEMPN_02
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
						  ,TEMPN_03
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PRSN2)">
						  ,BILL_PRSN2
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MAIL_ID2)">
						  ,BILL_MAIL_ID2
		</if>
		<if test="@foren.Ognl@isNotEmpty(HAND_PHON2)">
						  ,HAND_PHON2
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR_TYPE)">
						  ,ADDR_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_SI_DO)">
						  ,ADDRESS_SI_DO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_SI_GUN_GU)">
						  ,ADDRESS_SI_GUN_GU
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_DONG)">
						  ,ADDRESS_DONG
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_DORO)">
						  ,ADDRESS_DORO
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NUM)">
						  ,TOP_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NUM)">
						  ,BANKBOOK_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(CHANNEL)">
						  ,CHANNEL
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_CUSTOM)">
						  ,BILL_CUSTOM
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_AMT)">
						  ,SALE_AMT
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_CNT)">
						  ,PERSON_CNT
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CNT)">
						  ,ITEM_CNT
		</if>
		<if test="@foren.Ognl@isNotEmpty(MAJOR_ITEM)">
						  ,MAJOR_ITEM
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_YYYY)">
						  ,SALE_YYYY
		</if>
		<if test="@foren.Ognl@isNotEmpty(BASE_YYYY)">
						  ,BASE_YYYY
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_OVER_YN)">
						  ,CREDIT_OVER_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE2)">
						  ,AGENT_TYPE2
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE3)">
						  ,AGENT_TYPE3
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						  ,DEPT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PUBLISH_TYPE)">
						  ,BILL_PUBLISH_TYPE
		</if>
						  -- 추가(극동)
						 , R_PAYMENT_YN 
						  -- 추가(양평공사)
		<if test="@foren.Ognl@isNotEmpty(PURCH_TYPE)">
						 , PURCH_TYPE	
		</if>	
						  )
						  
			VALUES	  (#{S_COMP_CODE}
						 ,#{CUSTOM_CODE}
						 ,#{CUSTOM_TYPE}
						 ,#{CUSTOM_FULL_NAME}
						 ,#{CUSTOM_NAME}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME1)">
						 ,#{CUSTOM_NAME1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME2)">
						 ,#{CUSTOM_NAME2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(NATION_CODE)">
						 ,#{NATION_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
						 ,#{COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SERVANT_COMPANY_NUM)">
						  ,#{SERVANT_COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
						 ,#{TOP_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSINESS_TYPE)">
						 ,#{BUSINESS_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
						 ,#{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_CLASS)">
						 ,#{COMP_CLASS}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_TYPE)">
						 ,#{COMP_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
						 ,#{ZIP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR1)">
						 ,#{ADDR1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR2)">
						 ,#{ADDR2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TELEPHON)">
						 ,#{TELEPHON}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FAX_NUM)">
						 ,#{FAX_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MAIL_ID)">
						 ,#{MAIL_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WON_CALC_BAS)">
						 ,#{WON_CALC_BAS}
		</if>
		<if test="@foren.Ognl@isNotEmpty(START_DATE)">
						 ,#{START_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
						 ,#{STOP_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ADDRESS)">
						 ,#{TO_ADDRESS}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_CALC_TYPE)">
						 ,#{TAX_CALC_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TRANS_CLOSE_DAY)">
						 ,#{TRANS_CLOSE_DAY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
						 ,#{RECEIPT_DAY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
						 ,#{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
						 ,#{TAX_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
						 ,#{BILL_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SET_METH)">
						 ,#{SET_METH}
		</if>
		<if test="@foren.Ognl@isNotEmpty(VAT_RATE)">
						 ,#{VAT_RATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM)">
						 ,#{MANAGE_CUSTOM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
						 ,#{AGENT_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
						 ,#{AREA_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DELIVERY_UNION)">
						 ,#{DELIVERY_UNION}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_YN)">
						 ,#{CREDIT_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOT_CREDIT_AMT)">
						 ,#{TOT_CREDIT_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_AMT)">
						 ,#{CREDIT_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_YMD)">
						 ,#{CREDIT_YMD}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RESULT_CARE_YN)">
						 ,#{RESULT_CARE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(HTTP_ADDR)">
						 ,#{HTTP_ADDR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
						 ,#{BANK_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NAME)">
						 ,#{BANKBOOK_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECTOR_CP)">
						 ,#{COLLECTOR_CP}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_CARE)">
						 ,#{COLLECT_CARE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSI_PRSN)">
						 ,#{BUSI_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CAL_TYPE)">
						 ,#{CAL_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
						 ,#{REMARK}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
						 ,#{COLLECT_DAY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(HAND_PHON)">
						 ,#{HAND_PHON}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_BANK)">
						 ,#{PURCHASE_BANK}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PRSN)">
						 ,#{BILL_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MAIL_ID)">
						 ,#{BILL_MAIL_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MEM_TYPE)">
						 ,#{BILL_MEM_TYPE}
		</if>						  
						 ,#{S_USER_ID}						
						 ,getdate()						
						 ,#{S_USER_ID}						 
						 ,getdate()
		<if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
						 ,#{TEMPC_01}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
						 ,#{TEMPC_02}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
						 ,#{TEMPC_03}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
						 ,#{TEMPN_01}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
						 ,#{TEMPN_02}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
						 ,#{TEMPN_03}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PRSN2)">
						 ,#{BILL_PRSN2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_MAIL_ID2)">
						 ,#{BILL_MAIL_ID2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(HAND_PHON2)">
						 ,#{HAND_PHON2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR_TYPE)">
						 ,#{ADDR_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_SI_DO)">
						 ,#{ADDRESS_SI_DO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_SI_GUN_GU)">
						 ,#{ADDRESS_SI_GUN_GU}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_DONG)">
						 ,#{ADDRESS_DONG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDRESS_DORO)">
						 ,#{ADDRESS_DORO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NUM)">
						 ,uniLITE.fnCipherEncrypt(#{TOP_NUM},'')
		</if>
		<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NUM)">
						 ,uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM},'')
		</if>
		<if test="@foren.Ognl@isNotEmpty(CHANNEL)">
						 ,#{CHANNEL}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_CUSTOM)">
						 ,#{BILL_CUSTOM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_AMT)">
						 ,#{SALE_AMT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_CNT)">
						 ,#{PERSON_CNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CNT)">
						 ,#{ITEM_CNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MAJOR_ITEM)">
						 ,#{MAJOR_ITEM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_YYYY)">
						 ,#{SALE_YYYY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BASE_YYYY)">
						 ,#{BASE_YYYY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CREDIT_OVER_YN)">
						 ,#{CREDIT_OVER_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE2)">
						 ,#{AGENT_TYPE2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE3)">
						 ,#{AGENT_TYPE3}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						  ,#{DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PUBLISH_TYPE)">
						  ,#{BILL_PUBLISH_TYPE}
		</if>		
		-- 추가(극동)
						  ,#{R_PAYMENT_YN}
		-- 추가(양평공사)
		<if test="@foren.Ognl@isNotEmpty(PURCH_TYPE)">
						  ,#{PURCH_TYPE}  
		</if>   
						  )
	</update>
	<update id="s_bcm100ukrv_ypServiceImpl.updateMulti" parameterType="Map">
		/* s_bcm100ukrv_ypServiceImpl.updateMulti */  
		UPDATE BCM100T
		   SET	COMP_CODE = #{S_COMP_CODE}
			   ,CUSTOM_CODE = #{CUSTOM_CODE}
			   ,CUSTOM_TYPE = #{CUSTOM_TYPE}
			   ,CUSTOM_FULL_NAME = #{CUSTOM_FULL_NAME}
			   ,CUSTOM_NAME = #{CUSTOM_NAME}
		<if test="@foren.Ognl@isExists(_parameter, 'CUSTOM_NAME1')"> 
			   ,CUSTOM_NAME1 = #{CUSTOM_NAME1}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CUSTOM_NAME2')"> 
			   ,CUSTOM_NAME2 = #{CUSTOM_NAME2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'NATION_CODE')"> 
			   ,NATION_CODE = #{NATION_CODE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COMPANY_NUM')"> 
			   ,COMPANY_NUM = #{COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'SERVANT_COMPANY_NUM')">
			   ,SERVANT_COMPANY_NUM = #{SERVANT_COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TOP_NAME')"> 
			   ,TOP_NAME = #{TOP_NAME}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BUSINESS_TYPE')"> 
			   ,BUSINESS_TYPE = #{BUSINESS_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'USE_YN')"> 
			   ,USE_YN = #{USE_YN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COMP_CLASS')"> 
			   ,COMP_CLASS = #{COMP_CLASS}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COMP_TYPE')"> 
			   ,COMP_TYPE = #{COMP_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ZIP_CODE')"> 
			   ,ZIP_CODE = #{ZIP_CODE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDR1')"> 
			   ,ADDR1 = #{ADDR1}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDR2')"> 
			   ,ADDR2 = #{ADDR2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TELEPHON')"> 
			   ,TELEPHON = #{TELEPHON}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'FAX_NUM')"> 
			   ,FAX_NUM = #{FAX_NUM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'MAIL_ID')"> 
			   ,MAIL_ID = #{MAIL_ID}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'WON_CALC_BAS')"> 
			   ,WON_CALC_BAS = #{WON_CALC_BAS}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'START_DATE')"> 
			   ,START_DATE = #{START_DATE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'STOP_DATE')"> 
			   ,STOP_DATE = #{STOP_DATE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TO_ADDRESS')"> 
			   ,TO_ADDRESS = #{TO_ADDRESS}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TAX_CALC_TYPE')"> 
			   ,TAX_CALC_TYPE = #{TAX_CALC_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TRANS_CLOSE_DAY')"> 
			   ,TRANS_CLOSE_DAY = #{TRANS_CLOSE_DAY}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'RECEIPT_DAY')"> 
			   ,RECEIPT_DAY = #{RECEIPT_DAY}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'MONEY_UNIT')"> 
			   ,MONEY_UNIT = #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TAX_TYPE')"> 
			   ,TAX_TYPE = #{TAX_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_TYPE')"> 
			   ,BILL_TYPE = #{BILL_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'SET_METH')"> 
			   ,SET_METH = #{SET_METH}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'VAT_RATE')"> 
			   ,VAT_RATE = #{VAT_RATE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'MANAGE_CUSTOM')"> 
			   ,MANAGE_CUSTOM = #{MANAGE_CUSTOM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'AGENT_TYPE')"> 
			   ,AGENT_TYPE = #{AGENT_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'AREA_TYPE')"> 
			   ,AREA_TYPE = #{AREA_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'DELIVERY_UNION')"> 
			   ,DELIVERY_UNION   = #{DELIVERY_UNION}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CREDIT_YN')"> 
			   ,CREDIT_YN = #{CREDIT_YN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TOT_CREDIT_AMT')"> 
			   ,TOT_CREDIT_AMT = #{TOT_CREDIT_AMT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CREDIT_AMT')"> 
			   ,CREDIT_AMT = #{CREDIT_AMT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CREDIT_YMD')"> 
			   ,CREDIT_YMD = #{CREDIT_YMD}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'RESULT_CARE_YN')"> 
			   ,RESULT_CARE_YN = #{RESULT_CARE_YN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'HTTP_ADDR')"> 
			   ,HTTP_ADDR = #{HTTP_ADDR}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BANK_CODE')"> 
			   ,BANK_CODE = #{BANK_CODE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BANKBOOK_NAME')"> 
			   ,BANKBOOK_NAME = #{BANKBOOK_NAME}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COLLECTOR_CP')"> 
			   ,COLLECTOR_CP = #{COLLECTOR_CP}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COLLECT_CARE')"> 
			   ,COLLECT_CARE = #{COLLECT_CARE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BUSI_PRSN')"> 
			   ,BUSI_PRSN = #{BUSI_PRSN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CAL_TYPE')"> 
			   ,CAL_TYPE = #{CAL_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'REMARK')"> 
			   ,REMARK = #{REMARK}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'COLLECT_DAY')"> 
			   ,COLLECT_DAY = #{COLLECT_DAY}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'HAND_PHON')"> 
			   ,HAND_PHON = #{HAND_PHON}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'PURCHASE_BANK')"> 
			   ,PURCHASE_BANK = #{PURCHASE_BANK}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_PRSN')"> 
			   ,BILL_PRSN = #{BILL_PRSN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_MAIL_ID')"> 
			   ,BILL_MAIL_ID = #{BILL_MAIL_ID}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_MEM_TYPE')"> 
			   ,BILL_MEM_TYPE = #{BILL_MEM_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'S_USER_ID')"> 
			   ,UPDATE_DB_USER = #{S_USER_ID}
		</if> 
			   ,UPDATE_DB_TIME = getdate()
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_01')"> 
			   ,TEMPC_01 = #{TEMPC_01}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_02')"> 
			   ,TEMPC_02 = #{TEMPC_02}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_03')"> 
			   ,TEMPC_03 = #{TEMPC_03}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_01')"> 
			   ,TEMPN_01 = #{TEMPN_01}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_02')"> 
			   ,TEMPN_02 = #{TEMPN_02}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_03')"> 
			   ,TEMPN_03 = #{TEMPN_03}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_PRSN2')"> 
			   ,BILL_PRSN2 = #{BILL_PRSN2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_MAIL_ID2')"> 
			   ,BILL_MAIL_ID2 = #{BILL_MAIL_ID2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'HAND_PHON2')"> 
			   ,HAND_PHON2 = #{HAND_PHON2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDR_TYPE')"> 
			   ,ADDR_TYPE = #{ADDR_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDRESS_SI_DO')"> 
			   ,ADDRESS_SI_DO = #{ADDRESS_SI_DO}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDRESS_SI_GUN_GU')"> 
			   ,ADDRESS_SI_GUN_GU = #{ADDRESS_SI_GUN_GU}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDRESS_DONG')"> 
			   ,ADDRESS_DONG = #{ADDRESS_DONG}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ADDRESS_DORO')"> 
			   ,ADDRESS_DORO = #{ADDRESS_DORO}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'TOP_NUM')">
			   		,TOP_NUM = uniLITE.fnCipherEncrypt(#{TOP_NUM},'')
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BANKBOOK_NUM')"> 
			   		,BANKBOOK_NUM	 = uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM}, '')
		</if>
			   ,CHANNEL = #{CHANNEL}
		<if test="@foren.Ognl@isExists(_parameter, 'BILL_CUSTOM')"> 
			   ,BILL_CUSTOM = #{BILL_CUSTOM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'SALE_AMT')"> 
			   ,SALE_AMT = #{SALE_AMT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'PERSON_CNT')"> 
			   ,PERSON_CNT = #{PERSON_CNT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ITEM_CNT')"> 
			   ,ITEM_CNT = #{ITEM_CNT}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'MAJOR_ITEM')"> 
			   ,MAJOR_ITEM = #{MAJOR_ITEM}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'SALE_YYYY')"> 
			   ,SALE_YYYY = #{SALE_YYYY}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'BASE_YYYY')"> 
			   ,BASE_YYYY = #{BASE_YYYY}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'CREDIT_OVER_YN')"> 
			   ,CREDIT_OVER_YN = #{CREDIT_OVER_YN}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'AGENT_TYPE2')"> 
			   ,AGENT_TYPE2 = #{AGENT_TYPE2}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'AGENT_TYPE3')"> 
			   ,AGENT_TYPE3 = #{AGENT_TYPE3}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'DEPT_CODE')">
			   ,DEPT_CODE =   #{DEPT_CODE}
		</if>
		 -- 추가(극동)
			   , R_PAYMENT_YN =   #{R_PAYMENT_YN} 
		-- 추가(양평공사)
		<if test="@foren.Ognl@isExists(_parameter, 'PURCH_TYPE')">
			   , PURCH_TYPE =   #{PURCH_TYPE}
		</if>
		<if test="@foren.Ognl@isExists(_parameter, 'ITEM_NAME')">
               , ITEM_NAME =   #{ITEM_NAME}
        </if>
        <if test="@foren.Ognl@isExists(_parameter, 'CULTI_AREA')">
               , CULTI_AREA =   #{CULTI_AREA}
        </if>
        <if test="@foren.Ognl@isExists(_parameter, 'CULRI_ADDR')">
               , CULRI_ADDR =   #{CULRI_ADDR}
        </if>
        <if test="@foren.Ognl@isExists(_parameter, 'BILL_PUBLISH_TYPE')">
               , BILL_PUBLISH_TYPE =   #{BILL_PUBLISH_TYPE}
        </if>
		WHERE  CUSTOM_CODE = #{CUSTOM_CODE}
			   AND COMP_CODE = #{S_COMP_CODE} 
	</update>
	<delete id="s_bcm100ukrv_ypServiceImpl.deleteMulti" parameterType="Map">
		DELETE FROM BCM100T 
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
	</delete>
	<select id="s_bcm100ukrv_ypServiceImpl.getBCM120List" parameterType="Map" resultType="rMap">
		/* s_bcm100ukrv_ypServiceImpl.getBCM120List */
		/* bcm106ukrv.Cbcm106ukrv[fnBcm120QStd] Query01 **/
		BEGIN	
			SET NOCOUNT ON	
			SET ARITHABORT ON  
		 
			SELECT 
				   A.COMP_CODE
				 , A.CUSTOM_CODE
				 , A.SEQ
				 , A.PRSN_NAME
				 , A.DEPT_NAME
				 , A.HAND_PHON
				 , A.TELEPHONE_NUM1
				 , A.TELEPHONE_NUM2
				 , A.FAX_NUM
				 , A.MAIL_ID
				 , A.BILL_TYPE
				 , A.MAIN_BILL_YN
				 , A.REMARK
				 , A.INSERT_DB_USER
				 , A.INSERT_DB_TIME
				 , A.UPDATE_DB_USER
				 , A.UPDATE_DB_TIME
			  FROM			BCM120T AS A WITH(NOLOCK)
				   INNER JOIN BCM100T AS B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													   AND B.CUSTOM_CODE = A.CUSTOM_CODE
			 WHERE A.COMP_CODE   = #{COMP_CODE}
			   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
				   
			SET NOCOUNT OFF	
			SET ARITHABORT OFF	
		END 
		
	</select>
	<insert id="s_bcm100ukrv_ypServiceImpl.insertBCM120" parameterType="Map">
		/* s_bcm100ukrv_ypServiceImpl.insert */
		INSERT INTO BCM120T
				( COMP_CODE
				  ,CUSTOM_CODE
				  ,SEQ
			<if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
				  ,PRSN_NAME
			</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
				  ,DEPT_NAME
			</if>
			<if test="@foren.Ognl@isNotEmpty(HAND_PHON)">
				  ,HAND_PHON
			</if>
			<if test="@foren.Ognl@isNotEmpty(TELEPHONE_NUM1)">
				  ,TELEPHONE_NUM1
			</if>
			<if test="@foren.Ognl@isNotEmpty(TELEPHONE_NUM2)">
				  ,TELEPHONE_NUM2
			</if>
			<if test="@foren.Ognl@isNotEmpty(FAX_NUM)">
				  ,FAX_NUM
			</if>
			<if test="@foren.Ognl@isNotEmpty(MAIL_ID)">
				  ,MAIL_ID
			</if>
			<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
				  ,BILL_TYPE
			</if>
			<if test="@foren.Ognl@isNotEmpty(MAIN_BILL_YN)">
				  ,MAIN_BILL_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
				  ,REMARK
			</if>
				  ,INSERT_DB_USER
				  ,INSERT_DB_TIME
				  ,UPDATE_DB_USER
				  ,UPDATE_DB_TIME
			<if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
				  ,TEMPC_01
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
				  ,TEMPC_02
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
				  ,TEMPC_03
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
				  ,TEMPN_01
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
				  ,TEMPN_02
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
				  ,TEMPN_03
			</if>
				  )
		VALUES (
				   #{S_COMP_CODE}
				  ,#{CUSTOM_CODE}
				  ,#{SEQ}
			<if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
				  ,#{PRSN_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
				  ,#{DEPT_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(HAND_PHON)">
				  ,#{HAND_PHON}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TELEPHONE_NUM1)">
				  ,#{TELEPHONE_NUM1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TELEPHONE_NUM2)">
				  ,#{TELEPHONE_NUM2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(FAX_NUM)">
				  ,#{FAX_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MAIL_ID)">
				  ,#{MAIL_ID}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
				  ,#{BILL_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MAIN_BILL_YN)">
				  ,#{MAIN_BILL_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
				  ,#{REMARK}
			</if>
				  ,#{S_USER_ID}
				  ,getdate()
				  ,#{S_USER_ID}
				  ,getdate()
			<if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
				  ,#{TEMPC_01}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
				  ,#{TEMPC_02}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
				  ,#{TEMPC_03}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
				  ,#{TEMPN_01}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
				  ,#{TEMPN_02}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
				  ,#{TEMPN_03}
			</if>
			)
		
	</insert>
	<update id="s_bcm100ukrv_ypServiceImpl.updateBCM120" parameterType="Map">
		/* s_bcm100ukrv_ypServiceImpl.updateBCM120 */
		UPDATE BCM120T
		SET	COMP_CODE = #{S_COMP_CODE},
			   CUSTOM_CODE = #{CUSTOM_CODE},
			   SEQ = #{SEQ},
			   PRSN_NAME = #{PRSN_NAME},
			   DEPT_NAME = #{DEPT_NAME},
			   HAND_PHON = #{HAND_PHON},
			   TELEPHONE_NUM1 = #{TELEPHONE_NUM1},
			   TELEPHONE_NUM2 = #{TELEPHONE_NUM2},
			   FAX_NUM = #{FAX_NUM},
			   MAIL_ID = #{MAIL_ID},
			   BILL_TYPE = #{BILL_TYPE},
			   MAIN_BILL_YN = #{MAIN_BILL_YN},
			   REMARK = #{REMARK},
			   UPDATE_DB_USER = #{S_USER_ID},
			   UPDATE_DB_TIME = getdate(),
			   TEMPC_01 = #{TEMPC_01},
			   TEMPC_02 = #{TEMPC_02},
			   TEMPC_03 = #{TEMPC_03},
			   TEMPN_01 = #{TEMPN_01},
			   TEMPN_02 = #{TEMPN_02},
			   TEMPN_03 = #{TEMPN_03}
		WHERE  CUSTOM_CODE = #{CUSTOM_CODE}
			   AND COMP_CODE = #{COMP_CODE}
			   AND SEQ = #{SEQ} 
	</update>
	<delete id="s_bcm100ukrv_ypServiceImpl.deleteBCM120" parameterType="Map">
		/* s_bcm100ukrv_ypServiceImpl.deleteBCM120 */
		DELETE FROM BCM120T
		WHERE  CUSTOM_CODE = #{CUSTOM_CODE}
			   AND COMP_CODE = #{COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(SEQ)">
			   AND SEQ = #{SEQ} 
		</if>
	</delete>
	<select id="s_bcm100ukrv_ypServiceImpl.insertSimple" parameterType="Map" resultType="rMap" statementType="PREPARED">
		DECLARE  @RefCode1	NVARCHAR(50)
				,@AutoCustomCode NVARCHAR(70)
				
		/* 거래처구분에 해당하는 공통코드(=B015)의 관련1 값을 거래처정보의 접두어로 사용한다 */
		SELECT @RefCode1 = ISNULL(REF_CODE1,'')
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B015'
		   AND SUB_CODE  = #{CUSTOM_TYPE}
		
		/* 거래처정보에서 접두어를 뺀 값중에서 숫자값인 것을 조회
		   MAX인 값에서 + 1 */
		SELECT @AutoCustomCode = @RefCode1 + RIGHT('00000000' + CONVERT(NVARCHAR(16),
				( ISNULL(MAX(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))),0) + 1) ), 
				(CASE WHEN LEN(ISNULL(MAX(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))),N'0000')) &gt;=
						 LEN(ISNULL(MAX(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))),N'0000') + 1)
					THEN LEN(ISNULL(MAX(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))),N'0000'))
					ELSE LEN(ISNULL(MAX(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))),N'0000') + 1)
				END)
				)
		  FROM BCM100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CUSTOM_CODE LIKE @RefCode1 + '%'
		   AND ISNUMERIC(RIGHT(CUSTOM_CODE, LEN(CUSTOM_CODE) - LEN(@RefCode1))) = 1
		   
		  INSERT INTO BCM100T
						( COMP_CODE
						  ,CUSTOM_CODE
						  ,CUSTOM_TYPE
						  ,CUSTOM_FULL_NAME
						  ,CUSTOM_NAME )
			VALUES	  (#{S_COMP_CODE}
						 ,@AutoCustomCode
						 ,#{CUSTOM_TYPE}
						 ,#{CUSTOM_NAME}
						 ,#{CUSTOM_NAME})
		SELECT @AutoCustomCode AS CUSTOM_CODE
	</select>

	<select id="s_bcm100ukrv_ypServiceImpl.insertSimple2" parameterType="Map" resultType="rMap" statementType="PREPARED">
		DECLARE  @RefCode1  NVARCHAR(50)
				,@AutoCustomCode NVARCHAR(70)
				
		/* 거래처구분에 해당하는 공통코드(=B015)의 관련1 값을 거래처정보의 접두어로 사용한다 */
		SELECT @RefCode1 = ISNULL(REF_CODE1,'')
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B015'
		   AND SUB_CODE  = #{CUSTOM_TYPE}
		

		   
		  INSERT INTO BCM100T
						( COMP_CODE
						  ,CUSTOM_CODE
						  ,CUSTOM_TYPE
						  ,CUSTOM_FULL_NAME
						  ,CUSTOM_NAME 
						  ,COMPANY_NUM
						  ,AGENT_TYPE
						  )
			VALUES	  (#{S_COMP_CODE}
						 --,@AutoCustomCode
						 ,#{CUSTOM_CODE}
						 ,#{CUSTOM_TYPE}
						 ,#{CUSTOM_NAME}
						 ,#{CUSTOM_NAME}
						 ,#{COMPANY_NUM}
						 ,#{AGENT_TYPE}
						 )
	</select>




	<select id="s_bcm100ukrv_ypServiceImpl.getBankBookInfo" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.CUSTOM_CODE
			 , B.CUSTOM_NAME
			 , A.BOOK_CODE
			 , A.BOOK_NAME
			 , A.BANK_CODE
			 , (
				SELECT CUSTOM_NAME
				  FROM BCM100T WITH (NOLOCK)
		   		 WHERE COMP_CODE   = #{S_COMP_CODE}
				   AND CUSTOM_CODE = A.BANK_CODE
				   AND CUSTOM_TYPE = '4'
				   AND START_DATE					&lt;= CONVERT(VARChar(8), GETDATE(), 112)
				   AND ISNULL(STOP_DATE, '99999999') &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
				   AND USE_YN = N'Y'  
			 )														AS BANK_NAME
			 , unilite.fncipherdecrypt(A.BANKBOOK_NUM, '')			AS BANKBOOK_NUM
			 , A.BANKBOOK_NAME 
			 , A.MAIN_BOOK_YN
		  FROM BCM130T		A WITH (NOLOCK) 
		 INNER JOIN BCM100T B WITH (NOLOCK) 
			ON A.COMP_CODE		= B.COMP_CODE
		   AND A.CUSTOM_CODE	= B.CUSTOM_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.CUSTOM_CODE	= #{CUSTOM_CODE} 
		 ORDER BY A.BANK_CODE
	</select>
	
	<insert id="s_bcm100ukrv_ypServiceImpl.setBankBookInfo" parameterType="Map">
		INSERT INTO BCM130T(
			   COMP_CODE
			 , CUSTOM_CODE
			 , BOOK_CODE
			 , BOOK_NAME
			 , BANK_CODE
			 , BANKBOOK_NUM
			 , BANKBOOK_NAME
			 , MAIN_BOOK_YN
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		)
		VALUES
		(
			   #{S_COMP_CODE}
			 , #{CUSTOM_CODE} 
			 , #{BOOK_CODE}
			 , #{BOOK_NAME}
			 , #{BANK_CODE}
			 , unilite.fnCipherEncrypt(#{BANKBOOK_NUM}, '')
			 , #{BANKBOOK_NAME}
			 , #{MAIN_BOOK_YN}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		 )
	</insert>
	
	<update id="s_bcm100ukrv_ypServiceImpl.updateBankBookInfo" parameterType="Map">
		UPDATE BCM130T
		   SET BANK_CODE	= #{BANK_CODE}	
			 , BANKBOOK_NUM = unilite.fnCipherEncrypt(#{BANKBOOK_NUM}, '')
			 , BANKBOOK_NAME= #{BANKBOOK_NAME} 
			 , BOOK_NAME	= #{BOOK_NAME}
			 , MAIN_BOOK_YN = #{MAIN_BOOK_YN}
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE	= #{CUSTOM_CODE}
		   AND BOOK_CODE	= #{BOOK_CODE}
	</update>
	
	<delete id="s_bcm100ukrv_ypServiceImpl.deleteBankBookInfo" parameterType="Map">
		DELETE FROM BCM130T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE	= #{CUSTOM_CODE}
		   AND BOOK_CODE	= #{BOOK_CODE}
	</delete>

	<select id="s_bcm100ukrv_ypServiceImpl.getSubInfo3" parameterType="Map" resultType="rMap">
	SELECT
		  COMP_CODE
		, CUSTOM_CODE
		, SEQ
		, PRSN_NAME
		, DEPT_NAME
		, HAND_PHON
		, TELEPHONE_NUM1
		, TELEPHONE_NUM2
		, FAX_NUM
		, MAIL_ID
		, BILL_TYPE
		, MAIN_BILL_YN
		, REMARK
	  FROM BCM120T  WITH (NOLOCK) 
	  WHERE COMP_CODE = #{S_COMP_CODE}
		AND CUSTOM_CODE = #{CUSTOM_CODE}	 
		
	</select>
	
	<insert id="s_bcm100ukrv_ypServiceImpl.insertList3" parameterType="Map">
		INSERT INTO BCM120T(
			   COMP_CODE
			 , CUSTOM_CODE
			 , SEQ
			 , PRSN_NAME
			 , DEPT_NAME
			 , HAND_PHON
			 , TELEPHONE_NUM1
			 , TELEPHONE_NUM2
			 , FAX_NUM
			 , MAIL_ID
			 , BILL_TYPE
			 , MAIN_BILL_YN
			 , REMARK
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		)
		VALUES
		(
			   #{S_COMP_CODE}
			 , #{CUSTOM_CODE}
			 , #{SEQ}
			 , #{PRSN_NAME}
			 , #{DEPT_NAME}
			 , #{HAND_PHON}
			 , #{TELEPHONE_NUM1}
			 , #{TELEPHONE_NUM2}
			 , #{FAX_NUM}
			 , #{MAIL_ID}
			 , #{BILL_TYPE}
			 , #{MAIN_BILL_YN}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		 )
	</insert>
	
	<update id="s_bcm100ukrv_ypServiceImpl.updateList3" parameterType="Map">
		UPDATE BCM120T
		   SET  PRSN_NAME	  = #{PRSN_NAME}
			  , DEPT_NAME	  = #{DEPT_NAME}
			  , HAND_PHON	  = #{HAND_PHON}
			  , TELEPHONE_NUM1 = #{TELEPHONE_NUM1}
			  , TELEPHONE_NUM2 = #{TELEPHONE_NUM2}
			  , FAX_NUM		= #{FAX_NUM}
			  , MAIL_ID		= #{MAIL_ID}
			  , BILL_TYPE	  = #{BILL_TYPE}
			  , MAIN_BILL_YN   = #{MAIN_BILL_YN}
			  , REMARK		 = #{REMARK}

		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE  = #{CUSTOM_CODE}
		   AND SEQ		  = #{SEQ} 
	</update>
	
	<delete id="s_bcm100ukrv_ypServiceImpl.deleteList3" parameterType="Map">
		DELETE FROM BCM120T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE  = #{CUSTOM_CODE}
		   AND SEQ		  = #{SEQ} 
	</delete>
	
	
	
	
	
	
	
	
	
	
	<!-- 인증서 정보 -->
	<select id="s_bcm100ukrv_ypServiceImpl.getCertInfo" parameterType="Map" resultType="rMap">
	SELECT 
		  * 
		 , CONVERT(NVARCHAR, UPDATE_DB_TIME) 		AS CHANGE_YN 
  
	   FROM S_BCM100T_YP  WITH (NOLOCK) 
	  WHERE COMP_CODE = #{S_COMP_CODE}
		AND CUSTOM_CODE = #{CUSTOM_CODE}
	 ORDER BY TYPE, CERT_NO
	</select>
	
	<insert id="s_bcm100ukrv_ypServiceImpl.certInfoInsert" parameterType="Map">
		INSERT INTO S_BCM100T_YP(
			   COMP_CODE
			 , CUSTOM_CODE
			 , TYPE
			 , CERT_NO
			 , CERT_DATE
			 , APLY_START_DATE
			 , APLY_END_DATE
			 , CERT_ORG
			 , REMARK
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		)
		VALUES
		(
			   #{S_COMP_CODE}
			 , #{CUSTOM_CODE}
			 , #{TYPE}
			 , #{CERT_NO}
			 , #{CERT_DATE}
			 , #{APLY_START_DATE} 
			 , #{APLY_END_DATE} 
			 , #{CERT_ORG}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		 )
	</insert>
	
	<update id="s_bcm100ukrv_ypServiceImpl.certInfoUpdate" parameterType="Map">
		UPDATE S_BCM100T_YP
		   SET CERT_DATE		= #{CERT_DATE}
			 , APLY_START_DATE	= #{APLY_START_DATE}
			 , APLY_END_DATE	= #{APLY_END_DATE}
			 , CERT_ORG			= #{CERT_ORG}
			 , REMARK			= #{REMARK}

		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE	= #{CUSTOM_CODE}
		   AND CERT_NO		= #{CERT_NO}
		   AND TYPE			= #{TYPE} 
	</update>
	
	<delete id="s_bcm100ukrv_ypServiceImpl.certInfoDelete" parameterType="Map">
		DELETE FROM S_BCM100T_YP
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CUSTOM_CODE  = #{CUSTOM_CODE}
		   AND CERT_NO		= #{CERT_NO}
		   AND TYPE			= #{TYPE} 
	</delete>
	
    <!-- 농가이력 재배 품목1 -->
    <select id="s_bcm100ukrv_ypServiceImpl.getGrowthList1" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            SELECT   DOC_ID    
                    ,CUSTOM_CODE
                    ,ITEM_CODE  
                    ,ITEM_NAME  
                    ,DVLY_SEASON
                    ,CULTI_AREA 
                    ,REMARK
              FROM  S_BCM101T_YP    WITH(NOLOCK)
             WHERE  COMP_CODE = #{S_COMP_CODE}
               AND  CUSTOM_CODE = #{CUSTOM_CODE} 
                 
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <insert id="s_bcm100ukrv_ypServiceImpl.growthInsertList1" parameterType="Map">
        INSERT INTO S_BCM101T_YP
            (    COMP_CODE
                ,CUSTOM_CODE
                ,ITEM_CODE  
                ,ITEM_NAME  
                ,DVLY_SEASON
                ,CULTI_AREA 
                ,REMARK
                ,INSERT_DB_TIME
                ,INSERT_DB_USER
                ,UPDATE_DB_TIME
                ,UPDATE_DB_USER                
            )VALUES(
                 #{COMP_CODE}
                ,#{CUSTOM_CODE}
                ,#{ITEM_CODE}  
                ,#{ITEM_NAME}  
                ,#{DVLY_SEASON}
                ,#{CULTI_AREA} 
                ,#{REMARK}
                ,GETDATE()
                ,#{S_USER_ID}
                ,GETDATE()
                ,#{S_USER_ID}  
            )
    </insert>
    
    <update id="s_bcm100ukrv_ypServiceImpl.growthUpdateList1" parameterType="Map">
        UPDATE S_BCM101T_YP SET
             ITEM_CODE          = #{ITEM_CODE}      
            ,ITEM_NAME          = #{ITEM_NAME}      
            ,DVLY_SEASON        = #{DVLY_SEASON}    
            ,CULTI_AREA         = #{CULTI_AREA}     
            ,REMARK             = #{REMARK}         
            ,UPDATE_DB_TIME     = GETDATE()
            ,UPDATE_DB_USER     = #{S_USER_ID} 
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND DOC_ID      = #{DOC_ID} 
    </update>
    
    <delete id="s_bcm100ukrv_ypServiceImpl.growthDeleteList1" parameterType="Map">
        DELETE FROM S_BCM101T_YP
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND DOC_ID      = #{DOC_ID} 
    </delete>
    
    <!-- 농가이력 재배 품목2 -->
    <select id="s_bcm100ukrv_ypServiceImpl.getGrowthList2" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            
            SELECT   DOC_ID    
                    ,CUSTOM_CODE
                    ,ITEM_CODE  
                    ,ITEM_NAME  
                    ,HIS_DATE
                    ,HIS_CONTENT 
                    ,CONFIRM_YN
                    ,REMARK
              FROM  S_BCM102T_YP    WITH(NOLOCK)
             WHERE  COMP_CODE = #{S_COMP_CODE}
               AND  CUSTOM_CODE = #{CUSTOM_CODE} 
                 
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <insert id="s_bcm100ukrv_ypServiceImpl.growthInsertList2" parameterType="Map">
        INSERT INTO S_BCM102T_YP
            (    COMP_CODE
                ,CUSTOM_CODE
                ,ITEM_CODE  
                ,ITEM_NAME  
                ,HIS_DATE
                ,HIS_CONTENT 
                ,CONFIRM_YN
                ,REMARK
                ,INSERT_DB_TIME
                ,INSERT_DB_USER
                ,UPDATE_DB_TIME
                ,UPDATE_DB_USER                
            )VALUES(
                 #{COMP_CODE}
                ,#{CUSTOM_CODE}
                ,#{ITEM_CODE}  
                ,#{ITEM_NAME}  
                ,#{HIS_DATE}
                ,#{HIS_CONTENT} 
                ,#{CONFIRM_YN}
                ,#{REMARK}
                ,GETDATE()
                ,#{S_USER_ID}
                ,GETDATE()
                ,#{S_USER_ID}  
            )
    </insert>
    
    <update id="s_bcm100ukrv_ypServiceImpl.growthUpdateList2" parameterType="Map">
        UPDATE S_BCM102T_YP SET
            ,ITEM_CODE          = #{ITEM_CODE}      
            ,ITEM_NAME          = #{ITEM_NAME}      
            ,HIS_DATE           = #{HIS_DATE}    
            ,HIS_CONTENT        = #{HIS_CONTENT}  
            ,CONFIRM_YN         = #{CONFIRM_YN}   
            ,REMARK             = #{REMARK}         
            ,UPDATE_DB_TIME     = GETDATE()
            ,UPDATE_DB_USER     = #{S_USER_ID} 
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND DOC_ID      = #{DOC_ID} 
    </update>
    
    <delete id="s_bcm100ukrv_ypServiceImpl.growthDeleteList2" parameterType="Map">
        DELETE FROM S_BCM102T_YP
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND DOC_ID      = #{DOC_ID}
    </delete>
    
    <!-- 교육참석현황 -->
    <select id="s_bcm100ukrv_ypServiceImpl.getEduList" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            
            SELECT   DOC_ID    
                    ,CUSTOM_CODE
                    ,EDU_TITLE
                    ,EDU_FR_DATE
                    ,EDU_TO_DATE
                    ,EDU_PLACE
                    ,EDU_CONTENTS
                    ,EDU_GUBUN
                    ,EDU_ORGAN
                    ,REMARK
              FROM  S_BCM105T_YP    WITH(NOLOCK)
             WHERE  COMP_CODE   = #{S_COMP_CODE}
               AND  CUSTOM_CODE = #{CUSTOM_CODE} 
                 
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
	<!-- 사진업로드 후, 등록자정보 update -->	
	<update id="s_bcm100ukrv_ypServiceImpl.photoModified" parameterType="Map">	
		/* s_ass900ukrServiceImpl_KOCIS.photoModified */
		UPDATE S_BCM100T_YP
		   SET CERT_FILE		= #{CERT_FILE}			--실제파일명 (ORIGINAL_FILE_NAME)
			 , FILE_ID			= #{FILE_ID}			--서버에 저장한 파일명 (FID)
			 , MIME_TYPE		= #{MIME_TYPE}			--파일형식
			 , FILE_EXT			= #{FILE_EXT}			--파일확장자
			 , FILE_SIZE		= #{FILE_SIZE}			--파일크기
			 , FILE_PATH		= #{FILE_PATH}			--파일경로 (PATH)
			 , UPDATE_DB_USER	= #{S_USER_ID}  
			 , UPDATE_DB_TIME	= GETDATE()
			 
		WHERE COMP_CODE		= #{S_COMP_CODE}
		  AND CUSTOM_CODE	= #{CUSTOM_CODE}
		  AND CERT_NO		= #{CERT_NO}
		  AND TYPE			= #{TYPE} 

	</update>
	
	<update id="s_bcm100ukrv_ypServiceImpl.farmHousePhotoModified" parameterType="Map">
		/* hum100ukrServiceImpl.photoModified */
        UPDATE BCM100T
        SET  UPDATE_DB_USER  = #{S_USER_ID}  
             ,UPDATE_DB_TIME = GETDATE()   
        WHERE COMP_CODE   = #{S_COMP_CODE}
          AND CUSTOM_CODE = #{CUSTOM_CODE}
	</update>
	

	<!-- 인증서 이미지 다운로드(인증서 이미지 정보) -->
	<select id="s_bcm100ukrv_ypServiceImpl.selectFileInfo" parameterType="Map" resultType="gMap">
		/* s_bcm100ukrv_ypServiceImpl.selectFileInfo */
		SELECT FILE_ID			AS FID
			 , CERT_FILE		AS ORIGINAL_FILE_NAME
			 , FILE_PATH		AS PATH
			 , MIME_TYPE		AS MIME_TYPE			-- 'image/jpeg'
			 , FILE_SIZE		AS SIZE
		  FROM S_BCM100T_YP WITH (NOLOCK)
		 WHERE FILE_ID = #{fid}
	</select>


</mapper>