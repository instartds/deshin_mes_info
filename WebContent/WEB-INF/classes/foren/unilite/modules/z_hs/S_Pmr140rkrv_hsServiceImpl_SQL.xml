<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmr140rkrv_hsServiceImpl">

	<select id="s_pmr140rkrv_hsServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList1
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
		
		    --작업일자 다음날 설정
		    IF @PRODT_DT != ''
		    BEGIN
		        SET @PRODT_DT_TO = (SELECT CONVERT(VARCHAR(08), DATEADD(D,1,CONVERT(DATETIME, @PRODT_DT)), 112))
		    END
		
		    DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		
		    SELECT A.COMP_CODE
		         , M2.COMP_NAME
				 --, A.DIV_CODE
		         , @DIV_CODE AS DIV_CODE
		         , M3.DIV_NAME
		         , (SELECT CONVERT(VARCHAR, DATEPART(YY, @PRODT_DT)) + '년 ' 
		                 + CONVERT(VARCHAR, DATEPART(MM, @PRODT_DT)) + '월 ' 
		                 + CONVERT(VARCHAR, DATEPART(DD, @PRODT_DT)) + '일 ('+ CASE DATEPART(DW, @PRODT_DT) 
		                                                                            WHEN 1 THEN '일요일'
		                                                                            WHEN 2 THEN '월요일'
		                                                                            WHEN 3 THEN '화요일'
		                                                                            WHEN 4 THEN '수요일'
		                                                                            WHEN 5 THEN '목요일'
		                                                                            WHEN 6 THEN '금요일'
		                                                                            WHEN 7 THEN '토요일'
		                                                                                   ELSE ''
		                                                                        END + ')') WORK_DATE
		         --, A.WORK_SHOP_CODE
				 , A.REF_CODE1 AS WORK_SHOP_CODE
		         , M4.TREE_NAME AS WORK_SHOP_NAME
		        -- , A.ITEM_CODE
				, A.REF_CODE2 AS ITEM_CODE
		         --, A.ITEM_NAME
				 , A.REF_CODE3 AS ITEM_NAME
		         , ISNULL(B.FR_PRODT_Q ,0) AS FR_PRODT_Q
		         , ISNULL(C.WORK_MAN, 0) AS WORK_MAN
		         --, uniLITE.fnGetUserTime(ISNULL(C.FR_SERIAL_NO, '00:00:00')) AS FR_SERIAL_NO
		         --, uniLITE.fnGetUserTime(ISNULL(C.TO_SERIAL_NO, '00:00:00')) AS TO_SERIAL_NO
		         , uniLITE.fnGetUserTime(ISNULL(C.FR_SERIAL_NO, '')) AS FR_SERIAL_NO
		         , uniLITE.fnGetUserTime(ISNULL(C.TO_SERIAL_NO, '')) AS TO_SERIAL_NO
		         , ISNULL(C.WORK_TIME   , 0) AS WORK_TIME
		         , ISNULL(C.MAN_HOUR    , 0) AS MAN_HOUR
		         , ISNULL(C.PRODT_Q     , 0) AS PRODT_Q
		         , ISNULL(C.PRODT_QR    , 0) AS PRODT_QR
		         , ISNULL(B.TO_PRODT_Q  , 0) AS TO_PRODT_Q
			   FROM BSA100T A
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.DIV_CODE
		                           , A.ITEM_CODE
		                           , A.WORK_SHOP_CODE
		                           , SUM(CONVERT(NUMERIC(18,1), ISNULL(A.WORK_MAN,'0'))) AS WORK_MAN
		                           --, LEFT(CASE WHEN MIN(A.FR_TIME)='' THEN '00:00:00' ELSE MIN(A.FR_TIME),5) END AS FR_SERIAL_NO
		                           --, LEFT(CASE WHEN MAX(A.TO_TIME)='' THEN '00:00:00' ELSE MAX(A.TO_TIME),5) END AS TO_SERIAL_NO
		                           		                           , LEFT(CASE WHEN MIN(A.FR_TIME) = '' 
								               THEN '00:00:00' 
											   ELSE MIN(A.FR_TIME)
											END, 5)                                       AS FR_SERIAL_NO
		                           , LEFT(CASE WHEN MAX(A.TO_TIME) = '' 
								               THEN '00:00:00' 
											   ELSE MAX(A.TO_TIME)
											END, 5)                                       AS TO_SERIAL_NO
		                           , SUM(CONVERT(NUMERIC(18,2), ISNULL(A.WORK_TIME,'0'))) AS WORK_TIME
		                           , SUM(ISNULL(A.MAN_HOUR, 0)) AS MAN_HOUR
		                           , SUM(ISNULL(A.PRODT_Q, 0)) AS PRODT_Q
		                           , (CASE WHEN SUM(CONVERT(NUMERIC(18,2), ISNULL(A.WORK_TIME,'0'))) > 0
		                                   THEN SUM(ISNULL(A.PRODT_Q, 0)) / SUM(CONVERT(NUMERIC(18,2), ISNULL(A.WORK_TIME,'0')))
		                                   ELSE 0
		                               END) AS PRODT_QR
		                        FROM PMR110T A WITH(NOLOCK)
		                       WHERE A.COMP_CODE      = @COMP_CODE
		                         AND A.DIV_CODE       = @DIV_CODE
		                         AND A.PRODT_DATE     = @PRODT_DT
		                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE) C ON A.COMP_CODE        = C.COMP_CODE
		                                                                                         --AND A.DIV_CODE         = C.DIV_CODE
																								 AND C.DIV_CODE = @DIV_CODE
		                                                                                         AND A.REF_CODE1   = C.WORK_SHOP_CODE
		                                                                                         --AND A.ITEM_CODE        = C.ITEM_CODE
																								 AND A.REF_CODE2        = C.ITEM_CODE
		
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.DIV_CODE
		                           , A.ITEM_CODE
		                           , A.WORK_SHOP_CODE
		                           , SUM(CASE WHEN A.PRODT_DATE = @PRODT_DT    THEN ISNULL(A.PRODT_Q, 0) ELSE 0 END) AS FR_PRODT_Q
		                           , SUM(CASE WHEN A.PRODT_DATE = @PRODT_DT_TO THEN ISNULL(A.PRODT_Q, 0) ELSE 0 END) AS TO_PRODT_Q
		                        FROM PMR200T A WITH(NOLOCK)
		                       WHERE A.COMP_CODE  = @COMP_CODE
		                         AND A.DIV_CODE   = @DIV_CODE
		                         AND A.PRODT_DATE BETWEEN @PRODT_DT AND @PRODT_DT_TO
		                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE) B ON C.COMP_CODE        = B.COMP_CODE
		                                                                                         AND C.DIV_CODE         = B.DIV_CODE
		                                                                                         AND C.WORK_SHOP_CODE   = B.WORK_SHOP_CODE
		                                                                                         AND C.ITEM_CODE        = B.ITEM_CODE
		           LEFT JOIN BSA230T AS M1 WITH(NOLOCK) ON C.COMP_CODE      = M1.COMP_CODE
		                                               AND C.WORK_SHOP_CODE = M1.TREE_CODE
		                                               AND M1.GROUP_CD      = @GROUP_CD
		           LEFT JOIN BOR100T AS M2 WITH(NOLOCK) ON A.COMP_CODE      = M2.COMP_CODE
		           LEFT JOIN BOR120T AS M3 WITH(NOLOCK) ON A.COMP_CODE      = M3.COMP_CODE
		                                               --AND A.DIV_CODE       = M3.DIV_CODE
													   AND M3.DIV_CODE = @DIV_CODE
		           LEFT JOIN BSA230T AS M4 WITH(NOLOCK) ON A.COMP_CODE      = M4.COMP_CODE
		                                               AND M4.TYPE_LEVEL 	= @DIV_CODE
													   AND A.REF_CODE1 		= M4.TREE_CODE
				WHERE A.COMP_CODE	=	@COMP_CODE
				  AND A.MAIN_CODE	=	'ZP01'
				  AND A.REF_CODE4	=	@GROUP_CD
				  AND A.USE_YN		=	'Y'
		     ORDER BY A.COMP_CODE, A.SORT_SEQ, A.REF_CODE1, A.REF_CODE3
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList2
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
		
		    DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , ISNULL(B.IN_DAY_Q, 0)                             AS IN_DAY_Q
		         , ISNULL(B.IN_MONTH_Q, 0)                           AS IN_MONTH_Q
		         , ISNULL(B.IN_TOT_Q, 0)                             AS IN_TOT_Q
		         , ISNULL(B.OUT_DAY_Q, 0)                            AS OUT_DAY_Q
		         , ISNULL(B.OUT_MONTH_Q, 0)                          AS OUT_MONTH_Q
		         , ISNULL(B.OUT_TOT_Q, 0)                            AS OUT_TOT_Q
		         , ISNULL(B1.BASIS_STOCK_Q, 0) + ISNULL(B.TOT_Q, 0)  AS TOT_Q
		      FROM (SELECT DISTINCT A.ITEM_CODE
		                 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
		                        WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                            ELSE B.ITEM_NAME
		                    END  AS ITEM_NAME
		                 , B.SPEC
		                 , B.STOCK_UNIT
		                 , A.ITEM_ACCOUNT
		                 , A.SUPPLY_TYPE
		                 , A.COMP_CODE
		                 , A.DIV_CODE
						 , A.SORT_SEQ
		              FROM (          --BPR200T A  WITH (NOLOCK)
										SELECT S1.COMP_CODE, S2.DIV_CODE, S2.SUPPLY_TYPE, S2.ITEM_ACCOUNT, S1.REF_CODE2 AS ITEM_CODE, S1.REF_CODE3 AS ITEM_NAME, S1.REF_CODE4 AS GROUP_CODE, MIN(S1.SORT_SEQ) AS SORT_SEQ
										FROM BSA100T S1  WITH (NOLOCK)
											 INNER JOIN BPR200T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.REF_CODE2=S2.ITEM_CODE AND S2.DIV_CODE =@DIV_CODE
										WHERE S1.COMP_CODE=@COMP_CODE
										AND S1.MAIN_CODE='ZP01'
										AND S1.SUB_CODE != '$'
										AND S1.USE_YN 		= 'Y'
										AND S1.REF_CODE4   = @GROUP_CD	
										GROUP BY S1.COMP_CODE, S2.DIV_CODE, S2.SUPPLY_TYPE, S2.ITEM_ACCOUNT, S1.REF_CODE2 , S1.REF_CODE3, S1.REF_CODE4
							) A
		                   INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
--		                   INNER JOIN BSA230T D  WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
--		                                                      AND D.TREE_CODE = A.WORK_SHOP_CODE
--		                   INNER JOIN PBS300T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
--		                                                      AND C.DIV_CODE  = A.DIV_CODE
--		                                                      AND C.ITEM_CODE = A.ITEM_CODE
--		                                                      AND C.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		             WHERE A.COMP_CODE      = @COMP_CODE
		               AND A.DIV_CODE       = @DIV_CODE
		               AND B.USE_YN         = N'Y'
		               AND A.ITEM_ACCOUNT  IN (N'10', N'20')) A
		           LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(BASIS_Q) AS BASIS_STOCK_Q
		                        FROM BIV200T WITH (NOLOCK)
		                       WHERE COMP_CODE    = @COMP_CODE
		                         AND DIV_CODE     = @DIV_CODE
		                         AND BASIS_YYYYMM = SUBSTRING(@PRODT_DT,1,4) + '01'
		                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) B1 ON B1.COMP_CODE = A.COMP_CODE
		                                                                  AND B1.DIV_CODE  = A.DIV_CODE
		                                                                  AND B1.ITEM_CODE = A.ITEM_CODE
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.DIV_CODE
		                           , A.ITEM_CODE
		                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
		                                           AND A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) AS IN_DAY_Q
		                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6)+'01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) AS IN_MONTH_Q
		                           , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) AS IN_TOT_Q
		                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
		                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                           + SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
		                                           AND A.INOUT_TYPE = N'3' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS OUT_DAY_Q
		
		                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6) + '01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                           + SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6) + '01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'3' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS OUT_MONTH_Q
		
		                           , SUM(CASE WHEN A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END)
		                           + SUM(CASE WHEN A.INOUT_TYPE = N'3' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS OUT_TOT_Q
		
		                           , SUM(CASE WHEN A.INOUT_TYPE IN (N'1', N'3') THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END)
		                           + SUM(CASE WHEN A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS TOT_Q
		                        FROM            BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                             INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                               AND B.DIV_CODE  = A.DIV_CODE
		                                                               AND B.ITEM_CODE = A.ITEM_CODE
		                       WHERE A.COMP_CODE      = @COMP_CODE
		                         AND A.DIV_CODE       = @DIV_CODE
		                         AND A.INOUT_METH     != N'3'
		                         AND A.INOUT_DATE     BETWEEN SUBSTRING(@PRODT_DT,1,4) + '0101' AND @PRODT_DT
		                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B ON A.COMP_CODE     = B.COMP_CODE
		                                                                       AND A.DIV_CODE      = B.DIV_CODE
		                                                                       AND A.ITEM_CODE     = B.ITEM_CODE
		    ORDER BY A.COMP_CODE, A.DIV_CODE, A.SORT_SEQ, A.ITEM_CODE
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList3" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList3
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
		
		    DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , B.INOUT_CODE
		         , B.INOUT_NAME
		         , ISNULL(B.INOUT_Q, 0)      AS INOUT_Q
		      FROM (SELECT DISTINCT A.ITEM_CODE
		                 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
		                        WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                            ELSE B.ITEM_NAME
		                    END  AS ITEM_NAME
		                 , B.SPEC
		                 , B.STOCK_UNIT
		                 , A.ITEM_ACCOUNT
		                 , A.SUPPLY_TYPE
		                 , A.COMP_CODE
		                 , A.DIV_CODE
		              FROM            BPR200T A  WITH (NOLOCK)
		                   INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		                   INNER JOIN BSA230T D  WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                                      AND D.TREE_CODE = A.WORK_SHOP_CODE
		                   INNER JOIN PBS300T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                      AND C.DIV_CODE  = A.DIV_CODE
		                                                      AND C.ITEM_CODE = A.ITEM_CODE
		                                                      AND C.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		             WHERE A.COMP_CODE      = @COMP_CODE
		               AND A.DIV_CODE       = @DIV_CODE
		               AND D.GROUP_CD       = @GROUP_CD
		               AND B.USE_YN         = N'Y'
		               AND A.ITEM_ACCOUNT  IN (N'10', N'20')) A
		           INNER JOIN (SELECT A.COMP_CODE
		                            , A.DIV_CODE
		                            , A.ITEM_CODE
		                            , A.INOUT_CODE
		                            , C.CUSTOM_NAME AS INOUT_NAME
		                            , A.EX_DATE
		                            , A.EX_NUM
		                            , ISNULL(A.INOUT_Q, 0) INOUT_Q
		                        FROM            BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                             INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                               AND B.DIV_CODE  = A.DIV_CODE
		                                                               AND B.ITEM_CODE = A.ITEM_CODE
		                             INNER JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                                               AND C.CUSTOM_CODE   = A.INOUT_CODE
		                       WHERE A.COMP_CODE      = @COMP_CODE
		                         AND A.DIV_CODE       = @DIV_CODE
		                         AND A.INOUT_DATE     = @PRODT_DT
		                         AND A.INOUT_TYPE     = N'2') B ON A.COMP_CODE      = B.COMP_CODE
		                                                        AND A.DIV_CODE      = B.DIV_CODE
		                                                        AND A.ITEM_CODE     = B.ITEM_CODE
		     ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList4" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList4
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
		    
		    DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형

		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		
		    SELECT A.COMP_CODE
		         , M2.COMP_NAME
		         , A.DIV_CODE
		         , M3.DIV_NAME
		         , (SELECT CONVERT(VARCHAR, DATEPART(YY, @PRODT_DT)) + '년 ' 
		                 + CONVERT(VARCHAR, DATEPART(MM, @PRODT_DT)) + '월 ' 
		                 + CONVERT(VARCHAR, DATEPART(DD, @PRODT_DT)) + '일 ('+ CASE DATEPART(DW, @PRODT_DT) 
		                                                                            WHEN 1 THEN '일요일'
		                                                                            WHEN 2 THEN '월요일'
		                                                                            WHEN 3 THEN '화요일'
		                                                                            WHEN 4 THEN '수요일'
		                                                                            WHEN 5 THEN '목요일'
		                                                                            WHEN 6 THEN '금요일'
		                                                                            WHEN 7 THEN '토요일'
		                                                                                   ELSE ''
		                                                                        END + ')') WORK_DATE
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , ISNULL(B1.BASIS_STOCK_Q, 0) 
		           + ISNULL(B.FR_DAY_TOT_Q, 0)   AS FR_DAY_TOT_Q     --전일재고
		         , ISNULL(B1.BASIS_STOCK_Q, 0) 
		           + ISNULL(B.FR_TOT_Q, 0)       AS FR_TOT_Q         --전월재고
		         , ISNULL(M.B01, '')             AS B01              --작업장1 이름
		         , ISNULL(C.P_DAY_01, 0)         AS P_DAY_01         --작업장1 생산량(일)
		         , ISNULL(C.P_MONTH_01, 0)       AS P_MONTH_01       --작업장1 생산량(월)
		         , ISNULL(M.B02, '')             AS B02              --작업장2 이름
		         , ISNULL(C.P_DAY_02, 0)         AS P_DAY_02         --작업장2 생산량(일)
		         , ISNULL(C.P_MONTH_02, 0)       AS P_MONTH_02       --작업장2 생산량(월)
		         , ISNULL(M.B03, '')             AS B03              --작업장3 이름
		         , ISNULL(C.P_DAY_03, 0)         AS P_DAY_03         --작업장3 생산량(일)
		         , ISNULL(C.P_MONTH_03, 0)       AS P_MONTH_03       --작업장3 생산량(월)
		         , ISNULL(M.B04, '')             AS B04              --작업장4 이름
		         , ISNULL(C.P_DAY_04, 0)         AS P_DAY_04         --작업장4 생산량(일)
		         , ISNULL(C.P_MONTH_04, 0)       AS P_MONTH_04       --작업장4 생산량(월)
		         , ISNULL(M.B05, '')             AS B05              --작업장5 이름
		         , ISNULL(C.P_DAY_05, 0)         AS P_DAY_05         --작업장5 생산량(일)
		         , ISNULL(C.P_MONTH_05, 0)       AS P_MONTH_05       --작업장5 생산량(월)
		         , ISNULL(M.B06, '')             AS B06              --작업장6 이름
		         , ISNULL(C.P_DAY_06, 0)         AS P_DAY_06         --작업장6 생산량(일)
		         , ISNULL(C.P_MONTH_06, 0)       AS P_MONTH_06       --작업장6 생산량(월)
		         , ISNULL(C.P_DAY_TOT, 0)        AS P_DAY_TOT        --생산량(일)
		         , ISNULL(C.P_MONTH_TOT, 0)      AS P_MONTH_TOT      --생산량(월)
		         , ISNULL(B.OUT_DAY_Q, 0)        AS OUT_DAY_Q        --출하량
		         , ISNULL(B1.BASIS_STOCK_Q, 0) 
		           + ISNULL(B.TOT_Q, 0)          AS TOT_Q            --재고량
		         , ISNULL(B.IN_MONTH_Q, 0)       AS IN_MONTH_Q       --당원누계(생산)
		         , ISNULL(B.OUT_MONTH_Q, 0)      AS OUT_MONTH_Q      --당월누계(출하)
		      FROM (SELECT DISTINCT A.ITEM_CODE
		                 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
		                        WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                            ELSE B.ITEM_NAME
		                    END  AS ITEM_NAME
		                 , B.SPEC
		                 , B.STOCK_UNIT
		                 , A.ITEM_ACCOUNT
		                 , A.SUPPLY_TYPE
		                 , A.COMP_CODE
		                 , A.DIV_CODE
						 , A.SORT_SEQ
		              --FROM            BPR200T A  WITH (NOLOCK)
		              FROM    (
										SELECT S1.COMP_CODE, S2.DIV_CODE, S2.SUPPLY_TYPE, S2.ITEM_ACCOUNT, S1.REF_CODE2 AS ITEM_CODE, S1.REF_CODE3 AS ITEM_NAME, S1.REF_CODE4 AS GROUP_CODE, MIN(S1.SORT_SEQ) AS SORT_SEQ
										FROM BSA100T S1  WITH (NOLOCK)
											 INNER JOIN BPR200T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.REF_CODE2=S2.ITEM_CODE AND S2.DIV_CODE ='02'
										WHERE S1.COMP_CODE=@COMP_CODE
										AND S1.MAIN_CODE='ZP01'
										AND S1.SUB_CODE != '$'
										AND S1.USE_YN 		= 'Y'
										AND S1.REF_CODE4   = @GROUP_CD	
										GROUP BY S1.COMP_CODE, S2.DIV_CODE, S2.SUPPLY_TYPE, S2.ITEM_ACCOUNT, S1.REF_CODE2 , S1.REF_CODE3, S1.REF_CODE4					  
								) A					  
		                   INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		--                   INNER JOIN BSA230T D  WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		--                                                      AND D.TREE_CODE = A.WORK_SHOP_CODE
		--                   INNER JOIN PBS300T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		--                                                      AND C.DIV_CODE  = A.DIV_CODE
		--                                                      AND C.ITEM_CODE = A.ITEM_CODE
		--                                                      AND C.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		             WHERE A.COMP_CODE      = @COMP_CODE
		               AND A.DIV_CODE       = @DIV_CODE
		               --AND D.GROUP_CD       = @GROUP_CD
		               AND B.USE_YN         = N'Y'
		               AND A.ITEM_ACCOUNT  IN (N'10', N'20')) A
		           LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(BASIS_Q) AS BASIS_STOCK_Q
		                        FROM BIV200T WITH (NOLOCK)
		                       WHERE COMP_CODE    = @COMP_CODE
		                         AND DIV_CODE     = @DIV_CODE
		                         AND BASIS_YYYYMM = SUBSTRING(@PRODT_DT,1,4) + '01'
		                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) B1 ON B1.COMP_CODE = A.COMP_CODE
		                                                                  AND B1.DIV_CODE  = A.DIV_CODE
		                                                                  AND B1.ITEM_CODE = A.ITEM_CODE
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.DIV_CODE
		                           , A.ITEM_CODE
		                           , SUM(CASE WHEN A.INOUT_TYPE IN (N'1', N'3')
		                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                           + SUM(CASE WHEN A.INOUT_TYPE = N'2'
		                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS FR_DAY_TOT_Q --전일재고
		
		                           , SUM(CASE WHEN A.INOUT_TYPE IN (N'1', N'3')
		                                           AND A.INOUT_DATE &lt; SUBSTRING(@PRODT_DT,1,6)+ '01' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                           + SUM(CASE WHEN A.INOUT_TYPE = N'2'
		                                           AND A.INOUT_DATE &lt; SUBSTRING(@PRODT_DT,1,6)+ '01' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS FR_TOT_Q --전월재고
		
		                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
		                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                                      
		                           + SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
		                                           AND A.INOUT_TYPE = N'3' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS OUT_DAY_Q --출하량
		
		                           , SUM(CASE WHEN A.INOUT_TYPE IN (N'1', N'3') THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END)
		                           + SUM(CASE WHEN A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS TOT_Q --재고량
		
		                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6)+'01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) AS IN_MONTH_Q --당월누계(생산)
		
		                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6) + '01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
		                                      ELSE 0 END) 
		                           + SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6) + '01'
		                                           AND A.INOUT_DATE &lt;= @PRODT_DT
		                                           AND A.INOUT_TYPE = N'3' THEN ISNULL(A.INOUT_Q, 0) * -1
		                                      ELSE 0 END) AS OUT_MONTH_Q --당월누계(출하)
		                        FROM            BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX02))
		                             INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                               AND B.DIV_CODE  = A.DIV_CODE
		                                                               AND B.ITEM_CODE = A.ITEM_CODE
		                       WHERE A.COMP_CODE      = @COMP_CODE
		                         AND A.DIV_CODE       = @DIV_CODE
		                         AND A.INOUT_METH     != N'3'
		                         AND A.INOUT_DATE     BETWEEN SUBSTRING(@PRODT_DT,1,4) + '0101' AND @PRODT_DT
		                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B ON A.COMP_CODE     = B.COMP_CODE
		                                                                       AND A.DIV_CODE      = B.DIV_CODE
		                                                                       AND A.ITEM_CODE     = B.ITEM_CODE
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.DIV_CODE
		                           , A.ITEM_CODE
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A01
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_01     --작업장1 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A01 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_01   --작업장1 월계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A02
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_02     --작업장2 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A02 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_02   --작업장2 월계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A03
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_03     --작업장3 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A03 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_03   --작업장3 월계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A04
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_04     --작업장4 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A04 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_04   --작업장4 월계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A05
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_05     --작업장5 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A05 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_05   --작업장5 월계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A06
		                                           AND A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_06     --작업장6 일계
		                           , SUM(CASE WHEN A.WORK_SHOP_CODE = B.A06 THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_MONTH_06   --작업장6 월계
		                           , SUM(CASE WHEN A.PRODT_DATE = @PRODT_DT THEN ISNULL(A.PRODT_Q, 0) 
		                                      ELSE 0 END) AS P_DAY_TOT        --일계
		                           , SUM(ISNULL(A.PRODT_Q, 0)) AS P_MONTH_TOT --월계
		                        FROM PMR110T A WITH(NOLOCK)
		                             LEFT JOIN (SELECT A.COMP_CODE
		                                             , A.TYPE_LEVEL AS DIV_CODE
		                                             , MAX(CASE WHEN A.ROWNUM = 1 THEN TREE_CODE ELSE '' END) A01
		                                             , MAX(CASE WHEN A.ROWNUM = 2 THEN TREE_CODE ELSE '' END) A02
		                                             , MAX(CASE WHEN A.ROWNUM = 3 THEN TREE_CODE ELSE '' END) A03
		                                             , MAX(CASE WHEN A.ROWNUM = 4 THEN TREE_CODE ELSE '' END) A04
		                                             , MAX(CASE WHEN A.ROWNUM = 5 THEN TREE_CODE ELSE '' END) A05
		                                             , MAX(CASE WHEN A.ROWNUM = 6 THEN TREE_CODE ELSE '' END) A06
		                                          FROM (
															SELECT S1.COMP_CODE, @DIV_CODE AS TYPE_LEVEL, S1.REF_CODE1 AS TREE_CODE, S2.TREE_NAME, S1.REF_CODE4 AS GROUP_CODE
																, ROW_NUMBER() OVER(ORDER BY S1.COMP_CODE, S2.TREE_NAME) AS ROWNUM
															FROM BSA100T S1 WITH(NOLOCK)
																 INNER JOIN BSA230T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S2.TYPE_LEVEL=@DIV_CODE AND S1.REF_CODE1=S2.TREE_CODE
															WHERE S1.COMP_CODE    =@COMP_CODE
															AND S1.MAIN_CODE   = 'ZP01'
															AND S1.USE_YN 		 = 'Y'
															AND S1.REF_CODE4     = @GROUP_CD
															GROUP BY S1.COMP_CODE, S1.REF_CODE1, S2.TREE_NAME, S1.REF_CODE4 	
														   
														) A
		                                         GROUP BY A.COMP_CODE, A.TYPE_LEVEL) B ON A.COMP_CODE   = B.COMP_CODE
		                                                                              AND A.DIV_CODE    = B.DIV_CODE
		                       WHERE A.COMP_CODE      = @COMP_CODE
		                         AND A.DIV_CODE       = @DIV_CODE
		                         AND A.PRODT_DATE     BETWEEN SUBSTRING(@PRODT_DT,1,6) + '01' AND @PRODT_DT
		                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) C ON A.COMP_CODE     = C.COMP_CODE
		                                                                       AND A.DIV_CODE      = C.DIV_CODE
		                                                                       AND A.ITEM_CODE     = C.ITEM_CODE
		           LEFT JOIN (SELECT A.COMP_CODE
		                           , A.TYPE_LEVEL AS DIV_CODE
		                           , MAX(CASE WHEN A.ROWNUM = 1 THEN TREE_NAME ELSE '' END) B01
		                           , MAX(CASE WHEN A.ROWNUM = 2 THEN TREE_NAME ELSE '' END) B02
		                           , MAX(CASE WHEN A.ROWNUM = 3 THEN TREE_NAME ELSE '' END) B03
		                           , MAX(CASE WHEN A.ROWNUM = 4 THEN TREE_NAME ELSE '' END) B04
		                           , MAX(CASE WHEN A.ROWNUM = 5 THEN TREE_NAME ELSE '' END) B05
		                           , MAX(CASE WHEN A.ROWNUM = 6 THEN TREE_NAME ELSE '' END) B06
		                      FROM (
										SELECT S1.COMP_CODE, @DIV_CODE AS TYPE_LEVEL, S1.REF_CODE1 AS TREE_CODE, S2.TREE_NAME, S1.REF_CODE4 AS GROUP_CODE
											, ROW_NUMBER() OVER(ORDER BY S1.COMP_CODE, S2.TREE_NAME) AS ROWNUM
										FROM BSA100T S1 WITH(NOLOCK)
											 INNER JOIN BSA230T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S2.TYPE_LEVEL=@DIV_CODE AND S1.REF_CODE1=S2.TREE_CODE
										WHERE S1.COMP_CODE    =@COMP_CODE
										AND S1.MAIN_CODE   = 'ZP01'
										AND S1.USE_YN 		= 'Y'
										AND S1.REF_CODE4     = @GROUP_CD
										GROUP BY S1.COMP_CODE, S1.REF_CODE1, S2.TREE_NAME, S1.REF_CODE4 								  
							  
									) A
		                     GROUP BY A.COMP_CODE, A.TYPE_LEVEL) M ON A.COMP_CODE   = M.COMP_CODE
		                                                          AND A.DIV_CODE    = M.DIV_CODE
		           LEFT JOIN BOR100T AS M2 WITH(NOLOCK) ON A.COMP_CODE      = M2.COMP_CODE
		           LEFT JOIN BOR120T AS M3 WITH(NOLOCK) ON A.COMP_CODE      = M3.COMP_CODE
		                                               AND A.DIV_CODE       = M3.DIV_CODE
		     ORDER BY A.COMP_CODE, A.DIV_CODE, A.SORT_SEQ, A.ITEM_CODE
		
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList5" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList5
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
	
	    DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형
	
	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    USER_ID   = @USER_ID
	
	    SET @RefItem = ISNULL(@RefItem, '0')
	
	    SELECT A.COMP_CODE
	         , A.DIV_CODE
	         , A.ITEM_CODE
	         , A.ITEM_NAME
	         , ISNULL(B1.BASIS_STOCK_Q, 0)
	           + ISNULL(B.FR_TOT_Q, 0)       AS FR_TOT_Q
	         , ISNULL(B.IN_DAY_Q, 0)         AS IN_DAY_Q
	         , ISNULL(B.OUT_DAY_Q, 0)        AS OUT_DAY_Q
	         , ISNULL(B1.BASIS_STOCK_Q, 0)
	           + ISNULL(B.TOT_Q, 0)          AS TOT_Q
	         , ISNULL(B.IN_MONTH_Q, 0)       AS IN_MONTH_Q
	         , ISNULL(B.OUT_MONTH_Q, 0)      AS OUT_MONTH_Q
	      FROM (SELECT DISTINCT A.ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
	                        WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                                            ELSE B.ITEM_NAME
	                    END  AS ITEM_NAME
	                 , B.SPEC
	                 , B.STOCK_UNIT
	                 , A.ITEM_ACCOUNT
	                 , A.SUPPLY_TYPE
	                 , A.COMP_CODE
	                 , A.DIV_CODE
	              FROM            BPR200T A  WITH (NOLOCK)
	                   INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                      AND B.ITEM_CODE = A.ITEM_CODE
	                   INNER JOIN BSA230T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
	                                                      AND C.TREE_CODE = A.WORK_SHOP_CODE
	             WHERE A.COMP_CODE      = @COMP_CODE
	               AND A.DIV_CODE       = @DIV_CODE
	               AND C.GROUP_CD       = @GROUP_CD
	               AND B.USE_YN         = N'Y'
	               AND    A.ITEM_ACCOUNT  IN (N'40')) A
	           LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(BASIS_Q) AS BASIS_STOCK_Q
	                        FROM BIV200T WITH (NOLOCK)
	                       WHERE COMP_CODE    = @COMP_CODE
	                         AND DIV_CODE     = @DIV_CODE
	                         AND BASIS_YYYYMM = SUBSTRING(@PRODT_DT,1,4) + '01'
	                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) B1 ON B1.COMP_CODE = A.COMP_CODE
	                                                                  AND B1.DIV_CODE  = A.DIV_CODE
	                                                                  AND B1.ITEM_CODE = A.ITEM_CODE
	           LEFT JOIN (SELECT A.COMP_CODE
	                           , A.DIV_CODE
	                           , A.ITEM_CODE
	                           , SUM(CASE WHEN A.INOUT_TYPE = N'1'
	                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) +
	                             SUM(CASE WHEN A.INOUT_TYPE = N'2'
	                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0) * -1
	                                      ELSE 0 END) AS FR_TOT_Q     --전일재고
	                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
	                                           AND A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS IN_DAY_Q
	                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
	                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS OUT_DAY_Q
	                           , SUM(CASE WHEN A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) +
	                             SUM(CASE WHEN A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0) * -1
	                                      ELSE 0 END) AS TOT_Q
	                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6)+'01'
	                                           AND A.INOUT_DATE &lt;= @PRODT_DT
	                                           AND A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS IN_MONTH_Q
	                           , SUM(CASE WHEN A.INOUT_DATE &gt;= SUBSTRING(@PRODT_DT,1,6)+'01'
	                                           AND A.INOUT_DATE &lt;= @PRODT_DT
	                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS OUT_MONTH_Q
	                        FROM            BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX02))
	                             INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                               AND B.DIV_CODE  = A.DIV_CODE
	                                                               AND B.ITEM_CODE = A.ITEM_CODE
	                       WHERE A.COMP_CODE      = @COMP_CODE
	                         AND A.DIV_CODE       = @DIV_CODE
	                         AND A.INOUT_METH     != N'3'
	                         AND A.INOUT_DATE     BETWEEN SUBSTRING(@PRODT_DT,1,4) + '0101' AND @PRODT_DT
	                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B ON A.COMP_CODE     = B.COMP_CODE
	                                                                       AND A.DIV_CODE      = B.DIV_CODE
	                                                                       AND A.ITEM_CODE     = B.ITEM_CODE
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
	     
	</select>
	<select id="s_pmr140rkrv_hsServiceImpl.selectList6" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList6
		DECLARE @COMP_CODE      NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE       NVARCHAR(08)    -- (필수) 사업장
		          , @PRODT_DT       NVARCHAR(08)    -- (필수) 작업일
		          , @USER_ID        NVARCHAR(10)    -- (필수) 사용자ID
		          , @PRODT_DT_TO    NVARCHAR(08)    -- (필수) 작업일 다음날
		          , @GROUP_CD       NVARCHAR(01)    -- (필수) 작업그룹
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @PRODT_DT  = #{PRODT_DT}
		    SET @USER_ID   = #{S_USER_ID}
		    SET @GROUP_CD  = #{GROUP_CD}
		    
		 DECLARE @RefItem        NVARCHAR(01)    -- 사용자 품목명 참조 유형

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    USER_ID   = @USER_ID
	
	    SET @RefItem = ISNULL(@RefItem, '0')
	
	    SELECT A.COMP_CODE
	         , A.DIV_CODE
	         , A.ITEM_CODE
	         , A.ITEM_NAME
	         , ISNULL(B1.BASIS_STOCK_Q, 0)
	           + ISNULL(B.FR_TOT_Q, 0)       AS FR_TOT_Q
	         , ISNULL(B.IN_DAY_Q, 0)         AS IN_DAY_Q
	         , ISNULL(B.OUT_DAY_Q, 0)        AS OUT_DAY_Q
	         , ISNULL(B1.BASIS_STOCK_Q, 0)
	           + ISNULL(B.TOT_Q, 0)          AS TOT_Q
	      FROM (SELECT DISTINCT A.ITEM_CODE
	                 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
	                        WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                        WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                                            ELSE B.ITEM_NAME
	                    END  AS ITEM_NAME
	                 , B.SPEC
	                 , B.STOCK_UNIT
	                 , A.ITEM_ACCOUNT
	                 , A.SUPPLY_TYPE
	                 , A.COMP_CODE
	                 , A.DIV_CODE
	              FROM            BPR200T A  WITH (NOLOCK)
	                   INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                      AND B.ITEM_CODE = A.ITEM_CODE
	                   INNER JOIN BSA230T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
	                                                      AND C.TREE_CODE = A.WORK_SHOP_CODE
	             WHERE A.COMP_CODE      = @COMP_CODE
	               AND A.DIV_CODE       = @DIV_CODE
	               AND C.GROUP_CD       = @GROUP_CD
	               AND B.USE_YN         = N'Y'
	               AND A.ITEM_ACCOUNT  IN (N'50')) A
	           LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(BASIS_Q) AS BASIS_STOCK_Q
	                        FROM BIV200T WITH (NOLOCK)
	                       WHERE COMP_CODE    = @COMP_CODE
	                         AND DIV_CODE     = @DIV_CODE
	                         AND BASIS_YYYYMM = SUBSTRING(@PRODT_DT,1,4) + '01'
	                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) B1 ON B1.COMP_CODE = A.COMP_CODE
	                                                                  AND B1.DIV_CODE  = A.DIV_CODE
	                                                                  AND B1.ITEM_CODE = A.ITEM_CODE
	           LEFT JOIN (SELECT A.COMP_CODE
	                           , A.DIV_CODE
	                           , A.ITEM_CODE
	                           , SUM(CASE WHEN A.INOUT_TYPE = N'1' 
	                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) +
	                             SUM(CASE WHEN A.INOUT_TYPE = N'2' 
	                                           AND A.INOUT_DATE &lt; @PRODT_DT THEN ISNULL(A.INOUT_Q, 0) * -1
	                                      ELSE 0 END) AS FR_TOT_Q     --전일재고
	                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
	                                           AND A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS IN_DAY_Q
	                           , SUM(CASE WHEN A.INOUT_DATE = @PRODT_DT 
	                                           AND A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) AS OUT_DAY_Q
	                           , SUM(CASE WHEN A.INOUT_TYPE = N'1' THEN ISNULL(A.INOUT_Q, 0)
	                                      ELSE 0 END) +
	                             SUM(CASE WHEN A.INOUT_TYPE = N'2' THEN ISNULL(A.INOUT_Q, 0) * -1
	                                      ELSE 0 END) AS TOT_Q
	                        FROM            BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX02))
	                             INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                               AND B.DIV_CODE  = A.DIV_CODE
	                                                              AND B.ITEM_CODE = A.ITEM_CODE
	                       WHERE A.COMP_CODE      = @COMP_CODE
	                         AND A.DIV_CODE       = @DIV_CODE
	                         AND A.INOUT_METH     != N'3'
	                         AND A.INOUT_DATE     BETWEEN SUBSTRING(@PRODT_DT,1,4) + '0101' AND @PRODT_DT
	                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B ON A.COMP_CODE     = B.COMP_CODE
	                                                                       AND A.DIV_CODE      = B.DIV_CODE
	                                                                       AND A.ITEM_CODE     = B.ITEM_CODE
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
	
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList1_T" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList1_T
		SELECT  'SKCC'                    AS COMP_CODE
	         , '에이치설퍼(주)'	          AS COMP_NAME
	         ,  '02'                      AS DIV_CODE
	         ,  '울산공장'                AS DIV_NAME
	         ,  '2020년 8월 3일 (월요일)' AS WORK_DATE
	         ,  'WC20'                    AS WORK_SHOP_CODE
	         ,  'A-1호기'                 AS WORK_SHOP_NAME
	         ,  '1-21-105'                AS ITEM_CODE
	         ,  'SB'                      AS ITEM_NAME
	         ,  51.6                      AS FR_PRODT_Q
	         ,  1                         AS WORK_MAN
	         ,  '8:00:00'                 AS FR_SERIAL_NO
	         ,  '8:00:00'                 AS TO_SERIAL_NO
	         ,  15.5                      AS WORK_TIME
	         ,  15.5                      AS MAN_HOUR
	         ,  15.6                      AS PRODT_Q
	         ,  3.329032 AS PRODT_QR
	         ,  0                         AS TO_PRODT_Q
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList2_T" parameterType="Map" resultType="rMap">
		--s_pmr140rkrv_hsServiceImpl.selectList2_T
		SELECT  'SKCC'        AS COMP_CODE
	         ,  '02'          AS DIV_CODE
	         ,   '1-20-100'   AS ITEM_CODE
	         ,  'SG'          AS ITEM_NAME
	         , 0              AS IN_DAY_Q
	         , 0              AS IN_MONTH_Q
	         , 2293.2         AS IN_TOT_Q
	         , 2              AS OUT_DAY_Q
	         , 2              AS OUT_MONTH_Q
	         , 1926.005       AS OUT_TOT_Q
	         , 490.195        AS TOT_Q
	</select>
	
	<select id="s_pmr140rkrv_hsServiceImpl.selectList3_T" parameterType="Map" resultType="rMap">
		--
		SELECT 'SKCC'                          AS COMP_CODE
	         , '02'                            AS DIV_CODE
	         , '1-20-100'                      AS ITEM_CODE
	         , 'SG'                            AS ITEM_NAME
	         , '14014'                         AS INOUT_CODE
	         , '칸토덴카화인프로덕츠한국 (주)'         AS INOUT_NAME
	         , 2                               AS INOUT_Q
	</select>
</mapper>