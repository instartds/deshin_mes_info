<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gop300ukrvServiceImpl">
	<select id="gop300ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		DECLARE @I INT, @J INT,
				@MAX_OPERATION_COUNT INT, @MAX_RUN_COUNT INT, @MIN_RUN_COUNT INT
				
		SELECT @MAX_OPERATION_COUNT = MAX(CONVERT(INT, OPERATION_COUNT)),
			   @MAX_RUN_COUNT = MAX(CONVERT(INT, RUN_COUNT)) ,
			   @MIN_RUN_COUNT = MIN(CONVERT(INT, RUN_COUNT)) 
		FROM  GOP300T
		WHERE COMP_CODE = #{S_COMP_CODE}
  		  AND OPERATION_DATE = #{OPERATION_DATE}
  		  AND ROUTE_CODE = #{ROUTE_CODE}
  		
		
		CREATE TABLE #TMP_OPERATION (
			OPERATION_COUNT NVARCHAR(20),
			RUN_COUNT NVARCHAR(20),
		)  
		
		SET @I = 1
		WHILE (@I &lt;=@MAX_OPERATION_COUNT)
		BEGIN
			SET @J = @MIN_RUN_COUNT
			WHILE (@J &lt;=@MAX_RUN_COUNT)
			BEGIN
				INSERT #TMP_OPERATION (OPERATION_COUNT, RUN_COUNT) VALUES (CONVERT(NVARCHAR(20), @I), CONVERT(NVARCHAR(20), @J) )
				SET @J=@J+1
			END
			SET @I=@I+1
		END
		
		
		SELECT USER_IDX
		     , USER_NAME
		     , PERSON_NUMB
		     , REPLACE(ATT_DATE,'-','') AS ATT_DATE
		     , IN_TIME
		     , OUT_TIME 
		  INTO #AttTimeBusV
		  FROM AttTimeBusV
		 WHERE ATT_DATE =  CONVERT(NVARCHAR(10), CONVERT(DATETIME,#{OPERATION_DATE},112),120 )
		 
			SELECT	T.OPERATION_COUNT AS ROW_NUM, 
					T.RUN_COUNT AS COL_NUM,
					GOP.OPERATION_COUNT, 
					GOP.RUN_COUNT,					
					@MIN_RUN_COUNT AS MIN_RUN_COUNT,	
					@MAX_RUN_COUNT AS MAX_RUN_COUNT,					
					COUNT(GOP.RUN_COUNT) OVER (PARTITION BY T.OPERATION_COUNT) AS SUBTOT_RUN_CNT,
					MAX(GOP.OP_MAX_RUN_COUNT) OVER (PARTITION BY T.OPERATION_COUNT) AS OP_MAX_RUN_COUNT,
					MIN(GOP.RUN_COUNT) OVER (PARTITION BY T.OPERATION_COUNT) AS OP_MIN_RUN_COUNT,
					
					GOP.COMP_CODE, 
					GOP.DIV_CODE,  
					GOP.OPERATION_DATE,  
					GOP.OFFICE_CODE,  
					GOP.OFFICE_NAME,
					GOP.ROUTE_CODE,  
					GOP.OPERATION_COUNT,
					GOP.RUN_COUNT,
					GOP.ROUTE_NUM, 
					GOP.ROUTE_NAME, 
					GOP.VEHICLE_CODE,
					GOP.VEHICLE_NAME,
					GOP.DEPARTURE_TIME,
					GOP.RUN_DEPARTURE_TIME,
					MIN(GOP.DUTY_FR_TIME) OVER (PARTITION BY T.OPERATION_COUNT) AS DUTY_FR_TIME,
					MAX(GOP.DUTY_TO_TIME) OVER (PARTITION BY T.OPERATION_COUNT) AS DUTY_TO_TIME,
					MIN(GOP.SYS_DUTY_FR_TIME) OVER (PARTITION BY T.OPERATION_COUNT) AS SYS_DUTY_FR_TIME,
					MAX(GOP.SYS_DUTY_TO_TIME) OVER (PARTITION BY T.OPERATION_COUNT) AS SYS_DUTY_TO_TIME,
					GOP.DRIVER_CODE,
					GOP.NAME,
					GOP.PERSON_NUMB,
					GOP.WORK_TEAM_CODE,
					GOP.CHANGE_FLAG,
					GOP.PLAN_VEHICLE_CODE,
					GOP.PLAN_VEHICLE_NAME,
					GOP.PLAN_DRIVER_CODE,
					GOP.PLAN_DRIVER_NAME,
					GOP.DEPARTURE_DATE,
		        	GOP.RUN_DEPARTURE_DATE,
		        	GOP.DUTY_FR_DATE,
		        	GOP.DUTY_TO_DATE,
		        	GOP.SYS_DUTY_FR_DATE,
		        	GOP.SYS_DUTY_TO_DATE,
		        	GOP.OTHER_VEHICLE_YN,
		        	GOP.NOTINSERVICE_YN,
		        	GOP.CHANGE_REASON,
		        	GOP.EMPLOY_TYPE,
		        	GOP.CONFIRM_YN,
		        	GOP.REMARK
			FROM #TMP_OPERATION AS T
			LEFT JOIN (	
			SELECT 
					MAX(CONVERT(NUMERIC(18,0), A.RUN_COUNT))OVER(PARTITION BY	A.COMP_CODE, 
																				A.DIV_CODE, 
																				A.OPERATION_DATE, 
																				A.OPERATION_COUNT) AS OP_MAX_RUN_COUNT,
					MIN(CONVERT(NUMERIC(18,0), A.RUN_COUNT))OVER(PARTITION BY	A.COMP_CODE, 
																				A.DIV_CODE, 
																				A.OPERATION_DATE, 
																				A.OPERATION_COUNT) AS OP_MIN_RUN_COUNT,
					A.COMP_CODE, 
					A.DIV_CODE,  
					A.OPERATION_DATE,  
					A.OFFICE_CODE,  
					B1.OFFICE_NAME,
					A.ROUTE_CODE,  
					A.OPERATION_COUNT,
					A.RUN_COUNT,
					R.ROUTE_NUM, 
					R.ROUTE_NAME, 
					A.VEHICLE_CODE,
					V.VEHICLE_NAME,
					CASE WHEN ISNULL(A.DEPARTURE_TIME,'') != '' 			THEN left(A.DEPARTURE_TIME, 2)+':'+SUBSTRING(A.DEPARTURE_TIME,3,2) ELSE '' END DEPARTURE_TIME,
					CASE WHEN ISNULL(A.RUN_DEPARTURE_TIME,'') != '' 		THEN left(A.RUN_DEPARTURE_TIME, 2)+':'+SUBSTRING(A.RUN_DEPARTURE_TIME,3,2) ELSE '' END RUN_DEPARTURE_TIME,
					
					
					CASE WHEN ISNULL(A.DUTY_FR_TIME,'') != '' THEN left(A.DUTY_FR_TIME, 2)+':'+SUBSTRING(A.DUTY_FR_TIME,3,2) ELSE ''END AS DUTY_FR_TIME,
					CASE WHEN ISNULL(A.DUTY_TO_TIME,'') != '' 			THEN left(A.DUTY_TO_TIME, 2)+':'+SUBSTRING(A.DUTY_TO_TIME,3,2) ELSE '' END  AS  DUTY_TO_TIME,
					
					CONVERT(NVARCHAR(5), G.IN_TIME, 114)  AS SYS_DUTY_FR_TIME,
					CONVERT(NVARCHAR(5), G.OUT_TIME, 114) AS SYS_DUTY_TO_TIME,
					A.DRIVER_CODE,
					H.NAME,
					H.PERSON_NUMB,
					A.WORK_TEAM_CODE,
					CASE WHEN A.OTHER_VEHICLE_YN = 'Y' THEN 'OTHER'
						 WHEN A.NOTINSERVICE_YN = 'Y' THEN 'NOTINSERVICE'		
						 ELSE ''
					END AS CHANGE_FLAG,
					A.PLAN_VEHICLE_CODE,
					V1.VEHICLE_NAME AS PLAN_VEHICLE_NAME,
					A.PLAN_DRIVER_CODE,
					H1.NAME AS PLAN_DRIVER_NAME,
					A.DEPARTURE_DATE,
		        	A.RUN_DEPARTURE_DATE,
		        	A.DUTY_FR_DATE,
		        	A.DUTY_TO_DATE,
		        	A.SYS_DUTY_FR_DATE,
		        	A.SYS_DUTY_TO_DATE,
		        	A.OTHER_VEHICLE_YN,
		        	A.NOTINSERVICE_YN,
		        	A.CHANGE_REASON,
		        	H.EMPLOY_TYPE ,
		        	A.CONFIRM_YN,
		        	A.REMARK
				FROM GOP300T A 
				LEFT JOIN GRT100T R ON A.COMP_CODE = R.COMP_CODE
				                    AND A.DIV_CODE = R.DIV_CODE
				                    AND A.ROUTE_CODE = R.ROUTE_CODE
				LEFT JOIN HUM100T H ON A.COMP_CODE = H.COMP_CODE
								   AND A.DIV_CODE = H.DIV_CODE
								   AND A.DRIVER_CODE = H.PERSON_NUMB
				LEFT JOIN HUM100T H1 ON A.COMP_CODE = H1.COMP_CODE
								   AND A.DIV_CODE = H1.DIV_CODE
								   AND A.PLAN_DRIVER_CODE = H1.PERSON_NUMB
				LEFT JOIN GVE100T V ON A.COMP_CODE = V.COMP_CODE
				                    AND A.DIV_CODE = V.DIV_CODE
				                    AND A.VEHICLE_CODE = V.VEHICLE_CODE 
				LEFT JOIN GVE100T V1 ON A.COMP_CODE = V1.COMP_CODE
				                    AND A.DIV_CODE = V1.DIV_CODE
				                    AND A.PLAN_VEHICLE_CODE = V1.VEHICLE_CODE 
				LEFT JOIN #AttTimeBusV G ON A.DRIVER_CODE = G.PERSON_NUMB
								 AND A.OPERATION_DATE = G.ATT_DATE
				LEFT JOIN (SELECT SUB_CODE, CODE_NAME AS OFFICE_NAME
							 FROM BSA100T  
							WHERE COMP_CODE = 'MASTER'
							  AND MAIN_CODE = 'GO01'
						  )		 B1 ON A.OFFICE_CODE = B1.SUB_CODE
				WHERE A.COMP_CODE = #{S_COMP_CODE}
		  		  AND A.OPERATION_DATE = #{OPERATION_DATE}
		  		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  		 ) AS GOP ON T.OPERATION_COUNT = GOP.OPERATION_COUNT
						AND T.RUN_COUNT = GOP.RUN_COUNT
		  		ORDER BY CONVERT(NUMERIC(18,0), T.OPERATION_COUNT), CONVERT(NUMERIC(18,0), T.RUN_COUNT)
		  		
		DROP TABLE #TMP_OPERATION
	</select>
	<select id="gop300ukrvServiceImpl.summary" parameterType="Map" resultType="rMap">
		/* gop300ukrvServiceImpl.summary */
		SELECT	  T.PLAN_CNT			/*운행계획 */
				, T.OPERATION_CNT	 	/*운행 */
				, T.NOTINSERVICE_CNT	/*운휴 */
				, T.NONE_DRIVER			/*기사미배정 */
				, T.ASSIGNED_DRIVER		/*기사배정 */
				, (CASE WHEN T.PLAN_CNT != 0 	 THEN (T.OPERATION_CNT/CONVERT(FLOAT, T.PLAN_CNT)*100) ELSE 0 END ) AS OPERATION_RATE							/* 운행율 */
				, (CASE WHEN T.PLAN_CNT != 0		 THEN (T.NOTINSERVICE_CNT/CONVERT(FLOAT, T.PLAN_CNT)*100) ELSE 0 END ) AS NOTINSERVICE_RATE					/* 운휴율 */
				, (CASE WHEN T.OPERATION_CNT != 0 THEN (T.ASSIGNED_DRIVER/CONVERT(FLOAT, T.OPERATION_CNT)*100) ELSE 0 END ) AS ASSIGNED_DRIVER_RATE 	/* 기사배정율*/
				, (CASE WHEN T.OPERATION_CNT != 0 THEN (T.NONE_DRIVER/CONVERT(FLOAT, T.OPERATION_CNT)*100) ELSE 0 END ) AS NONE_DRIVER_RATE 			/* 기사미배정율*/
				
		FROM (
		SELECT SUM(CASE WHEN ISNULL(C.OPERATION_COUNT,'') != '' THEN 1 ELSE 0 END) AS PLAN_CNT,  
			   SUM(CASE WHEN A.NOTINSERVICE_YN != 'Y' THEN 1 ELSE 0 END) AS OPERATION_CNT,	
			   SUM(CASE WHEN A.NOTINSERVICE_YN = 'Y'  THEN 1 ELSE 0 END) AS NOTINSERVICE_CNT,	 
			   SUM(CASE WHEN ISNULL(A.DRIVER_CODE,'')  = '' AND A.NOTINSERVICE_YN = 'N' THEN 1 ELSE 0 END) AS NONE_DRIVER,	 
			   SUM(CASE WHEN ISNULL(A.DRIVER_CODE,'') != '' AND A.NOTINSERVICE_YN = 'N' THEN 1 ELSE 0 END) AS ASSIGNED_DRIVER	 
		FROM GOP300T A
		INNER JOIN (
			SELECT  COMP_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT, MAX(RUN_COUNT) AS RUN_COUNT
			FROM GOP300T
			WHERE COMP_CODE = #{S_COMP_CODE}
	  		  AND OPERATION_DATE = #{OPERATION_DATE}
	  		  AND ROUTE_CODE = #{ROUTE_CODE}
	  		  AND OTHER_VEHICLE_YN = 'N'
	  		GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT
	  	 ) AS B		ON  B.COMP_CODE		 	= A.COMP_CODE 
	  	 			AND B.OPERATION_DATE 	= A.OPERATION_DATE 
	  	 			AND B.ROUTE_CODE	 	= A.ROUTE_CODE
	  	 			AND B.OPERATION_COUNT 	= A.OPERATION_COUNT
	  	 			AND B.RUN_COUNT 		= A.RUN_COUNT
	  	 LEFT JOIN (
	  	 	SELECT  COMP_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT
			FROM GOP200T
			WHERE COMP_CODE = #{S_COMP_CODE}
	  		  AND OPERATION_DATE = #{OPERATION_DATE}
	  		  AND ROUTE_CODE = #{ROUTE_CODE}
	  		  AND OTHER_VEHICLE_YN = 'N'
	  		GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT
	  	 ) 	AS C 	ON  C.COMP_CODE		 	= A.COMP_CODE 
	  	 			AND C.OPERATION_DATE 	= A.OPERATION_DATE 
	  	 			AND C.ROUTE_CODE	 	= A.ROUTE_CODE
	  	 			AND C.OPERATION_COUNT 	= A.OPERATION_COUNT
	  	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  	  AND A.OPERATION_DATE = #{OPERATION_DATE}
	  	  AND A.ROUTE_CODE = #{ROUTE_CODE}
	  	  AND A.OTHER_VEHICLE_YN = 'N' 
	  	) AS T
	</select>
	<select id="gop300ukrvServiceImpl.busList" parameterType="Map" resultType="rMap">
		SELECT 
			A.COMP_CODE, 
			A.DIV_CODE,  
			A.VEHICLE_CODE,
			A.VEHICLE_NAME
		FROM GVE100T A
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
			AND A.VEHICLE_CODE = #{VEHICLE_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
			AND A.VEHICLE_NAME LIKE '%'+ #{VEHICLE_NAME} +'%'
		</if>
		ORDER BY VEHICLE_NAME
	</select>
	<update id="gop300ukrvServiceImpl.update" parameterType="Map">
		UPDATE GOP300T
		SET 
			<if test="@foren.Ognl@isExists(_parameter, 'DEPARTURE_DATE')">
			DEPARTURE_DATE = #{DEPARTURE_DATE},
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'DEPARTURE_TIME')">
        	DEPARTURE_TIME = #{DEPARTURE_TIME},
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'DUTY_FR_DATE')">
        	DUTY_FR_DATE = #{DUTY_FR_DATE},
			</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'DUTY_FR_TIME')">
        	DUTY_FR_TIME = #{DUTY_FR_TIME},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'DUTY_TO_DATE')">
        	DUTY_TO_DATE = #{DUTY_TO_DATE},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'DUTY_TO_TIME')">
        	DUTY_TO_TIME = #{DUTY_TO_TIME},       
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'NOTINSERVICE_YN')">
        	NOTINSERVICE_YN = #{NOTINSERVICE_YN},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'CHANGE_REASON')">
        	CHANGE_REASON = #{CHANGE_REASON},
			</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'DRIVER_CODE')">
			DRIVER_CODE = #{DRIVER_CODE},
			</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'VEHICLE_CODE')">
			VEHICLE_CODE = #{VEHICLE_CODE},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'OTHER_VEHICLE_YN')">
			OTHER_VEHICLE_YN = #{OTHER_VEHICLE_YN},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'WORK_TEAM_CODE')">
			WORK_TEAM_CODE = #{WORK_TEAM_CODE},
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'REMARK')">
			REMARK = #{REMARK},
        	</if>
        	
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE} 
		  AND DIV_CODE = #{DIV_CODE}  
		  AND ROUTE_CODE = #{ROUTE_CODE} 
		  AND OPERATION_DATE = #{OPERATION_DATE}  
		  AND OPERATION_COUNT = #{OPERATION_COUNT} 
		  AND RUN_COUNT = #{RUN_COUNT}
		  AND CONFIRM_YN != 'Y'
	</update>
	
	<select id="gop300ukrvServiceImpl.selectConfirmList" parameterType="Map" resultType="rMap">
		/* gop300ukrvServiceImpl.selectList */
		SELECT 
			G1.DIV_CODE,  
			G1.OPERATION_DATE,  
			G1.ROUTE_GROUP,
			G1.ROUTE_CODE,  
			G1.CONFIRM_YN,
			CASE WHEN G1.CONFIRM_YN = 'Y' THEN '마감' 
				 ELSE ''
			END CONFIRM_YN_TEXT,
			R.ROUTE_NUM
		FROM GOP300T G1
		LEFT JOIN GRT100T R  ON G1.COMP_CODE = R.COMP_CODE
							AND G1.DIV_CODE = R.DIV_CODE							
							AND G1.ROUTE_CODE = R.ROUTE_CODE
		WHERE G1.COMP_CODE = #{S_COMP_CODE}
		  AND G1.DIV_CODE = #{S_DIV_CODE}
		  <if test="@foren.Ognl@isNotEmpty(OPERATION_DATE)">
		  AND G1.OPERATION_DATE = #{OPERATION_DATE}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		  AND G1.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		  AND G1.ROUTE_CODE = #{ROUTE_CODE}
		  </if>
		  
		GROUP BY G1.DIV_CODE, G1.ROUTE_GROUP, R.ROUTE_NUM, G1.ROUTE_CODE, G1.OPERATION_DATE, G1.CONFIRM_YN
		ORDER BY G1.DIV_CODE, G1.ROUTE_GROUP, R.ROUTE_NUM, G1.OPERATION_DATE
	</select>
	
	<update id="gop300ukrvServiceImpl.updateConfirm" parameterType="Map">
		/* gop300ukrvServiceImpl.updateConfirm */
		UPDATE GOP300T
		SET 
			CONFIRM_YN = #{CONFIRM_YN},
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE} 
		  AND DIV_CODE = #{DIV_CODE}  
		  AND OPERATION_DATE = #{OPERATION_DATE}  		   
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  
		UPDATE GOP200T
		SET 
			CONFIRM_YN = #{CONFIRM_YN},
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE} 
		  AND DIV_CODE = #{DIV_CODE}  
		  AND OPERATION_DATE = #{OPERATION_DATE}  		   
		  AND ROUTE_CODE = #{ROUTE_CODE}
	</update>
	<select id="gop300ukrvServiceImpl.selectRouteList" parameterType="Map" resultType="rMap">
		/* gop300ukrvServiceImpl.selectRouteList */
		SELECT 
			A.COMP_CODE,
			A.DIV_CODE,
			A.ROUTE_CODE,
			A.ROUTE_NUM,
			A.ROUTE_NAME,
			A.ROUTE_OPEN_DATE,
			A.ROUTE_EXPIRE_DATE,
			A.ROUTE_STATUS,
			B.ACTUAL_CNT,
			B.RUN_CNT_MAX,
			G.CONFIRM_YN,
			CASE WHEN G.CONFIRM_YN = 'Y' THEN '마감' 
				 ELSE ''
			END CONFIRM_YN_TEXT ,
			A.REMARK  
		FROM GRT100T A
		LEFT JOIN GRT110T B ON  A.COMP_CODE = B.COMP_CODE
							AND A.DIV_CODE = B.DIV_CODE
							AND A.ROUTE_CODE  = B.ROUTE_CODE
		LEFT JOIN (SELECT DISTINCT COMP_CODE, DIV_CODE, ROUTE_CODE, CONFIRM_YN
				   FROM GOP300T 
				   WHERE COMP_CODE = #{S_COMP_CODE}
		  			 AND DIV_CODE = #{DIV_CODE}
					 AND OPERATION_DATE = #{OPERATION_DATE} )
				   G ON A.COMP_CODE = G.COMP_CODE
							AND A.DIV_CODE = G.DIV_CODE
							AND A.ROUTE_CODE = G.ROUTE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{DIV_CODE}
		  AND A.ROUTE_OPEN_DATE &lt;= #{OPERATION_DATE}
		  AND ISNULL(A.ROUTE_EXPIRE_DATE, '29991231')  &gt; #{OPERATION_DATE}
		  AND B.ROUTE_START_DATE &lt;= #{OPERATION_DATE}
		  AND B.ROUTE_END_DATE &gt;= #{OPERATION_DATE}
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		  AND B.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>
		  
		  ORDER BY ROUTE_NUM
	</select>  
</mapper>