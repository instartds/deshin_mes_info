<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mre100ukrvServiceImpl">
    <select id="mre100ukrvServiceImpl.fnExchgRateO" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnExchgRateO 
        BEGIN    
            SET NOCOUNT ON    
            SET ARITHABORT ON    
            
            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @AC_DATE                NVARCHAR(20)        --(필수) 기준일자/기준월
                  , @MONEY_UNIT             NVARCHAR(20)        --(필수) 화폐단위
                  
            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @AC_DATE         = #{AC_DATE}
            SET @MONEY_UNIT      = #{MONEY_UNIT}
        
            SELECT CASE WHEN A.EXCHG_BASE = '1' THEN ISNULL(B.BASE_EXCHG, 1)
                        WHEN A.EXCHG_BASE = '2' THEN ISNULL(C.BASE_EXCHG, 1)
                                                ELSE 1
                    END AS BASE_EXCHG
              FROM           ABA100T AS A WITH(NOLOCK)
                   LEFT JOIN (
                              SELECT B.COMP_CODE
                                   , B.BASE_EXCHG
                                FROM BCM510T AS B WITH (NOLOCK)
                               WHERE B.COMP_CODE  = @COMP_CODE
                                 AND B.AC_DATE    = @AC_DATE
                                 AND B.MONEY_UNIT = @MONEY_UNIT
                             ) AS B ON B.COMP_CODE = A.COMP_CODE
                   LEFT JOIN (
                              SELECT C.COMP_CODE
                                   , C.BASE_EXCHG
                                FROM BCM510T AS C WITH (NOLOCK)
                               WHERE C.COMP_CODE  = @COMP_CODE
                                 AND C.AC_DATE    = SUBSTRING(@AC_DATE, 1, 6)
                                 AND C.MONEY_UNIT = @MONEY_UNIT
                             ) AS C ON C.COMP_CODE = A.COMP_CODE
             WHERE A.COMP_CODE = @COMP_CODE
             
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>   
    
    <select id="mre100ukrvServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">
        /*mre100ukrv.Cmre100ukrv 구매요청번호 pop*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}    
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId
        
            SET @RefItem = ISNULL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT  REPLACE(
                    REPLACE(
                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PO_REQ_DATE, 1, 4))
                                       , 'MM',   SUBSTRING(A.PO_REQ_DATE, 5, 2))
                                       , 'DD',   SUBSTRING(A.PO_REQ_DATE, 7, 2))        AS PO_REQ_DATE
                  , A.SUPPLY_TYPE                                                       AS SUPPLY_TYPE
                  , A.PO_REQ_NUM                                                        AS PO_REQ_NUM        
                  , A.TREE_CODE                                                         AS DEPT_CODE
                  , F.TREE_NAME                                                         AS DEPT_NAME      
                  , A.PERSON_NUMB                                                       AS PERSON_NUMB    
                  , C.USER_NAME                                                         AS PERSON_NAME        
                  , A.MONEY_UNIT                                                        AS MONEY_UNIT
                  , A.EXCHG_RATE_O                                                      AS EXCHG_RATE_O     
                  , A.DIV_CODE                                                          AS DIV_CODE   
                  , D.COMP_NAME
            FROM                MRE100T A WITH  (NOLOCK)          
                    LEFT  JOIN  BSA300T C WITH  (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                        AND C.USER_ID     = A.PERSON_NUMB
                    LEFT  JOIN  BOR100T D WITH  (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                    INNER JOIN  MRE110T E WITH  (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                        AND E.DIV_CODE    = A.DIV_CODE
                                                        AND E.PO_REQ_NUM  = A.PO_REQ_NUM                                                
                    LEFT  JOIN BSA210T F WITH   (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE
                                                        AND F.TYPE_LEVEL  = A.DIV_CODE
                                                        AND F.TREE_CODE   = A.TREE_CODE
            WHERE   A.COMP_CODE    = @CompCode
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
            AND   A.DIV_CODE       = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">          
            AND   A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_DATE_FR)">        
            AND   A.PO_REQ_DATE    &gt;= #{PO_REQ_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_DATE_TO)">     
            AND   A.PO_REQ_DATE    &lt;= #{PO_REQ_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    
            AND   A.PERSON_NUMB     = #{PERSON_NUMB}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">       /*부서*/
            AND    F.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =F.COMP_CODE AND TYPE_LEVEL=F.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_NUM)">      
            AND   A.PO_REQ_NUM      = #{PO_REQ_NUM}
        </if>     
        
        GROUP BY  A.PO_REQ_DATE, A.SUPPLY_TYPE, A.PO_REQ_NUM 
                , A.TREE_CODE, F.TREE_NAME,  A.PERSON_NUMB
                , C.USER_NAME, A.MONEY_UNIT, A.EXCHG_RATE_O
                , A.DIV_CODE,  D.COMP_NAME
            ORDER BY A.PO_REQ_DATE, A.SUPPLY_TYPE, A.PO_REQ_NUM
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
        
    <select id="mre100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
        /* mre100ukrv.Cmre100ukrv[fnMre200QStd] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            
            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}   
            
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId
            
            SET @RefItem = ISNULL(@RefItem, N'0')
            
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
            
            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT  A.DIV_CODE
                  , A.PO_REQ_NUM
                  , A.PO_SER_NO
                  , A.ITEM_CODE
                  ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                    WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                        ELSE B.ITEM_NAME
                     END)      AS ITEM_NAME
                  , B.SPEC
                  , B.STOCK_UNIT         
                  , A.ORDER_UNIT_Q
                  , A.ORDER_UNIT
                  , A.MONEY_UNIT
                  , A.EXCHG_RATE_O      
                              
                  , A.UNIT_PRICE_TYPE         
                  , A.ORDER_P
                  , A.ORDER_O       
                  , A.ORDER_LOC_P
                  , A.ORDER_LOC_O
                  
                 , (CASE WHEN ISNULL(A.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.DVRY_DATE, 7, 2))
                     END)                                           AS DVRY_DATE
                  , A.WH_CODE
                  , A.TRNS_RATE
                  
                  , A.ORDER_Q
                  , A.R_ORDER_Q
                  , A.SUPPLY_TYPE
                  , A.CUSTOM_CODE
                  , C.CUSTOM_NAME                                   AS CUSTOM_NAME
                  , (CASE WHEN ISNULL(A.PO_REQ_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PO_REQ_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.PO_REQ_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.PO_REQ_DATE, 7, 2))
                     END)                                           AS PO_REQ_DATE
                  , A.INSPEC_FLAG
                  , A.REMARK
                  , A.ORDER_REQ_NUM
                  , A.MRP_CONTROL_NUM
                  , A.ORDER_YN
                  , A.UPDATE_DB_USER
                  , A.UPDATE_DB_TIME
                  , A.COMP_CODE
                  , D.PURCH_LDTIME
            FROM               MRE110T A WITH (NOLOCK)
                    INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
                                                      AND B.ITEM_CODE        = A.ITEM_CODE
                    LEFT JOIN  BCM100T C WITH  (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                       AND C.CUSTOM_CODE     = A.CUSTOM_CODE
                    LEFT JOIN  BPR200T D WITH  (NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
                                                       AND D.ITEM_CODE       = A.ITEM_CODE
                                                       AND D.DIV_CODE        = A.DIV_CODE 
                    INNER JOIN  MRE100T E WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
                                                       AND E.DIV_CODE        = A.DIV_CODE
                                                       AND E.PO_REQ_NUM      = A.PO_REQ_NUM 
            WHERE   A.COMP_CODE     = @CompCode
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_NUM)">
            AND     A.PO_REQ_NUM    = #{PO_REQ_NUM}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
            AND     E.TREE_CODE     = #{DEPT_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
            AND     E.PERSON_NUMB   = #{PERSON_NUMB}
        </if>
            ORDER BY A.PO_SER_NO
        
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="mre100ukrvServiceImpl.selectMrpList" parameterType="Map" resultType="rMap">
        /*mre100ukrv.Cmre100ukrv[fnMpo100QStd] 자재소요량 Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                            
                  --  가용재고함수인자
                  , @BASE_DATE1     VARCHAR(8000)   -- (인자) 기준일자
                  , @FROM_ITEM      VARCHAR(8000)   -- (인자) 품목코드(FROM)
                  , @TO_ITEM        NVARCHAR(20)    -- (인자) 품목코드(TO)
                  , @QRY_TYPE       NVARCHAR(01)    -- (인자) 조회타입
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}    
            
            SET @BASE_DATE1     = N''
            SET @FROM_ITEM      = N''
            SET @TO_ITEM        = N''
            SET @QRY_TYPE       = N'5'
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId
        
            SET @RefItem = ISNULL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT  A.ORDER_PLAN_DATE,
                    A.ORDER_REQ_NUM,
                    A.MRP_CONTROL_NUM,
                    A.ITEM_CODE,
                    B.ITEM_NAME,
                    B.SPEC,
                    A.CUSTOM_CODE,
                    I.CUSTOM_NAME,
                    A.ORDER_PLAN_Q,
                    ISNULL(G.ORDER_QSUM,0) AS REQ_PLAN_Q,
                    (A.ORDER_PLAN_Q - ISNULL(G.ORDER_QSUM,0)) AS REMAIN_Q,
                    ISNULL(H.PAB_STOCK_Q,0)    AS PAB_STOCK_Q,
                    A.SUPPLY_TYPE,
                    A.DOM_FORIGN,
                    B.STOCK_UNIT,
                    C.ORDER_UNIT,
                    C.TRNS_RATE,
                    C.PURCH_LDTIME,
                    CONVERT(NVARCHAR(8), DATEADD(DAY,ISNULL(C.PURCH_LDTIME,0),CONVERT(DATE, A.ORDER_PLAN_DATE)), 112) AS DVRY_DATE,
                    (A.ORDER_PLAN_Q - ISNULL(G.ORDER_QSUM,0))/ISNULL(C.TRNS_RATE,1) AS ORDER_Q,
                    A.PROJECT_NO,
                    A.WKORD_NUM,
                    ISNULL(F.ORDER_NUM, '')    AS ORDER_NUM,
                    F.ORDER_SEQ                AS ORDER_SEQ,
                    unilite.S_fnRemainPQty_KD(A.COMP_CODE,A.DIV_CODE,A.MRP_CONTROL_NUM, A.CREATE_DATE, A.CUSTOM_CODE) AS INPUT_REMAIN_QTY
              FROM  MRP400T A WITH  (NOLOCK)
                    INNER JOIN BPR100T B WITH  (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                       AND B.ITEM_CODE = A.ITEM_CODE
                    INNER JOIN BPR200T C WITH  (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                       AND C.ITEM_CODE = A.ITEM_CODE
                                                       AND C.DIV_CODE  = A.DIV_CODE
                    LEFT  JOIN MRP350T F WITH(NOLOCK)
                            ON A.COMP_CODE        = F.COMP_CODE
                           AND A.DIV_CODE         = F.DIV_CODE
                           AND A.ORDER_REQ_NUM    = CONVERT(NVARCHAR, F.ITEM_CHECK)
                    LEFT  JOIN uniLITE.fnGetPABStock(@CompCode, #{DIV_CODE}, @BASE_DATE1, @FROM_ITEM, @TO_ITEM, @QRY_TYPE) H
                            ON A.COMP_CODE        = H.COMP_CODE
                           AND A.DIV_CODE         = H.DIV_CODE
                           AND A.ITEM_CODE        = H.ITEM_CODE
                           AND A.ORDER_PLAN_DATE  = H.BASE_DATE
                    LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_REQ_NUM, SUM(ORDER_Q) AS ORDER_QSUM FROM MRE110T 
                                 WHERE COMP_CODE  = @CompCode AND  DIV_CODE = #{DIV_CODE} GROUP BY COMP_CODE,DIV_CODE,ORDER_REQ_NUM) G
                            ON A.COMP_CODE        = G.COMP_CODE
                           AND A.DIV_CODE         = G.DIV_CODE
                           AND A.ORDER_REQ_NUM    = G.ORDER_REQ_NUM 
                    LEFT  JOIN BCM100T I WITH(NOLOCK)
                            ON A.COMP_CODE        = I.COMP_CODE
                           AND A.CUSTOM_CODE      = I.CUSTOM_CODE
             WHERE  A.COMP_CODE  = @CompCode                                          
               AND  A.ORDER_PLAN_Q - ISNULL(G.ORDER_QSUM,0) > 0
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
            AND   A.DIV_CODE       = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">          
            AND   A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_PLAN_DATE_FR)">        
            AND   A.ORDER_PLAN_DATE   &gt;= #{ORDER_PLAN_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_PLAN_DATE_TO)">     
            AND   A.ORDER_PLAN_DATE   &lt;= #{ORDER_PLAN_DATE_TO}
        </if>    
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">        
            AND   A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
        </if>    
        <if test="@foren.Ognl@isNotEmpty(SPEC)">
            AND   B.SPEC LIKE #{SPEC} + '%'
        </if>
            ORDER BY A.ORDER_PLAN_DATE, A.ORDER_REQ_NUM
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="mre100ukrvServiceImpl.selectOutsidePlList" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            IF EXISTS(SELECT TOP 1 1 FROM       MCL100T A WITH(NOLOCK)
                                     INNER JOIN BPR200T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
                                                                      AND A.DIV_CODE  = B.DIV_CODE 
                                                                      AND A.ITEM_CODE = B.ITEM_CODE
                   WHERE A.COMP_CODE    = #{S_COMP_CODE} 
                     AND A.DIV_CODE     = #{DIV_CODE} 
                     AND A.ITEM_CODE    = #{ITEM_CODE}
                     <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                     AND B.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
                     </if>
                     AND B.SUPPLY_TYPE  = #{SUPPLY_TYPE}
                     )
            
            BEGIN        
                SELECT    A.COMP_CODE
                        , A.DIV_CODE 
                        , A.ITEM_CODE           AS CHILD_ITEM_CODE
                        , B.ITEM_NAME           AS CHILD_ITEM_NAME
                        , B.SPEC                AS SPEC1
                        , A.PROD_ITEM_CODE
                        , D.ITEM_NAME           AS PROD_ITEM_NAME
                        , D.SPEC                AS SPEC2
                        , A.UNIT_Q
                        , C.ITEM_ACCOUNT
                        , C.SUPPLY_TYPE
                  FROM  MCL100T             A WITH  (NOLOCK)
                        INNER JOIN BPR100T   B WITH  (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                            AND B.ITEM_CODE = A.ITEM_CODE
                        INNER JOIN BPR200T   C WITH  (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                            AND C.ITEM_CODE = B.ITEM_CODE
                        INNER JOIN BPR100T   D WITH  (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                            AND D.ITEM_CODE = A.PROD_ITEM_CODE                                                                                    
                 WHERE  A.COMP_CODE         = #{S_COMP_CODE}
                   AND  A.DIV_CODE          = #{DIV_CODE}
                   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                   AND  C.ITEM_ACCOUNT      = #{ITEM_ACCOUNT}
                   </if>
                   AND  C.SUPPLY_TYPE       = #{SUPPLY_TYPE}
    
                   AND  A.ITEM_CODE  = #{ITEM_CODE}
                ORDER BY A.ITEM_CODE
             END
            
            ELSE
             
             BEGIN
            
                SELECT    A.COMP_CODE
                        , A.DIV_CODE
                        , A.CHILD_ITEM_CODE
                        , B.ITEM_NAME           AS CHILD_ITEM_NAME
                        , B.SPEC                AS SPEC1
                        , A.PROD_ITEM_CODE
                        , D.ITEM_NAME           AS PROD_ITEM_NAME
                        , D.SPEC                AS SPEC2
                        , A.UNIT_Q
                        , C.ITEM_ACCOUNT
                        , C.SUPPLY_TYPE
                  FROM  BPR500T             A WITH  (NOLOCK)
                        INNER JOIN BPR100T   B WITH  (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                            AND B.ITEM_CODE = A.CHILD_ITEM_CODE
                        INNER JOIN BPR200T   C WITH  (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                            AND C.ITEM_CODE = B.ITEM_CODE
                        INNER JOIN BPR100T   D WITH  (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                            AND D.ITEM_CODE = A.PROD_ITEM_CODE                                                                                    
                 WHERE  A.COMP_CODE         = #{S_COMP_CODE}
                   AND  A.DIV_CODE          = #{DIV_CODE}
                   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                   AND  C.ITEM_ACCOUNT      = #{ITEM_ACCOUNT}
                   </if>
                   AND  C.SUPPLY_TYPE       = #{SUPPLY_TYPE}    
                   AND  A.CHILD_ITEM_CODE   = #{ITEM_CODE}             
                ORDER BY A.CHILD_ITEM_CODE
            
             END
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="mre100ukrvServiceImpl.selectItemRequestList" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}    
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId
        
            SET @RefItem = ISNULL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT    A.COMP_CODE
                    , A.DIV_CODE
                    , A.ITEM_REQ_NUM
                    , B.PO_SER_NO                                             AS ITEM_REQ_SEQ
                    , B.ITEM_CODE
                    , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                            WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                                ELSE C.ITEM_NAME
                        END)                                                  AS ITEM_NAME
                    , B.ITEM_SPEC                                             AS SPEC
                    , C.STOCK_UNIT 
                    , B.REQ_Q 
                    , A.TREE_CODE                                             AS DEPT_CODE
                    , A.PERSON_NUMB             
                    , A.ITEM_REQ_DATE
                    , A.MONEY_UNIT
                    , A.EXCHG_RATE_O
                    , B.DELIVERY_DATE 
                    , B.USE_REMARK
                    , A.GW_DOCU_NUM
                    , A.GW_FLAG
                    , B.NEXT_YN
              FROM  S_MRE010T_KD              A WITH  (NOLOCK)
                    INNER JOIN S_MRE011T_KD   B WITH  (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                              AND B.DIV_CODE        = A.DIV_CODE
                                                              AND B.ITEM_REQ_NUM    = A.ITEM_REQ_NUM
                    LEFT JOIN BPR100T         C WITH  (NOLOCK) ON C.COMP_CODE       = B.COMP_CODE
                                                              AND C.ITEM_CODE       = B.ITEM_CODE
                    LEFT JOIN BPR200T         D WITH  (NOLOCK) ON D.COMP_CODE       = C.COMP_CODE
                                                              AND D.ITEM_CODE       = C.ITEM_CODE                                              
                    LEFT JOIN BSA210T         F WITH  (NOLOCK) ON F.COMP_CODE       = A.COMP_CODE
                                                              AND F.TYPE_LEVEL      = A.DIV_CODE
                                                              AND F.TREE_CODE       = A.TREE_CODE                                            
                    LEFT JOIN HUM100T         G WITH  (NOLOCK) ON G.COMP_CODE       = A.COMP_CODE
                                                              AND G.DIV_CODE        = A.DIV_CODE
                                                              AND G.PERSON_NUMB     = A.PERSON_NUMB
             WHERE  A.COMP_CODE         = #{S_COMP_CODE}
               AND  A.DIV_CODE          = #{DIV_CODE}
               AND  A.ITEM_REQ_DATE     &gt;= #{ITEM_REQ_DATE_FR}
               AND  A.ITEM_REQ_DATE     &lt;= #{ITEM_REQ_DATE_TO}
             <if test="@foren.Ognl@isNotEmpty(ITEM_REQ_NUM)">
               AND  A.ITEM_REQ_NUM       LIKE #{ITEM_REQ_NUM} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
               AND  A.TREE_CODE        = #{DEPT_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
               AND  A.PERSON_NUMB      = #{PERSON_NUMB}
             </if>
            ORDER BY B.PO_SER_NO
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="mre100ukrvServiceImpl.fnOrderPrice" parameterType="Map" resultType="rMap">
         SELECT A.COMP_CODE, 
                A.TYPE, 
                A.DIV_CODE, 
                A.ITEM_CODE, 
                A.CUSTOM_CODE, 
                A.MONEY_UNIT,
                A.ORDER_UNIT, 
                A.ORDER_RATE,
                A.PRICE_TYPE,
                ISNULL(A.ITEM_P, C.PURCHASE_BASE_P) AS ORDER_P,
                A.APLY_START_DATE,
                C.INSPEC_YN
         FROM uniLITE.BPR400T A WITH  (NOLOCK)
              INNER JOIN
                       (SELECT COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT, MAX(APLY_START_DATE) AS APLY_START_DATE
                          FROM uniLITE.BPR400T
                         WHERE APLY_START_DATE &lt;= #{PO_REQ_DATE}
                         GROUP BY COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT
                        ) B ON A.COMP_CODE = B.COMP_CODE
                           AND A.TYPE                 = B.TYPE
                           AND A.DIV_CODE             = B.DIV_CODE                          
                           AND A.CUSTOM_CODE          = B.CUSTOM_CODE
                           AND A.ITEM_CODE            = B.ITEM_CODE 
                           AND A.MONEY_UNIT           = B.MONEY_UNIT
                           AND A.ORDER_UNIT           = B.ORDER_UNIT
                           AND A.APLY_START_DATE      = B.APLY_START_DATE                          
             INNER JOIN unilite.BPR200T C ON A.COMP_CODE = C.COMP_CODE
                                         AND A.DIV_CODE  = C.DIV_CODE
                                         AND A.ITEM_CODE = C.ITEM_CODE
        WHERE A.ITEM_CODE           = #{ITEM_CODE}
            AND A.CUSTOM_CODE       = #{CUSTOM_CODE}
            AND A.COMP_CODE         = #{S_COMP_CODE}
            AND A.DIV_CODE          = #{DIV_CODE}
            AND A.TYPE              = N'2'          
            AND A.MONEY_UNIT        = #{MONEY_UNIT}
            AND A.ORDER_UNIT        = #{ORDER_UNIT}
    </select>
    
    <select id="mre100ukrvServiceImpl.fnStockQ" parameterType="Map" resultType="rMap">
        --UBFuncKrv.CBFuncKr[fnAutoNo] Query01
        SELECT ISNULL(MAX(STOCK_Q)     , 0) STOCK_Q
             , ISNULL(MAX(AVERAGE_P)   , 0) AVERAGE_P
             , ISNULL(MAX(GOOD_STOCK_Q), 0) GOOD_STOCK_Q
             , ISNULL(MAX(BAD_STOCK_Q) , 0) BAD_STOCK_Q
          FROM BIV100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND WH_CODE   = #{WH_CODE}
           AND ITEM_CODE = #{ITEM_CODE}
    </select>
    
    <select id="mre100ukrvServiceImpl.callInspecyn" parameterType="Map" resultType="rMap">
        SELECT 
            ISNULL(INSPEC_YN, 'N') AS INSPEC_YN
            FROM BPR200T WITH  (NOLOCK)
            WHERE COMP_CODE = #{S_COMP_CODE}
            AND DIV_CODE    = #{DIV_CODE}
            AND ITEM_CODE   = #{ITEM_CODE}
    </select>
    
    <select id="mre100ukrvServiceImpl.userName" parameterType="Map" resultType="rMap">
        /*UMFuncKrv.CMFuncKr[fnGetAgreePrsn] Query01*/
        SELECT B.USER_NAME AS USER_NAME
             , B.USER_ID   AS USER_ID
          FROM          BSA100T A WITH (NOLOCK)
             INNER JOIN BSA300T B WITH (NOLOCK) ON A.REF_CODE1 = B.USER_ID
             
         WHERE A.MAIN_CODE = N'M201'
           AND A.SUB_CODE  = #{SUB_CODE}
           AND A.COMP_CODE = #{S_COMP_CODE}
         ORDER BY A.SUB_CODE
    </select>
    
    <select id="mre100ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
        SELECT
            A.WH_CODE
        FROM         BSA210T A WITH(NOLOCK)
           LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                           AND B.DEPT_CODE = A.TREE_CODE
        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND B.USER_ID   = #{S_USER_ID}
    
    </select>
    
    <select id="mre100ukrvServiceImpl.callDeptInspecFlag" parameterType="Map" resultType="rMap">
        SELECT 
            ISNULL(INSPEC_FLAG, 'N') AS  INSPEC_FLAG
        FROM BSA210T WITH(NOLOCK) 
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND TYPE_LEVEL = #{DIV_CODE}
          AND TREE_CODE = #{DEPT_CODE}
    
    </select>
    <select id="mre100ukrvServiceImpl.ref1" parameterType="Map" resultType="rMap">
        SELECT 
            REF_CODE1
        FROM
            BSA100T WITH  (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
            AND MAIN_CODE = 'M201'
            AND SUB_CODE  = #{ORDER_PRSN} 
    </select>
    
    <update id="mre100ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{sAUTO_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>   
    
    <select id="mre100ukrvServiceImpl.selectCheckCnt" parameterType="Map" resultType="rMap">
        SELECT COUNT(A.COMP_CODE)  AS CNT
          FROM MRE110T A WITH (NOLOCK)
          INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                           AND A.DIV_CODE   = B.DIV_CODE
                                           AND A.PO_REQ_NUM = B.PO_REQ_NUM
                                           AND A.PO_SER_NO  = B.PO_REQ_SEQ
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.PO_REQ_NUM = #{PO_REQ_NUM}
           AND A.PO_SER_NO = #{PO_SER_NO}
    </select>
    
    <select id="mre100ukrvServiceImpl.selectMPO200T" parameterType="Map" resultType="rMap">
        SELECT COUNT(*)         AS COUNT
          FROM MPO200T WITH(NOLOCK)
         WHERE PO_REQ_NUM = #{PO_REQ_NUM}
           AND PO_REQ_SEQ = #{PO_SER_NO}
    </select>
    
    <insert id="mre100ukrvServiceImpl.insertMaster" parameterType="Map">        
        INSERT INTO MRE100T
         ( PO_REQ_NUM      , TREE_CODE 
         , PERSON_NUMB     , PO_REQ_DATE     , SUPPLY_TYPE        
         , MONEY_UNIT      , EXCHG_RATE_O    , DIV_CODE           , COMP_CODE 
         , UPDATE_DB_USER  , UPDATE_DB_TIME  , INSERT_DB_USER     , INSERT_DB_TIME)
        VALUES
        (  #{PO_REQ_NUM}     , #{DEPT_CODE}
         , #{PERSON_NUMB}    , #{PO_REQ_DATE}      , #{SUPPLY_TYPE}    
         , #{MONEY_UNIT}     , #{EXCHG_RATE_O}     , #{DIV_CODE}       , #{S_COMP_CODE}       
         , #{S_USER_ID}      , GETDATE()           , #{S_USER_ID}      , GETDATE() ) 
    </insert>       
    
    <insert id="mre100ukrvServiceImpl.insertDetail" parameterType="Map">        
        INSERT INTO MRE110T
         (  PO_REQ_NUM,
            PO_SER_NO,
            COMP_CODE,
            DIV_CODE,
            ITEM_CODE,
            
            SUPPLY_TYPE,
            CUSTOM_CODE,
            R_ORDER_Q,
            ORDER_Q,
            
            ORDER_UNIT,      
            ORDER_UNIT_Q,
            MONEY_UNIT,
            EXCHG_RATE_O,
            
            UNIT_PRICE_TYPE,
            ORDER_P,
            ORDER_O,
            ORDER_LOC_P,
            ORDER_LOC_O,
            
            DVRY_DATE,
            WH_CODE,
            TRNS_RATE,
            
            PO_REQ_DATE,
            INSPEC_FLAG,
            REMARK,
            ORDER_REQ_NUM,
            MRP_CONTROL_NUM,
            ORDER_YN,
            
            UPDATE_DB_USER  , UPDATE_DB_TIME    , INSERT_DB_USER        , INSERT_DB_TIME
         ) 
        VALUES
            ( #{PO_REQ_NUM}
            , #{PO_SER_NO}
            , #{S_COMP_CODE}
            , #{DIV_CODE}
            , #{ITEM_CODE}
            
            , #{SUPPLY_TYPE}
            , #{CUSTOM_CODE}
            , #{R_ORDER_Q}
            , #{ORDER_Q}
            
            , #{ORDER_UNIT}      
            , #{ORDER_UNIT_Q}
            , #{MONEY_UNIT}
            , #{EXCHG_RATE_O}
            
            , #{UNIT_PRICE_TYPE}
            , #{ORDER_P}
            , #{ORDER_O}
            , #{ORDER_LOC_P}
            , #{ORDER_LOC_O}
            
            , #{DVRY_DATE}
            , #{WH_CODE}
            , #{TRNS_RATE}
            
            , #{PO_REQ_DATE}
            , #{INSPEC_FLAG}
            , #{REMARK}
            , #{ORDER_REQ_NUM}
            , #{MRP_CONTROL_NUM}
            , #{ORDER_YN}
          
            , #{S_USER_ID}      , GETDATE()       , #{S_USER_ID}        , GETDATE()
             ) 
    </insert>
            
    
    <update id="mre100ukrvServiceImpl.updateDetail" parameterType="Map">        
        UPDATE MRE110T
        SET    ORDER_UNIT_Q    = #{ORDER_UNIT_Q}
             , ORDER_UNIT      = #{ORDER_UNIT}
             , ORDER_Q         = #{ORDER_Q}
             , UNIT_PRICE_TYPE = #{UNIT_PRICE_TYPE}
             , ORDER_P         = #{ORDER_P}
             , CUSTOM_CODE     = #{CUSTOM_CODE}
             , DVRY_DATE       = #{DVRY_DATE}
             , PO_REQ_DATE     = #{PO_REQ_DATE}
             , WH_CODE         = #{WH_CODE}
             , INSPEC_FLAG     = #{INSPEC_FLAG}
             , REMARK          = #{REMARK}
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
       WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
           AND PO_SER_NO   = #{PO_SER_NO}
    </update>
    
    
    <delete id="mre100ukrvServiceImpl.deleteMaster" parameterType="Map">
        DELETE MRE100T    
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
    </delete>
    
    <delete id="mre100ukrvServiceImpl.deleteDetail" parameterType="Map">
        DELETE MRE110T    
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
           AND PO_SER_NO   = #{PO_SER_NO}
    </delete>       

</mapper>