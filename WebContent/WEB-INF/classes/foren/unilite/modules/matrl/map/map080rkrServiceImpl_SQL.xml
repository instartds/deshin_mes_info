<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="map080rkrServiceImpl">
	<select id="selectPrimaryDataList" parameterType="Map" resultType="rMap" >	
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)
		                  , @DIV_CODE           NVARCHAR(10) 
		                  , @FR_DATE            NVARCHAR(8) 
		                  , @TO_DATE            NVARCHAR(8) 
		                  , @TODAY              NVARCHAR(8)

		                  , @LastYYYYMM         NVARCHAR(6)
		                  , @FirstYYYYMM        NVARCHAR(6)

		
		                  , @BasisMonth         NVARCHAR(06)
		                  , @MaxMonth           NVARCHAR(06)
		                  , @StMonth            NVARCHAR(02)
		                  , @QRY_YEAR           NVARCHAR(04)
		
		/*  1. 변수 값 할당  */
		    SET @COMP_CODE    = #{COMP_CODE}
		    SET @DIV_CODE     = #{DIV_CODE}
		    SET @FR_DATE      = #{FR_DATE}
		    SET @TO_DATE      = #{TO_DATE}
		    SET @TODAY	      = CONVERT(VARCHAR(8), GETDATE(), 112)
		    
		
		    SET @QRY_YEAR     = LEFT(@FR_DATE, 4)
		
		/*  2. 최종 재고마감월 계산 */
		    SELECT @LastYYYYMM  = MAX(BASIS_YYYYMM)
		    FROM   BIV250T WITH (NOLOCK)
		    WHERE  COMP_CODE    = @COMP_CODE
		    AND    DIV_CODE     = @DIV_CODE
		    AND    BASIS_YYYYMM &lt; CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @FR_DATE), 112)
		    AND	   SUM_TYPE		= 'C'
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		    AND CUSTOM_CODE = #{CUSTOM_CODE}
		    </if>
					    
		    SELECT @FirstYYYYMM = MIN(BASIS_YYYYMM)
		    FROM   BIV250T WITH (NOLOCK)
		    WHERE  COMP_CODE    = @COMP_CODE
		    AND    DIV_CODE     = @DIV_CODE
		    AND    BASIS_YYYYMM &gt;= CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @FR_DATE), 112)
		    AND	   SUM_TYPE		= 'C'
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		    AND CUSTOM_CODE = #{CUSTOM_CODE}
		    </if>
				
		    SET @LastYYYYMM = ISNULL(@LastYYYYMM, @FirstYYYYMM)
		
		/*  3. 이월금액 기초월 참조  */
		    SELECT  @StMonth = SUBSTRING(FN_DATE,5,2)
		    FROM    BOR100T WITH (NOLOCK)
		    WHERE   COMP_CODE = @COMP_CODE
		
		    SELECT  @BasisMonth = MAX(A.AC_DATE)
		    FROM    AGB200T A  WITH (NOLOCK)
		    WHERE   A.COMP_CODE  = @COMP_CODE
		    AND     A.AC_DATE   &lt;= @QRY_YEAR + @StMonth
		    AND     LEN(A.AC_DATE) = 6
		
		    SET @BasisMonth = SUBSTRING(ISNULL(@BasisMonth, '190001'), 1, 6)
		
			SET @BasisMonth = CASE WHEN @StMonth = '03' THEN CONVERT(NVARCHAR, LEFT(@BasisMonth, 4) - 1) + CONVERT(NVARCHAR, @StMonth) ELSE @BasisMonth END
			
		/*  4. 임시 테이블 처리  */
		    DECLARE     @TypeKey                NVARCHAR(20)
		
		    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')
		
		    IF NOT EXISTS   (
		                    SELECT TOP 1 1
		                    FROM   T_MAP080UKRV1 WITH (NOLOCK)
		                    WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + '%'
		                    )
		    BEGIN
		        TRUNCATE TABLE T_MAP080UKRV1
		    END
		
		/*  5.데이터 생성  */
		    /*  5.1 이월금액(회계기초데이터)  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE
		                            , IWAL_IN_AMT_I, IN_CR_AMT_I, IN_DR_AMT_I, IN_JAN_AMT_I, TODAY_IN_AMT_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'0'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1 
		                 WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
		            END                                                                         AS CUSTOM_CODE
		          , SUM(ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I, 0.0) - ISNULL(A.CR_AMT_I, 0.0)
		                                       WHEN '2' THEN ISNULL(A.CR_AMT_I, 0.0) - ISNULL(A.DR_AMT_I, 0.0)
		                       END, 0))                                                         AS IWAL_IN_AMT_I
		          , 0                                                                           AS IN_CR_AMT_I
		          , 0                                                                           AS IN_DR_AMT_I
		          , 0                                                                           AS IN_JAN_AMT_I
		          , SUM(ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I, 0.0) - ISNULL(A.CR_AMT_I, 0.0)
		                                       WHEN '2' THEN ISNULL(A.CR_AMT_I, 0.0) - ISNULL(A.DR_AMT_I, 0.0)
		                       END, 0))                                                         AS TODAY_IN_AMT_I
		    FROM               AGB200T  A  WITH (NOLOCK)
				    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
				                                         AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
		                                                                          WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
		                                                                     END
				    INNER JOIN ABA400T  C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
				                                         AND C.ACCNT      = A.ACCNT
				                                         AND C.ACCNT_SPEC = '81'
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    AND     A.AC_DATE          = @BasisMonth
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND B.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND B.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND B.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND B.COLLECT_DAY = #{COLLECT_DAY}
			</if>

		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.BOOK_CODE1, A.BOOK_CODE2, A.BOOK_DATA1, A.BOOK_DATA2, C.JAN_DIVI
		
		    /*  5.2 매입액  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE
		                            , IWAL_IN_AMT_I, IN_CR_AMT_I, IN_DR_AMT_I, IN_JAN_AMT_I, TODAY_IN_AMT_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'1'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		          , ISNULL(SUM(CASE WHEN A1.CHANGE_BASIS_DATE &gt;= @BasisMonth AND A1.CHANGE_BASIS_DATE &lt; @FR_DATE
		                                 THEN ISNULL(A.AMOUNT_I, 0) + ISNULL(A.TAX_I, 0)
		                            ELSE 0
		                       END), 0)                                                         AS IWAL_IN_AMT_I
		          , ISNULL(SUM(CASE WHEN A1.CHANGE_BASIS_DATE &gt;= @FR_DATE AND A1.CHANGE_BASIS_DATE &lt;= @TO_DATE
		                                 THEN ISNULL(A.AMOUNT_I, 0) + ISNULL(A.TAX_I, 0)
		                            ELSE 0
		                       END), 0)                                                         AS IN_CR_AMT_I
		          , 0                                                                           AS IN_DR_AMT_I
		          , 0                                                                           AS IN_JAN_AMT_I
		          , ISNULL(SUM(CASE WHEN A1.CHANGE_BASIS_DATE &gt;= @BasisMonth AND A1.CHANGE_BASIS_DATE &lt;= @TODAY
		                                 THEN ISNULL(A.AMOUNT_I, 0) + ISNULL(A.TAX_I, 0)
		                            ELSE 0
		                       END), 0)                                                         AS TODAY_IN_AMT_I
  		                     
		                       
		    FROM               MAP200T  A  WITH (NOLOCK)
		            INNER JOIN MAP100T  A1 WITH (NOLOCK) ON  A1.COMP_CODE        = A.COMP_CODE
		                                                 AND A1.DIV_CODE         = A.DIV_CODE
		                                                 AND A1.BILL_DIV_CODE    = A.BILL_DIV_CODE
		                                                 AND A1.CUSTOM_CODE      = A.CUSTOM_CODE
		                                                 AND A1.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
				    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE         = A.COMP_CODE
				                                         AND B.CUSTOM_CODE       = A.CUSTOM_CODE
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    AND     A1.CHANGE_BASIS_DATE      &gt;= @BasisMonth
		    AND     A1.CHANGE_BASIS_DATE      &lt;= CASE WHEN @TODAY &gt; @TO_DATE THEN @TODAY ELSE @TO_DATE END
		    AND     ISNULL(A1.BILL_NUM, '') != ''
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND B.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND B.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND B.COLLECT_DAY = #{COLLECT_DAY}
			</if>
		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE
		
		
--20160308추가 시작
		    /*  5.2.1 기간에 따른 매입액  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE, RANGE_IN_AMT_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'1'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		 --20160307추가 시작
  		          , ISNULL(SUM(CASE WHEN A1.CHANGE_BASIS_DATE &gt;= @FR_DATE AND A1.CHANGE_BASIS_DATE &lt;= @TO_DATE
                         THEN ISNULL(A.AMOUNT_I, 0) + ISNULL(A.TAX_I, 0)
                    ELSE 0
               		END), 0)                                                         AS RANGE_IN_AMT_I		
         --20160307추가 끝    		                     
		                       
		    FROM               MAP200T  A  WITH (NOLOCK)
		            INNER JOIN MAP100T  A1 WITH (NOLOCK) ON  A1.COMP_CODE        = A.COMP_CODE
		                                                 AND A1.DIV_CODE         = A.DIV_CODE
		                                                 AND A1.BILL_DIV_CODE    = A.BILL_DIV_CODE
		                                                 AND A1.CUSTOM_CODE      = A.CUSTOM_CODE
		                                                 AND A1.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
				    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE         = A.COMP_CODE
				                                         AND B.CUSTOM_CODE       = A.CUSTOM_CODE
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    AND     A1.CHANGE_BASIS_DATE      &gt;= @FR_DATE
		    AND     A1.CHANGE_BASIS_DATE      &lt;= @TO_DATE
		    AND     ISNULL(A1.BILL_NUM, '') != ''
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND B.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND B.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND B.COLLECT_DAY = #{COLLECT_DAY}
			</if>
		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE

--20160308추가 끝

		
		    /*  5.3 지불액  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE
		                            , IWAL_IN_AMT_I, IN_CR_AMT_I, IN_DR_AMT_I, IN_JAN_AMT_I, TODAY_IN_AMT_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'1'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1 
		                 WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
		            END                                                                         AS CUSTOM_CODE
		          , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= @BasisMonth AND A.AC_DATE &lt; @FR_DATE
		                                 THEN ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.CR_AMT_I, 0.0) * (-1)
		                                                             WHEN '2' THEN ISNULL(A.DR_AMT_I, 0.0) * (-1)
		                                             END, 0)
		                            ELSE 0
		                       END, 0))                                                         AS IWAL_IN_AMT_I
		          , 0                                                                           AS IN_CR_AMT_I
		          , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= @FR_DATE AND A.AC_DATE &lt;= @TO_DATE
		                                 THEN ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.CR_AMT_I, 0.0)
		                                                             WHEN '2' THEN ISNULL(A.DR_AMT_I, 0.0)
		                                             END, 0)
		                       END, 0))                                                         AS IN_DR_AMT_I
		          , 0                                                                           AS IN_JAN_AMT_I
		          , SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= @BasisMonth AND A.AC_DATE &lt;= @TODAY
		                                 THEN ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.CR_AMT_I, 0.0) * (-1)
		                                                             WHEN '2' THEN ISNULL(A.DR_AMT_I, 0.0) * (-1)
		                                             END, 0)
		                       END, 0))                                                         AS TODAY_IN_AMT_I
		    FROM               AGB200T  A  WITH (NOLOCK)
				    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
				                                         AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
		                                                                          WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
		                                                                     END
				    INNER JOIN ABA400T  C  WITH (NOLOCK) ON  C.COMP_CODE   = A.COMP_CODE
				                                         AND C.ACCNT       = A.ACCNT
				                                         AND C.ACCNT_SPEC  = '81'
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    AND     A.AC_DATE         &gt;= @BasisMonth
		    AND     A.AC_DATE         &lt;= CASE WHEN @TODAY &gt; @TO_DATE THEN @TODAY ELSE @TO_DATE END
		    AND     LEN(AC_DATE)      != 6
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND B.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND B.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND B.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND B.COLLECT_DAY = #{COLLECT_DAY}
			</if>
		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.BOOK_CODE1, A.BOOK_CODE2, A.BOOK_DATA1, A.BOOK_DATA2, C.JAN_DIVI
		
		    /*  5.4 매출액  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE, SALE_AMT_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'1'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , A.PURCHASE_CUSTOM_CODE                                                      AS CUSTOM_CODE
		          , SUM(ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0))                   AS SALE_AMT_I
		    FROM               SSA110T  A  WITH (NOLOCK)
		            INNER JOIN SSA100T  A1 WITH (NOLOCK) 
		                                                 ON  A1.COMP_CODE  = A.COMP_CODE
		                                                 AND A1.DIV_CODE   = A.DIV_CODE
		                                                 AND A1.BILL_NUM   = A.BILL_NUM
				    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
				                                         AND B.CUSTOM_CODE = A.PURCHASE_CUSTOM_CODE
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    AND     A1.SALE_DATE      &gt;= @FR_DATE
		    AND     A1.SALE_DATE      &lt;= @TO_DATE
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.PURCHASE_CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND B.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND B.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
		 	<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND B.COLLECT_DAY = #{COLLECT_DAY}
			</if>

		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE
		    
	--20160307추가 시작
		
		    /* 5.4.1 매출액 (매입대비) */
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#OMEGA20160303103000_1'))        
		        DROP TABLE #OMEGA20160303103000_1

            /* 매입 LOT NO 집계 */
            SELECT A.COMP_CODE, A.DIV_CODE, B.LOT_NO, B.INOUT_P
            INTO #OMEGA20160303103000_1
            FROM       MAP200T A  WITH (NOLOCK)
		    INNER JOIN MAP100T A1 WITH (NOLOCK) ON  A1.COMP_CODE        = A.COMP_CODE
		                                        AND A1.DIV_CODE         = A.DIV_CODE
		                                        AND A1.BILL_DIV_CODE    = A.BILL_DIV_CODE
		                                        AND A1.CUSTOM_CODE      = A.CUSTOM_CODE
                                                AND A1.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
            INNER JOIN BTR100T B WITH (NOLOCK, INDEX(BTR100T_IDX07)) ON  B.COMP_CODE   = A.COMP_CODE
                                                                     AND B.INOUT_NUM   = A.INOUT_NUM
                                                                     AND B.INOUT_SEQ   = A.INOUT_SEQ
                                                                     AND B.INOUT_TYPE  = N'1'
                                                                     AND B.DIV_CODE    = A.DIV_CODE
	        LEFT  JOIN BCM100T C WITH (NOLOCK) ON  C.COMP_CODE   = A.COMP_CODE
		                                       AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                               
            WHERE A.COMP_CODE           = @COMP_CODE
            AND   A.DIV_CODE            = @DIV_CODE
            AND   A1.CHANGE_BASIS_DATE &gt;= @FR_DATE
            AND   A1.CHANGE_BASIS_DATE &lt;= @TO_DATE
            AND   B.LOT_NO IS NOT NULL
            AND   ISNULL(A1.BILL_NUM, '') &gt; ''
           	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND C.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND C.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
		 	<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND C.COLLECT_DAY = #{COLLECT_DAY}
			</if>
						
            GROUP BY A.COMP_CODE, A.DIV_CODE, B.LOT_NO, B.INOUT_P

            CREATE INDEX #OMEGA20160303103000_1_IDX01 ON #OMEGA20160303103000_1 (COMP_CODE, DIV_CODE, LOT_NO)



   	        IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#OMEGA20160303103000_2'))        
		        DROP TABLE #OMEGA20160303103000_2

            SELECT A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE
		            , SUM(
		                CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q  * (CASE WHEN A.INOUT_TYPE_DETAIL = '96' THEN A.SALE_P ELSE A.INOUT_P END)
		                     WHEN A.INOUT_TYPE = '3' THEN A.INOUT_Q * (-1) * (CASE WHEN A.INOUT_TYPE_DETAIL = '96' THEN A.SALE_P ELSE A.INOUT_P END)
		                     ELSE 0
		                END) AS SALE_AMT_I
		
		                 
			         , SUM(
			               CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q  * B.INOUT_P --A.PURCHASE_P
			                    WHEN A.INOUT_TYPE = '3' THEN A.INOUT_Q * (-1) * B.INOUT_P --A.PURCHASE_P
			                    ELSE 0
			               END
			               ) AS SALE_COST                                  
            INTO #OMEGA20160303103000_2
            FROM BTR100T A WITH (NOLOCK, INDEX(BTR100T_IDX07))
            INNER JOIN  #OMEGA20160303103000_1 B WITH (NOLOCK, INDEX(#OMEGA20160303103000_1_IDX01)) ON B.COMP_CODE = A.COMP_CODE
                                                                                               AND B.DIV_CODE  = A.DIV_CODE
                                                                                               AND B.LOT_NO    = A.LOT_NO
		    LEFT  JOIN        BCM100T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                     AND E.CUSTOM_CODE = A.PURCHASE_CUSTOM_CODE
            WHERE A.COMP_CODE   = @COMP_CODE
            AND   A.DIV_CODE    = @DIV_CODE
            AND   A.INOUT_TYPE IN ('2', '3')
            AND   A.CREATE_LOC  = N'1'
		    AND   ((A.INOUT_DATE &gt;= @FR_DATE AND @FR_DATE != '') OR (@FR_DATE = ''))           	 	
		    AND   ((A.INOUT_DATE &lt;= @TO_DATE AND @TO_DATE != '') OR (@TO_DATE = ''))     
		    --AND   A.INOUT_NUM NOT LIKE 'SR%'            
           	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				AND A.PURCHASE_CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND E.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND E.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
		 	<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND E.COLLECT_DAY = #{COLLECT_DAY}
			</if>
						
            GROUP BY A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE

            INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE, RANGE_SALE_AMT_I, SALE_COST)
            SELECT @TypeKey                 AS TYPE_KEY
                 , N'1'                     AS TYPE_FLAG
                 , COMP_CODE                AS COMP_CODE
                 , DIV_CODE                 AS DIV_CODE
                 , PURCHASE_CUSTOM_CODE     AS CUSTOM_CODE
                 , SALE_AMT_I               AS RANGE_SALE_AMT_I
                 , SALE_COST                AS SALE_COST
            FROM #OMEGA20160303103000_2

	--20160307추가 끝
		    /*  5.5 기말재고액  */
		    INSERT  INTO T_MAP080UKRV1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DIV_CODE, CUSTOM_CODE, END_STOCK_I)
		    SELECT  
		            @TypeKey                                                                    AS TYPE_KEY
		          , N'1'                                                                        AS TYPE_FLAG
		          , A.COMP_CODE                                                                 AS COMP_CODE
		          , A.DIV_CODE                                                                  AS DIV_CODE
		          , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		          , SUM(ISNULL(A.STOCK_I, 0) + ISNULL(A.BTR_STOCK_I, 0))                            AS END_STOCK_I
		    FROM                (
		                         SELECT  A.COMP_CODE
		                               , A.DIV_CODE
		                               , A.CUSTOM_CODE
		                               , SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
		                               , 0                         AS BTR_STOCK_I
		                         FROM                BIV250T  A  WITH (NOLOCK)
		                                     INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                                      AND C.ITEM_CODE = A.ITEM_CODE
		                                                                      AND C.STOCK_CARE_YN = 'Y'
		                                 INNER JOIN (
		                                             SELECT A.COMP_CODE, A.DIV_CODE, A.SUM_TYPE, A.KEY_STRING, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
		                                             FROM   BIV250T  A  WITH (NOLOCK)
		                                                    INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                                                      AND C.ITEM_CODE = A.ITEM_CODE
		                                                                                      AND C.STOCK_CARE_YN = 'Y'
		                                             WHERE  A.COMP_CODE      = @COMP_CODE
		                                             AND    A.DIV_CODE       = @DIV_CODE
		                                             AND    A.SUM_TYPE       = 'C'
		                                             AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
		                                             AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
		                                             GROUP BY A.COMP_CODE, A.DIV_CODE, A.SUM_TYPE, A.KEY_STRING
		                                             ) B                                ON  B.COMP_CODE    = A.COMP_CODE
		                                                                               AND  B.DIV_CODE     = A.DIV_CODE
		                                                                               AND  B.SUM_TYPE     = A.SUM_TYPE
		                                                                               AND  B.KEY_STRING   = A.KEY_STRING
		                                                                               AND  B.BASIS_YYYYMM = A.BASIS_YYYYMM
		                         WHERE   A.COMP_CODE   = @COMP_CODE 
		                         AND     A.DIV_CODE    = @DIV_CODE
		                         AND     A.SUM_TYPE    = 'C'
		                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE  
		                         UNION ALL
		                         SELECT  A.COMP_CODE
		                               , A.DIV_CODE
		                               , A.PURCHASE_CUSTOM_CODE
		                               , 0 AS STOCK_I
		                               , SUM(CASE WHEN A.INOUT_TYPE IN ('1','3') THEN      ISNULL(A.INOUT_CAL_I, 0)
		                                          WHEN A.INOUT_TYPE IN ('2','4') THEN -1 * ISNULL(A.INOUT_CAL_I, 0)
		                                          ELSE 0
		                                     END)                                             AS BTR_STOCK_I
		                         FROM              BTR100T  A  WITH (NOLOCK)
		                                INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                                  AND B.ITEM_CODE = A.ITEM_CODE
		                                                                  AND B.STOCK_CARE_YN = 'Y'
		                         WHERE  A.COMP_CODE      = @COMP_CODE
		                         AND    A.DIV_CODE       = @DIV_CODE
		                         AND    A.INOUT_DATE    &gt;= @LastYYYYMM + '32'                                                       /* 수불년월*/
		                         AND    A.INOUT_DATE    &lt;= @TO_DATE
		                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE
		                         ) A
		             LEFT JOIN BCM100T C WITH(NOLOCK) ON  C.COMP_CODE    = A.COMP_CODE  
		                                             AND  C.CUSTOM_CODE  = A.CUSTOM_CODE
		    WHERE   A.COMP_CODE        = @COMP_CODE
		    AND     A.DIV_CODE         = @DIV_CODE
		    
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND C.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND C.AGENT_TYPE LIKE '%'+ #{AGENT_TYPE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(RECEIPT_DAY)">
			AND C.RECEIPT_DAY LIKE '%'+ #{RECEIPT_DAY} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(COLLECT_DAY)">
			AND C.COLLECT_DAY = #{COLLECT_DAY}
			</if>

		    
		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE
		    HAVING   SUM(ISNULL(A.STOCK_I, 0) + ISNULL(A.BTR_STOCK_I, 0)) != 0
		
		/*  6. 최종 데이터 조회 */
		    SELECT  
		            A.COMP_CODE                                                                         AS COMP_CODE
		          , A.DIV_CODE                                                                          AS DIV_CODE       
		          , ROW_NUMBER() OVER (ORDER BY (CASE WHEN B.PAY_AMT IS NOT NULL THEN 1 ELSE 2 END),A.CUSTOM_CODE)											AS SEQ
		          , H.COMP_NAME											
		          , I.DIV_NAME
		          , A.CUSTOM_CODE                                                                       AS CUSTOM_CODE
		          , C.CUSTOM_NAME                                                                       AS CUSTOM_NAME
		          , ISNULL(C.AGENT_TYPE , '')                                                           AS AGENT_TYPE
		          , ISNULL(C.COLLECT_DAY, '')                                                           AS COLLECT_DAY
		          , ISNULL(C.RECEIPT_DAY, '')                                                           AS RECEIPT_DAY
		          , ISNULL(C.BILL_TYPE  , '')                                                           AS BILL_TYPE
		          , SUM(A.IWAL_IN_AMT_I)                                                                AS IWAL_IN_AMT_I    /* 이월금액     */
		          , SUM(A.IN_CR_AMT_I)                                                                  AS IN_CR_AMT_I      /* 매입액       */
		          , SUM(A.SALE_AMT_I)                                                                   AS SALE_AMT_I       /* 매출액       */
		          , SUM(A.IN_DR_AMT_I)                                                                  AS IN_DR_AMT_I      /* 지불액       */
		          , SUM(A.IWAL_IN_AMT_I) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I)                      AS IN_JAN_AMT_I     /* 기말잔액     */
		          , SUM(A.END_STOCK_I)                                                                  AS END_STOCK_I      /* 기말재고액   */
		          , SUM(A.IWAL_IN_AMT_I) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I) AS SPACE_STOCK_I    /* 공간금액     */
		          , SUM(A.TODAY_IN_AMT_I)                                                               AS TODAY_IN_AMT_I   /* 현재잔액     */
		          
		          
		    --      , CASE WHEN C.RECEIPT_DAY = '1' AND C.AGENT_TYPE = '3' 
		    --                  THEN ROUND((SUM(A.IWAL_IN_AMT_I) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)) * 0.9, 0)
		    --             WHEN C.RECEIPT_DAY = '3' THEN SUM(IN_CR_AMT_I)
		    --             ELSE ISNULL(SUM(A.IWAL_IN_AMT_I),0.0) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)
		    --        END      																			AS SC_STOCK_I       /* 지불예정금액 */
		            
		            
		         <if test="FLOOR == null">    
		         , CASE WHEN C.RECEIPT_DAY = '1' AND C.AGENT_TYPE = '3' 
		                      THEN (SUM(A.IWAL_IN_AMT_I) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)) * 0.9
		                 WHEN C.RECEIPT_DAY IN ('3','4','5') THEN SUM(IN_CR_AMT_I)
		                 ELSE ISNULL(SUM(A.IWAL_IN_AMT_I),0.0) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)
		            END                                                                                 AS SC_STOCK_I       /* 지불예정금액 */
		         </if>
		         
		         <if test="FLOOR == &quot;on&quot;">
		         , CASE WHEN C.RECEIPT_DAY = '1' AND C.AGENT_TYPE = '3' 
		                      THEN FLOOR(((SUM(A.IWAL_IN_AMT_I) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)) * 0.9)/10000)*10000
		                 WHEN C.RECEIPT_DAY IN ('3','4','5') THEN SUM(IN_CR_AMT_I)
		                 ELSE ISNULL(SUM(A.IWAL_IN_AMT_I),0.0) + SUM(A.IN_CR_AMT_I) - SUM(A.IN_DR_AMT_I) - SUM(A.END_STOCK_I)
		            END                                                                                 AS SC_STOCK_I       /* 지불예정금액 */   
		         </if>   
		         
		          , ISNULL(B.PAY_AMT,0)                                                                 AS PAY_AMT          /* 지불확정금액 */
		          , B.PAY_AMT                                                                           AS COMPARE_PAY
		          , ISNULL(C.TOP_NAME      , '')                                                        AS TOP_NAME
		          , ISNULL(C.ADDR1         , '')                                                        AS ADDR1
		          , ISNULL(C.BANK_CODE     , '')                                                        AS BANK_CODE
		          , ISNULL(D.CUSTOM_NAME   , '')                                                        AS BANK_NAME
		          , ISNULL(uniLITE.FNCIPHERDECRYPT(C.BANKBOOK_NUM, ''), '')                             AS BANKBOOK_NUM
		          , ISNULL(C.BANKBOOK_NAME , '')                                                        AS BANKBOOK_NAME
		          , (CASE WHEN ISNULL(C.COMPANY_NUM, '') = ''
							 THEN ''
							  ELSE  SUBSTRING(C.COMPANY_NUM, 1, 3) + '-' +
									SUBSTRING(C.COMPANY_NUM, 4, 2) + '-' +
									SUBSTRING(C.COMPANY_NUM, 6, 5)
									END)																AS COMPANY_NUM

		          , ISNULL(C.TELEPHON      , '')                                                        AS TELEPHON
		          , ISNULL(C.TOT_CREDIT_AMT, 0 )                                                        AS TOT_CREDIT_AMT
		          , B.PAY_YYYYMM                                                                        AS PAY_YYYYMM_CHECK
		          , B.EX_DATE                                                                           AS EX_DATE
		          , CASE WHEN B.PAY_AMT IS     NULL AND B.PAY_YYYYMM IS     NULL THEN '미확정'
		                 WHEN B.PAY_AMT IS NOT NULL AND B.PAY_YYYYMM IS NOT NULL THEN '확정'
		            END                                                                                 AS CHECK_NAME
		          , CASE WHEN B.PAY_AMT IS     NULL AND B.PAY_YYYYMM IS     NULL THEN '미확정'
		                 WHEN B.PAY_AMT IS NOT NULL AND B.PAY_YYYYMM IS NOT NULL THEN '확정'
		            END                                                                                 AS CHECK_NAME_DUMMY
		          , B.BILL_DATE
		          , B.BILL_DATE		AS  BILL_DATE_DUMMY
		          , E.REF_CODE1		AS	RECEIPT_DAY_REF
		          , F.REF_CODE3		AS	AGENT_TYPE_REF
		          , B.TAX_AMT
		          , B.COLLECT_DAY 	AS  COLLECT_DAY_MAP050_G
		          
                  , SUM(A.RANGE_IN_AMT_I)                            AS RANGE_IN_AMT_I      -- 매입액(20160307신규추가)
		          , SUM(A.RANGE_SALE_AMT_I)                          AS RANGE_SALE_AMT_I    -- 매출액(20160307신규추가)
                  --, SUM(A.RANGE_IN_AMT_I)  - SUM(A.SALE_COST)        AS RANGE_STOCK_I       -- 재고액(20160307신규추가)
                  , CASE WHEN SUM(A.RANGE_IN_AMT_I)  - SUM(A.SALE_COST) &lt; 0 THEN 0
                         ELSE SUM(A.RANGE_IN_AMT_I)  - SUM(A.SALE_COST)
                    END AS RANGE_STOCK_I
		
		    FROM               T_MAP080UKRV1  A WITH (NOLOCK)
		            LEFT  JOIN MAP050T        B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                     AND B.DIV_CODE    = A.DIV_CODE
		                                                     AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                                                     AND B.PAY_YYYYMM  = #{PAY_YYYYMM}
		                                                    
		            LEFT  JOIN BCM100T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                     AND C.CUSTOM_CODE = A.CUSTOM_CODE
		            LEFT  JOIN BCM100T        D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
		                                                     AND D.CUSTOM_CODE = C.BANK_CODE
		                                                     AND D.CUSTOM_TYPE = '4'
		                                                     
		            INNER JOIN BSA100T		  E WITH (NOLOCK) ON E.COMP_CODE   = C.COMP_CODE
		            										 AND E.MAIN_CODE   = 'YP36'
		            										 AND E.SUB_CODE    = C.BILL_TYPE
		            INNER JOIN BSA100T		  F WITH (NOLOCK) ON F.COMP_CODE   = C.COMP_CODE
		            										 AND F.MAIN_CODE   = 'B055'
		            										 AND F.SUB_CODE    = C.AGENT_TYPE
		            										 
		            LEFT  JOIN BOR100T        H WITH (NOLOCK) ON A.COMP_CODE   = H.COMP_CODE
		            LEFT  JOIN BOR120T        I WITH (NOLOCK) ON A.COMP_CODE   = I.COMP_CODE
		            										 AND A.DIV_CODE    = I.DIV_CODE     
		            										 
		               
		    WHERE   A.TYPE_KEY  = @TypeKey
		    <if test="CHECKING == &quot;B&quot;">
		    AND B.PAY_AMT IS NOT NULL 
		    AND B.PAY_YYYYMM IS NOT NULL
			</if>
		    <if test="CHECKING == &quot;C&quot;">
		    AND B.PAY_AMT IS     NULL 
		    AND B.PAY_YYYYMM IS     NULL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(COLLECT_DAY_MAP050)">
		    AND B.COLLECT_DAY = #{COLLECT_DAY_MAP050}
		    </if>
		    GROUP BY A.COMP_CODE  , A.DIV_CODE, A.CUSTOM_CODE, C.CUSTOM_NAME, C.AGENT_TYPE, C.RECEIPT_DAY, C.COLLECT_DAY , C.BILL_TYPE
		           , C.TOP_NAME   , C.ADDR1   , C.BANK_CODE  , D.CUSTOM_NAME, uniLITE.FNCIPHERDECRYPT(C.BANKBOOK_NUM, ''), C.BANKBOOK_NAME
		           , C.COMPANY_NUM, C.TELEPHON, C.TOT_CREDIT_AMT, B.PAY_AMT , B.PAY_YYYYMM, B.EX_DATE, B.BILL_DATE
		           , E.REF_CODE1  , F.REF_CODE3 , B.TAX_AMT , B.COLLECT_DAY
		           , H.COMP_NAME  , I.DIV_NAME
		           
		   -- HAVING SUM(A.IWAL_IN_AMT_I) != 0 OR SUM(A.IN_CR_AMT_I) != 0 OR SUM(A.IN_DR_AMT_I)  != 0
		    ORDER BY A.COMP_CODE, A.DIV_CODE,(CASE WHEN B.PAY_AMT IS NOT NULL THEN 1 ELSE 2 END), A.CUSTOM_CODE
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	
	<select id="DS_SUB01" parameterType="Map" resultType="rMap" >	
	/* mrt100rkrServiceImpl.DS_SUB01  */	
	
	</select>
</mapper>