<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="map300ukrvServiceImpl">

	<select id="map300ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* map300ukrv.Cmap300ukrv[fnmtr100q] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT CAST(0 AS BIT) AS CHOICE
         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
             END) AS INOUT_DATE
         , A.INOUT_CODE
         , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                     ELSE C.CUSTOM_NAME
             END) AS CUSTOM_NAME
         , A.INOUT_NUM
         , A.INOUT_SEQ
         , A.INOUT_TYPE_DETAIL
         , A.INOUT_METH
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                     ELSE B.ITEM_NAME
             END) AS ITEM_NAME
         , E.ITEM_ACCOUNT
         , B.SPEC
         , ISNULL(A.ORDER_UNIT ,B.STOCK_UNIT) ORDER_UNIT
         , A.ORDER_UNIT_Q
         , A.ITEM_STATUS
         , A.INOUT_Q AS ORIGINAL_Q
         , ISNULL(D.GOOD_STOCK_Q,0) GOOD_STOCK_Q
         , ISNULL(D.BAD_STOCK_Q,0) BAD_STOCK_Q
         , ISNULL(F.ORDER_Q,0) - ISNULL(F.INSTOCK_Q,0) AS  NOINOUT_Q
         , A.PRICE_YN
         , A.MONEY_UNIT
         , A.INOUT_FOR_P
         , A.INOUT_FOR_O
         , A.ORDER_UNIT_FOR_P
         , A.INOUT_FOR_O AS ORDER_UNIT_FOR_O
         , A.ACCOUNT_YNC
         , A.EXCHG_RATE_O
         , A.INOUT_P
         , A.INOUT_I
         , A.ORDER_UNIT_P
         , A.INOUT_I AS ORDER_UNIT_I
         , B.STOCK_UNIT
         , A.TRNS_RATE
         , A.INOUT_Q
         , A.ORDER_TYPE
         , A.LC_NUM
         , A.BL_NUM
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , ISNULL(F.ORDER_Q,0) AS  ORDER_Q
         , A.INOUT_CODE_TYPE
         , A.WH_CODE
         , A.INOUT_PRSN
         , A.ACCOUNT_Q
         , A.CREATE_LOC
         , A.SALE_C_DATE
         , A.REMARK
         , A.PROJECT_NO
         , A.LOT_NO
         , A.INOUT_TYPE
         , A.DIV_CODE
         , C.COMPANY_NUM
         , ISNULL(F.INSTOCK_Q,0) AS  INSTOCK_Q
         , A.SALE_DIV_CODE
         , A.SALE_CUSTOM_CODE
         , A.BILL_TYPE
         , A.SALE_TYPE
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , E.EXCESS_RATE
         , A.INSPEC_NUM
         , A.INSPEC_SEQ
         , 'N' AS APPLY_YN
         , A.COMP_CODE
      FROM            BTR100T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.ITEM_CODE  = B.ITEM_CODE
                                             AND A.COMP_CODE  = B.COMP_CODE
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.INOUT_CODE = C.CUSTOM_CODE
                                             AND A.COMP_CODE  = C.COMP_CODE
           INNER JOIN BPR200T E WITH (NOLOCK) ON A.ITEM_CODE  = E.ITEM_CODE
                                             AND A.DIV_CODE   = E.DIV_CODE
                                             AND A.COMP_CODE  = E.COMP_CODE
           LEFT  JOIN BIV100T D WITH (NOLOCK) ON A.WH_CODE    = D.WH_CODE
                                             AND A.ITEM_CODE  = D.ITEM_CODE
                                             AND A.DIV_CODE   = D.DIV_CODE
                                             AND A.COMP_CODE  = D.COMP_CODE
           LEFT  JOIN MPO200T F WITH (NOLOCK) ON A.COMP_CODE  = F.COMP_CODE
                                             AND A.DIV_CODE   = F.IN_DIV_CODE
                                             AND A.INOUT_CODE = F.CUSTOM_CODE
                                             AND A.ORDER_NUM  = F.ORDER_NUM
                                             AND A.ORDER_SEQ  = F.ORDER_SEQ
     WHERE A.COMP_CODE        = @CompCode
       AND A.INOUT_TYPE       = '1'
       AND A.CREATE_LOC       = '2'
       AND A.INOUT_CODE_TYPE IN ('4','5')
       AND A.ACCOUNT_Q = 0
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND A.DIV_CODE         = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
       AND A.INOUT_DATE      &gt;= #{INOUT_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
       AND A.INOUT_DATE      &lt;= #{INOUT_DATE_TO}
</if>

<!--2021.08 표준화 작업 Start-->
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	AND C.CUSTOM_CODE = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
	AND C.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
</if>
<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	AND		(CASE	WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
					WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
					ELSE C.CUSTOM_NAME
			END) LIKE N'%' + #{CUSTOM_NAME} + N'%'
</if>
<!--2021.08 표준화 작업 End-->
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
       AND A.ORDER_TYPE       = #{ORDER_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
       AND A.MONEY_UNIT       = #{MONEY_UNIT}
</if>
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
       AND A.WH_CODE          = #{WH_CODE}
</if>
<!--2021.08 표준화 작업 Start-->
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	AND A.ITEM_CODE = #{ITEM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
</if>
<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	AND		(CASE	WHEN @RefItem = '1' THEN B.ITEM_NAME1
					WHEN @RefItem = '2' THEN B.ITEM_NAME2
					ELSE B.ITEM_NAME
			END) LIKE N'%' + @ITEM_NAME + N'%'
</if>
<!--2021.08 표준화 작업 End-->
<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	AND E.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
</if>
<if test="@foren.Ognl@isNotEmpty(PRICE_YN)">
	AND A.PRICE_YN = #{PRICE_YN}
</if>
<if test="@foren.Ognl@isNotEmpty(ACCOUNT_YNC)">
	AND A.ACCOUNT_YNC = #{ACCOUNT_YNC}
</if>

     ORDER BY A.INOUT_DATE, C.CUSTOM_NAME, A.INOUT_TYPE_DETAIL, A.ITEM_CODE

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
	</select>

	<insert id="map300ukrvServiceImpl.insertLogMaster" parameterType="Map">		/* 저장쿼리 */
		INSERT INTO L_BTR100T(
				KEY_VALUE, OPR_FLAG
			  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
              , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
              , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
              , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
              , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
              , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
              , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
              , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
              , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
              , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
              , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
              , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03)
        SELECT  #{KEY_VALUE}, #{OPR_FLAG}
        	  ,	#{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
              , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, INOUT_CODE_DETAIL, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, WH_CELL_CODE, #{INOUT_PRSN}
              , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}, EXPENSE_I, RETURN_QTY
              , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, #{PROJECT_NO}, PJT_CODE, #{LOT_NO}, #{REMARK}
              , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, ORDER_UNIT, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{INOUT_I}, INOUT_TAX_AMT, #{ORDER_UNIT_FOR_P}
              , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, #{BILL_TYPE}, #{SALE_TYPE}, TAX_TYPE
              , #{PRICE_YN}, SALE_PRSN, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, SALE_C_YN, #{SALE_C_DATE}, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
              , #{LC_NUM}, #{BL_NUM}, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, #{ACCOUNT_YNC}, #{ACCOUNT_Q}, FR_ACCOUNT, TO_ACCOUNT
              , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
              , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, #{INSPEC_NUM}, #{INSPEC_SEQ}, SCM_FLAG_YN, DELIVERY_NO
              , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
              , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
        FROM   BTR100T   A  WITH (NOLOCK)
        WHERE    A.COMP_CODE  = #{S_COMP_CODE}
	      	 AND A.DIV_CODE   = #{DIV_CODE}
	         AND A.INOUT_NUM  = #{INOUT_NUM}
	         AND A.INOUT_SEQ  = #{INOUT_SEQ}
	         AND A.INOUT_TYPE = #{INOUT_TYPE}


	</insert>
	<update id="spMap300ukrv" parameterType="Map" statementType="CALLABLE">
		{call SP_MAP300UKRV(
			#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
</mapper>