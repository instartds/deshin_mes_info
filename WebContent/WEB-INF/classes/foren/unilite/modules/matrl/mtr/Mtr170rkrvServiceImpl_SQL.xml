<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr170skrvServiceImpl">
					
	<select id="mtr170skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
    
         BEGIN 

         DECLARE @COMP_CODE    NVARCHAR(08),
                 @DIV_CODE     NVARCHAR(08),
                 @BASIS_YYYYMM NVARCHAR(10),
                 @ITEM_LEVEL1  NVARCHAR(30),
                 @ITEM_LEVEL2  NVARCHAR(30),
                 @ITEM_LEVEL3  NVARCHAR(30),
                 @CREATE_LOC   NVARCHAR(05),
                 @INOUT_PRSN   NVARCHAR(05),
        
                 @GUBUN        NVARCHAR(01),
                 @VIEW_OPT     NVARCHAR(01),
                 @EXPENSE_YN   NVARCHAR(01)
        

         SET @GUBUN        = #{GUBUN}
         SET @COMP_CODE    = #{S_COMP_CODE}
         SET @DIV_CODE     = #{DIV_CODE}
         SET @BASIS_YYYYMM = #{BASIS_YYYYMM}
         SET @INOUT_PRSN   = #{INOUT_PRSN}
         SET @ITEM_LEVEL1  = (CASE WHEN #{ITEM_LEVEL1} = NULL THEN '' ELSE #{ITEM_LEVEL1} END)
         SET @ITEM_LEVEL2  = (CASE WHEN #{ITEM_LEVEL2} = NULL THEN '' ELSE #{ITEM_LEVEL2} END)
         SET @ITEM_LEVEL3  = (CASE WHEN #{ITEM_LEVEL3} = NULL THEN '' ELSE #{ITEM_LEVEL3} END)
         SET @CREATE_LOC   = (CASE WHEN #{CREATE_LOC} = '1' THEN '2'
                                   WHEN #{CREATE_LOC} = '2' THEN '6'
                                   WHEN #{CREATE_LOC} = NULL THEN '' ELSE #{CREATE_LOC} END)

         SET @VIEW_OPT     = #{VIEW_OPT}
         SET @EXPENSE_YN   = #{EXPENSE_YN}
    
         SET @BASIS_YYYYMM = @BASIS_YYYYMM + '01'
        
         BEGIN
        
            SELECT

             CASE WHEN @GUBUN = '1' THEN A.ITEM_CODE ELSE A.INOUT_CODE END  AS INDEX_01
            ,CASE WHEN @GUBUN = '1' THEN B.ITEM_NAME ELSE D.CUSTOM_NAME END AS INDEX_02
            ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -11, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I1
            ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -10, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I2
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -9, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I3      
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -8, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I4
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -7, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I5
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -6, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I6
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -5, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I7
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -4, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I8
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -3, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I9  
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -2, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I10  
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -1, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I11                   
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) = LEFT(CONVERT(CHAR(08), DATEADD(MM, -0, @BASIS_YYYYMM), 112), 6) THEN 
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I12
             ,SUM(CASE WHEN LEFT(A.INOUT_DATE,6) >= LEFT(CONVERT(CHAR(08), DATEADD(MM, -11, @BASIS_YYYYMM), 112), 6) 
                        AND LEFT(A.INOUT_DATE,6) &lt;= LEFT(CONVERT(CHAR(08), DATEADD(MM, -0, @BASIS_YYYYMM), 112), 6) THEN
                        (CASE WHEN @VIEW_OPT = '1' THEN 
                               (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                         ELSE 0 END)                                                                                            AS AMOUNT_I13
            FROM BTR100T A WITH(NOLOCK)
                 INNER JOIN BPR100T B ON A.COMP_CODE  = B.COMP_CODE
                                     AND A.ITEM_CODE  = B.ITEM_CODE
                 INNER JOIN BPR200T C ON B.COMP_CODE  = C.COMP_CODE 
                                     AND B.ITEM_CODE  = C.ITEM_CODE
                 INNER JOIN BCM100T D ON A.COMP_CODE  = D.COMP_CODE
                                     AND A.INOUT_CODE = D.CUSTOM_CODE
            WHERE A.COMP_CODE = @COMP_CODE
              AND A.DIV_CODE  = @DIV_CODE
              AND A.INOUT_TYPE = '1'
              AND A.CREATE_LOC IN ('2', '6') 
              AND A.INOUT_CODE_TYPE IN ('4', '5')
              AND ISNULL(A.ORDER_TYPE,'') != '4'
              AND LEFT(A.INOUT_DATE,6) >= LEFT(CONVERT(CHAR(08), DATEADD(MM, -11, @BASIS_YYYYMM), 112), 6)
              AND LEFT(A.INOUT_DATE,6) &lt;= LEFT(CONVERT(CHAR(08), DATEADD(MM, -0, @BASIS_YYYYMM), 112), 6)
              AND ((@INOUT_PRSN != ''  AND A.INOUT_PRSN = @INOUT_PRSN) OR (@INOUT_PRSN = ''))
              AND ((@ITEM_LEVEL1 != '' AND B.ITEM_LEVEL1 = @ITEM_LEVEL1) OR (@ITEM_LEVEL1 = ''))
              AND ((@ITEM_LEVEL2 != '' AND B.ITEM_LEVEL2 = @ITEM_LEVEL2) OR (@ITEM_LEVEL2 = ''))
              AND ((@ITEM_LEVEL3 != '' AND B.ITEM_LEVEL3 = @ITEM_LEVEL3) OR (@ITEM_LEVEL3 = ''))
              AND ((@CREATE_LOC != ''  AND A.CREATE_LOC = @CREATE_LOC) OR (@CREATE_LOC = ''))

              
              GROUP BY (CASE WHEN @GUBUN = '1' THEN A.ITEM_CODE ELSE A.INOUT_CODE  END),
                       (CASE WHEN @GUBUN = '1' THEN B.ITEM_NAME ELSE D.CUSTOM_NAME END)
        
              HAVING SUM(CASE WHEN LEFT(A.INOUT_DATE,6) >= LEFT(CONVERT(CHAR(08), DATEADD(MM, -11, @BASIS_YYYYMM), 112), 6) 
                               AND LEFT(A.INOUT_DATE,6) &lt;= LEFT(CONVERT(CHAR(08), DATEADD(MM, -0, @BASIS_YYYYMM), 112), 6) THEN
                                (CASE WHEN @VIEW_OPT = '1' THEN 
                                       (CASE WHEN @EXPENSE_YN = 'Y' THEN A.INOUT_I + A.EXPENSE_I ELSE A.INOUT_I END) ELSE A.INOUT_Q END) 
                                 ELSE 0 END) 
                     != 0.0 
        
        
            END
        
        END 
								
 	</select>	
	
</mapper>