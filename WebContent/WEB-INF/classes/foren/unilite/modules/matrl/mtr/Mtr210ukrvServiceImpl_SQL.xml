<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr210ukrvServiceImpl">
	<select id="mtr210ukrvServiceImpl.selectInoutType" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'M104'
		   AND SUB_CODE != '$'
		   AND SUB_CODE = #{INOUT_TYPE_DETAIL}
		   AND ISNULL(REF_CODE5,'N') = 'Y'
	</select>
	<select id="mtr210ukrvServiceImpl.selectreleaseNoMasterList" parameterType="Map" resultType="rMap">     /* 검색팝업창 */
        /* mtr210ukrv.Cmtr210ukrv[fnMtr200QPop] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT DISTINCT
                   A.WH_CODE
                 , A.WH_CELL_CODE
                 , B.WH_CELL_NAME
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END) AS INOUT_DATE
                 , A.INOUT_CODE_TYPE

                 , A.INOUT_CODE
                 , (CASE A.INOUT_CODE_TYPE WHEN '4' THEN C.CUSTOM_NAME
                                           WHEN '1' THEN D.TREE_NAME
                                           WHEN '2' THEN E1.TREE_NAME
                                           WHEN '3' THEN E.TREE_NAME
                     END) AS INOUT_NAME
                 , A.INOUT_PRSN
                 , A.INOUT_TYPE
                 , A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.COMP_CODE
                 , A.DIV_CODE
                 , A.LOT_NO
                 , A.PROJECT_NO
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END) AS ITEM_NAME
                 --20190605 필수 값인데 입력하는 부분 누락되어 추가
                 , A.INOUT_TYPE_DETAIL
              FROM            BTR100T AS A  WITH(NOLOCK)
                   LEFT  JOIN BSA225T AS B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                        AND B.DIV_CODE     = A.DIV_CODE
                                                        AND B.WH_CODE      = A.WH_CODE
                                                        AND B.WH_CELL_CODE = A.WH_CELL_CODE
                   LEFT  JOIN BCM100T AS C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                                        AND C.CUSTOM_CODE  = A.INOUT_CODE
                   LEFT  JOIN BSA210T AS D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                                        AND D.TYPE_LEVEL   = A.DIV_CODE
                                                        AND D.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA230T AS E  WITH(NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                                        AND E.TYPE_LEVEL   = A.DIV_CODE
                                                        AND E.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA220T AS E1 WITH(NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
                                                        AND E1.TYPE_LEVEL  = A.DIV_CODE
                                                        AND E1.TREE_CODE   = A.INOUT_CODE
                   INNER JOIN BPR100T AS F  WITH(NOLOCK) ON F.COMP_CODE    = A.COMP_CODE
                                                        AND F.ITEM_CODE    = A.ITEM_CODE
             WHERE A.COMP_CODE              = @CompCode
               AND A.INOUT_TYPE            IN ('2', '3')
               AND A.CREATE_LOC            IN ('2', '3')
               AND A.INOUT_CODE_TYPE       != '5'
               AND ISNULL(A.ORDER_TYPE,'') != '4'
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE               = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
               AND A.INOUT_DATE            &gt;= #{FR_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
               AND A.INOUT_DATE            &lt;= #{TO_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
               AND A.INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WORK_SHOP)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WORK_SHOP}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_DEPT)">
               AND A.INOUT_CODE             = #{INOUT_CODE_DEPT}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WH)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WH}
            </if>

            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
               AND A.WH_CODE                = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
               AND A.INOUT_PRSN             = #{INOUT_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
               AND A.WH_CELL_CODE           = #{WH_CELL_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
               AND A.LOT_NO              LIKE #{LOT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
               AND A.PROJECT_NO          LIKE #{PROJECT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE           LIKE #{ITEM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END)                LIKE '%' + #{ITEM_NAME}    + '%'
            </if>
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

    <select id="mtr210ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">        /* 메인조회창 */
        /*mtr210ukrv.Cmtr210ukrv[fnMtr200QStd] Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
                  , @UserId         NVARCHAR(100) /* 사용자ID    */
                  , @LangType       NVARCHAR(2)  /* 언어구분    */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                  , @SumType        NVARCHAR(10)

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            SELECT TOP 1 @SumType = ISNULL(MAX(SUB_CODE), '')
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B084'
               AND REF_CODE1 = N'Y'

            /* 데이터 조회 */
            SELECT A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.INOUT_METH
                 , A.INOUT_TYPE_DETAIL
                 , A.DIV_CODE
                 , A.INOUT_CODE
                 , (CASE WHEN A.INOUT_CODE_TYPE = '1' THEN C1.TREE_NAME END) AS INOUT_NAME2-- 부서
                 , (CASE WHEN A.INOUT_CODE_TYPE = '2' THEN A.INOUT_CODE END) AS INOUT_NAME  -- 창고
                 , (CASE WHEN A.INOUT_CODE_TYPE = '3' THEN C3.TREE_NAME END) AS INOUT_NAME1 -- 작업장
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                     END)   AS ITEM_NAME
                 , C.SPEC
                 , C.STOCK_UNIT
                 , G.PATH_CODE
                 , uniLITE.fnFormat(@CompCode, ISNULL(G.OUTSTOCK_REQ_Q, 0) - ISNULL(G.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS NOT_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS INOUT_Q
                 , A.ITEM_STATUS
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS ORIGINAL_Q
                 ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')  AS GOOD_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')   AS BAD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
							THEN  uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')
							ELSE  uniLITE.fnFormat(@CompCode, ISNULL(C5.GOOD_STOCK_Q,0), 'M_FSET_QS')
					END  AS GOOD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
							THEN uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')
							ELSE uniLITE.fnFormat(@CompCode, ISNULL(C5.BAD_STOCK_Q,0), 'M_FSET_QS')
				   END  AS BAD_STOCK_Q
                 , A.BASIS_NUM
                 , A.BASIS_SEQ
                 , A.INOUT_TYPE
                 , A.INOUT_CODE_TYPE
                 , A.WH_CODE
                 , A.WH_CELL_CODE
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END)                                           AS INOUT_DATE
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0), 'M_FSET_QS')      AS INOUT_P
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0), 'M_FSET_QS')      AS INOUT_I
                 , A.MONEY_UNIT
                 , A.INOUT_PRSN
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0), 'M_FSET_QS')    AS ACCOUNT_Q
                 , A.ACCOUNT_YNC
                 , ISNULL(A.CREATE_LOC, '')                                            AS CREATE_LOC
                 , A.ORDER_NUM
                 , A.REMARK
                 , A.PROJECT_NO
                 , A.LOT_NO
                 , A.SALE_DIV_CODE
                 , A.SALE_CUSTOM_CODE
                 , A.BILL_TYPE
                 , A.SALE_TYPE
                 , A.COMP_CODE
                 , H.OUTSTOCK_NUM           					 AS ARRAY_OUTSTOCK_NUM       -- 출고요청번호(ARRAY DATA)
                 , ISNULL(H.REF_WKORD_NUM, A.ORDER_NUM)          AS ARRAY_REF_WKORD_NUM      -- 작업지시번호(ARRAY DATA)
                 , H.OUTSTOCK_REQ_Q         					 AS ARRAY_OUTSTOCK_REQ_Q     -- 출고요청량  (ARRAY DATA)
                 , H.OUTSTOCK_Q             					 AS ARRAY_OUTSTOCK_Q         -- 출고량      (ARRAY DATA)
                 , H.REMARK                 					 AS ARRAY_REMARK             -- 비고        (ARRAY DATA)
                 , H.PROJECT_NO             					 AS ARRAY_PROJECT_NO         -- 프로젝트번호(ARRAY DATA)
                 , H.LOT_NO                 					 AS ARRAY_LOT_NO             -- LOT 번호    (ARRAY DATA)
                 , C4.LOT_YN                					 AS LOT_YN                   -- LOT 관리여부
                 , A.ORDER_NUM
                 , A.ORDER_SEQ
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
            FROM              BTR100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                      AND C.ITEM_CODE      = A.ITEM_CODE
                   INNER JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
                                                      AND C4.DIV_CODE      = A.DIV_CODE
                                                      AND C4.ITEM_CODE     = A.ITEM_CODE
                   LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.DIV_CODE       = A.DIV_CODE
                                                      AND D.WH_CODE        = A.WH_CODE
                                                      AND D.ITEM_CODE      = A.ITEM_CODE
                   LEFT  JOIN (SELECT A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                                    , SUM(ISNULL(B.OUTSTOCK_REQ_Q, 0))  AS OUTSTOCK_REQ_Q
                                    , SUM(ISNULL(B.OUTSTOCK_Q, 0))      AS OUTSTOCK_Q
                               FROM              PMP350T A WITH (NOLOCK)
                                      INNER JOIN PMP300T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
                                                                        AND A.DIV_CODE      = B.DIV_CODE
                                                                        AND A.OUTSTOCK_NUM  = B.OUTSTOCK_NUM
                                                                        AND A.REF_WKORD_NUM = B.REF_WKORD_NUM
                                                                        AND A.ITEM_CODE     = B.ITEM_CODE
                               WHERE  A.COMP_CODE = @CompCode
                            <if test="@foren.Ognl@isEmpty(DIV_CODE)">
                               AND    A.DIV_CODE  = #{DIV_CODE}
                            </if>
                            <if test="@foren.Ognl@isEmpty(INOUT_NUM)">
                               AND    A.INOUT_NUM = #{INOUT_NUM}
                            </if>
                               GROUP BY A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE
                                      , A.PATH_CODE) G ON G.COMP_CODE      = A.COMP_CODE
                                                      AND G.DIV_CODE       = A.DIV_CODE
                                                      AND G.INOUT_NUM      = A.INOUT_NUM
                                                      AND G.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND G.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN uniLITE.fnArrayOutStockReq(@CompCode, #{DIV_CODE}, #{INOUT_NUM}, 0) H
                                                       ON H.COMP_CODE      = A.COMP_CODE
                                                      AND H.DIV_CODE       = A.DIV_CODE
                                                      AND H.INOUT_NUM      = A.INOUT_NUM
                                                      AND H.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND H.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN BSA210T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
                                                      AND C1.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C1.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
                                                      AND C2.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C2.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA230T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
                                                      AND C3.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C3.TREE_CODE     = A.INOUT_CODE
				  LEFT JOIN BIV150T C5 WITH (NOLOCK) ON C5.COMP_CODE     = A.COMP_CODE
													  AND C5.ITEM_CODE	  = A.ITEM_CODE
													  AND C5.WH_CODE	  = A.WH_CODE
													  AND C5.WH_CELL_CODE = A.WH_CELL_CODE
													  AND C5.LOT_NO		  = ISNULL(A.LOT_NO,'')
													  AND C5.SUM_TYPE   = @SumType
            WHERE  A.COMP_CODE        = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND    A.DIV_CODE         = #{DIV_CODE}
            </if>
            AND    A.INOUT_TYPE      IN ('2', '3')
            AND    A.CREATE_LOC      IN ('2', '3')
            AND    A.INOUT_CODE_TYPE != '4'
            <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
            AND    A.INOUT_NUM        = #{INOUT_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND    A.LOT_NO        LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
            AND    A.PROJECT_NO    LIKE #{PROJECT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
            AND    (CASE WHEN @RefItem = N'1' THEN C.ITEM_NAME1
                         WHEN @RefItem = N'2' THEN C.ITEM_NAME2
                                              ELSE C.ITEM_NAME
                     END)          LIKE  #{ITEM_NAME}+ '%'
            </if>
            ORDER BY A.INOUT_NUM, A.INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>



    <insert id="mtr210ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE		    , OPR_FLAG
             , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
             , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
             , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
             , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
             , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
             , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE           , PATH_CODE
             , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC		    , ACCOUNT_Q 			, OUTSTOCK_NUM        , REF_WKORD_NUM
             , UPDATE_DB_USER       , UPDATE_DB_TIME

            <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
             , ORDER_SEQ
            </if>
             )
        VALUES
             ( #{KEY_VALUE}         , #{OPR_FLAG}
             , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
             , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
             , #{INOUT_CODE_DETAIL} , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
             , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
             , #{MONEY_UNIT}        , #{ORDER_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
             , #{LOT_NO}            , #{REMARK}             , #{ARRAY_REF_WKORD_NUM}          , #{BILL_TYPE}          , #{SALE_TYPE}          , #{PATH_CODE}
             , #{SALE_DIV_CODE}     , #{SALE_CUSTOM_CODE}   , #{ACCOUNT_YNC}        , #{ACCOUNT_Q} 			, #{ARRAY_OUTSTOCK_NUM} , #{ARRAY_REF_WKORD_NUM}
             , #{S_USER_ID}         , GETDATE()

            <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
             , #{ORDER_SEQ}
            </if>
             )
    </insert>

    <update id="mtr210ukrvServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_MATRL_Mtr200ukr  (
            #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
</mapper>