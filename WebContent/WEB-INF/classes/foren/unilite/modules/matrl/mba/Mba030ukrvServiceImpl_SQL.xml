<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mba030ukrvServiceImpl">

	<!-- 단위환산정보등록 -->
	<select id="mba030ukrvServiceImpl.select" parameterType="Map" resultType="rMap">
		/* mba140ukrv.Cmba140ukrv[fnBpr600QStd] Query01 _ select */
		DECLARE @BASE_UNIT NVARCHAR(50)

		SET @BASE_UNIT = #{BASE_UNIT}
		SET @BASE_UNIT = ISNULL(@BASE_UNIT, '')

		SELECT STOCK_UNIT
		     , ORDER_UNIT
		     , TRNS_RATE
		     , ITEM_CHG
		     , CAST(UPDATE_DB_TIME AS DATETIME) AS UPDATE_DATE
		     , COMP_CODE
		  FROM BPR600T WITH(NOLOCK)
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND STOCK_UNIT LIKE @BASE_UNIT + '%'
   	</select>

    <select id="mba030ukrvServiceImpl.select2" parameterType="Map" resultType="rMap">
        --mba100ukrv.Cmba100ukrv[fnMba100QStd] Query04
        SELECT A.ITEM_CODE
             , B.DIV_CODE
             , uniLITE.fnItemNameComp(A.COMP_CODE, N'unilite5',A.ITEM_CODE) AS ITEM_NAME
             , A.SPEC
             , A.STOCK_UNIT
             , B.ORDER_UNIT
             , B.BASIS_P
             , (SELECT X.CODE_NAME
                  FROM BSA100T X
                 WHERE X.COMP_CODE = A.COMP_CODE
                   AND X.MAIN_CODE = N'B019'
                   AND X.SUB_CODE  = A.DOM_FORIGN) AS DOM_FORIGN
             , (SELECT X.CODE_NAME
                  FROM BSA100T X
                 WHERE X.COMP_CODE = A.COMP_CODE
                   AND X.MAIN_CODE = N'B020'
                   AND X.SUB_CODE  = B.ITEM_ACCOUNT) AS ITEM_ACCOUNT
             , A.COMP_CODE
          FROM BPR100T A
             , BPR200T B
         WHERE A.COMP_CODE = B.COMP_CODE
           AND A.ITEM_CODE = B.ITEM_CODE
           AND A.USE_YN    = N'Y'
           AND A.COMP_CODE = #{S_COMP_CODE}
           AND B.DIV_CODE  = #{DIV_CODE}
           <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
           AND B.ITEM_ACCOUNT LIKE #{ITEM_ACCOUNT} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
           AND A.ITEM_LEVEL1  LIKE #{ITEM_LEVEL1} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
           AND A.ITEM_LEVEL2  LIKE #{ITEM_LEVEL2} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
           AND A.ITEM_LEVEL3  LIKE #{ITEM_LEVEL3} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE    LIKE #{ITEM_CODE} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
           AND A.ITEM_NAME    LIKE #{ITEM_NAME} + '%'
           </if>
         ORDER BY A.ITEM_CODE
    </select>

    <select id="mba030ukrvServiceImpl.select2_1" parameterType="Map" resultType="rMap">
        --mba100ukrv.Cmba100ukrv[fnMba100QStd] Query07
        SELECT A.TYPE
             , A.DIV_CODE
             , A.ITEM_CODE
             , A.CUSTOM_CODE
             , MAX(uniLITE.fnCustNameComp(A.COMP_CODE, N'unilite5', B.CUSTOM_CODE)) AS CUSTOM_NAME
             , A.MONEY_UNIT
             , A.ORDER_UNIT
             , (SELECT C.ITEM_P
                  FROM BPR400T C
                 WHERE C.TYPE            = '1'
                   AND C.COMP_CODE       = A.COMP_CODE
                   AND C.DIV_CODE        = A.DIV_CODE
                   AND C.ITEM_CODE       = A.ITEM_CODE
                   AND C.CUSTOM_CODE     = A.CUSTOM_CODE
                   AND C.MONEY_UNIT      = A.MONEY_UNIT
                   AND C.ORDER_UNIT      = A.ORDER_UNIT
                   AND C.APLY_START_DATE = MAX(A.APLY_START_DATE)) AS ITEM_P
             , uniLITE.fnGetUserDate(A.COMP_CODE, MAX(A.APLY_START_DATE)) AS APLY_START_DATE
             , A.ORDER_RATE
             , MAX(A.UPDATE_DB_USER) AS UPDATE_DB_USER
             , MAX(A.UPDATE_DB_TIME) AS UPDATE_DB_TIME
             , A.COMP_CODE
          FROM BPR400T A
             , BCM100T B
         WHERE A.COMP_CODE        = B.COMP_CODE
           AND A.CUSTOM_CODE      = B.CUSTOM_CODE
           AND A.TYPE             = N'1'
           AND A.COMP_CODE        = #{S_COMP_CODE}
           AND A.DIV_CODE         = #{DIV_CODE}
           AND A.ITEM_CODE        = #{ITEM_CODE}
           AND A.APLY_START_DATE &lt;= GETDATE()
         GROUP BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE, A.MONEY_UNIT
                , A.ORDER_UNIT, A.ORDER_RATE, A.COMP_CODE
         ORDER BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE,  A.MONEY_UNIT
                , A.ORDER_UNIT, A.ORDER_RATE
    </select>

    <insert id="mba030ukrvServiceImpl.insertDetail0_2" parameterType="Map">
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        INSERT INTO BPR400T
             ( TYPE
             , ITEM_CODE
             , CUSTOM_CODE
             , MONEY_UNIT
             , ORDER_UNIT
             , ITEM_P
             , APLY_START_DATE
             , DIV_CODE
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE
             )
        VALUES
             ( #{TYPE}
             , #{ITEM_CODE}
             , #{CUSTOM_CODE}
             , #{MONEY_UNIT}
             , #{ORDER_UNIT}
             , #{ITEM_P}
             , #{APLY_START_DATE}
             , #{DIV_CODE}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_COMP_CODE}
             )
    </insert>

    <update id="mba030ukrvServiceImpl.updateDetail0_2" parameterType="Map">
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        UPDATE BPR400T
           SET ITEM_P          = #{ITEM_P}
             , DIV_CODE        = #{DIV_CODE}
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             , REMARK          = #{REMARK}

         WHERE TYPE            = #{TYPE}
           AND ITEM_CODE       = #{ITEM_CODE}
           AND CUSTOM_CODE     = #{CUSTOM_CODE}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND ORDER_UNIT      = #{ORDER_UNIT}
           AND APLY_START_DATE = #{APLY_START_DATE}
           AND COMP_CODE       = #{S_COMP_CODE}
    </update>

    <delete id="mba030ukrvServiceImpl.deleteDetail0_2" parameterType="Map">
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        DELETE FROM BPR400T
         WHERE TYPE            = #{TYPE}
           AND ITEM_CODE       = #{ITEM_CODE}
           AND CUSTOM_CODE     = #{CUSTOM_CODE}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND ORDER_UNIT      = #{ORDER_UNIT}
           AND APLY_START_DATE = #{APLY_START_DATE}
           AND COMP_CODE       = #{S_COMP_CODE}
    </delete>

	<insert id="mba030ukrvServiceImpl.insertDetail" parameterType="Map">
		/* mba140ukrv.Cmba140ukrv[fnBpr600Save] Query02 _ insertDetail */
		INSERT INTO BPR600T
		     ( STOCK_UNIT
		     , ORDER_UNIT
		     , TRNS_RATE
		     , ITEM_CHG
		     , UPDATE_DATE
		     , COMP_CODE
		     )
		VALUES
		     ( #{STOCK_UNIT}
		     , #{ORDER_UNIT}
		     , #{TRNS_RATE}
		     , N'N'
		     , #{UPDATE_DATE}
		     , #{S_COMP_CODE}
		     )
	</insert>

	<update id="mba030ukrvServiceImpl.updateDetail" parameterType="Map">
		/* mba140ukrv.Cmba140ukrv[fnBpr600Save] Query02 _ updateDetail */
		UPDATE BPR600T
		   SET TRNS_RATE   = #{TRNS_RATE}
		     , ITEM_CHG    = N'N'
		     , UPDATE_DATE = #{UPDATE_DATE}

		 WHERE STOCK_UNIT  = #{STOCK_UNIT}
		   AND ORDER_UNIT  = #{ORDER_UNIT}
		   AND COMP_CODE   = #{S_COMP_CODE}
  	</update>

	<delete id="mba030ukrvServiceImpl.deleteDetail" parameterType="Map">
		/* mba140ukrv.Cmba140ukrv[fnBpr600Save] Query01 _ deleteDetail */
		DELETE FROM BPR600T
		 WHERE STOCK_UNIT  = #{STOCK_UNIT}
		   AND ORDER_UNIT  = #{ORDER_UNIT}
		   AND COMP_CODE   = #{S_COMP_CODE}
  	</delete>
	<!-- 단위환산정보등록 (여기까지) -->





	<!-- 구매단가/거래처품목등록 -->
	<!-- 구매단가/거래처품목등록  (여기까지) -->





	<!-- 외주 P/L 등록 상단그리드 -->
	<select id="mba030ukrvServiceImpl.select3_1" parameterType="Map" resultType="rMap">
		/* mba030ukrvServiceImpl.select3 - 외주 P/L 등록 조회 */
		DECLARE    @COMP_CODE                  NVARCHAR(08)             -- (필수) 법인코드
				 , @DIV_CODE                   NVARCHAR(08)             -- (필수) 사업장코드
				 , @CUSTOM_CODE                NVARCHAR(08)             -- (선택) 외주처코드
				 , @CUSTOM_NAME                NVARCHAR(40)             -- (선택) 외주처명
				 , @ITEM_CODE                  NVARCHAR(20)             -- (선택) 품목코드
				 , @ITEM_NAME                  NVARCHAR(200)            -- (선택) 품목명
				 , @ITEM_SEARCH                NVARCHAR(01)             -- (선택) 품목검색(C:현재품목,  A:전체)
				 , @ST_PATH_YN                 NVARCHAR(01)             -- (선택) 표준PATH 여부(Y:예,   N:아니오)
				 , @USER_ID                    NVARCHAR(100)            -- (필수) 사용자ID

		SET @COMP_CODE         = #{S_COMP_CODE}
		SET @DIV_CODE          = #{DIV_CODE}
		SET @CUSTOM_CODE       = #{CUSTOM_CODE}
		SET @CUSTOM_NAME       = #{CUSTOM_NAME}
		SET @ITEM_CODE         = #{ITEM_CODE}
		SET @ITEM_NAME         = #{ITEM_NAME}
		SET @ITEM_SEARCH       = #{OPT_APT_ITEM}
		SET @ST_PATH_YN        = N'N'
		SET @USER_ID           = #{S_USER_ID}

		DECLARE    @BaseDate                   NVARCHAR(08)             -- 기준일자

		IF @ITEM_SEARCH = N'C'
			SET @BaseDate = CONVERT(NVARCHAR(08), GETDATE(), 112)
		IF @ITEM_SEARCH = N'A'
			SET @BaseDate = ''

		DECLARE    @RefItem                    NVARCHAR(01)             -- 사용자 품목명 참조 유형

		-- 사용자별 참조코드 조회
		SELECT TOP 1 @RefItem = REF_ITEM
		FROM   BSA300T WITH (NOLOCK)
		WHERE  COMP_CODE = @COMP_CODE
		AND    USER_ID   = @USER_ID

		SET @RefItem = ISNULL(@RefItem, N'0')

		-- 외주P/L 조회
		SELECT
			   A.COMP_CODE
			 , A.DIV_CODE
			 , A.CUSTOM_CODE
			 , A.PROD_ITEM_CODE
			 , A.SEQ
			 , A.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
					WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE                     C1.ITEM_NAME
			   END                                                                  AS ITEM_NAME
			 , C1.SPEC
			 , C1.STOCK_UNIT
			 , C2.ITEM_ACCOUNT
			 , A.PATH_CODE                                                          AS OLD_PATH_CODE
			 , A.PATH_CODE
			 , ISNULL(A.UNIT_Q, 0)  AS UNIT_Q
			 , ISNULL(A.PROD_UNIT_Q, 0)  AS PROD_UNIT_Q
			 , ISNULL(A.LOSS_RATE, 0)                                               AS LOSS_RATE
			 , A.USE_YN
			 , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)                     AS START_DATE
			 , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)                      AS STOP_DATE
			 , A.GRANT_TYPE
			 , A.REMARK
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
		FROM              MCL100T A  WITH (NOLOCK)
			   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
												  AND C1.ITEM_CODE = A.ITEM_CODE
			   LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
												  AND C2.DIV_CODE  = A.DIV_CODE
												  AND C2.ITEM_CODE = A.ITEM_CODE
		WHERE  A.COMP_CODE      = @COMP_CODE
		AND    A.DIV_CODE       = @DIV_CODE
		AND    A.CUSTOM_CODE    = @CUSTOM_CODE
		AND    A.PROD_ITEM_CODE = @ITEM_CODE
		AND    (
			   (@BaseDate         = '')
		 OR    (@BaseDate  != '' AND A.START_DATE     = (
														SELECT MAX(START_DATE)
														  FROM MCL100T WITH(NOLOCK)
														 WHERE COMP_CODE        = @COMP_CODE
														   AND DIV_CODE         = @DIV_CODE
														   AND CUSTOM_CODE      = A.CUSTOM_CODE
														   AND PROD_ITEM_CODE   = A.PROD_ITEM_CODE
														   AND ITEM_CODE        = A.ITEM_CODE
														   AND PATH_CODE        = A.PATH_CODE
														   AND START_DATE   &lt;= @BaseDate
														)
			   )
			   )
		AND    (
			   (@BaseDate         = '') OR (@BaseDate  != '' AND A.STOP_DATE     >= @BaseDate)
		 OR    A.STOP_DATE       IS NULL
			   )
<!-- 20190718 주석처리
		AND    (
			   (@ST_PATH_YN = 'Y' AND (A.PATH_CODE = '0' OR A.PATH_CODE LIKE '1%'))
		 OR    (@ST_PATH_YN = 'N' AND  A.PATH_CODE = A.PATH_CODE)
			   )
-->
		ORDER BY A.SEQ, A.ITEM_CODE
   	</select>


	<select id="mba030ukrvServiceImpl.bomCopySelectList" parameterType="Map" resultType="rMap">
		/* BOM 조회 / 외주 P/L 조회(mba030ukrvServiceImpl.bomCopySelectList) obs100ukrv.Cobs100ukrv[fnObs100QBom] Query01 */
		DECLARE    @COMP_CODE                  NVARCHAR(08)             -- (필수) 법인코드
				 , @DIV_CODE                   NVARCHAR(08)             -- (필수) 사업장코드
				 , @CUSTOM_CODE                NVARCHAR(08)             -- (선택) 외주처코드
				 , @CUSTOM_NAME                NVARCHAR(40)             -- (선택) 외주처명
				 , @ITEM_CODE                  NVARCHAR(20)             -- (선택) 품목코드
				 , @ITEM_NAME                  NVARCHAR(200)            -- (선택) 품목명
				 , @ITEM_SEARCH                NVARCHAR(01)             -- (선택) 품목검색(C:현재품목,  A:전체)
				 , @USER_ID                    NVARCHAR(100)            -- (필수) 사용자ID

		SET @COMP_CODE         = #{S_COMP_CODE}
		SET @DIV_CODE          = #{DIV_CODE}
		SET @CUSTOM_CODE       = #{CUSTOM_CODE}
		SET @CUSTOM_NAME       = #{CUSTOM_NAME}
		SET @ITEM_CODE         = #{ITEM_CODE}
		SET @ITEM_NAME         = #{ITEM_NAME}
		SET @ITEM_SEARCH       = #{OPT_APT_ITEM}
		SET @USER_ID           = #{S_USER_ID}

		DECLARE    @BaseDate                   NVARCHAR(08)             -- 기준일자

		IF @ITEM_SEARCH = N'C'
			SET @BaseDate = CONVERT(NVARCHAR(08), GETDATE(), 112)
		IF @ITEM_SEARCH = N'A'
			SET @BaseDate = ''

		DECLARE    @RefItem                    NVARCHAR(01)             -- 사용자 품목명 참조 유형

		-- 사용자별 참조코드 조회
		SELECT TOP 1 @RefItem = REF_ITEM
		FROM   BSA300T WITH (NOLOCK)
		WHERE  COMP_CODE = @COMP_CODE
		AND    USER_ID   = @USER_ID

		SET @RefItem = ISNULL(@RefItem, N'0')

		-- BOM 조회
		SELECT CAST('' AS BIT)                                                      AS CHOICE
			 , A.COMP_CODE
			 , A.DIV_CODE
			 , @CUSTOM_CODE                                                         AS CUSTOM_CODE
			 , A.PROD_ITEM_CODE
			 , A.SEQ
			 , A.CHILD_ITEM_CODE                                                    AS ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
					WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE                     C1.ITEM_NAME
			   END                                                                  AS ITEM_NAME
			 , C1.SPEC
			 , C1.STOCK_UNIT
			 , C2.ITEM_ACCOUNT
			 , A.PATH_CODE
			 , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.UNIT_Q, 0),      'B_FSET_QS')  AS UNIT_Q
			 , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.PROD_UNIT_Q, 0), 'B_FSET_QS')  AS PROD_UNIT_Q
			 , ISNULL(A.LOSS_RATE, 0)                                               AS LOSS_RATE
			 , CASE WHEN ISNULL(A.USE_YN, '1') = '1' THEN 'Y' ELSE 'N' END          AS USE_YN
			 , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)                     AS START_DATE
			 , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)                      AS STOP_DATE
			 , A.REMARK
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
		FROM              BPR500T A  WITH (NOLOCK)
			   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
												  AND C1.ITEM_CODE = A.CHILD_ITEM_CODE
			   LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
												  AND C2.DIV_CODE  = A.DIV_CODE
												  AND C2.ITEM_CODE = A.CHILD_ITEM_CODE
		WHERE  A.COMP_CODE      = @COMP_CODE
		AND    A.DIV_CODE       = @DIV_CODE
		AND    A.PROD_ITEM_CODE = @ITEM_CODE

		AND    (
			   (@BaseDate         = '')
		 OR    (@BaseDate  != '' AND A.START_DATE     = (
														SELECT MAX(START_DATE)
														  FROM BPR500T WITH(NOLOCK)
														 WHERE COMP_CODE        = @COMP_CODE
														   AND DIV_CODE         = @DIV_CODE
														   AND PROD_ITEM_CODE   = A.PROD_ITEM_CODE
														   AND CHILD_ITEM_CODE  = A.CHILD_ITEM_CODE
														   AND PATH_CODE        = A.PATH_CODE
														   AND START_DATE   &lt;= @BaseDate
														)
			   )
			   )
		AND    (
			   (@BaseDate         = '') OR (@BaseDate  != '' AND A.STOP_DATE  &gt;= @BaseDate)
		 OR    A.STOP_DATE       IS NULL
			   )
   	</select>



	<insert id="mba030ukrvServiceImpl.insertDetail3_1" parameterType="Map" useGeneratedKeys="false">
		/* OBS100UKRV.COBS100UKRV[FNOBS100SAVE] QUERY02 - insertDetail3 */
		DECLARE @COMP_CODE          NVARCHAR(08)
			  , @DIV_CODE           NVARCHAR(08)
			  , @CUSTOM_CODE        NVARCHAR(08)
			  , @PROD_ITEM_CODE     NVARCHAR(20)
			  , @ITEM_CODE          NVARCHAR(20)
			  , @PATH_CODE          NVARCHAR(08)
			  , @BASE_DATE          NVARCHAR(08)

		SET @COMP_CODE       = #{S_COMP_CODE}
		SET @DIV_CODE        = #{DIV_CODE}
		SET @CUSTOM_CODE     = #{CUSTOM_CODE}
		SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
		SET @ITEM_CODE       = #{ITEM_CODE}
		SET @PATH_CODE       = #{PATH_CODE}
		SET @BASE_DATE       = #{START_DATE}

		DECLARE @COMPCODE           NVARCHAR(08)
			  , @DIVCODE            NVARCHAR(08)
			  , @CUSTOMCODE         NVARCHAR(08)
			  , @PRODITEMCODE       NVARCHAR(20)
			  , @ITEMCODE           NVARCHAR(20)
			  , @PATHCODE           NVARCHAR(08)
			  , @STARTDATE          NVARCHAR(08)
			  , @STOPDATE           NVARCHAR(08)
			  , @ROWCNT             INT

		SELECT TOP 1
			   @COMPCODE         = A.COMP_CODE
			 , @DIVCODE          = A.DIV_CODE
			 , @CUSTOMCODE       = A.CUSTOM_CODE
			 , @PRODITEMCODE     = A.PROD_ITEM_CODE
			 , @ITEMCODE         = A.ITEM_CODE
			 , @PATHCODE         = A.PATH_CODE
			 , @STARTDATE        = A.START_DATE
		  FROM MCL100T A WITH(NOLOCK)
		 WHERE A.COMP_CODE       = @COMP_CODE
		   AND A.DIV_CODE        = @DIV_CODE
		   AND A.CUSTOM_CODE     = @CUSTOM_CODE
		   AND A.PROD_ITEM_CODE  = @PROD_ITEM_CODE
		   AND A.ITEM_CODE       = @ITEM_CODE
		   AND A.PATH_CODE       = @PATH_CODE
		   AND A.START_DATE      = (
								   SELECT MAX(START_DATE)
								   FROM   MCL100T WITH (NOLOCK)
								   WHERE  COMP_CODE       = @COMP_CODE
								   AND    DIV_CODE        = @DIV_CODE
								   AND    CUSTOM_CODE     = A.CUSTOM_CODE
								   AND    PROD_ITEM_CODE  = A.PROD_ITEM_CODE
								   AND    ITEM_CODE       = A.ITEM_CODE
								   AND    PATH_CODE       = A.PATH_CODE
								   AND    START_DATE  &lt;= @BASE_DATE
								   )
		   AND (
			   A.STOP_DATE &lt;= @BASE_DATE
		   OR  A.STOP_DATE  IS NULL
			   )

		SET @ROWCNT   = @@ROWCOUNT

		IF @ROWCNT = 1
		BEGIN
			-- 종료일자 설정
			SET @STOPDATE = CONVERT(VARCHAR(8), DATEADD(DAY, -1, @BASE_DATE), 112)

			IF @STARTDATE &gt; @STOPDATE
				SET @STOPDATE = @STARTDATE

			UPDATE MCL100T
			   SET STOP_DATE       = @STOPDATE
			 WHERE COMP_CODE       = @COMPCODE
			   AND DIV_CODE        = @DIVCODE
			   AND CUSTOM_CODE     = @CUSTOMCODE
			   AND PROD_ITEM_CODE  = @PRODITEMCODE
			   AND ITEM_CODE       = @ITEMCODE
			   AND PATH_CODE       = @PATHCODE
			   AND START_DATE      = @STARTDATE
		END

		INSERT INTO MCL100T
			 ( COMP_CODE
			 , DIV_CODE
			 , CUSTOM_CODE
			 , PROD_ITEM_CODE
			 , SEQ
			 , ITEM_CODE
			 , PATH_CODE
			 , UNIT_Q
			 , PROD_UNIT_Q
			 , LOSS_RATE
			 , USE_YN
			 , START_DATE
			 , STOP_DATE
			 , GRANT_TYPE
			 , REMARK
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 )
		VALUES
			 ( #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{CUSTOM_CODE}
			 , #{PROD_ITEM_CODE}
			 , #{SEQ}
			 , #{ITEM_CODE}
			 , #{PATH_CODE}
			 , #{UNIT_Q}
			 , #{PROD_UNIT_Q}
			 , #{LOSS_RATE}
			 , #{USE_YN}
			 , #{START_DATE}
			 , #{STOP_DATE}
			 , #{GRANT_TYPE}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 )
	</insert>


	<select id="mba030ukrvServiceImpl.checkCount" parameterType="Map" resultType="int">
		/* mba030ukrvServiceImpl.checkList - 외주 P/L 수정, 삭제전 체크 */
		BEGIN
			SET NOCOUNT ON

		--  입력 변수
			DECLARE @COMP_CODE              NVARCHAR(16)           -- 회사코드
				  , @DIV_CODE               NVARCHAR(08)           -- 사업장코드
				  , @CUSTOM_CODE            NVARCHAR(08)           -- 외주처코드
				  , @PROD_ITEM_CODE         NVARCHAR(20)           -- 모품목코드
				  , @ITEM_CODE              NVARCHAR(20)           -- 자품목코드
				  , @PATH_CODE              NVARCHAR(08)           -- BOM 경로코드
				  , @START_DATE             NVARCHAR(08)           -- 시작일자

			SET @COMP_CODE       = #{S_COMP_CODE}
			SET @DIV_CODE        = #{DIV_CODE}
			SET @CUSTOM_CODE     = #{CUSTOM_CODE}
			SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
			SET @ITEM_CODE       = #{ITEM_CODE}
			SET @PATH_CODE       = #{PATH_CODE}
			SET @START_DATE      = #{START_DATE}

		-------------------------------------------------------------------------------------------------------------------------
		--  1. 수정 또는 삭제할 외주P/L 정보 존재여부 CHECK
		--  (에러: 54622, 수정중인 자료가 삭제되었습니다.      재조회 후 작업하십시요.)
		--  (에러: 54623, 삭제중인 자료가 이미 삭제되었습니다. 재조회 후 작업하십시요.)
			SELECT COUNT(*) AS COUNT
		    FROM   MCL100T WITH (NOLOCK)
		    WHERE  COMP_CODE       = @COMP_CODE
		    AND    DIV_CODE        = @DIV_CODE
		    AND    CUSTOM_CODE     = @CUSTOM_CODE
		    AND    PROD_ITEM_CODE  = @PROD_ITEM_CODE
		    AND    ITEM_CODE       = @ITEM_CODE
		    AND    PATH_CODE       = @PATH_CODE
		    AND    START_DATE      = @START_DATE
		END
   	</select>

	<update id="mba030ukrvServiceImpl.updateDetail3_1" parameterType="Map">
		/* obs100ukrv.Cobs100ukrv[fnObs100Save] Query04 - updateDetail3 */
		BEGIN
			SET NOCOUNT ON

		--  입력 변수
			DECLARE @COMP_CODE              NVARCHAR(16)           -- 회사코드
				  , @DIV_CODE               NVARCHAR(08)           -- 사업장코드
				  , @CUSTOM_CODE            NVARCHAR(08)           -- 외주처코드
				  , @PROD_ITEM_CODE         NVARCHAR(20)           -- 모품목코드
				  , @ITEM_CODE              NVARCHAR(20)           -- 자품목코드
				  , @PATH_CODE              NVARCHAR(08)           -- BOM 경로코드
				  , @START_DATE             NVARCHAR(08)           -- 시작일자
				  , @GRANT_TYPE             NVARCHAR(08)           -- 사급구분


			SET @COMP_CODE       = #{S_COMP_CODE}
			SET @DIV_CODE        = #{DIV_CODE}
			SET @CUSTOM_CODE     = #{CUSTOM_CODE}
			SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
			SET @ITEM_CODE       = #{ITEM_CODE}
			SET @PATH_CODE       = #{PATH_CODE}
			SET @START_DATE      = #{START_DATE}
			SET @GRANT_TYPE		 = #{GRANT_TYPE}

		-------------------------------------------------------------------------------------------------------------------------
		--  1. 외주P/L 정보 수정
			UPDATE MCL100T
			   SET SEQ             = #{SEQ}
				 , PATH_CODE       = #{PATH_CODE}
				 , UNIT_Q          = #{UNIT_Q}
				 , PROD_UNIT_Q     = #{PROD_UNIT_Q}
				 , LOSS_RATE       = #{LOSS_RATE}
				 , USE_YN          = #{USE_YN}
				 , STOP_DATE       = #{STOP_DATE}
				 , GRANT_TYPE      = #{GRANT_TYPE}
				 , REMARK          = #{REMARK}
				 , UPDATE_DB_USER  = #{S_USER_ID}
				 , UPDATE_DB_TIME  = GETDATE()
			 WHERE COMP_CODE       = @COMP_CODE
			   AND DIV_CODE        = @DIV_CODE
			   AND CUSTOM_CODE     = @CUSTOM_CODE
			   AND PROD_ITEM_CODE  = @PROD_ITEM_CODE
			   AND ITEM_CODE       = @ITEM_CODE
			   AND PATH_CODE       = @PATH_CODE
			   AND START_DATE      = @START_DATE

		-------------------------------------------------------------------------------------------------------------------------
		END
  	</update>



	<delete id="mba030ukrvServiceImpl.deleteDetail3_1" parameterType="Map">
		/* OBS100UKRV.COBS100UKRV[FNOBS100SAVE] QUERY01 - deleteDetail3 */
		BEGIN
			SET NOCOUNT ON

		--  입력 변수
			DECLARE @COMP_CODE              NVARCHAR(16)           -- 회사코드
				  , @DIV_CODE               NVARCHAR(08)           -- 사업장코드
				  , @CUSTOM_CODE            NVARCHAR(08)           -- 외주처코드
				  , @PROD_ITEM_CODE         NVARCHAR(20)           -- 모품목코드
				  , @ITEM_CODE              NVARCHAR(20)           -- 자품목코드
				  , @PATH_CODE              NVARCHAR(08)           -- BOM 경로코드
				  , @START_DATE             NVARCHAR(08)           -- 시작일자


			SET @COMP_CODE       = #{S_COMP_CODE}
			SET @DIV_CODE        = #{DIV_CODE}
			SET @CUSTOM_CODE     = #{CUSTOM_CODE}
			SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
			SET @ITEM_CODE       = #{ITEM_CODE}
			SET @PATH_CODE       = #{PATH_CODE}
			SET @START_DATE      = #{START_DATE}

		-------------------------------------------------------------------------------------------------------------------------
		--  1. 외주P/L 정보 삭제
			DELETE FROM   MCL100T
			WHERE  COMP_CODE       = @COMP_CODE
			AND    DIV_CODE        = @DIV_CODE
			AND    CUSTOM_CODE     = @CUSTOM_CODE
			AND    PROD_ITEM_CODE  = @PROD_ITEM_CODE
			AND    ITEM_CODE       = @ITEM_CODE
			AND    PATH_CODE       = @PATH_CODE
			AND    START_DATE      = @START_DATE

		-------------------------------------------------------------------------------------------------------------------------
		END
  	</delete>

  	<!-- 외주 P/L 등록 하단(대체품목) 그리드 -->
    <select id="mba030ukrvServiceImpl.select3_2" parameterType="Map" resultType="rMap">
         /*bpr560ukrv.Cbpr560ukrv[fnBpr560QStd] Query04*/
         BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID               */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */


            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}


            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.CUSTOM_CODE
                 , A.SEQ
                 , A.PROD_ITEM_CODE
                 , A.CHILD_ITEM_CODE
                 , A.EXCHG_ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                     WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                         ELSE B.ITEM_NAME
                   END)                     AS ITEM_NAME
                 , B.SPEC
                 , B.STOCK_UNIT
                 , A.UNIT_Q
                 , A.PROD_UNIT_Q
                 , A.LOSS_RATE
                 , A.UNIT_P1
                 , A.UNIT_P2
                 , A.UNIT_P3
                 , A.MAN_HOUR
                 , A.USE_YN
                 , A.BOM_YN
                 , A.PRIOR_SEQ
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE
                 , A.REMARK
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
              FROM       S_MCL110T_KD A WITH (NOLOCK)
                   INNER JOIN BPR100T B WITH (NOLOCK) ON  A.COMP_CODE       = B.COMP_CODE
                                                     AND A.EXCHG_ITEM_CODE = B.ITEM_CODE
             WHERE A.COMP_CODE       = @CompCode

               AND A.PROD_ITEM_CODE  = #{PROD_ITEM_CODE}  /*sMajorCd*/

               AND A.CHILD_ITEM_CODE = #{ITEM_CODE}  /*SMinorCd*/



            AND A.DIV_CODE = #{DIV_CODE}
            /*test*/
            <if test="APTITEM == &quot;C&quot;">

                  AND CONVERT(VARCHAR(8), GETDATE(), 112) BETWEEN A.START_DATE AND A.STOP_DATE

                   AND A.START_DATE      =  (
                                            SELECT MAX(START_DATE)
                                              FROM BPR510T WITH(NOLOCK)
                                             WHERE COMP_CODE       =  @CompCode
                                               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                               AND DIV_CODE = #{DIV_CODE}
                                               </if>
                                               AND PROD_ITEM_CODE  =  A.PROD_ITEM_CODE
                                               AND CHILD_ITEM_CODE =  A.CHILD_ITEM_CODE
                                               AND START_DATE      &lt;= CONVERT(VARCHAR(8), GETDATE(), 112)
                                            )
                   AND (
                       A.STOP_DATE       &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
                   OR  A.STOP_DATE       IS NULL
                       )
            </if>
            ORDER BY A.SEQ, A.EXCHG_ITEM_CODE

         SET NOCOUNT OFF
         SET ARITHABORT OFF
        END
    </select>

  	<insert id="mba030ukrvServiceImpl.insertDetail3_2" parameterType="Map" useGeneratedKeys="false">
        INSERT INTO S_MCL110T_KD
             ( COMP_CODE
             , DIV_CODE
             , CUSTOM_CODE
             <if test="@foren.Ognl@isNotEmpty(SEQ)">
             , SEQ
             </if>
             , PROD_ITEM_CODE
             , CHILD_ITEM_CODE
             , EXCHG_ITEM_CODE
             <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
             , UNIT_Q
             </if>
             <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
             , PROD_UNIT_Q
              </if>
             <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
             , LOSS_RATE
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
             , UNIT_P1
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
             , UNIT_P2
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
             , UNIT_P3
              </if>
             <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
             , MAN_HOUR
              </if>
             <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             , USE_YN
              </if>
             <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
             , BOM_YN
              </if>
             <if test="@foren.Ognl@isNotEmpty(PRIOR_SEQ)">
             , PRIOR_SEQ
              </if>
             , START_DATE
             <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
             , STOP_DATE
              </if>
             ,INSERT_DB_USER
             ,INSERT_DB_TIME
             )
        VALUES
             (
             #{COMP_CODE}
             ,#{DIV_CODE}
             ,#{CUSTOM_CODE}
             <if test="@foren.Ognl@isNotEmpty(SEQ)">
             , #{SEQ}
             </if>
             ,#{PROD_ITEM_CODE}
             ,#{CHILD_ITEM_CODE}
             ,#{EXCHG_ITEM_CODE}
             <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
             , #{UNIT_Q}
             </if>
             <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
             , #{PROD_UNIT_Q}
              </if>
             <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
             , #{LOSS_RATE}
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
             , #{UNIT_P1}
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
             , #{UNIT_P2}
              </if>
             <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
             , #{UNIT_P3}
              </if>
             <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
             , #{MAN_HOUR}
              </if>
             <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             , #{USE_YN}
              </if>
             <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
             , #{BOM_YN}
              </if>
             <if test="@foren.Ognl@isNotEmpty(PRIOR_SEQ)">
             , #{PRIOR_SEQ}
              </if>
             ,#{START_DATE}
             <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
             , #{STOP_DATE}
              </if>
             ,#{S_USER_ID}
             ,getdate()
              )
    </insert>


  	<update id="mba030ukrvServiceImpl.updateDetail3_2" parameterType="Map">
         UPDATE S_MCL110T_KD
               SET SEQ             =    #{SEQ}
                 , UNIT_Q          =    #{UNIT_Q}
                 , PROD_UNIT_Q     =    #{PROD_UNIT_Q}
                 , LOSS_RATE       =    #{LOSS_RATE}
                 , USE_YN          =    #{USE_YN}
                 , BOM_YN          =    #{BOM_YN}
                 , STOP_DATE       =    #{STOP_DATE}
                 , UNIT_P1         =    #{UNIT_P1}
                 , UNIT_P2         =    #{UNIT_P2}
                 , UNIT_P3         =    #{UNIT_P3}
                 , MAN_HOUR        =    #{MAN_HOUR}
                 , PRIOR_SEQ       =    #{PRIOR_SEQ}
                 , REMARK          =    #{REMARK}
                 , UPDATE_DB_USER  =    #{S_USER_ID}
                 , UPDATE_DB_TIME  =    GETDATE()
             WHERE COMP_CODE       =    #{COMP_CODE}
               AND DIV_CODE        =    #{DIV_CODE}
               AND PROD_ITEM_CODE  =    #{PROD_ITEM_CODE}
               AND CHILD_ITEM_CODE =    #{CHILD_ITEM_CODE}
               AND EXCHG_ITEM_CODE =    #{EXCHG_ITEM_CODE}
               AND START_DATE      =    #{START_DATE}
    </update>

  	<delete id="mba030ukrvServiceImpl.deleteDetail3_2" parameterType="Map">
  		BEGIN
            DELETE FROM BPR510T
            WHERE   COMP_CODE = #{COMP_CODE}
             AND    DIV_CODE  = #{DIV_CODE}
             AND    PROD_ITEM_CODE = #{PROD_ITEM_CODE}
             AND    CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
             AND    EXCHG_ITEM_CODE = #{EXCHG_ITEM_CODE}
             AND    START_DATE   = #{START_DATE}
        END
  	</delete>

  	<update id="mba030ukrvServiceImpl.partListCopy" parameterType="Map">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE  @COMP_CODE         NVARCHAR(08) --필수:법인
                   , @DIV_CODE          		  NVARCHAR(08) --필수:사업장
                   , @AGENT_CUST_CD_FR   NVARCHAR(20)  --필수:FR외주처
                   , @AGENT_CUST_CD_TO  NVARCHAR(20) --필수:TO외주처
                   , @USER_ID	  				  NVARCHAR(100) -- userid
                   , @ERR_DESC				  NVARCHAR(1000) -- error message

            SET @COMP_CODE         	    = #{COMP_CODE}
            SET @DIV_CODE          	    = #{DIV_CODE}
            SET @AGENT_CUST_CD_FR    = #{AGENT_CUST_CD_FR}
            SET @AGENT_CUST_CD_TO   = #{AGENT_CUST_CD_TO}
            SET @USER_ID 					= #{USER_ID}

            EXEC UNILITE.USP_PartlistCopyToCustom @COMP_CODE, @DIV_CODE, @AGENT_CUST_CD_FR, @AGENT_CUST_CD_TO, @USER_ID, @ERR_DESC

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </update>
	<!-- 외주 P/L 등록  (여기까지) -->





	<!-- 외주 기초재고등록 -->
    <select id="mba030ukrvServiceImpl.selectYYYYMM" parameterType="Map" resultType="rMap">  /* 기초년월 구하기 */
        --biz100ukrv.Cbiz100ukrv[fnBiz100QBym] Query01
        SELECT ISNULL(MAX(BASIS_YYYYMM), '000000') AS BASIS_YYYYMM
          FROM BIZ400T
         WHERE DIV_CODE    = #{DIV_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND COMP_CODE   = #{S_COMP_CODE}
    </select>

    <select id="mba030ukrvServiceImpl.selectList4" parameterType="Map" resultType="rMap">  /* 조회 */
        --biz100ukrv.Cbiz100ukrv[fnBiz100QStd] Query01
        SELECT A.DIV_CODE
             , #{CUSTOM_CODE} AS CUSTOM_CODE
             , A.ITEM_CODE
             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME
             , A.SPEC
             , B.LOT_NO
             , A.STOCK_UNIT
             , ISNULL(B.STOCK_Q, 0) AS STOCK_Q
             , ISNULL(B.AVERAGE_P, ISNULL(A.BASIS_P, 0)) AS AVERAGE_P
             , ISNULL(B.STOCK_I, 0) AS STOCK_I
             , B.BASIS_YYYYMM
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , A.COMP_CODE
          FROM (SELECT SUB_A.COMP_CODE
                     , SUB_B.DIV_CODE
                     , SUB_B.WH_CODE
                     , SUB_B.ITEM_CODE
                     , SUB_A.ITEM_NAME
                     , SUB_A.STOCK_UNIT
                     , SUB_A.SPEC
                     , SUB_B.BASIS_P
                     , SUB_B.LOT_YN
                  FROM BPR100T SUB_A
                     , BPR200T SUB_B
                 WHERE SUB_A.COMP_CODE     = SUB_B.COMP_CODE
                   AND SUB_A.ITEM_CODE     = SUB_B.ITEM_CODE
                   AND SUB_A.STOCK_CARE_YN = 'Y') A
               INNER JOIN BIZ400T B ON A.COMP_CODE = B.COMP_CODE
                                   AND A.DIV_CODE  = B.DIV_CODE
                                   AND A.ITEM_CODE = B.ITEM_CODE
         WHERE A.COMP_CODE    = #{S_COMP_CODE}
           AND A.DIV_CODE     = #{DIV_CODE}
		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_CODE = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND	(uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, B.CUSTOM_CODE) LIKE N'%' + #{CUSTOM_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
           AND B.BASIS_YYYYMM = #{BASIS_YYYYMM}
		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND A.ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
			AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND		(uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) LIKE N'%' + #{ITEM_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
         ORDER BY B.BASIS_YYYYMM DESC, A.ITEM_CODE ASC
    </select>

    <insert id="mba030ukrvServiceImpl.insertExcel" parameterType="Map">      /* 엑셀insert */
        INSERT INTO MBA030_EXCEL
            ( _EXCEL_JOBID
            , _EXCEL_ROWNUM
            , _EXCEL_HAS_ERROR
            , _EXCEL_ERROR_MSG
            , DIV_CODE
            , ITEM_CODE
            , ITEM_NAME
            , SPEC
            , STOCK_UNIT
            , STOCK_Q
            , AVERAGE_P
            , BASIS_P
            , STOCK_I
            , BASIS_YYYYMM
            , UPDATE_DB_USER
            , UPDATE_DB_TIME
        )
        VALUES (
              #{_EXCEL_JOBID}
            , #{_EXCEL_ROWNUM}
            , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
            , #{_EXCEL_ERROR,jdbcType=VARCHAR}
            , #{DIV_CODE}
            , #{ITEM_CODE}
            , #{ITEM_NAME}
            , #{SPEC}
            , #{STOCK_UNIT}
            , #{STOCK_Q}
            , #{AVERAGE_P}
            , #{BASIS_P}
            , #{STOCK_I}
            , #{BASIS_YYYYMM}
            , #{S_USER_ID}
            , GETDATE()
        )
    </insert>

    <select id="mba030ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">   /* 엑셀업로드 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT A._EXCEL_JOBID
                 , A._EXCEL_ROWNUM
                 , A._EXCEL_HAS_ERROR
                 , A._EXCEL_ERROR_MSG
                 , A.DIV_CODE
                 , A.ITEM_CODE
                 , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)   AS ITEM_NAME
                 , A.SPEC
                 , A.STOCK_UNIT
                 , ISNULL(A.STOCK_Q, 0)                                             AS STOCK_Q
                 , ISNULL(A.AVERAGE_P, ISNULL(A.BASIS_P, 0))                        AS AVERAGE_P
                 , ISNULL(A.STOCK_I, 0)                                             AS STOCK_I
                 , A.BASIS_YYYYMM
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , A.COMP_CODE
              FROM MBA030_EXCEL A
             WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
             ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
        END
    </select>

    <update id="excelValidate" >
        /*다국어 메세지 처리 함수 필요. S_LANG_CODE와 msg_no를 파라미터로 받아 BSA000T에서 조회*/
		DECLARE @LANG_CODE	NVARCHAR(02)
		 
			SET @LANG_CODE = #{S_LANG_CODE}
		
        UPDATE   A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL      THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),

                A._EXCEL_ERROR_MSG = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL      THEN ISNULL(_EXCEL_ERROR_MSG,'') + uniLITE.fnGetErrorMsg_omega('800010', '', @LANG_CODE) --800010;사업장에 대한 품목정보가 존재하지 않습니다.
                                     ELSE A._EXCEL_ERROR_MSG
                                     END)

        FROM MBA030_EXCEL A
        LEFT JOIN  BPR100T B    ON B.COMP_CODE = #{S_COMP_CODE}
                               AND A.ITEM_CODE = B.ITEM_CODE
        LEFT JOIN  BPR200T C    ON C.COMP_CODE = #{S_COMP_CODE}
                               AND C.DIV_CODE  = A.DIV_CODE
                               AND A.ITEM_CODE = C.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}

        UPDATE  A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN B.USE_YN = 'N'
                                            THEN 'Y'
                                           WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE}
                                            THEN 'Y'
                                           WHEN  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
                                            THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN B.USE_YN = 'N'
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + uniLITE.fnGetErrorMsg_omega('800011', '', @LANG_CODE) --800011;사용중지된 품목입니다.
                                           WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} OR  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + uniLITE.fnGetErrorMsg_omega('800012', '', @LANG_CODE) + '(' + ISNULL(B.START_DATE, '') + '~' + ISNULL(B.STOP_DATE, '') + ')'
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM MBA030_EXCEL A
        INNER JOIN  BPR100T B  ON B.COMP_CODE= #{S_COMP_CODE}
                              AND A.ITEM_CODE = B.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>

    <insert id="mba030ukrvServiceImpl.insertDetail4" parameterType="Map">
      INSERT INTO L_BIZ400T
             (  KEY_VALUE
              , OPR_FLAG
              , COMP_CODE
              , DIV_CODE
              , CUSTOM_CODE
              , ITEM_CODE
              , LOT_NO
              , STOCK_Q
              , AVERAGE_P
              , STOCK_I
              , BASIS_YYYYMM
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , INSERT_DB_USER
              , INSERT_DB_TIME
             ) 
        VALUES
             ( 
                #{KEY_VALUE}
              , #{OPR_FLAG}
              , #{COMP_CODE}
              , #{DIV_CODE}
              , #{CUSTOM_CODE}
              , #{ITEM_CODE}
              , #{LOT_NO}
              , #{STOCK_Q}
              , #{AVERAGE_P}
              , #{STOCK_I}
              , #{BASIS_YYYYMM} 
              , #{S_USER_ID}
              , getdate() 
              , #{S_USER_ID}
              , getdate() 
             )
    </insert>


    <update id="mba030ukrvServiceImpl.insertSP" parameterType="Map" statementType="CALLABLE">
        {call USP_MATRL_MBA030UKRV3 (
            #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

	<!-- 외주 기초재고등록  (여기까지) -->



</mapper>