<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mpo060ukrvServiceImpl">
					
	<select id="mpo060ukrvServiceImpl.purchaseRequest" parameterType="Map" resultType="rMap">
		/*구매요청내역*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
          , @UserId         NVARCHAR(100) /* 사용자ID    */
          , @LangType       NVARCHAR(2)  /* 언어구분    */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	SELECT
		 S.COMP_CODE 
		,S.DIV_CODE
		,ISNULL(S.REF_SEQ, 1) AS REF_SEQ
		,ISNULL(C.ITEM_LEVEL1, '')         AS ITEM_LEVEL1
		,ISNULL(C.ITEM_LEVEL2, '')         AS ITEM_LEVEL2
		,S.ITEM_CODE
		,C.ITEM_NAME
		,C.AUTHOR1
		,C.PUBLISHER
		,S.CUSTOM_CODE
		,G.CUSTOM_NAME
		,S.WH_CODE
		,D.STOCK_Q
		,S.ORDER_REQ_Q
		,S.REMARK
	
		FROM			MPO000T		S	WITH (NOLOCK)
			INNER JOIN	BPR100T		C	WITH (NOLOCK) ON C.COMP_CODE	= S.COMP_CODE
													 AND C.ITEM_CODE	= S.ITEM_CODE
			LEFT  JOIN	BIV100T		D	WITH (NOLOCK) ON D.COMP_CODE	= S.COMP_CODE
													 AND D.DIV_CODE		= S.DIV_CODE
													 AND D.ITEM_CODE	= S.ITEM_CODE
													 AND D.WH_CODE		= S.WH_CODE
			LEFT  JOIN  BPR000T 	E 	WITH (NOLOCK) ON E.COMP_CODE    = C.COMP_CODE
			                                         AND E.LEVEL1      != '*'
			                                         AND E.LEVEL1       = C.ITEM_LEVEL1
			                                         AND E.LEVEL2       = '*'
			                                         AND E.LEVEL3       = '*'
			LEFT  JOIN  BPR000T 	E1  WITH (NOLOCK) ON E1.COMP_CODE   = C.COMP_CODE
			                                         AND E1.LEVEL1     != '*'
			                                         AND E1.LEVEL1      = C.ITEM_LEVEL1
			                                         AND E1.LEVEL2     != '*'
			                                         AND E1.LEVEL2      = C.ITEM_LEVEL2
			                                         AND E1.LEVEL3      = '*'
			LEFT  JOIN  BPR000T 	E2  WITH (NOLOCK) ON E2.COMP_CODE   = C.COMP_CODE
			                                         AND E2.LEVEL1     != '*'
			                                         AND E2.LEVEL1      = C.ITEM_LEVEL1
			                                         AND E2.LEVEL2     != '*'
			                                         AND E2.LEVEL2      = C.ITEM_LEVEL2
			                                         AND E2.LEVEL3     != '*'
			                                         AND E2.LEVEL3      = C.ITEM_LEVEL3
			LEFT  JOIN	BCM100T 	G   WITH (NOLOCK) ON G.COMP_CODE    = S.COMP_CODE
												     AND G.CUSTOM_CODE  = S.CUSTOM_CODE
			INNER JOIN  BSA210T 	H 	WITH (NOLOCK) ON H.COMP_CODE 	= S.COMP_CODE
	          									     AND H.TYPE_LEVEL 	= S.DIV_CODE
	          									     AND H.TREE_CODE 	= S.DEPT_CODE 
		WHERE 	S.COMP_CODE			= @CompCode
			AND	S.ORDER_STATUS		= '1'
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND	S.DIV_CODE			= #{DIV_CODE}
		</if>
	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
			AND H.TREE_LEVEL    	LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =H.COMP_CODE AND TYPE_LEVEL=H.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
	</if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">		
			AND S.ORDER_PRSN_CODE	= #{ORDER_PRSN}
		</if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_REQ_DATE)">		
			AND S.ORDER_REQ_DATE	= #{ORDER_REQ_DATE}
		</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">		
			AND	C.ITEM_LEVEL1 		= #{ITEM_LEVEL1}
		</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">		
			AND C.ITEM_LEVEL2 		= #{ITEM_LEVEL2}
		</if>
	<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND S.WH_CODE 			= #{WH_CODE}
	</if>
	 GROUP BY S.COMP_CODE ,S.DIV_CODE ,ISNULL(S.REF_SEQ, 1)	,ISNULL(C.ITEM_LEVEL1, '') ,ISNULL(C.ITEM_LEVEL2, '')         
		     ,S.ITEM_CODE ,C.ITEM_NAME ,C.AUTHOR1 ,C.PUBLISHER ,S.CUSTOM_CODE
		     ,G.CUSTOM_NAME	,S.WH_CODE ,D.STOCK_Q ,S.ORDER_REQ_Q ,S.REMARK	

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END
    </select>

<select id="mpo060ukrvServiceImpl.salesHistory" parameterType="Map" resultType="rMap">
	
	/*매출내역참조*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
			,@DivCode          NVARCHAR(08) /* 사업장    */
    SET @CompCode = #{S_COMP_CODE}
	SET @DivCode    = #{DIV_CODE}
	
		/*추가 시작*/

		DECLARE @TempTable TABLE
	(
			COMP_CODE				nvarchar(8)
		,	DIV_CODE				nvarchar(8)
		,	WH_CODE					nvarchar(8)
		,	ITEM_CODE				nvarchar(20)
		,	PURCHASE_CUSTOM_CODE	nvarchar(8)
		,	STOCK_Q					numeric(30,6)
		PRIMARY KEY(COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE)
	)

	INSERT INTO @TempTable(COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, PURCHASE_CUSTOM_CODE, STOCK_Q)
	SELECT 
		   COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE
		   ,MAX(PURCHASE_CUSTOM_CODE) AS PURCHASE_CUSTOM_CODE
		   ,SUM(STOCK_Q) AS STOCK_Q
	FROM
		(SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, B.PURCHASE_CUSTOM_CODE
				,A.STOCK_Q
			FROM      BIV150T A WITH(NOLOCK)
			LEFT JOIN BIV350T B WITH(NOLOCK) ON A.COMP_CODE= B.COMP_CODE
											AND A.DIV_CODE	= B.DIV_CODE
											AND A.LOT_NO 	= B.LOT_NO
											AND A.WH_CODE 	= B.WH_CODE
											AND A.ITEM_CODE= B.ITEM_CODE
		WHERE A.COMP_CODE = @CompCode 
			AND A.DIV_CODE  = @DivCode
								 
			UNION ALL
						 
			SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.PURCHASE_CUSTOM_CODE
				,A.STOCK_Q
			FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
						 
		WHERE A.COMP_CODE = @CompCode 
			AND A.DIV_CODE  = @DivCode
		) A
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
	/*추가 끝*/
			
	
	SELECT 
		 A.COMP_CODE
		,A.DIV_CODE
		,ISNULL(C.ITEM_LEVEL1, '')         AS ITEM_LEVEL1
		,ISNULL(C.ITEM_LEVEL2, '')         AS ITEM_LEVEL2
		,B.ITEM_CODE
		,C.ITEM_NAME
		,C.AUTHOR1
		,C.PUBLISHER
		,ISNULL(G.CUSTOM_CODE,'') 		   AS CUSTOM_CODE
		,ISNULL(G.CUSTOM_NAME,'')          AS CUSTOM_NAME
		,ISNULL(C.SALE_COMMON_P,0)         AS SALE_COMMON_P
		,ISNULL(C.SALE_BASIS_P,0)          AS SALE_BASIS_P
		,SUM(B.SALE_Q) AS SALE_Q
		,SUM(B.SALE_AMT_O + B.TAX_AMT_O)   AS SALE_AMT_O
		,B.WH_CODE
		,ISNULL(X.STOCK_Q,0)               AS STOCK_Q
	
		FROM			SSA100T	 A	WITH (NOLOCK)
			INNER JOIN	SSA110T	 B	WITH (NOLOCK) ON A.COMP_CODE =	B.COMP_CODE
												 AND A.DIV_CODE	 =	B.DIV_CODE
												 AND A.BILL_NUM	 =	B.BILL_NUM

			/*추가 시작*/
			LEFT JOIN @TempTable X ON	B.COMP_CODE	= X.COMP_CODE
									AND B.DIV_CODE  = X.DIV_CODE
									AND B.WH_CODE   = X.WH_CODE
									AND B.ITEM_CODE = X.ITEM_CODE  
			/*추가 끝*/           
		               							
			INNER JOIN	BPR100T	C WITH (NOLOCK) ON C.COMP_CODE	= B.COMP_CODE
											   AND C.ITEM_CODE	= B.ITEM_CODE

												
			LEFT JOIN	BCM100T G WITH (NOLOCK) ON G.COMP_CODE	 =	X.COMP_CODE
											   AND G.CUSTOM_CODE =	X.PURCHASE_CUSTOM_CODE
			INNER JOIN BSA210T H WITH (NOLOCK) ON H.COMP_CODE  = A.COMP_CODE
	          								  AND H.TYPE_LEVEL = A.DIV_CODE
	          								  AND H.TREE_CODE  = A.DEPT_CODE      	  
			
													
		WHERE 	A.COMP_CODE	= @CompCode
			AND	A.DIV_CODE  = @DivCode
	<if test="@foren.Ognl@isNotEmpty(SALES_DATE_FR)"> 
			AND A.SALE_DATE &gt;= #{SALES_DATE_FR}
		</if>
	<if test="@foren.Ognl@isNotEmpty(SALES_DATE_TO)">
			AND A.SALE_DATE &lt;= #{SALES_DATE_TO}
		</if>
	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
	        AND H.TREE_LEVEL  LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =H.COMP_CODE AND TYPE_LEVEL=H.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
		</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			AND	C.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			AND C.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		</if>
	<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND B.WH_CODE = #{WH_CODE}
		</if>
	
	GROUP BY 
		 A.COMP_CODE ,A.DIV_CODE ,C.ITEM_LEVEL1	,C.ITEM_LEVEL2 ,B.ITEM_CODE
		,C.ITEM_NAME ,C.AUTHOR1 ,C.PUBLISHER ,G.CUSTOM_CODE	,G.CUSTOM_NAME
		,C.SALE_COMMON_P ,C.SALE_BASIS_P ,B.WH_CODE ,X.STOCK_Q
	
	SET NOCOUNT OFF
    SET ARITHABORT OFF
END
</select>


<select id="mpo060ukrvServiceImpl.ReceptionHistory" parameterType="Map" resultType="rMap">
/* 사업장 (필수)	*/
/* 부서, 창고		*/
/* 매입처			*/
/* 대분류, 중분류	*/

/* 매입처, 품목코드, 품명, 판매가, 적정재고량, 재발주점, 경제주문량, 현재고, 주문수량	*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
			,@DivCode          NVARCHAR(08) /* 사업장    */
    SET @CompCode = #{S_COMP_CODE}
	SET @DivCode  = #{DIV_CODE}

    SELECT
           A.COMP_CODE
         , A.DIV_CODE
         , A.PURCHASE_CUSTOM_CODE
         , A.CUSTOM_NAME
         , A.ITEM_CODE 
         , A.ITEM_NAME
         , SUM(A.SALE_BASIS_P)   AS SALE_BASIS_P
         , SUM(A.TRNS_RATE)      AS TRNS_RATE
         , SUM(A.SAFETY_Q)		 AS SAFETY_Q				    
         , SUM(A.REORDER_POINT)	 AS REORDER_POINT	       
         , SUM(A.EOQ)			 AS EOQ					    
         , SUM(A.STOCK_Q)        AS STOCK_Q		
         , A.ITEM_LEVEL1
         , A.ITEM_LEVEL2
         , A.AUTHOR1
         , A.PUBLISHER
         , SUM(A.SALE_COMMON_P)  AS SALE_COMMON_P
         , A.WH_CODE
    FROM (
    
		SELECT 
				A.COMP_CODE,
				A.DIV_CODE,
				ISNULL(B.PURCHASE_CUSTOM_CODE,'') AS PURCHASE_CUSTOM_CODE,
				ISNULL(C.CUSTOM_NAME,'') AS CUSTOM_NAME,
				A.ITEM_CODE, 
				D.ITEM_NAME,
				F.SALE_BASIS_P,
				D.TRNS_RATE,
				ISNULL(G.SAFETY_Q, 0)		AS SAFETY_Q			/* 적정재고량 */,
				ISNULL(G.REORDER_POINT, 0)	AS REORDER_POINT	/* 재발주점 */,
				ISNULL(G.EOQ, 0)			AS EOQ				/* 경제주문량 */,
				SUM(A.STOCK_Q) AS STOCK_Q		
				,ISNULL(F.ITEM_LEVEL1, '')         AS ITEM_LEVEL1
				,ISNULL(F.ITEM_LEVEL2, '')         AS ITEM_LEVEL2
				,F.AUTHOR1
				,F.PUBLISHER
				,ISNULL(F.SALE_COMMON_P,0) AS SALE_COMMON_P
				,A.WH_CODE
		
				
			FROM		   BIV150T A WITH(NOLOCK)
				LEFT  JOIN BIV350T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
												 AND A.DIV_CODE  = B.DIV_CODE
												 AND A.LOT_NO 	 = B.LOT_NO
												 AND A.WH_CODE 	 = B.WH_CODE
												 AND A.ITEM_CODE = B.ITEM_CODE
				LEFT  JOIN BCM100T C WITH(NOLOCK) ON B.COMP_CODE = C.COMP_CODE
												 AND B.PURCHASE_CUSTOM_CODE = C.CUSTOM_CODE
				LEFT  JOIN BPR200T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
												 AND A.DIV_CODE  = D.DIV_CODE
												 AND A.ITEM_CODE = D.ITEM_CODE							
				INNER JOIN BSA210T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
												 AND A.DIV_CODE  = E.TYPE_LEVEL
												 AND A.WH_CODE   = E.WH_CODE
				INNER JOIN BPR100T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
					        	   			     AND F.ITEM_CODE = A.ITEM_CODE
			    LEFT  JOIN MRP600T G WITH(NOLOCK) ON G.COMP_CODE = A.COMP_CODE
												 AND G.DIV_CODE	 = A.DIV_CODE
					        	   			     AND G.ITEM_CODE = A.ITEM_CODE	
					        	   			     AND G.DEPT_CODE = E.TREE_CODE 	
			WHERE A.COMP_CODE = @CompCode
				AND A.DIV_CODE = @DivCode	
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/  
				AND E.TREE_LEVEL   LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =E.COMP_CODE AND TYPE_LEVEL=E.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
				AND A.WH_CODE = #{WH_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
				AND B.PURCHASE_CUSTOM_CODE = #{CUSTOM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
				AND	F.ITEM_LEVEL1 = #{ITEM_LEVEL1}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
				AND F.ITEM_LEVEL2 = #{ITEM_LEVEL2}
				</if>
				GROUP BY A.COMP_CODE, A.DIV_CODE, E.TREE_CODE, E.TREE_NAME, A.WH_CODE, A.ITEM_CODE, D.ITEM_NAME, B.PURCHASE_CUSTOM_CODE, C.CUSTOM_NAME, F.SALE_BASIS_P
				       , G.SAFETY_Q, G.REORDER_POINT , G.EOQ, F.ITEM_LEVEL1, F.ITEM_LEVEL2 ,F.AUTHOR1 ,F.PUBLISHER ,F.SALE_COMMON_P ,A.WH_CODE,D.TRNS_RATE
				--ORDER BY D.ITEM_NAME
		
            UNION ALL
             
	        SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.PURCHASE_CUSTOM_CODE
                 , B.CUSTOM_NAME  AS CUSTOM_NAME
                 , A.ITEM_CODE
                 , F.ITEM_NAME AS ITEM_NAME
                 , 0 SALE_BASIS_P
                 , 0 TRNS_RATE
                 , 0 SAFETY_Q		
                 , 0 REORDER_POINT
                 , 0 EOQ			
                 , A.STOCK_Q
                 , ISNULL(F.ITEM_LEVEL1, '') AS ITEM_LEVEL1
                 , ISNULL(F.ITEM_LEVEL2, '') AS ITEM_LEVEL2
                 , F.AUTHOR1
                 , F.PUBLISHER
                 , 0 SALE_COMMON_P
                 , A.WH_CODE

	        FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
		        LEFT  JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
										         AND B.CUSTOM_CODE = A.PURCHASE_CUSTOM_CODE
		        INNER JOIN BPR100T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
			        	   			             AND F.ITEM_CODE = A.ITEM_CODE

            WHERE A.COMP_CODE            = @CompCode
			
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.PURCHASE_CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			         
			<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND A.WH_CODE = #{WH_CODE}
			</if>
						            
     ) A

    GROUP BY
           A.COMP_CODE
         , A.DIV_CODE
         , A.PURCHASE_CUSTOM_CODE
         , A.CUSTOM_NAME
         , A.ITEM_CODE 
         , A.ITEM_NAME		    
         , A.ITEM_LEVEL1
         , A.ITEM_LEVEL2
         , A.AUTHOR1
         , A.PUBLISHER
         , A.WH_CODE
    ORDER BY A.ITEM_NAME	
                		
			
	SET NOCOUNT OFF
    SET ARITHABORT OFF	
END		
		
</select>

<select id="mpo060ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
SELECT
	A.WH_CODE
FROM BSA210T A WITH(NOLOCK)
	LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									AND B.DEPT_CODE = A.TREE_CODE
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND B.USER_ID   = #{S_USER_ID}

</select>

<select id="mpo060ukrvServiceImpl.fnAuthPubli" parameterType="Map" resultType="rMap">
SELECT
	AUTHOR1,
	PUBLISHER
FROM
	BPR100T
WHERE COMP_CODE = #{S_COMP_CODE}
  AND ITEM_CODE = #{ITEM_CODE} 

</select>
<select id="mpo060ukrvServiceImpl.fnCustom" parameterType="Map" resultType="rMap">
	
	
BEGIN

SET NOCOUNT ON
SET ARITHABORT ON

	  DECLARE @COMP_CODE   NVARCHAR(08)
             ,@DIV_CODE    NVARCHAR(08)
			 ,@ITEM_CODE   NVARCHAR(20)
			 ,@BASIS_DAY   NVARCHAR(08)


			SET @COMP_CODE = #{S_COMP_CODE}
			SET @DIV_CODE  = #{DIV_CODE}
			SET @ITEM_CODE = #{ITEM_CODE}
			SET @BASIS_DAY = CONVERT(NVARCHAR(08), GETDATE(), 112)  /* 현재일 */

SELECT 
	TOP 1
      A.CUSTOM_CODE
     , B.CUSTOM_NAME
FROM        BPR400T A  WITH(NOLOCK)
 INNER JOIN BCM100T B  WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE 
                                   AND A.CUSTOM_CODE  = B.CUSTOM_CODE
WHERE A.COMP_CODE 	  = @COMP_CODE
   AND A.DIV_CODE     = @DIV_CODE
   AND A.ITEM_CODE    = @ITEM_CODE
   AND A.TYPE 		  = '1' 
   AND A.APLY_END_DATE &gt;= @BASIS_DAY
   AND A.APLY_START_DATE &lt;= @BASIS_DAY
   AND A.APLY_START_DATE = (SELECT MAX(APLY_START_DATE) AS APLY_START_DATE
                              FROM BPR400T WITH(NOLOCK)
                              WHERE COMP_CODE    = A.COMP_CODE
							     AND DIV_CODE    = A.DIV_CODE
								 AND TYPE        = A.TYPE
								 AND ITEM_CODE   = A.ITEM_CODE
								 AND ORDER_UNIT  = A.ORDER_UNIT
								 AND MONEY_UNIT  = A.MONEY_UNIT
								 AND APLY_START_DATE &lt;= @BASIS_DAY
							)
   SET NOCOUNT OFF
   SET ARITHABORT OFF
END	
</select>
	
<insert id="mpo060ukrvServiceImpl.insertDetail" parameterType="Map">    	
INSERT INTO MPO000T
(
	COMP_CODE,
	DIV_CODE,
	ORDER_REQ_DATE,
	DEPT_CODE,
	WH_CODE,      	
	ORDER_PRSN_CODE,
	POS_NO,
	ITEM_CODE,
	ORDER_REQ_Q,
	ORDER_STATUS,
	REMARK,
	CUSTOM_CODE,
	UPDATE_DB_USER, 
	UPDATE_DB_TIME,	
    INSERT_DB_USER,
    INSERT_DB_TIME
)
VALUES
(	
	#{COMP_CODE},
	#{DIV_CODE},
	#{ORDER_REQ_DATE},
	#{DEPT_CODE},
	#{WH_CODE}, 
	#{ORDER_PRSN},
	'ERP',
	#{ITEM_CODE},
	#{ORDER_REQ_Q},
	'1',
	#{REMARK},
	#{CUSTOM_CODE}, 
	#{S_USER_ID}, 
	GETDATE(),
	#{S_USER_ID}, 
	GETDATE()
)

</insert>
	
<update id="mpo060ukrvServiceImpl.updateDetail" parameterType="Map">		
UPDATE MPO000T
	SET
     ORDER_REQ_Q 	 = #{ORDER_REQ_Q}		
     ,REMARK 	 	 = #{REMARK}
     ,CUSTOM_CODE 	 = #{CUSTOM_CODE}
     ,UPDATE_DB_USER = #{S_USER_ID}
     ,UPDATE_DB_TIME = GETDATE()
     
     WHERE			COMP_CODE		= #{COMP_CODE}
     	AND			DIV_CODE        = #{DIV_CODE}       
     	AND			ORDER_REQ_DATE  = #{ORDER_REQ_DATE} 
     	AND			DEPT_CODE       = #{DEPT_CODE}      
     	AND			WH_CODE       	=  #{WH_CODE} 
     	AND			ORDER_PRSN_CODE = #{ORDER_PRSN}
     	AND			POS_NO          = 'ERP'         
     	AND			ITEM_CODE       = #{ITEM_CODE}  
</update>

<update id="mpo060ukrvServiceImpl.deleteDetail" parameterType="Map">
	DELETE FROM MPO000T
		WHERE		COMP_CODE		=  #{COMP_CODE}
     	AND			DIV_CODE        =  #{DIV_CODE}       
     	AND			ORDER_REQ_DATE  =  #{ORDER_REQ_DATE} 
     	AND			DEPT_CODE       =  #{DEPT_CODE}    
     	AND			WH_CODE       	=  #{WH_CODE}   
     	AND			ORDER_PRSN_CODE =  #{ORDER_PRSN}
     	AND			POS_NO          =  'ERP'         
     	AND			ITEM_CODE       =  #{ITEM_CODE}
</update>

<select id="mpo060ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		 SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
</mapper>