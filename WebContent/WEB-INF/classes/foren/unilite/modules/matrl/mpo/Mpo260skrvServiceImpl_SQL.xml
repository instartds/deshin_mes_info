<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mpo260skrvServiceImpl">

	<select id="mpo260skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* mpo260skrvServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , A.ISSUE_NUM
		     , A.ISSUE_SEQ
		     , A.ORDER_NUM
		     , A.ORDER_SEQ
		     , A.ITEM_CODE
		     , R1.ITEM_NAME
		     , R1.SPEC
		     , A.ORDER_UNIT
		     , C.ORDER_DATE
		     , B.DVRY_DATE
		     , B.DVRY_ESTI_DATE
		     , (SELECT ISNULL(SUM(S1.ISSUE_Q),0)
		          FROM VMI100T S1 WITH(NOLOCK)
		         WHERE S1.COMP_CODE = B.COMP_CODE
		           AND S1.DIV_CODE  = B.DIV_CODE
		           AND S1.ORDER_NUM = B.ORDER_NUM
		           AND S1.ORDER_SEQ = B.ORDER_SEQ
		         GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ORDER_NUM, S1.ORDER_SEQ
		       )                                             AS TOTAL_ISSUE_Q
		     , B.ORDER_Q
		     , CASE WHEN (B.ORDER_Q - (B.INSTOCK_Q )) &lt; 0 THEN 0
		              ELSE (B.ORDER_Q - (B.INSTOCK_Q))
		       END                                           AS UN_Q
             , B.ORDER_P                                     AS ORDER_P
		     , A.PACK_UNIT_Q
		     , A.BOX_Q
		     , A.EACH_Q
		     , A.LOSS_Q
		     , A.ISSUE_Q
		     , D.ORDER_NUM                                   AS SO_NUM
		     , D.SER_NO                                      AS SO_SEQ
		     , R2.CUSTOM_NAME                                AS SOF_CUSTOM_NAME
		     , R3.ITEM_NAME                                  AS SOF_ITEM_NAME
		     , CAST(A.DVRY_TIME AS SMALLDATETIME)			 AS DVRY_TIME
		     , A.ISSUE_DATE
		     , Z1.CUSTOM_NAME
		  FROM       VMI100T A   WITH(NOLOCK)
		  LEFT  JOIN MPO200T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                    AND B.DIV_CODE     = A.DIV_CODE
		                                    AND B.CUSTOM_CODE  = A.CUSTOM_CODE
		                                    AND B.ORDER_NUM    = A.ORDER_NUM
		                                    AND B.ORDER_SEQ    = A.ORDER_SEQ
		  INNER JOIN MPO100T C  WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                    AND C.DIV_CODE     = B.DIV_CODE
		                                    AND C.ORDER_NUM    = B.ORDER_NUM
		                                    AND C.CUSTOM_CODE  = B.CUSTOM_CODE
		  LEFT  JOIN SOF110T D  WITH(NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
		                                    AND D.DIV_CODE     = B.DIV_CODE
		                                    AND D.ORDER_NUM    = B.SO_NUM
		                                    AND D.SER_NO       = B.SO_SEQ
		  LEFT  JOIN SOF100T D2 WITH(NOLOCK) ON D2.COMP_CODE   = D.COMP_CODE
		                                    AND D2.DIV_CODE    = D.DIV_CODE
		                                    AND D2.ORDER_NUM   = D.ORDER_NUM
		  LEFT  JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE   = A.COMP_CODE
		                                    AND R1.ITEM_CODE   = A.ITEM_CODE
		  LEFT  JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE   = D2.COMP_CODE
		                                    AND R2.CUSTOM_CODE = D2.CUSTOM_CODE
		  LEFT  JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE   = D.COMP_CODE
		                                    AND R3.DIV_CODE    = D.DIV_CODE
		                                    AND R3.ITEM_CODE   = D.ITEM_CODE
		  LEFT  JOIN BCM100T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                    AND Z1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.ISSUE_DATE &gt;= #{ISSUE_DATE_FR}
		   AND A.ISSUE_DATE &lt;= #{ISSUE_DATE_TO}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND Z1.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ISSUE_NUM)">
		   AND A.ISSUE_NUM   LIKE #{ISSUE_NUM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		   AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'
		</if>
		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_NUM, A.ISSUE_SEQ
 	</select>

	<select id="mpo260skrvServiceImpl.mainReport" parameterType="Map" resultType="rMap">
	</select>
	<select id="mpo260skrvServiceImpl.mainReport_label" parameterType="Map" resultType="rMap">
		   /*mpo260skrvServiceImpl.mainReport_label*/
		   /*라벨 출력 개수 관련 처리 */

	IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TEMP_PRINT'))
		DROP TABLE #TEMP_PRINT

		   DECLARE @PRINT_CNT INT
		   DECLARE @I INT
		   DECLARE @ORDER_NUM NVARCHAR(20)
		   SET @I = 1
		   SET @ORDER_NUM = #{ORDER_NUM}
		   SET @PRINT_CNT = #{PRINT_CNT}
		   CREATE TABLE #TEMP_PRINT(
			ORDER_NUM NVARCHAR(20),
			QTY INT NULL,
			CNT INT NULL
		   )
		   WHILE @I <![CDATA[<=]]> @PRINT_CNT
		   BEGIN
				IF @I = @PRINT_CNT
					BEGIN
				 		INSERT INTO #TEMP_PRINT
						(
							ORDER_NUM,
							QTY,
							CNT
						)
						VALUES(
							@ORDER_NUM
						   ,#{LAST_QTY}
						   ,@I
						)
				 	END
				ELSE
					BEGIN
						INSERT INTO #TEMP_PRINT
						(
							ORDER_NUM,
							QTY,
							CNT
						)
						VALUES(
							@ORDER_NUM
						   ,#{ISSUE_QTY}
						   ,@I
						)
					END

			    SET @I = @I + 1
		   END

		    SELECT A.ITEM_CODE
			      ,LTRIM(RTRIM(C.ITEM_NAME)) AS ITEM_NAME
				  ,ISNULL(A.LOT_NO, '') AS LOT_NO
				<if test="GUBUN == &quot;SHIN&quot;">
				  ,#{DVRY_ESTI_DATE} AS DVRY_ESTI_DATE
				  ,R4.QTY AS ISSUE_QTY
				</if>

				<if test="GUBUN == &quot;STANDARD&quot;">
				  ,A.DVRY_ESTI_DATE --납품예정일
				  ,B1.ISSUE_Q AS ISSUE_QTY
				</if>
				  ,C.STOCK_UNIT
				  ,C.ITEM_LEVEL1
				  ,C1.ITEM_ACCOUNT
				  ,A.SO_NUM AS ORDER_NUM   				    -- 수주번호
				  ,A.SO_SEQ AS ORDER_SEQ                    -- 수주순번
				  ,E.CUSTOM_NAME   AS SOF_CUSTOM_NAME		-- 수주정보의 거래처
				  ,D.ITEM_CODE 	AS SOF_ITEM_CODE  		-- 수주품목
				  ,E1.ITEM_NAME 	AS SOF_ITEM_NAME  		-- 수주품목명
				  ,ISNULL(F.CUSTOM_ITEM_CODE, D.ITEM_CODE)  AS CUSTOM_ITEM_CODE	-- 수주품목의 거래처 품목코드
				  ,ISNULL(F.CUSTOM_ITEM_NAME, E1.ITEM_NAME) AS CUSTOM_ITEM_NAME -- 수주품목의 거래처 품목명
				  ,@PRINT_CNT AS PRINT_CNT
				  ,E1.SPEC AS SOF_ITEM_SPEC
				  ,R4.CNT
				  ,B.CUSTOM_CODE
				  ,B2.CUSTOM_NAME
			FROM MPO200T A WITH (NOLOCK)
		    LEFT JOIN MPO100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
											 AND A.DIV_CODE  = B.DIV_CODE
											 AND A.ORDER_NUM = B.ORDER_NUM
			LEFT JOIN VMI100T B1 WITH (NOLOCK) ON A.COMP_CODE = B1.COMP_CODE
											 AND  A.ORDER_NUM = B1.ORDER_NUM
											 AND  A.ORDER_SEQ = B1.ORDER_SEQ
			LEFT JOIN BCM100T B2 WITH (NOLOCK) ON B.COMP_CODE  = B2.COMP_CODE
											  AND B.CUSTOM_CODE = B2.CUSTOM_CODE
		    INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE 	 = C.COMP_CODE --부품명
											  AND A.ITEM_CODE 	 = C.ITEM_CODE
		    INNER JOIN BPR200T C1 WITH (NOLOCK) ON A.COMP_CODE 	 = C1.COMP_CODE
											  AND  A.IN_DIV_CODE = C1.DIV_CODE
											  AND  A.ITEM_CODE 	 = C1.ITEM_CODE
			LEFT JOIN SOF110T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE --수주품목
											 AND D.ORDER_NUM    = A.SO_NUM
											 AND D.SER_NO       = A.SO_SEQ
			LEFT JOIN SOF100T D1 WITH(NOLOCK) ON D1.COMP_CODE	 = D.COMP_CODE
											 AND D1.DIV_CODE	 = D.DIV_CODE
											 AND D1.ORDER_NUM    = D.ORDER_NUM
			LEFT JOIN BCM100T E WITH(NOLOCK) ON D1.COMP_CODE     = E.COMP_CODE  --수주의 거래처정보
											 AND D1.CUSTOM_CODE  = E.CUSTOM_CODE
			LEFT JOIN BPR100T E1 WITH(NOLOCK) ON E1.COMP_CODE	 = D.COMP_CODE  --수주품목정보
											 AND E1.ITEM_CODE	 = D.ITEM_CODE
			LEFT JOIN BPR300T F WITH(NOLOCK) ON F.COMP_CODE     = D.COMP_CODE  --수주품목의 거래처 품목 정보
											 AND F.DIV_CODE     = D.DIV_CODE
											 AND F.ITEM_CODE    = D.ITEM_CODE
											 AND F.CUSTOM_CODE  = D1.CUSTOM_CODE
											 AND F.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
																	   FROM   BPR300T
																	   WHERE  COMP_CODE   = F.COMP_CODE
																		 AND  DIV_CODE    = F.DIV_CODE
																		 AND  ITEM_CODE   = F.ITEM_CODE
																		 AND  CUSTOM_CODE = F.CUSTOM_CODE)
			LEFT JOIN #TEMP_PRINT R4 WITH (NOLOCK) ON R4.ORDER_NUM = A.ORDER_NUM
		    WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND   A.ORDER_NUM = #{ORDER_NUM}
			AND   A.ORDER_SEQ = #{ORDER_SEQ}
			AND   B1.ISSUE_NUM = #{ISSUE_NUM}
		    ORDER BY A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM
	</select>
	<select id="mpo260skrvServiceImpl.mainReport_label_afterProg" parameterType="Map" resultType="rMap">
		/*mpo260skrvServiceImpl.mainReport_label_afterProg*/
		 BEGIN

		   WITH BOM(CD_ITEM, CD_MATL, LEVEL, COMP_CODE, DIV_CODE)
		   AS
		   (
		      SELECT   A.PROD_ITEM_CODE
		               ,A.CHILD_ITEM_CODE
		               ,1
					   ,A.COMP_CODE
					   ,A.DIV_CODE
		      FROM BPR500T A
		      WHERE A.COMP_CODE = #{COMP_CODE}
			    AND A.DIV_CODE  = #{DIV_CODE}
				AND A.PROD_ITEM_CODE = #{SOF_ITEM_CODE}

			  UNION ALL

			  SELECT  A.PROD_ITEM_CODE
		             ,A.CHILD_ITEM_CODE
		             ,B.LEVEL + 1
					 ,A.COMP_CODE
					 ,A.DIV_CODE
		      FROM BPR500T A
		      INNER JOIN BOM B ON A.PROD_ITEM_CODE = B.CD_MATL
							  AND A.DIV_CODE  = B.DIV_CODE
			  WHERE A.COMP_CODE = #{COMP_CODE}
				AND A.DIV_CODE  = #{DIV_CODE}
		   )
		   SELECT TOP 1
		   		  A.CD_ITEM AS AFTER_PROG_ITEM_CODE
				 ,A.CD_MATL AS CHILD_ITEM_CODE
				 ,A.LEVEL
				 ,A.COMP_CODE
				 ,A.DIV_CODE
				 ,B.CODE_NAME AS  AFTER_PROG_NAME
				 ,ISNULL((SELECT CUSTOM_NAME FROM BCM100T WHERE COMP_CODE = A.COMP_CODE
													 AND CUSTOM_CODE = (SELECT TOP 1 CUSTOM_CODE
																		FROM MPO200T TT WHERE TT.COMP_CODE = A.COMP_CODE
																						AND TT.SO_NUM = #{ORDER_NUM}
																						AND TT.SO_SEQ = #{ORDER_SEQ}
																						AND TT.ITEM_CODE = A.CD_ITEM
																		ORDER BY TT.INSERT_DB_TIME DESC
																						)),
						 (SELECT TREE_NAME FROM BSA230T WHERE COMP_CODE = A.COMP_CODE
													 AND TREE_CODE = (SELECT TOP 1 WORK_SHOP_CODE
																		FROM PMP100T TT WHERE TT.COMP_CODE = A.COMP_CODE
																						AND TT.LINE_END_YN = 'Y'
																						AND TT.SO_NUM = #{ORDER_NUM}
																						AND TT.SO_SEQ = #{ORDER_SEQ}
																						AND TT.ITEM_CODE = A.CD_ITEM
																		ORDER BY TT.INSERT_DB_TIME DESC
																						)))  AS AFTER_PROG_CUSTOM_NAME
		   FROM BOM A LEFT JOIN BSA100T B ON A.COMP_CODE = B.COMP_CODE
									     AND B.MAIN_CODE = 'Z040'
										 AND B.SUB_CODE  != '$'
										 AND B.SUB_CODE   = SUBSTRING(A.CD_ITEM, 11,1)

		   WHERE CD_MATL = #{ITEM_CODE}

		END
	</select>
	<select id="mpo260skrvServiceImpl.subReportShin" parameterType="Map" resultType="rMap">
		/*mpo260skrvServiceImpl.subReportShin*/
		   WITH BOM(CD_ITEM, CD_MATL, LEVEL, COMP_CODE, DIV_CODE)
		   AS
		   (
		      SELECT   A.PROD_ITEM_CODE
		               ,A.CHILD_ITEM_CODE
		               ,1
					   ,A.COMP_CODE
					   ,A.DIV_CODE

		      FROM BPR500T A
		      WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND A.DIV_CODE  = #{DIV_CODE}
			--	AND A.PROD_ITEM_CODE = 'A1304AR-BGF05'

			  UNION ALL

			  SELECT  A.PROD_ITEM_CODE
		             ,A.CHILD_ITEM_CODE
		             ,B.LEVEL + 1
					 ,A.COMP_CODE
					 ,A.DIV_CODE
		      FROM BPR500T A
		      INNER JOIN BOM B ON A.PROD_ITEM_CODE = B.CD_MATL
							  AND A.DIV_CODE  = B.DIV_CODE
			  WHERE A.COMP_CODE = #{S_COMP_CODE}
				AND A.DIV_CODE  = #{DIV_CODE}
		   )


		SELECT
			A.ISSUE_DATE AS INOUT_DATE						--입고일
			, C.DIV_NAME    AS CUSTOM_NAME
			, B.COMPANY_NUM AS MY_COMPANY_NUM
		    , B.CUSTOM_NAME AS MY_CUSTOM_NAME
			, B.ADDR1	AS MY_ADDR
			, B.TELEPHON	AS MY_TELE
			, B.COMP_TYPE AS MY_COMP_TYPE
			, B.COMP_CLASS AS MY_COMP_CLASS
		    , A.ORDER_NUM
		    , CASE ISNULL(E.CUSTOM_ITEM_CODE, '')
		           WHEN '' THEN A.ITEM_CODE
		           ELSE         E.CUSTOM_ITEM_CODE
		       END AS ITEM_CODE
		    , CASE ISNULL(E.CUSTOM_ITEM_NAME, '')
		           WHEN '' THEN uniLITE.fnItemNameComp(C.COMP_CODE, #{S_USER_ID}, D.ITEM_CODE)
		           ELSE         E.CUSTOM_ITEM_NAME
		       END AS ITEM_NAME
		    , CASE ISNULL(E.CUSTOM_ITEM_SPEC, '')
		           WHEN '' THEN (SELECT SPEC
		                           FROM BPR100T
		                          WHERE COMP_CODE = A.COMP_CODE
		                            AND ITEM_CODE = A.ITEM_CODE)
		           ELSE         E.CUSTOM_ITEM_SPEC
		       END AS SPEC
		    , A.ORDER_UNIT
			, A.PACK_UNIT_Q
			, A.BOX_Q
			, A.EACH_Q
			, A.ISSUE_Q	AS INOUT_Q
			, B.REMARK
			, A2.ITEM_CODE AS SOF_ITEM_CODE--발주번호의 수주품목(제품)
			, A5.ITEM_NAME  AS SOF_ITEM_NAME --수주품목명(제품)
			, A4.CUSTOM_NAME AS SOF_CUSTOM_NAME --수주처
			, B.TOP_NAME
			, A6.ADDR
			, A6.COMP_CLASS
			, A6.COMP_NAME
			, A6.REPRE_NAME
			, A6.COMP_CLASS
			, A6.COMP_KIND
			, A6.COMP_TYPE
			, A6.COMPANY_NUM
			, A1.SO_NUM
			, A1.ORDER_Q
			, A.LOSS_Q
			, ( SELECT TOP 1
		   		 -- A.CD_ITEM AS AFTER_PROG_ITEM_CODE
				 --,A.CD_MATL AS CHILD_ITEM_CODE
				 --,A.LEVEL
				 --,A.COMP_CODE
				 --,A.DIV_CODE
				 --,B.CODE_NAME AS  AFTER_PROG_NAME
				 ISNULL((SELECT CUSTOM_NAME FROM BCM100T WHERE COMP_CODE = A.COMP_CODE
													 AND CUSTOM_CODE = (SELECT TOP 1 CUSTOM_CODE
																		FROM MPO200T TT WHERE TT.COMP_CODE = A.COMP_CODE
																						AND   TT.SO_NUM = A1.SO_NUM
																						AND   TT.SO_SEQ = A1.SO_SEQ
																						AND   TT.ITEM_CODE = A.CD_ITEM
																						ORDER BY TT.INSERT_DB_TIME DESC
																						)) ,

						(SELECT TREE_NAME FROM BSA230T WHERE COMP_CODE = A.COMP_CODE
													 AND TREE_CODE = (SELECT TOP 1 WORK_SHOP_CODE
																		FROM PMP100T TT WHERE TT.COMP_CODE = A.COMP_CODE
																						AND   TT.LINE_END_YN = 'Y'
																						AND   TT.SO_NUM = A1.SO_NUM
																						AND   TT.SO_SEQ = A1.SO_SEQ
																						AND   TT.ITEM_CODE = A.CD_ITEM
																					    ORDER BY TT.INSERT_DB_TIME DESC
																						)))
		   FROM BOM A LEFT JOIN BSA100T B ON A.COMP_CODE = B.COMP_CODE
									     AND B.MAIN_CODE = 'Z040'
										 AND B.SUB_CODE  != '$'
										 AND B.SUB_CODE   = SUBSTRING(A.CD_ITEM, 11,1)

		   WHERE CD_MATL = A1.ITEM_CODE) AS AFTER_PROG_CUSTOM_NAME
		   ,ISNULL(E1.INOUT_Q,0)  AS BTR_INOUT_Q
		FROM VMI100T A WITH(NOLOCK)
		LEFT JOIN MPO200T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
								 AND A1.ORDER_NUM = A.ORDER_NUM
								 AND A1.ORDER_SEQ = A.ORDER_SEQ
		LEFT JOIN SOF110T A2 WITH(NOLOCK) ON A2.COMP_CODE = A1.COMP_CODE
										 AND A2.ORDER_NUM = A1.SO_NUM
										 AND A2.SER_NO    = A1.SO_SEQ
		LEFT JOIN SOF100T A3 WITH(NOLOCK) ON A3.COMP_CODE = A2.COMP_CODE
										 AND A3.DIV_CODE  = A2.DIV_CODE
										 AND A3.ORDER_NUM = A2.ORDER_NUM
		LEFT JOIN BCM100T A4 WITH(NOLOCK) ON A4.COMP_CODE = A3.COMP_CODE -- 수주처
										 AND A4.CUSTOM_CODE = A3.CUSTOM_CODE
		LEFT JOIN BPR100T A5 WITH(NOLOCK) ON A5.COMP_CODE = A2.COMP_CODE --수주품목명
										 AND A5.ITEM_CODE = A2.ITEM_CODE
		LEFT JOIN BOR100T A6 WITH(NOLOCK) ON A6.COMP_CODE = A.COMP_CODE
		LEFT JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										AND B.CUSTOM_CODE = A.CUSTOM_CODE
		LEFT JOIN BOR120T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
										AND C.DIV_CODE = A.DIV_CODE
		LEFT JOIN BPR200T D WITH(NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
										AND D.DIV_CODE    = A.DIV_CODE
										AND D.ITEM_CODE   = A.ITEM_CODE
		LEFT JOIN BPR300T E WITH (NOLOCK) ON E.TYPE            = '2'
										 AND E.DIV_CODE        = '*'
										 AND E.COMP_CODE       = A.COMP_CODE
										 AND E.CUSTOM_CODE     = A.CUSTOM_CODE
										 AND E.ITEM_CODE       = A.ITEM_CODE
										 AND E.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
																	FROM BPR300T WITH (NOLOCK)
																	WHERE COMP_CODE      = E.COMP_CODE
																	AND TYPE             = E.TYPE
																	AND DIV_CODE         = E.DIV_CODE
																	AND ITEM_CODE        = E.ITEM_CODE
																	AND CUSTOM_CODE      = E.CUSTOM_CODE
																	AND APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112))
		LEFT  JOIN  (SELECT COMP_CODE
						, DIV_CODE
						, ITEM_CODE
						, ORDER_NUM
						, ORDER_SEQ
						, SUM(ISNULL(INOUT_Q, 0)) AS INOUT_Q
						, SUM(ISNULL(INOUT_I, 0)) AS INOUT_I
						, SUM(ISNULL(ORDER_UNIT_Q, 0)) AS ORDER_UNIT_Q
						, SUM(ISNULL(ORDER_UNIT_O, 0)) AS ORDER_UNIT_O
						, MAX(ISNULL(ORDER_UNIT_P, 0)) AS ORDER_UNIT_P
					 FROM BTR100T WITH (NOLOCK)
					 WHERE COMP_CODE =  #{S_COMP_CODE}
					 AND DIV_CODE  = #{DIV_CODE}
					 AND INOUT_TYPE = '1'
					 AND CREATE_LOC = '2'
					 GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, ORDER_NUM, ORDER_SEQ) E1 ON  E.COMP_CODE  = A1.COMP_CODE
																					AND  E1.DIV_CODE    = A1.IN_DIV_CODE
																					AND  E1.ITEM_CODE   = A1.ITEM_CODE
																					AND  E1.ORDER_NUM   = A1.ORDER_NUM
																					AND  E1.ORDER_SEQ   = A1.ORDER_SEQ
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{DIV_CODE}
		  AND A.ISSUE_NUM = #{ISSUE_NUM}
	</select>
</mapper>