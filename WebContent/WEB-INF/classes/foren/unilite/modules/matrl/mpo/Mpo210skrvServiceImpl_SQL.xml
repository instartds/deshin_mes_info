<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mpo210skrvServiceImpl">
					
	<select id="mpo210skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT	A.TR_BATCHID			--발송순번
			, A.TR_TITLE				--팩스 제목
			, A.TR_SENDNAME				--발신자명
			, A.TR_SENDFAXNUM			--발신자 번호
			, A.TR_MSGCOUNT				--동보건수
			, A.TR_DOCNAME				--파일명
			, A.TR_SENDSTAT				--상태값 0:발송대기, 1:발송중, 2:발송완료
			, B.TR_NAME					--수신자명
			, B.TR_PHONE				--수신자 팩스 번호
			, B.TR_RSLTSTAT				--발송결과(YP42)
			, B.TR_SENDTIME				--발송시간
			, B.TR_RECVTIME				--수신시간
			, B.TR_PAGECNT				--페이지수
		FROM dbo.FC_META_TRAN A
		INNER JOIN dbo.FC_MSG_TRAN B ON A.TR_BATCHID = B.TR_BATCHID
		WHERE
			<if test="@foren.Ognl@isNotEmpty(TR_SENDDATE_FR)"> 
			CONVERT(varchar,A.TR_SENDDATE,112) &gt;= #{TR_SENDDATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TR_SENDDATE_TO)">
			AND CONVERT(varchar,A.TR_SENDDATE,112) &lt;= #{TR_SENDDATE_TO}
			</if>	
			<if test="@foren.Ognl@isNotEmpty(TR_NAME)">
			AND B.TR_NAME LIKE '%' + #{TR_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(TR_PHONE)">
			AND B.TR_PHONE LIKE '%' + #{TR_PHONE} + '%'
			</if>
    </select>
	<update id="mpo210skrvServiceImpl.insert" parameterType="Map">
		DECLARE @DIV_NAME 		NVARCHAR(200),
				@DIV_FAX_NUM 	NVARCHAR(20)
				
		SELECT @DIV_NAME = DIV_NAME 
			  ,@DIV_FAX_NUM = FAX_NUM
		  FROM BOR120T WITH (NOLOCK)     
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   
		INSERT INTO FC_META_TRAN
		(
			 TR_SENDDATE			,TR_TITLE			,TR_MSGCOUNT		,TR_SENDNAME
			,TR_SENDFAXNUM								,TR_DOCNAME			,TR_SENDSTAT
		) VALUES (
			GETDATE()				,#{FAX_TITLE}		,1					, @DIV_NAME
			,dbo.fnRemoveSpecchar(@DIV_FAX_NUM)			,#{FILE_NAME}		, '-'
		)
		
		INSERT INTO FC_MSG_TRAN
		(
				 TR_BATCHID			, TR_SERIALNO		, TR_SENDDATE		, TR_NAME
			 	,TR_PHONE								, TR_SENDSTAT
		)		
		SELECT MAX(TR_BATCHID) 		, 1					, GETDATE()			, #{CUSTOM_NAME}
				,dbo.fnRemoveSpecchar(#{FAX_NUM})		, '0'
		 FROM FC_META_TRAN
		 
		
		DECLARE @Cnt INT
		
		SELECT @Cnt = ISNULL(MAX(TR_BATCHID),0) FROM FC_META_TRAN
		
		UPDATE FC_META_TRAN SET TR_SENDSTAT = 0 WHERE TR_BATCHID = @Cnt		 
	</update>
	
	<update id="mpo210skrvServiceImpl.update" parameterType="Map">		 
		
	</update>
	<select id="mpo210skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">

		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#TMP_MPO210T'))
                    DROP TABLE #TMP_MPO210T
    
            CREATE TABLE #TMP_MPO210T(
               GUBUN1     NVARCHAR(255),
               WEEK_DAY   NVARCHAR(255),
               SEQ        NVARCHAR(255),
               GUBUN      NVARCHAR(255),
               GT_INOUT_O   numeric(30, 6),
               GT_C_INOUT_O numeric(30, 6),
               GT_T_INOUT_O numeric(30, 6),
               INOUT_O1     numeric(30, 6),
               C_INOUT_O1   numeric(30, 6),
               T_INOUT_O1   numeric(30, 6),
               INOUT_O2     numeric(30, 6),
               C_INOUT_O2   numeric(30, 6),
               T_INOUT_O2   numeric(30, 6),
               INOUT_O3     numeric(30, 6),
               C_INOUT_O3   numeric(30, 6),
               T_INOUT_O3   numeric(30, 6),
               INOUT_O4     numeric(30, 6),
               C_INOUT_O4   numeric(30, 6),
               T_INOUT_O4   numeric(30, 6),
               INOUT_O5     numeric(30, 6),
               C_INOUT_O5   numeric(30, 6),
               T_INOUT_O5   numeric(30, 6),
               INOUT_O6     numeric(30, 6),
               C_INOUT_O6   numeric(30, 6),
               T_INOUT_O6   numeric(30, 6),
               INOUT_O7     numeric(30, 6),
               C_INOUT_O7   numeric(30, 6),
               T_INOUT_O7   numeric(30, 6),
               INOUT_O8     numeric(30, 6),
               C_INOUT_O8   numeric(30, 6),
               T_INOUT_O8   numeric(30, 6),
               INOUT_O9     numeric(30, 6),
               C_INOUT_O9   numeric(30, 6),
               T_INOUT_O9   numeric(30, 6),
               INOUT_O10    numeric(30, 6),
               C_INOUT_O10  numeric(30, 6),
               T_INOUT_O10  numeric(30, 6),
               INOUT_O11    numeric(30, 6),
               C_INOUT_O11  numeric(30, 6),
               T_INOUT_O11  numeric(30, 6),
               INOUT_O12    numeric(30, 6),
               C_INOUT_O12  numeric(30, 6),
               T_INOUT_O12  numeric(30, 6)
           )

    
    INSERT INTO #TMP_MPO210T(
            GUBUN1  ,
            WEEK_DAY  ,
            SEQ ,
            GUBUN  ,
            GT_INOUT_O  ,
            GT_C_INOUT_O ,
            GT_T_INOUT_O ,
            INOUT_O1    ,
            C_INOUT_O1  ,
            T_INOUT_O1  ,
            INOUT_O2    ,
            C_INOUT_O2  ,
            T_INOUT_O2  ,
            INOUT_O3    ,
            C_INOUT_O3  ,
            T_INOUT_O3  ,
            INOUT_O4    ,
            C_INOUT_O4  ,
            T_INOUT_O4  ,
            INOUT_O5    ,
            C_INOUT_O5  ,
            T_INOUT_O5  ,
            INOUT_O6    ,
            C_INOUT_O6  ,
            T_INOUT_O6  ,
            INOUT_O7    ,
            C_INOUT_O7  ,
            T_INOUT_O7  ,
            INOUT_O8    ,
            C_INOUT_O8  ,
            T_INOUT_O8  ,
            INOUT_O9    ,
            C_INOUT_O9  ,
            T_INOUT_O9  ,
            INOUT_O10   ,
            C_INOUT_O10 ,
            T_INOUT_O10 ,
            INOUT_O11   ,
            C_INOUT_O11 ,
            T_INOUT_O11 ,
            INOUT_O12   ,
            C_INOUT_O12 ,
            T_INOUT_O12 )

        
       SELECT  GUBUN1, WEEK_DAY, SEQ, GUBUN
             , (SUM(INOUT_O1) + SUM(INOUT_O2)  + SUM(INOUT_O3)  + SUM(INOUT_O4)  + SUM(INOUT_O5)  + SUM(INOUT_O6)  + SUM(INOUT_O7)  + SUM(INOUT_O8)  + SUM(INOUT_O9)  + SUM(INOUT_O10) + SUM(INOUT_O11) + SUM(INOUT_O12)) AS GT_INOUT_O
             , (SUM(C_INOUT_O1)  + SUM(C_INOUT_O2)  + SUM(C_INOUT_O3)  + SUM(C_INOUT_O4)  + SUM(C_INOUT_O5)  + SUM(C_INOUT_O6)  + SUM(C_INOUT_O7)  + SUM(C_INOUT_O8)  + SUM(C_INOUT_O9)  + SUM(C_INOUT_O10) + SUM(C_INOUT_O11) + SUM(C_INOUT_O12)) AS GT_C_INOUT_O
             , (SUM(INOUT_O1) + SUM(INOUT_O2)  + SUM(INOUT_O3)  + SUM(INOUT_O4)  + SUM(INOUT_O5)  + SUM(INOUT_O6)  + SUM(INOUT_O7)  + SUM(INOUT_O8)  + SUM(INOUT_O9)  + SUM(INOUT_O10) + SUM(INOUT_O11) + SUM(INOUT_O12) +
                SUM(C_INOUT_O1)  + SUM(C_INOUT_O2)  + SUM(C_INOUT_O3)  + SUM(C_INOUT_O4)  + SUM(C_INOUT_O5)  + SUM(C_INOUT_O6)  + SUM(C_INOUT_O7)  + SUM(C_INOUT_O8)  + SUM(C_INOUT_O9)  + SUM(C_INOUT_O10) + SUM(C_INOUT_O11) + SUM(C_INOUT_O12)) AS GT_T_INOUT_O , 
                SUM(INOUT_O1) INOUT_O1, SUM(C_INOUT_O1) C_INOUT_O1,  (SUM(INOUT_O1) + SUM(C_INOUT_O1))  T_INOUT_O1,
                SUM(INOUT_O2) INOUT_O2, SUM(C_INOUT_O2) C_INOUT_O2,  (SUM(INOUT_O2) + SUM(C_INOUT_O2))  T_INOUT_O2,
                SUM(INOUT_O3) INOUT_O3, SUM(C_INOUT_O3) C_INOUT_O3,  (SUM(INOUT_O3) + SUM(C_INOUT_O3))  T_INOUT_O3,
                SUM(INOUT_O4) INOUT_O4, SUM(C_INOUT_O4) C_INOUT_O4,  (SUM(INOUT_O4) + SUM(C_INOUT_O4))  T_INOUT_O4,
                SUM(INOUT_O5) INOUT_O5, SUM(C_INOUT_O5) C_INOUT_O5,  (SUM(INOUT_O5) + SUM(C_INOUT_O5))  T_INOUT_O5,
                SUM(INOUT_O6) INOUT_O6, SUM(C_INOUT_O6) C_INOUT_O6,  (SUM(INOUT_O6) + SUM(C_INOUT_O6))  T_INOUT_O6,
                SUM(INOUT_O7) INOUT_O7, SUM(C_INOUT_O7) C_INOUT_O7,  (SUM(INOUT_O7) + SUM(C_INOUT_O7))  T_INOUT_O7,
                SUM(INOUT_O8) INOUT_O8, SUM(C_INOUT_O8) C_INOUT_O8,  (SUM(INOUT_O8) + SUM(C_INOUT_O8))  T_INOUT_O8,
                SUM(INOUT_O9) INOUT_O9, SUM(C_INOUT_O9) C_INOUT_O9, (SUM(INOUT_O9) + SUM(C_INOUT_O9))  T_INOUT_O9,
                SUM(INOUT_O10) INOUT_O10, SUM(C_INOUT_O10) C_INOUT_O10,  (SUM(INOUT_O10) + SUM(C_INOUT_O10))  T_INOUT_O10,
                SUM(INOUT_O11) INOUT_O11, SUM(C_INOUT_O11) C_INOUT_O11,  (SUM(INOUT_O11) + SUM(C_INOUT_O11))  T_INOUT_O11,
                SUM(INOUT_O12) INOUT_O12, SUM(C_INOUT_O12) C_INOUT_O12,  (SUM(INOUT_O12) + SUM(C_INOUT_O12))  T_INOUT_O12
         FROM
         (
                SELECT  '입고' GUBUN1, 'E' SEQ, '3달전이후' GUBUN, RCV_DATE1, WEEK_DAY, DATE_DIFF,   SUM(INOUT_O) INOUT_O,  RECEIPT_TYPE,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O1,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O1,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O2,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O2,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O3,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O3,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O4,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O4,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O5,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O5,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O6,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O6,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O7,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O7,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O8,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O8,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O9,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O9,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O10,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O10,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O11,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O11,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O12,
                        (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O12
                FROM
                (
                    SELECT SUM(A.RECEIPT_Q * B.ORDER_P) AS INOUT_O
                         , C.LC_NUM
                         , A.RECEIPT_DATE
                         , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112)  UPDATE_DB_TIME
                         , (CONVERT(INT, DATENAME (WW, A.RECEIPT_DATE)) -  CONVERT(INT, DATENAME (WW , SUBSTRING(convert(CHAR, A.RECEIPT_DATE,112),1,6) +'01'  )) + 1) WEEK_DAY
                         ,  SUBSTRING(B.DVRY_DATE, 1, 6) + '01' LC_NUM_DATE
                         , (CASE WHEN C.RECEIPT_TYPE = '100' THEN (SUM(A.RECEIPT_Q * B.ORDER_P)) ELSE 0 END) C_INOUT_O
                         , SUBSTRING(CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),3,4) RCV_DATE1
                         , C.RECEIPT_TYPE
                         , DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) DATE_DIFF
                      FROM QMS100T A WITH(NOLOCK)
                           INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                            AND A.DIV_CODE  = B.DIV_CODE
                                                            AND A.ORDER_NUM = B.ORDER_NUM
                                                            AND A.ORDER_SEQ = B.ORDER_SEQ
                           INNER JOIN MPO100T C WITH(NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                            AND B.DIV_CODE  = C.DIV_CODE
                                                            AND B.ORDER_NUM = C.ORDER_NUM
                    WHERE A.COMP_CODE   = #{S_COMP_CODE}
                      AND A.DIV_CODE    = #{DIV_CODE}
                      AND SUBSTRING( A.RECEIPT_DATE, 1, 4)  = #{FR_DATE}
                      AND (DATEDIFF (MM, CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) &gt; 0
                        OR DATEDIFF (MM, CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) &lt; -2)
                    GROUP BY C.LC_NUM, A.RECEIPT_DATE, C.RECEIPT_TYPE, B.DVRY_DATE
                 )AA
             GROUP BY RCV_DATE1, WEEK_DAY, DATE_DIFF, RECEIPT_TYPE
            UNION ALL
            SELECT  '입고' GUBUN1, 'C' SEQ, '2달전' GUBUN, RCV_DATE1, WEEK_DAY, DATE_DIFF,   SUM(INOUT_O) INOUT_O,  RECEIPT_TYPE,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O12,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O12
            FROM
            (
                    SELECT SUM(A.RECEIPT_Q * B.ORDER_P) INOUT_O
                         , C.LC_NUM, CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112)  UPDATE_DB_TIME
                         , (CONVERT(INT, DATENAME (WW, A.RECEIPT_DATE)) -  CONVERT(INT, DATENAME (WW,   SUBSTRING(CONVERT(CHAR, A.RECEIPT_DATE,112),1,6) +'01'  )) + 1) WEEK_DAY
                         , SUBSTRING(B.DVRY_DATE, 1, 6) + '01' LC_NUM_DATE
                         , (CASE WHEN C.RECEIPT_TYPE = '100' THEN (SUM(A.RECEIPT_Q * B.ORDER_P)) ELSE 0 END) C_INOUT_O
                         , SUBSTRING(CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),3,4) RCV_DATE1
                         , C.RECEIPT_TYPE
                         , DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) DATE_DIFF
                    FROM QMS100T A WITH(NOLOCK)
                        INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
                                                         AND A.DIV_CODE     = B.DIV_CODE
                                                         AND A.ORDER_NUM    = B.ORDER_NUM
                                                         AND A.ORDER_SEQ    = B.ORDER_SEQ
                        INNER JOIN MPO100T C WITH(NOLOCK) ON B.COMP_CODE    = C.COMP_CODE
                                                         AND B.DIV_CODE     = C.DIV_CODE
                                                         AND B.ORDER_NUM    = C.ORDER_NUM
                    Where A.COMP_CODE   = #{S_COMP_CODE}
                      AND A.DIV_CODE    = #{DIV_CODE}
                      AND SUBSTRING( A.RECEIPT_DATE, 1, 4)  = #{FR_DATE}
                      AND DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) = -2
                    GROUP BY C.LC_NUM, A.RECEIPT_DATE, C.RECEIPT_TYPE, B.DVRY_DATE
           )AA
           GROUP BY RCV_DATE1, WEEK_DAY, DATE_DIFF, RECEIPT_TYPE
           UNION All
            SELECT  '입고' GUBUN1, 'B' SEQ,  '1달전' GUBUN, RCV_DATE1, WEEK_DAY, DATE_DIFF,   SUM(INOUT_O) INOUT_O,  RECEIPT_TYPE,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O12,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O12
            FROM
            (
                    SELECT SUM(A.RECEIPT_Q * B.ORDER_P) INOUT_O
                         , C.LC_NUM, CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112)  UPDATE_DB_TIME
                         , (CONVERT(INT, DATENAME (WW, A.RECEIPT_DATE)) -  CONVERT(INT, DATENAME (WW,   SUBSTRING(CONVERT(CHAR, A.RECEIPT_DATE,112),1,6) +'01'  )) + 1) WEEK_DAY
                         , SUBSTRING(B.DVRY_DATE, 1, 6) + '01' LC_NUM_DATE
                         , (CASE WHEN C.RECEIPT_TYPE = '100' THEN (SUM(A.RECEIPT_Q * B.ORDER_P)) ELSE 0 END) C_INOUT_O
                         , SUBSTRING(CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),3,4) RCV_DATE1
                         , C.RECEIPT_TYPE
                         , DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) DATE_DIFF
                    FROM QMS100T A WITH(NOLOCK)
                        INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
                                                         AND A.DIV_CODE     = B.DIV_CODE
                                                         AND A.ORDER_NUM    = B.ORDER_NUM
                                                         AND A.ORDER_SEQ    = B.ORDER_SEQ
                        INNER JOIN MPO100T C WITH(NOLOCK) ON B.COMP_CODE    = C.COMP_CODE
                                                         AND B.DIV_CODE     = C.DIV_CODE
                                                         AND B.ORDER_NUM    = C.ORDER_NUM
                    Where A.COMP_CODE   = #{S_COMP_CODE}
                      AND A.DIV_CODE    = #{DIV_CODE}
                      AND SUBSTRING( A.RECEIPT_DATE, 1, 4)  = #{FR_DATE}
                      AND DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) = -1
                    GROUP BY C.LC_NUM, A.RECEIPT_DATE, C.RECEIPT_TYPE, B.DVRY_DATE
            )AA
            GROUP BY RCV_DATE1, WEEK_DAY, DATE_DIFF, RECEIPT_TYPE
            UNION All
            SELECT  '입고' GUBUN1, 'A' SEQ, '당월' GUBUN, RCV_DATE1, WEEK_DAY, DATE_DIFF,   SUM(INOUT_O) INOUT_O,  RECEIPT_TYPE,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'01' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O1,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'02' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O2,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'03' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O3,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'04' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O4,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'05' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O5,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'06' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O6,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'07' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O7,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'08' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O8,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'09' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O9,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'10' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O10,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'11' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O11,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE != '100'THEN  SUM(INOUT_O) ELSE 0 END) INOUT_O12,
                    (CASE WHEN RCV_DATE1 = RIGHT(#{FR_DATE},2)+'12' AND RECEIPT_TYPE  = '100'THEN  SUM(INOUT_O) ELSE 0 END) C_INOUT_O12
            FROM
            (
                    SELECT SUM(A.RECEIPT_Q * B.ORDER_P) INOUT_O
                         , C.LC_NUM, CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112)  UPDATE_DB_TIME
                         , (CONVERT(INT, DATENAME (WW, A.RECEIPT_DATE)) -  CONVERT(INT, DATENAME (WW,   SUBSTRING(CONVERT(CHAR, A.RECEIPT_DATE,112),1,6) +'01'  )) + 1) WEEK_DAY
                         , SUBSTRING(B.DVRY_DATE, 1, 6) + '01' LC_NUM_DATE
                         , (CASE WHEN C.RECEIPT_TYPE = '100' THEN (SUM(A.RECEIPT_Q * B.ORDER_P)) ELSE 0 END) C_INOUT_O
                         , SUBSTRING(CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),3,4) RCV_DATE1
                         , C.RECEIPT_TYPE
                         , DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) DATE_DIFF
                    FROM QMS100T A WITH(NOLOCK)
                        INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
                                                         AND A.DIV_CODE     = B.DIV_CODE
                                                         AND A.ORDER_NUM    = B.ORDER_NUM
                                                         AND A.ORDER_SEQ    = B.ORDER_SEQ
                        INNER JOIN MPO100T C WITH(NOLOCK) ON B.COMP_CODE    = C.COMP_CODE
                                                         AND B.DIV_CODE     = C.DIV_CODE
                                                         AND B.ORDER_NUM    = C.ORDER_NUM
                    Where A.COMP_CODE   = #{S_COMP_CODE}
                      AND A.DIV_CODE    = #{DIV_CODE}
                      AND SUBSTRING( A.RECEIPT_DATE, 1, 4)  = #{FR_DATE}
                      AND DATEDIFF (MM , CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112),CONVERT(VARCHAR(30), B.DVRY_DATE, 112)) = 0
                    GROUP BY C.LC_NUM, A.RECEIPT_DATE, C.RECEIPT_TYPE, B.DVRY_DATE
            )AA
            GROUP BY RCV_DATE1, WEEK_DAY, DATE_DIFF, RECEIPT_TYPE
         )TT
         GROUP BY GUBUN1, GUBUN, WEEK_DAY, SEQ
        UNION All
            SELECT  GUBUN1, WEEK_DAY, 'Z' SEQ, '' GUBUN
                    , (SUM(ORDER_O1) - SUM(C_ORDER_O1))  + (SUM(ORDER_O2) - SUM(C_ORDER_O2))   + (SUM(ORDER_O3) - SUM(C_ORDER_O3))   + (SUM(ORDER_O4) - SUM(C_ORDER_O4))   + (SUM(ORDER_O5) - SUM(C_ORDER_O5))   + (SUM(ORDER_O6) - SUM(C_ORDER_O6))  
                    + (SUM(ORDER_O7) - SUM(C_ORDER_O7))   + (SUM(ORDER_O8) - SUM(C_ORDER_O8))   + (SUM(ORDER_O9) - SUM(C_ORDER_O9))   + (SUM(ORDER_O10) - SUM(C_ORDER_O10)) + (SUM(ORDER_O11) - SUM(C_ORDER_O11)) + (SUM(ORDER_O12) - SUM(C_ORDER_O12)) AS GT_ORDER_O
                    , SUM(C_ORDER_O1)  + SUM(C_ORDER_O2)  + SUM(C_ORDER_O3)  + SUM(C_ORDER_O4)  + SUM(C_ORDER_O5)  + SUM(C_ORDER_O6)  + SUM(C_ORDER_O7)  + SUM(C_ORDER_O8)  + SUM(C_ORDER_O9)  + SUM(C_ORDER_O10) + SUM(C_ORDER_O11) + SUM(C_ORDER_O12) AS GT_C_ORDER_O
                    , SUM(ORDER_O1)  + SUM(ORDER_O2)  + SUM(ORDER_O3)  + SUM(ORDER_O4)  + SUM(ORDER_O5)  + SUM(ORDER_O6)  + SUM(ORDER_O7)  + SUM(ORDER_O8)  + SUM(ORDER_O9)  + SUM(ORDER_O10) + SUM(ORDER_O11) + SUM(ORDER_O12) AS GT_T_C_ORDER_O,
                    (SUM(ORDER_O1) - SUM(C_ORDER_O1)) ORDER_O1, SUM(C_ORDER_O1) C_ORDER_O1, SUM(ORDER_O1) T_C_ORDER_O1,
                    (SUM(ORDER_O2) - SUM(C_ORDER_O2)) ORDER_O2, SUM(C_ORDER_O2) C_ORDER_O2, SUM(ORDER_O2) T_C_ORDER_O2,
                    (SUM(ORDER_O3) - SUM(C_ORDER_O3)) ORDER_O3, SUM(C_ORDER_O3) C_ORDER_O3, SUM(ORDER_O3)  T_C_ORDER_O3,
                    (SUM(ORDER_O4) - SUM(C_ORDER_O4)) ORDER_O4, SUM(C_ORDER_O4) C_ORDER_O4, SUM(ORDER_O4)  T_C_ORDER_O4,
                    (SUM(ORDER_O5) - SUM(C_ORDER_O5)) ORDER_O5, SUM(C_ORDER_O5) C_ORDER_O5, SUM(ORDER_O5)  T_C_ORDER_O5,
                    (SUM(ORDER_O6) - SUM(C_ORDER_O6)) ORDER_O6, SUM(C_ORDER_O6) C_ORDER_O6, SUM(ORDER_O6)  T_C_ORDER_O6,
                    (SUM(ORDER_O7) - SUM(C_ORDER_O7)) ORDER_O7, SUM(C_ORDER_O7) C_ORDER_O7, SUM(ORDER_O7)  T_C_ORDER_O7,
                    (SUM(ORDER_O8) - SUM(C_ORDER_O8)) ORDER_O8, SUM(C_ORDER_O8) C_ORDER_O8, SUM(ORDER_O8)  T_C_ORDER_O8,
                    (SUM(ORDER_O9) - SUM(C_ORDER_O9)) ORDER_O9, SUM(C_ORDER_O9) C_ORDER_O9, SUM(ORDER_O9)  T_C_ORDER_O9,
                    (SUM(ORDER_O10) - SUM(C_ORDER_O10)) ORDER_O10, SUM(C_ORDER_O10) C_ORDER_O10, SUM(ORDER_O10)  T_C_ORDER_O10,
                    (SUM(ORDER_O11) - SUM(C_ORDER_O11)) ORDER_O11, SUM(C_ORDER_O11) C_ORDER_O11, SUM(ORDER_O11)  T_C_ORDER_O11,
                    (SUM(ORDER_O12) - SUM(C_ORDER_O12)) ORDER_O12, SUM(C_ORDER_O12) C_ORDER_O12, SUM(ORDER_O12) T_C_ORDER_O12
         FROM
         (
            SELECT GUBUN1, GUBUN, WEEK_DAY,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'01' THEN ORDER_O ELSE 0 END) ORDER_O1,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'02' THEN ORDER_O ELSE 0 END) ORDER_O2,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'03' THEN ORDER_O ELSE 0 END) ORDER_O3,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'04' THEN ORDER_O ELSE 0 END) ORDER_O4,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'05' THEN ORDER_O ELSE 0 END) ORDER_O5,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'06' THEN ORDER_O ELSE 0 END) ORDER_O6,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'07' THEN ORDER_O ELSE 0 END) ORDER_O7,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'08' THEN ORDER_O ELSE 0 END) ORDER_O8,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'09' THEN ORDER_O ELSE 0 END) ORDER_O9,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'10' THEN ORDER_O ELSE 0 END) ORDER_O10,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'11' THEN ORDER_O ELSE 0 END) ORDER_O11,
                (CASE WHEN ORDER_DATE1 = RIGHT(#{FR_DATE},2)+'12' THEN ORDER_O ELSE 0 END) ORDER_O12,
                0 C_ORDER_O1, 0 C_ORDER_O2, 0 C_ORDER_O3, 0 C_ORDER_O4, 0 C_ORDER_O5, 0 C_ORDER_O6,
               0 C_ORDER_O7, 0 C_ORDER_O8, 0 C_ORDER_O9, 0 C_ORDER_O10, 0 C_ORDER_O11, 0 C_ORDER_O12
           FROM
           (
               SELECT '발주' GUBUN1, '전체' GUBUN, SUM(ORDER_O) ORDER_O, ORDER_DATE1, WEEK_DAY
               FROM
               (
                   SELECT CASE WHEN CONTROL_STATUS = '9' THEN ISNULL(SUM(INSTOCK_Q * ORDER_P),0)  ELSE ISNULL(SUM(ORDER_O),0) END ORDER_O,
                       (CONVERT(INT, DATENAME (WW, ORDER_DATE)) -  CONVERT(INT, DATENAME (WW ,   SUBSTRING(CONVERT(CHAR, ORDER_DATE,112),1,6) +'01'  )) + 1) WEEK_DAY,
                       SUBSTRING(CONVERT(VARCHAR(30), ORDER_DATE, 112),3,4) ORDER_DATE1
                     FROM MPO100T A WITH(NOLOCK)
                            INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
                                                             AND A.DIV_CODE     = B.DIV_CODE
                                                             AND A.ORDER_NUM    = B.ORDER_NUM
                    WHERE A.COMP_CODE   = #{S_COMP_CODE}
                      AND A.DIV_CODE    = #{DIV_CODE} 
                      AND SUBSTRING(CONVERT(VARCHAR(30), ORDER_DATE, 112),1,4) = #{FR_DATE}
                  GROUP BY ORDER_DATE, CONTROL_STATUS
              )AA
              GROUP BY ORDER_DATE1, WEEK_DAY
          )ZZ
          
         )TTT
         GROUP BY GUBUN1, WEEK_DAY, GUBUN
         ORDER BY GUBUN1, WEEK_DAY, SEQ DESC
         
         SELECT * FROM(
         SELECT  
            1 AS GROUP_FLG, GUBUN1  AS TEMP_GUBUN1  ,WEEK_DAY  AS TEMP_WEEK_DAY,
            GUBUN1      ,WEEK_DAY  ,SEQ ,GUBUN  ,
            GT_INOUT_O  ,GT_C_INOUT_O ,GT_T_INOUT_O ,
            INOUT_O1    ,C_INOUT_O1 ,T_INOUT_O1 ,
            INOUT_O2    ,C_INOUT_O2 ,T_INOUT_O2 ,
            INOUT_O3    ,C_INOUT_O3 ,T_INOUT_O3 ,
            INOUT_O4    ,C_INOUT_O4 ,T_INOUT_O4 ,
            INOUT_O5    ,C_INOUT_O5 ,T_INOUT_O5 ,
            INOUT_O6    ,C_INOUT_O6 ,T_INOUT_O6 ,
            INOUT_O7    ,C_INOUT_O7 ,T_INOUT_O7 ,
            INOUT_O8    ,C_INOUT_O8 ,T_INOUT_O8 ,
            INOUT_O9    ,C_INOUT_O9 ,T_INOUT_O9 ,
            INOUT_O10   ,C_INOUT_O10    ,T_INOUT_O10    ,
            INOUT_O11   ,C_INOUT_O11    ,T_INOUT_O11    ,
            INOUT_O12   ,C_INOUT_O12    ,T_INOUT_O12    
          FROM #TMP_MPO210T
         UNION ALL
        SELECT 
            2 AS GROUP_FLG,GUBUN1  AS TEMP_GUBUN1   ,WEEK_DAY  AS TEMP_WEEK_DAY,
            '' AS GUBUN1    ,'구분계' AS WEEK_DAY  ,'' AS SEQ ,'' AS GUBUN  ,
            SUM(ISNULL(GT_INOUT_O,0))      AS GT_INOUT_O    ,SUM(ISNULL(GT_C_INOUT_O,0))      AS GT_C_INOUT_O   ,SUM(ISNULL(GT_T_INOUT_O,0))      AS GT_T_INOUT_O   ,
            SUM(ISNULL(INOUT_O1,0))      AS INOUT_O1    ,SUM(ISNULL(C_INOUT_O1,0))      AS C_INOUT_O1   ,SUM(ISNULL(T_INOUT_O1,0))      AS T_INOUT_O1,
            SUM(ISNULL(INOUT_O2,0))      AS INOUT_O2    ,SUM(ISNULL(C_INOUT_O2,0))      AS C_INOUT_O2   ,SUM(ISNULL(T_INOUT_O2,0))      AS T_INOUT_O2,
            SUM(ISNULL(INOUT_O3,0))      AS INOUT_O3    ,SUM(ISNULL(C_INOUT_O3,0))      AS C_INOUT_O3   ,SUM(ISNULL(T_INOUT_O3,0))      AS T_INOUT_O3,
            SUM(ISNULL(INOUT_O4,0))      AS INOUT_O4    ,SUM(ISNULL(C_INOUT_O4,0))      AS C_INOUT_O4   ,SUM(ISNULL(T_INOUT_O4,0))      AS T_INOUT_O4,
            SUM(ISNULL(INOUT_O5,0))      AS INOUT_O5    ,SUM(ISNULL(C_INOUT_O5,0))      AS C_INOUT_O5   ,SUM(ISNULL(T_INOUT_O5,0))      AS T_INOUT_O5,
            SUM(ISNULL(INOUT_O6,0))      AS INOUT_O6    ,SUM(ISNULL(C_INOUT_O6,0))      AS C_INOUT_O6   ,SUM(ISNULL(T_INOUT_O6,0))      AS T_INOUT_O6,
            SUM(ISNULL(INOUT_O7,0))      AS INOUT_O7    ,SUM(ISNULL(C_INOUT_O7,0))      AS C_INOUT_O7   ,SUM(ISNULL(T_INOUT_O7,0))      AS T_INOUT_O7,
            SUM(ISNULL(INOUT_O8,0))      AS INOUT_O8    ,SUM(ISNULL(C_INOUT_O8,0))      AS C_INOUT_O8   ,SUM(ISNULL(T_INOUT_O8,0))      AS T_INOUT_O8,
            SUM(ISNULL(INOUT_O9,0))      AS INOUT_O9    ,SUM(ISNULL(C_INOUT_O9,0))      AS C_INOUT_O9   ,SUM(ISNULL(T_INOUT_O9,0))      AS T_INOUT_O9,
            SUM(ISNULL(INOUT_O10,0))      AS INOUT_O10  ,SUM(ISNULL(C_INOUT_O10,0))      AS C_INOUT_O10 ,SUM(ISNULL(T_INOUT_O10,0))      AS T_INOUT_O10,
            SUM(ISNULL(INOUT_O11,0))      AS INOUT_O11  ,SUM(ISNULL(C_INOUT_O11,0))      AS C_INOUT_O11 ,SUM(ISNULL(T_INOUT_O11,0))      AS T_INOUT_O11,
            SUM(ISNULL(INOUT_O12,0))      AS INOUT_O12  ,SUM(ISNULL(C_INOUT_O12,0))      AS C_INOUT_O12 ,SUM(ISNULL(T_INOUT_O12,0))      AS T_INOUT_O12

            FROM #TMP_MPO210T
            GROUP BY GUBUN1,WEEK_DAY
        UNION ALL
       SELECT 
            3 AS GROUP_FLG,GUBUN1  AS TEMP_GUBUN1   ,'9999'  AS TEMP_WEEK_DAY,
            '구분계' AS GUBUN1     ,'' AS WEEK_DAY  ,'' AS SEQ ,'' AS GUBUN  ,
            SUM(ISNULL(GT_INOUT_O,0))      AS GT_INOUT_O    ,SUM(ISNULL(GT_C_INOUT_O,0))      AS GT_C_INOUT_O   ,SUM(ISNULL(GT_T_INOUT_O,0))      AS GT_T_INOUT_O,
            SUM(ISNULL(INOUT_O1,0))      AS INOUT_O1    ,SUM(ISNULL(C_INOUT_O1,0))      AS C_INOUT_O1   ,SUM(ISNULL(T_INOUT_O1,0))      AS T_INOUT_O1,
            SUM(ISNULL(INOUT_O2,0))      AS INOUT_O2    ,SUM(ISNULL(C_INOUT_O2,0))      AS C_INOUT_O2   ,SUM(ISNULL(T_INOUT_O2,0))      AS T_INOUT_O2,
            SUM(ISNULL(INOUT_O3,0))      AS INOUT_O3    ,SUM(ISNULL(C_INOUT_O3,0))      AS C_INOUT_O3   ,SUM(ISNULL(T_INOUT_O3,0))      AS T_INOUT_O3,
            SUM(ISNULL(INOUT_O4,0))      AS INOUT_O4    ,SUM(ISNULL(C_INOUT_O4,0))      AS C_INOUT_O4   ,SUM(ISNULL(T_INOUT_O4,0))      AS T_INOUT_O4,
            SUM(ISNULL(INOUT_O5,0))      AS INOUT_O5    ,SUM(ISNULL(C_INOUT_O5,0))      AS C_INOUT_O5   ,SUM(ISNULL(T_INOUT_O5,0))      AS T_INOUT_O5,
            SUM(ISNULL(INOUT_O6,0))      AS INOUT_O6    ,SUM(ISNULL(C_INOUT_O6,0))      AS C_INOUT_O6   ,SUM(ISNULL(T_INOUT_O6,0))      AS T_INOUT_O6,
            SUM(ISNULL(INOUT_O7,0))      AS INOUT_O7    ,SUM(ISNULL(C_INOUT_O7,0))      AS C_INOUT_O7   ,SUM(ISNULL(T_INOUT_O7,0))      AS T_INOUT_O7,
            SUM(ISNULL(INOUT_O8,0))      AS INOUT_O8    ,SUM(ISNULL(C_INOUT_O8,0))      AS C_INOUT_O8   ,SUM(ISNULL(T_INOUT_O8,0))      AS T_INOUT_O8,
            SUM(ISNULL(INOUT_O9,0))      AS INOUT_O9    ,SUM(ISNULL(C_INOUT_O9,0))      AS C_INOUT_O9   ,SUM(ISNULL(T_INOUT_O9,0))      AS T_INOUT_O9,
            SUM(ISNULL(INOUT_O10,0))      AS INOUT_O10  ,SUM(ISNULL(C_INOUT_O10,0))      AS C_INOUT_O10 ,SUM(ISNULL(T_INOUT_O10,0))      AS T_INOUT_O10,
            SUM(ISNULL(INOUT_O11,0))      AS INOUT_O11  ,SUM(ISNULL(C_INOUT_O11,0))      AS C_INOUT_O11 ,SUM(ISNULL(T_INOUT_O11,0))      AS T_INOUT_O11,
            SUM(ISNULL(INOUT_O12,0))      AS INOUT_O12  ,SUM(ISNULL(C_INOUT_O12,0))      AS C_INOUT_O12 ,SUM(ISNULL(T_INOUT_O12,0))      AS T_INOUT_O12

            FROM #TMP_MPO210T
           GROUP BY GUBUN1
            ) MAIN
            ORDER BY TEMP_GUBUN1,TEMP_WEEK_DAY,GROUP_FLG 




			
 </select>
</mapper>