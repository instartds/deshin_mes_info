<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mpo070ukrvServiceImpl">
					
	<select id="mpo070ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		SELECT
				A.COMP_CODE								AS COMP_CODE
				,A.DIV_CODE								AS DIV_CODE
		        ,A.PROD_ITEM_CODE						AS PROD_ITEM_CODE
		        ,B.ITEM_NAME							AS ITEM_NAME
		        ,B.SPEC									AS SPEC
		        ,B.STOCK_UNIT							AS STOCK_UNIT
		        ,C.ITEM_ACCOUNT							AS ITEM_ACCOUNT
		        ,C.SUPPLY_TYPE							AS SUPPLY_TYPE
		        ,ISNULL(A.PL_QTY, 0)            		AS PL_QTY
		        ,ISNULL(A.PL_COST, 0)           		AS PL_COST
		        ,ISNULL(A.PL_AMOUNT, 0)         		AS PL_AMOUNT
		        ,ISNULL((SELECT SUM(STOCK_Q)
		            FROM BIV100T WITH(NOLOCK)
		            WHERE COMP_CODE = A.COMP_CODE
                      AND DIV_CODE = A.DIV_CODE 
                      AND ITEM_CODE = A.PROD_ITEM_CODE), 0) 	AS CSTOCK
		        ,A.ORDER_NUM 							AS ORDER_NUM
		        ,A.SER_NO 								AS SER_NO
		        ,E.DVRY_DATE
				,E.WEEK_NUM
				,R1.CUSTOM_NAME
		        ,A.MRP_CONTROL_NUM 						AS MRP_CONTROL_NUM
		        ,A.PROJECT_NO							AS PROJECT_NO
		        ,D.PJT_NAME								AS PROJECT_NAME
		        ,A.REMARK 								AS REMARK
		FROM BPL120T A WITH(NOLOCK)
			INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
											AND A.PROD_ITEM_CODE = B.ITEM_CODE
			INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
											AND A.DIV_CODE  = C.DIV_CODE
											AND A.PROD_ITEM_CODE = C.ITEM_CODE
			LEFT  JOIN BCM600T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
											AND A.PROJECT_NO = D.PJT_CODE
			LEFT JOIN SOF110T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE
											AND E.OUT_DIV_CODE = A.DIV_CODE
											AND E.ORDER_NUM = A.ORDER_NUM
											AND E.SER_NO = A.SER_NO
			LEFT JOIN SOF100T E2 WITH(NOLOCK) ON E2.COMP_CODE = E.COMP_CODE
											  AND E2.DIV_CODE = E.DIV_CODE
											  AND E2.ORDER_NUM = E.ORDER_NUM
			LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = E2.COMP_CODE
											 AND R1.CUSTOM_CODE = E2.CUSTOM_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
				AND A.DIV_CODE = #{DIV_CODE}
				AND A.WORK_STEP = 'M'			--'T':임시,'M':소요량
	      	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				AND A.PROJECT_NO = #{PJT_CODE}
			</if>
		ORDER BY A.MRP_CONTROL_NUM, A.ORDER_NUM, A.SER_NO, A.PROD_ITEM_CODE
	</select>
	
	<select id="mpo070ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE,
			DIV_CODE,
			MRP_CONTROL_NUM,
		    CHILD_ITEM_CODE,
		    ITEM_NAME,
		    SPEC,
		    STOCK_UNIT,
		    ITEM_ACCOUNT,
		    SUPPLY_TYPE,
		    SUM(PL_QTY)                      UNIT_Q,
		    MAX(ORDER_UNIT)                  ORDER_UNIT,
		    MAX(CHILD_PRICE)                 CHILD_PRICE,
		   -- (SUM(PL_QTY) * MAX(CHILD_PRICE)) CHILD_AMOUNT,
		   MAX(CHILD_AMOUNT) AS CHILD_AMOUNT,
		    MAX(CSTOCK)                      CSTOCK,
		    MAX(PURCH_LDTIME)                PURCH_LDTIME,
		    MAX(SAFE_STOCK_Q)				 SAFE_STOCK_Q,
		    SUM(PL_QTY)                      PL_QTY,
		    MAX(ORDER_REQ_Q)				 ORDER_REQ_Q,
		    SUM(PL_QTY) / MAX(TRNS_RATE) 				 CALC_PLAN_QTY,  --구매계획량
		    MAX(ORDER_Q)				 	 ORDER_Q,
		    MAX(CUSTOM_CODE)                 CUSTOM_CODE,
		    MAX(CUSTOM_NAME)				 CUSTOM_NAME,
		    MAX(REMARK)						 REMARK,
		    MAX(PROJECT_NO)					 PROJECT_NO,
		    MAX(ORDER_REQ_NUM)				 ORDER_REQ_NUM,
		    MAX(ORDER_NUM)				 	 ORDER_NUM,
		    MIN(ORDER_SEQ)					 ORDER_SEQ,
			MAX(PROD_ITEM_CODE)				 PROD_ITEM_CODE
		FROM
		    (
		        SELECT
		        	A.COMP_CODE,
		        	A.DIV_CODE,
		        	A.MRP_CONTROL_NUM,
		            A.CHILD_ITEM_CODE,
		            B.ITEM_NAME,
		            B.SPEC,
		            B.STOCK_UNIT,
		            C.ITEM_ACCOUNT,
		            C.SUPPLY_TYPE,
		            A.PL_QTY,
		            C.ORDER_UNIT,
		            A.CHILD_PRICE,
		            A.CHILD_AMOUNT,
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK,
		            C.PURCH_LDTIME,
		            C.SAFE_STOCK_Q,
		            ISNULL(D.REQ_PLAN_Q , 0) 		AS ORDER_REQ_Q,
		    		ISNULL(F.ORDER_Q, 0) 			AS ORDER_Q,
		            C.CUSTOM_CODE,
		            ISNULL(E.CUSTOM_NAME, '')		AS CUSTOM_NAME,
					A.REMARK,
					ISNULL(D.ORDER_REQ_NUM, '') 	AS ORDER_REQ_NUM,
		    		A.PROJECT_NO											AS PROJECT_NO,
		    		A.ORDER_NUM												AS ORDER_NUM,
					A.SER_NO												AS ORDER_SEQ,
					A.PROD_ITEM_CODE,
					
					C.TRNS_RATE
					
		      	FROM BPL130T A WITH(NOLOCK)
						INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
						INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
														 AND A.DIV_CODE  = C.DIV_CODE
														 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
						LEFT  JOIN MRP400T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
														 AND A.DIV_CODE  = D.DIV_CODE
														 AND A.CHILD_ITEM_CODE = D.ITEM_CODE
														 AND A.MRP_CONTROL_NUM = D.MRP_CONTROL_NUM
						LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
														 AND C.CUSTOM_CODE = E.CUSTOM_CODE
						LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_REQ_NUM, SUM(ORDER_Q) AS ORDER_Q FROM MPO200T WITH(NOLOCK)
										  GROUP BY  COMP_CODE, DIV_CODE, ORDER_REQ_NUM ) F ON A.COMP_CODE = F.COMP_CODE
																						  AND A.DIV_CODE  = F.DIV_CODE
																						  AND D.ORDER_REQ_NUM = F.ORDER_REQ_NUM														 
				WHERE A.COMP_CODE = #{S_COMP_CODE}
					AND A.DIV_CODE = #{DIV_CODE}
					AND A.WORK_STEP = 'M'			--'T':임시,'M':소요량
				    AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
		      	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
				</if>
		    ) AA
		GROUP BY COMP_CODE, DIV_CODE, MRP_CONTROL_NUM, CHILD_ITEM_CODE, 
				ITEM_NAME, SPEC, STOCK_UNIT, ITEM_ACCOUNT, SUPPLY_TYPE
	</select>
	
	
	<select id="mpo070ukrvServiceImpl.selectOrderList" parameterType="Map" resultType="rMap">
		SELECT
			A.DIV_CODE,
			B.ORDER_NUM,
		    A.SER_NO,
		    A.ITEM_CODE,
		    C.ITEM_NAME,
		    D.STOCK_UNIT,
		    D.SPEC,
		    C.ITEM_ACCOUNT,
		    C.SUPPLY_TYPE,
		    ISNULL((SELECT SUM(STOCK_Q)
		            FROM BIV100T WITH(NOLOCK)
		            WHERE COMP_CODE = A.COMP_CODE
                      AND DIV_CODE = A.DIV_CODE 
                      AND ITEM_CODE = A.ITEM_CODE), 0) 	AS CSTOCK,
		    C.SAFE_STOCK_Q,
		    C.BASIS_P,
		    A.ORDER_Q,
		    B.PJT_CODE,
		    B.PROJECT_NO,
		    E.PJT_NAME    				AS PROJECT_NAME,
    		C.WORK_SHOP_CODE,
    		B.ORDER_DATE,
    		B.CUSTOM_CODE
		FROM			   SOF110T A  WITH(NOLOCK)
		        INNER JOIN SOF100T B  WITH(NOLOCK)  ON B.COMP_CODE			= A.COMP_CODE
														AND B.DIV_CODE		= A.DIV_CODE
														AND B.ORDER_NUM		= A.ORDER_NUM
		        INNER JOIN BPR200T C WITH(NOLOCK)   ON C.COMP_CODE			= A.COMP_CODE
		        										AND C.DIV_CODE		= A.DIV_CODE
														AND C.ITEM_CODE		= A.ITEM_CODE
		        INNER JOIN BPR100T D WITH(NOLOCK)   ON D.COMP_CODE			= A.COMP_CODE
														AND D.ITEM_CODE		= A.ITEM_CODE
		        LEFT  JOIN BCM600T E WITH(NOLOCK)   ON E.COMP_CODE			= B.COMP_CODE
														AND E.PJT_CODE		= B.PROJECT_NO
		WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.OUT_DIV_CODE = #{DIV_CODE}
			
			AND (A.ORDER_NUM + CONVERT(NVARCHAR(20),A.SER_NO)) NOT IN (SELECT S1.ORDER_NUM + CONVERT(NVARCHAR(20),A.SER_NO) FROM BPL120T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.OUT_DIV_CODE AND S1.ORDER_NUM = A.ORDER_NUM AND S1.SER_NO = A.SER_NO)

		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
			AND B.PROJECT_NO		LIKE #{PJT_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}    /* 품목계정 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
			AND B.ORDER_DATE &gt;= #{FR_ORDER_DATE}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
			AND B.ORDER_DATE &lt;= #{TO_ORDER_DATE}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(FROM_NUM)">
			AND B.ORDER_NUM = #{FROM_NUM}    	/* 수주번호 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
			AND A.ITEM_CODE LIKE #{ITEM_CODE_FR}   	/* 수주품번 */
		</if>
		ORDER BY ORDER_NUM DESC, SER_NO, ITEM_CODE
	</select>
	
	<insert id="mpo070ukrvServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_BPL120T (
			KEY_VALUE
		    , OPR_FLAG
		    , COMP_CODE
		    , DIV_CODE
		    , WORK_STEP
		    , PROD_ITEM_CODE
		    , PL_QTY
		    , PL_COST
		    , PL_AMOUNT
		    , PROJECT_NO
		    , ORDER_NUM
		    , SER_NO
		 --   , MRP_CONTROL_NUM
		    , REMARK
		    , INSERT_DB_USER
		    , INSERT_DB_TIME
		    , UPDATE_DB_USER
		    , UPDATE_DB_TIME
		    , TEMPC_01
		    , TEMPC_02
		    , TEMPC_03
		    , TEMPN_01
		    , TEMPN_02
		    , TEMPN_03
		)VALUES(
			#{KEY_VALUE}
			,#{OPR_FLAG}
			,#{S_COMP_CODE}
			,#{DIV_CODE}
			,#{WORK_STEP}
			,#{PROD_ITEM_CODE}
			,#{PL_QTY}
			, 0
			, 0
			, #{PROJECT_NO}
		    , #{ORDER_NUM}
		    , #{SER_NO}
		 --   , ''
		    , #{REMARK}
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
			, ''
			, ''
			, ''
			, 0
			, 0
			, 0
		)
	</insert>
	
	<insert id="mpo070ukrvServiceImpl.insertLogDetail" parameterType="Map">
		INSERT INTO L_MRP400T (
			KEY_VALUE,
			OPR_FLAG,
			COMP_CODE,
		    DIV_CODE,
		    ORDER_REQ_NUM,
		    MRP_CONTROL_NUM,
		    ITEM_CODE,
		    BASIS_DATE,
		    CREATE_DATE,
		    SUPPLY_TYPE,
		    DOM_FORIGN,
		    REQ_PLAN_Q,
		    ORDER_PLAN_Q,
		    ORDER_PLAN_DATE,
		    CUSTOM_CODE,
		    CUSTOM_NAME,
		    ORDER_YN,
		    EXCHG_YN,
		    PROJECT_NO,
		    MRP_YN,
		    REMARK,
		    INSERT_DB_USER,
		    INSERT_DB_TIME,
		    UPDATE_DB_USER,
		    UPDATE_DB_TIME,
		    PJT_CODE,
		    IN_DIV_CODE,
		    
		    PROD_ITEM_CODE,
		    ORDER_NUM,
		    ORDER_SEQ
		    
		)VALUES(
			#{KEY_VALUE},
			#{OPR_FLAG},
			#{S_COMP_CODE},
			#{DIV_CODE},
			#{ORDER_REQ_NUM},
			#{MRP_CONTROL_NUM},
			#{CHILD_ITEM_CODE},
			CONVERT(NVARCHAR(08), GETDATE(), 112),
			CONVERT(NVARCHAR(08), GETDATE(), 112),
			#{SUPPLY_TYPE},
			1,
			#{ORDER_REQ_Q},
		    #{ORDER_REQ_Q},
		    CONVERT(NVARCHAR(08), GETDATE(), 112),
			#{CUSTOM_CODE},
		    #{CUSTOM_NAME},
		    'N',
		    'N',
		    #{PROJECT_NO},
		    'Y',
		    #{REMARK},
		    #{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE(),
			#{ORDER_NUM},
			#{DIV_CODE},
			
			#{PROD_ITEM_CODE},
		    #{ORDER_NUM},
		    #{ORDER_SEQ}
		)
	</insert>
	
	<update id="mpo070ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
	    {call SP_GetAutoNumComp (
	        #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	
	<update id="mpo070ukrvServiceImpl.USP_CALC_BOMPL" parameterType="Map" statementType="CALLABLE">
	    {call USP_CALC_BOMPL (
	        #{KeyValue,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ErrorDesc, 	mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
    </update>
    
    <update id="mpo070ukrvServiceImpl.USP_MATRL_MPO070UKRV" parameterType="Map" statementType="CALLABLE">
	    {call USP_MATRL_MPO070UKRV (
	        #{KeyValue,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ErrorDesc, 	mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
    </update>
    
    <update id="mpo070ukrvServiceImpl.updateBpl120T" parameterType="Map">
    	UPDATE BPL120T 
    	SET 
    		COMP_CODE = #{S_COMP_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				PROJECT_NO = #{PJT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
				,ORDER_NUM = #{ORDER_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SER_NO)">
				,SER_NO	= #{SER_NO}
			</if>
    		,REMARK = #{REMARK}
    	WHERE COMP_CODE = #{S_COMP_CODE} 
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'M'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE};
    </update>
    
    <update id="mpo070ukrvServiceImpl.updateBpl130T" parameterType="Map">
    	UPDATE BPL130T 
    	SET 
    		COMP_CODE = #{S_COMP_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				PROJECT_NO = #{PJT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
				,ORDER_NUM = #{ORDER_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SER_NO)">
				,SER_NO	= #{SER_NO}
			</if>
			,REMARK = #{REMARK}
    	WHERE COMP_CODE = #{S_COMP_CODE}
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'M'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE}
    </update>
    
    <update id="mpo070ukrvServiceImpl.deleteMaster" parameterType="Map">
    	DELETE FROM BPL120T 
    	WHERE COMP_CODE = #{S_COMP_CODE} 
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'M'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE};
    </update>
    
    <update id="mpo070ukrvServiceImpl.deleteDetail" parameterType="Map">
    	DELETE FROM BPL130T
    	WHERE COMP_CODE = #{S_COMP_CODE}
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'M'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE}
    </update>
    	
</mapper>