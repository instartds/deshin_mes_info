<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz130ukrvService">

	<select id="biz130ukrvService.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>

	<select id="biz130ukrvService.selectMasterList" parameterType="Map" resultType="rMap">
		/* 조회 */
		/* nbiz130ukrv.Cbiz130ukrv[fnBiv130QStd] Query01 */
		BEGIN
		  DECLARE           @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
		                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드 */
		                  , @CUSTOM_CODE        NVARCHAR(20)                /* (필수) 창고코드 */
		                  , @COUNT_DATE         NVARCHAR(10)                /* (필수) 실사선별일 */
		                  , @USER_ID            NVARCHAR(100)               /* (필수) USER ID */

		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    SET @COMP_CODE      = #{S_COMP_CODE}
		    SET @DIV_CODE       = #{DIV_CODE}
		    SET @CUSTOM_CODE    = #{CUSTOM_CODE}
		    SET @COUNT_DATE     = #{COUNT_DATE}
		    SET @USER_ID        = #{S_USER_ID}

	 			DECLARE        @RefItem     NVARCHAR(01)
			    SELECT TOP 1 @RefItem = REF_ITEM
			    FROM   BSA300T WITH (NOLOCK)
			    WHERE  USER_ID = @USER_ID

			    SET @RefItem = ISNULL(@RefItem, '0')

			    SELECT A.DIV_CODE
			         , A.COUNT_DATE
			         , A.CUSTOM_CODE
			         , A.ITEM_CODE
			         , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
				                WHEN @RefItem = '1' THEN B.ITEM_NAME1
				                WHEN @RefItem = '2' THEN B.ITEM_NAME2
				                ELSE B.ITEM_NAME
				        END                                                  AS ITEM_NAME
			         , B.SPEC
			         , B.STOCK_UNIT
			         , A.GOOD_STOCK_BOOK_Q
			         , A.BAD_STOCK_BOOK_Q
			         , A.GOOD_STOCK_Q
			         , A.BAD_STOCK_Q
			         , (CASE A.COUNT_CONT_DATE
			               WHEN '00000000'
			                  THEN ''
			                  ELSE unilite.fnGetUserdate(A.COMP_CODE, A.COUNT_CONT_DATE)
			             END) COUNT_CONT_DATE
			         , A.COUNT_FLAG
			      FROM BIZ300T A
			           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
			                                             AND A.ITEM_CODE = B.ITEM_CODE
			     WHERE A.DIV_CODE    = @DIV_CODE
			       AND A.COUNT_DATE  = @COUNT_DATE
			       AND A.CUSTOM_CODE = @CUSTOM_CODE
			       AND A.COMP_CODE   = @COMP_CODE
			     ORDER BY A.ITEM_CODE

			    SET NOCOUNT ON
			    SET ARITHABORT ON
			END
	</select>

	<select id="biz130ukrvService.selectMasterList2" parameterType="Map" resultType="rMap">	/* 실사등록 조회 */
	/* biz130ukrv.Cbiz130ukrv[fnbiv130QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT A.COMP_CODE
	         , A.DIV_CODE
	         , A.WH_CODE
	         , A.COUNT_DATE
	         , C2.ITEM_ACCOUNT
	         , M1.LEVEL_NAME   AS ITEM_LEVEL1
	         , M2.LEVEL_NAME   AS ITEM_LEVEL2
	         , M3.LEVEL_NAME   AS ITEM_LEVEL3
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                              AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , ISNULL(C1.UNIT_WGT, 1.0)                         AS UNIT_WGT
	         , C1.WGT_UNIT
	         , A.WH_CELL_CODE
	         , C3.WH_CELL_NAME
	         , A.LOT_NO
	         , A.GOOD_STOCK_BOOK_Q
	         , A.BAD_STOCK_BOOK_Q
	         , A.GOOD_STOCK_BOOK_Q * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_BOOK_W
	         , A.BAD_STOCK_BOOK_Q  * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_BOOK_W
	         , A.GOOD_STOCK_Q
	         , A.BAD_STOCK_Q
	         , A.GOOD_STOCK_Q      * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_W
	         , A.BAD_STOCK_Q       * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_W
	         , A.COUNT_FLAG
	         , A.COUNT_CONT_DATE
	         , A.REMARK
	         , A.UPDATE_DB_USER
	         , A.UPDATE_DB_TIME
	    FROM              BIV300T A  WITH (NOLOCK)
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.ITEM_CODE    = A.ITEM_CODE
	           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.DIV_CODE     = A.DIV_CODE
	                                              AND C2.ITEM_CODE    = A.ITEM_CODE
	           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
	                                              AND C3.DIV_CODE     = A.DIV_CODE
	                                              AND C3.WH_CODE      = A.WH_CODE
	                                              AND C3.WH_CELL_CODE = A.WH_CELL_CODE
	           LEFT  JOIN BPR000T M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
	                                              AND M1.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M1.LEVEL2       = '*'
	                                              AND M1.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
	                                              AND M2.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M2.LEVEL2      != '*'
	                                              AND M2.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M2.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M3 WITH (NOLOCK) ON M3.COMP_CODE    = C1.COMP_CODE
	                                              AND M3.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M3.LEVEL2      != '*'
	                                              AND M3.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M3.LEVEL3      != '*'
	                                              AND M3.LEVEL3       = C1.ITEM_LEVEL3
	           LEFT  JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE    = A.COMP_CODE
	                                              AND M4.MAIN_CODE    = N'B084'
	                                              AND M4.SUB_CODE     = N'D'
	    WHERE  A.COMP_CODE        = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE         = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE          = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE     = #{WH_CELL_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
	    AND    A.COUNT_DATE       = #{COUNT_DATE}
	    </if>
	    AND    C1.STOCK_CARE_YN   = 'Y'
	    AND    C2.REAL_CARE_YN    = 'Y'

	    /* 2009/12/09 창고 Cell 관리를 할 경우 창고 Cell 코드가 있는 데이터만 조회 */
	    AND  ((A.WH_CELL_CODE     &lt; '' AND ISNULL(M4.REF_CODE1, 'N') = 'Y') OR (ISNULL(M4.REF_CODE1, 'N') = 'N'))
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C2.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	            END)           LIKE #{ITEM_NAME}
		</if>

	    <if test="@foren.Ognl@isNotEmpty(DIFF_YN)">
	    AND (((A.GOOD_STOCK_BOOK_Q != A.GOOD_STOCK_Q OR A.BAD_STOCK_BOOK_Q != A.BAD_STOCK_Q) AND #{DIFF_YN}   = 'Y') OR (#{DIFF_YN}   = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(BOOK_ZERO)">
	    AND (((A.GOOD_STOCK_BOOK_Q != 0.0            OR A.BAD_STOCK_BOOK_Q != 0.0          ) AND #{BOOK_ZERO} = 'Y') OR (#{BOOK_ZERO} = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CONT_ZERO)">
	    AND (((A.GOOD_STOCK_Q      != 0.0            OR A.BAD_STOCK_Q      != 0.0          ) AND #{CONT_ZERO} = 'Y') OR (#{CONT_ZERO} = 'N'))
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	    AND    C1.ITEM_LEVEL1     = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	    AND    C1.ITEM_LEVEL2     = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	    AND    C1.ITEM_LEVEL3     = #{ITEM_LEVEL3}
		</if>
	    ORDER BY A.ITEM_CODE

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<select id="biz130ukrvService.insertMasterList" parameterType="Map" resultType="rMap">	/* 실행 */
	/*biz130ukrv.Cbiz130ukrv[fnBiv130Save] Query02*/
    /*실사선별 저장*/
    BEGIN
        DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
                      , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/

                      , @CUSTOM_CODE       NVARCHAR(20)                /* (필수) 외주처코드*/

                      , @COUNT_DATE         NVARCHAR(08)                /* (필수) 실사선별일*/

                      , @ITEM_ACCOUNT       NVARCHAR(02)                /* (선택) 품목 계정코드*/

                      , @ITEM_LEVEL1        NVARCHAR(10)                /* (선택) 대분류*/
                      , @ITEM_LEVEL2        NVARCHAR(10)                /* (선택) 중분류*/
                      , @ITEM_LEVEL3        NVARCHAR(10)                /* (선택) 소분류*/

                      , @ABC_FLAG           NVARCHAR(01)                /* (선택) ABC Flag*/

                      , @QRY_TYPE           NVARCHAR(01)                /* (필수) 실사주기 적용 유형(1: 실사주기적용 예, 2: 실사주기적용 아니오)*/
                      , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/

        SET NOCOUNT ON
        SET ARITHABORT ON

    /*  에러변수*/
        DECLARE         @ErrorCode          NVARCHAR(20)                /* 에러코드*/
                      , @ErrorDesc          NVARCHAR(1000)              /* 에러 메세지*/

    /*  1. 변수 값 할당 */
        SET @COMP_CODE       = #{S_COMP_CODE}
        SET @DIV_CODE        = #{DIV_CODE}

        SET @CUSTOM_CODE     = #{CUSTOM_CODE}

        SET @COUNT_DATE      = #{COUNT_DATE}

        SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

        SET @ITEM_LEVEL1     = #{ITEM_LEVEL1}
        SET @ITEM_LEVEL2     = #{ITEM_LEVEL2}
        SET @ITEM_LEVEL3     = #{ITEM_LEVEL3}

        SET @ABC_FLAG        = #{ABC_FLAG}

        SET @QRY_TYPE        = #{QRY_TYPE} /*실사주기  1:적용  2:미적용 */
        SET @USER_ID         = #{S_USER_ID}
		 /*  1. 마감월 조회*/
        DECLARE         @MaxLastYYYYMM         NVARCHAR(06)     /* 가장 최근 마감월*/
		DECLARE         @MinLastYYYYMM         NVARCHAR(06)     /* 가장 이전 마감월*/
		DECLARE         @BasisYYYYMM           NVARCHAR(06)     /* 가장 이전 마감월*/

	    SELECT @MaxLastYYYYMM = MAX(ISNULL(LAST_YYYYMM, '170001'))
	         , @MinLastYYYYMM = MIN(ISNULL(LAST_YYYYMM, '170001'))
	      FROM BIV900T
	     WHERE COMP_CODE = @COMP_CODE
	       AND DIV_CODE  = @DIV_CODE
	     GROUP BY COMP_CODE, DIV_CODE

		IF @@ROWCOUNT = 0
		BEGIN
			SET @MaxLastYYYYMM = '170001'
			SET @MinLastYYYYMM = '170001'
		END

		DELETE BIZ300T
		WHERE COMP_CODE   = @COMP_CODE
		  AND DIV_CODE    = @DIV_CODE
		  AND CUSTOM_CODE = @CUSTOM_CODE
		  AND COUNT_DATE  = @COUNT_DATE

		IF @QRY_TYPE = 2
			BEGIN
				 --biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query03
		        INSERT INTO BIZ300T
		             ( DIV_CODE  , COUNT_DATE    , CUSTOM_CODE   , ITEM_CODE, COUNT_CONT_DATE
		             , COUNT_FLAG, UPDATE_DB_USER, UPDATE_DB_TIME, COMP_CODE )
		        SELECT C.DIV_CODE
		             , @COUNT_DATE
		             , C.CUSTOM_CODE
		             , C.ITEM_CODE
		             , '00000000'
		             , 'O'
		             , @USER_ID
		             , GETDATE()
		             , C.COMP_CODE
		          FROM BPR100T A
		          INNER JOIN BPR200T B ON A.COMP_CODE = B.COMP_CODE
		          					  AND A.ITEM_CODE = B.ITEM_CODE
		          INNER JOIN BIZ100T C ON B.COMP_CODE = C.COMP_CODE
		          					  AND B.DIV_CODE  = C.DIV_CODE
		          					  AND B.ITEM_CODE = C.ITEM_CODE
		         WHERE A.USE_YN        = 'Y'
		           AND B.REAL_CARE_YN  = 'Y'
		           AND A.STOCK_CARE_YN = 'Y'
		           AND C.COMP_CODE     = @COMP_CODE
		           AND C.DIV_CODE      = @DIV_CODE
		           AND C.CUSTOM_CODE   = @CUSTOM_CODE
				   AND  ((B.ITEM_ACCOUNT = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
				   AND  ((A.ITEM_LEVEL1  = @ITEM_LEVEL1 AND  @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1 = ''))
				   AND  ((A.ITEM_LEVEL2  = @ITEM_LEVEL2 AND  @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2 = ''))
				   AND  ((A.ITEM_LEVEL3  = @ITEM_LEVEL3 AND  @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3 = ''))
				   AND  ((B.ABC_FLAG     = @ABC_FLAG AND     @ABC_FLAG  != '')    OR (@ABC_FLAG = ''))
			END
		ELSE
		    BEGIN
				    	--biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query04
		        INSERT INTO BIZ300T
		             ( DIV_CODE  , COUNT_DATE    , CUSTOM_CODE   , ITEM_CODE, COUNT_CONT_DATE
		             , COUNT_FLAG, UPDATE_DB_USER, UPDATE_DB_TIME, COMP_CODE )
		        SELECT C.DIV_CODE
		             , @COUNT_DATE
		             , C.CUSTOM_CODE
		             , C.ITEM_CODE
		             , '00000000'
		             , 'O'
		             , @USER_ID
		             , GETDATE()
		             , C.COMP_CODE
		         FROM BPR200T A
				  INNER JOIN BPR100T B ON A.COMP_CODE = B.COMP_CODE
									  AND A.ITEM_CODE = B.ITEM_CODE
				  INNER JOIN BIZ100T C ON A.COMP_CODE = C.COMP_CODE
				  					  AND A.DIV_CODE  = C.DIV_CODE
									  AND A.ITEM_CODE = C.ITEM_CODE
		         WHERE A.REAL_CARE_YN  = 'Y'
		           AND B.STOCK_CARE_YN = 'Y'

		           AND C.COMP_CODE     = @COMP_CODE
		           AND C.DIV_CODE      = @DIV_CODE
		           AND C.CUSTOM_CODE   = @CUSTOM_CODE
				   AND  ((A.ITEM_ACCOUNT = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
				   AND  ((B.ITEM_LEVEL1  = @ITEM_LEVEL1 AND  @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1 = ''))
				   AND  ((B.ITEM_LEVEL2  = @ITEM_LEVEL2 AND  @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2 = ''))
				   AND  ((B.ITEM_LEVEL3  = @ITEM_LEVEL3 AND  @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3 = ''))
				   AND  ((A.ABC_FLAG     = @ABC_FLAG AND     @ABC_FLAG  != '')    OR (@ABC_FLAG = ''))

		           AND NOT EXISTS(SELECT *
		                            FROM BIZ300T
		                           WHERE COMP_CODE   = C.COMP_CODE
		                             AND DIV_CODE    = C.DIV_CODE
		                             AND CUSTOM_CODE = C.CUSTOM_CODE
		                             AND ITEM_CODE   = C.ITEM_CODE)
				  UNION

				  SELECT C.DIV_CODE
		             , @COUNT_DATE
		             , C.CUSTOM_CODE
		             , C.ITEM_CODE
		             , '00000000'
		             , 'O'
		             , @USER_ID
		             , GETDATE()
		             , C.COMP_CODE
		          FROM BPR100T A
					   INNER JOIN BPR200T B ON A.COMP_CODE = B.COMP_CODE
										   AND A.ITEM_CODE = B.ITEM_CODE
					   INNER JOIN BIZ300T C ON B.COMP_CODE = C.COMP_CODE
										   AND B.DIV_CODE  = C.DIV_CODE
										   AND B.ITEM_CODE = C.ITEM_CODE
		         WHERE  A.USE_YN        = 'Y'
		           AND  B.REAL_CARE_YN  = 'Y'
		           AND  A.STOCK_CARE_YN = 'Y'

		           AND CONVERT(CHAR(8), DATEADD(M, ISNULL(CAST(B.REAL_CARE_PERIOD AS INT), -500) * -1, CAST(@COUNT_DATE AS SMALLDATETIME)), 112) > ISNULL(C.COUNT_DATE, '00000000')

		           AND C.COMP_CODE     = @COMP_CODE
		           AND C.DIV_CODE      = @DIV_CODE
		           AND C.CUSTOM_CODE   = @CUSTOM_CODE

				   AND  ((B.ITEM_ACCOUNT = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
				   AND  ((A.ITEM_LEVEL1  = @ITEM_LEVEL1 AND  @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1 = ''))
				   AND  ((A.ITEM_LEVEL2  = @ITEM_LEVEL2 AND  @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2 = ''))
				   AND  ((A.ITEM_LEVEL3  = @ITEM_LEVEL3 AND  @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3 = ''))
				   AND  ((B.ABC_FLAG     = @ABC_FLAG AND     @ABC_FLAG  != '')    OR (@ABC_FLAG = ''))

		    END

		  --biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query05
		    SELECT  @BasisYYYYMM = ISNULL(MAX(BASIS_YYYYMM), '000000')
		      FROM BIZ200T
		     WHERE COMP_CODE     = @COMP_CODE
		       AND DIV_CODE      = @DIV_CODE
		       AND BASIS_YYYYMM <![CDATA[<=]]> @COUNT_DATE
		       AND CUSTOM_CODE   = @CUSTOM_CODE
	IF @BasisYYYYMM != '000000'
	  BEGIN
		IF 	@QRY_TYPE = 2
			BEGIN
				--biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query06
	           INSERT INTO BIZ300T
	                ( DIV_CODE  , COUNT_DATE    , CUSTOM_CODE   , ITEM_CODE, COUNT_CONT_DATE
	                , COUNT_FLAG, UPDATE_DB_USER, UPDATE_DB_TIME, COMP_CODE )
	           SELECT DISTINCT A.DIV_CODE
	                , @COUNT_DATE
	                , A.CUSTOM_CODE
	                , A.ITEM_CODE
	                , '00000000'
	                , 'O'
	                , @USER_ID
	                , GETDATE()
	                , A.COMP_CODE
	             FROM BIZ200T A
				 INNER JOIN BPR100T B ON A.COMP_CODE = B.COMP_CODE
									 AND A.DIV_CODE  = B.ITEM_CODE
				 INNER JOIN BPR200T C ON A.COMP_CODE = C.COMP_CODE
									 AND A.DIV_CODE  = C.DIV_CODE
									 AND A.ITEM_CODE = C.ITEM_CODE
	            WHERE B.USE_YN        = 'Y'
	              AND C.REAL_CARE_YN  = 'Y'
	              AND B.STOCK_CARE_YN = 'Y'

	              AND A.BASIS_YYYYMM        = @BasisYYYYMM
	              AND A.COMP_CODE           = @COMP_CODE
	              AND A.DIV_CODE            = @DIV_CODE
	              AND A.CUSTOM_CODE         = @CUSTOM_CODE

	              AND NOT EXISTS (SELECT *
	                                FROM BIZ300T B
	                               WHERE B.COUNT_DATE  = @COUNT_DATE
	                                 AND B.COMP_CODE   = A.COMP_CODE
	                                 AND B.DIV_CODE    = A.DIV_CODE
	                                 AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                                 AND B.ITEM_CODE   = A.ITEM_CODE)
				  AND  ((C.ITEM_ACCOUNT = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
				  AND  ((B.ITEM_LEVEL1  = @ITEM_LEVEL1 AND  @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1 = ''))
				  AND  ((B.ITEM_LEVEL2  = @ITEM_LEVEL2 AND  @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2 = ''))
				  AND  ((B.ITEM_LEVEL3  = @ITEM_LEVEL3 AND  @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3 = ''))
				  AND  ((C.ABC_FLAG     = @ABC_FLAG AND     @ABC_FLAG  != '')    OR (@ABC_FLAG = ''))
			END

			 --biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query07
        UPDATE BIZ
           SET BIZ.GOOD_STOCK_BOOK_Q = B.GOOD_Q
             , BIZ.BAD_STOCK_BOOK_Q  = B.BAD_Q
             , BIZ.GOOD_STOCK_Q      = B.GOOD_Q
             , BIZ.BAD_STOCK_Q       = B.BAD_Q
          FROM BIZ300T BIZ
             , (SELECT BASIS_YYYYMM
                     , COMP_CODE
                     , DIV_CODE
                     , CUSTOM_CODE
                     , ITEM_CODE
                     , ISNULL((BASIS_Q - BAD_BASIS_Q),0) AS GOOD_Q
                     , ISNULL(BAD_BASIS_Q, 0) AS BAD_Q
                  FROM BIZ200T
                 WHERE BASIS_YYYYMM = @BasisYYYYMM
                   AND COMP_CODE    = @COMP_CODE
                   AND DIV_CODE     = @DIV_CODE
                   AND CUSTOM_CODE  = @CUSTOM_CODE) B
         WHERE BIZ.COMP_CODE   = B.COMP_CODE
           AND BIZ.DIV_CODE    = B.DIV_CODE
           AND BIZ.CUSTOM_CODE = B.CUSTOM_CODE
           AND BIZ.ITEM_CODE   = B.ITEM_CODE
           AND BIZ.COUNT_DATE  = @COUNT_DATE
	END

	IF 	@QRY_TYPE = 2
	 	BEGIN
			--biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query08
	        INSERT INTO BIZ300T
	             ( DIV_CODE  , COUNT_DATE    , CUSTOM_CODE   , ITEM_CODE, COUNT_CONT_DATE
	             , COUNT_FLAG, UPDATE_DB_USER, UPDATE_DB_TIME, COMP_CODE )
	        SELECT DISTINCT A.DIV_CODE
	             , @COUNT_DATE
	             , A.CUSTOM_CODE
	             , A.ITEM_CODE
	             , '00000000'
	             , 'O'
	             , @USER_ID
	             , GETDATE()
	             , A.COMP_CODE
	          FROM BIZ600T A
			       INNER JOIN BPR100T B ON A.COMP_CODE = B.COMP_CODE
									   AND A.ITEM_CODE = B.ITEM_CODE
				   INNER JOIN BPR200T C ON A.COMP_CODE = C.COMP_CODE
									   AND A.DIV_CODE  = C.DIV_CODE
									   AND A.ITEM_CODE = C.ITEM_CODE
	         WHERE B.USE_YN        = 'Y'
	           AND C.REAL_CARE_YN  = 'Y'
	           AND B.STOCK_CARE_YN = 'Y'
	           AND A.COMP_CODE           = @COMP_CODE
	           AND A.DIV_CODE            = @DIV_CODE
	           AND A.CUSTOM_CODE         = @CUSTOM_CODE
	           AND A.INOUT_DATE BETWEEN @BasisYYYYMM AND @COUNT_DATE
	           AND NOT EXISTS (SELECT *
	                             FROM BIZ300T B
	                            WHERE B.COUNT_DATE  = @COUNT_DATE
	                              AND B.COMP_CODE   = A.COMP_CODE
	                              AND B.DIV_CODE    = A.DIV_CODE
	                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                              AND B.ITEM_CODE   = A.ITEM_CODE)
			  AND  ((C.ITEM_ACCOUNT = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
			  AND  ((B.ITEM_LEVEL1  = @ITEM_LEVEL1 AND  @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1 = ''))
			  AND  ((B.ITEM_LEVEL2  = @ITEM_LEVEL2 AND  @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2 = ''))
			  AND  ((B.ITEM_LEVEL3  = @ITEM_LEVEL3 AND  @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3 = ''))
			  AND  ((C.ABC_FLAG     = @ABC_FLAG AND     @ABC_FLAG  != '')    OR (@ABC_FLAG = ''))
	 	END
	 	 --biz130ukrv.Cbiz130ukrv[fnBiz130SCnt] Query09
	    UPDATE BIZ
	       SET BIZ.GOOD_STOCK_BOOK_Q = BIZ.GOOD_STOCK_BOOK_Q + SumIO.IN_GOOD_Q - SumIO.OUT_GOOD_Q
	         , BIZ.BAD_STOCK_BOOK_Q  = BIZ.BAD_STOCK_BOOK_Q  + SumIO.IN_BAD_Q  - SumIO.OUT_BAD_Q
	         , BIZ.GOOD_STOCK_Q      = BIZ.GOOD_STOCK_Q      + SumIO.IN_GOOD_Q - SumIO.OUT_GOOD_Q
	         , BIZ.BAD_STOCK_Q       = BIZ.BAD_STOCK_Q       + SumIO.IN_BAD_Q  - SumIO.OUT_BAD_Q
	      FROM BIZ300T BIZ
	         , (SELECT A.COMP_CODE
	                 , A.DIV_CODE
	                 , A.COUNT_DATE
	                 , A.CUSTOM_CODE
	                 , A.ITEM_CODE
	                 , SUM(CASE WHEN B.INOUT_TYPE <![CDATA[<>]]> '2' AND B.ITEM_STATUS = '1' THEN B.INOUT_Q ELSE 0 END) IN_GOOD_Q
	                 , SUM(CASE WHEN B.INOUT_TYPE <![CDATA[<>]]> '2' AND B.ITEM_STATUS = '2' THEN B.INOUT_Q ELSE 0 END) IN_BAD_Q
	                 , SUM(CASE WHEN B.INOUT_TYPE =  '2' AND B.ITEM_STATUS = '1' THEN B.INOUT_Q ELSE 0 END) OUT_GOOD_Q
	                 , SUM(CASE WHEN B.INOUT_TYPE =  '2' AND B.ITEM_STATUS = '2' THEN B.INOUT_Q ELSE 0 END) OUT_BAD_Q
	              FROM BIZ300T A
	                 , BIZ600T B
	             WHERE A.ITEM_CODE   = B.ITEM_CODE
	               AND A.COMP_CODE   = B.COMP_CODE
	               AND A.DIV_CODE    = B.DIV_CODE
	               AND A.CUSTOM_CODE = B.CUSTOM_CODE
	               AND A.COMP_CODE   = @COMP_CODE
	               AND A.DIV_CODE    = @DIV_CODE
	               AND A.COUNT_DATE  = @COUNT_DATE
	               AND A.CUSTOM_CODE = @CUSTOM_CODE
	               AND B.INOUT_DATE BETWEEN @BasisYYYYMM AND @COUNT_DATE
	             GROUP BY A.COMP_CODE, A.DIV_CODE, A.COUNT_DATE, A.CUSTOM_CODE, A.ITEM_CODE) SumIO
	     WHERE BIZ.COMP_CODE   = SumIO.COMP_CODE
	       AND BIZ.DIV_CODE    = SumIO.DIV_CODE
	       AND BIZ.COUNT_DATE  = SumIO.COUNT_DATE
	       AND BIZ.CUSTOM_CODE = SumIO.CUSTOM_CODE
	       AND BIZ.ITEM_CODE   = SumIO.ITEM_CODE
    /* 8. Error Handler 처리*/
    ERROR_HANDLER:
        IF ISNULL(@ErrorCode, '') != ''
           SET @ErrorDesc = @ErrorCode + ';' + ISNULL(@ErrorDesc, '')

        SET NOCOUNT OFF
        SET ARITHABORT OFF

        SELECT TOP 1 ISNULL(@ErrorCode, '') AS ERROR_CODE, ISNULL(@ErrorDesc, '') AS ERROR_DESC
    END
	</select>
</mapper>