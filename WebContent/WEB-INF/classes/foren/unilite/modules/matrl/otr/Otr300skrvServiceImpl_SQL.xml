<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="otr300skrvServiceImpl">
	<select id="otr300skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
   	/* otr300skrv.Cotr300skrv[fnOtr300QStd] Query01 ITEM	*/
	BEGIN
		 SET NOCOUNT ON
		 SET ARITHABORT ON

         DECLARE @COMP_CODE         NVARCHAR(8)
               , @DIV_CODE          NVARCHAR(8)
               , @FR_INOUT_DATE     NVARCHAR(8)
               , @TO_INOUT_DATE     NVARCHAR(8)
               , @INOUT_PRSN        NVARCHAR(10)
               , @WH_CODE           NVARCHAR(8)
               , @INOUT_CODE_TYPE   NVARCHAR(1)
               , @INOUT_CODE        NVARCHAR(8)
               , @INOUT_TYPE_DETAIL NVARCHAR(3)
               , @ITEM_ACCOUNT      NVARCHAR(1)
               , @ITEM_CODE         NVARCHAR(20)
               , @USER_ID           NVARCHAR(100)

         SET @COMP_CODE         = #{S_COMP_CODE}
         SET @DIV_CODE          = #{DIV_CODE}
         SET @FR_INOUT_DATE     = #{FR_INOUT_DATE}
         SET @TO_INOUT_DATE     = #{TO_INOUT_DATE}
         SET @INOUT_PRSN        = #{INOUT_PRSN}
         SET @WH_CODE           = #{WH_CODE}
         SET @INOUT_CODE_TYPE   = #{INOUT_CODE_TYPE}
         SET @INOUT_CODE        = #{INOUT_CODE}
         SET @INOUT_TYPE_DETAIL = #{INOUT_TYPE_DETAIL}
         SET @ITEM_ACCOUNT      = #{ITEM_ACCOUNT}
         SET @ITEM_CODE         = #{ITEM_CODE}
         SET @USER_ID           = #{S_USER_ID}

         SELECT A.ITEM_CODE
              , uniLITE.fnItemNameComp(K.COMP_CODE, @USER_ID,K.ITEM_CODE)   AS ITEM_NAME
              , B.SPEC                                                      AS SPEC
              , CASE A.INOUT_DATE
                     WHEN '' THEN ''
                     ELSE UNILITE.fnGetUserdate(A.COMP_CODE, A.INOUT_DATE)
                 END                                                        AS INOUT_DATE
              , J.CODE_NAME                                                 AS INOUT_CODE_TYPE
              , A.INOUT_CODE                                                AS INOUT_CODE
              , uniLITE.fnCustNameComp(A.COMP_CODE, @USER_ID, A.INOUT_CODE) AS CUSTOM_NAME
              , A.INOUT_Q                                                   AS INOUT_Q
              , B.STOCK_UNIT                                                AS STOCK_UNIT
              , E.TREE_NAME                                                 AS WH_CODE
              , ISNULL(M1.CODE_NAME,'')                                     AS INOUT_PRSN
              , G.CODE_NAME                                                 AS INOUT_METH
              , H.CODE_NAME                                                 AS INOUT_TYPE_DETAIL
              , A.INOUT_NUM                                                 AS INOUT_NUM
              , I.CODE_NAME                                                 AS DIV_CODE
              , A.INOUT_I                                                   AS INOUT_I
              , A.REMARK                                                    AS REMARK
              , A.PROJECT_NO                                                AS PROJECT_NO
              , A.ORDER_NUM                                                 AS ORDER_NUM
              , A.ORDER_SEQ                                                 AS ORDER_SEQ
           FROM BTR100T AS A WITH (NOLOCK)
                            LEFT OUTER JOIN BSA100T As I  WITH (NOLOCK) ON I.COMP_CODE  = A.COMP_CODE
                                                                       AND I.MAIN_CODE  = N'B001'
                                                                       AND I.SUB_CODE   = A.DIV_CODE
                            LEFT OUTER JOIN BPR100T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                                       AND B.ITEM_CODE  = A.ITEM_CODE
                                 INNER JOIN BSA220T As E  WITH (NOLOCK) ON E.COMP_CODE  = A.COMP_CODE
                                                                       AND E.TYPE_LEVEL = A.DIV_CODE
                                                                       AND E.TREE_CODE  = A.WH_CODE
                                 INNER JOIN BSA100T As G  WITH (NOLOCK) ON G.COMP_CODE  = A.COMP_CODE
                                                                       AND G.MAIN_CODE  = N'B036'
                                                                       AND G.SUB_CODE   = A.INOUT_METH
                                 INNER JOIN BSA100T As H  WITH (NOLOCK) ON H.COMP_CODE  = A.COMP_CODE
                                                                       AND H.MAIN_CODE  = N'M104'
                                                                       AND H.SUB_CODE   = A.INOUT_TYPE_DETAIL
                                 INNER JOIN BSA100T As J  WITH (NOLOCK) ON J.COMP_CODE  = A.COMP_CODE
                                                                       AND J.MAIN_CODE  = N'B005'
                                                                       AND J.SUB_CODE   = A.INOUT_CODE_TYPE
                                 INNER JOIN BPR200T AS K  WITH (NOLOCK) ON K.COMP_CODE  = A.COMP_CODE
                                                                       AND K.ITEM_CODE  = A.ITEM_CODE
                                                                       AND K.DIV_CODE   = A.DIV_CODE
                            LEFT OUTER JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                                       AND M1.MAIN_CODE = N'B024'
                                                                       AND M1.SUB_CODE  = A.INOUT_PRSN
          WHERE A.INOUT_TYPE      = '2'
            AND A.INOUT_CODE_TYPE = '5'
            AND A.COMP_CODE       = @COMP_CODE
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE		  = @DIV_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
			AND A.INOUT_DATE  &gt;= @FR_INOUT_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
			AND A.INOUT_DATE  &lt;= @TO_INOUT_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
			AND A.INOUT_PRSN	  = @INOUT_PRSN
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND A.WH_CODE		  = @WH_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
			AND A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
			AND A.INOUT_CODE      LIKE @INOUT_CODE + '%'
		</if>
		
		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE) and @foren.Ognl@isNotEmpty(INOUT_NAME)">
			AND A.INOUT_CODE = @INOUT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE) and @foren.Ognl@isEmpty(INOUT_NAME)">
			AND A.INOUT_CODE LIKE @INOUT_CODE + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(INOUT_CODE) and @foren.Ognl@isNotEmpty(INOUT_NAME)">
			AND	(uniLITE.fnCustNameComp(A.COMP_CODE, @USER_ID, A.INOUT_CODE)  LIKE N'%' + #{INOUT_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
		
		<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
			AND A.INOUT_TYPE_DETAIL	 = @INOUT_TYPE_DETAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND K.ITEM_ACCOUNT	     = @ITEM_ACCOUNT
		</if>

		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND A.ITEM_CODE = @ITEM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
			AND A.ITEM_CODE LIKE @ITEM_CODE + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND	(uniLITE.fnItemNameComp(K.COMP_CODE, @USER_ID,K.ITEM_CODE)  LIKE N'%' + #{ITEM_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
			--202002118 추가: 조회조건 "발주번호" 추가
			AND A.ORDER_NUM	      LIKE #{ORDER_NUM} + '%'
		</if>
	    ORDER BY A.ITEM_CODE, A.INOUT_DATE, A.INOUT_CODE_TYPE, A.INOUT_CODE

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<select id="otr300skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
	/* otr300skrv.Cotr300skrv[fnOtr300QStd] Query01 ITEM	*/
	BEGIN
		 SET NOCOUNT ON
		 SET ARITHABORT ON

         DECLARE @COMP_CODE         NVARCHAR(8)
               , @DIV_CODE          NVARCHAR(8)
               , @FR_INOUT_DATE     NVARCHAR(8)
               , @TO_INOUT_DATE     NVARCHAR(8)
               , @INOUT_PRSN        NVARCHAR(10)
               , @WH_CODE           NVARCHAR(8)
               , @INOUT_CODE_TYPE   NVARCHAR(1)
               , @INOUT_CODE        NVARCHAR(8)
               , @INOUT_TYPE_DETAIL NVARCHAR(3)
               , @ITEM_ACCOUNT      NVARCHAR(1)
               , @ITEM_CODE         NVARCHAR(20)
               , @USER_ID           NVARCHAR(100)

         SET @COMP_CODE         = #{S_COMP_CODE}
         SET @DIV_CODE          = #{DIV_CODE}
         SET @FR_INOUT_DATE     = #{FR_INOUT_DATE}
         SET @TO_INOUT_DATE     = #{TO_INOUT_DATE}
         SET @INOUT_PRSN        = #{INOUT_PRSN}
         SET @WH_CODE           = #{WH_CODE}
         SET @INOUT_CODE_TYPE   = #{INOUT_CODE_TYPE}
         SET @INOUT_CODE        = #{INOUT_CODE}
         SET @INOUT_TYPE_DETAIL = #{INOUT_TYPE_DETAIL}
         SET @ITEM_ACCOUNT      = #{ITEM_ACCOUNT}
         SET @ITEM_CODE         = #{ITEM_CODE}
         SET @USER_ID           = #{S_USER_ID}

          SELECT J.CODE_NAME                                             	AS INOUT_CODE_TYPE
              , A.INOUT_CODE                                                AS INOUT_CODE
              , uniLITE.fnCustNameComp(A.COMP_CODE, @USER_ID, A.INOUT_CODE) AS CUSTOM_NAME
              , CASE A.INOUT_DATE
                     WHEN '' THEN ''
                     ELSE UNILITE.fnGetUserdate(A.COMP_CODE, A.INOUT_DATE)
                 END                                                        AS INOUT_DATE
              , A.ITEM_CODE                                                 AS ITEM_CODE
              , uniLITE.fnItemNameComp(K.COMP_CODE, @USER_ID,K.ITEM_CODE)   AS ITEM_NAME
              , B.SPEC                                                      AS SPEC
              , A.INOUT_Q                                                   AS INOUT_Q
              , B.STOCK_UNIT                                                AS STOCK_UNIT
              , E.TREE_NAME                                                 AS WH_CODE
              , ISNULL(M1.CODE_NAME,'')                                  	AS INOUT_PRSN
              , G.CODE_NAME                                             	AS INOUT_METH
              , H.CODE_NAME                                              	AS INOUT_TYPE_DETAIL
              , A.INOUT_NUM                                                 AS INOUT_NUM
              , I.CODE_NAME                                              	AS DIV_CODE
              , A.INOUT_I                                                   AS INOUT_I
              , A.REMARK                                                    AS REMARK
              , A.PROJECT_NO                                                AS PROJECT_NO
              , A.ORDER_NUM                                                 AS ORDER_NUM
              , A.ORDER_SEQ                                                 AS ORDER_SEQ
           FROM BTR100T AS A WITH (NOLOCK)
                            LEFT OUTER JOIN BSA100T As I  WITH (NOLOCK) ON I.COMP_CODE  = A.COMP_CODE
                                                                       AND I.MAIN_CODE  = N'B001'
                                                                       AND I.SUB_CODE   = A.DIV_CODE
                            LEFT OUTER JOIN BPR100T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                                       AND B.ITEM_CODE  = A.ITEM_CODE
                                 INNER JOIN BSA220T As E  WITH (NOLOCK) ON E.COMP_CODE  = A.COMP_CODE
                                                                       AND E.TYPE_LEVEL = A.DIV_CODE
                                                                       AND E.TREE_CODE  = A.WH_CODE
                                 INNER JOIN BSA100T As G  WITH (NOLOCK) ON G.COMP_CODE  = A.COMP_CODE
                                                                       AND G.MAIN_CODE  = N'B036'
                                                                       AND G.SUB_CODE   = A.INOUT_METH
                                 INNER JOIN BSA100T As H  WITH (NOLOCK) ON H.COMP_CODE  = A.COMP_CODE
                                                                       AND H.MAIN_CODE  = N'M104'
                                                                       AND H.SUB_CODE   = A.INOUT_TYPE_DETAIL
                                 INNER JOIN BSA100T As J  WITH (NOLOCK) ON J.COMP_CODE  = A.COMP_CODE
                                                                       AND J.MAIN_CODE  = N'B005'
                                                                       AND J.SUB_CODE   = A.INOUT_CODE_TYPE
                                 INNER JOIN BPR200T AS K  WITH (NOLOCK) ON K.COMP_CODE  = A.COMP_CODE
                                                                       AND K.ITEM_CODE  = A.ITEM_CODE
                                                                       AND K.DIV_CODE   = A.DIV_CODE
                            LEFT OUTER JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                                       AND M1.MAIN_CODE = N'B024'
                                                                       AND M1.SUB_CODE  = A.INOUT_PRSN
          WHERE A.INOUT_TYPE      = '2'
            AND A.INOUT_CODE_TYPE = '5'
            AND A.COMP_CODE       = @COMP_CODE
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE		  = @DIV_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
			AND A.INOUT_DATE  &gt;= @FR_INOUT_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
			AND A.INOUT_DATE  &lt;= @TO_INOUT_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
			AND A.INOUT_PRSN	  = @INOUT_PRSN
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND A.WH_CODE		  = @WH_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
			AND A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE
		</if>
		
		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE) and @foren.Ognl@isNotEmpty(INOUT_NAME)">
			AND A.INOUT_CODE = @INOUT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE) and @foren.Ognl@isEmpty(INOUT_NAME)">
			AND A.INOUT_CODE LIKE @INOUT_CODE + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(INOUT_CODE) and @foren.Ognl@isNotEmpty(INOUT_NAME)">
			AND	(uniLITE.fnCustNameComp(A.COMP_CODE, @USER_ID, A.INOUT_CODE) LIKE N'%' + #{INOUT_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
		
		<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
			AND A.INOUT_TYPE_DETAIL	 = @INOUT_TYPE_DETAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND K.ITEM_ACCOUNT	     = @ITEM_ACCOUNT
		</if>

		<!--2021.08 표준화 작업 Start-->
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND A.ITEM_CODE = @ITEM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
			AND A.ITEM_CODE LIKE @ITEM_CODE + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND	(uniLITE.fnItemNameComp(K.COMP_CODE, @USER_ID,K.ITEM_CODE) LIKE N'%' + #{ITEM_NAME} + N'%')
		</if>
		<!--2021.08 표준화 작업 End-->
		
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
			--202002118 추가: 조회조건 "발주번호" 추가
			AND A.ORDER_NUM	      LIKE #{ORDER_NUM} + '%'
		</if>
	    ORDER BY A.INOUT_CODE_TYPE, A.INOUT_CODE, A.INOUT_DATE, A.ITEM_CODE

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>
</mapper>