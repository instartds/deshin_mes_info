<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="otr111ukrvServiceImpl">
	<select id="otr111ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">		/* 조회 */

	/* --otr111ukrv.Cotr111ukrv[fnOtr111QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT
			   A.INOUT_NUM
			 , A.INOUT_SEQ
			 , A.INOUT_TYPE
			 , A.INOUT_METH
			 , A.INOUT_TYPE_DETAIL
			 , A.INOUT_CODE_TYPE
			 , A.INOUT_CODE
			 , (CASE WHEN ISNULL(C2.CUSTOM_CODE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(C2.CUSTOM_CODE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(C2.CUSTOM_CODE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(C2.CUSTOM_CODE, 7, 2))
	             END)                                           AS CUSTOM_CODE
			 , A.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
					WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE                     C1.ITEM_NAME
			   END                                                                     AS ITEM_NAME
			 , C1.SPEC
			 , C1.STOCK_UNIT
			 , A.WH_CODE
			 , C3.TREE_NAME                                                            AS WH_NAME
			 , A.WH_CELL_CODE
			 , C4.WH_CELL_NAME
			 , A.LOT_NO
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ALLOC_Q, 0),      'M_FSET_QS')     AS ALLOC_Q
	         , uniLITE.fnFormat(@CompCode,
	                   ISNULL(B.ALLOC_Q, 0)-ISNULL(C.INOUT_Q, 0),     'M_FSET_QS')     AS NOT_OUTSTOCK_Q
	         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0),      'M_FSET_QS')     AS INOUT_Q
			 , A.ITEM_STATUS
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0),      'M_FSET_QS')     AS ORIGINAL_Q
			 ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
			 , uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q, 0), 'M_FSET_QS')     AS GOOD_STOCK_Q
			 , uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q, 0),  'M_FSET_QS')     AS BAD_STOCK_Q
			 , A.INOUT_DATE
			 , A.COMP_CODE
			 , A.DIV_CODE
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0),      'M_FSET_PS')     AS INOUT_P
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0),      'M_FSET_IS')     AS INOUT_I
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.EXPENSE_I, 0),    'M_FSET_IS')     AS EXPENSE_I
			 , A.MONEY_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_FOR_P, 0),  'M_FSET_PS')     AS INOUT_FOR_P
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_FOR_O, 0),  'M_FSET_OS')     AS INOUT_FOR_O
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.EXCHG_RATE_O, 0), 'M_FSET_OS')     AS EXCHG_RATE_O
			 , A.ORDER_TYPE
			 , A.ORDER_NUM
			 , A.ORDER_SEQ
			 , A.LC_NUM
			 , A.BL_NUM
			 , A.INOUT_PRSN
			 , A.BASIS_NUM
			 , A.BASIS_SEQ
			 , A.ACCOUNT_YNC
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0),    'M_FSET_QS')     AS ACCOUNT_Q
			 , A.CREATE_LOC
			 , A.SALE_C_YN
			 , A.SALE_C_DATE
			 , A.SALE_C_REMARK
			 , A.GRANT_TYPE
			 , A.REMARK
			 , A.PROJECT_NO
			 , A.SALE_DIV_CODE
			 , A.SALE_CUSTOM_CODE
			 , A.BILL_TYPE
			 , A.SALE_TYPE
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 , C5.ITEM_ACCOUNT
			 , C1.STOCK_CARE_YN
			 , C5.LOT_YN
			 , B.ORDER_ITEM_CODE
			 , (SELECT TOP 1 ITEM_NAME FROM BPR100T WITH (NOLOCK) WHERE COMP_CODE=B.COMP_CODE AND ITEM_CODE=B.ORDER_ITEM_CODE) AS ORDER_ITEM_NAME
			 , A.S_GUBUN_KD
		FROM              BTR100T A  WITH (NOLOCK)
			   LEFT  JOIN MCL200T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
												  AND B.DIV_CODE     = A.DIV_CODE
												  AND B.CUSTOM_CODE  = A.INOUT_CODE
												  AND B.ORDER_NUM    = A.ORDER_NUM
												  AND B.ORDER_SEQ    = A.ORDER_SEQ
												  AND B.ITEM_CODE    = A.ITEM_CODE
			   LEFT  JOIN (
						  SELECT COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ, ITEM_CODE
							   , SUM(ISNULL(INOUT_Q, 0))    AS INOUT_Q
						  FROM   BTR100T WITH (NOLOCK)
						  WHERE  COMP_CODE  = @CompCode
						  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
						  AND    DIV_CODE   = #{DIV_CODE}
						  </if>
						  AND    CREATE_LOC = N'2'
						  AND    INOUT_TYPE = N'2'
						  GROUP BY COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ, ITEM_CODE
						  ) C ON C.COMP_CODE   = B.COMP_CODE
							 AND C.DIV_CODE    = B.DIV_CODE
							 AND C.INOUT_CODE  = B.CUSTOM_CODE
							 AND C.ORDER_NUM   = B.ORDER_NUM
							 AND C.ORDER_SEQ   = B.ORDER_SEQ
							 AND C.ITEM_CODE   = B.ITEM_CODE
			   LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
												  AND D.DIV_CODE      = A.DIV_CODE
												  AND D.WH_CODE       = A.WH_CODE
												  AND D.ITEM_CODE     = A.ITEM_CODE
			   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
												  AND C1.ITEM_CODE    = A.ITEM_CODE
			   INNER JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
												  AND C2.CUSTOM_CODE  = A.INOUT_CODE
			   LEFT  JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
												  AND C3.TYPE_LEVEL   = A.DIV_CODE
												  AND C3.TREE_CODE    = A.WH_CODE
			   LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
												  AND C4.DIV_CODE     = A.DIV_CODE
												  AND C4.WH_CODE      = A.WH_CODE
												  AND C4.WH_CELL_CODE = A.WH_CELL_CODE
			   LEFT  JOIN BPR200T C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
												  AND C5.DIV_CODE     = A.DIV_CODE
												  AND C5.ITEM_CODE    = A.ITEM_CODE
		WHERE  A.COMP_CODE       = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND    A.DIV_CODE        = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		AND    A.INOUT_NUM       = #{INOUT_NUM}
		</if>
		AND    A.CREATE_LOC      = N'2'
		AND    A.INOUT_CODE_TYPE = N'5'

		ORDER BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>
	<select id="otr111ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		/* 검색 */

   	/*otr111ukrv.Cotr111ukrv[fnOtr111QPop] Query01*/
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT
	         (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
	             END)                                           AS INOUT_DATE
			 , A.INOUT_CODE
			 ,MAX(CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
	                WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
	                                    ELSE C2.CUSTOM_NAME
	                  END)              AS CUSTOM_NAME
			 , C1.TREE_NAME                                                        AS WH_CODE
			 , A.INOUT_PRSN                                                        AS INOUT_PRSN
			 , A.INOUT_NUM
			 , A.LOT_NO
		FROM              BTR100T A  WITH (NOLOCK)
			   INNER JOIN BSA220T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
												  AND C1.TYPE_LEVEL  = A.DIV_CODE
												  AND C1.TREE_CODE   = A.WH_CODE
			   INNER JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
												  AND C2.CUSTOM_CODE = A.INOUT_CODE
		WHERE  A.COMP_CODE       	= @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND    A.DIV_CODE        	= #{DIV_CODE}
		</if>
		AND    A.INOUT_TYPE      	= N'2'

		AND		A.INOUT_CODE_TYPE = N'5'

	/*  <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
	    AND    A.INOUT_CODE_TYPE 	= #{INOUT_CODE_TYPE}
		</if>	*/
	    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		AND    A.INOUT_DATE     &gt;= #{FR_INOUT_DATE}
		</if>
	    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		AND    A.INOUT_DATE     &lt;= #{TO_INOUT_DATE}
		</if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		AND    A.WH_CODE         	= #{WH_CODE}
		</if>
	    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		AND    A.INOUT_PRSN     	= #{INOUT_PRSN}
		</if>
	    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
		AND    A.INOUT_CODE   	 LIKE #{INOUT_CODE} + '%'
		</if>
		GROUP BY A.COMP_CODE,  A.INOUT_DATE, A.INOUT_CODE, C1.TREE_NAME, A.WH_CODE
			   , A.INOUT_PRSN, A.INOUT_PRSN, A.INOUT_NUM,  A.LOT_NO    , C2.CUSTOM_NAME  , C2.CUSTOM_NAME1   , C2.CUSTOM_NAME2

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>
	<select id="otr111ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">   	/* 예약참조 */

   	/* otr111ukrv.Cotr111ukrv[fnOtr100QRef] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT CAST(0 AS BIT)                                                       AS GUBUN
	         , A.ORDER_NUM
--	         , A.ORDER_SEQ
	         , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	             END)                                                               AS ORDER_DATE
/*
	         , A.ORDER_ITEM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	             END)                                                               AS ORDER_ITEM_NAME
*/
	         , A.ITEM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                                     ELSE C2.ITEM_NAME
	             END)                                                              AS ITEM_NAME
	         , C2.SPEC
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.ALLOC_Q, 0)),    'M_FSET_QS')   AS ALLOC_Q
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.OUTSTOCK_Q, 0)), 'M_FSET_QS')   AS OUTSTOCK_Q
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.ALLOC_Q, 0)
	                                     - ISNULL(A.OUTSTOCK_Q, 0)), 'M_FSET_QS')   AS NOT_OUTSTOCK
	         , uniLITE.fnFormat(@CompCode, MAX(ISNULL(C5.AVERAGE_P, 0)), 'M_FSET_PS')   AS AVERAGE_P
	         , C2.STOCK_UNIT
	         , (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
	                 THEN C3.WH_CODE
	                 ELSE B.WCWH_CODE
	             END)                                                              AS WH_CODE
	         , uniLITE.fnFormat(@CompCode, ISNULL(C5.STOCK_Q, 0),   'M_FSET_QS')   AS STOCK_Q
	         , A.CUSTOM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
	                                     ELSE C4.CUSTOM_NAME
	             END)                                                               AS CUSTOM_NAME
	         , ISNULL(M1.SUB_CODE, '')                                              AS MONEY_UNIT
	         , A.COMP_CODE
	         , A.DIV_CODE
	         , A.GRANT_TYPE
	         , A.REMARK
	         , A.PROJECT_NO
	         , C6.STOCK_CARE_YN
	         , C3.LOT_YN
	         , ISNULL(B.S_GUBUN_KD,'1') AS S_GUBUN_KD
	    FROM              MCL200T   A  WITH (NOLOCK)
	           LEFT  JOIN MPO100TV4_KD B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                AND B.DIV_CODE     = A.DIV_CODE
	                                                AND B.CUSTOM_CODE  = A.CUSTOM_CODE
	                                                AND B.ORDER_NUM    = A.ORDER_NUM
	                                                AND B.ORDER_SEQ    = A.ORDER_SEQ
	           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.ITEM_CODE   = A.ORDER_ITEM_CODE
	           INNER JOIN BPR100T   C6 WITH (NOLOCK) ON C6.COMP_CODE   = A.COMP_CODE
	                                                AND C6.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
	                                                AND C2.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
	                                                AND C3.DIV_CODE    = A.DIV_CODE
	                                                AND C3.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BCM100T   C4 WITH (NOLOCK) ON C4.COMP_CODE   = A.COMP_CODE
	                                                AND C4.CUSTOM_CODE = A.CUSTOM_CODE
	           LEFT  JOIN BIV100T   C5 WITH (NOLOCK) ON C5.COMP_CODE   = A.COMP_CODE
	                                                AND C5.DIV_CODE    = A.DIV_CODE
	                                                AND C5.WH_CODE     = (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
	                                                                           THEN C3.WH_CODE
	                                                                           ELSE B.WCWH_CODE
	                                                                       END)
	                                                AND C5.ITEM_CODE   = A.ITEM_CODE
	           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = N'B004'
	                                                AND UPPER(ISNULL(LEFT(M1.REF_CODE1, 1), '')) = 'Y'
	     WHERE A.COMP_CODE          = @CompCode
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       AND A.DIV_CODE           = #{DIV_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	       AND A.CUSTOM_CODE        = #{CUSTOM_CODE}
	     </if>
	       AND A.ALLOC_Q         &gt; A.OUTSTOCK_Q
	       AND B.AGREE_STATUS       = N'2'
	       --20200109 주석 AND A.CONTROL_STATUS    NOT IN ('8', '9')
	       AND A.CONTROL_STATUS    != N'8'
	     <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		   AND    A.ORDER_DATE     &gt;= #{FR_INOUT_DATE}
		 </if>
	     <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		   AND    A.ORDER_DATE     &lt;= #{TO_INOUT_DATE}
		 </if>
	     <if test="@foren.Ognl@isNotEmpty(ORDER_ITEM_CODE)">
	       AND A.ORDER_ITEM_CODE LIKE #{ORDER_ITEM_CODE} + '%'
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(ORDER_ITEM_NAME)">
	       AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	             END)            LIKE #{ORDER_ITEM_NAME} + '%'
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       AND A.ITEM_CODE       LIKE #{ITEM_CODE} + '%'
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	       AND (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                 					 ELSE C2.ITEM_NAME
	             END)            LIKE #{ITEM_NAME} +'%'
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SPEC)">
	       AND C2.SPEC LIKE #{SPEC} + '%'
	     </if>
	     <!-- 20200109 로직 추가 -->
	     <if test="CLOSING_YN == &quot;Y&quot;">
	       AND A.CONTROL_STATUS    != N'9'
	     </if>
	      GROUP BY A.ORDER_NUM, A.ORDER_DATE, A.ITEM_CODE, C2.ITEM_NAME, C2.ITEM_NAME1, C2.ITEM_NAME2, C2.SPEC, C2.STOCK_UNIT
	         , (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
	                 THEN C3.WH_CODE
	                 ELSE B.WCWH_CODE
	             END)
	         , ISNULL(C5.STOCK_Q, 0)
	         , A.CUSTOM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
	                                     ELSE C4.CUSTOM_NAME
	             END)
	         , ISNULL(M1.SUB_CODE, '')
	         , A.COMP_CODE
	         , A.DIV_CODE
	         , A.GRANT_TYPE
	         , A.REMARK
	         , A.PROJECT_NO
	         , C6.STOCK_CARE_YN
	         , C3.LOT_YN
	         , ISNULL(B.S_GUBUN_KD,'1')
	     ORDER BY A.ORDER_DATE, A.ORDER_NUM, A.ITEM_CODE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>
	<select id="otr111ukrvServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		/* 반품가능 예약참조 */

	/* otr111ukrv.Cotr111ukrv[fnOtr100QRe1] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT CAST(0 AS BIT)                                                       AS GUBUN
	         , A.ORDER_NUM
	         , A.ORDER_SEQ
	         , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	             END)                                                               AS ORDER_DATE
	         , A.ORDER_ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE                     C1.ITEM_NAME
	           END                                                                  AS ORDER_ITEM_NAME
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C2.ITEM_NAME
	                WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                ELSE                     C2.ITEM_NAME
	           END                                                                  AS ITEM_NAME
	         , C2.SPEC
	         , CASE WHEN ISNULL(B.WKORD_NUM, '') = '' THEN C3.WH_CODE
	                ELSE B.WCWH_CODE
	           END                                                                  AS WH_CODE
	         , uniLITE.fnFormat(@CompCode, ISNULL(A.ALLOC_Q, 0),    'M_FSET_QS')    AS ALLOC_Q
	         , uniLITE.fnFormat(@CompCode, ISNULL(A.OUTSTOCK_Q, 0) * (-1),
	                                                                 'M_FSET_QS')   AS NOTOUTSTOCK_Q
	         , uniLITE.fnFormat(@CompCode, ISNULL(A.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS OUTSTOCK_Q
	         , uniLITE.fnFormat(@CompCode, ISNULL(A.ALLOC_Q, 0)
	                                      - ISNULL(A.OUTSTOCK_Q, 0), 'M_FSET_QS')   AS NOT_OUTSTOCK
	         , uniLITE.fnFormat(@CompCode, ISNULL(C5.AVERAGE_P, 0), 'M_FSET_PS')    AS AVERAGE_P
	         , C2.STOCK_UNIT
	         , uniLITE.fnFormat(@CompCode, ISNULL(C5.STOCK_Q, 0),   'M_FSET_QS')    AS STOCK_Q
	         , A.CUSTOM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
	                                     ELSE C4.CUSTOM_NAME
	             END)                AS CUSTOM_NAME
	         , ISNULL(M1.SUB_CODE, '')                                              AS MONEY_UNIT
	         , A.COMP_CODE
	         , A.DIV_CODE
	         , A.GRANT_TYPE
	         , A.REMARK
	         , A.PROJECT_NO
	         , C6.STOCK_CARE_YN
	         , C3.LOT_YN
	    FROM              MCL200T   A  WITH (NOLOCK)
	           LEFT  JOIN MPO100TV4 B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                AND B.DIV_CODE     = A.DIV_CODE
	                                                AND B.CUSTOM_CODE  = A.CUSTOM_CODE
	                                                AND B.ORDER_NUM    = A.ORDER_NUM
	                                                AND B.ORDER_SEQ    = A.ORDER_SEQ
	                                                AND B.AGREE_STATUS = N'2'
	           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.ITEM_CODE   = A.ORDER_ITEM_CODE
	           INNER JOIN BPR100T   C6 WITH (NOLOCK) ON C6.COMP_CODE   = A.COMP_CODE
	                                                AND C6.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
	                                                AND C2.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
	                                                AND C3.DIV_CODE    = A.DIV_CODE
	                                                AND C3.ITEM_CODE   = A.ITEM_CODE
	           INNER JOIN BCM100T   C4 WITH (NOLOCK) ON C4.COMP_CODE   = A.COMP_CODE
	                                                AND C4.CUSTOM_CODE = A.CUSTOM_CODE
	           LEFT  JOIN BIV100T   C5 WITH (NOLOCK) ON C5.COMP_CODE   = A.COMP_CODE
	                                                AND C5.DIV_CODE    = A.DIV_CODE
	                                                AND C5.WH_CODE     = (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
	                                                                           THEN C3.WH_CODE
	                                                                           ELSE B.WCWH_CODE
	                                                                       END)
	                                                AND C5.ITEM_CODE   = A.ITEM_CODE
	           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = N'B004'
	                                                AND UPPER(ISNULL(LEFT(M1.REF_CODE1, 1), '')) = 'Y'
	     WHERE A.COMP_CODE          = @CompCode
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       AND A.DIV_CODE           = #{DIV_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	       AND A.CUSTOM_CODE        = #{CUSTOM_CODE}
	     </if>
	       AND A.OUTSTOCK_Q      &gt; 0
	     <if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
	       AND A.ORDER_DATE     &gt;= #{FR_ORDER_DATE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
	       AND A.ORDER_DATE     &lt;= #{TO_ORDER_DATE}
	     </if>
	     ORDER BY A.ORDER_DATE, A.ORDER_ITEM_CODE, A.ITEM_CODE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<insert id="otr111ukrvServiceImpl.insertLogMaster" parameterType="Map">		                    /* 저장쿼리 */
	INSERT INTO L_BTR100T
	     ( KEY_VALUE
	     , OPR_FLAG
	     , INOUT_NUM
         , INOUT_SEQ
         , INOUT_TYPE
         , INOUT_PRSN
         , INOUT_METH
         , INOUT_TYPE_DETAIL
         , INOUT_CODE_TYPE
         , INOUT_CODE
         , ITEM_CODE
         , WH_CODE
         , WH_CELL_CODE
         , LOT_NO
         , INOUT_Q
         , ITEM_STATUS
         , INOUT_DATE
         , COMP_CODE
         , DIV_CODE
         , INOUT_P
         , INOUT_I
         , EXPENSE_I
         , MONEY_UNIT
         , ORDER_TYPE
         , ACCOUNT_Q
         , CREATE_LOC
         , SALE_C_YN
         , SALE_DIV_CODE
         , SALE_CUSTOM_CODE
         , BILL_TYPE
         , SALE_TYPE
         , REMARK
         , ORDER_NUM
         , ORDER_SEQ
         , PROJECT_NO
         , S_GUBUN_KD
         , INSERT_DB_USER
         , INSERT_DB_TIME
         , UPDATE_DB_USER
         , UPDATE_DB_TIME)
	VALUES
	     ( #{KEY_VALUE}
	     , #{OPR_FLAG}
	     , #{INOUT_NUM}
	     , #{INOUT_SEQ}
	     , #{INOUT_TYPE}
	     , #{INOUT_PRSN}
	     , #{INOUT_METH}
	     , #{INOUT_TYPE_DETAIL}
	     , #{INOUT_CODE_TYPE}
	     , #{INOUT_CODE}
	     , #{ITEM_CODE}
	     , #{WH_CODE}
         , #{WH_CELL_CODE}
	     , #{LOT_NO}
	     , #{INOUT_Q}
	     , #{ITEM_STATUS}
	     , #{INOUT_DATE}
	     , #{S_COMP_CODE}
	     , #{DIV_CODE}
	     , #{INOUT_P}
	     , #{INOUT_I}
	     , #{EXPENSE_I}
	     , #{MONEY_UNIT}
	     , #{ORDER_TYPE}
	     , #{ACCOUNT_Q}
	     , #{CREATE_LOC}
	     , #{SALE_C_YN}
	     , #{SALE_DIV_CODE}
	     , #{SALE_CUSTOM_CODE}
	     , #{BILL_TYPE}
	     , #{SALE_TYPE}
	     , #{REMARK}
	     , #{ORDER_NUM}
         , #{ORDER_SEQ}
	     , #{PROJECT_NO}
       , #{S_GUBUN_KD}
	     , #{S_USER_ID}
	     , GETDATE()
	     , #{S_USER_ID}
	     , GETDATE())
	</insert>

	<update id="spOtr111ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_MATRL_OTR111UKRV (
		#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{INOUT_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
    </update>
    <select id="otr111ukrvServiceImpl.selectProductNumInWh" parameterType="Map" resultType="rMap">
        SELECT ISNULL(MAX(STOCK_Q)     , 0) STOCK_Q
             , ISNULL(MAX(AVERAGE_P)   , 0) AVERAGE_P
             , ISNULL(MAX(GOOD_STOCK_Q), 0) GOOD_STOCK_Q
             , ISNULL(MAX(BAD_STOCK_Q) , 0) BAD_STOCK_Q
          FROM BIV100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND WH_CODE   = #{WH_CODE}
           AND ITEM_CODE = #{ITEM_CODE}
    </select>
</mapper>