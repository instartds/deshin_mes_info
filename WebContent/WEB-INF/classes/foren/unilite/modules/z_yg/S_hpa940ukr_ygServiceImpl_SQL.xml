<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hpa940ukr_ygServiceImpl">
	
	<select id="s_hpa940ukr_ygServiceImpl.selectByDivCode" parameterType="Map" resultType="rMap">
		--UBsaExKrv.CBsaExSKr[fnRecordList] Query16           
		SELECT DIV_NAME                       
		  FROM BOR120T WITH (NOLOCK)          
		 WHERE COMP_CODE = #{S_COMP_CODE}
			AND	DIV_CODE = #{DIV_CODE}
		 ORDER BY DIV_CODE
	</select>
	<select id="s_hpa940ukr_ygServiceImpl.selectByPostCode" parameterType="Map" resultType="rMap">
		--UBsaExKrv.CBsaExSKr[fnRecordList] Query01              
		SELECT CODE_NAME
		  FROM BSA100T WITH (NOLOCK)             
		 WHERE COMP_CODE = #{S_COMP_CODE}  
		   AND MAIN_CODE = 'H005'
		   AND SUB_CODE = #{POST_CODE}                 
	</select>

	<select id="s_hpa940ukr_ygServiceImpl.selectList" parameterType="Map" resultType="rMap">		

		SELECT CAST(1 AS BIT) AS GUBN                               
		     , PAY_YYYYMM                                           
		     , SUPP_TYPE                                            
		     , A.DIV_CODE                                           
		     , A.DEPT_CODE                                          
		     , A.DEPT_NAME                                          
		     , A.POST_CODE                                          
		     , NAME                                                 
		     , A.PERSON_NUMB                                        
		     , EMAIL_ADDR                                           
		  FROM HPA600T A INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE AND A.PERSON_NUMB = B.PERSON_NUMB     
		 WHERE B.COMP_CODE     	= 	#{S_COMP_CODE}
		   	AND B.EMAIL_SEND_YN = 	'Y'
		  	AND A.PAY_YYYYMM    = 	#{PAY_YYYYMM}                             
			AND A.SUPP_TYPE  = #{SUPP_TYPE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
			AND A.DIV_CODE   = #{DIV_CODE}
		</if>
	   	<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)"> 
	  		AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE1)"> 
	  		AND A.DEPT_CODE &gt;= #{DEPT_CODE1}
	  	</if>
	  	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)"> 
	  		AND A.DEPT_CODE &lt;= #{DEPT_CODE2}
	  	</if>
		 ORDER BY A.DEPT_CODE, A.POST_CODE, B.NAME, A.PERSON_NUMB  

	</select>
	
	<select id="s_hpa940ukr_ygServiceImpl.selectEmailList" parameterType="Map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygEmailModel">		

		SELECT A.PERSON_NUMB                                     
		     , A.DEPT_CODE                                       
		     , A.DEPT_NAME                                       
		     , B.NAME                                            
		     , (SELECT CODE_NAME                                 
		          FROM BSA100T                                   
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND MAIN_CODE = 'H005'                        
		           AND SUB_CODE  = A.POST_CODE ) AS POST_NAME    
		     , (SELECT ISNULL(CUSTOM_NAME,'')                    
		          FROM BCM100T                                   
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND CUSTOM_CODE = B.BANK_CODE1) AS BANK_NAME  
		     , unilite.fnCipherDecrypt(B.BANK_ACCOUNT1, 'RB') AS BANK_ACCOUNT1                                  
		     , replace(convert(varchar(30), cast(SUPP_TOTAL_I   as money), 1), '.00', '') SUPP_TOTAL_I                                      
		     , replace(convert(varchar(30), cast(DED_TOTAL_I as money), 1), '.00', '') DED_TOTAL_I                                       
		     , replace(convert(varchar(30), cast(REAL_AMOUNT_I as money), 1), '.00', '') REAL_AMOUNT_I                                        
		     , C.WEEK_DAY                                        
		     ,  floor(C.WORK_DAY)   WORK_DAY                                   
		     ,floor( C.WORK_TIME )    WORK_TIME                                                         
		     , A.YEAR_CRT                                        
		     , A.YEAR_ADD                                        
		     , MONTH_CRT                                         
		     , MON_YEAR_USE                                      
		     , MON_YEAR_PROV                                     
		     , A.BONUS_STD_I                                     
		     , A.BONUS_RATE                                      
		     , A.BONUS_TOTAL_I                                   
		     , SUBSTRING(uniLITE.fnCipherDecrypt(REPRE_NUM,''),7,7) AS EMAIL_PWD 
		  FROM HPA600T A                                         
		               INNER JOIN HUM100T B                      
		                       ON A.COMP_CODE   = B.COMP_CODE    
		                      AND A.PERSON_NUMB = B.PERSON_NUMB  
		          LEFT OUTER JOIN HAT300T C                      
		                       ON A.COMP_CODE   = C.COMP_CODE    
		                      AND A.PAY_YYYYMM  = C.DUTY_YYYYMM  
		                      AND A.PERSON_NUMB = C.PERSON_NUMB  
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM)">  
		   AND A.PAY_YYYYMM  = #{PAY_YYYYMM}              
		 </if>   
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		   AND A.SUPP_TYPE   = #{SUPP_TYPE}             

	</select>
	
	
	<select id="s_hpa940ukr_ygServiceImpl.selectSmtpInfo" parameterType="String" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygSmtpModel">		
		
        SELECT SEND_METHOD          
             , SERVER_NAME          
             , SERVER_PROT          
             , PICKUP_FOLDER_PATH   
             , SEND_USER_NAME       
             , SEND_PASSWORD        
             , CONN_TIMEOUT         
             , SSL_USE_YN           
          FROM unilite.HBS240T               
         WHERE COMP_CODE    = #{S_COMP_CODE}

	</select>
	
	<select id="s_hpa940ukr_ygServiceImpl.selectYearInfo" parameterType="map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygYearModel">		
		
        SELECT YEAR_SAVE        --연차                                     
		     , YEAR_BONUS_I     --근속가산                                     
		     , MONTH_NUM      
             , MONTH_PROV       --월차생성                                            
		     , YEAR_USE + MONTH_USE AS YEAR_USE                     
		     , ((YEAR_SAVE + YEAR_BONUS_I - YEAR_USE - YEAR_PROV) + (MONTH_NUM - MONTH_USE- MONTH_PROV)) YEAR_PROV                                           
		  FROM HAT700T                                              
		 WHERE COMP_CODE                    = #{S_COMP_CODE}
		   AND LEFT(DUTY_YYYYMMDDFR_USE,6) &lt;= #{PAY_YYYYMM}   
		   AND LEFT(DUTY_YYYYMMDDTO_USE,6) &gt;= #{PAY_YYYYMM}
		   AND PERSON_NUMB = #{PERSON_NUMB}

	</select>
	
	<select id="s_hpa940ukr_ygServiceImpl.selectWorkInfo" parameterType="map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygWorkModel">		
		--s_hpa940ukr_ygServiceImpl.selectWorkInfo
        SELECT PERSON_NUMB 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'51' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE0 
		    , N'연장근무' AS DUTY_NAME0 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'52' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE1 
		    , N'야간근무' AS DUTY_NAME1 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'53' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE2 
		    , N'휴일정상' AS DUTY_NAME2 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'54' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE3 
		    , N'휴일연장' AS DUTY_NAME3 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'55' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE4 
		    , N'휴일야간' AS DUTY_NAME4 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'20' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE5 
		    , N'년차' AS DUTY_NAME5 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'11' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE6 
		    , N'결근' AS DUTY_NAME6 
		    , ISNULL(MAX(CASE WHEN DUTY_CODE = N'50' 
		                           THEN DUTY_NUM +  DUTY_TIME 
		                           ELSE 0 
		                  END),0) AS DUTY_CODE7 
		    , N'조기출근' AS DUTY_NAME7     , '' AS DUTY_CODE8 
		    , '' AS DUTY_NAME8 
		
		  FROM HAT200T                            
		 WHERE COMP_CODE   = #{S_COMP_CODE}  
		   AND DUTY_YYYYMM = #{PAY_YYYYMM}  
		   AND PERSON_NUMB = #{PERSON_NUMB}  
		 GROUP BY DUTY_YYYYMM , PERSON_NUMB

	</select>
	

	
	<select id="s_hpa940ukr_ygServiceImpl.selectCode1" parameterType="map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygCode1Model">
        --s_hpa940ukr_ygServiceImpl.selectCode1
		select b.sub_code, b.code_name, sum(duty_num+duty_time) duty_code from 
		  ( select person_numb, duty_code, duty_num, duty_time, duty_yyyymm
		   FROM HAT200T                            
		 WHERE COMP_CODE   = #{S_COMP_CODE}  
		   AND DUTY_YYYYMM = #{PAY_YYYYMM}  
		   AND PERSON_NUMB = #{PERSON_NUMB}  
		   ) a inner join (
		    SELECT SUB_CODE  , CODE_NAME              
		  FROM unilite.BSA100T                
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H033'     
		   AND SUB_CODE &lt;&gt; '$'        
		   AND USE_YN    = 'Y'            
		 ) b on a.duty_code = b.sub_code
		  GROUP BY b.sub_code, b.code_name
		  --HAVING sum(duty_num+duty_time) &gt; 0 
	</select>
	
		<select id="s_hpa940ukr_ygServiceImpl.selectCode2" parameterType="map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygCode2Model">
		--s_hpa940ukr_ygServiceImpl.selectCode2
        select b.wages_code, b.wages_name,
				replace(convert(varchar(30), cast(sum(a.amount_i) as money), 1), '.00', '') amt
		  from 
			(SELECT *
			          FROM HPA300T                             
			         WHERE COMP_CODE   = #{S_COMP_CODE}   
			           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
			           AND PERSON_NUMB = #{PERSON_NUMB}   
			           AND SUPP_TYPE   = #{SUPP_TYPE}     
			
			)a  inner join (
			SELECT  WAGES_CODE         
			     , WAGES_NAME                
			  FROM unilite.HBS300T                   
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND USE_YN    = 'Y'
			 )b on  a.wages_code = b.wages_code
			 group by b.wages_code, b.wages_name
			 --having sum(amount_i) &gt; 0 
	</select>
	
	<select id="s_hpa940ukr_ygServiceImpl.selectCode3" parameterType="map" resultType="foren.unilite.modules.z_yg.S_Hpa940ukr_ygCode3Model">
		--s_hpa940ukr_ygServiceImpl.selectCode3
        select 
				b.sub_code, 
				b.code_name, 
				replace(convert(varchar(30), cast(sum(a.ded_amount_i) as money), 1), '.00', '') amt
			from
					(
						select * 
						from unilite.HPA400T
						 WHERE COMP_CODE   = #{S_COMP_CODE}   
				           AND PAY_YYYYMM  = #{PAY_YYYYMM}    
				           AND PERSON_NUMB = #{PERSON_NUMB}   
				           AND SUPP_TYPE   = #{SUPP_TYPE}     
					) a inner join 
					(
						SELECT SUB_CODE   
							 , CODE_NAME   
						  FROM unilite.BSA100T            
						 WHERE COMP_CODE = #{S_COMP_CODE}
						   AND MAIN_CODE = 'H034' 
						   AND SUB_CODE &lt;&gt; '$'    
						   AND USE_YN    = 'Y'
					  ) b on a.ded_code = b.sub_code 
			  group by b.sub_code, b.code_name
			  --having sum(a.ded_amount_i) > 0
	</select>
</mapper>