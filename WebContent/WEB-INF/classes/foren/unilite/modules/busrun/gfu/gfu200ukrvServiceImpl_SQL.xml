<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gfu200ukrvServiceImpl">
	<select id="gfu200ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gfu200ukrvServiceImpl.selectList */
		SELECT  A.DIV_CODE
				, A.DIV_CODE
				, A.SUPPLY_DATE
				, A.SUPPLY_TIME
				, A.OFFICE_CODE
				, A.VEHICLE_CODE
				, A.ROUTE_GROUP
				, A.ROUTE_CODE
				, R.ROUTE_NUM
				, V.VEHICLE_REGIST_NO
				, A.FILLING_TIME			    
				, A.GAS_AMOUNT				    
				, A.CORRECTION_FACTOR	    
				, A.AVG_USEAGE				    
				, A.UNIT_PRICE				    
				, A.MONEY_AMOUNT			    
				, A.TAX								    
				, A.TOTAL_AMOUNT
				, A.REMARK			
		FROM GFU200T A
		LEFT JOIN GRT100T R  ON R.COMP_CODE		= A.COMP_CODE
						    AND R.DIV_CODE		= A.DIV_CODE
						    AND R.ROUTE_CODE	= A.ROUTE_CODE
		LEFT JOIN GVE100T V  ON V.COMP_CODE 	= A.COMP_CODE
		                    AND V.DIV_CODE 		= A.DIV_CODE
		                    AND V.VEHICLE_CODE 	= A.VEHICLE_CODE 
		 WHERE A.COMP_CODE 			= #{S_COMP_CODE}
		   AND A.DIV_CODE 			= #{DIV_CODE}
		   AND A.SUPPLY_DATE 		&gt;= #{SUPPLY_DATE_FR}	
		   AND A.SUPPLY_DATE 		&lt;= #{SUPPLY_DATE_TO}	
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		   AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
		   AND A.VEHICLE_CODE = #{VEHICLE_CODE}
		  </if> 
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
		   AND V.VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
		  </if>
		 ORDER BY A.SUPPLY_DATE, A.SUPPLY_TIME, R.ROUTE_NUM, A.VEHICLE_CODE
	</select>	
	<insert id="gfu200ukrvServiceImpl.insert" parameterType="Map">
		
		INSERT INTO GFU200T
		(
			COMP_CODE
			, DIV_CODE              
	    	, SUPPLY_DATE				    
	    	, SUPPLY_TIME				    
			, ROUTE_CODE				    
			, VEHICLE_CODE			    
			  
			, OFFICE_CODE				    
			, ROUTE_GROUP				    
			, FILLING_TIME			    
			, GAS_AMOUNT				    
			, CORRECTION_FACTOR	    
			, AVG_USEAGE				    
			, UNIT_PRICE				    
			, MONEY_AMOUNT			    
			, TAX								    
			, TOTAL_AMOUNT			

			, REMARK
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME

		)
		VALUES
		(
			 #{S_COMP_CODE}
			, #{DIV_CODE}              
	    	, #{SUPPLY_DATE}				    
	    	, #{SUPPLY_TIME}				    
			, #{ROUTE_CODE}				    
			, #{VEHICLE_CODE}			    
			  
			, #{OFFICE_CODE}				    
			, #{ROUTE_GROUP}				    
			, #{FILLING_TIME}			    
			, #{GAS_AMOUNT}				    
			, #{CORRECTION_FACTOR}	    
			, #{AVG_USEAGE}				    
			, #{UNIT_PRICE}				    
			, #{MONEY_AMOUNT}			    
			, #{TAX}								    
			, #{TOTAL_AMOUNT}			

			, #{REMARK}
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
		)
	</insert>
	
	<update id="gfu200ukrvServiceImpl.deleteExcel" parameterType="Map">
		DELETE FROM GFU200T
		WHERE COMP_CODE 				= #{S_COMP_CODE}
		  AND DIV_CODE 					= #{DIV_CODE}
		  AND LEFT(SUPPLY_DATE,6) 	= LEFT(#{SUPPLY_DATE},6)	  
	</update>
	<insert id="gfu200ukrvServiceImpl.insertExcelGfu202t" parameterType="Map">
    	/*gfu200ukrvServiceImpl.insertExcelGFU202T*/
    	INSERT INTO GFU202T
		(	_EXCEL_JOBID, 		_EXCEL_ROWNUM, 		_EXCEL_HAS_ERROR, 							_EXCEL_ERROR_MSG, 
		  	SUPPLY_DATE,		SUPPLY_TIME,		FILLING_TIME,			GAS_AMOUNT,			CORRECTION_FACTOR,
			AVG_USEAGE,			UNIT_PRICE,			MONEY_AMOUNT,			TAX,				TOTAL_AMOUNT,
			VEHICLE_REGIST_NO,						ROUTE_NUM
		)
    	VALUES (
    		#{_EXCEL_JOBID}, 	#{_EXCEL_ROWNUM}, 	#{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, 		#{_EXCEL_ERROR,jdbcType=VARCHAR}, 
			REPLACE(#{SUPPLY_DATE},'-',''),			REPLACE(#{SUPPLY_TIME},':',''),				RIGHT(LEFT(#{FILLING_TIME},19),7),		#{GAS_AMOUNT},		#{CORRECTION_FACTOR},
			#{AVG_USEAGE},		#{UNIT_PRICE},		0,		0,				0,
			#{VEHICLE_REGIST_NO},					#{ROUTE_NUM}
    	)
    </insert>  
    <select id="gfu200ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*gfu200ukrvServiceImpl.selectExcelUploadSheet1*/
		
		SELECT A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , R1.OFFICE_CODE AS OFFICE_CODE
			 , A.SUPPLY_DATE
			 , A.SUPPLY_TIME
			 , V.VEHICLE_CODE
			 , V.VEHICLE_REGIST_NO
			 , R1.ROUTE_GROUP
			 , R.ROUTE_CODE
			 , A.ROUTE_NUM
			 
			 , A.FILLING_TIME
			 , A.GAS_AMOUNT
			 , A.CORRECTION_FACTOR
			 , A.AVG_USEAGE
			 , A.UNIT_PRICE
			 , A.MONEY_AMOUNT
			 , A.TAX
			 , A.TOTAL_AMOUNT
		  FROM GFU202T A
			  LEFT JOIN GRT100T R  ON  R.COMP_CODE = #{S_COMP_CODE}
							  	   AND R.DIV_CODE  = #{S_DIV_CODE}
							  	   AND R.ROUTE_NUM =  A.ROUTE_NUM 
			  LEFT JOIN GRT110T R1 ON  R1.COMP_CODE = #{S_COMP_CODE}
							  	   AND R1.DIV_CODE  = #{S_DIV_CODE}
							  	   AND R1.ROUTE_CODE =  R.ROUTE_CODE 
							  	   AND A.SUPPLY_DATE BETWEEN R1.ROUTE_START_DATE AND R1.ROUTE_END_DATE
			  LEFT JOIN GVE100T V  ON  V.COMP_CODE = #{S_COMP_CODE}
							  	   AND V.DIV_CODE  = #{S_DIV_CODE}
							  	   AND V.VEHICLE_REGIST_NO =  A.VEHICLE_REGIST_NO 
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>
	<update id="gfu200ukrvServiceImpl.excelValidate" >
		/*gfu200ukrvServiceImpl.excelValidate*/
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.ROUTE_CODE IS NULL OR ISNULL(A.ROUTE_NUM,'') = '' THEN 'Y' 
										  ELSE A._EXCEL_HAS_ERROR 
									 END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.ROUTE_CODE IS NULL OR ISNULL(A.ROUTE_NUM,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '노선 정보가 존재하지 않습니다. ' 
										   ELSE A._EXCEL_ERROR_MSG END)
		  FROM GFU202T A 
		  LEFT JOIN GRT100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  AND B.DIV_CODE  = #{S_DIV_CODE}
							  AND B.ROUTE_NUM =  A.ROUTE_NUM 
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		  
		  UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.VEHICLE_REGIST_NO IS NULL OR ISNULL(A.VEHICLE_REGIST_NO,'') = '' THEN 'Y' 
										  ELSE A._EXCEL_HAS_ERROR 
									 END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.VEHICLE_REGIST_NO IS NULL OR ISNULL(A.VEHICLE_REGIST_NO,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '차량 정보가 존재하지 않습니다. ' 
										   ELSE A._EXCEL_ERROR_MSG END)
		  FROM GFU202T A 
		  LEFT JOIN GVE100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  AND B.DIV_CODE  = #{S_DIV_CODE}
							  AND B.VEHICLE_REGIST_NO =  A.VEHICLE_REGIST_NO 
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		  
		  UPDATE A
		   SET MONEY_AMOUNT= GAS_AMOUNT*CORRECTION_FACTOR*AVG_USEAGE*UNIT_PRICE,			
		   		TAX = GAS_AMOUNT*CORRECTION_FACTOR*AVG_USEAGE*UNIT_PRICE/10,				
		   		TOTAL_AMOUNT =  GAS_AMOUNT*CORRECTION_FACTOR*AVG_USEAGE*UNIT_PRICE + (GAS_AMOUNT*CORRECTION_FACTOR*AVG_USEAGE*UNIT_PRICE/10)
		  FROM GFU202T A
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>