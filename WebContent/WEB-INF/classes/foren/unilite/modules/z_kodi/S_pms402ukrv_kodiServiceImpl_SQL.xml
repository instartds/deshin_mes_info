<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pms402ukrv_kodiServiceImpl">

<!-- 조회팝업창 조회 -->
	<select id="s_pms402ukrv_kodiServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드			*/
				  , @UserId			NVARCHAR(100)	/* 사용자ID			*/
				  , @LangType		NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat		NVARCHAR(10)	/* 날짜 포맷 유형 설정		*/

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT A.INSPEC_NUM
				 , A.INSPEC_SEQ
				 , (CASE WHEN ISNULL(A.INSPEC_DATE, '') = ''
					 THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INSPEC_DATE, 1, 4))
															 , 'MM'  , SUBSTRING(A.INSPEC_DATE, 5, 2))
															 , 'DD'  , SUBSTRING(A.INSPEC_DATE, 7, 2))
					 END)													AS INSPEC_DATE
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , A.INSPEC_Q
				 , A.GOOD_INSPEC_Q
				 , A.BAD_INSPEC_Q
				 , A.INSPEC_TYPE
				 , A.INSPEC_PRSN
				 , A.LOT_NO
				 , A.PRODT_NUM
				 , A.WKORD_NUM
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , C.PRODT_DATE
			  FROM QMS400T A WITH (NOLOCK)
			       INNER JOIN QMS300T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
				                                     AND A1.DIV_CODE  = A.DIV_CODE
													 AND A1.RECEIPT_NUM = A.RECEIPT_NUM
													 AND A1.RECEIPT_SEQ = A.RECEIPT_SEQ
			       INNER JOIN BPR100T B WITH (NOLOCK) ON A.ITEM_CODE = B.ITEM_CODE
					                                 AND A.COMP_CODE = B.COMP_CODE
				   INNER JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ
									, MIN(PRODT_DATE) AS PRODT_DATE
									, MIN(PRODT_NUM) AS PRODT_NUM
									, MIN(WKORD_NUM) AS WKORD_NUM
									, MIN(PROJECT_NO) AS PROJECT_NO
									, MIN(PJT_CODE) AS PJT_CODE
									, MIN(WORK_SHOP_CODE) AS WORK_SHOP_CODE
									, SUM(PRODT_Q) AS PRODT_Q
									, SUM(GOOD_PRODT_Q) AS GOOD_PRODT_Q
								 FROM PMR200T  WITH (NOLOCK)
							  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ) AS C ON A1.COMP_CODE     = C.COMP_CODE
															                                                 AND A1.DIV_CODE      = C.DIV_CODE
															                                                 AND A1.RECEIPT_NUM   = C.RECEIPT_NUM
															                                                 AND A1.RECEIPT_SEQ   = C.RECEIPT_SEQ
			       LEFT  JOIN BSA230T F WITH (NOLOCK) ON F.COMP_CODE = C.COMP_CODE
					                                 AND F.TREE_CODE = C.WORK_SHOP_CODE
                   INNER JOIN BPR200T Y WITH (NOLOCK) ON Y.COMP_CODE   = A.COMP_CODE
                                                     AND Y.DIV_CODE    = A.DIV_CODE
                                                     AND Y.ITEM_CODE   = A.ITEM_CODE
                                                     AND ISNULL(Y.INSPEC_YN, 'N') = 'Y'
			 WHERE A.COMP_CODE		= @CompCode
			   AND F.INSPEC_TYPE	= #{INSPEC_TYPE}

			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			 AND A.DIV_CODE	 = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
			 AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
			 AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			 AND A.ITEM_CODE	= #{ITEM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			 AND C.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
			 AND A.LOT_NO = #{LOT_NO}
			 </if>

			 ORDER BY A.INSPEC_NUM, A.INSPEC_SEQ

			 SET NOCOUNT OFF
			 SET ARITHABORT OFF
		END
	</select>

<!-- 공정검사정보 조회 -->
	<select id="s_pms402ukrv_kodiServiceImpl.selectMaster" parameterType="Map" resultType="rMap">		/* 조회1 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드			*/
				  , @UserId			NVARCHAR(100)	/* 사용자ID			*/
				  , @LangType		NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat		NVARCHAR(10)	/* 날짜 포맷 유형 설정		*/

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT
				   B.ITEM_LEVEL1
				 , A.DIV_CODE
				 , A.INSPEC_NUM
				 , A.INSPEC_SEQ
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , C.PRODT_Q
				 , A.INSPEC_TYPE
				 , A.INSPEC_METHOD
	--			 , (CASE WHEN A.INSPEC_TYPE = '01'
	--						  THEN ''
	--						  ELSE A.GOODBAD_TYPE
	--				 END) AS GOODBAD_TYPE
				 , A.GOODBAD_TYPE
				 , ISNULL(A.RECEIPT_Q,0) AS RECEIPT_Q
				 , A.INSPEC_Q
				 , A.GOOD_INSPEC_Q
				 , A.BAD_INSPEC_Q
				 , A.INSTOCK_Q
				 , A.INSPEC_PRSN
				 , A.RECEIPT_NUM
				 , A.RECEIPT_SEQ
				 , (CASE WHEN ISNULL(A.INSPEC_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INSPEC_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.INSPEC_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.INSPEC_DATE, 7, 2))
						 END)													AS INSPEC_DATE
				 , A.LOT_NO
				 , A.PRODT_NUM
				 , A.WKORD_NUM
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , A.REMARK
				 , A.COMP_CODE
				 , ISNULL(D.WH_CODE, '')	AS GOOD_WH_CODE
				 , ISNULL(D.INOUT_PRSN, '') AS GOOD_PRSN
				 , ISNULL(E.WH_CODE, '')	AS BAD_WH_CODE
				 , ISNULL(E.INOUT_PRSN, '') AS BAD_PRSN
				 , F.ITEM_ACCOUNT
				 , D.WH_CODE
				 , C.PRODT_DATE
			FROM			QMS400T A WITH (NOLOCK)
			       INNER JOIN QMS300T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
				                                     AND A1.DIV_CODE  = A.DIV_CODE
													 AND A1.RECEIPT_NUM = A.RECEIPT_NUM
													 AND A1.RECEIPT_SEQ = A.RECEIPT_SEQ
			   	   INNER JOIN BPR100T B WITH (NOLOCK) ON A.ITEM_CODE   = B.ITEM_CODE
													AND A.COMP_CODE   = B.COMP_CODE
				   LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ
									, MIN(PRODT_DATE) AS PRODT_DATE
									, MIN(PRODT_NUM) AS PRODT_NUM
									, MIN(WKORD_NUM) AS WKORD_NUM
									, MIN(PROJECT_NO) AS PROJECT_NO
									, MIN(PJT_CODE) AS PJT_CODE
									, MIN(WORK_SHOP_CODE) AS WORK_SHOP_CODE
									, SUM(PRODT_Q) AS PRODT_Q
									, SUM(GOOD_PRODT_Q) AS GOOD_PRODT_Q
								 FROM PMR200T  WITH (NOLOCK)
							  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ) AS C ON A1.COMP_CODE     = C.COMP_CODE
															                                                 AND A1.DIV_CODE      = C.DIV_CODE
															                                                 AND A1.RECEIPT_NUM   = C.RECEIPT_NUM
															                                                 AND A1.RECEIPT_SEQ   = C.RECEIPT_SEQ
			   	  LEFT  JOIN (
							  SELECT TOP 1 COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ
								   , WH_CODE, INOUT_PRSN
							  FROM   BTR100T WITH (NOLOCK)
							  WHERE  COMP_CODE   = @CompCode
							  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
							  AND	DIV_CODE	= #{DIV_CODE}
							  </if>
							  <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
							  AND	INSPEC_NUM  = #{INSPEC_NUM}
							  </if>
							  AND	ITEM_STATUS = '1'

							  ) D  ON A.COMP_CODE   = D.COMP_CODE
								  AND A.DIV_CODE	= D.DIV_CODE
								  AND A.INSPEC_NUM  = D.INSPEC_NUM
								  AND A.INSPEC_SEQ  = D.INSPEC_SEQ
			   	   LEFT  JOIN (
							  SELECT  TOP 1 COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ
								   , WH_CODE, INOUT_PRSN
							  FROM   BTR100T WITH (NOLOCK)
							  WHERE  COMP_CODE   =  @CompCode
							  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
							  AND	DIV_CODE	= #{DIV_CODE}
							  </if>
							  <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
							  AND	INSPEC_NUM  = #{INSPEC_NUM}
							  </if>
							  AND	ITEM_STATUS = '2'

							  ) E  ON A.COMP_CODE   = E.COMP_CODE
								  AND A.DIV_CODE	= E.DIV_CODE
								  AND A.INSPEC_NUM  = E.INSPEC_NUM
								  AND A.INSPEC_SEQ  = E.INSPEC_SEQ
				   INNER JOIN BPR200T F WITH (NOLOCK) ON F.COMP_CODE = A.COMP_CODE
													 AND F.DIV_CODE  = A.DIV_CODE
													 AND F.ITEM_CODE = A.ITEM_CODE
			WHERE A.COMP_CODE		 = @CompCode

			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE	 = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE)">
			AND A.INSPEC_DATE = #{INSPEC_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND A.ITEM_CODE   = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_PRSN)">
			AND A.INSPEC_PRSN = #{INSPEC_PRSN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
			AND A.INSPEC_TYPE = #{INSPEC_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND A.INSPEC_NUM  = #{INSPEC_NUM}
			</if>

		ORDER BY A.INSPEC_SEQ

		SET NOCOUNT OFF
		SET ARITHABORT OFF
		END
	</select>

<!-- 공정검사 상세정보 조회 -->
	<select id="s_pms402ukrv_kodiServiceImpl.selectDetail" parameterType="Map" resultType="rMap">		/* 조회2 */
		/* pms403ukrvServiceImpl.selectDetail */
		BEGIN
			SET NOCOUNT	ON
			SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
			DECLARE @COMP_CODE			NVARCHAR(20)		--(필수) 법인코드
				  , @DIV_CODE			NVARCHAR(20)		--(필수) 사업장 번호
				  , @MAIN_CODE			NVARCHAR(20)		--(필수) 메인코드
				  , @INSPEC_NUM			NVARCHAR(40)		--(필수) 검사번호
				  , @INSPEC_SEQ			NUMERIC(4, 0)		--(필수) 검사순번
				  , @ITEM_CODE			NVARCHAR(40)		--(필수) 품목코드
				  , @BEFORE_INSPEC_NUM	NVARCHAR(40)		--(필수) 검사번호
				  , @BEFORE_INSPEC_SEQ	NUMERIC(4, 0)		--(필수) 검사순번
				  , @INSPEC_ITEM		NVARCHAR(02)		--(필수) 검사품목
				  , @SELECT_GUBUN       NVARCHAR(01)        --검사항목 가져오기 옵션
				  , @REVISION_DATE      NVARCHAR(08)

			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @DIV_CODE	= #{DIV_CODE}
			SET @MAIN_CODE	= 'Q013'
			SET @INSPEC_NUM	= #{INSPEC_NUM}
			SET @INSPEC_SEQ	= #{INSPEC_SEQ}
			SET @ITEM_CODE	= #{ITEM_CODE}
			SET @INSPEC_ITEM= #{INSPEC_ITEM}
			SET @REVISION_DATE = #{REVISION_DATE}

			SELECT TOP 1 @SELECT_GUBUN = SUB_CODE
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'Q045'
			   AND SUB_CODE <![CDATA[<>]]> '$'
			   AND REF_CODE1 = 'Y'

			IF EXISTS (
					   SELECT TOP 1 1
						 FROM QMS410T WITH(NOLOCK)
						WHERE COMP_CODE  = @COMP_CODE
						  AND DIV_CODE   = @DIV_CODE
						  AND INSPEC_NUM = @INSPEC_NUM
						  AND INSPEC_SEQ = @INSPEC_SEQ
					  )
				BEGIN

					SELECT 'U'					AS SAVE_FLAG
						 , A.COMP_CODE
						 , A.DIV_CODE
						 , A.INSPEC_NUM
						 , A.INSPEC_SEQ
						 , A.BAD_INSPEC_CODE	AS TEST_CODE
						 , A.BAD_INSPEC_CODE	AS TEST_NAME
						 , B.TEST_METH
						 , A.TEST_COND
						 , B.VALUE_TYPE
						 , A.VALUE_POINT
						 , A.MEASURED_FROM		AS TEST_COND_FROM
						 , A.MEASURED_TO		AS TEST_COND_TO
						 , A.MEASURED_VALUE
						 , A.SPEC
						 , B.TEST_UNIT
						 , ISNULL(A.TEST_PRSN,B.TEST_PRSN) AS TEST_PRSN
						 , A1.INSPEC_DATE AS REVISION_DATE
						 , A.BAD_INSPEC_Q
						 , A.INSPEC_REMARK
						 , A.MANAGE_REMARK
						 , A1.ITEM_CODE
					  FROM		QMS410T A WITH (NOLOCK)
					      INNER JOIN QMS400T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
						                                    AND A1.DIV_CODE  = A.DIV_CODE
															AND A1.INSPEC_NUM = A.INSPEC_NUM
															AND A1.INSPEC_SEQ = A.INSPEC_SEQ
						  LEFT JOIN QBA100T B WITH(NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.BAD_INSPEC_CODE
						  LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, TEST_CODE, MAX(REVISION_DATE) AS REVISION_DATE
						               FROM QBA210T WITH(NOLOCK)
									   GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, TEST_CODE
						                             ) AS C ON C.COMP_CODE = A1.COMP_CODE
														   AND C.DIV_CODE  = A1.DIV_CODE
														   AND C.ITEM_CODE = A1.ITEM_CODE
														   AND C.TEST_CODE = A.BAD_INSPEC_CODE

					 WHERE A.COMP_CODE	= @COMP_CODE
					   AND A.DIV_CODE	= @DIV_CODE
					   AND A.INSPEC_NUM	= @INSPEC_NUM
					   AND A.INSPEC_SEQ	= @INSPEC_SEQ

				END
			ELSE
				BEGIN
					IF @SELECT_GUBUN = '1'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.BAD_INSPEC_CODE	AS TEST_CODE
							 , A.BAD_INSPEC_CODE	AS TEST_NAME
							 , B.TEST_METH
							 , A.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , A.VALUE_POINT
							 , A.MEASURED_FROM		AS TEST_COND_FROM
							 , A.MEASURED_TO		AS TEST_COND_TO
							 , A.MEASURED_VALUE
							 , A.SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , A.BAD_INSPEC_Q
						     , A.INSPEC_REMARK
						     , A.MANAGE_REMARK
						     , A.ITEM_CODE
						  FROM (SELECT A.COMP_CODE
									 , A.DIV_CODE
									 , B.ITEM_CODE
									 , A.BAD_INSPEC_CODE
									 , A.TEST_COND
									 , A.MEASURED_FROM
									 , A.MEASURED_TO
									 , A.SPEC
									 , A.VALUE_POINT
									 , A.MEASURED_VALUE
									 , A.BAD_INSPEC_Q
									 , A.INSPEC_REMARK
									 , A.MANAGE_REMARK
									 FROM (SELECT TOP 1 A.COMP_CODE
												 , A.DIV_CODE
												 , B.ITEM_CODE
												 , B.INSPEC_SEQ
												 , MAX(B.INSPEC_DATE) AS INSPEC_DATE
												 , MAX(A.INSPEC_NUM)  AS INSPEC_NUM
									          FROM QMS410T A WITH (NOLOCK)
											       INNER JOIN QMS400T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
												                                     AND A.DIV_CODE   = B.DIV_CODE
																					 AND A.INSPEC_NUM = B.INSPEC_NUM
																					 AND A.INSPEC_SEQ = B.INSPEC_SEQ
											 WHERE B.COMP_CODE	= @COMP_CODE
											   AND B.DIV_CODE	= @DIV_CODE
											   AND B.ITEM_CODE  = @ITEM_CODE
											 GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, B.INSPEC_SEQ ) AS B
								       INNER JOIN QMS410T A WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
									                                     AND A.DIV_CODE   = B.DIV_CODE
																		 AND A.INSPEC_NUM = B.INSPEC_NUM
																		 AND A.INSPEC_SEQ = B.INSPEC_SEQ
								  ) AS A
						  LEFT JOIN QBA100T B WITH(NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.BAD_INSPEC_CODE
						 WHERE A.COMP_CODE	= @COMP_CODE
						   AND A.DIV_CODE	= @DIV_CODE
						   AND A.ITEM_CODE  = @ITEM_CODE


					END

					ELSE IF @SELECT_GUBUN = '2'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.TEST_CODE
							 , A.TEST_CODE			AS TEST_NAME
							 , A.TEST_METH
							 , A.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , A.VALUE_POINT
							 , A.TEST_COND_FROM
							 , A.TEST_COND_TO
							 , A.TEST_VALUE AS MEASURED_VALUE
							 , CASE WHEN ((ISNULL(A.TEST_COND_FROM, 0) != 0 OR ISNULL(A.TEST_COND_TO, 0) != 0)
									  AND (ISNULL(A.TEST_COND_FROM, 0) <![CDATA[>]]> 0 OR ISNULL(A.TEST_COND_TO, 0) <![CDATA[<]]> 0)) THEN '부적합'
									ELSE A.TEST_RESULT
							   END					AS SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
						     , A.ITEM_CODE
						  FROM		 QBA210T A WITH(NOLOCK)
						  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.TEST_CODE
						 WHERE A.COMP_CODE   = @COMP_CODE
						   AND A.DIV_CODE    = @DIV_CODE
						   AND A.ITEM_CODE   = @ITEM_CODE
					END

					ELSE IF @SELECT_GUBUN = '3'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.TEST_CODE
							 , A.TEST_CODE			AS TEST_NAME
							 , B.TEST_METH
							 , B.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , B.VALUE_POINT
							 , B.TEST_COND_FROM
							 , B.TEST_COND_TO
							 , B.TEST_VALUE AS MEASURED_VALUE
							 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
									  AND (ISNULL(B.TEST_COND_FROM, 0) <![CDATA[>]]> 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[<]]>0)) THEN '부적합'
									ELSE B.TEST_RESULT
							   END					AS SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
						     , @ITEM_CODE AS ITEM_CODE
						  FROM		 QBA120T A WITH(NOLOCK)
						  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.TEST_CODE
						  INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
														   AND C.DIV_CODE  = A.DIV_CODE
														   AND C.ITEM_CODE = @ITEM_CODE
														   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
						 WHERE A.COMP_CODE   = @COMP_CODE
						   AND A.DIV_CODE    = @DIV_CODE
						   AND A.TEST_GROUP  = #{ITEM_LEVEL1}
					END

					ELSE IF @SELECT_GUBUN = '4'
					BEGIN

						SELECT 'N'		AS SAVE_FLAG
							 , COMP_CODE
							 , DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , TEST_CODE
							 , TEST_CODE  AS TEST_NAME
							 , TEST_METH
							 , TEST_COND
							 , ISNULL(VALUE_TYPE, '') AS VALUE_TYPE
							 , VALUE_POINT
							 , TEST_COND_FROM
							 , TEST_COND_TO
							 , TEST_VALUE  AS MEASURED_VALUE
							 , TEST_RESULT AS SPEC
							 , TEST_UNIT
							 , TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
				             , @ITEM_CODE AS ITEM_CODE
						FROM  QBA100T
						WHERE COMP_CODE = @COMP_CODE
						  AND DIV_CODE  = @DIV_CODE
					END

				END
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>

	<select id="s_pms402ukrv_kodiServiceImpl.selectTestListNew" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT	ON
			SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
			DECLARE @COMP_CODE			NVARCHAR(20)		--(필수) 법인코드
				  , @DIV_CODE			NVARCHAR(20)		--(필수) 사업장 번호
				  , @ITEM_CODE			NVARCHAR(40)		--(필수) 품목코드
				  , @SELECT_GUBUN       NVARCHAR(01)        --검사항목 가져오기 옵션
				  , @REVISION_DATE      NVARCHAR(08)

			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @DIV_CODE	= #{DIV_CODE}
			SET @ITEM_CODE	= #{ITEM_CODE}
			SET @SELECT_GUBUN = #{SELECT_GUBUN}
			SET @REVISION_DATE = #{REVISION_DATE}


					IF @SELECT_GUBUN = '1'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.BAD_INSPEC_CODE	AS TEST_CODE
							 , A.BAD_INSPEC_CODE	AS TEST_NAME
							 , B.TEST_METH
							 , A.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , A.VALUE_POINT
							 , A.MEASURED_FROM		AS TEST_COND_FROM
							 , A.MEASURED_TO		AS TEST_COND_TO
							 , A.MEASURED_VALUE
							 , A.SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , A.BAD_INSPEC_Q
						     , A.INSPEC_REMARK
						     , A.MANAGE_REMARK
						     , A.ITEM_CODE
						  FROM (SELECT A.COMP_CODE
									 , A.DIV_CODE
									 , B.ITEM_CODE
									 , A.BAD_INSPEC_CODE
									 , A.TEST_COND
									 , A.MEASURED_FROM
									 , A.MEASURED_TO
									 , A.SPEC
									 , A.VALUE_POINT
									 , A.MEASURED_VALUE
									 , A.BAD_INSPEC_Q
									 , A.INSPEC_REMARK
									 , A.MANAGE_REMARK
									 FROM (SELECT TOP 1 A.COMP_CODE
												 , A.DIV_CODE
												 , B.ITEM_CODE
												 , B.INSPEC_SEQ
												 , MAX(B.INSPEC_DATE) AS INSPEC_DATE
												 , MAX(A.INSPEC_NUM)  AS INSPEC_NUM
									          FROM QMS410T A WITH (NOLOCK)
											       INNER JOIN QMS400T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
												                                     AND A.DIV_CODE   = B.DIV_CODE
																					 AND A.INSPEC_NUM = B.INSPEC_NUM
																					 AND A.INSPEC_SEQ = B.INSPEC_SEQ
											 WHERE B.COMP_CODE	= @COMP_CODE
											   AND B.DIV_CODE	= @DIV_CODE
											   AND B.ITEM_CODE  = @ITEM_CODE
											 GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, B.INSPEC_SEQ ) AS B
								       INNER JOIN QMS410T A WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
									                                     AND A.DIV_CODE   = B.DIV_CODE
																		 AND A.INSPEC_NUM = B.INSPEC_NUM
																		 AND A.INSPEC_SEQ = B.INSPEC_SEQ
								  ) AS A
						  LEFT JOIN QBA100T B WITH(NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.BAD_INSPEC_CODE
						 WHERE A.COMP_CODE	= @COMP_CODE
						   AND A.DIV_CODE	= @DIV_CODE
						   AND A.ITEM_CODE  = @ITEM_CODE


					END

					ELSE IF @SELECT_GUBUN = '2'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.TEST_CODE
							 , A.TEST_CODE			AS TEST_NAME
							 , A.TEST_METH
							 , A.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , A.VALUE_POINT
							 , A.TEST_COND_FROM
							 , A.TEST_COND_TO
							 , A.TEST_VALUE AS MEASURED_VALUE
							 , CASE WHEN ((ISNULL(A.TEST_COND_FROM, 0) != 0 OR ISNULL(A.TEST_COND_TO, 0) != 0)
									  AND (ISNULL(A.TEST_COND_FROM, 0) <![CDATA[>]]> 0 OR ISNULL(A.TEST_COND_TO, 0) <![CDATA[<]]> 0)) THEN '부적합'
									ELSE A.TEST_RESULT
							   END					AS SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
						     , A.ITEM_CODE
						  FROM		 QBA210T A WITH(NOLOCK)
						  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.TEST_CODE
						 WHERE A.COMP_CODE   = @COMP_CODE
						   AND A.DIV_CODE    = @DIV_CODE
						   AND A.ITEM_CODE   = @ITEM_CODE
					END

					ELSE IF @SELECT_GUBUN = '3'
					BEGIN
						SELECT 'N'					AS SAVE_FLAG
							 , A.COMP_CODE
							 , A.DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , A.TEST_CODE
							 , A.TEST_CODE			AS TEST_NAME
							 , B.TEST_METH
							 , B.TEST_COND
							 , ISNULL(B.VALUE_TYPE, '') AS VALUE_TYPE
							 , B.VALUE_POINT
							 , B.TEST_COND_FROM
							 , B.TEST_COND_TO
							 , B.TEST_VALUE AS MEASURED_VALUE
							 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
									  AND (ISNULL(B.TEST_COND_FROM, 0) <![CDATA[>]]> 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[<]]>0)) THEN '부적합'
									ELSE B.TEST_RESULT
							   END					AS SPEC
							 , B.TEST_UNIT
							 , B.TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
						     , @ITEM_CODE AS ITEM_CODE
						  FROM		 QBA120T A WITH(NOLOCK)
						  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
														   AND B.DIV_CODE  = A.DIV_CODE
														   AND B.TEST_CODE = A.TEST_CODE
						  INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
														   AND C.DIV_CODE  = A.DIV_CODE
														   AND C.ITEM_CODE = @ITEM_CODE
														   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
						 WHERE A.COMP_CODE   = @COMP_CODE
						   AND A.DIV_CODE    = @DIV_CODE
						   AND A.TEST_GROUP  = #{ITEM_LEVEL1}
					END

					ELSE IF @SELECT_GUBUN = '4'
					BEGIN

						SELECT 'N'		AS SAVE_FLAG
							 , COMP_CODE
							 , DIV_CODE
						     , #{INSPEC_NUM}		AS INSPEC_NUM
						     , #{INSPEC_SEQ}		AS INSPEC_SEQ
							 , TEST_CODE
							 , TEST_CODE  AS TEST_NAME
							 , TEST_METH
							 , TEST_COND
							 , ISNULL(VALUE_TYPE, '') AS VALUE_TYPE
							 , VALUE_POINT
							 , TEST_COND_FROM
							 , TEST_COND_TO
							 , TEST_VALUE  AS MEASURED_VALUE
							 , TEST_RESULT AS SPEC
							 , TEST_UNIT
							 , TEST_PRSN
							 , @REVISION_DATE AS REVISION_DATE
						     , 0  AS BAD_INSPEC_Q
						     , '' AS INSPEC_REMARK
						     , '' AS MANAGE_REMARK
				             , @ITEM_CODE AS ITEM_CODE
						FROM  QBA100T
						WHERE COMP_CODE = @COMP_CODE
						  AND DIV_CODE  = @DIV_CODE
					END


			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
<!-- 접수참조 -->
	<select id="s_pms402ukrv_kodiServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08) /* 법인코드				*/
				  , @UserId			NVARCHAR(100) /* 사용자ID				*/
				  , @LangType		NVARCHAR(2)  /* 언어구분				*/
				  , @RefItem		NVARCHAR(01) /* 명칭 참조 유형			*/
				  , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정	 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */
			SELECT CAST('' AS BIT)						   AS CHK
				 , B.ITEM_LEVEL1
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
					END)										 AS RECEIPT_DATE
				 , C.PRODT_Q
				 , ISNULL(A.RECEIPT_Q,0) AS INSPEC_Q
				 , ISNULL(A.RECEIPT_Q,0) -  ISNULL(A.INSPEC_Q,0) AS NOT_INSPEC_Q
				 , D.INSPEC_METH_PRODT
				 , A.RECEIPT_NUM
				 , A.RECEIPT_SEQ
				 , A.LOT_NO
				 , C.WORK_SHOP_CODE
				 , C.PRODT_NUM
				 , C.WKORD_NUM
				 , C.PROJECT_NO
				 , C.PJT_CODE
				 , D.ITEM_ACCOUNT
				 , D.WH_CODE
				 , C.PRODT_DATE
				  FROM QMS300T A WITH (NOLOCK)
						   INNER JOIN BPR100T B WITH (NOLOCK)
								   ON A.ITEM_CODE = B.ITEM_CODE
								  AND A.COMP_CODE = B.COMP_CODE
						   INNER JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ
											, MIN(PRODT_DATE) AS PRODT_DATE
											, MIN(PRODT_NUM) AS PRODT_NUM
											, MIN(WKORD_NUM) AS WKORD_NUM
											, MIN(PROJECT_NO) AS PROJECT_NO
											, MIN(PJT_CODE) AS PJT_CODE
											, MIN(WORK_SHOP_CODE) AS WORK_SHOP_CODE
											, SUM(PRODT_Q) AS PRODT_Q
											, SUM(GOOD_PRODT_Q) AS GOOD_PRODT_Q
										 FROM PMR200T  WITH (NOLOCK)
									  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, RECEIPT_NUM, RECEIPT_SEQ) AS C ON A.COMP_CODE     = C.COMP_CODE
																	                                                 AND A.DIV_CODE      = C.DIV_CODE
																	                                                 AND A.RECEIPT_NUM   = C.RECEIPT_NUM
																	                                                 AND A.RECEIPT_SEQ   = C.RECEIPT_SEQ
						   INNER JOIN BPR200T D WITH (NOLOCK)
								   ON A.ITEM_CODE = D.ITEM_CODE
								  AND A.DIV_CODE  = D.DIV_CODE
								  AND A.COMP_CODE = D.COMP_CODE
						   LEFT  JOIN BSA230T F WITH (NOLOCK)
								   ON F.COMP_CODE = C.COMP_CODE
								  AND F.TREE_CODE = C.WORK_SHOP_CODE

				WHERE  A.COMP_CODE	  = @CompCode
				AND ISNULL(A.RECEIPT_Q,0) - ISNULL(A.INSPEC_Q,0) &gt; 0
				--20190425 추가: 검사품목에 따라 공정검사 / 출하검사 구분하여 참조하도록 수정
				AND	F.INSPEC_TYPE	   = #{INSPEC_TYPE}

				<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND	A.DIV_CODE	   = #{DIV_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
				AND A.RECEIPT_DATE	 &gt;= #{RECEIPT_DATE_FR}
				</if>
				<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
				AND A.RECEIPT_DATE	 &lt;= #{RECEIPT_DATE_TO}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				AND A.ITEM_CODE		 = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				AND A.LOT_NO	  LIKE #{LOT_NO} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
				AND A.PROJECT_NO  LIKE #{PROJECT_NO} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
				AND C.WORK_SHOP_CODE	 = #{WORK_SHOP_CODE}
				</if>

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

    <select id="s_pms402ukrv_kodiServiceImpl.getTestCode" parameterType="Map" resultType="comboItem">
		/*QBA100T COMBO TEST_CODE...*/
		SELECT TEST_CODE		AS value
		     , TEST_NAME		AS text
		     , DIV_CODE			AS 'option'
		     , TEST_COND		AS refCode1
		     , TEST_UNIT		AS refCode2
		     , TEST_LOC			AS refCode3
		     , REMARK			AS refCode4
		     , TEST_COND_FROM	AS refCode5
		     , TEST_COND_TO		AS refCode6
		     , CASE WHEN ((ISNULL(TEST_COND_FROM, 0) != 0 OR ISNULL(TEST_COND_TO, 0) != 0)
		     		  AND (ISNULL(TEST_COND_FROM, 0) &gt; 0 OR ISNULL(TEST_COND_TO, 0) &lt; 0)) THEN '부적합'
		     		ELSE TEST_RESULT
		       END				AS refCode7
			 , TEST_NAME_ENG	AS refCode8
			 , TEST_COND_ENG	AS refCode9
			 , TEST_PRSN        AS refCode10
		  FROM QBA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		 AND   DIV_CODE  = #{DIV_CODE}
	</select>

<!-- 검사항목 가져오기 설정조회 -->
	<select id="s_pms402ukrv_kodiServiceImpl.getTestCodeMethod" parameterType="Map" resultType="string">
		SELECT SUB_CODE
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE  = 'Q045'
		   AND SUB_CODE <![CDATA[<>]]> '$'
		   AND REF_CODE1 = 'Y'
	</select>

<!-- 접수참조 -->
	<select id="s_pms402ukrv_kodiServiceImpl.getTestResult" parameterType="Map" resultType="string">
		SELECT TEST_RESULT
		  FROM QBA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND TEST_CODE = #{TEST_CODE}
	</select>



<!-- 공정검사정보 저장 -->
	<insert id="s_pms402ukrv_kodiServiceImpl.insertLogMaster" parameterType="Map">
		INSERT L_QMS400T
			 ( KEY_VALUE
			 , OPR_FLAG
			 , COMP_CODE
			 , DIV_CODE
			 , INSPEC_NUM
			 , INSPEC_SEQ
			 , INSPEC_DATE
			 , ITEM_CODE
			 , INSPEC_TYPE
			 , GOODBAD_TYPE
			 , RECEIPT_Q
			 , INSPEC_Q
			 , GOOD_INSPEC_Q
			 , BAD_INSPEC_Q
			 , INSPEC_PRSN
			 , LOT_NO
			 , PRODT_NUM
			 , WKORD_NUM
			 , PROJECT_NO
			 , PJT_CODE
			 , RECEIPT_NUM
			 , RECEIPT_SEQ
			 , REMARK
			 , GOOD_WH_CODE
			 , BAD_WH_CODE
			 , GOOD_PRSN
			 , BAD_PRSN
			 , GOOD_WH_CELL_CODE
			 , BAD_WH_CELL_CODE
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME)
		VALUES
			 ( #{KEY_VALUE}
			 , #{OPR_FLAG}
			 , #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{INSPEC_NUM}
			<if test="@foren.Ognl@isEmpty(INSPEC_SEQ)">
			 , '0'
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_SEQ)">
			 , #{INSPEC_SEQ}
			</if>
			 , #{INSPEC_DATE}
			 , #{ITEM_CODE}
			 , #{INSPEC_TYPE}
			 , #{GOODBAD_TYPE}
			 , #{RECEIPT_Q}
			 , #{INSPEC_Q}
			 , #{GOOD_INSPEC_Q}
			 , #{BAD_INSPEC_Q}
			 , #{INSPEC_PRSN}
			 , #{LOT_NO}
			 , #{PRODT_NUM}
			 , #{WKORD_NUM}
			 , #{PROJECT_NO}
			 , #{PJT_CODE}
			 , #{RECEIPT_NUM}
			 , #{RECEIPT_SEQ}
			 , #{REMARK}
			 , #{GOOD_WH_CODE}
			 , #{BAD_WH_CODE}
			 , #{GOOD_PRSN}
			 , #{BAD_PRSN}
			 , #{GOOD_WH_CELL_CODE} --20190725 CELL 추가
			 , #{BAD_WH_CELL_CODE}
			 , #{S_USER_ID}
			 , GETDATE())
	</insert>

<!-- 공정검사상세정보 저장 -->
	<insert id="s_pms402ukrv_kodiServiceImpl.insertLogMaster2" parameterType="Map">
		INSERT L_QMS410T
			 ( KEY_VALUE
			 , OPR_FLAG
			 , COMP_CODE
			 , DIV_CODE
			 , INSPEC_NUM
			 , INSPEC_SEQ
			 , BAD_INSPEC_CODE
			 , BAD_INSPEC_Q
			 , INSPEC_REMARK
			 , MANAGE_REMARK
			 , SPEC
			 , MEASURED_VALUE
			 , TEST_COND
			 , MEASURED_FROM
			 , MEASURED_TO
			 , VALUE_POINT
			 , TEST_PRSN
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME)
		 VALUES
			 ( #{KEY_VALUE}
			 , #{OPR_FLAG}
			 , #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{INSPEC_NUM}
			 , #{INSPEC_SEQ}
			 , #{TEST_CODE}
			 , #{BAD_INSPEC_Q}
			 , #{INSPEC_REMARK}
			 , #{MANAGE_REMARK}
			 , #{SPEC}
			 , #{MEASURED_VALUE}
			 , #{TEST_COND}
			 , #{TEST_COND_FROM}
			 , #{TEST_COND_TO}
			 , #{VALUE_POINT}
			 , #{TEST_PRSN}
			 , #{S_USER_ID}
			 , GETDATE())
	</insert>

	<update id="s_pms402ukrv_kodiServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_PRODT_Pms400ukr (
			#{KeyValue,	 mode=IN,	jdbcType=VARCHAR,   javaType=java.lang.String},
			#{INSPEC_NUM,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
			#{ErrorDesc,	mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
		)}
	</update>

	<delete id="s_pms402ukrv_kodiServiceImpl.testcodeDelete" parameterType="Map">
	DELETE FROM QBA210T
	WHERE 	COMP_CODE 		= #{S_COMP_CODE}
	AND		DIV_CODE		= #{DIV_CODE}
	AND		ITEM_CODE		= #{ITEM_CODE}
	AND		REVISION_DATE	= #{REVISION_DATE}
	</delete>

	<insert id="s_pms402ukrv_kodiServiceImpl.testcodeCopy" parameterType="Map">
		DECLARE
			@TEST_NAME			NVARCHAR(100)


		BEGIN

			SET @TEST_NAME			= (SELECT TOP 1 TEST_NAME FROM QBA100T WHERE COMP_CODE = #{S_COMP_CODE} AND DIV_CODE = #{DIV_CODE} AND TEST_CODE = #{TEST_NAME});
			INSERT INTO QBA210T

			(
				COMP_CODE,      DIV_CODE,       ITEM_CODE,         TEST_CODE,       REVISION_DATE,   VALUE_POINT,
				TEST_METH,      TEST_NAME,      TEST_COND,         TEST_COND_FROM,  TEST_COND_TO,    TEST_RESULT,
				TEST_VALUE,     SEQ,            TEST_VER,          USE_YN,          REMARK,
				INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER,    UPDATE_DB_TIME

			)
			VALUES
			(
				#{S_COMP_CODE}, 	#{DIV_CODE}, 	#{ITEM_CODE}, 		#{TEST_NAME}, 		#{REVISION_DATE},    #{VALUE_POINT},
				#{TEST_METH}, 		@TEST_NAME, 	#{TEST_COND}, 	    #{TEST_COND_FROM},  #{TEST_COND_TO},     #{SPEC},
				#{MEASURED_VALUE}, 	NULL, 	        1, 	                'Y', 		        NULL,
				#{S_USER_ID},       GETDATE(),      #{S_USER_ID},       GETDATE()
			)
		END
	</insert>

	<select id="s_pms402ukrv_kodiServiceImpl.inspecQtyCheck" parameterType="Map" resultType="rMap">
		  /* pms403ukrvServiceImpl.inspecQtyCheck*/
	    SELECT INOUT_Q
	      FROM BTR100T
	     WHERE COMP_CODE  = #{S_COMP_CODE}
	       AND DIV_CODE   = #{DIV_CODE}
	       AND INSPEC_NUM = #{INSPEC_NUM}
	       AND INSPEC_SEQ = #{INSPEC_SEQ}
	       AND CREATE_LOC = '1'
	</select>
</mapper>