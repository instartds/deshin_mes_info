<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="srq210ukrvServiceImpl">
	<select id="srq210ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* srq210ukrvServiceImpl.selectList */
		BEGIN
		    SELECT Z.COMP_CODE
		         , Z.DIV_CODE
		         , Z.SEQ
		         , Z.CUSTOM_CODE
		         , Z.CUSTOM_NAME
		         , Z.DVRY_CUST_CD
		         , Z.DVRY_CUST_NAME
		         , Z.ITEM_CODE
		         , Z.ITEM_NAME
		         , Z.SPEC
		         , Z.ORDER_UNIT
		         , Z.ISSUE_PLAN_DATE
		         , Z.ISSUE_PLAN_QTY
		         , Z.BOX_TYPE
		         , Z.TRNS_RATE
		         , Z.BOX_QTY
		         , Z.CAR_TYPE
		         , Z.LABEL_INDEX
		         , Z.REMARK
		         , Z.DATA_KIND
		         , Z.STOCK_Q
		         , Z.ISSUE_PLAN_NUM
		         , Z.USE_YN
		         , Z.SORT_SEQ
		     FROM (
                     --출하예정표 등록된 데이터 조회
		             SELECT A.COMP_CODE
		                  , A.DIV_CODE
		                  , A.SEQ
		                  , A.CUSTOM_CODE
		                  , C1.CUSTOM_NAME
		                  , A.DVRY_CUST_CD
		                  , C2.DVRY_CUST_NM                               AS DVRY_CUST_NAME
		                  , A.ITEM_CODE
		                  , C3.ITEM_NAME
		                  , C3.SPEC
		                  , C4.ORDER_UNIT
		                  , #{ISSUE_PLAN_DATE}                            AS ISSUE_PLAN_DATE
		                  , A.ISSUE_PLAN_QTY
		                  , A.BOX_TYPE
		                  , ISNULL(A.TRNS_RATE, 1)                        AS TRNS_RATE
		                  , A.BOX_QTY
		                  , A.CAR_TYPE
		                  , A.LABEL_INDEX
		                  , A.REMARK
		                  , 'U'                                           AS DATA_KIND
		                  , Q1.STOCK_Q
		                  , A.ISSUE_PLAN_NUM
		                  , C3.USE_YN
		                  , A.SAVE_IDX
		                  , B.SORT_SEQ
		               FROM       SRQ210T A  WITH(NOLOCK)
		               LEFT  JOIN SRQ200T B  WITH(NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                                 AND B.DIV_CODE       = A.DIV_CODE
		                                                 AND B.CUSTOM_CODE    = A.CUSTOM_CODE
		                                                 AND B.DVRY_CUST_CD   = A.DVRY_CUST_CD
		                                                 AND B.ITEM_CODE      = A.ITEM_CODE
		                                                 --20210520 추가
		                                                 AND B.CAR_TYPE       = A.CAR_TYPE
		                                                 AND B.BOX_TYPE       = A.BOX_TYPE
		                                                 AND B.TRNS_RATE      = A.TRNS_RATE
		                                                 AND B.LABEL_INDEX    = A.LABEL_INDEX
		               INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
		                                                 AND C1.CUSTOM_CODE   = A.CUSTOM_CODE
		               LEFT  JOIN SCM100T C2 WITH(NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
		                                                 AND C2.CUSTOM_CODE   = A.CUSTOM_CODE
		                                                 AND C2.DVRY_CUST_SEQ = CONVERT(int, A.DVRY_CUST_CD)
		               INNER JOIN BPR100T C3 WITH(NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
		                                                 AND C3.ITEM_CODE     = A.ITEM_CODE
		               INNER JOIN BPR200T C4 WITH(NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                                 AND C4.DIV_CODE      = A.DIV_CODE
		                                                 AND C4.ITEM_CODE     = A.ITEM_CODE
		               --20200103 추가
		               LEFT  JOIN BIV100T Q1 WITH(NOLOCK) ON Q1.COMP_CODE     = A.COMP_CODE
		                                                 AND Q1.DIV_CODE      = A.DIV_CODE
		                                                 AND Q1.ITEM_CODE     = A.ITEM_CODE
		                                                 AND Q1.WH_CODE       = C4.WH_CODE
		              WHERE A.COMP_CODE        = #{S_COMP_CODE}
		                AND A.DIV_CODE         = #{DIV_CODE}
		                AND A.ISSUE_PLAN_DATE  = #{ISSUE_PLAN_DATE}
		             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		                AND C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(SPEC)">
		                AND C3.SPEC         LIKE #{SPEC} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(REMARK)">
		                AND A.REMARK        LIKE #{REMARK} + '%'
		             </if>
                     
		             UNION ALL
                     --거래처출하품목 테이블 조회
		             SELECT A.COMP_CODE
		                  , A.DIV_CODE
		                  , A.SEQ
		                  , A.CUSTOM_CODE
		                  , C1.CUSTOM_NAME
		                  , A.DVRY_CUST_CD
		                  , C2.DVRY_CUST_NM                               AS DVRY_CUST_NAME
		                  , A.ITEM_CODE
		                  , C3.ITEM_NAME
		                  , C3.SPEC
		                  , C4.ORDER_UNIT
		                  , #{ISSUE_PLAN_DATE}                            AS ISSUE_PLAN_DATE
		                  , B.ISSUE_PLAN_QTY
		                  , A.BOX_TYPE
		                  , ISNULL(A.TRNS_RATE, 1)                        AS TRNS_RATE
		                  , B.BOX_QTY
		                  , A.CAR_TYPE
		                  , A.LABEL_INDEX
		                  , A.REMARK
		                  , 'N'                                           AS DATA_KIND
		                  --20200103 추가
		                  , Q1.STOCK_Q
		                  --20200121 추가
		                  , B.ISSUE_PLAN_NUM
		                  --20200121 추가: USE_YN
		                  , C3.USE_YN
		                  , NULL                                          AS SAVE_IDX
		                  , A.SORT_SEQ
		               FROM       SRQ200T A  WITH(NOLOCK)
		               LEFT  JOIN SRQ210T B  WITH(NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                                 AND B.DIV_CODE       = A.DIV_CODE
		                                                 AND B.CUSTOM_CODE    = A.CUSTOM_CODE
		                                                 AND B.DVRY_CUST_CD   = A.DVRY_CUST_CD
		                                                 AND B.ITEM_CODE      = A.ITEM_CODE
		                                                 AND B.ISSUE_PLAN_DATE= #{ISSUE_PLAN_DATE}
		                                                 --20210520 추가
		                                                 AND B.CAR_TYPE       = A.CAR_TYPE
		                                                 AND B.BOX_TYPE       = A.BOX_TYPE
		                                                 AND B.TRNS_RATE      = A.TRNS_RATE
		                                                 AND B.LABEL_INDEX    = A.LABEL_INDEX
		               INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
		                                                 AND C1.CUSTOM_CODE   = A.CUSTOM_CODE
		               LEFT  JOIN SCM100T C2 WITH(NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
		                                                 AND C2.CUSTOM_CODE   = A.CUSTOM_CODE
		                                                 AND C2.DVRY_CUST_SEQ = CONVERT(int, A.DVRY_CUST_CD)
		               INNER JOIN BPR100T C3 WITH(NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
		                                                 AND C3.ITEM_CODE     = A.ITEM_CODE
		               INNER JOIN BPR200T C4 WITH(NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                                 AND C4.DIV_CODE      = A.DIV_CODE
		                                                 AND C4.ITEM_CODE     = A.ITEM_CODE
		               --20200103 추가
		               LEFT  JOIN BIV100T Q1 WITH(NOLOCK) ON Q1.COMP_CODE     = A.COMP_CODE
		                                                 AND Q1.DIV_CODE      = A.DIV_CODE
		                                                 AND Q1.ITEM_CODE     = A.ITEM_CODE
		                                                 AND Q1.WH_CODE       = C4.WH_CODE
		              WHERE A.COMP_CODE        = #{S_COMP_CODE}
		                AND A.DIV_CODE         = #{DIV_CODE}
		                AND B.COMP_CODE        IS NULL
		             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		                AND C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(SPEC)">
		                AND C3.SPEC         LIKE #{SPEC} + '%'
		             </if>
		             <if test="@foren.Ognl@isNotEmpty(REMARK)">
		                AND B.REMARK        LIKE #{REMARK} + '%'
		             </if>
		     ) Z
		    --20200103 수정: 배송처 -> 배송처명으로 변경: 20200121 수정: A.SORT_SEQ 추가
		--     ORDER BY A.SORT_SEQ, A.CUSTOM_CODE, C2.DVRY_CUST_NM, A.ITEM_CODE, B.ISSUE_PLAN_DATE
		--            , B.SAVE_IDX   --20210325 추가
		     ORDER BY Z.CUSTOM_CODE, Z.DVRY_CUST_NAME, ISNULL(Z.SAVE_IDX, 999)   --20210325 추가
		            , Z.SORT_SEQ, Z.ITEM_CODE, Z.ISSUE_PLAN_DATE
		END
	</select>



	<select id="srq210ukrvServiceImpl.getIssuePlanNum" parameterType="Map" resultType="rMap">
		DECLARE @ISSUE_PLAN_NUM	NVARCHAR(20)
		
		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'SRQ210T', 'W', #{ISSUE_PLAN_DATE}, '1', @ISSUE_PLAN_NUM OUTPUT

		IF ISNULL(@ISSUE_PLAN_NUM, '') != ''
			SELECT @ISSUE_PLAN_NUM AS ISSUE_PLAN_NUM
		ELSE
			SELECT TOP 0 '' AS ISSUE_PLAN_NUM
	</select>

	<update id="srq210ukrvServiceImpl.updateDetail" parameterType="Map">
		/*srq210ukrvServiceImpl.updateDetail*/
		DECLARE @ISSUE_PLAN_QTY NUMERIC(30, 6)
		SET     @ISSUE_PLAN_QTY = #{ISSUE_PLAN_QTY}
		SET     @ISSUE_PLAN_QTY = ISNULL(@ISSUE_PLAN_QTY, 0)
		
		MERGE INTO SRQ210T                                  A
		USING ( SELECT #{S_COMP_CODE}     AS COMP_CODE
		             , #{DIV_CODE}        AS DIV_CODE
		             , #{ISSUE_PLAN_NUM}  AS ISSUE_PLAN_NUM
		             , #{SEQ}             AS SEQ
		      )                                             B  ON B.COMP_CODE        = A.COMP_CODE
		                                                      AND B.DIV_CODE         = A.DIV_CODE
		                                                      AND B.ISSUE_PLAN_NUM   = A.ISSUE_PLAN_NUM
		                                                   --   AND B.SEQ = CASE WHEN ISNULL(A.SEQ, 0) != 0 THEN A.SEQ ELSE NULL END

		WHEN MATCHED AND @ISSUE_PLAN_QTY = 0 THEN
		    DELETE

		WHEN MATCHED THEN
		UPDATE 
		   SET ISSUE_PLAN_QTY = @ISSUE_PLAN_QTY
		     , BOX_TYPE       = #{BOX_TYPE}
		     , CAR_TYPE       = #{CAR_TYPE}
		     , TRNS_RATE      = #{TRNS_RATE}
		     , BOX_QTY        = #{BOX_QTY}
		     , LABEL_INDEX    = #{LABEL_INDEX}
		     , REMARK         = #{REMARK}
		     , DVRY_CUST_CD   = #{DVRY_CUST_CD}  --20210325 추가
		     , SAVE_IDX       = #{SAVE_IDX}      --20210325 추가
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		WHEN NOT MATCHED THEN
		    INSERT (
		          COMP_CODE
		        , DIV_CODE
		        , ISSUE_PLAN_NUM
		        , ISSUE_PLAN_DATE
		        , SEQ
		        , CUSTOM_CODE
		        , DVRY_CUST_CD
		        , ITEM_CODE
		        , ISSUE_PLAN_QTY
		        , BOX_QTY
		        , TRNS_RATE
		        , BOX_TYPE
		        , CAR_TYPE
		        , LABEL_INDEX
		        , REMARK
		        , SAVE_IDX       --20210325 추가
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		    ) VALUES (
		          #{S_COMP_CODE}
		        , #{DIV_CODE}
		        , #{ISSUE_PLAN_NUM}
		        , #{ISSUE_PLAN_DATE}
		        , #{SEQ}
		        , #{CUSTOM_CODE}
		        , #{DVRY_CUST_CD}
		        , #{ITEM_CODE}
		        , @ISSUE_PLAN_QTY
		        , #{BOX_QTY}
		        , #{TRNS_RATE}
		        , #{BOX_TYPE}
		        , #{CAR_TYPE}
		        , #{LABEL_INDEX}
		        , #{REMARK}
		        , #{SAVE_IDX}    --20210325 추가
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_USER_ID}
		        , GETDATE()
		    );
	</update>

	<update id="srq210ukrvServiceImpl.deleteDetail" parameterType="Map">
		/*srq210ukrvServiceImpl.deleteDetail1*/
		DELETE FROM SRQ210T
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND ISSUE_PLAN_NUM  = #{ISSUE_PLAN_NUM}
	</update>
</mapper>