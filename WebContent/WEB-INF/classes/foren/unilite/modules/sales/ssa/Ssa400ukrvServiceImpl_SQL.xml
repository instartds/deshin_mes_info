<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa400ukrvServiceImpl">
	<select id="ssa400ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/*ssa400ukrv.selectDetailList */
		BEGIN
		    DECLARE @COMP_CODE		NVARCHAR(08)
		          , @DIV_CODE		NVARCHAR(08)
		          , @SALE_YM		NVARCHAR(06)
		          , @CHARGE_FR_DAY	NVARCHAR(02)
		          , @CHARGE_TO_DAY	NVARCHAR(02)

		    SET @COMP_CODE		= #{S_COMP_CODE}
		    SET @DIV_CODE		= #{DIV_CODE}
		    SET @SALE_YM		= #{SALE_YM}
		    SET @CHARGE_FR_DAY	= #{CHARGE_FR_DAY}
		    SET @CHARGE_TO_DAY	= #{CHARGE_TO_DAY}

		<if test="ENTRY_YN == &quot;N&quot;">
			SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.CUSTOM_CODE
		         , D.CUSTOM_NAME
		         , RANK() OVER( PARTITION BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE
		         				ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.CHAGE_DAY ASC)
		         															AS BILL_SEQ
		         , @SALE_YM + RIGHT('0'+CONVERT(VARCHAR,A.CHAGE_DAY),2)		AS SALE_DATE
		         , A.SALE_PRSN
		         , A.CONT_MONTH
		         , ISNULL(B.CHUNGGU_CNT, 0) + 1								AS CHUNGGU_CNT
		         , A.CONT_MONTH - (ISNULL(B.CHUNGGU_CNT, 0) + 1)			AS REMAIN_CHUNGGU_CNT
		         , C.ITEM_CODE
		         , C.ITEM_NAME
		         , 1														AS SALE_Q
		         , A.MONTH_MAINT_AMT										AS SALE_P
		         --, A.MONTH_MAINT_AMT										AS SALE_AMT_O
		         ----, ROUND(A.MONTH_MAINT_AMT / 1.1,0)						AS SALE_AMT_O
		         , A1.CONT_SUPPLY_AMT 										AS SALE_AMT_O
		         --, A.MONTH_MAINT_AMT - (ROUND(A.MONTH_MAINT_AMT / 1.1,0))	AS TAX_AMT_O
		         , A1.CONT_TAX_AMT 											AS TAX_AMT_O
		         --, A.MONTH_MAINT_AMT										AS ORDER_O_TAX_O --SALE_TOT_AMT
		         , A1.CONT_TOT_AMT											AS ORDER_O_TAX_O
		         , '30'														AS ORDER_TYPE
		         , '10'														AS BILL_TYPE
		         , '13'														AS INOUT_TYPE_DETAIL
		         , '2'														AS INOUT_TYPE
		         , ''														AS INOUT_NUM
		         , 0														AS INOUT_SEQ
		         , ''														AS BILL_NUM
		         , NULL														AS BILL_SEQ
		         , C.SALE_UNIT												AS SALE_UNIT
		         , ''														AS WH_CODE
		         , '1'														AS TAX_TYPE			-- SSA110T.TAX_TYPE
		         , A.CONT_NUM												AS ORDER_NUM
		         , 1														AS ORDER_SEQ
		         , '2'														AS PRICE_YN
		         , A.DIV_CODE												AS OUT_DIV_CODE
		         , C.STOCK_UNIT
		         , 'KRW'													AS MONEY_UNIT
		         , 1														AS EXCHG_RATE_O
		         , A.TAX_IN_OUT												AS TAX_IN_OUT		-- SSA100T.TAX_TYPE
		         , D.TAX_CALC_TYPE																-- SSA100T.TAX_CALC_TYPE
		         --20200131 추가
		         , ''														AS PROJECT_NO
		         , ''														AS PJT_NAME
		      FROM       SCN100T A  WITH(NOLOCK)
		      INNER JOIN SCN110T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
		                                        AND A1.DIV_CODE  = A.DIV_CODE
		                                        AND A1.CONT_NUM  = A.CONT_NUM
		      LEFT JOIN (
		                SELECT S1.COMP_CODE, S1.DIV_CODE, S1.SALE_CUSTOM_CODE, S2.ORDER_NUM AS CONT_NUM, COUNT(1) AS CHUNGGU_CNT
		                  FROM SSA100T S1 WITH (NOLOCK)
		                  INNER JOIN SSA110T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.BILL_NUM=S2.BILL_NUM
		                 WHERE S1.COMP_CODE  = @COMP_CODE
		                   AND S1.DIV_CODE   = @DIV_CODE
		                   AND S1.ORDER_TYPE = '30'
		                   AND LEFT(S1.SALE_DATE,6) &lt; @SALE_YM
		                 GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SALE_CUSTOM_CODE, S2.ORDER_NUM
		         ) B ON A.COMP_CODE   = B.COMP_CODE
		            AND A.DIV_CODE    = B.DIV_CODE
		            AND A.CUSTOM_CODE = B.SALE_CUSTOM_CODE
		            AND A.CONT_NUM	  = B.CONT_NUM
		      LEFT JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                       AND C.ITEM_CODE = '601-AS-1111'
		      LEFT JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                       AND D.CUSTOM_CODE = A.CUSTOM_CODE
		      LEFT JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.SER_NO, B.SALE_DATE
		                   FROM      SSA110T A WITH(NOLOCK)
		                   LEFT JOIN SSA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                   AND B.DIV_CODE  = A.DIV_CODE
		                                                   AND B.BILL_NUM  = A.BILL_NUM
		                ) E  ON E.COMP_CODE         = A1.COMP_CODE
		                    AND E.DIV_CODE          = A1.DIV_CODE
		                    AND E.ORDER_NUM         = A1.CONT_NUM
		                    AND E.SER_NO            = A1.CONT_SEQ
		                    AND LEFT(E.SALE_DATE,6) = @SALE_YM
		     WHERE A.COMP_CODE  = @COMP_CODE
		       AND A.DIV_CODE   = @DIV_CODE
		       AND A.CONT_STATE = '1'
		       AND A.CONT_GUBUN = '2'
		       AND A.CONT_MONTH - ISNULL(B.CHUNGGU_CNT, 0) &gt; 0
		       AND @SALE_YM + RIGHT('0'+CONVERT(VARCHAR,A.CHAGE_DAY),2) BETWEEN A.CONT_FR_DATE AND A.CONT_TO_DATE
		       AND A.CHAGE_DAY BETWEEN @CHARGE_FR_DAY AND @CHARGE_TO_DAY
		       AND E.COMP_CODE IS NULL
		       
		    <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND A.CUSTOM_CODE 		= #{SALE_CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		       AND A.CUSTOM_CODE 		LIKE  #{SALE_CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(SALE_CUSTOM_CODE)">
		       AND D.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'			/* 거래처명  */
		    </if>
		</if>
		
		<if test="ENTRY_YN == &quot;Y&quot;">
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.SALE_CUSTOM_CODE	AS CUSTOM_CODE
		         , C1.CUSTOM_NAME
		         , A.BILL_NUM
		         , B.BILL_SEQ
		         , A.SALE_DATE
		         , A.SALE_PRSN
		         , D1.CONT_MONTH
		         , ISNULL(B1.CHUNGGU_CNT, 1)					AS CHUNGGU_CNT
		         , D1.CONT_MONTH - (ISNULL(B1.CHUNGGU_CNT, 1))	AS REMAIN_CHUNGGU_CNT
		         , B.ITEM_CODE
		         , C2.ITEM_NAME
		         , B.SALE_Q
		         , B.SALE_P
		         , B.SALE_AMT_O
		         , B.TAX_AMT_O
		         , B.SALE_LOC_AMT_I
		         , B.SALE_AMT_O + B.TAX_AMT_O					AS ORDER_O_TAX_O
		         , A.ORDER_TYPE
		         , A.BILL_TYPE
		         , B.INOUT_TYPE_DETAIL
		         , B.INOUT_TYPE
		         , B.INOUT_NUM
		         , B.INOUT_SEQ
		         , B.SALE_UNIT
		         , B.WH_CODE
		         , B.TAX_TYPE
		         , B.ORDER_NUM
		         , B.SER_NO										AS ORDER_SEQ
		         , B.PRICE_YN
		         , B.OUT_DIV_CODE
		         , C2.STOCK_UNIT
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.TAX_TYPE									AS TAX_IN_OUT
		         , A.TAX_CALC_TYPE
		         --20200131 추가
		         , B.PROJECT_NO												AS PROJECT_NO
		         , Z1.PJT_NAME												AS PJT_NAME
		      FROM       SSA100T A  WITH(NOLOCK)
		      INNER JOIN SSA110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                        AND B.DIV_CODE     = A.DIV_CODE
		                                        AND B.BILL_NUM     = A.BILL_NUM
		      LEFT JOIN (
		                SELECT S1.COMP_CODE, S1.DIV_CODE, S1.SALE_CUSTOM_CODE, S2.ORDER_NUM AS CONT_NUM, COUNT(1) AS CHUNGGU_CNT
		                  FROM SSA100T S1 WITH (NOLOCK)
		                  INNER JOIN SSA110T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.BILL_NUM=S2.BILL_NUM
		                 WHERE S1.COMP_CODE  = @COMP_CODE
		                   AND S1.DIV_CODE   = @DIV_CODE
		                   AND S1.ORDER_TYPE = '30'
		                   AND LEFT(S1.SALE_DATE,6) &lt;= @SALE_YM
		                 GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SALE_CUSTOM_CODE, S2.ORDER_NUM
		         ) B1 ON B1.COMP_CODE        = A.COMP_CODE
		             AND B1.DIV_CODE         = A.DIV_CODE
		             AND B1.SALE_CUSTOM_CODE = A.SALE_CUSTOM_CODE
		             AND B1.CONT_NUM         = B.ORDER_NUM
		      LEFT  JOIN SCN110T D2 WITH(NOLOCK) ON D2.COMP_CODE   = B.COMP_CODE
		                                        AND D2.DIV_CODE    = B.DIV_CODE
		                                        AND D2.CONT_NUM    = B.ORDER_NUM
		                                        AND D2.CONT_SEQ    = B.SER_NO
		      LEFT  JOIN SCN100T D1 WITH(NOLOCK) ON D1.COMP_CODE   = D2.COMP_CODE
		                                        AND D1.DIV_CODE    = D2.DIV_CODE
		                                        AND D1.CONT_NUM    = D2.CONT_NUM
		      INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                        AND C1.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		      INNER JOIN BPR100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                        AND C2.ITEM_CODE   = B.ITEM_CODE
		       --20200102 추가: 프로젝트명 가져오기 위해 추가
		       LEFT JOIN BCM600T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = B.COMP_CODE
		                                        AND Z1.PJT_CODE    = B.PROJECT_NO
		     WHERE A.COMP_CODE  = @COMP_CODE
		       AND A.DIV_CODE   = @DIV_CODE
		       AND A.ORDER_TYPE = '30'
		       AND @SALE_YM + RIGHT('0'+CONVERT(VARCHAR,D1.CHAGE_DAY),2) BETWEEN D1.CONT_FR_DATE AND D1.CONT_TO_DATE
		       AND D1.CHAGE_DAY BETWEEN @CHARGE_FR_DAY AND @CHARGE_TO_DAY
		       AND LEFT(A.SALE_DATE,6) = @SALE_YM
		       
		    <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND A.SALE_CUSTOM_CODE 		= #{SALE_CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		       AND A.SALE_CUSTOM_CODE 		LIKE  #{SALE_CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(SALE_CUSTOM_CODE)">
		       AND C1.CUSTOM_NAME 			LIKE '%' + #{CUSTOM_NAME} + '%'			/* 거래처명  */
		    </if>
		</if>
		END
	</select>







	<insert id="ssa400ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/*ssa400ukrvServiceImpl.insertLogMaster*/
		INSERT INTO L_SSA100T		--TAX_TYPE(포함, 별도), TAX_CALC_TYPE(개별, 통합)
		     ( KEY_VALUE		      , OPR_FLAG
		     , DIV_CODE               , BILL_NUM                , BILL_TYPE               , SALE_DATE               , SALE_CUSTOM_CODE
		     , MONEY_UNIT             , EXCHG_RATE_O            , SALE_AMT_O              , SALE_LOC_AMT_I          , SALE_LOC_EXP_I
		     , VAT_RATE               , TAX_AMT_O               , SALE_PRSN               , TAX_TYPE                , TAX_CALC_TYPE
		     , REMARK                 , CREATE_LOC              , CARD_CUST_CD
		     , AGENT_TYPE             , ORDER_TYPE              , COMP_CODE               , TEMPC_01                , TEMPN_01
		     --20200131 추가
		     , PROJECT_NO
		     , UPDATE_DB_USER         , UPDATE_DB_TIME          , INSERT_DB_USER          , INSERT_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}		      , #{SAVE_FLAG}
		     , #{DIV_CODE}            , #{BILL_NUM}             , #{BILL_TYPE}            , #{SALE_DATE}            , #{CUSTOM_CODE}
		     , #{MONEY_UNIT}          , #{EXCHG_RATE_O}         , #{SALE_AMT_O}           , #{SALE_AMT_O}           , #{TOT_SALE_EXP_O}
		     , #{VAT_RATE}            , #{TAX_AMT_O}            , #{SALE_PRSN}            , #{TAX_IN_OUT}           , #{TAX_CALC_TYPE}
		     , #{REMARK}              , '1'                     , #{CARD_CUST_CD}
		     , #{AGENT_TYPE}          , #{ORDER_TYPE}           , #{S_COMP_CODE}          , #{ORDER_NUM}            , #{BILL_SEQ} --매출번호(BILL_SEQ) 임시저장
		     --20200131 추가
		     , #{PROJECT_NO}
		     , #{S_USER_ID}           , GETDATE()               , #{S_USER_ID}            , GETDATE())
	</insert>

	<insert id="ssa400ukrvServiceImpl.insertLogDetail" parameterType="Map">
		 /*ssa400ukrvServiceImpl.insertLogDetail*/
		 INSERT INTO L_SSA110T		--TAX_TYPE(과세, 면세)
		     ( KEY_VALUE		    , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , BILL_NUM              , BILL_SEQ              , INOUT_NUM
		     , INOUT_SEQ            , INOUT_TYPE            , INOUT_TYPE_DETAIL     , ITEM_CODE             , SALE_UNIT
		     , TRANS_RATE           , SALE_Q                , SALE_P                , SALE_AMT_O            , SALE_LOC_AMT_I
		     , TAX_AMT_O            , WH_CODE               , TAX_TYPE              , DISCOUNT_RATE         , DVRY_CUST_CD
		     , ORDER_NUM            , SER_NO                , LC_NUM                , PJT_CODE
		     , PUB_NUM              , BEFORE_PUB_NUM        , TO_DIV_CODE           , PRICE_YN              , CUSTOM_CODE
		     , ORDER_PRSN           , OUT_DIV_CODE          , AS_NUM                , ADVAN_YN              , CHANGE_REASON
		     , REMARK               , PRICE_TYPE            , WGT_UNIT              , UNIT_WGT              , VOL_UNIT
		     , UNIT_VOL             , SALE_WGT_Q            , SALE_WGT_P            , SALE_FOR_WGT_P        , SALE_VOL_Q
		     , SALE_VOL_P           , SALE_FOR_VOL_P
		     --20200131 추가
		     , PROJECT_NO
			 , UPDATE_DB_USER       , UPDATE_DB_TIME        , INSERT_DB_USER        , INSERT_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}         , #{SAVE_FLAG}
		     , #{COMP_CODE}         , #{DIV_CODE}           , #{BILL_NUM}           , #{BILL_SEQ}           , #{INOUT_NUM}
		     , #{INOUT_SEQ}         , #{INOUT_TYPE}         , #{INOUT_TYPE_DETAIL}  , #{ITEM_CODE}          , #{SALE_UNIT}
		     , #{TRANS_RATE}        , #{SALE_Q}             , #{SALE_P}             , #{SALE_AMT_O}         , #{SALE_AMT_O}
		     , #{TAX_AMT_O}         , ''                    , #{TAX_TYPE}           , #{DISCOUNT_RATE}      , #{DVRY_CUST_CD}
		     , #{ORDER_NUM}         , #{ORDER_SEQ}          , #{LC_NUM}             , #{PJT_CODE}
		     , #{PUB_NUM}           , #{BEFORE_PUB_NUM}     , #{TO_DIV_CODE}        , #{PRICE_YN}           , #{CUSTOM_CODE}
		     , #{ORDER_PRSN}        , #{OUT_DIV_CODE}       , #{AS_NUM}             , #{ADVAN_YN}           , #{CHANGE_REASON}
		     , #{REMARK}            , #{PRICE_TYPE}         , #{WGT_UNIT}           , #{UNIT_WGT}           , #{VOL_UNIT}
		     , #{UNIT_VOL}          , #{SALE_WGT_Q}         , #{SALE_WGT_P}         , #{SALE_FOR_WGT_P}     , #{SALE_VOL_Q}
		     , #{SALE_VOL_P}        , #{SALE_FOR_VOL_P}
		     --20200131 추가
		     , #{PROJECT_NO}
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE())
	</insert>

	<update id="ssa400ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Ssa400ukr (
			#{KeyValue	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
<!--			{BillNum	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},  -->
			#{ErrorDesc	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<update id="ssa400ukrvServiceImpl.updateScn100t" parameterType="Map">
		IF EXISTS(
					SELECT A.CONT_MONTH-(ISNULL(B.CHUNGGU_CNT, 0) + 1)				AS REMAIN_CHUNGGU_CNT
					  FROM SCN100T A WITH (NOLOCK)
					  LEFT JOIN (
								SELECT COMP_CODE, DIV_CODE, SALE_CUSTOM_CODE, COUNT(1) AS CHUNGGU_CNT
								  FROM SSA100T WITH (NOLOCK)
								 WHERE COMP_CODE  = @COMP_CODE
								   AND DIV_CODE   = @DIV_CODE
								   AND ORDER_TYPE = '30'
								   AND LEFT(SALE_DATE,6) &lt; @SALE_YM
								 GROUP BY COMP_CODE, DIV_CODE, SALE_CUSTOM_CODE
						 ) B ON A.COMP_CODE   = B.COMP_CODE
						    AND A.DIV_CODE    = B.DIV_CODE
							AND A.CUSTOM_CODE = B.SALE_CUSTOM_CODE
				 )
			BEGIN
				UPDATE SCN100T
				   SET CONT_STATE = #{CONT_STATE}
				 WHERE COMP_CODE = #{COMP_CODE}
				   AND DIV_CODE  = #{DIV_CODE}
				   AND CONT_NUM  = #{CONT_NUM}\
			END
	</update>
</mapper>