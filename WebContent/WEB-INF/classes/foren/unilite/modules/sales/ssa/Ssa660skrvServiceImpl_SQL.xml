<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa660skrvServiceImpl">
	
	<select id="ssa660skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">		
		/* ssa660skrv.Cssa660skrv[fnSsa660QStd] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
		                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장 */
		                  , @FR_DATE            NVARCHAR(08)                /* (필수) 조회시작일 */
		                  , @TO_DATE            NVARCHAR(08)                /* (필수) 조회종료일 */
		                  , @AGENT_TYPE         NVARCHAR(08)                /* (선택) 고객분류 */
		                  , @SALE_PRSN          NVARCHAR(05)                /* (선택) 영업담당 */
		                  , @CUSTOM_CODE        NVARCHAR(08)                /* (선택) 거래처코드 */
		                  , @CUSTOM_NAME        NVARCHAR(50)                /* (선택) 거래처명 */
		                                                                     
		                  , @AREA_TYPE          NVARCHAR(03)                /* (선택) 지역 */
		                  , @BASE_MONEY         NVARCHAR(03)                /* (필수) 자사화폐단위(영업) */
		                  , @MONEY_UNIT         NVARCHAR(03)                /* (선택) 화폐단위   (무역) */
		                  , @FR_AMT             NUMERIC(30, 6)              /* (선택) 시작여신액 */
		                  , @TO_AMT             NUMERIC(30, 6)              /* (선택) 종료여신액 */
		                  , @TRADE_YN           NVARCHAR(01)                /* (필수) 무역포함여부 */
		                                                                    
		                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID */
		
		/* 변수값할당] */
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @FR_DATE            = #{FR_DATE}
		    SET @TO_DATE            = #{TO_DATE}
		    SET @AGENT_TYPE         = #{AGENT_TYPE}
		    SET @SALE_PRSN          = #{ORDER_PRSN}
		    SET @CUSTOM_CODE        = #{CUSTOM_CODE}
		    SET @CUSTOM_NAME        = #{CUSTOM_NAME}
		    
		    SET @AREA_TYPE          = #{TXT_AREA_TYPE}
		    SET @BASE_MONEY         = #{BASE_MONEY}
		    SET @MONEY_UNIT         = #{BASE_MONEY}
		    SET @FR_AMT             = CASE WHEN #{FR_AMT} = N'' THEN NULL ELSE #{FR_AMT} END
		    SET @TO_AMT             = CASE WHEN #{TO_AMT} = N'' THEN NULL ELSE #{TO_AMT} END
		    SET @TRADE_YN           = N'T'
		    
		    SET @USER_ID            = #{S_USER_ID}
		
		/* 초기화 */
		    IF @DIV_CODE = N'' OR @DIV_CODE = N'NULL' OR @DIV_CODE = N'*'
		    BEGIN
		        SELECT  TOP 0
		                CONVERT(NVARCHAR(08)  ,  '')            AS CUSTOM_CODE
		             ,  CONVERT(NVARCHAR(40)  ,  '')            AS CUSTOM_NAME
		             ,  CONVERT(NVARCHAR(03)  ,  '')            AS MONEY_UNIT
		                
		             ,  CONVERT(NUMERIC(18, 4), 0.0)            AS UN_COLLECT_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS SALE_LOC_AMT_I
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS TAX_AMT_O
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS TOT_SALE_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS CASH_COLLECT_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS NOTE_COLLECT_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS TOT_COLLECT_AMT
		             ,  CONVERT(NUMERIC(30, 6), 0.0)            AS TOT_CREDIT_AMT
		             ,  CONVERT(NUMERIC(30, 6), 0.0)            AS CREDIT_AMT
		             ,  CONVERT(NVARCHAR(10)  ,  '')            AS CREDIT_YMD
		             ,  CONVERT(NUMERIC(31, 6), 0.0)            AS SECURITY_AMT
		             ,  CONVERT(NUMERIC(18, 4), 0.0)            AS GET_NOTE_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS GET_NOTE_AMT2
		             ,  CONVERT(NUMERIC(18, 4), 0.0)            AS GRANT_UN_COLLECT_AMT
		             ,  CONVERT(NUMERIC(38, 6), 0.0)            AS CARD_AMT_O
		                
		             ,  CONVERT(NVARCHAR(05)  ,  '')            AS SALE_PRSN
		             ,  CONVERT(NVARCHAR(08)  ,  '')            AS DIV_CODE
		             ,  CONVERT(NVARCHAR(08)  ,  '')            AS AGENT_TYPE
		             ,  CONVERT(NVARCHAR(03)  ,  '')            AS AREA_TYPE
		
		        RETURN
		    END
		
		/* 명칭참조유형 */
		    DECLARE         @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜포맷유형설정 */
		    DECLARE @DateFormat         NVARCHAR(10)
		
		    SELECT  TOP 1 @DateFormat = CODE_NAME
		    FROM    BSA100T WITH (NOLOCK)
		    WHERE   COMP_CODE = @COMP_CODE
		    AND     MAIN_CODE = N'B044'
		    AND     REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터조회 */
		    SELECT  B.CUSTOM_CODE
		         ,  B.CUSTOM_NAME
		         ,  B.MONEY_UNIT
		         ,  ISNULL(B.UN_COLLECT_AMT  , 0.0)                                                                             AS UN_COLLECT_AMT       /* 전일미수 */
		         ,  ISNULL(C.SALE_AMT_O      , 0.0)                                                                             AS SALE_LOC_AMT_I       /* 매출액 */
		         ,  ISNULL(C.TAX_AMT_O       , 0.0)                                                                             AS TAX_AMT_O            /* 부가세액 */
		         ,  ISNULL(C.SALE_AMT_O      , 0.0) + ISNULL(C.TAX_AMT_O       , 0.0)                                           AS TOT_SALE_AMT         /* 매출총액 */
		         ,  ISNULL(D.CASH_COLLECT_AMT, 0.0)                                                                             AS CASH_COLLECT_AMT     /* 현금 */
		         ,  ISNULL(D.NOTE_COLLECT_AMT, 0.0)                                                                             AS NOTE_COLLECT_AMT     /* 어음 */
		         ,  ISNULL(D.CASH_COLLECT_AMT, 0.0) + ISNULL(D.NOTE_COLLECT_AMT, 0.0)                                           AS TOT_COLLECT_AMT      /* 수금계 */
		         ,  ISNULL(B.TOT_CREDIT_AMT  , 0.0)                                                                             AS TOT_CREDIT_AMT       /* 여신 */
		         ,  ISNULL(B.CREDIT_AMT      , 0.0)                                                                             AS CREDIT_AMT           /* 신용여신 */
		         ,  CASE WHEN ISNULL(B.CREDIT_YMD, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.CREDIT_YMD, 1, 4))
		                                         , 'MM',   SUBSTRING(B.CREDIT_YMD, 5, 2))
		                                         , 'DD',   SUBSTRING(B.CREDIT_YMD, 7, 2))
		            END                                                                                                         AS CREDIT_YMD            /* 신용만료일 */
		         ,  ISNULL(B.TOT_CREDIT_AMT  , 0.0) + ISNULL(B.CREDIT_AMT, 0.0)                                                 AS SECURITY_AMT          /* 여신계 */
		         ,  ISNULL(E.GET_NOTE_AMT    , 0.0)                                                                             AS GET_NOTE_AMT          /* 미도래어음(어음금액) */
		         ,  uniLITE.fnGetCredit(B.COMP_CODE, B.DIV_CODE, B.CUSTOM_CODE, @TO_DATE, ISNULL(B.MONEY_UNIT, @BASE_MONEY))
		         - (ISNULL(B.TOT_CREDIT_AMT  , 0.0) + ISNULL(B.CREDIT_AMT      , 0.0) - ISNULL(B.UN_COLLECT_AMT  , 0.0)
		          - ISNULL(C.SALE_AMT_O      , 0.0) - ISNULL(C.TAX_AMT_O       , 0.0) + ISNULL(D.CASH_COLLECT_AMT, 0.0)
		          + ISNULL(D.NOTE_COLLECT_AMT, 0.0) - ISNULL(E.GET_NOTE_AMT    , 0.0) + ISNULL(C.CARD_AMT_O      , 0.0))        AS GET_NOTE_AMT2         /* 미도래어음(인정금액) */
		         ,  UNILITE.fnGetCredit(B.COMP_CODE, B.DIV_CODE, B.CUSTOM_CODE, @TO_DATE, ISNULL(B.MONEY_UNIT, @BASE_MONEY))    AS GRANT_UN_COLLECT_AMT  /* 여신잔액 */
		         ,  ISNULL(C.CARD_AMT_O      , 0.0)                                                                             AS CARD_AMT_O            /* 카드 */
		         ,  ISNULL(B.SALE_PRSN , '')                                                                                    AS SALE_PRSN
		         ,  ISNULL(B.DIV_CODE  , '')                                                                                    AS DIV_CODE
		         ,  ISNULL(B.AGENT_TYPE, '')                                                                                    AS AGENT_TYPE
		         ,  ISNULL(B.AREA_TYPE , '')                                                                                    AS AREA_TYPE
		    FROM                    (/* 채권정보  */
		                            SELECT  A.COMP_CODE
		                                 ,  A.DIV_CODE
		                                 ,  A.CUSTOM_CODE
		                                 ,  CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
		                                         WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
		                                         ELSE D1.CUSTOM_NAME
		                                    END                                                                                                             AS CUSTOM_NAME
		                                 , D1.AGENT_TYPE
		                                 , D1.AREA_TYPE 
		                                 , D1.BUSI_PRSN                                                                                                     AS SALE_PRSN
		                                 , D1.TOT_CREDIT_AMT
		                                 ,  CASE WHEN D1.CREDIT_YMD &lt; @TO_DATE THEN 0.0 ELSE D1.CREDIT_AMT END                                              AS CREDIT_AMT
		                                 ,  CASE WHEN D1.CREDIT_YMD &lt; @TO_DATE THEN N'' ELSE D1.CREDIT_YMD END                                              AS CREDIT_YMD
		                                 ,  uniLITE.fnGetBalanceT(A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, @FR_DATE, ISNULL(A.MONEY_UNIT, @BASE_MONEY), '3') AS UN_COLLECT_AMT
		                                 ,  ISNULL(A.MONEY_UNIT, @BASE_MONEY)                                                                               AS MONEY_UNIT
		                            FROM                (
		                                                SELECT  COMP_CODE
		                                                     ,  DIV_CODE
		                                                     ,  CUSTOM_CODE
		                                                     ,  MONEY_UNIT
		                                                FROM    SAR200T     WITH (NOLOCK)
		                                                WHERE   COMP_CODE       = @COMP_CODE
		                                                AND     DIV_CODE        = @DIV_CODE
		                                                AND     MONEY_UNIT      = ISNULL(MONEY_UNIT, @BASE_MONEY)
		                                                GROUP   BY
		                                                        COMP_CODE, DIV_CODE, CUSTOM_CODE, MONEY_UNIT
		                                                ) A
		                                    INNER JOIN  BCM100T     D1 WITH (NOLOCK) ON D1.COMP_CODE        =  A.COMP_CODE  
		                                                                            AND D1.CUSTOM_CODE      =  A.CUSTOM_CODE
		                                                                            AND D1.CREDIT_YN        =  N'Y'
		                            WHERE   A.COMP_CODE             =  @COMP_CODE
		                            AND     A.DIV_CODE              =  @DIV_CODE
		                            
		                            AND  ((D1.AGENT_TYPE            =  @AGENT_TYPE               AND @AGENT_TYPE     != N'') OR (@AGENT_TYPE  = N''))
		                            AND  ((D1.BUSI_PRSN             =  @SALE_PRSN                AND @SALE_PRSN      != N'') OR (@SALE_PRSN   = N''))
		                            AND  (( A.CUSTOM_CODE        LIKE        @CUSTOM_CODE + N'%' AND @CUSTOM_CODE    != N'') OR (@CUSTOM_CODE = N''))
		                            AND  ((D1.CUSTOM_NAME        LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'0')
		                             OR   (D1.CUSTOM_NAME1       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'1')
		                             OR   (D1.CUSTOM_NAME2       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'2')
		                                OR  (@CUSTOM_NAME           = N''))
		                            AND  ((D1.AREA_TYPE             =  @AREA_TYPE                AND @AREA_TYPE      != N'') OR (@AREA_TYPE   = N''))
		                            ) B
		            FULL OUTER JOIN (/* 매출정보 */
		                            SELECT  A.COMP_CODE
		                                 ,  A.DIV_CODE
		                                 ,  A.SALE_CUSTOM_CODE                                                                              AS CUSTOM_CODE
		                                 ,  SUM(ISNULL(B.SALE_LOC_AMT_I, 0.0))                                                              AS SALE_AMT_O
		                                 ,  SUM(ISNULL(B.TAX_AMT_O     , 0.0))                                                              AS TAX_AMT_O
		                                 ,  SUM(CASE WHEN A.BILL_TYPE = N'40' THEN ISNULL(B.SALE_LOC_AMT_I, 0.0) + ISNULL(B.TAX_AMT_O, 0.0)
		                                             ELSE 0.0
		                                        END)                                                                                        AS CARD_AMT_O
		                                 ,  A.MONEY_UNIT
		                            FROM                SSA100T     A  WITH (NOLOCK)
		                                    INNER JOIN  SSA110T     B  WITH (NOLOCK) ON  B.COMP_CODE        =  A.COMP_CODE
		                                                                            AND  B.DIV_CODE         =  A.DIV_CODE
		                                                                            AND  B.BILL_NUM         =  A.BILL_NUM
		                                    INNER JOIN  BCM100T     D1 WITH (NOLOCK) ON D1.COMP_CODE        =  A.COMP_CODE
		                                                                            AND D1.CUSTOM_CODE      =  A.SALE_CUSTOM_CODE
		                            WHERE   A.COMP_CODE             =  @COMP_CODE
		                            AND     A.DIV_CODE              =  @DIV_CODE
		                            AND     A.SALE_DATE            &gt;=  @FR_DATE
		                            AND     A.SALE_DATE            &lt;=  @TO_DATE
		                            
		                            AND  ((D1.AGENT_TYPE            =  @AGENT_TYPE               AND @AGENT_TYPE     != N'') OR (@AGENT_TYPE  = N''))
		                            AND  ((D1.BUSI_PRSN             =  @SALE_PRSN                AND @SALE_PRSN      != N'') OR (@SALE_PRSN   = N''))
		                            AND  (( A.SALE_CUSTOM_CODE   LIKE        @CUSTOM_CODE + N'%' AND @CUSTOM_CODE    != N'') OR (@CUSTOM_CODE = N''))
		                            AND  ((D1.CUSTOM_NAME        LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'0')
		                             OR   (D1.CUSTOM_NAME1       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'1')
		                             OR   (D1.CUSTOM_NAME2       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'2')
		                                OR  (@CUSTOM_NAME           = N''))
		                            AND  ((D1.AREA_TYPE             =  @AREA_TYPE                AND @AREA_TYPE      != N'') OR (@AREA_TYPE   = N''))
		                            GROUP   BY 
		                                    A.COMP_CODE, A.DIV_CODE, A.SALE_CUSTOM_CODE, A.MONEY_UNIT
		                            ) C                          ON  C.COMP_CODE        =  B.COMP_CODE
		                                                        AND  C.DIV_CODE         =  B.DIV_CODE
		                                                        AND  C.CUSTOM_CODE      =  B.CUSTOM_CODE
		                                                        AND  C.MONEY_UNIT       =  B.MONEY_UNIT
		            FULL OUTER JOIN (/* 수금정보 */
		                            SELECT  A.COMP_CODE
		                                 ,  A.DIV_CODE
		                                 ,  A.CUSTOM_CODE
		                                 ,  SUM(CASE M1.COLLECT_TYPE WHEN N'30' THEN 0.0
		                                                             WHEN N'71' THEN 0.0
		                                                             ELSE ISNULL(A.COLLECT_AMT, 0.0)
		                                        END)                                                            AS CASH_COLLECT_AMT
		                                 ,  SUM(CASE M1.COLLECT_TYPE WHEN N'30' THEN ISNULL(A.COLLECT_AMT, 0.0)
		                                                             WHEN N'71' THEN ISNULL(A.COLLECT_AMT, 0.0)
		                                                             ELSE 0.0
		                                        END)                                                            AS NOTE_COLLECT_AMT
		                                 ,  A.MONEY_UNIT
		                            FROM                SCO100T     A  WITH (NOLOCK)
		                                    INNER JOIN  (
		                                                SELECT  COMP_CODE
		                                                     ,  DIV_CODE
		                                                     ,  CUSTOM_CODE
		                                                     ,  MONEY_UNIT
		                                                     ,  MAX(BASIS_YYYYMM) AS BASIS_YYYYMM
		                                                FROM    SAR200T     WITH (NOLOCK)
		                                                WHERE   COMP_CODE       =  @COMP_CODE
		                                                AND     BASIS_YYYYMM   &lt;=  SUBSTRING(@TO_DATE, 1, 6)
		                                                GROUP   BY
		                                                        COMP_CODE, CUSTOM_CODE, DIV_CODE, MONEY_UNIT
		                                                ) B                          ON  B.COMP_CODE        =  A.COMP_CODE
		                                                                            AND  B.DIV_CODE         =  A.DIV_CODE
		                                                                            AND  B.CUSTOM_CODE      =  A.CUSTOM_CODE
		                                                                            AND  B.MONEY_UNIT       =  A.MONEY_UNIT
		                                    INNER JOIN  BCM100T     D1 WITH (NOLOCK) ON D1.COMP_CODE        =  A.COMP_CODE
		                                                                            AND D1.CUSTOM_CODE      =  A.CUSTOM_CODE
		                                    INNER JOIN  (
		                                                SELECT  COMP_CODE
		                                                     ,  SUB_CODE
		                                                     ,  CASE WHEN ISNULL(REF_CODE1, '') = '' THEN SUB_CODE ELSE REF_CODE1 END   AS COLLECT_TYPE
		                                                FROM    BSA100T     WITH (NOLOCK)
		                                                WHERE   COMP_CODE       =  @COMP_CODE
		                                                AND     MAIN_CODE       =  N'S017'
		                                                AND     SUB_CODE       !=  N'$' 
		                                                ) M1                         ON M1.COMP_CODE        =  A.COMP_CODE
		                                                                            AND M1.SUB_CODE         =  A.COLLECT_TYPE
		                                                                            AND M1.COLLECT_TYPE    !=  N'80'
		                            WHERE   A.COMP_CODE             =  @COMP_CODE
		                            AND     A.DIV_CODE              =  @DIV_CODE
		                            AND     A.COLLECT_DATE         &gt;=  @FR_DATE
		                            AND     A.COLLECT_DATE         &lt;=  @TO_DATE
		                            AND    (A.DISHONOR_DATE        IS  NULL
		                                OR  A.DISHONOR_DATE         =  N'')
		                            
		                            AND  ((D1.AGENT_TYPE            =  @AGENT_TYPE               AND @AGENT_TYPE     != N'') OR (@AGENT_TYPE  = N''))
		                            AND  ((D1.BUSI_PRSN             =  @SALE_PRSN                AND @SALE_PRSN      != N'') OR (@SALE_PRSN   = N''))
		                            AND  (( A.CUSTOM_CODE        LIKE        @CUSTOM_CODE + N'%' AND @CUSTOM_CODE    != N'') OR (@CUSTOM_CODE = N''))
		                            AND  ((D1.CUSTOM_NAME        LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'0')
		                             OR   (D1.CUSTOM_NAME1       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'1')
		                             OR   (D1.CUSTOM_NAME2       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'2')
		                                OR  (@CUSTOM_NAME           = N''))
		                            AND  ((D1.AREA_TYPE             =  @AREA_TYPE                AND @AREA_TYPE      != N'') OR (@AREA_TYPE   = N''))
		                            GROUP   BY 
		                                    A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.MONEY_UNIT
		                            ) D                          ON  D.COMP_CODE        =  B.COMP_CODE
		                                                        AND  D.DIV_CODE         =  B.DIV_CODE
		                                                        AND  D.CUSTOM_CODE      =  B.CUSTOM_CODE
		                                                        AND  D.MONEY_UNIT       =  B.MONEY_UNIT
		            FULL OUTER JOIN (/* 어음정보 */
		                            SELECT  A.COMP_CODE
		                                 ,  A.CUSTOM_CODE
		                                 ,  CASE WHEN @TRADE_YN = N'S'  /* 무역미포함(자사화폐인경우만조회) */
		                                              THEN uniLITE.fnGetCollect(A.COMP_CODE, @DIV_CODE, A.CUSTOM_CODE, @TO_DATE, @BASE_MONEY, 'S')
		                                         WHEN @TRADE_YN = N'T'
		                                              THEN uniLITE.fnGetCollect(A.COMP_CODE, @DIV_CODE, A.CUSTOM_CODE, @TO_DATE, @BASE_MONEY, 'C')
		                                         ELSE 0.0
		                                    END                                                                                                     AS GET_NOTE_AMT
		                                 ,  @BASE_MONEY                                                                                             AS MONEY_UNIT 
		                            FROM    BCM100T     A  WITH (NOLOCK)
		                            WHERE   A.COMP_CODE             =  @COMP_CODE
		                            AND     A.CREDIT_YN             =  N'Y'
		                           
		                            AND  (( A.AGENT_TYPE            =  @AGENT_TYPE               AND @AGENT_TYPE     != N'') OR (@AGENT_TYPE  = N''))
		                            AND  (( A.BUSI_PRSN             =  @SALE_PRSN                AND @SALE_PRSN      != N'') OR (@SALE_PRSN   = N''))
		                            AND  (( A.CUSTOM_CODE        LIKE        @CUSTOM_CODE + N'%' AND @CUSTOM_CODE    != N'') OR (@CUSTOM_CODE = N''))
		                            AND  (( A.CUSTOM_NAME        LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'0')
		                             OR   ( A.CUSTOM_NAME1       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'1')
		                             OR   ( A.CUSTOM_NAME2       LIKE N'%' + @CUSTOM_NAME + N'%' AND @CUSTOM_NAME    != N'' AND  @RefItem     = N'2')
		                                OR  (@CUSTOM_NAME           = N''))
		                            AND  (( A.AREA_TYPE             =  @AREA_TYPE                AND @AREA_TYPE      != N'') OR (@AREA_TYPE   = N''))
		                            ) E                          ON  E.COMP_CODE        =  B.COMP_CODE
		                                                        AND  E.CUSTOM_CODE      =  B.CUSTOM_CODE
		                                                        AND  E.MONEY_UNIT       =  B.MONEY_UNIT
		    WHERE   B.COMP_CODE         =  @COMP_CODE
		    AND     B.DIV_CODE          =  @DIV_CODE
		    
		    AND   ((ISNULL(B.TOT_CREDIT_AMT  , 0.0) + ISNULL(B.CREDIT_AMT  , 0.0) - ISNULL(B.UN_COLLECT_AMT  , 0.0)
		          - ISNULL(C.SALE_AMT_O      , 0.0) - ISNULL(C.TAX_AMT_O   , 0.0) + ISNULL(D.CASH_COLLECT_AMT, 0.0)
		          + ISNULL(D.NOTE_COLLECT_AMT, 0.0) - ISNULL(E.GET_NOTE_AMT, 0.0) + ISNULL(C.CARD_AMT_O      , 0.0) &gt;= @FR_AMT AND @FR_AMT IS NOT NULL) OR (@FR_AMT IS NULL))
		    AND   ((ISNULL(B.TOT_CREDIT_AMT  , 0.0) + ISNULL(B.CREDIT_AMT  , 0.0) - ISNULL(B.UN_COLLECT_AMT  , 0.0)
		          - ISNULL(C.SALE_AMT_O      , 0.0) - ISNULL(C.TAX_AMT_O   , 0.0) + ISNULL(D.CASH_COLLECT_AMT, 0.0)
		          + ISNULL(D.NOTE_COLLECT_AMT, 0.0) - ISNULL(E.GET_NOTE_AMT, 0.0) + ISNULL(C.CARD_AMT_O      , 0.0) &lt;= @FR_AMT AND @FR_AMT IS NOT NULL) OR (@FR_AMT IS NULL))
		    
		    AND   ((B.MONEY_UNIT        =  @BASE_MONEY AND @TRADE_YN = N'S')    /* 무역미포함(자사화폐인경우만조회) */
		        OR (B.MONEY_UNIT        =  @MONEY_UNIT AND @TRADE_YN = N'T' AND @MONEY_UNIT != N'') OR (@MONEY_UNIT = N''))
		    ORDER   BY
		            B.CUSTOM_NAME, B.MONEY_UNIT
		
		
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END

	


    </select>	
	
</mapper>