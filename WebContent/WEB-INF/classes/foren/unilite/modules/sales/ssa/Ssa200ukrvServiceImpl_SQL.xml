<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa200ukrvServiceImpl">
	
	<select id="ssa200ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* ssa200ukrv.Cssa200ukrv[fnSsa200QStd] Query01 */
		
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		
		/* 1. (파라메터)변수 선언 */    
		    DECLARE @COMP_CODE              NVARCHAR(20)        /* (필수) 법인코드 */
				  , @USER_ID                NVARCHAR(100)        /* (필수) 사용자ID */
				  , @LANG_TYPE				NVARCHAR(2)			/* 언어구분 */
				  , @DIV_CODE               NVARCHAR(20)        /* (필수) 사업장 번호 */
		          , @FR_DATE                NVARCHAR(08)        /* (선택) FROM 매출일 */
		          , @TO_DATE                NVARCHAR(08)        /* (선택) TO   매출일 */
		          , @CUSTOM_CODE            NVARCHAR(40)        /* (선택) 거래처코드 */
		          , @CUSTOM_NAME            NVARCHAR(100)       /* (선택) 거래처명 */
		          , @SALE_PRSN              NVARCHAR(10)        /* (선택) 영업담당 */
		          , @CREATE_LOC             NVARCHAR(02)        /* (선택) 생성경로 */
		          , @ITEM_CODE              NVARCHAR(40)        /* (선택) 품목코드 */
		          , @ITEM_NAME              NVARCHAR(200)       /* (선택) 품목명 */
		          
		          
		    SET @COMP_CODE       = #{S_COMP_CODE}
		    SET @DIV_CODE        = #{DIV_CODE}
		    SET @FR_DATE         = #{FR_SALE_DATE}
		    SET @TO_DATE         = #{TO_SALE_DATE}
		    SET @CUSTOM_CODE     = #{CUSTOM_CODE}
		    SET @CUSTOM_NAME     = #{CUSTOM_NAME}
		    SET @SALE_PRSN       = #{SALE_PRSN}
		    SET @CREATE_LOC      = #{CREATE_LOC}
		    SET @ITEM_CODE       = #{ITEM_CODE}
		    SET @ITEM_NAME       = #{ITEM_NAME}
		    SET @USER_ID         = #{S_USER_ID}
		
		/* 2. 명칭 조회 유형 설정 */
		    DECLARE @REF_ITEM            NVARCHAR(01)
		
		    SELECT TOP 1 @REF_ITEM = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @REF_ITEM = ISNULL(@REF_ITEM, '')
		    DECLARE       @DATE_FORMAT       NVARCHAR(10)
		
		    SELECT TOP 1 @DATE_FORMAT = M1.CODE_NAME
		    FROM   BSA100T M1 WITH (NOLOCK)
		    WHERE  M1.COMP_CODE = @COMP_CODE
		    AND    M1.MAIN_CODE = 'B044'
		    AND    M1.REF_CODE1 = 'Y'
		    
		    SET @DATE_FORMAT = ISNULL(@DATE_FORMAT, 'YYYY/MM/DD')
		
		/* 3. 데이타 조회 */
		    SELECT  
		           A.COMP_CODE                                                          AS COMP_CODE
		         , A.DIV_CODE                                                           AS DIV_CODE
		         , A.CUSTOM_CODE                                                        AS CUSTOM_CODE
		         , A.CUSTOM_NAME                                                        AS CUSTOM_NAME
		         , A.SALE_DATE                                                          AS SALE_DATE
		         , A.SALE_PRSN                                                          AS SALE_PRSN
		         , A.CREATE_LOC                                                         AS CREATE_LOC
		         , A.BILL_NUM                                                           AS BILL_NUM
		         , A.BILL_SEQ                                                           AS BILL_SEQ
		         , A.ITEM_CODE                                                          AS ITEM_CODE
		         , A.ITEM_NAME                                                          AS ITEM_NAME
		         , A.SPEC                                                               AS SPEC
		         , A.SALE_UNIT                                                          AS SALE_UNIT
		         , ISNULL(A.SALE_Q, 0)                                                  AS SALE_Q
		         , ISNULL(A.QUANTITY, 0)                                                AS QUANTITY
		         , A.WGT_UNIT                                                           AS WGT_UNIT
		         , ISNULL(A.UNIT_WGT, 0)                                                AS UNIT_WGT
		         , ISNULL(A.SALE_WGT_Q, 0)                                              AS SALE_WGT_Q
		         , A.SALE_FOR_WGT_P                                                     AS SALE_FOR_WGT_P
		         , A.VOL_UNIT                                                           AS VOL_UNIT
		         , ISNULL(A.UNIT_VOL, 0)                                                AS UNIT_VOL
		         , ISNULL(A.SALE_VOL_Q, 0)                                              AS SALE_VOL_Q
		         , A.SALE_FOR_VOL_P                                                     AS SALE_FOR_VOL_P
		         , A.SALE_LOC_AMT_I                                                     AS SALE_LOC_AMT_I
		         , A.TAX_AMT_O                                                          AS TAX_AMT_O
		         , A.TOT_SALE_AMT_O                                                     AS TOT_SALE_AMT_O
		    FROM   (
		            SELECT   
		                      A1.COMP_CODE                                                         AS COMP_CODE
		                    , A1.DIV_CODE                                                          AS DIV_CODE
		                    , B1.CUSTOM_CODE                                                       AS CUSTOM_CODE
		                    , CASE WHEN @REF_ITEM = '1' THEN B1.CUSTOM_NAME
		                           WHEN @REF_ITEM = '2' THEN B1.CUSTOM_NAME1
		                           WHEN @REF_ITEM = '3' THEN B1.CUSTOM_NAME2
		                                               ELSE B1.CUSTOM_NAME
		                      END                                                                  AS CUSTOM_NAME
		                    , REPLACE(
		                      REPLACE(
		                      REPLACE(@DATE_FORMAT, 'YYYY', SUBSTRING(A1.SALE_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A1.SALE_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A1.SALE_DATE, 7, 2))          AS SALE_DATE
		                    , A1.SALE_PRSN                                                         AS SALE_PRSN
		                    , A2.BILL_NUM                                                          AS BILL_NUM
		                    , A2.BILL_SEQ                                                          AS BILL_SEQ
		                    , B3.ITEM_CODE                                                         AS ITEM_CODE
		                    , CASE WHEN @REF_ITEM = '1' THEN B3.ITEM_NAME
		                           WHEN @REF_ITEM = '2' THEN B3.ITEM_NAME1
		                           WHEN @REF_ITEM = '3' THEN B3.ITEM_NAME2
		                                               ELSE B3.ITEM_NAME
		                      END                                                                  AS ITEM_NAME
		                    , B3.SPEC                                                              AS SPEC
		                    , A2.SALE_UNIT                                                         AS SALE_UNIT
		                    , ISNULL(A2.SALE_Q, 0)                                                 AS SALE_Q
		                    , ISNULL(A2.SALE_Q, 0) - ISNULL(C1.SALE_Q, 0)                          AS QUANTITY
		                    , A2.WGT_UNIT                                                          AS WGT_UNIT                   /* 중량단위 */
		                    , ISNULL(A2.UNIT_WGT, 0)                                               AS UNIT_WGT                   /* 단위중량 */
		                    , ISNULL(A2.SALE_WGT_Q, 0)                                             AS SALE_WGT_Q                 /* 중량수량 */
		                    , A2.SALE_FOR_WGT_P                                                    AS SALE_FOR_WGT_P             /* 중량단가 */
		                    , A2.VOL_UNIT                                                          AS VOL_UNIT                   /* 부피단위 */
		                    , ISNULL(A2.UNIT_VOL, 0)                                               AS UNIT_VOL                   /* 단위부피 */
		                    , ISNULL(A2.SALE_VOL_Q, 0)                                             AS SALE_VOL_Q                 /* 부피수량 */
		                    , A2.SALE_FOR_VOL_P                                                    AS SALE_FOR_VOL_P             /* 부피단가 */
		                    , A2.SALE_LOC_AMT_I                                                    AS SALE_LOC_AMT_I
		                    , A2.TAX_AMT_O                                                         AS TAX_AMT_O
		                    , (A2.SALE_LOC_AMT_I + A2.TAX_AMT_O)                                   AS TOT_SALE_AMT_O
		                    , '1'                                                                  AS CREATE_LOC
		            FROM               SSA100T AS A1 WITH(NOLOCK)
		                    INNER JOIN SSA110T AS A2 WITH(NOLOCK) ON  A2.COMP_CODE    = A1.COMP_CODE
		                                                          AND A2.DIV_CODE     = A1.DIV_CODE
		                                                          AND A2.BILL_NUM     = A1.BILL_NUM
		                    INNER JOIN BCM100T AS B1 WITH(NOLOCK) ON  B1.COMP_CODE    = A1.COMP_CODE
		                                                          AND B1.CUSTOM_CODE  = A1.SALE_CUSTOM_CODE
		                    INNER JOIN BPR100T AS B3 WITH(NOLOCK) ON  B3.COMP_CODE    = A2.COMP_CODE
		                                                          AND B3.ITEM_CODE    = A2.ITEM_CODE
		                    INNER JOIN BSA100T AS B2 WITH(NOLOCK) ON  B2.COMP_CODE    = A1.COMP_CODE
		                                                          AND B2.MAIN_CODE    = N'S002'
		                                                          AND B2.SUB_CODE     = A1.ORDER_TYPE
		                    LEFT  JOIN (
		                                SELECT 
		                                       C1.COMP_CODE              AS COMP_CODE
		                                     , C1.DIV_CODE               AS DIV_CODE
		                                     , C1.BILL_NUM               AS BILL_NUM
		                                     , C1.BILL_SEQ               AS BILL_SEQ
		                                     , SUM(ISNULL(C1.SALE_Q, 0)) AS SALE_Q
		                                FROM   SSA200T AS C1 WITH(NOLOCK)
		                                WHERE  C1.COMP_CODE = @COMP_CODE
		                                AND    C1.DIV_CODE  = @DIV_CODE
		                                GROUP  BY C1.COMP_CODE, C1.DIV_CODE, C1.BILL_NUM, C1.BILL_SEQ
		                                ) AS C1 ON  C1.COMP_CODE = A2.COMP_CODE
		                                        AND C1.DIV_CODE  = A2.DIV_CODE
		                                        AND C1.BILL_NUM  = A2.BILL_NUM
		                                        AND C1.BILL_SEQ  = A2.BILL_SEQ
		            WHERE    A1.COMP_CODE        = @COMP_CODE
		            AND      A1.DIV_CODE         = @DIV_CODE
		            AND      B2.REF_CODE5        = N'Y'
		            AND    ((A1.SALE_DATE       &gt;= @FR_DATE              AND @FR_DATE         != '') OR (@FR_DATE         = ''))
		            AND    ((A1.SALE_DATE       &lt;= @TO_DATE              AND @TO_DATE         != '') OR (@TO_DATE         = ''))
		            AND    ((B1.CUSTOM_CODE   LIKE @CUSTOM_CODE + '%'    AND @CUSTOM_CODE     != '') OR (@CUSTOM_CODE     = ''))
		            AND    ((
		                    (B1.CUSTOM_NAME   LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '0')
		            OR      (B1.CUSTOM_NAME1  LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '1')
		            OR      (B1.CUSTOM_NAME2  LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '2'))
		            OR      (@CUSTOM_NAME        = ''))
		            AND    ((B3.ITEM_CODE     LIKE @ITEM_CODE   + '%'    AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))
		            AND    ((
		                    (B3.ITEM_NAME     LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '0')
		            OR      (B3.ITEM_NAME1    LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '1')
		            OR      (B3.ITEM_NAME2    LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '2'))
		            OR      (@ITEM_NAME          = ''))
		
		            UNION ALL
		
		            SELECT    
		                      A1.COMP_CODE                                                         AS COMP_CODE
		                    , A1.DIV_CODE                                                          AS DIV_CODE
		                    , B1.CUSTOM_CODE                                                       AS CUSTOM_CODE
		                    , CASE WHEN @REF_ITEM = '1' THEN B1.CUSTOM_NAME
		                           WHEN @REF_ITEM = '2' THEN B1.CUSTOM_NAME1
		                           WHEN @REF_ITEM = '3' THEN B1.CUSTOM_NAME2
		                                               ELSE B1.CUSTOM_NAME
		                      END                                                                  AS CUSTOM_NAME
		                    , REPLACE(
		                      REPLACE(
		                      REPLACE(@DATE_FORMAT, 'YYYY', SUBSTRING(A1.ACCEPT_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A1.ACCEPT_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A1.ACCEPT_DATE, 7, 2))        AS SALE_DATE
		                    , A1.EXPORT_NM                                                         AS SALE_PRSN
		                    , A2.ACCEPT_NO                                                         AS BILL_NUM
		                    , A2.ACCEPT_SEQ                                                        AS BILL_SEQ
		                    , B3.ITEM_CODE                                                         AS ITEM_CODE
		                    , CASE WHEN @REF_ITEM = '1' THEN B3.ITEM_NAME
		                           WHEN @REF_ITEM = '2' THEN B3.ITEM_NAME1
		                           WHEN @REF_ITEM = '3' THEN B3.ITEM_NAME2
		                                               ELSE B3.ITEM_NAME
		                      END                                                                  AS ITEM_NAME
		                    , B3.SPEC                                                              AS SPEC
		                    , A2.UNIT                                                              AS SALE_UNIT
		                    , ISNULL(A2.QTY, 0)                                                    AS SALE_Q
		                    , ISNULL(A2.QTY, 0) - ISNULL(C1.SALE_Q, 0)                             AS QUANTITY
		                    , A2.WGT_UNIT                                                          AS WGT_UNIT                   /* 중량단위 */
		                    , ISNULL(A2.UNIT_WGT, 0)                                               AS UNIT_WGT                   /* 단위중량 */
		                    , ISNULL(A2.WGT_QTY, 0)                                                AS SALE_WGT_Q                 /* 중량수량 */
		                    , A2.WGT_PRICE                                                         AS SALE_FOR_WGT_P             /* 중량단가 */
		                    , A2.VOL_UNIT                                                          AS VOL_UNIT                   /* 부피단위 */
		                    , ISNULL(A2.UNIT_VOL, 0)                                               AS UNIT_VOL                   /* 단위부피 */
		                    , ISNULL(A2.VOL_QTY, 0)                                                AS SALE_VOL_Q                 /* 부피수량 */
		                    , A2.VOL_PRICE                                                         AS SALE_FOR_VOL_P             /* 부피단가 */
		                    , A2.ACCEPT_AMT_WON                                                    AS SALE_LOC_AMT_I
		                    , 0                                                                    AS TAX_AMT_O
		                    , A2.ACCEPT_AMT_WON                                                    AS TOT_SALE_AMT_O
		                    , '5'                                                                  AS CREATE_LOC
		            FROM               TEC120T AS A1 WITH(NOLOCK)
		                    INNER JOIN TEC130T AS A2 WITH(NOLOCK) ON  A2.COMP_CODE    = A1.COMP_CODE
		                                                          AND A2.DIV_CODE     = A1.DIV_CODE
		                                                          AND A2.ACCEPT_NO    = A1.ACCEPT_NO
		                    INNER JOIN BCM100T AS B1 WITH(NOLOCK) ON  B1.COMP_CODE    = A1.COMP_CODE
		                                                          AND B1.CUSTOM_CODE  = A1.APPLICANT
		                    INNER JOIN BPR100T AS B3 WITH(NOLOCK) ON  B3.COMP_CODE    = A2.COMP_CODE
		                                                          AND B3.ITEM_CODE    = A2.ITEM_CODE
		                    INNER JOIN BSA100T AS B2 WITH(NOLOCK) ON  B2.COMP_CODE    = A1.COMP_CODE
		                                                          AND B2.MAIN_CODE    = N'T114'
		                                                          AND B2.SUB_CODE     = A1.SALE_TYPE
		                    LEFT  JOIN (
		                                SELECT 
		                                       C1.COMP_CODE              AS COMP_CODE
		                                     , C1.DIV_CODE               AS DIV_CODE
		                                     , C1.BILL_NUM               AS BILL_NUM
		                                     , C1.BILL_SEQ               AS BILL_SEQ
		                                     , SUM(ISNULL(C1.SALE_Q, 0)) AS SALE_Q
		                                FROM   SSA200T AS C1 WITH(NOLOCK)
		                                WHERE  C1.COMP_CODE = @COMP_CODE
		                                AND    C1.DIV_CODE  = @DIV_CODE
		                                GROUP  BY C1.COMP_CODE, C1.DIV_CODE, C1.BILL_NUM, C1.BILL_SEQ
		                                ) AS C1 ON  C1.COMP_CODE = A2.COMP_CODE
		                                        AND C1.DIV_CODE  = A2.DIV_CODE
		                                        AND C1.BILL_NUM  = A2.ACCEPT_NO
		                                        AND C1.BILL_SEQ  = A2.ACCEPT_SEQ
		            WHERE    A1.COMP_CODE        = @COMP_CODE
		            AND      A1.DIV_CODE         = @DIV_CODE
		            AND      B2.REF_CODE5        = N'Y'
		            AND    ((A1.ACCEPT_DATE     &gt;= @FR_DATE              AND @FR_DATE         != '') OR (@FR_DATE         = ''))
		            AND    ((A1.ACCEPT_DATE     &lt;= @TO_DATE              AND @TO_DATE         != '') OR (@TO_DATE         = ''))
		            AND    ((B1.CUSTOM_CODE   LIKE @CUSTOM_CODE + '%'    AND @CUSTOM_CODE     != '') OR (@CUSTOM_CODE     = ''))
		            AND    ((
		                    (B1.CUSTOM_NAME   LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '0')
		            OR      (B1.CUSTOM_NAME1  LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '1')
		            OR      (B1.CUSTOM_NAME2  LIKE @CUSTOM_NAME + '%'    AND @CUSTOM_NAME     != '' AND  @REF_ITEM         = '2'))
		            OR      (@CUSTOM_NAME        = ''))
		            AND    ((B3.ITEM_CODE     LIKE @ITEM_CODE   + '%'    AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))
		            AND    ((
		                     (B3.ITEM_NAME    LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '0')
		            OR       (B3.ITEM_NAME1   LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '1')
		            OR       (B3.ITEM_NAME2   LIKE @ITEM_NAME   + '%'    AND @ITEM_NAME       != '' AND  @REF_ITEM         = '2'))
		            OR       (@ITEM_NAME         = ''))
		           ) AS A
		    WHERE  ((A.CREATE_LOC = @CREATE_LOC  AND @CREATE_LOC != '') OR (@CREATE_LOC = ''))
		    AND    ((A.SALE_PRSN  = @SALE_PRSN   AND @SALE_PRSN  != '') OR (@SALE_PRSN  = ''))
		    ORDER  BY A.CUSTOM_CODE, A.SALE_DATE, A.SALE_PRSN, A.CREATE_LOC, A.BILL_NUM, A.BILL_SEQ
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>
	
	<select id="ssa200ukrvServiceImpl.detailList" parameterType="Map" resultType="rMap">
		/* ssa200ukrv.Cssa200ukrv[fnSsa200QStd2] Query01 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
				
			DECLARE   @CompCode		NVARCHAR(08)	/* 법인코드  */
					, @UserId		NVARCHAR(100)	/* 사용자ID */
					, @LangType		NVARCHAR(2)		/* 언어구분 */
				    , @RefItem		NVARCHAR(01)
				    , @DateFormat	NVARCHAR(10)
				
			SET @CompCode = #{S_COMP_CODE} 
			SET @UserId   = #{S_USER_ID}   
			SET @LangType = #{S_LANG_CODE} 
				
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
				FROM BSA300T WITH (NOLOCK)
				WHERE USER_ID = @UserId
				
			SET @RefItem = ISNULL(@RefItem, N'0')
				
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
				FROM BSA100T WITH (NOLOCK)
				WHERE COMP_CODE = @CompCode
				AND MAIN_CODE = N'B044'
				AND REF_CODE1 = N'Y'
				
			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
			/* 데이타 조회 */
		    SELECT  
		           A.COMP_CODE                                                          AS COMP_CODE
		         , A.DIV_CODE                                                           AS DIV_CODE
		         , B1.ITEM_CODE                                                         AS ITEM_CODE
		         , CASE WHEN @RefItem = '1' THEN B1.ITEM_NAME    
		                WHEN @RefItem = '2' THEN B1.ITEM_NAME1    
		                WHEN @RefItem = '3' THEN B1.ITEM_NAME2    
		                                    ELSE B1.ITEM_NAME    
		           END                                                                  AS ITEM_NAME
		         , B1.SPEC                                                              AS SPEC
		         , CAST(0 AS BIT)                                                       AS CHOICE
		         , A.INOUT_NUM                                                          AS INOUT_NUM
		         , A.INOUT_SEQ                                                          AS INOUT_SEQ
		         , REPLACE(
		           REPLACE(
		           REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                              , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                              , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))          AS INOUT_DATE
		         , A.ORDER_UNIT                                                         AS ORDER_UNIT
		         , (A.ORDER_UNIT_Q - A.ACCOUNT_Q)                                       AS NOT_SALE_Q
		         , A.ORDER_UNIT_Q                                                       AS ORDER_UNIT_Q
		         , A.ORDER_UNIT_P                                                       AS ORDER_UNIT_P
		
		         , A.WGT_UNIT                                                           AS WGT_UNIT
		         , A.UNIT_WGT                                                           AS UNIT_WGT
		         , ISNULL((A.ORDER_UNIT_Q - A.ACCOUNT_Q) * A.UNIT_WGT, 0)               AS INOUT_WGT_Q
		         , A.INOUT_FOR_WGT_P                                                    AS INOUT_FOR_WGT_P
		         , A.VOL_UNIT                                                           AS VOL_UNIT
		         , A.UNIT_VOL                                                           AS UNIT_VOL
		         , ISNULL((A.ORDER_UNIT_Q - A.ACCOUNT_Q) * A.UNIT_VOL, 0)               AS INOUT_VOL_Q
		         , A.INOUT_FOR_VOL_P                                                    AS INOUT_FOR_VOL_P
		         , A1.BILL_NUM                                                          AS BILL_NUM
		         , A1.BILL_SEQ                                                          AS BILL_SEQ
		         , #{CREATE_LOC}                                                        AS CREATE_LOC
		    FROM              BTR100T AS A  WITH (NOLOCK)
		           INNER JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                                 AND M1.MAIN_CODE   = 'S007'
		                                                 AND M1.SUB_CODE    = A.INOUT_TYPE_DETAIL
		           INNER JOIN BPR100T AS B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                                 AND B1.ITEM_CODE   = A.ITEM_CODE
		           LEFT  JOIN SSA200T AS A1 WITH(NOLOCK)  ON A1.COMP_CODE   = A.COMP_CODE
		                                                 AND A1.DIV_CODE    = A.DIV_CODE
		                                                 AND A1.INOUT_NUM   = A.INOUT_NUM
		                                                 AND A1.INOUT_SEQ   = A.INOUT_SEQ
		    WHERE  A.COMP_CODE          = #{S_COMP_CODE}
		    AND    A.DIV_CODE           = #{DIV_CODE}
		    AND    A.SALE_CUSTOM_CODE   = #{CUSTOM_CODE}
		    AND    A.ITEM_CODE          = #{ITEM_CODE}
		    AND    A.ACCOUNT_YNC        = 'N'
		    AND    A.INOUT_CODE_TYPE    = '4'
		    AND    M1.REF_CODE5         = 'Y'
		    AND    A.CREATE_LOC         = #{CREATE_LOC}
		    AND    #{CALCULATE_YN}      = CASE WHEN ISNULL(A1.BILL_NUM, '') = '' THEN 'N' ELSE 'Y' END
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>
    
	<select id="ssa200ukrvServiceImpl.insertTypeN" parameterType="Map" resultType="rMap">
		/* s_str130ukrv_im.Cstr130ukrv[fnSsa200Save] Query3-01 */
		BEGIN TRY
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		    
		 /* 파라메터변수 선언 */
		    BEGIN  
		
		        DECLARE @COMP_CODE              NVARCHAR(20)        /*(필수) 법인코드 */
		              , @DIV_CODE               NVARCHAR(20)        /*(필수) 사업장 번호 */
		              , @BILL_NUM               NVARCHAR(20)        /*(필수) 매출번호 */
		              , @BILL_SEQ               NUMERIC(4, 0)       /*(필수) 매출순번 */
		              , @INOUT_NUM              NVARCHAR(20)        /*(필수) 수불번호 */
		              , @INOUT_SEQ              NUMERIC(4, 0)       /*(필수) 수불순번 */
		              , @ITEM_CODE              NVARCHAR(40)        /*(필수) 품목코드 */
		              , @INOUT_Q                NUMERIC(36, 6)      /*(필수) 수불량 */
		              , @CREATE_LOC             NVARCHAR(02)        /*(필수) 구분(1:영업, 5:무역) */
		              , @USER_ID                NVARCHAR(100)        /*(필수) 사용자ID */
					  , @LANG_CODE				NVARCHAR(02)
		          
		        SET @COMP_CODE       = #{S_COMP_CODE}
		        SET @DIV_CODE        = #{MDIV_CODE}
		        SET @BILL_NUM        = #{MBILL_NUM}
		        SET @BILL_SEQ        = #{MBILL_SEQ}
		        SET @INOUT_NUM       = #{INOUT_NUM}
		        SET @INOUT_SEQ       = #{INOUT_SEQ}
		        SET @ITEM_CODE       = #{ITEM_CODE}
		        SET @INOUT_Q         = #{ORDER_UNIT_Q}
		        SET @CREATE_LOC      = #{MCREATE_LOC}
		        SET @USER_ID         = #{S_USER_ID}
				SET @LANG_CODE		 = #{S_LANG_CODE}
		    
		        DECLARE @ErrorCode              NVARCHAR(20)        /* Error Code */
		              , @ErrorDesc              NVARCHAR(1000)      /* Error Description */
		          
		        DECLARE @DraftFlag              NVARCHAR(20)        /* 수주승인단계사용 */
		              , @ORDER_NUM              NVARCHAR(20)        /* 수주번호 */
		              , @ORDER_SEQ              NUMERIC(4, 0)       /* 수주순번 */
		              , @LLC_SER_NO             NVARCHAR(20)        /* LLC번호 */
		              , @LLC_AMEND_SEQ          NUMERIC(4, 0)       /* LLC AMEND 차수 */
		              , @LLC_AMEND_SER          NUMERIC(4, 0)       /* LLC AMEND 행번 */
		              , @STATUS                 NVARCHAR(20)        /* 수주승인 */
		
		    END    
		
		  /* 데이타 체크 및 저장 */
		    /* 영업 */
		    IF @CREATE_LOC = '1' 
		    BEGIN
		        
		        /* 매출수량 체크 */
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              SSA110T AS A WITH(NOLOCK)
		                         LEFT  JOIN (
		                                      SELECT B.COMP_CODE
		                                           , B.DIV_CODE
		                                           , B.BILL_NUM
		                                           , B.BILL_SEQ
		                                           , B.ITEM_CODE
		                                           , SUM(ISNULL(B.SALE_Q, 0)) AS SALE_Q
		                                      FROM   SSA200T AS B WITH(NOLOCK)
		                                      WHERE  B.COMP_CODE = @COMP_CODE
		                                      AND    B.DIV_CODE  = @DIV_CODE
		                                      AND    B.BILL_NUM  = @BILL_NUM
		                                      AND    B.BILL_SEQ  = @BILL_SEQ
		                                      AND    B.ITEM_CODE = @ITEM_CODE
		                                      GROUP  BY B.COMP_CODE, B.DIV_CODE, B.BILL_NUM, B.BILL_SEQ, B.ITEM_CODE ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                                                                                                    AND B.DIV_CODE  = A.DIV_CODE
		                                                                                                                    AND B.BILL_NUM  = A.BILL_NUM
		                                                                                                                    AND B.BILL_SEQ  = A.BILL_SEQ
		                                                                                                                    AND B.ITEM_CODE = A.ITEM_CODE 
		                   WHERE  A.COMP_CODE  = @COMP_CODE
		                   AND    A.DIV_CODE   = @DIV_CODE
		                   AND    A.BILL_NUM   = @BILL_NUM
		                   AND    A.BILL_SEQ   = @BILL_SEQ
		                   AND    A.ITEM_CODE  = @ITEM_CODE
		                   AND    A.SALE_Q     &lt; ISNULL(B.SALE_Q, 0) + @INOUT_Q)
		        BEGIN
		            SET @ErrorCode  = N'99917'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('99917', '', @LANG_CODE) --N'선매출수량이 초과하였습니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수주승인단계사용 옵션정보 조회 */
		        SELECT @DraftFlag = ISNULL(SUB_CODE, 'N')
		        FROM   BSA100T WITH(NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    MAIN_CODE = N'S044'
		        AND    ISNULL(UPPER(LEFT(REF_CODE1,1)),'') = 'Y'
		
		        /* 수주 승인 여부 체크 */
		        SELECT @ORDER_NUM = ORDER_NUM
		        FROM   BTR100T WITH(NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    DIV_CODE  = @DIV_CODE
		        AND    INOUT_NUM = @INOUT_NUM
		        AND    INOUT_SEQ = @INOUT_SEQ
		
		        IF ISNULL(@ORDER_NUM, '') != ''
		        BEGIN
		            SELECT @STATUS = ISNULL(STATUS, '6')
		            FROM   SOF100T WITH(NOLOCK)
		            WHERE  COMP_CODE = @COMP_CODE
		            AND    DIV_CODE  = @DIV_CODE
		            AND    ORDER_NUM = @ORDER_NUM
		
		            IF ISNULL(@STATUS, '') != ''
		            BEGIN
		                IF @STATUS != '6'
		                BEGIN
		                    SET @ErrorCode  = N'55443'
		                    SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('55443', '', @LANG_CODE) --N'완결되지 않은 수주승인건은 저장할 수 없습니다.'
		
		                    GOTO ERROR_HANDLER
		                END
		            END
		        END
		
		        /* 품목정보 사용유무체크 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BPR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54445'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54445', '', @LANG_CODE) --N'존재하지 않는 품목입니다. 품목정보를 확인하세요(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BPR100T WITH(NOLOCK)
		                   WHERE  COMP_CODE = @COMP_CODE
		                   AND    ITEM_CODE = @ITEM_CODE
		                   AND    USE_YN    = 'N')
		        BEGIN
		            SET @ErrorCode  = N'54444'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54444', '', @LANG_CODE) --N'사용불가 품목입니다.품목정보의 사용유무를 확인하세요.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BTR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    INOUT_NUM = @INOUT_NUM
		                       AND    INOUT_SEQ = @INOUT_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		        
		        /* 매출정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   SSA110T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    BILL_NUM  = @BILL_NUM
		                       AND    BILL_SEQ  = @BILL_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 출하지시정보 업데이트 */
		        UPDATE A1
		        SET    A1.ISSUE_QTY = A1.ISSUE_QTY - A2.ORDER_UNIT_Q + @INOUT_Q
		        FROM              SRQ100T AS A1 WITH(NOLOCK)
		               INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                    AND A2.DIV_CODE      = A1.DIV_CODE
		                                                    AND A2.ISSUE_REQ_NUM = A1.ISSUE_REQ_NUM
		                                                    AND A2.ISSUE_REQ_SEQ = A1.ISSUE_REQ_SEQ
		        WHERE  A1.COMP_CODE = @COMP_CODE
		        AND    A1.DIV_CODE  = @DIV_CODE
		        AND    A2.INOUT_NUM = @INOUT_NUM
		        AND    A2.INOUT_SEQ = @INOUT_SEQ
		
		        /* 수주정보 업데이트 */
		        UPDATE A1
		        SET    A1.SALE_Q = A1.SALE_Q + @INOUT_Q
		        FROM              SOF110T AS A1 WITH(NOLOCK)
		               INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                    AND A2.DIV_CODE      = A1.DIV_CODE
		                                                    AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                    AND A2.ORDER_SEQ     = A1.SER_NO
		        WHERE  A1.COMP_CODE = @COMP_CODE
		        AND    A1.DIV_CODE  = @DIV_CODE
		        AND    A2.INOUT_NUM = @INOUT_NUM
		        AND    A2.INOUT_SEQ = @INOUT_SEQ
		        
		        /* 수주정보 조회 */
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              SOF110T AS A1 WITH(NOLOCK)
		                          INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                               AND A2.DIV_CODE      = A1.DIV_CODE
		                                                               AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                               AND A2.ORDER_SEQ     = A1.SER_NO
		                   WHERE  A1.COMP_CODE  = @COMP_CODE
		                   AND    A1.DIV_CODE   = @DIV_CODE
		                   AND    A2.INOUT_NUM  = @INOUT_NUM
		                   AND    A2.INOUT_SEQ  = @INOUT_SEQ
		                   AND    A1.OUTSTOCK_Q &lt; A1.RETURN_Q )
		        BEGIN
		            SET @ErrorCode  = N'54447'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54447', '', @LANG_CODE) --N'해당 출고의 참조된 수주내역에 반품량이 존재합니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              SOF110T AS A1 WITH(NOLOCK)
		                          INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                               AND A2.DIV_CODE      = A1.DIV_CODE
		                                                               AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                               AND A2.ORDER_SEQ     = A1.SER_NO
		                   WHERE  A1.COMP_CODE  = @COMP_CODE
		                   AND    A1.DIV_CODE   = @DIV_CODE
		                   AND    A2.INOUT_NUM  = @INOUT_NUM
		                   AND    A2.INOUT_SEQ  = @INOUT_SEQ
		                   AND    A1.ORDER_Q    &lt; A1.OUTSTOCK_Q - RETURN_Q)
		        BEGIN
		            SET @ErrorCode  = N'54428'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54428', '', @LANG_CODE) --N'출고수량은 미납수량(수주량+반품량-출고량 -출하지시잔량)을 초과할 수 없습니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 업데이트 */
		        UPDATE A
		        SET    A.ACCOUNT_Q = A.ACCOUNT_Q + @INOUT_Q
		        FROM   BTR100T AS A WITH(NOLOCK)
		        WHERE  A.COMP_CODE = @COMP_CODE
		        AND    A.DIV_CODE  = @DIV_CODE
		        AND    A.INOUT_NUM = @INOUT_NUM
		        AND    A.INOUT_SEQ = @INOUT_SEQ
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BTR100T AS A WITH(NOLOCK)
		                   WHERE  A.COMP_CODE    = @COMP_CODE
		                   AND    A.DIV_CODE     = @DIV_CODE
		                   AND    A.INOUT_NUM    = @INOUT_NUM
		                   AND    A.INOUT_SEQ    = @INOUT_SEQ
		                   AND    A.ORDER_UNIT_Q &lt; A.ACCOUNT_Q)
		        BEGIN
		            SET @ErrorCode  = N'54416'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54416', '', @LANG_CODE) --N'미매출량을 초과하였습니다.(매출)'
		
		            GOTO ERROR_HANDLER
		        END
		
		    END
		
		    /* 무역 */
		    IF @CREATE_LOC = '5' 
		    BEGIN
		        /* 매출수량 체크 */
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              TEC130T AS A WITH(NOLOCK)
		                         LEFT  JOIN (
		                                      SELECT B.COMP_CODE
		                                           , B.DIV_CODE
		                                           , B.BILL_NUM
		                                           , B.BILL_SEQ
		                                           , B.ITEM_CODE
		                                           , SUM(ISNULL(B.SALE_Q, 0)) AS SALE_Q
		                                      FROM   SSA200T AS B WITH(NOLOCK)
		                                      WHERE  B.COMP_CODE = @COMP_CODE
		                                      AND    B.DIV_CODE  = @DIV_CODE
		                                      AND    B.BILL_NUM  = @BILL_NUM
		                                      AND    B.BILL_SEQ  = @BILL_SEQ
		                                      AND    B.ITEM_CODE = @ITEM_CODE
		                                      GROUP  BY B.COMP_CODE, B.DIV_CODE, B.BILL_NUM, B.BILL_SEQ, B.ITEM_CODE ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                                                                                                    AND B.DIV_CODE  = A.DIV_CODE
		                                                                                                                    AND B.BILL_NUM  = A.ACCEPT_NO
		                                                                                                                    AND B.BILL_SEQ  = A.ACCEPT_SEQ
		                                                                                                                    AND B.ITEM_CODE = A.ITEM_CODE 
		                   WHERE  A.COMP_CODE   = @COMP_CODE
		                   AND    A.DIV_CODE    = @DIV_CODE
		                   AND    A.ACCEPT_NO   = @BILL_NUM
		                   AND    A.ACCEPT_SEQ  = @BILL_SEQ
		                   AND    A.ITEM_CODE   = @ITEM_CODE
		                   AND    A.QTY         &lt; ISNULL(B.SALE_Q, 0) + @INOUT_Q)
		        BEGIN
		            SET @ErrorCode  = N'99917'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('99917', '', @LANG_CODE) --N'선매출수량이 초과하였습니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 품목정보 사용유무체크 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BPR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54445'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54445', '', @LANG_CODE) --N'존재하지 않는 품목입니다. 품목정보를 확인하세요(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BPR100T WITH(NOLOCK)
		                   WHERE  COMP_CODE = @COMP_CODE
		                   AND    ITEM_CODE = @ITEM_CODE
		                   AND    USE_YN    = 'N')
		        BEGIN
		            SET @ErrorCode  = N'54444'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54444', '', @LANG_CODE) --N'사용불가 품목입니다.품목정보의 사용유무를 확인하세요.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BTR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    INOUT_NUM = @INOUT_NUM
		                       AND    INOUT_SEQ = @INOUT_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		        
		        /* 매출정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   TEC130T WITH(NOLOCK)
		                       WHERE  COMP_CODE  = @COMP_CODE
		                       AND    DIV_CODE   = @DIV_CODE
		                       AND    ACCEPT_NO  = @BILL_NUM
		                       AND    ACCEPT_SEQ = @BILL_SEQ
		                       AND    ITEM_CODE  = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   TEC120T WITH(NOLOCK)
		                       WHERE  COMP_CODE  = @COMP_CODE
		                       AND    DIV_CODE   = @DIV_CODE
		                       AND    ACCEPT_NO  = @BILL_NUM)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 오퍼 번호 */
		        SELECT @ORDER_NUM  = ORDER_NUM
		             , @ORDER_SEQ  = ORDER_SEQ
		             , @LLC_SER_NO = LC_NUM
		        FROM   BTR100T WITH(NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    DIV_CODE  = @DIV_CODE
		        AND    INOUT_NUM = @INOUT_NUM
		        AND    INOUT_SEQ = @INOUT_SEQ
		
		        SELECT @LLC_AMEND_SEQ = D.LLC_AMEND_SEQ
		             , @LLC_AMEND_SER = D.LLC_AMEND_SER
		        FROM              TEB140T A
		               INNER JOIN TEB150T B  WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                                  AND A.DIV_CODE      = B.DIV_CODE
		                                                  AND A.LLC_SER_NO    = B.LLC_SER_NO
		               INNER JOIN TEB170T D  WITH (NOLOCK) ON A.COMP_CODE     = D.COMP_CODE
		                                                  AND A.DIV_CODE      = D.DIV_CODE
		                                                  AND B.LLC_SER_NO    = D.LLC_SER_NO
		                                                  AND B.LLC_SER       = D.LLC_AMEND_SER
		                                                  AND D.LLC_AMEND_SEQ = (SELECT MAX(LLC_AMEND_SEQ)
		                                                                         FROM   TEB170T WITH (NOLOCK)
		                                                                         WHERE  COMP_CODE  = D.COMP_CODE
		                                                                         AND    DIV_CODE   = D.DIV_CODE
		                                                                         AND    LLC_SER_NO = D.LLC_SER_NO)
		       WHERE   B.COMP_CODE    = @COMP_CODE
		       AND     B.DIV_CODE     = @DIV_CODE
		       AND     B.LLC_SER_NO   = @LLC_SER_NO
		       AND     B.SO_SER_NO    = @ORDER_NUM
		       AND     B.SO_SER       = @ORDER_SEQ
		
		       UPDATE TEB170T
		       SET    USE_QTY2 = USE_QTY2 + @INOUT_Q
		       WHERE  COMP_CODE     = @COMP_CODE
		       AND    DIV_CODE      = @DIV_CODE
		       AND    LLC_SER_NO    = @LLC_SER_NO
		       AND    LLC_AMEND_SEQ = @LLC_AMEND_SEQ
		       AND    LLC_AMEND_SER = @LLC_AMEND_SER
		       
		        /* 수불정보 업데이트 */
		        UPDATE A
		        SET    A.ACCOUNT_Q = A.ACCOUNT_Q + @INOUT_Q
		        FROM   BTR100T AS A WITH(NOLOCK)
		        WHERE  A.COMP_CODE = @COMP_CODE
		        AND    A.DIV_CODE  = @DIV_CODE
		        AND    A.INOUT_NUM = @INOUT_NUM
		        AND    A.INOUT_SEQ = @INOUT_SEQ
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BTR100T AS A WITH(NOLOCK)
		                   WHERE  A.COMP_CODE    = @COMP_CODE
		                   AND    A.DIV_CODE     = @DIV_CODE
		                   AND    A.INOUT_NUM    = @INOUT_NUM
		                   AND    A.INOUT_SEQ    = @INOUT_SEQ
		                   AND    A.ORDER_UNIT_Q &lt; A.ACCOUNT_Q)
		        BEGIN
		            SET @ErrorCode  = N'54416'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54416', '', @LANG_CODE) --N'미매출량을 초과하였습니다.(매출)'
		
		            GOTO ERROR_HANDLER
		        END
		    END
		    
		    INSERT INTO SSA200T
		    (   COMP_CODE      , DIV_CODE       , BILL_NUM       , BILL_SEQ
		      , INOUT_NUM      , INOUT_SEQ      , ITEM_CODE      , SALE_Q
		      , INSERT_DB_USER , INSERT_DB_TIME , UPDATE_DB_USER , UPDATE_DB_TIME )
		    VALUES
		    (   @COMP_CODE     , @DIV_CODE      , @BILL_NUM      , @BILL_SEQ
		      , @INOUT_NUM     , @INOUT_SEQ     , @ITEM_CODE     , @INOUT_Q
		      , @USER_ID       , GETDATE()      , @USER_ID       , GETDATE() )
		
		/* Error Handler 처리 */
		ERROR_HANDLER:
		    IF CHARINDEX(';', @ErrorDesc) &gt; 0
		    BEGIN
		        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
		        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc), LEN(@ErrorDesc))
		    END
		
		    SELECT ISNULL(@ErrorCode   , '') AS ERROR_CODE      , ISNULL(@ErrorDesc   , '') AS ERROR_DESC
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END TRY
		
		BEGIN CATCH
		/* Error Handler 처리 */
		    IF CHARINDEX(';', @ErrorDesc) &gt; 0
		    BEGIN
		        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
		        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc), LEN(@ErrorDesc))
		    END
		    ELSE
		    BEGIN
		        SET @ErrorCode  = CONVERT(NVARCHAR, LEFT(ERROR_NUMBER(), 20))
		        SET @ErrorDesc  = LEFT(ERROR_MESSAGE(), 1000)
		    END
		
		    SELECT ISNULL(@ErrorCode   , '') AS ERROR_CODE      , ISNULL(@ErrorDesc   , '') AS ERROR_DESC
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END CATCH
	</select>
	
	<select id="ssa200ukrvServiceImpl.insertTypeY" parameterType="Map" resultType="rMap">
		/* s_str130ukrv_im.Cstr130ukrv[fnSsa200Save] Query2-01 */
		BEGIN TRY
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		    
		   /* 파라메터변수 선언 */
		    BEGIN  
		
		        DECLARE @COMP_CODE              NVARCHAR(20)        /*(필수) 법인코드*/
		              , @DIV_CODE               NVARCHAR(20)        /*(필수) 사업장 번호*/
		              , @BILL_NUM               NVARCHAR(20)        /*(필수) 매출번호*/
		              , @BILL_SEQ               NUMERIC(4, 0)       /*(필수) 매출순번*/
		              , @INOUT_NUM              NVARCHAR(20)        /*(필수) 수불번호*/
		              , @INOUT_SEQ              NUMERIC(4, 0)       /*(필수) 수불순번*/
		              , @ITEM_CODE              NVARCHAR(40)        /*(필수) 품목코드*/
		              , @INOUT_Q                NUMERIC(36, 6)      /*(필수) 수불량*/
		              , @CREATE_LOC             NVARCHAR(02)        /*(필수) 구분(1:영업, 5:무역)*/
		              , @USER_ID                NVARCHAR(100)        /*(필수) 사용자ID*/
		          
		        SET @COMP_CODE       = #{S_COMP_CODE}
		        SET @DIV_CODE        = #{MDIV_CODE}
		        SET @BILL_NUM        = #{MBILL_NUM}
		        SET @BILL_SEQ        = #{MBILL_SEQ}
		        SET @INOUT_NUM       = #{INOUT_NUM}
		        SET @INOUT_SEQ       = #{INOUT_SEQ}
		        SET @ITEM_CODE       = #{ITEM_CODE}
		        SET @INOUT_Q         = #{ORDER_UNIT_Q}
		        SET @CREATE_LOC      = #{MCREATE_LOC}
		        SET @USER_ID         = #{S_USER_ID}
		    
		        DECLARE @ErrorCode              NVARCHAR(20)        /* Error Code */
		              , @ErrorDesc              NVARCHAR(1000)      /* Error Description */
		          
		        DECLARE @DraftFlag              NVARCHAR(20)        /* 수주승인단계사용 */
		              , @ORDER_NUM              NVARCHAR(20)        /* 수주번호 */
		              , @ORDER_SEQ              NUMERIC(4, 0)       /* 수주순번 */
		              , @LLC_SER_NO             NVARCHAR(20)        /* LLC번호 */
		              , @LLC_AMEND_SEQ          NUMERIC(4, 0)       /* LLC AMEND 차수 */
		              , @LLC_AMEND_SER          NUMERIC(4, 0)       /* LLC AMEND 행번 */
		              , @STATUS                 NVARCHAR(20)        /* 수주승인 */
		
		    END    
		
		    /* 데이타 체크 및 저장 */
		    /* 영업 */
		    IF @CREATE_LOC = '1' 
		    BEGIN
		        /* 품목정보 사용유무체크 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BPR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54445'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54445', '', @LANG_CODE) --N'존재하지 않는 품목입니다. 품목정보를 확인하세요(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BPR100T WITH(NOLOCK)
		                   WHERE  COMP_CODE = @COMP_CODE
		                   AND    ITEM_CODE = @ITEM_CODE
		                   AND    USE_YN    = 'N')
		        BEGIN
		            SET @ErrorCode  = N'54444'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54444', '', @LANG_CODE) --N'사용불가 품목입니다.품목정보의 사용유무를 확인하세요.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BTR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    INOUT_NUM = @INOUT_NUM
		                       AND    INOUT_SEQ = @INOUT_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		        
		        /* 매출정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   SSA110T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    BILL_NUM  = @BILL_NUM
		                       AND    BILL_SEQ  = @BILL_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 출하지시정보 업데이트 */
		        UPDATE A1
		        SET    A1.ISSUE_QTY = A1.ISSUE_QTY - @INOUT_Q
		        FROM              SRQ100T AS A1 WITH(NOLOCK)
		               INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                    AND A2.DIV_CODE      = A1.DIV_CODE
		                                                    AND A2.ISSUE_REQ_NUM = A1.ISSUE_REQ_NUM
		                                                    AND A2.ISSUE_REQ_SEQ = A1.ISSUE_REQ_SEQ
		        WHERE  A1.COMP_CODE = @COMP_CODE
		        AND    A1.DIV_CODE  = @DIV_CODE
		        AND    A2.INOUT_NUM = @INOUT_NUM
		        AND    A2.INOUT_SEQ = @INOUT_SEQ
		
		        /* 수주정보 업데이트 */
		        UPDATE A1
		        SET    A1.SALE_Q = A1.SALE_Q - @INOUT_Q
		        FROM              SOF110T AS A1 WITH(NOLOCK)
		               INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                    AND A2.DIV_CODE      = A1.DIV_CODE
		                                                    AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                    AND A2.ORDER_SEQ     = A1.SER_NO
		        WHERE  A1.COMP_CODE = @COMP_CODE
		        AND    A1.DIV_CODE  = @DIV_CODE
		        AND    A2.INOUT_NUM = @INOUT_NUM
		        AND    A2.INOUT_SEQ = @INOUT_SEQ
		        
		        /* 수주정보 조회 */
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              SOF110T AS A1 WITH(NOLOCK)
		                          INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                               AND A2.DIV_CODE      = A1.DIV_CODE
		                                                               AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                               AND A2.ORDER_SEQ     = A1.SER_NO
		                   WHERE  A1.COMP_CODE  = @COMP_CODE
		                   AND    A1.DIV_CODE   = @DIV_CODE
		                   AND    A2.INOUT_NUM  = @INOUT_NUM
		                   AND    A2.INOUT_SEQ  = @INOUT_SEQ
		                   AND    A1.OUTSTOCK_Q &lt; A1.RETURN_Q )
		        BEGIN
		            SET @ErrorCode  = N'54447'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54447', '', @LANG_CODE) --N'해당 출고의 참조된 수주내역에 반품량이 존재합니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM              SOF110T AS A1 WITH(NOLOCK)
		                          INNER JOIN BTR100T AS A2 WITH(NOLOCK) ON A2.COMP_CODE     = A1.COMP_CODE
		                                                               AND A2.DIV_CODE      = A1.DIV_CODE
		                                                               AND A2.ORDER_NUM     = A1.ORDER_NUM
		                                                               AND A2.ORDER_SEQ     = A1.SER_NO
		                   WHERE  A1.COMP_CODE  = @COMP_CODE
		                   AND    A1.DIV_CODE   = @DIV_CODE
		                   AND    A2.INOUT_NUM  = @INOUT_NUM
		                   AND    A2.INOUT_SEQ  = @INOUT_SEQ
		                   AND    A1.ORDER_Q    &lt; A1.OUTSTOCK_Q - RETURN_Q)
		        BEGIN
		            SET @ErrorCode  = N'54428'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54428', '', @LANG_CODE) --N'출고수량은 미납수량(수주량+반품량-출고량 -출하지시잔량)을 초과할 수 없습니다.'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 업데이트 */
		        UPDATE A
		        SET    A.ACCOUNT_Q = A.ACCOUNT_Q - @INOUT_Q
		        FROM   BTR100T AS A WITH(NOLOCK)
		        WHERE  A.COMP_CODE = @COMP_CODE
		        AND    A.DIV_CODE  = @DIV_CODE
		        AND    A.INOUT_NUM = @INOUT_NUM
		        AND    A.INOUT_SEQ = @INOUT_SEQ
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BTR100T AS A WITH(NOLOCK)
		                   WHERE  A.COMP_CODE    = @COMP_CODE
		                   AND    A.DIV_CODE     = @DIV_CODE
		                   AND    A.INOUT_NUM    = @INOUT_NUM
		                   AND    A.INOUT_SEQ    = @INOUT_SEQ
		                   AND    A.ORDER_UNIT_Q &lt; A.ACCOUNT_Q)
		        BEGIN
		            SET @ErrorCode  = N'54416'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54416', '', @LANG_CODE) --N'미매출량을 초과하였습니다.(매출)'
		
		            GOTO ERROR_HANDLER
		        END
		
		    END
		
		    /* 무역 */
		    IF @CREATE_LOC = '5' 
		    BEGIN
		        /* 품목정보 사용유무체크 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BPR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54445'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54445', '', @LANG_CODE) --N'존재하지 않는 품목입니다. 품목정보를 확인하세요(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BPR100T WITH(NOLOCK)
		                   WHERE  COMP_CODE = @COMP_CODE
		                   AND    ITEM_CODE = @ITEM_CODE
		                   AND    USE_YN    = 'N')
		        BEGIN
		            SET @ErrorCode  = N'54444'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54444', '', @LANG_CODE) --N'사용불가 품목입니다.품목정보의 사용유무를 확인하세요.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 수불정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   BTR100T WITH(NOLOCK)
		                       WHERE  COMP_CODE = @COMP_CODE
		                       AND    DIV_CODE  = @DIV_CODE
		                       AND    INOUT_NUM = @INOUT_NUM
		                       AND    INOUT_SEQ = @INOUT_SEQ
		                       AND    ITEM_CODE = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		        
		        /* 매출정보 조회 */
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   TEC130T WITH(NOLOCK)
		                       WHERE  COMP_CODE  = @COMP_CODE
		                       AND    DIV_CODE   = @DIV_CODE
		                       AND    ACCEPT_NO  = @BILL_NUM
		                       AND    ACCEPT_SEQ = @BILL_SEQ
		                       AND    ITEM_CODE  = @ITEM_CODE)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        IF NOT EXISTS (SELECT TOP 1 1
		                       FROM   TEC120T WITH(NOLOCK)
		                       WHERE  COMP_CODE  = @COMP_CODE
		                       AND    DIV_CODE   = @DIV_CODE
		                       AND    ACCEPT_NO  = @BILL_NUM)
		        BEGIN
		            SET @ErrorCode  = N'54400'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54400', '', @LANG_CODE) --N'이미 삭제된 자료입니다.(영업공통)'
		
		            GOTO ERROR_HANDLER
		        END
		
		        /* 오퍼 번호 */
		        SELECT @ORDER_NUM  = ORDER_NUM
		             , @ORDER_SEQ  = ORDER_SEQ
		             , @LLC_SER_NO = LC_NUM
		        FROM   BTR100T WITH(NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    DIV_CODE  = @DIV_CODE
		        AND    INOUT_NUM = @INOUT_NUM
		        AND    INOUT_SEQ = @INOUT_SEQ
		
		        SELECT @LLC_AMEND_SEQ = D.LLC_AMEND_SEQ
		             , @LLC_AMEND_SER = D.LLC_AMEND_SER
		        FROM              TEB140T A
		               INNER JOIN TEB150T B  WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                                  AND A.DIV_CODE      = B.DIV_CODE
		                                                  AND A.LLC_SER_NO    = B.LLC_SER_NO
		               INNER JOIN TEB170T D  WITH (NOLOCK) ON A.COMP_CODE     = D.COMP_CODE
		                                                  AND A.DIV_CODE      = D.DIV_CODE
		                                                  AND B.LLC_SER_NO    = D.LLC_SER_NO
		                                                  AND B.LLC_SER       = D.LLC_AMEND_SER
		                                                  AND D.LLC_AMEND_SEQ = (SELECT MAX(LLC_AMEND_SEQ)
		                                                                         FROM   TEB170T WITH (NOLOCK)
		                                                                         WHERE  COMP_CODE  = D.COMP_CODE
		                                                                         AND    DIV_CODE   = D.DIV_CODE
		                                                                         AND    LLC_SER_NO = D.LLC_SER_NO)
		       WHERE   B.COMP_CODE    = @COMP_CODE
		       AND     B.DIV_CODE     = @DIV_CODE
		       AND     B.LLC_SER_NO   = @LLC_SER_NO
		       AND     B.SO_SER_NO    = @ORDER_NUM
		       AND     B.SO_SER       = @ORDER_SEQ
		
		       UPDATE TEB170T
		       SET    USE_QTY2 = USE_QTY2 - @INOUT_Q
		       WHERE  COMP_CODE     = @COMP_CODE
		       AND    DIV_CODE      = @DIV_CODE
		       AND    LLC_SER_NO    = @LLC_SER_NO
		       AND    LLC_AMEND_SEQ = @LLC_AMEND_SEQ
		       AND    LLC_AMEND_SER = @LLC_AMEND_SER
		       
		        /* 수불정보 업데이트 */
		        UPDATE A
		        SET    A.ACCOUNT_Q = A.ACCOUNT_Q - @INOUT_Q
		        FROM   BTR100T AS A WITH(NOLOCK)
		        WHERE  A.COMP_CODE = @COMP_CODE
		        AND    A.DIV_CODE  = @DIV_CODE
		        AND    A.INOUT_NUM = @INOUT_NUM
		        AND    A.INOUT_SEQ = @INOUT_SEQ
		
		        IF EXISTS (SELECT TOP 1 1
		                   FROM   BTR100T AS A WITH(NOLOCK)
		                   WHERE  A.COMP_CODE    = @COMP_CODE
		                   AND    A.DIV_CODE     = @DIV_CODE
		                   AND    A.INOUT_NUM    = @INOUT_NUM
		                   AND    A.INOUT_SEQ    = @INOUT_SEQ
		                   AND    A.ORDER_UNIT_Q &lt; A.ACCOUNT_Q)
		        BEGIN
		            SET @ErrorCode  = N'54416'
		            SET @ErrorDesc  = uniLITE.fnGetErrorMsg_omega('54416', '', @LANG_CODE) --N'미매출량을 초과하였습니다.(매출)'
		
		            GOTO ERROR_HANDLER
		        END
		    END
		    
		    DELETE SSA200T
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    DIV_CODE  = @DIV_CODE
		    AND    BILL_NUM  = @BILL_NUM
		    AND    BILL_SEQ  = @BILL_SEQ
		    AND    INOUT_NUM = @INOUT_NUM
		    AND    INOUT_SEQ = @INOUT_SEQ
		    AND    ITEM_CODE = @ITEM_CODE
		
		/* Error Handler 처리 */
		ERROR_HANDLER:
		    IF CHARINDEX(';', @ErrorDesc) &gt; 0
		    BEGIN
		        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
		        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc), LEN(@ErrorDesc))
		    END
		
		    SELECT ISNULL(@ErrorCode   , '') AS ERROR_CODE      , ISNULL(@ErrorDesc   , '') AS ERROR_DESC
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END TRY
		
		BEGIN CATCH
		/* Error Handler 처리 */
		    IF CHARINDEX(';', @ErrorDesc) &gt; 0
		    BEGIN
		        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
		        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc), LEN(@ErrorDesc))
		    END
		    ELSE
		    BEGIN
		        SET @ErrorCode  = CONVERT(NVARCHAR, LEFT(ERROR_NUMBER(), 20))
		        SET @ErrorDesc  = LEFT(ERROR_MESSAGE(), 1000)
		    END
		
		    SELECT ISNULL(@ErrorCode   , '') AS ERROR_CODE      , ISNULL(@ErrorDesc   , '') AS ERROR_DESC
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END CATCH			
	</select>
	
</mapper>