<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa750skrvServiceImpl">
    
     <select id="ssa750skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		BEGIN
		
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE @COMP_CODE  NVARCHAR(08)
		             ,@DIV_CODE      NVARCHAR(08)
					 ,@SALE_YEAR     NVARCHAR(04)
					 ,@DEPT_CODE    NVARCHAR(08)
					 ,@TREE_LEVEL     NVARCHAR(08)
		
		SET @COMP_CODE     = #{S_COMP_CODE}     /* 법인 -필수 */
		SET @DIV_CODE      = #{DIV_CODE}        /* 사업장 -필수 */
		SET @SALE_YEAR     = #{SALE_YEAR}       /* 매출년도(yyyymm) -필수 */
		SET @DEPT_CODE     = #{DEPT_CODE}       /* 부서 -옵션 */
		
		/* 부서 레벨 정보 */
		IF @DEPT_CODE != '' 
		  BEGIN 
		      SELECT TOP 1 @TREE_LEVEL = TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = @COMP_CODE AND TYPE_LEVEL = @DIV_CODE AND TREE_CODE = @DEPT_CODE
		  END 
		
		/* 매출목표 대비 실적현황 */
		
		SELECT
		 A.PLAN_TYPE2_CODE     AS DEPT_CODE
		,ISNULL(C.TREE_NAME, '') AS DEPT_NAME 
		,CASE WHEN A.MOD_PLAN_AMT1   = 0 THEN A.PLAN_AMT1 ELSE A.MOD_PLAN_AMT1 END AS PLAN_AMT_01
		,ISNULL(B.SALE_AMT_01, 0) AS SALE_AMT_01
		,CASE WHEN ISNULL(B.SALE_AMT_01, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT1   = 0 THEN A.PLAN_AMT1 ELSE A.MOD_PLAN_AMT1 END) / ISNULL(B.SALE_AMT_01, 0) * 100
		 END AS ACHIEVE_RATE_01
		
		,CASE WHEN A.MOD_PLAN_AMT2   = 0 THEN A.PLAN_AMT2 ELSE A.MOD_PLAN_AMT2 END AS PLAN_AMT_02
		, ISNULL(B.SALE_AMT_02, 0) AS SALE_AMT_02
		,CASE WHEN ISNULL(B.SALE_AMT_02, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT2   = 0 THEN A.PLAN_AMT2 ELSE A.MOD_PLAN_AMT1 END) / ISNULL(B.SALE_AMT_02, 0) * 100
		 END AS ACHIEVE_RATE_02
		
		,CASE WHEN A.MOD_PLAN_AMT3   = 0 THEN A.PLAN_AMT3 ELSE A.MOD_PLAN_AMT3 END AS PLAN_AMT_03
		,ISNULL(B.SALE_AMT_03, 0) AS SALE_AMT_03
		,CASE WHEN ISNULL(B.SALE_AMT_03, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT3   = 0 THEN A.PLAN_AMT3 ELSE A.MOD_PLAN_AMT3 END) / ISNULL(B.SALE_AMT_03, 0) * 100
		 END AS ACHIEVE_RATE_03
		
		,CASE WHEN A.MOD_PLAN_AMT4   = 0 THEN A.PLAN_AMT4 ELSE A.MOD_PLAN_AMT4 END AS PLAN_AMT_04
		,ISNULL(B.SALE_AMT_04, 0) AS SALE_AMT_04
		,CASE WHEN ISNULL(B.SALE_AMT_04, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT4   = 0 THEN A.PLAN_AMT4 ELSE A.MOD_PLAN_AMT4 END) / ISNULL(B.SALE_AMT_04, 0) * 100
		 END AS ACHIEVE_RATE_04
		
		,CASE WHEN A.MOD_PLAN_AMT5   = 0 THEN A.PLAN_AMT5 ELSE A.MOD_PLAN_AMT5 END AS PLAN_AMT_05
		,ISNULL(B.SALE_AMT_05, 0) AS SALE_AMT_05
		,CASE WHEN ISNULL(B.SALE_AMT_05, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT5   = 0 THEN A.PLAN_AMT5 ELSE A.MOD_PLAN_AMT5 END) / ISNULL(B.SALE_AMT_05, 0) * 100
		 END AS ACHIEVE_RATE_05
		
		,CASE WHEN A.MOD_PLAN_AMT6   = 0 THEN A.PLAN_AMT6 ELSE A.MOD_PLAN_AMT6 END AS PLAN_AMT_06
		,ISNULL(B.SALE_AMT_06, 0) AS SALE_AMT_06
		,CASE WHEN ISNULL(B.SALE_AMT_06, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT6   = 0 THEN A.PLAN_AMT6 ELSE A.MOD_PLAN_AMT6 END) / ISNULL(B.SALE_AMT_06, 0) * 100
		 END AS ACHIEVE_RATE_06
		
		,CASE WHEN A.MOD_PLAN_AMT7   = 0 THEN A.PLAN_AMT7 ELSE A.MOD_PLAN_AMT7 END AS PLAN_AMT_07
		, ISNULL(B.SALE_AMT_07, 0) AS SALE_AMT_07
		,CASE WHEN ISNULL(B.SALE_AMT_07, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT7   = 0 THEN A.PLAN_AMT7 ELSE A.MOD_PLAN_AMT7 END) / ISNULL(B.SALE_AMT_07, 0) * 100
		 END AS ACHIEVE_RATE_07
		
		,CASE WHEN A.MOD_PLAN_AMT8   = 0 THEN A.PLAN_AMT8 ELSE A.MOD_PLAN_AMT8 END AS PLAN_AMT_08
		, ISNULL(B.SALE_AMT_08, 0) AS SALE_AMT_08
		,CASE WHEN ISNULL(B.SALE_AMT_08, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT8   = 0 THEN A.PLAN_AMT8 ELSE A.MOD_PLAN_AMT8 END) / ISNULL(B.SALE_AMT_08, 0) * 100
		 END AS ACHIEVE_RATE_08
		 
		,CASE WHEN A.MOD_PLAN_AMT9   = 0 THEN A.PLAN_AMT9 ELSE A.MOD_PLAN_AMT9 END AS PLAN_AMT_09
		, ISNULL(B.SALE_AMT_09, 0) AS SALE_AMT_09
		,CASE WHEN ISNULL(B.SALE_AMT_09, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT9   = 0 THEN A.PLAN_AMT9 ELSE A.MOD_PLAN_AMT9 END) / ISNULL(B.SALE_AMT_09, 0) * 100
		 END AS ACHIEVE_RATE_09
		
		,CASE WHEN A.MOD_PLAN_AMT10 = 0 THEN A.PLAN_AMT10 ELSE A.MOD_PLAN_AMT10 END AS PLAN_AMT_10
		, ISNULL(B.SALE_AMT_10, 0) AS SALE_AMT_10
		,CASE WHEN ISNULL(B.SALE_AMT_10, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT10   = 0 THEN A.PLAN_AMT10 ELSE A.MOD_PLAN_AMT10 END) / ISNULL(B.SALE_AMT_10, 0) * 100
		 END AS ACHIEVE_RATE_10
		
		,CASE WHEN A.MOD_PLAN_AMT11 = 0 THEN A.PLAN_AMT11 ELSE A.MOD_PLAN_AMT11 END AS PLAN_AMT_11
		, ISNULL(B.SALE_AMT_11, 0) AS SALE_AMT_11
		,CASE WHEN ISNULL(B.SALE_AMT_09, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT11   = 0 THEN A.PLAN_AMT11 ELSE A.MOD_PLAN_AMT11 END) / ISNULL(B.SALE_AMT_11, 0) * 100
		 END AS ACHIEVE_RATE_11
		
		,CASE WHEN A.MOD_PLAN_AMT12 = 0 THEN A.PLAN_AMT12 ELSE A.MOD_PLAN_AMT12 END AS PLAN_AMT_12
		, ISNULL(B.SALE_AMT_12, 0) AS SALE_AMT_12
		,CASE WHEN ISNULL(B.SALE_AMT_12, 0) = 0 THEN 0
		 ELSE  (CASE WHEN A.MOD_PLAN_AMT12   = 0 THEN A.PLAN_AMT12 ELSE A.MOD_PLAN_AMT12 END) / ISNULL(B.SALE_AMT_12, 0) * 100
		 END AS ACHIEVE_RATE_12
		
		FROM     SSP100T A WITH(NOLOCK)
		 LEFT JOIN (
						SELECT
					     A.COMP_CODE
						,A.DIV_CODE
						,@SALE_YEAR AS PLAN_YEAR
						,A.DEPT_CODE
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '01' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_01
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '02' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_02
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '03' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_03
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '04' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_04
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '05' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_05
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '06' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_06
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '07' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_07
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '08' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_08
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '09' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_09
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '10' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_10
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '11' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_11
						,SUM(CASE WHEN RIGHT(A.SALE_DATE, 2) = '12' THEN ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0) ELSE 0 END) AS SALE_AMT_12
		
						FROM          SSA100T A WITH(NOLOCK)
					    INNER JOIN  SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
																			  AND A.DIV_CODE     = B.DIV_CODE 
																			  AND A.BILL_NUM      = B.BILL_NUM
						WHERE  A.COMP_CODE = @COMP_CODE
							AND A.DIV_CODE    = @DIV_CODE
							AND A.SALE_DATE &gt;= @SALE_YEAR + '0101'
							AND A.SALE_DATE &lt;= @SALE_YEAR + '1231'
		
					    GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE
		
					   ) B  
						 ON A.COMP_CODE         = B.COMP_CODE
					   AND A.DIV_CODE             = B.DIV_CODE
					   AND A.PLAN_YEAR           = B.PLAN_YEAR
					   AND A.PLAN_TYPE2_CODE = B.DEPT_CODE
		
			INNER JOIN  BSA210T C WITH(NOLOCK) ON A.COMP_CODE          = C.COMP_CODE 
																  AND A.DIV_CODE              = C.TYPE_LEVEL 
																  AND A.PLAN_TYPE2_CODE  = C.TREE_CODE
																  AND ((@DEPT_CODE != '' AND C.TREE_LEVEL LIKE @TREE_LEVEL + '%') OR (@DEPT_CODE = '' ))
			WHERE A.COMP_CODE = @COMP_CODE 
			   AND A.DIV_CODE     = @DIV_CODE
			   AND A.PLAN_YEAR    = @SALE_YEAR
			   AND A.PLAN_TYPE2   = '8'   /*부서별 판매계획 정보*/
		  
		   ORDER BY A.PLAN_TYPE2_CODE
		
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
		
		END
     </select>
</mapper>