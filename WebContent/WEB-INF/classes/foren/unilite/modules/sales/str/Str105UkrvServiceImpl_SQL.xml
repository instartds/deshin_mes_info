<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="str105ukrvServiceImpl">
	<select id="str105ukrvServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
	<if test="RDO_TYPE == &quot;master&quot;">
		/* str105ukrv.Cstr105ukrv[fnStr103QPop] Query01 master*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}    
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		   SELECT A.DIV_CODE
		    	, A.INOUT_CODE
		    	, C1.CUSTOM_NAME
		        , A.CREATE_LOC
		        , (CASE WHEN ISNULL ( A.INOUT_DATE , '' ) = ''
		                THEN ''
		                ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.INOUT_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING (A.INOUT_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING (A.INOUT_DATE, 7, 2))
		            END)                                                                 AS INOUT_DATE  
		        , SUM(A.ORDER_UNIT_Q)                                                    AS INOUT_Q
		        , A.INOUT_PRSN
		        , A.INOUT_NUM
		        , A.SALE_DIV_CODE
		        , A.MONEY_UNIT
		        , A.EXCHG_RATE_O
		        , A.ISSUE_REQ_NUM
		        , A.WH_CODE
		        --20200108 주석 해제
		        , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN (CASE WHEN ISNULL(E.SALE_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.SALE_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(E.SALE_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(E.SALE_DATE, 7, 2))
		                                                        END) 
		                                                    ELSE (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		                                                        END)
		            END                                                                 AS SALE_DATE
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN SOF110T C  WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                            AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                            AND C.ORDER_NUM      = A.ORDER_NUM
		                                            AND C.SER_NO         = A.ORDER_SEQ
		        LEFT  JOIN TEA110T F  WITH (NOLOCK)  ON F.COMP_CODE      = A.COMP_CODE
		                                            AND F.DIV_CODE       = A.DIV_CODE
		                                            AND F.SO_SER_NO      = A.ORDER_NUM
		                                            AND F.SO_SER         = A.ORDER_SEQ
		        INNER JOIN BCM100T C1 WITH (NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                            AND C1.CUSTOM_CODE   = A.INOUT_CODE
		        INNER JOIN BPR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                            AND C2.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN BCM100T C3 WITH (NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                            AND C3.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		        INNER  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                            AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                            AND C4.TREE_CODE     = A.WH_CODE
		        LEFT  JOIN SSA110T D  WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                            AND D.DIV_CODE       = A.DIV_CODE
		                                            AND D.INOUT_NUM      = A.INOUT_NUM
		                                            AND D.INOUT_SEQ      = A.INOUT_SEQ
		        LEFT  JOIN SSA100T E  WITH (NOLOCK)  ON E.COMP_CODE      = D.COMP_CODE
		                                            AND E.DIV_CODE       = D.DIV_CODE
		                                            AND E.BILL_NUM       = D.BILL_NUM
		    WHERE A.COMP_CODE          = @CompCode               
		      AND A.INOUT_TYPE         = '2'                               
		      AND A.INOUT_TYPE_DETAIL != '98'                                 /* SET구성출고제외 */ 
		      AND A.DIV_CODE          = #{DIV_CODE}
			 --바코드로 등록 된 데이터만 조회: 다른 루트로 등록된 데이터들은 BARCODE_KEY가 없어서 매칭이 안 됨
		      AND ISNULL(A.BARCODE_KEY, '') != ''
		      
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			= #{CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		      AND C1.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">  
		      AND A.INOUT_PRSN        = #{INOUT_PRSN}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">  
		      AND A.INOUT_DATE    &gt;= #{INOUT_DATE_FR}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">  
		      AND A.INOUT_DATE    &lt;= #{INOUT_DATE_TO}
		    </if>  
		    
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		      AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">  
		      AND A.PROJECT_NO     LIKE #{PROJECT_NO}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">  
		      AND A.ISSUE_REQ_NUM  LIKE #{ISSUE_REQ_NUM} + '%'
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">  
		      AND C.RECEIVER_NAME  LIKE '%' + #{RECEIVER_NAME}
		    </if>  
		      AND A.CREATE_LOC        = #{CREATE_LOC}

			GROUP BY  A.DIV_CODE, A.INOUT_CODE, C1.CUSTOM_NAME, A.CREATE_LOC, A.INOUT_DATE, A.INOUT_PRSN, A.INOUT_NUM, A.SALE_DIV_CODE, A.MONEY_UNIT, A.EXCHG_RATE_O, E.SALE_DATE, A.ISSUE_REQ_NUM, A.WH_CODE
		            --20200108 추가
		            , E.SALE_DATE
		    ORDER BY A.DIV_CODE, A.INOUT_DATE, A.INOUT_NUM
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
      </if>
	<if test="RDO_TYPE == &quot;detail&quot;">
		/* str105ukrv.Cstr105ukrv[fnStr103QPop] Query01 detail*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}    
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    SELECT A.DIV_CODE
		        , A.ITEM_CODE
		        , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                    ELSE C2.ITEM_NAME
		        END)                                                                     AS ITEM_NAME
		        , C2.SPEC                                                                AS SPEC
		        , A.INOUT_TYPE_DETAIL
		        , A.CREATE_LOC
		        , (CASE WHEN ISNULL ( A.INOUT_DATE , '' ) = ''
		                THEN ''
		                ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.INOUT_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING (A.INOUT_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING (A.INOUT_DATE, 7, 2))
		            END)                                                                 AS INOUT_DATE  
		        , A.ORDER_UNIT_Q                                                         AS INOUT_Q
		        , A.WH_CODE
		        , C4.TREE_NAME                                                           AS WH_NAME
		        , A.INOUT_PRSN
		        , C.RECEIVER_ID
		        , C.RECEIVER_NAME
		        , C.TELEPHONE_NUM1
		        , C.TELEPHONE_NUM2
		        , ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, '')                        AS ADDRESS
		        , A.INOUT_NUM
		        , A.ISSUE_REQ_NUM
		        , A.PROJECT_NO
		        , A.SALE_DIV_CODE
		        , (CASE WHEN @RefItem = '1' THEN C3.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C3.CUSTOM_NAME2
		                                    ELSE C3.CUSTOM_NAME
		           END)                                                                  AS SALE_CUST_NM
		        , A.INOUT_CODE
		        , A.MONEY_UNIT
		        , A.EXCHG_RATE_O
		        , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN (CASE WHEN ISNULL(E.SALE_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.SALE_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(E.SALE_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(E.SALE_DATE, 7, 2))
		                                                        END) 
		                                                    ELSE (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		                                                        END)
		            END                                                                 AS SALE_DATE
		         , C1.AGENT_TYPE
		         , C1.CREDIT_YN
		         , C1.WON_CALC_BAS
		         , C1.TAX_TYPE
		         , C1.BUSI_PRSN
		         , A.WH_CODE
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN SOF110T C  WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                            AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                            AND C.ORDER_NUM      = A.ORDER_NUM
		                                            AND C.SER_NO         = A.ORDER_SEQ
		        LEFT  JOIN TEA110T F  WITH (NOLOCK)  ON F.COMP_CODE      = A.COMP_CODE
		                                            AND F.DIV_CODE       = A.DIV_CODE
		                                            AND F.SO_SER_NO      = A.ORDER_NUM
		                                            AND F.SO_SER         = A.ORDER_SEQ
		        INNER JOIN BCM100T C1 WITH (NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                            AND C1.CUSTOM_CODE   = A.INOUT_CODE
		        INNER JOIN BPR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                            AND C2.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN BCM100T C3 WITH (NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                            AND C3.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		        INNER  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                            AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                            AND C4.TREE_CODE     = A.WH_CODE
		        LEFT  JOIN SSA110T D  WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                            AND D.DIV_CODE       = A.DIV_CODE
		                                            AND D.INOUT_NUM      = A.INOUT_NUM
		                                            AND D.INOUT_SEQ      = A.INOUT_SEQ
		        LEFT  JOIN SSA100T E  WITH (NOLOCK)  ON E.COMP_CODE      = D.COMP_CODE
		                                            AND E.DIV_CODE       = D.DIV_CODE
		                                            AND E.BILL_NUM       = D.BILL_NUM
		    WHERE A.COMP_CODE          = @CompCode               
		      AND A.INOUT_TYPE         = '2'                               
		      AND A.INOUT_TYPE_DETAIL != '98'                                 /* SET구성출고제외 */ 
		      AND A.DIV_CODE          = #{DIV_CODE}
			 --바코드로 등록 된 데이터만 조회: 다른 루트로 등록된 데이터들은 BARCODE_KEY가 없어서 매칭이 안 됨
		      AND ISNULL(A.BARCODE_KEY, '') != ''
		      
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			= #{CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		      AND C1.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">  
		      AND A.INOUT_PRSN        = #{INOUT_PRSN}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">  
		      AND A.INOUT_DATE    &gt;= #{INOUT_DATE_FR}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">  
		      AND A.INOUT_DATE    &lt;= #{INOUT_DATE_TO}
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		      AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">  
		      AND A.PROJECT_NO     LIKE #{PROJECT_NO}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">  
		      AND A.ISSUE_REQ_NUM  LIKE #{ISSUE_REQ_NUM} + '%'
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">  
		      AND C.RECEIVER_NAME  LIKE '%' + #{RECEIVER_NAME}
		    </if>  
		      AND A.CREATE_LOC        = #{CREATE_LOC}
		   		    
		    ORDER BY A.DIV_CODE, A.ITEM_CODE, A.INOUT_DATE
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
      </if>
    </select>

	<select id="str105ukrvServiceImpl.selectRequestiList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)
		
		    SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
		         , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
		         , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
		
		     FROM BSA100T
		    WHERE COMP_CODE = @CompCode
		      AND MAIN_CODE = N'S048'
		      AND SUB_CODE IN (N'SI', N'SR', N'SS')
		
		    IF @TimeSI IS NULL
		        SET @TimeSI = 'N'
		    IF @TimeSR IS NULL
		        SET @TimeSR = 'N'
		    IF @TimeSS IS NULL
		        SET @TimeSS = 'N'
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}    
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		
		    /* 데이터 조회 */
		    SELECT  
		           CAST(0 AS BIT)                                                          AS CHOICE
		         ,(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                    ELSE C1.CUSTOM_NAME
		            END)                                                                   AS CUSTOM_NAME                                                               
		         , A.ITEM_CODE                                                                   
		         ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                    ELSE C2.ITEM_NAME
		            END)                                                                   AS ITEM_NAME                                                               
		         , C2.SPEC                                                                        
		         , A.ORDER_UNIT                                                                  
		         , A.TRANS_RATE                                                                  
		         , CAST(A.ISSUE_REQ_DATE AS DATETIME) AS ISSUE_REQ_DATE                          
		         ,(CASE WHEN ISNULL(A.ISSUE_DATE , '') = ''
		                     THEN ''
		                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.ISSUE_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING(A.ISSUE_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING(A.ISSUE_DATE, 7, 2))
		                END) + RTRIM(' ' + CASE @TimeSR WHEN 'Y' THEN ISNULL(A.DELIVERY_TIME,'')            
		                                                ELSE ''                                             
		                                    END)                                          AS ISSUE_DATE
		         ,(A.ISSUE_REQ_QTY - A.ISSUE_QTY)                                         AS NOT_REQ_Q
		         , A.ISSUE_REQ_QTY
		         , A.ISSUE_WGT_Q
		         , A.ISSUE_VOL_Q    
		         , ISNULL(D.GOOD_STOCK_Q, 0)                                              AS STOCK_Q
		         , A.WH_CODE                                                                     
		         , A.ORDER_NUM                                                                   
		         , A.ISSUE_REQ_NUM                                                               
		         , A.ISSUE_REQ_SEQ                                                               
		         , A.PROJECT_NO                                                                  
		         , E.PAY_METHODE1                                                         AS PAY_METHODE1
		         , E1.LC_SER_NO                                                           AS LC_SER_NO
		         , A.LOT_NO                                                                      
		         , B.RECEIVER_ID
		         , B.RECEIVER_NAME
		         , B.TELEPHONE_NUM1
		         , B.TELEPHONE_NUM2
		         , ISNULL(B.ADDRESS1, '') + ISNULL(B.ADDRESS2, '')                        AS ADDRESS
		         ,(CASE WHEN @RefItem = '1' THEN C6.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C6.CUSTOM_NAME2
		                                    ELSE C6.CUSTOM_NAME
		            END)                                                                  AS ORDER_CUST_CD 
		         , A.DIV_CODE                                                                    
		         , A.CUSTOM_CODE                                                                 
		         , A.INOUT_TYPE_DETAIL                                                           
		         , A.WH_CELL_CODE                                                                
		         , C5.WH_CELL_NAME                                                                
		         , A.ISSUE_REQ_PRICE                                                             
		         , A.ISSUE_REQ_AMT                                                               
		         , A.ISSUE_REQ_TAX_AMT                                                           
		         , A.TAX_TYPE                                                                    
		         , A.MONEY_UNIT                                                                  
		         , A.EXCHANGE_RATE                                                               
		         --, A.ACCOUNT_YNC
		         , CASE WHEN ISNULL(M1.REF_CODE1, '') = '' THEN M1.SUB_CODE
		                ELSE M1.REF_CODE1
		           END                                                                    AS ACCOUNT_YNC
		         , A.DISCOUNT_RATE                                                               
		         , A.ISSUE_REQ_PRSN                                                       AS ISSUE_REQ_PRSN
		         , A.DVRY_CUST_CD                                                                
		         , A.REMARK                                                                      
		         , A.SER_NO                                                                      
		         , A.SALE_CUSTOM_CODE                                                            
		         ,(CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
		                                     ELSE C4.CUSTOM_NAME
		            END)                                                                  AS SALE_CUST_CD
		         , A.ISSUE_DIV_CODE                                                              
		         , A.BILL_TYPE                                                                   
		         , A.ORDER_TYPE                                                                  
		         , A.PRICE_YN                                                                    
		         , A.PO_NUM                                                                      
		         , A.PO_SEQ                                                                      
		         , C1.CREDIT_YN                                                                   
		         , ISNULL(C1.WON_CALC_BAS , '3')                                          AS WON_CALC_BAS
		         , ISNULL(C1.TAX_TYPE     , '1')                                          AS TAX_INOUT
		         , A.AGENT_TYPE                                                                   
		         , ISNULL(C2.STOCK_CARE_YN, 'Y')                                          AS STOCK_CARE_YN
		         , C2.STOCK_UNIT                                                                  
		         , C7.DVRY_CUST_NM                                                        AS DVRY_CUST_NAME
		         , C.TAX_INOUT                                                            AS SOF100_TAX_INOUT
		         , CASE WHEN ISNULL(B.RETURN_Q, 0) &gt; 0 THEN 'Y' ELSE 'N' END              AS RETURN_Q_YN
		         , CASE WHEN ISNULL(A.REF_LOC, '1') = '1' THEN ISNULL(B.ORDER_Q, 0)
		                                                  ELSE ISNULL(E1.QTY, 0)
		            END                                                                   AS ORDER_Q
		         , CASE WHEN ISNULL(M1.REF_CODE2, '') = '' THEN M1.SUB_CODE
		                ELSE M1.REF_CODE2
		           END                                                                    AS REF_CODE2
		         , ISNULL(C2.EXCESS_RATE, 0)                                              AS EXCESS_RATE
		         , A.DEPT_CODE
		         , C3.ITEM_ACCOUNT    
		         , A.PRICE_TYPE
		         , A.ISSUE_FOR_WGT_P
		         , A.ISSUE_WGT_P
		         , A.ISSUE_FOR_VOL_P
		         , A.ISSUE_VOL_P
		         , A.WGT_UNIT
		         , A.UNIT_WGT
		         , A.VOL_UNIT
		         , A.UNIT_VOL
		         
		         --화폐, 환율 가져오기
				 , C1.MONEY_UNIT
		         --외화단가, 외화금액 가져오기
		         , A.ISSUE_FOR_PRICE
		         , A.ISSUE_FOR_AMT
		         
		      FROM            SRQ100T A  WITH (NOLOCK)
		           LEFT  JOIN SOF110T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                              AND  B.DIV_CODE       = A.DIV_CODE
		                                              AND  B.ORDER_NUM      = A.ORDER_NUM
		                                              AND  B.SER_NO         = A.SER_NO
		           LEFT  JOIN SOF100T C  WITH (NOLOCK) ON  C.COMP_CODE      = B.COMP_CODE
		                                              AND  C.DIV_CODE       = B.DIV_CODE
		                                              AND  C.ORDER_NUM      = B.ORDER_NUM
		           LEFT  JOIN BIV100T D  WITH (NOLOCK) ON  D.COMP_CODE      = A.COMP_CODE
		                                              AND  D.DIV_CODE       = A.ISSUE_DIV_CODE
		                                              AND  D.WH_CODE        = A.WH_CODE
		                                              AND  D.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE    = A.CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
		                                              AND C2.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                              AND C3.DIV_CODE       = A.DIV_CODE
		                                              AND C3.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BCM100T C4 WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
		                                              AND C4.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE      = A.COMP_CODE
		                                              AND C5.DIV_CODE       = A.DIV_CODE
		                                              AND C5.WH_CODE        = A.WH_CODE
		                                              AND C5.WH_CELL_CODE   = A.WH_CELL_CODE
		           LEFT  JOIN BCM100T C6 WITH (NOLOCK) ON C6.COMP_CODE      = C.COMP_CODE
		                                              AND C6.CUSTOM_CODE    = C.CUSTOM_CODE
		           LEFT  JOIN SCM100T C7 WITH (NOLOCK) ON C7.COMP_CODE      = A.COMP_CODE
		                                              AND C7.CUSTOM_CODE    = A.CUSTOM_CODE
		                                              AND CONVERT(NVARCHAR, C7.DVRY_CUST_SEQ) = A.DVRY_CUST_CD
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                              AND M1.MAIN_CODE      = N'S007'
		                                              AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN TEA100T E  WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
		                                              AND E.DIV_CODE        = A.DIV_CODE
		                                              AND E.SO_SER_NO       = A.ORDER_NUM
		           LEFT  JOIN TEA110T E1 WITH (NOLOCK) ON E1.COMP_CODE      = A.COMP_CODE
		                                              AND E1.DIV_CODE       = A.DIV_CODE
		                                              AND E1.SO_SER_NO      = A.ORDER_NUM
		                                              AND E1.SO_SER         = A.SER_NO
		    
		     WHERE A.COMP_CODE        = @CompCode
		       AND A.ISSUE_REQ_QTY    &gt; A.ISSUE_QTY
		     <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
		       AND ISNULL(A.REF_LOC, '1') = #{CREATE_LOC}
		     </if>  		
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">      
		       AND A.ISSUE_DIV_CODE   	  = #{DIV_CODE}		/*마스터폼 param*/
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">  
		       AND A.MONEY_UNIT           = #{MONEY_UNIT}	/*마스터폼 param*/
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
		       AND A.CUSTOM_CODE          = #{CUSTOM_CODE}	/*마스터폼 param*/
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">  
		       AND C1.CUSTOM_NAME         = #{CUSTOM_NAME}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		     AND B.RECEIVER_NAME 	   LIKE #{CREATE_LOC} + '%'   /*마스터폼 param*/
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 			= #{ITEM_CODE}						/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 			LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		       AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_FR)">  
		       AND A.ISSUE_DATE       &gt;= #{ISSUE_DATE_FR}
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_TO)">  
		       AND A.ISSUE_DATE       &lt;= #{ISSUE_DATE_TO}
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">  
		       AND A.ISSUE_REQ_NUM     LIKE #{ISSUE_REQ_NUM} + '%'
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">  
		       AND A.PROJECT_NO        LIKE #{PROJECT_NO} %'
		     </if>  
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">  
		       AND A.WH_CODE  			  = #{WH_CODE}      
		     </if>
		   
		     GROUP BY A.CUSTOM_CODE      , C1.CUSTOM_NAME    , A.ITEM_CODE        , C2.ITEM_NAME       , C2.ITEM_NAME1
		            , C2.ITEM_NAME2         , C2.SPEC
		            , A.ORDER_UNIT       , A.TRANS_RATE        , A.ISSUE_REQ_DATE   , A.ISSUE_DATE       , A.DELIVERY_TIME
		            , A.ISSUE_REQ_QTY    , A.ISSUE_QTY         , D.GOOD_STOCK_Q     , A.ISSUE_REQ_NUM    , A.ISSUE_REQ_SEQ
		            , A.PROJECT_NO       , A.LOT_NO            , B.RECEIVER_ID      , B.RECEIVER_NAME    , B.TELEPHONE_NUM1
		            , B.TELEPHONE_NUM2   , B.ADDRESS1          , B.ADDRESS2         , C6.CUSTOM_NAME     , C6.CUSTOM_NAME1 
		            , C6.CUSTOM_NAME2    , A.INOUT_TYPE_DETAIL , A.ISSUE_DIV_CODE , A.BILL_TYPE
		            , A.WH_CODE          , A.WH_CELL_CODE      , C5.WH_CELL_NAME    , A.ISSUE_REQ_PRICE  , A.ISSUE_REQ_AMT
		            , A.ISSUE_REQ_TAX_AMT, A.TAX_TYPE          , A.MONEY_UNIT       , A.EXCHANGE_RATE    , A.ACCOUNT_YNC
		            , A.DISCOUNT_RATE    , A.ISSUE_REQ_PRSN    , A.DVRY_CUST_CD     , A.REMARK           , A.ORDER_NUM
		            , A.SER_NO           , A.SALE_CUSTOM_CODE  , C4.CUSTOM_NAME     , C4.CUSTOM_NAME1     , C4.CUSTOM_NAME2    
		            , A.ORDER_TYPE       , A.PRICE_YN          , A.PO_NUM           , A.PO_SEQ           , C1.CREDIT_YN
		            , C1.WON_CALC_BAS    , C1.TAX_TYPE         , A.AGENT_TYPE       , C2.STOCK_CARE_YN   , C2.STOCK_UNIT
		            , C7.DVRY_CUST_NM    , C.TAX_INOUT         , B.RETURN_Q         , B.ORDER_Q          , M1.REF_CODE2
		            , M1.SUB_CODE        , C2.EXCESS_RATE      , A.DEPT_CODE        , A.COMP_CODE        , A.DIV_CODE
		            , E.PAY_METHODE1     , E1.LC_SER_NO        , C3.ITEM_ACCOUNT    , C1.CUSTOM_NAME1     , C1.CUSTOM_NAME2
		            , A.REF_LOC          , E1.QTY              , A.ISSUE_WGT_Q      , A.ISSUE_VOL_Q
		            , A.PRICE_TYPE       , A.ISSUE_FOR_WGT_P   , A.ISSUE_WGT_P      , A.ISSUE_VOL_P      , A.ISSUE_FOR_VOL_P
		            , A.WGT_UNIT         , A.UNIT_WGT          , A.VOL_UNIT         , A.UNIT_VOL
			         --화폐, 환율 가져오기
		            , C1.MONEY_UNIT
			         --외화단가, 외화금액 가져오기
		            , A.ISSUE_FOR_PRICE  , A.ISSUE_FOR_AMT
		            --ACCOUNT_YNC 가져오기
		            , M1.REF_CODE1
		    
		     ORDER BY A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ, C1.CUSTOM_NAME, A.ISSUE_REQ_PRSN DESC, A.ITEM_CODE, A.ISSUE_DATE
		     
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>	

	<select id="str105ukrvServiceImpl.selectSalesOrderList" parameterType="Map" resultType="rMap">	
		/* str105ukrv.Cstr105ukrv[fnSof101QRef] Query01 */		    
		BEGIN
          SET NOCOUNT ON
          SET ARITHABORT ON
        
             DECLARE @COMP_CODE     NVARCHAR(08)
                   , @DIV_CODE      NVARCHAR(08)
                   , @MONEY_UNIT    NVARCHAR(03)
                   , @CUSTOM_CODE   NVARCHAR(08)
                   , @CUSTOM_NAME   NVARCHAR(50)
                   , @ITEM_CODE     NVARCHAR(20)
                   , @ITEM_NAME     NVARCHAR(200)
                   , @DVRY_DATE_FR  NVARCHAR(08)
                   , @DVRY_DATE_TO  NVARCHAR(08)
                   , @ORDER_NUM     NVARCHAR(20)
                   , @PROJECT_NO    NVARCHAR(20)
                   , @NATION_INOUT  NVARCHAR(03)
                   , @WH_CODE       NVARCHAR(08)
                   , @WH_CELL_CODE  NVARCHAR(20)
                   , @USER_ID       NVARCHAR(100)
        
              SET @COMP_CODE    = #{S_COMP_CODE}       ---- 법인코드(필수)
              SET @DIV_CODE     = #{DIV_CODE}           ---- 사업장코드(필수)
              SET @MONEY_UNIT   = #{MONEY_UNIT}          ---- 화폐단위(필수)
              SET @CUSTOM_CODE  = #{CUSTOM_CODE}         ---- 거래처코드(필수)
              SET @CUSTOM_NAME  = #{CUSTOM_NAME}             ---- 거래처명(필수)
              SET @ITEM_CODE    = #{ITEM_CODE}             ---- 품목코드(옵션)
              SET @ITEM_NAME    = #{ITEM_NAME}             ---- 품명(옵션)
              SET @DVRY_DATE_FR = #{DVRY_DATE_FR}             ---- 납기일 FROM(옵션)
              SET @DVRY_DATE_TO = #{DVRY_DATE_TO}             ---- 납기일 TO(옵션)
              SET @ORDER_NUM    = #{ORDER_NUM}             ---- 수주번호(옵션)
              SET @PROJECT_NO   = #{PROJECT_NO}             ---- 프로젝트번호(옵션)
              SET @WH_CODE      = #{WH_CODE}                ---- 창고코드(옵션)
              SET @WH_CELL_CODE = #{WH_CELL_CODE}             ---- 창고셀코드(옵션)
              SET @NATION_INOUT = #{NATION_INOUT}           ---- 국내외(옵션)
              SET @USER_ID      = #{S_USER_ID}              ---- 사용자ID(필수)
        
              EXEC unilite.USP_SALES_GetNotInoutOrderRef   @COMP_CODE,     @DIV_CODE,     @MONEY_UNIT, @CUSTOM_CODE, @CUSTOM_NAME,  @ITEM_CODE, @ITEM_NAME
                                                         , @DVRY_DATE_FR,  @DVRY_DATE_TO, @ORDER_NUM,  @PROJECT_NO,  @NATION_INOUT, @WH_CODE,   @WH_CELL_CODE
                                                         , @USER_ID
                                                         --20190812 수정
                                                         , ''
        
        
           SET NOCOUNT OFF
           SET ARITHABORT OFF
        
          END
	</select>

	<select id="str105ukrvServiceImpl.selectList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">	
		/* str105ukrvServiceImpl.selectList */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
		
			/* 시분초 필드 처리여부 설정 */
			DECLARE @TimeSI		NVARCHAR(01)
				  , @TimeSR		NVARCHAR(01)
				  , @TimeSS		NVARCHAR(01)
				  , @CompCode	NVARCHAR(08)	/* 법인코드			*/
				  , @UserId		NVARCHAR(100)	/* 사용자ID		*/
				  , @LangType	NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem	NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat	NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
		
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = 'KO'
		
			SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
				 , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
				 , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'S048'
			   AND SUB_CODE IN (N'SI', N'SR', N'SS')
		
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH(NOLOCK)
			 WHERE USER_ID = @UserId
		
			SET @RefItem = ISNULL(@RefItem, N'0')
		
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'
		
			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
			IF @TimeSI IS NULL
				SET @TimeSI = 'N'
			IF @TimeSR IS NULL
				SET @TimeSR = 'N'
			IF @TimeSS IS NULL
				SET @TimeSS = 'N'
		

		SELECT Z.* 
			 , (SELECT MAX(INOUT_SEQ)
				  FROM BTR100T WITH(NOLOCK)
				 WHERE COMP_CODE  = @CompCode
				   AND INOUT_TYPE = N'2'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				   AND DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
				   AND INOUT_NUM = #{INOUT_NUM}
			</if>
				) AS MAX_INOUT_SEQ
		  FROM (
				SELECT 'SUM'														AS TYPE
					 , '1'															AS TYPE_LEVEL
					 , A.BARCODE_KEY												AS 'myId'
					 , 'root'														AS BARCODE_KEY
					 , 0															AS INOUT_SEQ			--수불순번
					 , MIN(INOUT_SEQ)												AS MIN_INOUT_SEQ
					 , MAX(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
								WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
								ELSE C1.CUSTOM_NAME
						   END)														AS CUSTOM_NAME			--거래처명
					 , MAX(A.INOUT_TYPE_DETAIL)										AS INOUT_TYPE_DETAIL	--수불유형(S006, S007, S008, M103, M104)
					 , MAX(A.WH_CODE)												AS WH_CODE				--창고코드
					 , MAX(C4.TREE_NAME)											AS WH_NAME				--창고명
					 , MAX(A.WH_CELL_CODE)											AS WH_CELL_CODE			--창고 CELL코드
					 , MAX(C5.WH_CELL_NAME)											AS WH_CELL_NAME			--창고 CELL명
					 , MAX(A.SALE_DIV_CODE)											AS SALE_DIV_CODE		--매출사업장
					 , MAX(A.ITEM_CODE)												AS ITEM_CODE			--품목코드
					 , MAX(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
								WHEN @RefItem = '2' THEN C2.ITEM_NAME2
								ELSE C2.ITEM_NAME
						   END)														AS ITEM_NAME			--품목명
					 , MAX(C2.SPEC)													AS SPEC					--규격
					 , ''															AS LOT_NO				--LOT_NO
					 , MAX(A.ITEM_STATUS)											AS ITEM_STATUS			--품목상태
					 , MAX(A.ORDER_UNIT)											AS ORDER_UNIT			--구매/판매단위
					 , MAX(A.PRICE_TYPE)											AS PRICE_TYPE			--단가구분
					 , MAX(A.TRNS_RATE)												AS TRANS_RATE			--변환계수(입수)
					 , SUM(A.ORDER_UNIT_Q)											AS ORDER_UNIT_Q			--구매단위 수량
					 , MAX(A.ORDER_UNIT_P)											AS ORDER_UNIT_P			--구매단위 단가(자사)
					 , SUM(ISNULL(A.INOUT_WGT_Q, 0))								AS INOUT_WGT_Q			--출하지시량(중량단위)
					 , MAX(ISNULL(A.INOUT_FOR_WGT_P, 0))							AS INOUT_FOR_WGT_P		--외화단가(중량단위)
					 , SUM(ISNULL(A.INOUT_VOL_Q, 0))								AS INOUT_VOL_Q			--출하지시량(부피단위)
					 , MAX(ISNULL(A.INOUT_FOR_VOL_P, 0))							AS INOUT_FOR_VOL_P		--외화단가(부피단위)
					 , MAX(ISNULL(A.INOUT_WGT_P, 0))								AS INOUT_WGT_P			--단가(중량단위)  
					 , MAX(ISNULL(A.INOUT_VOL_P, 0))								AS INOUT_VOL_P			--단가(부피단위) 
					 , SUM(A.ORDER_UNIT_O)											AS ORDER_UNIT_O			--구매/판매 단위금액
					 , MAX(A.TAX_TYPE)												AS TAX_TYPE				--세액구분
					 , SUM(A.INOUT_TAX_AMT)											AS INOUT_TAX_AMT		--세액
					 , SUM(A.ORDER_UNIT_O + A.INOUT_TAX_AMT)						AS ORDER_AMT_SUM		--합계금액
					 , MAX(A.WGT_UNIT)												AS WGT_UNIT				--중량단위
					 , MAX(ISNULL(A.UNIT_WGT, 0))									AS UNIT_WGT				--단위중량
					 , MAX(A.VOL_UNIT)												AS VOL_UNIT				--부피단위
					 , MAX(ISNULL(A.UNIT_VOL, 0))									AS UNIT_VOL				--단위부피
					 , SUM(ISNULL(A.TRANS_COST, 0))									AS TRANS_COST			--운반비
					 , MAX(ISNULL(A.DISCOUNT_RATE, 0))								AS DISCOUNT_RATE		--할인율
					 , MAX(CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q, 0)
								ELSE 0.0
						   END)														AS STOCK_Q				--재고수량
					 , MAX(CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q / A.TRNS_RATE, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q / A.TRNS_RATE, 0)
								ELSE 0.0
						   END)														AS ORDER_STOCK_Q		--판매단위재고수량
					 , MAX(A.PRICE_YN)												AS PRICE_YN				--단가구분
					 , MAX(A.ACCOUNT_YNC)											AS ACCOUNT_YNC			--계산서대상(S014)
					 , MAX(CASE WHEN ISNULL(A.DELIVERY_DATE , '') = '' THEN ''
								ELSE REPLACE(REPLACE(REPLACE(@DateFormat 
								   , 'YYYY' , SUBSTRING(A.DELIVERY_DATE, 1, 4))
								   , 'MM'   , SUBSTRING(A.DELIVERY_DATE, 5, 2))
								   , 'DD'   , SUBSTRING(A.DELIVERY_DATE, 7, 2))
						   END)														AS DELIVERY_DATE		--거래명세표 출력일자/납품일자
					 , MAX(A.DELIVERY_TIME)											AS DELIVERY_TIME		--거래명세표 출력시간/납품시간
					 --주문정보(유통)
					 , MAX(C.RECEIVER_ID)											AS RECEIVER_ID			--고객ID(수신자)
					 , MAX(C.RECEIVER_NAME)											AS RECEIVER_NAME		--고객명(수신자)
					 , MAX(C.TELEPHONE_NUM1)										AS TELEPHONE_NUM1		--전화번호1
					 , MAX(C.TELEPHONE_NUM2)										AS TELEPHONE_NUM2		--전화번호2
					 , MAX(ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, ''))			AS ADDRESS				--주소
					 , MAX(CASE WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
								WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
								ELSE D2.CUSTOM_NAME
						   END)														AS SALE_CUST_CD			--매출처
					 , MAX(A.SALE_PRSN)												AS SALE_PRSN			--영업담당
					 , MAX(A.DVRY_CUST_CD)											AS DVRY_CUST_CD			--배송처코드
					 , MAX(D3.DVRY_CUST_NM)											AS DVRY_CUST_NAME		--배송처명
					 , MAX(CASE WHEN @RefItem = '1' THEN D4.CUSTOM_NAME1
								WHEN @RefItem = '2' THEN D4.CUSTOM_NAME2
								ELSE D4.CUSTOM_NAME
						   END)														AS ORDER_CUST_CD		--수주처
					 , MAX(A.PROJECT_NO)											AS PLAN_NUM				--관리번호
					 , MAX(A.ORDER_NUM)												AS ORDER_NUM			--수/발주번호
					 , MAX(A.ISSUE_REQ_NUM)											AS ISSUE_REQ_NUM		--출하지시번호
					 , MAX(A.BASIS_NUM)												AS BASIS_NUM			--근거번호
					 , MAX(F1.PAY_METHODE1)											AS PAY_METHODE1			--대금결제방법
					 , MAX(F.LC_SER_NO)												AS LC_SER_NO			-- LC번호
					 , MAX(A.REMARK)												AS REMARK				--비고
					 , A.INOUT_NUM																			--수불번호
					 , MAX(CASE WHEN ISNULL(A.INOUT_DATE , '') = '' THEN ''
								ELSE REPLACE(REPLACE(REPLACE(@DateFormat 
								   , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
								   , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
								   , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
						   END)														AS INOUT_DATE			--수불일
					 , MAX(A.INOUT_METH)											AS INOUT_METH			--수불방법(B036)
					 , MAX(A.INOUT_TYPE)											AS INOUT_TYPE			--수불유형(S006, S007, S008, M103, M104)
					 , MAX(A.DIV_CODE)												AS DIV_CODE				--사업장코드
					 , MAX(A.INOUT_CODE_TYPE)										AS INOUT_CODE_TYPE		--수불처구분(B005)
					 , MAX(A.INOUT_CODE)											AS INOUT_CODE			--수불처코드
					 , MAX(A.SALE_CUSTOM_CODE)										AS SALE_CUSTOM_CODE		--매출처
					 , MAX(A.CREATE_LOC)											AS CREATE_LOC			--생성경로
					 , ''															AS UPDATE_DB_USER		--수정자
					 , ''															AS UPDATE_DB_TIME		--수정일
					 , MAX(A.MONEY_UNIT)											AS MONEY_UNIT			--화폐단위
					 , MAX(A.EXCHG_RATE_O)											AS EXCHG_RATE_O			--환율
					 , SUM(A.ORDER_UNIT_Q)											AS ORIGIN_Q				--구매단위 수량
					 , MAX(ISNULL(E.ORDER_NOT_Q, 0.0))								AS ORDER_NOT_Q			--미납량(수주기준) : 쿼리에서 SUM 된 값
					 , MAX(ISNULL(B.ISSUE_REQ_QTY, 0) - ISNULL(B.ISSUE_QTY, 0))		AS ISSUE_NOT_Q			--미납량(출하지시기준) : 확인필요
					 , MAX(A.ORDER_SEQ)												AS ORDER_SEQ			--수/발주순번
					 , MAX(A.ISSUE_REQ_SEQ)											AS ISSUE_REQ_SEQ		--출하지시순번
					 , MAX(A.BASIS_SEQ)												AS BASIS_SEQ			--근거순번
					 , MAX(A.ORDER_TYPE)											AS ORDER_TYPE			--입고:발주형태(M001), 출고:판매유형(s002)
					 , MAX(ISNULL(C2.STOCK_UNIT, ''))								AS STOCK_UNIT			--재고단위
					 , MAX(A.BILL_TYPE)												AS BILL_TYPE			--매출유형
					 , MAX(A.SALE_TYPE)												AS SALE_TYPE			--매출구분
					 , MAX(C1.CREDIT_YN)											AS CREDIT_YN			--여신적용여부
					 , SUM(A.ACCOUNT_Q)												AS ACCOUNT_Q			--계산서량
					 , MAX(A.SALE_C_YN)												AS SALE_C_YN			--미매출마감여부
					 , MAX(A.INOUT_PRSN)											AS INOUT_PRSN			--수불담당
					 , MAX(ISNULL(C1.WON_CALC_BAS, '3'))							AS WON_CALC_BAS			--원미만계산법
					 , MAX(ISNULL(C1.TAX_TYPE , '1'))								AS TAX_INOUT			--세액포함여부
					 , MAX(ISNULL(C1.AGENT_TYPE  , '1'))							AS AGENT_TYPE			--거래처분류(B055)
					 , MAX(ISNULL(C2.STOCK_CARE_YN, 'Y'))							AS STOCK_CARE_YN		--재고관리여부
					 , CASE WHEN SUM(C.RETURN_Q) > 0 THEN 'Y'
							ELSE 'N'
					   END															AS RETURN_Q_YN			--반품존재여부
					 , MAX(ISNULL(M1.REF_CODE2,''))									AS REF_CODE2			--출고유형
					 , MAX(ISNULL(C2.EXCESS_RATE, 0))								AS EXCESS_RATE			--과출고허용율
					 , MAX(ISNULL(C.ORDER_Q, 0))									AS SRC_ORDER_Q			--수주량
					 , MAX(CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN ISNULL(C.ORDER_P, 0)
								ELSE ISNULL(F.PRICE, 0)
						   END)															AS SOF110T_PRICE
					 , MAX(ISNULL(B.ISSUE_REQ_PRICE, 0))							AS SRQ100T_PRICE
					 , A.COMP_CODE																			--법인코드
					 , MAX(A.DEPT_CODE)												AS DEPT_CODE			--담당자 부서코드
					 , MAX(C3.ITEM_ACCOUNT)											AS ITEM_ACCOUNT			--품목계정
					 , 'FEFER'														AS GUBUN
					 , MAX(D.NATION_INOUT)											AS NATION_INOUT			--국내외구분
					 , MAX(ISNULL(C1.BUSI_PRSN, ''))								AS BUSI_PRSN

				  FROM		BTR100T A  WITH(NOLOCK)
				  LEFT JOIN SRQ100T B  WITH(NOLOCK)  ON B.COMP_CODE		= A.COMP_CODE
													AND B.ISSUE_DIV_CODE= A.DIV_CODE
													AND B.ISSUE_REQ_NUM	= A.ISSUE_REQ_NUM
													AND B.ISSUE_REQ_SEQ	= A.ISSUE_REQ_SEQ
				  LEFT JOIN SOF110T C  WITH(NOLOCK)  ON C.COMP_CODE		= A.COMP_CODE
													AND C.OUT_DIV_CODE	= A.DIV_CODE
													AND C.ORDER_NUM		= A.ORDER_NUM
													AND C.SER_NO		= A.ORDER_SEQ
				 INNER JOIN BCM100T C1 WITH(NOLOCK)  ON C1.COMP_CODE	= A.COMP_CODE
													AND C1.CUSTOM_CODE	= A.INOUT_CODE
				 INNER JOIN BPR100T C2 WITH(NOLOCK)  ON C2.COMP_CODE	= A.COMP_CODE
													AND C2.ITEM_CODE	= A.ITEM_CODE
				 INNER JOIN BPR200T C3 WITH(NOLOCK)  ON C3.COMP_CODE	= A.COMP_CODE
													AND C3.DIV_CODE		= A.DIV_CODE
													AND C3.ITEM_CODE	= A.ITEM_CODE
				  LEFT JOIN BSA220T C4 WITH(NOLOCK)  ON C4.COMP_CODE	= A.COMP_CODE
													AND C4.TYPE_LEVEL	= A.DIV_CODE
													AND C4.TREE_CODE	= A.WH_CODE
				  LEFT JOIN BSA225T C5 WITH(NOLOCK)  ON C5.COMP_CODE	= A.COMP_CODE
													AND C5.DIV_CODE		= A.DIV_CODE
													AND C5.WH_CODE		= A.WH_CODE
													AND C5.WH_CELL_CODE	= A.WH_CELL_CODE
				  LEFT JOIN SOF100T D  WITH(NOLOCK)  ON D.COMP_CODE		= A.COMP_CODE
													AND D.DIV_CODE		= A.DIV_CODE
													AND D.ORDER_NUM		= A.ORDER_NUM
				  LEFT JOIN BIV100T D1 WITH(NOLOCK)  ON D1.COMP_CODE	= A.COMP_CODE
													AND D1.DIV_CODE		= A.DIV_CODE
													AND D1.WH_CODE		= A.WH_CODE
													AND D1.ITEM_CODE	= A.ITEM_CODE
				  LEFT JOIN BCM100T D2 WITH(NOLOCK)  ON D2.COMP_CODE	= A.COMP_CODE
													AND D2.CUSTOM_CODE	= A.SALE_CUSTOM_CODE
				  LEFT JOIN SCM100T D3 WITH(NOLOCK)  ON D3.COMP_CODE	= A.COMP_CODE
													AND D3.CUSTOM_CODE	= A.INOUT_CODE
													AND D3.DVRY_CUST_SEQ= CASE WHEN ISNUMERIC(A.DVRY_CUST_CD) = 1 THEN A.DVRY_CUST_CD ELSE -1 END
				  LEFT JOIN BCM100T D4 WITH(NOLOCK)  ON D4.COMP_CODE	= D.COMP_CODE
													AND D4.CUSTOM_CODE	= D.CUSTOM_CODE
				  LEFT  JOIN (
								SELECT X.COMP_CODE
									 , X.OUT_DIV_CODE
									 , X.ORDER_NUM
									 , X.SER_NO
							--		 , ISNULL(X.ORDER_Q - X.OUTSTOCK_Q + X.RETURN_Q - X.ISSUE_REQ_Q
							--		 - SUM(ISNULL(Z.ISSUE_QTY, 0.0)), 0.0)							AS ORDER_NOT_Q
									 , ISNULL(X.ORDER_Q - X.OUTSTOCK_Q + X.RETURN_Q 
									 	, 0.0)							AS ORDER_NOT_Q
								  FROM SOF110T X WITH(NOLOCK)
								  LEFT JOIN SRQ100T Z WITH(NOLOCK) ON  Z.COMP_CODE			= X.COMP_CODE
																	 AND Z.ISSUE_DIV_CODE	= X.OUT_DIV_CODE
																	 AND Z.ORDER_NUM		= X.ORDER_NUM
																	 AND Z.SER_NO			= X.SER_NO
								 GROUP BY X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO, X.ORDER_Q, X.OUTSTOCK_Q, X.RETURN_Q, X.ISSUE_REQ_Q
							 )	E					 ON E.COMP_CODE		= A.COMP_CODE
													AND E.OUT_DIV_CODE	= A.DIV_CODE
													AND E.ORDER_NUM		= A.ORDER_NUM
													AND E.SER_NO		= A.ORDER_SEQ
				  LEFT JOIN TEA110T F  WITH(NOLOCK)  ON F.COMP_CODE		= A.COMP_CODE
													AND F.DIV_CODE		= A.DIV_CODE
													AND F.SO_SER_NO		= A.ORDER_NUM
													AND F.SO_SER		= A.ORDER_SEQ
				  LEFT JOIN TEA100T F1 WITH(NOLOCK)  ON F1.COMP_CODE	= A.COMP_CODE
													AND F1.DIV_CODE		= A.DIV_CODE
													AND F1.SO_SER_NO	= A.ORDER_NUM
				  LEFT JOIN BSA100T M1 WITH(NOLOCK)  ON M1.COMP_CODE	= A.COMP_CODE
													AND M1.MAIN_CODE	= 'S007'
													AND M1.SUB_CODE		= A.INOUT_TYPE_DETAIL
				 GROUP BY A.COMP_CODE, A.INOUT_NUM, A.ORDER_NUM, A.ORDER_SEQ, A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ, A.BARCODE_KEY

				) Z

			 WHERE Z.COMP_CODE  = @CompCode
			   AND Z.INOUT_TYPE = N'2'
			   --바코드로 등록 된 데이터만 조회: 다른 루트로 등록된 데이터들은 BARCODE_KEY가 없어서 매칭이 안 됨
			   AND ISNULL(Z.myId, '') != ''
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND Z.DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
			   AND Z.INOUT_NUM = #{INOUT_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND Z.INOUT_CODE = #{CUSTOM_CODE}
			</if>
			ORDER BY Z.COMP_CODE, Z.MIN_INOUT_SEQ--, Z.[id]

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
	
	<select id="str105ukrvServiceImpl.selectList2" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">	
		/* str105ukrvServiceImpl.selectList2 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
		
			/* 시분초 필드 처리여부 설정 */
			DECLARE @TimeSI		NVARCHAR(01)
				  , @TimeSR		NVARCHAR(01)
				  , @TimeSS		NVARCHAR(01)
				  , @CompCode	NVARCHAR(08)	/* 법인코드			*/
				  , @UserId		NVARCHAR(100)	/* 사용자ID		*/
				  , @LangType	NVARCHAR(02)	/* 언어구분			*/
				  , @RefItem	NVARCHAR(01)	/* 명칭 참조 유형		*/
				  , @DateFormat	NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
		
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = 'KO'
		
			SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
				 , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
				 , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'S048'
			   AND SUB_CODE IN (N'SI', N'SR', N'SS')
		
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH(NOLOCK)
			 WHERE USER_ID = @UserId
		
			SET @RefItem = ISNULL(@RefItem, N'0')
		
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'
		
			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
			IF @TimeSI IS NULL
				SET @TimeSI = 'N'
			IF @TimeSR IS NULL
				SET @TimeSR = 'N'
			IF @TimeSS IS NULL
				SET @TimeSS = 'N'
		

		SELECT Z.* 
			 , (SELECT MAX(INOUT_SEQ)
				  FROM BTR100T WITH(NOLOCK)
				 WHERE COMP_CODE  = @CompCode
				   AND INOUT_TYPE = N'2'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				   AND DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
				   AND INOUT_NUM = #{INOUT_NUM}
			</if>
				) AS MAX_INOUT_SEQ
		  FROM (
				SELECT '개별'															AS TYPE
					 , '2'															AS TYPE_LEVEL
					 , ''															AS 'myId'
					 , A.BARCODE_KEY												AS BARCODE_KEY
					 , A.INOUT_SEQ
					 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
							WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
							ELSE C1.CUSTOM_NAME
					   END															AS CUSTOM_NAME
					 , A.INOUT_TYPE_DETAIL
					 , A.WH_CODE
					 , C4.TREE_NAME													AS WH_NAME
					 , A.WH_CELL_CODE
					 , C5.WH_CELL_NAME
					 , A.SALE_DIV_CODE
					 , A.ITEM_CODE
					 , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
							WHEN @RefItem = '2' THEN C2.ITEM_NAME2
							ELSE C2.ITEM_NAME
					   END															AS ITEM_NAME
					 , C2.SPEC
					 , A.LOT_NO
					 , A.ITEM_STATUS
					 , A.ORDER_UNIT
					 , A.PRICE_TYPE																			 --단가구분  
					 , A.TRNS_RATE													AS TRANS_RATE
					 , A.ORDER_UNIT_Q												AS ORDER_UNIT_Q
					 , A.ORDER_UNIT_P												AS ORDER_UNIT_P 
					 , ISNULL(A.INOUT_WGT_Q, 0)										AS INOUT_WGT_Q			--출하지시량(중량단위)
					 , ISNULL(A.INOUT_FOR_WGT_P, 0)									AS INOUT_FOR_WGT_P		--외화단가(중량단위)
					 , ISNULL(A.INOUT_VOL_Q, 0)										AS INOUT_VOL_Q			--출하지시량(부피단위)
					 , ISNULL(A.INOUT_FOR_VOL_P, 0)									AS INOUT_FOR_VOL_P		--외화단가(부피단위)
					 , ISNULL(A.INOUT_WGT_P, 0)										AS INOUT_WGT_P			--단가(중량단위)  
					 , ISNULL(A.INOUT_VOL_P, 0)										AS INOUT_VOL_P			--단가(부피단위) 
					 , A.ORDER_UNIT_O												AS ORDER_UNIT_O
					 , A.TAX_TYPE
					 , A.INOUT_TAX_AMT
					 , A.ORDER_UNIT_O + A.INOUT_TAX_AMT								AS ORDER_AMT_SUM		--합계금액
					 , A.WGT_UNIT																			--중량단위
					 , ISNULL(A.UNIT_WGT, 0)										AS UNIT_WGT				--단위중량
					 , A.VOL_UNIT																			--부피단위
					 , ISNULL(A.UNIT_VOL, 0)										AS UNIT_VOL				--단위부피
					 , ISNULL(A.TRANS_COST, 0)										AS TRANS_COST
					 , ISNULL(A.DISCOUNT_RATE, 0)									AS DISCOUNT_RATE
					 , CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q, 0)
							WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q, 0)
							ELSE 0.0
					   END									AS STOCK_Q				--재고수량
					 , CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q / A.TRNS_RATE, 0)
							WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q / A.TRNS_RATE, 0)
							ELSE 0.0
					   END															AS ORDER_STOCK_Q		--판매단위재고수량
					 , A.PRICE_YN
					 , A.ACCOUNT_YNC
					 , CASE WHEN ISNULL(A.DELIVERY_DATE , '') = '' THEN ''
							ELSE REPLACE(REPLACE(REPLACE(@DateFormat 
							   , 'YYYY' , SUBSTRING(A.DELIVERY_DATE, 1, 4))
							   , 'MM'   , SUBSTRING(A.DELIVERY_DATE, 5, 2))
							   , 'DD'   , SUBSTRING(A.DELIVERY_DATE, 7, 2))
					   END															AS DELIVERY_DATE
					 , A.DELIVERY_TIME
					 , C.RECEIVER_ID
					 , C.RECEIVER_NAME
					 , C.TELEPHONE_NUM1
					 , C.TELEPHONE_NUM2
					 , ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, '')				AS ADDRESS
					 , CASE WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
							WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
							ELSE D2.CUSTOM_NAME
					   END															AS SALE_CUST_CD
					 , A.SALE_PRSN
					 , A.DVRY_CUST_CD
					 , D3.DVRY_CUST_NM												AS DVRY_CUST_NAME
					 , CASE WHEN @RefItem = '1' THEN D4.CUSTOM_NAME1
							WHEN @RefItem = '2' THEN D4.CUSTOM_NAME2
							ELSE D4.CUSTOM_NAME
					   END															AS ORDER_CUST_CD
					 , A.PROJECT_NO													AS PLAN_NUM
					 , A.ORDER_NUM
					 , A.ISSUE_REQ_NUM
					 , A.BASIS_NUM
					 , F1.PAY_METHODE1												AS PAY_METHODE1
					 , F.LC_SER_NO													AS LC_SER_NO
					 , A.REMARK
					 , A.INOUT_NUM
					 , CASE WHEN ISNULL(A.INOUT_DATE , '') = '' THEN ''
							ELSE REPLACE(REPLACE(REPLACE(@DateFormat 
							   , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
							   , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
							   , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
					   END															AS INOUT_DATE
					 , A.INOUT_METH
					 , A.INOUT_TYPE
					 , A.DIV_CODE
					 , A.INOUT_CODE_TYPE
					 , A.INOUT_CODE
					 , A.SALE_CUSTOM_CODE
					 , A.CREATE_LOC
					 , A.UPDATE_DB_USER
					 , A.UPDATE_DB_TIME
					 , A.MONEY_UNIT
					 , A.EXCHG_RATE_O
					 , A.ORDER_UNIT_Q												AS ORIGIN_Q
					 , ISNULL(E.ORDER_NOT_Q, 0.0)									AS ORDER_NOT_Q
					 , ISNULL(B.ISSUE_REQ_QTY, 0) - ISNULL(B.ISSUE_QTY, 0)			AS ISSUE_NOT_Q
					 , A.ORDER_SEQ
					 , A.ISSUE_REQ_SEQ
					 , A.BASIS_SEQ
					 , A.ORDER_TYPE
					 , ISNULL(C2.STOCK_UNIT, '')									AS STOCK_UNIT
					 , A.BILL_TYPE
					 , A.SALE_TYPE
					 , C1.CREDIT_YN
					 , A.ACCOUNT_Q
					 , A.SALE_C_YN
					 , A.INOUT_PRSN
					 , ISNULL(C1.WON_CALC_BAS, '3')									AS WON_CALC_BAS
					 , ISNULL(C1.TAX_TYPE , '1')									AS TAX_INOUT
					 , ISNULL(C1.AGENT_TYPE  , '1')									AS AGENT_TYPE
					 , ISNULL(C2.STOCK_CARE_YN, 'Y')								AS STOCK_CARE_YN
					 , CASE WHEN C.RETURN_Q > 0 THEN 'Y'
							ELSE 'N'
					   END															AS RETURN_Q_YN
					 , ISNULL(M1.REF_CODE2,'')										AS REF_CODE2
					 , ISNULL(C2.EXCESS_RATE, 0)									AS EXCESS_RATE
					 , ISNULL(ORDER_Q, 0)											AS SRC_ORDER_Q
					 , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN ISNULL(C.ORDER_P, 0)
							ELSE ISNULL(F.PRICE, 0)
					   END															AS SOF110T_PRICE
					 , ISNULL(B.ISSUE_REQ_PRICE, 0)									AS SRQ100T_PRICE
					 , A.COMP_CODE
					 , A.DEPT_CODE
					 , C3.ITEM_ACCOUNT
					 , 'FEFER'														AS GUBUN
					 , D.NATION_INOUT

				  FROM		BTR100T A  WITH(NOLOCK)
				  LEFT JOIN SRQ100T B  WITH(NOLOCK)  ON B.COMP_CODE		= A.COMP_CODE
													AND B.ISSUE_DIV_CODE= A.DIV_CODE
													AND B.ISSUE_REQ_NUM	= A.ISSUE_REQ_NUM
													AND B.ISSUE_REQ_SEQ	= A.ISSUE_REQ_SEQ
				  LEFT JOIN SOF110T C  WITH(NOLOCK)  ON C.COMP_CODE		= A.COMP_CODE
													AND C.OUT_DIV_CODE	= A.DIV_CODE
													AND C.ORDER_NUM		= A.ORDER_NUM
													AND C.SER_NO		= A.ORDER_SEQ
				 INNER JOIN BCM100T C1 WITH(NOLOCK)  ON C1.COMP_CODE	= A.COMP_CODE
													AND C1.CUSTOM_CODE	= A.INOUT_CODE
				 INNER JOIN BPR100T C2 WITH(NOLOCK)  ON C2.COMP_CODE	= A.COMP_CODE
													AND C2.ITEM_CODE	= A.ITEM_CODE
				 INNER JOIN BPR200T C3 WITH(NOLOCK)  ON C3.COMP_CODE	= A.COMP_CODE
													AND C3.DIV_CODE		= A.DIV_CODE
													AND C3.ITEM_CODE	= A.ITEM_CODE
				  LEFT JOIN BSA220T C4 WITH(NOLOCK)  ON C4.COMP_CODE	= A.COMP_CODE
													AND C4.TYPE_LEVEL	= A.DIV_CODE
													AND C4.TREE_CODE	= A.WH_CODE
				  LEFT JOIN BSA225T C5 WITH(NOLOCK)  ON C5.COMP_CODE	= A.COMP_CODE
													AND C5.DIV_CODE		= A.DIV_CODE
													AND C5.WH_CODE		= A.WH_CODE
													AND C5.WH_CELL_CODE	= A.WH_CELL_CODE
				  LEFT JOIN SOF100T D  WITH(NOLOCK)  ON D.COMP_CODE		= A.COMP_CODE
													AND D.DIV_CODE		= A.DIV_CODE
													AND D.ORDER_NUM		= A.ORDER_NUM
				  LEFT JOIN BIV100T D1 WITH(NOLOCK)  ON D1.COMP_CODE	= A.COMP_CODE
													AND D1.DIV_CODE		= A.DIV_CODE
													AND D1.WH_CODE		= A.WH_CODE
													AND D1.ITEM_CODE	= A.ITEM_CODE
				  LEFT JOIN BCM100T D2 WITH(NOLOCK)  ON D2.COMP_CODE	= A.COMP_CODE
													AND D2.CUSTOM_CODE	= A.SALE_CUSTOM_CODE
				  LEFT JOIN SCM100T D3 WITH(NOLOCK)  ON D3.COMP_CODE	= A.COMP_CODE
													AND D3.CUSTOM_CODE	= A.INOUT_CODE
													AND D3.DVRY_CUST_SEQ= CASE WHEN ISNUMERIC(A.DVRY_CUST_CD) = 1 THEN A.DVRY_CUST_CD ELSE -1 END
				  LEFT JOIN BCM100T D4 WITH(NOLOCK)  ON D4.COMP_CODE	= D.COMP_CODE
													AND D4.CUSTOM_CODE	= D.CUSTOM_CODE
				  LEFT  JOIN (
								SELECT X.COMP_CODE
									 , X.OUT_DIV_CODE
									 , X.ORDER_NUM
									 , X.SER_NO
									 , ISNULL(X.ORDER_Q - X.OUTSTOCK_Q + X.RETURN_Q - X.ISSUE_REQ_Q
									 - SUM(ISNULL(Z.ISSUE_QTY, 0.0)), 0.0)							AS ORDER_NOT_Q
								  FROM SOF110T X WITH(NOLOCK)
								  LEFT JOIN SRQ100T Z WITH(NOLOCK) ON  Z.COMP_CODE			= X.COMP_CODE
																	 AND Z.ISSUE_DIV_CODE	= X.OUT_DIV_CODE
																	 AND Z.ORDER_NUM		= X.ORDER_NUM
																	 AND Z.SER_NO			= X.SER_NO
								 GROUP BY X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO, X.ORDER_Q, X.OUTSTOCK_Q, X.RETURN_Q, X.ISSUE_REQ_Q
							 )	E					 ON E.COMP_CODE		= A.COMP_CODE
													AND E.OUT_DIV_CODE	= A.DIV_CODE
													AND E.ORDER_NUM		= A.ORDER_NUM
													AND E.SER_NO		= A.ORDER_SEQ
				  LEFT JOIN TEA110T F  WITH(NOLOCK)  ON F.COMP_CODE		= A.COMP_CODE
													AND F.DIV_CODE		= A.DIV_CODE
													AND F.SO_SER_NO		= A.ORDER_NUM
													AND F.SO_SER		= A.ORDER_SEQ
				  LEFT JOIN TEA100T F1 WITH(NOLOCK)  ON F1.COMP_CODE	= A.COMP_CODE
													AND F1.DIV_CODE		= A.DIV_CODE
													AND F1.SO_SER_NO	= A.ORDER_NUM
				  LEFT JOIN BSA100T M1 WITH(NOLOCK)  ON M1.COMP_CODE	= A.COMP_CODE
													AND M1.MAIN_CODE	= 'S007'
													AND M1.SUB_CODE		= A.INOUT_TYPE_DETAIL
				) Z

			 WHERE Z.COMP_CODE  = @CompCode
			   AND Z.INOUT_TYPE = N'2'
			   --바코드로 등록 된 데이터만 조회: 다른 루트로 등록된 데이터들은 BARCODE_KEY가 없어서 매칭이 안 됨
			   AND ISNULL(Z.BARCODE_KEY, '') != ''
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND Z.DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
			   AND Z.INOUT_NUM = #{INOUT_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND Z.INOUT_CODE = #{CUSTOM_CODE}
			</if>
			ORDER BY Z.COMP_CODE, Z.INOUT_NUM--, Z.[id]

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
	
	<insert id="str105ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/* str105ukrv.Cstr105ukrv[fnStr103Save] Query01 */
		INSERT INTO L_BTR100T
		     ( KEY_VALUE,         OPR_FLAG
		     , COMP_CODE,         DIV_CODE,        INOUT_NUM,      INOUT_SEQ,       INOUT_TYPE,        INOUT_METH
		     , INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE,     WH_CODE,         INOUT_DATE		   
		     , ITEM_CODE,         ITEM_STATUS,     INOUT_Q,        INOUT_P,         INOUT_I
		     , MONEY_UNIT,        INOUT_FOR_P,     INOUT_FOR_O,    EXCHG_RATE_O,    ORDER_TYPE
		     , ORDER_NUM,         ORDER_SEQ,       INOUT_PRSN,     BASIS_NUM,       BASIS_SEQ
		     , ACCOUNT_YNC,       ACCOUNT_Q,       CREATE_LOC,     SALE_C_YN,       REMARK
		     , ORDER_UNIT,        TRNS_RATE,       PROJECT_NO,     ORDER_UNIT_Q,    ORDER_UNIT_P
		     , ORDER_UNIT_FOR_P,  ISSUE_REQ_NUM,   ISSUE_REQ_SEQ,  DVRY_CUST_CD,    DISCOUNT_RATE
		     , INOUT_TAX_AMT,     TAX_TYPE,        LOT_NO,         SALE_DIV_CODE,   SALE_CUSTOM_CODE
		     , BILL_TYPE,         SALE_TYPE,       PRICE_YN,       ORDER_UNIT_O,    SALE_PRSN
		     , FR_ACCOUNT,        TO_ACCOUNT,      LC_NUM,         TRADE_LOC
		     , DELIVERY_DATE,     DELIVERY_TIME,   WH_CELL_CODE,   AGENT_TYPE,      DEPT_CODE
		     , TRANS_COST,        PRICE_TYPE,      INOUT_WGT_Q,    INOUT_FOR_WGT_P, INOUT_WGT_P
		     , INOUT_VOL_Q,       INOUT_FOR_VOL_P, INOUT_VOL_P,    WGT_UNIT,        UNIT_WGT
		     , VOL_UNIT,          UNIT_VOL,        NATION_INOUT,   SALE_C_DATE,     BARCODE_KEY
		     , UPDATE_DB_USER,    UPDATE_DB_TIME
		     )
		SELECT  #{KEY_VALUE}                                                    -- KEY_VALUE
		      , #{OPR_FLAG}                                          			-- OPR_FLAG
		      , #{COMP_CODE}                                 					-- COMP_CODE
		      , #{DIV_CODE}                                 					-- DIV_CODE
		      , #{INOUT_NUM}                                					-- INOUT_NUM
		      , #{INOUT_SEQ}                                					-- INOUT_SEQ
		      , N'2'                                                            -- INOUT_TYPE
		      , #{INOUT_METH}                         							-- INOUT_METH
		      , #{INOUT_TYPE_DETAIL}                         					-- INOUT_TYPE_DETAIL
		      , N'4'                                                            -- INOUT_CODE_TYPE
		      , #{INOUT_CODE}                               					-- INOUT_CODE
		      , #{WH_CODE}                               						-- WH_CODE
		      , #{INOUT_DATE}                              					    -- INOUT_DATE
		      , #{ITEM_CODE}                               						-- ITEM_CODE
		      , #{ITEM_STATUS}                               					-- ITEM_STATUS
		      , ${ORDER_UNIT_Q} * ${TRANS_RATE}                                 -- INOUT_Q
		      --20200611 수정: 자사단가 가져오는 로직 수정
		      , ${ORDER_UNIT_P} / ${TRANS_RATE} * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_P
		      --20200611 수정: 자사단가 가져오는 로직 수정
		      , CAST(CAST(${ORDER_UNIT_O} AS NUMERIC(30, 6))
		           * CAST(${EXCHG_RATE_O} AS NUMERIC(30, 6)) AS NUMERIC(30, 6)) / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_I
		      , #{MONEY_UNIT}                               					-- MONEY_UNIT
		      , ${ORDER_UNIT_P} / ${TRANS_RATE}                                 -- INOUT_FOR_P
		      , #{ORDER_UNIT_O}                                                 -- INOUT_FOR_O
		      , #{EXCHG_RATE_O}                               					-- EXCHG_RATE_O
		      , #{ORDER_TYPE}                               					-- ORDER_TYPE
		      , #{ORDER_NUM}                               						-- ORDER_NUM
		      , #{ORDER_SEQ}                              						-- ORDER_SEQ
		      , #{INOUT_PRSN}                               					-- INOUT_PRSN
		      , #{BASIS_NUM}                            					    -- BASIS_NUM
		      , #{BASIS_SEQ}                               						-- BASIS_SEQ
		      , #{ACCOUNT_YNC}                               					-- ACCOUNT_YNC
		      ,   0                                                             -- ACCOUNT_Q
		      , #{CREATE_LOC}                                					-- CREATE_LOC
		      , N'N'                                                            -- SALE_C_YN
		      , #{REMARK}                             							-- REMARK
		      , #{ORDER_UNIT}                             						-- ORDER_UNIT
		      , #{TRANS_RATE}                             						-- TRNS_RATE
		      , #{PLAN_NUM}                             						-- PROJECT_NO
		      , #{ORDER_UNIT_Q}                             					-- ORDER_UNIT_Q
		      , #{ORDER_UNIT_P}                             					-- ORDER_UNIT_P
		      , #{ORDER_UNIT_P}                             					-- ORDER_UNIT_FOR_P
		      , #{ISSUE_REQ_NUM}                            					-- ISSUE_REQ_NUM
		      , #{ISSUE_REQ_SEQ}                             					-- ISSUE_REQ_SEQ
		      , #{DVRY_CUST_CD}                             					-- DVRY_CUST_CD
		      , #{DISCOUNT_RATE}                             					-- DISCOUNT_RATE
		      , #{INOUT_TAX_AMT}												-- INOUT_TAX_AMT
		      , #{TAX_TYPE}                          							-- TAX_TYPE
		      , #{LOT_NO}                          								-- LOT_NO
		      , #{SALE_DIV_CODE}                      							-- SALE_DIV_CODE
		      , #{SALE_CUSTOM_CODE}                  							-- SALE_CUSTOM_CODE
		      , #{BILL_TYPE}                          							-- BILL_TYPE
		      , #{SALE_TYPE}                          							-- SALE_TYPE
		      , #{PRICE_YN}                          							-- PRICE_YN
		      , #{ORDER_UNIT_O}                          						-- ORDER_UNIT_O
		      , #{SALE_PRSN}                          							-- SALE_PRSN
		      , ITEM_ACCOUNT                                                            -- FR_ACCOUNT
		      , CASE WHEN ITEM_ACCOUNT >= N'40' THEN N'00' ELSE ITEM_ACCOUNT END        -- TO_ACCOUNT
		      , #{LC_SER_NO}                                 					-- LC_NUM
		      , CASE WHEN #{CREATE_LOC} = '5' THEN 
		             CASE WHEN #{PAY_METHODE1}  = 'MLC' THEN '1'
		                  WHEN #{PAY_METHODE1}  = 'LLC' THEN '2'
		                  WHEN #{ISSUE_REQ_NUM} != ''   THEN '4'
		                  ELSE '3'
		              END
		             ELSE #{CREATE_LOC}
		         END                                                            -- TRADE_LOC
		      , #{DELIVERY_DATE}                            					-- DELIVERY_DATE
		      , #{DELIVERY_TIME}                            					-- DELIVERY_TIME
		      , #{WH_CELL_CODE}                            						-- WH_CELL_CODE
		      , #{AGENT_TYPE}                           						-- AGENT_TYPE
		      , #{DEPT_CODE}                            						-- DEPT_CODE
		      , #{TRANS_CODE}                            						-- TRANS_CODE
		      , #{PRICE_TYPE}                            						-- PRICE_TYPE
		      , #{INOUT_WGT_Q}                           						-- INOUT_WGT_Q
		      , #{INOUT_FOR_WGT_P}                           					-- INOUT_FOR_WGT_P
		      , #{INOUT_WGT_P}                            						-- INOUT_WGT_P
		      , #{INOUT_VOL_Q}                            						-- INOUT_VOL_Q
		      , #{INOUT_FOR_VOL_P}                            					-- INOUT_FOR_VOL_P
		      , #{INOUT_VOL_P}                            						-- INOUT_VOL_P
		      , #{WGT_UNIT}                           							-- WGT_UNIT
		      , #{UNIT_WGT}                            							-- UNIT_WGT
		      , #{VOL_UNIT}                            							-- VOL_UNIT
		      , #{UNIT_VOL}                            							-- UNIT_VOL
		      , #{NATION_INOUT}                                                 -- 국내외구분
		      , #{SALE_DATE}                                                    -- 매출일
		      , #{BARCODE_KEY}
		      , #{S_USER_ID}                            						-- UPDATE_DB_USER
		      , GETDATE()                                                    	-- UPDATE_DB_TIME
         FROM   BPR200T WITH (NOLOCK)
		WHERE   COMP_CODE = #{COMP_CODE}
		  AND   DIV_CODE  = #{DIV_CODE}
		  AND   ITEM_CODE = #{ITEM_CODE}
	</insert>
	
	<update id="spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Str103ukr (
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{SalePrsnChk	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<select id="str105ukrvServiceImpl.deptWhcode" parameterType="Map" resultType="rMap">
		/* str105ukrvServiceImpl.deptWhcode */
		SELECT WH_CODE
		  FROM BSA210T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND TYPE_LEVEL = #{DIV_CODE}
		   AND TREE_CODE = #{DEPT_CODE}
	</select>	

	<select id="str105ukrvServiceImpl.printList" parameterType="Map" resultType="rMap">
	   BEGIN
	            DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
	                                , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장                          
	                              , @INOUT_NUM       NVARCHAR(1000)               --(선택) 출하지시번호
	            SET NOCOUNT ON
	            SET ARITHABORT ON
	        
	            SET @COMP_CODE                  =   ISNULL(#{S_COMP_CODE}, '')
	            SET @DIV_CODE                   =   ISNULL(#{DIV_CODE}, '')        
	       		SET @INOUT_NUM                  =   ISNULL(#{INOUT_NUM}, '')
	       		
	            SELECT 
	                  A.INOUT_NUM
	                  
	               -- , A.INOUT_CODE --거래처 코드
	               -- , MAX(C.CUSTOM_NAME) AS CUSTOM_NAME--거래처 명        
 					, MAX(C.CUSTOM_FULL_NAME) AS CUSTOM_NAME--거래처 명                  
	                , MAX(RTRIM(ISNULL(C.ADDR1,'') + ISNULL(C.ADDR2,''))) AS ADDR   
	                , MAX(CASE WHEN ISNULL(K.CUSTOM_ITEM_CODE, '') = '' THEN A.ITEM_CODE ELSE K.CUSTOM_ITEM_CODE END) AS ITEM_CODE
	                  
	                , MAX(A.ORDER_UNIT) AS ORDER_UNIT
	                , sum(ISNULL(A.ORDER_UNIT_Q, 0))        AS INOUT_Q
	                , MAX(A.REMARK) AS REMARK
	                , MAX(B.ITEM_MODEL) AS ITEM_MODEL
	                
	            FROM BTR100T A WITH(NOLOCK)
	            INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE  
	                                AND B.ITEM_CODE = A.ITEM_CODE
	            INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE 
	                                AND C.CUSTOM_CODE = A.INOUT_CODE  
	 			LEFT JOIN BPR300T K WITH(NOLOCK) ON K.COMP_CODE = A.COMP_CODE
												AND K.DIV_CODE = A.DIV_CODE
												AND K.ITEM_CODE = A.ITEM_CODE 
												AND K.CUSTOM_CODE = A.INOUT_CODE
												AND K.APLY_START_DATE &lt;= A.INOUT_DATE
												AND K.APLY_END_DATE &gt;= A.INOUT_DATE
	            WHERE A.COMP_CODE = @COMP_CODE
	              AND A.DIV_CODE = @DIV_CODE
	              AND A.INOUT_NUM = @INOUT_NUM
	               
	            GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, CASE WHEN ISNULL(K.CUSTOM_ITEM_CODE, '') = '' THEN A.ITEM_CODE ELSE K.CUSTOM_ITEM_CODE END
	              
	              
	            ORDER BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, CASE WHEN ISNULL(K.CUSTOM_ITEM_CODE, '') = '' THEN A.ITEM_CODE ELSE K.CUSTOM_ITEM_CODE END
	    
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF    
	        END
 
	</select>



	<select id="str105ukrvServiceImpl.getFifo" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DIV_CODE		NVARCHAR(08)
			  , @ITEM_CODE		NVARCHAR(20)
			  , @ITEM_NAME		NVARCHAR(200)
			  , @SPEC			NVARCHAR(160)
			  , @UNIT			NVARCHAR(03)
			  , @LOT_NO			NVARCHAR(20)
			  , @SLOT_NO		NVARCHAR(20)
			  , @ORDER_UNIT_Q	NUMERIC(30, 6)
			  , @WH_CODE		NVARCHAR(08)
			  , @INOUT_NUM		NVARCHAR(20)
			  , @INOUT_SEQ		NUMERIC(4, 0)
			  , @REMARK			NVARCHAR(200)
			  , @KEY_VALUE		NVARCHAR(20)
			  
			  , @STOCK_Q		NUMERIC(30, 6)
			  
			  , @LOT_NO_S		NVARCHAR(MAX)

			  , @LOT_NO_OUT		NVARCHAR(20)
			  , @LANG_CODE		NVARCHAR(02)
			  , @ERR_MSG		NVARCHAR(MAX)
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @DIV_CODE		= #{DIV_CODE}
			SET @ITEM_CODE		= #{ITEM_CODE}
			SET @LOT_NO			= #{LOT_NO}
			SET @ORDER_UNIT_Q	= #{ORDER_UNIT_Q}
			SET @WH_CODE		= #{WH_CODE}
			SET @KEY_VALUE		= #{KEY_VALUE}
			SET @LOT_NO_S		= #{LOT_NO_S}
			SET @LANG_CODE		= #{S_LANG_CODE}
		
		
		BEGIN TRY

		DECLARE @DAY_TERM NUMERIC(3, 0)
		
		SELECT @DAY_TERM = REF_CODE1 
		-- SELECT REF_CODE1 
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND MAIN_CODE = 'B704'
		   AND SUB_CODE  = '10'
		
		IF ISNULL(@DAY_TERM, 0) = 0
		  SET @DAY_TERM = 1


		--0.입력된 Lot_no가 박스포장일 경우
		IF(LEFT(@LOT_NO, 1) = 'X')
			BEGIN
				DECLARE BOX_LOTNO_CUR CURSOR FOR
				SELECT A.LOT_NO		
						, A.QTY
						, A.ITEM_CODE
						, @ITEM_NAME	AS ITEM_NAME
						, @SPEC			AS SPEC
						, @UNIT			AS UNIT
						, A.INOUT_NUM	
						, A.INOUT_SEQ	
						, A.REMARK		
					FROM		STR800T A WITH(NOLOCK)
					LEFT JOIN BIV150T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
													AND B.DIV_CODE	= A.DIV_CODE
													AND B.ITEM_CODE	= A.ITEM_CODE
													AND B.LOT_NO		= A.LOT_NO
													AND B.WH_CODE		= A.WH_CODE  --추가 2018-09-30
					--COMP_CODE, DIV_CODE, BOX_BARCODE, LOT_NO
					WHERE A.COMP_CODE	= @COMP_CODE
					AND A.DIV_CODE	= @DIV_CODE
					AND A.BOX_BARCODE= @LOT_NO

				OPEN BOX_LOTNO_CUR

				-- BOX_LOTNO_CUR  커서 패치
				FETCH NEXT FROM BOX_LOTNO_CUR INTO @SLOT_NO, @ORDER_UNIT_Q, @ITEM_CODE, @ITEM_NAME, @SPEC, @UNIT, @INOUT_NUM, @INOUT_SEQ, @REMARK

				-- 처리
				WHILE @@fetch_status = 0
				BEGIN
					--1.입력한 Lot_no 등록여부 확인
					SELECT @ITEM_CODE		= ISNULL(A.ITEM_CODE	, '')
						 , @SLOT_NO			= ISNULL(A.LOT_NO		, '')
						 
						 --, @ORDER_UNIT_Q	= ISNULL(A.GOOD_STOCK_Q	, 0)
						 , @STOCK_Q			= ISNULL(A.GOOD_STOCK_Q	, 0)  --재고수량
						 , @ORDER_UNIT_Q	= ISNULL(@ORDER_UNIT_Q	, 0)  --박스포장된 수량으로 변경--2018-08-25 JUN
						 
						 , @ITEM_NAME		= ISNULL(B.ITEM_NAME	, '')
						 , @SPEC			= ISNULL(B.SPEC			, '')
						 , @UNIT			= ISNULL(B.STOCK_UNIT	, '')
						 , @INOUT_NUM		= ISNULL(C.INOUT_NUM	, '')
						 , @INOUT_SEQ		= ISNULL(C.INOUT_SEQ	, 0)
						 , @REMARK			= ISNULL(C.REMARK		, '')
					  FROM		BIV150T A WITH(NOLOCK)
					 INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
		  											   AND B.ITEM_CODE	= A.ITEM_CODE
					  LEFT JOIN (
								  SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ, MAX(REMARK) AS REMARK
									FROM BTR100T WITH (NOLOCK, INDEX(BTR100T_IDX07))
								   GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ
								  ) AS C				ON C.COMP_CODE	= A.COMP_CODE
													   AND C.DIV_CODE	= A.DIV_CODE
													   AND C.ITEM_CODE	= A.ITEM_CODE
													   AND C.LOT_NO		= A.LOT_NO
					 WHERE A.COMP_CODE	= @COMP_CODE
					   AND A.DIV_CODE	= @DIV_CODE
					   AND A.ITEM_CODE	= CASE WHEN ISNULL(@ITEM_CODE, '') = '' THEN A.ITEM_CODE
					   						   ELSE @ITEM_CODE
					   					  END
					   AND A.WH_CODE	= @WH_CODE
					   AND A.LOT_NO		= @SLOT_NO
		   
					IF (@@ROWCOUNT = 0)					--입력된 LOT_NO가 등록되지 않았을때,
						BEGIN
							--SET @ERR_MSG = '등록되지 않은 Lot No. 입니다.;' + '(Lot No.: ' + @SLOT_NO + ')'												--800006
							SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800006', '', @LANG_CODE) + ';' + '(Lot No.: ' + @SLOT_NO + ')'			--800006
							RAISERROR (@ERR_MSG, 16, 1)
						END
					
					ELSE IF ( @ORDER_UNIT_Q &gt; @STOCK_Q )	-- 박스포장된 수량이 재고수량보다 많을 때   -- @ORDER_UNIT_Q(박스포자수량) &gt; @STOCK_Q(재고수량),
						BEGIN
							--SET @ERR_MSG = '재고수량보다 BOX포장된 수량이 많습니다..;' + '(Lot No.: ' + @SLOT_NO + ')'										--800007
							SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800007', '', @LANG_CODE) + ';' + '(Lot No.: ' + @SLOT_NO + ')'			--800007
							RAISERROR (@ERR_MSG, 16, 1)
						END

					ELSE IF (@ORDER_UNIT_Q &lt;= 0)		--입력된 LOT_NO의 재고(양품)량이 0일 때,
						BEGIN
							--SET @ERR_MSG = '입력된 Lot No.의 재고가 존재하지 않습니다.;' + '(Lot No.: ' + @SLOT_NO + ')'										--800008
							SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800008', '', @LANG_CODE) + ';' + '(Lot No.: ' + @SLOT_NO + ')'			--800008
							RAISERROR (@ERR_MSG, 16, 1)
						END
			
		
		 

					--2.입력한 Lot_no 보다 선입된 Lot_no 존재여부 확인  (--재확인 필요 -2018-09-30 JUN)
						--체크로직 삭제



						INSERT INTO BOX_BARCODE_TABLE
						SELECT @KEY_VALUE
							 , UPPER(@ITEM_CODE)+ '|'
							 + UPPER(@SLOT_NO)	+ '|'
							 + CONVERT(NVARCHAR, @ORDER_UNIT_Q) + '|'
							 + @ITEM_NAME		+ '|'
							 + @SPEC			+ '|'
							 + @UNIT			+ '|'
							 + @INOUT_NUM		+ '|'
							 + CONVERT(NVARCHAR, @INOUT_SEQ)	+ '|'
							 + @REMARK									AS NEWVALUE
							 , @ERR_MSG									AS ERR_MSG
						  

					FETCH NEXT FROM BOX_LOTNO_CUR INTO @SLOT_NO, @ORDER_UNIT_Q, @ITEM_CODE, @ITEM_NAME, @SPEC, @UNIT, @INOUT_NUM, @INOUT_SEQ, @REMARK
				END

				CLOSE BOX_LOTNO_CUR
				DEALLOCATE BOX_LOTNO_CUR
				
				SELECT * FROM BOX_BARCODE_TABLE WHERE KEY_VALUE = @KEY_VALUE
				DELETE FROM  BOX_BARCODE_TABLE WHERE KEY_VALUE = @KEY_VALUE
			END
		ELSE
			BEGIN
				--1.입력한 Lot_no 등록여부 확인
				SELECT @ITEM_CODE		= ISNULL(A.ITEM_CODE	, '')
					 , @LOT_NO			= ISNULL(A.LOT_NO		, '')
					 , @ORDER_UNIT_Q	= ISNULL(A.GOOD_STOCK_Q	, 0)
					 , @ITEM_NAME		= ISNULL(B.ITEM_NAME	, '')
					 , @SPEC			= ISNULL(B.SPEC			, '')
					 , @UNIT			= ISNULL(B.STOCK_UNIT	, '')
					 , @INOUT_NUM		= ISNULL(C.INOUT_NUM	, '')
					 , @INOUT_SEQ		= ISNULL(C.INOUT_SEQ	, 0)
					 , @REMARK			= ISNULL(C.REMARK		, '')
				  FROM		BIV150T A WITH(NOLOCK)
				 INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
		  										   AND B.ITEM_CODE	= A.ITEM_CODE
				  LEFT JOIN (
							  SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ, MAX(REMARK) AS REMARK
								FROM BTR100T WITH (NOLOCK, INDEX(BTR100T_IDX07))
							   GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ
							  ) AS C				ON C.COMP_CODE	= A.COMP_CODE
												   AND C.DIV_CODE	= A.DIV_CODE
												   AND C.ITEM_CODE	= A.ITEM_CODE
												   AND C.LOT_NO		= A.LOT_NO
				 WHERE A.COMP_CODE	= @COMP_CODE
				   AND A.DIV_CODE	= @DIV_CODE
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				   AND A.ITEM_CODE	= @ITEM_CODE
			</if>
				   AND A.WH_CODE	= @WH_CODE
				   AND A.LOT_NO		= @LOT_NO
		   
				IF (@@ROWCOUNT = 0)					--입력된 LOT_NO가 등록되지 않았을때,
					BEGIN
						--SET @ERR_MSG = '등록되지 않은 Lot No. 입니다.;'												--800006
						SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800006', '', @LANG_CODE) + ';'			--800006
						RAISERROR (@ERR_MSG, 16, 1)
					END
			
				ELSE IF (@ORDER_UNIT_Q &lt;= 0)		--입력된 LOT_NO의 재고(양품)량이 0일 때,
					BEGIN
						--SET @ERR_MSG = '입력된 Lot No.의 재고가 존재하지 않습니다.;'										--800008
						SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800008', '', @LANG_CODE) + ';'			--800008
						RAISERROR (@ERR_MSG, 16, 1)
					END
			
		
		 
				----2.입력한 Lot_no 보다 선입된 Lot_no 존재여부 확인
				IF (ISNULL(@ERR_MSG, '') = '' AND #{GSFIFO} = 'Y')
					BEGIN
						SELECT @LOT_NO_OUT	= LOT_NO
						  FROM BIV150T WITH(NOLOCK)
						 WHERE LOT_NO = (
											SELECT MIN(A.LOT_NO)
											  FROM BIV150T		A WITH(NOLOCK)
											  LEFT JOIN uniLITE.fnSplit(@LOT_NO_S, ',') AS B ON B.VALUE = A.LOT_NO
											 WHERE A.COMP_CODE	= @COMP_CODE
											   AND A.DIV_CODE	= @DIV_CODE
											   AND A.ITEM_CODE	= @ITEM_CODE
											   AND A.WH_CODE	= @WH_CODE
											   AND A.GOOD_STOCK_Q > 0
				
											   AND B.VALUE IS NULL
										)
		
			
						--IF (ISNULL(@LOT_NO_OUT, '') !='' AND SUBSTRING(@LOT_NO_OUT, 2, 6) &lt; SUBSTRING(@LOT_NO, 2, 6))		--입력된 LOT_NO보다 이전 LOT_NO가 있을 때,
				        IF ( ISNULL(@LOT_NO_OUT, '') !='' AND DATEADD(D, @DAY_TERM, SUBSTRING(@LOT_NO_OUT, 2, 6)) &lt; DATEADD(D, 0, SUBSTRING(@LOT_NO, 2, 6)) )		--입력된 LOT_NO보다 이전 LOT_NO가 있을 때,
							BEGIN
								--SET @ERR_MSG = '선입된 Lot No.가 존재 합니다.;' + '(Lot No.: ' + @LOT_NO_OUT + ')'											--800009
								SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800009', '', @LANG_CODE) + ';' + '(Lot No.: ' + @LOT_NO_OUT + ')'		--800009
						RAISERROR (@ERR_MSG, 16, 1)
							END
					END

		
				SELECT UPPER(@ITEM_CODE)+ '|'
					 + UPPER(@LOT_NO)	+ '|'
					 + CONVERT(NVARCHAR, @ORDER_UNIT_Q) + '|'
					 + @ITEM_NAME		+ '|'
					 + @SPEC			+ '|'
					 + @UNIT			+ '|'
					 + @INOUT_NUM		+ '|'
					 + CONVERT(NVARCHAR, @INOUT_SEQ)	+ '|'
					 + @REMARK									AS NEWVALUE
					 , @ERR_MSG									AS ERR_MSG
			END
		END TRY


		BEGIN CATCH
			IF CURSOR_STATUS('GLOBAL', 'BOX_LOTNO_CUR') > 0
			BEGIN
				CLOSE BOX_LOTNO_CUR
				DEALLOCATE BOX_LOTNO_CUR
			END
		
			IF CHARINDEX(';', @ERR_MSG) = 0
				SET @ERR_MSG = SUBSTRING(CONVERT(NVARCHAR(20), ERROR_NUMBER()) + ';' + ERROR_MESSAGE(), 1, 1000)
				SELECT @ERR_MSG AS ERR_MSG
		END CATCH
	</select>





	<!-- 리포트 출력(거래명세서) 관련 쿼리 -->
	<select id="str105ukrvServiceImpl.clipselectsub" parameterType="Map" resultType="rMap">
		/* str105ukrvServiceImpl clipselectsub */
		BEGIN
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=object_id('tempdb..#STR105UKR_TMP_190104'))
				DROP TABLE #STR105UKR_TMP_190104
			
			DECLARE @COMP_CODE	NVARCHAR(08)	/* (필수)법인코드 */
				  , @DIV_CODE	NVARCHAR(08)	/* (필수)사업장 */
				  , @INOUT_NUM	NVARCHAR(20)	/* (선택)출고번호 */
				  , @USER_ID	NVARCHAR(100)	/* (필수)사용자ID */
				  , @TodayDate	NVARCHAR(08)	/* 현재일자 */
			
			SET	 @COMP_CODE	= #{S_COMP_CODE}
			SET	 @DIV_CODE	= #{DIV_CODE}
			SET	 @INOUT_NUM	= #{INOUT_NUM}
			SET	 @USER_ID	= #{S_USER_ID}
			
			SELECT @TodayDate = CONVERT(NVARCHAR(08), GETDATE(), 112)
			
			SELECT A.COMP_CODE
			     , A.INOUT_NUM
			     , A.INOUT_TYPE
			     , A.DIV_CODE
			     , A.INOUT_DATE
			     /* 공급자정보 */
			     , E.DIV_CODE    AS MY_CUSTOM_CODE
			     , E.DIV_NAME    AS MY_CUSTOM_NAME
			     , E.REPRE_NAME  AS MY_TOP_NAME
			     , CASE ISNULL(E.COMPANY_NUM,'')
			            WHEN '' THEN ''
			            ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
			                       + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
			                       + SUBSTRING(E.COMPANY_NUM,6,5)
			        END          AS MY_COMPANY_NUM
			     , E.ZIP_CODE    AS MY_ZIP_CODE
			     , E.ADDR        AS MY_ADDR
			     , E.TELEPHON	 AS MY_TELE
			     /* 공급받는자정보 */
			     , B.CUSTOM_CODE
			     , B.CUSTOM_NAME AS CUSTOM_NAME
			     , B.TOP_NAME
			     , CASE ISNULL(B.COMPANY_NUM,'')
			            WHEN '' THEN ''
			            ELSE         SUBSTRING(B.COMPANY_NUM,1,3) + '-'
			                       + SUBSTRING(B.COMPANY_NUM,4,2) + '-'
			                       + SUBSTRING(B.COMPANY_NUM,6,5)
			        END AS COMPANY_NUM
			     , B.ZIP_CODE
			     , RTRIM(ISNULL(B.ADDR1,'') + ISNULL(B.ADDR2,'')) AS ADDR
			     /* 거래품목정보 */
			     , CASE ISNULL(CC.CUSTOM_ITEM_CODE, '')
			            WHEN '' THEN A.ITEM_CODE
			            ELSE         CC.CUSTOM_ITEM_CODE
			        END										AS ITEM_CODE
			     , CASE ISNULL(CC.CUSTOM_ITEM_NAME, '')
			            WHEN '' THEN uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE)
			            ELSE         CC.CUSTOM_ITEM_NAME
			        END										AS ITEM_NAME
				 --20190124 추가
				 , C.ITEM_NAME1
			     , CASE ISNULL(CC.CUSTOM_ITEM_SPEC, '')
			            WHEN '' THEN (SELECT SPEC
			                            FROM BPR100T
			                           WHERE COMP_CODE = A.COMP_CODE
			                             AND ITEM_CODE = A.ITEM_CODE)
			            ELSE         CC.CUSTOM_ITEM_SPEC
			        END										AS SPEC
			     , (CASE WHEN A.INOUT_TYPE = '2' THEN SUM(A.ORDER_UNIT_Q)
			             WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_Q)  * (-1)
			         END)									AS ORDER_UNIT_Q
			     , A.ORDER_UNIT_P
			     , (CASE WHEN A.INOUT_TYPE = '2' THEN SUM(A.ORDER_UNIT_O)
			             WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_O)  * (-1)
			         END)									AS ORDER_UNIT_O
			     , (CASE WHEN A.INOUT_TYPE = '2' THEN SUM(A.INOUT_TAX_AMT)
			             WHEN A.INOUT_TYPE = '3' THEN SUM(A.INOUT_TAX_AMT) * (-1)
			         END)									AS INOUT_TAX_AMT
			     , CONVERT(NUMERIC(18,0),0)					AS GUBUN
			     , CONVERT(NUMERIC(18,0),0)					AS l_PAGE
			     , CONVERT(NUMERIC(6,0),0)					AS N_PAGE
			     , CONVERT(NUMERIC(6,0),0)					AS MAX_PAGE
			     , CONVERT(NUMERIC(18,6),0)					AS SUM_Q
			     , CONVERT(NUMERIC(18,4),0)					AS SUM_O
			     , CONVERT(NUMERIC(18,4),0)					AS SUM_TAX
			     , CONVERT(NUMERIC(4,0),0)					AS G_REC
			     /* 공급자용:1 / 공급받는자용:2 */
			     ,'1'										AS G_SUPP
				 , B.REMARK
				 , (SELECT EE.PRSN_NAME FROM BCM120T EE WITH(NOLOCK) WHERE EE.BILL_TYPE = '2') AS CUST_PRSN_NAME
			  INTO #STR105UKR_TMP_190104
			  FROM            BTR100T A  WITH (NOLOCK)
			       INNER JOIN BCM100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
			                                          AND B.CUSTOM_CODE = A.SALE_CUSTOM_CODE
			       --20190124 추가
			       INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
			                                          AND C.ITEM_CODE   = A.ITEM_CODE
			       LEFT  JOIN BPR300T CC WITH (NOLOCK) ON CC.TYPE            = '2'
			                                          AND CC.DIV_CODE        = '*'
			                                          AND CC.COMP_CODE       = A.COMP_CODE
			                                          AND CC.CUSTOM_CODE     = A.INOUT_CODE
			                                          AND CC.ITEM_CODE       = A.ITEM_CODE
			                                          AND CC.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
			                                                                      FROM BPR300T WITH (NOLOCK)
			                                                                     WHERE COMP_CODE        = CC.COMP_CODE
			                                                                       AND TYPE             = CC.TYPE
			                                                                       AND DIV_CODE         = CC.DIV_CODE
			                                                                       AND ITEM_CODE        = CC.ITEM_CODE
			                                                                       AND CUSTOM_CODE      = CC.CUSTOM_CODE
			                                                                       AND APLY_START_DATE &lt;= @TodayDate)
			       INNER JOIN BOR120T E  WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
			                                          AND E.DIV_CODE    = A.DIV_CODE
			 WHERE A.CREATE_LOC              =    '1'
			   AND A.COMP_CODE               =    @COMP_CODE
			   AND A.DIV_CODE                =    @DIV_CODE
			   AND ((A.INOUT_NUM             LIKE @INOUT_NUM + '%'   AND @INOUT_NUM != '') OR (@INOUT_NUM   = ''))
			   AND A.INOUT_TYPE              IN ('2', '3')
			GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_TYPE, A.INOUT_DATE, A.ITEM_CODE, A.ORDER_UNIT_P,
					 B.CUSTOM_CODE, B.CUSTOM_NAME, B.TOP_NAME, B.COMPANY_NUM, B.ZIP_CODE, B.ADDR1, B.ADDR2, B.REMARK,
					 CC.CUSTOM_ITEM_CODE, CC.CUSTOM_ITEM_NAME, CC.CUSTOM_ITEM_SPEC,
					 E.DIV_CODE, E.DIV_NAME, E.REPRE_NAME, E.COMPANY_NUM, E.ZIP_CODE, E.ADDR, E.TELEPHON,
					 --20190124 추가
					 C.ITEM_NAME1
			
			SELECT *
			 FROM #STR105UKR_TMP_190104
			 where inout_date &gt; '201401'
		END
	</select>
</mapper>