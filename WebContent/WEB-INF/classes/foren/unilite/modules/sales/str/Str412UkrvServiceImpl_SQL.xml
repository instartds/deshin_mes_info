<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="str412ukrvServiceImpl">
	
	<select id="str412ukrvServiceImpl.selectSendBillMaster" parameterType="Map" resultType="rMap">
		/* str412ukrv.Cstr412ukrs1v[fnStr412QStd] Query01" */
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
		        SELECT  
		               CAST('' AS BIT)                                                          AS CHK
		             , CASE WHEN F.TRANSYN = 'E' THEN 'Error'
		                                         ELSE ISNULL(M2.CODE_NAME, N'미전송') 
		                END                                                                     AS TRANSYN_NAME     /* 전송여부명  */ 
		             , M3.CODE_NAME                                                             AS STS              /* 상태  */
		             , (CASE WHEN ISNULL(A.BILL_DATE , '')= '' THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.BILL_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.BILL_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.BILL_DATE, 7, 2))
		                END)                                                                    AS DT        		/* 발행일  */
		             , A.CUSTOM_CODE                                                            AS CUSTOM_CODE      /* 고객코드  */
		             , C.CUSTOM_FULL_NAME                                                       AS RCOMPANY         /* 고객명  */
		             , CASE WHEN C.BUSINESS_TYPE = '3' THEN uniLITE.fnCipherDecrypt(C.TOP_NUM, 'A')  
		                                               ELSE SUBSTRING(C.COMPANY_NUM,1,3)
		                                                  + '-' + SUBSTRING(C.COMPANY_NUM,4,2)
		                                                  + '-' + SUBSTRING(C.COMPANY_NUM,6,5)
		                END                                                                     AS RVENDERNO        /* 공급받는자사업자번호  */  
		             , A.SALE_LOC_AMT_I                                                         AS SUPMONEY         /* 공급가액  */
		             , A.TAX_AMT_O                                                              AS TAXMONEY         /* 세액  */
		             , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS TOT_AMT_I        /* 합계  */
		             , B.SEND_LOG_TIME                                                          AS SEND_DATE        /* 전송일시  */
		             , A.PUB_NUM                                                                AS BILLSEQ          /* 계산서번호  */
		             , A.EB_NUM                                                                 AS EB_NUM           /* 전자문서번호  */
		             , CONVERT(NVARCHAR(08), GETDATE(), 112)                                    AS CREATE_DT        /* 생성된 일자  */
		             , 'N'                                                                      AS TRANSYN          /* 전송  */
		             , '0'                                                                      AS TAXRATE          /* 세율구분  */
		             , A.BILL_TYPE                                                              AS BILLTYPE         /* 거래명세서종류  */
		             , 0                                                                        AS CASH             /* 거래명세서상의 현금지급액  */
		             , 0                                                                        AS CHECKS           /* 거래명세서상의 수표지급액  */
		             , 0                                                                        AS NOTE             /* 거래명세서상의 어음지급액  */
		             , 0                                                                        AS CREDIT           /* 거래명세서상의 외상미수금  */
		             , A.BILL_GUBUN                                                             AS GUBUN            /* 영수/청구 구분  */
		             , ISNULL(A.REMARK, '')                                                     AS BIGO             /* 비고  */
		             , C1.COMPANY_NUM                                                           AS SVENDERNO        /* 공급자 사업자번호  */
		             , CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
		                                                           ELSE C1.DIV_FULL_NAME
		                END                                                                     AS SCOMPANY         /* 공급자 업체명  */
		             , C1.REPRE_NAME                                                            AS SCEONAME         /* 공급자 대표자명  */
		             , C1.COMP_TYPE                                                             AS SUPTAE           /* 공급자 업태  */
		             , C1.COMP_CLASS                                                            AS SUPJONG          /* 공급자 업종  */
		             , C1.ADDR                                                                  AS SADDRESS         /* 공급자 주소  */
		             , ''                                                                       AS SADDRESS2        /* 공급자 상세주소  */
		             , CASE WHEN ISNULL(E1.CODE_NAME, '') != '' THEN E1.CODE_NAME
		                                                        ELSE ( CASE WHEN ISNULL(E2.CODE_NAME, '') != '' THEN E2.CODE_NAME 
		                                                                                                        ELSE C1.DIV_NAME
		                                                                END )
		                                                       
		                END                                                                     AS SUSER          /* 공급자 담당자명  */
		             , CASE WHEN ISNULL(E3.TREE_NAME, '') != '' THEN E3.TREE_NAME
		                                                        ELSE ( CASE WHEN ISNULL(E4.TREE_NAME, '') != '' THEN E4.TREE_NAME
		                                                                                                        ELSE ''
		                                                                END )
		                                                       
		                END                                                                     AS SDIVISION      /* 공급자 부서명   */
		             , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
		                                                        ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
		                                                                                                        ELSE C1.TELEPHON
		                                                                END )
		                                                       
		                END                                                                     AS STELNO         /* 공급자 전화번호    */
		             , CASE WHEN ISNULL(E1.REF_CODE7, '') != '' THEN E1.REF_CODE7
		                                                        ELSE ( CASE WHEN ISNULL(E2.REF_CODE7, '') != '' THEN E2.REF_CODE7
		                                                                                                        ELSE C2.EMAIL
		                                                                END )
		                                                       
		                END                                                                     AS SEMAIL         /* 공급자 이메일주소    */
		             , C.TOP_NAME                                                               AS RCEONAME       /* 공급받는자 대표자명  */
		             , C.COMP_TYPE                                                              AS RUPTAE         /* 공급받는자 업태  */
		             , C.COMP_CLASS                                                             AS RUPJONG        /* 공급받는자 업종  */
		             , ISNULL(C.ADDR1, '') + ISNULL(C.ADDR2, '')                                AS RADDRESS       /* 공급받는자 주소  */
		             , ''                                                                       AS RADDRESS2      /* 공급받는자 상세주소  */
		             , CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN CASE WHEN ISNULL(C.BILL_PRSN, '') = '' THEN C.CUSTOM_FULL_NAME
		                                                                                                 ELSE C.BILL_PRSN
		                                                           END
		                                                     ELSE ISNULL(C4.PRSN_NAME, '')
		                END                                                                     AS RUSER          /* 공급받는자 담당자명 또는 거래처명  */
		             , ''                                                                       AS RDIVISION      /* 공급받는자 부서명  */
		
		             , CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.HAND_PHON, C.TELEPHON)
		                                                     ELSE CASE WHEN ISNULL(C4.HAND_PHON, '') = '' THEN C4.TELEPHONE_NUM1 ELSE C4.HAND_PHON END
		                END                                                                     AS RTELNO         /* 공급받는자 핸드폰 또는 전화번호  */
		             , CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.BILL_MAIL_ID, '')
		                                                     ELSE ISNULL(C4.MAIL_ID, '')
		                END                                                                     AS REMAIL         /* 전자문서E-MAIL  */
		             , 'N'                                                                      AS REVERSEYN      /* 역발행여부(Y:역발행대상 세금계산서)  */
		             , ''                                                                       AS SENDID         /* 공급자     SENDBIL ID  */
		             , ''                                                                       AS RECVID         /* 공급받는자 SENDBIL ID  */
		             , A.DIV_CODE                                                               AS DIV_CODE       /* 사업장코드  */
		             , M3.REF_CODE1                                                             AS DEL_YN         /* 삭제가능여부  */
		             , A.COMP_CODE
		             , C.BILL_MEM_TYPE                                                          AS BILL_MEM_TYPE  /* 회원구분  */
		             , ''                                                                       AS ERR_GUBUN
		          FROM (
		                 /* 1.1 영업 세금계산서 테이블  */
		                 SELECT A.COMP_CODE
		                      , A.DIV_CODE
		                      , B.EB_NUM
		                      , A.INOUT_DATE                                                AS BILL_DATE
		                      , A.INOUT_CODE                                                AS CUSTOM_CODE
		                      , CASE WHEN C.BILL_MEM_TYPE = '1' THEN '30'
		                             WHEN C.BILL_MEM_TYPE = '2' THEN '31'
		                                                        ELSE '31'
		                         END                                                        AS BILL_TYPE
		                      , B.BILL_SEND_YN
		                      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_O) * -1
		                                                     ELSE SUM(A.ORDER_UNIT_O)
		                         END                                                        AS SALE_LOC_AMT_I
		                      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.INOUT_TAX_AMT) * -1
		                                                     ELSE SUM(A.INOUT_TAX_AMT) 
		                         END                                                        AS TAX_AMT_O
		                      , A.INOUT_NUM                                                 AS PUB_NUM
		                      , ''                                                          AS REMARK
		                      , '2'                                                         AS BILL_GUBUN
		                      , ISNULL(A.INOUT_PRSN, '')                                    AS SALE_PRSN
		                   FROM            BTR100T AS A WITH (NOLOCK)
		                        LEFT  JOIN STR100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                             AND B.DIV_CODE    = A.DIV_CODE
		                                                             AND B.INOUT_NUM   = A.INOUT_NUM
		                                                             AND B.CUSTOM_CODE = A.INOUT_CODE
		                        LEFT  JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                             AND C.CUSTOM_CODE = A.INOUT_CODE
		                        LEFT  JOIN BILL_DB.BILL.BILL_STAT  D  ON D.BILLSEQ     = B.EB_NUM
		                  WHERE
		                          A.COMP_CODE     = @CompCode
		                    AND   A.INOUT_TYPE       IN ('2','3')                                                                    
		                    AND   A.CREATE_LOC        = '1'                                                                          
		                    AND   A.INOUT_CODE_TYPE  IN ('4','5') 
		                    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
		                    AND   A.DIV_CODE      = #{DIV_CODE}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		                    AND   A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		                    AND   A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                    AND   A.INOUT_CODE    	 = #{CUSTOM_CODE}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		                    AND   C.CUSTOM_NAME   	 = #{CUSTOM_NAME}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILLSTAT)">
		                    AND   D.BILLSTAT      	 = #{BILLSTAT}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
		                    AND   ISNULL(B.BILL_SEND_YN, 'N') = #{BILL_SEND_YN}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILL_MEM_TYPE)">
		                    AND   C.BILL_MEM_TYPE 	 = #{BILL_MEM_TYPE}
		                    </if>
		                  GROUP BY A.COMP_CODE     , A.DIV_CODE     , B.EB_NUM     , A.INOUT_DATE, A.INOUT_CODE
		                         , C.BILL_MEM_TYPE , B.BILL_SEND_YN , A.INOUT_TYPE , A.INOUT_NUM , A.INOUT_PRSN
		                ) AS A
		                    LEFT JOIN (SELECT MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
		                                    , DIV_CODE
		                                    , EB_NUM
		                                    , BILL_DATE
		                                    , CUSTOM_CODE
		                                    , MAX(EB_STEP) AS EB_STEP 
		                                    , COMP_CODE
		                                 FROM STB200T WITH (NOLOCK)
		                                WHERE COMP_CODE = @CompCode
		                                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                                  AND DIV_CODE = #{DIV_CODE}
		                                  </if>
		                                  AND EB_STEP IN('1', '2')
		                             GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) AS B  ON B.COMP_CODE   = A.COMP_CODE
		                                                                                                AND B.DIV_CODE    = A.DIV_CODE
		                                                                                                AND B.EB_NUM      = A.EB_NUM
		                                                                                                AND B.BILL_DATE   = A.BILL_DATE
		                                                                                                AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                        AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN BILL_DB.BILL.BILL_STAT  D  ON D.BILLSEQ     = A.EB_NUM
		                    LEFT JOIN BILL_DB.BILL.BILL_TRANS F  ON F.BILLSEQ     = A.EB_NUM
		                    LEFT JOIN BOR120T C1 WITH (NOLOCK)  ON C1.COMP_CODE   = A.COMP_CODE                                      
		                                                       AND C1.DIV_CODE    = A.DIV_CODE                                       
		                    LEFT JOIN BOR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE   = A.COMP_CODE                                      
		                    LEFT JOIN BSA100T M2 WITH (NOLOCK)  ON M2.COMP_CODE   = A.COMP_CODE
		                                                       AND M2.MAIN_CODE   = 'B087'
		                                                       AND M2.SUB_CODE   != '$'
		                                                       AND M2.SUB_CODE    = ISNULL(A.BILL_SEND_YN, 'N')
		                    LEFT JOIN BSA100T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                                       AND M3.MAIN_CODE   = 'S050'
		                                                       AND M3.SUB_CODE   != '$'
		                                                       AND M3.SUB_CODE    = D.BILLSTAT
		                    LEFT JOIN (SELECT A.COMP_CODE
		                                    , A.CUSTOM_CODE
		                                    , A.PRSN_NAME
		                                    , A.MAIL_ID
		                                    , A.HAND_PHON, A.TELEPHONE_NUM1
		                                 FROM            BCM120T AS A WITH(NOLOCK) 
		                                      INNER JOIN ( SELECT A.COMP_CODE
		                                                        , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
		                                                        , MIN(A.SEQ)         AS SEQ
		                                                     FROM BCM120T AS A WITH(NOLOCK)
		                                                    WHERE A.MAIN_BILL_YN ='Y'
		                                                      AND A.BILL_TYPE IN ('2','3')
		                                                    GROUP BY A.COMP_CODE, A.CUSTOM_CODE
		                                                 ) AS B ON B.COMP_CODE   = A.COMP_CODE
		                                                       AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                                                       AND B.SEQ         = A.SEQ
		                               ) C4 ON C4.COMP_CODE   = A.COMP_CODE
		                                   AND C4.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN BSA100T E1 WITH (NOLOCK)  ON E1.COMP_CODE   = A.COMP_CODE
		                                                       AND E1.MAIN_CODE   = 'S010'
		                                                       AND E1.SUB_CODE   != '$'
		                                                       AND E1.SUB_CODE    = A.SALE_PRSN
		                    LEFT JOIN BSA100T E2 WITH (NOLOCK)  ON E2.COMP_CODE   = C.COMP_CODE
		                                                       AND E2.MAIN_CODE   = 'S010'
		                                                       AND E2.SUB_CODE   != '$'
		                                                       AND E2.SUB_CODE    = C.BUSI_PRSN
		                    LEFT JOIN BSA210T E3 WITH (NOLOCK)  ON E3.COMP_CODE   = E1.COMP_CODE
		                                                       AND E3.TREE_CODE   = E1.REF_CODE2
		                    LEFT JOIN BSA210T E4 WITH (NOLOCK)  ON E4.COMP_CODE   = E2.COMP_CODE
		                                                       AND E4.TREE_CODE   = E2.REF_CODE2 
		
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		
		END	
	</select>
	
	<select id="str412ukrvServiceImpl.WebCashMaster" parameterType="Map" resultType="rMap">
		/* str412ukrv.Cstr412ukrs2v[fnSsa700Std] Query01 */
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		        SELECT  
		               CAST('' AS BIT)                                                          AS CHK
		             , CASE WHEN D.ERR_CD != '000000' AND D.ERR_CD != 'SEND' THEN 'Error'
		                                                                     ELSE M2.CODE_NAME  
		                END                                                                     AS TRANSYN_NAME     /* 전송여부명  */
		             , ISNULL(D.STAT_CODE, '1')                                                 AS STAT_CODE        /* 상태  */
		             , M3.CODE_NAME                                                               AS STS              /* 상태  */
		             , (CASE WHEN ISNULL(A.BILL_DATE , '')= '' THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.BILL_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.BILL_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.BILL_DATE, 7, 2))
		                END)                                                                    AS REGS_DATE        /* 발행일  */
		             , C1.COMPANY_NUM                                                           AS SELR_CORP_NO     /* 공급자 사업자번호  */
		             , CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
		                                                           ELSE C1.DIV_FULL_NAME
		                END                                                                     AS SELR_CORP_NM     /* 공급자 업체명  */
		             , C1.REPRE_NAME                                                            AS SELR_CEO         /* 공급자 대표자명  */
		             , C1.ADDR                                                                  AS SELR_CORP_ADDS   /* 공급자 주소  */
		             , C1.COMP_TYPE                                                             AS SELR_BUSS_CONS   /* 공급자 업태  */
		             , C1.COMP_CLASS                                                            AS SELR_BUSS_TYPE   /* 공급자 업종  */
		             , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
		                                                        ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
		                                                                                                        ELSE C1.TELEPHON
		                                                                END )
		                                                       
		                END                                                                     AS SELR_TEL        /* 공급자 전화번호   */ 
		             , CASE WHEN C.BUSINESS_TYPE = '3' THEN uniLITE.fnCipherDecrypt(C.TOP_NUM, 'A')
		                                               ELSE SUBSTRING(C.COMPANY_NUM,1,3)
		                                                  + '-' + SUBSTRING(C.COMPANY_NUM,4,2)
		                                                  + '-' + SUBSTRING(C.COMPANY_NUM,6,5)
		                END                                                                     AS BUYR_CORP_NO   /* 공급받는자사업자번호   */ 
		
		             , A.CUSTOM_CODE                                                            AS CUSTOM_CODE    /* 고객코드  */
		             , C.CUSTOM_FULL_NAME                                                       AS BUYR_CORP_NM   /* 공급받는자상호  */
		             , C.TOP_NAME                                                               AS BUYR_CEO       /* 공급받는자 대표자명  */
		             , ISNULL(C.ADDR1, '') + ISNULL(C.ADDR2, '')                                AS BUYR_CORP_ADDS /* 공급받는자 주소  */
		
		             , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.PRSN_NAME, '') = '' THEN ISNULL(C.TELEPHON, C.HAND_PHON)
		                                                                                                       ELSE ISNULL(C4.TELEPHONE_NUM1, C4.HAND_PHON)
		                                                                END)
		                                                WHEN 'Y' THEN D.BUYR_TEL 
		                END                                                                     AS BUYR_TEL       /* 공급받는자 전화번호  */
		             , A.SALE_LOC_AMT_I                                                         AS CHRG_AMT       /* 공급가액  */
		             , A.TAX_AMT_O                                                              AS TAX_AMT        /* 세액  */
		             , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS TOTL_AMT       /* 합계  */
		             , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS SUM_AMT        /* 합계  */
		             , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.BILL_PRSN, C.CUSTOM_FULL_NAME) 
		                                                                                                     ELSE C4.PRSN_NAME 
		                                                                END)
		                                                WHEN 'Y' THEN D.BUYR_CHRG_NM1
		                END                                                                     AS BUYR_CHRG_NM1     /* 전자문서담당자  */
		             , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.HAND_PHON, C.TELEPHON)
		                                                                                                     ELSE ISNULL(C4.HAND_PHON, C4.TELEPHONE_NUM1)
		                                                                END)
		                                                WHEN 'Y' THEN D.BUYR_CHRG_MOBL1 
		                END                                                                     AS BUYR_CHRG_MOBL1    /* 전자문서핸드폰  */
		             , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.BILL_MAIL_ID, '')
		                                                                                                     ELSE ISNULL(C4.MAIL_ID, '')
		                                                                END)
		                                                WHEN 'Y' THEN D.BUYR_CHRG_EMAIL1
		                END                                                                     AS BUYR_CHRG_EMAIL1   /* 공급받는자 전자문서E-MAIL  */
		             , ISNULL(E5.REF_CODE1, 'N')                                                AS SND_MAL_YN     /* EMail발행요청유무  */
		             , ISNULL(E6.REF_CODE1, 'N')                                                AS SND_SMS_YN     /* SMS발행요청유무  */
		             , ISNULL(E7.REF_CODE1, 'N')                                                AS SND_FAX_YN     /* FAX발행요청유무  */
		             , A.PUB_NUM                                                                AS BILLSEQ        /* 계산서번호  */
		             , A.EB_NUM                                                                 AS ERP_SEQ         /* 전자문서번호  */
		             , A.DIV_CODE                                                               AS DIV_CODE       /* 사업장코드  */
		             , M3.REF_CODE1                                                             AS DEL_YN         /* 삭제가능여부  */
		             , A.COMP_CODE
		             , ''                                                                       AS ERR_GUBUN
		             , B.SEND_LOG_TIME                                                          AS SEND_DATE         /* 전송일시  */
		          FROM (
		                 /* 1.1 영업 세금계산서 테이블  */
		                 SELECT A.COMP_CODE
		                      , A.DIV_CODE
		                      , B.EB_NUM
		                      , A.INOUT_DATE                                                AS BILL_DATE
		                      , A.INOUT_CODE                                                AS CUSTOM_CODE
		                      , CASE WHEN C.BILL_MEM_TYPE = '1' THEN '30'
		                             WHEN C.BILL_MEM_TYPE = '2' THEN '31'
		                                                        ELSE '31'
		                         END                                                        AS BILL_TYPE
		                      , B.BILL_SEND_YN
		                      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_O) * -1
		                                                     ELSE SUM(A.ORDER_UNIT_O)
		                         END                                                        AS SALE_LOC_AMT_I
		                      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.INOUT_TAX_AMT) * -1
		                                                     ELSE SUM(A.INOUT_TAX_AMT) 
		                         END                                                        AS TAX_AMT_O
		                      , A.INOUT_NUM                                                 AS PUB_NUM
		                      , ''                                                          AS REMARK
		                      , '2'                                                         AS BILL_GUBUN
		                      , ISNULL(A.INOUT_PRSN, '')                                    AS SALE_PRSN
		                   FROM            BTR100T AS A WITH (NOLOCK)
		                        LEFT  JOIN STR100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                             AND B.DIV_CODE    = A.DIV_CODE
		                                                             AND B.INOUT_NUM   = A.INOUT_NUM
		                                                             AND B.CUSTOM_CODE = A.INOUT_CODE
		                        LEFT  JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                             AND C.CUSTOM_CODE = A.INOUT_CODE
		                        LEFT  JOIN WEBCASH_DB.WEBCASH.ITIS_STS_MSTR AS D ON D.ERP_SEQ = B.EB_NUM
		                  WHERE
		                          A.COMP_CODE     = @CompCode
		                    AND   A.INOUT_TYPE       IN ('2','3')                                                                    
		                    AND   A.CREATE_LOC        = '1'                                                                          
		                    AND   A.INOUT_CODE_TYPE  IN ('4','5')  
		                    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                    AND   A.DIV_CODE   	     = #{DIV_CODE}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		                    AND   A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		                    AND   A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                    AND   A.INOUT_CODE    	 = #{CUSTOM_CODE}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		                    AND   C.CUSTOM_NAME   	 = #{CUSTOM_NAME}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILLSTAT)">
		                    AND   D.STAT_CODE     	 = #{BILLSTAT}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
		                    AND   ISNULL(B.BILL_SEND_YN, 'N') = #{BILL_SEND_YN}
		                    </if>
		                    <if test="@foren.Ognl@isNotEmpty(BILL_MEM_TYPE)">
		                    AND   C.BILL_MEM_TYPE 	 = #{BILL_MEM_TYPE}
		                    </if>
		                  GROUP BY A.COMP_CODE     , A.DIV_CODE     , B.EB_NUM     , A.INOUT_DATE, A.INOUT_CODE
		                         , C.BILL_MEM_TYPE , B.BILL_SEND_YN , A.INOUT_TYPE , A.INOUT_NUM , A.INOUT_PRSN
		                ) AS A
		                    LEFT JOIN (SELECT MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
		                                    , DIV_CODE
		                                    , EB_NUM
		                                    , BILL_DATE
		                                    , CUSTOM_CODE
		                                    , MAX(EB_STEP) AS EB_STEP 
		                                    , COMP_CODE
		                                 FROM STB200T WITH (NOLOCK)
		                                WHERE COMP_CODE = @CompCode
		                                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                                  AND DIV_CODE = #{DIV_CODE}
		                                  </if>
		                                  AND EB_STEP IN('1', '2')                                                                  
		                             GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) AS B  ON B.COMP_CODE   = A.COMP_CODE
		                                                                                                AND B.DIV_CODE    = A.DIV_CODE
		                                                                                                AND B.EB_NUM      = A.EB_NUM
		                                                                                                AND B.BILL_DATE   = A.BILL_DATE
		                                                                                                AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                        AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN WEBCASH_DB.WEBCASH.ITIS_STS_MSTR AS D ON D.ERP_SEQ  = A.EB_NUM
		                    LEFT JOIN BOR120T C1 WITH (NOLOCK)  ON C1.COMP_CODE   = A.COMP_CODE
		                                                       AND C1.DIV_CODE    = A.DIV_CODE
		                    LEFT JOIN BOR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE   = A.COMP_CODE                          
		                    LEFT JOIN BSA100T M2 WITH (NOLOCK)  ON M2.COMP_CODE   = A.COMP_CODE
		                                                       AND M2.MAIN_CODE   = 'B087'
		                                                       AND M2.SUB_CODE   != '$'
		                                                       AND M2.SUB_CODE    = ISNULL(A.BILL_SEND_YN, 'N')
		                    LEFT JOIN BSA100T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                                       AND M3.MAIN_CODE   = 'S100'
		                                                       AND M3.SUB_CODE   != '$'
		                                                       AND M3.SUB_CODE    = D.STAT_CODE
		                    LEFT JOIN (SELECT A.COMP_CODE
		                                    , A.CUSTOM_CODE
		                                    , A.PRSN_NAME
		                                    , A.MAIL_ID
		                                    , A.HAND_PHON, A.TELEPHONE_NUM1
		                                 FROM            BCM120T AS A WITH(NOLOCK) 
		                                      INNER JOIN ( SELECT A.COMP_CODE
		                                                        , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
		                                                        , MIN(A.SEQ)         AS SEQ
		                                                     FROM BCM120T AS A WITH(NOLOCK)
		                                                    WHERE A.MAIN_BILL_YN ='Y'
		                                                      AND A.BILL_TYPE IN ('2','3')
		                                                    GROUP BY A.COMP_CODE, A.CUSTOM_CODE
		                                                 ) AS B ON B.COMP_CODE   = A.COMP_CODE
		                                                       AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                                                       AND B.SEQ         = A.SEQ
		                               ) C4 ON C4.COMP_CODE   = A.COMP_CODE
		                                   AND C4.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT JOIN BSA100T E1 WITH (NOLOCK)  ON E1.COMP_CODE   = A.COMP_CODE
		                                                       AND E1.MAIN_CODE   = 'S010'
		                                                       AND E1.SUB_CODE   != '$'
		                                                       AND E1.SUB_CODE    = A.SALE_PRSN
		                    LEFT JOIN BSA100T E2 WITH (NOLOCK)  ON E2.COMP_CODE   = C.COMP_CODE
		                                                       AND E2.MAIN_CODE   = 'S010'
		                                                       AND E2.SUB_CODE   != '$'
		                                                       AND E2.SUB_CODE    = C.BUSI_PRSN
		                    LEFT JOIN BSA210T E3 WITH (NOLOCK)  ON E3.COMP_CODE   = E1.COMP_CODE
		                                                       AND E3.TREE_CODE   = E1.REF_CODE2
		                    LEFT JOIN BSA210T E4 WITH (NOLOCK)  ON E4.COMP_CODE   = E2.COMP_CODE
		                                                       AND E4.TREE_CODE   = E2.REF_CODE2
		                    LEFT JOIN BSA100T E5 WITH (NOLOCK)  ON E5.COMP_CODE   = A.COMP_CODE
		                                                       AND E5.MAIN_CODE   = 'S083'
		                                                       AND E5.SUB_CODE   != '$'
		                                                       AND E5.SUB_CODE    = '01'
		                    LEFT JOIN BSA100T E6 WITH (NOLOCK)  ON E6.COMP_CODE   = A.COMP_CODE
		                                                       AND E6.MAIN_CODE   = 'S083'
		                                                       AND E6.SUB_CODE   != '$'
		                                                       AND E6.SUB_CODE    = '02'
		                    LEFT JOIN BSA100T E7 WITH (NOLOCK)  ON E7.COMP_CODE   = A.COMP_CODE
		                                                       AND E7.MAIN_CODE   = 'S083'
		                                                       AND E7.SUB_CODE   != '$'
		                                                       AND E7.SUB_CODE    = '03'
		                                                       
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		
		END	
	</select>
	
	<select id="str412ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/* str412ukrv.Cstr412ukrs1v[fnStr412QStd2] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @UnitType    NVARCHAR(03) /* (필수) 수량단위구분(1:판매단위,2:재고단위) */
		          , @PrintType   NVARCHAR(03) /* (필수) 단가금액출력여부(1:예,2:아니오) */
		
		    SET @CompCode   = #{COMP_CODE}	/*그리드PARAM*/
		    SET @UserId     = #{S_USER_ID}	/*그리드PARAM*/
		    SET @LangType   = #{S_LANG_CODE}/*그리드PARAM*/
		    SET @UnitType   = #{UNIT_TYPE}	/*폼PARAM*/
		    SET @PrintType  = #{PRINT_TYPE}	/*폼PARAM*/
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */
		    SELECT  
		           CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                        , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                        , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		           END                                                                      AS DT
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN C1.ITEM_CODE
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_CODE, '') != '' THEN C2.CUSTOM_ITEM_CODE
		                          ELSE C1.ITEM_CODE
		                     END
		           END                                                                      AS CODE
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                                               ELSE C1.ITEM_NAME
		                                                          END
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_NAME, '') != '' THEN C2.CUSTOM_ITEM_NAME
		                          ELSE CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		                               END
		                     END
		           END                                                                      AS NAME
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_SPEC, '') != '' THEN REPLACE(REPLACE(C2.CUSTOM_ITEM_SPEC, '&lt;', ''), '&gt;', '')
		                          ELSE REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                     END
		           END                                                                      AS UNIT
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_Q, 0) * (-1)
		                          ELSE ISNULL(A.INOUT_Q, 0) * (-1)
		                     END
		                ELSE
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_Q, 0)
		                          ELSE ISNULL(A.INOUT_Q, 0)
		                     END
		           END                                                                      AS VLM
		         , CASE WHEN @PrintType = '1' THEN
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_P, 0)
		                          ELSE ISNULL(A.INOUT_P, 0)
		                     END
		                ELSE
		                     0
		           END                                                                      AS DANGA
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.ORDER_UNIT_O, 0) * (-1)
		                          ELSE 0
		                     END
		                ELSE
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.ORDER_UNIT_O, 0)
		                          ELSE 0
		                     END
		           END                                                                      AS SUP
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.INOUT_TAX_AMT, 0) * (-1)
		                          ELSE 0
		                     END
		                ELSE
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.INOUT_TAX_AMT, 0)
		                          ELSE 0
		                     END
		           END                                                                      AS TAX
		
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.ITEM_CODE
		         , A.INOUT_CODE AS CUSTOM_CODE
		         , A.ORDER_UNIT AS SALE_UNIT
		         , A.TRNS_RATE  AS TRANS_RATE
		    FROM              BTR100T   A  WITH (NOLOCK)
		           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
		                                                AND C1.ITEM_CODE        = A.ITEM_CODE
		           LEFT  JOIN BPR300T   C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
		                                                AND C2.TYPE             = N'2'          /* 구분(1:구매, 2:판매)  */
		                                                AND C2.DIV_CODE         = N'*'          /* 판매일 경우 사업장 관리안함  */
		                                                AND C2.ITEM_CODE        = A.ITEM_CODE
		                                                AND C2.CUSTOM_CODE      = A.INOUT_CODE
		                                                AND C2.APLY_START_DATE  = (
		                                                                          SELECT MAX(APLY_START_DATE) AS APLY_START_DATE
		                                                                          FROM   BPR300T   WITH (NOLOCK)
		                                                                          WHERE  COMP_CODE          = C2.COMP_CODE
		                                                                          AND    TYPE               = C2.TYPE
		                                                                          AND    DIV_CODE           = C2.DIV_CODE
		                                                                          AND    ITEM_CODE          = C2.ITEM_CODE
		                                                                          AND    CUSTOM_CODE        = C2.CUSTOM_CODE
		                                                                          AND    APLY_START_DATE   &lt;= ISNULL(A.INOUT_DATE, CONVERT(NVARCHAR, GETDATE(), 112))
		                                                                          )
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE        = A.COMP_CODE
		                                                AND M1.MAIN_CODE        = N'S084'
		                                                AND M1.SUB_CODE        != N'$'
		                                                AND M1.REF_CODE1        = N'Y'
		    WHERE  A.COMP_CODE      = @CompCode
		    AND    A.DIV_CODE       = #{DIV_CODE}	/*그리드PARAM*/
		    AND    A.INOUT_NUM      = #{BILLSEQ}	/*그리드PARAM*/
		    AND    A.INOUT_TYPE    IN ('2', '3')
		    AND    A.CREATE_LOC     = N'1'
		    ORDER  BY A.INOUT_DATE, A.INOUT_NUM, A.INOUT_SEQ
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	
	<select id="str412ukrvServiceImpl.getGsBillYN" parameterType="Map" resultType="rMap">
		 SELECT TOP 1 ISNULL(SUB_CODE , '01'  ) AS SUB_CODE
             ,       ISNULL(REF_CODE4, 'NAME')  AS REF_CODE4
             ,       ISNULL(REF_CODE5, 'N'   )  AS REF_CODE5
             ,       ISNULL(REF_CODE6, 'N'   )  AS REF_CODE6
             ,       ISNULL(REF_CODE7, ''    )  AS REF_CODE7
             ,       ISNULL(REF_CODE8, '8'   )  AS REF_CODE8
             ,       ISNULL(REF_CODE9, 'N'   )  AS REF_CODE9
        FROM   BSA100T  WITH (NOLOCK)
        WHERE  COMP_CODE = #{S_COMP_CODE}
        AND    MAIN_CODE = N'S084'
        AND    SUB_CODE != N'$'
        AND    REF_CODE1 = N'Y'
	</select>
</mapper>