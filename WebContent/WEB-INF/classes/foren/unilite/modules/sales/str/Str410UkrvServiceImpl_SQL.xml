<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="str410ukrvServiceImpl">
	
	<select id="str410ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		/*str410ukrv.Cstr410ukrv[fnStr410QStd] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}   
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		SELECT  
		        CAST('' AS BIT)                                                                 AS CHK                                                    
		      , CASE WHEN F.TRANSYN = 'E' THEN 'Error' ELSE ISNULL(M2.CODE_NAME, '미전송')  END AS TRANSYN_NAME     /* 전송여부명 */                       
		      , M3.CODE_NAME                                                                    AS STS            /* 상태 */
		      , (CASE WHEN ISNULL(A.INOUT_DATE , '')= '' THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                                                       AS DT             /* 출고일 */                                                             
		      , A.INOUT_CODE                                                                    AS CUSTOM_CODE    /* 고객코드 */                             
		      , D.CUSTOM_FULL_NAME                                                              AS RCOMPANY       /* 고객명 */                               
		      , CASE WHEN D.BUSINESS_TYPE = '3'                                                                    
		             THEN uniLITE.fnCipherDecrypt(D.TOP_NUM, 'A')   
		             ELSE SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2)                        
		                  + '-' + SUBSTRING(D.COMPANY_NUM,6,5)                                                     
		        END                                                                             AS RVENDERNO      /* 공급받는자사업자번호 */                 
		      , M1.CODE_NAME                                                                    AS INOUT_PRSN_NM  /* 수불담당명 */                           
		      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_O) * -1
		             ELSE SUM(A.ORDER_UNIT_O)
		        END                                                                             AS SUPMONEY       /* 공급가액 */                             
		      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.INOUT_TAX_AMT) * -1
		             ELSE SUM(A.INOUT_TAX_AMT) 
		        END                                                                             AS TAXMONEY       /* 세액 */                                 
		      , CASE WHEN A.INOUT_TYPE = '3' THEN SUM(A.ORDER_UNIT_O + A.INOUT_TAX_AMT) * -1
		             ELSE SUM(A.ORDER_UNIT_O + A.INOUT_TAX_AMT) 
		        END                                                                             AS TOT_AMT_I      /* 합계 */                                 
		      , MAX(C.SEND_LOG_TIME)                                                            AS SEND_DATE      /* 전송일시  */                            
		      , A.INOUT_NUM                                                                     AS BILLSEQ        /* 출고번호 */                             
		      , CASE ISNULL(B.BILL_SEND_YN, 'N') WHEN 'N' THEN 
		                                                       CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(D.BILL_MAIL_ID, '')
		                                                            ELSE ISNULL(C4.MAIL_ID, '')
		                                                        END
		                                         WHEN 'Y' THEN F.REMAIL
		         END                                                                            AS REMAIL         /* 전자문서E-MAIL */
		      , B.EB_NUM                                 AS EB_NUM         /* 전자문서번호 */                         
		      , CONVERT(NVARCHAR(08), GETDATE(), 112)    AS CREATE_DT      /* 생성된 일자 */
		      , 'N'                                      AS TRANSYN        /* 전송 */                                 
		      , '0'                                      AS TAXRATE        /* 세율구분 */                             
		      , CASE WHEN D.BILL_MEM_TYPE = '1' THEN '30'                                                          
		             WHEN D.BILL_MEM_TYPE = '2' THEN '31'                                                          
		             ELSE '31'
		        END                                      AS BILLTYPE       /* 30:거래명세서, 31:비회원거래명세서  */                                         
		      , 0                                        AS CASH           /* 거래명세서상의 현금지급액 */            
		      , 0                                        AS CHECKS         /* 거래명세서상의 수표지급액 */            
		      , 0                                        AS NOTE           /* 거래명세서상의 어음지급액 */            
		      , 0                                        AS CREDIT         /* 거래명세서상의 외상미수금 */            
		      , '2'                                      AS GUBUN          /* 영수/청구 구분 */                       
		      , ''                                       AS BIGO           /* 비고 */                                 
		      , C1.COMPANY_NUM                           AS SVENDERNO      /* 공급자 사업자번호 */                    
		      , C1.DIV_NAME                              AS SCOMPANY       /* 공급자 업체명 */                        
		      , C1.REPRE_NAME                            AS SCEONAME       /* 공급자 대표자명 */                      
		      , C1.COMP_TYPE                             AS SUPTAE         /* 공급자 업태 */                          
		      , C1.COMP_CLASS                            AS SUPJONG        /* 공급자 업종 */                          
		      , C1.ADDR                                  AS SADDRESS       /* 공급자 주소 */                          
		      , ''                                       AS SADDRESS2      /* 공급자 상세주소 */                      
		      , C1.DIV_NAME                              AS SUSER          /* 공급자 담당자명  */                     
		      , ''                                       AS SDIVISION      /* 공급자 부서명   */                      
		      , C1.TELEPHON                              AS STELNO         /* 공급자 전화번호  */                     
		      , C2.EMAIL                                 AS SEMAIL         /* 공급자 이메일주소   */                  
		      , D.TOP_NAME                               AS RCEONAME       /* 공급받는자 대표자명  */                 
		      , D.COMP_TYPE                              AS RUPTAE         /* 공급받는자 업태 */                      
		      , D.COMP_CLASS                             AS RUPJONG        /* 공급받는자 업종 */                      
		      , ISNULL(D.ADDR1, '') + ISNULL(D.ADDR2, '') AS RADDRESS      /* 공급받는자 주소 */                      
		      , ''                                       AS RADDRESS2      /* 공급받는자 상세주소  */                 
		      , CASE WHEN ISNULL(D.BILL_PRSN, '') = '' THEN D.CUSTOM_FULL_NAME
		             ELSE D.BILL_PRSN
		        END                                      AS RUSER          /* 공급받는자 담당자명 또는 거래처명  */                
		      , ''                                       AS RDIVISION      /* 공급받는자 부서명 */                    
		      , CASE WHEN ISNULL(D.HAND_PHON, '') = '' THEN D.TELEPHON
		             ELSE D.HAND_PHON
		        END                                      AS RTELNO         /* 공급받는자 핸드폰 또는 전화번호  */       
		      , 'N'                                      AS REVERSEYN      /* 역발행여부(Y:역발행대상 세금계산서)  */ 
		      , ''                                       AS SENDID         /* 공급자     SENDBIL ID */                
		      , ''                                       AS RECVID         /* 공급받는자 SENDBIL ID  */               
		      , A.COMP_CODE                              AS COMP_CODE      /* 법인코드 */ 
		      , A.DIV_CODE                               AS DIV_CODE       /* 사업장코드  */
		      , A.INOUT_PRSN                             AS INOUT_PRSN     /* 수불담당  */                            
		      , M3.REF_CODE1                             AS DEL_YN         /* 삭제가능여부  */                        
		      , D.BILL_MEM_TYPE                          AS BILL_MEM_TYPE  /* 회원구분  */                            
		FROM           BTR100T A  WITH (NOLOCK, INDEX(BTR100T_IDX02))                                              
		     LEFT JOIN STR100T B  WITH (NOLOCK)  ON B.COMP_CODE   = A.COMP_CODE                                    
		                                        AND B.DIV_CODE    = A.DIV_CODE                                     
		                                        AND B.INOUT_NUM   = A.INOUT_NUM                                    
		                                        AND B.CUSTOM_CODE = A.INOUT_CODE                                   
		     LEFT JOIN (SELECT COMP_CODE
		                     , MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
		                     , DIV_CODE
		                     , EB_NUM
		                     , BILL_DATE
		                     , CUSTOM_CODE
		                     , MAX(EB_STEP) AS EB_STEP  
		                  FROM STB200T WITH (NOLOCK)                                                               
		                 WHERE COMP_CODE  = @CompCode
		                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                   AND DIV_CODE = #{DIV_CODE}
		                 </if>
		                   AND EB_STEP IN('1', '2')                                                                
		              GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) C ON C.COMP_CODE = A.COMP_CODE 
		                                                                             AND C.DIV_CODE  = A.DIV_CODE  
		                                                                             AND C.EB_NUM    = B.EB_NUM    
		                                                                             AND C.BILL_DATE   = A.INOUT_DATE
		                                                                             AND C.CUSTOM_CODE = A.INOUT_CODE
		     LEFT JOIN BCM100T D  WITH (NOLOCK)  ON D.COMP_CODE   = A.COMP_CODE
		                                        AND D.CUSTOM_CODE = A.INOUT_CODE                                   
		     LEFT JOIN BILL_DB.BILL.BILL_STAT  E  ON E.BILLSEQ     = B.EB_NUM                                       
		     LEFT JOIN BILL_DB.BILL.BILL_TRANS F  ON F.BILLSEQ     = B.EB_NUM                                       
		     LEFT JOIN BOR120T C1 WITH (NOLOCK)  ON C1.COMP_CODE  = A.COMP_CODE 
		                                        AND C1.DIV_CODE   = A.DIV_CODE
		     LEFT JOIN BOR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE  = A.COMP_CODE                                    
		     LEFT JOIN BSA100T M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
		                                        AND M1.MAIN_CODE  = 'B024'                                         
		                                        AND M1.SUB_CODE  != '$'                                            
		                                        AND M1.SUB_CODE   = A.INOUT_PRSN                                   
		     LEFT JOIN BSA100T M2 WITH (NOLOCK)  ON M2.COMP_CODE  = B.COMP_CODE
		                                        AND M2.MAIN_CODE  = 'B087'                                         
		                                        AND M2.SUB_CODE  != '$'                                            
		                                        AND M2.SUB_CODE   = ISNULL(B.BILL_SEND_YN, 'N')                    
		     LEFT JOIN BSA100T M3 WITH (NOLOCK)  ON M3.COMP_CODE  = A.COMP_CODE
		                                        AND M3.MAIN_CODE  = 'S050'                                         
		                                        AND M3.SUB_CODE  != '$'                                            
		                                        AND M3.SUB_CODE   = E.BILLSTAT                                     
		     LEFT JOIN (SELECT A.COMP_CODE , A.CUSTOM_CODE, PRSN_NAME, MAIL_ID, HAND_PHON
		                 FROM  BCM120T  A INNER JOIN  (SELECT  COMP_CODE, MAX(CUSTOM_CODE) CUSTOM_CODE , MIN(SEQ) SEQ
		                                                 FROM  BCM120T A
		                                                WHERE  MAIN_BILL_YN ='Y'
		                                                  AND  BILL_TYPE IN ('2','3')
		                                             GROUP BY  COMP_CODE, CUSTOM_CODE ) B ON A.COMP_CODE = B.COMP_CODE
		                                                                                 AND A.CUSTOM_CODE = B.CUSTOM_CODE
		                                                                                 AND A.SEQ = B.SEQ
		                ) C4 ON C4.COMP_CODE = A.COMP_CODE
		                    AND C4.CUSTOM_CODE = D.CUSTOM_CODE
		WHERE   A.INOUT_TYPE       IN ('2','3')                                                                    
		  AND   A.CREATE_LOC        = '1'                                                                          
		  AND   A.INOUT_CODE_TYPE  IN ('4','5')
		  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                                                                    
		  AND   A.DIV_CODE          			 = #{DIV_CODE} /*사업장*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">    
		  AND   A.INOUT_DATE       			 &gt;= #{INOUT_DATE_FR} /*출고일*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		  AND   A.INOUT_DATE       			 &lt;= #{INOUT_DATE_TO} /*출고일*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		  AND   A.INOUT_CODE        			 = #{CUSTOM_CODE} /*거래처코드*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		  AND   D.CUSTOM_NAME       			 = #{CUSTOM_NAME} /*거래처명*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		  AND   A.INOUT_PRSN        			 = #{INOUT_PRSN} /*수불담당*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(BILL_STAT)">
		  AND   E.BILLSTAT          			 = #{BILL_STAT} /*상태 0:미개봉, 1:승인, 2:반려, 3:개봉, 4:승인취소, 5:미승인, 6:삭제, 9:기타*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
		  AND   ISNULL(B.BILL_SEND_YN, 'N')      = #{BILL_SEND_YN} /*전송여부 Y : 전송, N : 미전송*/
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
		  AND   D.BILL_MEM_TYPE 				 = #{BILL_TYPE} /*전자문서구분*/
		  </if>
		GROUP BY  M2.CODE_NAME    , M3.CODE_NAME   , A.INOUT_DATE    , A.INOUT_CODE   , D.CUSTOM_FULL_NAME         
		        , A.INOUT_TYPE    , D.BUSINESS_TYPE , D.TOP_NUM      , D.COMPANY_NUM   , A.INOUT_PRSN   , M1.CODE_NAME                
		        , A.INOUT_NUM     , D.BILL_MAIL_ID , D.BILL_MEM_TYPE , C1.COMPANY_NUM , C1.DIV_NAME                
		        , C1.REPRE_NAME   , C1.COMP_TYPE   , C1.COMP_CLASS   , C1.ADDR        , C1.TELEPHON                
		        , C2.EMAIL        , D.TOP_NAME     , D.COMP_TYPE     , D.COMP_CLASS   , D.ADDR1                    
		        , D.ADDR2        , D.TELEPHON      , A.DIV_CODE      , B.EB_NUM       , M3.REF_CODE1    , A.COMP_CODE, F.TRANSYN
		        , B.BILL_SEND_YN , C4.MAIL_ID      , F.REMAIL        , D.BILL_PRSN    , D.HAND_PHON
		
		SET NOCOUNT OFF
		SET ARITHABORT OFF
		
		END
	</select>
	
	<select id="str410ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/*str410ukrv.Cstr410ukrv[fnStr410QSt1] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID  */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @UnitType    NVARCHAR(03) /* (필수) 수량단위구분(1:판매단위,2:재고단위) */
		          , @PrintType   NVARCHAR(03) /* (필수) 단가금액출력여부(1:예,2:아니오) */
		
		    SET @CompCode  = #{COMP_CODE}    /*그리드PARAM*/
		    SET @UserId    = #{S_USER_ID}    /*그리드PARAM*/
		    SET @LangType  = #{S_LANG_CODE}  /*그리드PARAM*/ 
		    SET @UnitType  = #{UNIT_TYPE}    /*폼PARAM*/  
		    SET @PrintType = #{PRINT_TYPE}   /*폼PARAM*/  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */
		    SELECT  
		           CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                        , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                        , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		           END                                                                                              AS DT
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN C1.ITEM_CODE
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_CODE, '') != '' THEN C2.CUSTOM_ITEM_CODE
		                          ELSE C1.ITEM_CODE
		                     END
		           END                                                                                              AS CODE
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                                               ELSE C1.ITEM_NAME
		                                                          END
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_NAME, '') != '' THEN C2.CUSTOM_ITEM_NAME
		                          ELSE CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		                               END
		                     END
		           END                                                                                              AS NAME
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_SPEC, '') != '' THEN REPLACE(REPLACE(C2.CUSTOM_ITEM_SPEC, '&lt;', ''), '&gt;', '')
		                          ELSE REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                     END
		           END                                                                                              AS UNIT
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_Q, 0) * (-1)
		                          ELSE ISNULL(A.INOUT_Q, 0) * (-1)
		                     END
		                ELSE
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_Q, 0)
		                          ELSE ISNULL(A.INOUT_Q, 0)
		                     END
		           END                                                                                              AS VLM
		         , CASE WHEN @PrintType = '1' THEN
		                     CASE WHEN @UnitType = '1' THEN ISNULL(A.ORDER_UNIT_P, 0)
		                          ELSE ISNULL(A.INOUT_P, 0)
		                     END
		                ELSE
		                     0
		           END                                                                                              AS DANGA
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.ORDER_UNIT_O, 0) * (-1)
		                          ELSE 0
		                     END
		                ELSE
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.ORDER_UNIT_O, 0)
		                          ELSE 0
		                     END
		           END                                                                                              AS SUP
		         , CASE WHEN A.INOUT_TYPE = '3' THEN
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.INOUT_TAX_AMT, 0) * (-1)
		                          ELSE 0
		                     END
		                ELSE
		                     CASE WHEN @PrintType = '1' THEN ISNULL(A.INOUT_TAX_AMT, 0)
		                          ELSE 0
		                     END
		           END                                                                                              AS TAX
		
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.ITEM_CODE
		         , A.INOUT_CODE                                                                                     AS CUSTOM_CODE
		         , A.ORDER_UNIT                                                                                     AS SALE_UNIT
		         , A.TRNS_RATE                                                                                      AS TRANS_RATE
		    FROM              BTR100T   A  WITH (NOLOCK)
		           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
		                                                AND C1.ITEM_CODE        = A.ITEM_CODE
		           LEFT  JOIN BPR300T   C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
		                                                AND C2.TYPE             = N'2'          /* 구분(1:구매, 2:판매) */
		                                                AND C2.DIV_CODE         = N'*'          /* 판매일 경우 사업장 관리안함 */
		                                                AND C2.ITEM_CODE        = A.ITEM_CODE
		                                                AND C2.CUSTOM_CODE      = A.INOUT_CODE
		                                                AND C2.APLY_START_DATE  = (
		                                                                          SELECT MAX(APLY_START_DATE)       AS APLY_START_DATE
		                                                                          FROM   BPR300T   WITH (NOLOCK)
		                                                                          WHERE  COMP_CODE          = C2.COMP_CODE
		                                                                          AND    TYPE               = C2.TYPE
		                                                                          AND    DIV_CODE           = C2.DIV_CODE
		                                                                          AND    ITEM_CODE          = C2.ITEM_CODE
		                                                                          AND    CUSTOM_CODE        = C2.CUSTOM_CODE
		                                                                          AND    APLY_START_DATE   &lt;= ISNULL(A.INOUT_DATE, CONVERT(NVARCHAR, GETDATE(), 112))
		                                                                          )
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE        = A.COMP_CODE
		                                                AND M1.MAIN_CODE        = N'S084'
		                                                AND M1.SUB_CODE        != N'$'
		                                                AND M1.REF_CODE1        = N'Y'
		    WHERE  A.COMP_CODE      = @CompCode
		    AND    A.DIV_CODE       = #{DIV_CODE}
		    AND    A.INOUT_NUM      = #{BILLSEQ}
		    AND    A.INOUT_TYPE    IN ('2', '3')
		    AND    A.CREATE_LOC     = N'1'
		    ORDER  BY
		           A.INOUT_NUM, A.INOUT_SEQ
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	
	<select id="str410ukrvServiceImpl.getGsBillYN" parameterType="Map" resultType="rMap">
		 SELECT TOP 1 ISNULL(SUB_CODE , '01'  ) AS SUB_CODE
             ,       ISNULL(REF_CODE4, 'NAME')  AS REF_CODE4
             ,       ISNULL(REF_CODE5, 'N'   )  AS REF_CODE5
             ,       ISNULL(REF_CODE6, 'N'   )  AS REF_CODE6
             ,       ISNULL(REF_CODE7, ''    )  AS REF_CODE7
             ,       ISNULL(REF_CODE8, '8'   )  AS REF_CODE8
             ,       ISNULL(REF_CODE9, 'N'   )  AS REF_CODE9
        FROM   BSA100T  WITH (NOLOCK)
        WHERE  COMP_CODE = #{S_COMP_CODE}
        AND    MAIN_CODE = N'S084'
        AND    SUB_CODE != N'$'
        AND    REF_CODE1 = N'Y'
	</select>
	
	<insert id="str410ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_SSA110T
            (      KEY_VALUE
                 , OPR_FLAG
                 , COMP_CODE
                 , DIV_CODE
                 , BILL_NUM
                 , BILL_SEQ
                 , ITEM_CODE
                 , SALE_Q
                 , SALE_P
                 , SALE_AMT_O
                 , SALE_LOC_AMT_I
                 , TAX_TYPE
                 , TAX_AMT_O
                 , PUB_NUM
                 , BEFORE_PUB_NUM
                 , TO_DIV_CODE
                 , PJT_CODE
                 , INOUT_TYPE
                 , INOUT_TYPE_DETAIL
                 , SALE_UNIT
                 , TRANS_RATE
                 , WH_CODE
                 , PRICE_YN
                 , CUSTOM_CODE
                 , ORDER_PRSN
                 , OUT_DIV_CODE
                 , PRICE_TYPE
                 , UNIT_WGT
                 , WGT_UNIT
                 , UNIT_VOL
                 , VOL_UNIT
                 , SALE_WGT_Q
                 , SALE_FOR_WGT_P
                 , SALE_WGT_P
                 , SALE_VOL_Q
                 , SALE_FOR_VOL_P
                 , SALE_VOL_P
                 , INSERT_DB_USER
                 , INSERT_DB_TIME
                 , UPDATE_DB_USER
                 , UPDATE_DB_TIME
            )
            SELECT #{KEY_VALUE}
                 , #{OPR_FLAG}
                 , #{S_COMP_CODE}           AS COMP_CODE
                 , #{DIV_CODE}              AS DIV_CODE
                 , #{BILL_NUM}              AS BILL_NUM
                 , #{BILL_SEQ}              AS BILL_SEQ
                 , #{ITEM_CODE}             AS ITEM_CODE
                 , #{SALE_Q}                AS SALE_Q
                 , #{SALE_P}                AS SALE_P
                 , #{SALE_AMT_O}            AS SALE_AMT_O
                 , #{SALE_AMT_O}  * EXCHG_RATE_O    AS SALE_LOC_AMT_I
                 , #{TAX_TYPE}              AS TAX_TYPE
                 , #{TAX_AMT_O}             AS TAX_AMT_O
                 , #{PUB_NUM}               AS PUB_NUM
                 , #{BEFORE_PUB_NUM}        AS BEFORE_PUB_NUM
                 , #{TO_DIV_CODE}           AS TO_DIV_CODE
                 , #{PJT_CODE}              AS PJT_CODE
                 , #{INOUT_TYPE}            AS INOUT_TYPE
                 , #{INOUT_TYPE_DETAIL}     AS INOUT_TYPE_DETAIL
                 , #{SALE_UNIT}             AS SALE_UNIT
                 , #{TRANS_RATE}            AS TRANS_RATE
                 , #{WH_CODE}               AS WH_CODE
                 , #{PRICE_YN}              AS PRICE_YN
                 , #{CUSTOM_CODE}           AS CUSTOM_CODE
                 , #{ORDER_PRSN}            AS ORDER_PRSN
                 , #{OUT_DIV_CODE}          AS OUT_DIV_CODE
                 , #{PRICE_TYPE}            AS PRICE_TYPE
                 , #{UNIT_WGT}              AS UNIT_WGT
                 , #{WGT_UNIT}              AS WGT_UNIT
                 , #{UNIT_VOL}              AS UNIT_VOL
                 , #{VOL_UNIT}              AS VOL_UNIT
                 , #{SALE_WGT_Q}            AS SALE_WGT_Q
                 , #{SALE_FOR_WGT_P}        AS SALE_FOR_WGT_P
                 , #{SALE_WGT_P}            AS SALE_WGT_P
                 , #{SALE_VOL_Q}            AS SALE_VOL_Q
                 , #{SALE_FOR_VOL_P}        AS SALE_FOR_VOL_P
                 , #{SALE_VOL_P}            AS SALE_VOL_P
                 , #{INSERT_DB_USER}        AS INSERT_DB_USER
                 , GETDATE()                AS INSERT_DB_TIME
                 , #{UPDATE_DB_USER}        AS UPDATE_DB_USER
                 , GETDATE()                AS UPDATE_DB_TIME
            FROM   SSA100T
            WHERE  COMP_CODE        = #{S_COMP_CODE}
            AND    DIV_CODE         = #{DIV_CODE}
            AND    BILL_NUM         = #{BILL_NUM}
    </insert>   
    
    <update id="str410ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">     
        {call SP_SALES_PubModifyIssue(
            #{Flag, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{CompCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DivCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PubNum, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{OriginPubNum, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{SalePrsn, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{Remark, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BfoIssuId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},     
            #{AutoNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
</mapper>