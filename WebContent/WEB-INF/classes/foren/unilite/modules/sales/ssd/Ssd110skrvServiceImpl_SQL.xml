<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssd110skrvServiceImpl">
					
	<select id="ssd110skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
BEGIN

   SET NOCOUNT ON
   SET ARITHABORT ON

   DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
          ,@DIV_CODE    NVARCHAR(08) /* 사업장    */

    SET @COMP_CODE = #{S_COMP_CODE}
    SET @DIV_CODE  = #{DIV_CODE}

 SELECT 
	A.COMP_CODE,
	A.DIV_CODE,
	A.DEPT_CODE,
	E.TREE_NAME		AS	DEPT_NAME,
	D.ITEM_LEVEL1,
	D.ITEM_LEVEL2,
	D.ITEM_LEVEL3,
	SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_Q ELSE 0 END) AS SALE_Q1,
	SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS DISCOUNT_AMT1,
	SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_AMT_O ELSE 0 END) AS SALE_AMT_O1,
	SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.TAX_AMT_O ELSE 0 END) AS TAX_AMT_O1,
	SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SALE_TAX_AMT1,

	SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_Q ELSE 0 END) AS SALE_Q2,
	SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS DISCOUNT_AMT2,
	SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_AMT_O ELSE 0 END) AS SALE_AMT_O2,
	SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.TAX_AMT_O ELSE 0 END) AS TAX_AMT_O2,
	SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SALE_TAX_AMT2,

	SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_Q ELSE 0 END)	AS SUM_SALE_Q,
	SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS SUM_DISCOUNT_AMT,
	SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_AMT_O ELSE 0 END) AS SUM_SALE_AMT_O,
	SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.TAX_AMT_O ELSE 0 END) AS SUM_TAX_AMT_O,
	SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SUM_SALE_TAX_AMT

    FROM       SSA100T A WITH(NOLOCK)
	INNER JOIN SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
									 AND A.DIV_CODE  = B.DIV_CODE
									 AND A.BILL_NUM  = B.BILL_NUM
	INNER JOIN BTR100T C WITH(NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
									 AND C.DIV_CODE   = B.OUT_DIV_CODE
									 AND C.INOUT_NUM  = B.INOUT_NUM
									 AND C.INOUT_SEQ  = B.INOUT_SEQ
									 AND C.INOUT_TYPE = B.INOUT_TYPE
	INNER JOIN BPR100T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
									 AND D.ITEM_CODE = C.ITEM_CODE
	INNER JOIN BSA210T E WITH(NOLOCK) ON E.COMP_CODE  = A.COMP_CODE
									 AND E.TYPE_LEVEL = A.DIV_CODE
									 AND E.TREE_CODE  = A.DEPT_CODE

  WHERE A.COMP_CODE = @COMP_CODE
	AND A.DIV_CODE  = @DIV_CODE
	AND A.SALE_DATE &gt;= #{SALE_DATE_FR}
	AND A.SALE_DATE &lt;= #{SALE_DATE_TO}

	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">  
	   /*부서*/
		AND E.TREE_LEVEL  LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = @COMP_CODE AND TYPE_LEVEL= @DIV_CODE AND TREE_CODE = #{DEPT_CODE}) + '%'
	</if>
		
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">  
		AND D.ITEM_LEVEL1 = #{ITEM_LEVEL1}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
		AND D.ITEM_LEVEL2 = #{ITEM_LEVEL2}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">  
		AND D.ITEM_LEVEL3 = #{ITEM_LEVEL3}
	</if>

	GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, E.TREE_NAME, D.ITEM_LEVEL1, D.ITEM_LEVEL2, D.ITEM_LEVEL3
	
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
    </select>
	
	
</mapper>