<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssd120skrvServiceImpl">
					
	<select id="ssd120skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
BEGIN

 SET NOCOUNT ON
 SET ARITHABORT ON
 
 DECLARE
       @COMP_CODE       NVARCHAR(08)
      ,@DIV_CODE        NVARCHAR(08)
      ,@DEPT_CODE       NVARCHAR(08)
      ,@SALE_DATE_FR    NVARCHAR(08)
      ,@SALE_DATE_TO    NVARCHAR(08)

 SET @COMP_CODE        = #{S_COMP_CODE}         /* 법인 */
 SET @DIV_CODE         = #{DIV_CODE}         /* 사업장 */
 SET @DEPT_CODE        = #{DEPT_CODE}            /* 부서 */

 SET @SALE_DATE_FR     = #{SALE_DATE_FR}             /* 매출일(FROM) */
 SET @SALE_DATE_TO     = #{SALE_DATE_TO}            /* 매출일(TO) */

  SELECT
  K.COMP_CODE, K.DIV_CODE 
 ,K.ITEM_CODE, A.ITEM_NAME, ISNULL(A.SPEC, '') AS SPEC, STOCK_UNIT                                           /* 품목코드/품목명/규격/단위 */
 ,K.STOCK_Q                               /* 현재고 */
 ,K.CON_Q,    K.CON_DISCOUNT_AMT,   K.CON_SALE_AMT,  K.CON_TAX_AMT,    K.CON_TOT_AMT        /* 위탁-매출량/할인금액/매출금액/부가세/매출합계 */
 ,K.CASH_Q,  K.CASH_DISCOUNT_AMT,  K.CASH_SALE_AMT, K.CASH_TAX_AMT,  K.CASH_TOT_AMT      /* 현매-매출량/할인금액/매출금액/부가세/매출합계 */
 ,K.TOT_Q,    K.TOT_DISCOUNT_AMT,     K.TOT_SALE_AMT,    K.TOT_TAX_AMT,     K.TOT_AMT_SUM        /* 합계-매출량/할인금액/매출금액/부가세/매출합계 */
 FROM 
 (
	SELECT 
	 A.COMP_CODE
	,A.DIV_CODE
	,ISNULL(B.PURCHASE_CUSTOM_CODE, '') AS CUSTOM_CODE
	,B.ITEM_CODE
	,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_Q ELSE 0 END) AS CON_Q
	,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS CON_DISCOUNT_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_AMT_O ELSE 0 END) AS CON_SALE_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.TAX_AMT_O ELSE 0 END) AS CON_TAX_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS CON_TOT_AMT

	/* 현매-매출수량/할인금액/매출금액/부가세/합계금액 */
	,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_Q ELSE 0 END) AS CASH_Q
	,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS CASH_DISCOUNT_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_AMT_O ELSE 0 END) AS CASH_SALE_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.TAX_AMT_O ELSE 0 END)  AS CASH_TAX_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS CASH_TOT_AMT

	/* 현매-매출수량/할인금액/매출금액/부가세/합계금액 */
	,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_Q ELSE 0 END) AS TOT_Q
	,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS TOT_DISCOUNT_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_AMT_O ELSE 0 END) AS TOT_SALE_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.TAX_AMT_O ELSE 0 END) AS TOT_TAX_AMT
	,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS TOT_AMT_SUM
	,SUM(ISNULL(D.STOCK_Q, 0)) AS STOCK_Q
	FROM       SSA100T  A WITH(NOLOCK)
	INNER JOIN SSA110T  B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE 
									  AND A.DIV_CODE    = B.DIV_CODE
									  AND A.BILL_NUM    = B.BILL_NUM
	LEFT   JOIN BTR100T C WITH(NOLOCK) ON B.COMP_CODE    = C.COMP_CODE 
									  AND B.OUT_DIV_CODE = C.DIV_CODE
									  AND B.INOUT_NUM    = C.INOUT_NUM 
									  AND B.INOUT_SEQ    = C.INOUT_SEQ
									  AND B.INOUT_TYPE   = C.INOUT_TYPE
	LEFT   JOIN (SELECT 
                  COMP_CODE, DIV_CODE, ITEM_CODE, SUM(STOCK_Q) AS STOCK_Q
                  FROM BIV100T WITH(NOLOCK) 
				  WHERE COMP_CODE = @COMP_CODE AND DIV_CODE = @DIV_CODE
				  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
				 ) D ON D.COMP_CODE  = B.COMP_CODE 
					AND D.DIV_CODE   = B.DIV_CODE
					AND D.ITEM_CODE  = B.ITEM_CODE
	LEFT JOIN   BSA210T  F WITH(NOLOCK) ON A.COMP_CODE  = F.COMP_CODE  AND A.DIV_CODE = F.TYPE_LEVEL AND A.DEPT_CODE = F.TREE_CODE

  WHERE A.COMP_CODE  = @COMP_CODE
    AND A.DIV_CODE   = @DIV_CODE
    AND A.SALE_DATE &gt;= @SALE_DATE_FR
    AND A.SALE_DATE &lt;= @SALE_DATE_TO

 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
     AND  F.TREE_LEVEL LIKE (SELECT X.TREE_LEVEL FROM BSA210T X WITH(NOLOCK) WHERE X.COMP_CODE = @COMP_CODE AND X.TYPE_LEVEL = @DIV_CODE AND X.TREE_CODE = #{DEPT_CODE}) + '%'
 </if> 
 
	GROUP BY A.COMP_CODE, A.DIV_CODE, B.PURCHASE_CUSTOM_CODE, B.ITEM_CODE

 ) K
	INNER  JOIN BPR100T A WITH(NOLOCK) ON A.COMP_CODE = @COMP_CODE AND A.ITEM_CODE   = K.ITEM_CODE
	LEFT   JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE = @COMP_CODE AND K.CUSTOM_CODE = B.CUSTOM_CODE
	
 WHERE 1 = 1

 <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">  
	AND A.ITEM_LEVEL1 = #{ITEM_LEVEL1}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
	AND A.ITEM_LEVEL2 = #{ITEM_LEVEL2}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">  
	AND A.ITEM_LEVEL3 = #{ITEM_LEVEL3}
</if>

  SET ARITHABORT OFF
  SET NOCOUNT OFF

END
    </select>
	
	
</mapper>