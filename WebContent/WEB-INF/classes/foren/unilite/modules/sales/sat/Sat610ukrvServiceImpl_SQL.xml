<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sat610ukrvServiceImpl">
	<select id="sat610ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
			
		/* 데이터 조회 */
	    SELECT A.COMP_CODE                          -- 법인코드         
		     , A.DIV_CODE                           -- 사업장코드
	         , A.INOUT_NUM                          -- 수불번호(입고번호)
		     , A.INOUT_USER                         -- 입고자
		     , E.USER_NAME   AS INOUT_USER_NAME     -- 입고자명
		     , A.INOUT_DATE                         -- 입고일	      
	         , A.REMARK                             -- 입고비고  
		     , D.INOUT_DATE  AS OUT_DATE            -- 출고일	          
		     , B.AGENT_CUSTOM_CODE                  -- 대리점 거래처코드
	         , C.CUSTOM_NAME AS AGENT_CUSTOM_NAME   -- 대리점 거래처명 
		     , B.CUSTOM_NAME	                    -- 납품처명	 
		     , B.USE_GUBUN	                        -- 사용구분	      
		     , B.USE_FR_DATE                        --사용기간FR	
			 , LEFT(B.USE_FR_TIME, 4) AS USE_FR_TIME--사용기간FR	
			 , B.USE_TO_DATE                        --사용기간TO 	
			 , LEFT(B.USE_TO_TIME, 4) AS USE_TO_TIME--사용기간TO 
			 , B.DELIVERY_ADDRESS                   --수령지	
			 , B.BUTTON_G7_YN                       --G7버튼 Y/N
			 , B.BUTTON_G7_SET                      --G7버튼 SET
			 , B.BUTTON_G5_YN                       --G5버튼 Y/N
			 , B.BUTTON_G5_SET                      --G5버튼 SET0   
		     , B.FS_YN	                            -- FS지원Y/N	      
		     , B.GATEWAY_CUST_NM	                -- 게이트웨이업체명
		     , B.GATEWAT_YN	                        -- 게이트웨이Y/N	  
		     , B.DELIVERY_METH	                    -- 배송방법	    
		     , D.INOUT_USER	 AS OUT_USER            -- 출고요청자	 
		     , F.USER_NAME   AS	OUT_USER_NAME       -- 출고요청자	      
		     , D.REMARK	     AS OUT_REMARK          -- 출고비고	
	         , A.REQ_NO                             -- (참조)출고요청번호     
	      FROM            SAT600T A WITH (NOLOCK)
	           INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                             AND B.DIV_CODE  = A.DIV_CODE
	                                             AND B.REQ_NO    = A.REQ_NO
	           INNER JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                             AND C.CUSTOM_CODE = B.AGENT_CUSTOM_CODE
	           INNER JOIN SAT600T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                             AND D.DIV_CODE    = A.DIV_CODE
	                                             AND D.INOUT_NUM   = A.BASIS_NUM
	                                             AND D.INOUT_SEQ   = A.BASIS_SEQ
	           LEFT  JOIN BSA300T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
	                                             AND E.USER_ID     = A.INOUT_USER  
	           LEFT  JOIN BSA300T F WITH (NOLOCK) ON F.COMP_CODE   = D.COMP_CODE
	                                             AND F.USER_ID     = D.INOUT_USER                                                                    
	     WHERE A.COMP_CODE = #{S_COMP_CODE}
	       AND A.DIV_CODE  = #{DIV_CODE}
	       AND A.INOUT_NUM = #{INOUT_NUM}
	     GROUP BY A.COMP_CODE         , A.DIV_CODE            , A.INOUT_NUM         , A.REQ_NO       , A.INOUT_DATE                        
		        , B.CUSTOM_NAME       , B.AGENT_CUSTOM_CODE   , C.CUSTOM_NAME       , B.USE_GUBUN    , B.USE_FR_DATE                          
		        , B.USE_TO_DATE       , B.FS_YN               , B.GATEWAY_CUST_NM   , B.GATEWAT_YN   , B.DELIVERY_METH	                        
		        , B.REQ_USER          , D.REMARK	          , A.REMARK            , A.INOUT_USER   , E.USER_NAME
	            , D.INOUT_USER        , F.USER_NAME           , D.INOUT_DATE        , B.USE_FR_TIME  , B.USE_TO_TIME
	            , B.DELIVERY_ADDRESS  , B.BUTTON_G7_YN        , B.BUTTON_G7_SET     , B.BUTTON_G5_YN , B.BUTTON_G5_SET 
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat610ukrvServiceImpl.selectInoutNum" parameterType="Map" resultType="String">
		DECLARE @InoutNum    NVARCHAR(20)
        EXEC uniLITE.SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'SAT600T', 'O', #{INOUT_DATE}, '1', @InoutNum OUTPUT     -- 일채번
        SELECT @InoutNum 
	</select>
	<update id="sat610ukrvServiceImpl.updateMaster" parameterType="foren.unilite.modules.sales.sat.Sat610ukrvModel">
		IF EXISTS(SELECT INOUT_NUM 
		                FROM SAT600T 
		               WHERE COMP_CODE  = #{S_COMP_CODE}
				         AND DIV_CODE   = #{DIV_CODE}	
				         AND INOUT_NUM  = #{INOUT_NUM})
		BEGIN
			UPDATE    SAT600T
			   SET    INOUT_DATE          = #{INOUT_DATE}             --수불일
					, INOUT_USER          = #{INOUT_USER}             --입출고담당자
					, REMARK              = #{REMARK}                 --비고
					, UPDATE_DB_USER      = #{S_USER_ID}                    
				    , UPDATE_DB_TIME      = GETDATE()
			 WHERE  COMP_CODE             = #{S_COMP_CODE}
			   AND	DIV_CODE              = #{DIV_CODE}
			   AND  INOUT_NUM             = #{INOUT_NUM}
		END
	</update>
	<update id="sat610ukrvServiceImpl.updateOutBasis" parameterType="Map">
		UPDATE  SAT600T
		   SET  BASIS_NUM       = #{INOUT_NUM}
		      , BASIS_SEQ       = #{INOUT_SEQ}
			  , UPDATE_DB_USER  = #{S_USER_ID}                    
			  , UPDATE_DB_TIME  = GETDATE()
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
		   AND  INOUT_NUM       = #{BASIS_NUM}
		   AND  INOUT_SEQ       = #{BASIS_SEQ}
		   AND  INOUT_TYPE      = '2'
	</update>
	<select id="sat610ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	    BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    SELECT A.COMP_CODE                          -- 법인코드         
			     , A.DIV_CODE                           -- 사업장코드       
		         , A.INOUT_NUM                          -- 출고번호     
		         , A.INOUT_SEQ                          -- 출고순번
		         , A.ASST_CODE                          -- 자산코드
		         , C.ASST_NAME                          -- 자산명(모델명)
		         , C.SERIAL_NO                          -- S/N
		    	 , C.ASST_INFO                          -- 자산정보(S178)  
		    	 , C.ASST_STATUS                        -- 현재상태(S177)  
		    	 , C.ASST_GUBUN                         -- 자산구분(S179)  
		    	 , A.BASIS_NUM
		    	 , A.BASIS_SEQ
		    	 , A.REQ_NO
		    	 , A.REQ_SEQ
		    	 , B.CUSTOM_NAME
		      FROM            SAT600T A WITH (NOLOCK)
		           INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                             AND B.DIV_CODE  = A.DIV_CODE
		                                             AND B.REQ_NO    = A.REQ_NO
		           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                             AND C.DIV_CODE  = A.DIV_CODE
		                                             AND C.ASST_CODE = A.ASST_CODE
		
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.INOUT_NUM = #{INOUT_NUM}
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="sat610ukrvServiceImpl.selectInoutSeq"  parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(INOUT_SEQ), 0) + 1 as INOUT_SEQ
		  FROM SAT600T WITH (NOLOCK)
		  WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}	
		   AND INOUT_NUM  = #{INOUT_NUM} 
	</select>
	<insert id="sat610ukrvServiceImpl.insertDetail" parameterType="Map">
		/*sat610ukrvServiceImpl.insertDetail*/
		INSERT INTO SAT600T(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, INOUT_NUM                               --수불번호
				, INOUT_SEQ                               --수불순번
				, INOUT_TYPE                              --수불유형 (1:입고, 2:출고)
				, INOUT_METH                              --수불방법 (1:정상, 2:연장, 3:이동)
				, ASST_CODE                               --자산코드
				, INOUT_DATE                              --수불일
				, INOUT_USER                              --입출고담당자
				, REMARK                                  --비고
				, REQ_NO                                  --출고요청번호
				, REQ_SEQ                                 --요청순번
				, BASIS_NUM                               --출고번호
				, BASIS_SEQ                               --출고순번
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{INOUT_NUM}
				, #{INOUT_SEQ}
				, '1'
				, '1'
				, #{ASST_CODE}
				, #{INOUT_DATE}
				, #{INOUT_USER}
				, #{REMARK}
				, #{REQ_NO}
				, #{REQ_SEQ}
				, #{BASIS_NUM}
				, #{BASIS_SEQ}
				, #{S_USER_ID}
			    , GETDATE()
			    , #{S_USER_ID}
			    , GETDATE()
			)
	</insert>
	<update id="sat610ukrvServiceImpl.deleteDetail" parameterType="Map">
		DELETE  FROM   SAT600T
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
		   AND  INOUT_NUM       = #{INOUT_NUM}
		   AND  INOUT_SEQ       = #{INOUT_SEQ}
	</update>
	<update id="sat610ukrvServiceImpl.deleteAll" parameterType="Map">
		DELETE  FROM   SAT600T
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  INOUT_NUM       = #{INOUT_NUM}
	</update>
	<select id="sat610ukrvServiceImpl.checkDelete" parameterType="Map" resultType="rMap">
		SELECT  ASST_CODE, ASST_NAME
		  FROM  SAT100T  WITH (NOLOCK) 
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
	 	   AND  ASST_STATUS    != 'S'
		   <if test="@foren.Ognl@isNotEmpty(ASST_CODE)">
	       AND ASST_CODE IN 
	        <foreach collection="ASST_CODE" item="item" separator="," close=")" open="(">
					  #{item}
			</foreach>
	       </if>
	    UNION ALL 
	 	  -- 이후 등록된 이동/연장정보
	      SELECT A.ASST_CODE, C.ASST_NAME
	        FROM      SAT600T A WITH (NOLOCK) 
	       INNER JOIN SAT600T B WITH (NOLOCK)  ON B.COMP_CODE  = A.COMP_CODE
	                                          AND B.DIV_CODE   = A.DIV_CODE
	                                          AND B.ASST_CODE    = A.ASST_CODE   
	                                          AND B.INOUT_TYPE = '2'
	                                          AND B.INOUT_NUM  = #{INOUT_NUM}
	       INNER JOIN SAT100T C WITH (NOLOCK)  ON C.COMP_CODE  = A.COMP_CODE
	                                          AND C.DIV_CODE   = A.DIV_CODE
	                                          AND C.ASST_CODE  = A.ASST_CODE                                  
	       WHERE A.COMP_CODE 	   = #{S_COMP_CODE}
	 	     AND A.DIV_CODE        = #{DIV_CODE}
	 	     AND B.INOUT_TYPE = '2'
	 	     AND A.INOUT_NUM &gt; B.INOUT_NUM  
	</select>
	<select id="sat610ukrvServiceImpl.selectOutList" parameterType="Map" resultType="rMap">
	/* 출고참조 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
			
		/* 데이터 조회 */
	    SELECT A.INOUT_DATE	       AS OUT_DATE          -- 출고일	      
		     --, B.CUSTOM_NAME	                        -- 납품처명
		     , ISNULL(F.MOVE_CUST_NM, B.CUSTOM_NAME) AS CUSTOM_NAME	-- 납품처명	 (연장이동 거래처명 있을 경우 먼저 표시)   
	         , COUNT(A.COMP_CODE)  AS SAT600T_COUNT     -- 수량
	         , A.INOUT_NUM         AS BASIS_NUM         -- 출고번호     
	         , A.COMP_CODE                              -- (숨김)법인코드         
		     , A.DIV_CODE                               -- (숨김)사업장코드       
		     , B.AGENT_CUSTOM_CODE                      -- 대리점 거래처코드
	         , D.CUSTOM_NAME       AS AGENT_CUSTOM_NAME -- 대리점 거래처명
	         , B.USE_FR_DATE                        	--사용기간FR	
			 , LEFT(B.USE_FR_TIME, 4) AS USE_FR_TIME	--사용기간FR	
			 , B.USE_TO_DATE                        	--사용기간TO 	
			 , LEFT(B.USE_TO_TIME, 4) AS USE_TO_TIME	--사용기간TO 
			 , B.DELIVERY_ADDRESS                   	--수령지	
			 , B.BUTTON_G7_YN                       	--G7버튼 Y/N
			 , B.BUTTON_G7_SET                      	--G7버튼 SET
			 , B.BUTTON_G5_YN                       	--G5버튼 Y/N
			 , B.BUTTON_G5_SET                      	--G5버튼 SET0   
		     , B.FS_YN	                                -- FS지원Y/N	      
		     , B.GATEWAY_CUST_NM	                    -- 게이트웨이업체명
		     , B.GATEWAT_YN	                            -- 게이트웨이Y/N	  
		     , B.DELIVERY_METH	                        -- 배송방법	
		     , B.USE_GUBUN	                            -- 사용구분	  
		     , A.INOUT_USER       AS OUT_USER           -- 출고자
		     , E.USER_NAME        AS OUT_USER_NAME      -- 출고자
		     , A.REMARK           AS OUT_REMARK         -- 출고 비고
		     , B.REQ_NO									-- 출고요청번호
		     , CASE WHEN F.COMP_CODE IS NOT NULL THEN 'Y' ELSE 'N' END AS MOVE_YN	--이동/연장여부
	      FROM            SAT600T A WITH (NOLOCK)
	           INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                             AND B.DIV_CODE   = A.DIV_CODE
	                                             AND B.REQ_NO     = A.REQ_NO
	           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
	                                             AND C.DIV_CODE   = A.DIV_CODE
	                                             AND C.ASST_CODE  = A.ASST_CODE
	           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
                                                 AND D.CUSTOM_CODE = B.AGENT_CUSTOM_CODE         
               INNER JOIN BSA300T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                 AND E.USER_ID     = A.INOUT_USER         
				LEFT JOIN (

							SELECT S1.COMP_CODE, S1.DIV_CODE, S1.MOVE_CUST_NM, S2.ASST_CODE, S2.REQ_NO, S2.REQ_SEQ
							FROM SAT400T S1 WITH (NOLOCK)
								 INNER JOIN SAT410T S2 WITH (NOLOCK) ON S2.COMP_CODE=S1.COMP_CODE AND S2.DIV_CODE=S1.DIV_CODE AND S2.CHANGE_NO=S2.CHANGE_NO
						    WHERE S1.COMP_CODE   = #{S_COMP_CODE}
						      AND S1.DIV_CODE    = #{DIV_CODE}					
				
						  )  F ON F.COMP_CODE   = A.COMP_CODE
		                      AND F.DIV_CODE	= A.DIV_CODE
							  AND F.REQ_NO		= A.REQ_NO
							  AND F.REQ_SEQ		= A.REQ_SEQ                                                                                                           
	     WHERE A.COMP_CODE   = #{S_COMP_CODE}
	       AND A.DIV_CODE    = #{DIV_CODE}
	       AND A.INOUT_TYPE  = '2'
	       AND C.ASST_STATUS = 'O'
	      <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	       AND A.CUSTOM_NAME LIKE '%'+#{CUSTOM_NAME}+'%'
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(ASST)">
	       AND (C.ASST_CODE LIKE #{ASST}+'%' OR C.ASST_NAME LIKE '%'+#{ASST}+'%')
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(BASIS_NUM)">
	       AND A.INOUT_NUM      = #{BASIS_NUM}
	       </if>
	     GROUP BY A.INOUT_DATE			, ISNULL(F.MOVE_CUST_NM, B.CUSTOM_NAME)		, A.INOUT_NUM			, A.COMP_CODE	
	     		, A.DIV_CODE			, B.USE_FR_DATE		, B.USE_TO_DATE			, B.AGENT_CUSTOM_CODE	
	     		, D.CUSTOM_NAME 		, B.FS_YN 			, B.GATEWAY_CUST_NM		, B.GATEWAT_YN			
	     		, B.DELIVERY_METH 		, B.USE_GUBUN 		, A.INOUT_USER 			, A.REMARK  
	     		, E.USER_NAME			, B.USE_FR_TIME 	, B.USE_TO_TIME   		, B.DELIVERY_ADDRESS     
	     		, B.BUTTON_G7_YN    	, B.BUTTON_G7_SET  	, B.BUTTON_G5_YN        , B.BUTTON_G5_SET       
	     		, B.REQ_NO   
	     		, CASE WHEN F.COMP_CODE IS NOT NULL THEN 'Y' ELSE 'N' END              
	     ORDER BY A.INOUT_DATE
	       
	     
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat610ukrvServiceImpl.selectOutDetailList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
				
			/* 데이터 조회 */
		    SELECT A.COMP_CODE                          -- 법인코드         
			     , A.DIV_CODE                           -- 사업장코드       
		         , A.INOUT_NUM     AS BASIS_NUM         -- 출고번호     
		         , A.INOUT_SEQ     AS BASIS_SEQ         -- 출고순번
		         , A.ASST_CODE                          -- 자산코드
		         , C.ASST_NAME                          -- 자산명(모델명)
		         , C.SERIAL_NO                          -- S/N
		    	 , C.ASST_INFO                          -- 자산정보(S178)  
		    	 , C.ASST_STATUS                        -- 현재상태(S177)  
		    	 , C.ASST_GUBUN                         -- 자산구분(S179)  
		    	 , A.REQ_NO
		    	 , A.REQ_SEQ
		      FROM            SAT600T A WITH (NOLOCK)
		           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                             AND C.DIV_CODE  = A.DIV_CODE
		                                             AND C.ASST_CODE = A.ASST_CODE
					LEFT JOIN (
								SELECT S1.COMP_CODE, S1.DIV_CODE, S1.MOVE_CUST_NM, S2.ASST_CODE, S2.REQ_NO, S2.REQ_SEQ
								FROM SAT400T S1 WITH (NOLOCK)
									 INNER JOIN SAT410T S2 WITH (NOLOCK) ON S2.COMP_CODE=S1.COMP_CODE AND S2.DIV_CODE=S1.DIV_CODE AND S2.CHANGE_NO=S2.CHANGE_NO
							     WHERE S1.COMP_CODE = #{S_COMP_CODE}
							       AND S1.DIV_CODE  = #{DIV_CODE}
							  ) F ON F.COMP_CODE   = A.COMP_CODE
								 AND F.DIV_CODE=A.DIV_CODE
								 AND F.REQ_NO=A.REQ_NO
								 AND F.REQ_SEQ=A.REQ_SEQ		
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.INOUT_NUM = #{BASIS_NUM}
		       AND #{MOVE_YN} = CASE WHEN F.COMP_CODE IS NOT NULL THEN 'Y' ELSE 'N' END
	       
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat610ukrvServiceImpl.selectExtReq" parameterType="Map" resultType="rMap">
		SELECT A.ASST_CODE, B.MOVE_CUST_NM
		  FROM       SAT410T A WITH (NOLOCK)
		  INNER JOIN SAT400T B WITH (NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
		                                     AND B.DIV_CODE  = A.DIV_CODE
		                                     AND B.CHANGE_NO = A.CHANGE_NO
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.REQ_NO    = #{REQ_NO}
		   AND A.REQ_SEQ   = #{REQ_SEQ}
		 GROUP BY A.ASST_CODE, B.MOVE_CUST_NM
	</select>
	
</mapper>