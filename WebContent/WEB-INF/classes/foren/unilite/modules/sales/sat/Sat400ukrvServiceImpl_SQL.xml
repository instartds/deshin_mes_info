<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sat400ukrvServiceImpl">
	<select id="sat400ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
			
		/* 데이터 조회 */
	    SELECT TOP 1
	           A.COMP_CODE                          -- 법인코드         
		     , A.DIV_CODE                           -- 사업장코드       
	         , A.CHANGE_NO                          -- 출고요청번호     
		     , A.RESERVE_DATE	                    -- 연장/이동요청일     
		     , A.RETURN_DATE	                    -- 예상반납일	         
		     , A.CUSTOM_NAME	                    -- 현납품처명	      
		     , A.MOVE_CUST_NM                       -- 이동납품처
		     , A.USE_GUBUN	                        -- 사용구분	      
		     , A.USE_FR_DATE	                    -- 사용기간FR	      
		     , A.USE_TO_DATE	                    -- 사용기간TO 	  
		     , A.RETURN_DATE      
		     , A.REQ_USER	                        -- 출고요청자	    
		     , C.USER_NAME    AS REQ_USER_NAME	    -- 출고요청자	      
		     , A.REMARK	                            -- 요청사항	
		     , A.REQ_NO      
		     , A.GUBUN
	      FROM            SAT400T A WITH (NOLOCK)
	           LEFT  JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                             AND C.USER_ID     = A.REQ_USER                       
	     WHERE A.COMP_CODE = #{S_COMP_CODE}
	       AND A.DIV_CODE  = #{DIV_CODE}
	       AND A.CHANGE_NO = #{CHANGE_NO}
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat400ukrvServiceImpl.selectChangeNo" parameterType="Map" resultType="String">
		DECLARE @ChangeNo    NVARCHAR(20)
        EXEC uniLITE.SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'SAT400T', 'MV', #{RESERVE_DATE}, '1', @ChangeNo OUTPUT     -- 일채번
        SELECT @ChangeNo
	</select>
	<update id="sat400ukrvServiceImpl.updateMaster" parameterType="foren.unilite.modules.sales.sat.Sat400ukrvModel">
		IF NOT EXISTS(SELECT CHANGE_NO 
		                FROM SAT400T 
		               WHERE COMP_CODE = #{S_COMP_CODE}
				         AND DIV_CODE = #{DIV_CODE}	
				         AND CHANGE_NO = #{CHANGE_NO})
		BEGIN
			INSERT INTO SAT400T(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장코드
				, CHANGE_NO                               --연장/이동요청번호   
				, GUBUN                                   --연장/이동구분(연장:1,이동:2)
				, RESERVE_DATE                            
				, CUSTOM_NAME                             --현납품처	
				, MOVE_CUST_NM                            --이동납품처
				, RETURN_DATE                              
				, USE_GUBUN                               --사용구분	
				, USE_FR_DATE                             --사용기간FR	
				, USE_TO_DATE                             --사용기간TO 	
				, REQ_USER                                --출고요청자	
				, REMARK                                  --요청사항	
				, REQ_NO
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{CHANGE_NO}
				, #{GUBUN}
				, #{RESERVE_DATE}
				, #{CUSTOM_NAME}
				, #{MOVE_CUST_NM}
				, #{RETURN_DATE}
				, #{USE_GUBUN}
				, #{USE_FR_DATE}
				, #{USE_TO_DATE}
				, #{REQ_USER}
				, #{REMARK}
				, #{REQ_NO}
				, #{S_USER_ID}
			    , GETDATE()
			    , #{S_USER_ID}
			    , GETDATE()
			)
		END
		ELSE
		BEGIN
			UPDATE SAT400T
			   SET    GUBUN               = #{GUBUN}
			   	    , RESERVE_DATE        = #{RESERVE_DATE}
					, CUSTOM_NAME         = #{CUSTOM_NAME}
					, MOVE_CUST_NM        = #{MOVE_CUST_NM}
					, USE_GUBUN           = #{USE_GUBUN}
					, USE_FR_DATE         = #{USE_FR_DATE}
					, USE_TO_DATE         = #{USE_TO_DATE}
					, RETURN_DATE         = #{RETURN_DATE}
					, REQ_USER            = #{REQ_USER}
					, REMARK              = #{REMARK}
					, UPDATE_DB_USER      = #{S_USER_ID}
				    , UPDATE_DB_TIME      = GETDATE()
			 WHERE  COMP_CODE             = #{S_COMP_CODE}
			   AND	DIV_CODE              = #{DIV_CODE}
			   AND  CHANGE_NO                = #{CHANGE_NO}
		END
	</update>
	<select id="sat400ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	    BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)    /* (필수)법인코드          */
		          , @DivCode        NVARCHAR(08)    /* (필수)사업장코드        */
		          , @ChangeNo       NVARCHAR(20)    /* (필수)출고요청번호      */
		          , @UserId         NVARCHAR(100)   /* (필수)사용자ID          */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}   
		    SET @ChangeNo    = #{CHANGE_NO}
		    SET @UserId      = #{S_USER_ID}
				
				
			/* 데이터 조회 */
		    SELECT B.COMP_CODE                          -- 법인코드         
			     , B.DIV_CODE                           -- 사업장코드       
		         , B.CHANGE_NO                          -- 출고요청번호     
		         , B.CHANGE_SEQ                         -- 요청순번
		         , B.ASST_CODE                          -- 자산코드
		         , C.ASST_NAME                          -- 자산명(모델명)
		         , C.SERIAL_NO                          -- S/N
		    	 , C.ASST_INFO                          -- 자산정보(S178)  
		    	 , C.ASST_STATUS                        -- 현재상태(S177)  
		    	 , C.ASST_GUBUN                         -- 자산구분(S179)  
		    	 , B.REQ_NO
		    	 , B.REQ_SEQ
		    	 , D.INOUT_NUM    AS IN_NUM             -- 입고번호
		    	 , A.CUSTOM_NAME                        -- 현납품추
		    	 , A.MOVE_CUST_NM                       -- 이동납품처
			     , (SELECT MAX(CHANGE_NO)               
			          FROM SAT410T E WITH (NOLOCK) 
	                 WHERE E.COMP_CODE   = B.COMP_CODE  
	                   AND E.DIV_CODE    = B.DIV_CODE
	                   AND E.REQ_NO      = B.REQ_NO   
	                   AND E.REQ_SEQ      = B.REQ_SEQ    
	                   AND E.CHANGE_NO   &gt; B.CHANGE_NO 
	                )             AS NEXT_CHANGE_NO     -- 이후 연장정보
		      FROM            SAT400T A WITH (NOLOCK)
		           INNER JOIN SAT410T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                             AND B.DIV_CODE  = A.DIV_CODE
		                                             AND B.CHANGE_NO    = A.CHANGE_NO
		           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
		                                             AND C.DIV_CODE  = B.DIV_CODE
		                                             AND C.ASST_CODE = B.ASST_CODE
				   LEFT  JOIN SAT600T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE  -- 입고정보
		                                             AND D.DIV_CODE    = B.DIV_CODE
		                                             AND D.REQ_NO      = B.REQ_NO
		                                             AND D.REQ_SEQ      = B.REQ_SEQ
		                                             AND D.INOUT_TYPE  = '1'       
		     WHERE A.COMP_CODE = @CompCode
		       AND A.DIV_CODE  = @DivCode
		       AND A.CHANGE_NO = @ChangeNo
		       
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="sat400ukrvServiceImpl.selectChangeSeq"  parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(CHANGE_SEQ), 0) + 1 as CHANGE_SEQ
		  FROM SAT410T   WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND CHANGE_NO = #{CHANGE_NO} 
	</select>
	<insert id="sat400ukrvServiceImpl.insertDetail" parameterType="Map">
		/*sat400ukrvServiceImpl.insertDetail*/
		INSERT INTO SAT410T	
		     (    COMP_CODE                               --법인
				, DIV_CODE                                --사업장코드
				, CHANGE_NO                               --출고요청번호
				, CHANGE_SEQ                              --요청순번
				, ASST_CODE                               --자산코드
				, REQ_NO
				, REQ_SEQ
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			 )
		VALUES
		     (    #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{CHANGE_NO}
				, #{CHANGE_SEQ}
				, #{ASST_CODE}
				, #{REQ_NO}
				, #{REQ_SEQ}
		     	, #{S_USER_ID}           
		     	, GETDATE()               
		     	, #{S_USER_ID}            
		     	, GETDATE()
		     )
	</insert>
	<update id="sat400ukrvServiceImpl.updateDetail" parameterType="Map">
		UPDATE  SAT410T
		   SET  ASST_CODE       = #{ASST_CODE}
		 WHERE  COMP_CODE       = #{S_COMP_CODE}
		   AND  DIV_CODE        = #{DIV_CODE}
		   AND  CHANGE_NO       = #{CHANGE_NO}
		   AND  CHANGE_SEQ      = #{CHANGE_SEQ}
	</update>
	<update id="sat400ukrvServiceImpl.deleteDetail" parameterType="Map">
		DELETE  FROM   SAT410T
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
		   AND  CHANGE_NO       = #{CHANGE_NO}
		   AND  CHANGE_SEQ      = #{CHANGE_SEQ}
	</update>
	<update id="sat400ukrvServiceImpl.deleteAll" parameterType="Map">
		DELETE  FROM   SAT410T
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
		   AND  CHANGE_NO       = #{CHANGE_NO}
		   
		DELETE  FROM   SAT400T
		 WHERE  COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  DIV_CODE     	= #{DIV_CODE}
		   AND  CHANGE_NO       = #{CHANGE_NO}
	</update>
	<select id="sat400ukrvServiceImpl.checkDelete" parameterType="Map" resultType="rMap">
		-- 출고상태가 아닐 것
		SELECT  A.ASST_CODE, A.ASST_NAME
		  FROM      SAT100T A WITH (NOLOCK) 
		 INNER JOIN SAT410T B WITH (NOLOCK)    ON B.COMP_CODE = A.COMP_CODE
		                                      AND B.DIV_CODE  = A.DIV_CODE
		                                      AND B.ASST_CODE = A.ASST_CODE       
		                                               
		 WHERE  A.COMP_CODE    	= #{S_COMP_CODE}
	 	   AND  A.DIV_CODE     	= #{DIV_CODE}
	 	   AND  B.CHANGE_NO     = #{CHANGE_NO} 
	 	   AND  A.ASST_STATUS   != 'O'
	 	   AND  A.EXT_REQ_YN    = 'Y'
		   <if test="@foren.Ognl@isNotEmpty(ASST_CODE)">
	       AND A.ASST_CODE IN 
	        <foreach collection="ASST_CODE" item="item" separator="," close=")" open="(">
					  #{item}
			</foreach>
	       </if>
	      UNION ALL
	      -- 입고가 없을 것
	      SELECT A.ASST_CODE, C.ASST_NAME
	        FROM      SAT410T A WITH (NOLOCK)
	       INNER JOIN SAT600T B WITH (NOLOCK)  ON B.COMP_CODE  = A.COMP_CODE
	                                          AND B.DIV_CODE   = A.DIV_CODE
	                                          AND B.REQ_NO     = A.REQ_NO   
	       INNER JOIN SAT100T C WITH (NOLOCK)  ON C.COMP_CODE  = A.COMP_CODE
	                                          AND C.DIV_CODE   = A.DIV_CODE
	                                          AND C.ASST_CODE  = A.ASST_CODE                                          
	       WHERE A.COMP_CODE 	   = #{S_COMP_CODE}
	 	     AND A.DIV_CODE        = #{DIV_CODE}
	 	     AND A.CHANGE_NO       = #{CHANGE_NO}
	 	     AND B.INOUT_TYPE      = '1' 
	 	   UNION ALL
	 	  -- 이후 등록된 이동/연장정보
	      SELECT A.ASST_CODE, D.ASST_NAME
	        FROM      SAT410T A WITH (NOLOCK)
	       INNER JOIN SAT400T B WITH (NOLOCK)  ON B.COMP_CODE  = A.COMP_CODE
	                                          AND B.DIV_CODE   = A.DIV_CODE
	                                          AND B.CHANGE_NO  = A.CHANGE_NO   
	       INNER JOIN SAT400T C WITH (NOLOCK)  ON C.COMP_CODE  = B.COMP_CODE
	                                          AND C.DIV_CODE   = B.DIV_CODE
	                                          AND C.REQ_NO     = B.REQ_NO   
	                                          AND C.RESERVE_DATE &gt; B.RESERVE_DATE  
	       INNER JOIN SAT100T D WITH (NOLOCK)  ON D.COMP_CODE  = A.COMP_CODE
	                                          AND D.DIV_CODE   = A.DIV_CODE
	                                          AND D.ASST_CODE  = A.ASST_CODE                                  
	       WHERE A.COMP_CODE 	   = #{S_COMP_CODE}
	 	     AND A.DIV_CODE        = #{DIV_CODE}
	 	     AND A.CHANGE_NO       = #{CHANGE_NO}
	</select>
   <update id="sat400ukrvServiceImpl.updateOutYn" parameterType="Map">
		UPDATE   SAT410T
		   SET   ASST_CODE       = #{ASST_CODE}
			   , OUT_YN          = #{OUT_YN}
		 WHERE  COMP_CODE        = #{S_COMP_CODE}
		   AND  DIV_CODE         = #{DIV_CODE}
		   AND  CHANGE_NO        = #{CHANGE_NO}
		   AND  CHANGE_SEQ       = #{CHANGE_SEQ}
	</update>
	<select id="sat400ukrvServiceImpl.selectOutList" parameterType="Map" resultType="rMap">
	/* 신규 팝업 조회*/
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
		DECLARE @CompCode       NVARCHAR(08)    /* (필수)법인코드          */
	          , @DivCode        NVARCHAR(08)    /* (필수)사업장코드        */
	          , @UserId         NVARCHAR(100)   /* (필수)사용자ID          */
	
	    SET @CompCode    = #{S_COMP_CODE}
	    SET @DivCode     = #{DIV_CODE}   
	    SET @UserId      = #{S_USER_ID}
			
	    -- 반납예정일 정보
	    BEGIN
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202104231210')) 
	            DROP TABLE #OMEGA202104231210
	    	     
	        CREATE TABLE #OMEGA202104231210
	             ( COMP_CODE            NVARCHAR(08)
	             , DIV_CODE             NVARCHAR(08)
	             , LAST_REQ_NO_SEQ      NVARCHAR(20)
	             , REQ_NO               NVARCHAR(20)
	             , REQ_SEQ              NUMERIC(5, 0)
	             , ASST_CODE            NVARCHAR(20)
	             , USE_FR_DATE          NVARCHAR(08)
	             , USE_TO_DATE          NVARCHAR(08)
	             , LAST_CHANGE_NO       NVARCHAR(20)
	             , LAST_CHANGE_SEQ      NUMERIC(5, 0)
	             , LAST_USE_FR_DATE     NVARCHAR(08)
	             , LAST_USE_TO_DATE     NVARCHAR(08)
	             , RETURN_DATE          NVARCHAR(08) )
	
	        INSERT #OMEGA202104231210
	             ( COMP_CODE    , DIV_CODE  , LAST_REQ_NO_SEQ, ASST_CODE )
	        SELECT A.COMP_CODE
	             , A.DIV_CODE
	             , MAX(B.REQ_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.REQ_SEQ), 5)) AS LAST_REQ_NO_SEQ
	             , B.ASST_CODE
	          FROM            SAT200T A WITH (NOLOCK)
	               INNER JOIN SAT210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                 AND B.DIV_CODE  = A.DIV_CODE
	                                                 AND B.REQ_NO    = A.REQ_NO
	         WHERE A.COMP_CODE = @CompCode
	           AND A.DIV_CODE  = @DivCode
	         GROUP BY A.COMP_CODE, A.DIV_CODE, B.ASST_CODE
	
	        UPDATE A
	           SET REQ_NO  = LEFT(A.LAST_REQ_NO_SEQ,14)
	             , REQ_SEQ = CONVERT(NUMERIC(5,0),RIGHT(A.LAST_REQ_NO_SEQ,5))
	          FROM #OMEGA202104231210 A 
	
	        UPDATE A
	           SET USE_FR_DATE = B.USE_FR_DATE
	             , USE_TO_DATE = B.USE_TO_DATE
	          FROM #OMEGA202104231210 A 
	               INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                 AND B.DIV_CODE  = A.DIV_CODE
	                                                 AND B.REQ_NO    = A.REQ_NO
	
	        UPDATE A
	           SET LAST_CHANGE_NO   = LEFT(B.LAST_CHANGE_NO_SEQ ,14)
	             , LAST_CHANGE_SEQ  = CONVERT(NUMERIC(5,0),RIGHT(B.LAST_CHANGE_NO_SEQ,5))
	          FROM #OMEGA202104231210 A 
	               INNER JOIN 
	               (SELECT A.COMP_CODE
	                     , A.DIV_CODE
	                     , A.REQ_NO
	                     , A.REQ_SEQ
	                     , MAX(B.CHANGE_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.CHANGE_SEQ), 5)) AS LAST_CHANGE_NO_SEQ
	                  FROM #OMEGA202104231210 A
	                       INNER JOIN SAT410T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                         AND B.DIV_CODE  = A.DIV_CODE
	                                                         AND B.REQ_NO    = A.REQ_NO
	                                                         AND B.REQ_SEQ   = A.REQ_SEQ
	                       INNER JOIN SAT400T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
	                                                         AND C.DIV_CODE  = B.DIV_CODE
	                                                         AND C.CHANGE_NO = B.CHANGE_NO
	                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.REQ_NO, A.REQ_SEQ) B ON B.COMP_CODE = A.COMP_CODE
	                                                                         AND B.DIV_CODE  = A.DIV_CODE
	                                                                         AND B.REQ_NO    = A.REQ_NO
	                                                                         AND B.REQ_SEQ   = A.REQ_SEQ
	
	        UPDATE A
	           SET LAST_USE_FR_DATE = B.USE_FR_DATE
	             , LAST_USE_TO_DATE = B.USE_TO_DATE
	          FROM #OMEGA202104231210 A 
	               INNER JOIN SAT400T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                 AND B.DIV_CODE  = A.DIV_CODE
	                                                 AND B.CHANGE_NO = A.LAST_CHANGE_NO
	
	        UPDATE A
	           SET RETURN_DATE = (CASE WHEN ISNULL(LAST_USE_TO_DATE,'') = ''
	                                   THEN CONVERT(NVARCHAR(8),DATEADD(D, 1, USE_TO_DATE     ),112)
	                                   ELSE CONVERT(NVARCHAR(8),DATEADD(D, 1, LAST_USE_TO_DATE),112)
	                               END)
	          FROM #OMEGA202104231210 A 
	    END

	    -- 최종 예약정보
	    BEGIN
	        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202104220441')) 
	            DROP TABLE #OMEGA202104220441
	    	     
	        CREATE TABLE #OMEGA202104220441
	             ( COMP_CODE            NVARCHAR(08)
	             , DIV_CODE             NVARCHAR(08)
	             , ASST_CODE            NVARCHAR(20)
	             , LAST_RESERVE_NO_SEQ  NVARCHAR(25)
	             , RESERVE_DATE         NVARCHAR(08)
	             , RESERVE_USER_NAME    NVARCHAR(100)
	             , USE_TO_DATE          NVARCHAR(08) )
	
	        INSERT #OMEGA202104220441
	             ( COMP_CODE    , DIV_CODE  , ASST_CODE    , LAST_RESERVE_NO_SEQ )
	        SELECT A.COMP_CODE
	             , A.DIV_CODE
	             , B.ASST_CODE
	             , MAX(B.RESERVE_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.RESERVE_SEQ), 5)) AS LAST_RESERVE_NO_SEQ
	          FROM            SAT300T A WITH (NOLOCK)
	               INNER JOIN SAT310T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                                 AND B.DIV_CODE   = A.DIV_CODE
	                                                 AND B.RESERVE_NO = A.RESERVE_NO
	         WHERE A.COMP_CODE = @CompCode
	           AND A.DIV_CODE  = @DivCode
	         GROUP BY A.COMP_CODE, A.DIV_CODE, B.ASST_CODE
	
	        UPDATE A
	           SET RESERVE_DATE      = B.RESERVE_DATE
	             , RESERVE_USER_NAME = C.USER_NAME
	             , USE_TO_DATE       = CONVERT(NVARCHAR(8),DATEADD(D, 1, B.USE_TO_DATE),112)
	          FROM #OMEGA202104220441 A 
	               INNER JOIN SAT300T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                                 AND B.DIV_CODE   = A.DIV_CODE
	                                                 AND B.RESERVE_NO = LEFT(A.LAST_RESERVE_NO_SEQ,14)
	               LEFT  JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
	                                                 AND C.USER_ID    = B.REQ_USER
	    END
	    
		/* 데이터 조회 */
	    SELECT A.INOUT_DATE	       AS OUT_DATE          -- 출고일	 
	         , C.ASST_CODE  
	         , C.ASST_NAME                          -- 자산명(모델명)
	         , C.SERIAL_NO                          -- S/N
	    	 , C.ASST_INFO                          -- 자산정보(S178)  
	    	 , C.ASST_STATUS                        -- 현재상태(S177)  
	    	 , C.ASST_GUBUN                         -- 자산구분(S179)  
	         , B.USE_GUBUN     
		     , B.CUSTOM_NAME	                        -- 납품처명	   
	         , B.USE_FR_DATE	                        -- 사용기간FR	      
	         , B.USE_TO_DATE	                        -- 사용기간TO 	
	         , A.INOUT_NUM         AS  BASIS_NUM        -- 출고번호     
	         , A.COMP_CODE                              -- (숨김)법인코드         
		     , A.DIV_CODE                               -- (숨김)사업장코드       
		     , B.AGENT_CUSTOM_CODE                      -- 대리점 거래처코드
	         , D.CUSTOM_NAME       AS AGENT_CUSTOM_NAME -- 대리점 거래처명
		     , B.USE_FR_DATE	                        -- 사용기간FR	      
		     , B.USE_TO_DATE	                        -- 사용기간TO 	  
		     , B.FS_YN	                                -- FS지원Y/N	      
		     , B.GATEWAY_CUST_NM	                    -- 게이트웨이업체명
		     , B.GATEWAT_YN	                            -- 게이트웨이Y/N	  
		     , B.DELIVERY_METH	                        -- 배송방법	
		     , B.USE_GUBUN	                            -- 사용구분	  
		     , A.INOUT_USER       AS OUT_USER           -- 출고자
		     , E.USER_NAME        AS OUT_USER_NAME      -- 출고자
		     , A.REMARK           AS OUT_REMARK         -- 출고 비고
		     , A.REQ_NO
		     , A.REQ_SEQ
		     , C.RESERVE_YN
		     , (CASE WHEN ISNULL(C.RESERVE_YN,'N') = 'N'
	                 THEN ''
	                 ELSE ISNULL(C.RESERVE_YN,'N')
	             END) AS RESERVE_STATUS   					-- 예약상태
		     , (CASE WHEN ISNULL(C.RESERVE_YN,'N') = 'N'
	                 THEN ''
	                 ELSE G.USE_TO_DATE
	             END) AS RESERVE_DATE                       -- 사용예정일(예약일)
		     , (CASE WHEN C.ASST_STATUS = 'O'
	                 THEN ISNULL(F.RETURN_DATE,'')
	                 ELSE ''
	             END) AS RETURN_DATE                        -- 반납예정일
	      FROM            SAT600T A WITH (NOLOCK)
	           INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                             AND B.DIV_CODE   = A.DIV_CODE
	                                             AND B.REQ_NO     = A.REQ_NO
	           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
	                                             AND C.DIV_CODE   = A.DIV_CODE
	                                             AND C.ASST_CODE  = A.ASST_CODE
	           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
                                                 AND D.CUSTOM_CODE = B.AGENT_CUSTOM_CODE         
               INNER JOIN BSA300T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                 AND E.USER_ID     = A.INOUT_USER  
               LEFT  JOIN #OMEGA202104231210 F    ON F.COMP_CODE = A.COMP_CODE
	                                             AND F.DIV_CODE  = A.DIV_CODE
	                                             AND F.ASST_CODE = A.ASST_CODE
	           LEFT  JOIN #OMEGA202104220441 G    ON G.COMP_CODE = A.COMP_CODE
	                                             AND G.DIV_CODE  = A.DIV_CODE
	                                             AND G.ASST_CODE = A.ASST_CODE                                                                
	     WHERE A.COMP_CODE   = #{S_COMP_CODE}
	       AND A.DIV_CODE    = #{DIV_CODE}
	       AND A.INOUT_TYPE  = '2'
	       AND C.ASST_STATUS = 'O'
	       AND ISNULL(A.BASIS_NUM, '')   = ''  
	      <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	       AND B.CUSTOM_NAME LIKE '%'+#{CUSTOM_NAME}+'%'
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(ASST)">
	       AND (C.ASST_CODE LIKE #{ASST}+'%' OR C.ASST_NAME LIKE '%'+#{ASST}+'%')
	       </if>
	     
	     ORDER BY A.INOUT_DATE, A.REQ_NO, A.REQ_SEQ
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat400ukrvServiceImpl.selectOutDetailList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
				
			/* 데이터 조회 */
		    SELECT A.COMP_CODE                          -- 법인코드         
			     , A.DIV_CODE                           -- 사업장코드       
		         , A.INOUT_NUM     AS BASIS_NUM         -- 출고번호     
		         , A.INOUT_SEQ     AS BASIS_SEQ         -- 출고순번
		         , A.ASST_CODE                          -- 자산코드
		         , C.ASST_NAME                          -- 자산명(모델명)
		         , C.SERIAL_NO                          -- S/N
		    	 , C.ASST_INFO                          -- 자산정보(S178)  
		    	 , C.ASST_STATUS                        -- 현재상태(S177)  
		    	 , C.ASST_GUBUN                         -- 자산구분(S179)  
		    	 , A.REQ_NO
		    	 , A.REQ_SEQ
		      FROM            SAT600T A WITH (NOLOCK)
		           INNER JOIN SAT100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                             AND C.DIV_CODE  = A.DIV_CODE
		                                             AND C.ASST_CODE = A.ASST_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.INOUT_NUM = #{INOUT_NUM}
	           AND C.ASST_STATUS = 'O'
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	<select id="sat400ukrvServiceImpl.selectCheckReserveDate" parameterType="Map" resultType="rMap">
		SELECT CONVERT(NVARCHAR(10), CONVERT(DATETIME, MAX(MAX_DATE), 112), 102) AS MAX_DATE
		     , CONVERT(NVARCHAR(10), DATEADD(DAY, 1, CONVERT(DATETIME, MAX(MAX_DATE), 112)), 102) AS RESERVE_DATE
		  FROM (
		  		SELECT INOUT_DATE AS MAX_DATE
				  FROM SAT600T  WITH (NOLOCK)
				 WHERE COMP_CODE  = #{S_COMP_CODE}
				   AND DIV_CODE   = #{DIV_CODE}
				   AND REQ_NO     = #{REQ_NO}
				   AND INOUT_TYPE = '2'
				   AND INOUT_DATE &gt;= #{RESERVE_DATE}
				UNION 
				SELECT RESERVE_DATE AS MAX_DATE
				  FROM SAT400T WITH (NOLOCK) 
				 WHERE COMP_CODE  = #{S_COMP_CODE}
				   AND DIV_CODE   = #{DIV_CODE}
				   AND REQ_NO     = #{REQ_NO}
				   AND RESERVE_DATE &gt;= #{RESERVE_DATE}
		   ) A
	</select>
	<select id="sat400ukrvServiceImpl.checkExtDataByReqNo" parameterType="Map" resultType="rMap">
		SELECT COUNT(*) AS CNT
		  FROM SAT410T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND REQ_NO    = #{REQ_NO}
		   AND REQ_SEQ   = #{REQ_SEQ}
		   AND CHANGE_NO + RIGHT( '00000'+ CONVERT(NVARCHAR(5),CHANGE_SEQ) , 5) != #{CHANGE_NO} + RIGHT( '00000'+ CONVERT(NVARCHAR(5),#{CHANGE_SEQ}) , 5)
	</select>
</mapper>