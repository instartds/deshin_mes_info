<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spp100ukrvServiceImpl">
	<select id="spp100ukrvServiceImpl.selectEstiPrsn" parameterType="Map" resultType="rMap">
        SELECT TOP 1 SUB_CODE
        FROM   BSA100T A WITH (NOLOCK)
        WHERE  A.COMP_CODE  = #{S_COMP_CODE}
        AND    A.MAIN_CODE  = N'S010'
        AND    A.SUB_CODE  != N'$'
        AND    A.REF_CODE5  = #{S_USER_ID}
        AND    A.USE_YN     = N'Y'
	</select>

	<select id="spp100ukrvServiceImpl.selectCustomCode" parameterType="Map" resultType="rMap">
        /*  popupServiceImpl.agentCustPopup */
                    SELECT A.CUSTOM_CODE
                         , CASE M1.REF_ITEM
                                 WHEN '0' THEN A.CUSTOM_NAME
                                 WHEN '1' THEN A.CUSTOM_NAME1
                                 WHEN '2' THEN A.CUSTOM_NAME2
                                          ELSE A.CUSTOM_NAME
                            END                                             AS CUSTOM_NAME
                         , CASE WHEN ISNULL(A.COMPANY_NUM, '') = '' THEN ''
                                ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
                                     SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
                                     SUBSTRING(A.COMPANY_NUM,6,5)
                           END                                              AS COMPANY_NUM
                         , ISNULL(A.TOP_NAME, '')                           AS TOP_NAME
                         , ISNULL(A.BUSINESS_TYPE, '')                      AS BUSINESS_TYPE
                         , ISNULL(A.COMP_CLASS, '')                         AS COMP_CLASS
                         , ISNULL(A.COMP_TYPE, '')                          AS COMP_TYPE
                         , ISNULL(A.ADDR1, '')                              AS ADDR1
                         , ISNULL(A.ADDR2, '')                              AS ADDR2
                         , ISNULL(A.TELEPHON, '')                           AS TELEPHON
                         , ISNULL(A.FAX_NUM, '')                            AS FAX_NUM
                         , ISNULL(A.MAIL_ID, '')                            AS MAIL_ID
                         , ISNULL(A.WON_CALC_BAS, '')                       AS WON_CALC_BAS
                         , ISNULL(A.TO_ADDRESS, '')                         AS TO_ADDRESS
                         , ISNULL(A.TAX_CALC_TYPE, '')                      AS TAX_CALC_TYPE
                         , ISNULL(A.TRANS_CLOSE_DAY, '')                    AS TRANS_CLOSE_DAY
                         , ISNULL(A.RECEIPT_DAY, '')                        AS RECEIPT_DAY
                         , ISNULL(A.TAX_TYPE, '')                           AS TAX_TYPE
                         , ISNULL(A.VAT_RATE, 10)                           AS VAT_RATE
                         , ISNULL(A.MONEY_UNIT, C.SUB_CODE)                 AS MONEY_UNIT
                         , ISNULL(A.BILL_TYPE, '')                          AS BILL_TYPE
                         , ISNULL(A.SET_METH, '')                           AS SET_METH
                         , ISNULL(A.AGENT_TYPE, '')                         AS AGENT_TYPE
                         , ISNULL(A.AREA_TYPE, '')                          AS AREA_TYPE
                         , ISNULL(A.CREDIT_YN, '')                          AS CREDIT_YN
                         , ISNULL(A.TOT_CREDIT_AMT, 0)                      AS TOT_CREDIT_AMT
                         , ISNULL(A.CREDIT_AMT, 0)                          AS CREDIT_AMT
                         , ISNULL(A.CREDIT_YMD, '')                         AS CREDIT_YMD
                         , ISNULL(A.BUSI_PRSN, '')                          AS BUSI_PRSN
                         , ISNULL(A.COLLECTOR_CP,'')                        AS COLLECTOR_CP
                         , CASE M1.REF_ITEM
                                 WHEN '1' THEN B.CUSTOM_NAME1
                                 WHEN '2' THEN B.CUSTOM_NAME2
                                 ELSE A.CUSTOM_NAME
                                END                                             AS COLLECTOR_NM
                         , ISNULL(A.COLLECT_DAY, '')                        AS COLLECT_DAY
                         , ISNULL(A.COLLECT_CARE, '2')                      AS COLLECT_CARE
                         , ISNULL(A.REMARK, '')                             AS REMARK
                         , unilite.fnCipherDecrypt(A.TOP_NUM, 'R')          AS TOP_NUM
                         , ISNULL(A.CREDIT_OVER_YN, 'N')                    AS CREDIT_OVER_YN
                         , ISNULL(A.BILL_DIV_CODE, '')                      AS BILL_DIV_CODE
                         , ISNULL(A.SERVANT_COMPANY_NUM, '')                AS SERVANT_COMPANY_NUM
                      FROM           BCM100T A WITH (NOLOCK)
                           LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                            AND B.CUSTOM_CODE = A.BANK_CODE
                                                            AND B.CUSTOM_TYPE = '4'
                           LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                            AND C.MAIN_CODE   = N'B004'
                                                            AND C.SUB_CODE   != '$'
                                                            AND C.REF_CODE1   = 'Y'
                           LEFT JOIN BSA300T M1 WITH (NOLOCK) ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
                     WHERE A.COMP_CODE      = #{S_COMP_CODE}
                       AND A.CUSTOM_CODE    = #{CUSTOM_CODE}
                       AND A.USE_YN = 'Y'
                       AND A.CUSTOM_TYPE IN ('1','3','5')
                  ORDER BY    A.CUSTOM_CODE
	</select>

	<select id="spp100ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
        -- 견적마스터정보 조회
        --spp100ukrv.Cspp100ukrv[fnSpp100QStd] Query01
        SELECT ESTI_NUM
             , DIV_CODE
             , (CASE WHEN CUSTOM_CODE = '*'
                          THEN ''
                          ELSE CUSTOM_CODE
                 END) AS CUSTOM_CODE
             , (CASE WHEN CUSTOM_CODE = '*'
                          THEN CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(COMP_CODE, #{S_USER_ID}, CUSTOM_CODE)
                 END) AS CUSTOM_NAME
             , uniLITE.fnGetUserdate(COMP_CODE, ESTI_DATE) AS ESTI_DATE
             , MONEY_UNIT
             , EXCHANGE_RATE
             , CONFIRM_FLAG
             --, CONFIRM_FLAG
             , uniLITE.fnGetUserdate(COMP_CODE, CONFIRM_DATE) AS CONFIRM_DATE
             , ESTI_AMT
             , ESTI_CFM_AMT
             , ESTI_TAX_AMT
             , ESTI_PRSN
             , CUST_PRSN
             , ESTI_TITLE
             , ESTI_VALIDTERM
             , ESTI_PAYCONDI
             , ESTI_DVRY_DATE
             , ESTI_DVRY_PLCE
             , REMARK
             , PROFIT_RATE
             , ESTI_EX_AMT
             , ESTI_CFM_EX_PRICE
             , ESTI_CFM_TAX_AMT
             , ESTI_CFM_EX_AMT
             , COMP_CODE
          FROM SES100T WITH(NOLOCK)
          
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND ESTI_NUM  = #{ESTI_NUM}
           
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
         AND CASE WHEN CUSTOM_CODE = '*'
                          THEN ''
                          ELSE CUSTOM_CODE
                 END 		= #{CUSTOM_CODE}					/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
         AND CASE WHEN CUSTOM_CODE = '*'
                          THEN ''
                          ELSE CUSTOM_CODE
                 END		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
         AND CASE WHEN CUSTOM_CODE = '*'
                          THEN CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(COMP_CODE, #{S_USER_ID}, CUSTOM_CODE)
                 END 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
         </if>

           AND ESTI_DATE = #{ESTI_DATE}
    </select>

	<select id="spp100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
        --견적디테일정보 조회
        --spp100ukrv.Cspp100ukrv[fnSpp100QStd] Query02
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        SELECT A.ESTI_NUM
             , A.ESTI_SEQ
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE A.ITEM_CODE
                 END) AS ITEM_CODE
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN A.ITEM_NAME

                          ELSE A.ITEM_NAME
                 END) AS ITEM_NAME
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.SPEC
                 END) AS SPEC
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.STOCK_UNIT
                 END) AS STOCK_UNIT
             , A.ESTI_UNIT
             , A.TRANS_RATE
             , A.ESTI_QTY
             , A.ESTI_PRICE
             , A.ESTI_AMT
             , A.ESTI_CFM_PRICE
             , A.ESTI_CFM_AMT
             , A.TAX_TYPE
             , A.ESTI_TAX_AMT
             , A.PROFIT_RATE
             , A.ORDER_Q
             , '' AS REF_FLAG
             , A.ESTI_EX_AMT
             , A.ESTI_CFM_EX_AMT
             , A.ESTI_CFM_TAX_AMT
             , A.ESTI_CFM_EX_PRICE
             , C.CUSTOM_CODE
             , (CASE WHEN C.CUSTOM_CODE = '*'
                          THEN C.CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
                 END) AS CUSTOM_NAME
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , '' AS REF_NUM
             , '' AS REF_SEQ
             , C.ESTI_PRSN
             , (SELECT WH_CODE
                  FROM BPR200T
                 WHERE COMP_CODE = C.COMP_CODE
                   AND DIV_CODE  = C.DIV_CODE
                   AND ITEM_CODE = A.ITEM_CODE) AS WH_CODE
             , ISNULL(B.STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
             , (SELECT ITEM_ACCOUNT
                  FROM BPR200T
                 WHERE COMP_CODE = C.COMP_CODE
                   AND DIV_CODE  = C.DIV_CODE
                   AND ITEM_CODE = A.ITEM_CODE) AS ITEM_ACCOUNT
             , A.COMP_CODE
             --20200515 추가
             , D.WH_CODE
             , ISNULL(E.GOOD_STOCK_Q, 0)        AS STOCK_Q
             --20200519 추가
             , A.DIV_CODE
             , CASE WHEN (SELECT COUNT(1) FROM L_FAX100T WHERE REF_VAL_1 = A.ESTI_NUM) >= 1 THEN '전송' ELSE '미전송' END FAX_YN
             -- 20210721 비고 추가
             , A.REMARK
          FROM       SES110T  A WITH(NOLOCK)
          LEFT  JOIN BPR100T  B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                           AND A.ITEM_CODE = B.ITEM_CODE
          INNER JOIN SES100T  C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
                                            AND A.ESTI_NUM  = C.ESTI_NUM
          --20200515 추가: BPR200T, BIV150TV
          LEFT  JOIN BPR200T  D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                            AND D.DIV_CODE  = A.DIV_CODE
                                            AND D.ITEM_CODE = A.ITEM_CODE
          LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
                        FROM BIV150TV WITH(NOLOCK)
                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) E ON E.COMP_CODE = A.COMP_CODE
                                                                          AND E.DIV_CODE  = A.DIV_CODE
                                                                          AND E.ITEM_CODE = A.ITEM_CODE
                                                                          AND E.WH_CODE   = D.WH_CODE
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.ESTI_NUM  = #{ESTI_NUM}
         ORDER BY A.ESTI_NUM, A.ESTI_SEQ
    </select>

    <select id="spp100ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
        --견적내역마스터정보 조회
        --spp100ukrv.Cspp100ukrv[fnSpp100QPop] Query01
        SELECT (CASE WHEN B.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.ITEM_CODE
                 END) AS ITEM_CODE
             , (CASE WHEN B.ITEM_CODE = '*'
                          THEN B.ITEM_NAME
                          ELSE B.ITEM_NAME
                 END) AS ITEM_NAME
             , (CASE WHEN B.ITEM_CODE = '*'
                          THEN ''
                          ELSE C.SPEC
                 END) AS SPEC
             , uniLITE.fnGetUserdate(A.COMP_CODE, A.ESTI_DATE) AS ESTI_DATE
             , B.ESTI_QTY
             , A.ESTI_PRSN
             , B.ESTI_NUM
             , A.ESTI_TITLE
             , A.CONFIRM_FLAG
             , A.CUSTOM_CODE
             , (CASE WHEN A.CUSTOM_CODE = '*'
                          THEN A.CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE)
                 END) AS CUSTOM_NAME
             , A.DIV_CODE
             , A.ESTI_AMT
             , A.PROFIT_RATE
          FROM SES100T A WITH(NOLOCK)
             , SES110T B WITH(NOLOCK) LEFT OUTER JOIN BPR100T C WITH(NOLOCK)
                                                                 ON B.COMP_CODE = C.COMP_CODE
                                                                AND B.ITEM_CODE = C.ITEM_CODE
         WHERE A.COMP_CODE = B.COMP_CODE
           AND A.ESTI_NUM  = B.ESTI_NUM
           AND A.COMP_CODE      = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND A.DIV_CODE       = #{DIV_CODE}
         </if>
         
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
         AND A.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
         AND A.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
         AND A.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
         </if>
         
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
         AND B.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
         AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
         AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
         </if>

         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_FR)">
           AND A.ESTI_DATE     &gt;= #{ESTI_DATE_FR}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_TO)">
           AND A.ESTI_DATE     &lt;= #{ESTI_DATE_TO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
           AND A.ESTI_PRSN      = #{ESTI_PRSN}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_TITLE)">
           AND A.ESTI_TITLE  LIKE #{ESTI_TITLE} + '%'
         </if>
         <if test="@foren.Ognl@isNotEmpty(CONFIRM_FLAG)">
           AND A.CONFIRM_FLAG = #{CONFIRM_FLAG}
         </if>
         ORDER BY A.ESTI_NUM
    </select>

    <select id="spp100ukrvServiceImpl.selectList4" parameterType="Map" resultType="rMap">
        --견적내역디테일정보 조회
        --spp100ukrv.Cspp100ukrv[fnSpp100QPop] Query01
        SELECT (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE A.ITEM_CODE
                 END) AS ITEM_CODE
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN A.ITEM_NAME
                          ELSE A.ITEM_NAME
                 END) AS ITEM_NAME
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.SPEC
                 END) AS SPEC
             , uniLITE.fnGetUserdate(A.COMP_CODE, C.ESTI_DATE) AS ESTI_DATE
             , A.ESTI_QTY
             , C.ESTI_PRSN
             , A.ESTI_NUM
             , C.ESTI_TITLE
             , C.CONFIRM_FLAG
             , C.CUSTOM_CODE
             , (CASE WHEN C.CUSTOM_CODE = '*'
                          THEN C.CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
                 END) AS CUSTOM_NAME
             , A.DIV_CODE
          FROM            SES110T A WITH(NOLOCK)
          LEFT OUTER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                AND A.ITEM_CODE = B.ITEM_CODE
             , SES100T C WITH(NOLOCK)
         WHERE C.COMP_CODE = A.COMP_CODE
           AND C.ESTI_NUM  = A.ESTI_NUM
           AND A.COMP_CODE      = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND A.DIV_CODE       = #{DIV_CODE}
         </if>
         
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
         AND C.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
         AND C.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
         AND C.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
         </if>
         
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
         AND A.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
         AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
         AND A.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
         </if>
         
         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_FR)">
           AND C.ESTI_DATE     &gt;= #{ESTI_DATE_FR}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_TO)">
           AND C.ESTI_DATE     &lt;= #{ESTI_DATE_TO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_PRSN)">
           AND C.ESTI_PRSN      = #{ESTI_PRSN}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_TITLE)">
           AND C.ESTI_TITLE  LIKE #{ESTI_TITLE} + '%'
         </if>
         <if test="@foren.Ognl@isNotEmpty(CONFIRM_FLAG)">
           AND C.CONFIRM_FLAG = #{CONFIRM_FLAG}
         </if>
         ORDER BY C.ESTI_NUM
    </select>

    <select id="spp100ukrvServiceImpl.selectList3" parameterType="Map" resultType="rMap">
        -- 견적디테일정보 조회
        --spp100ukrv.Cspp100ukrv[fnSpp100QRef] Query01
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        SELECT CAST(0 AS BIT) AS CHOICE
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE A.ITEM_CODE
                 END) AS ITEM_CODE
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN A.ITEM_NAME
                          ELSE uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)
                 END) AS ITEM_NAME
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN  ''
                          ELSE B.SPEC
                 END) AS SPEC
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.STOCK_UNIT
                 END) AS STOCK_UNIT
             , A.ESTI_UNIT
             , A.TRANS_RATE
             , A.ESTI_QTY
             , C.CUSTOM_CODE
             , (CASE WHEN C.CUSTOM_CODE = '*'
                          THEN C.CUSTOM_NAME
                          ELSE uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
                 END) AS CUSTOM_NAME
             , uniLITE.fnGetUserdate(A.COMP_CODE, C.ESTI_DATE) AS ESTI_DATE
             , A.ESTI_NUM
             , A.ESTI_SEQ
             , A.ESTI_CFM_PRICE
             , A.ESTI_PRICE
             , A.ESTI_AMT
             , A.ESTI_CFM_AMT
             , A.ESTI_TAX_AMT
             , A.TAX_TYPE
             , A.PROFIT_RATE
             , C.ESTI_PRSN
             , 0 AS ORDER_Q
             , '' REF_FLAG
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.ITEM_LEVEL1
                 END) AS ITEM_LEVEL1
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.ITEM_LEVEL2
                 END) AS ITEM_LEVEL2
             , (CASE WHEN A.ITEM_CODE = '*'
                          THEN ''
                          ELSE B.ITEM_LEVEL3
                 END) AS ITEM_LEVEL3
             , A.ESTI_EX_AMT
             , A.ESTI_CFM_EX_PRICE
             , A.ESTI_CFM_EX_AMT
             , A.ESTI_CFM_TAX_AMT
             , (SELECT CODE_NAME
                  FROM BSA100T
                 WHERE COMP_CODE = C.COMP_CODE
                   AND MAIN_CODE = 'S018'
                   AND SUB_CODE  = C.CONFIRM_FLAG) AS CONFIRM_FLAG
             , A.ESTI_NUM + CAST(A.ESTI_SEQ AS VARCHAR(8)) AS SORT
             , (SELECT ITEM_ACCOUNT
                  FROM BPR200T WITH(NOLOCK)
                 WHERE COMP_CODE = C.COMP_CODE
                   AND DIV_CODE  = C.DIV_CODE
                   AND ITEM_CODE = A.ITEM_CODE) AS ITEM_ACCOUNT
             --20200515 추가
             , D.WH_CODE
             , ISNULL(E.GOOD_STOCK_Q, 0)        AS STOCK_Q
          FROM SES110T A WITH(NOLOCK)
          LEFT OUTER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                AND A.ITEM_CODE = B.ITEM_CODE
          --20200515 추가: BPR200T, BIV150TV
          LEFT  JOIN BPR200T  D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                            AND D.DIV_CODE  = A.DIV_CODE
                                            AND D.ITEM_CODE = A.ITEM_CODE
          LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
                        FROM BIV150TV WITH(NOLOCK)
                       GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) E ON E.COMP_CODE = A.COMP_CODE
                                                                          AND E.DIV_CODE  = A.DIV_CODE
                                                                          AND E.ITEM_CODE = A.ITEM_CODE
                                                                          AND E.WH_CODE   = D.WH_CODE
             , SES100T C WITH(NOLOCK)
         WHERE A.COMP_CODE = C.COMP_CODE
           AND A.ESTI_NUM  = C.ESTI_NUM
         <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
           AND B.ITEM_LEVEL1    = #{ITEM_LEVEL1}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
           AND B.ITEM_LEVEL2    = #{ITEM_LEVEL2}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
           AND B.ITEM_LEVEL3    = #{ITEM_LEVEL3}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_FR)">
           AND C.ESTI_DATE     &gt;= #{ESTI_DATE_FR}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_DATE_TO)">
           AND C.ESTI_DATE     &lt;= #{ESTI_DATE_TO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
         </if>
         <if test="@foren.Ognl@isNotEmpty(TXT_INOUT_PRSN)">
           AND C.ESTI_PRSN    = #{TXT_INOUT_PRSN}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ESTI_TITLE)">
           AND C.ESTI_TITLE  LIKE #{ESTI_TITLE} + '%'
         </if>
           AND C.COMP_CODE      = #{S_COMP_CODE}
           
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
         AND A.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
         AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
         AND A.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
         </if>
           
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
         AND C.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
         AND C.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
         AND C.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
         </if>
         ORDER BY A.ESTI_NUM, A.ESTI_SEQ
    </select>

    <select id="spp100ukrvServiceImpl.selectEstiNum" parameterType="Map" resultType="rMap">         /* 견적확정/진행버튼 눌렀을때 */
        --spp100ukrv.Cspp100ukrv[fnSpp100SCfm] Query01
        SELECT ESTI_NUM
          FROM SES100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND ESTI_NUM  = #{ESTI_NUM}
    </select>

    <update id="spp100ukrvServiceImpl.confirmDataList" parameterType="Map">                         /* 견적확정버튼 눌렀을때 */
        --spp100ukrv.Cspp100ukrv[fnSpp100SCfm] Query02
        UPDATE SES100T
           SET CONFIRM_FLAG = '2'
             , CONFIRM_DATE = #{CONFIRM_DATE}
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND ESTI_NUM     = #{ESTI_NUM}
    </update>

    <select id="spp100ukrvServiceImpl.selectOrderQ" parameterType="Map" resultType="rMap">         /* 견적진행버튼 눌렀을때1 */
        --spp100ukrv.Cspp100ukrv[fnSpp100SCfm] Query03
        SELECT SUM(ISNULL(ORDER_Q,0)) AS ORDER_Q
          FROM SES110T WITH(NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND ESTI_NUM  = #{ESTI_NUM}
    </select>

    <update id="spp100ukrvServiceImpl.cancleDataList" parameterType="Map">                         /* 견적진행버튼 눌렀을때2 */
        --spp100ukrv.Cspp100ukrv[fnSpp100SCfm] Query04
        UPDATE SES100T
           SET CONFIRM_FLAG = '1'
             , CONFIRM_DATE = #{CONFIRM_DATE}
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND ESTI_NUM     = #{ESTI_NUM}
    </update>

    <select id="spp100ukrvServiceImpl.selectConfirmFlag" parameterType="Map" resultType="rMap">     /* 버튼 눌렀을때 CONFIRM_FLAG확인 */
        --spp100ukrv.Cspp100ukrv[fnSpp100SCfm] Query05
        SELECT CONFIRM_FLAG
          FROM SES100T WITH(NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND ESTI_NUM  = #{ESTI_NUM}
    </select>

    <update id="spp100ukrvServiceImpl.update" parameterType="foren.unilite.modules.sales.spp.Spp100ukrvModel">
        --spp100ukrv.Cspp100ukrv[fnSpp100Save] Query02
        UPDATE SES100T
           SET CUSTOM_CODE      = #{CUSTOM_CODE}
             , CUSTOM_NAME      = #{CUSTOM_NAME}
             , ESTI_DATE        = #{ESTI_DATE}
             , MONEY_UNIT       = #{MONEY_UNIT}
             , EXCHANGE_RATE    = #{EXCHANGE_RATE}
             , CONFIRM_FLAG     = #{CONFIRM_FLAG}
             , CONFIRM_DATE     = #{CONFIRM_DATE}
             , ESTI_AMT         = #{ESTI_AMT}
             , ESTI_CFM_AMT     = #{ESTI_CFM_AMT}
             , ESTI_TAX_AMT     = #{ESTI_TAX_AMT}
             , ESTI_PRSN        = #{ESTI_PRSN}
             , CUST_PRSN        = #{CUST_PRSN}
             , ESTI_TITLE       = #{ESTI_TITLE}
             , ESTI_VALIDTERM   = #{ESTI_VALIDTERM}
             , ESTI_PAYCONDI    = #{ESTI_PAYCONDI}
             , ESTI_DVRY_DATE   = #{ESTI_DVRY_DATE}
             , ESTI_DVRY_PLCE   = #{ESTI_DVRY_PLCE}
             , REMARK           = #{REMARK}
             , PROFIT_RATE      = #{PROFIT_RATE}
             , ESTI_EX_AMT      = #{ESTI_EX_AMT}
             , ESTI_CFM_EX_PRICE = #{ESTI_CFM_EX_PRICE}
             , ESTI_CFM_TAX_AMT = #{ESTI_CFM_TAX_AMT}
             , ESTI_CFM_EX_AMT  = #{ESTI_CFM_EX_AMT}
             , DIV_CODE         = (SELECT REF_CODE1
                                     FROM BSA100T
                                    WHERE MAIN_CODE = 'S010'
                                      AND SUB_CODE  = #{ESTI_PRSN}
                                      AND COMP_CODE = #{S_COMP_CODE})
             , COMP_CODE        = #{COMP_CODE}

         WHERE ESTI_NUM         = #{ESTI_NUM}

    </update>

	<select id="spp100ukrvServiceImpl.autoNum" parameterType="Map" resultType="rMap">
        DECLARE     @AUTO_NUM      NVARCHAR(20),
                    @REGDATE       NVARCHAR(8)
        SET @REGDATE = CONVERT(NVARCHAR(8), GETDATE(), 112)
        EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'SES100T', 'S', @REGDATE, '', @AUTO_NUM OUTPUT
        SELECT  @AUTO_NUM AS ESTI_NUM
    </select>

    <insert id="spp100ukrvServiceImpl.insertMaster" parameterType="Map">
        /*spp100ukrvServiceImpl.insertMaster*/
        INSERT INTO SES100T
           (COMP_CODE
            , DIV_CODE
			, ESTI_NUM
			, CUSTOM_CODE
			, CUSTOM_NAME
			, ESTI_DATE
			, MONEY_UNIT
			, EXCHANGE_RATE

			, CONFIRM_FLAG
			, CONFIRM_DATE
			, ESTI_AMT
			, ESTI_CFM_AMT
			, ESTI_TAX_AMT
			, ESTI_EX_AMT
			, ESTI_CFM_EX_PRICE
			, ESTI_CFM_TAX_AMT
			, ESTI_CFM_EX_AMT
			, ESTI_PRSN
			, CUST_PRSN
			, ESTI_TITLE
			, ESTI_VALIDTERM
			, ESTI_PAYCONDI
			, ESTI_DVRY_DATE
			, ESTI_DVRY_PLCE
			, REMARK
			, PROFIT_RATE
			, UPDATE_DB_USER
			, UPDATE_DB_TIME
			, INSERT_DB_USER
			, INSERT_DB_TIME
           )
     VALUES
           (  #{S_COMP_CODE}
            , (SELECT REF_CODE1
                 FROM BSA100T
                WHERE MAIN_CODE = 'S010'
                  AND SUB_CODE  = #{ESTI_PRSN}
                  AND COMP_CODE = #{S_COMP_CODE})
			, #{ESTI_NUM}
			, #{CUSTOM_CODE}
			, #{CUSTOM_NAME}
			, #{ESTI_DATE}
			, #{MONEY_UNIT}
			, #{EXCHANGE_RATE}
			, #{CONFIRM_FLAG}
			, #{CONFIRM_DATE}
			, #{ESTI_AMT}
			, #{ESTI_CFM_AMT}
			, #{ESTI_TAX_AMT}
			, #{ESTI_EX_AMT}
			, #{ESTI_CFM_EX_PRICE}
			, #{ESTI_CFM_TAX_AMT}
			, #{ESTI_CFM_EX_AMT}
			, #{ESTI_PRSN}
			, #{CUST_PRSN}
			, #{ESTI_TITLE}
			, #{ESTI_VALIDTERM}
			, #{ESTI_PAYCONDI}
			, #{ESTI_DVRY_DATE}
			, #{ESTI_DVRY_PLCE}
			, #{REMARK}
			, #{PROFIT_RATE}
            , #{S_USER_ID}
            , GETDATE()
            , #{S_USER_ID}
            , GETDATE())
    </insert>

    <update id="spp100ukrvServiceImpl.updateMaster" parameterType="Map">
		UPDATE SES100T
		   SET ESTI_TITLE		= #{ESTI_TITLE}
			 , CUST_PRSN	    = #{CUST_PRSN}
			 , ESTI_PAYCONDI	= #{ESTI_PAYCONDI}
			 , CONFIRM_DATE		= #{CONFIRM_DATE}
			 , ESTI_VALIDTERM	= #{ESTI_VALIDTERM}
			 , ESTI_DVRY_DATE	= #{ESTI_DVRY_DATE}
			 , ESTI_DVRY_PLCE	= #{ESTI_DVRY_PLCE}
			 , REMARK		    = #{REMARK}
			 , DIV_CODE         = (SELECT REF_CODE1
                                     FROM BSA100T
                                    WHERE MAIN_CODE = 'S010'
                                      AND SUB_CODE  = #{ESTI_PRSN}
                                      AND COMP_CODE = #{S_COMP_CODE})
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()

		 WHERE COMP_CODE	    = #{S_COMP_CODE}
		   AND ESTI_NUM		    = #{ESTI_NUM}
	</update>

<!-- 아직 사용 안 함, 추후 전체삭제버튼 추가 시 사용 -->
	<delete id="spp100ukrvServiceImpl.deleteMaster" parameterType="Map">
		DELETE SES110T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}

		DELETE SES100T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
	</delete>

    <select id="spp100ukrvServiceImpl.checkEstiSeqNo" parameterType="Map" resultType="rMap">
        SELECT ESTI_SEQ
          FROM SES110T WITH(NOLOCK)
         WHERE ESTI_NUM  = #{ESTI_NUM}
           AND ESTI_SEQ  = #{ESTI_SEQ}
           AND COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
    </select>

	<select id="spp100ukrvServiceImpl.autoEstiSeqNo" parameterType="Map" resultType="rMap">
        SELECT ISNULL(MAX(ESTI_SEQ),0) + 1 AS ESTI_SEQ
          FROM SES110T WITH(NOLOCK)
         WHERE ESTI_NUM  = #{ESTI_NUM}
           AND COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
    </select>

    <!--
    <insert id="spp100ukrvServiceImpl.insertLogDetail" parameterType="Map">
        /*sof110ukrvServiceImpl.insertLogDetail*/
        INSERT INTO L_SES110T
             ( KEY_VALUE
               , OPR_FLAG
               , COMP_CODE
               , ESTI_NUM
               , ESTI_SEQ
               , ITEM_CODE
               , ITEM_NAME
               , ESTI_UNIT
               , TRANS_RATE
               , ESTI_QTY
               , ESTI_PRICE
               , ESTI_AMT
               , ESTI_CFM_PRICE
               , ESTI_CFM_AMT
               , ESTI_TAX_AMT
               , ESTI_EX_AMT
               , ESTI_CFM_EX_AMT
               , ESTI_CFM_TAX_AMT
               , TAX_TYPE
               , PROFIT_RATE
               , ORDER_Q
               , UPDATE_DB_USER
               , UPDATE_DB_TIME
               , INSERT_DB_USER
               , INSERT_DB_TIME
  )
        VALUES
             ( #{KEY_VALUE}
               , #{OPR_FLAG}
               , #{S_COMP_CODE}
               , #{ESTI_NUM}
               , #{ESTI_SEQ}
               , #{ITEM_CODE}
               , #{ITEM_NAME}
               , #{ESTI_UNIT}
               , #{TRANS_RATE}
               , #{ESTI_QTY}
               , #{ESTI_PRICE}
               , #{ESTI_AMT}
               , #{ESTI_CFM_PRICE}
               , #{ESTI_CFM_AMT}
               , #{ESTI_TAX_AMT}
               , #{ESTI_EX_AMT}
               , #{ESTI_CFM_EX_AMT}
               , #{ESTI_CFM_TAX_AMT}
               , #{TAX_TYPE}
               , #{PROFIT_RATE}
               , #{ORDER_Q}
              , #{S_USER_ID}
              , GETDATE()
              , #{S_USER_ID}
              , GETDATE())
    </insert>
    -->
      <!-- detail data insert/update/delete -->
	<insert id="spp100ukrvServiceImpl.insertList" parameterType="Map" useGeneratedKeys="false">
		INSERT INTO SES110T
			(
			   COMP_CODE
			 , DIV_CODE
             , ESTI_NUM
             , ESTI_SEQ
             , ITEM_CODE
             , ITEM_NAME
             , ESTI_UNIT
             , TRANS_RATE
             , ESTI_QTY
             , ESTI_PRICE
             , ESTI_AMT
             , TAX_TYPE
             , ESTI_TAX_AMT
             , ESTI_CFM_PRICE
             , ESTI_CFM_AMT
             , ESTI_EX_AMT
             , ESTI_CFM_EX_PRICE
             , ESTI_CFM_EX_AMT
             , ESTI_CFM_TAX_AMT
             , PROFIT_RATE
             , ORDER_Q
             , REMARK
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , INSERT_DB_USER
			 , INSERT_DB_TIME
		)
		VALUES (
			   #{S_COMP_CODE}
			 , #{S_DIV_CODE}
             , #{ESTI_NUM}
             , #{ESTI_SEQ}
             , #{ITEM_CODE}
             , #{ITEM_NAME}
             , #{ESTI_UNIT}
             , #{TRANS_RATE}
             , #{ESTI_QTY}
             , #{ESTI_PRICE}
             , #{ESTI_AMT}
             , #{TAX_TYPE}
             , #{ESTI_TAX_AMT}
             , #{ESTI_CFM_PRICE}
             , #{ESTI_CFM_AMT}
             , #{ESTI_EX_AMT}
             , #{ESTI_CFM_EX_PRICE}
             , #{ESTI_CFM_EX_AMT}
             , #{ESTI_CFM_TAX_AMT}
             , #{PROFIT_RATE}
             , #{ORDER_Q}
             , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</insert>

	<update id="spp100ukrvServiceImpl.updateList" parameterType="Map">
		UPDATE SES110T
		   SET  ITEM_CODE        = #{ITEM_CODE}
        	  , ITEM_NAME        = #{ITEM_NAME}
        	  , ESTI_UNIT        = #{ESTI_UNIT}
        	  , TRANS_RATE       = #{TRANS_RATE}
        	  , ESTI_QTY         = #{ESTI_QTY}
        	  , ESTI_PRICE       = #{ESTI_PRICE}
        	  , ESTI_AMT         = #{ESTI_AMT}
        	  , TAX_TYPE         = #{TAX_TYPE}
        	  , ESTI_TAX_AMT     = #{ESTI_TAX_AMT}
        	  , ESTI_CFM_EX_PRICE = #{ESTI_CFM_EX_PRICE}
        	  , ESTI_CFM_PRICE   = #{ESTI_CFM_PRICE}
        	  , ESTI_CFM_AMT     = #{ESTI_CFM_AMT}
        	  , ESTI_EX_AMT      = #{ESTI_EX_AMT}
        	  , ESTI_CFM_EX_AMT  = #{ESTI_CFM_EX_AMT}
        	  , ESTI_CFM_TAX_AMT = #{ESTI_CFM_TAX_AMT}
        	  , PROFIT_RATE      = #{PROFIT_RATE}
              , ORDER_Q          = #{ORDER_Q}
              , REMARK			 = #{REMARK}
        	  , UPDATE_DB_USER	 = #{S_USER_ID}
        	  , UPDATE_DB_TIME	 = GETDATE()

        WHERE COMP_CODE	= #{S_COMP_CODE}
          AND DIV_CODE  = #{S_DIV_CODE}
          AND ESTI_NUM	= #{ESTI_NUM}
          AND ESTI_SEQ  = #{ESTI_SEQ}
	</update>

    <delete id="spp100ukrvServiceImpl.deleteList" parameterType="Map">
		DELETE SES110T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{S_DIV_CODE}
		   AND ESTI_NUM		= #{ESTI_NUM}
		   AND ESTI_SEQ		= #{ESTI_SEQ}


		/* detail data가 모두 삭제되면, master data도 삭제 */
		IF NOT EXISTS ( SELECT TOP 1 1
						  FROM SES110T WITH(NOLOCK)
						 WHERE COMP_CODE	= #{S_COMP_CODE}
						   AND DIV_CODE		= #{S_DIV_CODE}
						   AND ESTI_NUM		= #{ESTI_NUM}
						)
		BEGIN
			DELETE SES100T
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND ESTI_NUM		= #{ESTI_NUM}
		END
	</delete>

	<select id="spp100ukrvServiceImpl.printList" parameterType="Map" resultType="rMap">
        /*spp100ukrvServiceImpl.printList*/
        BEGIN
            DECLARE   @PRINT_USER          NVARCHAR(100)            --(선택) 출력자
                    , @VIEW_PRINT_INFO_YN  NVARCHAR(01)             --인쇄출력정보 여부


            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT @PRINT_USER = USER_NAME
                    FROM BSA300T WITH(NOLOCK)
                    WHERE COMP_CODE = #{S_COMP_CODE}
                    AND USER_ID = #{S_USER_ID}

            SELECT @VIEW_PRINT_INFO_YN = SUB_CODE
                FROM BSA100T WITH(NOLOCK)
                WHERE COMP_CODE = #{S_COMP_CODE}
                AND MAIN_CODE = 'B249'
                AND SUB_CODE != '$'
                AND REF_CODE1 = 'Y'

            SELECT A.COMP_CODE
                 , A.CUSTOM_ITEM_CODE
                 , A.CUSTOM_ITEM_NAME
                 , A.CUSTOM_ITEM_SPEC
                 , A.ESTI_NUM
                 , A.ESTI_SEQ
                 , A.ESTI_DEG
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE A.ITEM_CODE
                    END)                                        AS ITEM_CODE
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN A.ITEM_NAME
                              ELSE A.ITEM_NAME
                    END)                                        AS ITEM_NAME
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE B.SPEC
                    END)                                        AS SPEC
                 , (CASE WHEN A.ITEM_CODE = '*'
                              THEN ''
                              ELSE B.STOCK_UNIT
                    END)                                        AS STOCK_UNIT
                 , A.ESTI_UNIT
                 , A.TRANS_RATE
                 , A.ESTI_QTY
                 , A.ESTI_PRICE
                 , A.ESTI_AMT
                 , A.ESTI_CFM_PRICE
                 , A.ESTI_CFM_AMT
                 , A.ESTI_TAX_AMT
                 , ISNULL(A.ESTI_CFM_AMT, 0) + ISNULL(A.ESTI_TAX_AMT, 0)        AS ESTI_CFM_AMT_TOT
                 , A.TAX_TYPE
                 , D.TAX_TYPE                                   AS TAX_CALC_TYPE
                 , A.PROFIT_RATE
                 , A.ORDER_Q
                 , '' AS REF_FLAG
                 , A.ESTI_EX_AMT
                 , A.ESTI_CFM_EX_AMT
                 , C.CUSTOM_CODE
                 , (CASE WHEN C.CUSTOM_CODE = '*'
                              THEN C.CUSTOM_NAME
                              ELSE uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)
                     END) AS CUSTOM_NAME
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , ''                                           AS REF_NUM
                 , ''                                           AS REF_SEQ
                 , C.ESTI_PRSN
                 , (SELECT WH_CODE
                      FROM BPR200T
                     WHERE COMP_CODE = C.COMP_CODE
                       AND DIV_CODE  = C.DIV_CODE
                       AND ITEM_CODE = A.ITEM_CODE)             AS WH_CODE
                 , ISNULL(B.STOCK_CARE_YN, 'Y')                 AS STOCK_CARE_YN
                 , (SELECT ITEM_ACCOUNT
                      FROM BPR200T
                     WHERE COMP_CODE = C.COMP_CODE
                       AND DIV_CODE  = C.DIV_CODE
                       AND ITEM_CODE = A.ITEM_CODE)             AS ITEM_ACCOUNT
                /* master 정보 */
                 , C.DIV_CODE
                 , C.ESTI_DATE
                 , C.ESTI_TITLE
                 , C.CONFIRM_FLAG
                 , C.CONFIRM_DATE
                 , C.REMARK
                 , C.ESTI_AMT                                   AS TOT_ESTI_AMT
                 , C.ESTI_CFM_AMT                               AS TOT_ESTI_CFM_AMT
                 , C.PROFIT_RATE                                AS TOT_PROFIT_RATE
                 , E.DIV_CODE    AS MY_CUSTOM_CODE      --사업장코드
                 , E.DIV_NAME    AS MY_CUSTOM_NAME      --상호
                 , E.REPRE_NAME  AS MY_TOP_NAME         --대표자
                 , E.COMP_TYPE                      --업태
                 , E.COMP_CLASS                     --종목
                 , CASE ISNULL(E.COMPANY_NUM,'')
                    WHEN '' THEN ''
                    ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
                                + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
                                + SUBSTRING(E.COMPANY_NUM,6,5)
                 END          AS MY_COMPANY_NUM         --등록번호
                 , E.ZIP_CODE    AS MY_ZIP_CODE          --우편번호
                 , E.ADDR AS  MY_ADDR              --주소
                 , E.TELEPHON                           --전화번호
                 , E.FAX_NUM                                --팩스
                 , X.ESTI_QTY                       AS  ESTI_QTY_AMT
                 , X.ESTI_CFM_PRICE                 AS  ESTI_CFM_PRICE_AMT
                 , X.ESTI_CFM_AMT                   AS  ESTI_CFM_TOT_AMT
                 , X.ESTI_TAX_AMT                   AS  ESTI_TAX_TOT_AMT
                 , ISNULL(X.ESTI_CFM_AMT, 0) + ISNULL(X.ESTI_TAX_AMT, 0)          AS  ESTI_TOT_AMT
                 , REPLACE(unilite.fnConvertToAmt(ISNULL(X.ESTI_CFM_AMT, 0) + ISNULL(X.ESTI_TAX_AMT, 0)), ' ','') + '원정'    AS ESTI_TOT_AMT_KO

                 , @PRINT_USER           AS PRINT_USER                   --출력자 이름
                 , @VIEW_PRINT_INFO_YN   AS VIEW_PRINT_INFO_YN           --인쇄출력정보 표시여부

              FROM       SES110T A WITH(NOLOCK)
              LEFT JOIN  BPR100T B WITH(NOLOCK)
                                     ON A.COMP_CODE = B.COMP_CODE
                                    AND A.ITEM_CODE = B.ITEM_CODE
              INNER JOIN SES100T C WITH(NOLOCK)
                                     ON A.COMP_CODE = C.COMP_CODE
                                    AND A.ESTI_NUM  = C.ESTI_NUM
              INNER JOIN BCM100T D WITH(NOLOCK)
                                     ON D.COMP_CODE    = C.COMP_CODE
                                    AND D.CUSTOM_CODE  = C.CUSTOM_CODE
              INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                AND E.DIV_CODE    = A.DIV_CODE
              LEFT  JOIN ( SELECT SUM(A.ESTI_QTY)           AS ESTI_QTY
                                , SUM(A.ESTI_CFM_PRICE)     AS ESTI_CFM_PRICE
                                , SUM(A.ESTI_CFM_AMT)       AS ESTI_CFM_AMT
                                , SUM(A.ESTI_TAX_AMT)       AS ESTI_TAX_AMT
                                , A.COMP_CODE
                                , A.DIV_CODE
                                , A.ESTI_NUM
                           FROM SES110T A WITH(NOLOCK)
                          WHERE A.COMP_CODE = #{S_COMP_CODE}
                            AND A.DIV_CODE = #{S_DIV_CODE}
                            AND A.ESTI_NUM = #{ESTI_NUM}
                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ESTI_NUM
            ) X ON X.COMP_CODE = A.COMP_CODE
               AND X.DIV_CODE = A.DIV_CODE
               AND X.ESTI_NUM = A.ESTI_NUM

             WHERE A.COMP_CODE      = #{S_COMP_CODE}
               AND C.ESTI_NUM       = #{ESTI_NUM}

             ORDER BY A.ESTI_NUM, A.ESTI_SEQ


        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
    </select>
	<select id="spp100ukrvServiceImpl.mainReport" parameterType="Map" resultType="rMap">
       SELECT	--거래처정보
	      A.ESTI_NUM                    --견적번호(일련번호)
	    , A.ESTI_VALIDTERM  --견적유효기간
	    , A.ESTI_PAYCONDI --결제조건
	    , M1.CUSTOM_FULL_NAME            --회사명(외부용)
	    , M1.TELEPHON                    --TEL
		, M1.FAX_NUM                     --FAX
		--, M1.REMARK
		--회사정보(사업장정보)
		, M2.COMPANY_NUM --사업자번호
		, M2.DIV_FULL_NAME               --사업장전명(외부용)
		, M2.REPRE_NAME                  --대표자명
		, M2.ADDR                        --주소
		, M3.CODE_NAME AS ESTI_PRSN_NAME --담당자
		, M2.COMP_TYPE                   --업태
		, M2.COMP_CLASS                  --업종
		, M2.TELEPHON AS BORTEL--TEL
		, M2.FAX_NUM  AS BORFAX--FAX
		--상세정보
		, B.ITEM_CODE    --품목코드
		, B.ITEM_NAME    --품목명
		, B.ESTI_UNIT    --견적단위
		, B.TRANS_RATE   --입수
		, B.ESTI_QTY     --수량
		, B.ESTI_CFM_PRICE   --단가
		, B.ESTI_CFM_AMT     --공급가액
		, B.ESTI_TAX_AMT --부가세
		-- 20210721 비고 컬럼 추가
		, B.REMARK		 --비고
	  /*srp100rkrv 출력물 merge로 인한 추가 컬럼*/
		, A.CUST_PRSN
		, A.ESTI_TITLE
		, (SUBSTRING(A.ESTI_DATE, 1, 4) + CONVERT(NVARCHAR(10),N'년') +
		       SUBSTRING(A.ESTI_DATE, 5, 2) + CONVERT(NVARCHAR(10),N'월') +
		       SUBSTRING(A.ESTI_DATE, 7, 2) + CONVERT(NVARCHAR(10),N'일') ) AS ESTI_DATE
	    , F.COMP_NAME
		, F.COMP_ENG_NAME
		, F.REPRE_NAME AS REPRE_NAME1
		 , (CASE WHEN A.CUSTOM_CODE = '*'
		                  THEN A.CUSTOM_NAME
		                  ELSE (SELECT CUSTOM_FULL_NAME
		                          FROM BCM100T
		                         WHERE CUSTOM_CODE = A.CUSTOM_CODE
		                           AND COMP_CODE= 'MASTER'        )

		         END) AS CUSTOM_NAME
		 , B.ESTI_CFM_AMT + B.ESTI_TAX_AMT AS TOT_Q
		 , A.REMARK AS REMARK2
FROM	SES100T A WITH(NOLOCK)
		INNER JOIN SES110T  B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		                                  AND  A.DIV_CODE =  B.DIV_CODE
					                      AND  A.ESTI_NUM =  B.ESTI_NUM
		LEFT  JOIN BCM100T M1 WITH(NOLOCK) ON A.COMP_CODE=M1.COMP_CODE
		                                  AND A.CUSTOM_CODE=M1.CUSTOM_CODE	--거래처정보
		LEFT  JOIN BOR120T M2 WITH(NOLOCK) ON A.COMP_CODE=M2.COMP_CODE
		                                  AND A.DIV_CODE=M2.DIV_CODE	    --회사정보
		LEFT  JOIN BSA100T M3 WITH(NOLOCK) ON A.COMP_CODE=M3.COMP_CODE
		                                  AND A.ESTI_PRSN=M3.SUB_CODE
										  AND M3.MAIN_CODE='S010'	        --담당자
		LEFT JOIN BOR100T F  WITH(NOLOCK)
									ON A.COMP_CODE  = F.COMP_CODE
WHERE	A.COMP_CODE = #{S_COMP_CODE}
AND		A.DIV_CODE=#{S_DIV_CODE}
AND		A.ESTI_NUM LIKE #{ESTI_NUM} + '%'
    </select>
</mapper>