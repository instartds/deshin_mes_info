<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sgp101ukrvService">
	
	<select id="sgp101ukrvService.selectList" parameterType="Map" resultType="rMap">
		/* gp100ukrv.Csgp101ukrv[fnSgp101QStd] Query5 */ 
			SELECT    A.DIV_CODE 
		     , A.PLAN_YEAR
		     , A.PLAN_TYPE1
		     , A.PLAN_TYPE2
		     , A.PLAN_TYPE2_CODE
		     , A.LEVEL_KIND
		     , A.MONEY_UNIT
		     , A.ENT_MONEY_UNIT
		     , A.CONFIRM_YN
		     , B.TREE_CODE AS S_CODE
			 , B.TREE_NAME AS S_NAME    
		     , (A.PLAN_AMT1+A.PLAN_AMT2+A.PLAN_AMT3+A.PLAN_AMT4+A.PLAN_AMT5+A.PLAN_AMT6+A.PLAN_AMT7+A.PLAN_AMT8+A.PLAN_AMT9+A.PLAN_AMT10+A.PLAN_AMT11+A.PLAN_AMT12) AS PLAN_SUM 
		     , (A.MOD_PLAN_AMT1+A.MOD_PLAN_AMT2+A.MOD_PLAN_AMT3+A.MOD_PLAN_AMT4+A.MOD_PLAN_AMT5+A.MOD_PLAN_AMT6+A.MOD_PLAN_AMT7+A.MOD_PLAN_AMT8+A.MOD_PLAN_AMT9+A.MOD_PLAN_AMT10+A.MOD_PLAN_AMT11+A.MOD_PLAN_AMT12) AS MOD_PLAN_SUM 
		        
		,CASE ISNULL(A.MOD_PLAN_AMT1+A.MOD_PLAN_AMT2+A.MOD_PLAN_AMT3+A.MOD_PLAN_AMT4+A.MOD_PLAN_AMT5+A.MOD_PLAN_AMT6+A.MOD_PLAN_AMT7+A.MOD_PLAN_AMT8+A.MOD_PLAN_AMT9+A.MOD_PLAN_AMT10+A.MOD_PLAN_AMT11+A.MOD_PLAN_AMT12, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT1+A.PLAN_AMT2+A.PLAN_AMT3+A.PLAN_AMT4+A.PLAN_AMT5+A.PLAN_AMT6+A.PLAN_AMT7+A.PLAN_AMT8+A.PLAN_AMT9+A.PLAN_AMT10+A.PLAN_AMT11+A.PLAN_AMT12, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ((A.MOD_PLAN_AMT1+A.MOD_PLAN_AMT2+A.MOD_PLAN_AMT3+A.MOD_PLAN_AMT4+A.MOD_PLAN_AMT5+A.MOD_PLAN_AMT6+A.MOD_PLAN_AMT7+A.MOD_PLAN_AMT8+A.MOD_PLAN_AMT9+A.MOD_PLAN_AMT10+A.MOD_PLAN_AMT11+A.MOD_PLAN_AMT12) - (A.PLAN_AMT1+A.PLAN_AMT2+A.PLAN_AMT3+A.PLAN_AMT4+A.PLAN_AMT5+A.PLAN_AMT6+A.PLAN_AMT7+A.PLAN_AMT8+A.PLAN_AMT9+A.PLAN_AMT10+A.PLAN_AMT11+A.PLAN_AMT12)) * 100 / ISNULL(A.PLAN_AMT1+A.PLAN_AMT2+A.PLAN_AMT3+A.PLAN_AMT4+A.PLAN_AMT5+A.PLAN_AMT6+A.PLAN_AMT7+A.PLAN_AMT8+A.PLAN_AMT9+A.PLAN_AMT10+A.PLAN_AMT11+A.PLAN_AMT12, 0)
		                END  
		 END  AS A_D_RATE_SUM, 
		        A.PLAN_AMT1 AS PLAN1,
		        A.MOD_PLAN_AMT1 AS MOD_PLAN1,
		        
		CASE ISNULL(A.MOD_PLAN_AMT1, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT1, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT1 - A.PLAN_AMT1 ) * 100 / A.PLAN_AMT1
		                END  
		 END  AS A_D_RATE1,
		        A.PLAN_AMT2 AS PLAN2,
		        A.MOD_PLAN_AMT2 AS MOD_PLAN2,
		        
		CASE ISNULL(A.MOD_PLAN_AMT2, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT2, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT2 - A.PLAN_AMT2 ) * 100 / A.PLAN_AMT2
		                END  
		 END  AS A_D_RATE2,
		        A.PLAN_AMT3 AS PLAN3,
		        A.MOD_PLAN_AMT3 AS MOD_PLAN3,
		        
		CASE ISNULL(A.MOD_PLAN_AMT3, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT3, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT3 - A.PLAN_AMT3 ) * 100 / A.PLAN_AMT3
		                END  
		 END  AS A_D_RATE3,
		        A.PLAN_AMT4 AS PLAN4,
		        A.MOD_PLAN_AMT4 AS MOD_PLAN4,
		        
		CASE ISNULL(A.MOD_PLAN_AMT4, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT4, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT4 - A.PLAN_AMT4 ) * 100 / A.PLAN_AMT4
		                END  
		 END  AS A_D_RATE4,
		        A.PLAN_AMT5 AS PLAN5,
		        A.MOD_PLAN_AMT5 AS MOD_PLAN5,
		        
		CASE ISNULL(A.MOD_PLAN_AMT5, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT5, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT5 - A.PLAN_AMT5 ) * 100 / A.PLAN_AMT5
		                END  
		 END  AS A_D_RATE5,
		        A.PLAN_AMT6 AS PLAN6,
		        A.MOD_PLAN_AMT6 AS MOD_PLAN6,
		        
		CASE ISNULL(A.MOD_PLAN_AMT6, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT6, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT6 - A.PLAN_AMT6 ) * 100 / A.PLAN_AMT6
		                END  
		 END  AS A_D_RATE6,
		        A.PLAN_AMT7 AS PLAN7,
		        A.MOD_PLAN_AMT7 AS MOD_PLAN7,
		        
		CASE ISNULL(A.MOD_PLAN_AMT7, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT7, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT7 - A.PLAN_AMT7 ) * 100 / A.PLAN_AMT7
		                END  
		 END  AS A_D_RATE7,
		        A.PLAN_AMT8 AS PLAN8,
		        A.MOD_PLAN_AMT8 AS MOD_PLAN8,
		        
		CASE ISNULL(A.MOD_PLAN_AMT8, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT8, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT8 - A.PLAN_AMT8 ) * 100 / A.PLAN_AMT8
		                END  
		 END  AS A_D_RATE8,
		        A.PLAN_AMT9 AS PLAN9,
		        A.MOD_PLAN_AMT9 AS MOD_PLAN9,
		        
		CASE ISNULL(A.MOD_PLAN_AMT9, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT9, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT9 - A.PLAN_AMT9 ) * 100 / A.PLAN_AMT9
		                END  
		 END  AS A_D_RATE9,
		        A.PLAN_AMT10 AS PLAN10,
		        A.MOD_PLAN_AMT10 AS MOD_PLAN10,
		        
		CASE ISNULL(A.MOD_PLAN_AMT10, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT10, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT10 - A.PLAN_AMT10 ) * 100 / A.PLAN_AMT10
		                END  
		 END  AS A_D_RATE10,
		        A.PLAN_AMT11 AS PLAN11,
		        A.MOD_PLAN_AMT11 AS MOD_PLAN11,
		        
		CASE ISNULL(A.MOD_PLAN_AMT11, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT11, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT11 - A.PLAN_AMT11 ) * 100 / A.PLAN_AMT11
		                END  
		 END  AS A_D_RATE11,
		        A.PLAN_AMT12 AS PLAN12,
		        A.MOD_PLAN_AMT12 AS MOD_PLAN12,
		        
		CASE ISNULL(A.MOD_PLAN_AMT12, 0) 
		     WHEN 0 
		          THEN 0 
		          ELSE CASE ISNULL(A.PLAN_AMT12, 0) 
		                    WHEN 0
		                         THEN 0 
		                         ELSE ( A.MOD_PLAN_AMT12 - A.PLAN_AMT12 ) * 100 / A.PLAN_AMT12
		                END  
		 END  AS A_D_RATE12,
		                A.UPDATE_DB_USER,
		                A.UPDATE_DB_TIME,
		                A.COMP_CODE
		  FROM 				   SSP100T A 
			   INNER JOIN      BSA210T B WITH (NOLOCK)  ON B.COMP_CODE 	 = A.COMP_CODE
  												       AND B.TYPE_LEVEL  = A.DIV_CODE
  												       AND B.TREE_CODE 	 = A.PLAN_TYPE2_CODE                           
		                           
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.PLAN_TYPE2 = '8'
		   AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.PLAN_YEAR  = #{PLAN_YEAR}
		   AND A.PLAN_TYPE1 = #{ORDER_TYPE}
		   AND A.MONEY_UNIT = #{MONEY_UNIT}
	    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
	       AND B.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =B.COMP_CODE AND TYPE_LEVEL=B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
	    </if>
		 ORDER BY S_CODE
	</select>	
	<update id="sgp101ukrvService.insertDetail" parameterType="Map">
		INSERT INTO SSP100T
		     (  DIV_CODE		  
		       ,PLAN_YEAR		  
		       ,PLAN_TYPE1		
		       ,PLAN_TYPE2		
		       ,PLAN_TYPE2_CODE	
		       ,LEVEL_KIND		
		       ,MONEY_UNIT		
		       ,ENT_MONEY_UNIT	
		       ,CONFIRM_YN		
		       ,PLAN_AMT1		  		
		       ,MOD_PLAN_AMT1	  
		       ,PLAN_AMT2				
		       ,MOD_PLAN_AMT2		  
		       ,PLAN_AMT3				
		       ,MOD_PLAN_AMT3		  
		       ,PLAN_AMT4				
		       ,MOD_PLAN_AMT4		  
		       ,PLAN_AMT5				
		       ,MOD_PLAN_AMT5		  
		       ,PLAN_AMT6				
		       ,MOD_PLAN_AMT6		  
		       ,PLAN_AMT7				
		       ,MOD_PLAN_AMT7			  
		       ,PLAN_AMT8				
		       ,MOD_PLAN_AMT8		  
		       ,PLAN_AMT9				
		       ,MOD_PLAN_AMT9		  
		       ,PLAN_AMT10			
		       ,MOD_PLAN_AMT10			
		       ,PLAN_AMT11			
		       ,MOD_PLAN_AMT11	
		       ,PLAN_AMT12			
		       ,MOD_PLAN_AMT12
		       ,UPDATE_DB_USER	
		       ,UPDATE_DB_TIME	
		       ,COMP_CODE)
		VALUES
		     (  #{DIV_CODE}		  
		       ,#{PLAN_YEAR}		  
		       ,#{PLAN_TYPE1}		
		       ,#{PLAN_TYPE2}		
		       ,#{PLAN_TYPE2_CODE}	
		       ,#{LEVEL_KIND}		
		       ,#{MONEY_UNIT}		
		       ,#{ENT_MONEY_UNIT}	
		       ,#{CONFIRM_YN}	
		       ,#{PLAN1}		  		
		       ,#{MOD_PLAN1}		  
		       ,#{PLAN2}				
		       ,#{MOD_PLAN2}		  
		       ,#{PLAN3}				
		       ,#{MOD_PLAN3}		  
		       ,#{PLAN4}				
		       ,#{MOD_PLAN4}		  
		       ,#{PLAN5}				
		       ,#{MOD_PLAN5}		  
		       ,#{PLAN6}				
		       ,#{MOD_PLAN6}		  
		       ,#{PLAN7}				
		       ,#{MOD_PLAN7}		  
		       ,#{PLAN8}				
		       ,#{MOD_PLAN8}			  
		       ,#{PLAN9}				
		       ,#{MOD_PLAN9}		  
		       ,#{PLAN10}			
		       ,#{MOD_PLAN10}		
		       ,#{PLAN11}			
		       ,#{MOD_PLAN11}		
		       ,#{PLAN12}			
		       ,#{MOD_PLAN12}
		       ,#{UPDATE_DB_USER}	
		       ,GETDATE()	
		       ,#{COMP_CODE}
		     )
	</update>
	
	<update id="sgp101ukrvService.updateDetail" parameterType="Map">
	   UPDATE ssp100T
	   SET CONFIRM_YN      = #{CONFIRM_YN}
	     , PLAN_AMT1       = #{PLAN1}		
	     , MOD_PLAN_AMT1   = #{MOD_PLAN1}	
	     , PLAN_AMT2       = #{PLAN2}		
	     , MOD_PLAN_AMT2   = #{MOD_PLAN2}	
	     , PLAN_AMT3       = #{PLAN3}		
	     , MOD_PLAN_AMT3   = #{MOD_PLAN3}	
	     , PLAN_AMT4       = #{PLAN4}		
	     , MOD_PLAN_AMT4   = #{MOD_PLAN4}	
	     , PLAN_AMT5       = #{PLAN5}		
	     , MOD_PLAN_AMT5   = #{MOD_PLAN5}	
	     , PLAN_AMT6       = #{PLAN6}		
	     , MOD_PLAN_AMT6   = #{MOD_PLAN6}	
	     , PLAN_AMT7       = #{PLAN7}		
	     , MOD_PLAN_AMT7   = #{MOD_PLAN7}	
	     , PLAN_AMT8       = #{PLAN8}		
	     , MOD_PLAN_AMT8   = #{MOD_PLAN8}	
	     , PLAN_AMT9       = #{PLAN9}		
	     , MOD_PLAN_AMT9   = #{MOD_PLAN9}	
	     , PLAN_AMT10      = #{PLAN10}		
	     , MOD_PLAN_AMT10  = #{MOD_PLAN10}
	     , PLAN_AMT11      = #{PLAN11}		
	     , MOD_PLAN_AMT11  = #{MOD_PLAN11}
	     , PLAN_AMT12      = #{PLAN12}		
	     , MOD_PLAN_AMT12  = #{MOD_PLAN12}
	     , UPDATE_DB_USER  = #{UPDATE_DB_USER}
	     , UPDATE_DB_TIME  = GETDATE()
	     
	 WHERE DIV_CODE        = #{DIV_CODE}
	   AND PLAN_YEAR       = #{PLAN_YEAR}
	   AND PLAN_TYPE1      = #{PLAN_TYPE1}
	   AND PLAN_TYPE2      = #{PLAN_TYPE2}
	   AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
	   AND LEVEL_KIND      = #{LEVEL_KIND}
	   AND MONEY_UNIT      = #{MONEY_UNIT}
	   AND COMP_CODE       = #{COMP_CODE}
	</update>
	
	<delete id="sgp101ukrvService.deleteDetail" parameterType="Map">
		 DELETE FROM ssp100T 
		 WHERE DIV_CODE        = #{DIV_CODE}       
		   AND PLAN_YEAR       = #{PLAN_YEAR}      
		   AND PLAN_TYPE1      = #{PLAN_TYPE1}     
		   AND PLAN_TYPE2      = #{PLAN_TYPE2}     
		   AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
		   AND LEVEL_KIND      = #{LEVEL_KIND}     
		   AND MONEY_UNIT      = #{MONEY_UNIT}     
		   AND COMP_CODE       = #{COMP_CODE}      	
	</delete>
	
	
	<select id="sgp101ukrvService.selectConfirmN" parameterType="Map" resultType="rMap">
		SELECT ISNULL(CONFIRM_YN,'N') AS CONFIRM_YN 
		  FROM SSP100T 
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE   	   = #{DIV_CODE}
		   AND PLAN_YEAR       = #{PLAN_YEAR}
		   AND PLAN_TYPE1      = #{PLAN_TYPE1}
		   AND PLAN_TYPE2      = #{PLAN_TYPE2}
		   AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
		   AND LEVEL_KIND      = #{LEVEL_KIND}
		   AND MONEY_UNIT      = #{MONEY_UNIT}
	</select>
	
	<select id="sgp101ukrvService.selectConfirmY" parameterType="Map" resultType="rMap">
		SELECT CONFIRM_YN 
		  FROM SSP100T 
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE   	   = #{DIV_CODE}
		   AND PLAN_YEAR       = #{PLAN_YEAR}
		   AND PLAN_TYPE1      = #{PLAN_TYPE1}
		   AND PLAN_TYPE2      = #{PLAN_TYPE2}
		   AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
		   AND LEVEL_KIND      = #{LEVEL_KIND}
		   AND MONEY_UNIT      = #{MONEY_UNIT}
	</select>
	
	<update id="sgp101ukrvService.confirmSetN" parameterType="Map">
		UPDATE SSP100T
		   SET CONFIRM_YN = 'N'
		WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE   	   = #{DIV_CODE}
		   AND PLAN_YEAR       = #{PLAN_YEAR}
		   AND PLAN_TYPE1      = #{PLAN_TYPE1}
		   AND PLAN_TYPE2      = #{PLAN_TYPE2}
		   AND LEVEL_KIND      = #{LEVEL_KIND}
		   AND MONEY_UNIT      = #{MONEY_UNIT}
	</update>
	
	<update id="sgp101ukrvService.confirmSetY" parameterType="Map">
		UPDATE SSP100T
		   SET CONFIRM_YN = 'Y'
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE   	   = #{DIV_CODE}
		   AND PLAN_YEAR       = #{PLAN_YEAR}
		   AND PLAN_TYPE1      = #{PLAN_TYPE1}
		   AND PLAN_TYPE2      = #{PLAN_TYPE2}
		   AND LEVEL_KIND      = #{LEVEL_KIND}
		   AND MONEY_UNIT      = #{MONEY_UNIT}
	</update>
	
	<select id="sgp101ukrvService.createBaseData" parameterType="Map" resultType="rMap">
		SELECT A.TREE_CODE                                                             
	         , A.TREE_NAME   
	      FROM BSA210T A WITH (NOLOCK)                                                 
	     WHERE A.USE_YN = 'Y' 
	       AND A.COMP_CODE = #{S_COMP_CODE}
	       AND A.TREE_LEVEL LIKE (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = A.COMP_CODE AND TYPE_LEVEL = A.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
	       AND A.TYPE_LEVEL = #{DIV_CODE}
	     ORDER BY A.TREE_LEVEL
	</select>
</mapper>