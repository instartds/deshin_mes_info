<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sof104ukrvServiceImpl">
	<select id="sof104ukrvServiceImpl.getUserInfo" parameterType="Map" resultType="rMap">
		/* sof104ukrvServiceImpl.getUserInfo */
		SELECT USER_ID             AS 'value'
			 , USER_NAME           AS 'text'
			 , USER_ID + USER_NAME AS  search
			 , DIV_CODE            AS 'option'
		  FROM BSA300T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND USE_YN    = 'Y'
		 ORDER BY USER_ID
	</select>

	<select id="sof104ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* sof104ukrvServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ORDER_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , B1.COUNT
		     , CASE WHEN B1.COUNT > 1 THEN B2.ITEM_NAME + ' 외 ' + CONVERT(NVARCHAR, B1.COUNT - 1) + '건'
		            ELSE B2.ITEM_NAME
		       END                AS ITEM_NAMES
		     , A.ORDER_DATE
		     , ''                 AS SEQ
		     , CASE WHEN ISNULL(B1.AF_DVRY_DATE, '') = '' THEN B1.DVRY_DATE
		            ELSE B1.AF_DVRY_DATE
		       END                AS BF_DVRY_DATE
		     , CASE WHEN ISNULL(B1.AF_DVRY_DATE, '') = '' THEN B1.DVRY_DATE
		            ELSE B1.AF_DVRY_DATE
		       END                AS AF_DVRY_DATE
		     , ''                 AS REASON_CODE
		     , ''                 AS REMARK
		     , A.INSERT_DB_USER   AS UPDATE_DB_USER
		     , A.INSERT_DB_TIME   AS UPDATE_DB_TIME
		  FROM       SOF100T A  WITH(NOLOCK)
		  INNER JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, MAX(INIT_DVRY_DATE) AS AF_DVRY_DATE, MAX(DVRY_DATE) AS DVRY_DATE, COUNT(COMP_CODE) AS COUNT
		                FROM SOF110T WITH(NOLOCK)
		               WHERE COMP_CODE   = #{S_COMP_CODE}
		                 AND DIV_CODE    = #{DIV_CODE}
		                 AND ( (ORDER_Q - OUTSTOCK_Q) &gt; 0 AND ISNULL(ORDER_STATUS, '') != 'Y')
		               GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM) B1 ON B1.COMP_CODE = A.COMP_CODE
		                                                          AND B1.DIV_CODE  = A.DIV_CODE
		                                                          AND B1.ORDER_NUM = A.ORDER_NUM
		  INNER JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.ITEM_CODE, C.ITEM_NAME
		                FROM       SOF110T A WITH(NOLOCK)
		                INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                 AND C.ITEM_CODE = A.ITEM_CODE
		               WHERE A.COMP_CODE   = #{S_COMP_CODE}
		                 AND A.DIV_CODE    = #{DIV_CODE}
		                 AND A.SER_NO      = 1                ) B2 ON B2.COMP_CODE = A.COMP_CODE
		                                                          AND B2.DIV_CODE  = A.DIV_CODE
		                                                          AND B2.ORDER_NUM = A.ORDER_NUM
		  INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                    AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE  LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		   AND A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		   AND A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
		   AND B1.DVRY_DATE  &gt;= #{DVRY_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
		   AND B1.DVRY_DATE  &lt;= #{DVRY_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		   AND A.ORDER_NUM    LIKE #{ORDER_NUM} + '%'
		</if>
<!-- 20210621 추가: 조회조건 '영업담당' 추가 -->
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND A.ORDER_PRSN   = #{ORDER_PRSN}
		</if>

		UNION ALL

		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ORDER_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , B1.COUNT
		     , CASE WHEN B1.COUNT > 1 THEN B2.ITEM_NAME + ' 외 ' + CONVERT(NVARCHAR, B1.COUNT - 1) + '건'
		            ELSE B2.ITEM_NAME
		       END                AS ITEM_NAMES
		     , A.ORDER_DATE
		     , B3.SEQ
		     , B3.BF_DVRY_DATE
		     , B3.AF_DVRY_DATE
		     , B3.REASON_CODE
		     , B3.REMARK
		     , B3.UPDATE_DB_USER
		     , B3.UPDATE_DB_TIME
		  FROM       SOF100T A  WITH(NOLOCK)
		  INNER JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, MAX(INIT_DVRY_DATE) AS AF_DVRY_DATE, MAX(DVRY_DATE) AS DVRY_DATE, COUNT(COMP_CODE) AS COUNT
		                FROM SOF110T WITH(NOLOCK)
		               WHERE COMP_CODE   = #{S_COMP_CODE}
		                 AND DIV_CODE    = #{DIV_CODE}
		                 AND ( (ORDER_Q - OUTSTOCK_Q) &gt; 0 AND ISNULL(ORDER_STATUS, '') != 'Y')
		               GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM) B1 ON B1.COMP_CODE = A.COMP_CODE
		                                                          AND B1.DIV_CODE  = A.DIV_CODE
		                                                          AND B1.ORDER_NUM = A.ORDER_NUM
		  INNER JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.ITEM_CODE, C.ITEM_NAME
		                FROM       SOF110T A WITH(NOLOCK)
		                INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                                 AND C.ITEM_CODE = A.ITEM_CODE
		               WHERE A.COMP_CODE   = #{S_COMP_CODE}
		                 AND A.DIV_CODE    = #{DIV_CODE}
		                 AND A.SER_NO      = 1                ) B2 ON B2.COMP_CODE = A.COMP_CODE
		                                                          AND B2.DIV_CODE  = A.DIV_CODE
		                                                          AND B2.ORDER_NUM = A.ORDER_NUM
		  INNER JOIN SOF104T B3 WITH(NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
		                                    AND B3.DIV_CODE    = A.DIV_CODE
		                                    AND B3.ORDER_NUM   = A.ORDER_NUM
		  INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                    AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE  LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		   AND A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		   AND A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
		   AND B1.DVRY_DATE  &gt;= #{DVRY_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
		   AND B1.DVRY_DATE  &lt;= #{DVRY_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		   AND A.ORDER_NUM    LIKE #{ORDER_NUM} + '%'
		</if>
<!-- 20210621 추가: 조회조건 '영업담당' 추가 -->
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND A.ORDER_PRSN   = #{ORDER_PRSN}
		</if>
	</select>




<!-- 저장 로직 -->
	<update id="sof104ukrvServiceImpl.insertDetail" parameterType="Map">
		/* sof104ukrvServiceImpl.insertDetail */
		INSERT INTO SOF104T (
		       COMP_CODE
		     , DIV_CODE
		     , SEQ
		     , ORDER_NUM
		     , CUSTOM_CODE
		     , ORDER_DATE
		     , BF_DVRY_DATE
		     , AF_DVRY_DATE
		     , REASON_CODE
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{SEQ}
		     , #{ORDER_NUM}
		     , #{CUSTOM_CODE}
		     , #{ORDER_DATE}
		     , #{BF_DVRY_DATE}
		     , #{AF_DVRY_DATE}
		     , #{REASON_CODE}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<update id="sof104ukrvServiceImpl.updateDetail" parameterType="Map">
		/* sof104ukrvServiceImpl.updateDetail */
		UPDATE SOF104T
		   SET BF_DVRY_DATE   = #{BF_DVRY_DATE}
		     , AF_DVRY_DATE   = #{AF_DVRY_DATE}
		     , REASON_CODE    = #{REASON_CODE}
		     , REMARK         = #{REMARK}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND SEQ       = #{SEQ}
		   AND ORDER_NUM = #{ORDER_NUM}
	</update>

	<update id="sof104ukrvServiceImpl.deleteDetail" parameterType="Map">
		/* sof104ukrvServiceImpl.deleteDetail */
		DELETE FROM SOF104T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND SEQ       = #{SEQ}
		   AND ORDER_NUM = #{ORDER_NUM}
	</update>

<!-- 수주테이블 update -->
	<update id="sof104ukrvServiceImpl.updateSOF110T" parameterType="Map">
		/* sof104ukrvServiceImpl.updateSOF110T */
		DECLARE @LAST_DVRY_DATE NVARCHAR(08)

		SELECT @LAST_DVRY_DATE = AF_DVRY_DATE
		  FROM SOF104T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND SEQ       = (SELECT MAX(SEQ)
		                      FROM SOF104T WITH(NOLOCK)
		                     WHERE COMP_CODE = #{S_COMP_CODE}
		                       AND DIV_CODE  = #{DIV_CODE}
		                       AND ORDER_NUM = #{ORDER_NUM})
		   AND ORDER_NUM = #{ORDER_NUM}

		UPDATE SOF110T
		   SET INIT_DVRY_DATE = CASE WHEN #{SEQ} = 1 AND ISNULL(INIT_DVRY_DATE, '') = '' THEN DVRY_DATE
		                             ELSE INIT_DVRY_DATE
		                        END
		     , DVRY_DATE      = CASE WHEN ISNULL(@LAST_DVRY_DATE, '') = '' THEN INIT_DVRY_DATE
		                             ELSE @LAST_DVRY_DATE
		                        END
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ORDER_NUM = #{ORDER_NUM}
	</update>

<!-- 변경이력 테이블에 insert -->
	<update id="sof104ukrvServiceImpl.insertHistory" parameterType="Map">
		/* sof104ukrvServiceImpl.insertHistory */
		INSERT INTO SOF104T_HISTORY (
		       SAVE_FLAG
		     , COMP_CODE
		     , DIV_CODE
		     , SEQ
		     , ORDER_NUM
		     , CUSTOM_CODE
		     , ORDER_DATE
		     , BF_DVRY_DATE
		     , AF_DVRY_DATE
		     , REASON_CODE
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{SAVE_FLAG}
		     , #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{SEQ}
		     , #{ORDER_NUM}
		     , #{CUSTOM_CODE}
		     , #{ORDER_DATE}
		     , #{BF_DVRY_DATE}
		     , #{AF_DVRY_DATE}
		     , #{REASON_CODE}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>
</mapper>