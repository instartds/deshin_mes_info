<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sco301skrvServiceImpl">
	
	<select id="sco301skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap"> 
        --sco300skrv.Csco300skrv[fnsco300nq] Query01
         SELECT A AS CUSTOM_CODE
              , B AS CUSTOM_NAME
              , C AS COLLECT_DATE
              , D AS COLLECT_TYPE
              , MONEY_UNIT
              , E AS COLLECT_AMT
              , EXCHANGE_RATE
              , COLLECT_SUM_AMT
              , Y AS REPAY_AMT
              , F AS NOTE_NUM
              , G AS NOTE_TYPE
              , H AS PUB_CUST_CD
              , I AS NOTE_PUB_DATE
              , J AS PUB_PRSN
              , K AS NOTE_DUE_DATE
              , L AS PUB_ENDOSER
              , X.SAVE_CODE
              , X.SAVE_NAME
              , X.BANK_ACCOUNT
              --20190905 링크 위해서 추가 및 수정: COLET_CUST_CD, COLET_CUST_NM, REF_LOC
              , X.COLET_CUST_CD
              , M AS COLET_CUST_NM
              , X.REF_LOC
              , N AS DIV_CODE
              , O AS COLLECT_DIV
              , P AS COLLECT_PRSN
              , Q AS MANAGE_CUSTOM
              , R AS AREA_TYPE
              , S AS AGENT_TYPE
              , T AS PROJECT_NO
              , PJT_CODE
              , PJT_NAME
              , U AS COLLECT_NUM
              , V AS PUB_NUM
              , W AS EX_NUM
              , X AS REMARK
              , SORT
              , NOTE_CREDIT_RATE
              , STB_REMARK
              , ZA AS CARD_ACC_NUM
              , ZB AS RECEIPT_NAME
              , UPDATE_DB_USER
         FROM (SELECT  
                      A.CUSTOM_CODE                                                                        AS 'A'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.CUSTOM_CODE)  AS 'B'
                    , unilite.fnGetUserdate(#{S_COMP_CODE}, A.COLLECT_DATE)                         AS 'C'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'S017'
                          AND X.SUB_CODE  = A.COLLECT_TYPE)                                                AS 'D'
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0                                  
                                              ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN A.COLLECT_AMT * (-1) ELSE A.COLLECT_AMT END END
                                          END), 0)
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                                    ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 
                                                                              ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN (A.COLLECT_AMT / A.EXCHANGE_RATE) * (-1)
                                                                                        ELSE A.COLLECT_AMT / A.EXCHANGE_RATE
                                                                                    END
                                                                          END
                                                                END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN 0
                                                                   ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN A.COLLECT_FOR_AMT * (-1)
                                                                             ELSE A.COLLECT_FOR_AMT
                                                                         END
                                                               END
                                                    END), 0)
                                   END) 
                        END)                                                                               AS 'E'
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT
                                              ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_AMT ELSE 0 END
                                          END), 0) 
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT / A.EXCHANGE_RATE 
                                                                    ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_AMT / A.EXCHANGE_RATE ELSE 0 END
                                                                 END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_FOR_AMT
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_FOR_AMT ELSE 0 END
                                                     END), 0) 
                                   END) 
                        END)                                                                               AS 'Y'
                    , A.NOTE_NUM                                                                           AS 'F'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'B064'
                          AND X.SUB_CODE  = A.NOTE_TYPE)                                                   AS 'G'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, C.CUSTOM_CODE)   AS 'H'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_PUB_DATE)                         AS 'I'
                    , A.PUB_PRSN                                                                           AS 'J'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_DUE_DATE)                         AS 'K'
                    , A.PUB_ENDOSER                                                                        AS 'L'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE)   AS 'M'
                    , A.DIV_CODE                                                                           AS 'N'
                    , F.DIV_NAME                                                                           AS 'O'
                    , A.COLLECT_PRSN                                                AS 'P'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, G.CUSTOM_CODE)   AS 'Q'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B056'
                          AND X.SUB_CODE  = B.AREA_TYPE)                                                   AS 'R'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B055'
                          AND X.SUB_CODE  = B.AGENT_TYPE)                                                  AS 'S'
                    , A.PROJECT_NO                                                                         AS 'T'
                    , A.PJT_CODE                                                                           AS PJT_CODE
                    , K.PJT_NAME                                                                           AS PJT_NAME
                    , A.COLLECT_NUM                                                                        AS 'U'
                    , A.PUB_NUM                                                                            AS 'V'
                    , A.EX_NUM                                                                             AS 'W'
                    , A.REMARK                                                                             AS 'X'
                    , A.COLLECT_NUM + CAST(A.COLLECT_SEQ AS VARCHAR(8))                                    AS SORT
                    , A.NOTE_CREDIT_RATE                                                                   AS NOTE_CREDIT_RATE
                    , ISNULL((SELECT X.REMARK
                                FROM STB100T X WITH (NOLOCK)
                               WHERE X.COMP_CODE = A.COMP_CODE
                                 AND X.PUB_NUM   = A.PUB_NUM), '')                                         AS STB_REMARK
                    , A.MONEY_UNIT
                    , A.EXCHANGE_RATE
                    --20210702 수정: 환산액 가져오는 로직 수정 - 주석 로직을 그 바로 아래로직으로 변경(환율 계산 하지 않고 환산액 컬럼 그대로 가져오도록 수정)
                    --, (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                    --        THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                    --                          ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_AMT END
                    --                      END), 0) * A.EXCHANGE_RATE
                    --        ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                    --                              THEN C2.SUB_CODE
                    --                              ELSE ISNULL(C2.REF_CODE1,'')
                    --                          END) IN ('55','56','62')
                    --                   THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                    --                                     ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_AMT END
                    --                                 END), 0)
                    --                   ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                    --                                     ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_FOR_AMT END
                    --                                END), 0) * A.EXCHANGE_RATE
                    --               END) 
                    --    END)                                                                               AS COLLECT_SUM_AMT
                    , ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                   ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_AMT END
                              END), 0)                                                                     AS COLLECT_SUM_AMT
                    , A.CARD_ACC_NUM                                                                       AS 'ZA'
                    , A.RECEIPT_NAME                                                                       AS 'ZB'
                    , Q.SAVE_CODE                                                                          AS SAVE_CODE
                    , Q.SAVE_NAME                                                                          AS SAVE_NAME
                    , uniLITE.fnCipherDecrypt(Q.BANK_ACCOUNT, 'B')                                         AS BANK_ACCOUNT
                    , A.UPDATE_DB_USER                                                                     AS UPDATE_DB_USER
                    --20190905 링크 위해서 추가 및 수정: COLET_CUST_CD, COLET_CUST_NM, REF_LOC
                    , A.COLET_CUST_CD
                    , A.REF_LOC
                 FROM            SCO100T A WITH (NOLOCK)
                      INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE          = A.COMP_CODE
                                                        AND B.CUSTOM_CODE        = A.CUSTOM_CODE
                      LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                        AND C.CUSTOM_CODE        = A.PUB_CUST_CD
                                                        AND C.CUSTOM_TYPE        = '4'
                      LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                        AND D.CUSTOM_CODE        = A.COLET_CUST_CD
                      INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE          = A.COMP_CODE
                                                        AND E.DIV_CODE           = A.DIV_CODE
                      INNER JOIN BOR120T F WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                        AND F.DIV_CODE           = A.COLLECT_DIV
                      LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE          = B.COMP_CODE
                                                        AND G.CUSTOM_CODE        = B.MANAGE_CUSTOM
                      LEFT  JOIN PJT100T K WITH (NOLOCK) ON K.COMP_CODE          = A.COMP_CODE
                                                        AND K.DIV_CODE           = A.DIV_CODE
                                                        AND K.PJT_CODE           = A.PJT_CODE
                      LEFT  JOIN AFS100T Q WITH (NOLOCK) ON Q.COMP_CODE          = A.COMP_CODE
                                                        AND Q.SAVE_CODE          = A.SAVE_CODE
                                                        AND ISNULL(Q.USE_YN,'Y') = N'Y'
                      LEFT  JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
                                                         AND C1.MAIN_CODE        = 'B004'
                                                         AND C1.SUB_CODE         = A.MONEY_UNIT
                      LEFT  JOIN BSA100T C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
                                                         AND C2.MAIN_CODE        = 'S017'
                                                         AND C2.SUB_CODE         = A.COLLECT_TYPE
                      LEFT  JOIN (SELECT COMP_CODE, SUB_CODE 
                                       , (CASE ISNULL(REF_CODE1,'') WHEN ''  THEN SUB_CODE                     
                                               ELSE REF_CODE1                    
                                           END) AS COLLECT_TYPE                                            
                                       ,  ISNULL(REF_CODE6, '') AS REF_CODE6
                                    FROM BSA100T                                                            
                                   WHERE MAIN_CODE = 'S017'                                                 
                                     AND COMP_CODE = #{S_COMP_CODE}                            
                                     AND SUB_CODE != '$')  AS C3 ON C3.COMP_CODE = A.COMP_CODE
                                                                AND C3.SUB_CODE  = A.COLLECT_TYPE
                                                                AND C3.COLLECT_TYPE != '80'
                      LEFT  JOIN (SELECT COMP_CODE, SUB_CODE 
                                       , (CASE ISNULL(REF_CODE1,'') WHEN ''  THEN SUB_CODE                     
                                               ELSE REF_CODE1                    
                                           END) AS COLLECT_TYPE    
                                    FROM BSA100T                                                            
                                   WHERE MAIN_CODE = 'S017'                                                 
                                     AND COMP_CODE = #{S_COMP_CODE}                            
                                     AND SUB_CODE != '$'
                                     AND SUB_CODE != '80')  AS C4 ON C4.COMP_CODE = A.COMP_CODE
                                                                 AND C4.SUB_CODE  = A.COLLECT_TYPE
                                                                 AND C4.COLLECT_TYPE = '80'
                WHERE A.COMP_CODE   = #{S_COMP_CODE}
                  AND (A.DISHONOR_DATE = '' OR A.DISHONOR_DATE IS NULL)
                <if test="RDO == &quot;Y&quot;">
                  AND ISNULL(A.EX_DATE, '') != ''
                </if>
                <if test="RDO == &quot;N&quot;">
                  AND ISNULL(A.EX_DATE, '') = ''
                </if>                  
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
                  AND A.DIV_CODE       = #{DIV_CODE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLLECT_PRSN)">
                  AND A.COLLECT_PRSN   = #{COLLECT_PRSN}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
                  AND A.COLLECT_DIV    = #{DIV_CODE}
                </if> 
                
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
                AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
                AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
                AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
                </if>

                <if test="@foren.Ognl@isNotEmpty(FR_DATE)"> 
                  AND A.COLLECT_DATE  &gt;= #{FR_DATE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(TO_DATE)"> 
                  AND A.COLLECT_DATE  &lt;= #{TO_DATE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)">  
                  AND A.COLLECT_TYPE   = #{COLLECT_TYPE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">  
                  AND B.AGENT_TYPE     = #{AGENT_TYPE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">  
                  AND B.AREA_TYPE      = #{AREA_TYPE}
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isNotEmpty(COLET_CUST_NM)">
                AND A.COLET_CUST_CD		= #{COLET_CUST_CD}							/* 수금처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isEmpty(COLET_CUST_NM)">
                AND A.COLET_CUST_CD 	LIKE  #{COLET_CUST_CD} + '%'				/* 수금처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_NM) and @foren.Ognl@isEmpty(COLET_CUST_CD)">
                AND D.CUSTOM_NAME 		LIKE '%' + #{COLET_CUST_NM} + '%'			/* 수금처명  */
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
                AND B.MANAGE_CUSTOM		= #{MANAGE_CUSTOM}							/* 집계거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
                AND B.MANAGE_CUSTOM 	LIKE  #{MANAGE_CUSTOM} + '%'				/* 집계거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
                AND G.CUSTOM_NAME 		LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
                </if>

                <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_FR)">  
                  AND A.COLLECT_AMT   &gt;= #{COLLECT_AMT_FR}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_TO)">  
                  AND A.COLLECT_AMT   &lt;= #{COLLECT_AMT_TO}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_FR)">  
                  AND A.COLLECT_NUM   &gt;= #{COLLECT_NUM_FR}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_TO)">  
                  AND A.COLLECT_NUM   &lt;= #{COLLECT_NUM_TO}
                </if> 
               ) X
         ORDER BY 1, 2, 3
    </select>    
    
	<select id="sco301skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
        --sco300skrv.Csco300skrv[fnsco300nq] Query02
        SELECT A AS CUSTOM_CODE
             , B AS CUSTOM_NAME
             , C AS COLLECT_DATE
             , D AS COLLECT_TYPE
             , E AS COLLECT_AMT
             , MONEY_UNIT
             , Y AS REPAY_AMT
             , EXCHANGE_RATE
             , COLLECT_SUM_AMT
             , F AS NOTE_NUM
             , G AS NOTE_TYPE
             , H AS PUB_CUST_CD
             , I AS NOTE_PUB_DATE
             , J AS PUB_PRSN
             , K AS NOTE_DUE_DATE
             , L AS PUB_ENDOSER
             , M AS COLET_CUST_CD
             , X.SAVE_CODE
             , X.SAVE_NAME
             , X.BANK_ACCOUNT
             , N AS DIV_CODE
             , O AS COLLECT_DIV
             , P AS COLLECT_PRSN
             , Q AS MANAGE_CUSTOM
             , R AS AREA_TYPE
             , S AS AGENT_TYPE
             , T AS PROJECT_NO
             , PJT_CODE
             , PJT_NAME
             , U AS COLLECT_NUM
             , V AS PUB_NUM
             , W AS EX_NUM
             , X AS REMARK
             , SORT
             , NOTE_CREDIT_RATE
             , STB_REMARK
             , ZA AS CARD_ACC_NUM
             , ZB AS RECEIPT_NAME
             , UPDATE_DB_USER
         FROM (SELECT  
                     A.COLLECT_PRSN                                                                         AS 'A'
                    , A.CUSTOM_CODE                                                                         AS 'B'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, B.CUSTOM_CODE)    AS 'C'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'S017'
                          AND X.SUB_CODE  = A.COLLECT_TYPE)                                                 AS 'D'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.COLLECT_DATE)                           AS 'E'
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0                                  
                                              ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN A.COLLECT_AMT * (-1) ELSE A.COLLECT_AMT END END
                                          END), 0)
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                                    ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 
                                                                              ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN (A.COLLECT_AMT / A.EXCHANGE_RATE) * (-1)
                                                                                        ELSE A.COLLECT_AMT / A.EXCHANGE_RATE
                                                                                    END
                                                                          END
                                                                END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN 0
                                                                   ELSE CASE WHEN C3.REF_CODE6 = 'Y' THEN A.COLLECT_FOR_AMT * (-1)
                                                                             ELSE A.COLLECT_FOR_AMT
                                                                         END
                                                               END
                                                    END), 0)
                                   END) 
                        END)                                                                               AS 'Y'
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT
                                              ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_AMT ELSE 0 END
                                          END), 0) 
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT / A.EXCHANGE_RATE 
                                                                    ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_AMT / A.EXCHANGE_RATE ELSE 0 END
                                                                 END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_FOR_AMT
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN A.COLLECT_FOR_AMT ELSE 0 END
                                                     END), 0) 
                                   END) 
                        END)                                                                               AS 'F'
                    , A.NOTE_NUM                                                                            AS 'G'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'B064'
                          AND X.SUB_CODE  = A.NOTE_TYPE)                                                    AS 'H'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, C.CUSTOM_CODE)    AS 'I'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_PUB_DATE)                          AS 'J'
                    , A.PUB_PRSN                                                                            AS 'K'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_DUE_DATE)                          AS 'L'
                    , A.PUB_ENDOSER                                                                         AS 'M'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE)    AS 'N'
                    , E.DIV_NAME                                                                            AS 'O'
                    , F.DIV_NAME                                                                            AS 'P'
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, G.CUSTOM_CODE)    AS 'Q'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B056'
                          AND X.SUB_CODE  = B.AREA_TYPE)                                                    AS 'R'
                    , (SELECT X.CODE_NAME
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B055'
                          AND X.SUB_CODE  = B.AGENT_TYPE)                                                   AS 'S'
                    , A.PROJECT_NO                                                                          AS 'T'
                    , A.PJT_CODE                                                                           AS PJT_CODE
                    , K.PJT_NAME                                                                           AS PJT_NAME
                    , A.COLLECT_NUM                                                                        AS 'U'
                    , A.PUB_NUM                                                                            AS 'V'
                    , A.EX_NUM                                                                             AS 'W'
                    , A.REMARK                                                                             AS 'X'
                    , A.COLLECT_NUM + CAST(A.COLLECT_SEQ AS VARCHAR(8))                                    AS SORT
                    , A.NOTE_CREDIT_RATE                                                                   AS NOTE_CREDIT_RATE
                    , ISNULL((SELECT X.REMARK
                                FROM STB100T X WITH (NOLOCK)
                               WHERE X.COMP_CODE = A.COMP_CODE
                                 AND X.PUB_NUM   = A.PUB_NUM), '')                                         AS STB_REMARK
                    , A.MONEY_UNIT
                    , A.EXCHANGE_RATE
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                              ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_AMT END
                                          END), 0) * A.EXCHANGE_RATE
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_AMT END
                                                     END), 0)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 
                                                         ELSE CASE WHEN C4.SUB_CODE != '' THEN 0 ELSE A.COLLECT_FOR_AMT END
                                                    END), 0) * A.EXCHANGE_RATE
                                   END) 
                        END)                                                                               AS COLLECT_SUM_AMT
                    , A.CARD_ACC_NUM                                                                       AS 'ZA'
                    , A.RECEIPT_NAME                                                                       AS 'ZB'
                    , Q.SAVE_CODE                                                                          AS SAVE_CODE
                    , Q.SAVE_NAME                                                                          AS SAVE_NAME
                    , uniLITE.fnCipherDecrypt(Q.BANK_ACCOUNT, 'B')                                         AS BANK_ACCOUNT
                    , A.UPDATE_DB_USER                                                                     AS UPDATE_DB_USER
                 FROM            SCO100T A WITH (NOLOCK)
                      INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE          = A.COMP_CODE
                                                        AND B.CUSTOM_CODE        = A.CUSTOM_CODE
                      LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                        AND C.CUSTOM_CODE        = A.PUB_CUST_CD
                                                        AND C.CUSTOM_TYPE        = '4'
                      LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                        AND D.CUSTOM_CODE        = A.COLET_CUST_CD
                      INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE          = A.COMP_CODE
                                                        AND E.DIV_CODE           = A.DIV_CODE
                      INNER JOIN BOR120T F WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                        AND F.DIV_CODE           = A.COLLECT_DIV
                      LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE          = B.COMP_CODE
                                                        AND G.CUSTOM_CODE        = B.MANAGE_CUSTOM
                      LEFT  JOIN PJT100T K WITH (NOLOCK) ON K.COMP_CODE          = A.COMP_CODE
                                                        AND K.DIV_CODE           = A.DIV_CODE
                                                        AND K.PJT_CODE           = A.PJT_CODE
                      LEFT  JOIN AFS100T Q WITH (NOLOCK) ON Q.COMP_CODE          = A.COMP_CODE
                                                        AND Q.SAVE_CODE          = A.SAVE_CODE
                                                        AND ISNULL(Q.USE_YN,'Y') = N'Y'
                      LEFT  JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
                                                         AND C1.MAIN_CODE        = 'B004'
                                                         AND C1.SUB_CODE         = A.MONEY_UNIT
                      LEFT  JOIN BSA100T C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
                                                         AND C2.MAIN_CODE        = 'S017'
                                                         AND C2.SUB_CODE         = A.COLLECT_TYPE
                      LEFT  JOIN (SELECT COMP_CODE, SUB_CODE 
                                       , (CASE ISNULL(REF_CODE1,'') WHEN ''  THEN SUB_CODE                     
                                               ELSE REF_CODE1                    
                                           END) AS COLLECT_TYPE                                            
                                       ,  ISNULL(REF_CODE6, '') AS REF_CODE6
                                    FROM BSA100T                                                            
                                   WHERE MAIN_CODE = 'S017'                                                 
                                     AND COMP_CODE = #{S_COMP_CODE}                            
                                     AND SUB_CODE != '$')  AS C3 ON C3.COMP_CODE = A.COMP_CODE
                                                                AND C3.SUB_CODE  = A.COLLECT_TYPE
                                                                AND C3.COLLECT_TYPE != '80'
                      LEFT  JOIN (SELECT COMP_CODE, SUB_CODE 
                                       , (CASE ISNULL(REF_CODE1,'') WHEN ''  THEN SUB_CODE                     
                                               ELSE REF_CODE1                    
                                           END) AS COLLECT_TYPE    
                                    FROM BSA100T                                                            
                                   WHERE MAIN_CODE = 'S017'                                                 
                                     AND COMP_CODE = #{S_COMP_CODE}                            
                                     AND SUB_CODE != '$'
                                     AND SUB_CODE != '80')  AS C4 ON C4.COMP_CODE = A.COMP_CODE
                                                                 AND C4.SUB_CODE  = A.COLLECT_TYPE
                                                                 AND C4.COLLECT_TYPE = '80'
                WHERE A.COMP_CODE   = #{S_COMP_CODE}
                  AND (A.DISHONOR_DATE = '' OR A.DISHONOR_DATE IS NULL)
                <if test="RDO == &quot;Y&quot;">
                  AND ISNULL(A.EX_DATE, '') != ''
                </if>
                <if test="RDO == &quot;N&quot;">
                  AND ISNULL(A.EX_DATE, '') = ''
                </if>                  
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
                  AND A.DIV_CODE       = #{DIV_CODE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLLECT_PRSN)">
                  AND A.COLLECT_PRSN   = #{COLLECT_PRSN}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
                  AND A.COLLECT_DIV    = #{DIV_CODE}
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
                AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
                AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
                AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
                </if>

                <if test="@foren.Ognl@isNotEmpty(FR_DATE)"> 
                  AND A.COLLECT_DATE  &gt;= #{FR_DATE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(TO_DATE)"> 
                  AND A.COLLECT_DATE  &lt;= #{TO_DATE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)">  
                  AND A.COLLECT_TYPE   = #{COLLECT_TYPE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">  
                  AND B.AGENT_TYPE     = #{AGENT_TYPE}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">  
                  AND B.AREA_TYPE      = #{AREA_TYPE}
                </if>  
                
                
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isNotEmpty(COLET_CUST_NM)">
                AND A.COLET_CUST_CD		= #{COLET_CUST_CD}							/* 수금처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isEmpty(COLET_CUST_NM)">
                AND A.COLET_CUST_CD 	LIKE  #{COLET_CUST_CD} + '%'				/* 수금처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(COLET_CUST_NM) and @foren.Ognl@isEmpty(COLET_CUST_CD)">
                AND D.CUSTOM_NAME 		LIKE '%' + #{COLET_CUST_NM} + '%'			/* 수금처명  */
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
                AND B.MANAGE_CUSTOM		= #{MANAGE_CUSTOM}							/* 집계거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
                AND B.MANAGE_CUSTOM 	LIKE  #{MANAGE_CUSTOM} + '%'				/* 집계거래처코드  */
                </if>
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
                AND G.CUSTOM_NAME 		LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_FR)">  
                  AND A.COLLECT_AMT   &gt;= #{COLLECT_AMT_FR}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_TO)">  
                  AND A.COLLECT_AMT   &lt;= #{COLLECT_AMT_TO}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_FR)">  
                  AND A.COLLECT_NUM   &gt;= #{COLLECT_NUM_FR}
                </if>  
                <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_TO)">  
                  AND A.COLLECT_NUM   &lt;= #{COLLECT_NUM_TO}
                </if> 
               ) X
         ORDER BY 1, 2, 4
    </select>
    
    <select id="sco301skrvServiceImpl.selectCustomTotaliList" parameterType="Map" resultType="rMap">
        --sco300skrv.Csco300skrv[fnsco300Summary] Query01
        SELECT A.COLET_CUST_CD          AS CUSTOM_CODE                                        -- 수금처CD                 
             , MAX(uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_ID}, D.CUSTOM_CODE)) AS CUSTOM_NAME
             , SUM((CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                         THEN ISNULL(A.COLLECT_AMT, 0)
                         ELSE ISNULL(A.COLLECT_FOR_AMT, 0)
                     END)) AS COLLECT_AMT                                       -- 수금액                   
          FROM            SCO100T A WITH (NOLOCK)
               INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE          = A.COMP_CODE
                                                 AND B.CUSTOM_CODE        = A.CUSTOM_CODE
               LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                 AND C.CUSTOM_CODE        = A.PUB_CUST_CD
                                                 AND C.CUSTOM_TYPE        = '4'
               LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                 AND D.CUSTOM_CODE        = A.COLET_CUST_CD
               INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE          = A.COMP_CODE
                                                 AND E.DIV_CODE           = A.DIV_CODE
               INNER JOIN BOR120T F WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                 AND F.DIV_CODE           = A.COLLECT_DIV
               LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE          = B.COMP_CODE
                                                 AND G.CUSTOM_CODE        = B.MANAGE_CUSTOM
               LEFT  JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
                                                  AND C1.MAIN_CODE        = 'B004'
                                                  AND C1.SUB_CODE         = A.MONEY_UNIT
         WHERE A.COLLECT_TYPE    != '80'                                          -- 선수금반제 제외           
           AND (A.DISHONOR_DATE   = '' OR A.DISHONOR_DATE IS NULL)                 -- 부도어음제외              
           <if test="RDO == &quot;Y&quot;">
              AND ISNULL(A.EX_DATE, '') != ''
           </if>
           <if test="RDO == &quot;N&quot;">
              AND ISNULL(A.EX_DATE, '') = ''
           </if>     
           <if test="@foren.Ognl@isNotEmpty(COLLECT_PRSN)">
              AND A.COLLECT_PRSN   = #{COLLECT_PRSN}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
              AND A.COLLECT_DIV    = #{DIV_CODE}
           </if> 
           
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
              AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
              AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
              AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
           </if>

           <if test="@foren.Ognl@isNotEmpty(FR_DATE)"> 
              AND A.COLLECT_DATE  &gt;= #{FR_DATE}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(TO_DATE)"> 
              AND A.COLLECT_DATE  &lt;= #{TO_DATE}
           </if> 
           <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)">  
              AND A.COLLECT_TYPE   = #{COLLECT_TYPE}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">  
              AND B.AGENT_TYPE     = #{AGENT_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">  
              AND B.AREA_TYPE      = #{AREA_TYPE}
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isNotEmpty(COLET_CUST_NM)">
              AND A.COLET_CUST_CD		= #{COLET_CUST_CD}							/* 수금처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isEmpty(COLET_CUST_NM)">
              AND A.COLET_CUST_CD 	LIKE  #{COLET_CUST_CD} + '%'					/* 수금처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_NM) and @foren.Ognl@isEmpty(COLET_CUST_CD)">
              AND D.CUSTOM_NAME 		LIKE '%' + #{COLET_CUST_NM} + '%'			/* 수금처명  */
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
              AND B.MANAGE_CUSTOM		= #{MANAGE_CUSTOM}							/* 집계거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
              AND B.MANAGE_CUSTOM 	LIKE  #{MANAGE_CUSTOM} + '%'					/* 집계거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
              AND G.CUSTOM_NAME 		LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
           </if>

           <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_FR)">  
              AND A.COLLECT_AMT   &gt;= #{COLLECT_AMT_FR}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_TO)">  
              AND A.COLLECT_AMT   &lt;= #{COLLECT_AMT_TO}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_FR)">  
              AND A.COLLECT_NUM   &gt;= #{COLLECT_NUM_FR}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_TO)">  
              AND A.COLLECT_NUM   &lt;= #{COLLECT_NUM_TO}
           </if>
           AND A.COMP_CODE            = #{S_COMP_CODE}
         GROUP BY A.COLET_CUST_CD
         ORDER BY A.COLET_CUST_CD
    </select>
	
	<select id="sco301skrvServiceImpl.selectPrsnTotaliList" parameterType="Map" resultType="rMap">
		--sco300skrv.Csco300skrv[fnsco300Summary] Query01
        SELECT A.COLLECT_PRSN AS PRSN_CODE                                  --수금담당CD                  
             , (SELECT X.CODE_NAME 
                  FROM BSA100T X WITH (NOLOCK)                                  -- 수금담당NM                 
                 WHERE X.MAIN_CODE = 'S010'                                                                   
                   AND X.COMP_CODE  = #{S_COMP_CODE}
                   AND X.SUB_CODE  = A.COLLECT_PRSN) AS PRSN_NAME                                           
             , SUM((CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                         THEN ISNULL(A.COLLECT_AMT, 0)
                         ELSE ISNULL(A.COLLECT_FOR_AMT, 0)
                     END)) AS COLLECT_AMT                                       -- 수금액                   
          FROM            SCO100T A WITH (NOLOCK)
               INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE          = A.COMP_CODE
                                                 AND B.CUSTOM_CODE        = A.CUSTOM_CODE
               LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                 AND C.CUSTOM_CODE        = A.PUB_CUST_CD
                                                 AND C.CUSTOM_TYPE        = '4'
               LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                 AND D.CUSTOM_CODE        = A.COLET_CUST_CD
               INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE          = A.COMP_CODE
                                                 AND E.DIV_CODE           = A.DIV_CODE
               INNER JOIN BOR120T F WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                 AND F.DIV_CODE           = A.COLLECT_DIV
               LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE          = B.COMP_CODE
                                                 AND G.CUSTOM_CODE        = B.MANAGE_CUSTOM
               LEFT  JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
                                                  AND C1.MAIN_CODE        = 'B004'
                                                  AND C1.SUB_CODE         = A.MONEY_UNIT
         WHERE A.COLLECT_TYPE   != '80'                                         -- 선수금반제 제외            
           AND (A.DISHONOR_DATE = '' OR A.DISHONOR_DATE IS NULL)                -- 부도어음제외               
           <if test="RDO == &quot;Y&quot;">
              AND ISNULL(A.EX_DATE, '') != ''
           </if>
           <if test="RDO == &quot;N&quot;">
              AND ISNULL(A.EX_DATE, '') = ''
           </if>     
           <if test="@foren.Ognl@isNotEmpty(COLLECT_PRSN)">
              AND A.COLLECT_PRSN   = #{COLLECT_PRSN}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
              AND A.COLLECT_DIV    = #{DIV_CODE}
           </if> 
           
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
              AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
              AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
              AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
           </if>

           <if test="@foren.Ognl@isNotEmpty(FR_DATE)"> 
              AND A.COLLECT_DATE  &gt;= #{FR_DATE}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(TO_DATE)"> 
              AND A.COLLECT_DATE  &lt;= #{TO_DATE}
           </if> 
           <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)">  
              AND A.COLLECT_TYPE   = #{COLLECT_TYPE}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">  
              AND B.AGENT_TYPE     = #{AGENT_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">  
              AND B.AREA_TYPE      = #{AREA_TYPE}
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isNotEmpty(COLET_CUST_NM)">
              AND A.COLET_CUST_CD		= #{COLET_CUST_CD}							/* 수금처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD) and @foren.Ognl@isEmpty(COLET_CUST_NM)">
              AND A.COLET_CUST_CD 	LIKE  #{COLET_CUST_CD} + '%'					/* 수금처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(COLET_CUST_NM) and @foren.Ognl@isEmpty(COLET_CUST_CD)">
              AND D.CUSTOM_NAME 		LIKE '%' + #{COLET_CUST_NM} + '%'			/* 수금처명  */
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
              AND B.MANAGE_CUSTOM		= #{MANAGE_CUSTOM}							/* 집계거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
              AND B.MANAGE_CUSTOM 	LIKE  #{MANAGE_CUSTOM} + '%'					/* 집계거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
              AND G.CUSTOM_NAME 		LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
           </if>

           <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_FR)">  
              AND A.COLLECT_AMT   &gt;= #{COLLECT_AMT_FR}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_TO)">  
              AND A.COLLECT_AMT   &lt;= #{COLLECT_AMT_TO}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_FR)">  
              AND A.COLLECT_NUM   &gt;= #{COLLECT_NUM_FR}
           </if>  
           <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_TO)">  
              AND A.COLLECT_NUM   &lt;= #{COLLECT_NUM_TO}
           </if>
           AND A.COMP_CODE            = #{S_COMP_CODE}                                                               
         GROUP BY A.COLLECT_PRSN 
         ORDER BY A.COLLECT_PRSN                                                                              
	</select>		
</mapper>