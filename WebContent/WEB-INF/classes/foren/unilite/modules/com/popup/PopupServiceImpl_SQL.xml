<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="popupServiceImpl">
	<select id="popupServiceImpl.fnGetAsset" parameterType="Map" resultType="rMap">
		--UIFRSPopUpKrv.CIFRSPopUpKr[fnGetAsset] Query1
			SELECT  A.ASST		AS ASSET_CODE
				 ,  A.ASST_NAME	AS ASSET_NAME
				 ,  A.ACCNT
				 ,  N1.ACCNT_NAME
				 ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
				 ,  A.ACQ_AMT_I
				 ,  A.ACQ_Q
				 ,  A.DRB_YEAR
				 ,  CONVERT(NUMERIC, M1.CODE_NAME) / 1000			   AS DPR_RATE
				 ,  A.SPEC
			FROM		   AISS300T AS A WITH (NOLOCK)
				LEFT  JOIN ABA400T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
														AND N1.ACCNT	 = A.ACCNT
				LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE = A.COMP_CODE
														AND M1.MAIN_CODE = (CASE WHEN A.DEP_CTL = '1' THEN 'A033'
																				 WHEN A.DEP_CTL = '2' THEN 'A034'
																			END)
														AND M1.SUB_CODE  = RIGHT(CONVERT(NVARCHAR, 1000+A.DRB_YEAR), 3)
			WHERE A.COMP_CODE	  =  #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
			AND   A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.ASST LIKE #{TXT_SEARCH} + '%'
			 	OR A.ASST_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
				AND (A.ASST LIKE #{ASSET_CODE} + '%'
			 	OR A.ASST_NAME LIKE '%'+ #{ASSET_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ASSET_NAME)">
				AND (A.ASST LIKE #{ASSET_NAME} + '%'
			 	OR A.ASST_NAME LIKE '%'+ #{ASSET_NAME} + '%' )
				</if>
			 </if>
			ORDER BY A.ASST ASC
	</select>

	<select id="popupServiceImpl.prizePopup" parameterType="Map" resultType="rMap">
		-- 금융상품코드 Main

		<if test="PARAM_MAIN_CODE == &quot;HC04&quot;">
		--금융상품코드POPUP_2012년 이전까지 사용
		--UHpb01Krv.cPopup[GetHumanPrize]
		SELECT SUB_CODE,REF_CODE2 FROM HCD100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = #{PARAM_MAIN_CODE}
		   AND REF_CODE1 = 'A'
		 ORDER BY SUB_CODE
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC08&quot;">
		--금융상품코드POPUP_2012년 이후 사용
		--UHpb01Krv.cPopup[GetHumanPrize2]
		SELECT REF_CODE2, REF_CODE3 FROM HCD100T
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND MAIN_CODE		= #{PARAM_MAIN_CODE}
		   AND REF_CODE1		= '1'
		   AND LEFT(SUB_CODE,1) = #{IN_COME_KIND}
		 ORDER BY SUB_CODE


		</if>


	</select>

	<select id="popupServiceImpl.prizePopup2" parameterType="Map" resultType="rMap">
		-- 금융상품코드 Sub

		<if test="PARAM_MAIN_CODE == &quot;HC04&quot;">
		--금융상품코드POPUP_2012년 이전까지 사용
		--UHpb01Krv.cPopup[GetHumanPrize]
		SELECT REF_CODE2,REF_CODE3,REF_CODE4,REF_CODE5,SUB_CODE

		  FROM HCD100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = #{PARAM_MAIN_CODE}
		   AND REF_CODE1 = 'B'
		 ORDER BY REF_CODE1,SUB_CODE,REF_CODE3,REF_CODE5
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC08&quot;">
			 --금융상품코드POPUP_2012년 이후 사용
			 --UHpb01Krv.cPopup[GetHumanPrize2]
		SELECT REF_CODE3, REF_CODE2 FROM HCD100T
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND MAIN_CODE		= #{PARAM_MAIN_CODE}
		   AND REF_CODE1		= '2'
		   AND LEFT(SUB_CODE,1) = #{IN_COME_KIND}
		 ORDER BY SUB_CODE
		</if>
	</select>

	<select id="popupServiceImpl.buCodePopup" parameterType="Map" resultType="rMap">
		-- 부표코드 팝업

		<if test="gaPopUp3 == &quot;200001&quot;">
			SELECT TAX_CODE 	 -- '원천징수 코드'
				 , TAX_CODE_NAME -- '코드 명'

				 FROM HBS130T

			WHERE COMP_CODE = #{S_COMP_CODE}
			  AND TAX_CODE  LIKE 'B%'
			  AND TAX_YYYYMM = #{gaPopUp3}
			  AND REF_CODE1  = #{gaPopUp2}
			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (TAX_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR TAX_YYYYMM LIKE '%'+ #{TXT_SEARCH} + '%' )

			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(BU_CODE)">
					AND (TAX_CODE LIKE #{BU_CODE} + '%'
			 		OR TAX_YYYYMM LIKE '%'+ #{BU_CODE} + '%' )
				</if>
			  </if>


		</if>
		<if test="gaPopUp3 >= &quot;201801&quot;">
            SELECT TAX_CODE      -- '원천징수 코드'
                 , TAX_CODE_NAME -- '코드 명'

                 FROM HBS130T

            WHERE COMP_CODE = #{S_COMP_CODE}
              AND TAX_CODE  LIKE 'C%'
              AND TAX_YYYYMM = #{gaPopUp3}
              AND (REF_CODE4 = #{gaPopUp2}
               OR  REF_CODE4 = #{gaPopUp4})
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND (TAX_CODE LIKE #{TXT_SEARCH} + '%'
                OR TAX_YYYYMM LIKE '%'+ #{TXT_SEARCH} + '%' )

             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BU_CODE)">
                    AND (TAX_CODE LIKE #{BU_CODE} + '%'
                    OR TAX_YYYYMM LIKE '%'+ #{BU_CODE} + '%' )
                </if>
              </if>


        </if>
		<if test="gaPopUp3 != &quot;200001&quot;">
			SELECT TAX_CODE 		-- '원천징수 코드'
				 , TAX_CODE_NAME	-- '코드 명'

				 FROM HBS130T

			 WHERE COMP_CODE = #{S_COMP_CODE}
			  AND TAX_CODE LIKE 'C%'
			  AND TAX_YYYYMM = #{gaPopUp3}
			  AND REF_CODE1  = #{gaPopUp2}
			  AND TAX_CODE   &gt;= #{gaPopUp4}
			  AND TAX_CODE   &lt;= #{gaPopUp5}

			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (TAX_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR TAX_YYYYMM LIKE '%'+ #{TXT_SEARCH} + '%' )

			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
					AND (TAX_CODE LIKE #{TAX_GUBN} + '%'
			 		OR TAX_YYYYMM LIKE '%'+ #{TAX_GUBN} + '%' )
				</if>
			  </if>

		</if>

	</select>

	<select id="popupServiceImpl.saupPopupCode" parameterType="Map" resultType="rMap">

		-- 2016.05.16 'HC01' 조건에 해당하는 팝업이 필요해서 만들었으며, 다른 조건 식에 맞는 것을 수정하거나 추가해야함.

		<if test="PARAM_MAIN_CODE == &quot;HC01&quot;">
			-- 이자소득구분
			SELECT
				SUB_CODE 			  AS SAUP_POPUP_CODE-- 코드
				,CODE_NAME 			  AS SAUP_POPUP_NAME-- 명의
				,ISNULL(REF_CODE1,'') AS REF_CODE1		-- 실지명의구분
				,ISNULL(REF_CODE2,'') AS REF_CODE2		-- 실지명의구분
				,ISNULL(REF_CODE3,'') AS REF_CODE3		-- 사용번호

			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  AND SUB_CODE  >= ''

			ORDER BY SORT_SEQ ASC
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC02&quot;">
			-- 과세구분코드 (2012년 이전)

			SELECT
				SUB_CODE 			 	AS SUB_CODE  -- 코드
				,CODE_NAME 			 	AS CODE_NAME -- 소득자
				,ISNULL(REF_CODE1,'') 	AS REF_CODE1 -- 소득유형
				,ISNULL(REF_CODE2,'') 	AS REF_CODE2 --소득유형
				,ISNULL(REF_CODE3,'') 	AS REF_CODE3 --이자소득
				,ISNULL(REF_CODE4,'') 	AS REF_CODE4 --배당소득 (일반)
				,ISNULL(REF_CODE5,'') 	AS REF_CODE5 --배당소득 (의제)

			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  AND SUB_CODE  >= ''
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )

			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
					AND (SUB_CODE LIKE #{TAX_GUBN} + '%'
			 		OR CODE_NAME LIKE '%'+ #{TAX_GUBN} + '%' )
				</if>
			  </if>
			 ORDER BY SORT_SEQ ASC
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC03&quot;">
			-- 채권이자구분
			SELECT
				SUB_CODE 			AS SUB_CODE  --코 드
				,CODE_NAME 			AS CODE_NAME --설 명
				,'' as '설 명'
				,'' as '설 명'
				,'' as '설 명'

			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  --AND SUB_CODE  >= ''
			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SORT_SEQ ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(CLAIM_INTER_GUBN)">
					AND (SUB_CODE LIKE #{CLAIM_INTER_GUBN} + '%'
			 		OR CODE_NAME LIKE '%'+ #{CLAIM_INTER_GUBN} + '%' )
			 		ORDER BY SORT_SEQ ASC
				</if>
			  </if>
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC05&quot;">
			-- 소득종류코드
			SELECT
				 SUB_CODE 			AS SUB_CODE  --코 드
				,CODE_NAME 			AS CODE_NAME --소득종류
				,'' 				AS REF_CODE1 --설명
				,'' 				AS REF_CODE2 --설명
				,'' 				AS REF_CODE3 --설명
				,'' 				AS REF_CODE4 --설명
				,'' 				AS REF_CODE5 --설명


			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  AND REF_CODE1  = #{DED_TYPE}
			ORDER BY SUB_CODE ASC
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC06&quot;">
			-- 조세특례코드
			SELECT
				SUB_CODE 			AS SUB_CODE  --코 드
				,CODE_NAME 			AS CODE_NAME --조세특약
				,'' as '설 명'
				,'' as '설 명'
				,'' as '설 명'
			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  --AND SUB_CODE  >= ''
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(TAX_EXCEPTION)">
					AND (SUB_CODE LIKE #{TAX_EXCEPTION} + '%'
			 		OR CODE_NAME LIKE '%'+ #{TAX_EXCEPTION} + '%' )

			     </if>
			</if>
			ORDER BY SORT_SEQ ASC
		</if>

		<if test="PARAM_MAIN_CODE == &quot;HC07&quot;">
			-- 과세구분코드 (2012년 부터)
			SELECT
				SUB_CODE 			AS SUB_CODE  --코 드
				,CODE_NAME			AS CODE_NAME -- 소득자
				,ISNULL(REF_CODE1,'') AS REF_CODE1 -- 소득유형
				,ISNULL(REF_CODE2,'') AS REF_CODE2 -- 소득유형
				,'' as '설 명'

			FROM HCD100T

			WHERE COMP_CODE  = #{S_COMP_CODE}
			  AND MAIN_CODE  = #{PARAM_MAIN_CODE}
			  AND SUB_CODE  != '$'
			  AND SUB_CODE  >= ''

			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
					AND (SUB_CODE LIKE #{TAX_GUBN} + '%'
			 		OR CODE_NAME LIKE '%'+ #{TAX_GUBN} + '%' )
				</if>
			  </if>

			  ORDER BY SORT_SEQ ASC
		</if>


	</select>

	<select id="popupServiceImpl.bussOfficeCode" parameterType="Map" resultType="rMap">
		--uniLITE5Popup.CPopup[getHumanBussOffice] Query01
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			 SELECT BUSS_OFFICE_NAME
				 , BUSS_OFFICE_CODE
				 , B.CODE_NAME LOCAL_TAX_GOVNM
				 , BUSS_OFFICE_ADDR
				 , (SELECT DIV_NAME
					  FROM BOR120T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND DIV_CODE  = A.SECT_CODE) AS SECT_NAME
				 , LOCAL_TAX_GOV
				 , SECT_CODE
			  FROM			HBS230T A WITH (NOLOCK)
				   INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
													 AND B.MAIN_CODE	= N'H137'
													 AND B.SUB_CODE	 = A.LOCAL_TAX_GOV
			  WHERE A.COMP_CODE	 = #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (BUSS_OFFICE_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR BUSS_OFFICE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY BUSS_OFFICE_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(BUSS_OFFICE_CODE)">
				AND (BUSS_OFFICE_CODE LIKE #{BUSS_OFFICE_CODE} + '%'
			 	OR BUSS_OFFICE_NAME LIKE '%'+ #{BUSS_OFFICE_CODE} + '%' )
				</if>
			  </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.wkordNum" parameterType="Map" resultType="rMap">

        /*popupServiceImpl.wkordNum*/

        DECLARE @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
              , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
              , @WKORD_NUM          NVARCHAR(20)    -- (선택) 작업지시번호
              , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드
              , @FR_PRODT_DATE      NVARCHAR(08)    -- (선택) 착수예정일(FROM)
              , @TO_PRODT_DATE      NVARCHAR(08)    -- (선택) 착수예정일(TO)
              , @WORK_SHOP_CODE     NVARCHAR(08)    -- (선택) 작업장
              , @ITEM_NAME          NVARCHAR(200)    -- (선택) 품목코드
              , @USER_ID            NVARCHAR(100)    -- (필수) 사용자ID
              , @LOT_NO             NVARCHAR(20)    -- (선택) LOT번호

              , @PROG_WORK_CODE             NVARCHAR(20)    -- (선택) 공정코드

        SET  @COMP_CODE         = #{S_COMP_CODE}
        SET  @DIV_CODE          = #{DIV_CODE}
        SET  @WKORD_NUM         = #{WKORD_NUM}
        SET  @ITEM_CODE         = #{ITEM_CODE}
        SET  @FR_PRODT_DATE     = #{FR_PRODT_DATE}
        SET  @TO_PRODT_DATE     = #{TO_PRODT_DATE}
        SET  @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
        SET  @ITEM_NAME         = REPLACE(#{ITEM_NAME}, '[', '[[]')
        SET  @USER_ID           = #{S_USER_ID}
        SET  @LOT_NO            = #{LOT_NO}

        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}


        DECLARE @RefItem    NVARCHAR(01)        -- 사용자 품목명 참조 유형

        SELECT  TOP 1 @RefItem = REF_ITEM
        FROM    BSA300T WITH (NOLOCK)
        WHERE   COMP_CODE = @COMP_CODE
        AND     USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, N'0')

        SELECT  A.WKORD_NUM
             ,  A.ITEM_CODE
             ,  CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                     ELSE C1.ITEM_NAME
                END                                                             AS ITEM_NAME
             ,  C1.SPEC
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_WKORD_DATE)      AS PRODT_WKORD_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE)      AS PRODT_START_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)        AS PRODT_END_DATE
             ,  CASE WHEN ISNULL(A.PROG_UNIT_Q, 0) = 0 THEN 0
                     ELSE ISNULL(A.WKORD_Q, 0) / ISNULL(A.PROG_UNIT_Q, 0)
                END                                                             AS WKORD_Q
             ,  A.WK_PLAN_NUM
             ,  A.DIV_CODE
             ,  A.WORK_SHOP_CODE
             ,  B.ORDER_NUM
             ,  ISNULL(B.ORDER_Q, 0)                                            AS ORDER_Q
             ,  A.REMARK
             ,  ISNULL(A.PRODT_Q, 0)                                            AS PRODT_Q
             ,  uniLITE.fnGetUserDateComp(C.COMP_CODE, C.DVRY_DATE)             AS DVRY_DATE
             ,  C1.STOCK_UNIT
             ,  A.PROJECT_NO
             ,  A.PJT_CODE
             ,  A.LOT_NO
             ,  C2.TREE_NAME													AS WORK_SHOP_CODE_NM
        FROM               PMP100T AS A  WITH (NOLOCK)
                LEFT  JOIN PPL100T AS B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                      AND B.DIV_CODE    = A.DIV_CODE
                                                      AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
                LEFT  JOIN SOF110T AS C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
                                                      AND C.DIV_CODE    = B.DIV_CODE
                                                      AND C.ORDER_NUM   = B.ORDER_NUM
                                                      AND C.SER_NO      = B.SEQ
                INNER JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
                                                      AND C1.ITEM_CODE  = A.ITEM_CODE
				LEFT  JOIN BSA230T AS C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
													  AND C2.TREE_CODE  = A.WORK_SHOP_CODE
        WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.DIV_CODE          = @DIV_CODE
        AND     A.LINE_END_YN       = 'Y'
        AND   ((A.WKORD_NUM         = @WKORD_NUM             AND ISNULL(@WKORD_NUM,'')      != '')      OR (ISNULL(@WKORD_NUM,'')      = ''))
        AND   ((A.ITEM_CODE      LIKE @ITEM_CODE + '%'       AND ISNULL(@ITEM_CODE,'')       != '')      OR (ISNULL(@ITEM_CODE,'')      = ''))
        AND   ((A.PRODT_START_DATE &gt;= @FR_PRODT_DATE      AND ISNULL(@FR_PRODT_DATE,'')   != '')      OR (ISNULL(@FR_PRODT_DATE,'')  = ''))
        AND   ((A.PRODT_START_DATE &lt;= @TO_PRODT_DATE      AND ISNULL(@TO_PRODT_DATE ,'')  != '')      OR (ISNULL(@TO_PRODT_DATE,'')  = ''))
        AND   ((A.WORK_SHOP_CODE    = @WORK_SHOP_CODE        AND ISNULL(@WORK_SHOP_CODE,'')  != '')      OR (ISNULL(@WORK_SHOP_CODE,'') = ''))
        AND   ((C1.ITEM_NAME     LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '0'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME1    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '1'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME2    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '2'      AND ISNULL(@ITEM_NAME,'')     != '') OR (ISNULL(@ITEM_NAME,'') = ''))
        AND   ((A.LOT_NO            = @LOT_NO                AND ISNULL(@LOT_NO ,'')         != '')      OR (ISNULL(@LOT_NO,'')         = ''))

        AND   ((A.PROG_WORK_CODE         = @PROG_WORK_CODE   AND ISNULL(@PROG_WORK_CODE,'')      != '')      OR (ISNULL(@PROG_WORK_CODE,'')      = ''))


        ORDER   BY A.WKORD_NUM
	</select>
	<select id="popupServiceImpl.wkordNum_JW" parameterType="Map" resultType="rMap">

        /*popupServiceImpl.wkordNum_JW*/

        DECLARE @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
              , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
              , @WKORD_NUM          NVARCHAR(20)    -- (선택) 작업지시번호
              , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드
              , @FR_PRODT_WKORD_DATE      NVARCHAR(08)    -- (선택) 작업지시일(FROM)
              , @TO_PRODT_WKORD_DATE      NVARCHAR(08)    -- (선택) 작업지시일(TO)
              , @WORK_SHOP_CODE     NVARCHAR(08)    -- (선택) 작업장
              , @ITEM_NAME          NVARCHAR(200)    -- (선택) 품목코드
              , @USER_ID            NVARCHAR(100)    -- (필수) 사용자ID
              , @LOT_NO             NVARCHAR(20)    -- (선택) LOT번호
              , @REWORK_YN          NVARCHAR(20)    -- (선택) 재작업지시여부

        SET  @COMP_CODE         = #{S_COMP_CODE}
        SET  @DIV_CODE          = #{DIV_CODE}
        SET  @WKORD_NUM         = #{WKORD_NUM}
        SET  @ITEM_CODE         = #{ITEM_CODE}
        SET  @FR_PRODT_WKORD_DATE     = #{FR_PRODT_WKORD_DATE}
        SET  @TO_PRODT_WKORD_DATE     = #{TO_PRODT_WKORD_DATE}
        SET  @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
        SET  @ITEM_NAME         = REPLACE(#{ITEM_NAME}, '[', '[[]')
        SET  @USER_ID           = #{S_USER_ID}
        SET  @LOT_NO            = #{LOT_NO}
        SET  @REWORK_YN         = #{REWORK_YN}

        DECLARE @RefItem    NVARCHAR(01)        -- 사용자 품목명 참조 유형

        SELECT  TOP 1 @RefItem = REF_ITEM
        FROM    BSA300T WITH (NOLOCK)
        WHERE   COMP_CODE = @COMP_CODE
        AND     USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, N'0')

        SELECT  A.WKORD_NUM
             ,  A.ITEM_CODE
             ,  CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                     ELSE C1.ITEM_NAME
                END                                                             AS ITEM_NAME
             ,  C1.SPEC
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_WKORD_DATE)      AS PRODT_WKORD_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE)      AS PRODT_START_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)        AS PRODT_END_DATE
             ,  CASE WHEN ISNULL(A.PROG_UNIT_Q, 0) = 0 THEN 0
                     ELSE ISNULL(A.WKORD_Q, 0) / ISNULL(A.PROG_UNIT_Q, 0)
                END                                                             AS WKORD_Q
             ,  A.WK_PLAN_NUM
             ,  A.DIV_CODE
             ,  A.WORK_SHOP_CODE
             ,  B.ORDER_NUM
             ,  ISNULL(B.ORDER_Q, 0)                                            AS ORDER_Q
             ,  A.REMARK
             ,  ISNULL(A.PRODT_Q, 0)                                            AS PRODT_Q
             ,  uniLITE.fnGetUserDateComp(C.COMP_CODE, C.DVRY_DATE)             AS DVRY_DATE
             ,  C1.STOCK_UNIT
             ,  A.PROJECT_NO
             ,  A.PJT_CODE
             ,  A.LOT_NO
             ,  A.REWORK_YN
        FROM               PMP100T AS A  WITH (NOLOCK)
                LEFT  JOIN PPL100T AS B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                      AND B.DIV_CODE    = A.DIV_CODE
                                                      AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
                LEFT  JOIN SOF110T AS C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
                                                      AND C.DIV_CODE    = B.DIV_CODE
                                                      AND C.ORDER_NUM   = B.ORDER_NUM
                                                      AND C.SER_NO      = B.SEQ
                INNER JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
                                                      AND C1.ITEM_CODE  = A.ITEM_CODE
        WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.DIV_CODE          = @DIV_CODE
        AND     A.LINE_END_YN       = 'Y'
        AND   ((A.WKORD_NUM         = @WKORD_NUM             AND ISNULL(@WKORD_NUM,'')      != '')      OR (ISNULL(@WKORD_NUM,'')      = ''))
        AND   ((A.ITEM_CODE      LIKE @ITEM_CODE + '%'       AND ISNULL(@ITEM_CODE,'')       != '')      OR (ISNULL(@ITEM_CODE,'')      = ''))
        AND   ((A.PRODT_WKORD_DATE &gt;= @FR_PRODT_WKORD_DATE      AND ISNULL(@FR_PRODT_WKORD_DATE,'')   != '')      OR (ISNULL(@FR_PRODT_WKORD_DATE,'')  = ''))
        AND   ((A.PRODT_WKORD_DATE &lt;= @TO_PRODT_WKORD_DATE      AND ISNULL(@TO_PRODT_WKORD_DATE ,'')  != '')      OR (ISNULL(@TO_PRODT_WKORD_DATE,'')  = ''))
        AND   ((A.WORK_SHOP_CODE    = @WORK_SHOP_CODE        AND ISNULL(@WORK_SHOP_CODE,'')  != '')      OR (ISNULL(@WORK_SHOP_CODE,'') = ''))
        AND   ((C1.ITEM_NAME     LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '0'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME1    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '1'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME2    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '2'      AND ISNULL(@ITEM_NAME,'')     != '') OR (ISNULL(@ITEM_NAME,'') = ''))

		AND A.WKORD_NUM = A.TOP_WKORD_NUM
        AND   ((A.REWORK_YN         = @REWORK_YN             AND ISNULL(@REWORK_YN,'')      != '')      OR (ISNULL(@REWORK_YN,'')      = ''))

        ORDER   BY A.WKORD_NUM
	</select>
	<select id="popupServiceImpl.wkordNum_KDG" parameterType="Map" resultType="rMap">

        /*popupServiceImpl.wkordNum_KDG*/

        DECLARE @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
              , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
              , @WKORD_NUM          NVARCHAR(20)    -- (선택) 작업지시번호
              , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드
              , @FR_PRODT_DATE      NVARCHAR(08)    -- (선택) 착수예정일(FROM)
              , @TO_PRODT_DATE      NVARCHAR(08)    -- (선택) 착수예정일(TO)
              , @WORK_SHOP_CODE     NVARCHAR(08)    -- (선택) 작업장
              , @ITEM_NAME          NVARCHAR(200)   -- (선택) 품목코드
              , @USER_ID            NVARCHAR(100)   -- (필수) 사용자ID
              , @LOT_NO             NVARCHAR(20)    -- (선택) LOT번호

        SET  @COMP_CODE         = #{S_COMP_CODE}
        SET  @DIV_CODE          = #{DIV_CODE}
        SET  @WKORD_NUM         = #{WKORD_NUM}
        SET  @ITEM_CODE         = #{ITEM_CODE}
        SET  @FR_PRODT_DATE     = #{FR_PRODT_DATE}
        SET  @TO_PRODT_DATE     = #{TO_PRODT_DATE}
        SET  @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
        SET  @ITEM_NAME         = REPLACE(#{ITEM_NAME}, '[', '[[]')
        SET  @USER_ID           = #{S_USER_ID}
        SET  @LOT_NO            = #{LOT_NO}

        DECLARE @RefItem    NVARCHAR(01)        -- 사용자 품목명 참조 유형

        SELECT  TOP 1 @RefItem = REF_ITEM
        FROM    BSA300T WITH (NOLOCK)
        WHERE   COMP_CODE = @COMP_CODE
        AND     USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, N'0')

        SELECT  A.WKORD_NUM
             ,  A.ITEM_CODE
             ,  CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                     ELSE C1.ITEM_NAME
                END                                                             AS ITEM_NAME
             ,  C1.SPEC
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_WKORD_DATE)      AS PRODT_WKORD_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE)      AS PRODT_START_DATE
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)        AS PRODT_END_DATE
             ,  CASE WHEN ISNULL(A.PROG_UNIT_Q, 0) = 0 THEN 0
                     ELSE ISNULL(A.WKORD_Q, 0) / ISNULL(A.PROG_UNIT_Q, 0)
                END                                                             AS WKORD_Q
             ,  A.WK_PLAN_NUM
             ,  A.DIV_CODE
             ,  A.WORK_SHOP_CODE
             ,  B.ORDER_NUM
             ,  ISNULL(B.ORDER_Q, 0)                                            AS ORDER_Q
             ,  A.REMARK
             ,  ISNULL(A.PRODT_Q, 0)                                            AS PRODT_Q
             ,  uniLITE.fnGetUserDateComp(C.COMP_CODE, C.DVRY_DATE)             AS DVRY_DATE
             ,  C1.STOCK_UNIT
             ,  A.PROJECT_NO
             ,  A.PJT_CODE
             ,  A.LOT_NO
             , ISNULL(A.GW_FLAG,'N') AS GW_FLAG
        FROM               PMP100T AS A  WITH (NOLOCK)
                LEFT  JOIN PPL100T AS B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                      AND B.DIV_CODE    = A.DIV_CODE
                                                      AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
                LEFT  JOIN SOF110T AS C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
                                                      AND C.DIV_CODE    = B.DIV_CODE
                                                      AND C.ORDER_NUM   = B.ORDER_NUM
                                                      AND C.SER_NO      = B.SEQ
                INNER JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
                                                      AND C1.ITEM_CODE  = A.ITEM_CODE
        WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.DIV_CODE          = @DIV_CODE
        AND     A.LINE_END_YN       = 'Y'
        AND   A.WKORD_NUM          = A.TOP_WKORD_NUM
        AND   ((A.WKORD_NUM         = @WKORD_NUM             AND ISNULL(@WKORD_NUM,'')      != '')      OR (ISNULL(@WKORD_NUM,'')      = ''))
        AND   ((A.ITEM_CODE      LIKE @ITEM_CODE + '%'       AND ISNULL(@ITEM_CODE,'')       != '')      OR (ISNULL(@ITEM_CODE,'')      = ''))
        AND   ((A.PRODT_START_DATE &gt;= @FR_PRODT_DATE      AND ISNULL(@FR_PRODT_DATE,'')   != '')      OR (ISNULL(@FR_PRODT_DATE,'')  = ''))
        AND   ((A.PRODT_START_DATE &lt;= @TO_PRODT_DATE      AND ISNULL(@TO_PRODT_DATE ,'')  != '')      OR (ISNULL(@TO_PRODT_DATE,'')  = ''))
        AND   ((A.WORK_SHOP_CODE    = @WORK_SHOP_CODE        AND ISNULL(@WORK_SHOP_CODE,'')  != '')      OR (ISNULL(@WORK_SHOP_CODE,'') = ''))
        AND   ((C1.ITEM_NAME     LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '0'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME1    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '1'      AND ISNULL(@ITEM_NAME,'')     != '')
         OR    (C1.ITEM_NAME2    LIKE '%' + @ITEM_NAME + '%' AND ISNULL(@RefItem ,'')         = '2'      AND ISNULL(@ITEM_NAME,'')     != '') OR (ISNULL(@ITEM_NAME,'') = ''))
        AND   ((A.LOT_NO            = @LOT_NO                AND ISNULL(@LOT_NO ,'')         != '')      OR (ISNULL(@LOT_NO,'')         = ''))

		   <if test="@foren.Ognl@isNotEmpty(GW_FLAG)">
        AND ISNULL(A.GW_FLAG,'N') = #{GW_FLAG}
		   </if>

        ORDER   BY A.WKORD_NUM
	</select>
	<select id="popupServiceImpl.negoIncomNoPopup" parameterType="Map" resultType="rMap">

		-- UTiFuncKrv.Public[fnNegoiNumbers] Query01
		SELECT
			  A.NEGO_SER_NO	 AS  NEGO_INCOM_NO
			 ,A.DIV_CODE AS NEGO_DIV
			 ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_DATE) AS NEGO_DATE
			 ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'S010' AND SUB_CODE = A.PAY_NM
											   AND COMP_CODE = #{S_COMP_CODE}
			   ) AS NEGO_NM
			 ,(SELECT Z.CUSTOM_NAME FROM BCM100T Z WHERE Z.CUSTOM_TYPE = N'4' AND Z.CUSTOM_CODE = A.PAY_BANK
											   AND Z.COMP_CODE = #{S_COMP_CODE}
			   ) AS PAY_BANK
			 ,A.IMPORTER
			 ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTER_NM
			 ,A.EXPORTER
			 ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTER_NM
			 ,A.MONEY_UNIT
			 ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T005' AND SUB_CODE = A.TERMS_PRICE
											   AND COMP_CODE = #{S_COMP_CODE}
			   ) AS TERMS_PRICE
			 ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T006' AND SUB_CODE = A.PAY_TERMS
											   AND COMP_CODE = #{S_COMP_CODE}
			   ) AS PAY_TERMS
			 ,A.PAY_DURING
			 ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T016' AND SUB_CODE = A.PAY_METHODE
											   AND COMP_CODE = #{S_COMP_CODE}
			   ) AS PAY_METHODE1
			 ,A.BL_AMT
			 ,A.BL_EXCHANGE_RATE
			 ,A.BL_AMT_WON
			 ,A.PAY_AMT
			 ,A.PAY_EXCHANGE_RATE
			 ,A.PAY_AMT_WON
			 ,A.AMT_SUB_PM
			 ,A.COLET_TYPE
			 ,A.NATION_INOUT
			 ,A.BASIS_SER_NO
			 ,A.REMARKS1
			 ,A.REMARKS2
		 FROM TIH100T A
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.TRADE_TYPE  = N'1'
		 <if test="@foren.Ognl@isNotEmpty(NEGO_INCOM_NO)">
		   AND A.NEGO_SER_NO = #{NEGO_INCOM_NO}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PAY_DATE_FR)">
		   AND A.PAY_DATE &gt;= #{PAY_DATE_FR}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PAY_DATE_TO)">
		   AND A.PAY_DATE &lt;= #{PAY_DATE_TO}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE  = #{DIV_CODE}
		 </if>
		 ORDER BY NEGO_SER_NO DESC
	</select>

	<select id="popupServiceImpl.negoNoPopup" parameterType="Map" resultType="rMap">

		 -- UTFuncKrv.CTFuncKr1[fnNegoNumbers]   Query01
		 SELECT
				A.DIV_CODE, A.NEGO_SER_NO, A.TRADE_TYPE, A.NATION_INOUT, A.PROJECT_NO, A.NEGO_DIV
			   ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.NEGO_DATE) NEGO_DATE
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'S010' AND SUB_CODE = A.NEGO_NM
				   AND  COMP_CODE = #{S_COMP_CODE}
				 ) AS NEGO_NM
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'S010' AND SUB_CODE = A.EXPORT_NM
				   AND  COMP_CODE = #{S_COMP_CODE}
				 ) AS EXPORT_NM
			   ,A.NEGO_NO
			   ,(SELECT Z.CUSTOM_NAME FROM BCM100T Z WHERE Z.CUSTOM_TYPE = N'4' AND Z.CUSTOM_CODE = A.NEGO_BANK
				   AND  Z.COMP_CODE = #{S_COMP_CODE}
				) AS NEGO_BANK
			   ,A.OPEN_BANK
			   ,A.IMPORTER
			   ,uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, A.IMPORTER) AS IMPORTER_NM
			   ,A.EXPORTER
			   ,uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, A.EXPORTER) AS EXPORTER_NM
			   ,A.MONEY_UNIT
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T005' AND SUB_CODE = A.TERMS_PRICE
				   AND  COMP_CODE = #{S_COMP_CODE}
				 ) AS TERMS_PRICE
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T006' AND SUB_CODE = A.PAY_TERMS
				   AND  COMP_CODE = #{S_COMP_CODE}
				 ) AS PAY_TERMS
			   ,A.PAY_DURING
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T016' AND SUB_CODE = A.PAY_METHODE
					AND  COMP_CODE = #{S_COMP_CODE}
				 ) AS PAY_METHODE1
			   ,A.EXCHAGE_COMM_RATE
			   ,A.NEGO_AMT
			   ,A.EXCHANGE_RATE
			   ,A.NEGO_AMT_WON
			   ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.EXPIRY_DATE) AS EXPIRY_DATE
			   ,A.PRIME_RATE
			   ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T102' AND SUB_CODE = A.FLAG_FLAW
					AND COMP_CODE = #{S_COMP_CODE}
				 ) AS FLAG_FLAW
			   ,A.PAY_DIV
			   ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_DATE) AS PAY_DATE
			   ,A.PAY_AMT
			   ,A.PAY_EXCHANGE_RATE
			   ,A.PAY_AMT_WON
			   ,A.AMT_SUB_PM
			   ,A.COLET_TYPE
			   ,A.REMARKS1
			   ,A.REMARKS2
		 FROM  TEE100T A
		 WHERE A.NEGO_SER_NO LIKE #{NEGO_SER_NO} + '%'
		   AND A.COMP_CODE = #{S_COMP_CODE}
		 AND A.NEGO_TYPE = N'2'
		 AND A.NEGO_DATE &gt;= #{NEGO_DATE_FR}
		 AND A.NEGO_DATE &lt;= #{NEGO_DATE_TO}
		 AND A.DIV_CODE = #{DIV_CODE}
		 ORDER BY NEGO_SER_NO DESC
	</select>

	<select id="popupServiceImpl.passIncomNoPopup" parameterType="Map" resultType="rMap">
		-- UTiFuncKrv.Public[fnPassMaster] Query01
		SELECT
			   A.DIV_CODE
			 , A.TRADE_TYPE
			 , A.PASS_SER_NO	AS PASS_INCOM_NO
			 , uniLite.fnGetUserDateComp(N'MASTER',A.INVOICE_DATE) INVOICE_DATE
			 , A.IMPORTER
			 , uniLite.fnCustNameComp(N'MASTER',N'unilite5', A.IMPORTER) AS IMPORTER_NM
			 , A.EXPORTER
			 , uniLite.fnCustNameComp(N'MASTER',N'unilite5', A.EXPORTER) AS EXPORTER_NM
			 , (SELECT CODE_NAME FROM BSA100T
					   WHERE MAIN_CODE = N'T006' AND A.PAY_TERMS = SUB_CODE
						 AND COMP_CODE = N'MASTER'
			   ) PAY_TERMS
			 , (SELECT CODE_NAME FROM BSA100T
					   WHERE MAIN_CODE = N'T005' AND A.TERMS_PRICE = SUB_CODE
						 AND COMP_CODE = N'MASTER'
			   ) TERMS_PRICE
			 , A.PASS_EXCHANGE_RATE
			 , A.PASS_AMT_UNIT
			 , A.PROJECT_NO
			 , (SELECT Z.PJT_NAME FROM BCM600T Z
					   WHERE Z.PJT_CODE = A.PROJECT_NO
						 AND COMP_CODE  = N'MASTER'
			   ) PROJECT_NAME
			 , A.SO_SER_NO
			 , A.LC_SER_NO
			 , B.LC_NO
			 , A.BL_SER_NO
			 , C.BL_NO
			 , (CASE WHEN (SELECT COUNT(EXPENSE_FLAG) FROM BTR100T
								  WHERE   CREATE_LOC = N'6'
									AND   BASIS_NUM = A.PASS_SER_NO
									AND   COMP_CODE = N'MASTER'
						  ) > 0 THEN 'Y'
					 WHEN (SELECT COUNT(EXPENSE_FLAG) FROM BTR100T
								  WHERE   CREATE_LOC = N'6'
									AND   BASIS_NUM = A.PASS_SER_NO
									AND   COMP_CODE = N'MASTER'
						  ) = 0 THEN 'N'
				END) AS EXPENSE_FLAG
			 , A.REMARKS1
			 , A.REMARKS2
			 , A.REMARKS3
			 --20191202 CNRK
			 , A.PASS_AMT
		  FROM TID100T A LEFT OUTER JOIN TIB100T B ON A.DIV_CODE  = B.DIV_CODE
												  AND A.LC_SER_NO = B.LC_SER_NO
												  AND A.COMP_CODE = B.COMP_CODE
						 LEFT OUTER JOIN TIC100T C ON A.DIV_CODE  = C.DIV_CODE
												  AND A.BL_SER_NO = C.BL_SER_NO
												  AND A.COMP_CODE = C.COMP_CODE
		 WHERE A.PASS_SER_NO = A.PASS_SER_NO
		   AND A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.INVOICE_DATE &gt;= #{INVOICE_DATE_FR}
		   AND A.INVOICE_DATE &lt;= #{INVOICE_DATE_TO}
		   <if test="@foren.Ognl@isNotEmpty(PASS_SER_NO)">
		   AND A.PASS_SER_NO LIKE #{PASS_SER_NO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(EXPORTER)">
		   AND A.EXPORTER  LIKE #{EXPORTER}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TERMS_PRICE)">
		   AND A.TERMS_PRICE  = #{TERMS_PRICE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_TERMS)">
		   AND A.PAY_TERMS = #{PAY_TERMS}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BL_NO)">
		   AND ISNULL(C.BL_NO, '') = #{BL_NO}
		   </if>
		 ORDER BY A.PASS_SER_NO DESC
	</select>

	<select id="popupServiceImpl.incomOfferNoPopup" parameterType="Map" resultType="rMap">
		-- UTiFuncKrv.Public[fnOfferMaster] Query01
		 SELECT
			   A.DIV_CODE, A.SO_SER_NO  AS OFFER_NO
			   ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.Date_Depart) DATE_DEPART
			   ,A.IMPORTER
			   ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTERNM
			   ,A.EXPORTER
			   ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTERNM
			   ,A.PAY_TERMS	 --결제조건
			   ,A.PAY_DURING	--결제기간
			   ,A.TERMS_PRICE   --가격조건
			   ,A.PAY_METHODE   --결제방법
			   ,A.METHD_CARRY   --운송방법
			   ,A.DEST_PORT	 --도착항
			   ,A.DEST_PORT_NM  --도착항명
			   ,A.SHIP_PORT	 --선적항
			   ,A.SHIP_PORT_NM  --선적항명
			   ,A.DEST_FINAL	--최종목적지
			   ,A.PLACE_DELIVERY  --인도장소
			   ,A.EXCHANGE_RATE   --환율
			   ,A.AMT_UNIT	  --통화단위
			   ,A.SO_AMT		--외화금액
			   ,A.SO_AMT_WON	--원화금액
			   ,A.TRADE_TYPE
			   ,A.NATION_INOUT
			   ,A.PROJECT_NO
			   ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
			   , (SELECT  z.PJT_NAME from BCM600T Z
				   WHERE Z.PJT_CODE  = A.PROJECT_NO
					 AND Z.COMP_CODE = #{S_COMP_CODE}
				 ) PROJECT_NAME
			  ,(CASE WHEN  (SELECT COUNT(EXPENSE_FLAG) FROM	BTR100T
							 WHERE CREATE_LOC = N'6'
							   AND COMP_CODE  = #{S_COMP_CODE}
							   AND ORDER_NUM  = A.SO_SER_NO) > 0 THEN
				 'Y'
				WHEN (SELECT COUNT(EXPENSE_FLAG) FROM	BTR100T
					   WHERE CREATE_LOC = N'6'
						 AND COMP_CODE  = #{S_COMP_CODE}
						 AND ORDER_NUM  = A.SO_SER_NO) = 0 THEN
				'N'  END)
			  AS EXPENSE_FLAG
		 FROM TIA100T A
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(OFFER_NO)">
			 AND A.SO_SER_NO   LIKE #{OFFER_NO}+'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(FR_DATE)">
			 AND A.DATE_DEPART &gt;= #{FR_DATE}
		 </if>
		   <if test="@foren.Ognl@isNotEmpty(TO_DATE)">
			 AND A.DATE_DEPART &lt;= #{TO_DATE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(EXPORTER)">
			  AND A.EXPORTER	 LIKE #{EXPORTER}+'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(TERMS_PRICE)">
			  AND A.TERMS_PRICE  = #{TERMS_PRICE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PAY_METHODE)">
			  AND A.PAY_METHODE  = #{PAY_METHODE}
		 </if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			  AND A.DIV_CODE  = #{DIV_CODE}
		 </if>
		 ORDER BY A.SO_SER_NO DESC
	</select>

	<select id="popupServiceImpl.incomBlNoPopup" parameterType="Map" resultType="rMap">
		-- UTiFuncKrv.Public[fnBLMaster] Query01
		SELECT
			  A.DIV_CODE, A.BL_SER_NO, A.BL_NO
			 ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.BL_DATE) BL_DATE
			 ,A.IMPORTER
			 ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTER_NM
			 ,A.EXPORTER
			 ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTER_NM
			 ,A.EXCHANGE_RATE
			 ,A.AMT_UNIT
			 ,(SELECT B.CODE_NAME FROM BSA100T B
				WHERE B.SUB_CODE  = A.PAY_TERMS AND MAIN_CODE = N'T006'
				  AND B.COMP_CODE = #{S_COMP_CODE}
			   ) PAY_TEMRS
			 ,A.PAY_METHODE
			 ,(SELECT B.CODE_NAME FROM BSA100T B
				WHERE B.SUB_CODE = A.TERMS_PRICE AND MAIN_CODE = N'T005'
				  AND B.COMP_CODE = #{S_COMP_CODE}
			  ) TERMS_PRICE
			 ,A.PAY_DURING
			 ,A.SO_SER_NO , A.LC_SER_NO
			 ,A.VESSEL_NAME
			 ,A.VESSEL_NATION_CODE
			 ,A.DEST_PORT
			 ,A.DEST_PORT_NM
			 ,A.SHIP_PORT
			 ,A.SHIP_PORT_NM
			 ,A.PACKING_TYPE
			 ,A.GROSS_WEIGHT
			 ,A.WEIGHT_UNIT
			 ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.DATE_SHIPPING) DATE_SHIPPING
			 ,ISNULL(A.BL_AMT,0) BL_AMT
			 ,ISNULL(A.BL_AMT_WON,0) BL_AMT_WON
			 ,A.TRADE_TYPE
			 ,A.NATION_INOUT
			 ,A.PROJECT_NO
			 ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
			 ,(SELECT Z.PJT_NAME FROM BCM600T Z
				WHERE Z.PJT_CODE  = A.PROJECT_NO
				  AND Z.COMP_CODE = #{S_COMP_CODE}
			   ) PROJECT_NAME
			 ,(CASE WHEN (SELECT	COUNT(EXPENSE_FLAG) FROM BTR100T
						   WHERE   CREATE_LOC = N'6'
							 AND   COMP_CODE  = #{S_COMP_CODE}
							 AND   BL_NUM	 = A.BL_SER_NO)  > 0 THEN
				   'Y'
			   WHEN (SELECT   COUNT(EXPENSE_FLAG) FROM BTR100T
					  WHERE   CREATE_LOC = N'6'
						AND   COMP_CODE  = #{S_COMP_CODE}
						AND   BL_NUM = A.BL_SER_NO) = 0 THEN
				   'N'  END)
			  AS EXPENSE_FLAG
			, B.INVOICE_NO  AS INVOICE_NO
			, B.CUSTOMS	 AS CUSTOMS
			, B.EP_TYPE	 AS EP_TYPE
			, C.LC_NO	   AS LC_NO
		 FROM			TIC100V A WITH (NOLOCK)
			  INNER JOIN TIC100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
												AND B.DIV_CODE  = A.DIV_CODE
												AND B.BL_SER_NO = A.BL_SER_NO
			  LEFT  JOIN TIB100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
												AND C.DIV_CODE  = B.DIV_CODE
												AND C.LC_SER_NO = B.LC_SER_NO
		 WHERE A.BL_SER_NO  = A.BL_SER_NO
		   AND A.COMP_CODE  = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
			AND A.BL_SER_NO	LIKE #{BL_SER_NO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">
			AND A.BL_DATE	  &gt;= #{BL_DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">
			AND A.BL_DATE	  &lt;= #{BL_DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(EXPORTER)">
			AND A.EXPORTER	 = #{EXPORTER}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE	 = #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BL_NO)">
			AND A.BL_NO		LIKE #{BL_NO}
		   </if>
			ORDER BY A.DIV_CODE, A.BL_SER_NO DESC, A.BL_DATE
	</select>

	<select id="popupServiceImpl.deliveryPopup" parameterType="Map" resultType="rMap">
		--zfS_PopUp.vbs[DVRY_CUST_CD]
		SELECT  DVRY_CUST_SEQ		  AS DELIVERY_CODE
			  , DVRY_CUST_NM		   AS DELIVERY_NAME
			  , ISNULL(DVRY_CUST_PRSN,  ' ') AS DVRY_CUST_PRSN
			  , ISNULL(DVRY_CUST_TEL, ' ')   AS DVRY_CUST_TEL
			  , ISNULL(DVRY_CUST_ADD, ' ')   AS DVRY_CUST_ADD
		  FROM SCM100T A WITH (NOLOCK)
			 INNER JOIN BCM100T B WITH (NOLOCK) ON  A.COMP_CODE=B.COMP_CODE AND A.CUSTOM_CODE	 = B.CUSTOM_CODE
	   WHERE A.COMP_CODE = #{S_COMP_CODE}
		 AND B.USE_YN		 != 'N'
	   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		 AND A.CUSTOM_CODE	 = #{CUSTOM_CODE}
	   </if>

	   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 AND A.DVRY_CUST_NM LIKE #{TXT_SEARCH} + '%'
	   </if>
	   <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(DELIVERY_NAME)">
				AND A.DVRY_CUST_NM LIKE #{DELIVERY_NAME} + '%'
			</if>
	   </if>
	   ORDER BY A.DVRY_CUST_SEQ

	</select>
	<select id="popupServiceImpl.progWorkCode" parameterType="Map" resultType="rMap">
		<if test="@foren.Ognl@isEmpty(TEST)">
		   /* --uniLITE5Popup.CPopup[getProgWorkCode] Query01 */
			SELECT A.PROG_WORK_CODE
				 , A.PROG_WORK_NAME
				 , A.PROG_UNIT
				 , A.STD_TIME
			  FROM PBS200T       A WITH (NOLOCK)
			  LEFT JOIN PBS300T B WITH (NOLOCK) ON  B.COMP_CODE        = A.COMP_CODE
                                                 AND B.DIV_CODE         = A.DIV_CODE
                                                 AND B.WORK_SHOP_CODE   = A.WORK_SHOP_CODE
                                                 AND B.PROG_WORK_CODE   = A.PROG_WORK_CODE
			 WHERE A.DIV_CODE		   = #{DIV_CODE}
			   AND A.USE_YN			 = N'Y'
			   <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			   AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND (A.PROG_WORK_CODE LIKE #{TXT_SEARCH} + '%'
				OR A.PROG_WORK_NAME LIKE '%'+ #{TXT_SEARCH} + '%')
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
					<if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
					AND (A.PROG_WORK_CODE LIKE #{PROG_WORK_CODE} + '%'
					OR A.PROG_WORK_NAME LIKE '%'+ #{PROG_WORK_CODE} + '%' )
					</if>
					<if test="@foren.Ognl@isNotEmpty(PROG_WORK_NAME)">
					AND (A.PROG_WORK_CODE LIKE #{PROG_WORK_NAME} + '%'
					OR A.PROG_WORK_NAME LIKE '%'+ #{PROG_WORK_NAME} + '%' )
					</if>
			   </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND B.ITEM_CODE = #{ITEM_CODE}
               </if>
			   AND A.COMP_CODE		  = #{S_COMP_CODE}
			 GROUP BY A.PROG_WORK_CODE, A.PROG_WORK_NAME, A.PROG_UNIT, A.STD_TIME
			 ORDER BY A.PROG_WORK_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TEST)">
		   /* --uniLITE5Popup.CPopup[getProgWorkCode] Query02 */
			SELECT A.PROG_WORK_CODE
				 , A.PROG_WORK_NAME
				 , A.PROG_UNIT
			  FROM PBS200T A WITH (NOLOCK)
				 , PMP100T B WITH (NOLOCK)

              INNER JOIN PBS300T C WITH (NOLOCK) ON  C.COMP_CODE        = A.COMP_CODE
                                                 AND C.DIV_CODE         = A.DIV_CODE
                                                 AND C.WORK_SHOP_CODE   = A.WORK_SHOP_CODE
                                                 AND C.PROG_WORK_CODE   = A.PROG_WORK_CODE
			 WHERE B.DIV_CODE		   = #{DIV_CODE}
			   AND A.USE_YN			 = N'Y'
			   AND (B.PROG_WORK_CODE LIKE #{PROG_WORK_CODE} + '%'
				 OR A.PROG_WORK_NAME LIKE #{PROG_WORK_NAME} + '%')
			   AND B.WKORD_NUM		  = #{WKORD_NUM}
			   AND B.PROG_WORK_CODE	 = A.PROG_WORK_CODE
			   AND A.COMP_CODE		  = #{S_COMP_CODE}
               <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
               AND B.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND B.ITEM_CODE = #{ITEM_CODE}
               </if>
             GROUP BY PROG_WORK_CODE, PROG_WORK_NAME, PROG_UNIT
			 ORDER BY A.PROG_WORK_CODE
		 </if>
	</select>

	<select id="popupServiceImpl.equipCode" parameterType="Map" resultType="rMap">
		/* --uniLITE5Popup.CPopup[getEquipCode] Query02 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.EQU_CODE			AS EQUIP_CODE
			 , A.EQU_NAME			AS EQUIP_NAME
			 , A.EQU_SPEC			AS EQUIP_SPEC
			 , A.EQU_TYPE			AS EQUIP_TYPE
			 , A.BUY_DATE			AS DATE_PURCHASE
			 , A.BUY_COMP			AS PURCHASE_NAME
			 , A.BUY_AMT			AS PURCHASE_AMT
			 , C.CUSTOM_NAME		AS MAKER_NAME
			 , A.PRODT_DATE			AS DATE_MAKER
			 , A.REMARK
			 , B.ITEM_CODE
			 , B.PROG_WORK_CODE
		  FROM EQU200T A WITH (NOLOCK)
		  LEFT JOIN S_WRE900T_KD B WITH (NOLOCK) ON  B.COMP_CODE        = A.COMP_CODE
		                                         AND B.DIV_CODE         = A.DIV_CODE
                                                 AND B.WORK_SHOP_CODE   = A.WORK_SHOP_CODE
		                                         AND B.EQUIP_CODE       = A.EQU_CODE
		  LEFT JOIN BCM100T C WITH (NOLOCK)		 ON  C.COMP_CODE        = A.COMP_CODE
												AND  C.CUSTOM_CODE		= A.CUSTOM_CODE
		 WHERE A.COMP_CODE		 = #{S_COMP_CODE}
		   AND A.DIV_CODE		 = #{S_DIV_CODE}
		   AND A.EQU_CODE_TYPE	 = '2'
		 <if test="@foren.Ognl@isNotEmpty(EQUIP_TYPE)">
		   AND A.EQU_TYPE		 = #{EQUIP_TYPE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (A.EQU_CODE LIKE #{TXT_SEARCH} + '%'
			OR A.EQU_NAME LIKE '%'+ #{TXT_SEARCH} + '%'
			OR A.EQU_SPEC LIKE '%'+ #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(EQUIP_CODE)">
			AND (A.EQU_CODE LIKE #{EQUIP_CODE} + '%'
			OR A.EQU_NAME LIKE '%'+ #{EQUIP_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(EQUIP_NAME)">
			AND (A.EQU_CODE LIKE #{EQUIP_NAME} + '%'
			OR A.EQU_NAME LIKE '%'+ #{EQUIP_NAME} + '%' )
			</if>
            <if test="@foren.Ognl@isNotEmpty(EQUIP_TYPE)">
            AND A.EQU_TYPE      = #{EQUIP_TYPE}
            </if>
		 </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND B.ITEM_CODE        = #{ITEM_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
           AND B.PROG_WORK_CODE   = #{PROG_WORK_CODE}
         </if>


		 ORDER BY A.EQU_CODE
	</select>

	<select id="popupServiceImpl.moldCode" parameterType="Map" resultType="rMap">
		 /* --uniLITE5Popup.CPopup[getEquipCode] Query02 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.EQU_CODE			AS MOLD_CODE
			 , A.EQU_NAME			AS MOLD_NAME
			 , A.EQU_TYPE			AS MOLD_TYPE
		 	 , A.MODEL_CODE		AS OEM_ITEM_CODE
		 	 , A.MOLD_STRC
			 , B.CAR_TYPE
			 , A.EQU_GRADE			AS ST_LOCATION
			 , A.MAX_PUNCH_Q		AS MAX_DEPR
			 , A.MIN_PUNCH_Q		AS CHK_DEPR
			 , A.WORK_Q				AS NOW_DEPR
			 , A.MTRL_TYPE			AS MOLD_MTL
			 , C.PROG_WORK_CODE
             , C.ITEM_CODE
		  FROM EQU200T       A WITH (NOLOCK)
		  LEFT JOIN BPR100T       B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
                                                 AND B.ITEM_CODE        = LEFT(A.EQU_CODE, 9)
          LEFT JOIN S_WRM900T_KD  C WITH (NOLOCK) ON C.COMP_CODE        = A.COMP_CODE
                                                 AND C.DIV_CODE         = A.DIV_CODE
                                                 AND C.WORK_SHOP_CODE   = A.WORK_SHOP_CODE
                                                 AND C.PROG_WORK_CODE   = A.PROG_WORK_CODE
                                                 AND C.ITEM_CODE        = A.ITEM_CODE
                                                 AND C.MOLD_CODE        = A.EQU_CODE
		 WHERE A.COMP_CODE		  = #{S_COMP_CODE}
		   AND A.DIV_CODE		   = #{DIV_CODE}
		   AND A.EQU_CODE_TYPE  = '1'  -- '1'금형, '2'설비
		 <if test="@foren.Ognl@isNotEmpty(MOLD_TYPE)">
		   AND A.EQU_TYPE		  = #{MOLD_TYPE}
		 </if>
         <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
           AND A.MODEL_CODE    LIKE #{OEM_ITEM_CODE} + '%'
         </if>
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (A.EQU_CODE LIKE #{TXT_SEARCH} + '%'
			OR A.EQU_NAME LIKE '%'+ #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(MOLD_CODE)">
			AND (A.EQU_CODE LIKE #{MOLD_CODE} + '%'
			OR A.EQU_NAME LIKE '%'+ #{MOLD_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(MOLD_NAME)">
			AND (A.EQU_CODE LIKE #{MOLD_NAME} + '%'
			OR A.EQU_NAME LIKE '%'+ #{MOLD_NAME} + '%' )
			</if>
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
            AND C.PROG_WORK_CODE    = #{PROG_WORK_CODE}
		 </if>
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND C.ITEM_CODE          = #{ITEM_CODE}
         </if>
		 ORDER BY A.EQU_CODE
	</select>


	<select id="popupServiceImpl.custPopup" parameterType="Map" resultType="rMap">
	/*  popupServiceImpl.custPopup */
		DECLARE  @CUSTOM_CODE_CNT	  INT
			   , @COMPANY_NUM_CNT	  INT
			   , @CUSTOM_NAME_CNT	  INT
			   , @TOP_NAME_CNT	  	  INT
			   , @COMP_CODE			NVARCHAR(8)
			   , @TXT_SEARCH2		  NVARCHAR(MAX)

		SET	@CUSTOM_CODE_CNT = 0
		SET	@COMPANY_NUM_CNT = 0
		SET	@CUSTOM_NAME_CNT = 0

		SET	@COMP_CODE	   = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		SET	@TXT_SEARCH2	 = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		SET	@TXT_SEARCH2	 = #{CUSTOM_NAME}
		</if>


        SELECT @CUSTOM_CODE_CNT = COUNT(*) FROM BCM100T A WITH (NOLOCK) WHERE A.COMP_CODE = @COMP_CODE AND (A.CUSTOM_CODE = @TXT_SEARCH2 OR ISNULL(@TXT_SEARCH2,'') = '')
        SELECT @COMPANY_NUM_CNT = COUNT(*) FROM BCM100T A WITH (NOLOCK) WHERE A.COMP_CODE = @COMP_CODE AND (A.COMPANY_NUM = @TXT_SEARCH2 OR ISNULL(@TXT_SEARCH2,'') = '')
        SELECT @CUSTOM_NAME_CNT = COUNT(*) FROM BCM100T A WITH (NOLOCK) WHERE A.COMP_CODE = @COMP_CODE AND (A.CUSTOM_NAME LIKE '%' + @TXT_SEARCH2 + '%' OR ISNULL(@TXT_SEARCH2,'') = '')
        SELECT @TOP_NAME_CNT = COUNT(*) FROM BCM100T A WITH (NOLOCK) WHERE A.COMP_CODE = @COMP_CODE AND (A.TOP_NAME LIKE '%' + @TXT_SEARCH2 + '%' OR ISNULL(@TXT_SEARCH2,'') = '')

   	SELECT   ROW_NUMBER() OVER(ORDER BY
   										<if test="RDO == 1">
   												A.CUSTOM_CODE
   										</if>
   										<if test="RDO != 1">
   												CASE M1.REF_ITEM
													 WHEN '0' THEN A.CUSTOM_NAME
													 WHEN '1' THEN A.CUSTOM_NAME1
													 WHEN '2' THEN A.CUSTOM_NAME2
															  ELSE A.CUSTOM_NAME
												END
   										</if>
   									) AS ROW_NUM
			 , A.CUSTOM_CODE
			 , CASE M1.REF_ITEM
					 WHEN '0' THEN A.CUSTOM_NAME
					 WHEN '1' THEN A.CUSTOM_NAME1
					 WHEN '2' THEN A.CUSTOM_NAME2
							  ELSE A.CUSTOM_NAME
				END											 AS CUSTOM_NAME
			 , CASE WHEN ISNULL(A.COMPANY_NUM, '') = '' THEN ''
					ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
						 SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
						 SUBSTRING(A.COMPANY_NUM,6,5)
			   END											  AS COMPANY_NUM
			 , ISNULL(A.TOP_NAME, '')						   AS TOP_NAME
			 , ISNULL(A.BUSINESS_TYPE, '')					  AS BUSINESS_TYPE
			 , ISNULL(A.COMP_CLASS, '')						 AS COMP_CLASS
			 , ISNULL(A.COMP_TYPE, '')						  AS COMP_TYPE
			 , ISNULL(A.ADDR1, '')							  AS ADDR1
			 , ISNULL(A.ADDR2, '')							  AS ADDR2
			 , SUBSTRING(A.ZIP_CODE,1,3) + '-' +
			   SUBSTRING(A.ZIP_CODE,4,3) 						AS ZIP_CODE
			 , ISNULL(A.TELEPHON, '')						   AS TELEPHON
			 , ISNULL(A.FAX_NUM, '')							AS FAX_NUM
			 , ISNULL(A.MAIL_ID, '')							AS MAIL_ID
			 , ISNULL(A.WON_CALC_BAS, '')					   AS WON_CALC_BAS
			 , ISNULL(A.TO_ADDRESS, '')						 AS TO_ADDRESS
			 , ISNULL(A.TAX_CALC_TYPE, '')					  AS TAX_CALC_TYPE
			 , ISNULL(A.TRANS_CLOSE_DAY, '')					AS TRANS_CLOSE_DAY
			 , ISNULL(A.RECEIPT_DAY, '')						AS RECEIPT_DAY
			 , ISNULL(A.TAX_TYPE, '')						   AS TAX_TYPE
			 , ISNULL(A.VAT_RATE, 10)						   AS VAT_RATE
			 , ISNULL(A.MONEY_UNIT, C.SUB_CODE)				 AS MONEY_UNIT
			 , ISNULL(A.BILL_TYPE, '')						  AS BILL_TYPE
			 , ISNULL(A.SET_METH, '')						   AS SET_METH
			 , ISNULL(A.CUSTOM_FULL_NAME, '')				   AS CUSTOM_FULL_NAME
			 , ISNULL(A.TOP_NUM, '')		  AS TOP_NUM
			 , ISNULL(A.BANK_CODE, '')						  AS BANK_CODE
			 , ISNULL(B.CUSTOM_NAME, '')						AS BANK_NAME
			 , ISNULL(A.REMARK, '')							 AS REMARK
			 , ISNULL(A.BANKBOOK_NUM, '')	 AS BANKBOOK_NUM
   			 , A.NATION_CODE									AS NATION_CODE
   			 , ISNULL(A.RETURN_CODE,'')							AS RETURN_CODE
			 , ISNULL(A.SERVANT_COMPANY_NUM, '')				AS SERVANT_COMPANY_NUM
   			 /* 계좌번호 코드화*/
   			 , D.BOOK_CODE										AS BOOK_CODE
			 , D.BOOK_NAME										AS BOOK_NAME
			 , D.BANK_CODE										AS BOOK_BANK_CODE
			 , D.BANK_NAME										AS BOOK_BANK_NAME

			 , Q.PRSN_NAME									  AS PRSN_NAME
			 , Q.HAND_PHON									  AS PRSN_HANDPHONE
			 , Q.MAIL_ID										AS PRSN_EMAIL
			 , CASE WHEN Q.TELEPHONE_NUM1 IS NULL THEN Q.TELEPHONE_NUM2
					ELSE Q.TELEPHONE_NUM1
			   END												AS PRSN_PHONE
			 , A.AGENT_TYPE
		  FROM		   BCM100T A WITH (NOLOCK)
			   LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
												AND B.CUSTOM_CODE = A.BANK_CODE
												AND B.CUSTOM_TYPE = '4'
			   LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
												AND C.MAIN_CODE   = N'B004'
												AND C.SUB_CODE   != '$'
												AND C.REF_CODE1   = 'Y'
			   /* 은행 계좌번호 코드로 변경 */
			   LEFT JOIN (SELECT *
							FROM (SELECT  AA.COMP_CODE
										, AA.CUSTOM_CODE
										, AA.BOOK_CODE
										, AA.BOOK_NAME
										, AA.BANK_CODE
										, BB.CUSTOM_NAME AS BANK_NAME
										, AA.MAIN_BOOK_YN
										, RANK() OVER(	PARTITION BY AA.COMP_CODE, AA.CUSTOM_CODE
														ORDER BY  AA.MAIN_BOOK_YN DESC, AA.BOOK_CODE ASC
													 ) AS RK
									FROM BCM130T AA WITH (NOLOCK)
									LEFT JOIN BCM100T BB WITH (NOLOCK) ON BB.COMP_CODE   = AA.COMP_CODE
												AND BB.CUSTOM_CODE = AA.BANK_CODE
												AND BB.CUSTOM_TYPE = '4'
									WHERE AA.COMP_CODE =#{S_COMP_CODE})  DD
							WHERE RK = 1  )	D
												 ON D.COMP_CODE   = A.COMP_CODE
												AND D.CUSTOM_CODE   = A.CUSTOM_CODE
												AND D.RK = 1
			   LEFT JOIN BSA300T M1 WITH (NOLOCK) ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
			   LEFT JOIN BCM120T Q
					  ON Q.COMP_CODE	= A.COMP_CODE
					 AND Q.CUSTOM_CODE	= A.CUSTOM_CODE
					 AND Q.MAIN_BILL_YN	= 'Y'
					 AND Q.SEQ			= (SELECT MIN(X.SEQ) AS SEQ
											 FROM BCM120T X WITH(NOLOCK)
											WHERE X.COMP_CODE		= Q.COMP_CODE
											  AND X.CUSTOM_CODE		= Q.CUSTOM_CODE
											  AND X.MAIN_BILL_YN	= 'Y')

		 WHERE   A.COMP_CODE	  = @COMP_CODE
		   AND (
                 (
                      ((A.CUSTOM_CODE = @TXT_SEARCH2 OR ISNULL(@TXT_SEARCH2,'') = '' ) AND @CUSTOM_CODE_CNT > 0)
                        OR  ((A.COMPANY_NUM = @TXT_SEARCH2 OR ISNULL(@TXT_SEARCH2,'') = '' ) AND @COMPANY_NUM_CNT > 0)
                        OR  ((A.CUSTOM_NAME LIKE '%' + @TXT_SEARCH2 + '%'  OR ISNULL(@TXT_SEARCH2,'') = '' )AND @CUSTOM_NAME_CNT > 0)
                        OR  ((A.TOP_NAME LIKE '%' + @TXT_SEARCH2 + '%'  OR ISNULL(@TXT_SEARCH2,'') = '' )AND @TOP_NAME_CNT > 0)
                 )
            OR ( A.COMP_CODE = @COMP_CODE
                 AND ( @CUSTOM_CODE_CNT = 0 AND @COMPANY_NUM_CNT = 0 AND @CUSTOM_NAME_CNT = 0)
                 AND (
                        (Replace(A.COMPANY_NUM, '-', '') LIKE'%'+ Replace(ISNULL(@TXT_SEARCH2,''), '-', '') + '%')
                         OR  (A.CUSTOM_NAME LIKE '%'+ ISNULL(@TXT_SEARCH2,'') + '%')
                         OR  (A.CUSTOM_CODE LIKE      ISNULL(@TXT_SEARCH2,'') + '%')
                     )
             )
         )

		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		   AND (ISNULL(A.COMPANY_NUM, '')			  LIKE  Replace( #{COMPANY_NUM} , '-', '')  + '%'
			OR  ISNULL(A.TOP_NUM, '') LIKE '%' + Replace( #{COMPANY_NUM} , '-', '')  + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
			 AND A.USE_YN = #{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND ISNULL(A.AGENT_TYPE,'') IN
			 <foreach collection="AGENT_TYPE" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
			AND A.CUSTOM_TYPE IN
			 <foreach collection="CUSTOM_TYPE" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>
		</if>


		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
		   AND ${ADD_QUERY}
		</if>


	</select>

	<select id="popupServiceImpl.agentCustPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.agentCustPopup */
		SELECT	 A.CUSTOM_CODE
			 , CASE M1.REF_ITEM
					 WHEN '0' THEN A.CUSTOM_NAME
					 WHEN '1' THEN A.CUSTOM_NAME1
					 WHEN '2' THEN A.CUSTOM_NAME2
							  ELSE A.CUSTOM_NAME
				END											AS CUSTOM_NAME
			 , CASE WHEN ISNULL(A.COMPANY_NUM, '') = '' THEN ''
					ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
						 SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
						 SUBSTRING(A.COMPANY_NUM,6,5)
			   END											AS COMPANY_NUM
			 , ISNULL(A.TOP_NAME, '')						AS TOP_NAME
			 , ISNULL(A.BUSINESS_TYPE, '')					AS BUSINESS_TYPE
			 , ISNULL(A.COMP_CLASS, '')						AS COMP_CLASS
			 , ISNULL(A.COMP_TYPE, '')						AS COMP_TYPE
			 , ISNULL(A.ADDR1, '')							AS ADDR1
			 , ISNULL(A.ADDR2, '')							AS ADDR2
			 , ISNULL(A.TELEPHON, '')						AS TELEPHON
			 , ISNULL(A.FAX_NUM, '')						AS FAX_NUM
			 , ISNULL(A.MAIL_ID, '')						AS MAIL_ID
			 , ISNULL(A.WON_CALC_BAS, '')					AS WON_CALC_BAS
			 , ISNULL(A.TO_ADDRESS, '')						AS TO_ADDRESS
			 , ISNULL(A.TAX_CALC_TYPE, '')					AS TAX_CALC_TYPE
			 , ISNULL(A.TRANS_CLOSE_DAY, '')				AS TRANS_CLOSE_DAY
			 , ISNULL(A.RECEIPT_DAY, '')					AS RECEIPT_DAY
			 , ISNULL(A.TAX_TYPE, '')						AS TAX_TYPE
			 , ISNULL(A.VAT_RATE, 10)						AS VAT_RATE
			 , ISNULL(A.MONEY_UNIT, C.SUB_CODE)				AS MONEY_UNIT
			 , ISNULL(A.BILL_TYPE, '')						AS BILL_TYPE
			 , ISNULL(A.SET_METH, '')						AS SET_METH
			 , ISNULL(A.AGENT_TYPE, '')						AS AGENT_TYPE
			 , ISNULL(A.AREA_TYPE, '')						AS AREA_TYPE
			 , ISNULL(A.CREDIT_YN, '')						AS CREDIT_YN
			 , ISNULL(A.TOT_CREDIT_AMT, 0)					AS TOT_CREDIT_AMT
			 , ISNULL(A.CREDIT_AMT, 0)						AS CREDIT_AMT
			 , ISNULL(A.CREDIT_YMD, '')						AS CREDIT_YMD
			 , ISNULL(A.BUSI_PRSN, '')						AS BUSI_PRSN

			 , ISNULL(A.COLLECTOR_CP,'')					AS COLLECTOR_CP  --수금거래처코드
			 , CASE M1.REF_ITEM
					 WHEN '1' THEN B1.CUSTOM_NAME1
					 WHEN '2' THEN B1.CUSTOM_NAME2
					 ELSE B1.CUSTOM_NAME
					END 									AS COLLECTOR_NM  --수금거래처명

			 , ISNULL(A.COLLECT_DAY, '')					AS COLLECT_DAY
			 , ISNULL(A.COLLECT_CARE, '2')					AS COLLECT_CARE
			 , ISNULL(A.REMARK, '')							AS REMARK
			 , ISNULL(A.TOP_NUM, '')						AS TOP_NUM
			 , ISNULL(A.CREDIT_OVER_YN, 'N')				AS CREDIT_OVER_YN
			 , ISNULL(A.BILL_DIV_CODE, '')					AS BILL_DIV_CODE
			 , ISNULL(A.SERVANT_COMPANY_NUM, '')			AS SERVANT_COMPANY_NUM
			 , D.PRSN_NAME									AS PRSN_NAME
			 , D.HAND_PHON									AS HAND_PHON
			 , A.HAND_PHON									AS SMS_MOBIL
			 , D.MAIL_ID									AS PRSN_EMAIL
			 , ISNULL(A.DELIVERY_UNION, '')					AS DELIVERY_UNION
			 , CASE WHEN D.TELEPHONE_NUM1 IS NULL THEN D.TELEPHONE_NUM2
					ELSE D.TELEPHONE_NUM1
			   END											AS PRSN_PHONE
			 , ISNULL(A.CHANNEL, '')						AS CHANNEL
			 , ISNULL(A.BILL_CUSTOM, '')					AS BILL_CUSTOM_CODE
			 , ISNULL(X.CUSTOM_NAME, '')					AS BILL_CUSTOM_NAME
			 --20190320 거래처 무역 정보 추가
			 , ISNULL(X1.PAY_TERMS, '')						AS PAY_TERMS
			 , ISNULL(X1.PAY_DURING, '')					AS PAY_DURING
			 , ISNULL(X1.PAY_METHODE1, '')					AS PAY_METHODE1
			 , ISNULL(X1.TERMS_PRICE, '')					AS TERMS_PRICE
			 , ISNULL(X1.COND_PACKING, '')					AS COND_PACKING
			 , ISNULL(X1.METH_CARRY, '')					AS METH_CARRY
			 , ISNULL(X1.METH_INSPECT, '')					AS METH_INSPECT
			 , ISNULL(X1.DEST_PORT, '')						AS DEST_PORT
			 , ISNULL(X1.SHIP_PORT, '')						AS SHIP_PORT
			 , ISNULL(X1.AGENT, '')							AS AGENT_CODE
			 , (SELECT CUSTOM_NAME
				  FROM BCM100T WITH(NOLOCK)
				 WHERE COMP_CODE = A.COMP_CODE
				   AND CUSTOM_CODE = X1.AGENT) 				AS AGENT_NAME
			 --20190812 추가
			 , ISNULL(A.NATION_CODE, '')					AS NATION_CODE
			 --20200824 추가
			 , ISNULL(C1.REF_CODE4, '')						AS UPN_CHECK
			 --20210202 추가
		     , A.TOP_NUM                                    AS REPRE_NUM

		    /* , unilite.fnCipherDecrypt(A.TOP_NUM, 'RR')     AS REPRE_NUM_EXPOS */

		     , A.BANKBOOK_NUM                               AS BANK_ACCOUNT

		    /* , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM, ''), '') = '' THEN ''
		            ELSE '***************'
		       END                                          AS BANK_ACCOUNT_EXPOS  */

		     , B.CUSTOM_NAME                                AS BANK_NAME
		  FROM		   BCM100T A WITH (NOLOCK)
			   LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
												AND B.CUSTOM_CODE = A.BANK_CODE
												AND B.CUSTOM_TYPE = '4'
			-- 수금거래처
			   LEFT JOIN BCM100T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
												AND B1.CUSTOM_CODE = A.COLLECTOR_CP

			   LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
												AND C.MAIN_CODE   = N'B004'
												AND C.SUB_CODE   != '$'
												AND C.REF_CODE1   = 'Y'
			   --20200824 추가
			   LEFT JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
												 AND C1.MAIN_CODE   = N'B012'
												 AND C1.SUB_CODE   != '$'
												 AND C1.SUB_CODE   = A.NATION_CODE
			   LEFT JOIN BSA300T M1 WITH (NOLOCK) ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
			   LEFT JOIN BCM120T D
					  ON D.COMP_CODE	= A.COMP_CODE
					 AND D.CUSTOM_CODE	= A.CUSTOM_CODE
					 AND D.MAIN_BILL_YN	= 'Y'
					 AND D.SEQ			= (SELECT MAX(X.SEQ) AS SEQ
											 FROM BCM120T X WITH(NOLOCK)
											WHERE X.COMP_CODE		= D.COMP_CODE
											  AND X.CUSTOM_CODE		= D.CUSTOM_CODE
											  AND X.MAIN_BILL_YN	= 'Y')
			   LEFT JOIN BCM100T X WITH (NOLOCK) ON X.COMP_CODE   = A.COMP_CODE
												AND X.CUSTOM_CODE = A.BILL_CUSTOM
			    LEFT JOIN BCM103T X1 WITH (NOLOCK) ON X1.COMP_CODE = A.COMP_CODE
												 AND X1.CUSTOM_CODE = A.CUSTOM_CODE
			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
		 		AND (A.CUSTOM_CODE LIKE #{TXT_SEARCH2} + '%'
			 	 OR A.CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND(		Replace(#{CUSTOM_CODE}, '-', '')	  IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(ISNULL(A.COMPANY_NUM, ''), '-', ''))
					OR (   Replace(#{CUSTOM_CODE}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(ISNULL(A.COMPANY_NUM, ''), '-', ''))
						AND (	Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_CODE}, '-', '') + '%'
							  OR Replace(A.CUSTOM_NAME, '-', '') LIKE'%'+ Replace(#{CUSTOM_CODE}, '-', '') + '%' )
						)
		 		  )
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			   AND(		Replace(#{CUSTOM_NAME}, '-', '')	  IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(ISNULL(A.COMPANY_NUM, ''), '-', ''))
					OR (   Replace(#{CUSTOM_NAME}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(ISNULL(A.COMPANY_NUM, ''), '-', ''))
						AND (	Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_NAME}, '-', '') + '%'
							  OR Replace(A.CUSTOM_NAME, '-', '') LIKE '%'+ Replace(#{CUSTOM_NAME}, '-', '') + '%' )
						)
		 		  )
			  </if>
			</if>

		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		   AND (ISNULL(A.COMPANY_NUM, '')			  LIKE  Replace( #{COMPANY_NUM} , '-', '')  + '%'
			OR  ISNULL(A.TOP_NUM, '') LIKE '%' + Replace( #{COMPANY_NUM} , '-', '')  + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
			 AND A.USE_YN = #{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND A.AGENT_TYPE = #{AGENT_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
			AND A.AREA_TYPE	  = #{AREA_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
			AND A.CUSTOM_TYPE IN
			 <foreach collection="CUSTOM_TYPE" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_TYPE)">
			<if test="@foren.Ognl@isNotEmpty(AGENT_CUST_FILTER)">
				AND A.CUSTOM_TYPE IN
				<foreach collection="AGENT_CUST_FILTER" item="item" separator="," close=")" open="(">
							  #{item}
				</foreach>
			</if>
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
			AND ${ADD_QUERY1} #{S_COMP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
			${ADD_QUERY2} #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
			${ADD_QUERY3}
		</if>
		<if test="RDO == 1">
			ORDER BY	A.CUSTOM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE M1.REF_ITEM
					 WHEN '0' THEN A.CUSTOM_NAME
					 WHEN '1' THEN A.CUSTOM_NAME1
					 WHEN '2' THEN A.CUSTOM_NAME2
							  ELSE A.CUSTOM_NAME
				END
		</if>
	</select>
	<select id="popupServiceImpl.bankPopup" parameterType="Map" resultType="rMap">
		SELECT CUSTOM_CODE	 AS BANK_CODE
			 , CUSTOM_NAME	 AS BANK_NAME
		  FROM BCM100T WITH (NOLOCK)
   		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND CUSTOM_TYPE = '4'
		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	 		AND (CUSTOM_CODE LIKE #{TXT_SEARCH} + '%'
		 	OR CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
			AND (CUSTOM_CODE LIKE #{BANK_CODE} + '%'
		 	OR CUSTOM_NAME LIKE '%'+ #{BANK_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)">
			AND (CUSTOM_CODE LIKE #{BANK_NAME} + '%'
		 	OR CUSTOM_NAME LIKE '%'+ #{BANK_NAME} + '%' )
			</if>
		 </if>
		   AND START_DATE					&lt;= CONVERT(VARChar(8), GETDATE(), 112)
		   AND CASE WHEN ISNULL(STOP_DATE,'') = '' THEN '99999999'
												   ELSE STOP_DATE END  &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
		   AND USE_YN = N'Y'
		 ORDER BY CUSTOM_CODE
	</select>
	<select id="popupServiceImpl.ZipCodePopup" parameterType="Map" resultType="rMap">
		/* uniLITE5Popup.CPopup[fnZipCode] Query01 */
	<if test="ADDR_TYPE == &quot;A&quot;">
		SELECT
			   SUBSTRING(ZIP_CODE,1,3) + '-' +
			   SUBSTRING(ZIP_CODE,4,3) AS ZIP_CODE
			 , ZIP_NAME
			 , ZIP_CODE1_NAME
			 , ZIP_CODE2_NAME
			 , ZIP_CODE3_NAME
			 , ZIP_CODE5_NAME
			 , CONVERT(NVARCHAR(40), '') as ZIP_CODE4_NAME
			 , ZIP_CODE4_NAME AS ZIP_CODE7_NAME
			 , CONVERT(NVARCHAR(40), '') LAW_DONG

		  FROM BCM300T WITH (NOLOCK)
		  WHERE 1=1
		  <if test="USELIKE == false">
			AND ZIP_NAME  = #{TXT_SEARCH}
		  </if>
		  <if test="USELIKE != false">
			AND ZIP_NAME  LIKE '%' + #{TXT_SEARCH} + '%'
		  </if>
		 <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
			 AND ZIP_CODE		  = REPLACE(#{ZIP_CODE},'-','')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(O_ZIP_CODE)">
			AND ZIP_CODE &gt; REPLACE(#{O_ZIP_CODE},'-','')
		 </if>
		  ORDER BY ZIP_CODE
	</if>
	<if test="ADDR_TYPE != &quot;A&quot;">
	   SELECT
			   SUBSTRING(ZIP_CODE,1,3) + '-' +
			   SUBSTRING(ZIP_CODE,4,3) AS ZIP_CODE
			 , ZIP_NAME
			 , ZIP_CODE1_NAME   /* 시 */
			 , ZIP_CODE2_NAME   /* 군구 */
			 , ZIP_CODE3_NAME   /* 읍 */
			 , ZIP_CODE5_NAME +'-'+ ZIP_CODE6_NAME AS ZIP_CODE5_NAME	/* 건물번호 */
			 , ZIP_CODE4_NAME   /* 도로명 */
			 , ZIP_CODE7_NAME /* 다량배달처명 */
			 , LAW_DONG
		  FROM BCM310T WITH (NOLOCK)
		  WHERE 1=1
		 <if test="@foren.Ognl@isEmpty(ZIP_CODE)">
		 	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	(ZIP_CODE3_NAME LIKE  #{TXT_SEARCH} + '%'	/* 읍/면/동 */
				 OR ZIP_CODE4_NAME LIKE  #{TXT_SEARCH} + '%'	 /* 도로 */
				 OR ZIP_CODE7_NAME LIKE  #{TXT_SEARCH} + '%'	 /* 집합건물 */
				 OR LAW_DONG	   LIKE  #{TXT_SEARCH} + '%' )		 /* 법정동 */
		 	</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			AND ZIP_CODE IS NULL
			</if>
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
			 AND ZIP_CODE = REPLACE(#{ZIP_CODE},'-','')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(O_ZIP_CODE)">
		 	 AND ZIP_CODE &gt; REPLACE(#{O_ZIP_CODE},'-','')
		 </if>
		  ORDER BY ZIP_CODE
	</if>
	</select>
	<select id="popupServiceImpl.userPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.userPopup */
		/* uniLITE5Popup.CPopup[getUserPopup] Query01 */
		SELECT A.USER_ID
			 , A.USER_NAME
			 , A.DEPT_CODE
			 , B.TREE_NAME AS DEPT_NAME
			 , #{S_COMP_CODE}	AS COMP_CODE
			 , A.SYTALK_ID
			 , A.DIV_CODE
		  FROM	  BSA300T A WITH (NOLOCK)
		  LEFT JOIN BSA210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										   AND B.TREE_CODE = A.DEPT_CODE

		 WHERE 1 = 1
		   AND uniLITE.fnCheckCompAuth(#{S_COMP_CODE}, A.USER_ID) = 'Y'
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.USER_ID   LIKE #{TXT_SEARCH} + '%'
			OR  A.USER_NAME LIKE '%' + #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(USER_ID)">
				<if test="USELIKE == false">
					 AND (A.USER_ID = #{USER_ID}
					OR A.USER_NAME = #{USER_ID})
				</if>
				<if test="USELIKE != false">
					AND (A.USER_ID LIKE #{USER_ID}+'%'
					OR  A.USER_NAME LIKE '%'+ #{USER_ID} + '%')
				</if>
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
				<if test="USELIKE == false">
					AND (A.USER_ID = #{USER_NAME}
					OR A.USER_NAME = #{USER_NAME})
				</if>
				<if test="USELIKE != false">
					AND (A.USER_ID LIKE #{USER_NAME}+'%'
					OR  A.USER_NAME LIKE '%'+ #{USER_NAME} + '%')
				</if>
		  </if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
		   AND ${ADD_QUERY}
		</if>
		 ORDER BY A.USER_ID ASC

	</select>

	<select id="popupServiceImpl.userNoCompPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.userPopup */
		/* uniLITE5Popup.CPopup[getUserPopup] Query01 */
		SELECT A.USER_ID
			 , A.USER_NAME
			 , A.DEPT_CODE
			 , B.TREE_NAME AS DEPT_NAME
		  FROM	  BSA300T A WITH (NOLOCK)
		 INNER JOIN BSA210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										   AND B.TREE_CODE = A.DEPT_CODE

		 WHERE 1=1
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.USER_ID   LIKE #{TXT_SEARCH} + '%'
			OR  A.USER_NAME LIKE '%' + #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(USER_ID)">
				<if test="USELIKE == false">
					AND A.USER_ID = #{USER_ID}
				</if>
				<if test="USELIKE != false">
					AND A.USER_ID LIKE #{USER_ID}+'%'
				</if>
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
				<if test="USELIKE == false">
					AND A.USER_NAME = #{USER_NAME}
				</if>
				<if test="USELIKE != false">
					AND A.USER_NAME LIKE '%' + #{USER_NAME}+'%'
				</if>
		  </if>
		 ORDER BY A.USER_ID ASC
	</select>

	<select id="popupServiceImpl.employeePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.employeePopup */
		/* uniLITE5Popup.CPopup[getHumanMasterAu] Query01 */
		SELECT  H.NAME
			  , H.PERSON_NUMB
			  , H.POST_CODE
			  , M1.CODE_NAME							  AS POST_CODE_NAME
			  , H.DEPT_CODE
			  , H.DEPT_NAME
			  , uniLITE.fnGetUserDate(H.COMP_CODE, H.JOIN_DATE)			  AS JOIN_DATE
			  , H.ABIL_CODE
			  , M2.CODE_NAME							   AS ABIL_NAME
			  , CASE WHEN H.RETR_DATE = '00000000' THEN ''
					 ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.RETR_DATE)
				END														  AS RETR_DATE
			  , H.SECT_CODE
			  , M3.DIV_NAME												  AS SECT_NAME
			  , H.JOB_CODE
			  , M4.CODE_NAME							   AS JOB_NAME
			  , H.PAY_CODE
			  , H.AFFIL_CODE
			  , H.TAX_CODE
			  , H.OT_KIND
			  , H.PAY_PROV_FLAG
			  , H.EMPLOY_TYPE
			  , H.MED_GRADE
			  , H.ANU_BASE_I
			  , H.SPOUSE
			  , H.SUPP_AGED_NUM
			  , H.BONUS_KIND
			  -- , ISNULL(unilite.fnCipherDecrypt(H.REPRE_NUM,'RR'), '')					AS REPRE_NUM
			  , ''					AS REPRE_NUM
			  , H.WOMAN
			  , H.ZIP_CODE
			  , H.KOR_ADDR
			  , H.DEFORM_NUM
			  , H.AGED_NUM
			  , H.BRING_CHILD_NUM
			  , ISNULL(H.ANNUAL_SALARY_I,0)								  AS ANNUAL_SALARY_I
			  , ISNULL(H.WAGES_STD_I	,0)								  AS WAGES_STD_I
			  , ISNULL(H.BONUS_STD_I	,0)								  AS BONUS_STD_I
			  , ISNULL(H.COM_DAY_WAGES  ,0)								  AS COM_DAY_WAGES
			  , ISNULL(H.COM_YEAR_WAGES ,0)								  AS COM_YEAR_WAGES
			  , H.MED_INSUR_NO
			  , M5.REF_CODE1												 AS PAY_PROV_FLAG_DAT
			  , H.SEX_CODE
			  , B1.STD_AMOUNT_I											  AS STD_AMOUNT_I_01
			  , B2.STD_AMOUNT_I											  AS STD_AMOUNT_I_02
			  , B1.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_01
			  , B2.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_02
			  , H.TELEPHON
			  , H.DIV_CODE
			  , H.MAKE_SALE
			  , H.COST_KIND
			  , H.MED_AVG_I
			  , H.NATION_CODE
			  , H.LIVE_GUBUN
			  , H.CHILD_20_NUM
			  , H.PENS_GRADE
			  , H.MED_INSUR_I
			  , H.ANU_INSUR_I
			  , H.HIRE_INSUR_TYPE
			  , H.WORK_COMPEN_YN
			  , ISNULL(H.REPRE_NUM, '')					AS REPRE_NUM2
			  , H.DED_TYPE
			  , 0															AS DOC_ID
			  , ISNULL(H.BANK_CODE1, '')									 AS BANK_CODE1
			  , ISNULL(C1.CUSTOM_NAME, '')								   AS BANK_NAME1
			  --, ISNULL(unilite.fnCipherDecrypt(H.BANK_ACCOUNT1,''), '')				 AS BANK_ACCOUNT1   -- 2016.04.12 추가

			  , ''				 AS BANK_ACCOUNT1
			  , H.PAY_GRADE_01
			  , ISNULL(M8.CODE_NAME, '') AS PAY_GRADE_01_NAME
			  , H.PAY_GRADE_02
			  , H.PAY_GRADE_03
			  , H.PAY_GRADE_04
			  , H.FOREIGN_NUM
              , H.KNOC
              , H.YEAR_GRADE
              , H.PAY_GRADE_BASE
              , H.YEAR_GRADE_BASE

		FROM				HUM100T   H
				LEFT  JOIN  HBS500T   B1 WITH (NOLOCK) ON B1.COMP_CODE  = H.COMP_CODE
													  AND B1.GRADE	  = H.MED_GRADE
													  AND B1.INSUR_TYPE = 2
				LEFT  JOIN  HBS500T   B2 WITH (NOLOCK) ON B2.COMP_CODE  = H.COMP_CODE
													  AND B2.GRADE	  = H.PENS_GRADE
													  AND B2.INSUR_TYPE = 1
				LEFT  JOIN  BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = H.COMP_CODE
													  AND C1.CUSTOM_CODE = H.BANK_CODE1
													  AND C1.CUSTOM_TYPE = '4'			-- 2016.04.12 추가
				LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = H.COMP_CODE
													  AND M1.MAIN_CODE  = 'H005'
													  AND M1.SUB_CODE   = H.POST_CODE
				LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = H.COMP_CODE
													  AND M2.MAIN_CODE  = 'H006'
													  AND M2.SUB_CODE   = H.ABIL_CODE
				LEFT  JOIN  BOR120T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = H.COMP_CODE
													  AND M3.DIV_CODE   = H.SECT_CODE
				LEFT  JOIN  BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = H.COMP_CODE
													  AND M4.MAIN_CODE  = 'H008'
													  AND M4.SUB_CODE   = H.JOB_CODE
				LEFT  JOIN  BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = H.COMP_CODE
													  AND M5.MAIN_CODE  = 'H031'
													  AND M5.SUB_CODE   = H. PAY_PROV_FLAG
				LEFT  JOIN  BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = H.COMP_CODE
													  AND M6.MAIN_CODE  = 'H011'
													  AND M6.SUB_CODE   = H.PAY_GUBUN
				<if test="ADD_QUERY == &quot;Y&quot;">
				INNER JOIN  BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE = H.COMP_CODE
													  AND M7.MAIN_CODE = 'J517'
													  AND M7.SUB_CODE  = H.PERSON_NUMB
				</if>
				LEFT  JOIN  BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE  = H.COMP_CODE
													  AND M8.MAIN_CODE  = 'HX09'
													  AND M8.SUB_CODE   = H.PAY_GRADE_01

				<if test="DEPT_AUTH == &quot;Y&quot;">
                INNER JOIN BSA570T    M9 WITH (NOLOCK) ON M9.COMP_CODE = H.COMP_CODE
                                                      AND M9.USER_ID   = #{S_USER_ID}
                                                      AND M9.DEPT_CODE = H.DEPT_CODE
                                                      AND M9.AUTHORITY_YN = 'Y'
                </if>
				LEFT  JOIN  HBS400T   M10 WITH (NOLOCK) ON M10.COMP_CODE = H.COMP_CODE
                                                       AND M10.COMPANY_CODE = '1'
			WHERE   H.COMP_CODE		= #{S_COMP_CODE}
			  AND   uniLITE.fnCheckCompDivAuth(H.COMP_CODE, H.DIV_CODE, #{S_USER_ID}) = 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (H.PERSON_NUMB LIKE #{TXT_SEARCH} + '%'
			 	OR H.NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				AND (H.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
			 	OR H.NAME LIKE '%'+ #{PERSON_NUMB} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(NAME)">
				AND (H.PERSON_NUMB LIKE #{NAME} + '%'
			 	OR H.NAME LIKE '%'+ #{NAME} + '%' )
				</if>
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPT_SEARCH)">
				AND (H.DEPT_CODE LIKE #{DEPT_SEARCH} + '%'
				OR H.DEPT_NAME LIKE '%'+ #{DEPT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(DEPT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					AND (H.DEPT_CODE LIKE #{DEPT_CODE} + '%'
					 OR  H.DEPT_CODE LIKE '%'+ #{DEPT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
					AND (H.DEPT_NAME LIKE #{DEPT_NAME} + '%'
					 OR  H.DEPT_NAME LIKE '%'+ #{DEPT_NAME} + '%' )
				</if>
			 </if>

			<if test="@foren.Ognl@isNotEmpty(BASE_DT)">

				AND	(	H.RETR_DATE		= '00000000'
						 OR H.RETR_DATE	  &gt;= CONVERT(nvarchar(10), #{BASE_DT} , 112)
					   )
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
				AND	 H.PAY_GUBUN = #{PAY_GUBUN}
			</if>

			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_01)">
				AND H.DEPT_CODE = #{DEPT_CODE_01}
			 </if>
			 AND  (M10.DAY_LABOR_RULE = '2' OR (M10.DAY_LABOR_RULE = '1' AND (H.PAY_GUBUN != '2' OR (H.PAY_GUBUN = '2' AND H.PAY_GUBUN2 = '2'))))

			ORDER   BY H.NAME ASC
	</select>


	<select id="popupServiceImpl.employeePopup1" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.employeePopup1 */
		/* uniLITE5Popup.CPopup[getHumanMasterAu] Query01 */
		SELECT  H.NAME
			  , H.PERSON_NUMB
			  , H.POST_CODE
			  , M1.CODE_NAME												 AS POST_CODE_NAME
			  , H.DEPT_CODE
			  , H.DEPT_NAME
			  , uniLITE.fnGetUserDate(H.COMP_CODE, H.JOIN_DATE)			  AS JOIN_DATE
			  , H.ABIL_CODE
			  , M2.CODE_NAME												 AS ABIL_NAME
			  , CASE WHEN H.RETR_DATE = '00000000' THEN ''
					 ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.RETR_DATE)
				END														  AS RETR_DATE
			  , H.SECT_CODE
			  , M3.DIV_NAME												  AS SECT_NAME
			  , H.JOB_CODE
			  , M4.CODE_NAME												 AS JOB_NAME
			  , H.PAY_CODE
			  , H.TAX_CODE
			  , H.OT_KIND
			  , H.PAY_PROV_FLAG
			  , H.EMPLOY_TYPE
			  , H.MED_GRADE
			  , H.ANU_BASE_I
			  , H.SPOUSE
			  , H.SUPP_AGED_NUM
			  , H.BONUS_KIND
			  , H.REPRE_NUM												  AS REPRE_NUM
			  , H.WOMAN
			  , H.ZIP_CODE
			  , H.KOR_ADDR
			  , H.DEFORM_NUM
			  , H.AGED_NUM
			  , H.BRING_CHILD_NUM
			  , ISNULL(H.ANNUAL_SALARY_I,0)								  AS ANNUAL_SALARY_I
			  , ISNULL(H.WAGES_STD_I	,0)								  AS WAGES_STD_I
			  , ISNULL(H.BONUS_STD_I	,0)								  AS BONUS_STD_I
			  , ISNULL(H.COM_DAY_WAGES  ,0)								  AS COM_DAY_WAGES
			  , ISNULL(H.COM_YEAR_WAGES ,0)								  AS COM_YEAR_WAGES
			  , H.MED_INSUR_NO
			  , M5.REF_CODE1												 AS PAY_PROV_FLAG_DAT
			  , H.SEX_CODE
			  , B1.STD_AMOUNT_I											  AS STD_AMOUNT_I_01
			  , B2.STD_AMOUNT_I											  AS STD_AMOUNT_I_02
			  , B1.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_01
			  , B2.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_02
			  , H.TELEPHON
			  , H.DIV_CODE
			  , H.MAKE_SALE
			  , H.COST_KIND
			  , H.MED_AVG_I
			  , H.NATION_CODE
			  , H.LIVE_GUBUN
			  , H.CHILD_20_NUM
			  , H.PENS_GRADE
			  , H.MED_INSUR_I
			  , H.ANU_INSUR_I
			  , H.HIRE_INSUR_TYPE
			  , H.WORK_COMPEN_YN
			  , H.REPRE_NUM												  AS REPRE_NUM2
			  , H.DED_TYPE
			  , 0															AS DOC_ID
			  , ISNULL(H.BANK_CODE1, '')									 AS BANK_CODE1
			  , ISNULL(C1.CUSTOM_NAME, '')								   AS BANK_NAME1
			  , ISNULL(H.BANK_ACCOUNT1, '')								  AS BANK_ACCOUNT1
			  , ISNULL(M10.AMOUNT_I, 0)									  AS WAGES_AMT1	  -- 기본급
			  , ISNULL(M11.AMOUNT_I, 0)									  AS WAGES_AMT2	  -- 시간외
			  , ISNULL(M12.AMOUNT_I, 0)									  AS WAGES_AMT3	  -- 직책수당
			  , ISNULL(M13.AMOUNT_I, 0)									  AS WAGES_AMT4	  -- 기술수당
			  , ISNULL(M14.AMOUNT_I, 0)									  AS WAGES_AMT5	  -- 가족수당
			  , ISNULL(M15.AMOUNT_I, 0)									  AS WAGES_AMT6	  -- 생산장려
			  , ISNULL(M16.AMOUNT_I, 0)									  AS WAGES_AMT7	  -- 운전수당
			  , ISNULL(M17.AMOUNT_I, 0)									  AS WAGES_AMT8	  -- 반장수당
			  , ISNULL(M18.AMOUNT_I, 0)									  AS WAGES_AMT9	  -- 연구수당
			  , ISNULL(M19.AMOUNT_I, 0)									  AS WAGES_AMT10	 -- 기타수당1
			  , ISNULL(M20.AMOUNT_I, 0)									  AS WAGES_AMT11	 -- 기타수당2
			  , H.BIRTH_DATE

		   FROM			 HUM100T   H  WITH (NOLOCK)
				LEFT  JOIN  HBS500T   B1 WITH (NOLOCK)  ON B1.COMP_CODE	= H.COMP_CODE
													   AND B1.GRADE		= H.MED_GRADE
													   AND B1.INSUR_TYPE   = 2
				LEFT  JOIN  HBS500T   B2 WITH (NOLOCK)  ON B2.COMP_CODE	= H.COMP_CODE
													   AND B2.GRADE		= H.PENS_GRADE
													   AND B2.INSUR_TYPE   = 1
				LEFT  JOIN  BCM100T   C1 WITH (NOLOCK)  ON C1.COMP_CODE	= H.COMP_CODE
													   AND C1.CUSTOM_CODE  = H.BANK_CODE1
													   AND C1.CUSTOM_TYPE  = '4'
				LEFT  JOIN  BSA100T   M1 WITH (NOLOCK)  ON M1.COMP_CODE	= H.COMP_CODE
													   AND M1.MAIN_CODE	= 'H005'
													   AND M1.SUB_CODE	 = H.POST_CODE
				LEFT  JOIN  BSA100T   M2 WITH (NOLOCK)  ON M2.COMP_CODE	= H.COMP_CODE
													   AND M2.MAIN_CODE	= 'H006'
													   AND M2.SUB_CODE	 = H.ABIL_CODE
				LEFT  JOIN  BOR120T   M3 WITH (NOLOCK)  ON M3.COMP_CODE	= H.COMP_CODE
													   AND M3.DIV_CODE	 = H.SECT_CODE
				LEFT  JOIN  BSA100T   M4 WITH (NOLOCK)  ON M4.COMP_CODE	= H.COMP_CODE
													   AND M4.MAIN_CODE	= 'H008'
													   AND M4.SUB_CODE	 = H.JOB_CODE
				LEFT  JOIN  BSA100T   M5 WITH (NOLOCK)  ON M5.COMP_CODE	= H.COMP_CODE
													   AND M5.MAIN_CODE	= 'H031'
													   AND M5.SUB_CODE	 = H. PAY_PROV_FLAG
				LEFT  JOIN  BSA100T   M6 WITH (NOLOCK)  ON M6.COMP_CODE	= H.COMP_CODE
													   AND M6.MAIN_CODE	= 'H011'
													   AND M6.SUB_CODE	 = H.PAY_GUBUN
				LEFT  JOIN  HPA200T  M10 WITH (NOLOCK)  ON M10.COMP_CODE   = H.COMP_CODE
													   AND M10.PERSON_NUMB = H.PERSON_NUMB
													   AND M10.PROV_GUBUN  = '1'
													   AND M10.WAGES_CODE  = '100'
				LEFT  JOIN  HPA200T  M11 WITH (NOLOCK)  ON M11.COMP_CODE   = H.COMP_CODE
													   AND M11.PERSON_NUMB = H.PERSON_NUMB
													   AND M11.PROV_GUBUN  = '1'
													   AND M11.WAGES_CODE  = '300'
				LEFT  JOIN  HPA200T  M12 WITH (NOLOCK)  ON M12.COMP_CODE   = H.COMP_CODE
													   AND M12.PERSON_NUMB = H.PERSON_NUMB
													   AND M12.PROV_GUBUN  = '1'
													   AND M12.WAGES_CODE  = '110'
				LEFT  JOIN  HPA200T  M13 WITH (NOLOCK)  ON M13.COMP_CODE   = H.COMP_CODE
													   AND M13.PERSON_NUMB = H.PERSON_NUMB
													   AND M13.PROV_GUBUN  = '1'
													   AND M13.WAGES_CODE  = '120'
				LEFT  JOIN  HPA200T  M14 WITH (NOLOCK)  ON M14.COMP_CODE   = H.COMP_CODE
													   AND M14.PERSON_NUMB = H.PERSON_NUMB
													   AND M14.PROV_GUBUN  = '1'
													   AND M14.WAGES_CODE  = '130'
				LEFT  JOIN  HPA200T  M15 WITH (NOLOCK)  ON M15.COMP_CODE   = H.COMP_CODE
													   AND M15.PERSON_NUMB = H.PERSON_NUMB
													   AND M15.PROV_GUBUN  = '1'
													   AND M15.WAGES_CODE  = '150'
				LEFT  JOIN  HPA200T  M16 WITH (NOLOCK)  ON M16.COMP_CODE   = H.COMP_CODE
													   AND M16.PERSON_NUMB = H.PERSON_NUMB
													   AND M16.PROV_GUBUN  = '1'
													   AND M16.WAGES_CODE  = '220'
				LEFT  JOIN  HPA200T  M17 WITH (NOLOCK)  ON M17.COMP_CODE   = H.COMP_CODE
													   AND M17.PERSON_NUMB = H.PERSON_NUMB
													   AND M17.PROV_GUBUN  = '1'
													   AND M17.WAGES_CODE  = '160'
				LEFT  JOIN  HPA200T  M18 WITH (NOLOCK)  ON M18.COMP_CODE   = H.COMP_CODE
													   AND M18.PERSON_NUMB = H.PERSON_NUMB
													   AND M18.PROV_GUBUN  = '1'
													   AND M18.WAGES_CODE  = '180'
				LEFT  JOIN  HPA200T  M19 WITH (NOLOCK)  ON M19.COMP_CODE   = H.COMP_CODE
													   AND M19.PERSON_NUMB = H.PERSON_NUMB
													   AND M19.PROV_GUBUN  = '1'
													   AND M19.WAGES_CODE  = '250'
				LEFT  JOIN  HPA200T  M20 WITH (NOLOCK)  ON M20.COMP_CODE   = H.COMP_CODE
													   AND M20.PERSON_NUMB = H.PERSON_NUMB
													   AND M20.PROV_GUBUN  = '1'
													   AND M20.WAGES_CODE  = '260'

			WHERE   H.COMP_CODE		= #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (H.PERSON_NUMB LIKE #{TXT_SEARCH} + '%'
			 	OR H.NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				AND (H.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
			 	OR H.NAME LIKE '%'+ #{PERSON_NUMB} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(NAME)">
				AND (H.PERSON_NUMB LIKE #{NAME} + '%'
			 	OR H.NAME LIKE '%'+ #{NAME} + '%' )
				</if>
			 </if>

			<if test="@foren.Ognl@isNotEmpty(BASE_DT)">

				AND	(	H.RETR_DATE		= '00000000'
						 OR H.RETR_DATE	  &gt;= CONVERT(nvarchar(10), #{BASE_DT} , 112)
					   )
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
				AND	 H.PAY_GUBUN = #{PAY_GUBUN}
			</if>

			ORDER   BY H.NAME ASC
	</select>
    <select id="popupServiceImpl.parttimeEmployeePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.employeePopup */
		/* uniLITE5Popup.CPopup[getHumanMasterAu] Query01 */
		SELECT  H.NAME
			  , H.PERSON_NUMB
			  , H.POST_CODE
			  , M1.CODE_NAME							  AS POST_CODE_NAME
			  , H.DEPT_CODE
			  , H.DEPT_NAME
			  , uniLITE.fnGetUserDate(H.COMP_CODE, H.JOIN_DATE)			  AS JOIN_DATE
			  , H.ABIL_CODE
			  , M2.CODE_NAME							   AS ABIL_NAME
			  , CASE WHEN H.RETR_DATE = '00000000' THEN ''
					 ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.RETR_DATE)
				END														  AS RETR_DATE
			  , H.SECT_CODE
			  , M3.DIV_NAME												  AS SECT_NAME
			  , H.JOB_CODE
			  , M4.CODE_NAME							   AS JOB_NAME
			  , H.PAY_CODE
			  , H.AFFIL_CODE
			  , H.TAX_CODE
			  , H.OT_KIND
			  , H.PAY_PROV_FLAG
			  , H.EMPLOY_TYPE
			  , H.MED_GRADE
			  , H.ANU_BASE_I
			  , H.SPOUSE
			  , H.SUPP_AGED_NUM
			  , H.BONUS_KIND
			  , ISNULL(unilite.fnCipherDecrypt(H.REPRE_NUM,'RR'), '')					AS REPRE_NUM
			  , H.WOMAN
			  , H.ZIP_CODE
			  , H.KOR_ADDR
			  , H.DEFORM_NUM
			  , H.AGED_NUM
			  , H.BRING_CHILD_NUM
			  , ISNULL(H.ANNUAL_SALARY_I,0)								  AS ANNUAL_SALARY_I
			  , ISNULL(H.WAGES_STD_I	,0)								  AS WAGES_STD_I
			  , ISNULL(H.BONUS_STD_I	,0)								  AS BONUS_STD_I
			  , ISNULL(H.COM_DAY_WAGES  ,0)								  AS COM_DAY_WAGES
			  , ISNULL(H.COM_YEAR_WAGES ,0)								  AS COM_YEAR_WAGES
			  , H.MED_INSUR_NO
			  , M5.REF_CODE1												 AS PAY_PROV_FLAG_DAT
			  , H.SEX_CODE
			  , B1.STD_AMOUNT_I											  AS STD_AMOUNT_I_01
			  , B2.STD_AMOUNT_I											  AS STD_AMOUNT_I_02
			  , B1.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_01
			  , B2.INSUR_AMOUNT_I											AS INSUR_AMOUNT_I_02
			  , H.TELEPHON
			  , H.DIV_CODE
			  , H.MAKE_SALE
			  , H.COST_KIND
			  , H.MED_AVG_I
			  , H.NATION_CODE
			  , H.LIVE_GUBUN
			  , H.CHILD_20_NUM
			  , H.PENS_GRADE
			  , H.MED_INSUR_I
			  , H.ANU_INSUR_I
			  , H.HIRE_INSUR_TYPE
			  , H.WORK_COMPEN_YN
			  , ISNULL(H.REPRE_NUM, '')					AS REPRE_NUM2
			  , H.DED_TYPE
			  , 0															AS DOC_ID
			  , ISNULL(H.BANK_CODE1, '')									 AS BANK_CODE1
			  , ISNULL(C1.CUSTOM_NAME, '')								   AS BANK_NAME1
			  , ISNULL(unilite.fnCipherDecrypt(H.BANK_ACCOUNT1,''), '')				 AS BANK_ACCOUNT1   -- 2016.04.12 추가
			  , H.PAY_GRADE_01
			  , ISNULL(M8.CODE_NAME, '') AS PAY_GRADE_01_NAME
			  , H.PAY_GRADE_02
			  , H.PAY_GRADE_03
			  , H.PAY_GRADE_04
			  , H.FOREIGN_NUM
              , H.KNOC
              , H.YEAR_GRADE
              , H.PAY_GRADE_BASE
              , H.YEAR_GRADE_BASE

		FROM				HUM100T   H
				LEFT  JOIN  HBS500T   B1 WITH (NOLOCK) ON B1.COMP_CODE  = H.COMP_CODE
													  AND B1.GRADE	  = H.MED_GRADE
													  AND B1.INSUR_TYPE = 2
				LEFT  JOIN  HBS500T   B2 WITH (NOLOCK) ON B2.COMP_CODE  = H.COMP_CODE
													  AND B2.GRADE	  = H.PENS_GRADE
													  AND B2.INSUR_TYPE = 1
				LEFT  JOIN  BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = H.COMP_CODE
													  AND C1.CUSTOM_CODE = H.BANK_CODE1
													  AND C1.CUSTOM_TYPE = '4'			-- 2016.04.12 추가
				LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = H.COMP_CODE
													  AND M1.MAIN_CODE  = 'H005'
													  AND M1.SUB_CODE   = H.POST_CODE
				LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = H.COMP_CODE
													  AND M2.MAIN_CODE  = 'H006'
													  AND M2.SUB_CODE   = H.ABIL_CODE
				LEFT  JOIN  BOR120T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = H.COMP_CODE
													  AND M3.DIV_CODE   = H.SECT_CODE
				LEFT  JOIN  BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = H.COMP_CODE
													  AND M4.MAIN_CODE  = 'H008'
													  AND M4.SUB_CODE   = H.JOB_CODE
				LEFT  JOIN  BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = H.COMP_CODE
													  AND M5.MAIN_CODE  = 'H031'
													  AND M5.SUB_CODE   = H. PAY_PROV_FLAG
				LEFT  JOIN  BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = H.COMP_CODE
													  AND M6.MAIN_CODE  = 'H011'
													  AND M6.SUB_CODE   = H.PAY_GUBUN
				LEFT  JOIN  BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE  = H.COMP_CODE
													  AND M8.MAIN_CODE  = 'HX09'
													  AND M8.SUB_CODE   = H.PAY_GRADE_01
				<if test="DEPT_AUTH == &quot;Y&quot;">
                INNER JOIN BSA570T    M9 WITH (NOLOCK) ON M9.COMP_CODE = H.COMP_CODE
                                                      AND M9.USER_ID   = #{S_USER_ID}
                                                      AND M9.DEPT_CODE = H.DEPT_CODE
                                                      AND M9.AUTHORITY_YN = 'Y'
                </if>
				LEFT  JOIN  HBS400T   M10 WITH (NOLOCK) ON M10.COMP_CODE = H.COMP_CODE
                                                       AND M10.COMPANY_CODE = '1'
			WHERE   H.COMP_CODE		= #{S_COMP_CODE}
			  AND   uniLITE.fnCheckCompDivAuth(H.COMP_CODE, H.DIV_CODE, #{S_USER_ID}) = 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (H.PERSON_NUMB LIKE #{TXT_SEARCH} + '%'
			 	OR H.NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				AND (H.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
			 	OR H.NAME LIKE '%'+ #{PERSON_NUMB} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(NAME)">
				AND (H.PERSON_NUMB LIKE #{NAME} + '%'
			 	OR H.NAME LIKE '%'+ #{NAME} + '%' )
				</if>
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPT_SEARCH)">
				AND (H.DEPT_CODE LIKE #{DEPT_SEARCH} + '%'
				OR H.DEPT_NAME LIKE '%'+ #{DEPT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(DEPT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					AND (H.DEPT_CODE LIKE #{DEPT_CODE} + '%'
					 OR  H.DEPT_CODE LIKE '%'+ #{DEPT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
					AND (H.DEPT_NAME LIKE #{DEPT_NAME} + '%'
					 OR  H.DEPT_NAME LIKE '%'+ #{DEPT_NAME} + '%' )
				</if>
			 </if>

			<if test="@foren.Ognl@isNotEmpty(BASE_DT)">

				AND	(	H.RETR_DATE		= '00000000'
						 OR H.RETR_DATE	  &gt;= CONVERT(nvarchar(10), #{BASE_DT} , 112)
					   )
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
				AND	 H.PAY_GUBUN = #{PAY_GUBUN}
			</if>

			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_01)">
				AND H.DEPT_CODE = #{DEPT_CODE_01}
			 </if>
			 AND  H.PAY_GUBUN = '2'
			 AND  H.PAY_GUBUN2 = '1'
			ORDER   BY H.NAME ASC
	</select>
	<select id="popupServiceImpl.workShopPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.workShopPopup */

		SELECT A.COMP_CODE
			 , A.TYPE_LEVEL
			 , A.TREE_CODE
			 , A.TREE_NAME
			 , ISNULL(A.SECTION_CD, '') AS SECTION_CD
			 , ISNULL(A.SHIFT_CD, '')   AS SHIFT_CD
			 , ISNULL(A.WH_CODE, '')	AS WH_CODE
			 , ISNULL(A.USE_YN, '')	 AS USE_YN
		FROM   BSA230T A WITH (NOLOCK)
		WHERE  A.COMP_CODE	   = #{S_COMP_CODE}
		AND	A.USE_YN		  = 'Y'
		AND A.TYPE_LEVEL = #{TYPE_LEVEL}

		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	 		AND (A.TREE_CODE LIKE #{TXT_SEARCH} + '%'
		 	OR A.TREE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		</if>
		<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
				AND (A.TREE_CODE LIKE #{TREE_CODE} + '%'
			 	OR A.TREE_NAME LIKE '%'+ #{TREE_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
				AND (A.TREE_CODE LIKE #{TREE_NAME} + '%'
			 	OR A.TREE_NAME LIKE '%'+ #{TREE_NAME} + '%' )
			</if>
		</if>
		ORDER BY A.TYPE_LEVEL, A.TREE_CODE
	</select>

	<select id="popupServiceImpl.creditCard2" parameterType="Map" resultType="rMap">
		/*--zfa_popupZ.fnAPopUp [CRDT_NUM, CRDT_NAME] */

		BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
				DROP TABLE #CRDT_NUM

			SELECT A.COMP_CODE
				 , A.CRDT_NUM
				 , A.CRDT_NAME
				 , ISNULL(A.CRDT_FULL_NUM, '')  AS CRDT_FULL_NUM
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME				   , '' )  AS BANK_NAME
				 , ISNULL(A.ACCOUNT_NUM  , '')  AS ACCOUNT_NUM
				 , A.SET_DATE
				 , ISNULL(C.NAME						  , '' )  AS PERSON_NAME
				 , ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)		   AS CRDT_COMP_CD
				 , D.CUSTOM_NAME									AS CRDT_COMP_NM
				 , A.USE_YN
			INTO   #CRDT_NUM
			FROM			  ABA500T   A  WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
														AND B.CUSTOM_CODE = A.BANK_CODE
				   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
														AND M1.MAIN_CODE  = 'A028'
														AND M1.SUB_CODE   = A.CRDT_KIND
				   LEFT  JOIN HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
														AND C.PERSON_NUMB = A.PERSON_NUMB
				   LEFT  JOIN BCM100T   D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
														AND D.CUSTOM_CODE = ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF

			SELECT CRDT_NUM
				 , CRDT_NAME
				 , CRDT_FULL_NUM
				 , BANK_CODE
				 , BANK_NAME
				 , ACCOUNT_NUM
				 , SET_DATE
				 , PERSON_NAME
				 , CRDT_COMP_CD
				 , CRDT_COMP_NM
			FROM   #CRDT_NUM
			WHERE  COMP_CODE		  = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(CRDT_NUM)">
			<if test="USELIKE == false">
					AND CRDT_NUM = #{CRDT_NUM}
				</if>
				<if test="USELIKE != false">
					AND CRDT_NUM LIKE #{CRDT_NUM} +  '%'
				</if>
			</if>
			<if test="@foren.Ognl@isNotEmpty(CRDT_NAME)">
			<if test="USELIKE == false">
					AND CRDT_NAME = #{CRDT_NAME}
				</if>
				<if test="USELIKE != false">
					AND CRDT_NAME LIKE '%' + #{CRDT_NAME} +  '%'
				</if>
			</if>
			<if test="RDO == 1">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND	CRDT_NUM 	  LIKE #{TXT_SEARCH} + '%'
				</if>
			</if>
			<if test="RDO == 2">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND	CRDT_NAME 	  LIKE '%' + #{TXT_SEARCH} + '%'
				</if>
			</if>
			AND	ISNULL(USE_YN,'Y') = N'Y'	  ORDER BY CRDT_NAME ASC
		END
	</select>
	<select id="popupServiceImpl.creditCard3" parameterType="Map" resultType="rMap">
		/*--zfa_popupZ.fnAPopUp [CRDT_NUM, CRDT_NAME] */
		BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
				DROP TABLE #CRDT_NUM

			SELECT A.COMP_CODE
				 , A.CRDT_NUM
				 , A.CRDT_NAME
				 , ISNULL(A.CRDT_FULL_NUM, '')  AS CRDT_FULL_NUM
				 , uniLITE.fnCipherDecrypt(A.CRDT_FULL_NUM, '')  AS CRDT_FULL_NUM_EXPOS
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME				   , '' )  AS BANK_NAME
				 , ISNULL(A.ACCOUNT_NUM  , '')  AS ACCOUNT_NUM
				 , A.SET_DATE
				 , ISNULL(C.NAME						  , '' )  AS PERSON_NAME
				 , ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)		   AS CRDT_COMP_CD
				 , D.CUSTOM_NAME									AS CRDT_COMP_NM
				 , A.USE_YN
			INTO   #CRDT_NUM
			FROM			  ABA500T   A  WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
														AND B.CUSTOM_CODE = A.BANK_CODE
				   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
														AND M1.MAIN_CODE  = 'A028'
														AND M1.SUB_CODE   = A.CRDT_KIND
				   LEFT  JOIN HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
														AND C.PERSON_NUMB = A.PERSON_NUMB
				   LEFT  JOIN BCM100T   D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
														AND D.CUSTOM_CODE = ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF

			SELECT CRDT_NUM
				 , CRDT_NAME
				 , CRDT_FULL_NUM
				 , CRDT_FULL_NUM_EXPOS
				 , BANK_CODE
				 , BANK_NAME
				 , ACCOUNT_NUM
				 , SET_DATE
				 , PERSON_NAME
				 , CRDT_COMP_CD
				 , CRDT_COMP_NM
			FROM   #CRDT_NUM
			WHERE  COMP_CODE		  = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(CRDT_FULL_NUM)">
			<if test="USELIKE == false">
					AND CRDT_FULL_NUM_EXPOS = #{CRDT_FULL_NUM}
				</if>
				<if test="USELIKE != false">
					AND CRDT_FULL_NUM_EXPOS LIKE  '%' + #{CRDT_FULL_NUM} +  '%'
				</if>
			</if>
			<if test="@foren.Ognl@isNotEmpty(CRDT_NAME)">
			<if test="USELIKE == false">
					AND CRDT_NAME = #{CRDT_NAME}
				</if>
				<if test="USELIKE != false">
					AND CRDT_NAME LIKE '%' + #{CRDT_NAME} +  '%'
				</if>
			</if>
			<if test="RDO == 1">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND	REPLACE(CRDT_FULL_NUM_EXPOS, '-', '')	   LIKE '%' + REPLACE(#{TXT_SEARCH},'-','') + '%'
				</if>
			</if>
			<if test="RDO == 2">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND	CRDT_NAME	  LIKE '%' + #{TXT_SEARCH} + '%'
				</if>
			</if>
			<if test="RDO == 3">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND	REPLACE(CRDT_NUM, '-', '')	   LIKE '%' + REPLACE(#{TXT_SEARCH},'-','') + '%'
				</if>
			</if>
			AND	ISNULL(USE_YN,'Y') = N'Y'	  ORDER BY CRDT_NAME ASC
		END
	</select>
	<select id="popupServiceImpl.outStockNum" parameterType="Map" resultType="rMap">

		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

		--  [ 날짜 유형 설정 ] ----------------------------------------------------------------------------
			DECLARE			 @DateFormat		 NVARCHAR(10)

			SELECT TOP 1 @DateFormat = M1.CODE_NAME
			FROM   BSA100T M1 WITH (NOLOCK)
			WHERE  M1.COMP_CODE = #{S_COMP_CODE}
			AND	M1.MAIN_CODE = 'B044'
			AND	M1.REF_CODE1 = 'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		----------------------------------------------------------------------------------------------------

			SELECT  A.OUTSTOCK_NUM
				  , REPLACE(
					REPLACE(
					REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_REQ_DATE, 1, 4))
									   , 'MM',   SUBSTRING(A.OUTSTOCK_REQ_DATE, 5, 2))
									   , 'DD',   SUBSTRING(A.OUTSTOCK_REQ_DATE, 7, 2))  AS OUTSTOCK_REQ_DATE
				  , A.REMARK
				  , A.PROJECT_NO


			FROM				PMP300T A WITH (NOLOCK)


			WHERE   A.COMP_CODE		  = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND	 A.DIV_CODE		   = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			AND	 A.WORK_SHOP_CODE	 = #{WORK_SHOP_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
			AND	 A.OUTSTOCK_REQ_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
			AND	 A.OUTSTOCK_REQ_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
			AND	 A.REMARK 				LIKE #{REMARK}	   + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
			AND	 A.PROJECT_NO			LIKE #{PROJECT_NO} + '%'
			</if>


		GROUP BY A.COMP_CODE, A.OUTSTOCK_NUM, A.OUTSTOCK_REQ_DATE, A.REMARK, A.PROJECT_NO


	----------------------------------------------------------------------------------------------------
		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END




	</select>


	<select id="popupServiceImpl.deptPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.deptPopup */
		/* uniLITE5Popup.CPopup[getTreePopupAu] Query01 */

		SELECT A.TREE_CODE
			 , A.TREE_NAME
			 , A.TYPE_LEVEL AS DIV_CODE
			 , (SELECT BILL_DIV_CODE
				  FROM BOR120T WITH (NOLOCK)
				 WHERE COMP_CODE = A.COMP_CODE
				   AND DIV_CODE  = A.TYPE_LEVEL) AS BILL_DIV_CODE
			 , (SELECT DIV_NAME
				  FROM BOR120T WITH (NOLOCK)
				 WHERE COMP_CODE = A.COMP_CODE
				   AND DIV_CODE  = (SELECT BILL_DIV_CODE
									  FROM BOR120T WITH (NOLOCK)
									 WHERE COMP_CODE = A.COMP_CODE
									   AND DIV_CODE  = A.TYPE_LEVEL)) AS BILL_DIV_NAME
			 , SECTION_CD AS SECTION_CODE
			 , (SELECT SECTION_NAME
				  FROM BOR110T WITH (NOLOCK)
				 WHERE A.COMP_CODE  = COMP_CODE
				   AND A.SECTION_CD = SECTION_CODE) AS SECTION_NAME
			 , A.WH_CODE
			 , (SELECT TREE_CODE FROM BSA210T
				 WHERE USE_YN = 'Y'
				   AND COMP_CODE = #{S_COMP_CODE}
				   AND TREE_LEVEL = (
					CASE  WHEN LEN(A.TREE_LEVEL) = 1 THEN 'ROOT'
						ELSE SUBSTRING(A.TREE_LEVEL, 1, LEN(A.TREE_LEVEL) - 3)
					END
				 )
			  ) AS PARENT_TREE_CODE
			  , (SELECT TREE_NAME FROM BSA210T
				 WHERE USE_YN = 'Y'
				   AND COMP_CODE = #{S_COMP_CODE}
				   AND TREE_LEVEL = (
					CASE  WHEN LEN(A.TREE_LEVEL) = 1 THEN 'ROOT'
						ELSE SUBSTRING(A.TREE_LEVEL, 1, LEN(A.TREE_LEVEL) - 3)
					END
				 )
			  ) AS PARENT_TREE_NAME
		  FROM BSA210T A WITH (NOLOCK)
		 WHERE A.USE_YN = 'Y'
		 			AND A.COMP_CODE = #{S_COMP_CODE}

            <if test="DEPT_AUTH == &quot;Y&quot;">
                AND A.TREE_CODE IN
                    (SELECT DEPT_CODE FROM BSA570T WHERE COMP_CODE = #{S_COMP_CODE}
                                                     AND AUTHORITY_YN = 'Y'
                                                     AND USER_ID = #{S_USER_ID})
            </if>

		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.TREE_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR A.TREE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		  </if>
		  <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
				AND (A.TREE_CODE LIKE #{TREE_CODE} + '%'
			 	OR A.TREE_NAME LIKE '%'+ #{TREE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
				AND (A.TREE_CODE LIKE #{TREE_NAME} + '%'
			 	OR A.TREE_NAME LIKE '%'+ #{TREE_NAME} + '%' )
				</if>
		  </if>



		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			--해당부서의 하위부서만 나오도록 조건
			AND A.TREE_LEVEL LIKE (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = A.COMP_CODE AND TYPE_LEVEL = A.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.TYPE_LEVEL IN
			 <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
			 </foreach>
		  </if>

		  ORDER BY A.SORT_SEQ, A.TREE_LEVEL
	</select>

	<select id="popupServiceImpl.itemPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.itemPopup */
		/* uniLITE5PopupItem.CPopup[getItemPopup] Query02 */

		SELECT K.*
		  FROM (SELECT ITEM_CODE
					 , uniLITE.fnItemNameComp(COMP_CODE, #{S_USER_ID},ITEM_CODE) AS ITEM_NAME
					 , ITEM_NAME1
					 , ITEM_NAME2
					 , ISNULL(SPEC, '') AS SPEC
					 , STOCK_UNIT
					 , SALE_UNIT
					 , TRNS_RATE
					 , SALE_BASIS_P
					 , SPEC_NUM
					 , ITEM_MAKER
					 , ITEM_MAKER_PN
					 , UNIT_WGT
					 , WGT_UNIT
					 , DOM_FORIGN
					 , '' AS SUPPLY_TYPE
					 , HS_NO
					 , HS_NAME
					 , HS_UNIT
					 , STOCK_UNIT AS STOCK_UNIT2
					 , TAX_TYPE
					 , ISNULL(STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
					 ${ADD_OEM}
				   FROM BPR100T
				  WHERE COMP_CODE	 = #{S_COMP_CODE}
				  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 		AND (ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				 	OR ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
				  </if>
				  <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND (ITEM_CODE LIKE #{ITEM_CODE} + '%'
				 	OR ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%' )
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND (ITEM_CODE LIKE #{ITEM_NAME} + '%'
				 	OR ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%' )
					</if>
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
					AND ISNULL(ITEM_LEVEL1, '')LIKE #{TXTLV_L1} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
					AND ISNULL(ITEM_LEVEL2, '')LIKE #{TXTLV_L2} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
					AND ISNULL(ITEM_LEVEL3, '')LIKE #{TXTLV_L3} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(SPEC)">
					AND SPEC LIKE #{SPEC} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(USE_YN)">
					AND USE_YN = #{USE_YN}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
					AND ${ADD_QUERY}
				  </if>

				  <if test="@foren.Ognl@isNotEmpty(TXTFIND_TYPE) and @foren.Ognl@isNotEmpty(TXT_SEARCH)">
				  --201910 검색항목 조회 관련 로직 추가
					AND	(
							${QRY_TYPE} LIKE '%' + #{TXT_SEARCH} + '%'
						)
				  </if>
			   ) K

				ORDER BY ITEM_CODE
	</select>

	<select id="popupServiceImpl.itemPopup2" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.itemPopup */
		/* uniLITE5PopupItem.CPopup[getItemPopup] Query02 */

		SELECT K.*
		  FROM (SELECT ITEM_CODE
					 , uniLITE.fnItemNameComp(COMP_CODE, #{S_USER_ID},ITEM_CODE) AS ITEM_NAME
					 , ISNULL(SPEC, '') AS SPEC
					 , STOCK_UNIT
					 , SALE_UNIT
					 , TRNS_RATE
					 , SALE_BASIS_P
					 , SPEC_NUM
					 , ITEM_MAKER
					 , ITEM_MAKER_PN
					 , UNIT_WGT
					 , WGT_UNIT
					 , DOM_FORIGN
					 , '' AS SUPPLY_TYPE
					 , HS_NO
					 , HS_NAME
					 , HS_UNIT
					 , STOCK_UNIT AS STOCK_UNIT2
					 , TAX_TYPE
					 , ISNULL(STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
				   FROM BPR100T
				  WHERE COMP_CODE	 = #{S_COMP_CODE}

				  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
					AND SPEC LIKE #{TXT_SEARCH} + '%'
				  </if>
				  <if test="RDO == 1">
					<if test="@foren.Ognl@isNotEmpty(LBL_SEARCH)">
					   AND ITEM_CODE LIKE #{LBL_SEARCH} +'%'
					</if>
				  </if>

				 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					  <if test="USELIKE == false">
						AND ITEM_CODE = #{ITEM_CODE}
					  </if>
					  <if test="USELIKE != false">
						AND ITEM_CODEE LIKE #{ITEM_CODE} +  '%'
					  </if>
				  </if>

				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
					AND ISNULL(ITEM_LEVEL1, '')LIKE #{TXTLV_L1} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
					AND ISNULL(ITEM_LEVEL2, '')LIKE #{TXTLV_L2} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
					AND ISNULL(ITEM_LEVEL3, '')LIKE #{TXTLV_L3} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(SPEC)">
					AND SPEC LIKE #{SPEC} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(USE_YN)">
					AND USE_YN = #{USE_YN}
				  </if>

			   ) K
				  WHERE 1=1
				  <if test="RDO == 2">
					  <if test="@foren.Ognl@isNotEmpty(LBL_SEARCH)">
						AND K.ITEM_NAME LIKE #{LBL_SEARCH} +'%'
					  </if>
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
						<if test="USELIKE == false">
							AND K.ITEM_NAME = REPLACE(#{ITEM_NAME}, '[', '[[]')
						</if>
						<if test="USELIKE != false">
							AND K.ITEM_NAME LIKE REPLACE(#{ITEM_NAME}, '[', '[[]') +  '%'
						</if>
				  </if>

				  <if test="RDO != 2">
					ORDER BY ITEM_CODE
				  </if>
				  <if test="RDO == 2">
					ORDER BY ITEM_NAME
				  </if>


	</select>
	<select id="popupServiceImpl.divPumok" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.divPumok 20200402 수정*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , A.OEM_ITEM_CODE
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.LOT_YN
				 , A.OEM_ITEM_CODE
				 , A.INSPEC_YN
				 , A.CAR_TYPE
				 , A.ITEM_WIDTH
				 , A.PACK_QTY
				 , ISNULL(A.EXPIRATION_DAY, 0) AS EXPIRATION_DAY
				 , ISNULL(A.PRODUCT_LDTIME, 0) AS PRODUCT_LDTIME
				 --20190306 추가
				 , ISNULL(A.CARE_YN, 'N')										AS CARE_YN
				 , A.CARE_REASON
				 , R1.STOCK_Q
				 , A.BIG_BOX_BARCODE
	 			 , A.SMALL_BOX_BARCODE
				 , A.REMARK1
				 , A.REMARK2
				 , A.REMARK3
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
				 , Z1.GOOD_STOCK_Q AS BIV150_G_STOCK_Q
<!-- 20200824 추가: UPN 코드 추가 -->
                 , A.UPN_CODE
			  FROM BPR200TV A
			  LEFT  JOIN (
				  SELECT
				  	S1.COMP_CODE
				  	, S1.DIV_CODE
				  	, S1.ITEM_CODE
				  	, SUM(S1.STOCK_Q) AS STOCK_Q
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIV100T S1 WITH (NOLOCK)
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIZ100T S1 WITH (NOLOCK)
			</if>
				  WHERE  S1.COMP_CODE = #{S_COMP_CODE}
				  AND	S1.DIV_CODE  = #{DIV_CODE}
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  AND	S1.CUSTOM_CODE  = #{OUT_CUSTOM_CODE}
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.CUSTOM_CODE
			</if>
			  ) R1 ON R1.COMP_CODE = A.COMP_CODE
				  AND R1.DIV_CODE  = A.DIV_CODE
				  AND R1.ITEM_CODE = A.ITEM_CODE
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
			LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
			              FROM BIV150TV WITH(NOLOCK)
			             GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) Z1 ON Z1.COMP_CODE = A.COMP_CODE
			                                                                 AND Z1.DIV_CODE  = A.DIV_CODE
			                                                                 AND Z1.ITEM_CODE = A.ITEM_CODE
			                                                                 AND Z1.WH_CODE   = A.WH_CODE
			LEFT JOIN BSA100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE =  A.COMP_CODE
											  AND Z2.MAIN_CODE = 'B020'
											  AND Z2.SUB_CODE != '$'
											  AND Z2.SUB_CODE  =  A.ITEM_ACCOUNT
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			   <if test="USE_YN == &quot;Y&quot;">
				AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
				AND A.ITEM_ACCOUNT IN					  -- multiselect 로 인해 item_account 수정 2018.11.20
					<foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_JSP_PARAMS)">
				AND Z2.REF_CODE3 IN --21.04.23 부모프로그램에서 ITEM_ACCOUNT_FILTER를 넘긴 경우에는  품목계정의 refcode3 값이 ITEM_ACCOUNT_FILTER에 해당하는 모든 계정이 나오도록 조건 추가
					<foreach collection="ITEM_ACCOUNT_JSP_PARAMS" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 		AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				 	OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
				 	<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
				 		</if>
				 	</if>
				 	)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{ITEM_CODE} + '%'
				 		</if>
				 	</if>
				 	 )
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND (A.ITEM_CODE LIKE #{ITEM_NAME} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 		</if>
				 	</if>
				 	)
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
			   AND A.DOM_FORIGN      = #{DOM_FORIGN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
				   AND ${ADD_QUERY1} #{S_COMP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
				   ${ADD_QUERY2} #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
				   ${ADD_QUERY3}
			   </if>

		<if test="@foren.Ognl@isNotEmpty(FIND_TYPE) and @foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	(
				   ${QRY_TYPE} LIKE '%' + #{TXT_SEARCH} + '%'
				 )
		</if>
			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((A.ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((A.ORDER_PRSN = @OrderPrsn OR ISNULL(A.ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<choose>
			<when test="RDO == 1">
				ORDER BY	A.ITEM_CODE
			</when>
			<when test="RDO == 2">
				ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END  COLLATE Korean_Wansung_Bin     --20210611 추가
			</when>
			<otherwise>
				 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT
			</otherwise>
		</choose>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	<select id="popupServiceImpl.divPumok_Agent" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.divPumok_Agent */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE  @RefItem       NVARCHAR(01)

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = #{S_USER_ID}

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 구매담당자정보 조회 */
            DECLARE @OrderPrsn      NVARCHAR(02)
                  , @OrderPrsnYN    NVARCHAR(01)

            SELECT TOP 1 @OrderPrsn   = SUB_CODE
                 ,     @OrderPrsnYN = 'Y'
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE  = #{COMP_CODE}
               AND MAIN_CODE  = 'M201'
               AND SUB_CODE  != '$'
               AND REF_CODE2  = #{S_USER_ID}
               AND USE_YN    = 'Y'

            SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
            SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

            /* 데이터 조회 */
            SELECT A.ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_NAME2
                                             ELSE A.ITEM_NAME
                     END)                                                      AS ITEM_NAME
                 , A.OEM_ITEM_CODE
                 , ISNULL(A.SPEC, '')                                            AS SPEC
                 , A.STOCK_UNIT
                 , A.ORDER_UNIT
                 , A.TRNS_RATE
                 , A.BASIS_P
                 , A.SALE_BASIS_P
                 , A.SAFE_STOCK_Q
                 , A.EXPENSE_RATE
                 , A.SPEC_NUM
                 , ISNULL(A.WH_CODE, '')                                          AS WH_CODE
                 , A.WORK_SHOP_CODE
                 , A.DIV_CODE
                 , A.OUT_METH
                 , A.ITEM_MAKER
                 , A.ITEM_MAKER_PN
                 , A.PURCH_LDTIME
                 , A.MINI_PURCH_Q
                 , A.UNIT_WGT
                 , A.WGT_UNIT
                 , A.ITEM_ACCOUNT
                 , ISNULL(A.DOM_FORIGN, '1')                                      AS DOM_FORIGN
                 , A.SUPPLY_TYPE
                 , A.HS_NO
                 , A.HS_NAME
                 , A.HS_UNIT
                 , A.STOCK_UNIT                                                AS STOCK_UNIT2
                 , A.TAX_TYPE
                 , ISNULL(A.STOCK_CARE_YN, 'Y')                                AS STOCK_CARE_YN
                 , A.SALE_UNIT
                 , A.PUR_TRNS_RATE
                 , A.ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
                                             ELSE A.ITEM_GROUP_NAME
                     END)                                                      AS ITEM_GROUP_NAME
                 , A.ITEM_LEVEL1
                 , A.ITEM_LEVEL_NAME1                                            AS ITEM_LEVEL_NAME1
                 , A.ITEM_LEVEL2
                 , A.ITEM_LEVEL_NAME2                                            AS ITEM_LEVEL_NAME2
                 , A.ITEM_LEVEL3
                 , A.ITEM_LEVEL_NAME3                                            AS ITEM_LEVEL_NAME3
                 , A.BARCODE                                                      AS BARCODE
                 , ISNULL(A.LOT_SIZING_Q, 0.0)                                  AS LOT_SIZING_Q
                 , ISNULL(A.MAX_PRODT_Q , 0.0)                                  AS MAX_PRODT_Q
                 , ISNULL(A.STAN_PRODT_Q, 0.0)                                  AS STAN_PRODT_Q
                 , A.PURCHASE_BASE_P
                 , A.TOTAL_ITEM
                 , A.INSPEC_YN
                 , A.UNIT_VOL
                 , A.VOL_UNIT
                 , A.MAIN_CUSTOM_CODE
                 , A.MAIN_CUSTOM_NAME
                 , A.ITEM_COLOR
                 , A.MAIN_CUSTOM_CODE
                 , A.MAIN_CUSTOM_NAME
                 , A.LOT_YN
                 , A.OEM_ITEM_CODE
                 , A.INSPEC_YN
                 , A.CAR_TYPE
                 , A.ITEM_WIDTH
                 , A.PACK_QTY
                 , ISNULL(A.EXPIRATION_DAY, 0) AS EXPIRATION_DAY
                 , ISNULL(A.PRODUCT_LDTIME, 0) AS PRODUCT_LDTIME
                 --20190306 추가
                 , ISNULL(A.CARE_YN, 'N')                                       AS CARE_YN
                 , A.CARE_REASON
                 , R1.STOCK_Q
                 , A.BIG_BOX_BARCODE
                 , A.SMALL_BOX_BARCODE
                 , A.REMARK1
                 , A.REMARK2
                 , A.REMARK3
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
                 , Z1.GOOD_STOCK_Q AS BIV150_G_STOCK_Q
<!-- 20200824 추가: UPN 코드 추가 -->
                 , A.UPN_CODE
              FROM BPR200TV A
              LEFT  JOIN (
                  SELECT
                    S1.COMP_CODE
                    , S1.DIV_CODE
                    , S1.ITEM_CODE
                    , SUM(S1.STOCK_Q) AS STOCK_Q
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
            <if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
                  FROM   BIV100T S1 WITH (NOLOCK)
            </if>
<!-- 외주에서 호출했을 때 -->
            <if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
                  FROM   BIZ100T S1 WITH (NOLOCK)
            </if>
                  WHERE  S1.COMP_CODE = #{COMP_CODE}
                  AND   S1.DIV_CODE  = #{DIV_CODE}
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
            <if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
                  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
            </if>
<!-- 외주에서 호출했을 때 -->
            <if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
                  AND   S1.CUSTOM_CODE  = #{OUT_CUSTOM_CODE}
                  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.CUSTOM_CODE
            </if>
              ) R1 ON R1.COMP_CODE = A.COMP_CODE
                  AND R1.DIV_CODE  = A.DIV_CODE
                  AND R1.ITEM_CODE = A.ITEM_CODE
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
            LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
                          FROM BIV150TV WITH(NOLOCK)
                         GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) Z1 ON Z1.COMP_CODE = A.COMP_CODE
                                                                             AND Z1.DIV_CODE  = A.DIV_CODE
                                                                             AND Z1.ITEM_CODE = A.ITEM_CODE
                                                                             AND Z1.WH_CODE   = A.WH_CODE
            LEFT JOIN BSA100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE =  A.COMP_CODE
                                              AND Z2.MAIN_CODE = 'B020'
                                              AND Z2.SUB_CODE != '$'
                                              AND Z2.SUB_CODE  =  A.ITEM_ACCOUNT
             WHERE A.COMP_CODE     = #{COMP_CODE}
               <if test="USE_YN == &quot;Y&quot;">
                AND A.USE_YN = #{USE_YN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE       = #{DIV_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
                AND A.ITEM_ACCOUNT IN                     -- multiselect 로 인해 item_account 수정 2018.11.20
                    <foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
                                  #{item}
                    </foreach>
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_JSP_PARAMS)">
                AND Z2.REF_CODE3 IN --21.04.23 부모프로그램에서 ITEM_ACCOUNT_FILTER를 넘긴 경우에는  품목계정의 refcode3 값이 ITEM_ACCOUNT_FILTER에 해당하는 모든 계정이 나오도록 조건 추가
                    <foreach collection="ITEM_ACCOUNT_JSP_PARAMS" item="item" separator="," close=")" open="(">
                                  #{item}
                    </foreach>
               </if>
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
                    AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
                    OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
                    <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
                        <if test="SPEC_SEARCH == &quot;Y&quot;">
                            OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
                        </if>
                    </if>
                    )
               </if>
               <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
                  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                    AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
                     OR A.ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%'
                     <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
                        <if test="SPEC_SEARCH == &quot;Y&quot;">
                            OR A.SPEC LIKE '%'+ #{ITEM_CODE} + '%'
                        </if>
                    </if>
                     )
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                    AND (A.ITEM_CODE LIKE #{ITEM_NAME} + '%'
                     OR A.ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
                     <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
                        <if test="SPEC_SEARCH == &quot;Y&quot;">
                            OR A.SPEC LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
                        </if>
                    </if>
                    )
                  </if>
               </if>
               <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
               AND A.OEM_ITEM_CODE  LIKE #{OEM_ITEM_CODE}+'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
               AND A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
               AND A.ITEM_LEVEL1     = #{ITEM_LEVEL1}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
               AND A.ITEM_LEVEL2     = #{ITEM_LEVEL2}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
               AND A.ITEM_LEVEL3     = #{ITEM_LEVEL3}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
               AND A.ITEM_GROUP   = #{ITEM_GROUP}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
                    <if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
                        AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
                                                FROM BPR500T
                                               WHERE DIV_CODE = #{DIV_CODE})
                    </if>
                    <if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
                        AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
                                                FROM BPR500T
                                               WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
                                                 AND DIV_CODE = #{DIV_CODE})
                    </if>
               </if>
               <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
                   AND ${ADD_QUERY1} #{COMP_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
                   ${ADD_QUERY2} #{DIV_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
                   ${ADD_QUERY3}
               </if>

        <if test="@foren.Ognl@isNotEmpty(FIND_TYPE) and @foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND (
                   ${QRY_TYPE} LIKE '%' + #{TXT_SEARCH} + '%'
                 )
        </if>
               /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
               AND ((A.ORDER_PRSN = @OrderPrsn                                AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
                 OR ((A.ORDER_PRSN = @OrderPrsn OR ISNULL(A.ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
                 OR (@OrderPrsn = ''))
               */
               /* (차후에 처리) 검색항목 조건처리 */
        <choose>
            <when test="RDO == 1">
                ORDER BY    A.ITEM_CODE
            </when>
            <when test="RDO == 2">
                ORDER BY    CASE @RefItem
                     WHEN '1' THEN A.ITEM_NAME1
                     WHEN '2' THEN A.ITEM_NAME2
                              ELSE A.ITEM_NAME
                END  COLLATE Korean_Wansung_Bin     --20210611 추가
            </when>
            <otherwise>
                 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT
            </otherwise>
        </choose>
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>
	<select id="popupServiceImpl.divPumok_code" parameterType="Map" resultType="rMap">
		/* 품목코드 일치 조건 검색 */
		/* popupServiceImpl.divPumok_code 20200402 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													AS ITEM_NAME
				 , A.OEM_ITEM_CODE
				 , ISNULL(A.SPEC, '')											AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											AS ITEM_LEVEL_NAME3
				 , A.BARCODE													AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)								AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)								AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)								AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.LOT_YN
				 , A.OEM_ITEM_CODE
				 , A.INSPEC_YN
				 , A.CAR_TYPE
				 , A.ITEM_WIDTH
				 , A.PACK_QTY
				 , ISNULL(A.EXPIRATION_DAY, 0)								AS EXPIRATION_DAY
				 , ISNULL(A.PRODUCT_LDTIME, 0)								AS PRODUCT_LDTIME
				 --20190306 추가
				 , ISNULL(A.CARE_YN, 'N')										AS CARE_YN
				 , A.CARE_REASON
				 , R1.STOCK_Q
				 , A.BIG_BOX_BARCODE
	 			 , A.SMALL_BOX_BARCODE
				,A.REMARK1
				,A.REMARK2
				,A.REMARK3
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
				 , Z1.GOOD_STOCK_Q AS BIV150_G_STOCK_Q
<!-- 20200824 추가: UPN 코드 추가 -->
                 , A.UPN_CODE
			  FROM BPR200TV A
			  LEFT  JOIN (
				  SELECT
				  	S1.COMP_CODE
				  	, S1.DIV_CODE
				  	, S1.ITEM_CODE
				  	, SUM(S1.STOCK_Q) AS STOCK_Q
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIV100T S1 WITH (NOLOCK)
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIZ100T S1 WITH (NOLOCK)
			</if>
				  WHERE  S1.COMP_CODE = #{S_COMP_CODE}
				  AND	S1.DIV_CODE  = #{DIV_CODE}
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  AND	S1.CUSTOM_CODE  = #{OUT_CUSTOM_CODE}
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.CUSTOM_CODE
			</if>
			  ) R1 ON R1.COMP_CODE = A.COMP_CODE
				  AND R1.DIV_CODE  = A.DIV_CODE
				  AND R1.ITEM_CODE = A.ITEM_CODE
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
			LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
			              FROM BIV150TV WITH(NOLOCK)
			             GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) Z1 ON Z1.COMP_CODE = A.COMP_CODE
			                                                                 AND Z1.DIV_CODE  = A.DIV_CODE
			                                                                 AND Z1.ITEM_CODE = A.ITEM_CODE
			                                                                 AND Z1.WH_CODE   = A.WH_CODE
			LEFT JOIN BSA100T Z2 WITH (NOLOCK) ON Z2.COMP_CODE = A.COMP_CODE
											  AND Z2.MAIN_CODE = 'B020'
											  AND Z2.SUB_CODE != '$'
											  AND Z2.SUB_CODE  = A.ITEM_ACCOUNT
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
				AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
				AND A.ITEM_ACCOUNT IN					  -- multiselect 로 인해 item_account 수정 2018.11.20
					<foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_JSP_PARAMS)">
				AND Z2.REF_CODE3 IN --21.04.23 부모프로그램에서 ITEM_ACCOUNT_FILTER를 넘긴 경우에는  품목계정의 refcode3 값이 ITEM_ACCOUNT_FILTER에 해당하는 모든 계정이 나오도록 조건 추가
					<foreach collection="ITEM_ACCOUNT_JSP_PARAMS" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 		AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				 	OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
				 	<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
				 		</if>
				 	</if>
				 	)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND A.ITEM_CODE = #{ITEM_CODE}
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
				   AND ${ADD_QUERY1} #{S_COMP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
				   ${ADD_QUERY2} #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
				   ${ADD_QUERY3}
			   </if>

			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((A.ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((A.ORDER_PRSN = @OrderPrsn OR ISNULL(A.ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<choose>
			<when test="RDO == 1">
				ORDER BY	A.ITEM_CODE
			</when>
			<when test="RDO == 2">
				ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END  COLLATE Korean_Wansung_Bin     --20210611 추가
			</when>
			<otherwise>
				 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT
			</otherwise>
		</choose>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.custPumok" parameterType="Map" resultType="rMap">
		/* getCustPumokPopup */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
			 	 , ISNULL(A.INSPEC_YN, 'Y')										AS INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , (CASE WHEN A.STOCK_CARE_YN = 'Y' THEN ISNULL(C.STOCK_Q, 0) ELSE 0 END) AS STOCK_Q
				 , B.ITEM_P														 AS PURCHASE_P

			  FROM BPR200TV A WITH(NOLOCK)

			  INNER JOIN BPR400T B WITH(NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
								 				AND B.DIV_CODE  = A.DIV_CODE
								 				AND B.ITEM_CODE = A.ITEM_CODE
			  LEFT JOIN (
						 SELECT
						 A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, SUM(A.STOCK_Q) AS STOCK_Q
						 FROM
						 (
							 SELECT COMP_CODE
									,DIV_CODE
									,ITEM_CODE
									,STOCK_Q
							FROM	BIV100T C WITH(NOLOCK)
							WHERE   COMP_CODE = #{S_COMP_CODE}
							AND	 DIV_CODE  = #{DIV_CODE}

				 			UNION ALL

							SELECT  COMP_CODE
								   ,DIV_CODE
								   ,ITEM_CODE
								   ,A.STOCK_Q
							 FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
							 WHERE A.COMP_CODE = #{S_COMP_CODE}
							   AND A.DIV_CODE  = #{DIV_CODE}
						  ) A
						 GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE

						) C  ON C.COMP_CODE = A.COMP_CODE
							AND C.DIV_CODE  = A.DIV_CODE
							AND C.ITEM_CODE = A.ITEM_CODE

			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND B.CUSTOM_CODE	 = #{CUSTOM_CODE}
			 </if>
			   AND B.TYPE			= '1'
			   AND B.APLY_START_DATE = (SELECT TOP 1
											MAX(X.APLY_START_DATE) AS APLY_START_DATE
											FROM  BPR400T X WITH(NOLOCK)
											 WHERE X.COMP_CODE			= B.COMP_CODE
												AND X.DIV_CODE			= B.DIV_CODE
												AND X.TYPE				= B.TYPE
												AND X.ITEM_CODE		   = B.ITEM_CODE
												AND X.MONEY_UNIT		  = B.MONEY_UNIT
												AND X.ORDER_UNIT		  = B.ORDER_UNIT
												AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
												AND X.APLY_END_DATE   &gt; CONVERT(NVARCHAR(08), GETDATE(), 112)
												<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
												AND X.CUSTOM_CODE	 = #{CUSTOM_CODE}
												</if>
											)
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
					AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			   AND A.ITEM_ACCOUNT		= #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			   AND A.ITEM_CODE	LIKE #{ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			   AND (CASE WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)	   LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') +'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
			   </if>

			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<if test="RDO == 1">
			ORDER BY	ITEM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END
		</if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>

	<select id="popupServiceImpl.divPumok2" parameterType="Map" resultType="rMap">
	/*uniLITE5PopupItem.CPopup[getDivItemPopup] Query02*/
	/*
	공통 품목 PopUp
	*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN ITEM_NAME
						 WHEN @RefItem = '1' THEN ITEM_NAME1
						 WHEN @RefItem = '2' THEN ITEM_NAME2
											 ELSE ITEM_NAME
					 END)													   AS ITEM_NAME
				 , ISNULL(SPEC, '')											 AS SPEC
				 , STOCK_UNIT
				 , ORDER_UNIT
				 , TRNS_RATE
				 , BASIS_P
				 , SALE_BASIS_P
				 , SAFE_STOCK_Q
				 , EXPENSE_RATE
				 , SPEC_NUM
				 , ISNULL(WH_CODE, '')										  AS WH_CODE
				 , WORK_SHOP_CODE
				 , DIV_CODE
				 , OUT_METH
				 , ITEM_MAKER
				 , ITEM_MAKER_PN
				 , PURCH_LDTIME
				 , MINI_PURCH_Q
				 , UNIT_WGT
				 , WGT_UNIT
				 , ITEM_ACCOUNT
				 , ISNULL(DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , SUPPLY_TYPE
				 , HS_NO
				 , HS_NAME
				 , HS_UNIT
				 , STOCK_UNIT												   AS STOCK_UNIT2
				 , TAX_TYPE
				 , ISNULL(STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , SALE_UNIT
				 , PUR_TRNS_RATE
				 , ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN ITEM_GROUP_NAME2
											 ELSE ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , ITEM_LEVEL1
				 , ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , ITEM_LEVEL2
				 , ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , ITEM_LEVEL3
				 , ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , BARCODE													  AS BARCODE
				 , ISNULL(LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , PURCHASE_BASE_P
				 , TOTAL_ITEM
				 , INSPEC_YN
				 , UNIT_VOL
				 , VOL_UNIT
				 , MAIN_CUSTOM_CODE
				 , MAIN_CUSTOM_NAME
				 , ITEM_COLOR
			  FROM BPR200TV
			 WHERE COMP_CODE	   = #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
					AND USE_YN = #{USE_YN}
			   </if>
			   AND DIV_CODE		= #{DIV_CODE}

			   <if test="Gird == &quot;A&quot;">
			   AND ( LEFT(ITEM_ACCOUNT,1) LIKE N'1%' OR LEFT(ITEM_ACCOUNT,1) LIKE N'2%')					/* 모품목 그리드 조회*/
 			   AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE FROM BPR500T WHERE DIV_CODE = #{DIV_CODE})
			   </if>

			   <if test="Gird == &quot;B&quot;">
				AND (  LEFT(ITEM_ACCOUNT,1) LIKE N'2%' OR 													/* 자품목 그리드 조회*/
					   LEFT(ITEM_ACCOUNT,1) LIKE N'3%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'4%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'5%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'6%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'7%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'8%' OR
					   LEFT(ITEM_ACCOUNT,1) LIKE N'9%')
				AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  FROM BPR500T WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE} AND DIV_CODE = #{DIV_CODE})

			   </if>

			   <if test="Gird == &quot;C&quot;">
				AND ( LEFT(ITEM_ACCOUNT,1) LIKE N'2%' OR 													/* 대체품목 그리드 조회*/
					  LEFT(ITEM_ACCOUNT,1) LIKE N'3%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'4%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'5%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'6%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'7%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'8%' OR
					  LEFT(ITEM_ACCOUNT,1) LIKE N'9%')
				AND ITEM_CODE NOT IN (SELECT CHILD_ITEM_CODE FROM BPR500T WHERE PROD_ITEM_CODE = #{PROD_ITEM_CODE}
																			AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
																			AND COMP_CODE = #{COMP_CODE} AND DIV_CODE = #{DIV_CODE})
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			   AND ITEM_ACCOUNT	= #{ITEM_ACCOUNT}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			   AND ITEM_CODE	LIKE #{ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			   AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
						 WHEN @RefItem = '2' THEN ITEM_NAME2
											 ELSE ITEM_NAME
					 END)	   LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') +'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>
			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<if test="RDO == 1">
			ORDER BY	ITEM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE @RefItem
					 WHEN '1' THEN ITEM_NAME1
					 WHEN '2' THEN ITEM_NAME2
							  ELSE ITEM_NAME
				END
		</if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.commissionDivPumok" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.commissionDivPumok */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
			  FROM 		 BPR200TV		A
			  INNER JOIN  BSA100T 		C WITH(NOLOCK)  ON A.COMP_CODE   = C.COMP_CODE
						 							   AND A.ITEM_CODE   = C.CODE_NAME
						 							   AND C.REF_CODE1   = #{DIV_CODE}
										 			   AND C.MAIN_CODE   = 'YP37'
													   AND C.SUB_CODE   != '$'
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			   AND A.ITEM_ACCOUNT = '04'
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
					AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			   AND A.ITEM_ACCOUNT		= #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			   AND A.ITEM_CODE	LIKE #{ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			   AND (CASE WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)	   LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') +'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
			   </if>

			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<if test="RDO == 1">
			ORDER BY	A.ITEM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END
		</if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	<select id="popupServiceImpl.customDivPumok" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.customDivPumok */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
				SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , A.OEM_ITEM_CODE
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.LOT_YN
				 , A.OEM_ITEM_CODE
				 , A.INSPEC_YN
				 , A.CAR_TYPE
				 , A.ITEM_WIDTH
				 , A.PACK_QTY
				 , ISNULL(A.EXPIRATION_DAY, 0) AS EXPIRATION_DAY
				 , ISNULL(A.PRODUCT_LDTIME, 0) AS PRODUCT_LDTIME
				 --20190306 추가
				 , ISNULL(A.CARE_YN, 'N')      AS CARE_YN
				 , A.CARE_REASON
				 , R1.STOCK_Q                  --20210609 추가
			  FROM BPR200TV A WITH (NOLOCK)
			  INNER  JOIN  (
				  	SELECT    S1.COMP_CODE /* 거래처별 품목단가정보(구매단가) 조회 */
							  , S1.DIV_CODE
							  , S1.ITEM_CODE
		               FROM    BPR400T     S1 WITH (NOLOCK)
		               WHERE   S1.COMP_CODE        =  #{S_COMP_CODE}
		               AND     S1.TYPE             =  N'1'
		               AND     S1.DIV_CODE         = #{DIV_CODE}
		               AND     S1.CUSTOM_CODE      =  #{CUSTOM_CODES}
		               AND     S1.APLY_START_DATE  =  (SELECT  MAX(APLY_START_DATE)
														FROM    BPR400T     WITH (NOLOCK)
														WHERE   COMP_CODE           = S1.COMP_CODE
														AND     TYPE                =  N'1'
														AND     DIV_CODE            = S1.DIV_CODE
														AND     ITEM_CODE			= S1.ITEM_CODE
														AND     CUSTOM_CODE         = S1.CUSTOM_CODE
														AND     APLY_START_DATE    <![CDATA[<=]]> CONVERT(VARCHAR(8),GETDATE(),112))
				UNION
						SELECT
							COMP_CODE
							,DIV_CODE
							,ITEM_CODE
						  FROM BPR200T
						 WHERE COMP_CODE = #{S_COMP_CODE}
						   AND DIV_CODE = #{DIV_CODE}
						   AND CUSTOM_CODE  = #{CUSTOM_CODES}
	           ) B     ON  B.COMP_CODE        =  A.COMP_CODE
           			AND B.DIV_CODE			 =  A.DIV_CODE
                    AND  B.ITEM_CODE        =  A.ITEM_CODE
			  LEFT  JOIN (
				  SELECT
				  	S1.COMP_CODE
				  	, S1.DIV_CODE
				  	, S1.ITEM_CODE
				  	, SUM(S1.STOCK_Q) AS STOCK_Q
<!-- 20210609 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIV100T S1 WITH (NOLOCK)
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIZ100T S1 WITH (NOLOCK)
			</if>
				 WHERE S1.COMP_CODE = #{S_COMP_CODE}
				   AND S1.DIV_CODE  = #{DIV_CODE}
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				   AND S1.CUSTOM_CODE  = #{OUT_CUSTOM_CODE}
				 GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.CUSTOM_CODE
			</if>
			  ) R1 ON R1.COMP_CODE = A.COMP_CODE
				  AND R1.DIV_CODE  = A.DIV_CODE
				  AND R1.ITEM_CODE = A.ITEM_CODE
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			   <if test="USE_YN == &quot;Y&quot;">
				AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
				AND A.ITEM_ACCOUNT IN					  -- multiselect 로 인해 item_account 수정 2018.11.20
					<foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 		AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				 	OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
				 	<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
				 		</if>
				 	</if>
				 	)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{ITEM_CODE} + '%'
				 		</if>
				 	</if>
				 	 )
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND (A.ITEM_CODE LIKE #{ITEM_NAME} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 		</if>
				 	</if>
				 	)
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
				   AND ${ADD_QUERY1} #{S_COMP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
				   ${ADD_QUERY2} #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
				   ${ADD_QUERY3}
			   </if>

		<if test="@foren.Ognl@isNotEmpty(FIND_TYPE) and @foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	(
				   ${QRY_TYPE} LIKE '%' + #{TXT_SEARCH} + '%'
				 )
		</if>
			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<choose>
			<when test="RDO == 1">
				ORDER BY ITEM_CODE
			</when>
			<when test="RDO == 2">
				ORDER BY CASE @RefItem
					 WHEN '1' THEN ITEM_NAME1
					 WHEN '2' THEN ITEM_NAME2
							  ELSE ITEM_NAME
				END COLLATE Korean_Wansung_Bin     --20210611 추가
			</when>
			<otherwise>
				 ORDER BY ITEM_CODE,SPEC,STOCK_UNIT
			</otherwise>
		</choose>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	<select id="popupServiceImpl.itemGroup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.itemGroup */

		BEGIN

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			SELECT A.ITEM_CODE
				 , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME
				 , ISNULL(A.SPEC, '') AS SPEC
				 , A.STOCK_UNIT
				 , C.ORDER_UNIT
				 , A.TRNS_RATE
				 , C.BASIS_P
				 , A.SALE_BASIS_P
				 , C.SAFE_STOCK_Q
				 , C.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(C.WH_CODE,'') AS WH_CODE
				 , C.WORK_SHOP_CODE
				 , C.DIV_CODE
				 , C.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , C.PURCH_LDTIME
				 , C.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , C.ITEM_ACCOUNT
				 , A.DOM_FORIGN
				 , C.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT AS STOCK_UNIT2
			  FROM BPR100T A WITH (NOLOCK)
				  , (SELECT COMP_CODE
						  , ITEM_GROUP
					   FROM BPR100T WITH (NOLOCK)
					  WHERE ITEM_CODE IN (SELECT ITEM_GROUP
											FROM BPR100T WITH (NOLOCK)
										   WHERE ITEM_GROUP IS NOT NULL
											 AND COMP_CODE	= #{S_COMP_CODE} )
						AND USE_YN = 'Y' ) AS B
				  , BPR200T C WITH (NOLOCK)
			  WHERE A.COMP_CODE	= B.COMP_CODE
				AND A.ITEM_CODE	= B.ITEM_GROUP
				AND A.ITEM_CODE	= C.ITEM_CODE
				AND A.COMP_CODE	= C.COMP_CODE
				AND A.COMP_CODE	= #{S_COMP_CODE}
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} +'%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
							 WHEN @RefItem = '2' THEN ITEM_NAME2
												 ELSE A.ITEM_NAME
						 END)	   LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') +'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
					AND ISNULL(C.SUPPLY_TYPE, '') LIKE #{SUPPLY_TYPE} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
					AND ISNULL(A.ITEM_LEVEL1, '') LIKE #{ITEM_LEVEL1} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
					AND ISNULL(A.ITEM_LEVEL2, '') LIKE #{ITEM_LEVEL2} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
					AND ISNULL(A.ITEM_LEVEL3, '') LIKE #{ITEM_LEVEL3} + '%'
				</if>
			   <if test="@foren.Ognl@isNotEmpty(oItemCode)">
					AND A.ITEM_CODE &gt; #{oItemCode}
			   </if>

			   AND A.USE_YN = 'Y'

			   <if test="RDO == 1">
					ORDER BY	A.ITEM_CODE
			   </if>
			   <if test="RDO == 2">
					ORDER BY	CASE @RefItem
							 WHEN '1' THEN A.ITEM_NAME1
							 WHEN '2' THEN A.ITEM_NAME2
									  ELSE A.ITEM_NAME
						END
				</if>
	   END
	</select>
	<select id="popupServiceImpl.divItemGroup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.divItemGroup */

		BEGIN

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			SELECT A.ITEM_CODE
				 , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME
				 , ISNULL(A.SPEC, '') AS SPEC
				 , A.STOCK_UNIT
				 , B.ORDER_UNIT
				 , A.TRNS_RATE
				 , B.BASIS_P
				 , A.SALE_BASIS_P
				 , B.SAFE_STOCK_Q
				 , B.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(B.WH_CODE,'') WH_CODE
				 , B.WORK_SHOP_CODE
				 , B.DIV_CODE
				 , B.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , B.PURCH_LDTIME
				 , B.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , B.ITEM_ACCOUNT
				 , A.DOM_FORIGN
				 , B.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
				 , A.SALE_UNIT
			  FROM BPR100T A WITH (NOLOCK)
				 , BPR200T B WITH (NOLOCK)
				  , (SELECT COMP_CODE
						  , ITEM_GROUP
					  FROM BPR100T WITH (NOLOCK)
					 WHERE ITEM_CODE IN (SELECT ITEM_GROUP
										   FROM BPR100T WITH (NOLOCK)
										  WHERE ITEM_GROUP IS NOT NULL)
					   AND USE_YN = N'Y' ) AS C
			   WHERE  A.ITEM_CODE				 = B.ITEM_CODE
				 AND  A.COMP_CODE				 = B.COMP_CODE
				 AND  A.ITEM_CODE				 = C.ITEM_GROUP
				 AND  A.COMP_CODE				 = C.COMP_CODE
				 AND  A.COMP_CODE				 = #{S_COMP_CODE}
				 AND  B.DIV_CODE				  = #{DIV_CODE}
			   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} +'%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
				   AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
							 WHEN @RefItem = '2' THEN ITEM_NAME2
												 ELSE A.ITEM_NAME
						 END)	   LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') +'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
					AND ISNULL(B.SUPPLY_TYPE, '') LIKE #{SUPPLY_TYPE} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
					AND ISNULL(A.ITEM_LEVEL1, '') LIKE #{ITEM_LEVEL1} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
					AND ISNULL(A.ITEM_LEVEL2, '') LIKE #{ITEM_LEVEL2} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
					AND ISNULL(A.ITEM_LEVEL3, '') LIKE #{ITEM_LEVEL3} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
				 AND ISNULL(A.ITEM_GROUP , '') LIKE #{ITEM_GROUP} + '%'
				</if>
				 AND A.USE_YN = 'Y'
			   <if test="RDO == 1">
					ORDER BY	A.ITEM_CODE
			   </if>
			   <if test="RDO == 2">
					ORDER BY	CASE @RefItem
							 WHEN '1' THEN A.ITEM_NAME1
							 WHEN '2' THEN A.ITEM_NAME2
									  ELSE A.ITEM_NAME
						END
				</if>
	   END
	</select>
	<select id="popupServiceImpl.safferTaxPopup" parameterType="Map" resultType="rMap">
		SELECT   SUB_CODE
			   , CODE_NAME
		  FROM BSA100T
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND MAIN_CODE   = 'A080'
		   AND SUB_CODE   != '$'
		   AND USE_YN	  = 'Y'
		   <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
				<if test="USELIKE == false">
					AND SUB_CODE = #{SUB_CODE}
				</if>
				<if test="USELIKE == true">
					AND SUB_CODE LIKE '%'+ #{SUB_CODE} +'%'
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CODE_NAME)">
				<if test="USELIKE == false">
					AND CODE_NAME = #{CODE_NAME}
				</if>
				<if test="USELIKE == true">
					AND CODE_NAME LIKE '%'+ #{CODE_NAME} +'%'
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				<if test="USELIKE != false">
				   AND (SUB_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR CODE_NAME LIKE '%' + #{TXT_SEARCH} + '%' )
				</if>
		   </if>
		 ORDER BY SUB_CODE
	</select>
	<select id="popupServiceImpl.driver" parameterType="Map" resultType="rMap">
		/*popupServiceImpl.driver*/
		SELECT A.DRIVER_CODE, H.NAME AS DRIVER_NAME,
			   ISNULL(G1.VEHICLE_CODE, G2.VEHICLE_CODE) AS VEHICLE_CODE,
			   CASE WHEN G1.VEHICLE_CODE IS NOT NULL THEN GV1.VEHICLE_NAME
					WHEN G2.VEHICLE_CODE IS NOT NULL THEN GV2.VEHICLE_NAME
					ELSE ''
			   END VEHICLE_NAME,
			   H.JOIN_DATE,
			   H.RETR_DATE,
			   H.KOR_ADDR,
			   H.TELEPHON,
			   H.PHONE_NO,
			   ISNULL(H.REPRE_NUM, '') AS REPRE_NUM,
			   H.LICENSE_NO
		  FROM GDR100T A
		  LEFT JOIN HUM100T H ON A.COMP_CODE = H.COMP_CODE
							 AND A.DRIVER_CODE = H.PERSON_NUMB
		  LEFT JOIN GAG200T G1 ON A.COMP_CODE = G1.COMP_CODE
							 AND A.DIV_CODE = G1.DIV_CODE
							 AND A.DRIVER_CODE = G1.FIXED_DRIVER1
		  LEFT JOIN GVE100T GV1 ON G1.COMP_CODE = GV1.COMP_CODE
							 AND G1.DIV_CODE = GV1.DIV_CODE
							 AND G1.VEHICLE_CODE = GV1.VEHICLE_CODE
		  LEFT JOIN GAG200T G2 ON A.COMP_CODE = G1.COMP_CODE
							 AND A.DIV_CODE = G1.DIV_CODE
							 AND A.DRIVER_CODE = G1.FIXED_DRIVER2
		  LEFT JOIN GVE100T GV2 ON G2.COMP_CODE = GV2.COMP_CODE
							 AND G2.DIV_CODE = GV2.DIV_CODE
							 AND G2.VEHICLE_CODE = GV2.VEHICLE_CODE
		 WHERE A.COMP_CODE=#{S_COMP_CODE}
		   AND A.DIV_CODE=#{DIV_CODE}
		   AND H.RETR_DATE = '00000000'
		   <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
				<if test="USELIKE != false">
				   AND A.DRIVER_CODE LIKE '%' + #{DRIVER_CODE} + '%'
				</if>
				<if test="USELIKE == false">
					AND A.DRIVER_CODE = #{DRIVER_CODE}
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
				<if test="USELIKE != false">
				   AND H.NAME LIKE '%' + #{DRIVER_NAME} + '%'
				</if>
				<if test="USELIKE == false">
					AND H.NAME = #{DRIVER_NAME}
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				<if test="USELIKE != false">
				   AND (A.DRIVER_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR H.NAME LIKE '%' + #{TXT_SEARCH} + '%' )
				</if>
				<if test="USELIKE == false">
					AND (A.DRIVER_CODE = #{TXT_SEARCH}
					OR H.NAME = #{TXT_SEARCH} )
				</if>
		   </if>
		 ORDER BY H.NAME
	</select>
	<select id="popupServiceImpl.vehicle" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.vehicle */
		SELECT
			DIV_CODE,
			VEHICLE_CODE,
			VEHICLE_NAME,
			VEHICLE_REGIST_NO,
			REGIST_STATUS
		FROM GVE100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{DIV_CODE}
		  <if test="@foren.Ognl@isNotEmpty(REGIST_STATUS)">
		  AND REGIST_STATUS = #{REGIST_STATUS}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
				<if test="USELIKE != false">
				   AND VEHICLE_CODE LIKE '%' + #{VEHICLE_CODE} + '%'
				</if>
				<if test="USELIKE == false">
					AND VEHICLE_CODE = #{VEHICLE_CODE}
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
				<if test="USELIKE != false">
				   AND VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
				</if>
				<if test="USELIKE == false">
					AND VEHICLE_NAME = #{VEHICLE_NAME}
				</if>
		   </if>
		  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				<if test="USELIKE != false">
				   AND (VEHICLE_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR VEHICLE_NAME LIKE '%' + #{TXT_SEARCH} + '%' )
				</if>
				<if test="USELIKE == false">
					AND (VEHICLE_CODE = #{TXT_SEARCH}
					OR VEHICLE_NAME = #{TXT_SEARCH} )
				</if>
		  </if>
		 ORDER BY VEHICLE_NAME
	</select>
	<select id="popupServiceImpl.countdate" parameterType="Map" resultType="rMap">		/*실사일팝업*/
		/*biv120ukrv.Cbiv120ukrv[fnBiv120QPop] Query01*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	NVARCHAR(08) /* 법인코드	*/
				  , @UserId	  NVARCHAR(100) /* 사용자ID	*/
				  , @LangType	NVARCHAR(2)  /* 언어구분	*/
				  , @RefItem	 NVARCHAR(01) /* 명칭 참조 유형  */
				  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			/* 데이터 조회 */
			SELECT A.DIV_CODE
				 , A.WH_CODE
				 , C1.TREE_NAME									 AS WH_NAME
				 , (CASE WHEN ISNULL(A.COUNT_DATE, '') = ''
					 THEN ''
					 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.COUNT_DATE, 1, 4))
															 , 'MM'  , SUBSTRING(A.COUNT_DATE, 5, 2))
															 , 'DD'  , SUBSTRING(A.COUNT_DATE, 7, 2))
					END)											AS COUNT_DATE
				 , CASE WHEN A.COUNT_FLAG = 'O' THEN uniLITE.fnGetTxt('K0001')
						WHEN A.COUNT_FLAG = 'P' THEN uniLITE.fnGetTxt('K0002')
						WHEN A.COUNT_FLAG = 'C' THEN uniLITE.fnGetTxt('K0003')
				   END											  AS COUNT_FLAG
				 , CASE WHEN A.COUNT_CONT_DATE = '00000000' THEN ''
						ELSE (CASE WHEN ISNULL(A.COUNT_CONT_DATE, '') = ''
								THEN ''
								ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.COUNT_CONT_DATE, 1, 4))
																		, 'MM'  , SUBSTRING(A.COUNT_CONT_DATE, 5, 2))
																		, 'DD'  , SUBSTRING(A.COUNT_CONT_DATE, 7, 2))
							 END)
					END														  AS COUNT_CONT_DATE
				 , A.COUNT_FLAG												  AS COUNT_FLAG_CD
			FROM			  BIV300T A  WITH (NOLOCK)
				   LEFT  JOIN BSA220T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
													  AND C1.TYPE_LEVEL = A.DIV_CODE
													  AND C1.TREE_CODE  = A.WH_CODE
			WHERE  A.COMP_CODE  = @CompCode
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND	A.DIV_CODE   = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND	A.WH_CODE	= #{WH_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
			AND	A.COUNT_DATE = #{COUNT_DATE}
			</if>
			GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, C1.TREE_NAME, A.COUNT_DATE, A.COUNT_FLAG, A.COUNT_CONT_DATE
			ORDER BY A.COUNT_DATE DESC

		END
	</select>
	<select id="popupServiceImpl.shopPopup" parameterType="Map" resultType="rMap">		/*매장팝업*/
		/*biv120ukrv.Cbiv120ukrv[fnBiv120QPop] Query01*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	NVARCHAR(08) /* 법인코드	*/
				  , @UserId	  NVARCHAR(100) /* 사용자ID	*/
				  , @LangType	NVARCHAR(2)  /* 언어구분	*/
				  , @RefItem	 NVARCHAR(01) /* 명칭 참조 유형  */
				  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			/* 데이터 조회 */
			SELECT A.DIV_CODE
			 , A.SHOP_CODE
			 , A.SHOP_NAME
			 , A.DEPT_CODE
			 , C2.TREE_NAME							 AS DEPT_NAME
			 , A.WH_CODE
			 , A.BRAND_CODE
			 , A.PHONE_NUMBER
			 , A.STAFF_ID
	   FROM	BSA250T   A  WITH (NOLOCK)
			   LEFT  JOIN BSA210T   C2 WITH (NOLOCK) ON C2.TREE_CODE	= A.DEPT_CODE
													AND C2.COMP_CODE	= A.COMP_CODE
			   LEFT  JOIN BSA250T   C1 WITH (NOLOCK) ON C1.SHOP_CODE	= A.SHOP_CODE
													AND C1.DIV_CODE		= A.DIV_CODE
													AND C1.COMP_CODE	= A.COMP_CODE
		WHERE  A.COMP_CODE	  = #{S_COMP_CODE}

		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND	A.DIV_CODE	   = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SHOP_NAME)">
		AND	A.SHOP_NAME	   = #{SHOP_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SHOP_CODE)">
		AND	A.SHOP_CODE  = #{SHOP_CODE}
		</if>
		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>
	<select id="popupServiceImpl.lotPopup" parameterType="Map" resultType="rMap">		/*LOT팝업*/
	/*uniLITE5Popup.CPopup[getLotListPopup] Query01*/
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON

		DECLARE @COMP_CODE		 NVARCHAR(08)	 /*(필수) 법인코드*/
			  , @DIV_CODE		  NVARCHAR(08)	 /*(필수) 사업장코드*/
			  , @CUSTOM_CODE	   NVARCHAR(08)	 /*(선택) 거래처코드*/
			  , @CUSTOM_NAME	   NVARCHAR(20)	 /*(선택) 거래처명*/
			  , @FR_INOUT_DATE	 NVARCHAR(08)	 /*(선택) FROM 수불일*/
			  , @TO_INOUT_DATE	 NVARCHAR(08)	 /*(선택) TO 수불일*/
			  , @ITEM_CODE		 NVARCHAR(20)	 /*(선택) 품목코드*/
			  , @ITEM_NAME		 NVARCHAR(200)	 /*(선택) 품목명*/
			  , @LOT_NO			NVARCHAR(20)	 /*(선택) LOT NO*/
			  , @REMARK			NVARCHAR(200)	/*(선택) 비고*/
			  , @STOCK_YN		  NVARCHAR(01)	 /*(선택) 현재고 유무*/
			  , @USER_ID		   NVARCHAR(100)	 /*(필수) 사용자 ID*/

		SET @COMP_CODE		 = #{S_COMP_CODE}
		SET @DIV_CODE		  = #{DIV_CODE}
		SET @CUSTOM_CODE	   = #{CUSTOM_CODE}
		SET @CUSTOM_NAME	   = #{CUSTOM_NAME}
		SET @FR_INOUT_DATE	 = #{FR_INOUT_DATE}
		SET @TO_INOUT_DATE	 = #{TO_INOUT_DATE}
		SET @ITEM_CODE		 = #{ITEM_CODE}
		SET @ITEM_NAME		 = REPLACE(#{ITEM_NAME}, '[', '[[]')
		SET @LOT_NO			= #{LOT_NO}
		SET @REMARK			= #{REMARK}
		SET @STOCK_YN		  = #{STOCK_YN}
		SET @USER_ID		   = #{S_USER_ID}

		/* 사용자의 참조명칭 */
		DECLARE @RefItem		   NVARCHAR(01)

		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @USER_ID

		SET @RefItem = ISNULL(@RefItem, '')


	/*
	선택	거래처코드	거래처명	LOT NO.	창고	입고량	출고량	현재고	양품재고	불량재고	품목코드	품명	재고단위	비고
	*/

		SELECT CONVERT(BIT, 0) AS CHK
			 , C2.CUSTOM_CODE
			 , CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
					WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
					ELSE					 C2.CUSTOM_NAME
				END AS CUSTOM_NAME
			 , A.LOT_NO
			 , A.WH_CODE
			 , C3.TREE_NAME											  AS WH_NAME
			 , uniLITE.fnFormat(A.COMP_CODE, A.INSTOCK_Q,	'M_FSET_Q') AS INSTOCK_Q
			 , uniLITE.fnFormat(A.COMP_CODE, A.OUTSTOCK_Q,   'M_FSET_Q') AS OUTSTOCK_Q
			 , uniLITE.fnFormat(A.COMP_CODE, A.STOCK_Q,	  'M_FSET_Q') AS STOCK_Q
			 , uniLITE.fnFormat(A.COMP_CODE, A.GOOD_STOCK_Q, 'M_FSET_Q') AS GOOD_STOCK_Q
			 , uniLITE.fnFormat(A.COMP_CODE, A.BAD_STOCK_Q,  'M_FSET_Q') AS BAD_STOCK_Q
			 , A.ITEM_CODE
			 , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE C1.ITEM_NAME
				END													  AS ITEM_NAME
			 , C1.SPEC
			 , C1.STOCK_UNIT
			 , B.REMARK
		  FROM			BIV150T AS A  WITH (NOLOCK)
			   LEFT  JOIN (
						  SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, MAX(REMARK) AS REMARK
						  FROM   BTR100T WITH (NOLOCK, INDEX(BTR100T_IDX07))
						  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO
						  )	   AS B				ON  B.COMP_CODE   = A.COMP_CODE
													 AND  B.DIV_CODE	= A.DIV_CODE
													 AND  B.ITEM_CODE   = A.ITEM_CODE
													 AND  B.LOT_NO	  = A.LOT_NO
			   LEFT  JOIN BPR100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
													 AND C1.ITEM_CODE   = A.ITEM_CODE
			   LEFT  JOIN BCM100T AS C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
													 AND C2.CUSTOM_CODE = A.CUSTOM_CODE
			   LEFT  JOIN BSA220T AS C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
													 AND C3.TREE_CODE   = A.WH_CODE
		 WHERE   A.COMP_CODE	 = @COMP_CODE
		   AND   A.DIV_CODE	  = @DIV_CODE
		   AND   A.SUM_TYPE	  = 'C'			  /* LOT_NO 합산*/
		   AND ((A.CUSTOM_CODE   =	@CUSTOM_CODE		AND @CUSTOM_CODE   != '') OR (@CUSTOM_CODE   = ''))
		   AND ((C2.CUSTOM_NAME  LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '0') OR
				(C2.CUSTOM_NAME1 LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '1') OR
				(C2.CUSTOM_NAME2 LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '2') OR
				(@CUSTOM_NAME	= ''))
		   AND ((A.ITEM_CODE	 =	@ITEM_CODE		  AND @ITEM_CODE	 != '') OR (@ITEM_CODE	 = ''))
		   AND ((C1.ITEM_NAME	LIKE @ITEM_NAME + '%'	AND @ITEM_NAME	 != '' AND @RefItem = '0') OR
				(C1.ITEM_NAME1   LIKE @ITEM_NAME + '%'	AND @ITEM_NAME	 != '' AND @RefItem = '1') OR
				(C1.ITEM_NAME2   LIKE @ITEM_NAME + '%'	AND @ITEM_NAME	 != '' AND @RefItem = '2') OR
				(@ITEM_NAME	  = ''))
		   AND ((A.LOT_NO		LIKE @LOT_NO + '%'	   AND @LOT_NO		!= '') OR (@LOT_NO		= ''))
		   AND ((B.REMARK		LIKE '%' + @REMARK + '%' AND @REMARK		!= '') OR (@REMARK		= ''))
		   AND ((A.STOCK_Q	   &gt; 0.0					AND @STOCK_YN	  = 'Y') OR
				(A.STOCK_Q	   = 0.0					AND @STOCK_YN	  = 'N') OR
				(@STOCK_YN	   = ''))
		 GROUP BY A.COMP_CODE, A.LOT_NO, A.ITEM_CODE, A.WH_CODE, A.INSTOCK_Q, A.OUTSTOCK_Q, A.STOCK_Q, A.GOOD_STOCK_Q, A.BAD_STOCK_Q
				, C1.STOCK_UNIT, C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC
				, C2.CUSTOM_CODE, C2.CUSTOM_NAME, C2.CUSTOM_NAME1, C2.CUSTOM_NAME2
				, C3.TREE_CODE, C3.TREE_NAME, B.REMARK
		 ORDER BY C2.CUSTOM_CODE, A.LOT_NO

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>
	<select id="popupServiceImpl.lotNoPopup" parameterType="Map" resultType="rMap">		/*LOTNO팝업*/
        BEGIN
        	DECLARE	 @COMP_CODE		  NVARCHAR(08)		/*(필수) 법인코드*/
        			  , @DIV_CODE		   NVARCHAR(08)		/*(필수) 사업장코드*/
        			  , @CUSTOM_CODE		NVARCHAR(08)		/*(필수) 거래처코드*/
        			  , @CUSTOM_NAME		NVARCHAR(50)		/*(필수) 거래처명 */
        	 		   , @ITEM_CODE		 NVARCHAR(20)		/*(필수) 품목코드*/
        			  , @ITEM_NAME		  NVARCHAR(200)		/*(필수) 품목명*/

        			  , @WH_CODE			NVARCHAR(08)		/*(선택) 창고코드*/
        			  , @WH_CELL_CODE	   NVARCHAR(20)		/*(선택) 창고Cell*/
        			  , @LOT_NO			 NVARCHAR(20)		/*(선택) LOT NO*/
        			  , @STOCK_YN		   NVARCHAR(01)		/*(선택) 현재고 유무*/
        			  , @USER_ID			NVARCHAR(100)		/*(필수) 사용자 ID*/

        			  --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join
        			  , @LOTS		NVARCHAR(MAX)

			SET @LOTS		= #{LOTS}

        /*1. 변수 값 할당*/
        	SET	 @COMP_CODE	 = #{S_COMP_CODE}
        	SET	 @DIV_CODE	  = #{DIV_CODE}
        	SET	 @ITEM_CODE	 = #{ITEM_CODE}
        	SET	 @ITEM_NAME	 = REPLACE(#{ITEM_NAME}, '[', '[[]')
        	SET	 @STOCK_YN	  = #{STOCK_YN}
        	SET	 @USER_ID	   = #{S_USER_ID}

        	SET NOCOUNT ON
        	SET ARITHABORT ON

        /*2. 사용자의 참조명칭*/
        	DECLARE @RefItem			NVARCHAR(01)

        	SELECT TOP 1 @RefItem = REF_ITEM
        	FROM   BSA300T WITH (NOLOCK)
        	WHERE  USER_ID = @USER_ID

        	SET @RefItem = ISNULL(@RefItem, '0')

        /*3. LOT 재고정보 조회*/
        	SELECT A.COMP_CODE
        		 , A.DIV_CODE
        		 , A.CUSTOM_CODE
           		 , A.CUSTOM_NAME
        		 , A.ITEM_NAME
        		 , A.ITEM_CODE
        		 , A.ITEM_NAME
        		 , A.SPEC
        		 , A.STOCK_UNIT
        		 , A.WH_CODE
        		 , A.WH_NAME
        		 , A.WH_CELL_CODE
        		 , A.WH_CELL_NAME
        		 , A.LOT_NO
        		 , A.LOT_NO											  AS LOTNO_CODE
        		 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),	'R_FSET_Q') AS INSTOCK_Q
        		 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
        		 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),	  'R_FSET_Q') AS STOCK_Q
        		 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
        		 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q
        		 , MAX(MAKE_DATE) 	  AS MAKE_DATE
        		 , MAX(MAKE_EXP_DATE) AS MAKE_EXP_DATE
        	FROM   (
        		   SELECT A.COMP_CODE
        				, A.DIV_CODE
        				, A.CUSTOM_CODE
        				, B.CUSTOM_NAME
        				, A.ITEM_CODE
        				, CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
        					   WHEN @RefItem = '1' THEN C1.ITEM_NAME1
        					   WHEN @RefItem = '2' THEN C1.ITEM_NAME2
        					   ELSE C1.ITEM_NAME
        				  END												   AS ITEM_NAME
        				, C1.SPEC
        				, C1.STOCK_UNIT
        				, A.WH_CODE
        				, C2.TREE_NAME										  AS WH_NAME
        				, CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
        					   ELSE A.WH_CELL_CODE
        				  END												   AS WH_CELL_CODE
        				, CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
        					   ELSE C3.WH_CELL_NAME
        				  END												   AS WH_CELL_NAME
        				, A.LOT_NO
        				, A.LOT_NO											  AS LOTNO_CODE
        				, A.INSTOCK_Q
        				, A.OUTSTOCK_Q
        				, A.STOCK_Q
        				, A.GOOD_STOCK_Q
        				, A.BAD_STOCK_Q
        				, C1.SALE_BASIS_P
        				, A.USE_BY_DATE AS MAKE_DATE
        				, A.MAKE_EXP_DATE
        		   FROM			  BIV150T A  WITH (NOLOCK)
        				  LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
        													 AND B.CUSTOM_CODE	= A.CUSTOM_CODE
        				  INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE	= A.COMP_CODE
        													 AND C1.ITEM_CODE	= A.ITEM_CODE
        				  LEFT JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE	= A.COMP_CODE
        													 AND C2.TYPE_LEVEL   = A.DIV_CODE
        													 AND C2.TREE_CODE	= A.WH_CODE
        				  LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE	= A.COMP_CODE
        													 AND C3.DIV_CODE	 = A.DIV_CODE
        													 AND C3.WH_CODE	  = A.WH_CODE
        													 AND C3.WH_CELL_CODE = A.WH_CELL_CODE
        				  LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE	= A.COMP_CODE
        													 AND M1.MAIN_CODE	= N'B084'
        													 AND M1.SUB_CODE	 = N'C' /*Lot No. 합산*/
        				  LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
        													 AND M2.MAIN_CODE	= N'B084'
        													 AND M2.SUB_CODE	 = N'D' /*창고 Cell 합산*/
        		   <if test="@foren.Ognl@isNotEmpty(LOTS)">
        		   <if test="INCLUDE_YN == &quot;N&quot;">
        				  --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join, 20200226 수정: 포함여부가 n이면 제외
        				  LEFT JOIN uniLITE.fnSplit(@LOTS, ',') AS Z1 ON Z1.VALUE = A.LOT_NO
        		   </if>
        		   </if>
        		   WHERE  A.COMP_CODE	   =	   @COMP_CODE
        		   AND	A.DIV_CODE		=	   @DIV_CODE
        		   AND	A.SUM_TYPE		= CASE  WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y'									 THEN 'D'
        											ELSE 'C'
        									  END
        		   AND  ((A.ITEM_CODE	LIKE	   @ITEM_CODE + '%'					AND @ITEM_CODE	!= '') OR (@ITEM_CODE	= ''))
        		   <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_CODE)">
        		   AND A.CUSTOM_CODE	LIKE	   #{S_CUSTOM_CODE} + '%'
        		   </if>
        		   <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_NAME)">
        		   AND B.CUSTOM_NAME	LIKE	   #{S_CUSTOM_NAME} + '%'
        		   </if>
        		   AND  ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME	!= '')
        			  OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME	!= '')
        			  OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME	!= '') OR (@ITEM_NAME	= ''))
        		   <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
        		   AND  A.LOT_NO	   LIKE	  '%' +  #{LOTNO_CODE}  + '%'
        		   </if>
        		   <if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
        		   AND  A.WH_CODE		 =	   #{S_WH_CODE}
        		   </if>
        		   <if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
        		   AND  A.WH_CELL_CODE		 =	   #{S_WH_CELL_CODE}
        		   </if>
        		   AND  ((A.STOCK_Q		 != 0.0									AND @STOCK_YN	  = 'Y')
        			  OR (A.STOCK_Q		 = 0.0									   AND @STOCK_YN	  = 'N')
        			  OR (ISNULL(@STOCK_YN, '')		 = ''))
        		   <if test="@foren.Ognl@isNotEmpty(LOTS)">
        		   <if test="INCLUDE_YN == &quot;N&quot;">
        		   --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join, 20200226 수정: 포함여부가 n이면 제외
        		   AND Z1.VALUE IS NULL
        		   </if>
        		   </if>
        		   ) A
        	GROUP  BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE,	A.ITEM_NAME,	A.SPEC,  A.STOCK_UNIT
        			, A.WH_CODE,   A.WH_NAME,  A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
           			, A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P

        	ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

        	SET NOCOUNT OFF
        	SET ARITHABORT OFF
        END
	</select>


	<!-- 현재고 수량이 0보다 많은 재고정보만 표시하는 팝업 -->
	<select id="popupServiceImpl.lotStockPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE	@COMP_CODE		NVARCHAR(08)		/*(필수) 법인코드*/
				  , @DIV_CODE		NVARCHAR(08)		/*(필수) 사업장코드*/
				  , @CUSTOM_CODE	NVARCHAR(08)		/*(필수) 거래처코드*/
				  , @CUSTOM_NAME	NVARCHAR(50)		/*(필수) 거래처명 */
				  , @ITEM_CODE		NVARCHAR(20)		/*(필수) 품목코드*/
				  , @ITEM_NAME		NVARCHAR(200)		/*(필수) 품목명*/
				  , @ITEM_ACCOUNT	NVARCHAR(02)		/*(필수) 품목계정*/

				  , @WH_CODE		NVARCHAR(08)		/*(선택) 창고코드*/
				  , @WH_CELL_CODE	NVARCHAR(20)		/*(선택) 창고Cell*/
				  , @LOT_NO			NVARCHAR(20)		/*(선택) LOT NO*/
				  , @USER_ID		NVARCHAR(100)		/*(필수) 사용자 ID*/

		/*1. 변수 값 할당*/
			SET	 @COMP_CODE		= #{S_COMP_CODE}
			SET	 @DIV_CODE		= #{DIV_CODE}
			SET	 @ITEM_CODE		= #{ITEM_CODE}
			SET	 @ITEM_NAME		= REPLACE(#{ITEM_NAME}, '[', '[[]')
			SET	 @ITEM_ACCOUNT	= #{ITEM_ACCOUNT}
			SET	 @USER_ID		= #{S_USER_ID}

		/*2. 사용자의 참조명칭*/
			DECLARE @RefItem NVARCHAR(01)

			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH(NOLOCK)
			 WHERE USER_ID = @USER_ID

			SET @RefItem = ISNULL(@RefItem, '0')

		/*3. LOT 재고정보 조회*/
			SELECT A.COMP_CODE
				 , A.DIV_CODE
				 , A.CUSTOM_CODE
				 , A.CUSTOM_NAME
				 , A.ITEM_NAME
				 , A.ITEM_CODE
				 , A.ITEM_NAME
				 , A.SPEC
				 , A.STOCK_UNIT
				 , A.WH_CODE
				 , A.WH_NAME
				 , A.WH_CELL_CODE
				 , A.WH_CELL_NAME
				 , A.LOT_NO
				 , A.LOT_NO															AS LOTNO_CODE
				 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q)	, 'R_FSET_Q')	AS INSTOCK_Q
				 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q)	, 'R_FSET_Q')	AS OUTSTOCK_Q
				 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q)		, 'R_FSET_Q')	AS STOCK_Q
				 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q')	AS GOOD_STOCK_Q
				 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q)	, 'R_FSET_Q')	AS BAD_STOCK_Q
				 , A.LOT_YN
			  FROM (
					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , A.CUSTOM_CODE
						 , B.CUSTOM_NAME
						 , A.ITEM_CODE
						 , CASE WHEN @RefItem = '0' THEN C0.ITEM_NAME
								WHEN @RefItem = '1' THEN C0.ITEM_NAME1
								WHEN @RefItem = '2' THEN C0.ITEM_NAME2
								ELSE C0.ITEM_NAME
							END												AS ITEM_NAME
						 , C0.SPEC
						 , C0.STOCK_UNIT
						 , A.WH_CODE
						 , C2.TREE_NAME										AS WH_NAME
						 , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
								ELSE A.WH_CELL_CODE
						 	END												AS WH_CELL_CODE
						 , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
								ELSE C3.WH_CELL_NAME
						 	END												AS WH_CELL_NAME
						 , A.LOT_NO
						 , A.INSTOCK_Q
						 , A.OUTSTOCK_Q
						 , A.STOCK_Q
						 , A.GOOD_STOCK_Q
						 , A.BAD_STOCK_Q
						 , C0.SALE_BASIS_P
						 , C1.LOT_YN
					  FROM		 BIV150T A  WITH (NOLOCK)
					  LEFT  JOIN BCM100T B  WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
														 AND B.CUSTOM_CODE	= A.CUSTOM_CODE
					  INNER JOIN BPR100T C0 WITH (NOLOCK) ON C0.COMP_CODE	= A.COMP_CODE
														 AND C0.ITEM_CODE	= A.ITEM_CODE
					  INNER JOIN BPR200T C1 WITH (NOLOCK) ON C1.COMP_CODE	= A.COMP_CODE
														 AND C1.DIV_CODE	= A.DIV_CODE
														 AND C1.ITEM_CODE	= A.ITEM_CODE
					  LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE	= A.COMP_CODE
														 AND C2.TYPE_LEVEL	= A.DIV_CODE
														 AND C2.TREE_CODE	= A.WH_CODE
					  LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE	= A.COMP_CODE
														 AND C3.DIV_CODE	= A.DIV_CODE
														 AND C3.WH_CODE		= A.WH_CODE
														 AND C3.WH_CELL_CODE= A.WH_CELL_CODE
					  LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE	= A.COMP_CODE
														 AND M1.MAIN_CODE	= N'B084'
														 AND M1.SUB_CODE	= N'C'			--Lot No. 합산여부
					  LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE
														 AND M2.MAIN_CODE	= N'B084'
														 AND M2.SUB_CODE	= N'D'			--창고 Cell 합산여부
					 WHERE A.COMP_CODE = @COMP_CODE
					   AND A.DIV_CODE  = @DIV_CODE
					   AND A.SUM_TYPE  = CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y' THEN 'D'
											  ELSE 'C'
										 END
					   AND ((A.ITEM_CODE LIKE @ITEM_CODE + '%' AND @ITEM_CODE != '') OR (@ITEM_CODE	= ''))
					   AND ((C0.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME	!= '')
						 OR (C0.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME	!= '')
						 OR (C0.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME	!= '') OR (@ITEM_NAME	= ''))
					<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					   AND C1.ITEM_ACCOUNT = @ITEM_ACCOUNT
					</if>
					<if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
					   AND A.LOT_NO LIKE '%' + #{LOTNO_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
					   AND A.WH_CODE = #{S_WH_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
					   AND A.WH_CELL_CODE = #{S_WH_CELL_CODE}
					</if>
					   AND A.STOCK_Q &gt; 0.0
			 ) A
			GROUP  BY A.COMP_CODE  , A.DIV_CODE   , A.ITEM_CODE   , A.ITEM_NAME   , A.SPEC  , A.STOCK_UNIT
					, A.WH_CODE    , A.WH_NAME    , A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO, A.LOT_YN
					, A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P

			ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.lotNoYpPopup" parameterType="Map" resultType="rMap">        /*LOTNO팝업(양평공사)*/
        BEGIN
            DECLARE  @COMP_CODE     NVARCHAR(08)     /*(필수) 법인코드*/
                   , @DIV_CODE      NVARCHAR(08)     /*(필수) 사업장코드*/
                   , @CUSTOM_CODE   NVARCHAR(08)     /*(필수) 거래처코드*/
                   , @CUSTOM_NAME   NVARCHAR(50)     /*(필수) 거래처명 */
                   , @ITEM_CODE     NVARCHAR(20)     /*(필수) 품목코드*/
                   , @ITEM_NAME     NVARCHAR(200)     /*(필수) 품목명*/

                   , @WH_CODE       NVARCHAR(08)     /*(선택) 창고코드*/
                   , @WH_CELL_CODE  NVARCHAR(20)     /*(선택) 창고Cell*/
                   , @LOT_NO        NVARCHAR(20)     /*(선택) LOT NO*/
                   , @STOCK_YN      NVARCHAR(01)     /*(선택) 현재고 유무*/
                   , @USER_ID       NVARCHAR(100)     /*(필수) 사용자 ID*/
                   , @ORDER_UNIT    NVARCHAR(10)     /*판매단위*/
                   , @TRANS_RATE    NVARCHAR(10)     /*판매단위*/

        /*1. 변수 값 할당*/
            SET  @COMP_CODE    = #{S_COMP_CODE}
            SET  @DIV_CODE     = #{DIV_CODE}
            SET  @ITEM_CODE    = #{ITEM_CODE}
            SET  @ITEM_NAME    = REPLACE(#{ITEM_NAME}, '[', '[[]')
           <if test="@foren.Ognl@isNotEmpty(STOCK_YN)">
            SET  @STOCK_YN    = #{STOCK_YN}
           </if>
           <if test="@foren.Ognl@isEmpty(STOCK_YN)">
            SET  @STOCK_YN    = 'Y'
           </if>
            SET  @USER_ID      = #{S_USER_ID}
           <if test="@foren.Ognl@isNotEmpty(TRANS_RATE)">
            SET @ORDER_UNIT = #{ORDER_UNIT}
            SET @TRANS_RATE = #{TRANS_RATE}
           </if>
            SET NOCOUNT ON
            SET ARITHABORT ON

        /*2. 사용자의 참조명칭*/
            DECLARE @RefItem            NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')



        /*3. LOT 재고정보 조회*/
            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.CUSTOM_CODE
                 , A.CUSTOM_NAME
                 , A.FARM_CODE   --농가코드
                 , A.FARM_NAME   --농가명
				 , CASE WHEN ISNULL(A.ORIGIN, '') = '' THEN (SELECT TOP 1 WONSANGI_NUM
															   FROM BTR100T WITH(NOLOCK)
															  WHERE COMP_CODE = A.COMP_CODE
															    AND DIV_CODE  = A.DIV_CODE
																AND ITEM_CODE = A.ITEM_CODE
																AND LOT_NO    = A.LOT_NO
																AND WH_CODE   = A.WH_CODE
																AND INOUT_TYPE = '1'
																AND ISNULL(WONSANGI_NUM, '') != ''
															  GROUP BY ITEM_CODE, LOT_NO, WH_CODE, INOUT_TYPE, DIV_CODE, WONSANGI_NUM)
						ELSE A.ORIGIN
				   END												AS ORIGIN
                 , A.ITEM_NAME
                 , A.ITEM_CODE
                 , A.ITEM_NAME
                 , A.SPEC
                 , A.STOCK_UNIT
                 , A.WH_CODE
                 , A.WH_NAME
                 , A.WH_CELL_CODE
                 , A.WH_CELL_NAME
                 , A.LOT_NO
                 , A.LOT_NO                                           AS LOTNO_CODE
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),  'R_FSET_Q') AS INSTOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') AS STOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') - SUM(ISNULL(A.UN_OUT_PRODT_Q,0)) AS ALLOW_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') - SUM(ISNULL(A.UN_OUT_PRODT_Q2,0)) AS ALLOW_Q2
                 <if test="@foren.Ognl@isNotEmpty(TRANS_RATE)">
                 , @ORDER_UNIT                                      AS ORDER_UNIT
                 , @TRANS_RATE                                      AS TRANS_RATE
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q) / @TRANS_RATE,  'R_FSET_Q')    AS ORDER_UNIT_STOCK_Q

                 </if>
            FROM   (
                   SELECT A.COMP_CODE
                        , A.DIV_CODE
                        , B.CUSTOM_CODE
                        , B.CUSTOM_NAME
                        , B1.FARM_CODE
                        , B1.FARM_NAME
                        , B1.ORIGIN
                        , A.ITEM_CODE
                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                               ELSE C1.ITEM_NAME
                          END                                                  AS ITEM_NAME
                        , C1.SPEC
                        , C1.STOCK_UNIT
                        , A.WH_CODE
                        , C2.TREE_NAME                                        AS WH_NAME
                        , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
                               ELSE A.WH_CELL_CODE
                          END                                                  AS WH_CELL_CODE
                        , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
                               ELSE C3.WH_CELL_NAME
                          END                                                  AS WH_CELL_NAME
                        , A.LOT_NO
                        , A.LOT_NO                                            AS LOTNO_CODE
                        , A.INSTOCK_Q
                        , A.OUTSTOCK_Q
                        , A.STOCK_Q
                        , A.GOOD_STOCK_Q
                        , A.BAD_STOCK_Q
                        , C1.SALE_BASIS_P
                        ,  M3.UN_OUT_PRODT_Q AS UN_OUT_PRODT_Q
                        ,  M4.UN_OUT_PRODT_Q AS UN_OUT_PRODT_Q2
                   FROM           BIV150T A  WITH (NOLOCK)
                          LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                           AND ISNULL(B.CHANNEL, '') = LEFT(A.LOT_NO, 2)
                                                            --AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN S_BCM106T_YP B1 WITH(NOLOCK) ON B1.COMP_CODE = B.COMP_CODE
                                                                AND B1.CUSTOM_CODE = B.CUSTOM_CODE
                                                                AND B1.FARM_CODE = SUBSTRING(A.LOT_NO, 8, 2)
                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                                             AND C1.ITEM_CODE   = A.ITEM_CODE
                          LEFT JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                             AND C2.TYPE_LEVEL   = A.DIV_CODE
                                                             AND C2.TREE_CODE   = A.WH_CODE
                          LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
                                                             AND C3.DIV_CODE     = A.DIV_CODE
                                                             AND C3.WH_CODE   = A.WH_CODE
                                                             AND C3.WH_CELL_CODE = A.WH_CELL_CODE
                          LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                             AND M1.MAIN_CODE   = N'B084'
                                                             AND M1.SUB_CODE     = N'C' /*Lot No. 합산*/
                          LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                                             AND M2.MAIN_CODE   = N'B084'
                                                             AND M2.SUB_CODE     = N'D' /*창고 Cell 합산*/
                         LEFT JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.LOT_NO, SUM(ISNULL(A.PRODT_Q, 0)) - SUM(ISNULL(B.INOUT_Q, 0)) AS  UN_OUT_PRODT_Q
									   FROM (SELECT A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.SER_NO, A.ITEM_CODE, A.LOT_NO, SUM(A.PRODT_Q) AS PRODT_Q
									                 FROM S_PMP111T_YP AS A WITH(NOLOCK)
									                   INNER JOIN SOF110T AS B WITH(NOLOCK) ON  A.COMP_CODE	= B.COMP_CODE
									                     AND A.DIV_CODE	= B.DIV_CODE
									                     AND A.ITEM_CODE	= B.ITEM_CODE
									                     AND A.ORDER_NUM	= B.ORDER_NUM
									                     AND A.SER_NO	= B.SER_NO
									                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.SER_NO, A.ITEM_CODE, A.LOT_NO) AS A
									         LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, ITEM_CODE, LOT_NO, SUM(INOUT_Q) AS INOUT_Q
													      FROM BTR100T AS A WITH(NOLOCK)
													     WHERE INOUT_TYPE = '2'
													       AND CREATE_LOC = '1'
													       AND INOUT_TYPE_DETAIL = '10'
													     GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, ITEM_CODE, LOT_NO) AS B  ON B.COMP_CODE = A.COMP_CODE
																			                                                         AND B.DIV_CODE  = A.DIV_CODE
																			                                                         AND B.ORDER_NUM = A.ORDER_NUM
																			                                                         AND B.ORDER_SEQ = A.SER_NO
																			                                                         AND B.ITEM_CODE = A.ITEM_CODE
																			                                                         AND B.LOT_NO    = A.LOT_NO


					                WHERE ISNULL(B.INOUT_Q, 0)  = 0
									GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.LOT_NO) AS M3  ON M3.COMP_CODE = A.COMP_CODE
									                                                               AND M3.DIV_CODE  = A.DIV_CODE
																		                           AND M3.ITEM_CODE = A.ITEM_CODE
																		                           AND M3.LOT_NO    = A.LOT_NO
						  LEFT JOIN
						     (SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.LOT_NO, SUM(ISNULL(A.PRODT_Q, 0)) - SUM(ISNULL(B.INOUT_Q, 0)) AS  UN_OUT_PRODT_Q
							   FROM
								 ((SELECT COMP_CODE,DIV_CODE,WH_CODE, WKORD_NUM,ITEM_CODE,LOT_NO,SUM(ALLOCK_Q) AS PRODT_Q
								   FROM PMP200T
								   GROUP BY COMP_CODE, DIV_CODE, WH_CODE, WKORD_NUM, ITEM_CODE, LOT_NO ) AS A
									LEFT JOIN  (SELECT COMP_CODE, DIV_CODE,WH_CODE, ORDER_NUM, ITEM_CODE, LOT_NO, SUM(INOUT_Q) AS INOUT_Q
										FROM BTR100T AS A WITH(NOLOCK)
										WHERE INOUT_TYPE = '2'
										AND CREATE_LOC = '3'
										AND INOUT_TYPE_DETAIL = '10'
										GROUP BY COMP_CODE, DIV_CODE,WH_CODE, ORDER_NUM, ITEM_CODE, LOT_NO) AS B ON A.COMP_CODE = B.COMP_CODE
																												AND A.DIV_CODE = B.DIV_CODE
																												AND A.WH_CODE = B.WH_CODE
																												AND A.WKORD_NUM = B.ORDER_NUM
																												AND A.ITEM_CODE = B.ITEM_CODE
			 																									AND A.LOT_NO = B.LOT_NO)
										 WHERE ISNULL(B.INOUT_Q, 0)  = 0
										 GROUP BY A.COMP_CODE, A.DIV_CODE,A.WH_CODE, A.ITEM_CODE, A.LOT_NO) M4   ON M4.COMP_CODE = A.COMP_CODE
									                                                               AND M4.DIV_CODE  = A.DIV_CODE
																								   AND M4.WH_CODE   = A.WH_CODE
																		                           AND M4.ITEM_CODE = A.ITEM_CODE
																		                           AND M4.LOT_NO    = A.LOT_NO
                   WHERE  A.COMP_CODE      =       @COMP_CODE
                   AND  A.DIV_CODE      =      @DIV_CODE
                   AND  A.SUM_TYPE      = CASE  WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y'                                     THEN 'D'
                                                    ELSE 'C'
                                              END
                   AND  ((A.ITEM_CODE   LIKE       @ITEM_CODE + '%'                 AND @ITEM_CODE  != '') OR (@ITEM_CODE   = ''))
                   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_S)">
                   AND B.CUSTOM_CODE    LIKE       #{CUSTOM_CODE_S} + '%'
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME_S)">
                   AND B.CUSTOM_NAME    LIKE       #{CUSTOM_NAME_S} + '%'
                   </if>
                   AND  ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME  != '')
                      OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME  != '')
                      OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME  != '') OR (@ITEM_NAME   = ''))
                   <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
                   AND  A.LOT_NO       LIKE    #{LOTNO_CODE}  + '%'
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
                   AND  A.WH_CODE        =     #{S_WH_CODE}
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
                   AND  A.WH_CELL_CODE       =     #{S_WH_CELL_CODE}
                   </if>
                   AND  ((A.STOCK_Q      != 0.0                                 AND @STOCK_YN     = 'Y')
                      OR (A.STOCK_Q      = 0.0                                     AND @STOCK_YN      = 'N')
                      OR (ISNULL(@STOCK_YN, '')      = ''))
                   AND ISNULL(A.LOT_NO ,'') !=  ''
                   AND A.STOCK_Q >= 0
                   ) A
            GROUP  BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ITEM_NAME,    A.SPEC,  A.STOCK_UNIT
                    , A.WH_CODE,   A.WH_NAME,  A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
                    , A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P, A.FARM_CODE, A.FARM_NAME, A.ORIGIN

            ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END


    </select>

	<select id="popupServiceImpl.lotNoYpPopup2" parameterType="Map" resultType="rMap">        /*LOTNO팝업(양평공사)*/
        /* popupServiceImpl.lotNoYpPopup2 */
        BEGIN
            DECLARE  @COMP_CODE     NVARCHAR(08)     /*(필수) 법인코드*/
                   , @DIV_CODE      NVARCHAR(08)     /*(필수) 사업장코드*/
                   , @CUSTOM_CODE   NVARCHAR(08)     /*(필수) 거래처코드*/
                   , @CUSTOM_NAME   NVARCHAR(50)     /*(필수) 거래처명 */
                   , @ITEM_CODE     NVARCHAR(20)     /*(필수) 품목코드*/
                   , @ITEM_NAME     NVARCHAR(200)     /*(필수) 품목명*/

                   , @WH_CODE       NVARCHAR(08)     /*(선택) 창고코드*/
                   , @WH_CELL_CODE  NVARCHAR(20)     /*(선택) 창고Cell*/
                   , @LOT_NO        NVARCHAR(20)     /*(선택) LOT NO*/
                   , @STOCK_YN      NVARCHAR(01)     /*(선택) 현재고 유무*/
                   , @USER_ID       NVARCHAR(100)     /*(필수) 사용자 ID*/
                   , @ORDER_UNIT    NVARCHAR(10)     /*판매단위*/
                   , @TRANS_RATE    NVARCHAR(10)     /*판매단위*/

        /*1. 변수 값 할당*/
            SET  @COMP_CODE    = #{S_COMP_CODE}
            SET  @DIV_CODE     = #{DIV_CODE}
            SET  @ITEM_CODE    = #{ITEM_CODE}
            SET  @ITEM_NAME    = REPLACE(#{ITEM_NAME}, '[', '[[]')
           <if test="@foren.Ognl@isNotEmpty(STOCK_YN)">
            SET  @STOCK_YN    = #{STOCK_YN}
           </if>
           <if test="@foren.Ognl@isEmpty(STOCK_YN)">
            SET  @STOCK_YN    = 'Y'
           </if>
            SET  @USER_ID      = #{S_USER_ID}

            SET NOCOUNT ON
            SET ARITHABORT ON

        /*2. 사용자의 참조명칭*/
            DECLARE @RefItem            NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')

        /*3. LOT 재고정보 조회*/
            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.CUSTOM_CODE
                 , A.CUSTOM_NAME
                 , A.FARM_CODE   --농가코드
                 , A.FARM_NAME   --농가명
                 , A.ITEM_NAME
                 , A.ITEM_CODE
                 , A.ITEM_NAME
                 , A.SPEC
                 , A.STOCK_UNIT
                 , A.WH_CODE
                 , A.WH_NAME
                 , A.WH_CELL_CODE
                 , A.WH_CELL_NAME
                 , A.LOT_NO
                 , A.LOT_NO                                                       AS LOTNO_CODE
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),    'R_FSET_Q') AS INSTOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') AS STOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
                 , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q
            FROM   (
                   SELECT A.COMP_CODE
                        , A.DIV_CODE
                        , B.CUSTOM_CODE
                        , B.CUSTOM_NAME
                        , B1.FARM_CODE
                        , B1.FARM_NAME
                        , A.ITEM_CODE
                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                               ELSE C1.ITEM_NAME
                          END                                                  AS ITEM_NAME
                        , C1.SPEC
                        , C1.STOCK_UNIT
                        , A.WH_CODE
                        , C2.TREE_NAME                                        AS WH_NAME
                        , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
                               ELSE A.WH_CELL_CODE
                          END                                                  AS WH_CELL_CODE
                        , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
                               ELSE C3.WH_CELL_NAME
                          END                                                  AS WH_CELL_NAME
                        , A.LOT_NO
                        , A.LOT_NO                                             AS LOTNO_CODE
                        , A.INSTOCK_Q
                        , A.OUTSTOCK_Q
                        , A.STOCK_Q
                        , A.GOOD_STOCK_Q
                        , A.BAD_STOCK_Q
                        , C1.SALE_BASIS_P
                   FROM           BIV150T A  WITH (NOLOCK)
                          LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                           AND ISNULL(B.CHANNEL, '') = LEFT(A.LOT_NO, 2)
                                                            --AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN S_BCM106T_YP B1 WITH(NOLOCK) ON B1.COMP_CODE = B.COMP_CODE
                                                                AND B1.CUSTOM_CODE = B.CUSTOM_CODE
                                                                AND B1.FARM_CODE = SUBSTRING(A.LOT_NO, 8, 2)
                          INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                                             AND C1.ITEM_CODE   = A.ITEM_CODE
                          LEFT JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                             AND C2.TYPE_LEVEL   = A.DIV_CODE
                                                             AND C2.TREE_CODE   = A.WH_CODE
                          LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
                                                             AND C3.DIV_CODE     = A.DIV_CODE
                                                             AND C3.WH_CODE   = A.WH_CODE
                                                             AND C3.WH_CELL_CODE = A.WH_CELL_CODE
                          LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                                             AND M1.MAIN_CODE   = N'B084'
                                                             AND M1.SUB_CODE     = N'C' /*Lot No. 합산*/
                          LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
                                                             AND M2.MAIN_CODE   = N'B084'
                                                             AND M2.SUB_CODE     = N'D' /*창고 Cell 합산*/
                   WHERE  A.COMP_CODE      =       @COMP_CODE
                   AND  A.DIV_CODE      =      @DIV_CODE
                   AND  A.SUM_TYPE      = CASE  WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y'                                     THEN 'D'
                                                    ELSE 'C'
                                              END
                   AND  ((A.ITEM_CODE   LIKE       @ITEM_CODE + '%'                 AND @ITEM_CODE  != '') OR (@ITEM_CODE   = ''))
                   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_S)">
                   AND B.CUSTOM_CODE    LIKE       #{CUSTOM_CODE_S} + '%'
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME_S)">
                   AND B.CUSTOM_NAME    LIKE       #{CUSTOM_NAME_S} + '%'
                   </if>
                   AND  ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME  != '')
                      OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME  != '')
                      OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME  != '') OR (@ITEM_NAME   = ''))
                   <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
                   AND  A.LOT_NO       LIKE    #{LOTNO_CODE}  + '%'
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
                   AND  A.WH_CODE        =     #{S_WH_CODE}
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
                   AND  A.WH_CELL_CODE       =     #{S_WH_CELL_CODE}
                   </if>
                   AND  ((A.STOCK_Q      != 0.0                                 AND @STOCK_YN     = 'Y')
                      OR (A.STOCK_Q      = 0.0                                     AND @STOCK_YN      = 'N')
                      OR (ISNULL(@STOCK_YN, '')      = ''))
                   ) A
            GROUP  BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.ITEM_NAME,    A.SPEC,  A.STOCK_UNIT
                    , A.WH_CODE,   A.WH_NAME,  A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
                    , A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P, A.FARM_CODE, A.FARM_NAME

            ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

	<select id="popupServiceImpl.planNumPopup" parameterType="Map" resultType="rMap">		/*계획번호팝업*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	NVARCHAR(08) /* 법인코드	*/
				  , @UserId	  NVARCHAR(100) /* 사용자ID	*/
				  , @LangType	NVARCHAR(2)  /* 언어구분	*/
				  , @RefItem	 NVARCHAR(01) /* 명칭 참조 유형  */
				  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			/* 데이터 조회 */
			SELECT A.COMP_CODE
				 , A.DIV_CODE
				 , A.PLAN_NUM
				 , A.PLAN_DATE
				 , A.ITEM_CODE
				 , B.ITEM_NAME
				 , B.SPEC
				 , B.OEM_ITEM_CODE
				 , B.CAR_TYPE
				 , A.MAKE_DATE
				 , A.REMARK
			  FROM	  S_ZAA100T_KD	A WITH (NOLOCK)
			  LEFT JOIN BPR100T	  AS B WITH (NOLOCK) ON B.COMP_CODE	  = A.COMP_CODE
													   AND B.ITEM_CODE	  = A.ITEM_CODE
			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			   AND A.DIV_CODE	   = #{DIV_CODE}
			   AND A.PLAN_DATE	  &gt;= #{PLAN_DATE_FR}
			   AND A.PLAN_DATE	  &lt;= #{PLAN_DATE_TO}
			 <if test="@foren.Ognl@isNotEmpty(PLAN_NUM)">
			   AND A.PLAN_NUM	   LIKE #{PLAN_NUM} + '%'
			 </if>
			 ORDER BY A.PLAN_DATE

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.reqNumPopup" parameterType="Map" resultType="rMap">		/*의뢰번호팝업*/
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT  A.P_REQ_NUM
				   ,A.COMP_CODE
				   ,A.DIV_CODE
				   ,B.SER_NO
				   ,B.ITEM_NAME
				   ,B.SPEC
				   ,B.ORDER_UNIT
				   ,B.CUSTOM_CODE
				   ,B.CUSTOM_NAME
				   ,B.ITEM_P
				   ,B.PRICE_TYPE
				   ,B.PAY_TERMS
				   ,B.MAKER_NAME
				   ,A.TREE_CODE
				   ,C.TREE_NAME
				   ,A.PERSON_NUMB
				   ,ISNULL(D.NAME, '')	   AS PERSON_NAME
				   ,A.TYPE
				   ,A.MONEY_UNIT
				   ,A.P_REQ_DATE
				   ,A.APLY_START_DATE
				   ,A.GW_FLAG
				   ,A.INSERT_DB_USER
				   ,A.INSERT_DB_TIME
				   ,A.UPDATE_DB_USER
				   ,A.UPDATE_DB_TIME
			  FROM  S_BCO100T_KD A
				LEFT  JOIN BSA210T	  C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
													   AND C.TREE_CODE   = A.TREE_CODE
				LEFT  JOIN HUM100T	  D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
													   AND D.PERSON_NUMB = A.PERSON_NUMB
	            LEFT  JOIN S_BCO110T_KD    B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.DIV_CODE = A.DIV_CODE
                                                       AND B.P_REQ_NUM = A.P_REQ_NUM
			 WHERE  A.DIV_CODE		= #{DIV_CODE}
			   AND  B.CONFIRM_YN = 'N'
			   <if test="@foren.Ognl@isNotEmpty(P_REQ_DATE_FR)">
			   AND  A.P_REQ_DATE	  &gt;= #{P_REQ_DATE_FR}
			   </if>
				<if test="@foren.Ognl@isNotEmpty(P_REQ_DATE_TO)">
			   AND  A.P_REQ_DATE	  &lt;= #{P_REQ_DATE_TO}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TYPE)">
			   AND  A.TYPE			= #{TYPE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(APLY_START_DATE_FR)">
			   AND  A.APLY_START_DATE &gt;= #{APLY_START_DATE_FR}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(APLY_START_DATE_TO)">
			   AND  A.APLY_START_DATE &lt;= #{APLY_START_DATE_TO}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(P_REQ_NUM)">
			   AND  A.P_REQ_NUM	   LIKE #{P_REQ_NUM} + '%'
			   </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.reqNum2Popup" parameterType="Map" resultType="rMap">       /*의뢰번호팝업2*/
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON

            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , A.REQ_NUM
                  , A.REQ_DATE
                  , A.CUSTOM_CODE
                  , B.CUSTOM_CODE           AS CUSTOM_NAME
                  , A.REQ_GUBUN
                  , A.ITEM_CODE
                  , C.ITEM_NAME             AS ITEM_NAME
                  , A.DEPT_CODE
                  , D.TREE_NAME             AS DEPT_NAME
                  , A.PERSON_NUMB           AS PERSON_NUMB
                  , E.NAME                  AS PERSON_NAME
                  , A.REMARK
             FROM S_ZCC800T_KD            A WITH(NOLOCK)
                    LEFT  JOIN BCM100T    B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                         AND B.CUSTOM_CODE = A.CUSTOM_CODE
                    LEFT  JOIN BPR100T    C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                         AND C.ITEM_CODE   = A.ITEM_CODE
                    LEFT  JOIN BSA210T    D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                         AND D.TREE_CODE   = A.DEPT_CODE
                    LEFT  JOIN HUM100T    E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                         AND E.PERSON_NUMB = A.PERSON_NUMB
             WHERE  A.DIV_CODE      = #{DIV_CODE}
                <if test="@foren.Ognl@isNotEmpty(REQ_NUM)">
               AND  A.REQ_NUM       LIKE #{REQ_NUM} + '%'
               </if>
                <if test="@foren.Ognl@isNotEmpty(REQ_DATE_FR)">
               AND  A.REQ_DATE      &gt;= #{REQ_DATE_FR}
               </if>
                <if test="@foren.Ognl@isNotEmpty(REQ_DATE_TO)">
               AND  A.REQ_DATE      &lt;= #{REQ_DATE_TO}
               </if>
               <if test="@foren.Ognl@isNotEmpty(REQ_GUBUN)">
               AND  A.REQ_GUBUN          = #{REQ_GUBUN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND  A.CUSTOM_CODE   = #{CUSTOM_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND  A.REMARK        LIKE #{REMARK} +'%'
               </if>

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

	<select id="popupServiceImpl.returnNumPopup" parameterType="Map" resultType="rMap">		/* 관세환급번호팝업 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
				SELECT   A.COMP_CODE
						,A.DIV_CODE
						,A.RETURN_NO
						,A.RETURN_DATE
						,A.ENTRY_MAN
						,A.REMARK
				  FROM  S_tix902T_KD	A   WITH (NOLOCK)
				 WHERE A.DIV_CODE = #{DIV_CODE}

				 <if test="@foren.Ognl@isNotEmpty(RETURN_DATE_FR)">
				   AND A.RETURN_DATE &gt;= #{RETURN_DATE_FR}
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(RETURN_DATE_TO)">
				   AND A.RETURN_DATE &lt;= #{RETURN_DATE_TO}
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(RETURN_NO)">
				   AND A.RETURN_NO LIKE '%' + #{RETURN_NO} + '%'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(ENTRY_MAN)">
				   AND A.ENTRY_MAN LIKE '%' + #{ENTRY_MAN} + '%'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(REMARK)">
				   AND A.REMARK LIKE '%' + #{REMARK} + '%'
				 </if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.hsPopup" parameterType="Map" resultType="rMap">		/*HS팝업*/
	--uniLITE5Popup.CPopup[getHSPopup] Query01
	SELECT HS_NO
		 , HS_NAME
		 , HS_SPEC
		 , HS_UNIT
	  FROM TAA030T WITH (NOLOCK)
	 WHERE COMP_CODE   = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(HS_NO)">
		AND (HS_NO LIKE #{HS_NO} + '%'
		OR HS_NAME LIKE '%'+ #{HS_NO} + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(HS_NAME)">
		AND (HS_NO LIKE #{HS_NAME} + '%'
		OR HS_NAME LIKE '%'+ #{HS_NAME} + '%' )
		</if>
	 ORDER BY HS_NO ASC
	</select>


	<select id="popupServiceImpl.custBillPrsnPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.CustBillPrsnPopup */
		SELECT   A.SEQ,
				 A.PRSN_NAME,
				 A.DEPT_NAME,
				 A.HAND_PHON,
				 A.TELEPHONE_NUM1,
				 A.TELEPHONE_NUM2,
				 A.FAX_NUM,
				 A.MAIL_ID,
				 A.BILL_TYPE,
				 A.MAIN_BILL_YN,
				 A.REMARK
		   FROM  BCM120T A
		  INNER  JOIN BCM100T B ON B.COMP_CODE = A.COMP_CODE AND B.CUSTOM_CODE = A.CUSTOM_CODE
		  WHERE  A.COMP_CODE = #{S_COMP_CODE}
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			  AND A.CUSTOM_CODE = CONVERT(VARCHAR, #{CUSTOM_CODE})
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(SEARCH_TEXT)">
    			  <if test="SEARCH_TYPE == 'BILLPRSN'">
    			  AND A.PRSN_NAME = #{SEARCH_TEXT}
    			  </if>
    			  <if test="SEARCH_TYPE == 'REMAIL'">
    			  AND A.MAIL_ID = #{SEARCH_TEXT}
    			  </if>
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
			   AND A.BILL_TYPE IN  ('3',
					<foreach collection="BILL_TYPE" item="item" separator=",">
						#{item}
					</foreach>
			   )
			  </if>
			   <if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
			   AND A.PRSN_NAME
				<if test="USELIKE == false">
					 = #{PRSN_NAME}
			 	</if>
			 	<if test="USELIKE != false">
					LIKE   '%' + #{PRSN_NAME} + '%'
			 	</if>
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
				AND ${ADD_QUERY}
			</if>
			<if test="RDO == 1">
				ORDER BY A.SEQ
			</if>
			<if test="RDO == 2">
				ORDER BY A.PRSN_NAME
			</if>

	</select>
	<select id="popupServiceImpl.project" parameterType="Map" resultType="rMap">
		/* uniLITE5Popup.CPopup[getProjectPopup] Query02 */
		SELECT A.PJT_CODE
			 , A.PJT_NAME
			 , A.PJT_TYPE
			 ,A.FR_DATE
			 ,A.TO_DATE
			 , ISNULL(A.PJT_AMT, 0) AS PJT_AMT
			 , ISNULL(A.CUSTOM_CODE, '') AS CUSTOM_CODE
			 , ISNULL(B.CUSTOM_NAME, '') AS CUSTOM_NAME
			<if test="@foren.Ognl@isNotEmpty(BPARAM0)">
				<if test="BPARAM0 &gt;= 4">
					, uniLITE.fnCustNameComp(A.COMP_CODE, #{S_COMP_CODE}, B.CUSTOM_CODE) AS CUSTOM_NAME
				</if>
				<if test="BPARAM0 &lt; 4">
					, ISNULL(B.CUSTOM_NAME, '') AS CUSTOM_NAME
				</if>
			</if>
		  FROM BCM600T A WITH (NOLOCK)
					   LEFT OUTER JOIN BCM100T B WITH (NOLOCK)
									ON A.COMP_CODE   = B.COMP_CODE
								   AND A.CUSTOM_CODE = B.CUSTOM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.PJT_CODE IS NOT NULL
<!-- 20191226 수정: 구분 관계없이 코드/명 like 검색하도록 수정
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
		   AND A.PJT_CODE = #{PJT_CODE}
		</if>
		<if test="RDO == &quot;1&quot;">
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND A.PJT_CODE LIKE {TXT_SEARCH} + '%'
		</if>
		</if>
		<if test="RDO == &quot;2&quot;">
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND A.PJT_NAME LIKE {TXT_SEARCH} + '%'
		</if>
		</if>
-->
<!-- 20191226 수정: 구분 관계없이 코드/명 like 검색하도록 수정부분 -->
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
		   AND (A.PJT_CODE LIKE #{PJT_CODE} + '%'
		     OR A.PJT_NAME LIKE #{PJT_CODE} + '%')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.PJT_CODE LIKE #{TXT_SEARCH} + '%'
		     OR A.PJT_NAME LIKE #{TXT_SEARCH} + '%')
		</if>
<!-- 20191226 수정: 여기까지 -->
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
		   AND DIVI = 'N'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE)">
		   AND DIVI = 'N'
		</if>
		<if test="BPARAM0 == 1">
		   ORDER BY A.PJT_CODE ASC
		</if>
		<if test="BPARAM0 == 3">
		   ORDER BY A.PJT_CODE ASC
		</if>
		<if test="BPARAM0 == 2">
		   ORDER BY A.PJT_NAME ASC
		</if>
		<if test="BPARAM0 == 4">
		   ORDER BY A.PJT_NAME ASC
		</if>
		<if test="@foren.Ognl@isEmpty(BPARAM0)">
		   ORDER BY A.PJT_CODE ASC
		</if>
	</select>

	<select id="popupServiceImpl.pjtPopup" parameterType="Map" resultType="rMap">
		/* URFuncKrv.CRFuncKr[getPjtPopup] Query02	*/

		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @COMP_CODE		  NVARCHAR(10)				-- (필수) 법인코드
				  , @DIV_CODE		   NVARCHAR(10)				-- (필수) 사업장코드
				  , @PJT_CODE		   NVARCHAR(20)				-- (필수) 프로젝트번호
				  , @USER_ID			NVARCHAR(100)				-- (필수) 사용자 ID

		/*  1. 변수 값 할당 ----------------------------------------------------------------------------------------------- */
			SET @COMP_CODE		  = #{S_COMP_CODE}
			SET @DIV_CODE		   = #{DIV_CODE}
			SET @PJT_CODE		   = #{PJT_CODE}
			SET @USER_ID			= #{S_USER_ID}

		/*  2. 명칭 조회 유형 설정 ------------------------------------------------------------------------------------------ */
			DECLARE @RefItem			NVARCHAR(01)

			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @USER_ID

			SET @RefItem = ISNULL(@RefItem, '0')

		/* 3. 데이터 조회 -------------------------------------------------------------------------------------------------- */
			SELECT A.COMP_CODE
				 , A.DIV_CODE
				 , A.PJT_CODE
				 , A.PJT_NAME
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUSI_FR_DATE) AS BUSI_FR_DATE
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUSI_TO_DATE) AS BUSI_TO_DATE
				 , A.CUSTOM_CODE
				 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
						WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
						ELSE C1.CUSTOM_NAME
				   END												AS CUSTOM_NAME
				 , A.PJT_AMT
				 , ISNULL(D1.ORDER_O,0)							   AS CONTRACT_AMT
				 , A.BUSI_DIVI
				 , A.BUSI_TYPE
				 , A.PROCESS_STATUS
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUILD_DATE)   AS BUILD_DATE
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.REG_DATE)	 AS REG_DATE
				 , A.BUILD_CUSTOM
				 , CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
						WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
						ELSE C2.CUSTOM_NAME
				   END												AS BUILD_NAME
				 , A.CAPACITY
				 , A.PROC_TYPE
				 , A.PROCESS_DESC
				 , A.DEPT_CODE
				 , C3.TREE_NAME									   AS DEPT_NAME
				 , A.IN_REMARK
				 , A.SALES_REMARK
				 , A.PRO_REMARK
				 , A.INSERT_DB_USER
				 , A.INSERT_DB_TIME
				 , A.UPDATE_DB_USER
				 , A.UPDATE_DB_TIME
			  FROM			PJT100T A  WITH (NOLOCK)
				   INNER JOIN PJT910T A1 WITH (NOLOCK) ON A1.COMP_CODE   = A.COMP_CODE
													  AND A1.DIV_CODE	= A.DIV_CODE
													  AND A1.PJT_CODE	= A.PJT_CODE
													  AND A1.USER_ID	 = @USER_ID
				   LEFT  JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
													  AND C1.CUSTOM_CODE = A.CUSTOM_CODE
				   LEFT  JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
													  AND C2.CUSTOM_CODE = A.BUILD_CUSTOM
				   LEFT  JOIN BSA210T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
													  AND C3.TREE_CODE   = A.DEPT_CODE
				   LEFT  JOIN (SELECT E.COMP_CODE
									, E.DIV_CODE
									, E.PJT_CODE
									, SUM(D.ORDER_O) AS ORDER_O
								 FROM			SOF110T AS D WITH (NOLOCK)
									  INNER JOIN SOF100T AS E WITH (NOLOCK) ON E.COMP_CODE  = D.COMP_CODE
																		   AND E.DIV_CODE   = D.DIV_CODE
																		   AND E.ORDER_NUM  = D.ORDER_NUM
								WHERE E.COMP_CODE = @COMP_CODE
								GROUP BY E.COMP_CODE, E.DIV_CODE, E.PJT_CODE) D1 ON D1.COMP_CODE   = A.COMP_CODE
																				AND D1.DIV_CODE	= A.DIV_CODE
																				AND D1.PJT_CODE	= A.PJT_CODE
			 WHERE A.COMP_CODE	  = @COMP_CODE
			   AND A.DIV_CODE	   = @DIV_CODE

			   <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				   <if test="USELIKE == false">
						AND A.PJT_CODE = #{PJT_CODE}						 /* 프로젝트코드*/
				   </if>
				   <if test="USELIKE != false">
						AND A.PJT_CODE LIKE #{PJT_CODE} +  '%'
				   </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
				   <if test="USELIKE == false">
						AND A.PJT_NAME = #{PJT_NAME}						 /* 프로젝트명*/
				   </if>
				   <if test="USELIKE != false">
						AND A.PJT_NAME LIKE #{PJT_NAME} +  '%'
				   </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(BUSI_TYPE)">
			   AND A.BUSI_TYPE	  = #{BUSI_TYPE}						   /* 사업분야 */
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(BUSI_DIVI)">
			   AND A.BUSI_DIVI	  = #{BUSI_DIVI}						   /* 사업구분 */
			   </if>
			  <if test="CHECKED == &quot;START&quot;">
				   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_FR)">
						AND A.BUSI_FR_DATE  &gt;= #{BUSI_FR_DATE_FR}		   /* 사업기간 시작일_FR */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_TO)">
						AND A.BUSI_FR_DATE  &lt;= #{BUSI_FR_DATE_TO}		   /* 사업기간 시작일_TO */
				   </if>
			  </if>

			  <if test="CHECKED == &quot;END&quot;">
					<if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_FR)">
						AND A.BUSI_TO_DATE  &gt;= #{BUSI_FR_DATE_FR}				   /* 사업기간 종료일_FR */
				   </if>
				   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_TO)">
						AND A.BUSI_TO_DATE  &lt;= #{BUSI_FR_DATE_TO}				   /* 사업기간 종료일_TO */
				   </if>
			  </if>
			   <if test="@foren.Ognl@isNotEmpty(PROCESS_STATUS)">
			   AND A.PROCESS_STATUS = #{PROCESS_STATUS}					   /* 진행상태 */
			   </if>

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>

	<select id="popupServiceImpl.inoutNumPopup" parameterType="Map" resultType="rMap">
		/* zfS_popupz.vbs[INOUT_NUM] */
		SELECT  DISTINCT
				A.INOUT_NUM
			   ,uniLITE.fnGetUserdate(A.COMP_CODE,A.INOUT_DATE) AS INOUT_DATE
			   ,A.INOUT_CODE
			   ,(
				  CASE A.INOUT_CODE_TYPE WHEN '3' THEN C.TREE_NAME
										 WHEN '4' THEN B.CUSTOM_NAME
				  END
				)											   AS CUSTOM_NAME
			   ,A.WH_CODE
			   ,A.DIV_CODE
			   ,B.AGENT_TYPE
			   ,ISNULL(B.AREA_TYPE,'')						  AS AREA_TYPE
			   ,A.INOUT_TYPE
	  FROM	  BTR100T A
	  LEFT JOIN BCM100T B ON A.COMP_CODE  = B.COMP_CODE
						 AND A.INOUT_CODE = B.CUSTOM_CODE
	  LEFT JOIN BSA220T C ON A.COMP_CODE  = C.COMP_CODE
						 AND A.DIV_CODE   = C.TYPE_LEVEL
						 AND A.INOUT_CODE = C.TREE_CODE
	  WHERE  A.COMP_CODE		  = #{S_COMP_CODE}
		 AND A.CREATE_LOC		 = '1'
		 AND A.INOUT_TYPE_DETAIL != 'CI'
		 AND A.INOUT_TYPE	   IN (#{INOUT_TYPE})  /* 2 */
		 AND A.DIV_CODE		   = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		 AND A.INOUT_NUM	   LIKE #{INOUT_NUM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 AND A.INOUT_NUM	   = #{TXT_SEARCH}
		</if>

	  <if test="RDO == &quot;1&quot;">
		ORDER BY 2 DESC
	  </if>

	  <if test="RDO == &quot;2&quot;">
		ORDER BY 3 DESC
	  </if>

	</select>

	<select id="popupServiceImpl.orderNumPopup" parameterType="Map" resultType="rMap">
		<if test="@foren.Ognl@isEmpty(DETAIL_YN) || DETAIL_YN != &quot;Y&quot;">
			SELECT DISTINCT
				   A.ORDER_NUM
				 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ORDER_DATE) AS ORDER_DATE
				 , C.CUSTOM_NAME

			  FROM	   SOF100T A WITH (NOLOCK)
			  INNER JOIN SOF110T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
											   AND B.DIV_CODE    = A.DIV_CODE
											   AND B.ORDER_NUM   = A.ORDER_NUM
			  INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
											   AND C.CUSTOM_CODE = A.CUSTOM_CODE

			WHERE A.COMP_CODE      = #{S_COMP_CODE}
			  AND B.OUT_DIV_CODE   = #{DIV_CODE}
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			  AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
			  AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			  AND A.ORDER_NUM LIKE #{TXT_SEARCH} + '%'
			  </if>
			GROUP BY A.COMP_CODE, A.ORDER_NUM, A.ORDER_DATE, C.CUSTOM_NAME

			<if test="RDO == &quot;1&quot;">
				ORDER BY 2 DESC
			</if>

			<if test="RDO == &quot;2&quot;">
				ORDER BY 3 DESC
			</if>
		</if>

		<if test="@foren.Ognl@isNotEmpty(DETAIL_YN)">
			SELECT DISTINCT
				   A.ORDER_NUM
				 , B.SER_NO
				 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ORDER_DATE) AS ORDER_DATE
				 , uniLITE.fnGetUserdate(A.COMP_CODE, B.DVRY_DATE)  AS DVRY_DATE
				 , A.CUSTOM_CODE
				 , C.CUSTOM_NAME

			  FROM	     SOF100T A WITH (NOLOCK)
			 INNER JOIN  SOF110T B WITH (NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
												AND B.DIV_CODE		= A.DIV_CODE
												AND B.ORDER_NUM		= A.ORDER_NUM
			 INNER JOIN  BCM100T C WITH (NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
												AND C.CUSTOM_CODE	= A.CUSTOM_CODE

			WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			  AND B.OUT_DIV_CODE  = #{DIV_CODE}
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			  AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
			  AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			  AND A.ORDER_NUM   LIKE #{TXT_SEARCH} + '%'
			  </if>

			<if test="RDO == &quot;1&quot;">
				ORDER BY 3 DESC, 1 DESC, 2 DESC
			</if>

			<if test="RDO == &quot;2&quot;">
				ORDER BY 6 DESC, 1 DESC, 2 DESC
			</if>
		</if>
	</select>

	<select id="popupServiceImpl.orderNumPopup2" parameterType="Map" resultType="rMap">
		SELECT DISTINCT
			   A.ORDER_NUM
			 , B.SER_NO
			 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ORDER_DATE) AS ORDER_DATE
			 , uniLITE.fnGetUserdate(A.COMP_CODE, B.DVRY_DATE)  AS DVRY_DATE
			 , A.CUSTOM_CODE
			 , C.CUSTOM_NAME

		  FROM	     SOF100T A WITH (NOLOCK)
		 INNER JOIN  SOF110T B WITH (NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
											AND B.DIV_CODE		= A.DIV_CODE
											AND B.ORDER_NUM		= A.ORDER_NUM
		 INNER JOIN  BCM100T C WITH (NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
											AND C.CUSTOM_CODE	= A.CUSTOM_CODE

		WHERE A.COMP_CODE	  = #{S_COMP_CODE}
		  AND B.OUT_DIV_CODE  = #{DIV_CODE}
		  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		  AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		  AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		  AND A.ORDER_NUM   LIKE #{TXT_SEARCH} + '%'
		  </if>

		<if test="RDO == &quot;1&quot;">
			ORDER BY 3 DESC, 1 DESC, 2 DESC
		</if>

		<if test="RDO == &quot;2&quot;">
			ORDER BY 6 DESC, 1 DESC, 2 DESC
		</if>
	</select>

	<select id="popupServiceImpl.TaxBillSearchPopup" parameterType="Map" resultType="rMap">
			/* ssa560ukrv.Cssa560ukrv[fnStb110QPop] Query02 */
			/*WEBCASH용*/
			DECLARE  @COMP_CODE		NVARCHAR(08)				   /* 법인 */
				   , @SALE_DIV_CODE	NVARCHAR(08)				   /* 매출사업장 */
				   , @CUSTOM_CODE	  NVARCHAR(08)				   /* 거래처코드 */
				   , @CUSTOM_NAME	  NVARCHAR(40)				   /* 거래처명 */
				   , @DATE_FR		  NVARCHAR(08)				   /* 계산서일(FROM) */
				   , @DATE_TO		  NVARCHAR(08)				   /* 계산서일(TO) */
				   , @PUB_NUM		  NVARCHAR(20)				   /* 계산서번호 */
				   , @USER_ID		  NVARCHAR(100)				   /* 사용자 */
				   , @UPDATE_REASON	NVARCHAR(02)				   /* 수정사유 */
				   , @INFO			 NVARCHAR(200)				  /* 추가 수정발행 정보 */

			  SET  @COMP_CODE	  = #{S_COMP_CODE}
			  SET  @SALE_DIV_CODE  = #{SALE_DIV_CODE}
			  SET  @CUSTOM_CODE	= #{CUSTOM_CODE}
			  SET  @CUSTOM_NAME	= #{CUSTOM_NAME}
			  SET  @DATE_FR		= #{DATE_FR}
			  SET  @DATE_TO		= #{DATE_TO}
			  SET  @PUB_NUM		= #{PUB_NUM}
			  SET  @USER_ID		= #{S_USER_ID}
			  SET  @UPDATE_REASON  = #{UPDATE_REASON}
			  SET  @INFO		   = '수정발행 진행중인 계산서가 존재합니다.'

			DECLARE @REF_ITEM  CHAR(1)

			SELECT TOP 1 @REF_ITEM = REF_ITEM
			FROM BSA300T
			WHERE USER_ID = @USER_ID

			SELECT
				   A.DIV_CODE														   /* 신고사업장 */
				  , A.CUSTOM_CODE													   /* 매출처 */
				  , CASE  @REF_ITEM WHEN '0'  THEN M1.CUSTOM_NAME
										WHEN  '1' THEN M1.CUSTOM_NAME1
										WHEN  '2' THEN M1.CUSTOM_NAME2
										ELSE M1.CUSTOM_NAME END AS CUSTOM_NAME		  /* 매출처명 */
				  , A.PUB_NUM														   /* 계산서번호 */
				  , A.BILL_TYPE														 /* 계산서유형 */
				--20190219
				--  , A.BUSI_TYPE
				--  , A.PROOF_KIND
				  , M2.CODE_NAME AS  BILL_TYPE_NM									   /* 계산서유형명 */
				  , unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) AS BILL_DATE	/* 계산서 발행일 */
				  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_FR_DATE) + ' ~ '
					  +  uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_TO_DATE) AS PUB_DATE /* 매출기간 */
				  , A.SALE_DIV_CODE													 /* 매출사업장 */
				  , A.PROJECT_NO														/* 관리번호 */
				  , (CASE WHEN A.EX_DATE IS NULL THEN 'N' ELSE 'Y' END) AS EX_YN		/* 기표여부 */
				  , CASE  @REF_ITEM WHEN '0'  THEN M3.CUSTOM_NAME
										WHEN  '1' THEN M3.CUSTOM_NAME1
										WHEN  '2' THEN M3.CUSTOM_NAME2
										ELSE M3.CUSTOM_NAME END AS COLET_CUST_NM		/* 수금처 */
				  , ISNULL(M1.TAX_CALC_TYPE, '2') AS TAX_CALC_TYPE					  /* 세액계산방법 */
				  , ISNULL(M1.COLLECT_DAY , '') AS COLLECT_DAY						  /* 수금일 */
				  , ISNULL(M1.COMPANY_NUM , '') AS COMPANY_NUM						  /* 사업자번호 */
				  , ISNULL(M1.TOP_NAME , '') AS TOP_NAME								/* 대표자명 */
				  , ISNULL(M1.ADDR1 , '') AS ADDR1									  /* 주소1 */
				  , ISNULL(M1.ADDR2 , '') AS ADDR2									  /* 주소2 */
				  , ISNULL(M1.COMP_TYPE , '') AS COMP_TYPE							  /* 업태 */
				  , ISNULL(M1.COMP_CLASS , '') AS COMP_CLASS							/* 업종 */
				  , ISNULL(M1.WON_CALC_BAS, '3')  AS WON_CALC_BAS					   /* 원미만계산 */
				  , ISNULL(M1.COLLECT_CARE, '2')  AS COLLECT_CARE					   /* 미수관리방법 */
				  , ISNULL(M1.COLLECTOR_CP, '') AS  COLLECTOR_CP						/* 수금거래처코드 */
				  , CASE R1.SUB_CODE WHEN '01'  THEN A.BILL_DATE
									 WHEN '04'  THEN A.BILL_DATE
									 WHEN '05'  THEN A.BILL_DATE
									 WHEN '06'  THEN A.BILL_DATE
									 WHEN '02'  THEN CONVERT(CHAR(8), GETDATE(), 112)
									 WHEN '03'  THEN CONVERT(CHAR(8), GETDATE(), 112)  END AS REG_DATE /* 작성일 */
				  , CASE WHEN ISNULL(R1.REF_CODE1,'') !='Y' THEN R1.REF_CODE2
							  ELSE  ( CASE R1.SUB_CODE WHEN '01'  THEN R1.REF_CODE2
													   WHEN '02'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) + '(' + R1.REF_CODE2 + ')'
													   WHEN '03'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) + '(' + R1.REF_CODE2 + ')'
													   --20210802 수정: '계약의해제' 시, 비고에 당초 계산서 발행일 들어가도록 수정
													   --WHEN '04'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, CONVERT(CHAR(8), GETDATE(), 112)) + '(' + R1.REF_CODE2 + ')'
													   WHEN '04'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) + '(' + R1.REF_CODE2 + ')'
													   WHEN '05'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, CONVERT(CHAR(8), GETDATE(), 112)) + '(' + R1.REF_CODE2 + ')'
													   WHEN '06'  THEN R1.REF_CODE2 + '(' + A.BEFORE_PUB_NUM + ')'
									   END)
							   END AS REG_REMARK  /* 비고 */
				  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_FR_DATE) AS PUB_FR_DATE	 /* 매출기간(FROM) */
				  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_TO_DATE) AS PUB_TO_DATE	 /* 매출기간(TO) */
				  , A.ORIGINAL_PUB_NUM AS ORIGINAL_PUB_NUM								/* 원본 세금계산서 */
				  , A.SALE_AMT_O															/* 금액  */
				  , A.TAX_AMT_O																/* 세액  */
				  , A.SALE_AMT_O + A.TAX_AMT_O AS SALE_TOT_AMT					 			/* 합계금액 */
				  , unilite.fnGetUserDateComp(A.COMP_CODE, A.RECEIPT_PLAN_DATE) AS RECEIPT_PLAN_DATE/* 수금예정일 */
				  , CASE WHEN D.STAT_CODE = '0' THEN @INFO ELSE '' END  AS INFO					 /* 수정발행정보 */
				  , ISNULL(A.SALE_PRSN, '') AS SALE_PRSN											/* 영업담당 */
				  , ISNULL(C.ISSU_ID, '') AS ISSU_ID												/* 국세청승인번호 */
				--20190219
				--  , ISNULL(A.ISSU_ID, '') AS ISSU_ID												/* 국세청승인번호 */
				--  , A.PRSN_NAME
				--  , A.PRSN_EMAIL
				--  , A.PRSN_PHONE
				--  , A.PRSN_HANDPHONE
				--  , A.SMS_CHECK
				--  , A.REMARK
				--  , A.BILL_SEND_YN
				--  , A.ERR_MSG
				--  , A.BILL_PUBLISH_TYPE
				--  , A.BROK_CUSTOM_CODE
				--  , A.BROK_PRSN_NAME
				--  , A.BROK_PRSN_EMAIL
				--  , A.BROK_PRSN_PHONE
				--  , A.INPUT_PATH
				--  ---20170330 추가
				--  , A.SEND_NAME
				--  , A.SEND_EMAIL
				--  , A.PRSN_NAME
				--  , A.PRSN_EMAIL
				--  , A.PRSN_PHONE
				--  , A.PRSN_HANDPHONE
				--  , A.SMS_CHECK

			FROM  ${TABLE_NAME}  A  WITH(NOLOCK)
					   INNER JOIN  BOR120T  B  WITH(NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
															 AND B.DIV_CODE = A.DIV_CODE
					   INNER JOIN   WEBCASH_DB.WEBCASH.ITIS_ISSU_MSTR  C  WITH(NOLOCK)  ON  C.ISSU_SEQNO = A.EB_NUM
					   INNER JOIN  (
										SELECT COMP_CODE
											   , DIV_CODE
											   , ORIGINAL_PUB_NUM
											   , RIGHT(MAX(CASE WHEN ISNULL(C.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END + PUB_NUM),
												   LEN(MAX(CASE WHEN ISNULL(C.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END + PUB_NUM)) -1)   AS PUB_NUM
											   , MIN(CASE WHEN ISNULL(C.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END)  AS STAT_CODE
										FROM ${TABLE_NAME}  A  WITH(NOLOCK)
										INNER JOIN   WEBCASH_DB.WEBCASH.ITIS_ISSU_MSTR  C  WITH(NOLOCK)  ON  C.ISSU_SEQNO = A.EB_NUM
										WHERE A.COMP_CODE = @COMP_CODE
											  AND (( A.SALE_DIV_CODE = @SALE_DIV_CODE AND @SALE_DIV_CODE != '') OR (@SALE_DIV_CODE = ''))
											  AND (( A.CUSTOM_CODE = @CUSTOM_CODE  AND @CUSTOM_CODE != '') OR (@CUSTOM_CODE = ''))
											  AND A.BILL_DATE &gt;= @DATE_FR
											  AND (( A.BILL_DATE &lt;= @DATE_TO AND @DATE_TO != '') OR (@DATE_TO = ''))
											  AND (( A.PUB_NUM = @PUB_NUM AND @PUB_NUM !='') OR (@PUB_NUM = ''))
											  AND A.PLUS_MINUS_TYPE = '+'
										GROUP BY COMP_CODE, DIV_CODE, ORIGINAL_PUB_NUM
									) D  ON  D.COMP_CODE = A.COMP_CODE
										 AND D.DIV_CODE = A.DIV_CODE
										 AND D.PUB_NUM  = A.PUB_NUM
					   INNER JOIN  BCM100T  M1 WITH(NOLOCK)  ON  M1.COMP_CODE =  A.COMP_CODE
															 AND M1.CUSTOM_CODE = A.CUSTOM_CODE
					   LEFT  JOIN  BSA100T  M2 WITH(NOLOCK)  ON  M2.COMP_CODE = A.COMP_CODE
															 AND M2.MAIN_CODE = 'A022'
															 AND M2.SUB_CODE = A.BILL_TYPE
					   LEFT JOIN  BCM100T  M3 WITH(NOLOCK)  ON  M3.COMP_CODE =  A.COMP_CODE
															 AND M3.CUSTOM_CODE = A.COLET_CUST_CD
					   CROSS JOIN  BSA100T R1 WITH(NOLOCK) /* 국세청 수정사유 처리 */
			WHERE A.COMP_CODE = @COMP_CODE
				AND (( A.SALE_DIV_CODE = @SALE_DIV_CODE AND @SALE_DIV_CODE != '') OR (@SALE_DIV_CODE = ''))
				AND (( A.CUSTOM_CODE = @CUSTOM_CODE  AND @CUSTOM_CODE != '') OR (@CUSTOM_CODE = ''))
				AND ((CASE  @REF_ITEM WHEN '0'  THEN M1.CUSTOM_NAME
										WHEN  '1' THEN M1.CUSTOM_NAME1
										WHEN  '2' THEN M1.CUSTOM_NAME2
										ELSE M1.CUSTOM_NAME END = @CUSTOM_NAME AND  @CUSTOM_NAME != '') OR (@CUSTOM_NAME = ''))
				AND A.BILL_DATE &gt;= @DATE_FR
				AND (( A.BILL_DATE &lt;= @DATE_TO AND @DATE_TO != '') OR (@DATE_TO = ''))
				AND (( A.PUB_NUM = @PUB_NUM AND @PUB_NUM !='') OR (@PUB_NUM = ''))
				AND A.BILL_SEND_YN ='Y'
				AND C.STAT_CODE = '00' /* 국세청정상 */
				AND A.PLUS_MINUS_TYPE = '+'
				AND R1.COMP_CODE = @COMP_CODE
				AND R1.MAIN_CODE = 'S095'
				AND R1.SUB_CODE = @UPDATE_REASON
			ORDER BY B.DIV_NAME, A.PUB_NUM
	</select>

	<select id="popupServiceImpl.mechanic" parameterType="Map" resultType="rMap">
		/*popupServiceImpl.mechanic*/
		SELECT A.MECHANIC_CODE,
			   H.NAME AS MECHANIC_NAME,

			   H.JOIN_DATE,
			   H.RETR_DATE,
			   H.KOR_ADDR,
			   H.TELEPHON,
			   H.PHONE_NO
		  FROM GME100T A
		  LEFT JOIN HUM100T H ON A.COMP_CODE = H.COMP_CODE
							 AND A.MECHANIC_CODE = H.PERSON_NUMB

		 WHERE A.COMP_CODE=#{S_COMP_CODE}
		   AND A.DIV_CODE=#{DIV_CODE}
		   AND H.RETR_DATE = '00000000'
		   <if test="@foren.Ognl@isNotEmpty(MECHANIC_CODE)">
				<if test="USELIKE != false">
				   AND A.MECHANIC_CODE LIKE '%' + #{MECHANIC_CODE} + '%'
				</if>
				<if test="USELIKE == false">
					AND A.MECHANIC_CODE = #{MECHANIC_CODE}
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(MECHANIC_NAME)">
				<if test="USELIKE != false">
				   AND H.NAME LIKE '%' + #{MECHANIC_NAME} + '%'
				</if>
				<if test="USELIKE == false">
					AND H.NAME = #{MECHANIC_NAME}
				</if>
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				<if test="USELIKE != false">
				   AND (A.MECHANIC_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR H.NAME LIKE '%' + #{TXT_SEARCH} + '%' )
				</if>
				<if test="USELIKE == false">
					AND (A.MECHANIC_CODE = #{TXT_SEARCH}
					OR H.NAME = #{TXT_SEARCH} )
				</if>
		   </if>
		 ORDER BY H.NAME
	</select>
	<select id="popupServiceImpl.getBomCopy" parameterType="Map" resultType="rMap">
		/* uniLITE5Popup.CPopup[getBomCopy] Query01 */
		BEGIN
			DECLARE	@COMP_CODE		NVARCHAR(08)	/* (필수) 법인코드  */
				  , @USER_ID		NVARCHAR(100)	/* (필수) 사용자명  */
				  , @DIV_CODE		NVARCHAR(08)	/* (필수) 사업장코드  */
				  , @ITEM_CODE		NVARCHAR(20)	/* (선택) 모품목코드  */

			SET @COMP_CODE   = #{S_COMP_CODE}
			SET @USER_ID     = #{S_USER_ID}
			SET @DIV_CODE    = #{DIV_CODE}
			SET @ITEM_CODE   = #{PROD_ITEM_CODE}

			/* 로그인 사용자 언어 */
			DECLARE	@RefItem	NVARCHAR(01)	/* 사용자 품목명 참조 유형  */

			SELECT TOP 1 @RefItem = ref_item
			FROM   BSA300T WITH (NOLOCK)
			WHERE  comp_code = @COMP_CODE
			AND	user_id   = @USER_ID

			SET @RefItem = ISNULL(@RefItem, '0')

			/* 자품목 목록 조회 */
			SELECT CAST('' AS BIT)										AS GUBUN
				 , A.COMP_CODE
				 , A.DIV_CODE
				 , A.SEQ
				 , A.PROD_ITEM_CODE
				 , A.CHILD_ITEM_CODE
				 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						ELSE					 C1.ITEM_NAME
				   END													AS ITEM_NAME
				 , C1.SPEC
				 , C1.STOCK_UNIT
				 , C2.ITEM_ACCOUNT
				 , A.PATH_CODE
				 , ISNULL(A.UNIT_Q, 0)									AS UNIT_Q
				 , ISNULL(A.PROD_UNIT_Q, 0)								AS PROD_UNIT_Q
				 , ISNULL(A.LOSS_RATE, 0)								AS LOSS_RATE
				 , A.USE_YN
				 , A.BOM_YN
				 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.START_DATE)	AS START_DATE
				 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.STOP_DATE)	AS STOP_DATE
				 , ISNULL(A.UNIT_P1, 0)									AS UNIT_P1
				 , ISNULL(A.UNIT_P2, 0)									AS UNIT_P2
				 , ISNULL(A.UNIT_P3, 0)									AS UNIT_P3
				 , ISNULL(A.MAN_HOUR, 0)								AS MAN_HOUR
				 , A.REMARK
				 , A.GRANT_TYPE
				 , A.SET_QTY
				 , A.MATERIAL_CNT
		 <if test="TABLE_NAME == &quot;BPR580T&quot;">
				 -- 20190520 처방등록, 전성분조회에서 조회 시 조회 데이터 추가
				 , A.LAB_NO
				 , A.REQST_ID
		 </if>
		 		 , A.GROUP_CODE
			FROM			  ${TABLE_NAME} A  WITH (NOLOCK)
		 <if test="PROD_ITEM_YN == &quot;Y&quot;">
 			-- 20190521 모품목 데이터 조회
			LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
											   AND C1.ITEM_CODE = A.PROD_ITEM_CODE
			LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
											   AND C2.DIV_CODE  = A.DIV_CODE
											   AND C2.ITEM_CODE = A.PROD_ITEM_CODE
		 </if>
		 <if test="PROD_ITEM_YN != &quot;Y&quot;">
 			-- 20190521 자품목 데이터 조회
			LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
											   AND C1.ITEM_CODE = A.CHILD_ITEM_CODE
			LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
											   AND C2.DIV_CODE  = A.DIV_CODE
											   AND C2.ITEM_CODE = A.CHILD_ITEM_CODE
		 </if>
			WHERE  A.COMP_CODE		= @COMP_CODE
			AND	A.DIV_CODE		 = @DIV_CODE
			AND	(ISNULL(@ITEM_CODE, '') = '' OR A.PROD_ITEM_CODE = @ITEM_CODE)
		 <if test="PROD_ITEM_YN == &quot;Y&quot;">
			-- 20190521 모품목 데이터 조회
			AND	A.CHILD_ITEM_CODE = '$'
		 </if>
		 <if test="PROD_ITEM_YN != &quot;Y&quot;">
			-- 20190521 자품목 데이터 조회
			AND	A.CHILD_ITEM_CODE != '$'
		 </if>
		 <if test="TABLE_NAME == &quot;BPR580T&quot;">
			-- 20190520 처방등록, 전성분조회에서 조회 시 order by
			ORDER BY A.LAB_NO, A.SEQ
		 </if>
		 <if test="TABLE_NAME != &quot;BPR580T&quot;">
			-- 20190520 BOM 테이블에서 조회 시 order by
			ORDER BY A.SEQ
		 </if>
		END

	</select>

	<select id="popupServiceImpl.custCreditCard" parameterType="Map" resultType="rMap">
		SELECT A.CREDIT_CODE		AS CUST_CREDIT_CODE
		 	 , A.CREDIT_NAME		AS CUST_CREDIT_NAME
			 , A.CARD_COMP_CODE
		 	 , B.CODE_NAME
		 	 , A.FEE_RATE
	  FROM		   BCM200T A WITH (NOLOCK)
		  INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.MAIN_CODE = N'A028'
											AND B.SUB_CODE  = A.CARD_COMP_CODE
	 WHERE A.COMP_CODE		= #{S_COMP_CODE}
	 <if test="RDO == 1">
	 	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND A.CREDIT_CODE   LIKE #{TXT_SEARCH} + '%'
	 	</if>
	 </if>
	 <if test="RDO == 2">
	 	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND A.CREDIT_NAME   LIKE #{TXT_SEARCH} + '%'
	 	</if>
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(CUST_CREDIT_CODE)">
	 	AND A.CREDIT_CODE   LIKE #{CUST_CREDIT_CODE} + '%'
	 </if>

	 <if test="@foren.Ognl@isNotEmpty(CUST_CREDIT_NAME)">
	 	AND A.CREDIT_NAME   LIKE #{CUST_CREDIT_NAME} + '%'
	 </if>

	 <if test="RDO != 2">
	 	ORDER BY A.CREDIT_CODE ASC
	 </if>
	 <if test="RDO == 2">
	 	ORDER BY A.CREDIT_NAME ASC
	 </if>
	</select>

	<select id="popupServiceImpl.creditCard" parameterType="Map" resultType="rMap">
	  SELECT SUB_CODE  AS CREDIT_CODE
		   , CODE_NAME AS CREDIT_NAME
		FROM BSA100T WITH (NOLOCK)
	   WHERE COMP_CODE   = #{S_COMP_CODE}
		 AND MAIN_CODE   = N'A028'
		 AND SUB_CODE   != N'$'
		 AND USE_YN	  = N'Y'
		 AND SUB_CODE LIKE N'%'

	 <if test="RDO == 1">
	 	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND SUB_CODE   LIKE #{TXT_SEARCH} + '%'
	 	</if>
	 </if>
	 <if test="RDO == 2">
	 	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND CODE_NAME   LIKE #{TXT_SEARCH} + '%'
	 	</if>
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(CREDIT_CODE)">
	 	AND SUB_CODE   LIKE #{CREDIT_CODE} + '%'
	 </if>

	 <if test="@foren.Ognl@isNotEmpty(CREDIT_NAME)">
	 	AND CODE_NAME   LIKE #{CREDIT_NAME} + '%'
	 </if>

	 <if test="RDO != 2">
	 	ORDER BY SUB_CODE ASC
	 </if>
	 <if test="RDO == 2">
	 	ORDER BY CODE_NAME ASC
	 </if>
	</select>


	<select id="popupServiceImpl.binPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

				SELECT
					COMP_CODE,
					DIV_CODE,
					DOC_GUBUN,
					DOC_COL,
					BIN_NUM,
					DOC_NAME,
					DOC_NAME_EN
				 FROM BPR210T
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND DIV_CODE = #{DIV_CODE}
				 <if test="GUBUN == &quot;DOC&quot;">
				  AND GUBUN = 'DOC'
				 </if>
				 <if test="GUBUN == &quot;FAN&quot;">
				  AND GUBUN = 'FAN'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		  AND (BIN_NUM LIKE #{TXT_SEARCH} + '%'
				   OR  DOC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(BIN_NUM)">
				  AND BIN_NUM LIKE #{BIN_NUM} + '%'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(DOC_NAME)">
				  AND DOC_NAME LIKE #{DOC_NAME} + '%'
				 </if>

		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>

	<select id="popupServiceImpl.posPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

				SELECT
					A.DIV_CODE
				  , A.POS_NO
				  , A.POS_NAME
				  , A.WH_CODE   AS WH_NAME
				  , A.WH_CODE
				  , A.DEPT_CODE
				  , B.TREE_NAME AS DEPT_NAME
				  , A.LOCATION

				  FROM	   BSA240T A WITH(NOLOCK)
				  LEFT  JOIN BSA210T B WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
													AND B.TYPE_LEVEL   = A.DIV_CODE
													AND B.TREE_CODE	= A.DEPT_CODE

				WHERE A.COMP_CODE = #{S_COMP_CODE}
				  AND A.DIV_CODE = #{DIV_CODE}
				 <if test="GUBUN == &quot;DOC&quot;">
				  AND GUBUN = 'DOC'
				 </if>
				 <if test="GUBUN == &quot;FAN&quot;">
				  AND GUBUN = 'FAN'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		  AND (BIN_NUM LIKE #{TXT_SEARCH} + '%'
				   OR  DOC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(BIN_NUM)">
				  AND BIN_NUM LIKE #{BIN_NUM} + '%'
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(DOC_NAME)">
				  AND DOC_NAME LIKE #{DOC_NAME} + '%'
				 </if>

		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>

	<select id="popupServiceImpl.accntDivCodePopup" parameterType="Map" resultType="rMap">
		--uniLITE5Popup.CPopup[getDiviPopup] Query01
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON
			SELECT ISNULL(DIV_CODE	 , '')				AS ACCNT_DIV_CODE
				 , ISNULL(DIV_NAME	 , '')				AS ACCNT_DIV_NAME
				 , ISNULL(DIV_FULL_NAME, '')				AS DIV_FULL_NAME
				 , ISNULL(COMPANY_NUM  , '')				AS COMPANY_NUM
				 , ISNULL(REPRE_NAME   , '')				AS REPRE_NAME
				 , ISNULL(REPRE_NO, '')   AS REPRE_NO
				 , ISNULL(COMP_CLASS   , '')				AS COMP_CLASS
				 , ISNULL(COMP_TYPE	, '')				AS COMP_TYPE
				 , ISNULL(ZIP_CODE	 , '')				AS ZIP_CODE
				 , ISNULL(ADDR		 , '')				AS ADDR
				 , ISNULL(TELEPHON	 , '')				AS TELEPHON
				 , ISNULL(FAX_NUM	  , '')				AS FAX_NUM
				 , ISNULL(SAFFER_TAX   , '')				AS SAFFER_TAX
				 , ISNULL(SAFFER_TAX_NM, '')				AS SAFFER_TAX_NM
				 , ISNULL(BILL_DIV_CODE, '')				AS BILL_DIV_CODE
				 , ISNULL(TAX_NAME	 , '')				AS TAX_NAME
				 , ISNULL(TAX_NUM	  , '')				AS TAX_NUM
				 , ISNULL(TAX_TEL	  , '')				AS TAX_TEL
				 , ISNULL(HANDPHONE	, '')				AS HANDPHONE
			  FROM BOR120T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						AND	 DIV_CODE	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY DIV_CODE ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						AND	 DIV_NAME	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY DIV_NAME ASC
					</if>
				</if>
				<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						ORDER BY DIV_CODE ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						ORDER BY DIV_NAME ASC
					</if>
				</if>
			</if>

			<if test="@foren.Ognl@isEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
					AND	 DIV_CODE	 = #{ACCNT_DIV_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_NAME)">
					AND	 DIV_NAME   	  = #{ACCNT_DIV_NAME}
				</if>
			</if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.accntsPopup1" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntCode] Query1
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON
			DECLARE @chargeCode nvarchar(99)

			SET @chargeCode = #{CHARGE_CODE}

			SELECT ISNULL(A.PROD_ACCNT, 0 ) PROD_ACCNT
				 , ISNULL(B.REF_CODE2 , '') USE_DEPT
			  FROM		   ABA100T AS A WITH (NOLOCK)
				   LEFT JOIN BSA100T AS B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													   AND B.MAIN_CODE = N'A009'
													   AND B.SUB_CODE  = ISNULL(@chargeCode, '')
			 WHERE 1=1
			<if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
			  AND A.COMP_CODE	  = #{COMP_CODE}
			</if>
			<if test="@foren.Ognl@isEmpty(COMP_CODE)">
			  AND A.COMP_CODE	  = #{S_COMP_CODE}
			</if>
			   AND A.BASE_CODE = N'01'

		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>

	<select id="popupServiceImpl.accntsPopup2" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntCode] Query2
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT  ISNULL(A.ACCNT	   ,'')						   AS ACCNT_CODE
				  , CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
						 WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
					END												 AS ACCNT_CD
				  , ISNULL(B.ACCNT_NAME  ,'')						   AS ACCNT_CD_NAME
				  , ISNULL(A.ACCNT_NAME  ,'')						   AS ACCNT_NAME
				  , ISNULL(A.AC_FULL_NAME,'')						   AS AC_FULL_NAME
				  , A.JAN_DIVI
				  , A.PEND_YN

			FROM				ABA400T   A WITH (NOLOCK)
					LEFT  JOIN  (
								SELECT  COMP_CODE
									  , ACCNT
									  , ACCNT_NAME
								FROM	ABA400T WITH (NOLOCK)
								)		 B			   ON B.COMP_CODE	= A.COMP_CODE
														 AND B.ACCNT		= (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
																					WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
																			   END)
				 <if test="ADD_QUERY2 == &quot;Y&quot;">
					INNER JOIN TB_ES_OBJM_ACCT	  C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE	   --조인스 관련
																  AND C.ACCT_CODE = A.ACCNT
				 </if>


			WHERE	1=1
			<if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
			  AND A.COMP_CODE	  = #{COMP_CODE}
			</if>
			<if test="@foren.Ognl@isEmpty(COMP_CODE)">
			  AND A.COMP_CODE	  = #{S_COMP_CODE}
			</if>
			  AND   A.ACCNT != '99999'
			<if test="PROD_ACCNT == &quot;0&quot;">
			  AND	 A.ACCNT_DIVI	!= N'5'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
				AND ${ADD_QUERY}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
				<if test="@foren.Ognl@isNotEmpty(USE_DEPT)">
					<if test="USE_DEPT != &quot;1&quot;">
						AND	 A.AUTHO_DIVI	 = #{USE_DEPT}
					</if>
				</if>
			</if>

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY A.ACCNT
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
				AND (A.ACCNT LIKE #{ACCNT_CODE} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
				AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )
				</if>
			</if>

		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>
	<select id="popupServiceImpl.accntsPayPopup" parameterType="Map" resultType="rMap">
		    SELECT  A.ACCNT                                       AS ACCNT
		         ,  B.ACCNT_NAME                                  AS ACCNT_NAME
		         ,  ISNULL(CASE WHEN B.AC_CODE1 = 'A9' THEN 'Y'
		                        WHEN B.AC_CODE2 = 'A9' THEN 'Y'
		                        WHEN B.AC_CODE3 = 'A9' THEN 'Y'
		                        WHEN B.AC_CODE4 = 'A9' THEN 'Y'
		                        WHEN B.AC_CODE5 = 'A9' THEN 'Y'
		                        WHEN B.AC_CODE6 = 'A9' THEN 'Y'
		                        ELSE 'N'
		                   END, '')                                AS COST_POOL_YN
		          , ISNULL(CASE WHEN D.AC_CODE1 = 'L3' AND D.CR_CTL1 = 'Y' THEN 'Y'
		                        WHEN D.AC_CODE2 = 'L3' AND D.CR_CTL2 = 'Y' THEN 'Y'
		                        WHEN D.AC_CODE3 = 'L3' AND D.CR_CTL3 = 'Y' THEN 'Y'
		                        WHEN D.AC_CODE4 = 'L3' AND D.CR_CTL4 = 'Y' THEN 'Y'
		                        WHEN D.AC_CODE5 = 'L3' AND D.CR_CTL5 = 'Y' THEN 'Y'
		                        WHEN D.AC_CODE6 = 'L3' AND D.CR_CTL6 = 'Y' THEN 'Y'
		                        ELSE 'N'
		                   END, '')                                AS SEND_DATE_YN
		    FROM                AGA350T   A WITH (NOLOCK)
		            INNER JOIN  ABA400T   B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                 AND B.ACCNT     = A.ACCNT
		            LEFT  JOIN  (SELECT COMP_CODE
		                              , PAY_DIVI
		                              , PAY_TYPE
		                              , DR_CR
		                              , AMT_DIVI
		                              , ACCNT
		                         FROM   AGA350T WITH (NOLOCK)
		                         WHERE  COMP_CODE = #{S_COMP_CODE}
		                         AND    GUBUN     = '1'
		                         AND    DR_CR     = '2'
		                         AND    AMT_DIVI  = '90'
		                         GROUP BY COMP_CODE, PAY_DIVI, PAY_TYPE, DR_CR, AMT_DIVI, ACCNT
		                        )         C               ON C.COMP_CODE = A.COMP_CODE
		                                                 AND C.PAY_DIVI  = A.PAY_DIVI
		                                                 AND C.PAY_TYPE  = A.PAY_TYPE
		            LEFT  JOIN  ABA400T   D WITH (NOLOCK) ON D.COMP_CODE = C.COMP_CODE
		                                                 AND D.ACCNT     = C.ACCNT
		    WHERE   A.COMP_CODE  = #{S_COMP_CODE}
		    AND     A.GUBUN      = #{GUBUN}
		    AND     A.PAY_DIVI   = #{PAY_DIVI}
		    AND     A.PAY_TYPE   = #{PAY_TYPE}
		    AND     A.MAKE_SALE  = #{MAKE_SALE}
		    AND     A.DR_CR      = '1'
		    AND     A.AMT_DIVI  != '20'      -- 부가세 제외
		    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		    AND (A.ACCNT LIKE #{TXT_SEARCH} + '%'
		 	OR B.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		    </if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
			AND (A.ACCNT LIKE #{ACCNT_CODE} + '%'
		 	OR B.ACCNT_NAME LIKE '%'+ #{ACCNT_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
			AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'
		 	OR B.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )
			</if>
	</select>
	<select id="popupServiceImpl.foreignAccntPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[foreignAccntPopup]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT ISNULL(A.ACCNT	   ,'')						   AS ACCNT
				 , ISNULL(A.ACCNT_NAME  ,'')						   AS ACCNT_NAME
			  FROM ABA400T   A WITH (NOLOCK)
			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			   AND A.FOR_YN			= 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 	   AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'
				OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 ORDER BY A.ACCNT
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ACCNT)">
			   AND (A.ACCNT LIKE #{ACCNT} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
			   AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )
				</if>
			</if>
		SET ARITHABORT OFF
		SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.exchangeAccntPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[foreignAccntPopup]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT ISNULL(A.ACCNT	   ,'')						   AS ACCNT
				 , ISNULL(A.ACCNT_NAME  ,'')						   AS ACCNT_NAME
			  FROM ABA400T   A WITH (NOLOCK)
			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			   AND A.GROUP_YN		= 'N'
			   AND A.SLIP_SW		= 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 	   AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'
				OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 ORDER BY A.ACCNT
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ACCNT)">
			   AND (A.ACCNT LIKE #{ACCNT} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
			   AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )
				</if>
			</if>
		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>

	<select id="popupServiceImpl.accntsPopupWithAcCode" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntCode] Query2
		DECLARE  @BudgProBase	NVARCHAR(01)

		--회계업무설정에서 사용하는 예산프로세스 가져오기
		SELECT @BudgProBase = BUDG_PRO_BASE
		  FROM ABA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}

		SET @BudgProBase = ISNULL(@BudgProBase, '1')

		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON


			SELECT  ISNULL(A.ACCNT	   ,'')						   AS ACCNT_CODE
					 ,CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
							 WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
					  END												 AS ACCNT_CD
					 ,ISNULL(B.ACCNT_NAME  ,'')						   AS ACCNT_CD_NAME
					 ,ISNULL(A.ACCNT_NAME  ,'')						   AS ACCNT_NAME
					 ,ISNULL(A.AC_FULL_NAME,'')						   AS AC_FULL_NAME
					 ,C.AC_CODE1
					 ,C.AC_CODE2
					 ,C.AC_CODE3
					 ,C.AC_CODE4
					 ,C.AC_CODE5
					 ,C.AC_CODE6
					 ,C.AC_NAME1
					 ,C.AC_NAME2
					 ,C.AC_NAME3
					 ,C.AC_NAME4
					 ,C.AC_NAME5
					 ,C.AC_NAME6
					 ,C.DR_CTL1
					 ,C.DR_CTL2
					 ,C.DR_CTL3
					 ,C.DR_CTL4
					 ,C.DR_CTL5
					 ,C.DR_CTL6
					 ,C.CR_CTL1
					 ,C.CR_CTL2
					 ,C.CR_CTL3
					 ,C.CR_CTL4
					 ,C.CR_CTL5
					 ,C.CR_CTL6
					 ,C.BOOK_CODE1
					 ,C.BOOK_CODE2
					 ,C.BOOK_NAME1
					 ,C.BOOK_NAME2
					 ,C.ACCNT_SPEC
					 ,C.SPEC_DIVI
					 ,C.PROFIT_DIVI
					 ,C.PEND_YN
					 ,C.PEND_CODE
					 ,C.BUDG_YN
					 ,C.BUDGCTL_YN
					 ,C.DR_FUND
					 ,C.CR_FUND
					 ,C.COST_DIVI
					 ,C.FOR_YN
					 ,C.ACCNT_DIVI
					 ,C.JAN_DIVI
					 ,C.SYSTEM_YN
					 ,C.AC_TYPE1
					 ,C.AC_TYPE2
					 ,C.AC_TYPE3
					 ,C.AC_TYPE4
					 ,C.AC_TYPE5
					 ,C.AC_TYPE6
					 ,C.AC_LEN1
					 ,C.AC_LEN2
					 ,C.AC_LEN3
					 ,C.AC_LEN4
					 ,C.AC_LEN5
					 ,C.AC_LEN6
					 ,C.AC_POPUP1
					 ,C.AC_POPUP2
					 ,C.AC_POPUP3
					 ,C.AC_POPUP4
					 ,C.AC_POPUP5
					 ,C.AC_POPUP6
					 ,C.PEND_NAME
					 ,C.PEND_TYPE
					 ,C.PEND_LEN
					 ,C.PEND_POPUP
					 ,C.AC_FORMAT1
					 ,C.AC_FORMAT2
					 ,C.AC_FORMAT3
					 ,C.AC_FORMAT4
					 ,C.AC_FORMAT5
					 ,C.AC_FORMAT6
			FROM				ABA400T   A WITH (NOLOCK)
					LEFT  JOIN  (
								SELECT  COMP_CODE
									  , ACCNT
									  , ACCNT_NAME
								FROM	ABA400T WITH (NOLOCK)
								)		 B			   ON B.COMP_CODE	= A.COMP_CODE
														 AND B.ACCNT		= (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
																					WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
																			   END)
					LEFT JOIN (
								SELECT ACCNT
									 , ISNULL(ACCNT_NAME  , '')	 AS ACCNT_NAME
									 , ISNULL(AC_FULL_NAME, '')	 AS AC_FULL_NAME
									 , ISNULL(ACCNT_NAME2 , '')	 AS ACCNT_NAME2
									 , ISNULL(ACCNT_NAME3 , '')	 AS ACCNT_NAME3
									 , ISNULL(AC_CODE1	, '')	 AS AC_CODE1
									 , ISNULL(AC_CODE2	, '')	 AS AC_CODE2
									 , ISNULL(AC_CODE3	, '')	 AS AC_CODE3
									 , ISNULL(AC_CODE4	, '')	 AS AC_CODE4
									 , ISNULL(AC_CODE5	, '')	 AS AC_CODE5
									 , ISNULL(AC_CODE6	, '')	 AS AC_CODE6
									 , ISNULL(C1.AC_NAME  , '')	 AS AC_NAME1
									 , ISNULL(C2.AC_NAME  , '')	 AS AC_NAME2
									 , ISNULL(C3.AC_NAME  , '')	 AS AC_NAME3
									 , ISNULL(C4.AC_NAME  , '')	 AS AC_NAME4
									 , ISNULL(C5.AC_NAME  , '')	 AS AC_NAME5
									 , ISNULL(C6.AC_NAME  , '')	 AS AC_NAME6
									 , ISNULL(DR_CTL1	 ,'N')	 AS DR_CTL1
									 , ISNULL(DR_CTL2	 ,'N')	 AS DR_CTL2
									 , ISNULL(DR_CTL3	 ,'N')	 AS DR_CTL3
									 , ISNULL(DR_CTL4	 ,'N')	 AS DR_CTL4
									 , ISNULL(DR_CTL5	 ,'N')	 AS DR_CTL5
									 , ISNULL(DR_CTL6	 ,'N')	 AS DR_CTL6
									 , ISNULL(CR_CTL1	 ,'N')	 AS CR_CTL1
									 , ISNULL(CR_CTL2	 ,'N')	 AS CR_CTL2
									 , ISNULL(CR_CTL3	 ,'N')	 AS CR_CTL3
									 , ISNULL(CR_CTL4	 ,'N')	 AS CR_CTL4
									 , ISNULL(CR_CTL5	 ,'N')	 AS CR_CTL5
									 , ISNULL(CR_CTL6	 ,'N')	 AS CR_CTL6
									 , ISNULL(BOOK_CODE1  , '')	 AS BOOK_CODE1
									 , ISNULL(BOOK_CODE2  , '')	 AS BOOK_CODE2
									 , ISNULL(D1.AC_NAME  , '')	 AS BOOK_NAME1
									 , ISNULL(D2.AC_NAME  , '')	 AS BOOK_NAME2
									 , ISNULL(ACCNT_SPEC  , '')	 AS ACCNT_SPEC
									 , ISNULL(SPEC_DIVI   , '')	 AS SPEC_DIVI
									 , ISNULL(PROFIT_DIVI , '')	 AS PROFIT_DIVI
									 , ISNULL(PEND_YN	 ,'N')	 AS PEND_YN
									 , ISNULL(PEND_CODE   , '')	 AS PEND_CODE
									 , ISNULL(BUDG_YN	 ,'N')	 AS BUDG_YN
									 , ISNULL(BUDGCTL_YN  ,'N')	 AS BUDGCTL_YN
									 , ISNULL(DR_FUND	 , '')	 AS DR_FUND
									 , ISNULL(CR_FUND	 , '')	 AS CR_FUND
									 , ISNULL(COST_DIVI   , '')	 AS COST_DIVI
									 , ISNULL(FOR_YN	  ,'N')	 AS FOR_YN
									 , ISNULL(ACCNT_DIVI  , '')	 AS ACCNT_DIVI
									 , ISNULL(JAN_DIVI	, '')	 AS JAN_DIVI
									 , ISNULL(A.SYSTEM_YN ,'N')	 AS SYSTEM_YN
									 , ISNULL(C1.DT_TYPE  , '')	 AS AC_TYPE1
									 , ISNULL(C2.DT_TYPE  , '')	 AS AC_TYPE2
									 , ISNULL(C3.DT_TYPE  , '')	 AS AC_TYPE3
									 , ISNULL(C4.DT_TYPE  , '')	 AS AC_TYPE4
									 , ISNULL(C5.DT_TYPE  , '')	 AS AC_TYPE5
									 , ISNULL(C6.DT_TYPE  , '')	 AS AC_TYPE6
									 , ISNULL(C1.DT_LEN   , 0 )	 AS AC_LEN1
									 , ISNULL(C2.DT_LEN   , 0 )	 AS AC_LEN2
									 , ISNULL(C3.DT_LEN   , 0 )	 AS AC_LEN3
									 , ISNULL(C4.DT_LEN   , 0 )	 AS AC_LEN4
									 , ISNULL(C5.DT_LEN   , 0 )	 AS AC_LEN5
									 , ISNULL(C6.DT_LEN   , 0 )	 AS AC_LEN6
									 , CASE WHEN A.AC_CODE1 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C1.DT_POPUP,'N')
										END AC_POPUP1
									 , CASE WHEN A.AC_CODE2 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C2.DT_POPUP,'N')
										END AC_POPUP2
									 , CASE WHEN A.AC_CODE3 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C3.DT_POPUP,'N')
										END AC_POPUP3
									 , CASE WHEN A.AC_CODE4 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C4.DT_POPUP,'N')
										END AC_POPUP4
									 , CASE WHEN A.AC_CODE5 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C5.DT_POPUP,'N')
										END AC_POPUP5
									 , CASE WHEN A.AC_CODE6 = 'A7' AND @BudgProBase = '1'
											THEN 'N'
											ELSE ISNULL(C6.DT_POPUP,'N')
										END AC_POPUP6
									 , ISNULL(B.AC_NAME   , '')	 AS PEND_NAME
									 , ISNULL(B.DT_TYPE   , '')	 AS PEND_TYPE
									 , ISNULL(B.DT_LEN	,'0')	 AS PEND_LEN
									 , ISNULL(B.DT_POPUP  ,'N')	 AS PEND_POPUP
									 , A.COMP_CODE
									 ,  ISNULL(C1.DT_FMT  , 0 )	 AS AC_FORMAT1
									 ,  ISNULL(C2.DT_FMT  , 0 )	 AS AC_FORMAT2
									 ,  ISNULL(C3.DT_FMT  , 0 )	 AS AC_FORMAT3
									 ,  ISNULL(C4.DT_FMT  , 0 )	 AS AC_FORMAT4
									 ,  ISNULL(C5.DT_FMT  , 0 )	 AS AC_FORMAT5
									 ,  ISNULL(C6.DT_FMT  , 0 )	 AS AC_FORMAT6
								  FROM			ABA400T AS A  WITH (NOLOCK)
									   LEFT  JOIN ABA200T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE AND B.AC_CD  = A.PEND_CODE

									   LEFT  JOIN ABA200T AS C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE AND C1.AC_CD = A.AC_CODE1
									   LEFT  JOIN ABA200T AS C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE AND C2.AC_CD = A.AC_CODE2
									   LEFT  JOIN ABA200T AS C3 WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE AND C3.AC_CD = A.AC_CODE3
									   LEFT  JOIN ABA200T AS C4 WITH (NOLOCK) ON C4.COMP_CODE = A.COMP_CODE AND C4.AC_CD = A.AC_CODE4
									   LEFT  JOIN ABA200T AS C5 WITH (NOLOCK) ON C5.COMP_CODE = A.COMP_CODE AND C5.AC_CD = A.AC_CODE5
									   LEFT  JOIN ABA200T AS C6 WITH (NOLOCK) ON C6.COMP_CODE = A.COMP_CODE AND C6.AC_CD = A.AC_CODE6

									   LEFT  JOIN ABA200T AS D1 WITH (NOLOCK) ON D1.COMP_CODE = A.COMP_CODE AND D1.AC_CD = A.BOOK_CODE1
									   LEFT  JOIN ABA200T AS D2 WITH (NOLOCK) ON D2.COMP_CODE = A.COMP_CODE AND D2.AC_CD = A.BOOK_CODE2
							)	C	ON  C.COMP_CODE = A.COMP_CODE
									AND C.ACCNT	 = A.ACCNT
			WHERE   A.COMP_CODE	  = #{S_COMP_CODE}
			<if test="PROD_ACCNT == &quot;0&quot;">
			  AND	 A.ACCNT_DIVI	!= N'5'
			</if>
			<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
				AND ${ADD_QUERY}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
				<if test="@foren.Ognl@isNotEmpty(USE_DEPT)">
					<if test="USE_DEPT != &quot;1&quot;">
						AND	 A.AUTHO_DIVI	 = #{USE_DEPT}
					</if>
				</if>
			</if>

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY A.ACCNT
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
				AND (A.ACCNT LIKE #{ACCNT_CODE} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
				AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'
			 	OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )
				</if>
			</if>
		SET ARITHABORT OFF
		SET NOCOUNT OFF
	END
	</select>
	<select id="popupServiceImpl.managePopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [AC_CD, AC_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.AC_CD	 AS	MANAGE_CODE
				 , A.AC_NAME   AS	MANAGE_NAME
				 , ISNULL((SELECT CODE_NAME
							 FROM BSA100T WITH (NOLOCK)
							WHERE COMP_CODE = A.COMP_CODE
							  AND MAIN_CODE = N'A018'
							  AND SUB_CODE  = ISNULL(A.DT_TYPE, 'A')), '')  AS DATA_TYPE
				 , ISNULL(DT_LEN, 0) AS DATA_LENGTH
				 , ISNULL((SELECT CODE_NAME
							 FROM BSA100T WITH (NOLOCK)
							WHERE COMP_CODE = A.COMP_CODE
							  AND MAIN_CODE = N'A004'
							  AND SUB_CODE  = ISNULL(A.DT_POPUP, 'N')), '') AS POPUP_YN
				 , A.DT_FMT		AS DATA_FORMAT
				  --, A.POPUP_CODE
			  FROM ABA200T A WITH (NOLOCK)
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.AC_CD LIKE #{TXT_SEARCH} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY A.AC_CD ASC
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(MANAGE_CODE)">
				AND (A.AC_CD LIKE #{MANAGE_CODE} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{MANAGE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(MANAGE_NAME)">
				AND (A.AC_CD LIKE #{MANAGE_NAME} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{MANAGE_NAME} + '%' )
				</if>
				ORDER BY A.AC_CD ASC
			</if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.userManagePopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [USER_AC_CD, USER_AC_NAME] ok
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.AC_CD	 AS	USER_MANAGE_CODE
				 , A.AC_NAME   AS	USER_MANAGE_NAME
				 , ISNULL((SELECT CODE_NAME
							 FROM BSA100T WITH (NOLOCK)
							WHERE COMP_CODE = A.COMP_CODE
							  AND MAIN_CODE = N'A018'
							  AND SUB_CODE  = ISNULL(A.DT_TYPE, 'A')), '')  AS DATA_TYPE
				 , ISNULL(DT_LEN, 0) AS DATA_LENGTH
				 , ISNULL((SELECT CODE_NAME
							 FROM BSA100T WITH (NOLOCK)
							WHERE COMP_CODE = A.COMP_CODE
							  AND MAIN_CODE = N'A004'
							  AND SUB_CODE  = ISNULL(A.DT_POPUP, 'N')), '') AS POPUP_YN
				 , ISNULL((SELECT CODE_NAME
							 FROM BSA100T WITH (NOLOCK)
							WHERE COMP_CODE = A.COMP_CODE
							  AND MAIN_CODE = N'A004'
							  AND SUB_CODE  = ISNULL(A.USE_YN, 'N')), '')   AS USE_YN
				  --, A.POPUP_CODE
			  FROM ABA200T A WITH (NOLOCK)
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			   AND ISNULL(A.SYSTEM_YN, 'Y') != N'Y'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.AC_CD LIKE #{TXT_SEARCH} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY A.AC_CD ASC
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(USER_MANAGE_CODE)">
				AND (A.AC_CD LIKE #{USER_MANAGE_CODE} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{USER_MANAGE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(USER_MANAGE_NAME)">
				AND (A.AC_CD LIKE #{USER_MANAGE_NAME} + '%'
			 	OR A.AC_NAME LIKE '%'+ #{USER_MANAGE_NAME} + '%' )
				</if>
			</if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END


	</select>

	<select id="popupServiceImpl.remarkPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [REMARK, REMARK_NM] 20070801
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON
			SELECT A.REMARK_CD AS REMARK_CODE
				 , A.REMARK	AS REMARK_NAME
			  FROM ABA700T A WITH (NOLOCK)
			  <if test="@foren.Ognl@isNotEmpty(ACCNT)">
			  INNER JOIN  ABA710T B ON B.COMP_CODE = A.COMP_CODE
								   AND B.REMARK_CD = A.REMARK_CD
								   AND B.ACCNT	= #{ACCNT}
								   <if test="@foren.Ognl@isNotEmpty(DR_CR)">
								   AND B.DR_CR = #{DR_CR}
								   </if>
			  </if>
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.REMARK_CD LIKE #{TXT_SEARCH} + '%'
			 	OR A.REMARK LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY A.REMARK_CD ASC
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(REMARK_CODE)">
				AND (A.REMARK_CD LIKE #{REMARK_CODE} + '%'
			 	OR A.REMARK LIKE '%'+ #{REMARK_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(REMARK_NAME)">
				AND (A.REMARK_CD LIKE #{REMARK_NAME} + '%'
			 	OR A.REMARK LIKE '%'+ #{REMARK_NAME} + '%' )
				</if>
			</if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.remarkDistributionPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			--sbs170ukrv.Csbs170ukrv[fnSbs170QStd] Query01
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
			SELECT REMARK_TYPE
				 , REMARK_CD
				 , REMARK_NAME
				 , COMP_CODE
			  FROM SBI100T
			 WHERE COMP_CODE	  = #{S_COMP_CODE}
			   AND REMARK_TYPE	= #{REMARK_TYPE}
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND REMARK_CD   LIKE #{TXT_SEARCH} + '%'
				OR REMARK_NAME '%'+ #{TXT_SEARCH} + '%' )
			   </if>
		  <if test="RDO != &quot;2&quot;">
		  ORDER BY REMARK_CD
		  </if>
		  <if test="RDO == &quot;2&quot;">
		  ORDER BY REMARK_NAME
		  </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.costPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT ITEM_CODE AS COST_CODE
				 , ITEM_NAME AS COST_NAME
			  FROM ABA900T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (ITEM_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR ITEM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY ITEM_CODE ASC
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(COST_CODE)">
				AND (ITEM_CODE LIKE #{COST_CODE} + '%'
			 	OR ITEM_NAME LIKE '%'+ #{COST_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(COST_NAME)">
				AND (ITEM_CODE LIKE #{COST_NAME} + '%'
			 	OR ITEM_NAME LIKE '%'+ #{COST_NAME} + '%' )
				</if>
			</if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.accntPrsPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [CHARGE_CODE, CHARGE_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS PRSN_CODE
				 , CODE_NAME AS PRSN_NAME
				 , REF_CODE1
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'A009'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	   = 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY SUB_CODE ASC
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
				AND (SUB_CODE LIKE #{PRSN_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PRSN_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
				AND (SUB_CODE LIKE #{PRSN_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PRSN_NAME} + '%' )
				</if>
			</if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.expensePopup" parameterType="Map" resultType="rMap">
		--ZfT_PopupZ [CHARGE_CODE,CHARGE_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT  CHARGE_CODE AS EXPENSE_CODE
				  , CHARGE_NAME AS EXPENSE_NAME
				  , COST_DIV
			 FROM  TAA010T
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(TRADE_DIV)">
			   AND TRADE_DIV   = #{TRADE_DIV}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CHARGE_TYPE)">
			   AND CHARGE_TYPE = #{CHARGE_TYPE}
			 </if>

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (CHARGE_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CHARGE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY CHARGE_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(EXPENSE_CODE)">
				AND (CHARGE_CODE LIKE #{EXPENSE_CODE} + '%'
			 	OR CHARGE_NAME LIKE '%'+ #{EXPENSE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(EXPENSE_NAME)">
				AND (CHARGE_CODE LIKE #{EXPENSE_NAME} + '%'
			 	OR CHARGE_NAME LIKE '%'+ #{EXPENSE_NAME} + '%' )
				</if>
			 </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.allowPopup" parameterType="Map" resultType="rMap">
		--정규
		<if test="ALLOW_TAG == &quot;&quot;">
		-- 둘다 아닐 때
		--zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_CODE CASE'']
		SELECT A.DIVI	  AS ALLOW_TAG
			 , A.SUB_CODE  AS ALLOW_CODE
			 , A.CODE_NAME AS ALLOW_NAME
		  FROM (SELECT '공제' AS DIVI
					 , SUB_CODE
					 , CODE_NAME
				  FROM BSA100T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND MAIN_CODE = N'H034'
				   AND SUB_CODE != N'$'
				   UNION
				SELECT '수당' AS DIVI
					 , WAGES_CODE
					 , WAGES_NAME
				  FROM HBS300T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND CODE_TYPE = N'1' ) A
		 WHERE 1 = 1
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
				OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
			AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'
				OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
			AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'
				OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
			</if>
		 </if>
		 ORDER BY A.SUB_CODE ASC
		 </if>

		 <if test="ALLOW_TAG == &quot;2&quot;">
		 -- 공제
			--zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_NM CASE2]
			SELECT '공제'	AS ALLOW_TAG
				 , SUB_CODE AS ALLOW_CODE
				 , CODE_NAME AS ALLOW_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = N'H034'
			   AND SUB_CODE  != N'$'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
				AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
					OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
				AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'
					OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
				AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'
					OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
				</if>
			 </if>
			 ORDER BY SUB_CODE ASC
		 </if>

		 <if test="ALLOW_TAG == &quot;1&quot;">
		 -- 상여총액
			SELECT '수당'  AS ALLOW_TAG
			 , WAGES_CODE AS ALLOW_CODE
			 , WAGES_NAME AS ALLOW_NAME
		  FROM HBS300T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND CODE_TYPE   = N'1'
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'
				OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
			AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'
				OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
			AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'
				OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
			</if>
		 </if>
		 ORDER BY WAGES_CODE ASC
		 </if>
	</select>

	<select id="popupServiceImpl.allowPopup_JS" parameterType="Map" resultType="rMap">
		--조인스
		<if test="ALLOW_TAG == &quot;&quot;">
		-- 둘다 아닐 때
		--zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_CODE CASE'']
		SELECT A.DIVI	  AS ALLOW_TAG
			 , A.SUB_CODE  AS ALLOW_CODE
			 , A.CODE_NAME AS ALLOW_NAME
		  FROM (
			  SELECT
					  '공제' AS DIVI
					, WAGES_CODE	AS SUB_CODE
					, WAGES_NAME	AS CODE_NAME
				FROM S_HBS300T_JS   WITH (NOLOCK)
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND CODE_TYPE = N'2'

				UNION ALL

				SELECT
					  '수당' AS DIVI
					, WAGES_CODE
					, WAGES_NAME
				FROM S_HBS300T_JS   WITH (NOLOCK)
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND CODE_TYPE = N'1'
			   ) A
		 WHERE 1 = 1
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 	AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
			AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
			AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
			</if>
		 </if>
		 ORDER BY A.SUB_CODE ASC
		 </if>

		 <if test="ALLOW_TAG == &quot;2&quot;">
		 -- 공제
		 	--zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_NM CASE2]
			SELECT '공제'	AS ALLOW_TAG
				 , WAGES_CODE AS ALLOW_CODE
				 , WAGES_NAME AS ALLOW_NAME
			  FROM S_HBS300T_JS   WITH (NOLOCK)
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND CODE_TYPE = N'2'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			 	AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'
				 	OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
				AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'
				 	OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
				AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'
				 	OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
				</if>
			 </if>
			 ORDER BY SUB_CODE ASC
		 </if>

		 <if test="ALLOW_TAG == &quot;1&quot;">
		 -- 상여총액
		 	SELECT '수당'  AS ALLOW_TAG
			 , WAGES_CODE AS ALLOW_CODE
			 , WAGES_NAME AS ALLOW_NAME
				FROM S_HBS300T_JS   WITH (NOLOCK)
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND CODE_TYPE = N'1'
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
			AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'
			 	OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
			AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'
			 	OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )
			</if>
		 </if>
		 ORDER BY WAGES_CODE ASC
		 </if>
	</select>

	<select id="popupServiceImpl.earnerPopup" parameterType="Map" resultType="rMap">
		--UHpb01Krv.cPopup[GetHumanMaster]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT DED_TYPE
				 , PERSON_NUMB	   AS EARNER_CODE
				 , ISNULL(NAME,'') AS EARNER_NAME
				 , ISNULL(DED_CODE,'') AS DED_CODE
				 <if test="DED_TYPE == &quot;10&quot; or DED_TYPE == &quot;20&quot;">
				 , (SELECT SUB_CODE + ':' + REF_CODE3
					 FROM HCD100T
					WHERE COMP_CODE = #{S_COMP_CODE}
					  AND MAIN_CODE = 'HC01'
					  AND SUB_CODE != '$'
					  AND SUB_CODE = A.DED_CODE) AS DED_NAME
				 </if>
				 <if test="DED_TYPE != &quot;10&quot; and DED_TYPE != &quot;20&quot;">
				 , DED_NAME = CASE WHEN A.DWELLING_YN  = '1' AND A.DED_TYPE = '1' THEN (SELECT CODE_NAME
																						  FROM BSA100T
																						 WHERE COMP_CODE = #{S_COMP_CODE}
																						   AND MAIN_CODE = 'HS04'
																						   AND SUB_CODE = A.DED_CODE)
								   WHEN A.DWELLING_YN   = '1' AND A.DED_TYPE = '2' THEN (SELECT CODE_NAME
																						   FROM BSA100T
																						  WHERE COMP_CODE = #{S_COMP_CODE}
																							AND MAIN_CODE = 'HS05'
																							AND SUB_CODE = A.DED_CODE)
								   WHEN A.DWELLING_YN   = '2' THEN (SELECT CODE_NAME
																	  FROM BSA100T
																	 WHERE COMP_CODE = #{S_COMP_CODE}
																	   AND MAIN_CODE = 'HS06'
																	   AND SUB_CODE  = A.DED_CODE)
								   END
				 </if>

				 , ISNULL(DEPT_CODE,'') AS DEPT_CODE
				 , ISNULL(DEPT_NAME,'') AS DEPT_NAME
				 , ISNULL(DIV_CODE,'') AS DIV_CODE
				 , ISNULL(SECT_CODE,'') AS SECT_CODE
				 , ISNULL(BUSINESS_TYPE,'') AS BUSINESS_TYPE
				 , ISNULL(DWELLING_YN,'') AS DWELLING_YN
				 , ISNULL(A.REPRE_NUM, '') AS REPRE_NUM
				 , ISNULL(EXEDEPT_CODE, '') AS EXEDEPT_CODE
				 , ISNULL(EXEDEPT_NAME, '') AS EXEDEPT_NAME
				 , ISNULL(EXEDEPT_NAME, '') AS EXEDEPT_NAME
				 , ISNULL(EXPS_PERCENT, '') AS EXPS_PERCENT
				 , ISNULL(REMARK, '')	   AS REMARK
			  FROM HPB100T AS A
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND USER_YN   = '1'
			<if test="@foren.Ognl@isNotEmpty(DED_TYPE)">
				AND DED_TYPE IN (SELECT VALUE FROM  uniLITE.fnSplit(#{DED_TYPE}, ','))
			</if>
			<if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
				AND SECT_CODE = #{BILL_DIV_CODE}
			</if>

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (PERSON_NUMB LIKE #{TXT_SEARCH} + '%'
			 	OR NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
				ORDER BY PERSON_NUMB ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(EARNER_CODE)">
				AND (PERSON_NUMB LIKE #{EARNER_CODE} + '%'
			 	OR NAME LIKE '%'+ #{EARNER_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(EARNER_NAME)">
				AND (PERSON_NUMB LIKE #{EARNER_NAME} + '%'
			 	OR NAME LIKE '%'+ #{EARNER_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.realtyPopup" parameterType="Map" resultType="rMap">
		--atx412ukr.Catx412ukr Setatx412[fnatx412Popup]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.BILL_DIV_CODE 		AS DIV_CODE
				 , B.DIV_NAME			AS BILL_DIV_NAME
				 , A.BUILD_CODE			AS REALTY_CODE
				 , A.BUILD_NAME			AS REALTY_NAME
				 , A.DONG
				 , A.UP_UNDER
				 , A.UP_FLOOR
				 , A.HOUSE
				 , A.HOUSE_CNT
				 , A.AREA
			  FROM		   ATX412T A WITH (NOLOCK)
				  INNER JOIN BOR120T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													AND B.DIV_CODE  = A.BILL_DIV_CODE
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
			 	AND A.BILL_DIV_CODE = #{BILL_DIV_CODE}
			 </if>


			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (BUILD_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR BUILD_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(REALTY_CODE)">
				AND (BUILD_CODE LIKE #{REALTY_CODE} + '%'
			 	OR BUILD_NAME LIKE '%'+ #{REALTY_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(REALTY_NAME)">
				AND (BUILD_CODE LIKE #{REALTY_NAME} + '%'
			 	OR BUILD_NAME LIKE '%'+ #{REALTY_NAME} + '%' )
				</if>
			 </if>

			ORDER BY A.BILL_DIV_CODE, A.BUILD_CODE, A.BUILD_NAME, A.UP_UNDER, A.UP_FLOOR, A.HOUSE
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.assetPopup1" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp[ASST, ASST_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT REF_CODE1
			FROM   BSA100T WITH (NOLOCK)
			WHERE  COMP_CODE = #{S_COMP_CODE}
			AND	MAIN_CODE = N'A163'
			AND	SUB_CODE  = N'1'

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.assetPopup2" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON
			SELECT A.ASST												AS ASSET_CODE
				 , A.ASST_NAME											AS ASSET_NAME
				 , A.ACCNT
				 , D.ACCNT_NAME
				 , unilite.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)	AS AC_DATE
				 , A.ACQ_AMT_I											AS AC_AMT_I
				 , A.ACQ_Q												AS ACQ_Q
				 , A.DRB_YEAR											AS DRB_YEAR
				 , CONVERT(INTEGER, ISNULL(C.CODE_NAME, '0')) * 0.001	AS DEPRECTION
				 , A.SPEC
				 , A.DIV_CODE
				 , A.DEPT_CODE
				 , A.DEPT_NAME
				 , A.PJT_CODE
				 , E.PJT_NAME
			FROM			  ${ASST}   A WITH (NOLOCK)
				 LEFT  JOIN ASS100T   B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													 AND B.ACCNT	 = A.ACCNT
				 LEFT  JOIN BSA100T   C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
													 AND C.MAIN_CODE = (CASE WHEN B.DEP_CTL = '1' THEN 'A033' ELSE 'A034' END)
													 AND C.SUB_CODE  = RIGHT(CONVERT(NVARCHAR(04), 1000 + A.DRB_YEAR), 3)
				 LEFT  JOIN ABA400T   D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
													 AND D.ACCNT	 = A.ACCNT
				 LEFT JOIN BCM600T    E WITH (NOLOCK) ON E.COMP_CODE = A.COMP_CODE
													 AND E.PJT_CODE = A.PJT_CODE
			WHERE  A.COMP_CODE	= #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (ASST LIKE #{TXT_SEARCH} + '%'
			 	OR ASST_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY ASST ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
				AND (ASST LIKE #{ASSET_CODE} + '%'
			 	OR ASST_NAME LIKE '%'+ #{ASSET_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(ASSET_NAME)">
				AND (ASST LIKE #{ASSET_NAME} + '%'
			 	OR ASST_NAME LIKE '%'+ #{ASSET_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.costPoolPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [AC_USER_DEFINE, AC_USER_DEFINE_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT COST_POOL_CODE
				 , COST_POOL_NAME
				 , ''	AS REF_CODE1
				 , ''	AS REF_CODE2
			  FROM CBM700T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND USE_YN		= 'Y'
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND DIV_CODE		= #{DIV_CODE}
			 </if>

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (COST_POOL_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR COST_POOL_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY COST_POOL_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(COST_POOL_CODE)">
				AND (COST_POOL_CODE LIKE #{COST_POOL_CODE} + '%'
			 	OR COST_POOL_NAME LIKE '%'+ #{COST_POOL_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(COST_POOL_NAME)">
				AND (COST_POOL_CODE LIKE #{COST_POOL_NAME} + '%'
			 	OR COST_POOL_NAME LIKE '%'+ #{COST_POOL_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.costPoolCbm600tPopup" parameterType="Map" resultType="rMap">
		 SELECT COST_POOL_CODE
	 			 , COST_POOL_NAME
		  FROM CBM600T WITH (NOLOCK)
 		  WHERE COMP_CODE   = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (COST_POOL_CODE LIKE #{TXT_SEARCH} + '%'
			OR COST_POOL_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			ORDER BY COMP_CODE,COST_POOL_CODE,COST_POOL_NAME ASC
		</if>
		<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(COST_POOL_CODE)">
				AND COST_POOL_CODE = #{COST_POOL_CODE}
				ORDER BY COMP_CODE,COST_POOL_CODE,COST_POOL_NAME ASC
			</if>
			<if test="@foren.Ognl@isNotEmpty(COST_POOL_NAME)">
				AND COST_POOL_NAME LIKE '%'+ #{COST_POOL_NAME} + '%'
				ORDER BY COMP_CODE,COST_POOL_CODE,COST_POOL_NAME ASC
			</if>
		</if>
	</select>

	<select id="popupServiceImpl.unitPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS UNIT_CODE
				 , CODE_NAME AS UNIT_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'B013'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'

			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(UNIT_CODE)">
				AND (SUB_CODE LIKE #{UNIT_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{UNIT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(UNIT_NAME)">
				AND (SUB_CODE LIKE #{UNIT_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{UNIT_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.noteTypePopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS NOTE_TYPE_CODE
				 , CODE_NAME AS NOTE_TYPE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'A058'
			   AND SUB_CODE   != N'$'
				 AND USE_YN	= N'Y'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(NOTE_TYPE_CODE)">
				AND (SUB_CODE LIKE #{NOTE_TYPE_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{NOTE_TYPE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(NOTE_TYPE_NAME)">
				AND (SUB_CODE LIKE #{NOTE_TYPE_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{NOTE_TYPE_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.noteNumPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [NOTE_CD, NOTE_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT NOTE_NUM 											AS NOTE_NUM_CODE
				 , (SELECT CODE_NAME
					  FROM BSA100T WITH (NOLOCK)
					 WHERE COMP_CODE = #{S_COMP_CODE}
					   AND MAIN_CODE = N'A047'
					   AND SUB_CODE  = A.AC_CD) 						AS NOTE_TYPE
				 , ISNULL(CUSTOM_CODE,'') 								AS CUSTOM_CODE
				 , ISNULL((SELECT CUSTOM_NAME
							 FROM BCM100T WITH (NOLOCK)
							WHERE COMP_CODE   = #{S_COMP_CODE}
							  AND CUSTOM_CODE = A.CUSTOM_CODE),'') 		AS CUSTOM_NAME
				 , ISNULL(BANK_CODE,'') 								AS BANK_CODE
				 , ISNULL((SELECT CUSTOM_NAME
							 FROM BCM100T WITH (NOLOCK)
							WHERE COMP_CODE   = #{S_COMP_CODE}
							  AND CUSTOM_CODE = A.BANK_CODE),'') 		AS BANK_NAME
				 , (CASE ISNULL(PUB_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, PUB_DATE) END) 		AS PUB_DATE
				 , (CASE ISNULL(EXP_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, EXP_DATE) END) 		AS EXP_DATE
				 , ISNULL(OC_AMT_I,0) 									AS	OC_AMT_I
				 , ISNULL(J_AMT_I,0) 									AS	J_AMT_I
				 , R1.CODE_NAME AS NOTE_STS
			  FROM AFN100T A WITH (NOLOCK)
			 LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
			 								  AND R1.MAIN_CODE = 'A063'
			 								  AND R1.SUB_CODE = A.NOTE_STS
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (NOTE_NUM LIKE #{TXT_SEARCH} + '%'
			 	OR CUSTOM_CODE LIKE '%'+ #{TXT_SEARCH} + '%' )

			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(NOTE_NUM_CODE)">
				   <if test="TYPE != &quot;3&quot; and TYPE != &quot;4&quot; and EXT_TYPE != &quot;AGJ&quot; ">
					AND (NOTE_NUM LIKE #{NOTE_NUM_CODE} + '%'
				 	OR CUSTOM_CODE LIKE '%'+ #{NOTE_NUM_CODE} + '%' )
					</if>
					<if test="TYPE == &quot;3&quot; or TYPE == &quot;4&quot; or EXT_TYPE == &quot;AGJ&quot;">
					AND NOTE_NUM = #{NOTE_NUM_CODE}
					</if>
				   </if>
				  <if test="@foren.Ognl@isNotEmpty(NOTE_NUM_NAME)">
					AND (NOTE_NUM LIKE #{NOTE_NUM_NAME} + '%'
				 	OR CUSTOM_CODE LIKE '%'+ #{NOTE_NUM_NAME} + '%' )
				  </if>

			 </if>

			 <if test="@foren.Ognl@isNotEmpty(AC_CD)">
			 	AND AC_CD = #{AC_CD}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(NOTE_STS_LIST)">
			 	AND NOTE_STS IN
			 <foreach collection="NOTE_STS_LIST" item="NOTE_STS" index="index" separator="," close=")" open="(">
							   #{NOTE_STS}
			</foreach>
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(AC_CD_LIST)">
			 	AND (
			 	<foreach collection="AC_CD_LIST" item="AC_CD" index="index" separator="OR ">
			 		 AC_CD = #{AC_CD}
			 		AND NOTE_STS IN
			 	<foreach collection="NOTE_STS_LIST1[index]" item="NOTE_STS" index="index" separator="," close=")" open="(">
							   #{NOTE_STS}
				</foreach>
				</foreach>
				)
			 </if>

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			 ORDER BY NOTE_NUM ASC
			 </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.noteNumPopupD3" parameterType="Map" resultType="rMap">
		SELECT NOTE_NUM				AS NOTE_NUM_CODE
			 , ISNULL((SELECT CODE_NAME
						 FROM BSA100T WITH (NOLOCK)
						WHERE COMP_CODE = A.COMP_CODE
						  AND MAIN_CODE = 'A047'
						  AND SUB_CODE  = 'D3'),'') AS NOTE_TYPE
			 , ISNULL((SELECT CODE_NAME
						 FROM BSA100T WITH (NOLOCK)
						WHERE COMP_CODE = A.COMP_CODE
						  AND MAIN_CODE = 'A064'
						  AND SUB_CODE  = A.PROC_SW) ,'')AS NOTE_STS2
			 , '' AS CUSTOM_CODE
			 , '' AS CUSTOM_NAME
			 , ISNULL(BANK_CODE,'') AS BANK_CODE
			 , ISNULL((SELECT CUSTOM_NAME
						 FROM BCM100T WITH (NOLOCK)
						WHERE COMP_CODE   = A.COMP_CODE
						  AND CUSTOM_CODE = A.BANK_CODE),'') AS BANK_NAME
			 , CASE ISNULL(INSOCK_DATE,'')
					WHEN '' THEN ''
					ELSE	UNILITE.fnGetUserDateComp(A.COMP_CODE, INSOCK_DATE)
				END AS INSOCK_DATE
			 , CASE ISNULL(FLOAT_DATE,'')
					WHEN '' THEN ''
					ELSE	UNILITE.fnGetUserDateComp(A.COMP_CODE, FLOAT_DATE)
				END AS PUB_DATE
			 , CASE ISNULL(SET_DATE,'')
					WHEN '' THEN ''
					ELSE	UNILITE.fnGetUserDateComp(A.COMP_CODE, SET_DATE)
				END AS EXP_DATE
			 , NULL AS OC_AMT_I
			 , NULL	AS	J_AMT_I
		  FROM afn200t A WITH (NOLOCK)

		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(NOTE_NUM)">
		   AND NOTE_NUM >= #{NOTE_NUM}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(NOTE_NUM_CODE)">
		   AND NOTE_NUM >= #{NOTE_NUM}
		 </if>
		   AND  NOTE_DIVI = N'1' AND PROC_SW = N'2'
		 ORDER BY NOTE_NUM
	</select>

	<select id="popupServiceImpl.checkNumPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [CHECK_CD, CHECK_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT NOTE_NUM 										AS CHECK_NUM_CODE
				 , ISNULL(BANK_CODE,'') 							AS BANK_CODE
				 , ISNULL((SELECT CUSTOM_NAME
							 FROM BCM100T WITH (NOLOCK)
							WHERE COMP_CODE   = #{S_COMP_CODE}
							  AND CUSTOM_CODE = A.BANK_CODE),'') 	AS BANK_NAME
				 , (CASE ISNULL(INSOCK_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, INSOCK_DATE) END) 	AS INSOCK_DATE
				 , (CASE ISNULL(FLOAT_DATE ,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, FLOAT_DATE)  END) 	AS FLOAT_DATE
				 , (CASE ISNULL(SET_DATE   ,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, SET_DATE)	END) 	AS SET_DATE
			  FROM AFN200T A WITH (NOLOCK)
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			   AND A.NOTE_DIVI	= N'2'
			   AND A.PROC_SW	  = N'2'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (NOTE_NUM LIKE #{TXT_SEARCH} + '%'
			 	OR BANK_CODE LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY NOTE_NUM ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(CHECK_NUM_CODE)">
				AND (NOTE_NUM LIKE #{CHECK_NUM_CODE} + '%'
			 	OR BANK_CODE LIKE '%'+ #{CHECK_NUM_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(CHECK_NUM_NAME)">
				AND (NOTE_NUM LIKE #{CHECK_NUM_NAME} + '%'
			 	OR BANK_CODE LIKE '%'+ #{CHECK_NUM_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.moneyPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS MONEY_CODE
				 , CODE_NAME AS MONEY_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'B004'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(MONEY_CODE)">
				AND (SUB_CODE LIKE #{MONEY_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{MONEY_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(MONEY_NAME)">
				AND (SUB_CODE LIKE #{MONEY_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{MONEY_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.exLcnoPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetLCNo]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.DIV_CODE
				 , A.LC_SER_NO
				 , A.LC_NO		AS EX_LCNO_CODE
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_LC_OPEN) AS DATE_LC_OPEN
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_EXP) AS DATE_EXP
				 , B.IMPORTER AS SEARCH_MAN
				 , (SELECT CUSTOM_NAME
					  FROM BCM100T WITH (NOLOCK)
					 WHERE COMP_CODE   = B.COMP_CODE
					   AND CUSTOM_CODE = B.IMPORTER) AS SEARCH_MAN_NM
				 , A.LC_TYPE
			  FROM TEB100T A WITH (NOLOCK)
				 , TEA100T B WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND B.COMP_CODE = #{S_COMP_CODE}
			   AND A.SO_SER_NO = B.SO_SER_NO
			   AND A.DIV_CODE  = B.DIV_CODE
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND B.EXPORTER = #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_SER_NO)">
			   AND A.LC_SER_NO = #{LC_SER_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(EX_LCNO_CODE)">
			   AND A.LC_NO = #{EX_LCNO_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_DATE_FR)">
			   AND DATE_LC_OPEN &gt;= #{LC_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_DATE_TO)">
			   AND DATE_LC_OPEN &lt;= #{LC_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">
			   AND A.LC_NO = #{IN_LCNO_CODE}
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.passSerNoPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetLCNo]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT  DIV_CODE
				  , BL_SER_NO
				  , SO_SER_NO
				  , PASS_SER_NO
				  , BL_NO
				  , UNILITE.fnGetUserDateComp(COMP_CODE, BL_DATE) AS BL_DATE
				  , DATE_SHIPPING
				  , BL_AMT
				  , BL_AMT_WON
				  , AMT_UNIT
			  FROM TED100T  WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND IMPORTER  = #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND DIV_CODE  = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
			   AND BL_SER_NO = #{BL_SER_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_NO)">
			   AND BL_NO = #{BL_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">
			   AND BL_DATE &gt;= #{BL_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">
			   AND BL_DATE &lt;= #{BL_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(PASS_SER_NO)">
			   AND PASS_SER_NO = #{PASS_SER_NO}
			 </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.inLcnoPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			--UAccntPopUpKrv.CAccntPopupKR[fnGetLCNo]
			SELECT A.DIV_CODE
				 , A.LC_SER_NO
				 , A.LC_NO			AS IN_LCNO_CODE
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_LC_OPEN) AS DATE_LC_OPEN
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_EXP) AS DATE_EXP
				 , B.EXPORTER AS SEARCH_MAN
				 , (SELECT CUSTOM_NAME
					  FROM BCM100T WITH (NOLOCK)
					 WHERE COMP_CODE   = B.COMP_CODE
					   AND CUSTOM_CODE = B.EXPORTER) AS SEARCH_MAN_NM
				 , A.LC_TYPE
			  FROM TIB100T A WITH (NOLOCK)
				 , TIA100T B WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND B.COMP_CODE = #{S_COMP_CODE}
			   AND A.SO_SER_NO = B.SO_SER_NO
			   AND A.DIV_CODE  = B.DIV_CODE
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND B.EXPORTER = #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_SER_NO)">
			   AND A.LC_SER_NO = #{LC_SER_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">
			   AND A.LC_NO = #{IN_LCNO_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_DATE_FR)">
			   AND DATE_LC_OPEN &gt;= #{LC_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(LC_DATE_TO)">
			   AND DATE_LC_OPEN &lt;= #{LC_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">
			   AND A.LC_NO = #{IN_LCNO_CODE}
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.exBlnoPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetBLNo]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.DIV_CODE
				 , A.BL_SER_NO
				 , A.BL_NO			AS EX_BLNO_CODE
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.BL_DATE) AS BL_DATE
				 , A.IMPORTER AS SEARCH_MAN
				 , C.CUSTOM_NAME AS SEARCH_MAN_NM
				 , B.TERMS_PRICE
				 , B.PAY_TERMS
			  FROM TED100T A WITH (NOLOCK)
				   LEFT JOIN TEA100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.SO_SER_NO=B.SO_SER_NO
				   LEFT JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.IMPORTER=C.CUSTOM_CODE
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND A.IMPORTER  = #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE  = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
			   AND A.BL_SER_NO = #{BL_SER_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(EX_BLNO_CODE)">
			   AND A.BL_NO = #{EX_BLNO_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">
			   AND BL_DATE &gt;= #{BL_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">
			   AND BL_DATE &lt;= #{BL_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(EX_BLNO_CODE)">
			   AND A.BL_NO = #{EX_BLNO_CODE}
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.inBlnoPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetBLNo]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.DIV_CODE
				 , A.BL_SER_NO
				 , A.BL_NO					AS IN_BLNO_CODE
				 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.BL_DATE) AS BL_DATE
				 , B.EXPORTER AS SEARCH_MAN
				 , (SELECT CUSTOM_NAME
					  FROM BCM100T WITH (NOLOCK)
					 WHERE COMP_CODE   = B.COMP_CODE
					   AND CUSTOM_CODE = B.EXPORTER) AS SEARCH_MAN_NM
				 , B.TERMS_PRICE
				 , B.PAY_TERMS
			  FROM TIC100T A WITH (NOLOCK)
				 , TIA100T B WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND B.COMP_CODE = #{S_COMP_CODE}
			   AND A.SO_SER_NO = B.SO_SER_NO
			   AND A.DIV_CODE  = B.DIV_CODE
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND B.EXPORTER  = #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE  = #{DIV_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
			   AND A.BL_SER_NO = #{BL_SER_NO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(IN_BLNO_CODE)">
			   AND A.BL_NO = #{IN_BLNO_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">
			   AND BL_DATE &gt;= #{BL_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">
			   AND BL_DATE &lt;= #{BL_DATE_TO}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(IN_BLNO_CODE)">
			   AND A.BL_NO = #{IN_BLNO_CODE}
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.acProjectPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [PROJECT_ITEMCD, PROJECT_ITEMNM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.PJT_CODE  AS AC_PROJECT_CODE
				 , A.PJT_NAME  AS AC_PROJECT_NAME
				 , B.CODE_NAME AS COMPLETE_YN
			  FROM BCM600T A WITH (NOLOCK)
				   LEFT  JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													 AND B.MAIN_CODE = N'A035'
													 AND B.SUB_CODE  = A.DIVI
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (PJT_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR PJT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY PJT_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">
				AND (PJT_CODE LIKE #{AC_PROJECT_CODE} + '%'
			 	OR PJT_NAME LIKE '%'+ #{AC_PROJECT_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_NAME)">
				AND (PJT_CODE LIKE #{AC_PROJECT_NAME} + '%'
			 	OR PJT_NAME LIKE '%'+ #{AC_PROJECT_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.fnHum100P1" parameterType="Map" resultType="rMap">
		--UHbs01Krv.Chum100Kr.fnHum100P1
		SELECT WAGES_CODE
			 , WAGES_NAME
		  FROM HBS300T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND WAGES_KIND = '1'
	</select>
	<select id="popupServiceImpl.payGradePopup" parameterType="Map" resultType="rMap">
		--UHbs01Krv.Chum100Kr.fnHum100P2 [PAY_GRADE_01, PAY_GRADE_02]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON


			SELECT PAY_GRADE_01
				 , PAY_GRADE_02
			<foreach collection="sWagesCode" item="loopData" index="index" >
				-- 수당코드 Loop
					 , '${loopData.WAGES_CODE}' AS CODE${loopData.WAGES_CODE}
					 , MAX(CASE WHEN A.WAGES_CODE = '${loopData.WAGES_CODE}'
								THEN A.WAGES_I
								ELSE 0
							END) AS STD${loopData.WAGES_CODE}
			</foreach>
			  FROM			HBS200T A
				   INNER JOIN HBS300T B
					  ON A.COMP_CODE  = B.COMP_CODE
					 AND A.WAGES_CODE = B.WAGES_CODE
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (PAY_GRADE_01 LIKE #{TXT_SEARCH} + '%'
			 	OR PAY_GRADE_02 LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
				AND (PAY_GRADE_01 LIKE #{PAY_GRADE_01} + '%'
			 	OR PAY_GRADE_02 LIKE '%'+ #{PAY_GRADE_01} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
				AND (PAY_GRADE_01 LIKE #{PAY_GRADE_02} + '%'
			 	OR PAY_GRADE_02 LIKE '%'+ #{PAY_GRADE_02} + '%' )
				</if>
			 </if>

			 GROUP BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02
			 ORDER BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.fundPopup" parameterType="Map" resultType="rMap">

	</select>

	<select id="popupServiceImpl.creditNoPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [CRDT_NUM, CRDT_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
				DROP TABLE #CRDT_NUM

			SELECT A.COMP_CODE
				 , A.CRDT_NUM
				 , A.CRDT_NAME
				 , ISNULL(A.CRDT_FULL_NUM, '')	AS CRDT_FULL_NUM
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME				   , '' )  	AS BANK_NAME
				 , ISNULL(A.ACCOUNT_NUM  , '')  	AS ACCOUNT_NUM
				 , A.SET_DATE
				 , ISNULL(C.NAME						  , '' )  	AS PERSON_NAME
				 , ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)			AS CRDT_COMP_CD
				 , D.CUSTOM_NAME									AS CRDT_COMP_NM
				 , A.USE_YN
			INTO   #CRDT_NUM
			FROM			  ABA500T   A  WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
														AND B.CUSTOM_CODE = A.BANK_CODE
				   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
														AND M1.MAIN_CODE  = 'A028'
														AND M1.SUB_CODE   = A.CRDT_KIND
				   LEFT  JOIN HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
														AND C.PERSON_NUMB = A.PERSON_NUMB
				   LEFT  JOIN BCM100T   D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
														AND D.CUSTOM_CODE = ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF

			SELECT CRDT_NUM		AS CREDIT_NO_CODE
				 , CRDT_NAME	   AS CREDIT_NO_NAME
				 , CRDT_FULL_NUM
				 , BANK_CODE
				 , BANK_NAME
				 , ACCOUNT_NUM
				 , SET_DATE
				 , PERSON_NAME
				 , CRDT_COMP_CD
				 , CRDT_COMP_NM
			FROM   #CRDT_NUM
			WHERE  COMP_CODE		  = #{S_COMP_CODE}
			AND	ISNULL(USE_YN,'Y') = N'Y'

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (CRDT_NUM LIKE #{TXT_SEARCH} + '%'
			 	OR CRDT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY CRDT_NUM ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(CREDIT_NO_CODE)">
				AND (CRDT_NUM LIKE #{CREDIT_NO_CODE} + '%'
			 	OR CRDT_NAME LIKE '%'+ #{CREDIT_NO_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(CREDIT_NO_NAME)">
				AND (CRDT_NUM LIKE #{CREDIT_NO_NAME} + '%'
			 	OR CRDT_NAME LIKE '%'+ #{CREDIT_NO_NAME} + '%' )
				</if>
			 </if>
		END
	</select>
	<select id="popupServiceImpl.creditNoPopupJ" parameterType="Map" resultType="rMap">
		--JOINS

		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
				DROP TABLE #CRDT_NUM

			SELECT A.COMP_CODE
				 , A.CRDT_NUM
				 , A.CRDT_NAME
				 , A.CRDT_FULL_NUM
				 , A.CRDT_FULL_NUM	  AS DEC_CRDT_NUM
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME,'')				 AS BANK_NAME
				 , A.ACCOUNT_NUM
				 , A.SET_DATE
				 , ISNULL(C.NAME,'')						AS PERSON_NAME
				 , ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)	 AS CRDT_COMP_CD
				 , D.CUSTOM_NAME							AS CRDT_COMP_NM
				 , A.USE_YN
			INTO   #CRDT_NUM
			FROM			  ABA500T   A  WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
														AND B.CUSTOM_CODE = A.BANK_CODE
				   LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
														AND M1.MAIN_CODE  = 'A028'
														AND M1.SUB_CODE   = A.CRDT_KIND
				   LEFT  JOIN HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
														AND C.PERSON_NUMB = A.PERSON_NUMB
				   LEFT  JOIN BCM100T   D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
														AND D.CUSTOM_CODE = ISNULL(A.CRDT_COMP_CD, M1.REF_CODE3)

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF

			SELECT CRDT_NUM		AS CREDIT_NO_CODE
				 , CRDT_NAME	   AS CREDIT_NO_NAME
				 , CRDT_FULL_NUM
				 , DEC_CRDT_NUM
				 , BANK_CODE
				 , BANK_NAME
				 , ACCOUNT_NUM
				 , SET_DATE
				 , PERSON_NAME
				 , CRDT_COMP_CD
				 , CRDT_COMP_NM
			FROM   #CRDT_NUM
			WHERE  COMP_CODE		  = #{S_COMP_CODE}
			AND	ISNULL(USE_YN,'Y') = N'Y'

			<if test="@foren.Ognl@isNotEmpty(SEARCH_CRDT_FULL_NUM)">
				AND CRDT_FULL_NUM = #{SEARCH_CRDT_FULL_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SEARCH_CREDIT_NO_NAME)">
				AND CRDT_NAME LIKE '%'+ #{SEARCH_CREDIT_NO_NAME} + '%'
			</if>



			<if test="@foren.Ognl@isEmpty(SEARCH_CRDT_FULL_NUM) || @foren.Ognl@isEmpty(SEARCH_CREDIT_NO_NAME)">
				<if test="@foren.Ognl@isNotEmpty(CRDT_FULL_NUM_EXPOS)">
				AND CRDT_FULL_NUM = #{CRDT_FULL_NUM_EXPOS}
				</if>
				<if test="@foren.Ognl@isNotEmpty(CREDIT_NO_NAME)">
				AND CRDT_NAME LIKE '%'+ #{CREDIT_NO_NAME} + '%'
				</if>
			 </if>

			ORDER BY CRDT_NUM ASC
		END
	</select>
	<select id="popupServiceImpl.purSaleTypePopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS PUR_SALE_TYPE_CODE
				 , CODE_NAME AS PUR_SALE_TYPE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'A003'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PUR_SALE_TYPE_CODE)">
				AND (SUB_CODE LIKE #{PUR_SALE_TYPE_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PUR_SALE_TYPE_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(PUR_SALE_TYPE_NAME)">
				AND (SUB_CODE LIKE #{PUR_SALE_TYPE_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PUR_SALE_TYPE_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.proofPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS PROOF_CODE
				 , CODE_NAME AS PROOF_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'A022'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PROOF_CODE)">
				AND (SUB_CODE LIKE #{PROOF_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PROOF_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(PROOF_NAME)">
				AND (SUB_CODE LIKE #{PROOF_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{PROOF_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.emissionPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS EMISSION_CODE
				 , CODE_NAME AS EMISSION_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = N'A149'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(EMISSION_CODE)">
				AND (SUB_CODE LIKE #{EMISSION_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{EMISSION_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(EMISSION_NAME)">
				AND (SUB_CODE LIKE #{EMISSION_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{EMISSION_NAME} + '%' )
				</if>
			 </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.bankBookPopup" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetDeposit]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SAVE_CODE AS BANK_BOOK_CODE
				 , SAVE_NAME AS BANK_BOOK_NAME
				 , ISNULL(BANK_ACCOUNT, '') AS DEPOSIT_NUM
				 , BANK_CODE AS BANK_CD
				 , (SELECT CUSTOM_NAME
					  FROM BCM100T WITH (NOLOCK)
					 WHERE COMP_CODE   = A.COMP_CODE
					   AND CUSTOM_TYPE = N'4'
					   AND CUSTOM_CODE = A.BANK_CODE) AS BANK_NM
				 , ACCNT
				 , (SELECT ACCNT_NAME
					  FROM ABA400T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND ACCNT	 = A.ACCNT) AS ACCNT_NAME
				 , DIV_CODE
				 , (SELECT DIV_NAME
					  FROM BOR120T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND DIV_CODE  = A.DIV_CODE) AS DIV_NAME
			  FROM AFS100T A WITH (NOLOCK)
			 WHERE A.COMP_CODE		= #{S_COMP_CODE}
			   AND ISNULL(USE_YN,'Y') = N'Y'
			 <if test="@foren.Ognl@isNotEmpty(ACCNT)">
				 AND ACCNT =  #{ACCNT}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND DIV_CODE =  #{DIV_CODE}
			 </if>
			  <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
				AND ${ADD_QUERY}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SAVE_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SAVE_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(BANK_BOOK_CODE)">
				AND (SAVE_CODE LIKE #{BANK_BOOK_CODE} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{BANK_BOOK_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(BANK_BOOK_NAME)">
				AND (SAVE_CODE LIKE #{BANK_BOOK_NAME} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{BANK_BOOK_NAME} + '%' )
				</if>
			 </if>


			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.bankBookCodePopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT
				 A.CUSTOM_CODE
				,C.CUSTOM_NAME
				, A.BOOK_CODE
				, A.BOOK_NAME
				,A.BANK_CODE
				,B.CUSTOM_NAME				AS BANK_NAME
				,ISNULL(A.BANKBOOK_NUM,'')	AS BANK_ACCOUNT
				,A.BANKBOOK_NAME
				, A.MAIN_BOOK_YN
			FROM		BCM130T A WITH(NOLOCK)
			LEFT  JOIN	BCM100T	B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
											  AND B.CUSTOM_CODE = A.BANK_CODE
											  AND B.CUSTOM_TYPE = '4'
			INNER JOIN  BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
											  AND C.CUSTOM_CODE = A.CUSTOM_CODE
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			  AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.BOOK_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR A.BOOK_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(BOOK_CODE)">
				AND (A.BOOK_CODE LIKE #{BOOK_CODE} + '%'
			 	OR BOOK_NAME LIKE '%'+ #{BOOK_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(BOOK_NAME)">
				AND (A.BOOK_CODE LIKE #{BOOK_NAME} + '%'
			 	OR A.BOOK_NAME LIKE '%'+ #{BOOK_NAME} + '%' )
				</if>
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_SEARCH)">
		 		AND (A.CUSTOM_CODE LIKE #{CUSTOM_SEARCH} + '%'
			 	OR C.CUSTOM_NAME LIKE '%'+ #{CUSTOM_SEARCH} + '%' )
			 </if>
			ORDER BY B.CUSTOM_NAME

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.debtNoPopup" parameterType="Map" resultType="rMap">
		--UAccntPopupKrv.CAccntPopupKR[fnGetLoanNo]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			 SELECT A.LOANNO											AS DEBT_NO_CODE
				  , LTRIM(RTRIM(A.LOAN_NAME))						   AS DEBT_NO_NAME
				  , A.CUSTOM											AS CUSTOM_CODE
				  , UNILITE.FNCUSTNAME(#{S_USER_ID}, A.CUSTOM)  		AS CUSTOM_NAME
				  , M1.CODE_NAME										AS LOAN_GUBUN
				  , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.PUB_DATE)  AS PUB_DATE
				  , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.EXP_DATE)  AS EXP_DATE
				  , A.AMT_I
				  , A.FOR_AMT_I
				  , A.MONEY_UNIT
				  , A.REMARK
			   FROM		   AFN300T A  WITH (NOLOCK)
					LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
													  AND M1.MAIN_CODE = N'A089'
													  AND M1.SUB_CODE  = A.LOAN_GUBUN
			  WHERE A.COMP_CODE = #{S_COMP_CODE}
			  <if test="@foren.Ognl@isNotEmpty(RDO)">
				  <if test="@foren.Ognl@isNotEmpty(EXP_DATE_FR)">
					AND A.EXP_DATE	&gt;= #{EXP_DATE_FR}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(EXP_DATE_TO)">
					AND A.EXP_DATE	&lt;= #{EXP_DATE_TO}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
					AND A.ACCNT		   = #{ACCNT_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
					AND A.CUSTOM		  = #{CUSTOM_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
					AND A.DIV_CODE		= #{DIV_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(LOANNO)">
					AND A.LOANNO	LIKE  #{LOANNO} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(LOAN_NAME)">
					AND A.LOAN_NAME LIKE  #{LOAN_NAME} + '%'
				</if>
			</if>

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (LOANNO LIKE #{TXT_SEARCH} + '%'
			 	OR LOAN_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY LOANNO ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
				AND (LOANNO LIKE #{DEBT_NO_CODE} + '%'
			 	OR LOAN_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
				AND (LOANNO LIKE #{DEBT_NO_NAME} + '%'
			 	OR LOAN_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%' )
				</if>
			 </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>


	<select id="popupServiceImpl.bankAccntPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [BANK_ACCOUNT]
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#BANK_ACCOUNT_KD'))
				DROP TABLE #BANK_ACCOUNT_KD

			SELECT A.COMP_CODE
				 , A.SAVE_CODE
				 , A.SAVE_NAME
				 , ISNULL(A.BANK_ACCOUNT, '')  AS BANK_ACCOUNT
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME				  , '')   AS BANK_NAME
			INTO   #BANK_ACCOUNT_KD
			FROM			  AFS100T   A WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													   AND B.CUSTOM_CODE = A.BANK_CODE
													   AND B.CUSTOM_TYPE = N'4'

			SET NOCOUNT OFF
			SET ARITHABORT OFF

			SELECT SAVE_CODE
				 , SAVE_NAME
				 , BANK_ACCOUNT   AS  BANK_ACCNT_CODE
				 , BANK_CODE
				 , BANK_NAME
			FROM   #BANK_ACCOUNT_KD
			WHERE  COMP_CODE	   = #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(SAVE_NAME)">
		 		AND SAVE_NAME LIKE '%'+ #{SAVE_NAME} + '%'

			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_ACCOUNT)">
		 		AND BANK_ACCOUNT LIKE #{BANK_ACCOUNT} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(BANK_ACCOUNT)">
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
					AND BANK_ACCOUNT LIKE #{DEBT_NO_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
					AND BANK_ACCOUNT LIKE #{DEBT_NO_NAME} + '%'
				</if>
			</if>
			<if test="@foren.Ognl@isEmpty(SAVE_NAME)">
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
				AND SAVE_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
				AND SAVE_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%'
				</if>
			</if>
			ORDER BY SAVE_NAME, BANK_ACCOUNT ASC
		END
	</select>


	<select id="popupServiceImpl.bankAccntPopupOld" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [BANK_ACCOUNT]
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#BANK_ACCOUNT_KD'))
				DROP TABLE #BANK_ACCOUNT_KD

			SELECT A.COMP_CODE
				 , A.SAVE_CODE
				 , A.SAVE_NAME
				 , ISNULL(A.BANK_ACCOUNT, '')  AS BANK_ACCOUNT
				 , A.BANK_CODE
				 , ISNULL(B.CUSTOM_NAME				  , '')   AS BANK_NAME
			INTO   #BANK_ACCOUNT_KD
			FROM			  AFS100T   A WITH (NOLOCK)
				   LEFT  JOIN BCM100T   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													   AND B.CUSTOM_CODE = A.BANK_CODE
													   AND B.CUSTOM_TYPE = N'4'

			SET NOCOUNT OFF
			SET ARITHABORT OFF

			SELECT SAVE_CODE
				 , SAVE_NAME
				 , BANK_ACCOUNT   AS  BANK_ACCNT_CODE
				 , BANK_CODE
				 , BANK_NAME
			FROM   #BANK_ACCOUNT_KD
			WHERE  COMP_CODE	   = #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (BANK_ACCOUNT LIKE #{TXT_SEARCH} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY BANK_ACCOUNT ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
				AND (BANK_ACCOUNT LIKE #{DEBT_NO_CODE} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
				AND (BANK_ACCOUNT LIKE #{DEBT_NO_NAME} + '%'
			 	OR SAVE_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%' )
				</if>
			 </if>

		END
	</select>

	<select id="popupServiceImpl.commonPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS COMMON_CODE
				 , CODE_NAME AS COMMON_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = #{BSA_CODE}
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'
			<if test="@foren.Ognl@isNotEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						AND	 SUB_CODE	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY SUB_CODE ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						AND	 CODE_NAME	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY CODE_NAME ASC
					</if>
				</if>
				<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						ORDER BY SUB_CODE ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						ORDER BY CODE_NAME ASC
					</if>
				</if>
			</if>
			<if test="@foren.Ognl@isEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(COMMON_CODE)">
					AND	 SUB_CODE	 = #{COMMON_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(COMMON_NAME)">
					AND	 CODE_NAME	= #{COMMON_NAME}
				</if>
			</if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.businessBankPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT SUB_CODE  AS BUSINESS_BANK_CODE
				 , CODE_NAME AS BUSINESS_BANK_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND MAIN_CODE   = 'A029'
			   AND SUB_CODE   != N'$'
			   AND USE_YN	  = N'Y'

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY SUB_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(BUSINESS_BANK_CODE)">
				AND (SUB_CODE LIKE #{BUSINESS_BANK_CODE} + '%'
			 	OR CODE_NAME LIKE '%'+ #{BUSINESS_BANK_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(BUSINESS_BANK_NAME)">
				AND (SUB_CODE LIKE #{BUSINESS_BANK_NAME} + '%'
			 	OR CODE_NAME LIKE '%'+ #{BUSINESS_BANK_NAME} + '%' )
				</if>
			  </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.userDefinePopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [AC_USER_DEFINE, AC_USER_DEFINE_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT AC_DATA   AS USER_DEFINE_CODE
				 , AC_NAME   AS USER_DEFINE_NAME
				 , REF_CODE1
				 , REF_CODE2
			  FROM ABA210T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND AC_CD		= #{AC_CD}
			<if test="@foren.Ognl@isNotEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						AND	 AC_DATA	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY AC_DATA ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						AND	 AC_NAME	LIKE + '%' + #{TXT_SEARCH} + '%'
						ORDER BY AC_NAME ASC
					</if>
				</if>
				<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
					<if test="RDO == &quot;1&quot;">
						ORDER BY AC_DATA ASC
					</if>
					<if test="RDO == &quot;2&quot;">
						ORDER BY AC_NAME ASC
					</if>
				</if>
			</if>

			<if test="@foren.Ognl@isEmpty(RDO)">
				<if test="@foren.Ognl@isNotEmpty(USER_DEFINE_CODE)">
					AND	 AC_DATA	 = #{USER_DEFINE_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(USER_DEFINE_NAME)">
					AND	 AC_NAME   	  = #{USER_DEFINE_NAME}
				</if>
			</if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.moneyUnitPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [MONEY_UNIT, MONEY_UNIT_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT MONEY_UNIT			AS MONEY_UNIT
				 , ISNULL(STATE_CODE,'') AS COUNTRY_CODE
				 , ISNULL(STATE_NAME,'') AS COUNTRY_NAME
			  FROM ABA150T A WITH (NOLOCK)
			 WHERE A.COMP_CODE	 = #{S_COMP_CODE}

			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (MONEY_UNIT LIKE #{TXT_SEARCH} + '%'
			 	OR STATE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	ORDER BY MONEY_UNIT ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
				AND (MONEY_UNIT LIKE #{MONEY_UNIT} + '%'
			 	OR STATE_NAME LIKE '%'+ #{MONEY_UNIT} + '%' )
				</if>
			  </if>

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.codeLevel" parameterType="Map" resultType="rMap">		/* CODE_LEVEL 갯수*/
	--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query01
	SELECT ISNULL(CODE_LEVEL,0) CODE_LEVEL
	  FROM AFB300T WITH (NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND BASE_CODE = N'01'
	   AND AC_YYYY   = #{AC_YYYY}
	</select>

	<select id="popupServiceImpl.selectAcYyyy" parameterType="Map" resultType="rMap">		/* AC_YYYY 구함*/
	--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query00
	DECLARE @COMP_CODE NVARCHAR(08) --법인카드
		  , @DATE	  NVARCHAR(10) --예산일자

		  , @TODAY	 NVARCHAR(08) --현재일자

		  , @AC_YYYY   NVARCHAR(04) --예산사업년도

	SET @COMP_CODE = #{S_COMP_CODE}
	SET @DATE	  = #{AC_YYYY}

	SET @TODAY	 = CONVERT(NVARCHAR(08), GETDATE(), 112)

	IF (@DATE = '')
		SET @AC_YYYY = uniLITE.fnGetBudgAcYyyy(@COMP_CODE, @TODAY)
	ELSE
		SET @AC_YYYY = uniLITE.fnGetBudgAcYyyy(@COMP_CODE, @DATE)

	SELECT @AC_YYYY AS AC_YYYY
	</select>

	<select id="popupServiceImpl.budgPopup" parameterType="Map" resultType="rMap">			/* 예산과목 */
	--'예산코드 데이터 가져오기
	--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query03
	BEGIN
		SET NOCOUNT ON

	--  [ 변수 정의 ] --------------------------------------------------------------------------------------------------
		DECLARE @COMP_CODE	   NVARCHAR(08)   --(필수) 법인코드
			  , @AC_YYYY		 NVARCHAR(04)   --(필수) 예산년도
			  , @DEPT_CODE	   NVARCHAR(08)   --(필수) 부서코드

			  , @LEVEL_LEN1	  NUMERIC(2,0)
			  , @LEVEL_LEN2	  NUMERIC(2,0)
			  , @LEVEL_LEN3	  NUMERIC(2,0)
			  , @LEVEL_LEN4	  NUMERIC(2,0)
			  , @LEVEL_LEN5	  NUMERIC(2,0)
			  , @LEVEL_LEN6	  NUMERIC(2,0)
			  , @LEVEL_LEN7	  NUMERIC(2,0)
			  , @LEVEL_LEN8	  NUMERIC(2,0)

	--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @AC_YYYY	  = #{AC_YYYY}
		SET @DEPT_CODE	= #{DEPT_CODE}

	--  [ 예산코드자릿수 가져오기 ] --------------------------------------------------------------------------------------------------
		SELECT @LEVEL_LEN1 = ISNULL(LEVEL_NUM1, 0)
			 , @LEVEL_LEN2 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0)
			 , @LEVEL_LEN3 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0)
			 , @LEVEL_LEN4 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
			 , @LEVEL_LEN5 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
						   + ISNULL(LEVEL_NUM5, 0)
			 , @LEVEL_LEN6 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
						   + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0)
			 , @LEVEL_LEN7 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
						   + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0) + ISNULL(LEVEL_NUM7, 0)
			 , @LEVEL_LEN8 = ISNULL(LEVEL_NUM1, 0) + ISNULL(LEVEL_NUM2, 0) + ISNULL(LEVEL_NUM3, 0) + ISNULL(LEVEL_NUM4, 0)
						   + ISNULL(LEVEL_NUM5, 0) + ISNULL(LEVEL_NUM6, 0) + ISNULL(LEVEL_NUM7, 0) + ISNULL(LEVEL_NUM8, 0)
		  FROM AFB300T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND AC_YYYY   = @AC_YYYY

	--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
		DECLARE	 @TypeKey				NVARCHAR(20)

		SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

		IF NOT EXISTS   (
						SELECT TOP 1 1
						FROM   T_BUDGCODE WITH (NOLOCK)
						WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + '%'
						)
		BEGIN
			TRUNCATE TABLE T_BUDGCODE
		END

	--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
		-- 1. 예산코드를 레벨별코드까지 임시테이블에 INSERT
		INSERT INTO T_BUDGCODE  (TYPE_KEY  , TYPE_FLAG , COMP_CODE , AC_YYYY   , BUDG_CODE, BUDG_NAME, DEPT_CODE, ACCNT, PJT_CODE
							   , USE_YN	, GROUP_YN  , CODE_LEVEL, BUDG_TYPE
		<foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
							   , BUDG_CODE_${index+1}
		</foreach>
								)
		SELECT @TypeKey													  AS TYPE_KEY
			 , N'0'														  AS TYPE_FLAG
			 , A.COMP_CODE												   AS COMP_CODE
			 , @AC_YYYY													  AS AC_YYYY
			 , A.BUDG_CODE												   AS BUDG_CODE
			 , A.BUDG_NAME												   AS BUDG_NAME
			 , ISNULL(B.DEPT_CODE, @DEPT_CODE)							   AS DEPT_CODE
			 , CASE WHEN ISNULL(A.GROUP_YN, 'N') = 'Y' THEN ''
					ELSE (CASE WHEN @DEPT_CODE = '' THEN A.ACCNT
							   ELSE B.ACCNT
						  END)
			   END														   AS ACCNT
			 , CASE WHEN ISNULL(B.PJT_CODE, '') = '' THEN A.PJT_CODE
					ELSE B.PJT_CODE
			   END														   AS PJT_CODE
			 , CASE WHEN @DEPT_CODE = '' THEN CONVERT(NVARCHAR(01), 'Y')
					ELSE ISNULL(B.USE_YN	 , 'N')
			   END														   AS USE_YN
			 , ISNULL(A.GROUP_YN, 'N')									   AS GROUP_YN
			 , A.CODE_LEVEL												  AS CODE_LEVEL
			 , A.BUDG_TYPE												   AS BUDG_TYPE

		<foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
			 , LEFT(A.BUDG_CODE, @LEVEL_LEN${index+1} )					AS BUDG_CODE_${index+1}
		</foreach>
		FROM			  AFB400T AS A WITH (NOLOCK)
			   LEFT  JOIN AFB410T AS B WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
													AND B.AC_YYYY	  = A.AC_YYYY
													AND B.BUDG_CODE	= A.BUDG_CODE
													AND B.DEPT_CODE	= @DEPT_CODE
		WHERE  A.COMP_CODE	 = @COMP_CODE
		AND	A.AC_YYYY	   = @AC_YYYY
		<if test="@foren.Ognl@isNotEmpty(ACCNT)">
		AND  A.ACCNT		=	 #{ACCNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	 		AND (A.BUDG_CODE LIKE #{TXT_SEARCH} + '%'
		 	OR A.BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		</if>
		<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
			AND (A.BUDG_CODE LIKE #{BUDG_CODE} + '%'
		 	OR A.BUDG_NAME LIKE '%'+ #{BUDG_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(BUDG_NAME_L1)">
			AND (A.BUDG_CODE LIKE #{BUDG_NAME_L1} + '%'
		 	OR A.BUDG_NAME LIKE '%'+ #{BUDG_NAME_L1} + '%' )
			</if>
		</if>
		AND	A.CODE_LEVEL  &gt;= 1


		-- 2. Main Query
		SELECT *
		  FROM (
				SELECT T1.BUDG_CODE

		<foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
					 , L${index+1}.BUDG_NAME AS BUDG_NAME_L${index+1}
		</foreach>

					 , T1.ACCNT
					 , D1.ACCNT_NAME
					 , T1.DEPT_CODE
					 , D2.TREE_NAME AS DEPT_NAME
					 , T1.USE_YN
					 , T1.GROUP_YN
					 , T1.CODE_LEVEL
					 , T1.PJT_CODE
					 , D3.PJT_NAME
					 , D3.SAVE_CODE
					 , D4.SAVE_NAME
					 , ISNULL(D4.BANK_ACCOUNT, '')	AS BANK_ACCOUNT
					 , D4.BANK_CODE
					 , D5.CUSTOM_NAME								   AS BANK_NAME
					 , T1.BUDG_TYPE
				  FROM		 T_BUDGCODE AS T1


		<foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
					   LEFT  JOIN AFB400T AS L${index+1}  WITH (NOLOCK)
										  ON L${index+1} .COMP_CODE	 = T1.COMP_CODE
										 AND L${index+1} .AC_YYYY	   = T1.AC_YYYY
										 AND L${index+1} .CODE_LEVEL	=  ${index+1}
										 AND L${index+1} .BUDG_CODE	 = T1.BUDG_CODE_${index+1}
		</foreach>


					   LEFT  JOIN ABA400T AS D1 WITH (NOLOCK) ON D1.COMP_CODE	 = T1.COMP_CODE
															 AND D1.ACCNT		 = T1.ACCNT
					   LEFT  JOIN BSA210T AS D2 WITH (NOLOCK) ON D2.COMP_CODE	 = T1.COMP_CODE
															 AND D2.TREE_CODE	 = T1.DEPT_CODE
					   LEFT  JOIN BCM600T AS D3 WITH (NOLOCK) ON D3.COMP_CODE	 = T1.COMP_CODE
															 AND D3.PJT_CODE	  = T1.PJT_CODE
					   LEFT  JOIN AFS100T AS D4 WITH (NOLOCK) ON D4.COMP_CODE	 = D3.COMP_CODE
															 AND D4.SAVE_CODE	 = D3.SAVE_CODE
					   LEFT  JOIN BCM100T AS D5 WITH (NOLOCK) ON D5.COMP_CODE	 = D4.COMP_CODE
															 AND D5.CUSTOM_CODE   = D4.BANK_CODE
				 WHERE   T1.TYPE_KEY	 = @TypeKey
				   AND   T1.TYPE_FLAG	= '0'
			   ) AS A
		 WHERE 1 = 1

		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
			AND ${ADD_QUERY}
		</if>



		 ORDER BY A.BUDG_CODE


		SET NOCOUNT OFF
	END
	</select>

	<select id="popupServiceImpl.budgPopupGba" parameterType="Map" resultType="rMap">
		SELECT
			BUDG_CODE,
			BUDG_NAME
		FROM GBA010T
		WHERE 1 = 1
			AND COMP_CODE = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND DIV_CODE = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BUDG_TYPE)">
				AND BUDG_TYPE = #{BUDG_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CODE_LEVEL)">
				AND CODE_LEVEL = #{CODE_LEVEL}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
					AND (BUDG_CODE LIKE #{TXT_SEARCH} + '%'
			 		OR BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
				AND ${ADD_QUERY}
			</if>
	</select>

	<select id="popupServiceImpl.deptTreeList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
		/* popupServiceImpl.popupTreeList */
		SELECT S.ID 					AS 'id'
			 , S.PARENT_NODE 			AS 'parentId'
			 , TREE_CODE
			 , TREE_NAME
			 , TREE_LEVEL
			 , TYPE_LEVEL
			 , SECTION_CD
			 , USE_YN
			 , SORT_SEQ
			 , '' 						AS UPLEVE_CODE
			 , COMP_CODE
			 , TREE_NAME  				AS text
			 , CONVERT(BIT, 'FALSE')	AS checked
		FROM (
			SELECT A.TREE_LEVEL ID
				 , CASE
					WHEN LEN(a.TREE_LEVEL) = 1
						 THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
					ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
					END 				AS parent_node
				 , A.*
			  FROM BSA210T A WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
				<if test="USE_YN == &quot;Y&quot;">
					AND A.USE_YN = 'Y'
				</if>
			)  							AS S
		ORDER BY S.id

	</select>

	<select id="popupServiceImpl.pjtTreeList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
		/* popupServiceImpl.popupProjectList */
		SELECT S.ID AS 'id'
			 , S.PARENT_NODE 				AS 'parentId'
			 , PJT_CODE						--TREE_CODE(사업코드)
			 , PJT_NAME						--TREE_NAME(사업명)
			 , TREE_LEVEL
			 , DEPT_CODE
			 , DEPT_NAME
			 , PERSON_NUMB
			 , USE_YN
			 , '' 							AS UPLEVE_CODE
			 , COMP_CODE
			 , PJT_NAME  					AS text
			 , CONVERT(BIT, 'FALSE') 		AS checked
		FROM (
			SELECT a.TREE_LEVEL+'|'+a.PJT_CODE ID
				 , CASE
					WHEN LEN(a.TREE_LEVEL) = 1
						THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
					ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
					END 					AS parent_node
				 , A.*
			  FROM BCM600T A WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(USE_YN)">
			   AND A.USE_YN = #{USE_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND  (
						A.PJT_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR	A.PJT_NAME LIKE '%' + #{TXT_SEARCH} + '%'
					)
			</if>
			)  								AS S
		ORDER BY S.id
	</select>
	<select id="popupServiceImpl.pjtTreeList2" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
		/* popupServiceImpl.popupProjectList */
		SELECT S.ID AS 'id'
			 , S.PARENT_NODE 				AS 'parentId'
			 , PJT_CODE						--TREE_CODE(사업코드)
			 , PJT_NAME						--TREE_NAME(사업명)
			 , TREE_LEVEL
			 , DEPT_CODE
			 , DEPT_NAME
			 , PERSON_NUMB
			 , USE_YN
			 , '' 							AS UPLEVE_CODE
			 , COMP_CODE
			 , PJT_NAME  					AS text
			 , CONVERT(BIT, 'FALSE') 		AS checked
		FROM (
			SELECT a.TREE_LEVEL+'|'+a.PJT_CODE ID
				 , CASE
					WHEN LEN(a.TREE_LEVEL) = 1
						THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
					ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
					END 					AS parent_node
				 , A.*
			  FROM BCM600T A WITH (NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND A.USE_YN = 'Y'
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND  (
						A.PJT_CODE LIKE '%' + #{TXT_SEARCH} + '%'
					OR	A.PJT_NAME LIKE '%' + #{TXT_SEARCH} + '%'
					)
			</if>
			)  								AS S
		ORDER BY S.id
	</select>
	<select id="popupServiceImpl.pjtPopupW" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.popupProjectListW */
		SELECT TOP 1 A.PJT_CODE
			 , A.PJT_NAME
			 , DEPT_CODE
			 , DEPT_NAME
			 , PERSON_NUMB
		  FROM BCM600T A WITH (NOLOCK)
		 WHERE A.USE_YN = 'Y'
		   AND A.COMP_CODE = #{S_COMP_CODE}

		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
		   AND (A.PJT_CODE LIKE '%'+ #{PJT_CODE} + '%'
			OR A.PJT_NAME LIKE '%'+ #{PJT_CODE} + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
		   AND (A.PJT_CODE LIKE '%'+ #{PJT_NAME} + '%'
			OR A.PJT_NAME LIKE '%'+ #{PJT_NAME} + '%' )
		</if>
		  ORDER BY A.TREE_LEVEL
	</select>


	<select id="popupServiceImpl.nonTaxPopup" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
		--uniLITE5Popup.CPopup[fnGetNonTaxCode] Query01
		SELECT NONTAX_CODE
			 , NONTAX_CODE_NAME
			 , PRINT_LOCATION
			 , SEND_YN
			 , TAX_EXEMP_KIND
			 , TAX_EXEMP_LMT
		  FROM      HBS120T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(PAY_YM_FR)">
		   AND TAX_YYYY  = #{PAY_YM_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(NONTAX_CODE)">
		   AND NONTAX_CODE  LIKE #{NONTAX_CODE} + '%'
		</if>
	</select>


	<select id="popupServiceImpl.payCustomPopup" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnAPopUp [PAY_CUSTOM_CD, PAY_CUSTOM_NM]
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT A.PAY_CUSTOM_CODE
				 , A.PAY_CUSTOM_NAME
				 , A.COMPANY_NUM
				 , ISNULL(C.CUSTOM_NAME  , '') 					AS	CUSTOM_NAME
				 , ISNULL(A.BANKBOOK_NUM, '') AS BANKBOOK_NUM
				 , ISNULL(A.BANKBOOK_NAME, '')  				AS BANKBOOK_NAME
				 , B.CODE_NAME
				 , ISNULL(A.BANK_CODE	, '') 					AS BANK_CODE

			  FROM	  ABH200TV A WITH (NOLOCK)
			  LEFT JOIN BSA100T  B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
								  AND B.MAIN_CODE   = N'A210'
								  AND B.SUB_CODE	= A.PEND_CODE
			  LEFT JOIN BCM100T  C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
								  AND C.CUSTOM_TYPE = N'4'
								  AND C.CUSTOM_CODE = A.BANK_CODE

			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (A.PAY_CUSTOM_CODE LIKE #{TXT_SEARCH} + '%'
			 	OR A.PAY_CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 	<if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
					AND A.PEND_CODE = #{PEND_CODE}
				</if>

			 	ORDER BY A.PAY_CUSTOM_CODE ASC
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(PAY_CUSTOM_CODE)">
				AND (A.PAY_CUSTOM_CODE LIKE #{PAY_CUSTOM_CODE} + '%'
			 	OR A.PAY_CUSTOM_NAME LIKE '%'+ #{PAY_CUSTOM_CODE} + '%' )
			 	<if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
					AND A.PEND_CODE = #{PEND_CODE}
				</if>

				</if>
			 	<if test="@foren.Ognl@isNotEmpty(PAY_CUSTOM_NAME)">
				AND (A.PAY_CUSTOM_CODE LIKE #{PAY_CUSTOM_NAME} + '%'
			 	OR A.PAY_CUSTOM_NAME LIKE '%'+ #{PAY_CUSTOM_NAME} + '%' )
			 	<if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
					AND A.PEND_CODE = #{PEND_CODE}
				</if>

				</if>
			 </if>
			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>
	<select id="popupServiceImpl.compPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.compPopup */
		SELECT COMP_CODE
			  ,COMP_NAME
			  ,REPRE_NAME
			  ,COMPANY_NUM
			  ,TELEPHON
		  FROM	  BOR100T
		 WHERE 1=1
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (COMP_CODE   LIKE #{TXT_SEARCH} + '%'
			OR  COMP_NAME LIKE '%' + #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
				<if test="USELIKE == false">
					AND (COMP_CODE = #{COMP_CODE}
					OR COMP_NAME = #{COMP_CODE})
				</if>
				<if test="USELIKE != false">
					AND (COMP_CODE LIKE #{COMP_CODE}+'%'
					OR  COMP_NAME LIKE '%'+ #{COMP_CODE} + '%')
				</if>
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(COMP_NAME)">
				<if test="USELIKE == false">
					AND (COMP_CODE = #{COMP_NAME}
					OR COMP_NAME = #{COMP_NAME})
				</if>
				<if test="USELIKE != false">
					AND (COMP_CODE LIKE #{COMP_NAME}+'%'
					OR  COMP_NAME LIKE '%'+ #{COMP_NAME} + '%')
				</if>
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
			AND ${ADD_QUERY}
		  </if>
		 ORDER BY COMP_CODE ASC
	</select>

	<select id="popupServiceImpl.confRecePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.confRecePopup */
		SELECT
			 A.RECE_COMP_CODE
		   , B.COMP_NAME AS RECE_COMP_NAME
		   , A.CONF_RECE_NO
		   , A.CUSTOM_CODE
		   , C.CUSTOM_NAME AS CONF_RECE_CUSTOM_NAME
		   , A.RECE_AMT

		  FROM	   ARC200T A WITH(NOLOCK)
		  LEFT  JOIN BOR100T B WITH (NOLOCK) ON B.COMP_CODE   = A.RECE_COMP_CODE
		  LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
											AND C.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE
				A.COMP_CODE = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.CONF_RECE_NO	LIKE #{TXT_SEARCH} + '%'
			OR  C.CUSTOM_NAME LIKE '%' + #{TXT_SEARCH} + '%')
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CONF_RECE_NO)">
				<if test="USELIKE == false">
					AND (A.CONF_RECE_NO  = #{CONF_RECE_NO}
					 OR  C.CUSTOM_NAME  = #{CONF_RECE_NO})
				</if>
				<if test="USELIKE != false">
					AND (A.CONF_RECE_NO LIKE #{CONF_RECE_NO}+'%'
					OR  C.CUSTOM_NAME LIKE '%'+ #{CONF_RECE_NO} + '%')
				</if>
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(CONF_RECE_CUSTOM_NAME)">
				<if test="USELIKE == false">
					AND (A.CONF_RECE_NO  = #{CONF_RECE_CUSTOM_NAME}
					 OR  C.CUSTOM_NAME  = #{CONF_RECE_CUSTOM_NAME})
				</if>
				<if test="USELIKE != false">
					AND (A.CONF_RECE_NO LIKE #{CONF_RECE_CUSTOM_NAME}+'%'
					OR  C.CUSTOM_NAME LIKE '%'+ #{CONF_RECE_CUSTOM_NAME} + '%')
				</if>
		  </if>
		 ORDER BY A.CONF_RECE_NO ASC
	</select>

	<select id="popupServiceImpl.purchaseCardPopup" parameterType="Map" resultType="rMap">
		SELECT PURCHASE_CARD_NUM
			 , PURCHASE_CARD_NAME
		  FROM AFS200T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_CARD_NUM)">
		   AND (PURCHASE_CARD_NUM  LIKE '%' + #{PURCHASE_CARD_NUM} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{PURCHASE_CARD_NUM} + '%')
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_CARD_NAME)">
		   AND (PURCHASE_CARD_NUM  LIKE '%' + #{PURCHASE_CARD_NAME} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{PURCHASE_CARD_NAME} + '%')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (PURCHASE_CARD_NUM  LIKE '%' + #{TXT_SEARCH} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{TXT_SEARCH} + '%')
		</if>
		 ORDER BY PURCHASE_CARD_NUM ASC
	</select>

	<select id="popupServiceImpl.advmReqSlipNo" parameterType="Map" resultType="rMap">
	  SELECT *
		FROM
			  (SELECT ROW_NUMBER() OVER (ORDER BY ADVM_REQ_SLIP_NO ) AS rownum
					, '0' AS chk
					, ADVM_REQ_SLIP_NO
					, NAME
					, SLIP_AMT
					, VENDOR_ID
					, VENDOR_NM
					, VENDOR_SITE_CD
					, VENDOR_SITE_ID
					, PAY_TERMS_CD
					, PAY_METO_CD
					, SLIP_DESC
					, ADVM_REQ_EMP_ID
			   FROM (SELECT AH.ELEC_SLIP_NO AS ADVM_REQ_SLIP_NO
						  , EMP.NAME
						  , SH2.INSERT_DB_USER AS ADVM_REQ_EMP_ID
						  , SH2.SLIP_DESC
						  , REPLACE(CONVERT(VARCHAR,CONVERT(MONEY,AH.SLIP_AMT),1),'.00','') AS SLIP_AMT
						  , SH2.VENDOR_ID
						  , SH2.VENDOR_NM
						  , SH2.VENDOR_SITE_CD
						  , SH2.VENDOR_SITE_ID
						  , VX.TERMS_ID AS PAY_TERMS_CD
						  , VX.PAYMENT_METHOD_LOOKUP_CODE AS PAY_METO_CD
					 FROM			  TB_ES_ADV_HD   AH WITH(NOLOCK)
							INNER JOIN TB_ES_ADV_DT   AD WITH(NOLOCK) ON AD.ELEC_SLIP_NO	   = AH.ELEC_SLIP_NO
																	 AND AD.ADVM_ELEC_SLIP_NO &gt; '0'
							INNER JOIN TB_ES_SLIP_HD SH2 WITH(NOLOCK) ON SH2.COMP_CODE		 = AH.COMP_CODE
																	 AND SH2.ELEC_SLIP_NO	  = AH.ELEC_SLIP_NO
																	 AND SH2.SLIP_STAT_CD	  = '60'
							INNER JOIN TB_ES_SLIP_DT  SD WITH(NOLOCK) ON SD.COMP_CODE		  = SH2.COMP_CODE
																	 AND SD.ELEC_SLIP_NO	   = SH2.ELEC_SLIP_NO
																	 AND SD.LINE_TYPE_CD	   = 'ITEM'
																	 AND SD.DC_DIV_CD		  = 'D'
							INNER JOIN BCM100T		VX WITH(NOLOCK) ON VX.COMP_CODE		  = SH2.COMP_CODE
																	 AND VX.CUSTOM_CODE		= SH2.VENDOR_ID
																	 AND AH.ADVM_EXCT_STAT_CD  = '10'
							LEFT  JOIN BSA300T	   USR WITH(NOLOCK) ON USR.COMP_CODE		 = SH2.COMP_CODE
																	 AND USR.USER_ID		   = SH2.INSERT_DB_USER
							LEFT  JOIN HUM100T	   EMP WITH(NOLOCK) ON EMP.COMP_CODE		 = USR.COMP_CODE
																	 AND EMP.PERSON_NUMB	   = USR.PERSON_NUMB

					WHERE SH2.COMP_CODE = #{S_COMP_CODE}

			  ) TOT

		WHERE 1=1
		<if test="@foren.Ognl@isNotEmpty(ADVM_REQ_SLIP_NO)">
			AND (ADVM_REQ_SLIP_NO LIKE '%'+#{ADVM_REQ_SLIP_NO}+'%')
		</if>
		) RST

	</select>

	<select id="popupServiceImpl.comAba210Popup" parameterType="Map" resultType="rMap">
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT AC_CD
				 , AC_DATA  				AS COM_ABA210_CODE
				 , AC_NAME   				AS COM_ABA210_NAME
				 , ISNULL(REF_CODE1, '')	AS REF_CODE1
				 , ISNULL(REF_CODE2, '')	AS REF_CODE2
			  FROM ABA210T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND AC_CD		= #{SUB_CODE}

			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		 		AND (AC_DATA LIKE #{TXT_SEARCH} + '%'
			 	OR AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
			 </if>
			 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
				<if test="@foren.Ognl@isNotEmpty(COM_ABA210_CODE)">
				AND (AC_DATA LIKE #{COM_ABA210_CODE} + '%'
			 	OR AC_NAME LIKE '%'+ #{COM_ABA210_CODE} + '%' )
				</if>
				<if test="@foren.Ognl@isNotEmpty(COM_ABA210_NAME)">
				AND (AC_DATA LIKE #{COM_ABA210_NAME} + '%'
			 	OR AC_NAME LIKE '%'+ #{COM_ABA210_NAME} + '%' )
				</if>
			 </if>
			 ORDER BY AC_CD, AC_DATA

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">	/* 예산과목명(CODE_NAME) */
		BEGIN
		DECLARE		 @COMP_CODE		  NVARCHAR(08)

	--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
		SET @COMP_CODE  = #{S_COMP_CODE}

	--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
		SELECT  CODE_NAME
		FROM	uniLITE.fnGetBudgLevelName(@COMP_CODE, '')
	END
	</select>

	<select id="popupServiceImpl.comAba900Popup" parameterType="Map" resultType="rMap"> /* 미결항목*/
		BEGIN
			SET ARITHABORT ON
			SET NOCOUNT ON

			SELECT ACCNT			  AS ORG_ACCNT
				 , A.ACCNT_NAME		  AS ORG_ACCNT_NAME
				 , ORG_AC_DATE
				 , ORG_SLIP_NUM
				 , ORG_SLIP_SEQ
				 , PEND_CODE

				 , PEND_NAME
				 , PEND_DATA_CODE
				 , PEND_DATA_NAME
				 , ORG_AMT_I
				 , BLN_I
				 , DEPT_CODE
				 , DEPT_NAME
			  FROM (
					SELECT A.ACCNT
						 , F.ACCNT_NAME ACCNT_NAME
						 , CASE WHEN LEN(ISNULL(A.ORG_AC_DATE, '')) = 8 THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE)
								WHEN LEN(ISNULL(A.ORG_AC_DATE, '')) = 6 THEN UNILITE.fnGetUserTypeDate(A.COMP_CODE, A.ORG_AC_DATE, 'M')
								ELSE ''
							END AS ORG_AC_DATE
						 , A.ORG_SLIP_NUM
						 , A.ORG_SLIP_SEQ
						 , A.PEND_CODE
						 , ISNULL(D.AC_NAME,'') PEND_NAME
						 , A.PEND_DATA_CODE
						 , ISNULL(N3.AC_NAME, '') PEND_DATA_NAME
						 , A.ORG_AMT_I
						 , ISNULL(A.ORG_AMT_I,0) - ISNULL(A.J_AMT_I,0) BLN_I
						 , A.DEPT_CODE
						 , A.DEPT_NAME
					  FROM		 AGB300T  AS A  WITH (NOLOCK)
						INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
																AND B.DIV_CODE   = A.DIV_CODE
						INNER JOIN AGJ210T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
																AND C.AC_DATE	= A.ORG_AC_DATE
																AND C.SLIP_NUM   = A.ORG_SLIP_NUM
																AND C.SLIP_SEQ   = A.ORG_SLIP_SEQ
																AND C.ACCNT	  = A.ACCNT
																AND ISNULL(C.MOD_DIVI,'')=''
						LEFT  JOIN (SELECT  COMP_CODE
										 ,  ORG_AC_DATE
										 ,  ORG_SLIP_NUM
										 ,  ORG_SLIP_SEQ
										 ,  ACCNT
										 ,  SUM(ISNULL(J_AMT_I	, 0)) AS J_AMT_I
										 ,  SUM(ISNULL(FOR_J_AMT_I, 0)) AS FOR_J_AMT_I
									FROM	AGB320T WITH (NOLOCK)
									WHERE   COMP_CODE		   = #{S_COMP_CODE}
									AND	 ISNULL(J_AC_DATE,'')= ''
									GROUP BY COMP_CODE, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ, ACCNT
								   )		AS G				ON  G.COMP_CODE	= A.COMP_CODE
																AND G.ORG_AC_DATE  = A.ORG_AC_DATE
																AND G.ORG_SLIP_NUM = A.ORG_SLIP_NUM
																AND G.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ
																AND G.ACCNT		= A.ACCNT
						LEFT JOIN ABA200T  AS D  WITH (NOLOCK) ON  D.COMP_CODE	= A.COMP_CODE
																AND D.AC_CD		= A.PEND_CODE
						INNER JOIN ABA400T  AS F  WITH (NOLOCK) ON  F.COMP_CODE	= A.COMP_CODE
																AND F.ACCNT		= A.ACCNT
						LEFT  JOIN ABA200TV AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
																AND N3.AC_CODE	 = A.PEND_CODE
																AND N3.AC_DATA	 = A.PEND_DATA_CODE
						LEFT JOIN BSA100T   AS Z1 WITH (NOLOCK) ON  Z1.COMP_CODE   = C.COMP_CODE
																AND Z1.MAIN_CODE   = 'A009'
																AND Z1.REF_CODE1   = C.INPUT_USER_ID
					 WHERE A.COMP_CODE	= #{S_COMP_CODE}
					   AND LEN(A.ORG_AC_DATE) != 6
					   AND (ISNULL(A.FOR_BLN_I,0) != 0 OR ISNULL(A.BLN_I,0) != 0)

					<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
						 AND A.ACCNT LIKE '%'+ #{ACCNT_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
						 AND F.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%'
					</if>

					<if test="@foren.Ognl@isNotEmpty(AC_DATE_FR)">
						 AND A.ORG_AC_DATE &gt;= #{AC_DATE_FR}
					</if>
					<if test="@foren.Ognl@isNotEmpty(AC_DATE_TO)">
						AND A.ORG_AC_DATE &lt;= #{AC_DATE_TO}
					</if>


					<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
						AND  C.IN_DEPT_CODE LIKE  '%' + #{DEPT_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
						AND  C.IN_DEPT_NAME LIKE  '%' + #{DEPT_NAME} + '%'
					</if>

			 UNION

					SELECT A.ACCNT
						 , F.ACCNT_NAME ACCNT_NAME
						 , CASE WHEN LEN(ISNULL(A.ORG_AC_DATE, '')) = 8 THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE)
								WHEN LEN(ISNULL(A.ORG_AC_DATE, '')) = 6 THEN UNILITE.fnGetUserTypeDate(A.COMP_CODE, A.ORG_AC_DATE, 'M')
								ELSE ''
							END AS ORG_AC_DATE
						 , A.ORG_SLIP_NUM
						 , A.ORG_SLIP_SEQ
						 , A.PEND_CODE
						 , ISNULL(D.AC_NAME,'') PEND_NAME
						 , A.PEND_DATA_CODE
						 , ISNULL(N3.AC_NAME, '') PEND_DATA_NAME
						 , A.ORG_AMT_I
						 , ISNULL(A.ORG_AMT_I,0) - ISNULL(A.J_AMT_I,0) BLN_I
						 , A.DEPT_CODE
						 , A.DEPT_NAME
					  FROM		 AGB300T  AS A  WITH (NOLOCK)
						INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE	= A.COMP_CODE
																AND B.DIV_CODE	 = A.DIV_CODE
						INNER JOIN AGB200T  AS C  WITH (NOLOCK) ON  C.COMP_cODE	= A.COMP_CODE
																AND C.AC_DATE	  = A.ORG_AC_DATE
																AND C.ACCNT		= A.ACCNT
																AND C.DEPT_CODE	= A.DEPT_CODE
																AND ((C.BOOK_CODE1 = A.PEND_CODE AND
																	  C.BOOK_DATA1 = A.PEND_DATA_CODE)
																OR   (C.BOOK_CODE2 = A.PEND_CODE AND
																	  C.BOOK_DATA2 = A.PEND_DATA_CODE))
						LEFT  JOIN (SELECT  COMP_CODE
										 ,  ORG_AC_DATE
										 ,  ORG_SLIP_NUM
										 ,  ORG_SLIP_SEQ
										 ,  ACCNT
										 ,  SUM(ISNULL(J_AMT_I	, 0)) AS J_AMT_I
										 ,  SUM(ISNULL(FOR_J_AMT_I, 0)) AS FOR_J_AMT_I
									FROM	AGB320T WITH (NOLOCK)
									WHERE   COMP_CODE		   = #{S_COMP_CODE}
									AND	 ISNULL(J_AC_DATE,'')= ''
									GROUP BY COMP_CODE, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ, ACCNT
								   )		AS G				ON  G.COMP_CODE	  = A.COMP_CODE
																AND G.ORG_AC_DATE	= A.ORG_AC_DATE
																AND G.ORG_SLIP_NUM   = A.ORG_SLIP_NUM
																AND G.ORG_SLIP_SEQ   = A.ORG_SLIP_SEQ
																AND G.ACCNT		  = A.ACCNT
						LEFT JOIN ABA200T  AS D  WITH (NOLOCK) ON  D.COMP_CODE	= A.COMP_CODE
																AND D.AC_CD		= A.PEND_CODE
						INNER JOIN ABA400T  AS F  WITH (NOLOCK) ON  F.COMP_CODE	= A.COMP_CODE
																AND F.ACCNT		= A.ACCNT
						LEFT  JOIN BCM100T  AS N1 WITH (NOLOCK) ON  N1.COMP_cODE   = C.COMP_CODE
																AND N1.CUSTOM_CODE = C.BOOK_DATA1
						LEFT  JOIN BCM100T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = C.COMP_CODE
																AND N2.CUSTOM_CODE = C.BOOK_DATA2
						LEFT  JOIN ABA200TV AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
																AND N3.AC_CODE	 = A.PEND_CODE
																AND N3.AC_DATA	 = A.PEND_DATA_CODE
						LEFT  JOIN ABA200TV AS N4 WITH (NOLOCK) ON  N4.COMP_CODE   = C.COMP_CODE
																AND N4.AC_CODE	 = C.BOOK_CODE1
																AND N4.AC_DATA	 = C.BOOK_DATA1
						LEFT  JOIN ABA200TV AS N5 WITH (NOLOCK) ON  N5.COMP_CODE   = C.COMP_CODE
																AND N5.AC_CODE	 = C.BOOK_CODE2
																AND N5.AC_DATA	 = C.BOOK_DATA2
					 WHERE A.COMP_CODE		  = #{S_COMP_CODE}
					   AND LEN(A.ORG_AC_DATE)   = 6
					   AND (ISNULL(A.FOR_BLN_I,0) != 0 OR ISNULL(A.BLN_I,0) != 0)

					<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
						AND A.ACCNT LIKE '%'+#{ACCNT_CODE}+'%'
					</if>
					<if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
						AND F.ACCNT_NAME LIKE '%'+#{ACCNT_NAME}+'%'
					</if>

					<if test="@foren.Ognl@isNotEmpty(AC_DATE_FR)">
						AND A.ORG_AC_DATE &gt;= #{AC_DATE_FR}
					</if>
					<if test="@foren.Ognl@isNotEmpty(AC_DATE_TO)">
						AND A.ORG_AC_DATE &lt;= #{AC_DATE_TO}
					</if>

					) A

	   INNER JOIN ( SELECT  ISNULL(A.ACCNT	   ,'')						   AS ACCNT_CODE
						  , CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
								 WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
							END												 AS ACCNT_CD
						  , ISNULL(B.ACCNT_NAME  ,'')						   AS ACCNT_CD_NAME
						  , ISNULL(A.ACCNT_NAME  ,'')						   AS ACCNT_NAME
						  , ISNULL(A.AC_FULL_NAME,'')						   AS AC_FULL_NAME
					FROM				ABA400T   A WITH (NOLOCK)
							LEFT  JOIN  (
										SELECT  COMP_CODE
											  , ACCNT
											  , ACCNT_NAME
										FROM	ABA400T WITH (NOLOCK)
										)		 B			   ON B.COMP_CODE	= A.COMP_CODE
																 AND B.ACCNT		= (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
																							WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
																					   END)



					WHERE   A.COMP_CODE	  = #{S_COMP_CODE}
					  AND   A.ACCNT != '99999'
					  AND   SLIP_SW = 'Y' AND PROFIT_DIVI = 'A' AND GROUP_YN = 'N'	) Z ON Z.ACCNT_CODE = A.ACCNT

					WHERE 1=1
					<!--
					<if test="@foren.Ognl@isNotEmpty(PEND_DATA_CODE)">
					AND  A.PEND_DATA_CODE LIKE '%' + #{PEND_DATA_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isNotEmpty(PEND_DATA_NAME)">
					AND  A.PEND_DATA_NAME LIKE  '%' + #{PEND_DATA_NAME} + '%'
					</if>
					-->

			 ORDER BY A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ

			SET ARITHABORT OFF
			SET NOCOUNT OFF
		END
	</select>

	<select id="popupServiceImpl.claimPopup" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	NVARCHAR(08) /* 법인코드	*/
				  , @UserId	  NVARCHAR(100) /* 사용자ID	*/
				  , @LangType	NVARCHAR(2)  /* 언어구분	*/
				  , @RefItem	 NVARCHAR(01) /* 명칭 참조 유형  */
				  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			/* 데이터 조회 */
			SELECT A.DIV_CODE			   AS DIV_CODE
				 , A.CUSTOM_CODE			AS CUSTOM_CODE
				 , B.CUSTOM_NAME			AS CUSTOM_NAME
				 , A.CLAIM_NO			   AS CLAIM_NO
				 , A.CLAIM_DATE			 AS CLAIM_DATE
			  FROM	  S_SCL900T_KD	A WITH (NOLOCK)
			  LEFT JOIN BCM100T	  AS B WITH (NOLOCK) ON B.COMP_CODE	  = A.COMP_CODE
													   AND B.CUSTOM_CODE	= A.CUSTOM_CODE
			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			   AND A.DIV_CODE	   = #{DIV_CODE}
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND A.CUSTOM_CODE	= #{CUSTOM_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CLAIM_DATE)">
			   AND A.CLAIM_DATE	 = #{CLAIM_DATE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			  AND  A.CLAIM_NO	   LIKE #{TXT_SEARCH} + '%'
			 </if>
			 ORDER BY A.CLAIM_DATE

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.entryNumPopup1" parameterType="Map" resultType="rMap">
		--popupServiceImpl.entryNumPopup1
		--관리코드팝업
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			/* 데이터 조회 */
			SELECT  A.COMP_CODE
				 ,  A.DIV_CODE
				 ,  A.ENTRY_NUM
				 ,  A.ENTRY_DATE
				 ,  A.DEPT_CODE
				 ,  B.TREE_NAME AS DEPT_NAME
				 ,  A.OEM_ITEM_CODE
				 ,  A.ITEM_NAME
				 ,  A.MAKE_QTY
				 ,  CASE WHEN A.MAKE_END_YN = N'Y'
						 THEN N'예'
						 ELSE N'아니오'
					END AS MAKE_END_YN
				 ,  A.CUSTOM_CODE
				 ,  C.CUSTOM_NAME
			FROM			   S_ZCC600T_KD AS A WITH (NOLOCK)
					LEFT  JOIN BSA210T	  AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
															  AND B.TREE_CODE   = A.DEPT_CODE
					LEFT  JOIN BCM100T	  AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
															  AND C.CUSTOM_CODE = A.CUSTOM_CODE
			WHERE   A.COMP_CODE		 = #{S_COMP_CODE}
			AND	 A.DIV_CODE		  = #{DIV_CODE}
			AND	 A.ENTRY_DATE	   &gt;= #{FR_DATE}
			AND	 A.ENTRY_DATE	   &lt;= #{TO_DATE}
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND	 A.OEM_ITEM_CODE  LIKE #{OEM_ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(PLAN_NUM)">
			AND	 A.ENTRY_NUM	  LIKE #{ENTRY_NUM} + '%'
			</if>

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.entryNumPopup2" parameterType="Map" resultType="rMap">
		--popupServiceImpl.entryNumPopup2
		--관리코드팝업
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			/* 데이터 조회 */
			SELECT  A.COMP_CODE
				 ,  A.DIV_CODE
				 ,  A.ENTRY_NUM
				 ,  A.ENTRY_DATE
				 ,  A.DEPT_CODE
				 ,  B.TREE_NAME AS DEPT_NAME
				 ,  A.OEM_ITEM_CODE
				 ,  A.ITEM_NAME
				 ,  A.MAKE_QTY
				 ,  CASE WHEN A.MAKE_END_YN = N'Y'
						 THEN N'예'
						 ELSE N'아니오'
					END AS MAKE_END_YN
				 ,  A.CUSTOM_CODE
				 ,  C.CUSTOM_NAME
			FROM			   S_ZCC700T_KD AS A WITH (NOLOCK)
					LEFT  JOIN BSA210T	  AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
															  AND B.TREE_CODE   = A.DEPT_CODE
					LEFT  JOIN BCM100T	  AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
															  AND C.CUSTOM_CODE = A.CUSTOM_CODE
			WHERE   A.COMP_CODE		 = #{S_COMP_CODE}
			AND	 A.DIV_CODE		  = #{DIV_CODE}
			AND	 A.ENTRY_DATE	   &gt;= #{FR_DATE}
			AND	 A.ENTRY_DATE	   &lt;= #{TO_DATE}
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND	 A.OEM_ITEM_CODE  LIKE #{OEM_ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(PLAN_NUM)">
			AND	 A.ENTRY_NUM	  LIKE #{ENTRY_NUM} + '%'
			</if>

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
	<select id="popupServiceImpl.equCodePopup" parameterType="Map" resultType="rMap">
		SELECT A.EQU_CODE_TYPE
		,A.EQU_CODE
		,A.EQU_NAME
		,A.EQU_SPEC
		,A.CUSTOM_CODE
		, uniLITE.fnCustName('unilite5', A.CUSTOM_CODE) as CUSTOM_NAME
		,A.PRODT_DATE
		,A.PRODT_O
		,A.ASSETS_NO
		,(
			SELECT X.CODE_NAME FROM BSA100T X
			WHERE X.MAIN_CODE='I801'
				AND X.SUB_CODE=A.EQU_GRADE
			)  AS EQU_GRADE
		FROM EQU200T A WITH(NOLOCK)
		LEFT JOIN BCM100T B WITH(NOLOCK)
			ON B.COMP_CODE=A.COMP_CODE
			AND B.CUSTOM_CODE=A.CUSTOM_CODE
		WHERE A.COMP_CODE=#{S_COMP_CODE}
			AND A.DIV_CODE=#{DIV_CODE}

			<if test="@foren.Ognl@isNotEmpty(EQU_CODE_TYPE)">
			   AND A.EQU_CODE_TYPE = #{EQU_CODE_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EQU_CODE)">
			AND A.EQU_CODE LIKE #{EQU_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(EQU_NAME)">
			AND A.EQU_NAME LIKE #{EQU_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_DATE)">
			AND A.PRODT_DATE >=#{FR_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_DATE)">
			AND A.PRODT_DATE &lt;=#{TO_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND B.CUSTOM_NAME LIKE #{CUSTOM_NAME}+'%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(EQU_GRADE)">
			AND A.EQU_GRADE=#{EQU_GRADE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ASSETS_NO)">
			AND A.ASSETS_NO=#{ASSETS_NO}
			</if>

	</select>

	<select id="popupServiceImpl.equMachCodePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.equMachCodePopup 설비 */
		SELECT
		 A.COMP_CODE
		 ,A.DIV_CODE
		 ,A.EQU_CODE_TYPE
		 ,R1.CODE_NAME AS EQU_CODE_TYPE_NAME	--장비구분
		 ,A.EQU_CODE	AS EQU_MACH_CODE	--설비코드
		 ,A.EQU_NAME	AS EQU_MACH_NAME	--설비명
		 ,A.EQU_SPEC		--설비규격
		 ,A.CUSTOM_CODE		--제작처코드
		 ,R2.CUSTOM_NAME	--제작처
		 ,A.PRODT_DATE		--제작일
		 ,A.PRODT_O			--제작금액
		 ,A.WORK_SHOP_CODE	--작업장
		 ,A.PROG_WORK_CODE	--공정코드
		FROM EQU200T A WITH(NOLOCK)
		LEFT JOIN BSA100T R1 ON R1.COMP_CODE = A.COMP_CODE
							AND R1.MAIN_CODE = 'I800'
							AND R1.SUB_CODE != '$'
							AND R1.SUB_CODE = A.EQU_CODE_TYPE
		LEFT JOIN BCM100T R2 ON R2.COMP_CODE = A.COMP_CODE
							AND R2.CUSTOM_CODE = A.CUSTOM_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{DIV_CODE}
		  AND A.EQU_CODE_TYPE = '2'
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (A.EQU_CODE LIKE #{TXT_SEARCH} + '%'
			OR A.EQU_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(EQU_MACH_CODE)">
			AND (A.EQU_CODE LIKE #{EQU_MACH_CODE} + '%'
			OR A.EQU_NAME LIKE '%'+ #{EQU_MACH_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(EQU_MACH_NAME)">
			AND (A.EQU_CODE LIKE #{EQU_MACH_NAME} + '%'
			OR A.EQU_NAME LIKE '%'+ #{EQU_MACH_NAME} + '%' )
			</if>
		 </if>

	</select>

<select id="popupServiceImpl.coreCodePopup" parameterType="Map" resultType="rMap">
	SELECT
		COMP_CODE
		,DIV_CODE
		,CORE_CODE
		,MODEL_CODE
		,CORE_NAME
		,CORE_SPEC
		,PRODT_TYPE
		,PRODT_MTRL
		,CAVITY_Q
	 FROM EQU220T
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	   AND (CORE_CODE LIKE '%'+ #{TXT_SEARCH} + '%'
	    OR CORE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
	</if>
	<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
	<if test="@foren.Ognl@isNotEmpty(CORE_CODE)">
	   AND (CORE_CODE LIKE '%'+ #{CORE_CODE} + '%'
	    OR CORE_NAME LIKE '%'+ #{CORE_CODE} + '%' )
	</if>
	<if test="@foren.Ognl@isNotEmpty(CORE_NAME)">
	   AND (CORE_CODE LIKE '%'+ #{CORE_NAME} + '%'
	    OR CORE_NAME LIKE '%'+ #{CORE_NAME} + '%' )
	</if>
	</if>
	<if test="@foren.Ognl@isNotEmpty(PRODT_TYPE)">
	   AND PRODT_TYPE = #{PRODT_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(MODEL_CODE)">
	   AND MODEL_CODE = #{MODEL_CODE}
	</if>
</select>
	<select id="popupServiceImpl.equMoldCodePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.equMoldCodePopup 금형 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.EQU_CODE_TYPE
		     , R1.CODE_NAME           AS EQU_CODE_TYPE_NAME --장비구분
		     , A.EQU_CODE             AS EQU_MOLD_CODE      --금형코드
		     , A.EQU_NAME             AS EQU_MOLD_NAME      --금형명
		     , A.EQU_SPEC             --금형규격
		     , A.CUSTOM_CODE          --제작처코드
		     , R2.CUSTOM_NAME         --제작처
		     , A.PRODT_DATE           --제작일
		     , A.PRODT_O              --제작금액
		     , A.CAVIT_BASE_Q
		     , ISNULL(A.CYCLE_TIME,1) AS CYCLE_TIME
<!-- 20201111 추가: 조회데이터 EQU_TYPE 추가 -->
		     , A.EQU_TYPE
		  FROM EQU200T A WITH(NOLOCK)
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		  LEFT JOIN EQU210T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.DIV_CODE = B.DIV_CODE AND A.EQU_CODE = B.EQU_CODE AND A.EQU_CODE_TYPE = '1'
		</if>
		  LEFT JOIN BSA100T R1 ON R1.COMP_CODE   = A.COMP_CODE
		                      AND R1.MAIN_CODE   = 'I800'
		                      AND R1.SUB_CODE   != '$'
		                      AND R1.SUB_CODE    = A.EQU_CODE_TYPE
		  LEFT JOIN BCM100T R2 ON R2.COMP_CODE   = A.COMP_CODE
		                      AND R2.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.EQU_CODE_TYPE = '1'
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.EQU_CODE LIKE #{TXT_SEARCH} + '%'
		    OR A.EQU_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		</if>
	<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
		<if test="@foren.Ognl@isNotEmpty(EQU_MOLD_CODE)">
		   AND (A.EQU_CODE LIKE #{EQU_MOLD_CODE} + '%'
		    OR A.EQU_NAME LIKE '%'+ #{EQU_MOLD_CODE} + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(EQU_MOLD_NAME)">
		   AND (A.EQU_CODE LIKE #{EQU_MOLD_NAME} + '%'
		    OR A.EQU_NAME LIKE '%'+ #{EQU_MOLD_NAME} + '%' )
		</if>
	</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND B.ITEM_CODE = #{ITEM_CODE}
		</if>
<!-- 20201111 추가: 조회조건 EQU_TYPE 추가 -->
		<if test="@foren.Ognl@isNotEmpty(EQU_TYPE)">
		   AND A.EQU_TYPE = #{EQU_TYPE}
		</if>
	</select>

	<select id="popupServiceImpl.treeCodePopup" parameterType="Map" resultType="rMap">
		DECLARE	 @COMP_CODE	  NVARCHAR(08)	/* (필수) 법인코드	  */
				  , @TREE_CODE	  NVARCHAR(08)	/* (선택) 작업장코드   */
				  , @TREE_NAME	  NVARCHAR(30)	/* (선택) 작업장명	  */
				  , @USER_ID		NVARCHAR(100)	/* (필수) 사용자ID  */

		SET	 @COMP_CODE	  = ISNULL(#{S_COMP_CODE}, '')
		SET	 @TREE_CODE	  = #{TREE_CODE}
		SET	 @TREE_NAME	  = #{TREE_NAME}
		SET	 @USER_ID		= ISNULL(#{S_USER_ID}, '')

		SELECT
		A.TREE_CODE
		,A.TREE_NAME
		,A.SPEC
		,A.BASE_P
		,A.USE_YN
		,A.REMARK
		FROM MRO010T A WITH(NOLOCK)
		WHERE A.COMP_CODE=#{S_COMP_CODE}
			AND	A.USE_YN		  = 'Y'
		<if test="RDO == 1">
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	A.TREE_CODE 	  LIKE #{TXT_SEARCH} + '%'
			</if>
		</if>
		<if test="RDO == 2">
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	A.TREE_NAME 	  LIKE #{TXT_SEARCH} + '%'
			</if>
		</if>
		AND	((A.TREE_CODE  LIKE @TREE_CODE + '%' AND @TREE_CODE IS NOT NULL) OR (@TREE_CODE IS NULL))
		AND	((A.TREE_NAME  LIKE @TREE_NAME + '%' AND @TREE_NAME IS NOT NULL) OR (@TREE_NAME IS NULL))

		ORDER BY  A.TREE_CODE
	</select>
	<select id="popupServiceImpl.asNumPopup" parameterType="Map" resultType="rMap">
		DECLARE	 @COMP_CODE	  NVARCHAR(08)	/* (필수) 법인코드	  */
				  , @AS_NUM		NVARCHAR(08)	/* (선택) 작업장코드   */
				  , @USER_ID		NVARCHAR(100)	/* (필수) 사용자ID  */

		SET	 @COMP_CODE	  = ISNULL(#{S_COMP_CODE}, '')
		SET	 @AS_NUM		= #{AS_NUM}
		SET	 @USER_ID		= ISNULL(#{S_USER_ID}, '')

		SELECT
				  A.AS_NUM					AS AS_NUM
				, A.ACCEPT_DATE				AS ACCEPT_DATE
				, A.ACCEPT_PRSN				AS ACCEPT_PRSN
				, A.AS_CUSTOMER_NM
				, E.CODE_NAME				AS ACCEPT_GUBUN
				, F.CODE_NAME				AS FINISH_YN
				, A.ORDER_NUM
				, A.AS_CUSTOMER_CD
				, D.CUSTOM_NAME 			AS AS_CUSTOMER_NAME
			FROM  EAS100T A WITH(NOLOCK)
				LEFT JOIN SOF100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												AND B.DIV_CODE	= A.DIV_CODE
									            AND B.ORDER_NUM = A.ORDER_NUM
				LEFT JOIN BCM600T C WITH(NOLOCK) ON C.COMP_CODE	= B.COMP_CODE
									            AND C.PJT_CODE	= B.PROJECT_NO
				LEFT JOIN BCM100T D WITH(NOLOCK) ON D.COMP_CODE	= B.COMP_CODE
									            AND D.CUSTOM_CODE	= B.CUSTOM_CODE
			    LEFT JOIN BSA100T E WITH(NOLOCK) ON E.COMP_CODE	= A.COMP_CODE
									            AND E.MAIN_CODE = 'S801'
												AND E.SUB_CODE  = ISNULL(A.ACCEPT_GUBUN, 'C')
				LEFT JOIN BSA100T F WITH(NOLOCK) ON F.COMP_CODE	= A.COMP_CODE
									            AND F.MAIN_CODE = 'B046'
												AND F.SUB_CODE  = ISNULL(A.FINISH_YN, 'N')
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(FR_DATE)">
		  AND A.ACCEPT_DATE	>= #{FR_DATE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(TO_DATE)">
		  AND A.ACCEPT_DATE	&lt;= #{TO_DATE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(AS_NUM)">
		  AND A.AS_NUM	LIKE #{AS_NUM} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		  AND A.ORDER_NUM	= #{ORDER_NUM}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ACCEPT_PRSN)">
		  AND A.ACCEPT_PRSN	= #{ACCEPT_PRSN}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ACCEPT_GUBUN)">
		  AND A.ACCEPT_GUBUN	= #{ACCEPT_GUBUN}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(FINISH_YN)">
		  AND A.FINISH_YN	= #{FINISH_YN}
		 </if>


		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	 		AND A.AS_NUM LIKE #{TXT_SEARCH} + '%'
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(AS_NUM)">
			AND A.AS_NUM	LIKE #{AS_NUM} + '%'
			</if>
		 </if>
		ORDER BY  A.AS_NUM
	</select>



	<!-- SMS 전송 데이터 조회(뿌리오) -->
	<select id="popupServiceImpl.selectSendPhon" parameterType="Map" resultType="String">
		BEGIN
		--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
			SELECT A.CODE_NAME	AS SEND_PHON
			  FROM BSA100T A WITH(NOLOCK)
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			   AND A.MAIN_CODE	= 'B609'
			   AND A.REF_CODE1	= 'Y'
		END
	</select>
	<select id="popupServiceImpl.selectSMSData" parameterType="Map" resultType="rMap">
		BEGIN
		--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
			SELECT A.COMP_CODE
				 , A.CUSTOM_CODE
				 , A.CUSTOM_NAME
				 , A.HAND_PHON				AS SMS_MOBIL
			  FROM BCM100T A WITH(NOLOCK)
			 WHERE A.COMP_CODE		= #{S_COMP_CODE}
			   AND A.CUSTOM_CODE   != '*'
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
			   AND (A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
				   OR A.CUSTOM_NAME LIKE #{CUSTOM_CODE} + '%')
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
			   AND (A.CUSTOM_CODE LIKE #{CUSTOM_NAME} + '%'
				   OR A.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%')
			</if>
			 <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			   AND A.AGENT_TYPE 	= #{AGENT_TYPE}
			 </if>
		END
	</select>
	<!-- SMS 전송 (뿌리오) -->
	<insert id="popupServiceImpl.insertSMSMsg" parameterType="Map">
		--전송자 번호 SELECT
		DECLARE @SEND_NUM NVARCHAR(13)		--전송자 번호
			  , @DEST_NUM NVARCHAR(13)		--수신자 번호

			SET @SEND_NUM = #{SEND_PHONE}
			SET @DEST_NUM = #{SMS_MOBIL}

		--SMS 테이블에 INSERT
		INSERT INTO BIZ_MSG (
				MSG_TYPE			--데이터 타입 (SMS:0, FAX:2, PHONE:3, MMS:5, AT:6, FT:7)
			  , CMID				--데이터 ID, MSG_TABLE일 경우 Primary Key
			  , DEST_PHONE			--수신자 번호
			  , SEND_PHONE			--전송자 번호
			  , [SUBJECT]			--제목
			  , MSG_BODY			--메시지 내용
			  , REQUEST_TIME		--데이터 등록 시간
			  , SEND_TIME			--발송 기준 시간
		) VALUES (
				#{MSG_TYPE}
			  , #{KEY_VALUE}
			  , REPLACE(@DEST_NUM, '-', '')
			  , REPLACE(@SEND_NUM, '-', '')
			  , #{SUBJECT}
			  , #{SMS_DESC}
			  , GETDATE()
			  , GETDATE()
		)
	</insert>

    <select id="popupServiceImpl.mRegNumPopup" parameterType="Map" resultType="rMap">
        --popupServiceImpl.mRegNumPopup
        --모니터정보 팝업
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @DIV_CODE       NVARCHAR(08)

            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}

            SELECT  A.COMP_CODE
                 ,  A.DIV_CODE
                 ,  A.EQDOC_CODE		--장비대장번호
                 ,  A.MGM_DEPT_CODE -- 관리부서
                 ,  B.CODE_NAME         AS MGM_DEPT_NAME -- 관리부서
				 ,  A.INS_DEPT_CODE		--설치부서
                 ,  C.CODE_NAME         AS INS_DEPT_NAME -- 설치부서
                 ,  A.BUY_DATE	--구입일
                 ,  A.ITEM_NAME --제품명
				 ,  A.EQDOC_SPEC --규격
                 ,  A.MAKE_COMP --제조업체
                 ,  A.MODEL_NO -- 모델명
                 ,  A.SERIAL_NO--시리얼NO
				 ,  A.REMARK -- 비고
                 ,  A.EQDOC_TYPE
                 ,  A.M_REG_NUM
            FROM               S_ZEE200T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN BSA100T      AS B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                              AND B.MAIN_CODE = 'WZ35'
                                                              AND B.SUB_CODE = A.MGM_DEPT_CODE
                    LEFT  JOIN BSA100T      AS C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                              AND C.MAIN_CODE = 'WZ36'
                                                              AND C.SUB_CODE = A.INS_DEPT_CODE
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.DIV_CODE      = @DIV_CODE
            AND     A.EQDOC_TYPE    = N'6'
            <if test="@foren.Ognl@isNotEmpty(EQDOC_SPEC)">
            AND     A.EQDOC_SPEC LIKE '%' + #{EQDOC_SPEC} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(MODEL_NO)">
            AND     A.MODEL_NO LIKE '%' + #{MODEL_NO} + '%'
            </if>

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="popupServiceImpl.swCodePopup" parameterType="Map" resultType="rMap">
    	SELECT A.SUB_CODE      AS MAIN_CODE
             , A.CODE_NAME      AS MAIN_NAME
             , B1.SUB_CODE      AS SW_CODE
             , B1.CODE_NAME     AS SW_NAME
          FROM BSA100T A WITH(NOLOCK)
               LEFT  JOIN (SELECT A.MAIN_CODE, A.SUB_CODE, A.CODE_NAME
                             FROM BSA100T A WITH(NOLOCK)
                            WHERE A.MAIN_CODE IN ('WZ13', 'WZ14','WZ15','WZ16','WZ17','WZ18','WZ19')
                              AND A.SUB_CODE != '$'
                          ) B1
              ON A.SUB_CODE = B1.MAIN_CODE
         WHERE A.MAIN_CODE  = 'WZ20'
           AND A.SUB_CODE   != '$'
         <if test="@foren.Ognl@isNotEmpty(MAIN_CODE)">
           AND B1.MAIN_CODE = #{MAIN_CODE}
         </if>
    </select>




	<!-- 농가별 입고정보 -->
	<select id="popupServiceImpl.farmInout" parameterType="Map" resultType="rMap">
		BEGIN
		--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
			SELECT A.CUSTOM_CODE			AS CUSTOM_CODE
				 , A.CUSTOM_NAME			AS CUSTOM_NAME
				 , B.FARM_CODE				AS FARM_CODE
				 , B.FARM_NAME				AS FARM_NAME
				 , B.ITEM_NAME				AS ITEM_NAME
				 , CASE WHEN ISNULL(B.CERT_TYPE, '0') = '' THEN '0'
				 		ELSE ISNULL(B.CERT_TYPE, '0')
				 	END	AS CERT_TYPE
				 , #{ORDER_UNIT}			AS ORDER_UNIT
				 , B.ORIGIN
				 , B.CERT_NO
			  FROM		BCM100T A WITH(NOLOCK)
			 INNER JOIN S_BCM106T_YP B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
												   AND B.CUSTOM_CODE	= A.CUSTOM_CODE
			 WHERE A.COMP_CODE		= #{S_COMP_CODE}
			   AND A.CUSTOM_CODE	= #{CUSTOM_CODE}
			 <if test="@foren.Ognl@isNotEmpty(FARM_CODE)">
			   AND B.FARM_CODE		like #{FARM_CODE} + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(FARM_NAME)">
			   AND B.FARM_NAME		like #{FARM_NAME} + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(WONSANGI_NUM)">
               AND B.ORIGIN         like '%' + #{WONSANGI_NUM} + '%'
             </if>
		END
	</select>



	<select id="popupServiceImpl.divPumok_YP" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.divPumok_YP */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , A.OEM_ITEM_CODE
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.LOT_YN
				 , A.OEM_ITEM_CODE
				 , A.INSPEC_YN
				 , A.CAR_TYPE
			  FROM BPR200TV A
	 		<if test="RDO != &quot;2&quot;">
	 		  INNER JOIN BPR400T B WITH(NOLOCK) ON B.COMP_CODE			= A.COMP_CODE
	 										   AND B.TYPE				= '2'
	 										   AND B.DIV_CODE			= A.DIV_CODE
	 										   AND B.ITEM_CODE			= A.ITEM_CODE
	 										   AND B.CUSTOM_CODE		= #{CUSTOM_CODE}
	 										   AND B.APLY_START_DATE	= (SELECT MAX(X.APLY_START_DATE)
                                                                         FROM BPR400T X WITH(NOLOCK)
                                                                        WHERE X.COMP_CODE   = B.COMP_CODE
                                                                          AND X.DIV_CODE    = B.DIV_CODE
                                                                          AND X.TYPE        = '2'
                                                                          AND X.CUSTOM_CODE = B.CUSTOM_CODE
                                                                          AND X.ITEM_CODE   = B.ITEM_CODE
                                                                          AND X.ORDER_UNIT  = B.ORDER_UNIT
	 		<if test="PGM_ID != &quot;S_SOF101UKRV&quot;">
                                                                          AND X.APLY_START_DATE  &lt;=  #{ORDER_DATE}
	 		</if>
	 		<if test="PGM_ID == &quot;S_SOF101UKRV&quot;">
                                                                          AND X.APLY_START_DATE  &lt;=  #{ORDER_DATE}
                                                                          AND X.APLY_END_DATE    &gt;=  #{ORDER_DATE}
	 		</if>
                                                                       )
	 		</if>
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
	 		<if test="RDO != &quot;2&quot;">
			   AND B.CUSTOM_CODE = #{CUSTOM_CODE}
	 		</if>
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
			   AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			   AND A.ITEM_ACCOUNT		= #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
				AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
				<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
					<if test="SPEC_SEARCH == &quot;Y&quot;">
						OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
					</if>
				</if>
				)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{ITEM_CODE} + '%'
				 		</if>
				 	</if>
				 	 )
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND (A.ITEM_CODE LIKE REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 		</if>
				 	</if>
				 	)
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
				   AND ${ADD_QUERY1} #{S_COMP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
				   ${ADD_QUERY2} #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
				   ${ADD_QUERY3}
			   </if>

			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
		<if test="RDO == 1">
			ORDER BY	A.ITEM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END
		</if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>


	<select id="popupServiceImpl.woodenCode" parameterType="Map" resultType="rMap">
		 /* popupServiceImpl.woodenCode */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.EQU_CODE
			 , A.EQU_NAME
			 , A.EQU_SPEC
			 , A.MODEL_CODE
			 , A.CUSTOM_CODE

			 , A.GUBUN				--구분(WB08)
			 , A.WOODEN_CODE		--목형코드
			 , A.SN_NO				--LOT(SN_NO)
			 , A.ITEM_CODE			--품목코드
			 , C.ITEM_NAME			--품목명
			 , A.EQU_GRADE			--상태(I801)
			 , A.EQU_GUBUN			--목형구분(I802)
			 , A.INSTOCK_DATE		--입고일자
			 , A.TOT_PUNCH_Q		--누적타발수
			 , A.MIN_PUNCH_Q		--MIN
			 , A.MAX_PUNCH_Q		--MAX

		  FROM		 EQU200T A
		  LEFT OUTER JOIN BPR100T C ON C.COMP_CODE	= A.COMP_CODE
							  AND C.ITEM_CODE	= A.ITEM_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.DIV_CODE		= #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(WOODEN_CODE)">
		   AND A.WOODEN_CODE	LIKE #{WOODEN_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(SN_NO)">
		   AND A.SN_NO			LIKE #{SN_NO} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(EQU_GRADE)">
		   AND A.EQU_GRADE		= #{EQU_GRADE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(GUBUN)">
		   AND A.GUBUN			= #{GUBUN}
		</if>
		 ORDER BY A.WOODEN_CODE
	</select>

	<select id="popupServiceImpl.whCodePopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.whCodePopup */
		SELECT COMP_CODE
			 , TREE_CODE
			 , TREE_NAME
			 , TYPE_LEVEL
		  FROM BSA220T  WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND USE_YN		= 'Y'
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (TREE_CODE LIKE #{TXT_SEARCH} + '%'
			OR  TREE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		</if>
		 ORDER BY TREE_CODE
	</select>
	<select id="popupServiceImpl.programPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.pgmPopup */
		SELECT COMP_CODE
			 , PGM_SEQ
			 , PGM_ID
			 , PGM_NAME
			 , PGM_NAME_EN
			 , PGM_NAME_JP
			 , PGM_NAME_CN
			 , PGM_NAME_VI
			 , LOCATION
			 , TYPE
			 , RIGHT(PGM_SEQ + 100, 2) + LEFT(UP_PGM_DIV, 4) + RIGHT(PGM_ARNG_SEQ + 10000, 4) AS MENU_SORT
		  FROM BSA400T  WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND USE_YN		= '1'
		   AND TYPE IN ('1','2')
		   <if test="@foren.Ognl@isNotEmpty(PGM_SEQ)">
		   AND PGM_SEQ = #{PGM_SEQ}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND (PGM_ID LIKE #{TXT_SEARCH} + '%'
				OR  PGM_NAME LIKE '%'+ #{TXT_SEARCH} + '%'
				OR  PGM_NAME_EN LIKE '%'+ #{TXT_SEARCH} + '%'
				OR  PGM_NAME_JP LIKE '%'+ #{TXT_SEARCH} + '%'
				OR  PGM_NAME_CN LIKE '%'+ #{TXT_SEARCH} + '%'
				OR  PGM_NAME_VI LIKE '%'+ #{TXT_SEARCH} + '%'
				)
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(PGM_ID)">
			   AND PGM_ID LIKE #{PGM_ID} + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(PGM_NAME)">
			   AND (PGM_NAME LIKE '%'+ #{PGM_NAME} + '%'
				OR  PGM_NAME_EN LIKE '%'+ #{PGM_NAME} + '%'
				OR  PGM_NAME_JP LIKE '%'+ #{PGM_NAME} + '%'
				OR  PGM_NAME_CN LIKE '%'+ #{PGM_NAME} + '%'
				OR  PGM_NAME_VI LIKE '%'+ #{PGM_NAME} + '%'
				)
		  </if>
		 ORDER BY PGM_SEQ, PGM_ID
	</select>



<!-- 성분팝업 조회 쿼리 -->
	<select id="popupServiceImpl.chemicalPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.chemicalPopup */
		SELECT COMP_CODE
			 , CHEMICAL_CODE
			 , CHEMICAL_NAME
			 , CHEMICAL_NAME_EN
			 , CHEMICAL_NAME_CH
			 , CHEMICAL_NAME_JP
			 , CAS_NO
			 , FUNCTION_DESC
			 , CONTROL_CH
			 , CONTROL_JP
			 , CONTROL_USA
			 , CONTROL_ETC1
			 , CONTROL_ETC2
			 , CONTROL_ETC3
			 , CONTROL_ETC4
			 , CONTROL_ETC5
			 , REMARK
		  FROM LAA100T WITH(NOLOCK)
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(CHEMICAL_CODE)">
		   AND CHEMICAL_CODE	 LIKE '%' + #{CHEMICAL_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CHEMICAL_NAME)">
		   AND CHEMICAL_CODE	 LIKE '%' + #{CHEMICAL_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (CHEMICAL_CODE	 LIKE #{TXT_SEARCH} + '%'
			OR  CHEMICAL_NAME	 LIKE '%'+ #{TXT_SEARCH} + '%'
			OR  CHEMICAL_NAME_EN LIKE '%'+ #{TXT_SEARCH} + '%'
			OR  CHEMICAL_NAME_CH LIKE '%'+ #{TXT_SEARCH} + '%'
			OR  CHEMICAL_NAME_JP LIKE '%'+ #{TXT_SEARCH} + '%'
			)
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
		   AND CHEMICAL_CODE	 LIKE '%' + #{TXT_SEARCH2} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CHEMICAL_CODES)">
		   AND CHEMICAL_CODE NOT IN (select value from  uniLITE.fnSplit(#{CHEMICAL_CODES}, ','))
		</if>
	</select>
	<select id="popupServiceImpl.selectAutoPopup" parameterType="Map" resultType="rMap">
	    DECLARE             @FLAG          NVARCHAR(01)
	                      , @FIND_WHAT     NVARCHAR(40)
	                      , @COMP_CODE     NVARCHAR(08)
	                      , @AUTO_GUBUN    NVARCHAR(02)
	                      , @USER_ID       NVARCHAR(10)
	                      , @DEPT_CODE     NVARCHAR(08)
	                      , @DEPT_NAME     NVARCHAR(30)
	                      , @DIV_CODE      NVARCHAR(08)

	    SET @FLAG                   = #{FLAG}
	    SET @FIND_WHAT              = #{FIND_WHAT}
	    SET @COMP_CODE              = #{S_COMP_CODE}
	    SET @AUTO_GUBUN             = #{AUTO_GUBUN}
	    SET @USER_ID                = #{USER_ID}
	    SET @DEPT_CODE              = #{DEPT_CODE}
	    SET @DEPT_NAME              = #{DEPT_NAME}
	    SET @DIV_CODE               = #{DIV_CODE}

	    SELECT  AUTO_CD
	          , ISNULL(AUTO_NM   , '')      AS AUTO_NM
	          , ISNULL(AUTO_GUBUN, '')      AS AUTO_GUBUN
	    FROM    (
	            SELECT  A.COMP_CODE
	                  , A.AUTO_CD
	                  , MIN(A.AUTO_NM)      AS AUTO_NM
	                  , A.AUTO_GUBUN
	                  , A.AUTO_DATA
	                  , MIN(B.SLIP_DIVI)    AS SLIP_DIVI
	            FROM                ABA800T   A  WITH (NOLOCK)
	                    LEFT  JOIN  ABA810T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                          AND B.AUTO_CD     = A.AUTO_CD
	                                                          AND B.AUTO_GUBUN  = A.AUTO_GUBUN
	            WHERE   A.COMP_CODE = @COMP_CODE
	            GROUP   BY A.COMP_CODE, A.AUTO_CD, A.AUTO_GUBUN, A.AUTO_DATA
	           ) A
	           LEFT  JOIN   BSA210T   C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
	                                                  AND C1.TREE_CODE  = A.AUTO_DATA
	    WHERE ((A.AUTO_CD         &gt;=        @FIND_WHAT          AND @FIND_WHAT  != '')  OR
	           (A.AUTO_NM       LIKE '%' +  @FIND_WHAT + '%'    AND @FIND_WHAT  != '')  OR
	           (@FIND_WHAT         = ''))
	    AND   ((A.AUTO_GUBUN       =        @AUTO_GUBUN         AND @AUTO_GUBUN != '')  OR
	           (A.AUTO_GUBUN       =        '04'                                     )  OR
	           (@AUTO_GUBUN        =        ''))
	    AND   ((A.AUTO_GUBUN       =        '01'                AND A.AUTO_DATA        =        @USER_ID            AND @USER_ID    != '')  OR
	           (A.AUTO_GUBUN       =        '02'                AND A.AUTO_DATA        =        @DEPT_CODE          AND @DEPT_CODE  != '')  OR
	           (A.AUTO_GUBUN       =        '02'                AND C1.TREE_NAME    LIKE '%' +  @DEPT_NAME + '%'    AND @DEPT_NAME  != '')  OR
	           (A.AUTO_GUBUN       =        '03'                AND A.AUTO_DATA        =        @DIV_CODE           AND @DIV_CODE   != '')  OR
	           (A.AUTO_GUBUN       =        '04'                                                                                         )  OR
	           (@USER_ID           =        ''                  AND @DEPT_CODE         = ''                         AND @DEPT_NAME  =  ''  AND @DIV_CODE   = ''))
		<if test="CHK_SLIP_DIVI != &quot;1&quot; &amp;&amp; CHK_SLIP_DIVI != &quot;3&quot;">
		AND SLIP_DIVI &gt;= 3
		</if>
	    ORDER   BY AUTO_CD
	</select>
	<select id="popupServiceImpl.labNoPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.labNoPopup */
		SELECT A.COMPANY_NM
			 , A.LAB_NO
			 , A.REQST_ID
			 , A.SAMPLE_NAME
			 , A.CUSTOMER_NM
			 , A.SAMPLE_KEY    --20190607 추가
			 , A.LAB_SRAL_NO   --20210907 추가
		  FROM       SAM100T A WITH(NOLOCK)
		<if test="@foren.Ognl@isNotEmpty(MAX_YN)">
		  INNER JOIN (SELECT COMPANY_NM                          --20210818 추가: 동일 거래처/lab no 일 때, 최근 데이터만 보여주기 위해 추가
		                   , LAB_NO
		                   , MAX(REQST_ID) AS REQST_ID
		                FROM SAM100T WITH(NOLOCK)
		               WHERE 1=1
		              <if test="@foren.Ognl@isNotEmpty(COMPANY_NM)">
		                 AND COMPANY_NM LIKE #{COMPANY_NM} + '%'
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		                 AND (LAB_NO LIKE #{TXT_SEARCH} + '%'
		                   OR LAB_NO LIKE #{TXT_SEARCH} + '%' )
		              </if>
		              <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
		                <if test="@foren.Ognl@isNotEmpty(LAB_NO)">
		                 AND (LAB_NO   LIKE #{LAB_NO} + '%'
		                   OR REQST_ID LIKE '%'+ #{LAB_NO} + '%' )
		                </if>
		                <if test="@foren.Ognl@isNotEmpty(REQST_ID)">
		                 AND (LAB_NO   LIKE #{REQST_ID} + '%'
		                   OR REQST_ID LIKE '%'+ #{REQST_ID} + '%' )
		                </if>
		              </if>
		               GROUP BY COMPANY_NM, LAB_NO) B ON B.COMPANY_NM = A.COMPANY_NM
		                                             AND B.LAB_NO     = A.LAB_NO
		                                             AND B.REQST_ID   = A.REQST_ID
		</if>
		 WHERE 1=1
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NM)">
		   AND A.COMPANY_NM LIKE #{COMPANY_NM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		   AND (A.LAB_NO LIKE #{TXT_SEARCH} + '%'
		   OR A.LAB_NO LIKE #{TXT_SEARCH} + '%' )
		</if>
		<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(LAB_NO)">
		   AND (A.LAB_NO LIKE #{LAB_NO} + '%'
		   OR A.REQST_ID LIKE '%'+ #{LAB_NO} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(REQST_ID)">
		   AND (A.LAB_NO LIKE #{REQST_ID} + '%'
		   OR A.REQST_ID LIKE '%'+ #{REQST_ID} + '%' )
			</if>
		</if>
		 ORDER BY A.COMPANY_NM
	</select>





	<!-- LOT ITEM 팝업: 그리드용 (멀티 선택), 현재고 > 0, 품목 팝업 대신 사용 (출고등록(건별)(LOT팝업) (str106ukrv)) -->
	<select id="popupServiceImpl.lotItemPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.lotItemPopup */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @RefItem NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = 'omega+'

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1
			       @OrderPrsn   = SUB_CODE
			     , @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = 'MASTER'
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = 'omega+'
			   AND USE_YN     = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN ITEM_NAME
						 WHEN @RefItem = '1' THEN ITEM_NAME1
						 WHEN @RefItem = '2' THEN ITEM_NAME2
											 ELSE ITEM_NAME
					 END)													AS ITEM_NAME
				 , B.LOT_NO
				 , OEM_ITEM_CODE
				 , ISNULL(SPEC, '')											AS SPEC
				 , STOCK_UNIT
				 , ORDER_UNIT
				 , TRNS_RATE
				 , BASIS_P
				 , SALE_BASIS_P
				 , SAFE_STOCK_Q
				 , EXPENSE_RATE
				 , SPEC_NUM
				 --, ISNULL(A.WH_CODE, '')									AS WH_CODE
				 , WORK_SHOP_CODE
				 , A.DIV_CODE
				 , OUT_METH
				 , ITEM_MAKER
				 , ITEM_MAKER_PN
				 , PURCH_LDTIME
				 , MINI_PURCH_Q
				 , UNIT_WGT
				 , WGT_UNIT
				 , ITEM_ACCOUNT
				 , ISNULL(DOM_FORIGN, '1')									AS DOM_FORIGN
				 , SUPPLY_TYPE
				 , HS_NO
				 , HS_NAME
				 , HS_UNIT
				 , STOCK_UNIT												AS STOCK_UNIT2
				 , TAX_TYPE
				 , ISNULL(STOCK_CARE_YN, 'Y')								AS STOCK_CARE_YN
				 , SALE_UNIT
				 , PUR_TRNS_RATE
				 , ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN ITEM_GROUP_NAME2
											 ELSE ITEM_GROUP_NAME
					 END)													AS ITEM_GROUP_NAME
				 , ITEM_LEVEL1
				 , ITEM_LEVEL_NAME1											AS ITEM_LEVEL_NAME1
				 , ITEM_LEVEL2
				 , ITEM_LEVEL_NAME2											AS ITEM_LEVEL_NAME2
				 , ITEM_LEVEL3
				 , ITEM_LEVEL_NAME3											AS ITEM_LEVEL_NAME3
				 , BARCODE													AS BARCODE
				 , ISNULL(LOT_SIZING_Q, 0.0)								AS LOT_SIZING_Q
				 , ISNULL(MAX_PRODT_Q , 0.0)								AS MAX_PRODT_Q
				 , ISNULL(STAN_PRODT_Q, 0.0)								AS STAN_PRODT_Q
				 , PURCHASE_BASE_P
				 , TOTAL_ITEM
				 , INSPEC_YN
				 , UNIT_VOL
				 , VOL_UNIT
				 , MAIN_CUSTOM_CODE
				 , MAIN_CUSTOM_NAME
				 , ITEM_COLOR
				 , MAIN_CUSTOM_CODE
				 , MAIN_CUSTOM_NAME
				 , LOT_YN
				 , OEM_ITEM_CODE
				 , INSPEC_YN
				 , CAR_TYPE
				 , ITEM_WIDTH
				 , PACK_QTY
				 , ISNULL(EXPIRATION_DAY, 0)								AS EXPIRATION_DAY
				 , ISNULL(PRODUCT_LDTIME, 0)								AS PRODUCT_LDTIME
				 --20190306 추가
				 , ISNULL(CARE_YN, 'N')										AS CARE_YN
				 , CARE_REASON
				 , B.WH_CODE
				 , B.WH_CELL_CODE
				 , B.STOCK_Q
				 , B.GOOD_STOCK_Q
				 , B.BAD_STOCK_Q
			  FROM       BPR200TV A
			  INNER JOIN BIV150T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
			                                    AND A.DIV_CODE  = B.DIV_CODE
			                                    AND A.ITEM_CODE = B.ITEM_CODE
			                                    AND B.SUM_TYPE  =(SELECT MAX(SUB_CODE) FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B084' AND REF_CODE1='Y')
			 WHERE A.COMP_CODE    = #{S_COMP_CODE}
			   AND A.DIV_CODE     = #{DIV_CODE}
			   AND A.USE_YN       = 'Y'
			   AND B.STOCK_Q     != 0
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			   AND A.ITEM_CODE    LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			   AND CASE WHEN @RefItem = '0' THEN ITEM_NAME
						WHEN @RefItem = '1' THEN ITEM_NAME1
						WHEN @RefItem = '2' THEN ITEM_NAME2
											ELSE ITEM_NAME
					END           LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
			   AND B.LOT_NO       LIKE #{LOTNO_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
			   AND B.WH_CODE      = #{S_WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
			   AND B.WH_CELL_CODE = #{S_WH_CELL_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			   AND A.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
		</if>

			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((ORDER_PRSN = @OrderPrsn                                  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
			     OR ((ORDER_PRSN = @OrderPrsn OR ISNULL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
			     OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */

			 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>



<!-- LOT 재고 팝업 (MIT) - 20191113 추가 -->
	<select id="popupServiceImpl.lotNoPopup_mit" parameterType="Map" resultType="rMap">
		/* LOTNO팝업(MIT) */
		BEGIN
		    DECLARE @COMP_CODE     NVARCHAR(08)        /*(필수) 법인코드*/
		          , @DIV_CODE      NVARCHAR(08)        /*(필수) 사업장코드*/
		          , @CUSTOM_CODE   NVARCHAR(08)        /*(필수) 거래처코드*/
		          , @CUSTOM_NAME   NVARCHAR(50)        /*(필수) 거래처명 */
		          , @ITEM_CODE     NVARCHAR(20)        /*(필수) 품목코드*/
		          , @ITEM_NAME     NVARCHAR(200)       /*(필수) 품목명*/
		          , @WH_CODE       NVARCHAR(08)        /*(선택) 창고코드*/
		          , @WH_CELL_CODE  NVARCHAR(20)        /*(선택) 창고Cell*/
		          , @LOT_NO        NVARCHAR(20)        /*(선택) LOT NO*/
		          , @STOCK_YN      NVARCHAR(01)        /*(선택) 현재고 유무*/
		          , @USER_ID       NVARCHAR(100)       /*(필수) 사용자 ID*/

		    /*1. 변수 값 할당*/
		    SET @COMP_CODE  = #{S_COMP_CODE}
		    SET @DIV_CODE   = #{DIV_CODE}
		    SET @ITEM_CODE  = #{ITEM_CODE}
		    SET @ITEM_NAME  = REPLACE(#{ITEM_NAME}, '[', '[[]')
		    SET @STOCK_YN   = #{STOCK_YN}
		    SET @USER_ID    = #{S_USER_ID}

		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    /*2. 사용자의 참조명칭*/
		    DECLARE @RefItem   NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '0')

		    /*3. LOT 재고정보 조회*/
		    SELECT A.COMP_CODE
		            , A.DIV_CODE
		            , A.CUSTOM_CODE
		            , A.CUSTOM_NAME
		            , A.ITEM_NAME
		            , A.ITEM_CODE
		            , A.ITEM_NAME
		            , A.SPEC
		            , A.STOCK_UNIT
		            , A.WH_CODE
		            , A.WH_NAME
		            , A.WH_CELL_CODE
		            , A.WH_CELL_NAME
		            , A.LOT_NO
		            , A.LOT_NO                                                       AS LOTNO_CODE
		            , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),    'R_FSET_Q') AS INSTOCK_Q
		            , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
		            , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') AS STOCK_Q
		            , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
		            , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q
		            , MAX(MAKE_DATE)       AS MAKE_DATE
		            , MAX(MAKE_EXP_DATE) AS MAKE_EXP_DATE
		      FROM (
		            SELECT A.COMP_CODE
		                 , A.DIV_CODE
		                 , A.CUSTOM_CODE
		                 , B.CUSTOM_NAME
		                 , A.ITEM_CODE
		                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                        ELSE C1.ITEM_NAME
		                   END                                                   AS ITEM_NAME
		                 , C1.SPEC
		                 , C1.STOCK_UNIT
		                 , A.WH_CODE
		                 , C2.TREE_NAME                                          AS WH_NAME
		                 , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
		                        ELSE A.WH_CELL_CODE
		                   END                                                   AS WH_CELL_CODE
		                 , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
		                        ELSE C3.WH_CELL_NAME
		                   END                                                   AS WH_CELL_NAME
		                 , A.LOT_NO
		                 , A.LOT_NO                                              AS LOTNO_CODE
		                 , A.INSTOCK_Q
		                 , A.OUTSTOCK_Q
		                 , A.STOCK_Q
		                 , A.GOOD_STOCK_Q
		                 , A.BAD_STOCK_Q
		                 , C1.SALE_BASIS_P
		                 , A.USE_BY_DATE AS MAKE_DATE
		                 , A.MAKE_EXP_DATE
		              FROM             PABSTOCK_V A  WITH (NOLOCK)
		                    LEFT  JOIN BCM100T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                       AND B.CUSTOM_CODE   = A.CUSTOM_CODE
		                    INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                                       AND C1.ITEM_CODE    = A.ITEM_CODE
		                    LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                                       AND C2.TYPE_LEVEL   = A.DIV_CODE
		                                                       AND C2.TREE_CODE    = A.WH_CODE
		                    LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                                       AND C3.DIV_CODE     = A.DIV_CODE
		                                                       AND C3.WH_CODE      = A.WH_CODE
		                                                       AND C3.WH_CELL_CODE = A.WH_CELL_CODE
		                    LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
		                                                       AND M1.MAIN_CODE    = N'B084'
		                                                       AND M1.SUB_CODE     = N'C' /*Lot No. 합산*/
		                    LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
		                                                       AND M2.MAIN_CODE    = N'B084'
		                                                       AND M2.SUB_CODE     = N'D' /*창고 Cell 합산*/
		                    LEFT  JOIN ( SELECT COMP_CODE, ITEM_CODE, LOT_NO, SUM(ALLOT_Q) AS ALLOT_Q
		                                   FROM S_SOF120T_MIT  WITH (NOLOCK)
		                                  GROUP BY COMP_CODE, ITEM_CODE, LOT_NO ) Z1 ON Z1.COMP_CODE = A.COMP_CODE
		                                                                            AND Z1.ITEM_CODE = A.ITEM_CODE
		                                                                            AND Z1.LOT_NO    = A.LOT_NO
		            WHERE A.COMP_CODE      = @COMP_CODE
		              AND A.DIV_CODE       = @DIV_CODE
		              AND A.STOCK_Q - ISNULL(Z1.ALLOT_Q, 0) > 0
		              AND A.SUM_TYPE       = CASE  WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y'                                     THEN 'D'
		                                           ELSE 'C'
		                                     END
		              AND ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE != '') OR (@ITEM_CODE    = ''))
		              <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_CODE)">
		              AND A.CUSTOM_CODE    LIKE #{S_CUSTOM_CODE} + '%'
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_NAME)">
		              AND B.CUSTOM_NAME    LIKE       #{S_CUSTOM_NAME} + '%'
		              </if>
		              AND ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME    != '')
		                OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME    != '')
		                OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME    != '') OR (@ITEM_NAME    = ''))
		              <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
		              AND A.LOT_NO         LIKE '%' +  #{LOTNO_CODE}  + '%'
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
		              AND A.WH_CODE        = #{S_WH_CODE}
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
		              AND A.WH_CELL_CODE   = #{S_WH_CELL_CODE}
		              </if>
		              AND ((A.STOCK_Q  != 0.0  AND @STOCK_YN      = 'Y')
		                OR (A.STOCK_Q   = 0.0  AND @STOCK_YN      = 'N')
		                OR (ISNULL(@STOCK_YN, '') = ''))
		            ) A
		    GROUP  BY A.COMP_CODE,   A.DIV_CODE,    A.ITEM_CODE,    A.ITEM_NAME,    A.SPEC,  A.STOCK_UNIT
		            , A.WH_CODE,     A.WH_NAME,     A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
		            , A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P

		    ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

<!-- 실사일(외주) 팝업 - 20200217 신규 생성 -->
	<select id="popupServiceImpl.countdateoutPopup" parameterType="Map" resultType="rMap">		/*실사일팝업*/
		/* countdateoutPopup--biz120ukrv.Cbiz120ukrv[fnBiz120QPop] Query01 */
		SELECT DISTINCT DIV_CODE
		     , CUSTOM_CODE
		     , uniLITE.fnCustNameComp(COMP_CODE, #{S_USER_ID}, CUSTOM_CODE) AS CUSTOM_NAME
		     , uniLITE.fnGetUserDate(COMP_CODE, COUNT_DATE)                 AS COUNT_DATE
		     , (CASE COUNT_FLAG
		             WHEN 'O' THEN uniLITE.fnGetTxt('K0001')
		             WHEN 'P' THEN uniLITE.fnGetTxt('K0002')
		             WHEN 'C' THEN uniLITE.fnGetTxt('K0003')
		        END)                                                        AS COUNT_FLAG
		     , (CASE COUNT_CONT_DATE
		             WHEN '00000000' THEN ''
		             ELSE UNILITE.fnGetUserDate(COMP_CODE, COUNT_CONT_DATE)
		         END)                                                       AS COUNT_CONT_DATE
		  FROM BIZ300T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
		</if>
		 ORDER BY COUNT_DATE DESC
	</select>

<!-- 출하지시번호 조회 팝업 - 20200228 신규 생성 -->
	<select id="popupServiceImpl.issueReqNumPopup" parameterType="Map" resultType="rMap">
		<if test="@foren.Ognl@isEmpty(DETAIL_YN) || DETAIL_YN != &quot;Y&quot;">
			SELECT DISTINCT
			       A.ISSUE_REQ_NUM
			     , uniLITE.fnGetUserdate(A.COMP_CODE, A.ISSUE_REQ_DATE) AS ISSUE_REQ_DATE
			     , C.CUSTOM_NAME
			     , A.MONEY_UNIT
			     , A.EXCHANGE_RATE
			     , C.CUSTOM_CODE
			  FROM       SRQ100T A WITH (NOLOCK)
			  INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
			                                   AND C.CUSTOM_CODE = A.CUSTOM_CODE
			WHERE A.COMP_CODE     = #{S_COMP_CODE}
			  AND A.DIV_CODE      = #{DIV_CODE}
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			  AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
			  AND A.ISSUE_REQ_NUM   LIKE #{ISSUE_REQ_NUM} + '%'
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			  AND A.ISSUE_REQ_NUM LIKE #{TXT_SEARCH} + '%'
			  </if>
			GROUP BY A.COMP_CODE, A.ISSUE_REQ_NUM, A.ISSUE_REQ_DATE, C.CUSTOM_NAME, A.MONEY_UNIT, A.EXCHANGE_RATE, C.CUSTOM_CODE
			<if test="RDO == &quot;1&quot;">
				ORDER BY 2 DESC
			</if>
			<if test="RDO == &quot;2&quot;">
				ORDER BY 3 DESC
			</if>
		</if>
	</select>
	<select id="popupServiceImpl.s_asset_mitPopup" parameterType="Map" resultType="rMap">
		SELECT     T.ASST
				,  T.ASST_NAME
				,  T.ACCNT
				,  T.ACCNT_NAME
				,  T.ACQ_DATE
				,  T.ACQ_AMT_I
				,  T.ACQ_Q
				,  T.DRB_YEAR
				,  T.DPR_RATE
				,  T.SPEC
				,  T.DPR_STS
		  FROM (
		         SELECT    A.COMP_CODE
				        ,  A.ASST
		         		,  A.ASST_NAME
		         		,  A.ACCNT
		         		,  N1.ACCNT_NAME
		         		,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
		         		,  A.ACQ_AMT_I
		         		,  A.ACQ_Q
		         		,  A.DRB_YEAR
		         		,  CONVERT(NUMERIC, M1.CODE_NAME) / 1000			   AS DPR_RATE
		         		,  A.SPEC
						,  A.DPR_STS
						,  A.DIV_CODE
		           FROM	     AISS300T AS A  WITH (NOLOCK)
		           LEFT  JOIN ABA400T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
		         										AND N1.ACCNT	 = A.ACCNT
		           LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE = A.COMP_CODE
		         										AND M1.MAIN_CODE = (CASE WHEN A.DEP_CTL = '1' THEN 'A033'
		         																	WHEN A.DEP_CTL = '2' THEN 'A034'
		         															END)
		         										AND M1.SUB_CODE  = RIGHT(CONVERT(NVARCHAR, 1000+A.DRB_YEAR), 3)
		          WHERE A.COMP_CODE		  =  #{S_COMP_CODE}
		            AND A.DPR_STS		  =  '5'
		         UNION ALL
		         SELECT    A.COMP_CODE
				        ,  A.ASST
		         		,  A.ASST_NAME
		         		,  A.ACCNT
		         		,  N1.ACCNT_NAME
		         		,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
		         		,  A.ACQ_AMT_I
		         		,  A.ACQ_Q
		         		,  A.DRB_YEAR
		         		,  CONVERT(NUMERIC, M1.CODE_NAME) / 1000			   AS DPR_RATE
		         		,  A.SPEC
						,  A.DPR_STS
						,  A.DIV_CODE
		           FROM	     AISS300T       AS A  WITH (NOLOCK)
		           INNER JOIN (
							SELECT COMP_CODE, ASST
							  FROM S_AISC150T_MIT WITH (NOLOCK)
							 GROUP BY COMP_CODE, ASST
							              )  AS B                 ON B.COMP_CODE  = A.COMP_CODE
		                                                         AND B.ASST		 = A.ASST
		           LEFT  JOIN ABA400T        AS N1 WITH (NOLOCK)  ON N1.COMP_CODE = A.COMP_CODE
		         										        AND N1.ACCNT	 = A.ACCNT
		           LEFT  JOIN BSA100T        AS M1 WITH (NOLOCK)  ON M1.COMP_CODE = A.COMP_CODE
		         										        AND M1.MAIN_CODE = (CASE WHEN A.DEP_CTL = '1' THEN 'A033'
		         																	WHEN A.DEP_CTL = '2' THEN 'A034'
		         															END)
		         										        AND M1.SUB_CODE  = RIGHT(CONVERT(NVARCHAR, 1000+A.DRB_YEAR), 3)
		          WHERE A.COMP_CODE	      = #{S_COMP_CODE}
		            AND A.DPR_STS		  =  '3'
		  ) AS T
		 WHERE T.COMP_CODE = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND (T.ASST LIKE #{TXT_SEARCH} + '%'
			OR T.ASST_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
		</if>
		<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
			AND (T.ASST LIKE #{ASSET_CODE} + '%'
			OR T.ASST_NAME LIKE '%'+ #{ASSET_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(ASSET_NAME)">
			AND (T.ASST LIKE #{ASSET_NAME} + '%'
			OR T.ASST_NAME LIKE '%'+ #{ASSET_NAME} + '%' )
			</if>
		</if>
		ORDER BY T.ASST ASC
	</select>
	<select id="popupServiceImpl.lotNoPopup_in" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.lotNoPopup_in */
		BEGIN
		    DECLARE @COMP_CODE          NVARCHAR(08)        /*(필수) 법인코드*/
		          , @DIV_CODE           NVARCHAR(08)        /*(필수) 사업장코드*/
		          , @CUSTOM_CODE        NVARCHAR(08)        /*(필수) 거래처코드*/
		          , @CUSTOM_NAME        NVARCHAR(50)        /*(필수) 거래처명 */
		          , @ITEM_CODE          NVARCHAR(20)        /*(필수) 품목코드*/
		          , @ITEM_NAME          NVARCHAR(200)       /*(필수) 품목명*/
		          , @WH_CODE            NVARCHAR(08)        /*(선택) 창고코드*/
		          , @WH_CELL_CODE       NVARCHAR(20)        /*(선택) 창고Cell*/
		          , @LOT_NO             NVARCHAR(20)        /*(선택) LOT NO*/
		          , @STOCK_YN           NVARCHAR(01)        /*(선택) 현재고 유무*/
		          , @USER_ID            NVARCHAR(100)       /*(필수) 사용자 ID*/
		          --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join
		          , @LOTS        NVARCHAR(MAX)

		    SET @LOTS        = #{LOTS}

		/*1. 변수 값 할당*/
		    SET     @COMP_CODE     = #{S_COMP_CODE}
		    SET     @DIV_CODE      = #{DIV_CODE}
		    SET     @ITEM_CODE     = #{ITEM_CODE}
		    SET     @ITEM_NAME     = REPLACE(#{ITEM_NAME}, '[', '[[]')
		    SET     @STOCK_YN      = #{STOCK_YN}
		    SET     @USER_ID       = #{S_USER_ID}

		    SET NOCOUNT ON
		    SET ARITHABORT ON

		/*2. 사용자의 참조명칭*/
		    DECLARE @RefItem            NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '0')

		/*3. LOT 재고정보 조회*/
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.CUSTOM_CODE
		         , A.CUSTOM_NAME
		         , A.ITEM_NAME
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.SPEC
		         , A.STOCK_UNIT
		         , A.WH_CODE
		         , A.WH_NAME
		         , A.WH_CELL_CODE
		         , A.WH_CELL_NAME
		         , A.LOT_NO
		         , A.LOT_NO                                              AS LOTNO_CODE
		         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),    'R_FSET_Q') AS INSTOCK_Q
		         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
		         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') AS STOCK_Q
		         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
		         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q
		         , MAX(MAKE_DATE)       AS MAKE_DATE
		         , MAX(MAKE_EXP_DATE) AS MAKE_EXP_DATE
		         , A.ISSUE_REQ_QTY
		         , A.USEABLE_STOCK_QTY
		    FROM   (
		            SELECT A.COMP_CODE
		                , A.DIV_CODE
		                , A.CUSTOM_CODE
		                , B.CUSTOM_NAME
		                , A.ITEM_CODE
		                , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                        ELSE C1.ITEM_NAME
		                    END                                                   AS ITEM_NAME
		                , C1.SPEC
		                , C1.STOCK_UNIT
		                , A.WH_CODE
		                , C2.TREE_NAME                                            AS WH_NAME
		                , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
		                        ELSE A.WH_CELL_CODE
		                    END                                                   AS WH_CELL_CODE
		                , CASE WHEN ISNULL(M2.REF_CODE1, 'N') = 'N' THEN ''
		                        ELSE C3.WH_CELL_NAME
		                    END                                                   AS WH_CELL_NAME
		                , A.LOT_NO
		                , A.LOT_NO                                                AS LOTNO_CODE
		                , A.INSTOCK_Q
		                , A.OUTSTOCK_Q
		                , A.STOCK_Q
		                , A.GOOD_STOCK_Q
		                , A.BAD_STOCK_Q
		                , C1.SALE_BASIS_P
		                , A.USE_BY_DATE AS MAKE_DATE
		                , A.MAKE_EXP_DATE
		                , (ISNULL(D2.ISSUE_REQ_QTY,0))                    AS ISSUE_REQ_QTY
		                , (A.GOOD_STOCK_Q) - (ISNULL(D2.ISSUE_REQ_QTY,0)) AS USEABLE_STOCK_QTY
		            FROM              BIV150TV A  WITH (NOLOCK)
		                    LEFT JOIN BCM100T  B  WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                                       AND B.CUSTOM_CODE    = A.CUSTOM_CODE
		                    INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
		                                                       AND C1.ITEM_CODE     = A.ITEM_CODE
		                    LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
		                                                       AND C2.TYPE_LEVEL    = A.DIV_CODE
		                                                       AND C2.TREE_CODE     = A.WH_CODE
		                    LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
		                                                       AND C3.DIV_CODE      = A.DIV_CODE
		                                                       AND C3.WH_CODE       = A.WH_CODE
		                                                       AND C3.WH_CELL_CODE  = A.WH_CELL_CODE
		                    LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
		                                                       AND M1.MAIN_CODE     = N'B084'
		                                                       AND M1.SUB_CODE      = N'C' /*Lot No. 합산*/
		                    LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
		                                                       AND M2.MAIN_CODE     = N'B084'
		                                                       AND M2.SUB_CODE      = N'D' /*창고 Cell 합산*/
		                    LEFT  JOIN (
		                                  SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.WH_CELL_CODE, A.ITEM_CODE, A.LOT_NO, SUM((A.ISSUE_REQ_QTY-A.ISSUE_QTY)*A.TRANS_RATE) AS ISSUE_REQ_QTY
		                                    FROM SRQ100T A WITH (NOLOCK)
		                                          INNER JOIN SOF110T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.ORDER_NUM=B.ORDER_NUM AND A.SER_NO=B.SER_NO
		                                   WHERE A.COMP_CODE      = @COMP_CODE
		                                     AND A.DIV_CODE       = @DIV_CODE
		                                     AND B.ORDER_STATUS   = 'N'
		                                     AND A.ISSUE_REQ_QTY != A.ISSUE_QTY
		                                     AND ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE != '')
		                                       OR (@ITEM_CODE     = ''))
		                                   GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.WH_CELL_CODE, A.ITEM_CODE, A.LOT_NO
		                                ) D2 ON D2.COMP_CODE     = A.COMP_CODE
		                                    AND D2.DIV_CODE      = A.DIV_CODE
		                                    AND D2.WH_CODE       = A.WH_CODE
		                                    AND D2.WH_CELL_CODE  = A.WH_CELL_CODE
		                                    AND D2.ITEM_CODE     = A.ITEM_CODE
		                                    AND D2.LOT_NO        = A.LOT_NO
		            <if test="@foren.Ognl@isNotEmpty(LOTS)">
		            <if test="INCLUDE_YN == &quot;N&quot;">
		                    --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join, 20200226 수정: 포함여부가 n이면 제외
		                    LEFT JOIN uniLITE.fnSplit(@LOTS, ',') AS Z1 ON Z1.VALUE = A.LOT_NO
		            </if>
		            </if>
		            WHERE  A.COMP_CODE       =       @COMP_CODE
		            AND    A.DIV_CODE        =       @DIV_CODE
		            AND    A.SUM_TYPE        = CASE  WHEN ISNULL(M2.REF_CODE1, 'N') = 'Y'                                     THEN 'D'
		                                            ELSE 'C'
		                                        END
		            AND  ((A.ITEM_CODE    LIKE       @ITEM_CODE + '%'                    AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))
		            <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_CODE)">
		            AND A.CUSTOM_CODE    LIKE       #{S_CUSTOM_CODE} + '%'
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(S_CUSTOM_NAME)">
		            AND B.CUSTOM_NAME    LIKE       #{S_CUSTOM_NAME} + '%'
		            </if>
		            AND  ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME    != '')
		                OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME    != '')
		                OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME    != '') OR (@ITEM_NAME    = ''))
		            <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
		            AND  A.LOT_NO       LIKE      '%' +  #{LOTNO_CODE}  + '%'
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(S_WH_CODE)">
		            AND  A.WH_CODE         =       #{S_WH_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(S_WH_CELL_CODE)">
		            AND  A.WH_CELL_CODE         =       #{S_WH_CELL_CODE}
		            </if>
		            AND  ((A.STOCK_Q         != 0.0                                    AND @STOCK_YN      = 'Y')
		                OR (A.STOCK_Q         = 0.0                                       AND @STOCK_YN      = 'N')
		                OR (ISNULL(@STOCK_YN, '')         = ''))
		            <if test="@foren.Ognl@isNotEmpty(LOTS)">
		            <if test="INCLUDE_YN == &quot;N&quot;">
		            --20200115 공통코드(main Grid에 있는 LOT 표시 여부)에 따라 main Grid에 있는 LOT join, 20200226 수정: 포함여부가 n이면 제외
		            AND Z1.VALUE IS NULL
		            </if>
		            </if>
		            ) A
		    GROUP  BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE,    A.ITEM_NAME,    A.SPEC,  A.STOCK_UNIT
		            , A.WH_CODE,   A.WH_NAME,  A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
		            , A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P
		            , A.ISSUE_REQ_QTY
		            , A.USEABLE_STOCK_QTY

		    ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="popupServiceImpl.selectPurchDocNoPopup" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE	@CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A.DIV_CODE
		    	 , A.PURCH_DOC_NO
		    	 , A.ISSUE_DATE
		         , A.SALE_CUSTOM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                     ELSE C1.CUSTOM_NAME
		             END)						                    AS CUSTOM_NAME
		         , (SELECT TOP 1 ITEM_CODE FROM SSA110T WHERE COMP_CODE = A.COMP_CODE AND DIV_CODE = A.DIV_CODE AND BILL_NUM = A.BILL_NUM ORDER BY SER_NO) AS ITEM_CODE
				 , (SELECT ITEM_NAME
				    FROM BPR100T
					WHERE COMP_CODE = A.COMP_CODE
					  AND ITEM_CODE = (SELECT TOP 1 ITEM_CODE
									   FROM SSA110T
									   WHERE COMP_CODE = A.COMP_CODE
										  AND DIV_CODE = A.DIV_CODE
										  AND BILL_NUM = A.BILL_NUM
									   ORDER BY SER_NO))			AS ITEM_NAME
				 , (SELECT SPEC
				    FROM BPR100T
					WHERE COMP_CODE = A.COMP_CODE
					  AND ITEM_CODE = (SELECT TOP 1 ITEM_CODE
									   FROM SSA110T
									   WHERE COMP_CODE = A.COMP_CODE
										  AND DIV_CODE = A.DIV_CODE
										  AND BILL_NUM = A.BILL_NUM
									   ORDER BY SER_NO))			AS SPEC
		         , CAST(A.SALE_DATE AS DATETIME)                    AS SALE_DATE
		         , A.BILL_TYPE
		         , A.ORDER_TYPE                                     AS SALE_TYPE
		         , M1.CODE_NAME                                     AS SALE_TYPE_NAME
		         , SUM(ISNULL(B.SALE_Q, 0))                         AS SALE_Q
		         , (A.SALE_AMT_O + ISNULL(A.SALE_LOC_EXP_I, 0) + A.TAX_AMT_O ) AS SALE_TOT_O
		         , A.SALE_LOC_AMT_I
		         , A.SALE_LOC_EXP_I
		         , A.TAX_AMT_O
		         , A.SALE_PRSN
		         , M2.CODE_NAME                                     AS SALE_PRSN_NAME
		         , A.BILL_NUM
		         , A.PROJECT_NO
--		         , B.INOUT_NUM
		         , C1.AGENT_TYPE
		         , C1.CREDIT_YN
		         , C1.WON_CALC_BAS
		         , C1.TAX_CALC_TYPE
		         , C1.TAX_TYPE
		    FROM              SSA100T  A  WITH (NOLOCK)
		           INNER JOIN SSA110T  B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                               AND B.DIV_CODE     = A.DIV_CODE
		                                               AND B.BILL_NUM     = A.BILL_NUM
		           INNER JOIN BCM100T  C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                               AND C1.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA100T  M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                               AND M1.MAIN_CODE   = 'S002'                          /* 수주유형 */
		                                               AND M1.SUB_CODE    = A.ORDER_TYPE
		           LEFT  JOIN BSA100T  M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                               AND M2.MAIN_CODE   = 'S010'                          /* 영업담당 */
		                                               AND M2.SUB_CODE    = A.SALE_PRSN
		           LEFT  JOIN BPR100T  M3 WITH (NOLOCK) ON M3.COMP_CODE   = B.COMP_CODE
		                                               AND M3.ITEM_CODE   = B.ITEM_CODE
--		           INNER JOIN BSA210T D WITH (NOLOCK)   ON D.COMP_CODE 	  = A.COMP_CODE
--          											   AND D.TYPE_LEVEL   = A.DIV_CODE
--          											   AND D.TREE_CODE 	  = A.DEPT_CODE
		    WHERE  A.COMP_CODE           = @CompCode
		      AND    A.BILL_TYPE           = '90'    	/* 부가세유형 */
		    <if test="@foren.Ognl@isNotEmpty(SALE_DATE_FR)">
		      AND    A.SALE_DATE       &gt;= #{SALE_DATE_FR} /* (필수) 시작 매출일 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_DATE_TO)">
		      AND    A.SALE_DATE       &lt;= #{SALE_DATE_TO} /* (필수) 종료 매출일 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		      AND    A.DIV_CODE            = #{DIV_CODE}     /*(필수) 사업장코드 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		      AND    A.SALE_CUSTOM_CODE LIKE #{CUSTOM_CODE}  /* 거래처코드 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND    C1.CUSTOM_NAME     LIKE #{CUSTOM_NAME}  /* 거래처명 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">
		      AND    A.SALE_PRSN           = #{SALE_PRSN}    /* 영업담당 */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PURCH_DOC_NO)">
		      AND    A.PURCH_DOC_NO LIKE '%'+#{PURCH_DOC_NO}+'%'  /* 거래처코드 */
		    </if>

		    GROUP BY A.COMP_CODE   , A.DIV_CODE        , A.PURCH_DOC_NO , A.ISSUE_DATE
		           , A.SALE_DATE   , A.BILL_TYPE       , A.ORDER_TYPE
		           , A.SALE_AMT_O   , A.SALE_LOC_EXP_I  , A.TAX_AMT_O   , A.SALE_LOC_AMT_I  , A.SALE_LOC_EXP_I
		           , A.TAX_AMT_O    , A.SALE_PRSN       , A.BILL_NUM    , A.PROJECT_NO      , A.SALE_CUSTOM_CODE
		           , C1.CUSTOM_NAME , M1.CODE_NAME  , M2.CODE_NAME      , C1.CUSTOM_NAME1
		           , C1.CUSTOM_NAME2, C1.AGENT_TYPE     , C1.CREDIT_YN  , C1.WON_CALC_BAS   , C1.TAX_CALC_TYPE
		           , C1.TAX_TYPE
		    ORDER BY C1.CUSTOM_NAME, A.SALE_DATE, A.BILL_NUM, A.SALE_AMT_O

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select  id="popupServiceImpl.selectSaslotPopup" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @SerialNo       NVARCHAR(20)   /* Serial No           */

	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
	          , @gubun          NVARCHAR(01)   /* 판매  기존이력 구분      */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @DivCode  = #{DIV_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @SerialNo = #{SERIAL_NO} + '%'
	    SET @gubun    = #{GUBUN}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

		IF(@gubun = '1')
		BEGIN
		    SELECT A.COMP_CODE                                      /* 법인코드       */
		         , A.DIV_CODE                                       /* 사업장         */
		         , A.SALE_CUSTOM_CODE  AS  CUSTOM_CODE              /* 거래처         */
				 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
				        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
				                            ELSE C1.CUSTOM_NAME
				    END AS CUSTOM_NAME                              /* 거래처명       */
		         , B.ITEM_CODE                                      /* 품목코드       */
		         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
				        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
				                            ELSE C2.ITEM_NAME
				    END AS ITEM_NAME                                /* 품목명         */
				 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
		         , C.LOT_NO   		  AS SERIAL_NO                  /* S/N            */
		         , A.SALE_DATE                                      /* 매출일         */
		         , ISNULL(B.WARR_MONTH,'00') AS WARR_MONTH          /* 보증기간       */
		         , CASE WHEN ISNULL(M1.REF_CODE1,'') = ''
		                THEN ''
		                ELSE CASE WHEN ISNUMERIC(M1.REF_CODE1) != 1
		                          THEN ''
		                          ELSE CONVERT(NVARCHAR(8),DATEADD(MONTH, CONVERT(INTEGER,M1.REF_CODE1),CONVERT(DATETIME,A.SALE_DATE)),112)
		                      END
		            END AS WARR_DATE                                /* 보증일         */
		         , B.BILL_NUM                                       /* 매출번호       */
		         , B.BILL_SEQ                                       /* 매출순번       */
		         , ISNULL(D.CONT_FR_DATE,'') AS CONT_FR_DATE        /* 유지보수기간FR */
		         , ISNULL(D.CONT_TO_DATE,'') AS CONT_TO_DATE        /* 유지보수기간TO */
		         , ISNULL(D.CONT_GRADE  ,'') AS CONT_GRADE          /* 유지보수등급   */
		      FROM            SSA100T A  WITH (NOLOCK)
		           INNER JOIN SSA110T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                              AND B.DIV_CODE     = A.DIV_CODE
		                                              AND B.BILL_NUM     = A.BILL_NUM
		           INNER JOIN BTR100T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                              AND C.DIV_CODE     = B.DIV_CODE
		                                              AND C.INOUT_NUM    = B.INOUT_NUM
		                                              AND C.INOUT_SEQ    = B.INOUT_SEQ
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                              AND C2.ITEM_CODE   = B.ITEM_CODE
				   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = B.COMP_CODE
				                                      AND M1.MAIN_CODE   = 'S166'
				                                      AND M1.SUB_CODE    = B.WARR_MONTH
		           LEFT  JOIN (SELECT A.COMP_CODE
		                            , A.DIV_CODE
		                            , A.CUSTOM_CODE
		                            , B.ITEM_CODE
		                            , B.LOT_NO
		                            , A.CONT_FR_DATE
		                            , A.CONT_TO_DATE
		                            , A.CONT_GRADE
		                         FROM            SCN100T A WITH (NOLOCK)
		                              INNER JOIN SCN110T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                                AND B.DIV_CODE  = A.DIV_CODE
		                                                                AND B.CONT_NUM  = A.CONT_NUM) D ON D.COMP_CODE     = A.COMP_CODE
		                                                                                               AND D.DIV_CODE      = A.DIV_CODE
		                                                                                               AND D.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		                                                                                               AND D.CONT_FR_DATE &gt;= A.SALE_DATE
		                                                                                               AND D.CONT_TO_DATE &lt;= A.SALE_DATE
		                                                                                               AND D.ITEM_CODE     = B.ITEM_CODE
		                                                                                               AND D.LOT_NO        = C.LOT_NO
		     WHERE A.COMP_CODE  = @CompCode
		       AND A.DIV_CODE   = @DivCode
		       AND C.LOT_NO  LIKE @SerialNo
		     ORDER BY A.COMP_CODE, A.DIV_CODE, A.SALE_CUSTOM_CODE, B.ITEM_CODE, A.SALE_DATE

		END
		ELSE
		BEGIN
			SELECT A.COMP_CODE                                      /* 법인코드       */
		         , A.DIV_CODE                                       /* 사업장         */
		         , A.CUSTOM_CODE                                    /* 거래처         */
				 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
				        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
				                            ELSE C1.CUSTOM_NAME
				    END AS CUSTOM_NAME                              /* 거래처명       */
		         , A.ITEM_CODE                                      /* 품목코드       */
		         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
				        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
				                            ELSE C2.ITEM_NAME
				    END AS ITEM_NAME                                /* 품목명         */
				 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
		         , A.SERIAL_NO                                      /* S/N            */
		         , A.SALE_DATE                                      /* 매출일         */
		         , A.WARR_MONTH          							/* 보증기간       */
		         , A.WARR_DATE                                      /* 보증일         */
		         , A.BILL_NUM                                       /* 매출번호       */
		         , A.BILL_SEQ                                       /* 매출순번       */
		         , ISNULL(D.CONT_FR_DATE,'') AS CONT_FR_DATE        /* 유지보수기간FR */
		         , ISNULL(D.CONT_TO_DATE,'') AS CONT_TO_DATE        /* 유지보수기간TO */
		         , ISNULL(D.CONT_GRADE  ,'') AS CONT_GRADE          /* 유지보수등급   */
		      FROM            SAS100T A  WITH (NOLOCK)
		           INNER JOIN SAS300T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                              AND B.DIV_CODE     = A.DIV_CODE
		                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		           LEFT  JOIN SSA110T C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                              AND C.DIV_CODE     = A.DIV_CODE
		                                              AND C.BILL_NUM     = A.BILL_NUM
		                                              AND C.BILL_SEQ     = A.BILL_SEQ
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                              AND C2.ITEM_CODE   = A.ITEM_CODE
		           LEFT  JOIN (SELECT A.COMP_CODE
		                            , A.DIV_CODE
		                            , A.CUSTOM_CODE
		                            , B.ITEM_CODE
		                            , B.LOT_NO
		                            , A.CONT_FR_DATE
		                            , A.CONT_TO_DATE
		                            , A.CONT_GRADE
		                         FROM            SCN100T A WITH (NOLOCK)
		                              INNER JOIN SCN110T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                                AND B.DIV_CODE  = A.DIV_CODE
		                                                                AND B.CONT_NUM  = A.CONT_NUM) D ON D.COMP_CODE     = A.COMP_CODE
		                                                                                               AND D.DIV_CODE      = A.DIV_CODE
		                                                                                               AND D.CUSTOM_CODE   = A.CUSTOM_CODE
		                                                                                               AND D.CONT_FR_DATE &gt;= A.SALE_DATE
		                                                                                               AND D.CONT_TO_DATE &lt;= A.SALE_DATE
		                                                                                               AND D.ITEM_CODE     = A.ITEM_CODE
		                                                                                               AND D.LOT_NO        = A.SERIAL_NO
		     WHERE A.COMP_CODE     = @CompCode
		       AND A.DIV_CODE      = @DivCode
		       AND A.SERIAL_NO  LIKE @SerialNo
		     ORDER BY A.COMP_CODE, A.DIV_CODE, B.REPAIR_DATE DESC, B.REPAIR_NUM
		 END
	</select>
	<select  id="popupServiceImpl.selectReceiptNumPopup" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @ReceiptDateFr  NVARCHAR(08)   /* 접수일기간Fr        */
	          , @ReceiptDateTo  NVARCHAR(08)   /* 접수일기간To        */

	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

	    SET @CompCode      = #{S_COMP_CODE}
	    SET @DivCode       = #{DIV_CODE}
	    SET @ReceiptDateFr = #{RECEIPT_DATE_FR}
	    SET @ReceiptDateTo = #{RECEIPT_DATE_TO}

	    SET @UserId   = #{S_USER_ID}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.RECEIPT_NUM                                    /* 접수번호       */
	         , A.RECEIPT_DATE                                   /* 접수일         */
	         , A.ITEM_CODE                                      /* 품목코드       */
	         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
			 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
	         , A.SERIAL_NO                                      /* Serial No      */
	         , A.CUSTOM_CODE                                    /* 거래처         */
			 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                            ELSE C1.CUSTOM_NAME
			    END AS CUSTOM_NAME                              /* 거래처명       */
			 , A.RECEIPT_PRSN                                   /* 담당자         */
	         , C3.USER_NAME                                     /* 담당자         */
	         , CASE WHEN A.AS_STATUS IN ('30','40','90')
	                THEN 'Y'
	                ELSE 'N'
	            END AS REPAIR_YN                                /* 수리여부       */
	         , ISNULL(B.REPAIR_RANK,'') AS REPAIR_RANK          /* 수리랭크       */
	         , A.SALE_DATE										/* 판매일          */
	         , A.WARR_MONTH										/* 보증기간        */
	         , A.WARR_DATE										/* 보증일          */
	         , A.REMARK											/* 접수내용        */
	         , A.MACHINE_TYPE									/* 장비유형        */
	         , CASE WHEN WARR_DATE &lt;= A.RECEIPT_DATE THEN 'Y'
	                ELSE 'N'
	           END		AS COST_YN								/* 유무상         */
	         , A.IN_DATE                                        /* 입고일         */
	         , C1.WON_CALC_BAS
	         , C1.TAX_TYPE
	      FROM            SAS100T A  WITH (NOLOCK)
	           LEFT  JOIN SAS200T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
	                                              AND C1.CUSTOM_CODE = A.CUSTOM_CODE
	           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
	                                              AND C2.ITEM_CODE   = A.ITEM_CODE
			   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.USER_ID     = A.RECEIPT_PRSN
	     WHERE A.COMP_CODE     = @CompCode
	       AND A.DIV_CODE      = @DivCode
	       AND A.RECEIPT_DATE &gt;= @ReceiptDateFr
	       AND A.RECEIPT_DATE &lt;= @ReceiptDateTo
	     <if test="@foren.Ognl@isNotEmpty(SERIAL_NO)">
		   AND   A.SERIAL_NO LIKE '%' + #{SERIAL_NO} +'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(AS_STATUS)">
		   AND   A.AS_STATUS = #{AS_STATUS}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND   A.ITEM_CODE = #{ITEM_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND   A.CUSTOM_CODE = #{CUSTOM_CODE}
		  </if>
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.RECEIPT_NUM
	</select>
	<select  id="popupServiceImpl.selectQuotNumPopup" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @QuotDateFr     NVARCHAR(08)   /* 수리견적일기간Fr    */
	          , @QuotDateTo     NVARCHAR(08)   /* 수리견적일기간To    */

	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

	    SET @CompCode   = #{S_COMP_CODE}
	    SET @DivCode    = #{DIV_CODE}
	    SET @QuotDateFr = #{QUOT_DATE_FR}
	    SET @QuotDateTo = #{QUOT_DATE_TO}

	    SET @UserId     = #{S_USER_ID}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.QUOT_DATE                                      /* 견적일         */
	         , A.QUOT_NUM                                       /* 수리견적번호   */
	         , B.CUSTOM_CODE                                    /* 거래처         */
			 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                            ELSE C1.CUSTOM_NAME
			    END AS CUSTOM_NAME                              /* 거래처명       */
	         , B.ITEM_CODE                                      /* 품목코드       */
	         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
			 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
	         , B.SERIAL_NO                                      /* Serial No      */
	         , C3.USER_NAME             AS QUOT_PRSN            /* 담당자         */
	         , ISNULL(A.REPAIR_RANK,'') AS REPAIR_RANK          /* 수리랭크       */
	         , A.COST_YN                                        /* 유무상         */
	         , B.AS_STATUS                                      /* 진행상태       */
	         , B.RECEIPT_NUM									/* 접수번호       */
	         , B.SALE_DATE										/* 판매일         */
	         , B.WARR_MONTH										/* 보증기간       */
	         , B.RECEIPT_PRSN	                                 /* 접수자          */
	         , C4.USER_NAME   AS RECEIPT_PRSN_NAME               /* 접수자          */
	         , B.IN_DATE                                        /* 입고일          */
	         , A.REMARK       AS QUOT_REMARK                    /* 견적전달내용   */
	         , B.REMARK		  AS RECEIPT_REMARK                 /* 접수내용       */
	         , A.FILE_NUM										/* 파일번호      */
	         , B.MACHINE_TYPE
	         , C1.WON_CALC_BAS
	         , C1.TAX_TYPE
	      FROM            SAS200T A  WITH (NOLOCK)
	           INNER JOIN SAS100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
	                                              AND C1.CUSTOM_CODE = B.CUSTOM_CODE
	           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
	                                              AND C2.ITEM_CODE   = B.ITEM_CODE
			   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.USER_ID     = A.QUOT_PRSN
			   LEFT  JOIN BSA300T C4 WITH (NOLOCK) ON C4.COMP_CODE   = B.COMP_CODE
			                                      AND C4.USER_ID     = B.RECEIPT_PRSN
	     WHERE A.COMP_CODE  = @CompCode
	       AND A.DIV_CODE   = @DivCode
	       AND A.QUOT_DATE &gt;= @QuotDateFr
	       AND A.QUOT_DATE &lt;= @QuotDateTo
	       <if test="@foren.Ognl@isNotEmpty(SERIAL_NO)">
		   AND   B.SERIAL_NO LIKE '%' + #{SERIAL_NO} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(AS_STATUS)">
		   AND   B.AS_STATUS = #{AS_STATUS}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND   B.ITEM_CODE = #{ITEM_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND   B.CUSTOM_CODE = #{CUSTOM_CODE}
		  </if>
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.QUOT_DATE, A.QUOT_NUM
	</select>
	<select  id="popupServiceImpl.selectRepairNumPopup" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @RepairDateFr     NVARCHAR(08)   /* 수리견적일기간Fr    */
	          , @RepairDateTo     NVARCHAR(08)   /* 수리견적일기간To    */

	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

	    SET @CompCode     = #{S_COMP_CODE}
	    SET @DivCode      = #{DIV_CODE}
		SET @RepairDateFr = #{REPAIR_DATE_FR}
	    SET @RepairDateTo = #{REPAIR_DATE_TO}
	    SET @UserId     = #{S_USER_ID}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.REPAIR_NUM                                     /* 수리번호       */
	         , A.REPAIR_DATE                                    /* 수리일         */
	         , B.CUSTOM_CODE                                    /* 거래처         */
			 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                            ELSE C1.CUSTOM_NAME
			    END AS CUSTOM_NAME                              /* 거래처명       */
	         , B.ITEM_CODE                                      /* 품목코드       */
	         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
			 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
	         , B.SERIAL_NO                                      /* Serial No      */
	         , A.REPAIR_PRSN                                    /* 수리담당자     */
	         , C3.USER_NAME                                     /* 수리담당자명   */
	         , A.COST_YN                                        /* 유무상         */
	         , A.BAD_LOC_CODE                                   /* 위치코드       */
	         , A.BAD_CONDITION_CODE                             /* 증상코드       */
	         , A.BAD_REASON_CODE                                /* 원인코드       */
	         , A.SOLUTION_CODE                                  /* 해결코드       */
	         , A.REPAIR_REMARK                                  /* 수리내용       */
	         , A.QUOT_NUM                                       /* 수리견적번호   */
	         , A.RECEIPT_NUM                                    /* AS접수번호     */
	         , A.REPAIR_RANK                                    /* 수리랭크     */
	      FROM            SAS300T A  WITH (NOLOCK)
	           INNER JOIN SAS100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
	                                              AND C1.CUSTOM_CODE = B.CUSTOM_CODE
	           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
	                                              AND C2.ITEM_CODE   = B.ITEM_CODE
			   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.USER_ID     = A.REPAIR_PRSN
	     WHERE A.COMP_CODE  = @CompCode
	       AND A.DIV_CODE   = @DivCode
		   AND A.REPAIR_DATE &gt;= @RepairDateFr
	       AND A.REPAIR_DATE &lt;= @RepairDateTo
	       <if test="@foren.Ognl@isNotEmpty(SERIAL_NO)">
		   AND   B.SERIAL_NO LIKE '%' + #{SERIAL_NO} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND   B.ITEM_CODE LIKE  #{ITEM_CODE} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND   C2.ITEM_NAME LIKE  '%'+ #{ITEM_NAME} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND   B.CUSTOM_CODE LIKE  '%'+ #{CUSTOM_CODE} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND   C1.CUSTOM_NAME LIKE  '%'+ #{CUSTOM_NAME} +'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(AS_STATUS)">
		   AND   B.AS_STATUS = #{AS_STATUS}
		   </if>
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.REPAIR_DATE, A.REPAIR_NUM
	</select>
	<select  id="popupServiceImpl.selectRepairHistoryPopup" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @RepairDateFr     NVARCHAR(08)   /* 수리견적일기간Fr    */
	          , @RepairDateTo     NVARCHAR(08)   /* 수리견적일기간To    */

	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

	    SET @CompCode     = #{S_COMP_CODE}
	    SET @DivCode      = #{DIV_CODE}

	    SET @UserId     = #{S_USER_ID}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.REPAIR_NUM                                     /* 수리번호       */
	         , A.REPAIR_DATE                                    /* 수리일         */
	         , B.CUSTOM_CODE                                    /* 거래처         */
			 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                            ELSE C1.CUSTOM_NAME
			    END AS CUSTOM_NAME                              /* 거래처명       */
	         , B.ITEM_CODE                                      /* 품목코드       */
	         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
			 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
	         , B.SERIAL_NO                                      /* Serial No      */
	         , A.REPAIR_PRSN                                    /* 수리담당자     */
	         , C3.USER_NAME                                     /* 수리담당자명   */
	         , A.COST_YN                                        /* 유무상         */
	         , A.BAD_LOC_CODE                                   /* 위치코드       */
	         , A.BAD_CONDITION_CODE                             /* 증상코드       */
	         , A.BAD_REASON_CODE                                /* 원인코드       */
	         , A.SOLUTION_CODE                                  /* 해결코드       */
	         , A.REPAIR_REMARK                                  /* 수리내용       */
	         , A.QUOT_NUM                                       /* 수리견적번호   */
	         , A.RECEIPT_NUM                                    /* AS접수번호     */
	         , A.REPAIR_RANK                                    /* 수리랭크     */
	      FROM            SAS300T A  WITH (NOLOCK)
	           INNER JOIN SAS100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM
	           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
	                                              AND C1.CUSTOM_CODE = B.CUSTOM_CODE
	           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
	                                              AND C2.ITEM_CODE   = B.ITEM_CODE
			   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.USER_ID     = A.REPAIR_PRSN
	     WHERE A.COMP_CODE  = @CompCode
	       AND A.DIV_CODE   = @DivCode
		   AND B.SERIAL_NO = #{SERIAL_NO}
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.REPAIR_DATE, A.REPAIR_NUM
	</select>
	<select id="popupServiceImpl.selectBadCodePopup"  parameterType="Map" resultType="rMap">
		SELECT A.PROG_WORK_CODE
			 , A.PROG_WORK_NAME
			 , B.SUB_CODE AS BAD_CODE
			 , B.CODE_NAME AS BAD_NAME
		  FROM      PBS200T A WITH (NOLOCK)
		 INNER JOIN BSA100T B WITH (NOLOCK)  ON A.COMP_CODE=B.COMP_CODE
		            						AND A.PROG_WORK_CODE=B.REF_CODE2
		            						AND B.MAIN_CODE='P003'
		WHERE A.COMP_CODE=#{S_COMP_CODE}
		  AND A.DIV_CODE=ISNULL(#{DIV_CODE}, #{S_DIV_CODE})
		 <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		  AND A.WORK_SHOP_CODE=#{WORK_SHOP_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	 		AND (A.PROG_WORK_CODE LIKE #{TXT_SEARCH} + '%'
		 	OR B.CODE_NAME  LIKE '%'+ #{TXT_SEARCH} + '%' )
		 </if>
		 <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
			<if test="@foren.Ognl@isNotEmpty(BAD_CODE)">
			AND (A.PROG_WORK_CODE LIKE #{BAD_CODE} + '%'
		 	OR B.CODE_NAME  LIKE '%'+ #{BAD_CODE} + '%' )
			</if>
			<if test="@foren.Ognl@isNotEmpty(BAD_NAME)">
			AND (A.PROG_WORK_CODE LIKE #{BAD_NAME} + '%'
		 	OR B.CODE_NAME LIKE '%'+ #{BAD_NAME} + '%' )
			</if>
		 </if>
		  AND A.USE_YN='Y'
		ORDER BY A.PROG_WORK_CODE, B.SORT_SEQ

	</select>

<!-- 20201125 추가 -->
	<select id="popupServiceImpl.divPumok_WM" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.divPumok_WM*/
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)													   AS ITEM_NAME
				 , A.OEM_ITEM_CODE
				 , ISNULL(A.SPEC, '')											 AS SPEC
				 , A.STOCK_UNIT
				 , A.ORDER_UNIT
				 , A.TRNS_RATE
				 , A.BASIS_P
				 , A.SALE_BASIS_P
				 , A.SAFE_STOCK_Q
				 , A.EXPENSE_RATE
				 , A.SPEC_NUM
				 , ISNULL(A.WH_CODE, '')										  AS WH_CODE
				 , A.WORK_SHOP_CODE
				 , A.DIV_CODE
				 , A.OUT_METH
				 , A.ITEM_MAKER
				 , A.ITEM_MAKER_PN
				 , A.PURCH_LDTIME
				 , A.MINI_PURCH_Q
				 , A.UNIT_WGT
				 , A.WGT_UNIT
				 , A.ITEM_ACCOUNT
				 , ISNULL(A.DOM_FORIGN, '1')									  AS DOM_FORIGN
				 , A.SUPPLY_TYPE
				 , A.HS_NO
				 , A.HS_NAME
				 , A.HS_UNIT
				 , A.STOCK_UNIT												   AS STOCK_UNIT2
				 , A.TAX_TYPE
				 , ISNULL(A.STOCK_CARE_YN, 'Y')								   AS STOCK_CARE_YN
				 , A.SALE_UNIT
				 , A.PUR_TRNS_RATE
				 , A.ITEM_GROUP
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
											 ELSE A.ITEM_GROUP_NAME
					 END)													   AS ITEM_GROUP_NAME
				 , A.ITEM_LEVEL1
				 , A.ITEM_LEVEL_NAME1											 AS ITEM_LEVEL_NAME1
				 , A.ITEM_LEVEL2
				 , A.ITEM_LEVEL_NAME2											 AS ITEM_LEVEL_NAME2
				 , A.ITEM_LEVEL3
				 , A.ITEM_LEVEL_NAME3											 AS ITEM_LEVEL_NAME3
				 , A.BARCODE													  AS BARCODE
				 , ISNULL(A.LOT_SIZING_Q, 0.0)									AS LOT_SIZING_Q
				 , ISNULL(A.MAX_PRODT_Q , 0.0)									AS MAX_PRODT_Q
				 , ISNULL(A.STAN_PRODT_Q, 0.0)									AS STAN_PRODT_Q
				 , A.PURCHASE_BASE_P
				 , A.TOTAL_ITEM
				 , A.INSPEC_YN
				 , A.UNIT_VOL
				 , A.VOL_UNIT
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.ITEM_COLOR
				 , A.MAIN_CUSTOM_CODE
				 , A.MAIN_CUSTOM_NAME
				 , A.LOT_YN
				 , A.OEM_ITEM_CODE
				 , A.INSPEC_YN
				 , A.CAR_TYPE
				 , A.ITEM_WIDTH
				 , A.PACK_QTY
				 , ISNULL(A.EXPIRATION_DAY, 0) AS EXPIRATION_DAY
				 , ISNULL(A.PRODUCT_LDTIME, 0) AS PRODUCT_LDTIME
				 --20190306 추가
				 , ISNULL(A.CARE_YN, 'N')										AS CARE_YN
				 , A.CARE_REASON
				 , R1.STOCK_Q
				 , A.BIG_BOX_BARCODE
	 			 , A.SMALL_BOX_BARCODE
				 , A.REMARK1
				 , A.REMARK2
				 , A.REMARK3
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
				 , Z1.GOOD_STOCK_Q AS BIV150_G_STOCK_Q
<!-- 20200824 추가: UPN 코드 추가 -->
                 , A.UPN_CODE
			  FROM BPR200TV A
			  LEFT  JOIN (
				  SELECT
				  	S1.COMP_CODE
				  	, S1.DIV_CODE
				  	, S1.ITEM_CODE
				  	, SUM(S1.STOCK_Q) AS STOCK_Q
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIV100T S1 WITH (NOLOCK)
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  FROM   BIZ100T S1 WITH (NOLOCK)
			</if>
				  WHERE  S1.COMP_CODE = #{S_COMP_CODE}
				  AND	S1.DIV_CODE  = #{DIV_CODE}
<!-- 20200402 추가: 외주실사등록에서 외주 품목 클릭 시 기존로직 외 외주 테이블에서 재고가져와야 하므로 분개로직 추가 -->
<!-- 기존  -->
			<if test="@foren.Ognl@isEmpty(OUT_CUSTOM_CODE)">
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
			</if>
<!-- 외주에서 호출했을 때 -->
			<if test="@foren.Ognl@isNotEmpty(OUT_CUSTOM_CODE)">
				  AND	S1.CUSTOM_CODE  = #{OUT_CUSTOM_CODE}
				  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.CUSTOM_CODE
			</if>
			  ) R1 ON R1.COMP_CODE = A.COMP_CODE
				  AND R1.DIV_CODE  = A.DIV_CODE
				  AND R1.ITEM_CODE = A.ITEM_CODE
<!-- 20200515 추가: 창고재고 가져오기 위한 로직 추가 -->
			LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
			              FROM BIV150TV WITH(NOLOCK)
			             GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE) Z1 ON Z1.COMP_CODE = A.COMP_CODE
			                                                                 AND Z1.DIV_CODE  = A.DIV_CODE
			                                                                 AND Z1.ITEM_CODE = A.ITEM_CODE
			                                                                 AND Z1.WH_CODE   = A.WH_CODE
			LEFT  JOIN S_BPR210T_WM WM WITH(NOLOCK) ON WM.COMP_CODE  = A.COMP_CODE
			                                       AND WM.DIV_CODE   = A.DIV_CODE
			                                       AND WM.ITEM_CODE  = A.ITEM_CODE
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
				AND A.USE_YN = 'Y'
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
				AND A.ITEM_ACCOUNT IN					  -- multiselect 로 인해 item_account 수정 2018.11.20
					<foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 	AND (WM.ITEM_GROUP = (SELECT ITEM_GROUP
									   FROM       S_BPR210T_WM A WITH(NOLOCK)
									   INNER JOIN BPR200T      B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									                                         AND B.DIV_CODE  = A.DIV_CODE
									                                         AND B.ITEM_CODE = A.ITEM_CODE
									  WHERE A.COMP_CODE = #{S_COMP_CODE}
									    AND A.DIV_CODE  = #{DIV_CODE}
									   <if test="USE_YN == &quot;Y&quot;">
										AND A.USE_YN    = #{USE_YN}
									   </if>
									    AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%' OR B.ITEM_NAME LIKE #{TXT_SEARCH2}	 + '%'))
				 	<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
				 		</if>
				 	</if>
				 	)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{ITEM_CODE} + '%'
				 		</if>
				 	</if>
				 	 )
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND (A.ITEM_CODE LIKE #{ITEM_NAME} + '%'
				 	 OR A.ITEM_NAME LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 	 <if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ REPLACE(#{ITEM_NAME}, '[', '[[]') + '%'
				 		</if>
				 	</if>
				 	)
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
					<if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE DIV_CODE = #{DIV_CODE})
					</if>
					<if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
						AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE
												FROM BPR500T
											   WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE}
												 AND DIV_CODE = #{DIV_CODE})
					</if>
			   </if>

			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
				   AND ${ADD_QUERY1} #{S_COMP_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
				   ${ADD_QUERY2} #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
				   ${ADD_QUERY3}
			   </if>

		<if test="@foren.Ognl@isNotEmpty(FIND_TYPE) and @foren.Ognl@isNotEmpty(TXT_SEARCH)">
			AND	(
				   ${QRY_TYPE} LIKE '%' + #{TXT_SEARCH} + '%'
				 )
		</if>
			   /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
			   AND ((A.ORDER_PRSN = @OrderPrsn								  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
				 OR ((A.ORDER_PRSN = @OrderPrsn OR ISNULL(A.ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
				 OR (@OrderPrsn = ''))
			   */
			   /* (차후에 처리) 검색항목 조건처리 */
	<!-- 	<if test="RDO == 1">

		</if>
		<if test="RDO == 2">
			ORDER BY	CASE @RefItem
					 WHEN '1' THEN ITEM_NAME1
					 WHEN '2' THEN ITEM_NAME2
							  ELSE ITEM_NAME
				END
		</if> -->
		<choose>
			<when test="RDO == 1">

				ORDER BY	A.ITEM_CODE

			</when>
			<when test="RDO == 2">

				ORDER BY	CASE @RefItem
					 WHEN '1' THEN A.ITEM_NAME1
					 WHEN '2' THEN A.ITEM_NAME2
							  ELSE A.ITEM_NAME
				END

			</when>
			<otherwise>

				 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT

			</otherwise>


		</choose>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END

	</select>
	<select id="popupServiceImpl.as_Pumok_code" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.as_Pumok_code */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 구매담당자정보 조회 */
			DECLARE @OrderPrsn		NVARCHAR(02)
				  , @OrderPrsnYN	NVARCHAR(01)

			SELECT TOP 1 @OrderPrsn   = SUB_CODE
				 ,	   @OrderPrsnYN = 'Y'
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE  = #{S_COMP_CODE}
			   AND MAIN_CODE  = 'M201'
			   AND SUB_CODE  != '$'
			   AND REF_CODE2  = #{S_USER_ID}
			   AND USE_YN	 = 'Y'

			SET @OrderPrsn   = ISNULL(@OrderPrsn  , '' )
			SET @OrderPrsnYN = ISNULL(@OrderPrsnYN, 'N')

			/* 데이터 조회 */
			SELECT   A.ITEM_CODE
				    , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
				    		 WHEN @RefItem = '1' THEN A.ITEM_NAME1
				    		 WHEN @RefItem = '2' THEN A.ITEM_NAME2
				    							 ELSE A.ITEM_NAME
				    	 END)													AS ITEM_NAME
				    , A.OEM_ITEM_CODE
				    , ISNULL(A.SPEC, '')											AS SPEC
				    , A.STOCK_UNIT
				    , A.SALE_BASIS_P
				    , A.SAFE_STOCK_Q
				    , ISNULL(A.WH_CODE, '')										AS WH_CODE
				    , A.WORK_SHOP_CODE
				    , A.DIV_CODE
				    , A.STOCK_UNIT												AS STOCK_UNIT2
				    , ISNULL(A.STOCK_CARE_YN, 'Y')								AS STOCK_CARE_YN
				    , A.LOT_YN
				    , A.INSPEC_YN
				    , ISNULL(R1.STOCK_Q, 0)                                     AS STOCK_Q
				    , R1.PABSTOCK_YN
				    , Z3.TYPE
				    , Z3.ITEM_P                                                 AS PURCHASE_P
			  FROM BPR200TV A
			  LEFT  JOIN (SELECT   S1.COMP_CODE
				  				 , S1.DIV_CODE
				  				 , S1.ITEM_CODE
				  				 , SUM(S1.STOCK_Q) AS STOCK_Q
				  				 , Z2.PABSTOCK_YN
						    FROM  BIV150TV S1 WITH (NOLOCK)
						    LEFT JOIN BSA220T Z2  WITH(NOLOCK)    ON Z2.COMP_CODE   = S1.COMP_CODE
                                                                 AND Z2.TYPE_LEVEL  = S1.DIV_CODE
																 AND Z2.TREE_CODE   = S1.WH_CODE
																 AND Z2.PABSTOCK_YN = 'Y'
						   WHERE S1.COMP_CODE = #{S_COMP_CODE}
						     AND S1.DIV_CODE  = #{DIV_CODE}
						   GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, Z2.PABSTOCK_YN
						                                                    ) R1 ON R1.COMP_CODE = A.COMP_CODE
				                                                                AND R1.DIV_CODE  = A.DIV_CODE
				                                                                AND R1.ITEM_CODE = A.ITEM_CODE

            LEFT JOIN BPR400T Z3  WITH(NOLOCK)                                   ON Z3.COMP_CODE = A.COMP_CODE
			                                                                    AND Z3.DIV_CODE  = '*'
			                                                                    AND Z3.TYPE      = '2'
																			    AND Z3.ITEM_CODE   = A.ITEM_CODE
																			    AND Z3.CUSTOM_CODE = #{CUSTOM_CODE}
																			    AND Z3.APLY_START_DATE = (SELECT TOP 1  MAX(X.APLY_START_DATE) AS APLY_START_DATE
																										    FROM BPR400T X WITH(NOLOCK)
																										   WHERE X.COMP_CODE		= Z3.COMP_CODE
																										     AND X.DIV_CODE			= Z3.DIV_CODE
																										     AND X.TYPE				= Z3.TYPE
																										     AND X.ITEM_CODE	    = Z3.ITEM_CODE
																										     AND X.MONEY_UNIT		= Z3.MONEY_UNIT
																										     AND X.ORDER_UNIT		= Z3.ORDER_UNIT
																										     AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
																										     AND X.APLY_END_DATE   &gt; CONVERT(NVARCHAR(08), GETDATE(), 112) )
			 WHERE A.COMP_CODE	   = #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(USE_YN)">
			   AND A.USE_YN = #{USE_YN}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE		= #{DIV_CODE}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT_ARRAY)">
			   AND A.ITEM_ACCOUNT IN
					<foreach collection="ITEM_ACCOUNT_ARRAY" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			 		AND (A.ITEM_CODE LIKE #{TXT_SEARCH2} + '%'
				 	OR A.ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%'
				 	<if test="@foren.Ognl@isNotEmpty(SPEC_SEARCH)">
				 		<if test="SPEC_SEARCH == &quot;Y&quot;">
				 			OR A.SPEC LIKE '%'+ #{TXT_SEARCH2} + '%'
				 		</if>
				 	</if>
				 	)
			   </if>
			   <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
				  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
					AND A.ITEM_CODE = #{ITEM_CODE}
				  </if>
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
			   AND A.OEM_ITEM_CODE	LIKE #{OEM_ITEM_CODE}+'%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
			   AND A.SUPPLY_TYPE	 = #{SUPPLY_TYPE}
			   </if>
               <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
               AND A.DOM_FORIGN      = #{DOM_FORIGN}
               </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			   AND A.ITEM_LEVEL1	 = #{ITEM_LEVEL1}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			   AND A.ITEM_LEVEL2	 = #{ITEM_LEVEL2}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			   AND A.ITEM_LEVEL3	 = #{ITEM_LEVEL3}
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
			   AND A.ITEM_GROUP	  = #{ITEM_GROUP}
			   </if>


			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
			   AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
			   </if>
				 ORDER BY  A.ITEM_CODE,A.SPEC,A.STOCK_UNIT

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
	<select id="popupServiceImpl.selectASAssetPopup" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode       NVARCHAR(08)    /* (필수)법인코드          */
		          , @DivCode        NVARCHAR(08)    /* (필수)사업장코드        */
		          , @UserId         NVARCHAR(100)   /* (필수)사용자ID          */

		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @UserId      = #{S_USER_ID}

		    -- 반납예정일 정보
		    BEGIN
		        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202104231210'))
		            DROP TABLE #OMEGA202104231210

		        CREATE TABLE #OMEGA202104231210
		             ( COMP_CODE            NVARCHAR(08)
		             , DIV_CODE             NVARCHAR(08)
		             , LAST_REQ_NO_SEQ      NVARCHAR(20)
		             , REQ_NO               NVARCHAR(20)
		             , REQ_SEQ              NUMERIC(5, 0)
		             , ASST_CODE            NVARCHAR(20)
		             , USE_FR_DATE          NVARCHAR(08)
		             , USE_TO_DATE          NVARCHAR(08)
		             , LAST_CHANGE_NO       NVARCHAR(20)
		             , LAST_CHANGE_SEQ      NUMERIC(5, 0)
		             , LAST_USE_FR_DATE     NVARCHAR(08)
		             , LAST_USE_TO_DATE     NVARCHAR(08)
		             , RETURN_DATE          NVARCHAR(08) )

		        INSERT #OMEGA202104231210
		             ( COMP_CODE    , DIV_CODE  , LAST_REQ_NO_SEQ, ASST_CODE )
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , MAX(B.REQ_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.REQ_SEQ), 5)) AS LAST_REQ_NO_SEQ
		             , B.ASST_CODE
		          FROM            SAT200T A WITH (NOLOCK)
		               INNER JOIN SAT210T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                 AND B.DIV_CODE  = A.DIV_CODE
		                                                 AND B.REQ_NO    = A.REQ_NO
		         WHERE A.COMP_CODE = @CompCode
		           AND A.DIV_CODE  = @DivCode
		         GROUP BY A.COMP_CODE, A.DIV_CODE, B.ASST_CODE

		        UPDATE A
		           SET REQ_NO  = LEFT(A.LAST_REQ_NO_SEQ,14)
		             , REQ_SEQ = CONVERT(NUMERIC(5,0),RIGHT(A.LAST_REQ_NO_SEQ,5))
		          FROM #OMEGA202104231210 A

		        UPDATE A
		           SET USE_FR_DATE = B.USE_FR_DATE
		             , USE_TO_DATE = B.USE_TO_DATE
		          FROM #OMEGA202104231210 A
		               INNER JOIN SAT200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                 AND B.DIV_CODE  = A.DIV_CODE
		                                                 AND B.REQ_NO    = A.REQ_NO

		        UPDATE A
		           SET LAST_CHANGE_NO   = LEFT(B.LAST_CHANGE_NO_SEQ ,14)
		             , LAST_CHANGE_SEQ  = CONVERT(NUMERIC(5,0),RIGHT(B.LAST_CHANGE_NO_SEQ,5))
		          FROM #OMEGA202104231210 A
		               INNER JOIN
		               (SELECT A.COMP_CODE
		                     , A.DIV_CODE
		                     , A.REQ_NO
		                     , A.REQ_SEQ
		                     , MAX(B.CHANGE_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.CHANGE_SEQ), 5)) AS LAST_CHANGE_NO_SEQ
		                  FROM #OMEGA202104231210 A
		                       INNER JOIN SAT410T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                         AND B.DIV_CODE  = A.DIV_CODE
		                                                         AND B.REQ_NO    = A.REQ_NO
		                                                         AND B.REQ_SEQ   = A.REQ_SEQ
		                       INNER JOIN SAT400T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
		                                                         AND C.DIV_CODE  = B.DIV_CODE
		                                                         AND C.CHANGE_NO = B.CHANGE_NO
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.REQ_NO, A.REQ_SEQ) B ON B.COMP_CODE = A.COMP_CODE
		                                                                         AND B.DIV_CODE  = A.DIV_CODE
		                                                                         AND B.REQ_NO    = A.REQ_NO
		                                                                         AND B.REQ_SEQ   = A.REQ_SEQ

		        UPDATE A
		           SET LAST_USE_FR_DATE = B.USE_FR_DATE
		             , LAST_USE_TO_DATE = B.USE_TO_DATE
		          FROM #OMEGA202104231210 A
		               INNER JOIN SAT400T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                 AND B.DIV_CODE  = A.DIV_CODE
		                                                 AND B.CHANGE_NO = A.LAST_CHANGE_NO

		        UPDATE A
		           SET RETURN_DATE = (CASE WHEN ISNULL(LAST_USE_TO_DATE,'') = ''
		                                   THEN CONVERT(NVARCHAR(8),DATEADD(D, 1, USE_TO_DATE     ),112)
		                                   ELSE CONVERT(NVARCHAR(8),DATEADD(D, 1, LAST_USE_TO_DATE),112)
		                               END)
		          FROM #OMEGA202104231210 A
		    END

		    -- 최종 예약정보
		    BEGIN
		        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#OMEGA202104220441'))
		            DROP TABLE #OMEGA202104220441

		        CREATE TABLE #OMEGA202104220441
		             ( COMP_CODE            NVARCHAR(08)
		             , DIV_CODE             NVARCHAR(08)
		             , ASST_CODE            NVARCHAR(20)
		             , LAST_RESERVE_NO_SEQ  NVARCHAR(25)
		             , RESERVE_DATE         NVARCHAR(08)
		             , RESERVE_USER_ID      NVARCHAR(100)
		             , RESERVE_USER_NAME    NVARCHAR(100)
		             , USE_TO_DATE          NVARCHAR(08) )

		        INSERT #OMEGA202104220441
		             ( COMP_CODE    , DIV_CODE  , ASST_CODE    , LAST_RESERVE_NO_SEQ )
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , B.ASST_CODE
		             , MAX(B.RESERVE_NO + RIGHT('00000' + CONVERT(NVARCHAR,B.RESERVE_SEQ), 5)) AS LAST_RESERVE_NO_SEQ
		          FROM            SAT300T A WITH (NOLOCK)
		               INNER JOIN SAT310T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                                 AND B.DIV_CODE   = A.DIV_CODE
		                                                 AND B.RESERVE_NO = A.RESERVE_NO
		         WHERE A.COMP_CODE = @CompCode
		           AND A.DIV_CODE  = @DivCode
		         GROUP BY A.COMP_CODE, A.DIV_CODE, B.ASST_CODE

		        UPDATE A
		           SET RESERVE_DATE      = B.RESERVE_DATE
		             , RESERVE_USER_ID   = B.REQ_USER
		             , RESERVE_USER_NAME = C.USER_NAME
		             , USE_TO_DATE       = CONVERT(NVARCHAR(8),DATEADD(D, 1, B.USE_TO_DATE),112)
		          FROM #OMEGA202104220441 A
		               INNER JOIN SAT300T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                                 AND B.DIV_CODE   = A.DIV_CODE
		                                                 AND B.RESERVE_NO = LEFT(A.LAST_RESERVE_NO_SEQ,14)
		               LEFT  JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
		                                                 AND C.USER_ID    = B.REQ_USER
		    END

			/* 데이터 조회 */
		    SELECT A.COMP_CODE                                  -- 법인코드
		    	 , A.DIV_CODE                                   -- 사업장코드
		         , A.ASST_CODE                                  -- 자산코드
		         , A.ASST_NAME                                  -- 자산명(모델명)
		         , A.SERIAL_NO                                  -- S/N
		    	 , A.ASST_INFO                                  -- 자산정보(S178)
		    	 , A.ASST_GUBUN                                 -- 자산구분(S179)
		    	 , CASE WHEN ISNULL(A.NOW_LOC,'') = ''
		                THEN '창고'
		                ELSE ISNULL(A.NOW_LOC,'')
		            END AS NOW_LOC                              -- 현위치
		         , (CASE WHEN A.ASST_STATUS = 'S'
		                 THEN ISNULL(B.INOUT_DATE,'')
		                 ELSE ''
		             END) AS INOUT_DATE                         -- 창고입고일
		    	 , A.ASST_STATUS                                -- 현재상태(S177)
		         , (CASE WHEN A.ASST_STATUS = 'O'
		                 THEN ISNULL(F.RETURN_DATE,'')
		                 ELSE ''
		             END) AS RETURN_DATE                        -- 반납예정일
		         , (CASE WHEN ISNULL(A.RESERVE_YN,'N') = 'N'
		                 THEN ''
		                 ELSE LEFT(G.LAST_RESERVE_NO_SEQ,14)
		             END) AS RESERVE_NO                         -- 예약번호
		         , (CASE WHEN ISNULL(A.RESERVE_YN,'N') = 'N'
		                 THEN ''
		                 ELSE ISNULL(A.RESERVE_YN,'N')
		             END) AS RESERVE_STATUS   					-- 예약상태
		         , (CASE WHEN ISNULL(A.RESERVE_YN,'N') = 'N'
		                 THEN ''
		                 ELSE G.USE_TO_DATE
		             END) AS RESERVE_DATE                       -- 사용예정일(예약일자)
		         , (CASE WHEN ISNULL(A.RESERVE_YN,'N') = 'N'
		                 THEN ''
		                 ELSE G.RESERVE_USER_ID
		             END) AS RESERVE_USER_ID                    -- 예약담당자
		         , (CASE WHEN ISNULL(A.RESERVE_YN,'N') = 'N'
		                 THEN ''
		                 ELSE G.RESERVE_USER_NAME
		             END) AS RESERVE_USER_NAME                  -- 예약담당자
		    	 , A.ACCNT_ASST                                 -- 회계자산코드
		         , ISNULL(D.ASST_NAME,'') AS ACCNT_ASST_NAME    -- 회계자산명
		         , F.REQ_NO
		         , F.REQ_SEQ
		         , CONVERT(INT, RIGHT(G.LAST_RESERVE_NO_SEQ, 5)) AS RESERVE_SEQ
		         , A.RESERVE_YN
		      FROM SAT100T A WITH (NOLOCK)
		           LEFT JOIN (SELECT COMP_CODE
		                           , DIV_CODE
		                           , ASST_CODE
		                           , MAX(INOUT_DATE) AS INOUT_DATE
		                        FROM SAT600T WITH (NOLOCK)
		                       WHERE COMP_CODE = @CompCode
		                         AND DIV_CODE  = @DivCode
		                         AND INOUT_TYPE = '1'
		                       GROUP BY COMP_CODE, DIV_CODE, ASST_CODE) B ON B.COMP_CODE = A.COMP_CODE
		                                                                 AND B.DIV_CODE  = A.DIV_CODE
		                                                                 AND B.ASST_CODE = A.ASST_CODE
		           LEFT JOIN AISS300T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                             AND D.DIV_CODE  = A.DIV_CODE
		                                             AND D.ASST      = A.ACCNT_ASST
		           LEFT  JOIN #OMEGA202104231210 F    ON F.COMP_CODE = A.COMP_CODE
		                                             AND F.DIV_CODE  = A.DIV_CODE
		                                             AND F.ASST_CODE = A.ASST_CODE
		           LEFT  JOIN #OMEGA202104220441 G    ON G.COMP_CODE = A.COMP_CODE
		                                             AND G.DIV_CODE  = A.DIV_CODE
		                                             AND G.ASST_CODE = A.ASST_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		       AND (A.ASST_CODE LIKE #{TXT_SEARCH}+'%' OR A.ASST_NAME LIKE '%'+#{TXT_SEARCH}+'%')
		       </if>
		       <if test="ASST_STATUS == &quot;S&quot;">
		       AND A.ASST_STATUS = 'S'
		       </if>
		       <if test="ASST_STATUS == &quot;예약&quot;">
		       AND A.ASST_STATUS IN ('S' ,'O' )
		       </if>
		       <if test="ASST_STATUS == &quot;연장&quot;">
		       AND A.ASST_STATUS = 'O'
		       </if>
		       <if test="ASST_STATUS == &quot;이동&quot;">
		       AND A.ASST_STATUS = 'O'
		       </if>
		     ORDER BY A.ASST_CODE
		END
	</select>


	<select id="popupServiceImpl.vmiPumok" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.vmiPumok 20210803 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 데이터 조회 */
			SELECT A.ITEM_CODE
				 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
						 WHEN @RefItem = '1' THEN A.ITEM_NAME1
						 WHEN @RefItem = '2' THEN A.ITEM_NAME2
											 ELSE A.ITEM_NAME
					 END)						 AS ITEM_NAME
				 , ISNULL(A.SPEC, '') AS SPEC
				 , A.SALE_UNIT
			  FROM BPR200TV A WITH(NOLOCK)
		INNER JOIN BSA350T  B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
										  AND B.USER_ID     = #{S_USER_ID}
		INNER JOIN BCM100T  C WITH(NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
										  AND C.CUSTOM_CODE = B.CUSTOM_CODE
		INNER JOIN BPR400T  D WITH(NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
										  AND D.TYPE        = '2'
										--  AND D.DIV_CODE    = A.DIV_CODE
										  AND D.ITEM_CODE   = A.ITEM_CODE
										  AND D.CUSTOM_CODE = B.CUSTOM_CODE
										--  AND D.MONEY_UNIT  = C.MONEY_UNIT
										--  AND D.ORDER_UNIT  = A.ORDER_UNIT
										  AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN D.APLY_START_DATE AND D.APLY_END_DATE

			 WHERE A.COMP_CODE		= #{S_COMP_CODE}
			   AND A.DIV_CODE		= #{DIV_CODE}
			   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">
			   AND (A.ITEM_CODE 	LIKE 	  #{TXT_SEARCH2} + '%'
				OR A.ITEM_NAME		LIKE '%'+ #{TXT_SEARCH2} + '%')
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			   AND (A.ITEM_CODE		LIKE 	  #{ITEM_CODE} + '%'
				OR A.ITEM_NAME		LIKE '%'+ #{ITEM_CODE} + '%')
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			   AND (A.ITEM_CODE 	LIKE	  #{ITEM_NAME} + '%'
				OR A.ITEM_NAME 		LIKE '%'+ #{ITEM_NAME} + '%')
			   </if>

		  ORDER BY  A.ITEM_CODE, A.SPEC, A.STOCK_UNIT

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.selectModelPopup_MICS" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.selectModelPopup_MICS */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 데이터 조회 */
			SELECT	A.COMP_CODE
			,		A.MODEL_UNI_CODE	AS MODEL_CODE
			,		A.MODEL_NAME		AS MODEL_NAME
			,		A.PRODUCT_CODE

			FROM S_BMD100T_MEK A
			WHERE A.COMP_CODE		= #{S_COMP_CODE}
				<if test="@foren.Ognl@isNotEmpty(MODEL_NAME)">
					AND A.MODEL_NAME LIKE '%' + #{MODEL_NAME} + '%'
				</if>
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<select id="popupServiceImpl.selectWonsangiPopup" parameterType="Map" resultType="rMap">
		/* popupServiceImpl.selectWonsangiPopup */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE  @RefItem		NVARCHAR(01)

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = #{S_USER_ID}

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 데이터 조회 */
			SELECT	A.CUSTOM_CODE						--거래처코드
			,		B.CUSTOM_NAME						--거래처명
			,		A.FARM_CODE							--농가코드
			,		A.FARM_NAME							--농가명
			,		A.FARM_TYPE							--농가구분
			,		C.CODE_NAME		AS FARM_TYPE_NM		--농가구분명
			,		A.CERT_NO							--인증번호
			,		A.CERT_TYPE							--인증구분
			,		D.CODE_NAME		AS CERT_TYPE_NM		--인증구분명
			,		A.ITEM_NAME							--품목명
			,		A.ORIGIN		AS WONSANGI			--원산지
			FROM S_BCM106T_YP A

			INNER JOIN BCM100T		B ON	A.COMP_CODE   = B.COMP_CODE
										AND	A.CUSTOM_CODE = B.CUSTOM_CODE
			LEFT OUTER JOIN BSA100T C ON	C.COMP_CODE   = B.COMP_CODE
										AND C.MAIN_CODE   = 'Z006'
										AND C.SUB_CODE    = A.FARM_TYPE
			LEFT OUTER JOIN BSA100T D ON	D.COMP_CODE   = C.COMP_CODE
										AND D.MAIN_CODE   = 'Z001'
										AND D.SUB_CODE    = A.CERT_TYPE

			WHERE A.COMP_CODE		= #{S_COMP_CODE}
				<if test="@foren.Ognl@isNotEmpty(FARM_NAME)">
					AND A.FARM_NAME LIKE '%' + #{FARM_NAME} + '%'
				</if>
				<if test="@foren.Ognl@isNotEmpty(WONSANGI)">
					AND A.ORIGIN LIKE '%' + #{WONSANGI} + '%'
				</if>
			ORDER BY A.COMP_CODE, A.CUSTOM_CODE, A.FARM_CODE

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
</mapper>