<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tio100ukrvServiceImpl">
	<select id="tio100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		 --tio100ukrv.Ctio100ukrv[fntio110q] Query01
		SELECT A.DIV_CODE
		     , A.SO_SER_NO
		     , A.SO_SER
		     , A.ITEM_CODE
		     , uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},B.ITEM_CODE) as ITEM_NAME
		     , A.SPEC
		     , A.STOCK_UNIT_Q
		     , B.STOCK_UNIT
		     , A.TRNS_RATE
		     , A.QTY
		     , A.UNIT
		     , A.PRICE
		     , A.SO_AMT
		     , unilite.fnformat(#{S_COMP_CODE},isnull(C.EXCHANGE_RATE, 0), 'T_FSET_RS') EXCHANGE_RATE
		     , A.SO_AMT_WON
		     , A.HS_NO
		     , CASE WHEN H.HS_NAME IS NULL THEN B.HS_NAME
		            ELSE H.HS_NAME
		       END  AS HS_NAME
		     , uniLite.fnGetUserDate(#{S_COMP_CODE},A.DELIVERY_DATE)  DELIVERY_DATE
		     , A.MORE_PER_RATE
		     , A.LESS_PER_RATE
		     , A.CLOSE_FLAG
		     , A.USE_QTY
		     , A.INSPEC_FLAG
		     , A.ORDER_REQ_NUM
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		     , A.ORDER_NUM
		     , A.ORDER_SEQ
		     , A.PROJECT_NO
		     , A.COMP_CODE
		     , A.LOT_NO
		     , D.ITEM_ACCOUNT
		     , A.QTY AS ORDER_UNIT_Q
		  FROM TIA110T A INNER JOIN BPR100T B ON A.ITEM_CODE = B.ITEM_CODE
		                                     AND A.COMP_CODE = B.COMP_CODE
		                 INNER JOIN TIA100T C ON A.DIV_CODE  = C.DIV_CODE
		                                     AND A.SO_SER_NO = C.SO_SER_NO
		                                     AND A.COMP_CODE = C.COMP_CODE
		                 LEFT  JOIN TAA030T H ON A.HS_NO     = H.HS_NO
		                                     AND A.COMP_CODE = H.COMP_CODE
		                 INNER JOIN BPR200T D ON A.COMP_CODE = D.COMP_CODE
		                                     AND A.DIV_CODE  = D.DIV_CODE
		                                     AND A.ITEM_CODE = D.ITEM_CODE
			 WHERE A.SO_SER_NO = #{SO_SER_NO}
			   AND A.COMP_CODE = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			   AND A.DIV_CODE  = #{DIV_CODE}
		   </if>
		 ORDER BY A.SO_SER
	</select>
	<select id="tio100ukrvServiceImpl.selectForMaster" parameterType="Map" resultType="rMap">

		 --tio100ukrv.Ctio100ukrv[fntio100q] Query01
		SELECT
		       B.CUSTOM_NAME  BANK_NM
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, C.CUSTOM_CODE) AS EXPORTER_NM
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE) AS IMPORTER_NM
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, E.CUSTOM_CODE) AS AGENT_NM
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, F.CUSTOM_CODE) AS MANUFACTURER_NM
		     , G.TREE_NAME                                            AS EXPROT_DEPT_NM
		     , ISNULL(H.CNT, 0)                                       AS DETAIL_COUNT
		     , I.PJT_NAME                                             AS PROJECT_NAME
		     , A.DIV_CODE
		     , A.SO_SER_NO
		     , A.PROJECT_NO
		     , A.NATION_INOUT
		     , A.TRADE_TYPE
		     , A.EXPORTER
		     , A.IMPORTER
		     , A.MANUFACTURER
		     , A.AGENT
		     , A.DATE_DEPART
		     , A.DATE_EXP
		     , A.DATE_CONTRACT
		     , A.DATE_DELIVERY
		     , A.PAY_METHODE
		     , A.PAY_TERMS
		     , A.PAY_DURING
		     , A.TERMS_PRICE
		     , A.COND_PACKING
		     , A.METHD_CARRY
		     , A.METH_INSPECT
		     , A.DEST_PORT
		     , A.DEST_PORT_NM
		     , A.SHIP_PORT
		     , A.SHIP_PORT_NM
		     , A.DEST_FINAL
		     , A.PLACE_DELIVERY
		     , A.EXCHANGE_RATE
		     , A.AMT_UNIT
		     , A.SO_AMT
		     , A.SO_AMT_WON
		     , A.RECEIVE_AMT
		     , A.BANK_SENDING
		     , A.IMPORT_TYPE
		     , A.IMPORT_NM
		     , A.IMPORT_DEPT
		     , A.ORIGIN1
		     , A.ORIGIN2
		     , A.ORIGIN3
		     , A.SHIP_DT_TXT1
		     , A.SHIP_DT_TXT2
		     , A.SHIP_DT_TXT3
		     , A.FREE_TXT1
		     , A.FREE_TXT2
		     , A.FREE_TXT3
		     , A.AGREE_STATUS
		     , A.AGREE_PRSN
		     ,J.USER_NAME AS AGREE_PRSN_NAME
		     , A.AGREE_DATE
		     , A.BANK_SENDING
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, B.CUSTOM_CODE) AS BANK_SENDING_NM
		     , A.COMP_CODE
		  FROM TIA100T A LEFT  JOIN (SELECT DIV_CODE
		                                  , COMP_CODE
		                                  , SO_SER_NO
		                                  , COUNT(DIV_CODE) AS CNT
		                               FROM TIA110T
		                              GROUP BY DIV_CODE,COMP_CODE, SO_SER_NO
		                             ) H ON A.DIV_CODE  = H.DIV_CODE
		                                AND A.SO_SER_NO = H.SO_SER_NO
		                                AND A.COMP_CODE = H.COMP_CODE
		                 LEFT  JOIN BCM600T I ON A.PROJECT_NO    = I.PJT_CODE
		                                     AND A.COMP_CODE     = I.COMP_CODE
		                 LEFT  JOIN BCM100T B ON A.BANK_SENDING  = B.CUSTOM_CODE
		                                     AND A.COMP_CODE     = B.COMP_CODE
		                 LEFT  JOIN BCM100T C ON A.EXPORTER      = C.CUSTOM_CODE
		                                     AND A.COMP_CODE     = C.COMP_CODE
		                 LEFT  JOIN BCM100T D ON A.IMPORTER      = D.CUSTOM_CODE
		                                     AND A.COMP_CODE     = D.COMP_CODE
		                 LEFT  JOIN BCM100T E ON A.AGENT         = E.CUSTOM_CODE
		                                     AND A.COMP_CODE     = E.COMP_CODE
		                 LEFT  JOIN BCM100T F ON A.MANUFACTURER  = F.CUSTOM_CODE
		                                     AND A.COMP_CODE     = F.COMP_CODE
		                 LEFT  JOIN BSA220T G ON A.IMPORT_DEPT   = G.TREE_CODE
		                                     AND A.COMP_CODE     = G.COMP_CODE
		                                     AND G.USE_YN    = 'Y'
		                 --
		                 LEFT  JOIN BSA300T J ON A.AGREE_PRSN	= J.USER_ID
		                 					 AND A.COMP_CODE  = J.COMP_CODE

		 WHERE A.SO_SER_NO = #{SO_SER_NO}
		   AND A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}

		   AND A.TRADE_TYPE NOT IN ('2', '7')
	</select>

	<select id="tio100ukrvServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">

	 -- UTiFuncKrv.Public[fnOfferMaster] Query01
	 SELECT
	       A.DIV_CODE, A.SO_SER_NO
	       ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.Date_Depart) DATE_DEPART
	       ,A.IMPORTER
	       ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTERNM
	       ,A.EXPORTER
	       ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTERNM
	       ,A.PAY_TERMS     --결제조건
	       ,A.PAY_DURING    --결제기간
	       ,A.TERMS_PRICE   --가격조건
	       ,A.PAY_METHODE   --결제방법
	       ,A.METHD_CARRY   --운송방법
	       ,A.DEST_PORT     --도착항
	       ,A.DEST_PORT_NM  --도착항명
	       ,A.SHIP_PORT     --선적항
	       ,A.SHIP_PORT_NM  --선적항명
	       ,A.DEST_FINAL    --최종목적지
	       ,A.PLACE_DELIVERY  --인도장소
	       ,A.EXCHANGE_RATE   --환율
	       ,A.AMT_UNIT      --통화단위
	       ,A.SO_AMT        --외화금액
	       ,A.SO_AMT_WON    --원화금액
	       ,A.TRADE_TYPE
	       ,A.NATION_INOUT
	       ,A.PROJECT_NO
	       ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
	       , (SELECT  z.PJT_NAME from BCM600T Z
	           WHERE Z.PJT_CODE  = A.PROJECT_NO
	             AND Z.COMP_CODE = #{S_COMP_CODE}
	         ) PROJECT_NAME
	      ,(CASE WHEN  (SELECT COUNT(EXPENSE_FLAG) FROM    BTR100T
	                     WHERE CREATE_LOC = N'6'
	                       AND COMP_CODE  = #{S_COMP_CODE}
	                       AND ORDER_NUM  = A.SO_SER_NO) > 0 THEN
	         'Y'
	        WHEN (SELECT COUNT(EXPENSE_FLAG) FROM    BTR100T
	               WHERE CREATE_LOC = N'6'
	                 AND COMP_CODE  = #{S_COMP_CODE}
	                 AND ORDER_NUM  = A.SO_SER_NO) = 0 THEN
	        'N'  END)
	      AS EXPENSE_FLAG
	      , A.GW_FLAG
	 FROM TIA100T A WITH(NOLOCK) 
	      INNER JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                       AND B.CUSTOM_CODE = A.EXPORTER
	 WHERE A.SO_SER_NO = A.SO_SER_NO
	   AND A.COMP_CODE  = #{S_COMP_CODE}
     <if test="@foren.Ognl@isNotEmpty(SO_SER_NO)">
	     AND A.SO_SER_NO   LIKE #{SO_SER_NO}+'%'
	 </if>
     <if test="@foren.Ognl@isNotEmpty(FR_DATE)">
		 AND A.DATE_DEPART &gt;= #{FR_DATE}
	 </if>
	   <if test="@foren.Ognl@isNotEmpty(TO_DATE)">
		 AND A.DATE_DEPART &lt;= #{TO_DATE}
	 </if>
	<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
		AND A.EXPORTER = #{EXPORTER}
	</if>
	<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isEmpty(EXPORTER_NM)">
		AND A.EXPORTER LIKE #{EXPORTER} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
		AND B.CUSTOM_NAME LIKE '%' + #{EXPORTER_NM} + '%' 
	</if>	 
	 <if test="@foren.Ognl@isNotEmpty(TERMS_PRICE)">
		  AND A.TERMS_PRICE  = #{TERMS_PRICE}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(PAY_METHODE)">
		  AND A.PAY_METHODE  = #{PAY_METHODE}
	 </if>
  	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		  AND A.DIV_CODE  = #{DIV_CODE}
	 </if>
	 ORDER BY A.SO_SER_NO DESC
	</select>

	<select id="tio100ukrvServiceImpl.fnOrderDetail" parameterType="Map" resultType="rMap">


		 -- tio100ukrv.Ctio100ukrv[fnOrderDetail] Query01
		SELECT
		       CAST(0 AS BIT)                                       AS CHOICE       -- 선택
		     , uniLite.fnGetUserDate(#{S_COMP_CODE},B.ORDER_DATE)                  AS ORDER_DATE   -- 발주일
		     , A.ITEM_CODE                                          AS ITEM_CODE    -- 품목코드
		     , uniLite.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME    -- 품목명
		     , C.SPEC                                               AS SPEC         -- 규격
		     , A.ORDER_UNIT_Q                                       AS ORDER_UNIT_Q -- 발주량(구매)
		     , A.ORDER_Q                                            AS ORDER_Q      -- 발주량(재고)
		     , A.ORDER_UNIT_Q - ISNULL(D.QTY, 0)                    AS NOT_INOUT_Q  -- 미등록량(구매)
		     , A.ORDER_Q - ISNULL(D.STOCK_UNIT_Q, 0)                AS NINOUT_STOCK_Q  -- 미등록량(재고)
		     , A.ORDER_UNIT                                         AS ORDER_UNIT   -- 구매단위
		     , C.STOCK_UNIT                                         AS STOCK_UNIT   -- 재고단위
		     , A.TRNS_RATE                                          AS TRNS_RATE    -- 입수
		     , B.MONEY_UNIT                                         AS MONEY_UNIT   -- 화폐
		     , A.ORDER_UNIT_P                                       AS ORDER_UNIT_P -- 구매단가(구매)
		     , A.ORDER_P                                            AS ORDER_P      -- 구매단가(재고)
		     , B.EXCHG_RATE_O                                       AS EXCHG_RATE_O -- 환율
		     , uniLite.fnGetUserDate(#{S_COMP_CODE},A.DVRY_DATE)                   AS DVRY_DATE    -- 납기일
		     , B.ORDER_PRSN                                         AS ORDER_PRSN   -- 발주담당
		     , A.ORDER_NUM                                          AS ORDER_NUM    -- 발주번호
		     , A.ORDER_SEQ                                          AS ORDER_SEQ    -- 발주순번
		     , ISNULL(A.PROJECT_NO, B.PROJECT_NO)                   AS PROJECT_NO   -- 관리번호
		     , A.LOT_NO
		     , C.HS_NO                                              AS HS_NO        -- HS번호
		     , C.HS_NAME                                            AS HS_NAME      -- HS명
		    -- , M1.HS_NO                                              AS HS_NO        -- HS번호
		    -- , M1.HS_NAME                                            AS HS_NAME      -- HS명
		     , B.ORDER_TYPE                                         AS ORDER_TYPE   -- 발주유형
		     , ISNULL(E.REF_CODE1, '')                              AS PAY_METHODE  -- 결제방법
		     , CASE WHEN B.ORDER_TYPE IN ('2', '8') THEN '1'
		            WHEN B.ORDER_TYPE IN ('3', '5') THEN '2'
		            ELSE ''
		       END                                                  AS NATION_INOUT -- 국내외구분
		     , A.INSPEC_FLAG                                        AS INSPEC_FLAG  -- 품질대상여부
		     , F.ITEM_ACCOUNT                                       AS ITEM_ACCOUNT -- 품목계정
		  FROM MPO200T A WITH (NOLOCK) INNER JOIN MPO100T B WITH (NOLOCK)  ON A.DIV_CODE  = B.DIV_CODE
		                                     AND A.ORDER_NUM = B.ORDER_NUM
		                                     AND A.COMP_CODE = B.COMP_CODE
		                 INNER JOIN BPR100T C WITH (NOLOCK)  ON A.ITEM_CODE = C.ITEM_CODE
		                                     AND A.COMP_CODE = C.COMP_CODE
                     LEFT JOIN TAA030T M1 WITH (NOLOCK) ON C.COMP_CODE=M1.COMP_CODE AND REPLACE(REPLACE(C.HS_NO,'.',''),'-','')=REPLACE(REPLACE(M1.HS_NO,'.',''),'-','')
		                 INNER JOIN BSA100T E WITH (NOLOCK)  ON B.ORDER_TYPE= E.SUB_CODE
		                                     AND E.MAIN_CODE = 'M001'
		                                     AND E.COMP_CODE = B.COMP_CODE
		                 LEFT  JOIN (SELECT DIV_CODE   AS DIV_CODE
		                                  , COMP_CODE  AS COMP_CODE
		                                  , ITEM_CODE  AS ITEM_CODE
		                                  , ORDER_NUM  AS ORDER_NUM
		                                  , ORDER_SEQ  AS ORDER_SEQ
		                                  , SUM(QTY)   AS QTY
		                                  , SUM(STOCK_UNIT_Q) AS STOCK_UNIT_Q
		                               FROM TIA110T WITH (NOLOCK)
		                             GROUP BY DIV_CODE,COMP_CODE, ITEM_CODE, ORDER_NUM, ORDER_SEQ
		                             ) D ON A.DIV_CODE  = D.DIV_CODE
		                                AND A.ITEM_CODE = D.ITEM_CODE
		                                AND A.ORDER_NUM = D.ORDER_NUM
		                                AND A.ORDER_SEQ = D.ORDER_SEQ
		                                AND A.COMP_CODE = D.COMP_CODE
		                 INNER JOIN BPR200T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
		                                                  AND F.DIV_CODE  = A.DIV_CODE
		                                                  AND F.ITEM_CODE = A.ITEM_CODE
		 WHERE B.ORDER_TYPE IN ('2', '3', '5', '8')                             -- LLC / MLC / 직수입 / ETC
		   AND A.ORDER_UNIT_Q - ISNULL(D.QTY, 0) &gt; 0
		   AND A.CONTROL_STATUS IN ('1', '8')
		   AND (B.CUSTOM_CODE = #{EXPORTER}
		    OR  B.CUSTOM_CODE = #{AGENTQ})
		   AND A.COMP_CODE    = #{S_COMP_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   	AND A.DIV_CODE      = #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		   	AND B.ORDER_DATE      &gt;= #{ORDER_DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		   	AND B.ORDER_DATE      &lt;= #{ORDER_DATE_TO}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND C.ITEM_NAME LIKE '%' + #{ITEM_NAME} + '%' 
			</if> 		   
		   <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		   	 AND  B.MONEY_UNIT  LIKE #{MONEY_UNIT}+'%'
		   </if>


		ORDER BY A.DIV_CODE, B.ORDER_DATE DESC, A.ORDER_NUM, A.ORDER_SEQ
</select>

	<select id="tio100ukrvServiceImpl.fnOfferDetail" parameterType="Map" resultType="rMap">

		 -- tio100ukrv.Ctio100ukrv[fnOfferDetail] Query01
		SELECT CAST(0 AS BIT)                                           AS CHOICE
		     , A.DIV_CODE                                               AS DIV_CODE
		     , A.SO_SER_NO                                              AS SO_SER_NO
		     , B.SO_SER                                                 AS SO_SER
		     , A.EXPORTER                                               AS EXPORTER
		     , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE)  AS EXPORTER_NM
		     , A.TERMS_PRICE                                            AS TERMS_PRICE
		     , E.CODE_NAME                                              AS TERMS_PRICE_NM
		     , A.PAY_TERMS                                              AS PAY_TERMS
		     , F.CODE_NAME                                              AS PAY_TERMS_NM
		     , B.ITEM_CODE                                              AS ITEM_CODE
		     , uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},C.ITEM_CODE)     AS ITEM_NAME
		     , B.SPEC                                                   AS SPEC
		     , B.UNIT                                                   AS UNIT
		     , B.QTY                                                    AS QTY
		     , B.PRICE                                                  AS PRICE
		     , B.SO_AMT                                                 AS SO_AMT
		     , A.AMT_UNIT                                               AS AMT_UNIT
		     , A.EXCHANGE_RATE                                          AS EXCHANGE_RATE
		     , B.SO_AMT_WON                                             AS SO_AMT_WON
		     , C.HS_NO                                                  AS HS_NO
		     , C.HS_NAME                                                AS HS_NAME
		     , B.USE_QTY                                                AS USE_QTY
		     , B.MORE_PER_RATE                                          AS MORE_PER_RATE
		     , B.LESS_PER_RATE                                          AS LESS_PER_RATE
		     , B.TRNS_RATE                                              AS TRNS_RATE
		     , B.STOCK_UNIT_Q                                           AS STOCK_UNIT_Q
		     , C.STOCK_UNIT                                             AS STOCK_UNIT
		     , B.INSPEC_FLAG                                            AS INSPEC_FLAG
		     , ISNULL(B.PROJECT_NO, ISNULL(A.PROJECT_NO,''))            AS PROJECT_NO
		     , B.LOT_NO                                                 AS LOT_NO
		     , I.ITEM_ACCOUNT                                           AS ITEM_ACCOUNT
		     , A.NATION_INOUT											AS NATION_INOUT
		  FROM TiA100T A
		                   INNER JOIN TiA110T B ON A.DIV_CODE  = B.DIV_CODE
		                                       AND A.SO_SER_NO = B.SO_SER_NO
		                                       AND A.COMP_CODE = B.COMP_CODE
		                   INNER JOIN BPR100T C ON B.ITEM_CODE = C.ITEM_CODE
		                                       AND B.COMP_CODE = C.COMP_CODE
		                   INNER JOIN BCM100T D ON A.EXPORTER  = D.CUSTOM_CODE
		                                       AND A.COMP_CODE = D.COMP_CODE
		                   LEFT  JOIN BSA100T E ON E.MAIN_CODE = 'T005'
		                                       AND A.TERMS_PRICE = E.SUB_CODE
		                                       AND A.COMP_CODE   = E.COMP_CODE
		                   LEFT  JOIN BSA100T F ON F.MAIN_CODE = 'T006'
		                                       AND A.PAY_TERMS = F.SUB_CODE
		                                       AND A.COMP_CODE = F.COMP_CODE
		                   LEFT  JOIN TAA030T H ON B.HS_NO     = H.HS_NO
		                                       AND B.COMP_CODE = H.COMP_CODE
		                   INNER JOIN BPR200T I ON I.COMP_CODE = B.COMP_CODE
		                                       AND I.DIV_CODE  = B.DIV_CODE
		                                       AND I.ITEM_CODE = B.ITEM_CODE
		 WHERE B.CLOSE_FLAG  != N'Y'
		 AND   A.TRADE_TYPE NOT IN ('2', '7')
		 AND   A.COMP_CODE = #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(SO_SER_NO)">
		   	 AND A.SO_SER_NO    = #{SO_SER_NO}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(DATE_DEPART_FR)">
		   	  AND A.DATE_DEPART &gt;= #{DATE_DEPART_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DATE_DEPART_TO)">
		   	   AND A.DATE_DEPART &lt;= #{DATE_DEPART_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(EXPORTER)">
		   		AND A.EXPORTER  LIKE #{EXPORTER}+'%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(TERMS_PRICE)">
		   		AND A.TERMS_PRICE     = #{TERMS_PRICE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PAY_METHODE)">
		   		AND A.PAY_METHODE     = #{PAY_METHODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   		AND A.DIV_CODE     = #{DIV_CODE}
		   </if>
		 ORDER BY    A.DIV_CODE, A.SO_SER_NO DESC, B.SO_SER
	</select>

	<select id="tio100ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		--tio100ukrv.Ctio100ukrv[fnExcelUpload] Query01
		SELECT
				_EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 ,  CAST(0 AS BIT) AS CHOICE
		     ,  ITEM_CODE
		     ,	QTY
		     ,  ITEM_NAME
		     , 	SPEC
		     ,  MONEY_UNIT
		     ,  EXCHG_RATE_O
		     , 	PRICE
		     ,  ORDER_UNIT
		     ,  TRNS_RATE
		     ,  STOCK_UNIT
		     ,	HS_NO
		     ,  HS_NAME
		     , 	INSPEC_FLAG
		     , 	DVRY_DATE
		     ,  DATA_CHECK
		  FROM TIO100UKR_EXCEL WITH (NOLOCK)
		  WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>

	<insert id="tio100ukrvServiceImpl.insertExceTio100ukrupload" parameterType="Map">

    	INSERT INTO TIO100UKR_EXCEL
    		(
    		   _EXCEL_JOBID
    		 , _EXCEL_ROWNUM
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
    		 , _EXCEL_HAS_ERROR
			</if>
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR_MSG)">
    		 , _EXCEL_ERROR_MSG
			</if>
    		, ITEM_CODE
    		,	 QTY
			,	ITEM_NAME
			,	SPEC
			,	MONEY_UNIT
			,	EXCHG_RATE_O
			,	PRICE
			,	ORDER_UNIT
			,	TRNS_RATE
			,	STOCK_UNIT
			,	HS_NO
			,	HS_NAME
			,	INSPEC_FLAG
			,	DVRY_DATE
			,	DATA_CHECK


    	)
    	VALUES (
    		   #{_EXCEL_JOBID}
    		 , #{_EXCEL_ROWNUM}
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
    		 , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
    		 , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
			</if>
    		, #{ITEM_CODE}
    		,	 #{QTY}
			,	#{ITEM_NAME}
			,	#{SPEC}
			,	#{MONEY_UNIT}
			,	#{EXCHG_RATE_O}
			,	#{PRICE}
			,	#{ORDER_UNIT}
			,	#{TRNS_RATE}
			,	#{STOCK_UNIT}
			,	#{HS_NO}
			,	#{HS_NAME}
			,	#{INSPEC_FLAG}
			,	#{DVRY_DATE}
			,	#{DATA_CHECK}

    	)
    </insert>

    <select id="tio100ukrvServiceImpl.fnGetCompany" parameterType="Map" resultType="rMap">

		  -- UTFuncKrv.CTFuncKr1[fnGetCompany]  Query01
		 SELECT
		        A.CUSTOM_CODE,
		        uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, A.CUSTOM_CODE) as CUSTOM_FULL_NAME
		   FROM BCM100T A, BSA100T B
		  WHERE B.MAIN_CODE = #{MAIN_CODE}
		    AND B.CODE_NAME = A.CUSTOM_CODE
		    AND B.COMP_CODE = A.COMP_CODE
		    AND A.COMP_CODE =#{S_COMP_CODE}
    </select>
    <select id="tio100ukrvServiceImpl.fnGetPrice" parameterType="Map" resultType="rMap">
	BEGIN
		DECLARE   @STOCK_UNIT NVARCHAR(08)
		DECLARE   @ORDER_UNIT NVARCHAR(08)

		SET NOCOUNT ON
		SET ARITHABORT ON


		-- UTiFuncKrv.Public[fnGetPrice] Query01
		SELECT @ORDER_UNIT = (isnull((SELECT  X.ORDER_UNIT FROM BPR300T X
		                 WHERE  X.ITEM_CODE = #{ITEM_CODE}
		                   AND  X.CUSTOM_CODE = #{CUSTOM_CODE}
		                   AND  X.TYPE = N'1'
		                   AND  X.COMP_CODE = #{S_COMP_CODE}
		                   AND  X.APLY_START_DATE   =  (SELECT  MAX(APLY_START_DATE)   From BPR300T
		                                                 WHERE  TYPE                = X.TYPE
		                                                   AND  DIV_CODE            = X.DIV_CODE
		                                                   AND  ITEM_CODE           = X.ITEM_CODE
		                                                   AND  CUSTOM_CODE         = X.CUSTOM_CODE
		                                                   AND  COMP_CODE           = #{S_COMP_CODE}
		                                                    AND  APLY_START_DATE     &lt;=  convert(varchar(8), GETDATE() ,112) )
	  			),
		         ( SELECT   ORDER_UNIT FROM BPR200T
		            WHERE   ITEM_CODE = #{ITEM_CODE}
		              AND   COMP_CODE = #{S_COMP_CODE}   ))
		         )

		SELECT TOP 1 @STOCK_UNIT = STOCK_UNIT
	      FROM BPR100T WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	       AND ITEM_CODE = #{ITEM_CODE}



		-- UTiFuncKrv.Public[fnGetPrice] Query03
  		SELECT @ORDER_UNIT AS ORDER_UNIT
		     , @STOCK_UNIT AS STOCK_UNIT
		     , CASE @ORDER_UNIT
		       WHEN  @STOCK_UNIT
		                 THEN 1
			  Else
			  ISNULL(ISNULL(    ISNULL( ( SELECT  X.TRNS_RATE
                                From BPR300T X
                               WHERE   X.TYPE = '1' AND X.CUSTOM_CODE = #{CUSTOM_CODE}
                                 AND   X.ITEM_CODE =  #{ITEM_CODE}
                                 AND   X.ORDER_UNIT =  @ORDER_UNIT
                                 AND   X.COMP_CODE  =  #{S_COMP_CODE}
                                 AND   X.APLY_START_DATE   =  (SELECT  MAX(APLY_START_DATE)   From BPR300T
                                                                WHERE   TYPE                = X.TYPE
                                                                  AND   DIV_CODE            = X.DIV_CODE
                                                                  AND   ITEM_CODE           = X.ITEM_CODE
                                                                  AND   CUSTOM_CODE         = X.CUSTOM_CODE
                                                                  AND   COMP_CODE           =  #{S_COMP_CODE}
                                                                  AND   APLY_START_DATE     &lt;=  convert(varchar(8), GETDATE() ,112) )
            ),

                       ( SELECT B.TRNS_RATE
                           FROM BPR200T A, BPR100T B
                          WHERE A.COMP_CODE =  B.COMP_CODE
                            AND A.ITEM_CODE =  B.ITEM_CODE
                            AND A.ITEM_CODE =  #{ITEM_CODE}
                            AND A.COMP_CODE =  #{S_COMP_CODE}
                            AND A.ORDER_UNIT = @ORDER_UNIT)
                       ) ,
                      (SELECT TRNS_RATE
                         From BPR600T
                        WHERE STOCK_UNIT = @STOCK_UNIT
                          AND COMP_CODE  = #{S_COMP_CODE}
                          AND ORDER_UNIT = @ORDER_UNIT)
           ),

		    1) End AS TRNS_RATE,
		 ISNULL( ( SELECT MAX(ITEM_P)
		             From BPR400T
		            WHERE TYPE          = N'1'
		              AND ITEM_CODE     = #{ITEM_CODE}
		              AND CUSTOM_CODE   = #{CUSTOM_CODE}
		              AND COMP_CODE     = #{S_COMP_CODE}
		              AND MONEY_UNIT    = #{MONEY_UNIT}
		              AND ORDER_UNIT    = @ORDER_UNIT
		              AND APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
		                                      From BPR400T
		                                     WHERE APLY_START_DATE &lt;= #{ORDER_DATE}
		                                       AND TYPE          = N'1'
		                                       AND ITEM_CODE     = #{ITEM_CODE}
		                                       AND CUSTOM_CODE   = #{CUSTOM_CODE}
		                                       AND COMP_CODE     = #{S_COMP_CODE}
		                                       AND MONEY_UNIT = #{MONEY_UNIT}
		                                       AND ORDER_UNIT =  @ORDER_UNIT)
		         )
		    ,0) AS ORDER_P,
		     ( SELECT BASIS_P
		          From BPR200T
		         WHERE COMP_CODE =  #{S_COMP_CODE}
		           AND ITEM_CODE =  #{ITEM_CODE}) STOCK_P

			END
	</select>

	  <select id="tio100ukrvServiceImpl.fnGetInspec" parameterType="Map" resultType="rMap">
		  	Select ISNULL(INSPEC_YN, 'N') AS INSPEC_YN
		  	FROM BPR200T
		  	 WHERE COMP_CODE = #{S_COMP_CODE}
		  	 AND ITEM_CODE = #{ITEM_CODE}
	  </select>

	  <select id="tio100ukrvServiceImpl.fnGetAgreePrsn" parameterType="Map" resultType="rMap">
		  	--UMFuncKrv.CMFuncKr[fnGetAgreePrsn] Query01
			SELECT B.USER_NAME AS USER_NAME
			     , B.USER_ID   AS USER_ID
			  FROM BSA100T A WITH (NOLOCK)
			               INNER JOIN BSA300T B WITH (NOLOCK)
			                       ON A.REF_CODE1 = B.USER_ID
			 WHERE A.MAIN_CODE = N'M201'
			   AND A.SUB_CODE  = #{SUB_CODE}
			   AND A.COMP_CODE = #{S_COMP_CODE}
			 ORDER BY A.SUB_CODE
	  </select>

	  <update id="tio100ukrvServiceImpl.spTradeTia100ukrv" parameterType="Map" statementType="CALLABLE">
		{call USP_TRADE_TIO100UKR (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{SoSerNo, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
		</update>
		<insert id="tio100ukrvServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_TIA100T(
					KEY_VALUE, OPR_FLAG,
					COMP_CODE	, DIV_CODE	, SO_SER_NO	, PROJECT_NO	, NATION_INOUT	,TRADE_TYPE	,
					EXPORTER	,IMPORTER	,MANUFACTURER	,AGENT	,DATE_DEPART	,DATE_EXP	,
					DATE_CONTRACT	,DATE_DELIVERY	,PAY_METHODE	,PAY_TERMS	,PAY_DURING	,TERMS_PRICE	,
					COND_PACKING	,METHD_CARRY	,METH_INSPECT	,DEST_PORT	,DEST_PORT_NM	,SHIP_PORT	,
					SHIP_PORT_NM	,DEST_FINAL	,PLACE_DELIVERY	,EXCHANGE_RATE	,AMT_UNIT	,SO_AMT	,
					SO_AMT_WON	,RECEIVE_AMT	,BANK_SENDING	,IMPORT_TYPE	,IMPORT_NM	,IMPORT_DEPT	,
					ORIGIN1	,ORIGIN2	,ORIGIN3	,SHIP_DT_TXT1	,SHIP_DT_TXT2	,SHIP_DT_TXT3	,
					FREE_TXT1	,FREE_TXT2	,FREE_TXT3	,AGREE_STATUS	,AGREE_PRSN	,AGREE_DATE	,
					INT_OFFER_NO	,COMMISSION_AMT	,INSERT_DB_USER	,INSERT_DB_TIME	,UPDATE_DB_USER	,UPDATE_DB_TIME	,
					TEMPC_01	,TEMPC_02	,TEMPC_03	,TEMPN_01	,TEMPN_02	,TEMPN_03	)
             VALUES(
             		#{KEY_VALUE}, #{OPR_FLAG},
					#{S_COMP_CODE}	, #{DIV_CODE}	, #{SO_SER_NO}	, #{PROJECT_NO}	, #{NATION_INOUT}	,#{TRADE_TYPE}	,
					#{EXPORTER}	,#{IMPORTER}	,#{MANUFACTURER}	,#{AGENTQ}	,#{DATE_DEPART}	,#{DATE_EXP}	,
					#{DATE_CONTRACT}	,#{DATE_DELIVERY}	,#{PAY_METHODE}	,#{PAY_TERMS}	,#{PAY_DURING}	,#{TERMS_PRICE}	,
					#{COND_PACKING}	,#{METHD_CARRY}	,#{METH_INSPECT}	,#{DEST_PORT}	,#{DEST_PORT_NM}	,#{SHIP_PORT}	,
					#{SHIP_PORT_NM}	,#{DEST_FINAL}	,#{PLACE_DELIVERY}	,#{EXCHANGE_RATE}	,#{AMT_UNIT}	,#{SO_AMT}	,
					#{SO_AMT_WON}	,0	,#{BANK_SENDING}	,#{IMPORT_TYPE}	,#{IMPORT_NM}	,#{IMPORT_DEPT}	,
					#{ORIGIN1}	,#{ORIGIN2}	,#{ORIGIN3}	,#{SHIP_DT_TXT1}	,#{SHIP_DT_TXT2}	,#{SHIP_DT_TXT3}	,
					#{FREE_TXT1}	,#{FREE_TXT2}	,#{FREE_TXT3}	,#{AGREE_STATUS}	,#{AGREE_PRSN}	,#{AGREE_DATE}	,
					#{INT_OFFER_NO}	,#{COMMISSION_AMT}	, #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()	,
					#{TEMPC_01}	,#{TEMPC_02}	,#{TEMPC_03}	,#{TEMPN_01}	,#{TEMPN_02}	,#{TEMPN_03}
					)
		</insert>

		<insert id="tio100ukrvServiceImpl.insertLogDetail" parameterType="Map">
			INSERT INTO L_TIA110T(
						KEY_VALUE, OPR_FLAG,
						COMP_CODE	,DIV_CODE	,SO_SER_NO	,SO_SER	,HS_NO	,ITEM_CODE	,
						SPEC	,UNIT	,QTY	,PRICE	,SO_AMT	,SO_AMT_WON	,
						MORE_PER_RATE	,LESS_PER_RATE	,CLOSE_FLAG	,TRNS_RATE	,DELIVERY_DATE	,ORDER_REQ_NUM	,
						ORDER_NUM	,ORDER_SEQ	,INSPEC_FLAG	,USE_QTY	,RECEIPT_QTY	,INSTOCK_Q	,
						STOCK_UNIT_Q	,PROJECT_NO	,LOT_NO	,REMARK	,INT_OFFER_NO	,INT_OFFER_SEQ	,
						COMMISSION_PRICE	,COMMISSION_AMT	,COMMISSION_RATE	,INSERT_DB_USER	,INSERT_DB_TIME	,UPDATE_DB_USER	,
						UPDATE_DB_TIME	,TEMPC_01	,TEMPC_02	,TEMPC_03	,TEMPN_01	,TEMPN_02	,
						TEMPN_03
						)
               VALUES(
             			#{KEY_VALUE}, #{OPR_FLAG},
						#{S_COMP_CODE}	,#{DIV_CODE}	,#{SO_SER_NO}	,#{SO_SER}	,#{HS_NO}	,#{ITEM_CODE}	,
						#{SPEC}	,#{UNIT}	,#{ORDER_UNIT_Q}	,#{PRICE}	,#{SO_AMT}	,#{SO_AMT_WON}	,
						#{MORE_PER_RATE}	,#{LESS_PER_RATE}	,#{CLOSE_FLAG}	,#{TRNS_RATE}	,#{DELIVERY_DATE}	,#{ORDER_REQ_NUM}	,
						#{ORDER_NUM}	,#{ORDER_SEQ}	,#{INSPEC_FLAG}	,#{USE_QTY}	,#{RECEIPT_QTY}	,#{INSTOCK_Q}	,
						#{STOCK_UNIT_Q}	,#{PROJECT_NO}	,#{LOT_NO}	,#{REMARK}	,#{INT_OFFER_NO}	,#{INT_OFFER_SEQ}	,
						#{COMMISSION_PRICE}	,#{COMMISSION_AMT}	,#{COMMISSION_RATE}	, #{S_USER_ID}, GETDATE(), #{S_USER_ID},
						GETDATE()	,#{TEMPC_01}	,#{TEMPC_02}	,#{TEMPC_03}	,#{TEMPN_01}	,#{TEMPN_02}	,
						#{TEMPN_03}
						)
		</insert>

	    <select id="tio100ukrvServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
            SELECT  GW_FLAG
            FROM    TIA100T WITH (NOLOCK)
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     SO_SER_NO = #{SO_SER_NO}
    </select>
</mapper>