<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tix101ukrvService">
	<select id="tix101ukrvService.selectMasterList" parameterType="Map" resultType="rMap">
		--tix101ukrv.Ctix101ukrv[fntix101QStd] Query01
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
		    DECLARE @COMP_CODE              NVARCHAR(08)        --(필수) 법인코드
		          , @FR_DATE                NVARCHAR(08)        --(필수) 발생일(FROM)
		          , @TO_DATE                NVARCHAR(08)        --(필수) 발생일(TO)
		          , @DIV_CODE               NVARCHAR(20)        --(필수) 사업장 번호
		          , @CHARGE_TYPE            NVARCHAR(20)        --(선택) 진행구분
		          , @BASIC_PAPER_NO         NVARCHAR(40)        --(선택) 근거구분
		          , @EXPORTER               NVARCHAR(40)        --(선택) 수출자
		          , @EXPORTER_NM            NVARCHAR(80)        --(선택) 수출자명
		          , @USER_ID                NVARCHAR(100)       --(필수) 사용자ID
		          
		    SET @COMP_CODE         = #{S_COMP_CODE}
		    SET @FR_DATE           = #{FR_DATE}
		    SET @TO_DATE           = #{TO_DATE}
		    SET @DIV_CODE          = #{DIV_CODE}
		    SET @CHARGE_TYPE       = #{CHARGE_TYPE}
		    SET @BASIC_PAPER_NO    = #{BASIC_PAPER_NO}
		    SET @EXPORTER          = #{EXPORTER}
		    SET @EXPORTER_NM       = #{EXPORTER_NM}
		    SET @USER_ID           = #{S_USER_ID}

		--  2. 명칭 조회 유형 설정 ------------------------------------------------------------------------------------------
		    DECLARE      @RefItem          NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '1')
		-----------------    
		    DECLARE       @DateFormat       NVARCHAR(10)

		    SELECT TOP 1 @DateFormat = M1.CODE_NAME
		    FROM   BSA100T M1 WITH (NOLOCK)
		    WHERE  M1.COMP_CODE = @COMP_CODE
		    AND    M1.MAIN_CODE = 'B044'
		    AND    M1.REF_CODE1 = 'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

		--  3. 데이타 조회 --------------------------------------------------------------------------------------------
		    SELECT 
		           A.CHARGE_TYPE                                                      AS CHARGE_TYPE
		         , A.COMP_CODE                                                        AS COMP_CODE
		         , A.DIV_CODE                                                         AS DIV_CODE
		         , A.EXPORTER                                                         AS EXPORTER
		         , CASE WHEN @RefItem = '1' THEN E1.CUSTOM_NAME    
		                WHEN @RefItem = '2' THEN E1.CUSTOM_NAME1    
		                WHEN @RefItem = '3' THEN E1.CUSTOM_NAME2    
		                                    ELSE E1.CUSTOM_NAME    
		           END                                                                AS EXPORTER_NM
		         , A.BASIC_PAPER_NO                                                   AS BASIC_PAPER_NO
		         , CASE WHEN A.CHARGE_TYPE = 'B' THEN '선적일 : ' + A.BASE_DATE
		                WHEN A.CHARGE_TYPE = 'O' THEN '작성일 : ' + A.BASE_DATE
		                WHEN A.CHARGE_TYPE = 'P' THEN '통관일 : ' + A.BASE_DATE
		                WHEN A.CHARGE_TYPE = 'S' THEN '지급일 : ' + A.BASE_DATE
		           END                                                                AS BASE_DATE
		         , A.PROJECT_NO                                                       AS PROJECT_NO
		         , A.LC_NO                                                            AS LC_NO
		         , A.BL_NO                                                            AS BL_NO
		    FROM   (
		            -- 수입선적 B/L 관리
		            SELECT 'B'                                                          AS CHARGE_TYPE
		                 , A.COMP_CODE                                                  AS COMP_CODE
		                 , A.DIV_CODE                                                   AS DIV_CODE
		                 , COALESCE(A.BL_SER_NO, B.PAY_TERMS, C.PAY_TERMS)              AS BASIC_PAPER_NO
		                 , REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BL_DATE, 1, 4))
		                                      , 'MM',   SUBSTRING(A.BL_DATE, 5, 2))
		                                      , 'DD',   SUBSTRING(A.BL_DATE, 7, 2))     AS BASE_DATE
		                 , CASE WHEN ISNULL(A.EXPORTER, '') = '' THEN B.EXPORTER 
		                        ELSE A.EXPORTER 
		                   END                                                          AS EXPORTER
		                 , A.PROJECT_NO                                                 AS PROJECT_NO
		                 , COALESCE(A.LC_NO, C.LC_NO)                                   AS LC_NO
		                 , A.BL_NO                                                      AS BL_NO
			          FROM TIC100T A      WITH (NOLOCK)
			     LEFT JOIN TIA100T B      WITH (NOLOCK) 
				        ON B.COMP_CODE    = A.COMP_CODE
			           AND B.DIV_CODE     = A.DIV_CODE
			           AND B.SO_SER_NO    = A.SO_SER_NO
			     LEFT JOIN TIB100T C      WITH (NOLOCK) 
				        ON C.COMP_CODE    = A.COMP_CODE
			           AND C.DIV_CODE     = A.DIV_CODE
			           AND C.LC_SER_NO    = A.LC_SER_NO
			     LEFT JOIN TIB100T D      WITH (NOLOCK) 
				        ON D.COMP_CODE    = A.COMP_CODE
			           AND D.DIV_CODE     = A.DIV_CODE
			           AND D.LC_SER_NO    = A.LC_SER_NO
		             WHERE A.COMP_CODE    = @COMP_CODE
		               AND A.DIV_CODE     = @DIV_CODE
		               AND A.BL_DATE     &gt;= @FR_DATE
		               AND A.BL_DATE     &lt;= @TO_DATE

			    UNION ALL
		            -- 수입 OFFER 관리
		            SELECT 'O'
		                 , A.COMP_CODE
		                 , A.DIV_CODE
		                 , A.SO_SER_NO
		                 , REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DATE_DEPART, 1, 4))
		                                      , 'MM',   SUBSTRING(A.DATE_DEPART, 5, 2))
		                                      , 'DD',   SUBSTRING(A.DATE_DEPART, 7, 2))     AS BASE_DATE
		                 , A.EXPORTER
		                 , A.PROJECT_NO
		                 , ''
		                 , ''
		              FROM TIA100T A WITH (NOLOCK)
		             WHERE A.COMP_CODE    = @COMP_CODE
		               AND A.DIV_CODE     = @DIV_CODE
		               AND A.DATE_DEPART &gt;= @FR_DATE
		               AND A.DATE_DEPART &lt;= @TO_DATE

		         UNION ALL
				    -- 수입통관
		            SELECT 'P'                                                          AS CHARGE_TYPE
		                 , A.COMP_CODE                                                  AS COMP_CODE
		                 , A.DIV_CODE                                                   AS DIV_CODE
		                 , A.BL_SER_NO                                                  AS BASIC_PAPER_NO
		                 , REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INVOICE_DATE, 1, 4))
		                                      , 'MM',   SUBSTRING(A.INVOICE_DATE, 5, 2))
		                                      , 'DD',   SUBSTRING(A.INVOICE_DATE, 7, 2))AS BASE_DATE
		                 , A.EXPORTER                                                   AS EXPORTER
		                 , A.PROJECT_NO                                                 AS PROJECT_NO
		                 , ''                                                           AS LC_NO
		                 , ''                                                           AS BL_NO
			          FROM TID100T A      WITH (NOLOCK)
		             WHERE A.COMP_CODE    = @COMP_CODE
		               AND A.DIV_CODE     = @DIV_CODE
		               AND A.INVOICE_DATE&gt;= @FR_DATE
		               AND A.INVOICE_DATE&lt;= @TO_DATE

		         UNION ALL
				    -- 수입대금
		            SELECT 'S'                                                          AS CHARGE_TYPE
		                 , A.COMP_CODE                                                  AS COMP_CODE
		                 , A.DIV_CODE                                                   AS DIV_CODE
		                 , A.NEGO_SER_NO                                                AS BASIC_PAPER_NO
		                 , REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PAY_DATE, 1, 4))
		                                      , 'MM',   SUBSTRING(A.PAY_DATE, 5, 2))
		                                      , 'DD',   SUBSTRING(A.PAY_DATE, 7, 2))    AS BASE_DATE
		                 , A.EXPORTER                                                   AS EXPORTER
		                 , A.PROJECT_NO                                                 AS PROJECT_NO
		                 , ''                                                           AS LC_NO
		                 , ''                                                           AS BL_NO
			          FROM TIH100T A      WITH (NOLOCK)
		             WHERE A.COMP_CODE    = @COMP_CODE
		               AND A.DIV_CODE     = @DIV_CODE
		               AND A.PAY_DATE   &gt;= @FR_DATE
		               AND A.PAY_DATE   &lt;= @TO_DATE
		           ) AS A
		           LEFT  JOIN BCM100T AS E1 WITH(NOLOCK) ON  E1.COMP_CODE   = A.COMP_CODE
		                                                 AND E1.CUSTOM_CODE = A.EXPORTER
		    WHERE  1 = 1
		    AND    ((A.CHARGE_TYPE       = @CHARGE_TYPE            AND @CHARGE_TYPE    != '') OR (@CHARGE_TYPE     = ''))
		    AND    ((A.BASIC_PAPER_NO    = @BASIC_PAPER_NO         AND @BASIC_PAPER_NO != '') OR (@BASIC_PAPER_NO  = ''))
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
				AND E1.CUSTOM_CODE = #{EXPORTER}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isEmpty(EXPORTER_NM)">
				AND E1.CUSTOM_CODE LIKE #{EXPORTER} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
			    AND    ((
			           (E1.CUSTOM_NAME    LIKE @EXPORTER_NM + '%'      AND @EXPORTER_NM    != '' AND  @RefItem         = '0')
			    OR     (E1.CUSTOM_NAME1   LIKE @EXPORTER_NM + '%'      AND @EXPORTER_NM    != '' AND  @RefItem         = '1')
			    OR     (E1.CUSTOM_NAME2   LIKE @EXPORTER_NM + '%'      AND @EXPORTER_NM    != '' AND  @RefItem         = '2'))
			    OR     (@EXPORTER_NM         = ''))
			</if>


		    ORDER  BY A.CHARGE_TYPE, A.EXPORTER, A.BASE_DATE DESC

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="tix101ukrvService.selectDetailList" parameterType="Map" resultType="rMap">
		--tix101ukrv.Ctix101ukrv[fntix101QStd2] Query01
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		--  1. (파라메터)변수 선언 ------------------------------------------------------------------------------------
		    DECLARE @COMP_CODE              NVARCHAR(08)        --(필수) 법인코드
		          , @DIV_CODE               NVARCHAR(20)        --(필수) 사업장 번호
		          , @CHARGE_TYPE            NVARCHAR(20)        --(필수) 진행구분
		          , @BASIC_PAPER_NO         NVARCHAR(40)        --(필수) 근거구분
		          , @AMT_UNIT               NVARCHAR(40)        --(필수) 화폐단위
		          , @USER_ID                NVARCHAR(100)       --(필수) 사용자ID

		    SET @COMP_CODE         = #{S_COMP_CODE}
		    SET @DIV_CODE          = #{DIV_CODE}
		    SET @CHARGE_TYPE       = #{CHARGE_TYPE}
		    SET @BASIC_PAPER_NO    = #{BASIC_PAPER_NO}
		    SET @AMT_UNIT          = #{AMT_UNIT}
		    SET @USER_ID           = #{S_USER_ID}

		--  2. 명칭 조회 유형 설정 ------------------------------------------------------------------------------------------
		    DECLARE      @RefItem          NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  COMP_CODE = @COMP_CODE
		    AND    USER_ID   = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '1')
		-----------------
		    DECLARE       @DateFormat       NVARCHAR(10)

		    SELECT TOP 1 @DateFormat = M1.CODE_NAME
		    FROM   BSA100T M1 WITH (NOLOCK)
		    WHERE  M1.COMP_CODE = @COMP_CODE
		    AND    M1.MAIN_CODE = 'B044'
		    AND    M1.REF_CODE1 = 'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

		    --현재일
		    DECLARE       @NOW_DATE       NVARCHAR(08)

		    SET @NOW_DATE = CONVERT(VARCHAR(8), GETDATE(), 112)

		--  3. 데이타 조회 --------------------------------------------------------------------------------------------

		    SELECT
		           CONVERT(NVARCHAR, A.TRADE_DIV)                                AS TRADE_DIV
		         , A.CHARGE_TYPE                                                AS CHARGE_TYPE
		         , ISNULL(B.CHARGE_SER, 999999)                                 AS CHARGE_SER
		         , COALESCE(B.BASIC_PAPER_NO, @BASIC_PAPER_NO)                  AS BASIC_PAPER_NO
		         , B.TRADE_CUSTOM_CODE                                          AS TRADE_CUSTOM_CODE
		         , CASE WHEN @RefItem = '0' THEN E1.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E1.CUSTOM_NAME2
		                ELSE E1.CUSTOM_NAME
		           END                                                          AS TRADE_CUSTOM_NAME
		         , A.CHARGE_CODE                                                AS CHARGE_CODE
		         , A.CHARGE_NAME                                                AS CHARGE_NAME
		         , B.CUST_CODE                                                  AS CUST_CODE
		         , CASE WHEN @RefItem = '0' THEN E2.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E2.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E2.CUSTOM_NAME2
		                ELSE E2.CUSTOM_NAME
		           END                                                          AS CUSTOM_NAME
		         , B.VAT_CUSTOM                                                 AS VAT_CUSTOM
		         , CASE WHEN @RefItem = '0' THEN E3.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E3.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E3.CUSTOM_NAME2
		                ELSE E3.CUSTOM_NAME
		           END                                                          AS VAT_CUSTOM_NAME
		         , REPLACE(
		           REPLACE(
		           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.OCCUR_DATE, 1, 4))
		                              , 'MM',   SUBSTRING(B.OCCUR_DATE, 5, 2))
		                              , 'DD',   SUBSTRING(B.OCCUR_DATE, 7, 2))  AS OCCUR_DATE
		         , B.CHARGE_AMT                                                 AS CHARGE_AMT
		         , COALESCE(B.AMT_UNIT, @AMT_UNIT)                              AS AMT_UNIT
		         , B.EXCHANGE_RATE                                              AS EXCHANGE_RATE
		         , B.CHARGE_AMT_WON                                             AS CHARGE_AMT_WON
		         , B.SUPPLY_AMT                                                 AS SUPPLY_AMT
		         , B.TAX_CLS                                                    AS TAX_CLS
		         , B.VAT_AMT                                                    AS VAT_AMT
		         , B.SUPPLY_AMT + B.VAT_AMT                                     AS TOTAL_AMOUNT
		         , COALESCE(B.DIV_CODE, @DIV_CODE)                              AS DIV_CODE
		         , B.VAT_COMP_CODE                                              AS VAT_COMP_CODE
		         , B.PAY_TYPE                                                   AS PAY_TYPE
		         , B.NOTE_NUM                                                   AS NOTE_NUM
		         , B.SAVE_CODE                                                  AS SAVE_CODE
		         , C.SAVE_NAME                                                  AS SAVE_NAME
		         , B.BANK_CODE                                                  AS BANK_CODE
		         , D.CUSTOM_NAME                                                AS BANK_NAME 
		         , REPLACE(
		           REPLACE(
		           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.EXP_DATE, 1, 4))
		                              , 'MM',   SUBSTRING(B.EXP_DATE, 5, 2))
		                              , 'DD',   SUBSTRING(B.EXP_DATE, 7, 2))    AS EXP_DATE
		         , B.PROJECT_NO                                                 AS PROJECT_NO
		         , REPLACE(
		           REPLACE(
		           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.PAY_DATE, 1, 4))
		                              , 'MM',   SUBSTRING(B.PAY_DATE, 5, 2))
		                              , 'DD',   SUBSTRING(B.PAY_DATE, 7, 2))    AS PAY_DATE
		         , B.REMARKS                                                    AS REMARKS
		         , B.OFFER_SER_NO                                               AS OFFER_SER_NO
		         , B.LC_SER_NO                                                  AS LC_SER_NO
		         , B.LC_NO                                                      AS LC_NO
		         , B.BL_SER_NO                                                  AS BL_SER_NO
		         , B.BL_NO                                                      AS BL_NO
		         , A.COST_DIV                                                   AS COST_DIV
		         , REPLACE(
		           REPLACE(
		           REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.EX_DATE, 1, 4))
		                              , 'MM',   SUBSTRING(B.EX_DATE, 5, 2))
		                              , 'DD',   SUBSTRING(B.EX_DATE, 7, 2))     AS EX_DATE
		         , B.EX_NUM                                                     AS EX_NUM
		         , B.AGREE_YN                                                   AS AGREE_YN
		         , A.UPDATE_DB_USER                                             AS UPDATE_DB_USER
		         , CONVERT(NVARCHAR, '')                                        AS UPDATE_DB_TIME
		         , A.COMP_CODE                                                  AS COMP_CODE
		         , CONVERT(NVARCHAR, '')                                        AS GUBUN
		      FROM            TAA010T  AS A  WITH (NOLOCK)
		           LEFT  JOIN TAA020T  AS B  WITH (NOLOCK) ON A.COMP_CODE      = B.COMP_CODE
		                                                  AND A.TRADE_DIV      = B.TRADE_DIV
		                                                  AND A.CHARGE_TYPE    = B.CHARGE_TYPE
		                                                  AND A.CHARGE_CODE    = B.CHARGE_CODE
		                                                  AND B.DIV_CODE       = @DIV_CODE
		                                                  AND B.BASIC_PAPER_NO = @BASIC_PAPER_NO
		           LEFT  JOIN AFS100T  AS C  WITH (NOLOCK) ON A.COMP_CODE      = C.COMP_CODE
		                                                  AND B.SAVE_CODE      = C.SAVE_CODE
		           LEFT  JOIN BCM100T  AS D  WITH (NOLOCK) ON A.COMP_CODE      = D.COMP_CODE
		                                                  AND B.BANK_CODE      = D.CUSTOM_CODE
		           LEFT  JOIN BCM100T  AS E1 WITH (NOLOCK) ON E1.COMP_CODE     = A.COMP_CODE
		                                                  AND E1.CUSTOM_CODE   = B.TRADE_CUSTOM_CODE
		           LEFT  JOIN BCM100T  AS E2 WITH (NOLOCK) ON E2.COMP_CODE     = A.COMP_CODE
		                                                  AND E2.CUSTOM_CODE   = B.CUST_CODE
		           LEFT  JOIN BCM100T  AS E3 WITH (NOLOCK) ON E3.COMP_CODE     = A.COMP_CODE
		                                                  AND E3.CUSTOM_CODE   = B.VAT_CUSTOM
		    WHERE  A.COMP_CODE      = @COMP_CODE
		    AND    A.TRADE_DIV      = N'I'
		    AND    A.CHARGE_TYPE    = @CHARGE_TYPE


		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>



	<insert id="tix101ukrvService.insertDetail" parameterType="Map">
		--tix101ukrv.Ctix101ukrv[fntix101Set] Query01
		<selectKey resultType="int" keyProperty="MAX_SER" order="BEFORE">
		SELECT ISNULL(MAX(CHARGE_SER),0)+1 FROM TAA020T WITH (NOLOCK) WHERE COMP_CODE=#{S_COMP_CODE} AND TRADE_DIV=#{TRADE_DIV} AND CHARGE_TYPE=#{CHARGE_TYPE}
		</selectKey>

		INSERT INTO TAA020T
		     ( TRADE_DIV
		     , CHARGE_TYPE
		     , CHARGE_SER
		     , BASIC_PAPER_NO
		     , TRADE_CUSTOM_CODE
		     , CHARGE_CODE
		     , CUST_CODE
		     , VAT_CUSTOM
		     , OCCUR_DATE
		     , CHARGE_AMT
		     , AMT_UNIT
		     , EXCHANGE_RATE
		     , CHARGE_AMT_WON
		     , SUPPLY_AMT
		     , TAX_CLS
		     , VAT_AMT
		     , DIV_CODE
		     , VAT_COMP_CODE
		     , PAY_TYPE
		     , PROJECT_NO
		     , PAY_DATE
		     , REMARKS
		     , OFFER_SER_NO
		     , LC_NO
		     , BL_NO
		     , COST_DIV
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		)
		VALUES
		     ( #{TRADE_DIV}
		     , #{CHARGE_TYPE}
		     , #{MAX_SER}
		     , #{BASIC_PAPER_NO}
		     , #{TRADE_CUSTOM_CODE}
		     , #{CHARGE_CODE}
		     , #{CUST_CODE}
		     , #{VAT_CUSTOM}
		     , #{OCCUR_DATE}
		     , #{CHARGE_AMT}
		     , #{AMT_UNIT}
		     , #{EXCHANGE_RATE}
		     , #{CHARGE_AMT_WON}
		     , #{SUPPLY_AMT}
		     , #{TAX_CLS}
		     , #{VAT_AMT}
		     , #{DIV_CODE}
		     , #{VAT_COMP_CODE}
		     , #{PAY_TYPE}
		     , #{PROJECT_NO}
		     , #{PAY_DATE}
		     , #{REMARKS}
		     , #{OFFER_SER_NO}
		     , #{LC_NO}
		     , #{BL_NO}
		     , #{COST_DIV}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		)
		SET NOCOUNT OFF
	</insert>

	<update id="tix101ukrvService.updateDetail" parameterType="Map">
		<!--
		UPDATE TAA020T
		   SET BASIC_PAPER_NO    = #{BASIC_PAPER_NO}
		     , TRADE_CUSTOM_CODE = #{TRADE_CUSTOM_CODE}
		     , CUST_CODE         = #{CUST_CODE}
		     , VAT_CUSTOM        = #{VAT_CUSTOM}
		     , OCCUR_DATE        = #{OCCUR_DATE}
		     , CHARGE_AMT        = #{CHARGE_AMT}
		     , AMT_UNIT          = #{AMT_UNIT}
		     , EXCHANGE_RATE     = #{EXCHANGE_RATE}
		     , CHARGE_AMT_WON    = #{CHARGE_AMT_WON}
		     , SUPPLY_AMT        = #{SUPPLY_AMT}
		     , TAX_CLS           = #{TAX_CLS}
		     , VAT_AMT           = #{VAT_AMT}
		     , DIV_CODE          = #{DIV_CODE}
		     , VAT_COMP_CODE     = #{VAT_COMP_CODE}
		     , PAY_TYPE          = #{PAY_TYPE}
		     , NOTE_NUM          = #{NOTE_NUM}
		     , SAVE_CODE         = #{SAVE_CODE}
		     , BANK_CODE         = #{BANK_CODE}
		     , EXP_DATE          = #{EXP_DATE}
		     , PROJECT_NO        = #{PROJECT_NO}
		     , PAY_DATE          = #{PAY_DATE}
		     , REMARKS           = #{REMARKS}
		     , OFFER_SER_NO      = #{OFFER_SER_NO}
		     , LC_SER_NO         = #{LC_SER_NO}
		     , LC_NO             = #{LC_NO}
		     , BL_SER_NO         = #{BL_SER_NO}
		     , BL_NO             = #{BL_NO}
		     , COST_DIV          = #{COST_DIV}
		     , AGREE_YN          = #{AGREE_YN}
		     , UPDATE_DB_USER    = #{S_USER_ID}
		     , UPDATE_DB_TIME    = GETDATE()
		 WHERE TRADE_DIV         = #{TRADE_DIV}
		   AND CHARGE_TYPE       = #{CHARGE_TYPE}
		   AND CHARGE_SER        = #{CHARGE_SER}
		   AND CHARGE_CODE       = #{CHARGE_CODE}
		   AND COMP_CODE         = #{S_COMP_CODE}
		   -->
		<selectKey resultType="int" keyProperty="MAX_SER" order="BEFORE">
		SELECT ISNULL(MAX(CHARGE_SER),0)+1 FROM TAA020T WITH (NOLOCK) WHERE COMP_CODE=#{S_COMP_CODE} AND TRADE_DIV=#{TRADE_DIV} AND CHARGE_TYPE=#{CHARGE_TYPE}
		</selectKey>
		       MERGE INTO TAA020T AS A
		            USING (SELECT #{TRADE_DIV}         AS TRADE_DIV
		                        , #{CHARGE_TYPE}       AS CHARGE_TYPE
		                        , #{CHARGE_SER}        AS CHARGE_SER
		                        , #{BASIC_PAPER_NO}    AS BASIC_PAPER_NO
		                        , #{TRADE_CUSTOM_CODE} AS TRADE_CUSTOM_CODE
		                        , #{CHARGE_CODE}       AS CHARGE_CODE
		                        , #{CUST_CODE}         AS CUST_CODE
		                        , #{VAT_CUSTOM}        AS VAT_CUSTOM
		                        , #{OCCUR_DATE}        AS OCCUR_DATE
		                        , #{CHARGE_AMT}        AS CHARGE_AMT
		                        , #{AMT_UNIT}          AS AMT_UNIT
		                        , #{EXCHANGE_RATE}     AS EXCHANGE_RATE
		                        , #{CHARGE_AMT_WON}    AS CHARGE_AMT_WON
		                        , #{SUPPLY_AMT}        AS SUPPLY_AMT
		                        , #{TAX_CLS}           AS TAX_CLS
		                        , #{VAT_AMT}           AS VAT_AMT
		                        , #{DIV_CODE}          AS DIV_CODE
		                        , #{VAT_COMP_CODE}     AS VAT_COMP_CODE
		                        , #{PAY_TYPE}          AS PAY_TYPE
		                        , #{PROJECT_NO}        AS PROJECT_NO
		                        , #{PAY_DATE}          AS PAY_DATE
		                        , #{REMARKS}           AS REMARKS
		                        , #{OFFER_SER_NO}      AS OFFER_SER_NO
		                        , #{LC_NO}             AS LC_NO
		                        , #{BL_NO}             AS BL_NO
		                        , #{COST_DIV}          AS COST_DIV
		                        , #{NOTE_NUM}          AS NOTE_NUM 
		                        , #{SAVE_CODE}         AS SAVE_CODE
		                        , #{BANK_CODE}         AS BANK_CODE
		                        , #{EXP_DATE}          AS EXP_DATE 
		                        , #{LC_SER_NO}         AS LC_SER_NO
		                        , #{BL_SER_NO}         AS BL_SER_NO
		                        , #{AGREE_YN}          AS AGREE_YN  		                        
		                        , #{S_USER_ID}         AS UPDATE_DB_USER
		                        , GETDATE()            AS UPDATE_DB_TIME
		                        , #{S_COMP_CODE}       AS COMP_CODE ) AS B 
		                        
		               ON (   A.TRADE_DIV      = B.TRADE_DIV
		                  AND A.CHARGE_TYPE    = B.CHARGE_TYPE
		                  AND A.CHARGE_SER     = B.CHARGE_SER
		                  AND A.CHARGE_CODE    = B.CHARGE_CODE
		                  AND A.BASIC_PAPER_NO = B.BASIC_PAPER_NO)
		WHEN MATCHED THEN
		           UPDATE
		              SET A.BASIC_PAPER_NO    = B.BASIC_PAPER_NO
		                , A.TRADE_CUSTOM_CODE = B.TRADE_CUSTOM_CODE
		                , A.CUST_CODE         = B.CUST_CODE
		                , A.VAT_CUSTOM        = B.VAT_CUSTOM
		                , A.OCCUR_DATE        = B.OCCUR_DATE
		                , A.CHARGE_AMT        = B.CHARGE_AMT
		                , A.AMT_UNIT          = B.AMT_UNIT
		                , A.EXCHANGE_RATE     = B.EXCHANGE_RATE
		                , A.CHARGE_AMT_WON    = B.CHARGE_AMT_WON
		                , A.SUPPLY_AMT        = B.SUPPLY_AMT
		                , A.TAX_CLS           = B.TAX_CLS
		                , A.VAT_AMT           = B.VAT_AMT
		                , A.DIV_CODE          = B.DIV_CODE
		                , A.VAT_COMP_CODE     = B.VAT_COMP_CODE
		                , A.PAY_TYPE          = B.PAY_TYPE
		                , A.NOTE_NUM          = B.NOTE_NUM
		                , A.SAVE_CODE         = B.SAVE_CODE
		                , A.BANK_CODE         = B.BANK_CODE
		                , A.EXP_DATE          = B.EXP_DATE
		                , A.PROJECT_NO        = B.PROJECT_NO
		                , A.PAY_DATE          = B.PAY_DATE
		                , A.REMARKS           = B.REMARKS
		                , A.OFFER_SER_NO      = B.OFFER_SER_NO
		                , A.LC_SER_NO         = B.LC_SER_NO
		                , A.LC_NO             = B.LC_NO
		                , A.BL_SER_NO         = B.BL_SER_NO
		                , A.BL_NO             = B.BL_NO
		                , A.COST_DIV          = B.COST_DIV
		                , A.AGREE_YN          = B.AGREE_YN
		                , A.UPDATE_DB_USER    = B.UPDATE_DB_USER
		                , A.UPDATE_DB_TIME    = B.UPDATE_DB_TIME
		WHEN NOT MATCHED THEN
		            INSERT 
		                 ( TRADE_DIV
		                 , CHARGE_TYPE
		                 , CHARGE_SER
		                 , BASIC_PAPER_NO
		                 , TRADE_CUSTOM_CODE
		                 , CHARGE_CODE
		                 , CUST_CODE
		                 , VAT_CUSTOM
		                 , OCCUR_DATE
		                 , CHARGE_AMT
		                 , AMT_UNIT
		                 , EXCHANGE_RATE
		                 , CHARGE_AMT_WON
		                 , SUPPLY_AMT
		                 , TAX_CLS
		                 , VAT_AMT
		                 , DIV_CODE
		                 , VAT_COMP_CODE
		                 , PAY_TYPE
		                 , PROJECT_NO
		                 , PAY_DATE
		                 , REMARKS
		                 , OFFER_SER_NO
		                 , LC_NO
		                 , BL_NO
		                 , COST_DIV
		                 , UPDATE_DB_USER
		                 , UPDATE_DB_TIME
		                 , COMP_CODE
		            )
		            VALUES
		                 ( B.TRADE_DIV
		                 , B.CHARGE_TYPE
		                 , #{MAX_SER}
		                 , B.BASIC_PAPER_NO
		                 , B.TRADE_CUSTOM_CODE
		                 , B.CHARGE_CODE
		                 , B.CUST_CODE
		                 , B.VAT_CUSTOM
		                 , B.OCCUR_DATE
		                 , B.CHARGE_AMT
		                 , B.AMT_UNIT
		                 , B.EXCHANGE_RATE
		                 , B.CHARGE_AMT_WON
		                 , B.SUPPLY_AMT
		                 , B.TAX_CLS
		                 , B.VAT_AMT
		                 , B.DIV_CODE
		                 , B.VAT_COMP_CODE
		                 , B.PAY_TYPE
		                 , B.PROJECT_NO
		                 , B.PAY_DATE
		                 , B.REMARKS
		                 , B.OFFER_SER_NO
		                 , B.LC_NO
		                 , B.BL_NO
		                 , B.COST_DIV
		                 , B.UPDATE_DB_USER
		                 , B.UPDATE_DB_TIME
		                 , B.COMP_CODE
		            );
	</update>

	<update id="tix101ukrvService.deleteDetail" parameterType="Map">
		DELETE FROM TAA020T
		 WHERE TRADE_DIV         = #{TRADE_DIV}
		   AND CHARGE_TYPE       = #{CHARGE_TYPE}
	<!--	   AND CHARGE_SER        = #{CHARGE_SER} -->
		   AND CHARGE_CODE       = #{CHARGE_CODE}
		   AND COMP_CODE         = #{S_COMP_CODE}
		   AND BASIC_PAPER_NO    = #{BASIC_PAPER_NO}
	</update>
</mapper>