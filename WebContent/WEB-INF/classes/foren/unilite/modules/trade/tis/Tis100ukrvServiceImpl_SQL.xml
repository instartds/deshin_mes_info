<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tis100ukrvServiceImpl">
	<select id="tis100ukrvServiceImpl.getOwnCustInfo" parameterType="Map" resultType="rMap">
        --tis100ukrvServiceImpl.getOwnCustCode

        DECLARE @CUSTOM_CODE NVARCHAR(16)
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT @CUSTOM_CODE = CODE_NAME
              FROM BSA100T
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND MAIN_CODE = 'T000'
               AND SUB_CODE != '$'

            SELECT CUSTOM_CODE, CUSTOM_NAME
              FROM BCM100T
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND CUSTOM_CODE = @CUSTOM_CODE

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

	<select id="tis100ukrvServiceImpl.fnExchgRateO" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnExchgRateO
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @AC_DATE                NVARCHAR(20)        --(필수) 기준일자/기준월
                  , @MONEY_UNIT             NVARCHAR(20)        --(필수) 화폐단위

            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @AC_DATE         = #{AC_DATE}
            SET @MONEY_UNIT      = #{MONEY_UNIT}

            SELECT CASE WHEN A.EXCHG_BASE = '1' THEN ISNULL(B.BASE_EXCHG, 1)
                        WHEN A.EXCHG_BASE = '2' THEN ISNULL(C.BASE_EXCHG, 1)
                                                ELSE 1
                    END AS BASE_EXCHG
              FROM           ABA100T AS A WITH(NOLOCK)
                   LEFT JOIN (
                              SELECT B.COMP_CODE
                                   , B.BASE_EXCHG
                                FROM BCM510T AS B WITH (NOLOCK)
                               WHERE B.COMP_CODE  = @COMP_CODE
                                 AND B.AC_DATE    = @AC_DATE
                                 AND B.MONEY_UNIT = @MONEY_UNIT
                             ) AS B ON B.COMP_CODE = A.COMP_CODE
                   LEFT JOIN (
                              SELECT C.COMP_CODE
                                   , C.BASE_EXCHG
                                FROM BCM510T AS C WITH (NOLOCK)
                               WHERE C.COMP_CODE  = @COMP_CODE
                                 AND C.AC_DATE    = SUBSTRING(@AC_DATE, 1, 6)
                                 AND C.MONEY_UNIT = @MONEY_UNIT
                             ) AS C ON C.COMP_CODE = A.COMP_CODE
             WHERE A.COMP_CODE = @COMP_CODE

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

	<select id="tis100ukrvServiceImpl.selectMasterSetList" parameterType="Map" resultType="rMap">
        --tio100ukrv.Ctio100ukrv[fntio100q] Query01
        SELECT
               B.CUSTOM_NAME  BANK_NM
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, C.CUSTOM_CODE) AS EXPORTER_NM
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE) AS IMPORTER_NM
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, E.CUSTOM_CODE) AS AGENT_NM
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, F.CUSTOM_CODE) AS MANUFACTURER_NM
             , G.TREE_NAME                                            AS EXPROT_DEPT_NM
             , ISNULL(H.CNT, 0)                                       AS DETAIL_COUNT
             , I.PJT_NAME                                             AS PROJECT_NAME
             , A.DIV_CODE
             , A.SO_SER_NO
             , A.PROJECT_NO
             , A.NATION_INOUT
             , A.TRADE_TYPE
             , A.EXPORTER
             , A.IMPORTER
             , A.MANUFACTURER
             , A.AGENT
             , A.DATE_DEPART
             , A.DATE_EXP
             , A.DATE_CONTRACT
             , A.DATE_DELIVERY
             , A.PAY_METHODE
             , A.PAY_TERMS
             , A.PAY_DURING
             , A.TERMS_PRICE
             , A.COND_PACKING
             , A.METHD_CARRY
             , A.METH_INSPECT
             , A.DEST_PORT
             , A.DEST_PORT_NM
             , A.SHIP_PORT
             , A.SHIP_PORT_NM
             , A.DEST_FINAL
             , A.PLACE_DELIVERY
             , A.EXCHANGE_RATE
             , A.AMT_UNIT
             , A.SO_AMT
             , A.SO_AMT_WON
             , A.RECEIVE_AMT
             , A.BANK_SENDING
             , A.IMPORT_TYPE
             , A.IMPORT_NM
             , A.IMPORT_DEPT
             , A.ORIGIN1
             , A.ORIGIN2
             , A.ORIGIN3
             , A.SHIP_DT_TXT1
             , A.SHIP_DT_TXT2
             , A.SHIP_DT_TXT3
             , A.FREE_TXT1
             , A.FREE_TXT2
             , A.FREE_TXT3
             , A.AGREE_STATUS
             , A.AGREE_PRSN
             , A.AGREE_DATE
             , A.BANK_SENDING
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, B.CUSTOM_CODE) AS BANK_SENDING_NM
             , A.COMP_CODE
          FROM TIA100T A LEFT  JOIN (SELECT DIV_CODE
                                          , COMP_CODE
                                          , SO_SER_NO
                                          , COUNT(DIV_CODE) AS CNT
                                       FROM TIA110T
                                      GROUP BY DIV_CODE,COMP_CODE, SO_SER_NO
                                     ) H ON A.DIV_CODE  = H.DIV_CODE
                                        AND A.SO_SER_NO = H.SO_SER_NO
                                        AND A.COMP_CODE = H.COMP_CODE
                         LEFT  JOIN BCM600T I ON A.PROJECT_NO    = I.PJT_CODE
                                             AND A.COMP_CODE     = I.COMP_CODE
                         LEFT  JOIN BCM100T B ON A.BANK_SENDING  = B.CUSTOM_CODE
                                             AND A.COMP_CODE     = B.COMP_CODE
                         LEFT  JOIN BCM100T C ON A.EXPORTER      = C.CUSTOM_CODE
                                             AND A.COMP_CODE     = C.COMP_CODE
                         LEFT  JOIN BCM100T D ON A.IMPORTER      = D.CUSTOM_CODE
                                             AND A.COMP_CODE     = D.COMP_CODE
                         LEFT  JOIN BCM100T E ON A.AGENT         = E.CUSTOM_CODE
                                             AND A.COMP_CODE     = E.COMP_CODE
                         LEFT  JOIN BCM100T F ON A.MANUFACTURER  = F.CUSTOM_CODE
                                             AND A.COMP_CODE     = F.COMP_CODE
                         LEFT  JOIN BSA220T G ON A.IMPORT_DEPT   = G.TREE_CODE
                                             AND A.COMP_CODE     = G.COMP_CODE
                                             AND G.USE_YN    = 'Y'
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.SO_SER_NO = #{SO_SER_NO}
    </select>


    <select id="tis100ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
        -- tis100ukrv.Ctis100ukrv[fnTis100q] Query01
        SELECT
               A.BL_SER_NO                                 AS BL_SER_NO                                     -- B/L 관리번호
             , A.SO_SER_NO                                 AS SO_SER_NO                                     -- OFFER 관리번호
             , A.LC_SER_NO                                 AS LC_SER_NO                                     -- L/C 관리번호
             , A.BL_NO                                     AS BL_NO                                         -- B/L 번호
             , UNILITE.fnGetUserDate(#{S_COMP_CODE},A.BL_DATE)            AS BL_DATE                        -- B/L 일
             , UNILITE.fnGetUserDate(#{S_COMP_CODE},A.DATE_SHIPPING)      AS DATE_SHIPPING                  -- 선적일
             , UNILITE.fnGetUserDate(#{S_COMP_CODE},A.DATE_DEST)          AS DATE_DEST                      -- 도착일
             , A.METHD_CARRY                               AS METHD_CARRY                                   -- 운송방법
             , A.VESSEL_NAME                               AS VESSEL_NAME                                   -- Vessel명
             , A.FORWARDER                                 AS FORWARDER                                     -- 선박회사
             , UNILITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.FORWARDER) AS FORWARDERNM              -- 선박회사명
             , A.VESSEL_NATION_CODE                        AS VESSEL_NATION_CODE                            -- 선박국적
             , A.REC_PLCE                                  AS REC_PLCE                                      -- 수취장소
             , A.DELIVERY_PLCE                             AS DELIVERY_PLCE                                 -- 인도장소
             , A.DEST_PORT                                 AS DEST_PORT                                     -- 도착항
             , A.DEST_PORT_NM                              AS DEST_PORT_NM                                  -- 도착항명
             , A.SHIP_PORT                                 AS SHIP_PORT                                     -- 선적항
             , A.SHIP_PORT_NM                              AS SHIP_PORT_NM                                  -- 선적항명
             , A.DEST_FINAL                                AS DEST_FINAL                                    -- 최종목적지
             , A.BL_COUNT                                  AS BL_COUNT                                      -- B/L 발행부수
             , A.BL_PLCE                                   AS BL_PLCE                                       -- B/L 발행장소
             , A.PAY_METHD                                 AS PAY_METHD                                     -- 운임지불방법
             , A.EXCHANGE_RATE                             AS EXCHANGE_RATE                                 -- 환율
             , A.BL_AMT                                    AS BL_AMT                                        -- B/L 금액
             , A.BL_AMT_WON 						    AS BL_AMT_WON -- 환산액
             , A.AMT_UNIT                                  AS AMT_UNIT                                      -- 화폐단위
             , ISNULL(A.GROSS_WEIGHT, 0)                   AS GROSS_WEIGHT                                  -- 총중량
             , A.WEIGHT_UNIT                               AS WEIGHT_UNIT                                   -- 중량단위
             , ISNULL(A.NET_WEIGHT, 0)                     AS NET_WEIGHT                                    -- 순중량
             , ISNULL(A.GROSS_VOLUME, 0)                   AS GROSS_VOLUME                                  -- 총용적
             , A.VOLUME_UNIT                               AS VOLUME_UNIT                                   -- 용적단위
             , A.TRANS_COEF                                AS TRANS_COEF                                    -- 변환계수
             , A.PACKING_TYPE                              AS PACKING_TYPE                                  -- 포장형태
             , ISNULL(A.TOT_PACKING_COUNT, 0)              AS TOT_PACKING_COUNT                             -- 포장갯수
             , A.REMARKS1                                  AS REMARKS1
             , A.REMARKS2                                  AS REMARKS2
             , A.TAX_DIV                                   AS TAX_DIV                                       -- 세금신고사업장
             , B.PAY_TERMS                                 AS PAY_TERMS                                     -- 결제조건
             , B.PAY_DURING                                AS PAY_DURING                                    -- 결제기간
             , B.TERMS_PRICE                               AS TERMS_PRICE                                   -- 가격조건
             , B.PAY_METHODE                               AS PAY_MEGHODE                                   --
             , B.IMPORTER                                  AS IMPORTER                                      -- 수입자
             , UNILITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, B.IMPORTER)  AS IMPORTERNM
             , B.EXPORTER                                  AS EXPORTER                                      -- 수출자
             , UNILITE.FNCUSTNAMEComp(#{S_COMP_CODE},#{S_USER_ID}, B.EXPORTER)  AS EXPORTERNM               -- 수출자명
             , uniLite.fnGetUserDate(#{S_COMP_CODE},ISNULL(A.INVOICE_DATE,''))         AS INVOICE_DATE      -- 통관일
             , A.INVOICE_NO                                AS INVOICE_NO                                    -- 송장번호
             , A.CUSTOMS                                   AS CUSTOMS                                       -- 세관
             , A.REPORTOR                                  AS REPORTOR                                      -- 신고자
             , A.EP_TYPE                                   AS EP_TYPE                                       -- 신고구분
             , A.DIV_CODE
             , A.NATION_INOUT
             , A.TRADE_TYPE
             , A.PROJECT_NO
             , (SELECT  Z.PJT_NAME FROM BCM600T Z
                 WHERE  Z.PJT_CODE  = A.PROJECT_NO
                   AND  Z.COMP_CODE = #{S_COMP_CODE}
               ) PROJECT_NAME
             , A.EX_DATE
             , A.EX_NUM
             , (SELECT COUNT(1)
                  FROM TED120T WITH(NOLOCK)
                 WHERE COMP_CODE = A.COMP_CODE
                   AND DOC_NO    = A.BL_SER_NO) AS DOC_CNT
          FROM TIC100T A INNER JOIN TIC100V B ON A.DIV_CODE  = B.DIV_CODE
                                             AND A.BL_SER_NO = B.BL_SER_NO
                                             AND A.COMP_CODE = B.COMP_CODE
         WHERE A.COMP_CODE  = #{S_COMP_CODE}
           AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.BL_SER_NO  = #{BL_SER_NO}
    </select>


    <select id="tis100ukrvServiceImpl.selectBlMasterList" parameterType="Map" resultType="rMap">
        -- UTiFuncKrv.Public[fnBLMaster] Query01
        SELECT
              A.DIV_CODE, A.SO_SER_NO, A.BL_SER_NO, A.BL_NO
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.BL_DATE) BL_DATE
             ,A.IMPORTER
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTER_NM
             ,A.EXPORTER
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTER_NM
             ,A.EXCHANGE_RATE
             ,A.AMT_UNIT
             ,(SELECT B.CODE_NAME FROM BSA100T B
                WHERE B.SUB_CODE  = A.PAY_TERMS AND MAIN_CODE = N'T006'
                  AND B.COMP_CODE = #{S_COMP_CODE}
               ) PAY_TEMRS
             ,A.PAY_METHODE
             ,(SELECT B.CODE_NAME FROM BSA100T B
                WHERE B.SUB_CODE = A.TERMS_PRICE AND MAIN_CODE = N'T005'
                  AND B.COMP_CODE = #{S_COMP_CODE}
              ) TERMS_PRICE
             ,A.PAY_DURING
             ,A.LC_SER_NO
             ,A.VESSEL_NAME
             ,A.VESSEL_NATION_CODE
             ,A.DEST_PORT
             ,A.DEST_PORT_NM
             ,A.SHIP_PORT
             ,A.SHIP_PORT_NM
             ,A.PACKING_TYPE
             ,A.GROSS_WEIGHT
             ,A.WEIGHT_UNIT
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.DATE_SHIPPING) DATE_SHIPPING
             ,ISNULL(A.BL_AMT,0) BL_AMT
             ,ISNULL(A.BL_AMT_WON,0) BL_AMT_WON
             ,A.TRADE_TYPE
             ,A.NATION_INOUT
             ,A.PROJECT_NO
             ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
             ,(SELECT Z.PJT_NAME FROM BCM600T Z
                WHERE Z.PJT_CODE  = A.PROJECT_NO
                  AND Z.COMP_CODE = #{S_COMP_CODE}
               ) PROJECT_NAME
             ,(CASE WHEN (SELECT    COUNT(EXPENSE_FLAG) FROM BTR100T
                           WHERE   CREATE_LOC = N'6'
                             AND   COMP_CODE  = #{S_COMP_CODE}
                             AND   BL_NUM     = A.BL_SER_NO)  > 0 THEN
                   'Y'
               WHEN (SELECT   COUNT(EXPENSE_FLAG) FROM BTR100T
                      WHERE   CREATE_LOC = N'6'
                        AND   COMP_CODE  = #{S_COMP_CODE}
                        AND   BL_NUM = A.BL_SER_NO) = 0 THEN
                   'N'  END)
              AS EXPENSE_FLAG
            , B.INVOICE_NO  AS INVOICE_NO
            , B.CUSTOMS     AS CUSTOMS
            , B.EP_TYPE     AS EP_TYPE
            , C.LC_NO       AS LC_NO
			, B.EX_NUM
			, B.EX_DATE
         FROM            TIC100V A WITH (NOLOCK)
              INNER JOIN TIC100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                AND B.DIV_CODE  = A.DIV_CODE
                                                AND B.BL_SER_NO = A.BL_SER_NO
              LEFT  JOIN TIB100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                AND C.DIV_CODE  = B.DIV_CODE
                                                AND C.LC_SER_NO = B.LC_SER_NO
              INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                AND D.CUSTOM_CODE = A.EXPORTER
         WHERE A.COMP_CODE  = #{S_COMP_CODE}
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND A.DIV_CODE     = #{DIV_CODE}
           </if>
		   AND A.SO_SER_NO  = A.SO_SER_NO
           AND A.BL_SER_NO  = A.BL_SER_NO
           <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
            AND A.BL_SER_NO    LIKE #{BL_SER_NO}
           </if>
            AND A.BL_DATE      &gt;= #{BL_DATE_FR}
            AND A.BL_DATE      &lt;= #{BL_DATE_TO}
            
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
				AND A.EXPORTER = #{EXPORTER}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isEmpty(EXPORTER_NM)">
				AND A.EXPORTER LIKE #{EXPORTER} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
				AND D.CUSTOM_NAME LIKE '%' + #{EXPORTER_NM} + '%' 
			</if>

           <if test="@foren.Ognl@isNotEmpty(BL_NO)">
            AND A.BL_NO        LIKE #{BL_NO}
           </if>
           <if test="AUTO_SLIP_YN == &quot;Y&quot;">
			AND ISNULL(B.EX_DATE,'') != ''
           </if>
           <if test="AUTO_SLIP_YN == &quot;N&quot;">
			AND ISNULL(B.EX_DATE,'') = ''
           </if>
            ORDER BY A.DIV_CODE, A.BL_SER_NO DESC, A.BL_DATE
    </select>


    <select id="tis100ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
        SELECT
               A.DIV_CODE                                 AS DIV_CODE      -- 사업장
             , A.BL_SER_NO                                AS BL_SER_NO     -- 선적관리번호
             , A.BL_SER                                   AS BL_SER        -- 선적순번
             , A.ITEM_CODE                                AS ITEM_CODE     -- 품목코드
             , UNILITE.FNITEMNAMEComp(#{S_COMP_CODE}, #{S_USER_ID},B.ITEM_CODE) AS ITEM_NAME     -- 품목명
             , A.SPEC                                     AS SPEC          -- 규격
             , A.STOCK_UNIT_Q                             AS STOCK_UNIT_Q  -- 재고단위량
             , B.STOCK_UNIT                               AS STOCK_UNIT    -- 재고단위
             , A.TRNS_RATE                                AS TRNS_RATE     -- 변환계수
             , A.QTY                                      AS QTY           -- 수량
             , A.UNIT                                     AS UNIT          -- 구매단위
             , A.PRICE                                    AS PRICE         -- 단가
             , ISNULL(A.BL_AMT, 0)                        AS BL_AMT        -- 외화금액
             , A.BL_AMT_WON                               AS BL_AMT_WON    -- 원화금액
             , ISNULL(A.TARIFF_TAX, 0)                    AS TARIFF_TAX    -- 관세
             , A.WEIGHT                                   AS WEIGHT        -- 중량
             , A.VOLUME                                   AS VOLUME        -- 용적
             , A.HS_NO                                    AS HS_NO         -- HS번호
             , CASE WHEN C.HS_NAME IS NULL THEN B.HS_NAME
                    ELSE C.HS_NAME
               END  AS HS_NAME
             , ISNULL(E.MORE_PER_RATE, D.MORE_PER_RATE)   AS MORE_PER_RATE -- 과부족허용률(+)
             , ISNULL(E.LESS_PER_RATE, D.LESS_PER_RATE)   AS LESS_PER_RATE -- 과부족허용률(-)
             , A.SO_SER_NO                                AS SO_SER_NO     -- OFFER 관리번호
             , A.SO_SER                                   AS SO_SER        -- OFFER 순번
             , A.PUR_NO                                   AS PUR_NO        -- 발주번호
             , A.PUR_SEQ                                  AS PUR_SEQ       -- 발주순번
             , A.LC_SER_NO                                AS LC_SER_NO
             , A.LC_SER                                   AS LC_SER
             , A.PROJECT_NO                               AS PROJECT_NO    -- 관리번호
             , A.LOT_NO                                   AS LOT_NO
             , A.REMARK                                   AS REMARK        -- 비고
             , A.UPDATE_DB_USER                           AS UPDATE_DB_USER-- 수정자
             , A.UPDATE_DB_TIME                           AS UPDATE_DB_TIME-- 수정일
             , A.USE_QTY                                  AS USE_QTY       -- 통관수량
             , A.COMP_CODE                                AS COMP_CODE     -- COMP CODE
             , AA.AMT_UNIT
          FROM TIC110T A INNER JOIN BPR100T B ON A.ITEM_CODE = B.ITEM_CODE
                                             AND A.COMP_CODE = B.COMP_CODE
                         INNER JOIN TIC100T AA ON A.COMP_CODE = AA.COMP_CODE
                         				     AND A.DIV_CODE = AA.DIV_CODE
                         				     AND A.BL_SER_NO = AA.BL_SER_NO
                         LEFT  JOIN TIA110T D ON A.DIV_CODE  = D.DIV_CODE
                                             AND A.SO_SER_NO = D.SO_SER_NO
                                             AND A.SO_SER    = D.SO_SER
                                             AND A.COMP_CODE = D.COMP_CODE
                         LEFT  JOIN TIB110V E ON A.DIV_CODE  = E.DIV_CODE
                                             AND A.LC_SER_NO = E.LC_SER_NO
                                             AND A.LC_SER    = E.LC_SER
                                             AND A.COMP_CODE = E.COMP_CODE
                         LEFT  JOIN TAA030T C ON A.HS_NO     = C.HS_NO
                                             AND A.COMP_CODE = C.COMP_CODE

         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.DIV_CODE  = #{DIV_CODE}
           AND A.BL_SER_NO = #{BL_SER_NO}
        ORDER BY BL_SER
    </select>


    <select id="tis100ukrvServiceImpl.selectOfferGridList" parameterType="Map" resultType="rMap">
        -- tis100ukrv.Ctis100ukrv[fnOfferDetail] Query01
        SELECT
               CAST(0 AS BIT)                                AS CHOICE
             , A.DIV_CODE                                    AS DIV_CODE
             , A.SO_SER_NO                                   AS SO_SER_NO
             , B.SO_SER                                      AS SO_SER
             , A.EXPORTER                                    AS EXPORTER
             , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE) AS EXPORTER_NM
             , A.TERMS_PRICE                                 AS TERMS_PRICE
             , E.CODE_NAME                                   AS TERMS_PRICE_NM
             , A.PAY_TERMS                                   AS PAY_TERMS
             , F.CODE_NAME                                   AS PAY_TERMS_NM
             , B.ITEM_CODE                                   AS ITEM_CODE
             , uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},C.ITEM_CODE)    AS ITEM_NAME
             , B.SPEC                                        AS SPEC

             , ISNULL(B.STOCK_UNIT_Q, 0) - ISNULL(G.STOCK_UNIT_Q, 0) AS STOCK_UNIT_Q

             , C.STOCK_UNIT                                  AS STOCK_UNIT
             , B.TRNS_RATE                                   AS TRNS_RATE
             , ISNULL(B.QTY, 0) - ISNULL(B.USE_QTY, 0)       AS QTY
             , B.UNIT                                        AS UNIT
             , B.PRICE                                       AS PRICE
             , B.SO_AMT                                      AS SO_AMT
             , A.AMT_UNIT                                    AS AMT_UNIT
             , A.EXCHANGE_RATE                               AS EXCHANGE_RATE
             , B.SO_AMT_WON                                  AS SO_AMT_WON
             , B.HS_NO                                       AS HS_NO
             , CASE WHEN H.HS_NAME IS NULL THEN C.HS_NAME
                    ELSE H.HS_NAME
               END                                           AS HS_NAME
             , B.USE_QTY                                     AS USE_QTY
             , B.MORE_PER_RATE                               AS MORE_PER_RATE
             , B.LESS_PER_RATE                               AS LESS_PER_RATE
             , ISNULL(A.PROJECT_NO, '')                      AS PROJECT_NO
             , B.LOT_NO                                      AS LOT_NO
          FROM TiA100T A
                           INNER JOIN TiA110T B ON A.DIV_CODE  = B.DIV_CODE AND A.SO_SER_NO = B.SO_SER_NO
                                               AND A.COMP_CODE = B.COMP_CODE
                           INNER JOIN BPR100T C ON B.ITEM_CODE = C.ITEM_CODE
                                               AND B.COMP_CODE = C.COMP_CODE
                           INNER JOIN BCM100T D ON A.EXPORTER  = D.CUSTOM_CODE
                                               AND A.COMP_CODE = D.COMP_CODE
                           LEFT  JOIN TAA030T H ON B.HS_NO     = H.HS_NO
                                               AND B.COMP_CODE = H.COMP_CODE
                           LEFT  JOIN BSA100T E ON E.MAIN_CODE = 'T005'
                                               AND A.TERMS_PRICE = E.SUB_CODE
                                               AND E.COMP_CODE   = #{S_COMP_CODE}
                           LEFT  JOIN BSA100T F ON F.MAIN_CODE   = 'T006'
                                               AND A.PAY_TERMS   = F.SUB_CODE
                                               AND F.COMP_CODE   = #{S_COMP_CODE}
                           LEFT  JOIN (SELECT A.COMP_CODE,
                                              A.DIV_CODE,
                                              B.SO_SER_NO,
                                              B.SO_SER,
                                              SUM(B.QTY) AS QTY,
                                              SUM(B.STOCK_UNIT_Q) AS STOCK_UNIT_Q
                                              FROM TIC100T A WITH(NOLOCK)
                                                         INNER JOIN TIC110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                                                          AND A.DIV_CODE  = B.DIV_CODE
                                                                                          AND A.BL_SER_NO = B.BL_SER_NO
                                              WHERE A.COMP_CODE = #{S_COMP_CODE}

                                              GROUP BY A.COMP_CODE, A.DIV_CODE, B.SO_SER_NO, B.SO_SER
                                      ) G ON A.COMP_CODE = G.COMP_CODE
                                         AND A.DIV_CODE  = G.DIV_CODE
                                         AND B.SO_SER_NO = G.SO_SER_NO
                                         AND B.SO_SER    = G.SO_SER


         WHERE   A.COMP_CODE                                            = #{S_COMP_CODE}
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND A.DIV_CODE                                               = #{DIV_CODE}
           </if>
		   AND   B.CLOSE_FLAG                                           != 'Y'
           AND   A.TRADE_TYPE                                           != '2'
           AND   ISNULL(A.AGREE_STATUS, '1')                            != '1'
           AND ISNULL(B.STOCK_UNIT_Q, 0) - ISNULL(G.STOCK_UNIT_Q, 0)    &gt; 0
           <if test="@foren.Ognl@isNotEmpty(SO_SER_NO)">
            AND A.SO_SER_NO                                              = #{SO_SER_NO}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DATE_DEPART_FR)">
           	AND A.DATE_DEPART                                            &gt;= #{DATE_DEPART_FR}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DATE_DEPART_TO)">
           	AND A.DATE_DEPART                                            &lt;= #{DATE_DEPART_TO}
           </if>
           <if test="@foren.Ognl@isNotEmpty(EXPORTER)">
            AND A.EXPORTER                                               LIKE #{EXPORTER}
           </if>
            AND A.PAY_METHODE != 'MLC' AND A.PAY_METHODE != 'LLC' AND B.QTY &gt;= B.USE_QTY
            --	20210608	아래 조건 왜 있는지 이해안됨.
            --AND A.TRADE_TYPE                                             = '1'

         ORDER BY    A.DIV_COdE, A.SO_SER_NO DESC, B.SO_SER
    </select>


    <select id="tis100ukrvServiceImpl.selectOfferMasterList" parameterType="Map" resultType="rMap">
        -- UTiFuncKrv.Public[fnOfferMaster] Query01
        SELECT
              A.DIV_CODE, A.SO_SER_NO
              ,unilite.fnGetUserDate(#{S_COMP_CODE},A.Date_Depart) DATE_DEPART
              ,A.IMPORTER
              ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTERNM
              ,A.EXPORTER
              ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTERNM
              ,A.PAY_TERMS     --결제조건
              ,A.PAY_DURING    --결제기간
              ,A.TERMS_PRICE   --가격조건
              ,A.PAY_METHODE   --결제방법
              ,A.METHD_CARRY   --운송방법
              ,A.DEST_PORT     --도착항
              ,A.DEST_PORT_NM  --도착항명
              ,A.SHIP_PORT     --선적항
              ,A.SHIP_PORT_NM  --선적항명
              ,A.DEST_FINAL    --최종목적지
              ,A.PLACE_DELIVERY  --인도장소
              ,A.EXCHANGE_RATE   --환율
              ,A.AMT_UNIT      --통화단위
              ,A.SO_AMT        --외화금액
              ,A.SO_AMT_WON    --원화금액
              ,A.TRADE_TYPE
              ,A.NATION_INOUT
              ,A.PROJECT_NO
              ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
              , (SELECT Z.PJT_NAME from BCM600T Z
                  WHERE Z.PJT_CODE  = A.PROJECT_NO
                    AND Z.COMP_CODE = #{S_COMP_CODE}
                ) PROJECT_NAME
             ,(CASE WHEN  (SELECT COUNT(EXPENSE_FLAG) FROM    BTR100T
                            WHERE CREATE_LOC = N'6'
                              AND COMP_CODE  = #{S_COMP_CODE}
                              AND ORDER_NUM  = A.SO_SER_NO) > 0 THEN
                'Y'
               WHEN (SELECT COUNT(EXPENSE_FLAG) FROM    BTR100T
                      WHERE CREATE_LOC = N'6'
                        AND COMP_CODE  = #{S_COMP_CODE}
                        AND ORDER_NUM  = A.SO_SER_NO) = 0 THEN
               'N'  END)
             AS EXPENSE_FLAG
        FROM TIA100T A WITH (NOLOCK)
			 LEFT JOIN TIC100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.SO_SER_no=B.SO_SER_NO
			 INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE AND C.CUSTOM_CODE = A.EXPORTER
        WHERE A.COMP_CODE   = #{S_COMP_CODE}
		  AND A.DIV_CODE    = #{DIV_CODE}
		  --20191202 추가
		  AND B.COMP_CODE IS NULL
		  --AND A.SO_SER_NO   = A.SO_SER_NO
          AND A.DATE_DEPART &gt;= #{DATE_DEPART_FR}
          AND A.DATE_DEPART &lt;= #{DATE_DEPART_TO}
          <if test="@foren.Ognl@isNotEmpty(SO_SER_NO)">
            AND A.SO_SER_NO   LIKE #{SO_SER_NO}
          </if>
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
				AND A.EXPORTER = #{EXPORTER}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EXPORTER) and @foren.Ognl@isEmpty(EXPORTER_NM)">
				AND A.EXPORTER LIKE #{EXPORTER} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(EXPORTER) and @foren.Ognl@isNotEmpty(EXPORTER_NM)">
				AND C.CUSTOM_NAME LIKE '%' + #{EXPORTER_NM} + '%' 
			</if>         

          <if test="@foren.Ognl@isNotEmpty(TERMS_PRICE)">
            AND A.TERMS_PRICE  = #{TERMS_PRICE}
          </if>
          <if test="@foren.Ognl@isNotEmpty(PAY_TERMS)">
            AND A.PAY_METHODE  = #{PAY_TERMS}
          </if>
        ORDER BY A.SO_SER_NO DESC
    </select>


    <insert id="tis100ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_TIC100T
        ( KEY_VALUE,        OPR_FLAG
        , COMP_CODE,        DIV_CODE,               BL_SER_NO,        SO_SER_NO,            BL_NO
        , BL_DATE,          DATE_SHIPPING,          DATE_DEST,        METHD_CARRY,          VESSEL_NAME
        , FORWARDER,        VESSEL_NATION_CODE,     REC_PLCE,         DELIVERY_PLCE,        DEST_PORT
        , DEST_PORT_NM,     SHIP_PORT,              SHIP_PORT_NM,     DEST_FINAL,           BL_COUNT
        , BL_PLCE,          PAY_METHD,              EXCHANGE_RATE,    BL_AMT,               BL_AMT_WON
        , AMT_UNIT,         GROSS_WEIGHT,           WEIGHT_UNIT,      NET_WEIGHT,           GROSS_VOLUME
        , VOLUME_UNIT,      TRANS_COEF,             PACKING_TYPE,     TOT_PACKING_COUNT,    REMARKS1
        , REMARKS2,         NATION_INOUT,           TRADE_TYPE,       PROJECT_NO
        , UPDATE_DB_USER,   UPDATE_DB_TIME,         INVOICE_DATE,     INVOICE_NO,           CUSTOMS
        , EP_TYPE,          REPORTOR,               EXPORTER,         IMPORTER

         )

        VALUES
        ( #{KEY_VALUE},      #{OPR_FLAG}
        , #{S_COMP_CODE},    #{DIV_CODE},           #{BL_SER_NO},     #{SO_SER_NO},         #{BL_NO}
        , #{BL_DATE},        #{DATE_SHIPPING},      #{DATE_DEST},     #{METHD_CARRY},       #{VESSEL_NAME}
        , #{FORWARDER},      #{VESSEL_NATION_CODE}, #{REC_PLCE},      #{DELIVERY_PLCE},     #{DEST_PORT}
        , #{DEST_PORT_NM},   #{SHIP_PORT},          #{SHIP_PORT_NM},  #{DEST_FINAL},        #{BL_COUNT}
        , #{BL_PLCE},        #{PAY_METHD},          #{EXCHANGE_RATE}, #{BL_AMT},            #{BL_AMT_WON}
        , #{AMT_UNIT},       ISNULL(#{GROSS_WEIGHT}, 0),       #{WEIGHT_UNIT},   ISNULL(#{NET_WEIGHT}, 0),        ISNULL(#{GROSS_VOLUME}, 0)
        , #{VOLUME_UNIT},    #{TRANS_COEF},         #{PACKING_TYPE},  ISNULL(#{TOT_PACKING_COUNT}, 0), #{REMARKS1}
        , #{REMARKS2},       #{NATION_INOUT},       #{TRADE_TYPE},    #{PROJECT_NO}
        , #{S_USER_ID},      GETDATE(),             #{INVOICE_DATE},  #{INVOICE_NO},        #{CUSTOMS}
        , #{EP_TYPE},        #{REPORTOR},           #{EXPORTER},      #{IMPORTER}

         )
 	</insert>


    <insert id="tis100ukrvServiceImpl.insertLogDetail" parameterType="Map">
        INSERT INTO L_TIC110T
        ( KEY_VALUE,        OPR_FLAG
        , COMP_CODE,        DIV_CODE,           BL_SER_NO,        BL_SER,            ITEM_CODE
        , SPEC,             STOCK_UNIT_Q,       TRNS_RATE,        QTY,               UNIT
        , PRICE,            BL_AMT,             BL_AMT_WON,       TARIFF_TAX,        WEIGHT
        , VOLUME,           HS_NO,              SO_SER_NO,        SO_SER,            LC_SER_NO
        , LC_SER,           PUR_NO,             PUR_SEQ,          PROJECT_NO,        LOT_NO
        , USE_QTY,          REMARK,             UPDATE_DB_USER,   UPDATE_DB_TIME
         )

        VALUES
        ( #{KEY_VALUE},     #{OPR_FLAG}
        , #{S_COMP_CODE},   #{DIV_CODE},       #{BL_SER_NO},      #{BL_SER},         #{ITEM_CODE}
        , #{SPEC},          #{STOCK_UNIT_Q},   #{TRNS_RATE},      #{QTY},            #{UNIT}
        , #{PRICE},         #{BL_AMT},         #{BL_AMT_WON},     #{TARIFF_TAX},     #{WEIGHT}
        , #{VOLUME},        #{HS_NO},          #{SO_SER_NO},      #{SO_SER},         #{LC_SER_NO}
        , #{LC_SER},        #{PUR_NO},         #{PUR_SEQ},        #{PROJECT_NO},     #{LOT_NO}
        , #{USE_QTY},       #{REMARK},         #{S_USER_ID},      GETDATE()
         )

 	</insert>


	<update id="tis100ukrvServiceImpl.USP_TRADE_Tes100ukr" parameterType="Map" statementType="CALLABLE">
	    {call uniLITE.USP_TRADE_Tis100ukr (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{blSerNO, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
	</update>
	
	
    
    <!-- 파일 첨부 -->
    <select id="tis100ukrvServiceImpl.getFileList" parameterType="Map" resultType="rMap">
		/* tis100ukrvServiceImpl.getFileList  */
		SELECT A.FID AS id
		     , A.FID AS fid
		     , A.ORIGINAL_FILE_NAME AS name
		     , B.SIZE as size
		     , '6' AS status
		  FROM TED120T A  WITH (NOLOCK)
		  INNER JOIN BFL200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.FID = B.FID
		 WHERE A.COMP_CODE= #{S_COMP_CODE}
		   AND A.DOC_NO = #{DOC_NO}
	</select>
	<insert id="tis100ukrvServiceImpl.insertTED120" parameterType="Map">
		/* tis100ukrvServiceImpl.insertSOF102 */
		INSERT INTO TED120T
		    ( COMP_CODE  , DOC_NO  , FID , ORIGINAL_FILE_NAME, INSERT_DB_USER  , INSERT_DB_TIME )
		SELECT  #{S_COMP_CODE} , #{DOC_NO}  , #{FID} , ORIGINAL_FILE_NAME, #{S_USER_ID} , getdate()
		  FROM  BFL200T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND FID = #{FID}
	</insert>
	<update id="tis100ukrvServiceImpl.deleteTED120" parameterType="Map">
		/* tis100ukrvServiceImpl.deleteSOF102 */
		DELETE FROM  TED120T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND FID = #{FID}
	</update>
	<select id="tis100ukrvServiceImpl.selectDocCnt" parameterType="Map" resultType="Int">
		SELECT COUNT(1) AS DOC_CNT
		FROM TED120T
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND DOC_NO = #{DOC_NO}
	</select>
</mapper>