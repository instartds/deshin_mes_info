<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tik100ukrvServiceImpl">
	
	<select id="tik100ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
        --tik100ukrv.Ctik100ukrv[fnTik100n]
        SELECT A.NEGO_SER_NO
             , A.DIV_CODE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.PAY_DATE) AS PAY_DATE
             , A.IMPORTER
             , UNILITE.FNCUSTNAMECOMP(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) AS IMPORTER_NM
             , A.EXPORTER
             , UNILITE.FNCUSTNAMECOMP(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) AS EXPORTER_NM 
             , A.MONEY_UNIT
             , A.PAY_BANK
             , (SELECT Z.CUSTOM_NAME
                  FROM BCM100T Z
                 WHERE Z.COMP_CODE = #{S_COMP_CODE}
                   AND Z.CUSTOM_TYPE = N'4'
                   AND Z.CUSTOM_CODE = A.PAY_BANK) AS PAY_BANK_NM
             , A.BANK_CODE  BANK_CODE
             , A.ACCOUNT_NO
             , A.PAY_NM
             , A.BL_AMT
             , A.BL_EXCHANGE_RATE
             , A.BL_AMT_WON
             , A.PAY_METHODE
             , A.PAY_TERMS      AS  PAY_TERMS
             , A.PAY_DURING
             , A.TERMS_PRICE
             , A.AMT_SUB_PM
             , A.PAY_AMT
             , A.PAY_EXCHANGE_RATE
             , A.PAY_AMT_WON
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.PAY_DATE) AS PAY_DATE
             , A.COLET_TYPE
             , A.REMARKS1
             , A.REMARKS2
             , A.BASIS_SER_NO
             , A.TRADE_TYPE
             , A.NATION_INOUT
             , A.PROJECT_NO
             , A.PAY_DIVCODE
          FROM TIH100T A
         WHERE A.COMP_CODE = #{S_COMP_CODE}
         AND A.DIV_CODE = #{DIV_CODE}
         AND A.NEGO_SER_NO = #{NEGO_INCOM_NO}
	</select>
   
    <select id="tik100ukrvServiceImpl.selectBLList" parameterType="Map" resultType="rMap">
        -- UTiFuncKrv.Public[fnBLMaster] Query01
        SELECT
              A.DIV_CODE, A.BL_SER_NO, A.BL_NO 
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.BL_DATE) BL_DATE 
             ,A.IMPORTER 
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.IMPORTER) as IMPORTER_NM  
             ,A.EXPORTER 
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, A.EXPORTER) as EXPORTER_NM  
             ,A.EXCHANGE_RATE 
             ,A.AMT_UNIT 
             ,A.PAY_TERMS   AS  PAY_TERMS
             ,A.PAY_METHODE 
             ,A.TERMS_PRICE
             ,A.PAY_DURING  
             ,A.SO_SER_NO , A.LC_SER_NO 
             ,A.VESSEL_NAME 
             ,A.VESSEL_NATION_CODE 
             ,A.DEST_PORT    
             ,A.DEST_PORT_NM 
             ,A.SHIP_PORT    
             ,A.SHIP_PORT_NM 
             ,A.PACKING_TYPE 
             ,A.GROSS_WEIGHT 
             ,A.WEIGHT_UNIT  
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.DATE_SHIPPING) DATE_SHIPPING 
             ,ISNULL(A.BL_AMT,0) BL_AMT 
             ,ISNULL(A.BL_AMT_WON,0) BL_AMT_WON 
             ,A.TRADE_TYPE  
             ,A.NATION_INOUT
             ,A.PROJECT_NO  
             ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
             ,(SELECT Z.PJT_NAME FROM BCM600T Z
                WHERE Z.PJT_CODE  = A.PROJECT_NO 
                  AND Z.COMP_CODE = #{S_COMP_CODE} 
               ) PROJECT_NAME
             ,(CASE WHEN (SELECT    COUNT(EXPENSE_FLAG) FROM BTR100T
                           WHERE   CREATE_LOC = N'6'
                             AND   COMP_CODE  = #{S_COMP_CODE} 
                             AND   BL_NUM     = A.BL_SER_NO)  > 0 THEN
                   'Y'
               WHEN (SELECT   COUNT(EXPENSE_FLAG) FROM BTR100T
                      WHERE   CREATE_LOC = N'6'
                        AND   COMP_CODE  = #{S_COMP_CODE} 
                        AND   BL_NUM = A.BL_SER_NO) = 0 THEN
                   'N'  END)
              AS EXPENSE_FLAG
            , B.INVOICE_NO  AS INVOICE_NO
            , B.CUSTOMS     AS CUSTOMS
            , B.EP_TYPE     AS EP_TYPE
            , C.LC_NO       AS LC_NO
         FROM            TIC100V A WITH (NOLOCK)
              INNER JOIN TIC100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                AND B.DIV_CODE  = A.DIV_CODE
                                                AND B.BL_SER_NO = A.BL_SER_NO
              LEFT  JOIN TIB100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                AND C.DIV_CODE  = B.DIV_CODE
                                                AND C.LC_SER_NO = B.LC_SER_NO
         WHERE A.COMP_CODE = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
         AND A.BL_SER_NO like #{BL_SER_NO} + '%'
         </if>         
         AND A.BL_DATE &gt;= #{BL_DATE_FR}         
         AND A.BL_DATE &lt;= #{BL_DATE_TO}
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
         AND A.EXPORTER = #{CUSTOM_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
         AND A.DIV_CODE      = #{DIV_CODE}
         </if>
         AND (ISNULL(A.BL_AMT,0) - ISNULL(A.RECEIVE_AMT,0) > 0 )  
         ORDER BY A.DIV_CODE, A.BL_SER_NO DESC, A.BL_DATE
    </select>
    
    <insert id="tik100ukrvServiceImpl.insertLogDetail" parameterType="Map">
        INSERT L_TIH100T(
            KEY_VALUE,      
            COMP_CODE,    
            OPR_FLAG,           
            DIV_CODE,           
            NEGO_SER_NO,        
            TRADE_TYPE,         
            NATION_INOUT,       
            PROJECT_NO,         
            PAY_DATE,           
            PAY_NM,             
            COLET_TYPE,         
            PAY_BANK,           
            ACCOUNT_NO,         
            IMPORTER,           
            EXPORTER,           
            PAY_METHODE,        
            TERMS_PRICE,        
            PAY_TERMS,          
            PAY_DURING,         
            BL_AMT,             
            BL_EXCHANGE_RATE,   
            BL_AMT_WON,         
            PAY_AMT,            
            MONEY_UNIT,         
            PAY_EXCHANGE_RATE,  
            PAY_AMT_WON,        
            AMT_SUB_PM,         
            REMARKS1,           
            REMARKS2,           
            BASIS_SER_NO,       
            INSERT_DB_USER,     
            INSERT_DB_TIME,     
            UPDATE_DB_USER,     
            UPDATE_DB_TIME,     
            BANK_CODE,          
            PAY_DIVCODE            
        )VALUES(        
            #{KEY_VALUE},     
            #{S_COMP_CODE},     
            #{OPR_FLAG},           
            #{DIV_CODE},           
            #{NEGO_SER_NO},        
            #{TRADE_TYPE},         
            #{NATION_INOUT},       
            #{PROJECT_NO},         
            #{PAY_DATE},           
            #{PAY_NM},             
            #{COLET_TYPE},         
            #{PAY_BANK},           
            #{ACCOUNT_NO},         
            #{IMPORTER},           
            #{EXPORTER},           
            #{PAY_METHODE},        
            #{TERMS_PRICE},        
            #{PAY_TERMS},          
            #{PAY_DURING},         
            #{BL_AMT},             
            #{BL_EXCHANGE_RATE},   
            #{PAY_AMT_WON},         
            #{PAY_AMT},            
            #{MONEY_UNIT},         
            #{PAY_EXCHANGE_RATE},  
            #{PAY_AMT_WON},        
            #{AMT_SUB_PM},         
            #{REMARKS1},           
            #{REMARKS2},           
            #{BASIS_SER_NO},       
            #{S_USER_ID},     
            GETDATE(),     
            #{S_USER_ID},     
            GETDATE(),     
            #{BANK_CODE},          
            #{PAY_DIVCODE} 
        ) 
    </insert>
    
    <update id="tik100ukrvServiceImpl.USP_TRADE_TIK100UKR" parameterType="Map" statementType="CALLABLE">
        {call USP_TRADE_TIK100UKR (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{NegoNo,   mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>   
</mapper>