<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmr100ukrv_jwServiceImpl">

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QStd] Query01
	 BEGIN
	     DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 9.) 법인코드
	              , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
	              , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 1.) 작업장코드
	              , @FROM_PRODT            NVARCHAR(08)        -- (선택 2.) From 착수예정일
	              , @TO_PRODT              NVARCHAR(08)        -- (선택 3.) To 착수예정일
	              , @ITEM_CODE             NVARCHAR(20)        -- (선택 4.) 품목코드
	              , @CONTROL_STATUS        NVARCHAR(01)        -- (선택 5.) 작업실적 상태
	              , @CONTROL_STATUS1       NVARCHAR(01)        -- (선택10.) 작업실적 상태
	              , @CONTROL_STATUS2       NVARCHAR(01)        -- (선택11.) 작업실적 상태
	              , @WKORD_NUM             NVARCHAR(20)        -- (선택 8.) 작업지시 번호
	              , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID

	     SET @COMP_CODE         = #{S_COMP_CODE}
	     SET @DIV_CODE          = #{DIV_CODE}
	     SET @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
	     SET @FROM_PRODT        = #{PRODT_START_DATE_FR}
	     SET @TO_PRODT          = #{PRODT_START_DATE_TO}
	     SET @ITEM_CODE         = #{ITEM_CODE}
	     SET @CONTROL_STATUS    = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS1   = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS2   = #{CONTROL_STATUS}
	     SET @WKORD_NUM         = #{WKORD_NUM}
	     SET @USER_ID           = #{S_USER_ID}

	     -- s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QStd] Query1
	     SELECT
	            A.*
	     FROM   (
	            SELECT ISNULL(A.wkord_status, '2') AS CONTROL_STATUS
	                 , A.WKORD_NUM
	                 , A.PROG_WORK_CODE
	                 , A.WORK_SHOP_CODE
	                 , A.ITEM_CODE
	                 , uniLITE.fnItemNameComp(A.comp_code, @USER_ID, A.item_code) AS ITEM_NAME
	                 , C1.SPEC
	                 , C1.STOCK_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS WKORD_Q
	                 , uniLITE.fnFormat(A.comp_code, A.work_q,  'P_FSET_QS') AS WORK_Q
	                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS PRODT_Q
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_start_date) AS PRODT_START_DATE
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_end_date)   AS PRODT_END_DATE
	                 , A.REMARK
	                 , A.WK_PLAN_NUM
	                 , A.LINE_END_YN
	                 , A.WORK_END_YN
	                 , A.LINE_SEQ
	                 , A.PROG_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.prog_unit_q, 'P_FSET_QS')  AS PROG_UNIT_Q
	                 , C2.OUT_METH
	                 , '' AS AB
	                 , A.PROJECT_NO
	                 , A.PJT_CODE
	                 , A.LOT_NO
	                 , C2.RESULT_YN                               -- 생산실적시 영업 자동입고 방법
	                 , C2.INSPEC_YN                               -- 생산실적시 영업 출하검사 방법
	                 , C2.WH_CODE                                 -- 기준창고
	                 , ISNULL(C2.BASIS_P, 0) AS BASIS_P           -- 재고금액
	                 , A.DIV_CODE						          -- 사업장
	                --20180705 추가
				     , B.PRODT_PRSN
				     , B.PRODT_MACH
				     , B.PRODT_TIME
				     , B.DAY_NIGHT
				    --20180714추가
				     , C2.ARRAY_CNT
				    --20180823추가
				     , B1.ITEM_CODE			AS MAIN_ITEM_CODE
				     , B2.ITEM_NAME			AS MAIN_ITEM_NAME
         FROM              PMP100TV1 A  WITH (NOLOCK)
	                   INNER JOIN PMP100T   B  WITH (NOLOCK) ON B.comp_code = A.comp_code
	                                                        AND B.DIV_CODE  = A.DIV_CODE
	                                                        AND B.WKORD_NUM = A.WKORD_NUM
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.comp_code = A.comp_code
	                                                        AND C1.item_code = A.item_code
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.comp_code = A.comp_code
	                                                        AND C2.div_code  = A.div_code
	                                                        AND C2.item_code = A.item_code
				    --20180823추가
	                   LEFT JOIN PMP100T   B1 WITH (NOLOCK) ON B1.comp_code = A.comp_code
	                                                        AND B1.DIV_CODE  = A.DIV_CODE
	                                                        AND B1.WKORD_NUM = A.TOP_WKORD_NUM
	                   LEFT JOIN BPR100T   B2 WITH (NOLOCK) ON B2.comp_code = B1.comp_code
	                                                        AND B2.item_code = B1.item_code
	            WHERE  A.comp_code         = @COMP_CODE
	            AND    A.div_code          = @DIV_CODE
	            AND    A.work_shop_code    = @WORK_SHOP_CODE
	            AND    A.line_end_yn       = 'Y'
	            AND    A.work_end_yn       = CASE WHEN @CONTROL_STATUS != '8' THEN A.work_end_yn      ELSE 'Y'             END
	            AND    A.prodt_start_date &gt;= CASE WHEN @FROM_PRODT      = ''  THEN A.prodt_start_date ELSE @FROM_PRODT     END
	            AND    A.prodt_end_date   &lt;= CASE WHEN @TO_PRODT        = ''  THEN A.prodt_end_date   ELSE @TO_PRODT       END
	            AND    A.item_code      LIKE CASE WHEN @ITEM_CODE       = ''  THEN A.item_code        ELSE @ITEM_CODE      END + '%'
--	            AND    A.wkord_num      LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.wkord_num        ELSE @WKORD_NUM      END + '%'
	            AND  ((A.TOP_WKORD_NUM  LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.TOP_WKORD_NUM    ELSE @WKORD_NUM      END + '%')
	               OR (A.wkord_num      LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.wkord_num        ELSE @WKORD_NUM      END + '%'))
	            ) A
	     WHERE  (
	            (@CONTROL_STATUS = '') OR (@CONTROL_STATUS  != ''  AND A.control_status  = @CONTROL_STATUS )
	                                   OR (@CONTROL_STATUS1 != ''  AND A.control_status  = @CONTROL_STATUS1)
	                                   OR (@CONTROL_STATUS2 != ''  AND A.control_status  = @CONTROL_STATUS2)
	            )
	     ORDER BY A.WKORD_NUM
	 END
	</select>

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		<!-- 작업지시별등록 조회 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt3] Query01
    BEGIN
        DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 5.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 2.) 작업지시 번호
                 , @WKORD_Q               NUMERIC(18, 6)      -- (선택 3.) 작업지시 수량
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 4.) 공정코드
                 , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}
        SET @WKORD_Q        = #{WKORD_Q}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}

        -- s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt3] Query1
        SELECT
               uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date)      AS PRODT_DATE
             , uniLITE.fnFormat(A.comp_code, A.prodt_q,     'P_FSET_QS') AS PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.good_prodt_q,'P_FSET_QS') AS GOOD_PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.bad_prodt_q, 'P_FSET_QS') AS BAD_PRODT_Q
             , B.MAN_HOUR
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q,      'P_FSET_QS') AS WKORD_Q
             , uniLITE.fnFormat(A.comp_code, A.prodt_q,     'P_FSET_QS') AS PRODT_SUM
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q - ISNULL(A.prodt_q, 0), 'P_FSET_QS') AS JAN_Q
             , uniLITE.fnFormat(A.comp_code, ISNULL(A.in_stock_q, 0), 'P_FSET_QS')         AS IN_STOCK_Q
             , B.PRODT_NUM
             , @PROG_WORK_CODE      AS PROG_WORK_CODE
             , ISNULL(A.lot_no, '') AS LOT_NO
             , B.REMARK
             , B.PROJECT_NO
             , B.PJT_CODE
             , ISNULL(A.fr_serial_no, '') AS FR_SERIAL_NO
             , ISNULL(A.to_serial_no, '') AS TO_SERIAL_NO
             , '' AS UPDATE_DB_USER
             , '' AS UPDATE_DB_TIME
             , A.COMP_CODE
             , A.DIV_CODE
             --20180605 추가
			 , B.CONTROL_STATUS
			 , A.WKORD_NUM

			 --20180713 추가
			 , B.PRODT_PRSN
			 , B.PRODT_MACH
			 , B.PRODT_TIME
			 , B.DAY_NIGHT

        FROM              PMR200T  A  WITH (NOLOCK)
               INNER JOIN PMR110T  B  WITH (NOLOCK) ON B.comp_code = A.comp_code
                                                   AND B.div_code  = A.div_code
                                                   AND B.prodt_num = A.prodt_num
        WHERE  A.comp_code = @COMP_CODE
        AND    A.div_code  = @DIV_CODE
        AND    A.wkord_num = @WKORD_NUM
        ORDER BY B.prodt_date
    END
	</select>

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회1 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt1] Query01  공정별등록 조회1
    BEGIN
        DECLARE
                   @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 , 0 AS MAN_HOUR
                 , '00:00'	AS PRODT_TIME
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
			    --20180714추가
			     , CASE WHEN @WORK_SHOP_CODE = 'WC70' 
			              OR @WORK_SHOP_CODE = 'WC72' 
			              OR @WORK_SHOP_CODE = 'WC73' 
			              OR @WORK_SHOP_CODE = 'WC74' 
			              OR @WORK_SHOP_CODE > 'WC90' THEN A.TEMPN_01
			     		ELSE 1
			     	END														AS ARRAY_CNT
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			     , #{PERSON_NUMB}											AS PRODT_PRSN
			</if>

            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
                   INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.comp_code		 = A.comp_code
                                                       AND C2.div_code		 = A.div_code
                                                       AND C2.item_code		 = A.item_code
           WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            AND    A.work_shop_code = @WORK_SHOP_CODE
            ORDER BY RIGHT('00000' + A.line_seq, 5)

    END
	</select>

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회2 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt1] Query01   공정별등록 조회2
    BEGIN
        DECLARE
                   @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호


        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

            SELECT
            		ROW_NUMBER() OVER( ORDER BY  A.PRODT_DATE, A.PRODT_NUM) AS SORT_SEQ
                 ,  A.DIV_CODE
                 , A.PRODT_NUM
                 , A.PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , 0 AS CAL_PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE

				 --20180713 추가
				 , A.PRODT_PRSN
				 , A.PRODT_MACH
				 , A.PRODT_TIME
				 , A.DAY_NIGHT
				 , A.PQC

				 , B.ITEM_CODE
				 , R1.ITEM_NAME
				 , R1.SPEC
				 , R1.STOCK_UNIT
				 , R2.CODE_NAME AS PRODT_PRSN_NAME
				 , R3.CODE_NAME AS PQC_NAME

				 --, CONVERT(CHAR(8), DATEADD(MM, 6, A.PRODT_DATE), 112) AS END_DATE -- 라벨출력시 사용
				 , CASE WHEN R1.ITEM_LEVEL1 = '6000' THEN CONVERT(CHAR(8), DATEADD(MM, 12, A.PRODT_DATE), 112)
                            ELSE CONVERT(CHAR(8), DATEADD(MM, 12, A.PRODT_DATE), 112)
                       END                                                   AS END_DATE -- 라벨출력시 사용

				 , R4.PACK_QTY
				 ,	CASE WHEN LEN(A.LOT_NO) = 12 THEN '20' + SUBSTRING(A.LOT_NO,2,6)
					ELSE '' END AS DATE
				 ,  R4.ITEM_NAME
					+ '/'
					+ 'VJW'
					+ '/'
					+ SUBSTRING(A.LOT_NO,2,6)
					+ '/'
					+ CONVERT(VARCHAR(30),FLOOR(uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS')))
					+ '/'
					+ RIGHT(A.LOT_NO, 4) AS QR_CODE
				 , RIGHT(A.LOT_NO, 4) AS SERIAL_NO
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date

				   LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
							                        AND R1.ITEM_CODE = B.ITEM_CODE
				   LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
				   									AND R2.MAIN_CODE = 'P505'
				   									AND R2.SUB_CODE != '$'
				   									AND R2.SUB_CODE = A.PRODT_PRSN
				   LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
				   									AND R3.MAIN_CODE = 'P509'
				   									AND R3.SUB_CODE != '$'
				   									AND R3.SUB_CODE = A.PQC
				   LEFT JOIN BPR200T R4 WITH(NOLOCK) ON R4.COMP_CODE = B.COMP_CODE
							                        AND R4.DIV_CODE  = A.DIV_CODE
							                        AND R4.ITEM_CODE = B.ITEM_CODE

            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, B.lot_no
    END
	</select>

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList6" parameterType="Map" resultType="rMap">		<!-- 특이사항등록 조회 -->
	 --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt4] Query01
     SELECT
           A.DIV_CODE
         , A.WORK_SHOP_CODE
         , A.WKORD_NUM
         , A.PROG_WORK_CODE
         , B.PROG_WORK_NAME
         , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
         , A.CTL_CD1
         , A.TROUBLE_TIME
         , A.TROUBLE
         , A.TROUBLE_CS
         , A.ANSWER
         , A.SEQ
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , A.COMP_CODE
     FROM             PMR400T A WITH (NOLOCK)
           INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                             AND B.DIV_CODE       = A.DIV_CODE
                                             AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                             AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
           INNER JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                             AND C.MAIN_CODE      = 'P002'
                                             AND C.sub_code       = A.CTL_CD1
     WHERE A.COMP_CODE      = #{S_COMP_CODE}
     AND   A.DIV_CODE       = #{DIV_CODE}
     AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
     AND   A.WKORD_NUM      = #{WKORD_NUM}
     ORDER BY A.PRODT_DATE, A.PROG_WORK_CODE, A.CTL_CD1
	</select>





<!-- 등록 -->
	<update id="s_pmr100ukrv_jwServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

<!-- LOT_NO 자동채번 -->
	<select id="s_pmr100ukrv_jwServiceImpl.fnGetLotNo" parameterType="Map" resultType="string">
		BEGIN
			DECLARE @COMP_CODE		NVARCHAR(08)
				  , @DIV_CODE		NVARCHAR(08)
				  , @TABLE_ID		NVARCHAR(20)
				  , @PREFIX			NVARCHAR(03)
				  , @BASIS_DATE		NVARCHAR(08)
				  , @sAUTO_NUM		NVARCHAR(24)

				  , @TmpMaxSeq		NUMERIC(6, 0)
				  , @MaxSeq			NUMERIC(10, 0)
				  , @NumFormat		NVARCHAR(01)
				  , @FixSeq			NUMERIC(5, 0)


			SET @COMP_CODE	= #{COMP_CODE}
			SET @DIV_CODE	= #{DIV_CODE}
			SET @TABLE_ID	= 'LOT_NO'
			SET @BASIS_DATE	= #{BASIS_DATE}
			SET @sAUTO_NUM	= ''

			SET @BASIS_DATE = CASE WHEN ISNULL(@BASIS_DATE, '') = '' THEN CONVERT(NVARCHAR(8), GETDATE(), 112) ELSE @BASIS_DATE END

		-- 공통코드(Z008) : 작업장별로 구분자 다르게 설정
			SELECT @PREFIX = REF_CODE1
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'Z008'
			   AND SUB_CODE  = #{WORK_SHOP_CODE}

		--  공통코드(B067) : 자동채번자릿수(최종순번)에 의해 자릿수 설정  아니고 lot_no 채번은 무조건 5자리
			SET @FixSeq = 99999

			UPDATE A
			SET	@TmpMaxSeq = A.last_seq + 1
			  , @MaxSeq	= A.last_seq = CASE WHEN A.last_seq + 1 &gt; @FixSeq THEN A.last_seq
											ELSE A.last_seq + 1
									   END
			 FROM BAUTONOT A  WITH (ROWLOCK)
			WHERE A.comp_code  = @COMP_CODE
			  AND A.div_code   = @DIV_CODE
			  AND A.table_id   = @TABLE_ID
			  AND A.auto_man   = @PREFIX
			  AND A.basis_date = @BASIS_DATE

			IF @@ROWCOUNT = 0
				SET @MaxSeq = 0

			WHILE (@TmpMaxSeq &gt; @FixSeq AND @MaxSeq != 0)
			BEGIN
				SET @BASIS_DATE = CONVERT(NVARCHAR(8), DATEADD(DAY,   1, @BASIS_DATE), 112)

				UPDATE A
				   SET @TmpMaxSeq = A.last_seq + 1
				     , @MaxSeq	= A.last_seq = CASE WHEN A.last_seq + 1 &gt; @FixSeq THEN A.last_seq
													ELSE A.last_seq + 1
											   END
				  FROM BAUTONOT A  WITH (ROWLOCK)
				 WHERE A.comp_code  = @COMP_CODE
				   AND A.div_code   = @DIV_CODE
				   AND A.table_id   = @TABLE_ID
				   AND A.auto_man   = @PREFIX
				   AND A.basis_date = @BASIS_DATE

				IF @@ROWCOUNT = 0
					SET @MaxSeq = 0
			END

			IF @MaxSeq = 0
			BEGIN
				SET @MaxSeq = 1

				INSERT INTO BAUTONOT (comp_code, div_code, table_id, basis_date, auto_man, last_seq)
				VALUES (@COMP_CODE, @DIV_CODE, @TABLE_ID, @BASIS_DATE, @PREFIX, 1)
			END

			/* 업무특성상 별도채번 방법 적용 */
			SET @sAUTO_NUM =  @PREFIX + RIGHT(@BASIS_DATE,6) + RIGHT('0000' + CONVERT(VARCHAR, @MAXSEQ), 5)

			SELECT @sAUTO_NUM AS LOT_NO
		END
	</select>

	<insert id="s_pmr100ukrv_jwServiceImpl.insertDetail2" parameterType="Map">		/* 작업지시별등록 추가 */
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav2] Query2
	 INSERT INTO PMR110T
	      ( COMP_CODE
		  , DIV_CODE
	      , PRODT_NUM
		  , WORK_SHOP_CODE
	      , WKORD_NUM
		  , ITEM_CODE
	      , PRODT_DATE
		  , PRODT_Q
	      , GOOD_PRODT_Q
		  , BAD_PRODT_Q
	      , CONTROL_STATUS
		  , MAN_HOUR
	      , REMARK
		  , PROJECT_NO
		  , PJT_CODE
	      , LOT_NO
	      , FR_SERIAL_NO
		  , TO_SERIAL_NO

		  --20180713 추가
		  , PRODT_PRSN
		  , PRODT_MACH
		  , PRODT_TIME
		  , DAY_NIGHT

	      , INSERT_DB_USER
		  , INSERT_DB_TIME
		  , UPDATE_DB_USER
		  , UPDATE_DB_TIME)
	 VALUES
	      ( #{S_COMP_CODE}
	      , #{DIV_CODE}
	      , #{PRODT_NUM}
	      , #{WORK_SHOP_CODE}
	      , #{WKORD_NUM}
	      , #{ITEM_CODE}
	      , #{PRODT_DATE}
	      , #{PRODT_Q}
	      , #{GOOD_PRODT_Q}
	      , #{BAD_PRODT_Q}
	      , #{CONTROL_STATUS}
	      , #{MAN_HOUR}
	      , #{REMARK}
	      , #{PROJECT_NO}
	      , #{PJT_CODE}
	      , #{LOT_NO}
	      , #{FR_SERIAL_NO}
	      , #{TO_SERIAL_NO}

		  --20180713 추가
		  , #{PRODT_PRSN}
		  , #{PRODT_MACH}
		  , #{PRODT_TIME}
		  , #{DAY_NIGHT}

	      , #{S_USER_ID}
	      , getDate()
	      , #{S_USER_ID}
	      , getDate())
	</insert>

	<update id="s_pmr100ukrv_jwServiceImpl.updateDetail2" parameterType="Map">
        --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav1] Query2
        UPDATE PMR110T
           SET PRODT_DATE     = #{PRODT_DATE}
             , WORK_SHOP_CODE = #{WORK_SHOP_CODE}
             , PRODT_Q         = #{PRODT_Q}
             , GOOD_PRODT_Q    = #{GOOD_PRODT_Q}
             , BAD_PRODT_Q     = #{BAD_PRODT_Q}
             , WKORD_NUM      = #{WKORD_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="s_pmr100ukrv_jwServiceImpl.deleteDetail2" parameterType="Map">
		--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav1] Query1
        DELETE FROM PMR110T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>

	<insert id="s_pmr100ukrv_jwServiceImpl.insertDetail3" parameterType="Map">		/* 공정별등록 추가1 */
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav1] Query3
	INSERT INTO PMR100T
	     ( COMP_CODE
	     , DIV_CODE
	     , PRODT_NUM
	     , PRODT_DATE
	     , PROG_WORK_CODE
	     , PROG_WKORD_Q
	     , WORK_Q
	     , PASS_Q
	     , GOOD_WORK_Q
	     , BAD_WORK_Q
	     , WKORD_NUM
	     , LINE_END_YN
	     , WK_PLAN_NUM
	     , CONTROL_STATUS
	     , MAN_HOUR
	     , REMARK
	     , PROJECT_NO
	     , PJT_CODE
	     , LOT_NO
	     , FR_SERIAL_NO
	     , TO_SERIAL_NO

		  , PQC
		  --20180713 추가
		  , PRODT_PRSN
		  , PRODT_MACH
		  , PRODT_TIME
		  , DAY_NIGHT

	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     , TEMPC_01
	     )
	VALUES
	     ( #{S_COMP_CODE}
	     , #{DIV_CODE}
	     , #{PRODT_NUM}
	     , #{PRODT_DATE}
	     , #{PROG_WORK_CODE}
	     , #{PROG_WKORD_Q}
	     --계산된 값 저장
	     , #{PASS_Q_SAVE}
	     , #{PASS_Q_SAVE}
	     , #{GOOD_WORK_Q_SAVE}
	     , #{BAD_WORK_Q_SAVE}
	     , #{WKORD_NUM}
	     , #{LINE_END_YN}
	     , #{WK_PLAN_NUM}
	     , #{CONTROL_STATUS}
	     , #{MAN_HOUR}
	     , #{REMARK}
	     , #{PROJECT_NO}
	     , #{PJT_CODE}
	     , #{LOT_NO}
	     , #{FR_SERIAL_NO}
	     , #{TO_SERIAL_NO}

		  , #{PQC}
		  --20180713 추가
		  , #{PRODT_PRSN}
		  , #{PRODT_MACH}
		  , #{PRODT_TIME}
		  , #{DAY_NIGHT}

	     , #{S_USER_ID}
	     , getDate()
	     , #{S_USER_ID}
	     , getDate()
	     , #{TEMPC_01}
	     )
	</insert>

	<update id="s_pmr100ukrv_jwServiceImpl.updateDetail3" parameterType="Map">
        --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav1] Query2
        UPDATE PMR100T
           SET PRODT_DATE     = #{PRODT_DATE}
             , PROG_WORK_CODE = #{PROG_WORK_CODE}
             , PROG_WKORD_Q   = #{PROG_WKORD_Q}
             , WORK_Q         = #{WORK_Q}
             , PASS_Q         = #{PASS_Q}
             , GOOD_WORK_Q    = #{GOOD_WORK_Q}
             , BAD_WORK_Q     = #{BAD_WORK_Q}
             , WKORD_NUM      = #{WKORD_NUM}
             , LINE_END_YN    = #{LINE_END_YN}
             , WK_PLAN_NUM    = #{WK_PLAN_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="s_pmr100ukrv_jwServiceImpl.deleteDetail3" parameterType="Map">
		--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav1] Query1
        DELETE FROM PMR100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>


	<update id="s_pmr100ukrv_jwServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult_JW (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{BAD_WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC         ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList5" parameterType="Map" resultType="rMap">		<!-- 불량내역등록 조회 -->
		/* s_pmr100ukrv_jwServiceImpl.selectDetailList5 */
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DIV_CODE		NVARCHAR(08)
			  , @WORK_SHOP_CODE	NVARCHAR(08)
			  , @WKORD_NUM		NVARCHAR(20)
			  , @PROG_WORK_CODE	NVARCHAR(08)
			  , @ITEM_CODE		NVARCHAR(20)

		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{DIV_CODE}
		SET @WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		SET @WKORD_NUM		= #{WKORD_NUM}
		SET @PROG_WORK_CODE	= #{PROG_WORK_CODE}
		SET @ITEM_CODE		= #{ITEM_CODE}

		IF EXISTS ( SELECT TOP 1 * FROM PMR300T WITH (NOLOCK)
					 WHERE COMP_CODE		= @COMP_CODE
					   AND DIV_CODE			= @DIV_CODE
					   AND WORK_SHOP_CODE	= @WORK_SHOP_CODE
					   AND WKORD_NUM		= @WKORD_NUM
					)
			BEGIN
				SELECT 'Y'													AS QUERY_FLAG
					 , A.DIV_CODE
					 , A.WORK_SHOP_CODE
					 , A.WKORD_NUM
					 , A.PROG_WORK_CODE
					 , B.PROG_WORK_NAME
					 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date)	AS PRODT_DATE
					 , A.ITEM_CODE
					 , A.BAD_CODE
					 , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS')	AS BAD_Q
					 , A.REMARK
					 , A.UPDATE_DB_USER
					 , A.UPDATE_DB_TIME
					 , A.COMP_CODE
				 FROM			 PMR300T A WITH (NOLOCK)
					   INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
														 AND B.DIV_CODE			= A.DIV_CODE
														 AND B.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
														 AND B.PROG_WORK_CODE	= A.PROG_WORK_CODE
				 WHERE A.COMP_CODE		= @COMP_CODE
				   AND A.DIV_CODE		= @DIV_CODE
				   AND A.WORK_SHOP_CODE	= @WORK_SHOP_CODE
				   AND A.WKORD_NUM		= @WKORD_NUM
				 ORDER BY A.PROG_WORK_CODE ASC, A.PRODT_DATE ASC
			END
		ELSE
			BEGIN
				SELECT 'N'																AS QUERY_FLAG
					 , @DIV_CODE														AS DIV_CODE
					 , @WORK_SHOP_CODE													AS WORK_SHOP_CODE
					 , @WKORD_NUM														AS WKORD_NUM
					 , @PROG_WORK_CODE													AS PROG_WORK_CODE
					 --, A.PROG_WORK_NAME
					 , CASE WHEN ISNULL(A.PROG_WORK_NAME, '') = '' THEN C.PROG_WORK_NAME
							ELSE A.PROG_WORK_NAME
					   END																AS PROG_WORK_NAME
					 , CASE WHEN ISNULL(A.PRODT_DATE, '') = '' THEN GETDATE()
							ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_DATE)
					   END																AS PRODT_DATE
					 , @ITEM_CODE														AS ITEM_CODE
					 , CASE WHEN ISNULL(A.BAD_CODE, '') = '' THEN Z.SUB_CODE
							ELSE A.BAD_CODE
					   END																AS BAD_CODE
					 , ISNULL(unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS'), 0)	AS BAD_Q
					 , A.REMARK
					 , A.UPDATE_DB_USER
					 , A.UPDATE_DB_TIME
					 , Z.COMP_CODE
				 FROM			 BSA100T Z WITH (NOLOCK)
					   LEFT  JOIN ( SELECT A.DIV_CODE
										 , A.WORK_SHOP_CODE
										 , A.WKORD_NUM
										 , A.PROG_WORK_CODE
										 , B.PROG_WORK_NAME
										 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_DATE)		AS PRODT_DATE
										 , A.ITEM_CODE
										 , A.BAD_CODE
										 , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS')		AS BAD_Q
										 , A.REMARK
										 , A.UPDATE_DB_USER
										 , A.UPDATE_DB_TIME
										 , A.COMP_CODE
									  FROM		PMR300T A WITH (NOLOCK)
									   INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
																		 AND B.DIV_CODE			= A.DIV_CODE
																		 AND B.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
																		 AND B.PROG_WORK_CODE	= @PROG_WORK_CODE
									 WHERE A.COMP_CODE	  = @COMP_CODE
									   AND A.DIV_CODE	   = @DIV_CODE
									   AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE
									   AND A.WKORD_NUM		= @WKORD_NUM
									) A									 ON A.COMP_CODE = Z.COMP_CODE
					  INNER JOIN PBS200T C WITH (NOLOCK) ON C.COMP_CODE	  = @COMP_CODE
														AND C.DIV_CODE	   = @DIV_CODE
														AND C.WORK_SHOP_CODE = @WORK_SHOP_CODE
														AND C.PROG_WORK_CODE = @PROG_WORK_CODE
				 WHERE Z.COMP_CODE	= @COMP_CODE
				   AND Z.MAIN_CODE	= 'P003'
				   AND Z.SUB_CODE  != '$'
				   AND Z.USE_YN		= 'Y'
				 ORDER BY A.PROG_WORK_CODE ASC, A.PRODT_DATE ASC
			END
	</select>
	<select id="s_pmr100ukrv_jwServiceImpl.selectDetailList5_BACK" parameterType="Map" resultType="rMap">		<!-- 불량내역등록 조회 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt2] Query01
		SELECT
			   A.DIV_CODE
			 , A.WORK_SHOP_CODE
			 , A.WKORD_NUM
			 , A.PROG_WORK_CODE
			 , B.PROG_WORK_NAME
			 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
			 , A.ITEM_CODE
			 , A.BAD_CODE
			 , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS') AS BAD_Q
			 , A.REMARK
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 , A.COMP_CODE
		 FROM			 PMR300T A WITH (NOLOCK)
			   INNER JOIN PBS200T B WITH (NOLOCK) ON B.comp_code	  = A.comp_code
												 AND B.div_code	   = A.div_code
												 AND B.work_shop_code = A.work_shop_code
												 AND B.prog_work_code = A.prog_work_code
		 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
		 AND   A.DIV_CODE	   = #{DIV_CODE}
		 AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		 AND   A.WKORD_NUM	  = #{WKORD_NUM}
		 ORDER BY A.PROG_WORK_CODE ASC ,A.PRODT_DATE ASC
	 </select>

	<insert id="s_pmr100ukrv_jwServiceImpl.insertDetail5" parameterType="Map">		/* 불량내역등록 추가 */
	INSERT INTO PMR300T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , ITEM_CODE
		 , BAD_CODE
		 , BAD_Q
		 , REMARK
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE )
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{ITEM_CODE}
		 , #{BAD_CODE}
		 , #{BAD_Q}
		 , #{REMARK}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE} )
	</insert>

    <update id="s_pmr100ukrv_jwServiceImpl.updateDetail5" parameterType="Map">        /* 불량내역등록 수정 */
         --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav2] Query1
         UPDATE PMR300T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , ITEM_CODE      = #{ITEM_CODE}
              , BAD_Q          = #{BAD_Q}
              , REMARK         = #{REMARK}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND BAD_CODE       = #{BAD_CODE}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_jwServiceImpl.deleteDetail5" parameterType="Map">        /* 불량내역등록 삭제 */
        --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav2] Query1
        DELETE FROM PMR300T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND BAD_CODE       = #{BAD_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>

	<insert id="s_pmr100ukrv_jwServiceImpl.insertDetail6" parameterType="Map">		/* 특이사항등록 추가 */
	 INSERT INTO PMR400T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , CTL_CD1
		 , TROUBLE_TIME
		 , TROUBLE
		 , TROUBLE_CS
		 , ANSWER
		 , SEQ
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE )
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{CTL_CD1}
		 , #{TROUBLE_TIME}
		 , #{TROUBLE}
		 , #{TROUBLE_CS}
		 , #{ANSWER}
		 , #{SEQ}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE} )
	 </insert>

	<update id="s_pmr100ukrv_jwServiceImpl.updateDetail6" parameterType="Map">        /* 특이사항등록 수정 */
         --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav4] Query1
         UPDATE PMR400T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , CTL_CD1        = #{CTL_CD1}
              , TROUBLE_TIME   = #{TROUBLE_TIME}
              , TROUBLE        = #{TROUBLE}
              , TROUBLE_CS     = #{TROUBLE_CS}
              , ANSWER         = #{ANSWER}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND SEQ            = #{SEQ}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_jwServiceImpl.deleteDetail6" parameterType="Map">        /* 특이사항등록 삭제 */
        --s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100Sav4] Query1
        DELETE FROM PMR400T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND SEQ            = #{SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>


    <select id="s_pmr100ukrv_jwServiceImpl.printList" parameterType="Map" resultType="rMap">
/* s_pmr100ukrv_jwServiceImpl.printList 생산실적목록 출력 s_pmr100ukrv_jw */

	SELECT
		A.COMP_CODE
		,A.DIV_CODE
		, MAX(UNILITE.FNGETUSERDATECOMP(A.COMP_CODE, A.PRODT_DATE))AS PRODT_DATE
		,A.WORK_SHOP_CODE
		,R2.TREE_NAME 			AS WORK_SHOP_NAME
		,A.ITEM_CODE     		AS ITEM_CODE
		,R1.ITEM_NAME     		AS ITEM_NAME
		,R1.SPEC          		AS SPEC
		,R1.STOCK_UNIT    		AS STOCK_UNIT
		,SUM(A.PRODT_Q)			AS PRODT_Q
		,COUNT(A.LOT_NO)		AS LOT_NO
		,SUM(A.IN_STOCK_Q)		AS IN_STOCK_Q
		,A.WKORD_NUM     		AS WKORD_NUM
		,MAX(A.PRODT_NUM)		AS PRODT_NUM	-- 작업실적번호
		,MAX(A.REMARK)			AS REMARK
		,MAX(B.TOP_WKORD_NUM)	AS TOP_WKORD_NUM
		,MAX(B.PRODT_PRSN)	AS PRODT_PRSN


	  FROM PMR200T A WITH(NOLOCK)
	INNER JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									 AND B.DIV_CODE = A.DIV_CODE
									 AND B.WKORD_NUM = A.WKORD_NUM
	INNER JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								      AND R1.ITEM_CODE = A.ITEM_CODE
	INNER JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									  AND R2.TYPE_LEVEL = A.DIV_CODE
									  AND R2.TREE_CODE = A.WORK_SHOP_CODE
     WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.DIV_CODE = #{DIV_CODE}		--사업장
	   AND A.WKORD_NUM = #{WKORD_NUM}
	   AND A.PRODT_NUM IN
	<foreach collection="PRODT_NUM" item="item" separator="," close=")" open="(">
	 '${item}'
	</foreach>
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, R2.TREE_NAME
		, A.ITEM_CODE, R1.ITEM_NAME, R1.SPEC, R1.STOCK_UNIT, A.WKORD_NUM

</select>




	<!-- 목형정보 저장로직 관련 -->
	<select id="s_pmr100ukrv_jwServiceImpl.selectWoodenInfo" parameterType="Map" resultType="rMap">
		/* s_pmr100ukrv_jwServiceImpl.getWoodenInfo */
		 SELECT A.COMP_CODE,
				A.DIV_CODE,
				A.EQU_CODE,
				A.EQU_NAME,
				A.EQU_SPEC,

				--20180709
				A.WOODEN_CODE,
				A.SN_NO,
				A.ITEM_CODE,
				R2.ITEM_NAME,
				A.EQU_GUBUN,
				A.INSTOCK_DATE,
				A.TOT_PUNCH_Q,
				A.MIN_PUNCH_Q,
				A.MAX_PUNCH_Q,
				A.DISPOSAL_DATE,
				A.DISPOSAL_GUBUN,
				A.REMARK,

				--이력 저장 시, 필요한 데이터
				#{QUERY_FLAG}			AS QUERY_FLAG,
				#{PRODT_NUM}			AS PRODT_NUM,
				#{PRODT_DATE}			AS PRODT_DATE,
				#{PRODT_QTY}			AS PRODT_QTY,
				#{PRESS_CNT}			AS PRESS_CNT,
				#{WORK_SHOP_CODE}		AS WORK_SHOP_CODE,

				A.MODEL_CODE,
				A.CUSTOM_CODE,
				uniLITE.fnCustName(#{S_USER_ID}, A.CUSTOM_CODE) as CUSTOM_NAME,
				--A.PRODT_DATE,
				A.PRODT_Q,
				A.PRODT_O,
				A.REP_O,
				A.ASSETS_NO,
				A.EQU_GRADE,
				A.WEIGHT,
				A.EQU_PRSN,
				A.EQU_TYPE,
				A.MTRL_TYPE,
				A.MTRL_TEXT,
				A.BUY_COMP,
				A.BUY_DATE,
				A.BUY_AMT,
				A.SELL_DATE,
				A.SELL_AMT,
				A.ABOL_DATE,
				A.ABOL_AMT,
				A.CAPA,
				A.WORK_Q,
				A.CAVIT_BASE_Q,
				A.TRANS_DATE,
				A.FROM_DIV_CODE,
				A.USE_CUSTOM_CODE,
				R1.CUSTOM_NAME			AS USE_CUSTOM_NAME,
				A.INSERT_DB_USER,
				A.INSERT_DB_TIME,
				A.UPDATE_DB_USER,
				A.UPDATE_DB_TIME,
				--20180803 추가
				A.GUBUN
		  FROM		EQU200T A  WITH(NOLOCK)
		  LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE		= A.COMP_CODE
										   AND R1.CUSTOM_CODE	= A.USE_CUSTOM_CODE
		  LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE		= A.COMP_CODE
										   AND R2.ITEM_CODE		= A.ITEM_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.DIV_CODE		= #{DIV_CODE}
		   AND A.ITEM_CODE		= #{ITEM_CODE}
		   AND ISNULL(A.TOT_PUNCH_Q, 0) &lt;= A.MIN_PUNCH_Q
		 ORDER BY A.COMP_CODE
	</select>

	<update id="s_pmr100ukrv_jwServiceImpl.updateWoodenInfoDetail" parameterType="Map">
        /* s_pmr100ukrv_jwServiceImpl.updateWoodenInfoDetail */
        DECLARE @PUNCH_Q NUMERIC(30, 6)
            SET @PUNCH_Q = #{PUNCH_Q}
            SET @PUNCH_Q = ISNULL(@PUNCH_Q, 0)

        UPDATE EQU200T
           SET TOT_PUNCH_Q    = TOT_PUNCH_Q + @PUNCH_Q
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND WOODEN_CODE    = #{WOODEN_CODE}
           AND SN_NO          = #{SN_NO}
    </update>

	<update id="s_pmr100ukrv_jwServiceImpl.insertWoodenInfoLogDetail" parameterType="Map">
		/* s_pmr100ukrv_jwServiceImpl.insertWoodenInfoLogDetail */
		INSERT INTO EQU201T (
			  COMP_CODE							/* 법인코드			*/
			, DIV_CODE
			, EQU_CODE							/* 장비코드			*/
			, PRODT_NUM							/* 생산실적번호		*/
			, WKORD_NUM							/* 작업지시번호		*/
			, PRODT_DATE						/* 생산일자			*/
			, PRODT_QTY							/* 생산량			*/
			, PRESS_CNT							/* 타발수			*/
			, ARRAY_CNT							/* 배열수(작업지시)	*/
			, WORK_SHOP_CODE					/* 작업장			*/
			, INSERT_DB_USER					/* 입력자			*/
			, INSERT_DB_TIME					/* 입력일			*/
			, UPDATE_DB_USER					/* 수정자			*/
			, UPDATE_DB_TIME					/* 수정일			*/
		) VALUES (
			  #{S_COMP_CODE}					/* 법인코드			*/
			, #{DIV_CODE}
			, #{EQU_CODE}						/* 장비코드			*/
			, #{PRODT_NUM}						/* 생산실적번호		*/
			, #{WKORD_NUM}						/* 작업지시번호		*/
			, #{PRODT_DATE}						/* 생산일자			*/
			, ${PRODT_QTY} * ${PUNCH_Q} / ${PRESS_CNT}	/* 생산량		*/
			, #{PUNCH_Q}						/* 타발수			*/
			, #{ARRAY_CNT}						/* 배열수(작업지시)	*/
			, #{WORK_SHOP_CODE}					/* 작업장			*/
			, #{S_USER_ID}						/* 입력자			*/
			, GETDATE()							/* 입력일			*/
			, #{S_USER_ID}						/* 수정자			*/
			, GETDATE()							/* 수정일			*/
		)
    </update>

	<!-- 공정정보등록 삭제시, 수행 -->
	<update id="s_pmr100ukrv_jwServiceImpl.SP_EQUIT_EQU201UKRV_JW" parameterType="Map" statementType="CALLABLE">
        {call SP_EQUIT_EQU201UKRV_JW (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ARRAY_CNT,    mode=IN,    jdbcType=NUMERIC,   javaType=java.lang.Double},
            #{USER_ID,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>


	<select id="s_pmr100ukrv_jwServiceImpl.selectClipList" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회2 -->
	--s_pmr100ukrv_jw.Cs_pmr100ukrv_jw[fnPmr100QSt1] Query01   공정별등록 조회2
    BEGIN
        DECLARE
                   @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드


        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}

            SELECT
            		ROW_NUMBER() OVER( ORDER BY  A.PRODT_DATE, A.PRODT_NUM) AS SORT_SEQ
                 ,  A.DIV_CODE
                 , A.PRODT_NUM

                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , CAST(uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS REAL) AS GOOD_WORK_Q
--                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , 0 AS CAL_PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE

				 --20180713 추가
				 , A.PRODT_PRSN
				 , A.PRODT_MACH
				 , A.PRODT_TIME
				 , A.DAY_NIGHT
				 , A.PQC

				 , B.ITEM_CODE
				 , R1.ITEM_NAME
				 , R1.SPEC
				 , R1.STOCK_UNIT
				 , R2.CODE_NAME AS PRODT_PRSN_NAME
				 , R3.CODE_NAME AS PQC_NAME

				 --, A.PRODT_DATE
				 --, CONVERT(CHAR(8), DATEADD(MM, 6, A.PRODT_DATE), 112) AS END_DATE -- 라벨출력시 사용
				 , CONVERT(NVARCHAR(10), CONVERT(DATE, A.PRODT_DATE), 25) AS PRODT_DATE
				 --, CONVERT(NVARCHAR(10), DATEADD(MM, 6, A.PRODT_DATE), 25) AS END_DATE -- 라벨출력시 사용
				 , CASE WHEN R1.ITEM_LEVEL1 = '6000' THEN CONVERT(CHAR(8), DATEADD(MM, 12, A.PRODT_DATE), 112)
                            ELSE CONVERT(CHAR(8), DATEADD(MM, 12, A.PRODT_DATE), 112)
                       END                                                   AS END_DATE -- 라벨출력시 사용
				 , R4.PACK_QTY

            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date

				   LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
							                        AND R1.ITEM_CODE = B.ITEM_CODE
				   LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
				   									AND R2.MAIN_CODE = 'P505'
				   									AND R2.SUB_CODE != '$'
				   									AND R2.SUB_CODE = A.PRODT_PRSN
				   LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
				   									AND R3.MAIN_CODE = 'P509'
				   									AND R3.SUB_CODE != '$'
				   									AND R3.SUB_CODE = A.PQC
				   LEFT JOIN BPR200T R4 WITH(NOLOCK) ON R4.COMP_CODE = B.COMP_CODE
							                        AND R4.DIV_CODE  = A.DIV_CODE
							                        AND R4.ITEM_CODE = B.ITEM_CODE

            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE

			AND A.PRODT_NUM IN
			 <foreach collection="PRODT_NUM" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>
			AND A.PROG_WORK_CODE IN
			 <foreach collection="PROG_WORK_CODE" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>


            ORDER BY A.prodt_date, B.lot_no
    END
	</select>

	    <select id="s_pmr100ukrv_jwServiceImpl.printList2" parameterType="Map" resultType="rMap">
/* s_pmr100ukrv_jwServiceImpl.printList2 생산실적목록 출력 Clip Report */

	SELECT
		A.COMP_CODE
		,A.DIV_CODE
		, MAX(UNILITE.FNGETUSERDATECOMP(A.COMP_CODE, A.PRODT_DATE))AS PRODT_DATE
		,A.WORK_SHOP_CODE
		,R2.TREE_NAME 			AS WORK_SHOP_NAME
		,A.ITEM_CODE     		AS ITEM_CODE
		,R1.ITEM_NAME     		AS ITEM_NAME
		,R1.SPEC          		AS SPEC
		,R1.STOCK_UNIT    		AS STOCK_UNIT
		,SUM(A.PRODT_Q)			AS PRODT_Q
		,COUNT(A.LOT_NO)		AS LOT_NO
		,SUM(A.IN_STOCK_Q)		AS IN_STOCK_Q
		,A.WKORD_NUM     		AS WKORD_NUM
		,MAX(A.PRODT_NUM)		AS PRODT_NUM	-- 작업실적번호
		,MAX(A.REMARK)			AS REMARK
		,MAX(B.TOP_WKORD_NUM)	AS TOP_WKORD_NUM
		,MAX(B.PRODT_PRSN)	AS PRODT_PRSN


	  FROM PMR200T A WITH(NOLOCK)
	INNER JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									 AND B.DIV_CODE = A.DIV_CODE
									 AND B.WKORD_NUM = A.WKORD_NUM
	INNER JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								      AND R1.ITEM_CODE = A.ITEM_CODE
	INNER JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									  AND R2.TYPE_LEVEL = A.DIV_CODE
									  AND R2.TREE_CODE = A.WORK_SHOP_CODE
     WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.DIV_CODE = #{DIV_CODE}		--사업장
	   AND A.WKORD_NUM = #{WKORD_NUM}
	   AND A.PRODT_NUM IN
      (select value from  uniLITE.fnSplit(#{PRODT_NUM_CLIP}, ','))
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, R2.TREE_NAME
		, A.ITEM_CODE, R1.ITEM_NAME, R1.SPEC, R1.STOCK_UNIT, A.WKORD_NUM

</select>
</mapper>