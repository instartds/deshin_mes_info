<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str106ukrv_mekServiceImpl">
	<select id="s_str106ukrv_mekServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
	  <if test="RDO_TYPE == &quot;master&quot;">
		/* s_str106ukrv_mek.Cs_str106ukrv_mek[fnStr103QPop] Query01 master*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		   SELECT A.DIV_CODE
		    	, A.INOUT_CODE
		    	, C1.CUSTOM_NAME
		        , A.CREATE_LOC
		        , (CASE WHEN ISNULL ( A.INOUT_DATE , '' ) = ''
		                THEN ''
		                ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.INOUT_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING (A.INOUT_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING (A.INOUT_DATE, 7, 2))
		            END)                                                                 AS INOUT_DATE
		        , SUM(A.ORDER_UNIT_Q)                                                    AS INOUT_Q
		        , A.INOUT_PRSN
		        , A.INOUT_NUM
		        , A.SALE_DIV_CODE
		        , A.MONEY_UNIT
		        , A.EXCHG_RATE_O
		        , A.ISSUE_REQ_NUM
		        
		        , C1.AGENT_TYPE
		        , C1.CREDIT_YN
		        , C1.WON_CALC_BAS
		        , C1.TAX_TYPE
		        , C1.BUSI_PRSN
		        --20200108 주석 해제
		        , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN (CASE WHEN ISNULL(E.SALE_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.SALE_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(E.SALE_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(E.SALE_DATE, 7, 2))
		                                                        END)
		                                                    ELSE (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		                                                        END)
		            END                                                                 AS SALE_DATE
				, MAX(F.BOOKING_NUM) as BOOKING_NUM
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN SOF110T C  WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                            AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                            AND C.ORDER_NUM      = A.ORDER_NUM
		                                            AND C.SER_NO         = A.ORDER_SEQ
		        LEFT  JOIN TEA100T F  WITH (NOLOCK)  ON F.COMP_CODE      = C.COMP_CODE
		                                            AND F.DIV_CODE       = C.DIV_CODE
		                                            AND F.ORDER_NUM      = C.ORDER_NUM
		        INNER JOIN BCM100T C1 WITH (NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                            AND C1.CUSTOM_CODE   = A.INOUT_CODE
		        INNER JOIN BPR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                            AND C2.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN BCM100T C3 WITH (NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                            AND C3.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		        INNER  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                            AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                            AND C4.TREE_CODE     = A.WH_CODE
		        LEFT  JOIN SSA110T D  WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                            AND D.DIV_CODE       = A.DIV_CODE
		                                            AND D.INOUT_NUM      = A.INOUT_NUM
		                                            AND D.INOUT_SEQ      = A.INOUT_SEQ
		        LEFT  JOIN SSA100T E  WITH (NOLOCK)  ON E.COMP_CODE      = D.COMP_CODE
		                                            AND E.DIV_CODE       = D.DIV_CODE
		                                            AND E.BILL_NUM       = D.BILL_NUM
		    WHERE A.COMP_CODE          = @CompCode
		      AND A.INOUT_TYPE         = '2'
		      AND A.INOUT_TYPE_DETAIL != '98'                                 /* SET구성출고제외 */
		      AND A.DIV_CODE          = #{DIV_CODE}
		      
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			= #{CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE			LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		      AND C1.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		    </if>
		      
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		      AND A.INOUT_PRSN        = #{INOUT_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		      AND A.INOUT_DATE    &gt;= #{INOUT_DATE_FR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		      AND A.INOUT_DATE    &lt;= #{INOUT_DATE_TO}
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		      AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		      AND A.PROJECT_NO     LIKE #{PROJECT_NO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
		      AND A.ISSUE_REQ_NUM  LIKE #{ISSUE_REQ_NUM} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">
		      AND C.RECEIVER_NAME  LIKE '%' + #{RECEIVER_NAME}
		    </if>
		      AND A.CREATE_LOC        = #{CREATE_LOC}

			GROUP BY  A.DIV_CODE, A.INOUT_CODE, C1.CUSTOM_NAME, A.CREATE_LOC, A.INOUT_DATE, A.INOUT_PRSN, A.INOUT_NUM, A.SALE_DIV_CODE, A.MONEY_UNIT, A.EXCHG_RATE_O, E.SALE_DATE, A.ISSUE_REQ_NUM
		            , C1.AGENT_TYPE
		            , C1.CREDIT_YN
		            , C1.WON_CALC_BAS
		            , C1.TAX_TYPE
		            , C1.BUSI_PRSN
		            --20200108 추가
		            , E.SALE_DATE

		    ORDER BY A.DIV_CODE, A.INOUT_DATE, A.INOUT_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	  </if>
	  <if test="RDO_TYPE == &quot;detail&quot;">
		/* s_str106ukrv_mek.Cs_str106ukrv_mek[fnStr103QPop] Query01 detail*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT A.DIV_CODE
		        , A.ITEM_CODE
		        , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                    ELSE C2.ITEM_NAME
		        END)                                                                     AS ITEM_NAME
		        , C2.SPEC                                                                AS SPEC
		        , A.INOUT_TYPE_DETAIL
		        , A.CREATE_LOC
		        , (CASE WHEN ISNULL ( A.INOUT_DATE , '' ) = ''
		                THEN ''
		                ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.INOUT_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING (A.INOUT_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING (A.INOUT_DATE, 7, 2))
		            END)                                                                 AS INOUT_DATE
		        , A.ORDER_UNIT_Q                                                         AS INOUT_Q
		        , A.WH_CODE
		        , C4.TREE_NAME                                                           AS WH_NAME
		        , A.INOUT_PRSN
		        , C.RECEIVER_ID
		        , C.RECEIVER_NAME
		        , C.TELEPHONE_NUM1
		        , C.TELEPHONE_NUM2
		        , ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, '')                        AS ADDRESS
		        , A.INOUT_NUM
		        , A.ISSUE_REQ_NUM
		        , A.PROJECT_NO
		        , A.SALE_DIV_CODE
		        , (CASE WHEN @RefItem = '1' THEN C3.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C3.CUSTOM_NAME2
		                                    ELSE C3.CUSTOM_NAME
		           END)                                                                  AS SALE_CUST_NM
		        , A.INOUT_CODE
		        , A.MONEY_UNIT
		        , A.EXCHG_RATE_O
		        , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN (CASE WHEN ISNULL(E.SALE_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.SALE_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(E.SALE_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(E.SALE_DATE, 7, 2))
		                                                        END)
		                                                    ELSE (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                                                               THEN ''
		                                                               ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                                                                       , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                                                                       , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		                                                        END)
		            END                                                                 AS SALE_DATE
		         , C1.AGENT_TYPE
		         , C1.CREDIT_YN
		         , C1.WON_CALC_BAS
		         , C1.TAX_TYPE
		         , C1.BUSI_PRSN
		    FROM           BTR100T A  WITH (NOLOCK)
		        LEFT  JOIN SOF110T C  WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                            AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                            AND C.ORDER_NUM      = A.ORDER_NUM
		                                            AND C.SER_NO         = A.ORDER_SEQ
		        LEFT  JOIN TEA110T F  WITH (NOLOCK)  ON F.COMP_CODE      = A.COMP_CODE
		                                            AND F.DIV_CODE       = A.DIV_CODE
		                                            AND F.SO_SER_NO      = A.ORDER_NUM
		                                            AND F.SO_SER         = A.ORDER_SEQ
		        INNER JOIN BCM100T C1 WITH (NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                            AND C1.CUSTOM_CODE   = A.INOUT_CODE
		        INNER JOIN BPR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                            AND C2.ITEM_CODE     = A.ITEM_CODE
		        LEFT  JOIN BCM100T C3 WITH (NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                            AND C3.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		        INNER  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                            AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                            AND C4.TREE_CODE     = A.WH_CODE
		        LEFT  JOIN SSA110T D  WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                            AND D.DIV_CODE       = A.DIV_CODE
		                                            AND D.INOUT_NUM      = A.INOUT_NUM
		                                            AND D.INOUT_SEQ      = A.INOUT_SEQ
		        LEFT  JOIN SSA100T E  WITH (NOLOCK)  ON E.COMP_CODE      = D.COMP_CODE
		                                            AND E.DIV_CODE       = D.DIV_CODE
		                                            AND E.BILL_NUM       = D.BILL_NUM
		    WHERE A.COMP_CODE          = @CompCode
		      AND A.INOUT_TYPE         = '2'
		      AND A.INOUT_TYPE_DETAIL != '98'                                 /* SET구성출고제외 */
		      AND A.DIV_CODE          = #{DIV_CODE}
		      
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE 			= #{CUSTOM_CODE}					/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		      AND A.INOUT_CODE			LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		      AND C1.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		    </if>
		      
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		      AND A.INOUT_PRSN        = #{INOUT_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		      AND A.INOUT_DATE    &gt;= #{INOUT_DATE_FR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		      AND A.INOUT_DATE    &lt;= #{INOUT_DATE_TO}
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		      AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		      AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		    </if>
		    
		    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		      AND A.PROJECT_NO     LIKE #{PROJECT_NO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
		      AND A.ISSUE_REQ_NUM  LIKE #{ISSUE_REQ_NUM} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">
		      AND C.RECEIVER_NAME  LIKE '%' + #{RECEIVER_NAME}
		    </if>
		      AND A.CREATE_LOC        = #{CREATE_LOC}

		    ORDER BY A.DIV_CODE, A.ITEM_CODE, A.INOUT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	  </if>
	</select>

	<select id="s_str106ukrv_mekServiceImpl.selectRequestiList" parameterType="Map" resultType="rMap">
		/* 출하지시참조*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)
		    DECLARE @LOT_SUM_TYPE NVARCHAR(10)  /* LOT 관리 여부 */

		    SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
		         , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
		         , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)

		     FROM BSA100T
		    WHERE COMP_CODE = @CompCode
		      AND MAIN_CODE = N'S048'
		      AND SUB_CODE IN (N'SI', N'SR', N'SS')

		    IF @TimeSI IS NULL
		        SET @TimeSI = 'N'
		    IF @TimeSR IS NULL
		        SET @TimeSR = 'N'
		    IF @TimeSS IS NULL
		        SET @TimeSS = 'N'

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    /* LOT 관리 여부 */
  			SELECT @LOT_SUM_TYPE=REF_CODE1
  			FROM BSA100T A WITH (NOLOCK)
  			WHERE COMP_CODE=@CompCode
  			AND MAIN_CODE='B084'
  			AND SUB_CODE='C'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')


		    /* 데이터 조회 */
		    SELECT
		           CAST(0 AS BIT)                                                          AS CHOICE
		         ,(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                    ELSE C1.CUSTOM_NAME
		            END)                                                                   AS CUSTOM_NAME
		         , A.ITEM_CODE
		         ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                    ELSE C2.ITEM_NAME
		            END)                                                                   AS ITEM_NAME
		         , C2.SPEC
		         , A.ORDER_UNIT
		         , A.TRANS_RATE
		         , CAST(A.ISSUE_REQ_DATE AS DATETIME) AS ISSUE_REQ_DATE
		         ,(CASE WHEN ISNULL(A.ISSUE_DATE , '') = ''
		                     THEN ''
		                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.ISSUE_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING(A.ISSUE_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING(A.ISSUE_DATE, 7, 2))
		                END) + RTRIM(' ' + CASE @TimeSR WHEN 'Y' THEN ISNULL(A.DELIVERY_TIME,'')
		                                                ELSE ''
		                                    END)                                          AS ISSUE_DATE
		         ,(A.ISSUE_REQ_QTY - A.ISSUE_QTY)                                         AS NOT_REQ_Q
		         , A.ISSUE_REQ_QTY
		         , A.ISSUE_WGT_Q
		         , A.ISSUE_VOL_Q
--		         , ISNULL(D.GOOD_STOCK_Q, 0)                                              AS STOCK_Q
		         , CASE WHEN @LOT_SUM_TYPE = 'Y' AND C3.LOT_YN='Y' THEN ISNULL(D2.GOOD_STOCK_Q, 0) ELSE ISNULL(D.GOOD_STOCK_Q, 0)  END AS STOCK_Q
		         , A.WH_CODE
		         , A.ORDER_NUM
		         , A.ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ
		         , A.PROJECT_NO
		         --20191226 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME                                                            AS PROJECT_NAME
		         , E.PAY_METHODE1                                                         AS PAY_METHODE1
		         , E1.LC_SER_NO                                                           AS LC_SER_NO
		         , A.LOT_NO
		         , B.RECEIVER_ID
		         , B.RECEIVER_NAME
		         , B.TELEPHONE_NUM1
		         , B.TELEPHONE_NUM2
		         , ISNULL(B.ADDRESS1, '') + ISNULL(B.ADDRESS2, '')                        AS ADDRESS
		         ,(CASE WHEN @RefItem = '1' THEN C6.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C6.CUSTOM_NAME2
		                                    ELSE C6.CUSTOM_NAME
		            END)                                                                  AS ORDER_CUST_CD
		         , A.DIV_CODE
		         , A.CUSTOM_CODE
		         , A.INOUT_TYPE_DETAIL
		         , A.WH_CELL_CODE
		         , C5.WH_CELL_NAME
		         , A.ISSUE_FOR_PRICE AS ISSUE_REQ_PRICE
		         , A.ISSUE_FOR_PRICE AS ISSUE_REQ_AMT
		         , A.ISSUE_REQ_TAX_AMT
		         , A.TAX_TYPE
		         , A.MONEY_UNIT
		         , A.EXCHANGE_RATE
		         , A.ACCOUNT_YNC
		         , A.DISCOUNT_RATE
		         , A.ISSUE_REQ_PRSN                                                       AS ISSUE_REQ_PRSN
		         , A.DVRY_CUST_CD
		         , A.REMARK
		         , A.SER_NO
		         , A.SALE_CUSTOM_CODE
		         ,(CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
		                                     ELSE C4.CUSTOM_NAME
		            END)                                                                  AS SALE_CUST_CD
		         , A.ISSUE_DIV_CODE
		         , A.BILL_TYPE
		         , A.ORDER_TYPE
		         , A.PRICE_YN
		         , A.PO_NUM
		         , A.PO_SEQ
		         , C1.CREDIT_YN
		         , ISNULL(C1.WON_CALC_BAS , '3')                                          AS WON_CALC_BAS
		         , ISNULL(C1.TAX_TYPE     , '1')                                          AS TAX_INOUT
		         , A.AGENT_TYPE
		         , ISNULL(C2.STOCK_CARE_YN, 'Y')                                          AS STOCK_CARE_YN
		         , C2.STOCK_UNIT
		         , C7.DVRY_CUST_NM                                                        AS DVRY_CUST_NAME
		         , C.TAX_INOUT                                                            AS SOF100_TAX_INOUT
		         , CASE WHEN ISNULL(B.RETURN_Q, 0) &gt; 0 THEN 'Y' ELSE 'N' END              AS RETURN_Q_YN
		         , CASE WHEN ISNULL(A.REF_LOC, '1') = '1' THEN ISNULL(B.ORDER_Q, 0)
		                                                  ELSE ISNULL(E1.QTY, 0)
		            END                                                                   AS ORDER_Q
		         , CASE WHEN ISNULL(M1.REF_CODE2, '') = '' THEN M1.SUB_CODE
		                ELSE M1.REF_CODE2
		           END                                                                    AS REF_CODE2
		         , ISNULL(C2.EXCESS_RATE, 0)                                              AS EXCESS_RATE
		         , A.DEPT_CODE
		         , C3.ITEM_ACCOUNT
		         , A.PRICE_TYPE
		         , A.ISSUE_FOR_WGT_P
		         , A.ISSUE_WGT_P
		         , A.ISSUE_FOR_VOL_P
		         , A.ISSUE_VOL_P
		         , A.WGT_UNIT
		         , A.UNIT_WGT
		         , A.VOL_UNIT
		         , A.UNIT_VOL
		         , C3.LOT_YN
                 , A.REMARK_INTER
				 , MAX(E.BOOKING_NUM) AS BOOKING_NUM
		      FROM            SRQ100T A  WITH (NOLOCK)
		           LEFT  JOIN SOF110T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                              AND  B.DIV_CODE       = A.DIV_CODE
		                                              AND  B.ORDER_NUM      = A.ORDER_NUM
		                                              AND  B.SER_NO         = A.SER_NO
		           LEFT  JOIN SOF100T C  WITH (NOLOCK) ON  C.COMP_CODE      = B.COMP_CODE
		                                              AND  C.DIV_CODE       = B.DIV_CODE
		                                              AND  C.ORDER_NUM      = B.ORDER_NUM
		           LEFT  JOIN BIV100T D  WITH (NOLOCK) ON  D.COMP_CODE      = A.COMP_CODE
		                                              AND  D.DIV_CODE       = A.ISSUE_DIV_CODE
		                                              AND  D.WH_CODE        = A.WH_CODE
		                                              AND  D.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BIV150T D2  WITH (NOLOCK) ON  D2.COMP_CODE      = A.COMP_CODE
		                                              AND  D2.DIV_CODE       = A.ISSUE_DIV_CODE
		                                              AND  D2.WH_CODE        = A.WH_CODE
		                                              AND  D2.ITEM_CODE      = A.ITEM_CODE
													                        AND  D2.LOT_NO        = A.LOT_NO
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE    = A.CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
		                                              AND C2.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                              AND C3.DIV_CODE       = A.DIV_CODE
		                                              AND C3.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BCM100T C4 WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
		                                              AND C4.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE      = A.COMP_CODE
		                                              AND C5.DIV_CODE       = A.DIV_CODE
		                                              AND C5.WH_CODE        = A.WH_CODE
		                                              AND C5.WH_CELL_CODE   = A.WH_CELL_CODE
		           LEFT  JOIN BCM100T C6 WITH (NOLOCK) ON C6.COMP_CODE      = C.COMP_CODE
		                                              AND C6.CUSTOM_CODE    = C.CUSTOM_CODE
		           LEFT  JOIN SCM100T C7 WITH (NOLOCK) ON C7.COMP_CODE      = A.COMP_CODE
		                                              AND C7.CUSTOM_CODE    = A.CUSTOM_CODE
		                                              AND CONVERT(NVARCHAR, C7.DVRY_CUST_SEQ) = A.DVRY_CUST_CD
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                              AND M1.MAIN_CODE      = N'S007'
		                                              AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN TEA100T E  WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
		                                              AND E.DIV_CODE        = A.DIV_CODE
		                                              AND E.ORDER_NUM       = A.ORDER_NUM
		           LEFT  JOIN TEA110T E1 WITH (NOLOCK) ON E1.COMP_CODE      = A.COMP_CODE
		                                              AND E1.DIV_CODE       = A.DIV_CODE
		                                              AND E1.SO_SER_NO      = A.ORDER_NUM
		                                              AND E1.SO_SER         = A.SER_NO
		           --20191226 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T Z1 WITH(NOLOCK)  ON Z1.COMP_CODE      = A.COMP_CODE
		                                              AND Z1.PJT_CODE       = A.PROJECT_NO
		     WHERE A.COMP_CODE        = @CompCode
		       AND A.ISSUE_REQ_QTY    &gt; A.ISSUE_QTY
		       AND ISNULL(B.ORDER_STATUS,'N')      = 'N'           /* 마감여부 */
		     <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
		       AND ISNULL(A.REF_LOC, '1') = #{CREATE_LOC}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.ISSUE_DIV_CODE   	  = #{DIV_CODE}		/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		       AND A.MONEY_UNIT           = #{MONEY_UNIT}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE          = #{CUSTOM_CODE}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND C1.CUSTOM_NAME         = #{CUSTOM_NAME}	/*마스터폼 param*/
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 			= #{ITEM_CODE}						/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 			LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		       AND C2.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_FR)">
		       AND A.ISSUE_DATE       &gt;= #{ISSUE_DATE_FR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_TO)">
		       AND A.ISSUE_DATE       &lt;= #{ISSUE_DATE_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
		       AND A.ISSUE_REQ_NUM     LIKE #{ISSUE_REQ_NUM} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_SEQ)">
		       AND A.ISSUE_REQ_SEQ     = #{ISSUE_REQ_SEQ}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO        LIKE #{PROJECT_NO} +  '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		       AND A.WH_CODE  			  = #{WH_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(REMARK_INTER)">
		       AND A.REMARK_INTER  		 LIKE  '%'+ #{REMARK_INTER} + '%'
		     </if>

		     GROUP BY A.CUSTOM_CODE      , C1.CUSTOM_NAME      , A.ITEM_CODE        , C2.ITEM_NAME       , C2.ITEM_NAME1
		            , C2.ITEM_NAME2      , C2.SPEC
		            , A.ORDER_UNIT       , A.TRANS_RATE        , A.ISSUE_REQ_DATE   , A.ISSUE_DATE       , A.DELIVERY_TIME
		            , A.ISSUE_REQ_QTY    , A.ISSUE_QTY         , CASE WHEN @LOT_SUM_TYPE = 'Y' AND C3.LOT_YN='Y' THEN ISNULL(D2.GOOD_STOCK_Q, 0) ELSE ISNULL(D.GOOD_STOCK_Q, 0) END
		            , A.ISSUE_REQ_NUM    , A.ISSUE_REQ_SEQ
		            , A.PROJECT_NO       , A.LOT_NO            , B.RECEIVER_ID      , B.RECEIVER_NAME    , B.TELEPHONE_NUM1
		            , B.TELEPHONE_NUM2   , B.ADDRESS1          , B.ADDRESS2         , C6.CUSTOM_NAME     , C6.CUSTOM_NAME1
		            , C6.CUSTOM_NAME2    , A.INOUT_TYPE_DETAIL , A.ISSUE_DIV_CODE   , A.BILL_TYPE
		            , A.WH_CODE          , A.WH_CELL_CODE      , C5.WH_CELL_NAME    , A.ISSUE_FOR_PRICE  , A.ISSUE_FOR_PRICE
		            , A.ISSUE_REQ_TAX_AMT, A.TAX_TYPE          , A.MONEY_UNIT       , A.EXCHANGE_RATE    , A.ACCOUNT_YNC
		            , A.DISCOUNT_RATE    , A.ISSUE_REQ_PRSN    , A.DVRY_CUST_CD     , A.REMARK           , A.ORDER_NUM
		            , A.SER_NO           , A.SALE_CUSTOM_CODE  , C4.CUSTOM_NAME     , C4.CUSTOM_NAME1    , C4.CUSTOM_NAME2
		            , A.ORDER_TYPE       , A.PRICE_YN          , A.PO_NUM           , A.PO_SEQ           , C1.CREDIT_YN
		            , C1.WON_CALC_BAS    , C1.TAX_TYPE         , A.AGENT_TYPE       , C2.STOCK_CARE_YN   , C2.STOCK_UNIT
		            , C7.DVRY_CUST_NM    , C.TAX_INOUT         , B.RETURN_Q         , B.ORDER_Q          , M1.REF_CODE2
		            , M1.SUB_CODE        , C2.EXCESS_RATE      , A.DEPT_CODE        , A.COMP_CODE        , A.DIV_CODE
		            , E.PAY_METHODE1     , E1.LC_SER_NO        , C3.ITEM_ACCOUNT    , C1.CUSTOM_NAME1    , C1.CUSTOM_NAME2
		            , A.REF_LOC          , E1.QTY              , A.ISSUE_WGT_Q      , A.ISSUE_VOL_Q
		            , A.PRICE_TYPE       , A.ISSUE_FOR_WGT_P   , A.ISSUE_WGT_P      , A.ISSUE_VOL_P      , A.ISSUE_FOR_VOL_P
		            , A.WGT_UNIT         , A.UNIT_WGT          , A.VOL_UNIT         , A.UNIT_VOL         , C3.LOT_YN          , A.REMARK_INTER
		            --20191226 추가: 프로젝트명 가져오기 위해 추가
		            , Z1.PJT_NAME

		     ORDER BY A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ, C1.CUSTOM_NAME, A.ISSUE_REQ_PRSN DESC, A.ITEM_CODE, A.ISSUE_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>



	<select id="s_str106ukrv_mekServiceImpl.selectRequestExcelList" parameterType="Map" resultType="rMap">
		/* s_str106ukrv_mekServiceImpl.selectRequestExcelList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)
		    DECLARE @LOT_SUM_TYPE NVARCHAR(10)  /* LOT 관리 여부 */

		    SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
		         , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
		         , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)

		     FROM BSA100T
		    WHERE COMP_CODE = @CompCode
		      AND MAIN_CODE = N'S048'
		      AND SUB_CODE IN (N'SI', N'SR', N'SS')

		    IF @TimeSI IS NULL
		        SET @TimeSI = 'N'
		    IF @TimeSR IS NULL
		        SET @TimeSR = 'N'
		    IF @TimeSS IS NULL
		        SET @TimeSS = 'N'

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    /* LOT 관리 여부 */
  			SELECT @LOT_SUM_TYPE=REF_CODE1
  			FROM BSA100T A WITH (NOLOCK)
  			WHERE COMP_CODE=@CompCode
  			AND MAIN_CODE='B084'
  			AND SUB_CODE='C'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')


    		INSERT INTO L_BTR100T
		     ( KEY_VALUE,         OPR_FLAG
		     , COMP_CODE,         DIV_CODE,        INOUT_NUM,      INOUT_SEQ,       INOUT_TYPE,        INOUT_METH
		     , INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE,     WH_CODE,         INOUT_DATE
		     , ITEM_CODE,         ITEM_STATUS,     INOUT_Q,        INOUT_P,         INOUT_I
		     , MONEY_UNIT,        INOUT_FOR_P,     INOUT_FOR_O,    EXCHG_RATE_O,    ORDER_TYPE
		     , ORDER_NUM,         ORDER_SEQ,       INOUT_PRSN,     BASIS_NUM,       BASIS_SEQ
		     , ACCOUNT_YNC,       ACCOUNT_Q,       CREATE_LOC,     SALE_C_YN,       REMARK
		     , ORDER_UNIT,        TRNS_RATE,       PROJECT_NO,     ORDER_UNIT_Q,    ORDER_UNIT_P
		     , ORDER_UNIT_FOR_P,  ISSUE_REQ_NUM,   ISSUE_REQ_SEQ,  DVRY_CUST_CD,    DISCOUNT_RATE
		     , INOUT_TAX_AMT,     TAX_TYPE,        LOT_NO,         SALE_DIV_CODE,   SALE_CUSTOM_CODE
		     , BILL_TYPE,         SALE_TYPE,       PRICE_YN,       ORDER_UNIT_O,    SALE_PRSN
		     , FR_ACCOUNT,        TO_ACCOUNT,      LC_NUM,         TRADE_LOC
		     , DELIVERY_DATE,     DELIVERY_TIME,   WH_CELL_CODE,   AGENT_TYPE,      DEPT_CODE
		     , TRANS_COST,        PRICE_TYPE,      INOUT_WGT_Q,    INOUT_FOR_WGT_P, INOUT_WGT_P
		     , INOUT_VOL_Q,       INOUT_FOR_VOL_P, INOUT_VOL_P,    WGT_UNIT,        UNIT_WGT
		     , VOL_UNIT,          UNIT_VOL,        NATION_INOUT,   SALE_C_DATE,     UPDATE_DB_USER
		     , UPDATE_DB_TIME, 	  PACK_UNIT_Q, 	   BOX_Q,		   EACH_Q,		    LOSS_Q
			, REMARK_INTER
		     )
		     
		    SELECT
		           #{keyValue}    -- KEY_VALUE
		         , 'N'            -- OPR_FLAG(처리형태)
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , ''             -- INOUT_NUM(수불번호)
		         , ROW_NUMBER() OVER(ORDER BY (SELECT 1)) AS INOUT_SEQ -- (수불순번)
		         , N'2'                -- INOUT_TYPE(수불타입)
		         , N'1'                -- INOUT_METH(수불방법)
		         , B.INOUT_TYPE_DETAIL -- (수불유형)
		         , N'4'                -- INOUT_CODE_TYPE(수불처구분)
		         , B.SALE_CUSTOM_CODE  -- (매출처)
		         , C.WH_CODE           -- (창고코드)
		         , #{INOUT_DATE}
		         , A.ITEM_CODE
		         , '1' -- ITEM_STATUS
		         , A.INOUT_Q * B.TRANS_RATE AS INOUT_Q
		         , (CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE / B.TRANS_RATE END) * #{EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{S_COMP_CODE}, #{MONEY_UNIT}) AS INOUT_P 
		         , A.INOUT_Q * (CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE END) * #{EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{S_COMP_CODE}, #{MONEY_UNIT})  AS INOUT_I
		         , B.MONEY_UNIT
		         , CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE / B.TRANS_RATE END AS INOUT_FOR_P
		         , CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE * A.INOUT_Q END    AS INOUT_FOR_O
		         , #{EXCHG_RATE_O}
		         , B.ORDER_TYPE
		         , B.ORDER_NUM
		         , B.SER_NO
		         , #{INOUT_PRSN}
		         , ''   -- BASIS_NUM
		         , 0    -- BASIS_SEQ
		         , B.ACCOUNT_YNC
		         , 0 -- ACCOUNT_Q
		         , '1' -- CREATE_LOC
		         , N'N' -- SALE_C_YN
		         , B.REMARK
		         , B.ORDER_UNIT
		         , B.TRANS_RATE
		         , B.PROJECT_NO
		         , A.INOUT_Q                                                         AS ORDER_UNIT_Q
		         , (CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE END) AS ORDER_UNIT_P
		         , (CASE WHEN B.ACCOUNT_YNC = 'N' THEN 0 ELSE B.ISSUE_REQ_PRICE END) AS ORDER_UNIT_FOR_P
		         , B.ISSUE_REQ_NUM
		         , B.ISSUE_REQ_SEQ
		         , B.DVRY_CUST_CD
		         , B.DISCOUNT_RATE
		         , B.ISSUE_REQ_TAX_AMT
		         , B.TAX_TYPE
		         , A.LOT_NO
		         , B.ISSUE_DIV_CODE
		         , B.SALE_CUSTOM_CODE
		         , B.BILL_TYPE
		         , B.ORDER_TYPE
		         , B.PRICE_YN
		         , B.ISSUE_REQ_AMT
		         , B.ISSUE_REQ_PRSN
		         , C3.ITEM_ACCOUNT -- FR_ACCOUNT
		         , CASE WHEN C3.ITEM_ACCOUNT >= N'40' THEN N'00' ELSE C3.ITEM_ACCOUNT END -- TO_ACCOUNT
		         , '' -- LC_NUM
		         , '1' -- CTRADE_LOC
		         , B.ISSUE_DATE
		         , B.DELIVERY_TIME
		         , C.WH_CELL_CODE
		         , B.AGENT_TYPE
		         , B.DEPT_CODE
		         , 0 -- TRANS_COST
		         , B.PRICE_TYPE
		         , 0 -- INOUT_WGT_Q
		         , 0 -- INOUT_FOR_WGT_P
		         , 0 -- INOUT_WGT_P
		         , 0 -- INOUT_VOL_Q
		         , 0 -- INOUT_FOR_VOL_P
		         , 0 -- INOUT_VOL_P
		         , B.WGT_UNIT
		         , B.UNIT_WGT
		         , B.VOL_UNIT
		         , B.UNIT_VOL
		         , '1' -- NATION_INOUT
		         , #{SALE_DATE}
		         , #{S_USER_ID} -- UPDATE_DB_USER
		         , GETDATE() -- UPDATE_DB_TIME
		         , 0 -- PACK_UNIT_Q
		         , 0 -- BOX_Q
		         , 0 -- EACH_Q
		         , 0 -- LOSS_Q
		         , B.REMARK_INTER
		      FROM S_STR106UKRV_EXCEL A
		           LEFT  JOIN SRQ100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
													 AND A.DIV_CODE  = B.DIV_CODE
													 AND A.ITEM_CODE = B.ITEM_CODE
					LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, MAX(WH_CODE) AS WH_CODE, MAX(WH_CELL_CODE) AS WH_CELL_CODE
							   FROM BIV150TV
							   GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO) C ON A.COMP_CODE = C.COMP_CODE
																				 AND A.DIV_CODE  = C.DIV_CODE
																				 AND A.ITEM_CODE = C.ITEM_CODE
																				 AND A.LOT_NO    = C.LOT_NO

					INNER JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                               AND C3.DIV_CODE       = A.DIV_CODE
		                                               AND C3.ITEM_CODE      = A.ITEM_CODE

			 WHERE A.COMP_CODE     = #{S_COMP_CODE}
			   AND A.DIV_CODE      = #{DIV_CODE}
			   AND A._EXCEL_JOBID  = #{_EXCEL_JOBID}
			   AND B.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
			   AND A._EXCEL_HAS_ERROR IS NULL

		     ORDER BY B.ISSUE_REQ_NUM, B.ISSUE_REQ_SEQ, B.ISSUE_REQ_PRSN DESC, A.ITEM_CODE, B.ISSUE_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>



	<select id="s_str106ukrv_mekServiceImpl.selectSalesOrderList" parameterType="Map" resultType="rMap">
		/* s_str106ukrv_mekServiceImpl.selectSalesOrderList - 수주(오퍼)참조  */
		BEGIN
		  SET NOCOUNT ON
		  SET ARITHABORT ON
		
		     DECLARE @COMP_CODE         NVARCHAR(08)
		           , @DIV_CODE          NVARCHAR(08)
		           , @MONEY_UNIT        NVARCHAR(03)
		           , @CUSTOM_CODE       NVARCHAR(08)
		           , @CUSTOM_NAME       NVARCHAR(50)
		           , @ITEM_CODE         NVARCHAR(20)
		           , @ITEM_NAME         NVARCHAR(200)
		           , @DVRY_DATE_FR      NVARCHAR(08)
		           , @DVRY_DATE_TO      NVARCHAR(08)
		           , @ORDER_NUM         NVARCHAR(20)
		           , @PROJECT_NO        NVARCHAR(20)
		           , @NATION_INOUT      NVARCHAR(03)
		           , @WH_CODE           NVARCHAR(08)
		           , @WH_CELL_CODE      NVARCHAR(20)
		           , @USER_ID           NVARCHAR(100)
		           , @REMARK_INTER      NVARCHAR(100)
		           --20190729 수정
		           , @DELIVERY_NAME     NVARCHAR(50)

		      SET @COMP_CODE         = #{S_COMP_CODE}     ---- 법인코드(필수)
		      SET @DIV_CODE          = #{DIV_CODE}        ---- 사업장코드(필수)
		      SET @MONEY_UNIT        = #{MONEY_UNIT}      ---- 화폐단위(필수)
		      SET @CUSTOM_CODE       = #{CUSTOM_CODE}     ---- 거래처코드(필수)
		      SET @CUSTOM_NAME       = #{CUSTOM_NAME}     ---- 거래처명(필수)
		      SET @ITEM_CODE         = #{ITEM_CODE}       ---- 품목코드(옵션)
		      SET @ITEM_NAME         = #{ITEM_NAME}       ---- 품명(옵션)
		      SET @DVRY_DATE_FR      = #{DVRY_DATE_FR}    ---- 납기일 FROM(옵션)
		      SET @DVRY_DATE_TO      = #{DVRY_DATE_TO}    ---- 납기일 TO(옵션)
		      SET @ORDER_NUM         = #{ORDER_NUM}       ---- 수주번호(옵션)
		      SET @PROJECT_NO        = #{PROJECT_NO}      ---- 프로젝트번호(옵션)
		      SET @WH_CODE           = #{WH_CODE}         ---- 창고코드(옵션)
		      SET @WH_CELL_CODE      = #{WH_CELL_CODE}    ---- 창고셀코드(옵션)
		      SET @NATION_INOUT      = #{NATION_INOUT}    ---- 국내외(옵션)
		      SET @USER_ID           = #{S_USER_ID}       ---- 사용자ID(필수)
		      SET @REMARK_INTER      = #{REMARK_INTER}    ---- 내부기록사항
		      --20190729 수정
		      SET @DELIVERY_NAME     = #{DELIVERY_NAME}   ---- 배송처명

		      EXEC unilite.USP_SALES_GetNotInoutOrderRef   @COMP_CODE,     @DIV_CODE,     @MONEY_UNIT, @CUSTOM_CODE, @CUSTOM_NAME,  @ITEM_CODE, @ITEM_NAME
		                                                 , @DVRY_DATE_FR,  @DVRY_DATE_TO, @ORDER_NUM,  @PROJECT_NO,  @NATION_INOUT, @WH_CODE,   @WH_CELL_CODE
		                                                 , @USER_ID
		                                                 --20190729 수정
		                                                 , @DELIVERY_NAME

		   SET NOCOUNT OFF
		   SET ARITHABORT OFF
		
		END
	</select>
	<select id="s_str106ukrv_mekServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* s_str106ukrv_mek.Cs_str106ukrv_mek[fnMakeQuery] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    /* 시분초 필드 처리여부 설정 */
		    DECLARE @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)
		          , @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
		         , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
		         , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
		      FROM BSA100T
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'S048'
		       AND SUB_CODE IN(N'SI', N'SR', N'SS')

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		        FROM BSA300T WITH(NOLOCK)
		        WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		        FROM BSA100T WITH(NOLOCK)
		        WHERE COMP_CODE = @CompCode
		        AND MAIN_CODE = N'B044'
		        AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    IF @TimeSI IS NULL
		        SET @TimeSI = 'N'
		    IF @TimeSR IS NULL
		        SET @TimeSR = 'N'
		    IF @TimeSS IS NULL
		        SET @TimeSS = 'N'

		    /* 데이터 조회 */
		    SELECT A.INOUT_SEQ
		         ,(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                     ELSE C1.CUSTOM_NAME
		            END)                                                    AS CUSTOM_NAME
		         , A.INOUT_TYPE_DETAIL
		         , A.WH_CODE
		         , C4.TREE_NAME   AS WH_NAME
		         , A.WH_CELL_CODE
		         , C5.WH_CELL_NAME
		         , A.SALE_DIV_CODE
		         , A.ITEM_CODE
		         ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		            END)                                                    AS ITEM_NAME
		         , C2.SPEC
		         , A.LOT_NO
		         , A.ITEM_STATUS
		         , A.ORDER_UNIT
		         , A.PRICE_TYPE                                                                    --단가구분
		         , A.TRNS_RATE                                              AS TRANS_RATE
		         , A.ORDER_UNIT_Q                                           AS ORDER_UNIT_Q
		         , A.ORDER_UNIT_P                                           AS ORDER_UNIT_P
		         , ISNULL(A.INOUT_WGT_Q, 0)                                 AS INOUT_WGT_Q         --출하지시량(중량단위)
		         , ISNULL(A.INOUT_FOR_WGT_P, 0)                             AS INOUT_FOR_WGT_P     --외화단가(중량단위)
		         , ISNULL(A.INOUT_VOL_Q, 0)                                 AS INOUT_VOL_Q         --출하지시량(부피단위)
		         , ISNULL(A.INOUT_FOR_VOL_P, 0)                             AS INOUT_FOR_VOL_P     --외화단가(부피단위)
		         , ISNULL(A.INOUT_WGT_P, 0)                                 AS INOUT_WGT_P         --단가(중량단위)
		         , ISNULL(A.INOUT_VOL_P, 0)                                 AS INOUT_VOL_P         --단가(부피단위)
		         , A.ORDER_UNIT_O AS ORDER_UNIT_O
		         , A.TAX_TYPE
		         , A.INOUT_TAX_AMT
		         , A.ORDER_UNIT_O + A.INOUT_TAX_AMT AS ORDER_AMT_SUM							   --합계금액
		         , A.WGT_UNIT                                                                      --중량단위
		         , ISNULL(A.UNIT_WGT, 0)                                    AS UNIT_WGT            --단위중량
		         , A.VOL_UNIT                                                                      --부피단위
		         , ISNULL(A.UNIT_VOL, 0)                                    AS UNIT_VOL            --단위부피
		         , ISNULL(A.TRANS_COST, 0)    AS TRANS_COST
		         , ISNULL(A.DISCOUNT_RATE, 0) AS DISCOUNT_RATE
		        , CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN
							CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q, 0)
								ELSE 0.0
							END
						ELSE
							CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(M2.GOOD_STOCK_Q, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(M2.BAD_STOCK_Q, 0)
								ELSE 0.0
							END
					END      AS STOCK_Q              --재고수량
		         , CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN
							CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q / A.TRNS_RATE, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q / A.TRNS_RATE, 0)
								ELSE 0.0
							END
						ELSE
						  CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(M2.GOOD_STOCK_Q / A.TRNS_RATE, 0)
								WHEN A.ITEM_STATUS = '2' THEN ISNULL(M2.BAD_STOCK_Q / A.TRNS_RATE, 0)
								ELSE 0.0
						  END
                   END                                                      AS ORDER_STOCK_Q              --판매단위재고수량
		         , A.PRICE_YN
		         , A.ACCOUNT_YNC
		         ,(CASE WHEN ISNULL(A.DELIVERY_DATE , '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.DELIVERY_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.DELIVERY_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.DELIVERY_DATE, 7, 2))
		              END)                                                  AS DELIVERY_DATE
		         , A.DELIVERY_TIME
		         , C.RECEIVER_ID
		         , C.RECEIVER_NAME
		         , C.TELEPHONE_NUM1
		         , C.TELEPHONE_NUM2
		         , ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, '')          AS ADDRESS
		         ,(CASE WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                     ELSE D2.CUSTOM_NAME
		            END)                                                    AS SALE_CUST_CD
		         , A.SALE_PRSN
		         , A.DVRY_CUST_CD
		         , D3.DVRY_CUST_NM                                          AS DVRY_CUST_NAME
		         ,(CASE WHEN @RefItem = '1' THEN D4.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D4.CUSTOM_NAME2
		                                     ELSE D4.CUSTOM_NAME
		            END)                                                    AS ORDER_CUST_CD
		         , A.PROJECT_NO AS PLAN_NUM
		         --20191226 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME  AS PLAN_NAME
		         , A.ORDER_NUM
		         , A.ISSUE_REQ_NUM
		         , A.BASIS_NUM
		         , F1.PAY_METHODE1                                          AS PAY_METHODE1
		         , F.LC_SER_NO                                              AS LC_SER_NO
		         , A.REMARK
		         , A.INOUT_NUM
		         ,(CASE WHEN ISNULL(A.INOUT_DATE , '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
		              END)                                                  AS INOUT_DATE
		         , A.INOUT_METH
		         , A.INOUT_TYPE
		         , A.DIV_CODE
		         , A.INOUT_CODE_TYPE
		         , A.INOUT_CODE
		         , A.SALE_CUSTOM_CODE
		         , A.CREATE_LOC
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.ORDER_UNIT_Q                                          AS ORIGIN_Q
		         , ISNULL(E.ORDER_NOT_Q, 0.0)                              AS ORDER_NOT_Q
		         , ISNULL(B.ISSUE_REQ_QTY, 0) - ISNULL(B.ISSUE_QTY, 0)     AS ISSUE_NOT_Q
		         , A.ORDER_SEQ
		         , A.ISSUE_REQ_SEQ
		         , A.BASIS_SEQ
		         , A.ORDER_TYPE
		         , ISNULL(C2.STOCK_UNIT, '')                               AS STOCK_UNIT
		         , A.BILL_TYPE
		         , A.SALE_TYPE
		         , C1.CREDIT_YN
		         , A.ACCOUNT_Q
		         , A.SALE_C_YN
		         , A.INOUT_PRSN
		         , ISNULL(C1.WON_CALC_BAS, '3')                            AS WON_CALC_BAS
		         , CASE WHEN ISNULL(D.TAX_INOUT, '') = '' THEN ISNULL(C1.TAX_TYPE, '1')
		                ELSE ISNULL(D.TAX_INOUT, '')
		           END                                                     AS TAX_INOUT
		         , ISNULL(C1.AGENT_TYPE  , '1')                            AS AGENT_TYPE
		         , ISNULL(C2.STOCK_CARE_YN, 'Y')                           AS STOCK_CARE_YN
		         , CASE WHEN C.RETURN_Q &gt; 0 THEN 'Y'
		                ELSE 'N'
		           END                                                     AS RETURN_Q_YN
		         , ISNULL(M1.REF_CODE2,'')                                 AS REF_CODE2
		         , ISNULL(C2.EXCESS_RATE, 0)                               AS EXCESS_RATE
		         , ISNULL(ORDER_Q, 0)                                      AS SRC_ORDER_Q
		         , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN ISNULL(C.ORDER_P, 0)
		                                                     ELSE ISNULL(F.PRICE, 0)
		            END                                                    AS SOF110T_PRICE
		         , ISNULL(B.ISSUE_REQ_PRICE, 0)                            AS SRQ100T_PRICE
		         , A.COMP_CODE
		         , A.DEPT_CODE
		         , C3.ITEM_ACCOUNT
		         , 'FEFER'                                                 AS GUBUN
		         , D.NATION_INOUT
		         , A.PACK_UNIT_Q
		         , A.BOX_Q
		         , A.EACH_Q
		         , A.LOSS_Q
		         , A.REMARK_INTER
		      FROM            BTR100T A  WITH(NOLOCK)
		           LEFT  JOIN SRQ100T B  WITH(NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                              AND B.ISSUE_DIV_CODE = A.DIV_CODE
		                                              AND B.ISSUE_REQ_NUM  = A.ISSUE_REQ_NUM
		                                              AND B.ISSUE_REQ_SEQ  = A.ISSUE_REQ_SEQ
		           LEFT  JOIN SOF110T C  WITH(NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
		                                              AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                              AND C.ORDER_NUM      = A.ORDER_NUM
		                                              AND C.SER_NO         = A.ORDER_SEQ
		           LEFT  JOIN SOF100T D  WITH(NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
		                                              AND D.DIV_CODE       = A.DIV_CODE
		                                              AND D.ORDER_NUM      = A.ORDER_NUM
		           LEFT  JOIN TEA110T F  WITH(NOLOCK) ON F.COMP_CODE       = A.COMP_CODE
		                                              AND F.DIV_CODE       = A.DIV_CODE
		                                              AND F.SO_SER_NO      = A.ORDER_NUM
		                                              AND F.SO_SER         = A.ORDER_SEQ
		           LEFT  JOIN TEA100T F1 WITH(NOLOCK) ON F1.COMP_CODE      = A.COMP_CODE
		                                              AND F1.DIV_CODE      = A.DIV_CODE
		                                              AND F1.SO_SER_NO     = A.ORDER_NUM
		           LEFT  JOIN(
		                      SELECT X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO
		                           , ISNULL(X.ORDER_Q - X.OUTSTOCK_Q + X.RETURN_Q - X.ISSUE_REQ_Q - SUM(ISNULL(Z.ISSUE_QTY, 0.0)), 0.0) AS ORDER_NOT_Q
		                      FROM             SOF110T X WITH(NOLOCK)
		                             LEFT JOIN SRQ100T Z WITH(NOLOCK) ON Z.COMP_CODE       = X.COMP_CODE
		                                                              AND Z.ISSUE_DIV_CODE = X.OUT_DIV_CODE
		                                                              AND Z.ORDER_NUM      = X.ORDER_NUM
		                                                              AND Z.SER_NO         = X.SER_NO
		                      GROUP BY X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO
		                             , X.ORDER_Q, X.OUTSTOCK_Q, X.RETURN_Q, X.ISSUE_REQ_Q
		                    )       E                  ON E.COMP_CODE      = A.COMP_CODE
		                                              AND E.OUT_DIV_CODE   = A.DIV_CODE
		                                              AND E.ORDER_NUM      = A.ORDER_NUM
		                                              AND E.SER_NO         = A.ORDER_SEQ
		           INNER JOIN BCM100T C1 WITH(NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE   = A.INOUT_CODE
		           INNER JOIN BPR100T C2 WITH(NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                              AND C2.ITEM_CODE     = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH(NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                              AND C3.DIV_CODE      = A.DIV_CODE
		                                              AND C3.ITEM_CODE     = A.ITEM_CODE
		           LEFT  JOIN BSA220T C4 WITH(NOLOCK)  ON C4.COMP_CODE     = A.COMP_CODE
		                                              AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                              AND C4.TREE_CODE     = A.WH_CODE
		           LEFT  JOIN BSA225T C5 WITH(NOLOCK)  ON C5.COMP_CODE     = A.COMP_CODE
		                                              AND C5.DIV_CODE      = A.DIV_CODE
		                                              AND C5.WH_CODE       = A.WH_CODE
		                                              AND C5.WH_CELL_CODE  = A.WH_CELL_CODE
		           LEFT  JOIN BIV100T D1 WITH(NOLOCK)  ON D1.COMP_CODE     = A.COMP_CODE
		                                              AND D1.DIV_CODE      = A.DIV_CODE
		                                              AND D1.WH_CODE       = A.WH_CODE
		                                              AND D1.ITEM_CODE     = A.ITEM_CODE
		           LEFT  JOIN BCM100T D2 WITH(NOLOCK)  ON D2.COMP_CODE     = A.COMP_CODE
		                                              AND D2.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		           LEFT  JOIN SCM100T D3 WITH(NOLOCK)  ON D3.COMP_CODE     = A.COMP_CODE
		                                              AND D3.CUSTOM_CODE   = A.INOUT_CODE
		                                              AND D3.DVRY_CUST_SEQ = CASE WHEN ISNUMERIC(A.DVRY_CUST_CD) = 1 THEN A.DVRY_CUST_CD ELSE -1 END
		           LEFT  JOIN BCM100T D4 WITH(NOLOCK)  ON D4.COMP_CODE     = D.COMP_CODE
		                                              AND D4.CUSTOM_CODE   = D.CUSTOM_CODE
		           LEFT  JOIN BSA100T M1 WITH(NOLOCK)  ON M1.COMP_CODE     = A.COMP_CODE
		                                              AND M1.MAIN_CODE     = 'S007'
		                                              AND M1.SUB_CODE      = A.INOUT_TYPE_DETAIL
		           LEFT JOIN BIV150T M2 WITH (NOLOCK) ON M2.COMP_CODE     = A.COMP_CODE
		                                              AND M2.ITEM_CODE	  = A.ITEM_CODE
		                                              AND M2.WH_CODE	  = A.WH_CODE
		                                              AND M2.WH_CELL_CODE = A.WH_CELL_CODE
		                                              AND M2.LOT_NO		  = ISNULL(A.LOT_NO,'')
		                                              AND M2.SUM_TYPE	  = (SELECT MAX(SUB_CODE) FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B084' AND REF_CODE1='Y')
		           --20191226 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T Z1 WITH(NOLOCK)  ON Z1.COMP_CODE     = A.COMP_CODE
		                                              AND Z1.PJT_CODE      = A.PROJECT_NO
		     WHERE A.COMP_CODE  = @CompCode
		       AND A.INOUT_TYPE = N'2'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE  = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		       AND A.INOUT_NUM = #{INOUT_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE = #{CUSTOM_CODE}
			</if>
		     ORDER BY  A.INOUT_SEQ, A.INOUT_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<insert id="s_str106ukrv_mekServiceImpl.insertLogMaster" parameterType="Map">
		/* s_str106ukrv_mek.Cs_str106ukrv_mek[fnStr103Save] Query01 */
		INSERT INTO L_BTR100T
		     ( KEY_VALUE,         OPR_FLAG
		     , COMP_CODE,         DIV_CODE,        INOUT_NUM,      INOUT_SEQ,       INOUT_TYPE,        INOUT_METH
		     , INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE,     WH_CODE,         INOUT_DATE
		     , ITEM_CODE,         ITEM_STATUS,     INOUT_Q,        INOUT_P,         INOUT_I
		     , MONEY_UNIT,        INOUT_FOR_P,     INOUT_FOR_O,    EXCHG_RATE_O,    ORDER_TYPE
		     , ORDER_NUM,         ORDER_SEQ,       INOUT_PRSN,     BASIS_NUM,       BASIS_SEQ
		     , ACCOUNT_YNC,       ACCOUNT_Q,       CREATE_LOC,     SALE_C_YN,       REMARK
		     , ORDER_UNIT,        TRNS_RATE,       PROJECT_NO,     ORDER_UNIT_Q,    ORDER_UNIT_P
		     , ORDER_UNIT_FOR_P,  ISSUE_REQ_NUM,   ISSUE_REQ_SEQ,  DVRY_CUST_CD,    DISCOUNT_RATE
		     , INOUT_TAX_AMT,     TAX_TYPE,        LOT_NO,         SALE_DIV_CODE,   SALE_CUSTOM_CODE
		     , BILL_TYPE,         SALE_TYPE,       PRICE_YN,       ORDER_UNIT_O,    SALE_PRSN
		     , FR_ACCOUNT,        TO_ACCOUNT,      LC_NUM,         TRADE_LOC
		     , DELIVERY_DATE,     DELIVERY_TIME,   WH_CELL_CODE,   AGENT_TYPE,      DEPT_CODE
		     , TRANS_COST,        PRICE_TYPE,      INOUT_WGT_Q,    INOUT_FOR_WGT_P, INOUT_WGT_P
		     , INOUT_VOL_Q,       INOUT_FOR_VOL_P, INOUT_VOL_P,    WGT_UNIT,        UNIT_WGT
		     , VOL_UNIT,          UNIT_VOL,        NATION_INOUT,   SALE_C_DATE,     UPDATE_DB_USER
		     , UPDATE_DB_TIME, 	  PACK_UNIT_Q, 	   BOX_Q,		   EACH_Q,		    LOSS_Q
			, REMARK_INTER
		     )
		SELECT  #{KEY_VALUE}                                                    -- KEY_VALUE
		      , #{OPR_FLAG}                                          			-- OPR_FLAG
		      , #{COMP_CODE}                                 					-- COMP_CODE
		      , #{DIV_CODE}                                 					-- DIV_CODE
		      , #{INOUT_NUM}                                					-- INOUT_NUM
		      , #{INOUT_SEQ}                                					-- INOUT_SEQ
		      , N'2'                                                            -- INOUT_TYPE
		      , #{INOUT_METH}                         							-- INOUT_METH
		      , #{INOUT_TYPE_DETAIL}                         					-- INOUT_TYPE_DETAIL
		      , N'4'                                                            -- INOUT_CODE_TYPE
		      , #{INOUT_CODE}                               					-- INOUT_CODE
		      , #{WH_CODE}                               						-- WH_CODE
		      , #{INOUT_DATE}                              					    -- INOUT_DATE
		      , #{ITEM_CODE}                               						-- ITEM_CODE
		      , #{ITEM_STATUS}                               					-- ITEM_STATUS
		      , CAST(${ORDER_UNIT_Q} AS NUMERIC(30,6)) * ${TRANS_RATE}                                 -- INOUT_Q
		      --20200611 수정: 자사단가 가져오는 로직 수정
		      , CAST(${ORDER_UNIT_P} AS NUMERIC(30,6)) / ${TRANS_RATE} * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_P
		      --20200611 수정: 자사단가 가져오는 로직 수정
		      , CAST(${ORDER_UNIT_O} AS NUMERIC(30,6)) * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_I
		      , #{MONEY_UNIT}                               					-- MONEY_UNIT
		      , CAST(${ORDER_UNIT_P} AS NUMERIC(30,6)) / ${TRANS_RATE}                                    -- INOUT_FOR_P
		      , #{ORDER_UNIT_O}                                                 -- INOUT_FOR_O
		      , #{EXCHG_RATE_O}                               					-- EXCHG_RATE_O
		      , #{ORDER_TYPE}                               					-- ORDER_TYPE
		      , #{ORDER_NUM}                               						-- ORDER_NUM
		      , #{ORDER_SEQ}                              						-- ORDER_SEQ
		      , #{INOUT_PRSN}                               					-- INOUT_PRSN
		      , #{BASIS_NUM}                            					    -- BASIS_NUM
		      , #{BASIS_SEQ}                               						-- BASIS_SEQ
		      , #{ACCOUNT_YNC}                               					-- ACCOUNT_YNC
		      ,   0                                                             -- ACCOUNT_Q
		      , #{CREATE_LOC}                                					-- CREATE_LOC
		      , N'N'                                                            -- SALE_C_YN
		      , #{REMARK}                             							-- REMARK
		      , #{ORDER_UNIT}                             						-- ORDER_UNIT
		      , #{TRANS_RATE}                             						-- TRNS_RATE
		      , #{PLAN_NUM}                             						-- PROJECT_NO
		      , #{ORDER_UNIT_Q}                             					-- ORDER_UNIT_Q
		      , #{ORDER_UNIT_P}                             					-- ORDER_UNIT_P
		      , #{ORDER_UNIT_P}                             					-- ORDER_UNIT_FOR_P
		      , #{ISSUE_REQ_NUM}                            					-- ISSUE_REQ_NUM
		      , #{ISSUE_REQ_SEQ}                             					-- ISSUE_REQ_SEQ
		      , #{DVRY_CUST_CD}                             					-- DVRY_CUST_CD
		      , #{DISCOUNT_RATE}                             					-- DISCOUNT_RATE
		      --20200611 수정: 자사단가 가져오는 로직 수정
		      , CAST(${INOUT_TAX_AMT} AS NUMERIC(30,6)) * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_TAX_AMT
		      , #{TAX_TYPE}                          							-- TAX_TYPE
		      , #{LOT_NO}                          								-- LOT_NO
		      , #{SALE_DIV_CODE}                      							-- SALE_DIV_CODE
		      , #{SALE_CUSTOM_CODE}                  							-- SALE_CUSTOM_CODE
		      , #{BILL_TYPE}                          							-- BILL_TYPE
		      , #{SALE_TYPE}                          							-- SALE_TYPE
		      , #{PRICE_YN}                          							-- PRICE_YN
		      , #{ORDER_UNIT_O}                          						-- ORDER_UNIT_O
		      , #{SALE_PRSN}                          							-- SALE_PRSN
		      , ITEM_ACCOUNT                                                            -- FR_ACCOUNT
		      , CASE WHEN ITEM_ACCOUNT >= N'40' THEN N'00' ELSE ITEM_ACCOUNT END        -- TO_ACCOUNT
		      , #{LC_SER_NO}                                 					-- LC_NUM
		      , CASE WHEN #{CREATE_LOC} = '5' THEN
		             CASE WHEN #{PAY_METHODE1}  = 'MLC' THEN '1'
		                  WHEN #{PAY_METHODE1}  = 'LLC' THEN '2'
		                  WHEN #{ISSUE_REQ_NUM} != ''   THEN '4'
		                  ELSE '3'
		              END
		             ELSE #{CREATE_LOC}
		         END                                                            -- TRADE_LOC
		      , #{DELIVERY_DATE}                            					-- DELIVERY_DATE
		      , #{DELIVERY_TIME}                            					-- DELIVERY_TIME
		      , #{WH_CELL_CODE}                            						-- WH_CELL_CODE
		      , #{AGENT_TYPE}                           						-- AGENT_TYPE
		      , #{DEPT_CODE}                            						-- DEPT_CODE
		      , #{TRANS_CODE}                            						-- TRANS_CODE
		      , #{PRICE_TYPE}                            						-- PRICE_TYPE
		      , #{INOUT_WGT_Q}                           						-- INOUT_WGT_Q
		      , #{INOUT_FOR_WGT_P}                           					-- INOUT_FOR_WGT_P
		      , #{INOUT_WGT_P}                            						-- INOUT_WGT_P
		      , #{INOUT_VOL_Q}                            						-- INOUT_VOL_Q
		      , #{INOUT_FOR_VOL_P}                            					-- INOUT_FOR_VOL_P
		      , #{INOUT_VOL_P}                            						-- INOUT_VOL_P
		      , #{WGT_UNIT}                           							-- WGT_UNIT
		      , #{UNIT_WGT}                            							-- UNIT_WGT
		      , #{VOL_UNIT}                            							-- VOL_UNIT
		      , #{UNIT_VOL}                            							-- UNIT_VOL
		      , #{NATION_INOUT}                                                 -- 국내외구분
		      , #{SALE_DATE}                                                    -- 매출일
		      , #{S_USER_ID}                            						-- UPDATE_DB_USER
		      , GETDATE()                                                    	-- UPDATE_DB_TIME
		      , #{PACK_UNIT_Q}
		      , #{BOX_Q}
		      ,	#{EACH_Q}
		      ,	#{LOSS_Q}
		      , #{REMARK_INTER}
		  FROM BPR200T WITH (NOLOCK)
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</insert>

	<update id="s_str106ukrv_mekServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_STR103UKR (
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{SalePrsnChk	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
	<select id="s_str106ukrv_mekServiceImpl.deptWhcode" parameterType="Map" resultType="rMap">
		SELECT WH_CODE
		  FROM BSA210T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND TYPE_LEVEL = #{DIV_CODE}
		   AND TREE_CODE  = #{DEPT_CODE}
	</select>

	<select id="s_str106ukrv_mekServiceImpl.printList" parameterType="Map" resultType="rMap">
	    BEGIN
	            DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
	                                , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
	                                , @USER_ID             NVARCHAR(100)             --(필수) USER ID
	                                , @INOUT_NUM       NVARCHAR(1000)               --(선택) 출하지시번호
	                                , @PRINT_USER          NVARCHAR(100)            --(선택) 출력자
	                                , @VIEW_PRINT_INFO_YN  NVARCHAR(01)             --인쇄출력정보 여부
	                                , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2
	
	            SET NOCOUNT ON
	            SET ARITHABORT ON
	
	            SET @COMP_CODE                  =   ISNULL(#{S_COMP_CODE}, '')
	            SET @DIV_CODE                   =   ISNULL(#{DIV_CODE}, '')
	            SET @USER_ID                    =   ISNULL(#{S_USER_ID}, '')
	            SET @INOUT_NUM                  =   ISNULL(#{INOUT_NUM}, '')
	
	            SET @QUERY_TYPE                 =   N'2'
	
	            SELECT @PRINT_USER = USER_NAME
	                FROM BSA300T WITH(NOLOCK)
	                WHERE COMP_CODE = @COMP_CODE
	                AND USER_ID = @USER_ID
	
	            SELECT @VIEW_PRINT_INFO_YN = SUB_CODE
	                FROM BSA100T WITH(NOLOCK)
	                WHERE COMP_CODE = @COMP_CODE
	                AND MAIN_CODE = 'B249'
	                AND SUB_CODE != '$'
	                AND REF_CODE1 = 'Y'
	
	            SELECT
	                  A.INOUT_NUM
	                , A.INOUT_DATE --공급일자
	                , SUBSTRING(A.INOUT_DATE, 1, 4) AS YYYY--공급일자YYYY
	                , SUBSTRING(A.INOUT_DATE, 5, 2) AS MM--공급일자MM
	                , SUBSTRING(A.INOUT_DATE, 7, 2) AS DD--공급일자DD
	                , A.INOUT_CODE --거래처 코드
	                , C.CUSTOM_NAME --거래처 명
	                , C.TOP_NAME       --거래처 대표자
	                , CASE ISNULL(C.COMPANY_NUM,'')
	                    WHEN '' THEN ''
	                    ELSE         SUBSTRING(C.COMPANY_NUM,1,3) + '-'
	                                + SUBSTRING(C.COMPANY_NUM,4,2) + '-'
	                                + SUBSTRING(C.COMPANY_NUM,6,5)
	                END AS COMPANY_NUM   --거래처 등록번호
	                , C.ZIP_CODE         --거래처 우편번호
	                , RTRIM(ISNULL(C.ADDR1,'') + ISNULL(C.ADDR2,'')) AS ADDR
	                , E.DIV_CODE    AS MY_CUSTOM_CODE      --사업장코드
	                , E.DIV_NAME    AS MY_CUSTOM_NAME      --상호
	                , E.REPRE_NAME  AS MY_TOP_NAME         --대표자
	                , E.COMP_TYPE                       --업태
	                , E.COMP_CLASS                      --종목
	                , CASE ISNULL(E.COMPANY_NUM,'')
	                    WHEN '' THEN ''
	                    ELSE         SUBSTRING(E.COMPANY_NUM,1,3) + '-'
	                                + SUBSTRING(E.COMPANY_NUM,4,2) + '-'
	                                + SUBSTRING(E.COMPANY_NUM,6,5)
	                END          AS MY_COMPANY_NUM          --등록번호
	                , E.ZIP_CODE    AS MY_ZIP_CODE          --우편번호
	                , E.ADDR AS  MY_ADDR              --주소
	                , E.TELEPHON                            --전화번호
	                , E.FAX_NUM                             --팩스
	
	                , A.INOUT_NUM   AS INOUT_NUM
	                , '*' + A.INOUT_NUM + '*'                                              AS BARCODE
	                , ROW_NUMBER() OVER(PARTITION BY A.INOUT_NUM + A.TAX_TYPE ORDER BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, B.ITEM_NAME, INOUT_SEQ) AS PRINT_SEQ
	                , A.INOUT_SEQ   AS INOUT_SEQ
	                , A.ITEM_CODE
	                , B.ITEM_NAME
	                , B.SPEC
	                --, '' AS REGION  --(지역)
	                , CASE WHEN A7.SUPPLY_TYPE = '2' THEN
	                        CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.ORIGIN
	                        ELSE
	                            CASE WHEN ISNULL(T5.REF_CODE1, '') = '' THEN T5.CODE_NAME ELSE T5.REF_CODE1 END
	                        END
	                    ELSE
	                            CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.ORIGIN
	                            ELSE
	                                CASE WHEN ISNULL(A4.REF_CODE1, '') = '' THEN A4.CODE_NAME ELSE A4.REF_CODE1 END
	                            END
	                    END                  AS REGION
	
	                , A.ORDER_UNIT
	                , ISNULL(A.ORDER_UNIT_Q, 0)        AS INOUT_Q
	                , ISNULL(A.ORDER_UNIT_P, 0)      AS INOUT_P
	                , ISNULL(A.ORDER_UNIT_O, 0)        AS INOUT_O
	                , ISNULL(A.INOUT_TAX_AMT, 0)    aS INOUT_TAX_O
	                , ISNULL(A.ORDER_UNIT_O, 0) + ISNULL(A.INOUT_TAX_AMT, 0)   AS INOUT_TOT
	                , ISNULL(X.ORDER_UNIT_Q, 0)        AS INOUT_Q_AMT
	                , ISNULL(X.ORDER_UNIT_P, 0)      AS INOUT_P_AMT
	                , ISNULL(X.ORDER_UNIT_O, 0)        AS INOUT_O_AMT
	                , ISNULL(X.INOUT_TAX_AMT, 0)    AS INOUT_TAX_O_AMT
	                , ISNULL(X.ORDER_UNIT_O, 0) + ISNULL(X.INOUT_TAX_AMT, 0)   AS INOUT_TOT_AMT
	                , REPLACE(unilite.fnConvertToAmt(ISNULL(X.ORDER_UNIT_O, 0) + ISNULL(X.INOUT_TAX_AMT, 0)), ' ','') + '원정'   AS INOUT_TOT_AMT_KO
	                --, A.REMARK  --(인증번호)
	--              , CASE WHEN A7.SUPPLY_TYPE = '2' THEN
	--                      CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.CERT_NO
	--                      ELSE T4.CERT_NO
	--                      END
	--                  ELSE
	--                      CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.CERT_NO
	--                      ELSE A3.CERT_NO
	--                      END
	--                  END                                                 AS REMARK
	                , CASE WHEN A7.SUPPLY_TYPE = '2' THEN
	                    CASE WHEN SUBSTRING(T1.LOT_NO, 8, 2) != '00' THEN T3.FARM_NAME + '(' + T3.CERT_NO + ')'
	                    ELSE
	                        CASE WHEN ISNULL(T2.CUSTOM_NAME1, '') = '' THEN T2.CUSTOM_NAME + '(' + T4.CERT_NO + ')'
	                             ELSE T2.CUSTOM_NAME1 + '(' + T4.CERT_NO + ')'
	                        END
	                    END
	                ELSE
	                    CASE WHEN SUBSTRING(A.LOT_NO, 8, 2) != '00' THEN A2.FARM_NAME + '(' + A2.CERT_NO + ')'
	                    ELSE
	                        CASE WHEN ISNULL(A1.CUSTOM_NAME1, '') = '' THEN A1.CUSTOM_NAME + '(' + A3.CERT_NO + ')'
	                             ELSE A1.CUSTOM_NAME1 + '(' + A3.CERT_NO + ')'
	                        END
	                    END
	                END                                                 AS REMARK
	
	                , @PRINT_USER           AS PRINT_USER                   --출력자 이름
	                , @VIEW_PRINT_INFO_YN   AS VIEW_PRINT_INFO_YN           --인쇄출력정보 표시여부
	                , A.INOUT_NUM + A.TAX_TYPE  AS GROUP_KEY
	                , Z.CODE_NAME               AS TAX_TYPE
	            FROM BTR100T A WITH(NOLOCK)
	            INNER JOIN BPR200T A7 WITH(NOLOCK) ON A7.COMP_CODE = A.COMP_CODE
	                                            AND A7.DIV_CODE = A.DIV_CODE
	                                            AND A7.ITEM_CODE = A.ITEM_CODE
	            LEFT JOIN BCM100T A1 WITH(NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
	                                            AND ( ISNULL(A1.CHANNEL, '') = SUBSTRING(A.LOT_NO, 1, 2) AND ISNULL(A.LOT_NO, '') != '')
	
	            LEFT JOIN S_BCM106T_YP A2 WITH(NOLOCK) ON A2.COMP_CODE = A1.COMP_CODE               --거래처 농가정보
	                                                AND A2.CUSTOM_CODE = A1.CUSTOM_CODE
	                                                AND A2.FARM_CODE = SUBSTRING(A.LOT_NO, 8, 2)
	            LEFT JOIN S_BCM100T_YP A3 WITH(NOLOCK) ON A3.COMP_CODE = A1.COMP_CODE              --인증서
	                                                AND A3.CUSTOM_CODE = A1.CUSTOM_CODE
	                                                AND A3.APLY_START_DATE &lt;= A.INOUT_DATE
	                                                AND A3.APLY_END_DATE &gt;= A.INOUT_DATE
	                                                AND A3.TYPE   = SUBSTRING(A.LOT_NO, 10, 1)
	
	            LEFT JOIN BSA100T A4 WITH(NOLOCK) ON A4.COMP_CODE = A1.COMP_CODE
	                                                AND A4.MAIN_CODE = 'B056'
	                                                AND A4.SUB_CODE = A1.AREA_TYPE
	
	
	            INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                AND B.ITEM_CODE = A.ITEM_CODE
	            INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
	                                AND C.CUSTOM_CODE = A.INOUT_CODE
	            INNER JOIN BOR120T E WITH(NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
	                                            AND E.DIV_CODE    = A.DIV_CODE
	            LEFT  JOIN ( SELECT   SUM(A.ORDER_UNIT_Q)      AS ORDER_UNIT_Q
	                                , SUM(A.ORDER_UNIT_P)    AS ORDER_UNIT_P
	                                , SUM(A.ORDER_UNIT_O)      AS ORDER_UNIT_O
	                                , SUM(A.INOUT_TAX_AMT)  AS INOUT_TAX_AMT
	                                , A.COMP_CODE
	                                , A.DIV_CODE
	                                , A.INOUT_NUM
	                                , A.TAX_TYPE
	                           FROM BTR100T A WITH(NOLOCK)
	                           INNER JOIN uniLITE.fnSplit(@INOUT_NUM, ',') AS B ON B.VALUE = A.INOUT_NUM
	                          WHERE A.COMP_CODE = @COMP_CODE
	                            AND A.DIV_CODE = @DIV_CODE
	                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.TAX_TYPE
	                ) X ON X.COMP_CODE = A.COMP_CODE
	                           AND X.DIV_CODE = A.DIV_CODE
	                           AND X.INOUT_NUM = A.INOUT_NUM
	                           AND X.TAX_TYPE = A.TAX_TYPE
	            INNER JOIN uniLITE.fnSplit(@INOUT_NUM, ',') AS F ON F.VALUE = A.INOUT_NUM
	
	          --  LEFT JOIN SOF110T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	          --                                  AND D.ORDER_NUM   = A.ORDER_NUM
	          --                                  AND D.SER_NO      = A.ORDER_SEQ
	            LEFT JOIN BSA100T Z WITH (NOLOCK) ON Z.COMP_CODE   = A.COMP_CODE
	                                            AND Z.MAIN_CODE   = 'B059'
	                                            AND Z.SUB_CODE    = A.TAX_TYPE
	
	 --사내가공품은 원자재의 인증번호 가져오게..
	            LEFT JOIN PMP100T T WITH(NOLOCK) ON T.COMP_CODE = A.COMP_CODE
	                                            AND T.DIV_CODE = A.DIV_CODE
	                                            AND T.ORDER_NUM = A.ORDER_NUM
	                                            AND T.SER_NO = A.ORDER_SEQ
	                                            AND T.LOT_NO = A.LOT_NO
	            LEFT JOIN PMP200T T1 WITH(NOLOCK) ON T1.COMP_CODE = T.COMP_CODE
	                                            AND T1.DIV_CODE = T.DIV_CODE
	                                            AND T1.WKORD_NUM = T.WKORD_NUM
	
	            LEFT JOIN BCM100T T2 WITH(NOLOCK) ON T2.COMP_CODE = T1.COMP_CODE                --매입처
	                                            AND ( ISNULL(T2.CHANNEL, '') = SUBSTRING(T1.LOT_NO, 1, 2) AND ISNULL(T1.LOT_NO, '') != '')
	
	            LEFT JOIN S_BCM106T_YP T3 WITH(NOLOCK) ON T3.COMP_CODE = T2.COMP_CODE               --매입처 농가정보
	                                                AND T3.CUSTOM_CODE = T2.CUSTOM_CODE
	                                                AND T3.FARM_CODE = SUBSTRING(T1.LOT_NO, 8, 2)
	            LEFT JOIN S_BCM100T_YP T4 WITH(NOLOCK) ON T4.COMP_CODE = T2.COMP_CODE              --매입처 인증서
	                                                AND T4.CUSTOM_CODE = T2.CUSTOM_CODE
	                                                AND T4.APLY_START_DATE &lt;= A.INOUT_DATE
	                                                AND T4.APLY_END_DATE &gt;= A.INOUT_DATE
	                                                AND T4.TYPE   = SUBSTRING(T1.LOT_NO, 10, 1)
	            LEFT JOIN BSA100T T5 WITH(NOLOCK) ON T5.COMP_CODE = T2.COMP_CODE
	                                            AND T5.MAIN_CODE = 'B056'
	                                            AND T5.SUB_CODE = T2.AREA_TYPE
	            WHERE A.COMP_CODE = @COMP_CODE
	              AND A.DIV_CODE = @DIV_CODE
	
	
	
	            ORDER BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, B.ITEM_NAME, A.INOUT_SEQ
	
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF
	        END
	</select>
	
	<select id="s_str106ukrv_mekServiceImpl.selectOrderNumMaster2" parameterType="Map" resultType="rMap">
/* srq100ukrv.Csrq100ukrv[fnSrq101QPop] Query01 */
		BEGIN
			 SET NOCOUNT ON
			 SET ARITHABORT ON

			 DECLARE	@CompCode    NVARCHAR(08) /* 법인코드    */
					  , @UserId      NVARCHAR(100) /* 사용자ID    */
					  , @LangType    NVARCHAR(2)  /* 언어구분    */
					  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
					  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

			 SET @CompCode = #{S_COMP_CODE}
			 SET @UserId   = #{S_USER_ID}
			 SET @LangType = #{S_LANG_CODE}

			 /* 명칭 참조 유형 */
				SELECT TOP 1 @RefItem = REF_ITEM
				  FROM BSA300T WITH (NOLOCK)
				 WHERE USER_ID = @UserId

				SET @RefItem = ISNULL(@RefItem, N'0')

			 /* 날짜 포맷 유형 설정 */
				SELECT TOP 1 @DateFormat = CODE_NAME
				  FROM BSA100T WITH (NOLOCK)
				 WHERE COMP_CODE = @CompCode
				   AND MAIN_CODE = N'B044'
				   AND REF_CODE1 = N'Y'

				SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			 /* 데이터 조회 */


		    SELECT A.CUSTOM_CODE
		         , (CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
											 ELSE B.CUSTOM_NAME
					END)					AS CUSTOM_NAME

		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                     ELSE C.ITEM_NAME
		            END)					AS ITEM_NAME

		         , C.SPEC
		         , A.ISSUE_REQ_QTY
		         , (CASE WHEN ISNULL ( A.ISSUE_REQ_DATE , '' ) = ''
						 THEN ''
						 ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.ISSUE_REQ_DATE, 1, 4))
											                           , 'MM'   , SUBSTRING (A.ISSUE_REQ_DATE, 5, 2))
												                       , 'DD'   , SUBSTRING (A.ISSUE_REQ_DATE, 7, 2))
		              END)												AS ISSUE_REQ_DATE

		         , (CASE WHEN ISNULL ( A.ISSUE_DATE , '' ) = ''
						 THEN ''
						 ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.ISSUE_DATE, 1, 4))
											                           , 'MM'   , SUBSTRING (A.ISSUE_DATE, 5, 2))
												                       , 'DD'   , SUBSTRING (A.ISSUE_DATE, 7, 2))
		              END)												AS ISSUE_DATE
		         , A.ISSUE_DIV_CODE
		         , A.WH_CODE
		         , A.ORDER_TYPE
		         , A.INOUT_TYPE_DETAIL
		         , A.PROJECT_NO
		         , A.ISSUE_REQ_NUM
		         , A.ISSUE_REQ_SEQ
		         , A.DIV_CODE
		         , RTRIM(A.ISSUE_REQ_NUM) + RTRIM(CONVERT(VARCHAR(4),A.ISSUE_REQ_SEQ)) AS SORT_KEY
				 , D.SO_SER_NO
				 , D.DATE_SHIPPING
				 , D.BOOKING_NUM
				 , A.MONEY_UNIT
				 , A.EXCHANGE_RATE
		      FROM            SRQ100T A WITH (NOLOCK)
		           INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                             AND B.CUSTOM_CODE = A.CUSTOM_CODE
		           INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                             AND C.ITEM_CODE   = A.ITEM_CODE
													
													<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
													AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
													</if>
													<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
													AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
													</if>
													<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
													AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
													</if>
													
													<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_PRSN)">
													 AND A.ISSUE_REQ_PRSN    = #{ISSUE_REQ_PRSN}
													</if>
													<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
													 AND A.ORDER_TYPE        = #{ORDER_TYPE}
													</if>
													<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
													 AND A.INOUT_TYPE_DETAIL = #{INOUT_TYPE_DETAIL}
													</if>
													<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_FR)">
													 AND A.ISSUE_REQ_DATE   &gt;= #{ISSUE_REQ_DATE_FR}
													</if>
													<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_DATE_TO)">
													 AND A.ISSUE_REQ_DATE   &lt;= #{ISSUE_REQ_DATE_TO}
													</if>
													<if test="@foren.Ognl@isNotEmpty(ISSUE_DIV_CODE)">
													 AND A.ISSUE_DIV_CODE    = #{ISSUE_DIV_CODE}
													</if>
													<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
													 AND A.WH_CODE           = #{WH_CODE}
													</if>
													
													<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
													AND A.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
													</if>
													<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
													AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
													</if>
													<if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
													AND C.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
													</if>

													<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
													 AND A.PROJECT_NO        = #{PJT_CODE}
													</if>
													<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
													 AND A.ISSUE_REQ_NUM        = #{ISSUE_REQ_NUM}
													</if>
													<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
													 AND A.DIV_CODE          = #{DIV_CODE}
													</if>
													<if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
													 AND A.COMP_CODE         = #{COMP_CODE}
													</if>
				   LEFT  JOIN TEA100T D WITH (NOLOCK) ON D.COMP_CODE= A.COMP_CODE 
													 AND D.DIV_CODE = A.DIV_CODE
													 AND D.ORDER_NUM = A.ORDER_NUM
		    ORDER BY A.CUSTOM_CODE, A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ, A.ISSUE_REQ_DATE
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
    </select>
    
    <select id="s_str106ukrv_mekServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
    	/* s_str106ukrv_mekServiceImpl.selectExcelUploadSheet1 */
		SELECT _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , UDI_CODE
			 , LOT_NO
			 , INOUT_Q
		  FROM S_STR106UKRV_EXCEL WITH(NOLOCK)
		 WHERE _EXCEL_JOBID 	= #{_EXCEL_JOBID}
	  ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>
	
	<insert id="s_str106ukrv_mekServiceImpl.insertExcelStr106_mek" parameterType="Map">
		/* s_str106ukrv_mekServiceImpl.insertExcelStr106_mek */
		INSERT INTO S_STR106UKRV_EXCEL
			 (_EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE
			 , UDI_CODE
			 , LOT_NO
			 , INOUT_Q
			 , DIV_CODE
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 )
		VALUES
			 (#{_EXCEL_JOBID}
			, #{_EXCEL_ROWNUM}
			, #{_EXCEL_HAS_ERROR}
			, #{_EXCEL_ERROR_MSG}
			, #{S_COMP_CODE}
			, #{UDI_CODE}
			, #{LOT_NO}
			, #{INOUT_Q}
			, #{DIV_CODE}
			, #{S_USER_ID}
			, GETDATE()
			 )
	</insert>
	
	<update id="excelValidate">
		/* s_str106ukrv_mekServiceImpl.excelValidate */
		UPDATE A
		   SET
		       A._EXCEL_HAS_ERROR = (CASE WHEN B.UDI_CODE IS NULL
		                                  THEN 'Y'
		                             ELSE A._EXCEL_HAS_ERROR
		                             END),
		       A._EXCEL_ERROR_MSG = (CASE WHEN B.UDI_CODE IS NULL
		                                  THEN ISNULL(_EXCEL_ERROR_MSG,'') + '품목정보에 UDI_CODE가 존재하지 않습니다.'
		                             ELSE A._EXCEL_ERROR_MSG END),
		              A.ITEM_CODE = B.ITEM_CODE 
		FROM S_STR106UKRV_EXCEL A
		LEFT JOIN  BPR100T B    ON B.COMP_CODE = #{S_COMP_CODE}
		                       AND A.UDI_CODE  = B.UDI_CODE
		WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}


      <!--  UPDATE  A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN ISNULL(C.ITEM_CODE, '') = ''
                                            THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN ISNULL(C.ITEM_CODE, '') = ''
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + '출하지시번호랑 코드랑 일치하지 않습니다.'
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM S_STR106UKRV_EXCEL A
		LEFT JOIN  BPR100T B    ON B.COMP_CODE = #{S_COMP_CODE}
        					   AND A.UDI_CODE  = B.UDI_CODE
        LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ITEM_CODE FROM SRQ100T WITH(NOLOCK)
		              GROUP BY COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ITEM_CODE ) C ON C.COMP_CODE = #{S_COMP_CODE}
                               AND C.DIV_CODE  		= #{DIV_CODE}
                               AND C.ISSUE_REQ_NUM  = #{ISSUE_REQ_NUM}
                               AND B.ITEM_CODE      = C.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID} -->


       UPDATE  A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN A.INOUT_Q > C.GOOD_STOCK_Q
                                            THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN A.INOUT_Q > C.GOOD_STOCK_Q
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + ' 엑셀에 작성된 수량이, LOT_NO에 대한 양품 수량을 초과합니다.'
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM S_STR106UKRV_EXCEL A
        LEFT JOIN  SRQ100T B    ON B.COMP_CODE 		= #{S_COMP_CODE}
                               AND B.DIV_CODE  		= #{DIV_CODE}
                               AND B.ISSUE_REQ_NUM  = #{ISSUE_REQ_NUM}
        LEFT JOIN  BIV150TV C   ON A.LOT_NO         = C.LOT_NO
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
        
        
        UPDATE  A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN C.LOT_NO IS NULL
                                            THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN C.LOT_NO IS NULL
                                            THEN ISNULL(_EXCEL_ERROR_MSG,'') + '재고가 출고창고에 존재하지 않습니다.'
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM S_STR106UKRV_EXCEL A
        LEFT JOIN  SRQ100T B    ON B.COMP_CODE 		= #{S_COMP_CODE}
                               AND B.DIV_CODE  		= #{DIV_CODE}
                               AND B.ISSUE_REQ_NUM  = #{ISSUE_REQ_NUM}
        LEFT JOIN  BIV150TV C   ON A.ITEM_CODE      = C.ITEM_CODE
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>