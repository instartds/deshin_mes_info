<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_qbs400ukrv_mekServiceImpl">
	
	<select id="s_qbs400ukrv_mekServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/*	s_qbs400ukrv_mekServiceImpl.selectList1	*/
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.REPAIR_NUM
			 , A.INSPECT_NO
			 , A.INSPECT_TYPE
			 , B.ITEM_CODE
			 , C.ITEM_NAME
			 , B.MODEL
			 , D.MODEL_NAME
			 , B.REV_NO
			 , A.REQ_DATE
			 , A.WORK_DATE
			 , A.WORK_USER
			 , A.REPAIR_DESC
			 , A.STATUS
			 , B.WKORD_NUM
		  FROM					S_QBS400T_MEK A	WITH (NOLOCK)
				INNER JOIN		S_QBS200T_MEK B	WITH (NOLOCK)
							 ON A.COMP_CODE		= B.COMP_CODE
							AND A.DIV_CODE		= B.DIV_CODE
							AND A.INSPECT_NO	= B.INSPECT_NO
				LEFT OUTER JOIN	BPR100T C		WITH (NOLOCK)
							 ON B.COMP_CODE		= C.COMP_CODE
							AND B.ITEM_CODE		= C.ITEM_CODE
				LEFT OUTER JOIN	S_BMD100T_MEK D	WITH (NOLOCK)
							 ON B.COMP_CODE		= D.COMP_CODE
							AND B.MODEL			= D.MODEL_UNI_CODE
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND A.DIV_CODE	= #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(REQ_DATE_FR)">
		   AND A.REQ_DATE  &gt;= #{REQ_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_DATE_TO)">
		   AND A.REQ_DATE  &lt;= #{REQ_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPECT_NO)">
		   AND A.INSPECT_NO	= #{INSPECT_NO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(STATUS)">
		   AND A.STATUS		= #{STATUS}
		</if>
		 ORDER BY A.COMP_CODE
			 , A.DIV_CODE
			 , A.REPAIR_NUM
	</select>
	
	<update id="s_qbs400ukrv_mekServiceImpl.update" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.update	*/
		UPDATE S_QBS400T_MEK
		   SET WORK_DATE		= #{WORK_DATE}
			 , WORK_USER		= #{WORK_USER}
			 , REPAIR_DESC		= #{REPAIR_DESC}
			 , STATUS			= #{STATUS}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND REPAIR_NUM		= #{REPAIR_NUM}
		   AND INSPECT_NO		= #{INSPECT_NO}
	</update>
	
	<delete id="s_qbs400ukrv_mekServiceImpl.delete" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.delete	*/
		DELETE
		  FROM S_QBS400T_MEK
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND REPAIR_NUM		= #{REPAIR_NUM}
		   AND INSPECT_NO		= #{INSPECT_NO}
	</delete>
	
	<update id="s_qbs400ukrv_mekServiceImpl.updateInspect" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.updateInspect	*/
		UPDATE S_QBS200T_MEK
		   SET STATUS			= #{INSPECT_STATUS}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND MODEL			= #{MODEL}
		   AND REV_NO			= #{REV_NO}
		   AND INSPECT_NO		= #{INSPECT_NO}
	</update>
	
	<select id="s_qbs400ukrv_mekServiceImpl.checkBad" parameterType="Map" resultType="integer">
		/*	s_qbs400ukrv_mekServiceImpl.checkBad	*/
		SELECT COUNT(*)	AS CNT_BAD
		  FROM					S_QBS430T_MEK A	WITH (NOLOCK)
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.DIV_CODE		= #{DIV_CODE}
		   AND A.REPAIR_NUM		= #{REPAIR_NUM}
	</select>
	
	<select id="s_qbs400ukrv_mekServiceImpl.selectListBadInspect" parameterType="Map" resultType="rMap">
		/*	s_qbs400ukrv_mekServiceImpl.selectListBadInspect	*/
		SELECT B.COMP_CODE
			 , B.DIV_CODE
			 , A.SUB_CODE			AS BAD_CODE
			 , A.CODE_NAME			AS BAD_NAME
			 , ''					AS REPAIR_NUM
			 , ISNULL(B.BAD_Q, 0)	AS BAD_Q
			 , B.REASON
			 , B.INSPECT_VALUE
		  FROM					BSA100T A	WITH (NOLOCK)
				LEFT OUTER JOIN	S_QBS300T_MEK B	WITH (NOLOCK)
							 ON A.COMP_CODE		= B.COMP_CODE
							AND B.DIV_CODE		= #{DIV_CODE}
							AND B.INSPECT_NO	= #{INSPECT_NO}
							AND A.SUB_CODE		= B.BAD_CODE
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND A.MAIN_CODE	= 'P003'
		   AND A.REF_CODE5	= '12'
		 ORDER BY A.COMP_CODE
			 , LEN(A.SUB_CODE)
			 , A.SUB_CODE
	</select>
	
	<select id="s_qbs400ukrv_mekServiceImpl.selectListBadRepair" parameterType="Map" resultType="rMap">
		/*	s_qbs400ukrv_mekServiceImpl.selectListBadRepair	*/
		SELECT B.COMP_CODE
			 , B.DIV_CODE
			 , A.SUB_CODE			AS BAD_CODE
			 , A.CODE_NAME			AS BAD_NAME
			 , B.REPAIR_NUM
			 , ISNULL(B.BAD_Q, 0)	AS BAD_Q
			 , B.REASON
			 , B.INSPECT_VALUE
		  FROM					BSA100T A	WITH (NOLOCK)
				LEFT OUTER JOIN	S_QBS430T_MEK B	WITH (NOLOCK)
							 ON A.COMP_CODE		= B.COMP_CODE
							AND B.DIV_CODE		= #{DIV_CODE}
							AND B.REPAIR_NUM	= #{REPAIR_NUM}
							AND A.SUB_CODE		= B.BAD_CODE
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND A.MAIN_CODE	= 'P003'
		   AND A.REF_CODE5	= '12'
		 ORDER BY A.COMP_CODE
			 , LEN(A.SUB_CODE)
			 , A.SUB_CODE
	</select>
	
	<insert id="s_qbs400ukrv_mekServiceImpl.insertBad" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.insertBad	*/
		INSERT INTO S_QBS430T_MEK
			 ( COMP_CODE		, DIV_CODE			, BAD_CODE			, REPAIR_NUM
			 , BAD_Q			, REASON			, INSPECT_VALUE
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME	)
		VALUES
			 ( #{S_COMP_CODE}	, #{DIV_CODE}		, #{BAD_CODE}		, #{REPAIR_NUM}
			 , #{BAD_Q}			, #{REASON}			, #{INSPECT_VALUE}
			 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()	)
	</insert>
	
	<update id="s_qbs400ukrv_mekServiceImpl.updateBad" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.updateBad	*/
		UPDATE S_QBS430T_MEK
		   SET BAD_Q			= #{BAD_Q}
			 , REASON			= #{REASON}
			 , INSPECT_VALUE	= #{INSPECT_VALUE}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND REPAIR_NUM		= #{REPAIR_NUM}
		   AND BAD_CODE			= #{BAD_CODE}
	</update>
	
	<delete id="s_qbs400ukrv_mekServiceImpl.deleteBad" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.deleteBad	*/
		DELETE
		  FROM S_QBS430T_MEK
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND REPAIR_NUM		= #{REPAIR_NUM}
		   AND BAD_Q			= 0
	</delete>
	
	<delete id="s_qbs400ukrv_mekServiceImpl.deleteBadAll" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.deleteBad	*/
		DELETE
		  FROM S_QBS430T_MEK
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND REPAIR_NUM		= #{REPAIR_NUM}
	</delete>
	
	<select id="s_qbs400ukrv_mekServiceImpl.selectListRepPart" parameterType="Map" resultType="rMap">
		/*	s_qbs400ukrv_mekServiceImpl.selectListRepPart	*/
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.WKORD_NUM
			 , A.INSPECT_NO
			 , A.LOT_NO
			 , A.PROD_ITEM_CODE
			 , A.MODEL_CODE
			 , A.HW_VER
			 , A.SW_VER
			 , CAST(CASE WHEN A.USE_YN = 'Y' THEN 'true' ELSE 'false' END AS BIT)	AS USE_YN
			 , CASE WHEN ISNULL(A.REPAIR_YN, '') = '' THEN 'N' ELSE A.REPAIR_YN END	AS REPAIR_YN
			 , A.REPAIR_NUM
		  FROM S_PMR110T_MEK A	WITH (NOLOCK)
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND A.DIV_CODE	= #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		   AND A.WKORD_NUM	= #{WKORD_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPECT_NO)">
		   AND A.INSPECT_NO	= #{INSPECT_NO}
		</if>
		 ORDER BY A.COMP_CODE
			 , A.DIV_CODE
			 , A.WKORD_NUM
			 , A.INSPECT_NO
			 , A.REPAIR_NUM
	</select>
	
	<insert id="s_qbs400ukrv_mekServiceImpl.insertRepPart" parameterType="Map" useGeneratedKeys="false">
		/*	s_qbs400ukrv_mekServiceImpl.insertRepPart	*/
		BEGIN
			UPDATE S_PMR110T_MEK
			   SET USE_YN			= 'N'
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()
			 WHERE COMP_CODE				= #{S_COMP_CODE}
			   AND DIV_CODE					= #{DIV_CODE}
			   AND WKORD_NUM				= #{WKORD_NUM}
			   AND INSPECT_NO				= #{INSPECT_NO}
			   AND SUBSTRING(LOT_NO, 1, 4)	= SUBSTRING(#{LOT_NO}, 1, 4)
			   AND USE_YN					= 'Y'
			
			INSERT INTO S_PMR110T_MEK
				 ( COMP_CODE		, DIV_CODE			, WKORD_NUM			, INSPECT_NO
				 , LOT_NO			, PROD_ITEM_CODE	, MODEL_CODE		, REPAIR_NUM
				 , HW_VER			, SW_VER			, USE_YN			, REPAIR_YN
				 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME	)
			VALUES
				 ( #{S_COMP_CODE}	, #{DIV_CODE}		, #{WKORD_NUM}		, #{INSPECT_NO}
				 , #{LOT_NO}		, #{PROD_ITEM_CODE}	, #{MODEL_CODE}		, #{REPAIR_NUM}
				 , #{HW_VER}		, #{SW_VER}			, #{USE_YN}			, #{REPAIR_YN}
				 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()	)
		END
	</insert>
	
	<update id="s_qbs400ukrv_mekServiceImpl.updateRepPart" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.updateRepPart	*/
		UPDATE S_PMR110T_MEK
		   SET USE_YN			= #{USE_YN}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND WKORD_NUM		= #{WKORD_NUM}
		   AND INSPECT_NO		= #{INSPECT_NO}
		   AND LOT_NO			= #{LOT_NO}
	</update>
	
	<delete id="s_qbs400ukrv_mekServiceImpl.deleteRepPartAll" parameterType="Map">
		/*	s_qbs400ukrv_mekServiceImpl.deleteBad	*/
		DELETE
		  FROM S_PMR110T_MEK
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND WKORD_NUM		= #{WKORD_NUM}
		   AND INSPECT_NO		= #{INSPECT_NO}
		   AND REPAIR_YN		= 'Y'
	</delete>
	
</mapper>