<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scp100skrvServiceImpl">
	<select id="scp100skrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
			
		DECLARE @CompCode		NVARCHAR(08)	/* 법인코드  */
		      , @UserId			NVARCHAR(100)	/* 사용자ID */
		      , @LangType		NVARCHAR(2)		/* 언어구분 */
		      , @RefItem		NVARCHAR(01)
		      , @DateFormat		NVARCHAR(10)
			
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}
			
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
			FROM BSA300T WITH (NOLOCK)
			WHERE COMP_CODE = @CompCode
				AND USER_ID = @UserId
			
		SET @RefItem = ISNULL(@RefItem, N'0')
			
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
			FROM BSA100T WITH (NOLOCK)
			WHERE COMP_CODE = @CompCode
			AND MAIN_CODE = N'B044'
			AND REF_CODE1 = N'Y'
			
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 조회 */ 
	    SELECT
	      A.COMP_CODE
	    , A.DIV_CODE
	    , A.SALE_DATE
	    , A.DEPT_CODE 
	    , A.BILL_SEQ
	    , A.ITEM_CODE				/* 품목 */ 
		, C.ITEM_NAME  AS ITEM_NAME	/* 품명 */
		, A.SALE_P					/* 단가 */ 
		, A.SALE_Q					/* 수량 */
		, A.SALE_AMT_O				/* 판매가 */
		, A.CARD_CUST_CODE			/* 신용카드사 */
		, A.COLLECT_TYPE_DETAIL		/* 매입사 */
		, A.CARD_NO					/* 카드번호 */
		, A.CARD_ACC_NUM			/* 승인번호 */
		, A.APPVAL_TIME				/* 승인시간 */
		, A.REMARK 					/* 비고 */
		, D.CODE_NAME	AS COLLECT_TYPE		/* YP33 */
		
		FROM SSA500T       A
		LEFT OUTER JOIN BSA100T B WITH(NOLOCK) ON  A.COMP_CODE           = B.COMP_CODE
										 	  AND  B.MAIN_CODE 		     = 'A028'
								 		 	  AND  B.SUB_CODE  		    != N'$'
								 		      AND  A.COLLECT_TYPE_DETAIL = B.SUB_CODE
				 		      
		INNER      JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
										      AND A.DIV_CODE  = C.DIV_CODE
											  AND A.ITEM_CODE = C.ITEM_CODE		
											  
		LEFT OUTER JOIN BSA100T D WITH(NOLOCK) ON  A.COMP_CODE    = D.COMP_CODE
										 	  AND  D.MAIN_CODE 	  = 'YP33'
								 		 	  AND  D.SUB_CODE    != N'$'
								 		      AND  A.COLLECT_TYPE = D.SUB_CODE									  			 		 
								 		 
		
		WHERE  A.COMP_CODE      = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE      = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(SALE_DATE_FR)">
	    AND    A.SALE_DATE      &gt;= #{SALE_DATE_FR}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(SALE_DATE_TO)">
	    AND    A.SALE_DATE      &lt;= #{SALE_DATE_TO}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)">
	    AND    A.COLLECT_TYPE   = #{COLLECT_TYPE}
	    </if>
		
		ORDER BY C.ITEM_NAME
					    
	    SET NOCOUNT OFF
		SET ARITHABORT OFF
	
	END
    </select>	
    
    
    <insert id="scp100skrvServiceImpl.insertExcelSSA500T" parameterType="Map">		/* 엑셀insert */
	/*scp100skrvServiceImpl.insertExcelSSA500T*/
	INSERT INTO SSA501T
		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, ITEM_CODE, ITEM_NAME, SALE_P, SALE_Q, SALE_AMT_O,	
		CARD_CUST_CODE, COLLECT_TYPE_DETAIL, CARD_NO, CARD_ACC_NUM, APPVAL_TIME )
	VALUES 
		(#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, 
		#{ITEM_CODE}, #{ITEM_NAME}, #{SALE_P}, #{SALE_Q}, #{SALE_AMT_O}, #{CARD_CUST_CODE}, #{COLLECT_TYPE_DETAIL},
		#{CARD_NO}, #{CARD_ACC_NUM}, #{APPVAL_TIME} )
    </insert>
    
    <select id="scp100skrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 */
    BEGIN
		SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */
		SELECT
			  A._EXCEL_ROWNUM
			, A._EXCEL_HAS_ERROR
			, A._EXCEL_ERROR_MSG
		   
		    , A.ITEM_CODE											/* 품목 */ 
			, A.ITEM_NAME											/* 품명 */
			, A.SALE_P												/* 단가 */ 
			, A.SALE_Q												/* 수량 */
			, A.SALE_AMT_O											/* 판매가 */
			, A.CARD_CUST_CODE										/* 신용카드사 */
			, B.SUB_CODE 				AS COLLECT_TYPE_DETAIL		/* 매입사 */
			, A.CARD_NO												/* 카드번호 */
			, A.CARD_ACC_NUM										/* 승인번호 */
			, A.APPVAL_TIME											/* 승인시간 */
			
			FROM SSA501T       A WITH(NOLOCK)
			LEFT JOIN BSA100T B WITH(NOLOCK) ON  B.COMP_CODE      = #{S_COMP_CODE}
											 AND  B.MAIN_CODE 	  = 'A028'
									 		 AND  B.SUB_CODE  	 != N'$'
									 		 AND  B.CODE_NAME 	  = A.COLLECT_TYPE_DETAIL
			
			WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 	ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	 	
	 	SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>
	
	<update id="excelValidate" >
	/*scp100skrvServiceImpl.excelValidate*/
	/*다국어 메세지 처리 함수 필요. S_LANG_CODE와 msg_no를 파라미터로 받아 BSA000T에서 조회*/
	
   UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL 		THEN 'Y'
								       WHEN D.SUB_CODE IS NULL  							THEN 'Y' 
								  ELSE A._EXCEL_HAS_ERROR 
							      END),
							     
			A._EXCEL_ERROR_MSG = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL  	THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 품목정보가 존재하지 않습니다. ' 
									  	   WHEN D.SUB_CODE IS NULL  						THEN ISNULL(_EXCEL_ERROR_MSG,'') + '매입사코드(명)을 확인해 주세요.'    
								 ELSE A._EXCEL_ERROR_MSG 
								 END)
								 
	FROM SSA501T A 
	LEFT JOIN  BPR100T B    ON B.COMP_CODE = #{S_COMP_CODE}
						   AND A.ITEM_CODE = B.ITEM_CODE
	LEFT JOIN  BPR200T C    ON C.COMP_CODE = #{S_COMP_CODE}	
	  					   AND C.DIV_CODE  = #{DIV_CODE}				   
						   AND A.ITEM_CODE = C.ITEM_CODE
	LEFT JOIN BSA100T D WITH(NOLOCK) ON  D.COMP_CODE      = #{S_COMP_CODE}
									AND  D.MAIN_CODE 	  = 'A028'
									AND  D.SUB_CODE  	 != N'$'
									AND  D.CODE_NAME 	  = A.COLLECT_TYPE_DETAIL
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	
	UPDATE  A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN B.USE_YN = 'N' 
										THEN 'Y' 
									   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} 
										THEN 'Y'
									   WHEN  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
										THEN 'Y'
							      ELSE A._EXCEL_HAS_ERROR 
							      END),
			A._EXCEL_ERROR_MSG = (CASE WHEN B.USE_YN = 'N' 
										THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용중지된 품목입니다.' 
									   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} OR  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
										THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용기간이 경과한 품목입니다.('+ISNULL(B.START_DATE, '')+'~'+ISNULL(B.STOP_DATE, '')+')'  
								  ELSE A._EXCEL_ERROR_MSG END)
	FROM SSA501T A 
	INNER JOIN  BPR100T B  ON B.COMP_CODE= #{S_COMP_CODE}
						  AND A.ITEM_CODE = B.ITEM_CODE
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	
	<insert id="scp100skrvServiceImpl.insertDetail" parameterType="Map">    	
	INSERT INTO SSA500T
	     ( COMP_CODE
	     , DIV_CODE
	     , DEPT_CODE
	     , SALE_DATE
	     , BILL_SEQ
	      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	     , ITEM_CODE
	     </if>
	      <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	     , ITEM_NAME
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_P)">
	     , SALE_P
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_Q)">
	     , SALE_Q
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O)">
	     , SALE_AMT_O
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_CUST_CODE)">
	     , CARD_CUST_CODE
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE_DETAIL)">
	     , COLLECT_TYPE_DETAIL
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_NO)">
	     , CARD_NO
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_ACC_NUM)">
	     , CARD_ACC_NUM
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(APPVAL_TIME)">
	     , APPVAL_TIME
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(BILL_PRSN)">
	     , BILL_PRSN
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(REMARK)">
	     , REMARK
	     </if>	     
	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     ) 
	SELECT
	       #{COMP_CODE}				
	     ,#{S_DIV_CODE}			
	     ,#{DEPT_CODE}	
	     ,#{SALE_DATE}
	     ,ISNULL(MAX(BILL_SEQ)+1,1)
	     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	     ,#{ITEM_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	     ,#{ITEM_NAME}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_P)">
	     ,#{SALE_P}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_Q)">
	     ,#{SALE_Q}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O)">
	     ,#{SALE_AMT_O}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_CUST_CODE)">
	     ,#{CARD_CUST_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE_DETAIL)">
	     ,#{COLLECT_TYPE_DETAIL}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_NO)">
	     ,#{CARD_NO}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CARD_ACC_NUM)">
	     ,#{CARD_ACC_NUM}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(APPVAL_TIME)">
	     ,#{APPVAL_TIME}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(BILL_PRSN)">
	     ,#{BILL_PRSN}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(REMARK)">
	     ,#{REMARK}
	     </if>
	     ,#{S_USER_ID}
	     ,GETDATE() 
	     FROM SSA500T WHERE SALE_DATE = #{SALE_DATE}
		</insert>
			
	<update id="scp100skrvServiceImpl.updateDetail" parameterType="Map">		
	UPDATE SSA500T
		SET
	     ITEM_CODE   	   		= #{ITEM_CODE}
	     ,ITEM_NAME      		= #{ITEM_NAME}
	     ,SALE_P   	   			= #{SALE_P}
	     ,SALE_Q   		   		= #{SALE_Q}
	     ,SALE_AMT_O   		    = #{SALE_AMT_O}
	     ,CARD_CUST_CODE   	    = #{CARD_CUST_CODE}
	     ,COLLECT_TYPE_DETAIL   = #{COLLECT_TYPE_DETAIL}
	     ,CARD_NO   	   		= #{CARD_NO}
	     ,CARD_ACC_NUM   		= #{CARD_ACC_NUM}
	     ,APPVAL_TIME   		= #{APPVAL_TIME}
	     ,BILL_PRSN   		    = #{BILL_PRSN}
	     ,REMARK   		   		= #{REMARK}
	     ,UPDATE_DB_USER   		= #{S_USER_ID}
	     ,UPDATE_DB_TIME   		= getDate()
	     
	    WHERE		COMP_CODE 		= #{COMP_CODE}
	     	AND		DIV_CODE 	    = #{DIV_CODE}
	     	AND     DEPT_CODE       = #{DEPT_CODE}
	        AND     SALE_DATE  		= #{SALE_DATE}
	        AND     BILL_SEQ		= #{BILL_SEQ}
	</update>
		
	<delete id="scp100skrvServiceImpl.deleteDetail" parameterType="Map">
	DELETE FROM SSA500T 
	WHERE 	COMP_CODE 		= #{COMP_CODE}
     AND    DIV_CODE  		= #{DIV_CODE}
     AND    DEPT_CODE       = #{DEPT_CODE}
     AND    SALE_DATE  		= #{SALE_DATE}
     AND    BILL_SEQ		= #{BILL_SEQ}
	</delete>
		
	<select id="scp100skrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
    SELECT A.COMP_CODE, A.COMP_NAME
    FROM              BOR100T   A  WITH (NOLOCK)
           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                                AND M1.MAIN_CODE    = 'B107'
                                                AND M1.SUB_CODE     = '20'         
    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>    	
</mapper>