<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cpa100ukrvService">
	
	<select id="cpa100ukrvService.checkID" parameterType="Map" resultType="rMap">
		    SELECT COUNT(COOPTOR_ID) AS CNT
		    FROM   CPA100T
		    WHERE  COMP_CODE	= #{COMP_CODE}
		     /* AND  COOPTOR_ID=#{COOPTOR_ID}	*/		
	</select>
	<update id="cpa100ukrvService.cpaChekIDUpdateDetail" parameterType="Map">
		BEGIN
			UPDATE CPA100T
			SET UNIV_NUMB 		= #{UNIV_NUMB}
			   ,GRADUATE_YN 	= #{GRADUATE_YN}		
			   ,GRADUATE_DATE 	= #{GRADUATE_DATE}		   
			   ,REPAYMENT_YN 	= #{REPAYMENT_YN}
			   ,REPAYMENT_DATE 	= #{REPAYMENT_DATE}
			   ,MEMBER_YN 		= #{MEMBER_YN}
	           ,UPDATE_DB_USER  = #{S_USER_ID} 
			   ,UPDATE_DB_TIME  = getdate()
			   
	       WHERE 	COMP_CODE   = #{COMP_CODE}
	         AND    COOPTOR_ID  = #{COOPTOR_ID}
		END		
	</update>
	<update id="cpa100ukrvService.cpaChekIDInsertDetail" parameterType="Map">	
		BEGIN
			INSERT INTO CPA100T
	           ( COMP_CODE
	            ,COOPTOR_ID
	            ,UNIV_NUMB
	            ,GRADUATE_YN
	            ,GRADUATE_DATE
	            ,REPAYMENT_YN
	            ,REPAYMENT_DATE   
	            ,MEMBER_YN    
	        	,INSERT_DB_USER
	        	,INSERT_DB_TIME
	          	,UPDATE_DB_USER
	          	,UPDATE_DB_TIME
				)
	     VALUES
	           (#{COMP_CODE}
	           ,#{COOPTOR_ID}       
	           ,#{UNIV_NUMB}     
	           ,#{GRADUATE_YN}       
	           ,#{GRADUATE_DATE}      
	           ,#{REPAYMENT_YN} 
	           ,#{REPAYMENT_DATE}
	           ,#{MEMBER_YN}	            
	           ,#{S_USER_ID}
	           ,getdate()			            
	           ,#{S_USER_ID}			             
	           ,getdate() 
	        )
		END	
	</update>
   
   <select id="cpa100ukrvService.selectList" parameterType="Map" resultType="rMap">
      BEGIN
         SET NOCOUNT ON
         SET ARITHABORT ON
         
         DECLARE @CompCode       NVARCHAR(08) /* 법인코드            */
               , @UserId          NVARCHAR(100) /* 사용자ID            */
               , @LangType       NVARCHAR(2)  /* 언어구분            */
               , @RefItem       NVARCHAR(01) /* 명칭 참조 유형          */
               , @DateFormat      NVARCHAR(10) /* 날짜 포맷 유형 설정     */
           
      
          SET @CompCode = #{S_COMP_CODE}
         SET @UserId   = #{S_USER_ID}
          SET @LangType = #{S_LANG_CODE}
         
      
          /* 명칭 참조 유형 */
         SELECT TOP 1 @RefItem = REF_ITEM
           FROM BSA300T WITH (NOLOCK)
          WHERE USER_ID = @UserId
         
          SET @RefItem = ISNULL(@RefItem, N'0')
         
         /* 날짜 포맷 유형 설정 */
         SELECT TOP 1 @DateFormat = CODE_NAME
           FROM BSA100T WITH (NOLOCK)
          WHERE COMP_CODE = @CompCode
            AND MAIN_CODE = N'B044'
            AND REF_CODE1 = N'Y'
         
          SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
      
      
         SELECT 
            A.COMP_CODE            													/* 법인코드   	 */
           ,A.COOPTOR_ID             												/* 조합원 ID    */
           ,A.COOPTOR_NAME         													/* 조합원명    	 */
           ,A.INVEST_CNT            												/* 출자구좌수   */
           ,A.COOPTOR_TYPE         													/* 조합원구분       */
           ,uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)AS START_DATE       	/* 시작(가입)일자 */
           ,A.BANK_CODE            													/* 은행코드   */
           ,B.CUSTOM_NAME 					AS BANK_NAME							/* 은행명 */
           ,unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B')		AS BANKBOOK_NUM		/* 계좌번호   */
           ,A.GRADUATE_YN															/* 졸업여부  */
           ,uniLITE.fnGetUserDate(A.COMP_CODE, A.GRADUATE_DATE) AS GRADUATE_DATE 	/* 졸업일자  */
           ,A.REPAYMENT_YN         													/* 반환여부  */
           ,uniLITE.fnGetUserDate(A.COMP_CODE, A.REPAYMENT_DATE) AS REPAYMENT_DATE 	/* 반환일자   */
           
           
           ,A.UNIV_NUMB            													/* 학번     	 */
           ,A.CELL_PHONE            												/* 핸드폰번호    */
           ,A.DEPT_NAME1            												/* 소속1(대학,처)*/
           ,A.DEPT_NAME2            												/* 소속2(과,팀)*/
           ,A.GENDER               													/* 성별      */
           ,A.ADDRESS_TYPE         													/* 주소구분   */
           ,(SUBSTRING(A.ZIP_CODE, 1, 3) + '-' +                    
             SUBSTRING(A.ZIP_CODE, 4, 3)) AS ZIP_CODE            					/* 우편번호   */
           ,A.ADDR1               													/* 기본주소      */
           ,A.ADDR2               													/* 상세주소      */
           ,A.MEMBER_YN            													/* 조합원여부   */
           ,A.INVEST_AMT            												/* 출자금액   */
           ,A.DIVID_CNT																/* 배당회수 */
           ,A.REPAYMENT_AMT         												/* 반환금액   */
           ,A.TOT_POINT																/* 현재포인트(총포인트)*/
           ,A.INVEST_POINT         													/* 출자포인트 */
           ,A.ADD_POINT            													/* 누적포인트 */
           ,A.USE_POINT            													/* 사용포인트 */
           ,A.MEMBER_LEVEL         													/* 회원등급   */
           ,A.PURCHASE_LEVEL         												/* 구매등급   */
           ,A.REMARK               													/* 비고      */
           
           ,A.PASSWORD																/*비밀번호*/
           /*2015.05.21 추가 */
           ,A.CASH_MEMBER_NO 														/* 현금영수증 거래시 발행번호 */
           ,A.CASH_RECEIPT_AUTO_YN													/* 현금영수증 자동 발급 여부 */
           
           FROM CPA100T  		   A WITH(NOLOCK)  
           LEFT OUTER JOIN BCM100T B WITH(NOLOCK)  ON A.COMP_CODE = B.COMP_CODE
           										  AND A.BANK_CODE = B.CUSTOM_CODE 
           

         WHERE A.COMP_CODE         = @CompCode
            <if test="@foren.Ognl@isNotEmpty(COOPTOR_ID)">
            AND A.COOPTOR_ID    LIKE #{COOPTOR_ID} + '%'
            </if>     
            <if test="@foren.Ognl@isNotEmpty(COOPTOR_NAME)">
            AND A.COOPTOR_NAME LIKE #{COOPTOR_NAME} + '%'      
            </if>
            <if test="@foren.Ognl@isNotEmpty(COOPTOR_TYPE)">
            AND A.COOPTOR_TYPE = #{COOPTOR_TYPE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(GRADUATE_YN)">
            AND A.GRADUATE_YN = #{GRADUATE_YN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_YN)">
            AND A.REPAYMENT_YN = #{REPAYMENT_YN}
            </if>
            
                 
          SET NOCOUNT OFF
           SET ARITHABORT OFF
      END

   </select>
   
   <insert id="cpa100ukrvService.insertDetail" parameterType="Map">
      INSERT INTO CPA100T
         (   COMP_CODE
           , COOPTOR_ID             /* 조합원 ID */
           , COOPTOR_NAME         /* 조합원명    */
           , COOPTOR_TYPE         /* 조합원구분  */
           , UNIV_NUMB            /* 학번      */
           , CELL_PHONE            /* 핸드폰번호 */
           , REMARK               /* 비고     */ 
           , PASSWORD
           <if test="@foren.Ognl@isNotEmpty(DEPT_NAME1)">
           , DEPT_NAME1            /* 소속1(대학,처)*/
           </if>
            <if test="@foren.Ognl@isNotEmpty(START_DATE)">
           , START_DATE            /* 시작(가입)일자 */
           </if>
            <if test="@foren.Ognl@isNotEmpty(INVEST_CNT)">
           , INVEST_CNT            /* 출자구좌수   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(INVEST_AMT)">
           , INVEST_AMT            /* 출자금액   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_AMT)">
           , REPAYMENT_AMT         /* 반환금액   */
           </if>
           <if test="@foren.Ognl@isNotEmpty(DIVID_CNT)">
           , DIVID_CNT         /* 배당회수   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(BANKBOOK_NUM)">
           , BANKBOOK_NUM          /* 계좌번호   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(DEPT_NAME2)">
           ,   DEPT_NAME2            /* 소속2(과,팀)*/
           </if>
            <if test="@foren.Ognl@isNotEmpty(GENDER)">
           ,   GENDER               /* 성별      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDRESS_TYPE)">
           ,   ADDRESS_TYPE         /* 주소구분   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
           ,   ZIP_CODE            /* 우편번호   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDR1)">
           ,   ADDR1               /* 주소1      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDR2)">
           ,   ADDR2               /* 주소2      */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CASH_RECEIPT_AUTO_YN)">
           ,   CASH_RECEIPT_AUTO_YN      /* 현금영수증 자동발급 여부   */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CASH_MEMBER_NO)">
           ,   CASH_MEMBER_NO      	/* 현금영수증 거래시 발행번호  */
           </if>
            <if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
           ,   BANK_CODE            /* 은행코드   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(MEMBER_YN)">
           ,   MEMBER_YN            /* 조합원여부   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(GRADUATE_YN)">
           ,   GRADUATE_YN            /* 졸업여부   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(GRADUATE_DATE)">
           ,   GRADUATE_DATE            /* 졸업일자   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_YN)">
           ,   REPAYMENT_YN         /* 반환여부   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_DATE)">
           ,   REPAYMENT_DATE         /* 반환일자   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(MEMBER_LEVEL)">
           ,   MEMBER_LEVEL         /* 회원등급   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(PURCHASE_LEVEL)">
           ,   PURCHASE_LEVEL         /* 구매등급   */
           </if>
            ,INSERT_DB_USER
        	,INSERT_DB_TIME
          	,UPDATE_DB_USER
          	,UPDATE_DB_TIME
           ) 
      VALUES
           ( 
              #{COMP_CODE}
           , #{COOPTOR_ID}         /* 조합원 ID */
           , #{COOPTOR_NAME}         /* 조합원명    */
           , #{COOPTOR_TYPE}         /* 조합원구분  */
           , #{UNIV_NUMB}         /* 학번      */
           , #{CELL_PHONE}         /* 핸드폰번호 */
           , #{REMARK}            /* 비고     */
           , #{PASSWORD}			/*비밀번호*/
           <if test="@foren.Ognl@isNotEmpty(DEPT_NAME1)">
           , #{DEPT_NAME1}         /* 소속1(대학,처)*/
           </if>
            <if test="@foren.Ognl@isNotEmpty(START_DATE)">
           , #{START_DATE}         /* 시작(가입)일자 */
           </if>
            <if test="@foren.Ognl@isNotEmpty(INVEST_CNT)">
           , #{INVEST_CNT}         /* 출자구좌수   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(INVEST_AMT)">
           , #{INVEST_AMT}         /* 출자금액   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_AMT)">
           , #{REPAYMENT_AMT}      /* 반환금액   */
           </if>
           <if test="@foren.Ognl@isNotEmpty(DIVID_CNT)">
           , #{DIVID_CNT}      /* 배당회수   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(BANKBOOK_NUM)">
           , uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM},'')       /* 계좌번호   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(DEPT_NAME2)">
           , #{DEPT_NAME2}         /* 소속2(과,팀)*/
           </if>
            <if test="@foren.Ognl@isNotEmpty(GENDER)">
           , #{GENDER}            /* 성별      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDRESS_TYPE)">
           , #{ADDRESS_TYPE}         /* 주소구분   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
           , #{ZIP_CODE}            /* 우편번호   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDR1)">
           , #{ADDR1}            /* 주소1      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(ADDR2)">
           , #{ADDR2}            /* 주소2      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(CASH_RECEIPT_AUTO_YN)">
           , #{CASH_RECEIPT_AUTO_YN}            /* 현금영수증 자동발급 여부      */
           </if>
            <if test="@foren.Ognl@isNotEmpty(CASH_MEMBER_NO)">
           , #{CASH_MEMBER_NO}            /* 현금영수증 거래시 발행번호     */
           </if>
            <if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
           , #{BANK_CODE}         /* 은행코드   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(MEMBER_YN)">
           , #{MEMBER_YN}         /* 조합원여부   */
           </if>
           <if test="@foren.Ognl@isNotEmpty(GRADUATE_YN)">
           , #{GRADUATE_YN}         /* 졸업여부   */
           </if>
           <if test="@foren.Ognl@isNotEmpty(GRADUATE_DATE)">
           , #{GRADUATE_DATE}         /* 졸업일자   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_YN)">
           , #{REPAYMENT_YN}         /* 반환여부   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(REPAYMENT_DATE)">
           , #{REPAYMENT_DATE}      /* 반환일자   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(MEMBER_LEVEL)">
           , #{MEMBER_LEVEL}         /* 회원등급   */
           </if>
            <if test="@foren.Ognl@isNotEmpty(PURCHASE_LEVEL)">
           , #{PURCHASE_LEVEL}      /* 구매등급   */
           </if>
           ,#{S_USER_ID}
           ,getdate()			            
           ,#{S_USER_ID}			             
           ,getdate() 
           )
   </insert>
   <insert id="cpa100ukrvService.insertDetail2" parameterType="Map">
	   	INSERT INTO CPA200T(
							COMP_CODE
							, COOPTOR_ID
							, INVEST_DATE
							, INOUT_TYPE
							, INOUT_AMT
							, INOUT_Q
							, CALC_POINT
							, COLLECT_TYPE
							, COLLECT_YN
							, REMARK
							, INSERT_DB_USER
							, INSERT_DB_TIME
							, UPDATE_DB_USER
							, UPDATE_DB_TIME
							)
			   SELECT		#{COMP_CODE}
						,	#{COOPTOR_ID}
						,	#{START_DATE}
						,	'1'
						,	REF_CODE1*CONVERT(BIGINT,#{INVEST_CNT})
						,	#{INVEST_CNT}
						,	0
						,	NULL
						,	'N'
						,	''
						,#{S_USER_ID}
						,getdate()			            
						,#{S_USER_ID}			             
						,getdate() 
			   FROM BSA100T
			   WHERE MAIN_CODE = 'YP44'
				 AND SUB_CODE  = #{COOPTOR_TYPE}
   	
   </insert>
   
   <update id="cpa100ukrvService.updateDetail" parameterType="Map">
      UPDATE CPA100T
         SET 
           
            COOPTOR_NAME   = #{COOPTOR_NAME}      /* 조합원명    */
             <if test="@foren.Ognl@isExists(_parameter, 'PASSWORD')">
           , PASSWORD   = #{PASSWORD}      /* 비밀번호  */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'COOPTOR_TYPE')">
           , COOPTOR_TYPE   = #{COOPTOR_TYPE}      /* 조합원구분  */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'UNIV_NUMB')">
           , UNIV_NUMB      = #{UNIV_NUMB}      /* 학번      */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'CELL_PHONE')">
           , CELL_PHONE      = #{CELL_PHONE}      /* 핸드폰번호 */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'REMARK')">
           , REMARK         = #{REMARK}      /* 비고     */
           </if>  
           <if test="@foren.Ognl@isExists(_parameter, 'DEPT_NAME1')">
           , DEPT_NAME1      = #{DEPT_NAME1}      /* 소속1(대학,처)*/
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'START_DATE')">
           , START_DATE      = #{START_DATE}      /* 시작(가입)일자 */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'INVEST_CNT')">
           , INVEST_CNT      = #{INVEST_CNT}      /* 출자구좌수   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'INVEST_AMT')">
           , INVEST_AMT      = #{INVEST_AMT}      /* 출자금액   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'REPAYMENT_AMT')">
           , REPAYMENT_AMT   = #{REPAYMENT_AMT}      /* 반환금액   */
           </if>
           <if test="@foren.Ognl@isExists(_parameter, 'DIVID_CNT')">
           , DIVID_CNT   = #{DIVID_CNT}      /* 배당회수   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'BANKBOOK_NUM')">
           , BANKBOOK_NUM    = uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM},'')      /* 계좌번호   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'DEPT_NAME2')">
           ,   DEPT_NAME2      = #{DEPT_NAME2}      /* 소속2(과,팀)*/
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'GENDER')">
           ,   GENDER         = #{GENDER}      /* 성별      */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'ADDRESS_TYPE')">
           ,   ADDRESS_TYPE   = #{ADDRESS_TYPE}      /* 주소구분   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'ZIP_CODE')">
           ,   ZIP_CODE      = #{ZIP_CODE}      /* 우편번호   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'ADDR1')">
           ,   ADDR1         = #{ADDR1}      /* 주소1      */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'ADDR2')">
           ,   ADDR2         = #{ADDR2}      /* 주소2      */
           </if>
           <if test="@foren.Ognl@isExists(_parameter, 'CASH_RECEIPT_AUTO_YN')">
           ,   CASH_RECEIPT_AUTO_YN   = #{CASH_RECEIPT_AUTO_YN}      /* 현금영수증 자동발급 여부      */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'CASH_MEMBER_NO')">
           ,   CASH_MEMBER_NO       = #{CASH_MEMBER_NO}      /* 현금영수증 거래사 발행번호      */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'BANK_CODE')">
           ,   BANK_CODE      = #{BANK_CODE}      /* 은행코드   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'MEMBER_YN')">
           ,   MEMBER_YN      = #{MEMBER_YN}      /* 조합원여부   */
           </if>
           <if test="@foren.Ognl@isExists(_parameter, 'GRADUATE_YN')">
           ,   GRADUATE_YN      = #{GRADUATE_YN}      /* 졸업여부   */
           </if>
           <if test="@foren.Ognl@isExists(_parameter, 'GRADUATE_DATE')">
           ,   GRADUATE_DATE      = #{GRADUATE_DATE}      /* 졸업일자   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'REPAYMENT_YN')">
           ,   REPAYMENT_YN   = #{REPAYMENT_YN}      /* 반환여부   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'REPAYMENT_DATE')">
           ,   REPAYMENT_DATE   = #{REPAYMENT_DATE}      /* 반환일자   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'MEMBER_LEVEL')">
           ,   MEMBER_LEVEL   = #{MEMBER_LEVEL}      /* 회원등급   */
           </if>
            <if test="@foren.Ognl@isExists(_parameter, 'PURCHASE_LEVEL')">
           ,   PURCHASE_LEVEL   = #{PURCHASE_LEVEL}      /* 구매등급   */
           </if>
            , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = getDate()
             
      WHERE   COOPTOR_ID  = #{COOPTOR_ID}
         AND COMP_CODE   = #{COMP_CODE}
      
   </update>
   
   <delete id="cpa100ukrvService.deleteDetail" parameterType="Map">
      BEGIN
         DELETE FROM CPA100T
         WHERE    COMP_CODE   = #{COMP_CODE}
           AND    COOPTOR_ID  = #{COOPTOR_ID}
      END     
   </delete>
   
   <select id="cpa100ukrvService.checkCompCode" parameterType="Map" resultType="rMap">
          SELECT A.COMP_CODE, A.COMP_NAME
          FROM              BOR100T   A  WITH (NOLOCK)
                 LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                                      AND M1.MAIN_CODE    = 'B107'
                                                      AND M1.SUB_CODE     = '20'         
          WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
             OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
   </select>
   
   <select id="cpa100ukrvService.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 */
   		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
		    SELECT _EXCEL_JOBID
				, A._EXCEL_ROWNUM
				, A._EXCEL_HAS_ERROR
				, A._EXCEL_ERROR_MSG
				, A.COOPTOR_ID
				, A.COOPTOR_NAME
				, A.COOPTOR_TYPE
				, A.UNIV_NUMB
				, uniLITE.fnGetUserDate(COMP_CODE, A.START_DATE)AS START_DATE 
				, A.BANK_NAME
				, B.CUSTOM_CODE  AS BANK_CODE
				, unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B')	AS BANKBOOK_NUM
				, A.INVEST_CNT
				, A.INVEST_AMT

				
			 FROM  CPA101T  A WITH(NOLOCK)
			 LEFT OUTER JOIN BCM100T B WITH(NOLOCK) ON A.BANK_NAME = B.CUSTOM_NAME
		    
		     WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
			 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
			 
			SET NOCOUNT OFF
           SET ARITHABORT OFF
      END
    </select>
    
	<insert id="cpa100ukrvService.insertExcelCpa101t" parameterType="Map">		/* 엑셀insert */
    	/*cpa100ukrvService.insertExcelCpa101t*/
    	INSERT INTO CPA101T
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, 
    		 COOPTOR_ID, UNIV_NUMB, COOPTOR_NAME, COOPTOR_TYPE, INVEST_CNT, INVEST_AMT, START_DATE, BANK_NAME,  BANKBOOK_NUM 
    		 )
    	VALUES (
    		#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, 
    		#{COOPTOR_ID}, #{UNIV_NUMB}, #{COOPTOR_NAME}, #{COOPTOR_TYPE}, #{INVEST_CNT}, #{INVEST_AMT}, #{START_DATE}, #{BANK_NAME}, uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM},'')
			 )
    </insert>


   <update id="cpa100ukrvService.excelValidate" >
	UPDATE    A
 
	 SET       A._EXCEL_HAS_ERROR = (CASE WHEN A.COOPTOR_ID IS NULL OR ISNULL(A.COOPTOR_ID,'') = ''  THEN 'Y'
	           							  WHEN B.COOPTOR_ID IS NOT NULL         THEN 'Y'
	         						 ELSE A._EXCEL_HAS_ERROR 
	         						 END),
	            
	     A._EXCEL_ERROR_MSG = (CASE WHEN A.COOPTOR_ID IS NULL OR ISNULL(A.COOPTOR_ID,'') = ''  THEN ISNULL(_EXCEL_ERROR_MSG,'') + '조합원에 대한 조합원ID가 존재하지 않습니다. '
	           						WHEN B.COOPTOR_ID IS NOT NULL         THEN ISNULL(_EXCEL_ERROR_MSG,'') + '등록되어 있는 조합원 정보입니다.. '
	         				   ELSE A._EXCEL_ERROR_MSG 
	         				   END)    
	 FROM CPA101T A
	 LEFT OUTER JOIN CPA100T B ON A.COOPTOR_ID = B.COOPTOR_ID
	 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	
	<select id="cpa100ukrvService.selectExcelUploadSheet2" parameterType="Map" resultType="rMap">	/* 엑셀업로드 */
   		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
		    SELECT _EXCEL_JOBID
				, A._EXCEL_ROWNUM
				, A._EXCEL_HAS_ERROR
				, A._EXCEL_ERROR_MSG
				, A.COOPTOR_ID
				, A.UNIV_NUMB
				, A.GRADUATE_YN
				, A.GRADUATE_DATE 
				, A.REPAYMENT_YN
				, A.REPAYMENT_DATE
				, B.CUSTOM_CODE  AS BANK_CODE 
				, A.BANK_NAME
				, uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM,'B') AS BANKBOOK_NUM
				, A.MEMBER_YN
				, A.OPR_FLAG

				
			 FROM  CPA102T  A WITH(NOLOCK)
			 
   LEFT OUTER JOIN BCM100T B WITH(NOLOCK) ON A.BANK_NAME = B.CUSTOM_NAME
		     WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
			 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
			 
			SET NOCOUNT OFF
           SET ARITHABORT OFF
      END
    </select>
	
	<insert id="cpa100ukrvService.insertExcelCpa102t" parameterType="Map">		/* 엑셀insert */
    	/*cpa100ukrvService.insertExcelCpa102t*/
    	INSERT INTO CPA102T
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, 
    		 COOPTOR_ID, UNIV_NUMB, REPAYMENT_YN, REPAYMENT_DATE, BANK_NAME, BANKBOOK_NUM, GRADUATE_YN, GRADUATE_DATE, MEMBER_YN, OPR_FLAG
    		 )
    	VALUES (
    		#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, 
    		#{COOPTOR_ID}, #{UNIV_NUMB}, (CASE WHEN ISNULL(#{REPAYMENT_DATE}, '') = '' THEN 'N' ELSE 'Y' END), #{REPAYMENT_DATE}, #{BANK_NAME}, uniLITE.fnCipherEncrypt(#{BANKBOOK_NUM},''), 'Y', #{GRADUATE_DATE}, #{MEMBER_YN}, 'U'
			 )
    </insert>


   <update id="cpa100ukrvService.excelValidate2" >
	UPDATE    A
	
	SET       A._EXCEL_HAS_ERROR = (CASE WHEN A.COOPTOR_ID IS NULL OR ISNULL(A.COOPTOR_ID,'') = '' 	THEN 'Y'
										 WHEN B.COOPTOR_ID IS NULL         THEN 'Y'
										 WHEN ISNULL(A.BANK_NAME,'') = ''		   THEN 'Y'
										 WHEN ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM,'B'),'') = ''   THEN 'Y'
								    ELSE A._EXCEL_HAS_ERROR 
							        END),
							     
			  A._EXCEL_ERROR_MSG = (CASE WHEN A.COOPTOR_ID IS NULL OR ISNULL(A.COOPTOR_ID,'') = ''     THEN ISNULL(_EXCEL_ERROR_MSG,'') + '조합원에 대한 조합원ID가 존재하지 않습니다. '
			  							 WHEN B.COOPTOR_ID IS NULL         THEN ISNULL(_EXCEL_ERROR_MSG,'') + '등록되어 있지 않은 조합원 정보입니다.. '
			  							 WHEN ISNULL(A.BANK_NAME,'') = ''         THEN ISNULL(_EXCEL_ERROR_MSG,'') + '은행명이 입력되지 않았습니다..'
			  							 WHEN ISNULL(unilite.fnCipherDecrypt(A.BANKBOOK_NUM,'B'),'') = ''        THEN ISNULL(_EXCEL_ERROR_MSG,'') + '계좌번호가 입력되지 않았습니다..'
								    ELSE A._EXCEL_ERROR_MSG 
								    END)
			  
	     	      				 			 
	FROM CPA102T A
	LEFT OUTER JOIN CPA100T B ON A.COOPTOR_ID = B.COOPTOR_ID
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	
	<select id="cpa100ukrvService.selectExcelUpload2" parameterType="Map" resultType="rMap">	/* 엑셀업로드2 */
    SELECT 
            A.COMP_CODE                                                             /* 법인코드      */
         ,  A.COOPTOR_ID                                                            /* 조합원 ID    */
         ,  A.COOPTOR_NAME                                                          /* 조합원명      */
         ,  A.INVEST_CNT                                                            /* 출자구좌수   */
         ,  A.COOPTOR_TYPE                                                          /* 조합원구분       */
         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)AS START_DATE           /* 시작(가입)일자 */
         ,  ISNULL(A.BANK_CODE, D.CUSTOM_CODE)                  AS BANK_CODE        /* 은행코드   */
         ,  ISNULL(B.CUSTOM_NAME, D.CUSTOM_NAME)                AS BANK_NAME        /* 은행명 */
         ,  unilite.fnCipherDecrypt(C.BANKBOOK_NUM, 'B')        AS BANKBOOK_NUM     /* 계좌번호   */
         ,  C.GRADUATE_YN                                                           /* 졸업여부  */
         ,  uniLITE.fnGetUserDate(A.COMP_CODE, C.GRADUATE_DATE) AS GRADUATE_DATE    /* 졸업일자  */
         ,  C.REPAYMENT_YN                                                          /* 반환여부  */
         ,  uniLITE.fnGetUserDate(A.COMP_CODE, C.REPAYMENT_DATE) AS REPAYMENT_DATE  /* 반환일자   */
         
         
         ,  A.UNIV_NUMB                                                             /* 학번          */
         ,  A.CELL_PHONE                                                            /* 핸드폰번호    */
         ,  A.DEPT_NAME1                                                            /* 소속1(대학,처)*/
         ,  A.DEPT_NAME2                                                            /* 소속2(과,팀)*/
         ,  A.GENDER                                                                /* 성별      */
         ,  A.ADDRESS_TYPE                                                          /* 주소구분   */
         , (SUBSTRING(A.ZIP_CODE, 1, 3) + '-' +
            SUBSTRING(A.ZIP_CODE, 4, 3)) AS ZIP_CODE                                /* 우편번호   */
         ,  A.ADDR1                                                                 /* 기본주소      */
         ,  A.ADDR2                                                                 /* 상세주소      */
         ,  A.MEMBER_YN                                                             /* 조합원여부   */
         ,  A.INVEST_AMT                                                            /* 출자금액   */
         ,  A.DIVID_CNT                                                             /* 배당회수 */
         ,  A.REPAYMENT_AMT                                                         /* 반환금액   */
         ,  A.TOT_POINT                                                             /* 현재포인트(총포인트)*/
         ,  A.INVEST_POINT                                                          /* 출자포인트 */
         ,  A.ADD_POINT                                                             /* 누적포인트 */
         ,  A.USE_POINT                                                             /* 사용포인트 */
         ,  A.MEMBER_LEVEL                                                          /* 회원등급   */
         ,  A.PURCHASE_LEVEL                                                        /* 구매등급   */
         ,  A.REMARK                                                                /* 비고      */
         
         ,  A.PASSWORD                                                              /*비밀번호*/
            /*2015.05.21 추가 */
         ,  A.CASH_MEMBER_NO                                                        /* 현금영수증 거래시 발행번호 */
         ,  A.CASH_RECEIPT_AUTO_YN                                                  /* 현금영수증 자동 발급 여부 */
         ,  C.COOPTOR_ID
         ,  C._EXCEL_JOBID
         ,  C.OPR_FLAG
    FROM               CPA102T C WITH (NOLOCK)
            INNER JOIN CPA100T A WITH (NOLOCK) ON A.COOPTOR_ID  = C.COOPTOR_ID
            LEFT  JOIN BCM100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                              AND A.BANK_CODE   = B.CUSTOM_CODE 
            LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                              AND D.CUSTOM_NAME = C.BANK_NAME
	WHERE   C._EXCEL_JOBID = #{_EXCEL_JOBID}
	ORDER   BY C._EXCEL_JOBID, C._EXCEL_ROWNUM
    </select>
   
</mapper>