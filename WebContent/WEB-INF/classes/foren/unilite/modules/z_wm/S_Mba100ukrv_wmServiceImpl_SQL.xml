<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mba100ukrv_wmServiceImpl">
<!-- 20201022 추가: 동적 그리드 구현(공통코드(Q011)에서 컬럼 가져오는 로직) -->
	<select id="s_mba100ukrv_wmServiceImpl.selectColumns" parameterType="Map" resultType="rMap">
		/* s_mba100ukrv_wmServiceImpl.selectColumns */
		SELECT A.SUB_CODE
		     , A.CODE_NAME
		  FROM BSA100T A WITH(NOLOCK)
		 WHERE COMP_CODE  = '${compCode}'
		   AND MAIN_CODE  = 'Q011'
		   AND SUB_CODE  != '$'
		   AND USE_YN     = 'Y'
		 ORDER BY A.SORT_SEQ, A.SUB_CODE
	</select>

<!-- 조회 -->
	<select id="s_mba100ukrv_wmServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* s_mba100ukrv_wmServiceImpl.selectList1 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
<!-- 20210113 수정: 고객명(전화번호 끝 4자리)로 변경 -->
		     , A.CUSTOM_PRSN + '(' + RIGHT(A.PHONE_NUM, 4) + ')' AS CUSTOM_PRSN
		     , A.PRICE_TYPE
		     , B.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , B.ORDER_UNIT
		     , B.INSTOCK_Q
		     , B.CONTROL_STATUS
		     , B.RECEIPT_NUM
		     , B.RECEIPT_SEQ
		     , A.RECEIPT_DATE
		     , ISNULL(B.CONFIRM_YN, 1)                           AS CONFIRM_YN
		     , B.CONFIRM_DATE
		     , B.CONFIRM_PRSN
		     , X.INSPEC_NUM            --20201022 추가
		     , A.ORDER_PRSN            --20201022 추가
		  FROM       S_MPO010T_WM A  WITH(NOLOCK)
		  LEFT  JOIN S_MPO020T_WM B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.DIV_CODE     = A.DIV_CODE
		                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  LEFT  JOIN BPR100T      C2 WITH(NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                         AND C2.ITEM_CODE   = B.ITEM_CODE
		  INNER JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.BASIS_NUM, MAX(B.INSPEC_DATE) AS INSPEC_DATE, MAX(B.INSPEC_NUM) AS INSPEC_NUM --20201022 추가: INSPEC_NUM --, A.BASIS_SEQ
		                FROM        QMS100T A WITH(NOLOCK)
		                INNER JOIN (SELECT COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ, MAX(INSPEC_DATE) AS INSPEC_DATE, MAX(INSPEC_NUM) AS INSPEC_NUM --20201022 추가: INSPEC_NUM
		                              FROM QMS200T WITH(NOLOCK)
		                             WHERE COMP_CODE = #{S_COMP_CODE}
		                               AND DIV_CODE  = #{DIV_CODE}
		                             GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ) B ON B.COMP_CODE   = A.COMP_CODE
		                                                                                      AND B.DIV_CODE    = A.DIV_CODE
		                                                                                      AND B.RECEIPT_NUM = A.RECEIPT_NUM
		                                                                                      AND B.RECEIPT_SEQ = A.RECEIPT_SEQ
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.BASIS_NUM) X ON X.COMP_CODE = B.COMP_CODE
		                                                                 AND X.DIV_CODE  = B.DIV_CODE
		                                                                 AND X.BASIS_NUM = B.RECEIPT_NUM
		                                                                 --AND X.BASIS_SEQ = B.RECEIPT_SEQ
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE  LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME} + '%'
		</if>
<!-- 20210113 수정: 전체 검색으로 변경 -->
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND A.CUSTOM_PRSN   LIKE '%' + #{CUSTOM_PRSN} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		   AND X.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		   AND X.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(rdoSelect)">
		   AND ISNULL(B.CONFIRM_YN, 1) = #{rdoSelect}
		</if>
<!-- 20201022 추가: INSPEC_NUM, ORDER_PRSN -->
		<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		   AND X.INSPEC_NUM  LIKE #{INSPEC_NUM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND A.ORDER_PRSN  = #{ORDER_PRSN}
		</if>
	</select>

	<select id="s_mba100ukrv_wmServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* s_mba100ukrv_wmServiceImpl.selectList2 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.INSPEC_NUM
		     , A.INSPEC_SEQ
		     , A.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , A.ORDER_UNIT
		     , A.GOOD_INSPEC_Q
		     , B.RECEIPT_P
		     , B.RECEIPT_O
		     , A.BAD_INSPEC_Q
		     , B.BAD_RECEIPT_P  --20210204 추가
		     , B.BAD_RECEIPT_O  --20210204 추가
		     , C.RECEIPT_NUM
		     , C.RECEIPT_SEQ
		     , D.RECEIPT_DATE
		     , C.CONFIRM_YN
		     , C.CONFIRM_DATE
		     , C.CONFIRM_PRSN
		     , ISNULL(C.CONFIRM_YN, 1) AS CONFIRM_YN
		     --단가계산용
		     , C.MONEY_UNIT
<!-- 20201022 추가: 검사등록 시 보이는 REMARK 표시 -->
		     , A.REMARK
<!-- 20201022 추가: 동적 컬럼 데이터 조회 -->
		<foreach collection="badQtyArray" item="item" separator="" close="" open="">
		     , Z1.${item}
		</foreach>
		  FROM       QMS200T      A  WITH(NOLOCK)
		  INNER JOIN QMS100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.DIV_CODE     = A.DIV_CODE
		                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                                         AND B.RECEIPT_SEQ  = A.RECEIPT_SEQ
		  INNER JOIN S_MPO020T_WM C  WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                         AND C.DIV_CODE     = B.DIV_CODE
		                                         AND C.RECEIPT_NUM  = B.BASIS_NUM
		                                         AND C.RECEIPT_SEQ  = B.BASIS_SEQ
		  INNER JOIN S_MPO010T_WM D  WITH(NOLOCK) ON D.COMP_CODE    = C.COMP_CODE
		                                         AND D.DIV_CODE     = C.DIV_CODE
		                                         AND D.RECEIPT_NUM  = C.RECEIPT_NUM
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  INNER JOIN BPR100T      C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                         AND C2.ITEM_CODE   = A.ITEM_CODE
		  LEFT  JOIN (
		                SELECT COMP_CODE
		                     , DIV_CODE
		                     , INSPEC_NUM
		                     , INSPEC_SEQ
<!-- 20201022 추가: 동적 컬럼 데이터 조회 -->
		<foreach collection="badQtyArray2" item="item" separator="" close="" open="">
		                     , SUM([${item}]) AS BAD_${item}
		</foreach>
		                  FROM QMS210T WITH(NOLOCK)
		                  PIVOT (
		                         SUM(BAD_INSPEC_Q) FOR BAD_INSPEC_CODE IN (
<!-- 20201022 추가: 동적 컬럼 데이터 조회 -->
		<foreach collection="badQtyArray2" item="item" separator="," close="" open="">
		                                                                   [${item}]
		</foreach>
		                         )
		                  ) AS PVT
		                 WHERE COMP_CODE = #{S_COMP_CODE}
		                   AND DIV_CODE  = #{DIV_CODE}
		                GROUP BY COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ) Z1 ON Z1.COMP_CODE   = A.COMP_CODE
		                                                                        AND Z1.DIV_CODE    = A.DIV_CODE
		                                                                        AND Z1.INSPEC_NUM  = A.INSPEC_NUM
		                                                                        AND Z1.INSPEC_SEQ  = A.INSPEC_SEQ

		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE  LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND C.CUSTOM_PRSN  LIKE #{CUSTOM_PRSN} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		   AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		   AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(rdoSelect)">
		   AND ISNULL(C.CONFIRM_YN, 1) = #{rdoSelect}
		</if>
<!-- 20201022 추가: INSPEC_NUM, ORDER_PRSN -->
		<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		   AND A.INSPEC_NUM  LIKE #{INSPEC_NUM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND D.ORDER_PRSN  = #{ORDER_PRSN}
		</if>
	</select>



<!-- 저장로직 -->
	<update id="s_mba100ukrv_wmServiceImpl.updateList1" parameterType="Map">
		/* s_mba100ukrv_wmServiceImpl.updateList1 */
		UPDATE S_MPO010T_WM
		   SET PRICE_TYPE     = #{PRICE_TYPE}
		     , ORDER_PRSN     = #{ORDER_PRSN}     --20201022 추가
		     , UPDATE_DB_TIME = GETDATE()
		     , UPDATE_DB_USER = #{S_USER_ID}
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>

	<update id="s_mba100ukrv_wmServiceImpl.updateList2" parameterType="Map">
		/* s_mba100ukrv_wmServiceImpl.updateList2 */
		UPDATE B
		   SET RECEIPT_P      = #{RECEIPT_P}
		     , RECEIPT_O      = #{RECEIPT_O}
		     , BAD_RECEIPT_P  = #{BAD_RECEIPT_P}  --20210204 추가
		     , BAD_RECEIPT_O  = #{BAD_RECEIPT_O}  --20210204 추가
		     , UPDATE_DB_TIME = GETDATE()
		     , UPDATE_DB_USER = #{S_USER_ID}
		  FROM       QMS200T      A  WITH(NOLOCK)
		  INNER JOIN QMS100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.DIV_CODE     = A.DIV_CODE
		                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                                         AND B.RECEIPT_SEQ  = A.RECEIPT_SEQ
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		   AND A.INSPEC_NUM   = #{INSPEC_NUM}
		   AND A.INSPEC_SEQ   = #{INSPEC_SEQ}
	</update>



<!-- 매입단가 가져오는 로직 -->
	<select id="s_mba100ukrv_wmServiceImpl.getBasicP" parameterType="Map" resultType="double">
		/* s_mba100ukrv_wmServiceImpl.getBasicP */
		SELECT ITEM_P
		  FROM BPR400T WITH(NOLOCK)
		 WHERE COMP_CODE        = #{S_COMP_CODE}
		   AND TYPE             = #{TYPE}
		   AND DIV_CODE         = #{DIV_CODE}
		   AND ITEM_CODE        = #{ITEM_CODE}
		   AND CUSTOM_CODE      = '*'
		   AND MONEY_UNIT       = #{MONEY_UNIT}
		   AND ORDER_UNIT       = #{ORDER_UNIT}
		   AND CONVERT(NVARCHAR(08), #{RECEIPT_DATE}, 112) BETWEEN APLY_START_DATE AND APLY_END_DATE
	</select>




<!-- 확정 -->
	<update id="s_mba100ukrv_wmServiceImpl.confirmY" parameterType="Map">
		/* s_mba100ukrv_wmServiceImpl.confirmY */
		UPDATE S_MPO020T_WM
		   SET CONFIRM_YN     = '2'
		     , CONFIRM_DATE   = CONVERT(NVARCHAR(08), GETDATE(), 112)
		     , CONFIRM_PRSN   = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</update>
<!-- 미확정 -->
	<update id="s_mba100ukrv_wmServiceImpl.confirmN" parameterType="Map">
		/* s_mba100ukrv_wmServiceImpl.confirmN */
		UPDATE S_MPO020T_WM
		   SET CONFIRM_YN     = '1'
		     , CONFIRM_DATE   = ''
		     , CONFIRM_PRSN   = ''
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</update>
</mapper>