<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mpo015ukrv_wmServiceImpl">
<!-- 20201016 추가: 사용자 서명 조회 -->
	<select id="s_mpo015ukrv_wmServiceImpl.getUserSign" parameterType="Map" resultType="rMap">
		/* s_bsa315ukrv_wmServiceImpl.getUserSign */
		SELECT ISNULL(A.USER_SIGN, '') AS USER_SIGN
		  FROM BSA300T A WITH(NOLOCK)
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.USER_ID   = #{S_USER_ID}
	</select>



<!-- 조회 팝업 쿼리 -->
	<select id="s_mpo015ukrv_wmServiceImpl.searchPopupList" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.searchPopupList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.ORDER_PRSN
		     , A.CUSTOM_PRSN
		     , A.RECEIPT_TYPE
		     , A.RECEIPT_PRSN
		     , A.RECEIPT_DATE
		     , A.WH_CODE
		     , A.PRICE_TYPE
		     , A.PHONE_NUM
		     , A.E_MAIL
		     , A.BANK_NAME
		     , A.BANK_ACCOUNT
		     , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANK_ACCOUNT, ''), '') = '' THEN ''
		            ELSE '***************'
		       END                                           AS BANK_ACCOUNT_EXPOS
		     , A.ADDR
		     , A.HOME_TITLE
		     , A.HOME_REMARK
		     , A.REMARK
		     , A.REPRE_NUM
		     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')    AS REPRE_NUM_EXPOS
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , A.TO_PRSN
		     , A.MAIL_CONTENTS
		     , A.AGREE_STATUS
		     , A.AGREE_PRSN
		     , A.AGREE_DATE
		     , A.HOME_PURCHAS_NO
		     , A.CUSTOM_PRSN
		  FROM       S_MPO015T_WM A  WITH(NOLOCK)
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.DIV_CODE      = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(FR_RECEIPT_DATE)">
		   AND A.RECEIPT_DATE &gt;= #{FR_RECEIPT_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_RECEIPT_DATE)">
		   AND A.RECEIPT_DATE &lt;= #{TO_RECEIPT_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND A.ORDER_PRSN    = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C.CUSTOM_NAME   LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND A.CUSTOM_PRSN   LIKE #{CUSTOM_PRSN} + '%'
		</if>
		
	</select>

<!-- 조회(master) 쿼리 -->
	<select id="s_mpo015ukrv_wmServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.selectMaster */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.CUSTOM_PRSN
		     , A.ORDER_PRSN
		     , A.RECEIPT_TYPE
		     , A.RECEIPT_PRSN
		     , A.RECEIPT_DATE
		     , A.WH_CODE
		     , A.PRICE_TYPE
		     , A.PHONE_NUM
		     , A.E_MAIL
		     , A.BANK_NAME
		     , A.BANK_ACCOUNT
		     , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANK_ACCOUNT, ''), '') = '' THEN ''
		            ELSE '***************'
		       END                                           AS BANK_ACCOUNT_EXPOS
		     , A.ADDR
		     , A.HOME_TITLE
		     , A.HOME_REMARK
		     , A.REMARK
		     , A.REPRE_NUM
		     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')    AS REPRE_NUM_EXPOS
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , A.TO_PRSN
		     , A.MAIL_CONTENTS
		     , A.AGREE_STATUS
		     , A.AGREE_PRSN
		     , A.AGREE_DATE
		     , A.HOME_PURCHAS_NO
		     , A.TAX_INOUT         --20210526 추가
		     , A.AUTOIN_YN         --20210603 추가
		  FROM      S_MPO015T_WM A  WITH(NOLOCK)
		  LEFT JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                        AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>

<!-- 조회(detail) 쿼리 -->
	<select id="s_mpo015ukrv_wmServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.RECEIPT_SEQ
		     , A.ITEM_CODE
		     , B1.ITEM_NAME
		     , B2.SPEC
		     , A.ORDER_UNIT
		     , A.RECEIPT_Q
		     , A.RECEIPT_P
		     , A.RECEIPT_O
		     --20210419 추가
		     , A.GOOD_RECEIPT_Q
		     , A.GOOD_RECEIPT_P
		     , A.GOOD_RECEIPT_O
		     , A.BAD_RECEIPT_Q
		     , A.BAD_RECEIPT_P
		     , A.BAD_RECEIPT_O
		     --20210419 여기까지
		     , A.DVRY_DATE
		     , A.INSTOCK_Q
		     , A.ARRIVAL_DATE
		     , A.ARRIVAL_PRSN
		     , A.CONTROL_STATUS
		     , A.REMARK
		     , A.CUSTOM_PRSN
		     , A.REPRE_NUM
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , ISNULL(B.AGREE_STATUS, '1') AS AGREE_STATUS
		     , A.PRICE_YN
		     , A.ITEM_STATUS
		     , A.INSTOCK_Q
		     , A.IN_WH_CODE       --20210526 추가
		     , A.IN_WH_CELL_CODE  --20210526 추가
		  FROM      S_MPO025T_WM A  WITH(NOLOCK)
		  LEFT JOIN S_MPO015T_WM B  WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                        AND B.DIV_CODE    = A.DIV_CODE
		                                        AND B.RECEIPT_NUM = A.RECEIPT_NUM
		  LEFT JOIN BPR200T      B1 WITH(NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                        AND B1.DIV_CODE   = A.DIV_CODE
		                                        AND B1.ITEM_CODE  = A.ITEM_CODE
		  LEFT JOIN BPR100T      B2 WITH(NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
		                                        AND B2.ITEM_CODE  = A.ITEM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>



<!-- 매입요청 참조(홈페이지 데이터 - MARIA DB) 데이터 가져오는 로직 - 20200923 추가, 20201006 등록된 데이터 제외하는 로직 추가로 수정 -->
	<select id="s_mpo015ukrv_wmServiceImpl.requestRefPopupList" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.requestRefPopupList: 20210202 수정 - 담당자 답변 내용 가져와서(답변 수대로) 내용에 추가하여 보이도록 수정 */
		DECLARE @PURCHAS_NO TABLE( 
		        puchas_no      NUMERIC(10, 0)  NULL,
		        category       NVARCHAR(4000)  NULL,
		        CUSTOM_PRSN    NVARCHAR(4000)  NULL,
		        E_MAIL         NVARCHAR(4000)  NULL,
		        HOME_TITLE     NVARCHAR(4000)  NULL,
		        HOME_REMARK    NVARCHAR(MAX)   NULL,
		        id             NVARCHAR(4000)  NULL,
		        pwd            NVARCHAR(4000)  NULL,
		        notice_yn      NVARCHAR(4000)  NULL,
		        PHONE_NUM      NVARCHAR(4000)  NULL,
		        sms_yn         NVARCHAR(4000)  NULL,
		        BANK_NAME      NVARCHAR(4000)  NULL,
		        BANK_ACCOUNT   NVARCHAR(4000)  NULL,
		        ADDR           NVARCHAR(4000)  NULL,
		        read_cnt       NUMERIC(10, 0)  NULL,
		        RECEIPT_DATE   NVARCHAR(1000)  NULL,
		        updt_date      NVARCHAR(1000)  NULL,
		        puchas_cmnt_no NUMERIC(10, 0)  NULL,  --20210202 추가
		        RE_NAME        NVARCHAR(1000)  NULL,  --20210202 추가
		        RE_DATE        NVARCHAR(1000)  NULL,  --20210202 추가
		        RE_CONTENT     NVARCHAR(MAX)   NULL   --20210202 추가
		);

		DECLARE @CUSTOM_PRSN       NVARCHAR(100)
		      , @PHONE_NUM         NVARCHAR(100)
		      , @FR_RECEIPT_DATE   NVARCHAR(100)
		      , @TO_RECEIPT_DATE   NVARCHAR(100)
		      , @SQLStmt           NVARCHAR(2000)

		SET     @CUSTOM_PRSN     = #{CUSTOM_PRSN}
		SET     @PHONE_NUM       = #{TELEPHONE}
		SET     @FR_RECEIPT_DATE = #{FR_RECEIPT_DATE}
		SET     @TO_RECEIPT_DATE = #{TO_RECEIPT_DATE}

		--20201106 수정: 암호해제로직 추가 (암호화 키: applepineapple), 20210202 수정: 답변 추가
		SET     @SQLStmt   = 'select * from openquery (WORLDMEMORY, ''SELECT A.puchas_no, A.category, CONVERT(AES_DECRYPT(A.name,''''applepineapple'''')using UTF8) AS CUSTOM_PRSN, CONVERT(AES_DECRYPT(A.email,''''applepineapple'''')using UTF8) AS E_MAIL, A.subject AS HOME_TITLE, A.content AS HOME_REMARK, A.id, A.pwd, A.notice_yn, A.tel_no AS PHONE_NUM, A.sms_yn, A.bank_nm AS BANK_NAME, A.acct_no AS BANK_ACCOUNT, A.addr AS ADDR, A.read_cnt, A.reg_date AS RECEIPT_DATE, A.updt_date, B.puchas_cmnt_no, CONVERT(AES_DECRYPT(B.name,''''applepineapple'''')using UTF8) AS RE_NAME, B.reg_date AS RE_DATE, B.content AS RE_CONTENT FROM worldmemory.purchase A LEFT JOIN worldmemory.purchasecomment B on B.puchas_no = A.puchas_no WHERE 1=1'
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		SET     @SQLStmt   = @SQLStmt + ' AND CONVERT(AES_DECRYPT(A.name,''''applepineapple'''')using UTF8) LIKE ' + '''''' + @CUSTOM_PRSN + '%' + ''''''  --20210115 수정: 암호화 해제로직 추가하여 비교하도록 수정
		</if>
		<if test="@foren.Ognl@isNotEmpty(TELEPHONE)">
		SET     @SQLStmt   = @SQLStmt + ' AND A.tel_no LIKE ' + '''''' + @PHONE_NUM + '%' + ''''''
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_RECEIPT_DATE)">
		SET     @SQLStmt   = @SQLStmt + ' AND DATE_FORMAT(A.reg_date,''''%Y%m%d'''') &gt;= ' + '''''' + @FR_RECEIPT_DATE + ''''''
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_RECEIPT_DATE)">
		SET     @SQLStmt   = @SQLStmt + ' AND DATE_FORMAT(A.reg_date,''''%Y%m%d'''') &lt;= ' + '''''' + @TO_RECEIPT_DATE + ''''''
		</if>
		SET     @SQLStmt   = @SQLStmt + ''')'

		INSERT INTO @PURCHAS_NO
		EXEC SP_EXECUTESQL @SQLStmt


		DECLARE @puchas_no      NUMERIC(10, 0),
		        @puchas_cmnt_no NUMERIC(10, 0),  --20210202 추가
		        @RE_NAME        NVARCHAR(1000),  --20210202 추가
		        @RE_DATE        NVARCHAR(1000),  --20210202 추가
		        @RE_CONTENT     NVARCHAR(MAX)    --20210202 추가

		DECLARE requestRefData CURSOR FOR
		    SELECT puchas_no
		         , puchas_cmnt_no
		         , RE_NAME
		         , RE_DATE
		         , RE_CONTENT
		      FROM @PURCHAS_NO
		     --WHERE ISNULL(puchas_cmnt_no, '1') != '1' --20210208 주석

		OPEN requestRefData
		FETCH NEXT FROM requestRefData INTO @puchas_no, @puchas_cmnt_no, @RE_NAME, @RE_DATE, @RE_CONTENT

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
		    UPDATE @PURCHAS_NO
		       SET HOME_REMARK = HOME_REMARK + <![CDATA['<br><br>']]> + <![CDATA['<hr width="100%" color="green"/>']]>
		                                     + <![CDATA['<br><br>']]> + '답변자: ' + @RE_NAME + '  /  ' + '답변일자: ' + CONVERT(NVARCHAR(16), @RE_DATE)
		                                     + <![CDATA['<br><br>']]> + @RE_CONTENT
		     WHERE puchas_no = @puchas_no
		       AND ISNULL(puchas_cmnt_no, '1') = '1'

		    FETCH NEXT FROM requestRefData INTO @puchas_no, @puchas_cmnt_no, @RE_NAME, @RE_DATE, @RE_CONTENT
		END
		CLOSE requestRefData
		DEALLOCATE requestRefData

		SELECT puchas_no
		     , category
		     , CUSTOM_PRSN
		     , E_MAIL
		     , HOME_TITLE
		     , REPLACE(HOME_REMARK, 'src="/files', 'src="http://www.worldmemory.co.kr/files')  AS HOME_REMARK   --20210115 수정: 상대경로 -> 절대경로로 변경
		     , id
		     , pwd
		     , notice_yn
		     , PHONE_NUM
		     , sms_yn
		     --, LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1)                                  AS REPRE_NUM     --20210115 추가: 은행명 ',' 앞부분의 생년월일은 주민등록 번호에 set
		     , unilite.fnCipherEncrypt(LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1), '')     AS REPRE_NUM     --20210216 수정: 암호화
		     , CASE WHEN ISNULL(LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1), '') = '' THEN ''
		            ELSE '***************'
		       END                                                                             AS REPRE_NUM_EXPOS
		     , RIGHT(BANK_NAME, CHARINDEX(',', REVERSE(BANK_NAME)) - 1)                        AS BANK_NAME     --20210115 추가: 은행명 ',' 뒷부분의 은행명은 그대로 은행명에 set
		     --, BANK_ACCOUNT
		     , unilite.fnCipherEncrypt(BANK_ACCOUNT, '')                                       AS BANK_ACCOUNT  --20210216 수정: 암호화
		     , CASE WHEN ISNULL(BANK_ACCOUNT, '') = '' THEN ''
		            ELSE '***************'
		       END                                                                             AS BANK_ACCOUNT_EXPOS
		     , ADDR
		     , read_cnt
		     , RECEIPT_DATE
		     , updt_date
		     , puchas_cmnt_no
		     , RE_NAME
		     , RE_DATE
		     , RE_CONTENT
		  FROM @PURCHAS_NO
		 WHERE puchas_no NOT IN (
		                         SELECT HOME_PURCHAS_NO
		                           FROM S_MPO015T_WM WITH(NOLOCK)
		                          WHERE HOME_PURCHAS_NO != ''
		       )
		   AND ISNULL(puchas_cmnt_no, '1') = '1'
	</select>



<!-- 저장 로직(master) -->
	<select id="s_mpo015ukrv_wmServiceImpl.getReceiptNum" parameterType="Map" resultType="rMap">
		DECLARE @RECEIPT_NUM  NVARCHAR(20)

		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'S_MPO015T_WM', 'X', #{RECEIPT_DATE}, '1', @RECEIPT_NUM OUTPUT

		IF ISNULL(@RECEIPT_NUM, '') != ''
			SELECT @RECEIPT_NUM AS RECEIPT_NUM
		ELSE
			SELECT TOP 0 '' AS RECEIPT_NUM
	</select>

	<select id="s_mpo015ukrv_wmServiceImpl.checkControlStatus" parameterType="Map" resultType="int">
		/* s_mpo015ukrv_wmServiceImpl.checkControlStatus */
		SELECT TOP 1 1
		  FROM S_MPO025T_WM WITH(NOLOCK)
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND RECEIPT_NUM     = #{RECEIPT_NUM}
		   AND CONTROL_STATUS != 'A'
	</select>

	<update id="s_mpo015ukrv_wmServiceImpl.saveMaster" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.saveMaster */
		DECLARE @CUSTOM_CODE NVARCHAR(08)

		    SET @CUSTOM_CODE = #{CUSTOM_CODE}
		    SET @CUSTOM_CODE = CASE WHEN ISNULL(@CUSTOM_CODE, '') = '' THEN 'A00001'
		                            ELSE ISNULL(@CUSTOM_CODE, '')
		                       END

		MERGE INTO S_MPO015T_WM                         A
		USING ( SELECT #{S_COMP_CODE}  AS COMP_CODE
		             , #{DIV_CODE}     AS DIV_CODE
		             , #{RECEIPT_NUM}  AS RECEIPT_NUM
		      )                                         B   ON B.COMP_CODE   = A.COMP_CODE
		                                                   AND B.DIV_CODE    = A.DIV_CODE
		                                                   AND B.RECEIPT_NUM = A.RECEIPT_NUM
		WHEN MATCHED THEN
		UPDATE 
		   SET ORDER_PRSN     = #{ORDER_PRSN}
		     , CUSTOM_CODE    = @CUSTOM_CODE
		     , CUSTOM_PRSN    = #{CUSTOM_PRSN}
		     , RECEIPT_TYPE   = #{RECEIPT_TYPE}
		     , RECEIPT_PRSN   = #{RECEIPT_PRSN}
		     , RECEIPT_DATE   = #{RECEIPT_DATE}
		     , WH_CODE        = #{WH_CODE}
		     , PRICE_TYPE     = #{PRICE_TYPE}
		     , PHONE_NUM      = #{PHONE_NUM}
		     , E_MAIL         = #{E_MAIL}
		     , BANK_NAME      = #{BANK_NAME}
		     , BANK_ACCOUNT   = #{BANK_ACCOUNT}
		     , ADDR           = #{ADDR}
		     , HOME_TITLE     = #{HOME_TITLE}
		     , HOME_REMARK    = #{HOME_REMARK}
		     , REMARK         = #{REMARK}
		     , REPRE_NUM      = #{REPRE_NUM}
		     , MONEY_UNIT     = 'KRW'
		     , EXCHG_RATE_O   = 1
		     , HOME_PURCHAS_NO= #{HOME_PURCHAS_NO}
		     , AGREE_STATUS   = #{AGREE_STATUS}
		     , AUTOIN_YN      = #{AUTOIN_YN}           --자동입고여부 - 20210603 추가
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		          COMP_CODE
		        , DIV_CODE
		        , RECEIPT_NUM
		        , ORDER_PRSN
		        , CUSTOM_CODE
		        , CUSTOM_PRSN
		        , RECEIPT_TYPE
		        , RECEIPT_PRSN
		        , RECEIPT_DATE
		        , WH_CODE
		        , PRICE_TYPE
		        , PHONE_NUM
		        , E_MAIL
		        , BANK_NAME
		        , BANK_ACCOUNT
		        , ADDR
		        , HOME_TITLE
		        , HOME_REMARK
		        , REMARK
		        , REPRE_NUM
		        , MONEY_UNIT
		        , EXCHG_RATE_O
		        , HOME_PURCHAS_NO
		        , AGREE_STATUS
		        , TAX_INOUT         --20210526 추가
		        , AUTOIN_YN         --자동입고여부 - 20210603 추가
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		) VALUES (
		          #{S_COMP_CODE}
		        , #{DIV_CODE}
		        , #{RECEIPT_NUM}
		        , #{ORDER_PRSN}
		        , @CUSTOM_CODE
		        , #{CUSTOM_PRSN}
		        , #{RECEIPT_TYPE}
		        , #{RECEIPT_PRSN}
		        , #{RECEIPT_DATE}
		        , #{WH_CODE}
		        , #{PRICE_TYPE}
		        , #{PHONE_NUM}
		        , #{E_MAIL}
		        , #{BANK_NAME}
		        , #{BANK_ACCOUNT}
		        , #{ADDR}
		        , #{HOME_TITLE}
		        , #{HOME_REMARK}
		        , #{REMARK}
		        , #{REPRE_NUM}
		        , 'KRW'
		        , 1
		        , #{HOME_PURCHAS_NO}
		        , #{AGREE_STATUS}
		        , #{TAX_INOUT}      --20210526 추가
		        , #{AUTOIN_YN}      --자동입고여부 - 20210603 추가
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_USER_ID}
		        , GETDATE()
		);
	</update>

	<update id="s_mpo015ukrv_wmServiceImpl.deleteMaster" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.deleteMaster */
		DELETE FROM S_MPO015T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>

<!-- 저장 로직(detail) -->
	<insert id="s_mpo015ukrv_wmServiceImpl.insertDetail" parameterType="Map" useGeneratedKeys="false">
		/* s_mpo015ukrv_wmServiceImpl.insertList */
		INSERT INTO S_MPO025T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , RECEIPT_NUM
		     , RECEIPT_SEQ
		     , ITEM_CODE
		     , ORDER_UNIT
		     , RECEIPT_Q
		     , RECEIPT_P
		     , RECEIPT_O
		     --20210419 추가
		     , GOOD_RECEIPT_Q
		     , GOOD_RECEIPT_P
		     , GOOD_RECEIPT_O
		     , BAD_RECEIPT_Q
		     , BAD_RECEIPT_P
		     , BAD_RECEIPT_O
		     --20210419 여기까지
		     , DVRY_DATE
		     , INSTOCK_Q
		     , ARRIVAL_DATE
		     , ARRIVAL_PRSN
		     , CONTROL_STATUS
		     , REMARK
		     , CUSTOM_PRSN
		     , REPRE_NUM
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , ITEM_STATUS
		     , PRICE_YN
		     , IN_WH_CODE         --20210526 추가
		     , IN_WH_CELL_CODE    --20210526 추가
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{RECEIPT_NUM}
		     , #{RECEIPT_SEQ}
		     , #{ITEM_CODE}
		     , #{ORDER_UNIT}
		     , #{RECEIPT_Q}
		     , #{RECEIPT_P}
		     , #{RECEIPT_O}
		     --20210419 추가
		     , #{GOOD_RECEIPT_Q}
		     , #{GOOD_RECEIPT_P}
		     , #{GOOD_RECEIPT_O}
		     , #{BAD_RECEIPT_Q}
		     , #{BAD_RECEIPT_P}
		     , #{BAD_RECEIPT_O}
		     --20210419 여기까지
		     , #{DVRY_DATE}
		     , 0
		     , #{ARRIVAL_DATE}
		     , #{ARRIVAL_PRSN}
		     , #{CONTROL_STATUS}
		     , #{REMARK}
		     , #{CUSTOM_PRSN}
		     , #{REPRE_NUM}
		     , 'KRW'
		     , 1
		     , #{ITEM_STATUS}
		     , #{PRICE_YN}
		     , #{IN_WH_CODE}       --20210526 추가
		     , #{IN_WH_CELL_CODE}  --20210526 추가
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_mpo015ukrv_wmServiceImpl.updateDetail" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.updateList */
		UPDATE S_MPO025T_WM
		   SET ITEM_CODE       = #{ITEM_CODE}
		     , ORDER_UNIT      = #{ORDER_UNIT}
		     , RECEIPT_Q       = #{RECEIPT_Q}
		     , RECEIPT_P       = #{RECEIPT_P}
		     , RECEIPT_O       = #{RECEIPT_O}
		     --20210419 추가
		     , GOOD_RECEIPT_Q  = #{GOOD_RECEIPT_Q}
		     , GOOD_RECEIPT_P  = #{GOOD_RECEIPT_P}
		     , GOOD_RECEIPT_O  = #{GOOD_RECEIPT_O}
		     , BAD_RECEIPT_Q   = #{BAD_RECEIPT_Q}
		     , BAD_RECEIPT_P   = #{BAD_RECEIPT_P}
		     , BAD_RECEIPT_O   = #{BAD_RECEIPT_O}
		     --20210419 여기까지
		     , DVRY_DATE       = #{DVRY_DATE}
		     , ARRIVAL_DATE    = #{ARRIVAL_DATE}
		     , ARRIVAL_PRSN    = #{ARRIVAL_PRSN}
		     , CONTROL_STATUS  = #{CONTROL_STATUS}
		     , REMARK          = #{REMARK}
		     , CUSTOM_PRSN     = #{CUSTOM_PRSN}
		     , REPRE_NUM       = #{REPRE_NUM}
		     , MONEY_UNIT      = 'KRW'
		     , EXCHG_RATE_O    = 1
		     , ITEM_STATUS     = #{ITEM_STATUS}
		     , PRICE_YN        = #{PRICE_YN}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</update>

	<delete id="s_mpo015ukrv_wmServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM S_MPO025T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</delete>
	
	<select id="s_mpo015ukrv_wmServiceImpl.checkDetailData" parameterType="Map" resultType="int">
		SELECT COUNT(COMP_CODE)
		  FROM S_MPO025T_WM WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
	</select>

<!-- 전체삭제로직(detailAll) - 20210409 추가 -->
	<delete id="s_mpo015ukrv_wmServiceImpl.deleteAll" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.deleteAll */
		DELETE FROM S_MPO015T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}

		DELETE FROM S_MPO025T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</delete>



<!-- 단가 가져오는 로직 -->
	<select id="s_mpo015ukrv_wmServiceImpl.getUnitPrice" parameterType="Map" resultType="double">
		/* s_mpo015ukrv_wmServiceImpl.getUnitPrice */
		SELECT ITEM_P
		  FROM BPR400T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND TYPE       = #{PRICE_TYPE}
		   AND ITEM_CODE  = #{ITEM_CODE}
		   AND MONEY_UNIT = #{MONEY_UNIT}
		   AND ORDER_UNIT = #{ORDER_UNIT}
		   AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN APLY_START_DATE AND APLY_END_DATE
	</select>



<!-- 접수내역서 출력: 20210331 추가 -->
	<select id="s_mpo015ukrv_wmServiceImpl.printMasterData" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.printMasterData */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 데이터 조회 */
		    SELECT A.DIV_CODE
		         , A.RECEIPT_NUM
		         , A.RECEIPT_PRSN
		         , Z1.CODE_NAME                                     AS RECEIPT_PRSN_NM
		         , A.CUSTOM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
		                                     ELSE C.CUSTOM_NAME
		             END)                                           AS CUSTOM_NAME
		         , uniLite.fnGetUserdate(@CompCode, A.RECEIPT_DATE) AS RECEIPT_DATE
		         , A.CUSTOM_PRSN
		         , A.ORDER_PRSN
		         , Z2.CODE_NAME                                     AS ORDER_PRSN_NM
		         , A.PHONE_NUM
		      FROM       S_MPO015T_WM A  WITH(NOLOCK)
		      LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                             AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		      INNER JOIN BCM100T      C  WITH(NOLOCK) ON A.COMP_CODE    = C.COMP_CODE
		                                             AND A.CUSTOM_CODE  = C.CUSTOM_CODE
		      INNER JOIN BSA100T      Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                             AND Z1.MAIN_CODE   = 'B024'          --20210621 수정: ZM02 -> B024
		                                             AND Z1.SUB_CODE    = A.RECEIPT_PRSN
		      LEFT  JOIN BSA100T      Z2 WITH(NOLOCK) ON Z2.COMP_CODE   = A.COMP_CODE
		                                             AND Z2.MAIN_CODE   = 'S010'
		                                             AND Z2.SUB_CODE    = A.ORDER_PRSN
		     WHERE A.COMP_CODE    = @CompCode
		       AND A.DIV_CODE     = #{DIV_CODE}
		       AND A.RECEIPT_NUM  = #{RECEIPT_NUM}

		     ORDER BY A.RECEIPT_NUM

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END 
	</select>

	<select id="s_mpo015ukrv_wmServiceImpl.printDetailData" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.printDetailData */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 데이터 조회 */
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.RECEIPT_NUM
		         --, A.RECEIPT_SEQ
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                     ELSE B.ITEM_NAME
		             END)                                       AS ITEM_NAME
		         , B.SPEC
		         , A.ORDER_UNIT
		         --20210419 수정
		         --, SUM(ISNULL(A.RECEIPT_Q, 0))                  AS RECEIPT_Q
		         --, SUM(ISNULL(A.RECEIPT_Q, 0))                  AS INSPEC_Q
		         --, MAX(ISNULL(A1.RECEIPT_Q, 0))                 AS GOOD_INSPEC_Q
		         --, MAX(ISNULL(A2.RECEIPT_Q, 0))                 AS BAD_INSPEC_Q
		         --, SUM(ISNULL(A.INSTOCK_Q, 0))                  AS INSTOCK_Q
		         , ISNULL(A.GOOD_RECEIPT_Q, 0) + ISNULL(A.BAD_RECEIPT_Q, 0) AS RECEIPT_Q
		         , ISNULL(A.GOOD_RECEIPT_Q, 0) + ISNULL(A.BAD_RECEIPT_Q, 0) AS INSPEC_Q
		         , ISNULL(A.GOOD_RECEIPT_Q, 0)                              AS GOOD_INSPEC_Q
		         , ISNULL(A.BAD_RECEIPT_Q, 0)                               AS BAD_INSPEC_Q
		         , ISNULL(A.INSTOCK_Q, 0)                                   AS INSTOCK_Q
		         , A.REMARK                                                 AS REMARK
		      FROM       S_MPO025T_WM A  WITH(NOLOCK)
		      --20210419 수정
		      --LEFT JOIN (SELECT COMP_CODE, DIV_CODE, RECEIPT_NUM, ITEM_CODE, ITEM_STATUS, SUM(RECEIPT_Q) AS RECEIPT_Q
		      --             FROM S_MPO025T_WM WITH(NOLOCK)
		      --            WHERE COMP_CODE    = @CompCode
		      --              AND DIV_CODE     = {DIV_CODE}
		      --              AND RECEIPT_NUM  = {RECEIPT_NUM}
		      --            GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, ITEM_CODE, ITEM_STATUS) A1 ON A1.COMP_CODE   = A.COMP_CODE
		      --                                                                                 AND A1.DIV_CODE    = A.DIV_CODE
		      --                                                                                 AND A1.RECEIPT_NUM = A.RECEIPT_NUM
		      --                                                                                 AND A1.ITEM_CODE   = A.ITEM_CODE
		      --                                                                                 AND A1.ITEM_STATUS = '1'
		      --LEFT JOIN (SELECT COMP_CODE, DIV_CODE, RECEIPT_NUM, ITEM_CODE, ITEM_STATUS, SUM(RECEIPT_Q) AS RECEIPT_Q
		      --             FROM S_MPO025T_WM WITH(NOLOCK)
		      --            WHERE COMP_CODE    = @CompCode
		      --              AND DIV_CODE     = {DIV_CODE}
		      --              AND RECEIPT_NUM  = {RECEIPT_NUM}
		      --            GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, ITEM_CODE, ITEM_STATUS) A2 ON A2.COMP_CODE   = A.COMP_CODE
		      --                                                                                 AND A2.DIV_CODE    = A.DIV_CODE
		      --                                                                                 AND A2.RECEIPT_NUM = A.RECEIPT_NUM
		      --                                                                                 AND A2.ITEM_CODE   = A.ITEM_CODE
		      --                                                                                 AND A2.ITEM_STATUS = '2'
		      INNER JOIN BPR100T      B  WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
		                                             AND A.ITEM_CODE    = B.ITEM_CODE
		     WHERE A.COMP_CODE    = @CompCode
		       AND A.DIV_CODE     = #{DIV_CODE}
		       AND A.RECEIPT_NUM  = #{RECEIPT_NUM}
		     --20210419 수정
		     --GROUP BY A.COMP_CODE, A.DIV_CODE, A.RECEIPT_NUM, A.ITEM_CODE, A.ORDER_UNIT
		     --       , B.ITEM_NAME1, B.ITEM_NAME2, B.ITEM_NAME, B.SPEC

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END 
	</select>




<!-- 매입명세표 출력: 20210415 추가 -->
	<select id="s_mpo015ukrv_wmServiceImpl.printMasterData2" parameterType="Map" resultType="rMap">
		/* s_mpo015ukrv_wmServiceImpl.printMasterData2 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM                                           AS INOUT_NUM
		     , A.RECEIPT_DATE                                          AS INOUT_DATE
		     , A.CUSTOM_CODE                                           AS INOUT_CODE
		     , C1.CUSTOM_NAME
		     , C1.COMPANY_NUM
		     , C1.TELEPHON
		     , ISNULL(C1.ADDR1, '') + ' ' + ISNULL(C1.ADDR2, '')       AS ADDRESS
		     , A.REMARK
		     --고객 정보
		     , A.CUSTOM_PRSN
		     , A.PHONE_NUM                                             AS PHONE
		     , ISNULL(uniLITE.fnCipherDecrypt(A.REPRE_NUM, ''), 'R')   AS BIRTHDAY
		     , A.BANK_NAME
		     , ISNULL(uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT, ''), '') AS BANK_ACCOUNT
		     , ADDR                                                    AS ADDR1
		     , Z1.SUM_I
		     , Z1.REMARK
		  FROM      S_MPO015T_WM A  WITH(NOLOCK)
		  LEFT JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                        AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  INNER JOIN (SELECT COMP_CODE
		                   , DIV_CODE
		                   , RECEIPT_NUM
		                   , SUM(GOOD_RECEIPT_O)   AS SUM_I     --20210531 수정: RECEIPT_O -> GOOD_RECEIPT_O
		                   , MAX(REMARK)           AS REMARK
		                FROM S_MPO025T_WM WITH(NOLOCK)
		               WHERE COMP_CODE   = #{S_COMP_CODE}
		                 AND DIV_CODE    = #{DIV_CODE}
		                 AND RECEIPT_NUM = #{RECEIPT_NUM}
		               GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM) Z1 ON Z1.COMP_CODE   = A.COMP_CODE
		                                                            AND Z1.DIV_CODE    = A.DIV_CODE
		                                                            AND Z1.RECEIPT_NUM = A.RECEIPT_NUM
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>

	<select id="s_mpo015ukrv_wmServiceImpl.printDetailData2" parameterType="Map" resultType="rMap">
		/*s_mpo015ukrv_wmServiceImpl.printDetailData2*/
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , RECEIPT_NUM        AS INOUT_NUM
		     , RECEIPT_SEQ        AS INOUT_SEQ
		     , A.ITEM_CODE
		     , C1.ITEM_NAME
		     , C1.SPEC
		     , A.GOOD_RECEIPT_Q   AS ORDER_UNIT_Q      --20210419 수정: GOOD_로 변경
		     , A.GOOD_RECEIPT_P   AS ORDER_UNIT_FOR_P  --20210419 수정: GOOD_로 변경
		     , A.GOOD_RECEIPT_O   AS INOUT_FOR_O       --20210419 수정: GOOD_로 변경
		     , A.REMARK
		  FROM       S_MPO025T_WM A  WITH(NOLOCK)
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                         AND C1.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>




<!-- 20210526 추가: 자동입고 시, 신규입력 로직 -->
	<update id="s_mpo015ukrv_wmServiceImpl.insertLogDetail" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.insertLogDetail */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode      NVARCHAR(08)  /* 법인코드                */
		          , @DivCode       NVARCHAR(08)  /* 사업장코드              */
		          , @ReceiptNum    NVARCHAR(20)  /* 접수번호                */
		          , @ReceiptSeq    INT           /* 접수순번                */
		          , @UserId        NVARCHAR(100) /* 사용자ID                */

		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @ReceiptNum = #{RECEIPT_NUM}
		    SET @ReceiptSeq = #{RECEIPT_SEQ}
		    SET @UserId     = #{S_USER_ID}

		    BEGIN
		        INSERT INTO L_BTR100T (
		               KEY_VALUE      , OPR_FLAG      , COMP_CODE     , DIV_CODE
		             , INOUT_NUM      , INOUT_SEQ     , INOUT_TYPE    , INOUT_METH  , CREATE_LOC  , INOUT_TYPE_DETAIL
		             , INOUT_CODE_TYPE, INOUT_CODE    , INOUT_DATE    , ITEM_CODE   , ITEM_STATUS , WH_CODE          , WH_CELL_CODE , INOUT_PRSN
		             , INOUT_Q        , INOUT_P       , INOUT_I       , INOUT_FOR_P , INOUT_FOR_O , EXCHG_RATE_O     , MONEY_UNIT
		             , BASIS_NUM      , BASIS_SEQ     , PROJECT_NO    , LOT_NO      , REMARK
		             , ORDER_TYPE     , ORDER_NUM     , ORDER_SEQ     , ORDER_UNIT  , TRNS_RATE   , ORDER_UNIT_Q     , ORDER_UNIT_P , ORDER_UNIT_O , ORDER_UNIT_FOR_P
		             , BILL_TYPE      , SALE_TYPE
		             , PRICE_YN       , SALE_DIV_CODE , SALE_CUSTOM_CODE
		             , LC_NUM         , BL_NUM        , TRADE_LOC     , ACCOUNT_YNC , ACCOUNT_Q
		             , WM_TYPE
		             , CUSTOM_PRSN    , PHONE         , BANK_NAME     , BANK_ACCOUNT, ADDR1, BIRTHDAY
		             , TAX_INOUT
		             , INSERT_DB_USER , INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		        )
		        SELECT #{KEY_VALUE}
		             , #{OPR_FLAG}
		             , Z.COMP_CODE
		             , Z.DIV_CODE
		             , #{INOUT_NUM}                                                                 AS INOUT_NUM
		             , 0                                                                            AS INOUT_SEQ
		             , '1'                                                                          AS INOUT_TYPE
		             , '1'                                                                          AS INOUT_METH
		             , '2'                                                                          AS CREATE_LOC
		             , '10'                                                                         AS INOUT_TYPE_DETAIL
		             , '4'                                                                          AS INOUT_CODE_TYPE
		             , Z.CUSTOM_CODE                                                                AS INOUT_CODE
		             , CONVERT(NVARCHAR(08), GETDATE(), 112)                                        AS INOUT_DATE
		             , Z.ITEM_CODE
		             , Z.ITEM_STATUS
		             , Z.IN_WH_CODE
		             , Z.IN_WH_CELL_CODE
		             , #{RECEIPT_PRSN}                                                              AS INOUT_PRSN
		             , Z.NOINOUT_Q                                                                  AS INOUT_Q
		             , Z.ORDER_LOC_P                                                                AS INOUT_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_LOC_O
		                    ELSE Z.ORDER_LOC_P * Z.REMAIN_Q
		               END                                                                          AS INOUT_I
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_O
		                    ELSE Z.ORDER_UNIT_P * Z.REMAIN_Q
		               END
		               / Z.NOINOUT_Q                                                                AS INOUT_FOR_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_O
		                    ELSE Z.ORDER_UNIT_P * Z.REMAIN_Q
		               END                                                                          AS INOUT_FOR_O
		             , Z.EXCHG_RATE_O
		             , Z.MONEY_UNIT
		             , Z.BASIS_NUM
		             , Z.BASIS_SEQ
		             , Z.PROJECT_NO
		             , Z.LOT_NO
		             , Z.REMARK
		             , Z.ORDER_TYPE
		             , Z.ORDER_NUM
		             , Z.ORDER_SEQ
		             , Z.ORDER_UNIT
		             , Z.TRNS_RATE
		             , Z.REMAIN_Q                                                                   AS ORDER_UNIT_Q
		             , Z.ORDER_LOC_P                                                                AS ORDER_UNIT_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_LOC_O
		                    ELSE Z.ORDER_LOC_P * Z.REMAIN_Q
		               END                                                                          AS ORDER_UNIT_I
		             , Z.ORDER_UNIT_P                                                               AS ORDER_UNIT_FOR_P
		             , '*'                                                                          AS BILL_TYPE
		             , '*'                                                                          AS SALE_TYPE
		             , CASE WHEN Z.ORDER_O = 0 THEN 'N'                                             --20210602 수정: 조건 Z.ITEM_STATUS = 2 AND 삭제
		                    ELSE 'Y'
		               END                                                                          AS PRICE_YN
		             , '*'                                                                          AS SALE_DIV_CODE
		             , '*'                                                                          AS SALE_CUSTOM_CODE
		             , Z.LC_NUM
		             , ''                                                                           AS BL_NUM
		             , Z.TRADE_LOC
		             , CASE WHEN Z.ORDER_O = 0 THEN 'N'                                             --20210602 수정: 조건 Z.ITEM_STATUS = 2 AND 삭제
		                    ELSE 'Y'
		               END                                                                          AS ACCOUNT_YNC
		             , 0                                                                            AS ACCOUNT_Q
		             , Z.TYPE                                                                       AS WM_TYPE
		             , Z.CUSTOM_PRSN
		             , Z.PHONE
		             , Z.BANK_NAME
		             , Z.BANK_ACCOUNT
		             , Z.ADDR1
		             , Z.BIRTHDAY
		             , Z.TAX_INOUT
		             , @UserId
		             , GETDATE()
		             , @UserId
		             , GETDATE()
		          FROM (
		                --양품 수량 가져오기
		                SELECT A.COMP_CODE
		                     , 'R1'                                                                        AS TYPE
		                     , B.ITEM_CODE                                                                 AS ITEM_CODE
		                     , B.DVRY_DATE
		                     , A.DIV_CODE                                                                  AS DIV_CODE
		                     , B.ORDER_UNIT                                                                AS ORDER_UNIT
		                     , B.GOOD_RECEIPT_Q                                                            AS ORDER_UNIT_Q  --구매단위 수량
		                     , ISNULL(B.GOOD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                          AS REMAIN_Q
		                     , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		                     , ISNULL(B.GOOD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                          AS NOINOUT_Q
		                     , B.GOOD_RECEIPT_Q * C1.TRNS_RATE                                             AS ORDER_Q
		                     , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                            ELSE 'Y'
		                       END                                                                         AS UNIT_PRICE_TYPE
		                     , B.MONEY_UNIT                                                                AS MONEY_UNIT
		                     , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_P
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_UNIT_P
		                     , ISNULL(B.GOOD_RECEIPT_Q - ISNULL(F.INOUT_Q, 0) , 0) * B.GOOD_RECEIPT_P      AS ORDER_O
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_LOC_P
		                     , B.GOOD_RECEIPT_O                                                            AS ORDER_LOC_O
		                     , B.RECEIPT_NUM                                                               AS ORDER_NUM
		                     , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		                     , ''                                                                          AS LC_NUM
		                     , ''                                                                          AS WH_CODE
		                     , ''                                                                          AS ORDER_REQ_NUM
		                     , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		                     , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		                     , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		                     , ISNULL(F.INOUT_Q, 0)                                                        AS INSTOCK_Q
		                     , B.REMARK                                                                    AS REMARK
		                     , ''                                                                          AS PROJECT_NO
		                     , 0                                                                           AS EXCESS_RATE
		                     , A.ORDER_PRSN                                                                AS ORDER_PRSN
		                     , B.GOOD_RECEIPT_Q                                                            AS GOOD_STOCK_Q
		                     , 0                                                                           AS BAD_STOCK_Q
		                     , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		                     , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		                     , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		                     , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		                     , CONVERT(NVARCHAR(06), '')                                                   AS TRADE_LOC
		                     , C2.LOT_YN
		                     , ''                                                                          AS LOT_NO
		                     , ''                                                                          AS SOF_ORDER_NUM
		                     , 0                                                                           AS SOF_ORDER_SEQ
		                     , ''                                                                          AS SOF_CUSTOM_NAME
		                     , ''                                                                          AS SOF_ITEM_NAME
		                     , A.CUSTOM_PRSN
		                     , A.PHONE_NUM                                                                 AS PHONE
		                     , A.BANK_NAME
		                     , A.BANK_ACCOUNT
		                     , A.ADDR                                                                      AS ADDR1
		                     , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		                     , '1'                                                                         AS ITEM_STATUS
		                     , A.TAX_INOUT
		                     , B.IN_WH_CODE
		                     , B.IN_WH_CELL_CODE
		                  FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                        INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                                 AND B.DIV_CODE     = A.DIV_CODE
		                                                                 AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                        INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                                 AND C1.ITEM_CODE   = B.ITEM_CODE
		                        INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                                 AND C2.DIV_CODE    = B.DIV_CODE
		                                                                 AND C2.ITEM_CODE   = B.ITEM_CODE
		                        LEFT  JOIN (
		                                    SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, BASIS_NUM, BASIS_SEQ, ITEM_CODE
		                                      FROM BTR100T WITH (NOLOCK)
		                                     WHERE COMP_CODE       = @CompCode
		                                       AND DIV_CODE        = '01'
		                                       AND ORDER_NUM       IS NOT NULL
		                                       AND ITEM_STATUS     = N'1'
		                                       AND CREATE_LOC      = N'2'
		                                       AND INOUT_CODE_TYPE = N'4'
		                                     GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, BASIS_NUM, BASIS_SEQ, ITEM_CODE ) F  ON F.BASIS_NUM   = B.RECEIPT_NUM
		                                                                                                                    AND F.BASIS_SEQ   = B.RECEIPT_SEQ
		                                                                                                                    AND F.ITEM_CODE   = B.ITEM_CODE
		                                                                                                                    AND F.DIV_CODE    = B.DIV_CODE
		                                                                                                                    AND F.COMP_CODE   = B.COMP_CODE
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND B.RECEIPT_SEQ  = @ReceiptSeq
		                   AND B.GOOD_RECEIPT_Q > 0

		                --불량 수량 가져오기
		                UNION ALL

		                SELECT A.COMP_CODE
		                     , 'R1'                                                                        AS TYPE
		                     , B.ITEM_CODE                                                                 AS ITEM_CODE
		                     , B.DVRY_DATE
		                     , A.DIV_CODE                                                                  AS DIV_CODE
		                     , B.ORDER_UNIT                                                                AS ORDER_UNIT
		                     , B.BAD_RECEIPT_Q                                                             AS ORDER_UNIT_Q  --구매단위 수량
		                     , ISNULL(B.BAD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                           AS REMAIN_Q
		                     , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		                     , ISNULL(B.BAD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                           AS NOINOUT_Q
		                     , B.BAD_RECEIPT_Q * C1.TRNS_RATE                                              AS ORDER_Q
		                     , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                            ELSE 'Y'
		                       END                                                                         AS UNIT_PRICE_TYPE
		                     , B.MONEY_UNIT                                                                AS MONEY_UNIT
		                     , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_P
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_UNIT_P
		                     , ISNULL(B.BAD_RECEIPT_Q - ISNULL(F.INOUT_Q, 0) , 0) * B.BAD_RECEIPT_P        AS ORDER_O
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_LOC_P
		                     , B.BAD_RECEIPT_O                                                             AS ORDER_LOC_O
		                     , B.RECEIPT_NUM                                                               AS ORDER_NUM
		                     , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		                     , ''                                                                          AS LC_NUM
		                     , ''                                                                          AS WH_CODE
		                     , ''                                                                          AS ORDER_REQ_NUM
		                     , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		                     , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		                     , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		                     , ISNULL(F.INOUT_Q, 0)                                                        AS INSTOCK_Q
		                     , B.REMARK                                                                    AS REMARK
		                     , ''                                                                          AS PROJECT_NO
		                     , 0                                                                           AS EXCESS_RATE
		                     , A.ORDER_PRSN                                                                AS ORDER_PRSN
		                     , 0                                                                           AS GOOD_STOCK_Q
		                     , BAD_RECEIPT_Q                                                               AS BAD_STOCK_Q
		                     , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		                     , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		                     , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		                     , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		                     , CONVERT(NVARCHAR(6) , '')                                                   AS TRADE_LOC
		                     , C2.LOT_YN
		                     , ''                                                                          AS LOT_NO
		                     , ''                                                                          AS SOF_ORDER_NUM
		                     , 0                                                                           AS SOF_ORDER_SEQ
		                     , ''                                                                          AS SOF_CUSTOM_NAME
		                     , ''                                                                          AS SOF_ITEM_NAME
		                     , A.CUSTOM_PRSN
		                     , A.PHONE_NUM                                                                 AS PHONE
		                     , A.BANK_NAME
		                     , A.BANK_ACCOUNT
		                     , A.ADDR                                                                      AS ADDR1
		                     , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		                     , '2'                                                                         AS ITEM_STATUS  --불량
		                     , A.TAX_INOUT
		                     , B.IN_WH_CODE
		                     , B.IN_WH_CELL_CODE
		                  FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                        INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                                 AND B.DIV_CODE     = A.DIV_CODE
		                                                                 AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                        INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                                 AND C1.ITEM_CODE   = B.ITEM_CODE
		                        INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                                 AND C2.DIV_CODE    = B.DIV_CODE
		                                                                 AND C2.ITEM_CODE   = B.ITEM_CODE
		                        LEFT  JOIN (
		                                    SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, BASIS_NUM, BASIS_SEQ, ITEM_CODE
		                                      FROM BTR100T WITH (NOLOCK)
		                                     WHERE COMP_CODE       = @CompCode
		                                       AND DIV_CODE        = '01'
		                                       AND ORDER_NUM       IS NOT NULL
		                                       AND ITEM_STATUS     = N'2'
		                                       AND CREATE_LOC      = N'2'
		                                       AND INOUT_CODE_TYPE = N'4'
		                                     GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, BASIS_NUM, BASIS_SEQ, ITEM_CODE ) F  ON F.BASIS_NUM   = B.RECEIPT_NUM
		                                                                                                                    AND F.BASIS_SEQ   = B.RECEIPT_SEQ
		                                                                                                                    AND F.ITEM_CODE   = B.ITEM_CODE
		                                                                                                                    AND F.DIV_CODE    = B.DIV_CODE
		                                                                                                                    AND F.COMP_CODE   = B.COMP_CODE
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND B.RECEIPT_SEQ  = @ReceiptSeq
		                   AND B.BAD_RECEIPT_Q > 0
		          ) Z
		        ORDER BY Z.ORDER_NUM, Z.ORDER_SEQ, Z.ITEM_STATUS
		    END

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</update>

<!-- 20210603 추가: 자동입고 시, 수정 로직 -->
	<update id="s_mpo015ukrv_wmServiceImpl.insertLogDetail_UP" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.insertLogDetail_UP */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode      NVARCHAR(08)  /* 법인코드                */
		          , @DivCode       NVARCHAR(08)  /* 사업장코드              */
		          , @ReceiptNum    NVARCHAR(20)  /* 접수번호                */
		          , @ReceiptSeq    INT           /* 접수순번                */
		          , @UserId        NVARCHAR(100) /* 사용자ID                */

		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @ReceiptNum = #{RECEIPT_NUM}
		    SET @ReceiptSeq = #{RECEIPT_SEQ}
		    SET @UserId     = #{S_USER_ID}

		    BEGIN
		        INSERT INTO L_BTR100T (
		               KEY_VALUE      , OPR_FLAG      , COMP_CODE     , DIV_CODE
		             , INOUT_NUM      , INOUT_SEQ     , INOUT_TYPE    , INOUT_METH  , CREATE_LOC  , INOUT_TYPE_DETAIL
		             , INOUT_CODE_TYPE, INOUT_CODE    , INOUT_DATE    , ITEM_CODE   , ITEM_STATUS , WH_CODE          , WH_CELL_CODE , INOUT_PRSN
		             , INOUT_Q        , INOUT_P       , INOUT_I       , INOUT_FOR_P , INOUT_FOR_O , EXCHG_RATE_O     , MONEY_UNIT
		             , BASIS_NUM      , BASIS_SEQ     , PROJECT_NO    , LOT_NO      , REMARK
		             , ORDER_TYPE     , ORDER_NUM     , ORDER_SEQ     , ORDER_UNIT  , TRNS_RATE   , ORDER_UNIT_Q     , ORDER_UNIT_P , ORDER_UNIT_O , ORDER_UNIT_FOR_P
		             , BILL_TYPE      , SALE_TYPE
		             , PRICE_YN       , SALE_DIV_CODE , SALE_CUSTOM_CODE
		             , LC_NUM         , BL_NUM        , TRADE_LOC     , ACCOUNT_YNC , ACCOUNT_Q
		             , WM_TYPE
		             , CUSTOM_PRSN    , PHONE         , BANK_NAME     , BANK_ACCOUNT, ADDR1, BIRTHDAY
		             , TAX_INOUT
		             , INSERT_DB_USER , INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		        )
		        SELECT #{KEY_VALUE}
		             , CASE WHEN ISNULL(Z.INOUT_NUM, '') = '' THEN 'N'
		                    ELSE 'U'
		               END                                                                          AS OPR_FLAG
		             , Z.COMP_CODE
		             , Z.DIV_CODE
		             , CASE WHEN ISNULL(Z.INOUT_NUM, '') = '' THEN ''
		                    ELSE ISNULL(Z.INOUT_NUM, '')
		               END                                                                          AS INOUT_NUM
		             , CASE WHEN ISNULL(Z.INOUT_NUM, '') = '' THEN 0
		                    ELSE Z.INOUT_SEQ
		               END                                                                          AS INOUT_SEQ
		             , '1'                                                                          AS INOUT_TYPE
		             , '1'                                                                          AS INOUT_METH
		             , '2'                                                                          AS CREATE_LOC
		             , '10'                                                                         AS INOUT_TYPE_DETAIL
		             , '4'                                                                          AS INOUT_CODE_TYPE
		             , Z.CUSTOM_CODE                                                                AS INOUT_CODE
		             , CONVERT(NVARCHAR(08), GETDATE(), 112)                                        AS INOUT_DATE
		             , Z.ITEM_CODE
		             , Z.ITEM_STATUS
		             , Z.IN_WH_CODE
		             , Z.IN_WH_CELL_CODE
		             , #{RECEIPT_PRSN}                                                              AS INOUT_PRSN
		             , Z.NOINOUT_Q                                                                  AS INOUT_Q
		             , Z.ORDER_LOC_P                                                                AS INOUT_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_LOC_O
		                    ELSE Z.ORDER_LOC_P * Z.REMAIN_Q
		               END                                                                          AS INOUT_I
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_O
		                    ELSE Z.ORDER_UNIT_P * Z.REMAIN_Q
		               END
		               / Z.NOINOUT_Q                                                                AS INOUT_FOR_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_O
		                    ELSE Z.ORDER_UNIT_P * Z.REMAIN_Q
		               END                                                                          AS INOUT_FOR_O
		             , Z.EXCHG_RATE_O
		             , Z.MONEY_UNIT
		             , Z.BASIS_NUM
		             , Z.BASIS_SEQ
		             , Z.PROJECT_NO
		             , Z.LOT_NO
		             , Z.REMARK
		             , Z.ORDER_TYPE
		             , Z.ORDER_NUM
		             , Z.ORDER_SEQ
		             , Z.ORDER_UNIT
		             , Z.TRNS_RATE
		             , Z.REMAIN_Q                                                                   AS ORDER_UNIT_Q
		             , Z.ORDER_LOC_P                                                                AS ORDER_UNIT_P
		             , CASE WHEN Z.ORDER_UNIT_Q = Z.REMAIN_Q THEN Z.ORDER_LOC_O
		                    ELSE Z.ORDER_LOC_P * Z.REMAIN_Q
		               END                                                                          AS ORDER_UNIT_I
		             , Z.ORDER_UNIT_P                                                               AS ORDER_UNIT_FOR_P
		             , '*'                                                                          AS BILL_TYPE
		             , '*'                                                                          AS SALE_TYPE
		             , CASE WHEN Z.ORDER_O = 0 THEN 'N'                                             --20210602 수정: 조건 Z.ITEM_STATUS = 2 AND 삭제
		                    ELSE 'Y'
		               END                                                                          AS PRICE_YN
		             , '*'                                                                          AS SALE_DIV_CODE
		             , '*'                                                                          AS SALE_CUSTOM_CODE
		             , Z.LC_NUM
		             , ''                                                                           AS BL_NUM
		             , Z.TRADE_LOC
		             , CASE WHEN Z.ORDER_O = 0 THEN 'N'                                             --20210602 수정: 조건 Z.ITEM_STATUS = 2 AND 삭제
		                    ELSE 'Y'
		               END                                                                          AS ACCOUNT_YNC
		             , 0                                                                            AS ACCOUNT_Q
		             , Z.TYPE                                                                       AS WM_TYPE
		             , Z.CUSTOM_PRSN
		             , Z.PHONE
		             , Z.BANK_NAME
		             , Z.BANK_ACCOUNT
		             , Z.ADDR1
		             , Z.BIRTHDAY
		             , Z.TAX_INOUT
		             , @UserId
		             , GETDATE()
		             , @UserId
		             , GETDATE()
		          FROM (
		                --양품 수량 가져오기
		                SELECT A.COMP_CODE
		                     , 'R1'                                                                        AS TYPE
		                     , B.ITEM_CODE                                                                 AS ITEM_CODE
		                     , B.DVRY_DATE
		                     , A.DIV_CODE                                                                  AS DIV_CODE
		                     , B.ORDER_UNIT                                                                AS ORDER_UNIT
		                     , B.GOOD_RECEIPT_Q                                                            AS ORDER_UNIT_Q  --구매단위 수량
		                     , ISNULL(B.GOOD_RECEIPT_Q, 0)                                                 AS REMAIN_Q
		                     , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		                     , ISNULL(B.GOOD_RECEIPT_Q, 0)                                                 AS NOINOUT_Q
		                     , B.GOOD_RECEIPT_Q * C1.TRNS_RATE                                             AS ORDER_Q
		                     , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                            ELSE 'Y'
		                       END                                                                         AS UNIT_PRICE_TYPE
		                     , B.MONEY_UNIT                                                                AS MONEY_UNIT
		                     , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_P
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_UNIT_P
		                     , ISNULL(B.GOOD_RECEIPT_Q, 0) * B.GOOD_RECEIPT_P                              AS ORDER_O
		                     , B.GOOD_RECEIPT_P                                                            AS ORDER_LOC_P
		                     , B.GOOD_RECEIPT_O                                                            AS ORDER_LOC_O
		                     , B.RECEIPT_NUM                                                               AS ORDER_NUM
		                     , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		                     , ''                                                                          AS LC_NUM
		                     , ''                                                                          AS WH_CODE
		                     , ''                                                                          AS ORDER_REQ_NUM
		                     , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		                     , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		                     , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		                     , B.REMARK                                                                    AS REMARK
		                     , ''                                                                          AS PROJECT_NO
		                     , 0                                                                           AS EXCESS_RATE
		                     , A.ORDER_PRSN                                                                AS ORDER_PRSN
		                     , B.GOOD_RECEIPT_Q                                                            AS GOOD_STOCK_Q
		                     , 0                                                                           AS BAD_STOCK_Q
		                     , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		                     , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		                     , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		                     , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		                     , CONVERT(NVARCHAR(06), '')                                                   AS TRADE_LOC
		                     , C2.LOT_YN
		                     , ''                                                                          AS LOT_NO
		                     , ''                                                                          AS SOF_ORDER_NUM
		                     , 0                                                                           AS SOF_ORDER_SEQ
		                     , ''                                                                          AS SOF_CUSTOM_NAME
		                     , ''                                                                          AS SOF_ITEM_NAME
		                     , A.CUSTOM_PRSN
		                     , A.PHONE_NUM                                                                 AS PHONE
		                     , A.BANK_NAME
		                     , A.BANK_ACCOUNT
		                     , A.ADDR                                                                      AS ADDR1
		                     , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		                     , '1'                                                                         AS ITEM_STATUS
		                     , A.TAX_INOUT
		                     , B.IN_WH_CODE
		                     , B.IN_WH_CELL_CODE
		                     , Z1.INOUT_NUM
		                     , Z1.INOUT_SEQ
		                  FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                        INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                                 AND B.DIV_CODE     = A.DIV_CODE
		                                                                 AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                        INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                                 AND C1.ITEM_CODE   = B.ITEM_CODE
		                        INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                                 AND C2.DIV_CODE    = B.DIV_CODE
		                                                                 AND C2.ITEM_CODE   = B.ITEM_CODE
		                        LEFT  JOIN  BTR100T      Z1 WITH (NOLOCK) ON Z1.COMP_CODE   = B.COMP_CODE
		                                                                 AND Z1.DIV_CODE    = B.DIV_CODE
		                                                                 --AND Z1.ITEM_CODE   = B.ITEM_CODE     --20210708 주석: 품목코드 변경 가능하도록
		                                                                 AND Z1.BASIS_NUM   = B.RECEIPT_NUM
		                                                                 AND Z1.BASIS_SEQ   = B.RECEIPT_SEQ
		                                                                 AND Z1.ITEM_STATUS = '1'
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND B.RECEIPT_SEQ  = @ReceiptSeq
		                   AND B.GOOD_RECEIPT_Q > 0

		                --불량 수량 가져오기
		                UNION ALL

		                SELECT A.COMP_CODE
		                     , 'R1'                                                                        AS TYPE
		                     , B.ITEM_CODE                                                                 AS ITEM_CODE
		                     , B.DVRY_DATE
		                     , A.DIV_CODE                                                                  AS DIV_CODE
		                     , B.ORDER_UNIT                                                                AS ORDER_UNIT
		                     , B.BAD_RECEIPT_Q                                                             AS ORDER_UNIT_Q  --구매단위 수량
		                     , ISNULL(B.BAD_RECEIPT_Q, 0)                                                  AS REMAIN_Q
		                     , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		                     , ISNULL(B.BAD_RECEIPT_Q, 0)                                                  AS NOINOUT_Q
		                     , B.BAD_RECEIPT_Q * C1.TRNS_RATE                                              AS ORDER_Q
		                     , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                            ELSE 'Y'
		                       END                                                                         AS UNIT_PRICE_TYPE
		                     , B.MONEY_UNIT                                                                AS MONEY_UNIT
		                     , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_P
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_UNIT_P
		                     , ISNULL(B.BAD_RECEIPT_Q, 0) * B.BAD_RECEIPT_P                                AS ORDER_O
		                     , B.BAD_RECEIPT_P                                                             AS ORDER_LOC_P
		                     , B.BAD_RECEIPT_O                                                             AS ORDER_LOC_O
		                     , B.RECEIPT_NUM                                                               AS ORDER_NUM
		                     , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		                     , ''                                                                          AS LC_NUM
		                     , ''                                                                          AS WH_CODE
		                     , ''                                                                          AS ORDER_REQ_NUM
		                     , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		                     , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		                     , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		                     , B.REMARK                                                                    AS REMARK
		                     , ''                                                                          AS PROJECT_NO
		                     , 0                                                                           AS EXCESS_RATE
		                     , A.ORDER_PRSN                                                                AS ORDER_PRSN
		                     , 0                                                                           AS GOOD_STOCK_Q
		                     , BAD_RECEIPT_Q                                                               AS BAD_STOCK_Q
		                     , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		                     , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		                     , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		                     , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		                     , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		                     , CONVERT(NVARCHAR(6) , '')                                                   AS TRADE_LOC
		                     , C2.LOT_YN
		                     , ''                                                                          AS LOT_NO
		                     , ''                                                                          AS SOF_ORDER_NUM
		                     , 0                                                                           AS SOF_ORDER_SEQ
		                     , ''                                                                          AS SOF_CUSTOM_NAME
		                     , ''                                                                          AS SOF_ITEM_NAME
		                     , A.CUSTOM_PRSN
		                     , A.PHONE_NUM                                                                 AS PHONE
		                     , A.BANK_NAME
		                     , A.BANK_ACCOUNT
		                     , A.ADDR                                                                      AS ADDR1
		                     , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		                     , '2'                                                                         AS ITEM_STATUS  --불량
		                     , A.TAX_INOUT
		                     , B.IN_WH_CODE
		                     , B.IN_WH_CELL_CODE
		                     , Z1.INOUT_NUM
		                     , Z1.INOUT_SEQ
		                  FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                        INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                                 AND B.DIV_CODE     = A.DIV_CODE
		                                                                 AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                        INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                                 AND C1.ITEM_CODE   = B.ITEM_CODE
		                        INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                                 AND C2.DIV_CODE    = B.DIV_CODE
		                                                                 AND C2.ITEM_CODE   = B.ITEM_CODE
		                        LEFT  JOIN  BTR100T      Z1 WITH (NOLOCK) ON Z1.COMP_CODE   = B.COMP_CODE
		                                                                 AND Z1.DIV_CODE    = B.DIV_CODE
		                                                                 --AND Z1.ITEM_CODE   = B.ITEM_CODE     --20210708 주석: 품목코드 변경 가능하도록
		                                                                 AND Z1.BASIS_NUM   = B.RECEIPT_NUM
		                                                                 AND Z1.BASIS_SEQ   = B.RECEIPT_SEQ
		                                                                 AND Z1.ITEM_STATUS = '2'
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND B.RECEIPT_SEQ  = @ReceiptSeq
		                   AND B.BAD_RECEIPT_Q > 0
		          ) Z
		        ORDER BY Z.ORDER_NUM, Z.ORDER_SEQ, Z.ITEM_STATUS
		    END

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</update>

<!-- 20210602 추가: 자동입고 시, 삭제 로직 -->
	<update id="s_mpo015ukrv_wmServiceImpl.insertLogDetail_Del" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.insertLogDetail_Del */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode      NVARCHAR(08)  /* 법인코드                */
		          , @DivCode       NVARCHAR(08)  /* 사업장코드              */
		          , @ReceiptNum    NVARCHAR(20)  /* 접수번호                */
		          , @ReceiptSeq    INT           /* 접수순번                */
		          , @UserId        NVARCHAR(100) /* 사용자ID                */

		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @ReceiptNum = #{RECEIPT_NUM}
		    SET @ReceiptSeq = #{RECEIPT_SEQ}
		    SET @UserId     = #{S_USER_ID}

		    BEGIN
		        INSERT INTO L_BTR100T (
		               KEY_VALUE      , OPR_FLAG      , COMP_CODE     , DIV_CODE
		             , INOUT_NUM      , INOUT_SEQ     , INOUT_TYPE    , INOUT_METH  , CREATE_LOC  , INOUT_TYPE_DETAIL
		             , INOUT_CODE_TYPE, INOUT_CODE    , INOUT_DATE    , ITEM_CODE   , ITEM_STATUS , WH_CODE          , WH_CELL_CODE , INOUT_PRSN
		             , INOUT_Q        , INOUT_P       , INOUT_I       , INOUT_FOR_P , INOUT_FOR_O , EXCHG_RATE_O     , MONEY_UNIT
		             , BASIS_NUM      , BASIS_SEQ     , PROJECT_NO    , LOT_NO      , REMARK
		             , ORDER_TYPE     , ORDER_NUM     , ORDER_SEQ     , ORDER_UNIT  , TRNS_RATE   , ORDER_UNIT_Q     , ORDER_UNIT_P , ORDER_UNIT_O , ORDER_UNIT_FOR_P
		             , BILL_TYPE      , SALE_TYPE
		             , PRICE_YN       , SALE_DIV_CODE , SALE_CUSTOM_CODE
		             , LC_NUM         , BL_NUM        , TRADE_LOC     , ACCOUNT_YNC , ACCOUNT_Q
		             , CUSTOM_PRSN    , PHONE         , BANK_NAME     , BANK_ACCOUNT, ADDR1, BIRTHDAY
		             , TAX_INOUT
		             , INSERT_DB_USER , INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		        )
		        SELECT #{KEY_VALUE}
		             , #{OPR_FLAG}
		             , COMP_CODE      , DIV_CODE
		             , INOUT_NUM      , INOUT_SEQ     , INOUT_TYPE    , INOUT_METH  , CREATE_LOC  , INOUT_TYPE_DETAIL
		             , INOUT_CODE_TYPE, INOUT_CODE    , INOUT_DATE    , ITEM_CODE   , ITEM_STATUS , WH_CODE          , WH_CELL_CODE , INOUT_PRSN
		             , INOUT_Q        , INOUT_P       , INOUT_I       , INOUT_FOR_P , INOUT_FOR_O , EXCHG_RATE_O     , MONEY_UNIT
		             , BASIS_NUM      , BASIS_SEQ     , PROJECT_NO    , LOT_NO      , REMARK
		             , ORDER_TYPE     , ORDER_NUM     , ORDER_SEQ     , ORDER_UNIT  , TRNS_RATE   , ORDER_UNIT_Q     , ORDER_UNIT_P , ORDER_UNIT_O , ORDER_UNIT_FOR_P
		             , BILL_TYPE      , SALE_TYPE
		             , PRICE_YN       , SALE_DIV_CODE , SALE_CUSTOM_CODE
		             , LC_NUM         , BL_NUM        , TRADE_LOC     , ACCOUNT_YNC , ACCOUNT_Q
		             , CUSTOM_PRSN    , PHONE         , BANK_NAME     , BANK_ACCOUNT, ADDR1, BIRTHDAY
		             , TAX_INOUT
		             , @UserId
		             , GETDATE()
		             , @UserId
		             , GETDATE()
		          FROM (
		                --양품 수량 가져오기
		                SELECT B.COMP_CODE      , B.DIV_CODE
		                     , B.INOUT_NUM      , B.INOUT_SEQ     , B.INOUT_TYPE    , B.INOUT_METH  , B.CREATE_LOC  , B.INOUT_TYPE_DETAIL
		                     , B.INOUT_CODE_TYPE, B.INOUT_CODE    , B.INOUT_DATE    , B.ITEM_CODE   , B.ITEM_STATUS , B.WH_CODE          , B.WH_CELL_CODE , B.INOUT_PRSN
		                     , B.INOUT_Q        , B.INOUT_P       , B.INOUT_I       , B.INOUT_FOR_P , B.INOUT_FOR_O , B.EXCHG_RATE_O     , B.MONEY_UNIT
		                     , B.BASIS_NUM      , B.BASIS_SEQ     , B.PROJECT_NO    , B.LOT_NO      , B.REMARK
		                     , B.ORDER_TYPE     , B.ORDER_NUM     , B.ORDER_SEQ     , B.ORDER_UNIT  , B.TRNS_RATE   , B.ORDER_UNIT_Q     , B.ORDER_UNIT_P , B.ORDER_UNIT_O , B.ORDER_UNIT_FOR_P
		                     , B.BILL_TYPE      , B.SALE_TYPE
		                     , B.PRICE_YN       , B.SALE_DIV_CODE , B.SALE_CUSTOM_CODE
		                     , B.LC_NUM         , B.BL_NUM        , B.TRADE_LOC     , B.ACCOUNT_YNC , B.ACCOUNT_Q
		                     , B.CUSTOM_PRSN    , B.PHONE         , B.BANK_NAME     , B.BANK_ACCOUNT, B.ADDR1, B.BIRTHDAY
		                     , B.TAX_INOUT
		                  FROM       S_MPO025T_WM A  WITH(NOLOCK)
		                  INNER JOIN BTR100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                         AND B.DIV_CODE     = A.DIV_CODE
		                                                         AND B.BASIS_NUM    = A.RECEIPT_NUM
		                                                         AND B.BASIS_SEQ    = A.RECEIPT_SEQ
		                                                         AND B.ITEM_STATUS  = '1'
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND A.RECEIPT_SEQ  = @ReceiptSeq
		                   AND A.GOOD_RECEIPT_Q > 0

		                --불량 수량 가져오기
		                UNION ALL

		                SELECT B.COMP_CODE      , B.DIV_CODE
		                     , B.INOUT_NUM      , B.INOUT_SEQ     , B.INOUT_TYPE    , B.INOUT_METH  , B.CREATE_LOC  , B.INOUT_TYPE_DETAIL
		                     , B.INOUT_CODE_TYPE, B.INOUT_CODE    , B.INOUT_DATE    , B.ITEM_CODE   , B.ITEM_STATUS , B.WH_CODE          , B.WH_CELL_CODE , B.INOUT_PRSN
		                     , B.INOUT_Q        , B.INOUT_P       , B.INOUT_I       , B.INOUT_FOR_P , B.INOUT_FOR_O , B.EXCHG_RATE_O     , B.MONEY_UNIT
		                     , B.BASIS_NUM      , B.BASIS_SEQ     , B.PROJECT_NO    , B.LOT_NO      , B.REMARK
		                     , B.ORDER_TYPE     , B.ORDER_NUM     , B.ORDER_SEQ     , B.ORDER_UNIT  , B.TRNS_RATE   , B.ORDER_UNIT_Q     , B.ORDER_UNIT_P , B.ORDER_UNIT_O , B.ORDER_UNIT_FOR_P
		                     , B.BILL_TYPE      , B.SALE_TYPE
		                     , B.PRICE_YN       , B.SALE_DIV_CODE , B.SALE_CUSTOM_CODE
		                     , B.LC_NUM         , B.BL_NUM        , B.TRADE_LOC     , B.ACCOUNT_YNC , B.ACCOUNT_Q
		                     , B.CUSTOM_PRSN    , B.PHONE         , B.BANK_NAME     , B.BANK_ACCOUNT, B.ADDR1, B.BIRTHDAY
		                     , B.TAX_INOUT
		                  FROM       S_MPO025T_WM A  WITH(NOLOCK)
		                  INNER JOIN BTR100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                         AND B.DIV_CODE     = A.DIV_CODE
		                                                         AND B.BASIS_NUM    = A.RECEIPT_NUM
		                                                         AND B.BASIS_SEQ    = A.RECEIPT_SEQ
		                                                         AND B.ITEM_STATUS  = '2'
		                 WHERE A.COMP_CODE    = @CompCode
		                   AND A.DIV_CODE     = @DivCode
		                   AND A.RECEIPT_NUM  = @ReceiptNum
		                   AND A.RECEIPT_SEQ  = @ReceiptSeq
		                   AND A.BAD_RECEIPT_Q > 0
		          ) Z
		        ORDER BY Z.ORDER_NUM, Z.ORDER_SEQ, Z.ITEM_STATUS
		    END

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</update>

<!-- 20210603 추가: 입고순번 생성 로직 -->
	<update id="s_mpo015ukrv_wmServiceImpl.updateInoutSeq" parameterType="Map">
		/* s_mpo015ukrv_wmServiceImpl.updateInoutSeq */
		UPDATE A
		   SET A.INOUT_SEQ = A.RowNum
		  FROM (SELECT INOUT_SEQ
		             , ROW_NUMBER() OVER (ORDER BY ORDER_NUM, ORDER_SEQ, ITEM_STATUS) AS RowNum
		          FROM L_BTR100T WITH(NOLOCK)
		         WHERE KEY_VALUE = #{KEY_VALUE}
		           AND OPR_FLAG  = 'N'
		        ) A
	</update>

	<update id="s_mpo015ukrv_wmServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_MATRL_Receiving_WM (
			#{CreateType	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>




<!-- Excel Upload: 20210617 추가 -->
	<update id="s_mpo015ukrv_wmServiceImpl.insertExcels_mpo015ukrv_wmUpload" parameterType="Map">
		/* temp Table에 insert: s_mpo015ukrv_wmServiceImpl.insertExcels_mpo015ukrv_wmUpload */
		INSERT INTO MPO025T_WM_XLS (
		       _EXCEL_JOBID 
		     , _EXCEL_ROWNUM 
		     , _EXCEL_HAS_ERROR 
		     , _EXCEL_ERROR_MSG
		     , COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , ITEM_NAME
		     , ORDER_UNIT
		     , GOOD_RECEIPT_Q
		     , GOOD_RECEIPT_P
		     , GOOD_RECEIPT_O
		     , BAD_RECEIPT_Q
		     , BAD_RECEIPT_P
		     , BAD_RECEIPT_O
		     , REMARK
		     , PRICE_YN
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , CUSTOM_PRSN
		     , REPRE_NUM
		     , IN_WH_CODE
		     , IN_WH_CELL_CODE
		     , DVRY_DATE
		     , CONTROL_STATUS
		     , CONFIRM_YN
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR, jdbcType=VARCHAR}     --_EXCEL_HAS_ERROR, 20210701 에러여부 표시하도록 수정
		     , #{_EXCEL_ERROR    , jdbcType=VARCHAR}     --_EXCEL_ERROR_MSG, 20210701 에러메세지 표시하도록 수정
		     , #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{ITEM_NAME}
		     , #{ORDER_UNIT}
		     , #{GOOD_RECEIPT_Q}
		     , #{GOOD_RECEIPT_P}                         --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , 0
		     , #{BAD_RECEIPT_Q}
		     , #{BAD_RECEIPT_P}                          --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , 0
		     , #{REMARK}
		     , #{PRICE_YN}
		     , #{MONEY_UNIT}
		     , 1
		     , #{CUSTOM_PRSN}
		     , #{REPRE_NUM}
		     , #{IN_WH_CODE}
		     , #{IN_WH_CELL_CODE}
		     , #{DVRY_DATE}
		     , #{CONTROL_STATUS}
		     , #{CONFIRM_YN}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="s_mpo015ukrv_wmServiceImpl.getData" parameterType="Map" resultType="rMap">
		SELECT *
		  FROM MPO025T_WM_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 1 -->
	<select id="s_mpo015ukrv_wmServiceImpl.checkItem" parameterType="Map" resultType="rMap">
		DECLARE @CHECK_DATA1 NVARCHAR(01)
		      , @CHECK_DATA2 NVARCHAR(01)

		    SET @CHECK_DATA1 = 'N'
		    SET @CHECK_DATA2 = 'N'

		IF EXISTS (
		            SELECT TOP 1 1
		              FROM BPR100T WITH(NOLOCK)
		             WHERE COMP_CODE = #{COMP_CODE}
		               AND ITEM_CODE = #{ITEM_CODE}
		          )
		    BEGIN 
		        SET @CHECK_DATA1 = 'Y'
		    END

		IF EXISTS (
		            SELECT TOP 1 1
		              FROM BPR200T WITH(NOLOCK)
		             WHERE COMP_CODE = #{COMP_CODE}
		               AND DIV_CODE  = #{DIV_CODE}
		               AND ITEM_CODE = #{ITEM_CODE}
		          )
		    BEGIN 
		        SET @CHECK_DATA2 = 'Y'
		    END

		SELECT @CHECK_DATA1    AS CHECK_DATA1
		     , @CHECK_DATA2    AS CHECK_DATA2
	</select>

	<!-- 에러메세지 insert -->
	<update id="s_mpo015ukrv_wmServiceImpl.insertErrorMsg">
		UPDATE MPO025T_WM_XLS
		   SET _EXCEL_ERROR_MSG = CASE WHEN ISNULL(_EXCEL_ERROR_MSG, '') = '' THEN #{MSG}
		                               ELSE _EXCEL_ERROR_MSG + ' / ' + #{MSG}
		                          END
		     , _EXCEL_HAS_ERROR = 'Y'
		 WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM    = #{ROWNUM}
	</update>  

	<select id="s_mpo015ukrv_wmServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*s_mpo015ukrv_wmServiceImpl.selectExcelUploadSheet1*/
		SELECT A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     , A._EXCEL_HAS_ERROR
		     , A._EXCEL_ERROR_MSG
		     , A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , ROW_NUMBER() OVER(ORDER BY _EXCEL_ROWNUM ASC)  AS RECEIPT_SEQ
		     , CASE WHEN ISNULL(A.ITEM_NAME, '') = '' THEN C1.ITEM_NAME
		            ELSE A.ITEM_NAME
		       END                                            AS ITEM_NAME
		     , C1.SPEC
		     , CASE WHEN ISNULL(A.ORDER_UNIT, '') = '' THEN C2.ORDER_UNIT
		            ELSE A.ORDER_UNIT
		       END                                            AS ORDER_UNIT
		     , A.GOOD_RECEIPT_Q                               AS GOOD_RECEIPT_Q
		     , CASE WHEN ISNULL(A.GOOD_RECEIPT_P, 0) = 0 THEN ISNULL(Z1.ITEM_P, 0)
		            ELSE A.GOOD_RECEIPT_P
		       END                                            AS GOOD_RECEIPT_P        --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , A.GOOD_RECEIPT_Q * CASE WHEN ISNULL(A.GOOD_RECEIPT_P, 0) = 0 THEN ISNULL(Z1.ITEM_P, 0)
		                               ELSE A.GOOD_RECEIPT_P
		                          END                         AS GOOD_RECEIPT_O        --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , A.BAD_RECEIPT_Q                                AS BAD_RECEIPT_Q
		     , CASE WHEN ISNULL(A.BAD_RECEIPT_P, 0) = 0 THEN 0
		            ELSE A.BAD_RECEIPT_P
		       END                                            AS BAD_RECEIPT_P         --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , A.BAD_RECEIPT_Q * CASE WHEN ISNULL(A.BAD_RECEIPT_P, 0) = 0 THEN 0
		                                   ELSE A.BAD_RECEIPT_P
		                              END                     AS BAD_RECEIPT_O         --20210629 수정: 엑셀업로드 양식 변경(단가 입력할 수 있도록 변경)
		     , A.REMARK
		     , A.PRICE_YN
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , A.CUSTOM_PRSN
		     , A.REPRE_NUM
		     , A.IN_WH_CODE
		     , A.IN_WH_CELL_CODE
		     , 0                          AS INSTOCK_Q
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		     , A.DVRY_DATE
		     , A.CONTROL_STATUS
		     , A.CONFIRM_YN
		  FROM       MPO025T_WM_XLS A WITH(NOLOCK)
		  LEFT  JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                    AND C1.ITEM_CODE  = A.ITEM_CODE
		  LEFT  JOIN BPR200T C2 WITH(NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
		                                    AND C2.DIV_CODE   = A.DIV_CODE
		                                    AND C2.ITEM_CODE  = A.ITEM_CODE
		  LEFT  JOIN BPR400T Z1 WITH(NOLOCK) ON Z1.COMP_CODE  = A.COMP_CODE
		                                    AND Z1.DIV_CODE   = A.DIV_CODE
		                                    AND Z1.TYPE       = #{PRICE_TYPE}
		                                    AND Z1.ITEM_CODE  = A.ITEM_CODE
		                                    AND Z1.MONEY_UNIT = A.MONEY_UNIT
		                                    AND Z1.ORDER_UNIT = CASE WHEN ISNULL(A.ORDER_UNIT, '') = '' THEN C2.ORDER_UNIT
		                                                             ELSE A.ORDER_UNIT
		                                                        END
		                                    AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN Z1.APLY_START_DATE AND Z1.APLY_END_DATE
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>
</mapper>