<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_srq100ukrv_wmServiceImpl">
<!-- 조회 쿼리(SOF110T) -->
	<select id="s_srq100ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ORDER_NUM
		     , A.SER_NO
		     , B.CUSTOM_CODE        AS SITE_CODE
		     , C1.CUSTOM_NAME       AS SITE_NAME
		     , A.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , A.ORDER_UNIT
		     , A.DVRY_DATE
		     , A.DVRY_TIME
		     , A.ORDER_Q
		     , A.ORDER_P
		     , A.ORDER_O            AS ORDER_PRICE
		     , A.ORDER_TAX_O
		     , A.PRICE_YN
		     , A.TAX_TYPE
		     , A.DISCOUNT_RATE
		     , A.ORDER_UNIT_Q
		     , A.TRANS_RATE
		     , A.HS_NO
		     , A.CLOSE_REMARK
		     , A.CLOSE_ID
		     , A.CLOSE_DATE
		     , A.OUT_DIV_CODE
		     , A.SALE_CUST_CD
		     , A.DVRY_CUST_CD
		     , A.WEEK_NUM
		     , A.INIT_DVRY_DATE
		     , A.ORDER_STATUS
		     , A.DEAD_LINE_STATUS
		     , A.ADVAN_AMOUNT
		     , A.ISSUE_REQ_Q
		     , A.OUTSTOCK_Q
		     , A.RETURN_Q
		     , A.SALE_Q
		     , A.PAB_STOCK_Q
		     , A.BASE_DATE
		     , A.LC_NUM
		     , A.PROD_END_DATE
		     , A.PROD_Q
		     , A.PROD_PLAN_Q
		     , A.PROD_REF_YN
		     , A.MPS_REF_YN
		     , A.ACCOUNT_YNC
		     , A.ESTI_NUM
		     , A.ESTI_SEQ
		     , A.SCM_FLAG_YN
		     , A.PO_NUM
		     , A.PO_SEQ
		     , A.PO_DATE
		     , A.PO_QTY
		     , A.EXP_ISSUE_DATE
		     , A.PREV_ORDER_Q
		     , A.PROJECT_NO
		     , A.PJT_CODE
		     , A.REMARK
		     , A.LOT_NO
		     , A.REASON
		     , A.LAB_NO
		     , A.REQST_ID
		     , A.SAMPLE_KEY
		     , A.SO_NUM
		     , A.SO_SEQ
		     , A.PROMO_NUM
		     , A.SO_TYPE
		     , A.SO_ITEM_SEQ
		     , A.SO_KIND
		     , A.BASIS_P
		     , A.EXTRA_Q
		     , A.BASIS_Q
		     , A.GIFT_KIND
		     , A.CUSTOMER_ID
		     , A.RECEIVER_ID
		     , A.RECEIVER_NAME
		     , A.TELEPHONE_NUM1
		     , A.TELEPHONE_NUM2
		     , A.FAX_NUM
		     , A.ZIP_NUM
		     , A.ADDRESS1 + ISNULL(A.ADDRESS2, '')  AS ADDRESS1
		     , A.ITEM_GUBUN
		     , A.PROD_ITEM_CODE
		     , A.INVOICE_NUM
		     , A.PRICE_TYPE
		     , A.WGT_UNIT
		     , A.UNIT_WGT
		     , A.VOL_UNIT
		     , A.UNIT_VOL
		     , A.ORDER_WGT_Q
		     , A.ORDER_WGT_P
		     , A.ORDER_VOL_Q
		     , A.ORDER_VOL_P
		     , ISNULL(A.WH_CODE, C3.WH_CODE)  AS WH_CODE
		     , A.REASON1
		     , A.REASON2
		     , A.REASON3
		     , A.REASON4
		     , A.MICROBE_DATE
		     , A.EXPECTED_END_DATE
		     , A.PRICE_PER_GRAM
		     , A.PRICE_WEIGHT

		     --, A.ORDER_FOR_P
		     --, A.ORDER_FOR_O
		     , CASE WHEN ISNULL(A.ORDER_FOR_P, 0) = 0 THEN A.ORDER_P ELSE A.ORDER_FOR_P END ORDER_FOR_P
		     , CASE WHEN ISNULL(A.ORDER_FOR_O, 0) = 0 THEN A.ORDER_O ELSE A.ORDER_FOR_O END ORDER_FOR_O

		     , A.PACK_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , A.REMARK_INTER
		     , A.CLOSE_YN
		     , A.CLOSE_REASON
		     , A.ISSUE_PLAN_NUM
		     , A.ISSUE_REQ_YN
		     , A.UPN_CODE
		     , A.ORD_STATUS
		     , A.DELIV_METHOD
		     , A.DELIV_PRICE
		     , A.ORDER_NAME
		     , A.ORDER_TEL1
		     , A.ORDER_TEL2
		     , A.ORDER_MAIL
		     , A.MSG
		     , A.SENDER_CODE
		     , A.SENDER
		     , A.CUSTOMER_ID2
		     , A.SHOP_ORD_NO
		     , A.SHOP_SALE_NO
		     , A.SHOP_SALE_NAME
		     , A.SHOP_OPT_NAME
		     , A.UNIQUEID
		     , A.NUMBER
		     --20201117
		     , D.ISSUE_REQ_NUM
		     , D.ISSUE_REQ_SEQ
		     , CASE WHEN ISNULL(D.ISSUE_REQ_DATE, '') = '' THEN #{ISSUE_REQ_DATE}
		            ELSE ISNULL(D.ISSUE_REQ_DATE, '')
		       END                                        AS ISSUE_REQ_DATE
		     , B.ORDER_DATE
		     , C1.AGENT_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , B.MONEY_UNIT
		     , B.EXCHG_RATE_O                             AS EXCHANGE_RATE
		     , B.ORDER_PRSN
		     , B.BILL_TYPE
		     , B.ORDER_TYPE
		     , B.PROJECT_NO
		     , CASE WHEN ISNULL(A.INVOICE_NUM, '') = '' THEN CASE WHEN C3.PACK_TYPE = 'A' THEN A.ORDER_Q
		                                                          ELSE 1
		                                                     END + ISNULL(A_COUNT, 0) 
		            ELSE (SELECT COUNT(*) FROM unilite.fnSplit(A.INVOICE_NUM2, ','))
		       END                                        AS ISSUING_NUMBER
		     , A.INVOICE_NUM                              --운송장번호1
		     , A.INVOICE_NUM2                             --운송장번호2
		     , CASE WHEN LEN(ISNULL(A.INVOICE_NUM, '')) = 8 OR ISNULL(A.INVOICE_NUM, '') = ''  THEN 'N'
		            ELSE 'Y'
		       END                                        AS TRNS_YN
		     , A.BUNDLE_NO                                --20201216 추가
		     , A.PAY_TIME                                 --20201229 추가
		     , ISNULL(D.PRINT_YN, 'N')                    AS PRINT_YN  --20210208 추가
		     , CASE WHEN ISNULL(D2.COMP_CODE, '') = '' THEN 'N'
		            ELSE 'Y'
		       END                                        AS WKORD_YN  --20210407 추가
		     , ISNULL(D2.WKORD_NUM, '')                   AS WKORD_NUM --20210407 추가
		  FROM       SOF110T A  WITH(NOLOCK)
		  INNER JOIN SOF100T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                    AND B.DIV_CODE     = A.DIV_CODE
		                                    AND B.ORDER_NUM    = A.ORDER_NUM
		  INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                    AND C1.CUSTOM_CODE = B.CUSTOM_CODE
		  INNER JOIN BPR100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                    AND C2.ITEM_CODE   = A.ITEM_CODE
		  INNER JOIN BPR200T C3 WITH(NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                    AND C3.DIV_CODE    = A.DIV_CODE
		                                    AND C3.ITEM_CODE   = A.ITEM_CODE
		  LEFT  JOIN SRQ100T D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                    AND D.DIV_CODE     = A.DIV_CODE
		                                    AND D.ORDER_NUM    = A.ORDER_NUM
		                                    AND D.SER_NO       = A.SER_NO
		  LEFT  JOIN PMP100T D2 WITH(NOLOCK) ON D2.COMP_CODE   = A.COMP_CODE      --20210407 추가
		                                    AND D2.DIV_CODE    = A.DIV_CODE
		                                    AND D2.SO_NUM      = A.ORDER_NUM
		                                    AND D2.SO_SEQ      = A.SER_NO
		  LEFT JOIN (
		              SELECT A.COMP_CODE
		                   , A.DIV_CODE
		                   , A.ORDER_NUM
		                   , A.SER_NO
		                   , SUM(A.UNIT_Q)     AS A_COUNT
		                   --, COUNT(A.COMP_CODE) * A.UNIT_Q AS A_COUNT   --20210309 수정
		                FROM       SOF100T      Z
		                INNER JOIN S_SOF115T_WM A WITH(NOLOCK) ON A.COMP_CODE = Z.COMP_CODE
		                                                      AND A.DIV_CODE  = Z.DIV_CODE
		                                                      AND A.ORDER_NUM = Z.ORDER_NUM
		                INNER JOIN BPR200T      B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.DIV_CODE  = A.DIV_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		                WHERE A.COMP_CODE   = #{S_COMP_CODE}
		                  AND A.DIV_CODE    = #{DIV_CODE}
		              <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		                  AND Z.ORDER_PRSN  = #{ORDER_PRSN}
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		                  AND Z.ORDER_DATE &gt;= #{ORDER_DATE_FR}
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		                  AND Z.ORDER_DATE &lt;= #{ORDER_DATE_TO}
		              </if>
		                  AND B.PACK_TYPE  = 'A'
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.SER_NO) Z ON Z.COMP_CODE = A.COMP_CODE   --20210309 수정: , A.UNIT_Q 삭제
		                                                                          AND Z.DIV_CODE  = A.DIV_CODE
		                                                                          AND Z.ORDER_NUM = A.ORDER_NUM
		                                                                          AND Z.SER_NO    = A.SER_NO
		  LEFT JOIN (--20201229 추가: 고객 요청대로 조회 데이터 묶기 위해 추가
		             SELECT ROW_NUMBER() OVER(ORDER BY MIN(PAY_TIME) )                    AS ORD_SEQ
		                  , RECEIVER_NAME + TELEPHONE_NUM2 + ISNULL(ADDRESS1, '')         AS NAME_TEL
		                  , MIN(PAY_TIME)                                                 AS PAY_TIME
		                  , COUNT(RECEIVER_NAME + TELEPHONE_NUM2 + ISNULL(ADDRESS1, ''))  AS CNT
		               FROM SOF110T WITH(NOLOCK)
		              GROUP BY RECEIVER_NAME, TELEPHONE_NUM2, ISNULL(ADDRESS1, '')) Z2 ON Z2.NAME_TEL = A.RECEIVER_NAME + A.TELEPHONE_NUM2 + ISNULL(A.ADDRESS1, '')
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND (A.ORD_STATUS = '신규주문' OR ISNULL(A.ORD_STATUS, '') = '')
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND B.ORDER_PRSN  = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		   AND B.ORDER_DATE &gt;= #{ORDER_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		   AND B.ORDER_DATE &lt;= #{ORDER_DATE_TO}
		</if>
		<if test="REGI_YN == &quot;Y&quot;">
		   AND D.COMP_CODE IS NOT NULL
		</if>
		<if test="REGI_YN == &quot;N&quot;">
		   AND D.COMP_CODE IS NULL
		   AND A.ORDER_Q - A.OUTSTOCK_Q &gt; 0
		   AND A.ORDER_STATUS = 'N'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		   AND C2.ITEM_LEVEL1= #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		   AND C2.ITEM_LEVEL2= #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		   AND C2.ITEM_LEVEL3= #{ITEM_LEVEL3}
		</if>
<!-- 20210201 추가: 조회조건 '고객분류', '주문/수령자' 추가 -->
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		   AND C1.AGENT_TYPE = #{AGENT_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">
		   AND (A.RECEIVER_NAME LIKE '%' + #{RECEIVER_NAME} + '%'
		     OR A.ORDER_NAME    LIKE '%' + #{RECEIVER_NAME} + '%')
		</if>
<!-- 20210203 추가: 수주등록(SOF100UKRV)에서 링크 넘어왔을 때 받기 위해서 추가 -->
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		   AND A.ORDER_NUM   = #{ORDER_NUM}
		</if>
<!-- 20210203 추가: 조회조건 '조달구분' 추가 -->
		<if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
		   AND C3.SUPPLY_TYPE = #{SUPPLY_TYPE}
		</if>
<!-- 20210621 추가: 엑셀다운로드(선택된 행) -->
		<if test="@foren.Ognl@isNotEmpty(ORDER_LIST)">
		   AND A.ORDER_NUM + '/' + CONVERT(NVARCHAR, A.SER_NO) IN
		<foreach collection="ORDER_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_INFO}'
		</foreach>
		</if>
		 ORDER BY Z2.ORD_SEQ, A.PAY_TIME
	</select>





<!-- 저장 로직(SRQ100T) -->
	<insert id="s_srq100ukrv_wmServiceImpl.insertLogDetail" parameterType="Map">
		/* s_srq100ukrv_wmServiceImpl.insertLogDetail */
		INSERT INTO L_SRQ100T
		     ( KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , ISSUE_REQ_NUM         , ISSUE_REQ_SEQ         , ISSUE_REQ_METH
		     , ISSUE_REQ_DATE       , DEPT_CODE             , TREE_NAME             , CUSTOM_CODE           , AGENT_TYPE
		     , INOUT_TYPE_DETAIL    , WH_CODE               , ITEM_CODE             , ISSUE_REQ_QTY         , ISSUE_REQ_PRICE
		     , ISSUE_REQ_AMT        , ISSUE_REQ_TAX_AMT     , ORDER_UNIT            , TRANS_RATE            , PRICE_YN
		     , TAX_TYPE             , DISCOUNT_RATE         , MONEY_UNIT            , EXCHANGE_RATE         , ISSUE_FOR_PRICE
		     , ISSUE_FOR_AMT        , ISSUE_REQ_PRSN        , ISSUE_DIV_CODE        , ISSUE_DATE            , ISSUE_TIME
		     , DELIVERY_TIME        , SALE_CUSTOM_CODE      , DVRY_CUST_CD          , BILL_TYPE
		     , ORDER_TYPE           , RECEIPT_PLAN_DATE     , WH_CELL_CODE          , ACCOUNT_YNC
		     , ORDER_NUM            , SER_NO                , PO_NUM                , PO_SEQ                , DO_NO
		     , DO_SEQ               , COMFIRM_DO_FLAG       , SCM_FLAG_YN           , REF_LOC               , SO_KIND
		     , CUSTOMER_ID          , RECEIVER_ID
		     , PROJECT_NO           , LOT_NO                , REMARK                , PRICE_TYPE
		     , REMARK_INTER
		     --SBC - 중량/부피단위로 수량/단가 계산하기 위한 필드
		     , WGT_UNIT             , UNIT_WGT              , VOL_UNIT              , UNIT_VOL              , ISSUE_WGT_Q
		     , ISSUE_WGT_P          , ISSUE_FOR_WGT_P       , ISSUE_VOL_Q           , ISSUE_VOL_P           , ISSUE_FOR_VOL_P
		     , INSERT_DB_USER       , INSERT_DB_TIME        , UPDATE_DB_USER        , UPDATE_DB_TIME
		) VALUES
		     ( #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{COMP_CODE}         , #{DIV_CODE}           , #{ISSUE_REQ_NUM}      , #{ISSUE_REQ_SEQ}      , '1'      --1:정상, 2:예외
		     , #{ISSUE_REQ_DATE}    , '*'                   , '*'                   , #{SITE_CODE}          , #{AGENT_TYPE}
		     , #{INOUT_TYPE_DETAIL} , #{WH_CODE}            , #{ITEM_CODE}          , #{ORDER_Q}            , #{ORDER_P}
		     , #{ORDER_PRICE}       , #{ORDER_TAX_O}        , #{ORDER_UNIT}         , #{TRANS_RATE}         , #{PRICE_YN}
		     , #{TAX_TYPE}          , #{DISCOUNT_RATE}      , #{MONEY_UNIT}         , #{EXCHANGE_RATE}      , #{ORDER_FOR_P}
		     , #{ORDER_FOR_O}       , #{ORDER_PRSN}         , #{OUT_DIV_CODE}       , #{DVRY_DATE}          , ''
		     , ''                   , #{SALE_CUST_CD}       , #{DVRY_CUST_CD}       , #{BILL_TYPE}
		     , #{ORDER_TYPE}        , #{RECEIPT_PLAN_DATE}  , #{WH_CELL_CODE}       , #{ACCOUNT_YNC}
		     , #{ORDER_NUM}         , #{SER_NO}             , #{PO_NUM}             , #{PO_SEQ}             , #{DO_NO}
		     , #{DO_SEQ}            , #{COMFIRM_DO_FLAG}    , #{SCM_FLAG_YN}        , '1'                   , #{SO_KIND}
		     , #{CUSTOMER_ID}       , #{RECEIVER_ID}
		     , #{PROJECT_NO}        , #{LOT_NO}             , #{REMARK}             , #{PRICE_TYPE}
		     , #{REMARK_INTER}
		     --SBC - 중량/부피단위로 수량/단가 계산하기 위한 필드
		     , #{WGT_UNIT}          , #{UNIT_WGT}           , #{VOL_UNIT}           , #{UNIT_VOL}           , #{ISSUE_WGT_Q}
		     , #{ISSUE_WGT_P}       , #{ISSUE_FOR_WGT_P}    , #{ISSUE_VOL_Q}        , #{ISSUE_VOL_P}        , #{ISSUE_FOR_VOL_P}
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE()
		)
	</insert>

	<update id="spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_SALES_IssueReq_WM (
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{IssueReqNum	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>





<!-- 배송의뢰 -->
	<select id="s_srq100ukrv_wmServiceImpl.selectLastSeq" parameterType="Map" resultType="Integer">
<!-- 20210422 추가: 할당 받은 대역대 여부 체크로직 추가 -->
		/* s_srq100ukrv_wmServiceImpl.selectLastSeq */
		    DECLARE @DIV_CODE     NVARCHAR(08) = ''
		          , @TABLE_ID     NVARCHAR(20) = 'SOF110T'
		          , @BASIS_DATE   NVARCHAR(08) = '29991231'
		          , @PREFIX       NVARCHAR(04) = 'WM38'

		    SELECT A.LAST_SEQ
		      FROM BAUTONOT A  WITH (NOLOCK)
		     WHERE A.comp_code  = #{S_COMP_CODE}
		       AND A.div_code   = @DIV_CODE
		       AND A.table_id   = @TABLE_ID
		       AND A.auto_man   = @PREFIX
		       AND A.basis_date = @BASIS_DATE
	</select>
	<select id="s_srq100ukrv_wmServiceImpl.makeInvoiceNum" parameterType="Map" resultType="rMap">
<!-- 운송장번호 채번 -->
		/* s_srq100ukrv_wmServiceImpl.makeInvoiceNum */
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#INVOICE_TBL'))
		    DROP TABLE #INVOICE_TBL

		CREATE TABLE #INVOICE_TBL (
		   INVOICE_NUM    NVARCHAR(20),
		   ISSUE_REQ_NUM  NVARCHAR(20),
		   ISSUE_REQ_DATE NVARCHAR(08),
		   DIV_NAME       NVARCHAR(100),
		   ZIP_CODE       NVARCHAR(06),
		   ADDR           NVARCHAR(400),
		   TELEPHON       NVARCHAR(20)
		)

		DECLARE @iCount    INT          = ${ISSUING_NUMBER}
		      , @sAUTO_NUM NVARCHAR(24)                    --20210422 수정: 20 -> 24

		WHILE(@iCount > 0)
		BEGIN
		    EXEC uniLITE.SP_GetInvoiceNum_WM #{S_COMP_CODE}, @sAUTO_NUM OUTPUT

		    INSERT #INVOICE_TBL
		    SELECT @sAUTO_NUM
		         , A.ISSUE_REQ_NUM
		         , A.ISSUE_REQ_DATE
		         , B.DIV_NAME
		         , B.ZIP_CODE
		         , B.ADDR
		         , B.TELEPHON
		      FROM      SRQ100T A WITH(NOLOCK)
		      LEFT JOIN BOR120T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                      AND B.DIV_CODE  = A.DIV_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.ORDER_NUM = #{ORDER_NUM}
		       AND A.SER_NO    = #{SER_NO}

		    SET @iCount = @iCount - 1
		END

		SELECT INVOICE_NUM, ISSUE_REQ_NUM, ISSUE_REQ_DATE, DIV_NAME, ZIP_CODE, ADDR, TELEPHON
		  FROM #INVOICE_TBL
		 ORDER BY INVOICE_NUM
	</select>
	<select id="s_srq100ukrv_wmServiceImpl.makeInvoiceNum2" parameterType="Map" resultType="rMap">
<!-- 20210309 추가: 운송장번호 채번 없이 보내는 정보 가져옴 -->
		/* s_srq100ukrv_wmServiceImpl.makeInvoiceNum2 */
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#INVOICE_TBL'))
		    DROP TABLE #INVOICE_TBL

		CREATE TABLE #INVOICE_TBL (
		   INVOICE_NUM    NVARCHAR(20),
		   ISSUE_REQ_NUM  NVARCHAR(20),
		   ISSUE_REQ_DATE NVARCHAR(08),
		   DIV_NAME       NVARCHAR(100),
		   ZIP_CODE       NVARCHAR(06),
		   ADDR           NVARCHAR(400),
		   TELEPHON       NVARCHAR(20)
		)

		DECLARE @iCount    INT          = 1

		WHILE(@iCount > 0)
		BEGIN
		    INSERT #INVOICE_TBL
		    SELECT #{INVOICE_NUM}
		         , A.ISSUE_REQ_NUM
		         , A.ISSUE_REQ_DATE
		         , B.DIV_NAME
		         , B.ZIP_CODE
		         , B.ADDR
		         , B.TELEPHON
		      FROM      SRQ100T A WITH(NOLOCK)
		      LEFT JOIN BOR120T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                      AND B.DIV_CODE  = A.DIV_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.ORDER_NUM = #{ORDER_NUM}
		       AND A.SER_NO    = #{SER_NO}

		    SET @iCount = @iCount - 1
		END

		SELECT INVOICE_NUM, ISSUE_REQ_NUM, ISSUE_REQ_DATE, DIV_NAME, ZIP_CODE, ADDR, TELEPHON
		  FROM #INVOICE_TBL
		 ORDER BY INVOICE_NUM
	</select>
	<update id="s_srq100ukrv_wmServiceImpl.insertTrnOrder" parameterType="Map" useGeneratedKeys="false">
<!-- 대한통운 interface, 20210303 수정: 임시 table에 insert 후 제일 마지막에 처리하도록 수정 -->
		/* s_srq100ukrv_wmServiceImpl.insertTrnOrder */
		INSERT INTO UNILITE.V_RCPT_WIDEMEMORY010 (
		       KEY_VALUE
		     , CUST_ID         , RCPT_YMD        , CUST_USE_NO       , RCPT_DV        , WORK_DV_CD
		     , REQ_DV_CD       , MPCK_KEY        , MPCK_SEQ
		     , CAL_DV_CD       , FRT_DV_CD
		     , CNTR_ITEM_CD    , BOX_TYPE_CD     , BOX_QTY           , FRT            , CUST_MGMT_DLCM_CD
		     /* 송화인 정보 */
		     , SENDR_NM        , SENDR_TEL_NO1   , SENDR_TEL_NO2     , SENDR_TEL_NO3
		     , SENDR_CELL_NO1  , SENDR_CELL_NO2  , SENDR_CELL_NO3
		     , SENDR_SAFE_NO1  , SENDR_SAFE_NO2  , SENDR_SAFE_NO3
		     , SENDR_ZIP_NO    , SENDR_ADDR      , SENDR_DETAIL_ADDR
		     /* 수화인 정보 */
		     , RCVR_NM
		     , RCVR_TEL_NO1    , RCVR_TEL_NO2    , RCVR_TEL_NO3
		     , RCVR_CELL_NO1   , RCVR_CELL_NO2   , RCVR_CELL_NO3
		     , RCVR_SAFE_NO1   , RCVR_SAFE_NO2   , RCVR_SAFE_NO3
		     , RCVR_ZIP_NO     , RCVR_ADDR       , RCVR_DETAIL_ADDR
		     /* 주문자 정보 */
		     , ORDRR_NM        , ORDRR_TEL_NO1   , ORDRR_TEL_NO2     , ORDRR_TEL_NO3
		     , ORDRR_CELL_NO1  , ORDRR_CELL_NO2  , ORDRR_CELL_NO3
		     , ORDRR_SAFE_NO1  , ORDRR_SAFE_NO2  , ORDRR_SAFE_NO3
		     , ORDRR_ZIP_NO    , ORDRR_ADDR      , ORDRR_DETAIL_ADDR
		     /* 송장정보 */
		     , INVC_NO         , ORI_INVC_NO     , ORI_ORD_NO
		     , COLCT_EXPCT_YMD , COLCT_EXPCT_HOUR, SHIP_EXPCT_YMD , SHIP_EXPCT_HOUR   , PRT_ST
		     , ARTICLE_AMT     , REMARK_1        , REMARK_2          , REMARK_3       , COD_YN
		     /* 상품정보 */
		     , GDS_CD          , GDS_NM          , GDS_QTY
		     --, UNIT_CD         , UNIT_NM         , GDS_AMT
		     , ETC_1           , ETC_2           , ETC_3             , ETC_4          , ETC_5
		     , DLV_DV          , RCPT_ERR_YN     , RCPT_ERR_MSG
		     , EAI_PRGS_ST     , EAI_ERR_MSG
		     , REG_EMP_ID      , REG_DTIME       , MODI_EMP_ID       , MODI_DTIME
		) VALUES (
		       #{KEY_VALUE}
		     , '30292070'      , #{ISSUE_REQ_DATE}, #{ISSUE_REQ_NUM}  , '01'           , '01'
		     , '01'            , CONCAT(CONCAT(#{ISSUE_REQ_DATE}, '_30292070_'), + #{INVOICE_NUM})    , 1
		     , '01'            , '03'
		     , '01'            , '01'            , 1                 , #{DELIV_PRICE}  , '30292070'        --20210217 수정: CUST_MGMT_DLCM_CD(발송고객코드 입력)에 {SITE_CODE} -> '30292070'
		     /* 송화인 정보 */
		     , #{SENDR_NM}     , #{SENDR_TEL_NO1}, #{SENDR_TEL_NO2}  , #{SENDR_TEL_NO3}      --전화번호
		     , ''              , ''              , ''                                        --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{SENDR_ZIP_NO} , #{SENDR_ADDR}   , #{SENDR_DETAIL_ADDR}                      --주소정보
		     /* 수화인 정보 */
		     , #{RECEIVER_NAME}
		     , #{TELEPHONE_NUM1_1}               , #{TELEPHONE_NUM1_2}, #{TELEPHONE_NUM1_3}  --전화번호
		     , #{TELEPHONE_NUM2_1}               , #{TELEPHONE_NUM2_2}, #{TELEPHONE_NUM2_3}  --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{ZIP_NUM}      , #{RCVR_ADDR}    , #{RCVR_DETAIL_ADDR}                       --주소정보
		     /* 주문자 정보 */
		     , #{ORDER_NAME}   , #{ORDER_TEL1_1} , #{ORDER_TEL1_2}   , #{ORDER_TEL1_3}       --전화번호
		     , #{ORDER_TEL2_1} , #{ORDER_TEL2_2} , #{ORDER_TEL2_3}                           --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , ''              , ''              , ''                                        --주소정보
		     /* 송장정보 */
		     , #{INVOICE_NUM}  , ''              , ''
		     , ''              , ''              , ''                , ''             , '02'               --20210217 수정: PRT_ST에 '01' -> '02' - 일반접수건(02), 반품건(01)
		     , #{ORDER_P}      , #{MSG}          , ''                , ''             , ''                 --20210513 추가: msg 추가
		     /* 상품정보 */
		     , #{ITEM_CODE}    , #{ITEM_NAME}    , #{ORDER_Q}
		     --, ''              , ''              , ''
		     , ''              , ''              , ''                , ''             , ''
		     , '01'            , 'N'             , ''
		     , '01'            , ''
		     , 'WIDEMEMORY'    , GETDATE()       , #{S_USER_ID}      , GETDATE()                             --20210217 수정: REG_EMP_ID(고객사용계정)에 {S_USER_ID} -> 'WIDEMEMORY'
		)
	</update>
<!-- 대한통운 interface, 20210303 추가: 임시 table에 insert 후 제일 마지막에 처리하도록 수정 -->
	<select id="s_srq100ukrv_wmServiceImpl.getCarriageBillData" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.getCarriageBillData */
		SELECT *
		  FROM UNILITE.V_RCPT_WIDEMEMORY010 WITH(NOLOCK)
		 WHERE KEY_VALUE = #{KeyValue}
	</select>
	<update id="s_srq100ukrv_wmServiceImpl.insertTrnOrder_confirm" parameterType="Map" useGeneratedKeys="false">
<!-- 대한통운 interface, 20210303 추가: 임시 table에 insert 후 제일 마지막에 처리하도록 수정 -->
		/* s_srq100ukrv_wmServiceImpl.insertTrnOrder_confirm */
		INSERT INTO WIDEMEMORY.V_RCPT_WIDEMEMORY010 (
		       CUST_ID         , RCPT_YMD        , CUST_USE_NO       , RCPT_DV        , WORK_DV_CD
		     , REQ_DV_CD       , MPCK_KEY        , MPCK_SEQ
		     , CAL_DV_CD       , FRT_DV_CD
		     , CNTR_ITEM_CD    , BOX_TYPE_CD     , BOX_QTY           , FRT            , CUST_MGMT_DLCM_CD
		     /* 송화인 정보 */
		     , SENDR_NM        , SENDR_TEL_NO1   , SENDR_TEL_NO2     , SENDR_TEL_NO3
		     , SENDR_CELL_NO1  , SENDR_CELL_NO2  , SENDR_CELL_NO3
		     , SENDR_SAFE_NO1  , SENDR_SAFE_NO2  , SENDR_SAFE_NO3
		     , SENDR_ZIP_NO    , SENDR_ADDR      , SENDR_DETAIL_ADDR
		     /* 수화인 정보 */
		     , RCVR_NM
		     , RCVR_TEL_NO1    , RCVR_TEL_NO2    , RCVR_TEL_NO3
		     , RCVR_CELL_NO1   , RCVR_CELL_NO2   , RCVR_CELL_NO3
		     , RCVR_SAFE_NO1   , RCVR_SAFE_NO2   , RCVR_SAFE_NO3
		     , RCVR_ZIP_NO     , RCVR_ADDR       , RCVR_DETAIL_ADDR
		     /* 주문자 정보 */
		     , ORDRR_NM        , ORDRR_TEL_NO1   , ORDRR_TEL_NO2     , ORDRR_TEL_NO3
		     , ORDRR_CELL_NO1  , ORDRR_CELL_NO2  , ORDRR_CELL_NO3
		     , ORDRR_SAFE_NO1  , ORDRR_SAFE_NO2  , ORDRR_SAFE_NO3
		     , ORDRR_ZIP_NO    , ORDRR_ADDR      , ORDRR_DETAIL_ADDR
		     /* 송장정보 */
		     , INVC_NO         , ORI_INVC_NO     , ORI_ORD_NO
		     , COLCT_EXPCT_YMD , COLCT_EXPCT_HOUR, SHIP_EXPCT_YMD , SHIP_EXPCT_HOUR   , PRT_ST
		     , ARTICLE_AMT     , REMARK_1        , REMARK_2          , REMARK_3       , COD_YN
		     /* 상품정보 */
		     , GDS_CD          , GDS_NM          , GDS_QTY
		     --, UNIT_CD         , UNIT_NM         , GDS_AMT
		     , ETC_1           , ETC_2           , ETC_3             , ETC_4          , ETC_5
		     , DLV_DV          , RCPT_ERR_YN     , RCPT_ERR_MSG
		     , EAI_PRGS_ST     , EAI_ERR_MSG
		     , REG_EMP_ID      , REG_DTIME       , MODI_EMP_ID       , MODI_DTIME
		) VALUES (
		       #{CUST_ID}      , #{RCPT_YMD}     , #{CUST_USE_NO}    , #{RCPT_DV}     , #{WORK_DV_CD}
		     , #{REQ_DV_CD}    , #{MPCK_KEY}     , #{MPCK_SEQ}
		     , #{CAL_DV_CD}    , #{FRT_DV_CD}
		     , #{CNTR_ITEM_CD} , #{BOX_TYPE_CD}  , #{BOX_QTY}        , #{FRT}         , #{CUST_MGMT_DLCM_CD}
		     /* 송화인 정보 */
		     , #{SENDR_NM}        , #{SENDR_TEL_NO1}   , #{SENDR_TEL_NO2}     , #{SENDR_TEL_NO3}
		     , #{SENDR_CELL_NO1}  , #{SENDR_CELL_NO2}  , #{SENDR_CELL_NO3}
		     , #{SENDR_SAFE_NO1}  , #{SENDR_SAFE_NO2}  , #{SENDR_SAFE_NO3}
		     , #{SENDR_ZIP_NO}    , #{SENDR_ADDR}      , #{SENDR_DETAIL_ADDR}
		     /* 수화인 정보 */
		     , #{RCVR_NM}
		     , #{RCVR_TEL_NO1}    , #{RCVR_TEL_NO2}    , #{RCVR_TEL_NO3}
		     , #{RCVR_CELL_NO1}   , #{RCVR_CELL_NO2}   , #{RCVR_CELL_NO3}
		     , #{RCVR_SAFE_NO1}   , #{RCVR_SAFE_NO2}   , #{RCVR_SAFE_NO3}
		     , #{RCVR_ZIP_NO}     , #{RCVR_ADDR}       , #{RCVR_DETAIL_ADDR}
		     /* 주문자 정보 */
		     , #{ORDRR_NM}        , #{ORDRR_TEL_NO1}   , #{ORDRR_TEL_NO2}     , #{ORDRR_TEL_NO3}
		     , #{ORDRR_CELL_NO1}  , #{ORDRR_CELL_NO2}  , #{ORDRR_CELL_NO3}
		     , #{ORDRR_SAFE_NO1}  , #{ORDRR_SAFE_NO2}  , #{ORDRR_SAFE_NO3}
		     , #{ORDRR_ZIP_NO}    , #{ORDRR_ADDR}      , #{ORDRR_DETAIL_ADDR}
		     /* 송장정보 */
		     , #{INVC_NO}         , #{ORI_INVC_NO}     , #{ORI_ORD_NO}
		     , #{COLCT_EXPCT_YMD} , #{COLCT_EXPCT_HOUR}, #{SHIP_EXPCT_YMD}    , #{SHIP_EXPCT_HOUR}   , #{PRT_ST}
		     , #{ARTICLE_AMT}     , #{REMARK_1}        , #{REMARK_2}          , #{REMARK_3}          , #{COD_YN}
		     /* 상품정보 */
		     , #{GDS_CD}          , #{GDS_NM}          , #{GDS_QTY}
		     --, UNIT_CD         , UNIT_NM         , GDS_AMT
		     , #{ETC_1}           , #{ETC_2}           , #{ETC_3}             , #{ETC_4}          , #{ETC_5}
		     , #{DLV_DV}          , #{RCPT_ERR_YN}     , #{RCPT_ERR_MSG}
		     , #{EAI_PRGS_ST}     , #{EAI_ERR_MSG}
		     , #{REG_EMP_ID}      , SYSDATE            , #{MODI_EMP_ID}       , SYSDATE
		)
	</update>

<!-- sof110t에 update1 -->
	<update id="s_srq100ukrv_wmServiceImpl.updateSof110t_invoiceNum" parameterType="Map">
		/* s_srq100ukrv_wmServiceImpl.updateSof110t_invoiceNum */
		UPDATE SOF110T
		   SET INVOICE_NUM    = #{INVOICE_NUM}
		     , INVOICE_NUM2   = #{INVOICE_NUM2}
		     , DELIV_METHOD   = #{DELIV_METHOD}     --20210201 추가
		     , RECEIVER_NAME  = #{RECEIVER_NAME}    --20210208 추가
		     , TELEPHONE_NUM1 = #{TELEPHONE_NUM1}   --20210208 추가
		     , TELEPHONE_NUM2 = #{TELEPHONE_NUM2}   --20210208 추가
		     , ORDER_TEL1     = #{ORDER_TEL1}       --20210503 추가
		     , ORDER_TEL2     = #{ORDER_TEL2}       --20210503 추가
		     , ZIP_NUM        = #{ZIP_NUM}          --20210208 추가
		     , ADDRESS1       = #{ADDRESS1}         --20210208 추가
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ORDER_NUM = #{ORDER_NUM}
		   AND SER_NO    = #{SER_NO}

<!-- 20210624 추가 - 묶음배송의 경우, bundle_no가 같고 택배배송인 데이터의 invoice_num으로 update(묶음배송이 먼저 등록 됐을 경우, 택배배송 저장 시 기 저장된 묶음배송의 정보 update하는 로직 필요) -->
		UPDATE B
		   SET B.INVOICE_NUM = #{INVOICE_NUM}
		  FROM       SOF110T A WITH(NOLOCK)
		  INNER JOIN SOF110T B WITH(NOLOCK) ON B.BUNDLE_NO     = A.BUNDLE_NO
		                                   AND B.RECEIVER_NAME = A.RECEIVER_NAME
		                                   AND B.DELIV_METHOD  = '90'
		                                   AND ISNULL(B.PA_ADDCOL_GROUPING, '') = ISNULL(A.PA_ADDCOL_GROUPING, '')
		 WHERE A.COMP_CODE              = #{S_COMP_CODE}
		   AND A.DIV_CODE               = #{DIV_CODE}
		   AND A.ORDER_NUM              = #{ORDER_NUM}
		   AND A.SER_NO                 = #{SER_NO}
		   AND ISNULL(A.BUNDLE_NO, '') != ''
	</update>
<!-- sof110t에 update2: 20210624 추가 - 묶음배송의 경우, bundle_no가 같고 택배배송인 데이터의 invoice_num으로 update -->
	<update id="s_srq100ukrv_wmServiceImpl.updateSof110t_invoiceNum2" parameterType="Map">
		/* s_srq100ukrv_wmServiceImpl.updateSof110t_invoiceNum2 */
		DECLARE @invoiceNum NVARCHAR(100) = #{INVOICE_NUM}
		    SET @invoiceNum = ISNULL(@invoiceNum, '')

		UPDATE A
		   SET A.INVOICE_NUM    = CASE WHEN ISNULL(@invoiceNum, '') = '' THEN CASE WHEN ISNULL(B.INVOICE_NUM, '') = '' THEN CONVERT(NVARCHAR(08), GETDATE(), 112)    --20210628 수정: 등록된 출하지시데이터에 송장번호 수동입력 시, 해당값이 그대로 저장되도록 로직 변경
		                                                                           ELSE ISNULL(B.INVOICE_NUM, '')
		                                                                      END
		                               ELSE @invoiceNum
		                          END
		     , A.DELIV_METHOD   = #{DELIV_METHOD}
		     , A.TELEPHONE_NUM1 = #{TELEPHONE_NUM1}
		     , A.TELEPHONE_NUM2 = #{TELEPHONE_NUM2}
		     , A.ORDER_TEL1     = #{ORDER_TEL1}
		     , A.ORDER_TEL2     = #{ORDER_TEL2}
		     , A.ZIP_NUM        = #{ZIP_NUM}
		     , A.ADDRESS1       = #{ADDRESS1}
		  FROM       SOF110T A WITH(NOLOCK)
		  LEFT  JOIN SOF110T B WITH(NOLOCK) ON B.BUNDLE_NO     = A.BUNDLE_NO
		                                   AND B.RECEIVER_NAME = A.RECEIVER_NAME
		                                   AND B.DELIV_METHOD  IN ('01', '02', '03')
		                                   AND ISNULL(B.PA_ADDCOL_GROUPING, '') = ISNULL(A.PA_ADDCOL_GROUPING, '')
		 WHERE A.COMP_CODE              = #{S_COMP_CODE}
		   AND A.DIV_CODE               = #{DIV_CODE}
		   AND A.ORDER_NUM              = #{ORDER_NUM}
		   AND A.SER_NO                 = #{SER_NO}
		   AND ISNULL(A.BUNDLE_NO, '') != ''
	</update>
<!-- 20201229 추가: IF_ORDER_LIST_PUT에 insert -->
	<update id="s_srq100ukrv_wmServiceImpl.insertIfOrderListPut" parameterType="Map">
		/* s_srq100ukrv_wmServiceImpl.insertIfOrderListPut */
		INSERT INTO IF_ORDER_LIST_PUT (
		       SOL_NO
		     , UNIQ
		     , ORI_UNIQ
		     , BUNDLE_NO
		     , ORD_STATUS
		     , SKU_CD
		     , CARR_NO
		     , CARR_NAME
		     , INVOICE_NO
		     , APPLY_FLAG
		     , APPLY_DB_USER
		     , APPLY_DB_TIME
		     , ERROR_LOG
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		)
		SELECT '9999'                    AS SOL_NO
		     , B.UNIQ                    AS UNIQ
		     , NULL                      AS ORI_UNIQ
		     , A.BUNDLE_NO
		     , '배송준비중'              AS ORD_STATUS
		     , ITEM_CODE                 AS SKU_CD
		     , '4'                       AS CARR_NO
		     , CASE WHEN A.DELIV_METHOD = '04' THEN '퀵배송'
		            WHEN A.DELIV_METHOD = '05' THEN '방문수령'
		            ELSE 'CJ대한통운'
		       END                       AS CARR_NAME
		     , INVOICE_NUM               AS INVOICE_NO
		     , 'N'                       AS APPLY_FLAG
		     , #{S_USER_ID}              AS APPLY_DB_USER
		     , GETDATE()
		     , ''                        AS ERROR_LOG
		     , #{S_USER_ID}              AS INSERT_DB_USER
		     , GETDATE()
		     , #{S_USER_ID}             AS UPDATE_DB_USER
		     , GETDATE()
		  FROM       SOF110T           A WITH(NOLOCK)
		  INNER JOIN IF_ORDER_LIST_GET B WITH(NOLOCK) ON B.BUNDLE_NO = A.BUNDLE_NO
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND ORDER_NUM    = #{ORDER_NUM}
		   AND SER_NO       = #{SER_NO}
		   AND B.ORD_STATUS = '신규주문'
	</update>





<!-- 출하지시서 출력: 20201223 추가 -->
	<select id="s_srq100ukrv_wmServiceImpl.orderReqMPrintList" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.orderReqMPrintList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.WH_CODE                                          --창고
		     , P1.TREE_NAME                   AS WH_CODE_NAME     --창고명
		     , A.ISSUE_REQ_NUM                                    --출하지시번호
		     , A.ORDER_NUM
		     , A.SER_NO 
		     , ''                             AS CUSTOM_CODE    --거래처
		     , ''                             AS CUSTOM_NAME    --거래처
		     , B1.RECEIVER_ID                 AS CUSTOM_ID      --주문자ID
		     , B1.RECEIVER_NAME               AS CUSTOM_PRSN    --주문자명(수신자)
		     , CASE WHEN ISNULL(B1.TELEPHONE_NUM1, '') = '' THEN ISNULL(B1.TELEPHONE_NUM2, '')
		            ELSE ISNULL(B1.TELEPHONE_NUM1, '')
		       END                            AS TELEPHONE_NUM  --수신자 전화번호 - 20210429 추가
		     , A.ISSUE_REQ_DATE                                 --출하지시일
		     , A.ISSUE_REQ_PRSN                                 --등록자
		     , P2.CODE_NAME                   AS WKORD_PRSN_NM  --등록자
		     , ISNULL(A.TEMPC_01, 'N')        AS TEMPC_01
		     , ISNULL(B1.BUNDLE_NO, '')       AS BUNDLE_NO

--		     , B1.SHOP_OPT_NAME                                 --옵션명
		     --20210622 추가
--		     , B1.SHOP_SALE_NAME                                --상품명
		     , CASE WHEN (B1.BUNDLE_NO LIKE 'K%' AND B1.UNIQUEID LIKE '%00') OR B1.BUNDLE_NO NOT LIKE 'K%'  THEN  B1.SHOP_OPT_NAME ELSE '' END   AS    SHOP_OPT_NAME     --옵션명
		     , CASE WHEN (B1.BUNDLE_NO LIKE 'K%' AND B1.UNIQUEID LIKE '%00') OR B1.BUNDLE_NO NOT LIKE 'K%'  THEN  B1.SHOP_SALE_NAME ELSE '' END   AS    SHOP_SALE_NAME   --상품명

		     , A.CUSTOM_CODE                  AS PURCH_CODE     --구매처
		     , C2.CUSTOM_NAME                 AS PURCH_NAME     --구매처
		     , B1.DELIV_METHOD                                  --배송방법
		     , Z2.CODE_NAME                   AS DELIV_METHOD_NM--배송방법
		     --20210203 수정: SOF110T.PAY_TIME에서 가져오도록 수정
		     --, REPLACE(Z1.PAY_TIME, '-', '.') AS PAY_TIME       --결재일자
		     , REPLACE(CONVERT(NVARCHAR(10), B1.PAY_TIME), '-', '.') AS PAY_TIME
		     , ISNULL(B1.ADDRESS1, '')
		     + ISNULL(B1.ADDRESS2, '')        AS ADDRESS        --배송지
		    --, B1.MSG                                           --배송메세지
		     , ISNULL(B1.MSG, '') + ' ' + ISNULL(B2.REMARK, '')   AS MSG                                           --배송메세지
		     , B1.INVOICE_NUM                                   --운송장 번호
		     , A.ISSUE_REQ_QTY
		     , ISNULL(A.ISSUE_REQ_AMT, 0) + ISNULL(A.ISSUE_REQ_TAX_AMT, 0) AS ORDER_SUM_O
		  INTO       #S_SRQ100T_WM
		  FROM       SRQ100T           A  WITH(NOLOCK)
		  LEFT  JOIN SOF110T           B1 WITH(NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                              AND B1.DIV_CODE    = A.DIV_CODE
		                                              AND B1.ORDER_NUM   = A.ORDER_NUM
		                                              AND B1.SER_NO      = A.SER_NO
		  LEFT  JOIN SOF100T           B2 WITH(NOLOCK) ON B2.COMP_CODE   = B1.COMP_CODE
		                                              AND B2.DIV_CODE    = B1.DIV_CODE
		                                              AND B2.ORDER_NUM   = B1.ORDER_NUM
		  INNER JOIN BCM100T           C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                              AND C2.CUSTOM_CODE = A.CUSTOM_CODE
		  INNER JOIN BSA220T           P1 WITH(NOLOCK) ON P1.COMP_CODE   = A.COMP_CODE
		                                              AND P1.TREE_CODE   = A.WH_CODE
		  LEFT  JOIN BSA100T           P2 WITH(NOLOCK) ON P2.COMP_CODE   = A.COMP_CODE
		                                              AND P2.MAIN_CODE   = 'S010'
		                                              AND P2.SUB_CODE    = A.ISSUE_REQ_PRSN
		  --20210203 수정: SOF110T.PAY_TIME에서 가져오도록 수정
		  --LEFT  JOIN IF_ORDER_LIST_GET Z1 WITH(NOLOCK) ON Z1.BUNDLE_NO   = B1.BUNDLE_NO
		  --                                            AND Z1.UNIQ        = B1.UNIQUEID
		  --                                            AND Z1.SOL_NO      = CONVERT(NUMERIC, B1.NUMBER)
		  LEFT  JOIN BSA100T           Z2 WITH(NOLOCK) ON Z2.COMP_CODE   = B1.COMP_CODE
		                                              AND Z2.MAIN_CODE   = 'ZM11'
		                                              AND Z2.SUB_CODE    = B1.DELIV_METHOD
		 WHERE A.COMP_CODE              = #{S_COMP_CODE}
		   AND A.DIV_CODE               = #{DIV_CODE}
		   AND A.ISSUE_REQ_NUM + '/' + CONVERT(NVARCHAR, A.ISSUE_REQ_SEQ) IN
		<foreach collection="ORDER_REQ_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_REQ_INFO}'
		</foreach>

		--송장번호가 같을 경우에는 메인 데이터에 MAX(ISSUE_REQ_NUM)의 데이터를 가져온다., 20210203 수정: GROUP BY 절 추가 / 필요없는 컬럼 삭제
		SELECT COMP_CODE
		     , DIV_CODE
		     --, WH_CODE
		     --, WH_CODE_NAME
		     , ISSUE_REQ_NUM
		     , CUSTOM_CODE
		     , CUSTOM_NAME
		     --, CUSTOM_PRSN
		     , MAX(CUSTOM_PRSN)     AS CUSTOM_PRSN
             , MAX(TELEPHONE_NUM)   AS TELEPHONE_NUM  --수신자 전화번호 - 20210429 추가
		     , ISSUE_REQ_DATE
		     , WKORD_PRSN_NM
		     --, BUNDLE_NO
		     , MAX(BUNDLE_NO)       AS BUNDLE_NO
		     , PURCH_CODE
		     , PURCH_NAME
		     --, DELIV_METHOD
		     --, DELIV_METHOD_NM
		     , MIN(DELIV_METHOD)    AS DELIV_METHOD
		     , MAX(DELIV_METHOD_NM) AS DELIV_METHOD_NM

		     , PAY_TIME
		     --, ADDRESS
		     --, MSG
		     , MAX(ADDRESS) AS ADDRESS
		     , ISNULL(MSG, '') AS MSG

		     , INVOICE_NUM
		     , SUM(ISSUE_REQ_QTY) AS SUM_ISSUE_REQ_QTY
		     , SUM(ORDER_SUM_O)   AS SUM_ORDER_SUM_O
		     --, SHOP_OPT_NAME
		     --, SHOP_SALE_NAME
		     , MAX(SHOP_OPT_NAME)  AS SHOP_OPT_NAME
		     , MAX(SHOP_SALE_NAME) AS SHOP_SALE_NAME
		  FROM #S_SRQ100T_WM
		 WHERE ISSUE_REQ_NUM IN ( SELECT MAX(ISSUE_REQ_NUM)
		                            FROM #S_SRQ100T_WM
		                           GROUP BY COMP_CODE, DIV_CODE, INVOICE_NUM ) 
		-- GROUP BY COMP_CODE, DIV_CODE, WH_CODE, WH_CODE_NAME, ISSUE_REQ_NUM, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_PRSN, ISSUE_REQ_DATE
		--        , WKORD_PRSN_NM, BUNDLE_NO, PURCH_CODE, PURCH_NAME, DELIV_METHOD, DELIV_METHOD_NM, PAY_TIME, ADDRESS, MSG, INVOICE_NUM
		 GROUP BY COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, CUSTOM_CODE, CUSTOM_NAME, ISSUE_REQ_DATE, WKORD_PRSN_NM, PURCH_CODE, PURCH_NAME
		        , PAY_TIME, ISNULL(MSG, ''), INVOICE_NUM -- ,SHOP_OPT_NAME, SHOP_SALE_NAME
		
	</select>
	<select id="s_srq100ukrv_wmServiceImpl.orderReqPrintList" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.orderReqPrintList */
		SELECT A.COMP_CODE
             , A.DIV_CODE
             , A.ITEM_CODE
             , C1.ITEM_NAME
             , C1.SPEC
             , C2.ORDER_UNIT
             , A.ISSUE_REQ_QTY
             , B1.SHOP_OPT_NAME
             , B1.INVOICE_NUM
             , ISNULL(A.ISSUE_REQ_AMT, 0) + ISNULL(A.ISSUE_REQ_TAX_AMT, 0) AS ORDER_SUM_O
             , ISNULL(S.TARGET_COUNT, '1')             AS TARGET_COUNT   --20210325 수정: 본품, 구성품 구분하기 위해 추가(2이면 진하게)
          FROM       SRQ100T A  WITH(NOLOCK)
          LEFT  JOIN SOF110T B1 WITH(NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                            AND B1.DIV_CODE    = A.DIV_CODE
                                            AND B1.ORDER_NUM   = A.ORDER_NUM
                                            AND B1.SER_NO      = A.SER_NO
          INNER JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                            AND C1.ITEM_CODE   = A.ITEM_CODE
          INNER JOIN BPR200T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                                            AND C2.DIV_CODE    = A.DIV_CODE
                                            AND C2.ITEM_CODE   = A.ITEM_CODE
          --20210325 수정: 본품, 구성품 구분하기 위해 추가
          LEFT  JOIN BPR000T      S  WITH(NOLOCK) ON S.COMP_CODE = C1.COMP_CODE
                                                 AND S.LEVEL1    = C1.ITEM_LEVEL1
                                                 AND S.LEVEL2    = '*'
                                                 AND S.LEVEL3    = '*'
		 WHERE A.COMP_CODE              = #{S_COMP_CODE}
		   AND A.DIV_CODE               = #{DIV_CODE}
		   AND A.ISSUE_REQ_NUM + '/' + CONVERT(NVARCHAR, A.ISSUE_REQ_SEQ) IN
		<foreach collection="ORDER_REQ_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_REQ_INFO}'
		</foreach>
	</select>

<!-- 운송장 출력: 20201223 추가 -->
	<select id="s_srq100ukrv_wmServiceImpl.getData" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.getData: 20210127 일괄 수정 */
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#CarriageBill_TBL'))
		    DROP TABLE #CarriageBill_TBL

		CREATE TABLE #CarriageBill_TBL (
		   FLAG            NVARCHAR(1),
		   COMP_CODE       NVARCHAR(08),
		   DIV_CODE        NVARCHAR(08),
		   CUSTOM_CODE     NVARCHAR(08),
		   INVOICE_NUM     NVARCHAR(100),
		   INVOICE_NUM2    NVARCHAR(4000),
		   P_RECEIPT_DATE  NVARCHAR(08),
		   RECEIVER_NAME   NVARCHAR(50),
		   TELEPHONE_NUM1  NVARCHAR(50),
		   TELEPHONE_NUM2  NVARCHAR(50),
		   RCVRADDR        NVARCHAR(200),
		   SENDR           NVARCHAR(122),
		   FRT_DV_CD       NVARCHAR(04),
		   FRT             INT,
		   SENDR_ADDR      NVARCHAR(80),
		   ITEM_NAME       NVARCHAR(200),
		   MSG             NVARCHAR(300),      --20210513 수정: 100 -> 300
		   DELIV_PRICE     NUMERIC(30, 6)
		)

		INSERT INTO #CarriageBill_TBL
		SELECT '1'
		     , A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , B1.INVOICE_NUM                                                                          --운송장 번호
		     , B1.INVOICE_NUM2                                                                         --운송장 번호2
		     , ISNULL(A.ISSUE_REQ_DATE, CONVERT(NVARCHAR(08), GETDATE(), 112))  AS P_RECEIPT_DATE      --접수번호
		     , B1.RECEIVER_NAME                                                                        --받는분성명
		     , B1.TELEPHONE_NUM1                                                                       --받는분전화번호
		     , B1.TELEPHONE_NUM2                                                                       --받는분휴대폰번호
		     , ISNULL(B1.ADDRESS1, '') + ISNULL(B1.ADDRESS2, '')                AS RCVRADDR            --받는분주소
		     , B4.DIV_NAME + ' ' + ISNULL(B4.TELEPHON, '')                      AS SENDR               --보내는분 성명 + 전화번호
		     , '선불'                                                             AS FRT_DV_CD           --운임구분코드(01:선불, 02:착불, 03:신용)
		     , 0                                                                AS FRT                 --운임
		     , ISNULL(B4.ADDR, '')                                              AS SENDR_ADDR          --보내는분 주소
		     , C1.ITEM_NAME                                                                            --상품명
		     , B1.MSG                                                                                  --배송메세지
		     , B1.DELIV_PRICE                                                                          --배송운임
		  FROM       SRQ100T A  WITH(NOLOCK)
		  LEFT  JOIN SOF110T B1 WITH(NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                    AND B1.DIV_CODE    = A.DIV_CODE
		                                    AND B1.ORDER_NUM   = A.ORDER_NUM
		                                    AND B1.SER_NO      = A.SER_NO
		  LEFT  JOIN BOR120T B4 WITH(NOLOCK) ON B4.COMP_CODE   = A.COMP_CODE
		                                    AND B4.DIV_CODE    = A.DIV_CODE
		  INNER JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                    AND C1.ITEM_CODE   = A.ITEM_CODE
		 WHERE A.COMP_CODE              = #{S_COMP_CODE}
		   AND A.DIV_CODE               = #{DIV_CODE}
		   AND A.ISSUE_REQ_NUM + '/' + CONVERT(NVARCHAR, A.ISSUE_REQ_SEQ) IN
		<foreach collection="ORDER_REQ_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_REQ_INFO}'
		</foreach>

		DECLARE @COMP_CODE       NVARCHAR(08)
		      , @DIV_CODE        NVARCHAR(08)
		      , @CUSTOM_CODE     NVARCHAR(08)
		      , @INVOICE_NUM     NVARCHAR(100)
		      , @INVOICE_NUM2    NVARCHAR(4000)
		      , @P_RECEIPT_DATE  NVARCHAR(08)
		      , @RECEIVER_NAME   NVARCHAR(50)
		      , @TELEPHONE_NUM1  NVARCHAR(50)
		      , @TELEPHONE_NUM2  NVARCHAR(50)
		      , @RCVRADDR        NVARCHAR(200)
		      , @SENDR           NVARCHAR(122)
		      , @FRT_DV_CD       NVARCHAR(04)
		      , @FRT             INT
		      , @SENDR_ADDR      NVARCHAR(80)
		      , @ITEM_NAME       NVARCHAR(200)
		      , @MSG             NVARCHAR(100)
		      , @DELIV_PRICE     NUMERIC(30, 6)

		DECLARE CarriageBillData CURSOR FOR
		    SELECT COMP_CODE
		         , DIV_CODE
		         , CUSTOM_CODE
		         , INVOICE_NUM
		         , INVOICE_NUM2
		         , P_RECEIPT_DATE
		         , RECEIVER_NAME
		         , TELEPHONE_NUM1
		         , TELEPHONE_NUM2
		         , RCVRADDR
		         , SENDR
		         , FRT_DV_CD
		         , FRT
		         , SENDR_ADDR
		         , ITEM_NAME
		         , MSG
		         , DELIV_PRICE
		      FROM #CarriageBill_TBL WITH(NOLOCK)
		     WHERE FLAG = '1'
		OPEN CarriageBillData
		FETCH NEXT FROM CarriageBillData INTO @COMP_CODE, @DIV_CODE, @CUSTOM_CODE, @INVOICE_NUM, @INVOICE_NUM2, @P_RECEIPT_DATE, @RECEIVER_NAME, @TELEPHONE_NUM1, @TELEPHONE_NUM2
		                                    , @RCVRADDR , @SENDR   , @FRT_DV_CD  , @FRT        , @SENDR_ADDR  , @ITEM_NAME     , @MSG          , @DELIV_PRICE    

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
		    INSERT INTO #CarriageBill_TBL
		    SELECT '2'
		         , @COMP_CODE        AS COMP_CODE
		         , @DIV_CODE         AS DIV_CODE
		         , @CUSTOM_CODE      AS CUSTOM_CODE
		         , value             AS INVOICE_NUM
		         , @INVOICE_NUM2     AS INVOICE_NUM2
		         , @P_RECEIPT_DATE   AS P_RECEIPT_DATE
		         , @RECEIVER_NAME    AS RECEIVER_NAME
		         , @TELEPHONE_NUM1   AS TELEPHONE_NUM1
		         , @TELEPHONE_NUM2   AS TELEPHONE_NUM2
		         , @RCVRADDR         AS RCVRADDR
		         , @SENDR            AS SENDR
		         , @FRT_DV_CD        AS FRT_DV_CD
		         , @FRT              AS FRT
		         , @SENDR_ADDR       AS SENDR_ADDR
		         , @ITEM_NAME        AS ITEM_NAME
		         , @MSG              AS MSG
		         , @DELIV_PRICE      AS DELIV_PRICE
		      FROM uniLITE.fnSplit(@INVOICE_NUM2, ',')
		    FETCH NEXT FROM CarriageBillData INTO @COMP_CODE, @DIV_CODE, @CUSTOM_CODE, @INVOICE_NUM, @INVOICE_NUM2, @P_RECEIPT_DATE, @RECEIVER_NAME, @TELEPHONE_NUM1, @TELEPHONE_NUM2
		                                        , @RCVRADDR , @SENDR   , @FRT_DV_CD  , @FRT        , @SENDR_ADDR  , @ITEM_NAME     , @MSG          , @DELIV_PRICE    
		END
		CLOSE CarriageBillData
		DEALLOCATE CarriageBillData

		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , A.INVOICE_NUM
		     , A.INVOICE_NUM2
		     , A.P_RECEIPT_DATE
		     , A.RECEIVER_NAME
		     , A.TELEPHONE_NUM1
		     , A.TELEPHONE_NUM2
		     , A.RCVRADDR
		     , A.SENDR
		     , A.FRT_DV_CD
		     , A.FRT
		     , A.SENDR_ADDR
		     --20210204 수정: 동일 송장번호일 때, 한장만 출력하기 위해서 수정
		     , SUBSTRING(MIN(B.ITEM_ACCOUNT + B.ITEM_NAME), 3, LEN(MIN(B.ITEM_ACCOUNT + B.ITEM_NAME))) AS ITEM_NAME
		     , A.MSG
		     , A.DELIV_PRICE
		  FROM       #CarriageBill_TBL A WITH(NOLOCK)
		  INNER JOIN BPR200T           B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                             AND B.DIV_CODE  = A.DIV_CODE
		                                             AND B.ITEM_NAME = A.ITEM_NAME
		 WHERE A.FLAG = '2'
		 --20210204 수정: 동일 송장번호일 때, 한장만 출력하기 위해서 수정
		 GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.INVOICE_NUM, A.INVOICE_NUM2, A.P_RECEIPT_DATE, A.RECEIVER_NAME
		        , A.TELEPHONE_NUM1, A.TELEPHONE_NUM2, A.RCVRADDR, A.SENDR, A.FRT_DV_CD, A.FRT, A.SENDR_ADDR, A.MSG, A.DELIV_PRICE
	</select>
	<select id="s_srq100ukrv_wmServiceImpl.printCarriageBillData" parameterType="Map" resultType="rMap">
		{call PKG_RVAP_ADDRSEARCH.PR_RVAP_SEARCHADDRESS (
		    #{P_CLNTNUM				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLNTMGMCUSTCD		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_PRNGDIVCD			, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CGOSTS				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{RCVRADDR				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ZIPNUM				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ZIPID				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_OLDADDRESS			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_OLDADDRESSDTL		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NEWADDRESS			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NESADDRESSDTL		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ETCADDR				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_SHORTADDR			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFADDR			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVBRANCD		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVBRANNM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLCBRANSHORTNM	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNUM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNM			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNICKNM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFCD				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFNM				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_SUBCLSFCD			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_RSPSDIV				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NEWADDRYN			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ERRORCD				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ERRORMSG			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</select>




<!-- 20210208 추가: 출하지시서 출력 후, 상태값 update -->
	<update id="s_srq100ukrv_wmServiceImpl.updatePrintStatus" parameterType="Map">
		/* s_srq100ukrv_wmServiceImpl.updatePrintStatus */
		UPDATE SRQ100T
		   SET PRINT_YN = 'Y'
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND DIV_CODE      = #{DIV_CODE}
		   AND ISSUE_REQ_NUM + '/' + CONVERT(NVARCHAR, ISSUE_REQ_SEQ) IN
		<foreach collection="ORDER_REQ_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_REQ_INFO}'
		</foreach>
	</update>










<!-- 20210310 추가: 수동 cj interface -->
	<select id="s_srq100ukrv_wmServiceImpl.CJ_interface" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.CJ_interface */
		SELECT *
		  FROM UNILITE.V_RCPT_WIDEMEMORY010 WITH(NOLOCK)
		 WHERE REG_DTIME > #{REG_DATE}
		   and key_value = #{KEY_VALUE}
	</select>





<!-- 20210618 추가: 선택된 데이터만 엑셀 다운로드 하는 기능을 구현하기 위해 추가(사용 안 함 - 공통 프로세스로직 사용하도록 변경) -->
	<select id="s_srq100ukrv_wmServiceImpl.makeExcel" parameterType="Map" resultType="rMap">
		/* s_srq100ukrv_wmServiceImpl.makeExcel */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ORDER_NUM
		     , A.SER_NO
		     , B.CUSTOM_CODE        AS SITE_CODE
		     , C1.CUSTOM_NAME       AS SITE_NAME
		     , A.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , A.ORDER_UNIT
		     , A.DVRY_DATE
		     , A.DVRY_TIME
		     , A.ORDER_Q
		     , A.ORDER_P
		     , A.ORDER_O            AS ORDER_PRICE
		     , A.ORDER_TAX_O
		     , A.PRICE_YN
		     , A.TAX_TYPE
		     , A.DISCOUNT_RATE
		     , A.ORDER_UNIT_Q
		     , A.TRANS_RATE
		     , A.HS_NO
		     , A.CLOSE_REMARK
		     , A.CLOSE_ID
		     , A.CLOSE_DATE
		     , A.OUT_DIV_CODE
		     , A.SALE_CUST_CD
		     , A.DVRY_CUST_CD
		     , A.WEEK_NUM
		     , A.INIT_DVRY_DATE
		     , A.ORDER_STATUS
		     , A.DEAD_LINE_STATUS
		     , A.ADVAN_AMOUNT
		     , A.ISSUE_REQ_Q
		     , A.OUTSTOCK_Q
		     , A.RETURN_Q
		     , A.SALE_Q
		     , A.PAB_STOCK_Q
		     , A.BASE_DATE
		     , A.LC_NUM
		     , A.PROD_END_DATE
		     , A.PROD_Q
		     , A.PROD_PLAN_Q
		     , A.PROD_REF_YN
		     , A.MPS_REF_YN
		     , A.ACCOUNT_YNC
		     , A.ESTI_NUM
		     , A.ESTI_SEQ
		     , A.SCM_FLAG_YN
		     , A.PO_NUM
		     , A.PO_SEQ
		     , A.PO_DATE
		     , A.PO_QTY
		     , A.EXP_ISSUE_DATE
		     , A.PREV_ORDER_Q
		     , A.PROJECT_NO
		     , A.PJT_CODE
		     , A.REMARK
		     , A.LOT_NO
		     , A.REASON
		     , A.LAB_NO
		     , A.REQST_ID
		     , A.SAMPLE_KEY
		     , A.SO_NUM
		     , A.SO_SEQ
		     , A.PROMO_NUM
		     , A.SO_TYPE
		     , A.SO_ITEM_SEQ
		     , A.SO_KIND
		     , A.BASIS_P
		     , A.EXTRA_Q
		     , A.BASIS_Q
		     , A.GIFT_KIND
		     , A.CUSTOMER_ID
		     , A.RECEIVER_ID
		     , A.RECEIVER_NAME
		     , A.TELEPHONE_NUM1
		     , A.TELEPHONE_NUM2
		     , A.FAX_NUM
		     , A.ZIP_NUM
		     , A.ADDRESS1 + ISNULL(A.ADDRESS2, '')    AS ADDRESS1
		     , A.ITEM_GUBUN
		     , A.PROD_ITEM_CODE
		     , A.INVOICE_NUM
		     , A.PRICE_TYPE
		     , A.WGT_UNIT
		     , A.UNIT_WGT
		     , A.VOL_UNIT
		     , A.UNIT_VOL
		     , A.ORDER_WGT_Q
		     , A.ORDER_WGT_P
		     , A.ORDER_VOL_Q
		     , A.ORDER_VOL_P
		     , ISNULL(A.WH_CODE, C3.WH_CODE)          AS WH_CODE
		     , A.REASON1
		     , A.REASON2
		     , A.REASON3
		     , A.REASON4
		     , A.MICROBE_DATE
		     , A.EXPECTED_END_DATE
		     , A.PRICE_PER_GRAM
		     , A.PRICE_WEIGHT
		     , CASE WHEN ISNULL(A.ORDER_FOR_P, 0) = 0 THEN A.ORDER_P ELSE A.ORDER_FOR_P END ORDER_FOR_P
		     , CASE WHEN ISNULL(A.ORDER_FOR_O, 0) = 0 THEN A.ORDER_O ELSE A.ORDER_FOR_O END ORDER_FOR_O
		     , A.PACK_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , A.REMARK_INTER
		     , A.CLOSE_YN
		     , A.CLOSE_REASON
		     , A.ISSUE_PLAN_NUM
		     , A.ISSUE_REQ_YN
		     , A.UPN_CODE
		     , A.ORD_STATUS
		     --, A.DELIV_METHOD
		     , ISNULL(Z3.CODE_NAME, '')               AS DELIV_METHOD
		     , A.DELIV_PRICE
		     , A.ORDER_NAME
		     , A.ORDER_TEL1
		     , A.ORDER_TEL2
		     , A.ORDER_MAIL
		     , A.MSG
		     , A.SENDER_CODE
		     , A.SENDER
		     , A.CUSTOMER_ID2
		     , A.SHOP_ORD_NO
		     , A.SHOP_SALE_NO
		     , A.SHOP_SALE_NAME
		     , A.SHOP_OPT_NAME
		     , A.UNIQUEID
		     , A.NUMBER
		     , D.ISSUE_REQ_NUM
		     , D.ISSUE_REQ_SEQ
		     , CASE WHEN ISNULL(D.ISSUE_REQ_DATE, '') = '' THEN #{ISSUE_REQ_DATE}
		            ELSE ISNULL(D.ISSUE_REQ_DATE, '')
		       END                                        AS ISSUE_REQ_DATE
		     , B.ORDER_DATE
		     , C1.AGENT_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , B.MONEY_UNIT
		     , B.EXCHG_RATE_O                             AS EXCHANGE_RATE
		     , B.ORDER_PRSN
		     , B.BILL_TYPE
		     , B.ORDER_TYPE
		     , B.PROJECT_NO
		     , CASE WHEN ISNULL(A.INVOICE_NUM, '') = '' THEN CASE WHEN C3.PACK_TYPE = 'A' THEN A.ORDER_Q
		                                                          ELSE 1
		                                                     END + ISNULL(A_COUNT, 0) 
		            ELSE (SELECT COUNT(*) FROM unilite.fnSplit(A.INVOICE_NUM2, ','))
		       END                                        AS ISSUING_NUMBER
		     , A.INVOICE_NUM                              --운송장번호1
		     , A.INVOICE_NUM2                             --운송장번호2
		     , CASE WHEN LEN(ISNULL(A.INVOICE_NUM, '')) = 8 OR ISNULL(A.INVOICE_NUM, '') = ''  THEN 'N'
		            ELSE 'Y'
		       END                                        AS TRNS_YN
		     , A.BUNDLE_NO
		     , A.PAY_TIME
		     , ISNULL(D.PRINT_YN, 'N')                    AS PRINT_YN
		     , CASE WHEN ISNULL(D2.COMP_CODE, '') = '' THEN 'N'
		            ELSE 'Y'
		       END                                        AS WKORD_YN
		     , ISNULL(D2.WKORD_NUM, '')                   AS WKORD_NUM
		  FROM       SOF110T A  WITH(NOLOCK)
		  INNER JOIN SOF100T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                    AND B.DIV_CODE     = A.DIV_CODE
		                                    AND B.ORDER_NUM    = A.ORDER_NUM
		  INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                    AND C1.CUSTOM_CODE = B.CUSTOM_CODE
		  INNER JOIN BPR100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                    AND C2.ITEM_CODE   = A.ITEM_CODE
		  INNER JOIN BPR200T C3 WITH(NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                    AND C3.DIV_CODE    = A.DIV_CODE
		                                    AND C3.ITEM_CODE   = A.ITEM_CODE
		  LEFT  JOIN SRQ100T D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                    AND D.DIV_CODE     = A.DIV_CODE
		                                    AND D.ORDER_NUM    = A.ORDER_NUM
		                                    AND D.SER_NO       = A.SER_NO
		  LEFT  JOIN PMP100T D2 WITH(NOLOCK) ON D2.COMP_CODE   = A.COMP_CODE
		                                    AND D2.DIV_CODE    = A.DIV_CODE
		                                    AND D2.SO_NUM      = A.ORDER_NUM
		                                    AND D2.SO_SEQ      = A.SER_NO
		  LEFT JOIN (
		              SELECT A.COMP_CODE
		                   , A.DIV_CODE
		                   , A.ORDER_NUM
		                   , A.SER_NO
		                   , SUM(A.UNIT_Q)     AS A_COUNT
		                FROM       SOF100T      Z
		                INNER JOIN S_SOF115T_WM A WITH(NOLOCK) ON A.COMP_CODE = Z.COMP_CODE
		                                                      AND A.DIV_CODE  = Z.DIV_CODE
		                                                      AND A.ORDER_NUM = Z.ORDER_NUM
		                INNER JOIN BPR200T      B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.DIV_CODE  = A.DIV_CODE
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		                WHERE A.COMP_CODE   = #{S_COMP_CODE}
		                  AND A.DIV_CODE    = #{DIV_CODE}
		              <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		                  AND Z.ORDER_PRSN  = #{ORDER_PRSN}
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		                  AND Z.ORDER_DATE &gt;= #{ORDER_DATE_FR}
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		                  AND Z.ORDER_DATE &lt;= #{ORDER_DATE_TO}
		              </if>
		                  AND B.PACK_TYPE  = 'A'
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.SER_NO) Z ON Z.COMP_CODE = A.COMP_CODE   --20210309 수정: , A.UNIT_Q 삭제
		                                                                          AND Z.DIV_CODE  = A.DIV_CODE
		                                                                          AND Z.ORDER_NUM = A.ORDER_NUM
		                                                                          AND Z.SER_NO    = A.SER_NO
		  LEFT JOIN (--고객 요청대로 조회 데이터 묶기 위해 추가
		             SELECT ROW_NUMBER() OVER(ORDER BY MIN(PAY_TIME) )                    AS ORD_SEQ
		                  , RECEIVER_NAME + TELEPHONE_NUM2 + ISNULL(ADDRESS1, '')         AS NAME_TEL
		                  , MIN(PAY_TIME)                                                 AS PAY_TIME
		                  , COUNT(RECEIVER_NAME + TELEPHONE_NUM2 + ISNULL(ADDRESS1, ''))  AS CNT
		               FROM SOF110T WITH(NOLOCK)
		              GROUP BY RECEIVER_NAME, TELEPHONE_NUM2, ISNULL(ADDRESS1, '')) Z2 ON Z2.NAME_TEL = A.RECEIVER_NAME + A.TELEPHONE_NUM2 + ISNULL(A.ADDRESS1, '')
		  LEFT  JOIN BSA100T Z3 WITH(NOLOCK) ON Z3.COMP_CODE   = A.COMP_CODE
		                                    AND Z3.MAIN_CODE   = 'ZM11'
		                                    AND Z3.SUB_CODE    = A.DELIV_METHOD
		              
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND (A.ORD_STATUS = '신규주문' OR ISNULL(A.ORD_STATUS, '') = '')
		   AND A.ORDER_NUM + '/' + CONVERT(NVARCHAR, A.SER_NO) IN
		<foreach collection="ORDER_LIST" item="item" separator="," close=")" open="(">
		                            '${item.ORDER_INFO}'
		</foreach>
		 ORDER BY Z2.ORD_SEQ, A.PAY_TIME
	</select>
</mapper>