<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mtr200ukrv_wmServiceImpl">
	<select id="s_mtr200ukrv_wmServiceImpl.selectInoutType" parameterType="Map" resultType="rMap">
		SELECT COMP_CODE
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'M104'
		   AND SUB_CODE != '$'
		   AND SUB_CODE = #{INOUT_TYPE_DETAIL}
		   AND ISNULL(REF_CODE5,'N') = 'Y'
	</select>

	<select id="s_mtr200ukrv_wmServiceImpl.selectreleaseNoMasterList" parameterType="Map" resultType="rMap">
		/* s_mtr200ukrv_wmServiceImpl.selectreleaseNoMasterList (검색팝업쿼리) */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT DISTINCT
		           A.WH_CODE
		         , A.WH_CELL_CODE
		         , B.WH_CELL_NAME
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END) AS INOUT_DATE
		         , A.INOUT_CODE_TYPE
		         , A.INOUT_CODE
		         , (CASE A.INOUT_CODE_TYPE WHEN '4' THEN C.CUSTOM_NAME
		                                   WHEN '1' THEN D.TREE_NAME
		                                   WHEN '2' THEN E1.TREE_NAME
		                                   WHEN '3' THEN E.TREE_NAME
		             END) AS INOUT_NAME
		         , A.INOUT_PRSN
		         , A.INOUT_TYPE
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.LOT_NO
		         , A.PROJECT_NO
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN F.ITEM_NAME2
		                                     ELSE F.ITEM_NAME
		             END) AS ITEM_NAME
		         , F.SPEC
		         , A.INOUT_Q
		         , Z.WKORD_NUM               --20210325 추가
		      FROM            BTR100T AS A  WITH(NOLOCK)
		           LEFT  JOIN BSA225T AS B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                AND B.DIV_CODE     = A.DIV_CODE
		                                                AND B.WH_CODE      = A.WH_CODE
		                                                AND B.WH_CELL_CODE = A.WH_CELL_CODE
		           LEFT  JOIN BCM100T AS C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                AND C.CUSTOM_CODE  = A.INOUT_CODE
		           LEFT  JOIN BSA210T AS D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                AND D.TYPE_LEVEL   = A.DIV_CODE
		                                                AND D.TREE_CODE    = A.INOUT_CODE
		           LEFT  JOIN BSA230T AS E  WITH(NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                AND E.TYPE_LEVEL   = A.DIV_CODE
		                                                AND E.TREE_CODE    = A.INOUT_CODE
		           LEFT  JOIN BSA220T AS E1 WITH(NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
		                                                AND E1.TYPE_LEVEL  = A.DIV_CODE
		                                                AND E1.TREE_CODE   = A.INOUT_CODE
		           INNER JOIN BPR100T AS F  WITH(NOLOCK) ON F.COMP_CODE    = A.COMP_CODE
		                                                AND F.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN PMP200T AS Z  WITH(NOLOCK) ON Z.COMP_CODE    = A.COMP_CODE
		                                                AND Z.DIV_CODE     = A.DIV_CODE
		                                                AND Z.INOUT_NUM    = A.INOUT_NUM
		                                                AND Z.INOUT_SEQ    = A.INOUT_SEQ
		     WHERE A.COMP_CODE              = @CompCode
		       AND A.INOUT_TYPE            IN ('2', '3')
		       AND A.CREATE_LOC            IN ('2', '3')
		       AND A.INOUT_CODE_TYPE       != '5'
		       AND ISNULL(A.ORDER_TYPE,'') != '4'
		       AND ISNULL(Z.INOUT_NUM,'')  != ''
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE               = #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		       AND A.INOUT_DATE            &gt;= #{FR_INOUT_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		       AND A.INOUT_DATE            &lt;= #{TO_INOUT_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
		       AND A.INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WORK_SHOP)">
		       AND A.INOUT_CODE             = #{INOUT_CODE_WORK_SHOP}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_DEPT)">
		       AND A.INOUT_CODE             = #{INOUT_CODE_DEPT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WH)">
		       AND A.INOUT_CODE             = #{INOUT_CODE_WH}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		       AND A.WH_CODE                = #{WH_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		       AND A.INOUT_PRSN             = #{INOUT_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		       AND A.WH_CELL_CODE           = #{WH_CELL_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		       AND A.LOT_NO              LIKE #{LOT_NO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO          LIKE #{PROJECT_NO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE           LIKE #{ITEM_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN F.ITEM_NAME2
		                                     ELSE F.ITEM_NAME
		             END)                LIKE '%' + #{ITEM_NAME}    + '%'
		    </if>
<!-- 20210325 추가: 검색조건 '작업지시번호' 추가 -->
		    <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		       AND Z.WKORD_NUM           LIKE '%' + #{WKORD_NUM} + '%'
		    </if>
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</select>

	<select id="s_mtr200ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
        /* s_mtr200ukrv_wmServiceImpl.selectList (메인조회쿼리) */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
                  , @UserId         NVARCHAR(100) /* 사용자ID    */
                  , @LangType       NVARCHAR(2)  /* 언어구분    */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                  , @SumType        NVARCHAR(10)

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            SELECT TOP 1 @SumType = ISNULL(MAX(SUB_CODE), '')
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B084'
               AND REF_CODE1 = N'Y'

            /* 데이터 조회 */
            SELECT 'U'                                                       AS SAVE_FLAG
                 , A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.INOUT_METH
                 , A.INOUT_TYPE_DETAIL
                 , A.DIV_CODE
                 , A.INOUT_CODE
                 , (CASE WHEN A.INOUT_CODE_TYPE = '1' THEN C1.TREE_NAME END) AS INOUT_NAME2-- 부서
                 , (CASE WHEN A.INOUT_CODE_TYPE = '2' THEN C2.TREE_NAME END) AS INOUT_NAME  -- 창고
                 , (CASE WHEN A.INOUT_CODE_TYPE = '3' THEN C3.TREE_NAME END) AS INOUT_NAME1 -- 작업장
                 , A.ITEM_CODE
                 , A.ITEM_CODE                                               AS OLD_ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                     END)   AS ITEM_NAME
                 , C.SPEC
                 , C.STOCK_UNIT
                 , G.PATH_CODE
                 , uniLITE.fnFormat(@CompCode, ISNULL(G.OUTSTOCK_REQ_Q, 0) - ISNULL(G.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS NOT_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS INOUT_Q
                 , A.ITEM_STATUS
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS ORIGINAL_Q
                 ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')  AS GOOD_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')   AS BAD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
                        THEN  uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')
                        ELSE  uniLITE.fnFormat(@CompCode, ISNULL(C5.GOOD_STOCK_Q,0), 'M_FSET_QS')
                   END  AS GOOD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
                        THEN uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')
                        ELSE uniLITE.fnFormat(@CompCode, ISNULL(C5.BAD_STOCK_Q,0), 'M_FSET_QS')
                   END  AS BAD_STOCK_Q
                 , A.BASIS_NUM
                 , A.BASIS_SEQ
                 , A.INOUT_TYPE
                 , A.INOUT_CODE_TYPE
                 , A.WH_CODE
                 , A.WH_CELL_CODE
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END)                                           AS INOUT_DATE
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0), 'M_FSET_QS')      AS INOUT_P
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0), 'M_FSET_QS')      AS INOUT_I
                 , A.MONEY_UNIT
                 , A.INOUT_PRSN
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0), 'M_FSET_QS')    AS ACCOUNT_Q
                 , A.ACCOUNT_YNC
                 , ISNULL(A.CREATE_LOC, '')                                            AS CREATE_LOC
                 , A.ORDER_NUM
                 , A.REMARK
                 , A.PROJECT_NO
                 , A.LOT_NO
                 , A.SALE_DIV_CODE
                 , A.SALE_CUSTOM_CODE
                 , A.BILL_TYPE
                 , A.SALE_TYPE
                 , A.COMP_CODE
                 , H.OUTSTOCK_NUM           					 AS ARRAY_OUTSTOCK_NUM       -- 출고요청번호(ARRAY DATA)
                 , ISNULL(H.REF_WKORD_NUM, A.ORDER_NUM)          AS ARRAY_REF_WKORD_NUM      -- 작업지시번호(ARRAY DATA)
                 , H.OUTSTOCK_REQ_Q         					 AS ARRAY_OUTSTOCK_REQ_Q     -- 출고요청량  (ARRAY DATA)
                 , H.OUTSTOCK_Q             					 AS ARRAY_OUTSTOCK_Q         -- 출고량      (ARRAY DATA)
                 , H.REMARK                 					 AS ARRAY_REMARK             -- 비고        (ARRAY DATA)
                 , H.PROJECT_NO             					 AS ARRAY_PROJECT_NO         -- 프로젝트번호(ARRAY DATA)
                 , H.LOT_NO                 					 AS ARRAY_LOT_NO             -- LOT 번호    (ARRAY DATA)
                 , C4.LOT_YN                					 AS LOT_YN                   -- LOT 관리여부
                 , A.ORDER_NUM
                 , A.ORDER_SEQ
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , A.INSERT_DB_USER  --20210326 추가
                 , A.INSERT_DB_TIME  --20210326 추가
            FROM              BTR100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                      AND C.ITEM_CODE      = A.ITEM_CODE
                   INNER JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
                                                      AND C4.DIV_CODE      = A.DIV_CODE
                                                      AND C4.ITEM_CODE     = A.ITEM_CODE
                   LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.DIV_CODE       = A.DIV_CODE
                                                      AND D.WH_CODE        = A.WH_CODE
                                                      AND D.ITEM_CODE      = A.ITEM_CODE
                   LEFT  JOIN (SELECT A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                                    , SUM(ISNULL(B.OUTSTOCK_REQ_Q, 0))  AS OUTSTOCK_REQ_Q
                                    , SUM(ISNULL(B.OUTSTOCK_Q, 0))      AS OUTSTOCK_Q
                               FROM              PMP350T A WITH (NOLOCK)
                                      INNER JOIN PMP300T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
                                                                        AND A.DIV_CODE      = B.DIV_CODE
                                                                        AND A.OUTSTOCK_NUM  = B.OUTSTOCK_NUM
                                                                        AND A.REF_WKORD_NUM = B.REF_WKORD_NUM
                                                                        AND A.ITEM_CODE     = B.ITEM_CODE
                               WHERE  A.COMP_CODE = @CompCode
                            <if test="@foren.Ognl@isEmpty(DIV_CODE)">
                               AND    A.DIV_CODE  = #{DIV_CODE}
                            </if>
                            <if test="@foren.Ognl@isEmpty(INOUT_NUM)">
                               AND    A.INOUT_NUM = #{INOUT_NUM}
                            </if>
                               GROUP BY A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE
                                      , A.PATH_CODE) G ON G.COMP_CODE      = A.COMP_CODE
                                                      AND G.DIV_CODE       = A.DIV_CODE
                                                      AND G.INOUT_NUM      = A.INOUT_NUM
                                                      AND G.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND G.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN uniLITE.fnArrayOutStockReq(@CompCode, #{DIV_CODE}, #{INOUT_NUM}, 0) H
                                                       ON H.COMP_CODE      = A.COMP_CODE
                                                      AND H.DIV_CODE       = A.DIV_CODE
                                                      AND H.INOUT_NUM      = A.INOUT_NUM
                                                      AND H.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND H.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN BSA210T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
                                                      AND C1.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C1.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
                                                      AND C2.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C2.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA230T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
                                                      AND C3.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C3.TREE_CODE     = A.INOUT_CODE
				  LEFT JOIN BIV150TV C5 WITH (NOLOCK) ON C5.COMP_CODE     = A.COMP_CODE
													  AND C5.ITEM_CODE	  = A.ITEM_CODE
													  AND C5.WH_CODE	  = A.WH_CODE
													  AND C5.WH_CELL_CODE = ISNULL(A.WH_CELL_CODE,'')
													  AND C5.LOT_NO		  = ISNULL(A.LOT_NO,'')
													  AND C5.SUM_TYPE   = @SumType
            WHERE  A.COMP_CODE        = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND    A.DIV_CODE         = #{DIV_CODE}
            </if>
            AND    A.INOUT_TYPE      IN ('2', '3')
            AND    A.CREATE_LOC      IN ('2', '3')
            AND    A.INOUT_CODE_TYPE != '4'
            <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
            AND    A.INOUT_NUM        = #{INOUT_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND    A.LOT_NO        LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
            AND    A.PROJECT_NO    LIKE #{PROJECT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
            AND    (CASE WHEN @RefItem = N'1' THEN C.ITEM_NAME1
                         WHEN @RefItem = N'2' THEN C.ITEM_NAME2
                                              ELSE C.ITEM_NAME
                     END)          LIKE  #{ITEM_NAME}+ '%'
            </if>
            ORDER BY A.INOUT_NUM, A.INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
	</select>

<!-- 예약 참조 -->
	<select id="s_mtr200ukrv_wmServiceImpl.selectrefList" parameterType="Map" resultType="rMap">
		/* s_mtr200ukrv_wmServiceImpl.selectrefList(자재출고 예약참조 참조) */
		SET NOCOUNT ON
		    DECLARE @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
		          , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
		          , @WORK_SHOP_CODE         NVARCHAR(08)            -- (선택) 작업장
		          , @REQ_FR_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
		          , @REQ_TO_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
		          , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
		          , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
		          , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
		          , @WKORD_NUM              NVARCHAR(20)            -- (선택) 작업지시번호
		          , @MAIN_WH_CODE           NVARCHAR(08)            -- (필수) 주창고
		          , @USER_ID                NVARCHAR(100)           -- (필수) 사용자ID

		    SET @COMP_CODE              = #{S_COMP_CODE}
		    SET @DIV_CODE               = #{DIV_CODE}
		    SET @WORK_SHOP_CODE         = ''
		    SET @REQ_FR_DATE            = #{REQ_FR_DATE}
		    SET @REQ_TO_DATE            = #{REQ_TO_DATE}
		    SET @OUT_WH_CODE            = #{OUT_WH_CODE}
		    SET @ITEM_CODE              = #{ITEM_CODE}
		    SET @ITEM_NAME              = #{ITEM_NAME}
		    SET @WKORD_NUM              = #{WKORD_NUM}
		    SET @MAIN_WH_CODE           = #{MAIN_WH_CODE}
		    SET @USER_ID                = #{S_USER_ID}

		    DECLARE  @RefItem        NVARCHAR(01)             -- 사용자 품목명 참조 유형

		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND USER_ID   = @USER_ID
		    
		    SET @RefItem = ISNULL(@RefItem, '0')

		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.WORK_SHOP_CODE
		         , C4.TREE_NAME                                                             AS WORK_SHOP_NAME
		         , CASE WHEN ISNULL(A.WH_CODE, '') = '' THEN
		                     CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
		                          ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
		                     END
		                ELSE A.WH_CODE
		           END                                                                      AS WORK_WH_CODE
		         , C5.TREE_NAME                                                             AS WORK_WH_NAME
		         , (SELECT TOP 1 WH_CELL_CODE
		              FROM BSA230T WITH(NOLOCK)
		             WHERE COMP_CODE  = @COMP_CODE
		               AND TYPE_LEVEL = @DIV_CODE
		               AND TREE_CODE  = A.WORK_SHOP_CODE
		               AND WH_CODE    = (CASE WHEN ISNULL(A.WH_CODE, '') = '' THEN CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
		                                                                                ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
		                                                                           END
		                                      ELSE A.WH_CODE
		                                 END))                                              AS WORK_WH_CELL_CODE
		         , ''                                                                       AS WORK_WH_CELL_NAME
		         , A.ITEM_CODE
		         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                ELSE                     C1.ITEM_NAME
		           END                                                                      AS ITEM_NAME
		         , C1.SPEC
		         , C1.STOCK_UNIT
		         , A.PATH_CODE
		         , uniLITE.fnGetUserDate(A.COMP_CODE, C.PRODT_WKORD_DATE)                  AS OUTSTOCK_REQ_DATE
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.ALLOCK_Q, 0),     'M_FSET_QS')    AS OUTSTOCK_REQ_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.PRODT_Q, 0),      'M_FSET_QS')    AS OUTSTOCK_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.ALLOCK_Q, 0)
		                                      - ISNULL(A.PRODT_Q, 0),      'M_FSET_QS')    AS NOT_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.STOCK_Q, 0),      'M_FSET_QS')    AS STOCK_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0), 'M_FSET_QS')    AS GOOD_STOCK_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.BAD_STOCK_Q, 0),  'M_FSET_QS')    AS BAD_STOCK_Q
		         , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.AVERAGE_P, 0),    'M_FSET_PS')    AS AVERAGE_P
		         , C2.WH_CODE                                                              AS MAIN_WH_CODE
		         , C7.TREE_NAME                                                            AS MAIN_WH_NAME
		         , C8.WH_CELL_CODE                                                         AS WH_CELL_CODE
		         , A.OUTSTOCK_NUM                                                          --출고요청번호
		         , C.WKORD_STATUS                                                          AS CONTROL_STATUS
		         , uniLITE.fnFormat(@COMP_CODE, 0, 'M_FSET_QS')                            AS CANCEL_Q
		         , A.REMARK
		         , A.PROJECT_NO
		         , @OUT_WH_CODE                                                            AS WH_CODE
		         , A.WKORD_NUM
		         , A.WKORD_NUM                                                             AS REF_WKORD_NUM
		         , ISNULL(C.LOT_NO, '')                                                    AS WK_LOT_NO
		         , ISNULL(C.REMARK, '')                                                    AS WK_REMARK
		         , ISNULL(C.PROJECT_NO, '')                                                AS WK_PROJECT_NO
		         , C.ITEM_CODE                                                             AS PROD_ITEM_CODE
		         , C2.LOT_YN
		         , CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
		                WHEN @RefItem = '1' THEN C3.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C3.ITEM_NAME2
		                ELSE                     C3.ITEM_NAME
		           END                                                                     AS PROD_ITEM_NAME
		         , C.SO_NUM                                                                AS ORDER_NUM
		         , C.SO_SEQ                                                                AS ORDER_SEQ
		         , (SELECT PAB_STOCK_Q
		              FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, C.PRODT_WKORD_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
		      FROM        PMP200T      A  WITH (NOLOCK) 
		      LEFT  JOIN  PMP100TV1    C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                               AND C.DIV_CODE      = A.DIV_CODE
		                                               AND C.WKORD_NUM     = A.WKORD_NUM
		      LEFT  JOIN  BIV100T      D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                               AND D.DIV_CODE      = A.DIV_CODE
		                                               AND D.ITEM_CODE     = A.ITEM_CODE
		                                               AND D.WH_CODE       = @OUT_WH_CODE
		      INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                               AND C1.ITEM_CODE    = A.ITEM_CODE
		      INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                               AND C2.DIV_CODE     = A.DIV_CODE
		                                               AND C2.ITEM_CODE    = A.ITEM_CODE
		      LEFT  JOIN  BPR100T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = C.COMP_CODE
		                                               AND C3.ITEM_CODE    = C.ITEM_CODE
		      INNER JOIN  BSA230T      C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
		                                               AND C4.TYPE_LEVEL   = A.DIV_CODE
		                                               AND C4.TREE_CODE    = A.WORK_SHOP_CODE
		      LEFT  JOIN  BSA220T      C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
		                                               AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
		                                               AND C5.TREE_CODE    = CASE WHEN ISNULL(A.WH_CODE, '') = '' THEN CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
		                                                                                                                    ELSE ISNULL(C4.WH_CODE, '')
		                                                                                                               END
		                                                                          ELSE A.WH_CODE
		                                                                     END
		      LEFT  JOIN  BSA220T      C7 WITH (NOLOCK) ON C7.COMP_CODE    = C2.COMP_CODE
		                                               AND C7.TYPE_LEVEL   = C2.DIV_CODE
		                                               AND C7.TREE_CODE    = C2.WH_CODE
		      LEFT  JOIN  BSA225T      C8 WITH (NOLOCK) ON C8.COMP_CODE    = C2.COMP_CODE
		                                               AND C8.DIV_CODE     = C2.DIV_CODE
		                                               AND C8.WH_CODE      = C2.WH_CODE
		                                               AND C8.DEFAULT_YN   = 'Y'
		    WHERE A.COMP_CODE         = @COMP_CODE
		      AND A.DIV_CODE          = @DIV_CODE
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		      AND A.WKORD_NUM         LIKE @WKORD_NUM + '%'
		</if>
		      AND C.WKORD_STATUS      &lt; '8'
		      AND A.ALLOCK_Q          &gt; A.PRODT_Q
		<if test="@foren.Ognl@isNotEmpty(REQ_FR_DATE)">
		      AND C.PRODT_WKORD_DATE &gt;= @REQ_FR_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_TO_DATE)">
		      AND C.PRODT_WKORD_DATE &lt;= @REQ_TO_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		      AND A.WORK_SHOP_CODE    = @WORK_SHOP_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		      AND A.ITEM_CODE         LIKE @ITEM_CODE + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND ((C1.ITEM_NAME      LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0')
		        OR (C1.ITEM_NAME1     LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1')
		        OR (C1.ITEM_NAME2     LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2'))
		</if>
		<if test="@foren.Ognl@isNotEmpty(MAIN_WH_CODE)">
		      AND C2.WH_CODE          = @MAIN_WH_CODE
		</if>
<!-- 20210208 추가: 특정 대분류에 맞는 작업지시내역만 바코드로 읽어오기 위해 추가, 참조팝업 조회에도 같이 사용 -->
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		   AND C1.ITEM_LEVEL1 IN
		        <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                      #{item}
		        </foreach>
		</if>
		    ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C5.TREE_CODE, A.ITEM_CODE, A.PATH_CODE
		SET NOCOUNT OFF
	</select>

<!-- AS 참조 -->
	<select id="s_mtr200ukrv_wmServiceImpl.selectrefList2" parameterType="Map" resultType="rMap">
		/* s_mtr200ukrv_wmServiceImpl.selectrefList2 (AS 참조) */
		DECLARE @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
			  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
			  , @ACCEPT_DATE_FR         NVARCHAR(08)            -- (선택) AS 접수일자(FROM)
			  , @ACCEPT_DATE_TO         NVARCHAR(08)            -- (선택) AS 접수일자(TO)
			  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
			  , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
			  , @AS_NUM                 NVARCHAR(20)            -- (선택) 접수번호
			  , @INOUT_CODE_TYPE        NVARCHAR(01)            -- (필수) 출고처구분
			  , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
			  , @OUT_WH_CELL_CODE       NVARCHAR(08)            -- (선택) 출고창고CELL
			  , @USER_ID                NVARCHAR(100)           -- (필수) 사용자ID

		    SET @COMP_CODE              = #{S_COMP_CODE}
		    SET @DIV_CODE               = #{DIV_CODE}
		    SET @ACCEPT_DATE_FR         = #{ACCEPT_DATE_FR}
		    SET @ACCEPT_DATE_TO         = #{ACCEPT_DATE_TO}
		    SET @ITEM_CODE              = #{ITEM_CODE}
		    SET @ITEM_NAME              = #{ITEM_NAME}
		    SET @AS_NUM                 = #{AS_NUM}
		    SET @INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
		    SET @OUT_WH_CODE            = #{OUT_WH_CODE}
		    SET @OUT_WH_CELL_CODE       = #{OUT_WH_CELL_CODE}
		    SET @USER_ID                = #{S_USER_ID}

		DECLARE @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND USER_ID   = @USER_ID

		   SET @RefItem = ISNULL(@RefItem, '0')

		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , C2.WORK_SHOP_CODE
		     , C2.WH_CODE                                                               AS WORK_WH_CODE
		     , A.ITEM_CODE
		     , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		            WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		            WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		            ELSE                     C1.ITEM_NAME
		       END                                                                      AS ITEM_NAME
		     , C1.SPEC
		     , C1.STOCK_UNIT
		     , 0                                                                        AS PATH_CODE
		     , uniLITE.fnGetUserDate(A.COMP_CODE, B2.ACCEPT_DATE)                       AS OUTSTOCK_REQ_DATE
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.REQ_OUT_Q, 0),       'M_FSET_QS')  AS OUTSTOCK_REQ_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUT_Q, 0),           'M_FSET_QS')  AS OUTSTOCK_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.REQ_OUT_Q, 0)
		                                  - ISNULL(A.OUT_Q, 0),           'M_FSET_QS')  AS NOT_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.STOCK_Q, 0),         'M_FSET_QS')  AS STOCK_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0),    'M_FSET_QS')  AS GOOD_STOCK_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.BAD_STOCK_Q, 0),     'M_FSET_QS')  AS BAD_STOCK_Q
		     , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.AVERAGE_P, 0),       'M_FSET_PS')  AS AVERAGE_P
		     , ISNULL(@OUT_WH_CODE, C2.WH_CODE)                                         AS MAIN_WH_CODE
		     , ISNULL(@OUT_WH_CELL_CODE, C8.WH_CELL_CODE)                               AS WH_CELL_CODE
		     , A.AS_NUM                                                                 AS OUTSTOCK_NUM
		     , B2.AS_STATUS                                                             AS CONTROL_STATUS
		     , uniLITE.fnFormat(@COMP_CODE, 0, 'M_FSET_QS')                             AS CANCEL_Q
		     , A.REMARK
		     , (SELECT PAB_STOCK_Q
		          FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, B2.ACCEPT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
		     , B1.ORDER_NUM
		     , B1.ORDER_SEQ
		  FROM       S_EAS120T_WM A  WITH(NOLOCK)
		  INNER JOIN S_EAS110T_WM B1 WITH(NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                         AND B1.DIV_CODE   = A.DIV_CODE 
		                                         AND B1.AS_NUM     = A.AS_NUM 
		                                         AND B1.AS_SEQ     = A.AS_SEQ
		  INNER JOIN S_EAS100T_WM B2 WITH(NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
		                                         AND B2.DIV_CODE   = A.DIV_CODE 
		                                         AND B2.AS_NUM     = A.AS_NUM
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                         AND C1.ITEM_CODE  = A.ITEM_CODE
		  INNER JOIN BPR200T      C2 WITH(NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
		                                         AND C2.DIV_CODE   = A.DIV_CODE 
		                                         AND C2.ITEM_CODE  = A.ITEM_CODE
		  LEFT  JOIN BSA220T     C7  WITH(NOLOCK) ON C7.COMP_CODE  = C2.COMP_CODE
		                                         AND C7.TYPE_LEVEL = C2.DIV_CODE
		                                         AND C7.TREE_CODE  = C2.WH_CODE
		  LEFT  JOIN BSA225T     C8  WITH(NOLOCK) ON C8.COMP_CODE  = C2.COMP_CODE
		                                         AND C8.DIV_CODE   = C2.DIV_CODE
		                                         AND C8.WH_CODE    = C2.WH_CODE
		                                         AND C8.DEFAULT_YN = 'Y'
		  LEFT  JOIN BIV100T      D  WITH(NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                         AND D.DIV_CODE    = A.DIV_CODE
		                                         AND D.ITEM_CODE   = A.ITEM_CODE
		                                         AND D.WH_CODE     = ISNULL(@OUT_WH_CODE, C2.WH_CODE)
		 WHERE A.COMP_CODE     = @COMP_CODE
		   AND A.DIV_CODE      = @DIV_CODE
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_DATE_FR)">
		   AND B2.ACCEPT_DATE &gt;= @ACCEPT_DATE_FR
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_DATE_TO)">
		   AND B2.ACCEPT_DATE &lt;= @ACCEPT_DATE_TO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_PRSN)">
		   AND B2.ACCEPT_PRSN  = #{ACCEPT_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_NUM)">
		   AND A.AS_NUM        LIKE #{AS_NUM} + '%'
		</if>
		ORDER BY A.COMP_CODE, A.DIV_CODE
	</select>


<!-- 20210326 추가: 'U'일 때는, delete, insert 로직을 수행하기 위해서 로그테이블 2개 생성 -->
<!-- 1. delete 로그 테이블 -->
	<insert id="s_mtr200ukrv_wmServiceImpl.insertLogMaster_D" parameterType="Map">
		/* s_mtr200ukrv_wmServiceImpl.insertLogMaster_D */
		INSERT INTO L_BTR100T
		     ( KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
		     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
		     , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
		     , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
		     , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
		     , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE           , PATH_CODE
		     , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC           , ACCOUNT_Q             , OUTSTOCK_NUM        , REF_WKORD_NUM
		     , ORDER_SEQ
		     , OLD_ITEM_CODE        , REF_GUBUN
		     , UPDATE_DB_USER       , UPDATE_DB_TIME
		     , INSERT_DB_USER       , INSERT_DB_TIME
		) 
		SELECT
		       #{KEY_VALUE}         , 'D'
		     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
		     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
		     , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
		     , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
		     , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
		     , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE            , PATH_CODE
		     , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC           , ACCOUNT_Q             , #{ARRAY_OUTSTOCK_NUM}, #{ARRAY_REF_WKORD_NUM}
		     , ORDER_SEQ
		     , #{OLD_ITEM_CODE}     , #{REF_GUBUN}
		     , UPDATE_DB_USER       , UPDATE_DB_TIME
		     , INSERT_DB_USER       , INSERT_DB_TIME
		  FROM BTR100T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND INOUT_NUM  = #{INOUT_NUM}
		   AND INOUT_SEQ  = #{INOUT_SEQ}
		   AND INOUT_TYPE = #{INOUT_TYPE}
	</insert>

	<insert id="s_mtr200ukrv_wmServiceImpl.insertLogMaster" parameterType="Map">
		DECLARE @INSERT_TIME DATETIME
		      , @INSERT_USER NVARCHAR(100)

		    SET @INSERT_TIME = #{INSERT_DB_TIME}
		    SET @INSERT_TIME = CASE WHEN ISNULL(@INSERT_TIME, '') = '' THEN GETDATE()
		                            ELSE @INSERT_TIME
		                       END

		    SET @INSERT_USER = #{INSERT_DB_USER}
		    SET @INSERT_USER = CASE WHEN ISNULL(@INSERT_USER, '') = '' THEN #{S_USER_ID}
		                            ELSE @INSERT_USER
		                       END

		INSERT INTO L_BTR100T
		     ( KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
		     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
		     , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
		     , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
		     , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
		     , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE           , PATH_CODE
		     , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC           , ACCOUNT_Q             , OUTSTOCK_NUM        , REF_WKORD_NUM
		    <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
		     , ORDER_SEQ
		    </if>
		     , OLD_ITEM_CODE        , REF_GUBUN
		     , UPDATE_DB_USER       , UPDATE_DB_TIME
		     , INSERT_DB_USER       , INSERT_DB_TIME        --20210326 추가
		) VALUES
		     ( #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
		     , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
		     , #{INOUT_CODE_DETAIL} , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
		     , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
		     , #{MONEY_UNIT}        , #{ORDER_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
		     , #{LOT_NO}            , #{REMARK}             , #{ARRAY_REF_WKORD_NUM}, #{BILL_TYPE}          , #{SALE_TYPE}          , #{PATH_CODE}
		     , #{SALE_DIV_CODE}     , #{SALE_CUSTOM_CODE}   , #{ACCOUNT_YNC}        , #{ACCOUNT_Q}          , #{ARRAY_OUTSTOCK_NUM} , #{ARRAY_REF_WKORD_NUM}
		    <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
		     , #{ORDER_SEQ}
		    </if>
		     , #{OLD_ITEM_CODE}     , #{REF_GUBUN}
		     , #{S_USER_ID}         , GETDATE()
		     , @INSERT_USER         , @INSERT_TIME           --20210326 추가
		)
	</insert>

	<update id="s_mtr200ukrv_wmServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_MATRL_Mtr200ukr_WM (
		    #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
		    #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
		    #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
		)}
	</update>
</mapper>