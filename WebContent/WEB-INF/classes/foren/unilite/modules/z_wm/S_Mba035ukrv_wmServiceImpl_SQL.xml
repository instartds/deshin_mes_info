<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mba035ukrv_wmServiceImpl">
	<select id="s_mba035ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , B.CUSTOM_NAME
		     , A.ITEM_CODE
		     , C.ITEM_NAME
		     , C.SPEC
		     , A.ORDER_UNIT
		     , A.UNIT_PRICE
		     , A.AVAILABLE_QTY
		     , A.COMPLETE_QTY
		     , A.START_DATE
		     , A.END_DATE
		     , A.GOODS_CODE
		     , A.REMARK
		  FROM       S_BPR401T_WM A WITH(NOLOCK)
		  LEFT  JOIN BCM100T      B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                        AND B.CUSTOM_CODE= A.CUSTOM_CODE
		  INNER JOIN BPR100T      C WITH(NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
		                                        AND C.ITEM_CODE  = A.ITEM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND B.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND C.ITEM_NAME   LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="rdoSelect == &quot;C&quot;">
		   AND A.START_DATE &lt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
		   AND A.END_DATE   &gt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		   AND C.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		   AND C.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		   AND C.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		</if>
	</select>


	<!-- 신규 등록(insert) 전, 기 등록된 데이터와 적용 시작일 비교 --> 
	<select id="s_mba035ukrv_wmServiceImpl.checkData" parameterType="Map" resultType="string">
		DECLARE @CHECK_DATA NVARCHAR(01)
		    SET @CHECK_DATA = 'N'

		IF EXISTS (
		            SELECT TOP 1 1
		              FROM S_BPR401T_WM WITH(NOLOCK)
		             WHERE COMP_CODE    = #{S_COMP_CODE}
		               AND DIV_CODE     = #{DIV_CODE}
		               AND ITEM_CODE    = #{ITEM_CODE}
		               AND CUSTOM_CODE  = #{CUSTOM_CODE}
		               AND ORDER_UNIT   = #{ORDER_UNIT}
		               AND START_DATE  &gt;= #{START_DATE}
		)
		BEGIN 
		    SET @CHECK_DATA = 'Y'
		END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>
<!-- 20210225 추가: 서로 다른 품목코드에 동일한 상품코드를 입력할 수 없도록 체클직 추가 -->
	<select id="s_mba035ukrv_wmServiceImpl.checkData2" parameterType="Map" resultType="string">
		/* s_mba035ukrv_wmServiceImpl.checkData2 */
		DECLARE @CHECK_DATA NVARCHAR(01)
		    SET @CHECK_DATA = 'N'

		IF EXISTS (
		            SELECT TOP 1 1
		              FROM S_BPR401T_WM WITH(NOLOCK)
		             WHERE COMP_CODE    = #{S_COMP_CODE}
		               AND DIV_CODE     = #{DIV_CODE}
		               AND CUSTOM_CODE  = #{CUSTOM_CODE}
		               AND GOODS_CODE   = #{GOODS_CODE}
		               AND ITEM_CODE   != #{ITEM_CODE}
		               AND #{START_DATE} BETWEEN START_DATE AND END_DATE
		)
		BEGIN 
		    SET @CHECK_DATA = 'Y'
		END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<insert id="s_mba035ukrv_wmServiceImpl.insertList" parameterType="Map" useGeneratedKeys="false">
		/* s_mba035ukrv_wmServiceImpl.insertList */
		IF EXISTS (SELECT TOP 1 1 
		             FROM S_BPR401T_WM WITH(NOLOCK)
		            WHERE COMP_CODE   = #{S_COMP_CODE}
		              AND DIV_CODE    = #{DIV_CODE}
		              AND ITEM_CODE   = #{ITEM_CODE}
		              AND CUSTOM_CODE = #{CUSTOM_CODE}
		              AND ORDER_UNIT  = #{ORDER_UNIT}
		              AND END_DATE   &gt;= #{START_DATE}
		)
		BEGIN
		    UPDATE S_BPR401T_WM
		       SET END_DATE     = CONVERT(VARCHAR(10),DATEADD(D,-1,#{START_DATE}),112)
		     WHERE COMP_CODE    = #{S_COMP_CODE}
		       AND DIV_CODE     = #{DIV_CODE}
		       AND ITEM_CODE    = #{ITEM_CODE}
		       AND CUSTOM_CODE  = #{CUSTOM_CODE}
		       AND ORDER_UNIT   = #{ORDER_UNIT}
		       AND END_DATE    &gt;= #{START_DATE}
		END

		INSERT INTO S_BPR401T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , CUSTOM_CODE
		     , ITEM_CODE
		     , ORDER_UNIT
		     , UNIT_PRICE
		     , AVAILABLE_QTY
		     , COMPLETE_QTY
		     , START_DATE
		     , END_DATE
		     , GOODS_CODE
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{CUSTOM_CODE}
		     , #{ITEM_CODE}
		     , #{ORDER_UNIT}
		     , #{UNIT_PRICE}
		     , #{AVAILABLE_QTY}
		     , #{COMPLETE_QTY}
		     , #{START_DATE}
		     , #{END_DATE}
		     , #{GOODS_CODE}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_mba035ukrv_wmServiceImpl.updateList" parameterType="Map">
		/* s_mba035ukrv_wmServiceImpl.updateList */
		UPDATE S_BPR401T_WM
		   SET UNIT_PRICE     = #{UNIT_PRICE}
		     , AVAILABLE_QTY  = #{AVAILABLE_QTY}
		     , COMPLETE_QTY   = #{COMPLETE_QTY}
		     , END_DATE       = #{END_DATE}
		     , GOODS_CODE     = #{GOODS_CODE}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND ITEM_CODE   = #{ITEM_CODE}
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
		   AND START_DATE  = #{START_DATE}
		   AND ORDER_UNIT  = #{ORDER_UNIT}
	</update>

	<delete id="s_mba035ukrv_wmServiceImpl.deleteList" parameterType="Map">
		DELETE FROM S_BPR401T_WM
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND ITEM_CODE   = #{ITEM_CODE}
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
		   AND START_DATE  = #{START_DATE}
		   AND ORDER_UNIT  = #{ORDER_UNIT}
	</delete>
</mapper>