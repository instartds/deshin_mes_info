<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_map100ukrv_wmServiceImpl">
	<select id="s_map100ukrv_wmServiceImpl.selectRefCode2" parameterType="Map" resultType="rMap">
		--UBFuncKrv.CBFuncKr[fnAutoNo] Query01
		SELECT ISNULL(REF_CODE2, 0) VAT_RATE
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'A022'
		   AND SUB_CODE  = #{BILL_TYPE}
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectMms510ukrv" parameterType="Map" resultType="rMap">
		/* mms510ukrv.Cmms510ukrv[fnMms510QStd] Query01 */
		BEGIN
		    DECLARE @COMP_CODE   NVARCHAR(08)     -- (필수) 법인코드
		          , @DIV_CODE    NVARCHAR(08)     -- (필수) 사업장
		          , @INOUT_NUM   NVARCHAR(20)     -- (필수) 입고번호
		          , @USER_ID     NVARCHAR(100)    -- (필수) 사용자ID

		    SET NOCOUNT ON
		    SET ARITHABORT ON

		--  1. 변수 값 할당 -----------------------------------------------------------------------------------------------
		    SET @COMP_CODE    = #{S_COMP_CODE}
		    SET @DIV_CODE     = #{DIV_CODE}
		    SET @INOUT_NUM    = #{INOUT_NUM}
		    SET @USER_ID      = #{S_USER_ID}

		--  2. 명칭 조회 유형 설정 ----------------------------------------------------------------------------------------
		    DECLARE @RefItem            NVARCHAR(01)

		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @USER_ID

		    SET @RefItem = ISNULL(@RefItem, '0')

		--  3. 날짜 포맷 유형 설정 ----------------------------------------------------------------------------------------
		    DECLARE @DateFormat             NVARCHAR(01)

		    SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @COMP_CODE
		       AND MAIN_CODE = 'B044'
		       AND REF_CODE1 = 'Y'

		    SET @DateFormat = ISNULL(@DateFormat, '.')

		--  4. 데이터 조회 ------------------------------------------------------------------------------------------------
		    SELECT A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.INOUT_METH
		         , A.INOUT_TYPE_DETAIL
		         , A.ITEM_CODE
		         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                ELSE C2.ITEM_NAME
		           END                                                      AS ITEM_NAME
		         , C3.ITEM_ACCOUNT
		         , C2.SPEC
		         , ISNULL(A.ORDER_UNIT, C2.STOCK_UNIT)                      AS ORDER_UNIT
		         , A.ORDER_UNIT_Q
		         , A.ITEM_STATUS
		         , A.INOUT_Q                                                AS ORIGINAL_Q
		         , ISNULL(C.GOOD_STOCK_Q, 0)                                AS GOOD_STOCK_Q
		         , ISNULL(C.BAD_STOCK_Q, 0)                                 AS BAD_STOCK_Q
		         , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.QTY,0) - ISNULL(D.RECEIPT_QTY,0)
		               ELSE ISNULL(B.ORDER_Q, 0) - ISNULL(B.INSTOCK_Q, 0)
		           END                                                      AS NOINOUT_Q
		         , A.PRICE_YN
		         , A.MONEY_UNIT
		         , A.INOUT_FOR_P
		         , A.INOUT_FOR_O
		         , A.ORDER_UNIT_FOR_P
		         , A.INOUT_FOR_O                                            AS ORDER_UNIT_FOR_O
		         , A.ACCOUNT_YNC
		         , A.EXCHG_RATE_O
		         , A.INOUT_P
		         , A.INOUT_I
		         , A.ORDER_UNIT_P
		         , A.INOUT_I                                                AS ORDER_UNIT_I
		         , ISNULL(A.TRANS_COST,  0)                                 AS TRANS_COST
		         , ISNULL(A.TARIFF_AMT, 0)                                  AS TARIFF_AMT
		         , C2.STOCK_UNIT
		         , A.TRNS_RATE
		         , A.INOUT_Q
		         , A.ORDER_TYPE
		         , A.LC_NUM
		         , A.BL_NUM
		         , A.ORDER_NUM
		         , A.ORDER_SEQ
		         , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.QTY,0)
		                ELSE ISNULL(B.ORDER_Q, 0)
		           END                                                      AS ORDER_Q
		         , A.INOUT_CODE_TYPE
		         , A.WH_CODE
		         , A.WH_CELL_CODE
		         , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                ELSE SUBSTRING(A.INOUT_DATE, 1, 4) + @DateFormat +
		                     SUBSTRING(A.INOUT_DATE, 5, 2) + @DateFormat +
		                     SUBSTRING(A.INOUT_DATE, 7, 2)
		           END                                                      AS INOUT_DATE
		         , A.INOUT_PRSN
		         , A.ACCOUNT_Q
		         , A.CREATE_LOC
		         , A.SALE_C_DATE
		         , A.REMARK
		         , A.PROJECT_NO
		         , A.LOT_NO
		         , C3.LOT_YN
		         , A.INOUT_TYPE
		         , A.INOUT_CODE
		         , A.DIV_CODE
		         , C4.BILL_DIV_CODE                                         --20210607 추가
		         , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                ELSE C1.CUSTOM_NAME
		           END                                                      AS CUSTOM_NAME
		         , CASE WHEN ISNULL(C1.COMPANY_NUM, '') = '' THEN ''
		                ELSE SUBSTRING(C1.COMPANY_NUM,1,3) + '-' +
		                     SUBSTRING(C1.COMPANY_NUM,4,2) + '-' +
		                     SUBSTRING(C1.COMPANY_NUM,6,5)
		           END                                                      AS COMPANY_NUM
		         , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.RECEIPT_QTY,0)
		                ELSE ISNULL(B.INSTOCK_Q, 0)
		           END                                                      AS INSTOCK_Q
		         , A.SALE_DIV_CODE
		         , A.SALE_CUSTOM_CODE
		         , A.BILL_TYPE
		         , A.SALE_TYPE
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , C3.EXCESS_RATE
		         , A.INSPEC_NUM
		         , A.INSPEC_SEQ
		         , A.BASIS_NUM
		         , A.BASIS_SEQ
		         , ISNULL(A.SCM_FLAG_YN, 'N')                               AS SCM_FLAG_YN
		         , A.TRADE_LOC
		         , ISNULL(C2.STOCK_CARE_YN, 'Y')                            AS STOCK_CARE_YN
		         , A.COMP_CODE
		         , A.INSERT_DB_USER
		         , A.INSERT_DB_TIME
		         , 'FLAG'                                                   AS FLAG
		         , ISNULL(C1.MONEY_UNIT, F.SUB_CODE)                        AS MONEY_UNIT
		         , C1.WON_CALC_BAS
		         , C1.TAX_CALC_TYPE
		         , C1.BILL_TYPE                                             AS BCM_BILL_TYPE --2020513 수정: alias
		         , C1.SET_METH
		         , C1.VAT_RATE
		         , C1.TAX_TYPE
		         --20210421 추가: 지급결의 등록 시, 입고등록 한 고객정보 가져와서 MAP200T에 insert 하도록 수정
		         , A.CUSTOM_PRSN
		         , A.PHONE
		         , A.BANK_NAME
		         , uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT, '')              AS BANK_ACCOUNT
		         , A.ADDR1
		         , A.BIRTHDAY
		         , A.ZIP_CODE
		         , A.INOUT_TYPE        --20210607 추가
		         , A.PURCHASE_TYPE     --20210607 추가
		         , C2.TAX_TYPE         AS BPR_TAX_TYPE
		      FROM       BTR100T   A  WITH (NOLOCK)
		      INNER JOIN BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                           AND C1.CUSTOM_CODE  = A.INOUT_CODE
		      INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                           AND C2.ITEM_CODE    = A.ITEM_CODE
		      INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                           AND C3.DIV_CODE     = A.DIV_CODE
		                                           AND C3.ITEM_CODE    = A.ITEM_CODE
		      INNER JOIN BOR120T   C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE   --20210607 추가
		                                           AND C4.DIV_CODE     = A.DIV_CODE
		      LEFT  JOIN MPO200T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                           AND B.DIV_CODE      = A.DIV_CODE
		                                           AND B.CUSTOM_CODE   = A.INOUT_CODE
		                                           AND B.ORDER_NUM     = A.ORDER_NUM
		                                           AND B.ORDER_SEQ     = A.ORDER_SEQ
		      LEFT  JOIN TIA110T   D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                           AND D.DIV_CODE      = A.DIV_CODE
		                                           AND D.SO_SER_NO     = A.ORDER_NUM
		                                           AND D.SO_SER        = A.ORDER_SEQ
		      LEFT  JOIN TIA100T   E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                           AND E.DIV_CODE      = A.DIV_CODE
		                                           AND E.EXPORTER      = A.INOUT_CODE
		                                           AND E.SO_SER_NO     = A.ORDER_NUM
		      LEFT  JOIN BIV100T   C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                           AND C.DIV_CODE      = A.DIV_CODE
		                                           AND C.WH_CODE       = A.WH_CODE
		                                           AND C.ITEM_CODE     = A.ITEM_CODE
		      LEFT JOIN BSA100T    F  WITH (NOLOCK) ON F.COMP_CODE     = A.COMP_CODE
		                                           AND F.MAIN_CODE     = N'B004'
		                                           AND F.SUB_CODE     != '$'
		                                           AND F.REF_CODE1     = 'Y'
		     WHERE A.COMP_CODE          = @COMP_CODE
		       AND A.DIV_CODE           = @DIV_CODE
		       AND A.INOUT_NUM          = @INOUT_NUM
		       AND A.INOUT_TYPE         = N'1'
		       AND A.CREATE_LOC         = #{CREATE_LOC}
		       AND A.INOUT_CODE_TYPE    = N'4'
		       AND A.ACCOUNT_YNC        = N'Y'
		       --20210607 추가: 기 등록된 데이터는 제외, 일단 주석 - 저장 시 체크하니깐..
		       --AND ((A.INOUT_Q - ISNULL(A.ACCOUNT_Q, 0) != 0)
		       --  OR (INOUT_Q = 0 AND (INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) NOT IN (SELECT INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) FROM MAP200T))))
		     ORDER BY A.INOUT_DATE DESC, A.INOUT_NUM DESC, A.INOUT_SEQ

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectInitBinding" parameterType="Map" resultType="rMap">
		/* uniLITE5Popup.CPopup[getTreePopupAu] Query01 */
		SELECT A.TREE_CODE
		     , A.TREE_NAME
		     , A.TYPE_LEVEL                                           AS DIV_CODE
		     , (SELECT BILL_DIV_CODE
		          FROM BOR120T WITH (NOLOCK)
		         WHERE COMP_CODE = A.COMP_CODE
		           AND DIV_CODE  = A.TYPE_LEVEL)                      AS BILL_DIV_CODE
		     , (SELECT DIV_NAME
		          FROM BOR120T WITH (NOLOCK)
		         WHERE COMP_CODE = A.COMP_CODE
		           AND DIV_CODE  = (SELECT BILL_DIV_CODE
		                              FROM BOR120T WITH (NOLOCK)
		                             WHERE COMP_CODE = A.COMP_CODE
		                               AND DIV_CODE  = A.TYPE_LEVEL)) AS BILL_DIV_NAME
		     , SECTION_CD                                             AS SECTION_CODE
		     , (SELECT SECTION_NAME
		          FROM BOR110T WITH (NOLOCK)
		         WHERE A.COMP_CODE  = COMP_CODE
		           AND A.SECTION_CD = SECTION_CODE)                   AS SECTION_NAME
		   FROM BSA210T A WITH (NOLOCK)
		  WHERE (A.TREE_CODE LIKE N'11106000'
		      OR A.TREE_NAME LIKE N'')
		    AND A.USE_YN    = N'Y'
		    AND A.COMP_CODE = #{S_COMP_CODE}
		  ORDER BY A.SORT_SEQ, A.TREE_CODE
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">
		/*s_map100ukrv_wm.Cs_map100ukrv_wm[fnMap100QPop] Query01*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08)  /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(02)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01)  /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10)  /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           (CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
		                                     ELSE B.CUSTOM_NAME
		             END)                AS CUSTOM_NAME
		         , (CASE WHEN ISNULL(A.CHANGE_BASIS_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CHANGE_BASIS_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.CHANGE_BASIS_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.CHANGE_BASIS_DATE, 7, 2))
		             END)                                           AS CHANGE_BASIS_DATE
		         , A.MONEY_UNIT
		         , ISNULL(A.AMOUNT_I, 0) AS AMOUNT_I
		         , A.BILL_NUM
		         , (CASE WHEN ISNULL(A.BILL_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.BILL_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.BILL_DATE, 7, 2))
		             END)                                           AS BILL_DATE
		         , A.CHANGE_BASIS_NUM
		         , A.DIV_CODE
		         , A.BILL_DIV_CODE
		         , A.CUSTOM_CODE
		         , B.COMPANY_NUM
		         , A.BILL_TYPE
		         , A.RECEIPT_TYPE
		         , A.ORDER_TYPE
		         , A.VAT_RATE
		         , ISNULL(A.VAT_AMOUNT_O, 0) AS VAT_AMOUNT_O
		         , A.DEPT_CODE
		         , (CASE WHEN ISNULL(A.EX_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
		             END)                                           AS EX_DATE
		         , A.EX_NUM
		         , ISNULL(A.AGREE_YN,'N') AS AGREE_YN
		         , A.DRAFT_YN
		         , A.DEPT_NAME
		         , A.ISSUE_EXPECTED_DATE
		         , A.ACCOUNT_TYPE
		         , A.PROJECT_NO
		         , A.CREDIT_NUM            /*  신용카드 코드(ABA500T) */
		         , G.CRDT_NAME
		         , B.WON_CALC_BAS
		         --, B.TAX_TYPE
		         , CASE WHEN ISNULL(A.TAX_INOUT, '') = '' THEN B.TAX_TYPE
		                ELSE A.TAX_INOUT
		           END                                                AS TAX_TYPE    --20210318 수정: 세액포함여부 MAP100T에서 가져오도록 수정
		         , B.TAX_CALC_TYPE
		         --20200901 추가
		         --, unilite.fnCipherDecrypt(A.CREDIT_NUM, '')        AS CREDIT_NUM
		         --20210315 추가: CUSTOM_PRSN
		         , E.CUSTOM_PRSN
		      FROM      MAP100T A WITH (NOLOCK)
		      LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                       AND B.CUSTOM_CODE = A.CUSTOM_CODE
		      LEFT JOIN
		              (SELECT C.COMP_CODE
		                    , C.CHANGE_BASIS_NUM
		                    , C.CUSTOM_PRSN                       --20210315 추가: CUSTOM_PRSN
		                    , COUNT(D.INOUT_NUM) AS CNT
		                 FROM BTR100T D WITH (NOLOCK)
		                    , MAP200T C WITH (NOLOCK)
		                Where D.COMP_CODE = C.COMP_CODE
		                  AND D.INOUT_NUM  = C.INOUT_NUM
		                  AND D.INOUT_SEQ  = C.INOUT_SEQ
		                  AND D.COMP_CODE  = @CompCode
		                  AND D.CREATE_LOC = N'2'
		             GROUP BY C.COMP_CODE, C.CHANGE_BASIS_NUM, C.CUSTOM_PRSN) E ON E.COMP_CODE        = A.COMP_CODE        --20210315 추가: CUSTOM_PRSN
		                                                                       AND E.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
		      LEFT JOIN ABA500T G WITH (NOLOCK) ON G.COMP_CODE = A.COMP_CODE
		                                       AND A.CREDIT_NUM  = CRDT_NUM
		     WHERE A.COMP_CODE            = @CompCode
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE             = #{DIV_CODE}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE       LIKE #{CUSTOM_CODE}+ '%'
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_DATE_FR)">
		       AND A.CHANGE_BASIS_DATE   &gt;= #{CHANGE_BASIS_DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_DATE_TO)">
		       AND A.CHANGE_BASIS_DATE   &lt;= #{CHANGE_BASIS_DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BILL_DATE_FR)">
		       AND A.BILL_DATE           &gt;= #{BILL_DATE_FR}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BILL_DATE_TO)">
		       AND A.BILL_DATE           &lt;= #{BILL_DATE_TO}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(BILL_NUM)">
		       AND A.BILL_NUM             = #{BILL_NUM}
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO           = #{PROJECT_NO}
		   </if>
<!-- 20210315 추가: CUSTOM_PRSN -->
		   <if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		       AND E.CUSTOM_PRSN          LIKE '%' + #{CUSTOM_PRSN} + '%'
		   </if>
<!-- 20210331 추가: 거래처원장 조회(매출/매입)에서 링크 넘어올 때 필요값 SET하기 위해 추가 -->
		   <if test="@foren.Ognl@isNotEmpty(BASIS_NUM)">
		       AND A.CHANGE_BASIS_NUM     = #{BASIS_NUM}
		   </if>
		     ORDER BY CUSTOM_NAME, A.CHANGE_BASIS_DATE, A.CHANGE_BASIS_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectForm" parameterType="Map" resultType="rMap">
		/*s_map100ukrv_wm.Cs_map100ukrv_wm[fnMap100QStd] Query05*/
		    DECLARE @CompCode		NVARCHAR(08)   /* 법인코드 */
		          , @UserId			NVARCHAR(100)  /* 사용자ID */
		          , @LangType		NVARCHAR(02)   /* 언어구분  */
		          , @RefItem		NVARCHAR(01)   /* 명칭 참조 유형  */
		          , @DateFormat		NVARCHAR(10)   /* 날짜 포맷 유형 설정  */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT (CASE WHEN ISNULL(A.CHANGE_BASIS_DATE, '') = ''
		            THEN ''
		            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CHANGE_BASIS_DATE, 1, 4))
		                                                    , 'MM'  , SUBSTRING(A.CHANGE_BASIS_DATE, 5, 2))
		                                                    , 'DD'  , SUBSTRING(A.CHANGE_BASIS_DATE, 7, 2))
		           END)                                               AS CHANGE_BASIS_DATE
		         , (CASE WHEN ISNULL(A.BILL_DATE, '') = ''
		            THEN ''
		            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
		                                                    , 'MM'  , SUBSTRING(A.BILL_DATE, 5, 2))
		                                                    , 'DD'  , SUBSTRING(A.BILL_DATE, 7, 2))
		           END)                                               AS BILL_DATE
		         , A.BILL_NUM
		         , ISNULL(A.RECEIPT_TYPE,'')                          AS RECEIPT_TYPE
		         , ISNULL(A.AMOUNT_I, 0)                              AS AMOUNT_I
		         , ISNULL(A.VAT_RATE, 0)                              AS VAT_RATE
		         , ISNULL(A.VAT_AMOUNT_O, 0)                          AS VAT_AMOUNT_O
		         , (CASE WHEN ISNULL(A.EX_DATE, '') = ''
		            THEN ''
		            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
		                                                    , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
		                                                    , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
		           END)                                               AS EX_DATE
		         , ISNULL(A.EX_NUM, 0)                                AS EX_NUM
		         , ISNULL(A.AGREE_YN,'N')                             AS AGREE_YN
		         , A.DRAFT_YN
		         --20200901 추가
		         --, unilite.fnCipherDecrypt(CREDIT_NUM, '')          AS CREDIT_NUM  /*  신용카드 코드 이므로 복호화 필요없음*/
		         , A.CREDIT_NUM
		         , CASE WHEN ISNULL(A.TAX_INOUT, '') = '' THEN B.TAX_TYPE
		                ELSE A.TAX_INOUT
		           END                                                AS TAX_INOUT   --20210318 추가: 세액포함여부 MAP100T에서 가져오도록 수정
		      FROM      MAP100T A WITH(NOLOCK)
		      --20210318 추가: 세액포함여부 가져오기 위해서 추가(기존 데이터)
		      LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                       AND B.CUSTOM_CODE = A.CUSTOM_CODE
		     WHERE A.COMP_CODE        = @Compcode
		  <if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_NUM)">
		       AND A.CHANGE_BASIS_NUM = #{CHANGE_BASIS_NUM}
		  </if>
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/*s_map100ukrv_wm.Cs_map100ukrv_wm[fnMap100QStd] Query01*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           A.CHANGE_BASIS_NUM
		         , A.CHANGE_BASIS_SEQ
		         /*, uniLITE.fnGetUserDate(A.COMP_CODE, A.INSTOCK_DATE) AS INSTOCK_DATE*/
		         , (CASE WHEN ISNULL(A.INSTOCK_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INSTOCK_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INSTOCK_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INSTOCK_DATE, 7, 2))
		             END)                AS INSTOCK_DATE
		         , D.ITEM_ACCOUNT
		         , A.ITEM_CODE
		         /*, uniLITE.fnItemNameComp(A.COMP_CODE, N'UNILITE5',B.ITEM_CODE) AS ITEM_NAME */
		         ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                     ELSE B.ITEM_NAME
		             END)                        AS ITEM_NAME
		         , B.SPEC
		         , A.ORDER_UNIT
		         , B.TAX_TYPE
		         , A.ORDER_UNIT_Q
		         , ((C.ACCOUNT_Q / ISNULL(C.TRNS_RATE, 1)) - A.ORDER_UNIT_Q) AS REMAIN_Q
		         , A.ORDER_UNIT_P
		         , A.AMOUNT_P
		         , A.AMOUNT_I
		         , A.TAX_I
		         , A.AMOUNT_I + A.TAX_I AS TOTAL_I
		         , A.ORDER_UNIT_FOR_P
		         , A.FOREIGN_P
		         , A.FOR_AMOUNT_O
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , B.STOCK_UNIT
		         , A.TRNS_RATE
		         , A.BUY_Q
		         , A.ORDER_TYPE
		         , A.ORDER_PRSN
		         , A.LC_NUM
		         , A.BL_NUM
		         , A.ORDER_NUM
		         , A.ORDER_SEQ
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.DIV_CODE
		         , A.BILL_DIV_CODE
		         , A.CUSTOM_CODE
		         , A.REMARK
		         , A.PROJECT_NO
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , A.COMP_CODE
		         , A.ADVAN_YN
		         , E.ADVAN_AMOUNT AS ADVAN_AMOUNT
		         --20210216 추가: CUSTOM_PRSN, PHONE, BANK_NAME, BANK_ACCOUNT, BIRTHDAY, ZIP_CODE, ADDR1
		         , A.CUSTOM_PRSN
		         , A.PHONE
		         , A.BANK_NAME
		         , unilite.fnCipherDecrypt(A.BANK_ACCOUNT, '')  AS BANK_ACCOUNT    --20210303 수정: 암호화 해제하여 표시
		         , A.BIRTHDAY
		         , A.ZIP_CODE
		         , A.ADDR1
		         , Z.BILL_TYPE
		      FROM            MAP200T A WITH (NOLOCK)
		           INNER JOIN MAP100T Z WITH (NOLOCK) ON Z.COMP_CODE        = A.COMP_CODE   --20210513 추가: panel의 bill_type 변경가능하게 수정 관련
		                                             AND Z.DIV_CODE         = A.DIV_CODE
		                                             AND Z.BILL_DIV_CODE    = A.BILL_DIV_CODE
		                                             AND Z.CUSTOM_CODE      = A.CUSTOM_CODE
		                                             AND Z.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
		           LEFT  JOIN BTR100T C WITH (NOLOCK) ON C.COMP_CODE        = A.COMP_CODE
		                                             AND C.DIV_CODE         = A.DIV_CODE
		                                             AND C.INOUT_NUM        = A.INOUT_NUM
		                                             AND C.INOUT_SEQ        = A.INOUT_SEQ
		                                             AND C.INOUT_TYPE        = '1'
		           LEFT  JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
		                                             AND B.ITEM_CODE        = A.ITEM_CODE
		           LEFT  JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE        = A.COMP_CODE
		                                             AND D.DIV_CODE         = A.DIV_CODE
		                                             AND D.ITEM_CODE        = A.ITEM_CODE
		           LEFT  JOIN MPO200T E WITH (NOLOCK) ON E.COMP_CODE        = C.COMP_CODE
		                                             AND E.DIV_CODE         = C.DIV_CODE
		                                             AND E.ORDER_NUM        = C.ORDER_NUM
		                                             AND E.ORDER_SEQ        = C.ORDER_SEQ
		     WHERE A.COMP_CODE        = @CompCode
		<if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_NUM)">
		       AND A.CHANGE_BASIS_NUM = #{CHANGE_BASIS_NUM}
		</if>
		     ORDER BY A.CHANGE_BASIS_NUM, A.CHANGE_BASIS_SEQ

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectreceiveHistoryList" parameterType="Map" resultType="rMap">
		/* s_map100ukrv_wmServiceImpl.selectreceiveHistoryList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode       NVARCHAR(08)  /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID        */
		          , @LangType       NVARCHAR(02)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01)  /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10)  /* 날짜 포맷 유형 설정     */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT CAST('' AS BIT)                         AS GUBUN
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                  AS INSTOCK_DATE
		         , B.ITEM_ACCOUNT
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                     ELSE C.ITEM_NAME
		             END)                                  AS ITEM_NAME
		         , C.SPEC
		         , A.ORDER_UNIT
		         , C.TAX_TYPE
		         , (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1))) AS ORDER_UNIT_Q
		         , A.ORDER_UNIT_P
		         , A.INOUT_P                               AS AMOUNT_P
		         , (CASE WHEN A.ACCOUNT_Q = 0
		                 --20191226 수정: INOUT_I -> ORDER_UNIT_O
		                 THEN A.ORDER_UNIT_O
		                 ELSE (A.ORDER_UNIT_P *  (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1))))
		             END)                                  AS AMOUNT_I
		         , A.ORDER_UNIT_FOR_P
		         , A.INOUT_FOR_P AS FOREIGN_P
		         , (CASE WHEN A.ACCOUNT_Q = 0
		                 THEN A.INOUT_FOR_O
		                 ELSE (A.ORDER_UNIT_FOR_P * (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1))))
		             END)                                  AS FOR_AMOUNT_O
		         , A.ORDER_UNIT_Q - ISNULL(A.ACCOUNT_Q, 0) AS REMAIN_Q  /* 매입잔량   */
		         , ISNULL(D.ADVAN_AMOUNT, 0) AS ADVAN_AMOUNT
		         , (CASE WHEN ISNULL(A.ACCOUNT_Q, 0) = 0
		                 --20191226 수정: INOUT_I -> ORDER_UNIT_O
		                 THEN A.ORDER_UNIT_O
		                 ELSE (ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(A.ACCOUNT_Q, 0)) * ISNULL(A.ORDER_UNIT_P, 0)
		             END)                                  AS REMAIN_AMOUNT
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , C.STOCK_UNIT
		         , A.TRNS_RATE
		         , (A.INOUT_Q - ISNULL(A.ACCOUNT_Q, 0))    AS BUY_Q
		         , A.ORDER_TYPE
		         , (SELECT ORDER_PRSN
		              FROM MPO100T WITH (NOLOCK)
		             WHERE ORDER_NUM   = A.ORDER_NUM
		               AND COMP_CODE   = A.COMP_CODE
		              -- AND DIV_CODE    = A.DIV_CODE
		               AND CUSTOM_CODE = A.INOUT_CODE)     AS ORDER_PRSN
		         , A.LC_NUM
		         , A.BL_NUM
		         , A.ORDER_NUM
		         , A.ORDER_SEQ
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , (SELECT TAX_CALC_TYPE
		              FROM BCM100T WITH(NOLOCK)
		             WHERE COMP_CODE   = A.COMP_CODE
		             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND CUSTOM_CODE = #{CUSTOM_CODE}
		             </if>
		             )	AS TAX_CALC_TYPE
		         , A.REMARK
		         , A.PROJECT_NO
		         , A.INOUT_TYPE
		         , A.INOUT_Q
		         , A.INOUT_I
		         , A.INOUT_TAX_AMT
		         , A.INOUT_I + A.INOUT_TAX_AMT                  AS TOTAL_INOUT_I
		         --20210216 추가: CUSTOM_PRSN, PHONE, BANK_NAME, BANK_ACCOUNT, BIRTHDAY, ZIP_CODE, ADDR1
		         , A.CUSTOM_PRSN
		         , A.PHONE
		         , A.BANK_NAME
		         , unilite.fnCipherDecrypt(A.BANK_ACCOUNT, '')  AS BANK_ACCOUNT    --20210303 수정: 암호화 해제하여 표시
		         , A.BIRTHDAY
		         , A.ZIP_CODE
		         , A.ADDR1
		      FROM           BTR100T A WITH (NOLOCK)
		           LEFT JOIN MPO200T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                            AND D.IN_DIV_CODE  = A.DIV_CODE
		                                            AND D.ORDER_NUM = A.ORDER_NUM
		                                            AND D.ORDER_SEQ = A.ORDER_SEQ
		                                            AND D.ORDER_UNIT_Q - D.MAP_Q &gt; 0
		           LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                            AND B.DIV_CODE  = A.DIV_CODE
		                                            AND B.ITEM_CODE = A.ITEM_CODE
		           LEFT JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                            AND C.ITEM_CODE = A.ITEM_CODE
		           LEFT JOIN (SELECT A1.COMP_CODE
		                           , A1.DIV_CODE
		                           , A1.CUSTOM_CODE
		                           , A1.ITEM_CODE
		                           , A1.ORDER_NUM
		                           , A1.ORDER_SEQ
		                           , SUM(ISNULL(BUY_Q, 0)) AS BUY_Q
		                           , SUM(ISNULL(AMOUNT_I, 0)) AS AMOUNT_I
		                        FROM MAP200T A1 WITH (NOLOCK)
		                       WHERE A1.COMP_CODE = @CompCode
		                       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                         AND A1.DIV_CODE  = #{DIV_CODE}
		                       </if>
		                       GROUP BY A1.COMP_CODE, A1.DIV_CODE, A1.CUSTOM_CODE, A1.ITEM_CODE, A1.ORDER_NUM
		                              , A1.ORDER_SEQ) E ON E.COMP_CODE   = D.COMP_CODE
		                                               AND E.DIV_CODE    = D.IN_DIV_CODE
		                                               AND E.CUSTOM_CODE = D.CUSTOM_CODE
		                                               AND E.ITEM_CODE   = D.ITEM_CODE
		                                               AND E.ORDER_NUM   = D.ORDER_NUM
		                                               AND E.ORDER_SEQ   = D.ORDER_SEQ
		           LEFT JOIN TIB140T R1 WITH(NOLOCK) ON R1.COMP_CODE  = A.COMP_CODE     /* LOCAL L/C MASTER */
		                                            AND R1.DIV_CODE   = A.DIV_CODE
		                                            AND R1.LLC_SER_NO = A.LC_NUM
		                                            AND A.CREATE_LOC = '6'              /* 무역   */
		                                            AND A.ORDER_TYPE = '2'              /* LLC  */
		                                            AND A.TRADE_LOC  = '2'              /* LLC  */
		     WHERE A.COMP_CODE    = @CompCode
		       AND A.INOUT_TYPE   = '1'
		       AND A.CREATE_LOC  IN ('2','6')
		       AND A.ACCOUNT_YNC  = 'Y'
		       AND A.PRICE_YN     = 'Y'
		       AND ((A.INOUT_Q - ISNULL(A.ACCOUNT_Q, 0) != 0)
		          OR (INOUT_Q = 0 AND (INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) NOT IN (SELECT INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) FROM MAP200T))))
		       AND ISNULL(R1.EX_DATE,'') = '' /* 무역 LLC 미착 지급결의 안된것 */
		       AND ISNULL(A.EX_DATE ,'') = ''	/* 매입전표 생성된것은 제외 */
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE    = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		       AND A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		       AND A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		       AND A.ORDER_TYPE    = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		       AND A.MONEY_UNIT    = #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE      = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
		       AND C.TAX_TYPE      = #{TAX_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE  LIKE #{ITEM_CODE}+ '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND B.ITEM_NAME  LIKE #{ITEM_NAME}+ '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO    = #{PROJECT_NO}
		</if>
		<if test="rdoSelect == &quot;N&quot;">
		       AND A.ITEM_STATUS = N'1'
		</if>
<!-- 20210225 추가: 고객명 -->
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		       AND A.CUSTOM_PRSN LIKE '%' + #{CUSTOM_PRSN} +'%'
		</if>
		    ORDER BY A.INOUT_DATE DESC, INOUT_NUM DESC, INOUT_SEQ

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectreturningHistoryList" parameterType="Map" resultType="rMap">
	   /* s_map100ukrv_wmServiceImpl.selectreturningHistoryList */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID      */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형        */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT CAST('' AS BIT) AS GUBUN
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END)                AS INSTOCK_DATE
                 , B.ITEM_ACCOUNT
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                     END)                 AS ITEM_NAME
                 , C.SPEC
                 , A.ORDER_UNIT
                 , C.TAX_TYPE

                 , ISNULL(F.GOOD_STOCK_Q, 0)                                AS GOOD_STOCK_Q

                 , (A.ORDER_UNIT_Q - ABS((ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1)))) AS ORDER_UNIT_Q
                 , A.ORDER_UNIT_P
                 , A.INOUT_P AS AMOUNT_P
                 , (CASE WHEN A.ACCOUNT_Q = 0
                         --20191226 수정: INOUT_I -> ORDER_UNIT_O
                         THEN A.ORDER_UNIT_O
                         ELSE (A.ORDER_UNIT_P *  (A.ORDER_UNIT_Q - ABS((ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1)))))
                     END) AS AMOUNT_I
                 , A.ORDER_UNIT_FOR_P
                 , A.INOUT_FOR_P AS FOREIGN_P
                 , (CASE WHEN A.ACCOUNT_Q = 0
                         THEN A.INOUT_FOR_O
                         ELSE (A.ORDER_UNIT_FOR_P * (A.ORDER_UNIT_Q - ABS((ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1)))))
                     END) AS FOR_AMOUNT_O
                 , A.ORDER_UNIT_Q - ISNULL(A.ACCOUNT_Q, 0) AS REMAIN_Q  /* 매입잔량   */
                 , ISNULL(D.ADVAN_AMOUNT, 0) AS ADVAN_AMOUNT
                 , (CASE WHEN ISNULL(A.ACCOUNT_Q, 0) = 0
                         --20191226 수정: INOUT_I -> ORDER_UNIT_O
                         THEN A.ORDER_UNIT_O
                         ELSE (ISNULL(A.ORDER_UNIT_Q, 0) - ABS(ISNULL(A.ACCOUNT_Q, 0))) * ISNULL(A.ORDER_UNIT_P, 0)
                     END) AS REMAIN_AMOUNT
                 , A.MONEY_UNIT
                 , A.EXCHG_RATE_O
                 , C.STOCK_UNIT
                 , A.TRNS_RATE
                 , (A.INOUT_Q - ABS(ISNULL(A.ACCOUNT_Q, 0))) AS BUY_Q
                 , A.ORDER_TYPE
                 , (SELECT ORDER_PRSN
                      FROM MPO100T WITH (NOLOCK)
                     WHERE ORDER_NUM   = A.ORDER_NUM
                       AND COMP_CODE   = A.COMP_CODE
                       AND DIV_CODE    = A.DIV_CODE
                       AND CUSTOM_CODE = A.INOUT_CODE) AS ORDER_PRSN
                 , A.LC_NUM
                 , A.BL_NUM
                 , A.ORDER_NUM
                 , A.ORDER_SEQ
                 , A.INOUT_NUM
                 , A.INOUT_SEQ
                 , (SELECT TAX_TYPE
                      FROM BCM100T
                     WHERE COMP_CODE   = A.COMP_CODE
                       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND CUSTOM_CODE = #{CUSTOM_CODE}) AS TAX_CALC_TYPE
                     </if>
                 , A.REMARK
                 , A.PROJECT_NO
                 , A.INOUT_TYPE
                 , A.PURCHASE_TYPE

                 , A.INOUT_Q
        		 , A.INOUT_I
        		 , A.INOUT_TAX_AMT
        		 , (A.INOUT_I + A.INOUT_TAX_AMT)  AS TOTAL_INOUT_I

              FROM           BTR100T A WITH (NOLOCK)
             		LEFT  JOIN BIV100T   F  WITH (NOLOCK) ON F.COMP_CODE     = A.COMP_CODE
                                                        AND F.DIV_CODE      = A.DIV_CODE
                                                        AND F.WH_CODE       = A.WH_CODE
                                                        AND F.ITEM_CODE     = A.ITEM_CODE

                   LEFT JOIN MPO200T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                    AND D.IN_DIV_CODE  = A.DIV_CODE
                                                    AND D.ORDER_NUM = A.ORDER_NUM
                                                    AND D.ORDER_SEQ = A.ORDER_SEQ
                                                    AND D.ORDER_UNIT_Q - D.MAP_Q &gt; 0
                   LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                    AND B.DIV_CODE  = A.DIV_CODE
                                                    AND B.ITEM_CODE = A.ITEM_CODE
                   LEFT JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                    AND C.ITEM_CODE = A.ITEM_CODE
                   LEFT JOIN (SELECT A1.COMP_CODE
                                   , A1.DIV_CODE
                                   , A1.CUSTOM_CODE
                                   , A1.ITEM_CODE
                                   , A1.ORDER_NUM
                                   , A1.ORDER_SEQ
                                   , SUM(ISNULL(BUY_Q, 0)) AS BUY_Q
                                   , SUM(ISNULL(AMOUNT_I, 0)) AS AMOUNT_I
                                FROM MAP200T A1 WITH (NOLOCK)
                               WHERE A1.COMP_CODE = @CompCode
                               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                 AND A1.DIV_CODE  = #{DIV_CODE}
                               </if>
                               GROUP BY A1.COMP_CODE, A1.DIV_CODE, A1.CUSTOM_CODE, A1.ITEM_CODE, A1.ORDER_NUM
                                      , A1.ORDER_SEQ) E ON E.COMP_CODE   = D.COMP_CODE
                                                       AND E.DIV_CODE    = D.IN_DIV_CODE
                                                       AND E.CUSTOM_CODE = D.CUSTOM_CODE
                                                       AND E.ITEM_CODE   = D.ITEM_CODE
                                                       AND E.ORDER_NUM   = D.ORDER_NUM
                                                       AND E.ORDER_SEQ   = D.ORDER_SEQ
                   LEFT JOIN TIB140T R1 WITH(NOLOCK) ON R1.COMP_CODE  = A.COMP_CODE     /* LOCAL L/C MASTER */
                                                    AND R1.DIV_CODE   = A.DIV_CODE
                                                    AND R1.LLC_SER_NO = A.LC_NUM
                                                    AND A.CREATE_LOC = '6'              /* 무역   */
                                                    AND A.ORDER_TYPE = '2'              /* LLC  */
                                                    AND A.TRADE_LOC  = '2'              /* LLC  */
             WHERE A.COMP_CODE    = @CompCode
               AND A.INOUT_TYPE   = '4'
               AND A.CREATE_LOC  IN ('2','6')
               AND A.ACCOUNT_YNC  = 'Y'
               AND A.PRICE_YN     = 'Y'
               AND ((A.INOUT_Q - ABS(A.ACCOUNT_Q) != 0)
                 OR (INOUT_Q = 0 AND (INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) NOT IN (SELECT INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) FROM MAP200T))))
               AND ISNULL(R1.EX_DATE,'') = '' /* 무역 LLC 미착 지급결의 안된것 */
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND A.INOUT_CODE    = #{CUSTOM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
               AND A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
               AND A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
               AND A.ORDER_TYPE    = #{ORDER_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
               AND A.MONEY_UNIT    = #{MONEY_UNIT}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE      = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
               AND C.TAX_TYPE      = #{TAX_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE  LIKE #{ITEM_CODE}+ '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND B.ITEM_NAME  LIKE #{ITEM_NAME}+ '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
               AND A.PROJECT_NO    = #{PROJECT_NO}
        </if>


        <if test="rdoSelect == &quot;N&quot;">
               AND A.ITEM_STATUS = N'1'
        </if>

            ORDER BY A.INOUT_DATE DESC, INOUT_NUM DESC, INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectorderHistoryList" parameterType="Map" resultType="rMap">
		/*s_map100ukrv_wm.Cs_map100ukrv_wm[fnMap100QRef2]*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */
		    SELECT A.COMP_CODE
		          /* 발주일*/
		          , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
		                        THEN ''
		                        ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
		                                                                , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
		                                                                , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
		                        END)                                                     AS ORDER_DATE
		          , B.ITEM_CODE                                                          AS ITEM_CODE      /* 품목코드*/
		          , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                  WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                      ELSE C1.ITEM_NAME
		                 END)                                                            AS ITEM_NAME
		          , C1.SPEC                                                              AS SPEC           /* 규격*/
		          , B.ORDER_UNIT                                                         AS ORDER_UNIT     /* 구매단위*/
		          , ISNULL(B.ORDER_O, 0)                                                 AS ORDER_O        /* 금액*/
		          , ISNULL(B.ADVAN_AMOUNT, 0)                                            AS ADVAN_AMOUNT   /* 선지급금액*/
		          , ISNULL(B.ORDER_O, 0) - ISNULL(B.ADVAN_AMOUNT, 0)                     AS LOG_AMT /* 잔여액*/
		          , A.MONEY_UNIT                                                         AS MONEY_UNIT     /* 화폐단위*/
		          , A.EXCHG_RATE_O                                                       AS EXCHG_RATE_O   /* 환율*/
		          , C1.STOCK_UNIT                                                        AS STOCK_UNIT     /* 재고단위*/
		          , B.TRNS_RATE                                                          AS TRNS_RATE      /* 입수*/
		          , A.LC_NUM                                                             AS LC_NUM         /* L/C번호*/
		          , B.ORDER_NUM                                                          AS ORDER_NUM      /* 발주번호*/
		          , B.ORDER_SEQ                                                          AS ORDER_SEQ      /* 발주순번*/
		          , B.REMARK                                                             AS REMARK         /* 비고*/
		          , B.PROJECT_NO                                                         AS PROJECT_NO     /* 관리번호*/
		          , C2.ITEM_ACCOUNT                                                      AS ITEM_ACCOUNT   /* 품목계정*/
		          , A.ORDER_TYPE                                                         AS ORDER_TYPE     /* 발주형태*/
		          , A.ORDER_PRSN                                                         AS ORDER_PRSN     /* 발주담당자*/
		          --20200304 아래 3개 데이터 가져오는 로직 변경 / 조회데이터 추가
		          --, ISNULL(B.ORDER_UNIT_Q, 0) AS ORDER_UNIT_Q   /* 수량(구매단위량)*/
		          --, ISNULL(B.ORDER_UNIT_P, 0) AS ORDER_UNIT_P   /* 단가*/
		          --, ISNULL(B.ORDER_UNIT_Q, 0) - ISNULL(B.MAP_Q, 0)   AS REMAIN_Q /* 잔여수량*/
		          , (CASE WHEN ISNULL(D.INOUT_DATE, '') = ''
		                  THEN ''
		                  ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.INOUT_DATE, 1, 4))
		                                                          , 'MM'  , SUBSTRING(D.INOUT_DATE, 5, 2))
		                                                          , 'DD'  , SUBSTRING(D.INOUT_DATE, 7, 2))
		              END)                                                               AS INSTOCK_DATE
		          , (D.ORDER_UNIT_Q - (ISNULL(D.ACCOUNT_Q, 0) / ISNULL(D.TRNS_RATE, 1))) AS ORDER_UNIT_Q
		          , D.ORDER_UNIT_P
		          , D.INOUT_P                                                            AS AMOUNT_P
		          , (CASE WHEN D.ACCOUNT_Q = 0
		                  --20191226 수정: INOUT_I -> ORDER_UNIT_O
		                  THEN D.ORDER_UNIT_O
		                  ELSE (D.ORDER_UNIT_P *  (D.ORDER_UNIT_Q - (ISNULL(D.ACCOUNT_Q, 0) / ISNULL(D.TRNS_RATE, 1))))
		              END)                                                               AS AMOUNT_I
		          , D.ORDER_UNIT_FOR_P
		          , D.INOUT_FOR_P                                                        AS FOREIGN_P
		          , (CASE WHEN D.ACCOUNT_Q = 0
		                  THEN D.INOUT_FOR_O
		                  ELSE (D.ORDER_UNIT_FOR_P * (D.ORDER_UNIT_Q - (ISNULL(D.ACCOUNT_Q, 0) / ISNULL(D.TRNS_RATE, 1))))
		              END)                                                               AS FOR_AMOUNT_O
		          , D.ORDER_UNIT_Q - ISNULL(D.ACCOUNT_Q, 0)                              AS REMAIN_Q  /* 매입잔량   */
		          , (CASE WHEN ISNULL(D.ACCOUNT_Q, 0) = 0
		                  --20191226 수정: INOUT_I -> ORDER_UNIT_O
		                  THEN D.ORDER_UNIT_O
		                  ELSE (ISNULL(D.ORDER_UNIT_Q, 0) - ISNULL(D.ACCOUNT_Q, 0)) * ISNULL(D.ORDER_UNIT_P, 0)
		              END)                                                               AS REMAIN_AMOUNT
		          , (D.INOUT_Q - ISNULL(D.ACCOUNT_Q, 0))                                 AS BUY_Q
		          , D.BL_NUM
		          , D.INOUT_NUM
		          , D.INOUT_SEQ
		          , (SELECT TAX_CALC_TYPE
		               FROM BCM100T WITH(NOLOCK)
		              WHERE COMP_CODE   = A.COMP_CODE
		                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                AND CUSTOM_CODE = #{CUSTOM_CODE}
		              </if>
		              )	                                                                 AS TAX_CALC_TYPE
		          , D.INOUT_TYPE
		          , D.INOUT_Q
		          , D.INOUT_I
		          , D.INOUT_TAX_AMT
		          , D.INOUT_I + D.INOUT_TAX_AMT                                          AS TOTAL_INOUT_I
		          , C1.TAX_TYPE
		      FROM           MPO100T A  WITH (NOLOCK)
		          INNER JOIN MPO200T B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                             AND B.DIV_CODE   = A.DIV_CODE
		                                             AND B.ORDER_NUM  = A.ORDER_NUM
		          LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B.COMP_CODE
		                                             AND C1.ITEM_CODE = B.ITEM_CODE
		          LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = B.COMP_CODE
		                                             AND C2.DIV_CODE  = B.DIV_CODE
		                                             AND C2.ITEM_CODE = B.ITEM_CODE
		          --20200304 추가
		          INNER JOIN BTR100T D  WITH (NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
		                                             AND D.DIV_CODE   = B.IN_DIV_CODE
		                                             AND D.ORDER_NUM  = B.ORDER_NUM
		                                             AND D.ORDER_SEQ  = B.ORDER_SEQ
		                                             AND D.INOUT_TYPE = '1'
		                                             AND B.ORDER_UNIT_Q - B.MAP_Q &gt; 0
		     WHERE A.COMP_CODE     = @CompCode
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE      = #{DIV_CODE}
		       </if>	
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		       AND A.MONEY_UNIT    = #{MONEY_UNIT}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		       AND A.ORDER_DATE &gt;= #{ORDER_DATE_FR}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		       AND A.ORDER_DATE &lt;= #{ORDER_DATE_TO}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND B.PROJECT_NO  = #{PROJECT_NO}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND B.ITEM_CODE   = #{ITEM_CODE}
		       </if>
		       --AND B.INSTOCK_Q    lt;= 0             --20200304 임시주석
		       AND ISNULL(B.ORDER_O, 0) - ISNULL(B.ADVAN_AMOUNT, 0) > 0
		       AND B.CONTROL_STATUS != '8'

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_map100ukrv_wmServiceImpl.billDivCode" parameterType="Map" resultType="rMap">
		SELECT BILL_DIV_CODE
		  FROM BOR120T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
	</select>

	<insert id="s_map100ukrv_wmServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_MAP200T
		     ( KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , BILL_DIV_CODE         , CUSTOM_CODE           , CHANGE_BASIS_NUM
		     , CHANGE_BASIS_SEQ     , INOUT_NUM             , INOUT_SEQ             , ORDER_NUM             , ORDER_SEQ
		     , ITEM_CODE            , ITEM_ACCOUNT          , INSTOCK_DATE          , BUY_Q                 , AMOUNT_P
		     , AMOUNT_I             , MONEY_UNIT            , FOREIGN_P             , FOR_AMOUNT_O          , EXCHG_RATE_O
		     , ORDER_TYPE           , ORDER_PRSN            , LC_NUM                , BL_NUM                , TAX_I
		     , ORDER_UNIT           , TRNS_RATE             , ORDER_UNIT_Q          , ORDER_UNIT_P          , ORDER_UNIT_FOR_P
		     , PROJECT_NO           , PJT_CODE              , REMARK                , ADVAN_YN
		     , INOUT_TYPE           , PURCHASE_TYPE         , UPDATE_DB_USER        , UPDATE_DB_TIME        , INSERT_DB_USER    , INSERT_DB_TIME
		     --20210216 추가: CUSTOM_PRSN, PHONE, BANK_NAME, BANK_ACCOUNT, BIRTHDAY, ZIP_CODE, ADDR1
		     , CUSTOM_PRSN
		     , PHONE
		     , BANK_NAME
		     , BANK_ACCOUNT
		     , BIRTHDAY
		     , ZIP_CODE
		     , ADDR1
		) VALUES (
		       #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{S_COMP_CODE}         , #{DIV_CODE}           , #{BILL_DIV_CODE}    , #{CUSTOM_CODE}        , #{CHANGE_BASIS_NUM}
		     , #{CHANGE_BASIS_SEQ}  , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{ORDER_NUM}          , #{ORDER_SEQ}
		     , #{ITEM_CODE}         , #{ITEM_ACCOUNT}       , #{INSTOCK_DATE}       , #{BUY_Q}              , #{AMOUNT_P}
		     , #{AMOUNT_I}          , #{MONEY_UNIT}         , #{FOREIGN_P}          , #{FOR_AMOUNT_O}       , #{EXCHG_RATE_O}
		     , #{ORDER_TYPE}        , #{ORDER_PRSN}         , #{LC_NUM}             , #{BL_NUM}             , #{TAX_I}
		     , #{ORDER_UNIT}        , #{TRNS_RATE}          , #{ORDER_UNIT_Q}       , #{ORDER_UNIT_P}       , #{ORDER_UNIT_FOR_P}
		     , #{PROJECT_NO}        , #{PJT_CODE}           , #{REMARK}             , #{ADVAN_YN}
		     , #{INOUT_TYPE}        , #{PURCHASE_TYPE}      , #{S_USER_ID}          , GETDATE()             , #{S_USER_ID}      , GETDATE()
		     --20210216 추가: CUSTOM_PRSN, PHONE, BANK_NAME, BANK_ACCOUNT, BIRTHDAY, ZIP_CODE, ADDR1
		     , #{CUSTOM_PRSN}
		     , #{PHONE}
		     , #{BANK_NAME}
		     , uniLITE.fnCipherEncrypt(#{BANK_ACCOUNT}, '') --20210303 수정: 암호화 하여 저장
		     , #{BIRTHDAY}
		     , #{ZIP_CODE}
		     , #{ADDR1}
		)
	</insert>

	<insert id="s_map100ukrv_wmServiceImpl.insertLogForm" parameterType="Map">
		INSERT INTO L_MAP100T
		     ( KEY_VALUE            , OPR_FLAG
		     , COMP_CODE            , DIV_CODE              , BILL_DIV_CODE         , CUSTOM_CODE           , CHANGE_BASIS_NUM
		     , CHANGE_BASIS_DATE    , DEPT_CODE             , DEPT_NAME             , BILL_TYPE             , BILL_NUM
		     , BILL_DATE            , RECEIPT_TYPE          , ORDER_TYPE            , AMOUNT_I              , VAT_RATE
		     , VAT_AMOUNT_O         , MONEY_UNIT            , EX_DATE               , EX_NUM                , AGREE_YN
		     , AC_DATE              , AC_NUM                , DRAFT_YN              , PROJECT_NO            , PJT_CODE
		     , ISSUE_EXPECTED_DATE  , ACCOUNT_TYPE
		     , CREDIT_NUM
		     , EB_NUM               , BILL_SEND_YN
		     , TAX_INOUT            --20210318 추가: 세액포함 여부
		     , UPDATE_DB_USER       , UPDATE_DB_TIME        , INSERT_DB_USER        , INSERT_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{S_COMP_CODE}       , #{DIV_CODE}           , #{BILL_DIV_CODE}      , #{CUSTOM_CODE}        , #{CHANGE_BASIS_NUM}
		     , #{CHANGE_BASIS_DATE} , #{DEPT_CODE}          , #{DEPT_NAME}          , #{BILL_TYPE}          , #{BILL_NUM}
		     , #{BILL_DATE}         , #{RECEIPT_TYPE}       , #{ORDER_TYPE}         , #{AMOUNTI}            , #{VAT_RATE}
		     , #{VATAMOUNTO}        , #{MONEY_UNIT}         , #{EX_DATE}            , #{EX_NUM}             , #{AGREE_YN}
		     , #{AC_DATE}           , #{AC_NUM}             , #{DRAFT_YN}           , #{PROJECT_NO}         , #{PJT_CODE}
		     , #{ISSUE_EXPECTED_DATE},#{ACCOUNT_TYPE}
		     , #{CREDIT_NUM}
		     , #{EB_NUM}            , ''
		     , #{TAX_INOUT}         --20210318 추가: 세액포함 여부
		     , #{S_USER_ID}         , GETDATE()             , #{S_USER_ID}          , GETDATE() )
	</insert>

	<update id="s_map100ukrv_wmServiceImpl.spBuy" parameterType="Map" statementType="CALLABLE">
		{call USP_MATRL_s_map100ukr_wm (
			#{KeyValue,          mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
			#{CHANGE_BASIS_NUM,  mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
			#{BILL_NUM,          mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc,         mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<select id="s_map100ukrv_wmServiceImpl.selectMainReportList" parameterType="Map" resultType="rMap">
		/*s_map100ukrv_wmServiceImpl.selectMainReportList*/
			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드				*/
       	    SET @CompCode = #{S_COMP_CODE}

     	SELECT TOP 1 A.CUSTOM_CODE
				   , B.CUSTOM_NAME
				   , A.CHANGE_BASIS_NUM
				   , A.CHANGE_BASIS_DATE
				   , A.DEPT_CODE
				   , A.DEPT_NAME
				   , A.BILL_DATE
				   , A.AMOUNT_I
				   , C.CHARGE_CODE
				   , D.CODE_NAME AS CHARGER_NAME
				   , A.EX_DATE
				   , A.EX_NUM
				   , A.EX_DATE + REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(5),A.EX_NUM))) + CONVERT(NVARCHAR(5),A.EX_NUM) AS GROUP_KEY
				   , B.SET_METH
				   , G.BANK_CODE
				   , (
						SELECT CUSTOM_NAME
				    	  FROM BCM100T WITH (NOLOCK)
				   		 WHERE COMP_CODE   = 'MASTER'
						   AND CUSTOM_CODE = G.BANK_CODE
				    	   AND CUSTOM_TYPE = '4'
				    	   AND START_DATE                    <![CDATA[<=]]> CONVERT(VARChar(8), GETDATE(), 112)
				    	   AND ISNULL(STOP_DATE, '99999999') >= CONVERT(VARCHAR(8), GETDATE(), 112)
				    	   AND USE_YN = N'Y'
		    	    )    													AS BANK_NAME
	               , unilite.fncipherdecrypt(G.BANKBOOK_NUM, '')			AS BANKBOOK_NUM
	               , G.BANKBOOK_NAME
	               , A1.ITEM_CODE_DETAIL
	               --, H.ITEM_NAME AS ITEM_CODE_DETAIL_NAME
	               , ISNULL(A1.PROJECT_NAME,'') + CASE WHEN ISNULL(A1.PROJECT_NAME,'') = '' THEN H.ITEM_NAME ELSE '' END AS ITEM_CODE_DETAIL_NAME
				   , A1.REMARK_DETAIL
				   , F.CODE_NAME
				   , A.AMOUNT_I+A.VAT_AMOUNT_O AS TOT_AMT
				   , A.ISSUE_EXPECTED_DATE
				   , unilite.fnConvertToAmt(A.AMOUNT_I+A.VAT_AMOUNT_O) +' 원' AS TOT_AMT_HAN
				   , B.CUSTOM_NAME + ' ' + ISNULL(H.ITEM_NAME,'') +'외 매입기표' AS REMARK
		FROM MAP100T A WITH (NOLOCK)
			LEFT JOIN ( SELECT  S1.COMP_CODE
							, S1.DIV_CODE
							, S1.BILL_DIV_CODE
							, S1.CUSTOM_CODE
							, S1.CHANGE_BASIS_NUM
							, MAX(S1.ITEM_CODE) AS ITEM_CODE_DETAIL
							, MAX(S1.REMARK) AS REMARK_DETAIL
							, MAX(S1.PROJECT_NO) AS PROJECT_NO
							, MAX(S2.PJT_NAME) AS PROJECT_NAME
					FROM MAP200T S1 WITH (NOLOCK)
						 LEFT JOIN BCM600T S2 WITH (NOLOCK) ON S2.COMP_CODE=S1.COMP_CODE AND S2.PJT_CODE=S1.PROJECT_NO
					WHERE S1.COMP_CODE   = @CompCode
					AND   S1.DIV_CODE    = #{DIV_CODE}
					AND   S1.CUSTOM_CODE = #{CUSTOM_CODE}
					GROUP BY  S1.COMP_CODE
							, S1.DIV_CODE
							, S1.BILL_DIV_CODE
							, S1.CUSTOM_CODE
							, S1.CHANGE_BASIS_NUM
				  ) A1 ON A1.COMP_CODE			= A.COMP_CODE
					  AND A1.DIV_CODE			= A.DIV_CODE
					  AND A1.BILL_DIV_CODE      = A.BILL_DIV_CODE
					  AND A1.CUSTOM_CODE        = A.CUSTOM_CODE
					  AND A1.CHANGE_BASIS_NUM   = A.CHANGE_BASIS_NUM
		INNER JOIN BCM100T B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
		  				    				AND A.CUSTOM_CODE = B.CUSTOM_CODE
		LEFT JOIN  AGJ110T C WITH (NOLOCK)  ON C.COMP_CODE   = A.COMP_CODE
											AND C.EX_DATE     = A.EX_DATE
											AND C.EX_NUM      = A.EX_NUM
		LEFT JOIN BSA100T  D WITH (NOLOCK)  ON D.COMP_CODE	  = C.COMP_CODE
						    				AND D.MAIN_CODE   = 'A009'
						    				AND D.SUB_CODE    = C.CHARGE_CODE
		LEFT JOIN BSA100T  F WITH (NOLOCK)  ON F.COMP_CODE	  = A.COMP_CODE
										    AND F.MAIN_CODE   = 'B038'
										    AND F.SUB_CODE    = B.SET_METH
		LEFT JOIN BCM130T  G WITH (NOLOCK)  ON G.COMP_CODE   = A.COMP_CODE
											AND G.CUSTOM_CODE = A.CUSTOM_CODE
		LEFT JOIN BPR100T  H WITH (NOLOCK)  ON H.COMP_CODE = A.COMP_CODE
										    AND H.ITEM_CODE = A1.ITEM_CODE_DETAIL
		WHERE A.COMP_CODE = @Compcode
		AND   A.CHANGE_BASIS_NUM = #{CHANGE_BASIS_NUM}
	</select>

	<select id="s_map100ukrv_wmServiceImpl.selectPrimaryDataList2" parameterType="Map" resultType="rMap" >
		--전표출력 쿼리인데 지급결의등록의 지급결의서 출력용으로 활용하기 위해 가져옴
		--차변금액의 전표데이터만 가져옴
		--s_map100ukrv_wmServiceImpl.selectPrimaryDataList2
		DECLARE @SLIP_DIVI   NVARCHAR(01)         -- 전표구분
		      , @PAGE_CNT    INT                  -- 한페이지당 출력행 갯수

		    SET @SLIP_DIVI = #{SLIP_DIVI}         --1: 회계 , 2: 결의
		    SET @PAGE_CNT  = #{PAGE_CNT}

		BEGIN
           SET NOCOUNT ON
           SET ARITHABORT ON

           SELECT T.AUTO_NUM                                                      AS AUTO_NUM
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)   AS PAGE
                , CONVERT(NUMERIC(6,0),ROUND((T.EX_SEQ-1) / @PAGE_CNT, 0, 1) + 1) AS PAGE_SEQ
                , X.PAGE_SEQ                                                      AS MAX_PAGE_SEQ    --PAGE별 PAGE_SEQ의 MAX값
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7) + RIGHT('00000' + CONVERT(NVARCHAR,CONVERT(NUMERIC(6,0),ROUND((T.EX_SEQ-1) / @PAGE_CNT, 0, 1) + 1)),5) AS PAGE_DIVI
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)  AS PAGE_KEY        -- PAGE 별 KEY값 (그룹핑용)
                , 1                                                              AS PAGE_TOT
                , T.IN_DIV_NAME                                                  AS IN_DIV_NAME
                , T.IN_DEPT_CODE                                                 AS IN_DEPT_CODE
                , T.IN_DEPT_NAME                                                 AS IN_DEPT_NAME
                , T.CHARGE_NAME                                                  AS CHARGE_NAME
                , uniLITE.fnGetUserDate(T.COMP_CODE, T.EX_DATE)                  AS EX_DATES
                , T.EX_NUM                                                       AS EX_NUM
                , T.EX_SEQ                                                       AS EX_SEQ
                , uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATE)                  AS AC_DATES
                , T.SLIP_NUM                                                     AS SLIP_NUM
                , T.SLIP_SEQ                                                     AS SLIP_SEQ
                , ISNULL(T.ACCNT, '')                                            AS ACCNT
                , M1.ACCNT_NAME                                                  AS ACCNT_NAME
                  -- 1
                , ISNULL(T.AC_CODE1, '')                                         AS AC_CODE1
                , CASE B1.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA1)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA1),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE1 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA1,'')
                                        END
                   END                                                           AS AC_DATA1
                , ISNULL(T.AC_DATA_NAME1, '')                                    AS AC_DATA_NAME1
                  -- 2
                , ISNULL(T.AC_CODE2, '')                                         AS AC_CODE2
                , CASE B2.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA2)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA2),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE2 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA2,'')
                                        END
                   END                                                           AS AC_DATA2
                , ISNULL(T.AC_DATA_NAME2, '')                                    AS AC_DATA_NAME2
                  -- 3
                , ISNULL(T.AC_CODE3, '')                                         AS AC_CODE3
                , CASE B3.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA3)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA3),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE3 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA3,'')
                                        END
                   END                                                           AS AC_DATA3
                , ISNULL(T.AC_DATA_NAME3, '')                                    AS AC_DATA_NAME3
                  -- 4
                , ISNULL(T.AC_CODE4, '')                                         AS AC_CODE4
                , CASE B4.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA4)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA4),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE4 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA4,'')
                                        END
                   END                                                           AS AC_DATA4
                , ISNULL(T.AC_DATA_NAME4, '')                                    AS AC_DATA_NAME4
                  -- 5
                , ISNULL(T.AC_CODE5, '')                                         AS AC_CODE5
                , CASE B5.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA5)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA5),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE5 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA5,'')
                                        END
                   END                                                           AS AC_DATA5
                , ISNULL(T.AC_DATA_NAME5, '')                                    AS AC_DATA_NAME5
                  -- 6
                , ISNULL(T.AC_CODE6, '')                                         AS AC_CODE6
                , CASE B6.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA6)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA6),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE6 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA6,'')
                                        END
                   END                                                           AS AC_DATA6
                , ISNULL(T.AC_DATA_NAME6, '')                                    AS AC_DATA_NAME6
                  --
                , ISNULL(T.DEPT_NAME, '')                                        AS DEPT_NAME
                , ISNULL(T.DIV_NAME, '')                                         AS DIV_NAME
                , T.DR_CR                                                        AS DR_CR
                , CASE T.DR_CR WHEN '1' THEN T.AMT_I     ELSE 0.0 END            AS DR_AMT_I
                , CASE T.DR_CR WHEN '2' THEN T.AMT_I     ELSE 0.0 END            AS CR_AMT_I
                , CASE T.DR_CR WHEN '1' THEN T.FOR_AMT_I ELSE 0.0 END            AS FOR_DR_AMT_I
                , CASE T.DR_CR WHEN '2' THEN T.FOR_AMT_I ELSE 0.0 END            AS FOR_CR_AMT_I
                , T.REMARK                                                       AS REMARK
                , T.MONEY_UNIT                                                   AS MONEY_UNIT
                , T.SLIP_DIVI                                                    AS SLIP_DIVI
                , T.COMPANY_NUM                                                  AS COMPANY_NUM
                , T.EXCHG_RATE_O                                                 AS EXCHG_RATE_O
                , T.PROOF_KIND                                                   AS PROOF_KIND
                , T.EB_YN                                                        AS EB_YN
                , T.EB_YN_NAME  + CASE WHEN ISNULL(T.EB_YN_NAME, '') = '' THEN '' ELSE ' : ' END + ISNULL(M6.CODE_NAME, '')                 AS EB_YN_NAME
                , T.INPUT_PATH_NM                                                AS INPUT_PATH_NM
                , DENSE_RANK() OVER(ORDER BY T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7) + RIGHT('00000' + CONVERT(NVARCHAR,CONVERT(NUMERIC(5,0),ROUND((T.EX_SEQ-1) / @PAGE_CNT, 0, 1) + 1)),5)) AS ROWNUM
             FROM (
                   SELECT A.COMP_CODE                                          AS COMP_CODE
                        , A.AUTO_NUM                                           AS AUTO_NUM
                        , M1.DIV_NAME                                          AS IN_DIV_NAME
                        , A.IN_DEPT_CODE                                       AS IN_DEPT_CODE
                        , A.IN_DEPT_NAME                                       AS IN_DEPT_NAME
                        , M4.CODE_NAME                                         AS CHARGE_NAME
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.AC_DATE  ELSE A.EX_DATE  END   AS EX_DATE
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.SLIP_NUM ELSE A.EX_NUM   END   AS EX_NUM
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.SLIP_SEQ ELSE A.EX_SEQ   END   AS EX_SEQ
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_DATE  ELSE A.AC_DATE  END   AS AC_DATE
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_NUM   ELSE A.SLIP_NUM END   AS SLIP_NUM
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_SEQ   ELSE A.SLIP_SEQ END   AS SLIP_SEQ
                        , A.ACCNT                                              AS ACCNT
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE1
                           END                                                 AS AC_CODE1
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA1
                           END                                                 AS AC_DATA1
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME1
                           END                                                 AS AC_DATA_NAME1
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE2
                           END                                                 AS AC_CODE2
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA2
                           END                                                 AS AC_DATA2
                        , CASE WHEN A.AC_DATA1 != '' AND A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME2
                           END                                                 AS AC_DATA_NAME2
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE3
                           END                                                 AS AC_CODE3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA3
                           END                                                 AS AC_DATA3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME3
                           END                                                 AS AC_DATA_NAME3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE4
                           END                                                 AS AC_CODE4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA4
                           END                                                 AS AC_DATA4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME4
                           END                                                 AS AC_DATA_NAME4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE5
                           END                                                 AS AC_CODE5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA5
                           END                                                 AS AC_DATA5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME5
                           END                                                 AS AC_DATA_NAME5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE6
                           END                                                 AS AC_CODE6
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA6
                           END                                                 AS AC_DATA6
                        , CASE WHEN A.AC_DATA1 != '' AND  A. AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME6
                           END                                                 AS AC_DATA_NAME6
                        , M3.TREE_NAME                                         AS DEPT_NAME
                        , M2.DIV_NAME                                          AS DIV_NAME
                        , A.DR_CR                                              AS DR_CR
                        , A.AMT_I                                              AS AMT_I
                        , A.FOR_AMT_I                                          AS FOR_AMT_I
                        , A.REMARK                                             AS REMARK
                        , CASE WHEN ISNULL(M5.REF_CODE1, '') = 'Y' THEN NULL
                               ELSE ISNULL(A.MONEY_UNIT, 'KRW')
                           END                                                 AS MONEY_UNIT
                        , A.SLIP_DIVI                                          AS SLIP_DIVI
                        , CASE WHEN A.SPEC_DIVI IN ('F1', 'F2') THEN ISNULL(B.COMPANY_NUM, '')
                               ELSE ''
                           END                                                 AS COMPANY_NUM
                        , A.EXCHG_RATE_O                                       AS EXCHG_RATE_O
                        , CASE WHEN A.SPEC_DIVI IN ('F1', 'F2') THEN ISNULL(M6.CODE_NAME, '')
                               ELSE ''
                           END                                                 AS PROOF_KIND
                        , CASE WHEN A.AC_CODE1 = 'I7' THEN A.AC_DATA1
                               WHEN A.AC_CODE2 = 'I7' THEN A.AC_DATA2
                               WHEN A.AC_CODE3 = 'I7' THEN A.AC_DATA3
                               WHEN A.AC_CODE4 = 'I7' THEN A.AC_DATA4
                               WHEN A.AC_CODE5 = 'I7' THEN A.AC_DATA5
                               WHEN A.AC_CODE6 = 'I7' THEN A.AC_DATA6
                               ELSE ''
                           END                                                 AS EB_YN
                        , CASE WHEN A.AC_CODE1 = 'I7' THEN A.AC_DATA_NAME1
                               WHEN A.AC_CODE2 = 'I7' THEN A.AC_DATA_NAME2
                               WHEN A.AC_CODE3 = 'I7' THEN A.AC_DATA_NAME3
                               WHEN A.AC_CODE4 = 'I7' THEN A.AC_DATA_NAME4
                               WHEN A.AC_CODE5 = 'I7' THEN A.AC_DATA_NAME5
                               WHEN A.AC_CODE6 = 'I7' THEN A.AC_DATA_NAME6
                               ELSE ''
                           END                                                 AS EB_YN_NAME
                        , ISNULL(M7.CODE_NAME, '')                             AS INPUT_PATH_NM
                        , A.REASON_CODE
        	<if test="SLIP_DIVI == &quot;1&quot;">
        	--회계전표
                     FROM  (SELECT * FROM AGJ210T   WITH (NOLOCK)
                             WHERE COMP_CODE = #{S_COMP_CODE}
                              AND AC_DATE + CONVERT(nvarchar, SLIP_NUM) IN
                                <foreach collection="AC_DATE" item="acDate" separator="," close=")" open="(">
                                    '${acDate}'
                                </foreach>
                             AND (MOD_DIVI IS NULL OR MOD_DIVI = '')) A

                          LEFT JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN BOR120T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                                              AND M1.DIV_CODE   = A.IN_DIV_CODE
                          LEFT JOIN BOR120T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                                              AND M2.DIV_CODE   = A.DIV_CODE
                          LEFT JOIN BSA210T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = A.COMP_CODE
                                                              AND M3.TREE_CODE  = A.DEPT_CODE
                          LEFT JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = A.COMP_CODE
                                                              AND M4.MAIN_CODE  = 'A009'
                                                              AND M4.SUB_CODE   = A.CHARGE_CODE
                          LEFT JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = A.COMP_CODE
                                                              AND M5.MAIN_CODE  = 'B004'
                                                              AND M5.SUB_CODE   = A.MONEY_UNIT
                          LEFT JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = A.COMP_CODE
                                                              AND M6.MAIN_CODE  = 'A022'
                                                              AND M6.SUB_CODE   = A.PROOF_KIND
                          LEFT JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE  = A.COMP_CODE
                                                              AND M7.MAIN_CODE  = 'A011'
                                                              AND M7.SUB_CODE   = A.INPUT_PATH
                    WHERE A.COMP_CODE          = #{S_COMP_CODE}
                      AND ISNULL(A.CASH_NUM,0) = 0

        </if>
        <if test="SLIP_DIVI != &quot;1&quot;">
        --결의전표
                     FROM  (SELECT * FROM AGJ110T   WITH (NOLOCK)
                             WHERE COMP_CODE = #{S_COMP_CODE}
                             AND EX_DATE + CONVERT(nvarchar, EX_NUM) = #{AC_DATE}
							 AND DR_CR = '2'
                             AND (MOD_DIVI IS NULL OR MOD_DIVI = '')) A

                          LEFT JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN BOR120T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                                              AND M1.DIV_CODE   = A.IN_DIV_CODE
                          LEFT JOIN BOR120T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                                              AND M2.DIV_CODE   = A.DIV_CODE
                          LEFT JOIN BSA210T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = A.COMP_CODE
                                                              AND M3.TREE_CODE  = A.DEPT_CODE
                          LEFT JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = A.COMP_CODE
                                                              AND M4.MAIN_CODE  = 'A009'
                                                              AND M4.SUB_CODE   = A.CHARGE_CODE
                          LEFT JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = A.COMP_CODE
                                                              AND M5.MAIN_CODE  = 'B004'
                                                              AND M5.SUB_CODE   = A.MONEY_UNIT
                          LEFT JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = A.COMP_CODE
                                                              AND M6.MAIN_CODE  = 'A022'
                                                              AND M6.SUB_CODE   = A.PROOF_KIND
                          LEFT JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE  = A.COMP_CODE
                                                              AND M7.MAIN_CODE  = 'A011'
                                                              AND M7.SUB_CODE   = A.INPUT_PATH
                    WHERE A.COMP_CODE          = #{S_COMP_CODE}
                      AND ISNULL(A.CASH_NUM,0) = 0
        </if>
                 ) T
                   LEFT JOIN ABA200T B1 WITH (NOLOCK) ON B1.COMP_CODE = T.COMP_CODE
                                                     AND B1.AC_CD     = T.AC_CODE1
                   LEFT JOIN ABA200T B2 WITH (NOLOCK) ON B2.COMP_CODE = T.COMP_CODE
                                                     AND B2.AC_CD     = T.AC_CODE2
                   LEFT JOIN ABA200T B3 WITH (NOLOCK) ON B3.COMP_CODE = T.COMP_CODE
                                                     AND B3.AC_CD     = T.AC_CODE3
                   LEFT JOIN ABA200T B4 WITH (NOLOCK) ON B4.COMP_CODE = T.COMP_CODE
                                                     AND B4.AC_CD     = T.AC_CODE4
                   LEFT JOIN ABA200T B5 WITH (NOLOCK) ON B5.COMP_CODE = T.COMP_CODE
                                                     AND B5.AC_CD     = T.AC_CODE5
                   LEFT JOIN ABA200T B6 WITH (NOLOCK) ON B6.COMP_CODE = T.COMP_CODE
                                                     AND B6.AC_CD     = T.AC_CODE6
                   LEFT JOIN ABA400T M1 WITH (NOLOCK) ON M1.COMP_CODE = T.COMP_CODE
                                                     AND M1.ACCNT     = T.ACCNT
                   LEFT JOIN ABA500T M2 WITH (NOLOCK) ON M2.COMP_CODE = T.COMP_CODE
                                                     AND M2.CRDT_NUM  = CASE WHEN T.AC_CODE1 = 'G5' THEN T.AC_DATA1
                                                                             WHEN T.AC_CODE2 = 'G5' THEN T.AC_DATA2
                                                                             WHEN T.AC_CODE3 = 'G5' THEN T.AC_DATA3
                                                                             WHEN T.AC_CODE4 = 'G5' THEN T.AC_DATA4
                                                                             WHEN T.AC_CODE5 = 'G5' THEN T.AC_DATA5
                                                                             WHEN T.AC_CODE6 = 'G5' THEN T.AC_DATA6
                                                                             ELSE ''
                                                                        END
                   LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE = T.COMP_CODE
                                                     AND M3.MAIN_CODE = N'A165'
                                                     AND M3.SUB_CODE  = N'41'
                   <if test="SLIP_DIVI == &quot;1&quot;">
                   LEFT JOIN (
                                SELECT A.COMP_CODE
                                     , A.AC_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, A.SLIP_NUM), 7)          AS PAGE
                                     , MAX(CONVERT(NUMERIC(5,0),ROUND((A.SLIP_SEQ - 1) / @PAGE_CNT, 0, 1) + 1)) AS PAGE_SEQ

                                 FROM AGJ210T A WITH(NOLOCK)
                                WHERE A.COMP_CODE          = #{S_COMP_CODE}
                                  AND ISNULL(A.CASH_NUM,0) = 0
                                  AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
                                   <if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                    AND A.AC_DATE + CONVERT(nvarchar, A.SLIP_NUM) IN
                                      <foreach collection="AC_DATE" item="acDate" separator="," close=")" open="(">
                                             '${acDate}'
                                      </foreach>
                                  </if>


                                GROUP BY A.COMP_CODE, A.AC_DATE, A.SLIP_NUM
                            ) X ON X.COMP_CODE = T.COMP_CODE
                               AND X.PAGE      = T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)
                               LEFT JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE = T.COMP_CODE
                                                                 AND M6.MAIN_CODE = N'A070'
                                                                 AND M6.SUB_CODE  = T.REASON_CODE

                     </if>
                     <if test="SLIP_DIVI != &quot;1&quot;">
                     LEFT JOIN (
                                SELECT A.COMP_CODE
                                     , A.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, A.EX_NUM), 7)          AS PAGE
                                     , MAX(CONVERT(NUMERIC(5,0),ROUND((A.EX_SEQ - 1) / @PAGE_CNT, 0, 1) + 1)) AS PAGE_SEQ

                                 FROM AGJ110T A WITH(NOLOCK)
                                WHERE A.COMP_CODE          = #{S_COMP_CODE}
                                  AND ISNULL(A.CASH_NUM,0) = 0
                                  AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
                                   <if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                      AND A.EX_DATE + CONVERT(nvarchar, A.EX_NUM)  = #{AC_DATE}
                                    </if>

                                GROUP BY A.COMP_CODE, A.EX_DATE, A.EX_NUM, A.SLIP_NUM
                            ) X ON X.COMP_CODE = T.COMP_CODE
                               AND X.PAGE      = T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)
                               LEFT JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE = T.COMP_CODE
                                                                 AND M6.MAIN_CODE = N'A070'
                                                                 AND M6.SUB_CODE  = T.REASON_CODE
                        </if>
           ORDER BY T.EX_DATE, T.EX_NUM, T.EX_SEQ

           SET ARITHABORT OFF
           SET NOCOUNT OFF
		END
	</select>
</mapper>