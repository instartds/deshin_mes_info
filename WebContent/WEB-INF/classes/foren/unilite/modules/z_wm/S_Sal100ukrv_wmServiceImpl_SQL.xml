<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sal100ukrv_wmServiceImpl">
<!-- 기본 거래처명 가져오는 로직 -->
	<select id="s_sal100ukrv_wmServiceImpl.getCustomNm" parameterType="Map" resultType="rMap">
		/* s_sal100ukrv_wmServiceImpl.getCustomNm */
		SELECT CUSTOM_NAME
		     , TAX_TYPE
		     , AGENT_TYPE
		     , CREDIT_YN
		     , WON_CALC_BAS
		     , BUSI_PRSN
		     , MONEY_UNIT
		  FROM BCM100T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
	</select>

<!-- 창고CELL 코드 가져오는 로직 -->
	<select id="s_sal100ukrv_wmServiceImpl.getWhCellCode" parameterType="Map" resultType="string">
		/* s_sal100ukrv_wmServiceImpl.getWhCellCode */
		SELECT WH_CELL_CODE
		  FROM BSA225T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND WH_CODE    = #{WH_CODE}
		   AND DEFAULT_YN = 'Y'
	</select>

<!-- 담당자 변경 시, 자동으로 set할 데이터 가져오는 로직 -->
	<select id="s_sal100ukrv_wmServiceImpl.chgInoutPrsn" parameterType="Map" resultType="rMap">
		/* s_sal100ukrv_wmServiceImpl.chgInoutPrsn */
		SELECT A.REF_CODE9      AS CUSTOM_CODE
		     , A.REF_CODE10     AS WH_CODE
		     , B.CUSTOM_NAME
		     , B.TAX_TYPE
		     , B.AGENT_TYPE
		     , B.CREDIT_YN
		     , B.WON_CALC_BAS
		     , B.BUSI_PRSN
		     , B.MONEY_UNIT 
		     , C.WH_CELL_CODE 
		  FROM BSA100T A WITH(NOLOCK)
		  LEFT JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                  AND B.CUSTOM_CODE = A.REF_CODE9
		  LEFT JOIN BSA225T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                  AND C.DIV_CODE    = #{DIV_CODE}
		                                  AND C.WH_CODE     = A.REF_CODE10
		                                  AND C.DEFAULT_YN  = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.MAIN_CODE = 'S010'
		  AND A.SUB_CODE  = #{INOUT_PRSN}
	</select>

<!-- 기획상품단가 가져오는 로직 - 20210225 추가 -->
	<select id="s_sal100ukrv_wmServiceImpl.getUnitPrice" parameterType="Map" resultType="double">
		/* s_sal100ukrv_wmServiceImpl.getUnitPrice */
		SELECT UNIT_PRICE
		  FROM S_BPR401T_WM WITH(NOLOCK)
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND DIV_CODE      = #{DIV_CODE}
		   AND CUSTOM_CODE   = #{CUSTOM_CODE}
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND ITEM_CODE     = #{ITEM_CODE}
		   AND ORDER_UNIT    = #{ORDER_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(GOODS_CODE)">
		   AND GOODS_CODE    = #{GOODS_CODE}
		</if>
		   AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN START_DATE AND END_DATE
		   AND AVAILABLE_QTY &gt; COMPLETE_QTY
	</select>



<!-- 조회팝업 쿼리 -->
	<select id="s_sal100ukrv_wmServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">
		/* s_sal100ukrv_wmServiceImpl.selectOrderNumMasterList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT A.DIV_CODE
		         , A.INOUT_CODE
		         , C1.CUSTOM_NAME
		         , A.CREATE_LOC
		         , (CASE WHEN ISNULL ( A.INOUT_DATE , '' ) = ''
		                 THEN ''
		                 ELSE REPLACE ( REPLACE( REPLACE ( @DateFormat , 'YYYY' , SUBSTRING (A.INOUT_DATE, 1, 4))
		                                                               , 'MM'   , SUBSTRING (A.INOUT_DATE, 5, 2))
		                                                               , 'DD'   , SUBSTRING (A.INOUT_DATE, 7, 2))
		             END)                                                                 AS INOUT_DATE
		         , SUM(A.ORDER_UNIT_Q)                                                    AS INOUT_Q
		         , A.INOUT_PRSN
		         , A.INOUT_NUM
		         , A.SALE_DIV_CODE
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.ISSUE_REQ_NUM
		         , C1.AGENT_TYPE
		         , C1.CREDIT_YN
		         , C1.WON_CALC_BAS
		         , C1.TAX_TYPE
		         , C1.BUSI_PRSN
		         , A.WH_CODE
		         , A.WH_CELL_CODE
		         , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN (CASE WHEN ISNULL(E.SALE_DATE, '') = ''
		                                                                THEN ''
		                                                                ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.SALE_DATE, 1, 4))
		                                                                                                        , 'MM'  , SUBSTRING(E.SALE_DATE, 5, 2))
		                                                                                                        , 'DD'  , SUBSTRING(E.SALE_DATE, 7, 2))
		                                                         END)
		                                                     ELSE (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                                                                THEN ''
		                                                                ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                                                                        , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                                                                        , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		                                                         END)
		             END                                                                 AS SALE_DATE
		         --20210205 추가: CUSTOM_PRSN, PHONE
		         , A.CUSTOM_PRSN
		         , A.PHONE
		         --20210217 추가
		         , A.BILL_TYPE
		         --20210308 추가
		         , A.CARD_CUSTOM_CODE
		      FROM           BTR100T A  WITH (NOLOCK)
		      LEFT  JOIN SOF110T C  WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                          AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                          AND C.ORDER_NUM      = A.ORDER_NUM
		                                          AND C.SER_NO         = A.ORDER_SEQ
		      LEFT  JOIN TEA110T F  WITH (NOLOCK)  ON F.COMP_CODE      = A.COMP_CODE
		                                          AND F.DIV_CODE       = A.DIV_CODE
		                                          AND F.SO_SER_NO      = A.ORDER_NUM
		                                          AND F.SO_SER         = A.ORDER_SEQ
		      INNER JOIN BCM100T C1 WITH (NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                          AND C1.CUSTOM_CODE   = A.INOUT_CODE
		      INNER JOIN BPR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                          AND C2.ITEM_CODE     = A.ITEM_CODE
		      LEFT  JOIN BCM100T C3 WITH (NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                          AND C3.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		      INNER  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
		                                          AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                          AND C4.TREE_CODE     = A.WH_CODE
		      LEFT  JOIN SSA110T D  WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                          AND D.DIV_CODE       = A.DIV_CODE
		                                          AND D.INOUT_NUM      = A.INOUT_NUM
		                                          AND D.INOUT_SEQ      = A.INOUT_SEQ
		      LEFT  JOIN SSA100T E  WITH (NOLOCK)  ON E.COMP_CODE      = D.COMP_CODE
		                                          AND E.DIV_CODE       = D.DIV_CODE
		                                          AND E.BILL_NUM       = D.BILL_NUM
		     WHERE A.COMP_CODE          = @CompCode
		       AND A.DIV_CODE           = #{DIV_CODE}
		       AND A.INOUT_TYPE         = '2'
		       AND A.INOUT_TYPE_DETAIL != '98'                                 /* SET구성출고제외 */
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE     LIKE #{CUSTOM_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND C1.CUSTOM_NAME   LIKE #{CUSTOM_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		       AND A.INOUT_PRSN        = #{INOUT_PRSN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		       AND A.INOUT_DATE    &gt;= #{INOUT_DATE_FR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		       AND A.INOUT_DATE    &lt;= #{INOUT_DATE_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE      LIKE #{ITEM_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND C2.ITEM_NAME     LIKE #{ITEM_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO     LIKE #{PROJECT_NO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
		       AND A.ISSUE_REQ_NUM  LIKE #{ISSUE_REQ_NUM} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">
		       AND C.RECEIVER_NAME  LIKE '%' + #{RECEIVER_NAME}
		     </if>
<!-- 20210205 추가: 고객명, 연락처 -->
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		       AND A.CUSTOM_PRSN    LIKE '%' + #{CUSTOM_PRSN} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PHONE)">
		       AND A.PHONE          LIKE '%' + #{PHONE} + '%'
		     </if>
		       AND A.CREATE_LOC     = #{CREATE_LOC}

		     GROUP BY A.DIV_CODE, A.INOUT_CODE, C1.CUSTOM_NAME, A.CREATE_LOC, A.INOUT_DATE, A.INOUT_PRSN, A.INOUT_NUM, A.SALE_DIV_CODE, A.MONEY_UNIT, A.EXCHG_RATE_O, E.SALE_DATE, A.ISSUE_REQ_NUM
		            , C1.AGENT_TYPE
		            , C1.CREDIT_YN
		            , C1.WON_CALC_BAS
		            , C1.TAX_TYPE
		            , C1.BUSI_PRSN
		            , E.SALE_DATE
		            , A.WH_CODE
		            , A.WH_CELL_CODE
		            --20210205 추가: CUSTOM_PRSN, PHONE
		            , A.CUSTOM_PRSN
		            , A.PHONE
		            --20210217 추가
		            , A.BILL_TYPE
		            --20210308 추가
		            , A.CARD_CUSTOM_CODE
		     ORDER BY A.DIV_CODE, A.INOUT_DATE, A.INOUT_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

<!-- 조회 쿼리 -->
	<select id="s_sal100ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_sal100ukrv_wmServiceImpl.selectList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    /* 시분초 필드 처리여부 설정 */
		    DECLARE @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)
		          , @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    SELECT @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
		         , @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
		         , @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
		      FROM BSA100T
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'S048'
		       AND SUB_CODE IN(N'SI', N'SR', N'SS')

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		        FROM BSA300T WITH(NOLOCK)
		        WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		        FROM BSA100T WITH(NOLOCK)
		        WHERE COMP_CODE = @CompCode
		        AND MAIN_CODE = N'B044'
		        AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    IF @TimeSI IS NULL
		        SET @TimeSI = 'N'
		    IF @TimeSR IS NULL
		        SET @TimeSR = 'N'
		    IF @TimeSS IS NULL
		        SET @TimeSS = 'N'

		    /* 데이터 조회 */
		    SELECT A.INOUT_SEQ
		         ,(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                     ELSE C1.CUSTOM_NAME
		            END)                                                    AS CUSTOM_NAME
		         , A.INOUT_TYPE_DETAIL
		         , A.WH_CODE
		         , C4.TREE_NAME   AS WH_NAME
		         , A.WH_CELL_CODE
		         , C5.WH_CELL_NAME
		         , A.SALE_DIV_CODE
		         , A.ITEM_CODE
		         ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		            END)                                                    AS ITEM_NAME
		         , C2.SPEC
		         , A.LOT_NO
		         , A.ITEM_STATUS
		         , A.ORDER_UNIT
		         , A.PRICE_TYPE                                                                    --단가구분
		         , A.TRNS_RATE                                              AS TRANS_RATE
		         , A.ORDER_UNIT_Q                                           AS ORDER_UNIT_Q
		         , A.ORDER_UNIT_P                                           AS ORDER_UNIT_P
		         , ISNULL(A.INOUT_WGT_Q, 0)                                 AS INOUT_WGT_Q         --출하지시량(중량단위)
		         , ISNULL(A.INOUT_FOR_WGT_P, 0)                             AS INOUT_FOR_WGT_P     --외화단가(중량단위)
		         , ISNULL(A.INOUT_VOL_Q, 0)                                 AS INOUT_VOL_Q         --출하지시량(부피단위)
		         , ISNULL(A.INOUT_FOR_VOL_P, 0)                             AS INOUT_FOR_VOL_P     --외화단가(부피단위)
		         , ISNULL(A.INOUT_WGT_P, 0)                                 AS INOUT_WGT_P         --단가(중량단위)
		         , ISNULL(A.INOUT_VOL_P, 0)                                 AS INOUT_VOL_P         --단가(부피단위)
		         , A.ORDER_UNIT_O AS ORDER_UNIT_O
		         , A.TAX_TYPE
		         , A.INOUT_TAX_AMT
		         , A.ORDER_UNIT_O + A.INOUT_TAX_AMT AS ORDER_AMT_SUM							   --합계금액
		         , A.WGT_UNIT                                                                      --중량단위
		         , ISNULL(A.UNIT_WGT, 0)                                    AS UNIT_WGT            --단위중량
		         , A.VOL_UNIT                                                                      --부피단위
		         , ISNULL(A.UNIT_VOL, 0)                                    AS UNIT_VOL            --단위부피
		         , ISNULL(A.TRANS_COST, 0)                                  AS TRANS_COST
		         , ISNULL(A.DISCOUNT_RATE, 0)                               AS DISCOUNT_RATE
		         , CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN
		                     CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q, 0)
		                          WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q, 0)
		                          ELSE 0.0
		                     END
		                ELSE
		                     CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(M2.GOOD_STOCK_Q, 0)
		                          WHEN A.ITEM_STATUS = '2' THEN ISNULL(M2.BAD_STOCK_Q, 0)
		                          ELSE 0.0
		                     END
		           END      AS STOCK_Q              --재고수량
		         , CASE WHEN ISNULL(A.LOT_NO,'') = '' THEN
		                CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(D1.GOOD_STOCK_Q / A.TRNS_RATE, 0)
		                     WHEN A.ITEM_STATUS = '2' THEN ISNULL(D1.BAD_STOCK_Q / A.TRNS_RATE, 0)
		                     ELSE 0.0
		                END
		             ELSE
		               CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(M2.GOOD_STOCK_Q / A.TRNS_RATE, 0)
		                    WHEN A.ITEM_STATUS = '2' THEN ISNULL(M2.BAD_STOCK_Q / A.TRNS_RATE, 0)
		                    ELSE 0.0
		               END
		           END                                                      AS ORDER_STOCK_Q              --판매단위재고수량
		         , A.PRICE_YN
		         , A.ACCOUNT_YNC
		         ,(CASE WHEN ISNULL(A.DELIVERY_DATE , '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.DELIVERY_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.DELIVERY_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.DELIVERY_DATE, 7, 2))
		              END)                                                  AS DELIVERY_DATE
		         , A.DELIVERY_TIME
		         , C.RECEIVER_ID
		         , C.RECEIVER_NAME
		         , C.TELEPHONE_NUM1
		         , C.TELEPHONE_NUM2
		         , ISNULL(C.ADDRESS1, '') + ISNULL(C.ADDRESS2, '')          AS ADDRESS
		         ,(CASE WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
		                                    ELSE D2.CUSTOM_NAME
		           END)                                                     AS SALE_CUST_CD
		         , A.SALE_PRSN
		         , A.DVRY_CUST_CD
		         , D3.DVRY_CUST_NM                                          AS DVRY_CUST_NAME
		         ,(CASE WHEN @RefItem = '1' THEN D4.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D4.CUSTOM_NAME2
		                                     ELSE D4.CUSTOM_NAME
		            END)                                                    AS ORDER_CUST_CD
		         , A.PROJECT_NO AS PLAN_NUM
		         , A.ORDER_NUM
		         , A.ISSUE_REQ_NUM
		         , A.BASIS_NUM
		         , F1.PAY_METHODE1                                          AS PAY_METHODE1
		         , F.LC_SER_NO                                              AS LC_SER_NO
		         , A.REMARK
		         , A.INOUT_NUM
		         ,(CASE WHEN ISNULL(A.INOUT_DATE , '') = ''
		                THEN ''
		                ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
		           END)                                                     AS INOUT_DATE
		         , A.INOUT_METH
		         , A.INOUT_TYPE
		         , A.DIV_CODE
		         , A.INOUT_CODE_TYPE
		         , A.INOUT_CODE
		         , A.SALE_CUSTOM_CODE
		         , A.CREATE_LOC
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.ORDER_UNIT_Q                                          AS ORIGIN_Q
		         , ISNULL(E.ORDER_NOT_Q, 0.0)                              AS ORDER_NOT_Q
		         , ISNULL(B.ISSUE_REQ_QTY, 0) - ISNULL(B.ISSUE_QTY, 0)     AS ISSUE_NOT_Q
		         , A.ORDER_SEQ
		         , A.ISSUE_REQ_SEQ
		         , A.BASIS_SEQ
		         , A.ORDER_TYPE
		         , ISNULL(C2.STOCK_UNIT, '')                               AS STOCK_UNIT
		         , A.BILL_TYPE
		         , A.SALE_TYPE
		         , C1.CREDIT_YN
		         , A.ACCOUNT_Q
		         , A.SALE_C_YN
		         , A.INOUT_PRSN
		         , ISNULL(C1.WON_CALC_BAS, '3')                            AS WON_CALC_BAS
		         --20190916 수정: 세액포함여부 BTR100T.TAX_INOUT에 저장해서 해당내용 조회하도록 수정, BTR100T에 없을 경우 SOF100T 우선 확인, 최후에 BCM100T에서 조회
		         --, ISNULL(C1.TAX_TYPE    , '1')                            AS TAX_INOUT
		         , CASE WHEN ISNULL(A.TAX_INOUT, '') = '' THEN CASE WHEN ISNULL(D.TAX_INOUT, '') = '' THEN ISNULL(C1.TAX_TYPE, '1')
		                                                            ELSE ISNULL(D.TAX_INOUT, '')
		                                                       END
		                ELSE ISNULL(A.TAX_INOUT, '')
		           END                                                     AS TAX_INOUT
		         , ISNULL(C1.AGENT_TYPE  , '1')                            AS AGENT_TYPE
		         , ISNULL(C2.STOCK_CARE_YN, 'Y')                           AS STOCK_CARE_YN
		         , CASE WHEN C.RETURN_Q &gt; 0 THEN 'Y'
		                ELSE 'N'
		           END                                                     AS RETURN_Q_YN
		         , ISNULL(M1.REF_CODE2,'')                                 AS REF_CODE2
		         , ISNULL(C2.EXCESS_RATE, 0)                               AS EXCESS_RATE
		         , ISNULL(ORDER_Q, 0)                                      AS SRC_ORDER_Q
		         , CASE WHEN ISNULL(A.CREATE_LOC, '1') = '1' THEN ISNULL(C.ORDER_P, 0)
		                                                     ELSE ISNULL(F.PRICE, 0)
		            END                                                    AS SOF110T_PRICE
		         , ISNULL(B.ISSUE_REQ_PRICE, 0)                            AS SRQ100T_PRICE
		         , A.COMP_CODE
		         , A.DEPT_CODE
		         , C3.ITEM_ACCOUNT
		         , 'FEFER'                                                 AS GUBUN
		         , D.NATION_INOUT
		         , A.PACK_UNIT_Q
		         , A.BOX_Q
		         , A.EACH_Q
		         , A.LOSS_Q
		         , A.REMARK_INTER
		         , CASE WHEN ISNULL(C2.ITEM_NAME2,'') = '' THEN ISNULL(R9.CUSTOM_ITEM_NAME, C2.ITEM_NAME)
		                                                           ELSE ISNULL(C2.ITEM_NAME1,'')
		                                                      END          AS KEY_IN_ITEM_NAME
		         , C2.ITEM_NAME2                                           AS KEY_IN_PART_ITEM_NAME
		         --20210201 추가
		         , A.CUSTOM_PRSN
		         , A.PHONE
		         , A.ZIP_CODE
		         , A.ADDR1
		         , A.ADDR2
		         --20210225 추가
		         , A.GOODS_CODE
		         --20210308 추가
		         , A.CARD_CUSTOM_CODE
		      FROM            BTR100T A  WITH(NOLOCK)
		           LEFT  JOIN SRQ100T B  WITH(NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                              AND B.ISSUE_DIV_CODE = A.DIV_CODE
		                                              AND B.ISSUE_REQ_NUM  = A.ISSUE_REQ_NUM
		                                              AND B.ISSUE_REQ_SEQ  = A.ISSUE_REQ_SEQ
		           LEFT  JOIN SOF110T C  WITH(NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
		                                              AND C.OUT_DIV_CODE   = A.DIV_CODE
		                                              AND C.ORDER_NUM      = A.ORDER_NUM
		                                              AND C.SER_NO         = A.ORDER_SEQ
		           LEFT  JOIN SOF100T D  WITH(NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
		                                              AND D.DIV_CODE       = A.DIV_CODE
		                                              AND D.ORDER_NUM      = A.ORDER_NUM
		           LEFT  JOIN TEA110T F  WITH(NOLOCK) ON F.COMP_CODE       = A.COMP_CODE
		                                              AND F.DIV_CODE       = A.DIV_CODE
		                                              AND F.SO_SER_NO      = A.ORDER_NUM
		                                              AND F.SO_SER         = A.ORDER_SEQ
		           LEFT  JOIN TEA100T F1 WITH(NOLOCK) ON F1.COMP_CODE      = A.COMP_CODE
		                                              AND F1.DIV_CODE      = A.DIV_CODE
		                                              AND F1.SO_SER_NO     = A.ORDER_NUM
		           LEFT  JOIN(
		                      SELECT X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO
		                           , ISNULL(X.ORDER_Q - X.OUTSTOCK_Q + X.RETURN_Q - X.ISSUE_REQ_Q - SUM(ISNULL(Z.ISSUE_QTY, 0.0)), 0.0) AS ORDER_NOT_Q
		                      FROM             SOF110T X WITH(NOLOCK)
		                             LEFT JOIN SRQ100T Z WITH(NOLOCK) ON Z.COMP_CODE       = X.COMP_CODE
		                                                              AND Z.ISSUE_DIV_CODE = X.OUT_DIV_CODE
		                                                              AND Z.ORDER_NUM      = X.ORDER_NUM
		                                                              AND Z.SER_NO         = X.SER_NO
		                      GROUP BY X.COMP_CODE, X.OUT_DIV_CODE, X.ORDER_NUM, X.SER_NO
		                             , X.ORDER_Q, X.OUTSTOCK_Q, X.RETURN_Q, X.ISSUE_REQ_Q
		                    )       E                  ON E.COMP_CODE      = A.COMP_CODE
		                                              AND E.OUT_DIV_CODE   = A.DIV_CODE
		                                              AND E.ORDER_NUM      = A.ORDER_NUM
		                                              AND E.SER_NO         = A.ORDER_SEQ
		           INNER JOIN BCM100T C1 WITH(NOLOCK)  ON C1.COMP_CODE     = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE   = A.INOUT_CODE
		           INNER JOIN BPR100T C2 WITH(NOLOCK)  ON C2.COMP_CODE     = A.COMP_CODE
		                                              AND C2.ITEM_CODE     = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH(NOLOCK)  ON C3.COMP_CODE     = A.COMP_CODE
		                                              AND C3.DIV_CODE      = A.DIV_CODE
		                                              AND C3.ITEM_CODE     = A.ITEM_CODE
		           LEFT  JOIN BSA220T C4 WITH(NOLOCK)  ON C4.COMP_CODE     = A.COMP_CODE
		                                              AND C4.TYPE_LEVEL    = A.DIV_CODE
		                                              AND C4.TREE_CODE     = A.WH_CODE
		           LEFT  JOIN BSA225T C5 WITH(NOLOCK)  ON C5.COMP_CODE     = A.COMP_CODE
		                                              AND C5.DIV_CODE      = A.DIV_CODE
		                                              AND C5.WH_CODE       = A.WH_CODE
		                                              AND C5.WH_CELL_CODE  = A.WH_CELL_CODE
		           LEFT  JOIN BIV100T D1 WITH(NOLOCK)  ON D1.COMP_CODE     = A.COMP_CODE
		                                              AND D1.DIV_CODE      = A.DIV_CODE
		                                              AND D1.WH_CODE       = A.WH_CODE
		                                              AND D1.ITEM_CODE     = A.ITEM_CODE
		           LEFT  JOIN BCM100T D2 WITH(NOLOCK)  ON D2.COMP_CODE     = A.COMP_CODE
		                                              AND D2.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		           LEFT  JOIN SCM100T D3 WITH(NOLOCK)  ON D3.COMP_CODE     = A.COMP_CODE
		                                              AND D3.CUSTOM_CODE   = A.INOUT_CODE
		                                              AND D3.DVRY_CUST_SEQ = CASE WHEN ISNUMERIC(A.DVRY_CUST_CD) = 1 THEN A.DVRY_CUST_CD ELSE -1 END
		           LEFT  JOIN BCM100T D4 WITH(NOLOCK)  ON D4.COMP_CODE     = D.COMP_CODE
		                                              AND D4.CUSTOM_CODE   = D.CUSTOM_CODE
		           LEFT  JOIN BSA100T M1 WITH(NOLOCK)  ON M1.COMP_CODE     = A.COMP_CODE
		                                              AND M1.MAIN_CODE     = 'S007'
		                                              AND M1.SUB_CODE      = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN BIV150T M2 WITH(NOLOCK)  ON M2.COMP_CODE     = A.COMP_CODE
		                                              AND M2.ITEM_CODE	   = A.ITEM_CODE
		                                              AND M2.WH_CODE	   = A.WH_CODE
		                                              AND M2.WH_CELL_CODE  = A.WH_CELL_CODE
		                                              AND M2.LOT_NO		   = ISNULL(A.LOT_NO,'')
		                                              AND M2.SUM_TYPE	   = (SELECT MAX(SUB_CODE) FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B084' AND REF_CODE1='Y')
		           LEFT  JOIN BPR300T R9 WITH(NOLOCK)  ON R9.COMP_CODE       = A.COMP_CODE
		                                              AND R9.DIV_CODE        = A.DIV_CODE
		                                              AND R9.ITEM_CODE       = A.ITEM_CODE
		                                              AND R9.CUSTOM_CODE     = A.INOUT_CODE
		                                              AND R9.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
		                                                                          FROM BPR300T WITH(NOLOCK)
		                                                                         WHERE COMP_CODE   = R9.COMP_CODE
		                                                                           AND DIV_CODE    = R9.DIV_CODE
		                                                                           AND ITEM_CODE   = R9.ITEM_CODE
		                                                                           AND CUSTOM_CODE = R9.CUSTOM_CODE)
		     WHERE A.COMP_CODE  = @CompCode
		       AND A.INOUT_TYPE = N'2'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE  = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		       AND A.INOUT_NUM = #{INOUT_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE = #{CUSTOM_CODE}
		</if>
		     ORDER BY  A.INOUT_SEQ, A.INOUT_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>



<!-- 저장 로직(master) -->
	<insert id="s_sal100ukrv_wmServiceImpl.insertLogMaster" parameterType="Map">
		/* s_sal100ukrv_wmServiceImpl.insertLogMaster */
		INSERT INTO L_BTR100T
		     ( KEY_VALUE,         OPR_FLAG
		     , COMP_CODE,         DIV_CODE,        INOUT_NUM,      INOUT_SEQ,       INOUT_TYPE,        INOUT_METH
		     , INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE,     WH_CODE,         INOUT_DATE
		     , ITEM_CODE,         ITEM_STATUS,     INOUT_Q,        INOUT_P,         INOUT_I
		     , MONEY_UNIT,        INOUT_FOR_P,     INOUT_FOR_O,    EXCHG_RATE_O,    ORDER_TYPE
		     , ORDER_NUM,         ORDER_SEQ,       INOUT_PRSN,     BASIS_NUM,       BASIS_SEQ
		     , ACCOUNT_YNC,       ACCOUNT_Q,       CREATE_LOC,     SALE_C_YN,       REMARK
		     , ORDER_UNIT,        TRNS_RATE,       PROJECT_NO,     ORDER_UNIT_Q,    ORDER_UNIT_P
		     , ORDER_UNIT_FOR_P,  ISSUE_REQ_NUM,   ISSUE_REQ_SEQ,  DVRY_CUST_CD,    DISCOUNT_RATE
		     , INOUT_TAX_AMT,     TAX_TYPE,        LOT_NO,         SALE_DIV_CODE,   SALE_CUSTOM_CODE
		     , BILL_TYPE,         SALE_TYPE,       PRICE_YN,       ORDER_UNIT_O,    SALE_PRSN
		     , FR_ACCOUNT,        TO_ACCOUNT,      LC_NUM,         TRADE_LOC
		     , DELIVERY_DATE,     DELIVERY_TIME,   WH_CELL_CODE,   AGENT_TYPE,      DEPT_CODE
		     , TRANS_COST,        PRICE_TYPE,      INOUT_WGT_Q,    INOUT_FOR_WGT_P, INOUT_WGT_P
		     , INOUT_VOL_Q,       INOUT_FOR_VOL_P, INOUT_VOL_P,    WGT_UNIT,        UNIT_WGT
		     , VOL_UNIT,          UNIT_VOL,        NATION_INOUT,   SALE_C_DATE,     UPDATE_DB_USER
		     , UPDATE_DB_TIME,    PACK_UNIT_Q,     BOX_Q,          EACH_Q,          LOSS_Q
		     , REMARK_INTER
		     , TAX_INOUT
		     --20210201 추가
		     , CUSTOM_PRSN,       PHONE,           ZIP_CODE,       ADDR1,           ADDR2
		     --20210225 추가
		     , GOODS_CODE
		     --20210308 추가
		     , CARD_CUSTOM_CODE
		     )
		SELECT  #{KEY_VALUE}                                                    -- KEY_VALUE
		     , #{OPR_FLAG}                                                     -- OPR_FLAG
		     , #{COMP_CODE}                                                    -- COMP_CODE
		     , #{DIV_CODE}                                                     -- DIV_CODE
		     , #{INOUT_NUM}                                                    -- INOUT_NUM
		     , #{INOUT_SEQ}                                                    -- INOUT_SEQ
		     , N'2'                                                            -- INOUT_TYPE
		     , #{INOUT_METH}                                                   -- INOUT_METH
		     , #{INOUT_TYPE_DETAIL}                                            -- INOUT_TYPE_DETAIL
		     , N'4'                                                            -- INOUT_CODE_TYPE
		     , #{INOUT_CODE}                                                   -- INOUT_CODE
		     , #{WH_CODE}                                                      -- WH_CODE
		     , #{INOUT_DATE}                                                   -- INOUT_DATE
		     , #{ITEM_CODE}                                                    -- ITEM_CODE
		     , #{ITEM_STATUS}                                                  -- ITEM_STATUS
		     , CAST(${ORDER_UNIT_Q} AS NUMERIC(30,6)) * ${TRANS_RATE}          -- INOUT_Q
		     , CAST(${ORDER_UNIT_P} AS NUMERIC(30,6)) / ${TRANS_RATE} * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_P
		     , CAST(${ORDER_UNIT_O} AS NUMERIC(30,6)) * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_I
		     , #{MONEY_UNIT}                                                   -- MONEY_UNIT
		     , CAST(${ORDER_UNIT_P} AS NUMERIC(30,6)) / ${TRANS_RATE}          -- INOUT_FOR_P
		     , #{ORDER_UNIT_O}                                                 -- INOUT_FOR_O
		     , #{EXCHG_RATE_O}                                                 -- EXCHG_RATE_O
		     , #{ORDER_TYPE}                                                   -- ORDER_TYPE
		     , #{ORDER_NUM}                                                    -- ORDER_NUM
		     , #{ORDER_SEQ}                                                    -- ORDER_SEQ
		     , #{INOUT_PRSN}                                                   -- INOUT_PRSN
		     , #{BASIS_NUM}                                                    -- BASIS_NUM
		     , #{BASIS_SEQ}                                                    -- BASIS_SEQ
		     , #{ACCOUNT_YNC}                                                  -- ACCOUNT_YNC
		     ,   0                                                             -- ACCOUNT_Q
		     , #{CREATE_LOC}                                                   -- CREATE_LOC
		     , N'N'                                                            -- SALE_C_YN
		     , #{REMARK}                                                       -- REMARK
		     , #{ORDER_UNIT}                                                   -- ORDER_UNIT
		     , #{TRANS_RATE}                                                   -- TRNS_RATE
		     , #{PLAN_NUM}                                                     -- PROJECT_NO
		     , #{ORDER_UNIT_Q}                                                 -- ORDER_UNIT_Q
		     , #{ORDER_UNIT_P}                                                 -- ORDER_UNIT_P
		     , #{ORDER_UNIT_P}                                                 -- ORDER_UNIT_FOR_P
		     , #{ISSUE_REQ_NUM}                                                -- ISSUE_REQ_NUM
		     , #{ISSUE_REQ_SEQ}                                                -- ISSUE_REQ_SEQ
		     , #{DVRY_CUST_CD}                                                 -- DVRY_CUST_CD
		     , #{DISCOUNT_RATE}                                                -- DISCOUNT_RATE
		     , CAST(${INOUT_TAX_AMT} AS NUMERIC(30,6)) * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) -- INOUT_TAX_AMT
		     , #{TAX_TYPE}                                                     -- TAX_TYPE
		     , #{LOT_NO}                                                       -- LOT_NO
		     , #{SALE_DIV_CODE}                                                -- SALE_DIV_CODE
		     , #{SALE_CUSTOM_CODE}                                             -- SALE_CUSTOM_CODE
		     , #{BILL_TYPE}                                                    -- BILL_TYPE
		     , #{SALE_TYPE}                                                    -- SALE_TYPE
		     , #{PRICE_YN}                                                     -- PRICE_YN
		     , #{ORDER_UNIT_O}                                                 -- ORDER_UNIT_O
		     , #{SALE_PRSN}                                                    -- SALE_PRSN
		     , ITEM_ACCOUNT                                                    -- FR_ACCOUNT
		     , CASE WHEN ITEM_ACCOUNT >= N'40' THEN N'00'
		            ELSE ITEM_ACCOUNT
		       END                                                             -- TO_ACCOUNT
		     , #{LC_SER_NO}                                                    -- LC_NUM
		     , CASE WHEN #{CREATE_LOC} = '5' THEN
		            CASE WHEN #{PAY_METHODE1}   = 'MLC' THEN '1'
		                 WHEN #{PAY_METHODE1}   = 'LLC' THEN '2'
		                 WHEN #{ISSUE_REQ_NUM} != ''    THEN '4'
		                 ELSE '3'
		             END
		            ELSE #{CREATE_LOC}
		        END                                                            -- TRADE_LOC
		     , #{DELIVERY_DATE}                                                -- DELIVERY_DATE
		     , #{DELIVERY_TIME}                                                -- DELIVERY_TIME
		     , #{WH_CELL_CODE}                                                 -- WH_CELL_CODE
		     , #{AGENT_TYPE}                                                   -- AGENT_TYPE
		     , #{DEPT_CODE}                                                    -- DEPT_CODE
		     , #{TRANS_COST}                                                   -- TRANS_COST
		     , #{PRICE_TYPE}                                                   -- PRICE_TYPE
		     , #{INOUT_WGT_Q}                                                  -- INOUT_WGT_Q
		     , #{INOUT_FOR_WGT_P}                                              -- INOUT_FOR_WGT_P
		     , #{INOUT_WGT_P}                                                  -- INOUT_WGT_P
		     , #{INOUT_VOL_Q}                                                  -- INOUT_VOL_Q
		     , #{INOUT_FOR_VOL_P}                                              -- INOUT_FOR_VOL_P
		     , #{INOUT_VOL_P}                                                  -- INOUT_VOL_P
		     , #{WGT_UNIT}                                                     -- WGT_UNIT
		     , #{UNIT_WGT}                                                     -- UNIT_WGT
		     , #{VOL_UNIT}                                                     -- VOL_UNIT
		     , #{UNIT_VOL}                                                     -- UNIT_VOL
		     , #{NATION_INOUT}                                                 -- 국내외구분
		     , #{SALE_DATE}                                                    -- 매출일
		     , #{S_USER_ID}                                                    -- UPDATE_DB_USER
		     , GETDATE()                                                       -- UPDATE_DB_TIME
		     , #{PACK_UNIT_Q}
		     , #{BOX_Q}
		     , #{EACH_Q}
		     , #{LOSS_Q}
		     , #{REMARK_INTER}
		     , #{TAX_INOUT}
		     --20210201 추가
		     , #{CUSTOM_PRSN}, #{PHONE}, #{ZIP_CODE}, #{ADDR1}, #{ADDR2}
		     --20210225 추가
		     , #{GOODS_CODE}
		     --20210308 추가
		     , #{CARD_CUSTOM_CODE}
		  FROM BPR200T WITH (NOLOCK)
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</insert>

	<update id="spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_S_SAL100UKRV_WM (
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{SalePrsnChk	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
</mapper>