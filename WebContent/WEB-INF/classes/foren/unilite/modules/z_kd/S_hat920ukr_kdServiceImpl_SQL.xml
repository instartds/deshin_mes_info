<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hat920ukr_kdService">
    <select id="s_hat920ukr_kdService.select" parameterType="Map" resultType="rMap">
       /* s_hat920ukr_kdService.select */

            DECLARE  @S_COMP_CODE     NVARCHAR(20),   /* 법인코드 */
                     @DUTY_YYYYMMDD NVARCHAR(10),
                     @DEPT_CODE NVARCHAR(10),
                     @DEPT_NAME NVARCHAR(20),
                     @TREE_LEVEL NVARCHAR(10)

            SET @S_COMP_CODE   = #{S_COMP_CODE}
            SET @DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
            SET @DEPT_CODE     = #{DEPT_CODE}
            SET @DEPT_NAME     = #{DEPT_NAME}
            
            IF(ISNULL(@DEPT_CODE, '' ) != '')
	            BEGIN
	            SELECT @TREE_LEVEL = LEFT(TREE_LEVEL,4)
	             FROM  BSA210T
	            WHERE COMP_CODE = @S_COMP_CODE
	              AND TREE_CODE = @DEPT_CODE
				END
			ELSE
				BEGIN
					SET @TREE_LEVEL = ''
				END
        --  [ 데이터 조회 ] --------------------------------------------------------------------
            SELECT   AA.COMP_CODE
                    ,AA.PERSON_NUMB
                    ,AA.NAME
                    ,AA.DEPT_CODE
                    ,AA.DEPT_NAME
                    ,AA.WORK_TEAM
                    ,AA.WORK_TEAM_NAME
                    ,AA.DUTY_YYYYMMDD
                    ,AA.DUTY_FR_TIME
                    ,AA.MIDDLE_MEAL_CHK
                    ,AA.DINNER_MEAL_CHK
                    ,AA.NIGHT_MEAL_CHK
                    ,AA.APPLY_CHK
                    ,AA.FOOD_COUPON_NO
                    ,AA.ABIL_CODE
                    ,AA.GBN
                    ,AA.AFFIL_CODE  
					,AA.POST_CODE
            FROM
                  ( SELECT A.COMP_CODE
                          ,A.PERSON_NUMB
                          ,B.NAME
                          ,B.DEPT_CODE
                          ,B.DEPT_NAME
                          ,C.TREE_LEVEL
                          ,E.WORK_TEAM
                          ,D.CODE_NAME AS WORK_TEAM_NAME
                          ,A.DUTY_DATE AS DUTY_YYYYMMDD
                          ,CASE WHEN ISNULL(A.DUTY_FR_H, '') = '' OR (ISNULL(A.DUTY_FR_H, '') = 0 AND ISNULL(A.DUTY_FR_M,'') = 0) THEN '' ELSE CONVERT(VARCHAR(2),A.DUTY_FR_H) + ':' + REPLICATE('0', 2 - LEN(A.DUTY_FR_M)) + CONVERT(VARCHAR(2),A.DUTY_FR_M) END AS DUTY_FR_TIME
                          ,CASE A.FOOD_CHK1_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS MIDDLE_MEAL_CHK
                          ,CASE A.FOOD_CHK2_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS DINNER_MEAL_CHK
                          ,CASE A.FOOD_CHK3_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS NIGHT_MEAL_CHK
                          ,CASE A.APPLY_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS APPLY_CHK
                          ,A.FOOD_COUPON_NO
                          , B.ABIL_CODE
                          , 'NORMAL' AS GBN
                          , B.AFFIL_CODE
						  , B.POST_CODE
                    FROM  HAT920T_KD A
                    INNER JOIN HUM100T B ON B.COMP_CODE     = A.COMP_CODE
                                        AND B.PERSON_NUMB   = A.PERSON_NUMB
                    LEFT  JOIN BSA210T C ON C.COMP_CODE     = A.COMP_CODE
                                        AND C.TREE_CODE     = B.DEPT_CODE
                    LEFT  JOIN HAT500T E ON E.COMP_CODE     = A.COMP_CODE
                                        AND E.PERSON_NUMB   = A.PERSON_NUMB
                                        AND E.DUTY_YYYYMMDD = A.DUTY_DATE
                    LEFT  JOIN BSA100T D ON A.COMP_CODE     = D.COMP_CODE
                                        AND D.MAIN_CODE     = 'H004'
                                        AND D.SUB_CODE     <![CDATA[<>]]> '$'
                                        AND D.SUB_CODE      = E.WORK_TEAM


                    WHERE A.COMP_CODE  = @S_COMP_CODE
                   
                      AND A.DUTY_DATE = @DUTY_YYYYMMDD

                    UNION ALL

                    SELECT A.COMP_CODE
                         , A.PERSON_NUMB
                         , '기타' + RIGHT(A.PERSON_NUMB, 1)                             AS NAME
                         , '99999999'                                                   AS DEPT_CODE
                         , ''                                                           AS DEPT_NAME
                         , @TREE_LEVEL													AS TREE_LEVEL
                         , ''                                                           AS WORK_TEAM
                         , ''                                                           AS WORK_TEAM_NAME
                         , A.DUTY_DATE                                                  AS DUTY_YYYYMMDD
                         ,''                                                            AS DUTY_FR_TIME
                         , CASE A.FOOD_CHK1_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS MIDDLE_MEAL_CHK
                         , CASE A.FOOD_CHK2_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS DINNER_MEAL_CHK
                         , CASE A.FOOD_CHK3_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS NIGHT_MEAL_CHK

                         , CASE A.APPLY_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS APPLY_CHK
                         , A.FOOD_COUPON_NO
                         , '999'                                                        AS ABIL_CODE
                         , 'ALL' AS GBN
                         , '999'														AS AFFIL_CODE  
						 , '9999999'													AS POST_CODE
                    FROM  HAT920T_KD A
                    WHERE A.COMP_CODE  = @S_COMP_CODE
                      AND A.DUTY_DATE = @DUTY_YYYYMMDD
                      AND A.PERSON_NUMB LIKE '9' + '%') AA LEFT JOIN DEPT_NEW_MAPPING W
                       ON W.COMP_CODE     = AA.COMP_CODE
                      AND W.NEW_DEPT_CODE = AA.DEPT_CODE
            WHERE 1=1
            <if test="HUMAN_MANAGER_YN == &quot;N&quot;">
            	AND AA.TREE_LEVEL LIKE @TREE_LEVEL +'%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
            	AND AA.TREE_LEVEL LIKE @TREE_LEVEL +'%'
            </if>
       ORDER BY   AA.AFFIL_CODE,  AA.DEPT_CODE,  AA.POST_CODE,  AA.PERSON_NUMB 
    </select>
    <update id="s_hat920ukr_kdService.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call USP_HUMAN_HAT920T_Food_fnInsert(
            #{comp_code,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
            #{duty_date,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
            #{KeyValue,     mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
            #{user_id,      mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
            #{LangCode,     mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc,    mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <insert id="s_hat920ukr_kdService.insertDetail" parameterType="Map">    /* 추가 */

    </insert>

    <update id="s_hat920ukr_kdService.updateDetail" parameterType="Map">        /* 수정 */
        /* s_hat920ukr_kdService.updateDetail */
        UPDATE HAT920T_KD
        SET
             FOOD_CHK1_YN       = CASE WHEN #{MIDDLE_MEAL_CHK}    = 'true' THEN 'Y' ELSE 'N' END
            ,FOOD_CHK2_YN       = CASE WHEN #{DINNER_MEAL_CHK}     = 'true' THEN 'Y' ELSE 'N' END
            ,FOOD_CHK3_YN       = CASE WHEN #{NIGHT_MEAL_CHK}     = 'true' THEN 'Y' ELSE 'N' END
		    ,UPDATE_DB_USER     = #{S_USER_ID}
            ,UPDATE_DB_TIME     = GETDATE()
        WHERE COMP_CODE         = #{S_COMP_CODE}
          AND PERSON_NUMB       = #{PERSON_NUMB}
          AND DUTY_DATE	        = #{DUTY_YYYYMMDD}

    </update>

    <delete id="s_hat920ukr_kdService.deleteDetail" parameterType="Map">        /* 삭제 */


    </delete>

	<select id="s_hat920ukr_kdService.selectMealPersonId" parameterType="Map" resultType="rMap">
    	DECLARE  @S_COMP_CODE NVARCHAR(20),   /* 법인코드 */
	      			  @PERSON_NUMB NVARCHAR(10),
	      			  @TREE_LEVEL NVARCHAR(10),
	      			  @DEPT_CODE NVARCHAR(10),
	      			  @DEPT_NAME NVARCHAR(20),
	      			  @USER_ID NVARCHAR(100)

   	     SET @S_COMP_CODE = #{S_COMP_CODE}
   	     SET @PERSON_NUMB = #{PERSON_NUMB}
   	     SET @USER_ID = #{S_USER_ID}

			/*로그인 유저가 인사담당자(HX17)에 존재하지 않으면 현업담당자로 보고 상위 TREE LEVEL의 값 가져와서 세팅*/
          IF NOT EXISTS( SELECT SUB_CODE
					            FROM BSA100T
								WHERE MAIN_CODE = 'HX17'
								AND COMP_CODE =  @S_COMP_CODE
								AND SUB_CODE <![CDATA[<>]]> '$'
								AND SUB_CODE = @PERSON_NUMB)

				BEGIN
					 					SELECT @TREE_LEVEL = LEFT(TREE_LEVEL,4)
										FROM BSA210T
										WHERE COMP_CODE = @S_COMP_CODE
										AND TREE_CODE IN (SELECT DEPT_CODE
																	FROM BSA300T
																	WHERE USER_ID = @USER_ID)
					 SELECT  @DEPT_CODE = TREE_CODE
								 ,@DEPT_NAME = TREE_NAME
					  FROM BSA210T
					  WHERE TREE_LEVEL = @TREE_LEVEL

					  SELECT @DEPT_CODE AS DEPT_CODE
						 		 ,@DEPT_NAME AS DEPT_NAME
						 		 ,@TREE_LEVEL AS TREE_LEVEL
				END



	</select>
	<select id="s_hat920ukr_kdService.selectFoodCouponList" parameterType="Map" resultType="rMap">
        /* s_hat920ukr_kdService.selectFoodCouponList */

            DECLARE  @S_COMP_CODE     NVARCHAR(20),   /* 법인코드 */
              			  @DUTY_YYYYMMDD NVARCHAR(10),
              			  @DEPT_CODE NVARCHAR(10),
              			  @TREE_LEVEL NVARCHAR(10)

            SET @S_COMP_CODE = #{S_COMP_CODE}
            SET @DUTY_YYYYMMDD   = #{DUTY_YYYYMMDD}
            SET @DEPT_CODE   = #{DEPT_CODE}
            SET @TREE_LEVEL   = #{TREE_LEVEL}
        --  [ 데이터 조회 ] --------------------------------------------------------------------
			SELECT A.COMP_CODE
				 	  ,A.PERSON_NUMB
				  	  ,A.DUTY_DATE AS DUTY_YYYYMMDD
				  	  ,A.FOOD_COUPON_NO
			FROM  HAT920T_KD A
			INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE
			                    AND A.PERSON_NUMB = B.PERSON_NUMB
			INNER JOIN BSA210T C ON A.COMP_CODE = C.COMP_CODE
			                    AND B.DEPT_CODE = C.TREE_CODE
			INNER JOIN BSA100T D ON A.COMP_CODE = D.COMP_CODE
			                    AND D.MAIN_CODE = 'H004'
			                    AND D.SUB_CODE = A.WORK_TEAM
			                    AND D.SUB_CODE <![CDATA[<> ]]>'$'

	        WHERE A.COMP_CODE  = @S_COMP_CODE
		   <if test="@foren.Ognl@isEmpty(TREE_LEVEL)">
			    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			        AND  B.DEPT_CODE = @DEPT_CODE
			    </if>
			   <!--  <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		            AND  B.DEPT_NAME  LIKE '%' + @DEPT_NAME  + '%'
		        </if> -->
	       </if>
		   <if test="@foren.Ognl@isNotEmpty(TREE_LEVEL)">
					AND C.TREE_LEVEL LIKE '%' + @TREE_LEVEL + '%'
		   </if>
		   <if test="GBN == &quot;1&quot;">
		  			AND A.FOOD_CHK1_YN = 'Y' --중식
		  	</if>
		  	<if test="GBN == &quot;2&quot;">
		  			AND A.FOOD_CHK2_YN = 'Y' --석식
		  	</if>
		  	<if test="GBN == &quot;3&quot;">
		  			AND A.FOOD_CHK3_YN = 'Y' --야식
		  	</if>
	    <if test="@foren.Ognl@isNotEmpty(DUTY_YYYYMMDD)">
	        AND A.DUTY_DATE = @DUTY_YYYYMMDD
	    </if>

        ORDER BY A.COMP_CODE, A.PERSON_NUMB, B.NAME
    </select>
     <update id="s_hat920ukr_kdService.updateFoodCouponNo" parameterType="Map">        /* 수정 */
        /* s_hat920ukr_kdService.updateFoodCouponNo */
        UPDATE HAT920T_KD
        SET FOOD_COUPON_NO = ( SELECT ISNULL(MAX(CONVERT(INT,FOOD_COUPON_NO)),0) + 1
        									  FROM HAT920T_KD
        									  WHERE COMP_CODE        = #{COMP_CODE}
									          AND DUTY_DATE	= #{DUTY_YYYYMMDD})
		     ,UPDATE_DB_USER     = #{S_USER_ID}
            ,UPDATE_DB_TIME     = GETDATE()
        WHERE COMP_CODE         = #{COMP_CODE}
          AND PERSON_NUMB        = #{PERSON_NUMB}
          AND DUTY_DATE       	= #{DUTY_YYYYMMDD}

    </update>
    	<select id="s_hat920ukr_kdService.print" parameterType="Map" resultType="rMap">
        /* s_hat920ukr_kdService.print */

            DECLARE  @S_COMP_CODE     NVARCHAR(20),   /* 법인코드 */
              			  @DUTY_YYYYMMDD NVARCHAR(10),
              			  @DEPT_CODE NVARCHAR(10),
              			  @TREE_LEVEL NVARCHAR(10),
              			  @GBN NVARCHAR(2),
              			  @DIV_CODE NVARCHAR(10)

            SET @S_COMP_CODE = #{S_COMP_CODE}
            SET @DUTY_YYYYMMDD   = #{DUTY_YYYYMMDD}
            SET @DEPT_CODE   = #{DEPT_CODE}
            SET @TREE_LEVEL   = #{TREE_LEVEL}
            SET @GBN = #{GBN}
            SET @DIV_CODE = #{S_DIV_CODE}
        --  [ 데이터 조회 ] --------------------------------------------------------------------
				SELECT A.COMP_CODE
                      , ROW_NUMBER() OVER(PARTITION BY LEFT(W.NEW_DEPT_CODE, 3) + '00000' ORDER BY ISNULL(W.SORT_SEQ, ''), B.ABIL_CODE, A.PERSON_NUMB) AS SEQ
				      ,A.PERSON_NUMB
					  ,B.NAME
					  ,B.DEPT_CODE
					  ,B.DEPT_NAME
					  ,G.WORK_TEAM
					  ,D.CODE_NAME AS WORK_TEAM_NAME
					  ,A.DUTY_DATE + '-' + B.DEPT_CODE + '-' + CONVERT(VARCHAR(3),ROW_NUMBER() OVER(PARTITION BY LEFT(W.NEW_DEPT_CODE, 3) + '00000' ORDER BY ISNULL(W.SORT_SEQ, ''), B.ABIL_CODE, A.PERSON_NUMB))  AS DUTY_YYYYMMDD
					  ,CONVERT(VARCHAR(2),A.DUTY_FR_H) + ':' + REPLICATE('0', 2 - LEN(A.DUTY_FR_M)) + CONVERT(VARCHAR(2),A.DUTY_FR_M) AS DUTY_FR_TIME
					  ,CASE A.FOOD_CHK1_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS MIDDLE_MEAL_CHK
					  ,CASE A.FOOD_CHK2_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS DINNER_MEAL_CHK
					  ,CASE A.FOOD_CHK3_YN    WHEN 'Y'    THEN    '1' ELSE '0' END  AS NIGHT_MEAL_CHK
					  ,A.FOOD_COUPON_NO
					  ,E.CODE_NAME AS ABIL_NAME
					  ,CASE WHEN @GBN = '1' THEN '중식'
					        WHEN @GBN = '2' THEN '석식'
							ELSE  '야식'
					   END AS MEAL_GBN
					  ,F.DIV_NAME
			FROM  HAT920T_KD A
			INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE
                       AND A.PERSON_NUMB = B.PERSON_NUMB
            INNER JOIN BSA210T C ON A.COMP_CODE = C.COMP_CODE
                                AND B.DEPT_CODE = C.TREE_CODE
            INNER JOIN BSA100T E ON A.COMP_CODE = E.COMP_CODE
                                AND E.MAIN_CODE = 'H006'
                                AND E.SUB_CODE = B.ABIL_CODE
                                AND E.SUB_CODE   <![CDATA[<> ]]>  '$'
            INNER JOIN BOR120T F ON A.COMP_CODE = F.COMP_CODE
                                AND F.DIV_CODE = @DIV_CODE
            INNER JOIN HAT500T G ON G.COMP_CODE = A.COMP_CODE
                                AND G.PERSON_NUMB = A.PERSON_NUMB
                                AND A.DUTY_DATE = G.DUTY_YYYYMMDD
            INNER JOIN BSA100T D ON A.COMP_CODE = D.COMP_CODE
                                AND D.MAIN_CODE = 'H004'
                                AND D.SUB_CODE = G.WORK_TEAM
                                AND D.SUB_CODE  <![CDATA[<> ]]>  '$'
		   LEFT JOIN DEPT_NEW_MAPPING W  ON W.COMP_CODE     = B.COMP_CODE
                                AND W.NEW_DEPT_CODE = B.DEPT_CODE
	        WHERE A.COMP_CODE  = @S_COMP_CODE
		   <if test="@foren.Ognl@isEmpty(TREE_LEVEL)">
			    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			        AND  B.DEPT_CODE = @DEPT_CODE
			    </if>
			   <!--  <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		            AND  B.DEPT_NAME  LIKE '%' + @DEPT_NAME  + '%'
		        </if> -->
	       </if>
		   <if test="@foren.Ognl@isNotEmpty(TREE_LEVEL)">
					AND C.TREE_LEVEL LIKE '%' + @TREE_LEVEL + '%'
		   </if>
		   <if test="GBN == &quot;1&quot;">
		  			AND A.FOOD_CHK1_YN = 'Y'
		  	</if>
		  	<if test="GBN == &quot;2&quot;">
		  			AND A.FOOD_CHK2_YN = 'Y'
		  	</if>
		  	<if test="GBN == &quot;3&quot;">
		  			AND A.FOOD_CHK3_YN = 'Y'
		  	</if>
	    <if test="@foren.Ognl@isNotEmpty(DUTY_YYYYMMDD)">
	        AND A.DUTY_DATE = @DUTY_YYYYMMDD
	    </if>

        --ORDER BY A.COMP_CODE, B.DEPT_CODE, B.ABIL_CODE, A.PERSON_NUMB, B.NAME
         ORDER BY ISNULL(W.SORT_SEQ, ''), B.ABIL_CODE, A.PERSON_NUMB

    </select>
</mapper>