<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc800ukrv_kdService">
	<select id="s_zcc800ukrv_kdService.selectPersonDept" parameterType="Map" resultType="rMap">
        SELECT  H.DEPT_CODE
              , H.DEPT_NAME
        FROM                HUM100T   H  WITH (NOLOCK)
            WHERE   H.COMP_CODE        = #{S_COMP_CODE}
              AND   H.PERSON_NUMB      = #{PERSON_NUMB}
    </select>

	<select id="s_zcc800ukrv_kdService.selectSearchInfo" parameterType="Map" resultType="rMap">

	SELECT
        A.COMP_CODE
		,A.DIV_CODE
		,A.REQ_NUM
		,A.REQ_DATE
		,A.CUSTOM_CODE
		,R1.CUSTOM_NAME
		,R1.MONEY_UNIT
		,A.MAKE_GUBUN
		,A.REQ_GUBUN
		--,A.ITEM_CODE
		,A.ITEM_NAME
		,A.DEPT_CODE
		,R2.TREE_NAME AS DEPT_NAME
		,A.PERSON_NUMB
		,R3.NAME AS PERSON_NAME
		,A.REMARK
	 FROM s_zcc800T_KD A WITH(NOLOCK)
	 LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									  AND R1.CUSTOM_CODE = A.CUSTOM_CODE
     LEFT JOIN BSA210T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									  AND R2.TYPE_LEVEL = A.DIV_CODE
									  AND R2.TREE_CODE = A.DEPT_COdE
     LEFT JOIN HUM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									  AND R3.PERSON_NUMB = A.PERSON_NUMB
	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{DIV_CODE}
 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	  AND A.CUSTOM_CODE = #{CUSTOM_CODE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(REQ_DATE_FR)">
	  AND A.REQ_DATE &gt;= #{REQ_DATE_FR}
 </if>
 <if test="@foren.Ognl@isNotEmpty(REQ_DATE_TO)">
	  AND A.REQ_DATE &lt;= #{REQ_DATE_TO}
 </if>
 <if test="@foren.Ognl@isNotEmpty(MAKE_GUBUN)">
	  AND A.MAKE_GUBUN = #{MAKE_GUBUN}
 </if>
 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	  AND A.ITEM_NAME = #{ITEM_NAME}
 </if>
 <if test="@foren.Ognl@isNotEmpty(REQ_NUM)">
	  AND A.REQ_NUM = #{REQ_NUM}
 </if>
    </select>

    <select id="s_zcc800ukrv_kdService.selectDetail" parameterType="Map" resultType="rMap">
SELECT
        	A.COMP_CODE
			,A.DIV_CODE
			,A.REQ_NUM
			,A.REQ_SEQ
			,A.HM_CODE
			,A.CHILD_ITEM_CODE
			,R3.ITEM_NAME AS CHILD_ITEM_NAME
			,R3.ORDER_UNIT	AS UNIT
			,R2.SPEC	AS CHILD_ITEM_SPEC
			,A.PURCHASE_P
			,A.GARO_NUM
			,A.SERO_NUM
			,A.THICK_NUM
			,A.BJ_NUM
			,A.QTY
			,A.PRICE
			,A.AMT
			,A.DELIVERY_DATE
			,A.PURCHASE_QTY
			,A.IN_DATE
			,A.REMARK
			,A.CAL_QTY

			,R1.REF_CODE1 AS MAKE_GUBUN_REF1	--가로FLAG
			,R1.REF_CODE2 AS MAKE_GUBUN_REF2	--세로FLAG
			,R1.REF_CODE3 AS MAKE_GUBUN_REF3	--두께FLAG

			,R1.REF_CODE4 AS GARO_NUM_UNIT		--단위(가로)
			,R1.REF_CODE5 AS SERO_NUM_UNIT		--단위(세로)
			,R1.REF_CODE6 AS THICK_NUM_UNIT		--단위(두께)

			,R4.REF_CODE1 AS MATERIAL
		    , B.GW_DOC AS GW_DOCU_NUM
            , B.GW_FLAG
            , B.DRAFT_NO
            ,R1.REF_CODE8 AS CAL_UNIT
          FROM s_zcc810T_KD A WITH(NOLOCK)
	INNER JOIN s_zcc800T_KD B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										  AND B.DIV_CODE = A.DIV_CODE
										  AND B.REQ_NUM = A.REQ_NUM
	 LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									  AND R1.MAIN_CODE = 'WZ21'
									  AND R1.SUB_CODE != '$'
									  AND R1.SUB_CODE = B.MAKE_GUBUN
	LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.ITEM_CODE = A.CHILD_ITEM_CODE
	LEFT JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									 AND R3.DIV_CODE = A.DIV_CODE
									 AND R3.ITEM_CODE = A.CHILD_ITEM_CODE
	LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
									 AND R4.MAIN_CODE = 'WZ22'
									 AND R4.SUB_CODE != '$'
									 AND R4.SUB_CODE = A.HM_CODE
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.DIV_CODE = #{DIV_CODE}
           AND A.REQ_NUM = #{REQ_NUM}
    </select>

    <update id="s_zcc800ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <insert id="s_zcc800ukrv_kdService.insertMaster" parameterType="Map">
INSERT INTO s_zcc800T_KD
(
	COMP_CODE
	,DIV_CODE
	,REQ_NUM
	,REQ_DATE
	,CUSTOM_CODE
	,MAKE_GUBUN
	,REQ_GUBUN
	,ITEM_CODE
	,ITEM_NAME
	,DEPT_CODE
	,PERSON_NUMB
	,REMARK

	,INSERT_DB_USER
	,INSERT_DB_TIME
	,UPDATE_DB_USER
	,UPDATE_DB_TIME
)VALUES(
	#{S_COMP_CODE}
	,#{DIV_CODE}
	,#{REQ_NUM}
	,#{REQ_DATE}
	,#{CUSTOM_CODE}
	,#{MAKE_GUBUN}
	,#{REQ_GUBUN}
	,''
	,#{ITEM_NAME}
	,#{DEPT_CODE}
	,#{PERSON_NUMB}
	,#{REMARK}

	,#{S_USER_ID}
	,GETDATE()
	,#{S_USER_ID}
	,GETDATE()
)
    </insert>

    <update id="s_zcc800ukrv_kdService.updateMaster" parameterType="Map">
        UPDATE s_zcc800T_KD
           SET REMARK = #{REMARK}
            ,ITEM_NAME = #{ITEM_NAME}
			,UPDATE_DB_USER = #{S_USER_ID}
			,UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND REQ_NUM = #{REQ_NUM}
    </update>

    <delete id="s_zcc800ukrv_kdService.deleteMaster" parameterType="Map">
		DELETE s_zcc800T_KD
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND REQ_NUM = #{REQ_NUM}
    </delete>

    <insert id="s_zcc800ukrv_kdService.insertList" parameterType="Map">
INSERT INTO s_zcc810T_KD
(
	COMP_CODE
	,DIV_CODE
	,REQ_NUM
	,REQ_SEQ
	,HM_CODE
	,CHILD_ITEM_CODE
	,PURCHASE_P
	,GARO_NUM
	,SERO_NUM
	,THICK_NUM
	,BJ_NUM
	,QTY
	,PRICE
	,AMT
	,DELIVERY_DATE
--	,PURCHASE_QTY
--	,IN_DATE
	,REMARK
	,CAL_QTY

	,INSERT_DB_USER
	,INSERT_DB_TIME
	,UPDATE_DB_USER
	,UPDATE_DB_TIME

)VALUES(
	#{S_COMP_CODE}
	,#{DIV_CODE}
	,#{REQ_NUM}
	,#{REQ_SEQ}
	,#{HM_CODE}
	,#{CHILD_ITEM_CODE}
	,#{PURCHASE_P}
	,#{GARO_NUM}
	,#{SERO_NUM}
	,#{THICK_NUM}
	,#{BJ_NUM}
	,#{QTY}
	,#{PRICE}
	,#{AMT}
	,#{DELIVERY_DATE}

	,#{REMARK}
	,#{CAL_QTY}

	,#{S_USER_ID}
	,GETDATE()
	,#{S_USER_ID}
	,GETDATE()

)



    </insert>

    <update id="s_zcc800ukrv_kdService.updateList" parameterType="Map">
        UPDATE s_zcc810T_KD
           SET HM_CODE = #{HM_CODE}
			,CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
			,PURCHASE_P = #{PURCHASE_P}
			,GARO_NUM = #{GARO_NUM}
			,SERO_NUM = #{SERO_NUM}
			,THICK_NUM = #{THICK_NUM}
			,BJ_NUM = #{BJ_NUM}
			,QTY = #{QTY}
			,PRICE = #{PRICE}
			,AMT = #{AMT}
			,DELIVERY_DATE = #{DELIVERY_DATE}

		--	,PURCHASE_QTY = PURCHASE_QTY
		--	,IN_DATE = IN_DATE

			,REMARK = #{REMARK}
			,CAL_QTY = #{CAL_QTY}

			,UPDATE_DB_USER = #{S_USER_ID}
			,UPDATE_DB_TIME = GETDATE()

        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE = #{DIV_CODE}
          AND REQ_NUM = #{REQ_NUM}
          AND REQ_SEQ = #{REQ_SEQ}
    </update>

    <delete id="s_zcc800ukrv_kdService.deleteList" parameterType="Map">
       DELETE s_zcc810T_KD
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE = #{DIV_CODE}
          AND REQ_NUM = #{REQ_NUM}
          AND REQ_SEQ = #{REQ_SEQ}
    </delete>

    <select id="s_zcc800ukrv_kdService.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  S_ZCC800T_KD    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.DIV_CODE       = #{DIV_CODE}
           AND  A.REQ_NUM   	 = #{REQ_NUM}
    </select>

	<select id="s_zcc800ukrv_kdService.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE S_ZCC800T_KD
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND REQ_NUM    	   = #{REQ_NUM}
    </select>
    
    <select id="s_zcc800ukrv_kdService.fnOrderPrice" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE,
                A.TYPE,
                A.DIV_CODE,
                A.ITEM_CODE,
                A.CUSTOM_CODE,
                A.MONEY_UNIT,
                A.ORDER_UNIT,
                --A.PURCHASE_TYPE,
                --A.SALES_TYPE,
                A.ORDER_RATE,
                --A.PURCHASE_RATE,
                ISNULL(A.ITEM_P, '0') AS ORDER_P,
                A.APLY_START_DATE
         FROM uniLITE.BPR400T A
         INNER JOIN
           (SELECT COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT, MAX(APLY_START_DATE) AS APLY_START_DATE
            FROM uniLITE.BPR400T
            WHERE APLY_START_DATE &lt;= #{REQ_DATE}
            GROUP BY COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT
            ) B ON A.COMP_CODE = B.COMP_CODE
               AND A.TYPE                 = B.TYPE
               AND A.DIV_CODE             = B.DIV_CODE
               AND A.CUSTOM_CODE          = B.CUSTOM_CODE
               AND A.ITEM_CODE            = B.ITEM_CODE
               AND A.MONEY_UNIT           = B.MONEY_UNIT
               AND A.ORDER_UNIT           = B.ORDER_UNIT
               AND A.APLY_START_DATE      = B.APLY_START_DATE
         INNER JOIN unilite.BPR200T C ON A.COMP_CODE = C.COMP_CODE
                                     AND A.DIV_CODE  = C.DIV_CODE
                                     AND A.ITEM_CODE = C.ITEM_CODE
        WHERE A.ITEM_CODE   = #{ITEM_CODE}
            AND A.CUSTOM_CODE       = #{CUSTOM_CODE}
            AND A.COMP_CODE         = #{S_COMP_CODE}
            AND A.DIV_CODE          = #{DIV_CODE}
            AND A.TYPE              = N'1'
            AND A.MONEY_UNIT        = #{MONEY_UNIT}
            AND A.ORDER_UNIT        = #{ORDER_UNIT}
    </select>
</mapper>