<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ten900ukrv_kdServiceImpl">

    <select id="s_ten900ukrv_kdServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  S_ten900T_KD    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.REPORT_NO      = #{REPORT_NO}
    </select>

    <select id="s_ten900ukrv_kdServiceImpl.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE S_TEN900T_KD
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND REPORT_NO       = #{REPORT_NO}
    </select>

	<select id="s_ten900ukrv_kdServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
        /* str103ukrvServiceImpl.selectOrderNumMaster */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
                SELECT   A.COMP_CODE
                        ,A.DIV_CODE
                        ,A.REPORT_NO
                        ,A.REPORT_DATE
                        ,A.CUSTOM_CODE
                        ,B.CUSTOM_NAME
                        ,A.MONEY_UNIT
                        ,A.REMARK
                        ,A.EXCHG_RATE
                  FROM  S_TEN900T_KD    A   WITH (NOLOCK)
                 INNER JOIN BCM100T     B   WITH (NOLOCK)  ON   A.COMP_CODE = B.COMP_CODE
                                                          AND   A.CUSTOM_CODE = B.CUSTOM_CODE
                 WHERE A.COMP_CODE = #{S_COMP_CODE}
                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                   AND A.DIV_CODE = #{DIV_CODE}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(REPORT_DATE_FR)">
                   AND A.REPORT_DATE &gt;= #{REPORT_DATE_FR}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(REPORT_DATE_TO)">
                   AND A.REPORT_DATE &lt;= #{REPORT_DATE_TO}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(REPORT_NO)">
                   AND A.REPORT_NO = #{REPORT_NO}
                 </if>
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_ten900ukrv_kdServiceImpl.selectList" parameterType="rMap" resultType="rMap">
        /* str103ukrvServiceImpl.selectList */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
                SELECT   A.COMP_CODE
                        ,A.DIV_CODE
                        ,A.REPORT_NO
                        ,A.ITEM_CODE
                        ,B.ITEM_NAME
                        ,B.SALE_UNIT    AS ORDER_UNIT
                        ,B.SPEC
                        ,A.TRADE_SALE_P
                        ,A.NEGO_SALE_P
                        ,A.SALE_Q
                        ,A.AMT_SALE
                        ,A.NEGO_DIFF
                        ,A.REPORT_SEQ
                        , CASE WHEN ISNULL(A.NEGO_SALE_P,0)=0 THEN 0 ELSE ROUND((1-A.TRADE_SALE_P/A.NEGO_SALE_P) * 100,2) END AS P_RATE
                        , C.GW_FLAG
                        , C.GW_DOC
                        , C.DRAFT_NO
                        , A.NEGO_SALE_LOC_P
                        , C.EXCHG_RATE
						, C.MONEY_UNIT
                  FROM      S_TEN910T_KD A   WITH(NOLOCK)
                        INNER JOIN      BPR100T B   WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                         AND A.ITEM_CODE = B.ITEM_CODE
                        INNER JOIN  S_TEN900T_KD   C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.REPORT_NO=C.REPORT_NO
                 WHERE A.COMP_CODE = #{S_COMP_CODE}
                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                   AND A.DIV_CODE = #{DIV_CODE}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(REPORT_NO)">
                   AND A.REPORT_NO = #{REPORT_NO}
                 </if>
                 ORDER BY A.REPORT_SEQ
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

	<update id="s_ten900ukrv_kdServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{REPORT_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

	<update id="s_ten900ukrv_kdServiceImpl.insertMaster"  parameterType="rMap">
		/* s_ten900ukrv_kdServiceImpl.insertList */
		INSERT INTO S_TEN900T_KD
		       (COMP_CODE
               ,DIV_CODE
               ,REPORT_NO
               ,REPORT_DATE
               ,CUSTOM_CODE
               ,MONEY_UNIT
               ,REMARK
               ,EXCHG_RATE
		       ,UPDATE_DB_USER
		       ,UPDATE_DB_TIME
		       ,INSERT_DB_USER
		       ,INSERT_DB_TIME)
		 VALUES
		       ( #{S_COMP_CODE}
		       , #{DIV_CODE}
		       , #{REPORT_NO}
		       , #{REPORT_DATE}
		       , #{CUSTOM_CODE}
		       , #{MONEY_UNIT}
		       , #{REMARK}
		       , #{EXCHG_RATE_O}
		       , #{S_USER_ID}
		       , GETDATE()
		       , #{S_USER_ID}
		       , GETDATE() )

	</update>

	<insert id="s_ten900ukrv_kdServiceImpl.insertList"  parameterType="rMap">
        /* s_ten900ukrv_kdServiceImpl.insertList */

        DECLARE @MAX_SEQ INT
        SELECT @MAX_SEQ = ISNULL(MAX(REPORT_SEQ),0) + 1
        FROM S_TEN910T_KD WHERE COMP_CODE=#{S_COMP_CODE} AND DIV_CODE=#{DIV_CODE} AND REPORT_NO=#{REPORT_NO}

        INSERT INTO S_TEN910T_KD
               (COMP_CODE
               ,DIV_CODE
               ,REPORT_NO
               ,REPORT_SEQ
               ,ITEM_CODE
               ,TRADE_SALE_P
               ,NEGO_SALE_P
               ,NEGO_SALE_LOC_P
               ,SALE_Q
               ,AMT_SALE
               ,NEGO_DIFF
               ,UPDATE_DB_USER
               ,UPDATE_DB_TIME
               ,INSERT_DB_USER
               ,INSERT_DB_TIME)
         VALUES
               (#{S_COMP_CODE}
               ,#{DIV_CODE}
               ,#{REPORT_NO}
               ,@MAX_SEQ
               ,#{ITEM_CODE}
               ,#{TRADE_SALE_P}
               ,#{NEGO_SALE_P}
               ,#{NEGO_SALE_LOC_P}
               ,#{SALE_Q}
               ,#{AMT_SALE}
               ,#{NEGO_DIFF}
               , #{S_USER_ID}
               , GETDATE()
               , #{S_USER_ID}
               , GETDATE() )

    </insert>

	<update id="s_ten900ukrv_kdServiceImpl.updateList"  parameterType="rMap">
		/* s_ten900ukrv_kdServiceImpl.updateList */
		UPDATE S_TEN910T_KD
               SET ITEM_CODE = #{ITEM_CODE},
                   TRADE_SALE_P = #{TRADE_SALE_P},
                   NEGO_SALE_P = #{NEGO_SALE_P},
                   NEGO_SALE_LOC_P = #{NEGO_SALE_LOC_P},
                   SALE_Q = #{SALE_Q},
                   AMT_SALE = #{AMT_SALE},
                   NEGO_DIFF = #{NEGO_DIFF}
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND DIV_CODE = #{DIV_CODE}
               AND REPORT_NO = #{REPORT_NO}
               AND REPORT_SEQ = #{REPORT_SEQ}
	</update>

	<delete id="s_ten900ukrv_kdServiceImpl.deleteList"  parameterType="rMap">
		/* s_ten900ukrv_kdServiceImpl.deleteList */
		DELETE S_TEN910T_KD
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE = #{DIV_CODE}
           AND REPORT_NO = #{REPORT_NO}
           AND REPORT_SEQ = #{REPORT_SEQ}

        SELECT COMP_CODE
         FROM S_TEN910T_KD
        WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE = #{DIV_CODE}
           AND REPORT_NO = #{REPORT_NO}

        IF(@@ROWCOUNT=0)
            BEGIN
                DELETE S_TEN900T_KD
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND DIV_CODE = #{DIV_CODE}
                   AND REPORT_NO = #{REPORT_NO}
            END
	</delete>

	<select id="s_ten900ukrv_kdServiceImpl.getSalePrice" parameterType="Map" resultType="rMap">
        SELECT
	        S1.COMP_CODE
	        , S1.ITEM_CODE
	        , MAX(ISNULL(S1.ITEM_P, 0.0)) AS ITEM_P
	        , PRICE_TYPE
        FROM    BPR400T     S1 WITH (NOLOCK)
            WHERE   S1.COMP_CODE        =  #{S_COMP_CODE}
            AND     S1.TYPE             =  N'2'

            AND     S1.ITEM_CODE        =  #{ITEM_CODE}
            AND     S1.CUSTOM_CODE      =  #{CUSTOM_CODE}
            AND     S1.MONEY_UNIT       =  'KRW'
            AND     S1.ORDER_UNIT       =  #{ORDER_UNIT}
            AND     S1.APLY_START_DATE  =  (SELECT  MAX(APLY_START_DATE)
                                            FROM    BPR400T    s2 WITH (NOLOCK)
                                            WHERE   s2.COMP_CODE           =  s1.COMP_CODE
                                            AND     s2.TYPE                =  s1.TYPE

                                            AND     s2.ITEM_CODE           =  s1.ITEM_CODE
                                            AND     s2.CUSTOM_CODE         =  s1.CUSTOM_CODE
                                            AND     s2.MONEY_UNIT          =  s1.MONEY_UNIT
                                            AND     s2.ORDER_UNIT          =  s1.ORDER_UNIT
                                            AND     s2.APLY_START_DATE &lt;=  #{REPORT_DATE})
            GROUP   BY
                    S1.COMP_CODE, S1.ITEM_CODE, S1.PRICE_TYPE

    </select>
        <select id="s_ten900ukrv_kdServiceImpl.selectRefList" parameterType="Map" resultType="rMap">
        /* s_ten900ukrv_kdServiceImpl.selectRefList */
        DECLARE @CompCode       NVARCHAR(08)    /* 법인코드             */
              , @UserId         NVARCHAR(100)    /* 사용자ID                */
              , @LangType       NVARCHAR(2)     /* 언어구분             */
              , @RefItem        NVARCHAR(01)    /* 명칭 참조 유형     */
              , @DateFormat     NVARCHAR(10)    /* 날짜 포맷 유형 설정  */

        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
        SELECT CAST(0 AS BIT)                                       AS CHOICE
             , A.CUSTOM_CODE
             , (CASE WHEN @RefItem = '1' THEN E.CUSTOM_NAME1
                     WHEN @RefItem = '2' THEN E.CUSTOM_NAME2
                                         ELSE E.CUSTOM_NAME
                END)                                                AS CUSTOM_NAME
             , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
                END)                                                AS ORDER_DATE
             , B.ORDER_NUM
             , B.SER_NO
             , B.ITEM_CODE
             , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                         ELSE C.ITEM_NAME
                 END)                                               AS ITEM_NAME
             , ISNULL(C.SPEC,'')                                    AS SPEC
             , B.ORDER_UNIT
             , B.TRANS_RATE
             , B.ORDER_Q
             , B.ORDER_P
             , B.ORDER_WGT_Q
             , B.ORDER_WGT_P
             , B.ORDER_VOL_Q
             , B.ORDER_VOL_P
             , B.ORDER_O
             , B.ORDER_TAX_O
             , B.TAX_TYPE
             , B.DIV_CODE
             , B.OUT_DIV_CODE
             , B.ACCOUNT_YNC
             , B.SALE_CUST_CD
             , (CASE WHEN @RefItem = '1' THEN F.CUSTOM_NAME1
                     WHEN @RefItem = '2' THEN F.CUSTOM_NAME2
                                         ELSE F.CUSTOM_NAME
                END)                                                AS SALE_CUST_NM
             , B.PRICE_YN
             , B.DVRY_CUST_CD
             , H.DVRY_CUST_NM                                       AS DVRY_CUST_NAME
             , C.STOCK_UNIT
             , D.WH_CODE
             , ISNULL(C.STOCK_CARE_YN, 'Y')                         AS STOCK_CARE_YN
             , ISNULL(B.DISCOUNT_RATE, 0)                           AS DISCOUNT_RATE
             , D.ITEM_ACCOUNT
             , B.PRICE_TYPE
             , B.WGT_UNIT
             , B.UNIT_WGT
             , B.VOL_UNIT
             , B.UNIT_VOL
             , ISNULL(B.SO_KIND, '10')                              AS SO_KIND
              , ISNULL((SELECT   MAX(ISNULL(S1.ITEM_P, 0.0)) AS ITEM_P
								FROM    BPR400T     S1 WITH (NOLOCK)
								WHERE   S1.COMP_CODE        =  A.COMP_CODE
								AND     S1.TYPE             =  N'2'
								AND     S1.ITEM_CODE        =  B.ITEM_CODE
								AND     S1.CUSTOM_CODE      =  A.CUSTOM_CODE
								AND     S1.MONEY_UNIT       =  'KRW'
								AND     S1.ORDER_UNIT       =  C.SALE_UNIT
								AND     S1.APLY_START_DATE  =  (SELECT  MAX(APLY_START_DATE)
																FROM    BPR400T    s2 WITH (NOLOCK)
																WHERE   s2.COMP_CODE           =  s1.COMP_CODE
																AND     s2.TYPE                =  s1.TYPE
																AND     s2.ITEM_CODE           =  s1.ITEM_CODE
																AND     s2.CUSTOM_CODE         =  s1.CUSTOM_CODE
																AND     s2.MONEY_UNIT          =  s1.MONEY_UNIT
																AND     s2.ORDER_UNIT          =  s1.ORDER_UNIT
																AND     s2.APLY_START_DATE &lt;= #{REPORT_DATE})
								GROUP   BY
										S1.COMP_CODE, S1.ITEM_CODE, S1.PRICE_TYPE ),0)  AS  ITEM_P
          FROM            SOF100T A WITH (NOLOCK)
               INNER JOIN SOF110T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                 AND B.DIV_CODE     = A.DIV_CODE
                                                 AND B.ORDER_NUM    = A.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
                                                 AND C.ITEM_CODE    = B.ITEM_CODE
               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                                 AND D.DIV_CODE     = A.DIV_CODE
                                                 AND D.ITEM_CODE    = B.ITEM_CODE
               INNER JOIN BCM100T E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                                 AND E.CUSTOM_CODE  = A.CUSTOM_CODE
               INNER JOIN BCM100T F WITH (NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
                                                 AND F.CUSTOM_CODE  = B.SALE_CUST_CD
               LEFT  JOIN SCM100T H WITH (NOLOCK) ON A.COMP_CODE    = H.COMP_CODE
                                                 AND A.CUSTOM_CODE  = H.CUSTOM_CODE
                                                 AND B.DVRY_CUST_CD = CAST(H.DVRY_CUST_SEQ AS NVARCHAR(80))
         WHERE A.COMP_CODE      = @CompCode
            /* 최근이력=아니오 */
           <if test="RDO_YN == &quot;N&quot;">
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                   AND A.DIV_CODE       = #{DIV_CODE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
                   AND A.ORDER_DATE    &gt;= #{FR_ORDER_DATE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
                   AND A.ORDER_DATE    &lt;= #{TO_ORDER_DATE}
                </if>
                <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                   AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
                   AND A.ORDER_PRSN     = #{ORDER_PRSN}
                </if>

                   AND B.ORDER_STATUS   = 'N'
           </if>

            /* 최근이력=예       */
           <if test="RDO_YN == &quot;Y&quot;">
           AND A.ORDER_DATE = (SELECT MAX(ORDER_DATE)
                                 FROM SOF100T WITH (NOLOCK)
                                WHERE A.COMP_CODE      = @CompCode
                                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                   AND A.DIV_CODE       = #{DIV_CODE}
                                </if>
                                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                                   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                                </if>
                                <if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
                                  AND A.ORDER_DATE    &lt;= #{TO_ORDER_DATE}
                                </if>
                                <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                                   AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'
                                </if>
                                <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
                                   AND A.ORDER_PRSN     = #{ORDER_PRSN}
                                </if>
                                  AND B.ORDER_STATUS   = 'N')
           </if>
         ORDER BY A.CUSTOM_CODE, B.ORDER_NUM, B.SER_NO, A.ORDER_DATE
    </select>


</mapper>