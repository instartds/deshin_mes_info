<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str900ukrv_kdService">
	<select id="s_str900ukrv_kdService.selectOutDate" parameterType="Map" resultType="rMap">      /* 출고일 가져오기 */
		SELECT  CASE WHEN ISNULL((SELECT MIN(CAL_DATE)
		                            FROM BCM400T WITH (NOLOCK)  
		                           WHERE COMP_CODE         = #{S_COMP_CODE}
		                             AND CAL_TYPE          = '1'
		                             AND HOLY_TYPE         = '2'
		                             AND LEFT(CAL_DATE, 6) = LEFT(#{INOUT_DATE}, 6)
		                             AND CAL_DATE          &lt;= #{INOUT_DATE}), '') = ''
		                   THEN  (SELECT MIN(CAL_DATE)
		                            FROM BCM400T WITH (NOLOCK)  
		                           WHERE COMP_CODE         = #{S_COMP_CODE}
		                             AND CAL_TYPE          = '1'
		                             AND HOLY_TYPE         = '2'
		                             AND LEFT(CAL_DATE, 6) = LEFT(#{INOUT_DATE}, 6))
		                   ELSE  (SELECT MAX(CAL_DATE)
		                            FROM BCM400T WITH (NOLOCK)  
		                           WHERE COMP_CODE = #{S_COMP_CODE}
		                             AND CAL_TYPE  = '1'
		                             AND HOLY_TYPE = '2'
		                             AND CAL_DATE  &lt;= #{INOUT_DATE})
		         END                                                                         AS OUT_DATE
	</select>

	<select id="s_str900ukrv_kdService.selectList" parameterType="Map" resultType="rMap">      /* 출고등록 데이터 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT  A.UNIQUE_ID          
		          , A.COMP_CODE          
		          , A.DIV_CODE           
		          , A.OUT_DATE           
		          , A.IN_DATE            
		          , A.WH_CODE            
		          , A.INOUT_CODE                    AS CUSTOM_CODE        
		          , B.CUSTOM_NAME        
		          , A.SALES_CUSTOM_CODE  
		          , B.CUSTOM_NAME                   AS SALES_CUSTOM_NAME  
		          , A.OEM_ITEM_CODE      
		          , A.IN_Q               
		          , A.OUT_Q              
		          , A.IN_P               
		          , A.IN_O               
		          , A.IN_FLAG            
		          , A.LV_TYPE            
		          , A.STATUS_FLAG        
		          , A.INFO_REMARK        
		          , A.FILE_TYPE          
		          , A.FILE_WONBON     
		          , A.INSERT_DB_USER     
		          , A.INSERT_DB_TIME     
		          , A.UPDATE_DB_USER     
		          , A.UPDATE_DB_TIME     
		          , A.TEMPC_01           
		          , A.TEMPC_02           
		          , A.TEMPC_03           
		          , A.TEMPN_01           
		          , A.TEMPN_02           
		          , A.TEMPN_03
		      FROM S_BTR900T_KD A WITH (NOLOCK)  
		   LEFT JOIN BCM100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                       AND B.CUSTOM_CODE = A.INOUT_CODE
		     WHERE A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.DIV_CODE       = #{DIV_CODE}
		       AND A.IN_DATE        &gt;= #{IN_DATE_FR}
		       AND A.IN_DATE        &lt;= #{IN_DATE_TO}
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.INOUT_CODE     = #{CUSTOM_CODE}
		     </if>
		     <if test="STATUS_FLAG == &quot;1&quot;">
		       AND A.STATUS_FLAG = '1'
		     </if>
		     <if test="STATUS_FLAG == &quot;2&quot;">
		       AND A.STATUS_FLAG    IN ('2', '3')
		     </if>
		     <if test="STATUS_FLAG == &quot;4&quot;">
		       AND A.STATUS_FLAG    = '4'
		     </if>
		       AND A.IN_FLAG != 'JJ'
		END 
	</select>

	<update id="s_str900ukrv_kdService.updateDetail" parameterType="Map">       /* 수정 */
		UPDATE  S_BTR900T_KD
		   SET  OUT_DATE     = #{OUT_DATE}
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND DIV_CODE      = #{DIV_CODE}
		   AND UNIQUE_ID     = #{UNIQUE_ID}
	</update>







	<insert id="s_str900ukrv_kdService.insertExcelStr900t" parameterType="Map">      /* 엑셀insert */
		INSERT INTO S_BTR900T_EXCEL (
		    _EXCEL_JOBID, 
		    _EXCEL_ROWNUM, 
		    _EXCEL_HAS_ERROR, 
		    _EXCEL_ERROR_MSG, 
		    COMP_CODE,
		    DIV_CODE,
		    UNIQUE_ID,    
		    IN_DATE,         
		    WH_CODE,      
		    OEM_ITEM_CODE,
		    IN_Q,         
		    IN_P,         
		    IN_O,         
		    IN_FLAG,      
		    LV_TYPE, 
		    FILE_TYPE,       
		    INSERT_DB_USER,   
		    INSERT_DB_TIME  
		)
		VALUES (
		    #{_EXCEL_JOBID}, 
		    #{_EXCEL_ROWNUM}, 
		    #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, 
		    #{_EXCEL_ERROR,jdbcType=VARCHAR}, 
		    #{S_COMP_CODE},
		    #{DIV_CODE},
		    #{UNIQUE_ID},    
		    #{IN_DATE},         
		    #{WH_CODE},      
		    #{OEM_ITEM_CODE},
		    #{IN_Q},         
		    #{IN_P},         
		    #{IN_O},         
		    #{IN_FLAG},      
		    #{LV_TYPE},     
		    'EXCEL',   
		    #{S_USER_ID},   
		    GETDATE()
		)
	</insert>

	<select id="s_str900ukrv_kdService.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">   /* 엑셀업로드 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A._EXCEL_JOBID
		         , A._EXCEL_ROWNUM
		         , A._EXCEL_HAS_ERROR
		         , A._EXCEL_ERROR_MSG
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.UNIQUE_ID   
		         , A.IN_DATE                        
		         , A.WH_CODE     
		         , A.OEM_ITEM_CODE
		         , A.IN_Q        
		         , A.IN_P        
		         , A.IN_O        
		         , A.IN_FLAG     
		         , A.LV_TYPE     
		         , 'EXCEL'            AS FILE_TYPE
		         , A.INSERT_DB_USER
		         , A.INSERT_DB_TIME
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		      FROM S_BTR900T_EXCEL  A WITH (NOLOCK)  
		     WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		     ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
		END
	</select>

	<update id="excelValidate" >
		UPDATE A    
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.CNT &gt; 1 THEN 'E'
		                             ELSE A._EXCEL_HAS_ERROR 
		                              END),
		       A._EXCEL_ERROR_MSG = (CASE WHEN B.CNT &gt; 1 AND ISNULL(CSV_ERROR_MSG,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '중복된 검수키가 입력되었습니다. ' 
		                             ELSE A._EXCEL_ERROR_MSG 
		                              END)
		                               
		  FROM S_BTR900T_EXCEL A 
		  INNER JOIN (SELECT COMP_CODE
		                   , DIV_CODE
		                   , UNIQUE_ID
		                   , COUNT(UNIQUE_ID) AS CNT
		              FROM S_BTR900T_EXCEL WITH (NOLOCK)
		              WHERE COMP_CODE = #{S_COMP_CODE}
		              GROUP BY COMP_CODE, DIV_CODE, UNIQUE_ID
		              HAVING COUNT(UNIQUE_ID) > 1
		            ) B ON B.COMP_CODE = A.COMP_CODE
		               AND B.DIV_CODE  = A.DIV_CODE
		               AND B.UNIQUE_ID = A.UNIQUE_ID
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>

	<select id="s_str900ukrv_kdService.insertSBtr900tKd" parameterType="Map" resultType="rMap">      /* 엑셀 -> 본테이블 */
		INSERT INTO S_BTR900T_KD (
		    A.UNIQUE_ID          
		  , A.COMP_CODE          
		  , A.DIV_CODE           
		  --, A.OUT_DATE           
		  , A.IN_DATE            
		  , A.WH_CODE            
		  , A.INOUT_CODE       
		  , A.SALES_CUSTOM_CODE  
		  , A.OEM_ITEM_CODE      
		  , A.IN_Q               
		  , A.OUT_Q              
		  , A.IN_P               
		  , A.IN_O               
		  , A.IN_FLAG            
		  , A.LV_TYPE            
		  , A.STATUS_FLAG        
		  , A.INFO_REMARK        
		  , A.FILE_TYPE          
		  , A.FILE_WONBON     
		  , A.INSERT_DB_USER     
		  , A.INSERT_DB_TIME     
		  , A.UPDATE_DB_USER     
		  , A.UPDATE_DB_TIME     
		  , A.TEMPC_01           
		  , A.TEMPC_02           
		  , A.TEMPC_03           
		  , A.TEMPN_01           
		  , A.TEMPN_02           
		  , A.TEMPN_03
		)
		SELECT  A.UNIQUE_ID          
		     ,  A.COMP_CODE          
		     ,  REPLACE(A.DIV_CODE, '''','') AS DIV_CODE
		     --,  CASE WHEN ISNULL((SELECT MIN(CAL_DATE)
		     --                       FROM BCM400T WITH (NOLOCK)  
		     --                      WHERE COMP_CODE         = A.COMP_CODE
		     --                        AND CAL_TYPE          = '1'
		     --                        AND HOLY_TYPE         = '2'
		     --                        AND LEFT(CAL_DATE, 6) = LEFT(A.IN_DATE, 6)
		     --                        AND CAL_DATE          &lt; A.IN_DATE), '') = ''
		     --        THEN  (SELECT MIN(CAL_DATE)
		     --                 FROM BCM400T WITH (NOLOCK)  
		     --                WHERE COMP_CODE         = A.COMP_CODE
		     --                  AND CAL_TYPE          = '1'
		     --                  AND HOLY_TYPE         = '2'
		     --                  AND LEFT(CAL_DATE, 6) = LEFT(A.IN_DATE, 6))
		     --        ELSE  (SELECT MAX(CAL_DATE)
		     --                 FROM BCM400T WITH (NOLOCK)  
		     --                WHERE COMP_CODE = A.COMP_CODE
		     --                  AND CAL_TYPE  = '1'
		     --                  AND HOLY_TYPE = '2'
		     --                  AND CAL_DATE  &lt; A.IN_DATE)
		     --   END                                                                         AS OUT_DATE
		     ,  A.IN_DATE            
		     ,  A.WH_CODE            
		     , ISNULL(D.REF_CODE1, '99999')		                                     AS INOUT_CODE       
	         , ISNULL(D.REF_CODE1, '99999')			                                 AS SALES_CUSTOM_CODE        
		     --,  CASE WHEN LEN(ISNULL(C.BILL_CUSTOM, '')) = 0 
		     --        THEN A.WH_CODE
		     --        ELSE C.BILL_CUSTOM                                       
		     --        END                                                                    AS SALES_CUSTOM_CODE 
		     ,  A.OEM_ITEM_CODE      
		     ,  A.IN_Q               
		     ,  '0'                                                                         AS OUT_Q      
		     ,  A.IN_P               
		     ,  A.IN_O               
		     ,  A.IN_FLAG            
		     ,  A.LV_TYPE            
		     ,  '1'                                                                         AS STATUS_FLAG 
		     ,  ''                                                                          AS INFO_REMARK     
		     ,  A.FILE_TYPE          
		     ,  A._EXCEL_JOBID                                                              AS FILE_WONBON    
		     ,  A.INSERT_DB_USER     
		     ,  A.INSERT_DB_TIME     
		     ,  A.UPDATE_DB_USER     
		     ,  A.UPDATE_DB_TIME     
		     ,  A.TEMPC_01           
		     ,  A.TEMPC_02           
		     ,  A.TEMPC_03           
		     ,  A.TEMPN_01           
		     ,  A.TEMPN_02           
		     ,  A.TEMPN_03 
		FROM              S_BTR900T_EXCEL AS A WITH (NOLOCK)
				LEFT JOIN BSA100T         AS D WITH (NOLOCK)   ON D.COMP_CODE   = A.COMP_CODE
	                                                          AND D.MAIN_CODE   = 'WB30'
	                                                          AND D.SUB_CODE    = A.WH_CODE
	                                                          AND D.SUB_CODE    != '$'
--		        LEFT JOIN BSA220T         AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
--		                                                    AND B.TYPE_LEVEL  = REPLACE(A.DIV_CODE,'''','')
--		                                                    AND B.TREE_CODE   = A.WH_CODE
		        LEFT JOIN BCM100T         AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                    AND C.CUSTOM_CODE = A.WH_CODE
		WHERE   A._EXCEL_JOBID = #{_EXCEL_JOBID}
		AND     A._EXCEL_HAS_ERROR IS NULL
	</select>

	<select id="s_str900ukrv_kdService.selectResultCount" parameterType="Map" resultType="rMap">      /* 엑셀 -> 본테이블 */
		SELECT COUNT(*)                            AS ALL_COUNT
		     , COUNT(_EXCEL_HAS_ERROR)             AS ERROR_COUNT
		     , COUNT(*) - COUNT(_EXCEL_HAS_ERROR)  AS SUCESS_COUNT
		  FROM S_BTR900T_EXCEL
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
	</select>

	<select id="s_str900ukrv_kdService.selectExcel" parameterType="Map" resultType="rMap">      /* EXCEL데이터 조회 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT  A.UNIQUE_ID          
		          , A.COMP_CODE          
		          , A.DIV_CODE           
		          , A.OUT_DATE           
		          , A.IN_DATE            
		          , A.WH_CODE            
		          , A.INOUT_CODE                    AS CUSTOM_CODE        
		          , B.CUSTOM_NAME        
		          , A.SALES_CUSTOM_CODE  
		          , B.CUSTOM_NAME                   AS SALES_CUSTOM_NAME  
		          , A.OEM_ITEM_CODE      
		          , A.IN_Q               
		          , A.OUT_Q              
		          , A.IN_P               
		          , A.IN_O               
		          , A.IN_FLAG            
		          , A.LV_TYPE            
		          , A.STATUS_FLAG        
		          , A.INFO_REMARK        
		          , A.FILE_TYPE          
		          , A.FILE_WONBON     
		          , A.INSERT_DB_USER     
		          , A.INSERT_DB_TIME     
		          , A.UPDATE_DB_USER     
		          , A.UPDATE_DB_TIME     
		          , A.TEMPC_01           
		          , A.TEMPC_02           
		          , A.TEMPC_03           
		          , A.TEMPN_01           
		          , A.TEMPN_02           
		          , A.TEMPN_03
		      FROM S_BTR900T_KD A WITH (NOLOCK)  
		   LEFT JOIN BCM100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                       AND B.CUSTOM_CODE = A.INOUT_CODE
		   INNER JOIN S_BTR900T_EXCEL AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                AND C.UNIQUE_ID   = A.UNIQUE_ID
		     WHERE A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.DIV_CODE       = #{DIV_CODE}
		       AND C._EXCEL_JOBID   = #{_EXCEL_JOBID}
		END 
	</select>







	<!-- CSV 업로드를 위한 30개 컬럼 TEMPLATE 테이블 -->
	<update id="s_str900ukrv_kdService.createCSV" parameterType="Map">
		IF OBJECT_ID('TMP_CSV') IS NULL
		    BEGIN
		        CREATE TABLE TMP_CSV (
		             PGM_ID         NVARCHAR(200)
		            ,FILE_ID        NVARCHAR(100)
		            ,CSV_HAS_ERROR  NVARCHAR(16) 
		            ,CSV_ERROR_MSG  NVARCHAR(500) 
		            ,FILE_TYPE      NVARCHAR(16)
		            ,COMP_CODE      NVARCHAR(16)
		            ,DIV_CODE       NVARCHAR(16)
		            ,UNIQUE_ID      NVARCHAR(100)
		            ,COL01          NVARCHAR(255)
		            ,COL02          NVARCHAR(255)
		            ,COL03          NVARCHAR(255)
		            ,COL04          NVARCHAR(255)
		            ,COL05          NVARCHAR(255)
		            ,COL06          NVARCHAR(255)
		            ,COL07          NVARCHAR(255)
		            ,COL08          NVARCHAR(255)
		            ,COL09          NVARCHAR(255)
		            ,COL10          NVARCHAR(255)
		            ,COL11          NVARCHAR(255)
		            ,COL12          NVARCHAR(255)
		            ,COL13          NVARCHAR(255)
		            ,COL14          NVARCHAR(255)
		            ,COL15          NVARCHAR(255)
		            ,COL16          NVARCHAR(255)
		            ,COL17          NVARCHAR(255)
		            ,COL18          NVARCHAR(255)
		            ,COL19          NVARCHAR(255)
		            ,COL20          NVARCHAR(255)
		            ,COL21          NVARCHAR(255)
		            ,COL22          NVARCHAR(255)
		            ,COL23          NVARCHAR(255)
		            ,COL24          NVARCHAR(255)
		            ,COL25          NVARCHAR(255)
		            ,COL26          NVARCHAR(255)
		            ,COL27          NVARCHAR(255)
		            ,COL28          NVARCHAR(255)
		            ,COL29          NVARCHAR(255)
		            ,COL30          NVARCHAR(255)
		            ,INSERT_DB_TIME DATETIME NOT NULL DEFAULT GETDATE()
		        )
		    END
	</update>

	<insert id="s_str900ukrv_kdService.insertTempCsv" parameterType="Map">
	  DECLARE @UNIQUE_ID NVARCHAR(100), @FILE_TYPE NVARCHAR(10)
	  SET NOCOUNT ON
	    IF LEN(#{COL04}) != 1
	    BEGIN
	      SET @FILE_TYPE = 'CSV1'
	      SET @UNIQUE_ID = ''
	                  <if test="@foren.Ognl@isNotEmpty(COL01)">
	                  + #{COL01} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL02)">
	                  + #{COL02}
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL03)">
	                  + #{COL03} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL04)">
	                  + #{COL04} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL05)">
	                  + #{COL05} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL06)">
	                  + #{COL06} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL07)">
	                  + #{COL07} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL08)">
	                  + #{COL08} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL25)">
	                  + #{COL25} 
	                  </if>
	                  <if test="@foren.Ognl@isNotEmpty(COL26)">
	                  + #{COL26}
	                  </if>
	    END
	    ELSE
	    BEGIN
	      SET @FILE_TYPE = 'CSV2' 
	      SET @UNIQUE_ID = ''     
	                <if test="@foren.Ognl@isNotEmpty(COL01)">
	                + #{COL01} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL02)">
	                + #{COL02} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL03)">
	                + #{COL03} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL04)">
	                + #{COL04} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL05)">
	                + #{COL05} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL06)">
	                + #{COL06}
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL07)"> 
	                + #{COL07} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL09)">
	                + #{COL09} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL10)">
	                + #{COL10} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL11)">
	                + #{COL11}
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL12)"> 
	                + #{COL12} 
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL17)">
	                + #{COL17}
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL18)">
	                + #{COL18}
	                </if>
	                <if test="@foren.Ognl@isNotEmpty(COL19)"> 
	                + #{COL19}
	                </if>
	    END

	  SET NOCOUNT OFF

	      INSERT INTO TMP_CSV(
	           PGM_ID
	          ,FILE_ID
	          ,FILE_TYPE
	          ,COMP_CODE
	          ,DIV_CODE
	          ,UNIQUE_ID
	          ,COL01
	          ,COL02
	          ,COL03
	          ,COL04
	          ,COL05
	          ,COL06
	          ,COL07
	          ,COL08
	          ,COL09
	          ,COL10
	          ,COL11
	          ,COL12
	          ,COL13
	          ,COL14
	          ,COL15
	          ,COL16
	          ,COL17
	          ,COL18
	          ,COL19
	          ,COL20
	          ,COL21
	          ,COL22
	          ,COL23
	          ,COL24
	          ,COL25
	          ,COL26
	          ,COL27
	          ,COL28
	          ,COL29
	          ,COL30
	      )
	      VALUES(
	           #{PGM_ID}
	          ,#{FILE_ID}
	          ,@FILE_TYPE
	          ,#{COMP_CODE}
	          ,'01'
	          ,@UNIQUE_ID
	          ,#{COL01}
	          ,#{COL02}
	          ,#{COL03}
	          ,#{COL04}
	          ,#{COL05}
	          ,#{COL06}
	          ,#{COL07}
	          ,#{COL08}
	          ,#{COL09}
	          ,#{COL10}
	          ,#{COL11}
	          ,#{COL12}
	          ,#{COL13}
	          ,#{COL14}
	          ,#{COL15}
	          ,#{COL16}
	          ,#{COL17}
	          ,#{COL18}
	          ,#{COL19}
	          ,#{COL20}
	          ,#{COL21}
	          ,#{COL22}
	          ,#{COL23}
	          ,#{COL24}
	          ,#{COL25}
	          ,#{COL26}
	          ,#{COL27}
	          ,#{COL28}
	          ,#{COL29}
	          ,#{COL30}
	      )

	</insert>

	<insert id="s_str900ukrv_kdService.insertCSV" parameterType="Map">
	    IF LEN(#{COL04}) != 1
	       INSERT INTO S_BTR900T_KD (
	            A.UNIQUE_ID          
	          , A.COMP_CODE          
	          , A.DIV_CODE           
	          --, A.OUT_DATE           
	          , A.IN_DATE            
	          , A.WH_CODE            
	          , A.INOUT_CODE       
	          , A.SALES_CUSTOM_CODE  
	          , A.OEM_ITEM_CODE      
	          , A.IN_Q               
	          , A.OUT_Q              
	          , A.IN_P               
	          , A.IN_O               
	          , A.IN_FLAG            
	          , A.LV_TYPE            
	          , A.STATUS_FLAG        
	          , A.INFO_REMARK        
	          , A.FILE_TYPE          
	          , A.FILE_WONBON     
	          , A.INSERT_DB_USER     
	          , A.INSERT_DB_TIME     
	          , A.UPDATE_DB_USER     
	          , A.UPDATE_DB_TIME    
	        )
	        SELECT 
	             A.UNIQUE_ID                                                             AS UNIQUE_ID      
	             , A.COMP_CODE                                                           AS COMP_CODE
	             , A.DIV_CODE                                                            AS DIV_CODE
	             , A.COL05                                                               AS IN_DATE            
	             , A.COL03                                                               AS WH_CODE            
	             , ISNULL(B.REF_CODE1, '99999')		                                     AS INOUT_CODE       
	             , ISNULL(B.REF_CODE1, '99999')			                                 AS SALES_CUSTOM_CODE  
	             --, CASE WHEN ISNULL(C.BILL_CUSTOM,'') = '' THEN B.REF_CODE1 ELSE C.BILL_CUSTOM END AS SALES_CUSTOM_CODE                 
	             , A.COL04                                                               AS OEM_ITEM_CODE      
	             , CONVERT(NUMERIC(30, 6), A.COL11)                                      AS IN_Q               
	             , CONVERT(NUMERIC(30, 6), 0)                                            AS OUT_Q              
	             , CONVERT(NUMERIC(30, 6), A.COL14)                                      AS IN_P               
	             , CONVERT(NUMERIC(30, 6), A.COL12) 								     AS IN_O               
	             , A.COL09                                                               AS IN_FLAG            
	             , A.COL08                                                               AS LV_TYPE            
	             , '1'                                                                   AS STATUS_FLAG        
	             , ''                                                                    AS INFO_REMARK        
	             , 'CSV1'                                                                AS FILE_TYPE          
	             , A.FILE_ID                                                             AS FILE_WONBON     
	             , #{S_USER_ID}                                                          AS INSERT_DB_USER     
	             , GETDATE()                                                             AS INSERT_DB_TIME     
	             , #{S_USER_ID}                                                          AS UPDATE_DB_USER     
	             , GETDATE()                                                             AS UPDATE_DB_TIME 
	        FROM            TMP_CSV AS A WITH (NOLOCK)
	              LEFT JOIN BSA100T         AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                          AND B.MAIN_CODE   = 'WB30'
	                                                          AND B.SUB_CODE    = A.COL03
	                                                          AND B.SUB_CODE    != '$'
--	              LEFT JOIN BSA220T         AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
--	                                                          AND B.TYPE_LEVEL  = A.DIV_CODE
--	                                                          AND B.TREE_CODE   = A.COL03
	              LEFT JOIN BCM100T         AS C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                          AND C.CUSTOM_CODE = B.REF_CODE1
	        WHERE A.FILE_ID = #{FILE_ID}
	          AND A.CSV_HAS_ERROR IS NULL
	    ELSE
	        INSERT INTO S_BTR900T_KD (
	            A.UNIQUE_ID          
	          , A.COMP_CODE          
	          , A.DIV_CODE           
	          --, A.OUT_DATE           
	          , A.IN_DATE            
	          , A.WH_CODE            
	          , A.INOUT_CODE       
	          , A.SALES_CUSTOM_CODE  
	          , A.OEM_ITEM_CODE      
	          , A.IN_Q               
	          , A.OUT_Q              
	          , A.IN_P               
	          , A.IN_O               
	          , A.IN_FLAG            
	          , A.LV_TYPE            
	          , A.STATUS_FLAG        
	          , A.INFO_REMARK        
	          , A.FILE_TYPE          
	          , A.FILE_WONBON     
	          , A.INSERT_DB_USER     
	          , A.INSERT_DB_TIME     
	          , A.UPDATE_DB_USER     
	          , A.UPDATE_DB_TIME 
	        )
	        SELECT 
	               A.UNIQUE_ID                                                            AS UNIQUE_ID                              
	             , A.COMP_CODE                                                            AS COMP_CODE                             
	             , A.DIV_CODE                                                             AS DIV_CODE                              
	             --, CASE WHEN ISNULL((SELECT MIN(CAL_DATE)                                                                          
	             --                      FROM BCM400T WITH (NOLOCK)                                                                  
	             --                     WHERE COMP_CODE         = A.COMP_CODE                                                        
	             --                       AND CAL_TYPE          = '1'                                                                
	             --                       AND HOLY_TYPE         = '2'                                                                
	             --                       AND LEFT(CAL_DATE, 6) = LEFT(A.COL06, 6)                                                   
	             --                       AND CAL_DATE          &lt; A.COL06), '') = ''                                              
	             --       THEN  (SELECT MIN(CAL_DATE)                                                                                
	             --                FROM BCM400T WITH (NOLOCK)                                                                        
	             --               WHERE COMP_CODE         = A.COMP_CODE                                                              
	             --                 AND CAL_TYPE          = '1'                                                                      
	             --                 AND HOLY_TYPE         = '2'                                                                      
	             --                 AND LEFT(CAL_DATE, 6) = LEFT(A.COL06, 6))                                                        
	             --       ELSE  (SELECT MAX(CAL_DATE)                                                                                
	             --                FROM BCM400T WITH (NOLOCK)                                                                        
	             --               WHERE COMP_CODE = A.COMP_CODE                                                                      
	             --                 AND CAL_TYPE  = '1'                                                                              
	             --                 AND HOLY_TYPE = '2'                                                                              
	             --                 AND CAL_DATE  &lt; A.COL06)                                                                      
	             --  END                                                                    AS OUT_DATE                              
	             , A.COL06                                                                AS IN_DATE                               
	             , A.COL02                                                                AS WH_CODE                               
	             , ISNULL(B.REF_CODE1, '99999')		                                      AS INOUT_CODE                             
	             , ISNULL(B.REF_CODE1, '99999')							                  AS SALES_CUSTOM_CODE                     
	             --, CASE WHEN ISNULL(C.BILL_CUSTOM,'') = '' THEN B.REF_CODE1 ELSE C.BILL_CUSTOM END AS SALES_CUSTOM_CODE
	             , A.COL07                                                                AS OEM_ITEM_CODE                         
	             , CONVERT(NUMERIC(30, 6), A.COL14)                                       AS IN_Q                                  
	             , CONVERT(NUMERIC(30, 6), 0)                                             AS OUT_Q                                 
	             --, CONVERT(NUMERIC(30, 6), A.COL15) / CONVERT(NUMERIC(30, 6), A.COL14)    AS IN_P       
	             , CASE WHEN CONVERT(NUMERIC(30, 6), A.COL14)=0 THEN 0 ELSE CONVERT(NUMERIC(30, 6), A.COL15) / CONVERT(NUMERIC(30, 6), A.COL14) END   AS IN_P     				 
	             , CONVERT(NUMERIC(30, 6), A.COL15)    									  AS IN_O                                  
	             , A.COL12                                                                AS IN_FLAG                               
	             , A.COL17                                                                AS LV_TYPE                               
	             , '1'                                                                    AS STATUS_FLAG                           
	             , ''                                                                     AS INFO_REMARK                           
	             , 'CSV2'                                                                 AS FILE_TYPE                             
	             , A.FILE_ID                                                              AS FILE_WONBON                           
	             , #{S_USER_ID}                                                           AS INSERT_DB_USER                        
	             , GETDATE()                                                              AS INSERT_DB_TIME                        
	             , #{S_USER_ID}                                                           AS UPDATE_DB_USER                        
	             , GETDATE()                                                              AS UPDATE_DB_TIME                              
	        FROM            TMP_CSV AS A WITH (NOLOCK)
	              LEFT JOIN BSA100T         AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                          AND B.MAIN_CODE   = 'WB30'
	                                                          AND B.SUB_CODE    = A.COL02
	                                                          AND B.SUB_CODE    != '$'
--	              LEFT JOIN BSA220T         AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
--	                                                          AND B.TYPE_LEVEL  = A.DIV_CODE
--	                                                          AND B.TREE_CODE   = A.COL02
	              LEFT JOIN BCM100T         AS C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                          AND C.CUSTOM_CODE = B.REF_CODE1
	        WHERE A.FILE_ID = #{FILE_ID}
	          AND A.CSV_HAS_ERROR IS NULL
	</insert>

	<update id="s_str900ukrv_kdService.csvValidate" parameterType="Map">
		UPDATE A    
		   SET A.CSV_HAS_ERROR = (CASE WHEN B.CNT &gt; 1 THEN 'E'
		                             ELSE A.CSV_HAS_ERROR 
		                              END),
		       A.CSV_ERROR_MSG = (CASE WHEN B.CNT &gt; 1 AND ISNULL(CSV_ERROR_MSG,'') = '' THEN ISNULL(CSV_ERROR_MSG,'') + '중복된 검수키가 입력되었습니다. ' 
		                             ELSE A.CSV_ERROR_MSG 
		                              END)
		  FROM TMP_CSV A 
		  INNER JOIN (SELECT COMP_CODE
		                   , DIV_CODE
		                   , UNIQUE_ID
		                   , COUNT(UNIQUE_ID) AS CNT
		              FROM TMP_CSV WITH (NOLOCK)
		              WHERE COMP_CODE = #{COMP_CODE}
		              GROUP BY COMP_CODE, DIV_CODE, UNIQUE_ID
		              HAVING COUNT(UNIQUE_ID) > 1
		            ) B ON B.COMP_CODE = A.COMP_CODE
		               AND B.DIV_CODE  = A.DIV_CODE
		               AND B.UNIQUE_ID = A.UNIQUE_ID
		 WHERE A.FILE_ID = #{FILE_ID}
	</update>




	<select id="s_str900ukrv_kdService.csvSelect" parameterType="Map" resultType="rMap"> 
		SELECT 
			FILE_ID,
			COL04
		  FROM TMP_CSV
		 WHERE FILE_ID = #{FILE_ID}
	
	</select>





	<select id="s_str900ukrv_kdService.selectResultCount2" parameterType="Map" resultType="rMap">      /* CSV -> 본테이블 */
		SELECT COUNT(*)                            AS ALL_COUNT
		     , COUNT(CSV_HAS_ERROR)                AS ERROR_COUNT
		     , COUNT(*) - COUNT(CSV_HAS_ERROR)     AS SUCESS_COUNT
		  FROM TMP_CSV
		 WHERE FILE_ID = #{FILE_ID}
	</select>







	<update id="s_str900ukrv_kdService.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call S_spVmiStockOut_KD (
		    #{COMP_CODE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{DIV_CODE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{UNIQUE_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{IN_DATE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{CUSTOM_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{OEM_CODE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{MONEY_UNIT	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{EXCHG_RATE_O	, mode=IN	, jdbcType=INTEGER	, javaType=java.lang.Integer},
		    #{ORDER_UNIT	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{TRNS_RATE		, mode=IN	, jdbcType=INTEGER	, javaType=java.lang.Integer},
		    #{OUT_UNIT_Q	, mode=IN	, jdbcType=INTEGER	, javaType=java.lang.Integer},
		    #{OUT_UNIT_P	, mode=IN	, jdbcType=INTEGER	, javaType=java.lang.Integer},
		    #{OUT_UNIT_O	, mode=IN	, jdbcType=INTEGER	, javaType=java.lang.Integer},
		    #{LE_TYPE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{USER_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update> 

	<update id="s_str900ukrv_kdService.USP_SALES_AutoOutTrans_KD" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_AutoOutTrans_KD_V50 (
		    #{S_COMP_CODE	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{DIV_CODE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{JOB_ID		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{JOB_TYPE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{COL04			, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{CUSTOM_CODE	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{DEPT_CODE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{INOUT_PRSN	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{INOUT_DATE	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{OUT_DATE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{PROCESS_FLAG	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{S_USER_ID		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{RESULT_CNT_01	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 총건수
		    #{RESULT_CNT_02	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 검수제외품목
		    #{RESULT_CNT_03	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 하치장 미존재
		    #{RESULT_CNT_04	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 내수,수출 구분 오류
		    #{RESULT_CNT_05	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 품목정보 미존재
		    #{RESULT_CNT_06	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 판매단가 미존재
		    #{RESULT_CNT_07	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 검수제외품목
		    #{RESULT_CNT_08	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 매출처 미등록
		    #{RESULT_CNT_09	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},		-- 정상처리 건수
		    #{RESULT_CNT_10	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},		-- 중복건수
		    #{REDU_VALUE	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}		-- 중복키관련
		)}
	</update>

	<select id="s_str900ukrv_kdService.beforeDeleteCheck" parameterType="Map" resultType="String">
		SELECT TOP 1 UNIQUE_ID
		  FROM S_BTR900T_KD  A WITH (NOLOCK)
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE         = #{S_DIV_CODE}
		   AND A.STATUS_FLAG	IN ('3', '4')  -- 일부오류나 처리완료된것 있으면 삭제오류
		   AND A.UNIQUE_ID      = #{UNIQUE_ID}
	</select>

	<delete id="s_str900ukrv_kdService.deleteMaster" parameterType="Map">
		DELETE FROM S_BTR900T_KD
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{S_DIV_CODE}
		   AND UNIQUE_ID = #{UNIQUE_ID}
	</delete>

	<delete id="s_str900ukrv_kdService.deleteDetail" parameterType="Map">
		SET NOCOUNT ON
		BEGIN
		  DELETE FROM S_BTR900T_KD
		   WHERE COMP_CODE = #{S_COMP_CODE}
		     AND DIV_CODE = #{S_DIV_CODE}
		     AND UNIQUE_ID = #{UNIQUE_ID}
		   
		  DELETE FROM S_BTR900T_EXCEL
		   WHERE COMP_CODE = #{S_COMP_CODE}
		     AND DIV_CODE  = #{S_DIV_CODE}
		     AND UNIQUE_ID = #{UNIQUE_ID}

		  DELETE FROM TMP_CSV
		   WHERE COMP_CODE = #{S_COMP_CODE}
		     AND DIV_CODE  = #{S_DIV_CODE}
		     AND UNIQUE_ID = #{UNIQUE_ID}
		END
		SET NOCOUNT OFF
	</delete>
	
	<delete id="s_str900ukrv_kdService.deleteTemp" parameterType="Map">
		DELETE FROM S_BTR900T_EXCEL
		   WHERE COMP_CODE = #{S_COMP_CODE}
		     AND DIV_CODE  = #{S_DIV_CODE}
		     AND _EXCEL_JOBID = #{JOB_ID}

		  DELETE FROM TMP_CSV
		   WHERE COMP_CODE = #{S_COMP_CODE}
		     AND DIV_CODE  = #{S_DIV_CODE}
		     AND FILE_ID = #{JOB_ID}
	</delete>
		<update id="s_str900ukrv_kdService.sptest1" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_AutoOutTrans_KD_V40_TEST (
	
		    #{JOB_ID		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{JOB_TYPE		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{COL04			, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    
		    #{S_USER_ID		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{RESULT_CNT_01	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 총건수
		    #{RESULT_CNT_02	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 검수제외품목
		    #{RESULT_CNT_03	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 하치장 미존재
		    #{RESULT_CNT_04	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 내수,수출 구분 오류
		    #{RESULT_CNT_05	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 품목정보 미존재
		    #{RESULT_CNT_06	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 판매단가 미존재
		    #{RESULT_CNT_07	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 검수제외품목
		    #{RESULT_CNT_08	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},	-- 매출처 미등록
		    #{RESULT_CNT_09	, mode=OUT	, jdbcType=INTEGER, javaType=java.lang.Integer},		-- 정상처리 건수
		    #{REDU_VALUE	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}		-- 중복키관련
		)}
	</update>
	
</mapper>
