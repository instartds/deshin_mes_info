<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc601ukrv_kdService">
	<select id="s_zcc601ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --s_zcc601ukrv_kdService.selectList
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(08)
                  , @DIV_CODE           NVARCHAR(08)
                  , @FR_DATE            NVARCHAR(08)
                  , @TO_DATE            NVARCHAR(08)
                  , @ENTRY_NUM          NVARCHAR(20)
        
            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @DIV_CODE   = #{DIV_CODE}
            SET @FR_DATE    = #{FR_DATE}
            SET @TO_DATE    = #{TO_DATE}
            SET @ENTRY_NUM  = #{ENTRY_NUM}
        
            SELECT  A.COMP_CODE                                                                 AS COMP_CODE
                 ,  A.DIV_CODE                                                                  AS DIV_CODE
                 ,  A.ENTRY_NUM                                                                 AS ENTRY_NUM
                 ,  A.ENTRY_DATE                                                                AS ENTRY_DATE
                 ,  A.DEPT_CODE                                                                 AS DEPT_CODE
                 ,  B.TREE_NAME                                                                 AS DEPT_NAME
                 ,  A.OEM_ITEM_CODE                                                             AS OEM_ITEM_CODE
                 ,  A.ITEM_NAME                                                                 AS ITEM_NAME
                 ,  A.MAKE_QTY                                                                  AS MAKE_QTY
                 ,  A.MAKE_END_YN                                                               AS MAKE_END_YN
                 ,  A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                 ,  C.CUSTOM_NAME                                                               AS CUSTOM_NAME
                 ,  A.MONEY_UNIT                                                                AS MONEY_UNIT  
                 ,  A.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                 ,  A.MATERIAL_AMT                                                              AS MATERIAL_AMT
                 ,  A.MAKE_AMT                                                                  AS MAKE_AMT
                 ,  A.ETC_AMT                                                                   AS ETC_AMT
                 ,  A.MATERIAL_AMT + A.MAKE_AMT + A.ETC_AMT                                     AS TOTAL_AMT
            FROM               S_ZCC600T_KD AS A WITH (NOLOCK)
                    INNER JOIN BSA210T      AS B WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                              AND B.TREE_CODE       = A.DEPT_CODE
                    INNER JOIN BCM100T      AS C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                              AND C.CUSTOM_CODE     = A.CUSTOM_CODE
            WHERE   A.COMP_CODE        = @COMP_CODE
            AND     A.DIV_CODE         = @DIV_CODE
            AND     A.ENTRY_DATE      &gt;= @FR_DATE
            AND     A.ENTRY_DATE      &lt;= @TO_DATE
            <if test="@foren.Ognl@isNotEmpty(ENTRY_NUM)">
            AND     A.ENTRY_NUM     LIKE @ENTRY_NUM + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
            AND     A.DEPT_CODE        = @DEPT_CODE
            </if>
            <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
            AND     A.OEM_ITEM_CODE LIKE @OEM_ITEM_CODE + '%'
            </if>
            
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <select id="s_zcc601ukrv_kdService.selectList1" parameterType="Map" resultType="rMap">
        --s_zcc601ukrv_kdService.selectList1
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(08)
                  , @DIV_CODE           NVARCHAR(08)
                  , @ENTRY_NUM          NVARCHAR(20)
        
            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @DIV_CODE   = #{DIV_CODE}
            SET @ENTRY_NUM  = #{ENTRY_NUM}
        
            SELECT  A.COMP_CODE                                                                 AS COMP_CODE
                 ,  A.DIV_CODE                                                                  AS DIV_CODE
                 ,  A.ENTRY_NUM                                                                 AS ENTRY_NUM
                 ,  A.EST_P
                 ,  A.MARGIN_AMT
                 ,  A.TEMP_P
                 ,  A.NEGO_P
                 ,  A.DELIVERY_AMT
                 ,  A.DELIVERY_DATE
                 ,  B.COLLECT_AMT
                 ,  B.COLLECT_DATE
                 ,  A.DELIVERY_AMT - B.COLLECT_AMT                                              AS UN_COLLECT_AMT
                 ,  A.CLOSE_YN
            FROM               S_ZCC600T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN (
                                SELECT  COMP_CODE
                                     ,  DIV_CODE
                                     ,  ENTRY_NUM
                                     ,  SUM(COLLECT_AMT)    AS COLLECT_AMT
                                     ,  MAX(COLLECT_DATE)   AS COLLECT_DATE
                                FROM    S_ZCC610T_KD
                                WHERE   COMP_CODE   = @COMP_CODE
                                AND     DIV_CODE    = @DIV_CODE
                                AND     ENTRY_NUM   = @ENTRY_NUM
                                GROUP   BY COMP_CODE, DIV_CODE, ENTRY_NUM
                                ) AS B ON B.COMP_CODE = A.COMP_CODE
                                      AND B.DIV_CODE  = A.DIV_CODE
                                      AND B.ENTRY_NUM = A.ENTRY_NUM
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.DIV_CODE      = @DIV_CODE
            AND     A.ENTRY_NUM     = @ENTRY_NUM
            
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <select id="s_zcc601ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        --s_zcc601ukrv_kdService.selectList2
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(08)
                  , @DIV_CODE           NVARCHAR(08)
                  , @ENTRY_NUM          NVARCHAR(20)
        
            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @DIV_CODE   = #{DIV_CODE}
            SET @ENTRY_NUM  = #{ENTRY_NUM}
        
            SELECT  A.COMP_CODE                                                                 AS COMP_CODE
                 ,  A.DIV_CODE                                                                  AS DIV_CODE
                 ,  A.ENTRY_NUM                                                                 AS ENTRY_NUM
                 ,  A.EST_SEQ
                 ,  A.COLLECT_DATE
                 ,  A.COLLECT_QTY
                 ,  A.COLLECT_AMT
                 ,  A.REMARK
            FROM    S_ZCC610T_KD AS A WITH (NOLOCK)
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.DIV_CODE      = @DIV_CODE
            AND     A.ENTRY_NUM     = @ENTRY_NUM
            
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
        
    </select>
    
    <select id="s_zcc601ukrv_kdService.exists600t" parameterType="Map" resultType="string">
        --s_zcc601ukrv_kdService.exists600t
        SELECT  CASE WHEN EXISTS   (SELECT  1
                                    FROM    S_ZCC600T_KD
                                    WHERE   COMP_CODE = #{S_COMP_CODE}
                                    AND     DIV_CODE  = #{DIV_CODE}
                                    AND     ENTRY_NUM = #{ENTRY_NUM}
                                    AND     TEMP_P + NEGO_P != 0
                                    ) THEN 'Y' ELSE 'N' END EXIST_YN

    </select>
    
    <select id="s_zcc601ukrv_kdService.exists610t" parameterType="Map" resultType="string">
        --s_zcc601ukrv_kdService.exists610t
        SELECT  CASE WHEN EXISTS   (SELECT  1
                                    FROM    S_ZCC610T_KD
                                    WHERE   COMP_CODE = #{S_COMP_CODE}
                                    AND     DIV_CODE  = #{DIV_CODE}
                                    AND     ENTRY_NUM = #{ENTRY_NUM}
                                    ) THEN 'Y' ELSE 'N' END EXIST_YN

    </select>
    
    <insert id="s_zcc601ukrv_kdService.insertDetail1" parameterType="Map">
        --s_zcc601ukrv_kdService.insertDetail1
        
        
    </insert>
    
    <update id="s_zcc601ukrv_kdService.updateDetail1" parameterType="Map">
        --s_zcc601ukrv_kdService.updateDetail1
         
        UPDATE  S_ZCC600T_KD
        SET     EST_P           = #{EST_P}
          ,     MARGIN_AMT      = #{MARGIN_AMT}
          ,     TEMP_P          = #{TEMP_P}
          ,     NEGO_P          = #{NEGO_P}
          ,     DELIVERY_AMT    = #{DELIVERY_AMT}
          ,     DELIVERY_DATE   = #{DELIVERY_DATE}
          ,     CLOSE_YN        = #{CLOSE_YN}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
    </update>
    
    <delete id="s_zcc601ukrv_kdService.deleteDetail1" parameterType="Map">
        --s_zcc601ukrv_kdService.deleteDetail1
         
        UPDATE  S_ZCC600T_KD
        SET     EST_P           = 0
          ,     MARGIN_AMT      = 0
          ,     TEMP_P          = 0
          ,     NEGO_P          = 0
          ,     DELIVERY_AMT    = 0
          ,     DELIVERY_DATE   = NULL
          ,     CLOSE_YN        = 'N'
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE() 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
    </delete>
    
    <insert id="s_zcc601ukrv_kdService.insertDetail2" parameterType="Map">
        --s_zcc601ukrv_kdService.insertDetail2
        INSERT  INTO S_ZCC610T_KD
        (
            COMP_CODE
        ,   DIV_CODE
        ,   ENTRY_NUM
        ,   EST_SEQ
        ,   COLLECT_DATE
        ,   COLLECT_QTY
        ,   COLLECT_AMT
        ,   REMARK
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (
            #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{ENTRY_NUM}
        ,   #{EST_SEQ}
        ,   #{COLLECT_DATE}
        ,   #{COLLECT_QTY}
        ,   #{COLLECT_AMT}
        ,   #{REMARK}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
        
    </insert>
    
    <update id="s_zcc601ukrv_kdService.updateDetail2" parameterType="Map">
        --s_zcc601ukrv_kdService.updateDetail2
         
        UPDATE  S_ZCC610T_KD
        SET     COLLECT_DATE    = #{COLLECT_DATE}
          ,     COLLECT_QTY     = #{COLLECT_QTY}
          ,     COLLECT_AMT     = #{COLLECT_AMT}
          ,     REMARK          = #{REMARK}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
        AND     EST_SEQ     = #{EST_SEQ}
    </update>
    
    <delete id="s_zcc601ukrv_kdService.deleteDetail2" parameterType="Map">
        --s_zcc601ukrv_kdService.deleteDetail2
         
        DELETE  FROM S_ZCC610T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
        AND     EST_SEQ     = #{EST_SEQ}
    </delete>
    
    <update id="s_zcc601ukrv_kdService.updateCloseYN" parameterType="Map">
    <![CDATA[
        --s_zcc701ukrv_kdService.updateCloseYN
         
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(08)
                  , @DIV_CODE           NVARCHAR(08)
                  , @ENTRY_NUM          NVARCHAR(20)
        
            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @DIV_CODE   = #{DIV_CODE}
            SET @ENTRY_NUM  = #{ENTRY_NUM}

            UPDATE  A
            SET     A.CLOSE_YN = 'Y'
            FROM               S_ZCC600T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN (
                                SELECT  COMP_CODE
                                     ,  DIV_CODE
                                     ,  ENTRY_NUM
                                     ,  SUM(COLLECT_AMT)    AS COLLECT_AMT
                                FROM    S_ZCC610T_KD
                                WHERE   COMP_CODE   = @COMP_CODE
                                AND     DIV_CODE    = @DIV_CODE
                                AND     ENTRY_NUM   = @ENTRY_NUM
                                GROUP   BY COMP_CODE, DIV_CODE, ENTRY_NUM
                                ) AS B ON B.COMP_CODE = A.COMP_CODE
                                      AND B.DIV_CODE  = A.DIV_CODE
                                      AND B.ENTRY_NUM = A.ENTRY_NUM
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.DIV_CODE      = @DIV_CODE
            AND     A.ENTRY_NUM     = @ENTRY_NUM
            AND     A.DELIVERY_AMT - B.COLLECT_AMT <= 0

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END 
    ]]>
    </update>    
</mapper>