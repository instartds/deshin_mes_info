<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_str902skrv_kdService">
    <select id="s_str902skrv_kdService.selectList" parameterType="Map" resultType="rMap">
    
DECLARE @BASE_YM NVARCHAR(6)
SET @BASE_YM = #{YYYY_MM}
 SELECT   ISNULL(A.DEPT_CODE,'')											AS DEPT_CODE
		,  MAX(M1.CODE_NAME)	 +  ' ' + 	A.MONEY_UNIT	                AS GROUP_NAME 
        ,  MAX(M1.CODE_NAME)												AS DEPT_NAME
		, uniLITE.fnGetUserDateComp(A.COMP_CODE, @BASE_YM)					AS YYYY_MM
		, A.ITEM_CODE 
		, MAX(B.ITEM_NAME)											AS ITEM_NAME
		, MAX(B.SPEC)												AS SPEC
		, A.SALE_CUSTOM_CODE
		, MAX(C.CUSTOM_NAME)										AS CUSTOM_NAME
		, A.MONEY_UNIT
		, SUM(ISNULL(A.PLAN_AMT, 0))										AS PLAN_AMT 
        , SUM(ISNULL(A.INOUT_I , 0))										AS INOUT_I           
        , SUM(ISNULL(A.SALE_AMT, 0))										AS SALE_AMT   
FROM (
							SELECT COMP_CODE, DIV_CODE, DEPT_CODE, PLAN_TYPE2_CODE2 AS SALE_CUSTOM_CODE, PLAN_TYPE2_CODE AS ITEM_CODE, MONEY_UNIT
							, SUM(CASE WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '01' THEN (CASE WHEN ISNULL(B.MOD_PLAN_AMT1 ,0) != 0 THEN B.MOD_PLAN_AMT1  ELSE B.PLAN_AMT1   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '02' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT2 ,0) != 0 THEN MOD_PLAN_AMT2  ELSE PLAN_AMT2   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '03' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT3 ,0) != 0 THEN MOD_PLAN_AMT3  ELSE PLAN_AMT3   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '04' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT4 ,0) != 0 THEN MOD_PLAN_AMT4  ELSE PLAN_AMT4   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '05' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT5 ,0) != 0 THEN MOD_PLAN_AMT5  ELSE PLAN_AMT5   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '06' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT6 ,0) != 0 THEN MOD_PLAN_AMT6  ELSE PLAN_AMT6   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '07' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT7 ,0) != 0 THEN MOD_PLAN_AMT7  ELSE PLAN_AMT7   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '08' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT8 ,0) != 0 THEN MOD_PLAN_AMT8  ELSE PLAN_AMT8   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '09' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT9 ,0) != 0 THEN MOD_PLAN_AMT9  ELSE PLAN_AMT9   END)
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '10' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT10,0) != 0 THEN MOD_PLAN_AMT10 ELSE PLAN_AMT10  END) 
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '11' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT11,0) != 0 THEN MOD_PLAN_AMT11 ELSE PLAN_AMT11  END) 
								WHEN @BASE_YM = LEFT(@BASE_YM, 4) + '12' THEN (CASE WHEN ISNULL(MOD_PLAN_AMT12,0) != 0 THEN MOD_PLAN_AMT12 ELSE PLAN_AMT12  END) 
								ELSE 0 
							  END)											AS PLAN_AMT
						  , 0												AS INOUT_I
						  , 0												AS SALE_AMT
						  FROM S_SSP100T_KD B WITH (NOLOCK)
						 WHERE  B.COMP_CODE		= #{S_COMP_CODE}
							AND B.DIV_CODE		= #{DIV_CODE} 
							AND B.PLAN_YEAR		= LEFT(@BASE_YM, 4) 
							AND B.PLAN_TYPE2	= '6' 		 
						 GROUP BY B.COMP_CODE, B.DIV_CODE, B.DEPT_CODE, B.PLAN_TYPE2_CODE , B.MONEY_UNIT, B.PLAN_TYPE2_CODE2 
                   
		UNION ALL  
						SELECT COMP_CODE, DIV_CODE, '1' AS DEPT_CODE, INOUT_CODE AS SALE_CUSTOM_CODE, ITEM_CODE, MONEY_UNIT
						, 0 AS PLAN_AMT
						, SUM(INOUT_FOR_O) AS INOUT_I
						, 0 AS SALE_AMT
						FROM BTR100T WITH (NOLOCK)
						WHERE COMP_CODE		=#{S_COMP_CODE}
						AND DIV_CODE		=#{DIV_CODE}
						AND INOUT_TYPE		='2'
						AND CREATE_LOC		='1'
						AND INOUT_CODE_TYPE	='4'
						AND INOUT_DATE LIKE @BASE_YM + '%'			
						GROUP BY COMP_CODE, DIV_CODE, INOUT_CODE, ITEM_CODE, MONEY_UNIT 					
		UNION ALL   
						SELECT S1.COMP_CODE, S1.DIV_CODE, '1' AS DEPT_CODE, S1.SALE_CUSTOM_CODE, S2.ITEM_CODE, S1.MONEY_UNIT
						, 0 AS PLAN_AMT
						, 0 AS INOUT_I
						, SUM(S2.SALE_AMT_O) AS SALE_AMT 
						FROM	SSA100T S1 WITH (NOLOCK)
								INNER JOIN SSA110T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.BILL_NUM=S2.BILL_NUM
						WHERE	S1.COMP_CODE	=#{S_COMP_CODE}
						AND		S1.DIV_CODE		=#{DIV_CODE}
						AND		S1.SALE_DATE LIKE @BASE_YM + '%'           						
						GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SALE_CUSTOM_CODE, S2.ITEM_CODE, S1.MONEY_UNIT
		UNION ALL
						SELECT S1.COMP_CODE, S1.DIV_CODE, '3' AS DEPT_CODE, S1.IMPORTER AS SALE_CUSTOM_CODE, S2.ITEM_CODE, S1.AMT_UNIT AS MONEY_UNIT
						, 0 AS PLAN_AMT
						, 0 AS INOUT_I
						, SUM(S2.BL_AMT) AS SALE_AMT 
						FROM	TED100T S1 WITH (NOLOCK)
								INNER JOIN TED110T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.BL_SER_NO=S2.BL_SER_NO
						WHERE   S1.COMP_CODE	=#{S_COMP_CODE}
						AND		S1.DIV_CODE		=#{DIV_CODE}
						AND		S1.BL_DATE LIKE @BASE_YM + '%'
						GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.IMPORTER, S2.ITEM_CODE, S1.AMT_UNIT	
				)	A	 						  
		LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
										AND A.ITEM_CODE = B.ITEM_CODE
		LEFT JOIN BCM100T C WITH(NOLOCK) ON A.COMP_CODE			= C.COMP_CODE
										AND A.SALE_CUSTOM_CODE	= C.CUSTOM_CODE 
		LEFT JOIN BSA100T M1 WITH(NOLOCK) ON B.COMP_CODE=M1.COMP_CODE AND A.DEPT_CODE=M1.SUB_CODE AND M1.MAIN_CODE='WB19' 
GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, A.SALE_CUSTOM_CODE , A.ITEM_CODE, A.MONEY_UNIT 
HAVING (SUM(ISNULL(A.PLAN_AMT, 0)) + SUM(ISNULL(A.INOUT_I,0))	+ SUM(ISNULL(A.SALE_AMT, 0)) ) != 0	
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">    
        AND     A.DEPT_CODE = #{DEPT_CODE}  
        </if>  
ORDER BY ISNULL(A.DEPT_CODE,'1'), A.ITEM_CODE, A.SALE_CUSTOM_CODE , A.MONEY_UNIT


    </select>
</mapper>