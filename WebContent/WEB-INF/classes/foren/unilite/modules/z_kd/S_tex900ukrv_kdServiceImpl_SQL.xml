<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_tex900ukrv_kdService">
    <select id="s_tex900ukrv_kdService.selectDetailList" parameterType="Map" resultType="rMap">
        -- "s_tex900ukrv_kdService.selectDetailList"
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT  A.DIV_CODE
                 ,  A.RETURN_DATE
                 ,  A.RETURN_NO
                 ,  A.HS_NO
                 ,  B.HS_NAME
                 ,  A.RETURN_RATE
                 --20191213 A -> C로 변경
                 ,  C.RETURN_AMT
                 ,  A.REMARK
            FROM           S_TEX900T_KD A WITH(NOLOCK)
            LEFT OUTER JOIN TAA030T     B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                      AND A.HS_NO     = B.HS_NO
            --20191213 추가
            INNER JOIN     (SELECT COMP_CODE, DIV_CODE, RETURN_NO, SUM(RETURN_AMT) AS RETURN_AMT
                              FROM S_TEX910T_KD WITH(NOLOCK)
                             WHERE COMP_CODE = #{S_COMP_CODE}
                               AND DIV_CODE  = #{DIV_CODE}
                             GROUP BY COMP_CODE, DIV_CODE, RETURN_NO) C ON C.COMP_CODE = A.COMP_CODE
                                                                       AND C.DIV_CODE  = A.DIV_CODE
                                                                       AND C.RETURN_NO = A.RETURN_NO
            WHERE   A.COMP_CODE    = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE     = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_RETURN_DATE)">
            AND     A.RETURN_DATE &gt;= #{FR_RETURN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_RETURN_DATE)">
            AND     A.RETURN_DATE &lt;= #{TO_RETURN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(RETURN_NO)">
            AND     A.RETURN_NO LIKE #{RETURN_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(REMARK)">
            AND     A.REMARK    LIKE #{REMARK} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(HS_NO)">
            AND     A.HS_NO    LIKE '%' + #{HS_NO} + '%'
            </if>
            ORDER   BY A.DIV_CODE, A.RETURN_DATE, A.RETURN_NO

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
    </select>

    <select id="s_tex900ukrv_kdService.selectMaster" parameterType="Map" resultType="rMap">
        --s_tex900ukrv_kdService.selectMaster
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT  COMP_CODE
                 ,  DIV_CODE
                 ,  RETURN_NO
                 ,  RETURN_DATE
                 ,  MONEY_UNIT
                 ,  EXCHG_RATE_O
                 ,  RETURN_AMT
                 ,  HS_NO
                 ,  RETURN_RATE
            FROM    S_TEX900T_KD WITH (NOLOCK)
            WHERE   COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     DIV_CODE  = #{DIV_CODE}
            </if>
            AND     RETURN_NO = #{RETURN_NO}

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_tex900ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        -- s_tex900ukrv_kd.selectList
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT  A.DIV_CODE
                 ,  A.RETURN_NO
                 ,  A.SEQ
                 ,  A.CUSTOM_CODE
                 ,  B.CUSTOM_NAME
                 ,  A.ED_DATE
                 ,  A.ED_NO
                 ,  A.RT_TARGET_AMT
                 ,  A.BL_SER_NO
                 ,  A.REMARK
                 ,  C.HS_NO
                 ,  D.HS_NAME
                 --20191213 수정 / 추가
                 --,  C.RETURN_AMT
                 ,  A.RETURN_RATE
                 ,  A.RETURN_AMT
                 ,  B.WON_CALC_BAS
            FROM               S_TEX910T_KD A WITH (NOLOCK)
                    INNER JOIN BCM100T      B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                          AND B.CUSTOM_CODE = A.CUSTOM_CODE
                    INNER JOIN S_TEX900T_KD C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                          AND C.RETURN_NO   = A.RETURN_NO
                    LEFT OUTER JOIN TAA030T D WITH(NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
                                                          AND C.HS_NO       = D.HS_NO
            WHERE   A.COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE  = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(HS_NO)">
            AND     C.HS_NO  = #{HS_NO}
            </if>
            AND     A.RETURN_NO = #{RETURN_NO}

            ORDER   BY A.DIV_CODE, A.RETURN_NO, A.ED_DATE, A.ED_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_tex900ukrv_kdService.selectBlNumMasterList" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            SELECT  A.DIV_CODE
                 ,  A.IMPORTER AS CUSTOM_CODE
                 ,  B.CUSTOM_NAME
                 ,  A.ED_DATE
                 ,  A.ED_NO
                 ,  A.BL_SER_NO
                 ,  ISNULL(SUM(C.BL_AMT_WON), 0)    AS BL_AMT_WON
                 --20191213 추가
                 ,  B.WON_CALC_BAS
            FROM               TED100T A WITH (NOLOCK)
                    INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                      AND B.CUSTOM_CODE = A.IMPORTER
                    INNER JOIN TED110T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                      AND C.DIV_CODE    = A.DIV_CODE
                                                      AND C.BL_SER_NO   = A.BL_SER_NO
            WHERE   A.COMP_CODE      = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE       = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_ED_DATE)">
            AND     A.ED_DATE       &gt;= #{FR_ED_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_ED_DATE)">
            AND     A.ED_DATE       &lt;= #{TO_ED_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ED_NO)">
            AND     A.ED_NO       LIKE #{ED_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.IMPORTER LIKE #{CUSTOM_CODE} + '%'
            </if>
			
			AND NOT EXISTS (SELECT TOP 1 1 FROM S_TEX910T_KD WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND BL_SER_NO=A.BL_SER_NO)
            GROUP   BY A.DIV_CODE, A.IMPORTER, B.CUSTOM_NAME, A.ED_DATE, A.ED_NO, A.BL_SER_NO
                     --20191213 추가
                     , B.WON_CALC_BAS
            ORDER   BY A.DIV_CODE, A.IMPORTER, A.ED_DATE, A.ED_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <update id="s_tex900ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE     , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{DIV_CODE      , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{TABLE_ID      , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{PREFIX        , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{BASIS_DATE    , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{AUTO_TYPE     , mode=IN   , jdbcType=VARCHAR  , javaType=java.lang.String},
            #{KEY_NUMBER    , mode=OUT  , jdbcType=VARCHAR  , javaType=java.lang.String}
        )}
    </update>


    <insert id="s_tex900ukrv_kdService.insert" parameterType="Map">
        INSERT INTO S_TEX900T_KD
        (   COMP_CODE
        ,   DIV_CODE
        ,   RETURN_NO
        ,   RETURN_DATE
        ,   MONEY_UNIT
        ,   EXCHG_RATE_O
        <if test="@foren.Ognl@isNotEmpty(RETURN_AMT)">
        ,   RETURN_AMT
        </if>
        ,   HS_NO
        ,   RETURN_RATE
        ,   REMARK
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (   #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{RETURN_NO}
        ,   #{RETURN_DATE}
        ,   'KRW'
        ,   '1'
        <if test="@foren.Ognl@isNotEmpty(RETURN_AMT)">
        ,   #{RETURN_AMT}
        </if>
        ,   #{HS_NO}
        ,   #{RETURN_RATE}
        ,   #{REMARK}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
    </insert>

    <insert id="s_tex900ukrv_kdService.insertDetail" parameterType="Map">
		<selectKey resultType="int" keyProperty="MAX_SER" order="BEFORE">
          SELECT ISNULL(MAX(SEQ),0)+1  FROM S_TEX910T_KD WITH (NOLOCK) WHERE COMP_CODE=#{S_COMP_CODE} AND DIV_CODE=#{DIV_CODE} AND RETURN_NO=#{RETURN_NO}
		</selectKey>

        INSERT INTO S_TEX910T_KD
        (   COMP_CODE
        ,   DIV_CODE
        ,   RETURN_NO
        ,   SEQ
        ,   CUSTOM_CODE
        ,   ED_DATE
        ,   ED_NO
        ,   RT_TARGET_AMT
        --20191213 추가: RETURN_RATE, RETURN_AMT
        ,   RETURN_RATE
        ,   RETURN_AMT
        ,   BL_SER_NO
        ,   REMARK
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (   #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{RETURN_NO}
        ,   #{MAX_SER}
        ,   #{CUSTOM_CODE}
        ,   #{ED_DATE}
        ,   #{ED_NO}
        ,   #{RT_TARGET_AMT}
        --20191213 추가: RETURN_RATE, RETURN_AMT
        ,   #{RETURN_RATE}
        ,   #{RETURN_AMT}
        ,   #{BL_SER_NO}
        ,   #{REMARK}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )

    </insert>

    <update id="s_tex900ukrv_kdService.update" parameterType="foren.unilite.modules.z_kd.S_tex900ukrv_kdModel">
        UPDATE  S_TEX900T_KD
        SET     COMP_CODE      = #{S_COMP_CODE}
          ,     DIV_CODE       = #{DIV_CODE}
          ,     RETURN_DATE    = #{RETURN_DATE}
          ,     MONEY_UNIT     = 'KRW'
          ,     EXCHG_RATE_O   = '1'
          <if test="@foren.Ognl@isNotEmpty(RETURN_AMT)">
          ,     RETURN_AMT     = #{RETURN_AMT}
          </if>
          ,     HS_NO          = #{HS_NO}
          ,     RETURN_RATE    = #{RETURN_RATE}
          ,     REMARK         = #{REMARK}
          ,     UPDATE_DB_USER = #{S_USER_ID}
          ,     UPDATE_DB_TIME = GETDATE()
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     RETURN_NO = #{RETURN_NO}
    </update>

    <update id="s_tex900ukrv_kdService.updateDetail" parameterType="Map">
        UPDATE  S_TEX910T_KD
        SET     RT_TARGET_AMT   = #{RT_TARGET_AMT}
          --20191213 추가: RETURN_RATE, RETURN_AMT
          ,     RETURN_RATE     = #{RETURN_RATE}
          ,     RETURN_AMT      = #{RETURN_AMT}
          ,     REMARK          = #{REMARK}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     RETURN_NO   = #{RETURN_NO}
        AND     SEQ         = #{SEQ}

    </update>

    <select id="s_tex900ukrv_kdService.beforeDeleteCheck" parameterType="Map" resultType="String">
        SELECT  TOP 1 RETURN_NO
        FROM    S_TEX910T_KD WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     RETURN_NO = #{RETURN_NO}
    </select>

    <delete id="s_tex900ukrv_kdService.delete" parameterType="Map">
        DELETE  FROM S_TEX900T_KD
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     RETURN_NO = #{RETURN_NO}
    </delete>

    <delete id="s_tex900ukrv_kdService.deleteDetail" parameterType="Map">
        DELETE  FROM S_TEX910T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     RETURN_NO   = #{RETURN_NO}
        AND     SEQ         = #{SEQ}
    </delete>
</mapper>