<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc600ukrv_kdService">

	<select id="s_zcc600ukrv_kdService.selectSearchInfo" parameterType="Map" resultType="rMap">     
SELECT 
	A.COMP_CODE
	,A.DIV_CODE
	,A.ENTRY_NUM
	,A.ENTRY_DATE	--등록일자
	,A.WORK_TYPE
	,(CASE WHEN A.WORK_TYPE = '1' THEN '개발금형'
		  ELSE '시작샘플'
	END)	AS 	WORK_TYPE_NAME	--작업구분
	,A.DEPT_TYPE		--부서구분
	,B.REMARK
	
	
	,B.SER_NO
	,B.ITEM_CODE
	,B.ITEM_NAME
	,B.CUSTOM_CODE
	,R2.CUSTOM_NAME
	,B.MAKE_QTY	--수량
	,B.MAKE_UNIT
	,B.COST_AMT
	,ISNULL(B.MAKE_END_YN,'N') AS MAKE_END_YN	--작업완료
	
	
	 FROM S_ZCC600T_KD A WITH(NOLOCK)
	 INNER JOIN S_ZCC610T_KD B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	 										AND B.DIV_CODE = A.DIV_CODE
	 										AND B.ENTRY_NUM = A.ENTRY_NUM
LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = B.COMP_CODE
								 AND R2.CUSTOM_CODE = B.CUSTOM_CODE

	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{DIV_CODE}
	  
 <if test="@foren.Ognl@isNotEmpty(ENTRY_DATE_FR)">
	  AND A.ENTRY_DATE &gt;= #{ENTRY_DATE_FR}
 </if>
 <if test="@foren.Ognl@isNotEmpty(ENTRY_DATE_TO)">
	  AND A.ENTRY_DATE &lt;= #{ENTRY_DATE_TO}
 </if>
 <if test="@foren.Ognl@isNotEmpty(WORK_TYPE)">
	  AND A.WORK_TYPE = #{WORK_TYPE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(DEPT_TYPE)">
	  AND A.DEPT_TYPE = #{DEPT_TYPE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(ENTRY_NUM)">
	  AND A.ENTRY_NUM LIKE '%' +  #{ENTRY_NUM} + '%'
 </if>
 
 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	  AND B.ITEM_CODE LIKE '%' +  #{ITEM_CODE} + '%'
 </if>
 <if test="@foren.Ognl@isNotEmpty(MAKE_END_YN)">
	  AND B.MAKE_END_YN =  #{MAKE_END_YN} 
 </if>
 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	  AND B.CUSTOM_CODE = #{CUSTOM_CODE}
 </if>
 
 ORDER BY A.ENTRY_NUM,B.SER_NO
 
    </select>
    
    <select id="s_zcc600ukrv_kdService.selectDetail" parameterType="Map" resultType="rMap">     
SELECT 

	A.COMP_CODE
	,A.DIV_CODE
	,A.ENTRY_NUM
	,A.SER_NO
	,A.ITEM_CODE
	,A.ITEM_NAME
	,A.CUSTOM_CODE
	,R2.CUSTOM_NAME
	,A.MAKE_QTY	--수량
	,ISNULL(A.MAKE_END_YN,'N') AS MAKE_END_YN	--작업완료
	,A.MONEY_UNIT
	,A.EXCHG_RATE_O
	
	--(개발금형)
	,A.MATERIAL_AMT	--재료비
	,A.MAKE_AMT		--가공비
	,A.ETC_AMT		--기타
	
	-- (시작샘플)
	,A.WIRE_P	--와이어
	,A.WIRE_S_P	--와이어s
	,A.LASER_P	--레이저
	,A.COAT_P	--코팅
	,A.ETC_P	--기타
	
	,A.COST_AMT	--원가 합계
	
	,A.EST_AMT	--견적가
	--,A.MARGIN_AMT	--마진금액
	--,A.TEMP_AMT	--임시가
	--,A.NEGO_AMT	--네고가
	--,A.DELIVERY_QTY	--납품수량
	--,A.DELIVERY_AMT	--납품액
	--,A.DELIVERY_DATE	--납품일자
	--,A.CLOSE_YN	--완료여부
	--,A.REMARK
	
	, (SELECT 
		COUNT(S1.COMP_CODE)
		 FROM S_ZCC620T_KD S1 WITH(NOLOCK)
	    WHERE S1.COMP_CODE = A.COMP_CODE
	      AND S1.DIV_CODE = A.DIV_CODE
	      AND S1.ENTRY_NUM = A.ENTRY_NUM
	      AND S1.SER_NO = A.SER_NO 
	) AS COLLECT_CNT
	,A.MAKE_UNIT
	,A.REMARK
	
 FROM S_ZCC610T_KD A WITH(NOLOCK)
LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								 AND R2.CUSTOM_CODE = A.CUSTOM_CODE
 
 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.DIV_CODE = #{DIV_CODE}
   AND A.ENTRY_NUM = #{ENTRY_NUM}
   
ORDER BY   A.COMP_CODE
	,A.DIV_CODE
	,A.ENTRY_NUM
	,A.SER_NO 
    </select>
    
    
    
<select id="s_zcc600ukrv_kdService.checkEntryNum" parameterType="Map" resultType="object">    
SELECT 
	ISNULL(MAX(ENTRY_NUM),'EMPTY') AS ENTRY_NUM
  FROM S_ZCC600T_KD
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND DIV_CODE = #{DIV_CODE}
   AND ENTRY_NUM LIKE #{CHECK_VALUE} + '%'
</select>

    <insert id="s_zcc600ukrv_kdService.insertMaster" parameterType="Map">
INSERT INTO S_ZCC600T_KD
(
	COMP_CODE
	,DIV_CODE
	,ENTRY_NUM
	,ENTRY_DATE	
	,WORK_TYPE	
	,DEPT_TYPE	
	,REMARK
	
	,INSERT_DB_USER
	,INSERT_DB_TIME
	,UPDATE_DB_USER
	,UPDATE_DB_TIME
)VALUES(
	#{S_COMP_CODE}
	,#{DIV_CODE}
	,#{ENTRY_NUM}
	,#{ENTRY_DATE}
	,#{WORK_TYPE}
	,#{DEPT_TYPE}
	,#{REMARK}

	,#{S_USER_ID}
	,GETDATE()
	,#{S_USER_ID}
	,GETDATE()
)        
    </insert>
    
    <update id="s_zcc600ukrv_kdService.updateMaster" parameterType="Map"> 
        UPDATE S_ZCC600T_KD 
           SET REMARK = #{REMARK} 
			,UPDATE_DB_USER = #{S_USER_ID}
			,UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND ENTRY_NUM = #{ENTRY_NUM} 
    </update>
    
    <delete id="s_zcc600ukrv_kdService.deleteMaster" parameterType="Map">     
		DELETE S_ZCC600T_KD 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND ENTRY_NUM = #{ENTRY_NUM} 
    </delete>
    
    <insert id="s_zcc600ukrv_kdService.insertList" parameterType="Map"> 
	INSERT INTO S_ZCC610T_KD
	(
		COMP_CODE
		,DIV_CODE
		,ENTRY_NUM
		,SER_NO
		,ITEM_CODE
		,ITEM_NAME
		,CUSTOM_CODE
		,MAKE_QTY
		,MAKE_END_YN
		,MONEY_UNIT
		,EXCHG_RATE_O
		,WIRE_P
		,WIRE_S_P
		,LASER_P
		,COAT_P
		,ETC_P
		,MATERIAL_AMT
		,MAKE_AMT
		,ETC_AMT
		,COST_AMT
		,MAKE_UNIT
		,REMARK
		
		,INSERT_DB_USER
		,INSERT_DB_TIME
		,UPDATE_DB_USER
		,UPDATE_DB_TIME
	
	)VALUES(
		#{COMP_CODE}
		,#{DIV_CODE}
		,#{ENTRY_NUM}
		,#{SER_NO}
		,#{ITEM_CODE}
		,#{ITEM_NAME}
		,#{CUSTOM_CODE}
		,#{MAKE_QTY}
		,#{MAKE_END_YN}
		,#{MONEY_UNIT}
		,#{EXCHG_RATE_O}
		,#{WIRE_P}
		,#{WIRE_S_P}
		,#{LASER_P}
		,#{COAT_P}
		,#{ETC_P}
		,#{MATERIAL_AMT}
		,#{MAKE_AMT}
		,#{ETC_AMT}
		,#{COST_AMT}
		,#{MAKE_UNIT}
		,#{REMARK}
		
		,#{S_USER_ID}
		,GETDATE()
		,#{S_USER_ID}
		,GETDATE()
	)
    </insert>
    
    <update id="s_zcc600ukrv_kdService.updateList" parameterType="Map"> 
        UPDATE S_ZCC610T_KD
           SET ITEM_CODE  = #{ITEM_CODE}
            ,ITEM_NAME  = #{ITEM_NAME}
			,CUSTOM_CODE  = #{CUSTOM_CODE}
			,MAKE_QTY     = #{MAKE_QTY}
			,MAKE_END_YN  = #{MAKE_END_YN}
			,MONEY_UNIT   = #{MONEY_UNIT}
			,EXCHG_RATE_O = #{EXCHG_RATE_O}
			,WIRE_P       = #{WIRE_P}
			,WIRE_S_P     = #{WIRE_S_P}
			,LASER_P      = #{LASER_P}
			,COAT_P       = #{COAT_P}
			,ETC_P        = #{ETC_P}
			,MATERIAL_AMT = #{MATERIAL_AMT}
			,MAKE_AMT     = #{MAKE_AMT}
			,ETC_AMT      = #{ETC_AMT}
			,COST_AMT     = #{COST_AMT}
			
			,MARGIN_AMT = (CASE WHEN ISNULL(EST_AMT,0) = 0 THEN 0
								ELSE ISNULL(EST_AMT,0) - ISNULL(COST_AMT,0)
						   END)
			,MAKE_UNIT = #{MAKE_UNIT}
			,REMARK = #{REMARK}	
						   
			,UPDATE_DB_USER = #{S_USER_ID}
			,UPDATE_DB_TIME = GETDATE()
			
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE = #{DIV_CODE}
          AND ENTRY_NUM = #{ENTRY_NUM}
          AND SER_NO = #{SER_NO}
    </update>
    
    <delete id="s_zcc600ukrv_kdService.deleteList" parameterType="Map">     
       DELETE S_ZCC610T_KD 
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE = #{DIV_CODE}
          AND ENTRY_NUM = #{ENTRY_NUM}
          AND SER_NO = #{SER_NO}
    </delete>
</mapper>