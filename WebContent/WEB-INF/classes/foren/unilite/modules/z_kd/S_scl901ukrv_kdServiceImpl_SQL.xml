<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_scl901ukrv_kdService">

    <select id="s_scl901ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
                  , @UserId         NVARCHAR(100) /* 사용자ID    */
                  , @LangType       NVARCHAR(02) /* 언어구분    */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode   = #{S_COMP_CODE}
            SET @UserId     = #{S_USER_ID}
            SET @LangType   = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT  TOP 1 @DateFormat = CODE_NAME
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE = @CompCode
            AND     MAIN_CODE = N'B044'
            AND     REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  A.DIV_CODE                           AS DIV_CODE
                 ,  A.CLAIM_NO                           AS CLAIM_NO
                 ,  B.SEQ                                AS SEQ
                 ,  A.CLAIM_DATE                         AS CLAIM_DATE
                 ,  B.ITEM_CODE                          AS ITEM_CODE
                 ,  D.ITEM_NAME                          AS ITEM_NAME
                 ,  A.CUSTOM_CODE                        AS CUSTOM_CODE
                 ,  C.CUSTOM_NAME                        AS CUSTOM_NAME
                 ,  D.SPEC                               AS SPEC
                 ,  D.OEM_ITEM_CODE                      AS OEM_ITEM_CODE
                 ,  B.BS_COUNT                           AS BS_COUNT
                 ,  B.MONEY_UNIT                         AS MONEY_UNIT
                 ,  ISNULL(B.EXCHG_RATE_O, 0)            AS EXCHG_RATE_O
                 ,  ISNULL(B.CLAIM_AMT, 0)               AS CLAIM_AMT
                 ,  ISNULL(B.GJ_RATE, 0)                 AS GJ_RATE
                 ,  ISNULL(B.BAD_N_Q, 0)                 AS BAD_N_Q
                 ,  ISNULL(B.BAD_C_Q, 0)                 AS BAD_C_Q
                 ,  B.DEPT_CODE                          AS DEPT_CODE
                 ,  E.TREE_NAME                          AS DEPT_NAME
                 ,  B.GJ_DATE                            AS GJ_DATE
                 ,  ISNULL(B.GJ_AMT, 0)                  AS GJ_AMT
                 ,  B.YE_DATE                            AS YE_DATE
                 ,  ISNULL(B.YE_AMT, 0)                  AS YE_AMT
                 ,  B.YE_NO                              AS YE_NO
                 ,  B.YE_FLAG                            AS YE_FLAG
                 ,  B.HB_DATE                            AS HB_DATE
                 ,  ISNULL(B.HB_AMT, 0)                  AS HB_AMT
                 ,  B.HB_NO                              AS HB_NO
                 ,  B.REMARK                             AS REMARK
                 ,  B.IO_FLAG                            AS IO_FLAG
                 ,  B.KIND_FLAG                          AS KIND_FLAG
            FROM               S_SCL900T_KD AS A WITH (NOLOCK)
                    INNER JOIN S_SCL910T_KD AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.DIV_CODE    = A.DIV_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                                                              AND B.CLAIM_NO    = A.CLAIM_NO
                    LEFT  JOIN BCM100T      AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                              AND C.CUSTOM_CODE = A.CUSTOM_CODE
                    LEFT  JOIN BPR100T      AS D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
                                                              AND D.ITEM_CODE   = B.ITEM_CODE
                    LEFT  JOIN BSA210T      AS E WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
                                                              AND E.TREE_CODE   = B.DEPT_CODE
            WHERE   A.COMP_CODE     = #{S_COMP_CODE}
            AND     A.DIV_CODE      = #{DIV_CODE}
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
            AND     A.CLAIM_DATE    = #{CLAIM_DATE}
             <if test="@foren.Ognl@isNotEmpty(CLAIM_NO)">
            AND     A.CLAIM_NO      = #{CLAIM_NO}
             </if>
            ORDER   BY B.SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_scl901ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
         BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT  TOP 1 @DateFormat = CODE_NAME
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE = @CompCode
            AND     MAIN_CODE = N'B044'
            AND     REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  A.DIV_CODE                                  AS DIV_CODE
                 ,  A.CUSTOM_CODE                               AS CUSTOM_CODE
                 ,  B.CUSTOM_NAME                               AS CUSTOM_NAME
                 ,  A.CLAIM_NO                                  AS CLAIM_NO
                 ,  A.CLAIM_DATE                                AS CLAIM_DATE
                 ,  C.DEPT_CODE                                 AS DEPT_CODE
                 ,  D.TREE_NAME                                 AS DEPT_NAME
            FROM               S_SCL900T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN BCM100T      AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                    INNER JOIN S_SCL910T_KD AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                              AND C.DIV_CODE    = A.DIV_CODE
                                                              AND C.CUSTOM_CODE = A.CUSTOM_CODE
                                                              AND C.CLAIM_NO    = A.CLAIM_NO
                    LEFT  JOIN BSA210T      AS D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
                                                              AND D.TREE_CODE   = C.DEPT_CODE
            WHERE   A.COMP_CODE     = #{S_COMP_CODE}
            AND     A.DIV_CODE      = #{DIV_CODE}
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CLAIM_DATE)">
            AND     A.CLAIM_DATE    = #{CLAIM_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CLAIM_NO)">
            AND     A.CLAIM_NO      = #{CLAIM_NO}
            </if>
            GROUP   BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.CUSTOM_NAME, A.CLAIM_NO, A.CLAIM_DATE, C.DEPT_CODE, D.TREE_NAME
            ORDER   BY A.CLAIM_DATE

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_scl901ukrv_kdService.checkClaimNo" parameterType="Map" resultType="rMap">
        SELECT  CLAIM_NO
        FROM    S_SCL900T_KD WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     DIV_CODE  = #{DIV_CODE}
        AND     CUSTOM_CODE  = #{CUSTOM_CODE}
        AND     CLAIM_NO  = #{CLAIM_NO}
        AND     CLAIM_DATE = #{CLAIM_DATE}
    </select>

     <select id="s_scl901ukrv_kdService.checkClaimNoBeforeInsert" parameterType="Map" resultType="int">
        SELECT  COUNT(1)
        FROM    S_SCL900T_KD WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     DIV_CODE  = #{DIV_CODE}
        AND     CUSTOM_CODE  = #{CUSTOM_CODE}
        AND     CLAIM_NO  = #{CLAIM_NO}
        AND     CLAIM_DATE = #{CLAIM_DATE}
    </select>

    <update id="s_scl901ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <insert id="s_scl901ukrv_kdService.insert" parameterType="Map">
        INSERT INTO S_SCL900T_KD
            (   COMP_CODE
              , DIV_CODE
              , CLAIM_NO
              , CUSTOM_CODE
              , CLAIM_DATE
              ,INSERT_DB_USER
              ,INSERT_DB_TIME
              ,UPDATE_DB_USER
              ,UPDATE_DB_TIME
            )
        VALUES
            (   #{S_COMP_CODE}
              , #{DIV_CODE}
              , #{CLAIM_NO}
              , #{CUSTOM_CODE}
              , #{CLAIM_DATE}
               ,#{S_USER_ID}
               ,GETDATE()
               ,#{S_USER_ID}
               ,GETDATE()
            )
    </insert>

    <insert id="s_scl901ukrv_kdService.insertDetail" parameterType="Map">
        INSERT INTO S_SCL910T_KD
            (   DIV_CODE
              , CUSTOM_CODE
              , CLAIM_DATE
              , CLAIM_NO
              , SEQ
              , ITEM_CODE
              , BS_COUNT
              , MONEY_UNIT
              , EXCHG_RATE_O
              , CLAIM_AMT
              , GJ_RATE
              , BAD_N_Q
              , BAD_C_Q
              , DEPT_CODE
              , GJ_DATE
              , GJ_AMT
              , YE_DATE
              , YE_AMT
              , YE_NO
              , YE_FLAG
              , HB_DATE
              , HB_AMT
              , HB_NO
              , REMARK
              , IO_FLAG
              , KIND_FLAG
              , COMP_CODE
              ,INSERT_DB_USER
              ,INSERT_DB_TIME
              ,UPDATE_DB_USER
              ,UPDATE_DB_TIME
            )
        VALUES
            (   #{DIV_CODE}
              , #{CUSTOM_CODE}
              , #{CLAIM_DATE}
              , #{CLAIM_NO}
              , #{SEQ}
              , #{ITEM_CODE}
              , #{BS_COUNT}
              , #{MONEY_UNIT}
              , #{EXCHG_RATE_O}
              , #{CLAIM_AMT}
              , #{GJ_RATE}
              , #{BAD_N_Q}
              , #{BAD_C_Q}
              , #{DEPT_CODE}
              , #{GJ_DATE}
              , #{GJ_AMT}
              , #{YE_DATE}
              , #{YE_AMT}
              , #{YE_NO}
              , #{YE_FLAG}
              , #{HB_DATE}
              , #{HB_AMT}
              , #{HB_NO}
              , #{REMARK}
              , #{IO_FLAG}
              , #{KIND_FLAG}
              , #{S_COMP_CODE}
              ,#{S_USER_ID}
              ,GETDATE()
              ,#{S_USER_ID}
              ,GETDATE()
            )
    </insert>

    <update id="s_scl901ukrv_kdService.updateDetail" parameterType="Map">
         UPDATE  S_SCL910T_KD
            SET
                 ITEM_CODE       = #{ITEM_CODE}
               , BS_COUNT        = #{BS_COUNT}
               , MONEY_UNIT      = #{MONEY_UNIT}
               , EXCHG_RATE_O    = #{EXCHG_RATE_O}
               , CLAIM_AMT       = #{CLAIM_AMT}
               , GJ_RATE         = #{GJ_RATE}
               , BAD_N_Q         = #{BAD_N_Q}
               , BAD_C_Q         = #{BAD_C_Q}
               , DEPT_CODE       = #{DEPT_CODE}
               , GJ_DATE         = #{GJ_DATE}
               , GJ_AMT          = #{GJ_AMT}
               , YE_DATE         = #{YE_DATE}
               , YE_AMT          = #{YE_AMT}
               , YE_NO           = #{YE_NO}
               , YE_FLAG         = #{YE_FLAG}
               , HB_DATE         = #{HB_DATE}
               , HB_AMT          = #{HB_AMT}
               , HB_NO           = #{HB_NO}
               , REMARK          = #{REMARK}
               , IO_FLAG         = #{IO_FLAG}
               , KIND_FLAG       = #{KIND_FLAG}
               , UPDATE_DB_USER = #{S_USER_ID}
               , UPDATE_DB_TIME = GETDATE()
          WHERE  COMP_CODE       = #{S_COMP_CODE}
            AND  DIV_CODE        = #{DIV_CODE}
            AND  CUSTOM_CODE     = #{CUSTOM_CODE}
            AND  CLAIM_NO        = #{CLAIM_NO}
            AND  CLAIM_DATE      = #{CLAIM_DATE}
    </update>

    <delete id="s_scl901ukrv_kdService.deleteDetail" parameterType="Map">
        DELETE FROM S_SCL910T_KD
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND CUSTOM_CODE    = #{CUSTOM_CODE}
           AND CLAIM_NO       = #{CLAIM_NO}
           AND CLAIM_DATE     = #{CLAIM_DATE}
           AND SEQ            = #{SEQ}
        IF NOT EXISTS (SELECT TOP 1 1
                       FROM S_SCL910T_KD
                       WHERE COMP_CODE    = #{S_COMP_CODE}
                       AND DIV_CODE       = #{DIV_CODE}
                       AND CUSTOM_CODE    = #{CUSTOM_CODE}
                       AND CLAIM_NO       = #{CLAIM_NO}
                       AND CLAIM_DATE     = #{CLAIM_DATE})
        BEGIN
          DELETE FROM S_SCL900T_KD
           WHERE COMP_CODE      = #{S_COMP_CODE}
             AND DIV_CODE       = #{DIV_CODE}
             AND CUSTOM_CODE    = #{CUSTOM_CODE}
             AND CLAIM_NO       = #{CLAIM_NO}
             AND CLAIM_DATE     = #{CLAIM_DATE}
        END
    </delete>
      <!-- Excel Upload-->
    <update id="s_scl901ukrv_kdService.insertExcelUpload" parameterType="Map">
        /* s_scl901ukrv_kdService.insertExcelUpload */
        /* temp Table에 insert */
        INSERT INTO L_S_SCL900T_KD
            (
               _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR
             , _EXCEL_ERROR_MSG

             , COMP_CODE
             , ITEM_CODE
             , BS_COUNT
             , CLAIM_AMT
             , GJ_RATE
             , BAD_N_Q
             , BAD_C_Q
             , GJ_DATE
             , GJ_AMT
             , YE_DATE
             , YE_AMT
             , YE_NO
             , YE_FLAG
             , HB_DATE
             , HB_AMT
             , HB_NO
             , IO_FLAG
             , KIND_FLAG
             , REMARK

             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR}
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}

             , #{S_COMP_CODE}
             , #{ITEM_CODE}
             , #{BS_COUNT}
             , #{CLAIM_AMT}

             , #{GJ_RATE}
             , #{BAD_N_Q}
             , #{BAD_C_Q}
             , #{GJ_DATE}
             , #{GJ_AMT}
             , #{YE_DATE}
             , #{YE_AMT}
             , #{YE_NO}
             , #{YE_FLAG}
             , #{HB_DATE}
             , #{HB_AMT}
             , #{HB_NO}
             , #{IO_FLAG}
             , #{KIND_FLAG}

             , #{REMARK}

             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    <select id="s_scl901ukrv_kdService.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /* s_scl901ukrv_kdService.selectExcelUploadSheet1 */
        SELECT A._EXCEL_JOBID
             , A._EXCEL_ROWNUM
             , A._EXCEL_HAS_ERROR
             , A._EXCEL_ERROR_MSG

             , A.COMP_CODE                  --법인코드
             , A.ITEM_CODE                  --품목코드
             , B.SPEC							--규격
             , B.ITEM_NAME                  --품목명
             , A.BS_COUNT                   --발생건수
             , A.CLAIM_AMT                  --금액
             , A.GJ_RATE                    --공제비율
             , A.BAD_N_Q                    --불량(N)
             , A.BAD_C_Q                    --불량(C)
             , A.GJ_DATE                    --공제일자
             , A.GJ_AMT                     --공제금액
             , A.YE_DATE                    --이의일자
             , A.YE_AMT                     --이의금액
             , A.YE_NO                      --이의NO
             , A.YE_FLAG                    --이의사유
             , A.HB_DATE                    --환불일자
             , A.HB_AMT                     --환불금액
             , A.HB_NO                      --환불NO
             , A.IO_FLAG                    --수불구분
             , A.KIND_FLAG                  --종류
             , A.REMARK                     --비고

             , A.INSERT_DB_USER
             , A.INSERT_DB_TIME
        FROM  L_S_SCL900T_KD A WITH(NOLOCK)
        LEFT  JOIN BPR100T      AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.ITEM_CODE   = A.ITEM_CODE
        WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
        ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    <!-- 임시 테이블에 insert된 데이터 조회 -->
    <select id="s_scl901ukrv_kdService.getData" parameterType="Map" resultType="rMap">
        SELECT  * FROM L_S_SCL900T_KD WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
    <!-- 에러메세지 insert -->
    <update id="s_scl901ukrv_kdService.insertErrorMsg">
        /* s_scl901ukrv_kdService.insertErrorMsg */
        UPDATE L_S_SCL900T_KD
           SET _EXCEL_ERROR_MSG = #{MSG}
             , _EXCEL_HAS_ERROR = 'Y'
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
           AND _EXCEL_ROWNUM    = #{ROWNUM}
    </update>
</mapper>