<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sgp100ukrv_kdService">
    <select id="s_sgp100ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --sgp100ukrv.Csgp100ukrv[fnSgp100QStd] Query5
    SELECT    A.DIV_CODE
         , A.PLAN_YEAR
         , A.DEPT_CODE
         , A.PLAN_TYPE1
         , A.PLAN_TYPE2
         , A.LEVEL_KIND
         , A.MONEY_UNIT
         , A.ENT_MONEY_UNIT
         , A.CONFIRM_YN
         , B.CUSTOM_CODE AS CUSTOM_CODE
         , uniLITE.fnCustNameComp(B.COMP_CODE, #{S_USER_ID}, B.CUSTOM_CODE) AS CUSTOM_NAME
         , C.ITEM_CODE
         , C.ITEM_NAME
         , C.SPEC
         , C.OEM_ITEM_CODE
         , A.PLAN_TYPE2_CODE
         , A.PLAN_TYPE2_CODE2
       --  , ISNULL(C.SALE_BASIS_P,0) As SALE_BASIS_P ,--sgp100ukrv.Csgp100ukrv[fnsgp100ItemQ]Query14
/*
             ISNULL(A.PLAN_QTY1,0) + ISNULL(A.PLAN_QTY2,0) + ISNULL(A.PLAN_QTY3,0) + ISNULL(A.PLAN_QTY4,0) + ISNULL(A.PLAN_QTY5,0) + ISNULL(A.PLAN_QTY6,0) + ISNULL(A.PLAN_QTY7,0) + ISNULL(A.PLAN_QTY8,0) + ISNULL(A.PLAN_QTY9,0) + ISNULL(A.PLAN_QTY10,0) + ISNULL(A.PLAN_QTY11,0) + ISNULL(A.PLAN_QTY12,0)  AS PLAN_SUM_Q,
             ISNULL(A.PLAN_AMT1,0) + ISNULL(A.PLAN_AMT2,0) + ISNULL(A.PLAN_AMT3,0) + ISNULL(A.PLAN_AMT4,0) + ISNULL(A.PLAN_AMT5,0) + ISNULL(A.PLAN_AMT6,0) + ISNULL(A.PLAN_AMT7,0) + ISNULL(A.PLAN_AMT8,0) + ISNULL(A.PLAN_AMT9,0) + ISNULL(A.PLAN_AMT10,0) + ISNULL(A.PLAN_AMT11,0) + ISNULL(A.PLAN_AMT12,0)  AS PLAN_SUM_AMT,
             ISNULL(A.MOD_PLAN_Q1,0) + ISNULL(A.MOD_PLAN_Q2,0) + ISNULL(A.MOD_PLAN_Q3,0) + ISNULL(A.MOD_PLAN_Q4,0) + ISNULL(A.MOD_PLAN_Q5,0) + ISNULL(A.MOD_PLAN_Q6,0) + ISNULL(A.MOD_PLAN_Q7,0) + ISNULL(A.MOD_PLAN_Q8,0) + ISNULL(A.MOD_PLAN_Q9,0) + ISNULL(A.MOD_PLAN_Q10,0) + ISNULL(A.MOD_PLAN_Q11,0) + ISNULL(A.MOD_PLAN_Q12,0)  AS MOD_PLAN_SUM_Q,
             ISNULL(A.MOD_PLAN_AMT1,0) + ISNULL(A.MOD_PLAN_AMT2,0) + ISNULL(A.MOD_PLAN_AMT3,0) + ISNULL(A.MOD_PLAN_AMT4,0) + ISNULL(A.MOD_PLAN_AMT5,0) + ISNULL(A.MOD_PLAN_AMT6,0) + ISNULL(A.MOD_PLAN_AMT7,0) + ISNULL(A.MOD_PLAN_AMT8,0) + ISNULL(A.MOD_PLAN_AMT9,0) + ISNULL(A.MOD_PLAN_AMT10,0) + ISNULL(A.MOD_PLAN_AMT11,0) + ISNULL(A.MOD_PLAN_AMT12,0)  AS MOD_PLAN_SUM_AMT,
*/
		,  ( /* 거래처별 품목단가정보 조회 */
            SELECT MAX(ISNULL(S1.ITEM_P, 0.0)) AS ITEM_P
            FROM    BPR400T     S1 WITH (NOLOCK)
            WHERE   S1.COMP_CODE        =  #{S_COMP_CODE}
            AND     S1.TYPE             =  N'2'
            AND     S1.DIV_CODE         > ''
            AND     S1.ITEM_CODE        =  A.PLAN_TYPE2_CODE
            AND     S1.CUSTOM_CODE      =  A.PLAN_TYPE2_CODE2
            AND     S1.MONEY_UNIT       =  B.MONEY_UNIT
            AND     S1.ORDER_UNIT       =  C.ORDER_UNIT
            AND     S1.APLY_START_DATE  =  (SELECT  MAX(APLY_START_DATE)
                                            FROM    BPR400T     WITH (NOLOCK)
                                            WHERE   COMP_CODE           =  #{S_COMP_CODE}
                                            AND     TYPE                =  N'2'
                                            AND     DIV_CODE             > ''
                                            AND     ITEM_CODE           =  A.PLAN_TYPE2_CODE
                                            AND     CUSTOM_CODE         =  A.PLAN_TYPE2_CODE2
                                            AND     MONEY_UNIT          =  B.MONEY_UNIT
                                            AND     ORDER_UNIT          =  C.ORDER_UNIT
                                            AND     APLY_START_DATE    <![CDATA[<=]]>  CONVERT(NVARCHAR(8),GETDATE(),112))
            GROUP   BY  S1.COMP_CODE, S1.ITEM_CODE  ) AS SALE_BASIS_P
  			, (
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q1 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q1 ,0) ELSE ISNULL(A.PLAN_QTY1 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q2 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q2 ,0) ELSE ISNULL(A.PLAN_QTY2 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q3 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q3 ,0) ELSE ISNULL(A.PLAN_QTY3 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q4 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q4 ,0) ELSE ISNULL(A.PLAN_QTY4 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q5 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q5 ,0) ELSE ISNULL(A.PLAN_QTY5 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q6 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q6 ,0) ELSE ISNULL(A.PLAN_QTY6 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q7 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q7 ,0) ELSE ISNULL(A.PLAN_QTY7 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q8 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q8 ,0) ELSE ISNULL(A.PLAN_QTY8 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q9 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q9 ,0) ELSE ISNULL(A.PLAN_QTY9 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q10,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q10,0) ELSE ISNULL(A.PLAN_QTY10,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q11,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q11,0) ELSE ISNULL(A.PLAN_QTY11,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_Q12,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_Q12,0) ELSE ISNULL(A.PLAN_QTY12,0) END
    			 ) AS PLAN_SUM_Q,

    			 (
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT1 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT1 ,0) ELSE ISNULL(A.PLAN_AMT1 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT2 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT2 ,0) ELSE ISNULL(A.PLAN_AMT2 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT3 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT3 ,0) ELSE ISNULL(A.PLAN_AMT3 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT4 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT4 ,0) ELSE ISNULL(A.PLAN_AMT4 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT5 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT5 ,0) ELSE ISNULL(A.PLAN_AMT5 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT6 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT6 ,0) ELSE ISNULL(A.PLAN_AMT6 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT7 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT7 ,0) ELSE ISNULL(A.PLAN_AMT7 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT8 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT8 ,0) ELSE ISNULL(A.PLAN_AMT8 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT9 ,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT9 ,0) ELSE ISNULL(A.PLAN_AMT9 ,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT10,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT10,0) ELSE ISNULL(A.PLAN_AMT10,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT11,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT11,0) ELSE ISNULL(A.PLAN_AMT11,0) END +
      			 CASE WHEN ISNULL(A.MOD_PLAN_AMT12,0) <![CDATA[<>]]> 0 THEN ISNULL(A.MOD_PLAN_AMT12,0) ELSE ISNULL(A.PLAN_AMT12,0) END
    			 ) AS PLAN_SUM_AMT,
0 AS MOD_PLAN_SUM_Q             ,
0 AS MOD_PLAN_SUM_AMT,

            ISNULL(A.PLAN_QTY1,0) AS PLAN_QTY1,
            ISNULL(A.PLAN_AMT1,0) AS PLAN_AMT1,
            ISNULL(A.MOD_PLAN_Q1,0) AS MOD_PLAN_Q1,
            ISNULL(A.MOD_PLAN_AMT1,0) AS MOD_PLAN_AMT1,
            ISNULL(A.PLAN_QTY2,0) AS PLAN_QTY2,
            ISNULL(A.PLAN_AMT2,0) AS PLAN_AMT2,
            ISNULL(A.MOD_PLAN_Q2,0) AS MOD_PLAN_Q2,
            ISNULL(A.MOD_PLAN_AMT2,0) AS MOD_PLAN_AMT2,
            ISNULL(A.PLAN_QTY3,0) AS PLAN_QTY3,
            ISNULL(A.PLAN_AMT3,0) AS PLAN_AMT3,
            ISNULL(A.MOD_PLAN_Q3,0) AS MOD_PLAN_Q3,
            ISNULL(A.MOD_PLAN_AMT3,0) AS MOD_PLAN_AMT3,
            ISNULL(A.PLAN_QTY4,0) AS PLAN_QTY4,
            ISNULL(A.PLAN_AMT4,0) AS PLAN_AMT4,
            ISNULL(A.MOD_PLAN_Q4,0) AS MOD_PLAN_Q4,
            ISNULL(A.MOD_PLAN_AMT4,0) AS MOD_PLAN_AMT4,
            ISNULL(A.PLAN_QTY5,0) AS PLAN_QTY5,
            ISNULL(A.PLAN_AMT5,0) AS PLAN_AMT5,
            ISNULL(A.MOD_PLAN_Q5,0) AS MOD_PLAN_Q5,
            ISNULL(A.MOD_PLAN_AMT5,0) AS MOD_PLAN_AMT5,
            ISNULL(A.PLAN_QTY6,0) AS PLAN_QTY6,
            ISNULL(A.PLAN_AMT6,0) AS PLAN_AMT6,
            ISNULL(A.MOD_PLAN_Q6,0) AS MOD_PLAN_Q6,
            ISNULL(A.MOD_PLAN_AMT6,0) AS MOD_PLAN_AMT6,
            ISNULL(A.PLAN_QTY7,0) AS PLAN_QTY7,
            ISNULL(A.PLAN_AMT7,0) AS PLAN_AMT7,
            ISNULL(A.MOD_PLAN_Q7,0) AS MOD_PLAN_Q7,
            ISNULL(A.MOD_PLAN_AMT7,0) AS MOD_PLAN_AMT7,
            ISNULL(A.PLAN_QTY8,0) AS PLAN_QTY8,
            ISNULL(A.PLAN_AMT8,0) AS PLAN_AMT8,
            ISNULL(A.MOD_PLAN_Q8,0) AS MOD_PLAN_Q8,
            ISNULL(A.MOD_PLAN_AMT8,0) AS MOD_PLAN_AMT8,
            ISNULL(A.PLAN_QTY9,0) AS PLAN_QTY9,
            ISNULL(A.PLAN_AMT9,0) AS PLAN_AMT9,
            ISNULL(A.MOD_PLAN_Q9,0) AS MOD_PLAN_Q9,
            ISNULL(A.MOD_PLAN_AMT9,0) AS MOD_PLAN_AMT9,
            ISNULL(A.PLAN_QTY10,0) AS PLAN_QTY10,
            ISNULL(A.PLAN_AMT10,0) AS PLAN_AMT10,
            ISNULL(A.MOD_PLAN_Q10,0) AS MOD_PLAN_Q10,
            ISNULL(A.MOD_PLAN_AMT10,0) AS MOD_PLAN_AMT10,
            ISNULL(A.PLAN_QTY11,0) AS PLAN_QTY11,
            ISNULL(A.PLAN_AMT11,0) AS PLAN_AMT11,
            ISNULL(A.MOD_PLAN_Q11,0) AS MOD_PLAN_Q11,
            ISNULL(A.MOD_PLAN_AMT11,0) AS MOD_PLAN_AMT11,
            ISNULL(A.PLAN_QTY12,0) AS PLAN_QTY12,
            ISNULL(A.PLAN_AMT12,0) AS PLAN_AMT12,
            ISNULL(A.MOD_PLAN_Q12,0) AS MOD_PLAN_Q12,
            ISNULL(A.MOD_PLAN_AMT12,0) AS MOD_PLAN_AMT12,
                    A.UPDATE_DB_USER,
                    A.UPDATE_DB_TIME,
                    A.COMP_CODE
      FROM S_SSP100T_KD A
                   LEFT  JOIN  BCM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                      AND A.PLAN_TYPE2_CODE2 = B.CUSTOM_CODE
                                                      AND B.USE_YN = 'Y'
                                                      AND B.CUSTOM_TYPE IN ('1','3')
                   LEFT  JOIN  (SELECT    AA.COMP_CODE
                                     , AA.ITEM_CODE
                                     , AA.OEM_ITEM_CODE
                                     , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID},AA.ITEM_CODE) AS ITEM_NAME
                                     , AA.SALE_BASIS_P
                                     , AA.USE_YN
                                     , BB.ITEM_ACCOUNT
                                     , AA.SPEC
                                     , BB.ORDER_UNIT
                                  FROM BPR100T AA WITH (NOLOCK)
                                     , BPR200T BB WITH (NOLOCK)
                                 WHERE AA.ITEM_CODE = BB.ITEM_CODE
                                   AND BB.DIV_CODE   = #{DIV_CODE}
                                   AND AA.COMP_CODE = BB.COMP_CODE ) C ON A.COMP_CODE = C.COMP_CODE
                                                                             AND A.PLAN_TYPE2_CODE  = C.ITEM_CODE
                                                                             AND C.USE_YN           = 'Y'
     WHERE A.COMP_CODE = #{S_COMP_CODE}

        <if test="ITEM_CHK == &quot;N&quot;">
       AND A.PLAN_TYPE2 = '6'
        </if>
        <if test="ITEM_CHK == &quot;Y&quot;">
       AND A.PLAN_TYPE2 = '2'
        </if>
       AND B.AGENT_TYPE = #{AGENT_TYPE}
       AND A.DIV_CODE   = #{DIV_CODE}
       AND A.PLAN_YEAR  = #{PLAN_YEAR}
       AND A.MONEY_UNIT = #{MONEY_UNIT}
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
       AND A.DEPT_CODE  = #{DEPT_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
       AND A.PLAN_TYPE1 = #{ORDER_TYPE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
       AND C.ITEM_CODE = #{ITEM_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
       AND C.ITEM_NAME = #{ITEM_NAME}
       </if>
       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
       AND B.CUSTOM_CODE = #{CUSTOM_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
       AND B.CUSTOM_NAME = #{CUSTOM_NAME}
       </if>
     ORDER BY CUSTOM_CODE
    </select>

    <insert id="s_sgp100ukrv_kdService.insertDetail" parameterType="Map">
        INSERT INTO S_SSP100T_KD
             ( DIV_CODE
             , DEPT_CODE
             , DEPT_NAME
             , PLAN_YEAR
             , PLAN_TYPE1
             , PLAN_TYPE2
             , LEVEL_KIND
             , MONEY_UNIT
             , ENT_MONEY_UNIT
             , CONFIRM_YN
             , PLAN_TYPE2_CODE
             , PLAN_TYPE2_CODE2
             , PLAN_QTY1
             , PLAN_AMT1
             , MOD_PLAN_Q1
             , MOD_PLAN_AMT1
             , PLAN_QTY2
             , PLAN_AMT2
             , MOD_PLAN_Q2
             , MOD_PLAN_AMT2
             , PLAN_QTY3
             , PLAN_AMT3
             , MOD_PLAN_Q3
             , MOD_PLAN_AMT3
             , PLAN_QTY4
             , PLAN_AMT4
             , MOD_PLAN_Q4
             , MOD_PLAN_AMT4
             , PLAN_QTY5
             , PLAN_AMT5
             , MOD_PLAN_Q5
             , MOD_PLAN_AMT5
             , PLAN_QTY6
             , PLAN_AMT6
             , MOD_PLAN_Q6
             , MOD_PLAN_AMT6
             , PLAN_QTY7
             , PLAN_AMT7
             , MOD_PLAN_Q7
             , MOD_PLAN_AMT7
             , PLAN_QTY8
             , PLAN_AMT8
             , MOD_PLAN_Q8
             , MOD_PLAN_AMT8
             , PLAN_QTY9
             , PLAN_AMT9
             , MOD_PLAN_Q9
             , MOD_PLAN_AMT9
             , PLAN_QTY10
             , PLAN_AMT10
             , MOD_PLAN_Q10
             , MOD_PLAN_AMT10
             , PLAN_QTY11
             , PLAN_AMT11
             , MOD_PLAN_Q11
             , MOD_PLAN_AMT11
             , PLAN_QTY12
             , PLAN_AMT12
             , MOD_PLAN_Q12
             , MOD_PLAN_AMT12
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE
             )
        VALUES
             ( #{DIV_CODE}
             , #{DEPT_CODE}
             , #{DEPT_NAME}
             , #{PLAN_YEAR}
             , #{PLAN_TYPE1}
             , #{PLAN_TYPE2}
             , #{LEVEL_KIND}
             , #{MONEY_UNIT}
             , #{ENT_MONEY_UNIT}
             , #{CONFIRM_YN}
             , #{PLAN_TYPE2_CODE}
             , #{PLAN_TYPE2_CODE2}
             , #{PLAN_QTY1}
             , #{PLAN_AMT1}
             , #{MOD_PLAN_Q1}
             , #{MOD_PLAN_AMT1}
             , #{PLAN_QTY2}
             , #{PLAN_AMT2}
             , #{MOD_PLAN_Q2}
             , #{MOD_PLAN_AMT2}
             , #{PLAN_QTY3}
             , #{PLAN_AMT3}
             , #{MOD_PLAN_Q3}
             , #{MOD_PLAN_AMT3}
             , #{PLAN_QTY4}
             , #{PLAN_AMT4}
             , #{MOD_PLAN_Q4}
             , #{MOD_PLAN_AMT4}
             , #{PLAN_QTY5}
             , #{PLAN_AMT5}
             , #{MOD_PLAN_Q5}
             , #{MOD_PLAN_AMT5}
             , #{PLAN_QTY6}
             , #{PLAN_AMT6}
             , #{MOD_PLAN_Q6}
             , #{MOD_PLAN_AMT6}
             , #{PLAN_QTY7}
             , #{PLAN_AMT7}
             , #{MOD_PLAN_Q7}
             , #{MOD_PLAN_AMT7}
             , #{PLAN_QTY8}
             , #{PLAN_AMT8}
             , #{MOD_PLAN_Q8}
             , #{MOD_PLAN_AMT8}
             , #{PLAN_QTY9}
             , #{PLAN_AMT9}
             , #{MOD_PLAN_Q9}
             , #{MOD_PLAN_AMT9}
             , #{PLAN_QTY10}
             , #{PLAN_AMT10}
             , #{MOD_PLAN_Q10}
             , #{MOD_PLAN_AMT10}
             , #{PLAN_QTY11}
             , #{PLAN_AMT11}
             , #{MOD_PLAN_Q11}
             , #{MOD_PLAN_AMT11}
             , #{PLAN_QTY12}
             , #{PLAN_AMT12}
             , #{MOD_PLAN_Q12}
             , #{MOD_PLAN_AMT12}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_COMP_CODE}
             )
    </insert>

    <update id="s_sgp100ukrv_kdService.updateDetail" parameterType="Map">
        UPDATE S_SSP100T_KD
           SET ENT_MONEY_UNIT   = #{ENT_MONEY_UNIT}
             , DEPT_CODE        = #{DEPT_CODE}
             , PLAN_QTY1        = #{PLAN_QTY1}
             , PLAN_AMT1        = #{PLAN_AMT1}
             , MOD_PLAN_Q1      = #{MOD_PLAN_Q1}
             , MOD_PLAN_AMT1    = #{MOD_PLAN_AMT1}
             , PLAN_QTY2        = #{PLAN_QTY2}
             , PLAN_AMT2        = #{PLAN_AMT2}
             , MOD_PLAN_Q2      = #{MOD_PLAN_Q2}
             , MOD_PLAN_AMT2    = #{MOD_PLAN_AMT2}
             , PLAN_QTY3        = #{PLAN_QTY3}
             , PLAN_AMT3        = #{PLAN_AMT3}
             , MOD_PLAN_Q3      = #{MOD_PLAN_Q3}
             , MOD_PLAN_AMT3    = #{MOD_PLAN_AMT3}
             , PLAN_QTY4        = #{PLAN_QTY4}
             , PLAN_AMT4        = #{PLAN_AMT4}
             , MOD_PLAN_Q4      = #{MOD_PLAN_Q4}
             , MOD_PLAN_AMT4    = #{MOD_PLAN_AMT4}
             , PLAN_QTY5        = #{PLAN_QTY5}
             , PLAN_AMT5        = #{PLAN_AMT5}
             , MOD_PLAN_Q5      = #{MOD_PLAN_Q5}
             , MOD_PLAN_AMT5    = #{MOD_PLAN_AMT5}
             , PLAN_QTY6        = #{PLAN_QTY6}
             , PLAN_AMT6        = #{PLAN_AMT6}
             , MOD_PLAN_Q6      = #{MOD_PLAN_Q6}
             , MOD_PLAN_AMT6    = #{MOD_PLAN_AMT6}
             , PLAN_QTY7        = #{PLAN_QTY7}
             , PLAN_AMT7        = #{PLAN_AMT7}
             , MOD_PLAN_Q7      = #{MOD_PLAN_Q7}
             , MOD_PLAN_AMT7    = #{MOD_PLAN_AMT7}
             , PLAN_QTY8        = #{PLAN_QTY8}
             , PLAN_AMT8        = #{PLAN_AMT8}
             , MOD_PLAN_Q8      = #{MOD_PLAN_Q8}
             , MOD_PLAN_AMT8    = #{MOD_PLAN_AMT8}
             , PLAN_QTY9        = #{PLAN_QTY9}
             , PLAN_AMT9        = #{PLAN_AMT9}
             , MOD_PLAN_Q9      = #{MOD_PLAN_Q9}
             , MOD_PLAN_AMT9    = #{MOD_PLAN_AMT9}
             , PLAN_QTY10       = #{PLAN_QTY10}
             , PLAN_AMT10       = #{PLAN_AMT10}
             , MOD_PLAN_Q10     = #{MOD_PLAN_Q10}
             , MOD_PLAN_AMT10   = #{MOD_PLAN_AMT10}
             , PLAN_QTY11       = #{PLAN_QTY11}
             , PLAN_AMT11       = #{PLAN_AMT11}
             , MOD_PLAN_Q11     = #{MOD_PLAN_Q11}
             , MOD_PLAN_AMT11   = #{MOD_PLAN_AMT11}
             , PLAN_QTY12       = #{PLAN_QTY12}
             , PLAN_AMT12       = #{PLAN_AMT12}
             , MOD_PLAN_Q12     = #{MOD_PLAN_Q12}
             , MOD_PLAN_AMT12   = #{MOD_PLAN_AMT12}
             , UPDATE_DB_USER   = #{S_USER_ID}
             , UPDATE_DB_TIME   = GETDATE()

         WHERE DIV_CODE         = #{DIV_CODE}
           AND PLAN_YEAR        = #{PLAN_YEAR}
           AND PLAN_TYPE1       = #{PLAN_TYPE1}
           AND PLAN_TYPE2       = #{PLAN_TYPE2}
           AND LEVEL_KIND       = #{LEVEL_KIND}
           AND MONEY_UNIT       = #{MONEY_UNIT}
           AND PLAN_TYPE2_CODE  = #{PLAN_TYPE2_CODE}
           AND PLAN_TYPE2_CODE2 = #{PLAN_TYPE2_CODE2}
           AND COMP_CODE        = #{S_COMP_CODE}
           AND DEPT_CODE        = #{DEPT_CODE}
    </update>

    <delete id="s_sgp100ukrv_kdService.deleteDetail" parameterType="Map">
        DELETE FROM S_SSP100T_KD
         WHERE DIV_CODE         = #{DIV_CODE}
           AND PLAN_YEAR        = #{PLAN_YEAR}
           AND PLAN_TYPE1       = #{PLAN_TYPE1}
           AND PLAN_TYPE2       = #{PLAN_TYPE2}
           AND LEVEL_KIND       = #{LEVEL_KIND}
           AND MONEY_UNIT       = #{MONEY_UNIT}
           AND PLAN_TYPE2_CODE  = #{PLAN_TYPE2_CODE}
           AND PLAN_TYPE2_CODE2 = #{PLAN_TYPE2_CODE2}
           AND COMP_CODE        = #{S_COMP_CODE}
           AND DEPT_CODE        = #{DEPT_CODE}
    </delete>

    <select id="s_sgp100ukrv_kdService.confirmDataSelect" parameterType="Map" resultType="rMap">
        --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100nUpt] Query20
        SELECT CONFIRM_YN
          FROM S_SSP100T_KD
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND PLAN_YEAR       = #{PLAN_YEAR}
           AND PLAN_TYPE1      = #{PLAN_TYPE1}
           AND PLAN_TYPE2      = #{PLAN_TYPE2}
           AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
           AND PLAN_TYPE2_CODE2 = #{PLAN_TYPE2_CODE2}
           AND LEVEL_KIND      = #{LEVEL_KIND}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND DEPT_CODE        = #{DEPT_CODE}

    </select>

    <update id="s_sgp100ukrv_kdService.confirmDataList" parameterType="Map">
        --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100nUpt] Query21
        UPDATE S_SSP100T_KD
           SET CONFIRM_YN = 'Y'
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND DIV_CODE   = #{DIV_CODE}
           AND PLAN_YEAR  = #{PLAN_YEAR}
           AND PLAN_TYPE1 = #{PLAN_TYPE1}
           AND PLAN_TYPE2 = #{PLAN_TYPE2}
           AND LEVEL_KIND = #{LEVEL_KIND}
           AND MONEY_UNIT = #{MONEY_UNIT}
           AND DEPT_CODE  = #{DEPT_CODE}
        <if test="TAB == &quot;CUSTOM&quot;">
           AND ISNULL(PLAN_TYPE2_CODE,'') = ''
        </if>
        <if test="TAB == &quot;ITEM&quot;">
          AND ISNULL(PLAN_TYPE2_CODE,'') != ''
        </if>
    </update>

    <select id="s_sgp100ukrv_kdService.cancleDataSelect" parameterType="Map" resultType="rMap">
        --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100nCancel] Query22
        SELECT ISNULL(CONFIRM_YN,'N') AS CONFIRM_YN
          FROM S_SSP100T_KD
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND PLAN_YEAR       = #{PLAN_YEAR}
           AND PLAN_TYPE1      = #{PLAN_TYPE1}
           AND PLAN_TYPE2      = #{PLAN_TYPE2}
           AND PLAN_TYPE2_CODE = #{PLAN_TYPE2_CODE}
           AND LEVEL_KIND      = #{LEVEL_KIND}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND DEPT_CODE       = #{DEPT_CODE}
    </select>

    <update id="s_sgp100ukrv_kdService.cancleDataList" parameterType="Map">
        --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100nCancel] Query23
        UPDATE S_SSP100T_KD
           SET CONFIRM_YN = 'N'
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND DIV_CODE   = #{DIV_CODE}
           AND PLAN_YEAR  = #{PLAN_YEAR}
           AND PLAN_TYPE1 = #{PLAN_TYPE1}
           AND PLAN_TYPE2 = #{PLAN_TYPE2}
           AND LEVEL_KIND = #{LEVEL_KIND}
           AND MONEY_UNIT = #{MONEY_UNIT}
           AND DEPT_CODE  = #{DEPT_CODE}

        <if test="TAB == &quot;CUSTOM&quot;">
          AND ISNULL(PLAN_TYPE2_CODE,'') = ''
        </if>
        <if test="TAB == &quot;ITEM&quot;">
           AND ISNULL(PLAN_TYPE2_CODE,'') !=  ''
        </if>
    </update>

    <select id="s_sgp100ukrv_kdService.creatDataList" parameterType="Map" resultType="rMap">
        <if test="TAB == &quot;CUSTOM&quot; || TAB == &quot;PERSON&quot; || TAB == &quot;CUSTOMMODEL&quot;">
            --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100NQ] Query9
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
            SELECT DIV_CODE
              FROM S_SSP100T_KD
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND DIV_CODE   = #{DIV_CODE}
               AND PLAN_YEAR  = #{PLAN_YEAR}
               AND PLAN_TYPE1 = #{ORDER_TYPE}
               AND MONEY_UNIT = #{MONEY_UNIT}
               AND DEPT_CODE  = #{DEPT_CODE}
             <if test="TAB == &quot;CUSTOM&quot;">
               AND PLAN_TYPE2 = '2'
               AND PLAN_TYPE2_CODE IN (SELECT CUSTOM_CODE
                                         FROM BCM100T
                                        WHERE AGENT_TYPE = #{AGENT_TYPE}
                                          AND COMP_CODE  = #{S_COMP_CODE})
             </if>
             <if test="TAB == &quot;PERSON&quot;">
             	AND PLAN_TYPE2 = '1'
             </if>
             <if test="TAB == &quot;CUSTOMMODEL&quot;">
                AND PLAN_TYPE2 = '6'
             </if>
	     </if>
	</select>

	<select id="s_sgp100ukrv_kdService.creatCustomerItemDataList" parameterType="Map" resultType="rMap">
        --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnsgp100NQ] Query11
        SELECT ''                                                                     AS DIV_CODE
             , ''                                                                     AS PLAN_YEAR
             , ''                                                                     AS PLAN_TYPE1
             , ''                                                                     AS PLAN_TYPE2
        <if test="ITEM_CHK == &quot;N&quot;">
             , '6'                                                                    AS PLAN_TYPE2
        </if>
        <if test="ITEM_CHK == &quot;Y&quot;">
             , '2'                                                                    AS PLAN_TYPE2
        </if>
             , ''                                                                     AS LEVEL_KIND
             , ''                                                                     AS MONEY_UNIT
             , ''                                                                     AS ENT_MONEY_UNIT
             , 'N'                                                                    AS CONFIRM_YN
             , CUSTOM_CODE                                                            AS CUSTOM_CODE
             , uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, CUSTOM_CODE)      AS CUSTOM_NAME
             , ''                                                                     AS ITEM_CODE
             , ''                                                                     AS ITEM_NAME
             , ''                                                                     AS SPEC
             , ''                                                                     AS OEM_ITEM_CODE
             , ''                                                                     AS PLAN_TYPE2_CODE
             , ''                                                                     AS PLAN_TYPE2_CODE2
             , ''                                                                     AS SALE_BASIS_P
             , 0                                                                      AS PLAN_SUM_Q
             , 0                                                                      AS PLAN_SUM_AMT
             , 0                                                                      AS MOD_PLAN_SUM_Q
             , 0                                                                      AS MOD_PLAN_SUM_AMT
             , 0                                                                      AS PLAN_QTY1
             , 0                                                                      AS PLAN_AMT1
             , 0                                                                      AS MOD_PLAN_Q1
             , 0                                                                      AS MOD_PLAN_AMT1
             , 0                                                                      AS PLAN_QTY2
             , 0                                                                      AS PLAN_AMT2
             , 0                                                                      AS MOD_PLAN_Q2
             , 0                                                                      AS MOD_PLAN_AMT2
             , 0                                                                      AS PLAN_QTY3
             , 0                                                                      AS PLAN_AMT3
             , 0                                                                      AS MOD_PLAN_Q3
             , 0                                                                      AS MOD_PLAN_AMT3
             , 0                                                                      AS PLAN_QTY4
             , 0                                                                      AS PLAN_AMT4
             , 0                                                                      AS MOD_PLAN_Q4
             , 0                                                                      AS MOD_PLAN_AMT4
             , 0                                                                      AS PLAN_QTY5
             , 0                                                                      AS PLAN_AMT5
             , 0                                                                      AS MOD_PLAN_Q5
             , 0                                                                      AS MOD_PLAN_AMT5
             , 0                                                                      AS PLAN_QTY6
             , 0                                                                      AS PLAN_AMT6
             , 0                                                                      AS MOD_PLAN_Q6
             , 0                                                                      AS MOD_PLAN_AMT6
             , 0                                                                      AS PLAN_QTY7
             , 0                                                                      AS PLAN_AMT7
             , 0                                                                      AS MOD_PLAN_Q7
             , 0                                                                      AS MOD_PLAN_AMT7
             , 0                                                                      AS PLAN_QTY8
             , 0                                                                      AS PLAN_AMT8
             , 0                                                                      AS MOD_PLAN_Q8
             , 0                                                                      AS MOD_PLAN_AMT8
             , 0                                                                      AS PLAN_QTY9
             , 0                                                                      AS PLAN_AMT9
             , 0                                                                      AS MOD_PLAN_Q9
             , 0                                                                      AS MOD_PLAN_AMT9
             , 0                                                                      AS PLAN_QTY10
             , 0                                                                      AS PLAN_AMT10
             , 0                                                                      AS MOD_PLAN_Q10
             , 0                                                                      AS MOD_PLAN_AMT10
             , 0                                                                      AS PLAN_QTY11
             , 0                                                                      AS PLAN_AMT11
             , 0                                                                      AS MOD_PLAN_Q11
             , 0                                                                      AS MOD_PLAN_AMT11
             , 0                                                                      AS PLAN_QTY12
             , 0                                                                      AS PLAN_AMT12
             , 0                                                                      AS MOD_PLAN_Q12
             , 0                                                                      AS MOD_PLAN_AMT12
             , ''                                                                     AS UPDATE_DB_USER
             , CONVERT(SMALLDATETIME, GETDATE())                                      AS UPDATE_DB_TIME
             , ''                                                                     AS COMP_CODE
          FROM BCM100T
         WHERE CUSTOM_TYPE IN ('1','3')
           AND COMP_CODE = #{S_COMP_CODE}
           AND USE_YN = 'Y'
          <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
           AND AGENT_TYPE = #{AGENT_TYPE}
          </if>
         ORDER BY CUSTOM_CODE
    </select>

    <select id="s_sgp100ukrv_kdService.beforeDelete" parameterType="Map" resultType="rMap">
	   --s_sgp100ukrv_kd.Cs_sgp100ukrv_kd[fnSgp100Save] Query19
        SELECT CONFIRM_YN
          FROM S_SSP100T_KD
         WHERE COMP_CODE        = #{S_COMP_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND PLAN_YEAR        = #{PLAN_YEAR}
           AND PLAN_TYPE1       = #{PLAN_TYPE1}
           AND PLAN_TYPE2       = #{PLAN_TYPE2}
           AND PLAN_TYPE2_CODE  = #{PLAN_TYPE2_CODE}
           AND LEVEL_KIND       = #{LEVEL_KIND}
           AND MONEY_UNIT       = #{MONEY_UNIT}
           AND PLAN_TYPE2_CODE2 = #{PLAN_TYPE2_CODE2}
           AND DEPT_CODE        = #{DEPT_CODE}
	</select>

	<select id="s_sgp100ukrv_kdService.checkCompCode" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE, A.COMP_NAME
        FROM              BOR100T   A  WITH (NOLOCK)
               LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
                                                    AND M1.MAIN_CODE    = 'B107'
                                                    AND M1.SUB_CODE     = '20'
        WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
               OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
    </select>

    <select id="s_sgp100ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
    SELECT    A.DIV_CODE
         , A.FLAG
         , A.PLAN_YEAR
         , A.PLAN_TYPE1
         , A.PLAN_TYPE2
         , A.LEVEL_KIND
         , A.MONEY_UNIT
         , A.ENT_MONEY_UNIT
         , A.CONFIRM_YN
         , B.CUSTOM_CODE AS CUSTOM_CODE
         , uniLITE.fnCustNameComp(B.COMP_CODE, #{S_USER_ID}, B.CUSTOM_CODE) AS CUSTOM_NAME
         , C.ITEM_CODE
         , C.ITEM_NAME
         , C.SPEC
         , C.OEM_ITEM_CODE
         , A.PLAN_TYPE2_CODE
         , A.PLAN_TYPE2_CODE2
         , ISNULL(C.SALE_BASIS_P,0) As SALE_BASIS_P ,--sgp100ukrv.Csgp100ukrv[fnsgp100ItemQ]Query14
             ISNULL(A.PLAN_QTY1,0) + ISNULL(A.PLAN_QTY2,0) + ISNULL(A.PLAN_QTY3,0) + ISNULL(A.PLAN_QTY4,0) + ISNULL(A.PLAN_QTY5,0) + ISNULL(A.PLAN_QTY6,0) + ISNULL(A.PLAN_QTY7,0) + ISNULL(A.PLAN_QTY8,0) + ISNULL(A.PLAN_QTY9,0) + ISNULL(A.PLAN_QTY10,0) + ISNULL(A.PLAN_QTY11,0) + ISNULL(A.PLAN_QTY12,0)  AS PLAN_SUM_Q,
             ISNULL(A.PLAN_AMT1,0) + ISNULL(A.PLAN_AMT2,0) + ISNULL(A.PLAN_AMT3,0) + ISNULL(A.PLAN_AMT4,0) + ISNULL(A.PLAN_AMT5,0) + ISNULL(A.PLAN_AMT6,0) + ISNULL(A.PLAN_AMT7,0) + ISNULL(A.PLAN_AMT8,0) + ISNULL(A.PLAN_AMT9,0) + ISNULL(A.PLAN_AMT10,0) + ISNULL(A.PLAN_AMT11,0) + ISNULL(A.PLAN_AMT12,0)  AS PLAN_SUM_AMT,
             ISNULL(A.MOD_PLAN_Q1,0) + ISNULL(A.MOD_PLAN_Q2,0) + ISNULL(A.MOD_PLAN_Q3,0) + ISNULL(A.MOD_PLAN_Q4,0) + ISNULL(A.MOD_PLAN_Q5,0) + ISNULL(A.MOD_PLAN_Q6,0) + ISNULL(A.MOD_PLAN_Q7,0) + ISNULL(A.MOD_PLAN_Q8,0) + ISNULL(A.MOD_PLAN_Q9,0) + ISNULL(A.MOD_PLAN_Q10,0) + ISNULL(A.MOD_PLAN_Q11,0) + ISNULL(A.MOD_PLAN_Q12,0)  AS MOD_PLAN_SUM_Q,
             ISNULL(A.MOD_PLAN_AMT1,0) + ISNULL(A.MOD_PLAN_AMT2,0) + ISNULL(A.MOD_PLAN_AMT3,0) + ISNULL(A.MOD_PLAN_AMT4,0) + ISNULL(A.MOD_PLAN_AMT5,0) + ISNULL(A.MOD_PLAN_AMT6,0) + ISNULL(A.MOD_PLAN_AMT7,0) + ISNULL(A.MOD_PLAN_AMT8,0) + ISNULL(A.MOD_PLAN_AMT9,0) + ISNULL(A.MOD_PLAN_AMT10,0) + ISNULL(A.MOD_PLAN_AMT11,0) + ISNULL(A.MOD_PLAN_AMT12,0)  AS MOD_PLAN_SUM_AMT,
            ISNULL(A.PLAN_QTY1,0) AS PLAN_QTY1,
            ISNULL(A.PLAN_AMT1,0) AS PLAN_AMT1,
            ISNULL(A.MOD_PLAN_Q1,0) AS MOD_PLAN_Q1,
            ISNULL(A.MOD_PLAN_AMT1,0) AS MOD_PLAN_AMT1,
            ISNULL(A.PLAN_QTY2,0) AS PLAN_QTY2,
            ISNULL(A.PLAN_AMT2,0) AS PLAN_AMT2,
            ISNULL(A.MOD_PLAN_Q2,0) AS MOD_PLAN_Q2,
            ISNULL(A.MOD_PLAN_AMT2,0) AS MOD_PLAN_AMT2,
            ISNULL(A.PLAN_QTY3,0) AS PLAN_QTY3,
            ISNULL(A.PLAN_AMT3,0) AS PLAN_AMT3,
            ISNULL(A.MOD_PLAN_Q3,0) AS MOD_PLAN_Q3,
            ISNULL(A.MOD_PLAN_AMT3,0) AS MOD_PLAN_AMT3,
            ISNULL(A.PLAN_QTY4,0) AS PLAN_QTY4,
            ISNULL(A.PLAN_AMT4,0) AS PLAN_AMT4,
            ISNULL(A.MOD_PLAN_Q4,0) AS MOD_PLAN_Q4,
            ISNULL(A.MOD_PLAN_AMT4,0) AS MOD_PLAN_AMT4,
            ISNULL(A.PLAN_QTY5,0) AS PLAN_QTY5,
            ISNULL(A.PLAN_AMT5,0) AS PLAN_AMT5,
            ISNULL(A.MOD_PLAN_Q5,0) AS MOD_PLAN_Q5,
            ISNULL(A.MOD_PLAN_AMT5,0) AS MOD_PLAN_AMT5,
            ISNULL(A.PLAN_QTY6,0) AS PLAN_QTY6,
            ISNULL(A.PLAN_AMT6,0) AS PLAN_AMT6,
            ISNULL(A.MOD_PLAN_Q6,0) AS MOD_PLAN_Q6,
            ISNULL(A.MOD_PLAN_AMT6,0) AS MOD_PLAN_AMT6,
            ISNULL(A.PLAN_QTY7,0) AS PLAN_QTY7,
            ISNULL(A.PLAN_AMT7,0) AS PLAN_AMT7,
            ISNULL(A.MOD_PLAN_Q7,0) AS MOD_PLAN_Q7,
            ISNULL(A.MOD_PLAN_AMT7,0) AS MOD_PLAN_AMT7,
            ISNULL(A.PLAN_QTY8,0) AS PLAN_QTY8,
            ISNULL(A.PLAN_AMT8,0) AS PLAN_AMT8,
            ISNULL(A.MOD_PLAN_Q8,0) AS MOD_PLAN_Q8,
            ISNULL(A.MOD_PLAN_AMT8,0) AS MOD_PLAN_AMT8,
            ISNULL(A.PLAN_QTY9,0) AS PLAN_QTY9,
            ISNULL(A.PLAN_AMT9,0) AS PLAN_AMT9,
            ISNULL(A.MOD_PLAN_Q9,0) AS MOD_PLAN_Q9,
            ISNULL(A.MOD_PLAN_AMT9,0) AS MOD_PLAN_AMT9,
            ISNULL(A.PLAN_QTY10,0) AS PLAN_QTY10,
            ISNULL(A.PLAN_AMT10,0) AS PLAN_AMT10,
            ISNULL(A.MOD_PLAN_Q10,0) AS MOD_PLAN_Q10,
            ISNULL(A.MOD_PLAN_AMT10,0) AS MOD_PLAN_AMT10,
            ISNULL(A.PLAN_QTY11,0) AS PLAN_QTY11,
            ISNULL(A.PLAN_AMT11,0) AS PLAN_AMT11,
            ISNULL(A.MOD_PLAN_Q11,0) AS MOD_PLAN_Q11,
            ISNULL(A.MOD_PLAN_AMT11,0) AS MOD_PLAN_AMT11,
            ISNULL(A.PLAN_QTY12,0) AS PLAN_QTY12,
            ISNULL(A.PLAN_AMT12,0) AS PLAN_AMT12,
            ISNULL(A.MOD_PLAN_Q12,0) AS MOD_PLAN_Q12,
            ISNULL(A.MOD_PLAN_AMT12,0) AS MOD_PLAN_AMT12,
                    A.INSERT_DB_USER,
                    A.INSERT_DB_TIME,
                    A.UPDATE_DB_USER,
                    A.UPDATE_DB_TIME,
                    A.COMP_CODE
      FROM SSP100T_LOG A
                   LEFT  JOIN  BCM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                      AND A.PLAN_TYPE2_CODE2 = B.CUSTOM_CODE
                                                      AND B.USE_YN = 'Y'
                                                      AND B.CUSTOM_TYPE IN ('1','3')
                   LEFT  JOIN  (SELECT    AA.COMP_CODE
                                     , AA.ITEM_CODE
                                     , AA.OEM_ITEM_CODE
                                     , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID},AA.ITEM_CODE) AS ITEM_NAME
                                     , AA.SALE_BASIS_P
                                     , AA.USE_YN
                                     , BB.ITEM_ACCOUNT
                                     , AA.SPEC
                                  FROM BPR100T AA WITH (NOLOCK)
                                     , BPR200T BB WITH (NOLOCK)
                                 WHERE AA.ITEM_CODE = BB.ITEM_CODE
                                   AND BB.DIV_CODE   = N'01'
                                   AND AA.COMP_CODE = BB.COMP_CODE ) C ON A.COMP_CODE = C.COMP_CODE
                                                                             AND A.PLAN_TYPE2_CODE  = C.ITEM_CODE
                                                                             AND C.USE_YN           = 'Y'
     WHERE A.COMP_CODE        = #{S_COMP_CODE}
        <if test="ITEM_CHK == &quot;N&quot;">
       AND A.PLAN_TYPE2       = '6'
        </if>
        <if test="ITEM_CHK == &quot;Y&quot;">
       AND A.PLAN_TYPE2       = '2'
        </if>
       AND B.AGENT_TYPE       = #{AGENT_TYPE}
       AND A.DIV_CODE         = #{DIV_CODE}
       AND A.PLAN_YEAR        = #{PLAN_YEAR}
       AND A.PLAN_TYPE1       = #{ORDER_TYPE}
       AND A.MONEY_UNIT       = #{MONEY_UNIT}
       AND A.PLAN_TYPE2_CODE  = #{PLAN_TYPE2_CODE}
       AND A.PLAN_TYPE2_CODE2 = #{PLAN_TYPE2_CODE2}
       AND A.DEPT_CODE        = #{DEPT_CODE}

     ORDER BY CUSTOM_CODE

    </select>


    <select id="s_sgp100ukrv_kdService.selectSsgp100ukrvkdChk" parameterType="Map" resultType="rMap">
			IF EXISTS (
								SELECT TOP 1 1
							 	FROM BPR100T WITH (NOLOCK)
							 	WHERE COMP_CODE=#{COMP_CODE}
											AND  ITEM_CODE=#{ITEM_CODE}
							 				AND  MAKE_STOP_YN = 'Y'
							 )
			BEGIN
			 		SELECT '56407;생산이 중단된 품목입니다.' + #{ITEM_CODE} AS ERROR_DESC
			END
			ELSE
			BEGIN
			 	SELECT '' AS ERROR_DESC
			END
	</select>





</mapper>