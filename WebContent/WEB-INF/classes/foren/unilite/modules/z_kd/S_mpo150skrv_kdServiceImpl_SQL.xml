<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mpo150skrv_kdServiceImpl">

    <select id="s_mpo150skrv_kdServiceImpl.getUserMailInfo" parameterType="Map" resultType="rMap">
    	SELECT  SUB_CODE 		AS USER_NAME
    	      , CODE_NAME 		AS EMAIL_ADDR
    	      --, uniLITE.fnCipherDecrypt(EMAIL_PASS,'')   AS EMAIL_PASS
    	 FROM  BSA100T WITH (NOLOCK)
    	WHERE COMP_CODE = #{S_COMP_CODE}
    	  AND SUB_CODE  != '$'
    	  AND MAIN_CODE = N'M416'
    </select>

	<select id="s_mpo150skrv_kdServiceImpl.selectList" parameterType="Map" resultType="rMap">
        /*s_mpo150skrv_kd.Cs_mpo150skrv_kd[fnMpo150QStd]query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                  , @MAIL_FORM   NVARCHAR(10)

        	SET @CompCode = #{S_COMP_CODE}
        	SET @MAIL_FORM = #{MAIL_FORMAT}
      		IF @MAIL_FORM = 'E'
      		BEGIN
      			SET LANGUAGE ENGLISH
      		END        	

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */

            SELECT
               CAST(0 AS BIT)          AS CHOICE         /*선택*/
             , A.MAIL_YN
             , A.AGREE_STATUS          AS AGREE_STATUS_CD
             , F.CODE_NAME             AS AGREE_STATUS_NM
			 , '2'                     AS CREATE_LOC
             , A.ORDER_NUM             AS ORDER_NUM

             , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
                THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
                       , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
                       , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
                    END)                AS ORDER_DATE
             , C.CUSTOM_NAME         AS CUSTOM_NAME
             , CASE WHEN @MAIL_FORM='K' THEN D.CODE_NAME ELSE D.CODE_NAME_EN END          AS ORDER_PRSN
             , E.CODE_NAME           AS ORDER_TYPE
             , SUM(B.ORDER_O)        AS ORDER_O
             , A.MONEY_UNIT          AS MONEY_UNIT
             , A.EXCHG_RATE_O        AS EXCHG_RATE_O
             , H.CODE_NAME           AS RECEIPT_TYPE
             , A.REMARK              AS REMARK
             , A.LC_NUM              AS LC_NUM
             , A.PROJECT_NO          AS PROJECT_NO
             , C2.PRSN_NAME          AS CUST_PRSN_NAME
             , C2.MAIL_ID            AS CUST_MAIL_ID
             , A.DIV_CODE
             , A.CUSTOM_CODE
			 , MAX(I.CODE_NAME )    AS KOR_FROM
			 , MAX(J.CODE_NAME  )   AS ENG_FROM
			 , MAX(D.REF_CODE5 )  AS ORDER_PRSN_DEPT
			 , LEFT(DATENAME(MM, A.ORDER_DATE),3) + ' '+ DATENAME(DD, A.ORDER_DATE) + ' '+ DATENAME(YY, A.ORDER_DATE) AS EN_ORDER_DATE
          FROM MPO100T A WITH (NOLOCK)
                       INNER JOIN MPO200T B WITH (NOLOCK)
                               ON A.COMP_CODE = B.COMP_CODE
                              AND A.ORDER_NUM = B.ORDER_NUM
                        LEFT JOIN BCM100T C WITH (NOLOCK)
                               ON A.COMP_CODE   = C.COMP_CODE
                              AND A.CUSTOM_CODE = C.CUSTOM_CODE
                        LEFT JOIN (
                                        SELECT COMP_CODE, CUSTOM_CODE, PRSN_NAME, MAIL_ID, SEQ
                                        FROM BCM120T A WITH (NOLOCK)
                                        WHERE COMP_CODE=@CompCode
                                        AND MAIN_BILL_YN='Y'
                                        AND SEQ = (SELECT MIN(SEQ) FROM BCM120T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND CUSTOM_CODE=A.CUSTOM_CODE)
                                  ) C2
                               ON C.COMP_CODE   = C2.COMP_CODE
                              AND C.CUSTOM_CODE = C2.CUSTOM_CODE
                        LEFT JOIN BSA100T D WITH (NOLOCK)
                               ON D.MAIN_CODE   = N'M201'
                              AND A.ORDER_PRSN  = D.SUB_CODE
                              AND A.COMP_CODE   = D.COMP_CODE
                        LEFT JOIN BSA100T E WITH (NOLOCK)
                               ON E.MAIN_CODE   = N'M001'
                              AND A.ORDER_TYPE  = E.SUB_CODE
                              AND A.COMP_CODE   = E.COMP_CODE
                        LEFT JOIN BSA100T F WITH (NOLOCK)
                               ON F.MAIN_CODE     = N'M007'
                              AND A.AGREE_STATUS  = F.SUB_CODE
                              AND A.COMP_CODE     = F.COMP_CODE
                        LEFT JOIN BSA100T G WITH (NOLOCK)
                               ON G.MAIN_CODE            = N'J013'
                              AND ISNULL(A.MAIL_YN, '2') = G.SUB_CODE
                              AND A.COMP_CODE            = G.COMP_CODE
                        LEFT JOIN BSA100T H WITH (NOLOCK)
                               ON H.MAIN_CODE            = N'B038'
                              AND A.RECEIPT_TYPE         = H.SUB_CODE
                              AND A.COMP_CODE            = H.COMP_CODE
					 LEFT JOIN BSA100T I WITH (NOLOCK)
                        ON I.MAIN_CODE            = N'Z002'
                        AND I.SUB_CODE			  = 'K'
                        AND A.COMP_CODE            = I.COMP_CODE
						   LEFT JOIN BSA100T J WITH (NOLOCK)
                        ON J.MAIN_CODE            = N'Z002'
                        AND J.SUB_CODE			  = 'E'
                        AND A.COMP_CODE            = J.COMP_CODE
         WHERE A.ORDER_TYPE     != N'4'                /*조회조건이 아님*/

           AND A.COMP_CODE       = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND A.DIV_CODE        = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
            AND A.ORDER_DATE     &gt;= #{ORDER_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
            AND A.ORDER_DATE     &lt;= #{ORDER_DATE_TO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND A.CUSTOM_CODE  LIKE #{CUSTOM_CODE}+ '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
            AND C.CUSTOM_NAME  LIKE #{CUSTOM_NAME}+ '%'
            </if>
            <if test="MAIL_YN == &quot;2&quot;">
            AND ISNULL(A.MAIL_YN, '2')  = 'N'       /*재전송포함하지 않음인 경우/재전송포함인 경우는 조회조건 필요없음*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
            AND A.ORDER_PRSN      = #{ORDER_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
            AND #{CREATE_LOC} = '2'
            </if>

         GROUP BY A.ORDER_NUM, G.CODE_NAME, A.AGREE_STATUS, F.CODE_NAME, A.COMP_CODE , A.ORDER_DATE  , C.CUSTOM_NAME
                , CASE WHEN @MAIL_FORM='K' THEN D.CODE_NAME ELSE D.CODE_NAME_EN END, E.CODE_NAME, H.CODE_NAME, A.MONEY_UNIT, A.EXCHG_RATE_O, A.RECEIPT_TYPE
                , A.REMARK      , A.LC_NUM    , A.PROJECT_NO, A.MAIL_YN,  C2.PRSN_NAME, C2.MAIL_ID, A.DIV_CODE
                , A.CUSTOM_CODE

UNION ALL

        SELECT
               CAST(0 AS BIT)               AS CHOICE         /*선택*/
             , MAX(A.MAIL_YN)               AS MAIL_YN
             , MAX(A.AGREE_STATUS)          AS AGREE_STATUS_CD
             , MAX(F.CODE_NAME)             AS AGREE_STATUS_NM
			 , '6'                          AS CREATE_LOC
             , A.SO_SER_NO                  AS ORDER_NUM
             , MAX(CASE WHEN ISNULL(A.DATE_DEPART, '') = ''
                THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DATE_DEPART, 1, 4))
                       , 'MM'  , SUBSTRING(A.DATE_DEPART, 5, 2))
                       , 'DD'  , SUBSTRING(A.DATE_DEPART, 7, 2)) END) AS ORDER_DATE
             , MAX(C.CUSTOM_NAME)          AS CUSTOM_NAME
--             , MAX(D.CODE_NAME)            AS ORDER_PRSN
             , MAX(CASE WHEN @MAIL_FORM='K' THEN D.CODE_NAME ELSE D.CODE_NAME_EN END) AS ORDER_PRSN             
             , ''                          AS ORDER_TYPE
             , SUM(B.SO_AMT)               AS ORDER_O
             , MAX(A.AMT_UNIT)             AS MONEY_UNIT
             , MAX(A.EXCHANGE_RATE)        AS EXCHG_RATE_O
             , MAX(E.CODE_NAME)            AS RECEIPT_TYPE
             , MAX(A.FREE_TXT1)            AS REMARK
             , ''                          AS LC_NUM
             , MAX(A.PROJECT_NO)           AS PROJECT_NO
             , MAX(C2.PRSN_NAME)           AS CUST_PRSN_NAME
             , MAX(C2.MAIL_ID)             AS CUST_MAIL_ID
             , MAX(A.DIV_CODE)             AS DIV_CODE
             , MAX(A.EXPORTER)             AS CUSTOM_CODE
		     , MAX( I.CODE_NAME)  AS KOR_FROM
			 , MAX( J.CODE_NAME)  AS ENG_FROM
			 , MAX( D.REF_CODE5)  AS ORDER_PRSN_DEPT
			 , MAX(LEFT(DATENAME(MM, A.DATE_DEPART),3) + ' '+ DATENAME(DD, A.DATE_DEPART) + ' '+ DATENAME(YY, A.DATE_DEPART)) AS EN_ORDER_DATE			 
      FROM       TIA100T A WITH(NOLOCK)
      INNER JOIN TIA110T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                  AND A.DIV_CODE    = B.DIV_CODE
                                  AND A.SO_SER_NO   = B.SO_SER_NO
      INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                     AND C.CUSTOM_CODE = A.EXPORTER
/*                                     
      LEFT  JOIN BCM120T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                                         AND C2.CUSTOM_CODE = A.EXPORTER
*/
      LEFT JOIN (
                      SELECT COMP_CODE, CUSTOM_CODE, PRSN_NAME, MAIL_ID, SEQ
                      FROM BCM120T A WITH (NOLOCK)
                      WHERE COMP_CODE=@CompCode
                      AND MAIN_BILL_YN='Y'
                      AND SEQ = (SELECT MIN(SEQ) FROM BCM120T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND CUSTOM_CODE=A.CUSTOM_CODE)
                ) C2
             ON A.COMP_CODE   = C2.COMP_CODE
            AND A.EXPORTER    = C2.CUSTOM_CODE
                                                     
                                         
      LEFT  JOIN BSA100T D WITH(NOLOCK) ON D.MAIN_CODE   = N'M201'
                                  AND A.IMPORT_NM   = D.SUB_CODE
                                  AND A.COMP_CODE   = D.COMP_CODE
      LEFT  JOIN BSA100T E WITH(NOLOCK) ON E.MAIN_CODE  = N'T016'
                                  AND A.PAY_METHODE = E.SUB_CODE
                                  AND A.COMP_CODE   = E.COMP_CODE
      LEFT  JOIN BSA100T F WITH(NOLOCK) ON F.MAIN_CODE    = N'M007'
                                  AND A.AGREE_STATUS = F.SUB_CODE
                                  AND A.COMP_CODE    = F.COMP_CODE
      LEFT  JOIN BSA100T G WITH(NOLOCK) ON G.MAIN_CODE    = N'J013'
                                  AND ISNULL('', '2') = G.SUB_CODE
                                  AND A.COMP_CODE     = G.COMP_CODE
     LEFT JOIN BSA100T I WITH (NOLOCK)
                        ON I.MAIN_CODE            = N'Z002'
                        AND I.SUB_CODE			  = 'K'
                        AND A.COMP_CODE            = I.COMP_CODE
      LEFT JOIN BSA100T J WITH (NOLOCK)
                        ON J.MAIN_CODE            = N'Z002'
                        AND J.SUB_CODE			  = 'E'
                        AND A.COMP_CODE            = J.COMP_CODE
      WHERE A.COMP_CODE       = @CompCode
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND A.DIV_CODE        = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
        AND A.DATE_DEPART     &gt;= #{ORDER_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
        AND A.DATE_DEPART     &lt;= #{ORDER_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
        AND A.EXPORTER  LIKE #{CUSTOM_CODE}+ '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
        AND C.CUSTOM_NAME  LIKE #{CUSTOM_NAME}+ '%'
        </if>
        <if test="MAIL_YN == &quot;2&quot;">
        AND ISNULL(A.MAIL_YN, '2')  = 'N'       /*재전송포함하지 않음인 경우/재전송포함인 경우는 조회조건 필요없음*/
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
        AND A.IMPORT_NM      = #{ORDER_PRSN}
        </if>

        <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
        AND #{CREATE_LOC} = '6'
        </if>

     GROUP BY A.SO_SER_NO

     SET NOCOUNT OFF
     SET ARITHABORT OFF
     SET LANGUAGE KOREAN

    END

    </select>


    <select id="s_mpo150skrv_kdServiceImpl.selectList2" parameterType="Map" resultType="rMap">
        --s_mpo150skrv_kd.Cs_mpo150skrv_kd[fnMpo150QStd1]query02
        DECLARE @MAIL_FORM NVARCHAR(10)
        
        	SET @MAIL_FORM = #{MAIL_FORMAT}        
    		IF @MAIL_FORM = 'E'
    		BEGIN
    			SET LANGUAGE ENGLISH
    		END        	   
        SELECT
               A.ORDER_SEQ        AS ORDER_SEQ
             , A.ITEM_CODE        AS ITEM_CODE
             , B.ITEM_NAME        AS ITEM_NAME
             , B.SPEC             AS SPEC
             , B.STOCK_UNIT       AS STOCK_UNIT
             , A.ORDER_UNIT_Q     AS ORDER_UNIT_Q
             , A.ORDER_UNIT       AS ORDER_UNIT
             , E.CODE_NAME        AS UNIT_PRICE_TYPE
             , A.ORDER_UNIT_P     AS ORDER_UNIT_P
             , A.ORDER_O          AS ORDER_O
             , A.DVRY_DATE        AS DVRY_DATE
             , F.TREE_NAME        AS WH_CODE
             , A.TRNS_RATE        AS TRNS_RATE
             , A.ORDER_Q          AS ORDER_Q
             , C.CODE_NAME        AS CONTROL_STATUS
             , A.ORDER_REQ_NUM    AS ORDER_REQ_NUM
             , D.CODE_NAME        AS INSPEC_FLAG
             , A.REMARK           AS REMARK
             , LEFT(DATENAME(MM, A.DVRY_DATE),3) + ' '+ DATENAME(DD, A.DVRY_DATE) + ' '+ DATENAME(YY, A.DVRY_DATE) AS EN_DVRY_DATE
          FROM       MPO200T A WITH(NOLOCK)
          INNER JOIN BPR100T B WITH(NOLOCK)ON A.COMP_CODE      = B.COMP_CODE
                                          AND A.ITEM_CODE      = B.ITEM_CODE
          LEFT  JOIN BSA100T C WITH(NOLOCK)ON C.MAIN_CODE      = N'M002'
                                          AND A.CONTROL_STATUS = C.SUB_CODE
                                          AND A.COMP_CODE      = C.COMP_CODE
          LEFT  JOIN BSA100T D WITH(NOLOCK)ON D.MAIN_CODE      = N'Q002'
                                          AND A.INSPEC_FLAG    = D.SUB_CODE
                                          AND A.COMP_CODE      = D.COMP_CODE
          LEFT  JOIN BSA100T E WITH(NOLOCK)ON E.MAIN_CODE      = N'M301'
                                          AND A.UNIT_PRICE_TYPE= E.SUB_CODE
                                          AND A.COMP_CODE      = E.COMP_CODE
          INNER JOIN BSA220T F WITH(NOLOCK)ON A.COMP_CODE      = F.COMP_CODE
                                          AND A.WH_CODE        = F.TREE_CODE
         WHERE #{CREATE_LOC} = '2'
           AND A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.ORDER_NUM   = #{ORDER_NUM}

    UNION ALL

          SELECT
               A.SO_SER           AS ORDER_SEQ
             , A.ITEM_CODE        AS ITEM_CODE
             , B.ITEM_NAME        AS ITEM_NAME
             , B.SPEC             AS SPEC
             , B.STOCK_UNIT       AS STOCK_UNIT
             , A.QTY              AS ORDER_UNIT_Q
             , A.UNIT             AS ORDER_UNIT
             , E.CODE_NAME        AS UNIT_PRICE_TYPE
             , A.PRICE            AS ORDER_UNIT_P
             , A.SO_AMT           AS ORDER_O
             , A.DELIVERY_DATE    AS DVRY_DATE
             , ''                 AS WH_CODE
             , A.TRNS_RATE        AS TRNS_RATE
             , A.STOCK_UNIT_Q     AS ORDER_Q
             , C.CODE_NAME        AS CONTROL_STATUS
             , A.ORDER_REQ_NUM    AS ORDER_REQ_NUM
             , D.CODE_NAME        AS INSPEC_FLAG
             , A.REMARK           AS REMARK
             , LEFT(DATENAME(MM, A.DELIVERY_DATE),3) + ' '+ DATENAME(DD, A.DELIVERY_DATE) + ' '+ DATENAME(YY, A.DELIVERY_DATE) AS EN_DVRY_DATE
          FROM       TIA110T A WITH(NOLOCK)
          INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                           AND A.ITEM_CODE   = B.ITEM_CODE
          LEFT  JOIN BSA100T C WITH(NOLOCK) ON C.MAIN_CODE   = N'T017'
                                           AND A.CLOSE_FLAG  = C.SUB_CODE
                                           AND A.COMP_CODE   = C.COMP_CODE
          LEFT  JOIN BSA100T D WITH(NOLOCK) ON D.MAIN_CODE   = N'Q002'
                                           AND A.INSPEC_FLAG = D.SUB_CODE
                                           AND A.COMP_CODE   = D.COMP_CODE
          LEFT  JOIN BSA100T E WITH(NOLOCK)ON E.MAIN_CODE    = N'M301'
                                          AND 'Y'            = E.SUB_CODE
                                          AND A.COMP_CODE    = E.COMP_CODE
         WHERE #{CREATE_LOC} = '6'
           AND A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
           AND A.SO_SER_NO   = #{ORDER_NUM}
           
      SET LANGUAGE KOREAN
    </select>

    <select id="s_mpo150skrv_kdServiceImpl.selectList_yp" parameterType="Map" resultType="rMap">
        SELECT
               ISNULL(A.ORDER_NUM, '')        AS ORDER_NUM
--             , ISNULL(A.ORDER_SEQ, '')        AS ORDER_SEQ
             , ROW_NUMBER() OVER(ORDER BY A.ITEM_CODE)  AS ORDER_SEQ
             , ISNULL(H.CODE_NAME, '')        AS ORDER_PRSN
             , ISNULL(A2.ORDER_DATE, '')      AS ORDER_DATE
             , ISNULL(I.CUSTOM_NAME, '')      AS CUSTOM_NAME
             , ISNULL(I.TELEPHON, '')          AS CUST_TEL_PHON
             , ISNULL(I.FAX_NUM, '')           AS CUST_FAX_NUM
             , ISNULL(A.ITEM_CODE, '')        AS ITEM_CODE
             , ISNULL(B.ITEM_NAME, '')        AS ITEM_NAME
             , ISNULL(B.SPEC, '')             AS SPEC
             , ISNULL(B.STOCK_UNIT, '')       AS STOCK_UNIT
             , ISNULL(A.ORDER_UNIT_Q, '')     AS ORDER_UNIT_Q
             , ISNULL(A.ORDER_UNIT, '')       AS ORDER_UNIT
             , ISNULL(E.CODE_NAME, '')        AS UNIT_PRICE_TYPE
             , ISNULL(A.ORDER_UNIT_P, 0)     AS ORDER_UNIT_P
             , ISNULL(A.ORDER_O, 0)          AS ORDER_O
             , ISNULL(A.DVRY_DATE, '')        AS DVRY_DATE
             , ISNULL(F.TREE_NAME, '')        AS WH_CODE
             , ISNULL(A.TRNS_RATE, 1)        AS TRNS_RATE
             , ISNULL(A.ORDER_Q, 0)          AS ORDER_Q
             , ISNULL(C.CODE_NAME, '')        AS CONTROL_STATUS
             , ISNULL(A.ORDER_REQ_NUM, '')    AS ORDER_REQ_NUM
             , ISNULL(D.CODE_NAME, '')        AS INSPEC_FLAG
             , ISNULL(A.REMARK, '')           AS REMARK
             , ISNULL(A2.REMARK, '')          AS M_REMARK
             , ISNULL(G.DIV_CODE, '')    AS MY_CUSTOM_CODE      --사업장코드
             , ISNULL(G.DIV_NAME, '')    AS MY_CUSTOM_NAME      --상호
             , ISNULL(G.REPRE_NAME, '')  AS MY_TOP_NAME         --대표자
             , ISNULL(G.COMP_TYPE, '')   AS COMP_TYPE                   --업태
             , ISNULL(G.COMP_CLASS, '')  AS COMP_CLASS                     --종목
             , CASE ISNULL(G.COMPANY_NUM,'')
                 WHEN '' THEN ''
                 ELSE         SUBSTRING(G.COMPANY_NUM,1,3) + '-'
                             + SUBSTRING(G.COMPANY_NUM,4,2) + '-'
                             + SUBSTRING(G.COMPANY_NUM,6,5)
             END          AS MY_COMPANY_NUM          --등록번호
             , G.ZIP_CODE    AS MY_ZIP_CODE          --우편번호
             , G.ADDR AS  MY_ADDR              --주소
             , G.TELEPHON                            --전화번호
             , G.FAX_NUM                             --팩스
          FROM       MPO200T A WITH(NOLOCK)
          INNER JOIN MPO100T A2 WITH (NOLOCK)ON A2.COMP_CODE   = A.COMP_CODE
                                            AND A2.DIV_CODE    = A.DIV_CODE
                                            AND A2.CUSTOM_CODE = A.CUSTOM_CODE
                                            AND A2.ORDER_NUM   = A.ORDER_NUM
          INNER JOIN BPR100T B WITH(NOLOCK)ON A.COMP_CODE      = B.COMP_CODE
                                          AND A.ITEM_CODE      = B.ITEM_CODE
          LEFT  JOIN BSA100T C WITH(NOLOCK)ON C.MAIN_CODE      = N'M002'
                                          AND A.CONTROL_STATUS = C.SUB_CODE
                                          AND A.COMP_CODE      = C.COMP_CODE
          LEFT  JOIN BSA100T D WITH(NOLOCK)ON D.MAIN_CODE      = N'Q002'
                                          AND A.INSPEC_FLAG    = D.SUB_CODE
                                          AND A.COMP_CODE      = D.COMP_CODE
          LEFT  JOIN BSA100T E WITH(NOLOCK)ON E.MAIN_CODE      = N'M301'
                                          AND A.UNIT_PRICE_TYPE= E.SUB_CODE
                                          AND A.COMP_CODE      = E.COMP_CODE
          INNER JOIN BSA220T F WITH(NOLOCK)ON A.COMP_CODE      = F.COMP_CODE
                                          AND A.WH_CODE        = F.TREE_CODE
          INNER JOIN BOR120T G WITH(NOLOCK)ON G.COMP_CODE      = A.COMP_CODE
                                          AND G.DIV_CODE       = A.DIV_CODE
          LEFT JOIN  BSA100T H WITH(NOLOCK)ON H.COMP_CODE      = A.COMP_CODE
                                          AND H.MAIN_CODE      = 'M201'
                                          AND H.SUB_CODE       = A2.ORDER_PRSN
          INNER JOIN BCM100T I WITH(NOLOCK)ON I.COMP_CODE      = A.COMP_CODE
                                          AND I.CUSTOM_CODE       = A.CUSTOM_CODE
         WHERE #{CREATE_LOC} = '2'
           AND A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.ORDER_NUM   = #{ORDER_NUM}
         ORDER BY A.COMP_CODE, A.ITEM_CODE
    </select>

    <update id = "s_mpo150skrv_kdServiceImpl.updateMailYn" parameterType="Map">

    IF #{CREATE_LOC} = '2'
      BEGIN
    	UPDATE MPO100T
    	   SET MAIL_YN = 'Y'
    	 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND ORDER_NUM   = #{ORDER_NUM}
      END
      ELSE
        BEGIN
    	   UPDATE TIA100T
    	      SET MAIL_YN = 'Y'
    	    WHERE COMP_CODE   = #{S_COMP_CODE}
              AND DIV_CODE    = #{DIV_CODE}
              AND EXPORTER    = #{CUSTOM_CODE}
              AND SO_SER_NO   = #{ORDER_NUM}
       END
    </update>


</mapper>