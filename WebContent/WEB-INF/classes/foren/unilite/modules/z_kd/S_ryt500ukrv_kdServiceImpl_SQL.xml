<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ryt500ukrv_kdService">
    <select id="s_ryt500ukrv_kdService.selectCustData" parameterType="Map" resultType="rMap">
        SELECT  A.NATION_CODE
              , A.ADDR1
          FROM  BCM100T   A  WITH (NOLOCK)
          WHERE A.COMP_CODE        = #{S_COMP_CODE}
            AND A.CUSTOM_CODE      = #{CUSTOM_CODE}
    </select>

  <!--
  <select id="s_ryt500ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        SELECT   A.COMP_CODE
               , A.DIV_CODE
               , B.GW_FLAG
               , A.CUSTOM_CODE
               , C.CUSTOM_NAME
               , A.CON_FR_YYMM
               , A.CON_TO_YYMM
               , A.GUBUN1
               , B.MONEY_UNIT
               , ISNULL(B.EXCHG_RATE_O, 1.0000)                         AS EXCHG_RATE_O
               , ISNULL(B.EXCHG_RATE_O, 1.0000)                         AS EXCHG_RATE_O2
               , CASE WHEN ISNULL(B.CAL_DATE, '') = '' THEN 'N'
                      ELSE 'Y'
                  END                                                   AS CAL_YN
               , ISNULL(B.CAL_DATE, '')                                 AS CAL_DATE
               , ISNULL(B.AMT_SELL_FOR, 0)                              AS AMT_SELL_FOR
               , ISNULL(B.AMT_DEDUCT_FOR, 0)                            AS AMT_DEDUCT_FOR
               , ISNULL(B.AMT_NET_SELL_FOR, 0)                          AS AMT_NET_SELL_FOR
               , ISNULL(B.AMT_ROYALTY_FOR, 0)                           AS AMT_ROYALTY_FOR
               , ISNULL(B.AMT_ROYALTY, 0)                               AS AMT_ROYALTY
               , A.GUBUN2
               , A.GUBUN3
               , A.RYT_P
               , A.WORK_YEAR
               , A.WORK_SEQ
          FROM S_RYT200T_KD 		  AS   A WITH (NOLOCK)
          LEFT JOIN S_RYT500T_KD  AS B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                    AND B.DIV_CODE       = A.DIV_CODE
                                                    AND B.CUSTOM_CODE    = A.CUSTOM_CODE
                                                    AND B.WORK_YEAR      = A.WORK_YEAR
                                                    AND B.WORK_SEQ       = A.WORK_SEQ
/*
                                                    AND B.CON_FR_YYMM    = A.CON_FR_YYMM
                                                    AND B.CON_TO_YYMM    = A.CON_TO_YYMM
                                                    AND B.GUBUN1         = A.GUBUN1
*/
          LEFT JOIN BCM100T       AS C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                    AND C.CUSTOM_CODE    = A.CUSTOM_CODE
         WHERE A.COMP_CODE              = #{S_COMP_CODE}
           AND A.DIV_CODE      = #{DIV_CODE}
           AND A.WORK_YEAR              = #{WORK_YEAR}
           AND A.WORK_SEQ              = #{WORK_SEQ}
           AND A.CUSTOM_CODE            = #{CUSTOM_CODE}

          <if test="@foren.Ognl@isNotEmpty(CON_FR_YYMM)">
           AND A.CON_FR_YYMM    &gt;= #{CON_FR_YYMM}
          </if>
          <if test="@foren.Ognl@isNotEmpty(CON_TO_YYMM)">
           AND A.CON_TO_YYMM    &lt;= #{CON_TO_YYMM}
          </if>

           AND ISNULL(B.CAL_DATE, '')   = CASE WHEN #{CAL_YN} = 'Y' THEN B.CAL_DATE
                                               ELSE ''
                                           END
    </select>
-->
	<select id="s_ryt500ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
       DECLARE @WORK_YEAR NVARCHAR(4)
       		  ,@NEXT_YEAR NVARCHAR(4)
       	   SET @WORK_YEAR = #{WORK_YEAR}
		   SET @NEXT_YEAR = CONVERT(NVARCHAR(4),CONVERT(INT,#{WORK_YEAR}) + 1)

        SELECT <if test="CAL_YN == &quot;N&quot;">
			    TOP 1
			   </if>

                 A.COMP_CODE
               , A.DIV_CODE
               , A.CUSTOM_CODE
               , C.CUSTOM_NAME
               <if test="CAL_YN == &quot;Y&quot;">
               ,	B.CON_FR_YYMM
               ,  	B.CON_TO_YYMM
               </if>
                <if test="CAL_YN == &quot;N&quot;">
               	 , CASE WHEN #{WORK_SEQ} = '1' THEN @WORK_YEAR + A.HALF1_MM_CHG ELSE @WORK_YEAR + A.HALF2_MM_CHG END CON_FR_YYMM
			   , CASE WHEN #{WORK_SEQ} = '1' THEN SUBSTRING(CONVERT(NVARCHAR(8), DATEADD(MM, -1, @WORK_YEAR + A.HALF2_MM_CHG + '01'), 112), 1,6)
					  ELSE SUBSTRING(CONVERT(NVARCHAR(8), DATEADD(MM, -1, @NEXT_YEAR + A.HALF1_MM_CHG+ '01'), 112), 1,6)
				 END CON_TO_YYMM

               </if>

               , A.CALC_STANDARD AS GUBUN1
               , A.MONEY_UNIT
               , C.MONEY_UNIT										    AS MONEY_UNIT_ORI
               , ISNULL(B.EXCHG_RATE_O, 1.0000)                         AS EXCHG_RATE_O
               , ISNULL(B.EXCHG_RATE_O, 1.0000)                         AS EXCHG_RATE_O2
               , CASE WHEN ISNULL(B.CAL_DATE, '') = '' THEN 'N'
                      ELSE 'Y'
                  END                                                   AS CAL_YN
               <if test="CAL_YN == &quot;Y&quot;">
			   	, ISNULL(B.CAL_DATE, '')                                 AS CAL_DATE
			   </if>
			   <if test="CAL_YN == &quot;N&quot;">
			   	, '' AS CAL_DATE
			   </if>
               , ISNULL(B.QTY_SELL_FOR, 0)                              AS QTY_SELL_FOR
               , ISNULL(B.AMT_SELL_WON, 0)                              AS AMT_SELL_WON
               , ISNULL(B.AMT_SELL_FOR, 0)                              AS AMT_SELL_FOR
               , ISNULL(B.AMT_DEDUCT_FOR, 0)                            AS AMT_DEDUCT_FOR
               , ISNULL(B.AMT_NET_SELL_FOR, 0)                          AS AMT_NET_SELL_FOR
               , ISNULL(B.AMT_ROYALTY_FOR, 0)                           AS AMT_ROYALTY_FOR
               , ISNULL(B.AMT_ROYALTY, 0)                               AS AMT_ROYALTY
               , '' AS GUBUN2
               , '' AS GUBUN3
               , '' AS RYT_P
               , #{WORK_YEAR} AS WORK_YEAR
			   , #{WORK_SEQ} AS WORK_SEQ
			   <if test="CAL_YN == &quot;Y&quot;">
			   	, B.BALANCE_NUM
			   </if>
			   <if test="CAL_YN == &quot;N&quot;">
			   	, '' AS BALANCE_NUM
			   </if>
			   <if test="CAL_YN == &quot;N&quot;">
			   ,'N' AS CONFIRM_YN
			   </if>
			   <if test="CAL_YN == &quot;Y&quot;">
			   	, CASE WHEN ISNULL(B.CONFIRM_YN, '') = '' OR ISNULL(B.CONFIRM_YN, '') = 'N' THEN 'N'
                      ELSE 'Y'
                 END        AS CONFIRM_YN

			   </if>

			    , B.GW_DOC AS GW_DOCU_NUM
                , B.GW_FLAG
                , B.DRAFT_NO
          FROM (SELECT  AA.COMP_CODE
					  , AA.DIV_CODE
					  , AA.CUSTOM_CODE
					  , AA.MONEY_UNIT
					  , AA.CALC_STANDARD
					  , AA.CON_YEAR
					  , AA.CON_DATE
					  , AA.HALF1_MM
					  , AA.HALF2_MM
					  , REPLICATE('0',2 - LEN(AA.HALF1_MM)) + CONVERT(NVARCHAR(2),AA.HALF1_MM) AS HALF1_MM_CHG
					  , REPLICATE('0',2 - LEN(AA.HALF2_MM)) + CONVERT(NVARCHAR(2),AA.HALF2_MM) AS HALF2_MM_CHG
				FROM S_RYT100T_KD AA WITH (NOLOCK)
				WHERE AA.COMP_CODE   = #{S_COMP_CODE}
				AND   AA.DIV_CODE    = #{DIV_CODE}
				AND   AA.CUSTOM_CODE = #{CUSTOM_CODE}
				AND   AA.CON_DATE IN (SELECT MAX(CON_DATE)
									    FROM S_RYT100T_KD WITH (NOLOCK)
										WHERE COMP_CODE   = AA.COMP_CODE
										  AND DIV_CODE    = AA.DIV_CODE
										  AND CUSTOM_CODE = AA.CUSTOM_CODE)
			   ) A
          LEFT JOIN S_RYT500T_KD  AS B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                    AND B.DIV_CODE       = A.DIV_CODE
                                                    AND B.CUSTOM_CODE    = A.CUSTOM_CODE
                                                    AND B.WORK_YEAR      = #{WORK_YEAR}
/*
                                                    AND B.CON_FR_YYMM    = A.CON_FR_YYMM
                                                    AND B.CON_TO_YYMM    = A.CON_TO_YYMM
                                                    AND B.GUBUN1         = A.GUBUN1
*/
          LEFT JOIN BCM100T       AS C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                    AND C.CUSTOM_CODE    = A.CUSTOM_CODE
         WHERE A.COMP_CODE              = #{S_COMP_CODE}
           AND A.DIV_CODE      			= #{DIV_CODE}
           AND A.CUSTOM_CODE            = #{CUSTOM_CODE}

          <if test="@foren.Ognl@isNotEmpty(CON_FR_YYMM)">
           AND A.CON_FR_YYMM    &gt;= #{CON_FR_YYMM}
          </if>
          <if test="@foren.Ognl@isNotEmpty(CON_TO_YYMM)">
           AND A.CON_TO_YYMM    &lt;= #{CON_TO_YYMM}
          </if>
		  <if test="CAL_YN == &quot;Y&quot;">
		  	 <!-- AND ISNULL(B.CAL_DATE, '')   = CASE WHEN #{CAL_YN} = 'Y' THEN B.CAL_DATE
                                               ELSE ''
                                           END-->
                AND       B.WORK_YEAR = #{WORK_YEAR}
                  <if test="@foren.Ognl@isNotEmpty(WORK_SEQ)">
                  	 AND       B.WORK_SEQ  = #{WORK_SEQ}
                  </if>


		  </if>

    </select>
    <select id="s_ryt500ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        SELECT   A.SELL_MONTH
               , A.ITEM_CODE
               , E.ITEM_NAME
               , E.SPEC
               , A.SALES_CUSTOM_CODE
               , D.CUSTOM_NAME                                                                      AS SALES_CUSTOM_NAME
               , A.QTY_SELL
               , A.D_AMT_SELL_WON
               , A.D_AMT_SELL_FOR
               , A.D_AMT_DEDUCT_FOR
               , F.GUBUN1
               , ISNULL(F.RATE_N, 0)                                                                AS RATE_N
              -- , ISNULL(B.RYT_P, 1)                                                                 AS RYT_P
               , 1 AS RYT_P
               , A.D_AMT_NET_SELL_FOR
               , A.D_AMT_ROYALTY_FOR
               , A.D_AMT_ROYALTY_WON
               , A.COMP_CODE
               , A.DIV_CODE
               , A.WORK_YEAR
               , A.WORK_SEQ
               , A2.MONEY_UNIT
               , A2.EXCHG_RATE_O
               , A.BALANCE_NUM
          FROM S_RYT510T_KD     AS     A WITH (NOLOCK)
        --  INNER JOIN S_RYT500T_KD A2 WITH (NOLOCK) ON A2.COMP_CODE=A.COMP_CODE AND A2.DIV_CODE=A.DIV_CODE AND A2.CUSTOM_CODE=A.CUSTOM_CODE AND A2.WORK_YEAR=A2.WORK_YEAR AND A2.WORK_SEQ=A.WORK_SEQ
          INNER JOIN S_RYT500T_KD A2 WITH (NOLOCK) ON A2.COMP_CODE=A.COMP_CODE AND A2.DIV_CODE=A.DIV_CODE AND A2.BALANCE_NUM = A.BALANCE_NUM
          LEFT JOIN BCM100T       AS D WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                    AND D.CUSTOM_CODE    = A.SALES_CUSTOM_CODE
          LEFT JOIN BPR100T       AS E WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
                                                    AND E.ITEM_CODE      = A.ITEM_CODE
       LEFT JOIN S_RYT110T_KD  AS F WITH (NOLOCK) ON F.COMP_CODE      	 = A.COMP_CODE
                                                    AND F.DIV_CODE       = A.DIV_CODE
													AND F.CUSTOM_CODE    = A.CUSTOM_CODE
                                                    AND F.ITEM_CODE      = A.ITEM_CODE
													AND F.CON_FR_YYMM 	<![CDATA[<=]]> A.CON_TO_YYMM
												    AND F.CON_TO_YYMM 	>= A.CON_TO_YYMM
         WHERE A.COMP_CODE     =  #{S_COMP_CODE}
           AND A.DIV_CODE      =  #{DIV_CODE}
           AND A.CUSTOM_CODE   =  #{CUSTOM_CODE}
		   AND A.BALANCE_NUM   =  #{BALANCE_NUM}

		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.SELL_MONTH, A.SALES_CUSTOM_CODE
    </select>

    <update id="s_ryt500ukrv_kdService.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call USP_ROYALTY_S_ryt500ukrv_kd (
            #{COMP_CODE			          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE			          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BALANCE_NUM		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{CUSTOM_CODE		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WORK_YEAR		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WORK_SEQ		          ,     mode=IN,     jdbcType=VARCHAR,   javaType=java.lang.String},
            #{CON_FR_YYMM		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{CON_TO_YYMM		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GUBUN1			          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GUBUN3			          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{CAL_DATE			          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{MONEY_UNIT		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{EXCHG_RATE_O		          ,     mode=IN,     jdbcType=DOUBLE,   javaType=double},
            #{CONFIRM_YN		          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc                   ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

    <update id="s_ryt500ukrv_kdService.updateDetail2" parameterType="Map">
            SET NOCOUNT ON

        UPDATE  S_RYT510T_KD
         SET   QTY_SELL = #{QTY_SELL}
             , D_AMT_SELL_FOR  = #{D_AMT_SELL_FOR}
             , D_AMT_DEDUCT_FOR  = #{D_AMT_DEDUCT_FOR}
             , D_AMT_NET_SELL_FOR  = #{D_AMT_NET_SELL_FOR}
             , D_AMT_ROYALTY_FOR  = #{D_AMT_ROYALTY_FOR}
             , D_AMT_ROYALTY_WON  = #{D_AMT_ROYALTY_WON}
        WHERE COMP_CODE            = #{S_COMP_CODE}
           AND DIV_CODE             = #{S_DIV_CODE}
           AND CUSTOM_CODE = #{CUSTOM_CODE}
           AND WORK_YEAR = #{WORK_YEAR}
           AND WORK_SEQ = #{WORK_SEQ}
           AND SELL_MONTH = #{SELL_MONTH}
           AND ITEM_CODE = #{ITEM_CODE}
           AND SALES_CUSTOM_CODE = #{SALES_CUSTOM_CODE}
           AND BALANCE_NUM		= #{BALANCE_NUM}

        UPDATE A SET
        			  QTY_SELL_FOR		  = B.QTY_SELL
        			, AMT_SELL_FOR		  = B.D_AMT_SELL_FOR
        			, AMT_DEDUCT_FOR	  = B.D_AMT_DEDUCT_FOR
        			, AMT_NET_SELL_FOR	  = B.D_AMT_NET_SELL_FOR
        			, AMT_ROYALTY_FOR	  = B.D_AMT_ROYALTY_FOR
        			, AMT_ROYALTY		  = B.D_AMT_ROYALTY_WON
        			, MONEY_UNIT        = #{MONEY_UNIT}
        			, EXCHG_RATE_O      = #{EXCHG_RATE_O}
        FROM S_RYT500T_KD A
        	 INNER JOIN (
        				SELECT	COMP_CODE, DIV_CODE, BALANCE_NUM, CUSTOM_CODE, WORK_YEAR, WORK_SEQ
        						, SUM(QTY_SELL)		        AS QTY_SELL
        						, SUM(D_AMT_SELL_FOR)		AS D_AMT_SELL_FOR
        						, SUM(D_AMT_DEDUCT_FOR)		AS D_AMT_DEDUCT_FOR
        						, SUM(D_AMT_NET_SELL_FOR)	AS D_AMT_NET_SELL_FOR
        						, SUM(D_AMT_ROYALTY_FOR)	AS D_AMT_ROYALTY_FOR
        						, SUM(D_AMT_ROYALTY_WON)	AS D_AMT_ROYALTY_WON
        				FROM S_RYT510T_KD
        				WHERE	COMP_CODE   = #{S_COMP_CODE}
        				AND		DIV_CODE    = #{S_DIV_CODE}
        				AND		CUSTOM_CODE = #{CUSTOM_CODE}
        				AND		WORK_YEAR   = #{WORK_YEAR}
        				AND		WORK_SEQ    = #{WORK_SEQ}
        				AND     BALANCE_NUM		= #{BALANCE_NUM}
        				GROUP BY COMP_CODE, DIV_CODE, BALANCE_NUM, CUSTOM_CODE, WORK_YEAR, WORK_SEQ
        	) B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.BALANCE_NUM = B.BALANCE_NUM AND A.CUSTOM_CODE=B.CUSTOM_CODE AND A.WORK_YEAR=B.WORK_YEAR AND A.WORK_SEQ=B.WORK_SEQ
				WHERE	A.COMP_CODE   = #{S_COMP_CODE}
				AND		A.DIV_CODE    = #{S_DIV_CODE}
				AND		A.CUSTOM_CODE = #{CUSTOM_CODE}
				AND		A.WORK_YEAR   = #{WORK_YEAR}
				AND		A.WORK_SEQ    = #{WORK_SEQ}
                AND     A.BALANCE_NUM = #{BALANCE_NUM}
        SET NOCOUNT OFF

        --결과치 리턴위해 임시로 적용.
        UPDATE S_RYT500T_KD SET DIV_CODE='01' WHERE 1=2

    </update>

	<delete id="s_ryt500ukrv_kdService.deleteDetail" parameterType="Map">      /* 삭제 */
            SET NOCOUNT ON

            DELETE FROM S_RYT510T_KD
             WHERE COMP_CODE            = #{S_COMP_CODE}
		           AND DIV_CODE         = #{S_DIV_CODE}
		           AND CUSTOM_CODE 	    = #{CUSTOM_CODE}
		       	   AND BALANCE_NUM		= #{BALANCE_NUM}
		           AND SELL_MONTH 		= #{SELL_MONTH}
		           AND ITEM_CODE 		= #{ITEM_CODE}
		           AND SALES_CUSTOM_CODE = #{SALES_CUSTOM_CODE}
                   AND BALANCE_NUM      = #{BALANCE_NUM}
                   
		        IF NOT EXISTS ( SELECT TOP 1 1
                		         FROM S_RYT510T_KD
                             WHERE COMP_CODE            = #{S_COMP_CODE}
                		           AND DIV_CODE             = #{S_DIV_CODE}
                		           AND CUSTOM_CODE = #{CUSTOM_CODE}
                		           AND BALANCE_NUM	= #{BALANCE_NUM}
                		           AND SELL_MONTH = #{SELL_MONTH}
                		           AND ITEM_CODE = #{ITEM_CODE}
                		           AND SALES_CUSTOM_CODE = #{SALES_CUSTOM_CODE} 
                		           AND BALANCE_NUM = #{BALANCE_NUM})
            BEGIN

              DELETE FROM S_RYT500T_KD
               WHERE COMP_CODE      = #{S_COMP_CODE}
  		           AND DIV_CODE       = #{S_DIV_CODE}
  		           AND CUSTOM_CODE    = #{CUSTOM_CODE}
  		           AND BALANCE_NUM	  = #{BALANCE_NUM}
  		           AND WORK_YEAR      = #{WORK_YEAR}
  		           AND WORK_SEQ       = #{WORK_SEQ}
                   AND BALANCE_NUM    = #{BALANCE_NUM}
            END
            ELSE
            BEGIN

              UPDATE A SET
                          QTY_SELL_FOR		  = B.QTY_SEL
              			, AMT_SELL_FOR		  = B.D_AMT_SELL_FOR
              			, AMT_DEDUCT_FOR	  = B.D_AMT_DEDUCT_FOR
              			, AMT_NET_SELL_FOR	= B.D_AMT_NET_SELL_FOR
              			, AMT_ROYALTY_FOR	  = B.D_AMT_ROYALTY_FOR
              			, AMT_ROYALTY		  = B.D_AMT_ROYALTY_WON
              FROM S_RYT500T_KD A
              	 INNER JOIN (
              				SELECT	COMP_CODE, DIV_CODE, BALANCE_NUM, CUSTOM_CODE, WORK_YEAR, WORK_SEQ
              						, SUM(QTY_SELL)		        AS QTY_SELL
              						, SUM(D_AMT_SELL_FOR)		AS D_AMT_SELL_FOR
              						, SUM(D_AMT_DEDUCT_FOR)		AS D_AMT_DEDUCT_FOR
              						, SUM(D_AMT_NET_SELL_FOR)	AS D_AMT_NET_SELL_FOR
              						, SUM(D_AMT_ROYALTY_FOR)	AS D_AMT_ROYALTY_FOR
              						, SUM(D_AMT_ROYALTY_WON)	AS D_AMT_ROYALTY_WON
              				FROM S_RYT510T_KD
              				WHERE	COMP_CODE   = #{S_COMP_CODE}
              				AND		DIV_CODE    = #{S_DIV_CODE}
              				AND		CUSTOM_CODE = #{CUSTOM_CODE}
              				AND 	BALANCE_NUM	= #{BALANCE_NUM}
              				GROUP BY COMP_CODE, DIV_CODE, BALANCE_NUM, CUSTOM_CODE, WORK_YEAR, WORK_SEQ
              	) B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.BALANCE_NUM = B.BALANCE_NUM AND A.CUSTOM_CODE=B.CUSTOM_CODE AND A.WORK_YEAR=B.WORK_YEAR AND A.WORK_SEQ=B.WORK_SEQ
      				WHERE	A.COMP_CODE     = #{S_COMP_CODE}
      				AND		A.DIV_CODE      = #{S_DIV_CODE}
      				AND		A.CUSTOM_CODE  = #{CUSTOM_CODE}
      				AND 	A.BALANCE_NUM	= #{BALANCE_NUM}


            END
            SET NOCOUNT OFF

            --결과치 리턴위해 임시로 적용.
            UPDATE S_RYT500T_KD SET DIV_CODE='01' WHERE 1=2


    </delete>

    <select id="s_ryt500ukrv_kdService.beforeDeleteCheck" parameterType="Map" resultType="String">
        SELECT TOP 1 COUNT(1)
          FROM S_RYT510T_KD  A WITH (NOLOCK)
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
           AND A.DIV_CODE         = #{S_DIV_CODE}
           AND A.CUSTOM_CODE      = #{CUSTOM_CODE}
           AND A.BALANCE_NUM      = #{BALANCE_NUM}
    </select>

    <delete id="s_ryt500ukrv_kdService.deleteMaster" parameterType="Map">
        DELETE FROM S_RYT500T_KD
         WHERE COMP_CODE            = #{S_COMP_CODE}
		           AND DIV_CODE             = #{S_DIV_CODE}
		           AND CUSTOM_CODE = #{CUSTOM_CODE}
		           AND BALANCE_NUM = #{BALANCE_NUM}

		DELETE FROM S_RYT510T_KD
         WHERE COMP_CODE            = #{S_COMP_CODE}
		           AND DIV_CODE             = #{S_DIV_CODE}
		           AND CUSTOM_CODE = #{CUSTOM_CODE}
		           AND BALANCE_NUM = #{BALANCE_NUM}

    </delete>

	<select id="s_ryt500ukrv_kdService.confirmYnChk" parameterType="Map" resultType="Int">

		SELECT COUNT(1) FROM S_RYT500T_KD
		WHERE COMP_CODE   = #{S_COMP_CODE}
		  AND DIV_CODE    = #{DIV_CODE}
		  AND CUSTOM_CODE = #{CUSTOM_CODE}
		  AND WORK_YEAR	  = #{WORK_YEAR}
		  AND CONFIRM_YN  = 'Y'

	</select>


	<update id="s_ryt500ukrv_kdService.updateConfirmYn" parameterType="Map">
		DECLARE @CONFIRM_YN NVARCHAR(1)
		SET @CONFIRM_YN = #{CONFIRM_YN}
		UPDATE S_RYT500T_KD SET CONFIRM_YN = ISNULL(@CONFIRM_YN,'N')
		WHERE COMP_CODE   = #{COMP_CODE}
		  AND DIV_CODE    = #{DIV_CODE}
		  AND BALANCE_NUM = #{BALANCE_NUM}
	</update>

</mapper>