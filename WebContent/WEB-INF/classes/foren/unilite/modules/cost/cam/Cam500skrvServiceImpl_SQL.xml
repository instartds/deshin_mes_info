<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cam500skrvServiceImpl">
	<select id="cam500skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
                
        DECLARE @CompCode     NVARCHAR(08)				/* 법인코드 */
              , @DivCode      NVARCHAR(08)				/* 사업장    */
              , @WorkMonth    NVARCHAR(06)				/* 작업년월 */

        SET @CompCode    = #{S_COMP_CODE}
        SET @DivCode     = #{DIV_CODE}
        SET @WorkMonth   = #{WORK_MONTH}
    
        /* 데이터 조회 */
        SELECT F.ITEM_CODE
             , F.ITEM_NAME
             , F.SPEC
 			 , F.CUSTOM_CODE
			 , F.CUSTOM_NAME
             , F.WH_CODE
             , F.WH_CODE_NM
             , F.BASIS_Q
             , F.BASIS_AMOUNT_I
             , F.InProdt_q
             , F.InProdtGood_q
             , F.InProdtBad_q
             , F.InProdt_p
             , F.InProdt_i
             , F.InBuy_q
             , F.InBuy_p
             , F.InBuy_i
             , F.InOutOrder_q
             , F.InOutOrder_p
             , F.InOutOrder_i
             , F.InOther_q
             , F.InOther_i
             , F.InMove_q
             , F.InMove_i
             , F.InReplace_q
             , F.InReplace_i
             , F.InEtc_q
             , F.InEtc_i
             , F.OS_InMove_q
             , F.OS_InMove_i
             , F.OS_InEtc_q
             , F.OS_InEtc_i
             , F.InSum_q
             , F.InSum_p
             , F.InSum_i
             , F.OutProdt_q
             , F.OutProdt_i
             , F.OutFinance_q
             , F.OutFinance_i
             , F.OutSale_q
             , F.OutSale_i
             , F.OutOutOrder_q
             , F.OutOutOrder_i
             , F.OutOther_q
             , F.OutOther_i
             , F.OutMove_q
             , F.OutMove_i
             , F.OutDisUse_q
             , F.OutDisUse_i
             , F.OutReplace_q
             , F.OutReplace_i
             , F.OutEtc_q
             , F.OutEtc_i
             , F.OS_OutOutOrder_q
             , F.OS_OutOutOrder_i
             , F.OS_OutEtc_q
             , F.OS_OutEtc_i
             , F.OutSum_q
             , F.OutSum_p
             , F.OutSum_i
             , F.ITEM_ACCOUNT
             , F.ITEM_LEVEL1
             , F.ITEM_LEVEL2
             , F.ITEM_LEVEL3
             , F.STOCK_Q
             , F.STOCK_P
             , F.STOCK_I
          FROM (SELECT F.ITEM_CODE
                     , F.ITEM_NAME
                     , F.SPEC
 					 , C2.CUSTOM_CODE
					 , C3.CUSTOM_NAME
				<if  test="STATUS=='1'.toString()"> /* 전체 */
                     , CAST('' AS NVARCHAR(10)) AS WH_CODE
                     , CAST('' AS NVARCHAR(40)) AS WH_CODE_NM
				</if>
				<if  test="STATUS=='2'.toString()"> /* 창고별 */
                     , F.WH_CODE
                     , F.WH_CODE_NM
				</if>
                     /* 기초 */
                     , SUM(F.BASIS_Q          ) AS BASIS_Q          , SUM(F.BASIS_AMOUNT_I   ) AS BASIS_AMOUNT_I
                     /* 입고 */               
                     , SUM(F.INPRODT_Q        ) AS INPRODT_Q        , SUM(F.INPRODTGOOD_Q    ) AS INPRODTGOOD_Q     
                     , SUM(F.INPRODTBAD_Q     ) AS INPRODTBAD_Q     , MAX(F.INPRODT_P        ) AS INPRODT_P         , SUM(F.INPRODT_I        ) AS INPRODT_I             /* 생산입고     */
                     , SUM(F.INBUY_Q          ) AS INBUY_Q          , MAX(F.INBUY_P          ) AS INBUY_P           , SUM(F.INBUY_I          ) AS INBUY_I               /* 구매입고     */
                     , SUM(F.INOUTORDER_Q     ) AS INOUTORDER_Q     , MAX(F.INOUTORDER_P     ) AS INOUTORDER_P      , SUM(F.INOUTORDER_I     ) AS INOUTORDER_I          /* 외주입고     */
                     , SUM(F.INOTHER_Q        ) AS INOTHER_Q        , SUM(F.INOTHER_I        ) AS INOTHER_I                                                             /* 타계정입고   */
                     , SUM(F.INMOVE_Q         ) AS INMOVE_Q         , SUM(F.INMOVE_I         ) AS INMOVE_I                                                              /* 이동입고     */
                     , SUM(F.INREPLACE_Q      ) AS INREPLACE_Q      , SUM(F.INREPLACE_I      ) AS INREPLACE_I                                                           /* 대체입고     */
                     , SUM(F.INETC_Q          ) AS INETC_Q          , SUM(F.INETC_I          ) AS INETC_I                                                               /* 기타입고     */
                     , SUM(F.OS_INMOVE_Q      ) AS OS_INMOVE_Q      , SUM(F.OS_INMOVE_I      ) AS OS_INMOVE_I                                                           /* 외주이동입고 */
                     , SUM(F.OS_INETC_Q       ) AS OS_INETC_Q       , SUM(F.OS_INETC_I       ) AS OS_INETC_I                                                            /* 외주기타입고 */
                     , SUM(F.INSUM_Q          ) AS INSUM_Q			, MAX(F.INSUM_P          ) AS INSUM_P           , SUM(F.INSUM_I          ) AS INSUM_I               /* 입고계       */
                     /* 출고 */               
                     , SUM(F.OUTPRODT_Q       ) AS OUTPRODT_Q       , SUM(F.OUTPRODT_I       ) AS OUTPRODT_I                                                            /* 생산출고     */
                     , SUM(F.OUTFINANCE_Q     ) AS OUTFINANCE_Q     , SUM(F.OUTFINANCE_I     ) AS OUTFINANCE_I                                                          /* 재무출고     */
                     , SUM(F.OUTSALE_Q        ) AS OUTSALE_Q        , SUM(F.OUTSALE_I        ) AS OUTSALE_I                                                             /* 매출출고     */
                     , SUM(F.OUTOUTORDER_Q    ) AS OUTOUTORDER_Q    , SUM(F.OUTOUTORDER_I    ) AS OUTOUTORDER_I                                                         /* 외주이동출고 */
                     , SUM(F.OUTOTHER_Q       ) AS OUTOTHER_Q       , SUM(F.OUTOTHER_I       ) AS OUTOTHER_I                                                            /* 타계정출고   */
                     , SUM(F.OUTMOVE_Q        ) AS OUTMOVE_Q        , SUM(F.OUTMOVE_I        ) AS OUTMOVE_I                                                             /* 이동출고     */
                     , SUM(F.OUTREPLACE_Q     ) AS OUTREPLACE_Q     , SUM(F.OUTREPLACE_I     ) AS OUTREPLACE_I                                                          /* 대체출고     */
                     , SUM(F.OUTDISUSE_Q      ) AS OUTDISUSE_Q      , SUM(F.OUTDISUSE_I      ) AS OUTDISUSE_I                                                           /* 폐기         */
                     , SUM(F.OUTETC_Q         ) AS OUTETC_Q         , SUM(F.OUTETC_I         ) AS OUTETC_I                                                              /* 기타         */
                     , SUM(F.OS_OUTOUTORDER_Q ) AS OS_OUTOUTORDER_Q , SUM(F.OS_OUTOUTORDER_I ) AS OS_OUTOUTORDER_I                                                      /* 외주생산출고 */
                     , SUM(F.OS_OUTETC_Q      ) AS OS_OUTETC_Q      , SUM(F.OS_OUTETC_I      ) AS OS_OUTETC_I                                                           /* 외주기타출고 */
                     , SUM(F.OUTSUM_Q         ) AS OUTSUM_Q         , MAX(F.OUTSUM_P         ) AS OUTSUM_P          , SUM(F.OUTSUM_I         ) AS OUTSUM_I              /* 출고계 - 재무출고는 합계에 포함하지 않음*/
                     /* 품목정보 */
                     , MAX(F.ITEM_ACCOUNT     ) AS ITEM_ACCOUNT     , MAX(F.ITEM_LEVEL1      ) AS ITEM_LEVEL1       , MAX(F.ITEM_LEVEL2      ) AS ITEM_LEVEL2 			 , MAX(F.ITEM_LEVEL3      ) AS ITEM_LEVEL3 
                      /* 기말 */
                     , SUM(F.STOCK_Q          ) AS STOCK_Q          , MAX(F.STOCK_P          ) AS STOCK_P           , SUM(F.STOCK_I          ) AS STOCK_I
                  FROM            CAM500T F  WITH (NOLOCK)
	                   INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = F.COMP_CODE
	                                                      AND C2.DIV_CODE      = F.DIV_CODE
	                                                      AND C2.ITEM_CODE     = F.ITEM_CODE
						LEFT JOIN BCM100T C3 WITH (NOLOCK) ON C2.COMP_CODE		= C3.COMP_CODE
														  AND C2.CUSTOM_CODE	= C3.CUSTOM_CODE
                 WHERE F.COMP_CODE  = @CompCode
                   AND F.DIV_CODE   = @DivCode
                   AND F.WORK_MONTH = @WorkMonth
                <if  test="@foren.Ognl@isNotEmpty(WH_CODE)">
                   AND F.WH_CODE = #{WH_CODE}
                </if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210820 수정: 품목코드 팝업창 정규화 -->
						AND F.ITEM_CODE 			  = #{ITEM_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210820 수정: 품목코드 팝업창 정규화 -->
						AND F.ITEM_CODE 	 	   LIKE #{ITEM_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210820 수정: 품목코드 팝업창 정규화 -->
						AND F.ITEM_NAME 	 LIKE '%' + #{ITEM_NAME} + '%'
					</if>
					
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)"> <!-- 20210820 수정: 외주처 팝업창 정규화 -->
						AND C2.CUSTOM_CODE 			  = #{CUSTOM_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)"> <!-- 20210820 수정: 외주처 팝업창 정규화 -->
						AND C2.CUSTOM_CODE 	 	   LIKE #{CUSTOM_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)"> <!-- 20210820 수정: 외주처 팝업창 정규화 -->
						AND C3.CUSTOM_NAME 	 LIKE '%' + #{CUSTOM_NAME} + '%'
					</if>
		        <if  test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		           AND C2.ITEM_ACCOUNT IN
		       		<foreach collection="ITEM_ACCOUNT" item="item" separator="," open="(" close=")">
		       			 #{item}
		       		</foreach>
		        </if>
	            <if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
                   AND F.ITEM_LEVEL1 = #{ITEM_LEVEL1}
                </if>
                <if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
                   AND F.ITEM_LEVEL2 = #{ITEM_LEVEL2}
                </if>
                <if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
                   AND F.ITEM_LEVEL3 = #{ITEM_LEVEL3}
                </if>
                <if  test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                   AND F.ITEM_CODE LIKE #{ITEM_CODE}+'%'
                </if>
                <if  test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
                   AND F.ITEM_NAME LIKE #{ITEM_NAME}+'%'
                </if>
				<if  test="STATUS=='1'.toString()"> /* 전체 */
                 GROUP BY F.ITEM_CODE, F.ITEM_NAME, F.SPEC, C2.CUSTOM_CODE, C3.CUSTOM_NAME
				</if>
				<if  test="STATUS=='2'.toString()"> /* 창고별 */
                 GROUP BY F.ITEM_CODE, F.ITEM_NAME, F.SPEC, F.WH_CODE, F.WH_CODE_NM, C2.CUSTOM_CODE, C3.CUSTOM_NAME
				</if>
                 ) F
         <if test="@foren.Ognl@isNotEmpty(Except)">
           WHERE F.BASIS_Q 			&lt;&gt; 0		    OR F.BASIS_AMOUNT_I 	&lt;&gt; 0
              OR F.InProdt_q 		&lt;&gt; 0		    OR F.InProdt_p 			&lt;&gt; 0		    OR F.InProdt_i 			&lt;&gt; 0
              OR F.InBuy_q 			&lt;&gt; 0		    OR F.InBuy_p 			&lt;&gt; 0		    OR F.InBuy_i 			&lt;&gt; 0
              OR F.InOutOrder_q 	&lt;&gt; 0		    OR F.InOutOrder_p 		&lt;&gt; 0
              OR F.InOutOrder_i 	&lt;&gt; 0		    OR F.InOther_q			&lt;&gt; 0
              OR F.InOther_i 		&lt;&gt; 0		    OR F.InMove_q 			&lt;&gt; 0
              OR F.InMove_i 		&lt;&gt; 0		    OR F.InReplace_q		&lt;&gt; 0
              OR F.InReplace_i		&lt;&gt; 0		    OR F.InEtc_q 			&lt;&gt; 0
              OR F.InEtc_i 			&lt;&gt; 0		    OR F.OS_InMove_q 		&lt;&gt; 0
              OR F.OS_InMove_i 		&lt;&gt; 0		    OR F.OS_InEtc_q 		&lt;&gt; 0
              OR F.OS_InEtc_i 		&lt;&gt; 0		    OR F.InSum_q 			&lt;&gt; 0
              OR F.InSum_p 			&lt;&gt; 0		    OR F.InSum_i 			&lt;&gt; 0
              OR F.OutProdt_q 		&lt;&gt; 0		    OR F.OutProdt_i 		&lt;&gt; 0
              OR F.OutFinance_q 	&lt;&gt; 0		    OR F.OutFinance_i 		&lt;&gt; 0
              OR F.OutSale_q 		&lt;&gt; 0		    OR F.OutSale_i 			&lt;&gt; 0
              OR F.OutOutOrder_q 	&lt;&gt; 0		    OR F.OutOutOrder_i 		&lt;&gt; 0
              OR F.OutOther_q 		&lt;&gt; 0		    OR F.OutOther_i 		&lt;&gt; 0
              OR F.OutMove_q 		&lt;&gt; 0		    OR F.OutMove_i 			&lt;&gt; 0
              OR F.OutReplace_q		&lt;&gt; 0		    OR F.OutReplace_i		&lt;&gt; 0
              OR F.OutDisUse_q 		&lt;&gt; 0		    OR F.OutDisUse_i 		&lt;&gt; 0
              OR F.OutEtc_q 		&lt;&gt; 0		    OR F.OutEtc_i 			&lt;&gt; 0
              OR F.OS_OutOutOrder_q &lt;&gt; 0		    OR F.OS_OutOutOrder_i 	&lt;&gt; 0
              OR F.OS_OutEtc_q 		&lt;&gt; 0		    OR F.OS_OutEtc_i 		&lt;&gt; 0
              OR F.OutSum_q 		&lt;&gt; 0		    OR F.OutSum_p 			&lt;&gt; 0
              OR F.OutSum_i 		&lt;&gt; 0		    OR F.STOCK_Q 			&lt;&gt; 0
              OR F.STOCK_P 			&lt;&gt; 0		    OR F.STOCK_I 			&lt;&gt; 0
        </if>
		<if test="STATUS=='1'.toString()"> /*전체*/
		   ORDER BY F.ITEM_CODE
		</if> 
		<if test="STATUS=='2'.toString()"> /*창고별*/
           ORDER BY F.ITEM_CODE, F.WH_CODE
		</if>     

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
</mapper>