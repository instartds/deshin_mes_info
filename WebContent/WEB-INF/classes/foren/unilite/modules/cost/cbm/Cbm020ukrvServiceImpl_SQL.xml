<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cbm020ukrvServiceImpl">
	
	<select id="cbm020ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		DECLARE @GUBUN NVARCHAR(02)
		
    	IF #{APPLYUNIT} = '02'
		BEGIN
		
			SELECT TOP 1 @GUBUN = ISNULL(SUB_CODE,'02')
			  FROM BSA100T
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE = N'A093'
			   AND SUB_CODE != N'$'
			   AND REF_CODE1 = N'Y'
			 ORDER BY SUB_CODE DESC
		
			IF @@ROWCOUNT = 0 SET @GUBUN = '02'
		
			SELECT ISNULL(B.COMP_CODE,  #{S_COMP_CODE}) COMP_CODE 
				 , ISNULL(B.DIV_CODE,   #{DIV_CODE}) DIV_CODE 
				 , ISNULL(B.WORK_MONTH, #{WORK_MONTH}) WORK_MONTH
				 , ISNULL(A.ACCNT,       '') AC_CODE
				 , ISNULL(A.ACCNT_NAME,  '') ACC_NAME
				 , ISNULL(A.TREE_CODE,   '') DEPT_CODE
				 , ISNULL(A.TREE_NAME,   '') DEPT_NAME
				 , ISNULL(B.WORK_SHOP_CD,'') WORK_SHOP_CD
				 , ISNULL(B.ID_GB,      '2') ID_GB
				 , ISNULL(B.COST_GB, CASE WHEN A.ACCNT BETWEEN (SELECT START_ACCNT
																  FROM ABA120T
																 WHERE COMP_CODE =  #{S_COMP_CODE}
																   AND GUBUN     = @GUBUN
																   AND DIVI      = N'50'
																   AND ACCNT_CD  = N'5200')
														   AND (SELECT END_ACCNT
																  FROM ABA120T
																 WHERE COMP_CODE =  #{S_COMP_CODE}
																   AND GUBUN     = @GUBUN
																   AND DIVI      = N'50'
																   AND ACCNT_CD  = N'5200') THEN '02'
										  WHEN A.ACCNT BETWEEN (SELECT START_ACCNT
																  FROM ABA120T
																 WHERE COMP_CODE =  #{S_COMP_CODE}
																   AND GUBUN     = @GUBUN
																   AND DIVI      = N'50'
																   AND ACCNT_CD  = N'5300')
														   AND (SELECT END_ACCNT
																  FROM ABA120T
																 WHERE COMP_CODE =  #{S_COMP_CODE}
																   AND GUBUN     = @GUBUN
																   AND DIVI      = N'50'
																   AND ACCNT_CD  = N'5300') THEN '03'
									  END) COST_GB
				 , ISNULL(B.DISTR_STND_CD,(SELECT MAX(ISNULL(SUB_CODE,'01'))
											 FROM BSA100T
											WHERE COMP_CODE =  #{S_COMP_CODE}
											  AND MAIN_CODE = N'C101'
											  AND SUB_CODE != N'$'
											  AND REF_CODE1 = N'Y')) DISTR_STND_CD
				 , ISNULL(B.SUM_STND_CD   ,'01') SUM_STND_CD 
				 , ISNULL(B.UPDATE_DB_USER,'')   UPDATE_DB_USER 
				 , B.UPDATE_DB_TIME
			  FROM (SELECT A.COMP_CODE
						 , A.ACCNT
						 , A.ACCNT_NAME
						 , C.TREE_CODE
						 , C.TREE_NAME
					  FROM            ABA400T A WITH (NOLOCK)
						   INNER JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
					 WHERE A.COMP_CODE =  #{S_COMP_CODE}) A
				   LEFT JOIN CBM100T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
													AND B.DEPT_CODE  = A.TREE_CODE
													AND B.AC_CODE    = A.ACCNT
													AND B.COMP_CODE  = #{S_COMP_CODE}
													AND B.DIV_CODE   = #{DIV_CODE}
													AND B.WORK_MONTH = #{WORK_MONTH}
			 WHERE (ACCNT BETWEEN (SELECT START_ACCNT 
									 FROM ABA120T 
									WHERE COMP_CODE =  #{S_COMP_CODE}
									  AND GUBUN     = @GUBUN
									  AND DIVI      = N'50'
									  AND ACCNT_CD  = N'5200')
							  AND (SELECT END_ACCNT
									 FROM ABA120T
									WHERE COMP_CODE =  #{S_COMP_CODE}
									  AND GUBUN     = @GUBUN
									  AND DIVI      = N'50'
									  AND ACCNT_CD  = N'5200')
				OR  ACCNT BETWEEN (SELECT START_ACCNT
									 FROM ABA120T
									WHERE COMP_CODE =  #{S_COMP_CODE}
									  AND GUBUN     = @GUBUN
									  AND DIVI      = N'50'
									  AND ACCNT_CD  = N'5300')
							  AND (SELECT END_ACCNT
									 FROM ABA120T
									WHERE COMP_CODE =  #{S_COMP_CODE}
									  AND GUBUN     = @GUBUN
									  AND DIVI      = N'50'
									  AND ACCNT_CD  = N'5300'))
		        
					 <if test="@foren.Ognl@isNotEmpty(ACCNT)">
					   AND A.ACCNT            = #{ACCNT}
					 </if>
					 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					     AND B.DEPT_CODE    = #{DEPT_CODE}
					 </if>
					 <if test="@foren.Ognl@isNotEmpty(COST_GB)">
					 	AND B.COST_GB      = #{COST_GB}
					 </if>
					 <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CD)">
					 	   AND B.WORK_SHOP_CD = #{WORK_SHOP_CD}
					 </if>
			 ORDER BY DIV_CODE, WORK_MONTH, ACCNT, TREE_CODE
		END
	ELSE
		BEGIN
		    
		    SELECT TOP 1 @GUBUN = ISNULL(SUB_CODE,'02')
		      FROM BSA100T
		     WHERE COMP_CODE =  #{S_COMP_CODE}
		       AND MAIN_CODE = N'A093'
		       AND SUB_CODE != N'$'
		       AND REF_CODE1 = N'Y'
		     ORDER BY SUB_CODE DESC
		    
		    IF @@ROWCOUNT = 0 SET @GUBUN = '02'
		    
		    SELECT ISNULL(B.COMP_CODE,   #{S_COMP_CODE}) COMP_CODE 
		         , ISNULL(B.DIV_CODE,   #{DIV_CODE}) DIV_CODE 
		         , ISNULL(B.WORK_MONTH, #{WORK_MONTH}) WORK_MONTH
		         , ISNULL(A.ACCNT,'') AC_CODE
		         , ISNULL(A.ACCNT_NAME,'') ACC_NAME
		         , ISNULL(B.ID_GB,'1') ID_GB
		         , ISNULL(B.COST_GB, CASE WHEN A.ACCNT BETWEEN (SELECT START_ACCNT 
		                                                          FROM ABA120T
		                                                         WHERE COMP_CODE =  #{S_COMP_CODE}
		                                                           AND GUBUN     = @GUBUN
		                                                           AND DIVI      = N'50'
		                                                           AND ACCNT_CD  = N'5200')
		                                                   AND (SELECT END_ACCNT
		                                                          FROM ABA120T
		                                                         WHERE COMP_CODE =  #{S_COMP_CODE}
		                                                           AND GUBUN     = @GUBUN
		                                                           AND DIVI      = N'50'
		                                                           AND ACCNT_CD  = N'5200') THEN '02'
		                                  WHEN A.ACCNT BETWEEN (SELECT START_ACCNT
		                                                          FROM ABA120T
		                                                         WHERE COMP_CODE =  #{S_COMP_CODE}
		                                                           AND GUBUN     = @GUBUN
		                                                           AND DIVI      = N'50'
		                                                           AND ACCNT_CD  = N'5300')
		                                                   AND (SELECT END_ACCNT
		                                                          FROM ABA120T
		                                                         WHERE COMP_CODE =  #{S_COMP_CODE}
		                                                           AND GUBUN     = @GUBUN
		                                                           AND DIVI      = N'50'
		                                                           AND ACCNT_CD  = N'5300') THEN '03'
		                              END) COST_GB
		         , ISNULL(B.DISTR_STND_CD,(SELECT MAX(ISNULL(SUB_CODE,'01'))
		                                     FROM BSA100T
		                                    WHERE COMP_CODE =  #{S_COMP_CODE}
		                                      AND MAIN_CODE = N'C101'
		                                      AND SUB_CODE != N'$'
		                                      AND REF_CODE1 = N'Y')) DISTR_STND_CD
		         , ISNULL(B.SUM_STND_CD   ,'01') SUM_STND_CD 
		         , ISNULL(B.UPDATE_DB_USER,'')   UPDATE_DB_USER 
		         , B.UPDATE_DB_TIME
		      FROM           ABA400T A WITH (NOLOCK)
		           LEFT JOIN CBM110T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                            AND B.AC_CODE    = A.ACCNT
		                                            AND B.COMP_CODE  = #{S_COMP_CODE}
		                                            AND B.DIV_CODE   = #{DIV_CODE}
		                                            AND B.WORK_MONTH = #{WORK_MONTH}
		     WHERE (ACCNT BETWEEN (SELECT START_ACCNT
		                             FROM ABA120T
		                            WHERE COMP_CODE =  #{S_COMP_CODE}
		                              AND GUBUN     = @GUBUN
		                              AND DIVI      = N'50'
		                              AND ACCNT_CD  = N'5200')
		                      AND (SELECT END_ACCNT
		                             FROM ABA120T
		                            WHERE COMP_CODE =  #{S_COMP_CODE}
		                              AND GUBUN     = @GUBUN
		                              AND DIVI      = N'50'
		                              AND ACCNT_CD  = N'5200')
		        OR  ACCNT BETWEEN (SELECT START_ACCNT
		                             FROM ABA120T
		                            WHERE COMP_CODE =  #{S_COMP_CODE}
		                              AND GUBUN     = @GUBUN
		                              AND DIVI      = N'50'
		                              AND ACCNT_CD  = N'5300')
		                      AND (SELECT END_ACCNT
		                             FROM ABA120T
		                            WHERE COMP_CODE =  #{S_COMP_CODE}
		                              AND GUBUN     = @GUBUN
		                              AND DIVI      = N'50'
		                              AND ACCNT_CD  = N'5300'))
		       AND A.COMP_CODE  =  #{S_COMP_CODE}
		            
             <if test="@foren.Ognl@isNotEmpty(ACCNT)">
			   AND A.ACCNT            = #{ACCNT}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			     AND B.DEPT_CODE    = #{DEPT_CODE}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(COST_GB)">
			 	AND B.COST_GB      = #{COST_GB}
			 </if>
		     ORDER BY DIV_CODE, WORK_MONTH, ACCNT
		END
	</select>
	<select id="cbm020ukrvServiceImpl.selectCopy1" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , CONVERT(NVARCHAR(6), #{WORK_MONTH}) WORK_MONTH
			 , A.AC_CODE
			 , B.ACCNT_NAME  AS ACC_NAME
			 , A.SUM_STND_CD
			 , A.DEPT_CODE
			 , C.TREE_NAME AS DEPT_NAME
			 , A.WORK_SHOP_CD 
			 , A.DISTR_STND_CD
			 , A.ID_GB
			 , A.COST_GB
			 , '' AS UPDATE_DB_TIME
		  FROM            CBM100T A WITH (NOLOCK)
		       INNER JOIN ABA400T B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
		                                         AND B.ACCNT            = A.AC_CODE
		       LEFT JOIN BSA210T C WITH (NOLOCK)  ON C.COMP_CODE		= A.COMP_CODE
												 AND C.TREE_CODE		= A.DEPT_CODE
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.WORK_MONTH = #{PREV_MONTH}
	</select>
	<delete id="cbm020ukrvServiceImpl.deleteCopyDetail1" parameterType="Map">	
		--Cbm120ukrv.CCbm120ukrv[fnCbm120Save]Query01 "
        DELETE CBM100T
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND DIV_CODE   = #{DIV_CODE}
           AND WORK_MONTH = #{WORK_MONTH}
	</delete>
	<insert id="cbm020ukrvServiceImpl.insertDetail1" parameterType="Map">
		INSERT INTO CBM100T
           (COMP_CODE
           	,DIV_CODE
           	,WORK_MONTH
           	,AC_CODE       
	     	,ACC_NAME     
	     	,DEPT_CODE    
	     	,DEPT_NAME     
	     	,WORK_SHOP_CD     
	     	,COST_GB         
	     	,ID_GB           
	     	,DISTR_STND_CD   
	     	,SUM_STND_CD
           	,INSERT_DB_USER
           	,INSERT_DB_TIME
           	,UPDATE_DB_USER
           	,UPDATE_DB_TIME
	     )
	     VALUES(
	     	#{S_COMP_CODE}
           ,#{DIV_CODE}
           ,#{WORK_MONTH}
           ,#{AC_CODE}
           ,#{ACC_NAME}
           ,#{DEPT_CODE}
           ,#{DEPT_NAME}
           ,#{WORK_SHOP_CD}
           ,#{COST_GB}
           ,#{ID_GB}
           ,#{DISTR_STND_CD}
           ,#{SUM_STND_CD}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE()
          )
	</insert>
	<update id="cbm020ukrvServiceImpl.updateDetail1" parameterType="Map">
		UPDATE CBM100T
		   SET AC_CODE			 = #{AC_CODE}
		   		, ACC_NAME		 = #{ACC_NAME}
		      	, DEPT_NAME	 	 = #{DEPT_NAME}
		      	, WORK_SHOP_CD	 = #{WORK_SHOP_CD}
		      	, COST_GB		 = #{COST_GB}
		      	, ID_GB			 = #{ID_GB}
		      	, DISTR_STND_CD	 = #{DISTR_STND_CD}
		      	, SUM_STND_CD	 = #{SUM_STND_CD}
		      ,UPDATE_DB_USER 	 = #{S_USER_ID}
		      ,UPDATE_DB_TIME	 = GETDATE()
		 WHERE COMP_CODE		 = #{S_COMP_CODE}
		   AND DIV_CODE			 = #{DIV_CODE}
		   AND WORK_MONTH		 = #{WORK_MONTH}
		   AND AC_CODE		 	 = #{AC_CODE}
		   AND DEPT_CODE		 = #{DEPT_CODE}
	</update>
	<select id="cbm020ukrvServiceImpl.selectCopy1_110" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , CONVERT(NVARCHAR(6), #{WORK_MONTH}) WORK_MONTH
			 , A.AC_CODE
			 , B.ACCNT_NAME AS ACC_NAME
			 , A.SUM_STND_CD
			 , A.DISTR_STND_CD
			 , A.ID_GB
			 , A.COST_GB
			 , '' AS UPDATE_DB_TIME
		  FROM            CBM110T A WITH (NOLOCK)
		       INNER JOIN ABA400T B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
		                                         AND B.ACCNT            = A.AC_CODE
		      
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.WORK_MONTH = #{PREV_MONTH}
	</select>
	<delete id="cbm020ukrvServiceImpl.deleteCopyDetail1_110" parameterType="Map">	
	
        DELETE CBM110T
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND DIV_CODE   = #{DIV_CODE}
           AND WORK_MONTH = #{WORK_MONTH}
	</delete>
	<insert id="cbm020ukrvServiceImpl.insertDetail1_110" parameterType="Map">
		INSERT INTO CBM110T
           (COMP_CODE
           	,DIV_CODE
           	,WORK_MONTH
           	,AC_CODE       
	     	,ACC_NAME     
	     	,COST_GB         
	     	,ID_GB           
	     	,DISTR_STND_CD   
	     	,SUM_STND_CD
           	,INSERT_DB_USER
           	,INSERT_DB_TIME
           	,UPDATE_DB_USER
           	,UPDATE_DB_TIME
	     )
	     VALUES(
	     	#{S_COMP_CODE}
           ,#{DIV_CODE}
           ,#{WORK_MONTH}
           ,#{AC_CODE}
           ,#{ACC_NAME}
           ,#{COST_GB}
           ,#{ID_GB}
           ,#{DISTR_STND_CD}
           ,#{SUM_STND_CD}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE()
          )
	</insert>
	<update id="cbm020ukrvServiceImpl.updateDetail1_110" parameterType="Map">
		UPDATE CBM110T
		   SET AC_CODE			 = #{AC_CODE}
		   		, ACC_NAME		 = #{ACC_NAME}
		      	, COST_GB		 = #{COST_GB}
		      	, ID_GB			 = #{ID_GB}
		      	, DISTR_STND_CD	 = #{DISTR_STND_CD}
		      	, SUM_STND_CD	 = #{SUM_STND_CD}
		      
		      ,UPDATE_DB_USER 	 = #{S_USER_ID}
		      ,UPDATE_DB_TIME	 = GETDATE()
		 WHERE COMP_CODE		 = #{S_COMP_CODE}
		   AND DIV_CODE			 = #{DIV_CODE}
		   AND WORK_MONTH		 = #{WORK_MONTH}
		   AND AC_CODE		 	 = #{AC_CODE}
	</update>
	<select id="cbm020ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
	--CBM300T에 데이터가 있으면 DIV_CODE, DISTR_STND_CD, 품목계정이 동일한 것을 리턴
	--cbm300ukrv.Ccbm300ukrv [fnCbm300QStd] QUERY02
	IF EXISTS(SELECT * 
    		   FROM CBM300T
    		  WHERE COMP_CODE     = #{S_COMP_CODE}
    		    AND DIV_CODE      = #{DIV_CODE}
    		    AND DISTR_STND_CD = #{DISTR_STND_CD})
    BEGIN
	SELECT A.DIV_CODE                  AS DIV_CODE
	     , #{DISTR_STND_CD}            AS DISTR_STND_CD
	     , A.ITEM_ACCOUNT              AS ITEM_ACCOUNT     
	     , A.ITEM_CODE                 AS PROD_ITEM_CODE
	     , A.ITEM_NAME                 AS ITEM_NAME
	     , ISNULL((SELECT SPEC FROM BPR100T 
	                WHERE COMP_CODE = A.COMP_CODE AND ITEM_CODE = A.ITEM_CODE), '') AS SPEC
	     , ISNULL(B.DIST_RATE, 1)      AS DIST_RATE
	     , ISNULL(B.UPDATE_DB_USER, '') AS UPDATE_DB_USER 
	     , ISNULL(B.UPDATE_DB_TIME, GETDATE()) AS UPDATE_DB_TIME 
	  FROM                 BPR200T A
	       LEFT OUTER JOIN CBM300T B ON A.COMP_CODE      = B.COMP_CODE
	                                AND A.DIV_CODE       = B.DIV_CODE
	                                AND A.ITEM_CODE      = B.PROD_ITEM_CODE 
	                                AND B.DISTR_STND_CD = #{DISTR_STND_CD}
	       LEFT OUTER JOIN BPR100T C ON A.COMP_CODE      = C.COMP_CODE
	                                AND A.ITEM_CODE      = C.ITEM_CODE
	 WHERE A.COMP_CODE     = #{S_COMP_CODE}
	   AND A.DIV_CODE      = #{DIV_CODE}
	   AND A.ITEM_ACCOUNT IN ('10', '20')
	   AND C.USE_YN        = N'Y'
	   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	   AND A.ITEM_ACCOUNT  = #{}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	       AND  C.ITEM_LEVEL1   = #{ITEM_LEVEL1}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	       AND  C.ITEM_LEVEL2   = #{ITEM_LEVEL2}
	  </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	       AND  C.ITEM_LEVEL3   = #{ITEM_LEVEL3}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
	      AND  B.PROD_ITEM_CODE LIKE #{PROD_ITEM_CODE} +'%'
	   </if>
	   <if test="@foren.Ognl@isEmpty(PROD_ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	      AND  A.ITEM_NAME LIKE #{ITEM_NAME}+'%'
	   </if>     
	 ORDER  BY B.PROD_ITEM_CODE
    END
    ELSE
    BEGIN
	--CBM300T에 데이터가 없는 경우, BPR200T(사업장별 품목정보)에서 QUERY
	--cbm300ukrv.Ccbm300ukrv [fnCbm300QStd] QUERY03
	 SELECT A.DIV_CODE                  AS DIV_CODE
	      , CAST('' AS VARCHAR(2))      AS DISTR_STND_CD
	      , A.ITEM_ACCOUNT              AS ITEM_ACCOUNT     
	      , A.ITEM_CODE                 AS PROD_ITEM_CODE
	      , A.ITEM_NAME                 AS ITEM_NAME
	      , ISNULL((SELECT SPEC FROM BPR100T 
	                 WHERE COMP_CODE = A.COMP_CODE AND ITEM_CODE = A.ITEM_CODE), '') AS SPEC
	      , CAST(1 AS NUMERIC(18,4)) AS DIST_RATE
	      , '' UPDATE_DB_USER 
	      , '' UPDATE_DB_TIME
	   FROM                 BPR200T A
	        LEFT OUTER JOIN BPR100T C ON A.COMP_CODE = C.COMP_CODE
	                                 AND A.ITEM_CODE = C.ITEM_CODE  
	  WHERE A.ITEM_ACCOUNT IN ('10', '20')
	    AND A.COMP_CODE     = #{S_COMP_CODE}
	    AND A.DIV_CODE      = #{DIV_CODE}
	    AND C.USE_YN        = N'Y'
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	       AND  C.ITEM_LEVEL1   = #{ITEM_LEVEL1}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	       AND  C.ITEM_LEVEL2   = #{ITEM_LEVEL2}
	  </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	       AND  C.ITEM_LEVEL3   = #{ITEM_LEVEL3}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       AND  A.ITEM_CODE LIKE  #{ITEM_CODE} +'%'
	   </if>
	   <if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	      AND  A.ITEM_NAME LIKE #{ITEM_NAME}+'%'
	   </if>  
	 ORDER  BY A.ITEM_CODE
	 END
	</select>
</mapper>