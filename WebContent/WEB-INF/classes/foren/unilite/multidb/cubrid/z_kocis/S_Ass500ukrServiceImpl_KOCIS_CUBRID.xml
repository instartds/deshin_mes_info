<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ass500ukrServiceImpl_KOCIS">
	
	<select id="s_ass500ukrServiceImpl_KOCIS.selectMasterList" parameterType="Map" resultType="rMap">
		/* --UAss01Krv.Cass500UKR[fnass500nQ] Query1 */
		SELECT DISTINCT A.ASST
			 , A.ITEM_CD
			 , A.ITEM_NM
		     , A.ASST_NAME 
		     , A.PLACE_INFO
		     , NVL((SELECT TREE_NAME 
		                 FROM BSA210T  
		                WHERE COMP_CODE	= A.COMP_CODE
		                  AND TREE_CODE	= A.DEPT_CODE), '') DEPT_NAME 
		     , NVL((SELECT PJT_NAME 
		                 FROM BCM600T  
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND PJT_CODE  = A.PJT_CODE), '') PJT_CODE 
		     , NVL((SELECT ACCNT_NAME 
		                 FROM ABA400T  
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND ACCNT     = A.ACCNT), '')    ACCNT_NAME 
		     , A.DRB_YEAR 
		     , A.ACQ_DATE 
		     , A.USE_DATE 
		     , CAST(NVL(A.ACQ_Q,0) AS NUMERIC(18,3))     AS ACQ_Q
		     , CAST(NVL(A.ACQ_AMT_I,0) AS NUMERIC(18,3)) AS ACQ_AMT_I
		     , A.COMP_CODE 
		     , B.PROCESS_GUBUN
		  FROM ASS300T A  
		               LEFT OUTER JOIN ASS500T B  
		                            ON A.ASST      = B.ASST
		                           AND A.COMP_CODE = B.COMP_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE} 
		 <if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
		   AND A.ASST &gt;= #{ASSET_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ASSET_CODE2)">
		   AND A.ASST &lt;= #{ASSET_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
		   AND A.DEPT_CODE = #{DEPT_CODE}
		 </if> 
		 <if test="@foren.Ognl@isNotEmpty(PROCESS_GUBUN)">
		   AND B.PROCESS_GUBUN = #{PROCESS_GUBUN}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(DPR_STS)">  
		   AND NVL(A.DPR_STS2,'') = #{DPR_STS}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">  
		   AND A.PJT_CODE &gt;= #{AC_PROJECT_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE2)">  
		   AND A.PJT_CODE &lt;= #{AC_PROJECT_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DRP_YEAR_FR)">  
		   AND A.DRB_YEAR &gt;= #{DRP_YEAR_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DRP_YEAR_TO)">  
		   AND A.DRB_YEAR &lt;= #{DRP_YEAR_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_FR)">  
		   AND NVL(A.ACQ_AMT_I,0.0) &gt;= #{ACQ_AMT_I_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_TO)">  
		   AND NVL(A.ACQ_AMT_I,0.0) &lt;= #{ACQ_AMT_I_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_FR)">  
		   AND NVL(A.FOR_ACQ_AMT_I,0.0) &gt;= #{FOR_ACQ_AMT_I_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_TO)">  
		   AND NVL(A.FOR_ACQ_AMT_I,0.0) &lt;= #{FOR_ACQ_AMT_I_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_DATE_FR)">  
		   AND A.ACQ_DATE &gt;= #{ACQ_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_DATE_TO)">  
		   AND A.ACQ_DATE &lt;= #{ACQ_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(USE_DATE_FR)">  
		   AND A.USE_DATE &gt;= #{USE_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(USE_DATE_TO)">  
		   AND A.USE_DATE &lt;= #{USE_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(WASTE_DIVI)">  
		   AND B.WASTE_DIVI = #{WASTE_DIVI}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DATE_FR)">  
		   AND B.ALTER_DATE &gt;= #{ALTER_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DATE_TO)">  
		   AND B.ALTER_DATE &lt;= #{ALTER_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DIVI)">  
		   AND B.ALTER_DIVI = #{ALTER_DIVI} 
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FI_CAPI_DATE_FR)">  
		   AND B.ALTER_DATE &gt;= #{FI_CAPI_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FI_CAPI_DATE_TO)">  
		   AND B.ALTER_DATE &lt;= #{FI_CAPI_DATE_TO}
		 </if>  
		 ORDER BY A.ASST 
	
	</select>
	
 	<select id="s_ass500ukrServiceImpl_KOCIS.selectDetailList1" parameterType="Map" resultType="rMap">
		/* --UAss01Krv.Cass500UKR[fnass500nQ] Query2 */

				SELECT A.ASST
				     , A.SEQ
				     , A.WASTE_DIVI 
				     , A.ALTER_DATE 
				     , NVL(A.ALTER_Q,0)     AS ALTER_Q 
				     , A.MONEY_UNIT 
				     , A.EXCHG_RATE_O 
				     , A.FOR_ALTER_AMT_I 
				     , NVL(A.ALTER_AMT_I,0) AS ALTER_AMT_I
				     , A.ALTER_REASON 
				     , A.ALTER_DIVI
				     , A.UPDATE_DB_USER
				     , A.UPDATE_DB_TIME 
				     , A.COMP_CODE 
		
				     , A.PROCESS_GUBUN
				     , A.EX_DATE
				     , A.SALE_AMT
				     , A.PROCESS_USER
				     , B.USER_NAME
				     
				  FROM ASS500T  A
				  LEFT JOIN BSA300T B ON B.COMP_CODE	= A.COMP_CODE
				  					 AND B.USER_ID		= A.PROCESS_USER
				 WHERE A.COMP_CODE = #{S_COMP_CODE}
				   AND A.ASST      = #{ASST} 
				 ORDER BY ASST, ALTER_DIVI, SEQ, ALTER_DATE
	</select>
	

	
	<select id="s_ass500ukrServiceImpl_KOCIS.beforeInsertCheck" parameterType="Map" resultType="rMap">
		/* s_ass300ukrServiceImpl_KOCIS.beforeSaveCheck */
		    SET     @COMP_CODE  = #{COMP_CODE};
		    SET     @ASST       = #{ASST};
			
			DO (
			    --1. 처분내역 존재여부 확인
			    SELECT 	@ExistsYn	:= COUNT(*)
			    FROM    ASS500T AS A 
			    WHERE   A.COMP_CODE = @COMP_CODE
			    AND     A.ASST      = @ASST
		    )
	        
			SELECT @ExistsYn AS EXIST_YN
	</select>
			


	<insert id="s_ass500ukrServiceImpl_KOCIS.insertDetail1" parameterType="Map">
		/* --UAss01Krv.Cass500UKR[fnass500set] Query6-1 */
		INSERT INTO ass500t
		     ( ASST
		     , SEQ
		     , ALTER_DATE
		     , ALTER_Q
		     , MONEY_UNIT
		     , ALTER_REASON
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , COMP_CODE
		     
		     , PROCESS_GUBUN
		     , EX_DATE
		     , SALE_AMT
		     , PROCESS_USER
		     
		     ) 
		VALUES
		     ( #{ASST}
		     , #{SEQ}
		     , #{ALTER_DATE}
		     , #{ALTER_Q}
		     , #{MONEY_UNIT}
		     , #{ALTER_REASON}
		     , #{S_USER_ID}
		     , SYSDATETIME
		     , #{S_USER_ID}
		     , SYSDATETIME
		     , #{S_COMP_CODE}

		     , #{PROCESS_GUBUN}
		     , #{EX_DATE}
		     , #{SALE_AMT}
		     , #{USER_ID}

		     )	
	</insert>
	
	<update id="s_ass500ukrServiceImpl_KOCIS.updateDetail1" parameterType="Map">
--first_backup
--insertDeatail1		    			
		/* --UAss01Krv.Cass500UKR[fnass500set] Query6-1 */
		UPDATE ASS500T
		   SET WASTE_DIVI      = #{WASTE_DIVI}
		     , ALTER_DATE      = #{ALTER_DATE}
		     , ALTER_Q         = #{ALTER_Q}
		     , MONEY_UNIT      = #{MONEY_UNIT}
		     , EXCHG_RATE_O    = #{EXCHG_RATE_O}
		     , FOR_ALTER_AMT_I = #{FOR_ALTER_AMT_I}
		     , ALTER_AMT_I     = #{ALTER_AMT_I}
		     , ALTER_REASON    = #{ALTER_REASON}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = SYSDATETIME
		     
		     , PROCESS_GUBUN   = #{PROCESS_GUBUN}
		     , EX_DATE         = #{EX_DATE}      
		     , SALE_AMT        = #{SALE_AMT}     
		     , PROCESS_USER    = #{PROCESS_USER} 
		     
		 WHERE ASST            = #{ASST}
		   AND SEQ             = #{SEQ}
		   AND COMP_CODE       = #{S_COMP_CODE}
--Second_backup
	</update>

	<update id="s_ass500ukrServiceImpl_KOCIS.deleteDetail1" parameterType="Map">
		/* --UAss01Krv.Cass500UKR[fnass500set] Query4-1 */
		DELETE FROM ASS500T 
		 WHERE ASST       = #{ASST}
		   AND SEQ        = #{SEQ}
		   AND COMP_CODE  = #{S_COMP_CODE}
	</update>



	<select id="s_ass500ukrServiceImpl_KOCIS.first_backup" parameterType="Map" resultType="rMap">	
		    SET     @ExistYN    = 0;
			--UAss01Krv.Cass500UKR[fnass500set] Query5
			SELECT TOP 1 
				 @ExistYN    = 1 
			  FROM ASC100T 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST}
			   AND DPR_YYMM &gt;= #{ALTER_DATE}   
			IF ( @ExistYN  &gt; 0 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '55301; 자산코드: ${ASST} 미존재'
		        GOTO ERROR_HANDLER
		    END
			
			--고정자산변동내역 등록. 한 자산은 월에 한번만 등록 가능
			<if test="ALTER_DIVI == &quot;2&quot;">
				--UAss01Krv.Cass500UKR[fnass500set] Query6
				SET     @ExistYN    = 0
				SELECT TOP 1 
				      @ExistYN    = 1
				  FROM ASS500T 
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND ASST      = #{ASST}
				   AND LEFT(ALTER_DATE,6) = LEFT(#{ALTER_DATE},6)
				   AND ALTER_DIVI    = #{ALTER_DIVI}
				IF ( @ExistYN  &gt; 0 )
			    BEGIN
			        --자산의 매각/폐기는 월에 한번만 발생이 가능합니다.
			        SET @ERR_DESC = '55428; 자산코드: ${ASST}'
			        GOTO ERROR_HANDLER
			    END   
			</if>
	</select>	
	<select id="s_ass500ukrServiceImpl_KOCIS.Second_backup" parameterType="Map" resultType="rMap">	
			--UAss01Krv.Cass500UKR[fnGetAss300] Query8
			SET     @ExistYN    = 0
			SELECT TOP 1
			     @ExistYN    = 1
			  FROM ASS300T  
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
			 IF ( @ExistYN  &lt; 1 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '8164; 자산코드= ${ASST} 미존재'
		        GOTO ERROR_HANDLER
		    END
		    
		    --UAss01Krv.Cass500UKR[fnGetAss300] Query8
			SET     @ExistYN    = 0
			SELECT 
			     @dAcqQ = NVL(ACQ_Q,0)
			  FROM ASS300T  
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
		    
		    
		    --UAss01Krv.Cass500UKR[fnass500set] Query7
			SELECT 
			     @alterQ = NVL(SUM(ALTER_Q),0)     
			  FROM ASS500T  
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
		    
		    IF(@dAcqQ &lt; @alterQ)
		    BEGIN
		    	--취득수량이 초과되었습니다.
		        SET @ERR_DESC = '8164; 취득수량 =' + @dAcqQ + '초과'
		        GOTO ERROR_HANDLER
		    END
	</select>

</mapper>