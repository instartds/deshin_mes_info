<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_afb730ukrkocisServiceImpl">
	
<select id="s_afb730ukrkocisServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
    
      SELECT 
          A.COMP_CODE
         ,A.DEPT_CODE
         
         ,A1.AC_GUBUN                              --원결의 회계구분
         ,A.PAY_DRAFT_NO   AS    REF_DOC_NO           --원결의 번호
         ,A.SEQ             AS    REF_DOC_SEQ           
         ,A1.PAY_DATE       AS    REF_EX_DATE      --원결의일자
         
         ,A.BUDG_CODE                              --과목
         ,B.BUDG_NAME       AS BUDG_NAME_1         --부문
         ,C.BUDG_NAME       AS BUDG_NAME_4         --세부사업
         ,D.BUDG_NAME       AS BUDG_NAME_6         --세목
         
         ,A.CUSTOM_CODE
         ,A.CUSTOM_NAME
         
         ,A.LOC_AMT_I  AS REF_CURR_AMT              --금액
         ,A.CURR_RATE  AS REF_CURR_RATE             --환율
         ,A.TOT_AMT_I  AS EX_AMT                    --금액(현지화)
         ,A1.TITLE     AS REMARK
         
         ,A1.AC_TYPE                                --원인행위
         
         ,A.CURR_UNIT    AS REF_CURR_UNIT
         
         ,A.ACCT_NO                               --계좌
         
         FROM AFB710T A
   INNER JOIN AFB700T A1 ON A1.COMP_CODE = A.COMP_CODE
                        AND A1.PAY_DRAFT_NO = A.PAY_DRAFT_NO
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          
          AND A1.STATUS = '9'
          AND A1.PAY_DATE &gt;= #{DATE_FR}
          AND A1.PAY_DATE &lt;= #{DATE_TO}
          
          
          --계약구분 추가 필요
          
    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
          AND A.CUSTOM_CODE = #{CUSTOM_CODE}
    </if>
    
</select>
			
<select id="s_afb730ukrkocisServiceImpl.selectList" parameterType="Map" resultType="rMap">
    SELECT
          A.COMP_CODE
        , A.EX_DATE
        , A.DOC_NO
        , A.AC_TYPE
        , A.STATUS
        , A.ACCT_NO
        , E.SAVE_NAME
        , A.BUDG_CODE
        , B.BUDG_NAME    AS BUDG_NAME_1 --부문
        , C.BUDG_NAME    AS BUDG_NAME_4 --세부사업
        , D.BUDG_NAME    AS BUDG_NAME_6 --세목
        , A.REF_EX_AMT
        , A.REF_EX_DATE
        , A.CURR_RATE
        , A.CURR_AMT
        , A.EX_AMT
        , A.REMARK
        , A.AC_GUBUN
        , A.CURR_UNIT
        
        , A.REF_DOC_NO
        , A.REF_DOC_SEQ
        
        
        
      FROM AFB730T A
 LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                    AND B.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
 LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                    AND C.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
 LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                    AND D.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND D.BUDG_CODE = A.BUDG_CODE
 LEFT JOIN AFS100T E ON E.COMP_CODE = A.COMP_CODE 
                    AND E.DEPT_CODE = #{S_DEPT_CODE}
                    AND E.SAVE_CODE = A.ACCT_NO
    
     WHERE A.COMP_CODE = #{S_COMP_CODE}
       AND A.DEPT_CODE = #{DEPT_CODE}
    <if test="@foren.Ognl@isNotEmpty(AC_GUBUN)"> 
       AND A.AC_GUBUN = #{AC_GUBUN}
    </if>
       AND SUBSTRING(A.EX_DATE, 1, 6) &gt;= #{AC_YEAR} + #{AC_MONTH_FR}
       AND SUBSTRING(A.EX_DATE, 1, 6) &lt;= #{AC_YEAR} + #{AC_MONTH_TO}
    <if test="@foren.Ognl@isNotEmpty(REMARK)"> 
       AND A.REMARK = #{REMARK}
    </if>
    
</select>

<update id="s_afb730ukrkocisServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
	{call SP_GetAutoNumComp (
		#{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>

<insert id="s_afb730ukrkocisServiceImpl.insertForm" parameterType="Map">    
   
    INSERT INTO AFB730T
    (
        COMP_CODE
        ,DEPT_CODE
        ,AC_YYYY
        ,DOC_NO
        ,EX_DATE
        ,AC_TYPE
        ,BUDG_CODE
        ,EX_AMT
        ,ACCT_NO
        ,REMARK     
        ,STATUS
        ,REF_DOC_NO
        ,REF_DOC_SEQ
        ,REF_EX_DATE
      
        ,CURR_RATE
        ,CURR_UNIT
        ,CURR_AMT
      
        ,AC_GUBUN
        
        ,INSERT_DB_USER
        ,INSERT_DB_TIME
        ,UPDATE_DB_USER
        ,UPDATE_DB_TIME
    )
    VALUES
    (
         #{S_COMP_CODE}
        ,#{S_DEPT_CODE}
        ,#{AC_YYYY}
        ,#{DOC_NO}
        ,#{EX_DATE}
        ,#{AC_TYPE}
        ,#{BUDG_CODE}
        ,#{EX_AMT}
        ,#{ACCT_NO}           
        ,#{REMARK}  
        ,'0'
        ,#{REF_DOC_NO}         
        ,#{REF_DOC_SEQ}
        ,#{REF_EX_DATE}
        ,#{CURR_RATE}
        ,#{CURR_UNIT}
        ,#{CURR_AMT}
        
        ,#{AC_GUBUN}
        
        ,#{S_USER_ID}
        ,now()
        ,#{S_USER_ID}
        ,now()
    )
</insert>
	
<update id="s_afb730ukrkocisServiceImpl.updateForm" parameterType="Map">	
	UPDATE AFB730T
	   SET 
           CURR_RATE      = #{CURR_RATE}
         , CURR_UNIT      = #{CURR_UNIT}
         , CURR_AMT       = #{CURR_AMT}
         , EX_AMT         = #{EX_AMT}
         , REMARK         = #{REMARK}
		 , UPDATE_DB_USER = #{S_USER_ID}
		 , UPDATE_DB_TIME = now()
	 WHERE COMP_CODE      = #{S_COMP_CODE}
	   AND DEPT_CODE      = #{S_DEPT_CODE}
       AND AC_YYYY        = #{AC_YYYY}
       AND DOC_NO         = #{DOC_NO}
</update>

<update id="s_afb730ukrkocisServiceImpl.deleteForm" parameterType="Map">
	DELETE FROM AFB730T
	 WHERE COMP_CODE      = #{S_COMP_CODE}
       AND DEPT_CODE      = #{S_DEPT_CODE}
       AND AC_YYYY        = #{AC_YYYY}
       AND DOC_NO         = #{DOC_NO}
</update>

<select id="s_afb730ukrkocisServiceImpl.checkAFB730T" parameterType="Map" resultType="rMap">
    SELECT 
        NVL(STATUS, '0') AS STATUS
      FROM AFB730T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND DEPT_CODE = #{S_DEPT_CODE}
       AND AC_YYYY   = #{AC_YYYY}
       AND DOC_NO    = #{DOC_NO}
</select>

<select id="s_afb730ukrkocisServiceImpl.fnGetDocNo" parameterType="Map" resultType="rMap">  
        SELECT 
            '3' + #{S_DEPT_CODE} + #{AC_YYYY} + TO_CHAR  (NVL(MAX( TO_NUMBER (SUBSTRING(DOC_NO, 10))),0) +1, '0000') AS DOC_NO
          FROM AFB730T
         WHERE COMP_CODE = #{S_COMP_CODE} 
           AND DEPT_CODE = #{S_DEPT_CODE}
           AND AC_YYYY   = #{AC_YYYY}
           AND LENGTH(DOC_NO) = 13
    </select>
</mapper>