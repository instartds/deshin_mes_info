<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_afb960ukrkocisServiceImpl">
	
<select id="s_afb960ukrkocisServiceImpl.selectForm" parameterType="Map" resultType="rMap">
SELECT 
     A.COMP_CODE
    ,NVL(SUM(CASE WHEN GUBUN = '1' THEN A.NO_TOTAL_COUNT1 END),0) AS NO_TOTAL_COUNT_AFB503T
    ,NVL(SUM(CASE WHEN GUBUN = '1' THEN A.NO_TOTAL_AMT1   END),0) AS NO_TOTAL_AMT_AFB503T
    ,NVL(SUM(CASE WHEN GUBUN = '1' THEN A.TOTAL_COUNT1    END),0) AS TOTAL_COUNT_AFB503T
    ,NVL(SUM(CASE WHEN GUBUN = '1' THEN A.TOTAL_AMT1      END),0) AS TOTAL_AMT_AFB503T
                            
    ,NVL(SUM(CASE WHEN GUBUN = '2' THEN A.NO_TOTAL_COUNT2 END),0) AS NO_TOTAL_COUNT_AFB700T
    ,NVL(SUM(CASE WHEN GUBUN = '2' THEN A.NO_TOTAL_AMT2   END),0) AS NO_TOTAL_AMT_AFB700T
    ,NVL(SUM(CASE WHEN GUBUN = '2' THEN A.TOTAL_COUNT2    END),0) AS TOTAL_COUNT_AFB700T
    ,NVL(SUM(CASE WHEN GUBUN = '2' THEN A.TOTAL_AMT2      END),0) AS TOTAL_AMT_AFB700T
                        
    ,NVL(SUM(CASE WHEN GUBUN = '3' THEN A.NO_TOTAL_COUNT3 END),0) AS NO_TOTAL_COUNT_AFB800T
    ,NVL(SUM(CASE WHEN GUBUN = '3' THEN A.NO_TOTAL_AMT3   END),0) AS NO_TOTAL_AMT_AFB800T
    ,NVL(SUM(CASE WHEN GUBUN = '3' THEN A.TOTAL_COUNT3    END),0) AS TOTAL_COUNT_AFB800T
    ,NVL(SUM(CASE WHEN GUBUN = '3' THEN A.TOTAL_AMT3      END),0) AS TOTAL_AMT_AFB800T
                    
    ,NVL(SUM(CASE WHEN GUBUN = '4' THEN A.NO_TOTAL_COUNT4 END),0) AS NO_TOTAL_COUNT_AFB740T
    ,NVL(SUM(CASE WHEN GUBUN = '4' THEN A.NO_TOTAL_AMT4   END),0) AS NO_TOTAL_AMT_AFB740T
    ,NVL(SUM(CASE WHEN GUBUN = '4' THEN A.TOTAL_COUNT4    END),0) AS TOTAL_COUNT_AFB740T
    ,NVL(SUM(CASE WHEN GUBUN = '4' THEN A.TOTAL_AMT4      END),0) AS TOTAL_AMT_AFB740T
    
    ,NVL(SUM(CASE WHEN GUBUN = '5' THEN A.NO_TOTAL_COUNT5 END),0) AS NO_TOTAL_COUNT_AFB520T
    ,NVL(SUM(CASE WHEN GUBUN = '5' THEN A.NO_TOTAL_AMT5   END),0) AS NO_TOTAL_AMT_AFB520T
    ,NVL(SUM(CASE WHEN GUBUN = '5' THEN A.TOTAL_COUNT5    END),0) AS TOTAL_COUNT_AFB520T
    ,NVL(SUM(CASE WHEN GUBUN = '5' THEN A.TOTAL_AMT5      END),0) AS TOTAL_AMT_AFB520T
    
    ,NVL(SUM(CASE WHEN GUBUN = '6' THEN A.NO_TOTAL_COUNT6 END),0) AS NO_TOTAL_COUNT_AFB530T
    ,NVL(SUM(CASE WHEN GUBUN = '6' THEN A.NO_TOTAL_AMT6   END),0) AS NO_TOTAL_AMT_AFB530T
    ,NVL(SUM(CASE WHEN GUBUN = '6' THEN A.TOTAL_COUNT6    END),0) AS TOTAL_COUNT_AFB530T
    ,NVL(SUM(CASE WHEN GUBUN = '6' THEN A.TOTAL_AMT6      END),0) AS TOTAL_AMT_AFB530T
    
    ,NVL(SUM(CASE WHEN GUBUN = '7' THEN A.NO_TOTAL_COUNT7 END),0) AS NO_TOTAL_COUNT_AFB730T
    ,NVL(SUM(CASE WHEN GUBUN = '7' THEN A.NO_TOTAL_AMT7   END),0) AS NO_TOTAL_AMT_AFB730T
    ,NVL(SUM(CASE WHEN GUBUN = '7' THEN A.TOTAL_COUNT7    END),0) AS TOTAL_COUNT_AFB730T
    ,NVL(SUM(CASE WHEN GUBUN = '7' THEN A.TOTAL_AMT7      END),0) AS TOTAL_AMT_AFB730T

  FROM (

    SELECT
        '1'                     AS GUBUN
        ,COMP_CODE              AS COMP_CODE

        ,0                      AS NO_TOTAL_COUNT1
        ,0                      AS NO_TOTAL_AMT1
        ,COUNT(COMP_CODE)       AS TOTAL_COUNT1
        ,SUM(NVL(WON_AMT,0))         AS TOTAL_AMT1

        ,0                      AS NO_TOTAL_COUNT2
        ,0                      AS NO_TOTAL_AMT2
        ,0                      AS TOTAL_COUNT2
        ,0                      AS TOTAL_AMT2

        ,0                      AS NO_TOTAL_COUNT3
        ,0                      AS NO_TOTAL_AMT3
        ,0                      AS TOTAL_COUNT3
        ,0                      AS TOTAL_AMT3

        ,0                      AS NO_TOTAL_COUNT4
        ,0                      AS NO_TOTAL_AMT4
        ,0                      AS TOTAL_COUNT4
        ,0                      AS TOTAL_AMT4
        
        ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
        ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
        ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
        FROM AFB503T 
       WHERE COMP_CODE = #{S_COMP_CODE}
         AND DEPT_CODE = #{DEPT_CODE}
         AND SUBSTRING(AC_DATE, 1, 4) = #{AC_YEAR}

    GROUP BY COMP_CODE

    UNION ALL

    SELECT 
        B.*
      FROM(
        SELECT 
            '2'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,COUNT(COMP_CODE)       AS NO_TOTAL_COUNT2
            ,SUM(NVL(TOT_AMT_I,0))           AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                      AS NO_TOTAL_COUNT4
            ,0                      AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4
            
             ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            
            FROM AFB700T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(PAY_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS != '9'
        GROUP BY COMP_CODE

        UNION

        SELECT 
            '2'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,COUNT(COMP_CODE)       AS TOTAL_COUNT2
            ,SUM(NVL(TOT_AMT_I,0))   AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                      AS NO_TOTAL_COUNT4
            ,0                      AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4
            
             ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB700T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(PAY_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS = '9'
        GROUP BY COMP_CODE
        ) B
        
    UNION ALL

    SELECT 
        C.*
      FROM(
        SELECT 
            '3'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,COUNT(COMP_CODE)       AS NO_TOTAL_COUNT3
            ,SUM(NVL(TOT_AMT_I,0))           AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                      AS NO_TOTAL_COUNT4
            ,0                      AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4
            
             ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB800T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(IN_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS != '9'
        GROUP BY COMP_CODE

        UNION

        SELECT 
            '3'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,COUNT(COMP_CODE)       AS TOTAL_COUNT3
            ,SUM(NVL(TOT_AMT_I,0))   AS TOTAL_AMT3

            ,0                      AS NO_TOTAL_COUNT4
            ,0                      AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4
            
             ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB800T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(IN_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS = '9'
        GROUP BY COMP_CODE
    ) C

    UNION ALL

    SELECT 
        D.*
      FROM(
        SELECT 
            '4'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,COUNT(COMP_CODE)       AS NO_TOTAL_COUNT4
            ,SUM(NVL(EX_AMT,0))  AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4
            
             ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7

            FROM AFB740T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(EX_DATE, 1, 4) = #{AC_YEAR}
             AND AP_STS != '9'
        GROUP BY COMP_CODE

        UNION 
    
        SELECT 
            '4'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                      AS NO_TOTAL_COUNT4
            ,0                      AS NO_TOTAL_AMT4
            ,COUNT(COMP_CODE)       AS TOTAL_COUNT4
            ,SUM(NVL(EX_AMT,0))  AS TOTAL_AMT4


 ,0                      AS NO_TOTAL_COUNT5
        ,0                      AS NO_TOTAL_AMT5
        ,0                      AS TOTAL_COUNT5
        ,0                      AS TOTAL_AMT5
        
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB740T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(EX_DATE, 1, 4) = #{AC_YEAR}
             AND AP_STS = '9'
        GROUP BY COMP_CODE
        ) D
        
        
        
          UNION ALL

    SELECT 
        E.*
      FROM(
        SELECT 
            '5'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT5
            ,SUM(NVL(DIVERT_BUDG_I,0))  AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5
            
         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB520T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(DIVERT_YYYYMM, 1, 4) = #{AC_YEAR}
             AND AP_STS != '9'
        GROUP BY COMP_CODE

        UNION 
    
        SELECT 
            '5'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT5
            ,SUM(NVL(DIVERT_BUDG_I,0))  AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5

         ,0                      AS NO_TOTAL_COUNT6
        ,0                      AS NO_TOTAL_AMT6
        ,0                      AS TOTAL_COUNT6
        ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB520T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(DIVERT_YYYYMM, 1, 4) = #{AC_YEAR}
             AND AP_STS = '9'
        GROUP BY COMP_CODE
        ) E
        
        
             UNION ALL

    SELECT 
        F.*
      FROM(
        SELECT 
            '6'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,0                       AS NO_TOTAL_COUNT5
            ,0                       AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5
            
            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT6
            ,SUM(NVL(IWALL_AMT_I,0))  AS NO_TOTAL_AMT6
            ,0                      AS TOTAL_COUNT6
            ,0                      AS TOTAL_AMT6

         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB530T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(IWALL_YYYYMM, 1, 4) = #{AC_YEAR}
             AND STATUS != '9'
        GROUP BY COMP_CODE

        UNION 
    
        SELECT 
            '6'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,0                       AS NO_TOTAL_COUNT5
            ,0                       AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5
            
            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT6
            ,SUM(NVL(IWALL_AMT_I,0))  AS NO_TOTAL_AMT6
            ,0                      AS TOTAL_COUNT6
            ,0                      AS TOTAL_AMT6
        
         ,0                      AS NO_TOTAL_COUNT7
        ,0                      AS NO_TOTAL_AMT7
        ,0                      AS TOTAL_COUNT7
        ,0                      AS TOTAL_AMT7
            FROM AFB530T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(IWALL_YYYYMM, 1, 4) = #{AC_YEAR}
             AND STATUS = '9'
        GROUP BY COMP_CODE
        ) F
        
               UNION ALL

    SELECT 
        G.*
      FROM(
        SELECT 
            '7'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,0                       AS NO_TOTAL_COUNT5
            ,0                       AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5
            
            ,0                       AS NO_TOTAL_COUNT6
            ,0                       AS NO_TOTAL_AMT6
            ,0                      AS TOTAL_COUNT6
            ,0                      AS TOTAL_AMT6
            
            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT7
            ,SUM(NVL(EX_AMT,0))  AS NO_TOTAL_AMT7
            ,0                      AS TOTAL_COUNT7
            ,0                      AS TOTAL_AMT7
            FROM AFB730T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(EX_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS != '9'
        GROUP BY COMP_CODE

        UNION 
    
        SELECT 
            '7'                     AS GUBUN
            ,COMP_CODE              AS COMP_CODE

            ,0                      AS NO_TOTAL_COUNT1
            ,0                      AS NO_TOTAL_AMT1
            ,0                      AS TOTAL_COUNT1
            ,0                      AS TOTAL_AMT1

            ,0                      AS NO_TOTAL_COUNT2
            ,0                      AS NO_TOTAL_AMT2
            ,0                      AS TOTAL_COUNT2
            ,0                      AS TOTAL_AMT2

            ,0                      AS NO_TOTAL_COUNT3
            ,0                      AS NO_TOTAL_AMT3
            ,0                      AS TOTAL_COUNT3
            ,0                      AS TOTAL_AMT3

            ,0                       AS NO_TOTAL_COUNT4
            ,0                       AS NO_TOTAL_AMT4
            ,0                      AS TOTAL_COUNT4
            ,0                      AS TOTAL_AMT4

            ,0                       AS NO_TOTAL_COUNT5
            ,0                       AS NO_TOTAL_AMT5
            ,0                      AS TOTAL_COUNT5
            ,0                      AS TOTAL_AMT5
            
            ,0                       AS NO_TOTAL_COUNT6
            ,0                       AS NO_TOTAL_AMT6
            ,0                      AS TOTAL_COUNT6
            ,0                      AS TOTAL_AMT6
            
            ,COUNT(COMP_CODE)               AS NO_TOTAL_COUNT7
            ,SUM(NVL(EX_AMT,0))  AS NO_TOTAL_AMT7
            ,0                      AS TOTAL_COUNT7
            ,0                      AS TOTAL_AMT7
            FROM AFB730T 
           WHERE COMP_CODE = #{S_COMP_CODE}
             AND DEPT_CODE = #{DEPT_CODE}
             AND SUBSTRING(EX_DATE, 1, 4) = #{AC_YEAR}
             AND STATUS = '9'
        GROUP BY COMP_CODE
        ) G
        
    ) A
    GROUP BY A.COMP_CODE 

</select>		
			
<select id="s_afb960ukrkocisServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	
<if test="OPTION1 == &quot;1&quot;">
    SELECT 
        A.COMP_CODE
        ,A.DEPT_CODE  
        ,B.BUDG_NAME    AS BUDG_NAME_1--부문
        ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
        ,D.BUDG_NAME    AS BUDG_NAME_6--세목
        ,A.BUDG_CODE  
        ,A.WON_AMT      AS AMT
        ,A.REMARK      
        
      FROM AFB503T A  
 LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                    AND B.AC_YYYY   = SUBSTRING(A.AC_DATE,1,4)
                    AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
 LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                    AND C.AC_YYYY   = SUBSTRING(A.AC_DATE,1,4)
                    AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
 LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                    AND D.AC_YYYY   = SUBSTRING(A.AC_DATE,1,4)
                    AND D.BUDG_CODE = A.BUDG_CODE
                    
     WHERE A.COMP_CODE = #{S_COMP_CODE}
       AND A.DEPT_CODE = #{DEPT_CODE}
       AND SUBSTRING(A.AC_DATE, 1, 4) = #{AC_YEAR}
</if>       

<if test="OPTION1 == &quot;2&quot;">
      SELECT 
         A.COMP_CODE
         ,A.DEPT_CODE
         ,A.BUDG_CODE
         ,B.BUDG_NAME    AS BUDG_NAME_1--부문
         ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
         ,D.BUDG_NAME    AS BUDG_NAME_6--세목
         ,SUM(A.TOT_AMT_I)  AS AMT
         ,MAX(A1.TITLE)     AS REMARK
         FROM AFB710T A
   INNER JOIN AFB700T A1 ON A1.COMP_CODE = A.COMP_CODE
                        AND A1.PAY_DRAFT_NO = A.PAY_DRAFT_NO
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = SUBSTRING(A1.PAY_DATE,1,4)
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A1.PAY_DATE, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A1.STATUS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A1.STATUS != '9'
          </if>
          
GROUP BY A.COMP_CODE ,A.PAY_DRAFT_NO, A.DEPT_CODE ,A.BUDG_CODE, B.BUDG_NAME ,C.BUDG_NAME, D.BUDG_NAME          
</if>
<if test="OPTION1 == &quot;3&quot;">
      SELECT 
         A.COMP_CODE
         ,A.DEPT_CODE
         ,A.BUDG_CODE
         ,B.BUDG_NAME    AS BUDG_NAME_1--부문
         ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
         ,D.BUDG_NAME    AS BUDG_NAME_6--세목
         ,SUM(A.IN_AMT_I)   AS AMT
         ,MAX(A1.TITLE)     AS REMARK
        FROM AFB810T A
  INNER JOIN AFB800T A1 ON A1.COMP_CODE = A.COMP_CODE
                       AND A1.IN_DRAFT_NO = A.IN_DRAFT_NO
   LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                      AND B.AC_YYYY   = SUBSTRING(A1.IN_DATE,1,4)
                      AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
   LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                      AND C.AC_YYYY   = SUBSTRING(A1.IN_DATE,1,4)
                      AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
   LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                      AND D.AC_YYYY   = SUBSTRING(A1.IN_DATE,1,4)
                      AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A1.IN_DATE, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A1.STATUS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A1.STATUS != '9'
          </if>
GROUP BY A.COMP_CODE ,A.IN_DRAFT_NO, A.DEPT_CODE ,A.BUDG_CODE, B.BUDG_NAME ,C.BUDG_NAME, D.BUDG_NAME
</if>
<if test="OPTION1 == &quot;4&quot;">
          SELECT 
            A.COMP_CODE
           ,A.DEPT_CODE 
           ,A.BUDG_CODE
           ,B.BUDG_NAME    AS BUDG_NAME_1--부문
           ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
           ,D.BUDG_NAME    AS BUDG_NAME_6--세목
           ,A.EX_AMT       AS AMT
           ,A.REMARK       AS REMARK


         FROM AFB740T A 
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A.EX_DATE, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A.AP_STS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A.AP_STS != '9'
          </if>
</if>

<if test="OPTION1 == &quot;5&quot;">
          SELECT 
            A.COMP_CODE
           ,A.DEPT_CODE 
           ,A.BUDG_CODE
           ,B.BUDG_NAME    AS BUDG_NAME_1--부문
           ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
           ,D.BUDG_NAME    AS BUDG_NAME_6--세목
           ,A.DIVERT_BUDG_I       AS AMT
           ,A.REMARK       AS REMARK


         FROM AFB520T A 
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = SUBSTRING(A.DIVERT_YYYYMM,1,4)
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = SUBSTRING(A.DIVERT_YYYYMM,1,4)
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = SUBSTRING(A.DIVERT_YYYYMM,1,4)
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A.DIVERT_YYYYMM, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A.AP_STS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A.AP_STS != '9'
          </if>
</if>

<if test="OPTION1 == &quot;6&quot;">
       
SELECT 
            A.COMP_CODE
           ,A.DEPT_CODE 
           ,A.BUDG_CODE
           ,B.BUDG_NAME    AS BUDG_NAME_1--부문
           ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
           ,D.BUDG_NAME    AS BUDG_NAME_6--세목
           ,A.IWALL_AMT_I       AS AMT
           ,''       AS REMARK
           ,A.BUDG_GUBUN


         FROM AFB530T A 
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = SUBSTRING(A.IWALL_YYYYMM,1,4)
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = SUBSTRING(A.IWALL_YYYYMM,1,4)
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = SUBSTRING(A.IWALL_YYYYMM,1,4)
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A.IWALL_YYYYMM, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A.STATUS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A.STATUS != '9'
          </if>
</if>


<if test="OPTION1 == &quot;7&quot;">
       
SELECT 
            A.COMP_CODE
           ,A.DEPT_CODE 
           ,A.BUDG_CODE
           ,B.BUDG_NAME     AS BUDG_NAME_1--부문
           ,C.BUDG_NAME     AS BUDG_NAME_4--세부사업
           ,D.BUDG_NAME     AS BUDG_NAME_6--세목
           ,A.EX_AMT        AS AMT
           ,A.REMARK        AS REMARK


         FROM AFB730T A 
    LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                       AND B.AC_YYYY   = A.AC_YYYY
                       AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
    LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                       AND C.AC_YYYY   = A.AC_YYYY
                       AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
    LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                       AND D.AC_YYYY   = A.AC_YYYY
                       AND D.BUDG_CODE = A.BUDG_CODE

        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.DEPT_CODE = #{DEPT_CODE}
          AND SUBSTRING(A.EX_DATE, 1, 4) = #{AC_YEAR}
          <if test="OPTION2 == &quot;Y&quot;">
          AND A.STATUS = '9'
          </if>
          <if test="OPTION2 != &quot;Y&quot;">
          AND A.STATUS != '9'
          </if>
</if>


</select>
<select id="s_afb960ukrkocisServiceImpl.checkAFB910T" parameterType="Map" resultType="rMap">
    SELECT 
        DEPT_CODE
       ,AC_YYYY
      FROM AFB910T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND DEPT_CODE = #{DEPT_CODE}
       AND AC_YYYY   = #{AC_YYYY}
</select>


<insert id="s_afb960ukrkocisServiceImpl.insertClose" parameterType="Map">    
    INSERT INTO AFB910T
    (
         COMP_CODE
        ,DEPT_CODE
        ,AC_YYYY
        ,CLOSE_YYYYY
        ,INSERT_DB_USER
        ,INSERT_DB_TIME
        ,UPDATE_DB_USER
        ,UPDATE_DB_TIME
    )
    VALUES
    (
         #{S_COMP_CODE}
        ,#{DEPT_CODE}
        ,#{AC_YYYY}
        ,'Y'
        ,#{S_USER_ID}
        ,now()
        ,#{S_USER_ID}
        ,now() 
    )
</insert>
    
<update id="s_afb960ukrkocisServiceImpl.updateClose" parameterType="Map">   
    UPDATE AFB910T
       SET CLOSE_YYYYY    = 'Y'
         , UPDATE_DB_USER = #{S_USER_ID}
         , UPDATE_DB_TIME = now()
     WHERE COMP_CODE      = #{S_COMP_CODE}
       AND DEPT_CODE      = #{DEPT_CODE}
       AND AC_YYYY        = #{AC_YYYY}
</update>
</mapper>