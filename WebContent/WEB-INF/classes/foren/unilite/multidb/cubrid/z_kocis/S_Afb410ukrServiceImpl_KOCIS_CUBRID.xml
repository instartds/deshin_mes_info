<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_Afb410ukrServiceImpl_KOCIS">
    
<select id="s_Afb410ukrServiceImpl_KOCIS.selectList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">            /* 조회 */        
/* s_Afb410ukrServiceImpl_KOCIS.selectList */
SELECT S.BUDG_CODE                                 AS "id"
     , CASE WHEN NVL(S.CODE_LEVEL, '') = '1'    THEN 'root'            
            ELSE S.PARENT_NODE 
       END                                         AS "parentId"
     , 'true' as expanded
     , S.BUDG_CODE      AS BUDG_CODE
     , S.BUDG_NAME      AS BUDG_NAME
     , S.GROUP_YN       AS GROUP_YN
     , S.CODE_LEVEL     AS CODE_LEVEL
     , S.TREE_LEVEL     AS TREE_LEVEL
     , CASE WHEN NVL(S.ACCNT, '') IS NULL THEN S.ACCNT
            ELSE S.ACCNT
        END AS ACCNT
     , NVL(S.ACCNT_NAME, S.ACCNT_NAME) AS ACCNT_NAME
     , CASE WHEN NVL(S.PJT_CODE, '') IS NULL THEN S.PJT_CODE
            ELSE S.PJT_CODE
        END AS PJT_CODE
     , NVL(S.PJT_NAME, S.PJT_NAME) AS PJT_NAME
     , S.BUDG_TYPE      AS BUDG_TYPE
     , CASE WHEN NVL(S.USE_YN, 'N') IS NULL THEN 'N'
             WHEN S.GROUP_YN = 'Y' THEN ''
             ELSE S.USE_YN
        END AS USE_YN     
     , S.COMP_CODE      AS COMP_CODE
     , S.AC_YYYY        AS AC_YYYY
     , S.DEPT_CODE
     , S.INSERT_DB_USER AS INSERT_DB_USER
     , S.INSERT_DB_TIME AS INSERT_DB_TIME
     , S.UPDATE_DB_USER AS UPDATE_DB_USER
     , S.UPDATE_DB_TIME AS UPDATE_DB_TIME
  FROM (SELECT a.TREE_LEVEL "parent_node"
              ,a.*
              , NVL(C1.ACCNT_NAME, C2.ACCNT_NAME) AS ACCNT_NAME
              , NVL(D1.PJT_NAME, D2.PJT_NAME) AS PJT_NAME
              , NVL(B.USE_YN, 'N') AS USE_YN
              , B.DEPT_CODE
            FROM AFB400T A 
       LEFT JOIN AFB410T B 
              ON A.COMP_CODE = B.COMP_CODE
             AND A.AC_YYYY   = B.AC_YYYY
             AND A.BUDG_CODE = B.BUDG_CODE
             AND B.DEPT_CODE = #{DEPT_CODE}
       LEFT JOIN ABA400T C1 
              ON B.COMP_CODE = C1.COMP_CODE
             AND B.ACCNT     = C1.ACCNT
       LEFT JOIN ABA400T C2 
              ON A.COMP_CODE = C2.COMP_CODE
             AND A.ACCNT     = C2.ACCNT
       LEFT JOIN BCM600T D1 
              ON B.COMP_CODE = D1.COMP_CODE
             AND B.PJT_CODE  = D1.PJT_CODE
       LEFT JOIN BCM600T D2 
              ON A.COMP_CODE = D2.COMP_CODE
             AND A.PJT_CODE  = D2.PJT_CODE
 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.AC_YYYY   = #{AC_YYYY}
  <if test="@foren.Ognl@isNotEmpty(AC_GUBUN)">
   AND A.AC_GUBUN  = #{AC_GUBUN}
  </if>
   
   AND ((#{BUDG_TYPE} IS NULL) OR  (#{BUDG_TYPE} IS NOT NULL AND A.BUDG_TYPE = #{BUDG_TYPE}))
   <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
   AND A.BUDG_CODE  LIKE #{BUDG_CODE} + '%'
   </if>
   ) S
 ORDER BY S.BUDG_CODE
</select>    

<select id="s_Afb410ukrServiceImpl_KOCIS.selectAfb410tBeforeSave" parameterType="Map" resultType="rMap">        
/* s_Afb410ukrServiceImpl_KOCIS.selectAfb410tBeforeSave */
SELECT COUNT(BUDG_CODE) AS CNT
  FROM AFB410T  
WHERE COMP_CODE              = #{S_COMP_CODE}
  AND AC_YYYY                = #{AC_YYYY}
  AND DEPT_CODE              = #{DEPT_CODE}
  AND BUDG_CODE              = #{BUDG_CODE}    
</select>
    
<update id="s_Afb410ukrServiceImpl_KOCIS.update" parameterType="Map">
/* s_Afb410ukrServiceImpl_KOCIS.update */
UPDATE AFB410T
   SET ACCNT          = #{ACCNT}
     , PJT_CODE       = #{PJT_CODE}
     , USE_YN         = #{USE_YN}
     , INSERT_DB_USER = #{S_USER_ID}
     , INSERT_DB_TIME = NOW()
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = NOW()
     
 WHERE BUDG_CODE      = #{BUDG_CODE}
   AND COMP_CODE      = #{S_COMP_CODE}
   AND AC_YYYY        = #{AC_YYYY}
   AND DEPT_CODE      = #{S_DEPT_CODE}
  
</update>

<insert id="s_Afb410ukrServiceImpl_KOCIS.insert" parameterType="Map">
/* s_Afb410ukrServiceImpl_KOCIS.insert */
INSERT INTO AFB410T
     ( BUDG_CODE
     , ACCNT
     , PJT_CODE
     , USE_YN
     , COMP_CODE
     , AC_YYYY
     , DEPT_CODE
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     ) 
VALUES
     ( #{BUDG_CODE} 
     , #{ACCNT} 
     , #{PJT_CODE} 
     , #{USE_YN} 
     , #{S_COMP_CODE} 
     , #{AC_YYYY} 
     , #{S_DEPT_CODE} 
     , #{S_USER_ID} 
     , NOW()
     , #{S_USER_ID}
     , NOW()
     )
</insert>

<select id="s_Afb410ukrServiceImpl_KOCIS.selectAfb500tBeforeSave" parameterType="Map" resultType="rMap">            /* 500t조회(삭제전) */        
/* s_Afb410ukrServiceImpl_KOCIS.selectAfb500tBeforeSave */
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT 
      FROM AFB500T  
    WHERE COMP_CODE              = #{S_COMP_CODE}
      AND LEFT(BUDG_YYYYMM, 4)   = #{BUDG_YYYYMM}
      AND DEPT_CODE              = #{DEPT_CODE}
  <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
      AND BUDG_CODE              = #{BUDG_CODE}
  </if>
) WHERE RN = 1
</select>

<select id="s_Afb410ukrServiceImpl_KOCIS.selectAfb510tBeforeSave" parameterType="Map" resultType="rMap">            /* 510t조회(삭제전) */        
/* s_Afb410ukrServiceImpl_KOCIS.selectAfb510tBeforeSave */
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT 
      FROM AFB510T  
    WHERE COMP_CODE              = #{S_COMP_CODE}
      AND LEFT(BUDG_YYYYMM, 4)   = #{BUDG_YYYYMM}
      AND DEPT_CODE              = #{DEPT_CODE}
      AND BUDG_CODE              = #{BUDG_CODE}
) WHERE RN = 1
</select>

<delete id="s_Afb410ukrServiceImpl_KOCIS.delete" parameterType="Map">            /* 삭제 */
--afb410ukr.Cafb410UKR[fnAfb410Save] Query01
DELETE FROM AFB410T 
 WHERE BUDG_CODE = #{BUDG_CODE}
   AND COMP_CODE = #{S_COMP_CODE}
   AND AC_YYYY   = #{AC_YYYY}
   AND DEPT_CODE = #{S_DEPT_CODE}
</delete> 

<insert id="s_Afb410ukrServiceImpl_KOCIS.insertDataCopy" parameterType="Map">            /* 타부서복사 버튼 복사 */
/* s_Afb410ukrServiceImpl_KOCIS.insertDataCopy */
DELETE FROM AFB410T
      WHERE COMP_CODE = #{S_COMP_CODE}
        AND AC_YYYY   = #{AC_YYYY}
        AND DEPT_CODE = #{DEPT_CODE_TO}

INSERT INTO AFB410T
          ( COMP_CODE,    AC_YYYY,         DEPT_CODE,       BUDG_CODE,      ACCNT, PJT_CODE
          , USE_YN,       INSERT_DB_USER,  INSERT_DB_TIME,  UPDATE_DB_USER, UPDATE_DB_TIME
          )
    (SELECT COMP_CODE,    #{AC_YYYY} AS AC_YYYY, #{DEPT_CODE_TO} AS DEPT_CODE, BUDG_CODE, ACCNT, PJT_CODE
          , USE_YN,       #{S_USER_ID},  NOW() AS INSERT_DB_TIME, #{S_USER_ID}, NOW() AS UPDATE_DB_TIME
       FROM AFB410T  
      WHERE COMP_CODE = #{S_COMP_CODE}
        AND AC_YYYY   = #{AC_YYYY}
        AND DEPT_CODE = #{DEPT_CODE_FR}
    )
<selectKey keyProperty="idx" resultType="double" order="AFTER">
select 1 AS idx
</selectKey>

</insert>

<delete id="s_Afb410ukrServiceImpl_KOCIS.deleteDataCopy" parameterType="Map">            /* 타부서복사 버튼 삭제 */
/* s_Afb410ukrServiceImpl_KOCIS.deleteDataCopy */
DELETE FROM AFB410T
      WHERE COMP_CODE = #{S_COMP_CODE}
        AND AC_YYYY   = #{AC_YYYY}
        AND DEPT_CODE =#{DEPT_CODE_TO}
</delete>
    
</mapper>