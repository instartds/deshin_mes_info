<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_Afb400ukrServiceImpl_KOCIS">
    
<select id="s_Afb400ukrServiceImpl_KOCIS.selectList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">            /* 조회 */        

SELECT S.BUDG_CODE              AS "id"
     , CASE WHEN NVL(S.PARENT_NODE, '') IS NULL THEN 'root'
            ELSE S.PARENT_NODE 
       END                      AS "parentId"
     , S.BUDG_CODE              AS BUDG_CODE
     , S.BUDG_NAME              AS BUDG_NAME
     , S.GROUP_YN               AS GROUP_YN
--     , S.ACCNT                  AS ACCNT
--     , S.ACCNT_NAME             AS ACCNT_NAME
     , S.CTL_CAL_UNIT           AS CTL_CAL_UNIT
     , S.CTL_TERM_UNIT          AS CTL_TERM_UNIT
     , S.BUDGCTL_SUM_UNIT       AS BUDGCTL_SUM_UNIT
--     , S.PJT_CODE               AS PJT_CODE
--     , S.PJT_NAME               AS PJT_NAME
      <if test="BUDG_TYPE == &quot;1&quot;">
     , '1'                      AS BUDG_TYPE
     </if>
     <if test="BUDG_TYPE == &quot;2&quot;">
     , '2'                      AS BUDG_TYPE
     </if>
     , S.IF_CODE                AS IF_CODE 
     , S.COMP_CODE              AS COMP_CODE 
     , S.AC_YYYY                AS AC_YYYY
     , S.CODE_LEVEL             AS LEVEL_TOP
     , S.CODE_LEVEL             AS CODE_LEVEL
     , S.TREE_LEVEL             AS TREE_LEVEL
     , NVL(CASE WHEN S.CODE_LEVEL = 1 THEN NVL(S.LEVEL_NUM1, 0)
            WHEN S.CODE_LEVEL = 2 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)
            WHEN S.CODE_LEVEL = 3 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)
            WHEN S.CODE_LEVEL = 4 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
            WHEN S.CODE_LEVEL = 5 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)
            WHEN S.CODE_LEVEL = 6 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)
            WHEN S.CODE_LEVEL = 7 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)+ NVL(S.LEVEL_NUM7, 0)
            WHEN S.CODE_LEVEL = 8 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)+ NVL(S.LEVEL_NUM7, 0)+ NVL(S.LEVEL_NUM8, 0)
       END, 2) AS LEVEL_LEN
     , NVL(S.LEVEL_NUM1, 0)         AS LEVEL_NUM1
     , NVL(S.LEVEL_NUM2, 0)         AS LEVEL_NUM2
     , NVL(S.LEVEL_NUM3, 0)         AS LEVEL_NUM3
     , NVL(S.LEVEL_NUM4, 0)         AS LEVEL_NUM4
     , NVL(S.LEVEL_NUM5, 0)         AS LEVEL_NUM5
     , NVL(S.LEVEL_NUM6, 0)         AS LEVEL_NUM6
     , NVL(S.LEVEL_NUM7, 0)         AS LEVEL_NUM7
     , NVL(S.LEVEL_NUM8, 0)         AS LEVEL_NUM8
     , S.INSERT_DB_USER             AS INSERT_DB_USER
     , S.INSERT_DB_TIME             AS INSERT_DB_TIME
     , S.UPDATE_DB_USER             AS UPDATE_DB_USER
     , S.UPDATE_DB_TIME             AS UPDATE_DB_TIME
  FROM (SELECT a.TREE_LEVEL     AS "parent_node"         
            ,a.*
  --          , C.ACCNT_NAME
            , C.BUDGCTL_SUM_UNIT
  --          , D.PJT_NAME 
            ,B.LEVEL_NUM1
            ,B.LEVEL_NUM2
            ,B.LEVEL_NUM3
            ,B.LEVEL_NUM4
            ,B.LEVEL_NUM5
            ,B.LEVEL_NUM6
            ,B.LEVEL_NUM7
            ,B.LEVEL_NUM8
        FROM     AFB400T A 
       LEFT JOIN AFB300T B 
              ON A.COMP_CODE = B.COMP_CODE
             AND A.AC_YYYY   = B.AC_YYYY
       LEFT JOIN ABA400T C 
              ON A.COMP_CODE = C.COMP_CODE
             AND A.ACCNT     = C.ACCNT
       LEFT JOIN BCM600T D 
              ON A.COMP_CODE = D.COMP_CODE
             AND A.PJT_CODE  = D.PJT_CODE
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.AC_YYYY   = #{AC_YYYY}
  AND A.BUDG_CODE = '01'
  )  s
 
 UNION ALL
 
SELECT  S.BUDG_CODE        AS "id"
     , CASE WHEN NVL(S.PARENT_NODE, '') IS NULL THEN 'root'            
            ELSE S.PARENT_NODE 
       END "parentId"
     , S.BUDG_CODE      AS BUDG_CODE
     , S.BUDG_NAME      AS BUDG_NAME
     , S.GROUP_YN       AS GROUP_YN
--     , S.ACCNT          AS ACCNT
--     , S.ACCNT_NAME     AS ACCNT_NAME
     , S.CTL_CAL_UNIT   AS CTL_CAL_UNIT
     , S.CTL_TERM_UNIT  AS CTL_TERM_UNIT
     , S.BUDGCTL_SUM_UNIT   AS BUDGCTL_SUM_UNIT
--     , S.PJT_CODE       AS PJT_CODE
--     , S.PJT_NAME       AS PJT_NAME
     , S.BUDG_TYPE      AS BUDG_TYPE
     , S.IF_CODE        AS IF_CODE
     , S.COMP_CODE      AS COMP_CODE
     , S.AC_YYYY        AS AC_YYYY
     , S.CODE_LEVEL     AS LEVEL_TOP
     , S.CODE_LEVEL     AS CODE_LEVEL
     , S.TREE_LEVEL     AS TREE_LEVEL
     , NVL(CASE WHEN S.CODE_LEVEL = 1 THEN NVL(S.LEVEL_NUM1, 0)
            WHEN S.CODE_LEVEL = 2 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)
            WHEN S.CODE_LEVEL = 3 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)
            WHEN S.CODE_LEVEL = 4 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
            WHEN S.CODE_LEVEL = 5 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)
            WHEN S.CODE_LEVEL = 6 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(S.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)
            WHEN S.CODE_LEVEL = 7 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(s.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)+ NVL(s.LEVEL_NUM7, 0)
            WHEN S.CODE_LEVEL = 8 THEN NVL(S.LEVEL_NUM1, 0)+ NVL(S.LEVEL_NUM2, 0)+ NVL(s.LEVEL_NUM3, 0)+ NVL(S.LEVEL_NUM4, 0)
                                     + NVL(S.LEVEL_NUM5, 0)+ NVL(S.LEVEL_NUM6, 0)+ NVL(s.LEVEL_NUM7, 0)+ NVL(S.LEVEL_NUM8, 0)
       END, 2) AS LEVEL_LEN
     , NVL(S.LEVEL_NUM1, 0)  AS LEVEL_NUM1
     , NVL(S.LEVEL_NUM2, 0)  AS LEVEL_NUM2
     , NVL(S.LEVEL_NUM3, 0)  AS LEVEL_NUM3
     , NVL(S.LEVEL_NUM4, 0)  AS LEVEL_NUM4
     , NVL(S.LEVEL_NUM5, 0)  AS LEVEL_NUM5
     , NVL(S.LEVEL_NUM6, 0)  AS LEVEL_NUM6
     , NVL(S.LEVEL_NUM7, 0)  AS LEVEL_NUM7
     , NVL(S.LEVEL_NUM8, 0)  AS LEVEL_NUM8
     , S.INSERT_DB_USER AS INSERT_DB_USER
     , S.INSERT_DB_TIME AS INSERT_DB_TIME
     , S.UPDATE_DB_USER AS UPDATE_DB_USER
     , S.UPDATE_DB_TIME AS UPDATE_DB_TIME
  FROM (SELECT a.TREE_LEVEL AS "parent_node"
                ,a.*
--                ,C.ACCNT_NAME
                ,C.BUDGCTL_SUM_UNIT
--                ,D.PJT_NAME
                ,B.LEVEL_NUM1
                ,B.LEVEL_NUM2
                ,B.LEVEL_NUM3
                ,B.LEVEL_NUM4
                ,B.LEVEL_NUM5
                ,B.LEVEL_NUM6
                ,B.LEVEL_NUM7
                ,B.LEVEL_NUM8
            FROM AFB400T A 
       LEFT JOIN AFB300T B 
              ON A.COMP_CODE = B.COMP_CODE
             AND A.AC_YYYY   = B.AC_YYYY
       LEFT JOIN ABA400T C 
              ON A.COMP_CODE = C.COMP_CODE
             AND A.ACCNT     = C.ACCNT
       LEFT JOIN BCM600T D 
              ON A.COMP_CODE = D.COMP_CODE
             AND A.PJT_CODE  = D.PJT_CODE
 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.AC_YYYY   = #{AC_YYYY}
   AND ((#{BUDG_TYPE} IS NULL) OR  (#{BUDG_TYPE} IS NOT NULL AND A.BUDG_TYPE = #{BUDG_TYPE}))
   AND A.AC_GUBUN  = #{AC_GUBUN}
)  s
ORDER BY s.BUDG_CODE 
</select>                
    
<select id="s_Afb400ukrServiceImpl_KOCIS.selectCheck" parameterType="Map" resultType="rMap">            
--afb400ukr.Cafb400ukr[fnafb400Save] Query02
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT
    FROM    AFB400T 
    WHERE   COMP_CODE = #{S_COMP_CODE}
      AND   AC_YYYY   = #{AC_YYYY}
) WHERE RN = 1
</select>
        
<select id="s_Afb400ukrServiceImpl_KOCIS.selectCheck2" parameterType="Map" resultType="rMap">
--afb400ukr.Cafb400ukr[fnafb400CheckQ2] Query01

SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT 
      FROM AFB410T  
    WHERE COMP_CODE = #{S_COMP_CODE}
      AND AC_YYYY   = #{AC_YYYY}
      AND BUDG_CODE = #{BUDG_CODE}
) WHERE RN = 1
</select>    

<select id="s_Afb400ukrServiceImpl_KOCIS.checkPK" parameterType="Map" resultType="rMap">
/* s_Afb400ukrServiceImpl_KOCIS.checkPK */
SELECT COUNT(BUDG_CODE) AS CNT
FROM AFB400T   
WHERE COMP_CODE = #{S_COMP_CODE}
  AND AC_YYYY   = #{AC_YYYY}
  AND BUDG_CODE = #{BUDG_CODE}
</select>
                    
<insert id="s_Afb400ukrServiceImpl_KOCIS.insert" parameterType="Map">         /* 추가 */       
--afb400ukr.Cafb400ukr[fnAfb400Save] Query02
INSERT INTO AFB400T
     ( BUDG_CODE
     , BUDG_NAME
     , GROUP_YN
     , ACCNT
     , CTL_CAL_UNIT
     , CTL_TERM_UNIT
     , PJT_CODE
     , BUDG_TYPE
     , IF_CODE
     , COMP_CODE
     , AC_YYYY
     , CODE_LEVEL
     , TREE_LEVEL
     , AC_GUBUN
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     ) 
VALUES
     ( #{BUDG_CODE}      
     , #{BUDG_NAME}      
     , #{GROUP_YN}       
     , #{ACCNT}          
     , '1' 
     , '4' 
     , #{PJT_CODE}       
     , #{BUDG_TYPE}  
     , #{IF_CODE}    
     , #{S_COMP_CODE}      
     , #{AC_YYYY}        
     , #{CODE_LEVEL}     
     , #{TREE_LEVEL}     
     , #{AC_GUBUN}
     , #{S_USER_ID} 
     , now()
     , #{S_USER_ID} 
     , now()
     )
</insert>

<update id="s_Afb400ukrServiceImpl_KOCIS.update" parameterType="Map">            /* 수정 */
--afb400ukr.Cafb400ukr[fnAfb400Save] Query02
UPDATE AFB400T
   SET BUDG_NAME      = #{BUDG_NAME}
     , GROUP_YN       = #{GROUP_YN}
     , ACCNT          = #{ACCNT}
     , CTL_CAL_UNIT   = #{CTL_CAL_UNIT}
     , CTL_TERM_UNIT  = #{CTL_TERM_UNIT}
     , PJT_CODE       = #{PJT_CODE}
     , BUDG_TYPE      = #{BUDG_TYPE}
     , IF_CODE        = #{IF_CODE}
     , CODE_LEVEL     = #{CODE_LEVEL}
     , TREE_LEVEL     = #{TREE_LEVEL}
     , INSERT_DB_USER = #{S_USER_ID}
     , INSERT_DB_TIME = now()
     , UPDATE_DB_USER = #{S_USER_ID}
     , UPDATE_DB_TIME = now()
     
 WHERE BUDG_CODE      = #{BUDG_CODE}
   AND COMP_CODE      = #{S_COMP_CODE}
   AND AC_YYYY        = #{AC_YYYY}
</update>

<select id="s_Afb400ukrServiceImpl_KOCIS.selectAfb410tBeforeSave" parameterType="Map" resultType="rMap">            /* 410t조회(삭제전) */        
--afb400ukr.Cafb400ukr[fnafb400CheckQ2] Query01
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT
    FROM    AFB410T 
   WHERE COMP_CODE = #{S_COMP_CODE}
     AND AC_YYYY   = #{AC_YYYY}
     AND BUDG_CODE = #{BUDG_CODE}
) WHERE RN = 1

</select>

<delete id="s_Afb400ukrServiceImpl_KOCIS.delete" parameterType="Map">            /* 삭제 */
--afb400ukr.Cafb400ukr[fnAfb400Save] Query01
DELETE FROM AFB400T 
 WHERE BUDG_CODE = #{BUDG_CODE}
   AND COMP_CODE = #{S_COMP_CODE}
   AND AC_YYYY   = #{AC_YYYY}
  
</delete>

<select id="s_Afb400ukrServiceImpl_KOCIS.selectAfb400t" parameterType="Map" resultType="rMap">            /* 400t조회 */            
--afb400ukr.Cafb400ukr[fnafb400CheckQ] Query01
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT
      FROM    AFB400T 
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND AC_YYYY   = #{AC_YYYY_NEXT}
) WHERE RN = 1
</select>

<select id="s_Afb400ukrServiceImpl_KOCIS.selectAfb410t" parameterType="Map" resultType="rMap">            /* 410t조회 */        
--afb400ukr.Cafb400ukr[fnafb400CheckQ1] Query01
SELECT 1
  FROM (
    SELECT ROWNUM RN, 1 AS CNT
      FROM    AFB410T 
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND AC_YYYY   = #{AC_YYYY_NEXT}
) WHERE RN = 1
</select>

<insert id="s_Afb400ukrServiceImpl_KOCIS.insertDataCopy" parameterType="Map">        /* 전년도자료복사 */
--afb400ukr.Cafb400ukr[fnafb400Copy] Query01
        DELETE FROM AFB400T
              WHERE COMP_CODE = #{S_COMP_CODE}
                AND AC_YYYY   = #{AC_YYYY_NEXT}
    
        INSERT INTO AFB400T
                  ( COMP_CODE,    AC_YYYY,       BUDG_CODE,       BUDG_NAME,      ACCNT
                  , CTL_CAL_UNIT, CTL_TERM_UNIT, PJT_CODE,        BUDG_TYPE,      GROUP_YN
                  , CODE_LEVEL,   TREE_LEVEL,    IF_CODE,         INSERT_DB_USER,  INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
                  )
            (SELECT COMP_CODE,      #{AC_YYYY_NEXT},          BUDG_CODE,       BUDG_NAME, ACCNT
                  , CTL_CAL_UNIT,   CTL_TERM_UNIT,            PJT_CODE,        BUDG_TYPE, GROUP_YN
                  , CODE_LEVEL,     TREE_LEVEL,               IF_CODE,         #{S_USER_ID},  now() AS INSERT_DB_TIME, #{S_USER_ID}, now() AS UPDATE_DB_TIME
               FROM AFB400T  
              WHERE COMP_CODE = #{S_COMP_CODE}
                AND AC_YYYY   = #{AC_YYYY_THIS}
            )
        <selectKey keyProperty="idx" resultType="double" order="AFTER">
        select 1 AS idx
        </selectKey>
</insert>

<delete id="s_Afb400ukrServiceImpl_KOCIS.deleteDataCopy" parameterType="Map">            /* 전년도자료삭제 */
--afb400ukr.Cafb400ukr[fnafb400DetAll] Query01
    DELETE FROM AFB400T
          WHERE COMP_CODE = #{S_COMP_CODE}
            AND AC_YYYY   = #{AC_YYYY_NEXT}
</delete>
    
</mapper>