<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa350ukrvServiceImpl">
					
<select id="bsa350ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
BEGIN

SET NOCOUNT ON
SET ARITHABORT ON

/*bsa350ukrv.Cbsa350ukrv[fnBsa350Q]Query01*/
 SELECT A.COMP_CODE
      , A.USER_ID
      , A.USER_NAME
      , '********' AS PASSDISP
      , '*' AS PASSWORD
      , A.UNILITE_USER_ID
      , B.USER_NAME AS UNILITE_USER_NAME
      , A.PERSON_NUMB
      , A.CUSTOM_CODE
      , C.CUSTOM_NAME
      , A.DIV_CODE
      , A.USER_LEVEL
      , A.USE_YN
      , A.REMARK
      , A.UPDATE_DB_USER
      , A.UPDATE_DB_TIME
      , A.PWD_UPDATE_DB_TIME
   FROM      BSA350T A WITH(NOLOCK)
   LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                   AND B.USER_ID     = A.UNILITE_USER_ID
   LEFT JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                   AND C.CUSTOM_CODE = A.CUSTOM_CODE
  WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID LIKE #{USER_ID} + '%'
   AND A.USER_NAME LIKE #{USER_NAME} + '%'
  ORDER BY A.COMP_CODE, A.USER_ID
  
 


SET NOCOUNT OFF
SET ARITHABORT OFF

END
</select>
	
	
<insert id="bsa350ukrvServiceImpl.insertDetail" parameterType="Map">    	
   /*bsa350ukrv.Cbsa350ukrv[fnBsa350Save]Query01*/
               INSERT BSA350T
                    ( COMP_CODE
                    , USER_ID
                    , USER_NAME
                    , PASSWORD
                    , UNILITE_USER_ID
                    , PERSON_NUMB
                    , CUSTOM_CODE
                    , DIV_CODE
                    , USER_LEVEL
                    , USE_YN
                    , REMARK
                    , INSERT_DB_USER
                    , INSERT_DB_TIME
                    , UPDATE_DB_USER
                    , UPDATE_DB_TIME
                    , PWD_UPDATE_DB_TIME
                    )
               VALUES
                    ( #{S_COMP_CODE}       
                    , #{USER_ID}         
                    , #{USER_NAME}       
                    , PWDENCRYPT(#{PASSWORD})       
                    , #{UNILITE_USER_ID} 
                    , #{PERSON_NUMB}     
                    , #{CUSTOM_CODE}     
                    , #{DIV_CODE}        
                    , #{USER_LEVEL}      
                    , #{USE_YN}          
                    , #{REMARK}          
                    , #{S_USER_ID}
                    , NOW()
                    , #{S_USER_ID}
                    , NOW()
                    , NOW()
                    )
</insert>
<insert id="bsa350ukrvServiceImpl.insertDetail2" parameterType="Map">    	
               INSERT BSA301T
                    ( COMP_CODE
                    , USER_ID
                    , PASSWORD
                    , INSERT_DB_USER
                    , INSERT_DB_TIME
                    , UPDATE_DB_USER
                    , UPDATE_DB_TIME
                    )
               VALUES
                    ( #{S_COMP_CODE}       
                    , #{USER_ID}         
                    , uniLITE.fnCipherEncrypt(#{PASSWORD},'')       
                    , #{S_USER_ID}
                    , NOW()
                    , #{S_USER_ID}
                    , NOW()
                    )
</insert>	

<update id="bsa350ukrvServiceImpl.updateDetail" parameterType="Map">		
/*bsa350ukrv.Cbsa350ukrv[fnBsa350Save]Query02*/
                UPDATE BSA350T SET 
                	USER_NAME   = #{USER_NAME}
                	
                  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                  , PERSON_NUMB = #{PERSON_NUMB}
                  </if>
                
                <if test="PASSWORD != &quot;*&quot;">
                  , PASSWORD        = PWDENCRYPT(#{PASSWORD})
                </if>
     			   <if test="@foren.Ognl@isNotEmpty(UNILITE_USER_ID)"> 
                   , UNILITE_USER_ID = #{UNILITE_USER_ID}
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
	               , CUSTOM_CODE     = #{CUSTOM_CODE}
                   </if>
	               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
	               , DIV_CODE        = #{DIV_CODE}
	               </if>
	               <if test="@foren.Ognl@isNotEmpty(USER_LEVEL)"> 
	               , USER_LEVEL      = #{USER_LEVEL}
	               </if>
	               
	               , USE_YN          = #{USE_YN}
	               
	               <if test="@foren.Ognl@isNotEmpty(REMARK)">  
	               , REMARK          = #{REMARK}
	               </if>
	               , UPDATE_DB_USER = #{S_USER_ID}
                   , UPDATE_DB_TIME = NOW()
               
               WHERE COMP_CODE = #{COMP_CODE}
                	AND USER_ID   = #{USER_ID}
</update>
<update id="bsa350ukrvServiceImpl.updateDetail2" parameterType="Map">		
                UPDATE BSA301T SET 
                
                <if test="PASSWORD != &quot;*&quot;">
                   PASSWORD        = uniLITE.fnCipherEncrypt(#{PASSWORD},''),
                </if>
     			  
	               UPDATE_DB_USER  = #{S_USER_ID},
	               UPDATE_DB_TIME  = NOW()
               WHERE COMP_CODE = #{COMP_CODE}
                	AND USER_ID   = #{USER_ID}
</update>
<update id="bsa350ukrvServiceImpl.deleteDetail" parameterType="Map">
	DELETE FROM BSA350T 
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND USER_ID   = #{USER_ID}
</update>
<update id="bsa350ukrvServiceImpl.deleteDetail2" parameterType="Map">
	DELETE FROM BSA301T 
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND USER_ID   = #{USER_ID}
</update>

<select id="bsa350ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  
		           LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
</mapper>