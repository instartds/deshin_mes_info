<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb800ukrServiceImpl">
	
<select id="afb800ukrServiceImpl.selectRefCode" parameterType="Map" resultType="rMap">	
	--afb600ukr.Cafb600ukr[fnGetReturnCode] Query01
	SELECT  CODE_NAME               AS CODE_NAME
	     ,  SUB_CODE                AS SUB_CODE
	     ,  NVL(REF_CODE5, '')   AS REF_CODE5
	     ,  NVL(REF_CODE6, '')   AS REF_CODE6
	FROM    BSA100T  
	WHERE   COMP_CODE = #{S_COMP_CODE}
	AND     MAIN_CODE = 'A171'
	AND     SUB_CODE  = #{ACCNT_GUBUN}
</select>
	
<select id="afb800ukrServiceImpl.selectCheck1" parameterType="Map" resultType="rMap">
	--afb800ukr.Cafb800ukr[fnAfb800Qstd] QUERY04
SELECT  MAX(MAPPING) MAPPING, MAX(GWIF) GWIF, MAX(DRAFT_REF) DRAFT_REF, MAX(CRDT_REF) CRDT_REF
FROM    (
        SELECT  CASE WHEN SUB_CODE = '10' THEN REF_CODE1 ELSE '' END    AS MAPPING      --지출관리 아이디와 1:1 Mapping
              , CASE WHEN SUB_CODE = '21' THEN REF_CODE1 ELSE '' END    AS GWIF         --수입결의 그룹웨어 연동여부
              , CASE WHEN SUB_CODE = '40' THEN REF_CODE1 ELSE '' END    AS DRAFT_REF    --예산기안참조 필수여부
              , CASE WHEN SUB_CODE = '50' THEN REF_CODE1 ELSE '' END    AS CRDT_REF     --법인카드참조 필수여부
        FROM    BSA100T 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     MAIN_CODE   = 'A169'
        AND     SUB_CODE   IN ('10', '21', '40', '50')
        ) T

	
</select>

<select id="afb800ukrServiceImpl.selectCheck2" parameterType="Map" resultType="rMap">
	--afb800ukr.Cafb800ukr[fnAfb700Qstd] QUERY05
	select * from (
        SELECT  SUB_CODE AS ACCNT_GUBUN
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A171'
    	AND     REF_CODE1   = 'Y'
    	AND    (REF_CODE2   = '0'  OR  REF_CODE2   = '2')
    )  TOPT where rownum = 1
	
</select>

<select id="afb800ukrServiceImpl.selectCheck3" parameterType="Map" resultType="rMap">
	--afb800ukr.Cafb800ukr[fnAfb700Qstd] QUERY07
	select * from (
        SELECT  SUB_CODE AS CHARGE_CODE, REF_CODE2 AS CHARGE_DIVI
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A009'
    	AND     REF_CODE1   = #{S_USER_ID}
    )  TOPT where rownum = 1
</select>

<select id="afb800ukrServiceImpl.selectCheck4" parameterType="Map" resultType="rMap">
		--afb600ukr.Cafb600ukr[fnAfb600Qstd] QUERY05
	SELECT  A.PERSON_NUMB, B.NAME
	      , NVL(C.BUDG_TREE_CODE, B.DEPT_CODE) DEPT_CODE, NVL(C1.TREE_NAME, B.DEPT_NAME) DEPT_NAME, B.DIV_CODE
	FROM                BSA300T   A  
	        LEFT  JOIN  HUM100T   B   ON B.COMP_CODE   = A.COMP_CODE
	                                              AND B.PERSON_NUMB = A.PERSON_NUMB
	        LEFT  JOIN  BSA210T   C   ON C.COMP_CODE   = B.COMP_CODE
	                                              AND C.TREE_CODE   = B.DEPT_CODE
	        LEFT  JOIN  BSA210T   C1  ON C1.COMP_CODE  = C.COMP_CODE
	                                              AND C1.TREE_CODE  = C.BUDG_TREE_CODE
	WHERE   A.COMP_CODE = #{S_COMP_CODE}
	AND     A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb800ukrServiceImpl.selectCheck5" parameterType="Map" resultType="rMap">
		--afb800ukr.Cafb800ukr[fnAfb700Qstd] QUERY09
	select * from (
        SELECT  SUB_CODE
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A179'
    	AND     SUB_CODE    = #{S_USER_ID}
    )
</select>

<select id="afb800ukrServiceImpl.selectCheck6" parameterType="Map" resultType="rMap">
	
	--afb800ukr.Cafb800ukr[fnAfb800Qstd] QUERY10
	select * from (
        SELECT  SUB_CODE AS BILL_GUBUN
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A183'
    	AND     REF_CODE1   = 'Y'
    )
</select>

<select id="afb800ukrServiceImpl.selectCheck7" parameterType="Map" resultType="rMap">
	--afb800ukr.Cafb800ukr[fnAfb800Qstd] QUERY11
	select * from (
        SELECT  SUB_CODE AS BILL_REMARK
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A185'
    	AND     REF_CODE1   = 'Y'
    )  TOPT where rownum = 1

</select>

<select id="afb800ukrServiceImpl.selectCheck8" parameterType="Map" resultType="rMap">
	--afb800ukr.Cafb800ukr[fnAfb700Qstd] QUERY12
SELECT  MAX(PATH_INFO_1) + MAX(PATH_INFO_2) PATH_INFO_1
     ,  MAX(PATH_INFO_3) PATH_INFO_3
     ,  MAX(PATH_INFO_4) PATH_INFO_4
FROM    (
        SELECT  CASE WHEN SUB_CODE = '1' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_1 
              , CASE WHEN SUB_CODE = '2' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_2
              , CASE WHEN SUB_CODE = '3' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_3
              , CASE WHEN SUB_CODE = '4' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_4
        FROM    BSA100T 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     MAIN_CODE   = 'A198'
        AND     SUB_CODE   IN ('1', '2', '3', '4')
        ) T
</select>			


<select id="afb800ukrServiceImpl.fnCheckPassword" parameterType="Map" resultType="rMap">
<!-- BEGIN -->


    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @DRAFTER            = #{DRAFTER_PN}

--  [ 지출관리 아이디와 1:1 매핑여부 설정 ] ---------------------------------------------------------------------------
    <!-- DECLARE         @isIdMapping        NVARCHAR(01) -->

    DO(
        select * from (
            SELECT  @isIdMapping := REF_CODE1
            FROM    BSA100T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND     MAIN_CODE   = 'A169'
            AND     SUB_CODE    = '10'
        )  TOPT where rownum = 1
    )

    SET @isIdMapping = NVL(@isIdMapping, 'N')

--  [ 주민번호 체크여부 설정 및 주민번호 리턴] ------------------------------------------------------------------------
    IF      ( @isIdMapping = 'Y' )
        BEGIN
            SELECT  'N' CHECK_PASSWORD, '' REPRE_NUM
        END
    ELSE IF ( @isIdMapping = 'N' )
        BEGIN
            SELECT  'Y' CHECK_PASSWORD, fnCipherDecrypt(REPRE_NUM,'') REPRE_NUM
            FROM    HUM100T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND     PERSON_NUMB = @DRAFTER
        END
<!-- END -->
</select>



<select id="afb800ukrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
   --afb800ukr.Cafb800ukr[fnAfb800Qstd] QUERY01
    <!-- BEGIN -->

    
    --  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @IN_DRAFT_NO    = #{IN_DRAFT_NO}
        SET @GWIF_TYPE      = '2'
    
    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        <!-- DECLARE         @DateFormat         NVARCHAR(10) -->
        
        SET @DateFormat = ''
        
        DO(
            SELECT * FROM (
                SELECT @DateFormat := M1.CODE_NAME
                FROM   BSA100T M1 
                WHERE  M1.COMP_CODE = @COMP_CODE
                AND    M1.MAIN_CODE = 'B044'
                AND    M1.REF_CODE1 = 'Y'
            ) TOPT where rownum = 1
        )
    
        SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')
    
    --  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
        <!-- DECLARE         @LinkedGW           NVARCHAR(01) -->
        
        SET @LinkedGW = ''
        
        DO(
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        ) TOPT where rownum = 1
        )
    
        SET @LinkedGW = NVL(@LinkedGW, 'N')
    
    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
        SELECT  A.COMP_CODE
              , A.IN_DRAFT_NO
              , REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTR(A.IN_DATE , 1, 4))
                                   , 'MM'  , SUBSTR(A.IN_DATE , 5, 2))
                                   , 'DD'  , SUBSTR(A.IN_DATE , 7, 2))       AS IN_DATE
              , REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTR(A.SLIP_DATE, 1, 4))
                                   , 'MM'  , SUBSTR(A.SLIP_DATE, 5, 2))
                                   , 'DD'  , SUBSTR(A.SLIP_DATE, 7, 2))      AS SLIP_DATE
              , CASE WHEN NVL(A.EX_NUM, 0) = 0 THEN ''
                     <!-- ELSE CONVERT(NVARCHAR(7), A.EX_NUM) -->
                     ELSE CAST(A.EX_NUM AS VARCHAR(11))
                END                                                             AS EX_NUM
              , A.DRAFTER
              , D1.NAME                                                         AS DRAFTER_NM
              , A.DEPT_CODE
              , D3.TREE_NAME                                                    AS DEPT_NAME
              , A.DIV_CODE
              , A.ACCNT_GUBUN
              , A.TOT_AMT_I
              , A.TITLE
              , NVL(A.TITLE_DESC, '')                                        AS TITLE_DESC
              , CASE WHEN @LinkedGW = 'Y' THEN NVL(B.GW_STATUS, '0')
                     ELSE A.STATUS
                END                                                             AS STATUS
              , A.INSERT_DB_USER
        FROM                AFB800T   A  
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = A.COMP_CODE
                                                      AND M1.MAIN_CODE      = 'S091'
                                                      AND M1.SUB_CODE       = A.COMP_CODE
                LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID         = M1.REF_CODE1 + @GWIF_TYPE + A.IN_DRAFT_NO
                LEFT  JOIN  HUM100T   D1  ON D1.COMP_CODE      = A.COMP_CODE
                                                      AND D1.PERSON_NUMB    = A.DRAFTER
                LEFT  JOIN  BSA210T   D3  ON D3.COMP_CODE      = A.COMP_CODE
                                                      AND D3.TREE_CODE      = A.DEPT_CODE
        WHERE   A.COMP_CODE     = @COMP_CODE
        AND     A.IN_DRAFT_NO   = @IN_DRAFT_NO
    

   <!--  END -->
</select>


<select id="afb800ukrServiceImpl.selectDetail" parameterType="Map" resultType="rMap">

	--afb800ukr.Cafb800ukr[fnAfb800Qstd] QUERY02
    <!-- BEGIN -->

    
    --  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
        SET @COMP_CODE          = #{S_COMP_CODE}
        SET @IN_DRAFT_NO        = #{IN_DRAFT_NO}
    
    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        <!-- DECLARE         @DateFormat         NVARCHAR(10) -->
        
        SET @DateFormat = ''
        
        DO(
            select * from (
                SELECT @DateFormat := M1.CODE_NAME
                FROM   BSA100T M1 
                WHERE  M1.COMP_CODE = @COMP_CODE
                AND    M1.MAIN_CODE = 'B044'
                AND    M1.REF_CODE1 = 'Y'
            )
        )
        
        SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')
    
    --  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
        <!-- DECLARE         @LinkedGW           NVARCHAR(01) -->
        
        
        SET @LinkedGW = ''
        
        DO(
            select * from (
                SELECT @LinkedGW := M1.REF_CODE1
                FROM   BSA100T M1 
                WHERE  M1.COMP_CODE = @COMP_CODE
                AND    M1.MAIN_CODE = 'A169'
                AND    M1.SUB_CODE  = '20'
            )
        )
        
        
        
        
        SET @LinkedGW = NVL(@LinkedGW, 'N')
    
    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
        
        select    COMP_CODE
                  , IN_DRAFT_NO
                  , SEQ
                  , BUDG_CODE
                  , BUDG_NAME
                  , ACCNT
                  , ACCNT_NAME
                  , PJT_CODE
                  , PJT_NAME
                  , BILL_GUBUN
                  , PROOF_DIVI
                  , PROOF_KIND
                  , CUSTOM_ESS
                  , BILL_DATE
                  , BILL_REMARK
                  , CUSTOM_CODE
                  , CUSTOM_NAME
                  , fnPossibleBudgAmt(BUDG_POSS_AMT_1, BUDG_POSS_AMT_2, BUDG_POSS_AMT_3, BUDG_POSS_AMT_4, '1') AS BUDG_POSS_AMT
                  , IN_AMT_I
                  , IN_TAX_I
                  , SAVE_CODE
                  , SAVE_NAME
                  , fnCipherDecrypt(BANK_ACCOUNT, '')                                AS BANK_ACCOUNT
                  , CUSTOM_NAME                                                              AS BANK_NAME
                  , INOUT_DATE
                  , REMARK
                  , DEPT_CODE
                  , DEPT_NAME
                  , DIV_CODE
                  , REFER_NUM
                  , INSERT_DB_USER
                  , INSERT_DB_TIME
                  , UPDATE_DB_USER
                  , UPDATE_DB_TIME
        from (
        
                SELECT   
                        B.COMP_CODE
                      , B.IN_DRAFT_NO
                      , B.SEQ
                      , B.BUDG_CODE
                      , D.BUDG_NAME
                      , B.ACCNT
                      , C2.ACCNT_NAME
                      , B.PJT_CODE
                      , C3.PJT_NAME
                      , B.BILL_GUBUN
                      , B.PROOF_DIVI
                      , M1.REF_CODE1                                                                AS PROOF_KIND
                      , M1.REF_CODE3                                                                AS CUSTOM_ESS
                      , CASE WHEN NVL(B.BILL_DATE, '') = '' THEN ''
                             ELSE REPLACE(
                                  REPLACE(
                                  REPLACE(@DateFormat, 'YYYY', SUBSTR(B.BILL_DATE, 1, 4))
                                                     , 'MM'  , SUBSTR(B.BILL_DATE, 5, 2))
                                                     , 'DD'  , SUBSTR(B.BILL_DATE, 7, 2))
                        END                                                                         AS BILL_DATE
                      , B.BILL_REMARK
                      , B.CUSTOM_CODE
                      , C1.CUSTOM_NAME
                      <!-- , fnPossibleBudgAmt(A.COMP_CODE, A.SLIP_DATE, A.DEPT_CODE, B.BUDG_CODE, '1') AS BUDG_POSS_AMT -->
                      , '1' AS BUDG_POSS_AMT
                      , B.IN_AMT_I
                      , B.IN_TAX_I
                      , B.SAVE_CODE
                      , C4.SAVE_NAME
                      <!-- , fnCipherDecrypt(C4.BANK_ACCOUNT, '')                                AS BANK_ACCOUNT -->
                      , C4.BANK_ACCOUNT                                AS BANK_ACCOUNT
                      , C5.CUSTOM_NAME                                                              AS BANK_NAME
                      , CASE WHEN NVL(B.INOUT_DATE, '') = '' THEN ''
                             ELSE REPLACE(
                                  REPLACE(
                                  REPLACE(@DateFormat, 'YYYY', SUBSTR(B.INOUT_DATE, 1, 4))
                                                     , 'MM'  , SUBSTR(B.INOUT_DATE, 5, 2))
                                                     , 'DD'  , SUBSTR(B.INOUT_DATE, 7, 2))
                        END                                                                         AS INOUT_DATE
                      , B.REMARK
                      , B.DEPT_CODE
                      , B.DEPT_NAME
                      , B.DIV_CODE
                      , B.REFER_NUM
                      , B.INSERT_DB_USER
                      , B.INSERT_DB_TIME
                      , B.UPDATE_DB_USER
                      , B.UPDATE_DB_TIME
                      
                      , A.COMP_CODE                                                     AS BUDG_POSS_AMT_1
                      , A.SLIP_DATE                                                     AS  BUDG_POSS_AMT_2
                      , A.DEPT_CODE                                                     AS BUDG_POSS_AMT_3
                      , B.BUDG_CODE                                                     AS BUDG_POSS_AMT_4      
                      
                      
                FROM                AFB800T   A  
                        INNER JOIN  AFB810T   B   ON B.COMP_CODE           = A.COMP_CODE
                                                              AND B.IN_DRAFT_NO         = A.IN_DRAFT_NO
                        LEFT  JOIN  BCM100T   C1  ON C1.COMP_CODE          = B.COMP_CODE
                                                              AND C1.CUSTOM_CODE        = B.CUSTOM_CODE
                        LEFT  JOIN  ABA400T   C2  ON C2.COMP_CODE          = B.COMP_CODE
                                                              AND C2.ACCNT              = B.ACCNT
                        LEFT  JOIN  BCM600T   C3  ON C3.COMP_CODE          = B.COMP_CODE
                                                              AND C3.PJT_CODE           = B.PJT_CODE
                        LEFT  JOIN  AFS100T   C4  ON C4.COMP_CODE          = B.COMP_CODE
                                                              AND C4.SAVE_CODE          = B.SAVE_CODE
                        LEFT  JOIN  BCM100T   C5  ON C5.COMP_CODE          = B.COMP_CODE
                                                              AND C5.CUSTOM_CODE        = C4.BANK_CODE
                        LEFT  JOIN  (
                                    select DISTINCT D.* from    AFB800T   A
                                    INNER JOIN  AFB810T   B   ON B.COMP_CODE           = A.COMP_CODE
                                                              AND B.IN_DRAFT_NO         = A.IN_DRAFT_NO
                                    INNER  JOIN  AFB400T   D   ON D.COMP_CODE           = B.COMP_CODE
                                                              AND D.AC_YYYY             = fnGetBudgAcYyyy(A.COMP_CODE, A.IN_DATE)
                                                              AND D.BUDG_CODE           = B.BUDG_CODE                                   
                        )  D   ON D.COMP_CODE           = B.COMP_CODE
                                AND D.BUDG_CODE           = B.BUDG_CODE                       
                                                              
                                                              
                                                              
                                                              
                        LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE          = B.COMP_CODE
                                                              AND M1.MAIN_CODE          = 'A184'
                                                              AND M1.SUB_CODE           = B.PROOF_DIVI
                WHERE   A.COMP_CODE     = @COMP_CODE
                AND     A.IN_DRAFT_NO   = @IN_DRAFT_NO
                ORDER BY B.SEQ
        )

    <!-- END -->

</select>
<select id="afb800ukrServiceImpl.selectDepositList" parameterType="Map" resultType="rMap">
  --afb800ukr.Cafb800ukr[fnAfb800Qre1] QUERY01
    <!-- BEGIN -->

    
    --  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
        SET @COMP_CODE          = #{S_COMP_CODE}
        SET @FR_DATE            = #{FR_DATE}
        SET @TO_DATE            = #{TO_DATE}
        SET @SAVE_CODE          = #{BANK_BOOK_CODE}
        SET @SAVE_NAME          = #{BANK_BOOK_NAME}
    
    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        <!-- DECLARE         @DateFormat         NVARCHAR(10) -->
    
        SET @DateFormat = ''
        
        
        DO(
            select * from (
                SELECT @DateFormat := M1.CODE_NAME
                FROM   BSA100T M1 
                WHERE  M1.COMP_CODE = @COMP_CODE
                AND    M1.MAIN_CODE = 'B044'
                AND    M1.REF_CODE1 = 'Y'
            ) TOPT where rownum = 1
        )
        
        
        
        SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')
    
    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
        
        select SEQ
              , CHOICE
              , INOUT_DATE
              , B.SAVE_CODE
              , B.SAVE_NAME
              , fnCipherDecrypt(BANK_ACCOUNT, '')                                 AS BANK_ACCOUNT
              , INOUT_AMT_I
              , REMARK
              , CUSTOM_CODE
              , CUSTOM_NAME
              , REFER_NUM
        from (
            SELECT  ROW_NUMBER() OVER(ORDER BY AUTO_NUM)                                        AS SEQ
                  <!-- , CONVERT(BIT, 0)                                                             AS CHOICE -->
                  , CAST('0' AS BIT)                                                             AS CHOICE
                  , REPLACE(
                    REPLACE(
                    REPLACE(@DateFormat, 'YYYY', SUBSTR(A.INOUT_DATE, 1, 4))
                                       , 'MM'  , SUBSTR(A.INOUT_DATE, 5, 2))
                                       , 'DD'  , SUBSTR(A.INOUT_DATE, 7, 2))                 AS INOUT_DATE
                  , B.SAVE_CODE
                  , B.SAVE_NAME
                  <!-- , fnCipherDecrypt(B.BANK_ACCOUNT, '')                                 AS BANK_ACCOUNT -->
                  , B.BANK_ACCOUNT                                 AS BANK_ACCOUNT
                  , A.INOUT_AMT_I
                  , A.REMARK
                  , A.CUSTOM_CODE
                  , D2.CUSTOM_NAME
                  , A.AUTO_NUM                                                                  AS REFER_NUM
            FROM                ABH300T   A  
                    LEFT  JOIN  (select DISTINCT B.* from  ABH300T   A
                                    INNER  JOIN  AFS100T   B   ON B.COMP_CODE       = A.COMP_CODE
                                                            AND REPLACE(fnCipherDecrypt(B.BANK_ACCOUNT, ''), '-', '') = REPLACE(fnCipherDecrypt(A.ACCOUNT_NUM, ''), '-', '')
                    )  B   ON B.COMP_CODE       = A.COMP_CODE
                    
                    
                    
                    LEFT  JOIN  BCM100T   D1  ON D1.COMP_CODE      = B.COMP_CODE
                                                          AND D1.CUSTOM_CODE    = B.BANK_CODE
                    LEFT  JOIN  BCM100T   D2  ON D2.COMP_CODE      = A.COMP_CODE
                                                          AND D2.CUSTOM_CODE    = A.CUSTOM_CODE
            WHERE   A.COMP_CODE      =       @COMP_CODE
            AND     A.INOUT_DATE    &gt;=       @FR_DATE
            AND     A.INOUT_DATE    &lt;=       @TO_DATE
            AND     A.INOUT_DIVI     =       '1'
            AND   ((B.SAVE_CODE   LIKE       @SAVE_CODE + '%'     AND @SAVE_CODE    != '') OR (@SAVE_CODE = ''))
            AND   ((B.SAVE_NAME   LIKE '%' + @SAVE_NAME + '%'     AND @SAVE_NAME    != '') OR (@SAVE_NAME = ''))
            AND     NVL(A.IN_REFT_NO, '') = ''
        )

   <!--  END -->


</select>

<insert id="afb800ukrServiceImpl.insertLogMaster" parameterType="Map">    	
 	INSERT INTO L_AFB800T
           (KEY_VALUE           ,OPR_FLAG          
           ,COMP_CODE           ,IN_DRAFT_NO        ,IN_DATE             ,SLIP_DATE             ,DRAFTER
           ,DEPT_CODE           ,DIV_CODE           ,ACCNT_GUBUN         ,TOT_AMT_I             ,TITLE  
           ,TITLE_DESC          ,RETURN_REASON      ,RETURN_PRSN         ,RETURN_DATE           ,RETURN_TIME
           ,STATUS              ,EX_DATE            ,EX_NUM              ,INSERT_DB_USER        ,INSERT_DB_TIME     
           ,UPDATE_DB_USER      ,UPDATE_DB_TIME     ,TEMPC_01            ,TEMPC_02              ,TEMPC_03           
           ,TEMPN_01            ,TEMPN_02           ,TEMPN_03
           ,PASSWORD
           )
     VALUES
           (#{KEY_VALUE}           ,#{OPR_FLAG}           
           ,#{COMP_CODE}           ,#{IN_DRAFT_NO}        ,#{IN_DATE}             ,#{SLIP_DATE}             ,#{DRAFTER_PN}            
           ,#{DEPT_CODE}           ,#{DIV_CODE}           ,#{ACCNT_GUBUN}         ,#{TOT_AMT_I}             ,#{TITLE}
           ,#{TITLE_DESC}          ,#{RETURN_REASON}      ,#{RETURN_PRSN}         ,#{RETURN_DATE}           ,#{RETURN_TIME}
           ,#{STATUS}              ,NULL            	  ,NULL              	  ,#{S_USER_ID}      	    ,SYS_DATETIME
           ,#{S_USER_ID}      	   ,SYS_DATETIME        	  ,NULL                   ,NULL            	        ,NULL
           ,NULL            	   ,NULL              	  ,NULL
           ,fnCipherEncrypt(#{PASSWORD}, '')
           )
</insert>	  	

<insert id="afb800ukrServiceImpl.insertLogDetail" parameterType="Map">    	
 	INSERT INTO L_AFB810T
           (KEY_VALUE           ,OPR_FLAG           
           ,COMP_CODE           ,IN_DRAFT_NO          ,SEQ                  ,BUDG_CODE           ,ACCNT
           ,PJT_CODE            ,BILL_GUBUN           ,PROOF_DIVI           ,BILL_DATE           ,BILL_REMARK
           ,CUSTOM_CODE         ,IN_AMT_I             ,IN_TAX_I             ,SAVE_CODE           ,INOUT_DATE
           ,REMARK              ,DEPT_CODE            ,DEPT_NAME            ,DIV_CODE            ,REFER_NUM
           ,INSERT_DB_USER      ,INSERT_DB_TIME       ,UPDATE_DB_USER       ,UPDATE_DB_TIME      ,TEMPC_01
           ,TEMPC_02            ,TEMPC_03             ,TEMPN_01             ,TEMPN_02            ,TEMPN_03)
     VALUES 
           (#{KEY_VALUE}           ,#{OPR_FLAG}           
           ,#{COMP_CODE}           ,#{IN_DRAFT_NO}          ,#{SEQ}                  ,#{BUDG_CODE}           ,#{ACCNT}
           ,#{PJT_CODE}            ,#{BILL_GUBUN}           ,#{PROOF_DIVI}           ,#{BILL_DATE}           ,#{BILL_REMARK}
           ,#{CUSTOM_CODE}         ,#{IN_AMT_I}             ,#{IN_TAX_I}             ,#{SAVE_CODE}           ,#{INOUT_DATE}
           ,#{REMARK}              ,#{DEPT_CODE}            ,#{DEPT_NAME}            ,#{DIV_CODE}            ,#{REFER_NUM}
           ,#{S_USER_ID}      	   ,SYS_DATETIME               ,#{S_USER_ID}            ,SYS_DATETIME              ,NULL            	   
           ,NULL            	   ,NULL            	    ,NULL            	     ,NULL            	     ,NULL            	   
           )
</insert>
	  	

	  	
<update id="spUspAccntAfb800ukr" parameterType="Map" statementType="CALLABLE">
	{call USP_ACCNT_AFB800UKR (
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{InDraftNo, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	

<update id="spUspAccntAfb800ukrDelA" parameterType="Map" statementType="CALLABLE">

{call USP_ACCNT_AFB800UKR_DelA (
		#{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{IN_DRAFT_NO, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{S_LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{DRAFTER_PN, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PASSWORD, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	

<select id="afb800ukrServiceImpl.getUseColList" parameterType="Map" resultType="rMap">
	/*UBsaExKrv.CBsaExSKr[fnSheetHiddenYn] Query01*/
<!-- BEGIN -->


    SET @COMP_CODE = #{S_COMP_CODE}
    SET @PGM_ID    = 'afb600ukr_01'
    SET @SHEET_ID  = 'grdSheet1'

    SELECT REF_CODE3
         , CASE WHEN NVL(REF_CODE4, 'Y') = 'N' THEN 'False'
                ELSE 'True'
           END                                                 AS REF_CODE4
      FROM BSA100T 
     WHERE COMP_CODE = @COMP_CODE
       AND MAIN_CODE = 'B114'
       AND REF_CODE1 = @PGM_ID
       AND REF_CODE2 = @SHEET_ID
     ORDER BY REF_CODE2

<!-- END	 -->	
</select>
<select id="afb800ukrServiceImpl.sAutoNoYN_sGapBase" parameterType="Map" resultType="rMap">
	/*afb600ukr.Cafb600UKR[fnafb600q] Query02*/

	
	SET     @COMP_CODE  = #{S_COMP_CODE}
	SET     @MAIN_CODE  = 'A151'
	
	/* 자동채번유무*/
    
    SET @REF_CODE1 = ''
    
    DO(
        select * from (
        	SELECT  @REF_CODE1  := NVL(REF_CODE1, 'N')
        	FROM    BSA100T 
        	WHERE   COMP_CODE   = @COMP_CODE
        	AND     MAIN_CODE   = @MAIN_CODE
        	AND     NVL(REF_CODE1, 'N') = 'Y'
        ) TOPT where rownum = 1
	)
    
	SET     @REF_CODE1   = NVL(@REF_CODE1, 'N')
	
	/* 회계기준사용(1:K-GAAP, 2:K-IFRS)*/
    
    SET @SUB_CODE = ''
    
    DO(
        select * from (
        	SELECT  @SUB_CODE   := NVL(SUB_CODE, '1')
        	FROM    BSA100T 
        	WHERE   COMP_CODE   = @COMP_CODE
        	AND     MAIN_CODE   = @MAIN_CODE
        	AND     NVL(REF_CODE2, '') = 'Y'
    	) TOPT where rownum = 1
    )
    
    
    
	SET     @SUB_CODE   = NVL(@SUB_CODE, '1')
	
	SELECT  @REF_CODE1  AS REF_CODE1
	     ,  @SUB_CODE   AS SUB_CODE
</select>
</mapper>