<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb520skrServiceImpl">
<select id="afb520skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02


--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}
--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  *
    FROM    fnGetBudgLevelName(@COMP_CODE, #{ST_DATE})
<!-- END	 -->

<!-- SP생성필요 -->

</select>	

<select id="afb520skrServiceImpl.selectDeptBudg" parameterType="Map" resultType="rMap">		/* 부서정보, 예산현황 조회*/
--afb500skr.Cafb500skr[fnAfb500QStd] Query03
SELECT CASE WHEN NVL(B.DEPT_CODE, '') = '' THEN NVL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE NVL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE2
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , NVL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , NVL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A  
       LEFT  JOIN HUM100T AS B   ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E   ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F   ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = 'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = 'A169'
                                             AND M2.SUB_CODE    = '60'
       LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = 'A169'
                                             AND M3.SUB_CODE    = '61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb520skrServiceImpl.selectAmtPoint" parameterType="Map" resultType="rMap">
--afb540skr.Cafb540skr[fnAfb540QStd]Query01                  
SELECT AMT_POINT
 FROM ABA100T                
WHERE COMP_CODE = #{S_COMP_CODE}
</select>

<select id="afb520skrServiceImpl.selectRefCode1" parameterType="Map" resultType="rMap">
SELECT REF_CODE1 
  FROM BSA100T 
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND MAIN_CODE = 'B042' 
   AND SUB_CODE  = #{MONEY_UNIT}
</select>
	
<select id="afb520skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb520skr.Cafb520skr[fnAfb520QStd] Query02

        SET @slUnit = '1'
        
        DO(  
		SELECT @slUnit := REF_CODE1 
		  FROM BSA100T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B042' 
		   AND SUB_CODE  = #{MONEY_UNIT}
        )




        SET @lUnit = @slUnit
        
        DROP VARIABLE @slUnit

    

    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @AC_YYYY            = #{AC_YYYY}
    SET @FrBudgYyyyMm       = #{FR_YYYYMM}
    SET @ToBudgYyyyMm       = #{TO_YYYYMM}
    SET @LastFrBudgYyyyMm   = #{FR_BEFORE_YYYYMM}
    SET @LastToBudgYyyyMm   = #{TO_BEFORE_YYYYMM}
    SET @DEPT_CODE          = #{DEPT_CODE}
    SET @BUDG_CODE          = #{BUDG_CODE}
    SET @BUDG_TYPE          = #{BUDG_TYPE}
    SET @LOWER_DEPT         = #{LOWER_DEPT}
    
    SET @PROJECT_NO   = #{AC_PROJECT_CODE}
    <if test="BUDG_GUBUN == &quot;3&quot;">
    SET @BUDG_GUBUN   = ''
    </if>
    <if test="BUDG_GUBUN != &quot;3&quot;">
    SET @BUDG_GUBUN   = #{BUDG_GUBUN}
    </if>

    SET @LEN          = LENGTH(@BUDG_CODE)



        --부서코드레벨 및 길이 가져오기


        SET @TREE_LEVEL = ''
        
        DO(
        SELECT @TREE_LEVEL := TREE_LEVEL
          FROM BSA210T 
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'
        )
 
        SET @LEVEL_LEN = ''

        DO(
        SELECT @LEVEL_LEN  := LENGTH(TREE_LEVEL)
          FROM BSA210T 
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'
        )



    --회계기간 가져오기

    SET @FnDate = ''
    SET @ToDate = ''    
    
    DO(
    SELECT @FnDate  := LEFT(FN_DATE,6)
      FROM BOR100T  
     WHERE COMP_CODE = @COMP_CODE
    )

    DO(
    SELECT @ToDate  := LEFT("TO_DATE",6)
      FROM BOR100T  
     WHERE COMP_CODE = @COMP_CODE
    )



    --예산코드자릿수 가져오기
    
   
    SET @LEVEL_LEN1 = ''
    SET @LEVEL_LEN2 = ''
    SET @LEVEL_LEN3 = ''
    SET @LEVEL_LEN4 = ''
    SET @LEVEL_LEN5 = ''
    SET @LEVEL_LEN6 = ''
    SET @LEVEL_LEN7 = ''
    SET @LEVEL_LEN8 = ''
    
    DO(   
        SELECT @LEVEL_LEN1 := NVL(LEVEL_NUM1, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    
    DO(   
        SELECT @LEVEL_LEN2 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN3 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN4 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN5 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN6 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN7 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN8 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0) + NVL(LEVEL_NUM8, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
       







--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    <!-- DECLARE     @TypeKey                NVARCHAR(20) -->

    <!-- SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') -->
    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(TO_CHAR(SYSDATETIME, 'YYYY-MM-DD HH24:MM:SS.FF'), '-', ''), ':', ''), '.', ''), ' ', '')


    DELETE FROM T_AFB520SKR1 WHERE  TYPE_KEY NOT LIKE LEFT(@TypeKey, 8) + '%'



--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
    -- 1. 예산확정정보 테이블(AFB510T)에서 데이터 조회하여 그리드 포맷에 맞춰 임시테이블에 INSERT
    --    (예산코드명을 레벨순서대로 펼침, 예산금액을 12개월로 펼침)
    INSERT INTO T_AFB520SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, AC_YYYY, BUDG_YYYYMM, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME
                           , BUDG_I_TOT, AC_I_TOT, CHANGE_I_TOT, BUDG_I_TOT_LAST, AC_I_TOT_LAST, CHANGE_I_TOT_LAST, BUDG_TYPE
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                           , BUDG_CODE_${index+1}
    </foreach>
                            )
    SELECT @TypeKey                  AS TYPE_KEY
         , '0'                      AS TYPE_FLAG
         , B.COMP_CODE               AS COMP_CODE
         , @AC_YYYY                  AS AC_YYYY
         , B.BUDG_YYYYMM             AS BUDG_YYYYMM
         , B.DEPT_CODE               AS DEPT_CODE
         , C.TREE_NAME               AS DEPT_NAME
         , B.BUDG_CODE               AS BUDG_CODE
         , D.BUDG_NAME               AS BUDG_NAME
         , (SUM(NVL(B.BUDG_CONF_I , 0)) + 
            SUM(NVL(B.BUDG_CONV_I , 0)) + 
            SUM(NVL(B.BUDG_ASGN_I , 0)) + 
            SUM(NVL(B.BUDG_SUPP_I , 0)) + 
            SUM(NVL(B.BUDG_IWALL_I, 0)))  AS BUDG_I_TOT
         , (SUM(NVL(B.DRAFT_AMT, 0)) + 
            SUM(NVL(B.ORDER_AMT, 0)) + 
            SUM(NVL(B.REQ_AMT  , 0)) +
            SUM(NVL(B.EX_AMT_I , 0)) + 
            SUM(NVL(B.AC_AMT_I , 0)))     AS AC_I_TOT
         , (SUM(NVL(B.DRAFT_AMT, 0)) + 
            SUM(NVL(B.ORDER_AMT, 0)) + 
            SUM(NVL(B.REQ_AMT  , 0)) +
            SUM(NVL(B.EX_AMT_I , 0)) +
            SUM(NVL(B.AC_AMT_I , 0))) - 
           (SUM(NVL(B.BUDG_CONF_I , 0)) +
            SUM(NVL(B.BUDG_CONV_I , 0)) + 
            SUM(NVL(B.BUDG_ASGN_I , 0)) + 
            SUM(NVL(B.BUDG_SUPP_I , 0)) + 
            SUM(NVL(B.BUDG_IWALL_I, 0)))  AS CHANGE_I_TOT
         , (SUM(NVL(B2.BUDG_CONF_I , 0)) + 
            SUM(NVL(B2.BUDG_CONV_I , 0)) + 
            SUM(NVL(B2.BUDG_ASGN_I , 0)) + 
            SUM(NVL(B2.BUDG_SUPP_I , 0)) + 
            SUM(NVL(B2.BUDG_IWALL_I, 0))) AS BUDG_I_TOT_LAST
         , (SUM(NVL(B2.DRAFT_AMT, 0)) + 
            SUM(NVL(B2.ORDER_AMT, 0)) + 
            SUM(NVL(B2.REQ_AMT  , 0)) +
            SUM(NVL(B2.EX_AMT_I , 0)) +
            SUM(NVL(B2.AC_AMT_I , 0)))    AS AC_I_TOT_LAST
         , (SUM(NVL(B2.DRAFT_AMT, 0)) + 
            SUM(NVL(B2.ORDER_AMT, 0)) + 
            SUM(NVL(B2.REQ_AMT  , 0)) +
            SUM(NVL(B2.EX_AMT_I , 0)) +
            SUM(NVL(B2.AC_AMT_I , 0))) - 
           (SUM(NVL(B2.BUDG_CONF_I , 0)) + 
            SUM(NVL(B2.BUDG_CONV_I , 0)) + 
            SUM(NVL(B2.BUDG_ASGN_I , 0)) + 
            SUM(NVL(B2.BUDG_SUPP_I , 0)) + 
            SUM(NVL(B2.BUDG_IWALL_I, 0))) AS CHANGE_I_TOT_LAST 
          , D.BUDG_TYPE
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
         , LEFT(B.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE_${index+1}
    </foreach>
        
      FROM            
                      AFB510T AS B 
           LEFT  JOIN AFB510T AS B2  ON B2.COMP_CODE    = B.COMP_CODE
                                                 AND B2.DEPT_CODE    = B.DEPT_CODE
                                                 AND B2.BUDG_CODE    = B.BUDG_CODE
                                                 AND B2.BUDG_YYYYMM &gt;= @LastFrBudgYyyyMm 
                                                 AND B2.BUDG_YYYYMM &lt;= @LastToBudgYyyyMm
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
           INNER JOIN (SELECT COMP_CODE
                            , BUDG_CODE
                       FROM   AFB410T 
                       WHERE  COMP_CODE = @COMP_CODE
                       AND    AC_YYYY   = @AC_YYYY
                       AND    DEPT_CODE = #{DEPT_CODE2}
                       AND    USE_YN    = 'Y'
                       )        A                 ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE
   	 	</if>
    </if>
    
           LEFT  JOIN AFB410T AS A   ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.AC_YYYY        = @AC_YYYY
                                                 AND A.DEPT_CODE      = B.DEPT_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE
           LEFT  JOIN BSA210T AS C  ON B.COMP_CODE     = C.COMP_CODE
                                                AND B.DEPT_CODE     = C.TREE_CODE
           LEFT  JOIN AFB400T AS D  ON D.COMP_CODE     = B.COMP_CODE
                                                 AND D.AC_YYYY       = @AC_YYYY
                                                 AND D.BUDG_CODE     = B.BUDG_CODE
     WHERE B.COMP_CODE      = @COMP_CODE
       AND B.BUDG_YYYYMM   &gt;= @FrBudgYyyyMm
       AND B.BUDG_YYYYMM   &lt;= @ToBudgYyyyMm
       AND ((B.DEPT_CODE    = @DEPT_CODE         AND @DEPT_CODE    != '' AND @LOWER_DEPT != 'Y') OR 
            (C.TREE_LEVEL LIKE @TREE_LEVEL + '%' AND @DEPT_CODE    != '' AND @LOWER_DEPT  = 'Y') OR
            (@DEPT_CODE     = '' ))
       AND ((B.BUDG_CODE  LIKE @BUDG_CODE  + '%' AND @BUDG_CODE    != '') OR (@BUDG_CODE = ''))
       AND ((D.BUDG_TYPE    = @BUDG_TYPE         AND @BUDG_TYPE    != '') OR (@BUDG_TYPE = ''))
       AND D.GROUP_YN       = 'N'
    
       AND ((B.BUDG_GUBUN   = @BUDG_GUBUN       AND @BUDG_GUBUN   != '')  OR (@BUDG_GUBUN   = ''))
       AND ((D.PJT_CODE     = @PROJECT_NO       AND @PROJECT_NO   != '')  OR (@PROJECT_NO   = ''))
    
     GROUP BY B.COMP_CODE, B.BUDG_YYYYMM, B.DEPT_CODE, C.TREE_NAME, B.BUDG_CODE, D.BUDG_NAME
            , D.BUDG_TYPE

    -- 임시테이블에 레벨별 합계 INSERT
    
   <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
        INSERT INTO T_AFB520SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME, CODE_LEVEL
                               , BUDG_I_TOT, AC_I_TOT, CHANGE_I_TOT, CHANGE_RATE, BUDG_I_TOT_LAST, AC_I_TOT_LAST, CHANGE_I_TOT_LAST, CHANGE_RATE_LAST
                               , BUDG_TYPE)
        SELECT X.TYPE_KEY   AS TYPE_KEY
             , '1'         AS TYPE_FLAG
             , X.COMP_CODE  AS COMP_CODE

        <if test="RDO == &quot;1&quot;">
             , X.DEPT_CODE  AS DEPT_CODE
             , X.DEPT_NAME  AS DEPT_NAME
        </if>
        <if test="RDO == &quot;2&quot;">
             <!-- , CONVERT(NVARCHAR(08),'') AS DEPT_CODE -->
             , CAST( '' AS VARCHAR(12)) AS DEPT_CODE 
             <!-- , CONVERT(NVARCHAR(30),'') AS DEPT_NAME -->
             , CAST( '' AS VARCHAR(45)) AS DEPT_NAME
             
             
        </if>
             , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE
             , SPACE((${index+1} -1) * 2) + Y.BUDG_NAME AS BUDG_NAME
             , Y.CODE_LEVEL AS CODE_LEVEL
    
             , NVL(ROUND(SUM(X.BUDG_I_TOT) /@lUnit ${sSqlAmtPoint},0)    AS BUDG_I_TOT
             , NVL(ROUND(SUM(X.AC_I_TOT) /@lUnit ${sSqlAmtPoint},0)      AS AC_I_TOT
             , NVL(ROUND(SUM(X.CHANGE_I_TOT) /@lUnit ${sSqlAmtPoint},0)  AS CHANGE_I_TOT
             , NVL((CASE WHEN NVL(SUM(X.BUDG_I_TOT),0) &gt; 0
                                 THEN NVL(ROUND((SUM(X.CHANGE_I_TOT) / SUM(X.BUDG_I_TOT) * 100) ${sSqlRefCode1} ,0)  ELSE 0 
                       END),0)  AS CHANGE_RATE
             , NVL(ROUND(SUM(X.BUDG_I_TOT_LAST) /@lUnit ${sSqlAmtPoint},0)    AS BUDG_I_TOT_LAST
             , NVL(ROUND(SUM(X.AC_I_TOT_LAST) /@lUnit ${sSqlAmtPoint},0)      AS AC_I_TOT_LAST
             , NVL(ROUND(SUM(X.CHANGE_I_TOT_LAST) /@lUnit ${sSqlAmtPoint},0)  AS CHANGE_I_TOT_LAST
             , NVL((CASE WHEN NVL(SUM(X.BUDG_I_TOT_LAST),0) &gt; 0
                                 THEN NVL(ROUND((SUM(X.CHANGE_I_TOT_LAST) / SUM(X.BUDG_I_TOT_LAST) * 100) ${sSqlRefCode1} ,0)  ELSE 0 
                       END),0)  AS CHANGE_RATE_LAST
        
             , X.BUDG_TYPE
        
      FROM           T_AFB520SKR1 X  
           LEFT JOIN AFB400T      Y   ON Y.COMP_CODE = X.COMP_CODE
                                   AND Y.AC_YYYY   = X.AC_YYYY
                                   AND Y.BUDG_CODE = X.BUDG_CODE_${index+1} 
        WHERE  TYPE_KEY  = @TypeKey
        AND    TYPE_FLAG = '0'
        AND   ((X.BUDG_I_TOT != 0) OR (X.AC_I_TOT != 0) OR (X.BUDG_I_TOT_LAST != 0) OR (X.AC_I_TOT_LAST != 0))
       
        GROUP BY X.TYPE_KEY, X.COMP_CODE
        
        <if test="RDO == &quot;1&quot;">
                   , X.DEPT_CODE, X.DEPT_NAME, X.BUDG_TYPE
        </if>
        
               , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ), Y.BUDG_NAME, Y.CODE_LEVEL, X.BUDG_TYPE
    
    </foreach>
    

    -- Main Query
    SELECT COMP_CODE
         , DEPT_CODE
         , DEPT_NAME
         , BUDG_CODE
         , BUDG_NAME
         , CODE_LEVEL
         , BUDG_I_TOT
         , AC_I_TOT
         , CHANGE_I_TOT
         , CHANGE_RATE
         , BUDG_I_TOT_LAST
         , AC_I_TOT_LAST
         , CHANGE_I_TOT_LAST
         , CHANGE_RATE_LAST
         , BUDG_TYPE
    FROM   T_AFB520SKR1  
    WHERE  TYPE_KEY  = @TypeKey
    AND    TYPE_FLAG = '1'
    ORDER BY COMP_CODE, DEPT_CODE, BUDG_CODE


</select>

</mapper>