<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb555skrServiceImpl">
<select id="afb555skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--afb555skr.Cafb555skr[fnAfb555Qstd] QUERY02
<!-- BEGIN -->
<!--     DECLARE         @COMP_CODE          NVARCHAR(08) -->

--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}

--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  CODE_NAME
    FROM    fnGetBudgLevelName(@COMP_CODE, '')
<!-- END -->

<!-- SP생성필요 -->

</select>	

<select id="afb555skrServiceImpl.selectDeptBudg" parameterType="Map" resultType="rMap">		/* 부서정보, 예산현황 조회*/
--afb500skr.Cafb500skr[fnAfb500QStd] Query03
SELECT CASE WHEN NVL(B.DEPT_CODE, '') = '' THEN NVL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE NVL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE2
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , NVL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , NVL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A  
       LEFT  JOIN HUM100T AS B   ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E   ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F   ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = 'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = 'A169'
                                             AND M2.SUB_CODE    = '60'
       LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = 'A169'
                                             AND M3.SUB_CODE    = '61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb555skrServiceImpl.selectAmtPoint" parameterType="Map" resultType="rMap">
--afb540skr.Cafb540skr[fnAfb540QStd]Query01                  
SELECT NVL(AMT_POINT, '1') AS AMT_POINT   
 FROM ABA100T                 
WHERE COMP_CODE = #{S_COMP_CODE}
</select>
	
<select id="afb555skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb555skr.Cafb555skr[fnAfb555Qstd] QUERY03
<!-- BEGIN -->


--  [ 변수 값 할당 ] ---------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @FR_MONTH           = #{FR_MONTH}
    SET @TO_MONTH           = #{TO_MONTH}
    SET @DEPT_CODE          = #{DEPT_CODE}
    SET @DEPT_NAME          = #{DEPT_NAME}
    SET @PJT_CODE           = #{AC_PROJECT_CODE}
    SET @PJT_NAME           = #{AC_PROJECT_NAME}
    SET @BUDG_CODE          = #{BUDG_CODE}
    SET @BUDG_NAME          = #{BUDG_NAME}
    SET @BUDG_TYPE          = #{BUDG_TYPE}
    SET @SUB_DEPT           = #{LOWER_DEPT}
    SET @WITHOUT_PAY        = #{RDO}
    SET @USER_ID            = #{S_USER_ID}

<!--     IF ( @SUB_DEPT = 'Y' )
        SET @DEPT_NAME      = '' -->



--  [ 초기화 ] --------------------------------------------------------------------------------------------------------



--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->

    DO(
        select * from (
            SELECT  @DateFormat := CODE_NAME
            FROM    BSA100T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND     MAIN_CODE   = 'B044'
            AND     REF_CODE1   = 'Y'
        )  TOPT where rownum = 1
    )

    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [ 부서 레벨 정보 ] ------------------------------------------------------------------------------------------------
    <!-- DECLARE         @TreeLevel          NVARCHAR(30) -->
    
    DO(
        select * from (
            SELECT @TreeLevel := TREE_LEVEL
            FROM    BSA210T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND   ((TREE_CODE   = @DEPT_CODE  AND @DEPT_CODE != '') OR (@DEPT_CODE  = ''))
            AND   ((TREE_NAME   = @DEPT_NAME  AND @DEPT_NAME != '') OR (@DEPT_NAME  = ''))
        )  TOPT where rownum = 1
    )

    SET @TreeLevel = NVL(@TreeLevel, '1')

--  [ 회계 기간 설정 ] ------------------------------------------------------------------------------------------------
  
 
    SET @FnAcDate = ''
    SET @ToAcDate = ''

    DO(
        SELECT  @FnAcDate := FN_DATE
        FROM    BOR100T 
        WHERE   COMP_CODE   = @COMP_CODE
    )
    
    DO(
        SELECT  @ToAcDate := "TO_DATE"
        FROM    BOR100T 
        WHERE   COMP_CODE   = @COMP_CODE
    )
    
    
    

--  [ 예산현황_사용예산코드만 조회(A169) ] --------------------------------------------------------------------------------------------------
    <!-- DECLARE         @USE_BUDGYN         NVARCHAR(01) -->

    DO(
        SELECT  @USE_BUDGYN := NVL(REF_CODE1, 'N')
        FROM    BSA100T 
        WHERE   COMP_CODE   = @COMP_CODE
        AND     MAIN_CODE   = 'A169'
        AND     SUB_CODE    = '61'
    )

--  [ 사용자ID의 부서코드와 현업담당자여부(A009) ] --------------------------------------------------------------------------------------------------



    SET @USER_DEPT_CODE = ''
    SET @CHARGE_GUBUN = ''

    DO(
        SELECT  @USER_DEPT_CODE := NVL(C.BUDG_TREE_CODE, A.DEPT_CODE)
        FROM               BSA300T A 
                LEFT  JOIN BSA100T B  ON B.COMP_CODE = A.COMP_CODE
                                                  AND B.MAIN_CODE = 'A009'
                                                  AND B.REF_CODE1 = A.USER_ID
                LEFT  JOIN BSA210T C  ON C.COMP_CODE = A.COMP_CODE
                                                  AND C.TREE_CODE = A.DEPT_CODE
        WHERE   A.COMP_CODE  = @COMP_CODE
        AND     A.USER_ID    = @USER_ID
    )

    DO(
        SELECT  @CHARGE_GUBUN := NVL(B.REF_CODE2, '2')
        FROM               BSA300T A 
                LEFT  JOIN BSA100T B  ON B.COMP_CODE = A.COMP_CODE
                                                  AND B.MAIN_CODE = 'A009'
                                                  AND B.REF_CODE1 = A.USER_ID
                LEFT  JOIN BSA210T C  ON C.COMP_CODE = A.COMP_CODE
                                                  AND C.TREE_CODE = A.DEPT_CODE
        WHERE   A.COMP_CODE  = @COMP_CODE
        AND     A.USER_ID    = @USER_ID
    )



--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    <!-- DECLARE     @TypeKey                NVARCHAR(20) -->

    <!-- SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') -->
    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(TO_CHAR(SYSDATETIME, 'YYYY-MM-DD HH24:MM:SS.FF'), '-', ''), ':', ''), '.', ''), ' ', '')


    
    DELETE FROM T_AFB555SKR1 WHERE  TYPE_KEY NOT LIKE LEFT(@TypeKey, 8) + '%'
    
    
    

--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------


    SET @FrDate = @FR_MONTH + '01'    
    SET @ToDate = @TO_MONTH + '31'

--  [ 1. 지출예산INSERT ] ---------------------------------------------------------------------------------------------
    INSERT  INTO T_AFB555SKR1 ( TYPE_KEY, TYPE_FLAG, SEQ, BUDG_CODE, BUDG_NAME_1, BUDG_NAME_2, BUDG_NAME_3, BUDG_NAME_4
                              , BUDG_NAME_5, BUDG_NAME_6, BUDG_NAME_7, BUDG_NAME_8, BUDG_CONF_I, BUDG_BALN_I
                              , DRAFT_NO, DRAFT_SEQ, DRAFT_TITLE, DRAFT_DATE, DRAFT_AMT, CLOSE_YN
                              , PAY_DRAFT_NO, PAY_TITLE, SLIP_DATE, PAY_AMT, TRANS_DATE, TRANS_AMT, NON_PAY_AMT, DRAFT_REMIND_AMT, BUDG_TYPE )
    SELECT  
            @TypeKey, '0'
          , ROW_NUMBER() OVER (ORDER BY T1.BUDG_CODE, T1.DRAFT_NO, T1.PAY_DRAFT_NO, T1.TRANS_DATE)  AS SEQ
          , T1.BUDG_CODE                                                                            AS BUDG_CODE
		 <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
	    	<if test="index &lt; budgNameInfoList.size-1">
	          , C${index+1}.BUDG_NAME  					                    							AS BUDG_NAME_${index+1}
	    	</if>
	      </foreach>
    	  , T1.BUDG_NAME                                                                            	AS BUDG_NAME_${budgNameInfoList.size}
    	  <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
	    	<if test="budgNameInfoList.size+index &lt; 8">
	          <!-- , CONVERT(NVArCHAR(100), '')                                                              AS BUDG_NAME_${(budgNameInfoList.size+1)+index} -->
              , CAST('' AS VARCHAR(150))                                                              AS BUDG_NAME_${(budgNameInfoList.size+1)+index}
	        </if>
	      </foreach>
          , T2.BUDG_CONF_I
          , T2.BUDG_BALN_I
        --  기안정보
          , T1.DRAFT_NO                                                                             AS DRAFT_NO
          , T1.DRAFT_SEQ                                                                             AS DRAFT_SEQ
          , T1.DRAFT_TITLE                                                                          AS DRAFT_TITLE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T1.DRAFT_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T1.DRAFT_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T1.DRAFT_DATE, 7, 2))                            AS DRAFT_DATE
          , T1.DRAFT_AMT                                                                            AS DRAFT_AMT
          , T1.CLOSE_YN                                                                             AS CLOSE_YN
        --  지출결의정보
          , T1.PAY_DRAFT_NO                                                                         AS PAY_DRAFT_NO
          , T1.PAY_TITLE                                                                            AS PAY_TITLE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T1.SLIP_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T1.SLIP_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T1.SLIP_DATE, 7, 2))                             AS SLIP_DATE
          , T1.PAY_AMT                                                                              AS PAY_AMT
        --  이체정보
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T1.TRANS_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T1.TRANS_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T1.TRANS_DATE, 7, 2))                            AS TRANS_DATE
          , T1.TRANS_AMT                                                                            AS TRANS_AMT
          , NVL(T1.PAY_AMT, 0) - NVL(T1.TRANS_AMT, 0)                                         AS NON_PAY_AMT

          , T1.DRAFT_REMIND_AMT                                                                     AS DRAFT_REMIND_AMT
          , T1.BUDG_TYPE                                                                            AS BUDG_TYPE
    FROM                (
                        SELECT
                            --  기안정보
                                A.COMP_CODE
                              , A.DRAFT_NO
                              , A.TITLE                             AS DRAFT_TITLE
                              , A.DRAFT_DATE
                              , A.DEPT_CODE
                              , B.DRAFT_SEQ
                              , B.BUDG_GUBUN
                              , B.BUDG_CODE
                              , C1.BUDG_NAME
                              , MAX(C1.AC_YYYY)                     AS AC_YYYY
                              , MAX(C1.TREE_LEVEL)                  AS TREE_LEVEL
                              , B.PJT_CODE
                              , MAX(B.BUDG_AMT)                     AS DRAFT_AMT
                              , MAX(M1.CODE_NAME)                   AS CLOSE_YN
    
    
                              , CASE  WHEN  B.CLOSE_YN = 'Y' THEN 0 
                                        ELSE MAX(B.BUDG_AMT) - MAX(NVL(D2.PAY_AMT, 0))  
                                END  AS DRAFT_REMIND_AMT
                            --  지출결의정보
                              , D.PAY_DRAFT_NO
                              , D.PAY_TITLE
                              , D.SLIP_DATE
                              , SUM(NVL(D.PAY_AMT, 0))           AS PAY_AMT
                            --  이체정보
                              , E.TRANS_DATE
                              , SUM(NVL(E.TOT_AMT_I, 0))         AS TRANS_AMT
                              , C1.BUDG_TYPE                        AS BUDG_TYPE
                        FROM                AFB600T   A  
                                INNER JOIN  AFB610T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                                      AND B.DRAFT_NO    = A.DRAFT_NO
    
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
                                INNER JOIN (SELECT COMP_CODE
                                                 , BUDG_CODE
                                            FROM   AFB410T 
                                            WHERE  COMP_CODE = @COMP_CODE
                                            AND    AC_YYYY   = LEFT(@FnAcDate, 4)
                                            AND    USE_YN    = 'Y'
                                            AND    DEPT_CODE = #{DEPT_CODE2}
                                           )           B1               ON B1.COMP_CODE  = B.COMP_CODE
                                                                       AND B1.BUDG_CODE  = B.BUDG_CODE
    	</if>
    </if>
    
                                LEFT  JOIN  AFB400T   C1  ON C1.COMP_CODE  = B.COMP_CODE
                                                                      AND C1.AC_YYYY    = fnGetBudgAcYyyy(A.COMP_CODE, A.DRAFT_DATE)   --사용자 함수
                                                                      AND C1.BUDG_CODE  = B.BUDG_CODE
                                LEFT  JOIN  BSA210T   C2  ON C2.COMP_CODE  = A.COMP_CODE
                                                                      AND C2.TREE_CODE  = A.DEPT_CODE
                                LEFT  JOIN  BCM600T   C3  ON C3.COMP_CODE  = B.COMP_CODE
                                                                      AND C3.PJT_CODE   = B.PJT_CODE
                                LEFT  JOIN  (
                                            SELECT  X.COMP_CODE , X.PAY_DRAFT_NO    , X.SLIP_DATE
                                                  , X.TITLE         PAY_TITLE
                                                  , Y.SEQ           PAY_DRAFT_SEQ
                                                  , Y.TOT_AMT_I     PAY_AMT
                                                  , Y.BUDG_CODE , Y.PJT_CODE
                                                  , Y.DRAFT_NO  , Y.DRAFT_SEQ
                                            FROM                AFB700T   X  
                                                    INNER JOIN  AFB710T   Y   ON Y.COMP_CODE       = X.COMP_CODE
                                                                                          AND Y.PAY_DRAFT_NO    = X.PAY_DRAFT_NO
                                                    LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = X.COMP_CODE
                                                                                          AND M1.MAIN_CODE      = 'S091'
                                                                                          AND M1.SUB_CODE       = X.COMP_CODE
                                                    LEFT  JOIN T_GWIF     Z   ON Z.GWIF_ID         = M1.REF_CODE1 + '1' + X.PAY_DRAFT_NO
                                            WHERE   X.COMP_CODE                      = @COMP_CODE
                                            AND     X.SLIP_DATE                     &gt;= @FrDate
                                            AND     X.SLIP_DATE                     &lt;= @ToDate
                                            AND     NVL(Z.GW_STATUS, X.STATUS)   &gt;= '0'  --미상신
                                            AND     NVL(Z.GW_STATUS, X.STATUS)   != '5'  --반려
                                            )         D                ON D.COMP_CODE       = B.COMP_CODE
                                                                      AND D.DRAFT_NO        = B.DRAFT_NO
                                                                      AND D.DRAFT_SEQ       = B.DRAFT_SEQ
                                LEFT  JOIN  (
                                            SELECT  X.COMP_CODE
                                                  , Y.DRAFT_NO
                                                  , Y.DRAFT_SEQ
                                                  , SUM(Y.TOT_AMT_I) AS PAY_AMT
                                            FROM                AFB700T   X  
                                                    INNER JOIN  AFB710T   Y   ON Y.COMP_CODE       = X.COMP_CODE
                                                                                          AND Y.PAY_DRAFT_NO    = X.PAY_DRAFT_NO
                                                    LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = X.COMP_CODE
                                                                                          AND M1.MAIN_CODE      = 'S091'
                                                                                          AND M1.SUB_CODE       = X.COMP_CODE
                                                    LEFT  JOIN T_GWIF     Z   ON Z.GWIF_ID         = M1.REF_CODE1 + '1' + X.PAY_DRAFT_NO
                                            WHERE   X.COMP_CODE                      = @COMP_CODE
                                            AND     X.SLIP_DATE                     &gt;= @FrDate
                                            AND     X.SLIP_DATE                     &lt;= @ToDate
                                            AND     NVL(Z.GW_STATUS, X.STATUS)   &gt;= '0'  --미상신
                                            AND     NVL(Z.GW_STATUS, X.STATUS)   != '5'  --반려
                                            GROUP BY X.COMP_CODE, Y.DRAFT_NO, Y.DRAFT_SEQ
                                            )         D2               ON D2.COMP_CODE      = B.COMP_CODE
                                                                      AND D2.DRAFT_NO       = B.DRAFT_NO
                                                                      AND D2.DRAFT_SEQ      = B.DRAFT_SEQ
                                LEFT  JOIN  (SELECT COMP_CODE
                                                  , TRANS_DATE
                                                  , PROV_DRAFT_NO
                                                  , PROV_DRAFT_SEQ
                                                  , SUM(NVL(TOT_AMT_I, 0)) AS TOT_AMT_I
                                             FROM   AFB900T 
                                             WHERE  COMP_CODE   = @COMP_CODE
                                             AND    TRANS_DATE &gt;= @FrDate
                                             AND    TRANS_DATE &lt;= @ToDate
                                             GROUP BY COMP_CODE, TRANS_DATE, PROV_DRAFT_NO, PROV_DRAFT_SEQ
                                            )         E                ON E.COMP_CODE       = D.COMP_CODE
                                                                      AND E.PROV_DRAFT_NO   = D.PAY_DRAFT_NO
                                                                      AND E.PROV_DRAFT_SEQ  = D.PAY_DRAFT_SEQ
                                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = B.COMP_CODE
                                                                      AND M1.MAIN_CODE      = 'A020'
                                                                      AND M1.SUB_CODE       = B.CLOSE_YN
                        WHERE   A.COMP_CODE        =        @COMP_CODE
                        AND     A.DRAFT_DATE      &gt;=        @FrDate
                        AND     A.DRAFT_DATE      &lt;=        @ToDate
                        AND     A.CONFIRM_YN       =        'Y'
                        AND   ((C2.TREE_LEVEL   LIKE        @TreeLevel + '%'    AND @SUB_DEPT    = 'Y')
                        OR      (A.DEPT_CODE    LIKE        @DEPT_CODE + '%'    AND @DEPT_CODE  != ''   AND @SUB_DEPT    = 'N')
                        OR      (@DEPT_CODE        = ''))
                        AND   ((C2.TREE_NAME    LIKE '%' +  @DEPT_NAME + '%'    AND @DEPT_NAME  != ''   AND @SUB_DEPT    = 'N')
                        OR     (@DEPT_NAME         = ''))
                        AND   ((B.PJT_CODE      LIKE        @PJT_CODE  + '%'    AND @PJT_CODE   != ''  ) OR (@PJT_CODE   = '' ))
                        AND   ((C3.PJT_NAME     LIKE '%' +  @PJT_NAME  + '%'    AND @PJT_NAME   != ''  ) OR (@PJT_NAME   = '' ))
                        AND   ((B.BUDG_CODE     LIKE        @BUDG_CODE + '%'    AND @BUDG_CODE  != ''  ) OR (@BUDG_CODE  = '' ))

                        AND   ((C1.BUDG_TYPE       =        @BUDG_TYPE          AND @BUDG_TYPE  != ''  ) OR (@BUDG_TYPE  = '' ))
                        AND   ((@WITHOUT_PAY       = 'EX'   AND (D.PAY_DRAFT_NO  IS NOT NULL             OR  B.CLOSE_YN != 'Y'))
                        OR     (@WITHOUT_PAY       = 'IN'))
                        GROUP   BY  A.COMP_CODE, A.DRAFT_NO, A.TITLE, A.DRAFT_DATE, A.DEPT_CODE, B.DRAFT_SEQ, B.BUDG_GUBUN, B.BUDG_CODE, B.PJT_CODE, B.CLOSE_YN
                                  , D.PAY_DRAFT_NO, D.PAY_TITLE, D.SLIP_DATE, E.TRANS_DATE, C1.BUDG_NAME, C1.BUDG_TYPE
                        )         T1
            LEFT  JOIN  (
                        SELECT  A.COMP_CODE, A.BUDG_CODE
                              , SUM(NVL(A.BUDG_CONF_I, 0) + NVL(A.BUDG_CONV_I, 0) + NVL(A.BUDG_ASGN_I, 0) + NVL(A.BUDG_SUPP_I, 0) + NVL(A.BUDG_IWALL_I, 0))  AS BUDG_CONF_I
                              , SUM(NVL(A.BUDG_CONF_I, 0) + NVL(A.BUDG_CONV_I, 0) + NVL(A.BUDG_ASGN_I, 0) + NVL(A.BUDG_SUPP_I, 0) + NVL(A.BUDG_IWALL_I, 0)
                                  - NVL(A.EX_AMT_I   , 0) - NVL(A.AC_AMT_I   , 0) - NVL(A.DRAFT_AMT  , 0) - NVL(A.ORDER_AMT  , 0) - NVL(A.REQ_AMT     , 0))  AS BUDG_BALN_I
                        FROM                AFB510T   A  
                                LEFT  JOIN  BSA210T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                                      AND B.TREE_CODE   = A.DEPT_CODE
    
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
                                INNER JOIN (SELECT COMP_CODE
                                                 , BUDG_CODE
                                            FROM   AFB410T 
                                            WHERE  COMP_CODE = @COMP_CODE
                                            AND    AC_YYYY   = LEFT(@FnAcDate, 4)
                                            AND    USE_YN    = 'Y'
                                            AND    DEPT_CODE = #{DEPT_CODE2}
                                           )           B1               ON B1.COMP_CODE  = A.COMP_CODE
                                                                       AND B1.BUDG_CODE  = A.BUDG_CODE
   	 	</if>
    </if>
    
                        WHERE   A.COMP_CODE        =        @COMP_CODE
                        AND     A.BUDG_YYYYMM     &gt;=        LEFT(@FnAcDate, 6)
                        AND     A.BUDG_YYYYMM     &lt;=        LEFT(@ToAcDate, 6)
                        AND   ((B.TREE_LEVEL    LIKE        @TreeLevel + '%'    AND @SUB_DEPT    = 'Y')
                        OR     (A.DEPT_CODE     LIKE        @DEPT_CODE + '%'    AND @DEPT_CODE  != ''   AND @SUB_DEPT   = 'N')
                        OR     (@DEPT_CODE         = ''))
                        AND   ((B.TREE_NAME     LIKE '%' +  @DEPT_NAME + '%'    AND @DEPT_NAME  != ''   AND @SUB_DEPT   = 'N')
                        OR     (@DEPT_NAME         = ''))
                        GROUP   BY A.COMP_CODE, A.BUDG_CODE
                        )         T2               ON T2.COMP_CODE  = T1.COMP_CODE
                                                  AND T2.BUDG_CODE  = T1.BUDG_CODE
            LEFT  JOIN  AFB400T   C${budgNameInfoList.size-1}   ON C${budgNameInfoList.size-1} .COMP_CODE  = T1.COMP_CODE
			                                                                AND C${budgNameInfoList.size-1} .AC_YYYY    = T1.AC_YYYY
			                                                                AND C${budgNameInfoList.size-1} .BUDG_CODE  = T1.TREE_LEVEL
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
    	<if test="index+1 &lt;= budgNameInfoList.size-2">
            INNER JOIN  AFB400T   C${(budgNameInfoList.size-2)-(index)}  ON C${(budgNameInfoList.size-2)-(index)}.COMP_CODE  = C${(budgNameInfoList.size-1)-(index)}.COMP_CODE
					                                                              	  AND C${(budgNameInfoList.size-2)-(index)}.AC_YYYY    = C${(budgNameInfoList.size-1)-(index)}.AC_YYYY
					                                                              	  AND C${(budgNameInfoList.size-2)-(index)}.BUDG_CODE  = C${(budgNameInfoList.size-1)-(index)}.TREE_LEVEL
    	</if>
    </foreach>
    

--  [ 2. 수입예산INSERT ] ---------------------------------------------------------------------------------------------
    INSERT  INTO T_AFB555SKR1 ( TYPE_KEY, TYPE_FLAG, SEQ, BUDG_CODE, BUDG_NAME_1, BUDG_NAME_2, BUDG_NAME_3, BUDG_NAME_4
                              , BUDG_NAME_5, BUDG_NAME_6, BUDG_NAME_7, BUDG_NAME_8, BUDG_CONF_I, BUDG_BALN_I
                              , DRAFT_NO, DRAFT_TITLE, DRAFT_DATE, DRAFT_AMT, CLOSE_YN
                              , PAY_DRAFT_NO, PAY_TITLE, SLIP_DATE, PAY_AMT, TRANS_DATE, TRANS_AMT, NON_PAY_AMT, DRAFT_REMIND_AMT, BUDG_TYPE )
    SELECT   
            @TypeKey, '0'
          , ROW_NUMBER() OVER (ORDER BY T1.BUDG_CODE, T1.DRAFT_NO, T1.PAY_DRAFT_NO)  AS SEQ
          , T1.BUDG_CODE                                                                            AS BUDG_CODE

    
    	  <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
	    	<if test="index &lt; budgNameInfoList.size-1">
	          , C${index+1}.BUDG_NAME  					                    							AS BUDG_NAME_${index+1}
	    	</if>
	      </foreach>
    	  , T1.BUDG_NAME                                                                            	AS BUDG_NAME_${budgNameInfoList.size}
    	  <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
	    	<if test="budgNameInfoList.size+index &lt; 8">
	          <!-- , CONVERT(NVArCHAR(100), '')                                                              AS BUDG_NAME_${(budgNameInfoList.size+1)+index} -->
              , CAST('' AS VARCHAR(150))                                                              AS BUDG_NAME_${(budgNameInfoList.size+1)+index}
	        </if>
	      </foreach>
    

          , T2.BUDG_CONF_I
          , T2.BUDG_BALN_I
        --  기안정보(수입결의정보)
          , T1.DRAFT_NO                                                                             AS DRAFT_NO
          , T1.DRAFT_TITLE                                                                          AS DRAFT_TITLE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T1.DRAFT_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T1.DRAFT_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T1.DRAFT_DATE, 7, 2))                            AS DRAFT_DATE
          , T1.DRAFT_AMT                                                                            AS DRAFT_AMT
          , ''                                                                                      AS CLOSE_YN
        --  수입결의정보
          , T1.PAY_DRAFT_NO                                                                         AS PAY_DRAFT_NO
          , T1.PAY_TITLE                                                                            AS PAY_TITLE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T1.SLIP_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T1.SLIP_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T1.SLIP_DATE, 7, 2))                             AS SLIP_DATE
          , T1.PAY_AMT                                                                              AS PAY_AMT
        --  이체정보
          , NULL                                                                                    AS TRANS_DATE
          , 0                                                                                       AS TRANS_AMT
          , 0                                                                                       AS NON_PAY_AMT

          , 0                                                                                       AS DRAFT_REMIND_AMT
          , T1.BUDG_TYPE                                                                            AS BUDG_TYPE
    FROM                (
                        SELECT
                            --  기안정보(수입결의정보)
                                A.COMP_CODE
                              , A.IN_DRAFT_NO                       AS DRAFT_NO
                              , A.TITLE                             AS DRAFT_TITLE
                              , A.IN_DATE                           AS DRAFT_DATE
                              , A.DEPT_CODE
                              , 0                                   AS DRAFT_SEQ
                              , '1'                                 AS BUDG_GUBUN
                              , B.BUDG_CODE
                              , C1.BUDG_NAME
                              , MAX(C1.AC_YYYY)                     AS AC_YYYY
                              , MAX(C1.TREE_LEVEL)                  AS TREE_LEVEL
                              , B.PJT_CODE
                              , SUM(NVL(B.IN_AMT_I, 0))          AS DRAFT_AMT
                              , ''                                  AS CLOSE_YN
                              , 0                                   AS DRAFT_REMIND_AMT
                            --  수입결의정보
                              , A.IN_DRAFT_NO                       AS PAY_DRAFT_NO
                              , A.TITLE                             AS PAY_TITLE
                              , A.SLIP_DATE                         AS SLIP_DATE
                              , SUM(NVL(B.IN_AMT_I, 0))          AS PAY_AMT
                              , C1.BUDG_TYPE                        AS BUDG_TYPE
                        FROM                AFB800T   A  
                                INNER JOIN  AFB810T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                                      AND B.IN_DRAFT_NO = A.IN_DRAFT_NO
    
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
                                INNER JOIN (SELECT COMP_CODE
                                                 , BUDG_CODE
                                            FROM   AFB410T 
                                            WHERE  COMP_CODE = @COMP_CODE
                                            AND    AC_YYYY   = LEFT(@FnAcDate, 4)
                                            AND    USE_YN    = 'Y'
                                            AND    DEPT_CODE = #{DEPT_CODE2}
                                           )           B1               ON B1.COMP_CODE  = B.COMP_CODE
                                                                       AND B1.BUDG_CODE  = B.BUDG_CODE
    	</if>
    </if>
    
                                LEFT  JOIN  AFB400T   C1  ON C1.COMP_CODE  = B.COMP_CODE
                                                                      AND C1.AC_YYYY    = fnGetBudgAcYyyy(A.COMP_CODE, A.IN_DATE)
                                                                      AND C1.BUDG_CODE  = B.BUDG_CODE
                                LEFT  JOIN  BSA210T   C2  ON C2.COMP_CODE  = A.COMP_CODE
                                                                      AND C2.TREE_CODE  = A.DEPT_CODE
                                LEFT  JOIN  BCM600T   C3  ON C3.COMP_CODE  = B.COMP_CODE
                                                                      AND C3.PJT_CODE   = B.PJT_CODE
                                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                                      AND M1.MAIN_CODE  = 'S091'
                                                                      AND M1.SUB_CODE   = A.COMP_CODE
                                LEFT  JOIN T_GWIF     Z   ON Z.GWIF_ID     = M1.REF_CODE1 + '2' + A.IN_DRAFT_NO
                        WHERE   A.COMP_CODE        =        @COMP_CODE
                        AND     A.SLIP_DATE       &gt;=        @FrDate
                        AND     A.SLIP_DATE       &lt;=        @ToDate
                        AND     NVL(Z.GW_STATUS, A.STATUS)   &gt;= '0'  --미상신
                        AND     NVL(Z.GW_STATUS, A.STATUS)   != '5'  --반려
                        AND   ((C2.TREE_LEVEL   LIKE        @TreeLevel + '%'    AND @SUB_DEPT    = 'Y')
                        OR      (A.DEPT_CODE    LIKE        @DEPT_CODE + '%'    AND @DEPT_CODE  != ''   AND @SUB_DEPT    = 'N')
                        OR      (@DEPT_CODE        = ''))
                        AND   ((C2.TREE_NAME    LIKE '%' +  @DEPT_NAME + '%'    AND @DEPT_NAME  != ''   AND @SUB_DEPT    = 'N')
                        OR     (@DEPT_NAME         = ''))
                        AND   ((B.PJT_CODE      LIKE        @PJT_CODE  + '%'    AND @PJT_CODE   != ''  ) OR (@PJT_CODE   = '' ))
                        AND   ((C3.PJT_NAME     LIKE '%' +  @PJT_NAME  + '%'    AND @PJT_NAME   != ''  ) OR (@PJT_NAME   = '' ))
                        AND   ((B.BUDG_CODE     LIKE        @BUDG_CODE + '%'    AND @BUDG_CODE  != ''  ) OR (@BUDG_CODE  = '' ))

                        AND   ((C1.BUDG_TYPE       =        @BUDG_TYPE          AND @BUDG_TYPE  != ''  ) OR (@BUDG_TYPE  = '' ))
                        GROUP   BY  A.COMP_CODE, A.IN_DRAFT_NO, A.TITLE, A.IN_DATE, A.DEPT_CODE, B.BUDG_CODE, B.PJT_CODE
                                  , A.SLIP_DATE, C1.BUDG_NAME , C1.BUDG_TYPE
                        )         T1
            LEFT  JOIN  (
                        SELECT  A.COMP_CODE, A.BUDG_CODE
                              , SUM(NVL(A.BUDG_CONF_I, 0) + NVL(A.BUDG_CONV_I, 0) + NVL(A.BUDG_ASGN_I, 0) + NVL(A.BUDG_SUPP_I, 0) + NVL(A.BUDG_IWALL_I, 0))  AS BUDG_CONF_I
                              , SUM(NVL(A.BUDG_CONF_I, 0) + NVL(A.BUDG_CONV_I, 0) + NVL(A.BUDG_ASGN_I, 0) + NVL(A.BUDG_SUPP_I, 0) + NVL(A.BUDG_IWALL_I, 0)
                                  - NVL(A.EX_AMT_I   , 0) - NVL(A.AC_AMT_I   , 0) - NVL(A.DRAFT_AMT  , 0) - NVL(A.ORDER_AMT  , 0) - NVL(A.REQ_AMT     , 0))  AS BUDG_BALN_I
                        FROM                AFB510T   A  
                                LEFT  JOIN  BSA210T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                                      AND B.TREE_CODE   = A.DEPT_CODE
    
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
                                INNER JOIN (SELECT COMP_CODE
                                                 , BUDG_CODE
                                            FROM   AFB410T 
                                            WHERE  COMP_CODE = @COMP_CODE
                                            AND    AC_YYYY   = LEFT(@FnAcDate, 4)
                                            AND    USE_YN    = 'Y'
                                            AND    DEPT_CODE = #{DEPT_CODE2}
                                           )           B1               ON B1.COMP_CODE  = A.COMP_CODE
                                                                       AND B1.BUDG_CODE  = A.BUDG_CODE
    	 </if>
    </if>
    
                        WHERE   A.COMP_CODE        =        @COMP_CODE
                        AND     A.BUDG_YYYYMM     &gt;=        LEFT(@FnAcDate, 6)
                        AND     A.BUDG_YYYYMM     &lt;=        LEFT(@ToAcDate, 6)
                        AND   ((B.TREE_LEVEL    LIKE        @TreeLevel + '%'    AND @SUB_DEPT    = 'Y')
                        OR     (A.DEPT_CODE     LIKE        @DEPT_CODE + '%'    AND @DEPT_CODE  != ''   AND @SUB_DEPT   = 'N')
                        OR     (@DEPT_CODE         = ''))
                        AND   ((B.TREE_NAME     LIKE '%' +  @DEPT_NAME + '%'    AND @DEPT_NAME  != ''   AND @SUB_DEPT   = 'N')
                        OR     (@DEPT_NAME         = ''))
                        GROUP   BY A.COMP_CODE, A.BUDG_CODE
                        )         T2               ON T2.COMP_CODE  = T1.COMP_CODE
                                                  AND T2.BUDG_CODE  = T1.BUDG_CODE
            LEFT  JOIN  AFB400T   C${budgNameInfoList.size-1}  ON C${budgNameInfoList.size-1} .COMP_CODE  = T1.COMP_CODE
                                                              AND C${budgNameInfoList.size-1} .AC_YYYY    = T1.AC_YYYY
                                                              AND C${budgNameInfoList.size-1} .BUDG_CODE  = T1.TREE_LEVEL
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
    	<if test="index+1 &lt;= budgNameInfoList.size-2">
            INNER JOIN  AFB400T   C${(budgNameInfoList.size-2)-(index)}  ON C${(budgNameInfoList.size-2)-(index)}.COMP_CODE  = C${(budgNameInfoList.size-1)-(index)}.COMP_CODE
					                                                              	  AND C${(budgNameInfoList.size-2)-(index)}.AC_YYYY    = C${(budgNameInfoList.size-1)-(index)}.AC_YYYY
					                                                              	  AND C${(budgNameInfoList.size-2)-(index)}.BUDG_CODE  = C${(budgNameInfoList.size-1)-(index)}.TREE_LEVEL
    	</if>
    </foreach>


--  [ 컬럼병합을 위한 공백행 추가 ] -----------------------------------------------------------------------------------
--    INSERT  INTO T_AFB555SKR1 ( TYPE_KEY, TYPE_FLAG, SEQ, BUDG_CODE )
--    SELECT  @TypeKey, 'B', MAX(SEQ), BUDG_CODE
--    FROM    T_AFB555SKR1  
--    WHERE   TYPE_KEY    = @TypeKey
--    AND     TYPE_FLAG   = '0'
--    GROUP   BY BUDG_CODE

--  [ 합계행 추가 ] ---------------------------------------------------------------------------------------------------
    -- 연간예산금액, 예산잔액
    INSERT  INTO T_AFB555SKR1 ( TYPE_KEY, TYPE_FLAG, BUDG_CODE, BUDG_CONF_I, BUDG_BALN_I )
    SELECT  TYPE_KEY
            , 'S'
            , fnGetTxtLang('KOREAN', 'A0149')                        -- 사용자 함수
            , SUM(BUDG_CONF_I)
            , SUM(BUDG_BALN_I)
    FROM    (
            SELECT  DISTINCT TYPE_KEY, BUDG_CODE, BUDG_CONF_I, BUDG_BALN_I
            FROM    T_AFB555SKR1  
            WHERE   TYPE_KEY    = @TypeKey
            AND     TYPE_FLAG   = '0'
            ) T
    GROUP   BY T.TYPE_KEY

    -- 기안(추산)금액, 지출결의금액, 이체금액, 기안(추산)잔액------------------------------------------------------------
    UPDATE  A
    SET     A.DRAFT_AMT         = B.DRAFT_AMT
          , A.DRAFT_REMIND_AMT  = B.DRAFT_REMIND_AMT
          , A.PAY_AMT           = C.PAY_AMT
          , A.TRANS_AMT         = C.TRANS_AMT
          , A.NON_PAY_AMT       = C.NON_PAY_AMT
    FROM                T_AFB555SKR1   A  
            LEFT  JOIN  (-- 기안(추산)금액, 기안(추산)잔액
                        SELECT  TYPE_KEY, SUM(DRAFT_AMT) DRAFT_AMT, SUM(DRAFT_REMIND_AMT) DRAFT_REMIND_AMT
                        FROM    (
                                SELECT  DISTINCT TYPE_KEY, BUDG_CODE, DRAFT_NO,DRAFT_SEQ,DRAFT_AMT, DRAFT_REMIND_AMT
                                FROM    T_AFB555SKR1  
                                WHERE   TYPE_KEY    = @TypeKey
                                AND     TYPE_FLAG   = '0'
                                ) B1
                        GROUP   BY B1.TYPE_KEY
                        )              B  ON B.TYPE_KEY = A.TYPE_KEY
            LEFT  JOIN  (-- 지출결의금액, 이체금액
                        SELECT  TYPE_KEY, SUM(PAY_AMT) PAY_AMT, SUM(TRANS_AMT) TRANS_AMT, SUM(NON_PAY_AMT) NON_PAY_AMT
                        FROM    T_AFB555SKR1  
                        WHERE   TYPE_KEY    = @TypeKey
                        AND     TYPE_FLAG   = '0'
                        GROUP   BY TYPE_KEY
                        )              C  ON C.TYPE_KEY = A.TYPE_KEY
    WHERE   A.TYPE_KEY  = @TypeKey
    AND     A.TYPE_FLAG = 'S'

--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  TYPE_FLAG, SEQ, BUDG_CODE, BUDG_NAME_1, BUDG_NAME_2, BUDG_NAME_3, BUDG_NAME_4
          , BUDG_NAME_5, BUDG_NAME_6, BUDG_NAME_7, BUDG_NAME_8, BUDG_CONF_I, BUDG_BALN_I
          , DRAFT_NO, DRAFT_TITLE, DRAFT_DATE, DRAFT_AMT, CLOSE_YN
          , PAY_DRAFT_NO, PAY_TITLE, SLIP_DATE, PAY_AMT, TRANS_DATE, TRANS_AMT, NON_PAY_AMT, DRAFT_REMIND_AMT, BUDG_TYPE
    FROM    T_AFB555SKR1  
    WHERE   TYPE_KEY    = @TypeKey
    ORDER   BY BUDG_CODE, TYPE_FLAG, SEQ


<!-- END -->
</select>

</mapper>