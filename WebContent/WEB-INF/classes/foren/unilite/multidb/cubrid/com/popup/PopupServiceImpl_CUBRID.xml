<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="popupServiceImpl">
    <select id="popupServiceImpl.fnGetAsset" parameterType="Map" resultType="rMap">
    --UIFRSPopUpKrv.CIFRSPopUpKr[fnGetAsset] Query1
                SELECT  A.ASST        AS ASSET_CODE
             ,  A.ASST_NAME    AS ASSET_NAME
             ,  A.ACCNT
             ,  N1.ACCNT_NAME
             ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
             ,  A.ACQ_AMT_I
             ,  A.ACQ_Q
             ,  A.DRB_YEAR
             ,  CONVERT(NUMERIC, M1.CODE_NAME) / 1000               AS DPR_RATE
             ,  A.SPEC
        FROM           AISS300T AS A 
            LEFT  JOIN ABA400T  AS N1  ON  N1.COMP_CODE = A.COMP_CODE
                                                    AND N1.ACCNT     = A.ACCNT
            LEFT  JOIN BSA100T  AS M1  ON  M1.COMP_CODE = A.COMP_CODE
                                                    AND M1.MAIN_CODE = (CASE WHEN A.DEP_CTL = '1' THEN 'A033'
                                                                             WHEN A.DEP_CTL = '2' THEN 'A034'
                                                                        END)
                                                    AND M1.SUB_CODE  = RIGHT(CONVERT(NVARCHAR, 1000+A.DRB_YEAR), 3)
        WHERE A.COMP_CODE      =  #{S_COMP_CODE}

        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
             AND (A.ASST LIKE #{TXT_SEARCH} + '%'                             
             OR A.ASST_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             ORDER BY A.ASST ASC
         </if>
         <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
            AND (A.ASST LIKE #{ASSET_CODE} + '%'                             
             OR A.ASST_NAME LIKE '%'+ #{ASSET_CODE} + '%' )     
            </if>
            <if test="@foren.Ognl@isNotEmpty(ASSET_NAME)">
            AND (A.ASST LIKE #{ASSET_NAME} + '%'                             
             OR A.ASST_NAME LIKE '%'+ #{ASSET_NAME} + '%' )    
            </if>                
         </if>    
    </select>
    
    <select id="popupServiceImpl.prizePopup" parameterType="Map" resultType="rMap">
        -- 금융상품코드 Main
        
        <if test="PARAM_MAIN_CODE == &quot;HC04&quot;">
        --금융상품코드POPUP_2012년 이전까지 사용    
        --UHpb01Krv.cPopup[GetHumanPrize]
        SELECT SUB_CODE,REF_CODE2 FROM HCD100T 
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = #{PARAM_MAIN_CODE}
           AND REF_CODE1 = 'A'
         ORDER BY SUB_CODE 
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC08&quot;">
        --금융상품코드POPUP_2012년 이후 사용        
        --UHpb01Krv.cPopup[GetHumanPrize2]
        SELECT REF_CODE2, REF_CODE3 FROM HCD100T 
         WHERE COMP_CODE        = #{S_COMP_CODE}
           AND MAIN_CODE        = #{PARAM_MAIN_CODE}
           AND REF_CODE1        = '1'
           AND LEFT(SUB_CODE,1) = #{IN_COME_KIND}
         ORDER BY SUB_CODE 
        </if>
        
    
    </select>    
    
    <select id="popupServiceImpl.prizePopup2" parameterType="Map" resultType="rMap">
        -- 금융상품코드 Sub
        
        <if test="PARAM_MAIN_CODE == &quot;HC04&quot;">
        --금융상품코드POPUP_2012년 이전까지 사용    
        --UHpb01Krv.cPopup[GetHumanPrize]
        SELECT REF_CODE2,REF_CODE3,REF_CODE4,REF_CODE5,SUB_CODE 
        
          FROM HCD100T 
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = #{PARAM_MAIN_CODE}
           AND REF_CODE1 = 'B'
         ORDER BY REF_CODE1,SUB_CODE,REF_CODE3,REF_CODE5 
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC08&quot;">
             --금융상품코드POPUP_2012년 이후 사용
             --UHpb01Krv.cPopup[GetHumanPrize2]
        SELECT REF_CODE3, REF_CODE2 FROM HCD100T
         WHERE COMP_CODE        = #{S_COMP_CODE}
           AND MAIN_CODE        = #{PARAM_MAIN_CODE}
           AND REF_CODE1        = '2'
           AND LEFT(SUB_CODE,1) = #{IN_COME_KIND}
         ORDER BY SUB_CODE
        </if>
    </select>
    
    <select id="popupServiceImpl.buCodePopup" parameterType="Map" resultType="rMap">
        -- 부표코드 팝업
        
        <if test="gaPopUp3 == &quot;200001&quot;">
            SELECT TAX_CODE      -- '원천징수 코드'
                 , TAX_CODE_NAME -- '코드 명' 
                 
                 FROM HBS130T
                 
            WHERE COMP_CODE = #{S_COMP_CODE}
              AND TAX_CODE  LIKE 'B%'
              AND TAX_YYYYMM = #{gaPopUp3}
              AND REF_CODE1  = #{gaPopUp2}
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (TAX_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR TAX_YYYYMM LIKE '%'+ #{TXT_SEARCH} + '%' )
                 
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BU_CODE)">
                    AND (TAX_CODE LIKE #{BU_CODE} + '%'                             
                     OR TAX_YYYYMM LIKE '%'+ #{BU_CODE} + '%' )                 
                </if>            
              </if> 

            
        </if>
        <if test="gaPopUp3 != &quot;200001&quot;">
            SELECT TAX_CODE         -- '원천징수 코드'
                 , TAX_CODE_NAME    -- '코드 명' 
                 
                 FROM HBS130T
                 
             WHERE COMP_CODE = #{S_COMP_CODE}
              AND TAX_CODE LIKE 'C%'    
              AND TAX_YYYYMM = #{gaPopUp3}
              AND REF_CODE1  = #{gaPopUp2}
              AND TAX_CODE   &gt;= #{gaPopUp4}
              AND TAX_CODE   &lt;= #{gaPopUp5}
              
              <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (TAX_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR TAX_YYYYMM LIKE '%'+ #{TXT_SEARCH} + '%' )
                 
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
                    AND (TAX_CODE LIKE #{TAX_GUBN} + '%'                             
                     OR TAX_YYYYMM LIKE '%'+ #{TAX_GUBN} + '%' )                 
                </if>            
              </if> 
              
        </if>    
                
    </select>
    
    <select id="popupServiceImpl.saupPopupCode" parameterType="Map" resultType="rMap">
        
        -- 2016.05.16 'HC01' 조건에 해당하는 팝업이 필요해서 만들었으며, 다른 조건 식에 맞는 것을 수정하거나 추가해야함.
        
        <if test="PARAM_MAIN_CODE == &quot;HC01&quot;">
            -- 이자소득구분
            SELECT 
                SUB_CODE               AS SAUP_POPUP_CODE-- 코드
                ,CODE_NAME               AS SAUP_POPUP_NAME-- 명의
                ,NVL(REF_CODE1,'') AS REF_CODE1        -- 실지명의구분
                ,NVL(REF_CODE2,'') AS REF_CODE2        -- 실지명의구분
                ,NVL(REF_CODE3,'') AS REF_CODE3        -- 사용번호
            
            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$'    
              AND SUB_CODE  >= ''   
    
            ORDER BY SORT_SEQ ASC
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC02&quot;">
            -- 과세구분코드 (2012년 이전)
            
            SELECT 
                SUB_CODE                  AS SUB_CODE  -- 코드 
                ,CODE_NAME                  AS CODE_NAME -- 소득자 
                ,NVL(REF_CODE1,'')     AS REF_CODE1 -- 소득유형
                ,NVL(REF_CODE2,'')     AS REF_CODE2 --소득유형 
                ,NVL(REF_CODE3,'')     AS REF_CODE3 --이자소득 
                ,NVL(REF_CODE4,'')     AS REF_CODE4 --배당소득 (일반)
                ,NVL(REF_CODE5,'')     AS REF_CODE5 --배당소득 (의제)

            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$' 
              AND SUB_CODE  >= ''
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
                    AND (SUB_CODE LIKE #{TAX_GUBN} + '%'                             
                     OR CODE_NAME LIKE '%'+ #{TAX_GUBN} + '%' )                 
                </if>            
              </if> 
             ORDER BY SORT_SEQ ASC  
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC03&quot;">
            -- 채권이자구분
            SELECT 
                SUB_CODE             AS SUB_CODE  --코 드
                ,CODE_NAME             AS CODE_NAME --설 명  
                ,'' as '설 명'
                ,'' as '설 명'
                ,'' as '설 명' 
            
            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$'    
              --AND SUB_CODE  >= ''
              <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SORT_SEQ ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(CLAIM_INTER_GUBN)">
                    AND (SUB_CODE LIKE #{CLAIM_INTER_GUBN} + '%'                             
                     OR CODE_NAME LIKE '%'+ #{CLAIM_INTER_GUBN} + '%' )          
                     ORDER BY SORT_SEQ ASC      
                </if>            
              </if>
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC05&quot;">
            -- 소득종류코드
            SELECT 
                 SUB_CODE             AS SUB_CODE  --코 드
                ,CODE_NAME             AS CODE_NAME --소득종류
                ,''                 AS REF_CODE1 --설명
                ,''                 AS REF_CODE2 --설명 
                ,''                 AS REF_CODE3 --설명 
                ,''                 AS REF_CODE4 --설명 
                ,''                 AS REF_CODE5 --설명 
            
            
            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$'  
              AND REF_CODE1  = #{DED_TYPE}
            ORDER BY SUB_CODE ASC  
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC06&quot;">
            -- 조세특례코드
            SELECT 
                SUB_CODE             AS SUB_CODE  --코 드
                ,CODE_NAME             AS CODE_NAME --조세특약
                ,'' as '설 명'
                ,'' as '설 명'
                ,'' as '설 명' 
            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$'    
              --AND SUB_CODE  >= ''
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SORT_SEQ ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(TAX_EXCEPTION)">
                    AND (SUB_CODE LIKE #{TAX_EXCEPTION} + '%'                             
                     OR CODE_NAME LIKE '%'+ #{TAX_EXCEPTION} + '%' )                
                     ORDER BY SORT_SEQ ASC
                </if>            
              </if>
        </if>
        
        <if test="PARAM_MAIN_CODE == &quot;HC07&quot;">
            -- 과세구분코드 (2012년 부터)
            SELECT 
                SUB_CODE             AS SUB_CODE  --코 드 
                ,CODE_NAME            AS CODE_NAME -- 소득자 
                ,NVL(REF_CODE1,'') AS REF_CODE1 -- 소득유형
                ,NVL(REF_CODE2,'') AS REF_CODE2 -- 소득유형
                ,'' as '설 명' 
            
            FROM HCD100T
            
            WHERE COMP_CODE  = #{S_COMP_CODE}
              AND MAIN_CODE  = #{PARAM_MAIN_CODE}
              AND SUB_CODE  != '$'    
              AND SUB_CODE  >= ''
              
              <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(TAX_GUBN)">
                    AND (SUB_CODE LIKE #{TAX_GUBN} + '%'                             
                     OR CODE_NAME LIKE '%'+ #{TAX_GUBN} + '%' )                
                </if>            
              </if>
              
              ORDER BY SORT_SEQ ASC
        </if>
    
    
    </select>
    
    <select id="popupServiceImpl.bussOfficeCode" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.bussOfficeCode */
     
     SELECT BUSS_OFFICE_NAME
         , BUSS_OFFICE_CODE
         , B.CODE_NAME LOCAL_TAX_GOVNM
         , BUSS_OFFICE_ADDR
         , (SELECT DIV_NAME                                          
              FROM BOR120T                              
             WHERE COMP_CODE = A.COMP_CODE                           
               AND DIV_CODE  = A.SECT_CODE) AS SECT_NAME             
         , LOCAL_TAX_GOV
         , SECT_CODE
      FROM            HBS230T A 
           INNER JOIN BSA100T B  ON B.COMP_CODE    = A.COMP_CODE
                                AND B.MAIN_CODE    = N'H137'
                                AND B.SUB_CODE     = A.LOCAL_TAX_GOV
      WHERE A.COMP_CODE     = #{S_COMP_CODE}

    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (BUSS_OFFICE_CODE LIKE #{TXT_SEARCH} + '%'                             
           OR BUSS_OFFICE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(BUSS_OFFICE_CODE)">
        AND (BUSS_OFFICE_CODE LIKE #{BUSS_OFFICE_CODE} + '%'                             
         OR BUSS_OFFICE_NAME LIKE '%'+ #{BUSS_OFFICE_CODE} + '%' )                
        </if>            
      </if>              
     ORDER BY BUSS_OFFICE_CODE ASC        
    </select>
    
    <select id="popupServiceImpl.wkordNum" parameterType="Map" resultType="rMap">  
        
        
        /*uniLITE5Popup.CPopup[fnGetWkordNum] Query01*/
        DECLARE     @COMP_CODE          NVARCHAR(08)        /* (필수) 법인코드            */
                  , @DIV_CODE           NVARCHAR(08)        /* (필수) 사업장            */
                  , @WKORD_NUM          NVARCHAR(20)        /* (선택) 작업지시번호        */
                  , @ITEM_CODE          NVARCHAR(20)        /* (선택) 품목코드            */
                  , @FR_PRODT_DATE      NVARCHAR(08)        /* (선택) 착수예정일(FROM)    */
                  , @TO_PRODT_DATE      NVARCHAR(08)        /* (선택) 착수예정일(TO)        */    
                  , @WORK_SHOP_CODE     NVARCHAR(08)        /* (선택) 작업장            */
                  , @ITEM_NAME          NVARCHAR(200)       /* (선택) 품목코드            */
                  , @USER_ID            NVARCHAR(10)        /* (필수) 사용자ID            */
                  , @LOT_NO             NVARCHAR(20)        /* (선택) LOT번호            */
        
        SET     @COMP_CODE          = #{S_COMP_CODE}
        SET     @DIV_CODE           = #{DIV_CODE}
        SET     @WKORD_NUM          = #{WKORD_NUM}
        SET     @ITEM_CODE          = #{ITEM_CODE}
        SET     @FR_PRODT_DATE      = #{FR_PRODT_DATE}
        SET     @TO_PRODT_DATE      = #{TO_PRODT_DATE}
        SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
        SET     @ITEM_NAME          = #{ITEM_NAME}
        SET     @USER_ID            = #{S_USER_ID}
        SET     @LOT_NO             = #{LOT_NO}
        
        DECLARE     @RefItem            NVARCHAR(01)        -- 사용자 품목명 참조 유형
        
        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T 
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID
        
        SET @RefItem = NVL(@RefItem, N'0')
        
        SELECT A.WKORD_NUM
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE C1.ITEM_NAME
               END                                                        AS ITEM_NAME
             , C1.SPEC
             , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_WKORD_DATE)     AS PRODT_WKORD_DATE
             , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE)     AS PRODT_START_DATE
             , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)       AS PRODT_END_DATE
             , CASE WHEN NVL(A.PROG_UNIT_Q, 0) = 0 THEN 0
                    ELSE NVL(A.WKORD_Q, 0) / NVL(A.PROG_UNIT_Q, 0)
               END                                                        AS WKORD_Q
             , A.WK_PLAN_NUM
             , A.DIV_CODE
             , A.WORK_SHOP_CODE
             , B.ORDER_NUM
             , NVL(B.ORDER_Q, 0)                                       AS ORDER_Q
             , A.REMARK
             , NVL(A.PRODT_Q, 0)                                       AS PRODT_Q
             , uniLITE.fnGetUserDateComp(C.COMP_CODE, C.DVRY_DATE)            AS DVRY_DATE
             , C1.STOCK_UNIT
             , A.PROJECT_NO
             , A.PJT_CODE
             , A.LOT_NO
        FROM              PMP100T A  
               LEFT  JOIN PPL100T B   ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.DIV_CODE    = A.DIV_CODE
                                                  AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
               LEFT  JOIN SOF110T C   ON C.COMP_CODE   = B.COMP_CODE
                                                  AND C.DIV_CODE    = B.DIV_CODE
                                                  AND C.ORDER_NUM   = B.ORDER_NUM
                                                  AND C.SER_NO      = B.SEQ
               INNER JOIN BPR100T C1  ON C1.COMP_CODE  = A.COMP_CODE
                                                  AND C1.ITEM_CODE  = A.ITEM_CODE
        WHERE  A.COMP_CODE                 = @COMP_CODE
        AND    A.DIV_CODE                  = @DIV_CODE
        AND    A.LINE_END_YN               = 'Y'
        
        AND  ((A.WKORD_NUM                 = @WKORD_NUM       AND @WKORD_NUM      != '')                     OR (@WKORD_NUM      = ''))
        AND  ((A.ITEM_CODE           LIKE @ITEM_CODE + '%' AND @ITEM_CODE      != '')                     OR (@ITEM_CODE      = ''))
        AND  ((A.PRODT_START_DATE   &gt;= @FR_PRODT_DATE   AND @FR_PRODT_DATE  != '')                     OR (@FR_PRODT_DATE  = ''))
        AND  ((A.PRODT_START_DATE   &lt;= @TO_PRODT_DATE   AND @TO_PRODT_DATE  != '')                     OR (@TO_PRODT_DATE  = ''))
        AND  ((A.WORK_SHOP_CODE            = @WORK_SHOP_CODE  AND @WORK_SHOP_CODE != '')                     OR (@WORK_SHOP_CODE = ''))
        AND  ((C1.ITEM_NAME     LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME != '')
           OR (C1.ITEM_NAME1    LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME != '')
           OR (C1.ITEM_NAME2    LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME != '')       OR (@ITEM_NAME      = ''))
        AND  ((A.LOT_NO                    = @LOT_NO          AND @LOT_NO         != '')                     OR (@LOT_NO         = ''))
        
        ORDER BY A.WKORD_NUM
        
        
    </select>
    
    <select id="popupServiceImpl.negoNoPopup" parameterType="Map" resultType="rMap">
    
         -- UTFuncKrv.CTFuncKr1[fnNegoNumbers]   Query01 
         SELECT 
                A.DIV_CODE, A.NEGO_SER_NO, A.TRADE_TYPE, A.NATION_INOUT, A.PROJECT_NO, A.NEGO_DIV  
               ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.NEGO_DATE) NEGO_DATE 
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'S010' AND SUB_CODE = A.NEGO_NM
                   AND  COMP_CODE = #{S_COMP_CODE} 
                 ) AS NEGO_NM 
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'S010' AND SUB_CODE = A.EXPORT_NM 
                   AND  COMP_CODE = #{S_COMP_CODE} 
                 ) AS EXPORT_NM 
               ,A.NEGO_NO 
               ,(SELECT Z.CUSTOM_NAME FROM BCM100T Z WHERE Z.CUSTOM_TYPE = N'4' AND Z.CUSTOM_CODE = A.NEGO_BANK 
                   AND  Z.COMP_CODE = #{S_COMP_CODE} 
                ) AS NEGO_BANK 
               ,A.OPEN_BANK
               ,A.IMPORTER 
               ,uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, A.IMPORTER) AS IMPORTER_NM  
               ,A.EXPORTER 
               ,uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, A.EXPORTER) AS EXPORTER_NM  
               ,A.MONEY_UNIT 
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T005' AND SUB_CODE = A.TERMS_PRICE 
                   AND  COMP_CODE = #{S_COMP_CODE} 
                 ) AS TERMS_PRICE
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T006' AND SUB_CODE = A.PAY_TERMS     
                   AND  COMP_CODE = #{S_COMP_CODE} 
                 ) AS PAY_TERMS 
               ,A.PAY_DURING 
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T016' AND SUB_CODE = A.PAY_METHODE
                    AND  COMP_CODE = #{S_COMP_CODE} 
                 ) AS PAY_METHODE1 
               ,A.EXCHAGE_COMM_RATE 
               ,A.NEGO_AMT      
               ,A.EXCHANGE_RATE 
               ,A.NEGO_AMT_WON  
               ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.EXPIRY_DATE) AS EXPIRY_DATE 
               ,A.PRIME_RATE 
               ,(SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = N'T102' AND SUB_CODE = A.FLAG_FLAW 
                    AND COMP_CODE = #{S_COMP_CODE} 
                 ) AS FLAG_FLAW 
               ,A.PAY_DIV 
               ,uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_DATE) AS PAY_DATE 
               ,A.PAY_AMT 
               ,A.PAY_EXCHANGE_RATE 
               ,A.PAY_AMT_WON 
               ,A.AMT_SUB_PM 
               ,A.COLET_TYPE 
               ,A.REMARKS1  
               ,A.REMARKS2 
         FROM  TEE100T A 
         WHERE A.NEGO_SER_NO LIKE #{NEGO_SER_NO} + '%'
           AND A.COMP_CODE = #{S_COMP_CODE} 
         AND A.NEGO_TYPE = N'2'
         AND A.NEGO_DATE &gt;= #{NEGO_DATE_FR}
         AND A.NEGO_DATE &lt;= #{NEGO_DATE_TO}
         AND A.DIV_CODE = #{DIV_CODE} 
         ORDER BY NEGO_SER_NO DESC 
    </select>
    
    <select id="popupServiceImpl.progWorkCode" parameterType="Map" resultType="rMap">  
        <if test="@foren.Ognl@isEmpty(TEST)">
       /* --uniLITE5Popup.CPopup[getProgWorkCode] Query01 */
        SELECT PROG_WORK_CODE
             , PROG_WORK_NAME
             , PROG_UNIT
          FROM PBS200T 
         WHERE DIV_CODE           = #{DIV_CODE}
           AND USE_YN             = 'Y' 
           <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
           AND (PROG_WORK_CODE LIKE '%'+ #{TXT_SEARCH} + '%'
                OR  
                PROG_WORK_NAME LIKE '%'+ #{TXT_SEARCH} + '%'
            )
           </if>
           AND COMP_CODE          = #{S_COMP_CODE}
         ORDER BY PROG_WORK_CODE
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEST)">
       /* --uniLITE5Popup.CPopup[getProgWorkCode] Query02 */
        SELECT A.PROG_WORK_CODE
             , A.PROG_WORK_NAME
             , A.PROG_UNIT
          FROM PBS200T A 
             , PMP100T B 
         WHERE B.DIV_CODE           = #{DIV_CODE}
           AND A.USE_YN             = 'Y' 
           AND (B.PROG_WORK_CODE LIKE #{PROG_WORK_CODE} + '%'
             OR A.PROG_WORK_NAME LIKE #{PROG_WORK_NAME} + '%')
           AND B.WKORD_NUM          = #{WKORD_NUM}
           AND B.PROG_WORK_CODE     = A.PROG_WORK_CODE 
           AND A.COMP_CODE          = #{S_COMP_CODE}
         ORDER BY A.PROG_WORK_CODE
         </if>   
    </select>
    
    <select id="popupServiceImpl.equipCode" parameterType="Map" resultType="rMap">  
    /* --uniLITE5Popup.CPopup[getEquipCode] Query02 */
    SELECT A.COMP_CODE
         , A.DIV_CODE
         , A.EQUIP_CODE
         , A.EQUIP_NAME
         , A.EQUIP_SPEC
         , A.EQUIP_TYPE
         , A.DATE_PURCHASE
         , A.PURCHASE_NAME
         , A.PURCHASE_AMT
         , A.MAKER_NAME
         , A.DATE_MAKER
         , A.REMARK
      FROM S_EQM100T_KD A 
     WHERE A.COMP_CODE          = #{S_COMP_CODE}
       AND A.DIV_CODE           = #{DIV_CODE}
       AND A.DATE_PURCHASE      &gt;= #{DATE_PURCHASE_FR}
       AND A.DATE_PURCHASE      &lt;= #{DATE_PURCHASE_TO}
     <if test="@foren.Ognl@isNotEmpty(EQUIP_TYPE)">
       AND A.EQUIP_TYPE         = #{EQUIP_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(EQUIP_CODE)">
       AND A.EQUIP_CODE         = #{EQUIP_CODE}
     </if>
     ORDER BY A.EQUIP_CODE 
    </select>
    
    <select id="popupServiceImpl.moldCode" parameterType="Map" resultType="rMap">  
    /* --uniLITE5Popup.CPopup[getEquipCode] Query02 */
    SELECT A.COMP_CODE
         , A.DIV_CODE
         , A.MOLD_CODE
         , A.MOLD_NAME
         , A.MOLD_TYPE
         , B.OEM_ITEM_CODE
         , B.CAR_TYPE
         , A.ST_LOCATION
         , A.MAX_DEPR
         , A.CHK_DEPR
         , A.NOW_DEPR
      FROM      S_MOM100T_KD A 
      LEFT JOIN BPR100T      B  ON B.COMP_CODE   = A.COMP_CODE
                               AND B.ITEM_CODE   = A.ITEM_CODE
     WHERE A.COMP_CODE          = #{S_COMP_CODE}
       AND A.DIV_CODE           = #{DIV_CODE}
       AND A.DATE_INST      &gt;= #{DATE_INST_FR}
       AND A.DATE_INST      &lt;= #{DATE_INST_TO}
     <if test="@foren.Ognl@isNotEmpty(EQUIP_TYPE)">
       AND A.MOLD_TYPE          = #{MOLD_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(EQUIP_CODE)">
       AND A.MOLD_CODE          = #{MOLD_CODE}
     </if>
     ORDER BY A.MOLD_CODE 
    </select>
    
    
    <select id="popupServiceImpl.custPopup" parameterType="Map" resultType="rMap">  
    /*  popupServiceImpl.custPopup */
        DECLARE  @CUSTOM_CODE_CNT      INT
               , @COMPANY_NUM_CNT      INT
               , @CUSTOM_NAME_CNT      INT
               , @COMP_CODE            NVARCHAR(8)
               , @TXT_SEARCH2          NVARCHAR(MAX)
    
        SET    @CUSTOM_CODE_CNT = 0
        SET    @COMPANY_NUM_CNT = 0
        SET    @CUSTOM_NAME_CNT = 0
    
        SET    @COMP_CODE       = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                
        SET    @TXT_SEARCH2     = #{CUSTOM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">                
        SET    @TXT_SEARCH2     = #{CUSTOM_NAME}
        </if>
    
        SELECT @CUSTOM_CODE_CNT = COUNT(*) FROM BCM100T A  WHERE A.COMP_CODE = @COMP_CODE AND A.CUSTOM_CODE = @TXT_SEARCH2
        SELECT @COMPANY_NUM_CNT = COUNT(*) FROM BCM100T A  WHERE A.COMP_CODE = @COMP_CODE AND A.COMPANY_NUM = @TXT_SEARCH2
        SELECT @CUSTOM_NAME_CNT = COUNT(*) FROM BCM100T A  WHERE A.COMP_CODE = @COMP_CODE AND A.CUSTOM_NAME = @TXT_SEARCH2

       SELECT   ROW_NUMBER() OVER(ORDER BY 
                                           <if test="RDO == 1">
                                                   A.CUSTOM_CODE
                                           </if>
                                           <if test="RDO != 1">
                                                   CASE M1.REF_ITEM
                                                     WHEN '0' THEN A.CUSTOM_NAME
                                                     WHEN '1' THEN A.CUSTOM_NAME1
                                                     WHEN '2' THEN A.CUSTOM_NAME2
                                                              ELSE A.CUSTOM_NAME
                                                END 
                                           </if>
                                       ) AS ROW_NUM
             , A.CUSTOM_CODE
             , CASE M1.REF_ITEM
                     WHEN '0' THEN A.CUSTOM_NAME
                     WHEN '1' THEN A.CUSTOM_NAME1
                     WHEN '2' THEN A.CUSTOM_NAME2
                              ELSE A.CUSTOM_NAME
                END                                             AS CUSTOM_NAME
             , CASE WHEN NVL(A.COMPANY_NUM, '') = '' THEN ''
                    ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
                         SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
                         SUBSTRING(A.COMPANY_NUM,6,5)
               END                                              AS COMPANY_NUM
             , NVL(A.TOP_NAME, '')                           AS TOP_NAME
             , NVL(A.BUSINESS_TYPE, '')                      AS BUSINESS_TYPE
             , NVL(A.COMP_CLASS, '')                         AS COMP_CLASS
             , NVL(A.COMP_TYPE, '')                          AS COMP_TYPE
             , NVL(A.ADDR1, '')                              AS ADDR1
             , NVL(A.ADDR2, '')                              AS ADDR2
             , SUBSTRING(A.ZIP_CODE,1,3) + '-' +
               SUBSTRING(A.ZIP_CODE,4,3)                         AS ZIP_CODE
             , NVL(A.TELEPHON, '')                           AS TELEPHON
             , NVL(A.FAX_NUM, '')                            AS FAX_NUM
             , NVL(A.MAIL_ID, '')                            AS MAIL_ID
             , NVL(A.WON_CALC_BAS, '')                       AS WON_CALC_BAS
             , NVL(A.TO_ADDRESS, '')                         AS TO_ADDRESS
             , NVL(A.TAX_CALC_TYPE, '')                      AS TAX_CALC_TYPE
             , NVL(A.TRANS_CLOSE_DAY, '')                    AS TRANS_CLOSE_DAY
             , NVL(A.RECEIPT_DAY, '')                        AS RECEIPT_DAY
             , NVL(A.TAX_TYPE, '')                           AS TAX_TYPE
             , NVL(A.VAT_RATE, 10)                           AS VAT_RATE
             , NVL(A.MONEY_UNIT, C.SUB_CODE)                 AS MONEY_UNIT
             , NVL(A.BILL_TYPE, '')                          AS BILL_TYPE
             , NVL(A.SET_METH, '')                           AS SET_METH
             , NVL(A.CUSTOM_FULL_NAME, '')                   AS CUSTOM_FULL_NAME
             , uniLITE.fnCipherDecrypt(A.TOP_NUM, 'A')          AS TOP_NUM
             , NVL(A.BANK_CODE, '')                          AS BANK_CODE
             , NVL(B.CUSTOM_NAME, '')                        AS BANK_NAME
             , NVL(A.REMARK, '')                             AS REMARK
             , uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM, 'B')     AS BANKBOOK_NUM
                , A.NATION_CODE                                    AS NATION_CODE
                , NVL(A.RETURN_CODE,'')                            AS RETURN_CODE
             , NVL(A.SERVANT_COMPANY_NUM, '')                AS SERVANT_COMPANY_NUM
                /* 계좌번호 코드화*/
                , D.BOOK_CODE                                        AS BOOK_CODE
             , D.BOOK_NAME                                        AS BOOK_NAME
             , D.BANK_CODE                                        AS BOOK_BANK_CODE
             , D.BANK_NAME                                        AS BOOK_BANK_NAME

             , Q.PRSN_NAME                                      AS PRSN_NAME
             , Q.HAND_PHON                                      AS PRSN_HANDPHONE
             , Q.MAIL_ID                                        AS PRSN_EMAIL
             , CASE WHEN Q.TELEPHONE_NUM1 IS NULL THEN Q.TELEPHONE_NUM2
                    ELSE Q.TELEPHONE_NUM1
               END                                                AS PRSN_PHONE
             , A.AGENT_TYPE

          FROM           BCM100T A 
               LEFT JOIN BCM100T B  ON B.COMP_CODE   = A.COMP_CODE
                                                AND B.CUSTOM_CODE = A.BANK_CODE
                                                AND B.CUSTOM_TYPE = '4'
               LEFT JOIN BSA100T C  ON C.COMP_CODE   = A.COMP_CODE
                                                AND C.MAIN_CODE   = N'B004'
                                                AND C.SUB_CODE   != '$'
                                                AND C.REF_CODE1   = 'Y'
               /* 은행 계좌번호 코드로 변경 */
               LEFT JOIN (SELECT *
                            FROM (SELECT  AA.COMP_CODE
                                        , AA.CUSTOM_CODE
                                        , AA.BOOK_CODE
                                        , AA.BOOK_NAME
                                        , AA.BANK_CODE
                                        , BB.CUSTOM_NAME AS BANK_NAME
                                        , AA.MAIN_BOOK_YN
                                        , RANK() OVER(    PARTITION BY AA.COMP_CODE, AA.CUSTOM_CODE 
                                                        ORDER BY  AA.MAIN_BOOK_YN DESC, AA.BOOK_CODE ASC
                                                     ) AS RK 
                                    FROM BCM130T AA  
                                    LEFT JOIN BCM100T BB  ON BB.COMP_CODE   = AA.COMP_CODE
                                                AND BB.CUSTOM_CODE = AA.BANK_CODE
                                                AND BB.CUSTOM_TYPE = '4'
                                    WHERE AA.COMP_CODE =#{S_COMP_CODE})  DD
                            WHERE RK = 1  )    D 
                                                 ON D.COMP_CODE   = A.COMP_CODE
                                                AND D.CUSTOM_CODE   = A.CUSTOM_CODE
                                                AND D.RK = 1
               LEFT JOIN BSA300T M1  ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
               LEFT JOIN BCM120T Q
                         ON Q.COMP_CODE    = A.COMP_CODE
                        AND Q.CUSTOM_CODE    = A.CUSTOM_CODE
                        AND Q.MAIN_BILL_YN    = 'Y'
                        AND Q.SEQ            = (SELECT MIN(X.SEQ) AS SEQ 
                                                FROM BCM120T X 
                                               WHERE X.COMP_CODE        = Q.COMP_CODE 
                                                 AND X.CUSTOM_CODE        = Q.CUSTOM_CODE
                                                 AND X.MAIN_BILL_YN    = 'Y')
               
         WHERE   A.COMP_CODE      = @COMP_CODE
           AND (((A.CUSTOM_CODE = @TXT_SEARCH2 AND @CUSTOM_CODE_CNT > 0) 
            OR  (A.COMPANY_NUM = @TXT_SEARCH2 AND @COMPANY_NUM_CNT > 0)
            OR  (A.CUSTOM_NAME = @TXT_SEARCH2 AND @CUSTOM_NAME_CNT > 0))

            OR ( A.COMP_CODE = @COMP_CODE 
           AND ( @CUSTOM_CODE_CNT = 0 AND @COMPANY_NUM_CNT = 0 AND @CUSTOM_NAME_CNT = 0) 
           AND ((Replace(A.COMPANY_NUM, '-', '') LIKE'%'+ Replace(@TXT_SEARCH2, '-', '') + '%')
            OR  (A.CUSTOM_NAME LIKE '%'+ @TXT_SEARCH2 + '%'))))

        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             AND A.USE_YN = #{USE_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
            AND NVL(A.AGENT_TYPE,'') = #{AGENT_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
            AND A.CUSTOM_TYPE = #{CUSTOM_TYPE}
        </if>
        
        <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">    
           AND ${ADD_QUERY}
        </if>
        
        
    </select>
    
    <select id="popupServiceImpl.agentCustPopup" parameterType="Map" resultType="rMap">  
    /*  popupServiceImpl.agentCustPopup */
       SELECT     A.CUSTOM_CODE
             , CASE M1.REF_ITEM
                     WHEN '0' THEN A.CUSTOM_NAME
                     WHEN '1' THEN A.CUSTOM_NAME1
                     WHEN '2' THEN A.CUSTOM_NAME2
                              ELSE A.CUSTOM_NAME
                END                                             AS CUSTOM_NAME
             , CASE WHEN NVL(A.COMPANY_NUM, '') = '' THEN ''
                    ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
                         SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
                         SUBSTRING(A.COMPANY_NUM,6,5)
               END                                              AS COMPANY_NUM
             , NVL(A.TOP_NAME, '')                           AS TOP_NAME
             , NVL(A.BUSINESS_TYPE, '')                      AS BUSINESS_TYPE
             , NVL(A.COMP_CLASS, '')                         AS COMP_CLASS
             , NVL(A.COMP_TYPE, '')                          AS COMP_TYPE
             , NVL(A.ADDR1, '')                              AS ADDR1
             , NVL(A.ADDR2, '')                              AS ADDR2
             , NVL(A.TELEPHON, '')                           AS TELEPHON
             , NVL(A.FAX_NUM, '')                            AS FAX_NUM
             , NVL(A.MAIL_ID, '')                            AS MAIL_ID
             , NVL(A.WON_CALC_BAS, '')                       AS WON_CALC_BAS
             , NVL(A.TO_ADDRESS, '')                         AS TO_ADDRESS
             , NVL(A.TAX_CALC_TYPE, '')                      AS TAX_CALC_TYPE
             , NVL(A.TRANS_CLOSE_DAY, '')                    AS TRANS_CLOSE_DAY
             , NVL(A.RECEIPT_DAY, '')                        AS RECEIPT_DAY
             , NVL(A.TAX_TYPE, '')                           AS TAX_TYPE
             , NVL(A.VAT_RATE, 10)                           AS VAT_RATE
             , NVL(A.MONEY_UNIT, C.SUB_CODE)                 AS MONEY_UNIT
             , NVL(A.BILL_TYPE, '')                          AS BILL_TYPE
             , NVL(A.SET_METH, '')                           AS SET_METH
             , NVL(A.AGENT_TYPE, '')                         AS AGENT_TYPE    
             , NVL(A.AREA_TYPE, '')                          AS AREA_TYPE    
             , NVL(A.CREDIT_YN, '')                          AS CREDIT_YN    
             , NVL(A.TOT_CREDIT_AMT, 0)                      AS TOT_CREDIT_AMT    
             , NVL(A.CREDIT_AMT, 0)                          AS CREDIT_AMT    
             , NVL(A.CREDIT_YMD, '')                         AS CREDIT_YMD    
             , NVL(A.BUSI_PRSN, '')                          AS BUSI_PRSN    
             , NVL(A.COLLECTOR_CP,'')                        AS COLLECTOR_CP    
             , CASE M1.REF_ITEM
                     WHEN '1' THEN B.CUSTOM_NAME1
                     WHEN '2' THEN B.CUSTOM_NAME2
                     ELSE A.CUSTOM_NAME
                    END                                         AS COLLECTOR_NM
             , NVL(A.COLLECT_DAY, '')                        AS COLLECT_DAY    
             , NVL(A.COLLECT_CARE, '2')                      AS COLLECT_CARE    
             , NVL(A.REMARK, '')                             AS REMARK    
             , unilite.fnCipherDecrypt(A.TOP_NUM, 'R')          AS TOP_NUM    
             , NVL(A.CREDIT_OVER_YN, 'N')                    AS CREDIT_OVER_YN    
             , NVL(A.BILL_DIV_CODE, '')                      AS BILL_DIV_CODE    
             , NVL(A.SERVANT_COMPANY_NUM, '')                AS SERVANT_COMPANY_NUM    
             , D.PRSN_NAME                                      AS PRSN_NAME
             , D.HAND_PHON                                      AS HAND_PHON
             , D.MAIL_ID                                        AS PRSN_EMAIL
             , CASE WHEN D.TELEPHONE_NUM1 IS NULL THEN D.TELEPHONE_NUM2
                    ELSE D.TELEPHONE_NUM1
               END                                                AS PRSN_PHONE


          FROM           BCM100T A 
               LEFT JOIN BCM100T B  ON B.COMP_CODE   = A.COMP_CODE
                                                AND B.CUSTOM_CODE = A.BANK_CODE
                                                AND B.CUSTOM_TYPE = '4'
               LEFT JOIN BSA100T C  ON C.COMP_CODE   = A.COMP_CODE
                                                AND C.MAIN_CODE   = N'B004'
                                                AND C.SUB_CODE   != '$'
                                                AND C.REF_CODE1   = 'Y'
               LEFT JOIN BSA300T M1  ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
               LEFT JOIN BCM120T D
                         ON D.COMP_CODE    = A.COMP_CODE
                        AND D.CUSTOM_CODE    = A.CUSTOM_CODE
                        AND D.MAIN_BILL_YN    = 'Y'
                        AND D.SEQ            = (SELECT MAX(X.SEQ) AS SEQ 
                                                FROM BCM120T X 
                                               WHERE X.COMP_CODE        = D.COMP_CODE 
                                                 AND X.CUSTOM_CODE        = D.CUSTOM_CODE
                                                 AND X.MAIN_BILL_YN    = 'Y')
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
        
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">                
                 AND (A.CUSTOM_CODE LIKE #{TXT_SEARCH2} + '%'                             
                  OR A.CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
              <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND(        Replace(#{CUSTOM_CODE}, '-', '')      IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
                    OR (   Replace(#{CUSTOM_CODE}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
                        AND (    Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_CODE}, '-', '') + '%'   
                              OR Replace(A.CUSTOM_NAME, '-', '') LIKE'%'+ Replace(#{CUSTOM_CODE}, '-', '') + '%' )
                        )
                   )
              </if>
              <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
               AND(        Replace(#{CUSTOM_NAME}, '-', '')      IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
                    OR (   Replace(#{CUSTOM_NAME}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
                        AND (    Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_NAME}, '-', '') + '%'   
                              OR Replace(A.CUSTOM_NAME, '-', '') LIKE '%'+ Replace(#{CUSTOM_NAME}, '-', '') + '%' )
                        )
                   )
              </if>                
            </if>

        <if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
           AND (NVL(A.COMPANY_NUM, '')              LIKE  Replace( #{COMPANY_NUM} , '-', '')  + '%'        
            OR  uniLITE.fnCipherDecrypt(A.TOP_NUM, '') LIKE '%' + Replace( #{COMPANY_NUM} , '-', '')  + '%' )
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             AND A.USE_YN = #{USE_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
            AND A.AGENT_TYPE = #{AGENT_TYPE}           
        </if>
        <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
            AND A.AREA_TYPE      = #{AREA_TYPE}              
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
            AND A.CUSTOM_TYPE IN 
             <foreach collection="CUSTOM_TYPE" item="item" separator="," close=")" open="(">
                          #{item}
            </foreach>
        </if>
        <if test="@foren.Ognl@isEmpty(CUSTOM_TYPE)">
            AND A.CUSTOM_TYPE IN ('1','3','5')
        </if>
        <if test="RDO == 1">
            ORDER BY    A.CUSTOM_CODE
        </if>
        <if test="RDO == 2">
            ORDER BY    CASE M1.REF_ITEM
                     WHEN '0' THEN A.CUSTOM_NAME
                     WHEN '1' THEN A.CUSTOM_NAME1
                     WHEN '2' THEN A.CUSTOM_NAME2
                              ELSE A.CUSTOM_NAME
                END 
        </if>
    </select>
    <select id="popupServiceImpl.bankPopup" parameterType="Map" resultType="rMap">
        SELECT  CUSTOM_CODE     AS BANK_CODE
             ,  CUSTOM_NAME     AS BANK_NAME
        FROM    BCM100T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     CUSTOM_TYPE = '4'
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
        AND    (CUSTOM_CODE LIKE #{TXT_SEARCH} + '%'
        OR      CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
        </if>
        <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
        AND    (CUSTOM_CODE LIKE #{BANK_CODE} + '%'
        OR      CUSTOM_NAME LIKE '%'+ #{BANK_CODE} + '%')
            </if>
            <if test="@foren.Ognl@isNotEmpty(BANK_NAME)">
        AND    (CUSTOM_CODE LIKE #{BANK_NAME} + '%'
        OR      CUSTOM_NAME LIKE '%'+ #{BANK_NAME} + '%')
            </if>
         </if>
        AND     START_DATE &lt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
        AND     CASE WHEN NVL(STOP_DATE,'') = ''
                     THEN '99999999'
                     ELSE STOP_DATE
                END  &gt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
        AND     USE_YN = 'Y'
        ORDER   BY CUSTOM_CODE
    </select>
    <select id="popupServiceImpl.ZipCodePopup" parameterType="Map" resultType="rMap">
        /* uniLITE5Popup.CPopup[fnZipCode] Query01 */
    <if test="ADDR_TYPE == &quot;A&quot;">
        SELECT  
               SUBSTRING(ZIP_CODE,1,3) + '-' +
               SUBSTRING(ZIP_CODE,4,3) AS ZIP_CODE
             , ZIP_NAME
             , ZIP_CODE1_NAME
             , ZIP_CODE2_NAME
             , ZIP_CODE3_NAME
             , ZIP_CODE5_NAME
             , CONVERT(NVARCHAR(40), '') as ZIP_CODE4_NAME
             , ZIP_CODE4_NAME AS ZIP_CODE7_NAME
             , CONVERT(NVARCHAR(40), '') LAW_DONG
             
          FROM BCM300T 
          WHERE 1=1
          <if test="USELIKE == false">
              AND ZIP_NAME  = #{TXT_SEARCH} 
          </if>
          <if test="USELIKE != false">
            AND ZIP_NAME  LIKE '%' + #{TXT_SEARCH} + '%'
          </if>
         <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
             AND ZIP_CODE          = REPLACE(#{ZIP_CODE},'-','')
         </if>
         <if test="@foren.Ognl@isNotEmpty(O_ZIP_CODE)">
              AND ZIP_CODE &gt; REPLACE(#{O_ZIP_CODE},'-','')
         </if>
          ORDER BY ZIP_CODE
    </if>
    <if test="ADDR_TYPE != &quot;A&quot;">
       SELECT  
               SUBSTRING(ZIP_CODE,1,3) + '-' +
               SUBSTRING(ZIP_CODE,4,3) AS ZIP_CODE
             , ZIP_NAME
             , ZIP_CODE1_NAME   /* 시 */
             , ZIP_CODE2_NAME   /* 군구 */
             , ZIP_CODE3_NAME   /* 읍 */
             , ZIP_CODE5_NAME +'-'+ ZIP_CODE6_NAME AS ZIP_CODE5_NAME    /* 건물번호 */
             , ZIP_CODE4_NAME   /* 도로명 */
             , ZIP_CODE7_NAME /* 다량배달처명 */
             , LAW_DONG
          FROM BCM310T 
          WHERE 1=1
         <if test="@foren.Ognl@isEmpty(ZIP_CODE)">
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND    (ZIP_CODE3_NAME LIKE  #{TXT_SEARCH} + '%'    /* 읍/면/동 */
                 OR ZIP_CODE4_NAME LIKE  #{TXT_SEARCH} + '%'     /* 도로 */
                 OR ZIP_CODE7_NAME LIKE  #{TXT_SEARCH} + '%'     /* 집합건물 */
                 OR LAW_DONG       LIKE  #{TXT_SEARCH} + '%' )         /* 법정동 */
             </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
               AND ZIP_CODE IS NULL
            </if>
         </if>
         <if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
             AND ZIP_CODE = REPLACE(#{ZIP_CODE},'-','')
         </if>
         <if test="@foren.Ognl@isNotEmpty(O_ZIP_CODE)">
              AND ZIP_CODE &gt; REPLACE(#{O_ZIP_CODE},'-','')
         </if>
          ORDER BY ZIP_CODE
    </if>
    </select>
    <select id="popupServiceImpl.userPopup" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.userPopup */
    SELECT A.USER_ID
         , A.USER_NAME
         , A.DEPT_CODE
         , B.TREE_NAME AS DEPT_NAME
         , A.COMP_CODE
      FROM      BSA300T A 
      LEFT JOIN BSA210T B  ON B.COMP_CODE = A.COMP_CODE
                          AND B.TREE_CODE = A.DEPT_CODE

     WHERE A.COMP_CODE     = #{S_COMP_CODE}
     <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
       AND (A.USER_ID   LIKE #{TXT_SEARCH} + '%' 
        OR  A.USER_NAME LIKE '%' + #{TXT_SEARCH} + '%')
     </if>
     <if test="@foren.Ognl@isNotEmpty(USER_ID)">
            <if test="USELIKE == false">
                 AND (A.USER_ID = #{USER_ID}
                OR A.USER_NAME = #{USER_ID}) 
            </if>
            <if test="USELIKE != false">
                AND (A.USER_ID LIKE #{USER_ID}+'%'
                OR  A.USER_NAME LIKE '%'+ #{USER_ID} + '%')
            </if>
      </if>
      <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
            <if test="USELIKE == false">
                AND (A.USER_ID = #{USER_NAME}
                OR A.USER_NAME = #{USER_NAME}) 
            </if>
            <if test="USELIKE != false">
                AND (A.USER_ID LIKE #{USER_NAME}+'%'
                OR  A.USER_NAME LIKE '%'+ #{USER_NAME} + '%')
            </if>
      </if>
     ORDER BY A.USER_ID ASC     
    
    </select>   
    
    <select id="popupServiceImpl.userNoCompPopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.userNoCompPopup */
        SELECT A.USER_ID
             , A.USER_NAME
             , A.DEPT_CODE
             , B.TREE_NAME AS DEPT_NAME
          FROM      BSA300T A 
         INNER JOIN BSA210T B  ON B.COMP_CODE = A.COMP_CODE
                              AND B.TREE_CODE = A.DEPT_CODE
    
         WHERE 1=1
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
           AND (A.USER_ID   LIKE #{TXT_SEARCH} + '%' 
            OR  A.USER_NAME LIKE '%' + #{TXT_SEARCH} + '%')
         </if>
         <if test="@foren.Ognl@isNotEmpty(USER_ID)">
                <if test="USELIKE == false">
                    AND A.USER_ID = #{USER_ID}
                </if>
                <if test="USELIKE != false">
                    AND A.USER_ID LIKE #{USER_ID}+'%'
                </if>
          </if>
          <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
                <if test="USELIKE == false">
                    AND A.USER_NAME = #{USER_NAME}
                </if>
                <if test="USELIKE != false">
                    AND A.USER_NAME LIKE '%' + #{USER_NAME}+'%'
                </if>
          </if>
         ORDER BY A.USER_ID ASC      
    </select>   
    
    <select id="popupServiceImpl.employeePopup" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.employeePopup */
    SELECT T.*
          , fnGetUserDateComp(T.COMP_CODE, T.JOIN_DATE)              AS JOIN_DATE
          , CASE WHEN T.RETR_DATE = '00000000' THEN ''
                 ELSE fnGetUserDateComp(T.COMP_CODE, T.RETR_DATE)
            END                                                      AS RETR_DATE
      FROM (
        SELECT  H.COMP_CODE
              , H.NAME
              , H.PERSON_NUMB
              , H.POST_CODE
              , M1.CODE_NAME                                         AS POST_CODE_NAME
              , H.DEPT_CODE
              , H.DEPT_NAME
              , H.JOIN_DATE
              , H.ABIL_CODE
              , H.RETR_DATE
              , M2.CODE_NAME                                         AS ABIL_NAME
              , H.SECT_CODE
              , M3.DIV_NAME                                          AS SECT_NAME
              , H.JOB_CODE
              , M4.CODE_NAME                                         AS JOB_NAME
              , H.PAY_CODE
              , H.TAX_CODE
              , H.OT_KIND
              , H.PAY_PROV_FLAG
              , H.EMPLOY_TYPE
              , H.MED_GRADE
              , H.ANU_BASE_I
              , H.SPOUSE
              , H.SUPP_AGED_NUM
              , H.BONUS_KIND
              , H.REPRE_NUM                                          AS REPRE_NUM
              , H.WOMAN
              , H.ZIP_CODE
              , H.KOR_ADDR
              , H.DEFORM_NUM
              , H.AGED_NUM
              , H.BRING_CHILD_NUM
              , NVL(H.ANNUAL_SALARY_I,0)                             AS ANNUAL_SALARY_I
              , NVL(H.WAGES_STD_I    ,0)                             AS WAGES_STD_I
              , NVL(H.BONUS_STD_I    ,0)                             AS BONUS_STD_I
              , NVL(H.COM_DAY_WAGES  ,0)                             AS COM_DAY_WAGES
              , NVL(H.COM_YEAR_WAGES ,0)                             AS COM_YEAR_WAGES
              , H.MED_INSUR_NO
              , M5.REF_CODE1                                         AS PAY_PROV_FLAG_DAT
              , H.SEX_CODE
              , B1.STD_AMOUNT_I                                      AS STD_AMOUNT_I_01
              , B2.STD_AMOUNT_I                                      AS STD_AMOUNT_I_02
              , B1.INSUR_AMOUNT_I                                    AS INSUR_AMOUNT_I_01
              , B2.INSUR_AMOUNT_I                                    AS INSUR_AMOUNT_I_02
              , H.TELEPHON
              , H.DIV_CODE
              , H.MAKE_SALE
              , H.COST_KIND
              , H.MED_AVG_I
              , H.NATION_CODE
              , H.LIVE_GUBUN
              , H.CHILD_20_NUM
              , H.PENS_GRADE
              , H.MED_INSUR_I
              , H.ANU_INSUR_I
              , H.HIRE_INSUR_TYPE
              , H.WORK_COMPEN_YN
              , H.REPRE_NUM                                          AS REPRE_NUM2
              , H.DED_TYPE
              , 0                                                    AS DOC_ID
              , NVL(H.BANK_CODE1, '')                                AS BANK_CODE1
              , NVL(C1.CUSTOM_NAME, '')                              AS BANK_NAME1
              , H.BANK_ACCOUNT1                                      AS BANK_ACCOUNT1   -- 2016.04.12 추가       
        FROM                HUM100T   H  
                LEFT  JOIN  HBS500T   B1  ON B1.COMP_CODE  = H.COMP_CODE
                                                      AND B1.GRADE      = H.MED_GRADE
                                                      AND B1.INSUR_TYPE = 2
                LEFT  JOIN  HBS500T   B2  ON B2.COMP_CODE  = H.COMP_CODE
                                                      AND B2.GRADE      = H.PENS_GRADE
                                                      AND B2.INSUR_TYPE = 1
                LEFT  JOIN  BCM100T   C1  ON C1.COMP_CODE   = H.COMP_CODE
                                                      AND C1.CUSTOM_CODE = H.BANK_CODE1
                                                      AND C1.CUSTOM_TYPE = '4'            -- 2016.04.12 추가                              
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE  = H.COMP_CODE
                                                      AND M1.MAIN_CODE  = 'H005'
                                                      AND M1.SUB_CODE   = H.POST_CODE
                LEFT  JOIN  BSA100T   M2  ON M2.COMP_CODE  = H.COMP_CODE
                                                      AND M2.MAIN_CODE  = 'H006'
                                                      AND M2.SUB_CODE   = H.ABIL_CODE
                LEFT  JOIN  BOR120T   M3  ON M3.COMP_CODE  = H.COMP_CODE
                                                      AND M3.DIV_CODE   = H.SECT_CODE
                LEFT  JOIN  BSA100T   M4  ON M4.COMP_CODE  = H.COMP_CODE
                                                      AND M4.MAIN_CODE  = 'H008'
                                                      AND M4.SUB_CODE   = H.JOB_CODE
                LEFT  JOIN  BSA100T   M5  ON M5.COMP_CODE  = H.COMP_CODE
                                                      AND M5.MAIN_CODE  = 'H031'
                                                      AND M5.SUB_CODE   = H. PAY_PROV_FLAG
                LEFT  JOIN  BSA100T   M6  ON M6.COMP_CODE  = H.COMP_CODE
                                                      AND M6.MAIN_CODE  = 'H011'
                                                      AND M6.SUB_CODE   = H.PAY_GUBUN
                                                      
                <if test="ADD_QUERY == &quot;Y&quot;">
                INNER JOIN  BSA100T   M7  ON M7.COMP_CODE = H.COMP_CODE
                                                      AND M7.MAIN_CODE = 'J517'
                                                      AND M7.SUB_CODE  = H.PERSON_NUMB
                </if>                                    
                                                      
            WHERE   H.COMP_CODE        = #{S_COMP_CODE}
            <if test="S_DIV_CODE != &quot;01&quot;">
              AND   H.DIV_CODE = #{S_DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (H.PERSON_NUMB LIKE #{TXT_SEARCH} + '%'                             
                 OR H.NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                AND (H.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'                             
                 OR H.NAME LIKE '%'+ #{PERSON_NUMB} + '%' )        
                </if>
                <if test="@foren.Ognl@isNotEmpty(NAME)">
                AND (H.PERSON_NUMB LIKE #{NAME} + '%'                             
                 OR H.NAME LIKE '%'+ #{NAME} + '%' )   
                </if>                
             </if>           
            
            <if test="@foren.Ognl@isNotEmpty(BASE_DT)"> 
        
                AND    (    H.RETR_DATE        = '00000000'           
                         OR H.RETR_DATE      &gt;= TO_CHAR(#{BASE_DT}, 'YYYYMMDD')
                       )
            </if>            
            <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
                AND     H.PAY_GUBUN = #{PAY_GUBUN} 
            </if>
    ) T
     ORDER   BY T.NAME ASC            
    </select>  
    
    <select id="popupServiceImpl.workShopPopup" parameterType="Map" resultType="rMap">
    /*uniLITE5Popup.CPopup[getMultiWorkShop] Query01*/

    DECLARE     @COMP_CODE      NVARCHAR(08)    /* (필수) 법인코드      */
              , @DIV_CODE       NVARCHAR(08)    /* (선택) 사업장         */
              , @TREE_CODE      NVARCHAR(08)    /* (선택) 작업장코드   */
              , @TREE_NAME      NVARCHAR(30)    /* (선택) 작업장명      */
              , @USER_ID        NVARCHAR(10)    /* (필수) 사용자ID  */
    
    SET     @COMP_CODE      = NVL(#{S_COMP_CODE}, '')
    SET     @DIV_CODE       = NVL(#{TYPE_LEVEL}, '')
    SET     @TREE_CODE      = NVL(#{TREE_CODE}, '')
    SET     @TREE_NAME      = NVL(#{TREE_NAME}, '')
    SET     @USER_ID        = NVL(#{S_USER_ID}, '')
    
    SELECT A.COMP_CODE
         , A.TYPE_LEVEL
         , A.TREE_CODE
         , A.TREE_NAME
         , NVL(A.SECTION_CD, '') AS SECTION_CD
         , NVL(A.SHIFT_CD, '')   AS SHIFT_CD
         , NVL(A.WH_CODE, '')    AS WH_CODE
         , NVL(A.USE_YN, '')     AS USE_YN
    FROM   BSA230T A 
    WHERE  A.COMP_CODE       = @COMP_CODE
    AND    A.USE_YN          = 'Y'
    <if test="RDO == 1">
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
        AND    A.TREE_CODE       LIKE #{TXT_SEARCH} + '%'
        </if>
    </if> 
    <if test="RDO == 2">
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
        AND    A.TREE_NAME       LIKE #{TXT_SEARCH} + '%'
        </if>
    </if>
    AND    ((A.TYPE_LEVEL    = @DIV_CODE        AND @DIV_CODE  != '') OR (@DIV_CODE  = ''))
    AND    ((A.TREE_CODE  LIKE @TREE_CODE + '%' AND @TREE_CODE != '') OR (@TREE_CODE = ''))
    AND    ((A.TREE_NAME  LIKE @TREE_NAME + '%' AND @TREE_NAME != '') OR (@TREE_NAME = ''))
    
    ORDER BY A.TYPE_LEVEL, A.TREE_CODE
    </select>
    
    <select id="popupServiceImpl.creditCard2" parameterType="Map" resultType="rMap">
        /*--zfa_popupZ.fnAPopUp [CRDT_NUM, CRDT_NAME] */

        BEGIN
           SET NOCOUNT ON
           SET ARITHABORT ON
        
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
                DROP TABLE #CRDT_NUM
        
            SELECT A.COMP_CODE
                 , A.CRDT_NUM
                 , A.CRDT_NAME
                 , unilite.fnCipherDecrypt(A.CRDT_FULL_NUM, 'C')  AS CRDT_FULL_NUM
                 , A.BANK_CODE
                 , NVL(B.CUSTOM_NAME                   , '' )  AS BANK_NAME
                 , uniLITE.fnCipherDecrypt(A.ACCOUNT_NUM  , 'B')  AS ACCOUNT_NUM
                 , A.SET_DATE
                 , NVL(C.NAME                          , '' )  AS PERSON_NAME
                 , NVL(A.CRDT_COMP_CD, M1.REF_CODE3)           AS CRDT_COMP_CD
                 , D.CUSTOM_NAME                                    AS CRDT_COMP_NM
                 , A.USE_YN
            INTO   #CRDT_NUM
            FROM              ABA500T   A  
                   LEFT  JOIN BCM100T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                        AND B.CUSTOM_CODE = A.BANK_CODE
                   LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                        AND M1.MAIN_CODE  = 'A028'
                                                        AND M1.SUB_CODE   = A.CRDT_KIND
                   LEFT  JOIN HUM100T   C   ON C.COMP_CODE   = A.COMP_CODE
                                                        AND C.PERSON_NUMB = A.PERSON_NUMB
                   LEFT  JOIN BCM100T   D   ON D.COMP_CODE   = A.COMP_CODE
                                                        AND D.CUSTOM_CODE = NVL(A.CRDT_COMP_CD, M1.REF_CODE3)
        
           SET NOCOUNT OFF
           SET ARITHABORT OFF
        
            SELECT CRDT_NUM        
                 , CRDT_NAME      
                 , CRDT_FULL_NUM  
                 , BANK_CODE      
                 , BANK_NAME      
                 , ACCOUNT_NUM    
                 , SET_DATE       
                 , PERSON_NAME    
                 , CRDT_COMP_CD   
                 , CRDT_COMP_NM   
            FROM   #CRDT_NUM 
            WHERE  COMP_CODE          = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(CRDT_NUM)">
            <if test="USELIKE == false">
                    AND CRDT_NUM = #{CRDT_NUM}
                </if>
                <if test="USELIKE != false">
                    AND CRDT_NUM LIKE #{CRDT_NUM} +  '%'
                </if>
            </if>
            <if test="@foren.Ognl@isNotEmpty(CRDT_NAME)">
            <if test="USELIKE == false">
                    AND CRDT_NAME = #{CRDT_NAME}
                </if>
                <if test="USELIKE != false">
                    AND CRDT_NAME LIKE '%' + #{CRDT_NAME} +  '%'
                </if>
            </if>
            <if test="RDO == 1">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND    CRDT_NUM       LIKE #{TXT_SEARCH} + '%'
                </if>
            </if> 
            <if test="RDO == 2">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND    CRDT_NAME       LIKE '%' + #{TXT_SEARCH} + '%'
                </if>
            </if>
            AND    NVL(USE_YN,'Y') = N'Y'      ORDER BY CRDT_NAME ASC
        END 
    </select>
    <select id="popupServiceImpl.creditCard3" parameterType="Map" resultType="rMap">
        /*--zfa_popupZ.fnAPopUp [CRDT_NUM, CRDT_NAME] */   
--joins 신용카드 팝업관련
        BEGIN
           SET NOCOUNT ON
           SET ARITHABORT ON
        
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
                DROP TABLE #CRDT_NUM
        
            SELECT A.COMP_CODE
                 , A.CRDT_NUM
                 , A.CRDT_NAME
                 , unilite.fnCipherDecrypt(A.CRDT_FULL_NUM, 'C')  AS CRDT_FULL_NUM
                 , A.BANK_CODE
                 , NVL(B.CUSTOM_NAME                   , '' )  AS BANK_NAME
                 , uniLITE.fnCipherDecrypt(A.ACCOUNT_NUM  , 'B')  AS ACCOUNT_NUM
                 , A.SET_DATE
                 , NVL(C.NAME                          , '' )  AS PERSON_NAME
                 , NVL(A.CRDT_COMP_CD, M1.REF_CODE3)           AS CRDT_COMP_CD
                 , D.CUSTOM_NAME                                    AS CRDT_COMP_NM
                 , A.USE_YN
            INTO   #CRDT_NUM
            FROM              ABA500T   A  
                   LEFT  JOIN BCM100T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                        AND B.CUSTOM_CODE = A.BANK_CODE
                   LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                        AND M1.MAIN_CODE  = 'A028'
                                                        AND M1.SUB_CODE   = A.CRDT_KIND
                   LEFT  JOIN HUM100T   C   ON C.COMP_CODE   = A.COMP_CODE
                                                        AND C.PERSON_NUMB = A.PERSON_NUMB
                   LEFT  JOIN BCM100T   D   ON D.COMP_CODE   = A.COMP_CODE
                                                        AND D.CUSTOM_CODE = NVL(A.CRDT_COMP_CD, M1.REF_CODE3)
        
           SET NOCOUNT OFF
           SET ARITHABORT OFF
        
            SELECT CRDT_NUM        
                 , CRDT_NAME      
                 , CRDT_FULL_NUM  
                 , BANK_CODE      
                 , BANK_NAME      
                 , ACCOUNT_NUM    
                 , SET_DATE       
                 , PERSON_NAME    
                 , CRDT_COMP_CD   
                 , CRDT_COMP_NM   
            FROM   #CRDT_NUM 
            WHERE  COMP_CODE          = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(CRDT_FULL_NUM)">
            <if test="USELIKE == false">
                    AND CRDT_FULL_NUM = #{CRDT_FULL_NUM}
                </if>
                <if test="USELIKE != false">
                    AND CRDT_FULL_NUM LIKE #{CRDT_FULL_NUM} +  '%'
                </if>
            </if>
            <if test="@foren.Ognl@isNotEmpty(CRDT_NAME)">
            <if test="USELIKE == false">
                    AND CRDT_NAME = #{CRDT_NAME}
                </if>
                <if test="USELIKE != false">
                    AND CRDT_NAME LIKE '%' + #{CRDT_NAME} +  '%'
                </if>
            </if>
            <if test="RDO == 1">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND    CRDT_FULL_NUM       LIKE #{TXT_SEARCH} + '%'
                </if>
            </if> 
            <if test="RDO == 2">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND    CRDT_NAME      LIKE '%' + #{TXT_SEARCH} + '%'
                </if>
            </if>
            AND    NVL(USE_YN,'Y') = N'Y'      ORDER BY CRDT_NAME ASC
        END 
    </select>
    <select id="popupServiceImpl.outStockNum" parameterType="Map" resultType="rMap">
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
        --  [ 날짜 유형 설정 ] ----------------------------------------------------------------------------
            DECLARE             @DateFormat         NVARCHAR(10)
        
            SELECT TOP 1 @DateFormat = M1.CODE_NAME
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = #{S_COMP_CODE}
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'
            
            SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')
        ----------------------------------------------------------------------------------------------------
    
            SELECT  A.OUTSTOCK_NUM
                  , REPLACE(
                    REPLACE(
                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.OUTSTOCK_REQ_DATE, 1, 4))
                                       , 'MM',   SUBSTRING(A.OUTSTOCK_REQ_DATE, 5, 2))
                                       , 'DD',   SUBSTRING(A.OUTSTOCK_REQ_DATE, 7, 2))  AS OUTSTOCK_REQ_DATE
                  , A.REMARK
                  , A.PROJECT_NO
    
    
            FROM                PMP300T A 
    
        
            WHERE   A.COMP_CODE          = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE           = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
            AND     A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
            AND     A.OUTSTOCK_REQ_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
            AND     A.OUTSTOCK_REQ_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(REMARK)">
            AND     A.REMARK                 LIKE #{REMARK}       + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
            AND     A.PROJECT_NO            LIKE #{PROJECT_NO} + '%'
            </if>

    
        GROUP BY A.COMP_CODE, A.OUTSTOCK_NUM, A.OUTSTOCK_REQ_DATE, A.REMARK, A.PROJECT_NO

    
    ----------------------------------------------------------------------------------------------------
        SET ARITHABORT OFF
        SET NOCOUNT OFF
    END
        
        
        
        
    </select>
    
     
    <select id="popupServiceImpl.deptPopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.deptPopup */
        SELECT A.TREE_CODE                                                             
             , A.TREE_NAME                                                             
             , A.TYPE_LEVEL AS DIV_CODE                                                
             , (SELECT BILL_DIV_CODE                                                   
                  FROM BOR120T                                            
                 WHERE COMP_CODE = A.COMP_CODE                                         
                   AND DIV_CODE  = A.TYPE_LEVEL) AS BILL_DIV_CODE                      
             , (SELECT DIV_NAME                                                        
                  FROM BOR120T                                            
                 WHERE COMP_CODE = A.COMP_CODE                                         
                   AND DIV_CODE  = (SELECT BILL_DIV_CODE                               
                                      FROM BOR120T                        
                                     WHERE COMP_CODE = A.COMP_CODE                     
                                       AND DIV_CODE  = A.TYPE_LEVEL)) AS BILL_DIV_NAME 
             , SECTION_CD AS SECTION_CODE                                              
             , (SELECT SECTION_NAME                                                    
                  FROM BOR110T                                            
                 WHERE A.COMP_CODE  = COMP_CODE                                        
                   AND A.SECTION_CD = SECTION_CODE) AS SECTION_NAME      
             , A.WH_CODE              
          FROM BSA210T A                                                  
         WHERE A.USE_YN = 'Y' 
                     AND A.COMP_CODE = #{S_COMP_CODE}
           
           <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.TREE_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR A.TREE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
          </if>
          <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
                AND (A.TREE_CODE LIKE #{TREE_CODE} + '%'                             
                 OR A.TREE_NAME LIKE '%'+ #{TREE_CODE} + '%' )    
                </if>
                <if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
                AND (A.TREE_CODE LIKE #{TREE_NAME} + '%'                             
                 OR A.TREE_NAME LIKE '%'+ #{TREE_NAME} + '%' )       
                </if>                
          </if>
            
          <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
              AND A.TREE_LEVEL LIKE (SELECT TREE_LEVEL FROM BSA210T  WHERE COMP_CODE = A.COMP_CODE AND TYPE_LEVEL = A.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
          </if>       
          <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                    
            AND A.TYPE_LEVEL IN
             <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                 #{item}
             </foreach>                                    
          </if>
          
          ORDER BY A.SORT_SEQ, A.TREE_LEVEL
    </select>
    
    <select id="popupServiceImpl.itemPopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.itemPopup */
        /* uniLITE5PopupItem.CPopup[getItemPopup] Query02 */
                
        SELECT K.*
          FROM (SELECT ITEM_CODE
                     , uniLITE.fnItemNameComp(COMP_CODE, #{S_USER_ID},ITEM_CODE) AS ITEM_NAME
                     , NVL(SPEC, '') AS SPEC
                     , STOCK_UNIT
                     , SALE_UNIT
                     , TRNS_RATE
                     , SALE_BASIS_P
                     , SPEC_NUM
                     , ITEM_MAKER
                     , ITEM_MAKER_PN
                     , UNIT_WGT
                     , WGT_UNIT
                     , DOM_FORIGN
                     , '' AS SUPPLY_TYPE
                     , HS_NO
                     , HS_NAME
                     , HS_UNIT
                     , STOCK_UNIT AS STOCK_UNIT2
                     , TAX_TYPE
                     , NVL(STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
                     ${ADD_OEM}
                   FROM BPR100T
                  WHERE COMP_CODE     = #{S_COMP_CODE}
                          
                  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                    AND SPEC LIKE #{TXT_SEARCH} + '%'
                  </if>   
                  
                  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">                
                     AND (ITEM_CODE LIKE #{TXT_SEARCH2} + '%'                             
                     OR ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
                  </if>
                  <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
                    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                    AND (ITEM_CODE LIKE #{ITEM_CODE} + '%'                             
                     OR ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%' )    
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                    AND (ITEM_CODE LIKE #{ITEM_NAME} + '%'                             
                     OR ITEM_NAME LIKE '%'+ #{ITEM_NAME} + '%' )       
                    </if>                
                  </if>
                  
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
                    AND NVL(ITEM_LEVEL1, '')LIKE #{TXTLV_L1} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
                    AND NVL(ITEM_LEVEL2, '')LIKE #{TXTLV_L2} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
                    AND NVL(ITEM_LEVEL3, '')LIKE #{TXTLV_L3} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(SPEC)">
                    AND SPEC LIKE #{SPEC} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND USE_YN = #{USE_YN}
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
                    AND ${ADD_QUERY}
                  </if>
               ) K                    
                                                
                ORDER BY ITEM_CODE
    </select>   
    
    <select id="popupServiceImpl.itemPopup2" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.itemPopup */
        /* uniLITE5PopupItem.CPopup[getItemPopup] Query02 */
                
        SELECT K.*
          FROM (SELECT ITEM_CODE
                     , uniLITE.fnItemNameComp(COMP_CODE, #{S_USER_ID},ITEM_CODE) AS ITEM_NAME
                     , NVL(SPEC, '') AS SPEC
                     , STOCK_UNIT
                     , SALE_UNIT
                     , TRNS_RATE
                     , SALE_BASIS_P
                     , SPEC_NUM
                     , ITEM_MAKER
                     , ITEM_MAKER_PN
                     , UNIT_WGT
                     , WGT_UNIT
                     , DOM_FORIGN
                     , '' AS SUPPLY_TYPE
                     , HS_NO
                     , HS_NAME
                     , HS_UNIT
                     , STOCK_UNIT AS STOCK_UNIT2
                     , TAX_TYPE
                     , NVL(STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
                   FROM BPR100T
                  WHERE COMP_CODE     = #{S_COMP_CODE}
                          
                  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                    AND SPEC LIKE #{TXT_SEARCH} + '%'
                  </if>   
                  <if test="RDO == 1">
                      <if test="@foren.Ognl@isNotEmpty(LBL_SEARCH)">
                       AND ITEM_CODE LIKE #{LBL_SEARCH} +'%'
                    </if>
                  </if>   
                
                 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                      <if test="USELIKE == false">
                           AND ITEM_CODE = #{ITEM_CODE}
                      </if>
                      <if test="USELIKE != false">
                        AND ITEM_CODEE LIKE #{ITEM_CODE} +  '%'
                      </if>
                  </if>
                  
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
                    AND NVL(ITEM_LEVEL1, '')LIKE #{TXTLV_L1} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
                    AND NVL(ITEM_LEVEL2, '')LIKE #{TXTLV_L2} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
                    AND NVL(ITEM_LEVEL3, '')LIKE #{TXTLV_L3} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(SPEC)">
                    AND SPEC LIKE #{SPEC} + '%'
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND USE_YN = #{USE_YN}
                  </if>
        
               ) K
                     WHERE 1=1
                  <if test="RDO == 2">
                      <if test="@foren.Ognl@isNotEmpty(LBL_SEARCH)">
                        AND K.ITEM_NAME LIKE #{LBL_SEARCH} +'%'
                      </if>
                  </if>    
                  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                        <if test="USELIKE == false">
                            AND K.ITEM_NAME = #{ITEM_NAME}
                        </if>
                        <if test="USELIKE != false">
                            AND K.ITEM_NAME LIKE #{ITEM_NAME} +  '%'
                        </if>
                  </if>
        
                  <if test="RDO != 2">
                       ORDER BY ITEM_CODE
                  </if>
                  <if test="RDO == 2">
                       ORDER BY ITEM_NAME
                  </if>
                                                

    </select>  
    <select id="popupServiceImpl.divPumok" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.divPumok */ 
        /* uniLITE5PopupItem.CPopup[getDivPumokPopup] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE  @RefItem        NVARCHAR(01)
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID}
        
            SET @RefItem = NVL(@RefItem, N'0')

            /* 구매담당자정보 조회 */
            DECLARE @OrderPrsn        NVARCHAR(02)
                  , @OrderPrsnYN    NVARCHAR(01)
        
            SELECT TOP 1 @OrderPrsn   = SUB_CODE
                 ,       @OrderPrsnYN = 'Y'
              FROM BSA100T 
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND MAIN_CODE  = 'M201'
               AND SUB_CODE  != '$'
               AND REF_CODE2  = #{S_USER_ID}
               AND USE_YN     = 'Y'
        
            SET @OrderPrsn   = NVL(@OrderPrsn  , '' )
            SET @OrderPrsnYN = NVL(@OrderPrsnYN, 'N')
        
            /* 데이터 조회 */
            SELECT ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN ITEM_NAME
                         WHEN @RefItem = '1' THEN ITEM_NAME1
                         WHEN @RefItem = '2' THEN ITEM_NAME2
                                             ELSE ITEM_NAME
                     END)                                                       AS ITEM_NAME
                 , NVL(SPEC, '')                                             AS SPEC
                 , STOCK_UNIT
                 , ORDER_UNIT
                 , TRNS_RATE
                 , BASIS_P
                 , SALE_BASIS_P
                 , SAFE_STOCK_Q
                 , EXPENSE_RATE
                 , SPEC_NUM
                 , NVL(WH_CODE, '')                                          AS WH_CODE
                 , WORK_SHOP_CODE
                 , DIV_CODE
                 , OUT_METH
                 , ITEM_MAKER
                 , ITEM_MAKER_PN
                 , PURCH_LDTIME
                 , MINI_PURCH_Q
                 , UNIT_WGT
                 , WGT_UNIT
                 , ITEM_ACCOUNT
                 , NVL(DOM_FORIGN, '1')                                      AS DOM_FORIGN
                 , SUPPLY_TYPE
                 , HS_NO
                 , HS_NAME
                 , HS_UNIT
                 , STOCK_UNIT                                                   AS STOCK_UNIT2
                 , TAX_TYPE
                 , NVL(STOCK_CARE_YN, 'Y')                                   AS STOCK_CARE_YN
                 , SALE_UNIT
                 , PUR_TRNS_RATE
                 , ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN ITEM_GROUP_NAME2
                                             ELSE ITEM_GROUP_NAME
                     END)                                                       AS ITEM_GROUP_NAME
                 , ITEM_LEVEL1
                 , ITEM_LEVEL_NAME1                                             AS ITEM_LEVEL_NAME1
                 , ITEM_LEVEL2
                 , ITEM_LEVEL_NAME2                                             AS ITEM_LEVEL_NAME2
                 , ITEM_LEVEL3
                 , ITEM_LEVEL_NAME3                                             AS ITEM_LEVEL_NAME3
                 , BARCODE                                                      AS BARCODE
                 , NVL(LOT_SIZING_Q, 0.0)                                    AS LOT_SIZING_Q
                 , NVL(MAX_PRODT_Q , 0.0)                                    AS MAX_PRODT_Q
                 , NVL(STAN_PRODT_Q, 0.0)                                    AS STAN_PRODT_Q
                 , PURCHASE_BASE_P
                 , TOTAL_ITEM
                 , INSPEC_YN
                 , UNIT_VOL
                 , VOL_UNIT
                 , MAIN_CUSTOM_CODE
                 , MAIN_CUSTOM_NAME
                 , ITEM_COLOR
                 , MAIN_CUSTOM_CODE
                 , MAIN_CUSTOM_NAME
                 , LOT_YN
              FROM BPR200TV
             WHERE COMP_CODE       = #{S_COMP_CODE}
               <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND USE_YN = #{USE_YN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND DIV_CODE        = #{DIV_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND ITEM_ACCOUNT        = #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">                
                     AND (ITEM_CODE LIKE #{TXT_SEARCH2} + '%'                             
                     OR ITEM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
               </if>
               <if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
                  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                    AND (ITEM_CODE LIKE #{ITEM_CODE} + '%'                             
                      OR ITEM_NAME LIKE '%'+ #{ITEM_CODE} + '%' )    
                  </if>
                  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                    AND (ITEM_CODE LIKE #{ITEM_NAME} + '%'                             
                      OR ITEM_NAME LIKE '%'+ #{ITEM_NAME} + '%' )       
                  </if>                
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
               AND SUPPLY_TYPE     = #{SUPPLY_TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
               AND ITEM_LEVEL1     = #{ITEM_LEVEL1}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
               AND ITEM_LEVEL2     = #{ITEM_LEVEL2}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
               AND ITEM_LEVEL3     = #{ITEM_LEVEL3}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
               AND ITEM_GROUP      = #{ITEM_GROUP}
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
                       <if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
                           AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE DIV_CODE = #{DIV_CODE})
                       </if>
                       <if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
                           AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE} 
                                                    AND DIV_CODE = #{DIV_CODE})
                       </if>
               </if>
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND SPEC LIKE '%'+#{TXT_SEARCH}+'%'
               </if>
               
               /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
               AND ((ORDER_PRSN = @OrderPrsn                                  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
                 OR ((ORDER_PRSN = @OrderPrsn OR NVL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
                 OR (@OrderPrsn = ''))
               */
               /* (차후에 처리) 검색항목 조건처리 */
        <if test="RDO == 1">
            ORDER BY    ITEM_CODE
        </if>
        <if test="RDO == 2">
            ORDER BY    CASE @RefItem
                     WHEN '1' THEN ITEM_NAME1
                     WHEN '2' THEN ITEM_NAME2
                              ELSE ITEM_NAME
                END 
        </if>        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>  
    
    
    <select id="popupServiceImpl.custPumok" parameterType="Map" resultType="rMap">
        /* getCustPumokPopup */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE  @RefItem        NVARCHAR(01)
 
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID} 
        
            SET @RefItem = NVL(@RefItem, N'0')

            /* 구매담당자정보 조회 */
            DECLARE @OrderPrsn        NVARCHAR(02)
                  , @OrderPrsnYN    NVARCHAR(01)
        
            SELECT TOP 1 @OrderPrsn   = SUB_CODE
                 ,       @OrderPrsnYN = 'Y'
              FROM BSA100T 
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND MAIN_CODE  = 'M201'
               AND SUB_CODE  != '$'
               AND REF_CODE2  = #{S_USER_ID}
               AND USE_YN     = 'Y'
        
            SET @OrderPrsn   = NVL(@OrderPrsn  , '' )
            SET @OrderPrsnYN = NVL(@OrderPrsnYN, 'N')
        
            /* 데이터 조회 */
            SELECT A.ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_NAME2
                                             ELSE A.ITEM_NAME
                     END)                                                       AS ITEM_NAME
                 , NVL(A.SPEC, '')                                             AS SPEC
                 , A.STOCK_UNIT
                 , A.ORDER_UNIT
                 , A.TRNS_RATE
                 , A.BASIS_P
                 , A.SALE_BASIS_P
                 , A.SAFE_STOCK_Q
                 , A.EXPENSE_RATE
                 , A.SPEC_NUM
                 , NVL(A.WH_CODE, '')                                          AS WH_CODE
                 , A.WORK_SHOP_CODE
                 , A.DIV_CODE
                 , A.OUT_METH
                 , A.ITEM_MAKER
                 , A.ITEM_MAKER_PN
                 , A.PURCH_LDTIME
                 , A.MINI_PURCH_Q
                 , A.UNIT_WGT
                 , A.WGT_UNIT
                 , A.ITEM_ACCOUNT
                 , NVL(A.DOM_FORIGN, '1')                                      AS DOM_FORIGN
                 , A.SUPPLY_TYPE
                 , A.HS_NO
                 , A.HS_NAME
                 , A.HS_UNIT
                 , A.STOCK_UNIT                                                   AS STOCK_UNIT2
                 , A.TAX_TYPE
                 , NVL(A.STOCK_CARE_YN, 'Y')                                   AS STOCK_CARE_YN
                 , A.SALE_UNIT
                 , A.PUR_TRNS_RATE
                 , A.ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
                                             ELSE A.ITEM_GROUP_NAME
                     END)                                                       AS ITEM_GROUP_NAME
                 , A.ITEM_LEVEL1
                 , A.ITEM_LEVEL_NAME1                                             AS ITEM_LEVEL_NAME1
                 , A.ITEM_LEVEL2
                 , A.ITEM_LEVEL_NAME2                                             AS ITEM_LEVEL_NAME2
                 , A.ITEM_LEVEL3
                 , A.ITEM_LEVEL_NAME3                                             AS ITEM_LEVEL_NAME3
                 , A.BARCODE                                                      AS BARCODE
                 , NVL(A.LOT_SIZING_Q, 0.0)                                    AS LOT_SIZING_Q
                 , NVL(A.MAX_PRODT_Q , 0.0)                                    AS MAX_PRODT_Q
                 , NVL(A.STAN_PRODT_Q, 0.0)                                    AS STAN_PRODT_Q
                 , A.PURCHASE_BASE_P
                 , A.TOTAL_ITEM
                 , A.INSPEC_YN
                 , A.UNIT_VOL
                 , A.VOL_UNIT
                 , A.MAIN_CUSTOM_CODE
                 , A.MAIN_CUSTOM_NAME
                 , A.ITEM_COLOR
                 , (CASE WHEN A.STOCK_CARE_YN = 'Y' THEN NVL(C.STOCK_Q, 0) ELSE 0 END) AS STOCK_Q
                 , B.ITEM_P                                                         AS PURCHASE_P

              FROM BPR200TV A  
              
              INNER JOIN BPR400T B   ON B.COMP_CODE = A.COMP_CODE
                                                   AND B.DIV_CODE  = A.DIV_CODE
                                                   AND B.ITEM_CODE = A.ITEM_CODE
              LEFT JOIN (
                         SELECT 
                         A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, SUM(A.STOCK_Q) AS STOCK_Q
                         FROM
                         (
                             SELECT COMP_CODE
                                      ,DIV_CODE
                                      ,ITEM_CODE
                                      ,STOCK_Q
                            FROM    BIV100T C 
                            WHERE   COMP_CODE = #{S_COMP_CODE}
                            AND     DIV_CODE  = #{DIV_CODE}

                             UNION ALL
                         
                            SELECT  COMP_CODE 
                                   ,DIV_CODE 
                                   ,ITEM_CODE
                                   ,A.STOCK_Q
                             FROM UNILITE.VGetDailyStock A 
                             WHERE A.COMP_CODE = #{S_COMP_CODE}
                               AND A.DIV_CODE  = #{DIV_CODE}
                          ) A       
                         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                         
                        ) C  ON C.COMP_CODE = A.COMP_CODE
                              AND C.DIV_CODE  = A.DIV_CODE
                              AND C.ITEM_CODE = A.ITEM_CODE

             WHERE A.COMP_CODE       = #{S_COMP_CODE}
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND B.CUSTOM_CODE     = #{CUSTOM_CODE}
             </if>
               AND B.TYPE            = '1'
               AND B.APLY_START_DATE = (SELECT TOP 1 
                                            MAX(X.APLY_START_DATE) AS APLY_START_DATE
                                            FROM  BPR400T X 
                                             WHERE X.COMP_CODE            = B.COMP_CODE
                                                AND X.DIV_CODE            = B.DIV_CODE
                                                AND X.TYPE                = B.TYPE
                                                AND X.ITEM_CODE           = B.ITEM_CODE
                                                AND X.MONEY_UNIT          = B.MONEY_UNIT
                                                AND X.ORDER_UNIT          = B.ORDER_UNIT
                                                AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), NOW(), 112)
                                                AND X.APLY_END_DATE   &gt; CONVERT(NVARCHAR(08), NOW(), 112)
                                                <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                                                AND X.CUSTOM_CODE     = #{CUSTOM_CODE}
                                                </if>
                                            )
               <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND A.USE_YN = #{USE_YN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE        = #{DIV_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND A.ITEM_ACCOUNT        = #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE    LIKE #{ITEM_CODE}+'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN A.ITEM_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_NAME2
                                             ELSE A.ITEM_NAME
                     END)       LIKE '%'+ #{ITEM_NAME} +'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
               AND A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
               AND A.ITEM_LEVEL1     = #{ITEM_LEVEL1}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
               AND A.ITEM_LEVEL2     = #{ITEM_LEVEL2}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
               AND A.ITEM_LEVEL3     = #{ITEM_LEVEL3}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
               AND A.ITEM_GROUP      = #{ITEM_GROUP}
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
                       <if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
                           AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE DIV_CODE = #{DIV_CODE})
                       </if>
                       <if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
                           AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE} 
                                                    AND DIV_CODE = #{DIV_CODE})
                       </if>
               </if>
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
               </if>
               
               /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
               AND ((ORDER_PRSN = @OrderPrsn                                  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
                 OR ((ORDER_PRSN = @OrderPrsn OR NVL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
                 OR (@OrderPrsn = ''))
               */
               /* (차후에 처리) 검색항목 조건처리 */
        <if test="RDO == 1">
            ORDER BY    ITEM_CODE
        </if>
        <if test="RDO == 2">
            ORDER BY    CASE @RefItem
                     WHEN '1' THEN A.ITEM_NAME1
                     WHEN '2' THEN A.ITEM_NAME2
                              ELSE A.ITEM_NAME
                END 
        </if>        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>  
    
    <select id="popupServiceImpl.divPumok2" parameterType="Map" resultType="rMap">
    /*uniLITE5PopupItem.CPopup[getDivItemPopup] Query02*/
    /*
    공통 품목 PopUp
    */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE  @RefItem        NVARCHAR(01)
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID}
        
            SET @RefItem = NVL(@RefItem, N'0')

            /* 구매담당자정보 조회 */
            DECLARE @OrderPrsn        NVARCHAR(02)
                  , @OrderPrsnYN    NVARCHAR(01)
        
            SELECT TOP 1 @OrderPrsn   = SUB_CODE
                 ,       @OrderPrsnYN = 'Y'
              FROM BSA100T 
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND MAIN_CODE  = 'M201'
               AND SUB_CODE  != '$'
               AND REF_CODE2  = #{S_USER_ID}
               AND USE_YN     = 'Y'
        
            SET @OrderPrsn   = NVL(@OrderPrsn  , '' )
            SET @OrderPrsnYN = NVL(@OrderPrsnYN, 'N')
        
            /* 데이터 조회 */
            SELECT ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN ITEM_NAME
                         WHEN @RefItem = '1' THEN ITEM_NAME1
                         WHEN @RefItem = '2' THEN ITEM_NAME2
                                             ELSE ITEM_NAME
                     END)                                                       AS ITEM_NAME
                 , NVL(SPEC, '')                                             AS SPEC
                 , STOCK_UNIT
                 , ORDER_UNIT
                 , TRNS_RATE
                 , BASIS_P
                 , SALE_BASIS_P
                 , SAFE_STOCK_Q
                 , EXPENSE_RATE
                 , SPEC_NUM
                 , NVL(WH_CODE, '')                                          AS WH_CODE
                 , WORK_SHOP_CODE
                 , DIV_CODE
                 , OUT_METH
                 , ITEM_MAKER
                 , ITEM_MAKER_PN
                 , PURCH_LDTIME
                 , MINI_PURCH_Q
                 , UNIT_WGT
                 , WGT_UNIT
                 , ITEM_ACCOUNT
                 , NVL(DOM_FORIGN, '1')                                      AS DOM_FORIGN
                 , SUPPLY_TYPE
                 , HS_NO
                 , HS_NAME
                 , HS_UNIT
                 , STOCK_UNIT                                                   AS STOCK_UNIT2
                 , TAX_TYPE
                 , NVL(STOCK_CARE_YN, 'Y')                                   AS STOCK_CARE_YN
                 , SALE_UNIT
                 , PUR_TRNS_RATE
                 , ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN ITEM_GROUP_NAME2
                                             ELSE ITEM_GROUP_NAME
                     END)                                                       AS ITEM_GROUP_NAME
                 , ITEM_LEVEL1
                 , ITEM_LEVEL_NAME1                                             AS ITEM_LEVEL_NAME1
                 , ITEM_LEVEL2
                 , ITEM_LEVEL_NAME2                                             AS ITEM_LEVEL_NAME2
                 , ITEM_LEVEL3
                 , ITEM_LEVEL_NAME3                                             AS ITEM_LEVEL_NAME3
                 , BARCODE                                                      AS BARCODE
                 , NVL(LOT_SIZING_Q, 0.0)                                    AS LOT_SIZING_Q
                 , NVL(MAX_PRODT_Q , 0.0)                                    AS MAX_PRODT_Q
                 , NVL(STAN_PRODT_Q, 0.0)                                    AS STAN_PRODT_Q
                 , PURCHASE_BASE_P
                 , TOTAL_ITEM
                 , INSPEC_YN
                 , UNIT_VOL
                 , VOL_UNIT
                 , MAIN_CUSTOM_CODE
                 , MAIN_CUSTOM_NAME
                 , ITEM_COLOR
              FROM BPR200TV
             WHERE COMP_CODE       = #{S_COMP_CODE}
               <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND USE_YN = #{USE_YN}
               </if>
               AND DIV_CODE        = #{DIV_CODE}
               
               <if test="Gird == &quot;A&quot;"> 
               AND ( LEFT(ITEM_ACCOUNT,1) LIKE N'1%' OR LEFT(ITEM_ACCOUNT,1) LIKE N'2%')                      /* 모품목 그리드 조회*/
                AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE FROM BPR500T WHERE DIV_CODE = #{DIV_CODE}) 
               </if> 
                
               <if test="Gird == &quot;B&quot;">
                AND (  LEFT(ITEM_ACCOUNT,1) LIKE N'2%' OR                                                     /* 자품목 그리드 조회*/
                       LEFT(ITEM_ACCOUNT,1) LIKE N'3%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'4%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'5%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'6%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'7%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'8%' OR 
                       LEFT(ITEM_ACCOUNT,1) LIKE N'9%')
                AND ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  FROM BPR500T WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE} AND DIV_CODE = #{DIV_CODE})    
                   
               </if>
               
               <if test="Gird == &quot;C&quot;">
                   AND ( LEFT(ITEM_ACCOUNT,1) LIKE N'2%' OR                                                     /* 대체품목 그리드 조회*/
                      LEFT(ITEM_ACCOUNT,1) LIKE N'3%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'4%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'5%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'6%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'7%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'8%' OR 
                      LEFT(ITEM_ACCOUNT,1) LIKE N'9%')
                AND ITEM_CODE NOT IN (SELECT CHILD_ITEM_CODE FROM BPR500T WHERE PROD_ITEM_CODE = #{PROD_ITEM_CODE} 
                                                                            AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE} 
                                                                            AND COMP_CODE = #{COMP_CODE} AND DIV_CODE = #{DIV_CODE})
               </if>

               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND ITEM_CODE    LIKE #{ITEM_CODE}+'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
                         WHEN @RefItem = '2' THEN ITEM_NAME2
                                             ELSE ITEM_NAME
                     END)       LIKE '%'+ #{ITEM_NAME} +'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
               AND SUPPLY_TYPE     = #{SUPPLY_TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
               AND ITEM_LEVEL1     = #{ITEM_LEVEL1}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
               AND ITEM_LEVEL2     = #{ITEM_LEVEL2}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
               AND ITEM_LEVEL3     = #{ITEM_LEVEL3}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
               AND ITEM_GROUP      = #{ITEM_GROUP}
               </if>
               /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
               AND ((ORDER_PRSN = @OrderPrsn                                  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
                 OR ((ORDER_PRSN = @OrderPrsn OR NVL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
                 OR (@OrderPrsn = ''))
               */
               /* (차후에 처리) 검색항목 조건처리 */
        <if test="RDO == 1">
            ORDER BY    ITEM_CODE
        </if>
        <if test="RDO == 2">
            ORDER BY    CASE @RefItem
                     WHEN '1' THEN ITEM_NAME1
                     WHEN '2' THEN ITEM_NAME2
                              ELSE ITEM_NAME
                END 
        </if>        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select> 
    
    <select id="popupServiceImpl.commissionDivPumok" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.divPumok */
        /* uniLITE5PopupItem.CPopup[getDivPumokPopup] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE  @RefItem        NVARCHAR(01)
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID}
        
            SET @RefItem = NVL(@RefItem, N'0')

            /* 구매담당자정보 조회 */
            DECLARE @OrderPrsn        NVARCHAR(02)
                  , @OrderPrsnYN    NVARCHAR(01)
        
            SELECT TOP 1 @OrderPrsn   = SUB_CODE
                 ,       @OrderPrsnYN = 'Y'
              FROM BSA100T 
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND MAIN_CODE  = 'M201'
               AND SUB_CODE  != '$'
               AND REF_CODE2  = #{S_USER_ID}
               AND USE_YN     = 'Y'
        
            SET @OrderPrsn   = NVL(@OrderPrsn  , '' )
            SET @OrderPrsnYN = NVL(@OrderPrsnYN, 'N')
        
            /* 데이터 조회 */
            SELECT ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_NAME2
                                             ELSE A.ITEM_NAME
                     END)                                                       AS ITEM_NAME
                 , NVL(A.SPEC, '')                                             AS SPEC
                 , A.STOCK_UNIT
                 , A.ORDER_UNIT
                 , A.TRNS_RATE
                 , A.BASIS_P
                 , A.SALE_BASIS_P
                 , A.SAFE_STOCK_Q
                 , A.EXPENSE_RATE
                 , A.SPEC_NUM
                 , NVL(A.WH_CODE, '')                                          AS WH_CODE
                 , A.WORK_SHOP_CODE
                 , A.DIV_CODE
                 , A.OUT_METH
                 , A.ITEM_MAKER
                 , A.ITEM_MAKER_PN
                 , A.PURCH_LDTIME
                 , A.MINI_PURCH_Q
                 , A.UNIT_WGT
                 , A.WGT_UNIT
                 , A.ITEM_ACCOUNT
                 , NVL(A.DOM_FORIGN, '1')                                      AS DOM_FORIGN
                 , A.SUPPLY_TYPE
                 , A.HS_NO
                 , A.HS_NAME
                 , A.HS_UNIT
                 , A.STOCK_UNIT                                                   AS STOCK_UNIT2
                 , A.TAX_TYPE
                 , NVL(A.STOCK_CARE_YN, 'Y')                                   AS STOCK_CARE_YN
                 , A.SALE_UNIT
                 , A.PUR_TRNS_RATE
                 , A.ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN A.ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN A.ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_GROUP_NAME2
                                             ELSE A.ITEM_GROUP_NAME
                     END)                                                       AS ITEM_GROUP_NAME
                 , A.ITEM_LEVEL1
                 , A.ITEM_LEVEL_NAME1                                             AS ITEM_LEVEL_NAME1
                 , A.ITEM_LEVEL2
                 , A.ITEM_LEVEL_NAME2                                             AS ITEM_LEVEL_NAME2
                 , A.ITEM_LEVEL3
                 , A.ITEM_LEVEL_NAME3                                             AS ITEM_LEVEL_NAME3
                 , A.BARCODE                                                      AS BARCODE
                 , NVL(A.LOT_SIZING_Q, 0.0)                                    AS LOT_SIZING_Q
                 , NVL(A.MAX_PRODT_Q , 0.0)                                    AS MAX_PRODT_Q
                 , NVL(A.STAN_PRODT_Q, 0.0)                                    AS STAN_PRODT_Q
                 , A.PURCHASE_BASE_P
                 , A.TOTAL_ITEM
                 , A.INSPEC_YN
                 , A.UNIT_VOL
                 , A.VOL_UNIT
                 , A.MAIN_CUSTOM_CODE
                 , A.MAIN_CUSTOM_NAME
                 , A.ITEM_COLOR
              FROM          BPR200TV        A
              INNER JOIN  BSA100T         C   ON A.COMP_CODE   = C.COMP_CODE
                                                        AND A.ITEM_CODE   = C.CODE_NAME 
                                                        AND C.REF_CODE1   = #{DIV_CODE} 
                                                          AND C.MAIN_CODE   = 'YP37' 
                                                       AND C.SUB_CODE   != '$'
             WHERE A.COMP_CODE       = #{S_COMP_CODE}
               AND A.ITEM_ACCOUNT = '04'
               <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                    AND A.USE_YN = #{USE_YN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE        = #{DIV_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND A.ITEM_ACCOUNT        = #{ITEM_ACCOUNT} -- multiselect 로 인해 item_account 수정 2015.07.09
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE    LIKE #{ITEM_CODE}+'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN A.ITEM_NAME1
                         WHEN @RefItem = '2' THEN A.ITEM_NAME2
                                             ELSE A.ITEM_NAME
                     END)       LIKE '%'+ #{ITEM_NAME} +'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
               AND A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
               AND A.ITEM_LEVEL1     = #{ITEM_LEVEL1}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
               AND A.ITEM_LEVEL2     = #{ITEM_LEVEL2}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
               AND A.ITEM_LEVEL3     = #{ITEM_LEVEL3}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
               AND A.ITEM_GROUP      = #{ITEM_GROUP}
               </if>
               
               <if test="@foren.Ognl@isNotEmpty(ITEM_EXCLUDE)">
                       <if test="ITEM_EXCLUDE == &quot;DIV_CODE&quot;">
                           AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE DIV_CODE = #{DIV_CODE})
                       </if>
                       <if test="ITEM_EXCLUDE == &quot;PROD_ITEM_CODE&quot; &amp;&amp; @foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
                           AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE  
                                                   FROM BPR500T    
                                                  WHERE CHILD_ITEM_CODE = #{PROD_ITEM_CODE} 
                                                    AND DIV_CODE = #{DIV_CODE})
                       </if>
               </if>
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND A.SPEC LIKE '%'+#{TXT_SEARCH}+'%'
               </if>
               
               /* (차후에 처리) 로그인ID의 구매담당이 있을 경우 구매담당의 품목만 조회되도록 추가
               AND ((ORDER_PRSN = @OrderPrsn                                  AND @OrderPrsnYN = 'N' AND @OrderPrsn != '')
                 OR ((ORDER_PRSN = @OrderPrsn OR NVL(ORDER_PRSN, '') = '') AND @OrderPrsnYN = 'Y' AND @OrderPrsn != '')
                 OR (@OrderPrsn = ''))
               */
               /* (차후에 처리) 검색항목 조건처리 */
        <if test="RDO == 1">
            ORDER BY    A.ITEM_CODE
        </if>
        <if test="RDO == 2">
            ORDER BY    CASE @RefItem
                     WHEN '1' THEN A.ITEM_NAME1
                     WHEN '2' THEN A.ITEM_NAME2
                              ELSE A.ITEM_NAME
                END 
        </if>        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select> 
          
    <select id="popupServiceImpl.itemGroup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.itemGroup */

        BEGIN
        
            DECLARE  @RefItem        NVARCHAR(01)
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID}
        
            SET @RefItem = NVL(@RefItem, N'0')

            SELECT A.ITEM_CODE
                 , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME
                 , NVL(A.SPEC, '') AS SPEC
                 , A.STOCK_UNIT
                 , C.ORDER_UNIT
                 , A.TRNS_RATE
                 , C.BASIS_P
                 , A.SALE_BASIS_P
                 , C.SAFE_STOCK_Q
                 , C.EXPENSE_RATE
                 , A.SPEC_NUM
                 , NVL(C.WH_CODE,'') AS WH_CODE
                 , C.WORK_SHOP_CODE
                 , C.DIV_CODE
                 , C.OUT_METH
                 , A.ITEM_MAKER
                 , A.ITEM_MAKER_PN
                 , C.PURCH_LDTIME
                 , C.MINI_PURCH_Q
                 , A.UNIT_WGT
                 , A.WGT_UNIT
                 , C.ITEM_ACCOUNT
                 , A.DOM_FORIGN
                 , C.SUPPLY_TYPE
                 , A.HS_NO
                 , A.HS_NAME
                 , A.HS_UNIT
                 , A.STOCK_UNIT AS STOCK_UNIT2
              FROM BPR100T A 
                  , (SELECT COMP_CODE
                          , ITEM_GROUP
                       FROM BPR100T 
                      WHERE ITEM_CODE IN (SELECT ITEM_GROUP
                                            FROM BPR100T 
                                           WHERE ITEM_GROUP IS NOT NULL
                                             AND COMP_CODE    = #{S_COMP_CODE} )   
                        AND USE_YN = 'Y' ) AS B
                  , BPR200T C 
              WHERE A.COMP_CODE    = B.COMP_CODE
                AND A.ITEM_CODE    = B.ITEM_GROUP
                AND A.ITEM_CODE    = C.ITEM_CODE
                AND A.COMP_CODE    = C.COMP_CODE
                AND A.COMP_CODE    = #{S_COMP_CODE}
                <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                AND A.ITEM_CODE LIKE #{ITEM_CODE} +'%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                   AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
                             WHEN @RefItem = '2' THEN ITEM_NAME2
                                                 ELSE A.ITEM_NAME
                         END)       LIKE '%'+ #{ITEM_NAME} +'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
                       AND NVL(C.SUPPLY_TYPE, '') LIKE #{SUPPLY_TYPE} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
                       AND NVL(A.ITEM_LEVEL1, '') LIKE #{ITEM_LEVEL1} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
                      AND NVL(A.ITEM_LEVEL2, '') LIKE #{ITEM_LEVEL2} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
                       AND NVL(A.ITEM_LEVEL3, '') LIKE #{ITEM_LEVEL3} + '%'
                </if>
               <if test="@foren.Ognl@isNotEmpty(oItemCode)">
                    AND A.ITEM_CODE &gt; #{oItemCode}
               </if>
               
               AND A.USE_YN = 'Y'
               
               <if test="RDO == 1">
                    ORDER BY    A.ITEM_CODE
               </if>
               <if test="RDO == 2">
                    ORDER BY    CASE @RefItem
                             WHEN '1' THEN A.ITEM_NAME1
                             WHEN '2' THEN A.ITEM_NAME2
                                      ELSE A.ITEM_NAME
                        END 
                </if>        
       END
    </select>
    <select id="popupServiceImpl.divItemGroup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.divItemGroup */

        BEGIN
        
            DECLARE  @RefItem        NVARCHAR(01)
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = #{S_USER_ID}
        
            SET @RefItem = NVL(@RefItem, N'0')

            SELECT A.ITEM_CODE
                 , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME
                 , NVL(A.SPEC, '') AS SPEC
                 , A.STOCK_UNIT
                 , B.ORDER_UNIT
                 , A.TRNS_RATE
                 , B.BASIS_P
                 , A.SALE_BASIS_P
                 , B.SAFE_STOCK_Q
                 , B.EXPENSE_RATE
                 , A.SPEC_NUM
                 , NVL(B.WH_CODE,'') WH_CODE
                 , B.WORK_SHOP_CODE
                 , B.DIV_CODE
                 , B.OUT_METH
                 , A.ITEM_MAKER
                 , A.ITEM_MAKER_PN
                 , B.PURCH_LDTIME
                 , B.MINI_PURCH_Q
                 , A.UNIT_WGT
                 , A.WGT_UNIT
                 , B.ITEM_ACCOUNT
                 , A.DOM_FORIGN
                 , B.SUPPLY_TYPE
                 , A.HS_NO
                 , A.HS_NAME
                 , A.HS_UNIT
                 , A.STOCK_UNIT AS STOCK_UNIT2
                 , A.TAX_TYPE
                 , NVL(A.STOCK_CARE_YN, 'Y') AS STOCK_CARE_YN
                 , A.SALE_UNIT
              FROM BPR100T A 
                 , BPR200T B 
                  , (SELECT COMP_CODE
                          , ITEM_GROUP
                      FROM BPR100T 
                     WHERE ITEM_CODE IN (SELECT ITEM_GROUP
                                           FROM BPR100T 
                                          WHERE ITEM_GROUP IS NOT NULL)
                       AND USE_YN = N'Y' ) AS C
               WHERE  A.ITEM_CODE                 = B.ITEM_CODE
                 AND  A.COMP_CODE                 = B.COMP_CODE
                 AND  A.ITEM_CODE                 = C.ITEM_GROUP
                 AND  A.COMP_CODE                 = C.COMP_CODE
                 AND  A.COMP_CODE                 = #{S_COMP_CODE}
                 AND  B.DIV_CODE                  = #{DIV_CODE}
               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                AND A.ITEM_CODE LIKE #{ITEM_CODE} +'%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                   AND (CASE WHEN @RefItem = '1' THEN ITEM_NAME1
                             WHEN @RefItem = '2' THEN ITEM_NAME2
                                                 ELSE A.ITEM_NAME
                         END)       LIKE '%'+ #{ITEM_NAME} +'%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
                       AND NVL(B.SUPPLY_TYPE, '') LIKE #{SUPPLY_TYPE} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
                       AND NVL(A.ITEM_LEVEL1, '') LIKE #{ITEM_LEVEL1} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
                      AND NVL(A.ITEM_LEVEL2, '') LIKE #{ITEM_LEVEL2} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
                       AND NVL(A.ITEM_LEVEL3, '') LIKE #{ITEM_LEVEL3} + '%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
                 AND NVL(A.ITEM_GROUP , '') LIKE #{ITEM_GROUP} + '%'
                </if>
                 AND A.USE_YN = 'Y'
               <if test="RDO == 1">
                    ORDER BY    A.ITEM_CODE
               </if>
               <if test="RDO == 2">
                    ORDER BY    CASE @RefItem
                             WHEN '1' THEN A.ITEM_NAME1
                             WHEN '2' THEN A.ITEM_NAME2
                                      ELSE A.ITEM_NAME
                        END 
                </if>        
       END
    </select>
    <select id="popupServiceImpl.safferTaxPopup" parameterType="Map" resultType="rMap">
        SELECT   SUB_CODE  
               , CODE_NAME 
          FROM BSA100T                     
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND MAIN_CODE   = 'A080' 
           AND SUB_CODE   != '$'                   
           AND USE_YN      = 'Y'                     
           <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
                   <if test="USELIKE == false">
                       AND SUB_CODE = #{SUB_CODE} 
                   </if>
                   <if test="USELIKE == true">
                       AND SUB_CODE LIKE '%'+ #{SUB_CODE} +'%'
                   </if>
           </if> 
           <if test="@foren.Ognl@isNotEmpty(CODE_NAME)">
                   <if test="USELIKE == false">
                       AND CODE_NAME = #{CODE_NAME} 
                   </if>
                   <if test="USELIKE == true">
                       AND CODE_NAME LIKE '%'+ #{CODE_NAME} +'%'
                   </if>
           </if> 
           <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                   
                   <if test="USELIKE != false">
                   AND (SUB_CODE LIKE '%' + #{TXT_SEARCH} + '%'                            
                    OR CODE_NAME LIKE '%' + #{TXT_SEARCH} + '%' ) 
                   </if>  
           </if>                                                                                                                      
         ORDER BY SUB_CODE         
    </select>
    <select id="popupServiceImpl.driver" parameterType="Map" resultType="rMap">
        /*popupServiceImpl.driver*/
        SELECT A.DRIVER_CODE, H.NAME AS DRIVER_NAME,
               NVL(G1.VEHICLE_CODE, G2.VEHICLE_CODE) AS VEHICLE_CODE,
               CASE WHEN G1.VEHICLE_CODE IS NOT NULL THEN GV1.VEHICLE_NAME
                       WHEN G2.VEHICLE_CODE IS NOT NULL THEN GV2.VEHICLE_NAME
                       ELSE ''
               END VEHICLE_NAME,
               H.JOIN_DATE,    
               H.RETR_DATE,
               H.KOR_ADDR,    
               H.TELEPHON,          
               H.PHONE_NO,    
               NVL(unilite.fnCipherDecrypt(H.REPRE_NUM, 'A'), '') AS REPRE_NUM,    
               H.LICENSE_NO
          FROM GDR100T A
          LEFT JOIN HUM100T H ON A.COMP_CODE = H.COMP_CODE
                             AND A.DRIVER_CODE = H.PERSON_NUMB          
          LEFT JOIN GAG200T G1 ON A.COMP_CODE = G1.COMP_CODE
                               AND A.DIV_CODE = G1.DIV_CODE
                               AND A.DRIVER_CODE = G1.FIXED_DRIVER1
          LEFT JOIN GVE100T GV1 ON G1.COMP_CODE = GV1.COMP_CODE
                               AND G1.DIV_CODE = GV1.DIV_CODE
                               AND G1.VEHICLE_CODE = GV1.VEHICLE_CODE
          LEFT JOIN GAG200T G2 ON A.COMP_CODE = G1.COMP_CODE
                               AND A.DIV_CODE = G1.DIV_CODE
                               AND A.DRIVER_CODE = G1.FIXED_DRIVER2
          LEFT JOIN GVE100T GV2 ON G2.COMP_CODE = GV2.COMP_CODE
                               AND G2.DIV_CODE = GV2.DIV_CODE
                               AND G2.VEHICLE_CODE = GV2.VEHICLE_CODE                                         
         WHERE A.COMP_CODE=#{S_COMP_CODE}
           AND A.DIV_CODE=#{DIV_CODE}
           AND H.RETR_DATE = '00000000'
           <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">     
                   <if test="USELIKE != false">
                   AND A.DRIVER_CODE LIKE '%' + #{DRIVER_CODE} + '%'  
                   </if>  
                   <if test="USELIKE == false">
                       AND A.DRIVER_CODE = #{DRIVER_CODE}     
                   </if>
           </if>
           <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">     
                   <if test="USELIKE != false">
                   AND H.NAME LIKE '%' + #{DRIVER_NAME} + '%'  
                   </if>  
                   <if test="USELIKE == false">
                       AND H.NAME = #{DRIVER_NAME}     
                   </if>
           </if>
           <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                   
                   <if test="USELIKE != false">
                   AND (A.DRIVER_CODE LIKE '%' + #{TXT_SEARCH} + '%'                            
                    OR H.NAME LIKE '%' + #{TXT_SEARCH} + '%' ) 
                   </if>  
                   <if test="USELIKE == false">
                       AND (A.DRIVER_CODE = #{TXT_SEARCH}                            
                    OR H.NAME = #{TXT_SEARCH} ) 
                   </if>
           </if>                                              
         ORDER BY H.NAME         
    </select>    
    <select id="popupServiceImpl.vehicle" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.vehicle */
        SELECT 
            DIV_CODE,
            VEHICLE_CODE,
            VEHICLE_NAME,
            VEHICLE_REGIST_NO,
            REGIST_STATUS
        FROM GVE100T 
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE = #{DIV_CODE}
          <if test="@foren.Ognl@isNotEmpty(REGIST_STATUS)">    
          AND REGIST_STATUS = #{REGIST_STATUS}
          </if>
          <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">     
                   <if test="USELIKE != false">
                   AND VEHICLE_CODE LIKE '%' + #{VEHICLE_CODE} + '%'  
                   </if>  
                   <if test="USELIKE == false">
                       AND VEHICLE_CODE = #{VEHICLE_CODE}     
                   </if>
           </if>
           <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">     
                   <if test="USELIKE != false">
                   AND VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'  
                   </if>  
                   <if test="USELIKE == false">
                       AND VEHICLE_NAME = #{VEHICLE_NAME}     
                   </if>
           </if>
          <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                   
                   <if test="USELIKE != false">
                   AND (VEHICLE_CODE LIKE '%' + #{TXT_SEARCH} + '%'                            
                    OR VEHICLE_NAME LIKE '%' + #{TXT_SEARCH} + '%' ) 
                   </if>  
                   <if test="USELIKE == false">
                       AND (VEHICLE_CODE = #{TXT_SEARCH}                            
                    OR VEHICLE_NAME = #{TXT_SEARCH} ) 
                   </if>
          </if>                                              
         ORDER BY VEHICLE_NAME         
    </select> 
    <select id="popupServiceImpl.countdate" parameterType="Map" resultType="rMap">        /*실사일팝업*/
        /*biv120ukrv.Cbiv120ukrv[fnBiv120QPop] Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(20) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}   
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = @UserId
        
            SET @RefItem = NVL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T 
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = NVL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT A.DIV_CODE
                 , A.WH_CODE
                 , C1.TREE_NAME                                     AS WH_NAME
                 , (CASE WHEN NVL(A.COUNT_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.COUNT_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(A.COUNT_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(A.COUNT_DATE, 7, 2))
                    END)                                            AS COUNT_DATE
                 , CASE WHEN A.COUNT_FLAG = 'O' THEN uniLITE.fnGetTxt('K0001')
                        WHEN A.COUNT_FLAG = 'P' THEN uniLITE.fnGetTxt('K0002')
                        WHEN A.COUNT_FLAG = 'C' THEN uniLITE.fnGetTxt('K0003')
                   END                                              AS COUNT_FLAG
                 , CASE WHEN A.COUNT_CONT_DATE = '00000000' THEN ''
                        ELSE (CASE WHEN NVL(A.COUNT_CONT_DATE, '') = ''
                                THEN ''
                                ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.COUNT_CONT_DATE, 1, 4))
                                                                        , 'MM'  , SUBSTRING(A.COUNT_CONT_DATE, 5, 2))
                                                                        , 'DD'  , SUBSTRING(A.COUNT_CONT_DATE, 7, 2))
                             END) 
                    END                                                          AS COUNT_CONT_DATE                                           
                 , A.COUNT_FLAG                                                  AS COUNT_FLAG_CD
            FROM              BIV300T A  
                   LEFT  JOIN BSA220T C1  ON C1.COMP_CODE  = A.COMP_CODE
                                                      AND C1.TYPE_LEVEL = A.DIV_CODE
                                                      AND C1.TREE_CODE  = A.WH_CODE
            WHERE  A.COMP_CODE  = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND    A.DIV_CODE   = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
            AND    A.WH_CODE    = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
            AND    A.COUNT_DATE = #{COUNT_DATE}
            </if>
            GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, C1.TREE_NAME, A.COUNT_DATE, A.COUNT_FLAG, A.COUNT_CONT_DATE
            ORDER BY A.COUNT_DATE DESC
        
        END
    </select>
    <select id="popupServiceImpl.shopPopup" parameterType="Map" resultType="rMap">        /*매장팝업*/
        /*biv120ukrv.Cbiv120ukrv[fnBiv120QPop] Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(20) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
        
            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}   
        
            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = @UserId
        
            SET @RefItem = NVL(@RefItem, N'0')
        
            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T 
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'
        
            SET @DateFormat = NVL(@DateFormat, 'YYYY.MM.DD')
        
            /* 데이터 조회 */
            SELECT A.DIV_CODE
             , A.SHOP_CODE
             , A.SHOP_NAME
             , A.DEPT_CODE
             , C2.TREE_NAME                             AS DEPT_NAME
             , A.WH_CODE
             , A.BRAND_CODE
             , A.PHONE_NUMBER
             , A.STAFF_ID
       FROM    BSA250T   A  
               LEFT  JOIN BSA210T   C2  ON C2.TREE_CODE    = A.DEPT_CODE
                                                       AND C2.COMP_CODE    = A.COMP_CODE
               LEFT  JOIN BSA250T   C1  ON C1.SHOP_CODE    = A.SHOP_CODE
                                                       AND C1.DIV_CODE        = A.DIV_CODE
                                                       AND C1.COMP_CODE    = A.COMP_CODE
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}
        
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND    A.DIV_CODE       = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SHOP_NAME)">
        AND    A.SHOP_NAME       = #{SHOP_NAME}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SHOP_CODE)">
        AND    A.SHOP_CODE  = #{SHOP_CODE}
        </if>
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
    </select>
    <select id="popupServiceImpl.lotPopup" parameterType="Map" resultType="rMap">        /*LOT팝업*/
    /*uniLITE5Popup.CPopup[getLotListPopup] Query01*/
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
    
        DECLARE @COMP_CODE         NVARCHAR(08)     /*(필수) 법인코드*/
              , @DIV_CODE          NVARCHAR(08)     /*(필수) 사업장코드*/
              , @CUSTOM_CODE       NVARCHAR(08)     /*(선택) 거래처코드*/
              , @CUSTOM_NAME       NVARCHAR(20)     /*(선택) 거래처명*/
              , @FR_INOUT_DATE     NVARCHAR(08)     /*(선택) FROM 수불일*/
              , @TO_INOUT_DATE     NVARCHAR(08)     /*(선택) TO 수불일*/
              , @ITEM_CODE         NVARCHAR(20)     /*(선택) 품목코드*/
              , @ITEM_NAME         NVARCHAR(200)    /*(선택) 품목명*/
              , @LOT_NO            NVARCHAR(20)     /*(선택) LOT NO*/
              , @REMARK            NVARCHAR(200)    /*(선택) 비고*/
              , @STOCK_YN          NVARCHAR(01)     /*(선택) 현재고 유무*/
              , @USER_ID           NVARCHAR(10)     /*(필수) 사용자 ID*/
    
        SET @COMP_CODE         = #{S_COMP_CODE}
        SET @DIV_CODE          = #{DIV_CODE}
        SET @CUSTOM_CODE       = #{CUSTOM_CODE}
        SET @CUSTOM_NAME       = #{CUSTOM_NAME}
        SET @FR_INOUT_DATE     = #{FR_INOUT_DATE}
        SET @TO_INOUT_DATE     = #{TO_INOUT_DATE}
        SET @ITEM_CODE         = #{ITEM_CODE}
        SET @ITEM_NAME         = #{ITEM_NAME}
        SET @LOT_NO            = #{LOT_NO}
        SET @REMARK            = #{REMARK}
        SET @STOCK_YN          = #{STOCK_YN}
        SET @USER_ID           = #{S_USER_ID}
    
        /* 사용자의 참조명칭 */
        DECLARE @RefItem           NVARCHAR(01)
    
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T 
         WHERE USER_ID = @USER_ID
    
        SET @RefItem = NVL(@RefItem, '')
       
    
    /*
    선택    거래처코드    거래처명    LOT NO.    창고    입고량    출고량    현재고    양품재고    불량재고    품목코드    품명    재고단위    비고
    */
    
        SELECT CONVERT(BIT, 0) AS CHK
             , C2.CUSTOM_CODE
             , CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
                    WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
                    ELSE                     C2.CUSTOM_NAME
                END AS CUSTOM_NAME
             , A.LOT_NO
             , A.WH_CODE
             , C3.TREE_NAME                                              AS WH_NAME
             , uniLITE.fnFormat(A.COMP_CODE, A.INSTOCK_Q,    'M_FSET_Q') AS INSTOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, A.OUTSTOCK_Q,   'M_FSET_Q') AS OUTSTOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, A.STOCK_Q,      'M_FSET_Q') AS STOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, A.GOOD_STOCK_Q, 'M_FSET_Q') AS GOOD_STOCK_Q
             , uniLITE.fnFormat(A.COMP_CODE, A.BAD_STOCK_Q,  'M_FSET_Q') AS BAD_STOCK_Q
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE C1.ITEM_NAME
                END                                                      AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , B.REMARK
          FROM            BIV150T AS A  
               LEFT  JOIN (
                          SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, MAX(REMARK) AS REMARK
                          FROM   BTR100T WITH (NOLOCK, INDEX(BTR100T_IDX07))
                          GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO
                          )       AS B                ON  B.COMP_CODE   = A.COMP_CODE
                                                     AND  B.DIV_CODE    = A.DIV_CODE
                                                     AND  B.ITEM_CODE   = A.ITEM_CODE
                                                     AND  B.LOT_NO      = A.LOT_NO
               LEFT  JOIN BPR100T AS C1  ON C1.COMP_CODE   = A.COMP_CODE
                                                     AND C1.ITEM_CODE   = A.ITEM_CODE
               LEFT  JOIN BCM100T AS C2  ON C2.COMP_CODE   = A.COMP_CODE
                                                     AND C2.CUSTOM_CODE = A.CUSTOM_CODE
               LEFT  JOIN BSA220T AS C3  ON C3.COMP_CODE   = A.COMP_CODE
                                                     AND C3.TREE_CODE   = A.WH_CODE
         WHERE   A.COMP_CODE     = @COMP_CODE
           AND   A.DIV_CODE      = @DIV_CODE
           AND   A.SUM_TYPE      = 'C'              /* LOT_NO 합산*/
           AND ((A.CUSTOM_CODE   =    @CUSTOM_CODE        AND @CUSTOM_CODE   != '') OR (@CUSTOM_CODE   = ''))
           AND ((C2.CUSTOM_NAME  LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '0') OR 
                (C2.CUSTOM_NAME1 LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '1') OR
                (C2.CUSTOM_NAME2 LIKE @CUSTOM_NAME + '%'  AND @CUSTOM_NAME   != '' AND @RefItem = '2') OR
                (@CUSTOM_NAME    = ''))
           AND ((A.ITEM_CODE     =    @ITEM_CODE          AND @ITEM_CODE     != '') OR (@ITEM_CODE     = ''))
           AND ((C1.ITEM_NAME    LIKE @ITEM_NAME + '%'    AND @ITEM_NAME     != '' AND @RefItem = '0') OR 
                (C1.ITEM_NAME1   LIKE @ITEM_NAME + '%'    AND @ITEM_NAME     != '' AND @RefItem = '1') OR
                (C1.ITEM_NAME2   LIKE @ITEM_NAME + '%'    AND @ITEM_NAME     != '' AND @RefItem = '2') OR
                (@ITEM_NAME      = ''))
           AND ((A.LOT_NO        LIKE @LOT_NO + '%'       AND @LOT_NO        != '') OR (@LOT_NO        = ''))
           AND ((B.REMARK        LIKE '%' + @REMARK + '%' AND @REMARK        != '') OR (@REMARK        = ''))
           AND ((A.STOCK_Q       &gt; 0.0                    AND @STOCK_YN      = 'Y') OR
                (A.STOCK_Q       = 0.0                    AND @STOCK_YN      = 'N') OR
                (@STOCK_YN       = ''))
         GROUP BY A.COMP_CODE, A.LOT_NO, A.ITEM_CODE, A.WH_CODE, A.INSTOCK_Q, A.OUTSTOCK_Q, A.STOCK_Q, A.GOOD_STOCK_Q, A.BAD_STOCK_Q
                , C1.STOCK_UNIT, C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC
                , C2.CUSTOM_CODE, C2.CUSTOM_NAME, C2.CUSTOM_NAME1, C2.CUSTOM_NAME2
                , C3.TREE_CODE, C3.TREE_NAME, B.REMARK
         ORDER BY C2.CUSTOM_CODE, A.LOT_NO
    
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
    </select>
    <select id="popupServiceImpl.lotNoPopup" parameterType="Map" resultType="rMap">        /*LOTNO팝업*/
BEGIN
    DECLARE     @COMP_CODE          NVARCHAR(08)        /*(필수) 법인코드*/
              , @DIV_CODE           NVARCHAR(08)        /*(필수) 사업장코드*/
              , @CUSTOM_CODE        NVARCHAR(08)        /*(필수) 거래처코드*/
              , @CUSTOM_NAME        NVARCHAR(50)        /*(필수) 거래처명 */      
                , @ITEM_CODE        NVARCHAR(20)        /*(필수) 품목코드*/
              , @ITEM_NAME          NVARCHAR(200)       /*(필수) 품목명*/

              , @WH_CODE            NVARCHAR(08)        /*(선택) 창고코드*/
              , @WH_CELL_CODE       NVARCHAR(20)        /*(선택) 창고Cell*/
              , @LOT_NO             NVARCHAR(20)        /*(선택) LOT NO*/
              , @STOCK_YN           NVARCHAR(01)        /*(선택) 현재고 유무*/
              , @USER_ID            NVARCHAR(10)        /*(필수) 사용자 ID*/

/*1. 변수 값 할당*/
    SET     @COMP_CODE     = #{S_COMP_CODE}
    SET     @DIV_CODE      = #{DIV_CODE}
    SET     @ITEM_CODE     = #{ITEM_CODE}
    SET     @ITEM_NAME     = #{ITEM_NAME}
    SET     @STOCK_YN      = #{STOCK_YN}
    SET     @USER_ID       = #{S_USER_ID}
                               
    SET NOCOUNT ON
    SET ARITHABORT ON

/*2. 사용자의 참조명칭*/
    DECLARE @RefItem            NVARCHAR(01)

    SELECT TOP 1 @RefItem = REF_ITEM
    FROM   BSA300T 
    WHERE  USER_ID = @USER_ID

    SET @RefItem = NVL(@RefItem, '0')

/*3. LOT 재고정보 조회*/
    SELECT A.COMP_CODE
         , A.DIV_CODE
         , A.CUSTOM_CODE
            , A.CUSTOM_NAME
         , A.ITEM_NAME
         , A.ITEM_CODE
         , A.ITEM_NAME
         , A.SPEC
         , A.STOCK_UNIT
         , A.WH_CODE
         , A.WH_NAME
         , A.WH_CELL_CODE
         , A.WH_CELL_NAME
         , A.LOT_NO
         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.INSTOCK_Q),    'R_FSET_Q') AS INSTOCK_Q
         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.OUTSTOCK_Q),   'R_FSET_Q') AS OUTSTOCK_Q
         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.STOCK_Q),      'R_FSET_Q') AS STOCK_Q
         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.GOOD_STOCK_Q), 'R_FSET_Q') AS GOOD_STOCK_Q
         , uniLITE.fnFormat(A.COMP_CODE, SUM(A.BAD_STOCK_Q),  'R_FSET_Q') AS BAD_STOCK_Q         
    FROM   (
           SELECT A.COMP_CODE
                , A.DIV_CODE
                , A.CUSTOM_CODE
                , B.CUSTOM_NAME
                , A.ITEM_CODE
                , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                       WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                       WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                       ELSE C1.ITEM_NAME
                  END                                                   AS ITEM_NAME
                , C1.SPEC
                , C1.STOCK_UNIT
                , A.WH_CODE
                , C2.TREE_NAME                                          AS WH_NAME
                , CASE WHEN NVL(M2.REF_CODE1, 'N') = 'N' THEN ''
                       ELSE A.WH_CELL_CODE
                  END                                                   AS WH_CELL_CODE
                , CASE WHEN NVL(M2.REF_CODE1, 'N') = 'N' THEN ''
                       ELSE C3.WH_CELL_NAME
                  END                                                   AS WH_CELL_NAME
                , A.LOT_NO
                , A.INSTOCK_Q
                , A.OUTSTOCK_Q
                , A.STOCK_Q
                , A.GOOD_STOCK_Q
                , A.BAD_STOCK_Q
                , C1.SALE_BASIS_P
           FROM              BIV150T A  
                  LEFT JOIN BCM100T B  ON B.COMP_CODE    = A.COMP_CODE
                                                     AND B.CUSTOM_CODE    = A.CUSTOM_CODE                                                                     
                  INNER JOIN BPR100T C1  ON C1.COMP_CODE    = A.COMP_CODE
                                                     AND C1.ITEM_CODE    = A.ITEM_CODE
                  LEFT JOIN BSA220T C2  ON C2.COMP_CODE    = A.COMP_CODE
                                                     AND C2.TYPE_LEVEL   = A.DIV_CODE
                                                     AND C2.TREE_CODE    = A.WH_CODE
                  LEFT  JOIN BSA225T C3  ON C3.COMP_CODE    = A.COMP_CODE
                                                     AND C3.DIV_CODE     = A.DIV_CODE
                                                     AND C3.WH_CODE      = A.WH_CODE
                                                     AND C3.WH_CELL_CODE = A.WH_CELL_CODE
                  LEFT  JOIN BSA100T M1  ON M1.COMP_CODE    = A.COMP_CODE
                                                     AND M1.MAIN_CODE    = N'B084'
                                                     AND M1.SUB_CODE     = N'C' /*Lot No. 합산*/
                  LEFT  JOIN BSA100T M2  ON M2.COMP_CODE    = A.COMP_CODE
                                                     AND M2.MAIN_CODE    = N'B084'
                                                     AND M2.SUB_CODE     = N'D' /*창고 Cell 합산*/
           WHERE  A.COMP_CODE       =       @COMP_CODE
           AND    A.DIV_CODE        =       @DIV_CODE
           AND    A.SUM_TYPE        = CASE  WHEN NVL(M2.REF_CODE1, 'N') = 'Y'                                     THEN 'D'
                                            ELSE 'C'
                                      END
           AND  ((A.ITEM_CODE    LIKE       @ITEM_CODE + '%'                    AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
           AND A.CUSTOM_CODE    LIKE       #{CUSTOM_CODE} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
           AND B.CUSTOM_NAME    LIKE       #{CUSTOM_NAME} + '%'    
           </if>            
           AND  ((C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '0' AND @ITEM_NAME    != '')
              OR (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '1' AND @ITEM_NAME    != '')
              OR (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @RefItem = '2' AND @ITEM_NAME    != '') OR (@ITEM_NAME    = ''))
           <if test="@foren.Ognl@isNotEmpty(LOTNO_CODE)">
           AND  A.LOT_NO       LIKE       #{LOTNO_CODE}  + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
           AND  A.WH_CODE         =       #{WH_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
           AND  A.WH_CELL_CODE         =       #{WH_CELL_CODE}
           </if>           
           AND  ((A.STOCK_Q         != 0.0                                    AND @STOCK_YN      = 'Y')
              OR (A.STOCK_Q         = 0.0                                       AND @STOCK_YN      = 'N')
              OR (@STOCK_YN         = ''))
           ) A
    GROUP  BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE,    A.ITEM_NAME,    A.SPEC,  A.STOCK_UNIT
            , A.WH_CODE,   A.WH_NAME,  A.WH_CELL_CODE, A.WH_CELL_NAME, A.LOT_NO
               , A.CUSTOM_CODE, A.CUSTOM_NAME, A.SALE_BASIS_P

    ORDER  BY A.ITEM_CODE, A.WH_CODE,  A.WH_CELL_CODE, A.LOT_NO

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END



    </select>
    
    <select id="popupServiceImpl.hsPopup" parameterType="Map" resultType="rMap">        /*HS팝업*/
    --uniLITE5Popup.CPopup[getHSPopup] Query01             
    SELECT HS_NO                           
         , HS_NAME                         
         , HS_SPEC                         
         , HS_UNIT                         
      FROM TAA030T            
     WHERE (HS_NO   LIKE #{HS_NO} + '%'
         OR HS_NAME LIKE '%' + #{HS_NAME} + '%')
       AND COMP_CODE   = #{S_COMP_CODE}
     ORDER BY HS_NO ASC                    
    </select>
    
    
    <select id="popupServiceImpl.custBillPrsnPopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.CustBillPrsnPopup */
        SELECT   A.SEQ,                    
                 A.PRSN_NAME,              
                 A.DEPT_NAME,              
                 A.HAND_PHON,              
                 A.TELEPHONE_NUM1,         
                 A.TELEPHONE_NUM2,         
                 A.FAX_NUM,                
                 A.MAIL_ID,                
                 A.BILL_TYPE,              
                 A.MAIN_BILL_YN,           
                 A.REMARK                  
           FROM  BCM120T A 
          INNER  JOIN BCM100T B ON B.COMP_CODE = A.COMP_CODE AND B.CUSTOM_CODE = A.CUSTOM_CODE 
          WHERE  A.COMP_CODE = #{S_COMP_CODE}
              <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">    
              AND A.CUSTOM_CODE = CONVERT(VARCHAR, #{CUSTOM_CODE})
              </if>
              <if test="SEARCH_TYPE == 'BILLPRSN'">    
              AND A.PRSN_NAME = #{SEARCH_TEXT}
              </if>
              <if test="SEARCH_TYPE == 'REMAIL'">    
              AND A.MAIL_ID = #{SEARCH_TEXT}
              </if>
              <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
               AND A.BILL_TYPE IN  ('3', 
                       <foreach collection="BILL_TYPE" item="item" separator=","> 
                           #{item} 
                       </foreach>
               )
                 </if>         
                  <if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
               AND A.PRSN_NAME 
                <if test="USELIKE == false">
                        = #{PRSN_NAME} 
                 </if>
                 <if test="USELIKE != false">
                       LIKE   '%' + #{PRSN_NAME} + '%'
                 </if>
             </if>
             <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
                AND ${ADD_QUERY}
            </if>
            <if test="RDO == 1">
                ORDER BY A.SEQ
            </if>
            <if test="RDO == 2">
                ORDER BY A.PRSN_NAME
            </if>    
                
    </select>
    <select id="popupServiceImpl.project" parameterType="Map" resultType="rMap"> 
        /* uniLITE5Popup.CPopup[getProjectPopup] Query02 */
        SELECT A.PJT_CODE
             , A.PJT_NAME
             , NVL(A.PJT_AMT, 0) AS PJT_AMT
             , NVL(A.CUSTOM_CODE, '') AS CUSTOM_CODE
             , NVL(B.CUSTOM_NAME, '') AS CUSTOM_NAME
            <if test="@foren.Ognl@isNotEmpty(BPARAM0)">
                <if test="BPARAM0 &gt;= 4">
                    , uniLITE.fnCustNameComp(A.COMP_CODE, #{S_COMP_CODE}, B.CUSTOM_CODE) AS CUSTOM_NAME
                </if>
                <if test="BPARAM0 &lt; 4">
                    , NVL(B.CUSTOM_NAME, '') AS CUSTOM_NAME
                </if>    
            </if>            
          FROM BCM600T A 
                       LEFT OUTER JOIN BCM100T B 
                                    ON A.COMP_CODE   = B.COMP_CODE
                                   AND A.CUSTOM_CODE = B.CUSTOM_CODE
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.PJT_CODE IS NOT NULL
            <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
                AND A.PJT_CODE = #{PJT_CODE}
            </if>
           <if test="RDO == &quot;1&quot;">
                   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND A.PJT_CODE LIKE #{TXT_SEARCH} + '%'
                   </if>                   
           </if>
           <if test="RDO == &quot;2&quot;">
                   <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND A.PJT_NAME LIKE #{TXT_SEARCH} + '%'
                   </if>
           </if>           
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
                   AND DIVI = 'N'
           </if>
           <if test="@foren.Ognl@isEmpty(CUSTOM_CODE)">
                   AND DIVI = 'N'
           </if>
           <if test="BPARAM0 == 1">
                ORDER BY A.PJT_CODE ASC
           </if>
           <if test="BPARAM0 == 3">
                ORDER BY A.PJT_CODE ASC
           </if>
           <if test="BPARAM0 == 2">
                ORDER BY A.PJT_NAME ASC
           </if>
           <if test="BPARAM0 == 4">
                ORDER BY A.PJT_NAME ASC
           </if>
    </select>
    
    <select id="popupServiceImpl.pjtPopup" parameterType="Map" resultType="rMap"> 
        /* URFuncKrv.CRFuncKr[getPjtPopup] Query02    */
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(10)                -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(10)                -- (필수) 사업장코드
                  , @PJT_CODE           NVARCHAR(20)                -- (필수) 프로젝트번호
                  , @USER_ID            NVARCHAR(10)                -- (필수) 사용자 ID
        
        /*  1. 변수 값 할당 ----------------------------------------------------------------------------------------------- */
            SET @COMP_CODE          = #{S_COMP_CODE}
            SET @DIV_CODE           = #{DIV_CODE}
            SET @PJT_CODE           = #{PJT_CODE}
            SET @USER_ID            = #{S_USER_ID}
        
        /*  2. 명칭 조회 유형 설정 ------------------------------------------------------------------------------------------ */
            DECLARE @RefItem            NVARCHAR(01)
        
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T 
             WHERE USER_ID = @USER_ID
        
            SET @RefItem = NVL(@RefItem, '0')
        
        /* 3. 데이터 조회 -------------------------------------------------------------------------------------------------- */
            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.PJT_CODE
                 , A.PJT_NAME
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUSI_FR_DATE) AS BUSI_FR_DATE
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUSI_TO_DATE) AS BUSI_TO_DATE
                 , A.CUSTOM_CODE
                 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
                        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
                        ELSE C1.CUSTOM_NAME
                   END                                                AS CUSTOM_NAME
                 , A.PJT_AMT
                 , NVL(D1.ORDER_O,0)                               AS CONTRACT_AMT
                 , A.BUSI_DIVI
                 , A.BUSI_TYPE
                 , A.PROCESS_STATUS
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.BUILD_DATE)   AS BUILD_DATE
                 , uniLITE.fnGetUserDate(A.COMP_CODE, A.REG_DATE)     AS REG_DATE
                 , A.BUILD_CUSTOM
                 , CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
                        WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
                        ELSE C2.CUSTOM_NAME
                   END                                                AS BUILD_NAME
                 , A.CAPACITY
                 , A.PROC_TYPE
                 , A.PROCESS_DESC
                 , A.DEPT_CODE
                 , C3.TREE_NAME                                       AS DEPT_NAME
                 , A.IN_REMARK
                 , A.SALES_REMARK
                 , A.PRO_REMARK
                 , A.INSERT_DB_USER
                 , A.INSERT_DB_TIME
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
              FROM            PJT100T A  
                   INNER JOIN PJT910T A1  ON A1.COMP_CODE   = A.COMP_CODE
                                                      AND A1.DIV_CODE    = A.DIV_CODE
                                                      AND A1.PJT_CODE    = A.PJT_CODE
                                                      AND A1.USER_ID     = @USER_ID
                   LEFT  JOIN BCM100T C1  ON C1.COMP_CODE   = A.COMP_CODE
                                                      AND C1.CUSTOM_CODE = A.CUSTOM_CODE
                   LEFT  JOIN BCM100T C2  ON C2.COMP_CODE   = A.COMP_CODE
                                                      AND C2.CUSTOM_CODE = A.BUILD_CUSTOM
                   LEFT  JOIN BSA210T C3  ON C3.COMP_CODE   = A.COMP_CODE
                                                      AND C3.TREE_CODE   = A.DEPT_CODE
                   LEFT  JOIN (SELECT E.COMP_CODE
                                    , E.DIV_CODE
                                    , E.PJT_CODE
                                    , SUM(D.ORDER_O) AS ORDER_O
                                 FROM            SOF110T AS D 
                                      INNER JOIN SOF100T AS E  ON E.COMP_CODE  = D.COMP_CODE
                                                                           AND E.DIV_CODE   = D.DIV_CODE
                                                                           AND E.ORDER_NUM  = D.ORDER_NUM
                                WHERE E.COMP_CODE = @COMP_CODE
                                GROUP BY E.COMP_CODE, E.DIV_CODE, E.PJT_CODE) D1 ON D1.COMP_CODE   = A.COMP_CODE
                                                                                AND D1.DIV_CODE    = A.DIV_CODE
                                                                                AND D1.PJT_CODE    = A.PJT_CODE
             WHERE A.COMP_CODE      = @COMP_CODE
               AND A.DIV_CODE       = @DIV_CODE
               
               <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
                   <if test="USELIKE == false">
                           AND A.PJT_CODE = #{PJT_CODE}                         /* 프로젝트코드*/
                   </if>
                   <if test="USELIKE != false">
                        AND A.PJT_CODE LIKE #{PJT_CODE} +  '%'
                   </if>
                 </if>
               <if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
                   <if test="USELIKE == false">
                           AND A.PJT_NAME = #{PJT_NAME}                         /* 프로젝트명*/
                   </if>
                   <if test="USELIKE != false">
                        AND A.PJT_NAME LIKE #{PJT_NAME} +  '%'
                   </if>
                 </if>
               <if test="@foren.Ognl@isNotEmpty(BUSI_TYPE)">
               AND A.BUSI_TYPE      = #{BUSI_TYPE}                           /* 사업분야 */
               </if>
               <if test="@foren.Ognl@isNotEmpty(BUSI_DIVI)">
               AND A.BUSI_DIVI      = #{BUSI_DIVI}                           /* 사업구분 */
               </if>
              <if test="CHECKED == &quot;START&quot;">
                   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_FR)">
                           AND A.BUSI_FR_DATE  &gt;= #{BUSI_FR_DATE_FR}           /* 사업기간 시작일_FR */
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_TO)">
                           AND A.BUSI_FR_DATE  &lt;= #{BUSI_FR_DATE_TO}           /* 사업기간 시작일_TO */ 
                   </if>
              </if>
              
              <if test="CHECKED == &quot;END&quot;">
                      <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_FR)">
                           AND A.BUSI_TO_DATE  &gt;= #{BUSI_FR_DATE_FR}                   /* 사업기간 종료일_FR */
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(BUSI_FR_DATE_TO)">
                           AND A.BUSI_TO_DATE  &lt;= #{BUSI_FR_DATE_TO}                   /* 사업기간 종료일_TO */
                   </if>
              </if>                            
               <if test="@foren.Ognl@isNotEmpty(PROCESS_STATUS)">
               AND A.PROCESS_STATUS = #{PROCESS_STATUS}                       /* 진행상태 */
               </if>
        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>
    
    <select id="popupServiceImpl.inoutNumPopup" parameterType="Map" resultType="rMap"> 
        /* zfS_popupz.vbs[INOUT_NUM] */                                                                   
        SELECT  DISTINCT                                                            
                A.INOUT_NUM                                     
               ,uniLITE.fnGetUserdate(A.COMP_CODE,A.INOUT_DATE) AS INOUT_DATE
               ,A.INOUT_CODE                                    
               ,(                                                                   
                  CASE A.INOUT_CODE_TYPE WHEN '3' THEN C.TREE_NAME                  
                                         WHEN '4' THEN B.CUSTOM_NAME                
                  END                                                               
                )                                               AS CUSTOM_NAME
               ,A.WH_CODE                                      
               ,A.DIV_CODE                                     
               ,B.AGENT_TYPE                                   
               ,NVL(B.AREA_TYPE,'')                          AS AREA_TYPE
               ,A.INOUT_TYPE                                    
      FROM      BTR100T A                                                       
      LEFT JOIN BCM100T B ON A.COMP_CODE  = B.COMP_CODE                         
                         AND A.INOUT_CODE = B.CUSTOM_CODE                       
      LEFT JOIN BSA220T C ON A.COMP_CODE  = C.COMP_CODE                         
                         AND A.DIV_CODE   = C.TYPE_LEVEL                        
                         AND A.INOUT_CODE = C.TREE_CODE
      WHERE  A.COMP_CODE          = #{S_COMP_CODE}                                        
         AND A.CREATE_LOC         = '1'                  
         AND A.INOUT_TYPE_DETAIL != 'CI'                
         AND A.INOUT_TYPE       IN (#{INOUT_TYPE})  /* 2 */
         AND A.DIV_CODE           = #{DIV_CODE} 
        <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
         AND A.INOUT_NUM       LIKE #{INOUT_NUM} + '%'
        </if>        
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
         AND A.INOUT_NUM       = #{TXT_SEARCH}
        </if>
    
      <if test="RDO == &quot;1&quot;">
          ORDER BY 2 DESC
      </if>
      
      <if test="RDO == &quot;2&quot;">
          ORDER BY 3 DESC
      </if>                            
       
    </select>
    
    <select id="popupServiceImpl.orderNumPopup" parameterType="Map" resultType="rMap"> 
        SELECT DISTINCT 
            A.ORDER_NUM                             
            , uniLITE.fnGetUserdate(A.COMP_CODE, A.ORDER_DATE) AS ORDER_DATE
            , B.CUSTOM_NAME 
                                              
          FROM       SOF100T A                                                           
         INNER JOIN  BCM100T B  ON A.COMP_CODE     = B.COMP_CODE 
                                             AND A.CUSTOM_CODE   = B.CUSTOM_CODE     
                                            
        WHERE A.COMP_CODE      = #{S_COMP_CODE}
          AND A.DIV_CODE       = #{DIV_CODE}
          <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
          AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}
          </if>
          <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)"> 
          AND A.ORDER_NUM   LIKE #{ORDER_NUM} + '%'   
          </if>                       
          <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)"> 
          AND A.ORDER_NUM LIKE #{TXT_SEARCH} + '%'
          </if>
          
        <if test="RDO == &quot;1&quot;">
               ORDER BY 2 DESC
        </if>
        
          <if test="RDO == &quot;2&quot;">
              ORDER BY 3 DESC
        </if>  
       
    </select>
    
    <select id="popupServiceImpl.TaxBillSearchPopup" parameterType="Map" resultType="rMap">
            /* ssa560ukrv.Cssa560ukrv[fnStb110QPop] Query02 */
            /*WEBCASH용*/
            DECLARE  @COMP_CODE        NVARCHAR(08)                   /* 법인 */
                   , @SALE_DIV_CODE    NVARCHAR(08)                   /* 매출사업장 */
                   , @CUSTOM_CODE      NVARCHAR(08)                   /* 거래처코드 */
                   , @CUSTOM_NAME      NVARCHAR(40)                   /* 거래처명 */
                   , @DATE_FR          NVARCHAR(08)                   /* 계산서일(FROM) */
                   , @DATE_TO          NVARCHAR(08)                   /* 계산서일(TO) */
                   , @PUB_NUM          NVARCHAR(20)                   /* 계산서번호 */
                   , @USER_ID          NVARCHAR(10)                   /* 사용자 */
                   , @UPDATE_REASON    NVARCHAR(02)                   /* 수정사유 */
                   , @INFO             NVARCHAR(200)                  /* 추가 수정발행 정보 */
            
              SET  @COMP_CODE      = #{S_COMP_CODE}
              SET  @SALE_DIV_CODE  = #{SALE_DIV_CODE}
              SET  @CUSTOM_CODE    = #{CUSTOM_CODE}
              SET  @CUSTOM_NAME    = #{CUSTOM_NAME}
              SET  @DATE_FR        = #{DATE_FR}
              SET  @DATE_TO        = #{DATE_TO}
              SET  @PUB_NUM        = #{PUB_NUM}
              SET  @USER_ID        = #{S_USER_ID}
              SET  @UPDATE_REASON  = #{UPDATE_REASON}
              SET  @INFO           = '수정발행 진행중인 계산서가 존재합니다.'
            
            DECLARE @REF_ITEM  CHAR(1)
            
            SELECT TOP 1 @REF_ITEM = REF_ITEM
            FROM BSA300T
            WHERE USER_ID = @USER_ID
            
            SELECT 
                   A.DIV_CODE                                                           /* 신고사업장 */
                  , A.CUSTOM_CODE                                                       /* 매출처 */
                  , CASE  @REF_ITEM WHEN '0'  THEN M1.CUSTOM_NAME
                                        WHEN  '1' THEN M1.CUSTOM_NAME1
                                        WHEN  '2' THEN M1.CUSTOM_NAME2
                                        ELSE M1.CUSTOM_NAME END AS CUSTOM_NAME          /* 매출처명 */
                  , A.PUB_NUM                                                           /* 계산서번호 */
                  , A.BILL_TYPE                                                         /* 계산서유형 */
                  , A.BUSI_TYPE
                  , A.PROOF_KIND
                  , M2.CODE_NAME AS  BILL_TYPE_NM                                       /* 계산서유형명 */
                  , unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) AS BILL_DATE    /* 계산서 발행일 */
                  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_FR_DATE) + ' ~ ' 
                      +  uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_TO_DATE) AS PUB_DATE /* 매출기간 */
                  , A.SALE_DIV_CODE                                                     /* 매출사업장 */
                  , A.PROJECT_NO                                                        /* 관리번호 */
                  , (CASE WHEN A.EX_DATE IS NULL THEN 'N' ELSE 'Y' END) AS EX_YN        /* 기표여부 */
                  , CASE  @REF_ITEM WHEN '0'  THEN M3.CUSTOM_NAME
                                        WHEN  '1' THEN M3.CUSTOM_NAME1
                                        WHEN  '2' THEN M3.CUSTOM_NAME2
                                        ELSE M3.CUSTOM_NAME END AS COLET_CUST_NM        /* 수금처 */
                  , NVL(M1.TAX_CALC_TYPE, '2') AS TAX_CALC_TYPE                      /* 세액계산방법 */
                  , NVL(M1.COLLECT_DAY , '') AS COLLECT_DAY                          /* 수금일 */
                  , NVL(M1.COMPANY_NUM , '') AS COMPANY_NUM                          /* 사업자번호 */
                  , NVL(M1.TOP_NAME , '') AS TOP_NAME                                /* 대표자명 */
                  , NVL(M1.ADDR1 , '') AS ADDR1                                      /* 주소1 */
                  , NVL(M1.ADDR2 , '') AS ADDR2                                      /* 주소2 */
                  , NVL(M1.COMP_TYPE , '') AS COMP_TYPE                              /* 업태 */
                  , NVL(M1.COMP_CLASS , '') AS COMP_CLASS                            /* 업종 */
                  , NVL(M1.WON_CALC_BAS, '3')  AS WON_CALC_BAS                       /* 원미만계산 */
                  , NVL(M1.COLLECT_CARE, '2')  AS COLLECT_CARE                       /* 미수관리방법 */
                  , NVL(M1.COLLECTOR_CP, '') AS  COLLECTOR_CP                        /* 수금거래처코드 */
                  , CASE R1.SUB_CODE WHEN '01'  THEN A.BILL_DATE
                                     WHEN '04'  THEN A.BILL_DATE
                                     WHEN '05'  THEN A.BILL_DATE
                                     WHEN '06'  THEN A.BILL_DATE
                                     WHEN '02'  THEN CONVERT(CHAR(8), NOW(), 112)
                                     WHEN '03'  THEN CONVERT(CHAR(8), NOW(), 112)  END AS REG_DATE /* 작성일 */
                  , CASE WHEN NVL(R1.REF_CODE1,'') !='Y' THEN R1.REF_CODE2
                              ELSE  ( CASE R1.SUB_CODE WHEN '01'  THEN R1.REF_CODE2
                                                       WHEN '02'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) + '(' + R1.REF_CODE2 + ')'
                                                       WHEN '03'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE) + '(' + R1.REF_CODE2 + ')'
                                                       WHEN '04'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, CONVERT(CHAR(8), NOW(), 112)) + '(' + R1.REF_CODE2 + ')'
                                                       WHEN '05'  THEN unilite.fnGetUserDateComp(A.COMP_CODE, CONVERT(CHAR(8), NOW(), 112)) + '(' + R1.REF_CODE2 + ')' 
                                                       WHEN '06'  THEN R1.REF_CODE2 + '(' + A.BEFORE_PUB_NUM + ')' 
                                       END)
                               END AS REG_REMARK  /* 비고 */
                  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_FR_DATE) AS PUB_FR_DATE     /* 매출기간(FROM) */
                  , uniLITE.fnGetUserDateComp(A.COMP_CODE,A.PUB_TO_DATE) AS PUB_TO_DATE     /* 매출기간(TO) */
                  , A.ORIGINAL_PUB_NUM AS ORIGINAL_PUB_NUM                                  /* 원본 세금계산서 */
                  , A.SALE_AMT_O                                                               /* 금액  */
                  , A.TAX_AMT_O                                                                /* 세액  */
                  , A.SALE_AMT_O + A.TAX_AMT_O AS SALE_TOT_AMT                                 /* 합계금액 */
                  , unilite.fnGetUserDateComp(A.COMP_CODE, A.RECEIPT_PLAN_DATE) AS RECEIPT_PLAN_DATE/* 수금예정일 */
                  , CASE WHEN D.STAT_CODE = '0' THEN @INFO ELSE '' END  AS INFO                     /* 수정발행정보 */
                  , NVL(A.SALE_PRSN, '') AS SALE_PRSN                                            /* 영업담당 */
                  , NVL(A.ISSU_ID, '') AS ISSU_ID                                                /* 국세청승인번호 */
                  , A.PRSN_NAME
                  , A.PRSN_EMAIL
                  , A.PRSN_PHONE
                  , A.PRSN_HANDPHONE
                  , A.SMS_CHECK
                  , A.REMARK
                  , A.BILL_SEND_YN
                  , A.ERR_MSG
                  , A.BILL_PUBLISH_TYPE
                  , A.BROK_CUSTOM_CODE
                  , A.BROK_PRSN_NAME
                  , A.BROK_PRSN_EMAIL
                  , A.BROK_PRSN_PHONE
                  , A.INPUT_PATH
                  ---20170330 추가
                  , A.SEND_NAME     
                  , A.SEND_EMAIL    
                  , A.PRSN_NAME     
                  , A.PRSN_EMAIL    
                  , A.PRSN_PHONE    
                  , A.PRSN_HANDPHONE
                  , A.SMS_CHECK     

            FROM  ${TABLE_NAME}  A  
                       INNER JOIN  BOR120T  B    ON  B.COMP_CODE = A.COMP_CODE
                                                             AND B.DIV_CODE = A.DIV_CODE
                       INNER JOIN  (
                                        SELECT COMP_CODE
                                               , DIV_CODE
                                               , ORIGINAL_PUB_NUM
                                               , RIGHT(MAX(CASE WHEN NVL(A.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END + PUB_NUM),
                                                   LEN(MAX(CASE WHEN NVL(A.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END + PUB_NUM)) -1)   AS PUB_NUM
                                               , MIN(CASE WHEN NVL(A.STAT_CODE,'') != '00' THEN '0' ELSE 'Z' END)  AS STAT_CODE
                                        FROM ${TABLE_NAME}  A  
                                        WHERE A.COMP_CODE = @COMP_CODE
                                              AND (( A.SALE_DIV_CODE = @SALE_DIV_CODE AND @SALE_DIV_CODE != '') OR (@SALE_DIV_CODE = ''))
                                              AND (( A.CUSTOM_CODE = @CUSTOM_CODE  AND @CUSTOM_CODE != '') OR (@CUSTOM_CODE = ''))
                                              AND A.BILL_DATE &gt;= @DATE_FR
                                              AND (( A.BILL_DATE &lt;= @DATE_TO AND @DATE_TO != '') OR (@DATE_TO = '')) 
                                              AND (( A.PUB_NUM = @PUB_NUM AND @PUB_NUM !='') OR (@PUB_NUM = ''))
                                              AND A.PLUS_MINUS_TYPE = '+' 
                                        GROUP BY COMP_CODE, DIV_CODE, ORIGINAL_PUB_NUM
                                    ) D  ON  D.COMP_CODE = A.COMP_CODE
                                         AND D.DIV_CODE = A.DIV_CODE
                                         AND D.PUB_NUM  = A.PUB_NUM
                       INNER JOIN  BCM100T  M1   ON  M1.COMP_CODE =  A.COMP_CODE
                                                             AND M1.CUSTOM_CODE = A.CUSTOM_CODE
                       LEFT  JOIN  BSA100T  M2   ON  M2.COMP_CODE = A.COMP_CODE
                                                             AND M2.MAIN_CODE = 'A022'
                                                             AND M2.SUB_CODE = A.BILL_TYPE
                       LEFT JOIN  BCM100T  M3   ON  M3.COMP_CODE =  A.COMP_CODE
                                                             AND M3.CUSTOM_CODE = A.COLET_CUST_CD
                       CROSS JOIN  BSA100T R1  /* 국세청 수정사유 처리 */
            WHERE A.COMP_CODE = @COMP_CODE
                AND (( A.SALE_DIV_CODE = @SALE_DIV_CODE AND @SALE_DIV_CODE != '') OR (@SALE_DIV_CODE = ''))
                AND (( A.CUSTOM_CODE = @CUSTOM_CODE  AND @CUSTOM_CODE != '') OR (@CUSTOM_CODE = ''))
                AND ((CASE  @REF_ITEM WHEN '0'  THEN M1.CUSTOM_NAME
                                        WHEN  '1' THEN M1.CUSTOM_NAME1
                                        WHEN  '2' THEN M1.CUSTOM_NAME2
                                        ELSE M1.CUSTOM_NAME END = @CUSTOM_NAME AND  @CUSTOM_NAME != '') OR (@CUSTOM_NAME = ''))
                AND A.BILL_DATE &gt;= @DATE_FR
                AND (( A.BILL_DATE &lt;= @DATE_TO AND @DATE_TO != '') OR (@DATE_TO = '')) 
                AND (( A.PUB_NUM = @PUB_NUM AND @PUB_NUM !='') OR (@PUB_NUM = ''))
                AND A.BILL_SEND_YN ='Y'
                AND A.STAT_CODE = '00' /* 국세청정상 */
                AND A.PLUS_MINUS_TYPE = '+' 
                AND R1.COMP_CODE = @COMP_CODE
                AND R1.MAIN_CODE = 'S095'
                AND R1.SUB_CODE = @UPDATE_REASON
            ORDER BY B.DIV_NAME, A.PUB_NUM
    </select>
    
    <select id="popupServiceImpl.mechanic" parameterType="Map" resultType="rMap">
        /*popupServiceImpl.mechanic*/
        SELECT A.MECHANIC_CODE,
               H.NAME AS MECHANIC_NAME,
               
               H.JOIN_DATE,    
               H.RETR_DATE,
               H.KOR_ADDR,    
               H.TELEPHON,          
               H.PHONE_NO
          FROM GME100T A
          LEFT JOIN HUM100T H ON A.COMP_CODE = H.COMP_CODE
                             AND A.MECHANIC_CODE = H.PERSON_NUMB          
                                     
         WHERE A.COMP_CODE=#{S_COMP_CODE}
           AND A.DIV_CODE=#{DIV_CODE}
           AND H.RETR_DATE = '00000000'
           <if test="@foren.Ognl@isNotEmpty(MECHANIC_CODE)">     
                   <if test="USELIKE != false">
                   AND A.MECHANIC_CODE LIKE '%' + #{MECHANIC_CODE} + '%'
                   </if>
                   <if test="USELIKE == false">
                       AND A.MECHANIC_CODE = #{MECHANIC_CODE}     
                   </if>
           </if>
           <if test="@foren.Ognl@isNotEmpty(MECHANIC_NAME)">     
                   <if test="USELIKE != false">
                   AND H.NAME LIKE '%' + #{MECHANIC_NAME} + '%'  
                   </if>  
                   <if test="USELIKE == false">
                       AND H.NAME = #{MECHANIC_NAME}     
                   </if>
           </if>
           <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                   
                   <if test="USELIKE != false">
                   AND (A.MECHANIC_CODE LIKE '%' + #{TXT_SEARCH} + '%'                            
                    OR H.NAME LIKE '%' + #{TXT_SEARCH} + '%' ) 
                   </if>  
                   <if test="USELIKE == false">
                       AND (A.MECHANIC_CODE = #{TXT_SEARCH}                            
                    OR H.NAME = #{TXT_SEARCH} ) 
                   </if>
           </if>                                              
         ORDER BY H.NAME         
    </select>    
    <select id="popupServiceImpl.getBomCopy" parameterType="Map" resultType="rMap">
        /* uniLITE5Popup.CPopup[getBomCopy] Query01 */
        BEGIN
            DECLARE    @COMP_CODE                  NVARCHAR(08)             /* (필수) 법인코드  */
                     , @USER_ID                    NVARCHAR(10)             /* (필수) 사용자명  */
                     , @DIV_CODE                   NVARCHAR(08)             /* (필수) 사업장코드  */
                     , @ITEM_CODE                  NVARCHAR(20)             /* (선택) 모품목코드  */
        
            SET @COMP_CODE   = #{S_COMP_CODE}
            SET @USER_ID     = #{S_USER_ID}
            SET @DIV_CODE    = #{DIV_CODE}
            SET @ITEM_CODE   = #{PROD_ITEM_CODE}
        
            /* 로그인 사용자 언어 */
            DECLARE    @RefItem                    NVARCHAR(01)             /* 사용자 품목명 참조 유형  */
        
            SELECT TOP 1 @RefItem = ref_item
            FROM   BSA300T 
            WHERE  comp_code = @COMP_CODE
            AND    user_id   = @USER_ID
        
            SET @RefItem = NVL(@RefItem, '0')
        
            /* 자품목 목록 조회 */
            SELECT CAST('' AS BIT)  AS GUBUN
                 , A.COMP_CODE
                 , A.DIV_CODE
                 , A.SEQ
                 , A.PROD_ITEM_CODE
                 , A.CHILD_ITEM_CODE
                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                        ELSE                     C1.ITEM_NAME
                   END              AS ITEM_NAME
                 , C1.SPEC
                 , C1.STOCK_UNIT
                 , C2.ITEM_ACCOUNT
                 , A.PATH_CODE
                 , NVL(A.UNIT_Q, 0)      AS UNIT_Q
                 , NVL(A.PROD_UNIT_Q, 0) AS PROD_UNIT_Q
                 , NVL(A.LOSS_RATE, 0)   AS LOSS_RATE
                 , A.USE_YN
                 , A.BOM_YN
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.START_DATE) AS START_DATE
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE
                 , NVL(A.UNIT_P1, 0)     AS UNIT_P1
                 , NVL(A.UNIT_P2, 0)     AS UNIT_P2
                 , NVL(A.UNIT_P3, 0)     AS UNIT_P3
                 , NVL(A.MAN_HOUR, 0)    AS MAN_HOUR
                 , A.REMARK
                 , A.GRANT_TYPE
            FROM              BPR500T A  
                   LEFT  JOIN BPR100T C1  ON C1.COMP_CODE = A.COMP_CODE
                                                      AND C1.ITEM_CODE = A.CHILD_ITEM_CODE
                   LEFT  JOIN BPR200T C2  ON C2.COMP_CODE = A.COMP_CODE
                                                      AND C2.DIV_CODE  = A.DIV_CODE
                                                      AND C2.ITEM_CODE = A.CHILD_ITEM_CODE
            WHERE  A.COMP_CODE        = @COMP_CODE
            AND    A.DIV_CODE         = @DIV_CODE
            AND    (@ITEM_CODE IS NULL OR A.PROD_ITEM_CODE   = @ITEM_CODE)
            AND    A.CHILD_ITEM_CODE != '$'
            ORDER BY A.SEQ
        END
        
    </select>
    
    <select id="popupServiceImpl.custCreditCard" parameterType="Map" resultType="rMap">
        SELECT A.CREDIT_CODE        AS CUST_CREDIT_CODE
              , A.CREDIT_NAME        AS CUST_CREDIT_NAME
                , A.CARD_COMP_CODE 
              , B.CODE_NAME      
              , A.FEE_RATE       
      FROM           BCM200T A         
          INNER JOIN BSA100T B  ON B.COMP_CODE = A.COMP_CODE      
                                            AND B.MAIN_CODE = N'A028'           
                                            AND B.SUB_CODE  = A.CARD_COMP_CODE  
     WHERE A.COMP_CODE        = #{S_COMP_CODE}
     <if test="RDO == 1">
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND A.CREDIT_CODE   LIKE #{TXT_SEARCH} + '%'
         </if>
     </if>
     <if test="RDO == 2">
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND A.CREDIT_NAME   LIKE #{TXT_SEARCH} + '%'
         </if>
     </if>
     <if test="@foren.Ognl@isNotEmpty(CUST_CREDIT_CODE)">
         AND A.CREDIT_CODE   LIKE #{CUST_CREDIT_CODE} + '%'
     </if>
     
     <if test="@foren.Ognl@isNotEmpty(CUST_CREDIT_NAME)">
         AND A.CREDIT_NAME   LIKE #{CUST_CREDIT_NAME} + '%'
     </if>
     
     <if test="RDO != 2">       
         ORDER BY A.CREDIT_CODE ASC
     </if>
     <if test="RDO == 2"> 
         ORDER BY A.CREDIT_NAME ASC
     </if>
    </select>
    
    <select id="popupServiceImpl.creditCard" parameterType="Map" resultType="rMap">
      SELECT SUB_CODE  AS CREDIT_CODE  
           , CODE_NAME AS CREDIT_NAME
        FROM BSA100T  
       WHERE COMP_CODE   = #{S_COMP_CODE}
         AND MAIN_CODE   = N'A028' 
         AND SUB_CODE   != N'$'                  
         AND USE_YN      = N'Y'                     
         AND SUB_CODE LIKE N'%'         
    
     <if test="RDO == 1">
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND SUB_CODE   LIKE #{TXT_SEARCH} + '%'
         </if>
     </if>
     <if test="RDO == 2">
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND CODE_NAME   LIKE #{TXT_SEARCH} + '%'
         </if>
     </if>
     <if test="@foren.Ognl@isNotEmpty(CREDIT_CODE)">
         AND SUB_CODE   LIKE #{CREDIT_CODE} + '%'
     </if>
     
     <if test="@foren.Ognl@isNotEmpty(CREDIT_NAME)">
         AND CODE_NAME   LIKE #{CREDIT_NAME} + '%'
     </if>
     
     <if test="RDO != 2">       
         ORDER BY SUB_CODE ASC
     </if>
     <if test="RDO == 2"> 
         ORDER BY CODE_NAME ASC
     </if>
    </select>
    
    
    <select id="popupServiceImpl.binPopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
        
                SELECT 
                    COMP_CODE,
                    DIV_CODE,
                    DOC_GUBUN,
                    DOC_COL,
                    BIN_NUM,
                    DOC_NAME,
                    DOC_NAME_EN
                 FROM BPR210T 
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND DIV_CODE = #{DIV_CODE}
                 <if test="GUBUN == &quot;DOC&quot;">
                  AND GUBUN = 'DOC'        
                 </if>
                 <if test="GUBUN == &quot;FAN&quot;">
                  AND GUBUN = 'FAN'        
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                   AND (BIN_NUM LIKE #{TXT_SEARCH} + '%'                             
                   OR  DOC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 </if> 
                 <if test="@foren.Ognl@isNotEmpty(BIN_NUM)">
                  AND BIN_NUM LIKE #{BIN_NUM} + '%'
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(DOC_NAME)">
                  AND DOC_NAME LIKE #{DOC_NAME} + '%'
                 </if>
        
        SET ARITHABORT OFF
        SET NOCOUNT OFF
    END    
    </select>
    
    <select id="popupServiceImpl.posPopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
        
                SELECT 
                    A.DIV_CODE
                  , A.POS_NO
                  , A.POS_NAME
                  , A.WH_CODE   AS WH_NAME
                  , A.WH_CODE
                  , A.DEPT_CODE
                  , B.TREE_NAME AS DEPT_NAME
                  , A.LOCATION 
                  
                  FROM       BSA240T A 
                  LEFT  JOIN BSA210T B  ON B.COMP_CODE    = A.COMP_CODE
                                                      AND B.TYPE_LEVEL   = A.DIV_CODE
                                                    AND B.TREE_CODE    = A.DEPT_CODE

                WHERE A.COMP_CODE = #{S_COMP_CODE}
                  AND A.DIV_CODE = #{DIV_CODE}
                 <if test="GUBUN == &quot;DOC&quot;">
                  AND GUBUN = 'DOC'        
                 </if>
                 <if test="GUBUN == &quot;FAN&quot;">
                  AND GUBUN = 'FAN'        
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                   AND (BIN_NUM LIKE #{TXT_SEARCH} + '%'                             
                   OR  DOC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 </if> 
                 <if test="@foren.Ognl@isNotEmpty(BIN_NUM)">
                  AND BIN_NUM LIKE #{BIN_NUM} + '%'
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(DOC_NAME)">
                  AND DOC_NAME LIKE #{DOC_NAME} + '%'
                 </if>
        
        SET ARITHABORT OFF
        SET NOCOUNT OFF
    END    
    </select>
    
    <select id="popupServiceImpl.accntDivCodePopup" parameterType="Map" resultType="rMap">    
        --uniLITE5Popup.CPopup[getDiviPopup] Query01
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            SELECT NVL(DIV_CODE     , '')                AS ACCNT_DIV_CODE     
                 , NVL(DIV_NAME     , '')                AS ACCNT_DIV_NAME     
                 , NVL(DIV_FULL_NAME, '')                AS DIV_FULL_NAME
                 , NVL(COMPANY_NUM  , '')                AS COMPANY_NUM  
                 , NVL(REPRE_NAME   , '')                AS REPRE_NAME   
                 , uniLITE.fnCipherDecrypt(REPRE_NO, 'R')   AS REPRE_NO     
                 , NVL(COMP_CLASS   , '')                AS COMP_CLASS   
                 , NVL(COMP_TYPE    , '')                AS COMP_TYPE    
                 , NVL(ZIP_CODE     , '')                AS ZIP_CODE     
                 , NVL(ADDR         , '')                AS ADDR         
                 , NVL(TELEPHON     , '')                AS TELEPHON     
                 , NVL(FAX_NUM      , '')                AS FAX_NUM      
                 , NVL(SAFFER_TAX   , '')                AS SAFFER_TAX   
                 , NVL(SAFFER_TAX_NM, '')                AS SAFFER_TAX_NM
                 , NVL(BILL_DIV_CODE, '')                AS BILL_DIV_CODE
                 , NVL(TAX_NAME     , '')                AS TAX_NAME     
                 , NVL(TAX_NUM      , '')                AS TAX_NUM      
                 , NVL(TAX_TEL      , '')                AS TAX_TEL      
                 , NVL(HANDPHONE    , '')                AS HANDPHONE    
              FROM BOR120T 
             WHERE COMP_CODE    = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">                    
                        AND     DIV_CODE    LIKE + '%' + #{TXT_SEARCH} + '%'  
                        ORDER BY DIV_CODE ASC                    
                    </if>
                    <if test="RDO == &quot;2&quot;">                    
                        AND     DIV_NAME    LIKE + '%' + #{TXT_SEARCH} + '%'  
                        ORDER BY DIV_NAME ASC                    
                    </if>
                </if>
                <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">
                        ORDER BY DIV_CODE ASC    
                    </if>
                    <if test="RDO == &quot;2&quot;">
                        ORDER BY DIV_NAME ASC    
                    </if>                    
                </if>                
            </if>
            
            <if test="@foren.Ognl@isEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
                    AND     DIV_CODE     = #{ACCNT_DIV_CODE}  
                </if>
                <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_NAME)">
                    AND     DIV_NAME         = #{ACCNT_DIV_NAME}          
                </if>    
            </if> 
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.accntsPopup1" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.accntsPopup1 */
    SELECT NVL(A.PROD_ACCNT, 0 ) PROD_ACCNT   
         , NVL(B.REF_CODE2 , '') USE_DEPT     
      FROM           ABA100T AS A 
           LEFT JOIN BSA100T AS B  ON B.COMP_CODE = A.COMP_CODE
                                  AND B.MAIN_CODE = 'A009'
                                  AND B.SUB_CODE  = NVL(#{CHARGE_CODE}, '')
     WHERE 1=1
    <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
      AND A.COMP_CODE      = #{COMP_CODE}
    </if>
    <if test="@foren.Ognl@isEmpty(COMP_CODE)">
      AND A.COMP_CODE      = #{S_COMP_CODE}
    </if>
       AND A.BASE_CODE = '01'
    </select>
    
    <select id="popupServiceImpl.accntsPopup2" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.accntsPopup2 */
    SELECT  NVL(A.ACCNT       ,'')                           AS ACCNT_CODE
          , CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                 WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
            END                                              AS ACCNT_CD
          , NVL(B.ACCNT_NAME  ,'')                           AS ACCNT_CD_NAME
          , NVL(A.ACCNT_NAME  ,'')                           AS ACCNT_NAME
          , NVL(A.AC_FULL_NAME,'')                           AS AC_FULL_NAME
          , A.JAN_DIVI
          , A.PEND_YN

    FROM                ABA400T   A  
            LEFT  JOIN  (
                        SELECT  COMP_CODE
                              , ACCNT
                              , ACCNT_NAME
                        FROM    ABA400T 
                        )         B               ON B.COMP_CODE    = A.COMP_CODE
                                                 AND B.ACCNT        = (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                                                                            WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
                                                                       END)
         <if test="ADD_QUERY2 == &quot;Y&quot;">
            INNER JOIN TB_ES_OBJM_ACCT      C  ON C.COMP_CODE = A.COMP_CODE       --조인스 관련
                                                          AND C.ACCT_CODE = A.ACCNT
         </if>                                                             
                                                                       
              
    WHERE    1=1
    <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
      AND A.COMP_CODE      = #{COMP_CODE}
    </if>
    <if test="@foren.Ognl@isEmpty(COMP_CODE)">
      AND A.COMP_CODE      = #{S_COMP_CODE}
    </if>
      AND   A.ACCNT != '99999'
    <if test="PROD_ACCNT == &quot;0&quot;">
      AND     A.ACCNT_DIVI    != '5'
    </if>
    <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
        AND ${ADD_QUERY}
    </if>
    <if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
        <if test="@foren.Ognl@isNotEmpty(USE_DEPT)">
            <if test="USE_DEPT != &quot;1&quot;">
                AND     A.AUTHO_DIVI     = #{USE_DEPT}
            </if>    
        </if>
    </if>            
    
    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'                           
         OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
        ORDER BY A.ACCNT
    </if>
    <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
        AND (A.ACCNT LIKE #{ACCNT_CODE} + '%'                             
         OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_CODE} + '%' )                
        </if>
        <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
        AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'                             
         OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )            
        </if>                
    </if>    
    </select>
    
    <select id="popupServiceImpl.foreignAccntPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[foreignAccntPopup] 
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON     
            
            SELECT NVL(A.ACCNT       ,'')                           AS ACCNT
                 , NVL(A.ACCNT_NAME  ,'')                           AS ACCNT_NAME
              FROM ABA400T   A  
             WHERE A.COMP_CODE      = #{S_COMP_CODE}
               AND A.FOR_YN            = 'Y'
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'                           
                OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             ORDER BY A.ACCNT
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ACCNT)">
               AND (A.ACCNT LIKE #{ACCNT} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
               AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )            
                </if>                
            </if>    
        SET ARITHABORT OFF
        SET NOCOUNT OFF
        END    
    </select>
    
    <select id="popupServiceImpl.exchangeAccntPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[foreignAccntPopup] 
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON     
            
            SELECT NVL(A.ACCNT       ,'')                           AS ACCNT
                 , NVL(A.ACCNT_NAME  ,'')                           AS ACCNT_NAME
              FROM ABA400T   A  
             WHERE A.COMP_CODE      = #{S_COMP_CODE}
               AND A.GROUP_YN        = 'N'
               AND A.SLIP_SW        = 'Y'
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'                           
                OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             ORDER BY A.ACCNT
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ACCNT)">
               AND (A.ACCNT LIKE #{ACCNT} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
               AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )            
                </if>                
            </if>    
        SET ARITHABORT OFF
        SET NOCOUNT OFF
    END    
    </select>
    
    <select id="popupServiceImpl.accntsPopupWithAcCode" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[fnGetAccntCode] Query2 
        DECLARE  @BudgProBase    NVARCHAR(01)
        
        --회계업무설정에서 사용하는 예산프로세스 가져오기
        SELECT @BudgProBase = BUDG_PRO_BASE
          FROM ABA100T 
         WHERE COMP_CODE = #{S_COMP_CODE}
        
        SET @BudgProBase = NVL(@BudgProBase, '1')
        
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON     
            
            
            SELECT  NVL(A.ACCNT       ,'')                           AS ACCNT_CODE
                     ,CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                             WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
                      END                                                 AS ACCNT_CD
                     ,NVL(B.ACCNT_NAME  ,'')                           AS ACCNT_CD_NAME
                     ,NVL(A.ACCNT_NAME  ,'')                           AS ACCNT_NAME
                     ,NVL(A.AC_FULL_NAME,'')                           AS AC_FULL_NAME
                     ,C.AC_CODE1
                     ,C.AC_CODE2
                     ,C.AC_CODE3
                     ,C.AC_CODE4
                     ,C.AC_CODE5
                     ,C.AC_CODE6
                     ,C.AC_NAME1
                     ,C.AC_NAME2
                     ,C.AC_NAME3
                     ,C.AC_NAME4
                     ,C.AC_NAME5
                     ,C.AC_NAME6
                     ,C.DR_CTL1
                     ,C.DR_CTL2
                     ,C.DR_CTL3
                     ,C.DR_CTL4
                     ,C.DR_CTL5
                     ,C.DR_CTL6
                     ,C.CR_CTL1
                     ,C.CR_CTL2
                     ,C.CR_CTL3
                     ,C.CR_CTL4
                     ,C.CR_CTL5
                     ,C.CR_CTL6
                     ,C.BOOK_CODE1
                     ,C.BOOK_CODE2
                     ,C.BOOK_NAME1
                     ,C.BOOK_NAME2
                     ,C.ACCNT_SPEC
                     ,C.SPEC_DIVI
                     ,C.PROFIT_DIVI
                     ,C.PEND_YN
                     ,C.PEND_CODE
                     ,C.BUDG_YN
                     ,C.BUDGCTL_YN
                     ,C.DR_FUND
                     ,C.CR_FUND
                     ,C.COST_DIVI
                     ,C.FOR_YN
                     ,C.ACCNT_DIVI
                     ,C.JAN_DIVI
                     ,C.SYSTEM_YN
                     ,C.AC_TYPE1
                     ,C.AC_TYPE2
                     ,C.AC_TYPE3
                     ,C.AC_TYPE4
                     ,C.AC_TYPE5
                     ,C.AC_TYPE6
                     ,C.AC_LEN1
                     ,C.AC_LEN2
                     ,C.AC_LEN3
                     ,C.AC_LEN4
                     ,C.AC_LEN5
                     ,C.AC_LEN6
                     ,C.AC_POPUP1
                     ,C.AC_POPUP2
                     ,C.AC_POPUP3
                     ,C.AC_POPUP4
                     ,C.AC_POPUP5
                     ,C.AC_POPUP6
                     ,C.PEND_NAME
                     ,C.PEND_TYPE
                     ,C.PEND_LEN
                     ,C.PEND_POPUP
                     ,C.AC_FORMAT1
                     ,C.AC_FORMAT2
                     ,C.AC_FORMAT3
                     ,C.AC_FORMAT4
                     ,C.AC_FORMAT5
                     ,C.AC_FORMAT6
            FROM                ABA400T   A  
                    LEFT  JOIN  (
                                SELECT  COMP_CODE
                                      , ACCNT
                                      , ACCNT_NAME
                                FROM    ABA400T 
                                )         B               ON B.COMP_CODE    = A.COMP_CODE
                                                         AND B.ACCNT        = (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                                                                                    WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
                                                                               END)
                    LEFT JOIN (
                                SELECT ACCNT
                                     , NVL(ACCNT_NAME  , '')     AS ACCNT_NAME
                                     , NVL(AC_FULL_NAME, '')     AS AC_FULL_NAME
                                     , NVL(ACCNT_NAME2 , '')     AS ACCNT_NAME2
                                     , NVL(ACCNT_NAME3 , '')     AS ACCNT_NAME3
                                     , NVL(AC_CODE1    , '')     AS AC_CODE1
                                     , NVL(AC_CODE2    , '')     AS AC_CODE2
                                     , NVL(AC_CODE3    , '')     AS AC_CODE3
                                     , NVL(AC_CODE4    , '')     AS AC_CODE4
                                     , NVL(AC_CODE5    , '')     AS AC_CODE5
                                     , NVL(AC_CODE6    , '')     AS AC_CODE6
                                     , NVL(C1.AC_NAME  , '')     AS AC_NAME1
                                     , NVL(C2.AC_NAME  , '')     AS AC_NAME2
                                     , NVL(C3.AC_NAME  , '')     AS AC_NAME3
                                     , NVL(C4.AC_NAME  , '')     AS AC_NAME4
                                     , NVL(C5.AC_NAME  , '')     AS AC_NAME5
                                     , NVL(C6.AC_NAME  , '')     AS AC_NAME6
                                     , NVL(DR_CTL1     ,'N')     AS DR_CTL1
                                     , NVL(DR_CTL2     ,'N')     AS DR_CTL2
                                     , NVL(DR_CTL3     ,'N')     AS DR_CTL3
                                     , NVL(DR_CTL4     ,'N')     AS DR_CTL4
                                     , NVL(DR_CTL5     ,'N')     AS DR_CTL5
                                     , NVL(DR_CTL6     ,'N')     AS DR_CTL6
                                     , NVL(CR_CTL1     ,'N')     AS CR_CTL1
                                     , NVL(CR_CTL2     ,'N')     AS CR_CTL2
                                     , NVL(CR_CTL3     ,'N')     AS CR_CTL3
                                     , NVL(CR_CTL4     ,'N')     AS CR_CTL4
                                     , NVL(CR_CTL5     ,'N')     AS CR_CTL5
                                     , NVL(CR_CTL6     ,'N')     AS CR_CTL6
                                     , NVL(BOOK_CODE1  , '')     AS BOOK_CODE1
                                     , NVL(BOOK_CODE2  , '')     AS BOOK_CODE2
                                     , NVL(D1.AC_NAME  , '')     AS BOOK_NAME1
                                     , NVL(D2.AC_NAME  , '')     AS BOOK_NAME2
                                     , NVL(ACCNT_SPEC  , '')     AS ACCNT_SPEC
                                     , NVL(SPEC_DIVI   , '')     AS SPEC_DIVI
                                     , NVL(PROFIT_DIVI , '')     AS PROFIT_DIVI
                                     , NVL(PEND_YN     ,'N')     AS PEND_YN
                                     , NVL(PEND_CODE   , '')     AS PEND_CODE
                                     , NVL(BUDG_YN     ,'N')     AS BUDG_YN
                                     , NVL(BUDGCTL_YN  ,'N')     AS BUDGCTL_YN
                                     , NVL(DR_FUND     , '')     AS DR_FUND
                                     , NVL(CR_FUND     , '')     AS CR_FUND
                                     , NVL(COST_DIVI   , '')     AS COST_DIVI
                                     , NVL(FOR_YN      ,'N')     AS FOR_YN
                                     , NVL(ACCNT_DIVI  , '')     AS ACCNT_DIVI
                                     , NVL(JAN_DIVI    , '')     AS JAN_DIVI
                                     , NVL(A.SYSTEM_YN ,'N')     AS SYSTEM_YN
                                     , NVL(C1.DT_TYPE  , '')     AS AC_TYPE1
                                     , NVL(C2.DT_TYPE  , '')     AS AC_TYPE2
                                     , NVL(C3.DT_TYPE  , '')     AS AC_TYPE3
                                     , NVL(C4.DT_TYPE  , '')     AS AC_TYPE4
                                     , NVL(C5.DT_TYPE  , '')     AS AC_TYPE5
                                     , NVL(C6.DT_TYPE  , '')     AS AC_TYPE6
                                     , NVL(C1.DT_LEN   , 0 )     AS AC_LEN1
                                     , NVL(C2.DT_LEN   , 0 )     AS AC_LEN2
                                     , NVL(C3.DT_LEN   , 0 )     AS AC_LEN3
                                     , NVL(C4.DT_LEN   , 0 )     AS AC_LEN4
                                     , NVL(C5.DT_LEN   , 0 )     AS AC_LEN5
                                     , NVL(C6.DT_LEN   , 0 )     AS AC_LEN6
                                     , CASE WHEN A.AC_CODE1 = 'A7' AND @BudgProBase = '1' 
                                            THEN 'N'
                                            ELSE NVL(C1.DT_POPUP,'N')
                                        END AC_POPUP1
                                     , CASE WHEN A.AC_CODE2 = 'A7' AND @BudgProBase = '1'
                                            THEN 'N'
                                            ELSE NVL(C2.DT_POPUP,'N')
                                        END AC_POPUP2
                                     , CASE WHEN A.AC_CODE3 = 'A7' AND @BudgProBase = '1'
                                            THEN 'N'
                                            ELSE NVL(C3.DT_POPUP,'N')
                                        END AC_POPUP3
                                     , CASE WHEN A.AC_CODE4 = 'A7' AND @BudgProBase = '1'
                                            THEN 'N'
                                            ELSE NVL(C4.DT_POPUP,'N')
                                        END AC_POPUP4
                                     , CASE WHEN A.AC_CODE5 = 'A7' AND @BudgProBase = '1'
                                            THEN 'N'
                                            ELSE NVL(C5.DT_POPUP,'N')
                                        END AC_POPUP5
                                     , CASE WHEN A.AC_CODE6 = 'A7' AND @BudgProBase = '1'
                                            THEN 'N'
                                            ELSE NVL(C6.DT_POPUP,'N')
                                        END AC_POPUP6
                                     , NVL(B.AC_NAME   , '')     AS PEND_NAME
                                     , NVL(B.DT_TYPE   , '')     AS PEND_TYPE
                                     , NVL(B.DT_LEN    ,'0')     AS PEND_LEN
                                     , NVL(B.DT_POPUP  ,'N')     AS PEND_POPUP
                                     , A.COMP_CODE
                                     ,  NVL(C1.DT_FMT  , 0 )     AS AC_FORMAT1
                                     ,  NVL(C2.DT_FMT  , 0 )     AS AC_FORMAT2
                                     ,  NVL(C3.DT_FMT  , 0 )     AS AC_FORMAT3
                                     ,  NVL(C4.DT_FMT  , 0 )     AS AC_FORMAT4
                                     ,  NVL(C5.DT_FMT  , 0 )     AS AC_FORMAT5
                                     ,  NVL(C6.DT_FMT  , 0 )     AS AC_FORMAT6
                                  FROM            ABA400T AS A  
                                       LEFT  JOIN ABA200T AS B   ON B.COMP_CODE  = A.COMP_CODE AND B.AC_CD  = A.PEND_CODE
                                
                                       LEFT  JOIN ABA200T AS C1  ON C1.COMP_CODE = A.COMP_CODE AND C1.AC_CD = A.AC_CODE1
                                       LEFT  JOIN ABA200T AS C2  ON C2.COMP_CODE = A.COMP_CODE AND C2.AC_CD = A.AC_CODE2
                                       LEFT  JOIN ABA200T AS C3  ON C3.COMP_CODE = A.COMP_CODE AND C3.AC_CD = A.AC_CODE3
                                       LEFT  JOIN ABA200T AS C4  ON C4.COMP_CODE = A.COMP_CODE AND C4.AC_CD = A.AC_CODE4
                                       LEFT  JOIN ABA200T AS C5  ON C5.COMP_CODE = A.COMP_CODE AND C5.AC_CD = A.AC_CODE5
                                       LEFT  JOIN ABA200T AS C6  ON C6.COMP_CODE = A.COMP_CODE AND C6.AC_CD = A.AC_CODE6
                                
                                       LEFT  JOIN ABA200T AS D1  ON D1.COMP_CODE = A.COMP_CODE AND D1.AC_CD = A.BOOK_CODE1
                                       LEFT  JOIN ABA200T AS D2  ON D2.COMP_CODE = A.COMP_CODE AND D2.AC_CD = A.BOOK_CODE2
                            )    C    ON  C.COMP_CODE = A.COMP_CODE
                                    AND C.ACCNT     = A.ACCNT
            WHERE   A.COMP_CODE      = #{S_COMP_CODE}
            <if test="PROD_ACCNT == &quot;0&quot;">
              AND     A.ACCNT_DIVI    != N'5'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
                AND ${ADD_QUERY}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
                <if test="@foren.Ognl@isNotEmpty(USE_DEPT)">
                    <if test="USE_DEPT != &quot;1&quot;">
                        AND     A.AUTHO_DIVI     = #{USE_DEPT}
                    </if>    
                </if>
            </if>            
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.ACCNT LIKE #{TXT_SEARCH}  + '%'                           
                 OR A.ACCNT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY A.ACCNT
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
                AND (A.ACCNT LIKE #{ACCNT_CODE} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
                AND (A.ACCNT LIKE #{ACCNT_NAME} + '%'                             
                 OR A.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%' )            
                </if>                
            </if>    
        SET ARITHABORT OFF
        SET NOCOUNT OFF
    END    
    </select>
    <select id="popupServiceImpl.managePopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [AC_CD, AC_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON                 
             
            SELECT A.AC_CD     AS    MANAGE_CODE
                 , A.AC_NAME   AS    MANAGE_NAME
                 , NVL((SELECT CODE_NAME          
                             FROM BSA100T       
                            WHERE COMP_CODE = A.COMP_CODE    
                              AND MAIN_CODE = N'A018' 
                              AND SUB_CODE  = NVL(A.DT_TYPE, 'A')), '')  AS DATA_TYPE
                 , NVL(DT_LEN, 0) AS DATA_LENGTH    
                 , NVL((SELECT CODE_NAME          
                             FROM BSA100T       
                            WHERE COMP_CODE = A.COMP_CODE    
                              AND MAIN_CODE = N'A004' 
                              AND SUB_CODE  = NVL(A.DT_POPUP, 'N')), '') AS POPUP_YN    
                 , A.DT_FMT        AS DATA_FORMAT                                           
                  --, A.POPUP_CODE
              FROM ABA200T A             
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
             
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.AC_CD LIKE #{TXT_SEARCH} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY A.AC_CD ASC
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(MANAGE_CODE)">
                AND (A.AC_CD LIKE #{MANAGE_CODE} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{MANAGE_CODE} + '%' )    
                </if>
                <if test="@foren.Ognl@isNotEmpty(MANAGE_NAME)">
                AND (A.AC_CD LIKE #{MANAGE_NAME} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{MANAGE_NAME} + '%' )       
                </if>    
                ORDER BY A.AC_CD ASC            
            </if>
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.userManagePopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [USER_AC_CD, USER_AC_NAME] ok
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON                 
             
            SELECT A.AC_CD     AS    USER_MANAGE_CODE
                 , A.AC_NAME   AS    USER_MANAGE_NAME
                 , NVL((SELECT CODE_NAME          
                             FROM BSA100T       
                            WHERE COMP_CODE = A.COMP_CODE    
                              AND MAIN_CODE = N'A018' 
                              AND SUB_CODE  = NVL(A.DT_TYPE, 'A')), '')  AS DATA_TYPE
                 , NVL(DT_LEN, 0) AS DATA_LENGTH    
                 , NVL((SELECT CODE_NAME          
                             FROM BSA100T       
                            WHERE COMP_CODE = A.COMP_CODE    
                              AND MAIN_CODE = N'A004' 
                              AND SUB_CODE  = NVL(A.DT_POPUP, 'N')), '') AS POPUP_YN
                 , NVL((SELECT CODE_NAME          
                             FROM BSA100T       
                            WHERE COMP_CODE = A.COMP_CODE  
                              AND MAIN_CODE = N'A004' 
                              AND SUB_CODE  = NVL(A.USE_YN, 'N')), '')   AS USE_YN
                  --, A.POPUP_CODE
              FROM ABA200T A             
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
               AND NVL(A.SYSTEM_YN, 'Y') != N'Y'
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.AC_CD LIKE #{TXT_SEARCH} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY A.AC_CD ASC
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(USER_MANAGE_CODE)">
                AND (A.AC_CD LIKE #{USER_MANAGE_CODE} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{USER_MANAGE_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(USER_MANAGE_NAME)">
                AND (A.AC_CD LIKE #{USER_MANAGE_NAME} + '%'                             
                 OR A.AC_NAME LIKE '%'+ #{USER_MANAGE_NAME} + '%' )        
                </if>                
            </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
        
        
    </select>
    
    <select id="popupServiceImpl.remarkPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [REMARK, REMARK_NM] 20070801 
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            SELECT A.REMARK_CD AS REMARK_CODE
                 , A.REMARK    AS REMARK_NAME
              FROM ABA700T A     
              <if test="@foren.Ognl@isNotEmpty(ACCNT)">         
              INNER JOIN  ABA710T B ON B.COMP_CODE = A.COMP_CODE
                                     AND B.REMARK_CD = A.REMARK_CD
                                     AND B.ACCNT    = #{ACCNT}
                                     <if test="@foren.Ognl@isNotEmpty(DR_CR)">      
                                     AND B.REMARK_CD = #{DR_CR}
                                     </if>
              </if>                       
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
             
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.REMARK_CD LIKE #{TXT_SEARCH} + '%'                             
                 OR A.REMARK LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY A.REMARK_CD ASC
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(REMARK_CODE)">
                AND (A.REMARK_CD LIKE #{REMARK_CODE} + '%'                             
                 OR A.REMARK LIKE '%'+ #{REMARK_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(REMARK_NAME)">
                AND (A.REMARK_CD LIKE #{REMARK_NAME} + '%'                             
                 OR A.REMARK LIKE '%'+ #{REMARK_NAME} + '%' )                
                </if>                
            </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.remarkDistributionPopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            --sbs170ukrv.Csbs170ukrv[fnSbs170QStd] Query01
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
            SELECT REMARK_TYPE                         
                 , REMARK_CD                           
                 , REMARK_NAME                         
                 , COMP_CODE                           
              FROM SBI100T                             
             WHERE COMP_CODE      = #{S_COMP_CODE}
               AND REMARK_TYPE    = #{REMARK_TYPE}
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND REMARK_CD   LIKE #{TXT_SEARCH} + '%' 
                OR REMARK_NAME '%'+ #{TXT_SEARCH} + '%' )
               </if>
          <if test="RDO != &quot;2&quot;">       
          ORDER BY REMARK_CD
          </if>
          <if test="RDO == &quot;2&quot;"> 
          ORDER BY REMARK_NAME
          </if>  
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.costPopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            SELECT ITEM_CODE AS COST_CODE
                 , ITEM_NAME AS COST_NAME
              FROM ABA900T           
             WHERE COMP_CODE    = #{S_COMP_CODE}    
                 
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (ITEM_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR ITEM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY ITEM_CODE ASC
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(COST_CODE)">
                AND (ITEM_CODE LIKE #{COST_CODE} + '%'                             
                 OR ITEM_NAME LIKE '%'+ #{COST_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(COST_NAME)">
                AND (ITEM_CODE LIKE #{COST_NAME} + '%'                             
                 OR ITEM_NAME LIKE '%'+ #{COST_NAME} + '%' )                
                </if>                
            </if>            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.accntPrsPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [CHARGE_CODE, CHARGE_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
             
            SELECT SUB_CODE  AS PRSN_CODE
                 , CODE_NAME AS PRSN_NAME 
                 , REF_CODE1  
              FROM BSA100T            
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'A009'                 
               AND SUB_CODE   != N'$' 
               AND USE_YN       = 'Y'             
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY SUB_CODE ASC
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
                AND (SUB_CODE LIKE #{PRSN_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PRSN_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
                AND (SUB_CODE LIKE #{PRSN_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PRSN_NAME} + '%' )    
                </if>                
            </if>
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.expensePopup" parameterType="Map" resultType="rMap">
        --ZfT_PopupZ [CHARGE_CODE,CHARGE_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT  CHARGE_CODE AS EXPENSE_CODE 
                  , CHARGE_NAME AS EXPENSE_NAME
                  , COST_DIV     
             FROM  TAA010T 
             WHERE COMP_CODE   = #{S_COMP_CODE} 
             <if test="@foren.Ognl@isNotEmpty(TRADE_DIV)">
               AND TRADE_DIV   = #{TRADE_DIV}  
             </if>
             <if test="@foren.Ognl@isNotEmpty(CHARGE_TYPE)">
               AND CHARGE_TYPE = #{CHARGE_TYPE}              
             </if>  
                        
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (CHARGE_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CHARGE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY CHARGE_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(EXPENSE_CODE)">
                AND (CHARGE_CODE LIKE #{EXPENSE_CODE} + '%'                             
                 OR CHARGE_NAME LIKE '%'+ #{EXPENSE_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(EXPENSE_NAME)">
                AND (CHARGE_CODE LIKE #{EXPENSE_NAME} + '%'                             
                 OR CHARGE_NAME LIKE '%'+ #{EXPENSE_NAME} + '%' )      
                </if>                
             </if>             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.allowPopup" parameterType="Map" resultType="rMap">
        --정규
        <if test="ALLOW_TAG == &quot;&quot;">
        -- 둘다 아닐 때
        --zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_CODE CASE''] 
        SELECT A.DIVI      AS ALLOW_TAG   
             , A.SUB_CODE  AS ALLOW_CODE
             , A.CODE_NAME AS ALLOW_NAME   
          FROM (SELECT '공제' AS DIVI     
                     , SUB_CODE           
                     , CODE_NAME          
                  FROM BSA100T  
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND MAIN_CODE = N'H034' 
                   AND SUB_CODE != N'$'    
                   UNION                  
                SELECT '수당' AS DIVI     
                     , WAGES_CODE         
                     , WAGES_NAME         
                  FROM HBS300T  
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND CODE_TYPE = N'1' ) A  
         WHERE 1 = 1
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)"> 
            AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
         </if>
         <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
            AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'                             
                OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )                
            </if>
            <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
            AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'                             
                OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
            </if>               
         </if>  
         ORDER BY A.SUB_CODE ASC 
         </if>
         
         <if test="ALLOW_TAG == &quot;2&quot;">
         -- 공제
            --zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_NM CASE2] 
            SELECT '공제'    AS ALLOW_TAG      
                 , SUB_CODE AS ALLOW_CODE 
                 , CODE_NAME AS ALLOW_NAME   
              FROM BSA100T           
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND MAIN_CODE  = N'H034'                                
               AND SUB_CODE  != N'$'              
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">  
                AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                    OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
                AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'                             
                    OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
                AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'                             
                    OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
                </if>               
             </if>  
             ORDER BY SUB_CODE ASC 
         </if>  
         
         <if test="ALLOW_TAG == &quot;1&quot;"> 
         -- 상여총액
            SELECT '수당'  AS ALLOW_TAG       
             , WAGES_CODE AS ALLOW_CODE 
             , WAGES_NAME AS ALLOW_NAME   
          FROM HBS300T            
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND CODE_TYPE   = N'1' 
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)"> 
            AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'                             
                OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
         </if>
         <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
            AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'                             
                OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )               
            </if>
            <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
            AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'                             
                OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
            </if>               
         </if> 
         ORDER BY WAGES_CODE ASC 
         </if>
    </select>
    
    <select id="popupServiceImpl.allowPopup_JS" parameterType="Map" resultType="rMap">
        --조인스
        <if test="ALLOW_TAG == &quot;&quot;">
        -- 둘다 아닐 때
        --zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_CODE CASE''] 
        SELECT A.DIVI      AS ALLOW_TAG   
             , A.SUB_CODE  AS ALLOW_CODE
             , A.CODE_NAME AS ALLOW_NAME   
          FROM (
              SELECT 
                      '공제' AS DIVI
                    , WAGES_CODE    AS SUB_CODE
                    , WAGES_NAME    AS CODE_NAME
                FROM S_HBS300T_JS   
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND CODE_TYPE = N'2'
                
                UNION ALL
                
                SELECT
                      '수당' AS DIVI
                    , WAGES_CODE
                    , WAGES_NAME 
                FROM S_HBS300T_JS   
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND CODE_TYPE = N'1'
               ) A  
         WHERE 1 = 1
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">    
             AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
         </if>
         <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
            AND (SUB_CODE LIKE #{ALLOW_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )                
            </if>
            <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
            AND (SUB_CODE LIKE #{ALLOW_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
            </if>                
         </if>  
         ORDER BY A.SUB_CODE ASC 
         </if>
         
         <if test="ALLOW_TAG == &quot;2&quot;">
         -- 공제
             --zfa_popupZ.fnAPopUp [ALLOW_CODE, ALLOW_NM CASE2] 
            SELECT '공제'    AS ALLOW_TAG      
                 , WAGES_CODE AS ALLOW_CODE 
                 , WAGES_NAME AS ALLOW_NAME   
              FROM S_HBS300T_JS   
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND CODE_TYPE = N'2'           
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">    
                 AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'                             
                     OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
                AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'                             
                     OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
                AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'                             
                     OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
                </if>                
             </if>  
             ORDER BY SUB_CODE ASC 
         </if>    
         
         <if test="ALLOW_TAG == &quot;1&quot;">    
         -- 상여총액
             SELECT '수당'  AS ALLOW_TAG       
             , WAGES_CODE AS ALLOW_CODE 
             , WAGES_NAME AS ALLOW_NAME   
                FROM S_HBS300T_JS   
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND CODE_TYPE = N'1'
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">    
            AND (WAGES_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR WAGES_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )   
         </if>
         <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(ALLOW_CODE)">
            AND (WAGES_CODE LIKE #{ALLOW_CODE} + '%'                             
                 OR WAGES_NAME LIKE '%'+ #{ALLOW_CODE} + '%' )                
            </if>
            <if test="@foren.Ognl@isNotEmpty(ALLOW_NAME)">
            AND (WAGES_CODE LIKE #{ALLOW_NAME} + '%'                             
                 OR WAGES_NAME LIKE '%'+ #{ALLOW_NAME} + '%' )      
            </if>                
         </if> 
         ORDER BY WAGES_CODE ASC 
         </if>
    </select>
    
    <select id="popupServiceImpl.earnerPopup" parameterType="Map" resultType="rMap">
        --UHpb01Krv.cPopup[GetHumanMaster]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT DED_TYPE
                 , PERSON_NUMB       AS EARNER_CODE
                 , NVL(NAME,'') AS EARNER_NAME
                 , NVL(DED_CODE,'') AS DED_CODE
                 <if test="DED_TYPE == &quot;10&quot; or DED_TYPE == &quot;20&quot;">
                 , (SELECT SUB_CODE + ':' + REF_CODE3
                     FROM HCD100T
                    WHERE COMP_CODE = #{S_COMP_CODE} 
                      AND MAIN_CODE = 'HC01'
                      AND SUB_CODE != '$'
                      AND SUB_CODE = A.DED_CODE) AS DED_NAME    
                 </if>
                 <if test="DED_TYPE != &quot;10&quot; and DED_TYPE != &quot;20&quot;">
                 , DED_NAME = CASE WHEN A.DWELLING_YN  = '1' AND A.DED_TYPE = '1' THEN (SELECT CODE_NAME
                                                                                          FROM BSA100T
                                                                                         WHERE COMP_CODE = #{S_COMP_CODE}
                                                                                           AND MAIN_CODE = 'HS04'
                                                                                           AND SUB_CODE = A.DED_CODE)
                                   WHEN A.DWELLING_YN   = '1' AND A.DED_TYPE = '2' THEN (SELECT CODE_NAME
                                                                                           FROM BSA100T
                                                                                          WHERE COMP_CODE = #{S_COMP_CODE}
                                                                                            AND MAIN_CODE = 'HS05'
                                                                                            AND SUB_CODE = A.DED_CODE)
                                   WHEN A.DWELLING_YN   = '2' THEN (SELECT CODE_NAME
                                                                      FROM BSA100T
                                                                     WHERE COMP_CODE = #{S_COMP_CODE}
                                                                       AND MAIN_CODE = 'HS06'
                                                                       AND SUB_CODE  = A.DED_CODE)
                                   END    
                 </if>
                 
                 , NVL(DEPT_CODE,'') AS DEPT_CODE
                 , NVL(DEPT_NAME,'') AS DEPT_NAME
                 , NVL(DIV_CODE,'') AS DIV_CODE
                 , NVL(SECT_CODE,'') AS SECT_CODE
                 , NVL(BUSINESS_TYPE,'') AS BUSINESS_TYPE
                 , NVL(DWELLING_YN,'') AS DWELLING_YN
                 , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR') AS REPRE_NUM
                 , NVL(EXEDEPT_CODE, '') AS EXEDEPT_CODE
                 , NVL(EXEDEPT_NAME, '') AS EXEDEPT_NAME
                 , NVL(REMARK, '')       AS REMARK
              FROM HPB100T AS A 
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND USER_YN   = '1'
            <if test="@foren.Ognl@isNotEmpty(DED_TYPE)">
                AND DED_TYPE = #{DED_TYPE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
                AND SECT_CODE = #{BILL_DIV_CODE}
            </if>
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (PERSON_NUMB LIKE #{TXT_SEARCH} + '%'                             
                 OR NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                ORDER BY PERSON_NUMB ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(EARNER_CODE)">
                AND (PERSON_NUMB LIKE #{EARNER_CODE} + '%'                             
                 OR NAME LIKE '%'+ #{EARNER_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(EARNER_NAME)">
                AND (PERSON_NUMB LIKE #{EARNER_NAME} + '%'                             
                 OR NAME LIKE '%'+ #{EARNER_NAME} + '%' )            
                </if>                
             </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.realtyPopup" parameterType="Map" resultType="rMap">
        --atx412ukr.Catx412ukr Setatx412[fnatx412Popup]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT A.BILL_DIV_CODE         AS DIV_CODE
                 , B.DIV_NAME              AS BILL_DIV_NAME
                 , A.BUILD_CODE            AS REALTY_CODE
                 , A.BUILD_NAME            AS REALTY_NAME
                 , A.DONG
                 , A.UP_UNDER
                 , A.UP_FLOOR
                 , A.HOUSE
                 , A.HOUSE_CNT
                 , A.AREA
              FROM           ATX412T A 
                  INNER JOIN BOR120T B  ON B.COMP_CODE = A.COMP_CODE
                                                    AND B.DIV_CODE  = A.BILL_DIV_CODE
             WHERE A.COMP_CODE   = #{S_COMP_CODE}
             <if test="@foren.Ognl@isNotEmpty(BILL_DIV_CODE)">
                 AND A.BILL_DIV_CODE = #{BILL_DIV_CODE}
             </if>          
            
            
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (BUILD_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR BUILD_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(REALTY_CODE)">
                AND (BUILD_CODE LIKE #{REALTY_CODE} + '%'                             
                 OR BUILD_NAME LIKE '%'+ #{REALTY_CODE} + '%' )        
                </if>
                <if test="@foren.Ognl@isNotEmpty(REALTY_NAME)">
                AND (BUILD_CODE LIKE #{REALTY_NAME} + '%'                             
                 OR BUILD_NAME LIKE '%'+ #{REALTY_NAME} + '%' )   
                </if>                
             </if>
             
            ORDER BY A.BILL_DIV_CODE, A.BUILD_CODE, A.BUILD_NAME, A.UP_UNDER, A.UP_FLOOR, A.HOUSE
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.assetPopup1" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp[ASST, ASST_NM]
            SELECT REF_CODE1
            FROM   BSA100T 
            WHERE  COMP_CODE = #{S_COMP_CODE}
            AND    MAIN_CODE = 'A163'
            AND    SUB_CODE  = '1'
    </select>
    <select id="popupServiceImpl.assetPopup2" parameterType="Map" resultType="rMap">
            SELECT A.ASST                                               AS ASSET_CODE
                 , A.ASST_NAME                                          AS ASSET_NAME
                 , A.ACCNT                                                
                 , D.ACCNT_NAME                                            
                 , A.ACQ_DATE
                 , A.ACQ_AMT_I                                          AS AC_AMT_I
                 , A.ACQ_Q                                              AS ACQ_Q
                 , A.DRB_YEAR                                           AS DRB_YEAR
                 , TO_NUMBER(NVL(C.CODE_NAME, '0')) * 0.001    			AS DEPRECTION
            FROM              ${ASST}   A  
                     LEFT  JOIN ASS100T   B  ON B.COMP_CODE = A.COMP_CODE
                                                           AND B.ACCNT     = A.ACCNT
                     LEFT  JOIN BSA100T   C  ON C.COMP_CODE = B.COMP_CODE
                                                           AND C.MAIN_CODE = (CASE WHEN B.DEP_CTL = '1' THEN 'A033' ELSE 'A034' END)
                                                         AND C.SUB_CODE  = RIGHT(TO_CHAR(1000 + A.DRB_YEAR), 3)
                     LEFT  JOIN ABA400T   D  ON D.COMP_CODE = A.COMP_CODE
                                                         AND D.ACCNT     = A.ACCNT 
            WHERE  A.COMP_CODE    = #{S_COMP_CODE}            
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (ASST LIKE #{TXT_SEARCH} + '%'                             
                 OR ASST_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY ASST ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
                AND (ASST LIKE #{ASSET_CODE} + '%'                             
                 OR ASST_NAME LIKE '%'+ #{ASSET_CODE} + '%' )     
                </if>
                <if test="@foren.Ognl@isNotEmpty(ASSET_NAME)">
                AND (ASST LIKE #{ASSET_NAME} + '%'          -                   
                 OR ASST_NAME LIKE '%'+ #{ASSET_NAME} + '%' )    
                </if>                
             </if>             
    </select>    
    
    <select id="popupServiceImpl.costPoolPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [AC_USER_DEFINE, AC_USER_DEFINE_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            SELECT AC_DATA   AS COST_POOL_CODE
                 , AC_NAME   AS COST_POOL_NAME
                 , REF_CODE1               
                 , REF_CODE2               
              FROM ABA210T                        
             WHERE COMP_CODE    = #{S_COMP_CODE}
               AND AC_CD        = N'A9'            
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (AC_DATA LIKE #{TXT_SEARCH} + '%'                             
                 OR AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY AC_DATA ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(COST_POOL_CODE)">
                AND (AC_DATA LIKE #{COST_POOL_CODE} + '%'                             
                 OR AC_NAME LIKE '%'+ #{COST_POOL_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(COST_POOL_NAME)">
                AND (AC_DATA LIKE #{COST_POOL_NAME} + '%'                             
                 OR AC_NAME LIKE '%'+ #{COST_POOL_NAME} + '%' )        
                </if>                
             </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.unitPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS UNIT_CODE  
                 , CODE_NAME AS UNIT_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'B013' 
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
               
               <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(UNIT_CODE)">
                AND (SUB_CODE LIKE #{UNIT_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{UNIT_CODE} + '%' )        
                </if>
                <if test="@foren.Ognl@isNotEmpty(UNIT_NAME)">
                AND (SUB_CODE LIKE #{UNIT_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{UNIT_NAME} + '%' )    
                </if>                
             </if>
                          
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.noteTypePopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS NOTE_TYPE_CODE 
                 , CODE_NAME AS NOTE_TYPE_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'A058' 
               AND SUB_CODE   != N'$'                  
                 AND USE_YN    = N'Y'  
                 
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(NOTE_TYPE_CODE)">
                AND (SUB_CODE LIKE #{NOTE_TYPE_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{NOTE_TYPE_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(NOTE_TYPE_NAME)">
                AND (SUB_CODE LIKE #{NOTE_TYPE_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{NOTE_TYPE_NAME} + '%' )        
                </if>                
             </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.noteNumPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [NOTE_CD, NOTE_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT NOTE_NUM                                             AS NOTE_NUM_CODE                   
                 , (SELECT CODE_NAME                               
                      FROM BSA100T                    
                     WHERE COMP_CODE = #{S_COMP_CODE}     
                       AND MAIN_CODE = N'A047'                      
                       AND SUB_CODE  = A.AC_CD)                         AS NOTE_TYPE
                 , NVL(CUSTOM_CODE,'')                                 AS CUSTOM_CODE 
                 , NVL((SELECT CUSTOM_NAME                      
                             FROM BCM100T             
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND CUSTOM_CODE = A.CUSTOM_CODE),'')         AS CUSTOM_NAME
                 , NVL(BANK_CODE,'')                                 AS BANK_CODE       
                 , NVL((SELECT CUSTOM_NAME                      
                             FROM BCM100T             
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND CUSTOM_CODE = A.BANK_CODE),'')         AS BANK_NAME
                 , (CASE NVL(PUB_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, PUB_DATE) END)         AS PUB_DATE                     
                 , (CASE NVL(EXP_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, EXP_DATE) END)         AS EXP_DATE                     
                 , NVL(OC_AMT_I,0)                                     AS    OC_AMT_I      
                 , NVL(J_AMT_I,0)                                     AS    J_AMT_I   
                 , NOTE_STS
              FROM AFN100T A   
             WHERE A.COMP_CODE   = #{S_COMP_CODE}
             
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (NOTE_NUM LIKE #{TXT_SEARCH} + '%'                             
                 OR CUSTOM_CODE LIKE '%'+ #{TXT_SEARCH} + '%' )
                 
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(NOTE_NUM_CODE)">
                   <if test="TYPE != &quot;3&quot; and TYPE != &quot;4&quot; and EXT_TYPE != &quot;AGJ&quot; ">
                    AND (NOTE_NUM LIKE #{NOTE_NUM_CODE} + '%'                             
                     OR CUSTOM_CODE LIKE '%'+ #{NOTE_NUM_CODE} + '%' )                     
                    </if>
                    <if test="TYPE == &quot;3&quot; or TYPE == &quot;4&quot; or EXT_TYPE == &quot;AGJ&quot;">    
                    AND NOTE_NUM = #{NOTE_NUM_CODE}
                    </if>
                   </if>
                  <if test="@foren.Ognl@isNotEmpty(NOTE_NUM_NAME)">
                    AND (NOTE_NUM LIKE #{NOTE_NUM_NAME} + '%'                             
                     OR CUSTOM_CODE LIKE '%'+ #{NOTE_NUM_NAME} + '%' )   
                  </if>    
                    
             </if>
             
             <if test="@foren.Ognl@isNotEmpty(AC_CD)">
                 AND AC_CD = #{AC_CD}
             </if>     
             <if test="@foren.Ognl@isNotEmpty(NOTE_STS_LIST)">
                 AND NOTE_STS IN
             <foreach collection="NOTE_STS_LIST" item="NOTE_STS" index="index" separator="," close=")" open="(">
                               #{NOTE_STS}
            </foreach>
             </if>
             <if test="@foren.Ognl@isNotEmpty(AC_CD_LIST)">
                 AND (
                 <foreach collection="AC_CD_LIST" item="AC_CD" index="index" separator="OR ">
                      AC_CD = #{AC_CD}
                     AND NOTE_STS IN 
                 <foreach collection="NOTE_STS_LIST1[index]" item="NOTE_STS" index="index" separator="," close=")" open="(">
                               #{NOTE_STS}
                </foreach>
                </foreach>
                )
             </if>
             
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">            
             ORDER BY NOTE_NUM ASC
             </if>
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    <select id="popupServiceImpl.noteNumPopupD3" parameterType="Map" resultType="rMap">
        SELECT NOTE_NUM                AS NOTE_NUM_CODE
             , NVL((SELECT CODE_NAME 
                         FROM BSA100T  
                        WHERE COMP_CODE = A.COMP_CODE
                          AND MAIN_CODE = 'A047' 
                          AND SUB_CODE  = 'D3'),'') AS NOTE_TYPE
             , NVL((SELECT CODE_NAME 
                         FROM BSA100T  
                        WHERE COMP_CODE = A.COMP_CODE
                          AND MAIN_CODE = 'A064' 
                          AND SUB_CODE  = A.PROC_SW) ,'')AS NOTE_STS2
             , '' AS CUSTOM_CODE
             , '' AS CUSTOM_NAME
             , NVL(BANK_CODE,'') AS BANK_CODE
             , NVL((SELECT CUSTOM_NAME 
                         FROM BCM100T  
                        WHERE COMP_CODE   = A.COMP_CODE
                          AND CUSTOM_CODE = A.BANK_CODE),'') AS BANK_NAME
             , CASE NVL(INSOCK_DATE,'')
                    WHEN '' THEN ''
                    ELSE    UNILITE.fnGetUserDateComp(A.COMP_CODE, INSOCK_DATE)
                END AS INSOCK_DATE
             , CASE NVL(FLOAT_DATE,'')
                    WHEN '' THEN ''
                    ELSE    UNILITE.fnGetUserDateComp(A.COMP_CODE, FLOAT_DATE)
                END AS PUB_DATE
             , CASE NVL(SET_DATE,'')
                    WHEN '' THEN ''
                    ELSE    UNILITE.fnGetUserDateComp(A.COMP_CODE, SET_DATE)
                END AS EXP_DATE
             , NULL AS OC_AMT_I
             , NULL    AS    J_AMT_I 
          FROM afn200t A 
          
         WHERE A.COMP_CODE = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(NOTE_NUM)">
           AND NOTE_NUM >= #{NOTE_NUM}
         </if>
         <if test="@foren.Ognl@isNotEmpty(NOTE_NUM_CODE)">
           AND NOTE_NUM >= #{NOTE_NUM}
         </if>
           AND  NOTE_DIVI = N'1' AND PROC_SW = N'2'
         ORDER BY NOTE_NUM
    </select>
    
    <select id="popupServiceImpl.checkNumPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [CHECK_CD, CHECK_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT NOTE_NUM                                         AS CHECK_NUM_CODE            
                 , NVL(BANK_CODE,'')                             AS BANK_CODE
                 , NVL((SELECT CUSTOM_NAME               
                             FROM BCM100T      
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND CUSTOM_CODE = A.BANK_CODE),'')     AS BANK_NAME
                 , (CASE NVL(INSOCK_DATE,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, INSOCK_DATE) END)     AS INSOCK_DATE               
                 , (CASE NVL(FLOAT_DATE ,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, FLOAT_DATE)  END)     AS FLOAT_DATE               
                 , (CASE NVL(SET_DATE   ,'') WHEN '' THEN '' ELSE unilite.fnGetUserDateComp(A.COMP_CODE, SET_DATE)    END)     AS SET_DATE              
              FROM AFN200T A                     
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
               AND A.NOTE_DIVI    = N'2' 
               AND A.PROC_SW      = N'2'
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (NOTE_NUM LIKE #{TXT_SEARCH} + '%'                             
                 OR BANK_CODE LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY NOTE_NUM ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(CHECK_NUM_CODE)">
                AND (NOTE_NUM LIKE #{CHECK_NUM_CODE} + '%'                             
                 OR BANK_CODE LIKE '%'+ #{CHECK_NUM_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(CHECK_NUM_NAME)">
                AND (NOTE_NUM LIKE #{CHECK_NUM_NAME} + '%'                             
                 OR BANK_CODE LIKE '%'+ #{CHECK_NUM_NAME} + '%' )        
                </if>                
             </if>    
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.moneyPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS MONEY_CODE  
                 , CODE_NAME AS MONEY_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'B004' 
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(MONEY_CODE)">
                AND (SUB_CODE LIKE #{MONEY_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{MONEY_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(MONEY_NAME)">
                AND (SUB_CODE LIKE #{MONEY_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{MONEY_NAME} + '%' )    
                </if>                
             </if>
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.exLcnoPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[fnGetLCNo]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT A.DIV_CODE
                 , A.LC_SER_NO
                 , A.LC_NO        AS EX_LCNO_CODE
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_LC_OPEN) AS DATE_LC_OPEN
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_EXP) AS DATE_EXP
                 , B.IMPORTER AS SEARCH_MAN
                 , (SELECT CUSTOM_NAME 
                      FROM BCM100T 
                     WHERE COMP_CODE   = B.COMP_CODE
                       AND CUSTOM_CODE = B.IMPORTER) AS SEARCH_MAN_NM
                 , A.LC_TYPE
              FROM TEB100T A 
                 , TEA100T B 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.COMP_CODE = #{S_COMP_CODE}
               AND A.SO_SER_NO = B.SO_SER_NO
               AND A.DIV_CODE  = B.DIV_CODE
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
               AND B.EXPORTER = #{CUSTOM_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
               AND A.DIV_CODE = #{DIV_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(LC_SER_NO)">  
               AND A.LC_SER_NO = #{LC_SER_NO}   
             </if>
             <if test="@foren.Ognl@isNotEmpty(EX_LCNO_CODE)">  
               AND A.LC_NO = #{EX_LCNO_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(LC_DATE_FR)">  
               AND DATE_LC_OPEN &gt;= #{LC_DATE_FR}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(LC_DATE_TO)">  
               AND DATE_LC_OPEN &lt;= #{LC_DATE_TO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">  
               AND A.LC_NO = #{IN_LCNO_CODE}
             </if> 
                        
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.inLcnoPopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            --UAccntPopUpKrv.CAccntPopupKR[fnGetLCNo]
            SELECT A.DIV_CODE
                 , A.LC_SER_NO
                 , A.LC_NO            AS IN_LCNO_CODE
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_LC_OPEN) AS DATE_LC_OPEN
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_EXP) AS DATE_EXP
                 , B.EXPORTER AS SEARCH_MAN
                 , (SELECT CUSTOM_NAME 
                      FROM BCM100T 
                     WHERE COMP_CODE   = B.COMP_CODE
                       AND CUSTOM_CODE = B.EXPORTER) AS SEARCH_MAN_NM
                 , A.LC_TYPE
              FROM TIB100T A 
                 , TIA100T B 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.COMP_CODE = #{S_COMP_CODE}
               AND A.SO_SER_NO = B.SO_SER_NO
               AND A.DIV_CODE  = B.DIV_CODE
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
               AND B.EXPORTER = #{CUSTOM_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
               AND A.DIV_CODE = #{DIV_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(LC_SER_NO)">  
               AND A.LC_SER_NO = #{LC_SER_NO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">  
               AND A.LC_NO = #{IN_LCNO_CODE}   
             </if>
             <if test="@foren.Ognl@isNotEmpty(LC_DATE_FR)">  
               AND DATE_LC_OPEN &gt;= #{LC_DATE_FR}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(LC_DATE_TO)">  
               AND DATE_LC_OPEN &lt;= #{LC_DATE_TO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(IN_LCNO_CODE)">  
               AND A.LC_NO = #{IN_LCNO_CODE}
             </if> 
                        
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.exBlnoPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[fnGetBLNo]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
        
            SELECT A.DIV_CODE
                 , A.BL_SER_NO
                 , A.BL_NO            AS EX_BLNO_CODE
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.BL_DATE) AS BL_DATE
                 , B.IMPORTER AS SEARCH_MAN
                 , (SELECT CUSTOM_NAME 
                      FROM BCM100T 
                     WHERE COMP_CODE   = B.COMP_CODE
                       AND CUSTOM_CODE = B.IMPORTER) AS SEARCH_MAN_NM
                 , B.TERMS_PRICE
                 , B.PAY_TERMS
              FROM TED100T A 
                 , TEA100T B 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.COMP_CODE = #{S_COMP_CODE}
               AND A.SO_SER_NO = B.SO_SER_NO
               AND A.DIV_CODE  = B.DIV_CODE
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
               AND B.EXPORTER  = #{CUSTOM_CODE}   
             </if>
             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE  = #{DIV_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">  
               AND A.BL_SER_NO = #{BL_SER_NO}   
             </if> 
             <if test="@foren.Ognl@isNotEmpty(EX_BLNO_CODE)">  
               AND A.BL_NO = #{EX_BLNO_CODE}   
             </if> 
             <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">  
               AND BL_DATE &gt;= #{BL_DATE_FR}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">  
               AND BL_DATE &lt;= #{BL_DATE_TO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(EX_BLNO_CODE)">  
               AND A.BL_NO = #{EX_BLNO_CODE}
             </if>
               
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.inBlnoPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[fnGetBLNo]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
        
            SELECT A.DIV_CODE
                 , A.BL_SER_NO
                 , A.BL_NO                    AS IN_BLNO_CODE
                 , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.BL_DATE) AS BL_DATE
                 , B.EXPORTER AS SEARCH_MAN
                 , (SELECT CUSTOM_NAME 
                      FROM BCM100T 
                     WHERE COMP_CODE   = B.COMP_CODE
                       AND CUSTOM_CODE = B.EXPORTER) AS SEARCH_MAN_NM
                 , B.TERMS_PRICE
                 , B.PAY_TERMS
              FROM TIC100T A 
                 , TIA100T B 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.COMP_CODE = #{S_COMP_CODE}
               AND A.SO_SER_NO = B.SO_SER_NO
               AND A.DIV_CODE  = B.DIV_CODE
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
               AND B.EXPORTER  = #{CUSTOM_CODE}   
             </if>
             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE  = #{DIV_CODE}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(BL_SER_NO)">  
               AND A.BL_SER_NO = #{BL_SER_NO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(IN_BLNO_CODE)">  
               AND A.BL_NO = #{IN_BLNO_CODE}   
             </if>
             <if test="@foren.Ognl@isNotEmpty(BL_DATE_FR)">  
               AND BL_DATE &gt;= #{BL_DATE_FR}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(BL_DATE_TO)">  
               AND BL_DATE &lt;= #{BL_DATE_TO}   
             </if>  
             <if test="@foren.Ognl@isNotEmpty(IN_BLNO_CODE)">  
               AND A.BL_NO = #{IN_BLNO_CODE}
             </if>
               
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.acProjectPopup" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.acProjectPopup */
    SELECT A.PJT_CODE  AS AC_PROJECT_CODE
         , A.PJT_NAME  AS AC_PROJECT_NAME
         , B.CODE_NAME AS COMPLETE_YN
      FROM       BCM600T A 
      LEFT  JOIN BSA100T B  ON B.COMP_CODE = A.COMP_CODE
                           AND B.MAIN_CODE = 'A035'
                           AND B.SUB_CODE  = A.DIVI 
     WHERE A.COMP_CODE   = #{S_COMP_CODE}
     
     <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (PJT_CODE LIKE #{TXT_SEARCH} + '%'                             
         OR PJT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
         ORDER BY PJT_CODE ASC
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">
        AND (PJT_CODE LIKE #{AC_PROJECT_CODE} + '%'                             
         OR PJT_NAME LIKE '%'+ #{AC_PROJECT_CODE} + '%' )                
        </if>
        <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_NAME)">
        AND (PJT_CODE LIKE #{AC_PROJECT_NAME} + '%'                             
         OR PJT_NAME LIKE '%'+ #{AC_PROJECT_NAME} + '%' )        
        </if>                
     </if>
    </select>
    <select id="popupServiceImpl.fnHum100P1" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.fnHum100P1 */
    SELECT WAGES_CODE
         , WAGES_NAME
      FROM HBS300T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND WAGES_KIND = '1'
    </select>
    <select id="popupServiceImpl.payGradePopup" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.payGradePopup */
    SELECT PAY_GRADE_01
         , PAY_GRADE_02
    <foreach collection="sWagesCode" item="loopData" index="index" >
        -- 수당코드 Loop
             , ${loopData.WAGES_CODE} AS CODE${loopData.WAGES_CODE}
             , MAX(CASE WHEN A.WAGES_CODE = ${loopData.WAGES_CODE} 
                        THEN A.WAGES_I
                        ELSE 0
                    END) AS STD${loopData.WAGES_CODE} 
    </foreach>
      FROM       HBS200T A
      INNER JOIN HBS300T B
              ON A.COMP_CODE  = B.COMP_CODE
             AND A.WAGES_CODE = B.WAGES_CODE
     WHERE A.COMP_CODE    = #{S_COMP_CODE}
    
    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (PAY_GRADE_01 LIKE #{TXT_SEARCH} + '%'                             
         OR PAY_GRADE_02 LIKE '%'+ #{TXT_SEARCH} + '%' )
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
        AND (PAY_GRADE_01 LIKE #{PAY_GRADE_01} + '%'                             
         OR PAY_GRADE_02 LIKE '%'+ #{PAY_GRADE_01} + '%' )                
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
        AND (PAY_GRADE_01 LIKE #{PAY_GRADE_02} + '%'                             
         OR PAY_GRADE_02 LIKE '%'+ #{PAY_GRADE_02} + '%' )        
        </if>                
     </if>
    
     GROUP BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02
     ORDER BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02 
    </select>
    
    <select id="popupServiceImpl.fundPopup" parameterType="Map" resultType="rMap">
        
    </select>
    
    <select id="popupServiceImpl.creditNoPopup" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.creditNoPopup */
    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
        DROP TABLE #CRDT_NUM

    SELECT A.COMP_CODE
         , A.CRDT_NUM
         , A.CRDT_NAME
         , unilite.fnCipherDecrypt(A.CRDT_FULL_NUM, 'C')    AS CRDT_FULL_NUM
         , A.BANK_CODE
         , NVL(B.CUSTOM_NAME                   , '' )      AS BANK_NAME
         , uniLITE.fnCipherDecrypt(A.ACCOUNT_NUM  , 'B')      AS ACCOUNT_NUM
         , A.SET_DATE
         , NVL(C.NAME                          , '' )      AS PERSON_NAME
         , NVL(A.CRDT_COMP_CD, M1.REF_CODE3)               AS CRDT_COMP_CD
         , D.CUSTOM_NAME                                    AS CRDT_COMP_NM
         , A.USE_YN
    INTO   #CRDT_NUM
    FROM              ABA500T   A  
           LEFT  JOIN BCM100T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                AND B.CUSTOM_CODE = A.BANK_CODE
           LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                AND M1.MAIN_CODE  = 'A028'
                                                AND M1.SUB_CODE   = A.CRDT_KIND
           LEFT  JOIN HUM100T   C   ON C.COMP_CODE   = A.COMP_CODE
                                                AND C.PERSON_NUMB = A.PERSON_NUMB
           LEFT  JOIN BCM100T   D   ON D.COMP_CODE   = A.COMP_CODE
                                                AND D.CUSTOM_CODE = NVL(A.CRDT_COMP_CD, M1.REF_CODE3)
    
    SELECT CRDT_NUM        AS CREDIT_NO_CODE
         , CRDT_NAME       AS CREDIT_NO_NAME
         , CRDT_FULL_NUM   
         , BANK_CODE       
         , BANK_NAME       
         , ACCOUNT_NUM     
         , SET_DATE        
         , PERSON_NAME     
         , CRDT_COMP_CD    
         , CRDT_COMP_NM    
    FROM   #CRDT_NUM 
    WHERE  COMP_CODE          = #{S_COMP_CODE}
    AND    NVL(USE_YN,'Y') = N'Y'    
    
    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (CRDT_NUM LIKE #{TXT_SEARCH} + '%'                             
         OR CRDT_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
         ORDER BY CRDT_NUM ASC
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(CREDIT_NO_CODE)">
        AND (CRDT_NUM LIKE #{CREDIT_NO_CODE} + '%'                             
         OR CRDT_NAME LIKE '%'+ #{CREDIT_NO_CODE} + '%' )            
        </if>
        <if test="@foren.Ognl@isNotEmpty(CREDIT_NO_NAME)">
        AND (CRDT_NUM LIKE #{CREDIT_NO_NAME} + '%'                             
         OR CRDT_NAME LIKE '%'+ #{CREDIT_NO_NAME} + '%' )        
        </if>                
     </if>            
    </select>
    <select id="popupServiceImpl.creditNoPopupJ" parameterType="Map" resultType="rMap">
        --JOINS
        
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
        
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#CRDT_NUM'))
                DROP TABLE #CRDT_NUM
        
            SELECT A.COMP_CODE
                 , A.CRDT_NUM
                 , A.CRDT_NAME
                 , A.CRDT_FULL_NUM
                 , A.CRDT_FULL_NUM      AS DEC_CRDT_NUM
                 , A.BANK_CODE
                 , NVL(B.CUSTOM_NAME,'')                 AS BANK_NAME
                 , A.ACCOUNT_NUM
                 , A.SET_DATE
                 , NVL(C.NAME,'')                        AS PERSON_NAME
                 , NVL(A.CRDT_COMP_CD, M1.REF_CODE3)     AS CRDT_COMP_CD
                 , D.CUSTOM_NAME                            AS CRDT_COMP_NM
                 , A.USE_YN
            INTO   #CRDT_NUM
            FROM              ABA500T   A  
                   LEFT  JOIN BCM100T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                        AND B.CUSTOM_CODE = A.BANK_CODE
                   LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                        AND M1.MAIN_CODE  = 'A028'
                                                        AND M1.SUB_CODE   = A.CRDT_KIND
                   LEFT  JOIN HUM100T   C   ON C.COMP_CODE   = A.COMP_CODE
                                                        AND C.PERSON_NUMB = A.PERSON_NUMB
                   LEFT  JOIN BCM100T   D   ON D.COMP_CODE   = A.COMP_CODE
                                                        AND D.CUSTOM_CODE = NVL(A.CRDT_COMP_CD, M1.REF_CODE3)
        
           SET NOCOUNT OFF
           SET ARITHABORT OFF
        
            SELECT CRDT_NUM        AS CREDIT_NO_CODE
                 , CRDT_NAME       AS CREDIT_NO_NAME
                 , CRDT_FULL_NUM   
                 , DEC_CRDT_NUM
                 , BANK_CODE       
                 , BANK_NAME       
                 , ACCOUNT_NUM     
                 , SET_DATE        
                 , PERSON_NAME     
                 , CRDT_COMP_CD    
                 , CRDT_COMP_NM    
            FROM   #CRDT_NUM 
            WHERE  COMP_CODE          = #{S_COMP_CODE}
            AND    NVL(USE_YN,'Y') = N'Y'    
            
            <if test="@foren.Ognl@isNotEmpty(SEARCH_CRDT_FULL_NUM)">              
                AND CRDT_FULL_NUM = #{SEARCH_CRDT_FULL_NUM} 
            </if>   
            <if test="@foren.Ognl@isNotEmpty(SEARCH_CREDIT_NO_NAME)">                            
                AND CRDT_NAME LIKE '%'+ #{SEARCH_CREDIT_NO_NAME} + '%' 
            </if>
            
         
            
            <if test="@foren.Ognl@isEmpty(SEARCH_CRDT_FULL_NUM) || @foren.Ognl@isEmpty(SEARCH_CREDIT_NO_NAME)">
                <if test="@foren.Ognl@isNotEmpty(CRDT_FULL_NUM_EXPOS)">
                AND CRDT_FULL_NUM = #{CRDT_FULL_NUM_EXPOS}                    
                </if>
                <if test="@foren.Ognl@isNotEmpty(CREDIT_NO_NAME)">
                AND CRDT_NAME LIKE '%'+ #{CREDIT_NO_NAME} + '%'      
                </if>               
             </if>        
             
            ORDER BY CRDT_NUM ASC  
        END
    </select>
    <select id="popupServiceImpl.purSaleTypePopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS PUR_SALE_TYPE_CODE  
                 , CODE_NAME AS PUR_SALE_TYPE_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'A003' 
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(PUR_SALE_TYPE_CODE)">
                AND (SUB_CODE LIKE #{PUR_SALE_TYPE_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PUR_SALE_TYPE_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(PUR_SALE_TYPE_NAME)">
                AND (SUB_CODE LIKE #{PUR_SALE_TYPE_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PUR_SALE_TYPE_NAME} + '%' )            
                </if>                
             </if>               
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.proofPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS PROOF_CODE  
                 , CODE_NAME AS PROOF_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'A022' 
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(PROOF_CODE)">
                AND (SUB_CODE LIKE #{PROOF_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PROOF_CODE} + '%' )        
                </if>
                <if test="@foren.Ognl@isNotEmpty(PROOF_NAME)">
                AND (SUB_CODE LIKE #{PROOF_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{PROOF_NAME} + '%' )    
                </if>                
             </if>
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.emissionPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS EMISSION_CODE  
                 , CODE_NAME AS EMISSION_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = N'A149' 
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
               
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(EMISSION_CODE)">
                AND (SUB_CODE LIKE #{EMISSION_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{EMISSION_CODE} + '%' )                
                </if>
                <if test="@foren.Ognl@isNotEmpty(EMISSION_NAME)">
                AND (SUB_CODE LIKE #{EMISSION_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{EMISSION_NAME} + '%' )        
                </if>                
             </if>
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.bankBookPopup" parameterType="Map" resultType="rMap">
        --UAccntPopUpKrv.CAccntPopupKR[fnGetDeposit]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT SAVE_CODE AS BANK_BOOK_CODE
                 , SAVE_NAME AS BANK_BOOK_NAME
                 , NVL(uniLITE.fnCipherDecrypt(BANK_ACCOUNT, 'B'), '') AS DEPOSIT_NUM
                 , BANK_CODE AS BANK_CD
                 , (SELECT CUSTOM_NAME 
                      FROM BCM100T 
                     WHERE COMP_CODE   = A.COMP_CODE
                       AND CUSTOM_TYPE = N'4' 
                       AND CUSTOM_CODE = A.BANK_CODE) AS BANK_NM
                 , ACCNT
                 , (SELECT ACCNT_NAME  
                      FROM ABA400T 
                     WHERE COMP_CODE = A.COMP_CODE
                       AND ACCNT     = A.ACCNT) AS ACCNT_NAME
                 , DIV_CODE
                 , (SELECT DIV_NAME    
                      FROM BOR120T 
                     WHERE COMP_CODE = A.COMP_CODE
                       AND DIV_CODE  = A.DIV_CODE) AS DIV_NAME
              FROM AFS100T A 
             WHERE A.COMP_CODE        = #{S_COMP_CODE}
               AND NVL(USE_YN,'Y') = N'Y'
             <if test="@foren.Ognl@isNotEmpty(ACCNT)">
                --임시주석 AND ACCNT =  {ACCNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND DIV_CODE =  #{DIV_CODE}
             </if>  
              <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
                AND ${ADD_QUERY}
             </if>
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SAVE_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SAVE_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BANK_BOOK_CODE)">
                AND (SAVE_CODE LIKE #{BANK_BOOK_CODE} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{BANK_BOOK_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(BANK_BOOK_NAME)">
                AND (SAVE_CODE LIKE #{BANK_BOOK_NAME} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{BANK_BOOK_NAME} + '%' )        
                </if>                
             </if>    
                     
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.bankBookCodePopup" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
            SELECT 
                 A.CUSTOM_CODE
                ,C.CUSTOM_NAME
                , A.BOOK_CODE
                , A.BOOK_NAME
                ,A.BANK_CODE
                ,B.CUSTOM_NAME                AS BANK_NAME
                ,uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM,'')    AS BANK_ACCOUNT
                ,A.BANKBOOK_NAME                            
                , A.MAIN_BOOK_YN
            FROM        BCM130T A              
            LEFT  JOIN    BCM100T    B  ON B.COMP_CODE   = A.COMP_CODE
                                              AND B.CUSTOM_CODE = A.BANK_CODE
                                              AND B.CUSTOM_TYPE = '4'
            INNER JOIN  BCM100T C  ON C.COMP_CODE   = A.COMP_CODE
                                              AND C.CUSTOM_CODE = A.CUSTOM_CODE
            WHERE A.COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              AND A.CUSTOM_CODE = #{CUSTOM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.BOOK_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR A.BOOK_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BOOK_CODE)">
                AND (A.BOOK_CODE LIKE #{BOOK_CODE} + '%'                             
                 OR BOOK_NAME LIKE '%'+ #{BOOK_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(BOOK_NAME)">
                AND (A.BOOK_CODE LIKE #{BOOK_NAME} + '%'                             
                 OR A.BOOK_NAME LIKE '%'+ #{BOOK_NAME} + '%' )        
                </if>                
             </if>    
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_SEARCH)">                
                 AND (A.CUSTOM_CODE LIKE #{CUSTOM_SEARCH} + '%'                             
                 OR C.CUSTOM_NAME LIKE '%'+ #{CUSTOM_SEARCH} + '%' )
             </if>
            ORDER BY B.CUSTOM_NAME

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.debtNoPopup" parameterType="Map" resultType="rMap">
        --UAccntPopupKrv.CAccntPopupKR[fnGetLoanNo]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
            
             SELECT A.LOANNO                                            AS DEBT_NO_CODE         
                  , LTRIM(RTRIM(A.LOAN_NAME))                           AS DEBT_NO_NAME
                  , A.CUSTOM                                            AS CUSTOM_CODE
                  , UNILITE.FNCUSTNAME(#{S_USER_ID}, A.CUSTOM)          AS CUSTOM_NAME
                  , M1.CODE_NAME                                        AS LOAN_GUBUN
                  , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.PUB_DATE)  AS PUB_DATE 
                  , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.EXP_DATE)  AS EXP_DATE 
                  , A.AMT_I 
                  , A.FOR_AMT_I 
                  , A.MONEY_UNIT 
                  , A.REMARK
               FROM           AFN300T A  
                    LEFT JOIN BSA100T M1  ON M1.COMP_CODE = A.COMP_CODE
                                                      AND M1.MAIN_CODE = N'A089'
                                                      AND M1.SUB_CODE  = A.LOAN_GUBUN
              WHERE A.COMP_CODE = #{S_COMP_CODE}
              <if test="@foren.Ognl@isNotEmpty(RDO)">
                  <if test="@foren.Ognl@isNotEmpty(EXP_DATE_FR)">
                    AND A.EXP_DATE    &gt;= #{EXP_DATE_FR}
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(EXP_DATE_TO)">
                    AND A.EXP_DATE    &lt;= #{EXP_DATE_TO}
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">  
                    AND A.ACCNT           = #{ACCNT_CODE}
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">  
                    AND A.CUSTOM          = #{CUSTOM_CODE}
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
                    AND A.DIV_CODE        = #{DIV_CODE}
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(LOANNO)">  
                    AND A.LOANNO    LIKE  #{LOANNO} + '%'
                  </if>  
                  <if test="@foren.Ognl@isNotEmpty(LOAN_NAME)">  
                    AND A.LOAN_NAME LIKE  #{LOAN_NAME} + '%'
                  </if>                    
            </if>            
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (LOANNO LIKE #{TXT_SEARCH} + '%'                             
                 OR LOAN_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY LOANNO ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
                AND (LOANNO LIKE #{DEBT_NO_CODE} + '%'                             
                 OR LOAN_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
                AND (LOANNO LIKE #{DEBT_NO_NAME} + '%'                             
                 OR LOAN_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%' )        
                </if>                
             </if>    
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    
    <select id="popupServiceImpl.bankAccntPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [BANK_ACCOUNT] 
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#BANK_ACCOUNT_KD'))
                DROP TABLE #BANK_ACCOUNT_KD
        
            SELECT A.COMP_CODE
                 , A.SAVE_CODE
                 , A.SAVE_NAME
                 , uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT, 'B')  AS BANK_ACCOUNT
                 , A.BANK_CODE
                 , NVL(B.CUSTOM_NAME                  , '')   AS BANK_NAME
            INTO   #BANK_ACCOUNT_KD
            FROM              AFS100T   A  
                   LEFT  JOIN BCM100T   B  ON B.COMP_CODE   = A.COMP_CODE 
                                                       AND B.CUSTOM_CODE = A.BANK_CODE 
                                                       AND B.CUSTOM_TYPE = N'4'
        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        
            SELECT SAVE_CODE       
                 , SAVE_NAME       
                 , BANK_ACCOUNT   AS  BANK_ACCNT_CODE
                 , BANK_CODE       
                 , BANK_NAME       
            FROM   #BANK_ACCOUNT_KD 
            WHERE  COMP_CODE       = #{S_COMP_CODE}
            
            <if test="@foren.Ognl@isNotEmpty(SAVE_NAME)">                
                 AND SAVE_NAME LIKE '%'+ #{SAVE_NAME} + '%'
                 
            </if>
            <if test="@foren.Ognl@isNotEmpty(BANK_ACCOUNT)">                
                 AND BANK_ACCOUNT LIKE #{BANK_ACCOUNT} + '%'                                      
            </if>
            <if test="@foren.Ognl@isEmpty(BANK_ACCOUNT)">
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
                    AND BANK_ACCOUNT LIKE #{DEBT_NO_CODE} + '%'             
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
                    AND BANK_ACCOUNT LIKE #{DEBT_NO_NAME} + '%' 
                </if>                
            </if>    
            <if test="@foren.Ognl@isEmpty(SAVE_NAME)">
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
                AND SAVE_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%'        
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
                AND SAVE_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%'    
                </if>                
            </if>                 
            ORDER BY SAVE_NAME, BANK_ACCOUNT ASC   
        END 
    </select>    
    
    
    <select id="popupServiceImpl.bankAccntPopupOld" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [BANK_ACCOUNT] 
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID = OBJECT_ID('tempdb..#BANK_ACCOUNT_KD'))
                DROP TABLE #BANK_ACCOUNT_KD
        
            SELECT A.COMP_CODE
                 , A.SAVE_CODE
                 , A.SAVE_NAME
                 , uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT, 'B')  AS BANK_ACCOUNT
                 , A.BANK_CODE
                 , NVL(B.CUSTOM_NAME                  , '')   AS BANK_NAME
            INTO   #BANK_ACCOUNT_KD
            FROM              AFS100T   A  
                   LEFT  JOIN BCM100T   B  ON B.COMP_CODE   = A.COMP_CODE 
                                                       AND B.CUSTOM_CODE = A.BANK_CODE 
                                                       AND B.CUSTOM_TYPE = N'4'
        
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        
            SELECT SAVE_CODE       
                 , SAVE_NAME       
                 , BANK_ACCOUNT   AS  BANK_ACCNT_CODE
                 , BANK_CODE       
                 , BANK_NAME       
            FROM   #BANK_ACCOUNT_KD 
            WHERE  COMP_CODE       = #{S_COMP_CODE}
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (BANK_ACCOUNT LIKE #{TXT_SEARCH} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY BANK_ACCOUNT ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_CODE)">
                AND (BANK_ACCOUNT LIKE #{DEBT_NO_CODE} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{DEBT_NO_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEBT_NO_NAME)">
                AND (BANK_ACCOUNT LIKE #{DEBT_NO_NAME} + '%'                             
                 OR SAVE_NAME LIKE '%'+ #{DEBT_NO_NAME} + '%' )    
                </if>                
             </if>             
               
        END 
    </select>    
    
    <select id="popupServiceImpl.commonPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS COMMON_CODE  
                 , CODE_NAME AS COMMON_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = #{BSA_CODE}
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
            <if test="@foren.Ognl@isNotEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">                    
                        AND     SUB_CODE    LIKE + '%' + #{TXT_SEARCH} + '%'  
                        ORDER BY SUB_CODE ASC                    
                    </if>
                    <if test="RDO == &quot;2&quot;">                    
                        AND     CODE_NAME    LIKE + '%' + #{TXT_SEARCH} + '%'  
                        ORDER BY CODE_NAME ASC                    
                    </if>
                </if>
                <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">
                        ORDER BY SUB_CODE ASC    
                    </if>
                    <if test="RDO == &quot;2&quot;">
                        ORDER BY CODE_NAME ASC    
                    </if>                    
                </if>                
            </if>            
            <if test="@foren.Ognl@isEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(COMMON_CODE)">
                    AND     SUB_CODE     = #{COMMON_CODE}  
                </if>
                <if test="@foren.Ognl@isNotEmpty(COMMON_NAME)">
                    AND     CODE_NAME    = #{COMMON_NAME}          
                </if>    
            </if> 
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.businessBankPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [COMMON_CODE, COMMON_NAME]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT SUB_CODE  AS BUSINESS_BANK_CODE  
                 , CODE_NAME AS BUSINESS_BANK_NAME 
              FROM BSA100T  
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND MAIN_CODE   = 'A029'
               AND SUB_CODE   != N'$'                  
               AND USE_YN      = N'Y'
               
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (SUB_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY SUB_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BUSINESS_BANK_CODE)">
                AND (SUB_CODE LIKE #{BUSINESS_BANK_CODE} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{BUSINESS_BANK_CODE} + '%' )            
                </if>
                <if test="@foren.Ognl@isNotEmpty(BUSINESS_BANK_NAME)">
                AND (SUB_CODE LIKE #{BUSINESS_BANK_NAME} + '%'                             
                 OR CODE_NAME LIKE '%'+ #{BUSINESS_BANK_NAME} + '%' )            
                </if>                
              </if>             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>    
    <select id="popupServiceImpl.userDefinePopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [AC_USER_DEFINE, AC_USER_DEFINE_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            SELECT AC_DATA   AS USER_DEFINE_CODE
                 , AC_NAME   AS USER_DEFINE_NAME
                 , REF_CODE1               
                 , REF_CODE2               
              FROM ABA210T                        
             WHERE COMP_CODE    = #{S_COMP_CODE}
               AND AC_CD        = #{AC_CD}            
            <if test="@foren.Ognl@isNotEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">                    
                        AND     AC_DATA    LIKE + '%' + #{TXT_SEARCH} + '%'
                        ORDER BY AC_DATA ASC                    
                    </if>
                    <if test="RDO == &quot;2&quot;">                    
                        AND     AC_NAME    LIKE + '%' + #{TXT_SEARCH} + '%'
                        ORDER BY AC_NAME ASC                    
                    </if>
                </if>
                <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                    <if test="RDO == &quot;1&quot;">
                        ORDER BY AC_DATA ASC    
                    </if>
                    <if test="RDO == &quot;2&quot;">
                        ORDER BY AC_NAME ASC    
                    </if>                    
                </if>                
            </if>
            
            <if test="@foren.Ognl@isEmpty(RDO)">
                <if test="@foren.Ognl@isNotEmpty(USER_DEFINE_CODE)">
                    AND     AC_DATA     = #{USER_DEFINE_CODE}  
                </if>
                <if test="@foren.Ognl@isNotEmpty(USER_DEFINE_NAME)">
                    AND     AC_NAME         = #{USER_DEFINE_NAME}          
                </if>    
            </if> 
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.moneyUnitPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [MONEY_UNIT, MONEY_UNIT_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON            
             
            SELECT MONEY_UNIT            AS MONEY_UNIT
                 , NVL(STATE_CODE,'') AS COUNTRY_CODE
                 , NVL(STATE_NAME,'') AS COUNTRY_NAME
              FROM ABA150T A                      
             WHERE A.COMP_CODE     = #{S_COMP_CODE}
             
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (MONEY_UNIT LIKE #{TXT_SEARCH} + '%'                             
                 OR STATE_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 ORDER BY MONEY_UNIT ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
                AND (MONEY_UNIT LIKE #{MONEY_UNIT} + '%'                             
                 OR STATE_NAME LIKE '%'+ #{MONEY_UNIT} + '%' )                
                </if>            
              </if>              
            
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>    
    
    <select id="popupServiceImpl.codeLevel" parameterType="Map" resultType="rMap">        /* CODE_LEVEL 갯수*/
    --UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query01
    SELECT NVL(CODE_LEVEL,0) CODE_LEVEL
      FROM AFB300T 
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND BASE_CODE = N'01'
       AND AC_YYYY   = #{AC_YYYY}
    </select>
    
    <!-- 예산사업년도 -->
    <select id="popupServiceImpl.selectAcYyyy_01" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.selectAcYyyy_01 */
    SELECT fnGetBudgAcYyyy(#{S_COMP_CODE}, TO_CHAR( SYSDATE, 'YYYYMMDD')) AS AC_YYYY
    </select>
    <!-- 예산사업년도 -->
    <select id="popupServiceImpl.selectAcYyyy_02" parameterType="Map" resultType="rMap">
    /* popupServiceImpl.selectAcYyyy_02 */
    SELECT fnGetBudgAcYyyy(#{S_COMP_CODE}, #{AC_YYYY}) AS AC_YYYY
    </select>

    <!-- 예산코드자릿수 가져오기 -->
    <select id="popupServiceImpl.budgPopup_01" parameterType="Map" resultType="rMap">
    --  [ 예산코드자릿수 가져오기 ]
        SELECT NVL(LEVEL_NUM1, 0)                                                                          AS LEVEL_LEN1
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0)                                                     AS LEVEL_LEN2
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0)                                AS LEVEL_LEN3
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)           AS LEVEL_LEN4
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
               + NVL(LEVEL_NUM5, 0)                                                                        AS LEVEL_LEN5
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
               + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0)                                                   AS LEVEL_LEN6
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
               + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0)                              AS LEVEL_LEN7
             , NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
               + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0) + NVL(LEVEL_NUM8, 0)         AS LEVEL_LEN8
             , TO_CHAR(RANDOM(), '0000000000') + TO_CHAR(SYSDATETIME, 'YYYYMMDDHH24MISSFF') + TO_CHAR(RANDOM()%10000, '00000') AS TYPE_KEY
          FROM AFB300T 
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND AC_YYYY   = #{AC_YYYY}
    </select>
    
    <!-- 데이터 생성 -->
    <select id="popupServiceImpl.budgPopup_02" parameterType="Map" resultType="rMap">
    --  [ 데이터 생성 ]
        -- 1. 예산코드를 레벨별코드까지 임시테이블에 INSERT
        INSERT INTO T_BUDGCODE  (TYPE_KEY  , TYPE_FLAG , COMP_CODE , AC_YYYY   , BUDG_CODE, BUDG_NAME, DEPT_CODE, ACCNT, PJT_CODE
                               , USE_YN    , GROUP_YN  , CODE_LEVEL, BUDG_TYPE
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                               , BUDG_CODE_${index+1} 
        </foreach>
                                )
        SELECT #{TYPE_KEY}                                                   AS TYPE_KEY
             , '0'                                                           AS TYPE_FLAG
             , A.COMP_CODE                                                   AS COMP_CODE
             , #{AC_YYYY}                                                    AS AC_YYYY
             , A.BUDG_CODE                                                   AS BUDG_CODE
             , A.BUDG_NAME                                                   AS BUDG_NAME
             , NVL(B.DEPT_CODE, #{DEPT_CODE})                                AS DEPT_CODE
             , CASE WHEN NVL(A.GROUP_YN, 'N') = 'Y' THEN ''
                                                    ELSE (CASE WHEN #{DEPT_CODE} = '' THEN A.ACCNT
                                                                                      ELSE B.ACCNT
                                                          END)
               END                                                           AS ACCNT
             , CASE WHEN NVL(B.PJT_CODE, '') = '' THEN A.PJT_CODE
                                                  ELSE B.PJT_CODE
               END                                                           AS PJT_CODE
             , CASE WHEN #{DEPT_CODE} = '' THEN 'Y'
                                           ELSE NVL(B.USE_YN     , 'N')
               END                                                           AS USE_YN
             , NVL(A.GROUP_YN, 'N')                                          AS GROUP_YN
             , A.CODE_LEVEL                                                  AS CODE_LEVEL
             , A.BUDG_TYPE                                                   AS BUDG_TYPE
        
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
             , LEFT(A.BUDG_CODE, '${budgNameInfo}' )                    AS BUDG_CODE_${index+1}
        </foreach>
        FROM              AFB400T AS A 
               LEFT  JOIN AFB410T AS B  ON B.COMP_CODE    = A.COMP_CODE
                                       AND B.AC_YYYY      = A.AC_YYYY
                                       AND B.BUDG_CODE    = A.BUDG_CODE
                                       AND B.DEPT_CODE    = #{DEPT_CODE}
        WHERE  A.COMP_CODE       = #{S_COMP_CODE}
          AND    A.AC_YYYY       = #{AC_YYYY}
        <if test="@foren.Ognl@isNotEmpty(ACCNT)">    
          AND  A.ACCNT           =     #{ACCNT}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
          AND (A.BUDG_CODE LIKE #{TXT_SEARCH} + '%'                             
             OR A.BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
        </if>
        <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
          AND (A.BUDG_CODE LIKE #{BUDG_CODE} + '%'                             
             OR A.BUDG_NAME LIKE '%'+ #{BUDG_CODE} + '%' )            
            </if>
            <if test="@foren.Ognl@isNotEmpty(BUDG_NAME_L1)">
          AND (A.BUDG_CODE LIKE #{BUDG_NAME_L1} + '%'                             
             OR A.BUDG_NAME LIKE '%'+ #{BUDG_NAME_L1} + '%' )        
            </if>                
        </if>    
          AND    A.CODE_LEVEL  &gt;= 1
    
    </select>
    
    <!-- 예산코드 데이터 가져오기 -->
    <select id="popupServiceImpl.budgPopup_03" parameterType="Map" resultType="rMap">

        -- 2. Main Query
        SELECT *
          FROM (
                SELECT T1.BUDG_CODE
        
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                     , L${index+1}.BUDG_NAME AS BUDG_NAME_L${index+1}
        </foreach>
                     , T1.ACCNT
                     , D1.ACCNT_NAME
                     , T1.DEPT_CODE
                     , D2.TREE_NAME           AS DEPT_NAME
                     , T1.USE_YN
                     , T1.GROUP_YN
                     , T1.CODE_LEVEL
                     , T1.PJT_CODE
                     , D3.PJT_NAME
                     , D3.SAVE_CODE
                     , D4.SAVE_NAME
                     , D4.BANK_ACCOUNT        AS BANK_ACCOUNT
                     , D4.BANK_CODE
                     , D5.CUSTOM_NAME         AS BANK_NAME
                     , T1.BUDG_TYPE
                  FROM         T_BUDGCODE AS T1
    
        
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                       LEFT  JOIN AFB400T AS L${index+1}  
                                          ON L${index+1} .COMP_CODE     = T1.COMP_CODE
                                         AND L${index+1} .AC_YYYY       = T1.AC_YYYY
                                         AND L${index+1} .CODE_LEVEL    =  ${index+1}
                                         AND L${index+1} .BUDG_CODE     = T1.BUDG_CODE_${index+1} 
        </foreach>
            
    
                       LEFT  JOIN ABA400T AS D1  ON D1.COMP_CODE     = T1.COMP_CODE
                                                AND D1.ACCNT         = T1.ACCNT
                       LEFT  JOIN BSA210T AS D2  ON D2.COMP_CODE     = T1.COMP_CODE
                                                AND D2.TREE_CODE     = T1.DEPT_CODE
                       LEFT  JOIN BCM600T AS D3  ON D3.COMP_CODE     = T1.COMP_CODE
                                                AND D3.PJT_CODE      = T1.PJT_CODE
                       LEFT  JOIN AFS100T AS D4  ON D4.COMP_CODE     = D3.COMP_CODE
                                                AND D4.SAVE_CODE     = D3.SAVE_CODE
                       LEFT  JOIN BCM100T AS D5  ON D5.COMP_CODE     = D4.COMP_CODE
                                                AND D5.CUSTOM_CODE   = D4.BANK_CODE
                 WHERE   T1.TYPE_KEY     = #{TYPE_KEY}
                   AND   T1.TYPE_FLAG    = '0'
               ) AS A
         WHERE 1 = 1
        
        <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
            AND ${ADD_QUERY}
        </if>

    </select>
    
    <update id="popupServiceImpl.budgPopup_04" parameterType="Map">
    /* popupServiceImpl.budgPopup_04 */
    DELETE FROM T_BUDGCODE WHERE TYPE_KEY = #{TYPE_KEY}
    </update>
    
    
    <select id="popupServiceImpl.deptTreeList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
        /* popupServiceImpl.popupTreeList */
        SELECT S.ID                     AS "id"
             , S.PARENT_NODE             AS "parentId"
             , TREE_CODE                                     
             , TREE_NAME                                     
             , TREE_LEVEL                                    
             , TYPE_LEVEL
             , SECTION_CD                                    
             , USE_YN                                        
             , SORT_SEQ 
             , ''                         AS UPLEVE_CODE                              
             , COMP_CODE 
             , TREE_NAME                  AS text
             , 0    AS checked
        FROM (
            SELECT A.TREE_LEVEL ID
                 , CASE WHEN LENGTH(a.TREE_LEVEL) = 1   THEN 'root' 
                                                      ELSE SUBSTRING(a.tree_level, 1, LENGTH(a.TREE_LEVEL) - 3)
                    END                 AS PARENT_NODE
                 , A.*
              FROM BSA210T A 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(USE_YN)">
               AND A.USE_YN = #{USE_YN}
            </if>
            )                              AS S
        ORDER BY S.id

    </select>    
    
    <select id="popupServiceImpl.pjtTreeList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
        /* popupServiceImpl.popupProjectList */
        SELECT S.ID AS "id"
             , S.PARENT_NODE                 AS "parentId"
             , PJT_CODE                        --TREE_CODE(사업코드)                                     
             , PJT_NAME                        --TREE_NAME(사업명)                           
             , TREE_LEVEL 
             , DEPT_CODE
             , DEPT_NAME    
             , PERSON_NUMB
             , USE_YN                                        
             , ''                             AS UPLEVE_CODE                              
             , COMP_CODE 
             , PJT_NAME                      AS text
             , CONVERT(BIT, 'FALSE')         AS checked
        FROM (
            SELECT a.TREE_LEVEL ID
                 , CASE 
                    WHEN LEN(a.TREE_LEVEL) = 1
                        THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
                    ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
                    END                     AS parent_node
                 , A.*
              FROM BCM600T A 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(USE_YN)">
               AND A.USE_YN = #{USE_YN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND  (
                           A.PJT_CODE LIKE '%' + #{TXT_SEARCH} + '%'
                       OR    A.PJT_NAME LIKE '%' + #{TXT_SEARCH} + '%'
                       )
            </if>
            )                                  AS S
        ORDER BY S.id
    </select>    
    <select id="popupServiceImpl.pjtTreeList2" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
        /* popupServiceImpl.popupProjectList */
        SELECT S.ID AS "id"
             , S.PARENT_NODE                 AS "parentId"
             , PJT_CODE                        --TREE_CODE(사업코드)                                     
             , PJT_NAME                        --TREE_NAME(사업명)                           
             , TREE_LEVEL 
             , DEPT_CODE
             , DEPT_NAME    
             , PERSON_NUMB
             , USE_YN                                        
             , ''                             AS UPLEVE_CODE                              
             , COMP_CODE 
             , PJT_NAME                      AS text
             , CONVERT(BIT, 'FALSE')         AS checked
        FROM (
            SELECT a.TREE_LEVEL ID
                 , CASE 
                    WHEN LEN(a.TREE_LEVEL) = 1
                        THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
                    ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
                    END                     AS parent_node
                 , A.*
              FROM BCM600T A 
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND A.USE_YN = 'Y'
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
               AND  (
                           A.PJT_CODE LIKE '%' + #{TXT_SEARCH} + '%'
                       OR    A.PJT_NAME LIKE '%' + #{TXT_SEARCH} + '%'
                       )
            </if>
            )                                  AS S
        ORDER BY S.id
    </select>    
    <select id="popupServiceImpl.pjtPopupW" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.popupProjectListW */
        SELECT TOP 1 A.PJT_CODE                                                             
             , A.PJT_NAME                                                             
             , DEPT_CODE
             , DEPT_NAME    
             , PERSON_NUMB
          FROM BCM600T A                                                  
         WHERE A.USE_YN = 'Y' 
           AND A.COMP_CODE = #{S_COMP_CODE}

        <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
           AND (A.PJT_CODE LIKE '%'+ #{PJT_CODE} + '%'                             
            OR A.PJT_NAME LIKE '%'+ #{PJT_CODE} + '%' )    
        </if>
        <if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
           AND (A.PJT_CODE LIKE '%'+ #{PJT_NAME} + '%'                             
            OR A.PJT_NAME LIKE '%'+ #{PJT_NAME} + '%' )       
        </if>                
          ORDER BY A.TREE_LEVEL
    </select>


    <select id="popupServiceImpl.nonTaxPopup" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
        --uniLITE5Popup.CPopup[fnGetNonTaxCode] Query01                           
        SELECT NONTAX_CODE                                        
             , NONTAX_CODE_NAME                                   
             , PRINT_LOCATION                                     
             , SEND_YN                                            
          FROM HBS120T                               
         WHERE COMP_CODE = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(PAY_YM_FR)"> 
           AND TAX_YYYY  = #{PAY_YM_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(NONTAX_CODE)">
           AND NONTAX_CODE  LIKE #{NONTAX_CODE} + '%'
        </if>
    </select>
    
        
    <select id="popupServiceImpl.payCustomPopup" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnAPopUp [PAY_CUSTOM_CD, PAY_CUSTOM_NM]
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            SELECT A.PAY_CUSTOM_CODE  
                 , A.PAY_CUSTOM_NAME  
                 , A.COMPANY_NUM
                 , NVL(C.CUSTOM_NAME  , '')                     AS    CUSTOM_NAME
                 , uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') AS BANKBOOK_NUM
                 , NVL(A.BANKBOOK_NAME, '')                  AS BANKBOOK_NAME
                 , B.CODE_NAME   
                 , NVL(A.BANK_CODE    , '')                     AS BANK_CODE

              FROM      ABH200TV A  
              LEFT JOIN BSA100T  B  ON B.COMP_CODE   = A.COMP_CODE
                                  AND B.MAIN_CODE   = N'A210'  
                                  AND B.SUB_CODE    = A.PEND_CODE
              LEFT JOIN BCM100T  C  ON C.COMP_CODE   = A.COMP_CODE
                                  AND C.CUSTOM_TYPE = N'4'      
                                  AND C.CUSTOM_CODE = A.BANK_CODE

             WHERE A.COMP_CODE    = #{S_COMP_CODE}
             <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
                 AND (A.PAY_CUSTOM_CODE LIKE #{TXT_SEARCH} + '%'                             
                 OR A.PAY_CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
                 <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
                    AND A.PEND_CODE = #{PEND_CODE}
                </if>
                 
                 ORDER BY A.PAY_CUSTOM_CODE ASC
             </if>
             <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(PAY_CUSTOM_CODE)">
                AND (A.PAY_CUSTOM_CODE LIKE #{PAY_CUSTOM_CODE} + '%'                             
                 OR A.PAY_CUSTOM_NAME LIKE '%'+ #{PAY_CUSTOM_CODE} + '%' )      
                 <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
                    AND A.PEND_CODE = #{PEND_CODE}
                </if>
                       
                </if>
                 <if test="@foren.Ognl@isNotEmpty(PAY_CUSTOM_NAME)">
                AND (A.PAY_CUSTOM_CODE LIKE #{PAY_CUSTOM_NAME} + '%'                             
                 OR A.PAY_CUSTOM_NAME LIKE '%'+ #{PAY_CUSTOM_NAME} + '%' ) 
                 <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
                    AND A.PEND_CODE = #{PEND_CODE}
                </if>
                    
                </if>                
             </if>        
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    <select id="popupServiceImpl.compPopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.compPopup */
        SELECT COMP_CODE
              ,COMP_NAME
              ,REPRE_NAME
              ,COMPANY_NUM
              ,TELEPHON
          FROM      BOR100T 
         WHERE 1=1
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
           AND (COMP_CODE   LIKE #{TXT_SEARCH} + '%' 
            OR  COMP_NAME LIKE '%' + #{TXT_SEARCH} + '%')
         </if>
         <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
                <if test="USELIKE == false">
                    AND (COMP_CODE = #{COMP_CODE}
                    OR COMP_NAME = #{COMP_CODE})   
                </if>
                <if test="USELIKE != false">
                    AND (COMP_CODE LIKE #{COMP_CODE}+'%'
                    OR  COMP_NAME LIKE '%'+ #{COMP_CODE} + '%')
                </if>
          </if>
          <if test="@foren.Ognl@isNotEmpty(COMP_NAME)">
                <if test="USELIKE == false">
                    AND (COMP_CODE = #{COMP_NAME}
                    OR COMP_NAME = #{COMP_NAME})  
                </if>
                <if test="USELIKE != false">
                    AND (COMP_CODE LIKE #{COMP_NAME}+'%'
                    OR  COMP_NAME LIKE '%'+ #{COMP_NAME} + '%')
                </if>
          </if>
          <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
            AND ${ADD_QUERY}
          </if>
         ORDER BY COMP_CODE ASC      
    </select>  
    
    <select id="popupServiceImpl.confRecePopup" parameterType="Map" resultType="rMap">
        /* popupServiceImpl.confRecePopup */
        SELECT 
             A.RECE_COMP_CODE
           , B.COMP_NAME AS RECE_COMP_NAME
           , A.CONF_RECE_NO  
           , A.CUSTOM_CODE
           , C.CUSTOM_NAME AS CONF_RECE_CUSTOM_NAME
           , A.RECE_AMT      
        
          FROM       ARC200T A 
          LEFT  JOIN BOR100T B  ON B.COMP_CODE   = A.RECE_COMP_CODE
          LEFT  JOIN BCM100T C  ON C.COMP_CODE   = A.COMP_CODE  
                                            AND C.CUSTOM_CODE = A.CUSTOM_CODE  
         WHERE 
                A.COMP_CODE = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
           AND (A.CONF_RECE_NO    LIKE #{TXT_SEARCH} + '%' 
            OR  C.CUSTOM_NAME LIKE '%' + #{TXT_SEARCH} + '%')
         </if>
         <if test="@foren.Ognl@isNotEmpty(CONF_RECE_NO)">
                <if test="USELIKE == false">
                    AND (A.CONF_RECE_NO  = #{CONF_RECE_NO}
                     OR  C.CUSTOM_NAME  = #{CONF_RECE_NO})
                </if>
                <if test="USELIKE != false">
                    AND (A.CONF_RECE_NO LIKE #{CONF_RECE_NO}+'%'
                    OR  C.CUSTOM_NAME LIKE '%'+ #{CONF_RECE_NO} + '%')
                </if>
          </if>
          <if test="@foren.Ognl@isNotEmpty(CONF_RECE_CUSTOM_NAME)">
                <if test="USELIKE == false">
                    AND (A.CONF_RECE_NO  = #{CONF_RECE_CUSTOM_NAME}
                     OR  C.CUSTOM_NAME  = #{CONF_RECE_CUSTOM_NAME})
                </if>
                <if test="USELIKE != false">
                    AND (A.CONF_RECE_NO LIKE #{CONF_RECE_CUSTOM_NAME}+'%'
                    OR  C.CUSTOM_NAME LIKE '%'+ #{CONF_RECE_CUSTOM_NAME} + '%')
                </if>
          </if>
         ORDER BY A.CONF_RECE_NO ASC      
    </select>   
     
    <select id="popupServiceImpl.purchaseCardPopup" parameterType="Map" resultType="rMap">
        SELECT PURCHASE_CARD_NUM      
             , PURCHASE_CARD_NAME 
          FROM AFS200T                              
         WHERE COMP_CODE = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(PURCHASE_CARD_NUM)">    
           AND (PURCHASE_CARD_NUM  LIKE '%' + #{PURCHASE_CARD_NUM} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{PURCHASE_CARD_NUM} + '%')
        </if>
        <if test="@foren.Ognl@isNotEmpty(PURCHASE_CARD_NAME)">    
           AND (PURCHASE_CARD_NUM  LIKE '%' + #{PURCHASE_CARD_NAME} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{PURCHASE_CARD_NAME} + '%')
        </if>
        <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">    
           AND (PURCHASE_CARD_NUM  LIKE '%' + #{TXT_SEARCH} + '%'   OR   PURCHASE_CARD_NAME LIKE '%' + #{TXT_SEARCH} + '%')
        </if>
         ORDER BY PURCHASE_CARD_NUM ASC 
    </select>
    
    <select id="popupServiceImpl.advmReqSlipNo" parameterType="Map" resultType="rMap">  
      SELECT * 
        FROM 
              (SELECT ROW_NUMBER() OVER (ORDER BY ADVM_REQ_SLIP_NO ) AS rownum
                    , '0' AS chk
                    , ADVM_REQ_SLIP_NO
                    , NAME
                    , SLIP_AMT
                    , VENDOR_ID
                    , VENDOR_NM
                    , VENDOR_SITE_CD
                    , VENDOR_SITE_ID
                    , PAY_TERMS_CD
                    , PAY_METO_CD
                    , SLIP_DESC
                    , ADVM_REQ_EMP_ID
               FROM (SELECT AH.ELEC_SLIP_NO AS ADVM_REQ_SLIP_NO
                          , EMP.NAME
                          , SH2.INSERT_DB_USER AS ADVM_REQ_EMP_ID
                          , SH2.SLIP_DESC
                          , REPLACE(CONVERT(VARCHAR,CONVERT(MONEY,AH.SLIP_AMT),1),'.00','') AS SLIP_AMT
                          , SH2.VENDOR_ID
                          , SH2.VENDOR_NM
                          , SH2.VENDOR_SITE_CD
                          , SH2.VENDOR_SITE_ID
                          , VX.TERMS_ID AS PAY_TERMS_CD
                          , VX.PAYMENT_METHOD_LOOKUP_CODE AS PAY_METO_CD 
                     FROM              TB_ES_ADV_HD   AH 
                            INNER JOIN TB_ES_ADV_DT   AD  ON AD.ELEC_SLIP_NO       = AH.ELEC_SLIP_NO
                                                                     AND AD.ADVM_ELEC_SLIP_NO &gt; '0'      
                            INNER JOIN TB_ES_SLIP_HD SH2  ON SH2.COMP_CODE         = AH.COMP_CODE
                                                                     AND SH2.ELEC_SLIP_NO      = AH.ELEC_SLIP_NO
                                                                     AND SH2.SLIP_STAT_CD      = '60'   
                            INNER JOIN TB_ES_SLIP_DT  SD  ON SD.COMP_CODE          = SH2.COMP_CODE
                                                                     AND SD.ELEC_SLIP_NO       = SH2.ELEC_SLIP_NO
                                                                     AND SD.LINE_TYPE_CD       = 'ITEM'
                                                                     AND SD.DC_DIV_CD          = 'D'
                            INNER JOIN BCM100T        VX  ON VX.COMP_CODE          = SH2.COMP_CODE
                                                                     AND VX.CUSTOM_CODE        = SH2.VENDOR_ID
                                                                     AND AH.ADVM_EXCT_STAT_CD  = '10'
                            LEFT  JOIN BSA300T       USR  ON USR.COMP_CODE         = SH2.COMP_CODE
                                                                     AND USR.USER_ID           = SH2.INSERT_DB_USER
                            LEFT  JOIN HUM100T       EMP  ON EMP.COMP_CODE         = USR.COMP_CODE
                                                                     AND EMP.PERSON_NUMB       = USR.PERSON_NUMB                                
                                                            
                    WHERE SH2.COMP_CODE = #{S_COMP_CODE}
                     
              ) TOT     
              
        WHERE 1=1  
        <if test="@foren.Ognl@isNotEmpty(ADVM_REQ_SLIP_NO)"> 
            AND (ADVM_REQ_SLIP_NO LIKE '%'+#{ADVM_REQ_SLIP_NO}+'%')
        </if> 
        ) RST
        
    </select>

    <select id="popupServiceImpl.comAba210Popup" parameterType="Map" resultType="rMap">
    SELECT AC_CD
         , AC_DATA                  AS COM_ABA210_CODE
         , AC_NAME                   AS COM_ABA210_NAME
         , NVL(REF_CODE1, '')    AS REF_CODE1
         , NVL(REF_CODE2, '')    AS REF_CODE2
      FROM ABA210T                        
     WHERE COMP_CODE    = #{S_COMP_CODE}
       AND AC_CD        = #{SUB_CODE}            
       
     <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">                
         AND (AC_DATA LIKE #{TXT_SEARCH} + '%'                             
         OR AC_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(COM_ABA210_CODE)">
        AND (AC_DATA LIKE #{COM_ABA210_CODE} + '%'                             
         OR AC_NAME LIKE '%'+ #{COM_ABA210_CODE} + '%' )                
        </if>
        <if test="@foren.Ognl@isNotEmpty(COM_ABA210_NAME)">
        AND (AC_DATA LIKE #{COM_ABA210_NAME} + '%'                             
         OR AC_NAME LIKE '%'+ #{COM_ABA210_NAME} + '%' )        
        </if>                
     </if>
     ORDER BY AC_CD, AC_DATA
    </select>
    
    <select id="popupServiceImpl.comAba900Popup" parameterType="Map" resultType="rMap">
    /* 미결항목*/
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON
            
            SELECT ACCNT              AS ORG_ACCNT
                 , A.ACCNT_NAME          AS ORG_ACCNT_NAME    
                 , ORG_AC_DATE
                 , ORG_SLIP_NUM
                 , ORG_SLIP_SEQ
                 , PEND_CODE
                 
                 , PEND_NAME
                 , PEND_DATA_CODE
                 , PEND_DATA_NAME 
                 , ORG_AMT_I
                 , BLN_I
                 , DEPT_CODE
                 , DEPT_NAME
              FROM (
                    SELECT A.ACCNT
                         , F.ACCNT_NAME ACCNT_NAME
                         , CASE WHEN LEN(NVL(A.ORG_AC_DATE, '')) = 8 THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE)
                                WHEN LEN(NVL(A.ORG_AC_DATE, '')) = 6 THEN UNILITE.fnGetUserTypeDate(A.COMP_CODE, A.ORG_AC_DATE, 'M')
                                ELSE '' 
                            END AS ORG_AC_DATE
                         , A.ORG_SLIP_NUM
                         , A.ORG_SLIP_SEQ
                         , A.PEND_CODE
                         , NVL(D.AC_NAME,'') PEND_NAME
                         , A.PEND_DATA_CODE
                         , NVL(N3.AC_NAME, '') PEND_DATA_NAME
                         , A.ORG_AMT_I
                         , NVL(A.ORG_AMT_I,0) - NVL(A.J_AMT_I,0) BLN_I
                         , A.DEPT_CODE
                         , A.DEPT_NAME
                      FROM         AGB300T  AS A  
                        INNER JOIN BOR120T  AS B   ON  B.COMP_CODE  = A.COMP_CODE
                                                                AND B.DIV_CODE   = A.DIV_CODE
                        INNER JOIN AGJ210T  AS C   ON  C.COMP_CODE  = A.COMP_CODE
                                                                AND C.AC_DATE    = A.ORG_AC_DATE
                                                                AND C.SLIP_NUM   = A.ORG_SLIP_NUM
                                                                AND C.SLIP_SEQ   = A.ORG_SLIP_SEQ
                                                                AND C.ACCNT      = A.ACCNT   
                                                                AND NVL(C.MOD_DIVI,'')=''
                        LEFT  JOIN (SELECT  COMP_CODE
                                         ,  ORG_AC_DATE
                                         ,  ORG_SLIP_NUM
                                         ,  ORG_SLIP_SEQ
                                         ,  ACCNT
                                         ,  SUM(NVL(J_AMT_I    , 0)) AS J_AMT_I
                                         ,  SUM(NVL(FOR_J_AMT_I, 0)) AS FOR_J_AMT_I
                                    FROM    AGB320T 
                                    WHERE   COMP_CODE           = #{S_COMP_CODE}
                                    AND     NVL(J_AC_DATE,'')= ''
                                    GROUP BY COMP_CODE, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ, ACCNT
                                   )        AS G                ON  G.COMP_CODE    = A.COMP_CODE
                                                                AND G.ORG_AC_DATE  = A.ORG_AC_DATE
                                                                AND G.ORG_SLIP_NUM = A.ORG_SLIP_NUM
                                                                AND G.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ
                                                                AND G.ACCNT        = A.ACCNT
                        LEFT JOIN ABA200T  AS D   ON  D.COMP_CODE    = A.COMP_CODE
                                                                AND D.AC_CD        = A.PEND_CODE
                        INNER JOIN ABA400T  AS F   ON  F.COMP_CODE    = A.COMP_CODE
                                                                AND F.ACCNT        = A.ACCNT
                        LEFT  JOIN ABA200TV AS N3  ON  N3.COMP_CODE   = A.COMP_CODE
                                                                AND N3.AC_CODE     = A.PEND_CODE 
                                                                AND N3.AC_DATA     = A.PEND_DATA_CODE
                        LEFT JOIN BSA100T   AS Z1  ON  Z1.COMP_CODE   = C.COMP_CODE
                                                                AND Z1.MAIN_CODE   = 'A009'
                                                                AND Z1.REF_CODE1   = C.INPUT_USER_ID
                     WHERE A.COMP_CODE    = #{S_COMP_CODE}
                       AND LEN(A.ORG_AC_DATE) != 6
                       AND (NVL(A.FOR_BLN_I,0) != 0 OR NVL(A.BLN_I,0) != 0)

                    <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
                         AND A.ACCNT LIKE '%'+ #{ACCNT_CODE} + '%'
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
                         AND F.ACCNT_NAME LIKE '%'+ #{ACCNT_NAME} + '%'
                    </if>
                    
                    <if test="@foren.Ognl@isNotEmpty(AC_DATE_FR)">
                         AND A.ORG_AC_DATE &gt;= #{AC_DATE_FR}
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(AC_DATE_TO)">
                        AND A.ORG_AC_DATE &lt;= #{AC_DATE_TO}
                    </if>
                    

                    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
                        AND  C.IN_DEPT_CODE LIKE  '%' + #{DEPT_CODE} + '%'
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
                        AND  C.IN_DEPT_NAME LIKE  '%' + #{DEPT_NAME} + '%'
                    </if>

             UNION 
            
                    SELECT A.ACCNT
                         , F.ACCNT_NAME ACCNT_NAME
                         , CASE WHEN LEN(NVL(A.ORG_AC_DATE, '')) = 8 THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE)
                                WHEN LEN(NVL(A.ORG_AC_DATE, '')) = 6 THEN UNILITE.fnGetUserTypeDate(A.COMP_CODE, A.ORG_AC_DATE, 'M')
                                ELSE '' 
                            END AS ORG_AC_DATE
                         , A.ORG_SLIP_NUM
                         , A.ORG_SLIP_SEQ
                         , A.PEND_CODE
                         , NVL(D.AC_NAME,'') PEND_NAME
                         , A.PEND_DATA_CODE
                         , NVL(N3.AC_NAME, '') PEND_DATA_NAME
                         , A.ORG_AMT_I
                         , NVL(A.ORG_AMT_I,0) - NVL(A.J_AMT_I,0) BLN_I
                         , A.DEPT_CODE
                         , A.DEPT_NAME
                      FROM         AGB300T  AS A  
                        INNER JOIN BOR120T  AS B   ON  B.COMP_CODE    = A.COMP_CODE
                                                                AND B.DIV_CODE     = A.DIV_CODE
                        INNER JOIN AGB200T  AS C   ON  C.COMP_cODE    = A.COMP_CODE
                                                                AND C.AC_DATE      = A.ORG_AC_DATE
                                                                AND C.ACCNT        = A.ACCNT
                                                                AND C.DEPT_CODE    = A.DEPT_CODE
                                                                AND ((C.BOOK_CODE1 = A.PEND_CODE AND
                                                                      C.BOOK_DATA1 = A.PEND_DATA_CODE) 
                                                                OR   (C.BOOK_CODE2 = A.PEND_CODE AND
                                                                      C.BOOK_DATA2 = A.PEND_DATA_CODE))
                        LEFT  JOIN (SELECT  COMP_CODE
                                         ,  ORG_AC_DATE
                                         ,  ORG_SLIP_NUM
                                         ,  ORG_SLIP_SEQ
                                         ,  ACCNT
                                         ,  SUM(NVL(J_AMT_I    , 0)) AS J_AMT_I
                                         ,  SUM(NVL(FOR_J_AMT_I, 0)) AS FOR_J_AMT_I
                                    FROM    AGB320T 
                                    WHERE   COMP_CODE           = #{S_COMP_CODE}
                                    AND     NVL(J_AC_DATE,'')= ''
                                    GROUP BY COMP_CODE, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ, ACCNT
                                   )        AS G                ON  G.COMP_CODE      = A.COMP_CODE
                                                                AND G.ORG_AC_DATE    = A.ORG_AC_DATE
                                                                AND G.ORG_SLIP_NUM   = A.ORG_SLIP_NUM
                                                                AND G.ORG_SLIP_SEQ   = A.ORG_SLIP_SEQ
                                                                AND G.ACCNT          = A.ACCNT
                        LEFT JOIN ABA200T  AS D   ON  D.COMP_CODE    = A.COMP_CODE
                                                                AND D.AC_CD        = A.PEND_CODE
                        INNER JOIN ABA400T  AS F   ON  F.COMP_CODE    = A.COMP_CODE
                                                                AND F.ACCNT        = A.ACCNT
                        LEFT  JOIN BCM100T  AS N1  ON  N1.COMP_cODE   = C.COMP_CODE
                                                                AND N1.CUSTOM_CODE = C.BOOK_DATA1
                        LEFT  JOIN BCM100T  AS N2  ON  N2.COMP_CODE   = C.COMP_CODE
                                                                AND N2.CUSTOM_CODE = C.BOOK_DATA2
                        LEFT  JOIN ABA200TV AS N3  ON  N3.COMP_CODE   = A.COMP_CODE 
                                                                AND N3.AC_CODE     = A.PEND_CODE 
                                                                AND N3.AC_DATA     = A.PEND_DATA_CODE
                        LEFT  JOIN ABA200TV AS N4  ON  N4.COMP_CODE   = C.COMP_CODE
                                                                AND N4.AC_CODE     = C.BOOK_CODE1
                                                                AND N4.AC_DATA     = C.BOOK_DATA1
                        LEFT  JOIN ABA200TV AS N5  ON  N5.COMP_CODE   = C.COMP_CODE
                                                                AND N5.AC_CODE     = C.BOOK_CODE2
                                                                AND N5.AC_DATA     = C.BOOK_DATA2
                     WHERE A.COMP_CODE          = #{S_COMP_CODE}
                       AND LEN(A.ORG_AC_DATE)   = 6
                       AND (NVL(A.FOR_BLN_I,0) != 0 OR NVL(A.BLN_I,0) != 0)
                    
                    <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
                        AND A.ACCNT LIKE '%'+#{ACCNT_CODE}+'%'
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
                        AND F.ACCNT_NAME LIKE '%'+#{ACCNT_NAME}+'%'
                    </if>

                    <if test="@foren.Ognl@isNotEmpty(AC_DATE_FR)">
                        AND A.ORG_AC_DATE &gt;= #{AC_DATE_FR}
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(AC_DATE_TO)">
                        AND A.ORG_AC_DATE &lt;= #{AC_DATE_TO}
                    </if>
                   
                    ) A        
                    
       INNER JOIN ( SELECT  NVL(A.ACCNT       ,'')                           AS ACCNT_CODE
                          , CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                                 WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
                            END                                                 AS ACCNT_CD
                          , NVL(B.ACCNT_NAME  ,'')                           AS ACCNT_CD_NAME
                          , NVL(A.ACCNT_NAME  ,'')                           AS ACCNT_NAME
                          , NVL(A.AC_FULL_NAME,'')                           AS AC_FULL_NAME
                    FROM                ABA400T   A  
                            LEFT  JOIN  (
                                        SELECT  COMP_CODE
                                              , ACCNT
                                              , ACCNT_NAME
                                        FROM    ABA400T 
                                        )         B               ON B.COMP_CODE    = A.COMP_CODE
                                                                 AND B.ACCNT        = (CASE WHEN A.SUBJECT_DIVI = '1' THEN A.ACCNT
                                                                                            WHEN A.SUBJECT_DIVI = '2' THEN A.ACCNT_CD
                                                                                       END)
                                                                                       
                                                                                       
                              
                    WHERE   A.COMP_CODE      = #{S_COMP_CODE}
                      AND   A.ACCNT != '99999'
                      AND   SLIP_SW = 'Y' AND PROFIT_DIVI = 'A' AND GROUP_YN = 'N'    ) Z ON Z.ACCNT_CODE = A.ACCNT                
                   
                    WHERE 1=1
                    <!--
                    <if test="@foren.Ognl@isNotEmpty(PEND_DATA_CODE)">
                    AND  A.PEND_DATA_CODE LIKE '%' + #{PEND_DATA_CODE} + '%'
                    </if>
                    <if test="@foren.Ognl@isNotEmpty(PEND_DATA_NAME)">
                    AND  A.PEND_DATA_NAME LIKE  '%' + #{PEND_DATA_NAME} + '%'
                    </if>
                    -->     
                    
             ORDER BY A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ  
             
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
    
    <select id="popupServiceImpl.claimPopup" parameterType="Map" resultType="rMap">
    /* 데이터 조회 */
    SELECT A.DIV_CODE               AS DIV_CODE
         , A.CUSTOM_CODE            AS CUSTOM_CODE
         , B.CUSTOM_NAME            AS CUSTOM_NAME
         , A.CLAIM_NO               AS CLAIM_NO
         , A.CLAIM_DATE             AS CLAIM_DATE
      FROM      S_SCL900T_KD    A   
      LEFT JOIN BCM100T      AS B  ON B.COMP_CODE      = A.COMP_CODE
                                               AND B.CUSTOM_CODE    = A.CUSTOM_CODE
     WHERE A.COMP_CODE      = #{S_COMP_CODE}
       AND A.DIV_CODE       = #{DIV_CODE}
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
       AND A.CUSTOM_CODE    = #{CUSTOM_CODE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(CLAIM_DATE)">
       AND A.CLAIM_DATE     = #{CLAIM_DATE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
      AND  A.CLAIM_NO       LIKE #{TXT_SEARCH} + '%'
     </if>
     ORDER BY A.CLAIM_DATE
    </select>
    
<!-- 예산과목 -->
<select id="popupServiceImpl.budgKocisPopup" parameterType="Map" resultType="rMap">
    --KOCIS
    
    <if test='SAVE_CODE_GUBUN == "1"'>    
    --본계좌
        
        SELECT DISTINCT
            A.COMP_CODE
            ,A.ACCT_NO
            ,E.SAVE_NAME
            ,A.BUDG_CODE
            ,B.BUDG_NAME
            
            ,(SUM(NVL(A.BUDG_CONF_I , 0)) +
             SUM(NVL(A.BUDG_CONV_I , 0)) +
             SUM(NVL(A.BUDG_ASGN_I , 0)) +
             SUM(NVL(A.BUDG_SUPP_I , 0)) +
             SUM(NVL(A.BUDG_IWALL_I, 0)) +
             SUM(NVL(A.BUDG_TRANSFER_I, 0)) -
             SUM(NVL(A.EX_AMT_I , 0)) -
             SUM(NVL(A.AC_AMT_I , 0)) -
             SUM(NVL(A.ORDER_AMT, 0)) -
             SUM(NVL(A.REQ_AMT  , 0)))  AS BUDG_I
            
            
            
            ,''               AS EX_DATE
            ,D.CURR_UNIT
            ,1                AS CURR_RATE
            ,0                AS CURR_AMT
            ,A.DEPT_CODE
            ,E.BANK_ACCOUNT
          FROM        AFB510T  A
          INNER JOIN  AFB400T  B ON B.COMP_CODE = A.COMP_CODE
                                AND B.AC_YYYY   = SUBSTRING(A.BUDG_YYYYMM,1,4)
                                AND B.BUDG_CODE = A.BUDG_CODE
          INNER JOIN  AFB410T  B1 ON B1.COMP_CODE = B.COMP_CODE
                                AND B1.AC_YYYY   = B.AC_YYYY
                                AND B1.BUDG_CODE = B.BUDG_CODE
                                AND B1.DEPT_CODE = #{S_DEPT_CODE}
          LEFT  JOIN  BSA210T  C ON C.COMP_CODE = A.COMP_CODE
                                AND C.TREE_CODE = A.DEPT_CODE
          LEFT  JOIN  BOR120T  D ON D.COMP_CODE = C.COMP_CODE
                                AND C.TREE_CODE = A.DEPT_CODE
                                AND D.DIV_CODE  = C.TYPE_LEVEL
          LEFT  JOIN  AFS100T  E ON E.COMP_CODE = A.COMP_CODE 
                                AND E.DEPT_CODE = A.DEPT_CODE
                                AND E.SAVE_CODE = A.ACCT_NO
          WHERE  A.COMP_CODE = #{S_COMP_CODE}
            AND  A.DEPT_CODE = #{S_DEPT_CODE}
            AND  B.BUDG_TYPE = '2'
            <if test='NEXT_GUBUN == "1"'>
            AND  B.AC_YYYY = ${AC_YYYY} -1
            </if>
            <if test='NEXT_GUBUN == "2"'>
            AND  B.AC_YYYY = #{AC_YYYY}
            </if>
            AND  B1.USE_YN = 'Y'
            
            <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
                AND (A.BUDG_CODE LIKE #{TXT_SEARCH} + '%'                             
                OR B.BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
            </if>
            <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
                <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
                AND (A.BUDG_CODE LIKE #{BUDG_CODE} + '%'                             
                OR B.BUDG_NAME LIKE '%'+ #{BUDG_CODE} + '%' )           
                </if>
                <if test="@foren.Ognl@isNotEmpty(BUDG_NAME)">
                AND (A.BUDG_CODE LIKE #{BUDG_NAME} + '%'                             
                OR B.BUDG_NAME LIKE '%'+ #{BUDG_NAME} + '%' )        
                </if>               
            </if>   
               
            <if test="@foren.Ognl@isNotEmpty(ACCT_NO)">              
                AND A.ACCT_NO = #{ACCT_NO}
            </if>   
            
            <if test="@foren.Ognl@isNotEmpty(BUDG_GUBUN)">   
                AND A.BUDG_GUBUN = #{BUDG_GUBUN}
            </if>
           
            GROUP BY A.COMP_CODE ,A.ACCT_NO ,E.SAVE_NAME ,A.BUDG_CODE ,B.BUDG_NAME 
                    ,D.CURR_UNIT ,A.DEPT_CODE ,E.BANK_ACCOUNT, SUBSTRING(A.BUDG_YYYYMM,1,4)
                    
                    
           HAVING             
           
            (SUM(NVL(A.BUDG_CONF_I , 0)) +
             SUM(NVL(A.BUDG_CONV_I , 0)) +
             SUM(NVL(A.BUDG_ASGN_I , 0)) +
             SUM(NVL(A.BUDG_SUPP_I , 0)) +
             SUM(NVL(A.BUDG_IWALL_I, 0)) +
             SUM(NVL(A.BUDG_TRANSFER_I, 0)) -
             SUM(NVL(A.EX_AMT_I , 0)) -
             SUM(NVL(A.AC_AMT_I , 0)) -
             SUM(NVL(A.ORDER_AMT, 0)) -
             SUM(NVL(A.REQ_AMT  , 0))) != 0  
            
    </if>    
        
        
    <if test='SAVE_CODE_GUBUN == "2"'>
    --이체계좌
    SELECT 
        A.COMP_CODE
        ,A.DEPT_CODE
        ,A.ACCT_NO
        ,C.SAVE_NAME
        ,A.BUDG_CODE
        ,B.BUDG_NAME
        ,SUM(A.EX_AMT)      AS BUDG_I
        ,A.EX_DATE
        ,A.CURR_UNIT
        ,A.CURR_RATE
        ,SUM(A.CURR_AMT)    AS CURR_AMT
        ,C.BANK_ACCOUNT
        
        FROM        AFB740T A
    INNER JOIN      AFB400T B ON B.COMP_CODE = A.COMP_CODE
                             AND B.AC_YYYY   = A.AC_YYYY
                             AND B.BUDG_CODE = A.BUDG_CODE
    LEFT  JOIN      AFS100T C ON C.COMP_CODE = A.COMP_CODE 
                             AND C.DEPT_CODE = A.DEPT_CODE
                             AND C.SAVE_CODE = A.ACCT_NO
       WHERE  A.COMP_CODE = #{S_COMP_CODE}
         AND  A.DEPT_CODE = #{S_DEPT_CODE}
         AND  B.BUDG_TYPE = '2'
         <if test='NEXT_GUBUN == "1"'>
         AND  A.AC_YYYY = ${AC_YYYY} -1
         </if>
         <if test='NEXT_GUBUN == "2"'>
         AND  A.AC_YYYY = #{AC_YYYY}
         </if>
         <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
            AND (A.BUDG_CODE LIKE #{TXT_SEARCH} + '%'                             
            OR B.BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
        </if>
        <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
            <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
            AND (A.BUDG_CODE LIKE #{BUDG_CODE} + '%'                             
            OR B.BUDG_NAME LIKE '%'+ #{BUDG_CODE} + '%' )           
            </if>
            <if test="@foren.Ognl@isNotEmpty(BUDG_NAME)">
            AND (A.BUDG_CODE LIKE #{BUDG_NAME} + '%'                             
            OR B.BUDG_NAME LIKE '%'+ #{BUDG_NAME} + '%' )        
            </if>               
        </if>   
        <if test="@foren.Ognl@isNotEmpty(ACCT_NO)">              
            AND A.ACCT_NO = #{ACCT_NO}
        </if>   
                        
                                
    GROUP BY A.COMP_CODE ,A.DEPT_CODE ,C.SAVE_NAME ,A.ACCT_NO ,A.BUDG_CODE 
            ,B.BUDG_NAME ,A.EX_DATE ,A.CURR_UNIT ,A.CURR_RATE,C.BANK_ACCOUNT
    
    
    </if>
</select>
<select id="popupServiceImpl.budgKocisNormalPopup" parameterType="Map" resultType="rMap">
SELECT 
    A.COMP_CODE
    ,A.AC_YYYY
    ,A.DEPT_CODE
    ,C.TREE_NAME AS DEPT_NAME
    ,A.BUDG_CODE 
    ,B.BUDG_NAME
    ,A.USE_YN
  FROM       AFB410T A
  INNER JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE
                      AND B.AC_YYYY   = A.AC_YYYY
                      AND B.BUDG_CODE = A.BUDG_CODE
  LEFT JOIN  BSA210T C ON C.COMP_CODE = A.COMP_CODE
                      AND C.TREE_CODE = A.DEPT_CODE  
                                                
  WHERE A.COMP_CODE = #{S_COMP_CODE}
    AND A.DEPT_CODE = #{DEPT_CODE} 
    AND A.USE_YN = 'Y'
    AND A.AC_YYYY = #{AC_YYYY}
     <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
     AND (A.BUDG_CODE LIKE #{TXT_SEARCH} + '%'                             
          OR B.BUDG_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
     </if>
     <if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
        <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
        AND (A.BUDG_CODE LIKE #{BUDG_CODE} + '%'                             
             OR B.BUDG_NAME LIKE '%'+ #{BUDG_CODE} + '%' )           
        </if>
        <if test="@foren.Ognl@isNotEmpty(BUDG_NAME)">
        AND (A.BUDG_CODE LIKE #{BUDG_NAME} + '%'                             
             OR B.BUDG_NAME LIKE '%'+ #{BUDG_NAME} + '%' )        
        </if>               
     </if> 
     <if test="@foren.Ognl@isNotEmpty(ADD_QUERY)">
     AND ${ADD_QUERY}
     </if>
     <if test="@foren.Ognl@isNotEmpty(AC_GUBUN)">
     AND B.AC_GUBUN = #{AC_GUBUN}
     </if>
	
</select>
<select id="popupServiceImpl.custKocisPopup" parameterType="Map" resultType="rMap">  
SELECT 
     A.CUSTOM_CODE
    ,A.CUSTOM_NAME
    ,A.CUSTOM_TYPE
    ,A.AGENT_TYPE
  FROM BCM100T A
  WHERE A.COMP_CODE = #{S_COMP_CODE}
    AND A.DEPT_CODE = #{S_DEPT_CODE}
    <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
    AND (A.CUSTOM_CODE LIKE #{TXT_SEARCH} + '%'                             
    OR A.CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH} + '%' )
    </if>
<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
    AND (A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'                             
    OR A.CUSTOM_NAME LIKE '%'+ #{CUSTOM_CODE} + '%' )           
    </if>
    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
    AND (A.CUSTOM_CODE LIKE #{CUSTOM_NAME} + '%'                             
    OR A.CUSTOM_NAME LIKE '%'+ #{CUSTOM_NAME} + '%' )        
    </if>               
</if>   
</select>
<select id="popupServiceImpl.artKocisPopup" parameterType="Map" resultType="rMap">  
	SELECT 
	       A.ITEM_CODE
	     , A.ITEM_NM AS ITEM_NAME
	     , A.PURCHASE_DATE						/* 취득일 */
	     , A.AUTHOR								/* 작가명 */
	     , A.ITEM_GBN							/* 작품구분 */
	  FROM ASS600T A
	  LEFT JOIN BSA210T B ON B.TREE_CODE = A.DEPT_CODE
	 WHERE A.DEPT_CODE = #{S_DEPT_CODE}
	  <if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
	   AND (A.ITEM_CODE LIKE #{TXT_SEARCH} + '%'                             
	    OR A.ITEM_NM LIKE '%'+ #{TXT_SEARCH} + '%' )
	  </if>
	<if test="@foren.Ognl@isEmpty(TXT_SEARCH)">
	  <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	   AND (A.ITEM_CODE LIKE #{ITEM_CODE} + '%'                             
	    OR A.ITEM_NM LIKE '%'+ #{ITEM_CODE} + '%' )           
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	   AND (A.ITEM_CODE LIKE #{ITEM_NAME} + '%'                             
	    OR A.ITEM_NM LIKE '%'+ #{ITEM_NAME} + '%' )        
	  </if>               
	</if>   
</select>
  
</mapper>