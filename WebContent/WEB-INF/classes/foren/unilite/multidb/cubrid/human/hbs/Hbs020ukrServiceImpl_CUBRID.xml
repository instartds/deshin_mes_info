<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hbs020ukrServiceImpl">

        <!--
        #{S_COMP_CODE}
        #{S_LANG_CODE}  
        -->
    <select id="hbs020ukrServiceImpl.selectList1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1 */
        SELECT  COMPANY_CODE
             ,  MED_PRSN_RATE
             ,  MED_COMP_RATE
             ,  ANUT_PRSN_RATE1
             ,  ANUT_COMP_RATE1
             ,  EMPLOY_RATE
             ,  RETR_DUTY_RULE
             ,  BONUS_DUTY_RULE
             ,  MONTH_CALCU_YN
             ,  MENS_CALCU_YN
             ,  EARLY_PLAN_YN
             ,  RETR_CALCU_RULE
             ,  YEAR_STD_FR_YYYY
             ,  YEAR_STD_FR_YYYY        AS YEAR_STD_FR_YYYY_CO
             ,  YEAR_STD_FR_YYYY_2      AS YEAR_STD_FR_YYYY_2
             ,  YEAR_STD_FR_MM
             ,  YEAR_STD_FR_MM          AS YEAR_STD_FR_MM_CO
             ,  YEAR_STD_FR_MM_2
             ,  YEAR_STD_FR_DD
             ,  YEAR_STD_TO_YYYY
             ,  YEAR_STD_TO_YYYY        AS YEAR_STD_TO_YYYY_CO
             ,  YEAR_STD_TO_YYYY_2      AS YEAR_STD_TO_YYYY_2
             ,  YEAR_STD_TO_MM
             ,  YEAR_STD_TO_MM          AS YEAR_STD_TO_MM_CO     
             ,  YEAR_STD_TO_MM_2
             ,  YEAR_STD_TO_DD
             ,  YEAR_USE_FR_YYYY
             ,  YEAR_USE_FR_MM
             ,  YEAR_USE_FR_DD
             ,  YEAR_USE_TO_YYYY
             ,  YEAR_USE_TO_MM
             ,  YEAR_USE_TO_DD
             ,  DUTY_INPUT_RULE
             ,  WEEK_CALCU_YN
             ,  DAY_WORK_TIME
             ,  LONG_WORK_DUTY_RULE
             ,  YEAR_PROV_YYYY
             ,  BUSI_SHARE_RATE
             ,  EXTEND_WORK_YN
             ,  FIVE_APPLY_DATE
             ,  TAX_CALCU_RULE
             ,  BONUS_RETRAVG_FLAG
             ,  WORKER_COMPEN_RATE
             ,  HIR_CALCU_RULE
             ,  INC_CALCU_RULE
                --추가
             ,  LCI_CALCU_RULE
             ,  MED_CALCU_RULE
             ,  ANUT_CALCU_RULE
             ,  MED_INSUR_CALCU_RULE
             ,  YEARENDTAX_CALCU_RULE
        FROM    HBS400T
        WHERE   COMP_CODE    = #{S_COMP_CODE}
        AND     COMPANY_CODE = '1'
    </select>

    <select id="hbs020ukrServiceImpl.selectList1_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1_1 */
        SELECT  MAIN_CODE
             ,  SUB_CODE
             ,  CODE_NAME
             ,  CODE_NAME_EN
             ,  CODE_NAME_CN
             ,  CODE_NAME_JP
             ,  CAST(SYSTEM_CODE_YN AS INT) SYSTEM_CODE_YN
             ,  REF_CODE1
             ,  REF_CODE2
             ,  REF_CODE3
             ,  REF_CODE4
             ,  REF_CODE5
             ,  SUB_LENGTH
             ,  USE_YN
             ,  SORT_SEQ
             ,  UPDATE_DB_USER
             ,  UPDATE_DB_TIME
             ,  COMP_CODE
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = 'H031'
        AND     SUB_CODE &lt;&gt; '$'
        ORDER   BY MAIN_CODE, SUB_CODE
    </select>
    
    <update id="hbs020ukrServiceImpl.updateList1_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1_1 */
        UPDATE  BSA100T
        SET     REF_CODE1       = #{REF_CODE1}
          ,     REF_CODE2       = #{REF_CODE2}
          ,     SUB_LENGTH      = #{SUB_LENGTH}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = SYSDATETIME
        WHERE   COMP_CODE = 'MASTER'           
        AND     MAIN_CODE = 'H031'           
        AND     SUB_CODE  &lt;&gt; '$'
        AND     SUB_CODE  = #{SUB_CODE}
    </update>
    
    <select id="hbs020ukrServiceImpl.getSUB_LENGTH" parameterType="String" resultType="int">
    /* hbs020ukrServiceImpl.getSUB_LENGTH */
        SELECT  SUB_LENGTH                    
        FROM    BSA100T                       
        WHERE   COMP_CODE = #{comp_code}
        AND     MAIN_CODE = 'H031'
        AND     SUB_CODE  = '$'
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList1_2" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1_2 */
        SELECT  PAY_CODE
             ,  PAY_DD                                                   
             ,  AMASS_NUM                                                
             ,  SAVE_MONTH_NUM                                           
             ,  ABSENCE_CNT                                              
             ,  SUPP_YEAR_NUM_B                                          
             ,  SUPP_YEAR_NUM_A                                          
             ,  WAGES_TYPE                                               
             ,  CAST(NVL(FIVE_DAY_CHECK, 0) AS INT) AS FIVE_DAY_CHECK
             ,  CAST(NVL(JOIN_MID_CHECK, 0) AS INT) AS JOIN_MID_CHECK
        FROM    HBS340T
        WHERE   COMP_CODE = #{S_COMP_CODE}
    </select>
    
    <update id="hbs020ukrServiceImpl.updateList1_2" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1_2 */
        UPDATE  HBS340T
        SET     WAGES_TYPE      = #{WAGES_TYPE}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = SYSDATETIME
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     PAY_CODE  = #{PAY_CODE}
    </update>
    
    <update id="hbs020ukrServiceImpl.updateList1" parameterType="rMap"> 
    /* hbs020ukrServiceImpl.updateList1 */
        UPDATE  HBS400T
        SET     TAX_CALCU_RULE          = #{TAX_CALCU_RULE}
          ,     HIR_CALCU_RULE          = #{HIR_CALCU_RULE}
          ,     INC_CALCU_RULE          = #{INC_CALCU_RULE}
          ,     MED_PRSN_RATE           = #{MED_PRSN_RATE}
          ,     MED_COMP_RATE           = #{MED_COMP_RATE}
          ,     ANUT_PRSN_RATE1         = #{ANUT_PRSN_RATE1}
          ,     ANUT_COMP_RATE1         = #{ANUT_COMP_RATE1}
          ,     EMPLOY_RATE             = #{EMPLOY_RATE}
          ,     BUSI_SHARE_RATE         = #{BUSI_SHARE_RATE}
          ,     WORKER_COMPEN_RATE      = #{WORKER_COMPEN_RATE}
          ,     LONG_WORK_DUTY_RULE     = #{LONG_WORK_DUTY_RULE}
          ,     BONUS_DUTY_RULE         = #{BONUS_DUTY_RULE}
          ,     RETR_DUTY_RULE          = #{RETR_DUTY_RULE}
          ,     MONTH_CALCU_YN          = #{MONTH_CALCU_YN}
          ,     MENS_CALCU_YN           = #{MENS_CALCU_YN}
          ,     WEEK_CALCU_YN           = #{WEEK_CALCU_YN}
          ,     EARLY_PLAN_YN           = #{EARLY_PLAN_YN}
          ,     DUTY_INPUT_RULE         = #{DUTY_INPUT_RULE}
          ,     DAY_WORK_TIME           = #{DAY_WORK_TIME}
          ,     RETR_CALCU_RULE         = #{RETR_CALCU_RULE}
          ,     YEAR_STD_FR_YYYY        = #{YEAR_STD_FR_YYYY}
          ,     YEAR_STD_FR_YYYY_2      = #{YEAR_STD_FR_YYYY_2}
        <if test="YEAR_TYPE == &quot;1&quot;">    --회기말 기준
          ,     YEAR_STD_FR_MM          = #{YEAR_STD_FR_MM}             
        </if>           
        <if test="YEAR_TYPE == &quot;3&quot;">    --상하반기 기준
          ,     YEAR_STD_FR_MM          = #{YEAR_STD_FR_MM_CO}
          ,     YEAR_STD_FR_MM_2        = #{YEAR_STD_FR_MM_2}
        </if>
          ,     YEAR_STD_FR_DD          = #{YEAR_STD_FR_DD} 
          ,     YEAR_STD_TO_YYYY        = #{YEAR_STD_TO_YYYY}
          ,     YEAR_STD_TO_YYYY_2      = #{YEAR_STD_TO_YYYY_2}              
        <if test="YEAR_TYPE == &quot;1&quot;">    --회기말 기준
          ,     YEAR_STD_TO_MM          = #{YEAR_STD_TO_MM}
        </if>
        <if test="YEAR_TYPE == &quot;3&quot;">    --상하반기 기준
          ,     YEAR_STD_TO_MM          = #{YEAR_STD_TO_MM_CO}
          ,     YEAR_STD_TO_MM_2        = #{YEAR_STD_TO_MM_2}
        </if>           
          ,     YEAR_STD_TO_DD          = #{YEAR_STD_TO_DD}
          ,     YEAR_USE_FR_YYYY        = #{YEAR_USE_FR_YYYY}
          ,     YEAR_USE_FR_MM          = #{YEAR_USE_FR_MM}
          ,     YEAR_USE_FR_DD          = #{YEAR_USE_FR_DD}
          ,     YEAR_USE_TO_YYYY        = #{YEAR_USE_TO_YYYY}
          ,     YEAR_USE_TO_MM          = #{YEAR_USE_TO_MM}
          ,     YEAR_USE_TO_DD          = #{YEAR_USE_TO_DD}
          ,     YEAR_PROV_YYYY          = #{YEAR_PROV_YYYY}
          ,     EXTEND_WORK_YN          = #{EXTEND_WORK_YN}
          ,     FIVE_APPLY_DATE         = #{FIVE_APPLY_DATE}
          ,     BONUS_RETRAVG_FLAG      = #{BONUS_RETRAVG_FLAG}
          ,     LCI_CALCU_RULE          = #{LCI_CALCU_RULE}    
          ,     MED_CALCU_RULE          = #{MED_CALCU_RULE}       
          ,     ANUT_CALCU_RULE         = #{ANUT_CALCU_RULE}      
          ,     MED_INSUR_CALCU_RULE    = #{MED_INSUR_CALCU_RULE} 
          ,     YEARENDTAX_CALCU_RULE   = #{YEARENDTAX_CALCU_RULE}
          ,     UPDATE_DB_USER          = #{S_USER_ID}
          ,     UPDATE_DB_TIME          = SYSDATETIME
        WHERE   COMPANY_CODE    = '1'
        AND     COMP_CODE       = #{S_COMP_CODE}
    </update>
    
    <select id="hbs020ukrServiceImpl.selectList7" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList7 */
        SELECT  WORK_TEAM                                                
             ,  HOLY_TYPE                                                
             ,  DUTY_FR_D                                                
             , (CASE WHEN LENGTH(DUTY_FR_H) = 1
                          THEN '0' + TO_CHAR(DUTY_FR_H)
                          ELSE TO_CHAR(DUTY_FR_H)
                END) AS DUTY_FR_H
             , (CASE WHEN LENGTH(DUTY_FR_M) = 1
                          THEN '0' + TO_CHAR(DUTY_FR_M)
                          ELSE TO_CHAR(DUTY_FR_M)
                END) AS DUTY_FR_M
             ,  DUTY_TO_D
             , (CASE WHEN LENGTH(DUTY_TO_H) = 1
                          THEN '0' + TO_CHAR(DUTY_TO_H)
                          ELSE TO_CHAR(DUTY_TO_H)
                END) AS DUTY_TO_H
             , (CASE WHEN LENGTH(DUTY_TO_M) = 1
                          THEN '0' + TO_CHAR(DUTY_TO_M)
                          ELSE TO_CHAR(DUTY_TO_M)
                END) AS DUTY_TO_M
             ,  REST_FR_D_01
             , (CASE WHEN LENGTH(REST_FR_H_01) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_01)
                          ELSE TO_CHAR(REST_FR_H_01)
                END) AS REST_FR_H_01
             , (CASE WHEN LENGTH(REST_FR_M_01) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_01)
                          ELSE TO_CHAR(REST_FR_M_01)
                END) AS REST_FR_M_01
             ,  REST_TO_D_01
             , (CASE WHEN LENGTH(REST_TO_H_01) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_01)
                          ELSE TO_CHAR(REST_TO_H_01)
                END) AS REST_TO_H_01
             , (CASE WHEN LENGTH(REST_TO_M_01) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_01)
                          ELSE TO_CHAR(REST_TO_M_01)
                END) AS REST_TO_M_01
             ,  REST_FR_D_02
             , (CASE WHEN LENGTH(REST_FR_H_02) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_02)
                          ELSE TO_CHAR(REST_FR_H_02)
                END) AS REST_FR_H_02
             , (CASE WHEN LENGTH(REST_FR_M_02) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_02)
                          ELSE TO_CHAR(REST_FR_M_02)
                END) AS REST_FR_M_02
             ,  REST_TO_D_02
             , (CASE WHEN LENGTH(REST_TO_H_02) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_02)
                          ELSE TO_CHAR(REST_TO_H_02)
                END) AS REST_TO_H_02
             , (CASE WHEN LENGTH(REST_TO_M_02) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_02)
                          ELSE TO_CHAR(REST_TO_M_02)
                END) AS REST_TO_M_02
             ,  REST_FR_D_03
             , (CASE WHEN LENGTH(REST_FR_H_03) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_03)
                          ELSE TO_CHAR(REST_FR_H_03)
                END) AS REST_FR_H_03
             , (CASE WHEN LENGTH(REST_FR_M_03) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_03)
                          ELSE TO_CHAR(REST_FR_M_03)
                END) AS REST_FR_M_03
             ,  REST_TO_D_03
             , (CASE WHEN LENGTH(REST_TO_H_03) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_03)
                          ELSE TO_CHAR(REST_TO_H_03)
                END) AS REST_TO_H_03
             , (CASE WHEN LENGTH(REST_TO_M_03) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_03)
                          ELSE TO_CHAR(REST_TO_M_03)
                END) AS REST_TO_M_03
             ,  REST_FR_D_04
             , (CASE WHEN LENGTH(REST_FR_H_04) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_04)
                          ELSE TO_CHAR(REST_FR_H_04)
                END) AS REST_FR_H_04
             , (CASE WHEN LENGTH(REST_FR_M_04) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_04)
                          ELSE TO_CHAR(REST_FR_M_04)
                END) AS REST_FR_M_04
             ,  REST_TO_D_04
             , (CASE WHEN LENGTH(REST_TO_H_04) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_04)
                          ELSE TO_CHAR(REST_TO_H_04)
                END) AS REST_TO_H_04
             , (CASE WHEN LENGTH(REST_TO_M_04) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_04)
                          ELSE TO_CHAR(REST_TO_M_04)
                END) AS REST_TO_M_04
        FROM    HAT100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList7" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList7 */
        INSERT INTO HAT100T
        (   COMP_CODE     , WORK_TEAM     , HOLY_TYPE     , DUTY_FR_D   , DUTY_FR_H   , DUTY_FR_M   , DUTY_TO_D, DUTY_TO_H, DUTY_TO_M, 
            REST_FR_D_01  , REST_FR_H_01  , REST_FR_M_01  , REST_TO_D_01, REST_TO_H_01, REST_TO_M_01,
            REST_FR_D_02  , REST_FR_H_02  , REST_FR_M_02  , REST_TO_D_02, REST_TO_H_02, REST_TO_M_02,
            REST_FR_D_03  , REST_FR_H_03  , REST_FR_M_03  , REST_TO_D_03, REST_TO_H_03, REST_TO_M_03,
            REST_FR_D_04  , REST_FR_H_04  , REST_FR_M_04  , REST_TO_D_04, REST_TO_H_04, REST_TO_M_04,
            UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
       VALUES
       (    #{S_COMP_CODE}, #{WORK_TEAM}, #{HOLY_TYPE}, #{DUTY_FR_D}, #{DUTY_FR_H}, #{DUTY_FR_M}, #{DUTY_TO_D}, #{DUTY_TO_H}, #{DUTY_TO_M},
            #{REST_FR_D_01}, #{REST_FR_H_01}, #{REST_FR_M_01}, #{REST_TO_D_01}, #{REST_TO_H_01}, #{REST_TO_M_01},
            #{REST_FR_D_02}, #{REST_FR_H_02}, #{REST_FR_M_02}, #{REST_TO_D_02}, #{REST_TO_H_02}, #{REST_TO_M_02},
            #{REST_FR_D_03}, #{REST_FR_H_03}, #{REST_FR_M_03}, #{REST_TO_D_03}, #{REST_TO_H_03}, #{REST_TO_M_03},
            #{REST_FR_D_04}, #{REST_FR_H_04}, #{REST_FR_M_04}, #{REST_TO_D_04}, #{REST_TO_H_04}, #{REST_TO_M_04},
            #{S_USER_ID}, SYSDATETIME, #{S_USER_ID}, SYSDATETIME)
    </insert>
    
    <update id="hbs020ukrServiceImpl.updateList7" parameterType="Map">
    /* hbs020ukrServiceImpl.updateList7 */
        UPDATE  HAT100T
        SET     DUTY_FR_D = #{DUTY_FR_D}, DUTY_FR_H = #{DUTY_FR_H}, DUTY_FR_M = #{DUTY_FR_M},
                DUTY_TO_D = #{DUTY_TO_D}, DUTY_TO_H = #{DUTY_TO_H}, DUTY_TO_M =  #{DUTY_TO_M}, 
                REST_FR_D_01 = #{REST_FR_D_01}, REST_FR_H_01 = #{REST_FR_H_01}, REST_FR_M_01 = #{REST_FR_M_01}, 
                REST_TO_D_01 = #{REST_TO_D_01}, REST_TO_H_01 = #{REST_TO_H_01}, REST_TO_M_01 = #{REST_TO_M_01},
                REST_FR_D_02 = #{REST_FR_D_02}, REST_FR_H_02 = #{REST_FR_H_02}, REST_FR_M_02 = #{REST_FR_M_02}, 
                REST_TO_D_02 = #{REST_TO_D_02}, REST_TO_H_02 = #{REST_TO_H_02}, REST_TO_M_02 = #{REST_TO_M_02},
                REST_FR_D_03 = #{REST_FR_D_03}, REST_FR_H_03 = #{REST_FR_H_03}, REST_FR_M_03 = #{REST_FR_M_03}, 
                REST_TO_D_03 = #{REST_TO_D_03}, REST_TO_H_03 = #{REST_TO_H_03}, REST_TO_M_03 = #{REST_TO_M_03},
                REST_FR_D_04 = #{REST_FR_D_04}, REST_FR_H_04 = #{REST_FR_H_04}, REST_FR_M_04 = #{REST_FR_M_04}, 
                REST_TO_D_04 = #{REST_TO_D_04}, REST_TO_H_04 = #{REST_TO_H_04}, REST_TO_M_04 = #{REST_TO_M_04},
                UPDATE_DB_USER = #{S_USER_ID}, UPDATE_DB_TIME = SYSDATETIME
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     WORK_TEAM   = #{WORK_TEAM}
        AND     HOLY_TYPE   = #{HOLY_TYPE}
    </update>   
    
    <delete id="hbs020ukrServiceImpl.deleteList7" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList7 */
        DELETE  HAT100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     WORK_TEAM = #{WORK_TEAM}
        AND     HOLY_TYPE = #{HOLY_TYPE}
    </delete>
    
    <select id="hbs020ukrServiceImpl.selectList7_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList7_1 */
        SELECT  WORK_TEAM
             ,  PAY_CODE
             ,  HOLY_TYPE
             ,  DUTY_CODE
             ,  DUTY_FR_D
             , (CASE WHEN LENGTH(DUTY_FR_H) = 1
                          THEN '0' + TO_CHAR(DUTY_FR_H)
                          ELSE TO_CHAR(DUTY_FR_H)
                END) AS DUTY_FR_H
             , (CASE WHEN LENGTH(DUTY_FR_M) = 1
                          THEN '0' + TO_CHAR(DUTY_FR_M)
                          ELSE TO_CHAR(DUTY_FR_M)
                END) AS DUTY_FR_M
             ,  DUTY_TO_D
             , (CASE WHEN LENGTH(DUTY_TO_H) = 1
                          THEN '0' + TO_CHAR(DUTY_TO_H)
                          ELSE TO_CHAR(DUTY_TO_H)
                END) AS DUTY_TO_H
             , (CASE WHEN LENGTH(DUTY_TO_M) = 1
                          THEN '0' + TO_CHAR(DUTY_TO_M)
                          ELSE TO_CHAR(DUTY_TO_M)
                END) AS DUTY_TO_M
             ,  REST_FR_D_01
             , (CASE WHEN LENGTH(REST_FR_H_01) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_01)
                          ELSE TO_CHAR(REST_FR_H_01)
                END) AS REST_FR_H_01
             , (CASE WHEN LENGTH(REST_FR_M_01) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_01)
                          ELSE TO_CHAR(REST_FR_M_01)
                 END) AS REST_FR_M_01
             ,  REST_TO_D_01
             , (CASE WHEN LENGTH(REST_TO_H_01) = 1                         
                          THEN '0' + TO_CHAR(REST_TO_H_01)   
                          ELSE TO_CHAR(REST_TO_H_01)         
                END) AS REST_TO_H_01                                   
             , (CASE WHEN LENGTH(REST_TO_M_01) = 1                         
                          THEN '0' + TO_CHAR(REST_TO_M_01)   
                          ELSE TO_CHAR(REST_TO_M_01)         
                END) AS REST_TO_M_01                                   
             ,  REST_FR_D_02                                             
             , (CASE WHEN LENGTH(REST_FR_H_02) = 1                         
                          THEN '0' + TO_CHAR(REST_FR_H_02)   
                          ELSE TO_CHAR(REST_FR_H_02)         
                END) AS REST_FR_H_02
             , (CASE WHEN LENGTH(REST_FR_M_02) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_02)
                          ELSE TO_CHAR(REST_FR_M_02)
                END) AS REST_FR_M_02
             ,  REST_TO_D_02
             , (CASE WHEN LENGTH(REST_TO_H_02) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_02)
                          ELSE TO_CHAR(REST_TO_H_02)
                END) AS REST_TO_H_02
             , (CASE WHEN LENGTH(REST_TO_M_02) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_02)
                          ELSE TO_CHAR(REST_TO_M_02)
                END) AS REST_TO_M_02
             ,  REST_FR_D_03
             , (CASE WHEN LENGTH(REST_FR_H_03) = 1
                          THEN '0' + TO_CHAR(REST_FR_H_03)
                          ELSE TO_CHAR(REST_FR_H_03)
                END) AS REST_FR_H_03
             , (CASE WHEN LENGTH(REST_FR_M_03) = 1
                          THEN '0' + TO_CHAR(REST_FR_M_03)
                          ELSE TO_CHAR(REST_FR_M_03)
                END) AS REST_FR_M_03
             ,  REST_TO_D_03
             , (CASE WHEN LENGTH(REST_TO_H_03) = 1
                          THEN '0' + TO_CHAR(REST_TO_H_03)
                          ELSE TO_CHAR(REST_TO_H_03)
                END) AS REST_TO_H_03
             , (CASE WHEN LENGTH(REST_TO_M_03) = 1
                          THEN '0' + TO_CHAR(REST_TO_M_03)
                          ELSE TO_CHAR(REST_TO_M_03)
                END) AS REST_TO_M_03
        FROM    HAT110T
        WHERE   COMP_CODE = #{S_COMP_CODE}
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList7_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList7_1 */
        INSERT INTO HAT110T 
        (   COMP_CODE     , WORK_TEAM     , PAY_CODE      , HOLY_TYPE   , DUTY_CODE   , DUTY_FR_D   , DUTY_FR_H, DUTY_FR_M, DUTY_TO_D, DUTY_TO_H, DUTY_TO_M, 
            REST_FR_D_01  , REST_FR_H_01  , REST_FR_M_01  , REST_TO_D_01, REST_TO_H_01, REST_TO_M_01,
            REST_FR_D_02  , REST_FR_H_02  , REST_FR_M_02  , REST_TO_D_02, REST_TO_H_02, REST_TO_M_02,
            REST_FR_D_03  , REST_FR_H_03  , REST_FR_M_03  , REST_TO_D_03, REST_TO_H_03, REST_TO_M_03,
            UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME
        )
        VALUES
        (   #{S_COMP_CODE}, #{WORK_TEAM}, #{PAY_CODE}, #{HOLY_TYPE}, #{DUTY_CODE}, #{DUTY_FR_D}, #{DUTY_FR_H}, #{DUTY_FR_M}, #{DUTY_TO_D}, #{DUTY_TO_H}, #{DUTY_TO_M}, 
            #{REST_FR_D_01}, #{REST_FR_H_01}, #{REST_FR_M_01}, #{REST_TO_D_01}, #{REST_TO_H_01}, #{REST_TO_M_01},
            #{REST_FR_D_02}, #{REST_FR_H_02}, #{REST_FR_M_02}, #{REST_TO_D_02}, #{REST_TO_H_02}, #{REST_TO_M_02},
            #{REST_FR_D_03}, #{REST_FR_H_03}, #{REST_FR_M_03}, #{REST_TO_D_03}, #{REST_TO_H_03}, #{REST_TO_M_03},
            #{S_USER_ID}, SYSDATETIME, #{S_USER_ID}, SYSDATETIME
        )
    </insert>
    
    <update id="hbs020ukrServiceImpl.updateList7_1" parameterType="Map">
    /* hbs020ukrServiceImpl.updateList7_1 */
        UPDATE  HAT110T
        SET     DUTY_CODE       = #{DUTY_CODE}
          ,     DUTY_FR_D       = #{DUTY_FR_D}
          ,     DUTY_FR_H       = #{DUTY_FR_H}
          ,     DUTY_FR_M       = #{DUTY_FR_M}
          ,     DUTY_TO_D       = #{DUTY_TO_D}
          ,     DUTY_TO_H       = #{DUTY_TO_H}
          ,     DUTY_TO_M       =  #{DUTY_TO_M}
          ,     REST_FR_D_01    = #{REST_FR_D_01}
          ,     REST_FR_H_01    = #{REST_FR_H_01}
          ,     REST_FR_M_01    = #{REST_FR_M_01}
          ,     REST_TO_D_01    = #{REST_TO_D_01}
          ,     REST_TO_H_01    = #{REST_TO_H_01}
          ,     REST_TO_M_01    = #{REST_TO_M_01}
          ,     REST_FR_D_02    = #{REST_FR_D_02}
          ,     REST_FR_H_02    = #{REST_FR_H_02}
          ,     REST_FR_M_02    = #{REST_FR_M_02}
          ,     REST_TO_D_02    = #{REST_TO_D_02}
          ,     REST_TO_H_02    = #{REST_TO_H_02}
          ,     REST_TO_M_02    = #{REST_TO_M_02}
          ,     REST_FR_D_03    = #{REST_FR_D_03}
          ,     REST_FR_H_03    = #{REST_FR_H_03}
          ,     REST_FR_M_03    = #{REST_FR_M_03}
          ,     REST_TO_D_03    = #{REST_TO_D_03}
          ,     REST_TO_H_03    = #{REST_TO_H_03}
          ,     REST_TO_M_03    = #{REST_TO_M_03}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = SYSDATETIME
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     WORK_TEAM   = #{WORK_TEAM}
        AND     PAY_CODE    = #{PAY_CODE}
        AND     HOLY_TYPE   = #{HOLY_TYPE}
    </update>   
    
    <delete id="hbs020ukrServiceImpl.deleteList7_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList7_1 */
        DELETE  HAT110T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     WORK_TEAM = #{WORK_TEAM}
        AND     PAY_CODE  = #{PAY_CODE}
        AND     HOLY_TYPE = #{HOLY_TYPE}
        AND     DUTY_CODE = #{DUTY_CODE}
    </delete>
        
    <select id="hbs020ukrServiceImpl.getColumnData" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.getColumnData */
        SELECT  WAGES_CODE
             ,  WAGES_NAME
        FROM    HBS300T
        WHERE   COMP_CODE  = #{S_COMP_CODE}
        AND     WAGES_KIND = '1'
        AND     WAGES_CODE &lt;&gt; '100' 
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList11" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList11 */
        SELECT  PAY_GRADE_01                                                      
             ,  PAY_GRADE_02                                                      
             , (CASE WHEN  (SELECT  COUNT(1)                                       
                            FROM    HBS200T                                        
                            WHERE   COMP_CODE    = A.COMP_CODE   
                            AND     PAY_GRADE_01 = A.PAY_GRADE_01
                            AND     PAY_GRADE_02 = A.PAY_GRADE_02
                            AND     WAGES_CODE   = '100') = 0
                     THEN 'N'
                     ELSE  NULL
                END) AS FLAG100
             ,  '100' AS CODE100
             ,  MAX(CASE WHEN B.WAGES_CODE = '100'
                         THEN A.WAGES_I                                      
                         ELSE 0
                    END) AS STD100
        <foreach collection="WAGES_CODE" item="item" index="index">
             , (CASE WHEN  (SELECT  COUNT(1)
                            FROM    HBS200T 
                            WHERE   COMP_CODE    = A.COMP_CODE    
                            AND     PAY_GRADE_01 = A.PAY_GRADE_01 
                            AND     PAY_GRADE_02 = A.PAY_GRADE_02 
                            AND     WAGES_CODE   = #{item.WAGES_CODE}) = 0 
                     THEN 'N'
                     ELSE  NULL
                END) AS FLAG${item.WAGES_CODE} 
             ,  #{item.WAGES_CODE} AS CODE${item.WAGES_CODE} 
             ,  MAX(CASE WHEN B.WAGES_CODE = #{item.WAGES_CODE}
                         THEN A.WAGES_I
                         ELSE 0
                    END) AS STD${item.WAGES_CODE} 
       </foreach>
        FROM               HBS200T A
                INNER JOIN HBS300T B ON A.COMP_CODE  = B.COMP_CODE 
                                    AND A.WAGES_CODE = B.WAGES_CODE
        WHERE   A.COMP_CODE  = #{S_COMP_CODE}
        AND     B.WAGES_KIND = '1'
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">
        AND     A.PAY_GRADE_01 = #{PAY_GRADE_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">
        AND     A.PAY_GRADE_02 = #{PAY_GRADE_02}
        </if>
        
        GROUP   BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02
        ORDER   BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList11" parameterType="rMap">
        /* hbs020ukrServiceImpl.insertList11 */
        INSERT INTO HBS200T
        (   COMP_CODE,
            PAY_GRADE_01, 
            PAY_GRADE_02, 
            WAGES_CODE, 
            WAGES_I, 
            UPDATE_DB_USER, 
            UPDATE_DB_TIME, 
            INSERT_DB_USER, 
            INSERT_DB_TIME
        )
        VALUES 
        (
            #{S_COMP_CODE}, 
            #{PAY_GRADE_01}, 
            #{PAY_GRADE_02}, 
            #{WAGES_CODE}, 
            #{WAGES_I}, 
            #{S_USER_ID}, 
            SYSDATETIME, 
            #{S_USER_ID}, 
            SYSDATETIME
        )
    </insert>
    
    <update id="hbs020ukrServiceImpl.updateList11" parameterType="rMap">
        --UHbs01Krv.CHbs920UKr[fnhbs920set] HBS200T
        UPDATE  HBS200T
        SET     WAGES_I        = #{WAGES_I}
          ,     UPDATE_DB_USER = #{S_USER_ID}
          ,     UPDATE_DB_TIME = SYSDATETIME
             
        WHERE   PAY_GRADE_01   = #{PAY_GRADE_01}
        AND     PAY_GRADE_02   = #{PAY_GRADE_02}
        AND     WAGES_CODE     = #{WAGES_CODE}
        AND     COMP_CODE      = #{S_COMP_CODE}
            
    </update>
    <delete id="hbs020ukrServiceImpl.deleteList11" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList11 */
        DELETE
        FROM    HBS200T
        WHERE   COMP_CODE    = #{S_COMP_CODE} 
        AND     PAY_GRADE_01 = #{PAY_GRADE_01}
        AND     PAY_GRADE_02 = #{PAY_GRADE_02}
    </delete>
    
    <select id="hbs020ukrServiceImpl.selectList12" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList12 */
        SELECT  A.COMP_CODE                                                
             ,  A.YEAR_YYYY                                                
             ,  A.PERSON_NUMB                                              
             ,  B.NAME                                                     
             ,  B.DEPT_CODE                                                
             ,  B.DEPT_NAME                                                
             ,  NVL(A.ANNUAL_SALARY_I,0) AS ANNUAL_SALARY_I             
             ,  NVL(A.WAGES_STD_I,0)     AS WAGES_STD_I                 
             ,  NVL(A.PAY_PRESERVE_I,0)  AS PAY_PRESERVE_I              
        FROM               HBS210T A 
                INNER JOIN HUM100T B ON A.COMP_CODE   = B.COMP_CODE
                                    AND A.PERSON_NUMB = B.PERSON_NUMB
        WHERE   A.COMP_CODE     = #{S_COMP_CODE}

        <if test="@foren.Ognl@isNotEmpty(YEAR_YYYY)">
        AND     A.YEAR_YYYY     = #{YEAR_YYYY}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
        AND     B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">  
        AND     B.DEPT_CODE &gt;= #{DEPT_CODE_FROM}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
        AND     B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
        AND     B.PAY_CODE      = #{PAY_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(NAME)">
        AND     B.NAME          = #{NAME} </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)"> 
        AND     B.PERSON_NUMB   = #{PERSON_NUMB}
        </if>

    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList12 */
        INSERT INTO HBS210T
        (   YEAR_YYYY
        ,   PERSON_NUMB
        ,   ANNUAL_SALARY_I
        ,   WAGES_STD_I
        ,   PAY_PRESERVE_I
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (   #{YEAR_YYYY}
        ,   #{PERSON_NUMB}
        ,   #{ANNUAL_SALARY_I}
        ,   #{WAGES_STD_I}
        ,   #{PAY_PRESERVE_I}
        ,   #{S_USER_ID}
        ,   SYSDATETIME
        )
    </insert>
    
    <insert id="hbs020ukrServiceImpl.insertBatchList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertBatchList12 */
        INSERT INTO HBS210T
        (   COMP_CODE
        ,   YEAR_YYYY
        ,   PERSON_NUMB
        ,   ANNUAL_SALARY_I
        ,   WAGES_STD_I
        ,   PAY_PRESERVE_I
        )                                               
        SELECT  A.COMP_CODE                                            
             ,  #{YEAR_YYYY}    AS YEAR_YYYY                     
             ,  A.PERSON_NUMB                                           
             ,  0 AS ANNUAL_SALARY_I                                       
             ,  0 AS WAGES_STD_I                                           
             ,  0 AS PAY_PRESERVE_I                                        
        FROM               HUM100T A  
                LEFT JOIN  HBS210T B ON A.COMP_CODE   = B.COMP_CODE         
                                    AND A.PERSON_NUMB = B.PERSON_NUMB       
                                    AND B.YEAR_YYYY   = #{YEAR_YYYY} 
        WHERE   A.COMP_CODE     = #{S_COMP_CODE}                      
        AND    (A.RETR_DATE    IS NULL OR RETR_DATE = '00000000')             
        AND     B.COMP_CODE    IS NULL
        <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
        AND     A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">
        AND     A.DEPT_CODE &gt;= #{DEPT_CODE_FROM}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
        AND     B.AEPT_CODE &lt;= #{DEPT_CODE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
        AND     A.PAY_CODE      = #{PAY_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(NAME)">
        AND     A.NAME          = #{NAME}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
        AND     A.PERSON_NUMB   = #{PERSON_NUMB}
        </if>

    </insert>
    
    <update id="hbs020ukrServiceImpl.updateList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList12 */
        UPDATE  HBS210T
        SET     ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
          ,     WAGES_STD_I = #{WAGES_STD_I}
          ,     PAY_PRESERVE_I = #{PAY_PRESERVE_I}
          ,     UPDATE_DB_USER = #{S_USER_ID}
          ,     UPDATE_DB_TIME = SYSDATETIME
        WHERE   COMP_CODE = #{COMP_CODE}
        AND     YEAR_YYYY = #{YEAR_YYYY}
        AND     PERSON_NUMB = #{PERSON_NUMB}
    </update>
    
    <update id="hbs020ukrServiceImpl.updateMasterList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateMasterList12 */
        UPDATE  HUM100T
        SET     ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
          ,     WAGES_STD_I     = #{WAGES_STD_I}
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     PERSON_NUMB = #{PERSON_NUMB}
    </update>
    
    <delete id="hbs020ukrServiceImpl.deleteList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList12 */
        DELETE  HBS210T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     PERSON_NUMB = #{PERSON_NUMB}
    </delete>   
        
    <select id="hbs020ukrServiceImpl.selectList15" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15 */
        EXEC SP_HBS_getCalcList #{S_COMP_CODE}, #{S_LANG_CODE}, #{STD_CODE}, #{SUPP_TYPE}
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_Step1" parameterType="rMap" resultType="rMap">
         --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step1       
        SELECT  SUPP_TYPE                        
             ,  OT_KIND_01                       
             ,  OT_KIND_02                       
             ,  OT_KIND_FULL                     
             ,  STD_CODE                         
             ,  CALCU_SEQ                        
             ,  SELECT_VALUE                     
             ,  SELECT_NAME                      
             ,  TABLE_NAME                       
             ,  WHERE_COLUMN                     
             ,  TYPE                             
             ,  SELECT_SYNTAX                    
             ,  UNIQUE_CODE                      
        FROM    HBS000T                          
        WHERE   COMP_CODE = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(SUPP_TYPE)">  
        AND     SUPP_TYPE = #{SUPP_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(STD_CODE)">  
        AND     STD_CODE = #{STD_CODE}
        </if> 
        ORDER   BY SUPP_TYPE, OT_KIND_01, OT_KIND_02, OT_KIND_FULL, STD_CODE, CALCU_SEQ 
    </select>
        
    <select id="hbs020ukrServiceImpl.selectList15_msg" parameterType="rMap" resultType="String">
        select msg_desc from bsa010t where msg_no = #{MSG_NO};
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step2_type1" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step2 1
        SELECT  ${SELECT_NAME} +
                CASE WHEN #{H_CODE} IS NULL THEN '(' + fnGetTxt(#{H_CODE}) + ')'  
                     ELSE ''
                END as CODE_NAME
        FROM    ${TABLE_NAME}
        WHERE   COMP_CODE = #{S_COMP_CODE}                                           
        AND     ${WHERE_COLUMN} = #{SELECT_VALUE}  
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step2_type2" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step2 2
        SELECT  CODE_NAME  +
                CASE WHEN #{H_CODE} IS NULL  THEN '(' + fnGetTxt('H0128') + ')'  
                     ELSE ''
                END as CODE_NAME
        FROM    BSA100T                                          
        WHERE   COMP_CODE =#{S_COMP_CODE}     
        AND     MAIN_CODE =#{WHERE_COLUMN}
        AND     SUB_CODE != '$'
        AND     SUB_CODE  = #{SELECT_VALUE}
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step5" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step5 
           
        SELECT  A.SUPP_TYPE
             ,  A.STD_CODE
             ,  REPLACE(A.OT_KIND_01,'/', '')   AS OT_KIND_01
             ,  TO_CHAR('KK')                   AS OT_KIND_01NM
             ,  REPLACE(A.OT_KIND_02, '/' ,'')  AS OT_KIND_02
             ,  TO_CHAR('KK')                   AS OT_KIND_02NM
             ,  A.OT_KIND_FULL 
             ,  B.B
        FROM    (
                SELECT  A.SUPP_TYPE
                     ,  A.STD_CODE
                     ,  A.OT_KIND_01
                     ,  A.OT_KIND_02
                     ,  A.OT_KIND_FULL
                FROM    HBS000T A
                WHERE   A.COMP_CODE = #{S_COMP_CODE}
                GROUP   BY A.SUPP_TYPE, A.STD_CODE, A.OT_KIND_01, A.OT_KIND_02, A.OT_KIND_FULL
                ) A,                                            
                (
                    ${SQL2}
           
                ) B
        WHERE   A.STD_CODE     = B.STD_CODE
        AND     A.OT_KIND_01   = B.OT_KIND_01
        AND     A.OT_KIND_02   = B.OT_KIND_02
        AND     A.OT_KIND_FULL = B.OT_KIND_FULL
        AND     A.SUPP_TYPE    = B.SUPP_TYPE
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_GetComboData" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15_GetComboData */
    
    <if test="COMBO_CODE != null"> 
        <if test='COMBO_CODE.equals("1")'>
            SELECT  WAGES_CODE AS "value"
                 ,  WAGES_NAME AS text
            FROM    HBS300T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     CODE_TYPE = '1'
            UNION ALL
            SELECT  SUB_CODE  AS "value"
                 ,  CODE_NAME AS text
            FROM    BSA100T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     MAIN_CODE = 'H034'
            AND     SUB_CODE  NOT IN ('$', 'ANU', 'HIR', 'INC', 'LOC', 'MED', 'RME')
        </if>
        <if test='COMBO_CODE.equals("2") || COMBO_CODE.equals("3") || COMBO_CODE.equals("4")'>
            SELECT  'T01' as "value"
                 ,  fnGetTxt('H0021') AS text
            UNION ALL
            SELECT  SUB_CODE as "value"
                 ,  CODE_NAME AS text
            FROM    BSA100T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     MAIN_CODE = 'H034'
            AND     SUB_CODE  NOT IN ('$', 'ANU', 'HIR', 'INC', 'LOC', 'MED', 'RME')
        </if>
        <if test='COMBO_CODE.equals("F")'>
            SELECT  'T03' as "value"
                 ,  fnGetTxt('H0022') AS text
            UNION ALL
            SELECT 'E03' as "value"
                 ,  fnGetTxt('H0023') AS text
            UNION ALL
            SELECT  SUB_CODE as "value"
                 ,  CODE_NAME AS text
            FROM    BSA100T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     MAIN_CODE = 'H034'
            AND     SUB_CODE  NOT IN ('$', 'ANU', 'HIR', 'INC', 'LOC', 'MED', 'RME')
        </if>
        <if test='COMBO_CODE.equals("G")'>
            SELECT  'T04' as "value"
                 ,  fnGetTxt('H0024') AS text
            UNION ALL
            SELECT  'E04' as "value"
               ,    fnGetTxt('H0025') AS text
           UNION ALL
            SELECT  SUB_CODE as "value"
                 ,  CODE_NAME AS text
            FROM    BSA100T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     MAIN_CODE = 'H034'
            AND     SUB_CODE  NOT IN ('$', 'ANU', 'HIR', 'INC', 'LOC', 'MED', 'RME')
        </if>
        <if test='COMBO_CODE.equals("L") || COMBO_CODE.equals("M")'>
            SELECT  'T02' as "value"
                 ,  fnGetTxt('H0026') AS text
            UNION ALL
            SELECT  SUB_CODE as "value"
                 ,  CODE_NAME AS text
            FROM    BSA100T
            WHERE   COMP_CODE = #{S_COMP_CODE}
            AND     MAIN_CODE = 'H034'
            AND     SUB_CODE  NOT IN ('$', 'ANU', 'HIR', 'INC', 'LOC', 'MED', 'RME')
        </if>   
    </if>
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_GetComboData2" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15_GetComboData2 */
        SELECT  OT_KIND_01
             ,  OT_KIND_01_NAME
        FROM    HBS010T
        WHERE   COMP_CODE = #{S_COMP_CODE}    
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_GetComboData3" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15_GetComboData3 */
        SELECT  *
        FROM    (
                SELECT  'DIV_CODE' AS BIGVALE
                     ,  fnGetTxt('H0003') AS BIGNAME
                     ,  DIV_CODE AS SUB_CODE
                     ,  DIV_NAME AS CODE_NAME
                FROM    BOR120T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
        
                UNION ALL                                 
        
                SELECT  'PAY_GUBUN' AS BIGVALE              
                     ,  fnGetTxt('H0008') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h011'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'EMPLOY_TYPE' AS BIGVALE            
                     ,  fnGetTxt('H0004') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h024'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'DEPT_CODE' AS BIGVALE              
                     ,  fnGetTxt('H0002') AS BIGNAME
                     ,  TREE_CODE AS SUB_CODE               
                     ,  TREE_NAME AS CODE_NAME              
                FROM    BSA210T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                
                UNION ALL                                 
                
                SELECT  'POST_CODE' AS BIGVALE              
                     ,  fnGetTxt('H0010') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h005'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'ABIL_CODE' AS BIGVALE              
                     ,  fnGetTxt('H0001') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h006'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'PAY_PROV_FLAG' AS BIGVALE          
                     ,  fnGetTxt('H0009') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h031'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'PAY_CODE' AS BIGVALE               
                     ,  fnGetTxt('H0007') AS BIGNAME
                     ,  SUB_CODE                            
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'h028'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                 
                
                SELECT  'SEX_CODE' AS BIGVALE               
                     ,  fnGetTxt('H0011') AS BIGNAME
                     ,  'M' AS SUB_CODE                     
                     ,  fnGetTxt('H0027') AS CODE_NAME
                UNION ALL                                   
                SELECT  'SEX_CODE' AS BIGVALE                 
                     ,  fnGetTxt('H0011') AS BIGNAME  
                     ,  'F' AS SUB_CODE                       
                     ,  fnGetTxt('H0028') AS CODE_NAME
                
                UNION ALL                                   
                
                SELECT  'LABOR_UNON_YN' AS BIGVALE            
                     ,  fnGetTxt('H0005') AS BIGNAME  
                     ,  'Y' as sub_code                       
                     ,  fnGetTxt('H0029') AS CODE_NAME
                
                UNION ALL
                
                SELECT  'LABOR_UNON_YN' AS BIGVALE
                     ,  fnGetTxt('H0005') AS BIGNAME  
                     ,  'N' as sub_code
                     ,  fnGetTxt('H0030') AS CODE_NAME
                
                UNION ALL

                SELECT  'MARRY_YN' AS BIGVALE
                     ,  fnGetTxt('H0006') AS BIGNAME
                     ,  'Y' AS SUB_CODE      
                     ,  fnGetTxt('H0029') AS CODE_NAME

                UNION ALL

                SELECT  'MARRY_YN' AS BIGVALE 
                     ,  fnGetTxt('H0006') AS BIGNAME
                     ,  'N' AS SUB_CODE       
                     ,  fnGetTxt('H0030') AS CODE_NAME
                
                UNION ALL
                
                SELECT  'SPOUSE' AS BIGVALE  
                     ,  fnGetTxt('H0012') AS BIGNAME
                     ,  'Y' AS SUB_CODE      
                     ,  fnGetTxt('H0029') AS CODE_NAME

                UNION ALL

                SELECT  'SPOUSE' AS BIGVALE  
                     ,  fnGetTxt('H0012') AS BIGNAME
                     ,  'N' AS SUB_CODE      
                     ,  fnGetTxt('H0030') AS CODE_NAME
                
                UNION ALL
                
                SELECT  'JOB_CODE' AS BIGVALE
                     ,  fnGetTxt('H0122') AS BIGNAME
                     ,  SUB_CODE             
                     ,  CODE_NAME            
                FROM    BSA100T              
                WHERE   COMP_CODE = #{S_COMP_CODE}
                AND     MAIN_CODE = 'H008'   
                AND     SUB_CODE  &lt;&gt; '$'
                
                UNION ALL
                
                SELECT  'SCHSHIP_CODE' AS BIGVALE
                     ,  fnGetTxt('H0124') AS BIGNAME
                     ,  SUB_CODE             
                     ,  CODE_NAME            
                FROM    BSA100T              
                WHERE   COMP_CODE = #{S_COMP_CODE}
                AND     MAIN_CODE = 'H009'   
                AND     SUB_CODE  &lt;&gt; '$'
                
                UNION ALL                  
                
                SELECT  'JOIN_CODE' AS BIGVALE
                     ,  fnGetTxt('H0125') AS BIGNAME
                     ,  SUB_CODE             
                     ,  CODE_NAME                           
                FROM    BSA100T                             
                WHERE   COMP_CODE = #{S_COMP_CODE}     
                AND     MAIN_CODE = 'H012'                  
                AND     SUB_CODE  &lt;&gt; '$'                    
                
                UNION ALL                                   
                
                SELECT  'PAY_GRADE_01' AS BIGVALE            
                     ,  fnGetTxt('H0015') AS BIGNAME  
                     ,  PAY_GRADE_01 as sub_code                       
                     ,  PAY_GRADE_01 AS CODE_NAME
                FROM    HBS200T
                        
                UNION ALL                                   
                
                SELECT  'PAY_GRADE_02' AS BIGVALE
                     ,  fnGetTxt('H0090') AS BIGNAME
                     ,  PAY_GRADE_02 as sub_code
                     ,  PAY_GRADE_02 AS CODE_NAME
                FROM    HBS200T
                GROUP   BY PAY_GRADE_02
                ) A
        WHERE BIGVALE = #{SEARCH_FIELD}
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_GetComboData4" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15_GetComboData4 */

        SET @OT_KIND01 = (
                            SELECT  NVL(OT_KIND01, '') AS OT_KIND01
                            FROM    (
                                    SELECT  DISTINCT(OT_KIND_01)    AS OT_KIND01
                                         ,  ''                      AS OT_KIND02
                                         ,  ''                      AS OT_KINDNM02
                                    FROM    HBS000T
                                    WHERE COMP_CODE = #{S_COMP_CODE}   
                                    AND STD_CODE  = #{STD_CODE}
                                    AND SUPP_TYPE = #{SUPP_TYPE}))

        SELECT  A.OT_KIND_01, B.OT_KIND_01_NAME
        FROM    (
                SELECT  val1 AS OT_KIND_01
                FROM    unilite.fnSplitTable(@OT_KIND01, '','/')
                WHERE   val1 != '') A
                LEFT  JOIN (
                            SELECT  OT_KIND_01      
                                 ,  OT_KIND_01_NAME 
                            FROM    HBS010T
                            WHERE   COMP_CODE = #{S_COMP_CODE}) B 
        WHERE A.OT_KIND_01 = B.OT_KIND_01
        
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_H0018" parameterType="rMap" resultType="rMap">        
    /* hat200ukrServiceImpl.selectList15_H0018 */                
        SELECT fnGetTxt('H0018') AS GUBUN                                 
             , CODE_NAME                                                          
             , SUB_CODE AS WAGES_CODE
             , 'BSA100T' AS TABLE_NAME
             , 'H033' AS WHERE_COLUMN
             , '3' AS TYPE
             , 'SELECT CASE WHEN T2.COTR_TYPE =''1''
                                 THEN T1.DUTY_TIME
                                 ELSE T1.DUTY_NUMEND
                  FROM HAT200T T1
                                INNER JOIN HBS100T T2
                                        ON T1.COMP_CODE = T2.COMP_CODE
                                       AND T1.DUTY_CODE = T2.DUTY_CODE
                 WHERE T1.COMP_CODE   = M.COMP_CODE
                   AND T1.DUTY_YYYYMM = M.PAY_YYYYMM
                   AND T1.PERSON_NUMB = M.PERSON_NUMB
                   AND T2.PAY_CODE = M.PAY_CODE
                   AND T1.DUTY_CODE =' AS SELECT_SYNTAX
             , 'H033' + 'Z' + SUB_CODE AS UNIQUE_CODE  
             , CAST(0 AS INT) AS CHOICE
             , 1 AS SEQ
        FROM BSA100T
        WHERE COMP_CODE = #{S_COMP_CODE}
        AND MAIN_CODE = 'H033'
        AND SUB_CODE &lt;&gt; '$'

        UNION

        SELECT fnGetTxt('H0018') + '1' AS GUBUN                           
             , CODE_NAME                                                          
             , SUB_CODE                                                           
             , 'BSA100T' AS TABLE_NAME                                            
             , 'H043' AS WHERE_COLUMN                                             
             , '3' AS TYPE                                                        
             , (CASE SUB_CODE WHEN '01'                                           
                                   THEN 'SELECT TOT_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '02'                                           
                                   THEN 'SELECT SUN_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'    
                              WHEN '03'                                           
                                   THEN 'SELECT WEEK_DAY                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '04'                                           
                                   THEN 'SELECT DED_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '05'                                           
                                   THEN 'SELECT DED_TIME                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '06'                                           
                                   THEN 'SELECT WORK_DAY                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '07'                                           
                                   THEN 'SELECT WORK_TIME                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '08'                                           
                                   THEN 'SELECT WEEK_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '09'                                           
                                   THEN 'SELECT FULL_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '10'                                           
                                   THEN 'SELECT MONTH_GIVE                        
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '11'                                           
                                   THEN 'SELECT MENS_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '12'                                           
                                   THEN 'SELECT SAT_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '13'                                           
                                   THEN 'SELECT EXTEND_WORK_TIME                  
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '15'                                           
                                   THEN 'SELECT NON_WEEK_DAY                      
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                                   ELSE ''                                        
                 END) AS SELECT_SNYTAX
             , 'H043' + 'Z' + SUB_CODE AS UNIQUE_CODE
             , CAST(0 AS INT) AS CHOICE
             , 3 AS SEQ
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = 'H043'
        AND     SUB_CODE &lt;&gt; '$'

        UNION ALL
        
        SELECT fnGetTxt('H0018') + '2' AS GUBUN                                 
             , CODE_NAME + '(' + fnGetTxt('H0128') + ')'                                                         
             , SUB_CODE                                                           
             , 'BSA100T' AS TABLE_NAME                                            
             , 'H033' AS WHERE_COLUMN                                             
             , '3' AS TYPE                                                        
             , 'SELECT CASE WHEN T2.COTR_TYPE =  ''1''                   
                                 THEN T1.DUTY_TIME                                
                                 ELSE T1.DUTY_NUM END                             
                  FROM HAT200T T1                                                 
                                INNER JOIN HBS100T T2                             
                                        ON T1.COMP_CODE = T2.COMP_CODE            
                                       AND T1.DUTY_CODE = T2.DUTY_CODE            
                 WHERE T1.COMP_CODE   = M.COMP_CODE                               
                   AND T1.DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +                             
                   'AND T1.PERSON_NUMB = M.PERSON_NUMB                             
                   AND T2.PAY_CODE = M.PAY_CODE                                   
                   AND T1.DUTY_CODE =' AS SELECT_SNYTAX                           
             , 'BFH033' + 'Z' + SUB_CODE AS UNIQUE_CODE                             
             , CAST(0 AS INT) AS CHOICE                                           
             , 4 AS SEQ                                                           
        FROM    BSA100T                                                            
        WHERE   COMP_CODE = #{S_COMP_CODE}                                   
        AND     MAIN_CODE = 'H033'                                                 
        AND     SUB_CODE &lt;&gt; '$'  
        
        UNION
        
        SELECT fnGetTxt('H0018') + '3' AS GUBUN                           
             , CODE_NAME + '(' + fnGetTxt('H0128') + ')'                                                         
             , SUB_CODE                                                           
             , 'BSA100T' AS TABLE_NAME                                             
             , 'H043' AS WHERE_COLUMN                                             
             , '3' AS TYPE                                                        
             , (CASE SUB_CODE WHEN '01'                                           
                                   THEN 'SELECT TOT_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +    
                                            'AND PERSON_NUMB = M.PERSON_NUMB'    
                              WHEN '02'                                           
                                   THEN 'SELECT SUN_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +          
                                            'AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '03'                                           
                                   THEN 'SELECT WEEK_DAY                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +     
                                            'AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '04'                                           
                                   THEN 'SELECT DED_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +            
                                            'AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '05'                                           
                                   THEN 'SELECT DED_TIME                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +           
                                            'AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '06'                                           
                                   THEN 'SELECT WORK_DAY                          
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +           
                                            'AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '07'                                           
                                   THEN 'SELECT WORK_TIME                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +           
                                            'AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '08'                                           
                                   THEN 'SELECT WEEK_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +            
                                            'AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '09'                                           
                                   THEN 'SELECT FULL_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +            
                                            'AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '10'                                           
                                   THEN 'SELECT MONTH_GIVE                        
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +            
                                            'AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '11'                                           
                                   THEN 'SELECT MENS_GIVE                         
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '12'                                           
                                   THEN 'SELECT SAT_DAY                           
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'    
                              WHEN '13'                                           
                                   THEN 'SELECT EXTEND_WORK_TIME                  
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                              WHEN '15'                                           
                                   THEN 'SELECT NON_WEEK_DAY                      
                                           FROM HAT300T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND DUTY_YYYYMM = M.PAY_YYYYMM        
                                            AND PERSON_NUMB = M.PERSON_NUMB'      
                                   ELSE ''                                        
                 END) AS SELECT_SNYTAX                                            
             , 'BFH043' + 'Z' + SUB_CODE AS UNIQUE_CODE                             
             , CAST(0 AS INT) AS CHOICE                                           
             , 5 AS SEQ                                                           
        FROM    BSA100T                                                            
        WHERE   COMP_CODE = #{S_COMP_CODE}                                   
        AND     MAIN_CODE = 'H043'                                                 
        AND     SUB_CODE &lt;&gt; '$'

        ORDER   BY SEQ, GUBUN, SUB_CODE
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_H0019" parameterType="rMap" resultType="rMap">        
    /* hat200ukrServiceImpl.selectList15_H0019 */                
        SELECT fnGetTxt('H0019') AS GUBUN                                 
             , WAGES_NAME + '(' + fnGetTxt('H0014') + ')' AS WAGES_NAME   
             , WAGES_CODE
             , 'HBS300T' AS TABLE_NAME
             , 'WAGES_CODE' AS WHERE_COLUMN
             , '3' AS TYPE     
             , 'SELECT SUM(AMOUNT_I) AS AMOUNT_I
                  FROM HPA300T          
                 WHERE COMP_CODE   = M.COMP_CODE
                   AND PERSON_NUMB = M.PERSON_NUMB
                   AND PAY_YYYYMM  = M.PAY_YYYYMM
                   AND SUPP_TYPE   = M.SUPP_TYPE
                   AND WAGES_CODE  =' AS SELECT_SYNTAX                            
             , 'HBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE                        
             , CAST(0 AS INT) AS CHOICE
        FROM    HBS300T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     CODE_TYPE = '1'

        UNION ALL

        SELECT fnGetTxt('H0019') AS GUBUN                                 
             , WAGES_NAME + '(' + fnGetTxt('H0013') + ')' AS  WAGES_NAME  
             , WAGES_CODE                                                         
             , 'HBS300T' AS TABLE_NAME                                            
             , 'WAGES_CODE' AS WHERE_COLUMN                                       
             , '10' AS TYPE                                                        
             , 'SELECT AMOUNT_I                                                   
                  FROM HPA200T                                                    
                 WHERE COMP_CODE   = M.COMP_CODE                                  
                   AND PERSON_NUMB = M.PERSON_NUMB                                
                   AND WAGES_CODE  ='  AS SELECT_SNYTAX
             , 'GHBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
             , CAST(0 AS INT) AS CHOICE
        FROM    HBS300T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     CODE_TYPE = '1'
        ORDER   BY TABLE_NAME, WHERE_COLUMN   
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList15_H0020" parameterType="rMap" resultType="rMap">        
    /* hat200ukrServiceImpl.selectList15_H0020 */                
        SELECT fnGetTxt('H0020') + '1' AS GUBUN  
             , CODE_NAME AS WAGES_NAME                                            
             , SUB_CODE AS WAGES_CODE                                             
             , 'BSA100T' AS TABLE_NAME                                            
             , 'H097' AS WHERE_COLUMN                                             
             , '3' AS TYPE                                                        
             , (CASE SUB_CODE WHEN '01'                                           
                                   THEN 'SELECT YEAR_NUM                          
                                           FROM HAT700T                           
                                          WHERE COMP_CODE   = M.COMP_CODE         
                                            AND PERSON_NUMB = M.PERSON_NUMB       
                                            AND DUTY_YYYY   = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1    
                                                                                 THEN LEFT(M.PAY_YYYYMM,4) - 2     
                                                                            WHEN YEAR_PROV_YYYY = 2   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4) - 1     
                                                                            WHEN YEAR_PROV_YYYY = 3   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4)         
                                                                            WHEN YEAR_PROV_YYYY = 4   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4)  + 1    
                                                                        END)                                       
                                                                 FROM HBS400T                                      
                                                                WHERE COMP_CODE = M.COMP_CODE)'                    
                                                                                                                   
                              WHEN '02'                                                                            
                                   THEN 'SELECT YEAR_USE                                                           
                                           FROM HAT700T                                                            
                                          WHERE COMP_CODE   = M.COMP_CODE                                          
                                            AND PERSON_NUMB = M.PERSON_NUMB                                        
                                            AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1    
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 2       
                                                                          WHEN YEAR_PROV_YYYY = 2     
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 1       
                                                                          WHEN YEAR_PROV_YYYY = 3     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)           
                                                                          WHEN YEAR_PROV_YYYY = 4     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)  + 1      
                                                                      END)                                         
                                                               FROM HBS400T                                        
                                                              WHERE COMP_CODE = M.COMP_CODE)'                      
                              WHEN '03'                                                                            
                                   THEN 'SELECT YEAR_PROV                                                          
                                           FROM HAT700T                                                            
                                          WHERE COMP_CODE   = M.COMP_CODE                                          
                                            AND PERSON_NUMB = M.PERSON_NUMB                                        
                                            AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1    
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 2       
                                                                          WHEN YEAR_PROV_YYYY = 2     
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 1       
                                                                          WHEN YEAR_PROV_YYYY = 3     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)           
                                                                          WHEN YEAR_PROV_YYYY = 4     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)  + 1      
                                                                      END)                                         
                                                               FROM HBS400T                                        
                                                              WHERE COMP_CODE = M.COMP_CODE)'                      
                                                                                                                   
                              WHEN '04'                                                                            
                                   THEN 'SELECT MONTH_NUM                                                          
                                           FROM HAT700T                                                            
                                          WHERE COMP_CODE   = M.COMP_CODE                                          
                                            AND PERSON_NUMB = M.PERSON_NUMB                                        
                                            AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1    
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 2       
                                                                          WHEN YEAR_PROV_YYYY = 2     
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 1       
                                                                          WHEN YEAR_PROV_YYYY = 3     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)           
                                                                          WHEN YEAR_PROV_YYYY = 4     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)  + 1      
                                                                      END)                                         
                                                               FROM HBS400T                                        
                                                              WHERE COMP_CODE = M.COMP_CODE)'                      
                              WHEN '05'                                                                            
                                   THEN 'SELECT MONTH_USE                                                          
                                           FROM HAT700T                                                            
                                          WHERE COMP_CODE   = M.COMP_CODE                                          
                                            AND PERSON_NUMB = M.PERSON_NUMB                                        
                                            AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1    
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 2       
                                                                          WHEN YEAR_PROV_YYYY = 2     
                                                                               THEN LEFT(M.PAY_YYYYMM,4) - 1       
                                                                          WHEN YEAR_PROV_YYYY = 3     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)           
                                                                          WHEN YEAR_PROV_YYYY = 4     
                                                                               THEN LEFT(M.PAY_YYYYMM,4)  + 1      
                                                                      END)                                         
                                                               FROM HBS400T                                        
                                                              WHERE COMP_CODE = M.COMP_CODE)'                      
                              WHEN '06'                                                                            
                                   THEN 'SELECT MONTH_PROV                                                         
                                           FROM HAT700T                                                            
                                          WHERE COMP_CODE   = M.COMP_CODE                                          
                                            AND PERSON_NUMB = M.PERSON_NUMB                                        
                                            AND DUTY_YYYY   = (SELECT (CASE WHEN YEAR_PROV_YYYY = 1  
                                                                                 THEN LEFT(M.PAY_YYYYMM,4) - 2     
                                                                            WHEN YEAR_PROV_YYYY = 2   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4) - 1     
                                                                            WHEN YEAR_PROV_YYYY = 3   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4)         
                                                                            WHEN YEAR_PROV_YYYY = 4   
                                                                                 THEN LEFT(M.PAY_YYYYMM,4)  + 1    
                                                                        END)                                       
                                                                 FROM HBS400T                                      
                                                                WHERE COMP_CODE = M.COMP_CODE)'                    
                              WHEN '07'                                          
                                   THEN 'SELECT BONUS_STD_I                      
                                           FROM HPA600T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB      
                                            AND PAY_YYYYMM  = M.PAY_YYYYMM       
                                            AND PERSON_NUMB = M.PERSON_NUMB      
                                            AND SUPP_TYPE   = M.SUPP_TYPE        
                                            AND SUPP_TYPE   = ''F'''
                              WHEN '08'                                          
                                   THEN 'SELECT BONUS_STD_I                      
                                           FROM HPA600T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB      
                                            AND PAY_YYYYMM  = M.PAY_YYYYMM       
                                            AND PERSON_NUMB = M.PERSON_NUMB      
                                            AND SUPP_TYPE   = M.SUPP_TYPE        
                                            AND SUPP_TYPE   = ''G'''
                                   ELSE ''
                 END) AS SELECT_SYNTAX  
             , 'H097' + 'Z' + SUB_CODE AS UNIQUE_CODE
             , CAST(0 AS INT) AS CHOICE
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = 'H097'
        AND     SUB_CODE &lt;&gt; '$'

        UNION ALL

        SELECT fnGetTxt('H0020') + '2' AS GUBUN                          
             , CODE_NAME AS WAGES_NAME                                           
             , SUB_CODE AS WAGES_CODE                                            
             , 'BSA100T' AS TABLE_NAME                                           
             , 'H098' AS WHERE_COLUMN                                            
             , '3' AS TYPE                                                       
             , (CASE SUB_CODE WHEN '01'                                          
                                   THEN 'SELECT ANNUAL_SALARY_I                  
                                           FROM HUM100T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '02'                                          
                                   THEN 'SELECT WAGES_STD_I                      
                                           FROM HUM100T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '03'                                          
                                   THEN 'SELECT SUPP_TOTAL_I                     
                                           FROM HPA600T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB      
                                            AND PAY_YYYYMM  = M.PAY_YYYYMM       
                                            AND SUPP_TYPE   = M.SUPP_TYPE'       
                              WHEN '04'                                          
                                   THEN 'SELECT DAY_WORK_TIME                    
                                           FROM HBS400T                          
                                          WHERE COMP_CODE = M.COMP_CODE'         
                              WHEN '05'                                          
                                   THEN 'SELECT SUPP_AGED_NUM                    
                                           FROM HUM100T                          
                                          WHERE COMP_CODE   = M.COMP_CODE        
                                            AND PERSON_NUMB = M.PERSON_NUMB'     
                              WHEN '06'                                          
                                   THEN 'SELECT (CASE WHEN ORI_JOIN_DATE =''00000000'' OR ORI_JOIN_DATE =''''   
                                                           THEN (CASE WHEN DATEDIFF(MONTH, JOIN_DATE, DATEADD(DAY, -1, DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) % 12 > 0 
                                                                           THEN DATEDIFF(MONTH,JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  + 1
                                                                           ELSE DATEDIFF(MONTH,JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  
                                                                  END )
                                                           ELSE (CASE WHEN DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) % 12 > 0 
                                                                           THEN DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  + 1
                                                                           ELSE DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  
                                                                  END)                
                                                  END) AS DIFFDAY                     
                                           FROM HUM100T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '07'                                               
                                   THEN 'SELECT (CASE WHEN SPOUSE = ''Y''     
                                                           THEN 1                     
                                                           ELSE 0                     
                                                  END) AS SPOUSE                      
                                          FROM HUM100T                                
                                         WHERE COMP_CODE   = M.COMP_CODE              
                                           AND PERSON_NUMB = M.PERSON_NUMB'           
                              WHEN '08'                                               
                                   THEN 'SELECT COM_YEAR_WAGES                        
                                           FROM HUM100T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '09'                                               
                                   THEN 'SELECT BONUS_STD_I                           
                                           FROM HUM100T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '10'                                               
                                   THEN 'SELECT CHILD_20_NUM                          
                                           FROM HUM100T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '11'                                               
                                   THEN 'SELECT PAY_PRESERVE_I                        
                                           FROM HUM100T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '12'                                               
                                   THEN 'SELECT ANNUAL_SALARY_I                       
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4)   
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '13'                                               
                                   THEN 'SELECT ANNUAL_SALARY_I                       
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) - 1
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '14'                                               
                                   THEN 'SELECT WAGES_STD_I                           
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4)   
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '15'                                               
                                   THEN 'SELECT WAGES_STD_I                           
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -1
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '20'                                               
                                   THEN 'SELECT ANNUAL_SALARY_I                           
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -2
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                              WHEN '21'                                               
                                   THEN 'SELECT WAGES_STD_I                           
                                           FROM HBS210T                               
                                          WHERE COMP_CODE   = M.COMP_CODE             
                                            AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -2
                                            AND PERSON_NUMB = M.PERSON_NUMB'          
                                   ELSE ''                                            
                 END) AS SELECT_SNYTAX                                                
             , 'H098' + 'Z' + SUB_CODE AS UNIQUE_CODE                                 
             , CAST(0 AS INT) AS CHOICE                                               
        FROM    BSA100T                                                                
        WHERE   COMP_CODE = #{S_COMP_CODE}                                        
        AND     MAIN_CODE = 'H098'                                                     
        AND     SUB_CODE &lt;&gt; '$'

        UNION ALL

        SELECT fnGetTxt('H0020') + '2' AS GUBUN                               
             , WAGES_NAME + '(' + fnGetTxt('H0015') + ')' AS WAGES_NAME       
             , WAGES_CODE                                                             
             , 'HBS300T' AS TABLE_NAME                                                
             , 'WAGES_CODE' AS WHERE_COLUMN                                           
             , '2' AS TYPE                                                            
             , 'SELECT WAGES_I                                                        
                  FROM HBS200T A                                                      
                               INNER JOIN HUM100T B                                   
                                       ON A.COMP_CODE    = B.COMP_CODE                
                                      AND A.PAY_GRADE_01 = B.PAY_GRADE_01             
                                      AND A.PAY_GRADE_02 = B.PAY_GRADE_02             
                 WHERE B.COMP_CODE   = M.COMP_CODE                                    
                   AND B.PERSON_NUMB = M.PERSON_NUMB                                  
                   AND WAGES_CODE =' AS SELECT_SNYTAX                                 
             , 'HBS200T' + 'Z' + WAGES_CODE AS UNIQUE_CODE                            
             , CAST(0 AS INT) AS CHOICE                                               
        FROM    HBS300T                                                                
        WHERE   COMP_CODE  = #{S_COMP_CODE}                                       
        AND     WAGES_KIND = '1'
            
        UNION ALL

        SELECT fnGetTxt('H0020') + '2'                    AS GUBUN  
             , WAGES_NAME + '(' + fnGetTxt('H0128') + ')' AS WAGES_NAME 
             , WAGES_CODE
             , 'HBS300T'     AS TABLE_NAME 
             , 'WAGES_CODE'  AS WHERE_COLUMN  
             , '2' AS TYPE 
             , 'SELECT SUM(AMOUNT_I) AS AMOUNT_I
                  FROM            HPA300T AS A
                       INNER JOIN HUM100T AS B ON B.COMP_CODE   = A.COMP_CODE
                                              AND B.PERSON_NUMB = A.PERSON_NUMB
                 WHERE B.COMP_CODE   = M.COMP_CODE
                   AND B.PERSON_NUMB = M.PERSON_NUMB 
                   AND A.PAY_YYYYMM  = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                   'AND (A.SUPP_TYPE  = M.SUPP_TYPE OR A.SUPP_TYPE = M2.REF_CODE1) 
                   AND A.WAGES_CODE  =' AS SELECT_SNYTAX   
             , 'BFHBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
             , CAST(0 AS INT) AS CHOICE
        FROM    HBS300T
        WHERE   COMP_CODE  = #{S_COMP_CODE}
        AND     WAGES_CODE = '100' 
        AND     WAGES_KIND = '1'

        UNION ALL

        SELECT fnGetTxt('H0020') + '3' AS GUBUN      
             , fnGetTxt('H0016')       AS WAGES_NAME 
             , '900' AS WAGES_CODE                                                    
             , '000T' AS TABLE_NAME                                                   
             , '0000' AS WHERE_COLUMN                                                 
             , '9' AS TYPE                                                            
             , 'SELECT SUPP_TYPE                                                      
                     , OT_KIND_01                                                     
                     , OT_KIND_02                                                     
                     , OT_KIND_FULL                                                   
                     , STD_CODE                                                       
                     , CALCU_SEQ                                                      
                     , SELECT_VALUE                                                   
                     , SELECT_NAME                                                    
                     , TABLE_NAME                                                     
                     , WHERE_COLUMN                        
                     
                                                
                     , TYPE                                                           
                     , SELECT_SYNTAX                                                  
                     , UNIQUE_CODE                                                    
                  FROM HBS000T                                                        
                 WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX                      
             , 'HBSGUNSOK' AS UNIQUE_CODE                                             
             , CAST(0 AS INT) AS CHOICE                                               
        
        UNION ALL                      
        
        SELECT fnGetTxt('H0020') + '3' AS GUBUN                               
             , fnGetTxt('H0127') AS WAGES_NAME            
        
             , '901' AS WAGES_CODE                                                    
             , '000T' AS TABLE_NAME                                                   
             , '0000' AS WHERE_COLUMN                                                 
             , '9' AS TYPE                                                            
             , 'SELECT SUPP_TYPE                                                      
                     , OT_KIND_01                                                     
                     , OT_KIND_02                                                     
                     , OT_KIND_FULL                                                   
                     , STD_CODE                                                       
                     , CALCU_SEQ                                                      
                     , SELECT_VALUE                                                   
                     , SELECT_NAME                                                    
                     , TABLE_NAME                                                     
                     , WHERE_COLUMN                                                   
                     , TYPE                                                           
                     , SELECT_SYNTAX                                                  
                     , UNIQUE_CODE                                                    
                  FROM HBS000T                                                        
                 WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX                      
             , 'HBSGUNSOK2' AS UNIQUE_CODE                                             
             , CAST(0 AS INT) AS CHOICE                                               
        
        UNION ALL

        SELECT fnGetTxt('H0020') + '4' AS GUBUN       
             , fnGetTxt('H0017')       AS WAGES_NAME  
             , '910' AS WAGES_CODE                                                    
             , '000T' AS TABLE_NAME                                                   
             , '0000' AS WHERE_COLUMN                                                 
             , '8' AS TYPE                                                            
             , 'SELECT SUPP_TYPE                                                      
                     , OT_KIND_01                                                     
                     , OT_KIND_02                                                     
                     , OT_KIND_FULL                                                   
                     , STD_CODE                                                       
                     , CALCU_SEQ                                                      
                     , SELECT_VALUE                                                   
                     , SELECT_NAME                                                    
                     , TABLE_NAME                                                     
                     , WHERE_COLUMN                                                   
                     , TYPE                                                           
                     , SELECT_SYNTAX                                                  
                     , UNIQUE_CODE                                                    
                  FROM HBS000T                                                        
                 WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX                      
             , 'BONUSGUNSOK' AS UNIQUE_CODE                                           
             , CAST(0 AS INT) AS CHOICE

        UNION ALL
         
        SELECT fnGetTxt('H0020') + '5' AS GUBUN 
             , fnGetTxt('H0002') + CODE_NAME + fnGetTxt('H0123') AS WAGES_NAME
             , SUB_CODE AS WAGES_CODE
             , 'HBS220T' AS TABLE_NAME
             , 'H032' AS WHERE_COLUMN
             , '11' AS TYPE
             , 'SELECT DEPART_RATE
                  FROM HBS220T A
                               INNER JOIN HUM100T B
                                       ON A.COMP_CODE    = B.COMP_CODE
                                      AND A.TREE_CODE    = B.DEPT_CODE
                 WHERE B.COMP_CODE   = M.COMP_CODE
                   AND B.PERSON_NUMB = M.PERSON_NUMB
                   AND SUPP_TYPE =' AS SELECT_SNYTAX
             , 'H032' + 'Z' + SUB_CODE AS UNIQUE_CODE
             , CAST(0 AS INT) AS CHOICE
        FROM    BSA100T 
        WHERE   COMP_CODE =  #{S_COMP_CODE}
        AND     MAIN_CODE = 'H032'
        AND     SUB_CODE NOT IN ('$', '1', 'F', 'G') 
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList15"  parameterType="foren.unilite.modules.human.hbs.Hbs020ukrModel" useGeneratedKeys="false">
    /* hat200ukrServiceImpl.insertList15 */
        INSERT INTO HBS000T                                           
        (   OT_KIND_01
        ,   OT_KIND_02
        ,   SUPP_TYPE
        ,   OT_KIND_FULL
        ,   STD_CODE
        ,   CALCU_SEQ
        ,   SELECT_VALUE
        ,   SELECT_NAME
        ,   TABLE_NAME
        ,   WHERE_COLUMN
        ,   TYPE
        ,   SELECT_SYNTAX
        ,   UNIQUE_CODE
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        ,   COMP_CODE
        )
        VALUES 
        (   #{OT_KIND_01}       --OT_KIND_01      
        ,   #{OT_KIND_02}       --OT_KIND_02      
        ,   #{SUPP_TYPE}        --SUPP_TYPE       
        ,   #{OT_KIND_FULL}     --OT_KIND_FULL    
        ,   #{STD_CODE}         --STD_CODE        
        ,   #{CALCU_SEQ}        --CALCU_SEQ       
        ,   #{SELECT_VALUE}     --SELECT_VALUE    
        ,   #{SELECT_NAME}      --SELECT_NAME     
        ,   #{TABLE_NAME}       --TABLE_NAME      
        ,   #{WHERE_COLUMN}     --WHERE_COLUMN    
        ,   #{TYPE}             --TYPE            
        ,   #{SELECT_SYNTAX}    --SELECT_SYNTAX   
        ,   #{UNIQUE_CODE}      --UNIQUE_CODE     
        ,   #{S_USER_ID}        --UPDATE_DB_USER  
        ,   SYSDATETIME         --UPDATE_DB_TIME  
        ,   #{S_COMP_CODE}      --COMP_CODE
        )
    </insert>
    
    <delete id="hbs020ukrServiceImpl.deleteList15" parameterType="rMap">
    /* hat200ukrServiceImpl.deleteList15 */
        DELETE
        FROM    HBS000T
        WHERE   COMP_CODE  = #{S_COMP_CODE} 
        AND     STD_CODE   = #{STD_CODE}
        AND     OT_KIND_01 = #{OT_KIND_01}
        AND     OT_KIND_02 = #{OT_KIND_02}
        AND     SUPP_TYPE  = #{SUPP_TYPE}
    </delete>

    <!--상여지급기준 등록 상여구분 콤보-->
    <select id="hbs020ukrServiceImpl.getBonusTypeCode" parameterType="rMap" resultType="rMap">
        --UBsaExKrv.CBsaExSKr[fnRecordList] Query07              
        SELECT  SUB_CODE  as "value"
             ,  CODE_NAME as text
             ,  SUB_CODE  as "option"
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = 'H032'
        AND     SUB_CODE != '$'
        AND     SUB_CODE  &gt; '1'
        AND     SUB_CODE  &lt; 'E'
        ORDER   BY SORT_SEQ, SUB_CODE
    </select>

    <select id="hbs020ukrServiceImpl.selectList18" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList18 */
        SELECT  BONUS_KIND                       
             ,  BONUS_TYPE                       
             ,  STRT_MONTH                       
             ,  LAST_MONTH                       
             ,  SUPP_RATE                        
             ,  SUPP_TOTAL_I                     
        FROM    HBO100T                          
        WHERE   COMP_CODE  = #{S_COMP_CODE} 
        AND     BONUS_KIND = #{BONUS_KIND} 
        AND     BONUS_TYPE = #{BONUS_TYPE} 
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList18" parameterType="Map">
        /*hbs020ukrServiceImpl.insertList18*/
        INSERT INTO HBO100T (COMP_CODE, BONUS_KIND, BONUS_TYPE, STRT_MONTH, LAST_MONTH, SUPP_RATE, SUPP_TOTAL_I, UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
        VALUES(#{S_COMP_CODE}, #{BONUS_KIND}, #{BONUS_TYPE}, #{STRT_MONTH}, #{LAST_MONTH}, #{SUPP_RATE}, #{SUPP_TOTAL_I}, #{S_USER_ID}, SYSDATETIME, #{S_USER_ID}, SYSDATETIME)
    </insert>
    
    <delete id="hbs020ukrServiceImpl.deleteList18" parameterType="Map">
        /*hbs020ukrServiceImpl.deleteList18*/
        DELETE  HBO100T
        WHERE   BONUS_KIND = #{BONUS_KIND}
        AND     BONUS_TYPE = #{BONUS_TYPE}
        AND     STRT_MONTH = #{STRT_MONTH}
        AND     LAST_MONTH = #{LAST_MONTH}
        AND     SUPP_RATE = #{SUPP_RATE}
        AND     SUPP_TOTAL_I = #{SUPP_TOTAL_I}
    </delete>
    
    <select id="hbs020ukrServiceImpl.selectList18_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList18 */
        SELECT  BE_BONUS_KIND                   
             ,  AF_BONUS_KIND                   
             ,  STD_MONTH                       
        FROM    HBO110T                         
        WHERE   COMP_CODE = #{S_COMP_CODE} 
    </select>
    
    <insert id="hbs020ukrServiceImpl.insertList18_1" parameterType="Map">
        /*hbs020ukrServiceImpl.insertList18_1*/
        INSERT INTO HBO110T (COMP_CODE, BE_BONUS_KIND, AF_BONUS_KIND, STD_MONTH, UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
        VALUES(#{S_COMP_CODE}, #{BE_BONUS_KIND}, #{AF_BONUS_KIND}, #{STD_MONTH}, #{S_USER_ID}, SYSDATETIME, #{S_USER_ID}, SYSDATETIME)
    </insert>
    
    <delete id="hbs020ukrServiceImpl.deleteList18_1" parameterType="Map">
        /*hbs020ukrServiceImpl.deleteList18_1*/
        DELETE  HBO110T
        WHERE   BE_BONUS_KIND = #{BE_BONUS_KIND}
        AND     AF_BONUS_KIND = #{AF_BONUS_KIND}
        AND     STD_MONTH     = #{STD_MONTH}
    </delete>
    
    <insert id="hbs020ukrServiceImpl.insertExcelHbs210t_xls" parameterType="Map">
        /*hbs020ukrServiceImpl.insertExcelHbs210t_xls*/
        INSERT INTO HBS210T_XLS
            (_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, PERSON_NUMB, ANNUAL_SALARY_I, WAGES_STD_I)
        VALUES (
            #{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, #{PERSON_NUMB}, #{ANNUAL_SALARY_I}, #{WAGES_STD_I}
        )
    </insert>
    
    <update id="hbs020ukrServiceImpl.excelValidate" >
        /*hbs020ukrServiceImpl.excelValidate*/
        UPDATE  A
        SET     A._EXCEL_HAS_ERROR = (CASE WHEN B.PERSON_NUMB IS NULL 
                                           THEN 'Y' 
                                      ELSE A._EXCEL_HAS_ERROR 
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN B.PERSON_NUMB IS NULL  
                                           THEN NVL(_EXCEL_ERROR_MSG,'') + '해당 사번의 사원이 존재하지 않습니다. ' 
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM               HBS210T_XLS  A 
                LEFT JOIN  HUM100T      B ON B.COMP_CODE    = #{S_COMP_CODE}
                                         AND A.PERSON_NUMB  = B.PERSON_NUMB
        WHERE   A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>
    
    <select id="hbs020ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /*hbs020ukrServiceImpl.selectExcelUploadSheet1*/
        SELECT  #{YEAR_YYYY} AS YEAR_YYYY
             ,  A._EXCEL_JOBID
             ,  A._EXCEL_ROWNUM
             ,  A._EXCEL_HAS_ERROR       
             ,  A._EXCEL_ERROR_MSG
             ,  A.PERSON_NUMB
             ,  NVL(B.NAME, '') AS NAME
             ,  NVL(B.DEPT_NAME, '') AS DEPT_NAME
             ,  A.ANNUAL_SALARY_I
             ,  A.WAGES_STD_I
        FROM              HBS210T_XLS A
                LEFT JOIN HUM100T     B ON B.COMP_CODE   = #{S_COMP_CODE}
                                       AND A.PERSON_NUMB = B.PERSON_NUMB   
         WHERE  A._EXCEL_JOBID = #{_EXCEL_JOBID}
         ORDER  BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
    </select>
    
    <update id="hbs020ukrServiceImpl.insertExcelToMaster" parameterType="Map">
        /*hbs020ukrServiceImpl.insertExcelToMaster*/
        UPDATE  HUM100T
        SET     ANNUAL_SALARY_I     = #{ANNUAL_SALARY_I}
          ,     WAGES_STD_I         = #{WAGES_STD_I}
          ,     PAY_PRESERVE_I      = #{PAY_PRESERVE_I}
        WHERE   COMP_CODE    = #{COMP_CODE}
        AND     PERSON_NUMB  = #{PERSON_NUMB}    
    </update>
    
    <insert id="hbs020ukrServiceImpl.test" >
        insert into hbs210t (comp_code, year_yyyy, person_numb, update_db_user, update_db_time, insert_db_user, insert_db_time)
        values ('MASTER', '2014', '11111', 'Tom', SYSDATETIME, 'Jerry', SYSDATETIME)
        insert into hbs210t (comp_code) values ('MASTER')
    </insert>
    
    <!--근태코드등록 시작 -->
    <select id="hbs020ukrServiceImpl.sub_length" parameterType="rMap" resultType="String">
        SELECT  SUB_LENGTH
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = #{MAIN_CODE}
        AND     SUB_CODE  = '$'
    </select>
    
    <select id="hbs020ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
        SELECT  MAIN_CODE                                  
             ,  SUB_CODE                                   
             ,  CODE_NAME                                  
             ,  CODE_NAME_EN                               
             ,  CODE_NAME_CN                               
             ,  CODE_NAME_JP                               
             ,  CAST(REF_CODE1 AS INT) AS REF_CODE1        
             ,  REF_CODE2                                  
             ,  REF_CODE3                                  
             ,  REF_CODE4                                  
             ,  REF_CODE5                                  
             ,  SUB_LENGTH                                 
             ,  USE_YN                                     
             ,  SORT_SEQ                                   
             ,  CAST(SYSTEM_CODE_YN AS INT) SYSTEM_CODE_YN 
             ,  UPDATE_DB_USER                             
             ,  UPDATE_DB_TIME                             
             ,  COMP_CODE                                  
        FROM    BSA100T                                    
        WHERE   COMP_CODE = #{S_COMP_CODE}            
        AND     MAIN_CODE = #{MAIN_CODE}             
        AND     SUB_CODE != '$'                            
        ORDER   BY MAIN_CODE, SUB_CODE
    </select>
    
    <update id="hbs020ukrServiceImpl.insert2" parameterType="rMap">
        INSERT INTO BSA100T
        ( MAIN_CODE, SUB_CODE
        , CODE_NAME
        , CODE_NAME_EN
        , CODE_NAME_CN
        , CODE_NAME_JP
        , REF_CODE1, REF_CODE2, REF_CODE3, REF_CODE4,    REF_CODE5,      SUB_LENGTH
        , USE_YN,    SORT_SEQ,  SYSTEM_CODE_YN,          INSERT_DB_USER, INSERT_DB_TIME
        , UPDATE_DB_USER, UPDATE_DB_TIME
        , COMP_CODE
        )
        VALUES ( #{MAIN_CODE}, #{SUB_CODE}
               <if test='LOGIN_TYPE.equals("ko")'>
               , #{CODE_NAME}                      
               , ''
               , ''
               , ''
               </if>
               <if test='LOGIN_TYPE.equals("CN")'>
               , ''                    
               , #{CODE_NAME}
               , ''
               , ''
               </if>
               <if test='LOGIN_TYPE.equals("EN")'>
               , ''                    
               , ''
               , #{CODE_NAME}
               , ''
               </if>
               <if test='LOGIN_TYPE.equals("JP")'>
               , ''                        
               , ''
               , ''
               , #{CODE_NAME}
               </if>
               , #{REF_CODE1}, #{REF_CODE2}, #{REF_CODE3}, #{REF_CODE4}, #{REF_CODE5}, ${SUB_LENGTH}
               , #{USE_YN}, ${SORT_SEQ}, ${SYSTEM_CODE_YN}, #{USER_ID}, SYSDATETIME, #{USER_ID}, SYSDATETIME
               , #{S_COMP_CODE}
               )
    </update>
    
    <update id="hbs020ukrServiceImpl.update2" parameterType="rMap">
        UPDATE  BSA100T
        SET
                <if test='LOGIN_TYPE.equals("ko")'> 
                    CODE_NAME      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("CN")'> 
                    CODE_NAME_CN      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("EN")'> 
                    CODE_NAME_EN      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("JP")'> 
                    CODE_NAME_JP      = #{CODE_NAME}
                </if>
                
                , REF_CODE1      = #{REF_CODE1}
                
                , REF_CODE2      = #{REF_CODE2}
                , REF_CODE3      = #{REF_CODE3}
                , REF_CODE4      = #{REF_CODE4}
                , REF_CODE5      = #{REF_CODE5}
                , SUB_LENGTH     = ${SUB_LENGTH}
                <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                , USE_YN         = #{USE_YN}
                </if>
                <if test="@foren.Ognl@isNotEmpty(SORT_SEQ)">
                , SORT_SEQ       = ${SORT_SEQ}
                </if>
                <if test="@foren.Ognl@isNotEmpty(SYSTEM_CODE_YN)">
                , SYSTEM_CODE_YN = ${SYSTEM_CODE_YN}
                </if>
                , UPDATE_DB_USER = #{USER_ID}
                , UPDATE_DB_TIME = SYSDATETIME
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = #{MAIN_CODE}
        AND     SUB_CODE  = #{SUB_CODE}
    </update>
    
    <update id="hbs020ukrServiceImpl.delete2" parameterType="rMap">
        DELETE FROM BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = #{MAIN_CODE}
        AND     SUB_CODE  = #{SUB_CODE}
    </update>
    
    
<!--근태코드등록 끝 -->

<!--근태기준등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList3" parameterType="rMap" resultType="rMap">
    SELECT  PAY_CODE                        
         ,  DUTY_CODE                       
         ,  DUTY_TYPE                       
         ,  COTR_TYPE                       
         ,  DUTY_STRT_MM                    
         ,  DUTY_STRT_DD                    
         ,  DUTY_LAST_MM                    
         ,  DUTY_LAST_DD                    
         ,  MARGIR_TYPE                     
         ,  MONTH_REL_CODE                  
         ,  YEAR_REL_CODE                   
         ,  MENS_REL_CODE                   
         ,  WEEK_REL_CODE                   
         ,  FULL_REL_CODE                   
    FROM    HBS100T                         
    WHERE   COMP_CODE = #{S_COMP_CODE}
 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    AND     PAY_CODE = #{PAY_CODE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">
    AND     DUTY_CODE = #{DUTY_CODE}
 </if>
</select>

<update id="hbs020ukrServiceImpl.insert3" parameterType="rMap">
       
    INSERT INTO HBS100T
    (   PAY_CODE
    ,   DUTY_CODE
    ,   DUTY_TYPE
    ,   COTR_TYPE
    ,   DUTY_STRT_MM
    ,   DUTY_STRT_DD
    ,   DUTY_LAST_MM
    ,   DUTY_LAST_DD
    ,   MARGIR_TYPE
    ,   MONTH_REL_CODE
    ,   YEAR_REL_CODE
    ,   MENS_REL_CODE
    ,   WEEK_REL_CODE
    ,   FULL_REL_CODE
    ,   INSERT_DB_USER
    ,   INSERT_DB_TIME
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{PAY_CODE}
    ,   #{DUTY_CODE}
    ,   '1'
    ,   #{COTR_TYPE}
    ,   0
    ,   '01'
    ,   0
    ,   '00'
    ,   #{MARGIR_TYPE}
    ,   #{MONTH_REL_CODE}
    ,   #{YEAR_REL_CODE}
    ,   #{MENS_REL_CODE}
    ,   #{WEEK_REL_CODE}
    ,   #{FULL_REL_CODE}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
    
</update>

<update id="hbs020ukrServiceImpl.update3" parameterType="rMap">
    UPDATE HBS100T
       SET DUTY_TYPE      = '1'
         , COTR_TYPE      = #{COTR_TYPE}
         , DUTY_STRT_MM   = 0
         , DUTY_STRT_DD   = '01'
         , DUTY_LAST_MM   = 0
         , DUTY_LAST_DD   = '00'
         , MARGIR_TYPE    = #{MARGIR_TYPE}
         , MONTH_REL_CODE = #{MONTH_REL_CODE}
         , YEAR_REL_CODE  = #{YEAR_REL_CODE}
         , MENS_REL_CODE  = #{MENS_REL_CODE}
         , WEEK_REL_CODE  = #{WEEK_REL_CODE}
         , FULL_REL_CODE  = #{FULL_REL_CODE}
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = SYSDATETIME
         
     WHERE PAY_CODE       = #{PAY_CODE}
       AND DUTY_CODE      = #{DUTY_CODE}
       AND COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete3" parameterType="rMap">
    DELETE  FROM HBS100T 
    WHERE   PAY_CODE  = #{PAY_CODE}
    AND     DUTY_CODE = #{DUTY_CODE}
    AND     COMP_CODE = #{S_COMP_CODE}
</update>
<!--근태기준등록 끝 -->

<!--휴무별근무시간등록 시작 -->
    <!--         
        등록 및 삭제 없음
    -->
    <select id="hbs020ukrServiceImpl.selectList4" parameterType="rMap" resultType="rMap">
        SELECT  MAIN_CODE
             ,  SUB_CODE
             ,  CODE_NAME
             ,  CODE_NAME_EN
             ,  CODE_NAME_CN
             ,  CODE_NAME_JP
             ,  REF_CODE1
             ,  REF_CODE2
             ,  REF_CODE3
             ,  REF_CODE4
             ,  REF_CODE5
             ,  SUB_LENGTH
             ,  USE_YN
             ,  SORT_SEQ
             ,  CAST(SYSTEM_CODE_YN AS INT) SYSTEM_CODE_YN 
             ,  UPDATE_DB_USER
             ,  UPDATE_DB_TIME
             ,  COMP_CODE
        FROM    BSA100T
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = #{MAIN_CODE}
        AND     SUB_CODE != '$'
        ORDER   BY MAIN_CODE, SUB_CODE
    </select>
<update id="hbs020ukrServiceImpl.update4" parameterType="rMap">
</update>
<!--휴무별근무시간등록 끝 -->


<!--년월차기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList8" parameterType="rMap" resultType="rMap">
    SELECT  PAY_CODE                                                 
         ,  PAY_DD                                                   
         ,  AMASS_NUM                                                
         ,  SAVE_MONTH_NUM                                           
         ,  ABSENCE_CNT                                              
         ,  SUPP_YEAR_NUM_B                                          
         ,  SUPP_YEAR_NUM_A                                          
         ,  WAGES_TYPE                                               
         ,  CAST(NVL(FIVE_DAY_CHECK,0) AS INT) AS FIVE_DAY_CHECK  
         ,  CAST(NVL(JOIN_MID_CHECK,0) AS INT) AS JOIN_MID_CHECK  
    FROM    HBS340T                                                  
    WHERE   COMP_CODE = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.insert8" parameterType="rMap">
    INSERT INTO HBS340T
    (   PAY_CODE
    ,   PAY_DD
    ,   AMASS_NUM
    ,   SAVE_MONTH_NUM
    ,   ABSENCE_CNT
    ,   SUPP_YEAR_NUM_B
    ,   SUPP_YEAR_NUM_A
    ,   FIVE_DAY_CHECK
    ,   JOIN_MID_CHECK
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{PAY_CODE}
    ,   '00'
    ,   ${AMASS_NUM}
    ,   ${SAVE_MONTH_NUM}
    ,   ${ABSENCE_CNT}
    ,   ${SUPP_YEAR_NUM_B}
    ,   ${SUPP_YEAR_NUM_A}
    ,   #{FIVE_DAY_CHECK}
    ,   #{JOIN_MID_CHECK}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update8" parameterType="rMap">
    UPDATE  HBS340T
    SET     PAY_DD          = '00'
      ,     AMASS_NUM       = ${AMASS_NUM}
      ,     SAVE_MONTH_NUM  = ${SAVE_MONTH_NUM}
      ,     ABSENCE_CNT     = ${ABSENCE_CNT}
      ,     SUPP_YEAR_NUM_B = ${SUPP_YEAR_NUM_B}
      ,     SUPP_YEAR_NUM_A = ${SUPP_YEAR_NUM_A}
      ,     WAGES_TYPE      = ${WAGES_TYPE}
      ,     FIVE_DAY_CHECK  = #{FIVE_DAY_CHECK}
      ,     JOIN_MID_CHECK  = #{JOIN_MID_CHECK}
      ,     UPDATE_DB_USER  = #{USER_ID}
      ,     UPDATE_DB_TIME  = SYSDATETIME
         
    WHERE   PAY_CODE        = #{PAY_CODE}
    AND     COMP_CODE       = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete8" parameterType="rMap">
    DELETE  FROM HBS340T 
    WHERE   PAY_CODE  = #{PAY_CODE}
    AND     COMP_CODE = #{S_COMP_CODE}
</update>
<!--년월차기준 등록 끝 -->


<!-- 지급/공제코드 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList9_1" parameterType="rMap" resultType="rMap">
    SELECT  MAIN_CODE
         ,  SUB_CODE
         ,  CODE_NAME
         ,  CODE_NAME_EN
         ,  CODE_NAME_CN
         ,  CODE_NAME_JP
         ,  REF_CODE1
         ,  REF_CODE2
         ,  REF_CODE3
         ,  REF_CODE4
         ,  REF_CODE5
         ,  SUB_LENGTH
         ,  USE_YN
         ,  SORT_SEQ
         ,  SYSTEM_CODE_YN
         ,  UPDATE_DB_USER
         ,  UPDATE_DB_TIME
         ,  COMP_CODE
    FROM    BSA100T
    WHERE   COMP_CODE = #{S_COMP_CODE}
    AND     MAIN_CODE = #{MAIN_CODE}
    AND     SUB_CODE != '$'
    ORDER   BY MAIN_CODE, SUB_CODE
</select>
<select id="hbs020ukrServiceImpl.selectList9_2" parameterType="rMap" resultType="rMap">
    SELECT  CODE_TYPE                      
         ,  WAGES_CODE                     
         ,  WAGES_NAME                     
         ,  WAGES_KIND                     
         ,  TAX_CODE                       
         ,  INCOME_KIND                    
         ,  TAX_AMOUNT_LMT_I               
         ,  EMP_TYPE
         ,  MED_TYPE
         ,  COM_PAY_TYPE
         ,  RETR_WAGES
         ,  RETR_BONUS
         ,  ORD_WAGES
         ,  NON_TAX_CODE
         ,  SEND_YN
         ,  WAGES_SEQ                      
         ,  CALCU_SEQ                      
         ,  PRINT_SEQ                      
         ,  SORT_SEQ                       
         ,  USE_YN                       
    FROM    HBS300T                        
    WHERE   COMP_CODE = #{S_COMP_CODE}
    AND     CODE_TYPE = '1'
</select>

<select id="hbs020ukrServiceImpl.useExistCheck9sub2" parameterType="rMap" resultType="rMap">
    --hbs300ukr.Chbs300kr[fnCodeValue]-1
    SELECT  (A.AA + B.AA + C.AA + D.AA) AS "COUNT"
    FROM    (
            SELECT  COUNT(*)  AA
            FROM    HPA300T
            WHERE   COMP_CODE  = #{S_COMP_CODE}
            AND     WAGES_CODE = #{WAGES_CODE}
            AND     SUPP_TYPE  = '1') A
       ,   (SELECT  COUNT(*)  AA
            FROM    HPA200T
            WHERE   COMP_CODE  = #{S_COMP_CODE}
            AND     WAGES_CODE = #{WAGES_CODE}) B
       ,   (SELECT  COUNT(*)  AA
            FROM    HPA400T
            WHERE   COMP_CODE  = #{S_COMP_CODE}
            AND     DED_CODE   = #{WAGES_CODE}) C
       ,   (SELECT  COUNT(*)  AA
            FROM    HPA500T
            WHERE   COMP_CODE  = #{S_COMP_CODE}
            AND     DED_CODE   = #{WAGES_CODE}) D
</select>
<update id="hbs020ukrServiceImpl.insert9_2" parameterType="rMap">
    INSERT INTO Hbs300T
    (   CODE_TYPE                            
    ,   WAGES_CODE                           
    ,   WAGES_NAME                           
    ,   WAGES_KIND                           
    ,   TAX_CODE                             
    ,   TAX_AMOUNT_LMT_I                     
    ,   EMP_TYPE                             
    ,   COM_PAY_TYPE                         
    ,   RETR_WAGES                           
    ,   NON_TAX_CODE                         
    ,   SEND_YN                              
    ,   WAGES_SEQ                            
    ,   CALCU_SEQ                            
    ,   PRINT_SEQ                            
    ,   SORT_SEQ                             
    ,   USE_YN
    ,   COMP_CODE  
    ,   MED_TYPE
    ,   RETR_BONUS
    ,   ORD_WAGES
    ,   INCOME_KIND                                  
    ,   INSERT_DB_USER                       
    ,   INSERT_DB_TIME                                                   
    ,   UPDATE_DB_USER                       
    ,   UPDATE_DB_TIME                       
    )                                      
    VALUES                                      
    (   1                                    
    ,   #{WAGES_CODE}                        
    ,   #{WAGES_NAME}
    ,   #{WAGES_KIND}
    ,   #{TAX_CODE}
    ,   ${TAX_AMOUNT_LMT_I}
    ,   #{EMP_TYPE}
    ,   #{COM_PAY_TYPE}
    ,   #{RETR_WAGES}         
    ,   #{NON_TAX_CODE}
    ,   #{SEND_YN}
    ,   ${WAGES_SEQ}
    ,   ${CALCU_SEQ}
    ,   ${PRINT_SEQ}
    ,   ${SORT_SEQ}
    ,   #{USE_YN}
    ,   #{S_COMP_CODE}
    ,   #{MED_TYPE}
    ,   #{RETR_BONUS}
    ,   #{ORD_WAGES}
    ,   #{INCOME_KIND}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{USER_ID}
    ,   SYSDATETIME
    )
</update>

<update id="hbs020ukrServiceImpl.insert9_3" parameterType="rMap">
    INSERT INTO BSA100T
    (   MAIN_CODE
    ,   SUB_CODE
    ,   CODE_NAME
    ,   REF_CODE1
    ,   REF_CODE2
    ,   REF_CODE3
    ,   SUB_LENGTH
    ,   USE_YN
    ,   SORT_SEQ
    ,   SYSTEM_CODE_YN
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{MAIN_CODE}
    ,   #{SUB_CODE}
    ,   #{CODE_NAME}
    ,   #{REF_CODE1}
    ,   #{REF_CODE2}
    ,   #{REF_CODE3}
    ,   ${SUB_LENGTH}
    ,   #{USE_YN}
    ,   1
    ,   0
    ,   #{USER_ID}        
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update9_2" parameterType="rMap">   
    UPDATE  Hbs300T
    SET     WAGES_NAME       = #{WAGES_NAME}
      ,     WAGES_KIND       = #{WAGES_KIND}
      ,     TAX_CODE         = #{TAX_CODE}
      ,     INCOME_KIND      = #{INCOME_KIND}
      ,     TAX_AMOUNT_LMT_I = ${TAX_AMOUNT_LMT_I}
      ,     EMP_TYPE         = #{EMP_TYPE}
      ,     COM_PAY_TYPE     = #{COM_PAY_TYPE}
      ,     RETR_WAGES       = #{RETR_WAGES}          
      ,     NON_TAX_CODE     = #{NON_TAX_CODE}
      ,     SEND_YN          = #{SEND_YN}
      ,     WAGES_SEQ        = #{WAGES_SEQ}
      ,     CALCU_SEQ        = ${CALCU_SEQ}
      ,     PRINT_SEQ        = ${PRINT_SEQ}
      ,     SORT_SEQ         = ${SORT_SEQ}
      ,     USE_YN           = #{USE_YN}
      ,     UPDATE_DB_USER   = #{USER_ID}
      ,     UPDATE_DB_TIME   = SYSDATETIME
      ,     MED_TYPE         = #{MED_TYPE}
      ,     RETR_BONUS       = #{RETR_BONUS}
      ,     ORD_WAGES        = #{ORD_WAGES}
             
    WHERE   CODE_TYPE        = 1
    AND     WAGES_CODE       = #{WAGES_CODE}
    AND     COMP_CODE        = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.update9_3" parameterType="rMap">
    UPDATE  BSA100T
    SET     CODE_NAME      = #{CODE_NAME}
      ,     CODE_NAME_EN   = NULL
      ,     CODE_NAME_CN   = NULL
      ,     CODE_NAME_JP   = NULL
      ,     REF_CODE1      = #{REF_CODE1}
      ,     REF_CODE2      = #{REF_CODE2}
      ,     REF_CODE3      = #{REF_CODE3}
      ,     REF_CODE4      = #{REF_CODE4}
      ,     REF_CODE5      = #{REF_CODE5}
      ,     SUB_LENGTH     = ${SUB_LENGTH}
      ,     USE_YN         = #{USE_YN}
      ,     SORT_SEQ       = 1
      ,     SYSTEM_CODE_YN = 0
      ,     UPDATE_DB_USER = #{USER_ID}
      ,     UPDATE_DB_TIME = SYSDATETIME
         
    WHERE   MAIN_CODE      = #{MAIN_CODE}
    AND     SUB_CODE       = #{SUB_CODE}
    AND     COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete9_2" parameterType="rMap">   
    DELETE  FROM Hbs300T 
    WHERE   CODE_TYPE  = '1'
    AND     WAGES_CODE = #{WAGES_CODE}
    AND     COMP_CODE  = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete9_3" parameterType="rMap">
    DELETE  FROM BSA100T 
    WHERE   MAIN_CODE = 'H034'
    AND     SUB_CODE  = #{SUB_CODE}
    AND     COMP_CODE = #{S_COMP_CODE}
</update>
<!-- 지급/공제코드 등록 끝 -->

<!-- 입/퇴사자 지급 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList10" parameterType="rMap" resultType="rMap">
    SELECT  PAY_CODE
         ,  PAY_PROV_FLAG
         ,  EXCEPT_TYPE
         ,  WAGES_CODE
         ,  WORK_DAY
         ,  PROV_YN
         ,  DAILY_YN
    FROM    HBS360T
    WHERE   COMP_CODE       = #{S_COMP_CODE} 
    AND     PAY_CODE        = #{PAY_CODE}
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
    AND     PAY_PROV_FLAG   = #{PAY_PROV_FLAG}
    </if>
    <if test="@foren.Ognl@isNotEmpty(EXCEPT_TYPE)">
    AND     EXCEPT_TYPE     = #{EXCEPT_TYPE}
    </if>
</select>
<!-- 입/퇴사자 지급 등록  수당코드 콤보 가져오기 -->
<select id="hbs020ukrServiceImpl.getWagesCode" parameterType="rMap" resultType="rMap">  
    SELECT  WAGES_CODE   as "value"
         ,  WAGES_NAME   as text
         ,  WAGES_CODE   as "option"
    FROM    HBS300T
    WHERE   COMP_CODE = #{S_COMP_CODE}
    AND     CODE_TYPE = '1'
</select>

<update id="hbs020ukrServiceImpl.insert10" parameterType="rMap">
    INSERT INTO Hbs360T
    (   PAY_CODE
    ,   PAY_PROV_FLAG
    ,   EXCEPT_TYPE
    ,   WAGES_CODE
    ,   WORK_DAY
    ,   PROV_YN
    ,   DAILY_YN
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{PAY_CODE}
    ,   #{PAY_PROV_FLAG}
    ,   #{EXCEPT_TYPE}
    ,   #{WAGES_CODE}
    ,   ${WORK_DAY}
    ,   #{PROV_YN}
    ,   #{DAILY_YN}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update10" parameterType="rMap">
    UPDATE  Hbs360T
    SET     WORK_DAY       = ${WORK_DAY}
      ,     PROV_YN        = #{PROV_YN}
      ,     DAILY_YN       = #{DAILY_YN}
      ,     UPDATE_DB_USER = #{USER_ID}
      ,     UPDATE_DB_TIME = SYSDATETIME
    WHERE   PAY_CODE       = #{PAY_CODE}
    AND     PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
    AND     EXCEPT_TYPE    = #{EXCEPT_TYPE}
    AND     WAGES_CODE     = #{WAGES_CODE}
    AND     COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete10" parameterType="rMap">
    DELETE  FROM Hbs360T 
    WHERE   PAY_CODE      = #{PAY_CODE}
    AND     PAY_PROV_FLAG = #{PAY_PROV_FLAG}
    AND     EXCEPT_TYPE   = #{EXCEPT_TYPE}
    AND     WAGES_CODE    = #{WAGES_CODE}
    AND     COMP_CODE     = #{S_COMP_CODE}
</update>
<!-- 입/퇴사자 지급 등록 끝 -->


<!-- 부서별요율 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList13" parameterType="rMap" resultType="rMap">
    SELECT 
            A.COMP_CODE  
         ,  B.TREE_CODE  
         ,  A.TREE_NAME  
         ,  B.DEPART_RATE
         ,  B.SUPP_TYPE  
         ,  B.UPDATE_DB_USER 
         ,  B.UPDATE_DB_TIME 
    FROM               BSA210T A
            INNER JOIN HBS220T B ON A.COMP_CODE = B.COMP_CODE 
                                AND A.TREE_CODE = B.TREE_CODE 
    WHERE   B.COMP_CODE = #{S_COMP_CODE}
    <if test="@foren.Ognl@isNotEmpty(SUPP_TYPE)">
    AND     B.SUPP_TYPE = #{SUPP_TYPE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPTS)">                   
    AND     B.TREE_CODE IN
        <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
            #{item}
        </foreach>                                  
    </if>
</select>

<select id="hbs020ukrServiceImpl.createBaseDept" parameterType="Map" resultType="rMap">
    --UHbs01Krv.CHbs363ukr SetHbs363[fnHbs363Create] 
    INSERT INTO HBS220T                                                        
    (   COMP_CODE                                            
    ,   TREE_CODE                                            
    ,   DEPART_RATE                                          
    ,   SUPP_TYPE                                            
    ,   UPDATE_DB_USER                                       
    ,   UPDATE_DB_TIME
    )
    SELECT  COMP_CODE                                          
         ,  TREE_CODE                                          
         ,  0 AS DEPART_RATE                                   
         ,  #{SUPP_TYPE}    AS SUPP_TYPE
         ,  #{S_USER_ID}    AS UPDATE_DB_USER
         ,  SYSDATETIME     AS UPDATE_DB_TIME
    FROM    BSA210T
    WHERE   COMP_CODE   = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.insert13" parameterType="rMap">
    INSERT INTO HBS220T
    (   COMP_CODE
    ,   TREE_CODE
    ,   DEPART_RATE
    ,   SUPP_TYPE
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ) 
    VALUES
    (   #{S_COMP_CODE}
    ,   #{TREE_CODE}
    ,   ${DEPART_RATE}
    ,   #{SUPP_TYPE}
    ,   #{USER_ID}
    ,   SYSDATETIME
    )
</update>

<update id="hbs020ukrServiceImpl.update13" parameterType="rMap">
    UPDATE  HBS220T
    SET     DEPART_RATE    = ${DEPART_RATE}
      ,     UPDATE_DB_USER = #{USER_ID}
      ,     UPDATE_DB_TIME = SYSDATETIME
         
    WHERE   COMP_CODE      = #{S_COMP_CODE}
    AND     TREE_CODE      = #{TREE_CODE}
    AND     SUPP_TYPE      = #{SUPP_TYPE}
</update>

<update id="hbs020ukrServiceImpl.delete13" parameterType="rMap">
    DELETE  FROM HBS220T 
    WHERE   COMP_CODE      = #{S_COMP_CODE}
    AND     TREE_CODE      = #{TREE_CODE}
    AND     SUPP_TYPE      = #{SUPP_TYPE}
</update>
<!--부서별요율 등록 끝 -->


<!--끝전처리기준 등록 시작 -->

<select id="hbs020ukrServiceImpl.selectList14" parameterType="rMap" resultType="rMap">
    SELECT  WAGES_TYPE
         ,  WAGES_CODE
         ,  STD_AMOUNT_I
         ,  BELOW
         ,  CALCU_BAS
    FROM    HBS330T
    WHERE   COMP_CODE  = #{S_COMP_CODE}
    AND     WAGES_TYPE = #{WAGES_TYPE}
</select>

<update id="hbs020ukrServiceImpl.insert14" parameterType="rMap">
    INSERT INTO Hbs330T
    (   WAGES_TYPE
    ,   WAGES_CODE
    ,   STD_AMOUNT_I
    ,   BELOW
    ,   CALCU_BAS
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{WAGES_TYPE}
    ,   #{WAGES_CODE}
    ,   #{STD_AMOUNT_I}
    ,   #{BELOW}
    ,   #{CALCU_BAS}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update14" parameterType="rMap">
    UPDATE  Hbs330T
    SET     STD_AMOUNT_I   = #{STD_AMOUNT_I}
      ,     BELOW          = #{BELOW}
      ,     CALCU_BAS      = #{CALCU_BAS}
      ,     UPDATE_DB_USER = #{USER_ID}
      ,     UPDATE_DB_TIME = SYSDATETIME
         
    WHERE   WAGES_TYPE     = #{WAGES_TYPE}
    AND     WAGES_CODE     = #{WAGES_CODE}
    AND     COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete14" parameterType="rMap">
    DELETE  FROM Hbs330T 
    WHERE   WAGES_TYPE = #{WAGES_TYPE}
    AND     WAGES_CODE = #{WAGES_CODE}
    AND     COMP_CODE  = #{S_COMP_CODE}
</update>
<!--끝전처리기준 등록 끝 -->


<!-- 근속수당기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList16" parameterType="rMap" resultType="rMap">
    SELECT  STRT_MONTH
         ,  LAST_MONTH
         ,  SUPP_TOTAL_I
         ,  SUPP_RATE
         ,  ACCEPT_CAREER_YN
         ,  PENALTY_CAREER_YN
         ,  BREAK_CAREER_YN
         ,  BASE_DATE_CODE
         ,  UPDATE_DB_USER
         ,  UPDATE_DB_TIME
    FROM    HBS350T
    WHERE   COMP_CODE = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.insert16" parameterType="rMap">
    INSERT INTO Hbs350T
    (   STRT_MONTH
    ,   LAST_MONTH
    ,   SUPP_TOTAL_I
    ,   SUPP_RATE
    ,   ACCEPT_CAREER_YN
    ,   PENALTY_CAREER_YN
    ,   BREAK_CAREER_YN
    ,   BASE_DATE_CODE
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   ${STRT_MONTH}
    ,   ${LAST_MONTH}
    ,   ${SUPP_TOTAL_I}
    ,   ${SUPP_RATE}
    <if test='ACCEPT_CAREER_YN == "true" '>
    ,   'Y'
    </if>
    <if test='ACCEPT_CAREER_YN == "false" '>
    ,   'N'
    </if>
    <if test='PENALTY_CAREER_YN == "true" '>
    ,   'Y'
    </if>
    <if test='PENALTY_CAREER_YN == "false" '>
    ,   'N'
    </if>
    <if test='BREAK_CAREER_YN == "true" '>
    ,   'Y'
    </if>
    <if test='BREAK_CAREER_YN == "false" '>
    ,   'N'
    </if>
    ,   #{BASE_DATE_CODE}         
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update16" parameterType="rMap">
    UPDATE  Hbs350T
    SET     LAST_MONTH        = ${LAST_MONTH}
      ,     SUPP_TOTAL_I      = ${SUPP_TOTAL_I}
      ,     SUPP_RATE         = ${SUPP_RATE}
      <if test='ACCEPT_CAREER_YN == "true" '>
      ,     ACCEPT_CAREER_YN  = 'Y'
      </if>
      <if test='ACCEPT_CAREER_YN == "false" '>
      ,     ACCEPT_CAREER_YN  = 'N'
      </if>
      <if test='PENALTY_CAREER_YN == "true" '>
      ,     PENALTY_CAREER_YN  = 'Y'
      </if>
      <if test='PENALTY_CAREER_YN == "false" '>
      ,     PENALTY_CAREER_YN  = 'N'
      </if>
      <if test='BREAK_CAREER_YN == "true" '>
      ,     BREAK_CAREER_YN  = 'Y'
      </if>
      <if test='BREAK_CAREER_YN == "false" '>
      ,     BREAK_CAREER_YN  = 'N'
      </if>       
      ,     BASE_DATE_CODE    = #{BASE_DATE_CODE}
      ,     UPDATE_DB_USER    = #{USER_ID}
      ,     UPDATE_DB_TIME    = SYSDATETIME
         
    WHERE   STRT_MONTH        = ${STRT_MONTH}
    AND     COMP_CODE         = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete16" parameterType="rMap">
    DELETE  FROM Hbs350T 
    WHERE   STRT_MONTH = ${STRT_MONTH}
    AND     COMP_CODE  = #{S_COMP_CODE}
</update>
<!-- 근속수당기준 등록 끝 -->


<!-- 상여구분자 등록 시작 -->
<!-- 
    read : 'hbs020ukrService.selectList4',
    create: 'hbs020ukrService.insert2',
    update: 'hbs020ukrService.update2',
    destroy: 'hbs020ukrService.delete2' 
    -->
<!-- 상여구분자 등록 끝 -->


<!--년월차기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList19" parameterType="rMap" resultType="rMap">
    SELECT  DOC_TYPE
         ,  DOC_ID
         ,  DOC_NAME 
    FROM    HBS800T 
    WHERE   COMP_CODE = #{S_COMP_CODE} 
    AND     DOC_TYPE  = #{DOC_TYPE}
</select>

<update id="hbs020ukrServiceImpl.insert19" parameterType="rMap">
    INSERT INTO Hbs800T
    (   DOC_TYPE
    ,   DOC_ID
    ,   DOC_NAME
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{DOC_TYPE}
    ,   #{DOC_ID}
    ,   #{DOC_NAME}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update19" parameterType="rMap">
    UPDATE  Hbs800T
    SET     DOC_NAME       = #{DOC_NAME}
      ,     UPDATE_DB_USER = #{USER_ID}
      ,     UPDATE_DB_TIME = SYSDATETIME
         
    WHERE   DOC_TYPE       = #{DOC_TYPE}
    AND     DOC_ID         = #{DOC_ID}
    AND     COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete19" parameterType="rMap">
    DELETE  FROM Hbs800T 
    WHERE   DOC_TYPE  = #{DOC_TYPE}
    AND     DOC_ID    = #{DOC_ID}
    AND     COMP_CODE = #{S_COMP_CODE}
</update>
<!--년월차기준 등록 끝 -->


<!-- 주민세신고지점 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList20" parameterType="rMap" resultType="rMap">
    SELECT  BUSS_OFFICE_CODE
         ,  BUSS_OFFICE_NAME
         ,  LOCAL_TAX_GOV
         ,  BUSS_OFFICE_ADDR
         ,  SECT_CODE
    FROM    HBS230T
    WHERE   COMP_CODE     = #{S_COMP_CODE} 
     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND     SECT_CODE   = #{DIV_CODE}
     </if>
</select>

<update id="hbs020ukrServiceImpl.insert20" parameterType="rMap">
    INSERT INTO Hbs230T
    (   BUSS_OFFICE_CODE
    ,   BUSS_OFFICE_NAME
    ,   LOCAL_TAX_GOV
    ,   BUSS_OFFICE_ADDR
    ,   SECT_CODE
    ,   UPDATE_DB_USER
    ,   UPDATE_DB_TIME
    ,   COMP_CODE
    ) 
    VALUES
    (   #{BUSS_OFFICE_CODE}
    ,   #{BUSS_OFFICE_NAME}
    ,   #{LOCAL_TAX_GOV}
    ,   #{BUSS_OFFICE_ADDR}
    ,   #{SECT_CODE}
    ,   #{USER_ID}
    ,   SYSDATETIME
    ,   #{S_COMP_CODE}
    )
</update>

<update id="hbs020ukrServiceImpl.update20" parameterType="rMap">
    UPDATE  Hbs230T
    SET     LOCAL_TAX_GOV    = #{LOCAL_TAX_GOV}
      ,     BUSS_OFFICE_ADDR = #{BUSS_OFFICE_ADDR}
      ,     SECT_CODE        = #{SECT_CODE}
      ,     UPDATE_DB_USER   = #{USER_ID}
      ,     UPDATE_DB_TIME   = SYSDATETIME
         
    WHERE   BUSS_OFFICE_CODE = #{BUSS_OFFICE_CODE}
    AND     BUSS_OFFICE_NAME = #{BUSS_OFFICE_NAME}
    AND     COMP_CODE        = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete20" parameterType="rMap">
    DELETE  FROM Hbs230T 
    WHERE   BUSS_OFFICE_CODE = #{BUSS_OFFICE_CODE}
    AND     BUSS_OFFICE_NAME = #{BUSS_OFFICE_NAME}
    AND     COMP_CODE        = #{S_COMP_CODE}
</update>
<!-- 주민세신고지점 등록 끝 -->


<!-- 메일서버정보 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList21" parameterType="rMap" resultType="rMap">
    SELECT  SEND_METHOD
         ,  SERVER_NAME
         ,  SERVER_PROT
         ,  PICKUP_FOLDER_PATH
         ,  SEND_USER_NAME
         ,  SEND_PASSWORD
         ,  CONN_TIMEOUT
         ,  SSL_USE_YN
    FROM    HBS240T
    WHERE   COMP_CODE    = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.submit21" parameterType="rMap">
    UPDATE  HBS240T
    SET     SEND_METHOD        = #{SEND_METHOD}
      ,     SERVER_NAME        = #{SERVER_NAME}
      ,     SERVER_PROT        = ${SERVER_PROT}
      ,     PICKUP_FOLDER_PATH = #{PICKUP_FOLDER_PATH}
      ,     SEND_USER_NAME     = #{SEND_USER_NAME}
      ,     SEND_PASSWORD      = #{SEND_PASSWORD}
      ,     CONN_TIMEOUT       = ${CONN_TIMEOUT}
      ,     SSL_USE_YN         = ${SSL_USE_YN}
         
    WHERE   COMP_CODE          = #{S_COMP_CODE}
</update>
<!-- 메일서버정보 등록 끝 -->

<!-- 금융기관코드매칭 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList22" parameterType="rMap" resultType="rMap">
    SELECT  A.CUSTOM_CODE
         ,  A.CUSTOM_NAME
         ,  B.BANK_CODE
         ,  CASE WHEN B.BANK_CODE IS NULL THEN 'N'
                 ELSE ''
                 END AS FLAG
    FROM              BCM100T A 
            LEFT JOIN HBS820T B ON A.COMP_CODE   = B.COMP_CODE
                               AND A.CUSTOM_CODE = B.CUSTOM_CODE
    WHERE   A.COMP_CODE   = #{S_COMP_CODE}
    AND     A.CUSTOM_TYPE = '4'
</select>


<update id="hbs020ukrServiceImpl.update22" parameterType="rMap">
    
    <if test='FLAG.equals("N")'>
        INSERT INTO HBS820T
        (   COMP_CODE 
        ,   CUSTOM_CODE
        ,   BANK_CODE
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (   #{S_COMP_CODE}
        ,   #{CUSTOM_CODE}
        ,   #{BANK_CODE}
        ,   #{USER_ID}
        ,   SYSDATETIME
        )
    </if>
    <if test='FLAG.equals("")'> 
        UPDATE  HBS820T
        SET     BANK_CODE      = #{BANK_CODE}
          ,     UPDATE_DB_USER = #{USER_ID}
          ,     UPDATE_DB_TIME = SYSDATETIME
        WHERE   CUSTOM_CODE    = #{CUSTOM_CODE}
        AND     COMP_CODE      = #{S_COMP_CODE}
    </if>
</update>
<!-- 금융기관코드매칭 등록 끝 -->

    
</mapper>