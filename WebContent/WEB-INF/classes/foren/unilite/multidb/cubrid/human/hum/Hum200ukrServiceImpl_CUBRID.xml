<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum200ukrServiceImpl">
	<select id="hum200ukrServiceImpl.selectList1" parameterType="rMap" resultType="rMap">

            -- hum200ukrServiceImpl.selectList1
            
            SET @COMP_CODE          = #{S_COMP_CODE} + ';'
            SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD} + ';'
            SET @DIV_CODE           = #{DIV_CODE} + ';'
            SET @PAY_CODE           = #{PAY_CODE} + ';'
            SET @FR_DEPT_CODE       = #{DEPT_CODE} + ';'
            SET @TO_DEPT_CODE       = #{DEPT_CODE2} + ';'
            SET @NAME               = #{NAME} + ';'
            SET @PERSON_NUMB        = #{PERSON_NUMB} + ';'
            SET @PAY_GRADE_01       = #{PAY_GRADE_01} + ';'
            SET @PAY_GRADE_02       = #{PAY_GRADE_02} + ';'
            SET @USER_ID            = #{USER_ID} + ';'
        
            
            <!--  <3. 데이타 조회> -->
            SELECT 
                   A.COMP_CODE                                                                          AS COMP_CODE
                 , B1.PAYSTEP_YYYYMMDD                                                                  AS PAYSTEP_YYYYMMDD
                 , A.DEPT_NAME                                                                          AS DEPT_NAME
                 , A.PAY_GRADE_01                                                                       AS PAY_GRADE_01
                 , A.PAY_GRADE_02                                                                       AS PAY_GRADE_02
                 , A.PERSON_NUMB                                                                        AS PERSON_NUMB
                 , A.NAME                                                                               AS NAME
                 , B1.PAYSTEP_1                                                                         AS PAYSTEP_1
                 , B1.N_PAYSTEP_1                                                                       AS N_PAYSTEP_1
                 , B1.PAYSTEP_CARR                                                                      AS PAYSTEP_CARR
                 , B1.N_PAYSTEP_CARR                                                                    AS N_PAYSTEP_CARR
                 , B1.PAYSTEP_LONG_DAY                                                                  AS PAYSTEP_LONG_DAY
                 , B1.N_PAYSTEP_LONG_DAY                                                                AS N_PAYSTEP_LONG_DAY
                 , B1.MODIFY_DAY                                                                        AS MODIFY_DAY
                 , B1.PO_NE_GUBUN                                                                       AS PO_NE_GUBUN
                 , B1.N_MODIFY_DAY                                                                      AS N_MODIFY_DAY
                 , B1.N_YYYY * (CASE WHEN NVL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)            AS N_YYYY
                 , B1.N_MM   * (CASE WHEN NVL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)            AS N_MM
                 , B1.N_DD   * (CASE WHEN NVL(B1.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END)            AS N_DD
                 , B1.MODIFY_REASON                                                                     AS MODIFY_REASON
                 , B1.BEFORE_MODIFY_DAY                                                                 AS BEFORE_MODIFY_DAY
                 , B1.N_BEFORE_MODIFY_DAY                                                               AS N_BEFORE_MODIFY_DAY
                 , B1.DEFER_DAY                                                                         AS DEFER_DAY
                 , B1.N_DEFER_DAY                                                                       AS N_DEFER_DAY
                 , B1.PAYSTEP_TOT_DAY                                                                   AS PAYSTEP_TOT_DAY
                 , B1.N_TOT_YYYY                                                                        AS N_TOT_YYYY
                 , B1.N_TOT_MM                                                                          AS N_TOT_MM
                 , B1.N_TOT_DD                                                                          AS N_TOT_DD
                 , B1.N_TOT_YYYY                                                                        AS N_BEFORE_TOT_YYYY
                 , B1.N_TOT_MM                                                                          AS N_BEFORE_TOT_MM
                 , B1.N_TOT_DD                                                                          AS N_BEFORE_TOT_DD
                 
                 , REPLACE(TO_CHAR(TO_CHAR(B1.PAYSTEP_TOT_DAY), 1), '.00', '')  + ' ('
                 + TO_CHAR(FLOOR(B1.PAYSTEP_TOT_DAY / 365)) + '년 '
                 + TO_CHAR(TO_CHAR(B1.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
                 + TO_CHAR(TO_CHAR(B1.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'            AS TOT_DAY_CONVERT

                 , fnGetYMDFromDate2( NVL(B1.N_TOT_YYYY, 0), NVL(B1.N_TOT_MM  , 0)
                                            , NVL(B1.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
                 + fnGetYMDFromDate2( NVL(B1.N_TOT_YYYY, 0), NVL(B1.N_TOT_MM  , 0)
                                            , NVL(B1.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
                 + fnGetYMDFromDate2( NVL(B1.N_TOT_YYYY, 0), NVL(B1.N_TOT_MM  , 0)
                                            , NVL(B1.N_TOT_DD  , 0), 'DAY  '                ) + '일 '  AS N_TOT_DAY_CONVERT

                 , B1.INSERT_DB_USER                                                                      AS INSERT_DB_USER
                 , B1.INSERT_DB_TIME                                                                      AS INSERT_DB_TIME
                 , B1.UPDATE_DB_USER                                                                      AS UPDATE_DB_USER
                 , B1.UPDATE_DB_TIME                                                                      AS UPDATE_DB_TIME
            FROM            HUM100T AS A
            INNER JOIN   HUM240T AS B1  ON  B1.COMP_CODE             = A.COMP_CODE
                                                        AND  B1.PERSON_NUMB          = A.PERSON_NUMB
                                                        AND  B1.PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD
            WHERE    A.COMP_CODE          = @COMP_CODE
            AND      A.RETR_DATE          = '00000000'
            AND      A.PAY_GRADE_01       &gt; '0'
            AND      B1.PAYSTEP_YYYYMMDD  = @PAYSTEP_YYYYMMDD
            AND    ((A.DIV_CODE           = @DIV_CODE        AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
            AND    ((A.PAY_CODE           = @PAY_CODE        AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
            AND    ((A.DEPT_CODE         &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE  != '') OR (@FR_DEPT_CODE     = ''))
            AND    ((A.DEPT_CODE         &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE  != '') OR (@TO_DEPT_CODE     = ''))
            AND    ((A.NAME               = @NAME            AND @NAME             != '') OR (@NAME             = ''))
            AND    ((A.PERSON_NUMB        = @PERSON_NUMB     AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
            AND    ((A.PAY_GRADE_01       = @PAY_GRADE_01    AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
            AND    ((A.PAY_GRADE_02       = @PAY_GRADE_02    AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
            ORDER BY A.DEPT_NAME, A.PAY_GRADE_01, A.PAY_GRADE_02, A.PERSON_NUMB;
            
	</select>
		
	<select id="hum200ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
    -- hum200ukrServiceImpl.selectList2
    	          
	   		SET @COMP_CODE          = #{S_COMP_CODE} + ';'
		    SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD} + ';'
		    SET @DIV_CODE           = #{DIV_CODE} + ';'
		    SET @PAY_CODE           = #{PAY_CODE} + ';'
		    SET @FR_DEPT_CODE       = #{DEPT_CODE} + ';'
		    SET @TO_DEPT_CODE       = #{DEPT_CODE2} + ';'
		    SET @NAME               = #{NAME} + ';'
		    SET @PERSON_NUMB        = #{PERSON_NUMB} + ';'
		    SET @PAY_GRADE_01       = #{PAY_GRADE_01} + ';'
		    SET @PAY_GRADE_02       = #{PAY_GRADE_02} + ';'
		    SET @USER_ID            = #{USER_ID} + ';'
	
	
        DO(
        SELECT @DateFormat := M1.CODE_NAME
        FROM   BSA100T M1
        WHERE  M1.COMP_CODE = @COMP_CODE
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'
        );
        
        SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD');
	    
	    --  3. 데이타 조회
	
        SELECT 
               CAST(0 AS CHAR(1))                                                                    AS CHOICE 
             , A.COMP_CODE                                                                            AS COMP_CODE
             , A.PAYSTEP_YYYYMMDD                                                                     AS PAYSTEP_YYYYMMDD
             , A.DEPT_NAME                                                                            AS DEPT_NAME
             , A.PAY_GRADE_01                                                                         AS PAY_GRADE_01
             , A.PAY_GRADE_02                                                                         AS PAY_GRADE_02
             , A.PERSON_NUMB                                                                          AS PERSON_NUMB
             , A.NAME                                                                                 AS NAME

             , CASE WHEN A.SUB_CODE = '1' THEN REPLACE(TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY), 1), '.00', '') + ' ('
                                              + TO_CHAR(TO_CHAR(FLOOR(A.PAYSTEP_TOT_DAY / 365)     )) + '년 '
                                              + TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
                                              + TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'
                                           ELSE (CASE WHEN NVL(A.PO_NE_GUBUN, '1') = '1' THEN '' ELSE '-' END)
                                              + fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                         , NVL(A.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
                                              + fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                         , NVL(A.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
                                              + fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                         , NVL(A.N_TOT_DD  , 0), 'DAY  '                ) + '일 '   END AS TOT_DAY_CONVERT

             , A.EXPECT_PAY_GRADE                                                                     AS EXPECT_PAY_GRADE
             , CASE WHEN A.CONTRACT_TODATE  &gt;= A.PAYSTEP_YYYYMMDD THEN 'N'
                    WHEN A.VALIDITY_DATE    &gt;= A.PAYSTEP_YYYYMMDD THEN 'N'
                    WHEN TO_NUMBER(A.EXPECT_PAY_GRADE)  &gt; (CASE WHEN NVL(A.LIMIT_X, '') = '' THEN TO_NUMBER(A.EXPECT_PAY_GRADE)
                                                                                                ELSE TO_NUMBER(A.LIMIT_X) 
                                                                                       END)
                                                                  THEN 'N'
                                                                  ELSE 'Y'
               END                                                                                    AS EXPECT_GUBUN
             , CASE WHEN A.CONTRACT_TODATE &gt;= A.PAYSTEP_YYYYMMDD THEN REPLACE(
                                                                      REPLACE(
                                                                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CONTRACT_TODATE, 1, 4))
                                                                                         , 'MM',   SUBSTRING(A.CONTRACT_TODATE, 5, 2))
                                                                                         , 'DD',   SUBSTRING(A.CONTRACT_TODATE, 7, 2))
                    WHEN A.VALIDITY_DATE   &gt;= A.PAYSTEP_YYYYMMDD THEN REPLACE(
                                                                      REPLACE(
                                                                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.VALIDITY_DATE, 1, 4))
                                                                                         , 'MM',   SUBSTRING(A.VALIDITY_DATE, 5, 2))
                                                                                         , 'DD',   SUBSTRING(A.VALIDITY_DATE, 7, 2))
                                                                 ELSE ''
               END                                                                                    AS EXPECT_YYYYMMDD
             , CASE WHEN A.CONTRACT_TODATE &gt;= A.PAYSTEP_YYYYMMDD THEN A.CONTRACT_REMARK
                    WHEN A.VALIDITY_DATE   &gt;= A.PAYSTEP_YYYYMMDD THEN A.VALIDITY_REMARK
                                                                 ELSE ''
               END                                                                                    AS EXPECT_REMARK
        FROM   (
                SELECT 
                       B1.COMP_CODE                                                                            AS COMP_CODE
                     , B1.PERSON_NUMB                                                                          AS PERSON_NUMB
                     , B1.DEPT_NAME                                                                            AS DEPT_NAME
                     , B1.PAY_GRADE_01                                                                         AS PAY_GRADE_01
                     , B1.PAY_GRADE_02                                                                         AS PAY_GRADE_02
                     , B1.NAME                                                                                    AS NAME
                     , A.PAYSTEP_YYYYMMDD                                                                      AS PAYSTEP_YYYYMMDD

                     , B4.SUB_CODE
                     , A.PAYSTEP_TOT_DAY
                     , A.PO_NE_GUBUN
                     , A.N_TOT_YYYY
                     , A.N_TOT_MM
                     , A.N_TOT_DD

                     , CASE WHEN B4.SUB_CODE = '1' THEN TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY / 365))
                                                   ELSE TO_CHAR(TO_CHAR(A.N_TOT_YYYY)) END    AS EXPECT_PAY_GRADE
                     , B2.CONTRACT_TODATE                                                                      AS CONTRACT_TODATE
                     , B2.CONTRACT_REMARK                                                                      AS CONTRACT_REMARK
                     , B3.VALIDITY_DATE                                                                        AS VALIDITY_DATE
                     , B3.VALIDITY_REMARK                                                                      AS VALIDITY_REMARK
                     , B5.REF_CODE5                                                                            AS LIMIT_X
                FROM              HUM240T      AS A
                       INNER JOIN HUM100T      AS B1 ON  B1.COMP_CODE        = A.COMP_CODE
                                                                   AND B1.PERSON_NUMB      = A.PERSON_NUMB
                       LEFT  JOIN BSA100T      AS B4 ON  B4.COMP_CODE        = A.COMP_CODE
                                                                   AND B4.MAIN_CODE        = 'HP03'
                                                                   AND B4.REF_CODE1        = 'Y'
                       LEFT  JOIN BSA100T      AS B5 ON  B5.COMP_CODE        = B1.COMP_CODE
                                                                   AND B5.MAIN_CODE        = 'HP01'
                                                                   AND B5.SUB_CODE         = B1.POST_CODE
                       LEFT  JOIN (
                                   SELECT 
                                          B1.COMP_CODE
                                        , B1.PERSON_NUMB
                                        , B3.CONTRACT_TODATE
                                        , B2.CODE_NAME         AS CONTRACT_REMARK
                                   FROM              HUM840T AS B1
                                          INNER JOIN BSA100T AS B2 ON  B2.COMP_CODE = B1.COMP_CODE
                                                                                AND B2.MAIN_CODE = 'H164'
                                                                                AND B2.SUB_CODE  = B1.CONTRACT_GUBUN
                                          INNER JOIN (
                                                      SELECT 
                                                             C1.COMP_CODE            AS COMP_CODE
                                                           , C1.PERSON_NUMB          AS PERSON_NUMB
                                                           , MAX(C1.CONTRACT_TODATE) AS CONTRACT_TODATE
                                                      FROM              HUM840T AS C1
                                                             INNER JOIN BSA100T AS C2 ON  C2.COMP_CODE = C1.COMP_CODE
                                                                                                   AND C2.MAIN_CODE = 'H164'
                                                                                                   AND C2.SUB_CODE  = C1.CONTRACT_GUBUN
                                                      WHERE  C1.COMP_CODE = @COMP_CODE
                                                      AND    C2.REF_CODE1 = 'Y'
                                                      GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
                                                     ) AS B3 ON  B3.COMP_CODE       = B1.COMP_CODE
                                                             AND B3.PERSON_NUMB     = B1.PERSON_NUMB
                                                             AND B3.CONTRACT_TODATE = B1.CONTRACT_TODATE
                                   WHERE  B1.COMP_CODE = @COMP_CODE
                                   AND    B2.REF_CODE1 = 'Y'
                                  ) AS B2 ON  B2.COMP_CODE   = A.COMP_CODE
                                          AND B2.PERSON_NUMB = A.PERSON_NUMB
                       LEFT  JOIN (
                                   SELECT 
                                          B1.COMP_CODE
                                        , B1.PERSON_NUMB
                                        , B1.VALIDITYTO_DATE AS VALIDITY_DATE
                                        , B2.CODE_NAME     AS VALIDITY_REMARK
                                   FROM              HUM810T AS B1
                                          INNER JOIN BSA100T AS B2 ON  B2.COMP_CODE = B1.COMP_CODE
                                                                                AND B2.MAIN_CODE = 'H096'
                                                                                AND B2.SUB_CODE  = B1.KIND_PRIZE_PENALTY
                                          INNER JOIN (
                                                      SELECT 
                                                             C1.COMP_CODE              AS COMP_CODE
                                                           , C1.PERSON_NUMB            AS PERSON_NUMB
                                                           , MAX(C1.VALIDITYTO_DATE)   AS VALIDITY_DATE
                                                      FROM   HUM810T AS C1
                                                      WHERE  C1.COMP_CODE                   = @COMP_CODE
                                                      AND    LEFT(C1.KIND_PRIZE_PENALTY, 1) = '2'
                                                      GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
                                                     ) AS B3 ON  B3.COMP_CODE     = B1.COMP_CODE
                                                             AND B3.PERSON_NUMB   = B1.PERSON_NUMB
                                                             AND B3.VALIDITY_DATE = B1.VALIDITYTO_DATE
                                   WHERE  B1.COMP_CODE                   = @COMP_CODE
                                   AND    LEFT(B1.KIND_PRIZE_PENALTY, 1) = '2'
                                  ) AS B3 ON  B3.COMP_CODE   = A.COMP_CODE
                                          AND B3.PERSON_NUMB = A.PERSON_NUMB
    
                WHERE    A.COMP_CODE           = @COMP_CODE
                AND      A.PAYSTEP_YYYYMMDD    = @PAYSTEP_YYYYMMDD
                AND    ((B1.DIV_CODE           = @DIV_CODE         AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
                AND    ((B1.PAY_CODE           = @PAY_CODE         AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
                AND    ((B1.DEPT_CODE         &gt;= @FR_DEPT_CODE     AND @FR_DEPT_CODE     != '') OR (@FR_DEPT_CODE     = ''))
                AND    ((B1.DEPT_CODE         &lt;= @TO_DEPT_CODE     AND @TO_DEPT_CODE     != '') OR (@TO_DEPT_CODE     = ''))
                AND    ((B1.NAME               = @NAME             AND @NAME             != '') OR (@NAME             = ''))
                AND    ((B1.PERSON_NUMB        = @PERSON_NUMB      AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
                AND    ((B1.PAY_GRADE_01       = @PAY_GRADE_01     AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
                AND    ((B1.PAY_GRADE_02       = @PAY_GRADE_02     AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
               )  A
        WHERE  TO_CHAR(A.PAY_GRADE_02) &lt; TO_CHAR(A.EXPECT_PAY_GRADE);
	</select>
	
	
	<!-- 재참조 -->
	<select id="hum200ukrServiceImpl.fnHum240QStd2" parameterType="rMap" resultType="rMap">
        
       -- hum200ukrServiceImpl.fnHum240QStd2
              
        SET @COMP_CODE               = #{S_COMP_CODE} + ';'
        SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD} + ';'
        SET @DIV_CODE           = #{DIV_CODE} + ';'
        SET @PAY_CODE           = #{PAY_CODE} + ';'
        SET @FR_DEPT_CODE       = #{DEPT_CODE} + ';'
        SET @TO_DEPT_CODE       = #{DEPT_CODE2} + ';'
        SET @NAME               = #{NAME} + ';'
        SET @PERSON_NUMB        = #{PERSON_NUMB} + ';'
        SET @PAY_GRADE_01       = #{PAY_GRADE_01} + ';'
        SET @PAY_GRADE_02       = #{PAY_GRADE_02} + ';'
        SET @USER_ID            = #{USER_ID} + ';'
    
        SET @RefItem = (SELECT REF_ITEM FROM   BSA300T  WHERE  USER_ID = @USER_ID AND ROWNUM = 1);
        SET @RefItem = NVL(@RefItem, '');
        
    
        SET @DateFormat = (SELECT M1.CODE_NAME 
                                      FROM   BSA100T M1
                                      WHERE  M1.COMP_CODE = @COMP_CODE
                                      AND    M1.MAIN_CODE = 'B044'
                                      AND    M1.REF_CODE1 = 'Y'
                                      AND    ROWNUM = 1);   
                                           
        SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD');
        
        
        DELETE HUM240T
        WHERE  COMP_CODE            = @COMP_CODE
        AND    PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD;
    
        SET @KeyValue  = LEFT(TO_CHAR(SYSDATETIME, 'yyyymmddhh24missff') + LEFT(TO_CHAR(TO_NUMBER(RAND()) * 10000), 3), 20);
        

        INSERT INTO T_HUM200UKR_1                                          
        (
            KEY_VALUE
          , COMP_CODE
          , PAYSTEP_YYYYMMDD
          , DEPT_NAME
          , PAY_GRADE_01
          , PAY_GRADE_02
          , PERSON_NUMB
          , NAME
          , PAYSTEP_1
          , N_PAYSTEP_1
          , PAYSTEP_CARR
          , N_PAYSTEP_CARR
          , PAYSTEP_LONG_DAY
          , N_PAYSTEP_LONG_DAY
          , MODIFY_DAY
          , N_MODIFY_DAY
          , MODIFY_REASON
          , BEFORE_MODIFY_DAY
          , N_BEFORE_MODIFY_DAY
          , DEFER_DAY
          , N_DEFER_DAY
          , PAYSTEP_TOT_DAY
          , N_TOT_YYYY
          , N_TOT_MM
          , N_TOT_DD
        )
        SELECT 
              A.KEY_VALUE                                                                        AS KEY_VALUE
            , A.COMP_CODE                                                                        AS COMP_CODE
            , A.PAYSTEP_YYYYMMDD                                                                 AS PAYSTEP_YYYYMMDD
             , A.DEPT_NAME                                                                       AS DEPT_NAME
             , A.PAY_GRADE_01                                                                    AS PAY_GRADE_01
             , A.PAY_GRADE_02                                                                    AS PAY_GRADE_02
             , A.PERSON_NUMB                                                                     AS PERSON_NUMB
             , A.NAME                                                                            AS NAME
             , A.PAYSTEP_1                                                                       AS PAYSTEP_1
             , A.N_PAYSTEP_1                                                                     AS N_PAYSTEP_1
             , A.PAYSTEP_CARR                                                                    AS PAYSTEP_CARR
             , A.N_PAYSTEP_CARR                                                                  AS N_PAYSTEP_CARR
             , A.PAYSTEP_LONG_DAY                                                                AS PAYSTEP_LONG_DAY

             , CASE WHEN LENGTH(fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'FULL_YEARS')) &lt; 2 THEN '0' + fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'FULL_YEARS') + '/'
                                                                                                         ELSE fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'FULL_YEARS') + '/' END
             + CASE WHEN LENGTH(fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_MONTHS'))  &lt; 2 THEN '0' + fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_MONTHS') + '/'
                                                                                                         ELSE fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_MONTHS') + '/' END
             + CASE WHEN LENGTH(fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_DAY'))     &lt; 2 THEN '0' + fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_DAY') 
                                                                                                         ELSE fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_DAY')  END
                                                                                                 AS N_PAYSTEP_LONG_DAY   -- 함수사용으로 우선 주석처리
             , A.MODIFY_DAY                                                                      AS MODIFY_DAY
             , A.N_MODIFY_DAY                                                                    AS N_MODIFY_DAY
             , A.MODIFY_REASON                                                                   AS MODIFY_REASON
             , A.BEFORE_MODIFY_DAY                                                               AS BEFORE_MODIFY_DAY
             , A.N_BEFORE_MODIFY_DAY                                                             AS N_BEFORE_MODIFY_DAY
             , A.DEFER_DAY                                                                       AS DEFER_DAY
             , A.N_DEFER_DAY                                                                     AS N_DEFER_DAY
             , A.PAYSTEP_TOT_DAY                                                                 AS PAYSTEP_TOT_DAY
             , 1
             + TO_NUMBER(NVL(A.C1_N_YYYY, 0))
             + TO_NUMBER(fnGetYMDFromDate(A.JOIN_DATE, @PAYSTEP_YYYYMMDD, 'FULL_YEARS'))
             + 0
             + TO_NUMBER(NVL(A.D1_N_YYYY, 0))
             - TO_NUMBER(NVL(A.E1_N_YYYY, 0))                                                    AS N_TOT_YYYY  -- 함수사용으로 우선 주석처리
             
             , TO_NUMBER(NVL(A.C1_N_MM, 0))
             + TO_NUMBER(fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_MONTHS'))
             + 0
             + TO_NUMBER(NVL(A.D1_N_MM, 0))
             - TO_NUMBER(NVL(A.E1_N_MM, 0))                                                      AS N_TOT_MM  -- 함수사용으로 우선 주석처리
             
             , TO_NUMBER(NVL(A.C1_N_DD, 0))
             + TO_NUMBER(fnGetYMDFromDate(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD, 'RM_DAY'))
             + 0
             + TO_NUMBER(NVL(A.D1_N_DD, 0))
             - TO_NUMBER(NVL(A.E1_N_DD, 0))                                                      AS N_TOT_DD

        FROM (                    
                        SELECT 
                              @KeyValue                                                                          AS KEY_VALUE
                            , A.COMP_CODE                                                                        AS COMP_CODE
                            ,  @PAYSTEP_YYYYMMDD                                                                 AS PAYSTEP_YYYYMMDD
                             , A.DEPT_NAME                                                                       AS DEPT_NAME
                             , A.PAY_GRADE_01                                                                    AS PAY_GRADE_01
                             , A.PAY_GRADE_02                                                                    AS PAY_GRADE_02
                             , A.PERSON_NUMB                                                                     AS PERSON_NUMB
                             , A.NAME                                                                                 AS NAME
                             , TO_NUMBER(365)                                                                    AS PAYSTEP_1
                             , TO_CHAR('01/00/00')                                                               AS N_PAYSTEP_1
                             , TO_NUMBER(NVL(C1.PAYSTEP_CARR, 0))                                                AS PAYSTEP_CARR
                             , TO_CHAR(NVL(C1.N_PAYSTEP_CARR, '00/00/00'))                                       AS N_PAYSTEP_CARR
                             , TO_NUMBER(NVL(DATEDIFF(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD) * (-1), 0))       AS PAYSTEP_LONG_DAY

                             , A.JOIN_DATE              
                             , 0                                                                                 AS N_PAYSTEP_LONG_DAY
                             , TO_NUMBER(0)                                                                      AS MODIFY_DAY
                             , TO_CHAR('00/00/00')                                                               AS N_MODIFY_DAY
                             , TO_CHAR('')                                                                       AS MODIFY_REASON
                             , NVL(D1.MODIFY_DAY, 0)                                                             AS BEFORE_MODIFY_DAY
                             , TO_CHAR(NVL(D1.N_MODIFY_DAY, '00/00/00'))                                         AS N_BEFORE_MODIFY_DAY
                             , TO_NUMBER(NVL(E1.DEFER_DAY, 0))                                                   AS DEFER_DAY
                             , TO_CHAR(NVL(E1.N_DEFER_DAY, '00/00/00'))                                          AS N_DEFER_DAY
                             , 365                                                                                                   
                             + TO_NUMBER(NVL(C1.PAYSTEP_CARR, 0))
                             + TO_NUMBER(NVL(DATEDIFF(CASE WHEN NVL(A.JOIN_DATE, '') = '' THEN NULL ELSE A.JOIN_DATE END, @PAYSTEP_YYYYMMDD), 0))
                             + 0
                             + D1.MODIFY_DAY
                             - TO_NUMBER(NVL(E1.DEFER_DAY, 0))                                                   AS PAYSTEP_TOT_DAY
                            
                            , C1.N_YYYY   AS C1_N_YYYY
                            , D1.N_YYYY   AS D1_N_YYYY
                            , E1.N_YYYY   AS E1_N_YYYY
                            , C1.N_MM     AS C1_N_MM
                            , D1.N_MM     AS D1_N_MM
                            , E1.N_MM     AS E1_N_MM
                            , C1.N_DD     AS C1_N_DD
                            , D1.N_DD     AS D1_N_DD
                            , E1.N_DD     AS E1_N_DD
                        FROM              HUM100T      AS A 
                               INNER JOIN BSA100T      AS B1 ON  B1.COMP_CODE  = A.COMP_CODE
                                                                           AND B1.MAIN_CODE  = 'H005'
                                                                           AND B1.SUB_CODE   = A.POST_CODE
                               LEFT  JOIN (
                                            SELECT 
                                                   C1.COMP_CODE                                         AS COMP_CODE
                                                 , C1.PERSON_NUMB                                       AS PERSON_NUMB
                                                 , SUM(NVL(C1.PAYSTEP_CARR, 0))                         AS PAYSTEP_CARR
                                                 , fnGetYMDFromDate2(  SUM(NVL(C1.YYYY, 0))
                                                                             , SUM(NVL(C1.MM  , 0))
                                                                             , SUM(NVL(C1.DD  , 0))
                                                                             , 'ALL'                  ) AS N_PAYSTEP_CARR
                                                 , fnGetYMDFromDate2(  SUM(NVL(C1.YYYY, 0))
                                                                             , SUM(NVL(C1.MM  , 0))
                                                                             , SUM(NVL(C1.DD  , 0))
                                                                             , 'YEARS'                ) AS N_YYYY
                                                 , fnGetYMDFromDate2(  SUM(NVL(C1.YYYY, 0))
                                                                             , SUM(NVL(C1.MM  , 0))
                                                                             , SUM(NVL(C1.DD  , 0))
                                                                             , 'MONTH'                ) AS N_MM
                                                 , fnGetYMDFromDate2(  SUM(NVL(C1.YYYY, 0))
                                                                             , SUM(NVL(C1.MM  , 0))
                                                                             , SUM(NVL(C1.DD  , 0))
                                                                             , 'DAY  '                ) AS N_DD
                                            FROM (
                                                    SELECT 
                                                           C.COMP_CODE
                                                         , C.PERSON_NUMB
                                                         , C.PAYSTEP_CARR
                                                         , TO_NUMBER(CASE WHEN NVL(C.REF_CODE1, 0) = 0   THEN 0 
                                                                                      WHEN NVL(C.REF_CODE1, 0) = 100 THEN C.YYYY
                                                                                                  ELSE fnGetYMDFromDate3(C.PAYSTEP_CARR, 'YEARS') 
                                                                              END)                                                                                            AS YYYY
                                                         , TO_NUMBER(CASE WHEN NVL(C.REF_CODE1, 0) = 0   THEN 0 
                                                                                      WHEN NVL(C.REF_CODE1, 0) = 100 THEN C.MM
                                                                                                  ELSE fnGetYMDFromDate3(C.PAYSTEP_CARR, 'MONTH') 
                                                                              END)                                                                                            AS MM
                                                         , TO_NUMBER(CASE WHEN NVL(C.REF_CODE1, 0) = 0   THEN 0 
                                                                                      WHEN NVL(C.REF_CODE1, 0) = 100 THEN C.DD
                                                                                                  ELSE fnGetYMDFromDate3(C.PAYSTEP_CARR, 'DAY') 
                                                                              END)                                                                                            AS DD
                                                    FROM   (
                                                                SELECT 
                                                                       C1.COMP_CODE
                                                                     , C1.PERSON_NUMB
                                                                     , fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'FULL_YEARS') AS YYYY
                                                                     , fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'RM_MONTHS' ) AS MM
                                                                     , fnGetYMDFromDate(C1.CARR_STRT_DATE, C1.CARR_END_DATE, 'RM_DAY'    ) AS DD
                                                                     , NVL(TO_NUMBER(C2.REF_CODE1), 0)                                       AS REF_CODE1
                                                                     , CASE WHEN NVL(C2.REF_CODE1, 0) = 0 THEN 0
                                                                               ELSE TO_NUMBER(
                                                                                                           ( TO_NUMBER(NVL(DATEDIFF(C1.CARR_STRT_DATE, C1.CARR_END_DATE)  * (-1), 0) ) + 1) * (TO_NUMBER(NVL(C2.REF_CODE1, 0)) / 100)                           
                                                                                                         ) 
                                                                       END AS PAYSTEP_CARR                                           
                                                                FROM              HUM500T AS C1
                                                                       INNER JOIN BSA100T AS C2 ON  C2.COMP_CODE = C1.COMP_CODE
                                                                                                             AND C2.MAIN_CODE = 'H163'
                                                                                                             AND C2.SUB_CODE  = C1.CARR_GUBUN
                                                                WHERE  C1.COMP_CODE   = @COMP_CODE
                                                           ) AS C
                                                 ) AS C1
                                            GROUP  BY C1.COMP_CODE, C1.PERSON_NUMB
                                          ) AS C1 ON  C1.COMP_CODE   = A.COMP_CODE
                                                  AND C1.PERSON_NUMB = A.PERSON_NUMB
                               LEFT  JOIN (
                                            SELECT 
                                                   D.COMP_CODE                  AS COMP_CODE
                                                 , D.PERSON_NUMB                AS PERSON_NUMB
                                                 , SUM(NVL(D.MODIFY_DAY, 0)) AS MODIFY_DAY
                                                 , fnGetYMDFromDate2(  SUM(NVL(D.N_YYYY, 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_MM  , 0))
                                                                             , SUM(NVL(D.N_DD  , 0))
                                                                             , MAX('ALL')                  ) AS N_MODIFY_DAY
                                                 , fnGetYMDFromDate2(  SUM(NVL(D.N_YYYY, 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_MM  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_DD  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , MAX('YEARS')                ) AS N_YYYY
                                                 , fnGetYMDFromDate2(  SUM(NVL(D.N_YYYY, 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_MM  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_DD  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , MAX('MONTH')                ) AS N_MM
                                                 , fnGetYMDFromDate2(  SUM(NVL(D.N_YYYY, 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_MM  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , SUM(NVL(D.N_DD  , 0) * (CASE WHEN NVL(D.PO_NE_GUBUN, '1') = '1' THEN 1 ELSE -1 END) )
                                                                             , MAX('DAY')                ) AS N_DD
                                            FROM   HUM240T AS D
                                            WHERE  D.COMP_CODE        = @COMP_CODE
                                            AND    D.PAYSTEP_YYYYMMDD &lt; @PAYSTEP_YYYYMMDD
                                            GROUP  BY D.COMP_CODE, D.PERSON_NUMB
                                          ) AS D1 ON  D1.COMP_CODE   = A.COMP_CODE
                                                  AND D1.PERSON_NUMB = A.PERSON_NUMB
                               LEFT  JOIN (
                                            SELECT 
                                                   E.COMP_CODE                                                        AS COMP_CODE
                                                 , E.PERSON_NUMB                                                      AS PERSON_NUMB
                                                 , SUM(NVL(E.DEFER_DAY, 0))                                           AS DEFER_DAY
                                                 ,  fnGetYMDFromDate2(  SUM(NVL(TO_NUMBER(E.YYYY), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.MM  ), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.DD  ), 0))
                                                                             , MAX('ALL')                      )    AS N_DEFER_DAY
                                                 , fnGetYMDFromDate2(  SUM(NVL(TO_NUMBER(E.YYYY), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.MM  ), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.DD  ), 0))
                                                                             , 'YEARS'                            ) AS N_YYYY
                                                 , fnGetYMDFromDate2(  SUM(NVL(TO_NUMBER(E.YYYY), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.MM  ), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.DD  ), 0))
                                                                             , 'MONTH'                            ) AS N_MM
                                                 , fnGetYMDFromDate2(  SUM(NVL(TO_NUMBER(E.YYYY), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.MM  ), 0))
                                                                             , SUM(NVL(TO_NUMBER(E.DD  ), 0))
                                                                             , 'DAY'                            )   AS N_DD
                                            FROM (
                                                    SELECT 
                                                           E.COMP_CODE                                                                     AS COMP_CODE
                                                         , E.PERSON_NUMB                                                                   AS PERSON_NUMB
                                                         , TO_NUMBER(DATEDIFF(E.VALIDITYFR_DATE, E.VALIDITYTO_DATE) * (-1) ) + 1 AS DEFER_DAY
                                                         , CASE WHEN NVL(E.VALIDITYTO_DATE, '') = '' THEN 0
                                                                   ELSE fnGetYMDFromDate(  CASE WHEN NVL(E.VALIDITYFR_DATE, '')    = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE E.VALIDITYFR_DATE END
                                                                                                       , NVL(E.VALIDITYTO_DATE, '')                    
                                                                                                       , 'FULL_YEARS'
                                                                                                       )
                                                           END  AS YYYY
                                                         , CASE WHEN NVL(E.VALIDITYTO_DATE, '') = '' THEN 0
                                                                   ELSE fnGetYMDFromDate(  CASE WHEN NVL(E.VALIDITYFR_DATE, '')    = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE E.VALIDITYFR_DATE END
                                                                                                       , NVL(E.VALIDITYTO_DATE, '')                    
                                                                                                       , 'RM_MONTHS'
                                                                                                       )
                                                           END  AS MM
                                                         , CASE WHEN NVL(E.VALIDITYTO_DATE, '') = '' THEN 0
                                                                   ELSE fnGetYMDFromDate(  CASE WHEN NVL(E.VALIDITYFR_DATE, '')    = '' THEN TO_CHAR(SYSDATE, 'YYYYMMDD') ELSE E.VALIDITYFR_DATE END
                                                                                                       , NVL(E.VALIDITYTO_DATE, '')                    
                                                                                                       , 'RM_DAY'
                                                                                                       )
                                                           END  AS DD                                                                                      
                                                    FROM   HUM810T AS E
                                                    WHERE  E.COMP_CODE                    = @COMP_CODE
                                                    AND    LEFT(E.KIND_PRIZE_PENALTY, 1)  = '2'
                                                    AND    NVL(E.EX_DATE, '')         >= @PAYSTEP_YYYYMMDD
                                                 ) AS E
                                            GROUP  BY E.COMP_CODE, E.PERSON_NUMB
                                          ) AS E1 ON  E1.COMP_CODE   = A.COMP_CODE
                                                  AND E1.PERSON_NUMB = A.PERSON_NUMB
                        WHERE    A.COMP_CODE          = @COMP_CODE
                        AND      A.RETR_DATE          = '00000000'
                        AND      A.PAY_GRADE_01       > '0'
                        AND      B1.REF_CODE10        = 'Y' 
                        AND    ((A.DIV_CODE           = @DIV_CODE        AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
                        AND    ((A.PAY_CODE           = @PAY_CODE        AND @PAY_CODE         != '') OR (@PAY_CODE         = ''))
                        AND    ((A.DEPT_CODE         >= @FR_DEPT_CODE    AND @FR_DEPT_CODE     != '') OR (@FR_DEPT_CODE     = ''))
                        AND    ((A.DEPT_CODE      &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE     != '') OR (@TO_DEPT_CODE     = ''))
                        AND    ((A.NAME               = @NAME            AND @NAME             != '') OR (@NAME             = ''))
                        AND    ((A.PERSON_NUMB        = @PERSON_NUMB     AND @PERSON_NUMB      != '') OR (@PERSON_NUMB      = ''))
                        AND    ((A.PAY_GRADE_01       = @PAY_GRADE_01    AND @PAY_GRADE_01     != '') OR (@PAY_GRADE_01     = ''))
                        AND    ((A.PAY_GRADE_02       = @PAY_GRADE_02    AND @PAY_GRADE_02     != '') OR (@PAY_GRADE_02     = ''))
        ) A;    
            
        SELECT 
               A.COMP_CODE                                                                                          AS COMP_CODE
             , A.PAYSTEP_YYYYMMDD                                                                                   AS PAYSTEP_YYYYMMDD
             , A.DEPT_NAME                                                                                          AS DEPT_NAME
             , A.PAY_GRADE_01                                                                                       AS PAY_GRADE_01
             , A.PAY_GRADE_02                                                                                       AS PAY_GRADE_02
             , A.PERSON_NUMB                                                                                        AS PERSON_NUMB
             , A.NAME                                                                                               AS NAME
             , NVL(A.PAYSTEP_1          , 0)                                                                        AS PAYSTEP_1
             , NVL(A.N_PAYSTEP_1        , '01/00/00')                                                               AS N_PAYSTEP_1
             , NVL(A.PAYSTEP_CARR       , 0)                                                                        AS PAYSTEP_CARR
             , NVL(A.N_PAYSTEP_CARR     , '00/00/00')                                                               AS N_PAYSTEP_CARR
             , NVL(A.PAYSTEP_LONG_DAY   , 0)                                                                        AS PAYSTEP_LONG_DAY
             , NVL(A.N_PAYSTEP_LONG_DAY , '00/00/00')                                                               AS N_PAYSTEP_LONG_DAY
             , NVL(A.MODIFY_DAY         , 0)                                                                        AS MODIFY_DAY
             , '1'                                                                                                  AS PO_NE_GUBUN
             , NVL(A.N_MODIFY_DAY       , '00/00/00')                                                               AS N_MODIFY_DAY
             , 0                                                                                                    AS N_YYYY
             , 0                                                                                                    AS N_MM
             , 0                                                                                                    AS N_DD
             , NVL(A.MODIFY_REASON      , '')                                                                       AS MODIFY_REASON
             , NVL(A.BEFORE_MODIFY_DAY  , 0)                                                                        AS BEFORE_MODIFY_DAY
             , NVL(A.N_BEFORE_MODIFY_DAY, '00/00/00')                                                               AS N_BEFORE_MODIFY_DAY
             , NVL(A.DEFER_DAY          , 0)                                                                        AS DEFER_DAY
             , NVL(A.N_DEFER_DAY        , '00/00/00')                                                               AS N_DEFER_DAY
             , NVL(A.PAYSTEP_TOT_DAY    , 0)                                                                        AS PAYSTEP_TOT_DAY
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'YEARS'                ))   AS N_TOT_YYYY   
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'MONTH'                ))   AS N_TOT_MM   
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'DAY'                  ))   AS N_TOT_DD   
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'YEARS'                ))   AS N_BEFORE_TOT_YYYY   
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'MONTH'                ))   AS N_BEFORE_TOT_MM   
             , TO_NUMBER(fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                                                , NVL(A.N_TOT_DD  , 0), 'DAY'                  ))   AS N_BEFORE_TOT_DD  

             , REPLACE(TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY), 1), '.00', '') + ' ('
             + TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY / 365     )) + '년 '
             + TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY % 365 / 30)) + '개월 '
             + TO_CHAR(TO_CHAR(A.PAYSTEP_TOT_DAY % 365 % 30)) + '일)'                AS TOT_DAY_CONVERT

             , fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                        , NVL(A.N_TOT_DD  , 0), 'YEARS'                ) + '년 '
             + fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                        , NVL(A.N_TOT_DD  , 0), 'MONTH'                ) + '개월 '
             + fnGetYMDFromDate2( NVL(A.N_TOT_YYYY, 0), NVL(A.N_TOT_MM  , 0)
                                        , NVL(A.N_TOT_DD  , 0), 'DAY  '                ) + '일 '                    AS N_TOT_DAY_CONVERT
             , @USER_ID                                                                                             AS INSERT_DB_USER
             , SYSDATETIME                                                                                          AS INSERT_DB_TIME
             , @USER_ID                                                                                             AS UPDATE_DB_USER
             , SYSDATETIME                                                                                          AS UPDATE_DB_TIME
        FROM   T_HUM200UKR_1 A
        WHERE A.KEY_VALUE = @KeyValue
        ORDER BY A.DEPT_NAME, A.PAY_GRADE_01, A.PAY_GRADE_02, A.PERSON_NUMB;

        -- 임시테이블 데이터 삭제처리
        DELETE FROM T_HUM200UKR_1 WHERE KEY_VALUE = @KeyValue;
        
	</select>
	
	<update id="hum200ukrServiceImpl.update" parameterType="rMap">
		--hum240ukrv.Chum240ukrv[fnHum240Save] Query01       
		          
		    SET @COMP_CODE          = #{S_COMP_CODE} + ';'
		    SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD} + ';'
		    SET @PERSON_NUMB        = #{PERSON_NUMB} + ';'
		    SET @USER_ID            = #{USER_ID} + ';'
		
		    DELETE HUM240T
		    WHERE  COMP_CODE        = @COMP_CODE
		    AND    PERSON_NUMB      = @PERSON_NUMB
		    AND    PAYSTEP_YYYYMMDD = @PAYSTEP_YYYYMMDD;       
		
		
			INSERT INTO HUM240T
			( COMP_CODE
			, PAYSTEP_YYYYMMDD
			, PERSON_NUMB
			, PAYSTEP_1
			, N_PAYSTEP_1
			, PAYSTEP_CARR
			, N_PAYSTEP_CARR
			, PAYSTEP_LONG_DAY
			, N_PAYSTEP_LONG_DAY
			, MODIFY_DAY
			, PO_NE_GUBUN
			, N_MODIFY_DAY
			, N_YYYY
			, N_MM
			, N_DD
			, MODIFY_REASON
		    , BEFORE_MODIFY_DAY
		    , N_BEFORE_MODIFY_DAY
		    , DEFER_DAY
		    , N_DEFER_DAY			
			, PAYSTEP_TOT_DAY
			, N_TOT_YYYY
			, N_TOT_MM
			, N_TOT_DD
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME
			) 
			VALUES
			( #{S_COMP_CODE}
			, #{PAYSTEP_YYYYMMDD}
			, #{PERSON_NUMB}
			, ${PAYSTEP_1}
			, #{N_PAYSTEP_1}
			, ${PAYSTEP_CARR}
			, #{N_PAYSTEP_CARR}
			, ${PAYSTEP_LONG_DAY}
			, #{N_PAYSTEP_LONG_DAY}
			, ${MODIFY_DAY}
			, #{PO_NE_GUBUN}
			, #{N_MODIFY_DAY}
			, ${N_YYYY}
			, ${N_MM}
			, ${N_DD}
			, #{MODIFY_REASON}
			, ${BEFORE_MODIFY_DAY}
			, #{N_BEFORE_MODIFY_DAY}
			, ${DEFER_DAY}
			, #{N_DEFER_DAY}			
			, ${PAYSTEP_TOT_DAY}
			, ${N_TOT_YYYY}
			, ${N_TOT_MM}
			, ${N_TOT_DD}
			, #{USER_ID}
			, SYSDATETIME
			, #{USER_ID}
			, SYSDATETIME
			);

	</update>
	
	<update id="hum200ukrServiceImpl.update2" parameterType="rMap">
		--hum240ukrv.Chum240ukrv[fnHum240Save2] Query01

		    UPDATE HUM100T
		    SET    PAY_GRADE_02                 = #{EXPECT_PAY_GRADE}
		         , UPDATE_DB_USER               = #{USER_ID}
		         , UPDATE_DB_TIME               = SYSDATETIME
		    WHERE  COMP_CODE                    = #{S_COMP_CODE}
		    AND    PERSON_NUMB                  = #{PERSON_NUMB}

	</update>
		
</mapper>