<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum305ukrService">
	<select id="hum305ukrService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A
		           LEFT  JOIN BSA100T   M1 ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                  AND M1.MAIN_CODE    = 'B107'
		                                  AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND NVL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND NVL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	<select id="hum305ukrService.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
            
            --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
            
                SET @DateFormat = (SELECT CODE_NAME
                                              FROM    BSA100T
                                              WHERE   COMP_CODE = 'MASTER' --#{S_COMP_CODE}
                                              AND     MAIN_CODE = 'B044'
                                              AND     REF_CODE1 = 'Y');
            
                SET @DateFormat = NVL(@DateFormat, 'YYYY.MM.DD');
            
            --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
                SELECT  A.COMP_CODE                                                                 AS COMP_CODE
                     ,  B.DIV_CODE                                                                  AS DIV_CODE 
                     ,  B.DEPT_NAME                                                                 AS DEPT_NAME
                     ,  M4.CODE_NAME                                                                AS POST_CODE
                     ,  B.NAME                                                                      AS NAME
                     ,  A.PERSON_NUMB                                                               AS PERSON_NUMB
                     ,  A.FOREIGN_KIND                                                              AS FOREIGN_KIND
                     ,  A.EXAM_KIND                                                                 AS EXAM_KIND
                     ,  CASE WHEN NVL(A.GAIN_DATE, '') = '' THEN ''
                             ELSE SUBSTRING(A.GAIN_DATE, 1, 4) + SUBSTRING(A.GAIN_DATE, 5, 2)
                        END                                                                         AS GAIN_DATE
                     ,  A.GRADES                                                                    AS GRADES
                    -- ,  A.CLASS                                                                     AS CLASS
                    , A.CLASS_N      ---- CLASS는 큐브리드 예약어로 CLASS_N로 변경
                     ,  CASE WHEN NVL(A.VALI_DATE, '') = '' THEN ''
                             ELSE REPLACE(
                                  REPLACE(
                                  REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.VALI_DATE, 1, 4))
                                                     , 'MM',   SUBSTRING(A.VALI_DATE, 5, 2))
                                                     , 'DD',   SUBSTRING(A.VALI_DATE, 7, 2))
                        END                                                                         AS VALI_DATE
                     ,  A.BIGO                                                                      AS BIGO
                     ,  A.INSERT_DB_USER                                                            AS INSERT_DB_USER
                     ,  A.INSERT_DB_TIME                                                            AS INSERT_DB_TIME
                     ,  A.UPDATE_DB_USER                                                            AS UPDATE_DB_USER
                     ,  A.UPDATE_DB_TIME                                                            AS UPDATE_DB_TIME
                FROM               HUM750T AS A  
                        INNER JOIN HUM100T AS B   ON B.COMP_CODE       = A.COMP_CODE
                                                              AND B.PERSON_NUMB     = A.PERSON_NUMB
                        LEFT  JOIN CBM600T AS C   ON C.COMP_CODE       = B.COMP_CODE
                                                              AND C.COST_POOL_CODE  = B.COST_KIND
                        LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE      = B.COMP_CODE
                                                              AND M1.MAIN_CODE      = 'H005'
                                                              AND M1.SUB_CODE      != '$'
                                                              AND M1.SUB_CODE       = B.POST_CODE
                        LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE      = B.COMP_CODE
                                                              AND M2.MAIN_CODE      = 'H024'
                                                              AND M2.SUB_CODE      != '$'
                                                              AND M2.SUB_CODE       = B.EMPLOY_TYPE
                        LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE      = B.COMP_CODE
                                                              AND M3.MAIN_CODE      = 'H181'
                                                              AND M3.SUB_CODE       = M2.REF_CODE1
                        LEFT  JOIN BSA100T AS M4  ON M4.COMP_CODE      = B.COMP_CODE
                                                              AND M4.MAIN_CODE      = 'H005'
                                                              AND M4.SUB_CODE      != '$'
                                                              AND M4.SUB_CODE       = B.POST_CODE

                WHERE   A.COMP_CODE      = 'MASTER'  --#{S_COMP_CODE}
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                    
                   AND  B.DIV_CODE IN
                        <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                         #{item}
                        </foreach>                                  
                </if>
                <if test="@foren.Ognl@isNotEmpty(DEPTS)">
                   AND  B.DEPT_CODE  IN
                     <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
                             #{item}
                     </foreach>
                </if>
                <if test="@foren.Ognl@isNotEmpty(NAME)">
                   AND B.NAME   LIKE + '%' +  #{NAME} + '%'
                </if>
                <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                   AND B.PERSON_NUMB  = #{PERSON_NUMB}
                </if>
                <if test="RDO_TYPE == &quot;A&quot;">
                    AND B.RETR_DATE = '00000000'        -- 재직구분 (재직)
                </if>
                <if test="RDO_TYPE == &quot;B&quot;">
                    AND B.RETR_DATE != '00000000'       -- 재직구분 (퇴사)
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(SEX_CODE)">
                   AND B.SEX_CODE  = #{SEX_CODE}                    -- 성별
                </if>
                <if test="@foren.Ognl@isNotEmpty(FOREIGN_KIND)">
                   AND A.FOREIGN_KIND  = #{FOREIGN_KIND}            -- 외국어구분
                </if>
                <if test="@foren.Ognl@isNotEmpty(EXAM_KIND)">
                   AND A.EXAM_KIND  = #{EXAM_KIND}                  -- 시험종류
                </if>
                <if test="@foren.Ognl@isNotEmpty(GRADES)">
                   AND A.GRADES   LIKE + '%' +  #{GRADES} + '%'     -- 점수
                </if>
                <if test="@foren.Ognl@isNotEmpty(CLASS)">
                   AND A.CLASS_N   LIKE + '%' +  #{CLASS} + '%'       -- 등급
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
                   AND B.PAY_GUBUN           = #{PAY_GUBUN}                             -- 고용형태
                </if>
                <if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">
                   AND B.EMPLOY_TYPE    = #{EMPLOY_GUBUN}                               -- 사원구분
                </if>
                <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
                   AND B.PAY_CODE       = #{PAY_CODE}                                   -- 급여지급방식
                </if>
                <if test="@foren.Ognl@isNotEmpty(COST_POOL)">
                   AND B.COST_KIND      = #{COST_POOL}                                  -- 사업명
                </if>
                <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
                   AND B.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}                              -- 급여지급차수
                </if>
                <if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
                   AND M3.SUB_CODE      = #{PERSON_GROUP}                               -- 사원그룹
                </if>
                
              
                ORDER   BY A.COMP_CODE, B.DIV_CODE, B.DEPT_CODE, B.POST_CODE;

	</select>
	
	<insert id="hum305ukrService.insertDetail" parameterType="Map">    /* 추가 */    
		--hum305ukr.Chum305ukr[fnHum305Save] Query02
		INSERT INTO HUM750T
		     ( COMP_CODE
		     , PERSON_NUMB
		     , FOREIGN_KIND
		     , EXAM_KIND
		     , GAIN_DATE
		     <if test="@foren.Ognl@isNotEmpty(GRADES)">
		     , GRADES
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CLASS)">
		     , CLASS_N
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VALI_DATE)">
		     , VALI_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BIGO)">
		     , BIGO
		     </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     , #{FOREIGN_KIND}
		     , #{EXAM_KIND}
		     , #{GAIN_DATE}
		     <if test="@foren.Ognl@isNotEmpty(GRADES)">
		     , #{GRADES}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CLASS)">
		     , #{CLASS}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VALI_DATE)">
		     , #{VALI_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BIGO)">
		     , #{BIGO}
		     </if>
		     , #{S_USER_ID}
		     , SYSDATETIME
		     , #{S_USER_ID}
		     , SYSDATETIME
		     )
	</insert>
	
	<update id="hum305ukrService.updateDetail" parameterType="Map">		/* 수정 */
		--hum305ukr.Chum305ukr[fnHum305Save] Query02
		UPDATE HUM750T
		   SET 
		   <if test="@foren.Ognl@isExists(_parameter, 'GRADES')">
		       GRADES         = #{GRADES}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'CLASS')">
		     , CLASS_N          = #{CLASS}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'VALI_DATE')">
		     , VALI_DATE      = #{VALI_DATE}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'BIGO')">
		     , BIGO           = #{BIGO}
		   </if>
		     , INSERT_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = SYSDATETIME
		     
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND PERSON_NUMB    = #{PERSON_NUMB}
		   AND FOREIGN_KIND   = #{FOREIGN_KIND}
		   AND EXAM_KIND      = #{EXAM_KIND}
		   AND GAIN_DATE      = #{GAIN_DATE}
	</update>
	
	<delete id="hum305ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
		--hum305ukr.Chum305ukr[fnHum305Save] Query01
		DELETE FROM HUM750T 
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND PERSON_NUMB  = #{PERSON_NUMB}
		   AND FOREIGN_KIND = #{FOREIGN_KIND}
		   AND EXAM_KIND    = #{EXAM_KIND}
		   AND GAIN_DATE    = #{GAIN_DATE}
	</delete>
</mapper>