<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pdaProduceService">

	<select id="pdaProduceService.searchWorkShop" parameterType="Map" resultType="rMap">
		SELECT
		        A.TREE_CODE
		      , A.TREE_NAME
		 FROM                BSA230T     A  WITH (NOLOCK)
		 WHERE   A.COMP_CODE     =  #{COMP_CODE}			  
			 AND A.TYPE_LEVEL    = #{DIV_CODE}  -- 사업징 코드
			 AND A.USE_YN		 = 'Y'
		 ORDER   BY  A.TREE_CODE
	</select>
	
	<select id="pdaProduceService.searchWkordList" parameterType="Map" resultType="rMap">
		BEGIN
		    DECLARE @COMP_CODE NVARCHAR(08) 		-- (필수 9.) 법인코드
		        , @DIV_CODE NVARCHAR(08) 			-- (필수 0.) 사업장코드
		        , @WORK_SHOP_CODE NVARCHAR(08) 		-- (필수 1.) 작업장코드
		        , @USER_ID NVARCHAR(100) 			-- (선택 7.) User ID
		        , @SPEC NVARCHAR(20) 				-- 품번
		        , @LOT_NO NVARCHAR(20) 				-- LOT NO
		
		    SET @COMP_CODE = #{COMP_CODE}
		    SET @DIV_CODE = #{DIV_CODE}
		    SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    SET @USER_ID = #{USER_ID}
		    SET @SPEC = #{SPEC}
		    SET @LOT_NO = #{LOT_NO}
		
		    SELECT A.WKORD_NUM                                                                    -- 작업지시번호
		         , A.WORK_SHOP_CODE                                                               -- 작업장
		         , A.ITEM_CODE                                                                    -- 품목코드
		         , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME        -- 품목명
		         , C1.SPEC                                                                        -- 규격
		         , C1.STOCK_UNIT                                                                  -- 재고단위
		         , A.LOT_NO
		         , A.WKORD_Q                                                  AS WKORD_Q          -- 작업지시수량
		         , A.WKORD_Q - A.WORK_Q                                       AS REMAIN_Q         -- 잔량
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE) AS PRODT_START_DATE -- 착수예정일
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)   AS PRODT_END_DATE   -- 작업완료일
		         , A.PROG_WORK_CODE
		
		    FROM PMP100TV1 A WITH (NOLOCK)
		             INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		        AND C1.ITEM_CODE = A.ITEM_CODE
		
		    WHERE A.COMP_CODE = @COMP_CODE
		      AND A.DIV_CODE = @DIV_CODE
		      AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE
		      AND A.LINE_END_YN = 'Y'
		      AND A.WKORD_STATUS IN ('2', '3')      -- 작업장으로 팝업에서만 이조건 체크함
		      AND (A.WKORD_Q - A.WORK_Q) &gt; 0
			<if test="@foren.Ognl@isNotEmpty(SPEC)">
				AND C1.SPEC LIKE '%' + #{SPEC} + '%'    -- 품번으로 조회
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				AND A.LOT_NO LIKE '%' + #{LOT_NO} + '%' -- LOT NO 로 조회시 사용
			</if>
		      
		    ORDER BY A.WKORD_NUM
		END 
	</select>
	
	<select id="pdaProduceService.searchWkord" parameterType="Map" resultType="rMap">
		BEGIN
		    DECLARE @COMP_CODE NVARCHAR(08) 		-- (필수 9.) 법인코드
		        , @DIV_CODE NVARCHAR(08) 			-- (필수 0.) 사업장코드
		        , @WORK_SHOP_CODE NVARCHAR(08) 		-- (필수 1.) 작업장코드
		        , @USER_ID NVARCHAR(100) 			-- (선택 7.) User ID
		        , @WKORD_NUM NVARCHAR(20) 			-- 작업지시번호
		
		    SET @COMP_CODE = #{COMP_CODE}
		    SET @DIV_CODE = #{DIV_CODE}
		    SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    SET @USER_ID = #{USER_ID}
		    SET @WKORD_NUM = #{WKORD_NUM}
		
		    SELECT A.WKORD_NUM                                                                    -- 작업지시번호
		         , A.WORK_SHOP_CODE                                                               -- 작업장
		         , B.TREE_NAME												  AS WORK_SHOP_NAME   -- 작업장명
		         , A.ITEM_CODE                                                                    -- 품목코드
		         , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME        -- 품목명
		         , C1.SPEC                                                                        -- 규격
		         , C1.STOCK_UNIT                                                                  -- 재고단위
		         , A.LOT_NO
		         , A.WKORD_Q                                                  AS WKORD_Q          -- 작업지시수량
		         , A.WKORD_Q - A.WORK_Q                                       AS REMAIN_Q         -- 잔량
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE) AS PRODT_START_DATE -- 착수예정일
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)   AS PRODT_END_DATE   -- 작업완료일
		         , A.PROG_WORK_CODE
		
		    FROM PMP100TV1 A WITH (NOLOCK)
		             INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		        										AND C1.ITEM_CODE = A.ITEM_CODE
		        	 LEFT  JOIN BSA230T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		        	 									AND B.TREE_CODE = A.WORK_SHOP_CODE
		
		    WHERE A.COMP_CODE = @COMP_CODE
		      AND A.DIV_CODE = @DIV_CODE
		      AND A.WKORD_STATUS &lt; '8'
		      --AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE
		      AND A.LINE_END_YN = 'Y'
			  AND A.WKORD_NUM = @WKORD_NUM		-- 작업지시번호 SCAN 시에는 이 조건사용
		      
		    ORDER BY A.WKORD_NUM
		END 
	</select>
	
	<select id="pdaProduceService.searchWkordMgh" parameterType="Map" resultType="rMap">
		--무궁화 작업지시번호 스캔시 조회 쿼리
		
		-- : 작업지시번호 
		
		BEGIN
		    DECLARE @COMP_CODE NVARCHAR(08) 		-- (필수 9.) 법인코드
		        , @DIV_CODE NVARCHAR(08) 			-- (필수 0.) 사업장코드
		        , @WORK_SHOP_CODE NVARCHAR(08) 		-- (필수 1.) 작업장코드
		        , @USER_ID NVARCHAR(100) 			-- (선택 7.) User ID
		        , @WKORD_NUM NVARCHAR(20) 			-- 작업지시번호
		
		    SET @COMP_CODE = #{COMP_CODE}
		    SET @DIV_CODE = #{DIV_CODE}
		    SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    SET @USER_ID = #{USER_ID}
		    SET @WKORD_NUM = #{WKORD_NUM}
		
		    SELECT A.WKORD_NUM                                                                    -- 작업지시번호
		         , A.WORK_SHOP_CODE                                                               -- 작업장
		         , B.TREE_NAME												  AS WORK_SHOP_NAME   -- 작업장명
		         , A.ITEM_CODE                                                                    -- 품목코드
		         , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME        -- 품목명
		         , C1.SPEC                                                                        -- 규격
		         , C1.STOCK_UNIT                                                                  -- 재고단위
		         , A.LOT_NO
		         , A.WKORD_Q                                                  AS WKORD_Q          -- 작업지시수량
		         , A.WKORD_Q - A.WORK_Q                                       AS REMAIN_Q         -- 잔량


						--무궁화 추가
				, (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END 	AS REMAIN_BOX_QTY


				--, 1 AS PALLET_QTY																							--생산량(파렛트)														
				-- , CONVERT(NUMERIC(5,0), RIGHT(ISNULL(P.LOT_NO, '00'), 2)) + 1		AS PALLET_QTY
				-- P.LOT_NO 가  '' 값인 경우 있어서 에러 발생
				, CASE WHEN ISNULL(P.LOT_NO, '') = '' THEN 1
					      ELSE CONVERT(NUMERIC(5,0), RIGHT(P.LOT_NO, 2)) + 1
					END 	AS PALLET_QTY
					
				, CASE WHEN (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END  > ISNULL(C2.PACK_QTY, 1) THEN ISNULL(C2.PACK_QTY, 1)
						ELSE (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END   END    AS BOX_QTY				--생산량(BOX)





			    , CASE WHEN (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END  > ISNULL(C2.PACK_QTY, 1) THEN ISNULL(C2.PACK_QTY, 1)
						ELSE (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END   END  
						*  CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END											AS PRODT_QTY		--생산량

				, ISNULL(C2.PACK_QTY, 1)				AS PACK_QTY								-- 파렛트 당 박스수량  
				, ISNULL( C2.MINI_PACK_Q, 0)			AS MINI_PACK_Q							--포장수량(박스당 수량)

					------------------------
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE) AS PRODT_START_DATE -- 착수예정일
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)   AS PRODT_END_DATE   -- 작업완료일
		         , A.PROG_WORK_CODE
		
		    FROM PMP100TV1 A WITH (NOLOCK)
		             INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		        										AND C1.ITEM_CODE = A.ITEM_CODE
		             INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
		        										AND C2.DIV_CODE = A.DIV_CODE
														AND C2.ITEM_CODE = A.ITEM_CODE

		        	 LEFT  JOIN BSA230T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		        	 									AND B.TREE_CODE = A.WORK_SHOP_CODE

					 LEFT JOIN ( SELECT COMP_CODE, DIV_CODE, WKORD_NUM, MAX(LOT_NO) AS LOT_NO 
									FROM PMR100T WITH(NOLOCK) 
									WHERE LOT_NO != '999999-99'	
									GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM ) P  ON P.COMP_CODE = A.COMP_CODE AND P.DIV_CODE = A.DIV_CODE AND P.WKORD_NUM = A.WKORD_NUM

		
		    WHERE A.COMP_CODE = @COMP_CODE
		      AND A.DIV_CODE = @DIV_CODE
		      AND A.WKORD_STATUS &lt; '8'
		      --AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE
		      AND A.LINE_END_YN = 'Y'
			  AND A.WKORD_NUM = @WKORD_NUM		-- 작업지시번호 SCAN 시에는 이 조건사용
		      
		    ORDER BY A.WKORD_NUM
		END 
	</select>
	
	
	<select id="pdaProduceService.searchWkordMghList" parameterType="Map" resultType="rMap">
		--무궁화 작업지시검색 리스트 조회 쿼리
		
		BEGIN
		    DECLARE @COMP_CODE NVARCHAR(08) 		-- (필수 9.) 법인코드
		        , @DIV_CODE NVARCHAR(08) 			-- (필수 0.) 사업장코드
		        , @WORK_SHOP_CODE NVARCHAR(08) 		-- (필수 1.) 작업장코드
		        , @USER_ID NVARCHAR(100) 			-- (선택 7.) User ID
		        , @WKORD_NUM NVARCHAR(20) 			-- 작업지시번호
		
		    SET @COMP_CODE = #{COMP_CODE}
		    SET @DIV_CODE = #{DIV_CODE}
		    SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		    SET @USER_ID = #{USER_ID}
		    SET @WKORD_NUM = #{WKORD_NUM}
		
		    SELECT A.WKORD_NUM                                                                    -- 작업지시번호
		         , A.WORK_SHOP_CODE                                                               -- 작업장
		         , B.TREE_NAME												  AS WORK_SHOP_NAME   -- 작업장명
		         , A.ITEM_CODE                                                                    -- 품목코드
		         , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME        -- 품목명
		         , C1.SPEC                                                                        -- 규격
		         , C1.STOCK_UNIT                                                                  -- 재고단위
		         , A.LOT_NO
		         , A.WKORD_Q                                                  AS WKORD_Q          -- 작업지시수량
		         , A.WKORD_Q - A.WORK_Q                                       AS REMAIN_Q         -- 잔량


						--무궁화 추가
				, (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END 	AS REMAIN_BOX_QTY


				--, 1 AS PALLET_QTY																							--생산량(파렛트)														
			--	 , CONVERT(NUMERIC(5,0), RIGHT(ISNULL(P.LOT_NO, '00'), 2)) + 1		AS PALLET_QTY
			-- P.LOT_NO 가  '' 값인 경우 있어서 에러 발생
				, CASE WHEN ISNULL(P.LOT_NO, '') = '' THEN 1
					      ELSE CONVERT(NUMERIC(5,0), RIGHT(P.LOT_NO, 2)) + 1
					END 	AS PALLET_QTY
				
				
				, CASE WHEN (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END  > ISNULL(C2.PACK_QTY, 1) THEN ISNULL(C2.PACK_QTY, 1)
						ELSE (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END   END    AS BOX_QTY				--생산량(BOX)





			    , CASE WHEN (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END  > ISNULL(C2.PACK_QTY, 1) THEN ISNULL(C2.PACK_QTY, 1)
						ELSE (A.WKORD_Q - A.WORK_Q ) / CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END   END  
						*  CASE WHEN ISNULL(C2.MINI_PACK_Q, 0) = 0 THEN 1 ELSE ISNULL(C2.MINI_PACK_Q, 0) END											AS PRODT_QTY		--생산량

				, ISNULL(C2.PACK_QTY, 1)				AS PACK_QTY								-- 파렛트 당 박스수량  
				, ISNULL( C2.MINI_PACK_Q, 0)			AS MINI_PACK_Q							--포장수량(박스당 수량)

					------------------------
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_START_DATE) AS PRODT_START_DATE -- 착수예정일
		         , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PRODT_END_DATE)   AS PRODT_END_DATE   -- 작업완료일
		         , A.PROG_WORK_CODE
		
		    FROM PMP100TV1 A WITH (NOLOCK)
		             INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		        										AND C1.ITEM_CODE = A.ITEM_CODE
		             INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
		        										AND C2.DIV_CODE = A.DIV_CODE
														AND C2.ITEM_CODE = A.ITEM_CODE

		        	 LEFT  JOIN BSA230T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		        	 									AND B.TREE_CODE = A.WORK_SHOP_CODE

					 LEFT JOIN ( SELECT COMP_CODE, DIV_CODE, WKORD_NUM, MAX(LOT_NO) AS LOT_NO 
									FROM PMR100T WITH(NOLOCK) 
									WHERE LOT_NO != '999999-99'	
									GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM ) P  ON P.COMP_CODE = A.COMP_CODE AND P.DIV_CODE = A.DIV_CODE AND P.WKORD_NUM = A.WKORD_NUM

		
		    WHERE A.COMP_CODE = @COMP_CODE
		      AND A.DIV_CODE = @DIV_CODE
		      AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE
		      AND A.LINE_END_YN = 'Y'
		      AND A.WKORD_STATUS &lt; '8'
		      AND (A.WKORD_Q - A.WORK_Q) &gt; 0
			<if test="@foren.Ognl@isNotEmpty(SPEC)">
				AND C1.SPEC LIKE '%' + #{SPEC} + '%'    -- 품번으로 조회
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				AND A.LOT_NO LIKE '%' + #{LOT_NO} + '%' -- LOT NO 로 조회시 사용
			</if>
		      
		    ORDER BY A.WKORD_NUM
		END 
	</select>
	

	<select id="pdaProduceService.searchProcesses" parameterType="Map" resultType="rMap">		
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

                 , @CALC_TYPE             NVARCHAR(01)        -- 생산잔량 계산타입

        SET @SHEET_TYPE     = ISNULL('SHEET1', 'SHEET1')
        SET @COMP_CODE      = #{COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

		SELECT TOP 1
			@CALC_TYPE = ISNULL(SUB_CODE,'A')
		  FROM BSA100T
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND MAIN_CODE = 'P517'
		   AND REF_CODE1 = 'Y'

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.work_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 , '1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                  ,(
					CASE WHEN ISNULL(@CALC_TYPE,'A') = 'A' THEN
								uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
						 WHEN ISNULL(@CALC_TYPE,'A') = 'B' THEN
								uniLITE.fnFormat(A.comp_code, A.wkord_q - A.work_q, 'P_FSET_QS')
						ELSE uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
					END
				 ) AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , A.MOLD_CODE
                 , A.CAVIT_BASE_Q
                 , A.EQUIP_CODE
				 , C2.EQU_NAME AS EQUIP_NAME
				 , A.PRODT_PRSN
				 , A.EXPIRATION_DATE
				 , '1' AS LUNCH_CHK
				-- ,CAST('1/01/2008 08:30:00' AS smalldatetime)   AS FR_TIME --기본값 세팅시 2008/1/1로 해야 셀 클릭시 변경된 날짜로 인식을 안 함
				-- ,CAST('1/01/2008 17:30:00' AS smalldatetime)   AS TO_TIME
				,'' AS FR_TIME
				,'' AS TO_TIME
                 ,0 AS BOX_TRNS_RATE
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
                   LEFT JOIN EQU200T  C2 WITH (NOLOCK) ON C2.COMP_CODE		 = A.COMP_CODE
													  AND C2.DIV_CODE		 = A.DIV_CODE
													  AND C2.EQU_CODE		 = A.EQUIP_CODE
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            AND    A.work_shop_code = @WORK_SHOP_CODE
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.work_q, 0),      'P_FSET_QS') AS WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>
	
	<select id="pdaProduceService.searchResultsStatus" parameterType="Map" resultType="rMap">
	
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

        SET @SHEET_TYPE     = ISNULL('SHEET2', 'SHEET1')
        SET @COMP_CODE      = #{COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.work_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 ,'1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , 1 AS PRINT_CNT
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            AND    A.work_shop_code = @WORK_SHOP_CODE
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.work_q, 0),      'P_FSET_QS') AS WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , CAST('2008-01-01 ' + A.FR_TIME AS smalldatetime)                   AS FR_TIME
                 , CAST('2008-01-01 ' + A.TO_TIME AS smalldatetime)                   AS TO_TIME
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                -- , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                , A.LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , ISNULL(BOX_TRNS_RATE,1) AS BOX_TRNS_RATE
                 , BOX_Q
                 , SAVING_Q
                 , MAN_CNT
                 , CASE WHEN HAZARD_CHECK = 'Y' THEN 1 ELSE 0 END AS HAZARD_CHECK
                 , CASE WHEN MICROBE_CHECK = 'Y' THEN 1 ELSE 0 END AS MICROBE_CHECK
                 , A.PIECE
                 , A.EXPIRATION_DATE
                 , A.YIELD
                 , A.LOSS_Q
                 , A.BOX_TRNS_RATE
                 , A.ETC_Q
                 , A.PRODT_PRSN
				 , A.EQUIP_CODE
				 , C.EQU_NAME AS EQUIP_NAME
				 , 1 AS PRINT_CNT
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
				    LEFT JOIN EQU200T C WITH (NOLOCK)  ON C.COMP_CODE	= A.COMP_CODE
													  AND C.DIV_CODE	= A.DIV_CODE
													  AND C.EQU_CODE	= A.EQUIP_CODE
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>
	
	<select id="pdaProduceService.searchBadList" parameterType="Map" resultType="rMap">
		--pdaProduceService.searchResultsStatus
	    SELECT
	           A.DIV_CODE
	         , A.WORK_SHOP_CODE
	         , A.WKORD_NUM
	         , A.PROG_WORK_CODE
	         , B.PROG_WORK_NAME
	         , A.PRODT_DATE
	         , A.ITEM_CODE
	         , A.BAD_CODE
	         , C.CODE_NAME AS BAD_TYPE_NAME
	         , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS') AS BAD_Q
	         , A.REMARK
	         , A.UPDATE_DB_USER
	         , A.UPDATE_DB_TIME
	         , A.COMP_CODE
	     FROM             PMR300T A WITH (NOLOCK)
	           INNER JOIN PBS200T B WITH (NOLOCK) ON B.comp_code      = A.comp_code
	                                             AND B.div_code       = A.div_code
	                                             AND B.work_shop_code = A.work_shop_code
	                                             AND B.prog_work_code = A.prog_work_code
	           LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE 
	           									AND C.MAIN_CODE = 'P003'
	           									AND C.SUB_CODE = A.BAD_CODE
	     WHERE A.COMP_CODE      = #{COMP_CODE}
	     AND   A.DIV_CODE       = #{DIV_CODE}
	     AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
	     AND   A.WKORD_NUM      = #{WKORD_NUM}
	     ORDER BY A.PROG_WORK_CODE ASC ,A.PRODT_DATE ASC
	</select>
	
	<insert id="pdaProduceService.insertDetail" parameterType="Map">
	/* 공정별등록 추가1 */
	--pdaProduceService.insertDetail
		INSERT INTO PMR110T (
		       COMP_CODE,
		       DIV_CODE,
		       PRODT_NUM,
		       WORK_SHOP_CODE,
		       WKORD_NUM,
		       ITEM_CODE,
		       PRODT_DATE,
		       PRODT_Q,
		       GOOD_PRODT_Q,
		       BAD_PRODT_Q,
		       CONTROL_STATUS,
		       MAN_HOUR,
		       REMARK,
		       PROJECT_NO,
		       LOT_NO,
		       FR_SERIAL_NO,
		       TO_SERIAL_NO,
		       WORK_MAN,
		       WORK_TIME,
		       WORK_GROUP,
		       WORK_TYPE,
		       WORK_MODEL,
		       EQU_CODE,
		       INSERT_DB_USER,
		       INSERT_DB_TIME,
		       UPDATE_DB_USER,
		       UPDATE_DB_TIME,
		       PJT_CODE,
		       PRODT_PRSN,
		       PRODT_MACH,
		       PRODT_TIME,
		       DAY_NIGHT,
		       PQC,
		       FR_TIME,
		       TO_TIME)
		VALUES(
	     	   #{COMP_CODE},
		       #{DIV_CODE},
		       #{PRODT_NUM},
		       #{WORK_SHOP_CODE},
		       #{WKORD_NUM},
		       #{ITEM_CODE},
		       #{PRODT_DATE},
		       #{PRODT_Q},
		       #{GOOD_PRODT_Q},
		       #{BAD_PRODT_Q},
		       #{CONTROL_STATUS},
		       #{MAN_HOUR},
		       #{REMARK},
		       #{PROJECT_NO},
		       #{LOT_NO},
		       #{FR_SERIAL_NO},
		       #{TO_SERIAL_NO},
		       #{WORK_MAN},
		       #{WORK_TIME},
		       #{WORK_GROUP},
		       #{WORK_TYPE},
		       #{WORK_MODEL},
		       #{EQU_CODE},
  			   #{S_USER_ID},
	           GETDATE(),
	           #{S_USER_ID},
	           GETDATE(),
		       #{PJT_CODE},
		       #{PRODT_PRSN},
		       #{PRODT_MACH},
		       #{PRODT_TIME},
		       #{DAY_NIGHT},
		       #{PQC},
		       #{FR_TIME},
		       #{TO_TIME})
	</insert>
	
	<!-- 등록 -->
	<update id="pdaProduceService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
    
	<update id="pdaProduceService.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{BAD_WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc          ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
    
	<update id="pdaProduceService.spMghPmrLink" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult_PMRLINK (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc          ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
    
    <insert id="pdaProduceService.saveBad" parameterType="Map">
        INSERT INTO PMR310T
		     ( DIV_CODE
			 , WORK_SHOP_CODE
			 , WKORD_NUM
			 , PROG_WORK_CODE
			 , PRODT_DATE
			 , PRODT_NUM
			 , ITEM_CODE
			 , BAD_CODE
			 , BAD_Q
			 , REMARK
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 , COMP_CODE )
		VALUES
		     ( #{DIV_CODE}
			 , #{WORK_SHOP_CODE}
			 , #{WKORD_NUM}
			 , #{PROG_WORK_CODE}
			 , #{PRODT_DATE}
			 , #{PRODT_NUM}
			 , #{ITEM_CODE}
			 , #{BAD_CODE}
			 , #{BAD_Q}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{COMP_CODE} )
    </insert>
    
    <delete id="pdaProduceService.deleteBad" parameterType="Map">
        DELETE FROM PMR300T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND BAD_CODE       = #{BAD_CODE}
           AND COMP_CODE      = #{COMP_CODE}
	</delete>
	
	
	<select id="pdaProduceService.searchWkordData" parameterType="Map" resultType="rMap">
		/* pdaProduceService.searchWkordData */
		SELECT		
			A.WKORD_NUM
			,ISNULL(SUM(A.ALLOCK_Q),0)  AS THEORY_Q -- 이론량
			,MAX(B.ITEM_CODE) AS ITEM_CODE
			FROM PMP200T A WITH(NOLOCK)
			INNER JOIN PMP100T B WITH(NOLOCK) ON  A.COMP_CODE   = B.COMP_CODE
											 AND  A.DIV_CODE    = B.DIV_CODE
											 AND  A.WKORD_NUM   = B.WKORD_NUM
											 AND  B.LINE_END_YN = 'Y'

			INNER JOIN BPR100T E WITH(NOLOCK) ON A.COMP_CODE    = E.COMP_CODE
											 AND A.ITEM_CODE    = E.ITEM_CODE
			INNER JOIN BPR100T E1 WITH(NOLOCK) ON B.COMP_CODE   = E1.COMP_CODE
											 AND B.ITEM_CODE    = E1.ITEM_CODE
			INNER JOIN BPR200T E2 WITH(NOLOCK) ON A.COMP_CODE   = E2.COMP_CODE
											 AND  A.DIV_CODE    = E2.DIV_CODE
											 AND  A.ITEM_CODE   = E2.ITEM_CODE

			WHERE A.COMP_CODE = #{COMP_CODE}
              AND A.WKORD_NUM = #{WKORD_NUM}
              
		 GROUP BY A.COMP_CODE, A.WKORD_NUM
	</select>
	
</mapper>