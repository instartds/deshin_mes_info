<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pdaBasicService">

	<select id="pdaBasicService.selectCaseSensitiveYN" parameterType="Map" resultType="rMap">
    	 SELECT MAIN_CODE                       AS MAIN_CODE
				 , SUB_CODE                        AS SUB_CODE
				 , ISNULL(CODE_NAME, SUB_CODE) 	   AS CODE_NAME
				 , ISNULL(CODE_NAME_EN, CODE_NAME) AS CODE_NAME_EN
				 , ISNULL(CODE_NAME_CN, CODE_NAME) AS CODE_NAME_CN
				 , ISNULL(CODE_NAME_JP, CODE_NAME) AS CODE_NAME_JP
				 , ISNULL(CODE_NAME_VI, CODE_NAME) AS CODE_NAME_VI
                 , USE_YN                          AS USE_YN
                 , REF_CODE1	                   AS REF_CODE1
                 , REF_CODE2	                   AS REF_CODE2
                 , REF_CODE3	                   AS REF_CODE3
                 , REF_CODE4	                   AS REF_CODE4
                 , REF_CODE5	                   AS REF_CODE5
                 , REF_CODE6	                   AS REF_CODE6
                 , REF_CODE7	                   AS REF_CODE7
                 , REF_CODE8	                   AS REF_CODE8
                 , REF_CODE9	                   AS REF_CODE9
                 , REF_CODE10                      AS REF_CODE10                
			 FROM BSA100T
			WHERE COMP_CODE = #{COMP_CODE}
			  AND USE_YN = 'Y'
			  AND MAIN_CODE = 'B110'
			  AND SUB_CODE = '40'
	</select>
	
	<select id="pdaBasicService.getStockItem" parameterType="Map" resultType="rMap">
	    BEGIN
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	
			DECLARE @Comp_Code		NVARCHAR(08)   /* 법인코드    */
	              , @DIV_CODE		NVARCHAR(100)  /* 사업장	  */
	              , @WH_CODE		NVARCHAR(10)   /* 창고코드    */
	              , @WH_CELL_CODE   NVARCHAR(10)   /* CELL코드    */
				  , @ITEM_CODE		NVARCHAR(20)   /* 품목코드    */
				  , @LOT_NO			NVARCHAR(20)   /* LOT 번호    */
				 
	
			SET @Comp_Code    = #{COMP_CODE}
			SET @DIV_CODE     = #{DIV_CODE}
	        SET @WH_CODE      = #{WH_CODE}
	        SET @WH_CELL_CODE = #{WH_CELL_CODE}
			SET @ITEM_CODE    = #{ITEM_CODE}
			SET @LOT_NO       = #{LOT_NO}
	
			SELECT TOP 1
					  A.DIV_CODE
					, A.ITEM_CODE
					, B.ITEM_NAME
					, ISNULL(B.SPEC, '') AS SPEC
					, A.LOT_NO
					, ISNULL(A.WH_CODE, '') AS WH_CODE
					, ISNULL(A.WH_CELL_CODE, '') AS WH_CELL_CODE
					, ISNULL(C.WH_CELL_NAME, '') AS WH_CELL_NAME
					, B.STOCK_UNIT
					, A.STOCK_Q
					, A.GOOD_STOCK_Q
					, A.BAD_STOCK_Q
					, D.AVERAGE_P           		AS INOUT_P --단가
					, D.AVERAGE_P * A.GOOD_STOCK_Q  AS INOUT_I --금액
					, FLOOR(A.STOCK_Q / B2.MINI_PACK_Q)  AS BOX_QTY
				 	, A.STOCK_Q % B2.MINI_PACK_Q			AS EA_QTY
					, B2.MINI_PACK_Q
			FROM BIV150TV A WITH (NOLOCK)
				LEFT JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
												 AND A.ITEM_CODE = B.ITEM_CODE
				LEFT JOIN BPR200T B2 WITH (NOLOCK) ON B.COMP_CODE = B2.COMP_CODE
												AND B.ITEM_CODE = B2.ITEM_CODE
												AND A.DIV_CODE = B2.DIV_CODE
				LEFT JOIN BSA225T C WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
												 AND A.WH_CODE = C.WH_CODE 
								 				 AND A.WH_CELL_CODE = C.WH_CELL_CODE
				LEFT JOIN BIV100T D WITH (NOLOCK) ON A.COMP_CODE = D.COMP_CODE 
												 AND A.DIV_CODE = D.DIV_CODE 
												 AND A.WH_CODE = D.WH_CODE
												 AND A.ITEM_CODE = D.ITEM_CODE
			WHERE A.COMP_CODE = @COMP_CODE
				AND A.DIV_CODE = @DIV_CODE
				AND A.ITEM_CODE = @ITEM_CODE
				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
					AND A.WH_CODE = @WH_CODE
				</if>
				<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
					AND A.WH_CELL_CODE = @WH_CELL_CODE
				</if>
				AND A.LOT_NO = @LOT_NO
				AND A.STOCK_Q &gt; 0
	 			AND A.GOOD_STOCK_Q &gt; 0
	
			SET NOCOUNT OFF 
			SET ARITHABORT OFF 
		END 
	</select>
	
	<select id="pdaBasicService.getBasicItem" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE NVARCHAR(20)
		    , @DIV_CODE NVARCHAR(10)
		    , @ITEM_CODE NVARCHAR(30)
			, @LOT_NO	NVARCHAR(20)
		
		SET @COMP_CODE = #{COMP_CODE}
		SET @DIV_CODE = #{DIV_CODE}
		SET @ITEM_CODE = #{ITEM_CODE} --품목코드
		SET @LOT_NO    = #{LOT_NO}
		
		SELECT A.ITEM_CODE,
		       A.ITEM_NAME,
		       ISNULL(A.SPEC, '') AS SPEC,
		       A.STOCK_UNIT,
   				P.GOOD_PRODT_Q - IN_STOCK_Q AS INSTOCK_Q 
		FROM BPR100T A
		         INNER JOIN BPR200T B ON B.COMP_CODE = A.COMP_CODE AND B.DIV_CODE = @DIV_CODE
		    AND B.ITEM_CODE = A.ITEM_CODE
		    INNER JOIN PMR200T P ON P.COMP_CODE = A.COMP_CODE
				AND P.DIV_CODE	= @DIV_CODE
				AND P.ITEM_CODE = A.ITEM_CODE
				AND P.LOT_NO	= @LOT_NO
		
		WHERE A.COMP_CODE = @COMP_CODE
		  AND (@ITEM_CODE = '' OR (@ITEM_CODE != '' AND A.ITEM_CODE = @ITEM_CODE))
		  
	</select>
	
	<select id="pdaBasicService.selectConfigList" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE ,
			DIV_CODE ,
			DATA_CODE ,
			DATA_VALUE ,
			DATA_NAME
		FROM PDA_CONFIG
		WHERE COMP_CODE = #{COMP_CODE}
			AND DIV_CODE= #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(DATA_CODE)">
			AND DATA_CODE = #{DATA_CODE}
		</if>
	</select>
	
	<select id="pdaBasicService.updateConfigList" parameterType="Map" resultType="rMap">
		BEGIN
			IF EXISTS (SELECT 1 FROM PDA_CONFIG WHERE COMP_CODE = #{COMP_CODE} AND DIV_CODE = #{DIV_CODE} AND DATA_CODE = #{DATA_CODE})
				UPDATE PDA_CONFIG SET 
					DATA_VALUE = #{DATA_VALUE},
					DATA_NAME = #{DATA_NAME},
					UPDATE_DB_USER = #{USER_ID},
					UPDATE_DB_TIME = GETDATE()
				WHERE COMP_CODE = #{COMP_CODE} 
					AND DIV_CODE = #{DIV_CODE} 
					AND DATA_CODE = #{DATA_CODE}
			ELSE 
				INSERT INTO PDA_CONFIG (
					COMP_CODE, 
					DIV_CODE, 
					DATA_CODE, 
					DATA_VALUE, 
					DATA_NAME,
					INSERT_DB_USER, 
					INSERT_DB_TIME, 
					UPDATE_DB_USER, 
					UPDATE_DB_TIME)
				VALUES(
					#{COMP_CODE}, 
					#{DIV_CODE}, 
					#{DATA_CODE}, 
					#{DATA_VALUE}, 
					#{DATA_NAME},
					#{USER_ID}, 
					GETDATE(), 
					#{USER_ID}, 
					GETDATE())
		END
	</select>
	
	<select id="pdaBasicService.selectCommonInfoList" parameterType="Map" resultType="rMap">
		SELECT MAIN_CODE                       AS MAIN_CODE
		     , SUB_CODE                        AS SUB_CODE
		     , ISNULL(CODE_NAME, SUB_CODE)     AS CODE_NAME
		     , ISNULL(CODE_NAME_EN, CODE_NAME) AS CODE_NAME_EN
		     , ISNULL(CODE_NAME_CN, CODE_NAME) AS CODE_NAME_CN
		     , ISNULL(CODE_NAME_JP, CODE_NAME) AS CODE_NAME_JP
		     , ISNULL(CODE_NAME_VI, CODE_NAME) AS CODE_NAME_VI
		     , USE_YN                          AS USE_YN
		     , REF_CODE1                       AS REF_CODE1
		     , REF_CODE2                       AS REF_CODE2
		     , REF_CODE3                       AS REF_CODE3
		     , REF_CODE4                       AS REF_CODE4
		     , REF_CODE5                       AS REF_CODE5
		     , REF_CODE6                       AS REF_CODE6
		     , REF_CODE7                       AS REF_CODE7
		     , REF_CODE8                       AS REF_CODE8
		     , REF_CODE9                       AS REF_CODE9
		     , REF_CODE10                      AS REF_CODE10
		FROM BSA100T
		WHERE COMP_CODE = #{S_COMP_CODE}
			AND USE_YN = 'Y'
			AND MAIN_CODE = #{MAIN_CODE}
		<if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
			AND SUB_CODE = #{SUB_CODE}
		</if>
		<if test="@foren.Ognl@isEmpty(SUB_CODE)">
			AND SUB_CODE &lt;&gt; '$'
		</if>
		ORDER BY COMP_CODE, MAIN_CODE, SORT_SEQ, SUB_CODE
	</select>
	
	<select id="pdaBasicService.getPdaPgmInfoList" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE
			,PGM_ID
			,PGM_NAME
			,SEQ
			,PGM_IMAGE_TYPE
			,BARCODE_TYPE
		--	,USE_YN

		FROM BSA401T
		WHERE COMP_CODE = #{COMP_CODE}
			AND USE_YN = 'Y'
		ORDER BY COMP_CODE, SEQ
	</select>
	
		<select id="pdaBasicService.getWhcodeList" parameterType="Map" resultType="rMap">
		SELECT 
			TREE_CODE AS whCode
			,TREE_NAME AS whName
		   FROM BSA220T
		WHERE COMP_CODE = #{COMP_CODE}
		  AND TYPE_LEVEL = #{DIV_CODE}
		ORDER BY SORT_SEQ
	</select>
</mapper>

