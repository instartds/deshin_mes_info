<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pdaStockService">

	<select id="pdaStockService.searchStock" parameterType="Map" resultType="rMap">
    	BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                          , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장코드
                          , @ITEM_CODE          NVARCHAR(20)                -- (필수) 품목코드

            SET NOCOUNT ON
            SET ARITHABORT ON

            SET @COMP_CODE    = #{COMP_CODE}
            SET @DIV_CODE     = #{DIV_CODE}
            SET @ITEM_CODE    = #{ITEM_CODE}

                SELECT
                       D1.TREE_NAME                                                                                   AS WH_NAME
                     , D2.WH_CELL_NAME                                                                                AS WH_CELL_NAME
                     , A.LOT_NO                                                                                       AS LOT_NO
                     , A.ITEM_CODE                                                                                    AS ITEM_CODE
                     , SUM(ISNULL(A.STOCK_Q, 0))                                                                      AS STOCK
                     , A.DIV_CODE                                                                                     AS DIV_CODE
                     , A.WH_CODE                                                                                      AS WH_CODE
                     --, A.WH_CELL_CODE
					 , D2.WH_CELL_NAME AS WH_CELL_CODE
                     , C1.STOCK_UNIT       
                     ,MAX(C1.ITEM_NAME) AS ITEM_NAME
                     ,MAX(C1.SPEC) AS SPEC                                                                          
                FROM              BIV150TV  A  WITH (NOLOCK)
                       LEFT  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE                                             -- 품목
                                                           AND C1.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C2.DIV_CODE     = A.DIV_CODE
                                                           AND C2.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE    = A.COMP_CODE                                             -- 창고
                                                           AND D1.TYPE_LEVEL   = A.DIV_CODE
                                                           AND D1.TREE_CODE    = A.WH_CODE
                       LEFT  JOIN BSA225T  D2 WITH (NOLOCK) ON D2.COMP_CODE    = A.COMP_CODE                                             -- CELL창고
                                                           AND D2.DIV_CODE     = A.DIV_CODE
                                                           AND D2.WH_CODE      = A.WH_CODE
                                                           AND D2.WH_CELL_CODE = A.WH_CELL_CODE
                WHERE  A.COMP_CODE    = @COMP_CODE
                --AND  A.SUM_TYPE       = 'D'
                AND  A.DIV_CODE       = @DIV_CODE 
                AND  A.ITEM_CODE	  = @ITEM_CODE        -- 품목
              	AND (ISNULL(A.STOCK_Q, 0)   != 0  OR  ISNULL(A.GOOD_STOCK_Q, 0) != 0 )
                AND  D1.USE_YN		  = 'Y'
                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, C1.STOCK_UNIT
                       , A.WH_CODE, D1.TREE_NAME, A.WH_CELL_CODE, D2.WH_CELL_NAME
                       , A.LOT_NO
                ORDER BY A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO, A.ITEM_CODE


            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
	</select>
	
	<select id="pdaStockService.searchCellStock" parameterType="Map" resultType="rMap">
    	  
        /*
			 현재고 현황 조회(LOT CELL별)
        */
        BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                          , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장코드
                          , @ITEM_CODE          NVARCHAR(20)                -- (선택) 품목코드
                          , @USER_ID            NVARCHAR(100)                -- (필수) USER ID

            SET NOCOUNT ON
            SET ARITHABORT ON

            SET @COMP_CODE    = #{COMP_CODE}
            SET @DIV_CODE     = #{DIV_CODE}
            SET @USER_ID      = #{S_USER_ID}

        -----------------------------------------------------------------------------------------------------------------------
            DECLARE         @RefItem             NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')

        -----------------------------------------------------------------------------------------------------------------------
            DECLARE         @LotYN               NVARCHAR(01)

            SELECT TOP 1 @LotYN = REF_CODE1
            FROM   BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE = @COMP_CODE
            AND    MAIN_CODE = 'B084'                                   -- 재고합산 유형
            AND    SUB_CODE  = 'D'                                      -- Lot No. 합산

            SET @LotYN = ISNULL(@LotYN, 'N')
        -----------------------------------------------------------------------------------------------------------------------

            IF @LotYN = 'N'
            BEGIN
                SELECT
                       D1.TREE_NAME                                                                                   AS WH_NAME
                     , D2.WH_CELL_NAME                                                                                AS WH_CELL_NAME
                     , A.LOT_NO                                                                                       AS LOT_NO
                     , A.ITEM_CODE                                                                                    AS ITEM_CODE
                     , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                            WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                            WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                            ELSE C1.ITEM_NAME
                       END                                                                                            AS ITEM_NAME
                     , ISNULL(C1.SPEC, '')                                                                            AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                      AS STOCK_UNIT
                     , SUM(ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0))                               AS STOCK
                     , SUM(CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)
                                ELSE 0 END)                                                                           AS GOOD_STOCK
                     , SUM(CASE WHEN A.ITEM_STATUS = '2' THEN ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)
                                ELSE 0 END)                                                                           AS BAD_STOCK
                     --, A.REMARK
                     , A.DIV_CODE                                                                                     AS DIV_CODE
                     , A.WH_CODE                                                                                      AS WH_CODE
                     , A.WH_CELL_CODE                                                                                 AS WH_CELL_CODE
                FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX07))
                       LEFT  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE                                             -- 품목
                                                           AND C1.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C2.DIV_CODE     = A.DIV_CODE
                                                           AND C2.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE    = A.COMP_CODE                                             -- 창고
                                                           AND D1.TYPE_LEVEL   = A.DIV_CODE
                                                           AND D1.TREE_CODE    = A.WH_CODE
                       LEFT  JOIN BSA225T  D2 WITH (NOLOCK) ON D2.COMP_CODE    = A.COMP_CODE                                             -- CELL창고
                                                           AND D2.DIV_CODE     = A.DIV_CODE
                                                           AND D2.WH_CODE      = A.WH_CODE
                                                           AND D2.WH_CELL_CODE = A.WH_CELL_CODE
                WHERE  A.COMP_CODE      = @COMP_CODE
                AND    A.DIV_CODE       = @DIV_CODE
				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
				   AND A.WH_CODE = #{WH_CODE}								 -- 창고
				</if>
                <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
				   AND A.WH_CELL_CODE =#{WH_CELL_CODE}
				</if>
				 <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				 AND	A.LOT_NO		= #{LOT_NO}
				 </if>
				 AND  D1.USE_YN		  = 'Y'
                GROUP BY A.COMP_CODE, A.DIV_CODE
                       , A.ITEM_CODE
                       , C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT, A.LOT_NO
                       , A.WH_CODE, D1.TREE_NAME, A.WH_CELL_CODE, D2.WH_CELL_NAME--, A.REMARK
                HAVING SUM(ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)) != 0
                ORDER BY A.WH_CODE, A.WH_CELL_CODE, A.ITEM_CODE
            END

            IF @LotYN = 'Y'
            BEGIN
                SELECT
                       D1.TREE_NAME                                                                                   AS WH_NAME
                     , D2.WH_CELL_NAME                                                                                AS WH_CELL_NAME
                     , A.LOT_NO                                                                                       AS LOT_NO
                     , A.ITEM_CODE                                                                                    AS ITEM_CODE
                     , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                            WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                            WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                            ELSE C1.ITEM_NAME
                       END                                                                                            AS ITEM_NAME
                     , ISNULL(C1.SPEC, '')                                                                            AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                      AS STOCK_UNIT
                     , SUM(ISNULL(A.STOCK_Q, 0))                                                                      AS STOCK
                     , SUM(ISNULL(A.GOOD_STOCK_Q, 0))                                                                 AS GOOD_STOCK
                     , SUM(ISNULL(A.BAD_STOCK_Q, 0))                                                                  AS BAD_STOCK
                     --, B.REMARK
                     , A.DIV_CODE                                                                                     AS DIV_CODE
                     , A.WH_CODE                                                                                      AS WH_CODE
                     , A.WH_CELL_CODE                                                                                 AS WH_CELL_CODE
                FROM              BIV150T  A  WITH (NOLOCK)
                       --LEFT  JOIN (
                       --           SELECT COMP_CODE, DIV_CODE, ITEM_CODE, MAX(REMARK) AS REMARK, WH_CODE, WH_CELL_CODE, LOT_NO
                       --           FROM   BTR100T WITH (NOLOCK)
                       --           GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WH_CODE, WH_CELL_CODE, LOT_NO
                       --           )        B                ON  B.COMP_CODE    = A.COMP_CODE
                       --                                    AND  B.DIV_CODE     = A.DIV_CODE
                       --                                    AND  B.ITEM_CODE    = A.ITEM_CODE
                       --                                    AND  B.WH_CODE      = A.WH_CODE
                       --                                    AND  B.WH_CELL_CODE = A.WH_CELL_CODE
                       --                                    AND  B.LOT_NO       = A.LOT_NO
                       LEFT  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE                                             -- 품목
                                                           AND C1.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE                                             -- 사업장 품목
                                                           AND C2.DIV_CODE     = A.DIV_CODE
                                                           AND C2.ITEM_CODE    = A.ITEM_CODE
                       LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE    = A.COMP_CODE                                             -- 창고
                                                           AND D1.TYPE_LEVEL   = A.DIV_CODE
                                                           AND D1.TREE_CODE    = A.WH_CODE
                       LEFT  JOIN BSA225T  D2 WITH (NOLOCK) ON D2.COMP_CODE    = A.COMP_CODE                                             -- CELL창고
                                                           AND D2.DIV_CODE     = A.DIV_CODE
                                                           AND D2.WH_CODE      = A.WH_CODE
                                                           AND D2.WH_CELL_CODE = A.WH_CELL_CODE
                WHERE  A.COMP_CODE      = @COMP_CODE
                AND    A.SUM_TYPE       = 'D'
               
                AND  ((A.DIV_CODE       = @DIV_CODE        AND @DIV_CODE     != '') OR (@DIV_CODE     = ''))

				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
				   AND A.WH_CODE = #{WH_CODE}								 -- 창고
				</if>

                <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
				   AND A.WH_CELL_CODE =#{WH_CELL_CODE}
				</if>
				 <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				 AND	A.LOT_NO		= #{LOT_NO}
				 </if>
				 AND  D1.USE_YN		  = 'Y'

				
                GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                       , C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT
                       , A.WH_CODE, D1.TREE_NAME, A.WH_CELL_CODE, D2.WH_CELL_NAME
                       --, B.REMARK
                       , A.LOT_NO
                HAVING SUM(ISNULL(A.STOCK_Q, 0)) != 0
                ORDER BY A.WH_CODE, A.WH_CELL_CODE, A.LOT_NO, A.ITEM_CODE
            END

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
	</select>

	<select id="pdaStockService.saveReplace" parameterType="Map" resultType="rMap">
	   --bpdaStockService.saveReplace btr171ukrvService.updateDetail
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE        @CHECK_FLAG       NVARCHAR(01)        -- (필수) Check Flag (N: New, D: Delete, U: Update)
                         , @COMP_CODE        NVARCHAR(08)        -- (필수) 법인코드
                         , @INOUT_DATE       NVARCHAR(08)        -- (필수) 대체일
                         , @DIV_CODE         NVARCHAR(08)        -- (필수) 대체입고 사업장코드
                         , @WH_CODE          NVARCHAR(08)        -- (필수) 대체입고 창고코드
                         , @WH_CELL_CODE     NVARCHAR(20)        -- (필수) 대체입고 CELL창고코드
                         , @ITEM_CODE        NVARCHAR(20)        -- (필수) 대체입고 품목코드
                         , @INOUT_P          NUMERIC(18, 6)      -- (필수) 대체입고 단가
                         , @GOOD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체입고 양품대체
                         , @BAD_STOCK_Q      NUMERIC(18, 6)      -- (필수) 대체입고 불량대체
                         , @INOUT_Q          NUMERIC(18, 6)      -- (필수) 대체입고 수량
                         , @ITEM_STATUS      NVARCHAR(1)         -- (필수) 대체입고 재고유형
                         , @INOUT_I          NUMERIC(18, 6)      -- (필수) 대체입고 재고금액
                         , @GOOD_INOUT_I     NUMERIC(18, 6)      -- (필수) 대체입고 양품 재고금액
                         , @BAD_INOUT_I      NUMERIC(18, 6)      -- (필수) 대체입고 불량 재고금액
                         , @LOT_NO           NVARCHAR(20)        -- (필수) 대체입고 LOT NO.
                         , @INOUT_NUM        NVARCHAR(20)        -- (필수) 대체입고 수불번호
                         , @INOUT_SEQ        NUMERIC(4, 0)       -- (필수) 대체입고 수불순번
                         , @INOUT_TYPE       NVARCHAR(02)        -- (필수) 대체입고 수불유형
                         , @ODIV_CODE        NVARCHAR(08)        -- (필수) 대체출고 사업장코드
                         , @OWH_CODE         NVARCHAR(08)        -- (필수) 대체출고 창고코드
                         , @OWH_CELL_CODE    NVARCHAR(20)        -- (필수) 대체출고 CELL창고코드
                         , @OITEM_CODE       NVARCHAR(20)        -- (필수) 대체출고 품목코드
                         , @OINOUT_P         NUMERIC(18, 6)      -- (필수) 대체출고 단가
                         , @OGOOD_STOCK_Q    NUMERIC(18, 6)      -- (필수) 대체출고 양품대체
                         , @OBAD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체출고 불량대체
                         , @OINOUT_Q         NUMERIC(18, 6)      -- (필수) 대체출고 수량
                         , @OINOUT_I         NUMERIC(18, 6)      -- (필수) 대체출고 재고금액
                         , @OLOT_NO          NVARCHAR(20)        -- (필수) 대체출고 LOT NO.
                         , @USER_ID          NVARCHAR(100)        -- (필수) 사용자 ID
                         , @INOUT_PRSN       NVARCHAR(10)        -- (필수) 수불담당
						 , @MAKE_DATE        NVARCHAR(08)        -- 제조일자
                         , @MAKE_EXP_DATE    NVARCHAR(08)        -- 유통기한


            SET @CHECK_FLAG    = ISNULL(@CHECK_FLAG,	#{CHECK_FLAG})
            SET @COMP_CODE     = ISNULL(@COMP_CODE,   	#{COMP_CODE})
            SET @INOUT_DATE    = ISNULL(@INOUT_DATE,  	#{INOUT_DATE})

            SET @DIV_CODE      = ISNULL(@DIV_CODE,    	#{DIV_CODE})
            SET @WH_CODE       = ISNULL(@WH_CODE,     	#{WH_CODE})
            SET @WH_CELL_CODE  = ISNULL(@WH_CELL_CODE, 	#{WH_CELL_CODE})
            SET @ITEM_CODE     = ISNULL(@ITEM_CODE,   	#{ITEM_CODE})
            SET @GOOD_STOCK_Q  = ISNULL(@GOOD_STOCK_Q,  #{GOOD_STOCK_Q})
            SET @BAD_STOCK_Q   = ISNULL(@BAD_STOCK_Q,   #{BAD_STOCK_Q})
            SET @INOUT_P       = ISNULL(@INOUT_P,       #{INOUT_P})
            SET @INOUT_Q       = @GOOD_STOCK_Q + @BAD_STOCK_Q
            SET @GOOD_INOUT_I  = @GOOD_STOCK_Q * @INOUT_P
            SET @BAD_INOUT_I   = @BAD_STOCK_Q  * @INOUT_P
            SET @ITEM_STATUS   = ISNULL(@ITEM_STATUS, 	#{ITEM_STATUS})
            SET @INOUT_I       = ISNULL(@INOUT_I,       #{INOUT_I})
            SET @LOT_NO        = ISNULL(@LOT_NO,      	#{LOT_NO})

            SET @ODIV_CODE     = ISNULL(@ODIV_CODE,   	#{ODIV_CODE})
            SET @OWH_CODE      = ISNULL(@OWH_CODE,    	#{OWH_CODE})
            SET @OWH_CELL_CODE = ISNULL(@OWH_CELL_CODE,	#{OWH_CELL_CODE})
            SET @OITEM_CODE    = ISNULL(@OITEM_CODE,  	#{OITEM_CODE})
            SET @OINOUT_P      = ISNULL(@OINOUT_P,      #{OINOUT_P})
            SET @OGOOD_STOCK_Q = ISNULL(@OGOOD_STOCK_Q, #{OGOOD_STOCK_Q})
            SET @OBAD_STOCK_Q  = ISNULL(@OBAD_STOCK_Q,  #{OBAD_STOCK_Q})
            SET @OINOUT_Q      = @OGOOD_STOCK_Q + @OBAD_STOCK_Q
            SET @OINOUT_I      = ISNULL(@OINOUT_I,      #{OINOUT_I})
            SET @OLOT_NO       = ISNULL(@OLOT_NO,     	#{OLOT_NO})

            SET @INOUT_NUM     = ISNULL(@INOUT_NUM,   	#{INOUT_NUM})         -- 수불번호가 = ''일 경우 신규, != ''일 경우 수정
            SET @INOUT_SEQ     = ISNULL(@INOUT_SEQ,     #{INOUT_SEQ})
            SET @INOUT_TYPE    = ISNULL(@INOUT_TYPE,  	#{INOUT_TYPE})
            SET @USER_ID       = ISNULL(@USER_ID,     	#{S_USER_ID})
            SET @INOUT_PRSN    = ISNULL(@INOUT_PRSN,  	#{INOUT_PRSN})
            SET @MAKE_DATE     = #{MAKE_DATE}
            SET @MAKE_EXP_DATE = #{MAKE_EXP_DATE}

            DECLARE        @InOutNum         NVARCHAR(20)       -- 대체 수불번호
                         , @InOutSeq         NUMERIC(4, 0)      -- 대체 수불순번
                         , @InOutType        NVARCHAR(02)       -- 대체 수불유형
                         , @DivCode          NVARCHAR(08)       -- 사업장
                         , @ItemCode         NVARCHAR(20)       -- 품목코드
                         , @InOutDate        NVARCHAR(08)       -- 대체 수불일자
                         , @WhCode           NVARCHAR(08)       -- 창고코드
                         , @LotNo            NVARCHAR(20)       -- LOT NO

            DECLARE        @RefItem          NVARCHAR(01)       -- 사용자 참조명칭
                         , @MoneyUnit        NVARCHAR(03)       -- 화폐단위
                         , @ErrorCode        NVARCHAR(05)       -- 에러 번호
                         , @ErrorDesc        NVARCHAR(1000)     -- 에러 설명


        -----------------------------------------------------------------------------------------------------------------------
		/* 공통코드 "B049"에 따라 호출하는 재고평가SP 분개하기 위한 작업 */
			DECLARE @EstimatemMethod	NVARCHAR(1)
			      , @AverageCalcPeriod	NVARCHAR(1)

			-- 단가계산방법
			SELECT TOP 1
				   @EstimatemMethod  = SUB_CODE
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND ISNULL(REF_CODE1,'') = 'Y'

			SET @EstimatemMethod  = CASE WHEN ISNULL(@EstimatemMethod, '')  = '' THEN '1' ELSE @EstimatemMethod  END         -- 재고금액 평가 유형(창고/사업장)

			SELECT TOP 1
				   @AverageCalcPeriod = REF_CODE5
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND SUB_CODE != '$'
			   AND SUB_CODE  = @EstimatemMethod

			SET @AverageCalcPeriod  = CASE WHEN ISNULL(@AverageCalcPeriod, '')  = '' THEN '1' ELSE @AverageCalcPeriod  END         -- 재고금액 평가 유형(창고/사업장)

        -----------------------------------------------------------------------------------------------------------------------

        --  사용자 참조명칭 기준 조회
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')                          -- Default: 명칭 0

        --  MONEY UNIT 조회
            SELECT TOP 1 @MoneyUnit = SUB_CODE
            FROM   BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE  = @COMP_CODE
            AND    MAIN_CODE  = 'B004'
            AND    SUB_CODE  != '$'
            AND    USE_YN     = 'Y'
            AND    REF_CODE1  = 'Y'

            SET @MoneyUnit = ISNULL(@MoneyUnit, 'KRW')                    -- Default: KRW

        -----------------------------------------------------------------------------------------------------------------------
        --  1. 삭제/변경된 수불 정보에 대한 삭제 처리
            IF @CHECK_FLAG IN ('D', 'U')                      -- 수정, 삭제일 경우 해당 대체 출고 내역 삭제
            BEGIN
        --      1-1. 현재, 수정/삭제 처리한 입고정보에 대한 대체출고 전표 조회
                DECLARE CUR_0378 CURSOR local static FOR
                    SELECT INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, ITEM_CODE, INOUT_DATE, WH_CODE, LOT_NO
                    FROM   BTR100T WITH (NOLOCK)
                    WHERE  COMP_CODE         = @COMP_CODE
                    AND    INOUT_NUM         = @INOUT_NUM
                    AND    BASIS_NUM         = @INOUT_NUM
        --            AND    LOT_NO            = @LOT_NO        -- @LOT번호 변경시 오류발생하여 삭제함
                    AND    CREATE_LOC        = '4'
                    AND    INOUT_METH        = '6'
                    AND    INOUT_TYPE_DETAIL IN ('93','97')
                    ORDER BY INOUT_NUM, INOUT_SEQ DESC

                OPEN CUR_0378
                FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo

                IF @@CURSOR_ROWS &lt;= 1
                BEGIN
                    SET @ErrorCode = '54724'                 -- 54724: 품목대체 처리한 출고 수불정보를 찾을 수 없습니다. [대체입고 수불번호: 1, 수불순번: 2]
                    SET @ErrorDesc = uniLITE.fnGetErrorMsg(54724, @INOUT_NUM)
                    CLOSE CUR_0378
                    DEALLOCATE CUR_0378

                    GOTO ERROR_HANDLER
                END

                WHILE (@@FETCH_STATUS = 0)
                BEGIN
        --          1-2. 대체 수불 내역 삭제
                    DELETE FROM BTR100T
                    WHERE COMP_CODE    = @COMP_CODE
                    AND   DIV_CODE     = @DivCode
                    AND   INOUT_NUM    = @InOutNum
                    AND   INOUT_SEQ    = @InOutSeq
                    AND   INOUT_TYPE   = @InOutType
                    AND   LOT_NO       = @LotNo

        --          1-3. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        CLOSE CUR_0378
                        DEALLOCATE CUR_0378

                        GOTO ERROR_HANDLER
                   END

                   FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo
                END
                CLOSE CUR_0378
                DEALLOCATE CUR_0378
            END

        -----------------------------------------------------------------------------------------------------------------------
        --  2. 신규 대체 입고 등록 처리
            IF @CHECK_FLAG IN ('U', 'N')                      -- 수정, 신규일 경우 해당 대체 출고 내역 등록
            BEGIN


				
                IF @GOOD_STOCK_Q != 0 Or @BAD_STOCK_Q != 0
				BEGIN

        --      2-1. 신규 등록일 경우, 수불번호 채번
                IF ISNULL(@INOUT_NUM, '') = ''
                    EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, 'BTR100T', 'R', @INOUT_DATE, '1', @INOUT_NUM OUTPUT      -- 일채번

                SET @INOUT_SEQ  = 1
                SET @INOUT_TYPE = '1'             -- 입고

        --      2-2. 대체입고 내역 등록
        --           INOUT_TYPE               수불타입                              ( 1: 입고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STAUS)                          (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체출고 창고코드)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번 1.)
        --           WH_CODE                  창고코드                              (대체입고 창고코드)
                INSERT INTO BTR100T (COMP_CODE,                   DIV_CODE,                          INOUT_NUM,                        INOUT_SEQ,                       ITEM_CODE
                                   , WH_CODE,                     WH_CELL_CODE,                      INOUT_DATE
                                   , INOUT_Q,                     INOUT_P,                           INOUT_I,                          MONEY_UNIT
                                   , BILL_TYPE,                   SALE_TYPE,                         SALE_DIV_CODE,                    SALE_CUSTOM_CODE
                                   , TO_DIV_CODE,                 IN_ITEM_STATUS
                                   , INOUT_TYPE,                  CREATE_LOC,                        ITEM_STATUS,                      LOT_NO
                                   , INOUT_METH,                  INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                  INOUT_CODE
                                   , BASIS_NUM,                   BASIS_SEQ,                         UPDATE_DB_USER,                   UPDATE_DB_TIME
                                   , INOUT_PRSN
                                   , MAKE_EXP_DATE
                                   , MAKE_DATE
                                   --20200123 추가
                                   , REMARK
                                   )
                SELECT @COMP_CODE    AS COMP_CODE,   @DIV_CODE     AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ    AS INOUT_SEQ,        @ITEM_CODE AS ITEM_CODE
                     , @WH_CODE      AS WH_CODE,     @WH_CELL_CODE AS WH_CELL_CODE,      @INOUT_DATE  AS INOUT_DATE
                     , @GOOD_STOCK_Q AS INOUT_Q,    @OINOUT_P    AS INOUT_P,           @GOOD_STOCK_Q * @OINOUT_P AS INOUT_I,         @MoneyUnit    AS MONEY_UNIT
                     , '*'           AS BILL_TYPE,   '*'          AS SALE_TYPE,         '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
                     , @ODIV_CODE    AS TO_DIV_CODE, @ITEM_STATUS AS IN_ITEM_STATUS
                     , @INOUT_TYPE   AS INOUT_TYPE,  '4'          AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO       AS LOT_NO
                     , '6'           AS INOUT_METH,  '93' AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE,   @OWH_CODE   AS INOUT_CODE
                     , @INOUT_NUM    AS BASIS_NUM,   CASE WHEN @GOOD_STOCK_Q != 0 THEN 2
                                                          WHEN @BAD_STOCK_Q  != 0 THEN 3
                                                          ELSE 1
                                                     END          AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()     AS UPDATE_DB_TIME
                     , @INOUT_PRSN   AS INOUT_PRSN
                     , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                     , @MAKE_DATE     AS MAKE_DATE
                     --20200123 추가
                     , #{REMARK}

        --      2-2. 재고평가 수행
        --      EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
				IF @EstimatemMethod = '1'
				BEGIN
					-- 실시간 처리
					IF @AverageCalcPeriod = '1'
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
					END
					-- 월마감 처리
					ELSE
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
					END
				END

                IF CHARINDEX(';', @ErrorDesc) &gt; 0
                BEGIN
                    SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                    SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                    GOTO ERROR_HANDLER
                END
            END

        -----------------------------------------------------------------------------------------------------------------------
        --      2-3. 대체 출고 내역 등록 처리
        --           INOUT_TYPE               수불타입                              ( 2: 출고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STATUS)                         (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체입고 창고)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번)
        --           WH_CODE                  창고코드                              (대체출고 창고)

                SET @INOUT_TYPE  = '2'             -- 출고

                IF @GOOD_STOCK_Q != 0
                BEGIN
                    SET @INOUT_SEQ   = 2
                    SET @ITEM_STATUS = '1'             -- 양품

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                           INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                       INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                            INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                          SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                         ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                  INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                          UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )
                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM    AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @GOOD_STOCK_Q AS INOUT_Q,    @OINOUT_P    AS INOUT_P,           @GOOD_STOCK_Q * @OINOUT_P AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'            AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS  AS ITEM_STATUS,     @OLOT_NO    AS LOT_NO
                         , '6'           AS INOUT_METH, '93' AS INOUT_TYPE_DETAIL, '2'           AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID      AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @OLOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END

                IF @BAD_STOCK_Q != 0
                BEGIN
                    SET @INOUT_SEQ   = 3
                    SET @ITEM_STATUS = '2'             -- 불량

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                          INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                      INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                           INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                         SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                        ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                         UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )

                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @BAD_STOCK_Q  AS INOUT_Q,    @INOUT_P    AS INOUT_P,           @BAD_INOUT_I AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'           AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO     AS LOT_NO
                         , '6'           AS INOUT_METH, '93' AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 방법에 따라 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END


                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END
            END

        ERROR_HANDLER:
            SET NOCOUNT OFF
            SET ARITHABORT OFF

            SELECT TOP 1 @ErrorCode AS ERROR_CODE, @ErrorDesc AS ERROR_DESC, @INOUT_NUM AS INOUT_NUM, 1 AS INOUT_SEQ
        END
	</select>
</mapper>