<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "pdaHspService">
	
	<select id="pdaHspService.searchListPdm100ukrvSub1" parameterType="Map" resultType="rMap">
	SELECT 
		A.CUSTOM_CODE,
		A.CUSTOM_NAME,
		A.TOP_NAME,
		A.COMPANY_NUM
	 FROM BCM100T A WITH (NOLOCK)
		  INNER JOIN BPR400T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.CUSTOM_CODE=B.CUSTOM_CODE AND B.TYPE='1'
	WHERE A.COMP_CODE = #{COMP_CODE}
	  AND A.CUSTOM_TYPE IN ('1','2')
	  
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CD_NM)">
		AND (A.CUSTOM_CODE LIKE #{CUSTOM_CD_NM} + '%'
	 	OR A.CUSTOM_NAME LIKE '%'+ #{CUSTOM_CD_NM} + '%' )
	</if>
	GROUP BY A.CUSTOM_CODE, A.CUSTOM_NAME, A.TOP_NAME, A.COMPANY_NUM
	
	</select>
	
	<select id="pdaHspService.searchListPdm100ukrvSub2" parameterType="Map" resultType="rMap">
		SELECT 
			A.ITEM_CODE
		   ,B.ITEM_NAME
		   ,B.SPEC
		   ,A.ITEM_P
		   ,A.ORDER_UNIT
		   ,C.WH_CODE
		  FROM BPR400T A WITH(NOLOCK)
	 LEFT JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									 AND B.ITEM_CODE = A.ITEM_CODE
	 LEFT JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE=A.COMP_CODE AND C.DIV_CODE=A.DIV_CODE AND C.ITEM_CODE=A.ITEM_CODE									 
		 WHERE A.COMP_CODE = #{COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.TYPE = '1'
		   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
		<if test="@foren.Ognl@isNotEmpty(ITEM_CD_NM)">
		   AND (A.ITEM_CODE LIKE #{ITEM_CD_NM} + '%'
		 	 OR B.ITEM_NAME LIKE '%'+ #{ITEM_CD_NM} + '%' )
		</if>
	</select>
	
	
	<insert id="pdaHspService.insertPdm100ukrv" parameterType="Map">
	INSERT INTO L_BTR100T
			(
			  KEY_VALUE                          ---- 키값
			, OPR_FLAG                           ---- 구분자
			, COMP_CODE                          ---- 화면입력(법인)
			, DIV_CODE                           ---- 화면입력(사업장)
			, INOUT_NUM                          ---- 강제입력('')
			, INOUT_SEQ                          ---- 화면입력(순번)
			, INOUT_TYPE                         ---- 강제입력(수불타입)
			, INOUT_METH                         ---- 강제입력(수불방법)
			, CREATE_LOC                         ---- 강제입력(수불생성)
			, INOUT_TYPE_DETAIL                  ---- 강제입력(수불유형)
			, INOUT_CODE_TYPE                    ---- 강제입력(거래처구분)
			, INOUT_CODE                         ---- 화면입력(거래처코드)
			, INOUT_DATE                         ---- 강제입력(현재일자)
			, ITEM_CODE                          ---- 화면입력(품목코드)
			, ITEM_STATUS                        ---- 강제입력(품목상태)
			, WH_CODE                            ---- 화면입력(창고)
		--	, WH_CELL_CODE                       ---- 화면입력(CELL코드)
		--	, LOT_NO                             ---- 화면입력(LOT_NO)
			, INOUT_PRSN                         ---- 화면입력(입고담당-'PDA'고정)
			, ORDER_UNIT                         ---- 화면입력(입고단위)
			, TRNS_RATE                          ---- 화면입력(입수)
			, ORDER_UNIT_Q                       ---- 화면입력(구매단위수량)
			, ORDER_UNIT_P                       ---- 화면입력(구매단위단가)
			, ORDER_UNIT_O                       ---- 화면입력(금액)
			, ORDER_UNIT_FOR_P                   ---- 내부계산(재고금액)
			, INOUT_Q                            ---- 내부계산(재고단위수량)
			, INOUT_P                            ---- 내부계산(재고단위수량)
			, INOUT_I                            ---- 내부계산(재고금액)
			, INOUT_FOR_P                        ---- 내부계산(재고금액)
			, INOUT_FOR_O                        ---- 내부계산(재고금액)
			, ORDER_TYPE                         ---- 발주구분
			--, ORDER_NUM                          ---- 화면입력(발주번호)
			--, ORDER_SEQ                          ---- 화면입력(발주순번)
			, MONEY_UNIT                         ---- 화면입력(화폐단위)
			, EXCHG_RATE_O                       ---- 화면입력(환율)
			, ACCOUNT_YNC                        ---- 화면입력기표대상
			, INSPEC_NUM                         ---- 검사번호
			, INSPEC_SEQ                         ---- 검사순번
			--, RECEIPT_NUM      					 ---- 접수번호
			--, RECEIPT_SEQ                        ---- 접수순번
			, LC_NUM                             ---- LC번호
			, BL_NUM                             ---- B/L번호
			, BASIS_NUM                          ---- 근거번호
			, BASIS_SEQ                          ---- 근거순번
			, BILL_TYPE                          ---- 강제입력('*')
			, SALE_TYPE                          ---- 강제입력('*')
			, PRICE_YN                           ---- 강제입력('Y')
			, SALE_DIV_CODE                      ---- 강제입력('*')
			, SALE_CUSTOM_CODE                   ---- 강제입력('*')
			, SALE_C_YN                          ---- 강제입력('N')
			, INSERT_DB_USER                     ---- 화면입력(사용자)
			, INSERT_DB_TIME                   
			, UPDATE_DB_USER                     ---- 화면입력(사용자)
			, UPDATE_DB_TIME
			)VALUES(
				  #{KEY_VALUE}                              -- KEY_VALUE                  ---- PDA_Log(키값)
				, #{OPR_FLAG}                               -- OPR_FLAG                   ---- PDA_Log(구분자)
				, #{COMP_CODE}                              -- COMP_CODE                  ---- PDA_Log(법인)
				, #{DIV_CODE}                               -- DIV_CODE                   ---- PDA_Log(사업장)
				, ''                                        -- INOUT_NUM                  ---- 고정('')
				, #{INOUT_SEQ}                              -- INOUT_SEQ                  ---- PDA_Log(순번)
				, '1'                                       -- INOUT_TYPE                 ---- 고정(수불타입)	1 입고
				, '2'                                       -- INOUT_METH                 ---- 고정(수불방법)	1 정상 2예외
				, '2'                               		-- CREATE_LOC                 ---- 고정(수불생성)  2:자재
				, '99'                                      -- INOUT_TYPE_DETAIL          ---- 고정(수불유형)		10 구매입고  99기타입고
				, '4' 										-- INOUT_CODE_TYPE            ---- 고정(거래처구분)  4:거래처
				, #{CUSTOM_CODE}                            -- INOUT_CODE                 ---- PDA_Log(거래처코드)
				, #{INOUT_DATE}								-- INOUT_DATE                 ---- 고정(현재일자)
				, #{ITEM_CODE}                              -- ITEM_CODE                  ---- PDA_Log(품목코드)
				, '1'                                       -- ITEM_STATUS                ---- 고정(품목상태)		1 양품
				, #{WH_CODE}                                -- WH_CODE                    ---- PDA_Log(창고)
				--, WH_CELL_CODE                            -- WH_CELL_CODE               ---- PDA_Log(CELL코드)  		--없음
				--, LOT_NO                                  -- LOT_NO                     ---- PDA_Log(LOT_NO)			--없음	
				, #{INOUT_PRSN}                             -- INOUT_PRSN                 ---- PDA_Log(입고담당-'PDA'고정)
				, #{ORDER_UNIT}                             -- ORDER_UNIT                 ---- PDA_Log(입고단위)
				, 1						                    -- TRNS_RATE                  ---- PDA_Log(입수)
				, #{INOUT_Q}      							-- ORDER_UNIT_Q               ---- PDA_Log(구매단위수량)
				, #{ITEM_P}									-- ORDER_UNIT_P               ---- PDA_Log(구매단위단가 )
				, #{INOUT_Q} * #{ITEM_P} 				  	-- ORDER_UNIT_O               ---- PDA_Log(금액)
				, #{ITEM_P}                            		-- ORDER_UNIT_FOR_P               ---- PDA_Log(구매단위단가 )
				, #{INOUT_Q}								-- INOUT_Q                    ---- 내부계산(재고단위수량)
				, #{ITEM_P}									-- INOUT_P                    ---- 내부계산(재고단위수량)
				, #{INOUT_Q} * #{ITEM_P}					-- INOUT_I                    ---- 내부계산(재고금액)

				, #{ITEM_P}									-- INOUT_FOR_P
				, #{INOUT_Q} * #{ITEM_P}					-- INOUT_FOR_O

				, '1' 			                            -- ORDER_TYPE                 ---- 발주구분('1'-내수, '4'-외주)	--없음
				--, B.ORDER_NUM                             -- ORDER_NUM                  ---- 발주번호					--없음
				--, B.ORDER_SEQ                             -- ORDER_SEQ                  ---- 발주순번					--없음
				
				, (SELECT ISNULL(MONEY_UNIT,'KRW') FROM BCM100T WHERE COMP_CODE = #{COMP_CODE} AND CUSTOM_CODE = #{CUSTOM_CODE})          --  MONEY_UNIT                 ---  PDA_Log(화폐단위)
				
				, 1                            -- EXCHG_RATE_O               ---- PDA_Log(환율)
				
				,'Y'                                        -- ACCOUNT_YNC                ---- 기표대상
				, ''										-- INSPEC_NUM                 ---- 검사번호
				, 0											-- INSPEC_SEQ                 ---- 검사순번
			--	, ISNULL(E1.RECEIPT_NUM, '')                -- RECEIPT_NUM                 ---- 접수번호					--없음
			--	, ISNULL(E1.RECEIPT_SEQ, 0)                 -- RECEIPT_SEQ                 ---- 접수순번					--없음
				, ''										-- LC_NUM                     ---- LC번호                           
				, ''										-- BL_NUM                     ---- B/L번호
				, ''										-- BASIS_NUM                  ---- 근거번호
				, NULL										-- BASIS_SEQ                  ---- 근거순번
				,'*'                                        -- BILL_TYPE                  ---- 고정('*')
				,'*'                                        -- SALE_TYPE                  ---- 고정('*')
				,'Y'                                        -- PRICE_YN                   ---- 고정('Y')		--구매자재 진단가 'Y'
				,'*'                                        -- SALE_DIV_CODE              ---- 고정('*')
				,'*'                                        -- SALE_CUSTOM_CODE           ---- 고정('*')
				,'N'                                        -- SALE_C_YN                  ---- 고정('N')
				
				,#{S_USER_ID}                           
				,GETDATE()
				,#{S_USER_ID}                         
				,GETDATE()
	)
	
	</insert>
	
	<insert id="pdaHspService.insertPdm101ukrv" parameterType="Map">

DECLARE 
	@ITEM_P	NUMERIC(30,6)
	,@ORDER_UNIT NVARCHAR(10)

	SELECT TOP 1
	   @ITEM_P = ISNULL(A.ITEM_P,0)
	   ,@ORDER_UNIT = A.ORDER_UNIT
	  FROM BPR400T A WITH(NOLOCK)
 LEFT JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								 AND B.ITEM_CODE = A.ITEM_CODE
 LEFT JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE=A.COMP_CODE AND C.DIV_CODE=A.DIV_CODE AND C.ITEM_CODE=A.ITEM_CODE									 
							 
	 WHERE A.COMP_CODE = #{COMP_CODE}
	   AND A.DIV_CODE = #{DIV_CODE}
	   AND A.TYPE = '1'
	   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
	   AND A.ITEM_CODE = #{ITEM_CODE}
		
		
	INSERT INTO L_BTR100T
			(
			  KEY_VALUE                          ---- 키값
			, OPR_FLAG                           ---- 구분자
			, COMP_CODE                          ---- 화면입력(법인)
			, DIV_CODE                           ---- 화면입력(사업장)
			, INOUT_NUM                          ---- 강제입력('')
			, INOUT_SEQ                          ---- 화면입력(순번)
			, INOUT_TYPE                         ---- 강제입력(수불타입)
			, INOUT_METH                         ---- 강제입력(수불방법)
			, CREATE_LOC                         ---- 강제입력(수불생성)
			, INOUT_TYPE_DETAIL                  ---- 강제입력(수불유형)
			, INOUT_CODE_TYPE                    ---- 강제입력(거래처구분)
			, INOUT_CODE                         ---- 화면입력(거래처코드)
			, INOUT_DATE                         ---- 강제입력(현재일자)
			, ITEM_CODE                          ---- 화면입력(품목코드)
			, ITEM_STATUS                        ---- 강제입력(품목상태)
			, WH_CODE                            ---- 화면입력(창고)
		--	, WH_CELL_CODE                       ---- 화면입력(CELL코드)
		--	, LOT_NO                             ---- 화면입력(LOT_NO)
			, INOUT_PRSN                         ---- 화면입력(입고담당-'PDA'고정)
			, ORDER_UNIT                         ---- 화면입력(입고단위)
			, TRNS_RATE                          ---- 화면입력(입수)
			, ORDER_UNIT_Q                       ---- 화면입력(구매단위수량)
			, ORDER_UNIT_P                       ---- 화면입력(구매단위단가)
			, ORDER_UNIT_O                       ---- 화면입력(금액)
			, ORDER_UNIT_FOR_P                   ---- 내부계산(재고금액)
			, INOUT_Q                            ---- 내부계산(재고단위수량)
			, INOUT_P                            ---- 내부계산(재고단위수량)
			, INOUT_I                            ---- 내부계산(재고금액)
			, INOUT_FOR_P                        ---- 내부계산(재고금액)
			, INOUT_FOR_O                        ---- 내부계산(재고금액)
			, ORDER_TYPE                         ---- 발주구분
			--, ORDER_NUM                          ---- 화면입력(발주번호)
			--, ORDER_SEQ                          ---- 화면입력(발주순번)
			, MONEY_UNIT                         ---- 화면입력(화폐단위)
			, EXCHG_RATE_O                       ---- 화면입력(환율)
			, ACCOUNT_YNC                        ---- 화면입력기표대상
			, INSPEC_NUM                         ---- 검사번호
			, INSPEC_SEQ                         ---- 검사순번
			--, RECEIPT_NUM      					 ---- 접수번호
			--, RECEIPT_SEQ                        ---- 접수순번
			, LC_NUM                             ---- LC번호
			, BL_NUM                             ---- B/L번호
			, BASIS_NUM                          ---- 근거번호
			, BASIS_SEQ                          ---- 근거순번
			, BILL_TYPE                          ---- 강제입력('*')
			, SALE_TYPE                          ---- 강제입력('*')
			, PRICE_YN                           ---- 강제입력('Y')
			, SALE_DIV_CODE                      ---- 강제입력('*')
			, SALE_CUSTOM_CODE                   ---- 강제입력('*')
			, SALE_C_YN                          ---- 강제입력('N')
			, INSERT_DB_USER                     ---- 화면입력(사용자)
			, INSERT_DB_TIME                   
			, UPDATE_DB_USER                     ---- 화면입력(사용자)
			, UPDATE_DB_TIME
			)VALUES(
				  #{KEY_VALUE}                              -- KEY_VALUE                  ---- PDA_Log(키값)
				, #{OPR_FLAG}                               -- OPR_FLAG                   ---- PDA_Log(구분자)
				, #{COMP_CODE}                              -- COMP_CODE                  ---- PDA_Log(법인)
				, #{DIV_CODE}                               -- DIV_CODE                   ---- PDA_Log(사업장)
				, ''                                        -- INOUT_NUM                  ---- 고정('')
				, #{INOUT_SEQ}                              -- INOUT_SEQ                  ---- PDA_Log(순번)
				, '1'                                       -- INOUT_TYPE                 ---- 고정(수불타입)	1 입고
				, '2'                                       -- INOUT_METH                 ---- 고정(수불방법)	1 정상 2예외
				, '2'                               		-- CREATE_LOC                 ---- 고정(수불생성)  2:자재
				, '99'                                      -- INOUT_TYPE_DETAIL          ---- 고정(수불유형)		10 구매입고  99기타입고
				, '4' 										-- INOUT_CODE_TYPE            ---- 고정(거래처구분)  4:거래처
				, #{CUSTOM_CODE}                            -- INOUT_CODE                 ---- PDA_Log(거래처코드)
				, #{INOUT_DATE}								-- INOUT_DATE                 ---- 고정(현재일자)
				, #{ITEM_CODE}                              -- ITEM_CODE                  ---- PDA_Log(품목코드)
				, '1'                                       -- ITEM_STATUS                ---- 고정(품목상태)		1 양품
				, #{WH_CODE}                                -- WH_CODE                    ---- PDA_Log(창고)
				--, WH_CELL_CODE                            -- WH_CELL_CODE               ---- PDA_Log(CELL코드)  		--없음
				--, LOT_NO                                  -- LOT_NO                     ---- PDA_Log(LOT_NO)			--없음	
				, #{INOUT_PRSN}                             -- INOUT_PRSN                 ---- PDA_Log(입고담당-'PDA'고정)
				, @ORDER_UNIT                             -- ORDER_UNIT                 ---- PDA_Log(입고단위)
				, 1						                    -- TRNS_RATE                  ---- PDA_Log(입수)
				, #{INOUT_Q}      							-- ORDER_UNIT_Q               ---- PDA_Log(구매단위수량)
				, @ITEM_P									-- ORDER_UNIT_P               ---- PDA_Log(구매단위단가 )
				, #{INOUT_Q} * @ITEM_P 				  	-- ORDER_UNIT_O               ---- PDA_Log(금액)
				, @ITEM_P                            		-- ORDER_UNIT_FOR_P               ---- PDA_Log(구매단위단가 )
				, #{INOUT_Q}								-- INOUT_Q                    ---- 내부계산(재고단위수량)
				, @ITEM_P									-- INOUT_P                    ---- 내부계산(재고단위수량)
				, #{INOUT_Q} * @ITEM_P					-- INOUT_I                    ---- 내부계산(재고금액)

				, @ITEM_P									-- INOUT_FOR_P
				, #{INOUT_Q} * @ITEM_P					-- INOUT_FOR_O

				, '1' 			                            -- ORDER_TYPE                 ---- 발주구분('1'-내수, '4'-외주)	--없음
				--, B.ORDER_NUM                             -- ORDER_NUM                  ---- 발주번호					--없음
				--, B.ORDER_SEQ                             -- ORDER_SEQ                  ---- 발주순번					--없음
				
				, (SELECT ISNULL(MONEY_UNIT,'KRW') FROM BCM100T WHERE COMP_CODE = #{COMP_CODE} AND CUSTOM_CODE = #{CUSTOM_CODE})          --  MONEY_UNIT                 ---  PDA_Log(화폐단위)
				
				, 1                            -- EXCHG_RATE_O               ---- PDA_Log(환율)
				
				,'Y'                                        -- ACCOUNT_YNC                ---- 기표대상
				, ''										-- INSPEC_NUM                 ---- 검사번호
				, 0											-- INSPEC_SEQ                 ---- 검사순번
			--	, ISNULL(E1.RECEIPT_NUM, '')                -- RECEIPT_NUM                 ---- 접수번호					--없음
			--	, ISNULL(E1.RECEIPT_SEQ, 0)                 -- RECEIPT_SEQ                 ---- 접수순번					--없음
				, ''										-- LC_NUM                     ---- LC번호                           
				, ''										-- BL_NUM                     ---- B/L번호
				, ''										-- BASIS_NUM                  ---- 근거번호
				, NULL										-- BASIS_SEQ                  ---- 근거순번
				,'*'                                        -- BILL_TYPE                  ---- 고정('*')
				,'*'                                        -- SALE_TYPE                  ---- 고정('*')
				,'Y'                                        -- PRICE_YN                   ---- 고정('Y')	--구매자재 진단가 'Y'
				,'*'                                        -- SALE_DIV_CODE              ---- 고정('*')
				,'*'                                        -- SALE_CUSTOM_CODE           ---- 고정('*')
				,'N'                                        -- SALE_C_YN                  ---- 고정('N')
				
				,#{S_USER_ID}                           
				,GETDATE()
				,#{S_USER_ID}                         
				,GETDATE()
	)
	
	</insert>
		  
<update id="pdaHspService.spReceiving" parameterType="Map" statementType="CALLABLE">
		
		{call SP_MATRL_Receiving (
            #{CreateType,  mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{KeyValue,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{LangCode,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{InOutNum,    mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
        	#{ErrorDesc,   mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>		

	
	
		<select id="pdaHspService.searchListPdp100ukrvMain" parameterType="Map" resultType="rMap">
SELECT 
	FR_TIME
	,TO_TIME
	,WORKER
	,CHECK_DESC
 FROM PMR800T WITH (NOLOCK)
 WHERE COMP_CODE = #{COMP_CODE}
   AND DIV_CODE = #{DIV_CODE}
   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
   AND CHECK_DATE = CONVERT(CHAR(8),CONVERT(DATETIME,#{CHECK_DATE}) , 112)
 ORDER BY CHECK_DATE, NEXT_DAY_FLAG, FR_TIME   
	</select>
	
	<insert id="pdaHspService.insertPdp100ukrv" parameterType="Map">
		INSERT INTO PMR800T(
			COMP_CODE,
			DIV_CODE,
			WORK_SHOP_CODE,
			CHECK_DATE,
			FR_TIME,
			TO_TIME,
			WORKER,
			CHECK_DESC,
			NEXT_DAY_FLAG,
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)VALUES(
			#{COMP_CODE},
			#{DIV_CODE},
			#{WORK_SHOP_CODE},
			CONVERT(CHAR(8),CONVERT(DATETIME,#{CHECK_DATE}) , 112),
			#{FR_TIME},
			#{TO_TIME},
			#{WORKER},
			#{CHECK_DESC},
			#{NEXT_DAY_FLAG},
			#{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE()
		)
		
	</insert>
<delete id="pdaHspService.deletePdp100ukrv" parameterType="Map">
	DELETE PMR800T
	 WHERE COMP_CODE = #{COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
	   AND CHECK_DATE = CONVERT(CHAR(8),CONVERT(DATETIME,#{CHECK_DATE}) , 112)
	   AND FR_TIME = #{FR_TIME}
	   AND TO_TIME = #{TO_TIME}
</delete>


	
<select id="pdaHspService.searchPdp200ukrvMain" parameterType="Map" resultType="rMap">

 DECLARE  @CALC_TYPE             NVARCHAR(01)        -- 생산잔량 계산타입

SELECT TOP 1
	@CALC_TYPE = ISNULL(SUB_CODE,'A')
	FROM BSA100T
	WHERE COMP_CODE = #{COMP_CODE}
	AND MAIN_CODE = 'P517'
	AND REF_CODE1 = 'Y'
SELECT 
	A.COMP_CODE
	,A.DIV_CODE
	,A.PROG_WORK_CODE
	,A.WORK_SHOP_CODE
	, R2.TREE_NAME AS WORK_SHOP_NAME--작업장명
	,A.ITEM_CODE
	,R1.ITEM_NAME
	,R1.SPEC
	,R1.STOCK_UNIT
	,R3.WH_CODE
	,A.LOT_NO
	,A.WKORD_Q			--작업지시량
	,A.WKORD_NUM
	,A.PRODT_START_DATE
	,A.PRODT_END_DATE

	,(
	CASE WHEN ISNULL(@CALC_TYPE,'A') = 'A' THEN
				uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
			WHEN ISNULL(@CALC_TYPE,'A') = 'B' THEN
				uniLITE.fnFormat(A.comp_code, A.wkord_q - A.work_q, 'P_FSET_QS')
		ELSE uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS')
	END
	) AS JAN_Q			--잔량
	,(
		SELECT 
			ISNULL(SUM(S1.WORK_Q),0) 
		FROM PMR100T S1 WITH(NOLOCK)
		WHERE S1.COMP_CODE = A.COMP_CODE
		AND S1.DIV_CODE = A.DIV_CODE
		AND S1.PROG_WORK_CODE = A.PROG_WORK_CODE
		AND S1.WKORD_NUM = A.WKORD_NUM
	)	AS SUM_WORK_Q		--누적량



 FROM PMP100T A WITH(NOLOCK) 
 LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								  AND R1.ITEM_CODE = A.ITEM_CODE
 LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								  AND R2.TREE_CODE = A.WORK_SHOP_CODE
 LEFT JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
							 	  AND R3.DIV_CODE = A.DIV_CODE
								  AND R3.ITEM_CODE = A.ITEM_CODE								  
WHERE A.COMP_CODE = #{COMP_CODE}
  AND A.DIV_CODE = #{DIV_CODE}
  AND A.LINE_END_YN = 'Y'
  AND A.WKORD_NUM = #{WKORD_NUM}


</select>

	
<select id="pdaHspService.searchPdp200ukrvLogCheck" parameterType="Map" resultType="rMap">
SELECT COMP_CODE
FROM L_PDA100T_HS
WHERE COMP_CODE = #{COMP_CODE} 
  AND DIV_CODE = #{DIV_CODE}
  AND WKORD_NUM = #{WKORD_NUM}
  AND ITEM_CODE = #{ITEM_CODE}
  AND LOT_NO = #{LOT_NO}
  AND LOT_SN = #{LOT_SN}
</select>

<update id="pdaHspService.spAutoNumPdp200ukrv" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

<insert id="pdaHspService.insertPdp200ukrv_log" parameterType="Map">
	
	 INSERT INTO L_PDA100T_HS
	      ( COMP_CODE
		  , DIV_CODE
	      , WKORD_NUM
		  , ITEM_CODE
	      , LOT_NO
	      , LOT_SN
	      , GOOD_WORK_Q
	      , APPLY_YN
	      , INSERT_DB_USER
		  , INSERT_DB_TIME
	      , UPDATE_DB_USER
		  , UPDATE_DB_TIME
		  )
	 VALUES
	      ( #{COMP_CODE}
	      , #{DIV_CODE}
	      , #{WKORD_NUM}
	      , #{ITEM_CODE}
	      , #{LOT_NO}
	      , #{LOT_SN}
	      , #{GOOD_PRODT_Q}
	      , 'N'
	      
	      , #{S_USER_ID}
	      , GETDATE()
	      , #{S_USER_ID}
	      , GETDATE()
	      )
	</insert>
<insert id="pdaHspService.insertPdp200ukrv" parameterType="Map">
	
	 INSERT INTO PMR110T
	      ( COMP_CODE
		  , DIV_CODE
	      , PRODT_NUM
		  , WORK_SHOP_CODE
	      , WKORD_NUM
		  , ITEM_CODE
	      , PRODT_DATE
		  , PRODT_Q
	      , GOOD_PRODT_Q
		  , BAD_PRODT_Q
	      , CONTROL_STATUS
		  , MAN_HOUR
	      , LOT_NO
	      , INSERT_DB_USER
		  , INSERT_DB_TIME
	      , UPDATE_DB_USER
		  , UPDATE_DB_TIME
		  , FR_TIME
		  , TO_TIME
		  )
	 SELECT 
	        #{COMP_CODE}
	      , #{DIV_CODE}
	      , #{PRODT_NUM}
	      , #{WORK_SHOP_CODE}
	      , #{WKORD_NUM}
	      , #{ITEM_CODE}
		  , CASE WHEN DATEPART(HOUR, GETDATE()) &gt;= 8 AND DATEPART(HOUR, GETDATE()) &lt;  0 THEN CONVERT(VARCHAR(8), GETDATE(), 112)
						WHEN DATEPART(HOUR, GETDATE()) &gt;= 0 AND DATEPART(HOUR, GETDATE()) &lt; 8 THEN CONVERT(VARCHAR(8), DATEADD(DAY, -1, GETDATE()), 112)
						ELSE CONVERT(VARCHAR(8), GETDATE(), 112)
			END	 AS PRODT_DATE
	      , #{PRODT_Q}
	      , #{GOOD_PRODT_Q}
	      , #{BAD_PRODT_Q}
	      , #{CONTROL_STATUS}
	      , #{MAN_HOUR}
	      , #{LOT_NO}
	      , #{S_USER_ID}
	      , GETDATE()
	      , #{S_USER_ID}
	      , GETDATE()
		  , ISNULL(( SELECT CONVERT(VARCHAR(8), MAX(INSERT_DB_TIME), 8)
					  FROM PMR100T WITH (NOLOCK)
					  WHERE COMP_CODE=#{COMP_CODE}
					  AND DIV_CODE=#{DIV_CODE}
					  AND WKORD_NUM=#{WKORD_NUM}
					  AND UPDATE_DB_USER='PDA' ), '08:00:00')
		  , (CONVERT(VARCHAR(8), GETDATE(), 8)
		  )		  
	      
	</insert>


<update id="pdaHspService.spCallPdp200ukrv" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRODT_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRODT_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{S_USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC         ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
    
	<select id="pdaHspService.selectWkordCheck" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			
		    DECLARE     @COMP_CODE          NVARCHAR(08)        -- (필수) 법인코드
		              , @DIV_CODE           NVARCHAR(08)        -- (필수) 사업장
		              , @WKORD_NUM          NVARCHAR(20)        -- (필수) 작업지시번호
		              , @USER_ID            NVARCHAR(100)        -- (필수) 사용자
					  ,	@STATUS             NVARCHAR(01)    -- (필수) 진행상태
					  
			SET @COMP_CODE = #{COMP_CODE}
		    SET @USER_ID = #{S_USER_ID}
			SET @DIV_CODE = #{DIV_CODE}
			SET @WKORD_NUM = #{WKORD_NUM}
			SET @STATUS         = ''
			
			SELECT 
			       A.COMP_CODE,
			       A.REF_WKORD_NUM AS WKORD_NUM,
			       SUM(uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
			                                  - ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS'))   AS NOT_OUTSTOCK_Q     ----잔량
			FROM               PMP300T      A  WITH (NOLOCK)
			WHERE A.COMP_CODE  = @COMP_CODE
			  AND A.DIV_CODE   = @DIV_CODE
			  AND A.REF_WKORD_NUM = @WKORD_NUM
			  AND A.AGREE_STATUS   = '2' -- 승인내역만 조회되도록 추가
			
			GROUP BY A.COMP_CODE, A.REF_WKORD_NUM
			
			SET ARITHABORT OFF
			SET NOCOUNT OFF
			
		END		
	</select>
<select id="pdaHspService.searchListPds200ukrvMain" parameterType="Map" resultType="rMap">
	SELECT 
		X.ISSUE_REQ_NUM		as issueReqNum
		,X.ISSUE_REQ_SEQ	as issueReqSeq
		, A.CUSTOM_CODE		as customCode
		--, R2.CUSTOM_NAME	as customName
		, R2.CUSTOM_NAME + CASE WHEN ISNULL(C.DEST_FINAL,'') != '' THEN '/'+ ISNULL(C.DEST_FINAL,'') ELSE '' END AS customName
		, C.BOOKING_NUM 	as bookingNum--부킹번호
		, ISNULL(D.CONTAINER_NO,'') AS containerNo
		, ISNULL(D.SEAL_NO,'') AS sealNo
		, B.ITEM_CODE	as itemCode
		, M2.ITEM_NAME	as itemName
		, M2.SPEC	as spec
		, B.ORDER_Q		as orderQ--수주량

		,(SELECT ISNULL(SUM(S1.OUT_Q),0) FROM L_PDA200T_HS S1 WITH(NOLOCK)
										WHERE S1.COMP_CODE = X.COMP_CODE
  									   AND S1.DIV_CODE = X.DIV_CODE
  									   AND S1.ISSUE_REQ_NUM = X.ISSUE_REQ_NUM
  									   AND S1.ISSUE_REQ_SEQ = X.ISSUE_REQ_SEQ
  									   AND S1.CUSTOM_CODE = A.CUSTOM_CODE
  									   AND S1.ITEM_CODE = B.ITEM_CODE
  									   AND S1.APPLY_YN = 'N'
	    ) AS pdaOutQ		--작업수량(PDA)	(PDA출고량)
		
		, ISNULL(D.INOUT_Q,0) AS erpInoutQ	--ERP출고량
		, B.ORDER_Q - ISNULL(D.INOUT_Q,0) AS remainQ	--잔량
		
		,R1.WH_CODE	as whCode
		
		,B.ORDER_NUM as orderNum
		,B.SER_NO	as orderSeq
		
		FROM SRQ100T X WITH (NOLOCK)
  INNER JOIN SOF100T A WITH (NOLOCK) ON A.COMP_CODE = X.COMP_CODE 
  									AND A.DIV_CODE = X.DIV_CODE 
  									AND A.ORDER_NUM = X.ORDER_NUM
  INNER JOIN SOF110T B WITH (NOLOCK) ON B.COMP_CODE = X.COMP_CODE 
  									AND B.DIV_CODE = X.DIV_CODE 
  									AND B.ORDER_NUM = X.ORDER_NUM 
  									AND B.SER_NO = X.SER_NO
   LEFT JOIN TEA100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE 
   									AND C.DIV_CODE = A.DIV_CODE 
   									AND C.ORDER_NUM = A.ORDER_NUM
  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE 
  									 AND M1.SUB_CODE = A.ORDER_TYPE 
  									 AND M1.MAIN_CODE = 'S002'
  INNER JOIN BPR100T M2 WITH (NOLOCK) ON M2.COMP_CODE = X.COMP_CODE 
  								     AND M2.ITEM_CODE = X.ITEM_CODE
  LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = X.COMP_CODE
  								   AND R1.DIV_CODE = X.DIV_CODE
  								   AND R1.ITEM_CODE = X.ITEM_CODE
LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								 AND R2.CUSTOM_CODE = A.CUSTOM_CODE
   LEFT JOIN (
		SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, CONTAINER_NO, SEAL_NO, SUM(INOUT_Q) INOUT_Q
		  FROM BTR100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND INOUT_TYPE = '2'
		   AND CREATE_LOC = '1'
	  GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, CONTAINER_NO, SEAL_NO
	) D ON D.COMP_CODE = X.COMP_CODE 
	   AND D.DIV_CODE = X.DIV_CODE 
	   AND D.ORDER_NUM = X.ORDER_NUM 
	   AND D.ORDER_SEQ = X.SER_NO
	   
	  WHERE X.COMP_CODE = #{COMP_CODE}
		AND X.DIV_CODE = #{DIV_CODE}
		AND X.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
		AND X.CUSTOM_CODE = #{CUSTOM_CODE}

</select>

<select id="pdaHspService.searchListPds200ukrvSub1" parameterType="Map" resultType="rMap">
	SELECT 
	A.COMP_CODE
	,A.DIV_CODE
	,A.ISSUE_REQ_NUM
	,A.ISSUE_REQ_SEQ
	,A.CUSTOM_CODE
	,A.ITEM_CODE
	,A.LOT_NO
	,A.LOT_SN
	,A.OUT_Q
	,A.WH_CODE
	,R1.TREE_NAME AS WH_NAME
	
	
	 FROM L_PDA200T_HS A WITH(NOLOCK)
LEFT JOIN BSA220T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								 AND R1.TYPE_LEVEL = A.DIV_CODE
								 AND R1.TREE_CODE = A.WH_CODE
WHERE A.COMP_CODE = #{COMP_CODE} 
  AND A.DIV_CODE =  #{DIV_CODE}
  AND A.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND A.ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND A.APPLY_YN = 'N'
		
</select>

<select id="pdaHspService.searchListPds200ukrvSub2" parameterType="Map" resultType="rMap">
SELECT 
	
	 RIGHT(uniLITE.fnGetUserDateComp(A.COMP_CODE, CASE WHEN M1.REF_CODE2 = '2' THEN C.DATE_SHIPPING ELSE B.DVRY_DATE END),8)  AS DVRY_DATE		--선적일(내수)
	,A.CUSTOM_CODE
	, CASE WHEN  #{NS_GUBUN} = '1' THEN ISNULL((SELECT TOP 1 DVRY_CUST_NM FROM SCM100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND CUSTOM_CODE =A.CUSTOM_CODE AND CONVERT(VARCHAR,DVRY_CUST_SEQ)=B.DVRY_CUST_CD),'') +'/'+ R1.CUSTOM_NAME
		   ELSE  ISNULL(C.DEST_FINAL,'') + '/'+ LEFT(R1.CUSTOM_NAME,10) + (CASE WHEN LEN(R1.CUSTOM_NAME) &gt; 11 THEN '..' ELSE '' END) 
	  END AS CUSTOM_NAME
	, C.BOOKING_NUM --부킹번호
	, B.ITEM_CODE
	,M2.ITEM_NAME
	,X.ISSUE_REQ_QTY
	,X.ORDER_UNIT
	,X.ISSUE_REQ_NUM

FROM SRQ100T X WITH (NOLOCK)
  INNER JOIN SOF100T A WITH (NOLOCK) ON A.COMP_CODE = X.COMP_CODE 
  									AND A.DIV_CODE = X.DIV_CODE 
  									AND A.ORDER_NUM = X.ORDER_NUM
  INNER JOIN SOF110T B WITH (NOLOCK) ON B.COMP_CODE = X.COMP_CODE 
  									AND B.DIV_CODE = X.DIV_CODE 
  									AND B.ORDER_NUM = X.ORDER_NUM 
  									AND B.SER_NO = X.SER_NO
   LEFT JOIN TEA100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE 
   									AND C.DIV_CODE = A.DIV_CODE 
   									AND C.ORDER_NUM = A.ORDER_NUM
  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE 
  									 AND M1.SUB_CODE = A.ORDER_TYPE 
  									 AND M1.MAIN_CODE = 'S002'
  INNER JOIN BPR100T M2 WITH (NOLOCK) ON M2.COMP_CODE = X.COMP_CODE 
  								     AND M2.ITEM_CODE = X.ITEM_CODE
   LEFT JOIN BCM100T R1 WITH (NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
   					   				 AND R1.CUSTOM_CODE= A.CUSTOM_CODE
	INNER JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = X.COMP_CODE
									 AND R2.DIV_CODE = X.DIV_CODE
									 AND R2.ITEM_CODE = X.ITEM_CODE
	LEFT JOIN BSA230T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
									 AND R3.TYPE_LEVEL = R2.DIV_CODE
									 AND R3.TREE_CODE = R2.WORK_SHOP_CODE
	LEFT JOIN (
			SELECT COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, SUM(INOUT_Q) AS INOUT_Q
			FROM BTR100T WITH (NOLOCK)
			WHERE COMP_CODE=#{COMP_CODE}
			AND DIV_CODE= #{DIV_CODE}
			AND INOUT_TYPE='2'
			AND INOUT_CODE_TYPE='4'
			AND ISNULL(ISSUE_REQ_NUM,'') != ''
			GROUP BY COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ISSUE_REQ_SEQ
	 
	) R4 ON R4.COMP_CODE=X.COMP_CODE AND R4.DIV_CODE=X.DIV_CODE AND R4.ISSUE_REQ_NUM=X.ISSUE_REQ_NUM AND R4.ISSUE_REQ_SEQ=X.ISSUE_REQ_SEQ									 
WHERE X.COMP_CODE = #{COMP_CODE}
AND X.DIV_CODE = #{DIV_CODE}
AND M1.REF_CODE2 = #{NS_GUBUN} --NS_GUBUN		--1내수, 2수출
AND CASE WHEN #{DVRY_M} = '' THEN CONVERT(VARCHAR(6), GETDATE(), 112) ELSE #{DVRY_M} END = (CASE WHEN M1.REF_CODE2 = '2' THEN LEFT(C.DATE_SHIPPING,6) ELSE LEFT(B.DVRY_DATE,6) END)--선적월 DVRY_M
AND R3.GROUP_CD = #{GROUP_CODE}
AND X.ISSUE_REQ_QTY - ISNULL(R4.INOUT_Q,0) &gt; 0
ORDER BY ISNULL(C.DATE_SHIPPING,B.DVRY_DATE)
	
</select>


<select id="pdaHspService.searchPds200ukrvSub1WorkTot" parameterType="Map" resultType="rMap">
   
	SELECT 
		  ISNULL(MAX(A.ISSUE_REQ_QTY),0) AS ISSUE_REQ_QTY
		, ISNULL(MAX(C.INOUT_Q),0) + ISNULL(SUM(OUT_Q),0) AS PDA_WORK_TOT_Q
		, (ISNULL(MAX(A.ISSUE_REQ_QTY),0) * (1+ISNULL(MAX(D.EXCESS_RATE),0)/100.0)) - ISNULL(SUM(B.OUT_Q),0) AS CHECK_Q
	  FROM SRQ100T A WITH(NOLOCK)
 LEFT JOIN L_PDA200T_HS B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									  AND B.DIV_CODE = A.DIV_CODE
									  AND B.ISSUE_REQ_NUM = A.ISSUE_REQ_NUM
									  AND B.ISSUE_REQ_SEQ = A.ISSUE_REQ_SEQ
									  AND B.APPLY_YN	  = 'N'
 LEFT JOIN (
		SELECT COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, SUM(INOUT_Q) AS INOUT_Q
		FROM BTR100T WITH (NOLOCK)
		WHERE COMP_CODE=#{COMP_CODE}
		AND DIV_CODE=#{DIV_CODE}
		AND INOUT_TYPE='2'
		AND CREATE_LOC = '1'
		AND ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
		AND ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}			
		GROUP BY COMP_CODE, DIV_CODE, ISSUE_REQ_NUM, ISSUE_REQ_SEQ
 ) C ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.ISSUE_REQ_NUM=C.ISSUE_REQ_NUM AND A.ISSUE_REQ_SEQ=C.ISSUE_REQ_SEQ
 LEFT JOIN BPR100T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.ITEM_CODE=D.ITEM_CODE									  
	WHERE A.COMP_CODE = #{COMP_CODE}
		AND A.DIV_CODE = #{DIV_CODE}
		AND A.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
		AND A.ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}	   
	   
</select>

<select id="pdaHspService.searchPds200ukrvLogCheck" parameterType="Map" resultType="rMap">
SELECT COMP_CODE
FROM L_PDA200T_HS
WHERE COMP_CODE = #{COMP_CODE} 
  AND DIV_CODE = #{DIV_CODE}
  AND ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND CUSTOM_CODE = #{CUSTOM_CODE}
  AND ITEM_CODE = #{ITEM_CODE}
  AND LOT_NO = #{LOT_NO}
  AND LOT_SN = #{LOT_SN}
 -- AND APPLY_YN = 'N'
</select>

<insert id="pdaHspService.insertPds200ukrv_log" parameterType="Map">


	INSERT INTO L_PDA200T_HS(
		 COMP_CODE
		,DIV_CODE
		,ISSUE_REQ_NUM
		,ISSUE_REQ_SEQ
		,CUSTOM_CODE
		,ITEM_CODE
		,LOT_NO
		,LOT_SN
		,OUT_Q
		,WH_CODE
		,APPLY_YN
		,INSERT_DB_USER
		,INSERT_DB_TIME
		,UPDATE_DB_USER
		,UPDATE_DB_TIME
	
	)VALUES(
		#{COMP_CODE}
		,#{DIV_CODE}
		,#{ISSUE_REQ_NUM}
		,#{ISSUE_REQ_SEQ}
		,#{CUSTOM_CODE}
		,#{ITEM_CODE}
		,#{LOT_NO}
		,#{LOT_SN}
		,#{OUT_Q}
		,#{WH_CODE}
		,#{APPLY_YN}
		,#{S_USER_ID}
		,GETDATE()
		,#{S_USER_ID}
		,GETDATE()
	)
</insert>	

<delete id="pdaHspService.deletePds200ukrv_log_all" parameterType="Map">
DELETE L_PDA200T_HS
WHERE COMP_CODE = #{COMP_CODE}
  AND DIV_CODE = #{DIV_CODE}
  AND ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND CUSTOM_CODE = #{CUSTOM_CODE}
  AND ITEM_CODE = #{ITEM_CODE}
  AND APPLY_YN = 'N'
</delete>
<delete id="pdaHspService.deletePds200ukrv_log" parameterType="Map">
DELETE L_PDA200T_HS
WHERE COMP_CODE = #{COMP_CODE}
  AND DIV_CODE = #{DIV_CODE}
  AND ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND CUSTOM_CODE = #{CUSTOM_CODE}
  AND ITEM_CODE = #{ITEM_CODE}
  AND LOT_NO = #{LOT_NO}
  AND LOT_SN = #{LOT_SN}
  AND APPLY_YN = 'N'
</delete>
<insert id="pdaHspService.insertPds200ukrv" parameterType="Map">
INSERT INTO L_BTR100T
		(
		  KEY_VALUE             
		, OPR_FLAG              
		, COMP_CODE             
		, DIV_CODE              
		, INOUT_NUM             
		, INOUT_SEQ             
		, INOUT_TYPE            
		, INOUT_METH            
		, CREATE_LOC            
		, INOUT_TYPE_DETAIL     
		, INOUT_CODE_TYPE       
		, INOUT_CODE            
		, INOUT_DATE            
		, ITEM_CODE             
		, ITEM_STATUS           
		, WH_CODE               
		, LOT_NO                
		, INOUT_PRSN            
		, ORDER_UNIT            
		, TRNS_RATE             
		, ORDER_UNIT_Q          
		, ORDER_UNIT_P          
		, ORDER_UNIT_O          
		, ORDER_UNIT_FOR_P      
		, INOUT_Q               
		, INOUT_P               
		, INOUT_I               
		, INOUT_FOR_P           
		, INOUT_FOR_O           
		, ORDER_TYPE            
		, MONEY_UNIT            
		, EXCHG_RATE_O          
		, ACCOUNT_YNC           
		, INSPEC_NUM            
		, INSPEC_SEQ          
		, LC_NUM                
		, BL_NUM                
		, BASIS_NUM             
		, BASIS_SEQ             
		, BILL_TYPE             
		, SALE_TYPE             
		, PRICE_YN              
		, SALE_DIV_CODE         
		, SALE_CUSTOM_CODE      
		, SALE_C_YN             
		, INSERT_DB_USER        
		, INSERT_DB_TIME        
		, UPDATE_DB_USER        
		, UPDATE_DB_TIME
		, ORDER_NUM
		, ORDER_SEQ
		, ISSUE_REQ_NUM
		, ISSUE_REQ_SEQ
		)
SELECT 
	  #{KEY_VALUE} 																														--KEY_VALUE          								
	, #{OPR_FLAG}                                                                                                                       --OPR_FLAG           
	, A.COMP_CODE                                                                                                                       --COMP_CODE          
	, A.DIV_CODE                                                                                                                        --DIV_CODE           
	, ''                                                                                                                                --INOUT_NUM          
	, ISNULL((SELECT ISNULL(MAX(INOUT_SEQ),0) FROM L_BTR100T WITH (NOLOCK) WHERE KEY_VALUE=#{KEY_VALUE}),0) + ROW_NUMBER() OVER(ORDER BY A.LOT_NO)			--A.LOT_SN                                                                                                                       --INOUT_SEQ          
	, '2'                                       -- INOUT_TYPE                 ---- 고정(수불타입)	1 출고                              --INOUT_TYPE         
	, '1'                                       -- INOUT_METH                 ---- 고정(수불방법)	1 정상 2예외                        --INOUT_METH         
	, '1'                               		-- CREATE_LOC                 ---- 고정(수불생성)  1:영업                               --CREATE_LOC         
	, '10'                                      -- INOUT_TYPE_DETAIL          ---- 고정(수불유형)		 99예외출고                     --INOUT_TYPE_DETAIL  
	, '4' 										-- INOUT_CODE_TYPE            ---- 고정(거래처구분)  4:거래처                           --INOUT_CODE_TYPE    
	, A.CUSTOM_CODE                                                                                                                     --INOUT_CODE         
	, #{INOUT_DATE}	                                                                                                                    --INOUT_DATE         
	, A.ITEM_CODE                                                                                                                       --ITEM_CODE          
	, '1'                                                                                                                               --ITEM_STATUS        
	, MAX(A.WH_CODE)                                                                                                                    --WH_CODE            
	,A.LOT_NO                                                                                                                           --LOT_NO             
	, #{INOUT_PRSN}                                                                                                                     --INOUT_PRSN         
	, MAX(C.ORDER_UNIT)	-- 단위                                                                                                         --ORDER_UNIT         
	, MAX(C.TRANS_RATE)						                                                                                                --TRNS_RATE          
	, SUM(A.OUT_Q)      		                                                                                                        --ORDER_UNIT_Q       
	, MAX(C.ORDER_P)			                                                                                                    --ORDER_UNIT_P       
	, SUM(A.OUT_Q)  * MAX(C.ORDER_P)	                                                                                            --ORDER_UNIT_O       
	, MAX(C.ORDER_P)	                                                                                                            --ORDER_UNIT_FOR_P   
	, SUM(A.OUT_Q)		                                                                                                                --INOUT_Q            
	, MAX(C.ORDER_P/C.TRANS_RATE*D.EXCHG_RATE_O)	                                                                                                            --INOUT_P            
	, SUM(A.OUT_Q)  * MAX(C.ORDER_P)	* MAX(D.EXCHG_RATE_O)                                                                                            --INOUT_I            
	, MAX(C.ORDER_P)	                                                                                                            --INOUT_FOR_P        
	, SUM(A.OUT_Q)  * MAX(C.ORDER_P)	                                                                                            --INOUT_FOR_O        
	, '1' 	                                                                                                                            --ORDER_TYPE         
	, MAX(ISNULL(D.MONEY_UNIT,'KRW'))         --  MONEY_UNIT                 ---  PDA_Log(화폐단위)                                    --MONEY_UNIT         
	,1                                                                                                                                  --EXCHG_RATE_O       
	,'Y'                                                                                                                                --ACCOUNT_YNC        
	, ''				                                                                                                                --INSPEC_NUM         
	, 0					                                                                                                                --INSPEC_SEQ         
	, ''				                                                                                                                --LC_NUM             
	, ''				                                                                                                                --BL_NUM             
	, ''				                                                                                                                --BASIS_NUM          
	, NULL				                                                                                                                --BASIS_SEQ          
	, MAX(D.BILL_TYPE)            				--				 BILL_TYPE                                                              --BILL_TYPE          
	, MAX(D.ORDER_TYPE)                           --				 SALE_TYPE                                                          --SALE_TYPE          
	,'2'                            --				 PRICE_YN               --영업 진단가 '2'                                                            --PRICE_YN           
	, A.DIV_CODE                            --				 SALE_DIV_CODE                                                              --SALE_DIV_CODE      
	, MAX(C.SALE_CUST_CD)                            --				 SALE_CUSTOM_CODE                                                                   --SALE_CUSTOM_CODE   
	,'N'                                                                                                                                --SALE_C_YN          
	,#{S_USER_ID}                                                                                                                       --INSERT_DB_USER     
	,GETDATE()                                                                                                                          --INSERT_DB_TIME     
	,#{S_USER_ID}                                                                                                                       --UPDATE_DB_USER     
	,GETDATE()                                                                                                                          --UPDATE_DB_TIME
	,#{ORDER_NUM}                                                                                                                       --ORDER_NUM
	,#{ORDER_SEQ}                                                                                                                       --ORDER_SEQ
	,#{ISSUE_REQ_NUM}                                                                                                                   --ISSUE_REQ_NUM
	,#{ISSUE_REQ_SEQ}	                                                                                                                --ISSUE_REQ_SEQ
		FROM L_PDA200T_HS A WITH(NOLOCK)
	LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									 AND R1.CUSTOM_CODE = A.CUSTOM_CODE
	LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.ITEM_CODE = A.ITEM_CODE
									 
	LEFT JOIN SRQ100T B WITH (NOLOCK) ON B.COMP_CODE=A.COMP_CODE AND B.DIV_CODE=A.DIV_CODE AND B.ISSUE_REQ_NUM=A.ISSUE_REQ_NUM AND B.ISSUE_REQ_SEQ=A.ISSUE_REQ_SEQ
	LEFT JOIN SOF110T C WITH (NOLOCK) ON C.COMP_CODE=B.COMP_CODE AND C.DIV_CODE=B.DIV_CODE AND C.ORDER_NUM=B.ORDER_NUM AND C.SER_NO=B.SER_NO
	LEFT JOIN SOF100T D WITH (NOLOCK) ON D.COMP_CODE=C.COMP_CODE AND D.DIV_CODE=C.DIV_CODE AND D.ORDER_NUM=C.ORDER_NUM
WHERE A.COMP_CODE = #{COMP_CODE}
  AND A.DIV_CODE = #{DIV_CODE}
  AND A.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND A.ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND A.CUSTOM_CODE = #{CUSTOM_CODE}
  AND A.ITEM_CODE = #{ITEM_CODE}
  AND A.APPLY_YN = 'N'
  
  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ,A.CUSTOM_CODE, A.ITEM_CODE, A.LOT_NO
  
</insert>	
<update id="pdaHspService.updatePds200ukrvLog" parameterType="Map">
	UPDATE L_PDA200T_HS 
	   SET APPLY_YN = 'Y'
	 WHERE COMP_CODE = #{COMP_CODE}
  AND DIV_CODE = #{DIV_CODE}
  AND ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
  AND ISSUE_REQ_SEQ = #{ISSUE_REQ_SEQ}
  AND CUSTOM_CODE = #{CUSTOM_CODE}
  AND ITEM_CODE = #{ITEM_CODE}
  AND APPLY_YN = 'N'
</update>

	<update id="pdaHspService.spCallPds200ukrv" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_STR103UKR (
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{SalePrsnChk	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
	
	
	<select id="pdaHspService.savePdv200ukrv" parameterType="Map" resultType="rMap">
BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE        @CHECK_FLAG       NVARCHAR(01)        -- (필수) Check Flag (N: New, D: Delete, U: Update)
                         , @COMP_CODE        NVARCHAR(08)        -- (필수) 법인코드
                         , @INOUT_DATE       NVARCHAR(08)        -- (필수) 대체일
                         , @DIV_CODE         NVARCHAR(08)        -- (필수) 대체입고 사업장코드
                         , @WH_CODE          NVARCHAR(08)        -- (필수) 대체입고 창고코드
                         , @WH_CELL_CODE     NVARCHAR(20)        -- (필수) 대체입고 CELL창고코드
                         , @ITEM_CODE        NVARCHAR(20)        -- (필수) 대체입고 품목코드
                         , @INOUT_P          NUMERIC(18, 6)      -- (필수) 대체입고 단가
                         , @GOOD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체입고 양품대체
                         , @BAD_STOCK_Q      NUMERIC(18, 6)      -- (필수) 대체입고 불량대체
                         , @INOUT_Q          NUMERIC(18, 6)      -- (필수) 대체입고 수량
                         , @ITEM_STATUS      NVARCHAR(1)         -- (필수) 대체입고 재고유형
                         , @INOUT_I          NUMERIC(18, 6)      -- (필수) 대체입고 재고금액
                         , @GOOD_INOUT_I     NUMERIC(18, 6)      -- (필수) 대체입고 양품 재고금액
                         , @BAD_INOUT_I      NUMERIC(18, 6)      -- (필수) 대체입고 불량 재고금액
                         , @LOT_NO           NVARCHAR(20)        -- (필수) 대체입고 LOT NO.
                         , @INOUT_NUM        NVARCHAR(20)        -- (필수) 대체입고 수불번호
                         , @INOUT_SEQ        NUMERIC(4, 0)       -- (필수) 대체입고 수불순번
                         , @INOUT_TYPE       NVARCHAR(02)        -- (필수) 대체입고 수불유형
                         , @ODIV_CODE        NVARCHAR(08)        -- (필수) 대체출고 사업장코드
                         , @OWH_CODE         NVARCHAR(08)        -- (필수) 대체출고 창고코드
                         , @OWH_CELL_CODE    NVARCHAR(20)        -- (필수) 대체출고 CELL창고코드
                         , @OITEM_CODE       NVARCHAR(20)        -- (필수) 대체출고 품목코드
                         , @OINOUT_P         NUMERIC(18, 6)      -- (필수) 대체출고 단가
                         , @OGOOD_STOCK_Q    NUMERIC(18, 6)      -- (필수) 대체출고 양품대체
                         , @OBAD_STOCK_Q     NUMERIC(18, 6)      -- (필수) 대체출고 불량대체
                         , @OINOUT_Q         NUMERIC(18, 6)      -- (필수) 대체출고 수량
                         , @OINOUT_I         NUMERIC(18, 6)      -- (필수) 대체출고 재고금액
                         , @OLOT_NO          NVARCHAR(20)        -- (필수) 대체출고 LOT NO.
                         , @USER_ID          NVARCHAR(100)        -- (필수) 사용자 ID
                         , @INOUT_PRSN       NVARCHAR(10)        -- (필수) 수불담당
						 , @MAKE_DATE        NVARCHAR(08)        -- 제조일자
                         , @MAKE_EXP_DATE    NVARCHAR(08)        -- 유통기한


            SET @CHECK_FLAG    = ISNULL(@CHECK_FLAG,	#{CHECK_FLAG})
            SET @COMP_CODE     = ISNULL(@COMP_CODE,   	#{COMP_CODE})
            SET @INOUT_DATE    = ISNULL(@INOUT_DATE,  	#{REPLACE_DATE})

            SET @DIV_CODE      = ISNULL(@DIV_CODE,    	#{DIV_CODE})
            SET @WH_CODE       = ''
            SET @WH_CELL_CODE  = ''
            SET @ITEM_CODE     = ISNULL(@ITEM_CODE,   	#{REPLACE_ITEM_CODE})
            SET @GOOD_STOCK_Q  = ISNULL(@GOOD_STOCK_Q,  #{REPLACE_Q})
            SET @BAD_STOCK_Q   = 0
            SET @INOUT_P       = ISNULL(@INOUT_P,       0)
            SET @INOUT_Q       = @GOOD_STOCK_Q + @BAD_STOCK_Q
            SET @GOOD_INOUT_I  = @GOOD_STOCK_Q * @INOUT_P
            SET @BAD_INOUT_I   = @BAD_STOCK_Q  * @INOUT_P
            SET @ITEM_STATUS   = ISNULL(@ITEM_STATUS, 	#{ITEM_STATUS})
            SET @INOUT_I       = ISNULL(@INOUT_I,       @INOUT_P*@INOUT_Q)
            SET @LOT_NO        = ISNULL(@LOT_NO,      	#{REPLACE_LOT_NO})

            SET @ODIV_CODE     = ISNULL(@ODIV_CODE,   	#{DIV_CODE})
            SET @OWH_CODE      = ''
            SET @OWH_CELL_CODE = ''
            SET @OITEM_CODE    = ISNULL(@OITEM_CODE,  	#{OUT_ITEM_CODE})
            SET @OINOUT_P      = ISNULL(@OINOUT_P,      0)
            SET @OGOOD_STOCK_Q = ISNULL(@OGOOD_STOCK_Q, #{OUT_Q})
            SET @OBAD_STOCK_Q  = 0
            SET @OINOUT_Q      = @OGOOD_STOCK_Q + @OBAD_STOCK_Q
            SET @OINOUT_I      = @OGOOD_STOCK_Q * @OINOUT_P
            SET @OLOT_NO       = ISNULL(@OLOT_NO,     	#{OUT_LOT_NO})

            SET @INOUT_NUM     = ISNULL(@INOUT_NUM,   	#{INOUT_NUM})         -- 수불번호가 = ''일 경우 신규, != ''일 경우 수정
            SET @INOUT_SEQ     = ISNULL(@INOUT_SEQ,     #{OUT_SEQ})
            SET @INOUT_TYPE    = ''
            SET @USER_ID       = ISNULL(@USER_ID,     	#{S_USER_ID})
            SET @INOUT_PRSN    = ISNULL(@INOUT_PRSN,  	#{REPLACE_PRSN})
            SET @MAKE_DATE     = #{MAKE_DATE}
            SET @MAKE_EXP_DATE = #{MAKE_EXP_DATE}






            DECLARE        @InOutNum         NVARCHAR(20)       -- 대체 수불번호
                         , @InOutSeq         NUMERIC(4, 0)      -- 대체 수불순번
                         , @InOutType        NVARCHAR(02)       -- 대체 수불유형
                         , @DivCode          NVARCHAR(08)       -- 사업장
                         , @ItemCode         NVARCHAR(20)       -- 품목코드
                         , @InOutDate        NVARCHAR(08)       -- 대체 수불일자
                         , @WhCode           NVARCHAR(08)       -- 창고코드
                         , @LotNo            NVARCHAR(20)       -- LOT NO
						 , @InoutTypeDetail NVARCHAR(10)

            DECLARE        @RefItem          NVARCHAR(01)       -- 사용자 참조명칭
                         , @MoneyUnit        NVARCHAR(03)       -- 화폐단위
                         , @ErrorCode        NVARCHAR(05)       -- 에러 번호
                         , @ErrorDesc        NVARCHAR(1000)     -- 에러 설명


		--출고바코드정보의 품목의 주창고
/*		
		SELECT @WH_CODE = WH_CODE 
			  ,@OWH_CODE = WH_CODE
		  FROM BPR200T 
		 WHERE COMP_CODE = @COMP_CODE
		   AND DIV_CODE = @DIV_CODE
		   AND ITEM_CODE = @OITEM_CODE
*/
		SELECT @WH_CODE  = MAX(CASE WHEN ITEM_CODE=@ITEM_CODE  THEN WH_CODE ELSE '' END)
		    ,  @OWH_CODE = MAX(CASE WHEN ITEM_CODE=@OITEM_CODE THEN WH_CODE ELSE '' END)
		  FROM BPR200T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND DIV_CODE  = @DIV_CODE
		   AND ITEM_CODE IN (@OITEM_CODE, @ITEM_CODE)  
		   

        -----------------------------------------------------------------------------------------------------------------------
		/* 공통코드 "B049"에 따라 호출하는 재고평가SP 분개하기 위한 작업 */
			DECLARE @EstimatemMethod	NVARCHAR(1)
			      , @AverageCalcPeriod	NVARCHAR(1)

			-- 단가계산방법
			SELECT TOP 1
				   @EstimatemMethod  = SUB_CODE
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND ISNULL(REF_CODE1,'') = 'Y'

			SET @EstimatemMethod  = CASE WHEN ISNULL(@EstimatemMethod, '')  = '' THEN '1' ELSE @EstimatemMethod  END         -- 재고금액 평가 유형(창고/사업장)

			SELECT TOP 1
				   @AverageCalcPeriod = REF_CODE5
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'B049'                -- 단가구분 코드
			   AND SUB_CODE != '$'
			   AND SUB_CODE  = @EstimatemMethod

			SET @AverageCalcPeriod  = CASE WHEN ISNULL(@AverageCalcPeriod, '')  = '' THEN '1' ELSE @AverageCalcPeriod  END         -- 재고금액 평가 유형(창고/사업장)

        -----------------------------------------------------------------------------------------------------------------------

        --  사용자 참조명칭 기준 조회
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '0')                          -- Default: 명칭 0

        --  MONEY UNIT 조회
            SELECT TOP 1 @MoneyUnit = SUB_CODE
            FROM   BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE  = @COMP_CODE
            AND    MAIN_CODE  = 'B004'
            AND    SUB_CODE  != '$'
            AND    USE_YN     = 'Y'
            AND    REF_CODE1  = 'Y'

            SET @MoneyUnit = ISNULL(@MoneyUnit, 'KRW')                    -- Default: KRW

        -----------------------------------------------------------------------------------------------------------------------
        --  1. 삭제/변경된 수불 정보에 대한 삭제 처리
            IF @CHECK_FLAG IN ('D', 'U')                      -- 수정, 삭제일 경우 해당 대체 출고 내역 삭제
            BEGIN
        --      1-1. 현재, 수정/삭제 처리한 입고정보에 대한 대체출고 전표 조회
                DECLARE CUR_0378 CURSOR local static FOR
                    SELECT INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, ITEM_CODE, INOUT_DATE, WH_CODE, LOT_NO
                    FROM   BTR100T WITH (NOLOCK)
                    WHERE  COMP_CODE         = @COMP_CODE
                    AND    INOUT_NUM         = @INOUT_NUM
                    AND    BASIS_NUM         = @INOUT_NUM
        --            AND    LOT_NO            = @LOT_NO        -- @LOT번호 변경시 오류발생하여 삭제함
                    AND    CREATE_LOC        = '4'
                    AND    INOUT_METH        = '6'
                    AND    INOUT_TYPE_DETAIL IN ('93','97')
                    ORDER BY INOUT_NUM, INOUT_SEQ DESC

                OPEN CUR_0378
                FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo

                IF @@CURSOR_ROWS &lt;= 1
                BEGIN
                    SET @ErrorCode = '54724'                 -- 54724: 품목대체 처리한 출고 수불정보를 찾을 수 없습니다. [대체입고 수불번호: 1, 수불순번: 2]
                    SET @ErrorDesc = uniLITE.fnGetErrorMsg(54724, @INOUT_NUM)
                    CLOSE CUR_0378
                    DEALLOCATE CUR_0378

                    GOTO ERROR_HANDLER
                END

                WHILE (@@FETCH_STATUS = 0)
                BEGIN
        --          1-2. 대체 수불 내역 삭제
                    DELETE FROM BTR100T
                    WHERE COMP_CODE    = @COMP_CODE
                    AND   DIV_CODE     = @DivCode
                    AND   INOUT_NUM    = @InOutNum
                    AND   INOUT_SEQ    = @InOutSeq
                    AND   INOUT_TYPE   = @InOutType
                    AND   LOT_NO       = @LotNo

        --          1-3. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        CLOSE CUR_0378
                        DEALLOCATE CUR_0378

                        GOTO ERROR_HANDLER
                   END

                   FETCH NEXT FROM CUR_0378 INTO @InOutNum, @InOutSeq, @InOutType, @DivCode, @ItemCode, @InOutDate, @WhCode, @LotNo
                END
                CLOSE CUR_0378
                DEALLOCATE CUR_0378
            END

        -----------------------------------------------------------------------------------------------------------------------
        --  2. 신규 대체 입고 등록 처리
            IF @CHECK_FLAG IN ('U', 'N')                      -- 수정, 신규일 경우 해당 대체 출고 내역 등록
            BEGIN

				SELECT  @InoutTypeDetail = CASE WHEN ITEM_ACCOUNT = (SELECT ITEM_ACCOUNT FROM BPR200T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND ITEM_CODE=@ITEM_CODE) 
												THEN '97' 
												ELSE '93' 
										   END
				FROM BPR200T A
				WHERE COMP_CODE=@COMP_CODE
				AND DIV_CODE=@DIV_CODE
				AND ITEM_CODE=@OITEM_CODE

				
                IF @GOOD_STOCK_Q != 0 Or @BAD_STOCK_Q != 0
				BEGIN

        --      2-1. 신규 등록일 경우, 수불번호 채번
                IF ISNULL(@INOUT_NUM, '') = ''
                    EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, 'BTR100T', 'R', @INOUT_DATE, '1', @INOUT_NUM OUTPUT      -- 일채번

                --SET @INOUT_SEQ  = 1
                SET @INOUT_TYPE = '1'             -- 입고

        --      2-2. 대체입고 내역 등록
        --           INOUT_TYPE               수불타입                              ( 1: 입고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STAUS)                          (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체출고 창고코드)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번 1.)
        --           WH_CODE                  창고코드                              (대체입고 창고코드)
                INSERT INTO BTR100T (COMP_CODE,                   DIV_CODE,                          INOUT_NUM,                        INOUT_SEQ,                       ITEM_CODE
                                   , WH_CODE,                     WH_CELL_CODE,                      INOUT_DATE
                                   , INOUT_Q,                     INOUT_P,                           INOUT_I,                          MONEY_UNIT
                                   , BILL_TYPE,                   SALE_TYPE,                         SALE_DIV_CODE,                    SALE_CUSTOM_CODE
                                   , TO_DIV_CODE,                 IN_ITEM_STATUS
                                   , INOUT_TYPE,                  CREATE_LOC,                        ITEM_STATUS,                      LOT_NO
                                   , INOUT_METH,                  INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                  INOUT_CODE
                                   , BASIS_NUM,                   BASIS_SEQ,                         UPDATE_DB_USER,                   UPDATE_DB_TIME
                                   , INOUT_PRSN
                                   , MAKE_EXP_DATE
                                   , MAKE_DATE
                                   --20200123 추가
                                   , REMARK
                                   )
                SELECT @COMP_CODE    AS COMP_CODE,   @DIV_CODE     AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ    AS INOUT_SEQ,        @ITEM_CODE AS ITEM_CODE
                     , @WH_CODE      AS WH_CODE,     @WH_CELL_CODE AS WH_CELL_CODE,      @INOUT_DATE  AS INOUT_DATE
                     , @INOUT_Q      AS INOUT_Q,     @INOUT_P      AS INOUT_P,           @INOUT_I     AS INOUT_I,         @MoneyUnit    AS MONEY_UNIT
                     , '*'           AS BILL_TYPE,   '*'          AS SALE_TYPE,         '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
                     , @ODIV_CODE    AS TO_DIV_CODE, @ITEM_STATUS AS IN_ITEM_STATUS
                     , @INOUT_TYPE   AS INOUT_TYPE,  '4'          AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO       AS LOT_NO
                     , '6'           AS INOUT_METH,  @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE,   @OWH_CODE   AS INOUT_CODE
                     , @INOUT_NUM    AS BASIS_NUM,   CASE WHEN @GOOD_STOCK_Q != 0 THEN 2
                                                          WHEN @BAD_STOCK_Q  != 0 THEN 3
                                                          ELSE 1
                                                     END          AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()     AS UPDATE_DB_TIME
                     , @INOUT_PRSN   AS INOUT_PRSN
                     , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                     , @MAKE_DATE     AS MAKE_DATE
                     --20200123 추가
                     , #{REMARK}

        --      2-2. 재고평가 수행
        --      EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
				IF @EstimatemMethod = '1'
				BEGIN
					-- 실시간 처리
					IF @AverageCalcPeriod = '1'
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @USER_ID, @ErrorDesc OUTPUT
					END
					-- 월마감 처리
					ELSE
					BEGIN
						EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @DIV_CODE, @ITEM_CODE, @INOUT_DATE, @WH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
					END
				END

                IF CHARINDEX(';', @ErrorDesc) &gt; 0
                BEGIN
                    SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                    SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                    GOTO ERROR_HANDLER
                END
            END

        -----------------------------------------------------------------------------------------------------------------------
        --      2-3. 대체 출고 내역 등록 처리
        --           INOUT_TYPE               수불타입                              ( 2: 출고)                             (입고/출고)
        --           CREATE_LOC               생성경로-B031                         ( 4: 재고)                             (영업/자재/생산/재고/수출/수입)
        --           ITEM_STATUS              품목상태                              ( ITEM_STATUS)                         (양품/불량)
        --           INOUT_METH               수불방법-B036                         ( 6: 대체)                             (정상/예외/이동/실사/분해/대체/기타)
        --           INOUT_TYPE_DETAIL        수불유형-S006/S007/S008/M103/M104     (93: 대체 입고/출고)
        --           INOUT_CODE_TYPE          수불처구분-B005                       ( 2: 창고)                             (부서/창고/작업장/거래처/외주처)
        --           INOUT_CODE               수불처                                (대체입고 창고)
        --           ORDER_NUM                오더번호                              (NULL)
        --           BASIS_NUM                근거번호                              (품목대체 번호)
        --           BASIS_SEQ                근거순번                              (품목대체 순번)
        --           WH_CODE                  창고코드                              (대체출고 창고)

                SET @INOUT_TYPE  = '2'             -- 출고

                IF @GOOD_STOCK_Q != 0
                BEGIN
                  --  SET @INOUT_SEQ   = 2
                    SET @ITEM_STATUS = '1'             -- 양품

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                           INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                       INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                            INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                          SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                         ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                  INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                          UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )
                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM    AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @GOOD_STOCK_Q AS INOUT_Q,    @INOUT_P    AS INOUT_P,           @GOOD_INOUT_I AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'            AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS  AS ITEM_STATUS,     @OLOT_NO    AS LOT_NO
                         , '6'           AS INOUT_METH, @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'           AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID      AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @OLOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END

                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END

                IF @BAD_STOCK_Q != 0
                BEGIN
                    --SET @INOUT_SEQ   = 3
                    SET @ITEM_STATUS = '2'             -- 불량

                    INSERT INTO BTR100T (COMP_CODE,                 DIV_CODE,                          INOUT_NUM,                      INOUT_SEQ,                       ITEM_CODE
                                       , WH_CODE,                   WH_CELL_CODE,                      INOUT_DATE
                                       , INOUT_Q,                   INOUT_P,                           INOUT_I,                        MONEY_UNIT
                                       , BILL_TYPE,                 SALE_TYPE,                         SALE_DIV_CODE,                  SALE_CUSTOM_CODE
                                       , TO_DIV_CODE
                                       , INOUT_TYPE,                CREATE_LOC,                        ITEM_STATUS,                    LOT_NO
                                       , INOUT_METH,                INOUT_TYPE_DETAIL,                 INOUT_CODE_TYPE,                INOUT_CODE
                                       , BASIS_NUM,                 BASIS_SEQ,                         UPDATE_DB_USER,                 UPDATE_DB_TIME
                                       , INOUT_PRSN
                                       , MAKE_EXP_DATE
                                       , MAKE_DATE
                                       --20200123 추가
                                       , REMARK
                                       )

                    SELECT @COMP_CODE    AS COMP_CODE,  @ODIV_CODE  AS DIV_CODE,          @INOUT_NUM   AS INOUT_NUM,       @INOUT_SEQ  AS INOUT_SEQ,        @OITEM_CODE AS ITEM_CODE
                         , @OWH_CODE     AS WH_CODE,    @OWH_CELL_CODE AS WH_CELL_CODE,   @INOUT_DATE AS INOUT_DATE
                         , @BAD_STOCK_Q  AS INOUT_Q,    @INOUT_P    AS INOUT_P,           @BAD_INOUT_I AS INOUT_I,         @MoneyUnit  AS MONEY_UNIT
                         , '*'           AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'           AS SLAE_DIV_CODE,   '*'         AS SALE_CUSTOM_CODE
                         , @DIV_CODE     AS TO_DIV_CODE
                         , @INOUT_TYPE   AS INOUT_TYPE, '4'         AS CREATE_LOC,        @ITEM_STATUS AS ITEM_STATUS,     @LOT_NO     AS LOT_NO
                         , '6'           AS INOUT_METH, @InoutTypeDetail AS INOUT_TYPE_DETAIL, '2'          AS INOUT_CODE_TYPE, @WH_CODE    AS INOUT_CODE
                         , @INOUT_NUM    AS BASIS_NUM,  1           AS BASIS_SEQ,         @USER_ID     AS UPDATE_DB_USER,  GETDATE()   AS UPDATE_DB_TIME
                         , @INOUT_PRSN   AS INOUT_PRSN
                         , @MAKE_EXP_DATE AS MAKE_EXP_DATE
                         , @MAKE_DATE     AS MAKE_DATE
                         --20200123 추가
                         , #{REMARK}

        --          3-2. 재고평가 방법에 따라 재고평가 수행
        --          EXEC uniLITE.SP_STOCK_PeriodicAverage @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
					IF @EstimatemMethod = '1'
					BEGIN
						-- 실시간 처리
						IF @AverageCalcPeriod = '1'
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverage  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @USER_ID, @ErrorDesc OUTPUT
						END
						-- 월마감 처리
						ELSE
						BEGIN
							EXEC uniLITE.SP_STOCK_PeriodicAverageMonthly  @COMP_CODE, @INOUT_NUM, @INOUT_SEQ, @INOUT_TYPE, @ODIV_CODE, @OITEM_CODE, @INOUT_DATE, @OWH_CODE, @LOT_NO, @USER_ID, @ErrorDesc OUTPUT
						END
					END


                    IF CHARINDEX(';', @ErrorDesc) &gt; 0
                    BEGIN
                        SET @ErrorCode = SUBSTRING(@ErrorDesc, 1, CHARINDEX(';', @ErrorDesc) - 1)
                        SET @ErrorDesc = SUBSTRING(@ErrorDesc, CHARINDEX(';', @ErrorDesc) + 1, LEN(@ErrorDesc))

                        GoTo ERROR_HANDLER
                    END
                END
            END

        ERROR_HANDLER:
            SET NOCOUNT OFF
            SET ARITHABORT OFF

            SELECT TOP 1 @ErrorCode AS ERROR_CODE, @ErrorDesc AS ERROR_DESC, @INOUT_NUM AS INOUT_NUM, 1 AS INOUT_SEQ
        END
	</select>	
	
</mapper>