<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="storageService">

	<select id="storageService.selectPoList" parameterType="Map" resultType="rMap">
		BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

	DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
	      , @UserId			NVARCHAR(100)	/* 사용자ID		*/
	      , @LangType		NVARCHAR(2)		/* 언어구분		*/
          , @RefItem		NVARCHAR(01)
          , @DateFormat		NVARCHAR(10)

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

	/* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
    FROM BSA300T WITH (NOLOCK)
    WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

	/* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
    FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE = @CompCode
		AND MAIN_CODE = N'B044'
        AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	/* 데이터 조회 */
	SELECT
		A.CUSTOM_CODE
	  , C.CUSTOM_NAME
	  , A.ORDER_NUM
      , CASE WHEN ISNULL(A.ORDER_DATE, '') = '' THEN ''
      								            ELSE REPLACE(
                      							     	REPLACE(
										                	REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
										                                       , 'MM',   SUBSTRING(A.ORDER_DATE, 5, 2))
										                                       , 'DD',   SUBSTRING(A.ORDER_DATE, 7, 2))
        END                                                       AS ORDER_DATE
      , CASE WHEN ISNULL(MAX(B.DVRY_DATE), '') = '' THEN ''
                 							   ELSE REPLACE(
								                    	REPLACE(
								                        	REPLACE(@DateFormat, 'YYYY', SUBSTRING(MAX(B.DVRY_DATE), 1, 4))
								                                         	   , 'MM',   SUBSTRING(MAX(B.DVRY_DATE), 5, 2))
								                                               , 'DD',   SUBSTRING(MAX(B.DVRY_DATE), 7, 2))
		END                                                       AS DVRY_DATE
      , SUM(ISNULL(B.ORDER_UNIT_Q, 0))							AS ORDER_UNIT_Q
      , SUM(ISNULL(B.INSTOCK_Q,	   0))							AS INSTOCK_Q
      , (SUM(ISNULL(B.ORDER_UNIT_Q, 0)) - SUM(ISNULL(B.INSTOCK_Q,	   0))) AS UN_Q

    FROM               MPO100T A  WITH (NOLOCK)
            INNER JOIN MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE    =  A.COMP_CODE
                                               AND  B.DIV_CODE     =  A.DIV_CODE
                                               AND  B.CUSTOM_CODE  =  A.CUSTOM_CODE
                                               AND  B.ORDER_NUM    =  A.ORDER_NUM
            INNER JOIN BCM100T C  WITH (NOLOCK) ON  C.COMP_CODE    =  A.COMP_CODE
                                               AND  C.CUSTOM_CODE  =  A.CUSTOM_CODE

    WHERE   	A.COMP_CODE         =  @CompCode
    	-- AND     A.ORDER_TYPE       !=  N'4'
    	AND     B.CONTROL_STATUS   !=  N'8'
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    	AND     A.DIV_CODE          =  #{DIV_CODE}				/* 사업장		*/
    </if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
    	AND     A.ORDER_DATE       &gt;=  #{ORDER_DATE_FR}			/* 발주일(FR)   */
    </if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
    	AND     A.ORDER_DATE       &lt;=  #{ORDER_DATE_TO}			/* 발주일(TO)	*/
    </if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
    	AND     A.CUSTOM_CODE      =  #{CUSTOM_CODE}			/* 거래처(FR)	*/
    </if>

    GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, C.CUSTOM_NAME, A.ORDER_NUM, A.ORDER_DATE
  	ORDER BY A.ORDER_NUM DESC

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END
    </select>


	<select id="storageService.selectPoDetailList" parameterType="Map" resultType="rMap">
    	/* mpo501ukrv.Cmpo501ukrv[fnMpo200QStd] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  A.DIV_CODE
                  , A.CUSTOM_CODE
                  , D.CUSTOM_NAME
                  , A.ORDER_NUM
                  , A.ORDER_SEQ
                  , A.ITEM_CODE
                  ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                    WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                        ELSE B.ITEM_NAME
                     END)      AS ITEM_NAME
                  , B.SPEC
                  , B.STOCK_UNIT

                  , (CASE WHEN B.BARCODE IS NULL THEN B.ITEM_CODE
   				  		  WHEN B.BARCODE ='' THEN B.ITEM_CODE
   				  		  ELSE B.BARCODE END)	AS BARCODE
                  , B.TRNS_RATE AS ITEM_TRNS_RATE
                  , A.ORDER_UNIT_Q
                  , A.ORDER_UNIT
                  , A.UNIT_PRICE_TYPE
                  , A.MONEY_UNIT
                  , A.ORDER_UNIT_P
                  , A.ORDER_O
                  , A.EXCHG_RATE_O
                  , A.ORDER_LOC_P
                  , A.ORDER_LOC_O
                 , (CASE WHEN ISNULL(A.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.DVRY_DATE, 7, 2))
                     END)                                           AS DVRY_DATE
                  , A.DVRY_TIME
                  , A.WH_CODE
                  , A.TRNS_RATE
                  , A.ORDER_Q
                  , A.ORDER_P
                  , A.CONTROL_STATUS
                  , A.ORDER_REQ_NUM
                  <!-- , A.PO_REQ_NUM -->
                 <!--  , A.PO_REQ_SEQ                                        AS PO_SER_NO -->
                  , A.INSTOCK_Q
                  , A.INSPEC_FLAG
                  , A.REMARK
                  , A.PROJECT_NO
                  <!-- , C.LOT_YN -->
                  , A.LOT_NO
                  , A.UPDATE_DB_USER
                  , A.UPDATE_DB_TIME
                  , A.COMP_CODE
                  , A1.ORDER_TYPE
            FROM               MPO200T A WITH (NOLOCK)
                    INNER JOIN MPO100T A1 WITH (NOLOCK) ON A1.COMP_CODE = A.COMP_CODE
                    								  AND A1.DIV_CODE = A.DIV_CODE
                                                      AND A1.ORDER_NUM = A.ORDER_NUM
                    INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                      AND B.ITEM_CODE = A.ITEM_CODE
                    INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                      AND C.DIV_CODE  = A.DIV_CODE
                                                      AND C.ITEM_CODE = A.ITEM_CODE
                    INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE =  A.COMP_CODE
                                               		AND D.CUSTOM_CODE =  A.CUSTOM_CODE
            WHERE   A.COMP_CODE = @CompCode
		 	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    	AND     A.DIV_CODE          =  #{DIV_CODE}				/* 사업장		*/
		    </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
            AND     A.ORDER_NUM = #{ORDER_NUM}
            </if>
        	ORDER BY A.ORDER_SEQ

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
        <insert id="storageService.insertLogDetail" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE, OPR_FLAG
          	 , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
             , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
             , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
             , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
             , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
             , BILL_TYPE, SALE_TYPE
             , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
             , LC_NUM, BL_NUM, TRADE_LOC, ACCOUNT_YNC, ACCOUNT_Q
             , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
             , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
        	 )
        VALUES
             ( #{KEY_VALUE}, #{OPR_FLAG}
        	 , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
        	 , #{INOUT_CODE_TYPE}, #{INOUT_CODE},'PDA' , #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
        	 , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}
        	 , #{TRANS_COST}, #{TARIFF_AMT}, #{BASIS_NUM}, #{BASIS_SEQ}, #{PROJECT_NO}, #{LOT_NO}, #{REMARK}
        	 , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P},#{ORDER_UNIT_I},#{ORDER_UNIT_FOR_P}
        	 , #{BILL_TYPE}, #{SALE_TYPE}
        	 , #{PRICE_YN},#{SALE_DIV_CODE},#{SALE_CUSTOM_CODE}, #{SALE_C_DATE}
        	 , #{LC_NUM}, #{BL_NUM}, #{TRADE_LOC}, #{ACCOUNT_YNC}, #{ACCOUNT_Q}
        	 , #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}
        	 , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()
        	 )
    </insert>

    <insert id="storageService.updateLogDetail" parameterType="Map">
        INSERT INTO L_BTR100T(
        		KEY_VALUE, OPR_FLAG
        	  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
                    , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
                    , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
                    , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
                    , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
                    , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
                    , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
                    , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
                    , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
                    , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
                    , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
                    , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03)
              SELECT  #{KEY_VALUE}, #{OPR_FLAG}
              	    , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
                    , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, INOUT_CODE_DETAIL, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
                    , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}, EXPENSE_I, RETURN_QTY
                    , #{TRANS_COST}, #{TARIFF_AMT}, #{BASIS_NUM}, #{BASIS_SEQ}, TO_DIV_CODE, #{PROJECT_NO}, PJT_CODE, #{LOT_NO}, #{REMARK}
                    , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_I}, INOUT_TAX_AMT, #{ORDER_UNIT_FOR_P}
                    , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, #{BILL_TYPE}, #{SALE_TYPE}, TAX_TYPE
                    , #{PRICE_YN}, SALE_PRSN, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, SALE_C_YN, #{SALE_C_DATE}, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
                    , #{LC_NUM}, #{BL_NUM}, #{TRADE_LOC}, LC_AMEND_SEQ, EXPENSE_FLAG, #{ACCOUNT_YNC}, #{ACCOUNT_Q}, FR_ACCOUNT, TO_ACCOUNT
                    , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
                    , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}, DELIVERY_NO
                    , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
                    , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
              FROM   BTR100T   A  WITH (NOLOCK)
              WHERE A.COMP_CODE     = #{S_COMP_CODE}
             	AND A.DIV_CODE      = #{DIV_CODE}
                AND A.INOUT_NUM     = #{INOUT_NUM}
                AND A.INOUT_SEQ     = #{INOUT_SEQ}
                AND A.INOUT_TYPE    = #{INOUT_TYPE}
    </insert>

    <update id="storageService.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_MATRL_Receiving (
        	#{CreateType,  mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{KeyValue,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{LangCode,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{InOutNum,    mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
        	#{ErrorDesc,   mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
   <update id="storageService.spReceiving_pdm110ukrv" parameterType="Map" statementType="CALLABLE">
        {call SP_MATRL_Receiving_pdm110ukrv (
        	#{KeyValue,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{LangCode,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{CreateType,  mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
        	#{InOutNum,    mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
        	#{ErrorDesc,   mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

	<select id="storageService.selectItemByBarCode" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')


            /* 데이터 조회 */
            SELECT top 1
           		   B.COMP_CODE
                  , B.ITEM_CODE
                  ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                    WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                        ELSE B.ITEM_NAME
                     END)      AS ITEM_NAME
                  , B.SPEC
                  , B.STOCK_UNIT
   				  , (CASE WHEN B.BARCODE IS NULL THEN B.ITEM_CODE
   				  		  WHEN B.BARCODE ='' THEN B.ITEM_CODE
   				  		  ELSE B.BARCODE END)	AS BARCODE
                  , ISNULL(C.PURCHASE_BASE_P,0) as SALE_BASIS_P
                  , B.TRNS_RATE
                  , ISNULL(B.UNIT_WGT, 0)                                       AS UNIT_WGT
			      , ISNULL(B.WGT_UNIT,'')                                       AS WGT_UNIT
			      , ISNULL(B.UNIT_VOL, 0)                                       AS UNIT_VOL
			      , ISNULL(B.VOL_UNIT,'')                                       AS VOL_UNIT
			      , B.TAX_TYPE
                  , C.ORDER_UNIT
                  , C.ITEM_ACCOUNT

            FROM            BPR100T B WITH (NOLOCK)
                     INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                      AND C.DIV_CODE = #{DIV_CODE}
                                                      AND C.ITEM_CODE = B.ITEM_CODE
            WHERE   B.COMP_CODE = @CompCode

            AND ((ISNULL(B.BARCODE, B.ITEM_CODE) 	   =#{BARCODE}) OR (B.BARCODE ='' and B.ITEM_CODE=#{BARCODE}))
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>


</mapper>