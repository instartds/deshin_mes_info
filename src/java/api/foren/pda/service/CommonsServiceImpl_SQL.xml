<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commonsService">

	 <select id="commonsService.selectCaseSensitiveYN" parameterType="Map" resultType="rMap">
	 	 SELECT MAIN_CODE                       AS MAIN_CODE
				 , SUB_CODE                        AS SUB_CODE
				 , ISNULL(CODE_NAME, SUB_CODE) 	   AS CODE_NAME
				 , ISNULL(CODE_NAME_EN, CODE_NAME) AS CODE_NAME_EN
				 , ISNULL(CODE_NAME_CN, CODE_NAME) AS CODE_NAME_CN
				 , ISNULL(CODE_NAME_JP, CODE_NAME) AS CODE_NAME_JP
				 , ISNULL(CODE_NAME_VI, CODE_NAME) AS CODE_NAME_VI
                 , USE_YN                          AS USE_YN
                 , REF_CODE1	                   AS REF_CODE1
                 , REF_CODE2	                   AS REF_CODE2
                 , REF_CODE3	                   AS REF_CODE3
                 , REF_CODE4	                   AS REF_CODE4
                 , REF_CODE5	                   AS REF_CODE5
                 , REF_CODE6	                   AS REF_CODE6
                 , REF_CODE7	                   AS REF_CODE7
                 , REF_CODE8	                   AS REF_CODE8
                 , REF_CODE9	                   AS REF_CODE9
                 , REF_CODE10                      AS REF_CODE10                
			 FROM BSA100T
			WHERE COMP_CODE = #{COMP_CODE}
			  AND USE_YN = 'Y'
			  AND MAIN_CODE = 'B110'
			  AND SUB_CODE = '40'
	 </select>
	<select id="commonsService.searchAllComboboxList" parameterType="Map" resultType="rMap">
	        SELECT MAIN_CODE                       AS MAIN_CODE
				 , SUB_CODE                        AS SUB_CODE
				 , ISNULL(CODE_NAME, SUB_CODE) 	   AS CODE_NAME
				 , ISNULL(CODE_NAME_EN, CODE_NAME) AS CODE_NAME_EN
				 , ISNULL(CODE_NAME_CN, CODE_NAME) AS CODE_NAME_CN
				 , ISNULL(CODE_NAME_JP, CODE_NAME) AS CODE_NAME_JP
				 , ISNULL(CODE_NAME_VI, CODE_NAME) AS CODE_NAME_VI
                 , USE_YN                          AS USE_YN
                 , REF_CODE1	                   AS REF_CODE1
                 , REF_CODE2	                   AS REF_CODE2
                 , REF_CODE3	                   AS REF_CODE3
                 , REF_CODE4	                   AS REF_CODE4
                 , REF_CODE5	                   AS REF_CODE5
                 , REF_CODE6	                   AS REF_CODE6
                 , REF_CODE7	                   AS REF_CODE7
                 , REF_CODE8	                   AS REF_CODE8
                 , REF_CODE9	                   AS REF_CODE9
                 , REF_CODE10                      AS REF_CODE10                
			 FROM BSA100T
			WHERE COMP_CODE = #{S_COMP_CODE}
			  AND USE_YN = 'Y'
			  AND MAIN_CODE IN ('M104','B024','B031','S007','S028')
			ORDER BY COMP_CODE, MAIN_CODE, SORT_SEQ, SUB_CODE
	</select>
	<select id="commonsService.agentCustPopup" parameterType="Map" resultType="rMap">  
	/*  popupServiceImpl.agentCustPopup */
   	SELECT	 A.CUSTOM_CODE
			 , CASE M1.REF_ITEM
					 WHEN '0' THEN A.CUSTOM_NAME
					 WHEN '1' THEN A.CUSTOM_NAME1
					 WHEN '2' THEN A.CUSTOM_NAME2
							  ELSE A.CUSTOM_NAME
				END											AS CUSTOM_NAME
			 , CASE WHEN ISNULL(A.COMPANY_NUM, '') = '' THEN ''
					ELSE SUBSTRING(A.COMPANY_NUM,1,3) + '-' +
						 SUBSTRING(A.COMPANY_NUM,4,2) + '-' +
						 SUBSTRING(A.COMPANY_NUM,6,5)
			   END											AS COMPANY_NUM
			 , ISNULL(A.TOP_NAME, '')						AS TOP_NAME
			 , ISNULL(A.BUSINESS_TYPE, '')					AS BUSINESS_TYPE
			 , ISNULL(A.COMP_CLASS, '')						AS COMP_CLASS
			 , ISNULL(A.COMP_TYPE, '')						AS COMP_TYPE
			 , ISNULL(A.ADDR1, '')							AS ADDR1
			 , ISNULL(A.ADDR2, '')							AS ADDR2
			 , ISNULL(A.TELEPHON, '')						AS TELEPHON
			 , ISNULL(A.FAX_NUM, '')						AS FAX_NUM
			 , ISNULL(A.MAIL_ID, '')						AS MAIL_ID
			 , ISNULL(A.WON_CALC_BAS, '')					AS WON_CALC_BAS
			 , ISNULL(A.TO_ADDRESS, '')						AS TO_ADDRESS
			 , ISNULL(A.TAX_CALC_TYPE, '')					AS TAX_CALC_TYPE
			 , ISNULL(A.TRANS_CLOSE_DAY, '')				AS TRANS_CLOSE_DAY
			 , ISNULL(A.RECEIPT_DAY, '')					AS RECEIPT_DAY
			 , ISNULL(A.TAX_TYPE, '')						AS TAX_TYPE
			 , ISNULL(A.VAT_RATE, 10)						AS VAT_RATE
			 , ISNULL(A.MONEY_UNIT, C.SUB_CODE)				AS MONEY_UNIT
			 , ISNULL(A.BILL_TYPE, '')						AS BILL_TYPE
			 , ISNULL(A.SET_METH, '')						AS SET_METH
			 , ISNULL(A.AGENT_TYPE, '')						AS AGENT_TYPE	
			 , ISNULL(A.AREA_TYPE, '')						AS AREA_TYPE	
			 , ISNULL(A.CREDIT_YN, '')						AS CREDIT_YN	
			 , ISNULL(A.TOT_CREDIT_AMT, 0)					AS TOT_CREDIT_AMT	
			 , ISNULL(A.CREDIT_AMT, 0)						AS CREDIT_AMT	
			 , ISNULL(A.CREDIT_YMD, '')						AS CREDIT_YMD	
			 , ISNULL(A.BUSI_PRSN, '')						AS BUSI_PRSN	
			 , ISNULL(A.COLLECTOR_CP,'')					AS COLLECTOR_CP	
			 , CASE M1.REF_ITEM
					 WHEN '1' THEN B.CUSTOM_NAME1
					 WHEN '2' THEN B.CUSTOM_NAME2
					 ELSE A.CUSTOM_NAME
					END 									AS COLLECTOR_NM
			 , ISNULL(A.COLLECT_DAY, '')					AS COLLECT_DAY	
			 , ISNULL(A.COLLECT_CARE, '2')					AS COLLECT_CARE	
			 , ISNULL(A.REMARK, '')							AS REMARK	
			 , ISNULL(A.TOP_NUM, '')						AS TOP_NUM	
			 , ISNULL(A.CREDIT_OVER_YN, 'N')				AS CREDIT_OVER_YN	
			 , ISNULL(A.BILL_DIV_CODE, '')					AS BILL_DIV_CODE	
			 , ISNULL(A.SERVANT_COMPANY_NUM, '')			AS SERVANT_COMPANY_NUM	
			 , D.PRSN_NAME									AS PRSN_NAME
			 , D.HAND_PHON									AS HAND_PHON
			 , A.HAND_PHON									AS SMS_MOBIL
			 , D.MAIL_ID									AS PRSN_EMAIL
			 , ISNULL(A.DELIVERY_UNION, '')					AS DELIVERY_UNION
			 , CASE WHEN D.TELEPHONE_NUM1 IS NULL THEN D.TELEPHONE_NUM2
					ELSE D.TELEPHONE_NUM1
			   END											AS PRSN_PHONE
			 , ISNULL(A.CHANNEL, '')						AS CHANNEL
			 , ISNULL(A.BILL_CUSTOM, '')					AS BILL_CUSTOM_CODE
			 , ISNULL(X.CUSTOM_NAME, '')					AS BILL_CUSTOM_NAME

		  FROM		   BCM100T A WITH (NOLOCK)
			   LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
												AND B.CUSTOM_CODE = A.BANK_CODE
												AND B.CUSTOM_TYPE = '4'
			   LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
												AND C.MAIN_CODE   = N'B004'
												AND C.SUB_CODE   != '$'
												AND C.REF_CODE1   = 'Y'
			   LEFT JOIN BSA300T M1 WITH (NOLOCK) ON A.COMP_CODE=M1.COMP_CODE AND M1.USER_ID= #{S_USER_ID}
			   LEFT JOIN BCM120T D
			   		  ON D.COMP_CODE	= A.COMP_CODE
			   		 AND D.CUSTOM_CODE	= A.CUSTOM_CODE
			   		 AND D.MAIN_BILL_YN	= 'Y'
			   		 AND D.SEQ			= (SELECT MAX(X.SEQ) AS SEQ 
			   								 FROM BCM120T X WITH(NOLOCK)
			   								WHERE X.COMP_CODE		= D.COMP_CODE 
			   								  AND X.CUSTOM_CODE		= D.CUSTOM_CODE
			   								  AND X.MAIN_BILL_YN	= 'Y')
			   LEFT JOIN BCM100T X WITH (NOLOCK) ON X.COMP_CODE   = A.COMP_CODE
												AND X.CUSTOM_CODE = A.BILL_CUSTOM

			 WHERE A.COMP_CODE	  = #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH2)">				
		 		AND (A.CUSTOM_CODE LIKE #{TXT_SEARCH2} + '%'							 
			 	 OR A.CUSTOM_NAME LIKE '%'+ #{TXT_SEARCH2} + '%' )
			</if>
			<if test="@foren.Ognl@isEmpty(TXT_SEARCH2)">
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND(		Replace(#{CUSTOM_CODE}, '-', '')	  IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
					OR (   Replace(#{CUSTOM_CODE}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
						AND (	Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_CODE}, '-', '') + '%'   
							  OR Replace(A.CUSTOM_NAME, '-', '') LIKE'%'+ Replace(#{CUSTOM_CODE}, '-', '') + '%' )
						)
		 		  )
			  </if>
			  <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			   AND(		Replace(#{CUSTOM_NAME}, '-', '')	  IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
					OR (   Replace(#{CUSTOM_NAME}, '-', '')  NOT IN (Replace(A.CUSTOM_CODE, '-', ''), Replace(A.CUSTOM_NAME, '-', ''), Replace(A.COMPANY_NUM, '-', ''))
						AND (	Replace(A.CUSTOM_CODE, '-', '') LIKE Replace(#{CUSTOM_NAME}, '-', '') + '%'   
							  OR Replace(A.CUSTOM_NAME, '-', '') LIKE '%'+ Replace(#{CUSTOM_NAME}, '-', '') + '%' )
						)
		 		  )
			  </if>				
			</if>

		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
		   AND (ISNULL(A.COMPANY_NUM, '')			  LIKE  Replace( #{COMPANY_NUM} , '-', '')  + '%'		
			OR  ISNULL(A.TOP_NUM, '') LIKE '%' + Replace( #{COMPANY_NUM} , '-', '')  + '%' )
		</if>
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
			 AND A.USE_YN = #{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
			AND A.AGENT_TYPE = #{AGENT_TYPE}		   
		</if>
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
			AND A.AREA_TYPE	  = #{AREA_TYPE}			  
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
			AND A.CUSTOM_TYPE IN 
			 <foreach collection="CUSTOM_TYPE" item="item" separator="," close=")" open="(">
						  #{item}
			</foreach>
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_TYPE)">
			<if test="@foren.Ognl@isNotEmpty(AGENT_CUST_FILTER)">
				AND A.CUSTOM_TYPE IN 
				<foreach collection="AGENT_CUST_FILTER" item="item" separator="," close=")" open="(">
							  #{item}
				</foreach>
			</if>
		</if>		
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY1)">
			AND ${ADD_QUERY1} #{S_COMP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)">
			${ADD_QUERY2} #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADD_QUERY3)">
			${ADD_QUERY3}
		</if>
		<if test="RDO == 1">
			ORDER BY	A.CUSTOM_CODE
		</if>
		<if test="RDO == 2">
			ORDER BY	CASE M1.REF_ITEM
					 WHEN '0' THEN A.CUSTOM_NAME
					 WHEN '1' THEN A.CUSTOM_NAME1
					 WHEN '2' THEN A.CUSTOM_NAME2
							  ELSE A.CUSTOM_NAME
				END 
		</if>
	</select>
</mapper>