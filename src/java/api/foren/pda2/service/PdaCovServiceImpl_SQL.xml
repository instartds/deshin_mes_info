<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "pdaCovService">
	
	<select id="pdaCovService.searchListPdm100ukrvMain" parameterType="Map" resultType="rMap">
		   SELECT A.COMP_CODE                    AS COMP_CODE
		        , A.DIV_CODE                     AS DIV_CODE
		        , A.ORDER_NUM                    AS ORDER_NUM               /* 발주번호 */
		        , A.CUSTOM_CODE                  AS CUSTOM_CODE             /* 거래처 */
		        , C.CUSTOM_NAME                  AS CUSTOM_NAME             /* 거래처명 */
		        , B.WH_CODE                      AS WH_CODE                 /* 입고창고 */
		        , B.DVRY_DATE                    AS DVRY_DATE               /* 입고일 */
		        , ''                             AS RECEIPT_NAME            /* 입고담당 */
		        , A.ORDER_TYPE                   AS ORDER_TYPE              /* 생성경로/발주형태 */
		        , ''                             AS INOUT_NUM               /* 입고번호 */
		        --, A.MONEY_UNIT                   AS MONEY_UNIT              /* 화폐 */ 
		        , B.MONEY_UNIT                   AS MONEY_UNIT              /* 화폐 */
		        --, A.EXCHG_RATE_O                 AS EXCHG_RATE_O            /* 환율 */
		        , B.EXCHG_RATE_O                 AS EXCHG_RATE_O            /* 환율 */
		        , B.ORDER_SEQ                    AS ORDER_SEQ               /* 순번 */
		        , '01'                           AS RECEIPT_TYPE            /* 입고유형 */
		        , B.ITEM_CODE                    AS ITEM_CODE               /* 품목코드 */
		        , I1.ITEM_NAME                   AS ITEM_NAME               /* 품목명 */
		        , I1.SPEC                        AS SPEC                    /* 규격 */
		        , B.ORDER_UNIT                   AS ORDER_UNIT              /* 단위 */
		        , CASE WHEN B.INSPEC_FLAG = 'Y' AND ISNULL(Q.INSPEC_NUM, '')  = '' THEN 0
		               WHEN B.INSPEC_FLAG = 'Y' AND ISNULL(Q.INSPEC_NUM, '') != '' THEN ISNULL(Q.INSPEC_Q, 0) - ISNULL(B.INSTOCK_Q, 0)
		               ELSE ISNULL(B.ORDER_Q, 0) - ISNULL(B.INSTOCK_Q, 0)
		          END                            AS INOUT_Q                 /* 입고수량 */
		        , ISNULL(B.ORDER_P, 0)           AS INOUT_P                 /* 입고단가 */
		        , ISNULL(B.ORDER_O, 0)           AS INOUT_I                 /* 입고금액 */
		        , ''                             AS LOT_NO                  /* LOT NO */
		        , B.ORDER_UNIT_P                 AS ORDER_UNIT_P            /* 자사단가 */
		        , B.ORDER_O                      AS ORDER_UNIT_O            /* 자사금액 */
		        , B.TRNS_RATE                    AS TRNS_RATE               /* 입수 */
		        , '1'                            AS ITEM_STATUS             /* 품목상태 */
		        , Q.RECEIPT_NUM                  AS RECEIPT_NUM             /* 접수번호 */
		        , Q.RECEIPT_SEQ                  AS RECEIPT_SEQ             /* 접수순번 */
		        , Q.INSPEC_NUM                   AS INSPEC_NUM              /* 검사번호 */
		        , Q.INSPEC_SEQ                   AS INSPEC_SEQ              /* 검사순번 */
		        , B.INSPEC_FLAG                  AS INSPEC_FLAG             /* 검사대상 */
		        , CASE WHEN B.INSPEC_FLAG = 'Y' AND ISNULL(Q.INSPEC_NUM, '') = '' THEN 'N'
		               ELSE 'Y'
		          END                            AS USE_YN                  /* 검사대상이지만 검사진행 전(입고 불가처리) */
		        , I1.EXCESS_RATE                 AS EXCESS_RATE1            /* 과출고허용율 */
		        , I2.EXCESS_RATE                 AS EXCESS_RATE2            /* 과입고허용율 */
		        , CASE WHEN B.INSPEC_FLAG = 'Y' AND ISNULL(Q.INSPEC_NUM, '')  = '' THEN 0
		               WHEN B.INSPEC_FLAG = 'Y' AND ISNULL(Q.INSPEC_NUM, '') != '' THEN ISNULL(Q.INSPEC_Q, 0) + (ISNULL(Q.INSPEC_Q, 0) * I2.EXCESS_RATE)
		               ELSE ISNULL(B.ORDER_Q, 0) + (ISNULL(B.ORDER_Q, 0) * I2.EXCESS_RATE)
		          END                            AS INOUT_MAX_Q             /* 과입고허용수량 */
		        , P.FORMAT_QTY
		     FROM MPO100T A
		LEFT JOIN MPO200T B
		       ON A.COMP_CODE   = B.COMP_CODE
		      AND A.DIV_CODE    = B.DIV_CODE
		      AND A.ORDER_NUM   = B.ORDER_NUM
		      AND A.CUSTOM_CODE = B.CUSTOM_CODE
		LEFT JOIN BPR100T I1
		       ON A.COMP_CODE   = I1.COMP_CODE
		      AND B.ITEM_CODE   = I1.ITEM_CODE
		LEFT JOIN BPR200T I2
		       ON A.COMP_CODE   = I2.COMP_CODE
		      AND A.DIV_CODE    = I2.DIV_CODE
		      AND B.ITEM_CODE   = I2.ITEM_CODE
		LEFT JOIN BCM100T C
		       ON A.COMP_CODE   = C.COMP_CODE
		      AND A.CUSTOM_CODE = C.CUSTOM_CODE
		LEFT JOIN QMS200T Q
		       ON A.COMP_CODE   = Q.COMP_CODE
		      AND A.DIV_CODE    = Q.DIV_CODE
		      AND A.CUSTOM_CODE = Q.CUSTOM_CODE
		      AND A.ORDER_NUM   = Q.ORDER_NUM
		      AND B.ORDER_SEQ   = Q.ORDER_SEQ
		      AND B.RECEIPT_Q   = Q.RECEIPT_Q
		LEFT JOIN BSA110T P
		       ON A.COMP_CODE   = P.COMP_CODE
			  AND P.JOB_CODE    = '16'
		    WHERE 1 = 1
		      AND A.COMP_CODE = #{COMP_CODE}
		      AND A.DIV_CODE  = #{DIV_CODE}
		      AND A.ORDER_NUM = #{ORDER_NUM}
		      AND ISNULL(B.ORDER_LOC_P, 0) != 0
		      AND ISNULL(B.ORDER_P,     0) != 0
		      AND ISNULL(B.ORDER_LOC_O,	0) != 0
		      AND ISNULL(B.ORDER_O,		0) != 0
		      AND B.CONTROL_STATUS IN ('1','7')
		      AND ISNULL(B.ORDER_Q, 0) - ISNULL(B.INSTOCK_Q, 0) > 0
		 ORDER BY A.ORDER_NUM
		        , B.ORDER_SEQ
	</select>
	
	<select id="pdaCovService.searchListPdm100ukrvSub1" parameterType="Map" resultType="rMap">
		   SELECT ROW_NUMBER() OVER(ORDER BY  A.COMP_CODE, A.DIV_CODE, A.DVRY_DATE, A.ORDER_NUM) AS ROW_NUM
		        , A.COMP_CODE
		        , A.DIV_CODE
		        , A.ORDER_NUM
		        , CONVERT(VARCHAR(10), CONVERT(DATE, CONVERT(VARCHAR(8), A.DVRY_DATE)), 102) AS DVRY_DATE
		        , A.ITEM_CODE
		       -- , B.ITEM_NAME
		        , CASE ISNULL(A.ITEM_CNT, 0) WHEN 0 THEN B.ITEM_NAME
		                                     ELSE B.ITEM_NAME + ' 외' + CAST(A.ITEM_CNT AS VARCHAR) + '개'
		          END AS ITEM_NAME
		       -- , B.SPEC
		        , A.CUSTOM_CODE
		        , C.CUSTOM_NAME
		       -- , A.ORDER_UNIT
		        , A.INOUT_Q      AS INOUT_Q
		        , A.NONRECEIPT_Q AS NONRECEIPT_Q
		        , P.FORMAT_QTY
		     FROM (    SELECT A.COMP_CODE
		                    , A.DIV_CODE
		                    , A.ORDER_NUM
		                    , A.DVRY_DATE
		                    , MAX(A.ITEM_CODE)   AS ITEM_CODE
		                    , COUNT(A.ITEM_CODE) - 1 AS ITEM_CNT
		                    , A.CUSTOM_CODE
		                   -- , A.ORDER_UNIT
		                   -- , A.CONTROL_STATUS
		                    , SUM(A.ORDER_Q) AS INOUT_Q
		                    , SUM(A.ORDER_Q) - SUM(A.INSTOCK_Q) AS NONRECEIPT_Q
		                 FROM MPO200T A
		                WHERE A.CONTROL_STATUS IN ('1','7')
		                  AND ISNULL(A.ORDER_Q, 0) - ISNULL(A.INSTOCK_Q, 0) > 0
		             GROUP BY A.COMP_CODE
		                    , A.DIV_CODE
		                    , A.ORDER_NUM
		                    , A.DVRY_DATE
		                    , A.CUSTOM_CODE
		                   -- , A.ORDER_UNIT
		                   -- , A.CONTROL_STATUS 
		                    ) A
		LEFT JOIN BPR100T B
		       ON A.COMP_CODE   = B.COMP_CODE
		      AND A.ITEM_CODE   = B.ITEM_CODE
		LEFT JOIN BCM100T C
		       ON A.COMP_CODE   = C.COMP_CODE
		      AND A.CUSTOM_CODE = C.CUSTOM_CODE
		LEFT JOIN BSA110T P
		       ON A.COMP_CODE   = P.COMP_CODE
			  AND P.JOB_CODE    = '16'
		    WHERE 1 = 1
		      AND A.COMP_CODE = #{COMP_CODE}
		      AND A.DIV_CODE  = #{DIV_CODE}
		      AND A.DVRY_DATE BETWEEN #{DVRY_FR_DATE} AND #{DVRY_TO_DATE}
	</select>
	
	
	<insert id="pdaCovService.insertPdm100ukrv" parameterType="Map">
	DECLARE @ORDER_UNIT_Q DECIMAL(30, 6)
	      , @ORDER_UNIT_P DECIMAL(30, 6)
	      , @ORDER_UNIT_O DECIMAL(30, 6)
	      , @INOUT_Q DECIMAL(30, 6)
	      , @INOUT_P DECIMAL(30, 6)
	      , @INOUT_I DECIMAL(30, 6)
	      , @INOUT_FOR_P DECIMAL(30, 6)
	      , @INOUT_FOR_O DECIMAL(30, 6)
	
	SET @ORDER_UNIT_Q = #{INOUT_Q}
	SET @ORDER_UNIT_P = #{ORDER_UNIT_P}
	SET @ORDER_UNIT_O = @ORDER_UNIT_Q * @ORDER_UNIT_P
	SET @INOUT_Q      = @ORDER_UNIT_Q
	SET @INOUT_P      = @ORDER_UNIT_P / #{TRNS_RATE} * #{EXCHG_RATE_O}
	SET @INOUT_I      = @ORDER_UNIT_Q * @INOUT_P * #{EXCHG_RATE_O}
	SET @INOUT_FOR_P  = @ORDER_UNIT_P
	SET @INOUT_FOR_O  = @ORDER_UNIT_Q * @ORDER_UNIT_P
	
	INSERT INTO L_BTR100T
			(
			  KEY_VALUE                          ---- 키값
			, OPR_FLAG                           ---- 구분자
			, COMP_CODE                          ---- 화면입력(법인)
			, DIV_CODE                           ---- 화면입력(사업장)
			, INOUT_NUM                          ---- 강제입력('')
			, INOUT_SEQ                          ---- 화면입력(순번)
			, INOUT_TYPE                         ---- 강제입력(수불타입)
			, INOUT_METH                         ---- 강제입력(수불방법)
			, CREATE_LOC                         ---- 강제입력(수불생성)
			, INOUT_TYPE_DETAIL                  ---- 강제입력(수불유형)
			, INOUT_CODE_TYPE                    ---- 강제입력(거래처구분)
			, INOUT_CODE                         ---- 화면입력(거래처코드)
			, INOUT_DATE                         ---- 강제입력(현재일자)
			, ITEM_CODE                          ---- 화면입력(품목코드)
			, ITEM_STATUS                        ---- 강제입력(품목상태)
			, WH_CODE                            ---- 화면입력(창고)
		--	, WH_CELL_CODE                       ---- 화면입력(CELL코드)
		--	, LOT_NO                             ---- 화면입력(LOT_NO)
			, INOUT_PRSN                         ---- 화면입력(입고담당-'PDA'고정)
			, ORDER_UNIT                         ---- 화면입력(입고단위)
			, TRNS_RATE                          ---- 화면입력(입수)
			, ORDER_UNIT_Q                       ---- 화면입력(구매단위수량)
			, ORDER_UNIT_P                       ---- 화면입력(구매단위단가)
			, ORDER_UNIT_O                       ---- 화면입력(금액)
			, ORDER_UNIT_FOR_P                   ---- 내부계산(재고금액)
			, INOUT_Q                            ---- 내부계산(재고단위수량)
			, INOUT_P                            ---- 내부계산(재고단위수량)
			, INOUT_I                            ---- 내부계산(재고금액)
			, INOUT_FOR_P                        ---- 내부계산(재고금액)
			, INOUT_FOR_O                        ---- 내부계산(재고금액)
			, ORDER_TYPE                         ---- 발주구분
			, ORDER_NUM                          ---- 화면입력(발주번호)
			, ORDER_SEQ                          ---- 화면입력(발주순번)
			, MONEY_UNIT                         ---- 화면입력(화폐단위)
			, EXCHG_RATE_O                       ---- 화면입력(환율)
			, ACCOUNT_YNC                        ---- 화면입력기표대상
			, INSPEC_NUM                         ---- 검사번호
			, INSPEC_SEQ                         ---- 검사순번
			, RECEIPT_NUM      					 ---- 접수번호
			, RECEIPT_SEQ                        ---- 접수순번
			, LC_NUM                             ---- LC번호
			, BL_NUM                             ---- B/L번호
			, BASIS_NUM                          ---- 근거번호
			, BASIS_SEQ                          ---- 근거순번
			, BILL_TYPE                          ---- 강제입력('*')
			, SALE_TYPE                          ---- 강제입력('*')
			, PRICE_YN                           ---- 강제입력('Y')
			, SALE_DIV_CODE                      ---- 강제입력('*')
			, SALE_CUSTOM_CODE                   ---- 강제입력('*')
			, SALE_C_YN                          ---- 강제입력('N')
			, INSERT_DB_USER                     ---- 화면입력(사용자)
			, INSERT_DB_TIME                   
			, UPDATE_DB_USER                     ---- 화면입력(사용자)
			, UPDATE_DB_TIME
			)VALUES(
				  #{KEY_VALUE}                              -- KEY_VALUE                  ---- PDA_Log(키값)
				, #{OPR_FLAG}                               -- OPR_FLAG                   ---- PDA_Log(구분자)
				, #{COMP_CODE}                              -- COMP_CODE                  ---- PDA_Log(법인)
				, #{DIV_CODE}                               -- DIV_CODE                   ---- PDA_Log(사업장)
				, ''                                        -- INOUT_NUM                  ---- 고정('')
				, #{INOUT_SEQ}                              -- INOUT_SEQ                  ---- PDA_Log(순번)
				, '1'                                       -- INOUT_TYPE                 ---- 고정(수불타입)	1 입고
				, '1'                                       -- INOUT_METH                 ---- 고정(수불방법)	1 정상 2예외
				, '2'                               		-- CREATE_LOC                 ---- 고정(수불생성)  2:자재
				, '01'                                      -- INOUT_TYPE_DETAIL          ---- 고정(수불유형)	01:발주입고	10 구매입고  99기타입고
				, '4' 										-- INOUT_CODE_TYPE            ---- 고정(거래처구분)  4:거래처
				, #{CUSTOM_CODE}                            -- INOUT_CODE                 ---- PDA_Log(거래처코드)
				, #{INOUT_DATE}								-- INOUT_DATE                 ---- 고정(현재일자)
				, #{ITEM_CODE}                              -- ITEM_CODE                  ---- PDA_Log(품목코드)
				, '1'                                       -- ITEM_STATUS                ---- 고정(품목상태)		1 양품
				, #{WH_CODE}                                -- WH_CODE                    ---- PDA_Log(창고)
				--, WH_CELL_CODE                            -- WH_CELL_CODE               ---- PDA_Log(CELL코드)  		--없음
				--, LOT_NO                                  -- LOT_NO                     ---- PDA_Log(LOT_NO)			--없음	
				, #{INOUT_PRSN}                             -- INOUT_PRSN                 ---- PDA_Log(입고담당-'PDA'고정)
				, #{ORDER_UNIT}                             -- ORDER_UNIT                 ---- PDA_Log(입고단위)
				, #{TRNS_RATE}			                    -- TRNS_RATE                  ---- PDA_Log(입수)
				, @ORDER_UNIT_Q   							-- ORDER_UNIT_Q               ---- PDA_Log(구매단위수량)
				, @ORDER_UNIT_P								-- ORDER_UNIT_P               ---- PDA_Log(구매단위단가 )
				, @ORDER_UNIT_O 				  			-- ORDER_UNIT_O               ---- PDA_Log(금액)
				, @ORDER_UNIT_P                            	-- ORDER_UNIT_FOR_P           ---- PDA_Log(구매단위단가 )
				, @INOUT_Q									-- INOUT_Q                    ---- 내부계산(재고단위수량)
				, @INOUT_P									-- INOUT_P                    ---- 내부계산(재고단위수량)
				, @INOUT_I									-- INOUT_I                    ---- 내부계산(재고금액)

				, @INOUT_FOR_P								-- INOUT_FOR_P
				, @INOUT_FOR_O								-- INOUT_FOR_O

				, '1' 			                            -- ORDER_TYPE                 ---- 발주구분('1'-내수, '4'-외주)	--없음
				, #{ORDER_NUM}                              -- ORDER_NUM                  ---- 발주번호					--없음
				, #{ORDER_SEQ}                              -- ORDER_SEQ                  ---- 발주순번					--없음
				
				, (SELECT ISNULL(MONEY_UNIT,'KRW') FROM BCM100T WHERE COMP_CODE = #{COMP_CODE} AND CUSTOM_CODE = #{CUSTOM_CODE})          --  MONEY_UNIT                 ---  PDA_Log(화폐단위)
				
				, #{EXCHG_RATE_O}                           -- EXCHG_RATE_O               ---- PDA_Log(환율)
				
				,'Y'                                        -- ACCOUNT_YNC                ---- 기표대상
				, #{INSPEC_NUM}                             -- INSPEC_NUM                 ---- 검사번호
				, #{INSPEC_SEQ}                             -- INSPEC_SEQ                 ---- 검사순번
				, #{RECEIPT_NUM}                            -- RECEIPT_NUM                 ---- 접수번호
				, #{RECEIPT_SEQ}                            -- RECEIPT_SEQ                 ---- 접수순번
				, ''										-- LC_NUM                     ---- LC번호                           
				, ''										-- BL_NUM                     ---- B/L번호
				, ''										-- BASIS_NUM                  ---- 근거번호
				, NULL										-- BASIS_SEQ                  ---- 근거순번
				,'*'                                        -- BILL_TYPE                  ---- 고정('*')
				,'*'                                        -- SALE_TYPE                  ---- 고정('*')
				,'Y'                                        -- PRICE_YN                   ---- 고정('Y')
				,'*'                                        -- SALE_DIV_CODE              ---- 고정('*')
				,'*'                                        -- SALE_CUSTOM_CODE           ---- 고정('*')
				,'N'                                        -- SALE_C_YN                  ---- 고정('N')
				
				,#{S_USER_ID}                           
				,GETDATE()
				,#{S_USER_ID}                         
				,GETDATE()
	)
	
	</insert>
	<update id="pdaCovService.spReceiving" parameterType="Map" statementType="CALLABLE">
			
			{call SP_MATRL_Receiving (
	            #{CreateType,  mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
	        	#{KeyValue,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
	        	#{LangCode,    mode=IN,    jdbcType=VARCHAR, javaType=java.lang.String},
	        	#{InOutNum,    mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String},
	        	#{ErrorDesc,   mode=OUT,   jdbcType=VARCHAR, javaType=java.lang.String}
			)}
	</update>		

	<select id="pdaCovService.searchListPds200ukrvMain" parameterType="Map" resultType="rMap">
SELECT 
		X.COMP_CODE		
		,X.DIV_CODE
		,X.INOUT_TYPE_DETAIL				as inoutTypeDetail
		,X.CUSTOM_CODE						as customCode
		,R2.CUSTOM_NAME						as customName
		,X.WH_CODE							as whCode				--출고창고
		,X.ITEM_CODE						as itemCode
		, M2.ITEM_NAME						as itemName				--품명
		, ISNULL(M2.SPEC,'')				as spec					--규격
		,X.LOT_NO							as lotNo				--LOT
		,X.ORDER_UNIT						as orderUnit			--판매단위
		,X.TRANS_RATE						as transRate
		,X.ISSUE_REQ_PRICE					as issueReqPrice
		,(X.ISSUE_REQ_QTY - X.ISSUE_QTY)	as outQ					--잔량 (남은 출고량)
		,X.ORDER_TYPE						as orderType
		,X.MONEY_UNIT						as moneyUnit
		,X.EXCHANGE_RATE					as exchangeRate
		,ISNULL(X.ACCOUNT_YNC, '')			as accountYnc
		,X.BILL_TYPE						as billType
   		,X.PRICE_YN							as priceYn
		,X.SALE_CUSTOM_CODE					as saleCustomCode
		,ISNULL(X.ORDER_NUM, '')			as orderNum
        ,ISNULL(X.SER_NO, 0)				as orderSeq
        ,ISNULL(X.ISSUE_REQ_NUM, '')		as issueReqNum
        ,ISNULL(X.ISSUE_REQ_SEQ, 0)			as issueReqSeq			--순번
		,X.TAX_TYPE							as taxType
		,P.FORMAT_QTY                       as formatQty

		FROM SRQ100T X WITH (NOLOCK)
  INNER JOIN SOF100T A WITH (NOLOCK) ON A.COMP_CODE = X.COMP_CODE 
  									AND A.DIV_CODE = X.DIV_CODE 
  									AND A.ORDER_NUM = X.ORDER_NUM
  INNER JOIN SOF110T B WITH (NOLOCK) ON B.COMP_CODE = X.COMP_CODE 
  									AND B.DIV_CODE = X.DIV_CODE 
  									AND B.ORDER_NUM = X.ORDER_NUM 
  									AND B.SER_NO = X.SER_NO
  INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE 
  									 AND M1.SUB_CODE = A.ORDER_TYPE 
  									 AND M1.MAIN_CODE = 'S002'
  INNER JOIN BPR100T M2 WITH (NOLOCK) ON M2.COMP_CODE = X.COMP_CODE 
  								     AND M2.ITEM_CODE = X.ITEM_CODE
  LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = X.COMP_CODE
  								   AND R1.DIV_CODE = X.DIV_CODE
  								   AND R1.ITEM_CODE = X.ITEM_CODE
LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								 AND R2.CUSTOM_CODE = A.CUSTOM_CODE
   LEFT JOIN (
		SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, CONTAINER_NO, SEAL_NO, SUM(INOUT_Q) INOUT_Q
		  FROM BTR100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND INOUT_TYPE = '2'
		   AND CREATE_LOC = '1'
	  GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, CONTAINER_NO, SEAL_NO
	) D ON D.COMP_CODE = X.COMP_CODE 
	   AND D.DIV_CODE = X.DIV_CODE 
	   AND D.ORDER_NUM = X.ORDER_NUM 
	   AND D.ORDER_SEQ = X.SER_NO
  LEFT JOIN BSA110T P WITH(NOLOCK)  ON P.COMP_CODE = X.COMP_CODE
			                       AND P.JOB_CODE  = '14'
	   
	  WHERE X.COMP_CODE = #{COMP_CODE}
		AND X.DIV_CODE = #{DIV_CODE}
		AND X.ISSUE_REQ_NUM = #{ISSUE_REQ_NUM}
       AND X.ISSUE_REQ_QTY    > X.ISSUE_QTY
       AND ISNULL(B.ORDER_STATUS,'N')      = 'N'           /* 마감여부 */
       AND ISNULL(X.REF_LOC, '1') = '1'
		
ORDER BY X.COMP_CODE , X.DIV_CODE, X.ISSUE_REQ_NUM, X.ISSUE_REQ_SEQ

</select>
<insert id="pdaCovService.insertPds200ukrv" parameterType="Map">
INSERT INTO L_BTR100T
(
	  KEY_VALUE             
	, OPR_FLAG              
	, COMP_CODE             
	, DIV_CODE              
	, INOUT_NUM             
	, INOUT_SEQ             
	, INOUT_TYPE            
	, INOUT_METH            
	, CREATE_LOC            
	, INOUT_TYPE_DETAIL     
	, INOUT_CODE_TYPE       
	, INOUT_CODE            
	, INOUT_DATE            
	, ITEM_CODE             
	, ITEM_STATUS           
	, WH_CODE    
	         
	, LOT_NO                
	, INOUT_PRSN            
	, ORDER_UNIT            
	, TRNS_RATE             
	, ORDER_UNIT_Q          
	, ORDER_UNIT_P          
	, ORDER_UNIT_O          
	, ORDER_UNIT_FOR_P      
	, INOUT_Q               
	, INOUT_P               
	, INOUT_I               
	, INOUT_FOR_P           
	, INOUT_FOR_O           
	, ORDER_TYPE            
	, MONEY_UNIT            
	, EXCHG_RATE_O          
	, ACCOUNT_YNC           
	--, INSPEC_NUM            
	--, INSPEC_SEQ          
	--, LC_NUM                
	--, BL_NUM                
	--, BASIS_NUM             
	--, BASIS_SEQ             
	, BILL_TYPE             
	, SALE_TYPE             
	, PRICE_YN              
	, SALE_DIV_CODE         
	, SALE_CUSTOM_CODE      
	, SALE_C_YN             
	, INSERT_DB_USER        
	, INSERT_DB_TIME        
	, UPDATE_DB_USER        
	, UPDATE_DB_TIME
	, ORDER_NUM
	, ORDER_SEQ
	, ISSUE_REQ_NUM
	, ISSUE_REQ_SEQ
	,TAX_TYPE
)VALUES( 
	  #{KEY_VALUE} 																														--KEY_VALUE          								
	, #{OPR_FLAG}                                                                                                                       --OPR_FLAG           
	, #{COMP_CODE}                                                                                                                       --COMP_CODE          
	, #{DIV_CODE}                                                                                                                        --DIV_CODE           
	, ''                                                                                                                                --INOUT_NUM          
	, #{INOUT_SEQ}                                                                                                                     --INOUT_SEQ          
	, '2'                                       -- INOUT_TYPE                 ---- 고정(수불타입)	2 출고                              --INOUT_TYPE         
	, '1'                                       -- INOUT_METH                 ---- 고정(수불방법)	1 정상 2예외                        --INOUT_METH         
	, '1'                               		-- CREATE_LOC                 ---- 고정(수불생성)  1:영업                               --CREATE_LOC         
	, #{INOUT_TYPE_DETAIL}                                      -- INOUT_TYPE_DETAIL          ---- 고정(수불유형)		 99예외출고                     --INOUT_TYPE_DETAIL  
	, '4' 										-- INOUT_CODE_TYPE            ---- 고정(거래처구분)  4:거래처                           --INOUT_CODE_TYPE    
	, #{CUSTOM_CODE}                                                                                                                     --INOUT_CODE         
	, #{INOUT_DATE}                                                                                                                   --INOUT_DATE         
	, #{ITEM_CODE}                                                                                                                       --ITEM_CODE          
	, '1'                                                                                                                               --ITEM_STATUS        
	, #{WH_CODE}                                                                                                                    --WH_CODE
	          
	, #{LOT_NO}                                                                                                                           --LOT_NO             
	, #{INOUT_PRSN}                                                                                                                     --INOUT_PRSN         
	, #{ORDER_UNIT}	-- 단위                                                                                                         --ORDER_UNIT         
	, ${TRANS_RATE}						                                                                                                --TRNS_RATE          
	, ${OUT_Q}      		                                                                                                        --ORDER_UNIT_Q       
	, ${ISSUE_REQ_PRICE}			                                                                                                    --ORDER_UNIT_P       
	, ${OUT_Q}  * ${ISSUE_REQ_PRICE}	                                                                                            --ORDER_UNIT_O       
	, ${ISSUE_REQ_PRICE}	                                                                                                            --ORDER_UNIT_FOR_P   
	, ${OUT_Q}		                                                                                                                --INOUT_Q            
	, ${ISSUE_REQ_PRICE} / ${TRANS_RATE} * ${EXCHANGE_RATE}                                                                                                            --INOUT_P            
	, ${OUT_Q} * ${ISSUE_REQ_PRICE} * ${EXCHANGE_RATE}                                                                                           --INOUT_I            
	, ${ISSUE_REQ_PRICE}	                                                                                                            --INOUT_FOR_P        
	, ${OUT_Q} * ${ISSUE_REQ_PRICE}	                                                                                            --INOUT_FOR_O        
	, #{ORDER_TYPE} 	                                                                                                                            --ORDER_TYPE         
	, #{MONEY_UNIT}         --  MONEY_UNIT                                                    
	, ${EXCHANGE_RATE}                                                                                                                                  --EXCHG_RATE_O       
	, #{ACCOUNT_YNC}                                                                                                                                --ACCOUNT_YNC        
	--, ''				                                                                                                                --INSPEC_NUM         
	--, 0					                                                                                                                --INSPEC_SEQ         
	--, ''				                                                                                                                --LC_NUM             
	--, ''				                                                                                                                --BL_NUM             
	--, ''				                                                                                                                --BASIS_NUM          
	--, NULL				                                                                                                                --BASIS_SEQ          
	,#{BILL_TYPE}            				--				 BILL_TYPE                                                              --BILL_TYPE          
	, #{ORDER_TYPE}                           --				 SALE_TYPE                                                          --SALE_TYPE          
	,#{PRICE_YN}                            --				 PRICE_YN                                                                           --PRICE_YN           
	, #{DIV_CODE}                            --				 SALE_DIV_CODE                                                              --SALE_DIV_CODE      
	, #{SALE_CUSTOM_CODE}                            --				 SALE_CUSTOM_CODE                                                                   --SALE_CUSTOM_CODE   
	,'N'                                                                                                                                --SALE_C_YN          
	,#{S_USER_ID}                                                                                                                       --INSERT_DB_USER     
	,GETDATE()                                                                                                                          --INSERT_DB_TIME     
	,#{S_USER_ID}                                                                                                                       --UPDATE_DB_USER     
	,GETDATE()                                                                                                                          --UPDATE_DB_TIME
	,#{ORDER_NUM}                                                                                                                       --ORDER_NUM
	,#{ORDER_SEQ}                                                                                                                       --ORDER_SEQ
	,#{ISSUE_REQ_NUM}                                                                                                                   --ISSUE_REQ_NUM
	,#{ISSUE_REQ_SEQ}	                                                                                                                --ISSUE_REQ_SEQ
	,#{TAX_TYPE}
)
</insert>

<update id="pdaCovService.spCallPds200ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_SALES_STR103UKR (
		#{KeyValue		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		#{InOutNum		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
		#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
		#{SalePrsnChk	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
	)}
</update>

<select id="pdaCovService.searchListPdv100skrvMain" parameterType="Map" resultType="rMap">
		   SELECT ROW_NUMBER() OVER(ORDER BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE) AS ROW_NUM
	        , A.COMP_CODE
	        , A.DIV_CODE
	        , A.WH_CODE
	        , W.TREE_NAME
	        , A.ITEM_CODE
	        , I.ITEM_NAME
	        , I.SPEC
	        , I.STOCK_UNIT
	        , A.STOCK_Q
	        , A.GOOD_STOCK_Q
	        , A.BAD_STOCK_Q
	        , P.FORMAT_QTY
	     FROM BIV100T A (NOLOCK)
	LEFT JOIN BSA220T W (NOLOCK)
	       ON A.COMP_CODE          = W.COMP_CODE
	      AND A.WH_CODE            = W.TREE_CODE
	LEFT JOIN BPR100T I (NOLOCK)
	       ON A.COMP_CODE          = I.COMP_CODE
	      AND A.ITEM_CODE          = I.ITEM_CODE
	LEFT JOIN BSA110T P
		    ON A.COMP_CODE         = P.COMP_CODE
		   AND P.JOB_CODE          = '18'
	    WHERE A.COMP_CODE          = #{COMP_CODE}
	      AND A.DIV_CODE           = #{DIV_CODE}
		  AND ISNULL(A.STOCK_Q, 0) > 0
	      AND (A.ITEM_CODE LIKE '%' + #{ITEM_TEXT} + '%' OR I.ITEM_NAME LIKE '%' + #{ITEM_TEXT} + '%')
</select>

	<select id="pdaCovService.searchListPdp100skrvMain" parameterType="Map" resultType="rMap">
       BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON


    -- 명칭 조회 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @RefItem            NVARCHAR(01)

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = #{S_USER_ID}

        SET @RefItem = ISNULL(@RefItem, '0')

    -- 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @DateFormat             NVARCHAR(10)

        SELECT TOP 1 @DateFormat = CODE_NAME
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE = #{COMP_CODE}
        AND    MAIN_CODE = 'B044'
        AND    REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY-MM-DD')
    -------------------------------------------------------------------------------------------------------------

        SELECT  Top 1 -- 1건만 표기(top 삭제시 공정별 조회)   
        		-- 상단영역
 				  A.COMP_CODE			AS TOP_COMP_CODE
				, A.DIV_CODE			AS TOP_DIV_CODE
				, A.WORK_SHOP_CODE		AS TOP_WORK_SHOP_CODE
				, D2.TREE_NAME			AS TOP_WORK_SHOP_NAME
		
				, A.WKORD_NUM			AS TOP_WKORD_NUM
				, C1.ITEM_CODE			AS TOP_ITEM_CODE
				, C1.ITEM_NAME			AS TOP_ITEM_NAME
				, C1.SPEC				AS TOP_SPEC
				, C.WKORD_Q				AS TOP_WKORD_Q      -- 수량

				,(CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
					   THEN ''
					   ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
															   , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
															   , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
				  END) AS TOP_PRODT_WKORD_DATE
				, CONVERT(NVARCHAR(10),
				  REPLACE(
				  REPLACE(
				  REPLACE(@DateFormat, 'YYYY', SUBSTRING(C.PRODT_END_DATE, 1, 4))
				                     , 'MM',   SUBSTRING(C.PRODT_END_DATE, 5, 2))
				                     , 'DD',   SUBSTRING(C.PRODT_END_DATE, 7, 2)))	AS TOP_PRODT_END_DATE   -- 생산완료일
				, S1.SALE_CUST_CD		AS TOP_CUSTOM_CODE
				
				--20190124 수정
				--, C2.CUSTOM_NAME		AS TOP_CUSTOM_NAME
				, CASE WHEN ISNULL(C2.CUSTOM_NAME, '') = '' THEN A.CUSTOM_NAME
					   ELSE ISNULL(C2.CUSTOM_NAME, '')
				  END					AS TOP_CUSTOM_NAME
				
				, S1.ITEM_CODE	AS TOP_CUSTOM_ITEM_CODE
				, CONVERT(NVARCHAR(10),
				  REPLACE(
				  REPLACE(
				  REPLACE(@DateFormat, 'YYYY', SUBSTRING(S1.DVRY_DATE, 1, 4))
				                     , 'MM',   SUBSTRING(S1.DVRY_DATE, 5, 2))
				                     , 'DD',   SUBSTRING(S1.DVRY_DATE, 7, 2)))	AS TOP_DELIV_DATE
				, A.LOT_NO				AS LOT_NO
				, C1.SPEC_NUM			AS TOP_SPEC_NUM		--도면번호

				-- 작업지시내역
				, A.LINE_SEQ              -- 순번
				, A.PROG_WORK_CODE                                                    AS PROG_WORK_CODE
				, D1.PROG_WORK_NAME                                                   AS PROG_WORK_NAME
				, A.WKORD_NUM                                                         AS WKORD_NUM
				, A.ITEM_CODE                                                         AS ITEM_CODE
				, CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
				       WHEN @RefItem = '1' THEN C1.ITEM_NAME1
				       WHEN @RefItem = '2' THEN C1.ITEM_NAME2
				       ELSE C1.ITEM_NAME
				  END                                                                 AS ITEM_NAME
				, C1.SPEC                                                             AS SPEC
				, C1.STOCK_UNIT                                                       AS STOCK_UNIT
				, A.PROG_UNIT					--단위
				, A.MOLD_CODE				AS TOP_EQU_CODE		--금형번호
				
				, ISNULL(A.WKORD_Q, 0.0)                                              AS WKORD_Q
				, ISNULL(A.PRODT_Q, 0.0)                                              AS PRODT_Q
				, A.REMARK                                                            AS REMARK1
				
				, R1.CODE_NAME				AS WKORD_PRSN_NAME
				, ISNULL(C1.REIM,0)			AS PITCH
				, ISNULL(R4.ARRAY_CNT,0)	AS CAVITY

				--20190129 추가
				, A.WORK_SHOP_CODE
				, D2.TREE_NAME				AS WORK_SHOP_NAME
				, A.REMARK
				, A.WKORD_PRSN
				, A.SO_NUM
				, P.FORMAT_QTY
        FROM                PMP100T A  WITH (NOLOCK)
                LEFT  JOIN  PPL100T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
                                                    AND  B.DIV_CODE       = A.DIV_CODE
                                                    AND  B.WK_PLAN_NUM    = A.WK_PLAN_NUM
			   LEFT JOIN (SELECT 
							 S1.COMP_CODE
							,S1.DIV_CODE
							,S1.WKORD_NUM
							,S1.WKORD_Q
							,S1.PRODT_END_DATE
							FROM PMP100T S1 WITH(NOLOCK)   
						   WHERE S1.COMP_CODE	= #{COMP_CODE}
							 AND S1.DIV_CODE	= #{DIV_CODE}
							 AND S1.WKORD_NUM	= #{WKORD_NUM}
							 AND S1.LINE_END_YN = 'Y'
						) C ON C.COMP_CODE = A.COMP_CODE
						   AND C.DIV_CODE = A.DIV_CODE
                LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                    AND C1.ITEM_CODE      = A.ITEM_CODE
                LEFT  JOIN  PBS200T D1 WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
                                                    AND D1.DIV_CODE       = A.DIV_CODE
                                                    AND D1.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                    AND D1.PROG_WORK_CODE = A.PROG_WORK_CODE
                LEFT  JOIN  BSA230T D2 WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
                                                    AND D2.TYPE_LEVEL     = A.DIV_CODE
                                                    AND D2.TREE_CODE      = A.WORK_SHOP_CODE
                LEFT  JOIN  SOF110T S1 WITH (NOLOCK) ON S1.COMP_CODE      = B.COMP_CODE
                                                    AND S1.OUT_DIV_CODE       = B.DIV_CODE
                                                    AND S1.ORDER_NUM      = B.ORDER_NUM
                                                    AND S1.SER_NO         = B.SEQ
                LEFT  JOIN  TEA110T T1 WITH (NOLOCK) ON T1.COMP_CODE      = B.COMP_CODE
                                                    AND T1.DIV_CODE       = B.DIV_CODE
                                                    AND T1.SO_SER_NO      = B.ORDER_NUM
                                                    AND T1.SO_SER         = B.SEQ
                LEFT  JOIN  BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE      = S1.COMP_CODE
                                                    AND C2.CUSTOM_CODE    = S1.SALE_CUST_CD

			    LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
   												 AND R1.MAIN_CODE = 'P510'
   												 AND R1.SUB_CODE != '$'
   												 AND R1.SUB_CODE = A.WKORD_PRSN
				LEFT JOIN BPR200T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
												AND R4.DIV_CODE  = A.DIV_CODE
										        AND R4.ITEM_CODE = A.ITEM_CODE
				LEFT JOIN BSA110T P  WITH(NOLOCK) ON P.COMP_CODE = A.COMP_CODE
												AND P.JOB_CODE   = '15'
        WHERE   A.COMP_CODE         = #{COMP_CODE}
        AND     A.DIV_CODE          = #{DIV_CODE}
        AND     A.WKORD_NUM			= #{WKORD_NUM}

        ORDER BY A.PROG_WORK_CODE, A.WKORD_NUM, A.ITEM_CODE, A.PRODT_START_DATE

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END 


	</select>   
	
</mapper>