<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pdaStockOutService">

	<insert id="pdaStockOutService.insertManufactureLogData" parameterType="Map">
    	INSERT INTO L_PDM510_PDA(
			KEY_VALUE, 			OPR_FLAG, 			CREATE_TYPE, 			ORDER_TYPE,
			COMP_CODE, 			DIV_CODE, 			CUSTOM_CODE,			MONEY_UNIT, 		EXCHG_RATE_O, 		
			INOUT_SEQ,			ITEM_CODE, 			ORDER_UNIT, 			TRNS_RATE, 			ORDER_UNIT_Q, 		ORDER_UNIT_P,
			WH_CODE, 			WH_CELL_CODE, 		INOUT_CODE, 			ITEM_STATUS,
			TO_DIV_CODE, 		TO_WH_CODE, 		TO_WH_CELL_CODE,		LOT_NO,				OUTSTOCK_NUM,
			REF_WKORD_NUM,		PRODT_NUM,			ORDER_NUM,				ORDER_SEQ,
			INSPEC_NUM,			INSPEC_SEQ,			BASIS_NUM,				BASIS_SEQ,
			PATH_CODE,			PROJECT_NO,			REMARK,					LC_NO,				BL_NO,
			INSERT_DB_USER,		INSERT_DB_TIME,		UPDATE_DB_USER,			UPDATE_DB_TIME,
			TEMPC_01,			TEMPC_02,			TEMPC_03,				TEMPN_01,			TEMPN_02,			TEMPN_03,
			S_GUBUN_KD)
		VALUES(
			#{KEY_VALUE}, 		#{OPR_FLAG}, 		#{CREATE_TYPE}, 		#{ORDER_TYPE},
			#{COMP_CODE}, 		#{DIV_CODE}, 		#{CUSTOM_CODE},			#{MONEY_UNIT}, 		#{EXCHG_RATE_O}, 		
			#{INOUT_SEQ},		#{ITEM_CODE}, 		#{ORDER_UNIT}, 			#{TRNS_RATE}, 		#{ORDER_UNIT_Q}, 	#{ORDER_UNIT_P},
			#{WH_CODE}, 		#{WH_CELL_CODE}, 	#{INOUT_CODE}, 			#{ITEM_STATUS},
			#{TO_DIV_CODE}, 	#{TO_WH_CODE}, 		#{TO_WH_CELL_CODE},		#{LOT_NO},			#{OUTSTOCK_NUM},
			#{REF_WKORD_NUM},	#{PRODT_NUM},		#{ORDER_NUM},			#{ORDER_SEQ},
			#{INSPEC_NUM},		#{INSPEC_SEQ},		#{BASIS_NUM},			#{BASIS_SEQ},
			#{PATH_CODE},		#{PROJECT_NO},		#{REMARK},				#{LC_NO},			#{BL_NO},
			#{S_USER_ID},		GETDATE(),			#{S_USER_ID},			GETDATE(),
			#{TEMPC_01},		#{TEMPC_02},		#{TEMPC_03},			#{TEMPN_01},		#{TEMPN_02},		#{TEMPN_03},
			#{S_GUBUN_KD})
	</insert>
	
	<insert id="pdaStockOutService.insertProductLogData" parameterType="Map">
    	INSERT INTO L_BTR100T
		     ( KEY_VALUE,         OPR_FLAG
		     , COMP_CODE,         DIV_CODE,        INOUT_NUM,      INOUT_SEQ,       INOUT_TYPE,        INOUT_METH
		     , INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE,     WH_CODE,         INOUT_DATE
		     , ITEM_CODE,         ITEM_STATUS,     INOUT_Q,        INOUT_P,         INOUT_I
		     , MONEY_UNIT,        INOUT_FOR_P,     INOUT_FOR_O,    EXCHG_RATE_O,    ORDER_TYPE
		     , ORDER_NUM,         ORDER_SEQ,       INOUT_PRSN,     BASIS_NUM,       BASIS_SEQ
		     , ACCOUNT_YNC,       ACCOUNT_Q,       CREATE_LOC,     SALE_C_YN,       REMARK
		     , ORDER_UNIT,        TRNS_RATE,       PROJECT_NO,     ORDER_UNIT_Q,    ORDER_UNIT_P
		     , ORDER_UNIT_FOR_P,  ISSUE_REQ_NUM,   ISSUE_REQ_SEQ,  DVRY_CUST_CD,    DISCOUNT_RATE
		     , INOUT_TAX_AMT,     TAX_TYPE,        LOT_NO,         SALE_DIV_CODE,   SALE_CUSTOM_CODE
		     , BILL_TYPE,         SALE_TYPE,       PRICE_YN,       ORDER_UNIT_O,    SALE_PRSN
		     , FR_ACCOUNT,        TO_ACCOUNT,      LC_NUM,         TRADE_LOC
		     , DELIVERY_DATE,     DELIVERY_TIME,   WH_CELL_CODE,   AGENT_TYPE,      DEPT_CODE
		     , TRANS_COST,        PRICE_TYPE,      INOUT_WGT_Q,    INOUT_FOR_WGT_P, INOUT_WGT_P
		     , INOUT_VOL_Q,       INOUT_FOR_VOL_P, INOUT_VOL_P,    WGT_UNIT,        UNIT_WGT
		     , VOL_UNIT,          UNIT_VOL,        NATION_INOUT,   SALE_C_DATE,     UPDATE_DB_USER
		     , UPDATE_DB_TIME

		     )
		SELECT  #{KEY_VALUE}                                                    -- KEY_VALUE
		      , #{OPR_FLAG}                                          			-- OPR_FLAG
		      , #{COMP_CODE}                                 					-- COMP_CODE
		      , #{DIV_CODE}                                 					-- DIV_CODE
		      , #{INOUT_NUM}                                					-- INOUT_NUM
		      , #{INOUT_SEQ}                                					-- INOUT_SEQ
		      , N'2'                                                            -- INOUT_TYPE
		      , #{INOUT_METH}                         							-- INOUT_METH
		      , #{INOUT_TYPE_DETAIL}                         					-- INOUT_TYPE_DETAIL
		      , N'4'                                                            -- INOUT_CODE_TYPE
		      , #{INOUT_CODE}                               					-- INOUT_CODE
		      , #{WH_CODE}                               						-- WH_CODE
		      , #{INOUT_DATE}                              					    -- INOUT_DATE
		      , #{ITEM_CODE}                               						-- ITEM_CODE
		      , #{ITEM_STATUS}                               					-- ITEM_STATUS
		      , ${ORDER_UNIT_Q} * ${TRNS_RATE}                                 	-- INOUT_Q
		      , #{INOUT_P}               										-- INOUT_P
		      , #{INOUT_I}                               						-- INOUT_I
		      , #{MONEY_UNIT}                               					-- MONEY_UNIT
		      , #{INOUT_FOR_P}                                 					-- INOUT_FOR_P
		      , #{INOUT_FOR_O}                                                 	-- INOUT_FOR_O
		      , #{EXCHG_RATE_O}                               					-- EXCHG_RATE_O
		      , #{ORDER_TYPE}                               					-- ORDER_TYPE
		      , #{ORDER_NUM}                               						-- ORDER_NUM
		      , #{ORDER_SEQ}                              						-- ORDER_SEQ
		      , #{INOUT_PRSN}                               					-- INOUT_PRSN
		      , #{BASIS_NUM}                            					    -- BASIS_NUM
		      , #{BASIS_SEQ}                               						-- BASIS_SEQ
		      , #{ACCOUNT_YNC}                               					-- ACCOUNT_YNC
		      ,   0                                                             -- ACCOUNT_Q
		      , #{CREATE_LOC}                                					-- CREATE_LOC
		      , N'N'                                                            -- SALE_C_YN
		      , #{REMARK}                             							-- REMARK
		      , #{ORDER_UNIT}                             						-- ORDER_UNIT
		      , #{TRNS_RATE}                             						-- TRNS_RATE
		      , #{PLAN_NUM}                             						-- PROJECT_NO
		      , #{ORDER_UNIT_Q}                             					-- ORDER_UNIT_Q
		      , #{ORDER_UNIT_P}                             					-- ORDER_UNIT_P
		      , #{ORDER_UNIT_FOR_P}                             				-- ORDER_UNIT_FOR_P
		      , #{ISSUE_REQ_NUM}                            					-- ISSUE_REQ_NUM
		      , #{ISSUE_REQ_SEQ}                             					-- ISSUE_REQ_SEQ
		      , #{DVRY_CUST_CD}                             					-- DVRY_CUST_CD
		      , #{DISCOUNT_RATE}                             					-- DISCOUNT_RATE
		      , #{INOUT_TAX_AMT}                              					-- INOUT_TAX_AMT
		      , #{TAX_TYPE}                          							-- TAX_TYPE
		      , #{LOT_NO}                          								-- LOT_NO
		      , #{SALE_DIV_CODE}                      							-- SALE_DIV_CODE
		      , #{SALE_CUSTOM_CODE}                  							-- SALE_CUSTOM_CODE
		      , #{BILL_TYPE}                          							-- BILL_TYPE
		      , #{SALE_TYPE}                          							-- SALE_TYPE
		      , #{PRICE_YN}                          							-- PRICE_YN
		      , #{ORDER_UNIT_O}                         						-- ORDER_UNIT_O
		      , #{SALE_PRSN}                          							-- SALE_PRSN
		      , ITEM_ACCOUNT                                                            -- FR_ACCOUNT
		      , CASE WHEN ITEM_ACCOUNT >= N'40' THEN N'00' ELSE ITEM_ACCOUNT END        -- TO_ACCOUNT
		      , #{LC_SER_NO}                                 					-- LC_NUM
		      , CASE WHEN #{CREATE_LOC} = '5' THEN
		             CASE WHEN #{PAY_METHODE1}  = 'MLC' THEN '1'
		                  WHEN #{PAY_METHODE1}  = 'LLC' THEN '2'
		                  WHEN #{ISSUE_REQ_NUM} != ''   THEN '4'
		                  ELSE '3'
		              END
		             ELSE #{CREATE_LOC}
		         END                                                            -- TRADE_LOC
		      , #{DELIVERY_DATE}                            					-- DELIVERY_DATE
		      , #{DELIVERY_TIME}                            					-- DELIVERY_TIME
		      , #{WH_CELL_CODE}                            						-- WH_CELL_CODE
		      , #{AGENT_TYPE}                           						-- AGENT_TYPE
		      , #{DEPT_CODE}                            						-- DEPT_CODE
		      , #{TRANS_CODE}                            						-- TRANS_CODE
		      , #{PRICE_TYPE}                            						-- PRICE_TYPE
		      , #{INOUT_WGT_Q}                           						-- INOUT_WGT_Q
		      , #{INOUT_FOR_WGT_P}                           					-- INOUT_FOR_WGT_P
		      , #{INOUT_WGT_P}                            						-- INOUT_WGT_P
		      , #{INOUT_VOL_Q}                            						-- INOUT_VOL_Q
		      , #{INOUT_FOR_VOL_P}                            					-- INOUT_FOR_VOL_P
		      , #{INOUT_VOL_P}                            						-- INOUT_VOL_P
		      , #{WGT_UNIT}                           							-- WGT_UNIT
		      , #{UNIT_WGT}                            							-- UNIT_WGT
		      , #{VOL_UNIT}                            							-- VOL_UNIT
		      , #{UNIT_VOL}                            							-- UNIT_VOL
		      , #{NATION_INOUT}                                                 -- 국내외구분
		      , #{SALE_DATE}                                                    -- 매출일
		      , #{S_USER_ID}                            					-- UPDATE_DB_USER
		      , GETDATE()                                                    	-- UPDATE_DB_TIME
         FROM    BPR200T WITH (NOLOCK)
		WHERE   COMP_CODE = #{COMP_CODE}
		AND     DIV_CODE  = #{DIV_CODE}
		AND     ITEM_CODE = #{ITEM_CODE}
	</insert>
	
	
	<insert id="pdaStockOutService.insertStockOutExternalLogData" parameterType="Map">
		INSERT INTO L_BTR100T
		     ( KEY_VALUE		    
		     , OPR_FLAG
		     , INOUT_NUM
	         , INOUT_SEQ
	         , INOUT_TYPE
	         , INOUT_PRSN
	         , INOUT_METH
	         , INOUT_TYPE_DETAIL
	         , INOUT_CODE_TYPE
	         , INOUT_CODE
	         , ITEM_CODE
	         , WH_CODE
	         , WH_CELL_CODE
	         , LOT_NO
	         , INOUT_Q
	         , ITEM_STATUS
	         , INOUT_DATE
	         , COMP_CODE
	         , DIV_CODE
	         , EXPENSE_I
	         , MONEY_UNIT
	         , ORDER_TYPE
	         , ACCOUNT_Q
	         , CREATE_LOC
	         , SALE_C_YN
	         , SALE_DIV_CODE
	         , SALE_CUSTOM_CODE
	         , BILL_TYPE
	         , SALE_TYPE
	         , REMARK
	         , ORDER_NUM
	         , ORDER_SEQ
	         , PROJECT_NO
	         , S_GUBUN_KD
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME)
		VALUES
		     ( #{KEY_VALUE}		    
		     , #{OPR_FLAG}
		     , #{INOUT_NUM}       
		     , #{INOUT_SEQ}             
		     , #{INOUT_TYPE}
		     , #{INOUT_PRSN}
		     , #{INOUT_METH}        
		     , #{INOUT_TYPE_DETAIL}     
		     , #{INOUT_CODE_TYPE}       
		     , #{INOUT_CODE}
		     , #{ITEM_CODE}             
		     , #{WH_CODE}
	         , #{WH_CELL_CODE}
		     , #{LOT_NO}  
		     , #{ORDER_UNIT_Q}               
		     , #{ITEM_STATUS}           
		     , #{INOUT_DATE}        
		     , #{COMP_CODE}        
		     , #{DIV_CODE}
		     , #{EXPENSE_I}
		     , #{MONEY_UNIT}            
		     , #{ORDER_TYPE}            
		     , #{ACCOUNT_Q}            
		     , #{CREATE_LOC}			
		     , #{SALE_C_YN}             
		     , #{SALE_DIV_CODE}
		     , #{SALE_CUSTOM_CODE}
		     , #{BILL_TYPE}
		     , #{SALE_TYPE}
		     , #{REMARK}
		     , #{ORDER_NUM}
	         , #{ORDER_SEQ}
		     , #{PROJECT_NO}
		     , #{S_GUBUN_KD}
		     , #{S_USER_ID}
		     , GETDATE())
	</insert>
	
	<update id="pdaStockOutService.spStockOutMaterialProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_PDA_SetMatrlOutTrans (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
	
	<update id="pdaStockOutService.spStockOutProductProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Str103ukr (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{SalePrsnChk, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
	
	<update id="pdaStockOutService.spStockOutExternalProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_MATRL_OTR111UKRV (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{INOUT_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
	
	<select id="pdaStockOutService.selectStockOutManufacture" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			
			DECLARE @COMP_CODE     NVARCHAR(08)    -- (필수) 법인코드
			       ,@DIV_CODE      NVARCHAR(08)    -- (필수) 사업장코드
			       ,@OUTSTOCK_NUM  NVARCHAR(20)    -- (필수) 출고요청번호
			       ,@STATUS        NVARCHAR(01)    -- (필수) 진행상태
			
			SET @COMP_CODE      = #{COMP_CODE}
			SET @DIV_CODE       = #{DIV_CODE}
			SET @OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
			SET @STATUS         = ''
			
			SELECT 
			       A.COMP_CODE,
			       A.OUTSTOCK_NUM,
			       SUM(uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
			                                  - ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS'))   AS NOT_OUTSTOCK_Q     ----잔량
			FROM               PMP300T      A  WITH (NOLOCK)
			WHERE A.COMP_CODE  = @COMP_CODE
			  AND A.DIV_CODE   = @DIV_CODE
			  AND (@OUTSTOCK_NUM = '' OR ( @OUTSTOCK_NUM &lt;&gt; '' AND A.OUTSTOCK_NUM = @OUTSTOCK_NUM)
			      )
			  AND A.AGREE_STATUS   = '2' -- 승인내역만 조회되도록 추가
			
			GROUP BY A.COMP_CODE, A.OUTSTOCK_NUM
			
			SET ARITHABORT OFF
			SET NOCOUNT OFF
			
		END		
	</select>
	
	<select id="pdaStockOutService.getStockOutManufacture" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			
			DECLARE @COMP_CODE     NVARCHAR(08)    -- (필수) 법인코드
			       ,@DIV_CODE      NVARCHAR(08)    -- (필수) 사업장코드
			       ,@OUTSTOCK_NUM  NVARCHAR(20)    -- (필수) 출고요청번호
			       ,@STATUS        NVARCHAR(01)    -- (필수) 진행상태
			
			SET @COMP_CODE      = #{COMP_CODE}
			SET @DIV_CODE       = #{DIV_CODE}
			SET @OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
			SET @STATUS         = ''
			
			
			SELECT 
			       A.COMP_CODE                                                              AS COMP_CODE           ----법인
			     , A.DIV_CODE                                                               AS DIV_CODE            ----사업장
			     , A.WORK_SHOP_CODE                                                         AS WORK_SHOP_CODE      ----작업장코드
			     , C4.TREE_NAME                                                             AS WORK_SHOP_NAME      ----작업장명
			     , CAST('' AS NVARCHAR(20))                                                 AS INOUT_NUM           ----수불(출고)번호
			     , 0                                                                        AS INOUT_SEQ           ----수불(출고)순번
			     , CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
			                 CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, '')) --(공용)
			                      ELSE ISNULL(C4.WH_CODE, '')                                                  --(가공)
			                 END
			            ELSE B.WH_CODE
			       END                                                                      AS TO_WH_CODE         ----(입고)-창고코드
			     , C5.TREE_NAME                                                             AS TO_WH_CODE_NAME    ----(입고)-창고명
			
			     , (SELECT MAX(X.WH_CELL_CODE) AS WH_CELL_CODE
				    FROM BSA225T X WITH(NOLOCK) WHERE X.COMP_CODE = A.COMP_CODE AND X.DIV_CODE = A.DIV_CODE AND X.WH_CODE
					 = (CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
			                 CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, '')) --(공용)
			                      ELSE ISNULL(C4.WH_CODE, '')                                                  --(가공)
			                 END
			            ELSE B.WH_CODE
			       END)) AS TO_CELL_CODE       ----(입고)-CELL코드
			
			     , ''                                                                		AS WH_CODE            ----(출고)-창고코드
			     , ''                                                                       AS WH_CELL_CODE       ----(출고)-CELL코드
			
			     , A.ITEM_CODE                                                              AS ITEM_CODE          ----품목코드
			     , C1.ITEM_NAME                                                             AS ITEM_NAME          ----품명
			     , ISNULL(C1.SPEC, '')                                                      AS SPEC               ----규격
			     , C1.STOCK_UNIT                                                            AS ORDER_UNIT         ----단위
			     , 1                                                                        AS TRNS_RATE          ----입수
			     , '1'                                                                      AS ITEM_STATUS        ----품목상태
			     , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_REQ_DATE)                  AS OUTSTOCK_REQ_DATE  ----요청일자
				 , 0                                                                        AS ORDER_UNIT_Q       ----수량
				 , 0                                                                        AS ORDER_UNIT_P       ----단가
			     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0), 'M_FSET_QS')   AS OUTSTOCK_REQ_Q     ----요청량
			     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS OUTSTOCK_Q         ----출고량
			     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
			                                  - ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS NOT_OUTSTOCK_Q     ----잔량
			     , A.CONTROL_STATUS                                                         AS CONTROL_STATUS     ----진행상태
			
			     , A.OUTSTOCK_NUM                                                           AS OUTSTOCK_NUM       ----출고요청번호
			     , A.REF_WKORD_NUM                                                          AS REF_WKORD_NUM      ----작업지시번호
			     , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.CANCEL_Q, 0),       'M_FSET_QS')   AS CANCEL_Q           ----취소량
			     , A.PROJECT_NO                                                             AS PROJECT_NO         ----프로젝트번호
			     , ISNULL(A.LOT_NO, '')                                                     AS LOT_NO             ----LOT.NO
			     , A.REMARK                                                                 AS REMARK             ----비고
				 , 'PDA'                                                                    AS INOUT_PRSN         ----출고담당
			
			     , A.REF_WKORD_NUM                                                          AS ORDER_NUM         ----발주번호(작지번호)
			     , 0                                                                        AS ORDER_SEQ         ----발주순번
			     , A.OUTSTOCK_NUM                                                           AS BASIS_NUM         ----근거번호
			     , 0                                                                        AS BASIS_SEQ         ----근거순번
			     , ''                                                                       AS PATH_CODE         ----PATH_CODE
			     , ''                                                                       AS INOUT_DATE        ----출고일
			     , ''                                                                       AS INOUT_CODE        ----입고처
			FROM               PMP300T      A  WITH (NOLOCK)
			       LEFT  JOIN  PMP200T      B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
			                                                AND B.DIV_CODE      = A.DIV_CODE
			                                                AND B.ITEM_CODE     = A.ITEM_CODE
			                                                AND B.WKORD_NUM     = A.REF_WKORD_NUM
			                                                AND B.PATH_CODE     = A.PATH_CODE
			       LEFT  JOIN  PMP100TV1    C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
			                                                AND C.DIV_CODE      = A.DIV_CODE
			                                                AND C.WKORD_NUM     = A.REF_WKORD_NUM
			       INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
			                                                AND C1.ITEM_CODE    = A.ITEM_CODE
			       INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
			                                                AND C2.DIV_CODE     = A.DIV_CODE
			                                                AND C2.ITEM_CODE    = A.ITEM_CODE
			       LEFT  JOIN  BPR100T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = C.COMP_CODE
			                                                AND C3.ITEM_CODE    = C.ITEM_CODE
			       INNER JOIN  BSA230T      C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
			                                                AND C4.TYPE_LEVEL   = A.DIV_CODE
			                                                AND C4.TREE_CODE    = A.WORK_SHOP_CODE
			       LEFT  JOIN  BSA220T      C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
			                                                AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
			                                                AND C5.TREE_CODE    = CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
			                                                                                CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
			                                                                                     ELSE ISNULL(C4.WH_CODE, '')
			                                                                                END
			                                                                           ELSE B.WH_CODE
			                                                                      END
			       LEFT  JOIN  BSA220T      C7 WITH (NOLOCK) ON C7.COMP_CODE    = C2.COMP_CODE
			                                                AND C7.TYPE_LEVEL   = C2.DIV_CODE
			                                                AND C7.TREE_CODE    = C2.WH_CODE
			
			WHERE A.COMP_CODE  = @COMP_CODE
			  AND A.DIV_CODE   = @DIV_CODE
			  AND (@OUTSTOCK_NUM = '' OR ( @OUTSTOCK_NUM &lt;&gt; '' AND A.OUTSTOCK_NUM = @OUTSTOCK_NUM)
			      )
			  AND (@STATUS = '' OR (@STATUS = 'Y' AND A.OUTSTOCK_REQ_Q - A.OUTSTOCK_Q = 0)
			                    OR (@STATUS = 'N' AND A.OUTSTOCK_REQ_Q - A.OUTSTOCK_Q > 0)
			      )
			  AND A.AGREE_STATUS   = '2' -- 승인내역만 조회되도록 추가
			
			ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C5.TREE_CODE, A.ITEM_CODE
			
			SET ARITHABORT OFF
			SET NOCOUNT OFF
			
		END
	</select>
	
	<select id="pdaStockOutService.selectStockOutProduct" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)

		    SET @CompCode = #{COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		    		A.COMP_CODE,
		    		ISSUE_REQ_NUM,
		    		SUM(A.ISSUE_REQ_QTY - A.ISSUE_QTY)                                         AS NOT_OUTSTOCK_Q
		      FROM            SRQ100T A  WITH (NOLOCK)
		     WHERE A.COMP_CODE        = @CompCode		     
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.ISSUE_DIV_CODE   	  = #{DIV_CODE}		/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		       AND A.ISSUE_REQ_NUM     LIKE #{OUTSTOCK_NUM} + '%'
		     </if>

		    GROUP BY   A.COMP_CODE,ISSUE_REQ_NUM

		     ORDER BY A.ISSUE_REQ_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	<select id="pdaStockOutService.getStockOutProduct" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @TimeSI      NVARCHAR(01)
		          , @TimeSR      NVARCHAR(01)
		          , @TimeSS      NVARCHAR(01)


		    SET @CompCode = #{COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')


		    /* 데이터 조회 */
		    SELECT
		    		A.COMP_CODE,
		           (CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                                    ELSE C1.CUSTOM_NAME
		            END)                                                                   AS CUSTOM_NAME
		         , A.ITEM_CODE
		         ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                    ELSE C2.ITEM_NAME
		            END)                                                                   AS ITEM_NAME
		         , C2.SPEC
		         , A.ORDER_UNIT
		         , A.TRANS_RATE 		AS TRNS_RATE
		         , CAST(A.ISSUE_REQ_DATE AS DATETIME) AS ISSUE_REQ_DATE
		         ,(CASE WHEN ISNULL(A.ISSUE_DATE , '') = ''
		                     THEN ''
		                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.ISSUE_DATE, 1, 4))
		                                                              , 'MM'   , SUBSTRING(A.ISSUE_DATE, 5, 2))
		                                                              , 'DD'   , SUBSTRING(A.ISSUE_DATE, 7, 2))
		                END) + RTRIM(' ' + CASE @TimeSR WHEN 'Y' THEN ISNULL(A.DELIVERY_TIME,'')
		                                                ELSE ''
		                                    END)                                          AS ISSUE_DATE
		          ,(A.ISSUE_REQ_QTY - A.ISSUE_QTY)                                         AS NOT_REQ_Q
		          ,A.ISSUE_QTY
		         , A.ISSUE_REQ_QTY
		         , ISNULL(D.GOOD_STOCK_Q, 0)                                              AS STOCK_Q
		         , A.WH_CODE
				 , A.WH_CELL_CODE
		         , C5.WH_CELL_NAME	 
		         , ISNULL(A.ORDER_NUM, '') AS ORDER_NUM
		         , ISNULL(A.ISSUE_REQ_NUM, '') AS ISSUE_REQ_NUM
		         , ISNULL(A.ISSUE_REQ_SEQ, 0) AS ISSUE_REQ_SEQ
		         , ISNULL(A.PROJECT_NO, '') AS PROJECT_NO     
		         , A.LOT_NO	        
		         , A.DIV_CODE
		        
		         , A.INOUT_TYPE_DETAIL
		        
		         , A.TAX_TYPE
		         , A.MONEY_UNIT
		         , A.EXCHANGE_RATE
		         , ISNULL(A.ACCOUNT_YNC, '') AS ACCOUNT_YNC
		         , A.DISCOUNT_RATE		        
		         , A.DVRY_CUST_CD
		         , ISNULL(A.REMARK, '') AS REMARK
		         , ISNULL(A.SER_NO, 0) AS SER_NO
		         , A.SALE_CUSTOM_CODE
		         , A.BILL_TYPE
		         , A.ORDER_TYPE
		         , A.PRICE_YN
		         , A.PO_NUM
		         , A.PO_SEQ
		         , ISNULL(C1.TAX_TYPE     , '1')                                          AS TAX_INOUT
		         , A.AGENT_TYPE
		         , A.DEPT_CODE
		         , C3.ITEM_ACCOUNT
		         , A.PRICE_TYPE
		         , A.CUSTOM_CODE
		         , A.ISSUE_REQ_PRICE							-- 단가
				 , A.ISSUE_REQ_AMT								-- 금액
				 , A.ISSUE_REQ_TAX_AMT							-- 부가세
				 
				 , C3.MINI_PACK_Q		--포장수량
				 , FLOOR((A.ISSUE_REQ_QTY - A.ISSUE_QTY) / C3.MINI_PACK_Q)  AS BOX_QTY
				 , (A.ISSUE_REQ_QTY - A.ISSUE_QTY) % C3.MINI_PACK_Q			AS EA_QTY
		      FROM            SRQ100T A  WITH (NOLOCK)
		           LEFT  JOIN SOF110T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                              AND  B.DIV_CODE       = A.DIV_CODE
		                                              AND  B.ORDER_NUM      = A.ORDER_NUM
		                                              AND  B.SER_NO         = A.SER_NO
		           LEFT  JOIN SOF100T C  WITH (NOLOCK) ON  C.COMP_CODE      = B.COMP_CODE
		                                              AND  C.DIV_CODE       = B.DIV_CODE
		                                              AND  C.ORDER_NUM      = B.ORDER_NUM
		           LEFT  JOIN BIV100T D  WITH (NOLOCK) ON  D.COMP_CODE      = A.COMP_CODE
		                                              AND  D.DIV_CODE       = A.ISSUE_DIV_CODE
		                                              AND  D.WH_CODE        = A.WH_CODE
		                                              AND  D.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE    = A.CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
		                                              AND C2.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                              AND C3.DIV_CODE       = A.DIV_CODE
		                                              AND C3.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BCM100T C4 WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
		                                              AND C4.CUSTOM_CODE    = A.SALE_CUSTOM_CODE
		           LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE      = A.COMP_CODE
		                                              AND C5.DIV_CODE       = A.DIV_CODE
		                                              AND C5.WH_CODE        = A.WH_CODE
		                                              AND C5.WH_CELL_CODE   = A.WH_CELL_CODE
		           LEFT  JOIN BCM100T C6 WITH (NOLOCK) ON C6.COMP_CODE      = C.COMP_CODE
		                                              AND C6.CUSTOM_CODE    = C.CUSTOM_CODE
		           LEFT  JOIN SCM100T C7 WITH (NOLOCK) ON C7.COMP_CODE      = A.COMP_CODE
		                                              AND C7.CUSTOM_CODE    = A.CUSTOM_CODE
		                                              AND CONVERT(NVARCHAR, C7.DVRY_CUST_SEQ) = A.DVRY_CUST_CD
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                              AND M1.MAIN_CODE      = N'S007'
		                                              AND M1.SUB_CODE       = A.INOUT_TYPE_DETAIL
		           LEFT  JOIN TEA100T E  WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
		                                              AND E.DIV_CODE        = A.DIV_CODE
		                                              AND E.SO_SER_NO       = A.ORDER_NUM
		           LEFT  JOIN TEA110T E1 WITH (NOLOCK) ON E1.COMP_CODE      = A.COMP_CODE
		                                              AND E1.DIV_CODE       = A.DIV_CODE
		                                              AND E1.SO_SER_NO      = A.ORDER_NUM
		                                              AND E1.SO_SER         = A.SER_NO

		     WHERE A.COMP_CODE        = @CompCode
		       AND A.ISSUE_REQ_QTY    &gt; A.ISSUE_QTY
		     <if test="@foren.Ognl@isNotEmpty(CREATE_LOC)">
		       AND ISNULL(A.REF_LOC, '1') = #{CREATE_LOC}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.ISSUE_DIV_CODE   	  = #{DIV_CODE}		/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		       AND A.MONEY_UNIT           = #{MONEY_UNIT}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE          = #{CUSTOM_CODE}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND C1.CUSTOM_NAME         = #{CUSTOM_NAME}	/*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		     AND B.RECEIVER_NAME 	   LIKE #{CREATE_LOC} + '%'   /*마스터폼 param*/
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		       AND A.ITEM_CODE     	   LIKE #{ITEM_CODE} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND C2.ITEM_NAME        LIKE #{ITEM_NAME} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_FR)">
		       AND A.ISSUE_DATE       &gt;= #{ISSUE_DATE_FR}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_TO)">
		       AND A.ISSUE_DATE       &lt;= #{ISSUE_DATE_TO}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		       AND A.ISSUE_REQ_NUM     LIKE #{OUTSTOCK_NUM} + '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO        LIKE #{PROJECT_NO} '%'
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		       AND A.WH_CODE  			  = #{WH_CODE}
		     </if>

		    GROUP BY   A.COMP_CODE, A.CUSTOM_CODE	, C1.CUSTOM_NAME1	, C1.CUSTOM_NAME2	, C1.CUSTOM_NAME	, A.ITEM_CODE
						,C2.ITEM_NAME1	,C2.ITEM_NAME2		, C2.ITEM_NAME		, C2.SPEC			, A.ORDER_UNIT
						, A.TRANS_RATE , CAST(A.ISSUE_REQ_DATE AS DATETIME)		 ,A.ISSUE_DATE		,A.DELIVERY_TIME
		                ,A.ISSUE_REQ_QTY ,A.ISSUE_QTY		, A.ISSUE_REQ_QTY	 , D.GOOD_STOCK_Q	, A.WH_CODE
						, A.WH_CELL_CODE , C5.WH_CELL_NAME	, A.ORDER_NUM		, A.ISSUE_REQ_NUM	 , A.ISSUE_REQ_SEQ 
						, A.PROJECT_NO   , A.LOT_NO	        , A.DIV_CODE		, A.INOUT_TYPE_DETAIL, A.TAX_TYPE
					    , A.MONEY_UNIT   , A.EXCHANGE_RATE	, A.ACCOUNT_YNC		, A.DISCOUNT_RATE	  , A.DVRY_CUST_CD
						, A.REMARK		 , A.SER_NO			, A.SALE_CUSTOM_CODE, C4.CUSTOM_NAME1		, C4.CUSTOM_NAME2
						, C4.CUSTOM_NAME, A.ISSUE_DIV_CODE, A.BILL_TYPE			, A.ORDER_TYPE			, A.PRICE_YN
						, A.PO_NUM		, A.PO_SEQ			, C1.TAX_TYPE        , A.AGENT_TYPE			 
						 , A.DEPT_CODE	, C3.ITEM_ACCOUNT	, A.PRICE_TYPE, A.ISSUE_REQ_PRICE, A.ISSUE_REQ_AMT, A.ISSUE_REQ_TAX_AMT	
						  , C3.MINI_PACK_Q	

		     ORDER BY A.ISSUE_REQ_NUM, A.ISSUE_REQ_SEQ, C1.CUSTOM_NAME, A.ITEM_CODE, A.ISSUE_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>
    	
	<select id="pdaStockOutService.getStockOutProductBySearch" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @FROM_DATE   NVARCHAR(20) /* 시작일자    */
		          , @TO_DATE     NVARCHAR(20) /* 종료일자    */
				  , @ORDER_TYPE  NVARCHAR(20) /* 종료일자    */

		    SET @CompCode    = #{COMP_CODE}
		    SET @FROM_DATE   = #{FR_DATE}
		    SET @TO_DATE     = #{TO_DATE}
		    SET @ORDER_TYPE  = #{ORDER_TYPE}


			SELECT   A.ISSUE_REQ_NUM            /* 출하지시번호    */
					,A.ISSUE_DATE               /* 출하지시일      */
					,C1.CUSTOM_NAME             /* 고객명          */
					,M1.CODE_NAME               /* 판매유형        */

		      FROM            SRQ100T A  WITH (NOLOCK)
		           LEFT  JOIN SOF110T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                              AND  B.DIV_CODE       = A.DIV_CODE
		                                              AND  B.ORDER_NUM      = A.ORDER_NUM
		                                              AND  B.SER_NO         = A.SER_NO
		           LEFT  JOIN SOF100T C  WITH (NOLOCK) ON  C.COMP_CODE      = B.COMP_CODE
		                                              AND  C.DIV_CODE       = B.DIV_CODE
		                                              AND  C.ORDER_NUM      = B.ORDER_NUM
		           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                              AND C1.CUSTOM_CODE    = A.CUSTOM_CODE
		           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
		                                              AND C2.ITEM_CODE      = A.ITEM_CODE
		           INNER JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                              AND C3.DIV_CODE       = A.DIV_CODE
		                                              AND C3.ITEM_CODE      = A.ITEM_CODE
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE      = C.COMP_CODE
		                                              AND M1.MAIN_CODE      = N'S002'
		                                              AND M1.SUB_CODE       = C.ORDER_TYPE
		     WHERE A.COMP_CODE        = @CompCode
		       AND A.ISSUE_REQ_QTY    &gt; A.ISSUE_QTY
		       AND ISNULL(B.ORDER_STATUS,'N')      = 'N'           /* 마감여부 */
		       AND A.ISSUE_REQ_DATE       &gt;= @FROM_DATE
		       AND A.ISSUE_REQ_DATE       &lt;= @TO_DATE
			   AND ISNULL(A.REF_LOC, '1') = '1'
			<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
				AND A.ORDER_TYPE = @ORDER_TYPE
			</if>	
			   
			GROUP BY A.ISSUE_REQ_NUM, A.ISSUE_DATE, C1.CUSTOM_NAME, M1.CODE_NAME
			
		     ORDER BY A.ISSUE_DATE, M1.CODE_NAME, C1.CUSTOM_NAME

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		END 
    </select>
    
    <select id="pdaStockOutService.selectStockOutExternal" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		    
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID     */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
		                
		    SET @CompCode = #{COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		    
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		    
		    SET @RefItem = ISNULL(@RefItem, N'0')
		    
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		    
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
		    /* 데이터 조회 */
		    SELECT 
		    	   A.COMP_CODE,
		    	   A.ORDER_NUM,
		    	   SUM(uniLITE.fnFormat(@CompCode, ISNULL(A.ALLOC_Q, 0) 
		                                     - ISNULL(A.OUTSTOCK_Q, 0), 'M_FSET_QS'))   AS NOT_OUTSTOCK_Q
		
		    FROM              MCL200T   A  WITH (NOLOCK)
  		           LEFT  JOIN MPO100TV4 B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                              AND B.DIV_CODE     = A.DIV_CODE
                                              AND B.CUSTOM_CODE  = A.CUSTOM_CODE
                                              AND B.ORDER_NUM    = A.ORDER_NUM
                                              AND B.ORDER_SEQ    = A.ORDER_SEQ
		     WHERE A.COMP_CODE          = @CompCode
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE           = #{DIV_CODE}
		     </if>	
		     <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		       AND A.ORDER_NUM           = #{OUTSTOCK_NUM}
		     </if>	
		       AND B.AGREE_STATUS       = N'2'
		       AND A.CONTROL_STATUS    != N'8'
			
			GROUP BY A.COMP_CODE, A.ORDER_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END  
    </select>
    
	<select id="pdaStockOutService.getStockOutExternal" parameterType="Map" resultType="rMap">   	/* 예약참조 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		    
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
		                
		    SET @CompCode = #{COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		    
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		    
		    SET @RefItem = ISNULL(@RefItem, N'0')
		    
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		    
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
		    /* 데이터 조회 */
		    SELECT CAST(0 AS BIT)                                                       AS GUBUN
		         , A.ORDER_NUM
		         , MIN(A.ORDER_SEQ)														AS ORDER_SEQ
		         , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
		             END)                                                               AS ORDER_DATE
/*
		         , A.ORDER_ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)                                                               AS ORDER_ITEM_NAME
*/
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                                     ELSE C2.ITEM_NAME
		             END)                                                              AS ITEM_NAME
		         , C2.SPEC
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.ALLOC_Q, 0)),    'M_FSET_QS')   AS ALLOC_Q
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.OUTSTOCK_Q, 0)), 'M_FSET_QS')   AS OUTSTOCK_Q
	         , uniLITE.fnFormat(@CompCode, SUM(ISNULL(A.ALLOC_Q, 0)
	                                     - ISNULL(A.OUTSTOCK_Q, 0)), 'M_FSET_QS')   AS NOT_OUTSTOCK
	         , uniLITE.fnFormat(@CompCode, MAX(ISNULL(C5.AVERAGE_P, 0)), 'M_FSET_PS')   AS AVERAGE_P
		         , C2.STOCK_UNIT
		         , (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
		                 THEN C3.WH_CODE
		                 ELSE B.WCWH_CODE
		             END)                                                              AS WH_CODE
		         , uniLITE.fnFormat(@CompCode, ISNULL(C5.STOCK_Q, 0),   'M_FSET_QS')   AS STOCK_Q
		         , A.CUSTOM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
		                                     ELSE C4.CUSTOM_NAME
		             END)                                                               AS CUSTOM_NAME
		         , ISNULL(M1.SUB_CODE, '')                                              AS MONEY_UNIT
		         , A.COMP_CODE
		         , A.DIV_CODE
	                 , A.GRANT_TYPE
		         , A.REMARK
		         , A.PROJECT_NO
		         , '4'					AS ORDER_TYPE
		         , C3.ORDER_UNIT
        		 , C3.TRNS_RATE
		         , C3.LOT_YN
	                 , ISNULL(B.S_GUBUN_KD,'1') AS S_GUBUN_KD
		    FROM              MCL200T   A  WITH (NOLOCK)
		           LEFT  JOIN MPO100TV4_KD B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                AND B.DIV_CODE     = A.DIV_CODE
		                                                AND B.CUSTOM_CODE  = A.CUSTOM_CODE
		                                                AND B.ORDER_NUM    = A.ORDER_NUM
		                                                AND B.ORDER_SEQ    = A.ORDER_SEQ
		           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                                AND C1.ITEM_CODE   = A.ORDER_ITEM_CODE
		           INNER JOIN BPR100T   C6 WITH (NOLOCK) ON C6.COMP_CODE   = A.COMP_CODE
		                                                AND C6.ITEM_CODE   = A.ITEM_CODE
		           INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                                AND C2.ITEM_CODE   = A.ITEM_CODE
		           INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                                AND C3.DIV_CODE    = A.DIV_CODE
		                                                AND C3.ITEM_CODE   = A.ITEM_CODE
		           INNER JOIN BCM100T   C4 WITH (NOLOCK) ON C4.COMP_CODE   = A.COMP_CODE
		                                                AND C4.CUSTOM_CODE = A.CUSTOM_CODE
		           LEFT  JOIN BIV100T   C5 WITH (NOLOCK) ON C5.COMP_CODE   = A.COMP_CODE
		                                                AND C5.DIV_CODE    = A.DIV_CODE
		                                                AND C5.WH_CODE     = (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
		                                                                           THEN C3.WH_CODE
		                                                                           ELSE B.WCWH_CODE
		                                                                       END)
		                                                AND C5.ITEM_CODE   = A.ITEM_CODE
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                                AND M1.MAIN_CODE   = N'B004'
		                                                AND UPPER(ISNULL(LEFT(M1.REF_CODE1, 1), '')) = 'Y'
		                                                
		           
		     WHERE A.COMP_CODE          = @CompCode
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE           = #{DIV_CODE}
		     </if>	
		     <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		       AND A.ORDER_NUM           = #{OUTSTOCK_NUM}
		     </if>	
		   
		       AND A.ALLOC_Q         &gt; A.OUTSTOCK_Q
		       AND B.AGREE_STATUS       = N'2'
		       AND A.CONTROL_STATUS    != N'8'
		     GROUP BY A.ORDER_NUM, A.ORDER_DATE, A.ITEM_CODE, C2.ITEM_NAME, C2.ITEM_NAME1, C2.ITEM_NAME2, C2.SPEC, C2.STOCK_UNIT
	         , (CASE WHEN ISNULL(B.WKORD_NUM, '') = ''
	                 THEN C3.WH_CODE
	                 ELSE B.WCWH_CODE
	             END)
	         , ISNULL(C5.STOCK_Q, 0)
	         , A.CUSTOM_CODE
	         , (CASE WHEN @RefItem = '1' THEN C4.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN C4.CUSTOM_NAME2
	                                     ELSE C4.CUSTOM_NAME
	             END)
	         , ISNULL(M1.SUB_CODE, '')
	         , A.COMP_CODE
	         , A.DIV_CODE
	         , A.GRANT_TYPE
	         , A.REMARK
	         , A.PROJECT_NO
                 , C3.ORDER_UNIT
        	 , C3.TRNS_RATE
	         , C6.STOCK_CARE_YN
	         , C3.LOT_YN
	         , ISNULL(B.S_GUBUN_KD,'1')
	
		     ORDER BY A.ORDER_DATE, A.ORDER_NUM, A.ITEM_CODE
		    
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	<select id="pdaStockOutService.getStockOutMove" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode   NVARCHAR(08) /* 법인코드    */
		            ,
		            @UserId     NVARCHAR(100) /* 사용자ID    */
		            ,
		            @LangType   NVARCHAR(2) /* 언어구분    */
		            ,
		            @RefItem    NVARCHAR(01) /* 명칭 참조 유형  */
		            ,
		            @DateFormat NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		    SET @CompCode = #{COMP_CODE}
		    SET @UserId = #{USER_ID}
		    SET @LangType = #{LANG}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @UserId
		
		    SET @RefItem = Isnull(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM   BSA100T WITH (NOLOCK)
		    WHERE  COMP_CODE = @CompCode
		           AND MAIN_CODE = N'B044'
		           AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = Isnull(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */
		    SELECT A.COMP_CODE,
		    	   Cast(0 AS BIT)                                        AS CHOICE,
		           A.DIV_CODE,
		           A.WH_CODE,
		           ISNULL(C2.TREE_NAME, '')                              AS WH_NAME,
		           A.WH_CELL_CODE,
		           C3.WH_CELL_NAME,
		           A.REQSTOCK_NUM,
		           A.REQSTOCK_SEQ,
		           A.ITEM_CODE,
		           CASE
		             WHEN @RefItem = '0' THEN C1.ITEM_NAME
		             WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		             WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		             ELSE C1.ITEM_NAME
		           END                                                   AS ITEM_NAME,
		           ISNULL(C1.SPEC, '') AS SPEC,
		           C1.STOCK_UNIT,
		           A.REQ_PRSN,
		           Isnull(A.REQSTOCK_Q, 0)                               AS REQSTOCK_Q,
		           Isnull(A.OUTSTOCK_Q, 0)                               AS OUTSTOCK_Q,
		           ( Isnull(A.REQSTOCK_Q, 0) - Isnull(A.OUTSTOCK_Q, 0) ) AS NOTOUTSTOCK_Q,
		           unilite.Fngetuserdate(A.COMP_CODE, A.OUTSTOCK_DATE)   AS OUTSTOCK_DATE,
		           Isnull(B.GOOD_STOCK_Q, 0)                             AS GOOD_STOCK_Q,
		           Isnull(B.BAD_STOCK_Q, 0)                              AS BAD_STOCK_Q,
		           A.OUT_DIV_CODE,
		           A.OUT_WH_CODE,
		           A.OUT_WH_CELL_CODE,
		           A.LOT_NO,
		           ISNULL(A.PROJECT_NO, '') AS PROJECT_NO,
		           ISNULL(A.REMARK, '') AS REMARK,
		           C4.ITEM_ACCOUNT,
		           C4.LOT_YN,
		           A.ORDER_NUM,
		           A.ORDER_SEQ
		    FROM   BIV500T A WITH (NOLOCK)
		           LEFT JOIN BIV100T B WITH (NOLOCK)
		                  ON B.COMP_CODE = A.COMP_CODE
		                     AND B.DIV_CODE = A.OUT_DIV_CODE
		                     AND B.WH_CODE = A.OUT_WH_CODE
		                     AND B.ITEM_CODE = A.ITEM_CODE
		           INNER JOIN BPR100T C1 WITH (NOLOCK)
		                   ON C1.COMP_CODE = A.COMP_CODE
		                      AND C1.ITEM_CODE = A.ITEM_CODE
		           LEFT JOIN BSA220T C2 WITH (NOLOCK)
		                  ON C2.COMP_CODE = A.COMP_CODE
		                     AND C2.TYPE_LEVEL = A.DIV_CODE
		                     AND C2.TREE_CODE = A.WH_CODE
		           LEFT JOIN BSA225T C3 WITH (NOLOCK)
		                  ON C3.COMP_CODE = A.COMP_CODE
		                     AND C3.DIV_CODE = A.DIV_CODE
		                     AND C3.WH_CODE = A.WH_CODE
		                     AND C3.WH_CELL_CODE = A.WH_CELL_CODE
		           LEFT JOIN BPR200T C4 WITH (NOLOCK)
		                  ON C4.COMP_CODE = A.COMP_CODE
		                     AND C4.DIV_CODE = A.DIV_CODE
		                     AND C4.ITEM_CODE = A.ITEM_CODE
		    WHERE  A.COMP_CODE = @CompCode
		           AND A.CLOSE_YN != 'Y'
		           AND A.DIV_CODE = #{DIV_CODE}
	           <if test="@foren.Ognl@isNotEmpty(GW_FLAG)">
			       AND A.GW_FLAG = #{GW_FLAG}
			   </if>
		           AND A.REQSTOCK_NUM = #{REQSTOCK_NUM}
		    ORDER  BY A.DIV_CODE,
		              A.WH_CODE,
		              A.REQSTOCK_NUM,
		              A.REQSTOCK_SEQ,
		              A.ITEM_CODE
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END 
	</select>
	
	<insert id="pdaStockOutService.insertMoveLogData" parameterType="Map">
		INSERT INTO L_BTR100T(   
		     KEY_VALUE
            ,OPR_FLAG
            ,INOUT_NUM
            ,INOUT_SEQ
            ,INOUT_TYPE
            ,INOUT_METH
            ,INOUT_TYPE_DETAIL
            ,INOUT_CODE_TYPE
            ,IN_ITEM_STATUS
            ,BASIS_NUM
            ,BASIS_SEQ
            ,ORDER_NUM
            ,ORDER_SEQ
            ,DIV_CODE
            ,WH_CODE
            ,WH_CELL_CODE
            ,INOUT_DATE
            ,INOUT_FOR_P
            ,INOUT_FOR_O
            ,EXCHG_RATE_O
            ,MONEY_UNIT
            ,TO_DIV_CODE
            ,INOUT_CODE
            ,INOUT_CODE_DETAIL
            ,DEPT_CODE
            ,ITEM_CODE
            ,ITEM_STATUS
            ,INOUT_Q
            ,INOUT_PRSN
            ,LOT_NO
            ,REMARK
            ,PROJECT_NO
            ,CREATE_LOC
            ,BILL_TYPE
            ,SALE_TYPE
            ,SALE_DIV_CODE
            ,SALE_CUSTOM_CODE
            ,SALE_C_YN
            ,INSERT_DB_USER
            ,INSERT_DB_TIME
            ,UPDATE_DB_USER
            ,UPDATE_DB_TIME
            ,COMP_CODE
            ,MAKE_DATE
            ,MAKE_EXP_DATE
        ) VALUES (
            #{KEY_VALUE}
            ,#{OPR_FLAG}
            ,#{INOUT_NUM}
            ,#{INOUT_SEQ}
            ,#{INOUT_TYPE}
            ,#{INOUT_METH}
            ,#{INOUT_TYPE_DETAIL}
            ,#{INOUT_CODE_TYPE}
            ,#{IN_ITEM_STATUS}
            ,#{BASIS_NUM}
            ,#{BASIS_SEQ}
            ,#{ORDER_NUM}
            ,#{ORDER_SEQ}
            ,#{DIV_CODE}
            ,#{WH_CODE}
            ,#{WH_CELL_CODE}
            ,#{INOUT_DATE}
            ,#{INOUT_FOR_P}
            ,#{INOUT_FOR_O}
            ,#{EXCHG_RATE_O}
            ,#{MONEY_UNIT}
            ,#{TO_DIV_CODE}
            ,#{INOUT_CODE}
            ,#{INOUT_CODE_DETAIL}
            ,#{DEPT_CODE}
            ,#{ITEM_CODE}
            ,#{ITEM_STATUS}
            ,#{INOUT_Q}
            ,#{INOUT_PRSN}
            ,#{LOT_NO}
            ,#{REMARK}
            ,#{PROJECT_NO}
            ,#{CREATE_LOC}
            ,#{BILL_TYPE}
            ,#{SALE_TYPE}
            ,#{SALE_DIV_CODE}
            ,#{SALE_CUSTOM_CODE}
            ,#{SALE_C_YN}
            ,#{S_USER_ID}
            ,GETDATE()
            ,#{S_USER_ID}
            ,GETDATE()
            ,#{S_COMP_CODE}
            ,#{MAKE_DATE}
            ,#{MAKE_EXP_DATE}
         )
    </insert>
	
	<update id="pdaStockOutService.spStockOutMoveProcedure" parameterType="Map" statementType="CALLABLE">
		{call USP_STOCK_Btr110ukr (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{InoutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
	</update>
</mapper>