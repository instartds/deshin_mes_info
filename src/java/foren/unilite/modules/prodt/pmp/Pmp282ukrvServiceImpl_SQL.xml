<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmp282ukrvServiceImpl">


<select id="pmp282ukrvServiceImpl.getJanOutstockReqQ" parameterType="Map" resultType="rMap">
	SELECT
		TOP 1 ${OUTSTOCK_REQ_Q} - ISNULL(SUM(ISNULL(INOUT_Q,0)),0) AS JAN_OUTSTOCK_REQ_Q
	  FROM BTR100T
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND INOUT_TYPE = '2'
	   AND ORDER_NUM = #{WKORD_NUM}
	   AND ITEM_CODE = #{ITEM_CODE}
	   AND INOUT_CODE = #{WORK_SHOP_CODE}
	   AND PATH_CODE = #{PATH_CODE}
	<if test="@foren.Ognl@isNotEmpty(lotNoList)">
		AND LOT_NO IN
		<foreach collection="lotNoList" item="item" separator="," close=")" open="(">
			'${item}'
		</foreach>
      	</if>

</select>

<select id="pmp282ukrvServiceImpl.printList" parameterType="Map" resultType="rMap">
DECLARE @I INT, @MAXNO INT,
		@PROD_ITEM_NAME NVARCHAR(500)
DECLARE @TMPTB TABLE(
	PRODITEMNAME NVARCHAR(500),
--	ITEMNAME NVARCHAR(500),
	ITEMCODE NVARCHAR(500),
	WKORDNUM NVARCHAR(500),
	LOTNO NVARCHAR(500),
	TIME NVARCHAR(500),
	INOUTQ NUMERIC(10,3),
	INOUTPRSN NVARCHAR(500),
	STOCK_UNIT NVARCHAR(500)
 )
	<foreach collection="PRINT_DATAS" item="item" separator="" >



		SET @I = 1
		SET @MAXNO = ${item.PRINT_Q}

		SELECT TOP 1
			@PROD_ITEM_NAME = R1.ITEM_NAME

			FROM PMP100T A WITH(NOLOCK)
			LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
											 AND R1.ITEM_CODE = A.ITEM_CODE
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			  AND A.DIV_CODE  = #{DIV_CODE}
			  AND A.WKORD_NUM = #{WKORD_NUM}

		WHILE @I &lt;= @MAXNO
			BEGIN

				INSERT @TMPTB
					SELECT
						@PROD_ITEM_NAME	AS PROD_ITEM_NAME
					--	, ITEM_NAME				AS ITEM_NAME
						, '${item.ITEM_CODE}'		AS ITEM_CODE
						, '${item.WKORD_NUM}'		AS WKORD_NUM
						, '${item.LOT_NO}'		AS LOT_NO
						, CONVERT(CHAR(19), GETDATE(), 20) AS TIME
						, ${item.INOUT_Q}		AS INOUT_Q
						, '${item.INOUT_PRSN}'	AS INOUT_PRSN
						, '${item.STOCK_UNIT}' 	AS STOCK_UNIT
					SET @I = @I + 1
			END
	</foreach>
 SELECT
	A.PRODITEMNAME	AS PROD_ITEM_NAME
	, R2.ITEM_NAME	AS ITEM_NAME
	, A.ITEMCODE	AS ITEM_CODE
	, A.WKORDNUM	AS WKORD_NUM
	, A.LOTNO	AS LOT_NO
	, A.TIME AS TIME
	, A.INOUTQ	AS INOUT_Q
	, R1.CODE_NAME	AS INOUT_PRSN
	, A.ITEMCODE + A.WKORDNUM AS BARCODE
	, A.STOCK_UNIT AS STOCK_UNIT
 FROM @TMPTB	A
 LEFT JOIN BSA100T R1 ON R1.COMP_CODE = #{S_COMP_CODE}
					 AND R1.MAIN_CODE = 'B024'
					 AND R1.SUB_CODE != '$'
					 AND R1.SUB_CODE = A.INOUTPRSN
LEFT JOIN BPR100T R2 ON R2.COMP_CODE = #{S_COMP_CODE}
				    AND R2.ITEM_CODE = A.ITEMCODE

</select>


<select id="pmp282ukrvServiceImpl.printList_novis" parameterType="Map" resultType="rMap">

DECLARE @I INT, @MAXNO INT,

	@PROD_ITEM_NAME NVARCHAR(500),
	@PROD_LOT_NO NVARCHAR(500)
DECLARE @TMPTB TABLE(
	PRODITEMNAME NVARCHAR(500),
	PRODLOTNO NVARCHAR(500),
	--ITEMNAME NVARCHAR(500),
	ITEMCODE NVARCHAR(500),
	WKORDNUM NVARCHAR(500),
	LOTNO NVARCHAR(500),
	TIME NVARCHAR(500),
	INOUTQ NUMERIC(10,3),
	INOUTPRSN NVARCHAR(500),
	STOCK_UNIT NVARCHAR(500)
 )

SET @I = 1
SET @MAXNO = ${PRINT_Q}

SELECT TOP 1
	@PROD_ITEM_NAME = R1.ITEM_NAME
	,@PROD_LOT_NO = A.LOT_NO

	FROM PMP100T A WITH(NOLOCK)
	LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									 AND R1.ITEM_CODE = A.ITEM_CODE
	WHERE A.WKORD_NUM = (SELECT TOP 1 TOP_WKORD_NUM FROM PMP100T WITH(NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND DIV_CODE = #{DIV_CODE} AND WKORD_NUM = #{WKORD_NUM})

WHILE @I &lt;= @MAXNO
	BEGIN

		INSERT @TMPTB
			SELECT
				@PROD_ITEM_NAME	AS PROD_ITEM_NAME
				,@PROD_LOT_NO AS PROD_LOT_NO
				--, ITEM_NAME	AS ITEM_NAME
				, #{ITEM_CODE}	AS ITEM_CODE
				, #{WKORD_NUM}	AS WKORD_NUM
				, #{LOT_NO}	AS LOT_NO
				, CONVERT(CHAR(19), GETDATE(), 20) AS TIME
				, #{INOUT_Q}	AS INOUT_Q
				, #{INOUT_PRSN}	AS INOUT_PRSN
				, #{STOCK_UNIT} AS STOCK_UNIT
			SET @I = @I + 1
	END

 SELECT
	A.PRODITEMNAME	AS PROD_ITEM_NAME	--제품명
	,A.PRODLOTNO	AS PROD_LOT_NO		--제조번호
	, R2.ITEM_NAME	AS ITEM_NAME		--원료명
	, A.ITEMCODE	AS ITEM_CODE		--코드번호
	, A.WKORDNUM	AS WKORD_NUM
	, A.LOTNO	AS LOT_NO				--LOT
	, A.TIME AS TIME					--출고일자(칭량표헤더, 사용일자)
	, A.INOUTQ	AS INOUT_Q				--실중량
	, R1.CODE_NAME	AS INOUT_PRSN		--칭량자
	, A.STOCK_UNIT AS STOCK_UNIT

	, ${OUTSTOCK_REQ_Q} AS OUTSTOCK_REQ_Q	--기준중량
	, ${JAN_Q} AS JAN_Q	--잔여량
	, A.ITEMCODE +'$'+ A.LOTNO + '$' + CONVERT(NVARCHAR(1000),${JAN_Q}) AS BARCODE		--잔여량 바코드

	, (SELECT STOCK_Q FROM BIV100T WHERE COMP_CODE = #{S_COMP_CODE} AND DIV_CODE= #{DIV_CODE} AND WH_CODE = #{WH_CODE} AND ITEM_CODE = #{ITEM_CODE} ) AS STOCK_Q

 FROM @TMPTB	A
 LEFT JOIN BSA100T R1 ON R1.COMP_CODE = #{S_COMP_CODE}
					 AND R1.MAIN_CODE = 'B024'
					 AND R1.SUB_CODE != '$'
					 AND R1.SUB_CODE = A.INOUTPRSN

LEFT JOIN BPR100T R2 ON R2.COMP_CODE = #{S_COMP_CODE}
				    AND R2.ITEM_CODE = A.ITEMCODE

</select>
<select id="pmp282ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">


SELECT
*

FROM (
	SELECT

		A.COMP_CODE
		,A.DIV_CODE
		,A.LINE_END_YN

		,A.WKORD_NUM
		,R3.WEEK_NUM	--계획주차
		,A.ITEM_CODE
		,R1.ITEM_NAME
		,R1.SPEC
		,R1.STOCK_UNIT
		,A.WKORD_Q
		,R2.ITEM_ACCOUNT
		,A.LOT_NO
		,A.PRODT_WKORD_DATE
		,CASE WHEN (SELECT COUNT(S1.COMP_CODE)
					  FROM PMR100T S1 WITH(NOLOCK)
					 WHERE S1.COMP_CODE = A.COMP_CODE
					   AND S1.DIV_CODE = A.DIV_CODE
					   AND S1.WKORD_NUM = A.WKORD_NUM
					   AND S1.LINE_END_YN = 'Y') > 0 THEN '완료'
			  ELSE '미완료'
		END AS PMR_STATUS
		/*김천의 경우 재공창고를 사용함에 따라 칭량 상태를 PMP300의 OUTSTOCK_Q에서 해당 작지번호에 해당하는 수불 출고 내역으로 체크 */
		,CASE WHEN
			   ISNULL((SELECT COUNT(COMP_CODE)
						FROM BTR100T
						WHERE COMP_CODE		    = A.COMP_CODE
						  AND DIV_CODE			= A.DIV_CODE
						  AND INOUT_CODE		= A.WORK_SHOP_CODE
						  AND INOUT_TYPE		= '2'
						  AND CREATE_LOC		= '2'
						  AND ORDER_NUM         = A.WKORD_NUM
						  AND INOUT_METH		= '1'
						  AND INOUT_TYPE_DETAIL = '10'
						  AND INOUT_CODE_TYPE   = '3'
						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM
						HAVING SUM(INOUT_Q) > 0),0) > 0
			 AND

				ISNULL((SELECT COUNT(COMP_CODE)
						FROM BTR100T
						WHERE COMP_CODE		    = A.COMP_CODE
						  AND DIV_CODE			= A.DIV_CODE
						  AND INOUT_CODE		= A.WORK_SHOP_CODE
						  AND INOUT_TYPE		= '2'
						  AND CREATE_LOC		= '2'
						  AND ORDER_NUM         = A.WKORD_NUM
						  AND INOUT_METH		= '1'
						  AND INOUT_TYPE_DETAIL = '10'
						  AND INOUT_CODE_TYPE   = '3'
						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM
						HAVING SUM(INOUT_Q) > 0),0) = ISNULL((SELECT COUNT(COMP_CODE)
																			FROM BTR100T
																			WHERE COMP_CODE		    = A.COMP_CODE
																			  AND DIV_CODE			= A.DIV_CODE
																			  AND INOUT_CODE		= A.WORK_SHOP_CODE
																			  AND INOUT_TYPE		= '2'
																			  AND CREATE_LOC		= '2'
																			  AND ORDER_NUM         = A.WKORD_NUM
																			  AND INOUT_METH		= '1'
																			  AND INOUT_TYPE_DETAIL = '10'
																			  AND INOUT_CODE_TYPE   = '3'
																			GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM	 ),0)


			AND			ISNULL((SELECT SUM(INOUT_Q)
									FROM BTR100T
									WHERE COMP_CODE		    = A.COMP_CODE
									  AND DIV_CODE			= A.DIV_CODE
									  AND INOUT_CODE		= A.WORK_SHOP_CODE
									  AND INOUT_TYPE		= '2'
									  AND CREATE_LOC		= '2'
									  AND ORDER_NUM         = A.WKORD_NUM
									  AND INOUT_METH		= '1'
									  AND INOUT_TYPE_DETAIL = '10'
									  AND INOUT_CODE_TYPE   = '3'
									GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM),0) >= ISNULL((SELECT SUM(OUTSTOCK_REQ_Q)
																							FROM PMP200T
																							WHERE COMP_CODE = A.COMP_CODE
																							AND   DIV_CODE  = A.DIV_CODE
																							AND   WKORD_NUM = A.WKORD_NUM),0)

																						THEN '완료'

		WHEN ISNULL((SELECT COUNT(COMP_CODE)
						FROM BTR100T
						WHERE COMP_CODE		    = A.COMP_CODE
						  AND DIV_CODE			= A.DIV_CODE
						  AND INOUT_CODE		= A.WORK_SHOP_CODE
						  AND INOUT_TYPE		= '2'
						  AND CREATE_LOC		= '2'
						  AND ORDER_NUM         = A.WKORD_NUM
						  AND INOUT_METH		= '1'
						  AND INOUT_Q			=  0
						  AND INOUT_TYPE_DETAIL = '10'
						  AND INOUT_CODE_TYPE   = '3'
						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM	),0) > 0
				 OR ISNULL((SELECT  SUM(ISNULL(INOUT_Q,0))
						FROM BTR100T
						WHERE COMP_CODE		    = A.COMP_CODE
						  AND DIV_CODE			= A.DIV_CODE
						  AND INOUT_CODE		= A.WORK_SHOP_CODE
						  AND INOUT_TYPE		= '2'
						  AND CREATE_LOC		= '2'
						  AND ORDER_NUM         = A.WKORD_NUM
						  AND INOUT_METH		= '1'
						  AND INOUT_TYPE_DETAIL = '10'
						  AND INOUT_CODE_TYPE   = '3'
						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM	),0) > 0 THEN '진행'

				WHEN ISNULL((SELECT  SUM(ISNULL(INOUT_Q,0))
						FROM BTR100T
						WHERE COMP_CODE		    = A.COMP_CODE
						  AND DIV_CODE			= A.DIV_CODE
						  AND INOUT_CODE		= A.WORK_SHOP_CODE
						  AND INOUT_TYPE		= '2'
						  AND CREATE_LOC		= '2'
						  AND ORDER_NUM         = A.WKORD_NUM
						  AND INOUT_METH		= '1'
						  AND INOUT_TYPE_DETAIL = '10'
						  AND INOUT_CODE_TYPE   = '3'
						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM),0) = 0 THEN '대기'

				ELSE '완료' END GUBUN


	 FROM PMP100T A WITH(NOLOCK)
	 LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									  AND R1.ITEM_CODE = A.ITEM_CODE
	 LEFT JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									  AND R2.DIV_CODE = A.DIV_CODE
									  AND R2.ITEM_CODE = A.ITEM_CODE
	 LEFT JOIN PPL100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.DIV_CODE
									  AND R3.DIV_CODE = A.DIV_CODE
									  AND R3.WK_PLAN_NUM = A.WK_PLAN_NUM

	   WHERE A.COMP_CODE = #{S_COMP_CODE}
	     AND A.DIV_CODE = #{DIV_CODE}
	     AND A.LINE_END_YN = 'Y'

	     AND R2.ITEM_ACCOUNT IN (
			SELECT
				SUB_CODE
			  FROM BSA100T WITH(NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE = 'M512'
			   AND SUB_CODE != '$'
	     )

		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	 	 AND A.WKORD_NUM = #{WKORD_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	 	 AND R2.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_WKORD_DATE_FR)">
		 AND A.PRODT_WKORD_DATE	&gt;= #{PRODT_WKORD_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_WKORD_DATE_TO)">
		 AND A.PRODT_WKORD_DATE	&lt;= #{PRODT_WKORD_DATE_TO}
		</if>

)T

WHERE T.COMP_CODE = #{S_COMP_CODE}
<if test="GUBUN == &quot;B&quot;">
	AND T.GUBUN = '대기'
</if>
<if test="GUBUN == &quot;C&quot;">
	AND T.GUBUN = '진행'
</if>
<if test="GUBUN == &quot;D&quot;">
	AND T.GUBUN = '완료'
</if>

<if test="PMR_STATUS == &quot;A&quot;">
	AND T.PMR_STATUS = '미완료'
</if>
<if test="PMR_STATUS == &quot;B&quot;">
	AND T.PMR_STATUS = '완료'
</if>

	   ORDER  BY T.COMP_CODE, T.DIV_CODE, T.WKORD_NUM
</select>


<select id="pmp282ukrvServiceImpl.pop1SelectList" parameterType="Map" resultType="rMap">

SELECT
	A.COMP_CODE
	, A.DIV_CODE
	, A.OUTSTOCK_NUM
	, A.ITEM_CODE
	, A.REF_WKORD_NUM
	, A.PATH_CODE

	,R1.ITEM_NAME
	,R1.SPEC
	,R1.STOCK_UNIT
	,A.OUTSTOCK_REQ_Q --실소요량
	,R3.STOCK_Q		--현재고
	,R2.LOCATION	--재고위치
	,A.LOT_NO
	,R2.WH_CODE
	,A.WORK_SHOP_CODE
	,B.SEQ

	--,A.OUTSTOCK_REQ_Q - A.OUTSTOCK_Q AS OUTSTOCK_JAN_Q
	,A.OUTSTOCK_REQ_Q - ISNULL(R4.OUTSTOCK_Q,0) AS OUTSTOCK_JAN_Q
	, ISNULL(R4.OUTSTOCK_Q,0) AS OUTSTOCK_Q
	, B.WH_CODE AS PMP200T_WH_CODE
  FROM PMP300T A WITH(NOLOCK)
 LEFT JOIN PMP200T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
 								  AND B.DIV_CODE = A.DIV_CODE
 								  AND B.WKORD_NUM = A.REF_WKORD_NUM
 								  AND B.ITEM_CODE = A.ITEM_CODE
								  AND B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
								  AND B.PATH_CODE = A.PATH_CODE
 LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								  AND R1.ITEM_CODE = A.ITEM_CODE
 LEFT JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								  AND R2.DIV_CODE = A.DIV_CODE
								  AND R2.ITEM_CODE = A.ITEM_CODE
 LEFT JOIN BIV100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
								  AND R3.DIV_CODE = R2.DIV_CODE
								  AND R3.ITEM_CODE = R2.ITEM_CODE
								  AND R3.WH_CODE = B.WH_CODE
  LEFT JOIN (SELECT  COMP_CODE
				  , DIV_CODE
				  , ITEM_CODE
				  , ORDER_NUM
				  , MAX(INOUT_CODE) AS INOUT_CODE
				  , SUM(INOUT_Q)    AS OUTSTOCK_Q
				  , PATH_CODE
			FROM	BTR100T
			WHERE   COMP_CODE		    = #{S_COMP_CODE}
				AND DIV_CODE			= #{DIV_CODE}
				AND INOUT_TYPE			= '2'
				AND CREATE_LOC			= '2'
				AND ORDER_NUM			= #{WKORD_NUM}
				AND INOUT_METH			= '1'
				AND INOUT_TYPE_DETAIL	= '10'
				AND INOUT_CODE_TYPE		= '3'
			GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, ORDER_NUM, PATH_CODE) R4 ON R4.COMP_CODE  = A.COMP_CODE
																			  AND R4.DIV_CODE   = A.DIV_CODE
																			  AND R4.ITEM_CODE  = A.ITEM_CODE
																			  AND R4.INOUT_CODE = A.WORK_SHOP_CODE
																			  AND R4.PATH_CODE = A.PATH_CODE
   WHERE A.COMP_CODE = #{S_COMP_CODE}
     AND A.DIV_CODE = #{DIV_CODE}
     AND A.REF_WKORD_NUM = #{WKORD_NUM}

<if test="OUT_GUBUN != &quot;1&quot;">
     --AND (A.OUTSTOCK_REQ_Q - A.OUTSTOCK_Q) &gt;= 0
     --AND (A.OUTSTOCK_REQ_Q - ISNULL(R4.OUTSTOCK_Q,0)) &gt;= 0
     AND  ISNULL(R4.OUTSTOCK_Q,0)  &lt;  (A.OUTSTOCK_REQ_Q)  * (1- 0.01)

</if>
<if test="OUT_GUBUN == &quot;1&quot;">
     AND A.OUTSTOCK_Q = 0
</if>
     --5 인 이유는 출고수량이 정확히 똑같이 않고 약간의 오차가 있음
     --0 보다는 크로 5보다는 작은 값이 있어서 1로 변경함
     -- 1보다 작은 값이 있어서 0 으로 변경함
     -- 출고량이 0보다 크면 안나오도록 변경함
     ORDER BY B.SEQ
</select>

<select id="pmp282ukrvServiceImpl.pop1_2SelectList" parameterType="Map" resultType="rMap">

	 SELECT
		A.COMP_CODE
		,A.DIV_CODE
	, A.ITEM_CODE
	,R1.ITEM_NAME
	,R1.SPEC
	,R1.STOCK_UNIT
	,R2.LOCATION	--재고위치
	,A.INOUT_Q -- 출고량
	,B.OUTSTOCK_REQ_Q--실소요량
	,A.INOUT_NUM
	,A.INOUT_SEQ
	,A.ORDER_NUM --작업지시번

	,B.OUTSTOCK_NUM
	,B.REF_WKORD_NUM
	,B.PATH_CODE
	,A.LOT_NO
	,C.SEQ
	,A.WH_CODE
	   FROM BTR100T A WITH(NOLOCK)
 LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								  AND R1.ITEM_CODE = A.ITEM_CODE
 LEFT JOIN BPR200T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
								  AND R2.DIV_CODE = A.DIV_CODE
								 AND R2.ITEM_CODE = A.ITEM_CODE
LEFT JOIN PMP300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								AND B.DIV_CODE = A.DIV_CODE
								AND B.ITEM_CODE = A.ITEM_CODE
								AND B.REF_WKORD_NUM = A.ORDER_NUM
								AND B.PATH_CODE = A.PATH_CODE
 LEFT JOIN PMP200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
 								  AND C.DIV_CODE = A.DIV_CODE
 								  AND C.WKORD_NUM = A.ORDER_NUM
 								  AND C.ITEM_CODE = A.ITEM_CODE
								  AND C.OUTSTOCK_NUM = B.OUTSTOCK_NUM
								  AND C.PATH_CODE = A.PATH_CODE

   WHERE A.COMP_CODE 		= #{S_COMP_CODE}
     AND A.DIV_CODE 		= #{DIV_CODE}
	 AND A.INOUT_TYPE 		= '2'
     AND A.ORDER_NUM 		= #{WKORD_NUM}
     AND A.CREATE_LOC 		= '2'
     AND INOUT_METH			= '1'
	 AND INOUT_TYPE_DETAIL	= '10'
	 AND INOUT_CODE_TYPE	= '3'
	 AND A.INOUT_CODE		= C.WORK_SHOP_CODE
     ORDER BY C.SEQ
</select>

<select id="pmp282ukrvServiceImpl.pop2SelectList" parameterType="Map" resultType="rMap">
SELECT
	A.COMP_CODE
	,A.DIV_CODE
	,A.LOT_NO
	,B.INOUT_DATE	AS INOUT_DATE_1		--입고일
	,CONVERT(VARCHAR, GETDATE(), 112) AS INOUT_DATE_2		--출고일
	,A.STOCK_Q
	,0 AS INOUT_Q
	,A.STOCK_Q AS JAN_Q
	,R1.LOCATION

	,A.ITEM_CODE
	,A.WH_CODE
	,#{WORK_SHOP_CODE} AS WORK_SHOP_CODE
	,#{OUTSTOCK_NUM} AS OUTSTOCK_NUM
	,#{REF_WKORD_NUM} AS REF_WKORD_NUM
	,#{PATH_CODE} AS PATH_CODE

     ,${OUTSTOCK_REQ_Q} - (SELECT SUM(ISNULL(S1.INOUT_Q,0)) FROM BTR100T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.INOUT_TYPE = '2' AND S1.LOT_NO = A.LOT_NO    AND S1.ORDER_NUM = #{REF_WKORD_NUM} AND S1.ITEM_CODE = A.ITEM_CODE) AS JAN_OUTSTOCK_REQ_Q -- 출고후 남은 요청량

	,#{PMP200T_WH_CODE} AS PMP200T_WH_CODE

	,#{INOUT_PRSN} AS INOUT_PRSN

FROM BIV150T A WITH(NOLOCK)
 LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO, MIN(A.INOUT_DATE) AS INOUT_DATE
				FROM BTR100T  A  WITH(NOLOCK)
			   WHERE A.COMP_CODE = #{S_COMP_CODE}
				 AND A.DIV_CODE  = #{DIV_CODE}
				 AND A.CREATE_LOC IN ( '2','4')
				 AND A.INOUT_TYPE = '1'
				 AND A.INOUT_DATE &gt;= (SELECT CONVERT(VARCHAR(8), DATEADD(DAY,-1, CONVERT(DATE, CONVERT(VARCHAR(6), dateadd(month,1,
													(SELECT S1.BASIS_YYYYMM FROM BIV900T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.WH_CODE = A.WH_CODE)
												+'01'),112)+'01')),112))
				GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO) B  ON B.COMP_CODE = A.COMP_CODE
																						AND B.DIV_CODE = A.DIV_CODE
																						AND B.WH_CODE = A.WH_CODE
																						AND B.ITEM_CODE = A.ITEM_CODE
																						AND B.LOT_NO = A.LOT_NO
INNER JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								 AND R1.DIV_CODE = A.DIV_CODE
								 AND R1.ITEM_CODE = A.ITEM_CODE

WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{DIV_CODE}
  AND A.SUM_TYPE = 'C'
  AND A.STOCK_Q &gt; 0

  AND A.ITEM_CODE = #{ITEM_CODE}

 <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
  AND A.LOT_NO = #{LOT_NO}
 </if>

  AND ISNULL(A.WH_CODE,'') IN (
	SELECT ISNULL(S1.WH_CODE,'') FROM BSA230T S1 WHERE S1.COMP_CODE = #{S_COMP_CODE} AND S1.TYPE_LEVEL = #{DIV_CODE}
  )

  --ORDER BY A.COMP_CODE	,A.DIV_CODE	,B.INOUT_DATE
	ORDER BY A.COMP_CODE	,A.DIV_CODE	,A.LOT_NO
</select>


<select id="pmp282ukrvServiceImpl.checkLotNo" parameterType="Map" resultType="rMap">
	/* pmp282ukrvServiceImpl.checkLotNo */

		SELECT TOP 1
			*
		  FROM BIV150T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND LOT_NO = #{LOT_NO}

</select>

<select id="pmp282ukrvServiceImpl.checkIn" parameterType="Map" resultType="rMap">
	/* pmp282ukrvServiceImpl.checkLotNo */
		SELECT TOP 1
			*
		  FROM BTR100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND INOUT_TYPE = '1'	--입고
		   AND LOT_NO = #{LOT_NO}
</select>

<insert id="pmp282ukrvServiceImpl.insertPop2" parameterType="Map">
	/* pmp282ukrvServiceImpl.insertPop2 */
INSERT INTO L_BTR100T
     ( KEY_VALUE, OPR_FLAG
  	 , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
     , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
     , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
     , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
     , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
     , BILL_TYPE, SALE_TYPE
     , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
     , LC_NUM, BL_NUM, TRADE_LOC, ACCOUNT_YNC, ACCOUNT_Q
     , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
     , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME

     ,MAKE_LOT_NO	-- ,MAKE_DATE		--,MAKE_EXP_DATE

     , OUTSTOCK_NUM        , REF_WKORD_NUM
     , PATH_CODE
	 )
VALUES
     ( #{KEY_VALUE}, #{OPR_FLAG}
	 , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
	 , #{INOUT_CODE_TYPE},

	 #{INOUT_CODE}, -- 출고시 작업장 , 입고시 거래처 가져와야함

	  #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS},

	   #{WH_CODE}, -- 창고코드가져와야함

	   #{WH_CELL_CODE}, #{INOUT_PRSN}
	 , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}
	 , #{TRANS_COST}, #{TARIFF_AMT}, #{BASIS_NUM}, #{BASIS_SEQ}, #{PROJECT_NO}, #{LOT_NO}, #{REMARK}
	 , #{ORDER_TYPE}, #{REF_WKORD_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P},#{ORDER_UNIT_I},#{ORDER_UNIT_FOR_P}
	 , #{BILL_TYPE}, #{SALE_TYPE}
	 , #{PRICE_YN},#{SALE_DIV_CODE},#{SALE_CUSTOM_CODE}, #{SALE_C_DATE}
	 , #{LC_NUM}, #{BL_NUM}, #{TRADE_LOC}, #{ACCOUNT_YNC}, #{ACCOUNT_Q}
	 , #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}
	 , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()

	 ,#{MAKE_LOT_NO}

	 , #{OUTSTOCK_NUM}        , #{REF_WKORD_NUM}
	 , #{PATH_CODE}
	 )
</insert>

<insert id="pmp282ukrvServiceImpl.insertPop1_2" parameterType="Map">
	/* pmp282ukrvServiceImpl.insertPop1_2 */
INSERT INTO L_BTR100T
     ( KEY_VALUE, OPR_FLAG

  	 , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
     , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
     , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
     , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
     , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
     , BILL_TYPE, SALE_TYPE
     , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
     , LC_NUM, BL_NUM, TRADE_LOC, ACCOUNT_YNC, ACCOUNT_Q
     , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
     , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME

     ,MAKE_LOT_NO	 ,MAKE_DATE		,MAKE_EXP_DATE

     , OUTSTOCK_NUM        , REF_WKORD_NUM
     , PATH_CODE
	 )
SELECT
#{KEY_VALUE}, #{OPR_FLAG},
COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
     , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
     , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
     , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
     , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
     , BILL_TYPE, SALE_TYPE
     , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
     , LC_NUM, BL_NUM, TRADE_LOC, ACCOUNT_YNC, ACCOUNT_Q
     , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
     , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()

     ,MAKE_LOT_NO	 ,MAKE_DATE		,MAKE_EXP_DATE
	 , #{OUTSTOCK_NUM}        , #{REF_WKORD_NUM}
	 , #{PATH_CODE}
    FROM BTR100T
   WHERE COMP_CODE = #{S_COMP_CODE}
     AND DIV_CODE = #{DIV_CODE}
     AND INOUT_NUM = #{INOUT_NUM}
     AND INOUT_SEQ = #{INOUT_SEQ}
     AND INOUT_TYPE = '2'

</insert>

<update id="pmp282ukrvServiceImpl.spCallPop2_1" parameterType="Map" statementType="CALLABLE">

		{call SP_MATRL_Receiving (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CreateType, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>

<update id="pmp282ukrvServiceImpl.spCallPop2_2" parameterType="Map" statementType="CALLABLE">

    {call uniLITE.USP_MATRL_WEIGHING_OUT  (
        #{KeyValue,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
        #{InOutNum,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
        #{ErrorDesc,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
    )}
</update>

<delete id="pmp282ukrvServiceImpl.deleteDetail" parameterType="Map">
	DELETE WKORDIN2
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
	   AND PROG_WORK_CODE = #{PROG_WORK_CODE}
</delete>

<select id="pmp282ukrvServiceImpl.pop2SelectEarlierCheckList" parameterType="Map" resultType="rMap">
	SELECT	TOP 1  A.ITEM_CODE,
			   	   R1.ITEM_NAME,
			       A.LOT_NO    AS EARLIER_LOT_NO

	FROM BIV150T A WITH(NOLOCK)
	 LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO, MIN(A.INOUT_DATE) AS INOUT_DATE
					FROM BTR100T  A  WITH(NOLOCK)
				   WHERE A.COMP_CODE = #{S_COMP_CODE}
					 AND A.DIV_CODE  = #{DIV_CODE}
					 AND A.CREATE_LOC IN ( '2','4')
					 AND A.INOUT_TYPE = '1'
					 AND A.INOUT_DATE &gt;= (SELECT CONVERT(VARCHAR(8), DATEADD(DAY,-1, CONVERT(DATE, CONVERT(VARCHAR(6), dateadd(month,1,
														(SELECT S1.BASIS_YYYYMM FROM BIV900T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.WH_CODE = A.WH_CODE)
													+'01'),112)+'01')),112))
					GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO) B  ON B.COMP_CODE = A.COMP_CODE
																							AND B.DIV_CODE = A.DIV_CODE
																							AND B.WH_CODE = A.WH_CODE
																							AND B.ITEM_CODE = A.ITEM_CODE
																							AND B.LOT_NO = A.LOT_NO
	INNER JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									 AND R1.DIV_CODE = A.DIV_CODE
									 AND R1.ITEM_CODE = A.ITEM_CODE

	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{DIV_CODE}
	  AND A.SUM_TYPE = 'C'
	  AND A.STOCK_Q &gt; 0

	  AND A.ITEM_CODE = #{ITEM_CODE}
	  AND A.LOT_NO <![CDATA[< ]]> #{LOT_NO}

	  AND ISNULL(A.WH_CODE,'') NOT IN (
		SELECT ISNULL(S1.WH_CODE,'') FROM BSA230T S1 WHERE S1.COMP_CODE = #{S_COMP_CODE} AND S1.TYPE_LEVEL = #{DIV_CODE}
	  )

	  --ORDER BY A.COMP_CODE	,A.DIV_CODE	,B.INOUT_DATE
	  ORDER BY A.LOT_NO
</select>

<select id="pmp282ukrvServiceImpl.pop2SelectCheckList" parameterType="Map" resultType="integer">
	SELECT	count(1) AS CNT

	FROM BIV150T A WITH(NOLOCK)
	 LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO, MIN(A.INOUT_DATE) AS INOUT_DATE
					FROM BTR100T  A  WITH(NOLOCK)
				   WHERE A.COMP_CODE = #{S_COMP_CODE}
					 AND A.DIV_CODE  = #{DIV_CODE}
					 AND A.CREATE_LOC IN ( '2','4')
					 AND A.INOUT_TYPE = '1'
					 AND A.INOUT_DATE &gt;= (SELECT CONVERT(VARCHAR(8), DATEADD(DAY,-1, CONVERT(DATE, CONVERT(VARCHAR(6), dateadd(month,1,
														(SELECT S1.BASIS_YYYYMM FROM BIV900T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.WH_CODE = A.WH_CODE)
													+'01'),112)+'01')),112))
					GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO) B  ON B.COMP_CODE = A.COMP_CODE
																							AND B.DIV_CODE = A.DIV_CODE
																							AND B.WH_CODE = A.WH_CODE
																							AND B.ITEM_CODE = A.ITEM_CODE
																							AND B.LOT_NO = A.LOT_NO
	INNER JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									 AND R1.DIV_CODE = A.DIV_CODE
									 AND R1.ITEM_CODE = A.ITEM_CODE

	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{DIV_CODE}
	  AND A.SUM_TYPE = 'C'
	  AND A.STOCK_Q &gt; 0

	  AND A.ITEM_CODE = #{ITEM_CODE}
	  AND A.LOT_NO 	  = #{LOT_NO}

	  AND ISNULL(A.WH_CODE,'') NOT IN (
		SELECT ISNULL(S1.WH_CODE,'') FROM BSA230T S1 WHERE S1.COMP_CODE = #{S_COMP_CODE} AND S1.TYPE_LEVEL = #{DIV_CODE}
	  )

	  --ORDER BY A.COMP_CODE	,A.DIV_CODE	,B.INOUT_DATE
	  --ORDER BY A.LOT_NO
</select>
</mapper>