<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmp203ukrvServiceImpl">
   
	<select id="pmp203ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	/* pmp203ukrv.Cpmp203ukrv[fnPmp203QStd] Query01 */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
		      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
		      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
		      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
		      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */
		                
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}   
		    
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		WHERE USER_ID = @UserId
		    
		SET @RefItem = ISNULL(@RefItem, N'0')
		    
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE = @CompCode
		    AND MAIN_CODE = N'B044'
		    AND REF_CODE1 = N'Y'
		    
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    
	    /* 데이터 조회 */                                                                                          
	    SELECT A.WKORD_STATUS                                                           AS WKORD_STATUS          /* 상태코드(P001) */
	         , M1.CODE_NAME                                                             AS WKORD_STATUS_NM       /* 상태           */
	         , B.ITEM_CODE                                                                                       /* 품목코드       */
	         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1                                                               
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2                                                               
	                                     ELSE C1.ITEM_NAME                                                                                    
	             END)                                                                    AS ITEM_NAME            /* 품목명         */   
	         , C1.SPEC                                                                   AS SPEC                 /* 규격           */
	         , C1.STOCK_UNIT                                                             AS STOCK_UNIT           /* 단위           */
	         , B.PATH_CODE                                                               AS PATH_CODE            /* BOM PATH 정보  */
	         , M2.CODE_NAME                                                              AS PATH_NAME            /* BOM PATH 정보  */
	         , (CASE WHEN ISNULL(B.OUTSTOCK_REQ_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.OUTSTOCK_REQ_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(B.OUTSTOCK_REQ_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(B.OUTSTOCK_REQ_DATE, 7, 2)) 
	             END)                                                                    AS OUTSTOCK_REQ_DATE    /* 출고요청일     */
	         , uniLITE.fnFormat(A.COMP_CODE, ISNULL(B.OUTSTOCK_REQ_Q, 0), 'P_FSET_QS')   AS OUTSTOCK_REQ_Q       /* 출고요청량     */
	         , uniLITE.fnFormat(A.COMP_CODE, ISNULL(C.OUTSTOCK_Q, 0),     'P_FSET_QS')   AS OUTSTOCK_Q           /* 출고량         */
	         , uniLITE.fnFormat(A.COMP_CODE, ISNULL(B.ALLOCK_Q, 0),       'P_FSET_QS')   AS ALLOCK_Q             /* 자재예약량     */
	         , uniLITE.fnFormat(A.COMP_CODE, ISNULL(C2.MINI_PACK_Q, 0),   'P_FSET_QS')   AS MINI_PACK_Q          /* 최소포장수량   */
	         , uniLITE.fnFormat(A.COMP_CODE, ISNULL(B.OUTSTOCK_REQ_Q, 0) - ISNULL(B.ALLOCK_Q, 0), 'P_FSET_QS')                                                                               AS OUTSTOCK_OVER_Q      /* 과출고수량     */
	         , A.WKORD_NUM                                                               AS REF_WKORD_NUM        /* 작지번호       */
	         , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
	             END)                                                                    AS PRODT_WKORD_DATE     /* 작업지시일     */
	         , A.ITEM_CODE                                                               AS PITEM_CODE           /* 작지 품목코드  */
	         , (CASE WHEN @RefItem = '1' THEN D1.ITEM_NAME1                                                               
	                 WHEN @RefItem = '2' THEN D1.ITEM_NAME2                                                               
	                                     ELSE D1.ITEM_NAME                                                                                    
	             END)                                                                    AS PITEM_NAME           /* 작지 품목명    */
	         , D1.SPEC                                                                   AS PSPEC                /* 작지 규격      */
	         , D1.STOCK_UNIT                                                             AS PSTOCK_UNIT          /* 작지 단위      */
	         , B.OUTSTOCK_NUM                                                                                    /* 요청번호       */
	         , A.PROJECT_NO                                                                                      /* 관리번호       */
	         , A.PJT_CODE                                                                                        /* 프로젝트번호   */
	         , A.LOT_NO                                                                                          /* Lot No.        */
	         , C.REMARK                                                                                          /* 비고           */
	         , A.COMP_CODE                                                                                       /* 법인코드(Hidden) */
	         , A.DIV_CODE                                                                                        /* 사업장  (Hidden) */
	         , A.WORK_SHOP_CODE                                                                                  /* 작업장  (Hidden) */
	         , C.CONTROL_STATUS                                                                                  /* 출고요진행상태  (Hidden)  */
	         , B.UPDATE_DB_USER                                                                                  /* 수정자  (Hidden) */
	         , B.UPDATE_DB_TIME                                                                                  /* 수정일  (Hidden) */
	    FROM              PMP100TV1 A  WITH (NOLOCK)
	           INNER JOIN PMP200T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
	                                                AND B.DIV_CODE      = A.DIV_CODE
	                                                AND B.WKORD_NUM     = A.WKORD_NUM
	           LEFT  JOIN PMP300T   C  WITH (NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
	                                                AND C.DIV_CODE      = B.DIV_CODE
	                                                AND C.REF_WKORD_NUM = B.WKORD_NUM
	                                                AND C.ITEM_CODE     = B.ITEM_CODE
	                                                AND C.PATH_CODE     = B.PATH_CODE
	           LEFT  JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = B.COMP_CODE
	                                                AND C1.ITEM_CODE    = B.ITEM_CODE
	           LEFT  JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = B.COMP_CODE
	                                                AND C2.DIV_CODE     = B.DIV_CODE
	                                                AND C2.ITEM_CODE    = B.ITEM_CODE
	           LEFT  JOIN BPR100T   D1 WITH (NOLOCK) ON D1.COMP_CODE    = A.COMP_CODE
	                                                AND D1.ITEM_CODE    = A.ITEM_CODE
	           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
	                                                AND M1.MAIN_CODE    = 'P001'
	                                                AND M1.SUB_CODE     = A.WKORD_STATUS
	           LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE    = B.COMP_CODE
	                                                AND M2.MAIN_CODE    = 'B083'
	                                                AND M2.SUB_CODE     = B.PATH_CODE
	    WHERE  A.COMP_CODE          = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
	    AND    A.DIV_CODE           = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
	    AND    A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(PRODT_WKORD_DATE_FR)">
	    AND    A.PRODT_WKORD_DATE  &gt;= #{PRODT_WKORD_DATE_FR}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(PRODT_WKORD_DATE_TO)">
	    AND    A.PRODT_WKORD_DATE  &lt;= #{PRODT_WKORD_DATE_TO}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
	    AND    C.OUTSTOCK_REQ_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
	    AND    C.OUTSTOCK_REQ_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
			   AND B.ITEM_CODE = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
			   AND B.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210826 수정: 품목 팝업창 정규화 -->
			   AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                    ELSE C1.ITEM_NAME
	               END LIKE '%' + #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(PITEM_CODE) and @foren.Ognl@isNotEmpty(PITEM_NAME)"> <!-- 20210826 수정: 모품목코드 팝업창 정규화 -->
			   AND A.ITEM_CODE = #{PITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PITEM_CODE) and @foren.Ognl@isEmpty(PITEM_NAME)"> <!-- 20210826 수정: 모품목코드 팝업창 정규화 -->
			   AND A.ITEM_CODE LIKE #{PITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(PITEM_CODE) and @foren.Ognl@isNotEmpty(PITEM_NAME)"> <!-- 20210826 수정: 모품목코드 팝업창 정규화 -->
			   AND CASE WHEN @RefItem = '0' THEN D1.ITEM_NAME
	                    WHEN @RefItem = '1' THEN D1.ITEM_NAME1
	                    WHEN @RefItem = '2' THEN D1.ITEM_NAME2
	                    ELSE D1.ITEM_NAME
	               END LIKE '%' + #{PITEM_NAME} + '%'
		</if>
	    <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">         	
	    AND    A.WKORD_NUM       LIKE #{WKORD_NUM} + '%'	
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
	    AND    C.OUTSTOCK_NUM    LIKE #{OUTSTOCK_NUM} + '%'	
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CONTROL_STATUS)">
	    AND    A.WKORD_STATUS       = #{CONTROL_STATUS}   
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_YN)">
	    AND    ((#{OUTSTOCK_REQ_YN}  = '')  OR (#{OUTSTOCK_REQ_YN}  = '1' AND B.OUTSTOCK_REQ_Q     &gt; 0)
	                                 	    OR (#{OUTSTOCK_REQ_YN}  = '2' AND B.OUTSTOCK_REQ_Q    &lt;= 0))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_VIEW_YN)">                             
	    AND    ((#{OUTSTOCK_VIEW_YN} = 'Y') OR (#{OUTSTOCK_VIEW_YN} = 'N' AND ISNULL(C.OUTSTOCK_Q, 0) = 0))
	    </if>
	    	    
		AND    (B.WH_CODE       != ''  OR B.OUT_METH         = '1')
	    ORDER BY ISNULL(A.TOP_WKORD_NUM, '') + A.WKORD_NUM, C.OUTSTOCK_NUM
	
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	
	<select id="pmp203ukrvServiceImpl.selectDelete" parameterType="Map" resultType="rMap">
	--UPmp20Krv.CPmp203UKr[fnPmp203Save] Query1-1
	SELECT OUTSTOCK_NUM
	     , CONTROL_STATUS
	     , OUTSTOCK_REQ_DATE
	     , ISNULL(OUTSTOCK_REQ_Q, 0)    AS OUTSTOCK_REQ_Q
	     , ISNULL(OUTSTOCK_Q, 0)        AS OUTSTOCK_Q
	     , ISNULL(CANCEL_Q, 0)          AS CANCEL_Q
	  FROM PMP300T
	 WHERE COMP_CODE      = #{S_COMP_CODE}
	   AND DIV_CODE       = #{DIV_CODE}
	   AND ITEM_CODE      = #{ITEM_CODE}
	   AND OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
	   AND REF_WKORD_NUM  = #{REF_WKORD_NUM}
	   AND PATH_CODE      = #{PATH_CODE}
	</select>
	
	<select id="pmp203ukrvServiceImpl.selectSave" parameterType="Map" resultType="rMap">
	--UPmp20Krv.CPmp203UKr[fnPmp203Save] Query2-1
    SELECT OUTSTOCK_NUM
         , CONTROL_STATUS
         , OUTSTOCK_REQ_DATE
         , ISNULL(OUTSTOCK_REQ_Q, 0)                   AS OUTSTOCK_REQ_Q
         , ISNULL(OUTSTOCK_Q, 0) - ISNULL(CANCEL_Q, 0) AS OUTSTOCK_Q
      FROM PMP300T
     WHERE COMP_CODE      = #{S_COMP_CODE}
       AND DIV_CODE       = #{DIV_CODE}
       AND ITEM_CODE      = #{ITEM_CODE}
       AND OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
       AND REF_WKORD_NUM  = #{REF_WKORD_NUM}
       AND PATH_CODE      = #{PATH_CODE}
	</select>
	
	<update id="pmp203ukrvServiceImpl.updateDetail" parameterType="rMap">	/* 저장 */
	--pmp203ukrv.Cpmp203ukrv[fnPmp203Save] Query2-2
	UPDATE PMP300T
	   SET OUTSTOCK_REQ_DATE = #{OUTSTOCK_REQ_DATE}
	     , OUTSTOCK_REQ_Q    = #{OUTSTOCK_REQ_Q}
	     , OUTSTOCK_Q        = #{OUTSTOCK_Q}
	     , PROJECT_NO        = #{PROJECT_NO}
	     , PJT_CODE          = #{PJT_CODE}
	     , LOT_NO            = #{LOT_NO}
	     , REMARK            = #{REMARK}
	     , WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
	     , CONTROL_STATUS    = #{CONTROL_STATUS}
	     , UPDATE_DB_USER    = #{S_USER_ID}
	     , UPDATE_DB_TIME    = getDate()
	     
	 WHERE ITEM_CODE         = #{ITEM_CODE}
	   AND PATH_CODE         = #{PATH_CODE}
	   AND REF_WKORD_NUM     = #{REF_WKORD_NUM}
	   AND OUTSTOCK_NUM      = #{OUTSTOCK_NUM}
	   AND COMP_CODE         = #{COMP_CODE}
	   AND DIV_CODE          = #{DIV_CODE}
	  
	</update>
	
	<delete id="pmp203ukrvServiceImpl.deleteDetail" parameterType="Map">
	--pmp203ukrv.Cpmp203ukrv[fnPmp203Save] Query1-2
	DELETE FROM PMP300T 
	 WHERE ITEM_CODE     = #{ITEM_CODE}
	   AND PATH_CODE     = #{PATH_CODE}
	   AND REF_WKORD_NUM = #{REF_WKORD_NUM}
	   AND OUTSTOCK_NUM  = #{OUTSTOCK_NUM}
	   AND COMP_CODE     = #{S_COMP_CODE}
	   AND DIV_CODE      = #{DIV_CODE}
	  	
	</delete>
	
	<update id="pmp203ukrvServiceImpl.updateDetail2" parameterType="rMap">	/* 저장후 데이터 처리 */
	--1) 출고요청 저장후 데이터 처리
	--pmp203ukrv.Cpmp203ukrv[fnSaveRequest] Query1
    /*
    ---------------------------------------------------------------------------------------
    --  출고요청 저장 후, 후속 작업 처리
    
    --  1. 출고요청변경 Validation Check
    --  2. 자재예약정보(PMP200T) 에 출고요청정보 UPDATE
    --  3. 출고요청정보(PMP300T) 의 CONTROL_STATUS 설정
    
    ---------------------------------------------------------------------------------------
    --  4. Error Handler 처리
    */
    
    BEGIN
        SET NOCOUNT ON
    
    --  입력 변수
        DECLARE     @COMP_CODE      NVARCHAR(08)        -- 법인코드
                  , @DIV_CODE       NVARCHAR(08)        -- 사업장
                  , @ITEM_CODE      NVARCHAR(20)        -- 품목코드
                  , @OUTSTOCK_NUM   NVARCHAR(20)        -- 출고요청번호
                  , @WKORD_NUM      NVARCHAR(20)        -- 작업지시번호
                  , @PATH_CODE      NVARCHAR(08)        -- BOM PATH정보
    
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @ITEM_CODE      = #{ITEM_CODE}
        SET @OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
        SET @WKORD_NUM      = #{REF_WKORD_NUM}
        SET @PATH_CODE      = #{PATH_CODE}
    
    --  일반 변수
        DECLARE     @WkordStatus    NVARCHAR(01)        -- 작업지시상태
                  , @ErrorCode      NVARCHAR(20)        -- 에러코드
                  , @ErrorDesc      NVARCHAR(1000)      -- 에러 메세지
    
        SET @ErrorCode = ''
        SET @ErrorDesc = ''
    
    --  1. 출고요청변경 Validation Check
        BEGIN
    --      1-1. 작업지시 마감여부 Check                        (에러: 54100, 이미 마감된 자료 입니다..)
            IF EXISTS (SELECT TOP 1 1
                       FROM   PMP100TV1 WITH (NOLOCK)
                       WHERE  COMP_CODE     = @COMP_CODE
                       AND    DIV_CODE      = @DIV_CODE
                       AND    WKORD_NUM     = @WKORD_NUM
                       AND    WKORD_STATUS >= '8')
            BEGIN
                SET @ErrorCode = '54100'
    
                GOTO ERROR_HANDLER
            END
        END
    
    --  2. 자재예약정보(PMP200T) 에 출고요청정보 UPDATE
        UPDATE A
        SET    OUTSTOCK_NUM      = ISNULL(B.OUTSTOCK_NUM, '')
             , OUTSTOCK_REQ_DATE = ISNULL(B.OUTSTOCK_REQ_DATE, '00000000')
             , OUTSTOCK_REQ_Q    = ISNULL(B.OUTSTOCK_REQ_Q, 0)
        FROM             PMP200T A
               LEFT JOIN PMP300T B ON A.COMP_CODE = B.COMP_CODE
                                  AND A.DIV_CODE  = B.DIV_CODE
                                  AND A.ITEM_CODE = B.ITEM_CODE
                                  AND A.WKORD_NUM = B.REF_WKORD_NUM
                                  AND A.PATH_CODE = B.PATH_CODE
        WHERE  A.COMP_CODE       = @COMP_CODE
        AND    A.DIV_CODE        = @DIV_CODE
        AND    A.ITEM_CODE       = @ITEM_CODE
        AND    A.WKORD_NUM       = @WKORD_NUM
        AND    A.PATH_CODE       = @PATH_CODE
    
    --  3. 출고요청정보(PMP300T) 의 CONTROL_STATUS 설정
        UPDATE PMP300T
        SET    CONTROL_STATUS    = CASE WHEN CONTROL_STATUS = '8' THEN '8'
                                        ELSE CASE WHEN OUTSTOCK_Q = 0 THEN '2'
                                                  WHEN OUTSTOCK_Q &gt; 0 THEN 
                                                       CASE WHEN OUTSTOCK_REQ_Q > OUTSTOCK_Q THEN '3'
                                                            WHEN OUTSTOCK_REQ_Q = OUTSTOCK_Q THEN '9'
                                                       END
                                             END
                                   END
        WHERE  COMP_CODE         = @COMP_CODE
        AND    DIV_CODE          = @DIV_CODE
        AND    ITEM_CODE         = @ITEM_CODE
        AND    OUTSTOCK_NUM      = @OUTSTOCK_NUM
        AND    REF_WKORD_NUM     = @WKORD_NUM
        AND    PATH_CODE         = @PATH_CODE
    
    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    --  4. Error Handler 처리
    ERROR_HANDLER:
        SELECT ISNULL(@ErrorCode, '') AS ERROR_CODE, ISNULL(@ErrorDesc, '') AS ERROR_DESC
    
    END
	</update>
	
	<select id="pmp203ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
    SELECT A.COMP_CODE, A.COMP_NAME
    FROM              BOR100T   A  WITH (NOLOCK)
           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                                AND M1.MAIN_CODE    = 'B107'
                                                AND M1.SUB_CODE     = '20'         
    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
</mapper>