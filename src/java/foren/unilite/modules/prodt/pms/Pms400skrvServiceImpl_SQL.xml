<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pms400skrvServiceImpl">
	<select id="pms400skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* pms400skrvServiceImpl.selectList */
		SELECT
		       A.COMP_CODE
		     , A.DIV_CODE  
		     , A.INSPEC_NUM
		     , A.INSPEC_SEQ
		     , A.INSPEC_DATE																	--검사일자
		     , A.ITEM_CODE																		--품목코드
		     , C.ITEM_NAME																		--품명
		     , C.SPEC																			--규격
		     , D.WORK_SHOP_CODE												AS WORK_SHOP_CODE	--작업장코드
		     , Z.TREE_NAME													AS WORK_SHOP_NAME	--작업장명
		     , A.INSPEC_Q																		--검사수량
		     , A.GOOD_INSPEC_Q																	--합격수량
		     , A.BAD_INSPEC_Q																	--불량수량
		     , ( A.INSPEC_NUM +  convert(nvarchar(5),A.INSPEC_SEQ))			AS NOSEQ
		     , A.INSPEC_PRSN
		     , convert(numeric(5,2),(A.BAD_INSPEC_Q / A.INSPEC_Q)) * 100	AS BAD_LATE
		     , T.BAD_INSPEC_NAME1											AS BAD_INSPEC1
		     , T.BAD_INSPEC_NAME2											AS BAD_INSPEC2
		     , T.BAD_INSPEC_NAME3											AS BAD_INSPEC3
		     , T.BAD_INSPEC_NAME4											AS BAD_INSPEC4
		     , T.BAD_INSPEC_NAME5											AS BAD_INSPEC5
		     , T2.BAD_INSPEC_Q1
		     , T2.BAD_INSPEC_Q2
		     , T2.BAD_INSPEC_Q3
		     , T2.BAD_INSPEC_Q4
		     , T2.BAD_INSPEC_Q5
		     , A.REMARK
		     , 1 AS SEQ
		     , A.LOT_NO
		  FROM       QMS400T A WITH(NOLOCK)
		  LEFT  JOIN BSA230T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                   AND B.TREE_CODE  = A.TEMPC_01
		  LEFT  JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
		                                   AND C.ITEM_CODE  = A.ITEM_CODE
		  INNER JOIN PMR200T D WITH(NOLOCK) ON D.COMP_CODE  = A.COMP_CODE
		                                   AND D.DIV_CODE   = A.DIV_CODE
		                                   AND D.PRODT_NUM  = A.PRODT_NUM
		  INNER JOIN BSA230T Z WITH(NOLOCK) ON Z.COMP_CODE  = A.COMP_CODE
		                                   AND Z.TYPE_LEVEL = A.DIV_CODE
		                                   AND Z.TREE_CODE  = D.WORK_SHOP_CODE
		  LEFT JOIN (
		             SELECT COMP_CODE
		                  , DIV_CODE
		                  , INSPEC_NUM
		                  , INSPEC_SEQ
		                  , MAX(BAD_INSPEC_NAME1) AS BAD_INSPEC_NAME1
		                  , MAX(BAD_INSPEC_NAME2) AS BAD_INSPEC_NAME2
		                  , MAX(BAD_INSPEC_NAME3) AS BAD_INSPEC_NAME3
		                  , MAX(BAD_INSPEC_NAME4) AS BAD_INSPEC_NAME4
		                  , MAX(BAD_INSPEC_NAME5) AS BAD_INSPEC_NAME5
		                FROM (
		                        SELECT AA.COMP_CODE
		                             , AA.DIV_CODE
		                             , AA.INSPEC_NUM
		                             , AA.INSPEC_SEQ
		                             , CASE WHEN AA.RN = 1 THEN AA.BAD_INSPEC_NAME ELSE NULL 
		                               END AS BAD_INSPEC_NAME1
		                             , CASE WHEN AA.RN = 2 THEN AA.BAD_INSPEC_NAME ELSE NULL 
		                               END AS BAD_INSPEC_NAME2
		                             , CASE WHEN AA.RN = 3 THEN AA.BAD_INSPEC_NAME ELSE NULL 
		                               END AS BAD_INSPEC_NAME3
		                             , CASE WHEN AA.RN = 4 THEN AA.BAD_INSPEC_NAME ELSE NULL 
		                               END AS BAD_INSPEC_NAME4
		                             , CASE WHEN AA.RN = 5 THEN AA.BAD_INSPEC_NAME ELSE NULL 
		                               END AS BAD_INSPEC_NAME5
		                          FROM (
		                                SELECT ROW_NUMBER() OVER(PARTITION BY M1.COMP_CODE, M1.DIV_CODE, M1.INSPEC_NUM, M1.INSPEC_SEQ ORDER BY M1.COMP_CODE, M1.DIV_CODE, M1.INSPEC_NUM, M1.INSPEC_SEQ) AS RN 
		                                     , M1.COMP_CODE
		                                     , M1.DIV_CODE
		                                     , M1.INSPEC_NUM
		                                     , M1.INSPEC_SEQ
		                                     , R1.CODE_NAME AS BAD_INSPEC_NAME
		                                  FROM      QMS410T M1 WITH(NOLOCK)
		                                  LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = M1.COMP_CODE
		                                                                   AND R1.MAIN_CODE = 'Q013'
		                                                                   AND R1.SUB_CODE  = M1.BAD_INSPEC_CODE
		                                 WHERE M1.COMP_CODE = #{S_COMP_CODE}
		                                   AND M1.DIV_CODE  = #{DIV_CODE}
		                          ) AA
		                ) A
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.INSPEC_NUM, A.INSPEC_SEQ ) T  ON T.COMP_CODE  = A.COMP_CODE
		                                                                                 AND T.DIV_CODE   = A.DIV_CODE
		                                                                                 AND T.INSPEC_NUM = A.INSPEC_NUM
		                                                                                 AND T.INSPEC_SEQ = A.INSPEC_SEQ
		  LEFT JOIN (
		             SELECT COMP_CODE
		                  , DIV_CODE
		                  , INSPEC_NUM
		                  , INSPEC_SEQ
		                  , MAX(BAD_INSPEC_Q1) AS BAD_INSPEC_Q1
		                  , MAX(BAD_INSPEC_Q2) AS BAD_INSPEC_Q2
		                  , MAX(BAD_INSPEC_Q3) AS BAD_INSPEC_Q3
		                  , MAX(BAD_INSPEC_Q4) AS BAD_INSPEC_Q4
		                  , MAX(BAD_INSPEC_Q5) AS BAD_INSPEC_Q5
		               FROM (
		                      SELECT AA.COMP_CODE
		                            , AA.DIV_CODE
		                            , AA.INSPEC_NUM
		                            , AA.INSPEC_SEQ
		                            , CASE WHEN AA.RN = 1 THEN AA.BAD_INSPEC_Q ELSE NULL 
		                              END AS BAD_INSPEC_Q1
		                            , CASE WHEN AA.RN = 2 THEN AA.BAD_INSPEC_Q  ELSE NULL 
		                              END AS BAD_INSPEC_Q2
		                            , CASE WHEN AA.RN = 3 THEN AA.BAD_INSPEC_Q  ELSE NULL 
		                              END AS BAD_INSPEC_Q3
		                            , CASE WHEN AA.RN = 4 THEN AA.BAD_INSPEC_Q  ELSE NULL 
		                              END AS BAD_INSPEC_Q4
		                            , CASE WHEN AA.RN = 5 THEN AA.BAD_INSPEC_Q  ELSE NULL 
		                              END AS BAD_INSPEC_Q5
		                         FROM (
		                                SELECT ROW_NUMBER() OVER(PARTITION BY COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ ORDER BY COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ) AS RN 
		                                     , COMP_CODE
		                                     , DIV_CODE
		                                     , INSPEC_NUM
		                                     , INSPEC_SEQ
		                                     , BAD_INSPEC_Q
		                                  FROM QMS410T WITH(NOLOCK)
		                                 WHERE COMP_CODE = #{S_COMP_CODE}
		                                   AND DIV_CODE  = #{DIV_CODE}
		                          ) AA
		               ) A
		               GROUP BY A.COMP_CODE, A.DIV_CODE, A.INSPEC_NUM, A.INSPEC_SEQ ) T2 ON T2.COMP_CODE  = A.COMP_CODE
		                                                                                AND T2.DIV_CODE   = A.DIV_CODE
		                                                                                AND T2.INSPEC_NUM = A.INSPEC_NUM
		                                                                                AND T2.INSPEC_SEQ = A.INSPEC_SEQ
		WHERE A.COMP_CODE    = #{S_COMP_CODE}
		  AND A.DIV_CODE     = #{DIV_CODE}
		  AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
		  AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		  AND D.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
		  AND A.ITEM_CODE	  = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
		  AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
		  AND C.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
		</if>
	</select>
</mapper>