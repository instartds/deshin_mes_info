<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ppl102ukrvServiceImpl">
	<select id="ppl102ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		 DECLARE @sCOMP_CODE		NVARCHAR(08)
			, @sDIV_CODE			NVARCHAR(08)
			, @sWORK_SHOP_CODE	NVARCHAR(10)
			, @sITEM_CODE		NVARCHAR(20)
			, @sITEM_NAME		NVARCHAR(100)
			, @sUSER_ID			NVARCHAR(100)
			, @sFrDate			NVARCHAR(08)
			, @sToDate			NVARCHAR(08)
	/*-- 변수 값 할당----------------------------------------------------------------------------------------------------*/
		SET @sCOMP_CODE			= #{S_COMP_CODE}
		SET @sDIV_CODE			= #{DIV_CODE}
		SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		SET @sITEM_CODE			= #{ITEM_CODE}
		SET @sITEM_NAME			= #{ITEM_NAME}
		SET @sUSER_ID			= #{S_USER_ID}
		SET @sFrDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '01'
		SET @sToDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '31'

		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

				SELECT @sCOMP_CODE AS COMP_CODE, Y.DIV_CODE, Y.WORK_SHOP_CODE, Y.ITEM_CODE, Y.ITEM_INFO, Y.ORDER_INFO, Y.GUBUN
					 , Y.SPEC
					 , Y.STOCK_UNIT
					 , Y.TOT_Q
					 , Y.DAY1_Q			, Y.DAY2_Q			, Y.DAY3_Q			, Y.DAY4_Q		, Y.DAY5_Q
					 , Y.DAY6_Q			, Y.DAY7_Q			, Y.DAY8_Q			, Y.DAY9_Q		, Y.DAY10_Q
					 , Y.DAY11_Q		, Y.DAY12_Q			, Y.DAY13_Q			, Y.DAY14_Q		, Y.DAY15_Q
					 , Y.DAY16_Q		, Y.DAY17_Q			, Y.DAY18_Q			, Y.DAY19_Q		, Y.DAY20_Q
					 , Y.DAY21_Q		, Y.DAY22_Q			, Y.DAY23_Q			, Y.DAY24_Q		, Y.DAY25_Q
					 , Y.DAY26_Q		, Y.DAY27_Q			, Y.DAY28_Q			, Y.DAY29_Q		, Y.DAY30_Q
					 , Y.DAY31_Q
					 , Y.WK_PLAN_NUM1	, Y.WK_PLAN_NUM2	, Y.WK_PLAN_NUM3	, Y.WK_PLAN_NUM4	, Y.WK_PLAN_NUM5
					 , Y.WK_PLAN_NUM6	, Y.WK_PLAN_NUM7	, Y.WK_PLAN_NUM8	, Y.WK_PLAN_NUM9	, Y.WK_PLAN_NUM10
					 , Y.WK_PLAN_NUM11	, Y.WK_PLAN_NUM12	, Y.WK_PLAN_NUM13	, Y.WK_PLAN_NUM14	, Y.WK_PLAN_NUM15
					 , Y.WK_PLAN_NUM16	, Y.WK_PLAN_NUM17	, Y.WK_PLAN_NUM18	, Y.WK_PLAN_NUM19	, Y.WK_PLAN_NUM20
					 , Y.WK_PLAN_NUM21	, Y.WK_PLAN_NUM22	, Y.WK_PLAN_NUM23	, Y.WK_PLAN_NUM24	, Y.WK_PLAN_NUM25
					 , Y.WK_PLAN_NUM26	, Y.WK_PLAN_NUM27	, Y.WK_PLAN_NUM28	, Y.WK_PLAN_NUM29	, Y.WK_PLAN_NUM30
					 , Y.WK_PLAN_NUM31
					 , Y.ITEM
					 , Y.ORDER_NUM
					 , Y.P_SEQ
					 , Y.WORK_SHOP
					 , Y.PLAN_TYPE
					 , Y.WORK_SHOP_CODE		AS WORK_SHOP_CODE_OLD
					 , Y.REMARK
					 --20181105 추가
					 , Y.CUSTOM_CODE
					 , Y.CUSTOM_NAME
					 , Y.DVRY_DATE
					 , Y.ORDER_NUM			AS ORDER_NUM_ORI
					 , Y.P_SEQ				AS SER_NO_ORI
				  FROM

				(SELECT X.DIV_CODE, X.SORT_SEQ, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.ORDER_INFO, X.GUBUN,
				  X.SPEC,
				  X.STOCK_UNIT,
				  (SUM(X.DAY1_Q) + SUM(X.DAY2_Q) + SUM(X.DAY3_Q) + SUM(X.DAY4_Q) + SUM(X.DAY5_Q) + SUM(X.DAY6_Q) + SUM(X.DAY7_Q)
					 + SUM(X.DAY8_Q) + SUM(X.DAY9_Q) + SUM(X.DAY10_Q) + SUM(X.DAY11_Q) + SUM(X.DAY12_Q) + SUM(X.DAY13_Q)
					 + SUM(X.DAY14_Q) + SUM(X.DAY15_Q) + SUM(X.DAY16_Q) + SUM(X.DAY17_Q) + SUM(X.DAY18_Q) + SUM(X.DAY19_Q) +
					 + SUM(X.DAY20_Q) + SUM(X.DAY21_Q) + SUM(X.DAY22_Q) + SUM(X.DAY23_Q) + SUM(X.DAY24_Q) + SUM(X.DAY25_Q) +
					 + SUM(X.DAY26_Q) + SUM(X.DAY27_Q) + SUM(X.DAY28_Q) + SUM(X.DAY29_Q) + SUM(X.DAY30_Q) + SUM(X.DAY31_Q))		AS TOT_Q,
				  SUM(X.DAY1_Q)																									AS DAY1_Q,
				  SUM(X.DAY2_Q)																									AS DAY2_Q,
				  SUM(X.DAY3_Q)																									AS DAY3_Q,
				  SUM(X.DAY4_Q)																									AS DAY4_Q,
				  SUM(X.DAY5_Q)																									AS DAY5_Q,
				  SUM(X.DAY6_Q)																									AS DAY6_Q,
				  SUM(X.DAY7_Q)																									AS DAY7_Q,
				  SUM(X.DAY8_Q)																									AS DAY8_Q,
				  SUM(X.DAY9_Q)																									AS DAY9_Q,
				  SUM(X.DAY10_Q)																								AS DAY10_Q,
				  SUM(X.DAY11_Q)																								AS DAY11_Q,
				  SUM(X.DAY12_Q)																								AS DAY12_Q,
				  SUM(X.DAY13_Q)																								AS DAY13_Q,
				  SUM(X.DAY14_Q)																								AS DAY14_Q,
				  SUM(X.DAY15_Q)																								AS DAY15_Q,
				  SUM(X.DAY16_Q)																								AS DAY16_Q,
				  SUM(X.DAY17_Q)																								AS DAY17_Q,
				  SUM(X.DAY18_Q)																								AS DAY18_Q,
				  SUM(X.DAY19_Q)																								AS DAY19_Q,
				  SUM(X.DAY20_Q)																								AS DAY20_Q,
				  SUM(X.DAY21_Q)																								AS DAY21_Q,
				  SUM(X.DAY22_Q)																								AS DAY22_Q,
				  SUM(X.DAY23_Q)																								AS DAY23_Q,
				  SUM(X.DAY24_Q)																								AS DAY24_Q,
				  SUM(X.DAY25_Q)																								AS DAY25_Q,
				  SUM(X.DAY26_Q)																								AS DAY26_Q,
				  SUM(X.DAY27_Q)																								AS DAY27_Q,
				  SUM(X.DAY28_Q)																								AS DAY28_Q,
				  SUM(X.DAY29_Q)																								AS DAY29_Q,
				  SUM(X.DAY30_Q)																								AS DAY30_Q,
				  SUM(X.DAY31_Q)																								AS DAY31_Q,
				  MAX(X.WK_PLAN_NUM1)																							AS WK_PLAN_NUM1,
				  MAX(X.WK_PLAN_NUM2)																							AS WK_PLAN_NUM2,
				  MAX(X.WK_PLAN_NUM3)																							AS WK_PLAN_NUM3,
				  MAX(X.WK_PLAN_NUM4)																							AS WK_PLAN_NUM4,
				  MAX(X.WK_PLAN_NUM5)																							AS WK_PLAN_NUM5,
				  MAX(X.WK_PLAN_NUM6)																							AS WK_PLAN_NUM6,
				  MAX(X.WK_PLAN_NUM7)																							AS WK_PLAN_NUM7,
				  MAX(X.WK_PLAN_NUM8)																							AS WK_PLAN_NUM8,
				  MAX(X.WK_PLAN_NUM9)																							AS WK_PLAN_NUM9,
				  MAX(X.WK_PLAN_NUM10)																							AS WK_PLAN_NUM10,
				  MAX(X.WK_PLAN_NUM11)																							AS WK_PLAN_NUM11,
				  MAX(X.WK_PLAN_NUM12)																							AS WK_PLAN_NUM12,
				  MAX(X.WK_PLAN_NUM13)																							AS WK_PLAN_NUM13,
				  MAX(X.WK_PLAN_NUM14)																							AS WK_PLAN_NUM14,
				  MAX(X.WK_PLAN_NUM15)																							AS WK_PLAN_NUM15,
				  MAX(X.WK_PLAN_NUM16)																							AS WK_PLAN_NUM16,
				  MAX(X.WK_PLAN_NUM17)																							AS WK_PLAN_NUM17,
				  MAX(X.WK_PLAN_NUM18)																							AS WK_PLAN_NUM18,
				  MAX(X.WK_PLAN_NUM19)																							AS WK_PLAN_NUM19,
				  MAX(X.WK_PLAN_NUM20)																							AS WK_PLAN_NUM20,
				  MAX(X.WK_PLAN_NUM21)																							AS WK_PLAN_NUM21,
				  MAX(X.WK_PLAN_NUM22)																							AS WK_PLAN_NUM22,
				  MAX(X.WK_PLAN_NUM23)																							AS WK_PLAN_NUM23,
				  MAX(X.WK_PLAN_NUM24)																							AS WK_PLAN_NUM24,
				  MAX(X.WK_PLAN_NUM25)																							AS WK_PLAN_NUM25,
				  MAX(X.WK_PLAN_NUM26)																							AS WK_PLAN_NUM26,
				  MAX(X.WK_PLAN_NUM27)																							AS WK_PLAN_NUM27,
				  MAX(X.WK_PLAN_NUM28)																							AS WK_PLAN_NUM28,
				  MAX(X.WK_PLAN_NUM29)																							AS WK_PLAN_NUM29,
				  MAX(X.WK_PLAN_NUM30)																							AS WK_PLAN_NUM30,
				  MAX(X.WK_PLAN_NUM31)																							AS WK_PLAN_NUM31,
				  X.ITEM,
				  X.ORDER_NUM,
				  X.REMARK,
				  X.P_SEQ,
				  X.WORK_SHOP,
				  X.PLAN_TYPE,
				  --20181105 추가
				  X.CUSTOM_CODE,
				  X.CUSTOM_NAME,
				  X.DVRY_DATE
			  FROM (SELECT
						1 AS SORT_SEQ,
						A.DIV_CODE,
						B.SPEC,
						B.STOCK_UNIT,
						A.WORK_SHOP_CODE,
						A.ITEM_CODE,
						uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID, A.ITEM_CODE) AS ITEM_INFO,
				<choose>
					<when test="TYPE == &quot;W&quot;">
						A.ORDER_NUM ORDER_INFO,
					</when>
					<otherwise>
						A.REMARK AS ORDER_INFO,
					</otherwise>
				</choose>
						(SELECT CODE_NAME
						   FROM BSA100T WITH (NOLOCK)
						  WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE = 'P105' AND SUB_CODE = '11')											AS GUBUN,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '01' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY1_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '02' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY2_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '03' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY3_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '04' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY4_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '05' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY5_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '06' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY6_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '07' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY7_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '08' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY8_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '09' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY9_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '10' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY10_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '11' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY11_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '12' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY12_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '13' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY13_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '14' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY14_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '15' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY15_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '16' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY16_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '17' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY17_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '18' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY18_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '19' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY19_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '20' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY20_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '21' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY21_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '22' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY22_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '23' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY23_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '24' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY24_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '25' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY25_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '26' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY26_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '27' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY27_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '28' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY28_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '29' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY29_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '30' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY30_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '31' THEN A.WK_PLAN_Q ELSE 0 END			AS DAY31_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '01' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM1,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '02' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM2,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '03' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM3,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '04' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM4,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '05' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM5,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '06' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM6,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '07' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM7,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '08' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM8,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '09' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM9,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '10' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM10,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '11' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM11,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '12' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM12,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '13' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM13,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '14' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM14,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '15' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM15,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '16' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM16,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '17' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM17,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '18' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM18,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '19' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM19,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '20' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM20,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '21' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM21,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '22' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM22,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '23' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM23,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '24' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM24,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '25' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM25,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '26' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM26,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '27' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM27,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '28' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM28,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '29' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM29,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '30' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM30,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) = #{FR_DATE} AND RIGHT(A.PRODT_PLAN_DATE, 2) = '31' THEN A.WK_PLAN_NUM  ELSE NULL END		AS WK_PLAN_NUM31,
						A.ITEM_CODE 		AS ITEM,
						A.ORDER_NUM 		AS ORDER_NUM,
						A.REMARK,
						ISNULL(A.SEQ,'0')		AS P_SEQ,
						A.WORK_SHOP_CODE 	AS WORK_SHOP,
						A.PLAN_TYPE,
						--20181105 추가
						D.CUSTOM_CODE,
						E.CUSTOM_NAME,
						C.DVRY_DATE
					 FROM PPL100T A WITH(NOLOCK)
					 LEFT JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													 AND B.ITEM_CODE   = A.ITEM_CODE
					 LEFT JOIN SOF110T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
													 AND C.OUT_DIV_CODE    = A.DIV_CODE
													 AND C.ORDER_NUM   = A.ORDER_NUM
													 AND C.SER_NO      = A.SEQ
					 LEFT JOIN SOF100T D WITH(NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
													 AND D.DIV_CODE    = C.DIV_CODE
													 AND D.ORDER_NUM   = C.ORDER_NUM
					 LEFT JOIN BCM100T E WITH(NOLOCK) ON E.COMP_CODE   = D.COMP_CODE
													 AND E.CUSTOM_CODE = D.CUSTOM_CODE
					WHERE A.ITEM_CODE = B.ITEM_CODE
						AND A.DIV_CODE = @sDIV_CODE
						AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
						AND A.WORK_SHOP_CODE LIKE  @sWORK_SHOP_CODE
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
						AND A.ITEM_CODE =  @sITEM_CODE
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
						AND A.ITEM_CODE LIKE '%' + @sITEM_CODE + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
						AND uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM_CODE) LIKE '%' + @sITEM_NAME + '%'
					</if>

					) X
					GROUP BY X.SORT_SEQ, X.DIV_CODE, X.WORK_SHOP, X.PLAN_TYPE, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.SPEC, X.STOCK_UNIT,
							 X.ORDER_INFO, X.P_SEQ, X.GUBUN, X.ITEM, X.ORDER_NUM, X.REMARK,
							 --20181105 추가
							 X.CUSTOM_CODE, X.CUSTOM_NAME, X.DVRY_DATE) Y
			<choose>
				<when test="TYPE == &quot;W&quot;">
					ORDER BY Y.DIV_CODE, Y.WORK_SHOP, Y.PLAN_TYPE, Y.ITEM, Y.REMARK, Y.ORDER_NUM, Y.P_SEQ, Y.SORT_SEQ
				</when>
				<otherwise>
					ORDER BY Y.DIV_CODE, Y.ITEM, Y.WORK_SHOP, Y.PLAN_TYPE, Y.REMARK, Y.ORDER_NUM, Y.P_SEQ, Y.SORT_SEQ
				</otherwise>
			</choose>
	</select>

	<select id="ppl102ukrvServiceImpl.checkBeforeInsert" parameterType="Map" resultType="Map">
		IF EXISTS(
					SELECT TOP 1 COMP_CODE				--COUNT(1) AS CNT
					  FROM PPL100T WITH(NOLOCK)
					 WHERE COMP_CODE			= #{S_COMP_CODE}
						AND DIV_CODE			= #{DIV_CODE}
						AND PRODT_PLAN_DATE		= #{PRODT_PLAN_DATE}
						AND ITEM_CODE			= #{ITEM}
						AND ORDER_NUM			= #{ORDER_NUM_ORI}
						AND SEQ					= #{SER_NO_ORI}
						AND ISNULL(REMARK, '')	= ISNULL(#{REMARK}, '')
						AND WORK_SHOP_CODE		= #{WORK_SHOP_CODE_OLD}
						AND PLAN_TYPE			= #{PLAN_TYPE}
					)
			BEGIN
				DECLARE
				  @sCOMP_CODE		 	NVARCHAR(08)
				, @sDIV_CODE			NVARCHAR(08)
				, @sPRODT_PLAN_DATE		NVARCHAR(10)
				, @sWORK_SHOP_CODE		NVARCHAR(10)
				, @sITEM_CODE		 	NVARCHAR(20)
				, @sORDER_NUM			NVARCHAR(08)
				, @sSEQ					NVARCHAR(08)
				, @sREMARK				NVARCHAR(08)
				, @sPLAN_TYPE			NVARCHAR(08)
				, @sWK_PLAN_NUM 		NVARCHAR(08)
				, @sWKORD_YN			NVARCHAR(08)
				, @sWORK_END_YN			NVARCHAR(08)
				, @sCOUNT				INT

				SET @sCOMP_CODE			= #{S_COMP_CODE}
				SET @sDIV_CODE			= #{DIV_CODE}
				SET @sPRODT_PLAN_DATE	= #{PRODT_PLAN_DATE}
				SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
				SET @sITEM_CODE			= #{ITEM_CODE}
				SET @sORDER_NUM			= #{ORDER_NUM}
				SET @sSEQ				= #{P_SEQ}
				SET @sREMARK			= #{REMARK}
				SET @sPLAN_TYPE			= #{PLAN_TYPE}
				SET @sWK_PLAN_NUM		= #{WK_PLAN_NUM}

				SELECT @sWKORD_YN = WKORD_YN, @sWORK_END_YN = WORK_END_YN
				  FROM PPL100T WITH(NOLOCK)
				 WHERE COMP_CODE			= #{S_COMP_CODE}
				   AND DIV_CODE				= #{DIV_CODE}
				   AND PRODT_PLAN_DATE		= #{PRODT_PLAN_DATE}
				   AND ITEM_CODE			= #{ITEM}
				   AND ORDER_NUM			= #{ORDER_NUM_ORI}
				   AND SEQ					= #{SER_NO_ORI}
				   AND ISNULL(REMARK, '')	= ISNULL(#{REMARK}, '')
				   AND WORK_SHOP_CODE		= #{WORK_SHOP_CODE_OLD}
				   AND PLAN_TYPE			= #{PLAN_TYPE}

				if(@sWKORD_YN &lt;&gt; 'Y' AND @sWORK_END_YN &lt;&gt; 'Y')
					BEGIN
						DELETE FROM PPL100T
						 WHERE COMP_CODE			= #{S_COMP_CODE}
						   AND DIV_CODE				= #{DIV_CODE}
						   AND PRODT_PLAN_DATE		= #{PRODT_PLAN_DATE}
						   AND ITEM_CODE			= #{ITEM}
						   AND ORDER_NUM			= #{ORDER_NUM_ORI}
						   AND SEQ					= #{SER_NO_ORI}
						   AND ISNULL(REMARK, '')	= ISNULL(#{REMARK}, '')
						   AND WORK_SHOP_CODE		= #{WORK_SHOP_CODE_OLD}
						   AND PLAN_TYPE			= #{PLAN_TYPE}

						if(@sPLAN_TYPE &lt;&gt; 'M' AND @sPLAN_TYPE &lt;&gt; 'P')
						/*수주참조 또는 무역 S/O 참조시*/
							BEGIN
								SELECT @sCOUNT = COUNT(*) FROM PPL100T WITH(NOLOCK)
									WHERE ORDER_NUM = @sORDER_NUM AND SEQ = @sSEQ;

								if(@sCOUNT = 0)
									BEGIN
										UPDATE SOF110T SET PROD_REF_YN = 'N' WHERE ORDER_NUM = @sORDER_NUM AND SER_NO = @sSEQ;
										UPDATE TEA110T SET PROD_REF_YN = 'N' WHERE SO_SER_NO = @sORDER_NUM AND SO_SER = @sSEQ;
									END
							END
					END
			END
	</select>

	<select id="ppl102ukrvServiceImpl.getWkPlanNum" parameterType="Map" resultType="Map">
		SELECT WK_PLAN_NUM
		  FROM PPL100T WITH(NOLOCK)
		 WHERE COMP_CODE			= #{S_COMP_CODE}
			AND DIV_CODE			= #{DIV_CODE}
			AND PRODT_PLAN_DATE		= #{PRODT_PLAN_DATE}
			AND ITEM_CODE			= #{ITEM}
			AND ISNULL(ORDER_NUM,'')= #{ORDER_NUM_ORI}
			AND ISNULL(CONVERT(NVARCHAR(5),SEQ),'0') = CASE WHEN #{SER_NO_ORI} = '0' THEN '0'
			                                               ELSE #{SER_NO_ORI}
			                                          END
			AND ISNULL(REMARK, '')	= ISNULL(#{REMARK}, '')
			AND WORK_SHOP_CODE		= #{WORK_SHOP_CODE_OLD}
			AND PLAN_TYPE			= #{PLAN_TYPE}
	</select>

	<select id="ppl102ukrvServiceImpl.fnWorkShopCode" parameterType="Map" resultType="rMap">
			SELECT WORK_SHOP_CODE
			  FROM BPR200T WITH (NOLOCK)
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND DIV_CODE		= #{DIV_CODE}
			   AND ITEM_CODE	= #{ITEM_CODE}
	</select>

	<update id="ppl102ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
		{call SP_GetAutoNumComp (
			#{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<insert id="ppl102ukrvServiceImpl.insertDetail" parameterType="Map">
		INSERT INTO PPL100T(
			COMP_CODE,
			DIV_CODE,
			WK_PLAN_NUM,
			WORK_SHOP_CODE,
			ITEM_CODE,
			WK_PLAN_Q,
			PRODT_PLAN_DATE,
			WKORD_YN,
			REMARK,
			WORK_END_YN,
			ORDER_NUM,
			SEQ,
			PLAN_TYPE,
			WEEK_NUM,
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)
		VALUES(
			#{S_COMP_CODE},
			#{DIV_CODE},
			#{KEY_NUMBER},
			#{WORK_SHOP_CODE},
			#{ITEM_CODE},
			uniLITE.fnformat(#{S_COMP_CODE}, #{WK_PLAN_Q}, 'P_FSET_QS'),
			#{PRODT_PLAN_DATE},
			'N',
			ISNULL(#{REMARK},''),
			'N',
			#{ORDER_NUM},
			#{P_SEQ},
			#{PLAN_TYPE},
			(
				SELECT TOP 1 CAL_NO
				FROM BCM420T WITH (NOLOCK)
				WHERE COMP_CODE = #{S_COMP_CODE}
				AND CAL_TYPE = '3' 	--'1' 월단위, '2' 순단위, '3' 주단위, '4' 일단위
				AND START_DATE &lt;= #{PRODT_PLAN_DATE}
				AND END_DATE &gt;= #{PRODT_PLAN_DATE}
			),
			#{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE()
		)
	</insert>

	<update id="ppl102ukrvServiceImpl.updateDetail" parameterType="Map">
		 UPDATE PPL100T
			SET WORK_SHOP_CODE	= #{WORK_SHOP_CODE},
				ITEM_CODE		= #{ITEM_CODE},
				WK_PLAN_Q		= #{WK_PLAN_Q},
				PRODT_PLAN_DATE	= #{PRODT_PLAN_DATE},
				ORDER_NUM		= #{ORDER_NUM},
				SEQ				= #{P_SEQ},
				REMARK          = ISNULL(#{REMARK},''),
				UPDATE_DB_USER	= #{S_USER_ID},
				UPDATE_DB_TIME	= GETDATE()
		  WHERE COMP_CODE	= #{S_COMP_CODE}
			AND DIV_CODE	= #{DIV_CODE}
			AND WK_PLAN_NUM	= #{WK_PLAN_NUM}

	</update>

	<update id="ppl102ukrvServiceImpl.deleteDetail" parameterType="Map">
		DECLARE
		  @sCOMP_CODE		 	NVARCHAR(08)
		, @sDIV_CODE			NVARCHAR(08)
		, @sPRODT_PLAN_DATE		NVARCHAR(10)
		, @sWORK_SHOP_CODE		NVARCHAR(10)
		, @sITEM_CODE		 	NVARCHAR(20)
		, @sORDER_NUM			NVARCHAR(08)
		, @sSEQ					NVARCHAR(08)
		, @sREMARK				NVARCHAR(08)
		, @sPLAN_TYPE			NVARCHAR(08)
		, @sWK_PLAN_NUM 		NVARCHAR(08)
		, @sWKORD_YN			NVARCHAR(08)
		, @sWORK_END_YN			NVARCHAR(08)
		, @sCOUNT				INT

		SET @sCOMP_CODE			= #{S_COMP_CODE}
		SET @sDIV_CODE			= #{DIV_CODE}
		SET @sPRODT_PLAN_DATE	= #{PRODT_PLAN_DATE}
		SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		SET @sITEM_CODE			= #{ITEM_CODE}
		SET @sORDER_NUM			= #{ORDER_NUM}
		SET @sSEQ				= #{P_SEQ}
		SET @sREMARK			= #{REMARK}
		SET @sPLAN_TYPE			= #{PLAN_TYPE}
		SET @sWK_PLAN_NUM		= #{WK_PLAN_NUM}

		SELECT @sWKORD_YN = WKORD_YN, @sWORK_END_YN = WORK_END_YN
		  FROM PPL100T WITH(NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND WK_PLAN_NUM	= #{WK_PLAN_NUM}

		if(@sWKORD_YN &lt;&gt; 'Y' AND @sWORK_END_YN &lt;&gt; 'Y')
			BEGIN
				DELETE FROM PPL100T
					WHERE COMP_CODE 		= #{S_COMP_CODE}
						AND DIV_CODE		= #{DIV_CODE}
						AND WK_PLAN_NUM 	= #{WK_PLAN_NUM};

				if(@sPLAN_TYPE &lt;&gt; 'M' AND @sPLAN_TYPE &lt;&gt; 'P')
				/*수주참조 또는 무역 S/O 참조시*/
					BEGIN
						SELECT @sCOUNT = COUNT(*) FROM PPL100T WITH(NOLOCK)
							WHERE ORDER_NUM = @sORDER_NUM AND SEQ = @sSEQ;

						if(@sCOUNT = 0)
							BEGIN
								UPDATE SOF110T SET PROD_REF_YN = 'N' WHERE ORDER_NUM = @sORDER_NUM AND SER_NO = @sSEQ;
								UPDATE TEA110T SET PROD_REF_YN = 'N' WHERE SO_SER_NO = @sORDER_NUM AND SO_SER = @sSEQ;
							END
					END
			END
	</update>



<!--ExcelUpload-->
	<update id="ppl102ukrvServiceImpl.insertExcelppl102ukrvUpload" parameterType="Map">
		/* temp Table(SGP200T_XLS)에 insert */
		DECLARE @workShopCode NVARCHAR(08)

		SET @workShopCode = #{WORK_SHOP_CODE}
		SET @workShopCode = ISNULL(@workShopCode, '')


		INSERT INTO PPL102T_XLS
			(
			  _EXCEL_JOBID
			, _EXCEL_ROWNUM
			, _EXCEL_HAS_ERROR
			, _EXCEL_ERROR_MSG
			, COMP_CODE
			, DIV_CODE

			, WORK_SHOP_CODE
			, ITEM_CODE
			, ITEM_NAME
			, SPEC
			, STOCK_UNIT
			, TOT_Q
			, DAY1_Q
			, DAY2_Q
			, DAY3_Q
			, DAY4_Q
			, DAY5_Q
			, DAY6_Q
			, DAY7_Q
			, DAY8_Q
			, DAY9_Q
			, DAY10_Q
			, DAY11_Q
			, DAY12_Q
			, DAY13_Q
			, DAY14_Q
			, DAY15_Q
			, DAY16_Q
			, DAY17_Q
			, DAY18_Q
			, DAY19_Q
			, DAY20_Q
			, DAY21_Q
			, DAY22_Q
			, DAY23_Q
			, DAY24_Q
			, DAY25_Q
			, DAY26_Q
			, DAY27_Q
			, DAY28_Q
			, DAY29_Q
			, DAY30_Q
			, DAY31_Q

			, INSERT_DB_USER
			, INSERT_DB_TIME
		)
		VALUES (
			  #{_EXCEL_JOBID}
			, #{_EXCEL_ROWNUM}
			, #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
			, #{_EXCEL_ERROR		,jdbcType=VARCHAR}
			, #{COMP_CODE}

			, #{DIV_CODE}
			, CASE WHEN @workShopCode != '' THEN @workShopCode
				   ELSE (SELECT WORK_SHOP_CODE
						   FROM BPR200T WITH(NOLOCK)
						  WHERE COMP_CODE = #{COMP_CODE}
							AND DIV_CODE  = #{DIV_CODE}
							AND ITEM_CODE = #{ITEM_CODE}
						)
			  END
			, #{ITEM_CODE}
			, (SELECT ITEM_NAME
				 FROM BPR100T WITH(NOLOCK)
				WHERE COMP_CODE = #{COMP_CODE}
				  AND ITEM_CODE = #{ITEM_CODE})
			, (SELECT SPEC
				 FROM BPR100T WITH(NOLOCK)
				WHERE COMP_CODE = #{COMP_CODE}
				  AND ITEM_CODE = #{ITEM_CODE})
			, (SELECT STOCK_UNIT
				 FROM BPR100T WITH(NOLOCK)
				WHERE COMP_CODE = #{COMP_CODE}
				  AND ITEM_CODE = #{ITEM_CODE})
			, 0
		<if test="@foren.Ognl@isNotEmpty(DAY1_Q)">
			+ ${DAY1_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY2_Q)">
			+ ${DAY2_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY3_Q)">
			+ ${DAY3_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY4_Q)">
			+ ${DAY4_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY5_Q)">
			+ ${DAY5_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY6_Q)">
			+ ${DAY6_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY7_Q)">
			+ ${DAY7_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY8_Q)">
			+ ${DAY8_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY9_Q)">
			+ ${DAY9_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY10_Q)">
			+ ${DAY10_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY11_Q)">
			+ ${DAY11_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY12_Q)">
			+ ${DAY12_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY13_Q)">
			+ ${DAY13_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY14_Q)">
			+ ${DAY14_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY15_Q)">
			+ ${DAY15_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY16_Q)">
			+ ${DAY16_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY17_Q)">
			+ ${DAY17_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY18_Q)">
			+ ${DAY18_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY19_Q)">
			+ ${DAY19_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY20_Q)">
			+ ${DAY20_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY21_Q)">
			+ ${DAY21_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY22_Q)">
			+ ${DAY22_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY23_Q)">
			+ ${DAY23_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY24_Q)">
			+ ${DAY24_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY25_Q)">
			+ ${DAY25_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY26_Q)">
			+ ${DAY26_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY27_Q)">
			+ ${DAY27_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY28_Q)">
			+ ${DAY28_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY29_Q)">
			+ ${DAY29_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY30_Q)">
			+ ${DAY30_Q}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DAY31_Q)">
			+ ${DAY31_Q}
		</if>
			, #{DAY1_Q}
			, #{DAY2_Q}
			, #{DAY3_Q}
			, #{DAY4_Q}
			, #{DAY5_Q}
			, #{DAY6_Q}
			, #{DAY7_Q}
			, #{DAY8_Q}
			, #{DAY9_Q}
			, #{DAY10_Q}
			, #{DAY11_Q}
			, #{DAY12_Q}
			, #{DAY13_Q}
			, #{DAY14_Q}
			, #{DAY15_Q}
			, #{DAY16_Q}
			, #{DAY17_Q}
			, #{DAY18_Q}
			, #{DAY19_Q}
			, #{DAY20_Q}
			, #{DAY21_Q}
			, #{DAY22_Q}
			, #{DAY23_Q}
			, #{DAY24_Q}
			, #{DAY25_Q}
			, #{DAY26_Q}
			, #{DAY27_Q}
			, #{DAY28_Q}
			, #{DAY29_Q}
			, #{DAY30_Q}
			, #{DAY31_Q}

			, #{S_USER_ID}
			, GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="ppl102ukrvServiceImpl.getData" parameterType="Map" resultType="rMap">
		/* ppl102ukrvServiceImpl.getData */
		SELECT *
		  FROM		PPL102T_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	= #{_EXCEL_JOBID}
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 1) -->
	<select id="ppl102ukrvServiceImpl.checkItem" parameterType="Map" resultType="rMap">
		/* ppl102ukrvServiceImpl.checkItem */
		DECLARE @CHECK_DATA1 NVARCHAR(01)
			  , @CHECK_DATA2 NVARCHAR(01)

			SET @CHECK_DATA1 = 'N'
			SET @CHECK_DATA2 = 'N'

		IF EXISTS (
					SELECT TOP 1 1
					  FROM BPR100T WITH(NOLOCK)
					 WHERE COMP_CODE = #{COMP_CODE}
					   AND ITEM_CODE = #{ITEM_CODE}
				  )
			BEGIN
				SET @CHECK_DATA1 = 'Y'
			END

		IF EXISTS (
					SELECT TOP 1 1
					  FROM BSA230T WITH(NOLOCK)
					 WHERE COMP_CODE = #{COMP_CODE}
					   AND TREE_CODE = #{WORK_SHOP_CODE}
				  )
			BEGIN
				SET @CHECK_DATA2 = 'Y'
			END

		SELECT @CHECK_DATA1 AS CHECK_DATA1
			 , @CHECK_DATA2 AS CHECK_DATA2
	</select>

	<!-- 에러메세지 insert -->
	<update id="ppl102ukrvServiceImpl.insertErrorMsg">
		UPDATE PPL102T_XLS
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>

	<select id="ppl102ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*ppl102ukrvServiceImpl.selectExcelUploadSheet1*/
		SELECT A._EXCEL_JOBID
			 , A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A.COMP_CODE
			 , A.DIV_CODE
			 , A.WORK_SHOP_CODE
			 , A.ITEM_CODE
			 , A.ITEM_CODE			AS ITEM
			 , A.ITEM_NAME			AS ITEM_INFO
			 , A.SPEC
			 , A.STOCK_UNIT
			 , A.TOT_Q
			 , A.DAY1_Q
			 , A.DAY2_Q
			 , A.DAY3_Q
			 , A.DAY4_Q
			 , A.DAY5_Q
			 , A.DAY6_Q
			 , A.DAY7_Q
			 , A.DAY8_Q
			 , A.DAY9_Q
			 , A.DAY10_Q
			 , A.DAY11_Q
			 , A.DAY12_Q
			 , A.DAY13_Q
			 , A.DAY14_Q
			 , A.DAY15_Q
			 , A.DAY16_Q
			 , A.DAY17_Q
			 , A.DAY18_Q
			 , A.DAY19_Q
			 , A.DAY20_Q
			 , A.DAY21_Q
			 , A.DAY22_Q
			 , A.DAY23_Q
			 , A.DAY24_Q
			 , A.DAY25_Q
			 , A.DAY26_Q
			 , A.DAY27_Q
			 , A.DAY28_Q
			 , A.DAY29_Q
			 , A.DAY30_Q
			 , A.DAY31_Q
		  FROM		 PPL102T_XLS A WITH(NOLOCK)
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>




	<!-- 이전 조회 쿼리 백업 -->
	<select id="ppl102ukrvServiceImpl.selectDetailList_BACKUP" parameterType="Map" resultType="rMap">
		 DECLARE @sCOMP_CODE		NVARCHAR(08)
			, @sDIV_CODE			NVARCHAR(08)
			, @sWORK_SHOP_CODE	NVARCHAR(10)
			, @sITEM_CODE		NVARCHAR(20)
			, @sITEM_NAME		NVARCHAR(100)
			, @sUSER_ID			NVARCHAR(100)
			, @sFrDate			NVARCHAR(08)
			, @sToDate			NVARCHAR(08)
	/*-- 변수 값 할당----------------------------------------------------------------------------------------------------*/
		SET @sCOMP_CODE			= #{S_COMP_CODE}
		SET @sDIV_CODE			= #{DIV_CODE}
		SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		SET @sITEM_CODE			= #{ITEM_CODE}
		SET @sITEM_NAME			= #{ITEM_NAME}
		SET @sUSER_ID			= #{S_USER_ID}
		SET @sFrDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '01'
		SET @sToDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '31'

		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

		<choose>
			<when test="TYPE == &quot;W&quot;">
				SELECT @sCOMP_CODE AS COMP_CODE, Y.DIV_CODE, Y.WORK_SHOP_CODE, Y.ITEM_CODE, Y.ITEM_INFO, Y.ORDER_INFO, Y.GUBUN
			</when>
			<otherwise>
				SELECT @sCOMP_CODE AS COMP_CODE, Y.DIV_CODE, Y.WORK_SHOP_CODE, Y.ITEM_CODE, Y.ITEM_INFO, Y.ORDER_INFO, Y.GUBUN
			</otherwise>
		</choose>
					 , Y.SPEC
					 , Y.STOCK_UNIT
					 , Y.TOT_Q			, Y.DAY1_Q			, Y.DAY2_Q			, Y.DAY3_Q		, Y.DAY4_Q		, Y.DAY5_Q
					 , Y.DAY6_Q			, Y.DAY7_Q			, Y.DAY8_Q			, Y.DAY9_Q		, Y.DAY10_Q
					 , Y.DAY11_Q		, Y.DAY12_Q			, Y.DAY13_Q			, Y.DAY14_Q		, Y.DAY15_Q
					 , Y.DAY16_Q		, Y.DAY17_Q			, Y.DAY18_Q			, Y.DAY19_Q		, Y.DAY20_Q
					 , Y.DAY21_Q		, Y.DAY22_Q			, Y.DAY23_Q			, Y.DAY24_Q		, Y.DAY25_Q
					 , Y.DAY26_Q		, Y.DAY27_Q			, Y.DAY28_Q			, Y.DAY29_Q		, Y.DAY30_Q
					 , Y.DAY31_Q
					 , Z.WK_PLAN_NUM1,	Z.WK_PLAN_NUM2,		Z.WK_PLAN_NUM3,		Z.WK_PLAN_NUM4,		Z.WK_PLAN_NUM5
					 , Z.WK_PLAN_NUM6,	Z.WK_PLAN_NUM7,		Z.WK_PLAN_NUM8,		Z.WK_PLAN_NUM9,		Z.WK_PLAN_NUM10
					 , Z.WK_PLAN_NUM11,	Z.WK_PLAN_NUM12,	Z.WK_PLAN_NUM13,	Z.WK_PLAN_NUM14,	Z.WK_PLAN_NUM15
					 , Z.WK_PLAN_NUM16,	Z.WK_PLAN_NUM17,	Z.WK_PLAN_NUM18,	Z.WK_PLAN_NUM19,	Z.WK_PLAN_NUM20
					 , Z.WK_PLAN_NUM21,	Z.WK_PLAN_NUM22,	Z.WK_PLAN_NUM23,	Z.WK_PLAN_NUM24,	Z.WK_PLAN_NUM25
					 , Z.WK_PLAN_NUM26,	Z.WK_PLAN_NUM27,	Z.WK_PLAN_NUM28,	Z.WK_PLAN_NUM29,	Z.WK_PLAN_NUM30
					 , Z.WK_PLAN_NUM31
					 , Y.ITEM
					 , Y.ORDER_NUM
					 , Y.P_SEQ
					 , Y.WORK_SHOP
					 , Y.PLAN_TYPE
					 , Y.WORK_SHOP_CODE		AS WORK_SHOP_CODE_OLD
					 , Y.REMARK
					 --20181105 추가
					 , Y.CUSTOM_CODE
					 , Y.CUSTOM_NAME
					 , Y.DVRY_DATE
					 , Y.ORDER_NUM			AS ORDER_NUM_ORI
					 , Y.P_SEQ				AS SER_NO_ORI
				  FROM

		<choose>
			<when test="TYPE == &quot;W&quot;">
				(SELECT X.DIV_CODE, X.SORT_SEQ, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.ORDER_INFO, X.GUBUN,
			</when>
			<otherwise>
				(SELECT X.DIV_CODE, X.SORT_SEQ, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.ORDER_INFO, X.GUBUN,
			</otherwise>
		</choose>
				  X.SPEC,
				  X.STOCK_UNIT,
				  (SUM(X.DAY1_Q) + SUM(X.DAY2_Q) + SUM(X.DAY3_Q) + SUM(X.DAY4_Q) + SUM(X.DAY5_Q) + SUM(X.DAY6_Q) + SUM(X.DAY7_Q)
					 + SUM(X.DAY8_Q) + SUM(X.DAY9_Q) + SUM(X.DAY10_Q) + SUM(X.DAY11_Q) + SUM(X.DAY12_Q) + SUM(X.DAY13_Q)
					 + SUM(X.DAY14_Q) + SUM(X.DAY15_Q) + SUM(X.DAY16_Q) + SUM(X.DAY17_Q) + SUM(X.DAY18_Q) + SUM(X.DAY19_Q) +
					 + SUM(X.DAY20_Q) + SUM(X.DAY21_Q) + SUM(X.DAY22_Q) + SUM(X.DAY23_Q) + SUM(X.DAY24_Q) + SUM(X.DAY25_Q) +
					 + SUM(X.DAY26_Q) + SUM(X.DAY27_Q) + SUM(X.DAY28_Q) + SUM(X.DAY29_Q) + SUM(X.DAY30_Q) + SUM(X.DAY31_Q))		AS TOT_Q,
				  SUM(X.DAY1_Q)																									AS DAY1_Q,
				  SUM(X.DAY2_Q)																									AS DAY2_Q,
				  SUM(X.DAY3_Q)																									AS DAY3_Q,
				  SUM(X.DAY4_Q)																									AS DAY4_Q,
				  SUM(X.DAY5_Q)																									AS DAY5_Q,
				  SUM(X.DAY6_Q)																									AS DAY6_Q,
				  SUM(X.DAY7_Q)																									AS DAY7_Q,
				  SUM(X.DAY8_Q)																									AS DAY8_Q,
				  SUM(X.DAY9_Q)																									AS DAY9_Q,
				  SUM(X.DAY10_Q)																								AS DAY10_Q,
				  SUM(X.DAY11_Q)																								AS DAY11_Q,
				  SUM(X.DAY12_Q)																								AS DAY12_Q,
				  SUM(X.DAY13_Q)																								AS DAY13_Q,
				  SUM(X.DAY14_Q)																								AS DAY14_Q,
				  SUM(X.DAY15_Q)																								AS DAY15_Q,
				  SUM(X.DAY16_Q)																								AS DAY16_Q,
				  SUM(X.DAY17_Q)																								AS DAY17_Q,
				  SUM(X.DAY18_Q)																								AS DAY18_Q,
				  SUM(X.DAY19_Q)																								AS DAY19_Q,
				  SUM(X.DAY20_Q)																								AS DAY20_Q,
				  SUM(X.DAY21_Q)																								AS DAY21_Q,
				  SUM(X.DAY22_Q)																								AS DAY22_Q,
				  SUM(X.DAY23_Q)																								AS DAY23_Q,
				  SUM(X.DAY24_Q)																								AS DAY24_Q,
				  SUM(X.DAY25_Q)																								AS DAY25_Q,
				  SUM(X.DAY26_Q)																								AS DAY26_Q,
				  SUM(X.DAY27_Q)																								AS DAY27_Q,
				  SUM(X.DAY28_Q)																								AS DAY28_Q,
				  SUM(X.DAY29_Q)																								AS DAY29_Q,
				  SUM(X.DAY30_Q)																								AS DAY30_Q,
				  SUM(X.DAY31_Q)																								AS DAY31_Q,
				  X.ITEM,
				  X.ORDER_NUM,
				  X.REMARK,
				  X.P_SEQ,
				  X.WORK_SHOP,
				  X.PLAN_TYPE,
				  --20181105 추가
				  X.CUSTOM_CODE,
				  X.CUSTOM_NAME,
				  X.DVRY_DATE
			  FROM (SELECT
						1 AS SORT_SEQ,
						A.DIV_CODE,
						B.SPEC,
						B.STOCK_UNIT,
						<choose>
							<when test="TYPE == &quot;W&quot;">
								A.WORK_SHOP_CODE,
								A.ITEM_CODE,
								uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID, A.ITEM_CODE) AS ITEM_INFO,
								A.ORDER_NUM ORDER_INFO,
							</when>
							<otherwise>
								A.WORK_SHOP_CODE,
								A.ITEM_CODE,
								uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID, A.ITEM_CODE) AS ITEM_INFO,
								A.REMARK AS ORDER_INFO,
							</otherwise>
						</choose>
						(SELECT CODE_NAME
						 FROM BSA100T
						 WHERE MAIN_CODE = 'P105' AND SUB_CODE = '11') AS GUBUN,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '01' THEN A.WK_PLAN_Q ELSE 0 END			DAY1_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '02' THEN A.WK_PLAN_Q ELSE 0 END			DAY2_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '03' THEN A.WK_PLAN_Q ELSE 0 END			DAY3_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '04' THEN A.WK_PLAN_Q ELSE 0 END			DAY4_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '05' THEN A.WK_PLAN_Q ELSE 0 END			DAY5_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '06' THEN A.WK_PLAN_Q ELSE 0 END			DAY6_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '07' THEN A.WK_PLAN_Q ELSE 0 END			DAY7_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '08' THEN A.WK_PLAN_Q ELSE 0 END			DAY8_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '09' THEN A.WK_PLAN_Q ELSE 0 END			DAY9_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '10' THEN A.WK_PLAN_Q ELSE 0 END			DAY10_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '11' THEN A.WK_PLAN_Q ELSE 0 END			DAY11_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '12' THEN A.WK_PLAN_Q ELSE 0 END			DAY12_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '13' THEN A.WK_PLAN_Q ELSE 0 END			DAY13_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '14' THEN A.WK_PLAN_Q ELSE 0 END			DAY14_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '15' THEN A.WK_PLAN_Q ELSE 0 END			DAY15_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '16' THEN A.WK_PLAN_Q ELSE 0 END			DAY16_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '17' THEN A.WK_PLAN_Q ELSE 0 END			DAY17_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '18' THEN A.WK_PLAN_Q ELSE 0 END			DAY18_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '19' THEN A.WK_PLAN_Q ELSE 0 END			DAY19_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '20' THEN A.WK_PLAN_Q ELSE 0 END			DAY20_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '21' THEN A.WK_PLAN_Q ELSE 0 END			DAY21_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '22' THEN A.WK_PLAN_Q ELSE 0 END			DAY22_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '23' THEN A.WK_PLAN_Q ELSE 0 END			DAY23_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '24' THEN A.WK_PLAN_Q ELSE 0 END			DAY24_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '25' THEN A.WK_PLAN_Q ELSE 0 END			DAY25_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '26' THEN A.WK_PLAN_Q ELSE 0 END			DAY26_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '27' THEN A.WK_PLAN_Q ELSE 0 END			DAY27_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '28' THEN A.WK_PLAN_Q ELSE 0 END			DAY28_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '29' THEN A.WK_PLAN_Q ELSE 0 END			DAY29_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '30' THEN A.WK_PLAN_Q ELSE 0 END			DAY30_Q,
						CASE WHEN SUBSTRING(A.PRODT_PLAN_DATE, 7, 2) = '31' THEN A.WK_PLAN_Q ELSE 0 END			DAY31_Q,
						A.ITEM_CODE 		AS ITEM,
						A.ORDER_NUM 		AS ORDER_NUM,
						A.REMARK,
						A.SEQ 				AS P_SEQ,
						A.WORK_SHOP_CODE 	AS WORK_SHOP,
						A.PLAN_TYPE,
						--20181105 추가
						D.CUSTOM_CODE,
						E.CUSTOM_NAME,
						C.DVRY_DATE
					 FROM PPL100T A WITH(NOLOCK)
					 LEFT JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													 AND B.ITEM_CODE   = A.ITEM_CODE
					 LEFT JOIN SOF110T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
													 AND C.OUT_DIV_CODE    = A.DIV_CODE
													 AND C.ORDER_NUM   = A.ORDER_NUM
													 AND C.SER_NO      = A.SEQ
					 LEFT JOIN SOF100T D WITH(NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
													 AND D.DIV_CODE    = C.DIV_CODE
													 AND D.ORDER_NUM   = C.ORDER_NUM
					 LEFT JOIN BCM100T E WITH(NOLOCK) ON E.COMP_CODE   = D.COMP_CODE
													 AND E.CUSTOM_CODE = D.CUSTOM_CODE
					WHERE A.ITEM_CODE = B.ITEM_CODE
						AND A.DIV_CODE = @sDIV_CODE
						AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
						AND A.WORK_SHOP_CODE LIKE  @sWORK_SHOP_CODE
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
						AND A.ITEM_CODE LIKE  @sITEM_CODE
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
						AND uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM_CODE)LIKE  @sITEM_NAME
					</if>
					) X
			<choose>
				<when test="TYPE == &quot;W&quot;">
					GROUP BY X.SORT_SEQ, X.DIV_CODE, X.WORK_SHOP, X.PLAN_TYPE, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.SPEC, X.STOCK_UNIT,
							 X.ORDER_INFO, X.P_SEQ, X.GUBUN, X.ITEM, X.ORDER_NUM, X.REMARK,
							 --20181105 추가
							 X.CUSTOM_CODE, X.CUSTOM_NAME, X.DVRY_DATE) Y
						LEFT JOIN (SELECT
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '01' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM1,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '02' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM2,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '03' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM3,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '04' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM4,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '05' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM5,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '06' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM6,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '07' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM7,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '08' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM8,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '09' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM9,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '10' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM10,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '11' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM11,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '12' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM12,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '13' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM13,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '14' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM14,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '15' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM15,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '16' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM16,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '17' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM17,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '18' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM18,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '19' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM19,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '20' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM20,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '21' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM21,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '22' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM22,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '23' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM23,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '24' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM24,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '25' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM25,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '26' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM26,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '27' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM27,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '28' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM28,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '29' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM29,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '30' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM30,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '31' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM31,
								DIV_CODE,
								WORK_SHOP_CODE,
								ITEM_CODE,
								ORDER_NUM,
								SEQ,
								REMARK,
								PLAN_TYPE
							FROM PPL100T WITH(NOLOCK)
							WHERE SUBSTRING(PRODT_PLAN_DATE, 1, 6) = #{FR_DATE}
							GROUP BY DIV_CODE, WORK_SHOP_CODE,ITEM_CODE, ORDER_NUM, SEQ, REMARK, PLAN_TYPE) Z ON Y.DIV_CODE				= Z.DIV_CODE
																											 AND Y.WORK_SHOP_CODE		= Z.WORK_SHOP_CODE
																											 AND Y.ITEM_CODE			= Z.ITEM_CODE
																											 AND Y.ORDER_NUM			= Z.ORDER_NUM
																											 AND Y.P_SEQ				= Z.SEQ
																											 AND ISNULL(Y.REMARK, '')	= ISNULL(Z.REMARK, '')
																											 AND Y.PLAN_TYPE			= Z.PLAN_TYPE
					ORDER BY Y.DIV_CODE, Y.WORK_SHOP, Y.PLAN_TYPE, Y.ITEM, Y.REMARK, Y.ORDER_NUM, Y.P_SEQ, Y.SORT_SEQ
				</when>
				<otherwise>
					GROUP BY X.SORT_SEQ, X.DIV_CODE, X.WORK_SHOP, X.PLAN_TYPE, X.WORK_SHOP_CODE, X.ITEM_CODE, X.ITEM_INFO, X.SPEC, X.STOCK_UNIT,
							 X.ORDER_INFO, X.P_SEQ, X.GUBUN, X.ITEM, X.ORDER_NUM, X.REMARK,
							 --20181105 추가
							 X.CUSTOM_CODE, X.CUSTOM_NAME, X.DVRY_DATE) Y
						LEFT JOIN (SELECT
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '01' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM1,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '02' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM2,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '03' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM3,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '04' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM4,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '05' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM5,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '06' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM6,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '07' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM7,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '08' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM8,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '09' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM9,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '10' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM10,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '11' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM11,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '12' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM12,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '13' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM13,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '14' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM14,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '15' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM15,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '16' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM16,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '17' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM17,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '18' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM18,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '19' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM19,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '20' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM20,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '21' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM21,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '22' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM22,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '23' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM23,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '24' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM24,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '25' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM25,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '26' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM26,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '27' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM27,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '28' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM28,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '29' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM29,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '30' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM30,
								MAX(CASE WHEN RIGHT(PRODT_PLAN_DATE, 2) = '31' THEN WK_PLAN_NUM  ELSE NULL END)  WK_PLAN_NUM31,
								DIV_CODE,
								WORK_SHOP_CODE,
								ITEM_CODE,
								ORDER_NUM,
								SEQ,
								REMARK,
								PLAN_TYPE
							FROM PPL100T WITH(NOLOCK)
							WHERE SUBSTRING(PRODT_PLAN_DATE, 1, 6) = #{FR_DATE}
							GROUP BY DIV_CODE, WORK_SHOP_CODE,ITEM_CODE, ORDER_NUM, SEQ, REMARK, PLAN_TYPE) Z ON Y.DIV_CODE				= Z.DIV_CODE
																											 AND Y.WORK_SHOP_CODE		= Z.WORK_SHOP_CODE
																											 AND Y.ITEM_CODE			= Z.ITEM_CODE
																											 AND Y.ORDER_NUM			= Z.ORDER_NUM
																											 AND Y.P_SEQ				= Z.SEQ
																											 AND ISNULL(Y.REMARK, '')	= ISNULL(Z.REMARK, '')
																											 AND Y.PLAN_TYPE			= Z.PLAN_TYPE
					ORDER BY Y.DIV_CODE, Y.ITEM, Y.WORK_SHOP, Y.PLAN_TYPE, Y.REMARK, Y.ORDER_NUM, Y.P_SEQ, Y.SORT_SEQ
				</otherwise>
			</choose>
	</select>
</mapper>
