<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ppl320ukrvServiceImpl">
	<select id="ppl320ukrvServiceImpl.selectResourcelist" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
	    DECLARE  @PLAN_DATE_FR NVARCHAR(8)
	           , @PLAN_DATE_TO NVARCHAR(8)
	           
	    SELECT   @PLAN_DATE_FR = CONVERT(NVARCHAR(8), DATEADD(DAY, 1, START_DATE), 112)
		       , @PLAN_DATE_TO = CONVERT(NVARCHAR(8), DATEADD(DAY, 1, END_DATE) , 112)
		  FROM BCM420T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CAL_TYPE = '3'
		   AND CAL_NO    = #{WEEK_NUM}
		   
		 SELECT  DISTINCT 
		 		   'root'             					AS parentId
				  , F.PROG_WORK_CODE   					AS id
			  	  , F.PROG_WORK_CODE +'/'+G.PROG_WORK_NAME   AS name
				  , 'true'                              AS expanded
				  , 'root|'+A.WORK_SHOP_CODE            AS sort
		  		  , F.PROG_WORK_CODE		            AS category 
		  FROM	    PPL350T A  WITH (NOLOCK)	
		  LEFT JOIN PPL100T B WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                   AND B.DIV_CODE        = A.DIV_CODE
										   AND B.WK_PLAN_NUM     = A.WK_PLAN_NUM
										   AND B.APS_NO          = A.MRP_CONTROL_NUM 
										   AND B.ORDER_NUM	     = A.ORDER_NUM       
										   AND B.SEQ		     = A.SEQ             
										   AND B.ITEM_CODE	     = A.ITEM_CODE       
		  LEFT JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
		                                   AND C.DIV_CODE        = A.DIV_CODE
										   AND C.ITEM_CODE       = A.ITEM_CODE
		  LEFT JOIN BSA230T E WITH (NOLOCK) ON E.COMP_CODE	     = A.COMP_CODE		
								 		   AND E.TYPE_LEVEL      = A.DIV_CODE
										   AND E.TREE_CODE       = A.WORK_SHOP_CODE
		  LEFT JOIN PBS410T F WITH (NOLOCK) ON F.COMP_CODE       = A.COMP_CODE		
										   AND F.DIV_CODE        = A.DIV_CODE
										   AND F.EQU_CODE        = A.EQU_CODE
										   AND F.ITEM_CODE       = A.ITEM_CODE					
		  LEFT JOIN PBS200T G WITH (NOLOCK) ON G.COMP_CODE       = F.COMP_CODE         --(공정정보)
										   AND G.DIV_CODE        = F.DIV_CODE
										   AND G.WORK_SHOP_CODE  = F.WORK_SHOP_CODE
										   AND G.PROG_WORK_CODE  = F.PROG_WORK_CODE										   				
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE   	= #{DIV_CODE}
		   AND (   A.PLAN_START_DATE BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR A.PLAN_END_DATE   BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR @PLAN_DATE_FR     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		        OR @PLAN_DATE_TO     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		       )
		 <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
	       AND A.ORDER_NUM = #{ORDER_NUM}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       AND  A.ITEM_CODE LIKE #{ITEM_CODE}+'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	       AND  C.ITEM_NAME LIKE '%'+#{ITEM_NAME}+'%'
		 </if>
		 UNION ALL
		 SELECT   DISTINCT
		            F.PROG_WORK_CODE      				AS parentId
				  , A.EQU_CODE            				AS id
			  	  , A.EQU_CODE +'/'+D.EQU_NAME          AS name
				  , 'true'                              AS expanded
				  , 'root|'+A.WORK_SHOP_CODE+'|'+A.EQU_CODE      AS sort
		  		  , F.PROG_WORK_CODE		            AS category 
		  FROM	    PPL350T A  WITH (NOLOCK)	
		  LEFT JOIN PPL100T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                   AND B.DIV_CODE    = A.DIV_CODE
										   AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
										   AND B.APS_NO      = A.MRP_CONTROL_NUM 
										   AND B.ORDER_NUM	= A.ORDER_NUM       
										   AND B.SEQ		    = A.SEQ             
										   AND B.ITEM_CODE	= A.ITEM_CODE       
		  LEFT JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                   AND C.DIV_CODE    = A.DIV_CODE
										   AND C.ITEM_CODE   = A.ITEM_CODE
		  LEFT JOIN EQU200T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                   AND D.DIV_CODE    = A.DIV_CODE
										   AND D.EQU_CODE    = A.EQU_CODE
		  LEFT JOIN BSA230T E WITH (NOLOCK) ON E.COMP_CODE	= A.COMP_CODE		
								 		   AND E.TYPE_LEVEL  = A.DIV_CODE
										   AND E.TREE_CODE   = A.WORK_SHOP_CODE
		  LEFT JOIN PBS410T F WITH (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE		
										   AND F.DIV_CODE    = A.DIV_CODE
										   AND F.EQU_CODE    = A.EQU_CODE
										   AND F.ITEM_CODE   = A.ITEM_CODE		
		  LEFT JOIN PBS200T G WITH (NOLOCK) ON G.COMP_CODE       = F.COMP_CODE         --(공정정보)
										   AND G.DIV_CODE        = F.DIV_CODE
										   AND G.WORK_SHOP_CODE  = F.WORK_SHOP_CODE
										   AND G.PROG_WORK_CODE  = F.PROG_WORK_CODE							
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE   	= #{DIV_CODE}
		   AND (   A.PLAN_START_DATE BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR A.PLAN_END_DATE   BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR @PLAN_DATE_FR     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		        OR @PLAN_DATE_TO     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		       )
		 <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
	       AND A.ORDER_NUM = #{ORDER_NUM}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       AND  A.ITEM_CODE LIKE #{ITEM_CODE}+'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	       AND  C.ITEM_NAME LIKE '%'+#{ITEM_NAME}+'%'
		 </if>
		 order by sort
	</select>
	<select id="ppl320ukrvServiceImpl.selectDatalist" parameterType="Map" resultType="rMap">
	    DECLARE  @PLAN_DATE_FR NVARCHAR(8)
	           , @PLAN_DATE_TO NVARCHAR(8)
	           
	    SELECT   @PLAN_DATE_FR = CONVERT(NVARCHAR(8), DATEADD(DAY, 1, START_DATE), 112)
		       , @PLAN_DATE_TO = CONVERT(NVARCHAR(8), DATEADD(DAY, 1, END_DATE) , 112) 
		  FROM BCM420T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CAL_TYPE = '3'
		   AND CAL_NO    = #{WEEK_NUM}
		SELECT      DIV_CODE
		          , SCHEDULE_NO		
				  , ORDER_NUM
				  , SEQ
				  , WORK_SHOP_CODE
				  , WORK_SHOP_NM
				  , PROG_WORK_CODE
				  , PROG_WORK_NAME
				  , EQU_CODE
			  	  , EQU_NAME
				  , ITEM_CODE
				  , ITEM_NAME
				  , WK_PLAN_Q
				  , ORDER_Q
				  , PLAN_START_DATE
				  , PLAN_START_TIME
				  , PLAN_END_DATE
				  , PLAN_END_TIME
				  , CONFIRM_YN
				  , EQU_CODE                  	       						AS resourceId
				  , SCHEDULE_NO                           					AS id
				  , startDate
				  , endDate
		  		  , ITEM_NAME + ' / ' 
		  		     + unilite.fnGetUserDateComp(COMP_CODE, PLAN_START_DATE)
		  		     +' / '
		  		     + CONVERT(NVARCHAR, CONVERT(INT, ORDER_Q))    			AS name
		  		  , PROG_WORK_CODE		                    				AS category 
		  		  , CASE  WHEN PROG_WORK_CODE	= 'H120' THEN 'orange'
		  		          WHEN PROG_WORK_CODE	= 'H210' THEN 'purple'
		  		          WHEN PROG_WORK_CODE	= 'H310' THEN 'lime'
		  		          ELSE 'cyan'
		  		     END                               AS eventColor
				  , SCHEDULE_NO  AS DEPENDENCY_FROM
				  , CASE WHEN SORT_ID = COUNT(*) OVER (PARTITION BY ORDER_NUM, SEQ )  THEN SCHEDULE_NO ELSE NEXT_SCHEDULE_NO  END AS DEPENDENCY_TO
				  
		FROM ( 
		SELECT      A.COMP_CODE
		          , A.DIV_CODE
		          , A.SCHEDULE_NO		
				  , A.ORDER_NUM
				  , A.SEQ
				  , A.WORK_SHOP_CODE
				  , E.TREE_NAME      AS WORK_SHOP_NM
				  , F.PROG_WORK_CODE
				  , G.PROG_WORK_NAME AS PROG_WORK_NAME
				  , A.EQU_CODE
			  	  , D.EQU_NAME
				  , A.ITEM_CODE
				  , C.ITEM_NAME
				  , B.WK_PLAN_Q
				  , A.ORDER_Q
				  , A.PLAN_START_DATE
				  , A.PLAN_START_TIME
				  , A.PLAN_END_DATE
				  , A.PLAN_END_TIME
				  , A.CONFIRM_YN
				  ,CONVERT(NVARCHAR,
				           CASE WHEN A.PLAN_START_TIME = 0 
				                THEN DATEADD(MI,A.PLAN_START_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME)
					            ELSE CASE WHEN      DATEADD(MI,A.PLAN_START_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								               AND  DATEADD(MI,A.PLAN_START_TIME + H.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.LUNCH_START_TIME)
								               AND  DATEADD(MI,A.PLAN_START_TIME + H.MORNING_REST_TIME + H.LUNCH_TIME ,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.AFTERNOON_REST_START_TIME)
								          THEN      DATEADD(MI,A.PLAN_START_TIME + H.LUNCH_TIME + H.MORNING_REST_TIME + H.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + I.CODE_NAME)

								          WHEN      DATEADD(MI,A.PLAN_START_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								               AND  DATEADD(MI,A.PLAN_START_TIME + H.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.LUNCH_START_TIME)
								          THEN      DATEADD(MI,A.PLAN_START_TIME + H.MORNING_REST_TIME + H.LUNCH_TIME, A.PLAN_START_DATE + ' ' + I.CODE_NAME)

								          WHEN      DATEADD(MI,A.PLAN_START_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								          THEN      DATEADD(MI,A.PLAN_START_TIME + H.MORNING_REST_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME)

									      WHEN      DATEADD(MI,A.PLAN_START_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME)  !=  CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								          THEN      DATEADD(MI,A.PLAN_START_TIME , A.PLAN_START_DATE + ' ' + I.CODE_NAME)
								          ELSE      ''
							          END
				            END,120)		AS startDate
				  , CONVERT(NVARCHAR,
				  			CASE WHEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
							          AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.LUNCH_START_TIME)
								      AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.AFTERNOON_REST_START_TIME)
								 THEN      DATEADD(MI,A.PLAN_END_TIME + H.LUNCH_TIME + H.MORNING_REST_TIME + H.AFTERNOON_REST_TIME ,A.PLAN_START_DATE + ' ' + I.CODE_NAME)
								 
								 WHEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								      AND  DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.LUNCH_START_TIME)
								 THEN
									  CASE WHEN DATEADD(MI,A.PLAN_END_TIME + H.MORNING_REST_TIME + H.LUNCH_TIME, A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.AFTERNOON_REST_START_TIME)
										   THEN DATEADD(MI,A.PLAN_END_TIME + H.MORNING_REST_TIME + H.LUNCH_TIME+ H.AFTERNOON_REST_TIME, A.PLAN_START_DATE + ' ' + I.CODE_NAME)
										   ELSE DATEADD(MI,A.PLAN_END_TIME + H.MORNING_REST_TIME + H.LUNCH_TIME, A.PLAN_START_DATE + ' ' + I.CODE_NAME)
                                      END
                                 
                                 WHEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) &gt;= CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								 THEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME)
   	        				     
   	        				     WHEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME) !=    CONVERT(DATETIME, A.PLAN_START_DATE + ' ' + H.MORNING_REST_START_TIME)
								 THEN      DATEADD(MI,A.PLAN_END_TIME,A.PLAN_START_DATE + ' ' + I.CODE_NAME)

								 ELSE ''
							 END,120) as endDate
				  , ROW_NUMBER() OVER (PARTITION BY A.ORDER_NUM, A.SEQ  ORDER BY A.ORDER_NUM,A.SEQ,A.SCHEDULE_NO )   AS SORT_ID
				  , LEAD(SCHEDULE_NO) OVER (ORDER BY A.ORDER_NUM, A.SEQ ,A.SCHEDULE_NO )                             AS NEXT_SCHEDULE_NO 
				  
		  FROM	    PPL350T A  WITH (NOLOCK)	
		  LEFT JOIN PPL100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                   AND B.DIV_CODE    = A.DIV_CODE
										   AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
										   AND B.APS_NO      = A.MRP_CONTROL_NUM 
										   AND B.ORDER_NUM	 = A.ORDER_NUM       
										   AND B.SEQ		 = A.SEQ             
										   AND B.ITEM_CODE	 = A.ITEM_CODE       
		  LEFT JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                   AND C.DIV_CODE    = A.DIV_CODE
										   AND C.ITEM_CODE   = A.ITEM_CODE
		  LEFT JOIN EQU200T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                   AND D.DIV_CODE    = A.DIV_CODE
										   AND D.EQU_CODE    = A.EQU_CODE
		  LEFT JOIN BSA230T E WITH (NOLOCK) ON E.COMP_CODE	 = A.COMP_CODE		
								 		   AND E.TYPE_LEVEL  = A.DIV_CODE
										   AND E.TREE_CODE   = A.WORK_SHOP_CODE
		  LEFT JOIN PBS410T F WITH (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE		
										   AND F.DIV_CODE    = A.DIV_CODE
										   AND F.EQU_CODE    = A.EQU_CODE
										   AND F.ITEM_CODE   = A.ITEM_CODE				
		  LEFT JOIN PBS200T G WITH (NOLOCK) ON G.COMP_CODE       = F.COMP_CODE         --(공정정보)
										   AND G.DIV_CODE        = F.DIV_CODE
										   AND G.WORK_SHOP_CODE  = F.WORK_SHOP_CODE
										   AND G.PROG_WORK_CODE  = F.PROG_WORK_CODE		
		  LEFT JOIN (SELECT  COMP_CODE
	    				  ,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END) 			  AS MORNING_REST_START_TIME  	--오전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END) 			  AS MORNING_REST_END_TIME	  	--오전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T1' THEN REF_CODE3 ELSE '' END),
									   MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE2 ELSE '' END)) AS MORNING_REST_TIME 			--오전 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END) 			  AS LUNCH_START_TIME  			--점심 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END) 			  AS LUNCH_END_TIME    			--점심 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T2' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE2 ELSE '' END)) AS LUNCH_TIME 				--점심 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END) 			  AS AFTERNOON_REST_START_TIME  --오후 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END) 			  AS AFTERNOON_REST_END_TIME	--오후 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T3' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE2 ELSE '' END)) AS AFTERNOON_REST_TIME        --오후 휴식 시간

						  ,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END) 			  AS OVER_REST_START_TIME		--야근 전 휴식 시작 시각
						  ,MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END) 			  AS OVER_REST_END_TIME         --야근 전 휴식 종료 시각
						  ,DATEDIFF(MI,MAX(CASE WHEN SUB_CODE = 'T4' THEN REF_CODE3 ELSE '' END),
						               MAX(CASE WHEN SUB_CODE = 'T5' THEN REF_CODE2 ELSE '' END)) AS OVER_REST_TIME             --야근 전 휴식 시간
					FROM BSA100T WITH (NOLOCK)
					WHERE MAIN_CODE = 'P202'
					  AND SUB_CODE != '$'
					GROUP BY COMP_CODE) H        ON H.COMP_CODE    = A.COMP_CODE
			LEFT JOIN  BSA100T I WITH (NOLOCK)  ON  I.COMP_CODE    = A.COMP_CODE
												AND I.MAIN_CODE    = 'P200'
												AND I.SUB_CODE     = 'A1'								   	
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE   	= #{DIV_CODE}
		   AND (   A.PLAN_START_DATE BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR A.PLAN_END_DATE   BETWEEN @PLAN_DATE_FR AND @PLAN_DATE_TO
		        OR @PLAN_DATE_FR     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		        OR @PLAN_DATE_TO     BETWEEN A.PLAN_START_DATE AND A.PLAN_END_DATE
		       )
		 <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
	       AND A.ORDER_NUM = #{ORDER_NUM}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       AND  A.ITEM_CODE LIKE #{ITEM_CODE}+'%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	       AND  C.ITEM_NAME LIKE '%'+#{ITEM_NAME}+'%'
		 </if>
		 ) AS T
		 ORDER BY PROG_WORK_CODE , EQU_CODE , PLAN_START_DATE , SCHEDULE_NO
	</select>
	<update id="ppl320ukrvServiceImpl.updateList" parameterType="Map">
		UPDATE   PPL350T
		   SET   PLAN_START_DATE = #{PLAN_START_DATE}
		       , PLAN_START_TIME = #{PLAN_START_TIME}
		       , PLAN_END_DATE   = #{PLAN_END_DATE}
		       , PLAN_END_TIME   = #{PLAN_END_TIME}
		       , CONFIRM_YN      = #{CONFIRM_YN}
		       , UPDATE_DB_USER  = #{S_USER_ID}
		       , UPDATE_DB_TIME  = GETDATE()
		  WHERE  COMP_CODE       = #{S_COMP_CODE}
		    AND  DIV_CODE        = #{DIV_CODE}
		    AND  SCHEDULE_NO     = #{SCHEDULE_NO}
	</update>
	<select id="ppl320ukrvServiceImpl.getCalNo" parameterType="Map" resultType="Map">
	SELECT 
		TOP 1 CAL_NO 
		   , CONVERT(NVARCHAR(8), DATEADD(DAY, 1, START_DATE), 112) AS START_DATE
		   , CONVERT(NVARCHAR(8), DATEADD(DAY, 1, END_DATE) , 112) AS END_DATE
	  FROM BCM420T 
	 WHERE COMP_CODE = #{S_COMP_CODE} 
	   AND CAL_TYPE = #{CAL_TYPE}                --3 : 주단위
	   AND START_DATE &lt;= #{OPTION_DATE} 
	   AND END_DATE &gt;= #{OPTION_DATE}
	</select>
</mapper>