<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ppl160skrvServiceImpl">
   
	<select id="ppl160skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
   		 DECLARE        @sCOMP_CODE         NVARCHAR(08)              	
	                  , @sDIV_CODE          NVARCHAR(08)              	
	                  , @sWORK_SHOP_CODE    NVARCHAR(10)              	
	                  , @sITEM_CODE         NVARCHAR(20)              
   	                  , @sUSER_ID           NVARCHAR(100)              	
					  , @sFrDate			NVARCHAR(08)			
					  , @sToDate			NVARCHAR(08)				
	/*-- 변수 값 할당   ----------------------------------------------------------------------------------------------------*/
	    SET @sCOMP_CODE			= #{S_COMP_CODE}
	    SET @sDIV_CODE			= #{DIV_CODE}
	    SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
	    SET @sITEM_CODE			= #{ITEM_CODE}
   	    SET @sUSER_ID			= #{S_USER_ID}
	    SET @sFrDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + @sDIV_CODE
	    SET @sToDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '31'

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
         SELECT
                Y.DIV_CODE
              , Y.ITEM_CODE
              , Y.ITEM_NAME
              , Y.STOCK_UNIT
              , Y.SPEC
              , Y.WORK_CODE
              , Y.WORK_SHOP_CODE
              , Y.GUBUN
              , Y.TOT_Q
              , Y.DAY1_Q
              , Y.DAY2_Q
              , Y.DAY3_Q
              , Y.DAY4_Q
              , Y.DAY5_Q
              , Y.DAY6_Q
              , Y.DAY7_Q
              , Y.DAY8_Q
              , Y.DAY9_Q
              , Y.DAY10_Q
              , Y.DAY11_Q
              , Y.DAY12_Q
              , Y.DAY13_Q
              , Y.DAY14_Q
              , Y.DAY15_Q
              , Y.DAY16_Q
              , Y.DAY17_Q
              , Y.DAY18_Q
              , Y.DAY19_Q
              , Y.DAY20_Q
              , Y.DAY21_Q
              , Y.DAY22_Q
              , Y.DAY23_Q
              , Y.DAY24_Q
              , Y.DAY25_Q
              , Y.DAY26_Q
              , Y.DAY27_Q
              , Y.DAY28_Q
			  , Y.DAY29_Q
			  , Y.DAY30_Q
			  , Y.DAY31_Q
              , Y.ITEM
        
           FROM (SELECT X.DIV_CODE
                      , X.SORT_SEQ
                      , X.ITEM_CODE
                      , X.ITEM_NAME
                      , X.STOCK_UNIT
                      , X.SPEC
                      , X.WORK_CODE
                      , X.WORK_SHOP_CODE
                      , X.GUBUN
                      , (SUM(X.Day1_Q) + SUM(X.Day2_Q) + SUM(X.Day3_Q) + SUM(X.Day4_Q) + SUM(X.Day5_Q)
                       + SUM(X.Day6_Q) + SUM(X.Day7_Q) + SUM(X.Day8_Q) + SUM(X.Day9_Q) + SUM(X.Day10_Q)
                       + SUM(X.Day11_Q) + SUM(X.Day12_Q) + SUM(X.Day13_Q) + SUM(X.Day14_Q) + SUM(X.Day15_Q)
                       + SUM(X.Day16_Q) + SUM(X.Day17_Q) + SUM(X.Day18_Q) + SUM(X.Day19_Q) + SUM(X.Day20_Q)
                       + SUM(X.Day21_Q) + SUM(X.Day22_Q) + SUM(X.Day23_Q) + SUM(X.Day24_Q) + SUM(X.Day25_Q)
                       + SUM(X.Day26_Q) + SUM(X.Day27_Q) + SUM(X.Day28_Q)+ SUM(X.Day29_Q) + SUM(X.Day30_Q) + SUM(X.Day31_Q)
                        ) TOT_Q
                      , SUM(X.Day1_Q) Day1_Q
                      , SUM(X.Day2_Q) Day2_Q
                      , SUM(X.DAY3_Q) DAY3_Q
                      , SUM(X.DAy4_Q) DAY4_Q
                      , SUM(X.DAY5_Q) DAY5_Q
                      , SUM(X.Day6_Q) Day6_Q
                      , SUM(X.Day7_Q) Day7_Q
                      , SUM(X.DAY8_Q) DAY8_Q
                      , SUM(X.DAy9_Q) DAY9_Q
                      , SUM(X.DAY10_Q) DAY10_Q
                      , SUM(X.Day11_Q) Day11_Q
                      , SUM(X.Day12_Q) Day12_Q
                      , SUM(X.DAY13_Q) DAY13_Q
                      , SUM(X.DAy14_Q) DAY14_Q
                      , SUM(X.DAY15_Q) DAY15_Q
                      , SUM(X.Day16_Q) Day16_Q
                      , SUM(X.Day17_Q) Day17_Q
                      , SUM(X.DAY18_Q) DAY18_Q
                      , SUM(X.DAy19_Q) DAY19_Q
                      , SUM(X.DAY20_Q) DAY20_Q
                      , SUM(X.Day21_Q) Day21_Q
                      , SUM(X.Day22_Q) Day22_Q
                      , SUM(X.DAY23_Q) DAY23_Q
                      , SUM(X.DAy24_Q) DAY24_Q
                      , SUM(X.DAY25_Q) DAY25_Q
                      , SUM(X.Day26_Q) Day26_Q
                      , SUM(X.Day27_Q) Day27_Q
                      , SUM(X.DAY28_Q) DAY28_Q
                      , SUM(X.Day29_Q) Day29_Q
                      , SUM(X.Day30_Q) Day30_Q
                      , SUM(X.DAY31_Q) DAY31_Q
						
                      , X.ITEM
                   FROM (SELECT 1 AS SORT_SEQ
                              , A.DIV_CODE
                              , A.ITEM_CODE
                              , uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM_CODE) AS ITEM_NAME
                              , B.STOCK_UNIT AS STOCK_UNIT
                              , B.SPEC AS SPEC
                              , A.WORK_SHOP_CODE AS WORK_CODE
                              , A.WORK_SHOP_CODE AS WORK_SHOP_CODE
                              , (SELECT CODE_NAME 
                                   FROM BSA100T
                                  WHERE COMP_CODE = @sCOMP_CODE
                                    AND MAIN_CODE = 'P105'
                                    AND SUB_CODE  = '11') AS GUBUN
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 1 THEN A.WK_PLAN_Q ELSE 0 END) DAY1_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 2 THEN A.WK_PLAN_Q ELSE 0 END) DAY2_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 3 THEN A.WK_PLAN_Q ELSE 0 END) DAY3_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 4 THEN A.WK_PLAN_Q ELSE 0 END) DAY4_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 5 THEN A.WK_PLAN_Q ELSE 0 END) DAY5_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 6 THEN A.WK_PLAN_Q ELSE 0 END) DAY6_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 7 THEN A.WK_PLAN_Q ELSE 0 END) DAY7_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 8 THEN A.WK_PLAN_Q ELSE 0 END) DAY8_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 9 THEN A.WK_PLAN_Q ELSE 0 END) DAY9_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 10 THEN A.WK_PLAN_Q ELSE 0 END) DAY10_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 11 THEN A.WK_PLAN_Q ELSE 0 END) DAY11_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 12 THEN A.WK_PLAN_Q ELSE 0 END) DAY12_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 13 THEN A.WK_PLAN_Q ELSE 0 END) DAY13_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 14 THEN A.WK_PLAN_Q ELSE 0 END) DAY14_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 15 THEN A.WK_PLAN_Q ELSE 0 END) DAY15_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 16 THEN A.WK_PLAN_Q ELSE 0 END) DAY16_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 17 THEN A.WK_PLAN_Q ELSE 0 END) DAY17_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 18 THEN A.WK_PLAN_Q ELSE 0 END) DAY18_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 19 THEN A.WK_PLAN_Q ELSE 0 END) DAY19_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 20 THEN A.WK_PLAN_Q ELSE 0 END) DAY20_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 21 THEN A.WK_PLAN_Q ELSE 0 END) DAY21_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 22 THEN A.WK_PLAN_Q ELSE 0 END) DAY22_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 23 THEN A.WK_PLAN_Q ELSE 0 END) DAY23_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 24 THEN A.WK_PLAN_Q ELSE 0 END) DAY24_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 25 THEN A.WK_PLAN_Q ELSE 0 END) DAY25_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 26 THEN A.WK_PLAN_Q ELSE 0 END) DAY26_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 27 THEN A.WK_PLAN_Q ELSE 0 END) DAY27_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 28 THEN A.WK_PLAN_Q ELSE 0 END) DAY28_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 29 THEN A.WK_PLAN_Q ELSE 0 END) DAY29_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 30 THEN A.WK_PLAN_Q ELSE 0 END) DAY30_Q
                              , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 31 THEN A.WK_PLAN_Q ELSE 0 END) DAY31_Q


                              , A.ITEM_CODE AS ITEM 
                           FROM PPL100T A
                              , BPR100T B
                          WHERE A.COMP_CODE = @sCOMP_CODE
                            AND B.COMP_CODE = @sCOMP_CODE
                            AND A.ITEM_CODE = B.ITEM_CODE
                            AND A.DIV_CODE  = @sDIV_CODE
                            AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
                     		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM_CODE)   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
                     
                     
                          GROUP BY A.DIV_CODE, A.ITEM_CODE, B.ITEM_NAME, B.STOCK_UNIT, B.SPEC, A.WORK_SHOP_CODE
                          UNION ALL
                         SELECT DISTINCT 1 AS SORT_SEQ
                              , A.DIV_CODE
                              , A.ITEM ITEM_CODE
                              , uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM) AS ITEM_NAME
                              , B.STOCK_UNIT AS STOCK_UNIT
                              , B.SPEC AS SPEC
                              , A.WORK_SHOP_CODE AS WORK_CODE
                              , A.WORK_SHOP_CODE AS WORK_SHOP_CODE
                              , (SELECT CODE_NAME     
                                   FROM BSA100T
                                  WHERE COMP_CODE = @sCOMP_CODE
                                    AND MAIN_CODE = 'P105'
                                    AND SUB_CODE  = '11') AS GUBUN
                              , 0, 0, 0, 0, 0
                              , 0, 0, 0, 0, 0
                              , 0, 0, 0, 0, 0
                              , 0, 0, 0, 0, 0
                              , 0, 0, 0, 0, 0
                              , 0, 0, 0, 0, 0
                              , 0
       
                              , A.ITEM 
                           FROM (SELECT DISTINCT DIV_CODE
                                      , ITEM_CODE AS ITEM
                                      , WORK_SHOP_CODE
                                   FROM PPL100T
                                  WHERE COMP_CODE = @sCOMP_CODE
                                    AND DIV_CODE  = @sDIV_CODE
                                    AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                              , BPR100T B
                          WHERE B.COMP_CODE = @sCOMP_CODE
                            AND A.ITEM = B.ITEM_CODE
        					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM)   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
                          UNION ALL
                         SELECT 2 AS SORT_SEQ
                              , A.DIV_CODE
                              , '' AS ITEM_CODE
                              , '' AS ITEM_NAME
                              , '' AS STOCK_UNIT 
                              , '' AS SPEC 
                              , '' AS WORK_CODE 
                              , Z.WORK_SHOP_CODE AS WORK_SHOP_CODE 
                              , (SELECT CODE_NAME   
                                   FROM BSA100T 
                                  WHERE COMP_CODE = @sCOMP_CODE 
                                    AND MAIN_CODE = 'P105' 
                                    AND SUB_CODE  = '13') AS GUBUN 
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 1 THEN B.PRODT_Q ELSE 0 END) DAY1_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 2 THEN B.PRODT_Q ELSE 0 END) DAY2_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 3 THEN B.PRODT_Q ELSE 0 END) DAY3_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 4 THEN B.PRODT_Q ELSE 0 END) DAY4_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 5 THEN B.PRODT_Q ELSE 0 END) DAY5_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 6 THEN B.PRODT_Q ELSE 0 END) DAY6_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 7 THEN B.PRODT_Q ELSE 0 END) DAY7_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 8 THEN B.PRODT_Q ELSE 0 END) DAY8_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 9 THEN B.PRODT_Q ELSE 0 END) DAY9_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 10 THEN B.PRODT_Q ELSE 0 END) DAY10_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 11 THEN B.PRODT_Q ELSE 0 END) DAY11_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 12 THEN B.PRODT_Q ELSE 0 END) DAY12_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 13 THEN B.PRODT_Q ELSE 0 END) DAY13_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 14 THEN B.PRODT_Q ELSE 0 END) DAY14_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 15 THEN B.PRODT_Q ELSE 0 END) DAY15_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 16 THEN B.PRODT_Q ELSE 0 END) DAY16_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 17 THEN B.PRODT_Q ELSE 0 END) DAY17_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 18 THEN B.PRODT_Q ELSE 0 END) DAY18_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 19 THEN B.PRODT_Q ELSE 0 END) DAY19_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 20 THEN B.PRODT_Q ELSE 0 END) DAY20_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 21 THEN B.PRODT_Q ELSE 0 END) DAY21_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 22 THEN B.PRODT_Q ELSE 0 END) DAY22_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 23 THEN B.PRODT_Q ELSE 0 END) DAY23_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 24 THEN B.PRODT_Q ELSE 0 END) DAY24_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 25 THEN B.PRODT_Q ELSE 0 END) DAY25_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 26 THEN B.PRODT_Q ELSE 0 END) DAY26_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 27 THEN B.PRODT_Q ELSE 0 END) DAY27_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 28 THEN B.PRODT_Q ELSE 0 END) DAY28_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 29 THEN B.PRODT_Q ELSE 0 END) DAY29_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 30 THEN B.PRODT_Q ELSE 0 END) DAY30_Q
                              , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 31 THEN B.PRODT_Q ELSE 0 END) DAY31_Q

        
                                , A.ITEM_CODE AS ITEM  
                           FROM (SELECT DISTINCT A.COMP_CODE, A.DIV_CODE 
                                      , A.ITEM_CODE 
                                      , A.WORK_SHOP_CODE 
                                      , A.WK_PLAN_NUM 
                                   FROM PPL100T A
                             INNER JOIN BPR100T B ON B.COMP_CODE = A.COMP_CODE
                                                 AND B.ITEM_CODE = A.ITEM_CODE
                                  WHERE A.COMP_CODE = @sCOMP_CODE 
                                    AND A.DIV_CODE  = @sDIV_CODE 
                                    AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A 
                              CROSS JOIN 
                                     PMP100T Z 
                              
                              INNER JOIN 
                                     PMR110T B 
                              ON B.COMP_CODE = Z.COMP_CODE 
                                 AND B.DIV_CODE = Z.DIV_CODE 
                                 AND B.WKORD_NUM = Z.WKORD_NUM 
                              INNER JOIN 
                                     BPR100T C 
                              ON C.COMP_CODE = A.COMP_CODE 
                                 AND C.ITEM_CODE = A.ITEM_CODE 
                             
                          WHERE B.COMP_CODE = @sCOMP_CODE 
                            AND C.COMP_CODE = @sCOMP_CODE 
                            AND A.DIV_CODE  = B.DIV_CODE 
                            AND A.WORK_SHOP_CODE = B.WORK_SHOP_CODE 
                            AND A.ITEM_CODE = B.ITEM_CODE 
                            AND A.ITEM_CODE = C.ITEM_CODE 
                            AND A.DIV_CODE  = @sDIV_CODE 
                            AND B.PRODT_DATE BETWEEN @sFrDate 
                                             AND @sToDate 
						    AND A.COMP_CODE = Z.COMP_CODE 
                                 AND A.DIV_CODE = Z.DIV_CODE 
                                AND A.WK_PLAN_NUM = Z.WK_PLAN_NUM 
       						<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND C.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
                            GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE, C.STOCK_UNIT, C.SPEC, Z.WORK_SHOP_CODE 
                            UNION ALL 
                           SELECT DISTINCT 2 AS SORT_SEQ
                                , A.DIV_CODE 
                              , '' AS ITEM_CODE 
                              , '' AS ITEM_NAME 
                              , '' AS STOCK_UNIT 
                              , '' AS SPEC 
                                , '' AS WORK_CODE 
                                , A.WORK_SHOP_CODE AS WORK_SHOP_CODE 
                                , (SELECT CODE_NAME      
                                     FROM BSA100T 
                                    WHERE COMP_CODE = @sCOMP_CODE 
                                      AND MAIN_CODE = 'P105' 
                                      AND SUB_CODE  = '13') AS GUBUN 
                                , 0, 0, 0, 0, 0
                                , 0, 0, 0, 0, 0
                                , 0, 0, 0, 0, 0
                                , 0, 0, 0, 0, 0
                                , 0, 0, 0, 0, 0
                                , 0, 0, 0, 0, 0, 0

                                , A.ITEM 
                             FROM (SELECT DISTINCT DIV_CODE 
                                        , ITEM_CODE AS ITEM 
                                        , WORK_SHOP_CODE 
                                     FROM PPL100T 
                                    WHERE COMP_CODE = @sCOMP_CODE 
                                      AND DIV_CODE  = @sDIV_CODE 
                                      AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A 
                                , BPR100T B 
                            WHERE B.COMP_CODE = @sCOMP_CODE 
                              AND A.ITEM      = B.ITEM_CODE 
							<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210824 수정: 품목코드 팝업창 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
        
                             UNION ALL 
                            SELECT 3 AS SORT_SEQ
                                 , A.DIV_CODE 
                                 , '' AS ITEM_CODE 
                                 , '' AS ITEM_NAME 
                                 , '' AS STOCK_UNIT 
                                 , '' AS SPEC 
                                 , '' AS WORK_CODE 
                                 , '' WORK_SHOP_CODE 
                                 , (SELECT CODE_NAME      
                                      FROM BSA100T 
                                     WHERE COMP_CODE = @sCOMP_CODE 
                                       AND MAIN_CODE = 'P105' 
                                       AND SUB_CODE  = '14') AS GUBUN 
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 1 THEN C.ORDER_Q ELSE 0 END) DAY1_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 2 THEN C.ORDER_Q ELSE 0 END) DAY2_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 3 THEN C.ORDER_Q ELSE 0 END) DAY3_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 4 THEN C.ORDER_Q ELSE 0 END) DAY4_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 5 THEN C.ORDER_Q ELSE 0 END) DAY5_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 6 THEN C.ORDER_Q ELSE 0 END) DAY6_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 7 THEN C.ORDER_Q ELSE 0 END) DAY7_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 8 THEN C.ORDER_Q ELSE 0 END) DAY8_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 9 THEN C.ORDER_Q ELSE 0 END) DAY9_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 10 THEN C.ORDER_Q ELSE 0 END) DAY10_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 11 THEN C.ORDER_Q ELSE 0 END) DAY11_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 12 THEN C.ORDER_Q ELSE 0 END) DAY12_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 13 THEN C.ORDER_Q ELSE 0 END) DAY13_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 14 THEN C.ORDER_Q ELSE 0 END) DAY14_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 15 THEN C.ORDER_Q ELSE 0 END) DAY15_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 16 THEN C.ORDER_Q ELSE 0 END) DAY16_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 17 THEN C.ORDER_Q ELSE 0 END) DAY17_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 18 THEN C.ORDER_Q ELSE 0 END) DAY18_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 19 THEN C.ORDER_Q ELSE 0 END) DAY19_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 20 THEN C.ORDER_Q ELSE 0 END) DAY20_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 21 THEN C.ORDER_Q ELSE 0 END) DAY21_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 22 THEN C.ORDER_Q ELSE 0 END) DAY22_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 23 THEN C.ORDER_Q ELSE 0 END) DAY23_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 24 THEN C.ORDER_Q ELSE 0 END) DAY24_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 25 THEN C.ORDER_Q ELSE 0 END) DAY25_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 26 THEN C.ORDER_Q ELSE 0 END) DAY26_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 27 THEN C.ORDER_Q ELSE 0 END) DAY27_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 28 THEN C.ORDER_Q ELSE 0 END) DAY28_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 29 THEN C.ORDER_Q ELSE 0 END) DAY29_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 30 THEN C.ORDER_Q ELSE 0 END) DAY30_Q
                                 , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 31 THEN C.ORDER_Q ELSE 0 END) DAY31_Q

   
                                  , A.ITEM_CODE AS ITEM  
          
                               FROM (SELECT DISTINCT ITEM_CODE 
                                          , DIV_CODE 
                                          , WORK_SHOP_CODE 
                                       FROM PPL100T 
                                      WHERE COMP_CODE = @sCOMP_CODE 
                                        AND DIV_CODE  = @sDIV_CODE 
                                        AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A 
                                  , BPR100T B 
                                  , SOF110T C 
                                  , SOF100T D 
                              WHERE B.COMP_CODE = @sCOMP_CODE 
                                AND C.COMP_CODE = @sCOMP_CODE 
                                AND D.COMP_CODE = @sCOMP_CODE 
                                AND A.ITEM_CODE = B.ITEM_CODE 
                                AND A.DIV_CODE  = @sDIV_CODE 
                                AND D.ORDER_DATE BETWEEN @sFrDate AND @sToDate 
                                AND D.ORDER_NUM = C.ORDER_NUM 
                                AND A.ITEM_CODE = C.ITEM_CODE        
                                <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
								</if>
								<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND A.ITEM_CODE	  = #{ITEM_CODE}
								</if>
								<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
								</if>
								<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
								</if>
                                
                                
                              GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE 
                              UNION ALL 
                             SELECT 3 AS SORT_SEQ
                                  , A.DIV_CODE 
                                  , '' AS ITEM_CODE 
                                  , '' AS ITEM_NAME 
                                  , '' AS STOCK_UNIT 
                                  , '' AS SPEC 
                                  , '' AS WORK_CODE 
                                  , '' WORK_SHOP_CODE 
                                  , (SELECT CODE_NAME      
                                       FROM BSA100T 
                                      WHERE COMP_CODE = @sCOMP_CODE 
                                        AND MAIN_CODE = 'P105' 
                                        AND SUB_CODE  = '14') AS GUBUN 
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 1 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY1_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 2 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY2_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 3 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY3_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 4 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY4_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 5 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY5_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 6 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY6_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 7 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY7_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 8 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY8_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 9 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY9_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 10 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY10_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 11 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY11_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 12 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY12_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 13 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY13_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 14 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY14_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 15 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY15_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 16 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY16_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 17 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY17_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 18 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY18_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 19 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY19_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 20 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY20_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 21 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY21_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 22 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY22_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 23 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY23_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 24 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY24_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 25 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY25_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 26 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY26_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 27 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY27_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 28 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY28_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 29 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY29_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 30 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY30_Q
                                  , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 31 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY31_Q

       
                                  , A.ITEM_CODE AS ITEM 
          
                               FROM (SELECT DISTINCT ITEM_CODE 
                                          , DIV_CODE 
                                          , WORK_SHOP_CODE 
                                       FROM PPL100T 
                                      WHERE COMP_CODE = @sCOMP_CODE 
                                        AND DIV_CODE  = @sDIV_CODE 
                                        AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A 
                                  , BPR100T B 
                                  , TEA100T E 
                                  , TEA110T F 
                              WHERE B.COMP_CODE = @sCOMP_CODE 
                                AND E.COMP_CODE = @sCOMP_CODE 
                                AND F.COMP_CODE = @sCOMP_CODE 
                                AND A.ITEM_CODE = B.ITEM_CODE 
                                AND A.DIV_CODE  = @sDIV_CODE 
                                AND E.DATE_CONTRACT BETWEEN @sFrDate 
                                AND @sToDate                  --'SELLING OFFER 계약일
                                AND E.SO_SER_NO  = F.SO_SER_NO        -- 'SELLING OFFER
                                AND A.ITEM_CODE  = F.ITEM_CODE        -- 'SELLING OFFER내역
                                AND E.SO_CONFIRM = 'Y'                -- 'SELLING OFFER 확정자료
        					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
        
       
        
                              GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE 
                              UNION ALL 
        
                             SELECT DISTINCT 3 AS SORT_SEQ
                                  , A.DIV_CODE 
                                  , '' ITEM_CODE 
                                  , '' ITEM_NAME 
                                  , '' AS STOCK_UNIT 
                                  , '' AS SPEC 
                                  , '' AS WORK_CODE 
                                  , '' AS WORK_SHOP_CODE  
                                  , (SELECT CODE_NAME       
                                       FROM BSA100T  
                                      WHERE COMP_CODE = @sCOMP_CODE 
                                        AND MAIN_CODE = 'P105' 
                                        AND SUB_CODE = '14') AS GUBUN 
                                  , 0,0,0,0,0,0,0
                                  , 0,0,0,0,0,0,0
                                  , 0,0,0,0,0,0,0
                                  , 0,0,0,0,0,0,0,0,0,0   
        

        
                                  , A.Item  
                               FROM (SELECT DISTINCT A.DIV_CODE 
                                          , A.ITEM_CODE AS ITEM 
                                          , A.WORK_SHOP_CODE 
                                       FROM PPL100T A WITH (NOLOCK)
                                 INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.ITEM_CODE = A.ITEM_CODE 
                                      WHERE A.COMP_CODE = @sCOMP_CODE 
                                        AND A.DIV_CODE  = @sDIV_CODE 
                                        AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate 
        					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
       
         ) A 
                          UNION ALL 
                         SELECT 4 AS SORT_SEQ
                              , A.DIV_CODE 
                              , '' ITEM_CODE 
                              , '' ITEM_NAME 
                              , '' AS STOCK_UNIT 
                              , '' AS SPEC 
                              , '' AS WORK_CODE 
                              , '' AS WORK_SHOP_CODE 
                              , (SELECT CODE_NAME      
                                   FROM BSA100T 
                                  WHERE COMP_CODE = @sCOMP_CODE 
                                    AND MAIN_CODE = 'P105' 
                                    AND SUB_CODE  = '15') AS GUBUN 
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 1 THEN C.INOUT_Q ELSE 0 END) DAY1_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 2 THEN C.INOUT_Q ELSE 0 END) DAY2_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 3 THEN C.INOUT_Q ELSE 0 END) DAY3_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 4 THEN C.INOUT_Q ELSE 0 END) DAY4_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 5 THEN C.INOUT_Q ELSE 0 END) DAY5_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 6 THEN C.INOUT_Q ELSE 0 END) DAY6_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 7 THEN C.INOUT_Q ELSE 0 END) DAY7_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 8 THEN C.INOUT_Q ELSE 0 END) DAY8_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 9 THEN C.INOUT_Q ELSE 0 END) DAY9_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 10 THEN C.INOUT_Q ELSE 0 END) DAY10_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 11 THEN C.INOUT_Q ELSE 0 END) DAY11_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 12 THEN C.INOUT_Q ELSE 0 END) DAY12_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 13 THEN C.INOUT_Q ELSE 0 END) DAY13_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 14 THEN C.INOUT_Q ELSE 0 END) DAY14_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 15 THEN C.INOUT_Q ELSE 0 END) DAY15_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 16 THEN C.INOUT_Q ELSE 0 END) DAY16_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 17 THEN C.INOUT_Q ELSE 0 END) DAY17_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 18 THEN C.INOUT_Q ELSE 0 END) DAY18_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 19 THEN C.INOUT_Q ELSE 0 END) DAY19_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 20 THEN C.INOUT_Q ELSE 0 END) DAY20_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 21 THEN C.INOUT_Q ELSE 0 END) DAY21_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 22 THEN C.INOUT_Q ELSE 0 END) DAY22_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 23 THEN C.INOUT_Q ELSE 0 END) DAY23_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 24 THEN C.INOUT_Q ELSE 0 END) DAY24_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 25 THEN C.INOUT_Q ELSE 0 END) DAY25_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 26 THEN C.INOUT_Q ELSE 0 END) DAY26_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 27 THEN C.INOUT_Q ELSE 0 END) DAY27_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 28 THEN C.INOUT_Q ELSE 0 END) DAY28_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 29 THEN C.INOUT_Q ELSE 0 END) DAY29_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 30 THEN C.INOUT_Q ELSE 0 END) DAY30_Q
                              , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 31 THEN C.INOUT_Q ELSE 0 END) DAY31_Q

        
                              , A.ITEM_CODE AS ITEM 
                           FROM (SELECT DISTINCT DIV_CODE 
                                      , ITEM_CODE 
                                      , WORK_SHOP_CODE 
                                   FROM PPL100T 
                                  WHERE COMP_CODE = @sCOMP_CODE 
                                    AND DIV_CODE  = @sDIV_CODE 
                                    AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A 
                              , BPR100T B 
                              , BTR100T C 
                          WHERE B.COMP_CODE = @sCOMP_CODE 
                            AND C.COMP_CODE = @sCOMP_CODE 
                            AND A.ITEM_CODE = B.ITEM_CODE 
                            AND C.CREATE_LOC IN ('1', '5')           --'생성경로(영업, 무역수출)
                            AND C.INOUT_TYPE = '2'                   --'출고
                            AND A.ITEM_CODE = C.ITEM_CODE 
                            AND C.INOUT_DATE BETWEEN @sFrDate AND @sToDate 
        					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
       
        
                          GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE 
                          UNION ALL 
                          SELECT DISTINCT 4 AS SORT_SEQ
                               , A.DIV_CODE 
                               , '' ITEM_CODE 
                               , '' ITEM_NAME 
                               , '' AS STOCK_UNIT 
                               , '' AS SPEC 
                               , '' AS WORK_CODE 
                               , '' AS WORK_SHOP_CODE 
                               , (SELECT CODE_NAME      
                                    FROM BSA100T 
                                   WHERE COMP_CODE = @sCOMP_CODE 
                                     AND MAIN_CODE = 'P105' 
                                     AND SUB_CODE  = '15') AS GUBUN 
                               , 0, 0, 0, 0, 0
                               , 0, 0, 0, 0, 0
                               , 0, 0, 0, 0, 0
                               , 0, 0, 0, 0, 0
                               , 0, 0, 0, 0, 0
                               , 0, 0, 0, 0, 0, 0
        

                               , A.ITEM
                            FROM (SELECT DISTINCT A.DIV_CODE
                                       , A.ITEM_CODE AS ITEM
                                       , A.WORK_SHOP_CODE
                                    FROM PPL100T A WITH (NOLOCK)
                              INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                AND B.ITEM_CODE = A.ITEM_CODE
                                   WHERE A.COMP_CODE = @sCOMP_CODE
                                     AND A.DIV_CODE  = @sDIV_CODE
                                     AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
                                    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
										AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
										AND A.ITEM_CODE	  = #{ITEM_CODE}
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
										AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
									</if>
									<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
										AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
									</if>
								) A 
                      ) X 
                   GROUP BY X.SORT_SEQ, X.DIV_CODE, X.ITEM_CODE, X.ITEM_NAME, X.WORK_CODE 
                          , X.WORK_SHOP_CODE, X.GUBUN, X.ITEM, X.STOCK_UNIT, X.SPEC 
              ) Y 
           ORDER BY Y.DIV_CODE, Y.ITEM, Y.SORT_SEQ 
           
	</select>
	
	<select id="ppl160skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	--INOUT_A WK_PLAN_Q
   		DECLARE        @sCOMP_CODE         NVARCHAR(08)              	
	                  , @sDIV_CODE          NVARCHAR(08)              	
	                  , @sWORK_SHOP_CODE    NVARCHAR(10)              	
	                  , @sITEM_CODE         NVARCHAR(20)              
   	                  , @sUSER_ID           NVARCHAR(100)              	
					  , @sFrDate			NVARCHAR(08)			
					  , @sToDate			NVARCHAR(08)				
	/*-- 변수 값 할당   ----------------------------------------------------------------------------------------------------*/
	    SET @sCOMP_CODE			= #{S_COMP_CODE}
	    SET @sDIV_CODE			= #{DIV_CODE}
	    SET @sWORK_SHOP_CODE	= #{WORK_SHOP_CODE}
	    SET @sITEM_CODE			= #{ITEM_CODE}
   	    SET @sUSER_ID			= #{S_USER_ID}
	    SET @sFrDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + @sDIV_CODE
	    SET @sToDate= CASE WHEN #{FR_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_DATE} END + '31'
   		
   		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT 
          Y.DIV_CODE, Y.WORK_CODE, Y.WORK_SHOP_CODE, Y.ITEM_CODE, Y.ITEM_NAME
        , Y.STOCK_UNIT
        , Y.SPEC
        , Y.GUBUN, Y.TOT_Q, Y.DAY1_Q, Y.DAY2_Q, Y.DAY3_Q
        , Y.DAY4_Q, Y.DAY5_Q, Y.DAY6_Q, Y.DAY7_Q, Y.DAY8_Q
        , Y.DAY9_Q, Y.DAY10_Q, Y.DAY11_Q, Y.DAY12_Q, Y.DAY13_Q
        , Y.DAY14_Q, Y.DAY15_Q, Y.DAY16_Q, Y.DAY17_Q, Y.DAY18_Q
        , Y.DAY19_Q, Y.DAY20_Q, Y.DAY21_Q, Y.DAY22_Q, Y.DAY23_Q
        , Y.DAY24_Q, Y.DAY25_Q, Y.DAY26_Q, Y.DAY27_Q, Y.DAY28_Q
		, Y.DAY29_Q, Y.DAY30_Q, Y.DAY31_Q
       
        , Y.ITEM
           FROM (SELECT X.DIV_CODE
                , X.SORT_SEQ
                , X.WORK_CODE
                , X.WORK_SHOP_CODE
                , X.ITEM_CODE
                , X.ITEM_NAME
                , X.STOCK_UNIT
                , X.SPEC
                , X.GUBUN
                , (SUM(X.Day1_Q) + SUM(X.Day2_Q) + SUM(X.Day3_Q) + SUM(X.Day4_Q) + SUM(X.Day5_Q)
                 + SUM(X.Day6_Q) + SUM(X.Day7_Q) + SUM(X.Day8_Q) + SUM(X.Day9_Q) + SUM(X.Day10_Q)
                 + SUM(X.Day11_Q) + SUM(X.Day12_Q) + SUM(X.Day13_Q) + SUM(X.Day14_Q) + SUM(X.Day15_Q)
                 + SUM(X.Day16_Q) + SUM(X.Day17_Q) + SUM(X.Day18_Q) + SUM(X.Day19_Q) + SUM(X.Day20_Q)
                 + SUM(X.Day21_Q) + SUM(X.Day22_Q) + SUM(X.Day23_Q) + SUM(X.Day24_Q) + SUM(X.Day25_Q)
                 + SUM(X.Day26_Q) + SUM(X.Day27_Q) + SUM(X.Day28_Q)+ SUM(X.Day29_Q) + SUM(X.Day30_Q) + SUM(X.Day31_Q)

   
        
                  ) TOT_Q
                , SUM(X.Day1_Q) Day1_Q, SUM(X.Day2_Q) Day2_Q, SUM(X.DAY3_Q) DAY3_Q, SUM(X.DAy4_Q) DAY4_Q, SUM(X.DAY5_Q) DAY5_Q
                , SUM(X.Day6_Q) Day6_Q, SUM(X.Day7_Q) Day7_Q, SUM(X.DAY8_Q) DAY8_Q, SUM(X.DAy9_Q) DAY9_Q, SUM(X.DAY10_Q) DAY10_Q
                , SUM(X.Day11_Q) Day11_Q, SUM(X.Day12_Q) Day12_Q, SUM(X.DAY13_Q) DAY13_Q, SUM(X.DAy14_Q) DAY14_Q, SUM(X.DAY15_Q) DAY15_Q
                , SUM(X.Day16_Q) Day16_Q, SUM(X.Day17_Q) Day17_Q, SUM(X.DAY18_Q) DAY18_Q, SUM(X.DAy19_Q) DAY19_Q, SUM(X.DAY20_Q) DAY20_Q
                , SUM(X.Day21_Q) Day21_Q, SUM(X.Day22_Q) Day22_Q, SUM(X.DAY23_Q) DAY23_Q, SUM(X.DAy24_Q) DAY24_Q, SUM(X.DAY25_Q) DAY25_Q
                , SUM(X.Day26_Q) Day26_Q, SUM(X.Day27_Q) Day27_Q, SUM(X.DAY28_Q) DAY28_Q
				, SUM(X.Day29_Q) Day29_Q, SUM(X.Day30_Q) Day30_Q, SUM(X.DAY31_Q) DAY31_Q
       
                , X.ITEM
             FROM (SELECT 1 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , A.WORK_SHOP_CODE AS WORK_SHOP_CODE
                        , A.ITEM_CODE
                        , uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM_CODE) AS ITEM_NAME
                        , B.STOCK_UNIT AS STOCK_UNIT
                        , B.SPEC AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '11') AS GUBUN
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 1 THEN A.WK_PLAN_Q ELSE 0 END) DAY1_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 2 THEN A.WK_PLAN_Q ELSE 0 END) DAY2_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 3 THEN A.WK_PLAN_Q ELSE 0 END) DAY3_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 4 THEN A.WK_PLAN_Q ELSE 0 END) DAY4_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 5 THEN A.WK_PLAN_Q ELSE 0 END) DAY5_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 6 THEN A.WK_PLAN_Q ELSE 0 END) DAY6_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 7 THEN A.WK_PLAN_Q ELSE 0 END) DAY7_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 8 THEN A.WK_PLAN_Q ELSE 0 END) DAY8_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 9 THEN A.WK_PLAN_Q ELSE 0 END) DAY9_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 10 THEN A.WK_PLAN_Q ELSE 0 END) DAY10_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 11 THEN A.WK_PLAN_Q ELSE 0 END) DAY11_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 12 THEN A.WK_PLAN_Q ELSE 0 END) DAY12_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 13 THEN A.WK_PLAN_Q ELSE 0 END) DAY13_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 14 THEN A.WK_PLAN_Q ELSE 0 END) DAY14_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 15 THEN A.WK_PLAN_Q ELSE 0 END) DAY15_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 16 THEN A.WK_PLAN_Q ELSE 0 END) DAY16_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 17 THEN A.WK_PLAN_Q ELSE 0 END) DAY17_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 18 THEN A.WK_PLAN_Q ELSE 0 END) DAY18_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 19 THEN A.WK_PLAN_Q ELSE 0 END) DAY19_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 20 THEN A.WK_PLAN_Q ELSE 0 END) DAY20_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 21 THEN A.WK_PLAN_Q ELSE 0 END) DAY21_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 22 THEN A.WK_PLAN_Q ELSE 0 END) DAY22_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 23 THEN A.WK_PLAN_Q ELSE 0 END) DAY23_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 24 THEN A.WK_PLAN_Q ELSE 0 END) DAY24_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 25 THEN A.WK_PLAN_Q ELSE 0 END) DAY25_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 26 THEN A.WK_PLAN_Q ELSE 0 END) DAY26_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 27 THEN A.WK_PLAN_Q ELSE 0 END) DAY27_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 28 THEN A.WK_PLAN_Q ELSE 0 END) DAY28_Q
						, SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 29 THEN A.WK_PLAN_Q ELSE 0 END) DAY29_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 30 THEN A.WK_PLAN_Q ELSE 0 END) DAY30_Q
                        , SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 31 THEN A.WK_PLAN_Q ELSE 0 END) DAY31_Q
       
                        , A.ITEM_CODE AS ITEM 
                     FROM PPL100T A
                        , BPR100T B
                    WHERE A.COMP_CODE = @sCOMP_CODE
                      AND B.COMP_CODE = @sCOMP_CODE
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.DIV_CODE  = @sDIV_CODE
                      AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
        			<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
						AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM_CODE	  = #{ITEM_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
					</if>
        
        
                    GROUP BY A.DIV_CODE, A.WORK_SHOP_CODE, A.ITEM_CODE, B.ITEM_NAME, B.STOCK_UNIT, B.SPEC
                    UNION All
                   SELECT DISTINCT 1 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , A.WORK_SHOP_CODE AS WORK_SHOP_CODE
                        , A.ITEM ITEM_CODE
                        , uniLITE.fnItemNameComp(@sCOMP_CODE, @sUSER_ID,A.ITEM) AS ITEM_NAME
                        , B.STOCK_UNIT AS STOCK_UNIT
                        , B.SPEC AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE = '11') AS GUBUN
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0, 0

       
                        , A.ITEM
                     FROM (SELECT DISTINCT DIV_CODE
                               , ITEM_CODE AS ITEM
                               , WORK_SHOP_CODE
                            FROM PPL100T
                           WHERE COMP_CODE = @sCOMP_CODE
                             AND DIV_CODE  = @sDIV_CODE
                             AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                        , BPR100T B
                    WHERE B.COMP_CODE = @sCOMP_CODE
                      AND A.ITEM      = B.ITEM_CODE
					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
						AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM	  = #{ITEM_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM	  LIKE #{ITEM_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
					</if>
        
        
                    UNION ALL
                   SELECT 2 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , Z.WORK_SHOP_CODE AS WORK_SHOP_CODE
                        , '' AS ITEM_CODE
                        , '' AS ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '13') AS GUBUN
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 1 THEN B.PRODT_Q ELSE 0 END) DAY1_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 2 THEN B.PRODT_Q ELSE 0 END) DAY2_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 3 THEN B.PRODT_Q ELSE 0 END) DAY3_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 4 THEN B.PRODT_Q ELSE 0 END) DAY4_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 5 THEN B.PRODT_Q ELSE 0 END) DAY5_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 6 THEN B.PRODT_Q ELSE 0 END) DAY6_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 7 THEN B.PRODT_Q ELSE 0 END) DAY7_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 8 THEN B.PRODT_Q ELSE 0 END) DAY8_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 9 THEN B.PRODT_Q ELSE 0 END) DAY9_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 10 THEN B.PRODT_Q ELSE 0 END) DAY10_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 11 THEN B.PRODT_Q ELSE 0 END) DAY11_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 12 THEN B.PRODT_Q ELSE 0 END) DAY12_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 13 THEN B.PRODT_Q ELSE 0 END) DAY13_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 14 THEN B.PRODT_Q ELSE 0 END) DAY14_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 15 THEN B.PRODT_Q ELSE 0 END) DAY15_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 16 THEN B.PRODT_Q ELSE 0 END) DAY16_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 17 THEN B.PRODT_Q ELSE 0 END) DAY17_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 18 THEN B.PRODT_Q ELSE 0 END) DAY18_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 19 THEN B.PRODT_Q ELSE 0 END) DAY19_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 20 THEN B.PRODT_Q ELSE 0 END) DAY20_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 21 THEN B.PRODT_Q ELSE 0 END) DAY21_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 22 THEN B.PRODT_Q ELSE 0 END) DAY22_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 23 THEN B.PRODT_Q ELSE 0 END) DAY23_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 24 THEN B.PRODT_Q ELSE 0 END) DAY24_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 25 THEN B.PRODT_Q ELSE 0 END) DAY25_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 26 THEN B.PRODT_Q ELSE 0 END) DAY26_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 27 THEN B.PRODT_Q ELSE 0 END) DAY27_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 28 THEN B.PRODT_Q ELSE 0 END) DAY28_Q
						, SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 29 THEN B.PRODT_Q ELSE 0 END) DAY29_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 30 THEN B.PRODT_Q ELSE 0 END) DAY30_Q
                        , SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 31 THEN B.PRODT_Q ELSE 0 END) DAY31_Q
       
                        , A.ITEM_CODE AS ITEM
                     FROM (SELECT DISTINCT COMP_CODE, DIV_CODE
                                , ITEM_CODE
                                , WORK_SHOP_CODE
                                , WK_PLAN_NUM
                             FROM PPL100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND DIV_CODE  = @sDIV_CODE
                              AND PRODT_PLAN_DATE BETWEEN @sFrDate
                              AND @sToDate) A
                        CROSS JOIN
                               PMP100T Z
                           
                        INNER JOIN
                               PMR110T B
                        ON B.COMP_CODE = Z.COMP_CODE
                           AND B.DIV_CODE = Z.DIV_CODE
                           AND B.WKORD_NUM = Z.WKORD_NUM
                        INNER JOIN
                               BPR100T C
                        ON C.COMP_CODE = A.COMP_CODE
                           AND C.ITEM_CODE = A.ITEM_CODE
                        
                    WHERE B.COMP_CODE      = @sCOMP_CODE
                      AND C.COMP_CODE      = @sCOMP_CODE
                      AND A.DIV_CODE       = B.DIV_CODE
                      AND A.WORK_SHOP_CODE = B.WORK_SHOP_CODE
                      AND A.ITEM_CODE      = B.ITEM_CODE
                      AND A.ITEM_CODE      = C.ITEM_CODE
                      AND A.DIV_CODE       = @sDIV_CODE
                      AND B.PRODT_DATE BETWEEN @sFrDate AND @sToDate
                      AND A.COMP_CODE = Z.COMP_CODE
                      AND A.DIV_CODE = Z.DIV_CODE
                      AND A.WK_PLAN_NUM = Z.WK_PLAN_NUM
					<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
						AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM_CODE	  = #{ITEM_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
					</if>
					<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
						AND C.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
					</if>
                    GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE, Z.WORK_SHOP_CODE
                    UNION ALL
                   SELECT DISTINCT 2 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , A.WORK_SHOP_CODE AS WORK_SHOP_CODE
                        , '' AS ITEM_CODE
                        , '' AS ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '13') AS GUBUN
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0, 0

       
                        , A.ITEM
                     FROM (SELECT DISTINCT DIV_CODE
                                , ITEM_CODE AS ITEM
                                , WORK_SHOP_CODE
                             FROM PPL100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND DIV_CODE  = @sDIV_CODE
                              AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                        , BPR100T B
                    WHERE B.COMP_CODE = @sCOMP_CODE
                      AND A.ITEM      = B.ITEM_CODE
						<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
        
        
                    UNION ALL
                   SELECT 3 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , '' WORK_SHOP_CODE
                        , '' ITEM_CODE
                        , '' ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '14') AS GUBUN
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 1 THEN C.ORDER_Q ELSE 0 END) DAY1_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 2 THEN C.ORDER_Q ELSE 0 END) DAY2_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 3 THEN C.ORDER_Q ELSE 0 END) DAY3_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 4 THEN C.ORDER_Q ELSE 0 END) DAY4_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 5 THEN C.ORDER_Q ELSE 0 END) DAY5_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 6 THEN C.ORDER_Q ELSE 0 END) DAY6_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 7 THEN C.ORDER_Q ELSE 0 END) DAY7_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 8 THEN C.ORDER_Q ELSE 0 END) DAY8_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 9 THEN C.ORDER_Q ELSE 0 END) DAY9_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 10 THEN C.ORDER_Q ELSE 0 END) DAY10_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 11 THEN C.ORDER_Q ELSE 0 END) DAY11_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 12 THEN C.ORDER_Q ELSE 0 END) DAY12_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 13 THEN C.ORDER_Q ELSE 0 END) DAY13_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 14 THEN C.ORDER_Q ELSE 0 END) DAY14_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 15 THEN C.ORDER_Q ELSE 0 END) DAY15_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 16 THEN C.ORDER_Q ELSE 0 END) DAY16_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 17 THEN C.ORDER_Q ELSE 0 END) DAY17_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 18 THEN C.ORDER_Q ELSE 0 END) DAY18_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 19 THEN C.ORDER_Q ELSE 0 END) DAY19_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 20 THEN C.ORDER_Q ELSE 0 END) DAY20_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 21 THEN C.ORDER_Q ELSE 0 END) DAY21_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 22 THEN C.ORDER_Q ELSE 0 END) DAY22_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 23 THEN C.ORDER_Q ELSE 0 END) DAY23_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 24 THEN C.ORDER_Q ELSE 0 END) DAY24_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 25 THEN C.ORDER_Q ELSE 0 END) DAY25_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 26 THEN C.ORDER_Q ELSE 0 END) DAY26_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 27 THEN C.ORDER_Q ELSE 0 END) DAY27_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 28 THEN C.ORDER_Q ELSE 0 END) DAY28_Q
						, SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 29 THEN C.ORDER_Q ELSE 0 END) DAY29_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 30 THEN C.ORDER_Q ELSE 0 END) DAY30_Q
                        , SUM(CASE WHEN SubString(D.ORDER_DATE, 7, 2) = 31 THEN C.ORDER_Q ELSE 0 END) DAY31_Q
       
                        , A.ITEM_CODE AS ITEM
                     FROM (SELECT DISTINCT ITEM_CODE
                                , DIV_CODE
                                , WORK_SHOP_CODE
                             FROM PPL100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND DIV_CODE  = @sDIV_CODE
                              AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                        , BPR100T B
                        , SOF110T C
                        , SOF100T D
                    WHERE B.COMP_CODE = @sCOMP_CODE
                      AND C.COMP_CODE = @sCOMP_CODE
                      AND D.COMP_CODE = @sCOMP_CODE
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.DIV_CODE  = @sDIV_CODE
                      AND D.ORDER_DATE BETWEEN @sFrDate AND @sToDate
                      AND D.ORDER_NUM = C.ORDER_NUM
                      AND A.ITEM_CODE = C.ITEM_CODE
							<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
        
        
                    GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE
                    UNION ALL
                   SELECT 3 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , '' WORK_SHOP_CODE
                        , '' ITEM_CODE
                        , '' ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '14') AS GUBUN
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 1 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY1_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 2 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY2_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 3 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY3_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 4 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY4_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 5 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY5_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 6 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY6_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 7 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY7_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 8 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY8_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 9 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY9_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 10 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY10_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 11 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY11_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 12 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY12_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 13 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY13_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 14 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY14_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 15 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY15_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 16 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY16_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 17 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY17_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 18 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY18_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 19 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY19_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 20 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY20_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 21 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY21_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 22 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY22_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 23 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY23_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 24 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY24_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 25 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY25_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 26 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY26_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 27 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY27_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 28 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY28_Q
						, SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 29 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY29_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 30 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY30_Q
                        , SUM(CASE WHEN SubString(E.DATE_CONTRACT, 7, 2) = 31 THEN F.QTY * F.TRANS_RATE ELSE 0 END) DAY31_Q

       
                            , A.ITEM_CODE AS ITEM 
                         FROM (SELECT DISTINCT ITEM_CODE
                                    , DIV_CODE
                                    , WORK_SHOP_CODE
                                 FROM PPL100T
                                WHERE COMP_CODE = @sCOMP_CODE
                                  AND DIV_CODE  = @sDIV_CODE
                                  AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                            , BPR100T B
                            , TEA100T E
                            , TEA110T F
                        WHERE B.COMP_CODE  = @sCOMP_CODE
                          AND E.COMP_CODE  = @sCOMP_CODE
                          AND F.COMP_CODE  = @sCOMP_CODE
                          AND A.ITEM_CODE  = B.ITEM_CODE
                          AND A.DIV_CODE   = @sDIV_CODE
                          AND E.DATE_CONTRACT BETWEEN @sFrDate AND @sToDate
                          AND E.SO_SER_NO  = F.SO_SER_NO
                          AND A.ITEM_CODE  = F.ITEM_CODE
                          AND E.SO_CONFIRM = 'Y'
							<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
       
        
                        GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE
                        UNION ALL
                       SELECT DISTINCT 3 AS SORT_SEQ
                            , A.DIV_CODE
                            , A.WORK_SHOP_CODE AS WORK_CODE
                            , '' WORK_SHOP_CODE
                            , '' ITEM_CODE
                            , '' ITEM_NAME
                            , '' AS STOCK_UNIT
                            , '' AS SPEC
                            , (SELECT CODE_NAME  
                                 FROM BSA100T
                                WHERE COMP_CODE = @sCOMP_CODE
                                  AND MAIN_CODE = 'P105'
                                  AND SUB_CODE  = '14') AS GUBUN
                            , 0, 0, 0, 0, 0
                            , 0, 0, 0, 0, 0
                            , 0, 0, 0, 0, 0
                            , 0, 0, 0, 0, 0
                            , 0, 0, 0, 0, 0
                            , 0, 0, 0, 0, 0, 0

       

                            , A.ITEM
                         FROM (SELECT DISTINCT A.DIV_CODE
                                    , A.ITEM_CODE AS ITEM
                                    , A.WORK_SHOP_CODE
                                 FROM PPL100T A WITH (NOLOCK)
                           INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                             AND B.ITEM_CODE = A.ITEM_CODE
                                WHERE A.COMP_CODE = @sCOMP_CODE
                                  AND A.DIV_CODE  = @sDIV_CODE
                                  AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
        						<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
								</if>
								<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND A.ITEM_CODE	  = #{ITEM_CODE}
								</if>
								<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
								</if>
								<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
									AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
								</if>
        
                              ) A
                    UNION ALL
                   SELECT 4 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , '' WORK_SHOP_CODE
                        , '' ITEM_CODE
                        , '' ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '15') AS GUBUN
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 1 THEN C.INOUT_Q ELSE 0 END) DAY1_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 2 THEN C.INOUT_Q ELSE 0 END) DAY2_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 3 THEN C.INOUT_Q ELSE 0 END) DAY3_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 4 THEN C.INOUT_Q ELSE 0 END) DAY4_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 5 THEN C.INOUT_Q ELSE 0 END) DAY5_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 6 THEN C.INOUT_Q ELSE 0 END) DAY6_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 7 THEN C.INOUT_Q ELSE 0 END) DAY7_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 8 THEN C.INOUT_Q ELSE 0 END) DAY8_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 9 THEN C.INOUT_Q ELSE 0 END) DAY9_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 10 THEN C.INOUT_Q ELSE 0 END) DAY10_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 11 THEN C.INOUT_Q ELSE 0 END) DAY11_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 12 THEN C.INOUT_Q ELSE 0 END) DAY12_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 13 THEN C.INOUT_Q ELSE 0 END) DAY13_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 14 THEN C.INOUT_Q ELSE 0 END) DAY14_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 15 THEN C.INOUT_Q ELSE 0 END) DAY15_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 16 THEN C.INOUT_Q ELSE 0 END) DAY16_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 17 THEN C.INOUT_Q ELSE 0 END) DAY17_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 18 THEN C.INOUT_Q ELSE 0 END) DAY18_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 19 THEN C.INOUT_Q ELSE 0 END) DAY19_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 20 THEN C.INOUT_Q ELSE 0 END) DAY20_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 21 THEN C.INOUT_Q ELSE 0 END) DAY21_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 22 THEN C.INOUT_Q ELSE 0 END) DAY22_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 23 THEN C.INOUT_Q ELSE 0 END) DAY23_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 24 THEN C.INOUT_Q ELSE 0 END) DAY24_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 25 THEN C.INOUT_Q ELSE 0 END) DAY25_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 26 THEN C.INOUT_Q ELSE 0 END) DAY26_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 27 THEN C.INOUT_Q ELSE 0 END) DAY27_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 28 THEN C.INOUT_Q ELSE 0 END) DAY28_Q
						, SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 29 THEN C.INOUT_Q ELSE 0 END) DAY29_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 30 THEN C.INOUT_Q ELSE 0 END) DAY30_Q
                        , SUM(CASE WHEN SubString(C.INOUT_DATE, 7, 2) = 31 THEN C.INOUT_Q ELSE 0 END) DAY31_Q

        
                       -- , A.ORDER_NUM 
                        , A.ITEM_CODE AS ITEM
                     FROM (SELECT DISTINCT DIV_CODE
                                , ITEM_CODE
                                , WORK_SHOP_CODE
                                , ORDER_NUM
                             FROM PPL100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND DIV_CODE  = @sDIV_CODE
                              AND PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate) A
                        , BPR100T B
                        , BTR100T C
                    WHERE B.COMP_CODE = @sCOMP_CODE
                      AND C.COMP_CODE = @sCOMP_CODE
                      AND A.ITEM_CODE  = B.ITEM_CODE
                      AND C.CREATE_LOC IN ('1', '5')
                      AND C.INOUT_TYPE = '2'
                      AND A.ITEM_CODE  = C.ITEM_CODE
                      AND C.INOUT_DATE BETWEEN @sFrDate AND @sToDate
							<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
       
        
                    GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE
                    UNION ALL
                   SELECT DISTINCT 4 AS SORT_SEQ
                        , A.DIV_CODE
                        , A.WORK_SHOP_CODE AS WORK_CODE
                        , '' WORK_SHOP_CODE
                        , '' ITEM_CODE
                        , '' ITEM_NAME
                        , '' AS STOCK_UNIT
                        , '' AS SPEC
                        , (SELECT CODE_NAME  
                             FROM BSA100T
                            WHERE COMP_CODE = @sCOMP_CODE
                              AND MAIN_CODE = 'P105'
                              AND SUB_CODE  = '15') AS GUBUN
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0
                        , 0, 0, 0, 0, 0, 0

       
                        , A.ITEM
                     FROM (SELECT DISTINCT A.DIV_CODE
                                , A.ITEM_CODE AS ITEM
                                , A.WORK_SHOP_CODE
                             FROM PPL100T A WITH (NOLOCK)
                       INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.ITEM_CODE = A.ITEM_CODE
                            WHERE A.COMP_CODE = @sCOMP_CODE
                              AND A.DIV_CODE  = @sDIV_CODE
                              AND A.PRODT_PLAN_DATE BETWEEN @sFrDate AND @sToDate
							<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
								AND A.WORK_SHOP_CODE   LIKE  #{WORK_SHOP_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  = #{ITEM_CODE}
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
							</if>
							<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
								AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
							</if>
        
                          ) A
        
                  ) X
             GROUP BY X.SORT_SEQ, X.DIV_CODE, X.WORK_CODE, X.WORK_SHOP_CODE, X.ITEM_CODE
                    , X.ITEM_NAME, X.GUBUN, X.ITEM, X.STOCK_UNIT, X.SPEC) Y
          ORDER BY Y.DIV_CODE, Y.WORK_CODE, Y.ITEM, Y.SORT_SEQ
	</select>
   
    <select id="ppl160skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
       SELECT  Y.DIV_CODE,   Y.SPEC, Y.PROJECT_NO, Y.ORDER_Q, Y.STOCK_Q, Y.STOCK_RATE, Y.TOT_Q, Y.WK_PLAN_A, Y.PL_A, Y.ITEM_CODE, Y.PRICE_A,
             Y.GUBUN,
             Y.DAY1_Q,    Y.DAY2_Q,    Y.DAY3_Q,    Y.DAY4_Q,         Y.DAY5_Q,    Y.DAY6_Q,    Y.DAY7_Q,    Y.DAY8_Q,         Y.DAY9_Q,    Y.DAY10_Q,
            Y.DAY11_Q,    Y.DAY12_Q,         Y.DAY13_Q,    Y.DAY14_Q,    Y.DAY15_Q,    Y.DAY16_Q,         Y.DAY17_Q,    Y.DAY18_Q,    Y.DAY19_Q,    Y.DAY20_Q,
            Y.Day21_Q , Y.Day22_Q, Y.Day23_Q, Y.Day24_Q, Y.Day25_Q, Y.Day26_Q, Y.Day27_Q, Y.Day28_Q,  Y.Day29_Q, Day30_Q, Day31_Q,
	        Y.Item
			    From
			    (
			        SELECT  X.DIV_CODE, X.SORT_SEQ, X.ITEM_CODE,  X.SPEC, MAX(PROJECT_NO) PROJECT_NO, MAX(ORDER_Q) ORDER_Q,
			                ISNULL(MAX(STOCK_Q),0) STOCK_Q, 0 STOCK_RATE, ISNULL(MAX(WK_PLAN_A),0) WK_PLAN_A, MAX(PL_A) PL_A, MAX(PRICE_A) PRICE_A,
			                X.WORK_CODE, X.WORK_SHOP_CODE, X.GUBUN,
			                (SUM(X.Day1_Q) + SUM(X.Day2_Q) + SUM(X.Day3_Q) + SUM(X.Day4_Q) + SUM(X.Day5_Q) + SUM(X.Day6_Q) + SUM(X.Day7_Q)  + SUM(X.Day8_Q) +
			                SUM(X.Day9_Q) + SUM(X.Day10_Q) + SUM(X.Day11_Q) + SUM(X.Day12_Q) + SUM(X.Day13_Q) + SUM(X.Day14_Q)  + SUM(X.Day15_Q) + SUM(X.Day16_Q) +
			                SUM(X.Day17_Q) + SUM(X.Day18_Q) + SUM(X.Day19_Q) + SUM(X.Day20_Q) + SUM(X.Day21_Q)  + SUM(X.Day22_Q) + SUM(X.Day23_Q) + SUM(X.Day24_Q) +
			                SUM(X.Day25_Q) + SUM(X.Day26_Q) + SUM(X.Day27_Q) + SUM(X.Day28_Q)                 + SUM(X.DAY29_Q)                 + SUM(X.DAY30_Q)                 + SUM(X.DAY31_Q)
			) TOT_Q ,
	                SUM(X.Day1_Q) Day1_Q, SUM(X.Day2_Q) Day2_Q, SUM(X.DAY3_Q) DAY3_Q, SUM(X.DAy4_Q) DAY4_Q, SUM(X.DAY5_Q) DAY5_Q,
	                SUM(X.Day6_Q) Day6_Q, SUM(X.Day7_Q) Day7_Q, SUM(X.DAY8_Q) DAY8_Q, SUM(X.DAy9_Q) DAY9_Q, SUM(X.DAY10_Q) DAY10_Q,
	                SUM(X.Day11_Q) Day11_Q, SUM(X.Day12_Q) Day12_Q, SUM(X.DAY13_Q) DAY13_Q, SUM(X.DAy14_Q) DAY14_Q, SUM(X.DAY15_Q) DAY15_Q,
	                SUM(X.Day16_Q) Day16_Q, SUM(X.Day17_Q) Day17_Q, SUM(X.DAY18_Q) DAY18_Q, SUM(X.DAy19_Q) DAY19_Q, SUM(X.DAY20_Q) DAY20_Q,
	                SUM(X.Day21_Q) Day21_Q, SUM(X.Day22_Q) Day22_Q, SUM(X.DAY23_Q) DAY23_Q, SUM(X.DAy24_Q) DAY24_Q, SUM(X.DAY25_Q) DAY25_Q,
	                SUM(X.Day26_Q) Day26_Q, SUM(X.Day27_Q) Day27_Q, SUM(X.DAY28_Q) DAY28_Q ,  SUM(X.Day29_Q) Day29_Q, SUM(X.Day30_Q) Day30_Q, SUM(X.Day31_Q) Day31_Q,
	               X.ITEM
	        From
	        (
	            SELECT  1 AS SORT_SEQ,   A.DIV_CODE, A.ITEM_CODE,   uniLITE.fnItemName(#{S_USER_ID},A.ITEM_CODE) as SPEC, 
	                    (SELECT ORDER_NUM FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE}) PROJECT_NO,
	                    CONVERT(VARCHAR(20), (SELECT ORDER_Q FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})) ORDER_Q,
	                    ISNULL((SELECT SAFE_STOCK_Q FROM BPR200T WHERE ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE}),0) AS STOCK_Q,
	                   ISNULL(((SUM(CASE WHEN  PRODT_PLAN_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE}  THEN A.WK_PLAN_Q ELSE 0 END) * (SELECT (ISNULL(PL_COST,0) + ISNULL(PL_AMOUNT,0)) FROM BPL100T WHERE  PROD_ITEM_CODE=A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})) * 1.6),0) AS WK_PLAN_A,
	                    ISNULL((SUM(CASE WHEN PRODT_PLAN_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE} THEN A.WK_PLAN_Q ELSE 0 END) * (SELECT (ISNULL(PL_COST,0) + ISNULL(PL_AMOUNT,0)) FROM BPL100T WHERE  PROD_ITEM_CODE=A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})),0) AS PL_A,
	                    ISNULL((SELECT SUM(ORDER_O) FROM MPO200T WHERE ORDER_NUM IN(SELECT ORDER_NUM FROM MPO100T WHERE LC_NUM = left(#{FIRST_DATE}, 6)  AND RECEIPT_TYPE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})),0) AS PRICE_A,
	                    A.WORK_SHOP_CODE AS WORK_CODE, A.WORK_SHOP_CODE,
	                    (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'P105' AND SUB_CODE = '11' AND COMP_CODE=#{S_COMP_CODE}) AS GUBUN,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 1 THEN A.WK_PLAN_Q ELSE 0 END) DAY1_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 2 THEN A.WK_PLAN_Q ELSE 0 END) DAY2_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 3 THEN A.WK_PLAN_Q ELSE 0 END) DAY3_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 4 THEN A.WK_PLAN_Q ELSE 0 END) DAY4_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 5 THEN A.WK_PLAN_Q ELSE 0 END) DAY5_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 6 THEN A.WK_PLAN_Q ELSE 0 END) DAY6_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 7 THEN A.WK_PLAN_Q ELSE 0 END) DAY7_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 8 THEN A.WK_PLAN_Q ELSE 0 END) DAY8_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 9 THEN A.WK_PLAN_Q ELSE 0 END) DAY9_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 10 THEN A.WK_PLAN_Q ELSE 0 END) DAY10_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 11 THEN A.WK_PLAN_Q ELSE 0 END) DAY11_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 12 THEN A.WK_PLAN_Q ELSE 0 END) DAY12_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 13 THEN A.WK_PLAN_Q ELSE 0 END) DAY13_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 14 THEN A.WK_PLAN_Q ELSE 0 END) DAY14_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 15 THEN A.WK_PLAN_Q ELSE 0 END) DAY15_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 16 THEN A.WK_PLAN_Q ELSE 0 END) DAY16_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 17 THEN A.WK_PLAN_Q ELSE 0 END) DAY17_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 18 THEN A.WK_PLAN_Q ELSE 0 END) DAY18_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 19 THEN A.WK_PLAN_Q ELSE 0 END) DAY19_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 20 THEN A.WK_PLAN_Q ELSE 0 END) DAY20_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 21 THEN A.WK_PLAN_Q ELSE 0 END) DAY21_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 22 THEN A.WK_PLAN_Q ELSE 0 END) DAY22_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 23 THEN A.WK_PLAN_Q ELSE 0 END) DAY23_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 24 THEN A.WK_PLAN_Q ELSE 0 END) DAY24_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 25 THEN A.WK_PLAN_Q ELSE 0 END) DAY25_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 26 THEN A.WK_PLAN_Q ELSE 0 END) DAY26_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 27 THEN A.WK_PLAN_Q ELSE 0 END) DAY27_Q,
	                SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 28 THEN A.WK_PLAN_Q ELSE 0 END) DAY28_Q ,
	            SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 29 THEN A.WK_PLAN_Q ELSE 0 END) DAY29_Q,
	            SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 30 THEN A.WK_PLAN_Q ELSE 0 END) DAY30_Q,
	            SUM(CASE WHEN SubString(A.PRODT_PLAN_DATE, 7, 2) = 31 THEN A.WK_PLAN_Q ELSE 0 END) DAY31_Q,
	                A.ITEM_CODE Item
	             FROM    PPL100T A, BPR100T B
	             Where    A.ITEM_CODE = B.ITEM_CODE
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND A.ITEM_CODE	  = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	              AND A.COMP_CODE=B.COMP_CODE AND A.COMP_CODE=#{S_COMP_CODE} AND    A.DIV_CODE = #{DIV_CODE}  AND   A.PRODT_PLAN_DATE BETWEEN #{FIRST_DATE} AND #{LAST_DATE}
	             GROUP BY A.DIV_CODE, A.ITEM_CODE, B.ITEM_NAME, B.SPEC, A.WORK_SHOP_CODE
	            Union All
	            SELECT  2 AS SORT_SEQ,  A.DIV_CODE,
	                    CONVERT(VARCHAR(20), CONVERT(numeric(20,2),(SELECT (PL_COST + PL_AMOUNT) FROM BPL100T WHERE PROD_ITEM_CODE = A.ITEM_CODE))) AS ITEM_CODE,
	                    C.SPEC,
	                    (SELECT PJT_NAME FROM BCM600T WHERE PJT_CODE = (SELECT ORDER_NUM FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})) ORDER_INFO,
	                    '' ORDER_Q,
	                    ISNULL((SELECT SUM(GOOD_STOCK_Q) FROM BIV100T WHERE ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE} GROUP BY ITEM_CODE),0) AS STOCK_Q,
	                    ((SUM(CASE WHEN B.PRODT_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE} THEN B.PRODT_Q ELSE 0 END) * (SELECT (ISNULL(PL_COST,0) + ISNULL(PL_AMOUNT,0)) FROM BPL100T WHERE  PROD_ITEM_CODE=A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE})) * 1.6) AS WK_PLAN_A,
	                    ISNULL((SELECT TEMPN_01 FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE}),0) AS PL_A, 
	                    ISNULL((SELECT  0 FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM_CODE AND COMP_CODE=#{S_COMP_CODE}),0) PRICE_A,
	                    A.WORK_SHOP_CODE AS WORK_CODE,  '' WORK_SHOP_CODE,
	                    (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'P105' AND SUB_CODE = '13' AND COMP_CODE=#{S_COMP_CODE}) AS GUBUN,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 1 THEN B.PRODT_Q ELSE 0 END) DAY1_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 2 THEN B.PRODT_Q ELSE 0 END) DAY2_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 3 THEN B.PRODT_Q ELSE 0 END) DAY3_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 4 THEN B.PRODT_Q ELSE 0 END) DAY4_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 5 THEN B.PRODT_Q ELSE 0 END) DAY5_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 6 THEN B.PRODT_Q ELSE 0 END) DAY6_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 7 THEN B.PRODT_Q ELSE 0 END) DAY7_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 8 THEN B.PRODT_Q ELSE 0 END) DAY8_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 9 THEN B.PRODT_Q ELSE 0 END) DAY9_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 10 THEN B.PRODT_Q ELSE 0 END) DAY10_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 11 THEN B.PRODT_Q ELSE 0 END) DAY11_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 12 THEN B.PRODT_Q ELSE 0 END) DAY12_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 13 THEN B.PRODT_Q ELSE 0 END) DAY13_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 14 THEN B.PRODT_Q ELSE 0 END) DAY14_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 15 THEN B.PRODT_Q ELSE 0 END) DAY15_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 16 THEN B.PRODT_Q ELSE 0 END) DAY16_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 17 THEN B.PRODT_Q ELSE 0 END) DAY17_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 18 THEN B.PRODT_Q ELSE 0 END) DAY18_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 19 THEN B.PRODT_Q ELSE 0 END) DAY19_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 20 THEN B.PRODT_Q ELSE 0 END) DAY20_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 21 THEN B.PRODT_Q ELSE 0 END) DAY21_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 22 THEN B.PRODT_Q ELSE 0 END) DAY22_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 23 THEN B.PRODT_Q ELSE 0 END) DAY23_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 24 THEN B.PRODT_Q ELSE 0 END) DAY24_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 25 THEN B.PRODT_Q ELSE 0 END) DAY25_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 26 THEN B.PRODT_Q ELSE 0 END) DAY26_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 27 THEN B.PRODT_Q ELSE 0 END) DAY27_Q,
	                    SUM(CASE WHEN SubString(B.PRODT_DATE, 7, 2) = 28 THEN B.PRODT_Q ELSE 0 END) DAY28_Q ,
	                SUM(CASE WHEN SUBSTRING(B.PRODT_DATE, 7, 2) = '29' THEN B.PRODT_Q ELSE 0 END) DAY29_Q,
	                SUM(CASE WHEN SUBSTRING(B.PRODT_DATE, 7, 2) = '30' THEN B.PRODT_Q ELSE 0 END) DAY30_Q,
	                SUM(CASE WHEN SUBSTRING(B.PRODT_DATE, 7, 2) = '31' THEN B.PRODT_Q ELSE 0 END) DAY31_Q,A.ITEM_CODE ITEM
	        From
	    (
	    SELECT  DISTINCT COMP_CODE,DIV_CODE, ITEM_CODE, WORK_SHOP_CODE, PROJECT_NO FROM PPL100T WHERE DIV_CODE = #{DIV_CODE} AND COMP_CODE=#{S_COMP_CODE}
	                    AND   PRODT_PLAN_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE}) A, PMR110T B, BPR100T C
	            Where A.DIV_CODE = B.DIV_CODE And A.WORK_SHOP_CODE = B.WORK_SHOP_CODE
	                AND    A.ITEM_CODE = B.ITEM_CODE AND    A.ITEM_CODE = C.ITEM_CODE 
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND A.ITEM_CODE	  = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND A.ITEM_CODE	  LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
					AND C.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	                 AND    A.COMP_CODE = B.COMP_CODE AND    A.COMP_CODE = C.COMP_CODE   AND    A.DIV_CODE = #{DIV_CODE}
	            AND    B.PRODT_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE}
	       GROUP BY A.DIV_CODE, A.ITEM_CODE, A.WORK_SHOP_CODE, C.STOCK_UNIT, C.SPEC
	           Union All
	 SELECT  DISTINCT 2 AS SORT_SEQ, A.DIV_CODE,
	           CONVERT(VARCHAR(20), CONVERT(numeric(20,2),(SELECT (PL_COST + PL_AMOUNT) FROM BPL100T WHERE PROD_ITEM_CODE = A.ITEM AND COMP_CODE=#{S_COMP_CODE}))) AS ITEM_CODE,
	        B.SPEC,
	    (SELECT PJT_NAME FROM BCM600T WHERE PJT_CODE = (SELECT ORDER_NUM FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM AND COMP_CODE=#{S_COMP_CODE})  AND COMP_CODE=#{S_COMP_CODE}) ORDER_INFO,
	         '' ORDER_Q,
	             ISNULL((SELECT SUM(GOOD_STOCK_Q) FROM BIV100T WHERE ITEM_CODE = A.ITEM AND COMP_CODE=#{S_COMP_CODE} GROUP BY ITEM_CODE ),0) AS STOCK_Q,
	           0 WK_PLAN_A,
	            ISNULL((SELECT TEMPN_01 FROM PPL100T WHERE PRODT_PLAN_DATE = left(#{FIRST_DATE}, 6) AND ITEM_CODE = A.ITEM AND COMP_CODE=#{S_COMP_CODE}),0) AS PL_A, 
	        (SELECT ISNULL(SUM(INOUT_O),0)
	        From
	        (
	            SELECT SUM(A.RECEIPT_Q * ORDER_P) INOUT_O, LC_NUM, RECEIPT_TYPE,  CONVERT(VARCHAR(30), A.RECEIPT_DATE, 112)  UPDATE_DB_TIME
	            FROM QMS100t A, MPO200T B, MPO100T C
	            Where A.ORDER_NUM = B.ORDER_NUM And A.ORDER_NUM = C.ORDER_NUM And B.ORDER_NUM = C.ORDER_NUM
	            AND A.ITEM_CODE = B.ITEM_CODE
	            AND A.COMP_CODE=#{S_COMP_CODE}
	            AND A.COMP_CODE = B.COMP_CODE And A.COMP_CODE = C.COMP_CODE 
	            GROUP BY LC_NUM, RECEIPT_TYPE, A.RECEIPT_DATE
	        )AA
	        WHERE LC_NUM  = left(#{FIRST_DATE}, 6)  AND RECEIPT_TYPE = A.ITEM
	        AND UPDATE_DB_TIME BETWEEN  #{FIRST_DATE} AND #{LAST_DATE}) PRICE_A,
	    A.WORK_SHOP_CODE AS WORK_CODE,
	    '' WORK_SHOP_CODE,
	                        (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'P105' AND SUB_CODE = '13' AND COMP_CODE = #{S_COMP_CODE}) AS GUBUN,
	                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ,0 ,0 , A.Item
	         From
	 (
	     SELECT DISTINCT COMP_CODE, DIV_CODE, ITEM_CODE ITEM, WORK_SHOP_CODE, ORDER_NUM FROM PPL100T WHERE DIV_CODE = #{DIV_CODE} 
	                 AND   PRODT_PLAN_DATE BETWEEN  #{FIRST_DATE} AND #{LAST_DATE} AND COMP_CODE = #{S_COMP_CODE}
	  ) A,  BPR100T B
	  Where A.Item = B.ITEM_CODE 
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
		AND A.Item	  = #{ITEM_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
		AND A.Item	  LIKE #{ITEM_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)"> <!-- 20210827 수정: 품목 조회조건 정규화 -->
		AND B.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'
	</if>
	  AND A.COMP_CODE = B.COMP_CODE AND A.COMP_CODE = #{S_COMP_CODE}
	 ) X
	    GROUP BY X.SORT_SEQ, X.DIV_CODE, X.ITEM_CODE,  X.SPEC, X.WORK_CODE, X.WORK_SHOP_CODE, X.GUBUN, X.ITEM
	    ) Y
	    ORDER BY Y.DIV_CODE, Y.ITEM, Y.WORK_CODE   , Y.SORT_SEQ
    </select>
</mapper>