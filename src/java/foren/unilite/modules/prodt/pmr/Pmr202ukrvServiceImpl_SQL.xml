<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pmr202ukrvServiceImpl">
	<select id="pmr202ukrvServiceImpl.selectDetailList2222" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
		/* pmr202ukrvServiceImpl.selectDetailList */
		BEGIN
			 DECLARE	@COMP_CODE		NVARCHAR(08)	-- 법인코드
					  , @DIV_CODE		NVARCHAR(08)	-- 사업장코드
					  , @WORK_SHOP_CODE	NVARCHAR(08)	-- 작업장
					  , @REF_WKORD_NUM	NVARCHAR(20)	-- 작업지시번호
					  --, @GOOD_YN		NVARCHAR(01)

			 SET @COMP_CODE			= #{S_COMP_CODE}
			 SET @DIV_CODE			= #{DIV_CODE}
			 SET @WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
			 SET @REF_WKORD_NUM		= #{REF_WKORD_NUM}

			 --SET @GOOD_YN			= 'Y' --양품


			IF  ( ( SELECT REWORK_YN
					 FROM PMP100T WITH(NOLOCK)
					WHERE COMP_CODE		= @COMP_CODE
					  AND DIV_CODE		= @DIV_CODE
					  AND WORK_SHOP_CODE= @WORK_SHOP_CODE
					  AND TOP_WKORD_NUM	= @REF_WKORD_NUM ) = 'Y' AND @WORK_SHOP_CODE	= 'WC40' )

				BEGIN
					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , ''									AS OUTSTOCK_NUM
						 , A.WKORD_NUM							AS REF_WKORD_NUM
						 , A.ITEM_CODE
						 , D.ITEM_NAME
						 , D.SPEC
						 , D.STOCK_UNIT
						 , 0									AS PATH_CODE
						 , ISNULL(E.INOUT_NUM, '')				AS INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS INOUT_SEQ
						 , '2'									AS INOUT_TYPE
						 , CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN C.GOOD_STOCK_Q + ISNULL(E.INOUT_Q, 0)
						 		WHEN A.STOCK_EXCHG_TYPE = 'B' THEN C.BAD_STOCK_Q + ISNULL(E.INOUT_Q, 0)
								ELSE 0
						   END									AS OUTSTOCK_REQ_Q		--, GOOD_STOCK_Q, BAD_STOCK_Q,
						 , C.LOT_NO
						 , 0									AS OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q_BAK
						 , A1.WH_CODE
						 , CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN C.GOOD_STOCK_Q
						 		WHEN A.STOCK_EXCHG_TYPE = 'B' THEN C.BAD_STOCK_Q
								ELSE 0
						   END									AS REMAIN_Q
						 , ISNULL(E.REMARK		, '')			AS REMARK
						 , ISNULL(E.PROJECT_NO	, '')			AS PROJECT_NO
						 , ISNULL(E.PJT_CODE	, '')			AS PJT_CODE
						 , ISNULL(E.INOUT_DATE	, '')			AS INOUT_DATE
						 , CONVERT(CHAR(8)
						 		 , DATEADD(MM, 6, ISNULL(E.INOUT_DATE, ''))
						 		 , 112)							AS END_DATE -- 라벨출력시 사용
						 , ISNULL(E.INOUT_NUM, '')				AS PRODT_INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS PRODT_INOUT_SEQ
						 , 'Y'									AS QUERY_YN
						 , '3'									AS QUERY_FLAG
					  FROM		PMP100T A WITH(NOLOCK)
					INNER JOIN  BSA230T A1 WITH(NOLOCK) ON A1.COMP_CODE			= A.COMP_CODE
													   AND A1.TREE_CODE			= A.WORK_SHOP_CODE
					INNER JOIN  BIV150T C  WITH(NOLOCK) ON C.COMP_CODE			= A.COMP_CODE
													   AND C.DIV_CODE			= A.DIV_CODE
													   AND C.ITEM_CODE			= A.ITEM_CODE
													   AND C.WH_CODE			= A1.WH_CODE
					INNER JOIN  BPR100T D  WITH(NOLOCK) ON D.COMP_CODE			= A.COMP_CODE
													   AND D.ITEM_CODE			= A.ITEM_CODE
					LEFT JOIN   BTR100T E  WITH(NOLOCK) ON E.COMP_CODE			= A.COMP_CODE
													   AND E.DIV_CODE			= A.DIV_CODE
													   AND E.INOUT_TYPE			= '2'
													   AND E.INOUT_CODE_TYPE	= '3'
													   AND E.INOUT_METH			= '1'
													--   AND E.INOUT_CODE_DETAIL	= '10'
													   AND E.ITEM_CODE			= A.ITEM_CODE
													   AND E.LOT_NO				= C.LOT_NO
													   AND E.ORDER_NUM			= A.WKORD_NUM
													   AND E.BASIS_NUM			= A.WKORD_NUM
					WHERE A.COMP_CODE			= @COMP_CODE
							AND A.DIV_CODE		= @DIV_CODE
							AND A.WKORD_NUM		= @REF_WKORD_NUM
							AND A.WORK_SHOP_CODE= @WORK_SHOP_CODE

							AND ( CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN C.GOOD_STOCK_Q
									   WHEN A.STOCK_EXCHG_TYPE = 'B' THEN C.BAD_STOCK_Q END  &gt; 0

								OR ISNULL(E.INOUT_NUM, '') != '')

				END
			ELSE IF ( @WORK_SHOP_CODE LIKE 'WC9%' )
				BEGIN


					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , ''									AS OUTSTOCK_NUM
						 , A.WKORD_NUM							AS REF_WKORD_NUM
						 , K.ITEM_CODE
						 , D.ITEM_NAME
						 , D.SPEC
						 , D.STOCK_UNIT
						 , 0									AS PATH_CODE
						 , ISNULL(E.INOUT_NUM, '')				AS INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS INOUT_SEQ
						 , '2'									AS INOUT_TYPE
						 , C.GOOD_STOCK_Q + ISNULL(E.INOUT_Q, 0) 	AS OUTSTOCK_REQ_Q		--, GOOD_STOCK_Q, BAD_STOCK_Q,
						 , C.LOT_NO
						 , 0									AS OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q_BAK
						 , A1.WH_CODE
						 , C.GOOD_STOCK_Q  					AS REMAIN_Q
						 , ISNULL(E.REMARK		, '')			AS REMARK
						 , ISNULL(E.PROJECT_NO	, '')			AS PROJECT_NO
						 , ISNULL(E.PJT_CODE	, '')			AS PJT_CODE
						 , ISNULL(E.INOUT_DATE	, '')			AS INOUT_DATE
						 , CONVERT(CHAR(8)
						 		 , DATEADD(MM, 6, ISNULL(E.INOUT_DATE, ''))
						 		 , 112)							AS END_DATE -- 라벨출력시 사용
						 , ISNULL(E.INOUT_NUM, '')				AS PRODT_INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS PRODT_INOUT_SEQ
						 , 'Y'									AS QUERY_YN
						 --BTR100T.BASIS_NUM에 REF_WKORD_NUM를 넣기위해 '1' -> '3'으로 변경
						 , '3'									AS QUERY_FLAG
						-- , '1'									AS QUERY_FLAG
					  FROM		PMP100T A WITH(NOLOCK)
					INNER JOIN PMP200T K WITH(NOLOCK) ON K.COMP_CODE = A.COMP_CODE
														AND K.DIV_CODE = A.DIV_CODE
														AND K.WKORD_NUM = A.WKORD_NUM
														AND K.WORK_SHOP_CODE = A.WORK_SHOP_CODE


					INNER JOIN  BSA230T A1 WITH(NOLOCK) ON A1.COMP_CODE			= A.COMP_CODE
													   AND A1.TREE_CODE			= A.WORK_SHOP_CODE
					INNER JOIN  BIV150T C  WITH(NOLOCK) ON C.COMP_CODE			= K.COMP_CODE
													   AND C.DIV_CODE			= K.DIV_CODE
													   AND C.ITEM_CODE			= K.ITEM_CODE
													   AND C.WH_CODE			=  K.WH_CODE
					INNER JOIN  BPR100T D  WITH(NOLOCK) ON D.COMP_CODE			= K.COMP_CODE
													   AND D.ITEM_CODE			= K.ITEM_CODE

					LEFT JOIN   BTR100T E  WITH(NOLOCK) ON E.COMP_CODE			= K.COMP_CODE
													   AND E.DIV_CODE			= K.DIV_CODE
													   AND E.INOUT_TYPE			= '2'
													   AND E.INOUT_CODE_TYPE	= '3'
													   AND E.INOUT_METH			= '1'
													--   AND E.INOUT_CODE_DETAIL	= '10'
													   AND E.ITEM_CODE			= K.ITEM_CODE
													   AND E.LOT_NO				= C.LOT_NO
													   AND E.ORDER_NUM			= A.WKORD_NUM
													   AND E.BASIS_NUM			= A.WKORD_NUM
					WHERE A.COMP_CODE			= @COMP_CODE
							AND A.DIV_CODE		= @DIV_CODE
							AND A.WKORD_NUM		= @REF_WKORD_NUM
							AND A.WORK_SHOP_CODE= @WORK_SHOP_CODE

							AND (  C.GOOD_STOCK_Q     > 0

								OR ISNULL(E.INOUT_NUM, '') != '')
				END


			ELSE
				BEGIN
					SELECT B.COMP_CODE
						 , B.DIV_CODE
						 , B.OUTSTOCK_NUM
						 , B.REF_WKORD_NUM
						 , B.ITEM_CODE
						 , C.ITEM_NAME
						 , C.SPEC
						 , C.STOCK_UNIT
						 , B.PATH_CODE
						 , B.INOUT_NUM
						 , B.INOUT_SEQ
						 , B.INOUT_TYPE
						 , B.OUTSTOCK_REQ_Q
						 , B.LOT_NO
						 , 0												AS OUTSTOCK_Q
						 , ISNULL(B.PRODT_Q, 0)								AS PRE_OUTSTOCK_Q
						 , ISNULL(B.PRODT_Q, 0)								AS PRE_OUTSTOCK_Q_BAK
		--				 , B.OUTSTOCK_Q
						 , E.WH_CODE
						 , ISNULL(B.OUTSTOCK_Q, 0) - ISNULL(B.PRODT_Q, 0)	AS REMAIN_Q
						 , B.REMARK
						 , B.PROJECT_NO
						 , B.PJT_CODE
						 , D.INOUT_DATE
						 , CONVERT(CHAR(8), DATEADD(MM, 6, D.INOUT_DATE), 112) AS END_DATE -- 라벨출력시 사용
						 , B.PRODT_INOUT_NUM
						 , B.PRODT_INOUT_SEQ
						 , 'Y'												AS QUERY_YN
						 , '1'												AS QUERY_FLAG
					  FROM		 PMP100T A WITH(NOLOCK)
					  INNER JOIN PMP350T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													   AND B.DIV_CODE		= A.DIV_CODE
					  								   AND B.REF_WKORD_NUM	= A.WKORD_NUM
					  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= B.COMP_CODE
					  								   AND C.ITEM_CODE		= B.ITEM_CODE
					  LEFT  JOIN BTR100T D WITH(NOLOCK) ON D.COMP_CODE		= B.COMP_CODE
													   AND D.DIV_CODE		= B.DIV_CODE
													   AND D.INOUT_NUM		= B.INOUT_NUM
													   AND D.INOUT_SEQ		= B.INOUT_SEQ
													   AND D.INOUT_TYPE		= '1'
					  LEFT  JOIN BSA230T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
													   AND E.TREE_CODE		= A.WORK_SHOP_CODE
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND ((A.TOP_WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE)
							OR (A.WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE))
					 --ORDER BY B.REF_WKORD_NUM, B.ITEM_CODE, B.LOT_NO

				UNION ALL

					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , A.BASIS_NUM						AS OUTSTOCK_NUM
						 , A.ORDER_NUM						AS REF_WKORD_NUM
						 , A.ITEM_CODE
						 , G.ITEM_NAME
						 , G.SPEC
						 , G.STOCK_UNIT
						 , '0'								AS PATH_CODE
						 , A.INOUT_NUM
						 , A.INOUT_SEQ
						 , '2'								AS INOUT_TYPE
						 , F.GOOD_WORK_Q					AS OUTSTOCK_REQ_Q
						 , A.LOT_NO
--						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS OUTSTOCK_Q
						 , 0	AS OUTSTOCK_Q
						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS PRE_OUTSTOCK_Q
						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS PRE_OUTSTOCK_Q_BAK
						 , B.WH_CODE
						 , C.GOOD_STOCK_Q					AS REMAIN_Q
						 , A.REMARK
						 , A.PROJECT_NO
						 , A.PJT_CODE
						 , A.INOUT_DATE
						 , CONVERT(CHAR(8), DATEADD(MM, 6, A.INOUT_DATE), 112) AS END_DATE -- 라벨출력시 사용
						 , H.INOUT_NUM						AS PRODT_INOUT_NUM
						 , H.INOUT_SEQ						AS PRODT_INOUT_SEQ
						 , 'Y'								AS QUERY_YN
						 , '2'								AS QUERY_FLAG
					  FROM		BTR100T A WITH(NOLOCK)
					 INNER JOIN BPR100T G WITH(NOLOCK) ON G.COMP_CODE		= A.COMP_CODE
													  AND G.ITEM_CODE		= A.ITEM_CODE
					 INNER JOIN BSA230T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													  AND B.TREE_CODE		= @WORK_SHOP_CODE
													  AND B.WH_CODE			= A.WH_CODE
					 INNER JOIN BIV150T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
													  AND C.DIV_CODE		= A.DIV_CODE
													  AND C.ITEM_CODE		= A.ITEM_CODE
													  AND C.WH_CODE			= A.WH_CODE
													  AND C.LOT_NO			= A.LOT_NO

--					 INNER JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
--													  AND E.DIV_CODE		= A.DIV_CODE
--		--											  AND E.WKORD_NUM		= @REF_WKORD_NUM
--													  AND E.TOP_WKORD_NUM		= @REF_WKORD_NUM
--		--											  AND E.WORK_SHOP_CODE	= 'WC30'
--													  AND E.WKORD_NUM		= A.ORDER_NUM

					 INNER JOIN PMP100T E1 WITH(NOLOCK) ON E1.COMP_CODE		= A.COMP_CODE
													  AND E1.DIV_CODE		= A.DIV_CODE
													  AND E1.WKORD_NUM		= @REF_WKORD_NUM

					 INNER JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE		= E1.COMP_CODE
													  AND E.DIV_CODE		= E1.DIV_CODE
													  AND E.TOP_WKORD_NUM		= E1.TOP_WKORD_NUM
													  AND E.WKORD_NUM		= A.ORDER_NUM


					 INNER JOIN PMR100T F WITH(NOLOCK) ON F.COMP_CODE		= E.COMP_CODE
													  AND F.DIV_CODE		= E.DIV_CODE
													  AND F.WKORD_NUM		= E.WKORD_NUM
					  LEFT JOIN PMP350T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
													  AND D.DIV_CODE		= A.DIV_CODE
													  AND D.INOUT_NUM		= A.INOUT_NUM
													  AND D.INOUT_SEQ		= A.INOUT_SEQ
													  AND D.INOUT_TYPE		= '1'
					  LEFT JOIN BTR100T H WITH(NOLOCK) ON H.COMP_CODE		= A.COMP_CODE
													  AND H.DIV_CODE		= A.DIV_CODE
													  AND H.INOUT_TYPE		= '2'
													  AND H.INOUT_CODE_TYPE	= '3'
													  AND H.INOUT_METH		= '1'
													  AND H.INOUT_TYPE_DETAIL = '10'
		--											  AND H.ORDER_NUM		= @REF_WKORD_NUM
													  AND H.ORDER_NUM		= E.WKORD_NUM
													  AND H.BASIS_NUM		= A.INOUT_NUM
													  AND H.LOT_NO			= A.LOT_NO
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND A.INOUT_TYPE			= '1'
					   AND A.INOUT_CODE_TYPE	= '3'
					   AND A.LOT_NO				= F.LOT_NO
					   -- ADD 2018-12-19
					   AND A.INOUT_CODE != E1.WORK_SHOP_CODE



				END
		END
	</select>

	<select id="pmr202ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
		/* pmr202ukrvServiceImpl.selectDetailList */

		DECLARE @COMP_CODE NVARCHAR(8)
					, @DIV_CODE NVARCHAR(8)
					, @WH_CODE NVARCHAR(10)
					, @WH_CELL_CODE NVARCHAR(10)
					, @WKORD_NUM NVARCHAR(20)

		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE			= #{DIV_CODE}
		SET @WH_CODE			= #{WH_CODE}
		SET @WH_CELL_CODE	= #{WH_CELL_CODE}
		SET @WKORD_NUM		= #{REF_WKORD_NUM}


		SELECT	  A.COMP_CODE
				, A.DIV_CODE
				, C.OUTSTOCK_NUM
			    , A.WKORD_NUM AS REF_WKORD_NUM
				, B.ITEM_CODE
				, M1.ITEM_NAME
				, M1.SPEC
				, M1.STOCK_UNIT
				, C.PATH_CODE
				, C.INOUT_NUM
				, C.INOUT_SEQ
				, C.INOUT_TYPE
				, B.ALLOCK_Q AS OUTSTOCK_REQ_Q--출고요청량
				, V.LOT_NO
				, CASE WHEN ISNULL(V.GOOD_STOCK_Q,0) >= B.ALLOCK_Q THEN B.ALLOCK_Q ELSE ISNULL(V.GOOD_STOCK_Q,0) END	AS OUTSTOCK_Q --출고량
				--20191121 C.PRODT_Q에서 B.PRODT_Q
				, ISNULL(B.PRODT_Q,0) AS PRE_OUTSTOCK_Q			--기존출고량
				, ISNULL(B.PRODT_Q,0) AS PRE_OUTSTOCK_Q_BAK		--기존출고량BAK
				, @WH_CODE AS WH_CODE
				, @WH_CELL_CODE AS WH_CELL_CODE
				--20191121 C.PRODT_Q에서 B.PRODT_Q
				, B.ALLOCK_Q - ISNULL(B.PRODT_Q,0) AS REMAIN_Q	--잔량
				, C.REMARK
				, C.PROJECT_NO
				, C.PJT_CODE
				, D.INOUT_DATE
				--20191121 무조건 INSERT 되도록 C.PRODT_INOUT_NUM, C.PRODT_INOUT_SEQ 값 '', 0 가져오도록 수정
				, '' AS PRODT_INOUT_NUM
				, 0  AS PRODT_INOUT_SEQ
				, ISNULL(V.GOOD_STOCK_Q,0) STOCK_Q		--재고량
				, 'Y'												AS QUERY_YN
				, '1'												AS QUERY_FLAG
				, 'N' AS SAVE_FLAG
				, 'N' AS SAVED_YN -- 등록된 데이터 여부
		FROM	PMP100T A WITH (NOLOCK)
				INNER JOIN PMP200T B  WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM AND A.WORK_SHOP_CODE=B.WORK_SHOP_CODE
				LEFT  JOIN PMP350T C  WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.WKORD_NUM=C.REF_WKORD_NUM AND A.WORK_SHOP_CODE=B.WORK_SHOP_CODE AND B.ITEM_CODE=C.ITEM_CODE
				LEFT  JOIN BPR100T M1 WITH (NOLOCK) ON B.COMP_CODE=M1.COMP_CODE AND B.ITEM_CODE=M1.ITEM_CODE
				LEFT  JOIN BIV150T M2 WITH (NOLOCK) ON C.COMP_CODE=M2.COMP_CODE AND C.DIV_CODE=M2.DIV_CODE AND C.ITEM_CODE=M2.ITEM_CODE AND C.LOT_NO=M2.LOT_NO AND M2.WH_CODE=@WH_CODE AND M2.WH_CELL_CODE=@WH_CELL_CODE AND M2.SUM_TYPE=(SELECT MAX(SUB_CODE) FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B084' AND REF_CODE1='Y')
				LEFT  JOIN BTR100T D WITH(NOLOCK) ON D.COMP_CODE	= C.COMP_CODE
												AND D.DIV_CODE		= C.DIV_CODE
												AND D.INOUT_NUM		= C.INOUT_NUM
												AND D.INOUT_SEQ		= C.INOUT_SEQ
												AND D.INOUT_TYPE	= '2'
												AND D.ITEM_CODE		= B.ITEM_CODE
											    AND D.LOT_NO		= C.LOT_NO
											    AND D.ORDER_NUM		= B.WKORD_NUM
				LEFT JOIN ITEM_FIRST_LOT_V V WITH (NOLOCK) ON V.COMP_CODE = B.COMP_CODE
													AND V.DIV_CODE	= B.DIV_CODE
													AND V.WH_CODE = @WH_CODE
													AND V.WH_CELL_CODE = @WH_CELL_CODE
													AND V.ITEM_CODE = B.ITEM_CODE
		WHERE	A.COMP_CODE=@COMP_CODE
		AND A.DIV_CODE=@DIV_CODE
		AND A.WKORD_NUM = @WKORD_NUM
		AND A.LINE_END_YN = 'Y'
		--20191121 C.PRODT_Q에서 B.PRODT_Q
		AND B.ALLOCK_Q - ISNULL(B.PRODT_Q,0) > 0	--미등록
	</select>

	<select id="pmr202ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
		/* pmr202ukrvServiceImpl.selectDetailList2 */
		DECLARE   @COMP_CODE    NVARCHAR(8)
				, @DIV_CODE     NVARCHAR(8)
				, @WH_CODE      NVARCHAR(10)
				, @WH_CELL_CODE NVARCHAR(10)
				, @WKORD_NUM    NVARCHAR(20)

		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{DIV_CODE}
		SET @WH_CODE		= #{WH_CODE}
		SET @WH_CELL_CODE	= #{WH_CELL_CODE}
		SET @WKORD_NUM		= #{REF_WKORD_NUM}

		SELECT	  D.COMP_CODE
				, D.DIV_CODE
				, B.OUTSTOCK_NUM
				, A.WKORD_NUM									AS REF_WKORD_NUM
				, D.ITEM_CODE
				, M1.ITEM_NAME
				, M1.SPEC
				, M1.STOCK_UNIT
				, D.PATH_CODE
				, D.INOUT_NUM
				, D.INOUT_SEQ
				, D.INOUT_TYPE
				, B.ALLOCK_Q										AS OUTSTOCK_REQ_Q--출고요청량
				, D.LOT_NO
				--, CASE WHEN ISNULL(M2.GOOD_STOCK_Q,0) >= B.ALLOCK_Q THEN B.ALLOCK_Q ELSE ISNULL(M2.GOOD_STOCK_Q,0) END	AS OUTSTOCK_Q --출고량
				, ISNULL(D.INOUT_Q,0) 								AS OUTSTOCK_Q
				--20191121 C.PRODT_Q에서 B.PRODT_Q
				, ISNULL(B.PRODT_Q,0)								AS PRE_OUTSTOCK_Q			--기존출고량
				, ISNULL(B.PRODT_Q,0)								AS PRE_OUTSTOCK_Q_BAK		--기존출고량BAK
				, D.WH_CODE
				, D.WH_CELL_CODE
				--20191121 C.PRODT_Q에서 B.PRODT_Q
				, B.ALLOCK_Q - ISNULL(B.PRODT_Q,0)					AS REMAIN_Q	--잔량
				, D.REMARK
				, D.PROJECT_NO
				, D.PJT_CODE
				, D.INOUT_DATE
				, D.INOUT_NUM										AS PRODT_INOUT_NUM
				, D.INOUT_SEQ										AS PRODT_INOUT_SEQ
				, ISNULL(M2.GOOD_STOCK_Q,0)							AS STOCK_Q		--재고량
				, 'Y'												AS QUERY_YN
				, '1'												AS QUERY_FLAG
				, 'N'												AS SAVE_FLAG
				, 'Y'												AS SAVED_YN -- 등록된 데이터 여부
		FROM	BTR100T D WITH(NOLOCK)
				LEFT  JOIN PMP100T A  WITH (NOLOCK) ON A.COMP_CODE      = D.COMP_CODE
				                                   AND A.DIV_CODE       = D.DIV_CODE
				                                   AND A.WKORD_NUM      = D.ORDER_NUM
				                                   AND A.LINE_END_YN    = 'Y'
				INNER JOIN PMP200T B  WITH (NOLOCK) ON B.COMP_CODE      = D.COMP_CODE
				                                   AND B.DIV_CODE       = D.DIV_CODE
				                                   AND B.WKORD_NUM      = D.ORDER_NUM
				                                   AND D.ITEM_CODE      = B.ITEM_CODE
				                                   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
				LEFT  JOIN BPR100T M1 WITH (NOLOCK) ON D.COMP_CODE      = M1.COMP_CODE
				                                   AND D.ITEM_CODE      = M1.ITEM_CODE
				LEFT  JOIN BIV150TV M2 WITH(NOLOCK) ON D.COMP_CODE      = M2.COMP_CODE
				                                   AND D.DIV_CODE       = M2.DIV_CODE
				                                   AND D.ITEM_CODE      = M2.ITEM_CODE
				                                   AND D.LOT_NO         = M2.LOT_NO
				                                   AND D.WH_CODE        = M2.WH_CODE
				                                   AND D.WH_CELL_CODE   = M2.WH_CELL_CODE
		WHERE	D.COMP_CODE     = @COMP_CODE
		AND     D.DIV_CODE      = @DIV_CODE
		AND     D.INOUT_TYPE    = '2'
		AND     D.ORDER_NUM     = @WKORD_NUM
		AND     D.WH_CODE       = @WH_CODE
		AND     D.WH_CELL_CODE  = @WH_CELL_CODE
		--20191121 C.PRODT_Q에서 B.PRODT_Q, 20191122 주석
		--AND     B.ALLOCK_Q - ISNULL(B.PRODT_Q,0) = 0	--등록 
		ORDER BY D.ORDER_NUM, D.ITEM_CODE, D.INOUT_NUM, D.INOUT_SEQ
	</select>

<!-- 등록 -->
	<update id="pmr202ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
		{call SP_GetAutoNumComp (
			#{COMP_CODE,	mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{DIV_CODE,		mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{TABLE_ID,		mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{PREFIX,		mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{BASIS_DATE,	mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{AUTO_TYPE,	mode=IN,	jdbcType=VARCHAR,	javaType=java.lang.String},
			#{KEY_NUMBER,	mode=OUT,	jdbcType=VARCHAR,	javaType=java.lang.String}
		)}
	</update>

	<insert id="pmr202ukrvServiceImpl.insertDetail" parameterType="Map">		/* 작업지시별등록 추가 */
		/* pmr202ukrvServiceImpl.insertDetail */
		 DECLARE	@COMP_CODE		NVARCHAR(08)	-- 법인코드
				  , @DIV_CODE		NVARCHAR(08)	-- 사업장코드
				  , @InOutNum		NVARCHAR(20)	-- 수불번호
				  , @InOutSeq		NUMERIC(4 ,0)	-- 수불순번
				  , @ItemCode		NVARCHAR(20)	-- 품목코드
				  , @WhCode			NVARCHAR(08)	-- 창고코드
				  , @InOutDate		NVARCHAR(08)	-- 수불일자
				  , @AllocQ			NUMERIC(30, 6)	-- 수불수량
				  , @MoneyUnit		NVARCHAR(03)	-- 화폐단위
				  , @Remark			NVARCHAR(200)	-- 비고
				  , @ProjectNo		NVARCHAR(20)	-- 관리번호
				  , @CurLotNo		NVARCHAR(20)	-- Lot No.
				  , @USER_ID		NVARCHAR(100)	-- 입력자
				  , @UpdateDBTime	DATETIME		-- 입력시간
				  , @WorkShopCode	NVARCHAR(08)	-- 작업장
				  , @WKORD_NUM		NVARCHAR(20)	-- 수/발주번호(작업지시번호)
				  , @PRODT_NUM		NVARCHAR(50)	-- 근거번호
				  , @WH_CELL_CODE		NVARCHAR(20)	-- 창고셀

		 SET @COMP_CODE		= #{S_COMP_CODE}
		 SET @DIV_CODE		= #{DIV_CODE}
		 SET @InOutNum		= #{PRODT_INOUT_NUM}
		 SET @InOutSeq		= #{PRODT_INOUT_SEQ}
		 SET @ItemCode		= #{ITEM_CODE}
		 SET @WhCode		= #{WH_CODE}
		 SET @InOutDate		= #{INOUT_DATE}
		 --20191121 수정: 주석
		 SET @AllocQ		= #{OUTSTOCK_Q} --+ {PRE_OUTSTOCK_Q}
		 SET @MoneyUnit		= #{MONEY_UNIT}
		 SET @Remark		= #{REMARK}
		 SET @ProjectNo		= #{PROJECT_NO}
		 SET @CurLotNo		= #{LOT_NO}
		 SET @USER_ID		= #{S_USER_ID}
		 SET @UpdateDBTime	= GETDATE()
		 SET @WorkShopCode	= #{WORK_SHOP_CODE}
		 SET @WKORD_NUM		= #{REF_WKORD_NUM}
		 SET @PRODT_NUM		= #{OUTSTOCK_NUM}
		 SET @WH_CELL_CODE = #{WH_CELL_CODE}


		 SELECT @MoneyUnit = A.SUB_CODE
		   FROM BSA100T A WITH(NOLOCK)
		  WHERE A.COMP_CODE	= @COMP_CODE
			AND A.MAIN_CODE	= 'B004'
			AND A.REF_CODE1	= 'Y'
			AND A.SUB_CODE != '$'
			AND A.USE_YN	= 'Y'

		IF (ISNULL(@MoneyUnit, '') = '')
			SET @MoneyUnit = 'KRW'

		INSERT INTO BTR100T(
				  COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ,        ITEM_CODE
				, WH_CODE
				, INOUT_DATE
				, INOUT_Q,         INOUT_P,    INOUT_I,       MONEY_UNIT
				, BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
				, REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
				, INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
				, INOUT_CODE_TYPE, INOUT_CODE
				, ORDER_NUM,       BASIS_NUM
				, WH_CELL_CODE)
		SELECT	  @COMP_CODE AS COMP_CODE,  @DIV_CODE  AS DIV_CODE,          @InOutNum AS INOUT_NUM,       @InOutSeq     AS INOUT_SEQ,        @ItemCode     AS ITEM_CODE
				, @WhCode    AS WH_CODE,    @InOutDate AS INOUT_DATE
				, @AllocQ    AS INOUT_Q,    0          AS INOUT_P,           0         AS INOUT_I,         @MoneyUnit    AS MONEY_UNIT
				, '*'        AS BILL_TYPE,  '*'        AS SALE_TYPE,        '*'        AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
				, @Remark    AS REMARK,     @ProjectNo AS PROJECT_NO,        @CurLotNo AS LOT_NO,          @USER_ID      AS UPDATE_DB_USER,   @UpdateDBTime AS UPDATE_DB_TIME
				, '2'        AS INOUT_TYPE, '3'        AS CREATE_LOC,        '1'       AS ITEM_STATUS
				, '1'        AS INOUT_METH, '10'       AS INOUT_TYPE_DETAIL
				, '3'       AS INOUT_CODE_TYPE, @WorkShopCode AS INOUT_CODE
				, @WKORD_NUM AS ORDER_NUM,  @PRODT_NUM AS BASIS_NUM
				, @WH_CELL_CODE    AS WH_CELL_CODE
	</insert>

	<update id="pmr202ukrvServiceImpl.updateDetail" parameterType="Map">
		/* pmr202ukrvServiceImpl.updateDetail */
		UPDATE BTR100T
		   SET INOUT_Q		  = #{OUTSTOCK_Q} + #{PRE_OUTSTOCK_Q}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND INOUT_NUM	= #{PRODT_INOUT_NUM}
		   AND INOUT_SEQ	= #{PRODT_INOUT_SEQ}
		   AND INOUT_TYPE	= '2'
	</update>

	<delete id="pmr202ukrvServiceImpl.deleteDetail" parameterType="Map">
		/* pmr202ukrvServiceImpl.deleteDetail */
		DELETE FROM BTR100T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND INOUT_NUM	= #{PRODT_INOUT_NUM}
		   AND INOUT_SEQ	= #{PRODT_INOUT_SEQ}
		   AND INOUT_TYPE	= '2'
	</delete>

	<select id="pmr202ukrvServiceImpl.selectB049" parameterType="Map" resultType="rMap">
		/* pmr202ukrvServiceImpl.selectB049 */
		DECLARE @EstimatemMethod	NVARCHAR(1)
		      , @AverageCalcPeriod	NVARCHAR(1)
			  , @COMP_CODE			NVARCHAR(08)               -- 법인코드

		SET @COMP_CODE = #{S_COMP_CODE}

		-- 단가계산방법
		SELECT TOP 1
			   @EstimatemMethod  = SUB_CODE
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND MAIN_CODE = 'B049'                -- 단가구분 코드
		   AND ISNULL(REF_CODE1,'') = 'Y'

		SET @EstimatemMethod  = CASE WHEN ISNULL(@EstimatemMethod, '')  = '' THEN '1' ELSE @EstimatemMethod  END         -- 재고금액 평가 유형(창고/사업장)

		SELECT TOP 1
			   @AverageCalcPeriod = REF_CODE5
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND MAIN_CODE = 'B049'                -- 단가구분 코드
		   AND SUB_CODE != '$'
		   AND SUB_CODE  = @EstimatemMethod

		SET @AverageCalcPeriod  = CASE WHEN ISNULL(@AverageCalcPeriod, '')  = '' THEN '1' ELSE @AverageCalcPeriod  END         -- 재고금액 평가 유형(창고/사업장)


		SELECT @EstimatemMethod		AS ESTIMATEM_METHOD
			 , @AverageCalcPeriod	AS AVERAGECALC_PERIOD
	</select>


	<update id="pmr202ukrvServiceImpl.SP_STOCK_PeriodicAverage" parameterType="Map" statementType="CALLABLE">
		 {call SP_STOCK_PeriodicAverage (
			#{S_COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{PRODT_INOUT_NUM	, mode=IN	, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{PRODT_INOUT_SEQ	, mode=IN	, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{INOUT_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{DIV_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ITEM_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{INOUT_DATE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{WH_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{S_USER_ID			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ErrorDesc			, mode=OUT	, jdbcType=VARCHAR		, javaType=java.lang.String}
		)}
	</update>

	<update id="pmr202ukrvServiceImpl.SP_STOCK_PeriodicAverageMonthly" parameterType="Map" statementType="CALLABLE">
		{call SP_STOCK_PeriodicAverageMonthly (
			#{S_COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{PRODT_INOUT_NUM	, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{PRODT_INOUT_SEQ	, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{INOUT_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{DIV_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ITEM_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{INOUT_DATE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{WH_CODE			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LOT_NO			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{S_USER_ID			, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ErrorDesc			, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String}
		)}
	</update>

	<update id="pmr202ukrvServiceImpl.updatePMP" parameterType="Map">
		/* pmr202ukrvServiceImpl.updatePMP */
		UPDATE PMP200T
		 --20191121 수정: 주석
		   SET PRODT_Q		  = PRODT_Q + #{OUTSTOCK_Q} --+ {PRE_OUTSTOCK_Q}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND WKORD_NUM	= #{REF_WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND PATH_CODE	= #{PATH_CODE}

		IF EXISTS (SELECT TOP 1 1 FROM PMP350T WITH(NOLOCK)
		            WHERE COMP_CODE		= #{S_COMP_CODE}
		              AND DIV_CODE		= #{DIV_CODE}
		              AND OUTSTOCK_NUM	= #{OUTSTOCK_NUM}
		              AND REF_WKORD_NUM	= #{REF_WKORD_NUM}
		              AND ITEM_CODE		= #{ITEM_CODE}
		              AND PATH_CODE		= #{PATH_CODE}
		              AND INOUT_NUM		= #{INOUT_NUM}
		              AND INOUT_SEQ		= #{INOUT_SEQ}
		              AND INOUT_TYPE	= #{INOUT_TYPE})
		UPDATE PMP350T
		   SET PRODT_Q			= #{OUTSTOCK_Q} + #{PRE_OUTSTOCK_Q}
		     , PRODT_INOUT_NUM	= #{PRODT_INOUT_NUM}
		     , PRODT_INOUT_SEQ	= #{PRODT_INOUT_SEQ}
		     , UPDATE_DB_USER	= #{S_USER_ID}
		     , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND OUTSTOCK_NUM	= #{OUTSTOCK_NUM}
		   AND REF_WKORD_NUM= #{REF_WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND PATH_CODE	= #{PATH_CODE}
		   AND INOUT_NUM	= #{INOUT_NUM}
		   AND INOUT_SEQ	= #{INOUT_SEQ}
		   AND INOUT_TYPE	= #{INOUT_TYPE}
	</update>

	<update id="pmr202ukrvServiceImpl.deletePMP" parameterType="Map">
		/* pmr202ukrvServiceImpl.deletePMP */
		UPDATE PMP200T
		   SET PRODT_Q		  = PRODT_Q - #{PRE_OUTSTOCK_Q}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND WKORD_NUM	= #{REF_WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND PATH_CODE	= #{PATH_CODE}

		UPDATE PMP350T
		   SET PRODT_Q			= 0
		     , PRODT_INOUT_NUM	= ''
		     , PRODT_INOUT_SEQ	= 0
		     , UPDATE_DB_USER	= #{S_USER_ID}
		     , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND OUTSTOCK_NUM	= #{OUTSTOCK_NUM}
		   AND REF_WKORD_NUM= #{REF_WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND PATH_CODE	= #{PATH_CODE}
		   AND INOUT_NUM	= #{INOUT_NUM}
		   AND INOUT_SEQ	= #{INOUT_SEQ}
		   AND INOUT_TYPE	= #{INOUT_TYPE}
	</update>

<!-- 20200330 추가: 작업 후 마지막에  USP_PRODT_PMR202UKRV_SITE 호출하는 로직 추가 -->
	<update id="pmr202ukrvServiceImpl.USP_PRODT_PMR202UKRV_SITE" parameterType="Map" statementType="CALLABLE">
		{call USP_PRODT_PMR202UKRV_SITE (
			#{COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{DIV_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{WKORD_NUM		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{PRODT_DATE	, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{S_USER_ID		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String}
		)}
	</update>



<!-- 작업장 입력 시, 창고 SET하기 위한 데이터 조회 -->
	<select id="pmr202ukrvServiceImpl.getWhCode" parameterType="Map" resultType="rMap">
		/* pmr202ukrvServiceImpl.getWhCode */
		SELECT ISNULL(WH_CODE, '') AS WH_CODE
		  FROM BSA230T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND TREE_CODE = #{WORK_SHOP_CODE}
		 ORDER BY TREE_CODE
	</select>






	<select id="pmr202ukrvServiceImpl.printList" parameterType="Map" resultType="rMap">
		/* pmr202ukrvServiceImpl.printList */
		BEGIN
			DECLARE	@COMP_CODE		NVARCHAR(08)	-- 법인코드
				  , @DIV_CODE		NVARCHAR(08)	-- 사업장코드
				  , @WORK_SHOP_CODE	NVARCHAR(08)	-- 작업장
				  , @REF_WKORD_NUM	NVARCHAR(20)	-- 작업지시번호

			SET @COMP_CODE			= #{S_COMP_CODE}
			SET @DIV_CODE			= #{DIV_CODE}
			SET @WORK_SHOP_CODE		= #{WORK_SHOP_CODE}
			SET @REF_WKORD_NUM		= #{REF_WKORD_NUM}

			SELECT
				T.COMP_CODE
				,T.DIV_CODE
				,MAX(CONVERT(VARCHAR, GETDATE(), 102)) AS RETURN_DATE		--반납일자
			--	,MAX(T.WH_CODE) AS WH_CODE						--출고창고
				,MAX(R1.TREE_NAME) AS WH_NAME						--출고창고
				,T.REF_WKORD_NUM								--작업지시번호
				,T.ITEM_CODE									--품목코드
				,MAX(T.ITEM_NAME) AS ITEM_NAME					--품목명
				,MAX(T.SPEC) AS SPEC							--규격
				,MAX(T.STOCK_UNIT) AS STOCK_UNIT				--단위
				,SUM(T.REMAIN_Q) AS RETURN_Q					--반납량
				,COUNT(T.LOT_NO) AS CNT							--ROLL수
				,MAX(T.REMARK) AS REMARK						--비고
			FROM (
					SELECT B.COMP_CODE
						 , B.DIV_CODE
						 , B.OUTSTOCK_NUM
						 , B.REF_WKORD_NUM
						 , B.ITEM_CODE
						 , C.ITEM_NAME
						 , C.SPEC
						 , C.STOCK_UNIT
						 , B.PATH_CODE
						 , B.INOUT_NUM
						 , B.INOUT_SEQ
						 , B.INOUT_TYPE
						 , B.OUTSTOCK_REQ_Q
						 , B.LOT_NO
						 , 0												AS OUTSTOCK_Q
						 , ISNULL(B.PRODT_Q, 0)								AS PRE_OUTSTOCK_Q
						 , E.WH_CODE
						 , ISNULL(B.OUTSTOCK_Q, 0) - ISNULL(B.PRODT_Q, 0)	AS REMAIN_Q
						 , B.REMARK
						 , B.PROJECT_NO
						 , B.PJT_CODE
						 , D.INOUT_DATE
						 , CONVERT(CHAR(8), DATEADD(MM, 6, D.INOUT_DATE), 112) AS END_DATE -- 라벨출력시 사용
						 , B.PRODT_INOUT_NUM
						 , B.PRODT_INOUT_SEQ
						 , 'Y'												AS QUERY_YN
						 , '1'												AS QUERY_FLAG
					  FROM		 PMP100T A WITH(NOLOCK)
					  INNER JOIN PMP350T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													   AND B.DIV_CODE		= A.DIV_CODE
				  									   AND B.REF_WKORD_NUM	= A.WKORD_NUM
					  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= B.COMP_CODE
				  									   AND C.ITEM_CODE		= B.ITEM_CODE
					  LEFT  JOIN BTR100T D WITH(NOLOCK) ON D.COMP_CODE		= B.COMP_CODE
													   AND D.DIV_CODE		= B.DIV_CODE
													   AND D.INOUT_NUM		= B.INOUT_NUM
													   AND D.INOUT_SEQ		= B.INOUT_SEQ
													   AND D.INOUT_TYPE		= '1'
					  LEFT  JOIN BSA230T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
													   AND E.TREE_CODE		= A.WORK_SHOP_CODE
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND ((A.TOP_WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE)
							OR (A.WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE))

				UNION ALL

					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , A.BASIS_NUM						AS OUTSTOCK_NUM
						 , A.ORDER_NUM						AS REF_WKORD_NUM
						 , A.ITEM_CODE
						 , G.ITEM_NAME
						 , G.SPEC
						 , G.STOCK_UNIT
						 , '0'								AS PATH_CODE
						 , A.INOUT_NUM
						 , A.INOUT_SEQ
						 , '2'								AS INOUT_TYPE
						 , F.GOOD_WORK_Q					AS OUTSTOCK_REQ_Q
						 , A.LOT_NO
						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS OUTSTOCK_Q
						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS PRE_OUTSTOCK_Q
						 , B.WH_CODE
						 , C.GOOD_STOCK_Q					AS REMAIN_Q
						 , A.REMARK
						 , A.PROJECT_NO
						 , A.PJT_CODE
						 , A.INOUT_DATE
						 , CONVERT(CHAR(8), DATEADD(MM, 6, A.INOUT_DATE), 112) AS END_DATE -- 라벨출력시 사용
						 , H.INOUT_NUM						AS PRODT_INOUT_NUM
						 , H.INOUT_SEQ						AS PRODT_INOUT_SEQ
						 , 'Y'								AS QUERY_YN
						 , '2'								AS QUERY_FLAG
					  FROM		BTR100T A WITH(NOLOCK)
					 INNER JOIN BPR100T G WITH(NOLOCK) ON G.COMP_CODE		= A.COMP_CODE
													  AND G.ITEM_CODE		= A.ITEM_CODE
					 INNER JOIN BSA230T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													  AND B.TREE_CODE		= @WORK_SHOP_CODE
													  AND B.WH_CODE			= A.WH_CODE
					 INNER JOIN BIV150T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
													  AND C.DIV_CODE		= A.DIV_CODE
													  AND C.ITEM_CODE		= A.ITEM_CODE
													  AND C.WH_CODE			= A.WH_CODE
													  AND C.LOT_NO			= A.LOT_NO
					 INNER JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
													  AND E.DIV_CODE		= A.DIV_CODE
													  AND E.TOP_WKORD_NUM	= @REF_WKORD_NUM
													  AND E.WKORD_NUM		= A.ORDER_NUM
					 INNER JOIN PMR100T F WITH(NOLOCK) ON F.COMP_CODE		= E.COMP_CODE
													  AND F.DIV_CODE		= E.DIV_CODE
													  AND F.WKORD_NUM		= E.WKORD_NUM
					  LEFT JOIN PMP350T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
													  AND D.DIV_CODE		= A.DIV_CODE
													  AND D.INOUT_NUM		= A.INOUT_NUM
													  AND D.INOUT_SEQ		= A.INOUT_SEQ
													  AND D.INOUT_TYPE		= '1'
					  LEFT JOIN BTR100T H WITH(NOLOCK) ON H.COMP_CODE		= A.COMP_CODE
													  AND H.DIV_CODE		= A.DIV_CODE
													  AND H.INOUT_TYPE		= '2'
													  AND H.INOUT_CODE_TYPE	= '3'
													  AND H.INOUT_METH		= '1'
													  AND H.INOUT_TYPE_DETAIL = '10'
													  AND H.ORDER_NUM		= E.WKORD_NUM
													  AND H.BASIS_NUM		= A.INOUT_NUM
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND A.INOUT_TYPE			= '1'
					   AND A.INOUT_CODE_TYPE	= '3'
					   AND A.LOT_NO				= F.LOT_NO

			) T
			LEFT JOIN BSA220T R1 WITH(NOLOCK) ON R1.COMP_CODE = T.COMP_CODE
											 AND R1.TREE_CODE = T.WH_CODE
			WHERE T.LOT_NO  IN
			<foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
			 '${item}'
			</foreach>
			GROUP BY T.COMP_CODE, T.DIV_CODE, T.REF_WKORD_NUM, T.ITEM_CODE
		END
	</select>

	<select id="pmr202ukrvServiceImpl.selectClipPrintList" parameterType="Map" resultType="rMap">
		/* pmr202ukrvServiceImpl.selectClipPrintList */
		BEGIN
			 DECLARE	@COMP_CODE		NVARCHAR(08)	-- 법인코드
					  , @DIV_CODE		NVARCHAR(08)	-- 사업장코드
					  , @WORK_SHOP_CODE	NVARCHAR(08)	-- 작업장
					  , @REF_WKORD_NUM	NVARCHAR(20)	-- 작업지시번호
					  --, @GOOD_YN		NVARCHAR(01)

			 SET @COMP_CODE			= #{S_COMP_CODE}
			 SET @DIV_CODE			= #{DIV_CODE}
			 SET @WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
			 SET @REF_WKORD_NUM		= #{REF_WKORD_NUM}

			 --SET @GOOD_YN			= 'Y' --양품


			IF  ( ( SELECT REWORK_YN
					 FROM PMP100T WITH(NOLOCK)
					WHERE COMP_CODE		= @COMP_CODE
					  AND DIV_CODE		= @DIV_CODE
					  AND WORK_SHOP_CODE= @WORK_SHOP_CODE
					  AND TOP_WKORD_NUM	= @REF_WKORD_NUM ) = 'Y' AND @WORK_SHOP_CODE	= 'WC40' )

				BEGIN
					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , ''									AS OUTSTOCK_NUM
						 , A.WKORD_NUM							AS REF_WKORD_NUM
						 , A.ITEM_CODE
						 , D.ITEM_NAME
						 , D.SPEC
						 , D.STOCK_UNIT
						 , 0									AS PATH_CODE
						 , ISNULL(E.INOUT_NUM, '')				AS INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS INOUT_SEQ
						 , '2'									AS INOUT_TYPE
						 , CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN C.GOOD_STOCK_Q + ISNULL(E.INOUT_Q, 0)
						 		WHEN A.STOCK_EXCHG_TYPE = 'B' THEN C.BAD_STOCK_Q + ISNULL(E.INOUT_Q, 0)
								ELSE 0
						   END									AS OUTSTOCK_REQ_Q		--, GOOD_STOCK_Q, BAD_STOCK_Q,
						 , C.LOT_NO
						 , 0									AS OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q
						 , A1.WH_CODE
						 , CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN CAST(C.GOOD_STOCK_Q AS REAL)
						 		WHEN A.STOCK_EXCHG_TYPE = 'B' THEN CAST(C.BAD_STOCK_Q AS REAL)
								ELSE 0
						   END									AS REMAIN_Q
						 , ISNULL(E.REMARK		, '')			AS REMARK
						 , ISNULL(E.PROJECT_NO	, '')			AS PROJECT_NO
						 , ISNULL(E.PJT_CODE	, '')			AS PJT_CODE
						 , CASE WHEN ISNULL(E.INOUT_DATE, '') = '' THEN ''
						 		ELSE CONVERT(NVARCHAR(10), CONVERT(DATE, E.INOUT_DATE), 25)
						   END									AS INOUT_DATE
						 , CASE WHEN ISNULL(E.INOUT_DATE, '') = '' THEN ''
						 		ELSE CONVERT(NVARCHAR(10), DATEADD(MM, 6, E.INOUT_DATE), 25)
						   END									AS END_DATE -- 라벨출력시 사용
						 , ISNULL(E.INOUT_NUM, '')				AS PRODT_INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS PRODT_INOUT_SEQ
						 , 'Y'									AS QUERY_YN
						 , '3'									AS QUERY_FLAG
					  FROM		PMP100T A WITH(NOLOCK)
					INNER JOIN  BSA230T A1 WITH(NOLOCK) ON A1.COMP_CODE			= A.COMP_CODE
													   AND A1.TREE_CODE			= A.WORK_SHOP_CODE
					INNER JOIN  BIV150T C  WITH(NOLOCK) ON C.COMP_CODE			= A.COMP_CODE
													   AND C.DIV_CODE			= A.DIV_CODE
													   AND C.ITEM_CODE			= A.ITEM_CODE
													   AND C.WH_CODE			= A1.WH_CODE
					INNER JOIN  BPR100T D  WITH(NOLOCK) ON D.COMP_CODE			= A.COMP_CODE
													   AND D.ITEM_CODE			= A.ITEM_CODE
					LEFT JOIN   BTR100T E  WITH(NOLOCK) ON E.COMP_CODE			= A.COMP_CODE
													   AND E.DIV_CODE			= A.DIV_CODE
													   AND E.INOUT_TYPE			= '2'
													   AND E.INOUT_CODE_TYPE	= '3'
													   AND E.INOUT_METH			= '1'
													--   AND E.INOUT_CODE_DETAIL	= '10'
													   AND E.ITEM_CODE			= A.ITEM_CODE
													   AND E.LOT_NO				= C.LOT_NO
													   AND E.ORDER_NUM			= A.WKORD_NUM
													   AND E.BASIS_NUM			= A.WKORD_NUM
					WHERE A.COMP_CODE			= @COMP_CODE
							AND A.DIV_CODE		= @DIV_CODE
							AND A.WKORD_NUM		= @REF_WKORD_NUM
							AND A.WORK_SHOP_CODE= @WORK_SHOP_CODE

							AND ( CASE WHEN A.STOCK_EXCHG_TYPE = 'G' THEN C.GOOD_STOCK_Q
									   WHEN A.STOCK_EXCHG_TYPE = 'B' THEN C.BAD_STOCK_Q END  &gt; 0

								OR ISNULL(E.INOUT_NUM, '') != '')
					   AND C.LOT_NO IN
					<foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
				END
			ELSE IF ( @WORK_SHOP_CODE LIKE 'WC9%' )
				BEGIN
					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , ''									AS OUTSTOCK_NUM
						 , A.WKORD_NUM							AS REF_WKORD_NUM
						 , K.ITEM_CODE
						 , D.ITEM_NAME
						 , D.SPEC
						 , D.STOCK_UNIT
						 , 0									AS PATH_CODE
						 , ISNULL(E.INOUT_NUM, '')				AS INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS INOUT_SEQ
						 , '2'									AS INOUT_TYPE
						 , C.GOOD_STOCK_Q + ISNULL(E.INOUT_Q, 0) 	AS OUTSTOCK_REQ_Q		--, GOOD_STOCK_Q, BAD_STOCK_Q,
						 , C.LOT_NO
						 , 0									AS OUTSTOCK_Q
						 , E.INOUT_Q							AS PRE_OUTSTOCK_Q
						 , A1.WH_CODE
						 , CAST(C.GOOD_STOCK_Q AS REAL)			AS REMAIN_Q
						 , ISNULL(E.REMARK		, '')			AS REMARK
						 , ISNULL(E.PROJECT_NO	, '')			AS PROJECT_NO
						 , ISNULL(E.PJT_CODE	, '')			AS PJT_CODE
						 , CASE WHEN ISNULL(E.INOUT_DATE, '') = '' THEN ''
						 		ELSE CONVERT(NVARCHAR(10), CONVERT(DATE, E.INOUT_DATE), 25)
						   END									AS INOUT_DATE
						 , CASE WHEN ISNULL(E.INOUT_DATE, '') = '' THEN ''
						 		ELSE CONVERT(NVARCHAR(10), DATEADD(MM, 6, E.INOUT_DATE), 25)
						   END									AS END_DATE -- 라벨출력시 사용
						 , ISNULL(E.INOUT_NUM, '')				AS PRODT_INOUT_NUM
						 , ISNULL(E.INOUT_SEQ, 0)				AS PRODT_INOUT_SEQ
						 , 'Y'									AS QUERY_YN
						 , '1'									AS QUERY_FLAG
					  FROM		PMP100T A WITH(NOLOCK)
					INNER JOIN PMP200T K WITH(NOLOCK) ON K.COMP_CODE = A.COMP_CODE
														AND K.DIV_CODE = A.DIV_CODE
														AND K.WKORD_NUM = A.WKORD_NUM
														AND K.WORK_SHOP_CODE = A.WORK_SHOP_CODE


					INNER JOIN  BSA230T A1 WITH(NOLOCK) ON A1.COMP_CODE			= A.COMP_CODE
													   AND A1.TREE_CODE			= A.WORK_SHOP_CODE
					INNER JOIN  BIV150T C  WITH(NOLOCK) ON C.COMP_CODE			= K.COMP_CODE
													   AND C.DIV_CODE			= K.DIV_CODE
													   AND C.ITEM_CODE			= K.ITEM_CODE
													   AND C.WH_CODE			=  K.WH_CODE
					INNER JOIN  BPR100T D  WITH(NOLOCK) ON D.COMP_CODE			= K.COMP_CODE
													   AND D.ITEM_CODE			= K.ITEM_CODE

					LEFT JOIN   BTR100T E  WITH(NOLOCK) ON E.COMP_CODE			= K.COMP_CODE
													   AND E.DIV_CODE			= K.DIV_CODE
													   AND E.INOUT_TYPE			= '2'
													   AND E.INOUT_CODE_TYPE	= '3'
													   AND E.INOUT_METH			= '1'
													--   AND E.INOUT_CODE_DETAIL	= '10'
													   AND E.ITEM_CODE			= K.ITEM_CODE
													   AND E.LOT_NO				= C.LOT_NO
													   AND E.ORDER_NUM			= A.WKORD_NUM
													   AND E.BASIS_NUM			= A.WKORD_NUM
					WHERE A.COMP_CODE			= @COMP_CODE
							AND A.DIV_CODE		= @DIV_CODE
							AND A.WKORD_NUM		= @REF_WKORD_NUM
							AND A.WORK_SHOP_CODE= @WORK_SHOP_CODE

							AND (  C.GOOD_STOCK_Q     > 0

								OR ISNULL(E.INOUT_NUM, '') != '')
					   AND C.LOT_NO IN
					<foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
				END
			ELSE
				BEGIN
					SELECT B.COMP_CODE
						 , B.DIV_CODE
						 , B.OUTSTOCK_NUM
						 , B.REF_WKORD_NUM
						 , B.ITEM_CODE
						 , C.ITEM_NAME
						 , C.SPEC
						 , C.STOCK_UNIT
						 , B.PATH_CODE
						 , B.INOUT_NUM
						 , B.INOUT_SEQ
						 , B.INOUT_TYPE
						 , B.OUTSTOCK_REQ_Q
						 , B.LOT_NO
						 , 0												AS OUTSTOCK_Q
						 , ISNULL(B.PRODT_Q, 0)								AS PRE_OUTSTOCK_Q
		--				 , B.OUTSTOCK_Q
						 , E.WH_CODE
						 , CAST(ISNULL(B.OUTSTOCK_Q, 0) - ISNULL(B.PRODT_Q, 0) AS REAL)	AS REMAIN_Q
						 , B.REMARK
						 , B.PROJECT_NO
						 , B.PJT_CODE
						 , CONVERT(NVARCHAR(10), CONVERT(DATE, D.INOUT_DATE), 25) AS INOUT_DATE
						 , CONVERT(NVARCHAR(10), DATEADD(MM, 6, D.INOUT_DATE), 25) AS END_DATE -- 라벨출력시 사용
						 , B.PRODT_INOUT_NUM
						 , B.PRODT_INOUT_SEQ
						 , 'Y'												AS QUERY_YN
						 , '1'												AS QUERY_FLAG
					  FROM		 PMP100T A WITH(NOLOCK)
					  INNER JOIN PMP350T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													   AND B.DIV_CODE		= A.DIV_CODE
					  								   AND B.REF_WKORD_NUM	= A.WKORD_NUM
					  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= B.COMP_CODE
					  								   AND C.ITEM_CODE		= B.ITEM_CODE
					  LEFT  JOIN BTR100T D WITH(NOLOCK) ON D.COMP_CODE		= B.COMP_CODE
													   AND D.DIV_CODE		= B.DIV_CODE
													   AND D.INOUT_NUM		= B.INOUT_NUM
													   AND D.INOUT_SEQ		= B.INOUT_SEQ
													   AND D.INOUT_TYPE		= '1'
					  LEFT  JOIN BSA230T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
													   AND E.TREE_CODE		= A.WORK_SHOP_CODE
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND ((A.TOP_WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE)
							OR (A.WKORD_NUM = @REF_WKORD_NUM	AND A.WORK_SHOP_CODE = @WORK_SHOP_CODE))
					   AND B.LOT_NO IN
					<foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
					 --ORDER BY B.REF_WKORD_NUM, B.ITEM_CODE, B.LOT_NO

				UNION ALL

					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , A.BASIS_NUM						AS OUTSTOCK_NUM
						 , A.ORDER_NUM						AS REF_WKORD_NUM
						 , A.ITEM_CODE
						 , G.ITEM_NAME
						 , G.SPEC
						 , G.STOCK_UNIT
						 , '0'								AS PATH_CODE
						 , A.INOUT_NUM
						 , A.INOUT_SEQ
						 , '2'								AS INOUT_TYPE
						 , F.GOOD_WORK_Q					AS OUTSTOCK_REQ_Q
						 , A.LOT_NO
--						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS OUTSTOCK_Q
						 , 0	AS OUTSTOCK_Q
						 , F.GOOD_WORK_Q - C.GOOD_STOCK_Q	AS PRE_OUTSTOCK_Q
						 , B.WH_CODE
						 , CAST(C.GOOD_STOCK_Q AS REAL)		AS REMAIN_Q
						 , A.REMARK
						 , A.PROJECT_NO
						 , A.PJT_CODE
						 , CONVERT(NVARCHAR(10), CONVERT(DATE, A.INOUT_DATE), 25) AS INOUT_DATE
						 , CONVERT(NVARCHAR(10), DATEADD(MM, 6, A.INOUT_DATE), 25) AS END_DATE -- 라벨출력시 사용
						 , H.INOUT_NUM						AS PRODT_INOUT_NUM
						 , H.INOUT_SEQ						AS PRODT_INOUT_SEQ
						 , 'Y'								AS QUERY_YN
						 , '2'								AS QUERY_FLAG
					  FROM		BTR100T A WITH(NOLOCK)
					 INNER JOIN BPR100T G WITH(NOLOCK) ON G.COMP_CODE		= A.COMP_CODE
													  AND G.ITEM_CODE		= A.ITEM_CODE
					 INNER JOIN BSA230T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
													  AND B.TREE_CODE		= @WORK_SHOP_CODE
													  AND B.WH_CODE			= A.WH_CODE
					 INNER JOIN BIV150T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
													  AND C.DIV_CODE		= A.DIV_CODE
													  AND C.ITEM_CODE		= A.ITEM_CODE
													  AND C.WH_CODE			= A.WH_CODE
													  AND C.LOT_NO			= A.LOT_NO
					 INNER JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE		= A.COMP_CODE
													  AND E.DIV_CODE		= A.DIV_CODE
		--											  AND E.WKORD_NUM		= @REF_WKORD_NUM
													  AND E.TOP_WKORD_NUM		= @REF_WKORD_NUM
		--											  AND E.WORK_SHOP_CODE	= 'WC30'
													  AND E.WKORD_NUM		= A.ORDER_NUM
					 INNER JOIN PMR100T F WITH(NOLOCK) ON F.COMP_CODE		= E.COMP_CODE
													  AND F.DIV_CODE		= E.DIV_CODE
													  AND F.WKORD_NUM		= E.WKORD_NUM
					  LEFT JOIN PMP350T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
													  AND D.DIV_CODE		= A.DIV_CODE
													  AND D.INOUT_NUM		= A.INOUT_NUM
													  AND D.INOUT_SEQ		= A.INOUT_SEQ
													  AND D.INOUT_TYPE		= '1'
					  LEFT JOIN BTR100T H WITH(NOLOCK) ON H.COMP_CODE		= A.COMP_CODE
													  AND H.DIV_CODE		= A.DIV_CODE
													  AND H.INOUT_TYPE		= '2'
													  AND H.INOUT_CODE_TYPE	= '3'
													  AND H.INOUT_METH		= '1'
													  AND H.INOUT_TYPE_DETAIL = '10'
		--											  AND H.ORDER_NUM		= @REF_WKORD_NUM
													  AND H.ORDER_NUM		= E.WKORD_NUM
													  AND H.BASIS_NUM		= A.INOUT_NUM
					 WHERE A.COMP_CODE			= @COMP_CODE
					   AND A.DIV_CODE			= @DIV_CODE
					   AND A.INOUT_TYPE			= '1'
					   AND A.INOUT_CODE_TYPE	= '3'
					   AND A.LOT_NO				= F.LOT_NO
					   AND A.LOT_NO IN
					<foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
				END
		END
	</select>
	<!-- 수불 태우기전 출고일 가져오기 -->
	<select id="pmr202ukrvServiceImpl.selectInoutDate" parameterType="Map" resultType="rMap">
		/*pmr202ukrvServiceImpl.selectInoutDate */
		SELECT INOUT_DATE
		  FROM BTR100T WITH(NOLOCK)
		 WHERE INOUT_NUM = #{PRODT_INOUT_NUM}
		   AND INOUT_SEQ = #{PRODT_INOUT_SEQ}
	</select>




<!-- 진척이력 조회 / 저장: 20200330 추가 -->
	<select id="pmr202ukrvServiceImpl.selectWorkProgressList" parameterType="Map" resultType="rMap">
		/* pmr202ukrvServiceImpl.selectWorkProgressList */
		SELECT COMP_CODE
		     , DIV_CODE
		     , WORK_SHOP_CODE
		     , WKORD_NUM
		     , SUBSTRING(WORK_MONTH, 1, 4) + '.' + SUBSTRING(WORK_MONTH, 5, 2)       AS WORK_MONTH
		     , WORK_PROGRESS
			 , SUM_PROGRESS
		     , WKORD_STATUS
		     , MAN_HOUR
		  -- COMP_CODE, DIV_CODE, WORK_SHOP_CODE, WKORD_NUM, WORK_MONTH
		  FROM PMP150T WITH(NOLOCK)
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		   AND WKORD_NUM      = #{WKORD_NUM}
	</select>
	<update id="pmr202ukrvServiceImpl.updateWorkProgress" parameterType="Map">
		/* pmr202ukrvServiceImpl.updateWorkProgress */
		DECLARE @PREV_PROGRESS NUMERIC(30,6), @WORK_Q NUMERIC(30,6), @WORK_MONTH NVARCHAR(6), @ITEM_CODE NVARCHAR(20)
				, @ERR_DESC NVARCHAR(2000)
				, @SUM_PROGRESS NUMERIC(30,6)
		
		SET @WORK_MONTH = REPLACE(#{WORK_MONTH},  '.', '')
		SET @SUM_PROGRESS  = #{SUM_PROGRESS}
		
		SELECT @PREV_PROGRESS = SUM(WORK_PROGRESS)
		  FROM PMP150T A WITH (NOLOCK)
			   INNER JOIN PMP100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM AND B.LINE_END_YN='Y'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.WKORD_NUM = #{WKORD_NUM}
		   AND A.WORK_MONTH &lt; @WORK_MONTH
		 GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE
		 
		SET @PREV_PROGRESS = ISNULL(@PREV_PROGRESS,0)

		SELECT @WORK_Q = @SUM_PROGRESS - ISNULL(@PREV_PROGRESS,0), @ITEM_CODE=B.ITEM_CODE
		  FROM PMP150T A WITH (NOLOCK)
			   INNER JOIN PMP100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM AND B.LINE_END_YN='Y'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.WKORD_NUM = #{WKORD_NUM}
		   AND A.WORK_MONTH = @WORK_MONTH
		   
													   
		UPDATE A
		   SET WORK_PROGRESS   = @WORK_Q
		     , SUM_PROGRESS    = #{SUM_PROGRESS}
		     , MAN_HOUR        = #{MAN_HOUR}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		  FROM PMP150T A
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		   AND A.WKORD_NUM      = #{WKORD_NUM}
		   AND A.WORK_MONTH     = @WORK_MONTH

		UPDATE PMR100T
		   SET MAN_HOUR        = #{MAN_HOUR}
		     , WORK_Q		   = @WORK_Q/100
			 , GOOD_WORK_Q	   = @WORK_Q/100
			 , PASS_Q		   = @WORK_Q/100
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND WKORD_NUM      = #{WKORD_NUM}
		   AND SUBSTRING(PRODT_DATE, 1, 6) = @WORK_MONTH

		UPDATE PMR110T
		   SET MAN_HOUR        = #{MAN_HOUR}
			 , PRODT_Q		   = @WORK_Q/100
			 , GOOD_PRODT_Q	   = @WORK_Q/100
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		   AND WKORD_NUM      = #{WKORD_NUM}
		   AND SUBSTRING(PRODT_DATE, 1, 6) = @WORK_MONTH


		UPDATE PMR200T SET PRODT_Q	    = @WORK_Q/100
						 , GOOD_PRODT_Q = @WORK_Q/100
						 , IN_STOCK_Q	= @WORK_Q/100
						 , UPDATE_DB_USER = #{S_USER_ID}
						 , UPDATE_DB_TIME=GETDATE()
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND WKORD_NUM      = #{WKORD_NUM}
		   AND SUBSTRING(PRODT_DATE, 1, 6) = @WORK_MONTH

		   
		   
		--IF #1{SUM_PROGRESS} = 100		/* 주석처리위해 #앞에 1 넣어줌. 진척율 강제 조정할 수 있도록 허용 */
		BEGIN
		   UPDATE BTR100T SET INOUT_Q 		  = @WORK_Q/100
							, ORDER_UNIT_Q 	  = @WORK_Q/100
						    , UPDATE_DB_USER  = #{S_USER_ID}
						    , UPDATE_DB_TIME  = GETDATE() 
			WHERE COMP_CODE	= #{S_COMP_CODE} 
			  AND DIV_CODE	= #{DIV_CODE} 
			  AND ORDER_NUM	= #{WKORD_NUM} 
			  AND INOUT_SEQ	= 1 
			  AND CREATE_LOC='1' 
			  AND INOUT_TYPE='1'
			  AND LEFT(INOUT_DATE,6) = @WORK_MONTH

			EXEC [uniLITE].[SP_STOCK_PeriodicAverageClosing4Div_ITEM] #{S_COMP_CODE} , #{DIV_CODE}, @WORK_MONTH, @WORK_MONTH, @ITEM_CODE, #{S_USER_ID}, @ERR_DESC OUTPUT    -- 에러메세지
			
		END
	</update>
</mapper>