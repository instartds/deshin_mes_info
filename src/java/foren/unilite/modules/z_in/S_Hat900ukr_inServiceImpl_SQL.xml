<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hat900ukr_inServiceImpl">
	
	<select id="s_hat900ukr_inServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_hat900ukr_inServiceImpl.selectList */
		
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DUTY_YM		NVARCHAR(06)
			  , @PERSON_NUMB    NVARCHAR(20)
			  , @ERROR_DESC		NVARCHAR(2000)
	
		SET @COMP_CODE	 = #{S_COMP_CODE}
		SET @DUTY_YM	 = #{DUTY_YM}
		SET @PERSON_NUMB = #{PERSON_NUMB}
		SET @ERROR_DESC	 = ''
	
		EXEC uniLITE.USP_HAT900UKR_QUERY_IN   @COMP_CODE
											, @DUTY_YM
											, @PERSON_NUMB
											, @ERROR_DESC	OUTPUT
	
		SELECT @ERROR_DESC AS ERROR_DESC
	</select>
	
	<select id="s_hat900ukr_inServiceImpl.deleteAll" parameterType="Map" resultType="rMap">
		/* s_hat900ukr_inServiceImpl.deleteAll */
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DUTY_YM		NVARCHAR(06)
			  , @DUTY_FR		NVARCHAR(08)
			  , @DUTY_TO		NVARCHAR(08)
	
		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DUTY_YM	= #{DUTY_YM}
		
		SET @DUTY_TO	= @DUTY_YM + '20'
		SET @DUTY_FR	= CONVERT(NVARCHAR(08), DATEADD(DAY, 1, DATEADD(MONTH, -1, @DUTY_TO)), 112)
		
		DELETE
		  FROM H_DILIG_IN
		 WHERE COMP_CODE = @COMP_CODE
		   AND DUTY_YYYYMMDD BETWEEN @DUTY_FR AND @DUTY_TO
		
		DELETE
		  FROM HAT600T
		 WHERE COMP_CODE = @COMP_CODE
		   AND DUTY_YYYYMMDD BETWEEN @DUTY_FR AND @DUTY_TO
	</select>
	
	<insert id="s_hat900ukr_inServiceImpl.insertExcel_BAK" parameterType="Map" useGeneratedKeys="false">
		/*s_hat900ukr_inServiceImpl.insertExcel*/
		
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @PERSON_NUMB	NVARCHAR(10)
			  , @DUTY_YYYYMMDD	NVARCHAR(08)
			  , @DUTY_CODE		NVARCHAR(02)
			  , @DUTY_FR		NVARCHAR(30)
			  , @DUTY_TO		NVARCHAR(30)
			  , @DUTY_FR_CONF	NVARCHAR(20)
			  , @DUTY_TO_CONF	NVARCHAR(20)
			  , @DUTY_LATE		NVARCHAR(30)
			  , @DUTY_OT		NVARCHAR(30)
			  , @DUTY_TT		NVARCHAR(30)
			  , @DUTY_NORMAL	NVARCHAR(30)
			  , @OT_TM			NVARCHAR(10)
			  , @MN_TM			NVARCHAR(10)
			  , @USER_ID		NVARCHAR(100)
			  , @ERROR_DESC		NVARCHAR(2000)
			  
		SET @COMP_CODE		= #{COMP_CODE}
		SET @PERSON_NUMB	= #{PERSON_NUMB}
		SET @DUTY_YYYYMMDD	= #{DUTY_YYYYMMDD}
		SET @DUTY_CODE		= #{DUTY_CODE}
		SET @DUTY_FR		= #{DUTY_FR}
		SET @DUTY_TO		= #{DUTY_TO}
		SET @DUTY_FR_CONF	= #{DUTY_FR_CONF}
		SET @DUTY_TO_CONF	= #{DUTY_TO_CONF}
		SET @DUTY_LATE		= #{DUTY_LATE}
		SET @DUTY_OT		= #{DUTY_OT}
		SET @DUTY_TT		= #{DUTY_TT}
		SET @DUTY_NORMAL	= #{DUTY_NORMAL}
		SET @OT_TM			= #{OT_TM}
		SET @MN_TM			= #{MN_TM}
		SET @USER_ID		= #{USER_ID}
		SET @ERROR_DESC		= ''
	
		EXEC uniLITE.USP_HAT900UKR_CREATE_IN  @COMP_CODE
											, @PERSON_NUMB
											, @DUTY_YYYYMMDD
											, @DUTY_CODE
											, @DUTY_FR
											, @DUTY_TO
											, @DUTY_FR_CONF
											, @DUTY_TO_CONF
											, @DUTY_LATE
											, @DUTY_OT
											, @DUTY_TT
											, @DUTY_NORMAL
											, @OT_TM
											, @MN_TM
											, @USER_ID
											, @ERROR_DESC	OUTPUT
	</insert>

	<insert id="s_hat900ukr_inServiceImpl.insertExcel" parameterType="Map" useGeneratedKeys="false">
		/*s_hat900ukr_inServiceImpl.insertExcel*/
		
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @PERSON_NUMB	NVARCHAR(10)
			  , @DUTY_YYYYMMDD	NVARCHAR(08)
			  , @DUTY_CODE		NVARCHAR(02)
			  , @DUTY_FR		NVARCHAR(30)
			  , @DUTY_TO		NVARCHAR(30)
			  , @DUTY_FR_CONF	NVARCHAR(20)
			  , @DUTY_TO_CONF	NVARCHAR(20)
			  , @DUTY_LATE		NVARCHAR(30)
			  , @DUTY_OT		NVARCHAR(30)
			  , @DUTY_TT		NVARCHAR(30)
			  , @DUTY_NORMAL	NVARCHAR(30)
			  , @OT_TM			NVARCHAR(10)
			  , @MN_TM			NVARCHAR(10)
		
		SET @COMP_CODE		= #{COMP_CODE}
		SET @PERSON_NUMB	= #{PERSON_NUMB}
		SET @DUTY_YYYYMMDD	= #{DUTY_YYYYMMDD}
		SET @DUTY_CODE		= #{DUTY_CODE}
		SET @DUTY_FR		= CASE	WHEN ISNUMERIC(#{DUTY_FR}) = '0' THEN #{DUTY_FR}
									ELSE CONVERT(VARCHAR(16), DATEADD(D, -2, CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_FR}) + 0.00005)), 120)
							  END
		SET @DUTY_TO		= CASE	WHEN ISNUMERIC(#{DUTY_TO}) = '0' THEN #{DUTY_TO}
									ELSE CONVERT(VARCHAR(16), DATEADD(D, -2, CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_TO}) + 0.00005)), 120)
							  END
		SET @DUTY_FR_CONF	= #{DUTY_FR_CONF}
		SET @DUTY_TO_CONF	= #{DUTY_TO_CONF}
		SET @DUTY_LATE		= CASE	WHEN ISNUMERIC(#{DUTY_LATE}) = '0' THEN #{DUTY_LATE}
									ELSE CONVERT(VARCHAR(05), CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_LATE}) + 0.00005), 108)
							  END
		SET @DUTY_OT		= CASE	WHEN ISNUMERIC(#{DUTY_OT}) = '0' THEN #{DUTY_OT}
									ELSE CONVERT(VARCHAR(05), CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_OT}) + 0.00005), 108)
							  END
		SET @DUTY_TT		= CASE	WHEN ISNUMERIC(#{DUTY_TT}) = '0' THEN #{DUTY_TT}
									ELSE CONVERT(VARCHAR(05), CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_TT}) + 0.00005), 108)
							  END
		SET @DUTY_NORMAL	= CASE	WHEN ISNUMERIC(#{DUTY_NORMAL}) = '0' THEN #{DUTY_NORMAL}
									ELSE CONVERT(VARCHAR(05), CONVERT(DATETIME, CONVERT(NUMERIC(13, 7), #{DUTY_NORMAL}) + 0.00005), 108)
							  END
		SET @OT_TM			= #{OT_TM}
		SET @MN_TM			= #{MN_TM}

		INSERT INTO H_DILIG_IN
			 ( COMP_CODE		, PERSON_NUMB		, DUTY_YYYYMMDD		, DUTY_CODE			, DUTY_FR
			 , DUTY_TO			, DUTY_FR_CONF		, DUTY_TO_CONF		, DUTY_LATE			, DUTY_OT
			 , DUTY_TT			, DUTY_NORMAL		, OT_TM				, MN_TM
			 , INSERT_DB_USER	, INSERTE_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME	)
		VALUES
			 ( @COMP_CODE		, @PERSON_NUMB		, @DUTY_YYYYMMDD	, @DUTY_CODE		, @DUTY_FR
			 , @DUTY_TO			, @DUTY_FR_CONF		, @DUTY_TO_CONF		, @DUTY_LATE		, @DUTY_OT
			 , @DUTY_TT			, @DUTY_NORMAL		, @OT_TM			, @MN_TM
			 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()			)
	</insert>

	<update id="s_hat900ukr_inServiceImpl.excelValidate" >
		/*s_hat900ukr_inServiceImpl.excelValidate*/
	</update>
	
</mapper>