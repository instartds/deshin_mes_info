<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_btr111ukrv_inServiceImpl">
	<select id="s_btr111ukrv_inServiceImpl.deptWhcode" parameterType="Map" resultType="rMap">
		SELECT WH_CODE
		  FROM BSA210T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND TYPE_LEVEL = #{DIV_CODE}
		   AND TREE_CODE = #{DEPT_CODE}
	</select>

	<select id="s_btr111ukrv_inServiceImpl.getItemInfo" parameterType="Map" resultType="rMap">
		SELECT LOT_YN
		  FROM BPR200TV WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</select>

	<select id="s_btr111ukrv_inServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		/*s_btr111ukrv_in.Cs_btr111ukrv_in[fnBtr111QStd] Query01*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		     SELECT
		            A.INOUT_NUM
		          , A.INOUT_SEQ
		          , A.INOUT_TYPE
		          , A.INOUT_METH
		          , A.INOUT_TYPE_DETAIL
		          , A.INOUT_CODE_TYPE
		          , ISNULL(A.IN_ITEM_STATUS, '') AS IN_ITEM_STATUS
		          , A.BASIS_NUM
		          , A.BASIS_SEQ
		          , A.ORDER_NUM
		          , A.ORDER_SEQ
		          , A.DIV_CODE
		          , A.WH_CODE
		          , A.WH_CELL_CODE
		          , A.INOUT_DATE
		          , D1.REQSTOCK_Q
		          , A.INOUT_Q                    AS ORIGIN_Q
		          , A.INOUT_FOR_P
		          , A.INOUT_FOR_O
		          , A.EXCHG_RATE_O
		          , A.MONEY_UNIT
		          , A.TO_DIV_CODE
		          , A.INOUT_CODE
		          , C2.TREE_NAME                 AS INOUT_NAME
		          , A.INOUT_CODE_DETAIL
		          , C3.WH_CELL_NAME              AS INOUT_NAME_DETAIL
		          , A.DEPT_CODE                  AS DEPT_CODE
		          , A.ITEM_CODE
		          , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                 ELSE C1.ITEM_NAME
		            END                          AS ITEM_NAME
		          , C1.SPEC
		          , C1.STOCK_UNIT
		          , A.ITEM_STATUS
		          , A.INOUT_Q
		          ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
		          , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN ISNULL(C.GOOD_STOCK_Q, 0)
		                 ELSE ISNULL(B.GOOD_STOCK_Q, 0)
		             END                         AS GOOD_STOCK_Q
		          , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN ISNULL(C.BAD_STOCK_Q,  0)
		                 ELSE ISNULL(B.BAD_STOCK_Q,  0)
		            END                          AS BAD_STOCK_Q
		          , A.INOUT_PRSN
		          , A.LOT_NO
		          , A.REMARK
		          , A.PROJECT_NO
		          , A.UPDATE_DB_USER
		          , A.UPDATE_DB_TIME
		          , A.COMP_CODE
		          , C4.ITEM_ACCOUNT
		          , A.MAKE_EXP_DATE
		          , A.MAKE_DATE
		       FROM            BTR100T A  WITH (NOLOCK)
		            LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                               AND B.DIV_CODE      = A.DIV_CODE
		                                               AND B.WH_CODE       = A.WH_CODE
		                                               AND B.ITEM_CODE     = A.ITEM_CODE
		            LEFT  JOIN BIV150T C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                               AND C.DIV_CODE      = A.DIV_CODE
		                                               AND C.WH_CODE       = A.WH_CODE
		                                               AND C.WH_CELL_CODE  = A.WH_CELL_CODE
		                                               AND C.ITEM_CODE     = A.ITEM_CODE
		                                               AND C.SUM_TYPE      = 'C'
		    /*'20121017 JOIN 오류  LOT_NO JOIN  추가*/
		                                               AND C.LOT_NO        = A.LOT_NO
		            INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                               AND C1.ITEM_CODE    = A.ITEM_CODE
		            LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                               AND C2.TYPE_LEVEL   = A.TO_DIV_CODE
		                                               AND C2.TREE_CODE    = A.INOUT_CODE
		            LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                               AND C3.DIV_CODE     = A.TO_DIV_CODE
		                                               AND C3.WH_CODE      = A.INOUT_CODE
		                                               AND C3.WH_CELL_CODE = A.INOUT_CODE_DETAIL
		            LEFT  JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
		                                               AND C4.DIV_CODE     = A.DIV_CODE
		                                               AND C4.ITEM_CODE    = A.ITEM_CODE
		            LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
		                                               AND M1.MAIN_CODE    = N'B084'
		                                               AND M1.SUB_CODE     = N'D'
		            LEFT  JOIN BIV500T D1 WITH (NOLOCK) ON D1.COMP_CODE    = A.COMP_CODE
		                                               AND D1.OUT_DIV_CODE = A.DIV_CODE
		                                               AND D1.REQSTOCK_NUM = A.ORDER_NUM
		                                               AND D1.REQSTOCK_SEQ = A.ORDER_SEQ
		     WHERE  A.COMP_CODE         = @CompCode
		     AND    A.INOUT_TYPE        = '2'
		     AND    A.INOUT_METH        = '3'
		     AND    A.CREATE_LOC        = '4'
		     AND    A.INOUT_TYPE_DETAIL = '99'
		     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		     AND    A.DIV_CODE          = #{DIV_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
		     AND    A.INOUT_CODE        = #{INOUT_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_DATE)">
		     AND    A.INOUT_DATE        = #{INOUT_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		     AND    M2.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = M2.COMP_CODE AND TYPE_LEVEL= M2.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		    AND    M2.TREE_NAME      = #{DEPT_NAME}
		    </if>
		     <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		     AND    A.INOUT_NUM         = #{INOUT_NUM}
		     </if>
		     ORDER BY A.INOUT_NUM, A.INOUT_SEQ, A.ITEM_CODE, A.INOUT_DATE
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_btr111ukrv_inServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/*s_btr111ukrv_in.Cs_btr111ukrv_in[fnBtr111QPop] Query01*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A.ITEM_CODE
		         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                ELSE C1.ITEM_NAME
		           END                                              AS ITEM_NAME
		         , C1.SPEC
		         , C1.STOCK_UNIT
		         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
		                 THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                                           AS INOUT_DATE
		         , A.INOUT_Q
		         , A.DIV_CODE
		         , A.DEPT_CODE                                      AS DEPT_CODE
		         , M2.TREE_NAME                                     AS DEPT_NAME
		         , A.WH_CODE
		         , A.WH_CELL_CODE
		         , A.TO_DIV_CODE
		         , C2.TREE_NAME                                     AS INOUT_CODE
		         , C3.WH_CELL_NAME                                  AS INOUT_CODE_DETAIL
		         , A.LOT_NO
		         , A.INOUT_PRSN
		         , A.INOUT_NUM
		    FROM   BTR100T A  WITH (NOLOCK)
		           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                              AND C1.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                              AND C2.TYPE_LEVEL   = A.TO_DIV_CODE
		                                              AND C2.TREE_CODE    = A.INOUT_CODE
		           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                              AND C3.DIV_CODE     = A.TO_DIV_CODE
		                                              AND C3.WH_CODE      = A.INOUT_CODE
		                                              AND C3.WH_CELL_CODE = A.INOUT_CODE_DETAIL
		           LEFT  JOIN BSA210T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
		                                               AND M2.TYPE_LEVEL   = A.DIV_CODE
		                                               AND M2.TREE_CODE    = A.DEPT_CODE
		    WHERE  A.COMP_CODE         = @CompCode
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND    A.DIV_CODE          = #{DIV_CODE}
		    </if>
		    AND    A.INOUT_TYPE        = '2'
		    AND    A.CREATE_LOC        = '4'
		    AND    A.INOUT_METH        = '3'
		    AND    A.INOUT_TYPE_DETAIL = '99'
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		    AND    A.WH_CODE           = #{WH_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		    AND    A.WH_CELL_CODE      = #{WH_CELL_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		    AND    M2.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = M2.COMP_CODE AND TYPE_LEVEL= M2.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		    AND    M2.TREE_NAME      = #{DEPT_NAME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		    AND    A.INOUT_DATE       &gt;= #{FR_INOUT_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		    AND    A.INOUT_DATE       &lt;= #{TO_INOUT_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		    AND    A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                     ELSE C1.ITEM_NAME
		             END)           LIKE #{ITEM_NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		    AND    A.INOUT_PRSN        = #{INOUT_PRSN}
		    </if>
		    ORDER BY A.ITEM_CODE, A.INOUT_TYPE_DETAIL, A.INOUT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_btr111ukrv_inServiceImpl.QtySet" parameterType="Map" resultType="rMap">
		/* s_btr111ukrv_in.Cs_btr111ukrv_in[fnInvInfo] Query01 (ITEM_CODE 선택시 수량 SET) */
		BEGIN
		    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
		                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장 */
		                  , @BASIS_YYYYMM       NVARCHAR(06)                /* (필수) 기준일 */
		                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고 */
		                  , @WH_CELL_CODE       NVARCHAR(20)                /* (필수) 창고CELL */
		                  , @ITEM_CODE          NVARCHAR(20)                /* (필수) 품목코드 */

		/*  1. 변수 값 할당 */
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @BASIS_YYYYMM       = SUBSTRING(#{INOUT_DATE}, 1,6)
		    SET @WH_CODE            = #{WH_CODE}
		    SET @WH_CELL_CODE       = #{WH_CELL_CODE}
		    SET @ITEM_CODE          = #{ITEM_CODE}

		    SELECT  ISNULL(MAX(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.GOOD_STOCK_Q
		                           ELSE B.GOOD_STOCK_Q
		                      END ), 0)        AS GOOD_STOCK_Q
		         , ISNULL(MAX(CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.BAD_STOCK_Q
		                           ELSE B.BAD_STOCK_Q
		                      END ), 0)        AS BAD_STOCK_Q
		         , ISNULL(MAX(C.AVERAGE_P), 0) AS AVERAGE_P
		    FROM              BPR200T A  WITH (NOLOCK)
		           LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                              AND B.DIV_CODE     = A.DIV_CODE
		                                              AND B.WH_CODE      = @WH_CODE
		                                              AND B.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BIV200T C  WITH (NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                              AND C.DIV_CODE     = B.DIV_CODE
		                                              AND C.BASIS_YYYYMM = @BASIS_YYYYMM
		                                              AND C.WH_CODE      = B.WH_CODE
		                                              AND C.ITEM_CODE    = B.ITEM_CODE
		           LEFT  JOIN BIV150T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                              AND D.DIV_CODE     = A.DIV_CODE
		                                              AND D.WH_CODE      = @WH_CODE
		                                              AND D.WH_CELL_CODE = @WH_CELL_CODE
		                                              AND D.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                              AND M1.MAIN_CODE   = N'B084'
		                                              AND M1.SUB_CODE    = N'D'
		    WHERE  A.COMP_CODE = @COMP_CODE
		    AND    A.DIV_CODE  = @DIV_CODE
		    AND    A.ITEM_CODE = @ITEM_CODE
		    GROUP BY CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.COMP_CODE    ELSE B.COMP_CODE END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.DIV_CODE     ELSE B.DIV_CODE  END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CODE      ELSE B.WH_CODE   END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.WH_CELL_CODE END
		           , CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'Y' THEN D.ITEM_CODE    ELSE B.ITEM_CODE END
		END
	</select>

	<select id="s_btr111ukrv_inServiceImpl.QtySetYsu" parameterType="Map" resultType="rMap">
		/* ITEM_CODE 선택시 수량 SET */
		SELECT X.COMP_CODE, X.ITEM_CODE, SUM(ISNULL(X.STOCK_Q,0)) AS STOCK_Q
		  FROM (
		         SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
		           FROM BIV100T WITH(NOLOCK)
		          WHERE COMP_CODE =  #{S_COMP_CODE}
		            AND DIV_CODE  =  #{DIV_CODE}
		            AND WH_CODE   =  #{WH_CODE}
		            AND ITEM_CODE = #{ITEM_CODE}

		          UNION ALL

		         SELECT COMP_CODE, ITEM_CODE, ISNULL(STOCK_Q,0) AS STOCK_Q
		           FROM UNILITE.VGetDailyStock WITH(NOLOCK)
		          WHERE  COMP_CODE =  #{S_COMP_CODE}
		            AND  DIV_CODE  =  #{DIV_CODE}
		            AND  WH_CODE   =  #{WH_CODE}
		            AND  ITEM_CODE = #{ITEM_CODE}
		  ) X GROUP BY COMP_CODE, ITEM_CODE
	</select>

	<select id="s_btr111ukrv_inServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">
		/*s_btr111ukrv_in.Cs_btr111ukrv_in[fnBtr111QRef] Query01 (참조) */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT
		           CAST(0 AS BIT)                                      AS CHOICE
		         , A.DIV_CODE
		         , A.WH_CODE
		         , C2.TREE_NAME                                        AS WH_NAME
		         , A.WH_CELL_CODE
		         , C3.WH_CELL_NAME
		         , A.REQSTOCK_NUM
		         , A.REQSTOCK_SEQ
		         , A.ITEM_CODE
		         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
		                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                ELSE C1.ITEM_NAME
		           END                                                 AS ITEM_NAME
		         , C1.SPEC
		         , C1.STOCK_UNIT
		         , A.REQ_PRSN
		         , ISNULL(A.REQSTOCK_Q, 0)                             AS REQSTOCK_Q
		         , ISNULL(A.OUTSTOCK_Q, 0)                             AS OUTSTOCK_Q
		         ,(ISNULL(A.REQSTOCK_Q, 0) - ISNULL(A.OUTSTOCK_Q, 0))  AS NOTOUTSTOCK_Q
		         , unilite.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_DATE) AS OUTSTOCK_DATE
		         , ISNULL(B.GOOD_STOCK_Q, 0)                           AS GOOD_STOCK_Q
		         , ISNULL(B.BAD_STOCK_Q , 0)                           AS BAD_STOCK_Q
		         , A.OUT_DIV_CODE
		         , A.OUT_WH_CODE
		         , A.OUT_WH_CELL_CODE
		         , A.LOT_NO
		         , A.PROJECT_NO
		         , A.REMARK
		         , C4.ITEM_ACCOUNT
		         , C4.LOT_YN
		    FROM              BIV500T A  WITH (NOLOCK)
		           LEFT  JOIN BIV100T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                              AND B.DIV_CODE      = A.OUT_DIV_CODE
		                                              AND B.WH_CODE       = A.OUT_WH_CODE
		                                              AND B.ITEM_CODE     = A.ITEM_CODE
		           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                              AND C1.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                              AND C2.TYPE_LEVEL   = A.DIV_CODE
		                                              AND C2.TREE_CODE    = A.WH_CODE
		           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                              AND C3.DIV_CODE     = A.DIV_CODE
		                                              AND C3.WH_CODE      = A.WH_CODE
		                                              AND C3.WH_CELL_CODE = A.WH_CELL_CODE
		           LEFT  JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
		                                              AND C4.DIV_CODE     = A.DIV_CODE
		                                              AND C4.ITEM_CODE    = A.ITEM_CODE
		    WHERE  A.COMP_CODE         = @CompCode
		    AND    A.CLOSE_YN         != 'Y'
		    <if test="@foren.Ognl@isNotEmpty(OUT_DIV_CODE)">
		    AND    A.OUT_DIV_CODE      = #{OUT_DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CODE)">
		    AND    A.OUT_WH_CODE       = #{OUT_WH_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_WH_CELL_CODE)">
		    AND    A.OUT_WH_CELL_CODE  = #{OUT_WH_CELL_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND    A.DIV_CODE          = #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		    AND    M3.TREE_LEVEL  LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = M2.COMP_CODE AND TYPE_LEVEL= M2.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		    AND    M2.TREE_NAME      = #{DEPT_NAME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		    AND    A.WH_CODE           = #{WH_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		    AND    A.WH_CELL_CODE      = #{WH_CELL_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		    AND    A.REQ_PRSN          = #{INOUT_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
		    AND    A.OUTSTOCK_DATE    &gt;= #{FR_INOUT_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
		    AND    A.OUTSTOCK_DATE    &lt;= #{TO_INOUT_DATE}
		    </if>
		    <if test="GW_FLAG == &quot;Y&quot;">
		    AND    A.GW_FLAG           = '3'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REQSTOCK_NUM)">
		    AND    A.REQSTOCK_NUM LIKE '%' +  #{REQSTOCK_NUM} + '%'
		    </if>
		    ORDER BY A.DIV_CODE, A.WH_CODE, A.REQSTOCK_NUM, A.REQSTOCK_SEQ, A.ITEM_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>


	<insert id="s_btr111ukrv_inServiceImpl.insertLogMaster" parameterType="Map">
		/*s_btr111ukrv_inServiceImpl.selectSaveList*/
		INSERT INTO L_BTR100T
		     (   KEY_VALUE
		        ,OPR_FLAG
		        ,INOUT_NUM
		        ,INOUT_SEQ
		        ,INOUT_TYPE
		        ,INOUT_METH
		        ,INOUT_TYPE_DETAIL
		        ,INOUT_CODE_TYPE
		        ,IN_ITEM_STATUS
		        ,BASIS_NUM
		        ,BASIS_SEQ
		        ,ORDER_NUM
		        ,ORDER_SEQ
		        ,DIV_CODE
		        ,WH_CODE
		        ,WH_CELL_CODE
		        ,INOUT_DATE
		        ,INOUT_FOR_P
		        ,INOUT_FOR_O
		        ,EXCHG_RATE_O
		        ,MONEY_UNIT
		        ,TO_DIV_CODE
		        ,INOUT_CODE
		        ,INOUT_CODE_DETAIL
		        ,DEPT_CODE
		        ,ITEM_CODE
		        ,ITEM_STATUS
		        ,INOUT_Q
		        ,INOUT_PRSN
		        ,LOT_NO
		        ,REMARK
		        ,PROJECT_NO
		        ,CREATE_LOC
		        ,BILL_TYPE
		        ,SALE_TYPE
		        ,SALE_DIV_CODE
		        ,SALE_CUSTOM_CODE
		        ,SALE_C_YN
		        ,INSERT_DB_USER
		        ,INSERT_DB_TIME
		        ,UPDATE_DB_USER
		        ,UPDATE_DB_TIME
		        ,COMP_CODE
		        ,MAKE_DATE
		        ,MAKE_EXP_DATE
		) VALUES (
		         #{KEY_VALUE}
		        ,#{OPR_FLAG}
		        ,#{INOUT_NUM}
		        ,#{INOUT_SEQ}
		        ,#{INOUT_TYPE}
		        ,#{INOUT_METH}
		        ,#{INOUT_TYPE_DETAIL}
		        ,#{INOUT_CODE_TYPE}
		        ,#{IN_ITEM_STATUS}
		        ,#{BASIS_NUM}
		        ,#{BASIS_SEQ}
		        ,#{ORDER_NUM}
		        ,#{ORDER_SEQ}
		        ,#{DIV_CODE}
		        ,#{WH_CODE}
		        ,#{WH_CELL_CODE}
		        ,#{INOUT_DATE}
		        ,#{INOUT_FOR_P}
		        ,#{INOUT_FOR_O}
		        ,#{EXCHG_RATE_O}
		        ,#{MONEY_UNIT}
		        ,#{TO_DIV_CODE}
		        ,#{INOUT_CODE}
		        ,#{INOUT_CODE_DETAIL}
		        ,#{DEPT_CODE}
		        ,#{ITEM_CODE}
		        ,#{ITEM_STATUS}
		        ,#{INOUT_Q}
		        ,#{INOUT_PRSN}
		        ,#{LOT_NO}
		        ,#{REMARK}
		        ,#{PROJECT_NO}
		        ,#{CREATE_LOC}
		        ,#{BILL_TYPE}
		        ,#{SALE_TYPE}
		        ,#{SALE_DIV_CODE}
		        ,#{SALE_CUSTOM_CODE}
		        ,#{SALE_C_YN}
		        ,#{S_USER_ID}
		        ,GETDATE()
		        ,#{S_USER_ID}
		        ,GETDATE()
		        ,#{S_COMP_CODE}
		        ,#{MAKE_DATE}
		        ,#{MAKE_EXP_DATE}
		)
	</insert>

	<update id="s_btr111ukrv_inServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_STOCK_Btr110ukr (
		    #{KeyValue	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{InoutNum	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
		    #{ErrorDesc	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>

	<select id="s_btr111ukrv_inServiceImpl.selectRefStock" parameterType="Map" resultType="rMap">
		/* s_btr111ukrv_inServiceImpl.selectRefStock */
		SELECT A.DIV_CODE
		     , A.ITEM_CODE
		     , B.ITEM_NAME
		     , B.SPEC
		     , A.LOT_NO AS WK_LOT_NO
		     , B.STOCK_UNIT
		     , A.STOCK_Q
		     , A.GOOD_STOCK_Q
		     , A.BAD_STOCK_Q
		     , A.WH_CODE
		     , A.WH_CELL_CODE
		  FROM      BIV150TV A WITH (NOLOCK)
		  LEFT JOIN BPR100T  B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		                                    AND A.ITEM_CODE = B.ITEM_CODE
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		   AND A.STOCK_Q      &gt; 0
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		   AND A.LOT_NO       LIKE '%'+ #{LOT_NO} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE    LIKE '%'+ #{ITEM_CODE} + '%'
		</if>
		<if test="ITEM_STATUS == &quot;1&quot;">
		   AND A.GOOD_STOCK_Q &gt; 0
		</if>
		<if test="ITEM_STATUS == &quot;2&quot;">
		   AND A.BAD_STOCK_Q  &gt; 0
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		   AND A.WH_CODE      = #{WH_CODE}         --출고창고
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		   AND A.WH_CELL_CODE =  #{WH_CELL_CODE}   --출고창고cell
		</if>
	</select>
</mapper>