<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_biv320skrv_inServiceImpl">
	<select id="s_biv320skrv_inServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--biv320skrv.Cbiv320skrv[fnBiv320nq] QUERY01
        /*
                월별 수불현황 조회(신규)
        */
        BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                          , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장코드

                          , @FR_INOUT_DATE      NVARCHAR(08)                -- (필수) 시작 수불일
                          , @TO_INOUT_DATE      NVARCHAR(08)                -- (필수) 종료 수불일
        --
                          , @ITEM_CODE          NVARCHAR(20)                -- (선택) 품목코드
                          , @ITEM_NAME          NVARCHAR(200)               -- (선택) 품목명

                          , @ITEM_ACCOUNT       NVARCHAR(02)                -- (선택) 품목 계정코드

                          , @WH_CODE            NVARCHAR(08)                -- (선택) 창고코드
        --
                          , @ITEM_LEVEL1        NVARCHAR(10)                -- 대분류
                          , @ITEM_LEVEL2        NVARCHAR(10)                -- 중분류
                          , @ITEM_LEVEL3        NVARCHAR(10)                -- 소분류
        --
                          , @EVAL_FLAG          NVARCHAR(01)                -- 실사조정 포함 여부(Y/N)

                          , @INOUT_METH         NVARCHAR(02)                -- 수불방법
                          , @CREATE_LOC         NVARCHAR(02)                -- 생성경로
                          , @INOUT_CODE_TYPE    NVARCHAR(02)                -- 수불처 유형
                          , @ITEM_STATUS        NVARCHAR(01)                -- 품목상태

                          , @INOUT_NUM          NVARCHAR(20)                -- 수불번호
                          , @LOT_NO             NVARCHAR(20)                -- Lot No.
        --
                          , @INOUT_FLAG         NVARCHAR(01)                -- 수불 발생 유형(1: 발생, 2: 미발생, 3: 전체)
        --
                          , @SUBCON_YN          NVARCHAR(02)                -- 외주포함여부 (N: 포함않함,  Y: 포함)
                          , @QRY_TYPE           NVARCHAR(02)                -- 조회유형 (1: 품목별,  2: 창고별)

                          , @USER_ID            NVARCHAR(100)                -- (필수) USER ID

                          --190322
                          , @MOVE_YN NVARCHAR(10)	
                          , @STOCK_CARE_YN NVARCHAR(10)
						  , @PACK_TYPE NVARCHAR(10)
                          
            SET NOCOUNT ON
            SET ARITHABORT ON

        --  1. 변수 값 할당 -------------------------------------------------------------------------------------------------
            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @DIV_CODE        = #{DIV_CODE}

            SET @FR_INOUT_DATE   = CASE WHEN #{FR_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_INOUT_DATE} END + '01'
            SET @TO_INOUT_DATE   = CASE WHEN #{TO_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{TO_INOUT_DATE} END + '31'

            SET @ITEM_CODE       = #{DIV_PUMOK_CODE}
            SET @ITEM_NAME       = #{DIV_PUMOK_NAME}

            SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

            SET @WH_CODE         = #{WH_CODE}

            SET @ITEM_LEVEL1     = N''
            SET @ITEM_LEVEL2     = N''
            SET @ITEM_LEVEL3     = N''

            SET @EVAL_FLAG       = N''

            SET @INOUT_METH      = N''
            SET @CREATE_LOC      = N''
            SET @INOUT_CODE_TYPE = N''
            SET @ITEM_STATUS     = N''

            SET @INOUT_NUM       = N''
            SET @LOT_NO          = N''

            SET @INOUT_FLAG      = N'2'

            SET @SUBCON_YN       = CASE WHEN SUBSTRING(#{rdoSelect}, 2, 1) = '' THEN 'N' ELSE SUBSTRING(#{rdoSelect}, 2, 1) END
            SET @QRY_TYPE        = CASE WHEN SUBSTRING(#{rdoSelect}, 1, 1) = '' THEN '1' ELSE SUBSTRING(#{rdoSelect}, 1, 1) END

            SET @USER_ID         = #{S_USER_ID}

			--190322
            SET @MOVE_YN         = #{rdoSelect2}
            SET @STOCK_CARE_YN   = #{rdoSelect3}
			SET @PACK_TYPE 		= #{PACK_TYPE}
                        

        --  2. 명칭 조회 유형 설정 ------------------------------------------------------------------------------------------
            DECLARE @RefItem            NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '')

        --  3. 재고단가 계산 방법 설정 --------------------------------------------------------------------------------------
            DECLARE @StockP             NVARCHAR(01)

            SELECT TOP 1 @StockP = SUB_CODE
            FROM   BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE = @COMP_CODE                                             -- 단가처리 기준
            AND    MAIN_CODE = 'B069'
            AND    SUB_CODE  = '1'                                                     -- 기준재고단가
            AND    REF_CODE1 = 'Y'

            SET @StockP = ISNULL(@StockP, '')

        --  4. 가장 최근 마감월 조회 ----------------------------------------------------------------------------------------
            DECLARE     @LastYYYYMM      NVARCHAR(06)     -- 가장 최근 마감월
                       ,@BasisYYYYMM     NVARCHAR(06)     -- 기초 계산월

            SET @BasisYYYYMM = CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, @FR_INOUT_DATE), 112)

            SELECT @LastYYYYMM = MAX(MIN_BASIS_YYYYMM)
            FROM   BIV200TV1 WITH (NOLOCK)
            WHERE  COMP_CODE        = @COMP_CODE
            AND    DIV_CODE         = @DIV_CODE
            AND    MIN_BASIS_YYYYMM &lt; @BasisYYYYMM
            AND  ((ITEM_CODE        = @ITEM_CODE AND @ITEM_CODE != '') OR (@ITEM_CODE = ''))
            AND  ((WH_CODE          = @WH_CODE   AND @WH_CODE   != '') OR (@WH_CODE   = ''))

            SET @LastYYYYMM  = ISNULL(@LastYYYYMM, @BasisYYYYMM)

        --  5. 임시 테이블 선언 ---------------------------------------------------------------------------------------------
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#uniLITE200807111410'))
               DROP TABLE #uniLITE200807111410

            CREATE TABLE #uniLITE200807111410
                (
            --  일반정보
                TYPE_FLAG          NVARCHAR(02),    COMP_CODE               NVARCHAR(08),    DIV_CODE         NVARCHAR(08)
              , ITEM_ACCOUNT       NVARCHAR(02),    ITEM_CODE               NVARCHAR(20)
              , SPEC               NVARCHAR(160),   STOCK_UNIT              NVARCHAR(03),    INOUT_DATE       NVARCHAR(10)
              , ITEM_STATUS        NVARCHAR(01),    INOUT_TYPE              NVARCHAR(03),    MOVE_TYPE        NVARCHAR(20)

            --  수량정보
              , BASIS_Q            NUMERIC(30, 6),  IN_Q                    NUMERIC(30, 6),  OUT_Q            NUMERIC(30, 6)
              , RTN_Q              NUMERIC(30, 6),  STOCK_Q                 NUMERIC(30, 6)

            --  금액정보
              , BASIS_I            NUMERIC(30, 6),  IN_I                    NUMERIC(30, 6),  OUT_I            NUMERIC(30, 6)
              , RTN_I              NUMERIC(30, 6),  STOCK_I                 NUMERIC(30, 6)

            --  수불정보
              , INOUT_TYPE_DETAIL  NVARCHAR(10),    INOUT_METH              NVARCHAR(02)
              , WH_CODE            NVARCHAR(08),    SUBCON_CODE             NVARCHAR(08)
              , CREATE_LOC         NVARCHAR(01),    INOUT_CODE_TYPE         NVARCHAR(08),    INOUT_CODE       NVARCHAR(08)

            --  구매/판매 정보
              , ORDER_TYPE         NVARCHAR(02)
              , ORDER_UNIT         NVARCHAR(03),    ORDER_UNIT_P            NUMERIC(30, 6)
              , ORDER_UNIT_Q       NUMERIC(30, 6),  ORDER_UNIT_O            NUMERIC(30, 6),  TRNS_RATE        NUMERIC(12, 6)

            --  부가정보
              , INOUT_PRSN         NVARCHAR(10),    INOUT_NUM               NVARCHAR(20),    INOUT_SEQ        NUMERIC(06, 0)
              , PROJECT_NO         NVARCHAR(20),    LOT_NO                  NVARCHAR(20)

            --  기타
              , SORT_WH_CODE       NVARCHAR(08)
              , SORT_FLD           AS COMP_CODE + DIV_CODE + ITEM_CODE + SORT_WH_CODE + INOUT_DATE + CASE WHEN INOUT_TYPE = '1' THEN '1'
                                                                                                          WHEN INOUT_TYPE = '3' THEN '2'
                                                                                                          WHEN INOUT_TYPE = '2' THEN '3' END + INOUT_NUM + RIGHT('000000' + CONVERT(NVARCHAR, INOUT_SEQ), 6)

			--20190420 
			, ETC_IN_Q NUMERIC(30, 6), ETC_OUT_Q NUMERIC(30, 6), ETC_IN_I NUMERIC(30, 6), ETC_OUT_I NUMERIC(30, 6)
			, MOVE_IN_Q NUMERIC(30, 6), MOVE_OUT_Q NUMERIC(30, 6), MOVE_IN_I NUMERIC(30, 6), MOVE_OUT_I NUMERIC(30, 6)     
																										  
                )

            CREATE INDEX uniLITE200807111410_IDX01 ON #uniLITE200807111410(COMP_CODE, DIV_CODE, ITEM_CODE, SORT_WH_CODE, INOUT_DATE, INOUT_TYPE, INOUT_NUM, INOUT_SEQ)

        --  6. 조회 데이터 생성 ---------------------------------------------------------------------------------------------
            IF @INOUT_FLAG = '1'                         -- 수불 발생 조회시
                INSERT INTO #uniLITE200807111410
                     ( TYPE_FLAG               , COMP_CODE               , DIV_CODE
                     , ITEM_ACCOUNT            , ITEM_CODE               , SPEC                    , STOCK_UNIT
                     , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
                     , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
                     , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
                     , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
                     , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
                     , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
                     , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
                     , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE)
                SELECT
                       '10' AS TYPE_FLAG
                     , A.COMP_CODE, A.DIV_CODE
                     , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
                     , A.ITEM_CODE
                     , ISNULL(C1.SPEC, '')                                                                           AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
                     , A.INOUT_DATE                                                                                  AS INOUT_DATE
                     , ISNULL(A.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
                     , ISNULL(A.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
                     , ISNULL(A.MOVE_TYPE, '')                                                                       AS MOVE_TYPE
        --
                     , 0.0                                                                                           AS BASIS_Q
                     , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS IN_Q
                     , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
                     , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q
        --
                     , 0.0                                                                                           AS BASIS_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS IN_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS OUT_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_CAL_I, 0) ELSE 0 END) END         AS RTN_I
        --
                     , ISNULL(A.MOVE_TYPE, '')                                                                       AS INOUT_TYPE_DETAIL
                     , ISNULL(A.INOUT_METH, '')                                                                      AS INOUT_METH
                     , ISNULL(A.WH_CODE, '')                                                                         AS WH_CODE
                     , ''                                                                                            AS SUBCON_CODE
                     , ISNULL(A.CREATE_LOC, '')                                                                      AS CREATE_LOC
                     , ISNULL(A.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
                     , ISNULL(A.INOUT_CODE, '')                                                                      AS INOUT_CODE
                     , ISNULL(A.ORDER_TYPE, '')                                                                      AS ORDER_TYPE
                     , ISNULL(A.ORDER_UNIT, '')                                                                      AS ORDER_UNIT
                     , ISNULL(A.ORDER_UNIT_P, 0)                                                                     AS ORDER_UNIT_P
                     , ISNULL(A.ORDER_UNIT_Q, 0)                                                                     AS ORDER_UNIT_Q
                     , ISNULL(A.ORDER_UNIT_O, 0)                                                                     AS ORDER_UNIT_O
                     , ISNULL(A.TRNS_RATE, 0)                                                                        AS TRNS_RATE
                     , ISNULL(A.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
                     , ISNULL(A.INOUT_NUM, '')                                                                       AS INOUT_NUM
                     , A.INOUT_SEQ                                                                                   AS INOUT_SEQ
                     , ISNULL(A.PROJECT_NO, '')                                                                      AS PROJECT_NO
                     , ISNULL(A.LOT_NO, '')                                                                          AS LOT_NO
                     , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE ISNULL(A.WH_CODE, '') END            AS SORT_WH_CODE
                FROM              BTR100T   A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                       INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 품목
                                                            AND C1.ITEM_CODE       = A.ITEM_CODE
                       INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                            AND C2.DIV_CODE        = A.DIV_CODE
                                                            AND C2.ITEM_CODE       = A.ITEM_CODE
                WHERE  A.COMP_CODE       = @COMP_CODE
                AND    A.DIV_CODE        = @DIV_CODE
                AND    A.INOUT_DATE     &gt;= @FR_INOUT_DATE                                                                  -- 수불년월
                AND    A.INOUT_DATE     &lt;= @TO_INOUT_DATE
        --
                AND  ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))        -- 품목
                AND  ((
                      (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '0')
                OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '1')
                OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '2')
                   ) OR (@ITEM_NAME      = ''))
                AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT    != '') OR (@ITEM_ACCOUNT    = ''))        -- 계정
                AND  ((A.WH_CODE         = @WH_CODE         AND @WH_CODE         != '') OR (@WH_CODE         = ''))        -- 창고
        --
                AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1     AND @ITEM_LEVEL1     != '') OR (@ITEM_LEVEL1     = ''))        -- 대분류
                AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2     AND @ITEM_LEVEL2     != '') OR (@ITEM_LEVEL2     = ''))        -- 중분류
                AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3     AND @ITEM_LEVEL3     != '') OR (@ITEM_LEVEL3     = ''))        -- 소분류
        --
                AND  ((A.INOUT_METH      = '4'              AND @EVAL_FLAG       != '') OR (@EVAL_FLAG       = ''))        -- 실사조정 포함여부
                AND  ((A.INOUT_METH      = @INOUT_METH      AND @INOUT_METH      != '') OR (@INOUT_METH      = ''))        -- 수불방법
                AND  ((A.CREATE_LOC      = @CREATE_LOC      AND @CREATE_LOC      != '') OR (@CREATE_LOC      = ''))        -- 생성경로
                AND  ((A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE AND @INOUT_CODE_TYPE != '') OR (@INOUT_CODE_TYPE = ''))        -- 생성경로
                AND  ((A.ITEM_STATUS     = @ITEM_STATUS     AND @ITEM_STATUS     != '') OR (@ITEM_STATUS     = ''))        -- 품목상태
                AND  ((A.INOUT_NUM    LIKE @INOUT_NUM + '%' AND @INOUT_NUM       != '') OR (@INOUT_NUM       = ''))        -- 수불번호
                AND  ((A.LOT_NO       LIKE @LOT_NO    + '%' AND @LOT_NO          != '') OR (@LOT_NO          = ''))        -- LOT_NO
				AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
				
            IF @INOUT_FLAG = '2'                         -- 전체 재고 조회시
                INSERT INTO #uniLITE200807111410
                     ( TYPE_FLAG               , COMP_CODE               , DIV_CODE                , ITEM_ACCOUNT
                     , ITEM_CODE               , SPEC                    , STOCK_UNIT
                     , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
                     , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
                     , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
                     , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
                     , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
                     , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
                     , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
                     , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE)
                SELECT
                       '11' AS TYPE_FLAG
                     , A.COMP_CODE, A.DIV_CODE
                     , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
                     , A.ITEM_CODE
                     , ISNULL(C1.SPEC, '')                                                                           AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
                     , ISNULL(B.INOUT_DATE, @FR_INOUT_DATE)                                                          AS INOUT_DATE
                     , ISNULL(B.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
                     , ISNULL(B.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
                     , ISNULL(B.MOVE_TYPE, '')                                                                       AS MOVE_TYPE
        --
                     , ISNULL(A.BASIS_STOCK_Q, 0)                                                                    AS BASIS_Q
                     , CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS IN_Q
                     , CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
                     , CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q
        --
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) * ISNULL(A.BASIS_STOCK_Q, 0)
                            ELSE ISNULL(A.BASIS_STOCK_I, 0) END                                                      AS BASIS_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_CAL_I, 0) ELSE 0 END) END         AS IN_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_CAL_I, 0) ELSE 0 END) END         AS OUT_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_Q, 0)     ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_CAL_I, 0) ELSE 0 END) END         AS RTN_I
        --
                     , ISNULL(B.MOVE_TYPE, '')                                                                       AS INOUT_TYPE_DETAIL
                     , ISNULL(B.INOUT_METH, '')                                                                      AS INOUT_METH
                     , ISNULL(B.WH_CODE, A.WH_CODE)                                                                  AS WH_CODE
                     , ''                                                                                            AS SUBCON_CODE
                     , ISNULL(B.CREATE_LOC, '')                                                                      AS CREATE_LOC
                     , ISNULL(B.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
                     , ISNULL(B.INOUT_CODE, '')                                                                      AS INOUT_CODE
                     , ISNULL(B.ORDER_TYPE, '')                                                                      AS ORDER_TYPE
                     , ISNULL(B.ORDER_UNIT, '')                                                                      AS ORDER_UNIT
                     , ISNULL(B.ORDER_UNIT_P, 0)                                                                     AS ORDER_UNIT_P
                     , ISNULL(B.ORDER_UNIT_Q, 0)                                                                     AS ORDER_UNIT_Q
                     , ISNULL(B.ORDER_UNIT_O, 0)                                                                     AS ORDER_UNIT_O
                     , ISNULL(B.TRNS_RATE, 0)                                                                        AS TRNS_RATE
                     , ISNULL(B.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
                     , ISNULL(B.INOUT_NUM, '')                                                                       AS INOUT_NUM
                     , B.INOUT_SEQ                                                                                   AS INOUT_SEQ
                     , ISNULL(B.PROJECT_NO, '')                                                                      AS PROJECT_NO
                     , ISNULL(B.LOT_NO, '')                                                                          AS LOT_NO
                     , CASE WHEN @QRY_TYPE = '1' AND @WH_CODE = '' THEN '' ELSE ISNULL(B.WH_CODE, A.WH_CODE) END     AS SORT_WH_CODE
                FROM              (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                                       , SUM(ISNULL(A.STOCK_Q, 0)) AS BASIS_STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS BASIS_STOCK_I
                                  FROM   (
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
                                              , 0 AS STOCK_Q, 0 AS STOCK_I
                                         FROM              BIV100T  A  WITH (NOLOCK)
                                                INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          -- 품목
                                                                                    AND C1.ITEM_CODE  = A.ITEM_CODE
                                                INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          -- 사업장 품목
                                                                                    AND C2.DIV_CODE   = A.DIV_CODE
                                                                                    AND C2.ITEM_CODE  = A.ITEM_CODE
                                         WHERE  A.COMP_CODE      = @COMP_CODE
                                         AND    A.DIV_CODE       = @DIV_CODE
                                         AND  ((A.ITEM_CODE   LIKE @ITEM_CODE + '%' AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))        -- 품목
                                         AND  ((
                                               (C1.ITEM_NAME  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '0')
                                         OR    (C1.ITEM_NAME1 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '1')
                                         OR    (C1.ITEM_NAME2 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '2')
                                               ) OR (@ITEM_NAME  = ''))
                                         AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        -- 대분류
                                         AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        -- 중분류
                                         AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        -- 소분류
                                         AND  ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        -- 창고
                                         AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        -- 계정
										 AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                         UNION ALL
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
                                              , ISNULL(A.STOCK_Q, 0) AS STOCK_Q, ISNULL(A.STOCK_I, 0) AS STOCK_I
                                         FROM              BIV200T  A  WITH (NOLOCK)
                                                INNER JOIN (
                                                           SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                                           FROM              BIV200T  A  WITH (NOLOCK)
                                                                  INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          -- 품목
                                                                                                      AND C1.ITEM_CODE  = A.ITEM_CODE
                                                                  INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          -- 사업장 품목
                                                                                                      AND C2.DIV_CODE   = A.DIV_CODE
                                                                                                      AND C2.ITEM_CODE  = A.ITEM_CODE
                                                           WHERE  A.COMP_CODE      = @COMP_CODE
                                                           AND    A.DIV_CODE       = @DIV_CODE
                                                           AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                                           AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                                           AND  ((A.ITEM_CODE   LIKE @ITEM_CODE + '%' AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))        -- 품목
                                                           AND  ((
                                                                 (C1.ITEM_NAME  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '0')
                                                           OR    (C1.ITEM_NAME1 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '1')
                                                           OR    (C1.ITEM_NAME2 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '2')
                                                                 ) OR (@ITEM_NAME = ''))
                                                           AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        -- 대분류
                                                           AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        -- 중분류
                                                           AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        -- 소분류
                                                           AND  ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        -- 창고
                                                           AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        -- 계정
														   AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                                           GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
                                                           ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                                    AND B.DIV_CODE     = A.DIV_CODE
                                                                                    AND B.WH_CODE      = A.WH_CODE
                                                                                    AND B.ITEM_CODE    = A.ITEM_CODE
                                                                                    AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                                         UNION ALL
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
                                              , CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                                     WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                                     WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
                                                     ELSE 0 END                                             AS STOCK_Q
                                              , CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                                     WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_CAL_I, 0)
                                                     WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                                     ELSE 0 END                                             AS STOCK_I
                                         FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                                                INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                                 -- 품목
                                                                                    AND C1.ITEM_CODE  = A.ITEM_CODE
                                                INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                                 -- 사업장 품목
                                                                                    AND C2.DIV_CODE   = A.DIV_CODE
                                                                                    AND C2.ITEM_CODE  = A.ITEM_CODE
                                         WHERE  A.COMP_CODE       = @COMP_CODE
                                         AND    A.DIV_CODE        = @DIV_CODE
                                         AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                                         AND    A.INOUT_DATE      &lt; @FR_INOUT_DATE
        --
                                         AND  ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))        -- 품목
                                         AND  ((
                                               (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '0')
                                         OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '1')
                                         OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '2')
                                               ) OR (@ITEM_NAME      = ''))
                                         AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT    != '') OR (@ITEM_ACCOUNT    = ''))        -- 계정
                                         AND  ((A.WH_CODE         = @WH_CODE         AND @WH_CODE         != '') OR (@WH_CODE         = ''))        -- 창고
        --
                                         AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1     AND @ITEM_LEVEL1     != '') OR (@ITEM_LEVEL1     = ''))        -- 대분류
                                         AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2     AND @ITEM_LEVEL2     != '') OR (@ITEM_LEVEL2     = ''))        -- 중분류
                                         AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3     AND @ITEM_LEVEL3     != '') OR (@ITEM_LEVEL3     = ''))        -- 소분류
        --
                                         AND  ((A.INOUT_METH      = '4'              AND @EVAL_FLAG       != '') OR (@EVAL_FLAG       = ''))        -- 실사조정 포함여부
                                         AND  ((A.INOUT_METH      = @INOUT_METH      AND @INOUT_METH      != '') OR (@INOUT_METH      = ''))        -- 수불방법
                                         AND  ((A.CREATE_LOC      = @CREATE_LOC      AND @CREATE_LOC      != '') OR (@CREATE_LOC      = ''))        -- 생성경로
                                         AND  ((A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE AND @INOUT_CODE_TYPE != '') OR (@INOUT_CODE_TYPE = ''))        -- 생성경로
                                         AND  ((A.ITEM_STATUS     = @ITEM_STATUS     AND @ITEM_STATUS     != '') OR (@ITEM_STATUS     = ''))        -- 품목상태
                                         AND  ((A.INOUT_NUM    LIKE @INOUT_NUM + '%' AND @INOUT_NUM       != '') OR (@INOUT_NUM       = ''))        -- 수불번호
                                         AND  ((A.LOT_NO       LIKE @LOT_NO    + '%' AND @LOT_NO          != '') OR (@LOT_NO          = ''))        -- LOT_NO
										 AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                         ) A
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.WH_CODE
                                  ) A
                       LEFT  JOIN BTR100T   B  WITH (NOLOCK) ON  B.COMP_CODE       = A.COMP_CODE
                                                            AND  B.DIV_CODE        = A.DIV_CODE
                                                            AND  B.ITEM_CODE       = A.ITEM_CODE
                                                            AND  B.WH_CODE         = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
                                                            AND  B.INOUT_DATE     &gt;= @FR_INOUT_DATE
                                                            AND  B.INOUT_DATE     &lt;= @TO_INOUT_DATE
                       INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 품목
                                                            AND C1.ITEM_CODE       = A.ITEM_CODE
                       INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                            AND C2.DIV_CODE        = A.DIV_CODE
                                                            AND C2.ITEM_CODE       = A.ITEM_CODE

        --  7. 외주 포함일 경우 조회 데이터 생성 ----------------------------------------------------------------------------
            IF @SUBCON_YN = 'Y' AND @INOUT_FLAG = '1'                         -- 외주 포함 + 수불 발생 조회시
                INSERT INTO #uniLITE200807111410
                     ( TYPE_FLAG               , COMP_CODE               , DIV_CODE
                     , ITEM_ACCOUNT            , ITEM_CODE               , SPEC                    , STOCK_UNIT
                     , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
                     , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
                     , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
                     , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
                     , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
                     , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
                     , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
                     , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE)
                SELECT
                       '20' AS TYPE_FLAG
                     , A.COMP_CODE, A.DIV_CODE
                     , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
                     , A.ITEM_CODE
                     , ISNULL(C1.SPEC, '')                                                                           AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
                     , A.INOUT_DATE                                                                                  AS INOUT_DATE
                     , ISNULL(A.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
                     , ISNULL(A.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
                     , ''                                                                                            AS MOVE_TYPE
        --
                     , 0.0                                                                                           AS BASIS_Q
                     , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS IN_Q
                     , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
                     , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q
        --
                     , 0.0                                                                                           AS BASIS_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_I, 0) ELSE 0 END) END             AS IN_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_I, 0) ELSE 0 END) END             AS OUT_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_I, 0) ELSE 0 END) END             AS RTN_I
        --
                     , ''                                                                                            AS INOUT_TYPE_DETAIL
                     , ISNULL(A.INOUT_METH, '')                                                                      AS INOUT_METH
                     , ''                                                                                            AS WH_CODE
                     , ISNULL(A.CUSTOM_CODE, '')                                                                     AS SUBCON_CODE
                     , ISNULL(A.CREATE_LOC, '')                                                                      AS CREATE_LOC
                     , ISNULL(A.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
                     , ''                                                                                            AS INOUT_CODE
                     , ''                                                                                            AS ORDER_TYPE
                     , ''                                                                                            AS ORDER_UNIT
                     , 0                                                                                             AS ORDER_UNIT_P
                     , 0                                                                                             AS ORDER_UNIT_Q
                     , 0                                                                                             AS ORDER_UNIT_O
                     , 0                                                                                             AS TRNS_RATE
                     , ISNULL(A.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
                     , ISNULL(A.INOUT_NUM, '')                                                                       AS INOUT_NUM
                     , A.INOUT_SEQ                                                                                   AS INOUT_SEQ
                     , ISNULL(A.PROJECT_NO, '')                                                                      AS PROJECT_NO
                     , ''                                                                                            AS LOT_NO
                     , CASE WHEN @QRY_TYPE = '1' THEN '' ELSE 'ZZ' + ISNULL(A.CUSTOM_CODE, '') END                   AS SORT_WH_CODE
                FROM              BIZ600T   A  WITH (NOLOCK, INDEX(BIZ600T_IDX02))
                       INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 품목
                                                            AND C1.ITEM_CODE       = A.ITEM_CODE
                       INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                            AND C2.DIV_CODE        = A.DIV_CODE
                                                            AND C2.ITEM_CODE       = A.ITEM_CODE
                WHERE  A.COMP_CODE       = @COMP_CODE
                AND    A.DIV_CODE        = @DIV_CODE
                AND    A.INOUT_DATE     &gt;= @FR_INOUT_DATE                                                                  -- 수불년월
                AND    A.INOUT_DATE     &lt;= @TO_INOUT_DATE
        --
                AND  ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))        -- 품목
                AND  ((
                      (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '0')
                OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '1')
                OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '2')
                   ) OR (@ITEM_NAME      = ''))
                AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT    != '') OR (@ITEM_ACCOUNT    = ''))        -- 계정
        --        AND  ((A.WH_CODE         = @WH_CODE         AND @WH_CODE         != '') OR (@WH_CODE         = ''))        -- 창고
        --
                AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1     AND @ITEM_LEVEL1     != '') OR (@ITEM_LEVEL1     = ''))        -- 대분류
                AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2     AND @ITEM_LEVEL2     != '') OR (@ITEM_LEVEL2     = ''))        -- 중분류
                AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3     AND @ITEM_LEVEL3     != '') OR (@ITEM_LEVEL3     = ''))        -- 소분류
        --
                AND  ((A.INOUT_METH      = '4'              AND @EVAL_FLAG       != '') OR (@EVAL_FLAG       = ''))        -- 실사조정 포함여부
                AND  ((A.INOUT_METH      = @INOUT_METH      AND @INOUT_METH      != '') OR (@INOUT_METH      = ''))        -- 수불방법
                AND  ((A.CREATE_LOC      = @CREATE_LOC      AND @CREATE_LOC      != '') OR (@CREATE_LOC      = ''))        -- 생성경로
                AND  ((A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE AND @INOUT_CODE_TYPE != '') OR (@INOUT_CODE_TYPE = ''))        -- 생성경로
                AND  ((A.ITEM_STATUS     = @ITEM_STATUS     AND @ITEM_STATUS     != '') OR (@ITEM_STATUS     = ''))        -- 품목상태
                AND  ((A.INOUT_NUM    LIKE @INOUT_NUM + '%' AND @INOUT_NUM       != '') OR (@INOUT_NUM       = ''))        -- 수불번호
        --        AND  ((A.LOT_NO       LIKE @LOT_NO    + '%' AND @LOT_NO          != '') OR (@LOT_NO          = ''))        -- LOT_NO
				AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태

            IF @SUBCON_YN = 'Y' AND @INOUT_FLAG = '2'                         -- 외주 포함 + 전체 재고 조회시
                INSERT INTO #uniLITE200807111410
                     ( TYPE_FLAG               , COMP_CODE               , DIV_CODE                , ITEM_ACCOUNT
                     , ITEM_CODE               , SPEC                    , STOCK_UNIT
                     , INOUT_DATE              , ITEM_STATUS             , INOUT_TYPE              , MOVE_TYPE
                     , BASIS_Q                 , IN_Q                    , OUT_Q                   , RTN_Q
                     , BASIS_I                 , IN_I                    , OUT_I                   , RTN_I
                     , INOUT_TYPE_DETAIL       , INOUT_METH              , WH_CODE                 , SUBCON_CODE
                     , CREATE_LOC              , INOUT_CODE_TYPE         , INOUT_CODE              , ORDER_TYPE
                     , ORDER_UNIT              , ORDER_UNIT_P            , ORDER_UNIT_Q            , ORDER_UNIT_O
                     , TRNS_RATE               , INOUT_PRSN              , INOUT_NUM               , INOUT_SEQ
                     , PROJECT_NO              , LOT_NO                  , SORT_WH_CODE)
                SELECT
                       '21' AS TYPE_FLAG
                     , A.COMP_CODE, A.DIV_CODE
                     , ISNULL(C2.ITEM_ACCOUNT, '')                                                                   AS ITEM_ACCOUNT
                     , A.ITEM_CODE
                     , ISNULL(C1.SPEC, '')                                                                           AS SPEC
                     , ISNULL(C1.STOCK_UNIT, '')                                                                     AS STOCK_UNIT
                     , ISNULL(B.INOUT_DATE, @FR_INOUT_DATE)                                                          AS INOUT_DATE
                     , ISNULL(B.ITEM_STATUS, '')                                                                     AS ITEM_STATUS
                     , ISNULL(B.INOUT_TYPE, '')                                                                      AS INOUT_TYPE
                     , ''                                                                                            AS MOVE_TYPE
        --
                     , ISNULL(A.BASIS_STOCK_Q, 0)                                                                    AS BASIS_Q
                     , CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS IN_Q
                     , CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS OUT_Q
                     , CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END                             AS RTN_Q
        --
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) * ISNULL(A.BASIS_STOCK_Q, 0)
                            ELSE ISNULL(A.BASIS_STOCK_I, 0) END                                                      AS BASIS_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '1' THEN ISNULL(B.INOUT_I, 0) ELSE 0 END) END             AS IN_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '2' THEN ISNULL(B.INOUT_I, 0) ELSE 0 END) END             AS OUT_I
                     , CASE WHEN @StockP = '1' AND SUBSTRING(ISNULL(C2.ITEM_ACCOUNT, ''), 1, 1) IN ('1', '2')
                            THEN ISNULL(C2.BASIS_P, 0) *
                                 (CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_Q, 0) ELSE 0 END)
                            ELSE (CASE WHEN B.INOUT_TYPE = '3' THEN ISNULL(B.INOUT_I, 0) ELSE 0 END) END             AS RTN_I
        --
                     , ''                                                                                            AS INOUT_TYPE_DETAIL
                     , ISNULL(B.INOUT_METH, '')                                                                      AS INOUT_METH
                     , ''                                                                                            AS WH_CODE
                     , ISNULL(B.CUSTOM_CODE, A.CUSTOM_CODE)                                                          AS SUBCON_CODE
                     , ISNULL(B.CREATE_LOC, '')                                                                      AS CREATE_LOC
                     , ISNULL(B.INOUT_CODE_TYPE, '')                                                                 AS INOUT_CODE_TYPE
                     , ''                                                                                            AS INOUT_CODE
                     , ''                                                                                            AS ORDER_TYPE
                     , ''                                                                                            AS ORDER_UNIT
                     , 0                                                                                             AS ORDER_UNIT_P
                     , 0                                                                                             AS ORDER_UNIT_Q
                     , 0                                                                                             AS ORDER_UNIT_O
                     , 0                                                                                             AS TRNS_RATE
                     , ISNULL(B.INOUT_PRSN, '')                                                                      AS INOUT_PRSN
                     , ISNULL(B.INOUT_NUM, '')                                                                       AS INOUT_NUM
                     , B.INOUT_SEQ                                                                                   AS INOUT_SEQ
                     , ISNULL(B.PROJECT_NO, '')                                                                      AS PROJECT_NO
                     , ''                                                                                            AS LOT_NO
                     , CASE WHEN @QRY_TYPE = '1' THEN '' ELSE 'ZZ' + ISNULL(B.CUSTOM_CODE, A.CUSTOM_CODE) END        AS SORT_WH_CODE
                FROM              (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.CUSTOM_CODE
                                       , SUM(ISNULL(A.STOCK_Q, 0)) AS BASIS_STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS BASIS_STOCK_I
                                  FROM   (
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END AS CUSTOM_CODE
                                              , 0 AS STOCK_Q, 0 AS STOCK_I
                                         FROM              BIZ100T  A  WITH (NOLOCK)
                                                INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          -- 품목
                                                                                    AND C1.ITEM_CODE  = A.ITEM_CODE
                                                INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          -- 사업장 품목
                                                                                    AND C2.DIV_CODE   = A.DIV_CODE
                                                                                    AND C2.ITEM_CODE  = A.ITEM_CODE
                                         WHERE  A.COMP_CODE      = @COMP_CODE
                                         AND    A.DIV_CODE       = @DIV_CODE
                                         AND  ((A.ITEM_CODE   LIKE @ITEM_CODE + '%' AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))        -- 품목
                                         AND  ((
                                               (C1.ITEM_NAME  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '0')
                                         OR    (C1.ITEM_NAME1 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '1')
                                         OR    (C1.ITEM_NAME2 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '2')
                                               ) OR (@ITEM_NAME  = ''))
                                         AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        -- 대분류
                                         AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        -- 중분류
                                         AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        -- 소분류
        --                                 AND  ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        -- 창고
                                         AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        -- 계정
										 AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                         UNION ALL
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END AS CUSTOM_CODE
                                              , ISNULL(A.STOCK_Q, 0) AS STOCK_Q, ISNULL(A.STOCK_I, 0) AS STOCK_I
                                         FROM              BIZ200T  A  WITH (NOLOCK)
                                                INNER JOIN (
                                                           SELECT A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                                           FROM              BIZ200T  A  WITH (NOLOCK)
                                                                  INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                          -- 품목
                                                                                                      AND C1.ITEM_CODE  = A.ITEM_CODE
                                                                  INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                          -- 사업장 품목
                                                                                                      AND C2.DIV_CODE   = A.DIV_CODE
                                                                                                      AND C2.ITEM_CODE  = A.ITEM_CODE
                                                           WHERE  A.COMP_CODE      = @COMP_CODE
                                                           AND    A.DIV_CODE       = @DIV_CODE
                                                           AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                                           AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                                           AND  ((A.ITEM_CODE   LIKE @ITEM_CODE + '%' AND @ITEM_CODE    != '') OR (@ITEM_CODE    = ''))        -- 품목
                                                           AND  ((
                                                                 (C1.ITEM_NAME  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '0')
                                                           OR    (C1.ITEM_NAME1 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '1')
                                                           OR    (C1.ITEM_NAME2 LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME    != '' AND @RefItem = '2')
                                                                 ) OR (@ITEM_NAME = ''))
                                                           AND  ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        -- 대분류
                                                           AND  ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        -- 중분류
                                                           AND  ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        -- 소분류
        --                                                   AND  ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        -- 창고
                                                           AND  ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        -- 계정
														   AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                                           GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE
                                                           ) B                       ON B.COMP_CODE    = A.COMP_CODE
                                                                                    AND B.DIV_CODE     = A.DIV_CODE
                                                                                    AND B.CUSTOM_CODE  = A.CUSTOM_CODE
                                                                                    AND B.ITEM_CODE    = A.ITEM_CODE
                                                                                    AND B.BASIS_YYYYMM = A.BASIS_YYYYMM
                                         UNION ALL
                                         SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END AS CUSTOM_CODE
                                              , CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                                     WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                                     WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
                                                     ELSE 0 END                                             AS STOCK_Q
                                              , CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_I, 0)
                                                     WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_I, 0)
                                                     WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_I, 0)
                                                     ELSE 0 END                                             AS STOCK_I
                                         FROM              BIZ600T  A  WITH (NOLOCK, INDEX(BIZ600T_IDX02))
                                                INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                                 -- 품목
                                                                                    AND C1.ITEM_CODE  = A.ITEM_CODE
                                                INNER JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                                 -- 사업장 품목
                                                                                    AND C2.DIV_CODE   = A.DIV_CODE
                                                                                    AND C2.ITEM_CODE  = A.ITEM_CODE
                                         WHERE  A.COMP_CODE       = @COMP_CODE
                                         AND    A.DIV_CODE        = @DIV_CODE
                                         AND    A.INOUT_DATE     &gt;= @LastYYYYMM + '32'
                                         AND    A.INOUT_DATE      &lt; @FR_INOUT_DATE
        --
                                         AND  ((A.ITEM_CODE    LIKE @ITEM_CODE + '%' AND @ITEM_CODE       != '') OR (@ITEM_CODE       = ''))        -- 품목
                                         AND  ((
                                               (C1.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '0')
                                         OR    (C1.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '1')
                                         OR    (C1.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND @ITEM_NAME       != '' AND  @RefItem         = '2')
                                               ) OR (@ITEM_NAME      = ''))
                                         AND  ((C2.ITEM_ACCOUNT   = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT    != '') OR (@ITEM_ACCOUNT    = ''))        -- 계정
        --                                 AND  ((A.WH_CODE         = @WH_CODE         AND @WH_CODE         != '') OR (@WH_CODE         = ''))        -- 창고
        --
                                         AND  ((C1.ITEM_LEVEL1    = @ITEM_LEVEL1     AND @ITEM_LEVEL1     != '') OR (@ITEM_LEVEL1     = ''))        -- 대분류
                                         AND  ((C1.ITEM_LEVEL2    = @ITEM_LEVEL2     AND @ITEM_LEVEL2     != '') OR (@ITEM_LEVEL2     = ''))        -- 중분류
                                         AND  ((C1.ITEM_LEVEL3    = @ITEM_LEVEL3     AND @ITEM_LEVEL3     != '') OR (@ITEM_LEVEL3     = ''))        -- 소분류
        --
                                         AND  ((A.INOUT_METH      = '4'              AND @EVAL_FLAG       != '') OR (@EVAL_FLAG       = ''))        -- 실사조정 포함여부
                                         AND  ((A.INOUT_METH      = @INOUT_METH      AND @INOUT_METH      != '') OR (@INOUT_METH      = ''))        -- 수불방법
                                         AND  ((A.CREATE_LOC      = @CREATE_LOC      AND @CREATE_LOC      != '') OR (@CREATE_LOC      = ''))        -- 생성경로
                                         AND  ((A.INOUT_CODE_TYPE = @INOUT_CODE_TYPE AND @INOUT_CODE_TYPE != '') OR (@INOUT_CODE_TYPE = ''))        -- 생성경로
                                         AND  ((A.ITEM_STATUS     = @ITEM_STATUS     AND @ITEM_STATUS     != '') OR (@ITEM_STATUS     = ''))        -- 품목상태
                                         AND  ((A.INOUT_NUM    LIKE @INOUT_NUM + '%' AND @INOUT_NUM       != '') OR (@INOUT_NUM       = ''))        -- 수불번호
        --                                 AND  ((A.LOT_NO       LIKE @LOT_NO    + '%' AND @LOT_NO          != '') OR (@LOT_NO          = ''))        -- LOT_NO
										 AND  ((C2.PACK_TYPE       = @PACK_TYPE  AND @PACK_TYPE          != '') OR (@PACK_TYPE          = ''))        -- 포장형태
                                         ) A
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, A.CUSTOM_CODE
                                  ) A
                       LEFT  JOIN BIZ600T   B  WITH (NOLOCK) ON  B.COMP_CODE       = A.COMP_CODE
                                                            AND  B.DIV_CODE        = A.DIV_CODE
                                                            AND  B.ITEM_CODE       = A.ITEM_CODE
                                                            AND  B.CUSTOM_CODE     = CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE B.CUSTOM_CODE END
                                                            AND  B.INOUT_DATE     &gt;= @FR_INOUT_DATE
                                                            AND  B.INOUT_DATE     &lt;= @TO_INOUT_DATE
                       INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE                                             -- 품목
                                                            AND C1.ITEM_CODE       = A.ITEM_CODE
                       INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE                                             -- 사업장 품목
                                                            AND C2.DIV_CODE        = A.DIV_CODE
                                                            AND C2.ITEM_CODE       = A.ITEM_CODE


		
			--기타 처리 
			UPDATE #uniLITE200807111410 SET 
					  ETC_IN_Q		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN 0		ELSE (IN_Q)		END
					, ETC_IN_I		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN 0		ELSE (IN_I)		END
					, ETC_OUT_Q		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN 0		ELSE (OUT_Q)	END
					, ETC_OUT_I		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN 0		ELSE (OUT_I)	END
					, MOVE_IN_Q		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN (IN_Q)	ELSE 0			END
					, MOVE_IN_I		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN (IN_I)	ELSE 0			END
					, MOVE_OUT_Q		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN (OUT_Q)	ELSE 0			END
					, MOVE_OUT_I		= CASE WHEN INOUT_TYPE_DETAIL+INOUT_METH IN ('42993','41993') THEN (OUT_I)	ELSE 0			END
					, IN_Q=0 , IN_I=0, OUT_Q=0, OUT_I=0,RTN_Q=0,RTN_I=0
			WHERE LEFT(INOUT_TYPE_DETAIL,2) NOT IN ('11','12', '13', '21')			--정상을 제외한 나머지 기타, 이동재고 별도 빼기 (move_type : create_loc+inout_type+inout_type_detail)
		

  			--재고관리대상
  			IF @STOCK_CARE_YN = 'Y'
  				DELETE A
  				FROM #uniLITE200807111410 A
  					 INNER JOIN BPR100T B ON A.ITEM_CODE=B.ITEM_CODE AND B.COMP_CODE=@COMP_CODE
  				WHERE B.STOCK_CARE_YN='N'
  				
  				
        --  7. 기초 수량/금액 조회 ------------------------------------------------------------------------------------------
        --  기초수량/금액 조회
            IF @INOUT_FLAG = '1'       -- 수불 발생건만 조회시,  기초 수량/금액 조회
            BEGIN
                UPDATE A
                SET    A.BASIS_Q = ISNULL(B.STOCK_Q, 0) + ISNULL(C.STOCK_Q, 0)
                     , A.BASIS_I = ISNULL(B.STOCK_I, 0) + ISNULL(C.STOCK_I, 0)
                FROM   #uniLITE200807111410 A WITH (NOLOCK)
                       LEFT  JOIN (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
                                       , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
                                  FROM              BIV200T  A  WITH (NOLOCK)
                                         INNER JOIN (
                                                    SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                                    FROM   BIV200T  A  WITH (NOLOCK)
                                                    WHERE  A.COMP_CODE      = @COMP_CODE
                                                    AND    A.DIV_CODE       = @DIV_CODE
                                                    AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                                    AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                                    GROUP BY A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE
                                                    ) C                       ON  C.COMP_CODE    = A.COMP_CODE
                                                                             AND  C.DIV_CODE     = A.DIV_CODE
                                                                             AND  C.WH_CODE      = A.WH_CODE
                                                                             AND  C.ITEM_CODE    = A.ITEM_CODE
                                                                             AND  C.BASIS_YYYYMM = A.BASIS_YYYYMM
                                  WHERE  A.COMP_CODE      = @COMP_CODE
                                  AND    A.DIV_CODE       = @DIV_CODE
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
                                  ) B                        ON  B.COMP_CODE       = A.COMP_CODE
                                                            AND  B.DIV_CODE        = A.DIV_CODE
                                                            AND  B.ITEM_CODE       = A.ITEM_CODE
                                                            AND  B.WH_CODE         = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE B.WH_CODE END
                       LEFT  JOIN (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END AS WH_CODE
                                       , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                                  WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                                  WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
                                                  ELSE 0 END)                                             AS STOCK_Q
                                       , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                                  WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_CAL_I, 0)
                                                  WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_CAL_I, 0)
                                                  ELSE 0 END)                                             AS STOCK_I
                                  FROM   BTR100T  A  WITH (NOLOCK)
                                  WHERE  A.COMP_CODE      = @COMP_CODE
                                  AND    A.DIV_CODE       = @DIV_CODE
                                  AND    A.INOUT_DATE    &gt;= @LastYYYYMM + '32'                                                          -- 수불년월
                                  AND    A.INOUT_DATE     &lt; @FR_INOUT_DATE
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END
                                  ) C                        ON  C.COMP_CODE       = A.COMP_CODE
                                                            AND  C.DIV_CODE        = A.DIV_CODE
                                                            AND  C.ITEM_CODE       = A.ITEM_CODE
                                                            AND  C.WH_CODE         = CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE C.WH_CODE END
                WHERE  A.TYPE_FLAG IN ('10', '11')
            END

            IF @SUBCON_YN = 'Y' AND @INOUT_FLAG = '1'      -- 외주포함 + 수불발생건 조회일 경우,  기초 수량/금액 조회
            BEGIN
                UPDATE A
                SET    A.BASIS_Q = ISNULL(B.STOCK_Q, 0) + ISNULL(C.STOCK_Q, 0)
                     , A.BASIS_I = ISNULL(B.STOCK_I, 0) + ISNULL(C.STOCK_I, 0)
                FROM   #uniLITE200807111410 A WITH (NOLOCK)
                       LEFT  JOIN (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END AS CUSTOM_CODE
                                       , SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q, SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
                                  FROM              BIZ200T  A  WITH (NOLOCK)
                                         INNER JOIN (
                                                    SELECT A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
                                                    FROM   BIZ200T  A  WITH (NOLOCK)
                                                    WHERE  A.COMP_CODE      = @COMP_CODE
                                                    AND    A.DIV_CODE       = @DIV_CODE
                                                    AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
                                                    AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
                                                    GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE
                                                    ) C                       ON  C.COMP_CODE    = A.COMP_CODE
                                                                             AND  C.DIV_CODE     = A.DIV_CODE
                                                                             AND  C.CUSTOM_CODE  = A.CUSTOM_CODE
                                                                             AND  C.ITEM_CODE    = A.ITEM_CODE
                                                                             AND  C.BASIS_YYYYMM = A.BASIS_YYYYMM
                                  WHERE  A.COMP_CODE      = @COMP_CODE
                                  AND    A.DIV_CODE       = @DIV_CODE
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END
                                  ) B                        ON  B.COMP_CODE       = A.COMP_CODE
                                                            AND  B.DIV_CODE        = A.DIV_CODE
                                                            AND  B.ITEM_CODE       = A.ITEM_CODE
                                                            AND  B.CUSTOM_CODE     = CASE WHEN @QRY_TYPE = '2' THEN A.SUBCON_CODE ELSE B.CUSTOM_CODE END
                       LEFT  JOIN (
                                  SELECT A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END AS CUSTOM_CODE
                                       , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_Q, 0)
                                                  WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_Q, 0)
                                                  WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_Q, 0)
                                                  ELSE 0 END)                                             AS STOCK_Q
                                       , SUM(CASE WHEN A.INOUT_TYPE = '1' THEN      ISNULL(A.INOUT_I, 0)
                                                  WHEN A.INOUT_TYPE = '2' THEN -1 * ISNULL(A.INOUT_I, 0)
                                                  WHEN A.INOUT_TYPE = '3' THEN      ISNULL(A.INOUT_I, 0)
                                                  ELSE 0 END)                                             AS STOCK_I
                                  FROM   BIZ600T  A  WITH (NOLOCK)
                                  WHERE  A.COMP_CODE      = @COMP_CODE
                                  AND    A.DIV_CODE       = @DIV_CODE
                                  AND    A.INOUT_DATE    &gt;= @LastYYYYMM + '32'                                                          -- 수불년월
                                  AND    A.INOUT_DATE     &lt; @FR_INOUT_DATE
                                  GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, CASE WHEN @QRY_TYPE = '2' THEN A.CUSTOM_CODE ELSE '' END
                                  ) C                        ON  C.COMP_CODE       = A.COMP_CODE
                                                            AND  C.DIV_CODE        = A.DIV_CODE
                                                            AND  C.ITEM_CODE       = A.ITEM_CODE
                                                            AND  C.CUSTOM_CODE     = CASE WHEN @QRY_TYPE = '2' THEN A.SUBCON_CODE ELSE C.CUSTOM_CODE END
                WHERE  A.TYPE_FLAG IN ('20', '21')
            END

        --  7. 월별 수불데이터 생성 -----------------------------------------------------------------------------------------
        --  월별수불 임시테이블 생성
            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#uniLITE200811181730'))
               DROP TABLE #uniLITE200811181730

            CREATE TABLE #uniLITE200811181730
                (
            --  일반정보
                ITEM_ACCOUNT        NVARCHAR(20)
              , ACCOUNT1            NVARCHAR(10)
              , ITEM_CODE           NVARCHAR(20)
              , ITEM_NAME           NVARCHAR(200)
              , SPEC                NVARCHAR(160)
              , STOCK_UNIT          NVARCHAR(03)
              , INOUT_DATE          NVARCHAR(10)

            --  수량정보
              , BASIS_Q             NUMERIC(30, 6)
              , IN_Q                NUMERIC(30, 6)
              , OUT_Q               NUMERIC(30, 6)
              , STOCK_Q             NUMERIC(30, 6)

            --  금액정보
              , BASIS_I             NUMERIC(30, 6)
              , IN_I                NUMERIC(30, 6)
              , OUT_I               NUMERIC(30, 6)
              , STOCK_I             NUMERIC(30, 6)

			  	--190415
			  , ETC_IN_Q            NUMERIC(30, 6)
			  , ETC_IN_I            NUMERIC(30, 6)
			  , ETC_OUT_Q            NUMERIC(30, 6)
			  , ETC_OUT_I            NUMERIC(30, 6)		
			  , MOVE_IN_Q            NUMERIC(30, 6)
			  , MOVE_IN_I            NUMERIC(30, 6)
			  , MOVE_OUT_Q            NUMERIC(30, 6)
			  , MOVE_OUT_I            NUMERIC(30, 6)			  
                )

        --  월별수불데이터 생성
            INSERT INTO #uniLITE200811181730
            (      ITEM_ACCOUNT,    ACCOUNT1,       ITEM_CODE,      ITEM_NAME,      SPEC
                 , STOCK_UNIT,      INOUT_DATE,     BASIS_Q,        IN_Q,           OUT_Q
                 , STOCK_Q,         BASIS_I,        IN_I,           OUT_I,          STOCK_I
				 , ETC_IN_Q, ETC_IN_I, ETC_OUT_Q, ETC_OUT_I, MOVE_IN_Q, MOVE_IN_I, MOVE_OUT_Q, MOVE_OUT_I		--20190420
            )
            SELECT
                   A.ITEM_ACCOUNT
                 , A.ACCOUNT1
                 , A.ITEM_CODE
                 , A.ITEM_NAME
                 , A.SPEC
                 , A.STOCK_UNIT
                 , A.INOUT_DATE
                 , A.BASIS_Q
                 , SUM(A.IN_Q)  AS IN_Q
                 , SUM(A.OUT_Q) AS OUT_Q
                 , A.STOCK_Q
                 , A.BASIS_I
                 , SUM(A.IN_I)  AS IN_I
                 , SUM(A.OUT_I) AS OUT_I
                 , A.STOCK_I

				 , SUM(A.ETC_IN_Q  ) AS ETC_IN_Q  
				 , SUM(A.ETC_IN_I  ) AS ETC_IN_I  
				 , SUM(A.ETC_OUT_Q ) AS ETC_OUT_Q 
				 , SUM(A.ETC_OUT_I ) AS ETC_OUT_I 
				 , SUM(A.MOVE_IN_Q ) AS MOVE_IN_Q 
				 , SUM(A.MOVE_IN_I ) AS MOVE_IN_I 
				 , SUM(A.MOVE_OUT_Q) AS MOVE_OUT_Q
				 , SUM(A.MOVE_OUT_I) AS MOVE_OUT_I	--20190420				 
            FROM   (
                   SELECT CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
                               WHEN @QRY_TYPE = '2' THEN ISNULL(D1.TREE_NAME, CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
                                                                                   WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
                                                                                   WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
                                                                                   ELSE D2.CUSTOM_NAME END)
                               ELSE '' END                                           AS ITEM_ACCOUNT
                        , CASE WHEN @QRY_TYPE = '1' THEN A.ITEM_ACCOUNT
                               WHEN @QRY_TYPE = '2' THEN CASE WHEN ISNULL(A.WH_CODE, '') != ''      THEN A.WH_CODE
                                                              ELSE 'ZZ' + ISNULL(A.SUBCON_CODE, '') END
                               ELSE '' END                                           AS ACCOUNT1
                        , A.ITEM_CODE
                        , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                               WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                               ELSE C1.ITEM_NAME
                          END                                                        AS ITEM_NAME
                        , ISNULL(C1.SPEC, '')                                        AS SPEC
                        , ISNULL(C1.STOCK_UNIT, '')                                  AS STOCK_UNIT
                        , LEFT(uniLITE.fnGetUserDate(A.COMP_CODE, A.INOUT_DATE), 7)  AS INOUT_DATE
                        , A.BASIS_Q
                        , A.IN_Q
                        , A.OUT_Q - A.RTN_Q                                          AS OUT_Q
                        , A.STOCK_Q
                        , A.BASIS_I
                        , A.IN_I
                        , A.OUT_I - A.RTN_I                                          AS OUT_I
                        , A.STOCK_I
						, ISNULL(A.ETC_IN_Q      ,0) AS ETC_IN_Q      
						, ISNULL(A.ETC_IN_I       ,0) AS  ETC_IN_I       
						, ISNULL(A.ETC_OUT_Q   ,0) AS  ETC_OUT_Q  
						, ISNULL(A.ETC_OUT_I    , 0) AS ETC_OUT_I     
						, ISNULL(A.MOVE_IN_Q   ,0) AS MOVE_IN_Q   
						, ISNULL(A.MOVE_IN_I    ,0) AS MOVE_IN_I    
						, ISNULL(A.MOVE_OUT_Q,0) AS MOVE_OUT_Q
						, ISNULL(A.MOVE_OUT_I	,0) AS MOVE_OUT_I		--20190420
                   FROM   #uniLITE200807111410 A  WITH (NOLOCK)
                          INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE       = A.COMP_CODE             -- 전사 품목
                                                               AND C1.ITEM_CODE       = A.ITEM_CODE
                          INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE       = A.COMP_CODE             -- 사업장 품목
                                                               AND C2.DIV_CODE        = A.DIV_CODE
                                                               AND C2.ITEM_CODE       = A.ITEM_CODE
                          LEFT  JOIN BSA220T   D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE             -- 창고코드
                                                               AND D1.TYPE_LEVEL      = A.DIV_CODE
                                                               AND D1.TREE_CODE       = A.WH_CODE
                                                               AND A.TYPE_FLAG       IN ('10', '11')
                          LEFT  JOIN BCM100T   D2 WITH (NOLOCK) ON D2.COMP_CODE       = A.COMP_CODE             -- 거래처코드
                                                               AND D2.CUSTOM_CODE     = A.SUBCON_CODE
                                                               AND A.TYPE_FLAG       IN ('20', '21')
                          LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE       = C2.COMP_CODE
                                                               AND M1.MAIN_CODE       = 'B020'                  -- 계정구분
                                                               AND M1.SUB_CODE        = C2.ITEM_ACCOUNT
                   WHERE  A.BASIS_Q  != 0
                   OR     A.BASIS_I  != 0
                   OR     A.IN_Q     != 0
                   OR     A.IN_I     != 0
                   OR     A.OUT_Q    != 0
                   OR     A.OUT_I    != 0
                   OR     A.RTN_Q    != 0
                   OR     A.RTN_I    != 0
                   OR     A.STOCK_Q  != 0
                   OR     A.STOCK_I  != 0

					OR 	A.ETC_IN_Q != 0		
					OR 	A.ETC_IN_I != 0
					OR 	A.ETC_OUT_Q != 0
					OR 	A.ETC_OUT_I != 0
					OR 	A.MOVE_IN_Q != 0
					OR 	A.MOVE_IN_I != 0
					OR 	A.MOVE_OUT_Q != 0
					OR 	A.MOVE_OUT_I != 0
					
        --         ORDER BY A.SORT_FLD
                   ) A
            GROUP BY A.ITEM_ACCOUNT, A.ACCOUNT1, A.ITEM_CODE, A.ITEM_NAME, A.SPEC
                   , A.STOCK_UNIT, A.INOUT_DATE, A.BASIS_Q, A.STOCK_Q, A.BASIS_I, A.STOCK_I
            ORDER BY A.ACCOUNT1, A.ITEM_CODE, A.INOUT_DATE
				 
        --  기초수량/금액 계산
            DECLARE         @StockQ             NUMERIC(30, 6)
                          , @StockI             NUMERIC(30, 6)
                          , @BasisQ             NUMERIC(30, 6)
                          , @BasisI             NUMERIC(30, 6)
                          , @PreItem            NVARCHAR(20)
                          , @Account            NVARCHAR(10)

            UPDATE A
            SET    @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@Account, '') != A.ACCOUNT1 THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
                 , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@Account, '') != A.ACCOUNT1 THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
                 , @StockQ   = ISNULL(@BasisQ, 0) + (A.IN_Q + A.ETC_IN_Q + A.MOVE_IN_Q) - (A.OUT_Q + A.ETC_OUT_Q + A.MOVE_OUT_Q)	--190415
                 , @StockI   = ISNULL(@BasisI, 0) + (A.IN_I + A.ETC_IN_I + A.MOVE_IN_I) - (A.OUT_I + A.ETC_OUT_I + A.MOVE_OUT_I)	--190415
                 , @PreItem  = A.ITEM_CODE
                 , @Account  = A.ACCOUNT1
                 , A.BASIS_Q = @BasisQ
                 , A.BASIS_I = @BasisI
                 , A.STOCK_Q = @StockQ
                 , A.STOCK_I = @StockI
            FROM   #uniLITE200811181730 A WITH (NOLOCK)

        -- 8. 데이터 조회 --------------------------------------------------------------------------------------------------
            SELECT ITEM_ACCOUNT
                 , Z.ACCOUNT1
                 , Z.ITEM_CODE
                 , Z.ITEM_NAME
                 , Z.SPEC
                 , Z.STOCK_UNIT
                 , Z.INOUT_DATE
                , Z.BASIS_Q
                 , Z.BASIS_I
                 , Z.IN_Q
                 , Z.IN_I
				, Z.ETC_IN_Q
				, Z.ETC_IN_I		
				, Z.MOVE_IN_Q
				, Z.MOVE_IN_I					
                 , Z.OUT_Q
				 , Z.OUT_I
				, Z.ETC_OUT_Q
				, Z.ETC_OUT_I	
				, Z.MOVE_OUT_Q
				, Z.MOVE_OUT_I				
				 , Z.STOCK_Q
				 , Z.STOCK_I
                 , Z.SORT_FLAG
             FROM(
                    SELECT
                       A.ITEM_ACCOUNT
                     , A.ACCOUNT1
                     , A.ITEM_CODE
                     , A.ITEM_NAME
                     , A.SPEC
                     , A.STOCK_UNIT
                     , A.INOUT_DATE
                    , A.BASIS_Q --기초수량
					 , A.BASIS_I -- 기초금액
					 , A.IN_Q  -- 입고수량
					 , A.IN_I  -- 입고금액
					--190415
					, A.ETC_IN_Q
					, A.ETC_IN_I					 
					 , A.OUT_Q  -- 출고수량
					 , A.OUT_I  -- 출고금액

					, A.ETC_OUT_Q
					, A.ETC_OUT_I					 
					 , A.STOCK_Q -- 재고수량
					 , A.STOCK_I -- 재고금액
					 , A.MOVE_IN_Q
					 , A.MOVE_IN_I
					 , A.MOVE_OUT_Q
					 , A.MOVE_OUT_I					 
                     , '1'                                                        AS SORT_FLAG
                FROM   #uniLITE200811181730 A  WITH (NOLOCK)

                WHERE  A.BASIS_Q  != 0
                OR     A.BASIS_I  != 0
                OR     A.IN_Q     != 0
                OR     A.IN_I     != 0
                OR     A.OUT_Q    != 0
                OR     A.OUT_I    != 0
                OR     A.STOCK_Q  != 0
                OR     A.STOCK_I  != 0

				OR 	A.ETC_IN_Q != 0		
				OR 	A.ETC_IN_I != 0
				OR 	A.ETC_OUT_Q != 0
				OR 	A.ETC_OUT_I != 0
				OR 	A.MOVE_IN_Q != 0
				OR 	A.MOVE_IN_I != 0
				OR 	A.MOVE_OUT_Q != 0
				OR 	A.MOVE_OUT_I != 0

                UNION ALL

                    SELECT
                           '' AS ITEM_ACCOUNT
                         , '' AS ACCOUNT1
                         , '' AS ITEM_CODE
                         , '' AS ITEM_NAME
                         , '' AS SPEC
                         , '총계' AS STOCK_UNIT
                         , '' AS INOUT_DATE
                      	,  SUM(A.BASIS_Q) AS BASIS_Q
						 ,  SUM(A.BASIS_I) AS BASIS_I
						 ,  SUM(A.IN_Q) AS IN_Q
						 ,  SUM(A.IN_I) AS IN_I
						--190415
						, SUM(A.ETC_IN_Q) AS ETC_IN_Q
						, SUM(A.ETC_IN_I) AS ETC_IN_I						 
						 ,  SUM(A.OUT_Q) AS OUT_Q
						 ,  SUM(A.OUT_I) AS OUT_I
						, SUM(A.ETC_OUT_Q) AS ETC_OUT_Q
						, SUM(A.ETC_OUT_I) AS ETC_OUT_I						 
						 ,  SUM(ISNULL(A.STOCK_Q,0)) AS STOCK_Q
						 ,  SUM(ISNULL(A.STOCK_I,0)) AS STOCK_I
						 , SUM(A.MOVE_IN_Q ) AS MOVE_IN_Q 
						 , SUM(A.MOVE_IN_I ) AS MOVE_IN_I 
						 , SUM(A.MOVE_OUT_Q) AS MOVE_OUT_Q
						 , SUM(A.MOVE_OUT_I) AS MOVE_OUT_I						 
                         , '2'                                                        AS SORT_FLAG
                    FROM   #uniLITE200811181730 A  WITH (NOLOCK)

                    WHERE  A.BASIS_Q  != 0
                    OR     A.BASIS_I  != 0
                    OR     A.IN_Q     != 0
                    OR     A.IN_I     != 0
                    OR     A.OUT_Q    != 0
                    OR     A.OUT_I    != 0
                    OR     A.STOCK_Q  != 0
                    OR     A.STOCK_I  != 0

					OR 	A.ETC_IN_Q != 0		
					OR 	A.ETC_IN_I != 0
					OR 	A.ETC_OUT_Q != 0
					OR 	A.ETC_OUT_I != 0
					OR 	A.MOVE_IN_Q != 0
					OR 	A.MOVE_IN_I != 0
					OR 	A.MOVE_OUT_Q != 0
					OR 	A.MOVE_OUT_I != 0					

             )  Z
                ORDER BY Z.SORT_FLAG, Z.ACCOUNT1, Z.ITEM_CODE, Z.INOUT_DATE

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
	</select>



	<select id="s_biv320skrv_inServiceImpl.detailDataList" parameterType="Map" resultType="rMap">
		/* s_biv320skrv_inServiceImpl.detailDataList */
		DECLARE @COMP_CODE  NVARCHAR(10)
			  , @DIV_CODE   NVARCHAR(10)
			  , @INOUT_TYPE NVARCHAR(10)
			  , @INOUT_YM   NVARCHAR(6)
			  , @ITEM_CODE  NVARCHAR(20)

		SET @COMP_CODE  = #{S_COMP_CODE}
		SET @DIV_CODE   = #{DIV_CODE}
		SET @INOUT_TYPE = #{INOUT_TYPE}
		SET @INOUT_YM   = #{INOUT_YM}
		SET @ITEM_CODE  = #{ITEM_CODE}

		SELECT A.ITEM_CODE
			 , A.INOUT_DATE
			 , A.INOUT_METH
			 , D.CODE_NAME AS METH_NAME
			 , A.INOUT_TYPE_DETAIL
			 , CASE WHEN @INOUT_TYPE = '1' THEN (CASE A.CREATE_LOC WHEN '1' THEN H.CODE_NAME WHEN '2' THEN G.CODE_NAME WHEN '4' THEN H.CODE_NAME ELSE '' END)
					ELSE  (CASE A.CREATE_LOC WHEN '1' THEN E.CODE_NAME WHEN '2' THEN C.CODE_NAME WHEN '4' THEN E.CODE_NAME ELSE '' END)
			   END AS INOUT_TYPE_NAME
			 , A.LOT_NO, A.INOUT_Q
			 , CASE WHEN Z.SUB_CODE='1' AND LEFT(B.ITEM_ACCOUNT,'1') IN  ('1','2') THEN B.BASIS_P ELSE A.INOUT_P END AS INOUT_P
			 , CASE WHEN Z.SUB_CODE='1' AND LEFT(B.ITEM_ACCOUNT,'1') IN  ('1','2') THEN B.BASIS_P ELSE A.INOUT_P END * A.INOUT_Q AS INOUT_I
			 , A.MOVE_TYPE
			 , A.CREATE_LOC
			 , F.CODE_NAME AS CREATE_LOC_NAME
		  FROM       BTR100T A  WITH(NOLOCK)
		  INNER JOIN BPR200T B  WITH(NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.ITEM_CODE=B.ITEM_CODE
		  LEFT  JOIN BSA100T C  WITH(NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.INOUT_TYPE_DETAIL=C.SUB_CODE AND C.MAIN_CODE='M104'--자재출고유형
		  LEFT  JOIN BSA100T D  WITH(NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.INOUT_METH=D.SUB_CODE AND D.MAIN_CODE='B036'--수불방법
		  LEFT  JOIN BSA100T E  WITH(NOLOCK) ON A.COMP_CODE=E.COMP_CODE AND A.INOUT_TYPE_DETAIL=E.SUB_CODE AND E.MAIN_CODE='S007'--영업출고유형
		  LEFT  JOIN BSA100T F  WITH(NOLOCK) ON A.COMP_CODE=F.COMP_CODE AND A.CREATE_LOC=F.SUB_CODE AND F.MAIN_CODE='B031'--생성경로
		  LEFT  JOIN BSA100T G  WITH(NOLOCK) ON A.COMP_CODE=G.COMP_CODE AND A.INOUT_TYPE_DETAIL=G.SUB_CODE AND G.MAIN_CODE='M103'--구매입고유형
		  LEFT  JOIN BSA100T H  WITH(NOLOCK) ON A.COMP_CODE=H.COMP_CODE AND A.INOUT_TYPE_DETAIL=H.SUB_CODE AND H.MAIN_CODE='S006'--영업입고유형
		  LEFT  JOIN BSA100T Z  WITH(NOLOCK) ON A.COMP_CODE=Z.COMP_CODE AND Z.MAIN_CODE='B069' AND Z.REF_CODE1='Y'--재고단가적용방법
		 WHERE A.COMP_CODE  = @COMP_CODE
		   AND A.DIV_CODE   = @DIV_CODE
		   AND A.INOUT_TYPE = @INOUT_TYPE
		   AND A.INOUT_DATE LIKE @INOUT_YM + '%'
		   AND A.ITEM_CODE  = @ITEM_CODE
		 ORDER BY A.INOUT_DATE, A.LOT_NO, A.INOUT_NUM, A.INOUT_SEQ
	</select>
</mapper>