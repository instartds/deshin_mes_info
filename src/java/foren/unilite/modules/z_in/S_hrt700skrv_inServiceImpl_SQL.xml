<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hrt700skrv_inServiceImpl">
	<select id="s_hrt700skrv_inServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_hrt700skrv_inServiceImpl.selectList */
		DECLARE
			@COMP_CODE		NVARCHAR(08)	= #{S_COMP_CODE}
			
		BEGIN
			SELECT A1.*
			     , CASE WHEN A1.MIDWAY_JOIN_AMT_SUB1 &lt;&gt; 0 THEN A1.MIDWAY_JOIN_AMT_SUB1 + A1.MIDWAY_JOIN_AMT_SUB2
			            ELSE 0 END                                              AS MIDWAY_JOIN_AMT
			  FROM (SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , D.DIV_NAME
						 , A.PERSON_NUMB
						 , B.NAME
						 , B.DEPT_CODE
						 , B.DEPT_NAME
						 , uniLITE.fnGetUserdateComp(B.COMP_CODE, B.JOIN_DATE)	AS JOIN_DATE               -- 입사일
						 , A.PENS_CUST_CODE                                                                -- 운영사코드
						 , C.CODE_NAME											AS PENS_CUST_NAME          -- 운영사
		 				 
		 				 ,  SUM(CASE WHEN A.WAGES_CODE = 'T05' AND 
						                    CHARINDEX(A.DIVISION_YN, 'Y') > 0 AND A.PAY_YYYYMM BETWEEN #{PAY_YYYYMM_FR} AND #{PAY_YYYYMM_TO}
																	THEN DATEDIFF(dd, B.JOIN_DATE, A.CALC_DATE) +1 
									ELSE 0 END) 								AS MIDWAY_DAYS               -- 중도입사자 산출일수
		 				 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND 
						                    CHARINDEX(A.DIVISION_YN, 'Y') > 0 AND A.PAY_YYYYMM BETWEEN #{PAY_YYYYMM_FR} AND #{PAY_YYYYMM_TO} THEN A.AMOUNT_I 
						            ELSE 0 END)                                 AS MIDWAY_JOIN_AMT_SUB1      -- 조회한 월 사이에 중도입사자의 산출액
						 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND 
						                 A.PAY_YYYYMM BETWEEN LEFT(B.JOIN_DATE, 6) AND 
										 		              LEFT(CONVERT(NVARCHAR(08), DATEADD(MONTH, -1, DATEADD(YEAR, 1, CONVERT(DATE, B.JOIN_DATE))), 112), 6)
									         THEN A.AMOUNT_I ELSE 0 END)        AS MIDWAY_JOIN_AMT_SUB2      -- 조회한 월 이전의 산출액의 합
									         
						 , SUM(CASE WHEN A.WAGES_CODE = 'RPI' AND 
						                 A.PAY_YYYYMM BETWEEN LEFT(B.JOIN_DATE, 6) AND LEFT(CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, CONVERT(DATE, #{PAY_YYYYMM_FR} + '01')), 112),6)
						                      THEN A.AMOUNT_I ELSE 0 END)    	AS BEFORE_AMT_RPI            -- 입사월부터 조회전월 까지 기준금
						 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND 
						                 A.PAY_YYYYMM BETWEEN LEFT(B.JOIN_DATE, 6) AND LEFT(CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, CONVERT(DATE, #{PAY_YYYYMM_FR} + '01')), 112),6)
						                      THEN A.AMOUNT_I ELSE 0 END)	    AS BEFORE_AMT_T05            -- 입사월부터 조회전월 까지 산출액
				<foreach collection="monthArray" item="item" separator="" close="" open="">
						 , SUM(CASE WHEN A.WAGES_CODE = 'RPI' AND A.PAY_YYYYMM = '${item}' THEN A.AMOUNT_I ELSE 0 END)	AS AMT_RPI_${item}    -- 해당월 기준금
						 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND A.PAY_YYYYMM = '${item}' THEN A.AMOUNT_I ELSE 0 END)	AS AMT_T05_${item}    -- 해당월 산출액
				</foreach>
						 , SUM(CASE WHEN A.WAGES_CODE = 'RPI' AND A.PAY_YYYYMM BETWEEN #{PAY_YYYYMM_FR} AND #{PAY_YYYYMM_TO} THEN A.AMOUNT_I ELSE 0 END)	AS SUM_AMT_RPI
						 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND A.PAY_YYYYMM BETWEEN #{PAY_YYYYMM_FR} AND #{PAY_YYYYMM_TO} THEN A.AMOUNT_I ELSE 0 END)	AS SUM_AMT_T05
						 , SUM(CASE WHEN A.WAGES_CODE = 'RPI' AND A.PAY_YYYYMM BETWEEN LEFT(B.JOIN_DATE, 6) AND #{PAY_YYYYMM_TO} THEN A.AMOUNT_I ELSE 0 END)	AS TOT_AMT_RPI    -- 총 기준금
						 , SUM(CASE WHEN A.WAGES_CODE = 'T05' AND A.PAY_YYYYMM BETWEEN LEFT(B.JOIN_DATE, 6) AND #{PAY_YYYYMM_TO} THEN A.AMOUNT_I ELSE 0 END)	AS TOT_AMT_T05    -- 총 산출액
					  FROM  S_HRT700T_IN A
							INNER JOIN		HUM100T B
										 ON A.COMP_CODE		= B.COMP_CODE
										AND A.PERSON_NUMB	= B.PERSON_NUMB
							LEFT OUTER JOIN BSA100T C
										 ON A.COMP_CODE		= C.COMP_CODE
										AND C.MAIN_CODE		= 'H221'
										AND A.PENS_CUST_CODE= C.SUB_CODE
							INNER JOIN		BOR120T D
										 ON A.COMP_CODE		= D.COMP_CODE
										AND A.DIV_CODE		= D.DIV_CODE
					 WHERE A.COMP_CODE		= @COMP_CODE
					   AND A.DIV_CODE	   IN
						<foreach collection="DIV_CODE" item="item" separator="," close=")" open="("> #{item} </foreach>
				<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
					   AND A.PERSON_NUMB	= #{PERSON_NUMB}
				</if>
				<if test="@foren.Ognl@isNotEmpty(JOIN_YYYYMM)">
					   AND B.JOIN_DATE	LIKE #{JOIN_YYYYMM} + '%'
				</if>
					 GROUP BY A.COMP_CODE
						 , A.DIV_CODE
						 , D.DIV_NAME
						 , A.PERSON_NUMB
						 , B.NAME
						 , B.DEPT_CODE
						 , B.DEPT_NAME
						 , uniLITE.fnGetUserdateComp(B.COMP_CODE, B.JOIN_DATE)
						 , A.PENS_CUST_CODE
						 , C.CODE_NAME
				 ) A1
		     ORDER BY A1.COMP_CODE
				    , A1.DIV_CODE
					, A1.DEPT_CODE
					, A1.NAME
		END
	</select>
</mapper>