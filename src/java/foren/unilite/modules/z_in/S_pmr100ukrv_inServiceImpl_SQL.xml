<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmr100ukrv_inServiceImpl">

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QStd] Query01
	 BEGIN
	     DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 9.) 법인코드
	              , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
	              , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 1.) 작업장코드
	              , @FROM_PRODT            NVARCHAR(08)        -- (선택 2.) From 착수예정일
	              , @TO_PRODT              NVARCHAR(08)        -- (선택 3.) To 착수예정일
	              , @ITEM_CODE             NVARCHAR(20)        -- (선택 4.) 품목코드
	              , @CONTROL_STATUS        NVARCHAR(01)        -- (선택 5.) 작업실적 상태
	              , @CONTROL_STATUS1       NVARCHAR(01)        -- (선택10.) 작업실적 상태
	              , @CONTROL_STATUS2       NVARCHAR(01)        -- (선택11.) 작업실적 상태
	              , @WKORD_NUM             NVARCHAR(20)        -- (선택 8.) 작업지시 번호
	              , @LOT_NO             NVARCHAR(20)        -- (선택 8.) 작업지시 번호
	              , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID

	     SET @COMP_CODE         = #{S_COMP_CODE}
	     SET @DIV_CODE          = #{DIV_CODE}
	     SET @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
	     SET @FROM_PRODT        = #{PRODT_START_DATE_FR}
	     SET @TO_PRODT          = #{PRODT_START_DATE_TO}
	     SET @ITEM_CODE         = #{ITEM_CODE}
	     SET @CONTROL_STATUS    = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS1   = #{CONTROL_STATUS}
	     SET @CONTROL_STATUS2   = #{CONTROL_STATUS}
	     SET @WKORD_NUM         = #{WKORD_NUM}
	     SET @LOT_NO         = #{LOT_NO}
	     SET @USER_ID           = #{S_USER_ID}

	     -- s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QStd] Query1
	     SELECT
	            A.*
	     FROM   (
	            SELECT ISNULL(A.wkord_status, '2') AS CONTROL_STATUS
	                 , A.WKORD_NUM
	                 , A.PROG_WORK_CODE
	                 , A.WORK_SHOP_CODE
	                 , A.ITEM_CODE
	                 , uniLITE.fnItemNameComp(A.comp_code, @USER_ID, A.item_code) AS ITEM_NAME
	                 , C1.SPEC
	                 , C1.STOCK_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS WKORD_Q
	                 , uniLITE.fnFormat(A.comp_code, A.work_q,  'P_FSET_QS') AS WORK_Q
	                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS PRODT_Q
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_start_date) AS PRODT_START_DATE
	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_end_date)   AS PRODT_END_DATE
	                 , A.REMARK
	                 , A.WK_PLAN_NUM
	                 , A.LINE_END_YN
	                 , A.WORK_END_YN
	                 , A.LINE_SEQ
	                 , A.PROG_UNIT
	                 , uniLITE.fnFormat(A.comp_code, A.prog_unit_q, 'P_FSET_QS')  AS PROG_UNIT_Q
	                 , C2.OUT_METH
	                 , '' AS AB
	                 , A.PROJECT_NO
	                 , A.PJT_CODE
	                 , A.LOT_NO
	                 , C2.RESULT_YN                               -- 생산실적시 영업 자동입고 방법
	                 , C2.INSPEC_YN                               -- 생산실적시 영업 출하검사 방법
	                 , C2.WH_CODE                                 -- 기준창고
	                 , ISNULL(C2.BASIS_P, 0) AS BASIS_P           -- 재고금액
	                 , A.DIV_CODE						          -- 사업장
	            FROM              PMP100TV1 A  WITH (NOLOCK)
	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.comp_code = A.comp_code
	                                                        AND C1.item_code = A.item_code
	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.comp_code = A.comp_code
	                                                        AND C2.div_code  = A.div_code
	                                                        AND C2.item_code = A.item_code
	            WHERE  A.comp_code         = @COMP_CODE
	            AND    A.div_code          = @DIV_CODE

	            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
				 AND    A.work_shop_code    = @WORK_SHOP_CODE
				</if>
	            AND    A.line_end_yn       = 'Y'
	            AND    A.work_end_yn       = CASE WHEN @CONTROL_STATUS != '8' THEN A.work_end_yn      ELSE 'Y'             END
	            AND    A.prodt_start_date &gt;= CASE WHEN @FROM_PRODT      = ''  THEN A.prodt_start_date ELSE @FROM_PRODT     END
	            AND    A.prodt_end_date   &lt;= CASE WHEN @TO_PRODT        = ''  THEN A.prodt_end_date   ELSE @TO_PRODT       END
	            AND    A.item_code      LIKE CASE WHEN @ITEM_CODE       = ''  THEN A.item_code        ELSE @ITEM_CODE      END + '%'
	            AND    A.wkord_num      LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.wkord_num        ELSE @WKORD_NUM      END + '%'
	            AND	   A.LOT_NO	LIKE '%' + CASE WHEN @LOT_NO       = ''  THEN A.LOT_NO        ELSE @LOT_NO      END + '%'
	            <if test="@foren.Ognl@isNotEmpty(PACK_TYPE)">
				AND	 ISNULL(C2.PACK_TYPE,'1') > '1'
				</if>
	            ) A
       WHERE 1=1
       <if test="@foren.Ognl@isNotEmpty(CONTROL_STATUS)">
        AND (A.CONTROL_STATUS = @CONTROL_STATUS OR (@CONTROL_STATUS='2' AND A.CONTROL_STATUS = (CASE WHEN @CONTROL_STATUS = '2' THEN '3' ELSE A.CONTROL_STATUS END)))
				</if>
	     ORDER BY A.PROG_WORK_CODE, A.PRODT_START_DATE, A.WORK_SHOP_CODE, A.WKORD_NUM
	 END
	</select>

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		<!-- 작업지시별등록 조회 -->
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt3] Query01
    BEGIN
        DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 5.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 2.) 작업지시 번호
                 , @WKORD_Q               NUMERIC(18, 6)      -- (선택 3.) 작업지시 수량
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 4.) 공정코드
                 , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}
        SET @WKORD_Q        = #{WKORD_Q}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}

        -- s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt3] Query1
        SELECT
               uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date)      AS PRODT_DATE
             , uniLITE.fnFormat(A.comp_code, A.prodt_q,     'P_FSET_QS') AS PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.good_prodt_q,'P_FSET_QS') AS GOOD_PRODT_Q
             , uniLITE.fnFormat(A.comp_code, A.bad_prodt_q, 'P_FSET_QS') AS BAD_PRODT_Q
             , B.DAY_NIGHT
             , B.MAN_HOUR
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q,      'P_FSET_QS') AS WKORD_Q
             , uniLITE.fnFormat(A.comp_code, A.prodt_q,     'P_FSET_QS') AS PRODT_SUM
             , uniLITE.fnFormat(A.comp_code, @WKORD_Q - ISNULL(A.prodt_q, 0), 'P_FSET_QS') AS JAN_Q
             , uniLITE.fnFormat(A.comp_code, ISNULL(A.in_stock_q, 0), 'P_FSET_QS')         AS IN_STOCK_Q
             , B.PRODT_NUM
             , @PROG_WORK_CODE      AS PROG_WORK_CODE
             , ISNULL(A.lot_no, '') AS LOT_NO
             , B.REMARK
             , B.PROJECT_NO
             , B.PJT_CODE
             , ISNULL(A.fr_serial_no, '') AS FR_SERIAL_NO
             , ISNULL(A.to_serial_no, '') AS TO_SERIAL_NO
             , '' AS UPDATE_DB_USER
             , '' AS UPDATE_DB_TIME
             , A.COMP_CODE
             , A.DIV_CODE
             --20180605 추가
			 , B.CONTROL_STATUS
			 , A.WKORD_NUM
        FROM              PMR200T  A  WITH (NOLOCK)
               INNER JOIN PMR110T  B  WITH (NOLOCK) ON B.comp_code = A.comp_code
                                                   AND B.div_code  = A.div_code
                                                   AND B.prodt_num = A.prodt_num
        WHERE  A.comp_code = @COMP_CODE
        AND    A.div_code  = @DIV_CODE
        AND    A.wkord_num = @WKORD_NUM
        ORDER BY B.prodt_date
    END
	</select>

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회1 -->
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt1] Query01  공정별등록 조회1
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호
                 , @USER_ID               NVARCHAR(100)

        SET @SHEET_TYPE     = ISNULL('SHEET1', 'SHEET1')
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}
        SET @USER_ID        = #{USER_ID}

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS SUM_Q
                -- , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_start_date) AS PRODT_DATE
                 --, 0 AS PASS_Q
                 , ISNULL(M1.BAD_Q,0) AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 --, 0 AS BAD_WORK_Q
                 , ISNULL(M1.BAD_QC_Q,0)  AS BAD_QC_Q
                 , ISNULL(M1.BAD_PROG_Q,0)  AS BAD_PROG_Q
                 , ISNULL(M1.BAD_Q,0) AS BAD_WORK_Q
                 , '1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , A.MOLD_CODE
                 , A.CAVIT_BASE_Q
--        				 , (SELECT REF_CODE1 FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='Z016' AND SUB_CODE=CASE WHEN LEFT(A.WORK_SHOP_CODE,1) ='S' THEN 'A' ELSE 'B' END) AS GOOD_WH_CODE
                 , (SELECT REF_CODE1 FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='Z016' AND SUB_CODE=CASE WHEN LEFT(A.WORK_SHOP_CODE,1) ='S' THEN (CASE WHEN A.PROG_WORK_CODE='P50' THEN 'C' ELSE 'A' END) ELSE CASE WHEN A.PROG_WORK_CODE='P50' THEN 'D' ELSE 'B' END END) AS GOOD_WH_CODE
        				 , (SELECT SUB_CODE FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B024' AND REF_CODE10=@USER_ID) AS GOOD_PRSN
        				 , (SELECT REF_CODE2 FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='Z016' AND SUB_CODE=CASE WHEN LEFT(A.WORK_SHOP_CODE,1) ='S' THEN 'A' ELSE 'B' END) AS BAD_WH_CODE
        				 , (SELECT SUB_CODE FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='B024' AND REF_CODE10=@USER_ID) AS BAD_PRSN
            	, '00:00' AS PRODT_START_TIME
            	, '00:00' AS PRODT_END_TIME
      				, A.WORK_SHOP_CODE
      				, A.ITEM_CODE
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
        				  LEFT  JOIN (
        								SELECT COMP_CODE, DIV_CODE, WKORD_NUM, WORK_SHOP_CODE, PROG_WORK_CODE
              								, SUM(BAD_Q) AS BAD_Q
              								, SUM(CASE WHEN BAD_CODE='1000' THEN BAD_Q ELSE 0 END) AS BAD_QC_Q
        								      , SUM(CASE WHEN BAD_CODE='1000' THEN 0 ELSE BAD_Q END) AS BAD_PROG_Q
        								FROM PMR300T WITH (NOLOCK)
        								GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, WORK_SHOP_CODE, PROG_WORK_CODE
        							) M1 ON M1.COMP_CODE=A.COMP_CODE AND M1.DIV_CODE=A.DIV_CODE AND M1.WKORD_NUM=A.WKORD_NUM AND M1.PROG_WORK_CODE=A.PROG_WORK_CODE AND M1.WORK_SHOP_CODE=A.WORK_SHOP_CODE
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			 AND    A.work_shop_code    = @WORK_SHOP_CODE
			</if>
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.BAD_QC_Q, 0),  'P_FSET_QS') AS BAD_QC_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.BAD_PROG_Q, 0),  'P_FSET_QS') AS BAD_PROG_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , 0 AS CAL_PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , NULL MOLD_CODE
                 , NULL CAVIT_BASE_Q
        				 , NULL AS GOOD_WH_CODE
        				 , NULL AS GOOD_PRSN
        				 , NULL AS BAD_WH_CODE
        				 , NULL AS BAD_PRSN
                 , ISNULL(B.WORK_SHOP_CODE,'') AS WORK_SHOP_CODE
                 , ISNULL(B.ITEM_CODE, '')     AS ITEM_CODE
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회2 -->
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt1] Query01   공정별등록 조회2
    BEGIN
        DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                 , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                 , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                 , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                 , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                 , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

        SET @SHEET_TYPE     = ISNULL('SHEET2', 'SHEET1')
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
        SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
        SET @WKORD_NUM      = #{WKORD_NUM}

        IF @SHEET_TYPE = 'SHEET1'
            SELECT
                   A.line_seq AS SEQ
                 , A.DIV_CODE
                 , A.PROG_WORK_CODE
                 , C1.PROG_WORK_NAME
                 , C1.PROG_UNIT
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS SUM_Q
                 , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                 , 0 AS PASS_Q
                 , 0 AS GOOD_WORK_Q
                 , 0 AS BAD_WORK_Q
                 ,'1' AS DAY_NIGHT
                 , 0 AS MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                 , 0 AS WORK_Q
                 , A.WKORD_NUM
                 , A.LINE_END_YN
                 , A.WK_PLAN_NUM
                 , '' AS PRODT_NUM
                 , '' AS CONTROL_STATUS
                 , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                 , '' AS FR_SERIAL_NO
                 , '' AS TO_SERIAL_NO
                 , '' AS REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
            FROM              PMP100T  A  WITH (NOLOCK)
                   LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                       AND C1.div_code       = A.div_code
                                                       AND C1.work_shop_code = A.work_shop_code
                                                       AND C1.prog_work_code = A.prog_work_code
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.wkord_num      = @WKORD_NUM
            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			 AND    A.work_shop_code    = @WORK_SHOP_CODE
			</if>
            ORDER BY RIGHT('00000' + A.line_seq, 5)
        ELSE
            SELECT
                   A.DIV_CODE
                 , A.PRODT_NUM
                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.BAD_QC_Q, 0),  'P_FSET_QS') AS BAD_QC_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.BAD_PROG_Q, 0),  'P_FSET_QS') AS BAD_PROG_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                 , A.DAY_NIGHT
                 , A.MAN_HOUR
                 , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                 , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                 , 0 AS CAL_PASS_Q
                 , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                 , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                 , A.REMARK
                 , '' AS UPDATE_DB_USER
                 , '' AS UPDATE_DB_TIME
                 , A.COMP_CODE
                 , A.PRODT_START_TIME
        		 , A.PRODT_END_TIME
            FROM              PMR100T  A  WITH (NOLOCK)
                   LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                       AND B.div_code   = A.div_code
                                                       AND B.wkord_num  = A.wkord_num
                                                       AND B.prodt_num  = A.prodt_num
                                                       AND B.prodt_date = A.prodt_date
            WHERE  A.comp_code      = @COMP_CODE
            AND    A.div_code       = @DIV_CODE
            AND    A.prog_work_code = @PROG_WORK_CODE
            AND    A.wkord_num      = @WKORD_NUM
            ORDER BY A.prodt_date, A.prodt_num
    END
	</select>

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList6" parameterType="Map" resultType="rMap">		<!-- 특이사항등록 조회 -->
	 --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt4] Query01
     SELECT
           A.DIV_CODE
         , A.WORK_SHOP_CODE
         , A.WKORD_NUM
         , A.PROG_WORK_CODE
         , B.PROG_WORK_NAME
         , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
         , A.CTL_CD1
         , A.TROUBLE_TIME
         , A.TROUBLE
         , A.TROUBLE_CS
         , A.ANSWER
         , A.SEQ
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , A.COMP_CODE
     FROM             PMR400T A WITH (NOLOCK)
           INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                             AND B.DIV_CODE       = A.DIV_CODE
                                             AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                             AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
           INNER JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                             AND C.MAIN_CODE      = 'P002'
                                             AND C.sub_code       = A.CTL_CD1
     WHERE A.COMP_CODE      = #{S_COMP_CODE}
     AND   A.DIV_CODE       = #{DIV_CODE}
     <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
	 AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
	</if>
     AND   A.WKORD_NUM      = #{WKORD_NUM}
     ORDER BY A.PRODT_DATE, A.PROG_WORK_CODE, A.CTL_CD1
	</select>

<!-- 등록 -->
	<update id="s_pmr100ukrv_inServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

	<insert id="s_pmr100ukrv_inServiceImpl.insertDetail2" parameterType="Map">		/* 작업지시별등록 추가 */
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav2] Query2
	 INSERT INTO PMR110T
	      ( COMP_CODE
		  , DIV_CODE
	      , PRODT_NUM
		  , WORK_SHOP_CODE
	      , WKORD_NUM
		  , ITEM_CODE
	      , PRODT_DATE
		  , PRODT_Q
	      , GOOD_PRODT_Q
		  , BAD_PRODT_Q
	      , CONTROL_STATUS
	      , DAY_NIGHT
		  , MAN_HOUR
	      , REMARK
		  , PROJECT_NO
		  , PJT_CODE
	      , LOT_NO
	      , FR_SERIAL_NO
		  , TO_SERIAL_NO
	      , UPDATE_DB_USER
		  , UPDATE_DB_TIME)
	 VALUES
	      ( #{S_COMP_CODE}
	      , #{DIV_CODE}
	      , #{PRODT_NUM}
	      , #{WORK_SHOP_CODE}
	      , #{WKORD_NUM}
	      , #{ITEM_CODE}
	      , #{PRODT_DATE}
	      , #{PRODT_Q}
	      , #{GOOD_PRODT_Q}
	      , #{BAD_PRODT_Q}
	      , #{CONTROL_STATUS}
	      , #{DAY_NIGHT}
	      , #{MAN_HOUR}
	      , #{REMARK}
	      , #{PROJECT_NO}
	      , #{PJT_CODE}
	      , #{LOT_NO}
	      , #{FR_SERIAL_NO}
	      , #{TO_SERIAL_NO}
	      , #{S_USER_ID}
	      , getDate())
	</insert>

	<update id="s_pmr100ukrv_inServiceImpl.updateDetail2" parameterType="Map">
        --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav1] Query2
        UPDATE PMR110T
           SET PRODT_DATE     = #{PRODT_DATE}
             , WORK_SHOP_CODE = #{WORK_SHOP_CODE}
             , PRODT_Q         = #{PRODT_Q}
             , GOOD_PRODT_Q    = #{GOOD_PRODT_Q}
             , BAD_PRODT_Q     = #{BAD_PRODT_Q}
             , WKORD_NUM      = #{WKORD_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , DAY_NIGHT      = #{DAY_NIGHT}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="s_pmr100ukrv_inServiceImpl.deleteDetail2" parameterType="Map">
		--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav1] Query1
        DELETE FROM PMR110T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>

	<update id="s_pmr100ukrv_inServiceImpl.updateMoldPlus" parameterType="Map">
        /* s_pmr100ukrv_inServiceImpl.updateMold */
        UPDATE EQU200T
           SET WORK_Q     = WORK_Q + CEILING(${PASS_Q} / ${CAVIT_BASE_Q})

             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND EQU_CODE      = #{MOLD_CODE}
    </update>

	<update id="s_pmr100ukrv_inServiceImpl.updateMoldMinus" parameterType="Map">
        /* s_pmr100ukrv_inServiceImpl.updateMold */
        UPDATE EQU200T
           SET WORK_Q     = (CASE WHEN WORK_Q - CEILING(${PASS_Q} / ${CAVIT_BASE_Q}) &lt; 0 THEN 0
            					 ELSE WORK_Q - CEILING(${PASS_Q} / ${CAVIT_BASE_Q})
            				END)
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND EQU_CODE      = #{MOLD_CODE}
    </update>

	<insert id="s_pmr100ukrv_inServiceImpl.insertDetail3" parameterType="Map">		/* 공정별등록 추가1 */
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav1] Query3
  SET NOCOUNT ON
  BEGIN
  	INSERT INTO PMR100T
  	     ( COMP_CODE
  	     , DIV_CODE
  	     , PRODT_NUM
  	     , PRODT_DATE
  	     , PROG_WORK_CODE
  	     , PROG_WKORD_Q
  	     , WORK_Q
  	     , PASS_Q
  	     , GOOD_WORK_Q
  	     , BAD_QC_Q
  	     , BAD_PROG_Q
  	     , BAD_WORK_Q
  	     , DAY_NIGHT
  	     , WKORD_NUM
  	     , LINE_END_YN
  	     , WK_PLAN_NUM
  	     , CONTROL_STATUS
  	     , MAN_HOUR
  	     , REMARK
  	     , PROJECT_NO
  	     , PJT_CODE, LOT_NO
  	     , FR_SERIAL_NO
  	     , TO_SERIAL_NO
  	     , INSERT_DB_USER
  	     , INSERT_DB_TIME
  	     , UPDATE_DB_USER
  	     , UPDATE_DB_TIME
  	     , PRODT_START_TIME
  	     , PRODT_END_TIME
  	     )
  	VALUES
  	     ( #{S_COMP_CODE}
  	     , #{DIV_CODE}
  	     , #{PRODT_NUM}
  	     , #{PRODT_DATE}
  	     , #{PROG_WORK_CODE}
  	     , #{PROG_WKORD_Q}
  	     , #{GOOD_WORK_Q} + #{BAD_WORK_Q}
  	     , #{PASS_Q}
  	     , #{GOOD_WORK_Q}
  	     , #{BAD_QC_Q}
  	     , #{BAD_PROG_Q}
  	     , #{BAD_WORK_Q}
  	     , #{DAY_NIGHT}
  	     , #{WKORD_NUM}
  	     , #{LINE_END_YN}
  	     , #{WK_PLAN_NUM}
  	     , #{CONTROL_STATUS}
  	     , #{MAN_HOUR}
  	     , #{REMARK}
  	     , #{PROJECT_NO}
  	     , #{PJT_CODE}
  	     , #{LOT_NO}
  	     , #{FR_SERIAL_NO}
  	     , #{TO_SERIAL_NO}
  	     , #{S_USER_ID}
  	     , getDate()
  	     , #{S_USER_ID}
  	     , getDate()
  	     , #{PRODT_START_TIME}
  	     , #{PRODT_END_TIME}
  	     )



        IF NOT EXISTS (SELECT TOP 1 1 FROM  PMR300T WHERE COMP_CODE=#{S_COMP_CODE} AND DIV_CODE=#{DIV_CODE} AND WKORD_NUM=#{WKORD_NUM} AND BAD_CODE='1000')
        	INSERT INTO PMR300T (COMP_CODE, DIV_CODE, BAD_CODE, WKORD_NUM, PROG_WORK_CODE, PRODT_DATE, WORK_SHOP_CODE, ITEM_CODE, BAD_Q, INSERT_DB_USER, UPDATE_DB_USER)
        	VALUES (#{S_COMP_CODE}, #{DIV_CODE}, '1000', #{WKORD_NUM}, #{PROG_WORK_CODE}, #{PRODT_DATE}, #{WORK_SHOP_CODE}, #{ITEM_CODE}, #{BAD_QC_Q}, #{S_USER_ID}, #{S_USER_ID})
        ELSE
        	UPDATE PMR300T SET BAD_Q = #{BAD_QC_Q}
        	WHERE COMP_CODE=#{S_COMP_CODE} AND DIV_CODE=#{DIV_CODE} AND WKORD_NUM=#{WKORD_NUM} AND BAD_CODE='1000'

  END
  SET NOCOUNT OFF

	--이문을 먼저 실행해야 결과를 얻을수 있습니다.  라는 오류 때문에 임의로 강제 지정
	UPDATE PMR300T SET TEMPC_01='1' WHERE 1=2

	</insert>

	<update id="s_pmr100ukrv_inServiceImpl.updateDetail3" parameterType="Map">
        --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav1] Query2
        UPDATE PMR100T
           SET PRODT_DATE     = #{PRODT_DATE}
             , PROG_WORK_CODE = #{PROG_WORK_CODE}
             , PROG_WKORD_Q   = #{PROG_WKORD_Q}
             , WORK_Q         = #{WORK_Q}
             , PASS_Q         = #{PASS_Q}
             , GOOD_WORK_Q    = #{GOOD_WORK_Q}
             , BAD_QC_Q       = #{BAD_QC_Q}
             , BAD_PROG_Q     = #{BAD_PROG_Q}
             , BAD_WORK_Q     = #{BAD_WORK_Q}
             , DAY_NIGHT      = #{DAY_NIGHT}
             , WKORD_NUM      = #{WKORD_NUM}
             , LINE_END_YN    = #{LINE_END_YN}
             , WK_PLAN_NUM    = #{WK_PLAN_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="s_pmr100ukrv_inServiceImpl.deleteDetail3" parameterType="Map">
		--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav1] Query1
        DELETE FROM PMR100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>


	<update id="s_pmr100ukrv_inServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{BAD_WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC         ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

	<select id="s_pmr100ukrv_inServiceImpl.beforeSaveCheck" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회1 -->
		SELECT TOP 1 WKORD_NUM
			FROM PMR300T
			WHERE COMP_CODE = #{S_COMP_CODE}
				AND DIV_CODE = #{DIV_CODE}
				AND WKORD_NUM = #{WKORD_NUM}
				AND ITEM_CODE = #{ITEM_CODE}
	</select>

	<select id="s_pmr100ukrv_inServiceImpl.selectDetailList5" parameterType="Map" resultType="rMap">		<!-- 불량내역등록 조회 -->
	--s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100QSt2] Query01
	  	SELECT  B.DIV_CODE
	  		, B.WORK_SHOP_CODE
	  		, B.WKORD_NUM
	  		, B.PROG_WORK_CODE
	  		, D.PROG_WORK_NAME AS PROG_WORK_NAME
	  		, uniLITE.fnGetUserDateComp(B.comp_code, B.prodt_start_date) AS PRODT_DATE
	  		--, uniLITE.fnGetUserDateComp(A.comp_code, ISNULL(C.PRODT_DATE, CONVERT(VARCHAR(8), GETDATE(), 112)  )) AS PRODT_DATE
	  		, B.ITEM_CODE
	  		, A.SUB_CODE AS BAD_CODE
	  		, A.CODE_NAME AS BAD_NAME
	  		, unilite.fnFormat(A.COMP_CODE, ISNULL(C.BAD_Q,0), 'P_FSET_QS')  AS BAD_Q
	  		, ISNULL(C.REMARK,'') AS REMARK
	  		, C.UPDATE_DB_USER
	  		, C.UPDATE_DB_TIME
	  		, B.COMP_CODE
	  		, (SELECT TOP 1 CASE WHEN ISNULL(CC.WKORD_NUM,'') = '' THEN 'N' ELSE 'Y' END FROM PMR300T CC WHERE CC.WKORD_NUM	= #{WKORD_NUM} AND C.BAD_CODE = CC.BAD_CODE) AS CHECK_VALUE
	     FROM BSA100T A WITH (NOLOCK)
	  	 	LEFT JOIN PMP100T B WITH (NOLOCK) ON A.COMP_CODE	= B.COMP_CODE
	  	 										 AND B.DIV_CODE 	= #{DIV_CODE}
	  	 										 AND B.WKORD_NUM	= #{WKORD_NUM}
                           AND B.LINE_END_YN='Y'
	  	 	LEFT JOIN PMR300T C WITH (NOLOCK) ON A.COMP_CODE	= C.COMP_CODE
	  	 										 AND B.DIV_CODE		= C.DIV_CODE
	  	 										 AND A.SUB_CODE		= C.BAD_CODE
	  	 										 AND C.WKORD_NUM	= #{WKORD_NUM}
	  	 	LEFT JOIN PBS200T D WITH (NOLOCK) ON B.COMP_CODE		= D.COMP_CODE
	  	 										 AND B.DIV_CODE			= D.DIV_CODE
	  	 										 AND B.PROG_WORK_CODE	=	D.PROG_WORK_CODE
	  	 										 AND B.WORK_SHOP_CODE	=	D.WORK_SHOP_CODE
	  WHERE A.COMP_CODE='MASTER'
	  AND A.MAIN_CODE = 'P003'
	  AND A.SUB_CODE != '$'
	  AND A.REF_CODE2 = ISNULL(B.PROG_WORK_CODE,'')
	  --20200428 추가
	  AND A.USE_YN    = 'Y'
	  ORDER BY A.SORT_SEQ, A.SUB_CODE
	 </select>

	<insert id="s_pmr100ukrv_inServiceImpl.insertDetail5" parameterType="Map">		/* 불량내역등록 추가 */
	INSERT INTO PMR300T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , ITEM_CODE
		 , BAD_CODE
		 , BAD_Q
		 , REMARK
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE )
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{ITEM_CODE}
		 , #{BAD_CODE}
		 , #{BAD_Q}
		 , #{REMARK}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE} )
	</insert>

    <update id="s_pmr100ukrv_inServiceImpl.updateDetail5" parameterType="Map">        /* 불량내역등록 수정 */
         --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav2] Query1


         IF NOT EXISTS(SELECT TOP 1 1 FROM PMR300T WHERE COMP_CODE=#{S_COMP_CODE} AND DIV_CODE=#{DIV_CODE} AND WKORD_NUM=#{WKORD_NUM} AND WORK_SHOP_CODE=#{WORK_SHOP_CODE} AND PROG_WORK_CODE=#{PROG_WORK_CODE} AND BAD_CODE=#{BAD_CODE})

            	INSERT INTO PMR300T
            	     ( DIV_CODE
            		 , WORK_SHOP_CODE
            		 , WKORD_NUM
            		 , PROG_WORK_CODE
            		 , PRODT_DATE
            		 , ITEM_CODE
            		 , BAD_CODE
            		 , BAD_Q
            		 , REMARK
            		 , UPDATE_DB_USER
            		 , UPDATE_DB_TIME
            		 , COMP_CODE )
            	VALUES
            	     ( #{DIV_CODE}
            		 , #{WORK_SHOP_CODE}
            		 , #{WKORD_NUM}
            		 , #{PROG_WORK_CODE}
            		 , #{PRODT_DATE}
            		 , #{ITEM_CODE}
            		 , #{BAD_CODE}
            		 , #{BAD_Q}
            		 , #{REMARK}
            		 , #{S_USER_ID}
            		 , getDate()
            		 , #{S_COMP_CODE} )

		    ELSE

           UPDATE PMR300T
              SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
                , ITEM_CODE      = #{ITEM_CODE}
                , BAD_Q          = #{BAD_Q}
                , REMARK         = #{REMARK}
                , UPDATE_DB_USER = #{S_USER_ID}
                , UPDATE_DB_TIME = GETDATE()

            WHERE DIV_CODE       = #{DIV_CODE}
              AND WKORD_NUM      = #{WKORD_NUM}
              AND PROG_WORK_CODE = #{PROG_WORK_CODE}
              AND PRODT_DATE     = #{PRODT_DATE}
              AND BAD_CODE       = #{BAD_CODE}
              AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_inServiceImpl.deleteDetail5" parameterType="Map">        /* 불량내역등록 삭제 */
        --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav2] Query1
        DELETE FROM PMR300T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND BAD_CODE       = #{BAD_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>

	 <insert id="s_pmr100ukrv_inServiceImpl.insertDetail6" parameterType="Map">		/* 특이사항등록 추가 */
	 INSERT INTO PMR400T
	     ( DIV_CODE
		 , WORK_SHOP_CODE
		 , WKORD_NUM
		 , PROG_WORK_CODE
		 , PRODT_DATE
		 , CTL_CD1
		 , TROUBLE_TIME
		 , TROUBLE
		 , TROUBLE_CS
		 , ANSWER
		 , SEQ
		 , UPDATE_DB_USER
		 , UPDATE_DB_TIME
		 , COMP_CODE )
	VALUES
	     ( #{DIV_CODE}
		 , #{WORK_SHOP_CODE}
		 , #{WKORD_NUM}
		 , #{PROG_WORK_CODE}
		 , #{PRODT_DATE}
		 , #{CTL_CD1}
		 , #{TROUBLE_TIME}
		 , #{TROUBLE}
		 , #{TROUBLE_CS}
		 , #{ANSWER}
		 , #{SEQ}
		 , #{S_USER_ID}
		 , getDate()
		 , #{S_COMP_CODE} )
	 </insert>

	<update id="s_pmr100ukrv_inServiceImpl.updateDetail6" parameterType="Map">        /* 특이사항등록 수정 */
         --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav4] Query1
         UPDATE PMR400T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , CTL_CD1        = #{CTL_CD1}
              , TROUBLE_TIME   = #{TROUBLE_TIME}
              , TROUBLE        = #{TROUBLE}
              , TROUBLE_CS     = #{TROUBLE_CS}
              , ANSWER         = #{ANSWER}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND SEQ            = #{SEQ}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_inServiceImpl.deleteDetail6" parameterType="Map">        /* 특이사항등록 삭제 */
        --s_pmr100ukrv_in.Cs_pmr100ukrv_in[fnPmr100Sav4] Query1
        DELETE FROM PMR400T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND SEQ            = #{SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>

	<select id="s_pmr100ukrv_inServiceImpl.spBadResultMoving" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE	NVARCHAR(10)
		      , @DIV_CODE	NVARCHAR(10)
		      , @WKORD_NUM	NVARCHAR(20)
		      , @USER_ID	NVARCHAR(100)
		      , @ERR_DESC	NVARCHAR(2000)

		SET @COMP_CODE	= #{S_COMP_CODE}
		SET @DIV_CODE	= #{DIV_CODE}
		SET @WKORD_NUM	= #{WKORD_NUM}
		SET @USER_ID	= #{S_USER_ID}
		SET @ERR_DESC	= ''
	
		EXEC UNILITE.USP_PRODT_BadResultMoving_IN @COMP_CODE, @DIV_CODE, @WKORD_NUM, @USER_ID, @ERR_DESC OUTPUT
	
		SELECT ISNULL(@ERR_DESC, '')  AS errorDesc
	</select>
</mapper>