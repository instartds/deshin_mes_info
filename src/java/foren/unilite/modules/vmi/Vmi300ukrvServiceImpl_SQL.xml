<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vmi300ukrvServiceImpl">
	<select id="vmi300ukrvServiceImpl.oldPwdCheck" parameterType="Map" resultType="rMap">
		SELECT TOP 1 1
		  FROM BSA350T A WITH (NOLOCK)
		 WHERE A.USER_ID= #{S_USER_ID}
		   AND (( A.PASSWORD  = #{OLD_PWD}) OR (pwdcompare(#{OLD_PWD}, A.password) = 1 ) )
	</select>

<!-- 20210426 추가: 체크로직(checkEncryptYN, pwRuleCheck, pwCheckQ, pwDuplicateCheck, pwSameCheck) 추가 -->
	<select id="vmi300ukrvServiceImpl.checkEncryptYN" parameterType="Map" resultType="rMap">
		/* vmi300ukrvServiceImpl.checkEncryptYN */
		SELECT TOP 1 1                          AS CNT
		     , ISNULL((
		               SELECT TOP 1 UPPER(REF_CODE5) AS CASE_SENS_YN 
		                 FROM BSA100T WITH (NOLOCK)
		                WHERE COMP_CODE = 'MASTER'
		                  AND MAIN_CODE = 'B110'
		                  AND SUB_CODE  = '40'
		                  AND USE_YN    = 'Y'
		     ),'N')                             AS CASE_SENS_YN
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = 'MASTER'
		   AND MAIN_CODE = 'B239'
		   AND SUB_CODE  = '10'
		   AND REF_CODE2 = 'Y'
	</select>

	<select id="vmi300ukrvServiceImpl.pwRuleCheck" parameterType="Map" resultType="rMap">
		/* vmi300ukrvServiceImpl.pwRuleCheck */
		SELECT CHAR_TYPE, ALLOW_VALUE FROM PWD100T WITH (NOLOCK)
	</select>

	<select id="vmi300ukrvServiceImpl.pwCheckQ" parameterType="Map" resultType="rMap">
		/* bsa310ukrv.CPassword (fnPwdRegCheck-2) 기존비밀번호 체크 갯수 */
		SELECT TOP 1 CASE WHEN ISNULL(REF_CODE1,'')='' THEN 0
		                  ELSE CONVERT(NUMERIC(10,0), REF_CODE5)
		             END                                         AS CYCLE_CNT
		  FROM BSA100T WITH (NOLOCK) 
		 WHERE COMP_CODE = 'MASTER'
		   AND MAIN_CODE = 'B110'
		   AND SUB_CODE  = '20'
	</select>

	<select id="vmi300ukrvServiceImpl.pwDuplicateCheck" parameterType="Map" resultType="rMap">
		SELECT TOP 1 1
		  FROM BSA350T A WITH (NOLOCK)
		 WHERE A.USER_ID  = #{S_USER_ID}
		   AND pwdcompare(#{NEW_PWD}, A.password) = 1
	</select>

	<select id="vmi300ukrvServiceImpl.pwSameCheck" parameterType="Map" resultType="rMap">
		/* vmi300ukrvServiceImpl.pwSameCheck */
		SET NOCOUNT ON
		    SELECT ISNULL(MAX(CHANGE_CNT),0)- #{DCYCLE_CNT}  AS CHECK_SEQ, COMP_CODE, USER_ID
		      INTO #USER_INFO
		      FROM LOG200T WITH (NOLOCK)
		     WHERE COMP_CODE > '' AND USER_ID= #{S_USER_ID}
		     GROUP BY COMP_CODE, USER_ID
		SET NOCOUNT OFF

		SELECT  TOP 1 1
		  FROM       LOG200T    A WITH (NOLOCK)
		  INNER JOIN #USER_INFO B ON A.COMP_CODE = B.COMP_CODE
		                         AND A.USER_ID   = B.USER_ID
		 WHERE A.COMP_CODE > ''
		   AND A.USER_ID    = #{S_USER_ID}
		   AND A.CHANGE_CNT > B.CHECK_SEQ
		   AND UPPER(uniLITE.fnCipherDecrypt(PASSWORD, '')) = UPPER(#{NEW_PWD})

		DROP TABLE #USER_INFO
	</select>




	<select id="vmi300ukrvServiceImpl.encryptionYN" parameterType="Map" resultType="rMap">
		/* UBsa01Krv.CBsa400UKr[fnSetChangePass] Query01  암호화 적용여부체크 */
		--20210427 추가
		SELECT TOP 1 1 AS CNT
		     , ISNULL((
		         SELECT TOP 1 UPPER(REF_CODE5) AS CASE_SENS_YN 
		           FROM BSA100T WITH (NOLOCK)
		          WHERE COMP_CODE = 'MASTER'
		            AND MAIN_CODE = 'B110'
		            AND SUB_CODE  = '40'
		            AND USE_YN    = 'Y'
		     ),'N') AS CASE_SENS_YN
		  FROM BSA100T WITH (NOLOCK) 
		 WHERE COMP_CODE = 'MASTER' 
		   AND MAIN_CODE = 'B239'
		   AND SUB_CODE  = '10'
		   AND REF_CODE2 = 'Y'
	</select>

	<update id="vmi300ukrvServiceImpl.encryptionSavePw" parameterType="Map">
		UPDATE BSA350T
		   SET PASSWORD           = PWDENCRYPT(#{NEW_PWD})
		     , PWD_UPDATE_DB_TIME = GETDATE()
		     , UPDATE_DB_USER     = #{S_USER_ID}
		     , UPDATE_DB_TIME     = GETDATE()
		 WHERE COMP_CODE &gt; '' AND USER_ID  = #{S_USER_ID}

		IF EXISTS (SELECT TOP 1 1 FROM BSA301T WITH (NOLOCK) WHERE COMP_CODE &gt; '' AND USER_ID=#{S_USER_ID})
		    UPDATE BSA301T
		       SET PASSWORD = uniLITE.fnCipherEncrypt(#{NEW_PWD}, '')
		         , UPDATE_DB_TIME = GETDATE()
		         , UPDATE_DB_USER = #{S_USER_ID}
		     WHERE COMP_CODE &gt; '' AND USER_ID  = #{S_USER_ID}

		ELSE
		    INSERT INTO BSA301T (COMP_CODE, USER_ID, PASSWORD, INSERT_DB_USER, UPDATE_DB_USER)
		    SELECT COMP_CODE, USER_ID, uniLITE.fnCipherEncrypt(#{NEW_PWD}, '') PASSWORD, #{S_USER_ID} INSERT_DB_USER, #{S_USER_ID} UPDATE_DB_USER
		      FROM BSA350T WITH (NOLOCK)
		     WHERE COMP_CODE &gt; ''
		       AND USER_ID   = #{S_USER_ID}
	</update>
<!-- 20210427 추가 -->
	<update id="vmi300ukrvServiceImpl.insertPasswordLog" parameterType="Map">
		/* vmi300ukrvServiceImpl.insertPasswordLog */
		DECLARE @COMP_CODE NVARCHAR(10), @USER_ID NVARCHAR(20), @CASE_SENS_YN NVARCHAR(10), @ENCRYPT_YN NVARCHAR(10)
		SET @COMP_CODE  = ''
		SET @USER_ID    = #{S_USER_ID}
		IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME='LOG200T' AND XTYPE='U')
		BEGIN
		    SELECT  @CASE_SENS_YN = ISNULL((SELECT TOP 1 UPPER(REF_CODE5)            --외부사용자는 REF_CODE5 사용
		                                      FROM BSA100T WITH (NOLOCK)
		                                     WHERE COMP_CODE = 'MASTER'
		                                       AND MAIN_CODE = 'B110'
		                                       AND SUB_CODE  = '40'
		                                       AND USE_YN    = 'Y'),'N') ,
		            @ENCRYPT_YN   = ISNULL((SELECT TOP 1 REF_CODE2                   --외부사용자는 REF_CODE2 사용
		                                      FROM BSA100T WITH (NOLOCK)
		                                     WHERE COMP_CODE = 'MASTER'
		                                       AND MAIN_CODE = 'B239'
		                                       AND SUB_CODE  = '10'), 'N')

		    IF @CASE_SENS_YN IS NULL OR @CASE_SENS_YN = ''
		        SET @CASE_SENS_YN = 'N'

		    IF @ENCRYPT_YN = 'Y'
		    BEGIN
		        IF EXISTS (SELECT TOP 1 1 FROM LOG200T WITH (NOLOCK) WHERE COMP_CODE &gt; '' AND USER_ID=@USER_ID)
		            INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
		            SELECT TOP 1 COMP_CODE, USER_ID, MAX(CHANGE_CNT)+1, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{NEW_PWD} ELSE UPPER(#{NEW_PWD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
		              FROM LOG200T WITH (NOLOCK)
		             WHERE COMP_CODE &gt; '' AND USER_ID=@USER_ID
		             GROUP BY COMP_CODE, USER_ID
		        ELSE
		            INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
		            SELECT TOP 1 COMP_CODE, @USER_ID USER_ID, 1 CHANGE_CNT, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{NEW_PWD} ELSE UPPER(#{NEW_PWD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
		              FROM BSA350T WITH (NOLOCK)
		             WHERE COMP_CODE &gt; ''
		               AND USER_ID   = @USER_ID
		    END
		END
	</update>
</mapper>