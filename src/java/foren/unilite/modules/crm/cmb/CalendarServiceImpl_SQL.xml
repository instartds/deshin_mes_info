<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="calendarServiceImpl">

	<select id="calendarServiceImpl.dummy" parameterType="Map" resultType="rMap">
		select a from dual
	</select>
	
	
	<select id="calendarServiceImpl.getCalendarList" parameterType="Map" resultType="foren.unilite.modules.crm.cmb.model.CalendarModel">		
		select 'MP' id, '계획' title, 2 color
		union 
		select 'MR' id, '계획' title, 22 color
		union 
		select 'MPR' id, '전체' title, 25 color		
	</select>
	
	<update id="calendarServiceImpl.upadtePlanDate" parameterType="Map">
		UPDATE CMD100T set PLAN_DATE = #{startDate}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = getDate()
		where COMP_CODE = #{S_COMP_CODE} 
	 			AND DOC_NO = #{DOC_NO} 
	</update>


	<select id="calendarServiceImpl.getEventList" parameterType="Map" resultType="HashMap">
		/* calendarServiceImpl.getEventList */
DECLARE @S_COMP_CODE NVARCHAR(08)
	,@S_USER_ID NVARCHAR(100)
	,@DEPT_CODE NVARCHAR(20)
	,@startDate NVARCHAR(20)
	,@endDate NVARCHAR(20)
	,@QRY_TYPE NVARCHAR(10)
	,@PROJECT_OPT NVARCHAR(10)

	set @S_COMP_CODE = #{S_COMP_CODE}
	set @S_USER_ID = #{S_USER_ID}
	set @DEPT_CODE = #{S_DEPT_CODE}
	set @startDate = #{startDate}
	set @endDate = #{endDate}
	set @QRY_TYPE = #{QRY_TYPE}
	set @PROJECT_OPT = #{PROJECT_OPT}

SELECT ROW_NUMBER() over(order by x1.DOC_NO) id
	,X1.DOC_DATE startDate
	,X1.DOC_DATE endDate
	,CASE 
		WHEN PLAN_DATE = RESULT_DATE
			THEN 'MPR'
		WHEN DOC_DATE = PLAN_DATE
			THEN 'MP'
		WHEN DOC_DATE = RESULT_DATE
			THEN 'MR'
		ELSE ''
		END AS calendarId
	,CASE 
		WHEN PLAN_DATE = RESULT_DATE		 /* MPR */
			THEN ISNULL(x1.CUSTOM_NAME,'') +  ISNULL('/' +x1.RESULT_CLIENT_NAME,'') +  LEFT(ISNULL('/' +x1.SUMMARY_STR,''), 10)

		WHEN DOC_DATE = PLAN_DATE and ISNULL(RESULT_DATE, '') != ''			/* MP - 계획 */
			THEN ISNULL(x1.PLAN_CUSTOM_NAME,'') +  ISNULL('/' +x1.PLAN_CLIENT_NAME,'') +  '/결과일-'+uniLITE.fnGetUserDateComp(x1.COMP_CODE,RESULT_DATE)
		WHEN DOC_DATE = PLAN_DATE	and ISNULL(RESULT_DATE, '') = ''	/* MP - 계획 */
			THEN ISNULL(x1.PLAN_CUSTOM_NAME,'') +  ISNULL('/' +x1.PLAN_CLIENT_NAME,'') 

		WHEN DOC_DATE = RESULT_DATE	and ISNULL(PLAN_DATE, '') != ''			/* MR / 실적 */
			THEN ISNULL(x1.CUSTOM_NAME,'') + ISNULL('/' +x1.RESULT_CLIENT_NAME,'')+  LEFT(ISNULL('/' + x1.SUMMARY_STR,''), 10)+  '/계획일-'+uniLITE.fnGetUserDateComp(x1.COMP_CODE,PLAN_DATE)
		WHEN DOC_DATE = RESULT_DATE	and ISNULL(PLAN_DATE, '') = ''			/* MR / 실적 */
			THEN ISNULL(x1.CUSTOM_NAME,'') + ISNULL('/' +x1.RESULT_CLIENT_NAME,'')+  LEFT(ISNULL('/' + x1.SUMMARY_STR,''), 10)
		ELSE ''
		END AS title
	,x1.DOC_NO
	,TOPTIONSTR
	,DOC_DATE
	,PLAN_DATE
	,RESULT_DATE
	,CUSTOM_NAME
	,RESULT_CLIENT
	,RESULT_CLIENT_NAME
	,PLAN_CLIENT_NAME
	,SUMMARY_STR
FROM (
	(
		SELECT A.COMP_CODE AS COMP_CODE
			,A.DOC_NO AS DOC_NO
			,CASE 
				WHEN ISNULL(A.PLAN_DATE, '') = ISNULL(A.RESULT_DATE, '')
					THEN ISNULL(A.RESULT_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') = ''
					AND ISNULL(A.PLAN_DATE, '') != ''
					THEN ISNULL(A.PLAN_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') = ''
					THEN ISNULL(A.RESULT_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') != ISNULL(A.RESULT_DATE, '')
					THEN ISNULL(A.PLAN_DATE, '')
				ELSE ''
				END DOC_DATE
			,B1.CUSTOM_CODE AS PLAN_CUSTOM_CODE
			,C1.CUSTOM_NAME AS PLAN_CUSTOM_NAME
			,B1.DVRY_CUST_SEQ AS PLAN_DVRY_CUST_SEQ
			,A.PLAN_CLIENT AS PLAN_CLIENT					/*  NUMERIC(20)         NULL                          계획고객                                   */
			,B1.CLIENT_NAME AS PLAN_CLIENT_NAME
			,A.PLAN_DATE AS PLAN_DATE						/*  NVARCHAR(10)        NULL                          계획일자                                   */
			,A.RESULT_CLIENT AS RESULT_CLIENT				/*  NUMERIC(20)     NOT NULL DEFAULT 0                결과고객 ID                                */
			,B2.CLIENT_NAME AS RESULT_CLIENT_NAME
			,A.RESULT_DATE AS RESULT_DATE					/*  NVARCHAR(10)    NOT NULL DEFAULT ''               결과일자                                   */
			,A.RESULT_TIME AS RESULT_TIME
			,A.CUSTOM_CODE AS CUSTOM_CODE					/*  NVARCHAR(20)    NOT NULL                          고객 업체(BCM100T_CUSTOM_CODE)             */
			,C2.CUSTOM_NAME AS CUSTOM_NAME
			,A.SALE_EMP AS SALE_EMP							/*  NVARCHAR(10)    NOT NULL DEFAULT ''               영업 담당자                                */
			,A.SALE_ATTEND AS SALE_ATTEND					/*  NVARCHAR(100)       NULL                          영업 참석자                                */
			,A.SUMMARY_STR AS SUMMARY_STR					/*  NVARCHAR(200)       NULL                          현황 요약                                  */
			,ISNULL(a.OPINION_STR,'') + ISNULL(a.OPINION_STR2,'') + ISNULL(a.OPINION_STR3,'') TOPTIONSTR
			,A.PROJECT_NO
		FROM CMD100T A WITH (NOLOCK)
		LEFT JOIN CMB100T B1 WITH (NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
			AND B1.CLIENT_ID = A.PLAN_CLIENT
		LEFT JOIN CMB100T B2 WITH (NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
			AND B2.CLIENT_ID = A.RESULT_CLIENT
		LEFT JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
			AND C.USER_ID = A.CREATE_EMP
		LEFT JOIN SCM100T S1 WITH (NOLOCK) ON S1.COMP_CODE = B1.COMP_CODE
			AND S1.CUSTOM_CODE = B1.CUSTOM_CODE
			AND CONVERT(NVARCHAR, S1.DVRY_CUST_SEQ) = B1.DVRY_CUST_SEQ
		LEFT JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B1.COMP_CODE
			AND C1.CUSTOM_CODE = B1.CUSTOM_CODE
		LEFT JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
			AND C2.CUSTOM_CODE = A.CUSTOM_CODE
		WHERE A.COMP_CODE = @S_COMP_CODE
				<if test="@foren.Ognl@isNotEmpty(QRY_TYPE)">
		     		<if test="QRY_TYPE == &quot;A&quot;">
		     			AND A.CREATE_EMP = @S_USER_ID
		     		</if>
		     		<if test="QRY_TYPE == &quot;B&quot;">
		     			AND C.DEPT_CODE = @DEPT_CODE
		     		</if>
		     	</if>		
		)
	UNION
	(
		SELECT A.COMP_CODE AS COMP_CODE
			,A.DOC_NO AS DOC_NO							/*  NVARCHAR(20)    NOT NULL                          문서번호                                   */
			,CASE 
				WHEN ISNULL(A.PLAN_DATE, '') = ISNULL(A.RESULT_DATE, '')
					THEN ISNULL(A.RESULT_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') = ''
					AND ISNULL(A.PLAN_DATE, '') != ''
					THEN ISNULL(A.PLAN_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') = ''
					THEN ISNULL(A.RESULT_DATE, '')
				WHEN ISNULL(A.RESULT_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') != ''
					AND ISNULL(A.PLAN_DATE, '') != ISNULL(A.RESULT_DATE, '')
					THEN ISNULL(A.RESULT_DATE, '')
				ELSE ''
				END DOC_DATE
			,B1.CUSTOM_CODE AS PLAN_CUSTOM_CODE
			,C1.CUSTOM_NAME AS PLAN_CUSTOM_NAME
			,B1.DVRY_CUST_SEQ AS PLAN_DVRY_CUST_SEQ
			,A.PLAN_CLIENT AS PLAN_CLIENT				/*  NUMERIC(20)         NULL                          계획고객                                   */
			,B1.CLIENT_NAME AS PLAN_CLIENT_NAME
			,A.PLAN_DATE AS PLAN_DATE					/*  NVARCHAR(10)        NULL                          계획일자                                   */
			,A.RESULT_CLIENT AS RESULT_CLIENT			/*  NUMERIC(20)     NOT NULL DEFAULT 0                결과고객 ID                                */
			,B2.CLIENT_NAME AS RESULT_CLIENT_NAME
			,A.RESULT_DATE AS RESULT_DATE				/*  NVARCHAR(10)    NOT NULL DEFAULT ''               결과일자                                   */
			,A.RESULT_TIME AS RESULT_TIME
			,A.CUSTOM_CODE AS CUSTOM_CODE				/*  NVARCHAR(20)    NOT NULL                          고객 업체(BCM100T_CUSTOM_CODE)             */
			,C2.CUSTOM_NAME AS CUSTOM_NAME
			,A.SALE_EMP AS SALE_EMP						/*  NVARCHAR(10)    NOT NULL DEFAULT ''               영업 담당자                                */
			,A.SALE_ATTEND AS SALE_ATTEND				/*  NVARCHAR(100)       NULL                          영업 참석자                                */
			,A.SUMMARY_STR AS SUMMARY_STR				/*  NVARCHAR(200)       NULL                          현황 요약                                  */
			,ISNULL(a.OPINION_STR,'') + ISNULL(a.OPINION_STR2,'') + ISNULL(a.OPINION_STR3,'') TOPTIONSTR
			,A.PROJECT_NO
		FROM CMD100T A WITH (NOLOCK)
		LEFT JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
			AND C.USER_ID = A.CREATE_EMP
		LEFT JOIN CMB100T B1 WITH (NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
			AND B1.CLIENT_ID = A.PLAN_CLIENT
		LEFT JOIN CMB100T B2 WITH (NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
			AND B2.CLIENT_ID = A.RESULT_CLIENT
		LEFT JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B1.COMP_CODE
			AND C1.CUSTOM_CODE = B1.CUSTOM_CODE
		LEFT JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
			AND C2.CUSTOM_CODE = A.CUSTOM_CODE
		WHERE A.COMP_CODE = @S_COMP_CODE
				<if test="@foren.Ognl@isNotEmpty(QRY_TYPE)">
		     		<if test="QRY_TYPE == &quot;A&quot;">
		     			AND A.CREATE_EMP = @S_USER_ID
		     		</if>
		     		<if test="QRY_TYPE == &quot;B&quot;">
		     			AND C.DEPT_CODE = @DEPT_CODE
		     		</if>
		     	</if>		
		)
	) AS x1
	JOIN CMB200T P ON P.COMP_CODE = x1.COMP_CODE
					and P.PROJECT_NO = x1.PROJECT_NO
					and P.PROJECT_OPT = @PROJECT_OPT
WHERE DOC_DATE BETWEEN @startDate
		AND @endDate
ORDER BY DOC_NO
		
	</select>	
<select id="calendarServiceImpl.getEventList2" parameterType="Map" resultType="HashMap">
DECLARE @S_COMP_CODE NVARCHAR(08)
	,@S_USER_ID NVARCHAR(100)
	,@DEPT_CODE NVARCHAR(20)
	,@startDate NVARCHAR(20)
	,@endDate NVARCHAR(20)

	set @S_COMP_CODE = #{S_COMP_CODE}
	set @S_USER_ID = #{S_USER_ID}
	set @DEPT_CODE = #{S_DEPT_CODE}
	set @startDate = #{startDate}
	set @endDate = #{endDate}
	
	
	select  main_code  as id 
	,convert(nvarchar(10), dateadd(day,convert(numeric, right(main_code,1)), dateadd( year, 6,insert_db_time)),112) as startDate
	,convert(nvarchar(10),dateadd(day,convert(numeric, right(main_code,1)), dateadd( year, 6,insert_db_time)),112) as endDate
	, code_name as title

	,case WHEN  convert(numeric, right(main_code,1))%3 = 1
			THEN 'MPR'
		WHEN convert(numeric, right(main_code,1))%3 = 2
			THEN 'MP'
		WHEN convert(numeric, right(main_code,1))%3 = 0
			THEN 'MR'
		ELSE ''
		END AS calendarId,
		ref_code1
  from bsa100t 
  where sub_code='$' and  left(main_code,1)='A' 
  and convert(nvarchar(10), dateadd(day,convert(numeric, right(main_code,1)), dateadd( year, 6,insert_db_time)),112) BETWEEN @startDate
		AND @endDate
</select>
</mapper>