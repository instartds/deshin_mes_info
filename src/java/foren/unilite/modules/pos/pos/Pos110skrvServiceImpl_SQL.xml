<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pos110skrvServiceImpl">
	
	<select id="pos110skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	BEGIN
			SET NOCOUNT ON
				
			DECLARE @START_TIME DATETIME
				    , @END_TIME   DATETIME
				    , @DIFF_TIME  NUMERIC(10, 0)
				
			SET @START_TIME = GETDATE()
	
			IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#OMEGA_SALE_TEMP1'))        
				DROP TABLE #OMEGA_SALE_TEMP1
		
	
	
	        SELECT H.COMP_CODE  
	              , H.DIV_CODE  
	              , H.POS_NO                                     /*POS_NO      */  
	              , ISNULL(C.POS_NAME,'')       AS POS_NAME  	/*POS명                    */  
	              , ISNULL(C.DEPT_CODE,'')      AS DEPT_CODE  	/*부서                      */  
	              , H.RECEIPT_NO                                 /*영수증NO       */  
	              , H.SALE_DATE       AS SALE_DATE     			/*매출일자                  */  
	              , SUBSTRING(H.SALE_TIME,1,2) + ':' +   
	                SUBSTRING(H.SALE_TIME,3,2) + ':' +   
	                SUBSTRING(H.SALE_TIME,5,2)   AS SALE_TIME    /*거래시간                  */  
	              , SUBSTRING(H.SALE_TIME,1,2)   AS SALE_HOUR 	/*거래시간대                */  
	              , I.SALE_Q
	              , H.SALE_AMT_O                              	/*매출금액                  */  
	              , H.TAX_AMT_O                              	/*부가세                    */  
	        INTO #OMEGA_SALE_TEMP1
	        FROM           SSA100T H WITH (NOLOCK)  
	        INNER JOIN (SELECT B.COMP_CODE  
	                        , B.DIV_CODE  
	                        , B.BILL_NUM   
	                        , B.POS_NO  
	                        , B.RECEIPT_NO  
	                        , SUM(B.SALE_Q)                                       AS SALE_Q  
	                        , SUM(B.SALE_Q * B.DISCOUNT_P) AS DISCOUNT_O  
	                    FROM       SSA100T A WITH (NOLOCK)
	                    INNER JOIN SSA110T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                    AND B.DIV_CODE  = A.DIV_CODE
	                                                    AND B.BILL_NUM  = A.BILL_NUM
	                    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	                    AND   A.DIV_CODE   = #{DIV_CODE}
	                    AND   A.SALE_DATE  &gt;= #{SALE_DATE_FR}
	                    AND   A.SALE_DATE  &lt;= #{SALE_DATE_TO}
	                    GROUP BY B.COMP_CODE, B.DIV_CODE, B.BILL_NUM, B.POS_NO, B.RECEIPT_NO
	                    ) I ON I.COMP_CODE = H.COMP_CODE  
	                        AND I.DIV_CODE  = H.DIV_CODE  
	                        AND I.BILL_NUM  = H.BILL_NUM                                                                    
	             LEFT JOIN BSA240T C WITH (NOLOCK) ON C.COMP_CODE = H.COMP_CODE  
	                                              AND C.DIV_CODE  = H.DIV_CODE  
	                                              AND C.POS_NO    = H.POS_NO                      
	        WHERE H.COMP_CODE   = #{S_COMP_CODE}
	        AND   H.DIV_CODE    = #{DIV_CODE}
	        AND   H.SALE_DATE  &gt;= #{SALE_DATE_FR}
	        AND   H.SALE_DATE  &lt;= #{SALE_DATE_TO}                               
	        AND   H.ORDER_TYPE  = '10' 
			
			<if test="@foren.Ognl@isNotEmpty(POS_CODE)">					
			AND H.POS_NO IN
					<foreach collection="POS_CODE" item="item" separator="," close=")" open="(">
						    #{item}
				</foreach>									
			</if>   
	
	        SELECT
			/* 시간대별 매출현황조회 pos110skrv 객수 */
				
	           '1'             AS SORT
	           , A.COMP_CODE
	           , A.DIV_CODE	
	           , A.POS_NO      AS POS_NUM
	           , A.POS_NAME    AS POS_NAME
	           , '객수'         AS GUBUN
	           , SUM(ISNULL(A.SALE_CNT,0)) AS SUMMARY
	           , SUM(CASE WHEN A.SALE_HOUR &lt;= '08' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C08
	           , SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C09
	           , SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C10
	           , SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C11
	           , SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C12
	           , SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C13
	           , SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C14
	           , SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C15
	           , SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C16
	           , SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C17
	           , SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C18
	           , SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) AS C19
	        FROM
	                (
	                SELECT A.COMP_CODE
						  	, A.DIV_CODE
						    , A.POS_NO     
						    , A.POS_NAME   
						    , A.SALE_HOUR  
						    , COUNT(A.RECEIPT_NO) AS SALE_CNT
	                FROM #OMEGA_SALE_TEMP1 A
	                LEFT OUTER JOIN BSA210T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
													AND A.DIV_CODE  = B.TYPE_LEVEL
													AND A.DEPT_CODE = B.TREE_CODE
	                WHERE 1 = 1
					<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
					AND    B.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =B.COMP_CODE AND TYPE_LEVEL=B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
					</if>
	                GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME, A.SALE_HOUR
	                
	                ) A
	        GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME
	
	        UNION ALL
	
			SELECT 
			/* 시간대별 매출현황조회 pos110skrv 매출수량*/
	               '2'          AS SORT
	             , A.COMP_CODE
	             , A.DIV_CODE
	             , A.POS_NO     AS POS_NUM
	             , A.POS_NAME   AS POS_NAME
	             , '매출수량'		AS GUBUN
	             , SUM(ISNULL(A.SALE_Q,0)) AS SUMMARY
	             , SUM(CASE WHEN A.SALE_HOUR &lt;= '08' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C08 
	             , SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C09     
	             , SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C10     
	             , SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C11     
	             , SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C12     
	             , SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C13     
	             , SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C14     
	             , SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C15     
	             , SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C16     
	             , SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C17     
	             , SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C18     
	             , SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(A.SALE_Q,0) ELSE 0 END) AS C19 
	        FROM #OMEGA_SALE_TEMP1 A 
	        LEFT OUTER JOIN BSA210T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                                              AND A.DIV_CODE  = B.TYPE_LEVEL
	                                              AND A.DEPT_CODE = B.TREE_CODE
	        WHERE 1 = 1
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
			AND    B.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =B.COMP_CODE AND TYPE_LEVEL=B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
			</if>
	        GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME				  
					  
	        UNION ALL
	
			SELECT 
			/* 시간대별 매출현황조회 pos110skrv 매출금액 */
	             	'3'          AS SORT
	             , A.COMP_CODE
	             , A.DIV_CODE
	             , A.POS_NO     AS POS_NUM
	             , A.POS_NAME   AS POS_NAME
	             , '매출금액'		AS GUBUN
	             , SUM(ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0)) AS SUMMARY
	             , SUM(CASE WHEN A.SALE_HOUR &lt;= '08' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C08 
	             , SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C09     
	             , SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C10     
	             , SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C11     
	             , SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C12     
	             , SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C13     
	             , SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C14     
	             , SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C15     
	             , SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C16     
	             , SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C17     
	             , SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C18     
	             , SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(A.SALE_AMT_O,0) + ISNULL(A.TAX_AMT_O,0) ELSE 0 END) AS C19 
	        FROM #OMEGA_SALE_TEMP1 A
	        LEFT OUTER JOIN BSA210T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                                              AND A.DIV_CODE  = B.TYPE_LEVEL
	                                              AND A.DEPT_CODE = B.TREE_CODE
	        WHERE 1 = 1
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
			AND    B.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =B.COMP_CODE AND TYPE_LEVEL=B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
			</if>
	        GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME				  
					  
	        UNION ALL
	
			SELECT 
			/* 시간대별 매출현황조회 pos110skrv 객단가 */
	             	'4'          AS SORT
	             , A.COMP_CODE
	             , A.DIV_CODE	
	             , A.POS_NO     AS POS_NUM
	             , A.POS_NAME   AS POS_NAME
	             , '객단가'			AS GUBUN
	             , CASE WHEN SUM(ISNULL(SALE_CNT,0)) = 0 THEN 0 ELSE (SUM(ISNULL(SALE_AMT,0)) / SUM(ISNULL(SALE_CNT,0))) END AS SUMMARY
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR &lt;= '08' THEN ISNULL(SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN SALE_HOUR &lt;= '08' THEN ISNULL(SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR &lt;= '08' THEN ISNULL(SALE_CNT,0) ELSE 0 END) END) AS C08
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '09' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C09
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '10' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C10
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '11' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C11
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '12' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C12
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '13' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C13
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '14' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C14
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '15' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C15
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '16' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C16
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '17' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C17
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR = '18' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C18
	             , (CASE WHEN SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(SALE_CNT,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(A.SALE_AMT,0) ELSE 0 END) / SUM(CASE WHEN A.SALE_HOUR &gt;= '19' THEN ISNULL(A.SALE_CNT,0) ELSE 0 END) END) AS C19
	        FROM
	            (SELECT A.COMP_CODE
	                  , A.DIV_CODE
	                  , A.POS_NO     
	                  , A.POS_NAME   
	                  , A.SALE_HOUR  
	                  , COUNT(A.RECEIPT_NO)				AS SALE_CNT
	                  , SUM(A.SALE_AMT_O + A.TAX_AMT_O)  AS SALE_AMT
	             FROM #OMEGA_SALE_TEMP1 A 
	                   LEFT OUTER JOIN BSA210T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                                                         AND A.DIV_CODE  = B.TYPE_LEVEL
	                                                         AND A.DEPT_CODE = B.TREE_CODE
	             WHERE 1 = 1
				<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
				AND    B.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =B.COMP_CODE AND TYPE_LEVEL=B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
				</if>             						       
	             GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME, A.SALE_HOUR
	             ) A
	        GROUP BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME				  
	        ORDER BY A.COMP_CODE, A.DIV_CODE, A.POS_NO, A.POS_NAME
					  
	
			SET @END_TIME   = GETDATE()
			
			SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)
			
			EXEC uniLITE.SP_QRY_TIME 'pos110skrv', '시간대별 매출현황조회', #{SALE_DATE_FR}, #{SALE_DATE_TO}, @DIFF_TIME
			
			
	        SET NOCOUNT OFF		  
		END 
    </select>	
</mapper>