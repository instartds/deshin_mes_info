<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="S_mpo250ukrv_kodiServiceImpl">

<select id="S_mpo250ukrv_kodiServiceImpl.getThisWeek" parameterType="Map" resultType="rMap">

	SELECT CAL_NO

	FROM BCM420T WITH (NOLOCK)
	WHERE COMP_CODE = #{S_COMP_CODE}
	 AND CAL_TYPE = '3'
	 AND START_DATE &lt;= CONVERT(NVARCHAR(08), getDate(), 112)
	 AND END_DATE &gt;= CONVERT(NVARCHAR(08), getDate(), 112)
</select>


<select id="S_mpo250ukrv_kodiServiceImpl.getOrderWeek" parameterType="Map" resultType="comboItem">

	SELECT CAL_NO AS 'value'
		 , CAL_NO AS 'text'
		 , START_DATE AS refCode1
		 , END_DATE AS refCode2

	FROM BCM420T WITH (NOLOCK)
	WHERE COMP_CODE = #{S_COMP_CODE}
	 AND CAL_TYPE = '3'
	 AND CAL_NO >= '2019001'
</select>
<select id="S_mpo250ukrv_kodiServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">

		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드      */
				  , @UserId			NVARCHAR(100)	/* 사용자ID */
				  , @RefItem		NVARCHAR(01)
				  , @DateFormat		NVARCHAR(10)

			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}

			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

			SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

			SELECT B.OUT_DIV_CODE
				 , A.CUSTOM_CODE
				 , CASE WHEN @RefItem = '1' THEN M2.CUSTOM_NAME1
						WHEN @RefItem = '2' THEN M2.CUSTOM_NAME2
						ELSE M2.CUSTOM_NAME
					END				AS CUSTOM_NAME
				 , B.ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN M1.ITEM_NAME1
			             WHEN @RefItem = '2' THEN M1.ITEM_NAME2
			                                 ELSE M1.ITEM_NAME
			         END)           AS ITEM_NAME
				 , B.ORDER_Q
			     , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
			             THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
			         END)			AS ORDER_DATE
			     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
			             THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
			         END)			AS DVRY_DATE
			     , ISNULL(M6.CUSTOM_NAME, ISNULL(M8.CUSTOM_NAME, '')) AS DVRY_CUSTOM_NAME
				 , D.CHILD_ITEM_CODE   AS CHLD_ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN M3.ITEM_NAME1
			             WHEN @RefItem = '2' THEN M3.ITEM_NAME2
			                                 ELSE M3.ITEM_NAME
			         END)           AS CHLD_ITEM_NAME
                 , D.CALC_PLAN_QTY          --구매계획량
			     , (CASE WHEN ISNULL(D.ORDER_PLAN_DATE, '') = ''  THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.ORDER_PLAN_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(D.ORDER_PLAN_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(D.ORDER_PLAN_DATE, 7, 2))
			         END)			AS ORDER_PLAN_DATE                 --구매요청일
			     , D.ORDER_UNIT
				 , D.ORDER_REQ_Q            --구매요청량
				 , D.PL_QTY                 --총요청량
			     , (CASE WHEN ISNULL(D.INIT_DVRY_DATE, '') = '' THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.INIT_DVRY_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(D.INIT_DVRY_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(D.INIT_DVRY_DATE, 7, 2))
			         END)			AS INIT_DVRY_DATE
			     , (CASE WHEN ISNULL(D.DVRY_DATE, '') = ''  THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.DVRY_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(D.DVRY_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(D.DVRY_DATE, 7, 2))
			         END)			AS IN_DVRY_DATE
				 , D.REASON
			     , (CASE WHEN ISNULL(D.INOUT_DATE, '') = ''  THEN ''
				         WHEN  D.ORDER_Q  > ISNULL(D.INSTOCK_Q, 0) THEN '분할입고'
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.INOUT_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(D.INOUT_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(D.INOUT_DATE, 7, 2))
			         END)			AS INOUT_DATE
			     , (CASE WHEN ISNULL(D.ORDER_DATE, '') = ''  THEN ''
			             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.ORDER_DATE, 1, 4))
			                                                     , 'MM'  , SUBSTRING(D.ORDER_DATE, 5, 2))
			                                                     , 'DD'  , SUBSTRING(D.ORDER_DATE, 7, 2))
			         END)			AS IN_ORDER_DATE                 --발주일
				 , ISNULL(D.ORDER_Q, 0)     AS IN_ORDER_Q
				 , ISNULL(NOR_RECEIPT_Q, 0) AS NOR_RECEIPT_Q
				 , ISNULL(FREE_RECEIPT_Q, 0) AS FREE_RECEIPT_Q
				 , ISNULL(D.INSTOCK_Q, 0)   AS INSTOCK_Q
				 , CASE WHEN M9.REF_CODE2 = 'Y' THEN '사급'
				        WHEN M9.REF_CODE2 = 'y' THEN '사급'
				        ELSE  '자급'
					END             AS SUPPLY_GUBUN
				 , CASE WHEN ((ISNULL(D.NOR_RECEIPT_Q, 0) <![CDATA[>]]> 0 OR ISNULL(D.FREE_RECEIPT_Q, 0) <![CDATA[>]]> 0) AND ISNULL(D.INSTOCK_Q, 0) <![CDATA[>]]> 0) THEN '입고완료'
						WHEN (ISNULL(D.NOR_RECEIPT_Q, 0) <![CDATA[>]]> 0 OR ISNULL(D.FREE_RECEIPT_Q, 0) <![CDATA[>]]> 0) THEN '접수'
						WHEN (ISNULL(D.NOR_RECEIPT_Q, 0) <![CDATA[<=]]> 0 AND ISNULL(D.FREE_RECEIPT_Q, 0) <![CDATA[<=]]> 0) THEN '미입고'
						ELSE ''
				   END				AS INSTOCK_YN
				 , D.REMARK
				 , D.DIV_CODE
				 , ISNULL(D.DVRY_CUSTOM_CODE, '') AS DVRY_CUSTOM_CODE
				 , ISNULL(D.DVRY_ORDER_NUM, '') AS DVRY_ORDER_NUM
				 , ISNULL(D.DVRY_ORDER_SEQ, 0) AS DVRY_ORDER_SEQ
				 , D.ORDER_REQ_NUM
				 , (A.ORDER_NUM + B.ITEM_CODE + ISNULL(B.DVRY_DATE, '')) AS ORDER_NUM
			FROM SOF100T AS A WITH (NOLOCK)
				 INNER JOIN SOF110T AS B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
													  AND B.DIV_CODE  = A.DIV_CODE
													  AND B.ORDER_NUM = A.ORDER_NUM

				LEFT JOIN (SELECT T.COMP_CODE
								 , T.DIV_CODE
								 , T.MRP_CONTROL_NUM
								 , T.PROD_ITEM_CODE           -- 수주품목코드
								 , T.CHILD_ITEM_CODE          -- 부자재코드
								 , T.ITEM_NAME                -- 부자재명
								 , T.ORDER_UNIT
								 , T.ORDER_REQ_Q		      --구매요청량
								 , T.ORDER_PLAN_DATE          --구매요청일
								 , T.ORDER_Q                  -- 발주량
								 , T.ORDER_DATE
								 , T.INIT_DVRY_DATE
								 , T.DVRY_DATE
								 , T.REASON
								 , T.DVRY_ORDER_NUM
								 , T.DVRY_ORDER_SEQ
								 , T.INSTOCK_Q
								 , T.INOUT_DATE
								 , T.DVRY_CUSTOM_CODE
								 , T.CUSTOM_CODE  -- 발주거래처코드
								 , T.CUSTOM_NAME  -- 발주거래처명
								 , T.REMARK       -- 비고
								 , T.ORDER_REQ_NUM
								 , T.ORDER_NUM  -- 수주번호
								 , T.SER_NO     -- 수주순번
								 , T.PL_QTY			--총소요량
								 , (CASE WHEN T.ORDER_UNIT = 'EA' THEN CEILING(T.CALC_PLAN_QTY)
										 ELSE T.CALC_PLAN_QTY
									 END) AS CALC_PLAN_QTY  -- 구매계획량
								, T.NOR_RECEIPT_Q
								, T.FREE_RECEIPT_Q
							  FROM (SELECT COMP_CODE
											, DIV_CODE
											, MRP_CONTROL_NUM
											, MIN(PROD_ITEM_CODE)			AS PROD_ITEM_CODE
											, CHILD_ITEM_CODE
											, ITEM_NAME
											, MAX(ORDER_UNIT)               AS ORDER_UNIT
											, MAX(ORDER_REQ_Q)				AS ORDER_REQ_Q		--구매요청량
											, MAX(ORDER_PLAN_DATE)          AS ORDER_PLAN_DATE  --구매요청일
											, MAX(ORDER_Q)				 	AS ORDER_Q
											, MAX(ORDER_DATE)               AS ORDER_DATE
											, MAX(INIT_DVRY_DATE)           AS INIT_DVRY_DATE
											, MAX(DVRY_DATE)                AS DVRY_DATE
											, MAX(REASON)                   AS REASON
											, MIN(DVRY_ORDER_NUM)           AS DVRY_ORDER_NUM
											, MIN(DVRY_ORDER_SEQ)           AS DVRY_ORDER_SEQ
											, MAX(INSTOCK_Q)                AS INSTOCK_Q
											, MAX(INOUT_DATE)               AS INOUT_DATE
											, MAX(DVRY_CUSTOM_CODE)         AS DVRY_CUSTOM_CODE
											, MAX(CUSTOM_CODE)              AS CUSTOM_CODE
											, MAX(CUSTOM_NAME)				AS CUSTOM_NAME
											, MAX(REMARK)					AS REMARK
											, MAX(ORDER_REQ_NUM)			AS ORDER_REQ_NUM
											, MIN(ORDER_NUM)				AS ORDER_NUM
											, MIN(SER_NO)				 	AS SER_NO
											, SUM(PL_QTY)                   AS PL_QTY			--총소요량
											,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY)<![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) <![CDATA[<=]]> MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) <![CDATA[>]]> 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)
																ELSE (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END)
															END)
			  										ELSE (CASE WHEN MAX(MAX_PURCH_Q) <![CDATA[=]]> 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END)
																ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) <![CDATA[>]]> MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) <![CDATA[>]]> 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
																			ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) <![CDATA[>=]]> 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  									ELSE MAX(MAX_PURCH_Q) END)
															END)
												END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
											, MAX(NOR_RECEIPT_Q) AS NOR_RECEIPT_Q
											, MAX(FREE_RECEIPT_Q) AS FREE_RECEIPT_Q
											FROM (SELECT A.COMP_CODE
		        									, A.DIV_CODE
		        									, A.MRP_CONTROL_NUM
		        									, A.PROD_ITEM_CODE
		        									, A.ORDER_NUM
		        									, A.SER_NO
													, A.CHILD_ITEM_CODE
													, B.ITEM_NAME
													, B.SPEC
													, B.STOCK_UNIT
													, C.ITEM_ACCOUNT
													, C.SUPPLY_TYPE
													, C.ORDER_UNIT
													, ISNULL(D.REQ_PLAN_Q , 0) 		AS ORDER_REQ_Q
													, ISNULL(D.ORDER_PLAN_DATE, '') AS ORDER_PLAN_DATE
		    										, ISNULL(F.ORDER_Q, 0) 			AS ORDER_Q
													, F.ORDER_DATE
													, F.INIT_DVRY_DATE
													, F.DVRY_DATE
													, ISNULL(F.REASON, '')         AS REASON
													, F.DVRY_ORDER_NUM
													, F.DVRY_ORDER_SEQ
													, ISNULL(F.INSTOCK_Q, 0)       AS INSTOCK_Q
													, F.INOUT_DATE
													, F.DVRY_CUSTOM_CODE
													, C.CUSTOM_CODE
													, ISNULL(E.CUSTOM_NAME, '')		AS CUSTOM_NAME
													, ISNULL(F.REMARK, '')          AS REMARK
													, ISNULL(D.ORDER_REQ_NUM, '') 	AS ORDER_REQ_NUM
													, A.PL_QTY
													, C.TRNS_RATE
													, ISNULL((SELECT SUM(STOCK_Q)
																FROM BIV100T WITH(NOLOCK)
																WHERE COMP_CODE = A.COMP_CODE
																AND DIV_CODE = A.DIV_CODE
																AND ITEM_CODE = A.CHILD_ITEM_CODE
															), 0)    AS CSTOCK_CALC
													, C.MINI_PURCH_Q
													, C.MAX_PURCH_Q
													, ISNULL(F.NOR_RECEIPT_Q, 0) AS NOR_RECEIPT_Q
													, ISNULL(F.FREE_RECEIPT_Q, 0) AS FREE_RECEIPT_Q
		       										FROM ( SELECT A.COMP_CODE
		        												, A.DIV_CODE
		        												, MAX(A.MRP_CONTROL_NUM) AS MRP_CONTROL_NUM
		        												, A.PROD_ITEM_CODE
		        												, A.ORDER_NUM
		        												, A.SER_NO
																, A.CHILD_ITEM_CODE
																, A.WORK_STEP
																, SUM(A.PL_QTY) AS PL_QTY
																FROM BPL130T A WITH(NOLOCK)
															GROUP BY A.COMP_CODE, A.DIV_CODE, A.PROD_ITEM_CODE, A.ORDER_NUM, A.SER_NO, A.CHILD_ITEM_CODE, A.WORK_STEP
																) AS A
														INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
																							AND A.CHILD_ITEM_CODE = B.ITEM_CODE
														INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
																							AND A.DIV_CODE  = C.DIV_CODE
																							AND A.CHILD_ITEM_CODE = C.ITEM_CODE
														LEFT JOIN MRP400T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
																							AND A.DIV_CODE  = D.DIV_CODE
																							AND A.CHILD_ITEM_CODE = D.ITEM_CODE
																							AND A.MRP_CONTROL_NUM = D.MRP_CONTROL_NUM
														LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
																							AND C.CUSTOM_CODE = E.CUSTOM_CODE
														LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.ORDER_DATE, MAX(B.DVRY_DATE) AS DVRY_DATE, MAX(B.REASON) AS REASON, MAX(B.INIT_DVRY_DATE) AS INIT_DVRY_DATE, MAX(B.REMARK) AS REMARK
																		 , SUM(B.ORDER_Q) AS ORDER_Q, SUM(ISNULL(D.INSTOCK_Q, 0)) AS INSTOCK_Q, MAX(D.INOUT_DATE) AS INOUT_DATE
																		 , MAX(B.CUSTOM_CODE) AS DVRY_CUSTOM_CODE, MIN(B.ORDER_NUM) AS DVRY_ORDER_NUM, MIN(B.ORDER_SEQ) AS DVRY_ORDER_SEQ
																		 , B.ORDER_REQ_NUM
																		 , SUM(ISNULL(E.NOR_RECEIPT_Q, 0)) AS NOR_RECEIPT_Q
																		 , SUM(ISNULL(E.FREE_RECEIPT_Q, 0)) AS FREE_RECEIPT_Q
																	  FROM MPO100T AS A WITH (NOLOCK)
																		   INNER JOIN MPO200T AS B WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
																												AND B.DIV_CODE      = A.DIV_CODE
																												AND B.ORDER_NUM     = A.ORDER_NUM
																		   LEFT JOIN MRP400T AS C WITH (NOLOCK) ON B.COMP_CODE     = C.COMP_CODE
	  																											AND B.IN_DIV_CODE   = C.IN_DIV_CODE
	  																											AND B.ORDER_REQ_NUM = C.ORDER_REQ_NUM
																			LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(INOUT_Q) AS INSTOCK_Q, MAX(INOUT_DATE) AS INOUT_DATE
																						 FROM BTR100T WITH (NOLOCK)
																						WHERE INOUT_TYPE = '1'
																						GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) AS D  ON D.COMP_CODE  = B.COMP_CODE
																																				 AND D.DIV_CODE   = B.IN_DIV_CODE
																																				 AND D.ORDER_NUM  = B.ORDER_NUM
																																				 AND D.ORDER_SEQ  = B.ORDER_SEQ
																			LEFT JOIN QMS100T AS E WITH(NOLOCK) ON E.COMP_CODE  = B.COMP_CODE
																											   AND E.DIV_CODE   = B.IN_DIV_CODE
																											   AND E.ORDER_NUM  = B.ORDER_NUM
																											   AND E.ORDER_SEQ  = B.ORDER_SEQ
																	GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_DATE, B.ORDER_REQ_NUM) F ON A.COMP_CODE = F.COMP_CODE
																														              AND A.DIV_CODE  = F.DIV_CODE
																														              AND D.ORDER_REQ_NUM = F.ORDER_REQ_NUM
												WHERE A.WORK_STEP = 'S'			--'T':임시,'M':소요량 , 'S':수주정보 용

											) AA

										GROUP BY COMP_CODE, DIV_CODE, MRP_CONTROL_NUM, CHILD_ITEM_CODE,
												ITEM_NAME, SPEC, STOCK_UNIT, ITEM_ACCOUNT, SUPPLY_TYPE, ORDER_NUM, SER_NO

									) AS T
											) AS D ON D.COMP_CODE = B.COMP_CODE
												  AND D.DIV_CODE  = B.OUT_DIV_CODE
	  											  AND D.ORDER_NUM = B.ORDER_NUM
	  											  AND D.SER_NO    = B.SER_NO
				 INNER JOIN BPR100T M1 WITH(NOLOCK) ON M1.COMP_CODE   = B.COMP_CODE
												   AND M1.ITEM_CODE   = B.ITEM_CODE
				 INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
												   AND M2.CUSTOM_CODE = A.CUSTOM_CODE
				 INNER JOIN BPR100T M3 WITH(NOLOCK) ON M3.COMP_CODE   = D.COMP_CODE
												   AND M3.ITEM_CODE   = D.CHILD_ITEM_CODE
				 INNER JOIN BPR200T M4 WITH(NOLOCK) ON M4.COMP_CODE   = D.COMP_CODE
												   AND M4.DIV_CODE    = D.DIV_CODE
												   AND M4.ITEM_CODE   = D.CHILD_ITEM_CODE
	             INNER JOIN BSA100T M9 WITH(NOLOCK) ON M9.COMP_CODE   = M4.COMP_CODE
				                                   AND M9.MAIN_CODE   = 'B014'	
												   AND M9.SUB_CODE    = M4.SUPPLY_TYPE													   
				 INNER JOIN BPR200T M5 WITH(NOLOCK) ON M5.COMP_CODE   = D.COMP_CODE
												   AND M5.DIV_CODE    = D.DIV_CODE
												   AND M5.ITEM_CODE   = D.CHILD_ITEM_CODE
				 LEFT JOIN BCM100T M6 WITH(NOLOCK) ON M6.COMP_CODE   = D.COMP_CODE
												  AND M6.CUSTOM_CODE = D.DVRY_CUSTOM_CODE
				 LEFT JOIN (SELECT X.COMP_CODE, X.DIV_CODE, X.ITEM_CODE, MAX(X.CUSTOM_CODE) AS CUSTOM_CODE
				             FROM (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MAX(APLY_START_DATE) AS APLY_START_DATE 
									FROM BPR400T WITH(NOLOCK) 
									WHERE TYPE        = N'1' 
									GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, CUSTOM_CODE
									) AS X
							  GROUP BY X.COMP_CODE, X.DIV_CODE, X.ITEM_CODE
							    ) AS M7 ON M7.COMP_CODE   = D.COMP_CODE
				                       AND M7.DIV_CODE    = D.DIV_CODE
									   AND M7.ITEM_CODE   = D.CHILD_ITEM_CODE
				 LEFT JOIN BCM100T M8 WITH(NOLOCK) ON M8.COMP_CODE   = M7.COMP_CODE
												  AND M8.CUSTOM_CODE = M7.CUSTOM_CODE												  

		  WHERE A.COMP_CODE = @CompCode
		    AND B.OUT_DIV_CODE = #{DIV_CODE}

			<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
			AND B.DVRY_DATE &gt;= #{ORDER_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
			AND B.DVRY_DATE &lt;= #{ORDER_DATE_TO}
			</if>


			--2021-04-01 완로된 건은 조회되지 않음 추가

			AND B.ORDER_STATUS != 'Y'
			AND ISNULL(B.CLOSE_YN, 'N') != 'Y'
			AND B.ORDER_Q - B.OUTSTOCK_Q + B.RETURN_Q  &gt; 0

			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE}+ '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			AND M2.CUSTOM_NAME LIKE #{CUSTOM_NAME}+ '%'
			</if>

			<!-- <if test="COMPLETED_YN == &quot;Y&quot;">
			AND C.ORDER_Q <![CDATA[<=]]> ISNULL(C.INSTOCK_Q, 0)
			</if>
			<if test="COMPLETED_YN == &quot;N&quot;">
			AND (ISNULL(C.INSTOCK_Q, 0) <![CDATA[>=]]> 0  AND C.ORDER_Q  <![CDATA[>]]> ISNULL(C.INSTOCK_Q, 0))
			</if> -->
			
			<if test="COMPLETED_YN == &quot;Y&quot;">
			AND ((ISNULL(D.NOR_RECEIPT_Q, 0) <![CDATA[>]]> 0 OR ISNULL(D.FREE_RECEIPT_Q, 0) <![CDATA[>]]> 0) AND ISNULL(D.INSTOCK_Q, 0) <![CDATA[>]]> 0)
			</if>
			<if test="COMPLETED_YN == &quot;N&quot;">
			AND (ISNULL(D.NOR_RECEIPT_Q, 0) <![CDATA[<=]]> 0 AND ISNULL(D.FREE_RECEIPT_Q, 0) <![CDATA[<=]]> 0)
			</if>

			<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND M5.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
			</if>
			
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
			AND A.ORDER_NUM      LIKE #{ORDER_NUM} + '%' -- 수주정보, 수주번호
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND B.ITEM_CODE      LIKE #{ITEM_CODE} + '%' -- 수주디테일, 품목코드
			</if>
            ORDER BY (A.ORDER_NUM + B.ITEM_CODE)

			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END


</select>

<update id="S_mpo250ukrv_kodiServiceImpl.updateDetail" parameterType="Map">
	UPDATE MPO200T
	   SET DVRY_DATE    = #{IN_DVRY_DATE}
		 , REASON       = #{REASON}
		 , REMARK       = #{REMARK}
	 WHERE COMP_CODE    = #{S_COMP_CODE}
	   AND DIV_CODE     = #{DIV_CODE}
	   AND CUSTOM_CODE  = #{DVRY_CUSTOM_CODE}
	   AND ORDER_NUM    = #{DVRY_ORDER_NUM}
	   AND ORDER_SEQ    = #{DVRY_ORDER_SEQ}
</update>



</mapper>