<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mms510ukrv_wmServiceImpl">
<!-- 창고CELL 코드 가져오는 로직 -->
	<select id="s_mms510ukrv_wmServiceImpl.getWhCellCode" parameterType="Map" resultType="string">
		/* s_mms510ukrv_wmServiceImpl.getWhCellCode */
		SELECT WH_CELL_CODE
		  FROM BSA225T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND WH_CODE    = #{WH_CODE}
		   AND DEFAULT_YN = 'Y'
	</select>

	<select id="s_mms510ukrv_wmServiceImpl.selectExpirationdate" parameterType="Map" resultType="rMap">
		SELECT ISNULL(EXPIRATION_DAY,0) AS EXPIRATION_DAY
		  FROM BPR100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
		   AND CIR_PERIOD_YN ='Y'
	</select>

	<select id="s_mms510ukrv_wmServiceImpl.fnOrderPrice" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE,
		        A.TYPE,
		        A.DIV_CODE,
		        A.ITEM_CODE,
		        A.CUSTOM_CODE,
		        A.MONEY_UNIT,
		        A.ORDER_UNIT,
		        --A.PURCHASE_TYPE,
		        --A.SALES_TYPE,
		        A.ORDER_RATE,
		        --A.PURCHASE_RATE,
		        ISNULL(A.ITEM_P, '0') AS ORDER_P,
		        A.APLY_START_DATE
		 FROM uniLITE.BPR400T A
		 INNER JOIN (SELECT COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT, MAX(APLY_START_DATE) AS APLY_START_DATE
		               FROM uniLITE.BPR400T
		              WHERE APLY_START_DATE &lt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
		              GROUP BY COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT
		             ) B ON A.COMP_CODE = B.COMP_CODE
		                AND A.TYPE                 = B.TYPE
		                AND A.DIV_CODE             = B.DIV_CODE
		                AND A.CUSTOM_CODE          = B.CUSTOM_CODE
		                AND A.ITEM_CODE            = B.ITEM_CODE
		                AND A.MONEY_UNIT           = B.MONEY_UNIT
		                AND A.ORDER_UNIT           = B.ORDER_UNIT
		                AND A.APLY_START_DATE      = B.APLY_START_DATE
		 INNER JOIN unilite.BPR200T C ON A.COMP_CODE = C.COMP_CODE
		                             AND A.DIV_CODE  = C.DIV_CODE
		                             AND A.ITEM_CODE = C.ITEM_CODE
		WHERE A.ITEM_CODE      = #{ITEM_CODE}
		    AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		    AND A.COMP_CODE    = #{S_COMP_CODE}
		    AND A.DIV_CODE     = #{DIV_CODE}
		    AND A.TYPE         = N'1'
		    AND A.MONEY_UNIT   = #{MONEY_UNIT}
		    AND A.ORDER_UNIT   = #{ORDER_UNIT}
	</select>

	<select id="s_mms510ukrv_wmServiceImpl.taxType" parameterType="Map" resultType="rMap">
		SELECT TAX_TYPE
		  FROM BPR100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</select>



	<select id="s_mms510ukrv_wmServiceImpl.selectinoutNoMasterList" parameterType="Map" resultType="rMap">
		/* s_mms510ukrv_wm.Cs_mms510ukrv_wm[fnMms510QPop] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE  NVARCHAR(08) /* 법인코드    */
		        SET @COMP_CODE = #{S_COMP_CODE}

		    /* 데이터 조회 */
		    SELECT CASE WHEN C2.REF_ITEM = '1' THEN C1.CUSTOM_NAME1
		              WHEN C2.REF_ITEM = '2' THEN C1.CUSTOM_NAME2
		              ELSE C1.CUSTOM_NAME
		         END                                              AS INOUT_NAME
		       , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		              ELSE REPLACE(
		                   REPLACE(
		                   REPLACE(M1.CODE_NAME, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                       , 'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
		                                       , 'DD',   SUBSTRING(A.INOUT_DATE, 7, 2))
		         END                                              AS INOUT_DATE
		       , A.INOUT_CODE
		       , A.WH_CODE
		       , ISNULL(A.WH_CELL_CODE,'') AS WH_CELL_CODE
		       , A.DIV_CODE
		       , A.INOUT_PRSN
		       , A.INOUT_NUM
		       , A.MONEY_UNIT
		       , A.EXCHG_RATE_O
		       , A.CREATE_LOC
		       --, CASE WHEN A.CREATE_LOC = '2' THEN '1' ELSE '2' END AS CREATE_LOC
		       , MAX(B.BL_NO) AS BL_NO
		       , MAX(E.CODE_NAME)                                AS INOUT_TYPE_DETAIL
		       , MAX(C.ITEM_CODE)                                AS ITEM_CODE
		       , CASE WHEN MAX(C.RCNT) = 1 THEN MAX(D.ITEM_NAME) ELSE  MAX(D.ITEM_NAME) + ' 외 ' + CAST(MAX(C.RCNT - 1) AS NVARCHAR) + '건' END AS ITEM_NAME
		       , MAX(A.CUSTOM_PRSN)                              AS CUSTOM_PRSN    --20210315 추가
		    FROM   BTR100T A  WITH (NOLOCK)
		           INNER JOIN BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                                AND C1.CUSTOM_CODE  = A.INOUT_CODE
		           INNER JOIN BSA300T   C2 WITH (NOLOCK) ON C2.USER_ID      = #{S_USER_ID}
		           INNER JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
		                                                AND M1.MAIN_CODE    = N'B044'
		                                                AND M1.REF_CODE1    = N'Y'
		           LEFT  JOIN TIC100T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                AND B.DIV_CODE      = A.DIV_CODE
		                                                AND B.SO_SER_NO     = A.ORDER_NUM
		                                                AND CREATE_LOC      = '6'
		           LEFT JOIN ( SELECT ROW_NUMBER() OVER(PARTITION BY INOUT_NUM, INOUT_CODE ORDER BY INOUT_SEQ) AS RNUM
		                            , COUNT(*)     OVER(PARTITION BY INOUT_NUM, INOUT_CODE) AS RCNT
		                            ,COMP_CODE, DIV_CODE, ITEM_CODE, INOUT_NUM, INOUT_CODE, INOUT_TYPE_DETAIL 
		                         FROM BTR100T WITH (NOLOCK)
		                        WHERE COMP_CODE        = @COMP_CODE
		                          AND INOUT_TYPE       = '1'
		                          AND INOUT_CODE_TYPE  = '4'
		                          AND CREATE_LOC      IN ('2','6')) C ON A.COMP_CODE  = C.COMP_CODE 
		                                                             AND A.DIV_CODE   = C.DIV_CODE
		                                                             AND A.INOUT_NUM  = C.INOUT_NUM
		                                                             AND A.INOUT_CODE = C.INOUT_CODE
		                                                             AND C.RNUM       = 1
		           LEFT  JOIN BPR100T   D WITH (NOLOCK)  ON D.COMP_CODE    = C.COMP_CODE
		                                                AND D.ITEM_CODE    = C.ITEM_CODE
		           LEFT  JOIN BSA100T   E WITH (NOLOCK)  ON E.COMP_CODE    = C.COMP_CODE
		                                                AND E.MAIN_CODE    = N'M103'
		                                                AND E.SUB_CODE     = C.INOUT_TYPE_DETAIL
		    WHERE  A.COMP_CODE        = @COMP_CODE
		    AND    A.INOUT_TYPE       = '1'
		    AND    A.INOUT_CODE_TYPE  = '4'
		    AND    A.CREATE_LOC      IN ('2','6')
		<if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
		    AND    A.INOUT_CODE    LIKE #{INOUT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		    AND    A.INOUT_DATE      &gt;= #{INOUT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		    AND    A.INOUT_DATE      &lt;= #{INOUT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		    AND    A.WH_CODE          = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		    AND    A.INOUT_PRSN       = #{INOUT_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND    A.DIV_CODE         = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_METH)">
		    AND    A.INOUT_METH       = #{INOUT_METH}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		    AND    A.WH_CELL_CODE     = #{WH_CELL_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		    AND    A.ITEM_CODE    = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
		    AND    A.INOUT_NUM    LIKE #{INOUT_NUM} + '%'
		</if>
<!-- 20210315 추가: 조회 시 입고번호로 조회할 수 있도록 수정 -->
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		    AND    A.CUSTOM_PRSN  LIKE '%' + #{CUSTOM_PRSN} + '%'
		</if>
		    GROUP  BY C1.CUSTOM_NAME, C1.CUSTOM_NAME1, C1.CUSTOM_NAME2, C2.REF_ITEM
		            , A.INOUT_DATE, M1.CODE_NAME, A.INOUT_CODE, A.WH_CODE, ISNULL(A.WH_CELL_CODE,'')
		            , A.DIV_CODE, A.INOUT_PRSN, A.INOUT_NUM, A.MONEY_UNIT, A.EXCHG_RATE_O, A.CREATE_LOC
		    ORDER  BY INOUT_NAME, A.INOUT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<!-- 입고내역 조회 -->
	<select id="s_mms510ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_mms510ukrv_wm.Cs_mms510ukrv_wm[fnMms510QStd] Query01 */
		BEGIN
		        DECLARE @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		              , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
		              , @INOUT_NUM          NVARCHAR(20)                -- (필수) 입고번호
		              , @USER_ID            NVARCHAR(100)                -- (필수) 사용자ID

		        SET NOCOUNT ON
		        SET ARITHABORT ON

		    --  1. 변수 값 할당 -----------------------------------------------------------------------------------------------
		        SET @COMP_CODE          = #{S_COMP_CODE}
		        SET @DIV_CODE           = #{DIV_CODE}
		        SET @INOUT_NUM          = #{INOUT_NUM}
		        SET @USER_ID            = #{S_USER_ID}

		    --  2. 명칭 조회 유형 설정 ----------------------------------------------------------------------------------------
		        DECLARE @RefItem            NVARCHAR(01)

		        SELECT TOP 1 @RefItem = REF_ITEM
		        FROM   BSA300T WITH (NOLOCK)
		        WHERE  USER_ID = @USER_ID

		        SET @RefItem = ISNULL(@RefItem, '0')

		    --  3. 날짜 포맷 유형 설정 ----------------------------------------------------------------------------------------
		        DECLARE @DateFormat             NVARCHAR(01)

		        SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
		        FROM   BSA100T WITH (NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    MAIN_CODE = 'B044'
		        AND    REF_CODE1 = 'Y'

		        SET @DateFormat = ISNULL(@DateFormat, '.')

		    --  4. 데이터 조회 ------------------------------------------------------------------------------------------------
		        SELECT A.INOUT_NUM
		             , A.INOUT_SEQ
		             , CASE WHEN ISNULL(A.ORDER_NUM, '')  != '' THEN 'P'     --구매발주
		                    WHEN ISNULL(Z1.COMP_CODE, '') != '' THEN 'R'
		                    WHEN ISNULL(Z2.COMP_CODE, '') != '' THEN 'R1'
		                    ELSE 'E'
		               END                                                      AS TYPE  --20210331 수정: 매입접수(개인)
		             --, CASE WHEN ISNULL(A.ORDER_NUM, '') != '' THEN 'P'     --구매발주
		             --       WHEN ISNULL(A.BASIS_NUM, '') != '' THEN 'R'     --매입접수
		             --       ELSE 'E'
		             --  END                                                      AS TYPE
		             , A.INOUT_METH
		             , A.INOUT_TYPE_DETAIL
		             , A.ITEM_CODE
		             , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                    WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                    ELSE C2.ITEM_NAME
		               END                                                      AS ITEM_NAME
		             , C3.ITEM_ACCOUNT
		             , C2.SPEC
		             , ISNULL(A.ORDER_UNIT, C2.STOCK_UNIT)                      AS ORDER_UNIT
		             , A.ORDER_UNIT_Q
		             , A.ITEM_STATUS
		             , A.INOUT_Q                                                AS ORIGINAL_Q
		             , ISNULL(C.GOOD_STOCK_Q, 0)                                AS GOOD_STOCK_Q
		             , ISNULL(C.BAD_STOCK_Q, 0)                                 AS BAD_STOCK_Q
		             , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.QTY,0) - ISNULL(D.RECEIPT_QTY,0)
		                   ELSE ISNULL(B.ORDER_Q, 0) - ISNULL(B.INSTOCK_Q, 0)
		               END AS NOINOUT_Q
		             , A.PRICE_YN
		             , A.MONEY_UNIT
		             , A.INOUT_FOR_P
		             , A.INOUT_FOR_O
		             , A.ORDER_UNIT_FOR_P
		             , A.INOUT_FOR_O                                            AS ORDER_UNIT_FOR_O
		             , A.ACCOUNT_YNC
		             , A.EXCHG_RATE_O
		             , A.INOUT_P
		             , A.INOUT_I
		             , A.ORDER_UNIT_P
		             --20190419 자사금액이 INOUT_I로 표현되고 있어 수정, A.INOUT_I             AS ORDER_UNIT_I
		             , A.ORDER_UNIT_O                                           AS ORDER_UNIT_I
		             , ISNULL(A.TRANS_COST,  0)                                 AS TRANS_COST
		             , ISNULL(A.TARIFF_AMT, 0)                                  AS TARIFF_AMT
		             , C2.STOCK_UNIT
		             , A.TRNS_RATE
		             , A.INOUT_Q
		             , A.ORDER_TYPE
		             , A.LC_NUM
		             , A.BL_NUM
		             , CASE WHEN ISNULL(Z1.COMP_CODE, '') = '' AND ISNULL(Z2.COMP_CODE, '') = '' THEN A.ORDER_NUM
		                    ELSE A.BASIS_NUM
		               END                                                     AS ORDER_NUM    --매입접수참조일 경우에는 접수번호를 btr100t.basis_num에 저장하므로
		             , CASE WHEN ISNULL(Z1.COMP_CODE, '') = '' AND ISNULL(Z2.COMP_CODE, '') = '' THEN A.ORDER_SEQ
		                    ELSE A.BASIS_SEQ
		               END                                                     AS ORDER_SEQ    --매입접수참조일 경우에는 접수번호를 btr100t.basis_seq에 저장하므로
		             , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.QTY,0)
		                    ELSE ISNULL(B.ORDER_Q, 0)
		               END AS ORDER_Q
		             , A.INOUT_CODE_TYPE
		             , A.WH_CODE
		             , A.WH_CELL_CODE
		             , CASE WHEN ISNULL(A.INOUT_DATE, '') = '' THEN ''
		                    ELSE SUBSTRING(A.INOUT_DATE, 1, 4) + @DateFormat +
		                         SUBSTRING(A.INOUT_DATE, 5, 2) + @DateFormat +
		                         SUBSTRING(A.INOUT_DATE, 7, 2)
		               END                                                      AS INOUT_DATE
		             , A.INOUT_PRSN
		             , A.ACCOUNT_Q
		             , A.CREATE_LOC
		             , A.SALE_C_DATE
		             , A.REMARK
		             , A.PROJECT_NO
		             , A.LOT_NO
		             , C3.LOT_YN
		             , A.INOUT_TYPE
		             , A.INOUT_CODE
		             , A.DIV_CODE
		             , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                    WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                    ELSE C1.CUSTOM_NAME
		               END                                                      AS CUSTOM_NAME
		             , C1.COMPANY_NUM
		             , CASE WHEN B.ORDER_NUM IS NULL THEN ISNULL(D.RECEIPT_QTY,0)
		                    ELSE ISNULL(B.INSTOCK_Q, 0)
		               END AS INSTOCK_Q
		             , A.SALE_DIV_CODE
		             , A.SALE_CUSTOM_CODE
		             , A.BILL_TYPE
		             , A.SALE_TYPE
		             , A.UPDATE_DB_USER
		             , A.UPDATE_DB_TIME
		             , CASE WHEN ISNULL(C3.EXCESS_RATE, 0) = 0 THEN ISNULL(F.REF_CODE1, 0)
		                    ELSE C3.EXCESS_RATE
		               END                                                      AS EXCESS_RATE
		             --, C3.EXCESS_RATE
		             , A.INSPEC_NUM
		             , A.INSPEC_SEQ
		             , A.BASIS_NUM
		             , A.BASIS_SEQ
		             , ISNULL(A.SCM_FLAG_YN, 'N')                               AS SCM_FLAG_YN
		             , A.TRADE_LOC
		             , ISNULL(C2.STOCK_CARE_YN, 'Y')                            AS STOCK_CARE_YN
		             , A.COMP_CODE
		             , A.INSERT_DB_USER
		             , A.INSERT_DB_TIME
		             , 'FLAG'                                                   AS FLAG
		             , A.MAKE_LOT_NO     --거래처LOT
		             , A.MAKE_DATE       --제조일자
		             , A.MAKE_EXP_DATE   --유통기한
		             , A.RECEIPT_NUM
		             , A.RECEIPT_SEQ
		             , B.SO_NUM                                                 AS SOF_ORDER_NUM
		             , B.SO_SEQ                                                 AS SOF_ORDER_SEQ
		             , B3.CUSTOM_NAME                                           AS SOF_CUSTOM_NAME
		             , B4.ITEM_NAME                                             AS SOF_ITEM_NAME
		             --20200409 추가: 조회시에도 b/l 합계금액 표시 위해
		             , ISNULL(Z.BL_AMT_WON, 0)                                  AS BL_AMT_WON
		             , ROW_NUMBER() OVER(PARTITION BY A.INOUT_NUM, A.BL_NUM ORDER BY A.BL_NUM DESC) AS TEMP_SEQ
		             --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		             , A.CUSTOM_PRSN
		             , A.PHONE
		             , A.BANK_NAME
		             , A.BANK_ACCOUNT
		             , A.ADDR1
		             --20210317 추가: 매입접수된 생년월일 데이터 가져오는 로직 추가
		             , A.BIRTHDAY
		        FROM              BTR100T      A  WITH (NOLOCK)
		               LEFT  JOIN MPO200T      B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                       AND B.DIV_CODE      = A.DIV_CODE
		                                                       AND B.CUSTOM_CODE   = A.INOUT_CODE
		                                                       AND B.ORDER_NUM     = A.ORDER_NUM
		                                                       AND B.ORDER_SEQ     = A.ORDER_SEQ
		               LEFT  JOIN SOF110T      B1 WITH (NOLOCK) ON B1.COMP_CODE    = B.COMP_CODE
		                                                       AND B1.ORDER_NUM    = B.SO_NUM
		                                                       AND B1.SER_NO       = B.SO_SEQ
		               LEFT  JOIN SOF100T      B2 WITH (NOLOCK) ON B2.COMP_CODE    = B1.COMP_CODE
		                                                       AND B2.DIV_CODE     = B1.DIV_CODE
		                                                       AND B2.ORDER_NUM    = B1.ORDER_NUM
		               LEFT  JOIN BCM100T      B3 WITH (NOLOCK) ON B3.COMP_CODE    = B2.COMP_CODE
		                                                       AND B3.CUSTOM_CODE  = B2.CUSTOM_CODE
		               LEFT  JOIN BPR100T      B4 WITH (NOLOCK) ON B4.COMP_CODE    = B1.COMP_CODE
		                                                       AND B4.ITEM_CODE    = B1.ITEM_CODE
		               LEFT  JOIN TIA110T      D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                                       AND D.DIV_CODE      = A.DIV_CODE
		                                                       AND D.SO_SER_NO     = A.ORDER_NUM
		                                                       AND D.SO_SER        = A.ORDER_SEQ
		               LEFT  JOIN TIA100T      E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                                       AND E.DIV_CODE      = A.DIV_CODE
		                                                       AND E.EXPORTER      = A.INOUT_CODE
		                                                       AND E.SO_SER_NO     = A.ORDER_NUM
		               LEFT  JOIN BIV100T      C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                                       AND C.DIV_CODE      = A.DIV_CODE
		                                                       AND C.WH_CODE       = A.WH_CODE
		                                                       AND C.ITEM_CODE     = A.ITEM_CODE
		               INNER JOIN BCM100T      C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                                       AND C1.CUSTOM_CODE  = A.INOUT_CODE
		               INNER JOIN BPR100T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                                       AND C2.ITEM_CODE    = A.ITEM_CODE
		               INNER JOIN BPR200T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                                       AND C3.DIV_CODE     = A.DIV_CODE
		                                                       AND C3.ITEM_CODE    = A.ITEM_CODE
		               LEFT  JOIN  BSA100T     F  WITH (NOLOCK) ON  F.COMP_CODE    = A.COMP_CODE
		                                                       AND  F.MAIN_CODE    = 'M102'
		                                                       AND  F.SUB_CODE     = '1'
		               LEFT  JOIN TIC100T      Z  WITH (NOLOCK) ON Z.COMP_CODE     = A.COMP_CODE
		                                                       AND Z.DIV_CODE      = A.DIV_CODE
		                                                       AND Z.BL_SER_NO     = A.BL_NUM
		               LEFT  JOIN S_MPO020T_WM Z1 WITH (NOLOCK) ON Z1.COMP_CODE    = A.COMP_CODE
		                                                       AND Z1.DIV_CODE     = A.DIV_CODE
		                                                       AND Z1.RECEIPT_NUM  = A.BASIS_NUM
		                                                       AND Z1.RECEIPT_SEQ  = A.BASIS_SEQ
		               LEFT  JOIN S_MPO025T_WM Z2 WITH (NOLOCK) ON Z2.COMP_CODE    = A.COMP_CODE
		                                                       AND Z2.DIV_CODE     = A.DIV_CODE
		                                                       AND Z2.RECEIPT_NUM  = A.BASIS_NUM
		                                                       AND Z2.RECEIPT_SEQ  = A.BASIS_SEQ
		        WHERE  A.COMP_CODE          = @COMP_CODE
		        AND    A.DIV_CODE           = @DIV_CODE
		        AND    A.INOUT_NUM          = @INOUT_NUM
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		        AND    A.INOUT_CODE         = #{CUSTOM_CODE}
		       </if>
		        AND    A.INOUT_TYPE         = N'1'
		        AND    A.CREATE_LOC         = #{CREATE_LOC}
		        AND    A.INOUT_CODE_TYPE    = N'4'
		        ORDER  BY A.INOUT_DATE DESC, A.INOUT_NUM DESC, A.INOUT_SEQ

		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		    END
	</select>

	<!-- 미입고 참조 -->
	<select id="s_mms510ukrv_wmServiceImpl.selectnoReceiveList" parameterType="Map" resultType="rMap">
		/* mms500ukrv.Cmms500ukrv[fnMms510QRef] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode      NVARCHAR(08) /* 법인코드                */
		          , @UserId        NVARCHAR(100) /* 사용자ID                */
		          , @LangType      NVARCHAR(2)  /* 언어구분                */
		          , @RefItem       NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat    NVARCHAR(10) /* 날짜 포맷 유형 설정     */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 자재 외주검사 사용여부 */
		    DECLARE @InspecYN   NVARCHAR(10)

		    SELECT TOP 1 @InspecYN = SUB_CODE
		      FROM BSA100T  WITH (NOLOCK)
		     WHERE COMP_CODE    = @CompCode
		       AND MAIN_CODE    = N'Q003'
		       AND REF_CODE1 LIKE 'Y%'

		    SET @InspecYN = ISNULL(@InspecYN, 'N')

		    /* 파라메터값 설정 */
		    DECLARE @QueryFlag      NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */

		    SET @QueryFlag = #{CREATE_LOC}

<!-- 20210330 추가: 검색조건에 따라 발주데이터 혹은 매입데이터 조회하도록 수정 -->
		<if test="TYPE == &quot;P&quot;">
		    /* 데이터 조회 */
		    /* 자재 */
		    IF @QueryFlag = '2'
		    BEGIN
		        SELECT CAST('' AS BIT)                                                             AS GUBUN
		             , 'P'                                                                         AS TYPE --R:매입접수,P:구매발주  --20210331 추가
		             , B.ITEM_CODE                                                                 AS ITEM_CODE
		             , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                         ELSE C1.ITEM_NAME
		                 END)                                                                      AS ITEM_NAME
		             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
		             , C1.SPEC                                                                     AS SPEC
		             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                     THEN ''
		                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                 END)                                                                      AS DVRY_DATE
		             , A.DIV_CODE                                                                  AS DIV_CODE
		             , B.ORDER_UNIT                                                                AS ORDER_UNIT
		             , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
		             --, ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0)  AS REMAIN_Q
		             -- 20190724 B.INSTOCK_Q 재고단위로 변경, ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0), 0)   							AS REMAIN_Q
		             , ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.ORDER_UNIT_Q,0)      AS REMAIN_Q
		             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		             --, ISNULL(B.ORDER_Q - ISNULL(B.INSTOCK_Q,0), 0)                              AS NOINOUT_Q
		             -- 20190724 B.INSTOCK_Q 재고단위로 변경, ISNULL(B.ORDER_Q - ISNULL(B.INSTOCK_Q,0) * ISNULL(B.TRNS_RATE,1), 0)        AS NOINOUT_Q
		             , ISNULL(B.ORDER_Q - ISNULL(E.INOUT_Q,0), 0)        AS NOINOUT_Q
		             , B.ORDER_Q                                                                   AS ORDER_Q
		             , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
		             , B.MONEY_UNIT                                                                AS MONEY_UNIT
		             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		             , B.ORDER_P                                                                   AS ORDER_P
		             , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
		             --, ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0) * B.ORDER_UNIT_P   AS ORDER_O
		             -- 20190724 B.INSTOCK_Q 재고단위로 변경, ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) , 0) * B.ORDER_UNIT_P   AS ORDER_O
		             , ISNULL(B.ORDER_Q - ISNULL(E.INOUT_Q,0) , 0) * B.ORDER_P   AS ORDER_O
		             , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
		             , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
		             , B.ORDER_NUM                                                                 AS ORDER_NUM
		             , B.ORDER_SEQ                                                                 AS ORDER_SEQ
		             , A.LC_NUM                                                                    AS LC_NUM
		             , B.WH_CODE                                                                   AS WH_CODE
		             , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
		             , A.ORDER_TYPE                                                                AS ORDER_TYPE
		             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		             , ISNULL(B.TRNS_RATE,1)                                                       AS TRNS_RATE
		             , ISNULL(B.INSTOCK_Q,0)                                                       AS INSTOCK_Q
		             , B.REMARK                                                                    AS REMARK
		             , B.PROJECT_NO                                                                AS PROJECT_NO
		             , CASE WHEN ISNULL(C2.EXCESS_RATE, 0) = 0 THEN ISNULL(S.REF_CODE1, 0)
		               ELSE C2.EXCESS_RATE END                                                     AS EXCESS_RATE
		             , A.ORDER_PRSN                                                                AS ORDER_PRSN
		             , ISNULL(R1.GOOD_STOCK_Q,0)                                                   AS GOOD_STOCK_Q
		             , ISNULL(R1.BAD_STOCK_Q,0)                                                    AS BAD_STOCK_Q
		             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
		             , C2.LOT_YN
		             , B.LOT_NO
		             , C3.CUSTOM_NAME
		             , B.SO_NUM                                                                    AS SOF_ORDER_NUM
		             , B.SO_SEQ                                                                    AS SOF_ORDER_SEQ
		             , B3.CUSTOM_NAME                                                              AS SOF_CUSTOM_NAME
		             , B4.ITEM_NAME                                                                AS SOF_ITEM_NAME
		             , C3.WON_CALC_BAS
		          FROM              MPO100T A  WITH (NOLOCK)
		                INNER JOIN  MPO200T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                    AND B.DIV_CODE     = A.DIV_CODE
		                                                    AND B.CUSTOM_CODE  = A.CUSTOM_CODE
		                                                    AND B.ORDER_NUM    = A.ORDER_NUM
		                LEFT  JOIN  SOF110T B1 WITH (NOLOCK) ON B1.COMP_CODE   = B.COMP_CODE
		                                                    AND B1.ORDER_NUM   = B.SO_NUM
		                                                    AND B1.SER_NO      = B.SO_SEQ
		                LEFT  JOIN  SOF100T B2 WITH (NOLOCK) ON B2.COMP_CODE   = B1.COMP_CODE
		                                                    AND B2.DIV_CODE    = B1.DIV_CODE
		                                                    AND B2.ORDER_NUM   = B1.ORDER_NUM
		                LEFT  JOIN  BCM100T B3 WITH (NOLOCK) ON B3.COMP_CODE   = B2.COMP_CODE
		                                                    AND B3.CUSTOM_CODE = B2.CUSTOM_CODE
		                LEFT  JOIN  BPR100T B4 WITH (NOLOCK) ON B4.COMP_CODE   = B1.COMP_CODE
		                                                    AND B4.ITEM_CODE   = B1.ITEM_CODE
		                INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                    AND C1.ITEM_CODE   = B.ITEM_CODE
		                INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                    AND C2.DIV_CODE    = B.DIV_CODE
		                                                    AND C2.ITEM_CODE   = B.ITEM_CODE
		                LEFT  JOIN  BIV100T R1 WITH (NOLOCK) ON R1.COMP_CODE   = B.COMP_CODE
		                                                    AND R1.WH_CODE     = B.WH_CODE
		                                                    AND R1.ITEM_CODE   = B.ITEM_CODE
		                                                    AND R1.DIV_CODE    = B.DIV_CODE
		                LEFT  JOIN  BSA100T S  WITH (NOLOCK) ON S.COMP_CODE    = A.COMP_CODE
		                                                    AND S.MAIN_CODE    = 'M102'
		                                                    AND S.SUB_CODE     = '1'
		                LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ITEM_CODE, ORDER_NUM, ORDER_SEQ
		                                  , SUM(ISNULL(INOUT_Q, 0)) AS INOUT_Q , SUM(ISNULL(INOUT_I, 0)) AS INOUT_I
		                                  , SUM(ISNULL(ORDER_UNIT_Q, 0)) AS ORDER_UNIT_Q, SUM(ISNULL(ORDER_UNIT_O, 0)) AS ORDER_UNIT_O
		                                  , MAX(ISNULL(ORDER_UNIT_P, 0)) AS ORDER_UNIT_P
		                               FROM BTR100T WITH (NOLOCK)
		                              WHERE COMP_CODE = @CompCode
		                                AND DIV_CODE  = #{DIV_CODE}
		                                AND INOUT_TYPE = '1'
		                                AND CREATE_LOC = '2'
		                              GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, ORDER_NUM, ORDER_SEQ) E ON  E.COMP_CODE   = B.COMP_CODE
		                                                                                              AND  E.DIV_CODE    = B.IN_DIV_CODE
		                                                                                              AND  E.ITEM_CODE   = B.ITEM_CODE
		                                                                                              AND  E.ORDER_NUM   = B.ORDER_NUM
		                                                                                              AND  E.ORDER_SEQ   = B.ORDER_SEQ
		                LEFT  JOIN  BCM100T C3 WITH (NOLOCK) ON A.COMP_CODE   = C3.COMP_CODE
		                                                    AND A.CUSTOM_CODE = C3.CUSTOM_CODE
		                LEFT  JOIN  BSA100T H  WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                    AND H.MAIN_CODE   = N'B004'
		                                                    AND H.SUB_CODE   != '$'
		                                                    AND H.REF_CODE1   = 'Y'
		         WHERE A.COMP_CODE    = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		           AND B.IN_DIV_CODE     = #{DIV_CODE}
		</if>
		           AND (A.ORDER_TYPE  != '4'           AND A.ORDER_TYPE IS NOT NULL)
		           --20191126 추가
		           AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
		                                      FROM BSA100T WITH(NOLOCK)
		                                     WHERE COMP_CODE = #{S_COMP_CODE}
		                                       AND MAIN_CODE = 'M001'
		                                       AND REF_CODE9 = '6')
		           AND (A.AGREE_STATUS &gt; '1'        AND A.AGREE_STATUS IS NOT NULL)
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		           AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		           AND A.ORDER_TYPE   = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		           AND A.ORDER_PRSN   = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ESTI_DATE)">
		           AND B.DVRY_DATE   &gt;= #{FR_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ESTI_DATE)">
		           AND B.DVRY_DATE   &lt;= #{TO_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND B.MONEY_UNIT      = #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		           AND B.WH_CODE         = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		           AND B.ITEM_CODE   LIKE '%' +  #{ITEM_CODE} + '%'
		</if>
		      -- 20190724 B.INSTOC_Q      AND B.ORDER_UNIT_Q      &gt; ISNULL(B.INSTOCK_Q, 0)
		           AND B.ORDER_Q      &gt; ISNULL(E.INOUT_Q,0)
		           AND B.CONTROL_STATUS NOT IN('2', '8', '9')
		           AND ((ISNULL(B.INSPEC_FLAG, ISNULL(C2.INSPEC_YN, 'N')) = 'N' AND @InspecYN = 'Y') OR (@InspecYN != 'Y'))
		        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		    END

		    /* 무역 */
		    IF @QueryFlag = '6'
		    BEGIN
		        EXEC unilite.SP_MATRL_ImportNotInReference @CompCode
		                                                 , #{DIV_CODE}
		                                                 , #{FR_ESTI_DATE}
		                                                 , #{TO_ESTI_DATE}
		                                                 , #{CUSTOM_CODE}
		                                                 , #{ORDER_TYPE}
		                                                 , #{WH_CODE}
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		                                                 , #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isEmpty(MONEY_UNIT)">
		                                                 , ''
		</if>
		                                                 , #{INOUT_PRSN}
		                                                 , @UserId
		                                                 , 100  /* 내용을 파악한 후에 삭제해야 함*/
		    END
		</if>

		<if test="TYPE == &quot;R1&quot;">
		    BEGIN
		        --20210419 추가: 매입접수등록(개인) 변경에 따른 로직 추가 (양품 수량 가져오기)
		        SELECT CAST('' AS BIT)                                                             AS GUBUN
		             , 'R1'                                                                        AS TYPE
		             , B.ITEM_CODE                                                                 AS ITEM_CODE
		             , C1.ITEM_NAME
		             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
		             , C1.SPEC                                                                     AS SPEC
		             , B.DVRY_DATE
		             , A.DIV_CODE                                                                  AS DIV_CODE
		             , B.ORDER_UNIT                                                                AS ORDER_UNIT
		             , B.GOOD_RECEIPT_Q                                                                 AS ORDER_UNIT_Q  --구매단위 수량
		             , ISNULL(B.GOOD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                             AS REMAIN_Q
		             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		             , ISNULL(B.GOOD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                             AS NOINOUT_Q
		             , B.GOOD_RECEIPT_Q * C1.TRNS_RATE                                                  AS ORDER_Q
		             , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                    ELSE 'Y'
		               END                                                                         AS UNIT_PRICE_TYPE
		             , B.MONEY_UNIT                                                                AS MONEY_UNIT
		             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		             , B.GOOD_RECEIPT_P                                                                 AS ORDER_P
		             , B.GOOD_RECEIPT_P                                                                 AS ORDER_UNIT_P
		             , ISNULL(B.GOOD_RECEIPT_Q - ISNULL(F.INOUT_Q, 0) , 0) * B.GOOD_RECEIPT_P              AS ORDER_O
		             , B.GOOD_RECEIPT_P                                                                 AS ORDER_LOC_P
		             , B.GOOD_RECEIPT_O                                                                 AS ORDER_LOC_O
		             , B.RECEIPT_NUM                                                               AS ORDER_NUM
		             , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		             , ''                                                                          AS LC_NUM
		             , ''                                                                          AS WH_CODE
		             , ''                                                                          AS ORDER_REQ_NUM
		             , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		             , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		             , ISNULL(F.INOUT_Q, 0)                                                      AS INSTOCK_Q
		             , B.REMARK                                                                    AS REMARK
		             , ''                                                                          AS PROJECT_NO
		             , 0                                                                           AS EXCESS_RATE
		             , A.ORDER_PRSN                                                                AS ORDER_PRSN
		             , B.GOOD_RECEIPT_Q                                                            AS GOOD_STOCK_Q
		             , 0                                                                           AS BAD_STOCK_Q
		             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
		             , C2.LOT_YN
		             , ''                                                                          AS LOT_NO
		             , C3.CUSTOM_NAME
		             , ''                                                                          AS SOF_ORDER_NUM
		             , 0                                                                           AS SOF_ORDER_SEQ
		             , ''                                                                          AS SOF_CUSTOM_NAME
		             , ''                                                                          AS SOF_ITEM_NAME
		             , C3.WON_CALC_BAS
		             , A.CUSTOM_PRSN
		             , A.PHONE_NUM                                                                 AS PHONE
		             , A.BANK_NAME
		             , A.BANK_ACCOUNT
		             , A.ADDR                                                                      AS ADDR1
		             , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		             , '1'                                                                         AS ITEM_STATUS
		          FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                         AND B.DIV_CODE     = A.DIV_CODE
		                                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                LEFT  JOIN  BCM100T      B3 WITH (NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
		                                                         AND B3.CUSTOM_CODE = A.CUSTOM_CODE
		                INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                         AND C1.ITEM_CODE   = B.ITEM_CODE
		                INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                         AND C2.DIV_CODE    = B.DIV_CODE
		                                                         AND C2.ITEM_CODE   = B.ITEM_CODE
		                LEFT  JOIN  BCM100T      C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
		                                                         AND C3.CUSTOM_CODE= A.CUSTOM_CODE
		                LEFT  JOIN (
		                            SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, BASIS_NUM, BASIS_SEQ, ITEM_CODE
		                              FROM BTR100T WITH (NOLOCK)
		                             WHERE COMP_CODE       = @CompCode
		                               AND DIV_CODE        = #{DIV_CODE}
		                               AND ORDER_NUM       IS NOT NULL
		                               AND ITEM_STATUS     = N'1'
		                               AND CREATE_LOC      = N'2'
		                               AND INOUT_CODE_TYPE = N'4'
		                             GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, BASIS_NUM, BASIS_SEQ, ITEM_CODE ) F  ON B.RECEIPT_NUM = F.BASIS_NUM
		                                                                                                            AND B.RECEIPT_SEQ = F.BASIS_SEQ
		                                                                                                            AND B.ITEM_CODE   = F.ITEM_CODE
		                                                                                                            AND B.DIV_CODE    = F.DIV_CODE
		                                                                                                            AND B.COMP_CODE   = F.COMP_CODE
		         WHERE A.COMP_CODE    = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		           AND B.DIV_CODE     = #{DIV_CODE}
		</if>
		           AND (A.AGREE_STATUS &gt; '1'        AND A.AGREE_STATUS IS NOT NULL)
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		           AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		           AND '9'            = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		           AND A.ORDER_PRSN   = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ESTI_DATE)">
		           AND B.DVRY_DATE   &gt;= #{FR_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ESTI_DATE)">
		           AND B.DVRY_DATE   &lt;= #{TO_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND B.MONEY_UNIT      = #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		           AND B.ITEM_CODE   LIKE '%' +  #{ITEM_CODE} + '%'
		</if>
		           AND B.GOOD_RECEIPT_Q &gt; ISNULL(F.INOUT_Q, 0)
		           AND B.CONTROL_STATUS NOT IN('2', '8', '9')
		           AND B.GOOD_RECEIPT_Q > 0   --20210419 추가: 매입접수등록(개인) 변경에 따른 로직 추가
<!-- 20210401 추가: 특정 대분류에 맞는 검사등록 내역만 바코드로 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		        AND C1.ITEM_LEVEL1 IN
		             <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                           #{item}
		             </foreach>
		     </if>
<!-- 20210401 추가: 바코드로 입력된 접수번호 데이터 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(RECEIPT_NUM)">
		        AND A.RECEIPT_NUM  LIKE #{RECEIPT_NUM} + '%'
		     </if>
		--        ORDER BY B.RECEIPT_NUM DESC, B.RECEIPT_SEQ

		    --20210419 추가: 매입접수등록(개인) 변경에 따른 로직 추가 (불량 수량 가져오기)
		    UNION ALL

		        SELECT CAST('' AS BIT)                                                             AS GUBUN
		             , 'R1'                                                                        AS TYPE
		             , B.ITEM_CODE                                                                 AS ITEM_CODE
		             , C1.ITEM_NAME
		             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
		             , C1.SPEC                                                                     AS SPEC
		             , B.DVRY_DATE
		             , A.DIV_CODE                                                                  AS DIV_CODE
		             , B.ORDER_UNIT                                                                AS ORDER_UNIT
		             , B.BAD_RECEIPT_Q                                                             AS ORDER_UNIT_Q  --구매단위 수량
		             , ISNULL(B.BAD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                           AS REMAIN_Q
		             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
		             , ISNULL(B.BAD_RECEIPT_Q, 0) - ISNULL(F.INOUT_Q, 0)                           AS NOINOUT_Q
		             , B.BAD_RECEIPT_Q * C1.TRNS_RATE                                              AS ORDER_Q
		             , CASE WHEN B.PRICE_YN = '1' THEN 'N'
		                    ELSE 'Y'
		               END                                                                         AS UNIT_PRICE_TYPE
		             , B.MONEY_UNIT                                                                AS MONEY_UNIT
		             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
		             , B.BAD_RECEIPT_P                                                             AS ORDER_P
		             , B.BAD_RECEIPT_P                                                             AS ORDER_UNIT_P
		             , ISNULL(B.BAD_RECEIPT_Q - ISNULL(F.INOUT_Q, 0) , 0) * B.BAD_RECEIPT_P        AS ORDER_O
		             , B.BAD_RECEIPT_P                                                             AS ORDER_LOC_P
		             , B.BAD_RECEIPT_O                                                             AS ORDER_LOC_O
		             , B.RECEIPT_NUM                                                               AS ORDER_NUM
		             , B.RECEIPT_SEQ                                                               AS ORDER_SEQ
		             , ''                                                                          AS LC_NUM
		             , ''                                                                          AS WH_CODE
		             , ''                                                                          AS ORDER_REQ_NUM
		             , '9'                                                                         AS ORDER_TYPE    --발주형태(9:매입)
		             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
		             , ISNULL(C2.TRNS_RATE, 1)                                                     AS TRNS_RATE
		             , ISNULL(F.INOUT_Q, 0)                                                        AS INSTOCK_Q
		             , B.REMARK                                                                    AS REMARK
		             , ''                                                                          AS PROJECT_NO
		             , 0                                                                           AS EXCESS_RATE
		             , A.ORDER_PRSN                                                                AS ORDER_PRSN
		             , 0                                                                           AS GOOD_STOCK_Q
		             , BAD_RECEIPT_Q                                                               AS BAD_STOCK_Q
		             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
		             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
		             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
		             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
		             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
		             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
		             , C2.LOT_YN
		             , ''                                                                          AS LOT_NO
		             , C3.CUSTOM_NAME
		             , ''                                                                          AS SOF_ORDER_NUM
		             , 0                                                                           AS SOF_ORDER_SEQ
		             , ''                                                                          AS SOF_CUSTOM_NAME
		             , ''                                                                          AS SOF_ITEM_NAME
		             , C3.WON_CALC_BAS
		             , A.CUSTOM_PRSN
		             , A.PHONE_NUM                                                                 AS PHONE
		             , A.BANK_NAME
		             , A.BANK_ACCOUNT
		             , A.ADDR                                                                      AS ADDR1
		             , unilite.fnCipherDecrypt(A.REPRE_NUM, '')                                    AS BIRTHDAY
		             , '2'                                                                         AS ITEM_STATUS  --불량
		          FROM              S_MPO015T_WM A  WITH (NOLOCK)
		                INNER JOIN  S_MPO025T_WM B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                         AND B.DIV_CODE     = A.DIV_CODE
		                                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                LEFT  JOIN  BCM100T      B3 WITH (NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
		                                                         AND B3.CUSTOM_CODE = A.CUSTOM_CODE
		                INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                                         AND C1.ITEM_CODE   = B.ITEM_CODE
		                INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
		                                                         AND C2.DIV_CODE    = B.DIV_CODE
		                                                         AND C2.ITEM_CODE   = B.ITEM_CODE
		                LEFT  JOIN  BCM100T      C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
		                                                         AND C3.CUSTOM_CODE= A.CUSTOM_CODE
		                LEFT  JOIN (
		                            SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, BASIS_NUM, BASIS_SEQ, ITEM_CODE
		                              FROM BTR100T WITH (NOLOCK)
		                             WHERE COMP_CODE       = @CompCode
		                               AND DIV_CODE        = #{DIV_CODE}
		                               AND ORDER_NUM       IS NOT NULL
		                               AND ITEM_STATUS     = N'2'
		                               AND CREATE_LOC      = N'2'
		                               AND INOUT_CODE_TYPE = N'4'
		                             GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, BASIS_NUM, BASIS_SEQ, ITEM_CODE ) F  ON B.RECEIPT_NUM = F.BASIS_NUM
		                                                                                                            AND B.RECEIPT_SEQ = F.BASIS_SEQ
		                                                                                                            AND B.ITEM_CODE   = F.ITEM_CODE
		                                                                                                            AND B.DIV_CODE    = F.DIV_CODE
		                                                                                                            AND B.COMP_CODE   = F.COMP_CODE
		         WHERE A.COMP_CODE    = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		           AND B.DIV_CODE     = #{DIV_CODE}
		</if>
		           AND (A.AGREE_STATUS &gt; '1'        AND A.AGREE_STATUS IS NOT NULL)
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		           AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		           AND '9'            = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		           AND A.ORDER_PRSN   = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ESTI_DATE)">
		           AND B.DVRY_DATE   &gt;= #{FR_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ESTI_DATE)">
		           AND B.DVRY_DATE   &lt;= #{TO_ESTI_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND B.MONEY_UNIT      = #{MONEY_UNIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		           AND B.ITEM_CODE   LIKE '%' +  #{ITEM_CODE} + '%'
		</if>
		           AND B.BAD_RECEIPT_Q  &gt; ISNULL(F.INOUT_Q, 0)
		           AND B.CONTROL_STATUS NOT IN('2', '8', '9')
		           AND B.BAD_RECEIPT_Q > 0   --20210419 추가: 매입접수등록(개인) 변경에 따른 로직 추가
<!-- 20210401 추가: 특정 대분류에 맞는 검사등록 내역만 바코드로 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		        AND C1.ITEM_LEVEL1 IN
		             <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                           #{item}
		             </foreach>
		     </if>
<!-- 20210401 추가: 바코드로 입력된 접수번호 데이터 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(RECEIPT_NUM)">
		        AND A.RECEIPT_NUM  LIKE #{RECEIPT_NUM} + '%'
		     </if>
		        ORDER BY B.RECEIPT_NUM DESC, B.RECEIPT_SEQ
		    END
		</if>

		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</select>

	<!-- 반품가능 참조 -->
	<select id="s_mms510ukrv_wmServiceImpl.selectreturnPossibleList" parameterType="Map" resultType="rMap">
        /* s_mms510ukrv_wm.Cs_mms510ukrv_wm[fnRtn100QRef] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 파라메터값 설정 */
            DECLARE @QueryFlag      NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */

            SET @QueryFlag = #{CREATE_LOC}

            /* 데이터 조회 */
            /* 자재 */
            IF @QueryFlag = '2'
            BEGIN
                SELECT CAST('' AS BIT)                                                             AS GUBUN
                     , B.ITEM_CODE                                                                 AS ITEM_CODE
                     , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                            WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                            ELSE C1.ITEM_NAME
                       END                                                                         AS ITEM_NAME
                     , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
                     , C1.SPEC                                                                     AS SPEC
                     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                             THEN ''
                             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                     , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                     , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                         END)                                                                      AS DVRY_DATE
                     , A.DIV_CODE                                                                  AS DIV_CODE
                     , B.ORDER_UNIT                                                                AS ORDER_UNIT
                     , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
                     , ISNULL(E.ORDER_UNIT_Q,0) * -1                      AS REMAIN_Q
                     , C1.STOCK_UNIT                                                               AS STOCK_UNIT
                   --  , (ISNULL(B.INSTOCK_Q,0)  * -1 )                                               AS NOINOUT_Q
                     , ISNULL(E.ORDER_UNIT_Q,0)  * -1                   AS NOINOUT_Q
                     , B.ORDER_Q                                                                   AS ORDER_Q
                     , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
                     , B.MONEY_UNIT                                                                AS MONEY_UNIT
                     , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                     , B.ORDER_P                                                                   AS ORDER_P
                     , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
                     , ((ISNULL(E.INOUT_Q,0)/ISNULL(B.TRNS_RATE,1)) * -1) * B.ORDER_UNIT_P       AS ORDER_O
                     , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
                     , ((ISNULL(E.INOUT_Q,0)/ISNULL(B.TRNS_RATE,1)) * -1) * B.ORDER_LOC_P        AS ORDER_LOC_O
                     , B.ORDER_NUM                                                                 AS ORDER_NUM
                     , B.ORDER_SEQ                                                                 AS ORDER_SEQ
                     , A.LC_NUM                                                                    AS LC_NUM
                     , B.WH_CODE                                                                   AS WH_CODE
                     , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
                     , A.ORDER_TYPE                                                                AS ORDER_TYPE
                     , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                     , ISNULL(B.TRNS_RATE,1)                                                       AS TRNS_RATE
                     , ISNULL(E.INOUT_Q,0)                                                       AS INSTOCK_Q
                     , B.REMARK                                                                    AS REMARK
                     , B.PROJECT_NO                                                                AS PROJECT_NO
                     , C2.EXCESS_RATE                                                              AS EXCESS_RATE
                     , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
                     , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
                     , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
                     , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
                     , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
                     , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
                     , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
               FROM                MPO100T A  WITH (NOLOCK)
                       INNER JOIN  MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
                                                           AND  B.DIV_CODE    = A.DIV_CODE
                                                           AND  B.CUSTOM_CODE = A.CUSTOM_CODE
                                                           AND  B.ORDER_NUM   = A.ORDER_NUM
                       INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                                           AND C1.ITEM_CODE   = B.ITEM_CODE
                       INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                           AND C2.DIV_CODE    = B.DIV_CODE
                                                           AND C2.ITEM_CODE   = B.ITEM_CODE
                       INNER JOIN (SELECT COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ
                                        , SUM(INOUT_Q) AS INOUT_Q
                                        , SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q
                                     FROM BTR100T  WITH (NOLOCK)
                                    WHERE COMP_CODE  = @CompCode
        						<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                      AND DIV_CODE   = #{DIV_CODE}
                           		</if>
                                      AND INOUT_TYPE = N'1'
        						<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                                      AND WH_CODE    = #{WH_CODE}
                                </if>
                                    GROUP BY COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ) E ON E.COMP_CODE   = B.COMP_CODE
                                                                                                     AND E.DIV_CODE    = B.IN_DIV_CODE
                                                                                                     AND E.INOUT_CODE  = B.CUSTOM_CODE
                                                                                                     AND E.ORDER_NUM   = B.ORDER_NUM
                                                                                                     AND E.ORDER_SEQ   = B.ORDER_SEQ

                WHERE   A.COMP_CODE    = @CompCode
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND     B.IN_DIV_CODE     = #{DIV_CODE}
        </if>
                AND    (A.ORDER_TYPE  != N'4'           AND A.ORDER_TYPE   IS NOT NULL)
                --20191126 추가
                AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
                                           FROM BSA100T WITH(NOLOCK)
                                          WHERE COMP_CODE = #{S_COMP_CODE}
                                            AND MAIN_CODE = 'M001'
                                            AND REF_CODE9 = '6')
                AND    (A.AGREE_STATUS &gt; N'1'        AND A.AGREE_STATUS IS NOT NULL)
                AND    (ISNULL(E.INOUT_Q,0)    &gt; 0           AND ISNULL(E.INOUT_Q,0)    IS NOT NULL)
                AND     B.CONTROL_STATUS NOT IN('8', '9')
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                AND     A.CUSTOM_CODE  = #{CUSTOM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
                AND     A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
                AND     A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                AND     A.ORDER_TYPE      = #{ORDER_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                AND     B.ITEM_CODE    LIKE #{ITEM_CODE} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                          WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                              ELSE C1.ITEM_NAME
                END)             LIKE REPLACE(#{ITEM_NAME},'[','[[]') + '%'
       </if>
                ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
            END

            /* 무역 */
            IF @QueryFlag = '6'
            BEGIN
                EXEC unilite.SP_MATRL_ImportReturnNotInReference @CompCode
                                                               , #{DIV_CODE}
<!-- 20200417 수정: FR_ORDER_DATE -> ORDER_DATE_FR / TO_ORDER_DATE -> ORDER_DATE_TO -->
                                                               , #{ORDER_DATE_FR}
                                                               , #{ORDER_DATE_TO}
                                                               , #{CUSTOM_CODE}
                                                               , #{ORDER_TYPE}
        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
                                                               , #{MONEY_UNIT}
        </if>
        <if test="@foren.Ognl@isEmpty(MONEY_UNIT)">
                                                               , ''
        </if>
                                                               , #{S_USER_ID}
                                                               , 100  /* 내용을 파악한 후에 삭제해야 함*/
            END

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
	</select>

	<!-- 검사결과참조  -->
	<select id="s_mms510ukrv_wmServiceImpl.selectinspectResultList1" parameterType="Map" resultType="rMap">
		/* s_mms510ukrv_wm.Cotr510ukrv[fnmms510QRef] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode       NVARCHAR(08)  /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(02)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01)  /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10)  /* 날짜 포맷 유형 설정     */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    DECLARE @QueryFlag NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */
		    SET @QueryFlag = #{CREATE_LOC}

		<if test="TYPE == &quot;P&quot;">
		    IF @QueryFlag = '2'
		    BEGIN
		        /* 데이터 조회 */
		        /* 외주입고시 불량반영여부 체크 */
		        IF EXISTS(SELECT TOP 1 REF_CODE1
		                    FROM BSA100T WITH (NOLOCK)
		                   WHERE COMP_CODE = @CompCode
		                     AND MAIN_CODE = 'M022'
		                     AND SUB_CODE  = '1'
		                     AND REF_CODE1 = 'Y')
		        BEGIN
		            SELECT CAST('' AS BIT) AS GUBUN
		                 , 'P'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , B.ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                             ELSE C.ITEM_NAME
		                     END)                                                AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                           AS DVRY_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                           AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , B.ORDER_UNIT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0))                          AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) / ISNULL(B.TRNS_RATE,1)  AS NOINOUT_Q --190208
		                 , B.ORDER_Q
		                 , B.UNIT_PRICE_TYPE
		                 , '1'          AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , B.ORDER_P
		                 , B.ORDER_UNIT_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) / ISNULL(B.TRNS_RATE,1) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
		                 , B.ORDER_NUM
		                 , B.ORDER_SEQ
		                 , A.LC_NUM
		                 , B.WH_CODE
		                 , '' AS WH_CELL_CODE
		                 , B.ORDER_REQ_NUM
		                 , A.ORDER_TYPE
		                 , A.CUSTOM_CODE
		                 ,(CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                        WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                                            ELSE G.CUSTOM_NAME
		                    END)                 AS CUSTOM_NAME
		                 , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
		                 , A.PROJECT_NO
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK     AS INSPEC_REMARK
		                 , E.PROJECT_NO AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                , E.MAKE_DATE        --제조일자
		                , E.MAKE_EXP_DATE    --유통기한
		                , ISNULL(G.MONEY_UNIT, H.SUB_CODE)                AS MONEY_UNIT_CUST
		                , B.SO_NUM AS SOF_ORDER_NUM
		                , B.SO_SEQ AS SOF_ORDER_SEQ
		                , B3.CUSTOM_NAME AS SOF_CUSTOM_NAME
		                , B4.ITEM_NAME   AS SOF_ITEM_NAME
		                , E1.RECEIPT_NUM
		                , E1.RECEIPT_SEQ
		                , G.WON_CALC_BAS --원미만계산법
		                , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
		                , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
		            FROM              MPO100T A WITH (NOLOCK)
		                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                     AND A.DIV_CODE    = B.DIV_CODE
		                                                     AND A.ORDER_NUM   = B.ORDER_NUM
		                   LEFT JOIN SOF110T B1    WITH (NOLOCK)              ON B1.COMP_CODE   = B.COMP_CODE
		                                                     AND B1.ORDER_NUM   = B.SO_NUM
		                                                     AND B1.SER_NO      = B.SO_SEQ
		                   LEFT JOIN SOF100T B2    WITH (NOLOCK)              ON B2.COMP_CODE    = B1.COMP_CODE
		                                                     AND B2.DIV_CODE    = B1.DIV_CODE
		                                                     AND B2.ORDER_NUM    = B1.ORDER_NUM
		                   LEFT JOIN BCM100T B3 WITH (NOLOCK)              ON B3.COMP_CODE  = B2.COMP_CODE
		                                                     AND B3.CUSTOM_CODE = B2.CUSTOM_CODE
		                   LEFT JOIN BPR100T B4    WITH (NOLOCK)              ON B4.COMP_CODE  = B1.COMP_CODE
		                                                     AND B4.ITEM_CODE  = B1.ITEM_CODE
		                   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                                     AND C.ITEM_CODE   = B.ITEM_CODE
		                   INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
		                                                     AND D.DIV_CODE    = B.DIV_CODE
		                                                     AND D.ITEM_CODE   = B.ITEM_CODE
		                   INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                     AND E.DIV_CODE    = B.IN_DIV_CODE
		                                                     AND E.ORDER_NUM   = B.ORDER_NUM
		                                                     AND E.ORDER_SEQ   = B.ORDER_SEQ
		                   INNER JOIN QMS100T E1 WITH (NOLOCK) ON E1.COMP_CODE    = E.COMP_CODE
		                                                      AND E1.DIV_CODE     = E.DIV_CODE
		                                                      AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                      AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                   INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
		                                                     AND G.CUSTOM_CODE = B.CUSTOM_CODE
		                   LEFT  JOIN (
		                              SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              FROM   BTR100T WITH (NOLOCK)
		                              WHERE  INSPEC_NUM     IS NOT NULL
		                              AND    ITEM_STATUS     = N'1'
		                              AND    CREATE_LOC      = N'2'
		                              AND    INOUT_CODE_TYPE = N'4'
		                              GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              ) F ON E.INSPEC_NUM = F.INSPEC_NUM
		                                 AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                 AND E.ITEM_CODE  = F.ITEM_CODE
		                                 AND E.DIV_CODE   = F.DIV_CODE
		                                 AND E.COMP_CODE  = F.COMP_CODE
		                   LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                                    AND H.MAIN_CODE   = N'B004'
		                                                                    AND H.SUB_CODE   != '$'
		                                                                    AND H.REF_CODE1   = 'Y'
		            WHERE    A.COMP_CODE    = @CompCode
		            AND    B.CONTROL_STATUS          != N'9'
		            AND    ISNULL(A.ORDER_TYPE,'')    != N'4'
		            --20191126 추가
		            AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
		                                       FROM BSA100T WITH(NOLOCK)
		                                      WHERE COMP_CODE = #{S_COMP_CODE}
		                                        AND MAIN_CODE = 'M001'
		                                        AND REF_CODE9 = '6')
		            AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
		            AND    ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                          FROM   BPR200T WITH (NOLOCK)
		                                          WHERE  COMP_CODE = B.COMP_CODE
		                                          AND    DIV_CODE  = B.DIV_CODE
		                                          AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'
		            AND    (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		            AND    (ISNULL(E.GOOD_INSPEC_Q,0))  &gt; 0
		            AND    (ISNULL(B.ORDER_UNIT_Q,0)  - (ISNULL(F.ORDER_UNIT_Q,0) )) &gt; 0
		             <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		            AND    B.IN_DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		            AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		            AND    E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		            AND    E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            AND    A.ORDER_TYPE   = #{ORDER_TYPE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		            AND    E.INSPEC_NUM      = #{INSPEC_NUM}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		            AND    A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>

		            UNION ALL

		            SELECT
		                   CAST('' AS BIT) AS GUBUN
		                 , 'P'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , B.ITEM_CODE
		                 , CASE WHEN @RefItem = '0' THEN C.ITEM_NAME
		                        WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                        WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                        ELSE                     C.ITEM_NAME
		                   END                                                  AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                           AS DVRY_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                           AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , B.ORDER_UNIT_Q
		                 , (ISNULL(E.BAD_INSPEC_Q,0))                           AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) / ISNULL(B.TRNS_RATE,1) AS NOINOUT_Q --190208
		                 , B.ORDER_Q
		                 , B.UNIT_PRICE_TYPE
		                 , '2'          AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , B.ORDER_P
		                 , B.ORDER_UNIT_P
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) / ISNULL(B.TRNS_RATE,1) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
		                 , B.ORDER_NUM
		                 , B.ORDER_SEQ
		                 , A.LC_NUM
		                 , B.WH_CODE
		                 , '' AS WH_CELL_CODE
		                 , B.ORDER_REQ_NUM
		                 , A.ORDER_TYPE
		                 , A.CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                                             ELSE G.CUSTOM_NAME
		                      END)                AS CUSTOM_NAME
		                 , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
		                 , A.PROJECT_NO
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK     AS INSPEC_REMARK
		                 , E.PROJECT_NO AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                 , E.MAKE_DATE        --제조일자
		                 , E.MAKE_EXP_DATE    --유통기한
		                 , ISNULL(G.MONEY_UNIT, H.SUB_CODE)                AS MONEY_UNIT_CUST
		                 , B.SO_NUM AS SOF_ORDER_NUM
		                 , B.SO_SEQ AS SOF_ORDER_SEQ
		                 , B3.CUSTOM_NAME AS SOF_CUSTOM_NAME
		                 , B4.ITEM_NAME   AS SOF_ITEM_NAME
		                 , E1.RECEIPT_NUM
		                 , E1.RECEIPT_SEQ
		                 , G.WON_CALC_BAS --원미만계산법
		                 , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
		                 , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
		            FROM              MPO100T A WITH (NOLOCK)
		                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                                     AND A.DIV_CODE    = B.DIV_CODE
		                                                     AND A.ORDER_NUM   = B.ORDER_NUM
		                   LEFT JOIN SOF110T B1    WITH (NOLOCK) ON B1.COMP_CODE   = B.COMP_CODE
		                                                     AND B1.ORDER_NUM   = B.SO_NUM
		                                                     AND B1.SER_NO      = B.SO_SEQ
		                   LEFT JOIN SOF100T B2    WITH (NOLOCK) ON B2.COMP_CODE    = B1.COMP_CODE
		                                                     AND B2.DIV_CODE    = B1.DIV_CODE
		                                                     AND B2.ORDER_NUM    = B1.ORDER_NUM
		                   LEFT JOIN BCM100T B3 WITH (NOLOCK) ON B3.COMP_CODE  = B2.COMP_CODE
		                                                     AND B3.CUSTOM_CODE = B2.CUSTOM_CODE
		                   LEFT JOIN BPR100T B4    WITH (NOLOCK) ON B4.COMP_CODE  = B1.COMP_CODE
		                                                        AND B4.ITEM_CODE  = B1.ITEM_CODE
		                   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                                     AND C.ITEM_CODE   = B.ITEM_CODE
		                   INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
		                                                     AND D.DIV_CODE    = B.DIV_CODE
		                                                     AND D.ITEM_CODE   = B.ITEM_CODE
		                   INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                     AND E.DIV_CODE    = B.IN_DIV_CODE
		                                                     AND E.ORDER_NUM   = B.ORDER_NUM
		                                                     AND E.ORDER_SEQ   = B.ORDER_SEQ
		                    INNER JOIN QMS100T E1 WITH (NOLOCK) ON E1.COMP_CODE  = E.COMP_CODE
		                                                     AND E1.DIV_CODE     = E.DIV_CODE
		                                                     AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                     AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                   INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
		                                                     AND G.CUSTOM_CODE = B.CUSTOM_CODE
		                   LEFT  JOIN (
		                              SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q,SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              FROM   BTR100T WITH (NOLOCK)
		                              WHERE  INSPEC_NUM     IS NOT NULL
		                              AND    ITEM_STATUS     = N'2'
		                              AND    CREATE_LOC      = N'2'
		                              AND    INOUT_CODE_TYPE = N'4'
		                              GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              ) F ON E.INSPEC_NUM = F.INSPEC_NUM
		                                 AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                 AND E.ITEM_CODE  = F.ITEM_CODE
		                                 AND E.DIV_CODE   = F.DIV_CODE
		                                 AND E.COMP_CODE  = F.COMP_CODE
		                    LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                                        AND H.MAIN_CODE   = N'B004'
		                                                                        AND H.SUB_CODE   != '$'
		                                                                        AND H.REF_CODE1   = 'Y'
		            WHERE  A.COMP_CODE    = @CompCode
		            AND    B.CONTROL_STATUS          != N'9'
		            AND    ISNULL(A.ORDER_TYPE,'')    != N'4'
		            AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
		                                       FROM BSA100T WITH(NOLOCK)
		                                      WHERE COMP_CODE = #{S_COMP_CODE}
		                                        AND MAIN_CODE = 'M001'
		                                        AND REF_CODE9 = '6')
		            AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
		            AND    ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                          FROM   BPR200T WITH (NOLOCK)
		                                          WHERE  COMP_CODE = B.COMP_CODE
		                                          AND    DIV_CODE  = B.DIV_CODE
		                                          AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'
		            AND    (ISNULL(E.BAD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		            AND    (ISNULL(E.BAD_INSPEC_Q,0))   &gt; 0
		            AND    (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(F.ORDER_UNIT_Q,0) )) &gt; 0
		            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		            AND    B.IN_DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		            AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		            AND    E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		            AND     E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            AND    A.ORDER_TYPE   = #{ORDER_TYPE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		            AND    E.INSPEC_NUM      = #{INSPEC_NUM}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		            AND    A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>
		            ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		        END

		        ELSE
		        BEGIN
		            SELECT CAST('' AS BIT) AS GUBUN
		                 , 'P'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , B.ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                             ELSE C.ITEM_NAME
		                     END)                                            AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                            AS DVRY_DATE
		                 , UNILITE.fnGetUserdate(E.COMP_CODE, E.INSPEC_DATE) AS INSPEC_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                           AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , B.ORDER_UNIT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0)) AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) / ISNULL(B.TRNS_RATE,1) AS NOINOUT_Q
		                 , B.ORDER_Q
		                 , B.UNIT_PRICE_TYPE
		                 , '1'          AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , B.ORDER_P
		                 , B.ORDER_UNIT_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) / ISNULL(B.TRNS_RATE,1) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
		                 , B.ORDER_NUM
		                 , B.ORDER_SEQ
		                 , A.LC_NUM
		                 , B.WH_CODE
		                 , '' AS WH_CELL_CODE
		                 , B.ORDER_REQ_NUM
		                 , A.ORDER_TYPE
		                 , A.CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                              WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                          ELSE G.CUSTOM_NAME
		                     END)                AS CUSTOM_NAME
		                 , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
		                 , A.PROJECT_NO
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK     AS INSPEC_REMARK
		                 , E.PROJECT_NO AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                 , E.MAKE_DATE        --제조일자
		                 , E.MAKE_EXP_DATE    --유통기한
		                 , ISNULL(G.MONEY_UNIT, H.SUB_CODE)    AS MONEY_UNIT_CUST
		                 , B.SO_NUM AS SOF_ORDER_NUM
		                 , B.SO_SEQ AS SOF_ORDER_SEQ
		                 , B3.CUSTOM_NAME AS SOF_CUSTOM_NAME
		                 , B4.ITEM_NAME   AS SOF_ITEM_NAME
		                 , E1.RECEIPT_NUM
		                 , E1.RECEIPT_SEQ
		                 , G.WON_CALC_BAS --원미만계산법
		                 , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
		                 , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
		            FROM              MPO100T A WITH (NOLOCK)
		                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
		                                                     AND A.DIV_CODE   = B.DIV_CODE
		                                                     AND A.ORDER_NUM  = B.ORDER_NUM
		                   LEFT JOIN SOF110T B1    WITH (NOLOCK) ON B1.COMP_CODE   = B.COMP_CODE
		                                                     AND B1.ORDER_NUM   = B.SO_NUM
		                                                     AND B1.SER_NO      = B.SO_SEQ
		                   LEFT JOIN SOF100T B2    WITH (NOLOCK) ON B2.COMP_CODE    = B1.COMP_CODE
		                                                     AND B2.DIV_CODE    = B1.DIV_CODE
		                                                     AND B2.ORDER_NUM    = B1.ORDER_NUM
		                   LEFT JOIN BCM100T B3 WITH (NOLOCK) ON B3.COMP_CODE  = B2.COMP_CODE
		                                                     AND B3.CUSTOM_CODE = B2.CUSTOM_CODE
		                   LEFT JOIN BPR100T B4    WITH (NOLOCK) ON B4.COMP_CODE  = B1.COMP_CODE
		                                                        AND B4.ITEM_CODE  = B1.ITEM_CODE
		                   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
		                                                     AND C.ITEM_CODE  = B.ITEM_CODE
		                   INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
		                                                     AND D.DIV_CODE   = B.DIV_CODE
		                                                     AND D.ITEM_CODE  = B.ITEM_CODE
		                   INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE  = B.COMP_CODE
		                                                     AND E.DIV_CODE   = B.IN_DIV_CODE
		                                                     AND E.ORDER_NUM  = B.ORDER_NUM
		                                                     AND E.ORDER_SEQ  = B.ORDER_SEQ
		                   INNER JOIN QMS100T E1 WITH (NOLOCK) ON E1.COMP_CODE  = E.COMP_CODE
		                                                     AND E1.DIV_CODE     = E.DIV_CODE
		                                                     AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                     AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                   INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
		                                                     AND G.CUSTOM_CODE = B.CUSTOM_CODE
		                   LEFT  JOIN (
		                              SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              FROM   BTR100T WITH (NOLOCK)
		                              WHERE  INSPEC_NUM     IS NOT NULL
		                              AND    ITEM_STATUS     = N'1'
		                              AND    CREATE_LOC      = N'2'
		                              AND    INOUT_CODE_TYPE = N'4'
		                              GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                              ) F ON E.INSPEC_NUM = F.INSPEC_NUM
		                                 AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                 AND E.ITEM_CODE  = F.ITEM_CODE
		                                 AND E.DIV_CODE   = F.DIV_CODE
		                                 AND E.COMP_CODE  = F.COMP_CODE
		                   LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                                    AND H.MAIN_CODE   = N'B004'
		                                                                    AND H.SUB_CODE   != '$'
		                                                                    AND H.REF_CODE1   = 'Y'
		            WHERE  A.COMP_CODE    = @CompCode
		            AND    B.CONTROL_STATUS             != N'9'
		            AND    ISNULL(A.ORDER_TYPE,'')       != N'4'
		            AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
		                                       FROM BSA100T WITH(NOLOCK)
		                                      WHERE COMP_CODE = #{S_COMP_CODE}
		                                        AND MAIN_CODE = 'M001'
		                                        AND REF_CODE9 = '6')
		            AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
		            AND    ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                          FROM   BPR200T WITH (NOLOCK)
		                                          WHERE  COMP_CODE = B.COMP_CODE
		                                          AND    DIV_CODE  = B.DIV_CODE
		                                          AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'
		            AND    (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		            AND    (ISNULL(E.GOOD_INSPEC_Q,0))  &gt; 0
		            AND    (ISNULL(B.ORDER_UNIT_Q,0)  - (ISNULL(F.ORDER_UNIT_Q,0) )) &gt; 0
		            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		            AND    B.IN_DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		            AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		            AND     E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		            AND     E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            AND    A.ORDER_TYPE   = #{ORDER_TYPE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		            AND    E.INSPEC_NUM      = #{INSPEC_NUM}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		            AND    A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>
		            ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		        END
		    END

		    IF @QueryFlag = '6'
		    BEGIN
		        EXEC unilite.SP_MATRL_ImportQualityResultNotReceiptReference
		                                                   #{S_COMP_CODE}
		                                                 , #{DIV_CODE}
		                                                 , #{FR_DVRY_DATE}
		                                                 , #{TO_DVRY_DATE}
		                                                 , #{CUSTOM_CODE}
		                                                 , #{ORDER_TYPE}
		                                                 , #{WH_CODE}
		    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		                                                 , #{MONEY_UNIT}
		    </if>
		    <if test="@foren.Ognl@isEmpty(MONEY_UNIT)">
		                                                 , ''
		    </if>
		                                                 , #{S_USER_ID}
		                                                 , 100  /* 내용을 파악한 후에 삭제해야 함*/
		    END
		</if>

		<if test="TYPE == &quot;R&quot;">
		    BEGIN
		        /* 데이터 조회 */
		        /* 외주입고시 불량반영여부 체크 */
		        IF EXISTS(SELECT TOP 1 REF_CODE1
		                    FROM BSA100T WITH (NOLOCK)
		                    WHERE COMP_CODE = @CompCode
		                      AND MAIN_CODE = 'M022'
		                      AND SUB_CODE  = '1'
		                      AND REF_CODE1 = 'Y')
		        BEGIN
		            SELECT CAST('' AS BIT)                                       AS GUBUN
		                 , 'R'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , A.CUSTOM_PRSN
		                 --, B.ITEM_CODE
		                 , E.ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                             ELSE C.ITEM_NAME
		                     END)                                                AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                                AS DVRY_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                                AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , E.RECEIPT_Q                                           AS ORDER_UNIT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0))                           AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0))     AS NOINOUT_Q
		                 , ISNULL(E.GOOD_INSPEC_Q,0)                             AS ORDER_Q
		                 , 'Y'                                                   AS UNIT_PRICE_TYPE
		                 , '1'                                                   AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , E1.RECEIPT_P                                          AS ORDER_P
		                 , E1.RECEIPT_P                                          AS ORDER_UNIT_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.RECEIPT_P, 0) AS ORDER_O
		                 , B.RECEIPT_NUM                                         AS ORDER_NUM
		                 , B.RECEIPT_SEQ                                         AS ORDER_SEQ
		                 , ''                                                    AS LC_NUM
		                 , ''                                                    AS WH_CODE
		                 , ''                                                    AS WH_CELL_CODE
		                 , ''                                                    AS ORDER_REQ_NUM
		                 , '9'                                                   AS ORDER_TYPE --발주형태(임시로 9 입력)
		                 , A.CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                         ELSE G.CUSTOM_NAME
		                    END)                                                 AS CUSTOM_NAME
		                 , 1                                                     AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0)                                 AS INSTOCK_Q
		                 , ''                                                    AS PROJECT_NO
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , ISNULL(E.RECEIPT_Q    ,0) - ISNULL(F.INOUT_Q,0)       AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK                                              AS INSPEC_REMARK
		                 , E.PROJECT_NO                                          AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                 , E.MAKE_DATE          --제조일자
		                 , E.MAKE_EXP_DATE      --유통기한
		                 , ISNULL(G.MONEY_UNIT, H.SUB_CODE)                      AS MONEY_UNIT_CUST
		                 , ''                                                    AS SOF_ORDER_NUM
		                 , 0                                                     AS SOF_ORDER_SEQ
		                 , ''                                                    AS SOF_CUSTOM_NAME
		                 , ''                                                    AS SOF_ITEM_NAME
		                 , E1.RECEIPT_NUM
		                 , E1.RECEIPT_SEQ
		                 , G.WON_CALC_BAS --원미만계산법
		                 , E1.RECEIPT_P                                          AS ORDER_LOC_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.RECEIPT_P, 0) AS ORDER_LOC_O
		                 --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		                 , A.CUSTOM_PRSN
		                 , A.PHONE_NUM                                           AS PHONE
		                 , A.BANK_NAME
		                 , A.BANK_ACCOUNT
		                 , A.ADDR                                                AS ADDR1
		                 --20210317 추가: 매입접수된 생년월일 데이터 가져오는 로직 추가
		                 , unilite.fnCipherDecrypt(A.REPRE_NUM, '')             AS BIRTHDAY
		              FROM             QMS200T      E  WITH(NOLOCK)
		                    INNER JOIN QMS100T      E1 WITH(NOLOCK) ON E1.COMP_CODE    = E.COMP_CODE
		                                                           AND E1.DIV_CODE     = E.DIV_CODE
		                                                           AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                           AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                    INNER JOIN S_MPO020T_WM B  WITH(NOLOCK) ON B.COMP_CODE     = E1.COMP_CODE
		                                                           AND B.DIV_CODE      = E1.DIV_CODE
		                                                           AND B.RECEIPT_NUM   = E1.BASIS_NUM
		                                                           AND B.RECEIPT_SEQ   = E1.BASIS_SEQ
		                    INNER JOIN S_MPO010T_WM A  WITH(NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                                           AND A.DIV_CODE      = B.DIV_CODE
		                                                           AND A.RECEIPT_NUM   = B.RECEIPT_NUM
		                    --INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                    --                                       AND C.ITEM_CODE     = B.ITEM_CODE
		                    --INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = B.COMP_CODE
		                    --                                       AND D.DIV_CODE      = B.DIV_CODE
		                    --                                       AND D.ITEM_CODE     = B.ITEM_CODE
		                    INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = E.COMP_CODE
		                                                           AND C.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = E.COMP_CODE
		                                                           AND D.DIV_CODE      = E.DIV_CODE
		                                                           AND D.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BCM100T      G  WITH(NOLOCK) ON G.COMP_CODE     = A.COMP_CODE
		                                                           AND G.CUSTOM_CODE   = A.CUSTOM_CODE
		                    LEFT  JOIN (
		                                SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                  FROM BTR100T WITH (NOLOCK)
		                                 WHERE INSPEC_NUM     IS NOT NULL
		                                   AND ITEM_STATUS     = N'1'
		                                   AND CREATE_LOC      = N'2'
		                                   AND INOUT_CODE_TYPE = N'4'
		                                 GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                ) F  ON E.INSPEC_NUM = F.INSPEC_NUM
		                                    AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                    AND E.ITEM_CODE  = F.ITEM_CODE
		                                    AND E.DIV_CODE   = F.DIV_CODE
		                                    AND E.COMP_CODE  = F.COMP_CODE
		                    LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                     AND H.MAIN_CODE   = N'B004'
		                                                     AND H.SUB_CODE   != '$'
		                                                     AND H.REF_CODE1   = 'Y'
		             WHERE A.COMP_CODE                = @CompCode
		               --조거제외 20201210
		               --AND B.CONTROL_STATUS          != N'F'    --입고가 아닌 데이터만 조회(공통코드: ZM03)
		               AND ISNULL(A.AGREE_STATUS,'1') &gt; N'1' --접수마스터 승인여부(1:미승인, 2:승인)
		               AND ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                             FROM BPR200T WITH (NOLOCK)
		                                            WHERE COMP_CODE = B.COMP_CODE
		                                              AND DIV_CODE  = B.DIV_CODE
		                                              AND ITEM_CODE = B.ITEM_CODE)) = N'Y'
		               AND (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		               AND (ISNULL(E.GOOD_INSPEC_Q,0)) &gt; 0
		            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND B.DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		               AND E.INSPEC_DATE &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		               AND E.INSPEC_DATE &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		               AND E.INSPEC_NUM   LIKE #{INSPEC_NUM} + '%'
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>
<!-- 20210319 추가: 특정 대분류에 맞는 검사등록 내역만 바코드로 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		        AND C.ITEM_LEVEL1 IN
		             <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                           #{item}
		             </foreach>
		     </if>
		               --매입접수상세의 확정여부, 마스터의 승인여부 조건 추가

		            UNION ALL

		            SELECT CAST('' AS BIT)                                       AS GUBUN
		                 , 'R'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , A.CUSTOM_PRSN
		                 --, B.ITEM_CODE
		                 , E.ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                             ELSE C.ITEM_NAME
		                     END)                                                AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                                AS DVRY_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                                AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , E.RECEIPT_Q                                           AS ORDER_UNIT_Q
		                 , (ISNULL(E.BAD_INSPEC_Q,0))                            AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0))      AS NOINOUT_Q
		                 , ISNULL(E.GOOD_INSPEC_Q,0)                             AS ORDER_Q
		                 , 'Y'                                                   AS UNIT_PRICE_TYPE
		                 , '2'                                                   AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , ISNULL(E1.BAD_RECEIPT_P, 0)                           AS ORDER_P    --20210204 수정
		                 , ISNULL(E1.BAD_RECEIPT_P, 0)                           AS RECEIPT_P  --20210204 수정
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.BAD_RECEIPT_P, 0) AS ORDER_O  --20210204 수정
		                 , B.RECEIPT_NUM                                         AS ORDER_NUM
		                 , B.RECEIPT_SEQ                                         AS ORDER_SEQ
		                 , ''                                                    AS LC_NUM
		                 , ''                                                    AS WH_CODE
		                 , ''                                                    AS WH_CELL_CODE
		                 , ''                                                    AS ORDER_REQ_NUM
		                 , '9'                                                   AS ORDER_TYPE --발주형태(임시로 9 입력)
		                 , A.CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                         ELSE G.CUSTOM_NAME
		                    END)                                                 AS CUSTOM_NAME
		                 , 1                                                     AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0)                                 AS INSTOCK_Q
		                 , ''                                                    AS PROJECT_NO
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , ISNULL(E.RECEIPT_Q    ,0) - ISNULL(F.INOUT_Q,0)       AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK                                              AS INSPEC_REMARK
		                 , E.PROJECT_NO                                          AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                 , E.MAKE_DATE          --제조일자
		                 , E.MAKE_EXP_DATE      --유통기한
		                 , ISNULL(G.MONEY_UNIT, H.SUB_CODE)                      AS MONEY_UNIT_CUST
		                 , ''                                                    AS SOF_ORDER_NUM
		                 , 0                                                     AS SOF_ORDER_SEQ
		                 , ''                                                    AS SOF_CUSTOM_NAME
		                 , ''                                                    AS SOF_ITEM_NAME
		                 , E1.RECEIPT_NUM
		                 , E1.RECEIPT_SEQ
		                 , G.WON_CALC_BAS --원미만계산법
		                 , E1.BAD_RECEIPT_P                                                                 AS ORDER_LOC_P  --20210204 수정
		                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.BAD_RECEIPT_P, 0) AS ORDER_LOC_O  --20210204 수정
		                 --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		                 , A.CUSTOM_PRSN
		                 , A.PHONE_NUM                                           AS PHONE
		                 , A.BANK_NAME
		                 , A.BANK_ACCOUNT
		                 , A.ADDR                                                AS ADDR1
		                 --20210317 추가: 매입접수된 생년월일 데이터 가져오는 로직 추가
		                 , unilite.fnCipherDecrypt(A.REPRE_NUM, '')             AS BIRTHDAY
		              FROM             QMS200T      E  WITH(NOLOCK) 
		                    INNER JOIN QMS100T      E1 WITH(NOLOCK) ON E1.COMP_CODE    = E.COMP_CODE
		                                                           AND E1.DIV_CODE     = E.DIV_CODE
		                                                           AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                           AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                    INNER JOIN S_MPO020T_WM B  WITH(NOLOCK) ON B.COMP_CODE     = E1.COMP_CODE
		                                                           AND B.DIV_CODE      = E1.DIV_CODE
		                                                           AND B.RECEIPT_NUM   = E1.BASIS_NUM
		                                                           AND B.RECEIPT_SEQ   = E1.BASIS_SEQ
		                    INNER JOIN S_MPO010T_WM A  WITH(NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                                           AND A.DIV_CODE      = B.DIV_CODE
		                                                           AND A.RECEIPT_NUM   = B.RECEIPT_NUM
		                    --INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                    --                                       AND C.ITEM_CODE     = B.ITEM_CODE
		                    --INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = B.COMP_CODE
		                    --                                       AND D.DIV_CODE      = B.DIV_CODE
		                    --                                       AND D.ITEM_CODE     = B.ITEM_CODE
		                    INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = E.COMP_CODE
		                                                           AND C.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = E.COMP_CODE
		                                                           AND D.DIV_CODE      = E.DIV_CODE
		                                                           AND D.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BCM100T      G  WITH(NOLOCK) ON G.COMP_CODE     = A.COMP_CODE
		                                                           AND G.CUSTOM_CODE   = A.CUSTOM_CODE
		                    LEFT  JOIN (
		                                SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                  FROM BTR100T WITH (NOLOCK)
		                                 WHERE INSPEC_NUM     IS NOT NULL
		                                   AND ITEM_STATUS     = N'2'
		                                   AND CREATE_LOC      = N'2'
		                                   AND INOUT_CODE_TYPE = N'4'
		                                 GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                ) F  ON E.INSPEC_NUM = F.INSPEC_NUM
		                                    AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                    AND E.ITEM_CODE  = F.ITEM_CODE
		                                    AND E.DIV_CODE   = F.DIV_CODE
		                                    AND E.COMP_CODE  = F.COMP_CODE
		                    LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                     AND H.MAIN_CODE   = N'B004'
		                                                     AND H.SUB_CODE   != '$'
		                                                     AND H.REF_CODE1   = 'Y'
		             WHERE A.COMP_CODE                = @CompCode

						--조거제외 20201210
		               --AND B.CONTROL_STATUS          != N'F'    --입고가 아닌 데이터만 조회(공통코드: ZM03)

		               AND ISNULL(A.AGREE_STATUS,'1') &gt; N'1'  --접수마스터 승인여부(1:미승인, 2:승인)
		               AND ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                             FROM BPR200T WITH (NOLOCK)
		                                            WHERE COMP_CODE = B.COMP_CODE
		                                              AND DIV_CODE  = B.DIV_CODE
		                                              AND ITEM_CODE = B.ITEM_CODE)) = N'Y'
		               AND (ISNULL(E.BAD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		               AND (ISNULL(E.BAD_INSPEC_Q,0)) &gt; 0
		            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND B.DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		               AND E.INSPEC_DATE &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		               AND E.INSPEC_DATE &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		               AND E.INSPEC_NUM   LIKE #{INSPEC_NUM} + '%'
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>
<!-- 20210319 추가: 특정 대분류에 맞는 검사등록 내역만 바코드로 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		        AND C.ITEM_LEVEL1 IN
		             <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                           #{item}
		             </foreach>
		     </if>
		              --매입접수상세의 확정여부, 마스터의 승인여부 조건 추가
		            ORDER BY E1.RECEIPT_NUM , E1.RECEIPT_SEQ
		        END
		    ELSE
		        BEGIN
		            SELECT CAST('' AS BIT)                                       AS GUBUN
		                 , 'R'                                                   AS TYPE --R:매입접수,P:구매발주
		                 , A.CUSTOM_PRSN
		                 --, B.ITEM_CODE
		                 , E.ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                         ELSE C.ITEM_NAME
		                    END)                                                 AS ITEM_NAME
		                 , D.ITEM_ACCOUNT
		                 , C.SPEC
		                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
		                     END)                                                AS DVRY_DATE
		                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
		                     END)                                                AS INSPEC_DATE
		                 , A.DIV_CODE
		                 , B.ORDER_UNIT
		                 , E.RECEIPT_Q                                           AS ORDER_UNIT_Q
		                 , (ISNULL(E.GOOD_INSPEC_Q,0))                           AS REMAIN_Q
		                 , C.STOCK_UNIT
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0))     AS NOINOUT_Q
		                 , ISNULL(E.GOOD_INSPEC_Q,0)                             AS ORDER_Q
		                 , 'Y'                                                   AS UNIT_PRICE_TYPE
		                 , '1'                                                   AS ITEM_STATUS
		                 , A.MONEY_UNIT
		                 , A.EXCHG_RATE_O
		                 , E1.RECEIPT_P                                          AS ORDER_P
		                 , E1.RECEIPT_P                                          AS ORDER_UNIT_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.RECEIPT_P, 0) AS ORDER_O
		                 , B.RECEIPT_NUM                                         AS ORDER_NUM
		                 , B.RECEIPT_SEQ                                         AS ORDER_SEQ
		                 , ''                                                    AS LC_NUM
		                 , ''                                                    AS WH_CODE
		                 , ''                                                    AS WH_CELL_CODE
		                 , ''                                                    AS ORDER_REQ_NUM
		                 , '9'                                                   AS ORDER_TYPE --발주형태(임시로 9 입력)
		                 , A.CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
		                         ELSE G.CUSTOM_NAME
		                    END)                                                 AS CUSTOM_NAME
		                 , 1                                                     AS TRNS_RATE
		                 , ISNULL(B.INSTOCK_Q,0)                                 AS INSTOCK_Q
		                 , ''                                                    AS PROJECT_NO
		                                  
		                 , D.EXCESS_RATE
		                 , E.INSPEC_NUM
		                 , E.INSPEC_SEQ
		                 , ISNULL(E.RECEIPT_Q    ,0) - ISNULL(F.INOUT_Q,0)       AS PORE_Q
		                 , E.LOT_NO
		                 , E.REMARK                                              AS INSPEC_REMARK
		                 , E.PROJECT_NO                                          AS INSPEC_PROJECT_NO
		                 , E.MAKE_LOT_NO        --거래처LOT
		                 , E.MAKE_DATE          --제조일자
		                 , E.MAKE_EXP_DATE      --유통기한
		                 , ISNULL(G.MONEY_UNIT, H.SUB_CODE)                      AS MONEY_UNIT_CUST
		                 , ''                                                    AS SOF_ORDER_NUM
		                 , 0                                                     AS SOF_ORDER_SEQ
		                 , ''                                                    AS SOF_CUSTOM_NAME
		                 , ''                                                    AS SOF_ITEM_NAME
		                 , E1.RECEIPT_NUM
		                 , E1.RECEIPT_SEQ
		                 , G.WON_CALC_BAS       --원미만계산법
		                 , E1.RECEIPT_P                                          AS ORDER_LOC_P
		                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0))) * ISNULL(E1.RECEIPT_P, 0)  AS ORDER_LOC_O
		                 --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		                 , A.CUSTOM_PRSN
		                 , A.PHONE_NUM                                           AS PHONE
		                 , A.BANK_NAME
		                 , A.BANK_ACCOUNT
		                 , A.ADDR                                                AS ADDR1
		                 --20210317 추가: 매입접수된 생년월일 데이터 가져오는 로직 추가
		                 , unilite.fnCipherDecrypt(A.REPRE_NUM, '')              AS BIRTHDAY
		              FROM             QMS200T      E  WITH(NOLOCK) 
		                    INNER JOIN QMS100T      E1 WITH(NOLOCK) ON E1.COMP_CODE    = E.COMP_CODE
		                                                           AND E1.DIV_CODE     = E.DIV_CODE
		                                                           AND E1.RECEIPT_NUM  = E.RECEIPT_NUM
		                                                           AND E1.RECEIPT_SEQ  = E.RECEIPT_SEQ
		                    INNER JOIN S_MPO020T_WM B  WITH(NOLOCK) ON B.COMP_CODE     = E1.COMP_CODE
		                                                           AND B.DIV_CODE      = E1.DIV_CODE
		                                                           AND B.RECEIPT_NUM   = E1.BASIS_NUM
		                                                           AND B.RECEIPT_SEQ   = E1.BASIS_SEQ
		                    INNER JOIN S_MPO010T_WM A  WITH(NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                                           AND A.DIV_CODE      = B.DIV_CODE
		                                                           AND A.RECEIPT_NUM     = B.RECEIPT_NUM
		                    --INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                    --                                       AND C.ITEM_CODE     = B.ITEM_CODE
		                    --INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = B.COMP_CODE
		                    --                                       AND D.DIV_CODE      = B.DIV_CODE
		                    --                                       AND D.ITEM_CODE     = B.ITEM_CODE
		                    INNER JOIN BPR100T      C  WITH(NOLOCK) ON C.COMP_CODE     = E.COMP_CODE
		                                                           AND C.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BPR200T      D  WITH(NOLOCK) ON D.COMP_CODE     = E.COMP_CODE
		                                                           AND D.DIV_CODE      = E.DIV_CODE
		                                                           AND D.ITEM_CODE     = E.ITEM_CODE
		                    INNER JOIN BCM100T      G  WITH(NOLOCK) ON G.COMP_CODE     = A.COMP_CODE
		                                                           AND G.CUSTOM_CODE   = A.CUSTOM_CODE
		                    LEFT  JOIN (
		                                SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                  FROM BTR100T WITH (NOLOCK)
		                                 WHERE INSPEC_NUM     IS NOT NULL
		                                   AND ITEM_STATUS     = N'1'
		                                   AND CREATE_LOC      = N'2'
		                                   AND INOUT_CODE_TYPE = N'4'
		                                 GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
		                                ) F  ON E.INSPEC_NUM = F.INSPEC_NUM
		                                    AND E.INSPEC_SEQ = F.INSPEC_SEQ
		                                    AND E.ITEM_CODE  = F.ITEM_CODE
		                                    AND E.DIV_CODE   = F.DIV_CODE
		                                    AND E.COMP_CODE  = F.COMP_CODE
		                    LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
		                                                     AND H.MAIN_CODE   = N'B004'
		                                                     AND H.SUB_CODE   != '$'
		                                                     AND H.REF_CODE1   = 'Y'
		             WHERE A.COMP_CODE                = @CompCode
		               --조건제외 20201210
		               --AND B.CONTROL_STATUS          != N'F'    --입고가 아닌 데이터만 조회(공통코드: ZM03)
		               AND ISNULL(A.AGREE_STATUS,'1') &gt; N'1' --접수마스터 승인여부(1:미승인, 2:승인)
		               AND ISNULL(E1.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
		                                             FROM BPR200T WITH (NOLOCK)
		                                            WHERE COMP_CODE = B.COMP_CODE
		                                              AND DIV_CODE  = B.DIV_CODE
		                                              AND ITEM_CODE = B.ITEM_CODE)) = N'Y'
		               AND (ISNULL(E.GOOD_INSPEC_Q,0) - ISNULL(F.INOUT_Q,0)) &gt; 0
		               AND (ISNULL(E.GOOD_INSPEC_Q,0)) &gt; 0
		            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND B.DIV_CODE     = #{DIV_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		               AND E.INSPEC_DATE &gt;= #{FR_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		               AND E.INSPEC_DATE &lt;= #{TO_DVRY_DATE}
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
		               AND E.INSPEC_NUM   LIKE #{INSPEC_NUM} + '%'
		            </if>
		            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.MONEY_UNIT   = #{MONEY_UNIT}
		            </if>
<!-- 20210319 추가: 특정 대분류에 맞는 검사등록 내역만 바코드로 읽어오기 위해 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		        AND C.ITEM_LEVEL1 IN
		             <foreach collection="ITEM_LEVEL1" item="item" separator="," close=")" open="(">
		                           #{item}
		             </foreach>
		     </if>
		            ORDER BY E1.RECEIPT_NUM , E1.RECEIPT_SEQ
		        END
		    END
		</if>

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<!-- 무검사결과참조  -->
	<select id="s_mms510ukrv_wmServiceImpl.selectinspectResultList2" parameterType="Map" resultType="rMap">
	/* s_mms510ukrv_wm.Cotr120ukrv[fnQms120QRef] Query02 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	  	DECLARE @QueryFlag    NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */
        SET @QueryFlag = #{CREATE_LOC}

	    /* 데이터 조회 */
		IF @QueryFlag = '2'
	    BEGIN
	        SELECT CAST('' AS BIT) AS GUBUN
	             , B.ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                                         ELSE C.ITEM_NAME
	                 END)                                            AS ITEM_NAME
	             , D.ITEM_ACCOUNT
	             , C.SPEC
			     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	                 END)                                            AS DVRY_DATE
	             , UNILITE.fnGetUserdate(E.COMP_CODE, E.RECEIPT_DATE) AS INSPEC_DATE
			     , (CASE WHEN ISNULL(E.RECEIPT_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.RECEIPT_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(E.RECEIPT_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(E.RECEIPT_DATE, 7, 2))
	                 END)                                           AS INSPEC_DATE
	             , A.DIV_CODE
	             , B.ORDER_UNIT
	             , B.ORDER_UNIT_Q
	             , (ISNULL(E.RECEIPT_Q,0)) AS REMAIN_Q
	             , C.STOCK_UNIT
	             , (ISNULL(E.RECEIPT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
	             , B.ORDER_Q
	             , B.UNIT_PRICE_TYPE
	             , '1'          AS ITEM_STATUS
	             , A.MONEY_UNIT
	             , A.EXCHG_RATE_O
	             , B.ORDER_P
	             , B.ORDER_UNIT_P
	             , (ISNULL(E.RECEIPT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
	             , B.ORDER_NUM
	             , B.ORDER_SEQ
	             , A.LC_NUM
	             , B.WH_CODE
	             , '' AS WH_CELL_CODE
	             , B.ORDER_REQ_NUM
	             , A.ORDER_TYPE
	             , A.CUSTOM_CODE
			     , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
	                          WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
	                      ELSE G.CUSTOM_NAME
	                 END)                AS CUSTOM_NAME
	             , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
	             , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
	             , A.PROJECT_NO
	             , D.EXCESS_RATE
	             , E.RECEIPT_NUM 		AS INSPEC_NUM
	             , E.RECEIPT_SEQ		AS INSPEC_SEQ
	             , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
	             , E.LOT_NO
	             , E.REMARK     AS INSPEC_REMARK
	             , E.PROJECT_NO AS INSPEC_PROJECT_NO

        		, E.MAKE_LOT_NO		--거래처LOT
        		, E.MAKE_DATE		--제조일자
        		, E.MAKE_EXP_DATE	--유통기한
        		, ISNULL(G.MONEY_UNIT, H.SUB_CODE)	AS MONEY_UNIT_CUST
        		, E.RECEIPT_NUM
	            , E.RECEIPT_SEQ
				, G.WON_CALC_BAS
				--20200409 추가: 자사단가 기존 데이터 가져오는 로직 추가
				, B.ORDER_LOC_P                                                               AS ORDER_LOC_P
				, B.ORDER_LOC_O                                                               AS ORDER_LOC_O
	        FROM              MPO100T A WITH (NOLOCK)
	               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
	                                                 AND A.DIV_CODE   = B.DIV_CODE
	                                                 AND A.ORDER_NUM  = B.ORDER_NUM
	               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
	                                                 AND C.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
	                                                 AND D.DIV_CODE   = B.DIV_CODE
	                                                 AND D.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN QMS100T E WITH (NOLOCK) ON E.COMP_CODE  = B.COMP_CODE
	                                                 AND E.DIV_CODE   = B.IN_DIV_CODE
	                                                 AND E.ORDER_NUM  = B.ORDER_NUM
	                                                 AND E.ORDER_SEQ  = B.ORDER_SEQ
	               INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                 AND G.CUSTOM_CODE = B.CUSTOM_CODE
	               LEFT  JOIN (
	                          SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
	                          FROM   BTR100T WITH (NOLOCK)
	                          WHERE  COMP_CODE    = @CompCode
	                          AND    INSPEC_NUM     IS NOT NULL
	                          AND    ITEM_STATUS     = N'1'
	                          AND    CREATE_LOC      = N'2'
	                          AND    INOUT_CODE_TYPE = N'4'
	                          AND    INOUT_TYPE      = '1'
	                          GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ, ITEM_CODE
	                          ) F ON E.RECEIPT_NUM = F.INSPEC_NUM
	                             AND E.RECEIPT_SEQ = F.INSPEC_SEQ
	                             AND E.ITEM_CODE  = F.ITEM_CODE
	                             AND E.DIV_CODE   = F.DIV_CODE
	                             AND E.COMP_CODE  = F.COMP_CODE
        			LEFT JOIN BSA100T S WITH(NOLOCK) ON S.COMP_CODE = A.COMP_CODE
        											AND S.MAIN_CODE = 'M102'
        											AND S.SUB_CODE  = '1'
					 LEFT JOIN BSA100T H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
																	AND H.MAIN_CODE   = N'B004'
																	AND H.SUB_CODE   != '$'
																	AND H.REF_CODE1   = 'Y'
	        WHERE  A.COMP_CODE    = @CompCode

	        AND    B.CONTROL_STATUS             != N'9'
	        AND    ISNULL(A.ORDER_TYPE,'')       != N'4'
            --20191126 추가
            AND A.ORDER_TYPE NOT IN (SELECT SUB_CODE
                                       FROM BSA100T WITH(NOLOCK)
                                      WHERE COMP_CODE = #{S_COMP_CODE}
                                        AND MAIN_CODE = 'M001'
                                        AND REF_CODE9 = '6')
	        AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
	        AND    ISNULL(E.INSPEC_FLAG, 'N')   = N'N'
	        AND    ISNULL(E.RECEIPT_Q, 0) &gt; 0
            AND    ISNULL(E.RECEIPT_Q, 0) &gt; ISNULL(F.ORDER_UNIT_Q, 0)


			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND    B.IN_DIV_CODE     = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
			</if>
<!-- 20191126 수정: B.DVRY_DATE -> E.RECEIPT_DATE -->
			<if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
			AND    E.RECEIPT_DATE   &gt;= #{FR_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
			AND    E.RECEIPT_DATE   &lt;= #{TO_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
			AND    A.ORDER_TYPE   = #{ORDER_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND    E.RECEIPT_NUM      = #{INSPEC_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND    B.WH_CODE      = #{WH_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
			AND    A.MONEY_UNIT   = #{MONEY_UNIT}
			</if>

	        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		END

		IF @QueryFlag = '6'
	                BEGIN
	        	        EXEC unilite.SP_MATRL_ImportQualityResultReceiptReference
	        	                                                   #{S_COMP_CODE}
	        	                                                 , #{DIV_CODE}
	        	                                                 , #{FR_DVRY_DATE}
	        	                                                 , #{TO_DVRY_DATE}
	        	                                                 , #{CUSTOM_CODE}
	        	                                                 , #{ORDER_TYPE}
	        	                                                 , #{WH_CODE}
        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
                                                                 , #{MONEY_UNIT}
        </if>
        <if test="@foren.Ognl@isEmpty(MONEY_UNIT)">
                                                                 , ''
        </if>
	        	                                                 , #{S_USER_ID}
	        	                                                 , 100  /* 내용을 파악한 후에 삭제해야 함*/
	            	END

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>





	<insert id="s_mms510ukrv_wmServiceImpl.insertLogDetail" parameterType="Map">
		INSERT INTO L_BTR100T
		     ( KEY_VALUE, OPR_FLAG
		     , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
		     , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
		     , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
		     , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
		     , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
		     , BILL_TYPE, SALE_TYPE
		     , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
		     , LC_NUM, BL_NUM, TRADE_LOC, ACCOUNT_YNC, ACCOUNT_Q
		     , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
		     , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		     , MAKE_LOT_NO, MAKE_DATE		,MAKE_EXP_DATE
		     , RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
		     , WM_TYPE                                               --20201007 추가: 월드와이드메모리용 컬럼(R: 매입접수, P:구매발주, E:기타)
		     --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		     , CUSTOM_PRSN
		     , PHONE
		     , BANK_NAME
		     , BANK_ACCOUNT
		     , ADDR1
		     --20210317 추가: 접수등록 된 생년월일 입력하는 로직 추가
		     , BIRTHDAY
		) VALUES (
		       #{KEY_VALUE}, #{OPR_FLAG}
		     , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
		     , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
		     , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}
		     , #{TRANS_COST}, #{TARIFF_AMT}, #{BASIS_NUM}, #{BASIS_SEQ}, #{PROJECT_NO}, #{LOT_NO}, #{REMARK}
		     , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P},#{ORDER_UNIT_I},#{ORDER_UNIT_FOR_P}
		     , #{BILL_TYPE}, #{SALE_TYPE}
		     , #{PRICE_YN},#{SALE_DIV_CODE},#{SALE_CUSTOM_CODE}, #{SALE_C_DATE}
		     , #{LC_NUM}, #{BL_NUM}, #{TRADE_LOC}, #{ACCOUNT_YNC}, #{ACCOUNT_Q}
		     , #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}
		     , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()
		     , #{MAKE_LOT_NO},#{MAKE_DATE},#{MAKE_EXP_DATE}
		     , #{RECEIPT_NUM}, #{RECEIPT_SEQ}, #{INSPEC_Q}
		     , #{TYPE}                                               --20201007 추가: 월드와이드메모리용 컬럼(R: 매입접수, P:구매발주, E:기타)
		     --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		     , #{CUSTOM_PRSN}
		     , #{PHONE}
		     , #{BANK_NAME}
		     , #{BANK_ACCOUNT}
		     , #{ADDR1}
		     --20210317 추가: 접수등록 된 생년월일 입력하는 로직 추가
		     , #{BIRTHDAY}
		)
	</insert>

	<insert id="s_mms510ukrv_wmServiceImpl.updateLogDetail" parameterType="Map">
		INSERT INTO L_BTR100T(
		              KEY_VALUE, OPR_FLAG
		            , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
		            , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
		            , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
		            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
		            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
		            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
		            , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
		            , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
		            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
		            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
		            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
		            , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
		            , MAKE_LOT_NO, MAKE_EXP_DATE
		            , RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
		            , WM_TYPE                                               --20201007 추가: 월드와이드메모리용 컬럼(R: 매입접수, P:구매발주, E:기타)
		            --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		            , CUSTOM_PRSN
		            , PHONE
		            , BANK_NAME
		            , BANK_ACCOUNT
		            , ADDR1
		            --20210317 추가: 접수등록 된 생년월일 입력하는 로직 추가
		            , BIRTHDAY
		)
		SELECT #{KEY_VALUE}, #{OPR_FLAG}
		     , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
		     , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, INOUT_CODE_DETAIL, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
		     , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}, EXPENSE_I, RETURN_QTY
		     , #{TRANS_COST}, #{TARIFF_AMT}, #{BASIS_NUM}, #{BASIS_SEQ}, TO_DIV_CODE, #{PROJECT_NO}, PJT_CODE, #{LOT_NO}, #{REMARK}
		     , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_I}, INOUT_TAX_AMT, #{ORDER_UNIT_FOR_P}
		     , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, #{BILL_TYPE}, #{SALE_TYPE}, TAX_TYPE
		     , #{PRICE_YN}, SALE_PRSN, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, SALE_C_YN, #{SALE_C_DATE}, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
		     , #{LC_NUM}, #{BL_NUM}, #{TRADE_LOC}, LC_AMEND_SEQ, EXPENSE_FLAG, #{ACCOUNT_YNC}, #{ACCOUNT_Q}, FR_ACCOUNT, TO_ACCOUNT
		     , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
		     , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}, DELIVERY_NO
		     , #{MAKE_DATE}, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
		     , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
		     , #{MAKE_LOT_NO},#{MAKE_EXP_DATE}
		     , RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
		     , #{TYPE}                                               --20201007 추가: 월드와이드메모리용 컬럼(R: 매입접수, P:구매발주, E:기타)
		     --20210216 추가: 입고등록 시 매입접수등록한 고객정보 가져와서 btr100t에 insert 하도록 수정
		     , #{CUSTOM_PRSN}
		     , #{PHONE}
		     , #{BANK_NAME}
		     , #{BANK_ACCOUNT}
		     , #{ADDR1}
		     --20210317 추가: 접수등록 된 생년월일 입력하는 로직 추가
		     , #{BIRTHDAY}
		  FROM BTR100T A  WITH (NOLOCK)
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.INOUT_NUM  = #{INOUT_NUM}
		   AND A.INOUT_SEQ  = #{INOUT_SEQ}
		   AND A.INOUT_TYPE = #{INOUT_TYPE}
	</insert>

	<update id="s_mms510ukrv_wmServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_MATRL_Receiving_WM (
			#{CreateType	, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KeyValue		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>




<!-- 출력 -->
	<select id="s_mms510ukrv_wmServiceImpl.mainReport_label" parameterType="Map" resultType="rMap">
		/*s_mms510ukrv_wmServiceImpl.mainReport_label*/
	   /*라벨 출력 개수 관련 처리 */
	   DECLARE @PRINT_CNT INT
	   DECLARE @I INT
	   DECLARE @INOUT_NUM NVARCHAR(20)
	   SET @I = 1
	   SET @INOUT_NUM = #{INOUT_NUM}
	   SET @PRINT_CNT = #{PRINT_CNT}
	   CREATE TABLE #TEMP_PRINT(
		INOUT_NUM NVARCHAR(20)
	   )
	   WHILE @I <![CDATA[<=]]> @PRINT_CNT
	   BEGIN
		    INSERT INTO #TEMP_PRINT
			(
				INOUT_NUM
			)
			VALUES(
				@INOUT_NUM
			)
	    	SET @I = @I + 1
	   END

	    SELECT B.ITEM_CODE
		      ,LTRIM(RTRIM(C.ITEM_NAME)) AS ITEM_NAME
			  ,ISNULL(A.LOT_NO, B.LOT_NO) AS LOT_NO
			<if test="GUBUN == &quot;SHIN&quot;">
			  ,CASE WHEN ISNULL(#{INOUT_DATE},'') = '' THEN A.INOUT_DATE
			  		ELSE #{INOUT_DATE}
			    END 									AS INOUT_DATE		--입고일
			  ,#{INOUT_QTY} AS INOUT_QTY
			</if>

			<if test="GUBUN == &quot;STANDARD&quot;">
			  ,A.INOUT_DATE --포장일, 생산일
			  ,A.INOUT_Q AS INOUT_QTY
			</if>
			  ,C.STOCK_UNIT
			  ,C.ITEM_LEVEL1
			  ,C1.ITEM_ACCOUNT
			  ,B.SO_NUM AS ORDER_NUM   				    -- 수주번호
			  ,B.SO_SEQ AS ORDER_SEQ                    -- 수주순번
			  ,E.CUSTOM_NAME   AS SOF_CUSTOM_NAME		-- 수주정보의 거래처
			  ,D.ITEM_CODE 	AS SOF_ITEM_CODE  		-- 수주품목
			  ,E1.ITEM_NAME 	AS SOF_ITEM_NAME  		-- 수주품목명
			  ,ISNULL(F.CUSTOM_ITEM_CODE, D.ITEM_CODE)  AS CUSTOM_ITEM_CODE	-- 수주품목의 거래처 품목코드
			  ,ISNULL(F.CUSTOM_ITEM_NAME, E1.ITEM_NAME) AS CUSTOM_ITEM_NAME -- 수주품목의 거래처 품목명
			  ,@PRINT_CNT AS PRINT_CNT
			  ,E1.SPEC AS SOF_ITEM_SPEC
		FROM BTR100T A WITH (NOLOCK)
	    LEFT JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
										 AND A.DIV_CODE  = B.IN_DIV_CODE
										 AND A.ORDER_NUM = B.ORDER_NUM
										 AND A.ORDER_SEQ = B.ORDER_SEQ
	    INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE 	 = C.COMP_CODE --부품명
										  AND A.ITEM_CODE 	 = C.ITEM_CODE
	    INNER JOIN BPR200T C1 WITH (NOLOCK) ON A.COMP_CODE 	 = C1.COMP_CODE
										  AND  A.DIV_CODE  	 = C1.DIV_CODE
										  AND  A.ITEM_CODE 	 = C1.ITEM_CODE
		LEFT JOIN SOF110T D WITH(NOLOCK) ON D.COMP_CODE		= B.COMP_CODE --수주품목
										 AND D.DIV_CODE		= B.DIV_CODE
										 AND D.ORDER_NUM    = B.SO_NUM
										 AND D.SER_NO       = B.SO_SEQ
		LEFT JOIN SOF100T D1 WITH(NOLOCK) ON D1.COMP_CODE	 = D.COMP_CODE
										 AND D1.DIV_CODE	 = D.DIV_CODE
										 AND D1.ORDER_NUM    = D.ORDER_NUM
		LEFT JOIN BCM100T E WITH(NOLOCK) ON D1.COMP_CODE     = E.COMP_CODE  --수주의 거래처정보
										 AND D1.CUSTOM_CODE  = E.CUSTOM_CODE
		LEFT JOIN BPR100T E1 WITH(NOLOCK) ON E1.COMP_CODE	 = D.COMP_CODE  --수주품목정보
										 AND E1.ITEM_CODE	 = D.ITEM_CODE
		LEFT JOIN BPR300T F WITH(NOLOCK) ON F.COMP_CODE     = D.COMP_CODE  --수주품목의 거래처 품목 정보
										 AND F.DIV_CODE     = D.DIV_CODE
										 AND F.ITEM_CODE    = D.ITEM_CODE
										 AND F.CUSTOM_CODE  = D1.CUSTOM_CODE
										 AND F.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
																   FROM   BPR300T
																   WHERE  COMP_CODE   = F.COMP_CODE
																	 AND  DIV_CODE    = F.DIV_CODE
																	 AND  ITEM_CODE   = F.ITEM_CODE
																	 AND  CUSTOM_CODE = F.CUSTOM_CODE)
		LEFT JOIN #TEMP_PRINT R4 WITH (NOLOCK) ON R4.INOUT_NUM = A.INOUT_NUM
	    WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND   A.DIV_CODE  = #{DIV_CODE}
		AND   A.INOUT_NUM = #{INOUT_NUM}
		AND   A.INOUT_SEQ = #{INOUT_SEQ}

	    ORDER BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM
	</select>

	<select id="s_mms510ukrv_wmServiceImpl.mainReport_label_afterProg" parameterType="Map" resultType="rMap">
		/*s_mms510ukrv_wmServiceImpl.mainReport_label_afterProg*/
	  BEGIN

		   WITH BOM(CD_ITEM, CD_MATL, LEVEL, COMP_CODE, DIV_CODE)
		   AS
		   (
		      SELECT   A.PROD_ITEM_CODE
		               ,A.CHILD_ITEM_CODE
		               ,1
					   ,A.COMP_CODE
					   ,A.DIV_CODE
		      FROM BPR500T A
		      WHERE A.COMP_CODE = #{COMP_CODE}
			    AND A.DIV_CODE  = #{DIV_CODE}
				AND A.PROD_ITEM_CODE = #{SOF_ITEM_CODE}

			  UNION ALL

			  SELECT  A.PROD_ITEM_CODE
		             ,A.CHILD_ITEM_CODE
		             ,B.LEVEL + 1
					 ,A.COMP_CODE
					 ,A.DIV_CODE
		      FROM BPR500T A
		      INNER JOIN BOM B ON A.PROD_ITEM_CODE = B.CD_MATL
							  AND A.DIV_CODE  = B.DIV_CODE
			  WHERE A.COMP_CODE = #{COMP_CODE}
				AND A.DIV_CODE  = #{DIV_CODE}
		   )
		   SELECT TOP 1
		   		  A.CD_ITEM AS AFTER_PROG_ITEM_CODE
				 ,A.CD_MATL AS CHILD_ITEM_CODE
				 ,A.LEVEL
				 ,A.COMP_CODE
				 ,A.DIV_CODE
				 ,B.CODE_NAME AS  AFTER_PROG_NAME
				 ,(SELECT CUSTOM_NAME FROM BCM100T WHERE COMP_CODE = A.COMP_CODE
													 AND CUSTOM_CODE = (SELECT CUSTOM_CODE
																		FROM MPO200T WHERE COMP_CODE = A.COMP_CODE
																						AND SO_NUM = #{ORDER_NUM}
																						AND SO_SEQ = #{ORDER_SEQ}
																						AND ITEM_CODE = A.CD_ITEM)) AS AFTER_PROG_CUSTOM_NAME
		   FROM BOM A LEFT JOIN BSA100T B ON A.COMP_CODE = B.COMP_CODE
									     AND B.MAIN_CODE = 'Z040'
										 AND B.SUB_CODE  != '$'
										 AND B.SUB_CODE   = SUBSTRING(A.CD_ITEM, 11,1)

		   WHERE CD_MATL = #{ITEM_CODE}

		END
	</select>



<!-- 20210415 추가: 매입명세표 출력 -->
	<select id="s_mms510ukrv_wmServiceImpl.printMasterData" parameterType="Map" resultType="rMap">
		/* s_mms510ukrv_wmServiceImpl.printMasterData */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE    NVARCHAR(08)    -- (필수) 사업장
		          , @INOUT_NUM   NVARCHAR(20)    -- (필수) 입고번호
		          , @USER_ID     NVARCHAR(100)   -- (필수) 사용자ID

		--  1. 변수 값 할당 -----------------------------------------------------------------------------------------------
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @INOUT_NUM          = #{INOUT_NUM}
		    SET @USER_ID            = #{S_USER_ID}

		--  2. 데이터 조회 ------------------------------------------------------------------------------------------------
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.INOUT_NUM
		         , A.INOUT_DATE
		         , A.INOUT_CODE
		         , C.CUSTOM_NAME
		         , C.COMPANY_NUM
		         , C.TELEPHON
		         , ISNULL(C.ADDR1, '') + ' ' + ISNULL(C.ADDR2, '')        AS ADDRESS
		         , ''                                                       AS REMARK    --20210709 수정
		         --고객 정보, 20210419 수정: 신청인에 입고담당자 정보 보이도록 수정 - 생년월일, 전화번호, 은행명, 계좌번호는 ''
		         , ISNULL(Z3.CODE_NAME, '')                                 AS CUSTOM_PRSN
		         , ''                                                       AS PHONE
		         , ''                                                       AS BIRTHDAY
                 , CASE WHEN ISNULL(N.BANK_NAME, '') = '' THEN CASE WHEN ISNULL(C3.CUSTOM_NAME, '') = '' THEN C1.CUSTOM_NAME
                                                                    ELSE C3.CUSTOM_NAME
                                                               END
                        ELSE  N.BANK_NAME 
                   END                                            AS BANK_NAME
                 , CASE WHEN ISNULL(N.BANK_NAME, '') = '' THEN CASE WHEN ISNULL(C2.CUSTOM_CODE, '') = '' THEN unilite.fnCipherDecrypt(C.BANKBOOK_NUM, '')
                                                                    ELSE unilite.fnCipherDecrypt(C2.BANKBOOK_NUM, '')
                                                               END 
                        ELSE  unilite.fnCipherDecrypt(N.BANK_ACCOUNT, '')
                   END  AS BANK_ACCOUNT
		         , CASE WHEN ISNULL(A.BANK_ACCOUNT, '') = '' THEN ''
		                ELSE '*************'
		           END                                                      AS BANK_ACCOUNT_EXPOS
		         , A.ZIP_CODE
		         , A.ADDR1
		         , Z1.SUM_I
		         , Z1.REMARK
		         , Z2.TREE_NAME                                             AS WH_CODE_NAME
		    FROM              BTR100T      A  WITH (NOLOCK)
		           INNER JOIN BCM100T      C WITH (NOLOCK)  ON C.COMP_CODE    = A.COMP_CODE
		                                                   AND C.CUSTOM_CODE  = A.INOUT_CODE
		           LEFT JOIN BCM100T       C1 WITH (NOLOCK) ON C1.COMP_CODE    = C.COMP_CODE
                                                           AND C1.CUSTOM_CODE  = C.BANK_CODE
		           LEFT  JOIN BCM130T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = C.COMP_CODE
                                                           AND C2.CUSTOM_CODE  = C.CUSTOM_CODE
                                                           AND C2.MAIN_BOOK_YN = 'Y'
                   LEFT  JOIN BCM100T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = C2.COMP_CODE
                                                           AND C3.CUSTOM_CODE  = C2.BANK_CODE
		           INNER JOIN (SELECT COMP_CODE
		                            , DIV_CODE
		                            , INOUT_NUM
		                            , SUM(INOUT_FOR_O) AS SUM_I
		                            , MAX(REMARK)      AS REMARK
		                            , MAX(WH_CODE)     AS WH_CODE
		                         FROM BTR100T WITH(NOLOCK)
		                        WHERE COMP_CODE  = @COMP_CODE
		                          AND DIV_CODE   = @DIV_CODE
		                          AND INOUT_NUM  = @INOUT_NUM
		                          AND INOUT_TYPE = N'1'
		                        GROUP BY COMP_CODE, DIV_CODE, INOUT_NUM, INOUT_TYPE) Z1 ON Z1.COMP_CODE   = A.COMP_CODE
		                                                                               AND Z1.DIV_CODE    = A.DIV_CODE
		                                                                               AND Z1.INOUT_NUM   = A.INOUT_NUM
		           LEFT  JOIN BSA220T      Z2 WITH (NOLOCK) ON Z2.COMP_CODE  = Z1.COMP_CODE
		                                                   AND Z2.TYPE_LEVEL = Z1.DIV_CODE
		                                                   AND Z2.TREE_CODE  = Z1.WH_CODE
		           LEFT  JOIN BSA100T      Z3 WITH (NOLOCK) ON Z3.COMP_CODE  = A.COMP_CODE
		                                                   AND Z3.MAIN_CODE  = 'B024'
		                                                   AND Z3.SUB_CODE   = A.INOUT_PRSN
		           INNER JOIN MAP200T       N WITH (NOLOCK) ON N.COMP_CODE   = A.COMP_CODE
                                                           AND N.DIV_CODE    = A.DIV_CODE
                                                           AND N.ITEM_CODE   = A.ITEM_CODE
                                                           AND N.INOUT_NUM   = A.INOUT_NUM
                                                           AND N.INOUT_SEQ   = A.INOUT_SEQ
		    WHERE A.COMP_CODE    = @COMP_CODE
		      AND A.DIV_CODE     = @DIV_CODE
		      AND A.INOUT_NUM    = @INOUT_NUM
		      AND A.INOUT_TYPE   = N'1'
		    GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_DATE, A.INOUT_CODE, C.CUSTOM_NAME, C.COMPANY_NUM, C.TELEPHON, ISNULL(C.ADDR1, ''), ISNULL(C.ADDR2, '')--, A.REMARK    --20210709 주석
		           , A.CUSTOM_PRSN, A.PHONE, A.BIRTHDAY, A.BANK_NAME, A.BANK_ACCOUNT, A.ZIP_CODE, A.ADDR1, Z1.SUM_I, Z1.REMARK, Z2.TREE_NAME, Z3.CODE_NAME,N.BANK_NAME
		           , C3.CUSTOM_NAME,C1.CUSTOM_NAME,C2.CUSTOM_CODE,C.BANKBOOK_NUM,C2.BANKBOOK_NUM,N.BANK_ACCOUNT
		    ORDER BY A.INOUT_DATE DESC, A.INOUT_NUM DESC

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_mms510ukrv_wmServiceImpl.printDetailData" parameterType="Map" resultType="rMap">
		/*s_mms510ukrv_wmServiceImpl.printDetailData*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @COMP_CODE   NVARCHAR(08)    -- (필수) 법인코드
		          , @DIV_CODE    NVARCHAR(08)    -- (필수) 사업장
		          , @INOUT_NUM   NVARCHAR(20)    -- (필수) 입고번호
		          , @USER_ID     NVARCHAR(100)   -- (필수) 사용자ID

		--  1. 변수 값 할당 -----------------------------------------------------------------------------------------------
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @INOUT_NUM          = #{INOUT_NUM}
		    SET @USER_ID            = #{S_USER_ID}

		--  2. 데이터 조회 ------------------------------------------------------------------------------------------------
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.ITEM_CODE
		         , C1.ITEM_NAME
		         , C1. SPEC
		         , A.ORDER_UNIT_Q
		         , A.ORDER_UNIT_FOR_P
		         , A.INOUT_FOR_O
		         , A.REMARK
		    FROM              BTR100T      A  WITH (NOLOCK)
		           INNER JOIN BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                                   AND C1.ITEM_CODE  = A.ITEM_CODE
		    WHERE A.COMP_CODE    = @COMP_CODE
		      AND A.DIV_CODE     = @DIV_CODE
		      AND A.INOUT_NUM    = @INOUT_NUM
		      AND A.INOUT_TYPE   = N'1'

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>