<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mis200skrv_wmServiceImpl">
	<select id="s_mis200skrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_mis200skrv_wmServiceImpl.selectList */
		SELECT ROW_NUMBER() OVER (ORDER BY A.WKORD_NUM) AS ROW_NUMBER
		     , A.COMP_CODE
		     , A.DIV_CODE
		     , A.WKORD_NUM
		     , C.CUSTOM_CODE
		     , C2.CUSTOM_NAME                       AS SITE_NAME
		     , B.RECEIVER_NAME
		     --, B.GROUPKEY
		     , B.BUNDLE_NO                          AS GROUPKEY
		     , A.WORK_SHOP_CODE
		     , A.WKORD_Q
		     , D.PROG_WKORD_Q                       AS PRODT_Q         --20201208: alias 추가
		     , A.ITEM_CODE
		     , C1.ITEM_NAME
		     , B.ORDER_STATUS
		     , Z1.LEVEL_NAME                        AS ITEMLEVEL1_NAME
		     , Z2.LEVEL_NAME                        AS ITEMLEVEL2_NAME
		     , Z3.LEVEL_NAME                        AS ITEMLEVEL3_NAME
		     , A.REMARK
		     , ISNULL(A.WKORD_STATUS, '2')          AS CONTROL_STATUS  --20210215 수정: isnull 처리
		     , Z.INSPEC_Q
		  FROM       PMP100T A  WITH(NOLOCK)
		  LEFT  JOIN SOF110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                    AND B.DIV_CODE     = A.DIV_CODE
		                                    AND B.ORDER_NUM    = A.SO_NUM
		                                    AND B.SER_NO       = A.SO_SEQ
		  LEFT  JOIN SOF100T C  WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                    AND C.DIV_CODE     = B.DIV_CODE
		                                    AND C.ORDER_NUM    = B.ORDER_NUM
		  LEFT  JOIN PMR100T D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                    AND D.DIV_CODE     = A.DIV_CODE
		                                    AND D.WKORD_NUM    = A.WKORD_NUM
		                                    AND D.LINE_END_YN  = 'Y'
		  INNER JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                    AND C1.ITEM_CODE   = A.ITEM_CODE
		  INNER JOIN BCM100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                    AND C2.CUSTOM_CODE = C.CUSTOM_CODE
		  LEFT  JOIN BPR000T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                    AND Z1.LEVEL1      = C1.ITEM_LEVEL1
		                                    AND Z1.LEVEL1     != '*'
		                                    AND Z1.LEVEL2      = '*'
		                                    AND Z1.LEVEL3      = '*'
		  LEFT  JOIN BPR000T Z2 WITH(NOLOCK) ON Z2.COMP_CODE   = A.COMP_CODE
		                                    AND Z2.LEVEL1      = C1.ITEM_LEVEL1
		                                    AND Z1.LEVEL1     != '*'
		                                    AND Z2.LEVEL2      = C1.ITEM_LEVEL2
		                                    AND Z2.LEVEL2     != '*'
		                                    AND Z2.LEVEL3      = '*'
		  LEFT  JOIN BPR000T Z3 WITH(NOLOCK) ON Z3.COMP_CODE   = A.COMP_CODE
		                                    AND Z3.LEVEL1      = C1.ITEM_LEVEL1
		                                    AND Z1.LEVEL1     != '*'
		                                    AND Z3.LEVEL2      = C1.ITEM_LEVEL2
		                                    AND Z2.LEVEL2     != '*'
		                                    AND Z3.LEVEL2      = C1.ITEM_LEVEL3
		                                    AND Z3.LEVEL3     != '*'
		  --20210215 추가: 검사수량 가져오기 위해서
		  LEFT JOIN ( SELECT COMP_CODE
		                   , DIV_CODE
		                   , WKORD_NUM
		                   , SUM(INSPEC_Q) AS INSPEC_Q
		                FROM QMS400T WITH(NOLOCK)
		               GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM ) Z ON Z.COMP_CODE = A.COMP_CODE
		                                                          AND Z.DIV_CODE  = A.DIV_CODE
		                                                          AND Z.WKORD_NUM = A.WKORD_NUM
		 WHERE A.COMP_CODE         = #{S_COMP_CODE}
		   AND A.DIV_CODE          = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		   AND A.PRODT_WKORD_DATE &gt;= #{PRODT_START_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		   AND A.PRODT_WKORD_DATE &lt;= #{PRODT_END_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		   AND A.WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE         LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND C1.ITEM_NAME        LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVER_NAME)">
		   AND B.RECEIVER_NAME     LIKE #{RECEIVER_NAME} + '%'
		</if>
		<if test="WORK_END_YN == &quot;2&quot;">
		   AND ISNULL(A.WKORD_STATUS, '2') in ('2','3')
		</if>
		<if test="WORK_END_YN != &quot;2&quot; and WORK_END_YN != &quot;A&quot;">
		   AND ISNULL(A.WKORD_STATUS, '2') = #{WORK_END_YN}
		</if>
<!-- 20210215 주석: 위 로직으로 대체
		<if test="WORK_END_YN != &quot;A&quot;">
		   AND A.WKORD_STATUS      = #{WORK_END_YN}
		</if>
-->
	</select>

	<select id="s_mis200skrv_wmServiceImpl.selectBList" parameterType="Map" resultType="rMap">
		/* s_mis200skrv_wmServiceImpl.selectBList (20201208 일괄 수정) */
		SELECT ZZZ.*
		     , CASE WHEN CEILING(CONVERT(FLOAT, ZZZ.TOTAL) / 25) = 0 THEN 1            --20210316 추가
		            ELSE CEILING(CONVERT(FLOAT, ZZZ.TOTAL) / 25)
		       END                          AS PAGE
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY A.WKORD_NUM)   AS ROW_NUMBER
		              , COUNT(A.COMP_CODE) OVER()                  AS TOTAL
		              , A.COMP_CODE
		              , A.DIV_CODE
		              , A.WKORD_NUM
		              , C.CUSTOM_CODE
		              , C2.CUSTOM_NAME                             AS SITE_NAME
		              , B.RECEIVER_NAME
		             -- , B.GROUPKEY
		              , B.BUNDLE_NO                                AS GROUPKEY
		              , A.WORK_SHOP_CODE
		              , A.WKORD_Q
		              , D.PROG_WKORD_Q                             AS PRODT_Q          --20201208: alias 추가
		              , E.INSPEC_Q                                 AS OUT_INSPEC_Q     --검사량
		              , A.ITEM_CODE
		              , C1.ITEM_NAME
		              , B.ORDER_STATUS
		              , Z1.LEVEL_NAME                              AS ITEMLEVEL1_NAME
		              , Z2.LEVEL_NAME                              AS ITEMLEVEL2_NAME
		              , Z3.LEVEL_NAME                              AS ITEMLEVEL3_NAME
		              , A.REMARK
		              , A.WKORD_STATUS
		              --20201221 수정: 값 없으면(NULL) 오류 발생하여 ISNULL처리
		              , ISNULL(Z4.SUM_WKORD_Q      , 0)            AS SUM_WKORD_Q      --작업지시(잔량)
		              , ISNULL(Z4.SUM_STAN_Q       , 0)            AS SUM_STAN_Q       --작업대기
		              , ISNULL(Z4.SUM_WORKING_Q    , 0)            AS SUM_WORKING_Q    --작업중
		              , ISNULL(Z4.SUM_PROG_WKORD_Q , 0)            AS SUM_PROG_WKORD_Q --실적
		              --20201228 추가
		              , ISNULL(B.ORD_STATUS, '')                   AS ORD_STATUS       --주문상태
		           FROM       PMP100T A  WITH(NOLOCK)
		           LEFT  JOIN SOF110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                             AND B.DIV_CODE     = A.DIV_CODE
		                                             AND B.ORDER_NUM    = A.SO_NUM
		                                             AND B.SER_NO       = A.SO_SEQ
		           LEFT  JOIN SOF100T C  WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                             AND C.DIV_CODE     = B.DIV_CODE
		                                             AND C.ORDER_NUM    = B.ORDER_NUM
		           LEFT  JOIN PMR100T D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                             AND D.DIV_CODE     = A.DIV_CODE
		                                             AND D.WKORD_NUM    = A.WKORD_NUM
		                                             AND D.LINE_END_YN  = 'Y'
		           INNER JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                             AND C1.ITEM_CODE   = A.ITEM_CODE
		           LEFT JOIN BCM100T C2 WITH(NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
		                                             AND C2.CUSTOM_CODE = C.CUSTOM_CODE
		           LEFT JOIN ( SELECT COMP_CODE, DIV_CODE, WKORD_NUM, SUM(INSPEC_Q) AS INSPEC_Q
		                         FROM QMS400T WITH(NOLOCK)
		                        GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM) E ON E.COMP_CODE = A.COMP_CODE AND E.DIV_CODE = A.DIV_CODE
		                                                                  AND E.WKORD_NUM = A.WKORD_NUM
		           LEFT  JOIN BPR000T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                             AND Z1.LEVEL1      = C1.ITEM_LEVEL1
		                                             AND Z1.LEVEL1     != '*'
		                                             AND Z1.LEVEL2      = '*'
		                                             AND Z1.LEVEL3      = '*'
		           LEFT  JOIN BPR000T Z2 WITH(NOLOCK) ON Z2.COMP_CODE   = A.COMP_CODE
		                                             AND Z2.LEVEL1      = C1.ITEM_LEVEL1
		                                             AND Z1.LEVEL1     != '*'
		                                             AND Z2.LEVEL2      = C1.ITEM_LEVEL2
		                                             AND Z2.LEVEL2     != '*'
		                                             AND Z2.LEVEL3      = '*'
		           LEFT  JOIN BPR000T Z3 WITH(NOLOCK) ON Z3.COMP_CODE   = A.COMP_CODE
		                                             AND Z3.LEVEL1      = C1.ITEM_LEVEL1
		                                             AND Z1.LEVEL1     != '*'
		                                             AND Z3.LEVEL2      = C1.ITEM_LEVEL2
		                                             AND Z2.LEVEL2     != '*'
		                                             AND Z3.LEVEL2      = C1.ITEM_LEVEL3
		                                             AND Z3.LEVEL3     != '*'
		           LEFT  JOIN (SELECT A.COMP_CODE, A.DIV_CODE
		                            --, COUNT(A.COMP_CODE)                                                                     AS TOTAL          --20210316 주석
		                            , SUM(ISNULL(A.WKORD_Q - A.PRODT_Q, 0))                                                  AS SUM_WKORD_Q      ---작업지시(잔량)
		                            , SUM( CASE WHEN A.WKORD_STATUS = '7' THEN ISNULL(A.WKORD_Q - A.PRODT_Q, 0) ELSE 0 END ) AS SUM_STAN_Q       --작업대기
		                            , SUM( CASE WHEN A.WKORD_STATUS = '5' THEN ISNULL(A.WKORD_Q - A.PRODT_Q, 0) ELSE 0 END ) AS SUM_WORKING_Q    --작업중
		                            , ISNULL(D.PROG_WKORD_Q, 0)                                                              AS SUM_PROG_WKORD_Q --T생산량
		                         FROM       PMP100T A  WITH(NOLOCK)
		                         LEFT  JOIN SOF110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                           AND B.DIV_CODE     = A.DIV_CODE
		                                                           AND B.ORDER_NUM    = A.SO_NUM
		                                                           AND B.SER_NO       = A.SO_SEQ
		                         INNER JOIN BPR100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                                           AND C1.ITEM_CODE   = A.ITEM_CODE
		                         LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WORK_SHOP_CODE, SUM(PRODT_Q) AS PROG_WKORD_Q 
		                                      FROM PMR110T WITH(NOLOCK)
		                                     WHERE PRODT_DATE = #{PRODT_END_DATE}
		                                     GROUP BY COMP_CODE, DIV_CODE, WORK_SHOP_CODE) D ON D.COMP_CODE      = A.COMP_CODE
		                                                                                    AND D.DIV_CODE       = A.DIV_CODE
		                                                                                    AND D.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                        WHERE A.COMP_CODE         = #{S_COMP_CODE}
		                          AND A.DIV_CODE          = #{DIV_CODE}
		                          AND A.WKORD_STATUS      &lt; '8'
		                       <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		                          AND A.WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
		                       </if>
		                        GROUP BY A.COMP_CODE, A.DIV_CODE, D.PROG_WKORD_Q) Z4 ON Z4.COMP_CODE = A.COMP_CODE
		                                                                            AND Z4.DIV_CODE  = A.DIV_CODE
		          WHERE A.COMP_CODE         = #{S_COMP_CODE}
		            AND A.DIV_CODE          = #{DIV_CODE}
		            AND A.WKORD_Q - ISNULL(E.INSPEC_Q, 0) &gt; 0 
		            AND A.WKORD_STATUS != '8'
		            
		         <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		            AND A.WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
		         </if>
		  ) ZZZ
<if test="@foren.Ognl@isNotEmpty(page)"> 
 WHERE ZZZ.ROW_NUMBER BETWEEN ${start}+1 AND ${limit} * ${page}
</if>
	</select>
</mapper>