<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr210ukrv_wmServiceImpl">
	<select id="s_bpr210ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_bpr210ukrv_wmServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_GROUP
		     , A.ITEM_CODE
		     , C1.ITEM_NAME
		     , C1.SPEC
		     , A.USE_YN
		     , A.REMARK
		     , B.STOCK_Q
		     , B.GOOD_STOCK_Q
		     , A.SORT_SEQ       --20201210 추가
--		     , C1.ITEM_LEVEL1
--		     , C1.ITEM_LEVEL2
--		     , C1.ITEM_LEVEL3
		  FROM       S_BPR210T_WM A  WITH(NOLOCK)
		  LEFT  JOIN ( SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM(STOCK_Q) AS STOCK_Q, SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
		                 FROM BIV100T WITH(NOLOCK)
		                WHERE COMP_CODE  = #{S_COMP_CODE}
		                  AND DIV_CODE   = #{DIV_CODE}
		                GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE) B ON B.COMP_CODE = A.COMP_CODE
		                                                          AND B.DIV_CODE  = A.DIV_CODE
		                                                          AND B.ITEM_CODE = A.ITEM_CODE
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                         AND C1.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.DIV_CODE   = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE  LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND C1.ITEM_NAME LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		   AND A.ITEM_GROUP  = #{ITEM_GROUP}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		   AND C1.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		   AND C1.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		   AND C1.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		</if>
		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_GROUP, A.SORT_SEQ    --20201210 추가
	</select>



	<insert id="s_bpr210ukrv_wmServiceImpl.insertList" parameterType="Map" useGeneratedKeys="false">
		/* s_bpr210ukrv_wmServiceImpl.insertList */
		INSERT INTO S_BPR210T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , ITEM_GROUP
		     , ITEM_CODE
		     , SORT_SEQ    --20201210 추가
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , USE_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK
		</if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_GROUP}
		     , #{ITEM_CODE}
		     , #{SORT_SEQ}    --20201210 추가
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , #{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , #{REMARK}
		</if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_bpr210ukrv_wmServiceImpl.updateList" parameterType="Map">
		/* s_bpr210ukrv_wmServiceImpl.updateList */
		UPDATE S_BPR210T_WM
		   SET SORT_SEQ        = #{SORT_SEQ}    --20201210 추가
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , USE_YN          = #{USE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK          = #{REMARK}
		</if>
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND ITEM_GROUP      = #{ITEM_GROUP}
		   AND ITEM_CODE       = #{ITEM_CODE}
	</update>

	<delete id="s_bpr210ukrv_wmServiceImpl.deleteList" parameterType="Map">
		DELETE FROM S_BPR210T_WM
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND ITEM_GROUP      = #{ITEM_GROUP}
		   AND ITEM_CODE       = #{ITEM_CODE}
	</delete>
</mapper>