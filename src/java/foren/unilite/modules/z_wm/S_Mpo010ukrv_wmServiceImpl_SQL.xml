<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mpo010ukrv_wmServiceImpl">
<!-- 20201016 추가: 사용자 서명 조회 -->
	<select id="s_mpo010ukrv_wmServiceImpl.getUserSign" parameterType="Map" resultType="rMap">
		/* s_bsa315ukrv_wmServiceImpl.getUserSign */
		SELECT ISNULL(A.USER_SIGN, '') AS USER_SIGN
		  FROM BSA300T A WITH(NOLOCK)
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.USER_ID   = #{S_USER_ID}
	</select>



<!-- 조회 팝업 쿼리 -->
	<select id="s_mpo010ukrv_wmServiceImpl.searchPopupList" parameterType="Map" resultType="rMap">
		/* s_mpo010ukrv_wmServiceImpl.searchPopupList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.ORDER_PRSN
		     , A.CUSTOM_PRSN
		     , A.RECEIPT_TYPE
		     , A.RECEIPT_PRSN
		     , A.RECEIPT_DATE
		     , A.WH_CODE
		     , A.PRICE_TYPE
		     , A.PHONE_NUM
		     , A.E_MAIL
		     , A.BANK_NAME
		     , A.BANK_ACCOUNT
		     , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANK_ACCOUNT, ''), '') = '' THEN ''
		            ELSE '***************'
		       END                                           AS BANK_ACCOUNT_EXPOS
		     , A.ADDR
		     , A.HOME_TITLE
		     , A.HOME_REMARK
		     , A.REMARK
		     , A.REPRE_NUM
		     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')    AS REPRE_NUM_EXPOS
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , A.TO_PRSN
		     , A.MAIL_CONTENTS
		     , A.AGREE_STATUS
		     , A.AGREE_PRSN
		     , A.AGREE_DATE
		     --20201006 추가
		     , A.HOME_PURCHAS_NO
		     --20201228 추가
		     , A.PICKUP_METHOD
		     , A.PICKUP_DATE
		     , A.PICKUP_AREA
		  FROM       S_MPO010T_WM A  WITH(NOLOCK)
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.DIV_CODE      = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(FR_RECEIPT_DATE)">
		   AND A.RECEIPT_DATE &gt;= #{FR_RECEIPT_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_RECEIPT_DATE)">
		   AND A.RECEIPT_DATE &lt;= #{TO_RECEIPT_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND A.ORDER_PRSN    = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C.CUSTOM_NAME   LIKE #{CUSTOM_NAME} + '%'
		</if>
	</select>

<!-- 조회(master) 쿼리 -->
	<select id="s_mpo010ukrv_wmServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		/* s_mpo010ukrv_wmServiceImpl.selectMaster */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.CUSTOM_PRSN
		     , A.ORDER_PRSN
		     , A.RECEIPT_TYPE
		     , A.RECEIPT_PRSN
		     , A.RECEIPT_DATE
		     , A.WH_CODE
		     , A.PRICE_TYPE
		     , A.PHONE_NUM
		     , A.E_MAIL
		     , A.BANK_NAME
		     , A.BANK_ACCOUNT
		     , CASE WHEN ISNULL(unilite.fnCipherDecrypt(A.BANK_ACCOUNT, ''), '') = '' THEN ''
		            ELSE '***************'
		       END                                           AS BANK_ACCOUNT_EXPOS
		     , A.ADDR
		     , A.HOME_TITLE
		     , A.HOME_REMARK
		     , A.REMARK
		     , A.REPRE_NUM
		     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')    AS REPRE_NUM_EXPOS
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , A.TO_PRSN
		     , A.MAIL_CONTENTS
		     , A.AGREE_STATUS
		     , A.AGREE_PRSN
		     , A.AGREE_DATE
		     --20201006 추가
		     , A.HOME_PURCHAS_NO
		     --20201228 추가
		     , A.PICKUP_METHOD
		     , A.PICKUP_DATE
		     , A.PICKUP_AREA
		  FROM      S_MPO010T_WM A  WITH(NOLOCK)
		  LEFT JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                        AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>

<!-- 조회(detail) 쿼리 -->
	<select id="s_mpo010ukrv_wmServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/* s_mpo010ukrv_wmServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.RECEIPT_SEQ
		     , A.ITEM_CODE
		     , B1.ITEM_NAME
		     , A.ORDER_UNIT
		     , A.RECEIPT_Q
		     , A.RECEIPT_P
		     , A.RECEIPT_O
		     , A.DVRY_DATE
		     , A.INSTOCK_Q
		     , A.ARRIVAL_DATE
		     , A.ARRIVAL_PRSN
		     , A.CONTROL_STATUS
		     , A.REMARK
		     , A.CUSTOM_PRSN
		     , A.REPRE_NUM
		     , A.MONEY_UNIT
		     , A.EXCHG_RATE_O
		     , ISNULL(B.AGREE_STATUS, '1') AS AGREE_STATUS
		  FROM      S_MPO020T_WM A  WITH(NOLOCK)
		  LEFT JOIN S_MPO010T_WM B  WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                        AND B.DIV_CODE    = A.DIV_CODE
		                                        AND B.RECEIPT_NUM = A.RECEIPT_NUM
		  LEFT JOIN BPR200T      B1 WITH(NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
		                                        AND B1.DIV_CODE   = A.DIV_CODE
		                                        AND B1.ITEM_CODE  = A.ITEM_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM = #{RECEIPT_NUM}
	</select>



<!-- 매입요청 참조(홈페이지 데이터 - MARIA DB) 데이터 가져오는 로직 - 20200923 추가, 20201006 등록된 데이터 제외하는 로직 추가로 수정 -->
	<select id="s_mpo010ukrv_wmServiceImpl.requestRefPopupList" parameterType="Map" resultType="rMap">
		/* s_mpo010ukrv_wmServiceImpl.requestRefPopupList: 20210202 수정 - 담당자 답변 내용 가져와서(답변 수대로) 내용에 추가하여 보이도록 수정 */
		DECLARE @PURCHAS_NO TABLE( 
		        puchas_no      NUMERIC(10, 0)  NULL,
		        category       NVARCHAR(4000)  NULL,
		        CUSTOM_PRSN    NVARCHAR(4000)  NULL,
		        E_MAIL         NVARCHAR(4000)  NULL,
		        HOME_TITLE     NVARCHAR(4000)  NULL,
		        HOME_REMARK    NVARCHAR(MAX)   NULL,
		        id             NVARCHAR(4000)  NULL,
		        pwd            NVARCHAR(4000)  NULL,
		        notice_yn      NVARCHAR(4000)  NULL,
		        PHONE_NUM      NVARCHAR(4000)  NULL,
		        sms_yn         NVARCHAR(4000)  NULL,
		        BANK_NAME      NVARCHAR(4000)  NULL,
		        BANK_ACCOUNT   NVARCHAR(4000)  NULL,
		        ADDR           NVARCHAR(4000)  NULL,
		        read_cnt       NUMERIC(10, 0)  NULL,
		        RECEIPT_DATE   NVARCHAR(1000)  NULL,
		        updt_date      NVARCHAR(1000)  NULL,
		        puchas_cmnt_no NUMERIC(10, 0)  NULL,  --20210202 추가
		        RE_NAME        NVARCHAR(1000)  NULL,  --20210202 추가
		        RE_DATE        NVARCHAR(1000)  NULL,  --20210202 추가
		        RE_CONTENT     NVARCHAR(MAX)   NULL   --20210202 추가
		);

		DECLARE @CUSTOM_PRSN       NVARCHAR(100)
		      , @PHONE_NUM         NVARCHAR(100)
		      , @FR_RECEIPT_DATE   NVARCHAR(100)
		      , @TO_RECEIPT_DATE   NVARCHAR(100)
		      , @SQLStmt           NVARCHAR(2000)

		SET     @CUSTOM_PRSN     = #{CUSTOM_PRSN}
		SET     @PHONE_NUM       = #{TELEPHONE}
		SET     @FR_RECEIPT_DATE = #{FR_RECEIPT_DATE}
		SET     @TO_RECEIPT_DATE = #{TO_RECEIPT_DATE}

		--20201106 수정: 암호해제로직 추가 (암호화 키: applepineapple), 20210202 수정: 답변 추가
		SET     @SQLStmt   = 'select * from openquery (WORLDMEMORY, ''SELECT A.puchas_no, A.category, CONVERT(AES_DECRYPT(A.name,''''applepineapple'''')using UTF8) AS CUSTOM_PRSN, CONVERT(AES_DECRYPT(A.email,''''applepineapple'''')using UTF8) AS E_MAIL, A.subject AS HOME_TITLE, A.content AS HOME_REMARK, A.id, A.pwd, A.notice_yn, A.tel_no AS PHONE_NUM, A.sms_yn, A.bank_nm AS BANK_NAME, A.acct_no AS BANK_ACCOUNT, A.addr AS ADDR, A.read_cnt, A.reg_date AS RECEIPT_DATE, A.updt_date, B.puchas_cmnt_no, CONVERT(AES_DECRYPT(B.name,''''applepineapple'''')using UTF8) AS RE_NAME, B.reg_date AS RE_DATE, B.content AS RE_CONTENT FROM worldmemory.purchase A LEFT JOIN worldmemory.purchasecomment B on B.puchas_no = A.puchas_no WHERE 1=1'
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		SET     @SQLStmt   = @SQLStmt + ' AND CONVERT(AES_DECRYPT(A.name,''''applepineapple'''')using UTF8) LIKE ' + '''''' + @CUSTOM_PRSN + '%' + ''''''  --20210115 수정: 암호화 해제로직 추가하여 비교하도록 수정
		</if>
		<if test="@foren.Ognl@isNotEmpty(TELEPHONE)">
		SET     @SQLStmt   = @SQLStmt + ' AND A.tel_no LIKE ' + '''''' + @PHONE_NUM + '%' + ''''''
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_RECEIPT_DATE)">
		SET     @SQLStmt   = @SQLStmt + ' AND DATE_FORMAT(A.reg_date,''''%Y%m%d'''') &gt;= ' + '''''' + @FR_RECEIPT_DATE + ''''''
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_RECEIPT_DATE)">
		SET     @SQLStmt   = @SQLStmt + ' AND DATE_FORMAT(A.reg_date,''''%Y%m%d'''') &lt;= ' + '''''' + @TO_RECEIPT_DATE + ''''''
		</if>
		SET     @SQLStmt   = @SQLStmt + ''')'

		INSERT INTO @PURCHAS_NO
		EXEC SP_EXECUTESQL @SQLStmt


		DECLARE @puchas_no      NUMERIC(10, 0),
		        @puchas_cmnt_no NUMERIC(10, 0),  --20210202 추가
		        @RE_NAME        NVARCHAR(1000),  --20210202 추가
		        @RE_DATE        NVARCHAR(1000),  --20210202 추가
		        @RE_CONTENT     NVARCHAR(MAX)    --20210202 추가

		DECLARE requestRefData CURSOR FOR
		    SELECT puchas_no
		         , puchas_cmnt_no
		         , RE_NAME
		         , RE_DATE
		         , RE_CONTENT
		      FROM @PURCHAS_NO
		     --WHERE ISNULL(puchas_cmnt_no, '1') != '1' --20210208 주석

		OPEN requestRefData
		FETCH NEXT FROM requestRefData INTO @puchas_no, @puchas_cmnt_no, @RE_NAME, @RE_DATE, @RE_CONTENT

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
		    UPDATE @PURCHAS_NO
		       SET HOME_REMARK = HOME_REMARK + <![CDATA['<br><br>']]> + <![CDATA['<hr width="100%" color="green"/>']]>
		                                     + <![CDATA['<br><br>']]> + '답변자: ' + @RE_NAME + '  /  ' + '답변일자: ' + CONVERT(NVARCHAR(16), @RE_DATE)
		                                     + <![CDATA['<br><br>']]> + @RE_CONTENT
		     WHERE puchas_no = @puchas_no
		       AND ISNULL(puchas_cmnt_no, '1') = '1'

		    FETCH NEXT FROM requestRefData INTO @puchas_no, @puchas_cmnt_no, @RE_NAME, @RE_DATE, @RE_CONTENT
		END
		CLOSE requestRefData
		DEALLOCATE requestRefData

		SELECT puchas_no
		     , category
		     , CUSTOM_PRSN
		     , E_MAIL
		     , HOME_TITLE
		     , REPLACE(HOME_REMARK, 'src="/files', 'src="http://www.worldmemory.co.kr/files')  AS HOME_REMARK   --20210115 수정: 상대경로 -> 절대경로로 변경
		     , id
		     , pwd
		     , notice_yn
		     , PHONE_NUM
		     , sms_yn
		     --, LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1)                                  AS REPRE_NUM     --20210115 추가: 은행명 ',' 앞부분의 생년월일은 주민등록 번호에 set
		     , unilite.fnCipherEncrypt(LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1), '')     AS REPRE_NUM     --20210216 수정: 암호화
		     , CASE WHEN ISNULL(LEFT(BANK_NAME, CHARINDEX(',', BANK_NAME) - 1), '') = '' THEN ''
		            ELSE '***************'
		       END                                                                             AS REPRE_NUM_EXPOS
		     , RIGHT(BANK_NAME, CHARINDEX(',', REVERSE(BANK_NAME)) - 1)                        AS BANK_NAME     --20210115 추가: 은행명 ',' 뒷부분의 은행명은 그대로 은행명에 set
		     --, BANK_ACCOUNT
		     , unilite.fnCipherEncrypt(BANK_ACCOUNT, '')                                       AS BANK_ACCOUNT  --20210216 수정: 암호화
		     , CASE WHEN ISNULL(BANK_ACCOUNT, '') = '' THEN ''
		            ELSE '***************'
		       END                                                                             AS BANK_ACCOUNT_EXPOS
		     , ADDR
		     , read_cnt
		     , RECEIPT_DATE
		     , updt_date
		     , puchas_cmnt_no
		     , RE_NAME
		     , RE_DATE
		     , RE_CONTENT
		  FROM @PURCHAS_NO
		 WHERE puchas_no NOT IN (
		                         SELECT HOME_PURCHAS_NO
		                           FROM S_MPO010T_WM WITH(NOLOCK)
		                          WHERE HOME_PURCHAS_NO != ''
		       )
		   AND ISNULL(puchas_cmnt_no, '1') = '1'
	</select>



<!-- 저장 로직(master) -->
	<select id="s_mpo010ukrv_wmServiceImpl.getReceiptNum" parameterType="Map" resultType="rMap">
		DECLARE @RECEIPT_NUM  NVARCHAR(20)

		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'S_MPO010T_WM', 'A', #{RECEIPT_DATE}, '1', @RECEIPT_NUM OUTPUT

		IF ISNULL(@RECEIPT_NUM, '') != ''
			SELECT @RECEIPT_NUM AS RECEIPT_NUM
		ELSE
			SELECT TOP 0 '' AS RECEIPT_NUM
	</select>

	<select id="s_mpo010ukrv_wmServiceImpl.checkControlStatus" parameterType="Map" resultType="int">
		/* s_mpo010ukrv_wmServiceImpl.checkControlStatus */
		SELECT TOP 1 1
		  FROM S_MPO020T_WM WITH(NOLOCK)
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND RECEIPT_NUM     = #{RECEIPT_NUM}
		   AND CONTROL_STATUS != 'A'
	</select>

	<update id="s_mpo010ukrv_wmServiceImpl.saveMaster" parameterType="Map">
		/* s_mpo010ukrv_wmServiceImpl.saveMaster */
		DECLARE @CUSTOM_CODE NVARCHAR(08)

		    SET @CUSTOM_CODE = #{CUSTOM_CODE}
		    SET @CUSTOM_CODE = CASE WHEN ISNULL(@CUSTOM_CODE, '') = '' THEN 'A00001'
		                            ELSE ISNULL(@CUSTOM_CODE, '')
		                       END

		MERGE INTO S_MPO010T_WM                         A
		USING ( SELECT #{S_COMP_CODE}  AS COMP_CODE
		             , #{DIV_CODE}     AS DIV_CODE
		             , #{RECEIPT_NUM}  AS RECEIPT_NUM
		      )                                         B   ON B.COMP_CODE   = A.COMP_CODE
		                                                   AND B.DIV_CODE    = A.DIV_CODE
		                                                   AND B.RECEIPT_NUM = A.RECEIPT_NUM
		WHEN MATCHED THEN
		UPDATE 
		   SET ORDER_PRSN     = #{ORDER_PRSN}
		     , CUSTOM_CODE    = @CUSTOM_CODE
		     , CUSTOM_PRSN    = #{CUSTOM_PRSN}
		     , RECEIPT_TYPE   = #{RECEIPT_TYPE}
		     , RECEIPT_PRSN   = #{RECEIPT_PRSN}
		     , RECEIPT_DATE   = #{RECEIPT_DATE}
		     , WH_CODE        = #{WH_CODE}
		     , PRICE_TYPE     = #{PRICE_TYPE}
		     , PHONE_NUM      = #{PHONE_NUM}
		     , E_MAIL         = #{E_MAIL}
		     , BANK_NAME      = #{BANK_NAME}
		     , BANK_ACCOUNT   = #{BANK_ACCOUNT}
		     , ADDR           = #{ADDR}
		     , HOME_TITLE     = #{HOME_TITLE}
		     , HOME_REMARK    = #{HOME_REMARK}
		     , REMARK         = #{REMARK}
		     , REPRE_NUM      = #{REPRE_NUM}
		     , MONEY_UNIT     = 'KRW'
		     , EXCHG_RATE_O   = 1
		     --20201006 추가
		     , HOME_PURCHAS_NO= #{HOME_PURCHAS_NO}
		     --20201228 추가
		     , PICKUP_METHOD  = #{PICKUP_METHOD}
		     , PICKUP_DATE    = #{PICKUP_DATE}
		     , PICKUP_AREA    = #{PICKUP_AREA}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		          COMP_CODE
		        , DIV_CODE
		        , RECEIPT_NUM
		        , ORDER_PRSN
		        , CUSTOM_CODE
		        , CUSTOM_PRSN
		        , RECEIPT_TYPE
		        , RECEIPT_PRSN
		        , RECEIPT_DATE
		        , WH_CODE
		        , PRICE_TYPE
		        , PHONE_NUM
		        , E_MAIL
		        , BANK_NAME
		        , BANK_ACCOUNT
		        , ADDR
		        , HOME_TITLE
		        , HOME_REMARK
		        , REMARK
		        , REPRE_NUM
		        , MONEY_UNIT
		        , EXCHG_RATE_O
		        --20201006 추가
		        , HOME_PURCHAS_NO
		        --20201228 추가
		        , PICKUP_METHOD
		        , PICKUP_DATE
		        , PICKUP_AREA
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		) VALUES (
		          #{S_COMP_CODE}
		        , #{DIV_CODE}
		        , #{RECEIPT_NUM}
		        , #{ORDER_PRSN}
		        , @CUSTOM_CODE
		        , #{CUSTOM_PRSN}
		        , #{RECEIPT_TYPE}
		        , #{RECEIPT_PRSN}
		        , #{RECEIPT_DATE}
		        , #{WH_CODE}
		        , #{PRICE_TYPE}
		        , #{PHONE_NUM}
		        , #{E_MAIL}
		        , #{BANK_NAME}
		        , #{BANK_ACCOUNT}
		        , #{ADDR}
		        , #{HOME_TITLE}
		        , #{HOME_REMARK}
		        , #{REMARK}
		        , #{REPRE_NUM}
		        , 'KRW'
		        , 1
		        --20201006 추가
		        , #{HOME_PURCHAS_NO}
		        --20201228 추가
		        , #{PICKUP_METHOD}
		        , #{PICKUP_DATE}
		        , #{PICKUP_AREA}
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_USER_ID}
		        , GETDATE()
		);
	</update>

	<update id="s_mpo010ukrv_wmServiceImpl.deleteMaster" parameterType="Map">
		/* s_mpo010ukrv_wmServiceImpl.deleteMaster */
		DELETE FROM S_MPO010T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>

<!-- 저장 로직(detail) -->
	<insert id="s_mpo010ukrv_wmServiceImpl.insertDetail" parameterType="Map" useGeneratedKeys="false">
		/* s_mpo010ukrv_wmServiceImpl.insertList */
		INSERT INTO S_MPO020T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , RECEIPT_NUM
		     , RECEIPT_SEQ
		     , ITEM_CODE
		     , ORDER_UNIT
		     , RECEIPT_Q
		     , RECEIPT_P
		     , RECEIPT_O
		     , DVRY_DATE
		     , INSTOCK_Q
		     , ARRIVAL_DATE
		     , ARRIVAL_PRSN
		     , CONTROL_STATUS
		     , REMARK
		     , CUSTOM_PRSN
		     , REPRE_NUM
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{RECEIPT_NUM}
		     , #{RECEIPT_SEQ}
		     , #{ITEM_CODE}
		     , #{ORDER_UNIT}
		     , #{RECEIPT_Q}
		     , 0
		     , 0
		     , #{DVRY_DATE}
		     , 0
		     , #{ARRIVAL_DATE}
		     , #{ARRIVAL_PRSN}
		     , #{CONTROL_STATUS}
		     , #{REMARK}
		     , #{CUSTOM_PRSN}
		     , #{REPRE_NUM}
		     , 'KRW'
		     , 1
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_mpo010ukrv_wmServiceImpl.updateDetail" parameterType="Map">
		/* s_mpo010ukrv_wmServiceImpl.updateList */
		UPDATE S_MPO020T_WM
		   SET ITEM_CODE       = #{ITEM_CODE}
		     , ORDER_UNIT      = #{ORDER_UNIT}
		     , RECEIPT_Q       = #{RECEIPT_Q}
		     , RECEIPT_P       = 0
		     , RECEIPT_O       = 0
		     , DVRY_DATE       = #{DVRY_DATE}
		     , INSTOCK_Q       = 0
		     , ARRIVAL_DATE    = #{ARRIVAL_DATE}
		     , ARRIVAL_PRSN    = #{ARRIVAL_PRSN}
		     , CONTROL_STATUS  = #{CONTROL_STATUS}
		     , REMARK          = #{REMARK}
		     , CUSTOM_PRSN     = #{CUSTOM_PRSN}
		     , REPRE_NUM       = #{REPRE_NUM}
		     , MONEY_UNIT      = 'KRW'
		     , EXCHG_RATE_O    = 1
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</update>

	<delete id="s_mpo010ukrv_wmServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM S_MPO020T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</delete>
	
	<select id="s_mpo010ukrv_wmServiceImpl.checkDetailData" parameterType="Map" resultType="int">
		SELECT COUNT(COMP_CODE)
		  FROM S_MPO020T_WM WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
	</select>
</mapper>