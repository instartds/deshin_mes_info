<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mba200ukrv_wmServiceImpl">
<!-- 조회 -->
	<select id="s_mba200ukrv_wmServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* s_mba200ukrv_wmServiceImpl.selectList1 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , ISNULL(A.AGREE_STATUS, '1') AS AGREE_STATUS    --승인여부
		     , A.AGREE_DATE                                   --승인일
		     , A.AGREE_PRSN                                   --승인자
		     , A.CUSTOM_CODE                                  --거래처
		     , C1.CUSTOM_NAME                                 --거래처
		     , A.CUSTOM_PRSN                                  --고객명
		     , A.ORDER_PRSN                                   --영업담당
		     , A.PRICE_TYPE                                   --단가구분
		     , A.RECEIPT_NUM                                  --접수번호
		     , A.RECEIPT_DATE                                 --접수일
		     , B.MIN_CONFIRM_YN                               --확정여부
		     , B.ITEM_NAMES
		  FROM         S_MPO010T_WM A  WITH(NOLOCK)
		  LEFT  JOIN ( SELECT A.COMP_CODE
		                    , A.DIV_CODE
		                    , A.RECEIPT_NUM
		                    , MIN(ISNULL(A.CONFIRM_YN, '1'))      AS MIN_CONFIRM_YN
		                    , MAX(C2.ITEM_NAME) + CASE WHEN COUNT(A.ITEM_CODE) - 1 > 0 THEN ' 외 ' + CONVERT(NVARCHAR, COUNT(A.ITEM_CODE) - 1) + '건'        --20210107 수정: A.ITEM_CODE -> C2.ITEM_NAME
		                                               ELSE ''
		                                          END             AS ITEM_NAMES
		                 FROM       S_MPO020T_WM A  WITH(NOLOCK)
		                 INNER JOIN BPR100T      C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                                        AND C2.ITEM_CODE   = A.ITEM_CODE
		                WHERE A.COMP_CODE = #{S_COMP_CODE}
		                  AND A.DIV_CODE  = #{DIV_CODE}
		                GROUP BY A.COMP_CODE, A.DIV_CODE, A.RECEIPT_NUM ) B ON B.COMP_CODE   = A.COMP_CODE
		                                                                   AND B.DIV_CODE    = A.DIV_CODE
		                                                                   AND B.RECEIPT_NUM = A.RECEIPT_NUM
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  INNER JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.BASIS_NUM, MAX(B.INSPEC_DATE) AS INSPEC_DATE--, A.BASIS_SEQ
		                FROM        QMS100T A WITH(NOLOCK)
		                INNER JOIN (SELECT COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ, MAX(INSPEC_DATE) AS INSPEC_DATE
		                              FROM QMS200T WITH(NOLOCK)
		                             WHERE COMP_CODE = #{S_COMP_CODE}
		                               AND DIV_CODE  = #{DIV_CODE}
		                             GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ) B ON B.COMP_CODE   = A.COMP_CODE
		                                                                                      AND B.DIV_CODE    = A.DIV_CODE
		                                                                                      AND B.RECEIPT_NUM = A.RECEIPT_NUM
		                                                                                      AND B.RECEIPT_SEQ = A.RECEIPT_SEQ
		                 GROUP BY A.COMP_CODE, A.DIV_CODE, A.BASIS_NUM) X ON X.COMP_CODE = B.COMP_CODE
		                                                                 AND X.DIV_CODE  = B.DIV_CODE
		                                                                 AND X.BASIS_NUM = B.RECEIPT_NUM
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND B.MIN_CONFIRM_YN = '2'
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE    = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE    LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME    LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND A.CUSTOM_PRSN    LIKE #{CUSTOM_PRSN} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		   AND X.INSPEC_DATE   &gt;= #{INSPEC_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		   AND X.INSPEC_DATE   &lt;= #{INSPEC_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(rdoSelect)">
		   AND ISNULL(A.AGREE_STATUS, 1) = #{rdoSelect}
		</if>
	</select>

	<select id="s_mba200ukrv_wmServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* s_mba200ukrv_wmServiceImpl.selectList2 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.INSPEC_NUM
		     , A.INSPEC_SEQ
		     , A.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , A.ORDER_UNIT
		     , A.GOOD_INSPEC_Q
		     , B.RECEIPT_P
		     , B.RECEIPT_O
		     , A.BAD_INSPEC_Q
		     , B.BAD_RECEIPT_P  --20210204 추가
		     , B.BAD_RECEIPT_O  --20210204 추가
		     , C.RECEIPT_NUM
		     , C.RECEIPT_SEQ    --20210315 추가
		     , D.AGREE_STATUS    --승인여부
		     , D.AGREE_DATE      --승인일
		     , D.AGREE_PRSN      --승인자
		  FROM       QMS200T      A  WITH(NOLOCK)
		  INNER JOIN QMS100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.DIV_CODE     = A.DIV_CODE
		                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		                                         AND B.RECEIPT_SEQ  = A.RECEIPT_SEQ
		  INNER JOIN S_MPO020T_WM C  WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
		                                         AND C.DIV_CODE     = B.DIV_CODE
		                                         AND C.RECEIPT_NUM  = B.BASIS_NUM
		                                         AND C.RECEIPT_SEQ  = B.BASIS_SEQ
		                                         AND C.RECEIPT_NUM  NOT IN (SELECT RECEIPT_NUM
		                                                                      FROM S_MPO020T_WM WITH(NOLOCK)
		                                                                     WHERE COMP_CODE = #{S_COMP_CODE}
		                                                                       AND DIV_CODE  = #{DIV_CODE}
		                                                                       AND ISNULL(CONFIRM_YN, '1') = '1')
		  INNER JOIN S_MPO010T_WM D  WITH(NOLOCK) ON D.COMP_CODE    = C.COMP_CODE
		                                         AND D.DIV_CODE     = C.DIV_CODE
		                                         AND D.RECEIPT_NUM  = C.RECEIPT_NUM
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  INNER JOIN BPR100T      C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                         AND C2.ITEM_CODE   = A.ITEM_CODE
		 WHERE A.COMP_CODE       = #{S_COMP_CODE}
		   AND A.DIV_CODE        = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE     = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE     LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME    LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND C.CUSTOM_PRSN     LIKE #{CUSTOM_PRSN} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		   AND A.INSPEC_DATE    &gt;= #{INSPEC_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		   AND A.INSPEC_DATE    &lt;= #{INSPEC_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(rdoSelect)">
		   AND ISNULL(D.AGREE_STATUS, 1) = #{rdoSelect}
		</if>
	</select>



<!-- 20210315 추가: master data 저장 -->
	<update id="s_mba200ukrv_wmServiceImpl.updateDetail1" parameterType="Map">
		/* s_mba200ukrv_wmServiceImpl.updateDetail1 */
		UPDATE S_MPO010T_WM
		   SET CUSTOM_CODE = #{CUSTOM_CODE}
		     , CUSTOM_PRSN = #{CUSTOM_PRSN}
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND RECEIPT_NUM = #{RECEIPT_NUM}

		UPDATE QMS100T
		   SET CUSTOM_CODE = #{CUSTOM_CODE}
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND BASIS_NUM = #{RECEIPT_NUM}

		UPDATE B
		   SET CUSTOM_CODE = #{CUSTOM_CODE}
		  FROM       QMS100T A
		  INNER JOIN QMS200T B  ON B.COMP_CODE   = A.COMP_CODE
		                       AND B.DIV_CODE    = A.DIV_CODE
		                       AND B.RECEIPT_NUM = A.RECEIPT_NUM
		                       AND B.RECEIPT_SEQ = A.RECEIPT_SEQ
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.BASIS_NUM = #{RECEIPT_NUM}
	</update>
<!-- 20210315 추가: master data 저장 -->
	<update id="s_mba200ukrv_wmServiceImpl.updateDetail2" parameterType="Map">
		/* s_mba200ukrv_wmServiceImpl.updateDetail2 */
		UPDATE B
		   SET ITEM_CODE = #{ITEM_CODE}
		  FROM       QMS200T A WITH(NOLOCK)
		  INNER JOIN QMS100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                   AND B.DIV_CODE    = A.DIV_CODE
		                                   AND B.RECEIPT_NUM = A.RECEIPT_NUM
		                                   AND B.RECEIPT_SEQ = A.RECEIPT_SEQ
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.DIV_CODE   = #{DIV_CODE}
		   AND A.INSPEC_NUM = #{INSPEC_NUM}
		   AND A.INSPEC_SEQ = #{INSPEC_SEQ}

		UPDATE QMS200T
		   SET ITEM_CODE = #{ITEM_CODE}
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}
		   AND INSPEC_NUM = #{INSPEC_NUM}
		   AND INSPEC_SEQ = #{INSPEC_SEQ}
	</update>



<!-- 승인 -->
	<update id="s_mba200ukrv_wmServiceImpl.confirmY" parameterType="Map">
		/* s_mba200ukrv_wmServiceImpl.confirmY */
		UPDATE S_MPO010T_WM
		   SET AGREE_STATUS   = '2'
		     , AGREE_DATE     = CONVERT(NVARCHAR(08), GETDATE(), 112)
		     , AGREE_PRSN     = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>
<!-- 미승인 -->
	<update id="s_mba200ukrv_wmServiceImpl.confirmN" parameterType="Map">
		/* s_mba200ukrv_wmServiceImpl.confirmN */
		UPDATE S_MPO010T_WM
		   SET AGREE_STATUS   = '1'
		     , AGREE_DATE     = ''
		     , AGREE_PRSN     = ''
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>
</mapper>