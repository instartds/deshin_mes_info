<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_esa100ukrv_wmServiceImpl">
<!-- 거래처 정보 가져오는 로직 -->
	<select id="s_esa100ukrv_wmServiceImpl.getCustomInfo" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.getCustomInfo */
		SELECT TELEPHON
		     , HAND_PHON
		     , ZIP_CODE
		     , ADDR1
		     , ADDR2
		  FROM BCM100T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND CUSTOM_CODE = #{CUSTOM_CODE}
	</select>
<!-- 수주 정보(팝업) 가져오는 로직 -->
	<select id="s_esa100ukrv_wmServiceImpl.selectOrderNumDetailList" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.selectOrderNumDetailList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ORDER_NUM
		     , A.SER_NO
		     , B.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.ITEM_CODE
		     , C2.ITEM_NAME
		     , C2.SPEC
		     , A.ORDER_UNIT
		     , A.DVRY_DATE
		     , A.DVRY_TIME
		     , A.ORDER_Q
		     , A.ORDER_P
		     , A.ORDER_O            AS ORDER_PRICE
		     , A.ORDER_TAX_O
		     , A.PRICE_YN
		     , A.TAX_TYPE
		     , A.DISCOUNT_RATE
		     , A.ORDER_UNIT_Q
		     , A.TRANS_RATE
		     , A.HS_NO
		     , A.CLOSE_REMARK
		     , A.CLOSE_ID
		     , A.CLOSE_DATE
		     , A.OUT_DIV_CODE
		     , A.SALE_CUST_CD
		     , A.DVRY_CUST_CD
		     , A.WEEK_NUM
		     , A.INIT_DVRY_DATE
		     , A.ORDER_STATUS
		     , A.DEAD_LINE_STATUS
		     , A.ADVAN_AMOUNT
		     , A.ISSUE_REQ_Q
		     , A.OUTSTOCK_Q
		     , A.RETURN_Q
		     , A.SALE_Q
		     , A.PAB_STOCK_Q
		     , A.BASE_DATE
		     , A.LC_NUM
		     , A.PROD_END_DATE
		     , A.PROD_Q
		     , A.PROD_PLAN_Q
		     , A.PROD_REF_YN
		     , A.MPS_REF_YN
		     , A.ACCOUNT_YNC
		     , A.ESTI_NUM
		     , A.ESTI_SEQ
		     , A.SCM_FLAG_YN
		     , A.PO_NUM
		     , A.PO_SEQ
		     , A.PO_DATE
		     , A.PO_QTY
		     , A.EXP_ISSUE_DATE
		     , A.PREV_ORDER_Q
		     , A.PROJECT_NO
		     , A.PJT_CODE
		     , A.REMARK
		     , A.LOT_NO
		     , A.REASON
		     , A.LAB_NO
		     , A.REQST_ID
		     , A.SAMPLE_KEY
		     , A.SO_NUM
		     , A.SO_SEQ
		     , A.PROMO_NUM
		     , A.SO_TYPE
		     , A.SO_ITEM_SEQ
		     , A.SO_KIND
		     , A.BASIS_P
		     , A.EXTRA_Q
		     , A.BASIS_Q
		     , A.GIFT_KIND
		     , A.CUSTOMER_ID
		     , A.RECEIVER_ID
		     , A.RECEIVER_NAME
		     , A.TELEPHONE_NUM1
		     , A.TELEPHONE_NUM2
		     , A.FAX_NUM
		     , A.ZIP_NUM
		     , A.ADDRESS1 + ISNULL(A.ADDRESS2, '')  AS ADDRESS1
		     , A.ITEM_GUBUN
		     , A.PROD_ITEM_CODE
		     , A.INVOICE_NUM
		     , A.PRICE_TYPE
		     , A.WGT_UNIT
		     , A.UNIT_WGT
		     , A.VOL_UNIT
		     , A.UNIT_VOL
		     , A.ORDER_WGT_Q
		     , A.ORDER_WGT_P
		     , A.ORDER_VOL_Q
		     , A.ORDER_VOL_P
		     , ISNULL(A.WH_CODE, C3.WH_CODE)  AS WH_CODE
		     , A.REASON1
		     , A.REASON2
		     , A.REASON3
		     , A.REASON4
		     , A.MICROBE_DATE
		     , A.EXPECTED_END_DATE
		     , A.PRICE_PER_GRAM
		     , A.PRICE_WEIGHT
		     , A.ORDER_FOR_P
		     , A.ORDER_FOR_O
		     , A.PACK_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , A.REMARK_INTER
		     , A.CLOSE_YN
		     , A.CLOSE_REASON
		     , A.ISSUE_PLAN_NUM
		     , A.ISSUE_REQ_YN
		     , A.UPN_CODE
		     , A.ORD_STATUS
		     , A.DELIV_METHOD
		     , A.DELIV_PRICE
		     , A.ORDER_NAME
		     , A.ORDER_TEL1
		     , A.ORDER_TEL2
		     , A.ORDER_MAIL
		     , A.MSG
		     , A.SENDER_CODE
		     , A.SENDER
		     , A.CUSTOMER_ID2
		     , A.SHOP_ORD_NO
		     , A.SHOP_SALE_NO
		     , A.SHOP_SALE_NAME
		     , A.SHOP_OPT_NAME
		     , A.UNIQUEID
		     , A.NUMBER
		     , B.ORDER_DATE
		     , C1.AGENT_TYPE
		     , A.INOUT_TYPE_DETAIL
		     , B.MONEY_UNIT
		     , B.EXCHG_RATE_O                             AS EXCHANGE_RATE
		     , B.ORDER_PRSN
		     , B.BILL_TYPE
		     , B.ORDER_TYPE
		     , B.PROJECT_NO
		     , A.INVOICE_NUM                              --운송장번호1
		     , A.INVOICE_NUM2                             --운송장번호2
		     , CASE WHEN ISNULL(A.INVOICE_NUM, '') = '' THEN 'N'
		            ELSE 'Y'
		       END                                        AS TRNS_YN
		  FROM       SOF110T A  WITH(NOLOCK)
		  INNER JOIN SOF100T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                    AND B.DIV_CODE     = A.DIV_CODE
		                                    AND B.ORDER_NUM    = A.ORDER_NUM
		  INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                    AND C1.CUSTOM_CODE = B.CUSTOM_CODE
		  INNER JOIN BPR100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                    AND C2.ITEM_CODE   = A.ITEM_CODE
		  INNER JOIN BPR200T C3 WITH(NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                    AND C3.DIV_CODE    = A.DIV_CODE
		                                    AND C3.ITEM_CODE   = A.ITEM_CODE
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND (A.ORDER_NAME    LIKE #{AS_PRSN} + '%'
		     OR A.RECEIVER_NAME LIKE #{AS_PRSN} + '%')
		<if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
		   AND B.ORDER_DATE   &gt;= #{FR_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
		   AND B.ORDER_DATE   &lt;= #{TO_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		   AND B.ORDER_PRSN    = #{ORDER_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND B.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		   AND B.ORDER_TYPE    = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND C2.ITEM_NAME     LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		   AND A.REMARK         LIKE #{REMARK} + '%'
		</if>
	</select>
<!-- 검색팝업 조회 쿼리 -->
	<select id="s_esa100ukrv_wmServiceImpl.searchPopupList" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.searchPopupList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.AS_NUM
		     , A.ACCEPT_DATE
		     , A.ACCEPT_PRSN
		     , A.ACCEPT_GUBUN
		     , A.AS_CUSTOMER_CD
		     , A.AS_CUSTOMER_NM
		     , A.AS_PRSN
		     , A.AS_STATUS
		     , A.PHONE
		     , A.HPHONE
		     , A.INVOICE_NUM
		     , A.ZIP_CODE
		     , A.ADDR1
		     , A.ADDR2
		     , A.REMARK
		     --20201203 추가
		     , A.AS_GUBUN
		     , A.AS_GUBUN_DETAIL
		  FROM S_EAS100T_WM A WITH(NOLOCK)
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND A.DIV_CODE     = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_DATE_FR)">
		   AND A.ACCEPT_DATE &gt;= #{ACCEPT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_DATE_TO)">
		   AND A.ACCEPT_DATE &lt;= #{ACCEPT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCEPT_PRSN)">
		   AND A.ACCEPT_PRSN  = #{ACCEPT_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_NUM)">
		   AND A.AS_NUM       LIKE #{AS_NUM} + '%'
		</if>
	</select>


	<select id="s_esa100ukrv_wmServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		/* selectMaster, 20210511 일괄 수정 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode   NVARCHAR(08) /* 법인코드	*/
		          , @UserId     NVARCHAR(100) /* 사용자ID */
		          , @LangType   NVARCHAR(2)  /* 언어구분   */
		          , @RefItem    NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ACCEPT_DATE
		         , A.AS_NUM
		         , A.ACCEPT_PRSN
		         , A.ACCEPT_GUBUN
		         , A.AS_STATUS
		         , A.AS_PRSN
		         , A.PHONE
		         , A.HPHONE
		         , A.AS_CUSTOMER_CD
		         , A.AS_CUSTOMER_NM
		         , A.INVOICE_NUM
		         , A.ZIP_CODE
		         , A.ADDR1
		         , A.ADDR2
		         , A.REMARK
		         , ''                       AS SANGDAM_REMARK
		         , ''                       AS MANAGE_REMARK
		         , A.AS_GUBUN               --20201203 추가
		         , A.AS_GUBUN_DETAIL        --20201203 추가
		      FROM S_EAS100T_WM A WITH(NOLOCK)
		     WHERE A.COMP_CODE  = #{S_COMP_CODE}
		       AND A.DIV_CODE   = #{DIV_CODE}
		       AND A.AS_NUM     = #{AS_NUM}

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="s_esa100ukrv_wmServiceImpl.selectOutLineList" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.selectOutLineList (상담내역 조회) */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.AS_NUM
		     --, B.ACCEPT_DATE  20201203 수정
		     , A.INSERT_DB_TIME      AS ACCEPT_DATE
		     , A.SANGDAM_SEQ
		     , A.SANGDAM_REMARK
		     , A.MANAGE_REMARK
		     , A.UPDATE_DB_USER
		     , C.USER_NAME        AS UPDATE_USER_NM
		  FROM       S_EAS130T_WM A WITH(NOLOCK)
		--  INNER JOIN S_EAS100T_WM B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		--                                        AND B.DIV_CODE  = A.DIV_CODE
		--                                        AND B.AS_NUM    = A.AS_NUM
		  INNER JOIN BSA300T      C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                        AND C.USER_ID   = A.UPDATE_DB_USER
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.AS_NUM    = #{AS_NUM}
		 ORDER BY A.SANGDAM_SEQ DESC
	</select>

	<select id="s_esa100ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.selectList */
		<!-- 일반조회일 경우 -->
		<if test="REF_FLAG != &quot;REF&quot;">
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , C1.ITEM_NAME
		     , C1.SPEC
		     , B2.ORDER_DATE
		     , B1.DVRY_DATE
		     , A.AS_Q       AS ORDER_Q     --20201204 수정
		     , B1.PO_NUM
		     , B1.PROJECT_NO
		     , B1.ORDER_NUM
		     , B1.SER_NO
		     , A.AS_NUM
		     , A.AS_SEQ
		     , CASE WHEN C1.CIR_PERIOD_YN = 'Y' THEN DATEADD(month, C1.EXPIRATION_DAY, B1.DVRY_DATE)    --20210129 수정: as기간 계산 시, 월단위로 계산
		            ELSE NULL
		       END                                        AS TO_AS_DATE
		     , A.ARRIVAL_YN
		     , A.REMARK
		     , B3.INOUT_DATE
		     --20210119 추가
		     , A.AS_ACCEPT_Q
		     , (SELECT SUM(Z.COUNT_INVOICE_NUM) AS INVOICE_Q
		          FROM (
		                SELECT CASE WHEN ISNULL(value, '') = '' THEN 0
		                            ELSE COUNT(value)
		                       END                                      AS COUNT_INVOICE_NUM
		                  FROM uniLITE.fnSplit((SELECT INVOICE_NUM
		                                          FROM S_EAS110T_WM WITH(NOLOCK)
		                                         WHERE COMP_CODE = #{S_COMP_CODE}
		                                           AND DIV_CODE  = #{DIV_CODE}
		                                           AND AS_NUM    = #{AS_NUM}), ',')
		                 GROUP BY value
		          ) Z
		        )                                                       AS INVOICE_Q
		     , A.INVOICE_NUM
		     , A.RETURN_NUM
		  FROM       S_EAS110T_WM A  WITH(NOLOCK)
		  INNER JOIN SOF110T      B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
		                                         AND B1.DIV_CODE  = A.DIV_CODE
		                                         AND B1.ORDER_NUM = A.ORDER_NUM
		                                         AND B1.SER_NO    = A.ORDER_SEQ
		  INNER JOIN SOF100T      B2 WITH(NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
		                                         AND B2.DIV_CODE  = A.DIV_CODE
		                                         AND B2.ORDER_NUM = A.ORDER_NUM
		  LEFT  JOIN BTR100T      B3 WITH(NOLOCK) ON B3.COMP_CODE = B1.COMP_CODE
		                                         AND B3.DIV_CODE  = B1.DIV_CODE
		                                         AND B3.ORDER_NUM = B1.ORDER_NUM
		                                         AND B3.ORDER_SEQ = B1.SER_NO
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                         AND C1.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.AS_NUM    = #{AS_NUM}
		</if>
		<!-- 참조 적용일 경우 -->
		<if test="REF_FLAG == &quot;REF&quot;">
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ORDER_NUM
		         , A.SER_NO
		         , B.CUSTOM_CODE
		         , C1.CUSTOM_NAME
		         , A.ITEM_CODE
		         , C2.ITEM_NAME
		         , C2.SPEC
		         , A.ORDER_UNIT
		         , A.DVRY_DATE
		         , A.DVRY_TIME
		         , A.ORDER_Q
		         , A.ORDER_P
		         , A.ORDER_O            AS ORDER_PRICE
		         , A.ORDER_TAX_O
		         , A.PRICE_YN
		         , A.TAX_TYPE
		         , A.DISCOUNT_RATE
		         , A.ORDER_UNIT_Q
		         , A.TRANS_RATE
		         , A.HS_NO
		         , A.CLOSE_REMARK
		         , A.CLOSE_ID
		         , A.CLOSE_DATE
		         , A.OUT_DIV_CODE
		         , A.SALE_CUST_CD
		         , A.DVRY_CUST_CD
		         , A.WEEK_NUM
		         , A.INIT_DVRY_DATE
		         , A.ORDER_STATUS
		         , A.DEAD_LINE_STATUS
		         , A.ADVAN_AMOUNT
		         , A.ISSUE_REQ_Q
		         , A.OUTSTOCK_Q
		         , A.RETURN_Q
		         , A.SALE_Q
		         , A.PAB_STOCK_Q
		         , A.BASE_DATE
		         , A.LC_NUM
		         , A.PROD_END_DATE
		         , A.PROD_Q
		         , A.PROD_PLAN_Q
		         , A.PROD_REF_YN
		         , A.MPS_REF_YN
		         , A.ACCOUNT_YNC
		         , A.ESTI_NUM
		         , A.ESTI_SEQ
		         , A.SCM_FLAG_YN
		         , A.PO_NUM
		         , A.PO_SEQ
		         , A.PO_DATE
		         , A.PO_QTY
		         , A.EXP_ISSUE_DATE
		         , A.PREV_ORDER_Q
		         , A.PROJECT_NO
		         , A.PJT_CODE
		         , A.REMARK
		         , A.LOT_NO
		         , A.REASON
		         , A.LAB_NO
		         , A.REQST_ID
		         , A.SAMPLE_KEY
		         , A.SO_NUM
		         , A.SO_SEQ
		         , A.PROMO_NUM
		         , A.SO_TYPE
		         , A.SO_ITEM_SEQ
		         , A.SO_KIND
		         , A.BASIS_P
		         , A.EXTRA_Q
		         , A.BASIS_Q
		         , A.GIFT_KIND
		         , A.CUSTOMER_ID
		         , A.RECEIVER_ID
		         , A.RECEIVER_NAME
		         , A.TELEPHONE_NUM1
		         , A.TELEPHONE_NUM2
		         , A.FAX_NUM
		         , A.ZIP_NUM
		         , A.ADDRESS1 + ISNULL(A.ADDRESS2, '')  AS ADDRESS1
		         , A.ITEM_GUBUN
		         , A.PROD_ITEM_CODE
		         , A.INVOICE_NUM
		         , A.PRICE_TYPE
		         , A.WGT_UNIT
		         , A.UNIT_WGT
		         , A.VOL_UNIT
		         , A.UNIT_VOL
		         , A.ORDER_WGT_Q
		         , A.ORDER_WGT_P
		         , A.ORDER_VOL_Q
		         , A.ORDER_VOL_P
		         , ISNULL(A.WH_CODE, C3.WH_CODE)  AS WH_CODE
		         , A.REASON1
		         , A.REASON2
		         , A.REASON3
		         , A.REASON4
		         , A.MICROBE_DATE
		         , A.EXPECTED_END_DATE
		         , A.PRICE_PER_GRAM
		         , A.PRICE_WEIGHT
		         , A.ORDER_FOR_P
		         , A.ORDER_FOR_O
		         , A.PACK_TYPE
		         , A.INOUT_TYPE_DETAIL
		         , A.REMARK_INTER
		         , A.CLOSE_YN
		         , A.CLOSE_REASON
		         , A.ISSUE_PLAN_NUM
		         , A.ISSUE_REQ_YN
		         , A.UPN_CODE
		         , A.ORD_STATUS
		         , A.DELIV_METHOD
		         , A.DELIV_PRICE
		         , A.ORDER_NAME
		         , A.ORDER_TEL1
		         , A.ORDER_TEL2
		         , A.ORDER_MAIL
		         , A.MSG
		         , A.SENDER_CODE
		         , A.SENDER
		         , A.CUSTOMER_ID2
		         , A.SHOP_ORD_NO
		         , A.SHOP_SALE_NO
		         , A.SHOP_SALE_NAME
		         , A.SHOP_OPT_NAME
		         , A.UNIQUEID
		         , A.NUMBER
		         , B.ORDER_DATE
		         , C1.AGENT_TYPE
		         , A.INOUT_TYPE_DETAIL
		         , B.MONEY_UNIT
		         , B.EXCHG_RATE_O                             AS EXCHANGE_RATE
		         , B.ORDER_PRSN
		         , B.BILL_TYPE
		         , B.ORDER_TYPE
		         , B.PROJECT_NO
		         , A.INVOICE_NUM                              --운송장번호1
		         , A.INVOICE_NUM2                             --운송장번호2
		         , CASE WHEN ISNULL(A.INVOICE_NUM, '') = '' THEN 'N'
		                ELSE 'Y'
		           END                                        AS TRNS_YN
		         , CASE WHEN C2.CIR_PERIOD_YN = 'Y' THEN DATEADD(month, C2.EXPIRATION_DAY, A.DVRY_DATE)    --20210129 수정: as기간 계산 시, 월단위로 계산
		                ELSE NULL
		           END                                        AS TO_AS_DATE
		         , 'N'                                        AS ARRIVAL_YN
		         , C.INOUT_DATE
		      FROM       SOF110T A  WITH(NOLOCK)
		      INNER JOIN SOF100T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                        AND B.DIV_CODE     = A.DIV_CODE
		                                        AND B.ORDER_NUM    = A.ORDER_NUM
		      LEFT JOIN BTR100T C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                        AND C.DIV_CODE     = A.DIV_CODE
		                                        AND C.ORDER_NUM    = A.ORDER_NUM
		                                        AND C.ORDER_SEQ    = A.SER_NO
		      INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                        AND C1.CUSTOM_CODE = B.CUSTOM_CODE
		      INNER JOIN BPR100T C2 WITH(NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                        AND C2.ITEM_CODE   = A.ITEM_CODE
		      INNER JOIN BPR200T C3 WITH(NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                        AND C3.DIV_CODE    = A.DIV_CODE
		                                        AND C3.ITEM_CODE   = A.ITEM_CODE
		     WHERE A.COMP_CODE  = #{S_COMP_CODE}
		       AND A.DIV_CODE   = #{DIV_CODE}
		       AND A.ORDER_NUM  = #{ORDER_NUM}
		       AND A.SER_NO     = #{SER_NO}
		</if>
	</select>

	<select id="s_esa100ukrv_wmServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.selectList2 */
	<!-- 일반조회일 경우 -->
		<if test="REF_FLAG != &quot;REF&quot;">
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , C1.ITEM_NAME
		     , C1.SPEC
		     , A.UNIT_Q
		     , A.REQ_OUT_Q
		     , A.REQ_RETURN_Q
		     , A.OUT_Q
		     , A.RETURN_Q
		     , A.AS_P
		     , A.AS_O
		     , A.AS_TAX
		     , A.SALE_YN
		     , A.REMARK
		     , A.AS_NUM
		     , A.AS_SEQ
		     , A.SUB_SEQ
		     , A.AS_Q
		     , A.INOUT_NUM
		     , A.INOUT_SEQ
		--     , C.UNIT_P       AS_P_REF
		--     , C.UNIT_O       AS_O_REF
		  FROM       S_EAS120T_WM A  WITH(NOLOCK)
		  INNER JOIN S_EAS110T_WM B  WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                         AND B.DIV_CODE   = A.DIV_CODE
		                                         AND B.AS_NUM     = A.AS_NUM
		                                         AND B.AS_SEQ     = A.AS_SEQ
		--  INNER JOIN S_SOF115T_WM C  WITH(NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
		--                                         AND C.DIV_CODE   = B.DIV_CODE
		--                                         AND C.ORDER_NUM  = B.ORDER_NUM
		--                                         AND C.SER_NO     = B.ORDER_SEQ
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                         AND C1.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.AS_NUM    = #{AS_NUM}
		</if>
	<!-- 참조 적용일 경우 -->
		<if test="REF_FLAG == &quot;REF&quot;">
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.ORDER_NUM
		         , A.SER_NO
		         , C.ITEM_CODE
		         , C2.ITEM_NAME
		         , C2.SPEC
		         , C.UNIT_Q
		         --, C.UNIT_Q      AS REQ_OUT_Q
		         , 0      AS REQ_OUT_Q
		         , C.UNIT_P      AS AS_P_REF
		         , C.UNIT_O      AS AS_O_REF
		         , 'N'           AS SALE_YN
		      FROM       SOF110T      A  WITH(NOLOCK)
		      INNER JOIN SOF100T      B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                             AND B.DIV_CODE     = A.DIV_CODE
		                                             AND B.ORDER_NUM    = A.ORDER_NUM
		      INNER JOIN S_SOF115T_WM C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                             AND C.DIV_CODE     = A.DIV_CODE
		                                             AND C.ORDER_NUM    = A.ORDER_NUM
		                                             AND C.SER_NO       = A.SER_NO
		      INNER JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
		                                             AND C1.CUSTOM_CODE = B.CUSTOM_CODE
		      INNER JOIN BPR100T      C2 WITH(NOLOCK) ON C2.COMP_CODE   = C.COMP_CODE
		                                             AND C2.ITEM_CODE   = C.ITEM_CODE
		      INNER JOIN BPR200T      C3 WITH(NOLOCK) ON C3.COMP_CODE   = C.COMP_CODE
		                                             AND C3.DIV_CODE    = C.DIV_CODE
		                                             AND C3.ITEM_CODE   = C.ITEM_CODE
		     WHERE A.COMP_CODE  = #{S_COMP_CODE}
		       AND A.DIV_CODE   = #{DIV_CODE}
		       AND A.ORDER_NUM  = #{ORDER_NUM}
		       AND A.SER_NO     = #{SER_NO}
		</if>
	</select>



<!-- 사용 안 함: 주석 처리 -->
	<select id="s_esa100ukrv_wmServiceImpl.checkFinishData" parameterType="Map" resultType="rMap">
		SELECT AS_STATUS 
		  FROM S_EAS100T_WM WITH(NOLCOK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
	</select>




<!-- MASTER DATA(이력 포함) 저장 -->
<!-- INSERT -->
	<select id="s_esa100ukrv_wmServiceImpl.getAutoNumComp" resultType="String">
		/* MASTER DATA INSERT */
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @AS_NUM         NVARCHAR(20)
		      , @ACCEPT_DATE    NVARCHAR(08)

		SET     @COMP_CODE   = #{S_COMP_CODE}
		SET     @ACCEPT_DATE = #{ACCEPT_DATE}

		EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, 'AS', 'S_EAS100T_WM', '', @ACCEPT_DATE, '1', @AS_NUM OUTPUT

		SELECT @AS_NUM AS AS_NUM
	</select>
	<update id="s_esa100ukrv_wmServiceImpl.insertMaster" statementType="CALLABLE">
		/* s_esa100ukrv_wmServiceImpl.insertMaster */ 
		INSERT INTO S_EAS100T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , AS_NUM
		     , ACCEPT_DATE
		     , ACCEPT_PRSN
		     , ACCEPT_GUBUN
		     , AS_CUSTOMER_CD
		     , AS_CUSTOMER_NM
		     , AS_PRSN
		     , AS_STATUS
		     , PHONE
		<if test="@foren.Ognl@isNotEmpty(HPHONE)">
		     , HPHONE
		</if>
		<if test="@foren.Ognl@isNotEmpty(INVOICE_NUM)">
		     , INVOICE_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
		     , ZIP_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR1)">
		     , ADDR1
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR2)">
		     , ADDR2
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK
		</if>
<!-- 20201203 추가 -->
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN)">
		     , AS_GUBUN
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN_DETAIL)">
		     , AS_GUBUN_DETAIL
		</if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{AS_NUM}
		     , #{ACCEPT_DATE}
		     , #{ACCEPT_PRSN}
		     , #{ACCEPT_GUBUN}
		     , #{AS_CUSTOMER_CD}
		     , #{AS_CUSTOMER_NM}
		     , #{AS_PRSN}
		     , #{AS_STATUS}
		     , #{PHONE}
		<if test="@foren.Ognl@isNotEmpty(HPHONE)">
		     , #{HPHONE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INVOICE_NUM)">
		     , #{INVOICE_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
		     , #{ZIP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR1)">
		     , #{ADDR1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR2)">
		     , #{ADDR2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , #{REMARK}
		</if>
<!-- 20201203 추가 -->
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN)">
		     , #{AS_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN_DETAIL)">
		     , #{AS_GUBUN_DETAIL}
		</if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>
	<update id="s_esa100ukrv_wmServiceImpl.insertOutLineList" statementType="CALLABLE">
		/* s_esa100ukrv_wmServiceImpl.insertOutLineList */
		DECLARE @SANGDAM_SEQ    NUMERIC(5, 0)

		SELECT @SANGDAM_SEQ = MAX(SANGDAM_SEQ)
		  FROM S_EAS130T_WM WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}

		IF (@SANGDAM_SEQ IS NULL)
		    BEGIN
		        SET @SANGDAM_SEQ = 1
		    END
		ELSE
		    BEGIN
		        SET @SANGDAM_SEQ = @SANGDAM_SEQ + 1
		    END

		INSERT INTO S_EAS130T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , AS_NUM
		     , SANGDAM_SEQ
		     , SANGDAM_REMARK
		     , MANAGE_REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{AS_NUM}
		     , @SANGDAM_SEQ
		     , #{SANGDAM_REMARK}
		     , #{MANAGE_REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

<!-- UPDATE -->
	<update id="s_esa100ukrv_wmServiceImpl.updateMaster" parameterType="Map" statementType="CALLABLE">
		UPDATE S_EAS100T_WM
		   SET ACCEPT_DATE     = #{ACCEPT_DATE}
		     , ACCEPT_PRSN     = #{ACCEPT_PRSN}
		     , ACCEPT_GUBUN    = #{ACCEPT_GUBUN}
		     , AS_STATUS       = #{AS_STATUS}
		     , PHONE           = #{PHONE}
		<if test="@foren.Ognl@isNotEmpty(HPHONE)">
		     , HPHONE          = #{HPHONE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_CUSTOMER_CD)">
		     , AS_CUSTOMER_CD  = #{AS_CUSTOMER_CD}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_CUSTOMER_NM)">
		     , AS_CUSTOMER_NM  = #{AS_CUSTOMER_NM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INVOICE_NUM)">
		     , INVOICE_NUM     = #{INVOICE_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ZIP_CODE)">
		     , ZIP_CODE        = #{ZIP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR1)">
		     , ADDR1           = #{ADDR1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR2)">
		     , ADDR2           = #{ADDR2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK          = #{REMARK}
		</if>
<!-- 20201203 추가 -->
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN)">
		     , AS_GUBUN        = #{AS_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AS_GUBUN_DETAIL)">
		     , AS_GUBUN_DETAIL = #{AS_GUBUN_DETAIL}
		</if>
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
	</update>
	<update id="s_esa100ukrv_wmServiceImpl.updateOutLineList" parameterType="Map" statementType="CALLABLE">
		/* s_esa100ukrv_wmServiceImpl.updateOutLineList */
		IF NOT EXISTS (SELECT TOP 1 1
		                 FROM S_EAS130T_WM
		                WHERE COMP_CODE      = #{S_COMP_CODE}
		                  AND DIV_CODE       = #{DIV_CODE}
		                  AND AS_NUM         = #{AS_NUM}
		                  AND SANGDAM_REMARK = #{SANGDAM_REMARK}
		                  AND MANAGE_REMARK  = #{MANAGE_REMARK})
		    BEGIN
		        DECLARE @SANGDAM_SEQ    NUMERIC(5, 0)

		        SELECT @SANGDAM_SEQ = MAX(SANGDAM_SEQ)
		          FROM S_EAS130T_WM WITH(NOLOCK)
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND DIV_CODE  = #{DIV_CODE}
		           AND AS_NUM    = #{AS_NUM}

		        IF (@SANGDAM_SEQ IS NULL)
		            BEGIN
		                SET @SANGDAM_SEQ = 1
		            END
		        ELSE
		            BEGIN
		                SET @SANGDAM_SEQ = @SANGDAM_SEQ + 1
		            END

		        INSERT INTO S_EAS130T_WM (
		               COMP_CODE
		             , DIV_CODE
		             , AS_NUM
		             , SANGDAM_SEQ
		             , SANGDAM_REMARK
		             , MANAGE_REMARK
		             , INSERT_DB_USER
		             , INSERT_DB_TIME
		             , UPDATE_DB_USER
		             , UPDATE_DB_TIME
		        ) VALUES (
		               #{S_COMP_CODE}
		             , #{DIV_CODE}
		             , #{AS_NUM}
		             , @SANGDAM_SEQ
		             , #{SANGDAM_REMARK}
		             , #{MANAGE_REMARK}
		             , #{S_USER_ID}
		             , GETDATE()
		             , #{S_USER_ID}
		             , GETDATE()
		        )
		    END
	</update>

<!-- DELETE -->
	<update id="s_esa100ukrv_wmServiceImpl.deleteMaster" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.deleteMaster */
		DELETE FROM S_EAS100T_WM
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
	</update>
	<update id="s_esa100ukrv_wmServiceImpl.deleteOutLineList" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.deleteOutLineList */
		DELETE FROM S_EAS130T_WM
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
	</update>



<!-- 고객주문정보(S_EAS110T)WM 저장 -->
	<insert id="s_esa100ukrv_wmServiceImpl.insertDetail" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.insertDetail */
		INSERT INTO S_EAS110T_WM(
		       COMP_CODE
		     , DIV_CODE
		     , AS_NUM
		     , AS_SEQ
		     , ITEM_CODE
		     , ARRIVAL_YN
		     , AS_Q
		     , ORDER_NUM
		     , ORDER_SEQ
		     , REMARK
		     --20210118 추가: AS수량(AS_ACCEPT_Q)
		     , AS_ACCEPT_Q
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{AS_NUM}
		     , #{AS_SEQ}
		     , #{ITEM_CODE}
		     , #{ARRIVAL_YN}
		     , #{ORDER_Q}        --20201204 수정
		     , #{ORDER_NUM}
		     , #{SER_NO}
		     , #{REMARK}
		     --20210118 추가: AS수량(AS_ACCEPT_Q)
		     , #{AS_ACCEPT_Q}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_esa100ukrv_wmServiceImpl.updateDetail" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.updateDetail */
		UPDATE S_EAS110T_WM 
		   SET UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , ARRIVAL_YN     = #{ARRIVAL_YN}
		     , REMARK         = #{REMARK}
		     , AS_ACCEPT_Q    = #{AS_ACCEPT_Q}      --20210118 추가: AS수량(AS_ACCEPT_Q)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
		   AND AS_SEQ    = #{AS_SEQ}
	</update> 

	<update id="s_esa100ukrv_wmServiceImpl.deleteDetail" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.deleteDetail */
		DELETE FROM S_EAS110T_WM
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
		--   AND AS_SEQ    = {AS_SEQ}
	</update>



<!-- AS 주문옵션정보 저장 -->
	<insert id="s_esa100ukrv_wmServiceImpl.insertDetail2" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.insertDetail2 */
		INSERT INTO S_EAS120T_WM(
		       COMP_CODE
		     , DIV_CODE
		     , AS_NUM
		     , AS_SEQ
		     , SUB_SEQ
		     , ITEM_CODE
		     , UNIT_Q
		     , AS_Q
		     , AS_P
		     , AS_O
		     , AS_TAX
		     , SALE_YN
		     , REQ_OUT_Q
		     , REQ_RETURN_Q
		     , OUT_Q
		     , RETURN_Q
		     , INOUT_NUM
		     , INOUT_SEQ
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{COMP_CODE}
		     , #{DIV_CODE}
		     , #{AS_NUM}
		     , #{AS_SEQ}
		     , #{SUB_SEQ}
		     , #{ITEM_CODE}
		     , #{UNIT_Q}
		     , #{AS_Q}
		     , #{AS_P}
		     , #{AS_O}
		     , #{AS_TAX}
		     , #{SALE_YN}
		     , #{REQ_OUT_Q}
		     , #{REQ_RETURN_Q}
		     , #{OUT_Q}
		     , #{RETURN_Q}
		     , #{INOUT_NUM}
		     , #{INOUT_SEQ}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_esa100ukrv_wmServiceImpl.updateDetail2" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.updateDetail2 */
		UPDATE S_EAS120T_WM 
		   SET REQ_OUT_Q      = #{REQ_OUT_Q}
		     , REQ_RETURN_Q   = #{REQ_RETURN_Q}
		     , REMARK         = #{REMARK}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
		   AND AS_SEQ    = #{AS_SEQ}
		   AND SUB_SEQ   = #{SUB_SEQ}
	</update> 

	<update id="s_esa100ukrv_wmServiceImpl.deleteDetail2" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.deleteDetail2 */
		DELETE S_EAS120T_WM
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
		--   AND AS_SEQ    = {AS_SEQ}
		--   AND SUB_SEQ   = {SUB_SEQ}
	</update>





<!-- 배송의뢰: 20210119 추가 -->
<!-- 운송장번호 채번 -->
	<select id="s_esa100ukrv_wmServiceImpl.makeInvoiceNum" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.makeInvoiceNum */
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#INVOICE_TBL'))
		    DROP TABLE #INVOICE_TBL

		CREATE TABLE #INVOICE_TBL (
		   INVOICE_NUM    NVARCHAR(20),
		   AS_NUM         NVARCHAR(20),
		   AS_DATE        NVARCHAR(08),
		   DIV_NAME       NVARCHAR(100),
		   ZIP_CODE       NVARCHAR(06),
		   ADDR           NVARCHAR(400),
		   TELEPHON       NVARCHAR(20)
		)

		DECLARE @iCount    INT          = ${ISSUING_NUMBER}
		      , @sAUTO_NUM NVARCHAR(24)                    --20210422 수정: 20 -> 24

		WHILE(@iCount > 0)
		BEGIN
<!-- 20210218 추가: 반송일 때는 송장번호 채번하지 않음 -->
		<if test="InvoiceYn == true">
		    EXEC uniLITE.SP_GetInvoiceNum_WM #{S_COMP_CODE}, @sAUTO_NUM OUTPUT
		</if>
		<if test="InvoiceYn != true">
			SET @sAUTO_NUM = ''
		</if>

		    INSERT #INVOICE_TBL
		    SELECT @sAUTO_NUM
		         , A.AS_NUM
		         , A.ACCEPT_DATE   AS AS_DATE
		         , B.DIV_NAME
		         , B.ZIP_CODE
		         , B.ADDR
		         , B.TELEPHON
		      FROM      S_EAS100T_WM A WITH(NOLOCK)
		      LEFT JOIN BOR120T      B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                           AND B.DIV_CODE  = A.DIV_CODE
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.AS_NUM    = #{AS_NUM}

		    SET @iCount = @iCount - 1
		END

		SELECT INVOICE_NUM, AS_NUM, AS_DATE, DIV_NAME, ZIP_CODE, ADDR, TELEPHON
		  FROM #INVOICE_TBL
		 ORDER BY INVOICE_NUM
	</select>

<!-- interface(운송장 출력) -->
	<update id="s_esa100ukrv_wmServiceImpl.insertTrnOrder" parameterType="Map" useGeneratedKeys="false">
		/* s_esa100ukrv_wmServiceImpl.insertTrnOrder */
		INSERT INTO WIDEMEMORY.V_RCPT_WIDEMEMORY010 (
		       CUST_ID         , RCPT_YMD        , CUST_USE_NO       , RCPT_DV        , WORK_DV_CD
		     , REQ_DV_CD       , MPCK_KEY        , MPCK_SEQ
		     , CAL_DV_CD       , FRT_DV_CD
		     , CNTR_ITEM_CD    , BOX_TYPE_CD     , BOX_QTY           , FRT            , CUST_MGMT_DLCM_CD
		     /* 송화인 정보 */
		     , SENDR_NM        , SENDR_TEL_NO1   , SENDR_TEL_NO2     , SENDR_TEL_NO3
		     , SENDR_CELL_NO1  , SENDR_CELL_NO2  , SENDR_CELL_NO3
		     , SENDR_SAFE_NO1  , SENDR_SAFE_NO2  , SENDR_SAFE_NO3
		     , SENDR_ZIP_NO    , SENDR_ADDR      , SENDR_DETAIL_ADDR
		     /* 수화인 정보 */
		     , RCVR_NM
		     , RCVR_TEL_NO1    , RCVR_TEL_NO2    , RCVR_TEL_NO3
		     , RCVR_CELL_NO1   , RCVR_CELL_NO2   , RCVR_CELL_NO3
		     , RCVR_SAFE_NO1   , RCVR_SAFE_NO2   , RCVR_SAFE_NO3
		     , RCVR_ZIP_NO     , RCVR_ADDR       , RCVR_DETAIL_ADDR
		     /* 송장정보 */
		     , INVC_NO         , ORI_INVC_NO     , ORI_ORD_NO
		     , COLCT_EXPCT_YMD , COLCT_EXPCT_HOUR, SHIP_EXPCT_YMD , SHIP_EXPCT_HOUR   , PRT_ST
		     , ARTICLE_AMT     , REMARK_1        , REMARK_2          , REMARK_3       , COD_YN
		     /* 상품정보 */
		     , GDS_CD          , GDS_NM          , GDS_QTY
		     , UNIT_CD         , UNIT_NM         , GDS_AMT
		     , ETC_1           , ETC_2           , ETC_3             , ETC_4          , ETC_5
		     , DLV_DV          , RCPT_ERR_YN     , RCPT_ERR_MSG
		     , EAI_PRGS_ST     , EAI_ERR_MSG
		     , REG_EMP_ID      , REG_DTIME       , MODI_EMP_ID       , MODI_DTIME
		) VALUES (
		       '30292070'      , #{AS_DATE}      , #{AS_NUM}         , '01'           , '01'
		     , '01'            , CONCAT(CONCAT(#{AS_DATE}, '_30292070_'), + #{INVOICE_NUM})    , 1
		     , '01'            , '03'
		     , '01'            , '01'            , 1                 , #{DELIV_PRICE}  , '30292070'        --20210217 수정: CUST_MGMT_DLCM_CD(발송고객코드 입력)에 {AS_CUSTOMER_CD} -> '30292070'
		     /* 송화인 정보 */
		     , #{SENDR_NM}     , #{SENDR_TEL_NO1}, #{SENDR_TEL_NO2}  , #{SENDR_TEL_NO3}      --전화번호
		     , ''              , ''              , ''                                        --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{SENDR_ZIP_NO} , #{SENDR_ADDR}   , #{SENDR_DETAIL_ADDR}                      --주소정보
		     /* 수화인 정보 */
		     , #{AS_PRSN}
		     , #{TELEPHONE_NUM1_1}               , #{TELEPHONE_NUM1_2}, #{TELEPHONE_NUM1_3}  --전화번호
		     , #{TELEPHONE_NUM2_1}               , #{TELEPHONE_NUM2_2}, #{TELEPHONE_NUM2_3}  --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{ZIP_CODE}     , #{RCVR_ADDR}    , #{RCVR_DETAIL_ADDR}                       --주소정보
		     /* 송장정보 */
		     , #{INVOICE_NUM}  , ''              , ''
		     , ''              , ''              , ''                , ''             , '02'               --20210217 수정: PRT_ST에 '01' -> '02' - 일반접수건(02), 반품건(01)
		     , 0               , ''              , ''                , ''             , ''
		     /* 상품정보 */
		     , #{ITEM_CODE}    , #{ITEM_NAME}    , #{AS_ACCEPT_Q}
		     , ''              , ''              , ''
		     , ''              , ''              , ''                , ''             , ''
		     , '01'            , 'N'             , ''
		     , '01'            , ''
		     , 'WIDEMEMORY'    , SYSDATE         , #{S_USER_ID}      , SYSDATE                             --20210217 수정: REG_EMP_ID(고객사용계정)에 {S_USER_ID} -> 'WIDEMEMORY'
		)
	</update>
<!-- interface(반송요청) -->
	<update id="s_esa100ukrv_wmServiceImpl.insertTrnOrder2" parameterType="Map" useGeneratedKeys="false">
		/* s_esa100ukrv_wmServiceImpl.insertTrnOrder2 */
		INSERT INTO WIDEMEMORY.V_RCPT_WIDEMEMORY010 (
		       CUST_ID         , RCPT_YMD        , CUST_USE_NO       , RCPT_DV        , WORK_DV_CD
		     , REQ_DV_CD       , MPCK_KEY        , MPCK_SEQ
		     , CAL_DV_CD       , FRT_DV_CD
		     , CNTR_ITEM_CD    , BOX_TYPE_CD     , BOX_QTY           , FRT            , CUST_MGMT_DLCM_CD
		     /* 송화인 정보 */
		     , SENDR_NM        , SENDR_TEL_NO1   , SENDR_TEL_NO2     , SENDR_TEL_NO3
		     , SENDR_CELL_NO1  , SENDR_CELL_NO2  , SENDR_CELL_NO3
		     , SENDR_SAFE_NO1  , SENDR_SAFE_NO2  , SENDR_SAFE_NO3
		     , SENDR_ZIP_NO    , SENDR_ADDR      , SENDR_DETAIL_ADDR
		     /* 수화인 정보 */
		     , RCVR_NM
		     , RCVR_TEL_NO1    , RCVR_TEL_NO2    , RCVR_TEL_NO3
		     , RCVR_CELL_NO1   , RCVR_CELL_NO2   , RCVR_CELL_NO3
		     , RCVR_SAFE_NO1   , RCVR_SAFE_NO2   , RCVR_SAFE_NO3
		     , RCVR_ZIP_NO     , RCVR_ADDR       , RCVR_DETAIL_ADDR
		     /* 송장정보 */
		     , INVC_NO         , ORI_INVC_NO     , ORI_ORD_NO
		     , COLCT_EXPCT_YMD , COLCT_EXPCT_HOUR, SHIP_EXPCT_YMD , SHIP_EXPCT_HOUR   , PRT_ST
		     , ARTICLE_AMT     , REMARK_1        , REMARK_2          , REMARK_3       , COD_YN
		     /* 상품정보 */
		     , GDS_CD          , GDS_NM          , GDS_QTY
		     , UNIT_CD         , UNIT_NM         , GDS_AMT
		     , ETC_1           , ETC_2           , ETC_3             , ETC_4          , ETC_5
		     , DLV_DV          , RCPT_ERR_YN     , RCPT_ERR_MSG
		     , EAI_PRGS_ST     , EAI_ERR_MSG
		     , REG_EMP_ID      , REG_DTIME       , MODI_EMP_ID       , MODI_DTIME
		) VALUES (
		       '30292070'      , #{AS_DATE}      , #{AS_NUM}         , '02'           , '01'
		     , '01'            , CONCAT(CONCAT(#{AS_DATE}, '_30292070_'), + #{INVOICE_NUM})    , 1
		     , '01'            , '03'
		     , '01'            , '01'            , 1                 , #{DELIV_PRICE}  , '30292070'        --20210217 수정: CUST_MGMT_DLCM_CD(발송고객코드 입력)에 {AS_CUSTOMER_CD} -> '30292070'
		     /* 송화인 정보 */
		     , #{AS_PRSN}
		     , #{TELEPHONE_NUM1_1}               , #{TELEPHONE_NUM1_2}, #{TELEPHONE_NUM1_3}  --전화번호
		     , #{TELEPHONE_NUM2_1}               , #{TELEPHONE_NUM2_2}, #{TELEPHONE_NUM2_3}  --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{ZIP_CODE}     , #{RCVR_ADDR}    , #{RCVR_DETAIL_ADDR}                       --주소정보
		     /* 수화인 정보 */
		     , #{SENDR_NM}     , #{SENDR_TEL_NO1}, #{SENDR_TEL_NO2}  , #{SENDR_TEL_NO3}      --전화번호
		     , ''              , ''              , ''                                        --휴대폰번호
		     , ''              , ''              , ''                                        --안심번호
		     , #{SENDR_ZIP_NO} , #{SENDR_ADDR}   , #{SENDR_DETAIL_ADDR}                      --주소정보
		     /* 송장정보 */
		     , null            , #{INVOICE_NUM}  , ''
		     , ''              , ''              , ''                , ''             , '01' --20210218 수정: 반품건은 운송장을 당사 집화SM이 직접 운송장을 출력하기에 INVC_NO(운송장번호)의 값은 NULL - {INVOICE_NUM} -> null, ORI_INVC_NO에 원송장번호 입력
		     , 0               , ''              , ''                , ''             , ''
		     /* 상품정보 */
		     , #{ITEM_CODE}    , #{ITEM_NAME}    , #{AS_ACCEPT_Q}
		     , ''              , ''              , ''
		     , ''              , ''              , ''                , ''             , ''
		     , '01'            , 'N'             , ''
		     , '01'            , ''
		     , 'WIDEMEMORY'    , SYSDATE         , #{S_USER_ID}      , SYSDATE                             --20210217 수정: REG_EMP_ID(고객사용계정)에 {S_USER_ID} -> 'WIDEMEMORY'
		)
	</update>

	<update id="s_esa100ukrv_wmServiceImpl.updateSEas110t_WM_invoiceNum" parameterType="Map">
		/* s_esa100ukrv_wmServiceImpl.updateSEas110t_WM_invoiceNum */
		UPDATE S_EAS110T_WM
		<if test="InvoiceYn == true">
		   SET INVOICE_NUM  = #{INVOICE_NUM2}
		</if>
		<if test="InvoiceYn != true">
		   SET RETURN_NUM   = #{INVOICE_NUM2}
		</if>
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND AS_NUM    = #{AS_NUM}
	</update>




<!-- 운송장 출력: 202101119 추가 -->
	<select id="s_esa100ukrv_wmServiceImpl.getData" parameterType="Map" resultType="rMap">
		/* s_esa100ukrv_wmServiceImpl.getData */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.AS_CUSTOMER_CD
		     , Z1.value                                                      AS INVOICE_NUM
		     , ISNULL(A.ACCEPT_DATE, CONVERT(NVARCHAR(08), GETDATE(), 112))  AS P_RECEIPT_DATE
		     , A.AS_PRSN                                                     AS RECEIVER_NAME
		     , A.PHONE                                                       AS TELEPHONE_NUM1
		     , A.HPHONE                                                      AS TELEPHONE_NUM2
		     , ISNULL(A.ADDR1, '') + ISNULL(A.ADDR2, '')                     AS RCVRADDR
		     , B4.DIV_NAME + ' ' + ISNULL(B4.TELEPHON, '')                   AS SENDR               --보내는분 성명 + 전화번호
		     , '선불'                                                          AS FRT_DV_CD           --운임구분코드(01:선불, 02:착불, 03:신용)
		     , 0                                                             AS FRT                 --운임
		     , ISNULL(B4.ADDR, '')                                           AS SENDR_ADDR          --보내는분 주소
		     , C1.ITEM_NAME                                                                         --상품명
			 , ''                                                            AS MSG                 --배송메세지
		     , 0                                                             AS DELIV_PRICE         --배송운임
		  FROM       S_EAS100T_WM A  WITH(NOLOCK)
		  INNER JOIN S_EAS110T_WM A2 WITH(NOLOCK) ON A2.COMP_CODE = A.COMP_CODE
		                                         AND A2.DIV_CODE  = A.DIV_CODE
		                                         AND A2.AS_NUM    = A.AS_NUM
		  LEFT  JOIN BOR120T      B4 WITH(NOLOCK) ON B4.COMP_CODE = A.COMP_CODE
		                                         AND B4.DIV_CODE  = A.DIV_CODE
		  INNER JOIN BPR100T      C1 WITH(NOLOCK) ON C1.COMP_CODE = A2.COMP_CODE
		                                         AND C1.ITEM_CODE = A2.ITEM_CODE
		  LEFT  JOIN uniLITE.fnSplit((SELECT INVOICE_NUM
		                                FROM S_EAS110T_WM WITH(NOLOCK)
		                               WHERE COMP_CODE = #{S_COMP_CODE}
		                                 AND DIV_CODE  = #{DIV_CODE}
		                                 AND AS_NUM    = #{AS_NUM}), ',') Z1  ON 1 = 1
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.AS_NUM    = #{AS_NUM}
	</select>
	<select id="s_esa100ukrv_wmServiceImpl.printCarriageBillData" parameterType="Map" resultType="rMap">
		{call PKG_RVAP_ADDRSEARCH.PR_RVAP_SEARCHADDRESS (
		    #{P_CLNTNUM				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLNTMGMCUSTCD		, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_PRNGDIVCD			, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CGOSTS				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{RCVRADDR				, mode=IN	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ZIPNUM				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ZIPID				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_OLDADDRESS			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_OLDADDRESSDTL		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NEWADDRESS			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NESADDRESSDTL		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ETCADDR				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_SHORTADDR			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFADDR			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVBRANCD		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVBRANNM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLCBRANSHORTNM	, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNUM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNM			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLLDLVEMPNICKNM		, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFCD				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_CLSFNM				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_SUBCLSFCD			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_RSPSDIV				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_NEWADDRYN			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ERRORCD				, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String},
		    #{P_ERRORMSG			, mode=OUT	, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</select>
</mapper>