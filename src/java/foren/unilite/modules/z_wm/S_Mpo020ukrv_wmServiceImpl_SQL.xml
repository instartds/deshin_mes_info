<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mpo020ukrv_wmServiceImpl">
<!-- 조회 쿼리 -->
	<select id="s_mpo020ukrv_wmServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_mpo020ukrv_wmServiceImpl.selectList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.RECEIPT_NUM
		     , A.CUSTOM_PRSN
		     , A.CUSTOM_CODE
		     , C1.CUSTOM_NAME
		     , A.PHONE_NUM
		     , A.ORDER_PRSN
		     , A.RECEIPT_TYPE
		     , A.PRICE_TYPE
		     , A.REPRE_NUM
		     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'RR')  AS REPRE_NUM_EXPOS
		     , A.RECEIPT_DATE
		     , A.RECEIPT_PRSN      --20201103 추가
		     , B.ITEM_CODE
		     , B1.ITEM_NAME
		     , B1.SPEC
		     , B.ORDER_UNIT
		     , B.INSTOCK_Q
		     , B.CONTROL_STATUS
		     , B.ARRIVAL_DATE
		     , B.ARRIVAL_PRSN
		     , B.WORK_SEQ
		     , B.RECEIPT_NUM
		     , B.RECEIPT_SEQ
		     , B.RECEIPT_Q
		     , B.RECEIPT_P
		     , B.RECEIPT_O
		     , B.DVRY_DATE
		     , B.REMARK
		     , B.CUSTOM_PRSN
		     , B.REPRE_NUM
		     , B.MONEY_UNIT
		     , B.EXCHG_RATE_O
		     , A.AGREE_STATUS
		  FROM       S_MPO010T_WM A  WITH(NOLOCK)
		  INNER JOIN S_MPO020T_WM B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                         AND B.DIV_CODE     = A.DIV_CODE
		                                         AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		  LEFT  JOIN BPR100T      B1 WITH(NOLOCK) ON B1.COMP_CODE   = B.COMP_CODE
		                                         AND B1.ITEM_CODE   = B.ITEM_CODE
		  LEFT  JOIN BCM100T      C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                         AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
	<if test="@foren.Ognl@isNotEmpty(rdoSelect)">
		<if test="rdoSelect != &quot;Z&quot;">
		   AND B.CONTROL_STATUS = #{rdoSelect}
		</if>
		<if test="rdoSelect == &quot;Z&quot;">
		   AND B.CONTROL_STATUS IN ('A', 'B')
		</if>
	</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
		   AND A.CUSTOM_PRSN    LIKE #{CUSTOM_PRSN} + '%'
		</if>
		 ORDER BY CASE WHEN ISNULL(B.WORK_SEQ, 0) = 0 THEN 99 ELSE ISNULL(B.WORK_SEQ, 0) END, B.RECEIPT_NUM, B.RECEIPT_SEQ
	</select>



<!-- 저장 로직(master) -->
	<select id="s_mpo020ukrv_wmServiceImpl.getReceiptNum" parameterType="Map" resultType="rMap">
		DECLARE @RECEIPT_NUM  NVARCHAR(20)

		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'S_MPO010T_WM', 'A', #{RECEIPT_DATE}, '1', @RECEIPT_NUM OUTPUT

		IF ISNULL(@RECEIPT_NUM, '') != ''
			SELECT @RECEIPT_NUM AS RECEIPT_NUM
		ELSE
			SELECT TOP 1 '' AS RECEIPT_NUM
	</select>

	<update id="s_mpo020ukrv_wmServiceImpl.saveMaster" parameterType="Map">
		/* s_mpo020ukrv_wmServiceImpl.saveMaster */
		DECLARE @CUSTOM_CODE  NVARCHAR(08)
		      , @RECEIPT_TYPE NVARCHAR(02)

		    SET @CUSTOM_CODE  = #{CUSTOM_CODE}
		    SET @CUSTOM_CODE  = CASE WHEN ISNULL(@CUSTOM_CODE, '') = '' THEN 'A00001'
		                             ELSE ISNULL(@CUSTOM_CODE, '')
		                        END
		    SET @RECEIPT_TYPE = #{RECEIPT_TYPE}
		    SET @RECEIPT_TYPE = ISNULL(@RECEIPT_TYPE, '')

		MERGE INTO S_MPO010T_WM                         A
		USING ( SELECT #{S_COMP_CODE}  AS COMP_CODE
		             , #{DIV_CODE}     AS DIV_CODE
		             , #{RECEIPT_NUM}  AS RECEIPT_NUM
		      )                                         B   ON B.COMP_CODE   = A.COMP_CODE
		                                                   AND B.DIV_CODE    = A.DIV_CODE
		                                                   AND B.RECEIPT_NUM = A.RECEIPT_NUM
		WHEN MATCHED THEN
		UPDATE 
		   SET ORDER_PRSN     = #{ORDER_PRSN}
		     , CUSTOM_CODE    = @CUSTOM_CODE
		     , CUSTOM_PRSN    = #{CUSTOM_PRSN}
		     , RECEIPT_TYPE   = @RECEIPT_TYPE
		     , RECEIPT_PRSN   = #{RECEIPT_PRSN}
		     , RECEIPT_DATE   = #{RECEIPT_DATE}
		     , WH_CODE        = #{WH_CODE}
		     , PRICE_TYPE     = #{PRICE_TYPE}
		     , PHONE_NUM      = #{PHONE_NUM}
		     , E_MAIL         = #{E_MAIL}
		     , BANK_NAME      = #{BANK_NAME}
		     , BANK_ACCOUNT   = #{BANK_ACCOUNT}
		     , ADDR           = #{ADDR}
		     , HOME_TITLE     = #{HOME_TITLE}
		     , REMARK         = #{REMARK}
		     , REPRE_NUM      = #{REPRE_NUM}
		     , MONEY_UNIT     = 'KRW'
		     , EXCHG_RATE_O   = 1
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		          COMP_CODE
		        , DIV_CODE
		        , RECEIPT_NUM
		        , ORDER_PRSN
		        , CUSTOM_CODE
		        , CUSTOM_PRSN
		        , RECEIPT_TYPE
		        , RECEIPT_PRSN
		        , RECEIPT_DATE
		        , WH_CODE
		        , PRICE_TYPE
		        , PHONE_NUM
		        , E_MAIL
		        , BANK_NAME
		        , BANK_ACCOUNT
		        , ADDR
		        , HOME_TITLE
		        , REMARK
		        , REPRE_NUM
		        , MONEY_UNIT
		        , EXCHG_RATE_O
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		) VALUES (
		          #{S_COMP_CODE}
		        , #{DIV_CODE}
		        , #{RECEIPT_NUM}
		        , #{ORDER_PRSN}
		        , @CUSTOM_CODE
		        , #{CUSTOM_PRSN}
		        , @RECEIPT_TYPE
		        , #{RECEIPT_PRSN}
		        , #{RECEIPT_DATE}
		        , #{WH_CODE}
		        , #{PRICE_TYPE}
		        , #{PHONE_NUM}
		        , #{E_MAIL}
		        , #{BANK_NAME}
		        , #{BANK_ACCOUNT}
		        , #{ADDR}
		        , #{HOME_TITLE}
		        , #{REMARK}
		        , #{REPRE_NUM}
		        , 'KRW'
		        , 1
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_USER_ID}
		        , GETDATE()
		);
	</update>

	<update id="s_mpo020ukrv_wmServiceImpl.updateMaster" parameterType="Map">
		/* s_mpo020ukrv_wmServiceImpl.updateMaster */
		UPDATE S_MPO010T_WM
		   SET REPRE_NUM      = #{REPRE_NUM}
		     , PRICE_TYPE     = #{PRICE_TYPE}     --20210119 추가: 단가구분 수정가능하도록 변경
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>

	<update id="s_mpo020ukrv_wmServiceImpl.deleteMaster" parameterType="Map">
		/* s_mpo020ukrv_wmServiceImpl.deleteMaster */
		DELETE FROM S_MPO010T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
	</update>

<!-- 저장 로직(detail) -->
	<insert id="s_mpo020ukrv_wmServiceImpl.insertDetail" parameterType="Map" useGeneratedKeys="false">
		/* s_mpo020ukrv_wmServiceImpl.insertList */
		INSERT INTO S_MPO020T_WM (
		       COMP_CODE
		     , DIV_CODE
		     , RECEIPT_NUM
		     , RECEIPT_SEQ
		     , ITEM_CODE
		     , ORDER_UNIT
		     , RECEIPT_Q
		     , RECEIPT_P
		     , RECEIPT_O
		     , DVRY_DATE
		     , INSTOCK_Q
		     , CONTROL_STATUS
		     , ARRIVAL_DATE
		     , ARRIVAL_PRSN
		<if test="@foren.Ognl@isNotEmpty(WORK_SEQ)">
		     , WORK_SEQ
		</if>
		     , REMARK
		     , CUSTOM_PRSN
		     , REPRE_NUM
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{RECEIPT_NUM}
		     , #{RECEIPT_SEQ}
		     , #{ITEM_CODE}
		     , #{ORDER_UNIT}
		     , #{RECEIPT_Q}
		     , 0
		     , 0
		     , #{DVRY_DATE}
		     , #{INSTOCK_Q}
		     , #{CONTROL_STATUS}
		     , #{ARRIVAL_DATE}
		     , #{ARRIVAL_PRSN}
		<if test="@foren.Ognl@isNotEmpty(WORK_SEQ)">
		     , #{WORK_SEQ}
		</if>
		     , #{REMARK}
		     , #{CUSTOM_PRSN}
		     , #{REPRE_NUM}
		     , 'KRW'
		     , 1
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</insert>

	<update id="s_mpo020ukrv_wmServiceImpl.updateDetail" parameterType="Map">
		/* s_mpo020ukrv_wmServiceImpl.updateList */
		UPDATE S_MPO020T_WM
		   SET INSTOCK_Q       = #{INSTOCK_Q}
		     , CONTROL_STATUS  = #{CONTROL_STATUS}
		     , ARRIVAL_DATE    = #{ARRIVAL_DATE}
		     , ARRIVAL_PRSN    = #{ARRIVAL_PRSN}
		<if test="@foren.Ognl@isNotEmpty(WORK_SEQ)">
		     , WORK_SEQ        = #{WORK_SEQ}
		</if>
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</update>

	<delete id="s_mpo020ukrv_wmServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM S_MPO020T_WM
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND RECEIPT_NUM  = #{RECEIPT_NUM}
		   AND RECEIPT_SEQ  = #{RECEIPT_SEQ}
	</delete>
	
	<select id="s_mpo020ukrv_wmServiceImpl.checkDetailData" parameterType="Map" resultType="int">
		SELECT COUNT(COMP_CODE)
		  FROM S_MPO020T_WM WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
	</select>
</mapper>