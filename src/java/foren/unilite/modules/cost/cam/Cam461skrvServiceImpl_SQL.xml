<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cam461skrvServiceImpl">

	<select id="cam461skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT
			 0 SUM_FLAG ,
			 A.PROD_ITEM_CODE              AS PROD_ITEM_CODE      -- 모품목코드
		     , C.ITEM_NAME                   AS PROD_ITEM_NAME      -- 모품목명
		     , D.SPEC                        AS PROD_ITEM_SPEC      -- 모품목규격
		     , SUM(ISNULL(B.PRODT_Q     ,0)) AS PRODT_Q             -- 모품목의 생산량
		     , SUM(ISNULL(A.MAT_DAMT_ONE,0)) AS MAT_DAMT_ONE        -- 직접재료비(재공)
		     , SUM(ISNULL(A.MAT_DAMT_TWO,0)) AS MAT_DAMT_TWO        -- 직접재료비(원자재)
		     , SUM(ISNULL(A.MAT_IAMT_ONE,0)) AS MAT_IAMT_ONE        -- 간접재료비(부자재)
		     , SUM(ISNULL(B.MAT_IAMT_TWO,0)) AS MAT_IAMT_TWO        -- 간접재료비(공통비)
		     , SUM(ISNULL(B.LABOR_DAMT  ,0)) AS LABOR_DAMT          -- 직접노무비
		     , SUM(ISNULL(B.LABOR_IAMT  ,0)) AS LABOR_IAMT          -- 간접노무비
		     , SUM(ISNULL(B.EXPENSE_DAMT,0)) AS EXPENSE_DAMT        -- 직접경비
		     , SUM(ISNULL(B.EXPENSE_IAMT,0)) AS EXPENSE_IAMT        -- 간접경비
		     , SUM(ISNULL(A.MAT_DAMT_ONE,0))
		     + SUM(ISNULL(A.MAT_DAMT_TWO,0))
		     + SUM(ISNULL(A.MAT_IAMT_ONE,0))
		     + SUM(ISNULL(B.MAT_IAMT_TWO,0))
		     + SUM(ISNULL(B.LABOR_DAMT  ,0))
		     + SUM(ISNULL(B.LABOR_IAMT  ,0))
		     + SUM(ISNULL(B.EXPENSE_DAMT,0))
		     + SUM(ISNULL(B.EXPENSE_IAMT,0)) AS TOTAL_AMT           -- 총계

		     , CASE WHEN SUM(ISNULL(B.PRODT_Q,0)) = 0
		            THEN 0
		            ELSE (SUM(ISNULL(A.MAT_DAMT_ONE,0))
		                + SUM(ISNULL(A.MAT_DAMT_TWO,0))
		                + SUM(ISNULL(A.MAT_IAMT_ONE,0))
		                + SUM(ISNULL(B.MAT_IAMT_TWO,0))
		                + SUM(ISNULL(B.LABOR_DAMT  ,0))
		                + SUM(ISNULL(B.LABOR_IAMT  ,0))
		                + SUM(ISNULL(B.EXPENSE_DAMT,0))
		                + SUM(ISNULL(B.EXPENSE_IAMT,0))) / SUM(ISNULL(B.PRODT_Q,0))
		        END AS PER_UNIT_COST       -- 단위당원가
		FROM              (-- 품목별재료비(적상전)의 JOIN TABLE
		                  SELECT DIV_CODE
		                       , WORK_MONTH
		                       , WORK_SHOP_CD
		                       , WKORD_NUM
		                       , PROD_ITEM_CODE
		                       , SUM(ISNULL(MAT_DAMT_ONE,0)) AS MAT_DAMT_ONE
		                       , SUM(ISNULL(MAT_DAMT_TWO,0)) AS MAT_DAMT_TWO
		                       , SUM(ISNULL(MAT_IAMT_ONE,0)) AS MAT_IAMT_ONE
		                       , COMP_CODE
		                  FROM   (
		                         SELECT A.DIV_CODE
		                              , A.WORK_MONTH
		                              , A.WORK_SHOP_CD
		                              , A.WKORD_NUM
		                              , A.PROD_ITEM_CODE
		                              , B.ITEM_ACCOUNT
		                              , (CASE WHEN R1.REF_CODE3 = '20' THEN D_AMT ELSE 0 END) AS MAT_DAMT_ONE
		                              , (CASE WHEN R1.REF_CODE3 = '40' THEN D_AMT ELSE 0 END) AS MAT_DAMT_TWO
		                              , (CASE WHEN R1.REF_CODE3 = '50' THEN D_AMT ELSE 0 END) AS MAT_IAMT_ONE
		                              , A.COMP_CODE
		                         FROM              CAM400T A  WITH (NOLOCK)
		                                INNER JOIN BPR200T B  WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
		                                                                   AND A.ITEM_CODE  = B.ITEM_CODE
		                                                                   AND A.DIV_CODE   = B.DIV_CODE
		                                INNER JOIN BSA100T R1 WITH (NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
		                                                                   AND R1.MAIN_CODE = 'B020'
		                                                                   AND R1.SUB_CODE  = B.ITEM_ACCOUNT
		                         ) MAIN
		                  GROUP  BY
		                         DIV_CODE, WORK_MONTH, WORK_SHOP_CD, WKORD_NUM, PROD_ITEM_CODE, COMP_CODE
		                  ) A
		       LEFT  JOIN (-- 품목별재료비(적상후)의 JOIN TABLE
		                  SELECT A.DIV_CODE
		                       , A.WORK_MONTH
		                       , A.WORK_SHOP_CD
		                       , A.WKORD_NUM
		                       , A.PROD_ITEM_CODE
		                       , SUM(ISNULL(A.MAT_IAMT    ,0)) AS MAT_IAMT_TWO
		                       , SUM(ISNULL(A.PRODT_Q     ,0)) AS PRODT_Q
		                       , SUM(ISNULL(A.LABOR_DAMT  ,0)) AS LABOR_DAMT
		                       , SUM(ISNULL(A.LABOR_IAMT  ,0)) AS LABOR_IAMT
		                       , SUM(ISNULL(A.EXPENSE_DAMT,0)) AS EXPENSE_DAMT
		                       , SUM(ISNULL(A.EXPENSE_IAMT,0)) AS EXPENSE_IAMT
		                       , A.COMP_CODE
		                  FROM   CAM450T A  WITH (NOLOCK)
		                  WHERE  A.COMP_CODE  = #{S_COMP_CODE}
		                  AND    A.DIV_CODE   = #{DIV_CODE}
		                  AND    A.WORK_MONTH = #{WORK_MONTH}
		                  GROUP  BY
		                         A.DIV_CODE, A.WORK_MONTH, A.WORK_SHOP_CD, A.WKORD_NUM, A.PROD_ITEM_CODE, A.COMP_CODE
		                  ) B                      ON B.COMP_CODE      = A.COMP_CODE
		                                          AND B.WORK_SHOP_CD   = A.WORK_SHOP_CD
		                                          AND B.WKORD_NUM      = A.WKORD_NUM
		                                          AND B.PROD_ITEM_CODE = A.PROD_ITEM_CODE
		       INNER JOIN BPR200T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
		                                          AND C.DIV_CODE       = A.DIV_CODE
		                                          AND C.ITEM_CODE      = A.PROD_ITEM_CODE
		       INNER JOIN BPR100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
		                                          AND D.ITEM_CODE      = A.PROD_ITEM_CODE
		WHERE  A.COMP_CODE         = #{S_COMP_CODE}
		AND    A.DIV_CODE          = #{DIV_CODE}
		AND    A.WORK_MONTH        = #{WORK_MONTH}
		AND    B.PRODT_Q           > 0
		<if  test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		AND    C.ITEM_ACCOUNT      =#{ITEM_ACCOUNT}
		</if>
		<if  test="@foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
		AND    A.PROD_ITEM_CODE LIKE #{PROD_ITEM_CODE}+'%'
		</if>
		<if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		AND    D.ITEM_LEVEL1	  =#{ITEM_LEVEL1}
		</if>
		<if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		AND    D.ITEM_LEVEL2      =#{ITEM_LEVEL2}
		</if>
		<if  test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		AND    D.ITEM_LEVEL3      =#{ITEM_LEVEL3}
		</if>
		<if test="@foren.Ognl@isEmpty(PROD_ITEM_CODE) and @foren.Ognl@isNotEmpty(PROD_ITEM_NAME)">
		AND    C.ITEM_NAME      LIKE   #{PROD_ITEM_NAME}+'%'
		</if>

		GROUP  BY A.PROD_ITEM_CODE, C.ITEM_NAME, D.SPEC


	order by A.PROD_ITEM_CODE, C.ITEM_NAME, D.SPEC

	</select>
</mapper>