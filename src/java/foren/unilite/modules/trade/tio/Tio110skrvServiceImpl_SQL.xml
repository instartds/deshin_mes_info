<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tio110skrvServiceImpl">
	<select id="tio110skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		
    
      DECLARE         @DIVCODE                NVARCHAR(8)     ,  
                      @FRORDERDATE            NVARCHAR(8)     ,  
                      @TOORDERDATE            NVARCHAR(8)     ,  
                      @FRITEM                 NVARCHAR(20)    ,  
                      @TOITEM                 NVARCHAR(20)    ,  
                      @FRITEM_NAME            NVARCHAR(200)   ,  
                      @TOITEM_NAME            NVARCHAR(200)   ,                        
                      @FRCUSTOM               NVARCHAR(8)     ,  
                      @TOCUSTOM               NVARCHAR(8)     , 
                      @FRCUSTOM_NAME          NVARCHAR(50)    ,  
                      @TOCUSTOM_NAME          NVARCHAR(50)    , 
                      @FRDVRYDATE             NVARCHAR(8)     ,  
                      @TODVRYDATE             NVARCHAR(8)     ,  
                      @AGREESTATUS            NVARCHAR(1)     ,  
                      @IMPORTNM               NVARCHAR(8)     ,  
                      @PAYMETHODE             NVARCHAR(8)     ,  
                      @COMPCODE               NVARCHAR(10)       
  
  SET             @DIVCODE                   =     #{DIV_CODE}      
  SET             @FRORDERDATE               =     #{FRORDERDATE}     
  SET             @TOORDERDATE               =     #{TOORDERDATE}       
  SET             @FRITEM                    =     #{FRITEM_CODE}       
  SET             @TOITEM                    =     #{TOITEM_CODE}    
  SET             @FRITEM_NAME               =     #{FRITEM_NAME}       
  SET             @TOITEM_NAME               =     #{TOITEM_NAME}     
  SET             @FRCUSTOM                  =     #{FRCUSTOM_CODE}    
  SET             @TOCUSTOM                  =     #{TOCUSTOM_CODE}   
  SET             @FRCUSTOM_NAME             =     #{FRCUSTOM_NAME}    
  SET             @TOCUSTOM_NAME             =     #{TOCUSTOM_NAME}    
  SET             @FRDVRYDATE                =     #{FRDVRYDATE}    
  SET             @TODVRYDATE                =     #{TODVRYDATE}   
  SET             @AGREESTATUS               =     #{AGREESTATUS}     
  SET             @IMPORTNM                  =     #{IMPORTNM}    
  SET             @PAYMETHODE                =     #{PAYMETHODE}   
  SET             @COMPCODE                  =     #{S_COMP_CODE}   
      
 ---------------------------------------------------------------------------------
 --          거래처별 OFFER현황조회    
 ---------------------------------------------------------------------------------
      <choose>
      	<when test="QUERY_TYPE == '1'.toString()">
      			SELECT  B.ITEM_CODE                                                           AS     ITEM_CODE,
		      	uniLITE.fnItemNameComp(@COMPCODE,#{S_USER_NAME},C.ITEM_CODE)                  AS     ITEM_NAME,
		      	 ISNULL(B.SPEC, ISNULL(C.SPEC, ''))                                    AS     SPEC,
		      	 uniLITE.fnCustNameComp(@COMPCODE,#{S_USER_NAME}, A.EXPORTER)                   AS     CUSTOM_NAME,
		      	A.EXPORTER                                                            AS     CUSTOM_CODE, 
		      	A.IMPORT_NM                                                           AS     ORDER_PRSN,
		     	M1.CODE_NAME                                                          AS     PRSN_NAME   ,
      	</when>
      	<when test="QUERY_TYPE == '2'.toString()">
      		SELECT uniLITE.fnCustNameComp(@COMPCODE,#{S_USER_NAME}, A.EXPORTER)                   AS     CUSTOM_NAME,
      		A.EXPORTER                                                            AS     CUSTOM_CODE,
      		B.ITEM_CODE                                                           AS     ITEM_CODE,
      		uniLITE.fnItemNameComp(@COMPCODE,#{S_USER_NAME},C.ITEM_CODE)                  AS     ITEM_NAME,
      		 ISNULL(B.SPEC, ISNULL(C.SPEC, ''))                                    AS     SPEC,
      		 A.IMPORT_NM                                                           AS     ORDER_PRSN,
      		 M1.CODE_NAME                                                     		 AS     PRSN_NAME   ,
      	</when>
      	<otherwise>
      		SELECT        A.IMPORT_NM                                                           AS     ORDER_PRSN,
      		M1.CODE_NAME                                                          AS     PRSN_NAME,
      		 B.ITEM_CODE                                                           AS     ITEM_CODE,
      		 uniLITE.fnItemNameComp(@COMPCODE,#{S_USER_NAME},C.ITEM_CODE)                  AS     ITEM_NAME,
      		 ISNULL(B.SPEC, ISNULL(C.SPEC, ''))                                    AS     SPEC,
      		 uniLITE.fnCustNameComp(@COMPCODE,#{S_USER_NAME}, A.EXPORTER)                   AS     CUSTOM_NAME,
      		 A.EXPORTER                                                            AS     CUSTOM_CODE,
      	</otherwise>
      </choose>
                   A.TRADE_TYPE                                                          AS     TRADE_TYPE,
                   A.PAY_TERMS                                                           AS     PAY_TERMS,
                   A.PAY_METHODE                                                         AS     PAY_METHODE,
           CASE WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0001')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0002')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0001')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) > 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0003')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0001')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) > 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0002')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) > 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0001')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) > 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'A0113')
                WHEN  (ISNULL(B.QTY,0) = 0  AND  ISNULL(H.BL_QTY,0) = 0 AND ISNULL(B.INSTOCK_Q,0) = 0 AND ISNULL(Z.BUY_Q,0) = 0 ) THEN  uniLITE.fnGetLangTxt('KOREAN', 'T0004')
           END AS  TRANS_FLAG,
                   A.TERMS_PRICE                                                         AS     TERMS_PRICE,
                   unilite.fnGetUserDate(@COMPCODE,A.DATE_CONTRACT)                      AS     ORDER_DATE,
                   unilite.fnGetUserDate(@COMPCODE,B.DELIVERY_DATE)                      AS     DVRY_DATE,
                   B.QTY                                                                 AS     ORDER_Q,
                   B.UNIT                                                                AS     ORDER_UNIT, 
                   B.TRNS_RATE                                                           AS     TRNS_RATE, 
                   B.STOCK_UNIT_Q                                                        AS     STOCK_UNIT_Q ,
                   C.STOCK_UNIT                                                          AS     STOCK_UNIT, 
                   B.PRICE                                                               AS     ORDER_P,
                   B.SO_AMT                                                              AS     ORDER_O,
                   A.AMT_UNIT                                                            AS     MONEY_UNIT,
                   A.EXCHANGE_RATE                                                       AS     EXCHG_RATE, 
                   B.SO_AMT_WON                                                          AS     ORDER_I, 
                    ISNULL(B.QTY,0)                                                      AS     GU_QTY,    -- 구매단위 오퍼량
                    ISNULL(B.TRNS_RATE,0)                                                AS     TRANS_RATE,-- 변환계수  
                    ISNULL(B.STOCK_UNIT_Q,0)                                             AS     JEA_QTY,   -- 재고단위 오퍼량
                   CASE WHEN A.PAY_METHODE='MLC' THEN ISNULL(F.MLC_QTY,0) 
                             ELSE ISNULL(G.LLC_QTY,0) END                                AS     LC_QTY, 
                   ISNULL(H.BL_QTY,0)                                                    AS     BL_QTY, 
                   ISNULL(B.RECEIPT_QTY,0)                                                 AS     INSTOCK_Q,
                   UN_Q = CASE WHEN (B.QTY - ISNULL(B.RECEIPT_QTY,0)) &lt; 0 
                               Then 0 Else (B.QTY - ISNULL(B.RECEIPT_QTY,0)) End,
                   E.WH_CODE                                                             AS     WH_CODE,
                   I.TREE_NAME                                                           AS     WH_NAME,
                   A.SO_SER_NO                                                           AS     SO_SER_NO,
                   B.SO_SER                                                              AS     SO_SER ,
                   B.ORDER_NUM                                                           AS     ORDER_NUM,
                   B.ORDER_SEQ                                                           AS     ORDER_SEQ, 
                   B.CLOSE_FLAG                                                          AS     CONTROL_STATUS,
                   ISNULL(A.AGREE_STATUS, '2')                                           AS     AGREE_STATUS,
                   ISNULL(B.REMARK, '')                                                            AS     REMARK,
                   ISNULL(B.PROJECT_NO, ISNULL(A.PROJECT_NO, ''))            AS     PROJECT_NO
  FROM TIA100T A  WITH (NOLOCK)
                INNER JOIN TIA110T  B   WITH (NOLOCK) ON  A.DIV_CODE  = B.DIV_CODE  
                                                     AND A.SO_SER_NO = B.SO_SER_NO 
                                                     AND A.COMP_CODE = B.COMP_CODE 
                INNER JOIN BPR100T  C WITH (NOLOCK)   ON B.ITEM_CODE = C.ITEM_CODE
                                                     AND B.COMP_CODE = C.COMP_CODE 
                INNER JOIN BCM100T  D WITH (NOLOCK)   ON A.EXPORTER  = D.CUSTOM_CODE
                                                     AND A.COMP_CODE = D.COMP_CODE 
                INNER JOIN BPR200T  E  WITH (NOLOCK) ON B.DIV_CODE  = E.DIV_CODE    
                                                    AND B.ITEM_CODE = E.ITEM_CODE   
                                                    AND B.COMP_CODE = E.COMP_CODE   
                LEFT JOIN (SELECT DIV_CODE, COMP_CODE, SO_SER_NO, SO_SER, SUM(QTY) MLC_QTY FROM TIB110T WITH (NOLOCK)
                                        GROUP BY DIV_CODE, COMP_CODE, SO_SER_NO, SO_SER     ) F
                                                     ON B.DIV_CODE  = F.DIV_CODE    
                                                    AND B.SO_SER_NO = F.SO_SER_NO   
                                                    AND B.SO_SER    = F.SO_SER      
                                                    AND B.COMP_CODE = F.COMP_CODE   
                LEFT JOIN (SELECT DIV_CODE, COMP_CODE, SO_SER_NO, SO_SER, SUM(QTY) LLC_QTY FROM TIB150T WITH (NOLOCK)
                                        GROUP BY DIV_CODE,COMP_CODE,SO_SER_NO, SO_SER     ) G   
                                                     ON B.DIV_CODE  = G.DIV_CODE       
                                                    AND B.SO_SER_NO = G.SO_SER_NO      
                                                    AND B.SO_SER    = G.SO_SER         
                                                    AND B.COMP_CODE = G.COMP_CODE      
                LEFT JOIN (SELECT DIV_CODE, COMP_CODE, SO_SER_NO, SO_SER, SUM(QTY) BL_QTY FROM TIC110T WITH (NOLOCK)
                                        GROUP BY DIV_CODE, COMP_CODE, SO_SER_NO, SO_SER     ) H  
                                                     ON B.DIV_CODE  = H.DIV_CODE      
                                                    AND B.SO_SER_NO = H.SO_SER_NO     
                                                    AND B.SO_SER    = H.SO_SER        
                                                    AND B.COMP_CODE = H.COMP_CODE     
                LEFT JOIN (
                             SELECT 
                                    A.DIV_CODE, A.COMP_CODE,ISNULL(A.ORDER_NUM,'') AS ORDER_NUM, 
                                    ISNULL(A.ORDER_SEQ,0)  AS ORDER_SEQ ,
                                    SUM(ISNULL(INOUT_Q,0)) TRIN_QTY,    -- 입고량
                                    SUM(ISNULL(B.BUY_Q,0)) BUY_Q        -- 매입량 
                              FROM  BTR100T  A WITH (NOLOCK)   LEFT JOIN  MAP200T B            -- 수불내역
                                                                 ON  A.INOUT_NUM = B.INOUT_NUM 
                                                                 AND A.INOUT_SEQ = B.INOUT_SEQ 
                                                                 AND A.COMP_CODE = B.COMP_CODE 
                              WHERE A.DIV_CODE = @DIVCODE 
                                AND A.INOUT_TYPE = '1'
                                AND A.INOUT_METH = '1'
                                AND A.ORDER_TYPE in ('2','3','5')
                              GROUP BY A.DIV_CODE, A.COMP_CODE, A.ORDER_NUM, A.ORDER_SEQ     
                  ) Z 
                           ON B.DIV_CODE  = Z.DIV_CODE   
                          AND B.SO_SER_NO = Z.ORDER_NUM  
                          AND B.SO_SER    = Z.ORDER_SEQ  
                          AND B.COMP_CODE = Z.COMP_CODE  
                INNER JOIN BSA220T  I WITH (NOLOCK) ON E.DIV_CODE   = I.TYPE_LEVEL 
                                                   AND E.WH_CODE    = I.TREE_CODE  
                                                   AND E.COMP_CODE  = I.COMP_CODE  
                INNER JOIN BSA100T M1 WITH (NOLOCK) ON M1.MAIN_CODE = 'M201'   
                                                   AND M1.SUB_CODE  = A.IMPORT_NM  
                                                   AND M1.COMP_CODE = A.COMP_CODE  
  WHERE A.DIV_CODE                  =       @DIVCODE        
          AND B.COMP_CODE           =       @COMPCODE       
          AND ((A.DATE_CONTRACT       &gt;=      @FRORDERDATE AND @FRORDERDATE &lt;&gt; '') OR (@FRORDERDATE = ''))
          AND ((A.DATE_CONTRACT       &lt;=      @TOORDERDATE AND @TOORDERDATE &lt;&gt; '') OR (@TOORDERDATE = ''))
		<if test="@foren.Ognl@isNotEmpty(FRCUSTOM_CODE)">
		AND (D.CUSTOM_CODE         &gt;=      @FRCUSTOM    AND @FRCUSTOM    &lt;&gt; '')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOCUSTOM_CODE)">
		AND (D.CUSTOM_CODE         &lt;=      @TOCUSTOM    AND @TOCUSTOM    &lt;&gt; '')
		</if>	     
		<if test="@foren.Ognl@isNotEmpty(FRCUSTOM_NAME) and @foren.Ognl@isEmpty(FRCUSTOM_CODE)">
		AND (D.CUSTOM_NAME         &gt;=      @FRCUSTOM_NAME    AND @FRCUSTOM_NAME    &lt;&gt; '')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOCUSTOM_NAME) and @foren.Ognl@isEmpty(TOCUSTOM_CODE)"> 
		AND (D.CUSTOM_NAME         &lt;=      @TOCUSTOM_NAME    AND @TOCUSTOM_NAME    &lt;&gt; '')
		</if> 
		
  		<if test="@foren.Ognl@isNotEmpty(FRITEM_CODE)">
		AND (B.ITEM_CODE           &gt;=      @FRITEM      AND @FRITEM      &lt;&gt; '')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOITEM_CODE)">
		AND (B.ITEM_CODE           &lt;=      @TOITEM      AND @TOITEM      &lt;&gt; '')
		</if>	     
		<if test="@foren.Ognl@isNotEmpty(FRITEM_NAME) and @foren.Ognl@isEmpty(FRITEM_CODE)">
		AND (C.ITEM_NAME         &gt;=      @FRITEM_NAME    AND @FRITEM_NAME    &lt;&gt; '')
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOITEM_NAME) and @foren.Ognl@isEmpty(TOITEM_CODE)"> 
		AND (C.ITEM_NAME         &lt;=      @TOITEM_NAME    AND @TOITEM_NAME    &lt;&gt; '')
		</if> 

          AND ((B.DELIVERY_DATE       &gt;=      @FRDVRYDATE  AND @FRDVRYDATE  &lt;&gt; '') OR (@FRDVRYDATE  = ''))
          AND ((B.DELIVERY_DATE       &lt;=      @TODVRYDATE  AND @TODVRYDATE  &lt;&gt; '') OR (@TODVRYDATE  = ''))
          AND ((A.AGREE_STATUS         =      @AGREESTATUS AND @AGREESTATUS &lt;&gt; '') OR (@AGREESTATUS = ''))
          AND ((A.IMPORT_NM            =      @IMPORTNM    AND @IMPORTNM    &lt;&gt; '') OR (@IMPORTNM    = ''))
          AND ((A.PAY_METHODE          =      @PAYMETHODE  AND @PAYMETHODE  &lt;&gt; '') OR (@PAYMETHODE  = ''))
    
  ORDER BY 1,3,4,10,11         
	</select>
</mapper>