<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tix100ukrvServiceImpl">
	
	<select id="tix100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		
		    /*------------------------------------------------------------------------*/
		    /* 1. 거래처 명칭 유형 설정                                               */
		    /*------------------------------------------------------------------------*/
		    DECLARE @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = #{S_USER_NAME}
		
		    SET @RefItem = ISNULL(@RefItem, '')
		
		    /*------------------------------------------------------------------------*/
		    /* 2. 날짜 포맷 유형 설정                                                 */
		    /*------------------------------------------------------------------------*/
		    DECLARE @DateFormat         NVARCHAR(01)
		
		    SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
		    FROM   BSA100T WITH (NOLOCK)
		    WHERE  COMP_CODE = #{S_COMP_CODE}
		    AND    MAIN_CODE = 'B044'
		    AND    REF_CODE1 = 'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, '.')
		
		    /*------------------------------------------------------------------------*/
		    /* 3. 경비내역 조회                                                       */
		    /*------------------------------------------------------------------------*/
		    SELECT A.TRADE_DIV 
		         , A.CHARGE_TYPE
		         , A.CHARGE_SER
		         , A.BASIC_PAPER_NO
		         , A.TRADE_CUSTOM_CODE
		         , CASE WHEN @RefItem = '0' THEN E1.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E1.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E1.CUSTOM_NAME2
		                ELSE E1.CUSTOM_NAME
		           END                                                          AS TRADE_CUSTOM_NAME
		         , A.CHARGE_CODE
		         , B.CHARGE_NAME
		         , A.CUST_CODE
		         , CASE WHEN @RefItem = '0' THEN E2.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E2.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E2.CUSTOM_NAME2
		                ELSE E2.CUSTOM_NAME
		           END                                                          AS CUSTOM_NAME
		         , A.VAT_CUSTOM
		         , CASE WHEN @RefItem = '0' THEN E3.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN E3.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN E3.CUSTOM_NAME2
		                ELSE E3.CUSTOM_NAME
		           END                                                          AS VAT_CUSTOM_NAME
		         ,  SUBSTRING(A.OCCUR_DATE, 1, 4) + @DateFormat + 
		            SUBSTRING(A.OCCUR_DATE, 5, 2) + @DateFormat + 
		            SUBSTRING(A.OCCUR_DATE, 7, 2)                               AS OCCUR_DATE
		         , A.CHARGE_AMT
		         , A.AMT_UNIT
		         , A.EXCHANGE_RATE
		         , A.CHARGE_AMT_WON
		         , A.SUPPLY_AMT
		         , A.TAX_CLS
		         , A.VAT_AMT
		         , A.DIV_CODE
		         , A.VAT_COMP_CODE
		         , A.PAY_TYPE
		         , A.NOTE_NUM
		         , A.SAVE_CODE
		         , C.SAVE_NAME
		         , A.BANK_CODE
		         , D.CUSTOM_NAME AS BANK_NAME 
		         ,  SUBSTRING(A.EXP_DATE, 1, 4) + @DateFormat + 
		            SUBSTRING(A.EXP_DATE, 5, 2) + @DateFormat + 
		            SUBSTRING(A.EXP_DATE, 7, 2)                                 AS EXP_DATE
		         , A.PROJECT_NO
		         ,  SUBSTRING(A.PAY_DATE, 1, 4) + @DateFormat + 
		            SUBSTRING(A.PAY_DATE, 5, 2) + @DateFormat + 
		            SUBSTRING(A.PAY_DATE, 7, 2)                                 AS PAY_DATE
		         , A.REMARKS
		         , A.OFFER_SER_NO
		         , A.LC_SER_NO
		         , A.LC_NO
		         , A.BL_SER_NO
		         , A.BL_NO
		         , A.COST_DIV
		         ,  SUBSTRING(A.EX_DATE, 1, 4) + @DateFormat + 
		            SUBSTRING(A.EX_DATE, 5, 2) + @DateFormat + 
		            SUBSTRING(A.EX_DATE, 7, 2)                                  AS EX_DATE
		         , A.EX_NUM
		         , A.AGREE_YN
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , A.COMP_CODE
		         --20191120 총지급액 컬럼 추가
		         , ISNULL(A.SUPPLY_AMT, 0) + ISNULL(A.VAT_AMT, 0)               AS SUPPLY_TOTAL_AMT
		         , Z1.REF_CODE2                                                 AS TAX_RATE
		      FROM            TAA020T  AS A  WITH (NOLOCK)
		           INNER JOIN TAA010T  AS B  WITH (NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
		                                                  AND A.TRADE_DIV    = B.TRADE_DIV
		                                                  AND A.CHARGE_TYPE  = B.CHARGE_TYPE
		                                                  AND A.CHARGE_CODE  = B.CHARGE_CODE
		           LEFT  JOIN AFS100T  AS C  WITH (NOLOCK) ON A.COMP_CODE    = C.COMP_CODE
		                                                  AND A.SAVE_CODE    = C.SAVE_CODE
		           LEFT  JOIN BCM100T  AS D  WITH (NOLOCK) ON A.COMP_CODE    = D.COMP_CODE
		                                                  AND A.BANK_CODE    = D.CUSTOM_CODE
		           LEFT  JOIN BCM100T  AS E1 WITH (NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
		                                                  AND E1.CUSTOM_CODE = A.TRADE_CUSTOM_CODE
		           LEFT  JOIN BCM100T  AS E2 WITH (NOLOCK) ON E2.COMP_CODE   = A.COMP_CODE
		                                                  AND E2.CUSTOM_CODE = A.CUST_CODE
		           LEFT  JOIN BCM100T  AS E3 WITH (NOLOCK) ON E3.COMP_CODE   = A.COMP_CODE
		                                                  AND E3.CUSTOM_CODE = A.VAT_CUSTOM
		           LEFT  JOIN BSA100T  AS Z1 WITH (NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                                  AND Z1.MAIN_CODE   = 'A022'
		                                                  AND Z1.SUB_CODE    = A.TAX_CLS
		     WHERE A.COMP_CODE         = #{S_COMP_CODE}
		       AND A.TRADE_DIV         = #{TRADE_DIV}
		       AND A.OCCUR_DATE       &gt;= #{FRORDERDATE}
		       AND A.OCCUR_DATE       &lt;= #{TOORDERDATE}
		       <if  test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE       =#{DIV_CODE}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(CHARGE_TYPE)">
		       AND A.CHARGE_TYPE       =#{CHARGE_TYPE}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(CHARGE_SER)">
		       AND A.CHARGE_SER       =#{CHARGE_SER}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(BASIC_PAPER_NO)">
		       AND A.BASIC_PAPER_NO       =#{BASIC_PAPER_NO}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
		       AND A.CHARGE_CODE       LIKE '%'+#{CHARGE_CODE}+'%'
		       </if>
			<if test="@foren.Ognl@isNotEmpty(CUST_CODE) and @foren.Ognl@isNotEmpty(CUST_NAME)">
				AND A.CUST_CODE = #{CUST_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUST_CODE) and @foren.Ognl@isEmpty(CUST_NAME)">
				AND A.CUST_CODE LIKE #{CUST_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(CUST_CODE) and @foren.Ognl@isNotEmpty(CUST_NAME)">
			    AND CASE WHEN @RefItem = '0' THEN E2.CUSTOM_NAME
			            WHEN @RefItem = '1' THEN E2.CUSTOM_NAME1
			            WHEN @RefItem = '2' THEN E2.CUSTOM_NAME2
			            ELSE E2.CUSTOM_NAME
			       END              LIKE '%'+#{CUST_NAME}+'%'
			</if>	       
			<if test="@foren.Ognl@isNotEmpty(TRADE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(TRADE_CUSTOM_NAME)">
				AND A.TRADE_CUSTOM_CODE = #{TRADE_CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TRADE_CUSTOM_CODE) and @foren.Ognl@isEmpty(TRADE_CUSTOM_NAME)">
				AND A.TRADE_CUSTOM_CODE LIKE #{TRADE_CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isEmpty(TRADE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(TRADE_CUSTOM_NAME)">
			    AND CASE WHEN @RefItem = '0' THEN E1.CUSTOM_NAME
			            WHEN @RefItem = '1' THEN E1.CUSTOM_NAME1
			            WHEN @RefItem = '2' THEN E1.CUSTOM_NAME2
			            ELSE E1.CUSTOM_NAME
			       END              LIKE '%'+#{TRADE_CUSTOM_NAME}+'%'
			</if>			       
		       
		       <if  test="@foren.Ognl@isNotEmpty(PAY_TYPE)">
		       AND A.PAY_TYPE       =#{PAY_TYPE}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		       AND A.PROJECT_NO       =#{PROJECT_NO}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(EX_DATE)">
		       AND A.EX_DATE       =#{EX_DATE}
		       </if>	       
		       
		       <if  test="@foren.Ognl@isNotEmpty(EX_NUM)">
		       AND A.EX_NUM       =#{EX_NUM}
		       </if>
		       <if  test="@foren.Ognl@isNotEmpty(CHARGE_NAME)">
		       AND B.CHARGE_NAME      LIKE '%'+#{CHARGE_NAME}+'%'
		       </if>

		       <if test="GUBUN == &quot;Y&quot;">
                AND     ISNULL(A.EX_DATE,'') != ''     /* 기표된 데이터만 리턴 */
               </if>
               <if test="GUBUN == &quot;N&quot;">
                AND     ISNULL(A.EX_DATE,'')  = ''     /* 미기표된 데이터만 리턴 */
               </if>
		       
		    ORDER BY A.OCCUR_DATE, A.CHARGE_SER
		
		    SET NOCOUNT    OFF
		    SET ARITHABORT OFF
		END
	</select>

	<insert id="tix100ukrvServiceImpl.saveAll">
		--tix100ukrv.Ctix100ukrvr SetTix100[fnTix100Set] Query01
		set implicit_transactions on 
		INSERT INTO TAA020T
		     ( TRADE_DIV
		     , CHARGE_TYPE
		     , CHARGE_SER
		     , BASIC_PAPER_NO
		     , TRADE_CUSTOM_CODE
		     , CHARGE_CODE
		     , CUST_CODE
		     , VAT_CUSTOM
		     , OCCUR_DATE
		     , CHARGE_AMT
		     , AMT_UNIT
		     , EXCHANGE_RATE
		     , CHARGE_AMT_WON
		     , SUPPLY_AMT
		     , TAX_CLS
		     , VAT_AMT
		     , DIV_CODE
		     , VAT_COMP_CODE
		     , PAY_TYPE
		     , COST_DIV
		     , SAVE_CODE
		     , BANK_CODE
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , INSERT_DB_USER
		     , INSERT_DB_TIME			 
		     , COMP_CODE
		     , OFFER_SER_NO
		     , LC_SER_NO        
		     , LC_NO            
		     , BL_SER_NO        
		     , BL_NO
		     , REMARKS             
		     ) 
		VALUES
		     ( #{TRADE_DIV}
		     , #{CHARGE_TYPE}
		     , #{CHARGE_SER}
		     , #{BASIC_PAPER_NO}
		     , #{TRADE_CUSTOM_CODE}
		     , #{CHARGE_CODE}
		     , #{CUST_CODE}
		     , #{VAT_CUSTOM}
		     , #{OCCUR_DATE}
		     , #{CHARGE_AMT}
		     , #{AMT_UNIT}
		     , #{EXCHANGE_RATE}
		     , #{CHARGE_AMT_WON}
		     , #{SUPPLY_AMT}
		     , #{TAX_CLS}
		     , #{VAT_AMT}
		     , #{DIV_CODE}
		     , #{VAT_COMP_CODE}
		     , #{PAY_TYPE}
		     , #{COST_DIV}
		     , #{SAVE_CODE}
             , #{BANK_CODE}
		     , #{S_USER_NAME}
		     , GETDATE()
		     , #{S_USER_NAME}
		     , GETDATE()			 
		     , #{S_COMP_CODE}
		     , #{OFFER_SER_NO}
			 , #{LC_SER_NO}
			 , #{LC_NO}
			 , #{BL_SER_NO}
			 , #{BL_NO}	
			 , #{REMARKS}	
		     )
		     IF @@TRANCOUNT > 0 COMMIT TRAN
	</insert>
	<update id="tix100ukrvServiceImpl.update">
		--tix100ukrv.Ctix100ukrvr SetTix100[fnTix100Set] Query01
		UPDATE TAA020T
		   SET BASIC_PAPER_NO    = #{BASIC_PAPER_NO}
		     , TRADE_CUSTOM_CODE = #{TRADE_CUSTOM_CODE}
		     , CUST_CODE         = #{CUST_CODE}
		     , VAT_CUSTOM        = #{VAT_CUSTOM}
		     , OCCUR_DATE        = #{OCCUR_DATE}
		     , CHARGE_AMT        = #{CHARGE_AMT}
		     , AMT_UNIT          = #{AMT_UNIT}
		     , EXCHANGE_RATE     = #{EXCHANGE_RATE}
		     , CHARGE_AMT_WON    = #{CHARGE_AMT_WON}
		     , SUPPLY_AMT        = #{SUPPLY_AMT}
		     , TAX_CLS           = #{TAX_CLS}
		     , VAT_AMT           = #{VAT_AMT}
		     , VAT_COMP_CODE     = #{VAT_COMP_CODE}
		     , PAY_TYPE          = #{PAY_TYPE}
		     , NOTE_NUM          = #{NOTE_NUM}
		     , SAVE_CODE         = #{SAVE_CODE}
		     , BANK_CODE         = #{BANK_CODE}
		     , EXP_DATE          = #{EXP_DATE}
		     , PROJECT_NO        = #{PROJECT_NO}
		     , PAY_DATE          = #{PAY_DATE}
		     , REMARKS           = #{REMARKS}
		     , OFFER_SER_NO      = #{OFFER_SER_NO}
		     , LC_SER_NO         = #{LC_SER_NO}
		     , LC_NO             = #{LC_NO}
		     , BL_SER_NO         = #{BL_SER_NO}
		     , BL_NO             = #{BL_NO}
		     , COST_DIV          = #{COST_DIV}
		     , EX_DATE           = #{EX_DATE}
		     , EX_NUM            = ISNULL(NULLIF(#{EX_NUM}, ''), '0')
		     , AGREE_YN          = #{AGREE_YN}
		     , UPDATE_DB_USER    = #{S_USER_NAME}
		     , UPDATE_DB_TIME    = GETDATE()
		     
		 WHERE TRADE_DIV         = #{TRADE_DIV}
		   AND CHARGE_TYPE       = #{CHARGE_TYPE}
		   AND CHARGE_SER        = #{CHARGE_SER}
		   AND CHARGE_CODE       = #{CHARGE_CODE}
		   AND COMP_CODE         = #{S_COMP_CODE}
		   AND DIV_CODE          = #{DIV_CODE}
	</update>
	
	<select id="checkSerNo" resultType="Integer" parameterType="Map">
		SELECT MAX(CHARGE_SER) as  CHARGE_SER
	      FROM TAA020T 
	     WHERE COMP_CODE   = #{S_COMP_CODE}
	       AND TRADE_DIV   = #{TRADE_DIV}
	       AND CHARGE_TYPE = #{CHARGE_TYPE}
	</select>

	<select id="checkSlip" resultType="rMap" parameterType="Map">
		SELECT CASE WHEN ISNULL(EX_DATE, '') = '' THEN 'N' ELSE 'Y' END	AS SLIP_YN
		  FROM TAA020T
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND TRADE_DIV   = #{TRADE_DIV}
		   AND CHARGE_TYPE = #{CHARGE_TYPE}
		   AND CHARGE_SER  = #{CHARGE_SER}
		   AND CHARGE_CODE = #{CHARGE_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
	</select>

	<delete id="delete" parameterType="Map">
		DELETE FROM TAA020T 
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND TRADE_DIV   = #{TRADE_DIV}
		   AND CHARGE_TYPE = #{CHARGE_TYPE}
		   AND CHARGE_SER  = #{CHARGE_SER}
		   AND CHARGE_CODE = #{CHARGE_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
	</delete>
</mapper>