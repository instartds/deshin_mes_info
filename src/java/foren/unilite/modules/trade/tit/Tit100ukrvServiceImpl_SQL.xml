<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tit100ukrvServiceImpl">
	<select id="tit100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
    	--tit100ukrv.Ctit100ukrv SetTit100[fnTit100q] Query01
        SELECT uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_CODE}, C.CUSTOM_CODE) AS EXPORTER_NM 
             , uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_CODE}, D.CUSTOM_CODE) AS IMPORTER_NM
             , (SELECT COUNT(1) 
                  FROM TID110T WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND DIV_CODE    = #{DIV_CODE} 
                   AND PASS_SER_NO = #{PASS_SER_NO}) AS DETAIL_COUNT
             , A.* 
             ,(SELECT Z.PJT_NAME 
                 FROM BCM600T Z WITH (NOLOCK)
                WHERE Z.COMP_CODE = A.COMP_CODE
                  AND Z.PJT_CODE  = A.PROJECT_NO) AS PROJECT_NAME 
          FROM TID100T A WITH (NOLOCK)
                       LEFT OUTER JOIN BCM100T C  WITH (NOLOCK) 
                                    ON A.COMP_CODE = C.COMP_CODE
                                   AND A.EXPORTER  = C.CUSTOM_CODE
                       LEFT OUTER JOIN BCM100T D  WITH (NOLOCK)
                                    ON A.COMP_CODE  = D.COMP_CODE
                                   AND A.IMPORTER = D.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.PASS_SER_NO = #{PASS_SER_NO}     
	</select>
	<select id="tit100ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">	
		-- UTiFuncKrv.Public[fnBLMaster] Query01
		SELECT
		      A.DIV_CODE, A.BL_SER_NO, A.BL_NO 
		     ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.BL_DATE) BL_DATE 
		     ,A.IMPORTER 
		     ,uniLITE.fnCustNameComp(#{S_COMP_CODE},N'UNILITE5', A.IMPORTER) as IMPORTER_NM  
		     ,A.EXPORTER 
		     ,uniLITE.fnCustNameComp(#{S_COMP_CODE},N'UNILITE5', A.EXPORTER) as EXPORTER_NM  
		     ,A.EXCHANGE_RATE 
		     ,A.AMT_UNIT 
		     ,(SELECT B.CODE_NAME FROM BSA100T B WITH (NOLOCK)
		        WHERE B.SUB_CODE  = A.PAY_TERMS AND MAIN_CODE = N'T006'  
		          AND B.COMP_CODE = #{S_COMP_CODE} 
		       ) PAY_TEMRS 
		     ,A.PAY_METHODE 
		     ,(SELECT B.CODE_NAME FROM BSA100T B WITH (NOLOCK)
		        WHERE B.SUB_CODE = A.TERMS_PRICE AND MAIN_CODE = N'T005'
		          AND B.COMP_CODE = #{S_COMP_CODE} 
		      ) TERMS_PRICE 
		     ,A.PAY_DURING  
		     ,A.SO_SER_NO , A.LC_SER_NO 
		     ,A.VESSEL_NAME 
		     ,A.VESSEL_NATION_CODE 
		     ,A.DEST_PORT    
		     ,A.DEST_PORT_NM 
		     ,A.SHIP_PORT    
		     ,A.SHIP_PORT_NM 
		     ,A.PACKING_TYPE 
		     ,A.GROSS_WEIGHT 
		     ,A.WEIGHT_UNIT  
		     ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.DATE_SHIPPING) DATE_SHIPPING 
		     ,ISNULL(A.BL_AMT,0) BL_AMT 
		     ,ISNULL(A.BL_AMT_WON,0) BL_AMT_WON 
		     ,A.TRADE_TYPE  
		     ,A.NATION_INOUT
		     ,A.PROJECT_NO  
		     ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
		     ,(SELECT Z.PJT_NAME FROM BCM600T Z WITH (NOLOCK)
		        WHERE Z.PJT_CODE  = A.PROJECT_NO 
		          AND Z.COMP_CODE = #{S_COMP_CODE} 
		       ) PROJECT_NAME
		     ,(CASE WHEN (SELECT    COUNT(EXPENSE_FLAG) FROM BTR100T WITH (NOLOCK)
		                   WHERE   CREATE_LOC = N'6'
		                     AND   COMP_CODE  = #{S_COMP_CODE} 
		                     AND   BL_NUM     = A.BL_SER_NO)  > 0 THEN
		           'Y'
		       WHEN (SELECT   COUNT(EXPENSE_FLAG) FROM BTR100T WITH (NOLOCK)
		              WHERE   CREATE_LOC = N'6'
		                AND   COMP_CODE  = #{S_COMP_CODE} 
		                AND   BL_NUM = A.BL_SER_NO) = 0 THEN
		           'N'  END)
		      AS EXPENSE_FLAG
		    , B.INVOICE_NO  AS INVOICE_NO
		    , B.CUSTOMS     AS CUSTOMS
		    , B.EP_TYPE     AS EP_TYPE
		    , C.LC_NO       AS LC_NO
		 FROM            TIC100V A WITH (NOLOCK)
		      INNER JOIN TIC100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                        AND B.DIV_CODE  = A.DIV_CODE
		                                        AND B.BL_SER_NO = A.BL_SER_NO
		      LEFT  JOIN TIB100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
		                                        AND C.DIV_CODE  = B.DIV_CODE
		                                        AND C.LC_SER_NO = B.LC_SER_NO
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		<if  test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
			AND A.BL_SER_NO like #{BL_SER_NO}+'%'
		</if> 
			AND A.BL_DATE >= #{BL_DATE_FR}
			AND A.BL_DATE &lt;= #{BL_DATE_TO}
		<if  test="@foren.Ognl@isNotEmpty(EXPORTER)">
			AND A.EXPORTER = #{EXPORTER}
		</if> 
		<if  test="@foren.Ognl@isNotEmpty(BL_NO)">
			 AND A.BL_NO like #{BL_NO}+'%' 
		</if> 
		 AND A.DIV_CODE      = #{DIV_CODE}
		 ORDER BY A.DIV_CODE, A.BL_SER_NO DESC, A.BL_DATE
	</select>
	<select id="tit100ukrvServiceImpl.prevList" parameterType="Map" resultType="rMap">
    	--tit100ukrv.Ctit100ukrv SetTit100[fnTit100q] Query01
        SELECT top 1 uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_CODE}, C.CUSTOM_CODE) AS EXPORTER_NM 
             , uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_CODE}, D.CUSTOM_CODE) AS IMPORTER_NM
             , (SELECT COUNT(1) 
                  FROM TID110T WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND DIV_CODE    = #{DIV_CODE} 
                   AND PASS_SER_NO = #{PASS_SER_NO}) AS DETAIL_COUNT
             , A.* 
             ,(SELECT Z.PJT_NAME 
                 FROM BCM600T Z WITH (NOLOCK)
                WHERE Z.COMP_CODE = A.COMP_CODE
                  AND Z.PJT_CODE  = A.PROJECT_NO) AS PROJECT_NAME 
          FROM TID100T A WITH (NOLOCK)
                       LEFT OUTER JOIN BCM100T C  WITH (NOLOCK)
                                    ON A.COMP_CODE = C.COMP_CODE
                                   AND A.EXPORTER  = C.CUSTOM_CODE
                       LEFT OUTER JOIN BCM100T D  WITH (NOLOCK)
                                    ON A.COMP_CODE  = D.COMP_CODE
                                   AND A.IMPORTER = D.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.PASS_SER_NO &lt; #{PASS_SER_NO}  
           ORDER BY   PASS_SER_NO desc 
	</select>
	<select id="tit100ukrvServiceImpl.nextList" parameterType="Map" resultType="rMap">
	   --tit100ukrv.Ctit100ukrv SetTit100[fnTit100q] Query01
        SELECT top 1 uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_CODE}, C.CUSTOM_CODE) AS EXPORTER_NM 
             , uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_CODE}, D.CUSTOM_CODE) AS IMPORTER_NM
             , (SELECT COUNT(1) 
                  FROM TID110T  WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND DIV_CODE    = #{DIV_CODE} 
                   AND PASS_SER_NO = #{PASS_SER_NO}) AS DETAIL_COUNT
             , A.* 
             ,(SELECT Z.PJT_NAME 
                 FROM BCM600T Z  WITH (NOLOCK)
                WHERE Z.COMP_CODE = A.COMP_CODE
                  AND Z.PJT_CODE  = A.PROJECT_NO) AS PROJECT_NAME 
          FROM TID100T A WITH (NOLOCK)
                       LEFT OUTER JOIN BCM100T C  WITH (NOLOCK) 
                                    ON A.COMP_CODE = C.COMP_CODE
                                   AND A.EXPORTER  = C.CUSTOM_CODE
                       LEFT OUTER JOIN BCM100T D   WITH (NOLOCK)
                                    ON A.COMP_CODE  = D.COMP_CODE
                                   AND A.IMPORTER = D.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.PASS_SER_NO > #{PASS_SER_NO} 
           ORDER BY   PASS_SER_NO     
	</select>
	<insert id="tit100ukrvServiceImpl.insertLogMaster" parameterType="Map">
		insert into L_TID100T
           (KEY_VALUE
           ,OPR_FLAG
           ,COMP_CODE
           ,DIV_CODE
           ,PASS_SER_NO
           ,SO_SER_NO
           ,LC_SER_NO
           ,BL_SER_NO
           ,PROJECT_NO
           ,NATION_INOUT
           ,TRADE_TYPE
           ,INVOICE_NO
           ,INVOICE_DATE
           ,APP_DATE
           ,EP_DATE
           ,EP_NO
           ,ED_DATE
           ,ED_NO
           ,SHIP_FIN_DATE
           ,DISCHGE_DATE
           ,REPORTOR
           ,VESSEL_NM
           ,VESSEL_NATION_CODE
           ,DEST_PORT
           ,DEST_PORT_NM
           ,SHIP_PORT
           ,SHIP_PORT_NM
           ,EXPORTER
           ,IMPORTER
           ,PAY_TERMS
           ,PAY_METHODE
           ,TERMS_PRICE
           ,PAY_DURING
           ,PASS_AMT
           ,PASS_AMT_UNIT
           ,PASS_EXCHANGE_RATE
           ,PASS_AMT_WON
           ,CIF_AMT
           ,CIF_AMT_UNIT
           ,CIF_EXCHANGE_RATE
           ,CIF_AMT_WON
           ,GROSS_WEIGHT
           ,WEIGHT_UNIT
           ,TOT_PACKING_COUNT
           ,PACKING_TYPE
           ,EP_TYPE
           ,DEVICE_PLACE
           ,DEVICE_NO
           ,INSPECT_TYPE
           ,FORM_TRANS
           ,CUSTOMS
           ,EXAM_TXT
           ,TARIFF_TAX
           ,VALUE_TAX
           ,INCOME_TAX
           ,INHA_TAX
           ,EDUC_TAX
           ,TRAF_TAX
           ,ARGRI_TAX
           ,INPUT_NO
           ,INPUT_DATE
           ,OUTPUT_DATE
           ,PAYMENT_DATE
           ,DVRY_DATE
           ,TAXBILL_NO
           ,TAXBILL_DATE
           ,REMARKS1
           ,REMARKS2
           ,REMARKS3
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME)
           
           values (
           
            #{KEY_VALUE}
           ,#{OPR_FLAG}
           ,#{S_COMP_CODE}
           ,#{DIV_CODE}
           ,#{PASS_SER_NO}
           ,#{SO_SER_NO}
           ,#{LC_SER_NO}
           ,#{BL_SER_NO}
           ,#{PROJECT_NO}
           ,'2'
           ,#{TRADE_TYPE}
           ,#{INVOICE_NO}
           ,#{INVOICE_DATE}
           ,#{APP_DATE}
           ,#{EP_DATE}
           ,#{EP_NO}
           ,#{ED_DATE}
           ,#{ED_NO}
           ,#{SHIP_FIN_DATE}
           ,#{DISCHGE_DATE}
           ,#{REPORTOR}
           ,#{VESSEL_NM}
           ,#{VESSEL_NATION_CODE}
           ,#{DEST_PORT}
           ,#{DEST_PORT_NM}
           ,#{SHIP_PORT}
           ,#{SHIP_PORT_NM}
           ,#{EXPORTER}
           ,#{IMPORTER}
           ,#{PAY_TERMS}
           ,#{PAY_METHODE}
           ,#{TERMS_PRICE}
           ,#{PAY_DURING}
           ,#{PASS_AMT}
           ,#{PASS_AMT_UNIT}
           ,#{PASS_EXCHANGE_RATE}
          ,#{PASS_AMT_WON}
           ,#{CIF_AMT}
           ,#{CIF_AMT_UNIT}
           ,#{CIF_EXCHANGE_RATE}
           ,#{CIF_AMT_WON}
           ,#{GROSS_WEIGHT}
           ,#{WEIGHT_UNIT}
           ,#{TOT_PACKING_COUNT}
           ,#{PACKING_TYPE}
           ,#{EP_TYPE}
           ,#{DEVICE_PLACE}
           ,#{DEVICE_NO}
           ,#{INSPECT_TYPE}
           ,#{FORM_TRANS}
           ,#{CUSTOMS}
           ,#{EXAM_TXT}
           ,#{TARIFF_TAX}
           ,#{VALUE_TAX}
           ,#{INCOME_TAX}
           ,#{INHA_TAX}
           ,#{EDUC_TAX}
           ,#{TRAF_TAX}
           ,#{ARGRI_TAX}
           ,#{INPUT_NO}
           ,#{INPUT_DATE}
           ,#{OUTPUT_DATE}
           ,#{PAYMENT_DATE}
           ,#{DVRY_DATE}
           ,#{TAXBILL_NO}
           ,#{TAXBILL_DATE}
           ,#{REMARKS1}
           ,#{REMARKS2}
           ,#{REMARKS3}
           ,#{S_USER_ID}
           ,GETDATE()
           )
	</insert>
	
	<update id="tit100ukrvServiceImpl.USP_TRADE_TIT101UKR" parameterType="Map" statementType="CALLABLE">
    	{call USP_TRADE_TIT101UKR (
    		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
    		#{PassSerNo, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
    		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    	)}
	</update>
	
</mapper>