<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tit101ukrvServiceImpl">

    <select id="tit101ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
        --tit101ukrv.Ctit101ukrv[fnTit101Qstd] QUERY01
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @DIV_CODE               NVARCHAR(20)        --(필수) 사업장 번호
                  , @PASS_SER_NO            NVARCHAR(20)        --(필수) 통관번호
                  , @USER_ID                NVARCHAR(100)        --(필수) 사용자ID

            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @DIV_CODE        = #{DIV_CODE}
            SET @PASS_SER_NO     = #{PASS_INCOM_NO}
            SET @USER_ID         = #{S_USER_ID}

            DECLARE      @RefItem          NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  COMP_CODE = @COMP_CODE
            AND    USER_ID   = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '1')
        -----------------
            DECLARE       @DateSeparator     NVARCHAR(01)

            SELECT TOP 1 @DateSeparator = SUBSTRING(REPLACE(REPLACE(REPLACE(M1.CODE_NAME, 'YYYY', ''), 'MM', ''), 'DD', ''), 1, 1)
            FROM   BSA100T M1 WITH (NOLOCK)
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'

            SET @DateSeparator = ISNULL(@DateSeparator, '-')
        -----------------

            SELECT
                   A.COMP_CODE
                 , A.DIV_CODE
                 , A.PASS_SER_NO
                 , A.EXPORTER
                 , CASE WHEN @RefItem = '1' THEN E1.CUSTOM_NAME
                        WHEN @RefItem = '2' THEN E1.CUSTOM_NAME1
                        WHEN @RefItem = '3' THEN E1.CUSTOM_NAME2
                        ELSE E1.CUSTOM_NAME
                   END                                                                   AS EXPORTER_NM
                 , A.IMPORTER
                 , CASE WHEN @RefItem = '1' THEN E2.CUSTOM_NAME
                        WHEN @RefItem = '2' THEN E2.CUSTOM_NAME1
                        WHEN @RefItem = '3' THEN E2.CUSTOM_NAME2
                        ELSE E2.CUSTOM_NAME
                   END                                                                   AS IMPORTER_NM
                 , ISNULL(E4.DETAIL_COUNT, 0)                                            AS DETAIL_COUNT
                 , A.PROJECT_NO
                 , E3.PJT_NAME                                                           AS PROJECT_NAME
                 , A.SO_SER_NO
                 , A.LC_SER_NO
                 , A.BL_SER_NO
                 , A.INVOICE_NO
                 , A.INVOICE_DATE
                 , A.APP_DATE
                 , A.EP_DATE
                 , A.EP_NO
                 , A.ED_DATE
                 , A.ED_NO
                 , A.SHIP_FIN_DATE
                 , A.DISCHGE_DATE
                 , A.REPORTOR
                 , A.VESSEL_NM
                 , A.VESSEL_NATION_CODE
                 , A.DEST_PORT
                 , A.DEST_PORT_NM
                 , A.SHIP_PORT
                 , A.SHIP_PORT_NM
                 , A.PAY_TERMS
                 , A.PAY_METHODE
                 , A.TERMS_PRICE
                 , A.PAY_DURING
                 , A.PASS_AMT
                 , A.PASS_AMT_UNIT
                 , A.PASS_EXCHANGE_RATE
                 , A.PASS_AMT_WON
                 , A.CIF_AMT
                 , A.CIF_AMT_UNIT
                 , A.CIF_EXCHANGE_RATE
                 , A.CIF_AMT_WON
                 , A.GROSS_WEIGHT
                 , A.WEIGHT_UNIT
                 , A.TOT_PACKING_COUNT
                 , A.PACKING_TYPE
                 , A.EP_TYPE
                 , A.DEVICE_PLACE
                 , A.DEVICE_NO
                 , A.INSPECT_TYPE
                 , A.FORM_TRANS
                 , A.CUSTOMS
                 , A.EXAM_TXT
                 , A.TARIFF_TAX
                 , A.VALUE_TAX
                 , A.INCOME_TAX
                 , A.INHA_TAX
                 , A.EDUC_TAX
                 , A.TRAF_TAX
                 , A.ARGRI_TAX
                 , A.INPUT_NO
                 , A.INPUT_DATE
                 , A.OUTPUT_DATE
                 , A.PAYMENT_DATE
                 , A.DVRY_DATE
                 , A.TAXBILL_NO
                 , A.TAXBILL_DATE
                 , A.REMARKS1
                 , A.REMARKS2
                 , A.REMARKS3
                 , A.TRADE_TYPE
                 , Z.BL_NO
              FROM            TID100T AS  A WITH(NOLOCK)
                   LEFT  JOIN BCM100T AS E1 WITH(NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
                                                        AND E1.CUSTOM_CODE = A.EXPORTER
                   LEFT  JOIN BCM100T AS E2 WITH(NOLOCK) ON E2.COMP_CODE   = A.COMP_CODE
                                                        AND E2.CUSTOM_CODE = A.IMPORTER
                   LEFT  JOIN BCM600T AS E3 WITH(NOLOCK) ON E3.COMP_CODE   = A.COMP_CODE
                                                        AND E3.PJT_CODE    = A.PROJECT_NO
                   LEFT  JOIN (
                               SELECT COMP_CODE
                                    , DIV_CODE
                                    , PASS_SER_NO
                                    , COUNT(PASS_SER) AS DETAIL_COUNT
                                 FROM TID110T WITH(NOLOCK)
                                WHERE COMP_CODE   = @COMP_CODE
                                  AND DIV_CODE    = @DIV_CODE
                                  AND PASS_SER_NO = @PASS_SER_NO
                                GROUP BY COMP_CODE, DIV_CODE, PASS_SER_NO
                              ) AS E4 ON E4.COMP_CODE   = A.COMP_CODE
                                     AND E4.DIV_CODE    = A.DIV_CODE
                                     AND E4.PASS_SER_NO = A.PASS_SER_NO
                    LEFT  JOIN TIC100V AS Z  WITH(NOLOCK) ON Z.COMP_CODE = A.COMP_CODE
                                                         AND Z.DIV_CODE  = A.DIV_CODE
                                                         AND Z.BL_SER_NO = A.BL_SER_NO
             WHERE A.COMP_CODE   = @COMP_CODE
               AND A.DIV_CODE    = @DIV_CODE
               AND A.PASS_SER_NO = @PASS_SER_NO

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="tit101ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
        --tit101ukrv.Ctit101ukrv[fnTit101Qstd] QUERY02
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @DIV_CODE               NVARCHAR(20)        --(필수) 사업장 번호
                  , @PASS_SER_NO            NVARCHAR(20)        --(필수) 통관번호
                  , @USER_ID                NVARCHAR(100)        --(필수) 사용자ID

            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @DIV_CODE        = #{DIV_CODE}
            SET @PASS_SER_NO     = #{PASS_INCOM_NO}
            SET @USER_ID         = #{S_USER_ID}

            DECLARE      @RefItem          NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  COMP_CODE = @COMP_CODE
            AND    USER_ID   = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '1')
        -----------------
            DECLARE       @DateSeparator     NVARCHAR(01)

            SELECT TOP 1 @DateSeparator = SUBSTRING(REPLACE(REPLACE(REPLACE(M1.CODE_NAME, 'YYYY', ''), 'MM', ''), 'DD', ''), 1, 1)
            FROM   BSA100T M1 WITH (NOLOCK)
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'

            SET @DateSeparator = ISNULL(@DateSeparator, '-')
        -----------------

            SELECT
                   A.DIV_CODE
                 , A.PASS_SER_NO
                 , A.PASS_SER
                 , A.ITEM_CODE
                 , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME
                        WHEN @RefItem = '2' THEN C1.ITEM_NAME1
                        WHEN @RefItem = '3' THEN C1.ITEM_NAME2
                        ELSE C1.ITEM_NAME
                   END                                                                         AS ITEM_NAME
                 , A.SPEC
                 , A.UNIT
                 , A.QTY
                 , A.PRICE
                 , A.PASS_AMT
                 , unilite.fnformat(A.COMP_CODE, ISNULL(B.PASS_EXCHANGE_RATE, 0), 'T_FSET_RS') AS PASS_EXCHANGE_RATE
                 , A.PASS_AMT_WON
                 , A.HS_NO
                 , C2.HS_NAME
                 , A.BL_SER_NO
                 , A.BL_SER
                 , A.SO_SER_NO
                 , A.SO_SER
                 , A.USE_QTY
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , A.WH_CODE
                 , A.COMP_CODE
              FROM            TID110T AS  A WITH(NOLOCK)
                   INNER JOIN TID100T AS  B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                        AND B.DIV_CODE    = A.DIV_CODE
                                                        AND B.PASS_SER_NO = A.PASS_SER_NO
                   INNER JOIN BPR100T AS C1 WITH(NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
                                                        AND C1.ITEM_CODE  = A.ITEM_CODE
                   LEFT  JOIN TAA030T AS C2 WITH(NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
                                                        AND C2.HS_NO      = A.HS_NO
             WHERE A.COMP_CODE   = @COMP_CODE
               AND A.DIV_CODE    = @DIV_CODE
               AND A.PASS_SER_NO = @PASS_SER_NO
             ORDER BY A.PASS_SER

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="tit101ukrvServiceImpl.selectReffMaster" parameterType="Map" resultType="rMap">
        -- UTiFuncKrv.Public[fnBLMaster] Query01
        SELECT
              A.DIV_CODE, A.BL_SER_NO, A.BL_NO
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.BL_DATE) BL_DATE
             ,A.IMPORTER
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},N'UNILITE5', A.IMPORTER) as IMPORTER_NM
             ,A.EXPORTER
             ,uniLITE.fnCustNameComp(#{S_COMP_CODE},N'UNILITE5', A.EXPORTER) as EXPORTER_NM
             ,A.EXCHANGE_RATE
             ,A.AMT_UNIT
             ,A.PAY_TERMS
             ,A.PAY_METHODE
             ,A.TERMS_PRICE
             ,A.PAY_DURING
             ,A.SO_SER_NO , A.LC_SER_NO
             ,A.VESSEL_NAME
             ,A.VESSEL_NATION_CODE
             ,A.DEST_PORT
             ,A.DEST_PORT_NM
             ,A.SHIP_PORT
             ,A.SHIP_PORT_NM
             ,A.PACKING_TYPE
             ,A.GROSS_WEIGHT
             ,A.WEIGHT_UNIT
             ,unilite.fnGetUserDateComp(#{S_COMP_CODE},A.DATE_SHIPPING) DATE_SHIPPING
             ,ISNULL(A.BL_AMT,0) BL_AMT
             ,ISNULL(A.BL_AMT_WON,0) BL_AMT_WON
             ,A.TRADE_TYPE
             ,A.NATION_INOUT
             ,A.PROJECT_NO
             ,ISNULL(A.RECEIVE_AMT,0) RECEIVE_AMT
             ,(SELECT Z.PJT_NAME FROM BCM600T Z WITH (NOLOCK)
                WHERE Z.PJT_CODE  = A.PROJECT_NO
                  AND Z.COMP_CODE = #{S_COMP_CODE}
               ) PROJECT_NAME
             ,(CASE WHEN (SELECT    COUNT(EXPENSE_FLAG) FROM BTR100T WITH (NOLOCK)
                           WHERE   CREATE_LOC = N'6'
                             AND   COMP_CODE  = #{S_COMP_CODE}
                             AND   BL_NUM     = A.BL_SER_NO)  > 0 THEN
                   'Y'
               WHEN (SELECT   COUNT(EXPENSE_FLAG) FROM BTR100T WITH (NOLOCK)
                      WHERE   CREATE_LOC = N'6'
                        AND   COMP_CODE  = #{S_COMP_CODE}
                        AND   BL_NUM = A.BL_SER_NO) = 0 THEN
                   'N'  END)
              AS EXPENSE_FLAG
            , B.INVOICE_NO  AS INVOICE_NO
            , B.CUSTOMS     AS CUSTOMS
            , B.EP_TYPE     AS EP_TYPE
            , C.LC_NO       AS LC_NO
         FROM            TIC100V A WITH (NOLOCK)
              INNER JOIN TIC100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                AND B.DIV_CODE  = A.DIV_CODE
                                                AND B.BL_SER_NO = A.BL_SER_NO
              LEFT  JOIN TIB100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
                                                AND C.DIV_CODE  = B.DIV_CODE
                                                AND C.LC_SER_NO = B.LC_SER_NO
			  LEFT JOIN (SELECT COMP_CODE
							  , DIV_CODE
							  , BL_SER_NO
							  , SUM(QTY) AS QTY
						 FROM TID110T WITH (NOLOCK)
						 WHERE COMP_CODE = #{S_COMP_CODE}
						 AND   DIV_CODE  = #{DIV_CODE}
						 GROUP BY COMP_CODE
								  , DIV_CODE
								  , BL_SER_NO) D ON D.COMP_CODE = A.COMP_CODE
											    AND D.DIV_CODE  = A.DIV_CODE
												AND D.BL_SER_NO = A.BL_SER_NO
         WHERE A.COMP_CODE = #{S_COMP_CODE}
        <if  test="@foren.Ognl@isNotEmpty(BL_SER_NO)">
            AND A.BL_SER_NO like #{BL_SER_NO}+'%'
        </if>
            AND A.BL_DATE >= #{BL_DATE_FR}
            AND A.BL_DATE &lt;= #{BL_DATE_TO}
        <if  test="@foren.Ognl@isNotEmpty(EXPORTER)">
            AND A.EXPORTER = #{EXPORTER}
        </if>
        <if  test="@foren.Ognl@isNotEmpty(BL_NO)">
             AND A.BL_NO like #{BL_NO}+'%'
        </if>
         AND A.DIV_CODE      = #{DIV_CODE}
         AND ISNULL(D.BL_SER_NO, '') = '' --통관등록 안 된 것 가져오는 쿼리
         ORDER BY A.DIV_CODE, A.BL_SER_NO DESC, A.BL_DATE
    </select>

    <select id="tit101ukrvServiceImpl.selectShippingList" parameterType="Map" resultType="rMap">
    	--tit101ukrv.Ctit101ukrv[fnTit101Qstd2] QUERY01
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @DIV_CODE               NVARCHAR(20)        --(필수) 사업장 번호
                  , @BL_SER_NO              NVARCHAR(20)        --(선택) B/L 관리번호
                  , @FR_BL_DATE             NVARCHAR(08)        --(선택) B/L일(FROM)
                  , @TO_BL_DATE             NVARCHAR(08)        --(선택) B/L일(TO)
                  , @EXPORTER               NVARCHAR(20)        --(선택) 수입자
                  , @PAY_TERMS              NVARCHAR(20)        --(선택) 결제조건
                  , @TERMS_PRICE            NVARCHAR(20)        --(선택) 가격조건
                  , @PAY_METHODE            NVARCHAR(20)        --(선택) 결제방법
                  , @TRADE_TYPE             NVARCHAR(20)        --(선택) 무역종류
                  , @USER_ID                NVARCHAR(100)        --(필수) 사용자ID

            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @DIV_CODE        = #{DIV_CODE}
            SET @BL_SER_NO       = #{BL_SER_NO}
            SET @FR_BL_DATE      = #{BL_DATE_FR}
            SET @TO_BL_DATE      = #{BL_DATE_TO}
            SET @EXPORTER        = #{EXPORTER}
            SET @PAY_TERMS       = #{PAY_TERMS}
            SET @TERMS_PRICE     = #{TERMS_PRICE}
            SET @PAY_METHODE     = ''
            SET @TRADE_TYPE      = #{TRADE_TYPE}
            SET @TRADE_TYPE		 = ISNULL(@TRADE_TYPE, '')

            SET @USER_ID         = #{S_USER_ID}

            DECLARE      @RefItem          NVARCHAR(01)

            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  COMP_CODE = @COMP_CODE
            AND    USER_ID   = @USER_ID

            SET @RefItem = ISNULL(@RefItem, '1')
        -----------------
            DECLARE       @DateSeparator     NVARCHAR(01)

            SELECT TOP 1 @DateSeparator = SUBSTRING(REPLACE(REPLACE(REPLACE(M1.CODE_NAME, 'YYYY', ''), 'MM', ''), 'DD', ''), 1, 1)
            FROM   BSA100T M1 WITH (NOLOCK)
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'

            SET @DateSeparator = ISNULL(@DateSeparator, '-')
        -----------------
             SELECT
                    CAST(0 AS BIT)                                               AS CHOICE
                  , A.DIV_CODE
                  , B.BL_SER_NO
                  , B.BL_SER
                  , A.EXPORTER
                  , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME
                         WHEN @RefItem = '2' THEN C1.CUSTOM_NAME1
                         WHEN @RefItem = '3' THEN C1.CUSTOM_NAME2
                         ELSE C1.CUSTOM_NAME
                     END                                                         AS EXPORTER_NM
                  , A.TERMS_PRICE
                  , C2.CODE_NAME                              AS TERMS_PRICE_NM
                  , A.PAY_TERMS
                  , C3.CODE_NAME                              AS PAY_TERMS_NM
                  , B.ITEM_CODE
                  , CASE WHEN @RefItem = '1' THEN C.ITEM_NAME
                         WHEN @RefItem = '2' THEN C.ITEM_NAME1
                         WHEN @RefItem = '3' THEN C.ITEM_NAME2
                         ELSE C.ITEM_NAME
                    END                                                          AS ITEM_NAME
                  , B.SPEC
                  , B.UNIT
                  , B.QTY
                  , B.PRICE
                  , B.BL_AMT
                  , A.EXCHANGE_RATE
                  , B.BL_AMT_WON
                  , B.HS_NO
                  , C4.HS_NAME
                  , B.SO_SER_NO
                  , B.SO_SER
                  , B.USE_QTY
                  , B.QTY - B.USE_QTY AS REMAIN_QTY
              FROM            TIC100V AS A  WITH(NOLOCK)
                   INNER JOIN TIC110T AS B  WITH(NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                        AND B.DIV_CODE      = A.DIV_CODE
                                                        AND B.BL_SER_NO     = A.BL_SER_NO
                   INNER JOIN BPR100T AS C  WITH(NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                        AND C.ITEM_CODE     = B.ITEM_CODE
                   LEFT  JOIN BCM100T AS C1 WITH(NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                        AND C1.CUSTOM_CODE  = A.EXPORTER
                   LEFT  JOIN BSA100T AS C2 WITH(NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                        AND C2.MAIN_CODE    = N'T005'
                                                        AND C2.SUB_CODE     = A.TERMS_PRICE
                   LEFT  JOIN BSA100T AS C3 WITH(NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
                                                        AND C3.MAIN_CODE    = N'T006'
                                                        AND C3.SUB_CODE     = A.PAY_TERMS
                   LEFT  JOIN TAA030T AS C4 WITH(NOLOCK) ON C4.COMP_CODE    = B.COMP_CODE
                                                        AND C4.HS_NO        = B.HS_NO
             WHERE   A.COMP_CODE       = @COMP_CODE
               AND   A.DIV_CODE        = @DIV_CODE
               AND   B.QTY             > B.USE_QTY
               AND ((A.BL_SER_NO    LIKE @BL_SER_NO   + '%'  AND @BL_SER_NO    != '') OR (@BL_SER_NO    = ''))
               AND ((A.BL_DATE        &gt;= @FR_BL_DATE         AND @FR_BL_DATE   != '') OR (@FR_BL_DATE   = ''))
               AND ((A.BL_DATE        &lt;= @TO_BL_DATE         AND @TO_BL_DATE   != '') OR (@TO_BL_DATE   = ''))
               AND ((A.EXPORTER     LIKE @EXPORTER    + '%'  AND @EXPORTER     != '') OR (@EXPORTER     = ''))
               AND ((A.PAY_TERMS       = @PAY_TERMS          AND @PAY_TERMS    != '') OR (@PAY_TERMS    = ''))
               AND ((A.TERMS_PRICE     = @TERMS_PRICE        AND @TERMS_PRICE  != '') OR (@TERMS_PRICE  = ''))
               AND ((A.PAY_METHODE     = @PAY_METHODE        AND @PAY_METHODE  != '') OR (@PAY_METHODE  = ''))
               AND ((A.TRADE_TYPE      = @TRADE_TYPE         AND @TRADE_TYPE   != '') OR (@TRADE_TYPE   = ''))
             ORDER BY B.BL_SER_NO DESC, B.BL_SER

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="tit101ukrvServiceImpl.prevList" parameterType="Map" resultType="rMap">
        --tit101ukrv.Ctit101ukrv SetTit100[fnTit100q] Query01
        SELECT top 1 uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_CODE}, C.CUSTOM_CODE) AS EXPORTER_NM
             , uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_CODE}, D.CUSTOM_CODE) AS IMPORTER_NM
             , (SELECT COUNT(1)
                  FROM TID110T WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND DIV_CODE    = #{DIV_CODE}
                   AND PASS_SER_NO = #{PASS_SER_NO}) AS DETAIL_COUNT
             , A.*
             ,(SELECT Z.PJT_NAME
                 FROM BCM600T Z WITH (NOLOCK)
                WHERE Z.COMP_CODE = A.COMP_CODE
                  AND Z.PJT_CODE  = A.PROJECT_NO) AS PROJECT_NAME
          FROM TID100T A WITH (NOLOCK)
                       LEFT OUTER JOIN BCM100T C  WITH (NOLOCK)
                                    ON A.COMP_CODE = C.COMP_CODE
                                   AND A.EXPORTER  = C.CUSTOM_CODE
                       LEFT OUTER JOIN BCM100T D  WITH (NOLOCK)
                                    ON A.COMP_CODE  = D.COMP_CODE
                                   AND A.IMPORTER = D.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.PASS_SER_NO &lt; #{PASS_SER_NO}
           ORDER BY   PASS_SER_NO desc
    </select>

    <select id="tit101ukrvServiceImpl.nextList" parameterType="Map" resultType="rMap">
       --tit101ukrv.Ctit101ukrv SetTit100[fnTit100q] Query01
        SELECT top 1 uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_CODE}, C.CUSTOM_CODE) AS EXPORTER_NM
             , uniLITE.fnCustNameComp(D.COMP_CODE, #{S_USER_CODE}, D.CUSTOM_CODE) AS IMPORTER_NM
             , (SELECT COUNT(1)
                  FROM TID110T  WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND DIV_CODE    = #{DIV_CODE}
                   AND PASS_SER_NO = #{PASS_SER_NO}) AS DETAIL_COUNT
             , A.*
             ,(SELECT Z.PJT_NAME
                 FROM BCM600T Z  WITH (NOLOCK)
                WHERE Z.COMP_CODE = A.COMP_CODE
                  AND Z.PJT_CODE  = A.PROJECT_NO) AS PROJECT_NAME
          FROM TID100T A WITH (NOLOCK)
                       LEFT OUTER JOIN BCM100T C  WITH (NOLOCK)
                                    ON A.COMP_CODE = C.COMP_CODE
                                   AND A.EXPORTER  = C.CUSTOM_CODE
                       LEFT OUTER JOIN BCM100T D   WITH (NOLOCK)
                                    ON A.COMP_CODE  = D.COMP_CODE
                                   AND A.IMPORTER = D.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.DIV_CODE    = #{DIV_CODE}
           AND A.PASS_SER_NO > #{PASS_SER_NO}
           ORDER BY   PASS_SER_NO
    </select>

    <insert id="tit101ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_TID100T
           (KEY_VALUE
           ,OPR_FLAG
           ,COMP_CODE
           ,DIV_CODE
           ,PASS_SER_NO
           ,SO_SER_NO
           ,LC_SER_NO
           ,BL_SER_NO
           ,PROJECT_NO
           ,NATION_INOUT
           ,TRADE_TYPE
           ,INVOICE_NO
           ,INVOICE_DATE
           ,APP_DATE
           ,EP_DATE
           ,EP_NO
           ,ED_DATE
           ,ED_NO
           ,SHIP_FIN_DATE
           ,DISCHGE_DATE
           ,REPORTOR
           ,VESSEL_NM
           ,VESSEL_NATION_CODE
           ,DEST_PORT
           ,DEST_PORT_NM
           ,SHIP_PORT
           ,SHIP_PORT_NM
           ,EXPORTER
           ,IMPORTER
           ,PAY_TERMS
           ,PAY_METHODE
           ,TERMS_PRICE
           ,PAY_DURING
           ,PASS_AMT
           ,PASS_AMT_UNIT
           ,PASS_EXCHANGE_RATE
           ,PASS_AMT_WON
           ,CIF_AMT
           ,CIF_AMT_UNIT
           ,CIF_EXCHANGE_RATE
           ,CIF_AMT_WON
           ,GROSS_WEIGHT
           ,WEIGHT_UNIT
           ,TOT_PACKING_COUNT
           ,PACKING_TYPE
           ,EP_TYPE
           ,DEVICE_PLACE
           ,DEVICE_NO
           ,INSPECT_TYPE
           ,FORM_TRANS
           ,CUSTOMS
           ,EXAM_TXT
           ,TARIFF_TAX
           ,VALUE_TAX
           ,INCOME_TAX
           ,INHA_TAX
           ,EDUC_TAX
           ,TRAF_TAX
           ,ARGRI_TAX
           ,INPUT_NO
           ,INPUT_DATE
           ,OUTPUT_DATE
           ,PAYMENT_DATE
           ,DVRY_DATE
           ,TAXBILL_NO
           ,TAXBILL_DATE
           ,REMARKS1
           ,REMARKS2
           ,REMARKS3
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME)

           values (

            #{KEY_VALUE}
           ,#{OPR_FLAG}
           ,#{S_COMP_CODE}
           ,#{DIV_CODE}
           ,#{PASS_SER_NO}
           ,#{SO_SER_NO}
           ,#{LC_SER_NO}
           ,#{BL_SER_NO}
           ,#{PROJECT_NO}
           ,'2'
           ,#{TRADE_TYPE}
           ,#{INVOICE_NO}
           ,#{INVOICE_DATE}
           ,#{APP_DATE}
           ,#{EP_DATE}
           ,#{EP_NO}
           ,#{ED_DATE}
           ,#{ED_NO}
           ,#{SHIP_FIN_DATE}
           ,#{DISCHGE_DATE}
           ,#{REPORTOR}
           ,#{VESSEL_NM}
           ,#{VESSEL_NATION_CODE}
           ,#{DEST_PORT}
           ,#{DEST_PORT_NM}
           ,#{SHIP_PORT}
           ,#{SHIP_PORT_NM}
           ,#{EXPORTER}
           ,#{IMPORTER}
           ,#{PAY_TERMS}
           ,#{PAY_METHODE}
           ,#{TERMS_PRICE}
           ,#{PAY_DURING}
           ,#{PASS_AMT}
           ,#{PASS_AMT_UNIT}
           ,#{PASS_EXCHANGE_RATE}
          ,#{PASS_AMT_WON}
           ,#{CIF_AMT}
           ,#{CIF_AMT_UNIT}
           ,#{CIF_EXCHANGE_RATE}
           ,#{CIF_AMT_WON}
           ,#{GROSS_WEIGHT}
           ,#{WEIGHT_UNIT}
           ,#{TOT_PACKING_COUNT}
           ,#{PACKING_TYPE}
           ,#{EP_TYPE}
           ,#{DEVICE_PLACE}
           ,#{DEVICE_NO}
           ,#{INSPECT_TYPE}
           ,#{FORM_TRANS}
           ,#{CUSTOMS}
           ,#{EXAM_TXT}
           ,#{TARIFF_TAX}
           ,#{VALUE_TAX}
           ,#{INCOME_TAX}
           ,#{INHA_TAX}
           ,#{EDUC_TAX}
           ,#{TRAF_TAX}
           ,#{ARGRI_TAX}
           ,#{INPUT_NO}
           ,#{INPUT_DATE}
           ,#{OUTPUT_DATE}
           ,#{PAYMENT_DATE}
           ,#{DVRY_DATE}
           ,#{TAXBILL_NO}
           ,#{TAXBILL_DATE}
           ,#{REMARKS1}
           ,#{REMARKS2}
           ,#{REMARKS3}
           ,#{S_USER_ID}
           ,GETDATE()
           )
    </insert>

    <insert id="tit101ukrvServiceImpl.insertLogDetail" parameterType="Map">
    	INSERT INTO L_TID110T(
    	     KEY_VALUE
            ,OPR_FLAG
            ,COMP_CODE
            ,DIV_CODE
            ,PASS_SER_NO
            ,PASS_SER
            ,SO_SER_NO
            ,SO_SER
            ,BL_SER_NO
            ,BL_SER
            ,ITEM_CODE
            ,HS_NO
            ,SPEC
            ,UNIT
            ,QTY
            ,PRICE
            ,PASS_AMT
            ,PASS_AMT_WON
            ,USE_QTY
            ,WH_CODE
            ,UPDATE_DB_USER
            ,UPDATE_DB_TIME
            ,INSERT_DB_USER
            ,INSERT_DB_TIME
    	)VALUES(
    	     #{KEY_VALUE}
            ,#{OPR_FLAG}
            ,#{S_COMP_CODE}
            ,#{DIV_CODE}
            ,#{PASS_SER_NO}
            ,#{PASS_SER}
            ,#{SO_SER_NO}
            ,#{SO_SER}
            ,#{BL_SER_NO}
            ,#{BL_SER}
            ,#{ITEM_CODE}
            ,#{HS_NO}
            ,#{SPEC}
            ,#{UNIT}
            ,#{QTY}
            ,#{PRICE}
            ,#{PASS_AMT}
            ,#{PASS_AMT_WON}
            ,#{USE_QTY}
            ,#{WH_CODE}
            ,#{S_USER_ID}
            ,GETDATE()
            ,#{S_USER_ID}
            ,GETDATE()
    	)

    </insert>

    <update id="tit101ukrvServiceImpl.USP_TRADE_TIT101UKR" parameterType="Map" statementType="CALLABLE">
        {call USP_TRADE_TIT101UKR (
            #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PassSerNo, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <select id="tit101ukrvServiceImpl.USP_TRADE_TIT101UKR2" parameterType="Map" resultType="rMap">
		DECLARE
				@PASS_SER_NO	NVARCHAR(20)	= ''
			,	@ERROR_DESC		NVARCHAR(2000)	= ''
		BEGIN
			EXEC USP_TRADE_TIT101UKR	#{KeyValue},	@PASS_SER_NO OUTPUT, @ERROR_DESC OUTPUT
		
			SELECT @PASS_SER_NO	AS PASS_SER_NO
				 , @ERROR_DESC	AS ERROR_DESC
		END
    </select>

    <update id="tit101ukrvServiceImpl.updateDetail" parameterType="Map">
		UPDATE L_TID100T
        SET KEY_VALUE          = #{ KEY_VALUE }
				,OPR_FLAG           = #{ OPR_FLAG }
				,COMP_CODE          = = #{S_COMP_CODE}
				,DIV_CODE           = #{ DIV_CODE }
				,PASS_SER_NO        = #{ PASS_SER_NO }
				,SO_SER_NO          = #{ SO_SER_NO }
				,LC_SER_NO          = #{ LC_SER_NO }
				,BL_SER_NO          = #{ BL_SER_NO }
				,PROJECT_NO         = #{ PROJECT_NO }
				,NATION_INOUT       = #{ NATION_INOUT }
				,TRADE_TYPE         = #{ TRADE_TYPE }
				,INVOICE_NO         = #{ INVOICE_NO }
				,INVOICE_DATE       = #{ INVOICE_DATE }
				,APP_DATE           = #{ APP_DATE }
				,EP_DATE            = #{ EP_DATE }
				,EP_NO              = #{ EP_NO }
				,ED_DATE            = #{ ED_DATE }
				,ED_NO              = #{ ED_NO }
				,SHIP_FIN_DATE      = #{ SHIP_FIN_DATE }
				,DISCHGE_DATE       = #{ DISCHGE_DATE }
				,REPORTOR           = #{ REPORTOR }
				,VESSEL_NM          = #{ VESSEL_NM }
				,VESSEL_NATION_CODE = #{ VESSEL_NATION_CODE }
				,DEST_PORT          = #{ DEST_PORT }
				,DEST_PORT_NM       = #{ DEST_PORT_NM }
				,SHIP_PORT          = #{ SHIP_PORT }
				,SHIP_PORT_NM       = #{ SHIP_PORT_NM }
				,EXPORTER           = #{ EXPORTER }
				,IMPORTER           = #{ IMPORTER }
				,PAY_TERMS          = #{ PAY_TERMS }
				,PAY_METHODE        = #{ PAY_METHODE }
				,TERMS_PRICE        = #{ TERMS_PRICE }
				,PAY_DURING         = #{ PAY_DURING }
				,PASS_AMT           = #{ PASS_AMT }
				,PASS_AMT_UNIT      = #{ PASS_AMT_UNIT }
				,PASS_EXCHANGE_RATE = #{ PASS_EXCHANGE_RATE }
				,PASS_AMT_WON       = #{ PASS_AMT_WON }
				,CIF_AMT            = #{ CIF_AMT }
				,CIF_AMT_UNIT       = #{ CIF_AMT_UNIT }
				,CIF_EXCHANGE_RATE  = #{ CIF_EXCHANGE_RATE }
				,CIF_AMT_WON        = #{ CIF_AMT_WON }
				,GROSS_WEIGHT       = #{ GROSS_WEIGHT }
				,WEIGHT_UNIT        = #{ WEIGHT_UNIT }
				,TOT_PACKING_COUNT  = #{ TOT_PACKING_COUNT }
				,PACKING_TYPE       = #{ PACKING_TYPE }
				,EP_TYPE            = #{ EP_TYPE }
				,DEVICE_PLACE       = #{ DEVICE_PLACE }
				,DEVICE_NO          = #{ DEVICE_NO }
				,INSPECT_TYPE       = #{ INSPECT_TYPE }
				,FORM_TRANS         = #{ FORM_TRANS }
				,CUSTOMS            = #{ CUSTOMS }
				,EXAM_TXT           = #{ EXAM_TXT }
				,TARIFF_TAX         = #{ TARIFF_TAX }
				,VALUE_TAX          = #{ VALUE_TAX }
				,INCOME_TAX         = #{ INCOME_TAX }
				,INHA_TAX           = #{ INHA_TAX }
				,EDUC_TAX           = #{ EDUC_TAX }
				,TRAF_TAX           = #{ TRAF_TAX }
				,ARGRI_TAX          = #{ ARGRI_TAX }
				,INPUT_NO           = #{ INPUT_NO }
				,INPUT_DATE         = #{ INPUT_DATE }
				,OUTPUT_DATE        = #{ OUTPUT_DATE }
				,PAYMENT_DATE       = #{ PAYMENT_DATE }
				,DVRY_DATE          = #{ DVRY_DATE }
				,TAXBILL_NO         = #{ TAXBILL_NO }
				,TAXBILL_DATE       = #{ TAXBILL_DATE }
				,REMARKS1           = #{ REMARKS1 }
				,REMARKS2           = #{ REMARKS2 }
				,REMARKS3           = #{ REMARKS3 }
				,UPDATE_DB_USER     = #{S_USER_ID}
				,UPDATE_DB_TIME     = GETDATE()
				,TEMPC_01           = #{ TEMPC_01 }
				,TEMPC_02           = #{ TEMPC_02 }
				,TEMPC_03           = #{ TEMPC_03 }
				,TEMPN_01           = #{ TEMPN_01 }
				,TEMPN_02           = #{ TEMPN_02 }
				,TEMPN_03           = #{ TEMPN_03 }
				,INSERT_DB_USER     = #{S_USER_ID}
				,INSERT_DB_TIME     = GETDATE()
         WHERE COMP_CODE                = #{S_COMP_CODE}
           AND DIV_CODE                 = #{DIV_CODE}
           AND PASS_SER_NO             = #{PASS_SER_NO}
           AND OPR_FLAG             = #{OPR_FLAG}

    </update>


</mapper>