<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_biv361skrv_jwServiceImpl">

     <select id="s_biv361skrv_jwServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
				DECLARE @CompCode		NVARCHAR(08)			/* 법인코드		*/
			      , @UserId				NVARCHAR(100)			/* 사용자ID	*/
			      , @LangType			NVARCHAR(2)				/* 언어구분		*/
		          , @RefItem			NVARCHAR(01)
		          , @DateFormat			NVARCHAR(10)
		          , @INOUT_DATE_FR		NVARCHAR(8)				/* FR	*/
				  , @INOUT_DATE_TO		NVARCHAR(8)				/* TO	*/
				  , @DIV_CODE			NVARCHAR(20)			/* 사업장     */
			      , @ITEM_CODE          NVARCHAR(20)            /* (선택) 품목코드*/
                  , @ITEM_NAME          NVARCHAR(200)           /* (선택) 품목명*/
                  , @WH_CODE            NVARCHAR(08)            /* (선택) 창고코드*/
				  , @INOUT_PRSN         NVARCHAR(10)            /* 수불담당*/
				  , @ITEM_ACCOUNT       NVARCHAR(10)            /* 품목계정*/
				  , @LOT_NO      		NVARCHAR(20)            /* LOT*/

		    SET @CompCode = #{S_COMP_CODE}
		    SET @DIV_CODE = #{DIV_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}
			SET @INOUT_DATE_FR = #{INOUT_DATE_FR}
			SET @INOUT_DATE_TO = #{INOUT_DATE_TO}
			SET @ITEM_CODE       = #{ITEM_CODE} +'%'
			SET @ITEM_NAME       = #{ITEM_NAME} +'%'
			SET @WH_CODE         = #{WH_CODE}
			SET @INOUT_PRSN     = #{INOUT_PRSN}
			SET @ITEM_ACCOUNT   = #{ITEM_ACCOUNT}
			SET @LOT_NO     	   = #{LOT_NO}
		/*  명칭 조회 유형 설정 */

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID =  @UserId

	    SET @RefItem = ISNULL(@RefItem, '')
		SELECT  T.COMP_CODE
			   ,T.DIV_CODE
			   ,T.ITEM_CODE
			   ,T.ITEM_NAME
			   ,T.STOCK_UNIT
			   ,T.SPEC
			   ,T.INOUT_DATE
			   ,T.INOUT_TYPE
			   ,T.INOUT_CODE_TYPE
			   ,T.IN_Q
			   ,T.OUT_Q
			   ,T.RTN_Q
			   ,T.INOUT_CODE_TYPE_NM
			   ,T.INOUT_CODE_NAME
			   ,T.WH_CODE_CODE
			   ,T.WH_CODE_NAME
			   ,T.INOUT_PRSN
			   ,T.INOUT_NUM
			   ,T.INOUT_SEQ
			   ,T.LOT_NO
			   ,T.ORDER_NUM
			   ,T.INSERT_DB_TIME
			   ,T.MOVE_TYPE
			   ,T.INOUT_TYPE_DETAIL_NAME
			   ,T.ITEM_ACCOUNT
			   ,T.SORT_FLD
		FROM (	SELECT	 A.COMP_CODE
								,A.DIV_CODE
								,A.ITEM_CODE
								,B.ITEM_NAME
								,B.STOCK_UNIT
								,B.SPEC
								,A.INOUT_DATE
								,A.INOUT_TYPE
								,A.INOUT_CODE_TYPE
							  	,CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_Q ELSE 0 END								AS IN_Q
								,CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_Q ELSE 0 END								AS OUT_Q
								,CASE WHEN A.INOUT_TYPE = '3' THEN A.INOUT_Q ELSE 0 END								AS RTN_Q
								,M1.CODE_NAME AS INOUT_CODE_TYPE_NM
								,CASE WHEN A.INOUT_CODE_TYPE = '2' THEN M3.TREE_NAME
									  WHEN A.INOUT_CODE_TYPE = '3' THEN M4.TREE_NAME
									  ELSE M2.CUSTOM_NAME
								 END  AS INOUT_CODE_NAME
								,A.WH_CODE AS WH_CODE_CODE
								,M5.TREE_NAME AS WH_CODE_NAME
								,A.INOUT_PRSN
								,A.INOUT_NUM
								,A.INOUT_SEQ
								,A.LOT_NO
								--,A.ORDER_NUM
								, CASE WHEN A.CREATE_LOC = '3' AND A.INOUT_TYPE = '2' AND A.INOUT_TYPE_DETAIL  = '10'         --수불유형이 생산출고인 경우 ORDER_NUM 조회
											 THEN A.ORDER_NUM
										WHEN A.CREATE_LOC = '2' AND A.INOUT_TYPE_DETAIL = '95' AND A.INOUT_METH = '3'
											THEN X.REF_WKORD_NUM
										ELSE ''
								   END                                                                                           AS ORDER_NUM
								,CONVERT(VARCHAR(8), A.INSERT_DB_TIME, 112) AS INSERT_DB_TIME
								,A.MOVE_TYPE
								,M7.MOVE_TYPE_NAME AS INOUT_TYPE_DETAIL_NAME
								,B1.ITEM_ACCOUNT
								, CASE WHEN A.INOUT_TYPE = '1' THEN '1'
						                  WHEN A.INOUT_TYPE = '2' THEN '3'
						                  WHEN A.INOUT_TYPE = '3' THEN '2'
				                          ELSE ''
				                 END   AS SORT_FLD
						FROM BTR100T A  WITH (NOLOCK, INDEX(BTR100T_IDX11))
						INNER JOIN BPR100T B  WITH (NOLOCK)  ON A.COMP_CODE = B.COMP_CODE
															AND A.ITEM_CODE = B.ITEM_CODE
						INNER JOIN BPR200T B1  WITH (NOLOCK)  ON A.COMP_CODE = B1.COMP_CODE
															 AND A.DIV_CODE = B1.DIV_CODE
															 AND A.ITEM_CODE = B1.ITEM_CODE
						LEFT JOIN  BSA100T  M1 WITH (NOLOCK)  ON A.COMP_CODE = M1.COMP_CODE
															 AND M1.MAIN_CODE = 'B005'
															 AND A.INOUT_CODE_TYPE = M1.SUB_CODE
						LEFT JOIN  BCM100T  M2 WITH (NOLOCK)  ON A.COMP_CODE = M2.COMP_CODE
															 AND A.INOUT_CODE = M2.CUSTOM_CODE
						LEFT  JOIN BSA220T   M3 WITH (NOLOCK) ON  A.COMP_CODE = M3.COMP_CODE
						                                    AND   A.DIV_CODE  = M3.TYPE_LEVEL
						                                    AND   A.INOUT_CODE   = M3.TREE_CODE
						LEFT  JOIN BSA230T   M4 WITH (NOLOCK) ON  A.COMP_CODE    =  M4.COMP_CODE
						                                    AND   A.DIV_CODE	 =  M4.TYPE_LEVEL
						                                    AND   A.INOUT_CODE   =  M4.TREE_CODE
						LEFT  JOIN BSA220T   M5 WITH (NOLOCK) ON  A.COMP_CODE = M5.COMP_CODE
						                                    AND   A.DIV_CODE  = M5.TYPE_LEVEL
						                                    AND   A.WH_CODE   = M5.TREE_CODE

						--INNER JOIN BTR100TV2 M7  WITH (NOLOCK) ON A.MOVE_TYPE = M7.MOVE_TYPE
						INNER JOIN
						(SELECT A.COMP_CODE, A.SUB_CODE + B.SUB_CODE + C.SUB_CODE AS MOVE_TYPE, C.CODE_NAME_VI AS MOVE_TYPE_NAME
								 , A.SUB_CODE AS CREATE_LOC, A.CODE_NAME AS CREATE_LOC_NAME
								 , B.SUB_CODE AS INOUT_TYPE, B.CODE_NAME AS INOUT_TYPE_NAME
								 , C.SUB_CODE AS INOUT_TYPE_DETAIL
								 , ISNULL(C.REF_CODE1, 'N') AS SALE_YN
							FROM              BSA100T  A WITH (NOLOCK)
								   INNER JOIN BSA100T  B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE                                 -- 수불타입
																	   AND B.MAIN_CODE   = 'B035'
																	   AND B.SUB_CODE   <![CDATA[<>]]> '$'
																	   AND B.USE_YN      = 'Y'
								   INNER JOIN BSA100T  C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
																	   AND C.SUB_CODE   <![CDATA[<>]]> '$'
																	   AND C.USE_YN      = 'Y'
																	   AND ((C.MAIN_CODE = 'S006' AND A.SUB_CODE IN ('1', '4', '5') AND B.SUB_CODE = '1')
																		OR  (C.MAIN_CODE = 'S007' AND A.SUB_CODE IN ('1', '4', '5') AND B.SUB_CODE = '2')
																		OR  (C.MAIN_CODE = 'S008' AND A.SUB_CODE IN ('1', '4', '5') AND B.SUB_CODE = '3')
																		OR  (C.MAIN_CODE = 'M103' AND A.SUB_CODE IN ('2', '3', '6') AND B.SUB_CODE = '1')
																		OR  (C.MAIN_CODE = 'M104' AND A.SUB_CODE IN ('2', '3', '6') AND B.SUB_CODE = '2')
																		OR  (C.MAIN_CODE = 'M104' AND A.SUB_CODE IN ('3'          ) AND B.SUB_CODE = '3'))
							WHERE  A.MAIN_CODE = 'B031'
							AND    A.SUB_CODE <![CDATA[<>]]> '$'
							AND    A.USE_YN    = 'Y' ) M7 ON A.MOVE_TYPE = M7.MOVE_TYPE
						LEFT JOIN PMP350T X WITH (NOLOCK) ON X.COMP_CODE = A.COMP_CODE
														 AND X.DIV_CODE	 = A.DIV_CODE
														 AND X.INOUT_NUM IN( A.INOUT_NUM, A.BASIS_NUM)
														 AND X.INOUT_SEQ = A.INOUT_SEQ
						WHERE	A.COMP_CODE 	= @CompCode
						    AND 	A.DIV_CODE		= @DIV_CODE
						<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
							 AND A.INOUT_DATE	>= @INOUT_DATE_FR
						</if>
						<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
						    AND A.INOUT_DATE	<![CDATA[<=]]> @INOUT_DATE_TO
						</if>
						<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
				    		AND    A.ITEM_CODE    LIKE @ITEM_CODE + '%'
						  </if>
						  <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
						    AND  (
						           (B.ITEM_NAME   LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '0')
						    OR    (B.ITEM_NAME1  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '1')
						    OR    (B.ITEM_NAME2  LIKE '%' + @ITEM_NAME + '%' AND  @RefItem         = '2')
						          )
						  </if>
						  <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
						    AND    A.WH_CODE         = @WH_CODE
						  </if>
						  <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
						    AND    A.INOUT_PRSN     = @INOUT_PRSN
						  </if>
						    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
						    AND    B1.ITEM_ACCOUNT     = @ITEM_ACCOUNT
						  </if>
						    <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
						    AND    A.LOT_NO     = @LOT_NO
						  </if>
				)T
				ORDER BY T.COMP_CODE, T.ITEM_ACCOUNT,T.DIV_CODE
							 , T.ITEM_CODE, T.WH_CODE_CODE, T.SORT_FLD
							 , T.INOUT_DATE, T.INOUT_NUM, T.INOUT_SEQ
         END
     </select>
</mapper>