<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_agj270skr_jwServiceImpl">

    <select id="s_agj270skr_jwServiceImpl.selectList" parameterType="Map" resultType="rMap">

        <if test="SLIP_DIVI == &quot;1&quot;">
            --s_agj270skr.selectList[회계] :  Query01
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

            SELECT ROW_NUMBER() OVER(ORDER BY A.AC_DATE, A.SLIP_NUM)        AS SEQ
                 , CAST(0 AS BIT) CHK
                 , A.AC_DATE
                 , A.SLIP_NUM
                 , A.EX_DATE
                 , A.EX_NUM
                 , SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0)) DR_AMT_I
                 , SUM(ISNULL(CASE A.DR_CR WHEN '2' THEN A.AMT_I ELSE 0.0 END, 0)) CR_AMT_I
                 , A.INPUT_PATH
                 , M1.CODE_NAME AS CHARGE_NAME
                 , A.INPUT_DATE
                 , M2.CODE_NAME AS AP_CHARGE_NAME
                 , A.AP_DATE
                 , A.INPUT_DIVI

            FROM              AGJ210T A  WITH (NOLOCK)
                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                      AND M1.MAIN_CODE = 'A009'
                                                      AND M1.SUB_CODE  = A.CHARGE_CODE
                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                                      AND M2.MAIN_CODE = 'A009'
                                                      AND M2.SUB_CODE  = A.AP_CHARGE_CODE
            WHERE  A.COMP_CODE = #{S_COMP_CODE}
            AND    A.AC_DATE &gt;= #{FR_AC_DATE}
            AND    A.AC_DATE &lt;= #{TO_AC_DATE}
            AND    (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')

            <if test="@foren.Ognl@isNotEmpty(FR_IN_DATE)">
                AND   INPUT_DATE &gt;= #{FR_IN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_IN_DATE)">
                AND   INPUT_DATE &lt;= #{TO_IN_DATE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_SLIP_NUM)">
                AND   SLIP_NUM &gt;= #{FR_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_SLIP_NUM)">
                AND   SLIP_NUM &lt;= #{TO_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE)">
                 AND IN_DEPT_CODE LIKE #{IN_DEPT_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
                AND   CHARGE_CODE = #{PRSN_CODE}
            </if>


            <if test="@foren.Ognl@isNotEmpty(FR_EX_NUM)">
                AND   EX_NUM &gt;= #{FR_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_EX_NUM)">
                AND   EX_NUM &lt;= #{TO_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND     DIV_CODE IN
                    <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                     #{item}
                    </foreach>
            </if>
            <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
                AND     INPUT_PATH = #{INPUT_PATH}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &gt;= #{FR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &lt;= #{TO_AMT_I}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
                AND   AND ISNULL(FOR_AMT_I,0.0) &gt;= #{FR_FOR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
                AND ISNULL(FOR_AMT_I,0.0) &lt;= #{TO_FOR_AMT_I}
            </if>

            <if test="SLIP_DIVI == &quot;2&quot;">
                <if test="@foren.Ognl@isNotEmpty(AP_STS)">
                    AND AP_STS =#{AP_STS}
                </if>
            </if>


            GROUP BY A.EX_DATE,     A.EX_NUM,  A.AC_DATE,  A.SLIP_NUM, A.INPUT_PATH
                   , M1.CODE_NAME, A.INPUT_DATE, M2.CODE_NAME, A.AP_DATE, A.INPUT_DIVI
            ORDER BY A.AC_DATE, A.SLIP_NUM

        </if>
        <if test="SLIP_DIVI == &quot;2&quot;">
            --s_agj270skr.selectList[결의] :  Query02
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

            SELECT ROW_NUMBER() OVER(ORDER BY A.AC_DATE, A.SLIP_NUM)        AS SEQ
                 , CAST(0 AS BIT) CHK
                 , A.EX_DATE  AS AC_DATE
                 , A.EX_NUM   AS SLIP_NUM
                 , A.AC_DATE  AS EX_DATE
                 , A.SLIP_NUM AS EX_NUM
                 , SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0)) DR_AMT_I
                 , SUM(ISNULL(CASE A.DR_CR WHEN '2' THEN A.AMT_I ELSE 0.0 END, 0)) CR_AMT_I
                 , A.INPUT_PATH
                 , M1.CODE_NAME AS CHARGE_NAME
                 , A.INPUT_DATE
                 , M2.CODE_NAME AS AP_CHARGE_NAME
                 , A.AP_DATE
                 , A.INPUT_DIVI

            FROM              AGJ110T A  WITH (NOLOCK)
                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                      AND M1.MAIN_CODE = 'A009'
                                                      AND M1.SUB_CODE  = A.CHARGE_CODE
                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                                      AND M2.MAIN_CODE = 'A009'
                                                      AND M2.SUB_CODE  = A.AP_CHARGE_CODE
            WHERE  A.COMP_CODE = #{S_COMP_CODE}
            AND    A.EX_DATE &gt;= #{FR_AC_DATE}
            AND    A.EX_DATE &lt;= #{TO_AC_DATE}
            AND    (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')


            <if test="@foren.Ognl@isNotEmpty(FR_IN_DATE)">
                AND   INPUT_DATE &gt;= #{FR_IN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_IN_DATE)">
                AND   INPUT_DATE &lt;= #{TO_IN_DATE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_SLIP_NUM)">
                AND   SLIP_NUM &gt;= #{FR_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_SLIP_NUM)">
                AND   SLIP_NUM &lt;= #{TO_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE)">
                 AND IN_DEPT_CODE LIKE #{IN_DEPT_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
                AND   CHARGE_CODE = #{PRSN_CODE}
            </if>


            <if test="@foren.Ognl@isNotEmpty(FR_EX_NUM)">
                AND   EX_NUM &gt;= #{FR_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_EX_NUM)">
                AND   EX_NUM &lt;= #{TO_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND     DIV_CODE IN
                    <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                     #{item}
                    </foreach>
            </if>
            <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
                AND     INPUT_PATH = #{INPUT_PATH}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &gt;= #{FR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &lt;= #{TO_AMT_I}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
                AND   AND ISNULL(FOR_AMT_I,0.0) &gt;= #{FR_FOR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
                AND ISNULL(FOR_AMT_I,0.0) &lt;= #{TO_FOR_AMT_I}
            </if>

            <if test="SLIP_DIVI == &quot;2&quot;">
                <if test="@foren.Ognl@isNotEmpty(AP_STS)">
                    AND AP_STS =#{AP_STS}
                </if>
            </if>


            GROUP BY A.EX_DATE,     A.EX_NUM,  A.AC_DATE,  A.SLIP_NUM, A.INPUT_PATH
                   , M1.CODE_NAME, A.INPUT_DATE, M2.CODE_NAME, A.AP_DATE, A.INPUT_DIVI
            ORDER BY A.AC_DATE, A.SLIP_NUM

        </if>
    </select>

    <select id="s_agj270skr_jwServiceImpl.selectList2" parameterType="Map" resultType="rMap">
        --s_agj270skr.selectList2 :  Query01
        <if test="SLIP_DIVI == &quot;2&quot;">
            SELECT EX_SEQ
        </if>
        <if test="SLIP_DIVI != &quot;2&quot;">
            SELECT SLIP_SEQ EX_SEQ
        </if>

              , (SELECT CODE_NAME
                   FROM BSA100T  WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND MAIN_CODE = 'A001'
                    AND SUB_CODE  = A.DR_CR) SLIP_DIVI_NM
              , ACCNT
              , (SELECT ACCNT_NAME
                   FROM ABA400T  WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND ACCNT     = A.ACCNT) ACCNT_NAME
              , AMT_I
              , ISNULL(MONEY_UNIT,'') MONEY_UNIT
              , EXCHG_RATE_O
              , FOR_AMT_I
              , ISNULL(REMARK,'') REMARK
              , DEPT_NAME
              , (SELECT DIV_NAME
                   FROM BOR120T   WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND DIV_CODE  = A.DIV_CODE) DIV_NAME
              , (SELECT CODE_NAME
                   FROM BSA100T   WITH (NOLOCK)
                  WHERE MAIN_CODE = 'A022'
                    AND SUB_CODE  = A.PROOF_KIND
                    AND COMP_CODE = A.COMP_CODE) PROOF_KIND_NM
              , ISNULL(POSTIT_YN,'N') POSTIT_YN

              , ISNULL(AC_CODE1,'') AC_CODE1
              , ISNULL(AC_CODE2,'') AC_CODE2
              , ISNULL(AC_CODE3,'') AC_CODE3
              , ISNULL(AC_CODE4,'') AC_CODE4
              , ISNULL(AC_CODE5,'') AC_CODE5
              , ISNULL(AC_CODE6,'') AC_CODE6
              , ISNULL(AC_DATA1,'') AC_DATA1
              , ISNULL(AC_DATA2,'') AC_DATA2
              , ISNULL(AC_DATA3,'') AC_DATA3
              , ISNULL(AC_DATA4,'') AC_DATA4
              , ISNULL(AC_DATA5,'') AC_DATA5
              , ISNULL(AC_DATA6,'') AC_DATA6
              , ISNULL(AC_DATA_NAME1,'') AC_DATA_NAME1
              , ISNULL(AC_DATA_NAME2,'') AC_DATA_NAME2
              , ISNULL(AC_DATA_NAME3,'') AC_DATA_NAME3
              , ISNULL(AC_DATA_NAME4,'') AC_DATA_NAME4
              , ISNULL(AC_DATA_NAME5,'') AC_DATA_NAME5
              , ISNULL(AC_DATA_NAME6,'') AC_DATA_NAME6

            , ISNULL(N1.AC_NAME,'') AC_NAME1
            , ISNULL(N2.AC_NAME,'') AC_NAME2
            , ISNULL(N3.AC_NAME,'') AC_NAME3
            , ISNULL(N4.AC_NAME,'') AC_NAME4
            , ISNULL(N5.AC_NAME,'') AC_NAME5
            , ISNULL(N6.AC_NAME,'') AC_NAME6

            , ISNULL(N1.DT_TYPE,0) AC_TYPE1
            , ISNULL(N2.DT_TYPE,0) AC_TYPE2
            , ISNULL(N3.DT_TYPE,0) AC_TYPE3
            , ISNULL(N4.DT_TYPE,0) AC_TYPE4
            , ISNULL(N5.DT_TYPE,0) AC_TYPE5
            , ISNULL(N6.DT_TYPE,0) AC_TYPE6

            , ISNULL(N1.DT_FMT,'0') AC_FORMAT1
            , ISNULL(N2.DT_FMT,'0') AC_FORMAT2
            , ISNULL(N3.DT_FMT,'0') AC_FORMAT3
            , ISNULL(N4.DT_FMT,'0') AC_FORMAT4
            , ISNULL(N5.DT_FMT,'0') AC_FORMAT5
            , ISNULL(N6.DT_FMT,'0') AC_FORMAT6

            , ISNULL(N1.DT_POPUP,'0')        AC_POPUP1
            , ISNULL(N2.DT_POPUP,'0')        AC_POPUP2
            , ISNULL(N3.DT_POPUP,'0')        AC_POPUP3
            , ISNULL(N4.DT_POPUP,'0')        AC_POPUP4
            , ISNULL(N5.DT_POPUP,'0')        AC_POPUP5
            , ISNULL(N6.DT_POPUP,'0')        AC_POPUP6

        <if test="SLIP_DIVI == &quot;2&quot;">
              FROM        AGJ110T      A  WITH (NOLOCK)
                LEFT JOIN ABA200T   AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
                                                        AND N1.AC_CD     = A.AC_CODE1
                LEFT JOIN ABA200T   AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
                                                        AND N2.AC_CD     = A.AC_CODE2
                LEFT JOIN ABA200T   AS N3 WITH (NOLOCK) ON  N3.COMP_CODE = A.COMP_CODE
                                                        AND N3.AC_CD     = A.AC_CODE3
                LEFT JOIN ABA200T   AS N4 WITH (NOLOCK) ON  N4.COMP_CODE = A.COMP_CODE
                                                        AND N4.AC_CD     = A.AC_CODE4
                LEFT JOIN ABA200T   AS N5 WITH (NOLOCK) ON  N5.COMP_CODE = A.COMP_CODE
                                                        AND N5.AC_CD     = A.AC_CODE5
                LEFT JOIN ABA200T   AS N6 WITH (NOLOCK) ON  N6.COMP_CODE = A.COMP_CODE
                                                        AND N6.AC_CD     = A.AC_CODE6


             WHERE A.COMP_CODE  = #{S_COMP_CODE}
               AND A.EX_DATE    = #{AC_DATE}
               AND A.EX_NUM     = #{SLIP_NUM}

        </if>
        <if test="SLIP_DIVI != &quot;2&quot;">
              FROM        AGJ210T      A  WITH (NOLOCK)
                LEFT JOIN ABA200T   AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
                                                        AND N1.AC_CD     = A.AC_CODE1
                LEFT JOIN ABA200T   AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
                                                        AND N2.AC_CD     = A.AC_CODE2
                LEFT JOIN ABA200T   AS N3 WITH (NOLOCK) ON  N3.COMP_CODE = A.COMP_CODE
                                                        AND N3.AC_CD     = A.AC_CODE3
                LEFT JOIN ABA200T   AS N4 WITH (NOLOCK) ON  N4.COMP_CODE = A.COMP_CODE
                                                        AND N4.AC_CD     = A.AC_CODE4
                LEFT JOIN ABA200T   AS N5 WITH (NOLOCK) ON  N5.COMP_CODE = A.COMP_CODE
                                                        AND N5.AC_CD     = A.AC_CODE5
                LEFT JOIN ABA200T   AS N6 WITH (NOLOCK) ON  N6.COMP_CODE = A.COMP_CODE
                                                        AND N6.AC_CD     = A.AC_CODE6
             WHERE A.COMP_CODE  = #{S_COMP_CODE}
               AND A.AC_DATE    = #{AC_DATE}
               AND A.SLIP_NUM   = #{SLIP_NUM}

        </if>
        <if test="@foren.Ognl@isNotEmpty(AP_STS)">
            <if test="SLIP_DIVI == &quot;2&quot;">
                AND A.AP_STS    = #{AP_STS}
            </if>
        </if>
        <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
            AND A.INPUT_PATH = #{INPUT_PATH}
        </if>
            AND ISNULL(A.MOD_DIVI,'') = ''
        <if test="SLIP_DIVI == &quot;1&quot;">
             ORDER BY A.SLIP_SEQ
        </if>
        <if test="SLIP_DIVI != &quot;1&quot;">
             ORDER BY A.EX_SEQ
        </if>
    </select>


    <insert id="s_agj270skr_jwServiceImpl.insertLogDetail" parameterType="Map">
        --s_agj270skr.insertLogDetail :  Query01
        INSERT INTO L_AGJ270T
         ( KEY_VALUE        , COMP_CODE         , AC_DATE               , SLIP_NUM
         , UPDATE_DB_USER   , UPDATE_DB_TIME    , INSERT_DB_USER        , INSERT_DB_TIME
         )
    VALUES
        (  #{KEY_VALUE}     , #{S_COMP_CODE}    , #{AC_DATE}            , #{SLIP_NUM}
         , #{S_USER_ID}     , GETDATE()         , #{S_USER_ID}          , GETDATE()
         )
    </insert>


    <select id="s_agj270skr_jwServiceImpl.selectPrimaryDataList" parameterType="Map" resultType="rMap" >


    /* 전표출력*/

        DECLARE   @SLIP_DIVI   NVARCHAR(01)                 -- 전표구분

        SET       @SLIP_DIVI = #{SLIP_DIVI}   --1: 회계 , 2: 결의

        --UArpt01Krv.Cagj270SKR[fnagj270r] Query12
        BEGIN
           SET NOCOUNT ON
           SET ARITHABORT ON

           SELECT T.AUTO_NUM                                                     AS AUTO_NUM
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)  AS PAGE
                , CONVERT(NUMERIC(5,0),ROUND((T.EX_SEQ-1) / 5, 0, 1) + 1)        AS PAGE_SEQ
                , X.PAGE_SEQ                                                     AS MAX_PAGE_SEQ    --PAGE별 PAGE_SEQ의 MAX값
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7) + RIGHT('00000' + CONVERT(NVARCHAR,CONVERT(NUMERIC(5,0),ROUND((T.EX_SEQ-1) / 5, 0, 1) + 1)),5) AS PAGE_DIVI
                , T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)  AS PAGE_KEY        -- PAGE 별 KEY값 (그룹핑용)
                , 1                                                              AS PAGE_TOT
                , T.IN_DIV_NAME                                                  AS IN_DIV_NAME
                , T.IN_DEPT_CODE                                                 AS IN_DEPT_CODE
                , T.IN_DEPT_NAME                                                 AS IN_DEPT_NAME
                , T.CHARGE_NAME                                                  AS CHARGE_NAME
                , uniLITE.fnGetUserDate(T.COMP_CODE, T.EX_DATE)                  AS EX_DATES
                , T.EX_NUM                                                       AS EX_NUM
                , T.EX_SEQ                                                       AS EX_SEQ
                , uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATE)                  AS AC_DATES
                , T.SLIP_NUM                                                     AS SLIP_NUM
                , T.SLIP_SEQ                                                     AS SLIP_SEQ
                , ISNULL(T.ACCNT, '')                                            AS ACCNT
                , M1.ACCNT_NAME                                                  AS ACCNT_NAME
                  -- 1
                , ISNULL(T.AC_CODE1, '')                                         AS AC_CODE1
                , CASE B1.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA1)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA1),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE1 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA1,'')
                                        END
                   END                                                           AS AC_DATA1
                , ISNULL(T.AC_DATA_NAME1, '')                                    AS AC_DATA_NAME1
                  -- 2
                , ISNULL(T.AC_CODE2, '')                                         AS AC_CODE2
                , CASE B2.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA2)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA2),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE2 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA2,'')
                                        END
                   END                                                           AS AC_DATA2
                , ISNULL(T.AC_DATA_NAME2, '')                                    AS AC_DATA_NAME2
                  -- 3
                , ISNULL(T.AC_CODE3, '')                                         AS AC_CODE3
                , CASE B3.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA3)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA3),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE3 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA3,'')
                                        END
                   END                                                           AS AC_DATA3
                , ISNULL(T.AC_DATA_NAME3, '')                                    AS AC_DATA_NAME3
                  -- 4
                , ISNULL(T.AC_CODE4, '')                                         AS AC_CODE4
                , CASE B4.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA4)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA4),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE4 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA4,'')
                                        END
                   END                                                           AS AC_DATA4
                , ISNULL(T.AC_DATA_NAME4, '')                                    AS AC_DATA_NAME4
                  -- 5
                , ISNULL(T.AC_CODE5, '')                                         AS AC_CODE5
                , CASE B5.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA5)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA5),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE5 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA5,'')
                                        END
                   END                                                           AS AC_DATA5
                , ISNULL(T.AC_DATA_NAME5, '')                                    AS AC_DATA_NAME5
                  -- 6
                , ISNULL(T.AC_CODE6, '')                                         AS AC_CODE6
                , CASE B6.DT_TYPE WHEN 'D' THEN uniLITE.fnGetUserDate(T.COMP_CODE, T.AC_DATA6)
                                  WHEN 'N' THEN REPLACE(CONVERT(NVARCHAR,CONVERT(MONEY, T.AC_DATA6),112),'.00','')
                                  ELSE CASE WHEN T.AC_CODE6 = 'G5' AND ISNULL(M3.REF_CODE1, '') != 'N' THEN uniLITE.fnCipherDecrypt(M2.CRDT_FULL_NUM, 'C')
                                            ELSE ISNULL(T.AC_DATA6,'')
                                        END
                   END                                                           AS AC_DATA6
                , ISNULL(T.AC_DATA_NAME6, '')                                    AS AC_DATA_NAME6
                  --
                , ISNULL(T.DEPT_NAME, '')                                        AS DEPT_NAME
                , ISNULL(T.DIV_NAME, '')                                         AS DIV_NAME
                , T.DR_CR                                                        AS DR_CR
                , CASE T.DR_CR WHEN '1' THEN T.AMT_I     ELSE 0.0 END            AS DR_AMT_I
                , CASE T.DR_CR WHEN '2' THEN T.AMT_I     ELSE 0.0 END            AS CR_AMT_I
                , CASE T.DR_CR WHEN '1' THEN T.FOR_AMT_I ELSE 0.0 END            AS FOR_DR_AMT_I
                , CASE T.DR_CR WHEN '2' THEN T.FOR_AMT_I ELSE 0.0 END            AS FOR_CR_AMT_I
                , T.REMARK                                                       AS REMARK
                , T.MONEY_UNIT                                                   AS MONEY_UNIT
                , T.SLIP_DIVI                                                    AS SLIP_DIVI
                , T.COMPANY_NUM                                                  AS COMPANY_NUM
                , T.EXCHG_RATE_O                                                 AS EXCHG_RATE_O
                , T.PROOF_KIND                                                   AS PROOF_KIND
                , T.EB_YN                                                        AS EB_YN
                , T.EB_YN_NAME  + CASE WHEN ISNULL(T.EB_YN_NAME, '') = '' THEN '' ELSE ' : ' END + ISNULL(M6.CODE_NAME, '')                 AS EB_YN_NAME
                , T.INPUT_PATH_NM                                                AS INPUT_PATH_NM
             FROM (
                   SELECT A.COMP_CODE                                          AS COMP_CODE
                        , A.AUTO_NUM                                           AS AUTO_NUM
                        , M1.DIV_NAME                                          AS IN_DIV_NAME
                        , A.IN_DEPT_CODE                                       AS IN_DEPT_CODE
                        , A.IN_DEPT_NAME                                       AS IN_DEPT_NAME
                        , M4.CODE_NAME                                         AS CHARGE_NAME
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.AC_DATE  ELSE A.EX_DATE  END   AS EX_DATE
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.SLIP_NUM ELSE A.EX_NUM   END   AS EX_NUM
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.SLIP_SEQ ELSE A.EX_SEQ   END   AS EX_SEQ
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_DATE  ELSE A.AC_DATE  END   AS AC_DATE
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_NUM   ELSE A.SLIP_NUM END   AS SLIP_NUM
                        , CASE WHEN @SLIP_DIVI = '1' THEN A.EX_SEQ   ELSE A.SLIP_SEQ END   AS SLIP_SEQ
                        , A.ACCNT                                              AS ACCNT
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE1
                           END                                                 AS AC_CODE1
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA1
                           END                                                 AS AC_DATA1
                        , CASE WHEN A.AC_DATA1 = ''  AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME1
                           END                                                 AS AC_DATA_NAME1
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE2
                           END                                                 AS AC_CODE2
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA2
                           END                                                 AS AC_DATA2
                        , CASE WHEN A.AC_DATA1 != '' AND A.AC_DATA2 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME2
                           END                                                 AS AC_DATA_NAME2
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE3
                           END                                                 AS AC_CODE3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA3
                           END                                                 AS AC_DATA3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME3
                           END                                                 AS AC_DATA_NAME3
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE4
                           END                                                 AS AC_CODE4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA4
                           END                                                 AS AC_DATA4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME4
                           END                                                 AS AC_DATA_NAME4
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE5
                           END                                                 AS AC_CODE5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA5
                           END                                                 AS AC_DATA5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME5
                           END                                                 AS AC_DATA_NAME5
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN 'A4'
                                    ELSE A.AC_CODE6
                           END                                                 AS AC_CODE6
                        , CASE WHEN A.AC_DATA1 != '' AND  A.AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_CODE,'')
                                    ELSE A.AC_DATA6
                           END                                                 AS AC_DATA6
                        , CASE WHEN A.AC_DATA1 != '' AND  A. AC_DATA2 != ''
                                                     AND  A.AC_DATA3 != ''
                                                     AND  A.AC_DATA4 != ''
                                                     AND  A.AC_DATA5 != ''
                                                     AND  A.AC_DATA6 = ''
                                                     AND (A.AC_CODE1 != 'A4'
                                                     AND  A.AC_CODE2 != 'A4'
                                                     AND  A.AC_CODE3 != 'A4'
                                                     AND  A.AC_CODE4 != 'A4'
                                                     AND  A.AC_CODE5 != 'A4'
                                                     AND  A.AC_CODE6 != 'A4')
                                    THEN ISNULL(A.CUSTOM_NAME,'')
                                    ELSE A.AC_DATA_NAME6
                           END                                                 AS AC_DATA_NAME6
                        , M3.TREE_NAME                                         AS DEPT_NAME
                        , M2.DIV_NAME                                          AS DIV_NAME
                        , A.DR_CR                                              AS DR_CR
                        , A.AMT_I                                              AS AMT_I
                        , A.FOR_AMT_I                                          AS FOR_AMT_I
                        , A.REMARK                                             AS REMARK
                        , CASE WHEN ISNULL(M5.REF_CODE1, '') = 'Y' THEN NULL
                               ELSE ISNULL(A.MONEY_UNIT, 'KRW')
                           END                                                 AS MONEY_UNIT
                        , A.SLIP_DIVI                                          AS SLIP_DIVI
                        , CASE WHEN A.SPEC_DIVI IN ('F1', 'F2') THEN ISNULL(B.COMPANY_NUM, '')
                               ELSE ''
                           END                                                 AS COMPANY_NUM
                        , A.EXCHG_RATE_O                                       AS EXCHG_RATE_O
                        , CASE WHEN A.SPEC_DIVI IN ('F1', 'F2') THEN ISNULL(M6.CODE_NAME, '')
                               ELSE ''
                           END                                                 AS PROOF_KIND
                        , CASE WHEN A.AC_CODE1 = 'I7' THEN A.AC_DATA1
                               WHEN A.AC_CODE2 = 'I7' THEN A.AC_DATA2
                               WHEN A.AC_CODE3 = 'I7' THEN A.AC_DATA3
                               WHEN A.AC_CODE4 = 'I7' THEN A.AC_DATA4
                               WHEN A.AC_CODE5 = 'I7' THEN A.AC_DATA5
                               WHEN A.AC_CODE6 = 'I7' THEN A.AC_DATA6
                               ELSE ''
                           END                                                 AS EB_YN
                        , CASE WHEN A.AC_CODE1 = 'I7' THEN A.AC_DATA_NAME1
                               WHEN A.AC_CODE2 = 'I7' THEN A.AC_DATA_NAME2
                               WHEN A.AC_CODE3 = 'I7' THEN A.AC_DATA_NAME3
                               WHEN A.AC_CODE4 = 'I7' THEN A.AC_DATA_NAME4
                               WHEN A.AC_CODE5 = 'I7' THEN A.AC_DATA_NAME5
                               WHEN A.AC_CODE6 = 'I7' THEN A.AC_DATA_NAME6
                               ELSE ''
                           END                                                 AS EB_YN_NAME
                        , ISNULL(M7.CODE_NAME, '')                             AS INPUT_PATH_NM
                        , A.REASON_CODE
        --회계전표
        <if test="SLIP_DIVI == &quot;1&quot;">

                     FROM  (SELECT * FROM AGJ210T   WITH (NOLOCK)
                             WHERE COMP_CODE = #{S_COMP_CODE}
                             AND AC_DATE + CONVERT(nvarchar, SLIP_NUM) IN
                             	<if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                	 (${AC_DATE})
                                </if>
                             AND (MOD_DIVI IS NULL OR MOD_DIVI = '')) A


                          LEFT JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN BOR120T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                                              AND M1.DIV_CODE   = A.IN_DIV_CODE
                          LEFT JOIN BOR120T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                                              AND M2.DIV_CODE   = A.DIV_CODE
                          LEFT JOIN BSA210T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = A.COMP_CODE
                                                              AND M3.TREE_CODE  = A.DEPT_CODE
                          LEFT JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = A.COMP_CODE
                                                              AND M4.MAIN_CODE  = 'A009'
                                                              AND M4.SUB_CODE   = A.CHARGE_CODE
                          LEFT JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = A.COMP_CODE
                                                              AND M5.MAIN_CODE  = 'B004'
                                                              AND M5.SUB_CODE   = A.MONEY_UNIT
                          LEFT JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = A.COMP_CODE
                                                              AND M6.MAIN_CODE  = 'A022'
                                                              AND M6.SUB_CODE   = A.PROOF_KIND
                          LEFT JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE  = A.COMP_CODE
                                                              AND M7.MAIN_CODE  = 'A011'
                                                              AND M7.SUB_CODE   = A.INPUT_PATH
                    WHERE A.COMP_CODE          = #{S_COMP_CODE}
                      AND ISNULL(A.CASH_NUM,0) = 0

        </if>
        <if test="SLIP_DIVI == &quot;2&quot;">
        --결의전표
                     FROM  (SELECT * FROM AGJ110T   WITH (NOLOCK)
                             WHERE COMP_CODE = #{S_COMP_CODE}
                             AND EX_DATE + CONVERT(nvarchar, EX_NUM) IN
                                <if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                	 (${AC_DATE})
                                </if>
                             AND (MOD_DIVI IS NULL OR MOD_DIVI = '')) A

                          LEFT JOIN BCM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                          LEFT JOIN BOR120T   M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
                                                              AND M1.DIV_CODE   = A.IN_DIV_CODE
                          LEFT JOIN BOR120T   M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
                                                              AND M2.DIV_CODE   = A.DIV_CODE
                          LEFT JOIN BSA210T   M3 WITH (NOLOCK) ON M3.COMP_CODE  = A.COMP_CODE
                                                              AND M3.TREE_CODE  = A.DEPT_CODE
                          LEFT JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE  = A.COMP_CODE
                                                              AND M4.MAIN_CODE  = 'A009'
                                                              AND M4.SUB_CODE   = A.CHARGE_CODE
                          LEFT JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE  = A.COMP_CODE
                                                              AND M5.MAIN_CODE  = 'B004'
                                                              AND M5.SUB_CODE   = A.MONEY_UNIT
                          LEFT JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE  = A.COMP_CODE
                                                              AND M6.MAIN_CODE  = 'A022'
                                                              AND M6.SUB_CODE   = A.PROOF_KIND
                          LEFT JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE  = A.COMP_CODE
                                                              AND M7.MAIN_CODE  = 'A011'
                                                              AND M7.SUB_CODE   = A.INPUT_PATH
                    WHERE A.COMP_CODE          = #{S_COMP_CODE}
                      AND ISNULL(A.CASH_NUM,0) = 0
        </if>

                 ) T
                   LEFT JOIN ABA200T B1 WITH (NOLOCK) ON B1.COMP_CODE = T.COMP_CODE
                                                     AND B1.AC_CD     = T.AC_CODE1
                   LEFT JOIN ABA200T B2 WITH (NOLOCK) ON B2.COMP_CODE = T.COMP_CODE
                                                     AND B2.AC_CD     = T.AC_CODE2
                   LEFT JOIN ABA200T B3 WITH (NOLOCK) ON B3.COMP_CODE = T.COMP_CODE
                                                     AND B3.AC_CD     = T.AC_CODE3
                   LEFT JOIN ABA200T B4 WITH (NOLOCK) ON B4.COMP_CODE = T.COMP_CODE
                                                     AND B4.AC_CD     = T.AC_CODE4
                   LEFT JOIN ABA200T B5 WITH (NOLOCK) ON B5.COMP_CODE = T.COMP_CODE
                                                     AND B5.AC_CD     = T.AC_CODE5
                   LEFT JOIN ABA200T B6 WITH (NOLOCK) ON B6.COMP_CODE = T.COMP_CODE
                                                     AND B6.AC_CD     = T.AC_CODE6
                   LEFT JOIN ABA400T M1 WITH (NOLOCK) ON M1.COMP_CODE = T.COMP_CODE
                                                     AND M1.ACCNT     = T.ACCNT
                   LEFT JOIN ABA500T M2 WITH (NOLOCK) ON M2.COMP_CODE = T.COMP_CODE
                                                     AND M2.CRDT_NUM  = CASE WHEN T.AC_CODE1 = 'G5' THEN T.AC_DATA1
                                                                             WHEN T.AC_CODE2 = 'G5' THEN T.AC_DATA2
                                                                             WHEN T.AC_CODE3 = 'G5' THEN T.AC_DATA3
                                                                             WHEN T.AC_CODE4 = 'G5' THEN T.AC_DATA4
                                                                             WHEN T.AC_CODE5 = 'G5' THEN T.AC_DATA5
                                                                             WHEN T.AC_CODE6 = 'G5' THEN T.AC_DATA6
                                                                             ELSE ''
                                                                        END
                   LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE = T.COMP_CODE
                                                     AND M3.MAIN_CODE = N'A165'
                                                     AND M3.SUB_CODE  = N'41'
                   <if test="SLIP_DIVI == &quot;1&quot;">
                   LEFT JOIN (
                                SELECT A.COMP_CODE
                                     , A.AC_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, A.SLIP_NUM), 7)      AS PAGE
                                     , MAX(CONVERT(NUMERIC(5,0),ROUND((A.SLIP_SEQ - 1) / 5, 0, 1) + 1)) AS PAGE_SEQ

                                 FROM AGJ210T A WITH(NOLOCK)
                                WHERE A.COMP_CODE          = #{S_COMP_CODE}
                                  AND ISNULL(A.CASH_NUM,0) = 0
                                  AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
                                  <if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                    AND A.AC_DATE + CONVERT(nvarchar, A.SLIP_NUM) IN
                                      (${AC_DATE})
                                  </if>

                                GROUP BY A.COMP_CODE, A.AC_DATE, A.SLIP_NUM
                            ) X ON X.COMP_CODE = T.COMP_CODE
                               AND X.PAGE      = T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)
                               LEFT JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE = T.COMP_CODE
                                                                 AND M6.MAIN_CODE = N'A070'
                                                                 AND M6.SUB_CODE  = T.REASON_CODE

                     </if>
                     <if test="SLIP_DIVI == &quot;2&quot;">
                     LEFT JOIN (
                                SELECT A.COMP_CODE
                                     , A.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, A.EX_NUM), 7)  AS PAGE
                                     , MAX(CONVERT(NUMERIC(5,0),ROUND((A.EX_SEQ - 1) / 5, 0, 1) + 1))

                                     AS PAGE_SEQ

                                 FROM AGJ110T A WITH(NOLOCK)
                                WHERE A.COMP_CODE          = #{S_COMP_CODE}
                                  AND ISNULL(A.CASH_NUM,0) = 0
                                  AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
                                   <if test="@foren.Ognl@isNotEmpty(AC_DATE)">
                                      AND A.AC_DATE + CONVERT(nvarchar, A.SLIP_NUM) IN
                                           (${AC_DATE})
                                   </if>

                                GROUP BY A.COMP_CODE, A.EX_DATE, A.EX_NUM, A.SLIP_NUM
                            ) X ON X.COMP_CODE = T.COMP_CODE
                               AND X.PAGE      = T.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR, T.EX_NUM), 7)
                               LEFT JOIN BSA100T M6 WITH (NOLOCK) ON M6.COMP_CODE = T.COMP_CODE
                                                                 AND M6.MAIN_CODE = N'A070'
                                                                 AND M6.SUB_CODE  = T.REASON_CODE
                        </if>
           ORDER BY T.EX_DATE, T.EX_NUM, T.EX_SEQ

           SET ARITHABORT OFF
           SET NOCOUNT OFF

        END
    </select>



    <select id="s_agj270skr_jwServiceImpl.selectPrimaryDataList2" parameterType="Map" resultType="rMap" >

    --s_agj270skr_jwServiceImpl.selectPrimaryDataList2 :  Query01
    BEGIN

       SET NOCOUNT ON
       SET ARITHABORT ON

       /*-- 1. 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------------*/
       DECLARE @DateFormat         NVARCHAR(01)

       SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
       FROM   BSA100T   WITH (NOLOCK)
       WHERE  COMP_CODE  = #{S_COMP_CODE}
       AND    MAIN_CODE  = 'B044'
       AND    REF_CODE1  = 'Y'

       SET @DateFormat = ISNULL(@DateFormat, '.')


       SELECT ROW_NUMBER() OVER(ORDER BY A.EX_DATE, A.EX_NUM) AS SEQ
            , CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN NULL
                   ELSE SUBSTRING(A.EX_DATE, 1, 4) + @DateFormat +
                        SUBSTRING(A.EX_DATE, 5, 2) + @DateFormat +
                        SUBSTRING(A.EX_DATE, 7, 2)
               END                                                 AS EX_DATE
            , A.EX_NUM                                             AS EX_NUM
            , A.REMARK                                             AS REMARK
            , A.DR_CR
            , A.ACCNT
            , A.ACCNT_NAME
            , A.CR_AMT_I                                           AS CR_AMT_I
            , A.DIV_CODE                                           AS DIV_CODE
            , A.DR_AMT_I                                           AS DR_AMT_I
            , CASE DR_CR WHEN '1' THEN ACCNT           ELSE ''     END DR_ACCNT
            , CASE DR_CR WHEN '1' THEN ACCNT_NAME      ELSE ''     END DR_ACCNT_NAME
            , CASE DR_CR WHEN '1' THEN AC_DATA1        ELSE ''     END DR_AC_DATA1
            , CASE DR_CR WHEN '1' THEN AC_DATA_NAME1   ELSE ''     END DR_AC_DATA_NAME1
            , CASE DR_CR WHEN '1' THEN AC_DATA2        ELSE ''     END DR_AC_DATA2
            , CASE DR_CR WHEN '1' THEN AC_DATA_NAME2   ELSE ''     END DR_AC_DATA_NAME2
            , CASE DR_CR WHEN '1' THEN FOR_AMT_I       ELSE NULL   END DR_FOR_AMT_I
            , CASE DR_CR WHEN '1' THEN DEPT_CODE       ELSE ''     END DR_DEPT_CODE
            , CASE DR_CR WHEN '1' THEN DIV_CODE        ELSE ''     END DR_DIV_CODE
            , CASE DR_CR WHEN '1' THEN MONEY_UNIT      ELSE ''     END DR_MONEY_UNI
            , CASE DR_CR WHEN '2' THEN ACCNT           ELSE ''     END CR_ACCNT
            , CASE DR_CR WHEN '2' THEN ACCNT_NAME      ELSE ''     END CR_ACCNT_NAME
            , CASE DR_CR WHEN '2' THEN AC_DATA1        ELSE ''     END CR_AC_DATA1
            , CASE DR_CR WHEN '2' THEN AC_DATA_NAME1   ELSE ''     END CR_AC_DATA_NAME1
            , CASE DR_CR WHEN '2' THEN AC_DATA2        ELSE ''     END CR_AC_DATA2
            , CASE DR_CR WHEN '2' THEN AC_DATA_NAME2   ELSE ''     END CR_AC_DATA_NAME2
            , CASE DR_CR WHEN '2' THEN AMT_I           ELSE NULL   END CR_AMT_I
            , CASE DR_CR WHEN '2' THEN FOR_AMT_I       ELSE NULL   END CR_FOR_AMT_I
            , CASE DR_CR WHEN '2' THEN DEPT_CODE       ELSE ''     END CR_DEPT_CODE
            , CASE DR_CR WHEN '2' THEN DIV_CODE        ELSE ''     END CR_DIV_CODE
            , CASE DR_CR WHEN '2' THEN MONEY_UNIT      ELSE ''     END CR_MONEY_UNIT

        FROM    (


        <if test="SLIP_DIVI == &quot;1&quot;">
        --회계전표
                    SELECT
                            A.COMP_CODE
                          , A.AC_DATE                                           AS EX_DATE
                          , A.SLIP_NUM                                          AS EX_NUM
                          , CASE WHEN A.DR_CR = '1' THEN A.AMT_I ELSE 0 END     AS DR_AMT_I
                          , CASE WHEN A.DR_CR = '2' THEN A.AMT_I ELSE 0 END     AS CR_AMT_I
                          , A.DIV_CODE
                          , A.REMARK
                          , A.DR_CR
                          , A.ACCNT

                          , AC_DATA1
                          , CASE ISNULL(AC_DATA_NAME1, '') WHEN ''
                                                           THEN AC_DATA1
                                                           ELSE AC_DATA_NAME1
                             END AS AC_DATA_NAME1
                          , ISNULL((SELECT ACCNT_NAME
                                      FROM ABA400T
                                     WHERE COMP_CODE = N'MASTER'
                                       AND ACCNT     = A.ACCNT),'') ACCNT_NAME

                          , AC_DATA2
                          , CASE ISNULL(AC_DATA_NAME2, '') WHEN ''
                                                           THEN AC_DATA2
                                                           ELSE AC_DATA_NAME2
                             END AS AC_DATA_NAME2

                          , ISNULL(FOR_AMT_I, NULL) FOR_AMT_I


                          , CASE ISNULL((SELECT REF_CODE1
                                           FROM BSA100T
                                          WHERE COMP_CODE = #{S_COMP_CODE}
                                            AND MAIN_CODE = N'B004'
                                            AND SUB_CODE  = A.MONEY_UNIT),'')
                                  WHEN 'Y'
                                  THEN NULL
                                  ELSE          MONEY_UNIT
                             END MONEY_UNIT

                          , A.AMT_I
                          , A.DEPT_CODE
                          , A.DEPT_NAME
                    FROM                AGJ210T   A  WITH (NOLOCK)
                            LEFT  JOIN  BOR120T   B  WITH (NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
                                                                    AND B.DIV_CODE    = A.DIV_CODE
                            LEFT  JOIN  ABA400T   C  WITH (NOLOCK)   ON C.COMP_CODE   = A.COMP_CODE
                                                                    AND C.ACCNT       = A.ACCNT
                            LEFT  JOIN  BSA210T   D  WITH (NOLOCK)   ON D.COMP_CODE   = A.COMP_CODE
                                                                    AND D.TREE_CODE   = A.IN_DEPT_CODE
                            LEFT  JOIN  BSA210T   E  WITH (NOLOCK)   ON E.COMP_CODE   = A.COMP_CODE
                                                                    AND E.TREE_CODE   = A.DEPT_CODE
                            LEFT  JOIN  L_AGJ270T G  WITH (NOLOCK)   ON G.COMP_CODE   = A.COMP_CODE
                                                                    AND G.AC_DATE     =  A.AC_DATE
                                                                    AND G.SLIP_NUM    =  A.SLIP_NUM

                    WHERE A.COMP_CODE    = #{S_COMP_CODE}
                      AND A.AC_DATE  &gt;= #{FR_AC_DATE}
                      AND A.AC_DATE  &lt;= #{TO_AC_DATE}
                      AND G.KEY_VALUE    = #{KEY_VALUE}
                     AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')

        </if>


        <if test="SLIP_DIVI == &quot;2&quot;">
        --결의전표
                    SELECT
                            A.COMP_CODE
                          , A.EX_DATE                                           AS EX_DATE
                          , A.EX_NUM                                            AS EX_NUM
                          , CASE WHEN A.DR_CR = '1' THEN A.AMT_I ELSE 0 END     AS DR_AMT_I
                          , CASE WHEN A.DR_CR = '2' THEN A.AMT_I ELSE 0 END     AS CR_AMT_I
                          , A.DIV_CODE
                          , A.REMARK
                          , A.DR_CR
                          , A.ACCNT

                          , AC_DATA1
                          , CASE ISNULL(AC_DATA_NAME1, '') WHEN ''
                                                           THEN AC_DATA1
                                                           ELSE AC_DATA_NAME1
                             END AS AC_DATA_NAME1
                          , ISNULL((SELECT ACCNT_NAME
                                      FROM ABA400T
                                     WHERE COMP_CODE = #{S_COMP_CODE}
                                       AND ACCNT     = A.ACCNT),'') ACCNT_NAME

                          , AC_DATA2
                          , CASE ISNULL(AC_DATA_NAME2, '') WHEN ''
                                                           THEN AC_DATA2
                                                           ELSE AC_DATA_NAME2
                             END AS AC_DATA_NAME2

                          , ISNULL(FOR_AMT_I, NULL) FOR_AMT_I


                          , CASE ISNULL((SELECT REF_CODE1
                                           FROM BSA100T
                                          WHERE COMP_CODE = #{S_COMP_CODE}
                                            AND MAIN_CODE = N'B004'
                                            AND SUB_CODE  = A.MONEY_UNIT),'')
                                  WHEN 'Y'
                                  THEN NULL
                                  ELSE          MONEY_UNIT
                             END MONEY_UNIT

                          , A.AMT_I
                          , A.DEPT_CODE
                          , A.DEPT_NAME
                    FROM                AGJ110T   A  WITH (NOLOCK)
                            LEFT  JOIN  BOR120T   B  WITH (NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
                                                                    AND B.DIV_CODE    = A.DIV_CODE
                            LEFT  JOIN  ABA400T   C  WITH (NOLOCK)   ON C.COMP_CODE   = A.COMP_CODE
                                                                    AND C.ACCNT       = A.ACCNT
                            LEFT  JOIN  BSA210T   D  WITH (NOLOCK)   ON D.COMP_CODE   = A.COMP_CODE
                                                                    AND D.TREE_CODE   = A.IN_DEPT_CODE
                            LEFT  JOIN  BSA210T   E  WITH (NOLOCK)   ON E.COMP_CODE   = A.COMP_CODE
                                                                    AND E.TREE_CODE   = A.DEPT_CODE
                            LEFT  JOIN  L_AGJ270T G  WITH (NOLOCK)   ON G.COMP_CODE   = A.COMP_CODE
                                                                    AND G.AC_DATE     =  A.EX_DATE
                                                                    AND G.SLIP_NUM    =  A.EX_NUM

                    WHERE A.COMP_CODE    = #{S_COMP_CODE}
                      AND A.EX_DATE  &gt;= #{FR_AC_DATE}
                      AND A.EX_DATE  &lt;= #{TO_AC_DATE}
                      AND G.KEY_VALUE    = #{KEY_VALUE}
                     AND (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')

        </if>


                   ) A

            ORDER   BY  A.EX_DATE, A.EX_NUM


        SET ARITHABORT OFF
        SET NOCOUNT OFF

    END
    </select>

    <select id="s_agj270skr_jwServiceImpl.selectListExcel" parameterType="Map" resultType="rMap">

        <if test="SLIP_DIVI == &quot;1&quot;">
            --s_agj270skr.selectListExcel[회계] :  Query01
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

            SELECT ROW_NUMBER() OVER(ORDER BY A.AC_DATE, A.SLIP_NUM)        AS SEQ
                 , CAST(0 AS BIT) CHK
                 , A.AC_DATE
                 , A.SLIP_NUM
                 , A.EX_DATE
                 , A.EX_NUM
                 , SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0)) DR_AMT_I
                 , SUM(ISNULL(CASE A.DR_CR WHEN '2' THEN A.AMT_I ELSE 0.0 END, 0)) CR_AMT_I
                 , A.INPUT_PATH
                 , M1.CODE_NAME AS CHARGE_NAME
                 , A.INPUT_DATE
                 , M2.CODE_NAME AS AP_CHARGE_NAME
                 , A.AP_DATE
                 , A.INPUT_DIVI
                 , 'JW' + A.EX_DATE + REPLICATE('0',4 - LEN(A.EX_NUM)) + CONVERT(VARCHAR(4),A.EX_NUM) AS EX_NUM_EXCEL
                 , REPLACE(unilite.fnConvertToAmt(SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0))),' ','') AS AMT_TO_HANGUL
                 , SUBSTRING(A.EX_DATE,1,4) + '년' +  SUBSTRING(A.EX_DATE,5,2) + '월' +  SUBSTRING(A.EX_DATE,7,2) + '일' AS AC_DATE2
            FROM              AGJ210T A  WITH (NOLOCK)
                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                      AND M1.MAIN_CODE = 'A009'
                                                      AND M1.SUB_CODE  = A.CHARGE_CODE
                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                                      AND M2.MAIN_CODE = 'A009'
                                                      AND M2.SUB_CODE  = A.AP_CHARGE_CODE
				  INNER JOIN uniLITE.fnSplit(#{EX_NUMS}, ',') AS F ON F.VALUE = A.EX_DATE  + CONVERT(NVARCHAR(10),A.EX_NUM)
            WHERE  A.COMP_CODE = #{S_COMP_CODE}
            AND    A.AC_DATE &gt;= #{FR_AC_DATE}
            AND    A.AC_DATE &lt;= #{TO_AC_DATE}
            AND    (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
			AND   A.DIV_CODE = #{DIV_CODE}
            <if test="@foren.Ognl@isNotEmpty(FR_IN_DATE)">
                AND   INPUT_DATE &gt;= #{FR_IN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_IN_DATE)">
                AND   INPUT_DATE &lt;= #{TO_IN_DATE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_SLIP_NUM)">
                AND   SLIP_NUM &gt;= #{FR_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_SLIP_NUM)">
                AND   SLIP_NUM &lt;= #{TO_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE)">
                 AND IN_DEPT_CODE LIKE #{IN_DEPT_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
                AND   CHARGE_CODE = #{PRSN_CODE}
            </if>


            <if test="@foren.Ognl@isNotEmpty(FR_EX_NUM)">
                AND   EX_NUM &gt;= #{FR_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_EX_NUM)">
                AND   EX_NUM &lt;= #{TO_EX_NUM}
            </if>
          <!--   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND     DIV_CODE IN
                    <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                     #{item}
                    </foreach>
            </if> -->
            <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
                AND     INPUT_PATH = #{INPUT_PATH}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &gt;= #{FR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &lt;= #{TO_AMT_I}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
                AND   AND ISNULL(FOR_AMT_I,0.0) &gt;= #{FR_FOR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
                AND ISNULL(FOR_AMT_I,0.0) &lt;= #{TO_FOR_AMT_I}
            </if>

            <if test="SLIP_DIVI == &quot;2&quot;">
                <if test="@foren.Ognl@isNotEmpty(AP_STS)">
                    AND AP_STS =#{AP_STS}
                </if>
            </if>


            GROUP BY A.EX_DATE,     A.EX_NUM,  A.AC_DATE,  A.SLIP_NUM, A.INPUT_PATH
                   , M1.CODE_NAME, A.INPUT_DATE, M2.CODE_NAME, A.AP_DATE, A.INPUT_DIVI
            ORDER BY A.AC_DATE, A.SLIP_NUM

        </if>
        <if test="SLIP_DIVI == &quot;2&quot;">
            --s_agj270skr.selectListExcel[결의] :  Query02
            SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

            SELECT ROW_NUMBER() OVER(ORDER BY A.AC_DATE, A.SLIP_NUM)        AS SEQ
                 , CAST(0 AS BIT) CHK
                 , A.EX_DATE  AS AC_DATE
                 , A.EX_NUM   AS SLIP_NUM
                 , A.AC_DATE  AS EX_DATE
                 , A.SLIP_NUM AS EX_NUM
                 , SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0)) DR_AMT_I
                 , SUM(ISNULL(CASE A.DR_CR WHEN '2' THEN A.AMT_I ELSE 0.0 END, 0)) CR_AMT_I
                 , A.INPUT_PATH
                 , M1.CODE_NAME AS CHARGE_NAME
                 , A.INPUT_DATE
                 , M2.CODE_NAME AS AP_CHARGE_NAME
                 , A.AP_DATE
                 , A.INPUT_DIVI
                 , 'JW' + A.EX_DATE + REPLICATE('0',4 - LEN(A.EX_NUM)) + CONVERT(VARCHAR(4),A.EX_NUM) AS EX_NUM_EXCEL
                 , REPLACE(unilite.fnConvertToAmt(SUM(ISNULL(CASE A.DR_CR WHEN '1' THEN A.AMT_I ELSE 0.0 END, 0))),' ','') AS AMT_TO_HANGUL
                 , SUBSTRING(A.EX_DATE,1,4) + '년 ' +  SUBSTRING(A.EX_DATE,5,2) + '월 ' +  SUBSTRING(A.EX_DATE,7,2) + '일' AS AC_DATE2
            FROM              AGJ110T A  WITH (NOLOCK)
                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                      AND M1.MAIN_CODE = 'A009'
                                                      AND M1.SUB_CODE  = A.CHARGE_CODE
                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                                      AND M2.MAIN_CODE = 'A009'
                                                      AND M2.SUB_CODE  = A.AP_CHARGE_CODE
                   INNER JOIN uniLITE.fnSplit(#{EX_NUMS}, ',') AS F ON F.VALUE = A.EX_DATE  + CONVERT(NVARCHAR(10),A.EX_NUM)
            WHERE  A.COMP_CODE = #{S_COMP_CODE}
            AND    A.EX_DATE &gt;= #{FR_AC_DATE}
            AND    A.EX_DATE &lt;= #{TO_AC_DATE}
            AND    (A.MOD_DIVI IS NULL OR A.MOD_DIVI = '')
			AND   A.DIV_CODE = #{DIV_CODE}

            <if test="@foren.Ognl@isNotEmpty(FR_IN_DATE)">
                AND   INPUT_DATE &gt;= #{FR_IN_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_IN_DATE)">
                AND   INPUT_DATE &lt;= #{TO_IN_DATE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_SLIP_NUM)">
                AND   SLIP_NUM &gt;= #{FR_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_SLIP_NUM)">
                AND   SLIP_NUM &lt;= #{TO_SLIP_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(IN_DEPT_CODE)">
                 AND IN_DEPT_CODE LIKE #{IN_DEPT_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PRSN_CODE)">
                AND   CHARGE_CODE = #{PRSN_CODE}
            </if>


            <if test="@foren.Ognl@isNotEmpty(FR_EX_NUM)">
                AND   EX_NUM &gt;= #{FR_EX_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_EX_NUM)">
                AND   EX_NUM &lt;= #{TO_EX_NUM}
            </if>
          <!--   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND     DIV_CODE IN
                    <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                     #{item}
                    </foreach>
            </if> -->
            <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
                AND     INPUT_PATH = #{INPUT_PATH}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &gt;= #{FR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_AMT_I)">
                AND   AND ISNULL(AMT_I,0.0) &lt;= #{TO_AMT_I}
            </if>

            <if test="@foren.Ognl@isNotEmpty(FR_FOR_AMT_I)">
                AND   AND ISNULL(FOR_AMT_I,0.0) &gt;= #{FR_FOR_AMT_I}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_FOR_AMT_I)">
                AND ISNULL(FOR_AMT_I,0.0) &lt;= #{TO_FOR_AMT_I}
            </if>

            <if test="SLIP_DIVI == &quot;2&quot;">
                <if test="@foren.Ognl@isNotEmpty(AP_STS)">
                    AND AP_STS =#{AP_STS}
                </if>
            </if>


            GROUP BY A.EX_DATE,     A.EX_NUM,  A.AC_DATE,  A.SLIP_NUM, A.INPUT_PATH
                   , M1.CODE_NAME, A.INPUT_DATE, M2.CODE_NAME, A.AP_DATE, A.INPUT_DIVI
            ORDER BY A.AC_DATE, A.SLIP_NUM

        </if>
    </select>
    <select id="s_agj270skr_jwServiceImpl.selectList2Excel" parameterType="Map" resultType="rMap">
        --s_agj270skr.selectList2Excel :  Query01
        <if test="SLIP_DIVI == &quot;2&quot;">
            SELECT EX_SEQ
        </if>
        <if test="SLIP_DIVI != &quot;2&quot;">
            SELECT SLIP_SEQ EX_SEQ
        </if>

              , (SELECT CODE_NAME
                   FROM BSA100T  WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND MAIN_CODE = 'A001'
                    AND SUB_CODE  = A.DR_CR) SLIP_DIVI_NM
              , ACCNT
              , (SELECT ACCNT_NAME
                   FROM ABA400T  WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND ACCNT     = A.ACCNT) ACCNT_NAME
              , AMT_I
              , ISNULL(MONEY_UNIT,'') MONEY_UNIT
              , EXCHG_RATE_O
              , FOR_AMT_I
              , ISNULL(REMARK,'') REMARK
              , DEPT_NAME
              , (SELECT DIV_NAME
                   FROM BOR120T   WITH (NOLOCK)
                  WHERE COMP_CODE = A.COMP_CODE
                    AND DIV_CODE  = A.DIV_CODE) DIV_NAME
              , (SELECT CODE_NAME
                   FROM BSA100T   WITH (NOLOCK)
                  WHERE MAIN_CODE = 'A022'
                    AND SUB_CODE  = A.PROOF_KIND
                    AND COMP_CODE = A.COMP_CODE) PROOF_KIND_NM
              , ISNULL(POSTIT_YN,'N') POSTIT_YN

              , ISNULL(AC_CODE1,'') AC_CODE1
              , ISNULL(AC_CODE2,'') AC_CODE2
              , ISNULL(AC_CODE3,'') AC_CODE3
              , ISNULL(AC_CODE4,'') AC_CODE4
              , ISNULL(AC_CODE5,'') AC_CODE5
              , ISNULL(AC_CODE6,'') AC_CODE6
              , ISNULL(AC_DATA1,'') AC_DATA1
              , ISNULL(AC_DATA2,'') AC_DATA2
              , ISNULL(AC_DATA3,'') AC_DATA3
              , ISNULL(AC_DATA4,'') AC_DATA4
              , ISNULL(AC_DATA5,'') AC_DATA5
              , ISNULL(AC_DATA6,'') AC_DATA6
              , ISNULL(AC_DATA_NAME1,'') AC_DATA_NAME1
              , ISNULL(AC_DATA_NAME2,'') AC_DATA_NAME2
              , ISNULL(AC_DATA_NAME3,'') AC_DATA_NAME3
              , ISNULL(AC_DATA_NAME4,'') AC_DATA_NAME4
              , ISNULL(AC_DATA_NAME5,'') AC_DATA_NAME5
              , ISNULL(AC_DATA_NAME6,'') AC_DATA_NAME6

            , ISNULL(N1.AC_NAME,'') AC_NAME1
            , ISNULL(N2.AC_NAME,'') AC_NAME2
            , ISNULL(N3.AC_NAME,'') AC_NAME3
            , ISNULL(N4.AC_NAME,'') AC_NAME4
            , ISNULL(N5.AC_NAME,'') AC_NAME5
            , ISNULL(N6.AC_NAME,'') AC_NAME6

            , ISNULL(N1.DT_TYPE,0) AC_TYPE1
            , ISNULL(N2.DT_TYPE,0) AC_TYPE2
            , ISNULL(N3.DT_TYPE,0) AC_TYPE3
            , ISNULL(N4.DT_TYPE,0) AC_TYPE4
            , ISNULL(N5.DT_TYPE,0) AC_TYPE5
            , ISNULL(N6.DT_TYPE,0) AC_TYPE6

            , ISNULL(N1.DT_FMT,'0') AC_FORMAT1
            , ISNULL(N2.DT_FMT,'0') AC_FORMAT2
            , ISNULL(N3.DT_FMT,'0') AC_FORMAT3
            , ISNULL(N4.DT_FMT,'0') AC_FORMAT4
            , ISNULL(N5.DT_FMT,'0') AC_FORMAT5
            , ISNULL(N6.DT_FMT,'0') AC_FORMAT6

            , ISNULL(N1.DT_POPUP,'0')        AC_POPUP1
            , ISNULL(N2.DT_POPUP,'0')        AC_POPUP2
            , ISNULL(N3.DT_POPUP,'0')        AC_POPUP3
            , ISNULL(N4.DT_POPUP,'0')        AC_POPUP4
            , ISNULL(N5.DT_POPUP,'0')        AC_POPUP5
            , ISNULL(N6.DT_POPUP,'0')        AC_POPUP6

        <if test="SLIP_DIVI == &quot;2&quot;">
              FROM        AGJ110T      A  WITH (NOLOCK)
                LEFT JOIN ABA200T   AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
                                                        AND N1.AC_CD     = A.AC_CODE1
                LEFT JOIN ABA200T   AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
                                                        AND N2.AC_CD     = A.AC_CODE2
                LEFT JOIN ABA200T   AS N3 WITH (NOLOCK) ON  N3.COMP_CODE = A.COMP_CODE
                                                        AND N3.AC_CD     = A.AC_CODE3
                LEFT JOIN ABA200T   AS N4 WITH (NOLOCK) ON  N4.COMP_CODE = A.COMP_CODE
                                                        AND N4.AC_CD     = A.AC_CODE4
                LEFT JOIN ABA200T   AS N5 WITH (NOLOCK) ON  N5.COMP_CODE = A.COMP_CODE
                                                        AND N5.AC_CD     = A.AC_CODE5
                LEFT JOIN ABA200T   AS N6 WITH (NOLOCK) ON  N6.COMP_CODE = A.COMP_CODE
                                                        AND N6.AC_CD     = A.AC_CODE6


             WHERE A.COMP_CODE  = #{S_COMP_CODE}
               AND A.EX_DATE    = #{AC_DATE}
               AND A.EX_NUM     = #{SLIP_NUM}

        </if>
        <if test="SLIP_DIVI != &quot;2&quot;">
              FROM        AGJ210T      A  WITH (NOLOCK)
                LEFT JOIN ABA200T   AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
                                                        AND N1.AC_CD     = A.AC_CODE1
                LEFT JOIN ABA200T   AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
                                                        AND N2.AC_CD     = A.AC_CODE2
                LEFT JOIN ABA200T   AS N3 WITH (NOLOCK) ON  N3.COMP_CODE = A.COMP_CODE
                                                        AND N3.AC_CD     = A.AC_CODE3
                LEFT JOIN ABA200T   AS N4 WITH (NOLOCK) ON  N4.COMP_CODE = A.COMP_CODE
                                                        AND N4.AC_CD     = A.AC_CODE4
                LEFT JOIN ABA200T   AS N5 WITH (NOLOCK) ON  N5.COMP_CODE = A.COMP_CODE
                                                        AND N5.AC_CD     = A.AC_CODE5
                LEFT JOIN ABA200T   AS N6 WITH (NOLOCK) ON  N6.COMP_CODE = A.COMP_CODE
                                                        AND N6.AC_CD     = A.AC_CODE6
             WHERE A.COMP_CODE  = #{S_COMP_CODE}
               AND A.AC_DATE    = #{AC_DATE}
               AND A.SLIP_NUM   = #{SLIP_NUM}

        </if>
        <if test="@foren.Ognl@isNotEmpty(AP_STS)">
            <if test="SLIP_DIVI == &quot;2&quot;">
                AND A.AP_STS    = #{AP_STS}
            </if>
        </if>
        <if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
            AND A.INPUT_PATH = #{INPUT_PATH}
        </if>
            AND ISNULL(A.MOD_DIVI,'') = ''
        <if test="SLIP_DIVI == &quot;1&quot;">
             ORDER BY A.SLIP_SEQ
        </if>
        <if test="SLIP_DIVI != &quot;1&quot;">
             ORDER BY A.EX_SEQ
        </if>
    </select>
</mapper>