<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp101ukrv_jwServiceImpl">
	<!-- 작업지시조회 팝업 조회쿼리 (사용 안 함: 조회창 없이 무조건 조회 되도록 pg 변경 됨) -->
	<select id="s_pmp101ukrv_jwServiceImpl.selectWorkNum" parameterType="Map" resultType="rMap">
		/* uniLITE5Popup.CPopup[fnGetWkordNum] Query01   조회창  */
		BEGIN
				SET NOCOUNT ON
				SET ARITHABORT ON
				
				DECLARE   @CompCode	 NVARCHAR(08) /* 법인코드		  */
						, @UserId	   NVARCHAR(100) /* 사용자ID		 */
						, @LangType	 NVARCHAR(2)  /* 언어구분		  */
						, @RefItem	  NVARCHAR(01) /* 명칭 참조 유형	  */
						, @DateFormat   NVARCHAR(10) /* 날짜 포맷 유형 설정	 */
							
				SET @CompCode = #{S_COMP_CODE}
				SET @UserId   = #{S_USER_ID}
				SET @LangType = #{S_LANG_CODE}
				
				/* 명칭 참조 유형 */
				SELECT TOP 1 @RefItem = REF_ITEM
					FROM BSA300T WITH (NOLOCK)
					WHERE USER_ID = @UserId
				
				SET @RefItem = ISNULL(@RefItem, N'0')
				
				/* 날짜 포맷 유형 설정 */
				SELECT TOP 1 @DateFormat = CODE_NAME
					FROM BSA100T WITH (NOLOCK)
					WHERE COMP_CODE = @CompCode
					AND MAIN_CODE = N'B044'
					AND REF_CODE1 = N'Y'
				
				SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
				
				/* 데이터 조회 */
			
			SELECT TOP 1 @RefItem = REF_ITEM
			FROM   BSA300T WITH (NOLOCK)
			WHERE  COMP_CODE = @CompCode
			AND	USER_ID   = @UserId
			
			SET @RefItem = ISNULL(@RefItem, N'0')
			
			SELECT A.TOP_WKORD_NUM
				 , A.WKORD_NUM
				 , A.ITEM_CODE
				 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						ELSE					 C1.ITEM_NAME
				   END														 AS ITEM_NAME
				 , C1.SPEC
				 , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
					END)													   AS PRODT_WKORD_DATE
				 , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
					END)													  AS PRODT_START_DATE
				 , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
					END)													  AS PRODT_END_DATE
				 , CASE WHEN ISNULL(A.PROG_UNIT_Q, 0) = 0 THEN 0
						ELSE ISNULL(A.WKORD_Q, 0) / ISNULL(A.PROG_UNIT_Q, 0)
				   END														AS WKORD_Q
				 , A.WK_PLAN_NUM
				 , A.DIV_CODE
				 , A.WORK_SHOP_CODE
				 , B.ORDER_NUM
				 , ISNULL(B.ORDER_Q, 0)									   AS ORDER_Q
				 , A.REMARK
				 , ISNULL(A.PRODT_Q, 0)									   AS PRODT_Q
				 , (CASE WHEN ISNULL(C.DVRY_DATE, '') = ''
						 THEN ''
						 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(C.DVRY_DATE, 1, 4))
																 , 'MM'  , SUBSTRING(C.DVRY_DATE, 5, 2))
																 , 'DD'  , SUBSTRING(C.DVRY_DATE, 7, 2))
					END)													  AS DVRY_DATE
				 , C1.STOCK_UNIT
				 , A.PROJECT_NO
				 , A.PJT_CODE
				 , A.LOT_NO
				 , A.REWORK_YN
				 , A.STOCK_EXCHG_TYPE
				 , B.REMARK  AS CUSTOM
				 , A.REMARK2
			FROM			  PMP100T A  WITH (NOLOCK)
				   LEFT  JOIN PPL100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
													  AND B.DIV_CODE	= A.DIV_CODE
													  AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
				   LEFT  JOIN SOF110T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
													  AND C.DIV_CODE	= B.DIV_CODE
													  AND C.ORDER_NUM   = B.ORDER_NUM
													  AND C.SER_NO	  = B.SEQ
				   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
													  AND C1.ITEM_CODE  = A.ITEM_CODE
			WHERE  A.COMP_CODE		 = @CompCode
			  AND  LINE_END_YN		 = 'Y'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND  A.DIV_CODE	  = #{DIV_CODE}  
			</if>
			<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
				AND  A.WKORD_NUM	  = #{WKORD_NUM}  
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">	
				AND A.ITEM_CODE	  LIKE #{ITEM_CODE} +  '%'	   /*품목코드*/
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_PRODT_DATE)"> 
			AND	 A.PRODT_START_DATE &gt;=#{FR_PRODT_DATE}
			</if> 
			<if test="@foren.Ognl@isNotEmpty(TO_PRODT_DATE)"> 
			AND	 A.PRODT_START_DATE &lt;= #{TO_PRODT_DATE}
			</if> 
			<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
			AND	 A.WORK_SHOP_CODE	 = #{WORK_SHOP_CODE}
			</if>
	
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
			AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					  WHEN @RefItem = '2' THEN C1.ITEM_NAME2
										  ELSE C1.ITEM_NAME
				  END)			 LIKE #{ITEM_NAME} + '%'		  
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
				AND  A.LOT_NO	  = #{LOT_NO}  
			</if>
	
			ORDER BY A.WKORD_NUM
			
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END	 
	</select>


	<select id="s_pmp101ukrv_jwServiceImpl.selectDetailList" parameterType="Map" resultType="rMap"> 
	/* s_pmp101ukrv_jwServiceImpl.selectDetailList  Grid 조회 */ 
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE   @CompCode	 	NVARCHAR(08)	/* 법인코드			*/
				, @UserId		NVARCHAR(100)	/* 사용자ID		*/
				, @LangType		NVARCHAR(2)		/* 언어구분			*/
				, @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				, @DateFormat	NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
					
		SET @CompCode	= #{S_COMP_CODE}
		SET @UserId		= #{S_USER_ID}
		SET @LangType	= #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = N'B044'
		   AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.OUTSTOCK_NUM
			 , A.ITEM_CODE
			 , C.ITEM_NAME
			 , C.SPEC
			 , C.ITEM_WIDTH
			 , C.STOCK_UNIT
		--	 , A.WKORD_NUM
			 , A.PATH_CODE
			 , A.REF_WKORD_NUM															AS TOP_WKORD_NUM
			 , A.WORK_SHOP_CODE
			 , A.OUTSTOCK_REQ_DATE
			 , unilite.fnformat(@CompCode, A.OUTSTOCK_REQ_Q,	'P_FSET_QS')			AS OUTSTOCK_REQ_Q
			 , unilite.fnformat(@CompCode, A.OUTSTOCK_Q,		'P_FSET_QS')			AS OUTSTOCK_Q
			 , unilite.fnformat(@CompCode, ISNULL(C.ITEM_WIDTH, 0) * ISNULL(A.TEMPN_01, 0),	'P_FSET_QS')	AS TOT_WIDTH
			 , A.CONTROL_STATUS
			 , unilite.fnformat(@CompCode, A.CANCEL_Q,			'P_FSET_QS')			AS CANCEL_Q
			 , A.PROJECT_NO
			 , A.PJT_CODE
			 , A.LOT_NO
			 , A.REMARK
			 , A.OUTSTOCK_REQ_PRSN
			 , A.AGREE_STATUS
			 , A.AGREE_PRSN
			 , A.AGREE_DATE
			 , A.REMARK
			 , A.INSERT_DB_USER
			 , A.INSERT_DB_TIME
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 --20180803 추가
			 , A.TEMPN_01																AS ROLL_CNT
			 --, D.TRNS_RATE
			 , unilite.fnformat(@CompCode, A.OUTSTOCK_REQ_Q / CASE WHEN A.TEMPN_01 = 0 THEN 1
			 													   ELSE A.TEMPN_01
			 												  END,		'P_FSET_QS')	AS TRNS_RATE
		  FROM		 PMP300T A WITH(NOLOCK)
		  --LEFT  JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
				--						   AND B.DIV_CODE		= A.DIV_CODE
				--						   AND B.ITEM_CODE		= A.ITEM_CODE
				--						   AND B.ITEM_CODE		= A.ITEM_CODE
		  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
										   AND C.ITEM_CODE		= A.ITEM_CODE
		  INNER JOIN BPR200T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
										   AND D.DIV_CODE		= A.DIV_CODE
										   AND D.ITEM_CODE		= A.ITEM_CODE
		  --INNER JOIN PBS200T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
				--						   AND D.DIV_CODE		= A.DIV_CODE
				--						   AND D.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
				--						   AND D.PROG_WORK_CODE	= A.PROG_WORK_CODE
		  WHERE A.COMP_CODE			= @CompCode
		 <if test="@foren.Ognl@isNotEmpty(TOP_WKORD_NUM)">
			AND  A.REF_WKORD_NUM	= #{TOP_WKORD_NUM}  
		 </if>
				
		  ORDER BY A.OUTSTOCK_NUM, A.REF_WKORD_NUM ASC
		  
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
	END
	</select>   

	<select id="s_pmp101ukrv_jwServiceImpl.selectPMP200" parameterType="Map" resultType="rMap"> 
	/* s_pmp101ukrv_jwServiceImpl.selectPMP200  Grid 조회 */ 
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE   @CompCode	 	NVARCHAR(08)	/* 법인코드			*/
				, @UserId		NVARCHAR(100)	/* 사용자ID		*/
				, @LangType		NVARCHAR(2)		/* 언어구분			*/
				, @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				, @DateFormat	NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
					
		SET @CompCode	= #{S_COMP_CODE}
		SET @UserId		= #{S_USER_ID}
		SET @LangType	= #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = N'B044'
		   AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.OUTSTOCK_NUM
			 , A.ITEM_CODE
			 , C.ITEM_NAME
			 , C.SPEC
			 , C.ITEM_WIDTH
			 , C.STOCK_UNIT
		--	 , A.WKORD_NUM
			 , A.PATH_CODE
			 , A.WKORD_NUM																AS TOP_WKORD_NUM
			 , A.WORK_SHOP_CODE
			 , A.OUTSTOCK_REQ_DATE
			 , unilite.fnformat(@CompCode, A.OUTSTOCK_REQ_Q,	'P_FSET_QS')			AS OUTSTOCK_REQ_Q
			 , unilite.fnformat(@CompCode, A.ALLOCK_Q,			'P_FSET_QS')			AS OUTSTOCK_Q
			 , unilite.fnformat(@CompCode, ISNULL(C.ITEM_WIDTH, 0) * ISNULL(A.TEMPN_01, 0),	'P_FSET_QS')	AS TOT_WIDTH
			 , B.WKORD_STATUS															AS CONTROL_STATUS
			 , 0																		AS CANCEL_Q
			 , A.PROJECT_NO
			 , A.PJT_CODE
			 , A.LOT_NO
			 , A.REMARK
			 , ''																		AS OUTSTOCK_REQ_PRSN
			 , ''																		AS AGREE_STATUS
			 , ''																		AS AGREE_PRSN
			 , ''																		AS AGREE_DATE
			 , A.REMARK
			 , A.INSERT_DB_USER
			 , A.INSERT_DB_TIME
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 --20180803 추가
			 , A.TEMPN_01																AS ROLL_CNT
			 --, D.TRNS_RATE
			 , unilite.fnformat(@CompCode, A.ALLOCK_Q / CASE WHEN A.TEMPN_01 = 0 THEN 1
			 													   ELSE A.TEMPN_01
			 												  END,		'P_FSET_QS')	AS TRNS_RATE
		  FROM		 PMP200T A WITH(NOLOCK)
		  LEFT  JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
										   AND B.DIV_CODE		= A.DIV_CODE
										   AND B.ITEM_CODE		= A.ITEM_CODE
										   AND B.TOP_WKORD_NUM	= A.WKORD_NUM
		  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
										   AND C.ITEM_CODE		= A.ITEM_CODE
		  INNER JOIN BPR200T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
										   AND D.DIV_CODE		= A.DIV_CODE
										   AND D.ITEM_CODE		= A.ITEM_CODE
		  --INNER JOIN PBS200T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
				--						   AND D.DIV_CODE		= A.DIV_CODE
				--						   AND D.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
				--						   AND D.PROG_WORK_CODE	= A.PROG_WORK_CODE
		  WHERE A.COMP_CODE			= @CompCode
		 <if test="@foren.Ognl@isNotEmpty(TOP_WKORD_NUM)">
			AND  A.WKORD_NUM	= #{TOP_WKORD_NUM}  
		 </if>
				
		  ORDER BY A.OUTSTOCK_NUM, A.WKORD_NUM ASC
		  
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
	END
	</select>   

	<select id="s_pmp101ukrv_jwServiceImpl.selectPMP100T" parameterType="Map" resultType="rMap"> 
		/* s_pmp101ukrv_jwServiceImpl.selectPMP100T */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.TOP_WKORD_NUM
			 , A.WKORD_NUM
			 , A.WORK_SHOP_CODE
			 , A.ITEM_CODE
			 , B.ITEM_NAME
			 , B.SPEC
			 , B.ITEM_WIDTH
			 , A.TEMPN_01 * B.ITEM_WIDTH		AS TOT_WIDTH
			 --, A.WKORD_Q * B.ITEM_WIDTH		AS TOT_WIDTH
			 , B.STOCK_UNIT
			 , A.LOT_NO
			 , A.PROG_WORK_CODE
			 , C.PROG_WORK_NAME
			 , A.PRODT_WKORD_DATE
			 , A.PRODT_WKORD_TIME
			 , A.PRODT_START_DATE
			 , A.PRODT_START_TIME
			 , A.PRODT_END_DATE
			 , A.PRODT_END_TIME
			 , A.WKORD_Q
			 , A.LINE_SEQ
			 , A.PROG_UNIT_Q
			 , A.PROG_RATE
			 , A.LINE_END_YN
			 , A.REMARK
			 --20180814 추가
			 , A.TEMPN_01						AS ROLL_CNT
			 ,A.REMARK2
		  FROM		 PMP100T A WITH(NOLOCK)
		  INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
										   AND B.ITEM_CODE		= A.ITEM_CODE
		  INNER JOIN PBS200T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
										   AND C.DIV_CODE		= A.DIV_CODE
										   AND C.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
										   AND C.PROG_WORK_CODE	= A.PROG_WORK_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		 <if test="@foren.Ognl@isNotEmpty(TOP_WKORD_NUM)">
		   AND A.TOP_WKORD_NUM	= #{TOP_WKORD_NUM}  
		 </if>
	</select>



	<!-- 공정코드 가져오는 로직 -->
	<select id="s_pmp101ukrv_jwServiceImpl.getProgWorkCode" parameterType="Map" resultType="rMap"> 
		DECLARE @PROG_WORK_CODE		NVARCHAR(08)
			  , @LINE_SEQ			NVARCHAR(03)

		SELECT @PROG_WORK_CODE	= PROG_WORK_CODE
			 , @LINE_SEQ			= LINE_SEQ
		  FROM PBS300T WITH(NOLOCK)
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND ITEM_CODE		= #{ITEM_CODE}
		   AND WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		
		IF (ISNULL(@PROG_WORK_CODE, '') = '')
		BEGIN
			SELECT @PROG_WORK_CODE = PROG_WORK_CODE
			  FROM PBS200T WITH(NOLOCK)
			 WHERE COMP_CODE		= #{S_COMP_CODE}
			   AND DIV_CODE			= #{DIV_CODE}
			   AND WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		END
		
		SELECT ISNULL(@PROG_WORK_CODE, '')	AS PROG_WORK_CODE
			 , ISNULL(@LINE_SEQ, '')		AS LINE_SEQ
	</select>




	<select id="s_pmp101ukrv_jwServiceImpl.selectAutoNum" parameterType="Map" resultType="rMap">
		DECLARE @AUTO_NUM	NVARCHAR(20)
		DECLARE @todayDate	NVARCHAR(08)
		
		SET @todayDate = CONVERT(NVARCHAR(8), GETDATE(), 112)
		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, #{TABLE}, #{PREFIX}, @todayDate, #{TYPE}, @AUTO_NUM OUTPUT

		IF ISNULL(@AUTO_NUM, '') != ''
			SELECT @AUTO_NUM AS AUTO_NUM
		ELSE
			SELECT TOP 0 '' AS AUTO_NUM
	</select>

	<insert id="s_pmp101ukrv_jwServiceImpl.insertDetail" parameterType="Map">
		/* s_pmp101ukrv_jwServiceImpl.insertDetail */
		INSERT INTO PMP300T (
				  COMP_CODE				, DIV_CODE			, OUTSTOCK_NUM		, WORK_SHOP_CODE	, ITEM_CODE		, PATH_CODE  
				, OUTSTOCK_REQ_DATE		, OUTSTOCK_REQ_Q	, OUTSTOCK_Q		, CONTROL_STATUS	, CANCEL_Q
				, REMARK				, REF_WKORD_NUM		, PROJECT_NO		, LOT_NO  
				, OUTSTOCK_REQ_PRSN		, AGREE_STATUS		, AGREE_PRSN		, AGREE_DATE		, TEMPN_01  
				, INSERT_DB_USER		, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
		) VALUES (
				  #{S_COMP_CODE}		, #{DIV_CODE}		, #{OUTSTOCK_NUM}	, #{WORK_SHOP_CODE}	, #{ITEM_CODE}	, #{PATH_CODE}  
				, #{OUTSTOCK_REQ_DATE}	, #{OUTSTOCK_REQ_Q}	, #{OUTSTOCK_Q}		, #{CONTROL_STATUS}	, #{CANCEL_Q}
				, #{REMARK}				, #{TOP_WKORD_NUM}	, #{PROJECT_NO}		, #{LOT_NO}  
				, #{OUTSTOCK_REQ_PRSN}	, #{AGREE_STATUS}	, #{AGREE_PRSN}		, #{AGREE_DATE}		, #{ROLL_CNT}
				, #{S_USER_ID}			, GETDATE()			, #{S_USER_ID}		, GETDATE()
		)
	</insert>

	<insert id="s_pmp101ukrv_jwServiceImpl.insertPmp200" parameterType="Map">
		/* s_pmp101ukrv_jwServiceImpl.insertPmp200 */
		<!--IF EXISTS (SELECT TOP 1 1  
				   FROM   PMP100TV1 WITH (NOLOCK)
				   WHERE  COMP_CODE	= {COMP_CODE}
				   AND	DIV_CODE	= {DIV_CODE}
				   AND	WKORD_NUM	= {TOP_WKORD_NUM} 
				   AND	(  
						  REWORK_YN IS NULL  
				   OR	  REWORK_YN = 'N'  
						)) -->
			INSERT INTO PMP200T(COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, PATH_CODE, WH_CODE
							  , WORK_SHOP_CODE, ALLOCK_Q, UNIT_Q, LOSS_RATE  
							  , ONHAND_Q, IN_PLAN_Q, OUT_PLAN_Q  
							  , OUTSTOCK_REQ_DATE, OUTSTOCK_REQ_Q, OUTSTOCK_NUM, OUT_METH, REF_TYPE  
							  , PROJECT_NO, LOT_NO, REMARK  
							  , UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPN_01)  
			SELECT #{COMP_CODE}, #{DIV_CODE}, #{TOP_WKORD_NUM}, #{ITEM_CODE}, #{PATH_CODE}, WH_CODE
				 , #{WORK_SHOP_CODE}, #{OUTSTOCK_REQ_Q}, #{UNIT_Q}, 0
				 , 0, 0, 0  
				 , #{OUTSTOCK_REQ_DATE}, #{OUTSTOCK_REQ_Q}, #{OUTSTOCK_NUM}, '1', ''
				 , #{PROJECT_NO}, #{LOT_NO}, #{REMARK}  
				 , #{S_USER_ID}, GETDATE(), WH_CODE, #{ROLL_CNT}
			  FROM BSA230T WITH(NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND TREE_CODE = #{WORK_SHOP_CODE}
	</insert>

	<update id="s_pmp101ukrv_jwServiceImpl.updateDetail" parameterType="Map" >
		/* pmp100ukrvServiceImpl.updateDetail */
		UPDATE PMP300T
		   SET OUTSTOCK_REQ_Q	= #{OUTSTOCK_REQ_Q}
			 , TEMPN_01			= #{ROLL_CNT}
			 , REMARK			= #{REMARK}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND OUTSTOCK_NUM		= #{OUTSTOCK_NUM}
		   AND ITEM_CODE		= #{ITEM_CODE}
		   AND REF_WKORD_NUM	= #{TOP_WKORD_NUM}
		   AND PATH_CODE		= #{PATH_CODE}
	</update>
	
	<update id="s_pmp101ukrv_jwServiceImpl.updatePmp200" parameterType="Map" >
		/* s_pmp101ukrv_jwServiceImpl.updatePmp200 */
		UPDATE PMP200T
		   SET OUTSTOCK_REQ_Q	= #{OUTSTOCK_REQ_Q}
			 , TEMPN_01			= #{ROLL_CNT}
			 , REMARK			= #{REMARK}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND WKORD_NUM	= #{WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND REF_TYPE		= #{REF_TYPE}
		   AND PATH_CODE	= #{PATH_CODE}
	</update>
	
	<update id="s_pmp101ukrv_jwServiceImpl.deleteDetail" parameterType="Map">
		/* s_pmp101ukrv_jwServiceImpl.deleteDetail */
		DELETE FROM PMP300T
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND OUTSTOCK_NUM		= #{OUTSTOCK_NUM}
		   AND ITEM_CODE		= #{ITEM_CODE}
		   AND REF_WKORD_NUM	= #{TOP_WKORD_NUM}
		   AND PATH_CODE		= #{PATH_CODE}
	</update>
	
	<update id="s_pmp101ukrv_jwServiceImpl.deletePmp200" parameterType="Map">
		/* s_pmp101ukrv_jwServiceImpl.deletePmp200 */
		DECLARE @refType	NVARCHAR(20)
		
			SET @refType = #{REF_TYPE}
			SET @refType = ISNULL(@refType, '')
		
		DELETE FROM PMP200T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND WKORD_NUM	= #{TOP_WKORD_NUM}
		   AND ITEM_CODE	= #{ITEM_CODE}
		   AND REF_TYPE		= @refType
		   AND PATH_CODE	= #{PATH_CODE}
	</update>


	<insert id="s_pmp101ukrv_jwServiceImpl.insertPMP100" parameterType="Map">
		DECLARE @PRODT_START_DATE	DATETIME
			  , @PRODT_END_DATE		DATETIME
			  , @PRODT_WKORD_DATE	DATETIME
			  , @CONV_START_DATE	NVARCHAR(08)
			  , @CONV_END_DATE		NVARCHAR(08)
			  , @CONV_WKORD_DATE	NVARCHAR(08)
			  
			SET @PRODT_START_DATE	= #{PRODT_START_DATE}
			SET @PRODT_END_DATE		= #{PRODT_END_DATE}
			SET @PRODT_WKORD_DATE	= #{PRODT_WKORD_DATE}

			SET @CONV_START_DATE	= CONVERT(NVARCHAR(08), @PRODT_START_DATE,	112)
			SET @CONV_END_DATE		= CONVERT(NVARCHAR(08), @PRODT_END_DATE,	112)
			SET @CONV_WKORD_DATE	= CONVERT(NVARCHAR(08), @PRODT_WKORD_DATE,	112)
			
			
		INSERT INTO PMP100T
			 ( LINE_SEQ			, PROG_WORK_CODE	, PROG_UNIT_Q		, WKORD_Q
			 , PROG_UNIT		, PROG_RATE			, DIV_CODE			, WKORD_NUM
			 , WORK_SHOP_CODE	, PRODT_START_DATE	, PRODT_END_DATE	, PRODT_WKORD_DATE
			 , ITEM_CODE		, WK_PLAN_NUM		, LINE_END_YN		, TOP_WKORD_NUM
			 , COMP_CODE		, LOT_NO			, PROJECT_NO		, REMARK		, TEMPN_01
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME 
			 , REMARK2
			 )
		SELECT
			   ISNULL(B.LINE_SEQ, 1)	, A.PROG_WORK_CODE			, ISNULL(B.PROG_UNIT_Q, 1)	, #{WKORD_Q}
			 , A.PROG_UNIT				, ISNULL(B.PROG_RATE, 100)	, #{DIV_CODE}				, #{WKORD_NUM}
			 , #{WORK_SHOP_CODE}		, @CONV_START_DATE			, @CONV_END_DATE			, @CONV_WKORD_DATE
			 , #{ITEM_CODE}				, #{WK_PLAN_NUM}			, #{LINE_END_YN}			, #{TOP_WKORD_NUM}
			 , #{S_COMP_CODE}			, #{LOT_NO}					, #{PROJECT_NO}				, #{REMARK}		, #{ROLL_CNT}
			 , #{S_USER_ID}				, GETDATE()					, #{S_USER_ID}				, GETDATE()
			 , #{REMARK2}
		  FROM		PBS200T A WITH(NOLOCK)
		  LEFT JOIN PBS300T B WITH (NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
										   AND B.DIV_CODE		= A.DIV_CODE
										   AND B.ITEM_CODE		= #{ITEM_CODE}
										   AND B.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
										   AND B.PROG_WORK_CODE	= A.PROG_WORK_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.DIV_CODE		= #{DIV_CODE}
		   AND A.WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
	</insert>

	<update id="s_pmp101ukrv_jwServiceImpl.updatePMP100" parameterType="Map" >
		/* pmp100ukrvServiceImpl.updatePMP100 */
		UPDATE PMP100T
		   SET WKORD_Q			= #{WKORD_Q}
			 , TEMPN_01			= #{ROLL_CNT}
			 , REMARK			= #{REMARK}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
			 , REMARK2			= #{REMARK2}
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND WKORD_NUM		= #{WKORD_NUM}
	</update>

	<delete id="s_pmp101ukrv_jwServiceImpl.deletePMP100" parameterType="Map">
		/* s_pmp101ukrv_jwServiceImpl.deletePMP100 */
		DELETE FROM PMP100T
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND WKORD_NUM		= #{WKORD_NUM}
	</delete>



	<!--내부에서 SP_PRODT_WorkOrders_JW 호출  -->
	<select id="s_pmp101ukrv_jwServiceImpl.SP_PRODT_WorkOrders_JW" parameterType="Map"  resultType="rMap">
		/* s_pmp101ukrv_jwServiceImpl.SP_PRODT_WorkOrders_JW */
		BEGIN
			--  입력변수
			DECLARE	@COMP_CODE		NVARCHAR(16)
				  , @DIV_CODE		NVARCHAR(08)
				  , @WKORD_NUM		NVARCHAR(20)
				  , @WK_PLAN_NUM	NVARCHAR(20)
				  , @USER_ID		NVARCHAR(100)

			SET @COMP_CODE		= #{S_COMP_CODE}		-- 회사코드
			SET @DIV_CODE		= #{DIV_CODE}			-- 사업장
			SET @WKORD_NUM		= #{WKORD_NUM}			-- 작지번호
			SET @WK_PLAN_NUM	= #{WK_PLAN_NUM}		-- 생산계획번호
			SET @USER_ID		= #{S_USER_ID}			-- 사용자 ID

			--  출력변수
			DECLARE @ERROR_DESC		NVARCHAR(1000)		-- 에러메세지

			--  내부변수
			DECLARE @ErrorCode		NVARCHAR(20)		-- 에러코드
				  , @ErrorDesc		NVARCHAR(1000)		-- 에러메세지

			SET NOCOUNT ON
			SET ARITHABORT ON

				---------------------------------------------------------------------------
				-- Work Orders Process
				---------------------------------------------------------------------------
				EXEC	uniLITE.SP_PRODT_WorkOrders_JW	@COMP_CODE,		@DIV_CODE,	@WKORD_NUM,
														@WK_PLAN_NUM,	@USER_ID,	@ERROR_DESC OUTPUT

			SET ARITHABORT OFF
			SET NOCOUNT OFF

			ERROR_RETURN:
			IF CHARINDEX(';', @ERROR_DESC) > 0									-- 작업중 에러
				BEGIN
				SET @ErrorCode = SUBSTRING(@ERROR_DESC, 1, CHARINDEX(';', @ERROR_DESC) - 1)
				SET @ErrorDesc = SUBSTRING(@ERROR_DESC, CHARINDEX(';', @ERROR_DESC), LEN(@ERROR_DESC))

				--		GOTO ERROR_RETURN
				END

			SELECT ISNULL(@ErrorCode, '') AS ERROR_CODE, ISNULL(@ErrorDesc, '') AS ERROR_DESC
		END
	</select>






	<!-- 공정정보 조회 -->
	<select id="s_pmp101ukrv_jwServiceImpl.selectProgInfo" parameterType="Map" resultType="rMap">
	/* pmp110ukrv.Cpmp110ukrv[fnProgInfo] Query   */
		DECLARE @COMP_CODE			NVARCHAR(08)
			  , @DIV_CODE			NVARCHAR(08)
			  , @WORK_SHOP_CODE		NVARCHAR(08)
			  , @ITEM_CODE			NVARCHAR(20)
		
		SET	 @COMP_CODE			= #{S_COMP_CODE}
		SET	 @DIV_CODE			= #{DIV_CODE}
		SET	 @WORK_SHOP_CODE	= #{WORK_SHOP_CODE}
		SET	 @ITEM_CODE			= #{ITEM_CODE}
		
		SELECT A.DIV_CODE
			 , A.ITEM_CODE
			 , A.LINE_SEQ
			 , A.PROG_WORK_CODE
			 , B.PROG_WORK_NAME
			 , unilite.fnFormat(@COMP_CODE, ISNULL(A.PROG_UNIT_Q, 1), 'P_FSET_QS') AS PROG_UNIT_Q
			 , ISNULL(A.PROG_UNIT,'') AS PROG_UNIT
		FROM			  PBS300T A WITH(NOLOCK)
			   INNER JOIN PBS200T B WITH(NOLOCK) ON  B.COMP_CODE		= A.COMP_CODE
												 AND B.DIV_CODE			= A.DIV_CODE
												 AND B.PROG_WORK_CODE	= A.PROG_WORK_CODE
												 AND B.WORK_SHOP_CODE	= A.WORK_SHOP_CODE
		WHERE  A.COMP_CODE		= @COMP_CODE
		  AND  ((A.DIV_CODE		= @DIV_CODE			AND @DIV_CODE != '')		OR (@DIV_CODE		= ''))
		  AND  ((B.WORK_SHOP_CODE = @WORK_SHOP_CODE	AND @WORK_SHOP_CODE	!= '')	OR (@WORK_SHOP_CODE	= ''))
		  AND  ((A.ITEM_CODE	  = @ITEM_CODE		AND @ITEM_CODE		!= '')	OR (@ITEM_CODE		= ''))
		ORDER BY LINE_SEQ ASC
	</select>
	
	
	
	<select id="s_pmp101ukrv_jwServiceImpl.subPrintList" parameterType="Map" resultType="rMap">
			DECLARE   @CompCode	 	NVARCHAR(08)	/* 법인코드			*/
				, @UserId		NVARCHAR(100)	/* 사용자ID		*/
				, @LangType		NVARCHAR(2)		/* 언어구분			*/
				, @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
				, @DateFormat	NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
					
		SET @CompCode	= #{S_COMP_CODE}
		SET @UserId		= #{S_USER_ID}
		SET @LangType	= 'KO'
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = N'B044'
		   AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.OUTSTOCK_NUM
			 , A.ITEM_CODE
			 , C.ITEM_NAME
			 , C.SPEC

			 , A.WKORD_NUM															AS TOP_WKORD_NUM
			 , A.WORK_SHOP_CODE
			 
			 , C.ITEM_WIDTH
			 , A.TEMPN_01																AS ROLL_CNT
			 -- , D.TRNS_RATE
			 ,CASE WHEN E.TEMPN_01 = 0 THEN 0
				  ELSE E.WKORD_Q / E.TEMPN_01 END AS TRNS_RATE
		  FROM		 PMP200T A WITH(NOLOCK)

		  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE		= A.COMP_CODE
										   AND C.ITEM_CODE		= A.ITEM_CODE
		  --INNER JOIN BPR200T D WITH(NOLOCK) ON D.COMP_CODE		= A.COMP_CODE
		--								   AND D.DIV_CODE		= A.DIV_CODE
		--								   AND D.ITEM_CODE		= A.ITEM_CODE
		   INNER JOIN PMP100T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE
											AND E.DIV_CODE = A.DIV_CODE
											AND E.WKORD_NUM = A.WKORD_NUM

		  WHERE A.COMP_CODE	= @CompCode
			AND A.DIV_CODE = #{DIV_CODE}
			AND A.WKORD_NUM	= #{TOP_WKORD_NUM}
				
		  ORDER BY A.OUTSTOCK_NUM, A.WKORD_NUM ASC
		  
	</select>
	
	<select id="s_pmp101ukrv_jwServiceImpl.printList" parameterType="Map" resultType="rMap">
		
	SELECT  
		A.COMP_CODE
		,A.DIV_CODE
		,SUBSTRING(A.PRODT_WKORD_DATE, 1, 4)+ '.' + SUBSTRING(A.PRODT_WKORD_DATE, 5, 2)+ '.' +SUBSTRING(A.PRODT_WKORD_DATE, 7, 2) AS TOP_PRODT_WKORD_DATE--작업지시일자
		,A.WORK_SHOP_CODE AS TOP_WORK_SHOP_CODE--작업장
		,R3.TREE_NAME AS TOP_WORK_SHOP_NAME--작업장 이름
		,A.TOP_WKORD_NUM -- 작업지시번호 (헤더)
		,A.WKORD_NUM --작업지시번호 (작업지시내역)
		,A.WORK_SHOP_CODE
		,R2.TREE_NAME AS WORK_SHOP_NAME	--작업장
		,A.ITEM_CODE
		,R1.ITEM_NAME
		,R1.SPEC
		,R1.ITEM_WIDTH
		,A.WKORD_Q --지시수량
		,B.OUTSTOCK_NUM
		,A.TEMPN_01		AS ROLL_CNT
		,A.REMARK2
		FROM PMP100T A WITH(NOLOCK)
   LEFT JOIN PMP300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								   AND B.DIV_CODE = A.DIV_CODE
								   AND B.REF_WKORD_NUM = A.TOP_WKORD_NUM
								   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
   LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									 AND R1.ITEM_CODE = A.ITEM_CODE
   LEFT JOIN BSA230T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.TYPE_LEVEL = A.DIV_CODE
									 AND R2.TREE_CODE = A.WORK_SHOP_CODE
   LEFT JOIN BSA230T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									 AND R3.TYPE_LEVEL = A.DIV_CODE
									 AND R3.TREE_CODE = A.WORK_SHOP_CODE

	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{DIV_CODE}
	  AND A.TOP_WKORD_NUM = #{TOP_WKORD_NUM}
	</select>
	
</mapper>
