<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr130ukrv_mitServiceImpl">
	<!-- 대리점 Excel -->
	<update id="s_bpr130ukrv_mitServiceImpl.insertExcels_bpr130ukrv_mitupload" parameterType="Map">
		 /* 1) 엑셀 파일에 있는 데이터를 임시테이블에 insert */
		DECLARE @USE_YN  NVARCHAR(01)

		    SET @USE_YN = #{USE_YN}
		    SET @USE_YN = ISNULL(@USE_YN, 'Y')

		INSERT INTO BPR130T_2_XLS
		    (
		       _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		    <if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
		     , _EXCEL_HAS_ERROR
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
		     , _EXCEL_ERROR_MSG
		    </if>
		     , COMP_CODE
		     , ITEM_CODE
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		     , ITEM_NAME
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME1)">
		     , ITEM_NAME1
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME2)">
		     , ITEM_NAME2
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SPEC)">
		     , SPEC
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		     , ITEM_LEVEL1
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		     , ITEM_LEVEL2
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		     , ITEM_LEVEL3
		    </if>
		     , STOCK_UNIT
		    <if test="@foren.Ognl@isNotEmpty(UNIT_WGT)">
		     , UNIT_WGT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WGT_UNIT)">
		     , WGT_UNIT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(UNIT_VOL)">
		     , UNIT_VOL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(VOL_UNIT)">
		     , VOL_UNIT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REIM)">
		     , REIM
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(START_DATE)">
		     , START_DATE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , STOP_DATE
		    </if>
		     , USE_YN
		    <if test="@foren.Ognl@isNotEmpty(SPEC_NUM)">
		     , SPEC_NUM
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_MAKER)">
		     , ITEM_MAKER
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_MAKER_PN)">
		     , ITEM_MAKER_PN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_NO)">
		     , HS_NO
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_NAME)">
		     , HS_NAME
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_UNIT)">
		     , HS_UNIT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		     , ITEM_GROUP
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_COLOR)">
		     , ITEM_COLOR
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_SIZE)">
		     , ITEM_SIZE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BARCODE)">
		     , BARCODE
		    </if>
		     , SALE_UNIT
		    <if test="@foren.Ognl@isNotEmpty(TRNS_RATE_F29)">
		     , TRNS_RATE_F29
		    </if>
		     , TAX_TYPE
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_F31)">
		     , CUSTOM_CODE_F31
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">
		     , SALE_BASIS_P
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
		     , DOM_FORIGN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">
		     , STOCK_CARE_YN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TOTAL_ITEM)">
		     , TOTAL_ITEM
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TOTAL_TRAN_RATE)">
		     , TOTAL_TRAN_RATE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(EXCESS_RATE)">
		     , EXCESS_RATE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(USE_BY_DATE)">
		     , USE_BY_DATE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CIR_PERIOD_YN)">
		     , CIR_PERIOD_YN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK1)">
		     , REMARK1
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK2)">
		     , REMARK2
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK3)">
		     , REMARK3
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SQUARE_FT)">
		     , SQUARE_FT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">
		     , BIG_BOX_BARCODE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SMALL_BOX_BARCODE)">
		     , SMALL_BOX_BARCODE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		     , ITEM_ACCOUNT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
		     , SUPPLY_TYPE
		    </if>
		     , ORDER_UNIT
		    <if test="@foren.Ognl@isNotEmpty(TRNS_RATE_F49)">
		     , TRNS_RATE_F49
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_F50)">
		     , CUSTOM_CODE_F50
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		     , WH_CODE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(LOCATION)">
		     , LOCATION
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_PLAN)">
		     , ORDER_PLAN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MATRL_PRESENT_DAY)">
		     , MATRL_PRESENT_DAY
		    </if>
		     , APLY_START_DATE
		    <if test="@foren.Ognl@isNotEmpty(PURCHASE_BASE_P)">
		     , PURCHASE_BASE_P
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		     , ORDER_PRSN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_KIND)">
		     , ORDER_KIND
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SAFE_STOCK_Q)">
		     , SAFE_STOCK_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MINI_PURCH_Q)">
		     , MINI_PURCH_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MAX_PURCH_Q)">
		     , MAX_PURCH_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(NEED_Q_PRESENT_Q)">
		     , NEED_Q_PRESENT_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PURCH_LDTIME)">
		     , PURCH_LDTIME
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BASIS_P)">
		     , BASIS_P
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MINI_PACK_Q)">
		     , MINI_PACK_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_METH)">
		     , OUT_METH
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(RESULT_YN)">
		     , RESULT_YN
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PRODUCT_LDTIME)">
		     , PRODUCT_LDTIME
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ROUT_TYPE)">
		     , ROUT_TYPE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		     , WORK_SHOP_CODE
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MAX_PRODT_Q)">
		     , MAX_PRODT_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STAN_PRODT_Q)">
		     , STAN_PRODT_Q
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PACK_QTY)">
		     , PACK_QTY
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ARRAY_CNT)">
		     , ARRAY_CNT
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_MODEL)">
		     , ITEM_MODEL
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_WIDTH)">
		     , ITEM_WIDTH
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(LOT_YN)">
             , LOT_YN
            </if>
            <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
             , MAN_HOUR
            </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		) VALUES (
		       #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		    <if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
		     , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
		     , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
		    </if>
		     , #{S_COMP_CODE}
		     , REPLACE(#{ITEM_CODE}, ' ', '')
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		     , #{ITEM_NAME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME1)">
		     , #{ITEM_NAME1}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME2)">
		     , #{ITEM_NAME2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SPEC)">
		     , #{SPEC}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		     , #{ITEM_LEVEL1}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		     , #{ITEM_LEVEL2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		     , #{ITEM_LEVEL3}
		    </if>
		     , UPPER(#{STOCK_UNIT})
		    <if test="@foren.Ognl@isNotEmpty(UNIT_WGT)">
		     , #{UNIT_WGT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WGT_UNIT)">
		     , #{WGT_UNIT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(UNIT_VOL)">
		     , #{UNIT_VOL}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(VOL_UNIT)">
		     , #{VOL_UNIT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REIM)">
		     , #{REIM}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(START_DATE)">
		     , #{START_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , #{STOP_DATE}
		    </if>
		     , @USE_YN
		    <if test="@foren.Ognl@isNotEmpty(SPEC_NUM)">
		     , #{SPEC_NUM}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_MAKER)">
		     , #{ITEM_MAKER}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_MAKER_PN)">
		     , #{ITEM_MAKER_PN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_NO)">
		     , #{HS_NO}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_NAME)">
		     , #{HS_NAME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(HS_UNIT)">
		     , #{HS_UNIT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		     , #{ITEM_GROUP}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_COLOR)">
		     , #{ITEM_COLOR}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_SIZE)">
		     , #{ITEM_SIZE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BARCODE)">
		     , #{BARCODE}
		    </if>
		     , UPPER(#{SALE_UNIT})
		    <if test="@foren.Ognl@isNotEmpty(TRNS_RATE_F29)">
		     , #{TRNS_RATE_F29}
		    </if>
		     , #{TAX_TYPE}
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_F31)">
		     , #{CUSTOM_CODE_F31}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">
		     , #{SALE_BASIS_P}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DOM_FORIGN)">
		     , #{DOM_FORIGN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">
		     , #{STOCK_CARE_YN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TOTAL_ITEM)">
		     , #{TOTAL_ITEM}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TOTAL_TRAN_RATE)">
		     , #{TOTAL_TRAN_RATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(EXCESS_RATE)">
		     , #{EXCESS_RATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(USE_BY_DATE)">
		     , #{USE_BY_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CIR_PERIOD_YN)">
		     , #{CIR_PERIOD_YN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK1)">
		     , #{REMARK1}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK2)">
		     , #{REMARK2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK3)">
		     , #{REMARK3}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SQUARE_FT)">
		     , #{SQUARE_FT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">
		     , #{BIG_BOX_BARCODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SMALL_BOX_BARCODE)">
		     , #{SMALL_BOX_BARCODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		     , #{ITEM_ACCOUNT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
		     , #{SUPPLY_TYPE}
		    </if>
		     , UPPER(#{ORDER_UNIT})
		    <if test="@foren.Ognl@isNotEmpty(TRNS_RATE_F49)">
		     , #{TRNS_RATE_F49}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_F50)">
		     , #{CUSTOM_CODE_F50}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		     , #{WH_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(LOCATION)">
		     , #{LOCATION}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_PLAN)">
		     , #{ORDER_PLAN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MATRL_PRESENT_DAY)">
		     , #{MATRL_PRESENT_DAY}
		    </if>
		     , #{APLY_START_DATE}
		    <if test="@foren.Ognl@isNotEmpty(PURCHASE_BASE_P)">
		     , #{PURCHASE_BASE_P}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		     , #{ORDER_PRSN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ORDER_KIND)">
		     , #{ORDER_KIND}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SAFE_STOCK_Q)">
		     , #{SAFE_STOCK_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MINI_PURCH_Q)">
		     , #{MINI_PURCH_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MAX_PURCH_Q)">
		     , #{MAX_PURCH_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(NEED_Q_PRESENT_Q)">
		     , #{NEED_Q_PRESENT_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PURCH_LDTIME)">
		     , #{PURCH_LDTIME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(BASIS_P)">
		     , #{BASIS_P}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MINI_PACK_Q)">
		     , #{MINI_PACK_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(OUT_METH)">
		     , #{OUT_METH}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(RESULT_YN)">
		     , #{RESULT_YN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PRODUCT_LDTIME)">
		     , #{PRODUCT_LDTIME}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ROUT_TYPE)">
		     , #{ROUT_TYPE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		     , #{WORK_SHOP_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(MAX_PRODT_Q)">
		     , #{MAX_PRODT_Q}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(STAN_PRODT_Q)">
		     , #{STAN_PRODT_Q}
		    </if>
		     <if test="@foren.Ognl@isNotEmpty(PACK_QTY)">
		     , #{PACK_QTY}
		    </if>
		     <if test="@foren.Ognl@isNotEmpty(ARRAY_CNT)">
		     , #{ARRAY_CNT}
		    </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_MODEL)">
		     , #{ITEM_MODEL}
		    </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_WIDTH)">
		     , #{ITEM_WIDTH}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(LOT_YN)">
             , #{LOT_YN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
             , #{MAN_HOUR}
            </if>
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<!-- 대리점 데이터 체크 -->
	<select id="s_bpr130ukrv_mitServiceImpl.beforeExcelCheck-1" parameterType="Map" resultType="string">
		/* 2) 업로드 데이터내에 품목코드 null 삭제 체크 */
		DELETE FROM BPR130T_2_XLS
		 WHERE ITEM_CODE IS NULL

 		/* 2-1) 업로드 데이터내에 품목코드 중복여부 체크 */
 		DECLARE @dualItemCode   NVARCHAR(20)  --업로드 파일 내에 중복 기재 된 ITEM_CODE
 		      , @unregiItemCode NVARCHAR(20)  --미 등록 된 ITEM_CODE

		IF EXISTS ( SELECT ITEM_CODE
		              FROM BPR130T_2_XLS WITH (NOLOCK)
		             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		             GROUP BY ITEM_CODE
		            HAVING COUNT(1) > 1 )
		    BEGIN
		        SELECT @dualItemCode = ITEM_CODE
		          FROM BPR130T_2_XLS WITH (NOLOCK)
		         WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		           AND ITEM_CODE    = #{ITEM_CODE}
		         GROUP BY ITEM_CODE
		        HAVING COUNT(1) > 1

		        UPDATE BPR130T_2_XLS
		           SET _EXCEL_HAS_ERROR = 'Y'
		             , _EXCEL_ERROR_MSG = '품번 ('  + @dualItemCode + ')(이)가 중복 되었습니다.'
		         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
		           AND ITEM_CODE        = @dualItemCode
		    END

		ELSE
		    BEGIN
		        /* 2-2) 업로드 데이터내에 미등록 품목정보 체크 */
		        IF EXISTS ( SELECT A.ITEM_CODE
		                      FROM (SELECT ITEM_CODE, ITEM_NAME
		                              FROM BPR130T_2_XLS WITH (NOLOCK)
		                             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                               AND ISNULL(ITEM_NAME, '') = '')       AS A
		                      LEFT JOIN (SELECT ITEM_CODE
		                                   FROM BPR100T  WITH (NOLOCK)
		                                  WHERE COMP_CODE = #{S_COMP_CODE})  AS B ON B.ITEM_CODE = A.ITEM_CODE
		                     WHERE ISNULL(B.ITEM_CODE, '') = ''
		        )
		        BEGIN
		            SELECT @unregiItemCode = A.ITEM_CODE
		              FROM (SELECT ITEM_CODE, ITEM_NAME
		                      FROM BPR130T_2_XLS WITH (NOLOCK)
		                     WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                       AND ISNULL(ITEM_NAME, '') = '')       AS A
		              LEFT JOIN (SELECT ITEM_CODE
		                           FROM BPR100T  WITH (NOLOCK)
		                          WHERE COMP_CODE = #{S_COMP_CODE})  AS B ON B.ITEM_CODE = A.ITEM_CODE
		             WHERE ISNULL(B.ITEM_CODE, '') = ''

		            UPDATE BPR130T_2_XLS
		               SET _EXCEL_HAS_ERROR = 'Y'
		                 , _EXCEL_ERROR_MSG = '품번 ('  + @dualItemCode + ')(이)가 등록되지 않은 품목코드입니다.'
		             WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
		               AND ITEM_CODE        = @unregiItemCode
		        END
		    END
	</select>
	<!-- 대리점 업로드 된 데이터 가져오기 -->
	<select id="s_bpr130ukrv_mitServiceImpl.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
		/*s_bpr130ukrv_mitServiceImpl.selectExcelUploadSheet*/
		SELECT A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     , A._EXCEL_HAS_ERROR
		     , A._EXCEL_ERROR_MSG
		     , A.COMP_CODE
		     , A.ITEM_CODE
		     , A.ITEM_NAME
		     , A.APLY_START_DATE
		     , A.STOCK_UNIT
		     , A.SALE_UNIT
		     , A.TAX_TYPE
		     , A.USE_YN
		  FROM BPR130T_2_XLS A WITH(NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>
	<!-- 대리점 에러메세지 가져오기 -->
	<select id="s_bpr130ukrv_mitServiceImpl.beforeExcelCheck-2" parameterType="Map" resultType="string">
		SELECT MAX(_EXCEL_ERROR_MSG)     AS ERROR_MSG
		  FROM BPR130T_2_XLS WITH (NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		   AND _EXCEL_HAS_ERROR = 'Y'
	</select>

	<!-- 업로드 된 데이터 가져오기 -->
	<select id="s_bpr130ukrv_mitServiceImpl.getData" parameterType="Map" resultType="rMap">
		SELECT  * FROM BPR130T_2_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
	</select>

	<!-- 에러메세지 update -->
	<update id="s_bpr130ukrv_mitServiceImpl.insertErrorMsg">
		INSERT BPR130T_2_XLS
		   (   _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_ERROR_MSG
		     , _EXCEL_HAS_ERROR
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		) VALUES (
		       #{_EXCEL_JOBID}
		     , 0
		     , #{MSG}
		     , 'Y'
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<select id="s_bpr130ukrv_mitServiceImpl.excelValidate-1" parameterType="Map" resultType="rMap">
		DECLARE @JSON_PARAM NVARCHAR(2000), @ERROR_DESC NVARCHAR(2000)
		  --※ 주의 : Json 파람조건에 엔터키 값 없이 해야함.
		  SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","DIV_CODE":"${DIV_CODE}","FILE_NO":"${_EXCEL_JOBID}","USER_ID":"${S_USER_ID}"}'
		  exec uniLITE.SP_INTERFACE_ITEM_OMEGAPLUS @JSON_PARAM, @ERROR_DESC OUTPUT

		  SELECT @ERROR_DESC AS ERROR_DESC
	</select>
    <!--  BPR400T  -->
	<select id="s_bpr130ukrv_mitServiceImpl.excelValidate-2" parameterType="Map" resultType="rMap">
		DECLARE @JSON_PARAM NVARCHAR(2000), @ERROR_DESC NVARCHAR(2000)
		  --※ 주의 : Json 파람조건에 엔터키 값 없이 해야함.
		  SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","DIV_CODE":"${DIV_CODE}","FILE_NO":"${_EXCEL_JOBID}","USER_ID":"${S_USER_ID}"}'
		  exec uniLITE.SP_INTERFACE_ITEM_BPR400T_OMEGAPLUS @JSON_PARAM, @ERROR_DESC OUTPUT

		  SELECT @ERROR_DESC AS ERROR_DESC
	</select>

	<!-- 에러메세지 조회 -->
	<select id="s_bpr130ukrv_mitServiceImpl.getErrMsg" parameterType="Map" resultType="String">
		SELECT MAX(_EXCEL_ERROR_MSG)  AS ERR_MSG
		  FROM BPR130T_2_XLS
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		   AND _EXCEL_HAS_ERROR = 'Y'
	</select>
	<select id="s_bpr130ukrv_mitServiceImpl.agentList" parameterType="Map" resultType="rMap">
		SELECT  SUB_CODE   AS AGENT_COMP_CODE
		      , REF_CODE2  AS AGENT_DIV_CODE
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND MAIN_CODE   = 'B266'
		   AND SUB_CODE    != '$'
		   AND USE_YN      = 'Y'
	</select>
</mapper>