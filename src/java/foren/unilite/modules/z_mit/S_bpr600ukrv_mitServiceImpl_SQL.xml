<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr600ukrv_mitServiceImpl">
	<select id="s_bpr600ukrv_mitServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* s_bpr600ukrv_mitServiceImpl.selectDetailList */
		SELECT *
		  FROM       BARCODE_INFO  A WITH(NOLOCK)
		  INNER JOIN BPR200T       B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                         AND B.DIV_CODE  = A.DIV_CODE
		                                         AND B.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND B.ITEM_NAME LIKE #{ITEM_NAME} + '%'
		</if>
	</select>

	<update id="s_bpr600ukrv_mitServiceImpl.updateDetail" parameterType="Map">
		/* s_sof120ukrv_mitServiceImpl.updateDetail */
		DECLARE @COMP_CODE NVARCHAR(08)
		      , @DIV_CODE  NVARCHAR(08)
		      , @ITEM_CODE NVARCHAR(20)

		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @ITEM_CODE = #{ITEM_CODE}

		IF NOT EXISTS (SELECT TOP 1 1
		                 FROM BPR100T WITH(NOLOCK)
		                WHERE COMP_CODE = @COMP_CODE
		                  AND ITEM_CODE = @ITEM_CODE)
		    BEGIN
		        INSERT INTO BPR100T (
		               COMP_CODE,      ITEM_CODE,      ITEM_NAME
		             , ITEM_NAME1,     ITEM_NAME2,     SPEC
		             , ITEM_LEVEL1
		             , ITEM_LEVEL2
		             , ITEM_LEVEL3
		             , STOCK_UNIT,     UNIT_WGT,       WGT_UNIT,       PIC_FLAG
		             , START_DATE
		             , STOP_DATE,      USE_YN,         SPEC_NUM,       ITEM_MAKER,      ITEM_MAKER_PN
		             , HS_NO,          HS_NAME,        HS_UNIT,        ITEM_GROUP,      ITEM_COLOR,        ITEM_SIZE,     BARCODE,        SALE_UNIT,     TRNS_RATE,     TAX_TYPE
		             , SALE_BASIS_P,   DOM_FORIGN,     STOCK_CARE_YN,  TOTAL_ITEM,      TOTAL_TRAN_RATE,   EXCESS_RATE,   USE_BY_DATE,    CIR_PERIOD_YN, REMARK1,       REMARK2,      REMARK3
		             , AS_BASIS_P,     SQUARE_FT,      PPC,            CBM,             WIDTH,             HEIGHT,        THICK,          GRAVITY,       ITEM_TYPE,     AUTO_FLAG
		             , UNIT_VOL,       VOL_UNIT,       REIM,           BIG_BOX_BARCODE, SMALL_BOX_BARCODE, ORDER_ITEM_YN, IMAGE_FID,      CAR_TYPE,      OEM_ITEM_CODE, AS_ITEM_CODE
		             , B_OUT_YN,       B_OUT_DATE,     MAKE_STOP_YN,   MAKE_STOP_DATE,  ITEM_WIDTH,        ITEM_MODEL,    EXPIRATION_DAY, MAKE_NATION,   REGISTER_NO,   REGISTER_IMAGE
		             , PACKING_SHAPE,  PACKING_TYPE,   DAY_QTY,        EACH_QTY,        EACH_UNIT,         CONTENT_QTY,   ITEM_FLAVOR,    ITEM_FEATURE,  MAKER_NAME,    SALE_NATION
		             , SALE_NAME,      UNIT_Q,         RECOMMAND_EAT
		             , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		        ) 
		        SELECT A.COMP_CODE,    @ITEM_CODE,     REPLACE(B.S, '1.jpg','')
		             , '',             '',             B.M
		             , CASE WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('01', '02', '03', '05', '11', '12', '13', '15', '21', '22', '23', '25', '31', '32', '33', '35'
		                                                       , '41', '42', '43', '45', '51', '52', '53', '55', '61', '62', '63', '65') THEN '100'
		                    ELSE '*' 
		               END                                                                             --*대분류
		             , CASE WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('01', '02', '03', '05', '11', '12', '13', '15', '21', '22', '23', '25', '31', '32', '33', '35'
		                                                       , '41', '42', '43', '45', '51', '52', '53', '55', '61', '62', '63', '65') THEN '110'
		                    ELSE '*' 
		               END                                                                             --*중분류
		             , CASE WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('01', '02', '03', '05') THEN '114'    --식도
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('11', '12', '13', '15') THEN '112'    --담도
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('21', '22', '23', '25') THEN '113'    --대장
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('31', '32', '33', '35') THEN '115'    --십이지장
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('41', '42', '43', '45') THEN '111'    --기관지
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('51', '52', '53', '55') THEN '116'    --창자
		                    WHEN SUBSTRING(@ITEM_CODE, 1, 2) IN ('61', '62', '63', '65') THEN '117'    --췌장
		                    ELSE '*' 
		               END                                                                             --*소분류
		             , A.STOCK_UNIT,     A.UNIT_WGT,       A.WGT_UNIT,       A.PIC_FLAG
		             , CONVERT(NVARCHAR(08), GETDATE(), 112)
		             , A.STOP_DATE,      A.USE_YN,         '' SPEC_NUM,      NULL AS ITEM_MAKER,  NULL AS ITEM_MAKER_PN
		             , NULL AS HS_NO,          NULL AS HS_NAME,        A.HS_UNIT,        NULL AS ITEM_GROUP,      NULL AS ITEM_COLOR,        NULL AS ITEM_SIZE,     NULL AS BARCODE,        A.SALE_UNIT,     A.TRNS_RATE,     A.TAX_TYPE
		             , 0 AS SALE_BASIS_P,   A.DOM_FORIGN,     A.STOCK_CARE_YN,  NULL AS TOTAL_ITEM,      A.TOTAL_TRAN_RATE,   A.EXCESS_RATE,   A.USE_BY_DATE,    A.CIR_PERIOD_YN, '' REMARK1,       #{C} REMARK2,      '' REMARK3                   --20200303 수정: remark2필드에 c값 insert
		             , 0 AS_BASIS_P,     A.SQUARE_FT,      A.PPC,            A.CBM,             A.WIDTH,             A.HEIGHT,        A.THICK,          A.GRAVITY,       A.ITEM_TYPE,     A.AUTO_FLAG
		             , A.UNIT_VOL,       A.VOL_UNIT,       A.REIM,           A.BIG_BOX_BARCODE, A.SMALL_BOX_BARCODE, A.ORDER_ITEM_YN, A.IMAGE_FID,      A.CAR_TYPE,      A.OEM_ITEM_CODE, A.AS_ITEM_CODE
		             , A.B_OUT_YN,       A.B_OUT_DATE,     A.MAKE_STOP_YN,   A.MAKE_STOP_DATE,  A.ITEM_WIDTH,        A.ITEM_MODEL,    A.EXPIRATION_DAY, A.MAKE_NATION,   A.REGISTER_NO,   A.REGISTER_IMAGE
		             , A.PACKING_SHAPE,  A.PACKING_TYPE,   A.DAY_QTY,        A.EACH_QTY,        A.EACH_UNIT,         A.CONTENT_QTY,   A.ITEM_FLAVOR,    A.ITEM_FEATURE,  A.MAKER_NAME,    A.SALE_NATION
		             , A.SALE_NAME,      A.UNIT_Q,         A.RECOMMAND_EAT
		             , #{S_USER_ID},     GETDATE(),        #{S_USER_ID},     GETDATE()
		          FROM      BPR100T          A WITH(NOLOCK)
		          LEFT JOIN BARCODE_INFO_XLS B WITH(NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                   AND B.ITEM_CODE     = @ITEM_CODE
		                                                   AND B._EXCEL_JOBID  = #{_EXCEL_JOBID}
		                                                   AND B._EXCEL_ROWNUM = #{_EXCEL_ROWNUM}
		         WHERE A.COMP_CODE = @COMP_CODE
		           AND A.ITEM_CODE = '01-0507'   --기준 품목정보


		        INSERT INTO BPR200T (
		               COMP_CODE,          DIV_CODE,          ITEM_CODE,          ITEM_NAME,                ORDER_UNIT,           TRNS_RATE,           ITEM_ACCOUNT,         SUPPLY_TYPE,        BASIS_P,              SAFE_STOCK_Q
		             , EXPENSE_RATE,       ROUT_TYPE,         WORK_SHOP_CODE,     OUT_METH,                 PURCH_LDTIME,         PRODUCT_LDTIME,      MINI_PURCH_Q,         WH_CODE,            ABC_FLAG,             CUSTOM_CODE
		             , ORDER_PRSN,         PURCHASE_BASE_P,   COST_PRICE,         COST_YN,                  REAL_CARE_YN,         REAL_CARE_PERIOD,    ROP_YN,               DAY_AVG_SPEND,      ORDER_POINT,          ORDER_KIND
		             , EXCESS_RATE,        RESULT_YN,         LOCATION,           ORDER_PLAN,               MATRL_PRESENT_DAY,    NEED_Q_PRESENT,      EXC_STOCK_CHECK_YN,   LOT_SIZING,         PRODT_PRESENT_DAY,    LOT_SIZING_Q
		             , MINI_PACK_Q,        MINI_LOT_Q,        MAX_PRODT_Q,        STAN_PRODT_Q,             INSTOCK_PLAN_Q,       OUTSTOCK_Q,          NEED_Q_PRESENT_Q,     MAX_PURCH_Q,        DIST_LDTIME,          BAD_RATE
		             , ORDER_METH,         ATP_LDTIME,        INSPEC_YN,          INSPEC_METH_MATRL,        INSPEC_METH_PROG,     INSPEC_METH_PRODT,   ITEM_TYPE,            DELIVE_GUBUN,       CREATE_DATE,          ITEM_GUBUN
		             , STOCK_TYPE,         MAIN_CENTER,       LEGAL_TXT_RATE,     LEGAL_DATE_FR,            LEGAL_DATE_TO,        UOM_UNIT,            UOM_RATE,             MARK_UP,            BUY_RATE,             BUY_CUSTOM
		             , ORIGIN_AREA,        PROD_AREA,         NATIVE_YN,          NATIVE_AREA,              NEAR_YN,              REMARK_AREA,         TOTAL_WGT,            REALIN_YN,          DELIVE_LDTIME,        CLOSE_TIME_CODE
		             , MON_YN, TUE_YN,     WED_YN,            THU_YN,             FRI_YN,                   SAT_YN,               SUN_YN, BL_NUM,      PRICE_GROUP,          COMMITEM_YN
		             , PO_TYPE, ROPS_YN,   PROC_TYPE,         PRE_LDTIME,         TIME_ZONE,                WH_PRSN,              CP_DISTR_MAT_YN,     CP_DISTR_YN,          DISTR_TYPE,         LOSS_DISTR_YN,        LLC_COST_TYPE
		             , COST_REF_YN,        LAST_PRODT_YN,     BIN_FLOOR,          SMALL_TRNS_RATE,          CONSIGNMENT_FEE,      BIG_BOX_BARCODE,     SMALL_BOX_BARCODE,    BARCODE,            BIN_NUM,              MEMBER_DISCOUNT_YN
		             , PROMO_YYYY,         PROMO_CD,          MIX_MATCH_TYPE,     FIRST_PURCHASE_DATE,      LAST_PURCHASE_DATE,   FIRST_SALES_DATE,    LAST_SALES_DATE,      LAST_RETURN_DATE,   LAST_DELIVERY_DATE,   LAST_DELIVERY_CUSTOM
		             , K_PRINTER,          LOT_YN,            PHANTOM_YN,         IF_SEND_DATETIME,         IF_RECV_DATETIME,     PRODT_RATE,          PACK_QTY,             CERT_TYPE,          ARRAY_CNT
		             , MAN_HOUR,           PROD_DATE,         PACK_TYPE,          KEEP_TEMPER,              CARE_YN,              CARE_REASON,         INSERT_APPR_TYPE,     FORM_TYPE,          COATING,              GOLD_WIRE
		             , RISK_GRADE,         UPN_CODE,          INSERT_APPR_CODE,   BARE_CODE
		             , INSERT_DB_USER,     INSERT_DB_TIME,    UPDATE_DB_USER,     UPDATE_DB_TIME
		        ) 
		        SELECT A.COMP_CODE,        A.DIV_CODE,        @ITEM_CODE,         REPLACE(B.S, '1.jpg',''), A.ORDER_UNIT,         A.TRNS_RATE,         A.ITEM_ACCOUNT,       A.SUPPLY_TYPE,      A.BASIS_P,            A.SAFE_STOCK_Q
		             , A.EXPENSE_RATE,     A.ROUT_TYPE,       A.WORK_SHOP_CODE,   A.OUT_METH,               A.PURCH_LDTIME,       A.PRODUCT_LDTIME,    A.MINI_PURCH_Q,       A.WH_CODE,          A.ABC_FLAG,           A.CUSTOM_CODE
		             , A.ORDER_PRSN,       A.PURCHASE_BASE_P, 0 COST_PRICE,       A.COST_YN,                A.REAL_CARE_YN,       A.REAL_CARE_PERIOD,  A.ROP_YN,             A.DAY_AVG_SPEND,    A.ORDER_POINT,        A.ORDER_KIND
		             , A.EXCESS_RATE,      A.RESULT_YN,       A.LOCATION,         A.ORDER_PLAN,             A.MATRL_PRESENT_DAY,  A.NEED_Q_PRESENT,    A.EXC_STOCK_CHECK_YN, A.LOT_SIZING,       A.PRODT_PRESENT_DAY,  A.LOT_SIZING_Q
		             , A.MINI_PACK_Q,      A.MINI_LOT_Q,      0 MAX_PRODT_Q,      0 STAN_PRODT_Q,           0 INSTOCK_PLAN_Q,     0 OUTSTOCK_Q,        0 NEED_Q_PRESENT_Q,   A.MAX_PURCH_Q,      A.DIST_LDTIME,        A.BAD_RATE
		             , A.ORDER_METH,       A.ATP_LDTIME,      A.INSPEC_YN,        A.INSPEC_METH_MATRL,      A.INSPEC_METH_PROG,   A.INSPEC_METH_PRODT, A.ITEM_TYPE,          A.DELIVE_GUBUN,     A.CREATE_DATE,        A.ITEM_GUBUN
		             , A.STOCK_TYPE,       A.MAIN_CENTER,     A.LEGAL_TXT_RATE,   A.LEGAL_DATE_FR,          A.LEGAL_DATE_TO,      A.UOM_UNIT,          A.UOM_RATE,           A.MARK_UP,          A.BUY_RATE,           A.BUY_CUSTOM
		             , A.ORIGIN_AREA,      A.PROD_AREA,       A.NATIVE_YN,        A.NATIVE_AREA,            A.NEAR_YN,            A.REMARK_AREA,       A.TOTAL_WGT,          A.REALIN_YN,        A.DELIVE_LDTIME,      A.CLOSE_TIME_CODE
		             , A.MON_YN, TUE_YN,   A.WED_YN,          A.THU_YN,           A.FRI_YN,                 A.SAT_YN,             A.SUN_YN, BL_NUM,    A.PRICE_GROUP,        A.COMMITEM_YN
		             , A.PO_TYPE, ROPS_YN, A.PROC_TYPE,       A.PRE_LDTIME,       A.TIME_ZONE,              A.WH_PRSN,            A.CP_DISTR_MAT_YN,   A.CP_DISTR_YN,        A.DISTR_TYPE,       A.LOSS_DISTR_YN,      A.LLC_COST_TYPE
		             , A.COST_REF_YN,      A.LAST_PRODT_YN,   A.BIN_FLOOR,        A.SMALL_TRNS_RATE,        A.CONSIGNMENT_FEE,    A.BIG_BOX_BARCODE,   A.SMALL_BOX_BARCODE,  A.BARCODE,          A.BIN_NUM,            A.MEMBER_DISCOUNT_YN
		             , A.PROMO_YYYY,       A.PROMO_CD,        A.MIX_MATCH_TYPE,   A.FIRST_PURCHASE_DATE,    A.LAST_PURCHASE_DATE, A.FIRST_SALES_DATE,  A.LAST_SALES_DATE,    A.LAST_RETURN_DATE, A.LAST_DELIVERY_DATE, A.LAST_DELIVERY_CUSTOM
		             , A.K_PRINTER,        A.LOT_YN,          A.PHANTOM_YN,       A.IF_SEND_DATETIME,       A.IF_RECV_DATETIME,   A.PRODT_RATE,        A.PACK_QTY,           A.CERT_TYPE,        A.ARRAY_CNT
		             , A.MAN_HOUR,         A.PROD_DATE,       A.PACK_TYPE,        A.KEEP_TEMPER,            A.CARE_YN,            A.CARE_REASON,       A.INSERT_APPR_TYPE,   A.FORM_TYPE,        NULL AS COATING,            NULL AS GOLD_WIRE
		             , NULL AS RISK_GRADE,       NULL AS UPN_CODE,        A.INSERT_APPR_CODE, NULL AS BARE_CODE
		             , #{S_USER_ID},       GETDATE(),         #{S_USER_ID},       GETDATE()
		          FROM      BPR200T          A WITH(NOLOCK)
		          LEFT JOIN BARCODE_INFO_XLS B WITH(NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                   AND B.DIV_CODE      = A.DIV_CODE
		                                                   AND B.ITEM_CODE     = @ITEM_CODE
		                                                   AND B._EXCEL_JOBID  = #{_EXCEL_JOBID}
		                                                   AND B._EXCEL_ROWNUM = #{_EXCEL_ROWNUM}
		         WHERE A.COMP_CODE     = @COMP_CODE
		           AND A.DIV_CODE      = @DIV_CODE
		           AND A.ITEM_CODE     = '01-0507'   --기준 품목정보
		    END
		--20200303 추가: 있을 때는 bpr100t.remark2에 'C'컬럼 값을 upate
		ELSE
		    BEGIN
		        UPDATE BPR100T
		           SET REMARK2 = #{C}
		         WHERE COMP_CODE = @COMP_CODE
		           AND ITEM_CODE = @ITEM_CODE
		    END


		MERGE INTO BARCODE_INFO                          A
		USING ( SELECT @COMP_CODE      AS COMP_CODE
		             , @DIV_CODE       AS DIV_CODE
		             , @ITEM_CODE      AS ITEM_CODE
		       )                                         B  ON B.COMP_CODE  = A.COMP_CODE
		                                                   AND B.DIV_CODE   = A.DIV_CODE
		                                                   AND B.ITEM_CODE  = A.ITEM_CODE
		WHEN MATCHED THEN
		UPDATE 
		   SET B  = #{B}
		     , C  = #{C}
		     , D  = #{D}
		     , E  = #{E}
		     , F  = #{F}
		     , G  = #{G}
		     , H  = #{H}
		     , I  = #{I}
		     , J  = #{J}
		     , K  = #{K}
		     , L  = #{L}
		     , M  = #{M}
		     , N  = #{N}
		     , O  = #{O}
		     , P  = #{P}
		     , Q  = #{Q}
		     , R  = #{R}
		     , S  = #{S}
		     , T  = #{T}
		     , U  = #{U}
		     , V  = #{V}
		     , W  = #{W}
		     , X  = #{X}
		     , Y  = #{Y}
		     , Z  = #{Z}
		     , AA = #{AA}
		     , AB = #{AB}
		     , AC = #{AC}
		     , AD = #{AD}
		     , AE = #{AE}
		     , AF = #{AF}
		     , AG = #{AG}
		     , AH = #{AH}
		     , AI = #{AI}
		     , AJ = #{AJ}
		     , AK = #{AK}
		     , AL = #{AL}
		     , AM = #{AM}
		     , AN = #{AN}
		     , AO = #{AO}
		     , AP = #{AP}
		     , AQ = #{AQ}
		     , AR = #{AR}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		       COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , B
		     , C
		     , D
		     , E
		     , F
		     , G
		     , H
		     , I
		     , J
		     , K
		     , L
		     , M
		     , N
		     , O
		     , P
		     , Q
		     , R
		     , S
		     , T
		     , U
		     , V
		     , W
		     , X
		     , Y
		     , Z
		     , AA
		     , AB
		     , AC
		     , AD
		     , AE
		     , AF
		     , AG
		     , AH
		     , AI
		     , AJ
		     , AK
		     , AL
		     , AM
		     , AN
		     , AO
		     , AP
		     , AQ
		     , AR
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{B}
		     , #{C}
		     , #{D}
		     , #{E}
		     , #{F}
		     , #{G}
		     , #{H}
		     , #{I}
		     , #{J}
		     , #{K}
		     , #{L}
		     , #{M}
		     , #{N}
		     , #{O}
		     , #{P}
		     , #{Q}
		     , #{R}
		     , #{S}
		     , #{T}
		     , #{U}
		     , #{V}
		     , #{W}
		     , #{X}
		     , #{Y}
		     , #{Z}
		     , #{AA}
		     , #{AB}
		     , #{AC}
		     , #{AD}
		     , #{AE}
		     , #{AF}
		     , #{AG}
		     , #{AH}
		     , #{AI}
		     , #{AJ}
		     , #{AK}
		     , #{AL}
		     , #{AM}
		     , #{AN}
		     , #{AO}
		     , #{AP}
		     , #{AQ}
		     , #{AR}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		);
	</update>

	<delete id="s_bpr600ukrv_mitServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM BARCODE_INFO
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</delete>



	<!-- Excel Upload-->
	<update id="s_bpr600ukrv_mitServiceImpl.insertExcels_bpr600ukrv_mitUpload" parameterType="Map">
		/* s_bpr600ukrv_mitServiceImpl.insertExcels_bpr600ukrv_mitUpload */
		INSERT INTO BARCODE_INFO_XLS
		    (
		       _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     , COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , B
		     , C
		     , D
		     , E
		     , F
		     , G
		     , H
		     , I
		     , J
		     , K
		     , L
		     , M
		     , N
		     , O
		     , P
		     , Q
		     , R
		     , S
		     , T
		     , U
		     , V
		     , W
		     , X
		     , Y
		     , Z
		     , AA
		     , AB
		     , AC
		     , AD
		     , AE
		     , AF
		     , AG
		     , AH
		     , AI
		     , AJ
		     , AK
		     , AL
		     , AM
		     , AN
		     , AO
		     , AP
		     , AQ
		     , AR
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
		     , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
		     , #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{B}
		     , #{C}
		     , #{D}
		     , #{E}
		     , #{F}
		     , #{G}
		     , #{H}
		     , #{I}
		     , #{J}
		     , #{K}
		     , #{L}
		     , #{M}
		     , #{N}
		     , #{O}
		     , #{P}
		     , #{Q}
		     , #{R}
		     , #{S}
		     , #{T}
		     , #{U}
		     , #{V}
		     , #{W}
		     , #{X}
		     , #{Y}
		     , #{Z}
		     , #{AA}
		     , #{AB}
		     , #{AC}
		     , #{AD}
		     , #{AE}
		     , #{AF}
		     , #{AG}
		     , #{AH}
		     , #{AI}
		     , #{AJ}
		     , #{AK}
		     , #{AL}
		     , #{AM}
		     , #{AN}
		     , #{AO}
		     , #{AP}
		     , #{AQ}
		     , #{AR}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="s_bpr600ukrv_mitServiceImpl.getData" parameterType="Map" resultType="rMap">
		/* s_bpr600ukrv_mitServiceImpl.getData */
		SELECT *
		  FROM      BARCODE_INFO_XLS A WITH(NOLOCK)
		  LEFT JOIN BPR200T          B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                           AND B.DIV_CODE  = A.DIV_CODE
		                                           AND B.ITEM_CODE = A.ITEM_CODE
		 WHERE A._EXCEL_JOBID	 = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_ROWNUM
	</select>

	<select id="s_bpr600ukrv_mitServiceImpl.checkItem" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'
			IF NOT EXISTS ( SELECT TOP 1 1
							  FROM BPR200T WITH(NOLOCK)
							 WHERE COMP_CODE = #{COMP_CODE}
							   AND DIV_CODE  = #{DIV_CODE}
							   AND ITEM_CODE = #{ITEM_CODE}
				  		  )
			BEGIN
				SET @CHECK_DATA = 'Y'
			END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<update id="s_bpr600ukrv_mitServiceImpl.insertErrorMsg">
		UPDATE BARCODE_INFO_XLS
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>
</mapper>