<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp110ukrv_mitServiceImpl">
	<select id="s_pmp110ukrv_mitServiceImpl.dataCheck" parameterType="Map" resultType="rMap">
		SELECT TOP 1 WKORD_NUM
		  FROM PMP100T   WITH (NOLOCK)
		 WHERE COMP_CODE=#{S_COMP_CODE}
		   AND LINE_END_YN    = 'Y'
		   AND DIV_CODE       = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		   AND PRODT_START_DATE &gt;= #{PRODT_START_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		   AND PRODT_START_DATE &lt;= #{PRODT_END_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		   AND WKORD_NUM=#{WKORD_NUM}
		</if>
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectFormType" parameterType="Map" resultType="rMap">
		SELECT CASE WHEN ISNULL(SHIFT_CD,'') = '' THEN 'R' ELSE 'S' END AS FORM_TYPE
		     , ISNULL(SHIFT_CD,'') AS SHIFT_CD
		  FROM BSA230T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND TYPE_LEVEL = #{DIV_CODE}
		   AND TREE_CODE  = #{WORK_SHOP_CODE}
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		--스탠트 엮기 작업지시서
		SELECT A.PRODT_WKORD_DATE, A.PRODT_END_DATE,  A.PRODT_PRSN
			 --, A.LOT_NO
			 -- 삽입기구 반제품의 경우 제품작지번호 표시 (20200624)
			 , CASE A.WORK_SHOP_CODE WHEN 'W40' THEN A.LOT_NO	--제품
									 WHEN 'W50' THEN A.LOT_NO	--제품
									 WHEN 'W30' THEN ISNULL((SELECT TOP 1 LOT_NO 
															 FROM  PMP100T WITH (NOLOCK) 
															 WHERE COMP_CODE	= A.COMP_CODE 
															 AND   DIV_CODE		= A.DIV_CODE 
															 AND   WKORD_NUM	= A.TOP_WKORD_NUM ),A.WKORD_NUM)			--삽입기구
				  					 ELSE A.WKORD_NUM + (CASE WHEN ISNULL(A.PRODT_PRSN,'') = '' THEN '' ELSE '-'+ A.PRODT_PRSN END) 
			   END AS LOT_NO
			 , A.WKORD_Q, A.ITEM_CODE, D.ITEM_NAME, D.ITEM_NAME1, D.SPEC
		     , E.GOLD_WIRE
		     , C.PROG_WORK_NAME, C.PROG_UNIT, A.EQUIP_CODE, F.EQU_NAME
		     , A.WKORD_NUM 
		     , R1.CODE_NAME AS WKORD_PRSN_NAME
		     , D.ITEM_NAME2
		    --,A.ORDER_NUM
		     , A.SO_NUM +'-'+ CONVERT(VARCHAR,A.SO_SEQ) AS ORDER_NUM
		     , R2.CUSTOM_NAME
		    --,A.LOT_NO
		    --,A.WKORD_Q
		    --,A.PRODT_WKORD_DATE
		    ,(SELECT 
		T.END_DATE 
		FROM 
		(
		SELECT
		    ROW_NUMBER() OVER( ORDER BY END_DATE) AS RN
		         , A.END_DATE
		      FROM BCM420T AS A
		     WHERE A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.CAL_TYPE       = '4'
		       AND (SELECT COUNT(*)
		              FROM BCM400T
		             WHERE COMP_CODE  = #{S_COMP_CODE}
		               AND CAL_TYPE   = '4'
		               AND HOLY_TYPE != '0'
		               AND CAL_DATE  &gt;= A.START_DATE
		               AND CAl_DATE  &lt;= A.END_DATE) = 1
		) T
		WHERE RN = 
		(SELECT S.RN -1
		    FROM (
		        SELECT
		            ROW_NUMBER() OVER( ORDER BY END_DATE) AS RN, A.END_DATE
		          FROM BCM420T AS A
		         WHERE A.COMP_CODE      = #{S_COMP_CODE}
		           AND A.CAL_TYPE       = '4'
		           AND (SELECT COUNT(*)
		                  FROM BCM400T
		                 WHERE COMP_CODE  = #{S_COMP_CODE}
		                   AND CAL_TYPE   = '4'
		                   AND HOLY_TYPE != '0'
		                   AND CAL_DATE  &gt;= A.START_DATE
		                   AND CAl_DATE  &lt;= A.END_DATE) = 1
		) S
		    WHERE S.END_DATE = A.PRODT_END_DATE
		)
		)    AS PRODT_END_DATE_1-- 삽입기구예정일
		
		,(SELECT 
		T.END_DATE
		FROM 
		(
		SELECT
		    ROW_NUMBER() OVER( ORDER BY END_DATE) AS RN
		         , A.END_DATE
		      FROM BCM420T AS A
		     WHERE A.COMP_CODE      = #{S_COMP_CODE}
		       AND A.CAL_TYPE       = '4'
		       AND (SELECT COUNT(*)
		              FROM BCM400T
		             WHERE COMP_CODE  = #{S_COMP_CODE}
		               AND CAL_TYPE   = '4'
		               AND HOLY_TYPE != '0'
		               AND CAL_DATE  &gt;= A.START_DATE
		               AND CAl_DATE  &lt;= A.END_DATE) = 1
		) T
		
		WHERE RN = 
		(SELECT S.RN -3
		    FROM (
		        SELECT
		            ROW_NUMBER() OVER( ORDER BY END_DATE) AS RN, A.END_DATE
		          FROM BCM420T AS A
		         WHERE A.COMP_CODE      = #{S_COMP_CODE}
		           AND A.CAL_TYPE       = '4'
		           AND (SELECT COUNT(*)
		                  FROM BCM400T
		                 WHERE COMP_CODE  = #{S_COMP_CODE}
		                   AND CAL_TYPE   = '4'
		                   AND HOLY_TYPE != '0'
		                   AND CAL_DATE  &gt;= A.START_DATE
		                   AND CAl_DATE  &lt;= A.END_DATE) = 1
		) S
		    WHERE S.END_DATE =  A.PRODT_END_DATE
		)
		) AS PRODT_END_DATE_3-- 세척예정일
		    ,A.PRODT_END_DATE -- 조립포장예정일
		    --, A.ITEM_CODE, D.ITEM_NAME -- 품번
		    --, D.SPEC -- 규격
		    --, D.ITEM_NAME1 -- 주요사항
		    ,'' AS AAA -- 라쏘 (컬럼 추가예정)
		
		    ,D.REMARK1 -- 특이사항
		    ,D.REMARK2 -- 주요사항
		    ,D.REMARK3 --라쏘
		    --라벨 
		     , #{IMAGE_PATH} + 'A' + CONVERT(VARCHAR, FLOOR(RAND(CHECKSUM(NEWID()))*(10-1)+1)) +'.png' AS SIGN_MIT_A
		     , #{IMAGE_PATH} + 'B' + CONVERT(VARCHAR, FLOOR(RAND(CHECKSUM(NEWID()))*(10-1)+1)) +'.png' AS SIGN_MIT_B
		     , #{IMAGE_PATH} + 'C' + CONVERT(VARCHAR, FLOOR(RAND(CHECKSUM(NEWID()))*(10-1)+1)) +'.png' AS SIGN_MIT_C
		     , A.REMARK
		     , ISNULL((SELECT TOP 1 S2.SPEC 
		        FROM PMP100T S1 WITH (NOLOCK) 
		             INNER JOIN BPR100T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.ITEM_CODE=S2.ITEM_CODE
		             INNER JOIN BPR200T S3 WITH (NOLOCK) ON S1.COMP_CODE=S3.COMP_CODE AND S1.DIV_CODE=S3.DIV_CODE AND S1.ITEM_CODE=S3.ITEM_CODE
		        WHERE S1.COMP_CODE=A.COMP_CODE
		        AND S1.DIV_CODE=A.DIV_CODE
		        AND S1.WKORD_NUM = A.TOP_WKORD_NUM
		        AND S3.ITEM_ACCOUNT = '10'
		        AND S1.LINE_END_YN = 'Y' ),'') 
			+ ' / ' + 
				ISNULL((SELECT TOP 1 S2.SPEC 
		        FROM PMP200T S1 WITH (NOLOCK) 
		             INNER JOIN BPR100T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.ITEM_CODE=S2.ITEM_CODE
		        WHERE S1.COMP_CODE=A.COMP_CODE
		        AND S1.DIV_CODE=A.DIV_CODE
		        AND S1.WKORD_NUM = A.TOP_WKORD_NUM
		        AND ((S2.ITEM_LEVEL1='100' AND S2.ITEM_LEVEL2='160' AND S2.ITEM_LEVEL3 IN ('161','162')) OR S1.ITEM_CODE LIKE '10%')
				),'') AS PROD_ITEM_SPEC    
		    ,R3.PO_NUM
			, #{IMAGE_PATH} + SUBSTRING(PRODT_WKORD_DATE,5,2) + '-'+ CONVERT(VARCHAR, FLOOR(RAND(CHECKSUM(NEWID()))*(5-1)+1))  + '.png' AS SIGN_DATE1
		    , #{IMAGE_PATH} + SUBSTRING(PRODT_WKORD_DATE,7,2) + '-'+ CONVERT(VARCHAR, FLOOR(RAND(CHECKSUM(NEWID()))*(5-1)+1))  + '.png' AS SIGN_DATE2
			   
		    <if test="WORK_SHOP_CODE == &quot;W30&quot;">
		    ,(SELECT ITEM_CODE
                FROM PMP100T
               WHERE COMP_CODE = #{S_COMP_CODE}
                 AND DIV_CODE  = #{DIV_CODE}
                 AND WKORD_NUM = A.TOP_WKORD_NUM
                 AND LINE_END_YN = 'Y') AS PROD_ITEM_CODE 
            </if>
		FROM PMP100T A WITH (NOLOCK)
		     INNER JOIN BSA230T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.TYPE_LEVEL AND A.WORK_SHOP_CODE=B.TREE_CODE
		     INNER JOIN PBS200T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.WORK_SHOP_CODE=C.WORK_SHOP_CODE AND A.PROG_WORK_CODE=C.PROG_WORK_CODE
		     INNER JOIN BPR100T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.ITEM_CODE=D.ITEM_CODE
		     INNER JOIN BPR200T E WITH (NOLOCK) ON A.COMP_CODE=E.COMP_CODE AND A.DIV_CODE=E.DIV_CODE AND A.ITEM_CODE=E.ITEM_CODE
		     LEFT  JOIN EQU200T F WITH (NOLOCK) ON A.COMP_CODE=F.COMP_CODE AND A.DIV_CODE=F.DIV_CODE AND A.EQUIP_CODE=F.EQU_CODE AND F.EQU_CODE_TYPE='2'
		     LEFT  JOIN BSA100T R1 WITH (NOLOCK) ON R1.COMP_CODE = A.COMP_CODE AND R1.MAIN_CODE = 'P510' AND R1.SUB_CODE != '$' AND R1.SUB_CODE = A.WKORD_PRSN
		     
		     INNER JOIN (SELECT DISTINCT S1.COMP_CODE
		                    , S1.WKORD_NUM
		                    , ISNULL(S2.CONTROL_STATUS, 3) AS CONTROL_STATUS
		                 FROM           PMP100T S1 WITH (NOLOCK)
		                      LEFT JOIN PMR100T S2 WITH (NOLOCK) ON S2.COMP_CODE   = S1.COMP_CODE
		                                                       AND S2.WKORD_NUM   = S1.WKORD_NUM
		                                                       AND S2.LINE_END_YN = 'Y'
		                WHERE S1.COMP_CODE   = #{S_COMP_CODE}
		                  AND S1.LINE_END_YN = 'Y'
		                GROUP BY S1.COMP_CODE, S1.WKORD_NUM, S2.CONTROL_STATUS) AS G ON G.COMP_CODE = A.COMP_CODE
		                                                                         AND G.WKORD_NUM = A.WKORD_NUM
		     
		    LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
		                                     AND R2.CUSTOM_CODE = A.CUSTOM_CODE
		
		    LEFT JOIN SOF110T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
		                                     AND R3.DIV_CODE = A.DIV_CODE
		                                     AND R3.ORDER_NUM = A.SO_NUM
		                                     AND R3.SER_NO = A.SO_SEQ
		            
		WHERE A.COMP_CODE=#{S_COMP_CODE}
		AND A.DIV_CODE=#{DIV_CODE}
		AND C.USE_YN='Y'
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		AND A.PRODT_START_DATE &gt;= #{PRODT_START_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		AND A.PRODT_START_DATE &lt;= #{PRODT_END_DATE}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		    <if test="ARR_GUBUN == &quot;Y&quot;">
		        AND A.WKORD_NUM IN
		        <foreach collection="WKORD_NUM" item="item" separator="," close=")" open="(">
		            #{item}
		        </foreach>
		    </if>
		    <if test="ARR_GUBUN != &quot;Y&quot;">
		        AND A.WKORD_NUM = #{WKORD_NUM}
		    </if>
		</if>
		<if test="@foren.Ognl@isNotEmpty(WK_PLAN_NUM)">
		AND A.WK_PLAN_NUM = #{WK_PLAN_NUM}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(CONTROL_STATUS)">
		    <if test="CONTROL_STATUS == &quot;2&quot;">
		        AND G.CONTROL_STATUS NOT IN ('8', '9')
		    </if>
		            
		    <if test="CONTROL_STATUS != &quot;2&quot;">
		        AND G.CONTROL_STATUS = #{CONTROL_STATUS}
		    </if>    
		</if>
		ORDER BY ISNULL(E.INSERT_APPR_TYPE,''), A.LOT_NO, A.WKORD_NUM, C.PROG_WORK_CODE
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectList1_2" parameterType="Map" resultType="rMap">
		SELECT 
		       A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , R1.ITEM_NAME
		     , R1.SPEC
		     , A.UNIT_Q -- 소요량
		     , A.ALLOCK_Q    --청구수량
		     , R1.STOCK_UNIT
		     , A.REMARK
		     , A.WKORD_NUM
		     , A.GROUP_CODE
		     --, ISNULL(B.LOT_NO,'') AS LOT_NO
		     --, CASE WHEN R1.ITEM_LEVEL1='100' AND R1.ITEM_LEVEL2='150' AND R1.ITEM_LEVEL3='1514' THEN ISNULL(B.LOT_NO,'') ELSE '' END AS LOT_NO    /* 191209 GOLD WIRE 만 LOT 표현 */
		     /* 
			   200128 품목군이 스텐트(베어,코팅) 일경우 GOLD WIRE 만 LOT 표현하고 그외 반제품에 들어가는 원자재 LOT는 표현 
		     , CASE WHEN R2.ITEM_LEVEL1='100' AND R2.ITEM_LEVEL2='160' AND R2.ITEM_LEVEL3 IN ('161','162','165') THEN (CASE WHEN R1.ITEM_LEVEL1='100' AND R1.ITEM_LEVEL2='150' AND R1.ITEM_LEVEL3='1514' THEN ISNULL(B.LOT_NO,'') ELSE '' END)
		            ELSE ISNULL(B.LOT_NO,'')
		       END AS LOT_NO
			 */
			 /* 200612 작지 품목군이 스텐트-반제품일 경우 자재의 소분류가 1520 Nitinol Wire 만 제외하고 lot 모두 표현 */
			 
			 /*
		     , CASE WHEN R2.ITEM_LEVEL1='100' AND R2.ITEM_LEVEL2='160' THEN (CASE WHEN R1.ITEM_LEVEL1='100' AND R1.ITEM_LEVEL2='150' AND R1.ITEM_LEVEL3='1520' THEN '' ELSE ISNULL(B.LOT_NO,'') END)
		            ELSE ISNULL(B.LOT_NO,'')
		       END AS LOT_NO
			 */
			 /* 20200903 최송수과장요청에 의해 작업장별 특정일자 이전의 경우 lot 표현표시하지 말것 요청. (MDSAP심사관련요청) */
			, CASE WHEN C.WORK_SHOP_CODE = 'W10' AND C.PRODT_END_DATE &lt;= '20200106' THEN ''
					 WHEN C.WORK_SHOP_CODE = 'W20' AND C.PRODT_END_DATE &lt;= '20200108' THEN ''
					 WHEN C.WORK_SHOP_CODE IN ('W30','W40') AND C.PRODT_END_DATE &lt;= '20200306' THEN ''
					 ELSE (
							CASE WHEN R2.ITEM_LEVEL1='100' AND R2.ITEM_LEVEL2='160' THEN (CASE WHEN R1.ITEM_LEVEL1='100' AND R1.ITEM_LEVEL2='150' AND R1.ITEM_LEVEL3='1520' THEN '' 
																							   WHEN D.SUB_CODE = A.ITEM_CODE THEN ISNULL(D.REF_CODE1,'')
																							   ELSE ISNULL(B.LOT_NO,'') 
																						  END)
								 WHEN D.SUB_CODE = A.ITEM_CODE THEN ISNULL(D.REF_CODE1,'')
								 ELSE ISNULL(B.LOT_NO,'')
							END 					 
						  )

				END AS LOT_NO
		       --20200403 추가: 작업지시 등록일자 추가
		      , C.PRODT_WKORD_DATE
		 FROM PMP200T A WITH(NOLOCK)
		      LEFT JOIN ITEM_FIRST_LOT_V B ON B.COMP_CODE=A.COMP_CODE AND B.DIV_CODE=A.DIV_CODE AND B.ITEM_CODE=A.ITEM_CODE AND B.WH_CODE='1200' AND B.WH_CELL_CODE='10'
		      LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE AND R1.ITEM_CODE = A.ITEM_CODE
		      INNER JOIN PMP100T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.WKORD_NUM=C.WKORD_NUM AND C.LINE_END_YN='Y'
		      INNER JOIN BPR100T R2 WITH (NOLOCK) ON C.COMP_CODE=R2.COMP_CODE AND C.ITEM_CODE=R2.ITEM_CODE          
			  LEFT  JOIN BSA100T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.ITEM_CODE=D.SUB_CODE AND D.MAIN_CODE='Z041'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
	<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		<if test="ARR_GUBUN == &quot;Y&quot;">
		   AND A.WKORD_NUM IN
		    <foreach collection="WKORD_NUM" item="item" separator="," close=")" open="(">
		        #{item}
		    </foreach>
		</if>
		<if test="ARR_GUBUN != &quot;Y&quot;">
		   AND A.WKORD_NUM = #{WKORD_NUM}
		</if>
		ORDER BY A.SEQ
	</if>
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectList2_B" parameterType="Map" resultType="rMap">
		SELECT A.* 
			--, ISNULL(B.LOT_NO,'') AS LOT_NO
			/* 20200903 최송수과장요청에 의해 작업장별 특정일자 이전의 경우 lot 표현표시하지 말것 요청. (MDSAP심사관련요청) */
			, CASE WHEN C.WORK_SHOP_CODE IN ('W30','W40') AND C.PRODT_END_DATE &lt;= '20200306' THEN '' 
				   WHEN D.SUB_CODE = A.ITEM_CODE THEN ISNULL(D.REF_CODE1,'')
				   ELSE ISNULL(B.LOT_NO,'')
			  END AS LOT_NO
		  FROM LAST_WKORD_ITEM4MIT_V A WITH (NOLOCK)
			   LEFT JOIN 	ITEM_FIRST_LOT_V B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.ITEM_CODE=B.ITEM_CODE AND B.WH_CODE='1200' AND B.WH_CELL_CODE='10'
			   INNER JOIN 	PMP100T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.WKORD_NUM=C.WKORD_NUM AND A.WORK_SHOP_CODE=C.WORK_SHOP_CODE AND C.LINE_END_YN='Y'
		 	   LEFT  JOIN   BSA100T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.ITEM_CODE=D.SUB_CODE AND D.MAIN_CODE='Z041'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
	<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		<if test="ARR_GUBUN == &quot;Y&quot;">
		   AND A.WKORD_NUM IN
		    <foreach collection="WKORD_NUM" item="item" separator="," close=")" open="(">
		            #{item}
		    </foreach>
		</if>
		<if test="ARR_GUBUN != &quot;Y&quot;">
		   AND A.WKORD_NUM = #{WKORD_NUM}
		</if>
	</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		   AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		ORDER BY A.REF_CODE1, A.SEQ
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--스탠트 중간검사성적서
		SELECT 
		         A.PRODT_WKORD_DATE
		        , A.PROG_WORK_CODE
                ,D.PROG_WORK_NAME
		        , B.CODE_NAME AS TEST_NAME    --검사항목
		        --, CASE WHEN ISNULL(C.TEST_COND,'') = '' THEN B.REF_CODE2 ELSE C.TEST_COND END AS TEST_COND    --검사규격
		        , CASE B.SUB_CODE    WHEN 'A01' THEN C.[직경]
		                            WHEN 'A02' THEN C.[길이]
		                            WHEN 'A03' THEN C.[골드위치]
		                            WHEN 'A07' THEN C.[열처리온도]
		                            WHEN 'A08' THEN C.[열처리시간]
		                            WHEN 'A09' THEN C.[적재패턴]
		                            WHEN 'A10' THEN C.[직경]
		                            WHEN 'A11' THEN C.[길이]
		                            WHEN 'A12' THEN C.[골드위치]
		                            
		                            --WHEN 'B03' THEN '1차온도 : 35℃' + CHAR(10) + '1차시간 : 30분'+ CHAR(10) + '2차온도 :  75℃' + CHAR(10) + '2차시간 : 45분' + CHAR(10) + '3차온도 :  180℃'+ CHAR(10) + '3차시간 : 2시간15분'
		                            WHEN 'B02' THEN C.[코팅_RPM]
		                            WHEN 'C02' THEN C.[삽입_직경]
		                            WHEN 'C03' THEN C.[삽입OS_길이]
		                            WHEN 'C05' THEN C.[삽입IS_길이]
		                            WHEN 'C06' THEN C.[걸림_간격A]
		                            WHEN 'C07' THEN C.[걸림_REP_BLOCK]
		                            WHEN 'C08' THEN C.[걸림_간격C]
		                            WHEN 'C09' THEN C.[걸림_VIS_MAKER]
		                            WHEN 'D02' THEN C.[직경]
		                            WHEN 'D03' THEN C.[길이]
		                            WHEN 'D12' THEN C.[삽입IS_길이]
		                            WHEN 'D51' THEN C.[조립_라쏘]
		                            WHEN 'D55' THEN C.[조립_손잡이]    
		                            WHEN 'D62' THEN C.[포장_박스]
		                            WHEN 'D64' THEN C.[사용자설명서_IFU]
									WHEN 'D69' THEN C.[사용자설명서_IFU_US]
									WHEN 'D70' THEN C.[사용자설명서_IFU_DE]
									WHEN 'D71' THEN C.[사용자설명서_IFU_ETC]
		                            WHEN 'D65' THEN C.[액세서리]
		                            
		                              ELSE REPLACE(B.REF_CODE2, '|', CHAR(10))
		          END AS TEST_COND        
		        , A.WKORD_NUM
		        
		        , (CASE WHEN A.PROG_WORK_CODE = 'P10' THEN ' '            --엮기
		                WHEN A.PROG_WORK_CODE = 'P11' THEN '  '            --열처리
		                WHEN A.PROG_WORK_CODE = 'P12' THEN '   '        --다듬기
		                
		                WHEN A.PROG_WORK_CODE = 'P20' THEN ' '            --코팅
		                WHEN A.PROG_WORK_CODE = 'P21' THEN '  '            --건조
		                WHEN A.PROG_WORK_CODE = 'P22' THEN '   '        --검사
		                
		                WHEN A.PROG_WORK_CODE = 'P30' THEN ' '            --O/S
		                WHEN A.PROG_WORK_CODE = 'P31' THEN '  '            --I/S
		                WHEN A.PROG_WORK_CODE = 'P32' THEN '   '        --걸림턱
		                
		                ELSE ''
		        END) AS WORK_PERSON
		        
		        , (CASE WHEN A.PROG_WORK_CODE = 'P10' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P11' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P12' THEN '   '
		                
		                WHEN A.PROG_WORK_CODE = 'P20' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P21' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P22' THEN '   '
		                
		                WHEN A.PROG_WORK_CODE = 'P30' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P31' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P32' THEN '   '
		                
		                ELSE ''
		        END) AS OK
		        
		        , (CASE WHEN A.PROG_WORK_CODE = 'P10' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P11' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P12' THEN '   '
		                
		                WHEN A.PROG_WORK_CODE = 'P20' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P21' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P22' THEN '   '
		                
		                WHEN A.PROG_WORK_CODE = 'P30' THEN ' '
		                WHEN A.PROG_WORK_CODE = 'P31' THEN '  '
		                WHEN A.PROG_WORK_CODE = 'P32' THEN '   '
		                
		                ELSE ''
		        END) AS NG
		,REPLACE(M1.ADD_VALUE, '|', CHAR(10)) AS TEMP1     /* 설비/계측기 */
		,B.REF_CODE4
		, 1 AS INSPEC_1
		, 2 AS INSPEC_2
		, 3 AS INSPEC_3
		, 4 AS INSPEC_4
		, 5 AS INSPEC_5
		/* 삽입기구 작업장에서 삽입기구만 중간검사 5개로 한정. 1페이지만 표시. 삽입기구조립품은 그대로 진행 */
		--, CASE WHEN A.WORK_SHOP_CODE = 'W30' AND ISNULL(M2.ITEM_LEVEL1,'')+ISNULL(M2.ITEM_LEVEL2,'')+ISNULL(M2.ITEM_LEVEL3,'')='100160163' THEN 1 ELSE CEILING(A.WKORD_Q / 5.0) END AS PAGE_CNT    /* 삽입기구는 중간검사 5개로 한정. 1페이지만 표시 */
		--, CASE WHEN A.WORK_SHOP_CODE = 'W40' THEN CEILING(A.WKORD_Q / 5.0) + (CASE WHEN CEILING(A.WKORD_Q / 5.0) % 2 = 0 THEN 0 ELSE 1 END)        /* 완제품:첫장,둘째장,세째장부터 중간검사성적서 이므로 중간검사성적서페이지수가 홀수이면 +1 */
		--                                     ELSE CEILING(A.WKORD_Q / 5.0) + (CASE WHEN CEILING(A.WKORD_Q / 5.0) % 2 = 0 THEN 1 ELSE 0 END)        /* 반제품:첫장,둘째장부터 중간검사성적서 이므로 중간검사성적서페이지수가 짝수이면 +1 */
		--  END AS PAGE_CNT
		/* 20200226 삽입기구 상관없이 다시 전량 출력으로 변경 */
		, CEILING(A.WKORD_Q / 5.0) AS PAGE_CNT
		
		, 1 PAGE_SEQ
		, ROW_NUMBER() OVER (PARTITION BY A.WKORD_NUM ORDER BY A.WKORD_NUM, A.PROG_WORK_CODE, B.SORT_SEQ, B.SUB_CODE ) AS SORT_SEQ
		--, CASE WHEN A.WORK_SHOP_CODE = 'W30' THEN 1 ELSE CEILING(A.WKORD_Q / 5.0) % 2 AS PAGE_ADD_GUBUN
		/* 삽입기구 작업장에서 삽입기구만 중간검사 5개로 한정. 1페이지만 표시. 삽입기구조립품은 그대로 진행. 앞뒤면 출력위해 짝/홀 페이지수에 따라 빈페이지 추가 여부 결정 */
		--, CASE WHEN A.WORK_SHOP_CODE = 'W30' AND ISNULL(M2.ITEM_LEVEL1,'')+ISNULL(M2.ITEM_LEVEL2,'')+ISNULL(M2.ITEM_LEVEL3,'')='100160163' THEN 1 ELSE CEILING(A.WKORD_Q / 5.0) END % 2 AS PAGE_ADD_GUBUN
		/* 20200226 삽입기구 상관없이 다시 전량 출력으로 변경 */
		--, CEILING(A.WKORD_Q / 5.0) % 2 AS PAGE_ADD_GUBUN
		, 1 AS PAGE_ADD_GUBUN
		, A.LOT_NO                       AS LOT_NO
		FROM PMP100T A WITH (NOLOCK)
		     INNER JOIN BSA100T         B  WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.PROG_WORK_CODE=B.REF_CODE1 AND B.MAIN_CODE='Z016' AND B.USE_YN='Y'
		     --LEFT JOIN S_QMS100T_MIT C ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.PROG_WORK_CODE=C.PROG_WORK_CODE AND A.ITEM_CODE=C.ITEM_CODE
		     LEFT JOIN BPR200T_ADD_MIT     C  WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.ITEM_CODE=C.ITEM_CODE
		     INNER JOIN PBS200T         D  WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.WORK_SHOP_CODE=D.WORK_SHOP_CODE AND A.PROG_WORK_CODE=D.PROG_WORK_CODE
		     LEFT JOIN BSA100T_ADD_MIT     M1 WITH (NOLOCK) ON B.COMP_CODE=M1.COMP_CODE AND B.MAIN_CODE=M1.MAIN_CODE AND B.REF_CODE3=M1.ADD_CODE
		     INNER JOIN BPR100T         M2 WITH (NOLOCK) ON A.COMP_CODE=M2.COMP_CODE AND A.ITEM_CODE=M2.ITEM_CODE
		WHERE A.COMP_CODE=#{S_COMP_CODE}
		AND A.DIV_CODE=#{DIV_CODE}
		AND D.USE_YN='Y'
		
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		AND A.PRODT_START_DATE &gt;= #{PRODT_START_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		AND A.PRODT_START_DATE &lt;= #{PRODT_END_DATE}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		    <if test="ARR_GUBUN == &quot;Y&quot;">
		        AND A.WKORD_NUM IN
		        <foreach collection="WKORD_NUM" item="item" separator="," close=")" open="(">
		            #{item}
		        </foreach>
		    </if>
		    <if test="ARR_GUBUN != &quot;Y&quot;">
		        AND A.WKORD_NUM = #{WKORD_NUM}
		    </if>
		</if>
		ORDER BY A.WKORD_NUM, A.PROG_WORK_CODE, B.SORT_SEQ, B.SUB_CODE
		
		<!-- 완제품작업지시서 출력 시, 중간검사성적서_세척 하나의 표로 보여주기 위해 추가     /    반제품 작업 지시에도 동일하게 적용 필요하여 cursor 실행하지 않도록 수정 -->
		<if test="HEADER_MERGE_YN == &quot;ZZZZZZZZZZZZZZZZZZZZZZZZZ&quot;">
		DECLARE @i INT, @CUR_WKORD_NUM NVARCHAR(20), @CUR_PAGE INT, @INSPEC_DATA INT
		DECLARE CUR1 CURSOR FOR
		    SELECT WKORD_NUM, MAX(PAGE_CNT) PAGE_CNT FROM #TMP_WKORDER GROUP BY WKORD_NUM 
		    
		OPEN CUR1
		FETCH NEXT FROM CUR1 INTO @CUR_WKORD_NUM, @CUR_PAGE
		WHILE @@FETCH_STATUS = 0
		BEGIN
		    SET @i = 2
		    SET @INSPEC_DATA = 1
		    WHILE @i &lt;= @CUR_PAGE
		    BEGIN
		        SET @INSPEC_DATA = @INSPEC_DATA + 5
		
		        INSERT INTO #TMP_WKORDER (PRODT_WKORD_DATE,PROG_WORK_NAME, TEST_NAME, TEST_COND, WKORD_NUM, WORK_PERSON, OK, NG, TEMP1, REF_CODE4, INSPEC_1, INSPEC_2, INSPEC_3, INSPEC_4, INSPEC_5, PAGE_SEQ, SORT_SEQ, PAGE_ADD_GUBUN, LOT_NO)
		        SELECT PRODT_WKORD_DATE, PROG_WORK_NAME, TEST_NAME, TEST_COND, WKORD_NUM, WORK_PERSON, OK, NG, TEMP1, REF_CODE4, @INSPEC_DATA INSPEC_1, @INSPEC_DATA+1 INSPEC_2, @INSPEC_DATA+2 INSPEC_3, @INSPEC_DATA+3 INSPEC_4, @INSPEC_DATA+4 INSPEC_5, @i, SORT_SEQ, PAGE_ADD_GUBUN, LOT_NO
		          FROM #TMP_WKORDER
		         WHERE WKORD_NUM = @CUR_WKORD_NUM
		          AND PAGE_SEQ = 1
		
		        SET @i = @i + 1
		    END
		    FETCH NEXT FROM CUR1 INTO @CUR_WKORD_NUM, @CUR_PAGE
		END
		CLOSE CUR1
		DEALLOCATE CUR1
		</if>
		
	</select>

	<select id="s_pmp110ukrv_mitServiceImpl.selectList_t" parameterType="Map" resultType="rMap">
		BEGIN
		SET NOCOUNT ON
		DECLARE @TMP_TB1 TABLE
		        (
		            DATA_NO1  INT IDENTITY(1, 1) NOT NULL,
		            WKORD_NUM NVARCHAR(100),
		            WKORD_Q NUMERIC(30,6),
		
		            ITEM_CODE NVARCHAR(100),
		            SPEC NVARCHAR(1000),
		            PRODT_START_DATE NVARCHAR(8),
		            LOT_NO NVARCHAR(100)
		        )
		
		    INSERT INTO @TMP_TB1(WKORD_NUM,WKORD_Q,ITEM_CODE,SPEC,PRODT_START_DATE,LOT_NO)
		    (
		        
		        SELECT  
		            A.WKORD_NUM
		            ,A.WKORD_Q
		            ,A.ITEM_CODE
		            ,R1.SPEC
		            ,A.PRODT_START_DATE
		            --,A.LOT_NO
					, REPLACE(A.WKORD_NUM,'01P','') + '-' + ISNULL(A.PRODT_PRSN,'') +' ' AS LOT_NO
		        FROM PMP100T A  WITH (NOLOCK)
		  LEFT  JOIN BPR100T R1 WITH (NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
		                                        AND R1.ITEM_CODE = A.ITEM_CODE
		
		       WHERE A.COMP_CODE=#{S_COMP_CODE}
		         AND A.LINE_END_YN = 'Y'
		        AND A.DIV_CODE=#{DIV_CODE}
		        
		        <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		        AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE)">
		        AND A.PRODT_START_DATE &gt;= #{PRODT_START_DATE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(PRODT_END_DATE)">
		        AND A.PRODT_START_DATE &lt;= #{PRODT_END_DATE}
		        </if>
		        
		        <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
		            <if test="ARR_GUBUN == &quot;Y&quot;">
		                AND A.WKORD_NUM IN
		                <foreach collection="WKORD_NUM" item="item" separator="," close=")" open="(">
		                    #{item}
		                </foreach>
		            </if>
		            <if test="ARR_GUBUN != &quot;Y&quot;">
		                AND A.WKORD_NUM = #{WKORD_NUM}
		            </if>
		        </if>
		    )
		        DECLARE 
		        @I INT, 
		        @MAX_NO INT,
		
		        @WKORD_Q NUMERIC(30,6),
		        @ITEM_CODE_V NVARCHAR(100),
		        @SPEC_V NVARCHAR(1000),
		        @PRODT_START_DATE_V NVARCHAR(8),
		        @LOT_NO_V NVARCHAR(100),
		        @WKORD_NUM_V NVARCHAR(100),
		
		        @J INT
		
		    DECLARE @TMP_TB2 TABLE
		        (
		            DATA_NO2  INT,
		            WKORD_NUM NVARCHAR(100),
		            --WKORD_Q NUMERIC(30,6),
		            ITEM_CODE NVARCHAR(100),
		            SPEC NVARCHAR(1000),
		            PRODT_START_DATE NVARCHAR(8),
		            LOT_NO NVARCHAR(100),
		            
		            COL_NO INT IDENTITY(1, 1) NOT NULL,
		
		            SEQ  INT
		        )
		
		    SELECT 
		        @I = 1,
		        @MAX_NO = MAX(DATA_NO1)
		      FROM @TMP_TB1
		
		    WHILE @I &lt;= @MAX_NO
		    BEGIN
		        SELECT 
		            @J = 1,
		            @WKORD_Q = WKORD_Q,
		            @ITEM_CODE_V = ITEM_CODE,
		            @SPEC_V = SPEC,
		            @PRODT_START_DATE_V = PRODT_START_DATE,
		            @LOT_NO_V = LOT_NO,
		            @WKORD_NUM_V = WKORD_NUM
		          FROM @TMP_TB1
		         WHERE DATA_NO1 = @I
		
		         WHILE @J &lt;= @WKORD_Q
		         BEGIN
		            INSERT INTO @TMP_TB2(
		                DATA_NO2, 
		                ITEM_CODE,
		                SPEC, 
		                PRODT_START_DATE,
		                LOT_NO,
		                WKORD_NUM,
		                SEQ
		            )VALUES(
		                @I,
		                @ITEM_CODE_V,
		                @SPEC_V,
		                @PRODT_START_DATE_V,
		                @LOT_NO_V + ' ('+ CONVERT(VARCHAR,@J) +')',
		                @WKORD_NUM_V,
		                @J
		            )
		
		            SET @J = @J + 1
		
		           END
		         SET @I = @I + 1
		      END
		
		SELECT 
		    MAX(RN1) AS RN1
		    ,MAX(ITEM_CODE1) AS ITEM_CODE1
		    ,MAX(SPEC1) AS SPEC1
		    ,MAX(LOT_NO1) AS LOT_NO1
		    ,MAX(WKORD_NUM1) AS WKORD_NUM1
		    ,MAX(SEQ1) AS SEQ1
		    ,MAX(QR_CODE1) AS QR_CODE1
		
		    ,MAX(RN2) AS RN2
		    ,MAX(ITEM_CODE2) AS ITEM_CODE2
		    ,MAX(SPEC2) AS SPEC2
		    ,MAX(LOT_NO2) AS LOT_NO2
		    ,MAX(WKORD_NUM2) AS WKORD_NUM2
		    ,MAX(SEQ2) AS SEQ2
		    ,MAX(QR_CODE2) AS QR_CODE2
		
		    ,MAX(RN3) AS RN3
		    ,MAX(ITEM_CODE3) AS ITEM_CODE3
		    ,MAX(SPEC3) AS SPEC3
		    ,MAX(LOT_NO3) AS LOT_NO3
		    ,MAX(WKORD_NUM3) AS WKORD_NUM3
		    ,MAX(SEQ3) AS SEQ3
		    ,MAX(QR_CODE3) AS QR_CODE3
		
		    ,MAX(RN4) AS RN4
		    ,MAX(ITEM_CODE4) AS ITEM_CODE4
		    ,MAX(SPEC4) AS SPEC4
		    ,MAX(LOT_NO4) AS LOT_NO4
		    ,MAX(WKORD_NUM4) AS WKORD_NUM4
		    ,MAX(SEQ4) AS SEQ4
		    ,MAX(QR_CODE4) AS QR_CODE4
		
		    ,MAX(RN5) AS RN5
		    ,MAX(ITEM_CODE5) AS ITEM_CODE5
		    ,MAX(SPEC5) AS SPEC5
		    ,MAX(LOT_NO5) AS LOT_NO5
		    ,MAX(WKORD_NUM5) AS WKORD_NUM5
		    ,MAX(SEQ5) AS SEQ5
		    ,MAX(QR_CODE5) AS QR_CODE5
		
		FROM (
		    SELECT 
		       CASE WHEN T.RN % 5 = 1 THEN T.RN ELSE NULL END AS RN1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.ITEM_CODE ELSE NULL  END AS ITEM_CODE1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.SPEC ELSE NULL  END AS SPEC1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.LOT_NO ELSE NULL  END AS LOT_NO1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.WKORD_NUM ELSE NULL  END AS WKORD_NUM1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.SEQ ELSE NULL  END AS SEQ1
		        ,CASE WHEN T.RN % 5 = 1 THEN T.ITEM_CODE +'$@$1' ELSE NULL  END AS QR_CODE1
		        
		        ,CASE WHEN T.RN % 5 = 2 THEN T.RN ELSE NULL  END AS RN2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.ITEM_CODE ELSE NULL  END AS ITEM_CODE2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.SPEC ELSE NULL  END AS SPEC2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.LOT_NO ELSE NULL  END AS LOT_NO2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.WKORD_NUM ELSE NULL  END AS WKORD_NUM2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.SEQ ELSE NULL  END AS SEQ2
		        ,CASE WHEN T.RN % 5 = 2 THEN T.ITEM_CODE +'$@$1' ELSE NULL  END AS QR_CODE2
		
		        ,CASE WHEN T.RN % 5 = 3 THEN T.RN ELSE NULL END AS RN3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.ITEM_CODE ELSE NULL END AS ITEM_CODE3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.SPEC ELSE NULL END AS SPEC3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.LOT_NO ELSE NULL END AS LOT_NO3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.WKORD_NUM ELSE NULL END AS WKORD_NUM3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.SEQ ELSE NULL  END AS SEQ3
		        ,CASE WHEN T.RN % 5 = 3 THEN T.ITEM_CODE +'$@$1' ELSE NULL  END AS QR_CODE3
		        
		        ,CASE WHEN T.RN % 5 = 4 THEN T.RN ELSE NULL END AS RN4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.ITEM_CODE ELSE NULL END AS ITEM_CODE4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.SPEC ELSE NULL END AS SPEC4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.LOT_NO ELSE NULL END AS LOT_NO4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.WKORD_NUM ELSE NULL END AS WKORD_NUM4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.SEQ ELSE NULL  END AS SEQ4
		        ,CASE WHEN T.RN % 5 = 4 THEN T.ITEM_CODE +'$@$1' ELSE NULL  END AS QR_CODE4
		        
		        ,CASE WHEN T.RN % 5 = 0 THEN T.RN ELSE NULL END AS RN5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.ITEM_CODE ELSE NULL END AS ITEM_CODE5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.SPEC ELSE NULL END AS SPEC5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.LOT_NO ELSE NULL END AS LOT_NO5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.WKORD_NUM ELSE NULL END AS WKORD_NUM5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.SEQ ELSE NULL  END AS SEQ5
		        ,CASE WHEN T.RN % 5 = 0 THEN T.ITEM_CODE +'$@$1' ELSE NULL  END AS QR_CODE5
		
		        ,T.GUBUN
		        ,T.SEQ
		    FROM ( 
		        SELECT 
		            ROW_NUMBER() OVER(ORDER BY DATA_NO2) AS RN
		            ,DENSE_RANK() OVER(ORDER BY (COL_NO-1) / 5) AS GUBUN 
		            ,* 
		          FROM @TMP_TB2 
		    ) T
		)TT
		GROUP BY TT.GUBUN
		
		SET NOCOUNT OFF
		END 
	</select>
</mapper>