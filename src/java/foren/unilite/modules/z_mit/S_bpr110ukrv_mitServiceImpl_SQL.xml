<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr110ukrv_mitServiceImpl">
	<select id="s_bpr110ukrv_mitServiceImpl.selectItem1" parameterType="Map" resultType="rMap">
	   /* 제품 */
		SELECT TOP 1  B.DIV_CODE
			   , A.ITEM_CODE
			   , B.ITEM_NAME
			   , A.SPEC
			   , A.REMARK1
			   , A.REMARK2
			   , A.REMARK3
			   , A.STOCK_UNIT
			   , C.UNIT_Q 
			   , C.PROD_UNIT_Q 
			   , C.START_DATE 
			   , C.STOP_DATE
		  FROM      BPR100T A WITH (NOLOCK)     
		 INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                   AND B.DIV_CODE      = #{DIV_CODE}
		                                   AND B.ITEM_CODE     = A.ITEM_CODE
		 INNER JOIN BPR500T C WITH (NOLOCK) ON C.COMP_CODE        = A.COMP_CODE
		                                   AND C.DIV_CODE         = B.DIV_CODE
		                                   AND C.PROD_ITEM_CODE   = A.ITEM_CODE
		                                   AND C.CHILD_ITEM_CODE  = '$'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		 AND  B.DIV_CODE  = #{DIV_CODE}
		 AND  A.ITEM_CODE = #{PROD_ITEM_CODE}
	</select>
	<select id="s_bpr110ukrv_mitServiceImpl.selectItem2" parameterType="Map" resultType="rMap">
	    /*  삽입기구  */
		SELECT TOP 1  A.DIV_CODE
			   , A.ITEM_CODE
			   , C.ITEM_NAME
			   , C.SPEC
			   , C.STOCK_UNIT
			   , A.UNIT_Q 
			   , A.PROD_UNIT_Q 
			   , A.START_DATE 
			   , A.STOP_DATE
			   , C.REMARK1
			   , C.REMARK2
			   , C.REMARK3
			   , A.ITEM_CODE AS ORG_ITEM_CODE
			   , C.ITEM_NAME AS ORG_ITEM_NAME
			   , C.SPEC      AS ORG_SPEC
		  FROM uniLITE.fnBOMExplosionAddInfo(#{S_COMP_CODE} , #{DIV_CODE}, #{PROD_ITEM_CODE}, CONVERT(NVARCHAR(8), GETDATE(), 112), #{S_USER_ID}, '')  A
		 INNER JOIN BPR100T C WITH (NOLOCK)  ON C.COMP_CODE     = A.COMP_CODE
		                                   AND C.ITEM_CODE      = A.ITEM_CODE 
		                                   AND C.ITEM_LEVEL1    ='100' 
										   AND C.ITEM_LEVEL2    ='160'
										   AND C.ITEM_LEVEL3   IN ('163', '164')
		 INNER JOIN BPR200T D WITH (NOLOCK)  ON D.COMP_CODE     = A.COMP_CODE
		                                   AND D.DIV_CODE       = A.DIV_CODE
		                                   AND D.ITEM_ACCOUNT   ='20'
		                                   AND D.ITEM_CODE      = A.ITEM_CODE
		
		 WHERE A.LEVEL =1
	</select>
	<select id="s_bpr110ukrv_mitServiceImpl.selectItem3" parameterType="Map" resultType="rMap">
	    /* 코팅 스텐트 , 베어 스텐트  */
		SELECT TOP 1  A.DIV_CODE
		       , A.ITEM_CODE
		       , C.ITEM_NAME
		       , C.SPEC
			   , C.STOCK_UNIT
			   , A.UNIT_Q 
			   , A.PROD_UNIT_Q 
			   , A.START_DATE 
			   , A.STOP_DATE
		       , C.REMARK1
		       , C.REMARK2
		       , C.REMARK3
		       , A.ITEM_CODE AS ORG_ITEM_CODE
			   , C.ITEM_NAME AS ORG_ITEM_NAME
			   , C.SPEC      AS ORG_SPEC
		  FROM uniLITE.fnBOMExplosionAddInfo(#{S_COMP_CODE} , #{DIV_CODE}, #{PROD_ITEM_CODE}, CONVERT(NVARCHAR(8), GETDATE(), 112), #{S_USER_ID}, '')  A
		 INNER JOIN BPR100T C WITH (NOLOCK)  ON C.COMP_CODE      = A.COMP_CODE
		                                    AND C.ITEM_CODE      = A.ITEM_CODE 
		                                    AND C.ITEM_LEVEL1    ='100' 
										    AND C.ITEM_LEVEL2    ='160'
										    AND C.ITEM_LEVEL3    IN ('161','162','164')
		 INNER JOIN BPR200T D WITH (NOLOCK)  ON D.COMP_CODE      = A.COMP_CODE
		                                    AND D.DIV_CODE       = A.DIV_CODE
		                                    AND D.ITEM_ACCOUNT   ='20'
		                                    AND D.ITEM_CODE      = A.ITEM_CODE
		 WHERE A.LEVEL =1
	</select>
	<select id="s_bpr110ukrv_mitServiceImpl.selectItem4" parameterType="Map" resultType="rMap">
		/* 원부자재 */
		SELECT   A.CHILD_ITEM_CODE 
		       , C.ITEM_NAME
			   , C.SPEC 
			   , C.STOCK_UNIT
			   , A.UNIT_Q 
			   , A.PROD_UNIT_Q 
			   , #{START_DATE} AS START_DATE
			   , A.STOP_DATE
		  FROM     BPR500T A WITH (NOLOCK)  
		INNER JOIN BPR200T B WITH (NOLOCK)  ON B.COMP_CODE     = A.COMP_CODE
		                                   AND B.DIV_CODE      = A.DIV_CODE
		                                   AND B.ITEM_ACCOUNT  NOT IN ('00','10', '20')
		                                   AND B.ITEM_CODE     = A.CHILD_ITEM_CODE
		INNER JOIN BPR100T C WITH (NOLOCK)  ON C.COMP_CODE     = A.COMP_CODE
		                                   AND C.ITEM_CODE     = A.CHILD_ITEM_CODE 
		                                   
		WHERE  A.COMP_CODE      = #{S_COMP_CODE}
		  AND  A.DIV_CODE       = #{DIV_CODE}
		  AND  A.PROD_ITEM_CODE = #{PROD_ITEM_CODE}
	</select>
	<select id="s_bpr110ukrv_mitServiceImpl.selectCheckBom" parameterType="Map" resultType="rMap">
		/* 원부자재 */
		SELECT  COUNT(*) AS CNT
		  FROM  BPR500T A WITH (NOLOCK)  
		 WHERE  COMP_CODE      = #{S_COMP_CODE}
		   AND  DIV_CODE       = #{DIV_CODE}
		   AND  PROD_ITEM_CODE = #{PROD_ITEM_CODE}
	</select>
	<update id="s_bpr110ukrv_mitServiceImpl.updateItem" parameterType="Map">
		UPDATE    BPR100T
			SET   REMARK1        = #{REMARK1}
				, REMARK2        = #{REMARK2}
				, REMARK3        = #{REMARK3}
				, SPEC           = #{SPEC}
				, UPDATE_DB_USER = #{S_USER_ID}
				, UPDATE_DB_TIME = GETDATE()
			WHERE COMP_CODE = #{S_COMP_CODE}
			  AND ITEM_CODE = #{ITEM_CODE}	
	</update>
	<delete  id="s_bpr110ukrv_mitServiceImpl.deleteBOM" parameterType="rMap">
		DELETE FROM BPR500T
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}	
	</delete>
	<delete  id="s_bpr110ukrv_mitServiceImpl.deleteBOM2" parameterType="rMap">
	IF EXISTS (SELECT PROD_ITEM_CODE
			  FROM BPR500T
			 WHERE COMP_CODE       = #{S_COMP_CODE}
			   AND DIV_CODE        = #{DIV_CODE}
			   AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}	
			   AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE})
		BEGIN
			DELETE FROM BPR500T
			 WHERE COMP_CODE       = #{S_COMP_CODE}
			   AND DIV_CODE        = #{DIV_CODE}
			   AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}	
			   AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
		END 
	</delete>
	<insert id="s_bpr110ukrv_mitServiceImpl.insertBOM" parameterType="rMap">
		
		
		INSERT INTO BPR500T (
				  COMP_CODE
				, DIV_CODE	
				, PROD_ITEM_CODE
				, CHILD_ITEM_CODE        
				, START_DATE   
				, STOP_DATE     
				, SEQ   
				, UNIT_Q
				, PROD_UNIT_Q  	
				, USE_YN
				, BOM_YN
				, INSERT_DB_USER
				, INSERT_DB_TIME
				, UPDATE_DB_USER
				, UPDATE_DB_TIME							
		
		) VALUES (
				  #{S_COMP_CODE}	
				, #{DIV_CODE}	
				, #{PROD_ITEM_CODE}
				, #{CHILD_ITEM_CODE}        
				, #{START_DATE}   
				, #{STOP_DATE}   
				, #{SEQ}   
				, #{UNIT_Q}     
				, #{PROD_UNIT_Q}
				, '1'
				, '1'
				, #{S_USER_ID}
			    , GETDATE()
			    , #{S_USER_ID}
			    , GETDATE()
		)
	</insert>
	<select id="s_bpr110ukrv_mitServiceImpl.selectCheckItem" parameterType="Map" resultType="rMap">
		SELECT COUNT(*) AS CNT
		  FROM BPR100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</select>
	<update id="s_bpr110ukrv_mitServiceImpl.insertNewItem" parameterType="rMap">
		INSERT INTO BPR100T (
			    COMP_CODE		, ITEM_CODE			, ITEM_NAME		    , ITEM_NAME1	    , ITEM_NAME2
			  , SPEC			, ITEM_LEVEL1		, ITEM_LEVEL2	    , ITEM_LEVEL3	    , STOCK_UNIT
			  , SALE_UNIT		, TRNS_RATE			, SALE_BASIS_P	    , TAX_TYPE		    , DOM_FORIGN
			  , STOCK_CARE_YN	, START_DATE		, STOP_DATE		    , USE_YN		    , BARCODE
			  , ITEM_MAKER_PN 	, REMARK1			, REMARK2		    , REMARK3           , EXCESS_RATE		
			  , SPEC_NUM        , ITEM_MODEL		, ITEM_WIDTH        , EXPIRATION_DAY    , CIR_PERIOD_YN
			  , MAKER_NAME	    , MAKE_NATION	    , CONTENT_QTY	    , ITEM_FLAVOR	    , SALE_NATION 
			  , CAR_TYPE        , B_OUT_DATE        , HS_NO             , HS_NAME           , HS_UNIT
			  , UNIT_WGT        , WGT_UNIT          , UNIT_VOL          , VOL_UNIT          , ITEM_DIVISION
			  , INSERT_DB_USER  , INSERT_DB_TIME    , UPDATE_DB_USER    , UPDATE_DB_TIME       
		)
		SELECT
			  COMP_CODE         , #{ITEM_CODE}      , #{ITEM_NAME}      , ''                , ''           
			  , #{SPEC}         , ITEM_LEVEL1		, ITEM_LEVEL2	    , ITEM_LEVEL3	    , STOCK_UNIT
			  , SALE_UNIT		, TRNS_RATE			, SALE_BASIS_P	    , TAX_TYPE		    , DOM_FORIGN
			  , STOCK_CARE_YN	, START_DATE		, STOP_DATE		    , USE_YN		    , BARCODE
			  , ITEM_MAKER_PN 	, #{REMARK1}		, #{REMARK2}	    , #{REMARK3}        , EXCESS_RATE		
			  , SPEC_NUM        , ITEM_MODEL		, ITEM_WIDTH        , EXPIRATION_DAY    , CIR_PERIOD_YN
			  , MAKER_NAME	    , MAKE_NATION	    , CONTENT_QTY	    , ITEM_FLAVOR	    , SALE_NATION 
			  , CAR_TYPE        , B_OUT_DATE        , HS_NO             , HS_NAME           , HS_UNIT
			  , UNIT_WGT        , WGT_UNIT          , UNIT_VOL          , VOL_UNIT          , ITEM_DIVISION
			  , #{S_USER_ID}    , GETDATE()			, #{S_USER_ID}	    , GETDATE()
		  FROM BPR100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ORG_ITEM_CODE}
		
		INSERT INTO BPR200T (
			  COMP_CODE           , ITEM_CODE           , ITEM_NAME           , ITEM_ACCOUNT        , SUPPLY_TYPE         
			, ORDER_UNIT          , TRNS_RATE           , PURCHASE_BASE_P     , ORDER_PRSN          , WH_CODE             
			, ORDER_PLAN          , CUSTOM_CODE         , BASIS_P             , REAL_CARE_YN        , MINI_PACK_Q         
			, ORDER_KIND          , NEED_Q_PRESENT      , EXC_STOCK_CHECK_YN  , SAFE_STOCK_Q        , DIST_LDTIME         
			, ROP_YN              , DAY_AVG_SPEND       , ORDER_POINT         , ORDER_METH          , OUT_METH            
			, RESULT_YN           , WORK_SHOP_CODE      , PRODUCT_LDTIME      , INSPEC_YN           , INSPEC_METH_MATRL   
			, INSPEC_METH_PROG    , INSPEC_METH_PRODT   , COST_YN             , COST_PRICE          , DIV_CODE            
			, ITEM_TYPE           , EXCESS_RATE         , REAL_CARE_PERIOD    , LOT_YN              
			, MINI_PURCH_Q        , MAX_PURCH_Q         , PACK_QTY            , ARRAY_CNT           , PACK_TYPE           
			, CARE_YN             , CARE_REASON         , LOCATION            , INSERT_APPR_TYPE    , FORM_TYPE           
			, COATING             , GOLD_WIRE           , RISK_GRADE          , UPN_CODE            , INSERT_APPR_CODE    
			, BARE_CODE           , WH_CELL_CODE        , NATIVE_AREA         , TEMPC_01            , MAN_HOUR            
			, REMARK_AREA    
			, INSERT_DB_USER        , INSERT_DB_TIME        , UPDATE_DB_USER        , UPDATE_DB_TIME       
		)
		SELECT
			  COMP_CODE           , #{ITEM_CODE}        , #{ITEM_NAME}        , ITEM_ACCOUNT        , SUPPLY_TYPE         
			, ORDER_UNIT          , TRNS_RATE           , PURCHASE_BASE_P     , ORDER_PRSN          , WH_CODE             
			, ORDER_PLAN          , CUSTOM_CODE         , BASIS_P             , REAL_CARE_YN        , MINI_PACK_Q         
			, ORDER_KIND          , NEED_Q_PRESENT      , EXC_STOCK_CHECK_YN  , SAFE_STOCK_Q        , DIST_LDTIME         
			, ROP_YN              , DAY_AVG_SPEND       , ORDER_POINT         , ORDER_METH          , OUT_METH            
			, RESULT_YN           , WORK_SHOP_CODE      , PRODUCT_LDTIME      , INSPEC_YN           , INSPEC_METH_MATRL   
			, INSPEC_METH_PROG    , INSPEC_METH_PRODT   , COST_YN             , COST_PRICE          , DIV_CODE            
			, ITEM_TYPE           , EXCESS_RATE         , REAL_CARE_PERIOD    , LOT_YN              
			, MINI_PURCH_Q        , MAX_PURCH_Q         , PACK_QTY            , ARRAY_CNT           , PACK_TYPE           
			, CARE_YN             , CARE_REASON         , LOCATION            , INSERT_APPR_TYPE    , FORM_TYPE           
			, COATING             , GOLD_WIRE           , RISK_GRADE          , UPN_CODE            , INSERT_APPR_CODE    
			, BARE_CODE           , WH_CELL_CODE        , NATIVE_AREA         , TEMPC_01            , MAN_HOUR            
			, REMARK_AREA    
			, #{S_USER_ID}		    , GETDATE()			    , #{S_USER_ID}	        , GETDATE()
		  FROM BPR200T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ORG_ITEM_CODE}   
	</update>
	
</mapper>