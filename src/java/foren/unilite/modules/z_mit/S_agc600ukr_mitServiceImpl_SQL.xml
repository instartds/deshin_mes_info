<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_agc600ukr_mitServiceImpl">

	<select id="s_agc600ukr_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON 

		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @FrDate         NVARCHAR(06)   /* 조회월Fr            */
		          , @ToDate         NVARCHAR(06)   /* 조회월To            */
		          , @ItemAccount    NVARCHAR(02)   /* 품목계정            */
				  , @ItemCode       NVARCHAR(20)   /* 품목코드            */
				  
				  
		          , @UserId         NVARCHAR(100)  /* 사용자ID            */
		          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @FrDate      = #{FR_DATE}
		    SET @ToDate      = #{TO_DATE}
		    SET @ItemAccount = #{ITEM_ACCOUNT}
		    SET @ItemCode    = #{ITEM_CODE}
		
		    SET @UserId     = #{S_USER_ID}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 조회 */
		    SELECT A.COMP_CODE                                      /* 법인코드           */
		         , A.DIV_CODE                                       /* 사업장             */
		         , A.FR_DATE                                        /* 조회시작월         */ 
		         , A.TO_DATE                                        /* 조회종료월         */
		         , C2.ITEM_ACCOUNT                                  /* 계정               */
		         , A.ITEM_CODE                                      /* 품목               */
		         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		            END AS ITEM_NAME                                /* 품목명             */
		         , C1.SPEC                                          /* 규격               */
		         , C2.ORDER_UNIT                                    /* 단위               */
		         , A.BASIS_Q                                        /* 기초수량           */
		         , A.INSTOCK_Q                                      /* 입고수량           */
		         , A.SUBINSTOCK_Q                                   /* 대체입고           */
		         , A.OUTSTOCK_Q                                     /* 출고수량           */
		         , A.SUBOUTSTOCK_Q                                  /* 대체출고           */
		         , A.STOCK_Q                                        /* 재고수량           */
		         , A.STOCK_P                                        /* 재고단가           */
		         , A.STOCK_I                                        /* 재고금액           */
		         , A.NOIN_OVERAYEAR                                 /* 년이상미구매       */
		         , A.NOOUT_OVERAYEAR                                /* 년이상미출고       */
		         , A.RESULT                                         /* 결과               */
		         , A.RESERVE_RATE                                   /* 설정비율           */
		         , A.ALLOWANCE_I                                    /* 대손충당금         */
		         , ''              AS FLAG
		      FROM            S_AGC600T_MIT A  WITH (NOLOCK)
		           INNER JOIN BPR100T       C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                                    AND C1.ITEM_CODE = A.ITEM_CODE
		           INNER JOIN BPR200T       C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
		                                                    AND C2.DIV_CODE  = A.DIV_CODE
		                                                    AND C2.ITEM_CODE = A.ITEM_CODE
		     WHERE A.COMP_CODE     = @CompCode   
		       AND A.DIV_CODE      = @DivCode    
		       AND A.FR_DATE       = @FrDate
		       AND A.TO_DATE       = @ToDate
		   	   AND ((@ItemAccount  = NULL) OR (@ItemAccount = '') OR (C2.ITEM_ACCOUNT = @ItemAccount))
		   	   AND ((@ItemCode     = NULL) OR (@ItemCode    = '') OR (A.ITEM_CODE     = @ItemCode   ))
		     ORDER BY A.COMP_CODE, A.DIV_CODE, C2.ITEM_ACCOUNT, A.ITEM_CODE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_agc600ukr_mitServiceImpl.selectCheckNewDataList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @FrDate         NVARCHAR(06)   /* 조회월Fr            */
		          , @ToDate         NVARCHAR(06)   /* 조회월To            */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @FrDate      = #{FR_DATE}
		    SET @ToDate      = #{TO_DATE}
		
		    SELECT COUNT(*) AS CNT
		      FROM S_AGC600T_MIT WITH (NOLOCK)
		     WHERE COMP_CODE     = @CompCode   
		       AND DIV_CODE      = @DivCode    
		       AND FR_DATE       = @FrDate
		       AND TO_DATE       = @ToDate
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_agc600ukr_mitServiceImpl.selectNewDataList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @ItemAccount    NVARCHAR(02)   /* 품목계정            */
		          , @FrDate         NVARCHAR(06)   /* 조회월Fr            */
		          , @ToDate         NVARCHAR(06)   /* 조회월To            */
		          , @ItemCode       NVARCHAR(20)   /* 품목코드            */
		
		          , @UserId         NVARCHAR(100)  /* 사용자ID            */
		          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
          		  , @LastOneYear    NVARCHAR(08)   /* 조회월To의 1년전    */
		
		    SET @CompCode    = #{S_COMP_CODE}
		    SET @DivCode     = #{DIV_CODE}
		    SET @FrDate      = #{FR_DATE}
		    SET @ToDate      = #{TO_DATE}
		    SET @ItemAccount = #{ITEM_ACCOUNT}
		    SET @ItemCode    = #{ITEM_CODE}
		
		    SET @UserId      = #{S_USER_ID}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 조회월To의 1년전 */
            SET @LastOneYear = CONVERT(NVARCHAR(8), DATEADD(YEAR, -1, CONVERT(DATETIME,@ToDate+'01')), 112)
            
		    /* 조회 */
		    SELECT A.COMP_CODE                                      /* 법인코드           */
		         , A.DIV_CODE                                       /* 사업장             */
		         , A.FR_DATE                                        /* 조회시작월         */ 
		         , A.TO_DATE                                        /* 조회종료월         */
		         , A.ITEM_ACCOUNT                                   /* 계정               */
		         , A.ITEM_CODE                                      /* 품목               */
		         , A.ITEM_NAME                                      /* 품목명             */
		         , A.SPEC                                           /* 규격               */
		         , A.ORDER_UNIT                                     /* 단위               */
		         , A.BASIS_Q                           AS BASIS_Q                  /* 기초수량           */
		         , A.INSTOCK_Q                         AS INSTOCK_Q                /* 입고수량           */
		         , A.SUBINSTOCK_Q                      AS SUBINSTOCK_Q             /* 대체입고           */
		         , A.OUTSTOCK_Q - A.RETURN_Q           AS OUTSTOCK_Q               /* 출고수량           */
		         , A.SUBOUTSTOCK_Q                     AS SUBOUTSTOCK_Q            /* 대체출고           */
		         , A.BASIS_Q + A.INSTOCK_Q + A.SUBINSTOCK_Q - A.OUTSTOCK_Q + A.RETURN_Q - A.SUBOUTSTOCK_Q      AS STOCK_Q    /* 재고수량           */
		         , CASE WHEN A.BASIS_Q + A.INSTOCK_Q + A.SUBINSTOCK_Q - A.OUTSTOCK_Q + A.RETURN_Q - A.SUBOUTSTOCK_Q = 0
		                THEN 0
		                ELSE (A.BASIS_I + A.INSTOCK_I + A.SUBINSTOCK_I - A.OUTSTOCK_I + A.RETURN_I - A.SUBOUTSTOCK_I)
		                   / (A.BASIS_Q + A.INSTOCK_Q + A.SUBINSTOCK_Q - A.OUTSTOCK_Q + A.RETURN_Q - A.SUBOUTSTOCK_Q)
		            END AS STOCK_P                                                                                           /* 재고단가           */
		         , A.BASIS_I + A.INSTOCK_I + A.SUBINSTOCK_I - A.OUTSTOCK_I + A.RETURN_I - A.SUBOUTSTOCK_I      AS STOCK_I    /* 재고금액           */
		         , CASE WHEN A.CHECK_INSTOCK_Q = 0
		                THEN '불용'
		                ELSE '사용'
		            END AS NOIN_OVERAYEAR                           /* 년이상미구매       */
		         , CASE WHEN A.CHECK_OUTSTOCK_Q = 0 AND A.CHECK_SUBOUTSTOCK_Q = 0 AND A.CHECK_RETURN_Q = 0
		                THEN '불용'
		                ELSE '사용'
		            END AS NOOUT_OVERAYEAR                          /* 년이상미출고       */
		         , CASE WHEN A.CHECK_INSTOCK_Q = 0
		                THEN '불용'
		                ELSE '사용'
		            END
		         + '/'
		         + CASE WHEN A.CHECK_OUTSTOCK_Q = 0 AND A.CHECK_SUBOUTSTOCK_Q = 0 AND A.CHECK_RETURN_Q = 0
		                THEN '불용'
		                ELSE '사용'
		            END AS RESULT                                   /* 결과               */
		         , CASE WHEN A.INSTOCK_Q = 0 AND A.OUTSTOCK_Q = 0 AND A.SUBOUTSTOCK_Q = 0 AND A.RETURN_Q = 0
		                THEN 100.00
		                ELSE 0.00
		            END AS RESERVE_RATE                             /* 설정비율           */
		         , (A.BASIS_I + A.INSTOCK_I + A.SUBINSTOCK_I - A.OUTSTOCK_I + A.RETURN_I - A.SUBOUTSTOCK_I)
		         * CASE WHEN A.INSTOCK_Q = 0 AND A.OUTSTOCK_Q = 0 AND A.SUBOUTSTOCK_Q = 0 AND A.RETURN_Q = 0
		                THEN 1.00
		                ELSE 0.00
		            END AS ALLOWANCE_I                              /* 대손충당금         */
		         , 'S'              AS FLAG
		      FROM (SELECT A.COMP_CODE                                      /* 법인코드           */
		                 , A.DIV_CODE                                       /* 사업장             */
		                 , @FrDate  AS FR_DATE                              /* 조회시작월         */ 
		                 , @ToDate  AS TO_DATE                              /* 조회종료월         */
		                 , C2.ITEM_ACCOUNT                                  /* 계정               */
		                 , A.ITEM_CODE                                      /* 품목               */
		                 , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		        		        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		        		                            ELSE C1.ITEM_NAME
		        		    END AS ITEM_NAME                                /* 품목명             */
		                 , C1.SPEC                                          /* 규격               */
		                 , C2.ORDER_UNIT                                    /* 단위               */
		                 , ISNULL((SELECT SUM(X.BASIS_Q)
		                             FROM BIV200T X WITH (NOLOCK)
		                            WHERE X.COMP_CODE    = A.COMP_CODE
		                              AND X.DIV_CODE     = A.DIV_CODE
		                              AND X.BASIS_YYYYMM = @FrDate
		                              AND X.ITEM_CODE    = A.ITEM_CODE),0) 
                         + ISNULL((SELECT SUM(X.BASIS_Q)
		                             FROM BIZ200T X WITH (NOLOCK)
		                            WHERE X.COMP_CODE    = A.COMP_CODE
		                              AND X.DIV_CODE     = A.DIV_CODE
		                              AND X.BASIS_YYYYMM = @FrDate
		                              AND X.ITEM_CODE    = A.ITEM_CODE),0) AS BASIS_Q
		                 , ISNULL((SELECT SUM(X.BASIS_AMOUNT_I)
		                             FROM BIV200T X WITH (NOLOCK)
		                            WHERE X.COMP_CODE    = A.COMP_CODE
		                              AND X.DIV_CODE     = A.DIV_CODE
		                              AND X.BASIS_YYYYMM = @FrDate
		                              AND X.ITEM_CODE    = A.ITEM_CODE),0)
		                 + ISNULL((SELECT SUM(X.BASIS_AMOUNT_I)
		                             FROM BIZ200T X WITH (NOLOCK)
		                            WHERE X.COMP_CODE    = A.COMP_CODE
		                              AND X.DIV_CODE     = A.DIV_CODE
		                              AND X.BASIS_YYYYMM = @FrDate
		                              AND X.ITEM_CODE    = A.ITEM_CODE),0) AS BASIS_I
        		         , SUM(A.INSTOCK_Q)                    AS INSTOCK_Q                /* 입고수량           */
        		         , SUM(A.SUBINSTOCK_Q)                 AS SUBINSTOCK_Q             /* 대체입고           */
        		         , SUM(A.OUTSTOCK_Q)                   AS OUTSTOCK_Q               /* 출고수량           */
        		         , SUM(A.RETURN_Q)                     AS RETURN_Q                 /* 반품수량           */
        		         , SUM(A.SUBOUTSTOCK_Q)                AS SUBOUTSTOCK_Q            /* 대체출고           */
        		         , SUM(A.INSTOCK_I)                    AS INSTOCK_I                /* 입고금액           */ 
                         , SUM(A.SUBINSTOCK_I)                 AS SUBINSTOCK_I             /* 대체입고금액       */
                         , SUM(A.OUTSTOCK_I)                   AS OUTSTOCK_I               /* 출고금액           */
                         , SUM(A.RETURN_I)                     AS RETURN_I                 /* 반품금액           */
                         , SUM(A.SUBOUTSTOCK_I)                AS SUBOUTSTOCK_I            /* 대체출고금액       */
        		         , SUM(A.CHECK_INSTOCK_Q)              AS CHECK_INSTOCK_Q          /* 1년-입고수량       */
                         , SUM(A.CHECK_OUTSTOCK_Q)             AS CHECK_OUTSTOCK_Q         /* 1년-출고수량       */
                         , SUM(A.CHECK_SUBOUTSTOCK_Q)          AS CHECK_SUBOUTSTOCK_Q      /* 1년-대체출고수량   */
                         , SUM(A.CHECK_RETURN_Q)               AS CHECK_RETURN_Q           /* 1년-반품수량       */
                      FROM (SELECT A.COMP_CODE                                      /* 법인코드           */
         		                 , A.DIV_CODE                                       /* 사업장             */
         		                 , A.ITEM_CODE                                      /* 품목               */
         		                 , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS INSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_CAL_I ELSE 0 END) AS INSTOCK_I
         		                 , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS SUBINSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_CAL_I ELSE 0 END) AS SUBINSTOCK_I
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS OUTSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_CAL_I ELSE 0 END) AS OUTSTOCK_I
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS SUBOUTSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_CAL_I ELSE 0 END) AS SUBOUTSTOCK_I
         		                 , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS RETURN_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_CAL_I ELSE 0 END) AS RETURN_I
         		                 , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS CHECK_INSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS CHECK_OUTSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS CHECK_SUBOUTSTOCK_Q
         		                 , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q     ELSE 0 END) AS CHECK_RETURN_Q
         		              FROM (SELECT DISTINCT B.COMP_CODE
                                         , B.DIV_CODE
                                         , B.ITEM_CODE
                                      FROM (SELECT A.COMP_CODE
                                                 , A.DIV_CODE
                                                 , A.ITEM_CODE
                                                 , SUM(A.STOCK_Q) AS STOCK_Q
                                              FROM            BIV200T A WITH (NOLOCK)
                  		                           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                  		                                                              AND C2.DIV_CODE    = A.DIV_CODE
                  		                                                              AND C2.ITEM_CODE   = A.ITEM_CODE
                  		                     WHERE A.COMP_CODE     = @CompCode
                  		                       AND A.DIV_CODE      = @DivCode
                  		                       AND C2.ITEM_ACCOUNT IN ('00','40','50')
                                               AND A.BASIS_YYYYMM  = @ToDate
                                             GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                                             HAVING SUM(A.STOCK_Q) != 0
                                             UNION
                                             SELECT A.COMP_CODE
                                                  , A.DIV_CODE
                                                  , A.ITEM_CODE
                                                  , SUM(A.STOCK_Q) AS STOCK_Q
                                               FROM            BIZ200T A WITH (NOLOCK)
                  		                            INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                  		                                                               AND C2.DIV_CODE    = A.DIV_CODE
                  		                                                               AND C2.ITEM_CODE   = A.ITEM_CODE
                  		                      WHERE A.COMP_CODE     = @CompCode
                  		                        AND A.DIV_CODE      = @DivCode
                  		                        AND C2.ITEM_ACCOUNT IN ('00','40','50')
                                                AND A.BASIS_YYYYMM  = @ToDate
                                              GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                                              HAVING SUM(A.STOCK_Q) != 0) B) B
                                    INNER JOIN BTR100T A  WITH (NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
         		                                                       AND A.DIV_CODE     = B.DIV_CODE
         		                                                       AND A.ITEM_CODE    = B.ITEM_CODE
                             UNION ALL                                          
                             SELECT A.COMP_CODE                                      /* 법인코드           */
         		                  , A.DIV_CODE                                       /* 사업장             */
         		                  , A.ITEM_CODE                                      /* 품목               */
         		                  , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS INSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_I ELSE 0 END) AS INSTOCK_I
         		                  , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS SUBINSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_I ELSE 0 END) AS SUBINSTOCK_I
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS OUTSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_I ELSE 0 END) AS OUTSTOCK_I
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS SUBOUTSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_I ELSE 0 END) AS SUBOUTSTOCK_I
         		                  , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS RETURN_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @FrDate + '01' AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_I ELSE 0 END) AS RETURN_I
         		                  , (CASE WHEN A.INOUT_TYPE = '1' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS CHECK_INSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('1','2','4','5','9') AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS CHECK_OUTSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '2' AND A.INOUT_METH IN ('3','6')             AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS CHECK_SUBOUTSTOCK_Q
         		                  , (CASE WHEN A.INOUT_TYPE = '3'                                           AND A.INOUT_DATE &gt;= @LastOneYear   AND A.INOUT_DATE &lt;= @ToDate + '31' THEN A.INOUT_Q ELSE 0 END) AS CHECK_RETURN_Q
         		               FROM (SELECT DISTINCT B.COMP_CODE
                                         , B.DIV_CODE
                                         , B.ITEM_CODE
                                      FROM (SELECT A.COMP_CODE
                                                 , A.DIV_CODE
                                                 , A.ITEM_CODE
                                                 , SUM(A.STOCK_Q) AS STOCK_Q
                                              FROM            BIV200T A WITH (NOLOCK)
                  		                           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                  		                                                              AND C2.DIV_CODE    = A.DIV_CODE
                  		                                                              AND C2.ITEM_CODE   = A.ITEM_CODE
                  		                     WHERE A.COMP_CODE     = @CompCode
                  		                       AND A.DIV_CODE      = @DivCode
                  		                       AND C2.ITEM_ACCOUNT IN ('00','40','50')
                                               AND A.BASIS_YYYYMM  = @ToDate
                                             GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                                             HAVING SUM(A.STOCK_Q) != 0
                                             UNION
                                             SELECT A.COMP_CODE
                                                  , A.DIV_CODE
                                                  , A.ITEM_CODE
                                                  , SUM(A.STOCK_Q) AS STOCK_Q
                                               FROM            BIZ200T A WITH (NOLOCK)
                  		                            INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                  		                                                               AND C2.DIV_CODE    = A.DIV_CODE
                  		                                                               AND C2.ITEM_CODE   = A.ITEM_CODE
                  		                      WHERE A.COMP_CODE     = @CompCode
                  		                        AND A.DIV_CODE      = @DivCode
                  		                        AND C2.ITEM_ACCOUNT IN ('00','40','50')
                                                AND A.BASIS_YYYYMM  = @ToDate
                                              GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
                                              HAVING SUM(A.STOCK_Q) != 0) B) B
                                    INNER JOIN BIZ600T A  WITH (NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
         		                                                       AND A.DIV_CODE     = B.DIV_CODE
         		                                                       AND A.ITEM_CODE    = B.ITEM_CODE) A
		                   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                                      AND C1.ITEM_CODE   = A.ITEM_CODE
				           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
				                                              AND C2.DIV_CODE    = A.DIV_CODE
				                                              AND C2.ITEM_CODE   = A.ITEM_CODE
		             GROUP BY A.COMP_CODE  , A.DIV_CODE  , C2.ITEM_ACCOUNT, A.ITEM_CODE, C1.ITEM_NAME1
                            , C1.ITEM_NAME2, C1.ITEM_NAME, C1.SPEC        , C2.ORDER_UNIT) A
		     ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_ACCOUNT, A.ITEM_CODE
		     
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
		END
	</select>
	<update  id="s_agc600ukr_mitServiceImpl.insertList" parameterType="Map">
	   		INSERT INTO S_AGC600T_MIT
			(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, FR_DATE                                 --조회시작월
				, TO_DATE                                 --조회종료월
				, ITEM_CODE                               --품목코드
				, BASIS_Q                                 --기초수량
				, INSTOCK_Q                               --입고수량
				, SUBINSTOCK_Q                            --대체입고
				, OUTSTOCK_Q                              --출고수량
				, SUBOUTSTOCK_Q                           --대체출고
				, STOCK_Q                                 --재고수량
				, STOCK_P                                 --단가
				, STOCK_I                                 --재고금액
				, NOIN_OVERAYEAR                          --년이상미구매
				, NOOUT_OVERAYEAR                         --년이상미출고
				, RESULT                                  --결과
				, RESERVE_RATE                            --설정비율
				, ALLOWANCE_I                             --대손충당금
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{FR_DATE}
				, #{TO_DATE}
				, #{ITEM_CODE}
				, #{BASIS_Q}
				, #{INSTOCK_Q}
				, #{SUBINSTOCK_Q}
				, #{OUTSTOCK_Q}
				, #{SUBOUTSTOCK_Q}
				, #{STOCK_Q}
				, #{STOCK_P}
				, #{STOCK_I}
				, #{NOIN_OVERAYEAR}
				, #{NOOUT_OVERAYEAR}
				, #{RESULT}
				, #{RESERVE_RATE}
				, #{ALLOWANCE_I}
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			)
	</update>
	<update  id="s_agc600ukr_mitServiceImpl.updateList" parameterType="Map">
		IF EXISTS(SELECT COMP_CODE 
	    		    FROM S_AGC600T_MIT 
	    		   WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   FR_DATE                          = #{FR_DATE}
		  AND   TO_DATE                          = #{TO_DATE}
		  AND   ITEM_CODE                        = #{ITEM_CODE} )
		BEGIN
			UPDATE  S_AGC600T_MIT
			   SET    BASIS_Q                        = #{BASIS_Q}
					, INSTOCK_Q                      = #{INSTOCK_Q}
					, SUBINSTOCK_Q                   = #{SUBINSTOCK_Q}
					, OUTSTOCK_Q                     = #{OUTSTOCK_Q}
					, SUBOUTSTOCK_Q                  = #{SUBOUTSTOCK_Q}
					, STOCK_Q                        = #{STOCK_Q}
					, STOCK_P                        = #{STOCK_P}
					, STOCK_I                        = #{STOCK_I}
					, NOIN_OVERAYEAR                 = #{NOIN_OVERAYEAR}
					, NOOUT_OVERAYEAR                = #{NOOUT_OVERAYEAR}
					, RESULT                         = #{RESULT}
					, RESERVE_RATE                   = #{RESERVE_RATE}
					, ALLOWANCE_I                    = #{ALLOWANCE_I}
					, UPDATE_DB_USER                 = #{S_USER_ID}
					, UPDATE_DB_TIME                 = GETDATE()
		    WHERE   COMP_CODE                        = #{S_COMP_CODE}
			  AND   DIV_CODE                         = #{DIV_CODE}
			  AND   FR_DATE                          = #{FR_DATE}
			  AND   TO_DATE                          = #{TO_DATE}
			  AND   ITEM_CODE                        = #{ITEM_CODE}
		END
		ELSE 
		BEGIN
			INSERT INTO S_AGC600T_MIT
			(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, FR_DATE                                 --조회시작월
				, TO_DATE                                 --조회종료월
				, ITEM_CODE                               --품목코드
				, BASIS_Q                                 --기초수량
				, INSTOCK_Q                               --입고수량
				, SUBINSTOCK_Q                            --대체입고
				, OUTSTOCK_Q                              --출고수량
				, SUBOUTSTOCK_Q                           --대체출고
				, STOCK_Q                                 --재고수량
				, STOCK_P                                 --단가
				, STOCK_I                                 --재고금액
				, NOIN_OVERAYEAR                          --년이상미구매
				, NOOUT_OVERAYEAR                         --년이상미출고
				, RESULT                                  --결과
				, RESERVE_RATE                            --설정비율
				, ALLOWANCE_I                             --대손충당금
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{FR_DATE}
				, #{TO_DATE}
				, #{ITEM_CODE}
				, #{BASIS_Q}
				, #{INSTOCK_Q}
				, #{SUBINSTOCK_Q}
				, #{OUTSTOCK_Q}
				, #{SUBOUTSTOCK_Q}
				, #{STOCK_Q}
				, #{STOCK_P}
				, #{STOCK_I}
				, #{NOIN_OVERAYEAR}
				, #{NOOUT_OVERAYEAR}
				, #{RESULT}
				, #{RESERVE_RATE}
				, #{ALLOWANCE_I}
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			)
		END
	</update>
	<update id="s_agc600ukr_mitServiceImpl.deleteList" parameterType="Map">
		DELETE  FROM   S_AGC600T_MIT
	    WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   FR_DATE                          = #{FR_DATE}
		  AND   TO_DATE                          = #{TO_DATE}
		  AND   ITEM_CODE                        = #{ITEM_CODE}
	</update>
		<update id="s_agc600ukr_mitServiceImpl.deleteAll" parameterType="Map">
		DELETE  FROM   S_AGC600T_MIT
	    WHERE   COMP_CODE                        = #{S_COMP_CODE}
		  AND   DIV_CODE                         = #{DIV_CODE}
		  AND   FR_DATE                          = #{FR_DATE}
		  AND   TO_DATE                          = #{TO_DATE}
	</update>
</mapper>