<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_agc870ukr_mitServiceImpl">

	<select id="s_agc870ukr_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @BasisDate      NVARCHAR(08)   /* 조회일              */
		
		          , @UserId         NVARCHAR(100)  /* 사용자ID            */
		          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
		
		    SET @CompCode  = #{S_COMP_CODE}
		    SET @BasisDate = #{BASIS_DATE}
		
		    SET @UserId    = #{S_USER_ID}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 조회 */
		    SELECT A.COMP_CODE                                      /* 법인                    */
			     , A.DIV_CODE                                       /* 사업장(BOR120T)         */
		         , A.BASIS_DATE                                     /* 조회기준일              */
		         , A.RISK_YN                                        /* 부실여부                */
		         , A.CUSTOM_CODE                                    /* 거래처                  */
				 , CASE WHEN @RefItem = '1' THEN C3.CUSTOM_NAME1
				        WHEN @RefItem = '2' THEN C3.CUSTOM_NAME2
				                            ELSE C3.CUSTOM_NAME
				    END AS CUSTOM_NAME                              /* 거래처명                 */
		         , A.NATION_INOUT                                   /* 구분                     */
		         , A.ITEM_DIV                                       /* 품목군                   */
		         , A.RESPONSIBILITY                                 /* 담당자                   */
		         , A.RECEIVTURNOVER                                 /* 채권회수주기             */
		         , A.OVERAYEAR                                      /* 1년초과                  */
		         , A.MONTH_12                                       /* 12개월전                 */
		         , A.MONTH_11                                       /* 19개월전                 */
		         , A.MONTH_10                                       /* 10개월전                 */
		         , A.MONTH_09                                       /* 09개월전                 */
		         , A.MONTH_08                                       /* 08개월전                 */
		         , A.MONTH_07                                       /* 07개월전                 */
		         , A.MONTH_06                                       /* 06개월전                 */
		         , A.MONTH_05                                       /* 05개월전                 */
		         , A.MONTH_04                                       /* 04개월전                 */
		         , A.MONTH_03                                       /* 03개월전                 */
		         , A.MONTH_02                                       /* 02개월전                 */
		         , A.MONTH_01                                       /* 01개월전                 */
		         , A.BALANCE_SUM                                    /* 조회일까지의 잔액        */
		         , A.AGEDRECEIVABLE                                 /* 결제일 초과 미입금액     */
		         , A.EXPECTTORECEIV                                 /* 조회일까지 입금예정금액  */
		         , A.ALLOWANCE                                      /* 대손충당금               */
		         , A.PAWN_AMOUNT                                    /* 담보금액                 */
		         , A.REMARKS                                        /* 비고(회수계획 등)        */
	             , '' AS FLAG
		      FROM            S_AGC870T_MIT A  WITH (NOLOCK)
		           INNER JOIN BCM100T       C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
		                                                    AND C3.CUSTOM_CODE   = A.CUSTOM_CODE
		     WHERE A.COMP_CODE  = @CompCode   
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		           AND   A.DIV_CODE            IN 
			    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
								#{item}
					</foreach>
			   </if> 
		       AND A.BASIS_DATE = @BasisDate
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_agc870ukr_mitServiceImpl.selectCheckNewDataList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
		          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
		          , @BasisDate      NVARCHAR(08)   /* 조회일              */
		
		    SET @CompCode  = #{S_COMP_CODE}
		    SET @BasisDate = #{BASIS_DATE}
		
		    SELECT COUNT(*)
		      FROM S_AGC870T_MIT WITH (NOLOCK)
		     WHERE COMP_CODE  = @CompCode   
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		           AND   DIV_CODE            IN 
			    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
								#{item}
					</foreach>
			 </if>    
		       AND BASIS_DATE = @BasisDate
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	<select id="s_agc870ukr_mitServiceImpl.selectNewDataList" parameterType="Map" resultType="rMap">
		BEGIN
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	        
	        DECLARE @COMP_CODE  NVARCHAR(08)
	              , @AC_DATE    NVARCHAR(08)
	
	        SET @COMP_CODE = #{S_COMP_CODE}
	        SET @AC_DATE   = #{BASIS_DATE}
	
	        SELECT A.COMP_CODE                  /* 법인코드         */                                                                
	             , A.DIV_CODE                   /* 사업장코드       */
	             , @AC_DATE AS BASIS_DATE       /* 조회일           */
	             , ''       AS RISK_YN          /* 부실여부         */
	             , A.CUSTOM_CODE                /* 거래처코드       */
	             , A.CUSTOM_NAME                /* 거래처명         */
	             , A.NATION_INOUT               /* 구분(국내외)     */
	             , A.ITEM_DIV                   /* 품목군           */
	             , A.RESPONSIBILITY             /* 담당자           */
	             , A.RECEIVTURNOVER             /* 채권회수주기     */
 	             , SUM(CASE WHEN A.TERM &gt; 12                  THEN A.BLN_I ELSE 0 END) AS OVERAYEAR     /* 1년초과     */
	             , SUM(CASE WHEN A.TERM &gt; 11 AND A.TERM &lt;= 12 THEN A.BLN_I ELSE 0 END) AS MONTH_12      /* 12개월      */
	             , SUM(CASE WHEN A.TERM &gt; 10 AND A.TERM &lt;= 11 THEN A.BLN_I ELSE 0 END) AS MONTH_11      /* 11개월      */
	             , SUM(CASE WHEN A.TERM &gt;  9 AND A.TERM &lt;= 10 THEN A.BLN_I ELSE 0 END) AS MONTH_10      /* 10개월      */
	             , SUM(CASE WHEN A.TERM &gt;  8 AND A.TERM &lt;=  9 THEN A.BLN_I ELSE 0 END) AS MONTH_09      /* 09개월      */
	             , SUM(CASE WHEN A.TERM &gt;  7 AND A.TERM &lt;=  8 THEN A.BLN_I ELSE 0 END) AS MONTH_08      /* 08개월      */
	             , SUM(CASE WHEN A.TERM &gt;  6 AND A.TERM &lt;=  7 THEN A.BLN_I ELSE 0 END) AS MONTH_07      /* 07개월      */
	             , SUM(CASE WHEN A.TERM &gt;  5 AND A.TERM &lt;=  6 THEN A.BLN_I ELSE 0 END) AS MONTH_06      /* 06개월      */
	             , SUM(CASE WHEN A.TERM &gt;  4 AND A.TERM &lt;=  5 THEN A.BLN_I ELSE 0 END) AS MONTH_05      /* 05개월      */
	             , SUM(CASE WHEN A.TERM &gt;  3 AND A.TERM &lt;=  4 THEN A.BLN_I ELSE 0 END) AS MONTH_04      /* 04개월      */
	             , SUM(CASE WHEN A.TERM &gt;  2 AND A.TERM &lt;=  3 THEN A.BLN_I ELSE 0 END) AS MONTH_03      /* 03개월      */
	             , SUM(CASE WHEN A.TERM &gt;  1 AND A.TERM &lt;=  2 THEN A.BLN_I ELSE 0 END) AS MONTH_02      /* 02개월      */
	             , SUM(CASE WHEN                 A.TERM &lt;=  1 THEN A.BLN_I ELSE 0 END) AS MONTH_01      /* 01개월      */
	             , SUM(A.BLN_I)                 AS BALANCE_SUM  /* 조회일까지의 잔액 */          
	             , SUM(A.AGEDRECEIVABLE)        AS AGEDRECEIVABLE       
	             , 0                            AS EXPECTTORECEIV       
	             , ROUND(SUM(A.BLN_I) * 0.01,0) AS ALLOWANCE            
	             , 0                            AS PAWN_AMOUNT          
	             , '' AS REMARKS    
	             , 'S' AS FLAG          
              FROM (SELECT A.COMP_CODE
	                     , A.DIV_CODE
	                     , A.ORG_AC_DATE
	                     , A.PEND_DATA_CODE AS CUSTOM_CODE
	                     , A.CUSTOM_NAME
	                     , A.ACCNT
	                     , A.BLN_I
	                     , A.AGEDRECEIVABLE
	                     , ISNULL(E.NATION_CODE   ,'') AS NATION_INOUT
	                     , ISNULL(E.ITEM_DIV      ,'') AS ITEM_DIV
	                     , ISNULL(E.RESPONSIBILITY,'') AS RESPONSIBILITY
	                     , A.RECEIVTURNOVER
	                     , A.TERM
	                  FROM (SELECT A.COMP_CODE
	                             , A.DIV_CODE
	                             , A.ORG_AC_DATE
	                             , A.PEND_DATA_CODE
                                 , C3.CUSTOM_NAME
	                             , A.ACCNT
	                             , SUM(A.ORG_AMT_I - ISNULL(C.J_AMT_I, 0)) AS BLN_I
                                 , SUM(CASE WHEN DATEADD(DAY, (CASE WHEN ISNUMERIC(ISNULL(M2.REF_CODE3,0)) = 1 THEN ISNULL(M2.REF_CODE3,0) ELSE 0 END), A.ORG_AC_DATE) &lt; @AC_DATE
                                            THEN A.ORG_AMT_I - ISNULL(C.J_AMT_I, 0)
                                            ELSE 0
                                        END) AS AGEDRECEIVABLE
                                 , D.EX_DATE
                                 , D.EX_NUM                        
	                             , (CASE WHEN ISNUMERIC(ISNULL(M2.REF_CODE3,0)) = 1 THEN ISNULL(M2.REF_CODE3,0) ELSE 0 END) AS RECEIVTURNOVER
	                             , DATEDIFF(MONTH, SUBSTRING(A.ORG_AC_DATE, 1, 6) + '01', DATEADD(MONTH, 1, @AC_DATE))      AS TERM
	                          FROM            AGB300T A  WITH (NOLOCK)
	                               INNER JOIN ABA400T B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                                                  AND B.ACCNT      = A.ACCNT
	                                                                  AND B.SPEC_DIVI IN ('D1', 'G1')
	                               LEFT  JOIN (SELECT C.COMP_CODE
	                                                , C.DIV_CODE
	                                                , C.ORG_AC_DATE
	                                                , C.ORG_SLIP_NUM
	                                                , C.ORG_SLIP_SEQ
	                                                , SUM(C.J_AMT_I) AS J_AMT_I
	                                             FROM AGB320T C WITH (NOLOCK)
	                                            WHERE C.COMP_CODE  = @COMP_CODE
								                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
							 			          AND C.DIV_CODE  IN 
												    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
																	#{item}
														</foreach>
												 </if>
	                                              AND C.PEND_CODE  = 'A4'
	                                              AND C.J_EX_DATE &lt;= @AC_DATE
	                                            GROUP BY C.COMP_CODE, C.DIV_CODE, C.ORG_AC_DATE, C.ORG_SLIP_NUM, C.ORG_SLIP_SEQ) C ON C.COMP_CODE    = A.COMP_CODE
	                                                                                                                              AND C.DIV_CODE     = A.DIV_CODE
	                                                                                                                              AND C.ORG_AC_DATE  = A.ORG_AC_DATE
	                                                                                                                              AND C.ORG_SLIP_NUM = A.ORG_SLIP_NUM
	                                                                                                                              AND C.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ
	                               LEFT  JOIN AGJ110T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
	                                                                  AND D.DIV_CODE     = A.DIV_CODE
	                                                                  AND D.AC_DATE      = A.ORG_AC_DATE
	                                                                  AND D.SLIP_NUM     = A.ORG_SLIP_NUM
	                                                                  AND D.SLIP_SEQ     = A.ORG_SLIP_SEQ
	                                                                  AND (D.MOD_DIVI IS NULL OR D.MOD_DIVI = '')
	                               LEFT  JOIN BCM100T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
	                                                                  AND C3.CUSTOM_CODE = A.PEND_DATA_CODE
	                               LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = C3.COMP_CODE
	                                                                  AND M2.MAIN_CODE   = 'B034'
	                                                                  AND M2.SUB_CODE    = C3.RECEIPT_DAY
                            WHERE A.COMP_CODE    = @COMP_CODE
			                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		 			          AND A.DIV_CODE    IN 
							    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
												#{item}
									</foreach>
							 </if>
       	                      AND A.PEND_CODE    = 'A4'
       	                      AND A.ORG_AC_DATE &lt;= @AC_DATE
       	                      AND A.ORG_AMT_I - ISNULL(C.J_AMT_I, 0) != 0
                            GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORG_AC_DATE, A.PEND_DATA_CODE, C3.CUSTOM_NAME, A.ACCNT, D.EX_DATE, D.EX_NUM, ISNULL(M2.REF_CODE3,0)) A
	                       LEFT  JOIN (SELECT A.COMP_CODE
                                            , A.DIV_CODE
                                            , A.NATION_CODE
	                                        , MAX(CASE WHEN C1.ITEM_ACCOUNT IN ('00') THEN ISNULL(C1.ITEM_LEVEL_NAME2,'')
	                                                   WHEN C1.ITEM_ACCOUNT IN ('10') THEN ISNULL(C1.ITEM_LEVEL_NAME1,'')
	                                                                              ELSE ''
	                                               END) ITEM_DIV
	                                        , MAX(ISNULL(M1.CODE_NAME,''))  AS RESPONSIBILITY
                                            , (CASE WHEN A.BILL_TYPE = '10' OR A.BILL_TYPE = '50'
                    		                        THEN B.EX_DATE
                    		                        ELSE A.EX_DATE
                    		                    END) AS EX_DATE
                                            , (CASE WHEN A.BILL_TYPE = '10' OR A.BILL_TYPE = '50'
                    		                        THEN B.EX_NUM
                    		                        ELSE A.EX_NUM
                    		                    END) AS EX_NUM
                                         FROM           SALES_V A  WITH (NOLOCK)
                                              LEFT JOIN STB100T B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                                                        AND B.DIV_CODE   = A.DIV_CODE
		                                                                        AND B.PUB_NUM    = A.PUB_NUM
                                              LEFT JOIN BPR200TV C1 WITH(NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
			                                                                    AND C1.DIV_CODE  = A.DIV_CODE
			                                                                    AND C1.ITEM_CODE = A.ITEM_CODE
	                                          LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
	                                                                            AND M1.MAIN_CODE = 'S010'
	                                                                            AND M1.SUB_CODE  = A.SALE_PRSN
                                        WHERE A.COMP_CODE = @COMP_CODE
						                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
					 			          AND A.DIV_CODE IN 
										    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
															#{item}
												</foreach>
										 </if>
                                       GROUP BY A.COMP_CODE, A.DIV_CODE, A.NATION_CODE
                                              , A.BILL_TYPE, A.EX_DATE , B.EX_DATE    , A.EX_NUM   , B.EX_NUM) E ON E.COMP_CODE = A.COMP_CODE
	                                                                                                            AND E.DIV_CODE  = A.DIV_CODE
	                                                                                                            AND E.EX_DATE   = A.EX_DATE
	                                                                                                            AND E.EX_NUM    = A.EX_NUM
  			       ) A
	         GROUP BY A.COMP_CODE, A.DIV_CODE      , A.CUSTOM_CODE   , A.CUSTOM_NAME, A.NATION_INOUT
	                , A.ITEM_DIV , A.RESPONSIBILITY, A.RECEIVTURNOVER
	        HAVING SUM(A.BLN_I) != 0
	         ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_DIV
	    END
	</select>
	<update  id="s_agc870ukr_mitServiceImpl.insertList" parameterType="Map">
	   		INSERT INTO S_AGC870T_MIT
			(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, BASIS_DATE                              --조회기준일
				, RISK_YN                                 --부실여부
				, CUSTOM_CODE                             --거래처
				, NATION_INOUT                            --구분
				, ITEM_DIV                                --품목군
				, RESPONSIBILITY                          --담당자
				, RECEIVTURNOVER                          --채권회수주기
				, OVERAYEAR                               --1년초과
				, MONTH_12                                --12개월전
				, MONTH_11                                --19개월전
				, MONTH_10                                --10개월전
				, MONTH_09                                --09개월전
				, MONTH_08                                --08개월전
				, MONTH_07                                --07개월전
				, MONTH_06                                --06개월전
				, MONTH_05                                --05개월전
				, MONTH_04                                --04개월전
				, MONTH_03                                --03개월전
				, MONTH_02                                --02개월전
				, MONTH_01                                --01개월전
				, BALANCE_SUM                             --조회일까지의 잔액
				, AGEDRECEIVABLE                          --결제일 초과 미입금액
				, EXPECTTORECEIV                          --조회일까지 입금예정금액
				, ALLOWANCE                               --대손충당금
				, PAWN_AMOUNT                             --담보금액
				, REMARKS                                 --비고(회수계획 등)
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{BASIS_DATE}
				, #{RISK_YN}
				, #{CUSTOM_CODE}
				, #{NATION_INOUT}
				, #{ITEM_DIV}
				, #{RESPONSIBILITY}
				, #{RECEIVTURNOVER}
				, #{OVERAYEAR}
				, #{MONTH_12}
				, #{MONTH_11}
				, #{MONTH_10}
				, #{MONTH_09}
				, #{MONTH_08}
				, #{MONTH_07}
				, #{MONTH_06}
				, #{MONTH_05}
				, #{MONTH_04}
				, #{MONTH_03}
				, #{MONTH_02}
				, #{MONTH_01}
				, #{BALANCE_SUM}
				, #{AGEDRECEIVABLE}
				, #{EXPECTTORECEIV}
				, #{ALLOWANCE}
				, #{PAWN_AMOUNT}
				, #{REMARKS}
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			)
	</update>
	<update  id="s_agc870ukr_mitServiceImpl.updateList" parameterType="Map">
	    IF EXISTS(SELECT COMP_CODE 
	    		    FROM  S_AGC870T_MIT 
	    		   WHERE  COMP_CODE                      = #{S_COMP_CODE}
					 AND  DIV_CODE                       = #{DIV_CODE}
					 AND  BASIS_DATE                     = #{BASIS_DATE}
					 AND  CUSTOM_CODE                    = #{CUSTOM_CODE}
					 AND  NATION_INOUT                   = #{NATION_INOUT}
					 AND  ITEM_DIV                       = #{ITEM_DIV}
					 AND  RESPONSIBILITY                 = #{RESPONSIBILITY})
		BEGIN
			UPDATE  S_AGC870T_MIT
			   SET    RISK_YN                        = #{RISK_YN}
					, RECEIVTURNOVER                 = #{RECEIVTURNOVER}
					, OVERAYEAR                      = #{OVERAYEAR}
					, MONTH_12                       = #{MONTH_12}
					, MONTH_11                       = #{MONTH_11}
					, MONTH_10                       = #{MONTH_10}
					, MONTH_09                       = #{MONTH_09}
					, MONTH_08                       = #{MONTH_08}
					, MONTH_07                       = #{MONTH_07}
					, MONTH_06                       = #{MONTH_06}
					, MONTH_05                       = #{MONTH_05}
					, MONTH_04                       = #{MONTH_04}
					, MONTH_03                       = #{MONTH_03}
					, MONTH_02                       = #{MONTH_02}
					, MONTH_01                       = #{MONTH_01}
					, BALANCE_SUM                    = #{BALANCE_SUM}
					, AGEDRECEIVABLE                 = #{AGEDRECEIVABLE}
					, EXPECTTORECEIV                 = #{EXPECTTORECEIV}
					, ALLOWANCE                      = #{ALLOWANCE}
					, PAWN_AMOUNT                    = #{PAWN_AMOUNT}
					, REMARKS                        = #{REMARKS}
					, UPDATE_DB_USER                 = #{S_USER_ID}
					, UPDATE_DB_TIME                 = GETDATE()
		    WHERE  COMP_CODE                         = #{S_COMP_CODE}
			  AND  DIV_CODE                          = #{DIV_CODE}
			  AND  BASIS_DATE                        = #{BASIS_DATE}
			  AND  CUSTOM_CODE                       = #{CUSTOM_CODE}
			  AND  NATION_INOUT                      = #{NATION_INOUT}
			  AND  ITEM_DIV                          = #{ITEM_DIV}
			  AND  RESPONSIBILITY                    = #{RESPONSIBILITY}
		END
		ELSE 
		BEGIN
			INSERT INTO S_AGC870T_MIT
			(
				  COMP_CODE                               --법인
				, DIV_CODE                                --사업장(BOR120T)
				, BASIS_DATE                              --조회기준일
				, RISK_YN                                 --부실여부
				, CUSTOM_CODE                             --거래처
				, NATION_INOUT                            --구분
				, ITEM_DIV                                --품목군
				, RESPONSIBILITY                          --담당자
				, RECEIVTURNOVER                          --채권회수주기
				, OVERAYEAR                               --1년초과
				, MONTH_12                                --12개월전
				, MONTH_11                                --19개월전
				, MONTH_10                                --10개월전
				, MONTH_09                                --09개월전
				, MONTH_08                                --08개월전
				, MONTH_07                                --07개월전
				, MONTH_06                                --06개월전
				, MONTH_05                                --05개월전
				, MONTH_04                                --04개월전
				, MONTH_03                                --03개월전
				, MONTH_02                                --02개월전
				, MONTH_01                                --01개월전
				, BALANCE_SUM                             --조회일까지의 잔액
				, AGEDRECEIVABLE                          --결제일 초과 미입금액
				, EXPECTTORECEIV                          --조회일까지 입금예정금액
				, ALLOWANCE                               --대손충당금
				, PAWN_AMOUNT                             --담보금액
				, REMARKS                                 --비고(회수계획 등)
				, INSERT_DB_USER                          --
				, INSERT_DB_TIME                          --
				, UPDATE_DB_USER                          --
				, UPDATE_DB_TIME                          --
			) VALUES (
				  #{S_COMP_CODE}
				, #{DIV_CODE}
				, #{BASIS_DATE}
				, #{RISK_YN}
				, #{CUSTOM_CODE}
				, #{NATION_INOUT}
				, #{ITEM_DIV}
				, #{RESPONSIBILITY}
				, #{RECEIVTURNOVER}
				, #{OVERAYEAR}
				, #{MONTH_12}
				, #{MONTH_11}
				, #{MONTH_10}
				, #{MONTH_09}
				, #{MONTH_08}
				, #{MONTH_07}
				, #{MONTH_06}
				, #{MONTH_05}
				, #{MONTH_04}
				, #{MONTH_03}
				, #{MONTH_02}
				, #{MONTH_01}
				, #{BALANCE_SUM}
				, #{AGEDRECEIVABLE}
				, #{EXPECTTORECEIV}
				, #{ALLOWANCE}
				, #{PAWN_AMOUNT}
				, #{REMARKS}
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			)
		END
	</update>
	<update id="s_agc870ukr_mitServiceImpl.deleteList" parameterType="Map">
		DELETE  FROM   S_AGC870T_MIT
	    WHERE  COMP_CODE                         = #{S_COMP_CODE}
			  AND  DIV_CODE                          = #{DIV_CODE}
			  AND  BASIS_DATE                        = #{BASIS_DATE}
			  AND  CUSTOM_CODE                       = #{CUSTOM_CODE}
			  AND  NATION_INOUT                      = #{NATION_INOUT}
			  AND  ITEM_DIV                          = #{ITEM_DIV}
			  AND  RESPONSIBILITY                    = #{RESPONSIBILITY}
	</update>
		<update id="s_agc870ukr_mitServiceImpl.deleteAll" parameterType="Map">
		DELETE  FROM   S_AGC870T_MIT
	    WHERE  COMP_CODE                     = #{S_COMP_CODE}
		 AND   DIV_CODE            IN 
    	<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
		</foreach>	 
		 AND  BASIS_DATE                     = #{BASIS_DATE}
	</update>
</mapper>