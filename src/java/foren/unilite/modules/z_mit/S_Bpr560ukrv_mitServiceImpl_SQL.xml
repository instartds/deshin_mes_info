<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr560ukrv_mitService">

	<select id="s_bpr560ukrv_mitService.checkAllDiv" parameterType="Map" resultType="rMap">
		SELECT SUB_CODE
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B910'
		   AND SUB_CODE != '$'
		   AND REF_CODE1 = 'Y'
	</select>
	<select id="s_bpr560ukrv_mitService.selectDivList" parameterType="Map" resultType="rMap">
		SELECT DIV_CODE 
		  FROM BOR120T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND USE_YN = 'Y'
	</select>


	<delete id="s_bpr560ukrv_mitService.deleteAllDiv" parameterType="Map">
		DELETE FROM BPR500T
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
		   AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
	       AND START_DATE      = #{START_DATE}
	       AND PATH_CODE       = #{PATH_CODE}
	</delete>
	<delete id="s_bpr560ukrv_mitService.deleteAllDiv2" parameterType="Map">
		DELETE FROM S_BPR510T_MIT
		 WHERE COMP_CODE        = #{S_COMP_CODE}
	       AND SALE_CUSTOM_CODE = #{SALE_CUSTOM_CODE}
		   AND PROD_ITEM_CODE   = #{PROD_ITEM_CODE}
		   AND CHILD_ITEM_CODE  = #{CHILD_ITEM_CODE}
		   AND EXCHG_ITEM_CODE  = #{EXCHG_ITEM_CODE}
	       AND START_DATE       = #{START_DATE}
	</delete>
	<update id="s_bpr560ukrv_mitService.updateAllDiv0" parameterType="Map">
		UPDATE BPR500T
	       SET LAB_NO          = #{LAB_NO}
	         , REQST_ID        = #{REQST_ID}
	         , UPDATE_DB_USER  = #{S_USER_ID}
	         , UPDATE_DB_TIME  = GETDATE()
	     WHERE COMP_CODE       = #{S_COMP_CODE}
	       AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
	       AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
	       AND PATH_CODE       = #{PATH_CODE}
	       AND START_DATE      = #{START_DATE}
	</update>
	<update id="s_bpr560ukrv_mitService.updateAllDiv" parameterType="Map">
		UPDATE BPR500T
	       SET SEQ             = #{SEQ}
	         , UNIT_Q          = #{UNIT_Q}
	         , PROD_UNIT_Q     = #{PROD_UNIT_Q}
	         , LOSS_RATE       = #{LOSS_RATE}
	         , USE_YN          = #{USE_YN}
	         , BOM_YN          = #{BOM_YN}
	         , STOP_DATE       = #{STOP_DATE}
	         , UNIT_P1         = #{UNIT_P1}
	         , UNIT_P2         = #{UNIT_P2}
	         , UNIT_P3         = #{UNIT_P3}
	         , MAN_HOUR        = #{MAN_HOUR}
	         , MATERIAL_CNT    = #{MATERIAL_CNT}
	         , SET_QTY         = #{SET_QTY}
	         , REMARK          = #{REMARK}
	         , GROUP_CODE      = #{GROUP_CODE}
	         , UPDATE_DB_USER  = #{S_USER_ID}
	         , UPDATE_DB_TIME  = GETDATE()
	         , PATH_CODE       = #{PATH_CODE}
	     WHERE COMP_CODE       = #{S_COMP_CODE}
	       AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
	       AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
	       AND PATH_CODE       = #{PATH_CODE}
	       AND START_DATE      = #{START_DATE}
	</update>
	<update id="s_bpr560ukrv_mitService.updateAllDiv2" parameterType="Map">
		UPDATE S_BPR510T_MIT
		       SET SEQ             =    #{SEQ}
		         , UNIT_Q          =    #{UNIT_Q}
		         , PROD_UNIT_Q     =    #{PROD_UNIT_Q}
		         , LOSS_RATE       =    #{LOSS_RATE}
		         , USE_YN          =	#{USE_YN}
		         , BOM_YN          =	#{BOM_YN}
		         , STOP_DATE       =	#{STOP_DATE}
		         , UNIT_P1         =	#{UNIT_P1}
		         , UNIT_P2         =    #{UNIT_P2}
		         , UNIT_P3         =    #{UNIT_P3}
		         , MAN_HOUR        =    #{MAN_HOUR}
		         , MATERIAL_CNT    =    #{MATERIAL_CNT}
		         , SET_QTY         =    #{SET_QTY}
		         , PRIOR_SEQ       =    #{PRIOR_SEQ}
		         , REMARK          =	#{REMARK}
		         , UPDATE_DB_USER  =	#{S_USER_ID}
		         , UPDATE_DB_TIME  = GETDATE()
		     WHERE COMP_CODE        = #{COMP_CODE}
	           AND SALE_CUSTOM_CODE = #{SALE_CUSTOM_CODE}
		       AND PROD_ITEM_CODE   = #{PROD_ITEM_CODE}
		       AND CHILD_ITEM_CODE  = #{CHILD_ITEM_CODE}
		       AND EXCHG_ITEM_CODE  = #{EXCHG_ITEM_CODE}
		       AND START_DATE       = #{START_DATE}
	</update>


	<select id="s_bpr560ukrv_mitService.selectList" parameterType="Map" resultType="rMap">
		/* s_bpr560ukrv_mitService.selectList */
	 	BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
			      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
			      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
			      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
			      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */


		    SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}


		    /* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')



			SELECT A.COMP_CODE
			     , A.DIV_CODE
			     , A.PROD_ITEM_CODE
			     , A.CHILD_ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                 	 WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                                         ELSE B.ITEM_NAME
	             END)              	AS ITEM_NAME
			     , B.SPEC
			     , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)    AS START_DATE
			     , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)     AS STOP_DATE
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
			     --20190627 LAB_NO 관련로직 자품목에서 모품목으로 이동
			     , A.LAB_NO
			     , A.REQST_ID
			     , A.SAMPLE_KEY
			     , C.ITEM_ACCOUNT
			  FROM            BPR500T A WITH (NOLOCK)
			       INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
			                                          AND B.ITEM_CODE = A.PROD_ITEM_CODE
			       INNER JOIN BPR200T C  WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
			                                          AND C.DIV_CODE  = A.DIV_CODE
			                                          AND C.ITEM_CODE = A.PROD_ITEM_CODE
			 WHERE A.CHILD_ITEM_CODE   = '$'
			   AND A.COMP_CODE         = @CompCode
			   <if test="@foren.Ognl@isNotEmpty(PROD_ITEM_CODE)">
			   AND A.PROD_ITEM_CODE LIKE #{PROD_ITEM_CODE} + '%'
			   </if>
			   <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
    			 AND (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
              			   WHEN @RefItem = '2' THEN B.ITEM_NAME2
			                      			   ELSE B.ITEM_NAME
                END)             LIKE REPLACE(#{ITEM_NAME},'[','[[]') + '%'
			   </if>

		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE = #{DIV_CODE}
		       </if>

		       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		       AND B.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		       </if>

		       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		       AND B.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		       </if>

		       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		       AND B.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		       </if>

			 ORDER BY A.PROD_ITEM_CODE
			 SET NOCOUNT OFF
	    	 SET ARITHABORT OFF
		END
	</select>
	<select id="s_bpr560ukrv_mitService.selectList2" parameterType="Map" resultType="rMap">
		/* s_bpr560ukrv_mitService.selectList2 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
			      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
			      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
			      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
			      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */


		    SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}


		    /* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')


		SELECT A.COMP_CODE
             , A.DIV_CODE
             , A.SEQ
             , A.PROD_ITEM_CODE
             , R1.ITEM_NAME AS PROD_ITEM_NAME
             , A.CHILD_ITEM_CODE
             , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                                     ELSE B.ITEM_NAME
	             END)						AS ITEM_NAME
	         , B.ITEM_NAME1
	         , B.ITEM_NAME2
             , B.SPEC
             , B.STOCK_UNIT
             /* 2009/01/06 PATH CODE 추가(YEO)  */
             , A.PATH_CODE   AS OLD_PATH_CODE
             , A.PATH_CODE
             , A.UNIT_Q
             , A.PROD_UNIT_Q
             , A.LOSS_RATE
             , A.UNIT_P1
             , A.UNIT_P2
             , A.UNIT_P3
             , A.MAN_HOUR
             --20180518 MATERIAL_CNT, SET_QTY 추가
             , A.MATERIAL_CNT
             , A.SET_QTY
             , A.USE_YN
             , A.BOM_YN
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE
             , A.REMARK
             , A.GROUP_CODE
             , A.GRANT_TYPE
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             --20190605 거래처, 구매단가 추가
             , C.CUSTOM_CODE
             , D.CUSTOM_NAME
             , C.PURCHASE_BASE_P
          FROM            BPR500T A WITH (NOLOCK)
               INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE       = B.COMP_CODE
                                                 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
               INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                 AND C.DIV_CODE        = A.DIV_CODE
                                                 AND C.ITEM_CODE       = A.CHILD_ITEM_CODE
               LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE       = C.COMP_CODE
                                                 AND D.CUSTOM_CODE     = C.CUSTOM_CODE
                                                 
               LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
               								    AND R1.ITEM_CODE = A.PROD_ITEM_CODE
         WHERE A.COMP_CODE       = @CompCode

			   AND A.PROD_ITEM_CODE = #{PROD_ITEM_CODE}
<!-- 20190718 주석처리
          <if test="@foren.Ognl@isNotEmpty(StPathY)">
                  <if test="StPathY == &quot;Y&quot;">
                  		AND  (A.path_code = '0' OR A.path_code LIKE '1%')
                  </if>
                  <if test="StPathY == &quot;N&quot;">
            	  		AND A.path_code = A.path_code
                  </if>
          </if>
-->
          <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE = #{DIV_CODE}
		  </if>
       	  <if test="APTITEM == &quot;C&quot;">
                   AND ISNULL(A.START_DATE, '19000101') =  (
				                                            SELECT MAX(ISNULL(START_DATE, '19000101'))
				                                              FROM BPR500T WITH(NOLOCK)
				                                             WHERE COMP_CODE       =  @CompCode
				                                               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
															   AND DIV_CODE = #{DIV_CODE}
															   </if>
															   AND PROD_ITEM_CODE  = A.PROD_ITEM_CODE
															   AND CHILD_ITEM_CODE = A.CHILD_ITEM_CODE
															   AND PATH_CODE       = A.PATH_CODE
															   AND ISNULL(START_DATE, '19000101') &lt;= CONVERT(VARCHAR(8), GETDATE(), 112)
				                                            )
                   AND (
					       A.STOP_DATE &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
                       OR  ISNULL(A.STOP_DATE, '') = ''
                       )
       	  </if>

         ORDER BY A.SEQ, A.CHILD_ITEM_CODE

         	SET NOCOUNT OFF
	    	SET ARITHABORT OFF
		END
	</select>
	<select id="s_bpr560ukrv_mitService.selectList3" parameterType="Map" resultType="rMap">
		/* s_bpr560ukrv_mitService.selectList3 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
			      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
			      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
			      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
			      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */


		    SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}


		    /* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'

			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	        SELECT A.COMP_CODE
	             , A.DIV_CODE
	             , A.SALE_CUSTOM_CODE
	             , C.CUSTOM_NAME
	             , A.SEQ
	             , A.PROD_ITEM_CODE
	             , A.CHILD_ITEM_CODE
	             , A.EXCHG_ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
	                                     ELSE B.ITEM_NAME
	               END)						AS ITEM_NAME
	             , B.SPEC
	             , B.STOCK_UNIT
	             , A.UNIT_Q
	             , A.PROD_UNIT_Q
	             , A.LOSS_RATE
	             , A.UNIT_P1
	             , A.UNIT_P2
	             , A.UNIT_P3
	             , A.MAN_HOUR
	             --20180518 MATERIAL_CNT, SET_QTY 추가
	             , A.MATERIAL_CNT
	             , A.SET_QTY
	             , A.USE_YN
	             , A.BOM_YN
	             , A.PRIOR_SEQ
	             , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE) AS START_DATE
             	 , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE)  AS STOP_DATE
	             , A.REMARK
	             , A.UPDATE_DB_USER
	             , A.UPDATE_DB_TIME
	          FROM            S_BPR510T_MIT A WITH (NOLOCK)
	               INNER JOIN BPR100T B WITH (NOLOCK) ON  A.COMP_CODE       = B.COMP_CODE
	                                                 AND A.EXCHG_ITEM_CODE = B.ITEM_CODE
	               INNER JOIN BCM100T C WITH (NOLOCK) ON  C.COMP_CODE       = A.COMP_CODE
	                                                 AND C.CUSTOM_CODE = A.SALE_CUSTOM_CODE
	         WHERE A.COMP_CODE       = @CompCode
	           AND A.PROD_ITEM_CODE  = #{PROD_ITEM_CODE}  /*sMajorCd*/
	           AND A.CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}  /*SMinorCd*/
		       AND A.DIV_CODE = #{DIV_CODE}
		    /*test*/
        	<if test="APTITEM == &quot;C&quot;">
               AND CONVERT(VARCHAR(8), GETDATE(), 112) BETWEEN A.START_DATE AND A.STOP_DATE
        	</if>
	        ORDER BY A.SEQ, A.EXCHG_ITEM_CODE
         SET NOCOUNT OFF
	     SET ARITHABORT OFF
		END
	</select>

	<select id="s_bpr560ukrv_mitService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>


	<insert id="s_bpr560ukrv_mitService.insertDetail" parameterType="Map">
		INSERT INTO BPR500T    /* 그리드 1 */
	     ( COMP_CODE
	     , DIV_CODE
	     , PROD_ITEM_CODE
	     , CHILD_ITEM_CODE
	     , START_DATE
	     <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
	     , STOP_DATE
	     </if>

	     --20190627 LAB_NO 관련로직 자품목에서 모품목으로 이동
	     ,LAB_NO
	     <if test="@foren.Ognl@isNotEmpty(REQST_ID)">
	     , REQST_ID
	     </if>
	     , SAMPLE_KEY

	     ,INSERT_DB_USER
	     ,INSERT_DB_TIME
	     )
	VALUES
	     (  #{COMP_CODE}
		   ,#{DIV_CODE}
	       ,#{PROD_ITEM_CODE}
		   ,#{CHILD_ITEM_CODE}
		   ,#{START_DATE}
		   <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		   ,#{STOP_DATE}
		   </if>

		   --20190627 LAB_NO 관련로직 자품목에서 모품목으로 이동
		   ,#{LAB_NO}
		   <if test="@foren.Ognl@isNotEmpty(REQST_ID)">
		   ,#{REQST_ID}
		   </if>
		   ,#{SAMPLE_KEY}

		   ,#{S_USER_ID}
	       ,getdate()
	     )
	</insert>
	<insert id="s_bpr560ukrv_mitService.insertDetail2" parameterType="Map">
	/* s_bpr560ukrv_mit.Cs_bpr560ukrv_mit[fnBpr560Save] 그리드2 */
		INSERT INTO BPR500T
		     ( COMP_CODE
		     , DIV_CODE
		     <if test="@foren.Ognl@isNotEmpty(SEQ)">
		     , SEQ
		     </if>
		     , PROD_ITEM_CODE
		     , CHILD_ITEM_CODE
		     , PATH_CODE
		     <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
		     , UNIT_Q
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
		     , PROD_UNIT_Q
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
		     , LOSS_RATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
		     , UNIT_P1
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
		     , UNIT_P2
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
		     , UNIT_P3
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
		     , MAN_HOUR
		     </if>
		     <!-- 20180516 MATERIAL_CNT, SET_QTY 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(MATERIAL_CNT)">
		     , MATERIAL_CNT
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SET_QTY)">
		     , SET_QTY
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , USE_YN
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
		     , BOM_YN
		     </if>
		     , START_DATE
		     <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , STOP_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GROUP_CODE)">
		     , GROUP_CODE
		     </if>
		     ,INSERT_DB_USER
	     	 ,INSERT_DB_TIME
		     )
		VALUES
		     (
		      #{COMP_CODE}
		     ,#{DIV_CODE}
		     <if test="@foren.Ognl@isNotEmpty(SEQ)">
		     , #{SEQ}
		     </if>
		     ,#{PROD_ITEM_CODE}
		     ,#{CHILD_ITEM_CODE}
		     ,#{PATH_CODE}
		     <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
		     , #{UNIT_Q}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
		     , #{PROD_UNIT_Q}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
		     , #{LOSS_RATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
		     , #{UNIT_P1}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
		     , #{UNIT_P2}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
		     , #{UNIT_P3}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
		     , #{MAN_HOUR}
		     </if>
		     <!-- 20180516 MATERIAL_CNT, SET_QTY 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(MATERIAL_CNT)">
		     , #{MATERIAL_CNT}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SET_QTY)">
		     , #{SET_QTY}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , #{USE_YN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
		     , #{BOM_YN}
		     </if>
		     ,#{START_DATE}
		     <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , #{STOP_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , #{REMARK}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(GROUP_CODE)">
		     ,#{GROUP_CODE}
		     </if>
		     ,#{S_USER_ID}
	         ,getdate()
		     )
	</insert>
	<insert id="s_bpr560ukrv_mitService.insertDetail3" parameterType="Map">
	/* s_bpr560ukrv_mit.Cs_bpr560ukrv_mit[fnBpr560Save] 그리드3 */
		INSERT INTO S_BPR510T_MIT
		     ( COMP_CODE
		     , DIV_CODE
		     , SALE_CUSTOM_CODE
		     <if test="@foren.Ognl@isNotEmpty(SEQ)">
		     , SEQ
		     </if>
		     , PROD_ITEM_CODE
		     , CHILD_ITEM_CODE
		     , EXCHG_ITEM_CODE
		     <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
		     , UNIT_Q
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
		     , PROD_UNIT_Q
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
		     , LOSS_RATE
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
		     , UNIT_P1
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
		     , UNIT_P2
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
		     , UNIT_P3
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
		     , MAN_HOUR
		      </if>
		     <!-- 20180528 MATERIAL_CNT, SET_QTY 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(MATERIAL_CNT)">
		     , MATERIAL_CNT
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SET_QTY)">
		     , SET_QTY
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , USE_YN
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
		     , BOM_YN
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(PRIOR_SEQ)">
		     , PRIOR_SEQ
		      </if>
		     , START_DATE
		     <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , STOP_DATE
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , REMARK
		      </if>
		     ,INSERT_DB_USER
	     	 ,INSERT_DB_TIME
		     )
		VALUES
		     (
		     #{COMP_CODE}
		     ,#{DIV_CODE}
		     ,#{SALE_CUSTOM_CODE}
		     <if test="@foren.Ognl@isNotEmpty(SEQ)">
		     , #{SEQ}
		     </if>
		     ,#{PROD_ITEM_CODE}
		     ,#{CHILD_ITEM_CODE}
		     ,#{EXCHG_ITEM_CODE}
		     <if test="@foren.Ognl@isNotEmpty(UNIT_Q)">
		     , #{UNIT_Q}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PROD_UNIT_Q)">
		     , #{PROD_UNIT_Q}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(LOSS_RATE)">
		     , #{LOSS_RATE}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P1)">
		     , #{UNIT_P1}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P2)">
		     , #{UNIT_P2}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(UNIT_P3)">
		     , #{UNIT_P3}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(MAN_HOUR)">
		     , #{MAN_HOUR}
		      </if>
		     <!-- 20180528 MATERIAL_CNT, SET_QTY 추가 -->
		     <if test="@foren.Ognl@isNotEmpty(MATERIAL_CNT)">
		     , #{MATERIAL_CNT}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SET_QTY)">
		     , #{SET_QTY}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		     , #{USE_YN}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(BOM_YN)">
		     , #{BOM_YN}
		      </if>
		     <if test="@foren.Ognl@isNotEmpty(PRIOR_SEQ)">
		     , #{PRIOR_SEQ}
		      </if>
		     ,#{START_DATE}
		     <if test="@foren.Ognl@isNotEmpty(STOP_DATE)">
		     , #{STOP_DATE}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(REMARK)">
		     , #{REMARK}
		      </if>
		     ,#{S_USER_ID}
	         ,getdate()
		      )
	</insert>
	<update id="s_bpr560ukrv_mitService.updateDetail" parameterType="Map">
		UPDATE BPR500T
	       SET LAB_NO          = #{LAB_NO}
	         , REQST_ID        = #{REQST_ID}
	         , UPDATE_DB_USER  = #{S_USER_ID}
	         , UPDATE_DB_TIME  = GETDATE()
	     WHERE COMP_CODE       = #{S_COMP_CODE}
	       AND DIV_CODE        = #{DIV_CODE}
	       AND PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
	       AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
	       AND PATH_CODE       = #{PATH_CODE}
	       AND START_DATE      = #{START_DATE}
	</update>
		

	<update id="s_bpr560ukrv_mitService.updateDetail2" parameterType="Map">
		/* s_bpr560ukrv_mit.Cs_bpr560ukrv_mit[fnBpr560Save] 2번그리드 */
		BEGIN
		    SET NOCOUNT ON

		/*  입력 변수	*/
		    DECLARE @COMP_CODE              NVARCHAR(16)           /* 회사코드		*/
		          , @DIV_CODE               NVARCHAR(08)           /* 사업장코드	*/
		          , @PROD_ITEM_CODE         NVARCHAR(20)           /* 모품목코드	*/
		          , @CHILD_ITEM_CODE        NVARCHAR(20)           /* 자품목코드	*/
		          , @PATH_CODE              NVARCHAR(08)           /* BOM 경로코드	*/
		          , @START_DATE             NVARCHAR(08)           /* 시작일자		*/

		/*  일반 변수	*/
		    DECLARE @ErrorCode              NVARCHAR(20)           /* 에러코드		*/
		          , @ErrorDesc              NVARCHAR(1000)         /* 에러 메세지	*/

		    SET @COMP_CODE       = #{COMP_CODE}
		    SET @DIV_CODE        = #{DIV_CODE}
		    SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
		    SET @CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
		    SET @PATH_CODE       = #{PATH_CODE}
		    SET @START_DATE      = #{START_DATE}

		    SET @ErrorCode       = ''
		    SET @ErrorDesc       = ''

		/*-----------------------------------------------------------------------------------------------------------------------*/
		/*  1. 수정할 BOM 자품목 존재여부 Check       (에러: 54111, 수정중인 자료가 삭제되었습니다.      재조회 후 작업하십시요.)*/
		    IF NOT EXISTS (SELECT TOP 1 1
		                   FROM   BPR500T WITH (NOLOCK)
		                   WHERE  comp_code       = @COMP_CODE
		                   AND    div_code        = @DIV_CODE
		                   AND    prod_item_code  = @PROD_ITEM_CODE
		                   AND    child_item_code = @CHILD_ITEM_CODE
		                   AND    path_code       = @PATH_CODE
		                   AND    start_date      = @START_DATE)
		    BEGIN
		        SET @ErrorCode = '54111'

		        GOTO ERROR_HANDLER
		    END

		/*--------------------------------------------------------------------------------------------------------------------*/
		 /* 2. BOM 자품목 수정*/
		    UPDATE BPR500T
		       SET SEQ             =    #{SEQ}
		         , PATH_CODE       =	#{PATH_CODE}
		         , UNIT_Q          =    #{UNIT_Q}
		         , PROD_UNIT_Q     =    #{PROD_UNIT_Q}
		         , LOSS_RATE       =    #{LOSS_RATE}
		         , USE_YN          =	#{USE_YN}
		         , BOM_YN          =	#{BOM_YN}
		         , STOP_DATE       =	#{STOP_DATE}
		         , UNIT_P1         =	#{UNIT_P1}
		         , UNIT_P2         =    #{UNIT_P2}
		         , UNIT_P3         =    #{UNIT_P3}
		         , MAN_HOUR        =    #{MAN_HOUR}
		         <!-- 20180516 MATERIAL_CNT, SET_QTY 추가 -->
		         , MATERIAL_CNT    =    #{MATERIAL_CNT}
		         , SET_QTY         =    #{SET_QTY}
		         , REMARK          =	#{REMARK}
		         , GROUP_CODE      =	#{GROUP_CODE}
		         , UPDATE_DB_USER  =	#{S_USER_ID}
		         , UPDATE_DB_TIME  = GETDATE()
		         
		     	 , LAB_NO = #{LAB_NO}
          		<if test="@foren.Ognl@isNotEmpty(REQST_ID)">
		     	 , REQST_ID = #{REQST_ID}
          		</if>
                 --201906007 SAMPLE_KEY 추가
		         , SAMPLE_KEY = #{SAMPLE_KEY}
		     WHERE COMP_CODE       = @COMP_CODE
		       AND DIV_CODE        = @DIV_CODE
		       AND PROD_ITEM_CODE  = @PROD_ITEM_CODE
		       AND CHILD_ITEM_CODE = @CHILD_ITEM_CODE
		       AND PATH_CODE       = @PATH_CODE
		       AND START_DATE      = @START_DATE

		/*---------------------------------------------------------------------------------------------------------------------*/
		/* 3. Error Handler 처리 */
		ERROR_HANDLER:
		    SELECT @ErrorCode ERROR_CODE, @ErrorDesc ERROR_DESC

		END

	</update>
	<update id="s_bpr560ukrv_mitService.updateDetailGRID3" parameterType="Map">
		/* s_bpr560ukrv_mit.Cs_bpr560ukrv_mit[fnBpr560Save] 3번그리드 */
		BEGIN
		    SET NOCOUNT ON

		/*  입력 변수	*/
		    DECLARE @COMP_CODE              NVARCHAR(16)           /* 회사코드		*/
		          , @DIV_CODE               NVARCHAR(08)           /* 사업장코드	*/
		          , @SALE_CUSTOM_CODE       NVARCHAR(08)
		          , @PROD_ITEM_CODE         NVARCHAR(20)           /* 모품목코드	*/
		          , @CHILD_ITEM_CODE        NVARCHAR(20)           /* 자품목코드	*/
		          , @EXCHG_ITEM_CODE        NVARCHAR(20)           /* 대체품목코드	*/
		          , @START_DATE             NVARCHAR(08)           /* 시작일자		*/

		/*  일반 변수	*/
		    DECLARE @ErrorCode              NVARCHAR(20)           /* 에러코드		*/
		          , @ErrorDesc              NVARCHAR(1000)         /* 에러 메세지	*/

		    SET @COMP_CODE       = #{COMP_CODE}
		    SET @DIV_CODE        = #{DIV_CODE}
		    SET @SALE_CUSTOM_CODE= #{SALE_CUSTOM_CODE}
		    SET @PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
		    SET @CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
		    SET @EXCHG_ITEM_CODE = #{EXCHG_ITEM_CODE}
		    SET @START_DATE      = #{START_DATE}

		    SET @ErrorCode       = ''
		    SET @ErrorDesc       = ''

		/*-----------------------------------------------------------------------------------------------------------------------*/
		/*  1. 수정할 BOM 대체품목 존재여부 Check       (에러: 54111, 수정중인 자료가 삭제되었습니다.      재조회 후 작업하십시요.)*/
		    IF NOT EXISTS (SELECT TOP 1 1
		                   FROM   S_BPR510T_MIT WITH (NOLOCK)
		                   WHERE  comp_code       = @COMP_CODE
		                   AND    div_code        = @DIV_CODE
		                   AND    SALE_CUSTOM_CODE= @SALE_CUSTOM_CODE
		                   AND    prod_item_code  = @PROD_ITEM_CODE
		                   AND    child_item_code = @CHILD_ITEM_CODE
		                   AND    exchg_item_code = @EXCHG_ITEM_CODE
		                   AND    start_date      = @START_DATE)
		    BEGIN
		        SET @ErrorCode = '54111'
		        GOTO ERROR_HANDLER
		    END

		/*--------------------------------------------------------------------------------------------------------------------*/
		 /* 2. BOM 대체품목 수정*/
		    UPDATE S_BPR510T_MIT
		       SET SEQ             =    #{SEQ}
		         , UNIT_Q          =    #{UNIT_Q}
		         , PROD_UNIT_Q     =    #{PROD_UNIT_Q}
		         , LOSS_RATE       =    #{LOSS_RATE}
		         , USE_YN          =	#{USE_YN}
		         , BOM_YN          =	#{BOM_YN}
		         , STOP_DATE       =	#{STOP_DATE}
		         , UNIT_P1         =	#{UNIT_P1}
		         , UNIT_P2         =    #{UNIT_P2}
		         , UNIT_P3         =    #{UNIT_P3}
		         , MAN_HOUR        =    #{MAN_HOUR}
		         <!-- 20180516 MATERIAL_CNT, SET_QTY 추가 -->
		         , MATERIAL_CNT    =    #{MATERIAL_CNT}
		         , SET_QTY         =    #{SET_QTY}
		         , PRIOR_SEQ       =    #{PRIOR_SEQ}
		         , REMARK          =	#{REMARK}
		         , UPDATE_DB_USER  =	#{S_USER_ID}
		         , UPDATE_DB_TIME  = GETDATE()
		     WHERE COMP_CODE       = @COMP_CODE
		       AND DIV_CODE        = @DIV_CODE
		       AND SALE_CUSTOM_CODE= @SALE_CUSTOM_CODE
		       AND PROD_ITEM_CODE  = @PROD_ITEM_CODE
		       AND CHILD_ITEM_CODE = @CHILD_ITEM_CODE
		       AND EXCHG_ITEM_CODE = @EXCHG_ITEM_CODE
		       AND START_DATE      = @START_DATE

		/*---------------------------------------------------------------------------------------------------------------------*/
		/* 3. Error Handler 처리 */
		ERROR_HANDLER:
		    SELECT @ErrorCode ERROR_CODE, @ErrorDesc ERROR_DESC
		END
	</update>

	<delete id="s_bpr560ukrv_mitService.deleteDetail" parameterType="Map">
		BEGIN
			DELETE FROM BPR500T
			WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    DIV_CODE  = #{DIV_CODE}
	         AND    PROD_ITEM_CODE = #{PROD_ITEM_CODE}
	         AND    START_DATE   = #{START_DATE}
		END
	</delete>
	<delete id="s_bpr560ukrv_mitService.deleteDetailGRID2" parameterType="Map">
		BEGIN
			DELETE FROM BPR500T
			WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    DIV_CODE  = #{DIV_CODE}
	         AND    PROD_ITEM_CODE = #{PROD_ITEM_CODE}
	         AND    CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
	         AND    PATH_CODE    = #{PATH_CODE}
	         AND    START_DATE   = #{START_DATE}
		END
	</delete>
	<delete id="s_bpr560ukrv_mitService.deleteDetailGRID3" parameterType="Map">
		BEGIN
			DELETE FROM S_BPR510T_MIT
			WHERE 	COMP_CODE        = #{COMP_CODE}
	         AND    DIV_CODE         = #{DIV_CODE}
	         AND    SALE_CUSTOM_CODE = #{SALE_CUSTOM_CODE}
	         AND    PROD_ITEM_CODE   = #{PROD_ITEM_CODE}
	         AND    CHILD_ITEM_CODE  = #{CHILD_ITEM_CODE}
	         AND    EXCHG_ITEM_CODE  = #{EXCHG_ITEM_CODE}
	         AND    START_DATE       = #{START_DATE}
		END
	</delete>

	<insert id="s_bpr560ukrv_mitService.makeProdItems" parameterType="Map">
		/*--s_bpr560ukrv_mit.Cs_bpr560ukrv_mit[fnBpr560Make] Query01 */
		INSERT INTO BPR500T
		(      COMP_CODE
		     , DIV_CODE
		     , PROD_ITEM_CODE
		     , CHILD_ITEM_CODE
		     , SEQ
		     , UNIT_Q
		     , PROD_UNIT_Q
		     , LOSS_RATE
		     , START_DATE
		     , STOP_DATE
		     , PATH_CODE
		     , USE_YN
		     , BOM_YN
		     , UNIT_P1
		     , UNIT_P2
		     , UNIT_P3
		     , A.MAN_HOUR
		     , REMARK
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		)
		SELECT B.COMP_CODE
		     , B.DIV_CODE
		     , A.ITEM_CODE
		     , '$'
		     , 1
		     , 1
		     , 1
		     , 0
		     , CONVERT(NVARCHAR(08), GETDATE(), 112)
		     , CONVERT(NVARCHAR(08), '29991231')
		     , '0'
		     , '1'
		     , '1'
		     , 0
		     , 0
		     , 0
		     , 0
		     , NULL
		     , #{S_USER_ID}
		     , GETDATE()
		  FROM            BPR100T A WITH (NOLOCK)
		       INNER JOIN BPR200T B WITH (NOLOCK) ON  A.COMP_CODE = B.COMP_CODE
		                                         AND A.ITEM_CODE = B.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.USE_YN    = 'Y'
		   AND B.DIV_CODE  = #{DIV_CODE}
		   AND ( LEFT(B.ITEM_ACCOUNT,1) LIKE '1%' OR LEFT(B.ITEM_ACCOUNT,1) LIKE '2%' )
		   AND A.ITEM_CODE NOT IN (SELECT PROD_ITEM_CODE FROM BPR500T WITH (NOLOCK) WHERE COMP_CODE = #{S_COMP_CODE} AND DIV_CODE =  #{DIV_CODE})
		 ORDER BY A.ITEM_CODE
	</insert>




	<!-- 대체품목 엑셀업로드 -->
	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="s_bpr560ukrv_mitService.getData" parameterType="Map" resultType="rMap">
		/* s_bpr560ukrv_mitService.getData */
		SELECT *
		  FROM		BPR500T_XLS_2 WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
	</select>

	<!-- Excel Upload-->
	<update id="s_bpr560ukrv_mitService.insertExcels_bpr560ukrv_mitUpload" parameterType="Map">
		/* s_bpr560ukrv_mitService.insertExcels_bpr560ukrv_mitUpload */
		INSERT INTO BPR500T_XLS_2
			(
			   _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE
			 , DIV_CODE
			 , SEQ
			 , PROD_ITEM_CODE
			 , CHILD_ITEM_CODE
			 , SALE_CUSTOM_CODE
			 , EXCHG_ITEM_CODE
			 , START_DATE
			 , PROD_UNIT_Q
			 , UNIT_Q
			 , LOSS_RATE
			 , REMARK
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		)
		VALUES (
			   #{_EXCEL_JOBID}
			 , #{_EXCEL_ROWNUM}
			 , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
			 , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
			 , #{S_COMP_CODE}
			 , #{DIV_CODE}
			 , #{SEQ}
			 , #{PROD_ITEM_CODE}
			 , #{CHILD_ITEM_CODE}
			 , #{SALE_CUSTOM_CODE}
			 , #{EXCHG_ITEM_CODE}
			 , CONVERT(NVARCHAR(08), GETDATE(), 112)
			 , 1
			 , #{UNIT_Q}
			 , #{LOSS_RATE}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</update>

	<select id="s_bpr560ukrv_mitService.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
			/*s_bpr560ukrv_mitService.selectExcelUploadSheet*/
			SELECT A._EXCEL_JOBID
				 , A._EXCEL_ROWNUM
				 , A._EXCEL_HAS_ERROR
				 , A._EXCEL_ERROR_MSG
				 , A.COMP_CODE
				 , A.DIV_CODE
				 , A.SEQ
				 , A.PROD_ITEM_CODE
				 , B1.ITEM_NAME             AS PROD_ITEM_NAME
				 , A.CHILD_ITEM_CODE
				 , B2.ITEM_NAME             AS CHILD_ITEM_NAME
				 , A.SALE_CUSTOM_CODE
				 , C1.CUSTOM_NAME
				 , A.EXCHG_ITEM_CODE
				 , B3.ITEM_NAME
				 , B3.STOCK_UNIT
				 , B3.SPEC
				 , A.UNIT_Q
				 , A.LOSS_RATE
				 , A.REMARK
			  FROM      BPR500T_XLS_2 A WITH(NOLOCK)
			  LEFT JOIN BPR100T B1 WITH(NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
											   AND B1.ITEM_CODE   = A.PROD_ITEM_CODE
			  LEFT JOIN BPR100T B2 WITH(NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
											   AND B2.ITEM_CODE   = A.CHILD_ITEM_CODE
			  LEFT JOIN BPR100T B3 WITH(NOLOCK) ON B3.COMP_CODE   = A.COMP_CODE
											   AND B3.ITEM_CODE   = A.EXCHG_ITEM_CODE
			  LEFT JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
											   AND C1.CUSTOM_CODE = A.SALE_CUSTOM_CODE
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
			 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 1 (현재 사용 안 함) -->
	<select id="s_bpr560ukrv_mitService.checkItem" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'
			IF NOT EXISTS ( SELECT TOP 1 1
							  FROM BPR100T WITH(NOLOCK)
							 WHERE COMP_CODE = #{COMP_CODE}
							   AND ITEM_CODE = #{ITEM_CODE}
				  		  )
			BEGIN
				SET @CHECK_DATA = 'Y'
			END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<insert id="s_bpr560ukrv_mitService.insertS_BPR510T_MIT" parameterType="Map">
		INSERT INTO S_BPR510T_MIT
			(
			   COMP_CODE
			 , DIV_CODE
			 , SEQ
			 , PROD_ITEM_CODE
			 , CHILD_ITEM_CODE
			 , SALE_CUSTOM_CODE
			 , EXCHG_ITEM_CODE
			 , START_DATE
			 , PROD_UNIT_Q
			 , UNIT_Q
			 , LOSS_RATE
			 , REMARK
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
		)
		SELECT COMP_CODE
			 , DIV_CODE
			 , SEQ
			 , PROD_ITEM_CODE
			 , CHILD_ITEM_CODE
			 , SALE_CUSTOM_CODE
			 , EXCHG_ITEM_CODE
			 , START_DATE
			 , PROD_UNIT_Q
			 , UNIT_Q
			 , LOSS_RATE
			 , REMARK
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()
		  FROM BPR500T_XLS_2 WITH(NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
	</insert>

	<!-- 에러메세지 insert (현재 사용 안 함) -->
	<update id="s_bpr560ukrv_mitService.insertErrorMsg">
		UPDATE BPR500T_XLS_2
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>

	<update id="s_bpr560ukrv_mitService.changeItemData" parameterType="Map" statementType="CALLABLE">
		{call USP_Base_BomExchange_MIT  (
	        #{S_COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{DIV_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROD_ITEM_CODE, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CHILD_ITEM_CODE, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EXCHG_ITEM_CODE, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SALE_CUSTOM_CODE, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{S_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<!-- 모품목 중복 체크 -->
	<select id="s_bpr560ukrv_mitService.prodItemCodeDuplicationChk" parameterType="Map" resultType="Int">
		SELECT COUNT(1)
		FROM BPR500T WITH(NOLOCK)
		WHERE COMP_CODE       = #{COMP_CODE}
		AND   DIV_CODE            = #{DIV_CODE}
		AND   PROD_ITEM_CODE  = #{PROD_ITEM_CODE}
		AND   CHILD_ITEM_CODE = '$'
	</select>
</mapper>