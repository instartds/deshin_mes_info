<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp120ukrv_mitServiceImpl">
	<select id="s_pmp120ukrv_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* s_pmp120ukrv_mitServiceImpl.selectList */
		<if test="@foren.Ognl@isEmpty(_EXCEL_JOBID)">
			--정상 조회
		    WITH WORKORDER_T AS (
		        SELECT A.WKORD_NUM
		             , A.ITEM_CODE
		             , B.ITEM_NAME
		             , B.SPEC
		             , B.REMARK2
		             , A.LOT_NO
		             , A.CUSTOM_CODE
		             , E.CUSTOM_NAME
		             , A.WKORD_Q
		             , ROW_NUMBER() OVER (ORDER BY A.WKORD_NUM) AS SEQ
		             , A.REMARK
		             , D.PO_NUM
		             , D.ORDER_NUM+'-'+CONVERT(VARCHAR, D.SER_NO)   AS ORDER_NUM
		             , D.DVRY_DATE
		             , D.INIT_DVRY_DATE
		             , A.COMP_CODE
		             , A.DIV_CODE
		             , A.PRODT_START_DATE
		             , D.REMARK                                 AS SOF_REMARK
		         FROM       PMP100T A WITH(NOLOCK) 
		         INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                          AND A.ITEM_CODE   = B.ITEM_CODE
		         INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
		                                          AND A.DIV_CODE    = C.DIV_CODE
		                                          AND A.ITEM_CODE   = C.ITEM_CODE
		         LEFT  JOIN SOF110T D WITH(NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
		                                          AND A.DIV_CODE    = D.DIV_CODE
		                                          AND A.SO_NUM      = D.ORDER_NUM
		                                          AND A.SO_SEQ      = D.SER_NO
		         LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
		                                          AND A.CUSTOM_CODE = E.CUSTOM_CODE
		        WHERE A.COMP_CODE    = #{S_COMP_CODE}
		          AND A.DIV_CODE     = #{DIV_CODE}
		          AND A.LINE_END_YN  = 'Y'
		          AND C.ITEM_ACCOUNT = '10'
		          AND A.WKORD_STATUS NOT IN ('8','9')
		          AND A.PRODT_END_DATE &gt;= #{PRODT_END_DATE_FR}
		          AND A.PRODT_END_DATE &lt;= #{PRODT_END_DATE_TO}
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		          AND A.ITEM_CODE    LIKE #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		          AND B.ITEM_NAME    LIKE #{ITEM_NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SPEC)">
		          AND B.SPEC         LIKE #{SPEC} + '%'
		    </if>
		    <if test="rdoSelect == &quot;N&quot;">
		           --20200221 추가: 조회조건 "생산예정일" 추가
		           AND (ISNULL(A.GAMMA, '') = '' OR A.PRODT_END_DATE = ISNULL(A.GAMMA, ''))
		    </if>
		    <if test="rdoSelect == &quot;Y&quot;">
		           --20200221 추가: 조회조건 "생산예정일" 추가
		           AND ISNULL(A.GAMMA, '') != ''
		           AND A.PRODT_END_DATE    != A.GAMMA
		    </if>
		    )
		    
		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.SEQ
		         , A.WKORD_NUM
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.SPEC
		         , A.REMARK2
		         , A.LOT_NO
		         , A.CUSTOM_CODE
		         , A.CUSTOM_NAME
		         , A.WKORD_Q
		         --, MAX(B.BARE_STANT_CODE) AS BARE_STANT_CODE
		         , MAX(B.COAT_STANT_CODE)                                                      AS COAT_STANT_CODE
		         , MAX(CASE WHEN B.COAT_STANT_CODE != '' THEN B.WKORD_NUM ELSE '' END)         AS COAT_WKORD_NUM
				 , MAX(CASE WHEN B.COAT_STANT_CODE != '' THEN B.PRODT_START_DATE ELSE '' END)  AS COAT_PRODT_START_DATE
		         , MAX(CASE WHEN B.COAT_STANT_CODE != '' THEN B.PRODT_END_DATE ELSE '' END)    AS COAT_PRODT_END_DATE
		         , MAX(B.INSERT_STANT_CODE)                                                    AS INSERT_STANT_CODE
		         , MAX(CASE WHEN B.INSERT_STANT_CODE != '' THEN B.WKORD_NUM ELSE '' END)       AS INSERT_WKORD_NUM
		         , MAX(CASE WHEN B.INSERT_STANT_CODE != '' THEN B.PRODT_END_DATE ELSE '' END)  AS INSERT_PRODT_END_DATE
		         , A.REMARK
		         , A.PO_NUM
		         , A.ORDER_NUM
		         , A.DVRY_DATE
		         , A.INIT_DVRY_DATE
		         , A.PRODT_START_DATE
		         , A.SOF_REMARK
				 , MAX(CASE WHEN B.INSERT_STANT_CODE != '' THEN B.HALF_REMARK ELSE '' END)  AS INSERT_REMARK	--삽입기구 비고
		      FROM    WORKORDER_T A
		      LEFT JOIN (
		                  SELECT A.COMP_CODE, A.DIV_CODE, A.TOP_WKORD_NUM
		                       , MAX(CASE WHEN B.ITEM_LEVEL3 = '161' THEN A.item_code ELSE '' END) AS BARE_STANT_CODE
		                       , MAX(CASE WHEN B.ITEM_LEVEL3 = '162' THEN A.item_code ELSE '' END) AS COAT_STANT_CODE
		                       , MAX(CASE WHEN B.ITEM_LEVEL3 = '164' THEN A.item_code ELSE '' END) AS INSERT_STANT_CODE
		                       , A.WKORD_NUM
		                       , (SELECT TOP 1 PRODT_START_DATE
		                            FROM PMP100T WITH(NOLOCK)
		                           WHERE COMP_CODE   = A.COMP_CODE
		                             AND DIV_CODE    = A.DIV_CODE
		                             AND WKORD_NUM   = A.WKORD_NUM
		                             AND LINE_END_YN = 'Y')                                        AS PRODT_START_DATE							   
		                       , (SELECT TOP 1 PRODT_END_DATE
		                            FROM PMP100T WITH(NOLOCK)
		                           WHERE COMP_CODE   = A.COMP_CODE
		                             AND DIV_CODE    = A.DIV_CODE
		                             AND WKORD_NUM   = A.WKORD_NUM
		                             AND LINE_END_YN = 'Y')                                        AS PRODT_END_DATE
		                       , (SELECT TOP 1 WKORD_Q
		                            FROM PMP100T WITH(NOLOCK)
		                           WHERE COMP_CODE  = A.COMP_CODE
		                            AND DIV_CODE    = A.DIV_CODE
		                            AND WKORD_NUM   = A.WKORD_NUM
		                            AND LINE_END_YN = 'Y')                                         AS WKORD_Q
		                       , (SELECT TOP 1 REMARK
		                            FROM PMP100T WITH(NOLOCK)
		                           WHERE COMP_CODE  = A.COMP_CODE
		                            AND DIV_CODE    = A.DIV_CODE
		                            AND WKORD_NUM   = A.WKORD_NUM
		                            AND LINE_END_YN = 'Y')                                         AS HALF_REMARK									
		                    FROM       PMP100T A WITH(NOLOCK)
		                    INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		                                                     AND A.ITEM_CODE = B.ITEM_CODE
		                   WHERE A.COMP_CODE   = #{S_COMP_CODE}
		                     AND A.DIV_CODE    = #{DIV_CODE}
		                     AND B.ITEM_LEVEL1 = '100'
		                     AND B.ITEM_LEVEL2 = '160'
		                     AND B.ITEM_LEVEL3 IN ('161','162','164')
		                   GROUP BY A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM, A.TOP_WKORD_NUM
		      ) B ON A.COMP_CODE = B.COMP_CODE
		         AND A.DIV_CODE  = B.DIV_CODE
		         AND A.WKORD_NUM = B.TOP_WKORD_NUM
		     GROUP BY A.COMP_CODE  , A.DIV_CODE      , A.WKORD_NUM
		            , A.ITEM_CODE  , A.ITEM_NAME     , A.SPEC     , A.REMARK2  , A.LOT_NO
		            , A.CUSTOM_CODE, A.CUSTOM_NAME
		            , A.SEQ        , A.PO_NUM        , A.ORDER_NUM, A.DVRY_DATE, A.WKORD_Q
		            , A.REMARK     , A.INIT_DVRY_DATE, A.PRODT_START_DATE
		            , A.SOF_REMARK
		</if>
		<if test="@foren.Ognl@isNotEmpty(_EXCEL_JOBID)">
			--업로드 된 엑셀데이터 조회
		    SELECT COMP_CODE
		         , DIV_CODE
		         , ORDER_NUM
		         , PO_NO
		         , WKORD_NUM
		         , ITEM_CODE
		         , ITEM_NAME
		         , SPEC
		         , LOT_NO                      --20200221 추가
		         , PRODT_START_DATE
		         , WKORD_Q                     --20200221 추가
		         , COAT_STANT_CODE
				 , COAT_PRODT_START_DATE
		         , COAT_PRODT_END_DATE
		         , COAT_WKORD_NUM
		         , INSERT_STANT_CODE
		         , INSERT_PRODT_END_DATE
		         , INSERT_WKORD_NUM
		         , REMARK
		         , SOF_REMARK
		         , REMARK2
		         , CUSTOM_CODE
		         , CUSTOM_NAME
		         , DVRY_DATE
		         , INIT_DVRY_DATE
				 , INSERT_REMARK
		         , 'excel'         AS REF_FLAG
		      FROM S_PMP120UKRV_MIT_EXCEL WITH(NOLOCK)
		     WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		</if>
	</select>




<!-- 저장 로직 -->
	<update id="s_pmp120ukrv_mitServiceImpl.updateDetail" parameterType="Map">
		/* s_pmp120ukrv_mitServiceImpl.updateDetail */
		--1.1 작업시지번호에 해당하는 일자 UPDATE
		UPDATE A
		   SET A.GAMMA            = A.PRODT_END_DATE    --20200221 추가
		     , A.PRODT_START_DATE = #{PRODT_START_DATE}
		     , A.PRODT_END_DATE   = #{PRODT_START_DATE}
			 , A.REMARK			  = CASE WHEN #{REMARK} = '' THEN A.REMARK ELSE #{REMARK} END
		     --20200214 추가
		     , A.UPDATE_DB_TIME   = GETDATE()
		     , A.UPDATE_DB_USER   = #{S_USER_ID}
		  FROM PMP100T A
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND A.WKORD_NUM      = #{WKORD_NUM}
		   --AND A.LINE_END_YN    = 'Y'     --20200214 주석
		   --AND A.PROG_WORK_CODE ='01'
		   --AND C.ITEM_ACCOUNT = '10'
		   AND A.WKORD_STATUS NOT IN ('8','9')
		
		--1.2 코팅작업시지번호에 해당하는 일자 UPDATE
		UPDATE A
		   SET A.GAMMA          = A.PRODT_END_DATE    --20200221 추가
		     , PRODT_START_DATE = #{COAT_PRODT_START_DATE}
		     , PRODT_END_DATE   = #{COAT_PRODT_END_DATE}
		     --20200214 추가
		     , A.UPDATE_DB_TIME   = GETDATE()
		     , A.UPDATE_DB_USER   = #{S_USER_ID}
		  FROM PMP100T A
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND A.WKORD_NUM      = #{COAT_WKORD_NUM}
		   --AND A.LINE_END_YN    = 'Y'     --20200214 주석
		   --AND A.PROG_WORK_CODE ='01'
		   --AND C.ITEM_ACCOUNT = '10'
		   AND A.WKORD_STATUS NOT IN ('8','9')
		
		--1.3 삽입기구작업시지번호에 해당하는 일자 UPDATE
		UPDATE A
		   SET A.GAMMA          = A.PRODT_END_DATE    --20200221 추가
		     , PRODT_START_DATE = #{INSERT_PRODT_END_DATE}
		     , PRODT_END_DATE   = #{INSERT_PRODT_END_DATE}
			 , REMARK			= CASE WHEN #{INSERT_REMARK} = '' THEN A.REMARK ELSE #{INSERT_REMARK} END
		     --20200214 추가
		     , A.UPDATE_DB_TIME   = GETDATE()
		     , A.UPDATE_DB_USER   = #{S_USER_ID}
		  FROM PMP100T A
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND A.WKORD_NUM      = #{INSERT_WKORD_NUM}
		   --AND A.LINE_END_YN    = 'Y'     --20200214 주석
		   --AND A.PROG_WORK_CODE ='01'
		   --AND C.ITEM_ACCOUNT = '10'
		   AND A.WKORD_STATUS NOT IN ('8','9')
		
		--1.4 수주 detail의 납기일자 UPDATE
		UPDATE D
		   SET D.DVRY_DATE = #{DVRY_DATE}
		     --20200214 추가
		     , D.UPDATE_DB_TIME   = GETDATE()
		     , D.UPDATE_DB_USER   = #{S_USER_ID}
		  FROM       PMP100T A
		  LEFT  JOIN SOF110T D  ON A.COMP_CODE   = D.COMP_CODE
		                       AND A.DIV_CODE    = D.DIV_CODE
		                       AND A.SO_NUM      = D.ORDER_NUM
		                       AND A.SO_SEQ      = D.SER_NO
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		   AND A.WKORD_NUM      = #{WKORD_NUM}
		   AND A.LINE_END_YN    = 'Y'
		   --AND A.PROG_WORK_CODE ='01'
		   --AND C.ITEM_ACCOUNT = '10'
		   AND A.WKORD_STATUS NOT IN ('8','9')
	</update>



<!-- 소요량계산 / 엑셀 업로드 -->
	<update id="s_pmp120ukrv_mitServiceImpl.insertExcel" parameterType="Map">
		/*s_pmp120ukrv_mitServiceImpl.insertExcel*/
		IF EXISTS(SELECT TOP 1 1 FROM information_schema.tables WHERE TABLE_NAME='S_PMP120UKRV_MIT_EXCEL')
		    BEGIN
		        INSERT INTO S_PMP120UKRV_MIT_EXCEL (
													_EXCEL_JOBID,_EXCEL_ROWNUM,_EXCEL_HAS_ERROR,_EXCEL_ERROR,COMP_CODE,DIV_CODE,ORDER_NUM,PO_NO,WKORD_NUM,ITEM_CODE,ITEM_NAME,SPEC,PRODT_START_DATE
													,COAT_STANT_CODE,COAT_PRODT_START_DATE,COAT_PRODT_END_DATE,COAT_WKORD_NUM,
													INSERT_STANT_CODE,INSERT_PRODT_END_DATE,INSERT_WKORD_NUM,REMARK,SOF_REMARK,REMARK2,CUSTOM_CODE,CUSTOM_NAME,DVRY_DATE,INIT_DVRY_DATE, INSERT_REMARK
													,INSERT_DB_TIME,INSERT_DB_USER,LOT_NO, WKORD_Q				
				)
		        SELECT
		              #{_EXCEL_JOBID}                       AS _EXCEL_JOBID
		            , #{_EXCEL_ROWNUM}                      AS _EXCEL_ROWNUM
		            , #{_EXCEL_HAS_ERROR, jdbcType=VARCHAR} AS _EXCEL_HAS_ERROR
		            , #{_EXCEL_ERROR	, jdbcType=VARCHAR} AS _EXCEL_ERROR
		            , #{S_COMP_CODE}                        AS COMP_CODE
		            , #{DIV_CODE}                           AS DIV_CODE
		            , #{ORDER_NUM}                          AS ORDER_NUM
		            , #{PO_NO}                              AS PO_NO
		            , #{WKORD_NUM}                          AS WKORD_NUM
		            , #{ITEM_CODE}                          AS ITEM_CODE
		            , #{ITEM_NAME}                          AS ITEM_NAME
		            , #{SPEC}                               AS SPEC
		            , #{PRODT_START_DATE}                   AS PRODT_START_DATE
		            , #{COAT_STANT_CODE}                    AS COAT_STANT_CODE
					, #{COAT_PRODT_START_DATE}              AS COAT_PRODT_START_DATE
		            , #{COAT_PRODT_END_DATE}                AS COAT_PRODT_END_DATE
		            , #{COAT_WKORD_NUM}                     AS COAT_WKORD_NUM
		            , #{INSERT_STANT_CODE}                  AS INSERT_STANT_CODE
		            , #{INSERT_PRODT_END_DATE}              AS INSERT_PRODT_END_DATE
		            , #{INSERT_WKORD_NUM}                   AS INSERT_WKORD_NUM
		            , #{REMARK}                             AS REMARK
		            , #{SOF_REMARK}                         AS SOF_REMARK
		            , #{REMARK2}                            AS REMARK2
		            , #{CUSTOM_CODE}                        AS CUSTOM_CODE
		            , #{CUSTOM_NAME}                        AS CUSTOM_NAME
		            , #{DVRY_DATE}                          AS DVRY_DATE
		            , #{INIT_DVRY_DATE}                     AS INIT_DVRY_DATE
					, #{INSERT_REMARK}                      AS INSERT_REMARK
		            , GETDATE()                             AS INSERT_DB_TIME
		            , #{S_USER_ID}                          AS INSERT_DB_USER
		            , #{LOT_NO}                             AS LOT_NO    --20200221 추가
		            , #{WKORD_Q}                            AS WKORD_Q   --20200221 추가
		    END
		ELSE
		    BEGIN
		        SELECT
		              #{_EXCEL_JOBID}                       AS _EXCEL_JOBID
		            , #{_EXCEL_ROWNUM}                      AS _EXCEL_ROWNUM
		            , #{_EXCEL_HAS_ERROR, jdbcType=VARCHAR} AS _EXCEL_HAS_ERROR
		            , #{_EXCEL_ERROR	, jdbcType=VARCHAR} AS _EXCEL_ERROR
		            , #{S_COMP_CODE}                        AS COMP_CODE
		            , #{DIV_CODE}                           AS DIV_CODE
		            , #{ORDER_NUM}                          AS ORDER_NUM
		            , #{PO_NO}                              AS PO_NO
		            , #{WKORD_NUM}                          AS WKORD_NUM
		            , #{ITEM_CODE}                          AS ITEM_CODE
		            , #{ITEM_NAME}                          AS ITEM_NAME
		            , #{SPEC}                               AS SPEC
		            , #{PRODT_START_DATE}                   AS PRODT_START_DATE
		            , #{COAT_STANT_CODE}                    AS COAT_STANT_CODE
					, #{COAT_PRODT_START_DATE}              AS COAT_PRODT_START_DATE
		            , #{COAT_PRODT_END_DATE}                AS COAT_PRODT_END_DATE
		            , #{COAT_WKORD_NUM}                     AS COAT_WKORD_NUM
		            , #{INSERT_STANT_CODE}                  AS INSERT_STANT_CODE
		            , #{INSERT_PRODT_END_DATE}              AS INSERT_PRODT_END_DATE
		            , #{INSERT_WKORD_NUM}                   AS INSERT_WKORD_NUM
		            , #{REMARK}                             AS REMARK
		            , #{SOF_REMARK}                         AS SOF_REMARK
		            , #{REMARK2}                            AS REMARK2
		            , #{CUSTOM_CODE}                        AS CUSTOM_CODE
		            , #{CUSTOM_NAME}                        AS CUSTOM_NAME
		            , #{DVRY_DATE}                          AS DVRY_DATE
		            , #{INIT_DVRY_DATE}                     AS INIT_DVRY_DATE
					, #{INSERT_REMARK}                      AS INSERT_REMARK
		            , GETDATE()                             AS INSERT_DB_TIME
		            , #{S_USER_ID}                          AS INSERT_DB_USER
		            , #{LOT_NO}                             AS LOT_NO    --20200221 추가
		            , #{WKORD_Q}                            AS WKORD_Q   --20200221 추가
		         INTO S_PMP120UKRV_MIT_EXCEL
		    END
	</update>
</mapper>