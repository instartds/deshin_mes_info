<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sas300ukrv_mitServiceImpl">
	<select id="s_sas300ukrv_mitServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @RepairNum      NVARCHAR(20)   /* 수리번호            */
	
	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
	
	    SET @CompCode   = #{S_COMP_CODE}
	    SET @DivCode    = #{DIV_CODE}
	    SET @RepairNum  = #{REPAIR_NUM}
	
	    SET @UserId     = #{S_USER_ID}
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.REPAIR_NUM                                     /* 수리번호       */
	         , A.REPAIR_DATE                                    /* 수리일         */
	         , A.REPAIR_PRSN                                    /* 수리담당자     */
	         , C3.USER_NAME                                     /* 수리담당자명   */
	         , A.COST_YN                                        /* 유무상         */
	         , A.BAD_LOC_CODE                                   /* 위치코드       */
	         , A.BAD_CONDITION_CODE                             /* 증상코드       */
	         , A.BAD_REASON_CODE                                /* 원인코드       */
	         , A.SOLUTION_CODE                                  /* 해결코드       */
	         , A.BAD_LOC_CODE2                                  /* 위치코드2       */
	         , A.BAD_CONDITION_CODE2                            /* 증상코드2       */
	         , A.BAD_REASON_CODE2                               /* 원인코드2       */
	         , A.SOLUTION_CODE2                                 /* 해결코드2       */
	         , A.BAD_LOC_CODE3                                  /* 위치코드3       */
	         , A.BAD_CONDITION_CODE3                            /* 증상코드3       */
	         , A.BAD_REASON_CODE3                               /* 원인코드3       */
	         , A.SOLUTION_CODE3                                 /* 해결코드3       */
	         , A.BAD_LOC_CODE4                                  /* 위치코드3       */
	         , A.BAD_CONDITION_CODE4                            /* 증상코드3       */
	         , A.BAD_REASON_CODE4                               /* 원인코드3       */
	         , A.SOLUTION_CODE4                                 /* 해결코드3       */
	         , A.REPAIR_REMARK                                  /* 수리내용       */
	         , A.QUOT_NUM                                       /* 수리견적번호   */
	         , A.RECEIPT_NUM                                    /* AS접수번호     */
	         , A.FILE_NUM										/* 파일 번호       */
	         , B.AS_STATUS                                      /* 진행상태         */
	         , A.INSPEC_FLAG									/* 출고검사        */
	         , A.REPAIR_RANK                                    /* 수리랭크       */
	         , B.IN_DATE                                        /* 입고일          */
	         , B.WARR_MONTH
		     , B.WARR_DATE
		     , C1.WON_CALC_BAS
	         , C1.TAX_TYPE
	      FROM            SAS300T A  WITH (NOLOCK)
	           LEFT  JOIN SAS100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.RECEIPT_NUM  = A.RECEIPT_NUM    
			   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.USER_ID     = A.REPAIR_PRSN
			   LEFT  JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
			                                      AND C1.CUSTOM_CODE = B.CUSTOM_CODE
	     WHERE A.COMP_CODE  = @CompCode
	       AND A.DIV_CODE   = @DivCode
	       AND A.REPAIR_NUM = @RepairNum
	</select>
	<select id="s_sas300ukrv_mitServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
	          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
	          , @RepairNum      NVARCHAR(20)   /* 수리번호            */
	
	          , @UserId         NVARCHAR(100)  /* 사용자ID            */
	          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */
	
	    SET @CompCode   = #{S_COMP_CODE}
	    SET @DivCode    = #{DIV_CODE}
	    SET @RepairNum  = #{REPAIR_NUM}
	
	    SET @UserId     = #{S_USER_ID}
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 조회 */
	    SELECT A.COMP_CODE                                      /* 법인코드       */
	         , A.DIV_CODE                                       /* 사업장         */
	         , A.REPAIR_NUM                                     /* 수리번호       */
	         , B.REPAIR_SEQ                                     /* 순번           */
	         , B.ITEM_CODE                                      /* 품목코드       */
	         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
			 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
			 , C3.LOT_YN                                        /* LOT 관리여부 */
	         , B.LOT_NO                                         /* LOT NO         */
	         , B.SERIAL_NO      
	         , B.AS_QTY                                         /* 수량           */
	         , B.AS_UNIT                                        /* 단위           */
	         , B.AS_PRICE                                       /* 출고단가       */
	         , B.AS_AMT                                         /* 출고금액       */
	         , B.TAX_AMT                                        /* 부가세         */
	         , B.TOT_AMT                                        /* 총액           */
	         , B.WH_CODE                                        /* 창고           */
	         , B.WH_CELL_CODE                                   /* 창고CELL코드   */
	         , B.AS_REMARK                                      /* 비고           */
	         , B.INOUT_NUM                                      /* 자재출고번호   */
	         , B.INOUT_SEQ                                      /* 자재출고순번   */
	         , C2.STOCK_CARE_YN
	      FROM            SAS300T A  WITH (NOLOCK)
	           INNER JOIN SAS310T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                              AND B.DIV_CODE     = A.DIV_CODE
	                                              AND B.REPAIR_NUM   = A.REPAIR_NUM
	           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
	                                              AND C2.ITEM_CODE   = B.ITEM_CODE
	           LEFT  JOIN BPR200T C3 WITH (NOLOCK) ON C3.COMP_CODE   = B.COMP_CODE
	                                              AND C3.ITEM_CODE   = B.ITEM_CODE
	     WHERE A.COMP_CODE  = @CompCode
	       AND A.DIV_CODE   = @DivCode
	       AND A.REPAIR_NUM = @RepairNum
	       <if test="@foren.Ognl@isNotEmpty(REPAIR_SEQ_ARR)">
	       AND B.REPAIR_SEQ IN 
	            <foreach collection="REPAIR_SEQ_ARR" item="item" separator="," close=")" open="(">
		   		    #{item}
		        </foreach>
			</if>
	     ORDER BY A.COMP_CODE, A.DIV_CODE, A.REPAIR_NUM, B.REPAIR_SEQ
		
	</select>
	<select  id="s_sas300ukrv_mitServiceImpl.selectCheckInoutNum" parameterType="Map" resultType="rMap">
		SELECT MAX(INOUT_NUM) AS INOUT_NUM
		  FROM SAS310T WITH (NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
	       AND DIV_CODE   = #{DIV_CODE}
	       AND REPAIR_NUM = #{REPAIR_NUM}
	</select>
	<select  id="s_sas300ukrv_mitServiceImpl.selectCheckInoutNumDetail" parameterType="Map" resultType="rMap">
		SELECT A.REPAIR_NUM, A.REPAIR_SEQ, A.INOUT_NUM, A.INOUT_SEQ, B.SCM_FLAG_YN
		  FROM SAS310T A WITH (NOLOCK)
		  LEFT JOIN BTR100T B WITH (NOLOCK)  ON  B.COMP_CODE    = A.COMP_CODE 
									        AND  B.INOUT_NUM    = A.INOUT_NUM 
									        AND  B.INOUT_SEQ    = A.INOUT_SEQ 
									        AND  B.DIV_CODE     = A.DIV_CODE  
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
	       AND A.DIV_CODE   = #{DIV_CODE}
	       AND A.REPAIR_NUM = #{REPAIR_NUM}
	       <if test="@foren.Ognl@isNotEmpty(REPAIR_SEQ)">
	       AND A.REPAIR_SEQ = #{REPAIR_SEQ}
		   </if>
	       <if test="@foren.Ognl@isNotEmpty(REPAIR_SEQ_ARR)">
	       AND A.REPAIR_SEQ IN 
	            <foreach collection="REPAIR_SEQ_ARR" item="item" separator="," close=")" open="(">
		   		    #{item}
		        </foreach>
			</if>
	</select>
	<update id="s_sas300ukrv_mitServiceImpl.updateMaster" parameterType="foren.unilite.modules.z_mit.S_sas300ukrv_mitModel">
		IF NOT EXISTS(SELECT REPAIR_NUM 
		                FROM SAS300T 
		               WHERE COMP_CODE = #{S_COMP_CODE}
				         AND DIV_CODE = #{DIV_CODE}	
				         AND REPAIR_NUM = #{REPAIR_NUM})
		BEGIN
			INSERT INTO SAS300T(
				 	  COMP_CODE
					, DIV_CODE	
					, REPAIR_NUM
					, REPAIR_DATE        
					, REPAIR_PRSN        
					, REPAIR_RANK        
					, COST_YN            
					, BAD_LOC_CODE       
					, BAD_CONDITION_CODE 
					, BAD_REASON_CODE    
					, SOLUTION_CODE
					, BAD_LOC_CODE2      
					, BAD_CONDITION_CODE2
					, BAD_REASON_CODE2   
					, SOLUTION_CODE2     
					, BAD_LOC_CODE3      
					, BAD_CONDITION_CODE3
					, BAD_REASON_CODE3   
					, SOLUTION_CODE3     
					, BAD_LOC_CODE4      
					, BAD_CONDITION_CODE4
					, BAD_REASON_CODE4   
					, SOLUTION_CODE4  
					, REPAIR_REMARK      
					, QUOT_NUM           
					, RECEIPT_NUM        
					, FILE_NUM           
					, INSPEC_FLAG      
					, INSPEC_DATE
					, INSPEC_PRSN        
					, BAD_REMARK         
					, INSERT_DB_USER
					, INSERT_DB_TIME
					, UPDATE_DB_USER
					, UPDATE_DB_TIME	
			)
			VALUES(
				   #{S_COMP_CODE}
				 , #{DIV_CODE}	
				 , #{REPAIR_NUM}
				 , #{REPAIR_DATE}        
				 , #{REPAIR_PRSN}        
				 , #{REPAIR_RANK}        
				 , #{COST_YN}            
				 , #{BAD_LOC_CODE}       
				 , #{BAD_CONDITION_CODE} 
				 , #{BAD_REASON_CODE}    
				 , #{SOLUTION_CODE}    
				 , #{BAD_LOC_CODE2}      
				 , #{BAD_CONDITION_CODE2}
				 , #{BAD_REASON_CODE2}   
				 , #{SOLUTION_CODE2}     
				 , #{BAD_LOC_CODE3}      
				 , #{BAD_CONDITION_CODE3}
				 , #{BAD_REASON_CODE3}   
				 , #{SOLUTION_CODE3}       
				 , #{BAD_LOC_CODE4}      
				 , #{BAD_CONDITION_CODE4}
				 , #{BAD_REASON_CODE4}   
				 , #{SOLUTION_CODE4}       
				 , #{REPAIR_REMARK}      
				 , #{QUOT_NUM}           
				 , #{RECEIPT_NUM}        
				 , #{FILE_NUM}           
				 , #{INSPEC_FLAG}    
				 , CASE WHEN #{INSPEC_FLAG} = 'Z' THEN #{REPAIR_DATE} ELSE '' END
			     , CASE WHEN #{INSPEC_FLAG} = 'Z' THEN #{REPAIR_PRSN} ELSE '' END
				 , #{BAD_REMARK}  
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			)
			-- 진행상태정보 변경 (신규 일 경우만 변경)
			UPDATE SAS100T
			   SET AS_STATUS   = CASE WHEN #{INSPEC_FLAG} = 'Z' THEN '31' ELSE '30' END
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND DIV_CODE    = #{DIV_CODE}	
			   AND RECEIPT_NUM = #{RECEIPT_NUM}
		END
		ELSE
		BEGIN
			UPDATE SAS300T
				SET   REPAIR_DATE        = #{REPAIR_DATE}
					, REPAIR_PRSN        = #{REPAIR_PRSN}
					, REPAIR_RANK        = #{REPAIR_RANK}
					, COST_YN            = #{COST_YN}
					, BAD_LOC_CODE       = #{BAD_LOC_CODE}
					, BAD_CONDITION_CODE = #{BAD_CONDITION_CODE}
					, BAD_REASON_CODE    = #{BAD_REASON_CODE}
					, SOLUTION_CODE      = #{SOLUTION_CODE}
					, BAD_LOC_CODE2		 = #{BAD_LOC_CODE2}      
				 	, BAD_CONDITION_CODE2= #{BAD_CONDITION_CODE2}
				 	, BAD_REASON_CODE2	 = #{BAD_REASON_CODE2}   
				 	, SOLUTION_CODE2	 = #{SOLUTION_CODE2}     
				 	, BAD_LOC_CODE3		 = #{BAD_LOC_CODE3}      
				 	, BAD_CONDITION_CODE3= #{BAD_CONDITION_CODE3}
				 	, BAD_REASON_CODE3	 = #{BAD_REASON_CODE3}   
				 	, SOLUTION_CODE3	 = #{SOLUTION_CODE3}
				 	, BAD_LOC_CODE4		 = #{BAD_LOC_CODE4}      
				 	, BAD_CONDITION_CODE4= #{BAD_CONDITION_CODE4}
				 	, BAD_REASON_CODE4	 = #{BAD_REASON_CODE4}   
				 	, SOLUTION_CODE4	 = #{SOLUTION_CODE4}
					, REPAIR_REMARK      = #{REPAIR_REMARK}
					, QUOT_NUM           = #{QUOT_NUM}
					, RECEIPT_NUM        = #{RECEIPT_NUM}
					, FILE_NUM           = #{FILE_NUM}
					, INSPEC_FLAG        = #{INSPEC_FLAG}
					, INSPEC_DATE		 = CASE WHEN #{INSPEC_FLAG} = 'Z' THEN #{REPAIR_DATE} ELSE '' END
					, INSPEC_PRSN		 = CASE WHEN #{INSPEC_FLAG} = 'Z' THEN #{REPAIR_PRSN} ELSE '' END
					, BAD_REMARK         = #{BAD_REMARK}
					, UPDATE_DB_USER = #{S_USER_ID}
					, UPDATE_DB_TIME = GETDATE()
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND DIV_CODE = #{DIV_CODE}	
				  AND REPAIR_NUM = #{REPAIR_NUM}
				  
				-- 진행상태정보 변경 (신규 일 경우만 변경)
				UPDATE SAS100T
				   SET AS_STATUS   = CASE WHEN #{INSPEC_FLAG} = 'Z' THEN '31' ELSE '30' END
				 WHERE COMP_CODE   = #{S_COMP_CODE}
				   AND DIV_CODE    = #{DIV_CODE}	
				   AND RECEIPT_NUM = #{RECEIPT_NUM}				  
		END
		
		-- 견적과 수리 첨부파일 번호 공유 
		DECLARE   @FILE_NUM        NVARCHAR(20)
		        , @QUOT_FILE_NUM   NVARCHAR(20)
		        
		SET @FILE_NUM  = ISNULL(#{FILE_NUM}, '')
		
		IF(@FILE_NUM  != '')	
		BEGIN
			SELECT @QUOT_FILE_NUM = ISNULL(FILE_NUM, '')
			  FROM SAS200T WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND DIV_CODE = #{DIV_CODE}	
			   AND QUOT_NUM = #{QUOT_NUM} 
			IF(@FILE_NUM  != @QUOT_FILE_NUM)	
			BEGIN
				UPDATE SAS200T 
				   SET  FILE_NUM  = #{FILE_NUM}
				      , UPDATE_DB_USER = #{S_USER_ID}
					  , UPDATE_DB_TIME = GETDATE()
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND DIV_CODE = #{DIV_CODE}	
				   AND QUOT_NUM = #{QUOT_NUM}
			END
		 END 
	</update>
	<delete id="s_sas300ukrv_mitServiceImpl.deleteMaster" parameterType="Map">
		DELETE FROM SAS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND REPAIR_NUM = #{REPAIR_NUM}
	</delete>
		<delete id="s_sas300ukrv_mitServiceImpl.deleteAll" parameterType="Map">
		DELETE FROM SAS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND REPAIR_NUM = #{REPAIR_NUM}
		   
		DELETE FROM SAS310T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND REPAIR_NUM = #{REPAIR_NUM} 
	</delete>
	<select id="s_sas300ukrv_mitServiceImpl.selectRepairNum" parameterType="foren.unilite.modules.z_mit.S_sas100ukrv_mitModel" resultType="rMap">
		DECLARE   @DIV_CODE            NVARCHAR(08)
		        , @MAX_REPAIR_NUM      NVARCHAR(20)
		        , @MACHINE_TYPE        NVARCHAR(01)
				, @REPAIR_DATE         NVARCHAR(08)
				, @SEQ                 NVARCHAR(03)
				, @EXISTS_REPAIR_NUM   NVARCHAR(20)
				
		SELECT @EXISTS_REPAIR_NUM = REPAIR_NUM 
		 FROM  SAS300T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
		    
		SELECT @MACHINE_TYPE    = MACHINE_TYPE
		  FROM SAS100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
		
		SELECT   @DIV_CODE     = DIV_CODE
			   , @REPAIR_DATE  = #{REPAIR_DATE}
			   , @MAX_REPAIR_NUM = MAX(RIGHT(REPAIR_NUM,3))
		  FROM SAS300T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND REPAIR_DATE = #{REPAIR_DATE}
		 GROUP BY DIV_CODE, REPAIR_DATE
		 
		 IF(@MAX_REPAIR_NUM IS NULL)
		 SET @SEQ = '001'
		 ELSE
		 SET @SEQ = RIGHT('00'+ CONVERT(NVARCHAR(3), CONVERT(INT, RIGHT(@MAX_REPAIR_NUM, 3)) + 1), 3)
		
		SELECT ISNULL(@DIV_CODE, #{DIV_CODE}) + 'C'+ ISNULL(@MACHINE_TYPE, #{MACHINE_TYPE}) + ISNULL(@REPAIR_DATE, #{REPAIR_DATE}) + @SEQ AS NEW_REPAIR_NUM, @EXISTS_REPAIR_NUM AS EXISTS_REPAIR_NUM
	</select>
	<select id="s_sas300ukrv_mitServiceImpl.selectRepairSeq"  parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(REPAIR_SEQ), 0) + 1 as REPAIR_SEQ
		  FROM SAS310T
		  WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND REPAIR_NUM = #{REPAIR_NUM} 
	</select>
	<insert id="s_sas300ukrv_mitServiceImpl.insertDetail" parameterType="rMap">
		INSERT INTO SAS310T (
				  COMP_CODE
				, DIV_CODE	
				, REPAIR_NUM
				, REPAIR_SEQ        
				, ITEM_CODE   
				, LOT_NO     
				, SERIAL_NO 
				, WH_CODE     
				, WH_CELL_CODE
				, AS_QTY  	
				, AS_UNIT     
				, AS_PRICE  	
				, AS_AMT  	
				, TAX_AMT
				, TOT_AMT
				, AS_REMARK   
				, INSERT_DB_USER
				, INSERT_DB_TIME
				, UPDATE_DB_USER
				, UPDATE_DB_TIME							
		
		) VALUES (
				  #{S_COMP_CODE}	
				, #{DIV_CODE}	
				, #{REPAIR_NUM}
				, #{REPAIR_SEQ}        
				, #{ITEM_CODE}   
				, #{LOT_NO}   
				, #{SERIAL_NO}   
				, #{WH_CODE}     
				, #{WH_CELL_CODE}
				, #{AS_QTY}  	
				, #{AS_UNIT}     
				, #{AS_PRICE}  	
				, #{AS_AMT}  
				, #{TAX_AMT} 
				, #{TOT_AMT}
				, #{AS_REMARK}   
				, #{S_USER_ID}
			    , GETDATE()
			    , #{S_USER_ID}
			    , GETDATE()
		)
		
	</insert>
	<update id="s_sas300ukrv_mitServiceImpl.updateDetail" parameterType="rMap">
		UPDATE SAS310T
		  SET     ITEM_CODE     = #{ITEM_CODE}
				, LOT_NO        = #{LOT_NO}
				, SERIAL_NO     = #{SERIAL_NO}
				, WH_CODE       = #{WH_CODE}
				, WH_CELL_CODE  = #{WH_CELL_CODE}
				, AS_QTY  	    = #{AS_QTY}
				, AS_UNIT       = #{AS_UNIT}
				, AS_PRICE  	= #{AS_PRICE}  
				, AS_AMT  	    = #{AS_AMT}
				, TAX_AMT       = #{TAX_AMT} 
				, TOT_AMT       = #{TOT_AMT}
				, AS_REMARK     = #{AS_REMARK}
				, UPDATE_DB_USER   =  #{S_USER_ID}
				, UPDATE_DB_TIME   =  GETDATE()	
	   WHERE 	COMP_CODE		   =  #{S_COMP_CODE}
		 AND    DIV_CODE		   =  #{DIV_CODE}	
		 AND	REPAIR_NUM		   =  #{REPAIR_NUM}	
		 AND    REPAIR_SEQ		   =  #{REPAIR_SEQ}			
	</update>
	<delete id="s_sas300ukrv_mitServiceImpl.deleteDetail" parameterType="Map">
		  DELETE FROM SAS310T
		  WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE   = #{DIV_CODE}	
		   AND REPAIR_NUM = #{REPAIR_NUM} 
		   AND REPAIR_SEQ = #{REPAIR_SEQ} 
	</delete>
	<insert id="s_sas300ukrv_mitServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE		    , OPR_FLAG
             , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
             , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
             , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           
             , WH_CODE
             , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
             , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
             , LOT_NO               , REMARK                , BILL_TYPE             , SALE_TYPE             , PATH_CODE
             , SALE_DIV_CODE        , SALE_CUSTOM_CODE		, UPDATE_DB_USER        , UPDATE_DB_TIME

             )
        VALUES
             ( #{KEY_VALUE}         , #{OPR_FLAG}
             , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
             , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
             , #{INOUT_CODE_DETAIL} , CONVERT(NVARCHAR(8), GETDATE(), 112)          , #{ITEM_CODE}          , '1'       		
             , #{WH_CODE}
             , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
             , #{MONEY_UNIT}        , #{ORDER_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
             , #{LOT_NO}            , #{REMARK}             , '*'                   , '*'                   , ''
             , '*'                  , '*'                   , #{S_USER_ID}         , GETDATE()

             )
    </insert>

    <update id="s_sas300ukrv_mitServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_MATRL_Mtr200ukr  (
            #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
    <select id="s_sas300ukrv_mitServiceImpl.selectLogInoutNum" parameterType="Map" resultType="rMap">
		SELECT KEY_VALUE
		     , COMP_CODE
		     , DIV_CODE
		     , INOUT_NUM
		     , INOUT_SEQ
		     , BASIS_NUM AS REPAIR_NUM
		     , BASIS_SEQ AS REPAIR_SEQ
		  FROM L_BTR100T WITH (NOLOCK)
		 WHERE KEY_VALUE  = #{KEY_VALUE}
		   AND BASIS_NUM  = #{REPAIR_NUM}
		   AND BASIS_SEQ  = #{REPAIR_SEQ}
	</select> 
    <update id="s_sas300ukrv_mitServiceImpl.updateInoutNum" parameterType="rMap">
		UPDATE SAS310T
		  SET     INOUT_NUM     = #{INOUT_NUM}
		        , INOUT_SEQ     = #{INOUT_SEQ}
				, UPDATE_DB_USER   =  #{S_USER_ID}
				, UPDATE_DB_TIME   =  GETDATE()	
	   WHERE 	COMP_CODE		   =  #{COMP_CODE}
		 AND    DIV_CODE		   =  #{DIV_CODE}	
		 AND	REPAIR_NUM		   =  #{REPAIR_NUM}	
		 AND    REPAIR_SEQ		   =  #{REPAIR_SEQ}			
	</update>
	<select id="s_sas300ukrv_mitServiceImpl.selectPrint" parameterType="Map" resultType="rMap">
		
		DECLARE @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = #{S_USER_ID}
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 조회 */
		SELECT A.COMP_CODE                                      /* 법인코드       */
		     , A.DIV_CODE                                       /* 사업장         */
		     , A.RECEIPT_NUM                                    /* 접수번호       */
			 , C.QUOT_NUM
			 , B.REPAIR_NUM
		     , A.CUSTOM_CODE                                    /* 거래처         */
			 , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
			        WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
			                            ELSE C1.CUSTOM_NAME
			    END AS CUSTOM_NAME                              /* 거래처명       */
		     , B.REPAIR_DATE                                    /* 수리일         */
		     , C3.CODE_NAME						AS REPAIR_RANK	/* 수리랭크       */
		     , A.ITEM_CODE                                      /* 품목코드       */
		     , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
			        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
			                            ELSE C2.ITEM_NAME
			    END AS ITEM_NAME                                /* 품목명         */
		     , A.SERIAL_NO                                      /* Serial No      */
		     , A.REMARK		  AS RECEIPT_REMARK                 /* 접수내용       */
		     , B.REPAIR_REMARK                                  /* 수리내용       */
		     , D.ITEM_CODE    AS AS_ITEM_CODE                   /* 품목코드       */
		     , CASE WHEN @RefItem = '1' THEN D1.ITEM_NAME1
				    WHEN @RefItem = '2' THEN D1.ITEM_NAME2
			                            ELSE D1.ITEM_NAME
			    END AS AS_ITEM_NAME                             /* 품목명         */
			 , D1.SPEC                                          /* 규격         */
		     , D.AS_QTY                                         /* 수량           */
		     , D.AS_REMARK                                      /* 비고           */
		  FROM            SAS100T A  WITH (NOLOCK)
		  	   
		       LEFT  JOIN SAS300T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		                                          AND B.RECEIPT_NUM  = A.RECEIPT_NUM
		       LEFT  JOIN SAS200T C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                          AND C.DIV_CODE     = A.DIV_CODE
		                                          AND C.RECEIPT_NUM  = A.RECEIPT_NUM
		       INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                          AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		       INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
		                                          AND C2.ITEM_CODE   = A.ITEM_CODE
			   LEFT  JOIN BSA100T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
			                                      AND C3.SUB_CODE    = ISNULL(B.REPAIR_RANK, C.REPAIR_RANK)
												  AND C3.MAIN_CODE   = 'S164'
		       INNER JOIN SAS310T D  WITH (NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
		                                          AND D.DIV_CODE     = B.DIV_CODE
		                                          AND D.REPAIR_NUM   = B.REPAIR_NUM
		       INNER JOIN BPR100T D1 WITH (NOLOCK) ON D1.COMP_CODE   = D.COMP_CODE
		                                          AND D1.ITEM_CODE   = D.ITEM_CODE
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.DIV_CODE      = #{DIV_CODE}
		   AND B.REPAIR_NUM    = #{REPAIR_NUM}
		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.RECEIPT_NUM 
	</select>
	<select id="s_sas300ukrv_mitServiceImpl.selectPrintMOutReq" parameterType="Map" resultType="rMap">
		SELECT A.REPAIR_NUM--관리번호
			 , C.QUOT_NUM--견적번호
			 , CONVERT(VARCHAR(8), GETDATE(), 112) AS ISSUE_REQ_DATE--출고요청일
			 , D.CUSTOM_CODE
			 , M1.CUSTOM_NAME--병원명
			 , C.QUOT_PRSN
			 , M3.USER_NAME AS QUOT_PRSN_NAME--견적담당자
			 , M4.ITEM_NAME--모델명
			 , D.SERIAL_NO--S/N
			 --디테일
			 , B.ITEM_CODE
			 , M2.ITEM_NAME	AS AS_ITEM_NAME
			 , B.AS_QTY--수량
			 , B.WH_CODE
			 , B.WH_CELL_CODE--위치
			 --, B.AS_REMARK--비고
			 , M2.SPEC AS AS_REMARK
		  FROM SAS300T A WITH (NOLOCK)
				INNER JOIN SAS310T B  WITH (NOLOCK) ON A.COMP_CODE	= B.COMP_CODE  AND A.DIV_CODE	 = B.DIV_CODE     AND A.REPAIR_NUM	= B.REPAIR_NUM
				LEFT  JOIN SAS200T C  WITH (NOLOCK) ON A.COMP_CODE	= C.COMP_CODE  AND A.DIV_CODE	 = C.DIV_CODE     AND A.QUOT_NUM	= C.QUOT_NUM
				LEFT  JOIN SAS100T D  WITH (NOLOCK) ON A.COMP_CODE	= D.COMP_CODE  AND A.DIV_CODE	 = D.DIV_CODE     AND A.RECEIPT_NUM	= D.RECEIPT_NUM
				LEFT  JOIN BCM100T M1 WITH (NOLOCK) ON D.COMP_CODE	= M1.COMP_CODE AND D.CUSTOM_CODE = M1.CUSTOM_CODE
				LEFT  JOIN BPR100T M2 WITH (NOLOCK) ON B.COMP_CODE	= M2.COMP_CODE AND B.ITEM_CODE	 = M2.ITEM_CODE
				LEFT  JOIN BSA300T M3 WITH (NOLOCK) ON C.COMP_CODE	= M3.COMP_CODE AND C.DIV_CODE	 = M3.DIV_CODE    AND C.QUOT_PRSN	= M3.USER_ID
				LEFT  JOIN BPR100T M4 WITH (NOLOCK) ON D.COMP_CODE	= M4.COMP_CODE AND D.ITEM_CODE	 = M4.ITEM_CODE
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.DIV_CODE      = #{DIV_CODE}
		   AND A.REPAIR_NUM    = #{REPAIR_NUM}
		   AND ISNULL(B.INOUT_NUM,'') = ''		--이미 출고된것은 제외
		 ORDER BY B.REPAIR_SEQ
	</select>
</mapper>