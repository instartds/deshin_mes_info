<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 foren.unilite.modules.com.combo.ComboItemModel
-->
<mapper namespace="s_ext_combo_mitServiceImpl">
	<select id="s_ext_combo_mitServiceImpl.getCodeDetailList" parameterType="Map" resultType="foren.unilite.com.code.CodeDetailVO">
         /* ProgramID=TlabCodeServiceImpl.getCodeDetailList */ 
            SELECT
            	  COMP_CODE 
                , MAIN_CODE groupCD
                , SUB_CODE value
                , ISNULL(CODE_NAME, SUB_CODE)    AS text
                , '' AS "option"
                , ISNULL(sort_seq, 99999)        AS seq
                , case use_yn when 'Y' then 'TRUE' else 'FALSE' end as inUse     
                , REF_CODE1 AS refCode1
                , REF_CODE2 AS refCode2
                , REF_CODE3 AS refCode3
                , REF_CODE4 AS refCode4
                , REF_CODE5 AS refCode5
                , REF_CODE6 AS refCode6
                , REF_CODE7 AS refCode7
                , REF_CODE8 AS refCode8
                , REF_CODE9 AS refCode9
                , REF_CODE10 AS refCode10   
                , REF_CODE11 AS refCode11
                , REF_CODE12 AS refCode12
                , REF_CODE13 AS refCode13
                , REF_CODE14 AS refCode14
                , REF_CODE15 AS refCode15             
            FROM BSA100T WITH (NOLOCK)
            WHERE SUB_CODE != '$'
            <if test="@foren.Ognl@isNotEmpty(COMP_CODE)">
              AND  COMP_CODE = #{COMP_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(MAIN_CODE)">
              AND  MAIN_CODE = #{MAIN_CODE}
            </if>
            ORDER BY COMP_CODE
                    ,MAIN_CODE
                    ,SORT_SEQ
                    ,SUB_CODE
    </select> 
	<select id="s_ext_combo_mitServiceImpl.getCompList" parameterType="Map" resultType="rMap">
	/*s_ext_combo_mitServiceImpl.getCompList */
	SELECT COMP_CODE  value
     	, COMP_NAME  text
     	, COMP_CODE + COMP_NAME search
	 FROM BOR100T   WITH (NOLOCK)
	 ORDER BY COMP_CODE
	</select>
	<select id="s_ext_combo_mitServiceImpl.getItemLevel1" parameterType="Map" resultType="rMap">
		/*s_ext_combo_mitServiceImpl.getItemLevel1 */
		SELECT COMP_CODE AS option
			 , LEVEL1  value
		     , LEVEL_NAME   text
		     , LEVEL1 + LEVEL_NAME search
		     --20200922 추가: 월드와이드메모리 체번용
		     , REMARK     AS refCode10
		  FROM BPR000T WITH (NOLOCK)
		 WHERE LEVEL2    = '*'
		   AND LEVEL3    = '*'
	</select>
	<select id="s_ext_combo_mitServiceImpl.getItemLevel2" parameterType="Map" resultType="rMap">
		/*s_ext_combo_mitServiceImpl.getItemLevel2 */
		SELECT COMP_CODE
			 , LEVEL2  value
		     , LEVEL_NAME   text
		     , COMP_CODE + LEVEL1  AS 'option'
		     , LEVEL2 + LEVEL_NAME search
		     --20200922 추가: 월드와이드메모리 체번용
		     , REMARK     AS refCode10
		  FROM BPR000T WITH (NOLOCK)
		 WHERE LEVEL2   != '*'
		   AND LEVEL3    = N'*'
	</select>
	<select id="s_ext_combo_mitServiceImpl.getItemLevel3" parameterType="Map" resultType="rMap">
		/*s_ext_combo_mitServiceImpl.getItemLevel3 */
		SELECT LEVEL3  value
		     , LEVEL_NAME   text
		     , COMP_CODE + LEVEL2 AS 'option'
		     , LEVEL3 + LEVEL_NAME search
		     --20200922 추가: 월드와이드메모리 체번용
		     , REMARK     AS refCode10
		  FROM BPR000T WITH (NOLOCK)
		 WHERE LEVEL2   != '*'
		   AND LEVEL3   != '*'
	</select>
	<select id="s_ext_combo_mitServiceImpl.getItemLevelInfo" parameterType="Map" resultType="rMap">
		/*s_ext_combo_mitServiceImpl.getItemLevelInfo */
		SELECT COMP_CODE
			 . LEVEL1
        	 , LEVEL2
        	 , LEVEL3
           FROM BPR000T WITH (NOLOCK)
          WHERE COMP_CODE = #{S_COMP_CODE}
          	AND LEVEL1   != '*'
            AND LEVEL2   != '*'
            AND LEVEL3   = #{LEVEL3}
	</select>
	<select id="s_ext_combo_mitServiceImpl.getWhList" parameterType="Map" resultType="rMap">
		/*창고*/
		/*s_ext_combo_mitServiceImpl.getWhList*/
		SELECT COMP_CODE
			 , A.TREE_CODE AS 'value'
			 , A.TREE_NAME AS 'text'
			 , A.TYPE_LEVEL AS 'option'
			 , A.TREE_CODE + TREE_NAME search
		FROM BSA220T  A WITH (NOLOCK)
		LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                         AND B.MAIN_CODE = 'I106'
                                         AND B.SUB_CODE  = 'A'
                                         AND B.REF_CODE1 = 'Y'
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND ((ISNULL(B.REF_CODE1, 'N') = 'Y' AND A.USE_YN = 'Y') OR (ISNULL(B.REF_CODE1, 'N') = 'N'))
		ORDER BY A.SORT_SEQ, A.TREE_CODE
	</select>

	<select id="s_ext_combo_mitServiceImpl.getWhCellList" parameterType="Map" resultType="comboItem">
        /*창고cell*/
        SELECT WH_CELL_CODE    AS 'value'
             , WH_CELL_NAME    AS 'text'
             , WH_CODE         AS 'option'
             --BSA225T의 CUSTOM_CODE
             , CASE WHEN ISNULL(CUSTOM_CODE, '') = '' THEN '*'
                    ELSE ISNULL(CUSTOM_CODE, '')
               END             AS 'refCode10'
             , WH_CELL_CODE + WH_CELL_NAME AS 'search'
          FROM BSA225T WITH (NOLOCK)
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND USE_YN     = 'Y'
    </select>

	<select id="s_ext_combo_mitServiceImpl.getDeptList" parameterType="Map" resultType="comboItem">
		--uniLITE5Popup.CPopup[getTreePopup] Query01
		SELECT A.TREE_CODE   AS 'value'
		     , A.TREE_NAME   AS 'text'
		  FROM BSA210T A WITH (NOLOCK)
		 WHERE COMP_CODE  = N'MASTER'
		 ORDER BY A.SORT_SEQ, A.TREE_CODE
	</select>

	<select id="s_ext_combo_mitServiceImpl.getProgWork" parameterType="Map" resultType="comboItem">
		/*공정*/
		--pmr800ukrv.Cpmr800ukrv[fnRecordCombo] Query1
		SELECT PROG_WORK_CODE
		     , PROG_WORK_NAME
		  FROM PBS200T  WITH (NOLOCK)
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		   AND USE_YN         =  'Y'
		 ORDER BY PROG_WORK_CODE
	</select>
	<select id="s_ext_combo_mitServiceImpl.getWhUList" parameterType="Map" resultType="comboItem">
		/* 작업장 combType = 'OU'  */
		/*s_ext_combo_mitServiceImpl.getWhUList*/
		SELECT TREE_CODE    AS 'value'
		     , TREE_NAME    AS 'text'
		     , TYPE_LEVEL AS 'option'
			 , TREE_CODE + TREE_NAME AS 'search'
		  FROM BSA220T WITH (NOLOCK)
		 WHERE COMP_CODE =#{S_COMP_CODE}
		   AND USE_YN   != 'N'
		 ORDER BY SORT_SEQ, TREE_CODE
	</select>
	<select id="s_ext_combo_mitServiceImpl.getWsList" parameterType="Map" resultType="comboItem">
		/*주작업장, combType = 'W' */
		/*s_ext_combo_mitServiceImpl.getWsList*/
		SELECT TREE_CODE  AS 'value'
			 , TREE_NAME  AS 'text'
			 , TYPE_LEVEL  AS 'option'
			 , TREE_CODE + TREE_NAME AS 'search'
		FROM BSA230T  WITH (NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		ORDER BY TREE_CODE
	</select>
	<select id="s_ext_combo_mitServiceImpl.getWsUList" parameterType="Map" resultType="comboItem">
		/* 작업장 combType = 'WU'  */
		/*s_ext_combo_mitServiceImpl.getWsUList*/
		SELECT TREE_CODE  AS 'value'
			 , TREE_NAME  AS 'text'
			 , TYPE_LEVEL  AS 'option'
			 , TREE_CODE + TREE_NAME AS 'search'
			 , SHIFT_CD AS 'refCode1'
		FROM BSA230T WITH (NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND USE_YN   != 'N'
		ORDER BY TREE_CODE
	</select>
	
    <select id="s_ext_combo_mitServiceImpl.getPmp100tProgWorkCode" parameterType="Map" resultType="comboItem">
        /*작업지시 공정 가져오기*/
      SELECT A.PROG_WORK_CODE AS 'value'
			   ,ISNULL(C1.PROG_WORK_NAME,'') AS 'text'
			   ,A.WKORD_NUM AS 'refCode1'
			   ,A.DIV_CODE AS 'option'
		 FROM       PMP100T  A  WITH (NOLOCK)
         LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                            AND C1.div_code       = A.div_code
                                            AND C1.work_shop_code = A.work_shop_code
                                            AND C1.prog_work_code = A.prog_work_code
         WHERE  A.comp_code      = #{S_COMP_CODE}
         AND  A.DIV_CODE      = #{DIV_CODE}
         AND  A.WKORD_NUM      = #{WKORD_NUM}
    </select>
     <select id="s_ext_combo_mitServiceImpl.getQbaListCombo" parameterType="Map" resultType="comboItem">
      SELECT     TEST_CODE		AS 'value'
				,TEST_NAME		AS 'text'
				,TEST_COND		AS 'refCode1'
				,TEST_COND_FROM AS 'refCode2'
				,TEST_COND_TO	AS 'refCode3'
				,TEST_METH		AS 'refCode4'
				,TEST_UNIT		AS 'refCode5'
				,TEST_RESULT	AS 'refCode6'
				,TEST_LOC		AS 'refCode7'
				,TEST_PRSN		AS 'refCode8'
				,SEQ			AS 'refCode9'
				,VALUE_TYPE		AS 'refCode10'
				,REMARK			AS 'refCode11'
				,VALUE_POINT	AS 'refCode12'
				,TEST_VALUE		AS 'refCode13'
				,TEST_NAME_ENG	AS 'refCode14'
				,TEST_COND_ENG	AS 'refCode15'
		FROM  QBA100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND DIV_CODE 	= #{DIV_CODE}
    </select>
     <select id="s_ext_combo_mitServiceImpl.getProgWorkCode" parameterType="Map" resultType="comboItem">
        /*공정 가져오기*/
      SELECT    A.PROG_WORK_CODE AS 'value'
			   ,ISNULL(A.PROG_WORK_NAME,'') AS 'text'
			   ,A.WORK_SHOP_CODE AS 'refCode1'
			   ,A.DIV_CODE AS 'option'
		 FROM   PBS200T  A WITH (NOLOCK)

         WHERE  A.comp_code   = #{S_COMP_CODE}
         AND  A.DIV_CODE      = #{DIV_CODE}

    </select>
</mapper>