<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bpr200ukrv_mitServiceImpl">
	<select id="s_bpr200ukrv_mitServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* s_bpr200ukrv_mitServiceImpl.selectDetailList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , B.ITEM_NAME
		     , B.SPEC
		     , A.직경              AS C
		     , A.길이              AS D
		     , A.골드위치          AS E
		     , A.열처리온도        AS F
		     , A.열처리시간        AS G
		     , A.적재패턴          AS H
		     , A.코팅_RPM          AS I
		     , A.삽입_직경         AS J
		     , A.삽입OS_길이       AS K
		     , A.삽입IS_길이       AS L
		     , A.걸림_간격A        AS M
		     , A.걸림_REP_BLOCK    AS N
		     , A.걸림_간격C        AS O
		     , A.걸림_VIS_MAKER    AS P
		     , A.조립_멘드렐     AS AM
		     , A.조립_라쏘         AS Q
		     , A.조립_손잡이       AS R
		     , A.포장_박스         AS S
--		     , ''                  AS T --'박스(고객이중국일때)
		     , A.포장_국내         AS U
		     , A.포장_프랑스       AS V
		     , A.포장_독일         AS W
		     , A.포장_중국         AS X
		     , A.포장_우크라이나   AS Y
		     , A.포장_일본         AS Z
		     , A.사용자설명서_IFU  AS AA
		     , A.액세서리          AS AB
		     , A.상품직경          AS AC
		     , A.상품길이          AS AD
		     , A.상품유형          AS AE
		     , A.상품형상          AS AF
		     , A.상품허가번호      AS AG
		     , A.상품제조국        AS AH
		     , A.상품제조사        AS AI
		     , A.작지공정구분      AS AJ
		     , A.작지투입공정      AS AK
		     , A.라벨              AS AL
		     , A.사용자설명서_IFU_US AS IFU_US
		     , A.사용자설명서_IFU_DE AS IFU_DE
		     , A.사용자설명서_IFU_ETC AS IFU_ETC
		  FROM       BPR200T_ADD_MIT A WITH(NOLOCK)
		  INNER JOIN BPR100T         B ON B.COMP_CODE = A.COMP_CODE
		                              AND B.ITEM_CODE = A.ITEM_CODE
		  --INNER JOIN BPR200T C ON C.COMP_CODE = A.COMP_CODE
		  --                    AND C.DIV_CODE  = A.DIV_CODE
		  --                    AND C.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		   AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
		   AND B.ITEM_NAME LIKE #{ITEM_NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(SPEC)">
		   AND B.SPEC      LIKE #{SPEC} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		   AND B.ITEM_LEVEL1= #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		   AND B.ITEM_LEVEL2= #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		   AND B.ITEM_LEVEL3= #{ITEM_LEVEL3}
		</if>
	</select>

	<update id="s_bpr200ukrv_mitServiceImpl.updateDetail" parameterType="Map">
		/* s_sof120ukrv_mitServiceImpl.updateDetail */
		DECLARE @COMP_CODE NVARCHAR(08)
		      , @DIV_CODE  NVARCHAR(08)
		      , @ITEM_CODE NVARCHAR(20)

		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		    SET @ITEM_CODE = #{ITEM_CODE}

		MERGE INTO BPR200T_ADD_MIT                       A
		USING ( SELECT @COMP_CODE      AS COMP_CODE
		             , @DIV_CODE       AS DIV_CODE
		             , @ITEM_CODE      AS ITEM_CODE
		       )                                         B  ON B.COMP_CODE  = A.COMP_CODE
		                                                   AND B.DIV_CODE   = A.DIV_CODE
		                                                   AND B.ITEM_CODE  = A.ITEM_CODE
		WHEN MATCHED THEN
		UPDATE 
		   SET 직경              = #{C}
		     , 길이              = #{D}
		     , 골드위치          = #{E}
		     , 열처리온도        = #{F}
		     , 열처리시간        = #{G}
		     , 적재패턴          = #{H}
		     , 코팅_RPM          = #{I}
		     , 삽입_직경         = #{J}
		     , 삽입IS_길이       = #{L}
		     , 삽입OS_길이       = #{K}
		     , 걸림_간격A        = #{M}
		     , 걸림_REP_BLOCK    = #{N}
		     , 걸림_간격C        = #{O}
		     , 걸림_VIS_MAKER    = #{P}
		     , 조립_멘드렐     =  #{AM}
		     , 조립_라쏘         = #{Q}
		     , 조립_손잡이       = #{R}
		     , 포장_박스         = #{S}
--		     , ''                = {T} --'박스(고객이중국일때)
		     , 포장_국내         = #{U}
		     , 포장_프랑스       = #{V}
		     , 포장_독일         = #{W}
		     , 포장_중국         = #{X}
		     , 포장_우크라이나   = #{Y}
		     , 포장_일본         = #{Z}
		     , 사용자설명서_IFU  = #{AA}
		     , 액세서리          = #{AB}
		     , 상품직경          = #{AC}
		     , 상품길이          = #{AD}
		     , 상품유형          = #{AE}
		     , 상품형상          = #{AF}
		     , 상품허가번호      = #{AG}
		     , 상품제조국        = #{AH}
		     , 상품제조사        = #{AI}
		     , 사용자설명서_IFU_US  =  #{IFU_US}
		     , 사용자설명서_IFU_DE  =  #{IFU_DE}
		     , 사용자설명서_IFU_ETC =  #{IFU_ETC}
--		     , 작지공정구분      = {AJ}
--		     , 작지투입공정      = {AK}
--		     , 라벨              = {AL}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		       COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , 직경
		     , 길이
		     , 골드위치
		     , 열처리온도
		     , 열처리시간
		     , 적재패턴
		     , 코팅_RPM
		     , 삽입_직경
		     , 삽입IS_길이
		     , 삽입OS_길이
		     , 걸림_간격A
		     , 걸림_REP_BLOCK
		     , 걸림_간격C
		     , 걸림_VIS_MAKER
		     , 조립_멘드렐
		     , 조립_라쏘
		     , 조립_손잡이
		     , 포장_박스
		     , 포장_국내
		     , 포장_프랑스
		     , 포장_독일
		     , 포장_중국
		     , 포장_우크라이나
		     , 포장_일본
		     , 사용자설명서_IFU
		     , 액세서리
		     , 상품직경
		     , 상품길이
		     , 상품유형
		     , 상품형상
		     , 상품허가번호
		     , 상품제조국
		     , 상품제조사
		     , 사용자설명서_IFU_US 
			 , 사용자설명서_IFU_DE 
			 , 사용자설명서_IFU_ETC
		     
--		     , 작지공정구분
--		     , 작지투입공정
--		     , 라벨
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{C}
		     , #{D}
		     , #{E}
		     , #{F}
		     , #{G}
		     , #{H}
		     , #{I}
		     , #{J}
		     , #{L}
		     , #{K}
		     , #{M}
		     , #{N}
		     , #{O}
		     , #{P}
		     , #{AM}
		     , #{Q}
		     , #{R}
		     , #{S}
		     , #{U}
		     , #{V}
		     , #{W}
		     , #{X}
		     , #{Y}
		     , #{Z}
		     , #{AA}
		     , #{AB}
		     , #{AC}
		     , #{AD}
		     , #{AE}
		     , #{AF}
		     , #{AG}
		     , #{AH}
		     , #{AI}
		     , #{IFU_US}
			 , #{IFU_DE}
			 , #{IFU_ETC}
--		     , {AJ}
--		     , {AK}
--		     , {AL}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		);
	</update>

	<delete id="s_bpr200ukrv_mitServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM BPR200T_ADD_MIT
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</delete>



	<!-- Excel Upload-->
	<update id="s_bpr200ukrv_mitServiceImpl.insertExcels_bpr200ukrv_mitUpload" parameterType="Map">
		/* s_bpr200ukrv_mitServiceImpl.insertExcels_bpr200ukrv_mitUpload */
		INSERT INTO BPR200T_ADD_MIT_XLS
		    (
		       _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     , COMP_CODE
		     , DIV_CODE
		     , ITEM_CODE
		     , C
		     , D
		     , E
		     , F
		     , G
		     , H
		     , I
		     , J
		     , K
		     , L
		     , M
		     , N
		     , O
		     , P
		     , AM
		     , Q
		     , R
		     , S
--		     , T
		     , U
		     , V
		     , W
		     , X
		     , Y
		     , Z
		     , AA
		     , AB
		     , IFU_US
		     , IFU_DE
		     , IFU_ETC
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
		     , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
		     , #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ITEM_CODE}
		     , #{C}
		     , #{D}
		     , #{E}
		     , #{F}
		     , #{G}
		     , #{H}
		     , #{I}
		     , #{J}
		     , #{K}
		     , #{L}
		     , #{M}
		     , #{N}
		     , #{O}
		     , #{P}
		     , #{AM}
		     , #{Q}
		     , #{R}
		     , #{S}
--		     , {T}
		     , #{U}
		     , #{V}
		     , #{W}
		     , #{X}
		     , #{Y}
		     , #{Z}
		     , #{AA}
		     , #{AB}
		     , #{IFU_US}
		     , #{IFU_DE}
		     , #{IFU_ETC}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="s_bpr200ukrv_mitServiceImpl.getData" parameterType="Map" resultType="rMap">
		/* s_bpr200ukrv_mitServiceImpl.getData */
		SELECT A.*, B.ITEM_NAME, C.SPEC
		  FROM      BPR200T_ADD_MIT_XLS A WITH(NOLOCK)
		  LEFT JOIN BPR200T          B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                           AND B.DIV_CODE  = A.DIV_CODE
		                                           AND B.ITEM_CODE = A.ITEM_CODE
		  LEFT JOIN BPR100T          C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                           AND C.ITEM_CODE = A.ITEM_CODE
		 WHERE A._EXCEL_JOBID	 = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_ROWNUM
	</select>

	<select id="s_bpr200ukrv_mitServiceImpl.checkItem" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'
			IF NOT EXISTS ( SELECT TOP 1 1
							  FROM BPR200T WITH(NOLOCK)
							 WHERE COMP_CODE = #{COMP_CODE}
							   AND DIV_CODE  = #{DIV_CODE}
							   AND ITEM_CODE = #{ITEM_CODE}
				  		  )
			BEGIN
				SET @CHECK_DATA = 'Y'
			END

		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<update id="s_bpr200ukrv_mitServiceImpl.insertErrorMsg">
		UPDATE BPR200T_ADD_MIT_XLS
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>
</mapper>