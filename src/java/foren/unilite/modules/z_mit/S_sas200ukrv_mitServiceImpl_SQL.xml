<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sas200ukrv_mitServiceImpl">
	<select id="s_sas200ukrv_mitServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
          , @QuotNum        NVARCHAR(20)   /* 수리견적번호            */

          , @UserId         NVARCHAR(100)  /* 사용자ID            */

    SET @CompCode   = #{S_COMP_CODE}
    SET @DivCode    = #{DIV_CODE}
    SET @QuotNum    = #{QUOT_NUM}

    SET @UserId     = #{S_USER_ID}

    /* 조회 */
    SELECT A.COMP_CODE                                      /* 법인코드       */
         , A.DIV_CODE                                       /* 사업장         */
         , A.QUOT_NUM                                       /* 수리견적번호   */
         , A.QUOT_DATE                                      /* 견적일         */
         , A.QUOT_PRSN                                      /* 견적자 USER ID */
         , C3.USER_NAME                                     /* 견적자명       */
         , A.COST_YN                                        /* 유무상         */
         , A.BAD_REMARK                                     /* 불량내용       */
         , A.REMARK                                         /* 견적내용       */
         , A.REPAIR_RANK                                    /* 수리랭크       */
         , A.RECEIPT_NUM                                    /* 접수번호       */
         , A.FILE_NUM										/* 파일 번호      */
         , B.AS_STATUS                                      /* 진행상태         */
         , B.WARR_MONTH
		 , B.WARR_DATE
		 , B.MACHINE_TYPE
		 , A.FDA_Q1_YN                                      /* FDA 질문1 답변 Y/N  */
		 , A.FDA_Q2_YN                                      /* FDA 질문2 답변 Y/N  */
		 , A.FDA_Q3_YN                                      /* FDA 질문3 답변 Y/N  */
		 , C1.WON_CALC_BAS
	     , C1.TAX_TYPE
      FROM            SAS200T A  WITH (NOLOCK)
      	   LEFT  JOIN SAS100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                          AND B.DIV_CODE     = A.DIV_CODE
	                                          AND B.RECEIPT_NUM  = A.RECEIPT_NUM         
		   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                      AND C3.USER_ID     = A.QUOT_PRSN
		   LEFT  JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
			                                  AND C1.CUSTOM_CODE = B.CUSTOM_CODE                                   
     WHERE A.COMP_CODE = @CompCode
       AND A.DIV_CODE  = @DivCode
       AND A.QUOT_NUM  = @QuotNum
	</select>
	<select id="s_sas200ukrv_mitServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
	DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
          , @QuotNum        NVARCHAR(20)   /* 수리견적번호        */

          , @UserId         NVARCHAR(100)  /* 사용자ID            */
          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

    SET @CompCode   = #{S_COMP_CODE}
    SET @DivCode    = #{DIV_CODE}
    SET @QuotNum    = #{QUOT_NUM}

    SET @UserId     = #{S_USER_ID}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 조회 */
    SELECT A.COMP_CODE                                      /* 법인코드       */
         , A.DIV_CODE                                       /* 사업장         */
         , A.QUOT_NUM                                       /* 수리견적번호   */
         , B.QUOT_SEQ                                       /* 순번           */
         , B.ITEM_CODE                                      /* 품목코드       */
         , CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		        WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                            ELSE C2.ITEM_NAME
		    END AS ITEM_NAME                                /* 품목명         */
		 , ISNULL(C2.SPEC,'') AS SPEC                       /* 규격           */
         , B.AS_QTY                                         /* 수량           */
         , B.AS_UNIT                                        /* 단위           */
         , B.AS_PRICE                                       /* 출고단가       */
         , B.AS_AMT                                         /* 출고금액       */
         , B.AS_REMARK                                      /* 비고           */
         , C5.LOT_YN
         , C2.STOCK_CARE_YN
         , CASE WHEN C2.STOCK_CARE_YN = 'N' THEN C5.WH_CODE
                ELSE ''
            END AS WH_CODE
         , B.TAX_AMT
         , B.TOT_AMT
         , CASE WHEN C4.PABSTOCK_YN = 'Y' AND STOCK_Q > 0 THEN 'Y' ELSE '' END AS STOCK_YN
      FROM            SAS200T A  WITH (NOLOCK)
           INNER JOIN SAS210T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                              AND B.DIV_CODE     = A.DIV_CODE
                                              AND B.QUOT_NUM     = A.QUOT_NUM
           INNER JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                              AND C2.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BPR200T C5 WITH (NOLOCK) ON C5.COMP_CODE   = B.COMP_CODE
                                              AND C5.DIV_CODE    = B.DIV_CODE
                                              AND C5.ITEM_CODE   = B.ITEM_CODE                                  
		   LEFT  JOIN BSA300T C3 WITH (NOLOCK) ON C3.COMP_CODE   = A.COMP_CODE
		                                      AND C3.USER_ID     = A.QUOT_PRSN
		   LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE   = C5.COMP_CODE
		                                      AND C4.DIV_CODE    = C5.DIV_CODE  
		                                      AND C4.WH_CODE     = C5.WH_CODE  
		                                      AND C4.WH_CELL_CODE = C5.WH_CELL_CODE  
		   LEFT  JOIN (SELECT   S1.COMP_CODE
				  				 , S1.DIV_CODE
				  				 , S1.ITEM_CODE
				  				 , SUM(S1.STOCK_Q) AS STOCK_Q
						    FROM  BIV100T S1 WITH (NOLOCK)
						   WHERE  S1.COMP_CODE = @CompCode
						    AND	S1.DIV_CODE    = @DivCode
						  GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE ) C6  ON C6.COMP_CODE = B.COMP_CODE
				                                                                AND C6.DIV_CODE  = B.DIV_CODE
				                                                                AND C6.ITEM_CODE = B.ITEM_CODE                                   
		                                                                       
     WHERE A.COMP_CODE = @CompCode
       AND A.DIV_CODE  = @DivCode
       AND A.QUOT_NUM  = @QuotNum
     ORDER BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM, B.QUOT_SEQ
		
	</select>
	<update id="s_sas200ukrv_mitServiceImpl.updateMaster" parameterType="foren.unilite.modules.z_mit.S_sas200ukrv_mitModel">
		IF NOT EXISTS(SELECT QUOT_NUM 
		                FROM SAS200T 
		               WHERE COMP_CODE = #{S_COMP_CODE}
				         AND DIV_CODE = #{DIV_CODE}	
				         AND QUOT_NUM = #{QUOT_NUM})
		BEGIN
			INSERT INTO SAS200T(
				   COMP_CODE
				 , DIV_CODE
				 , QUOT_NUM
				 , QUOT_DATE  
				 , QUOT_PRSN  
				 , REPAIR_RANK
				 , COST_YN    
				 , BAD_REMARK 
				 , REMARK     
				 , RECEIPT_NUM
				 , FILE_NUM   
				 , FDA_Q1_YN
				 , FDA_Q2_YN
				 , FDA_Q3_YN
				 , INSERT_DB_USER
				 , INSERT_DB_TIME
				 , UPDATE_DB_USER
				 , UPDATE_DB_TIME				
			)
			VALUES(
				   #{S_COMP_CODE}
				 , #{DIV_CODE}
				 , #{QUOT_NUM}
				 , #{QUOT_DATE}  
				 , #{QUOT_PRSN} 
				 , #{REPAIR_RANK}
				 , #{COST_YN}    
				 , #{BAD_REMARK} 
				 , #{REMARK}     
				 , #{RECEIPT_NUM}
				 , #{FILE_NUM}   
				 , #{FDA_Q1_YN}
				 , #{FDA_Q2_YN}
				 , #{FDA_Q3_YN}
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			)
			-- 진행상태정보 변경 (신규 일 경우만 변경)
			UPDATE SAS100
			   SET AS_STATUS   = '20'
			 WHERE COMP_CODE   = #{S_COMP_CODE}
			   AND DIV_CODE    = #{DIV_CODE}	
			   AND RECEIPT_NUM = #{RECEIPT_NUM}
		END
		ELSE
		BEGIN
			UPDATE SAS200T
				SET 
					 QUOT_DATE = #{QUOT_DATE}
					,QUOT_PRSN = #{QUOT_PRSN}
					,REPAIR_RANK = #{REPAIR_RANK}
					,COST_YN = #{COST_YN}
					,BAD_REMARK = #{BAD_REMARK}
					,REMARK = #{REMARK}
					,RECEIPT_NUM = #{RECEIPT_NUM}
					,FILE_NUM = #{FILE_NUM}
					,FDA_Q1_YN      = #{FDA_Q1_YN}
					,FDA_Q2_YN      = #{FDA_Q2_YN}
					,FDA_Q3_YN      = #{FDA_Q3_YN}
					,UPDATE_DB_USER = #{S_USER_ID}
					,UPDATE_DB_TIME = GETDATE()
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND DIV_CODE = #{DIV_CODE}	
				  AND QUOT_NUM = #{QUOT_NUM}
		END
	</update>
	<delete id="s_sas200ukrv_mitServiceImpl.deleteMaster" parameterType="Map">
		DELETE FROM SAS200T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND QUOT_NUM = #{QUOT_NUM}
	</delete>
	<delete id="s_sas200ukrv_mitServiceImpl.deleteAll" parameterType="Map">
		DELETE FROM SAS200T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND QUOT_NUM = #{QUOT_NUM}
		   
		DELETE FROM SAS210T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND QUOT_NUM = #{QUOT_NUM} 
	</delete>
	<select id="s_sas200ukrv_mitServiceImpl.selectQuotNum" parameterType="foren.unilite.modules.z_mit.S_sas100ukrv_mitModel" resultType="String">
		DECLARE   @DIV_CODE         NVARCHAR(08)
		        , @MAX_QUOT_NUM     NVARCHAR(20)
		        , @MACHINE_TYPE     NVARCHAR(01)
				, @QUOT_DATE        NVARCHAR(08)
				, @SEQ              NVARCHAR(03)
		
		SELECT @MACHINE_TYPE    = MACHINE_TYPE
		  FROM SAS100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND RECEIPT_NUM = #{RECEIPT_NUM}
		
		SELECT   @DIV_CODE     = DIV_CODE
			   , @QUOT_DATE    = QUOT_DATE
			   , @MAX_QUOT_NUM = MAX(RIGHT(QUOT_NUM,3))
		  FROM SAS200T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}	
		   AND QUOT_DATE = #{QUOT_DATE}
		 GROUP BY DIV_CODE, QUOT_DATE
		 
		 IF(@MAX_QUOT_NUM IS NULL)
		 SET @SEQ = '001'
		 ELSE
		 SET @SEQ = RIGHT('00'+ CONVERT(NVARCHAR(3), CONVERT(INT, RIGHT(@MAX_QUOT_NUM, 3)) + 1), 3)
		
		SELECT ISNULL(@DIV_CODE, #{DIV_CODE}) + 'B'+ ISNULL(@MACHINE_TYPE, #{MACHINE_TYPE}) + ISNULL(@QUOT_DATE, #{QUOT_DATE}) + @SEQ
	</select>
	<select id="s_sas200ukrv_mitServiceImpl.selectQuotSeq"  parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(QUOT_SEQ), 0) + 1 as QUOT_SEQ
		  FROM SAS210T
		  WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND QUOT_NUM = #{QUOT_NUM} 
	</select>
	<insert id="s_sas200ukrv_mitServiceImpl.insertDetail" parameterType="rMap">
		INSERT INTO SAS210T (
				  COMP_CODE	
				, DIV_CODE	
				, QUOT_NUM	
				, QUOT_SEQ	
				, ITEM_CODE 
				, AS_QTY  	
				, AS_UNIT   
				, AS_PRICE  
				, AS_AMT  	
				, TAX_AMT
				, TOT_AMT
				, AS_REMARK 
				, INSERT_DB_USER
				, INSERT_DB_TIME
				, UPDATE_DB_USER
				, UPDATE_DB_TIME							
		
		) VALUES (
				  #{S_COMP_CODE}	
				, #{DIV_CODE}	
				, #{QUOT_NUM}	
				, #{QUOT_SEQ}	
				, #{ITEM_CODE}  
				, #{AS_QTY}	
				, #{AS_UNIT}  
				, #{AS_PRICE}	
				, #{AS_AMT}	
				, #{TAX_AMT}	
				, #{TOT_AMT}	
				, #{AS_REMARK}  
				, #{S_USER_ID}
			    , GETDATE()
			    , #{S_USER_ID}
			    , GETDATE()
		)
		
	</insert>
	<update id="s_sas200ukrv_mitServiceImpl.updateDetail" parameterType="rMap">
		UPDATE SAS210T
		  SET     ITEM_CODE 	   =  #{ITEM_CODE}  
				, AS_QTY  		   =  #{AS_QTY}	
				, AS_UNIT   	   =  #{AS_UNIT}  
				, AS_PRICE  	   =  #{AS_PRICE}	
				, AS_AMT  		   =  #{AS_AMT}	
				, TAX_AMT          = #{TAX_AMT}	
				, TOT_AMT          = #{TOT_AMT}
				, AS_REMARK 	   =  #{AS_REMARK}  
				, UPDATE_DB_USER   =  #{S_USER_ID}
				, UPDATE_DB_TIME   =  GETDATE()	
	   WHERE 	COMP_CODE		   =  #{S_COMP_CODE}
		 AND    DIV_CODE		   =  #{DIV_CODE}	
		 AND	QUOT_NUM		   =  #{QUOT_NUM}	
		 AND    QUOT_SEQ		   =  #{QUOT_SEQ}			
	</update>
	<delete id="s_sas200ukrv_mitServiceImpl.deleteDetail" parameterType="Map">
		  DELETE FROM SAS210T
		  WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}	
		   AND QUOT_NUM = #{QUOT_NUM} 
		   AND QUOT_SEQ = #{QUOT_SEQ} 
	</delete>
	<select id="s_sas200ukrv_mitServiceImpl.selectPrint" parameterType="Map" resultType="rMap">
	DECLARE @CompCode       NVARCHAR(08)   /* 법인코드            */
          , @DivCode        NVARCHAR(08)   /* 사업장코드          */
          , @QuotNum        NVARCHAR(20)   /* 수리견적번호        */

          , @UserId         NVARCHAR(100)  /* 사용자ID            */
          , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형      */

    SET @CompCode   = #{S_COMP_CODE}
    SET @DivCode    = #{DIV_CODE}
    SET @QuotNum    = #{QUOT_NUM}

    SET @UserId     = #{S_USER_ID}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 조회 */
    SELECT A.COMP_CODE                                      /* 법인코드       */
         , A.DIV_CODE                                       /* 사업장          */
         
         -- 상단 Master 정보
         , A.QUOT_NUM                                       /* 견적번호       */
         , A.QUOT_DATE                                      /* 견적일          */
         , C2.USER_NAME   AS  QUOT_PRSN                     /* 견적자명(담당자명)*/
         , C1.CUSTOM_NAME                                   /* 병원명  , 공급자 상호 */
         , CASE WHEN @RefItem = '1' THEN D1.ITEM_NAME1
                WHEN @RefItem = '2' THEN D1.ITEM_NAME2
                                    ELSE D1.ITEM_NAME
            END AS MODEL_NAME                               /* 모델명         */
         , D1.SPEC AS SPEC                                  /* 규격         */
         , D.SERIAL_NO                                      /* S/N      */
         , D.IN_DATE                                        /* 입고일        */   
         , A.REMARK                                         /* 비고(목록 하단 ) */
         
         -- 공급자 정보
         , C3.COMP_NAME                                     /* 공급자   상호  */
         , C3.COMPANY_NUM		                            /* 공급자   등록번호  */								
         , C3.REPRE_NAME       AS TOP_NAME                  /* 공급자   대표       */
         , C3.ADDR                                          /* 공급자   주소       */
         , C3.COMP_TYPE                                     /* 공급자   업태       */
         , C3.COMP_CLASS                                    /* 공급자   종목       */
         , C3.TELEPHON                                      /* 공급자   대표번호  */ 
         , C3.FAX_NUM                                       /* 공급자   팩스       */
         , ''                  AS COMP_PRSN                 /* 공급자 담당         */
         -- 목록 
         , B.QUOT_SEQ                                       /* No.          */
         , C.SPEC AS ITEM_NAME
--         , CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
--		        WHEN @RefItem = '2' THEN C.ITEM_NAME2
--		                            ELSE C.ITEM_NAME
--		    END AS ITEM_NAME                                /* 품목명         */
         , B.AS_QTY                                         /* 수량           */
         , B.AS_PRICE                                       /* 단가           */
         , B.TOT_AMT AS_AMT                                 /* 공급가액       */
         , B.AS_REMARK                                      /* 비고           */
         
         -- 거래처 단가
         , ISNULL(B.AS_AMT, 0) / ISNULL(B.AS_QTY, 1)                                AS CUSTOM_AS_PRICE     /* 단가            */
         , AS_AMT                                                                   AS CUSTOM_AS_AMT       /* AS 금액     */
         , SUM(B.AS_AMT) OVER(PARTITION BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM)		AS CUSTOM_TOT_AMT	/* AS 합계금액  */
         , SUM(B.TAX_AMT) OVER(PARTITION BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM)	AS CUSTOM_TOT_VAT	/* VAT 합계금액  */
         
         , SUM(B.AS_QTY) OVER(PARTITION BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM)		AS SUM_QTY	/* 합계수량				*/
         , SUM(B.TOT_AMT) OVER(PARTITION BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM)	AS SUM_AMT	/* 합계금액  */
         , SUM(B.TOT_AMT) OVER(PARTITION BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM)	AS TOT_AMT	/* 합계금액  */
      FROM            SAS200T A  WITH (NOLOCK)
           INNER JOIN SAS210T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                              AND B.DIV_CODE     = A.DIV_CODE
                                              AND B.QUOT_NUM     = A.QUOT_NUM
           INNER JOIN BPR100T C WITH (NOLOCK)  ON C.COMP_CODE    = B.COMP_CODE
                                              AND C.ITEM_CODE    = B.ITEM_CODE
           INNER JOIN SAS100T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                              AND D.DIV_CODE     = A.DIV_CODE
                                              AND D.RECEIPT_NUM  = A.RECEIPT_NUM
           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = D.COMP_CODE
                                              AND C1.CUSTOM_CODE = D.CUSTOM_CODE
           LEFT  JOIN BSA300T C2 WITH (NOLOCK) ON C2.COMP_CODE   = A.COMP_CODE
                                              AND C2.USER_ID     = A.QUOT_PRSN
           INNER JOIN BOR100T C3 WITH (NOLOCK) ON C3.COMP_CODE   = D.COMP_CODE
           INNER JOIN BPR100T D1 WITH (NOLOCK) ON D1.COMP_CODE   = D.COMP_CODE
                                              AND D1.ITEM_CODE   = D.ITEM_CODE
     WHERE A.COMP_CODE = @CompCode
       AND A.DIV_CODE  = @DivCode
       AND A.QUOT_NUM  = @QuotNum
     ORDER BY A.COMP_CODE, A.DIV_CODE, A.QUOT_NUM, B.QUOT_SEQ
		
	</select>
</mapper>