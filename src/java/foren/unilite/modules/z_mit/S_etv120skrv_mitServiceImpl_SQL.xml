<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_etv120skrv_mitServiceImpl">
	
	<select id="s_etv120skrv_mitServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--	s_emp120skrv_hsServiceImpl.selectList
		SET NOCOUNT ON
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP'))
			DROP TABLE #TMP		
		DECLARE   @COMP_CODE NVARCHAR(10) = #{S_COMP_CODE}
				, @DIV_CODE NVARCHAR(10) = #{S_DIV_CODE}
				, @BASE_DATE NVARCHAR(8) = CONVERT(VARCHAR(8), GETDATE(), 112)
				, @WORK_SHOP_CODE NVARCHAR(10) = 'W30'	
		SELECT *
		INTO #TMP
		FROM (
			SELECT '10' GUBUN_CODE
					, '작업지시' AS GUBUN
					, SUM(CASE WHEN DATEADD(DAY, -2, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_Y_2]
					, SUM(CASE WHEN DATEADD(DAY, -1, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_Y_1]
					, SUM(CASE WHEN DATEADD(DAY,  0, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_DAY]
					, SUM(CASE WHEN DATEADD(DAY,  1, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_T_1]
					, SUM(CASE WHEN DATEADD(DAY,  2, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_T_2]
					, SUM(CASE WHEN DATEADD(DAY,  3, @BASE_DATE) = B.PRODT_END_DATE THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS [D_T_3]
					
					, SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) AS M_TARGET_Q
					, SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(B.PRODT_END_DATE,6)  THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END) AS M_SUM_Q
					, CASE WHEN SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(B.PRODT_END_DATE,6)  THEN ISNULL(B.WKORD_Q,0)   ELSE 0 END)/SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) * 100 END AS M_RATE
					
					, SUM(ISNULL(D.WK_PLAN_Q,0))	AS Y_TARGET_Q
					, SUM(ISNULL(B.WKORD_Q,0))		AS Y_SUM_Q
					, CASE WHEN SUM(ISNULL(D.WK_PLAN_Q,0)) = 0 THEN 0 ELSE SUM(ISNULL(B.WKORD_Q,0))/SUM(ISNULL(D.WK_PLAN_Q,0)) * 100 END AS Y_RATE
			FROM BCM420T A WITH (NOLOCK)
				 LEFT JOIN (
							SELECT S1.COMP_CODE, S1.DIV_CODE, S1.PRODT_END_DATE, SUM(S1.WKORD_Q) WKORD_Q
							FROM PMP100T S1 WITH (NOLOCK)
							WHERE S1.COMP_CODE=@COMP_CODE
							AND S1.DIV_CODE=@DIV_CODE
							AND S1.PRODT_END_DATE LIKE LEFT(@BASE_DATE,4) + '%'
							AND S1.LINE_END_YN='Y'
							AND S1.WKORD_STATUS != '8'
							AND S1.WORK_SHOP_CODE = @WORK_SHOP_CODE
							GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.PRODT_END_DATE
					 	   ) B ON A.COMP_CODE=B.COMP_CODE AND B.DIV_CODE=@DIV_CODE AND A.START_DATE=B.PRODT_END_DATE
				 LEFT JOIN (
								SELECT COMP_CODE, DIV_CODE, PRODT_PLAN_DATE PRODT_PLAN_DATE, SUM(WK_PLAN_Q) AS WK_PLAN_Q
								FROM PPL100T WITH (NOLOCK)
								WHERE COMP_CODE=@COMP_CODE
								AND DIV_CODE=@DIV_CODE
								AND PRODT_PLAN_DATE LIKE LEFT(@BASE_DATE,4) + '%'
								AND WORK_SHOP_CODE = @WORK_SHOP_CODE
								AND ITEM_CODE != ''
								GROUP BY COMP_CODE, DIV_CODE, PRODT_PLAN_DATE
				 
							) D  ON D.COMP_CODE=A.COMP_CODE AND D.PRODT_PLAN_DATE=A.START_DATE
			WHERE A.COMP_CODE= @COMP_CODE
			AND A.CAL_TYPE = '4'
			--AND A.START_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY, -2, @BASE_DATE), 112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 3, @BASE_DATE), 112)
			AND A.START_DATE LIKE LEFT(@BASE_DATE,4)+'%'
			UNION 
			SELECT '20' GUBUN_CODE
					, '생산실적' AS GUBUN
					, SUM(CASE WHEN DATEADD(DAY, -2, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_Y_2]
					, SUM(CASE WHEN DATEADD(DAY, -1, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_Y_1]
					, SUM(CASE WHEN DATEADD(DAY,  0, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_DAY]
					, SUM(CASE WHEN DATEADD(DAY,  1, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_T_1]
					, SUM(CASE WHEN DATEADD(DAY,  2, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_T_2]
					, SUM(CASE WHEN DATEADD(DAY,  3, @BASE_DATE) = B.PRODT_DATE THEN ISNULL(B.WORK_Q,0) ELSE 0 END) AS [D_T_3]
		
					, SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) AS M_TARGET_Q
					, SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(B.PRODT_DATE,6)  THEN ISNULL(B.WORK_Q,0)   ELSE 0 END) AS M_SUM_Q
					, CASE WHEN SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(B.PRODT_DATE,6)  THEN ISNULL(B.WORK_Q,0)   ELSE 0 END)/SUM(CASE WHEN LEFT(@BASE_DATE, 6) = LEFT(D.PRODT_PLAN_DATE,6)  THEN ISNULL(D.WK_PLAN_Q,0) ELSE 0 END) * 100 END AS M_RATE
					
					, SUM(ISNULL(D.WK_PLAN_Q,0))	AS Y_TARGET_Q
					, SUM(ISNULL(B.WORK_Q,0))		AS Y_SUM_Q
					, CASE WHEN SUM(ISNULL(D.WK_PLAN_Q,0)) = 0 THEN 0 ELSE SUM(ISNULL(B.WORK_Q,0))/SUM(ISNULL(D.WK_PLAN_Q,0)) * 100 END AS Y_RATE
			FROM BCM420T A WITH (NOLOCK)
				 LEFT JOIN (
							SELECT S1.COMP_CODE, S1.DIV_CODE, S2.PRODT_DATE, SUM(ISNULL(S2.WORK_Q,0)) WORK_Q
							FROM PMP100T S1 WITH (NOLOCK)
								 INNER JOIN PMR100T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.WKORD_NUM=S2.WKORD_NUM AND S1.PROG_WORK_CODE=S2.PROG_WORK_CODE
							WHERE S1.COMP_CODE=@COMP_CODE
							AND S1.DIV_CODE=@DIV_CODE
							AND S2.PRODT_DATE LIKE LEFT(@BASE_DATE,4) + '%'
							AND S1.LINE_END_YN='Y'
							AND S1.WKORD_STATUS != '8'
							AND S1.WORK_SHOP_CODE = @WORK_SHOP_CODE
							GROUP BY S1.COMP_CODE, S1.DIV_CODE, S2.PRODT_DATE
					 	   ) B ON A.COMP_CODE=B.COMP_CODE AND B.DIV_CODE=@DIV_CODE AND A.START_DATE=B.PRODT_DATE
				 LEFT JOIN (
								SELECT COMP_CODE, DIV_CODE, PRODT_PLAN_DATE PRODT_PLAN_DATE, SUM(WK_PLAN_Q) AS WK_PLAN_Q
								FROM PPL100T WITH (NOLOCK)
								WHERE COMP_CODE=@COMP_CODE
								AND DIV_CODE=@DIV_CODE
								AND PRODT_PLAN_DATE LIKE LEFT(@BASE_DATE,4) + '%'
								AND WORK_SHOP_CODE = @WORK_SHOP_CODE
								AND ITEM_CODE != ''
								GROUP BY COMP_CODE, DIV_CODE, PRODT_PLAN_DATE
				 
							) D  ON D.COMP_CODE=A.COMP_CODE AND D.PRODT_PLAN_DATE=A.START_DATE
			WHERE A.COMP_CODE= @COMP_CODE
			AND A.CAL_TYPE = '4'
			--AND A.START_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY, -2, @BASE_DATE), 112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 3, @BASE_DATE), 112)
			AND A.START_DATE LIKE LEFT(@BASE_DATE,4)+'%'
		) X
		UNION
		SELECT '30' GUBUN_CODE
				, '잔량' AS GUBUN
				, 0 AS [D_Y_2]
				, 0 AS [D_Y_1]
				, 0 AS [D_DAY]
				, 0 AS [D_T_1]
				, 0 AS [D_T_2]
				, 0 AS [D_T_3]
		
				, 0 AS M_TARGET_Q
				, 0 M_SUM_Q
				, 0 AS M_RATE
				, 0	AS Y_TARGET_Q
				, 0 AS Y_SUM_Q
				, 0 AS Y_RATE 
				
	
	
		UPDATE A SET D_Y_2=ISNULL(B.D_Y_2,0)-ISNULL(C.D_Y_2,0)
				, D_Y_1=ISNULL(B.D_Y_1,0)-ISNULL(C.D_Y_1,0)
				, D_DAY=ISNULL(B.D_DAY,0)-ISNULL(C.D_DAY,0)
				, D_T_1=ISNULL(B.D_T_1,0)-ISNULL(C.D_T_1,0)
				, D_T_2=ISNULL(B.D_T_2,0)-ISNULL(C.D_T_2,0)
				, D_T_3=ISNULL(B.D_T_3,0)-ISNULL(C.D_T_3,0)
				, M_SUM_Q=ISNULL(B.M_SUM_Q,0)-ISNULL(C.M_SUM_Q,0)
				, Y_SUM_Q=ISNULL(B.Y_SUM_Q,0)-ISNULL(C.Y_SUM_Q,0)				
		FROM #TMP A
			 LEFT JOIN #TMP B ON B.GUBUN_CODE='10'
			 LEFT JOIN #TMP C ON C.GUBUN_CODE='20'
		WHERE A.GUBUN_CODE='30'
	
		SET NOCOUNT OFF
	
		SELECT GUBUN_CODE, GUBUN
			, [D_Y_2]
			, [D_Y_1]
			, [D_DAY]
			, [D_T_1]
			, [D_T_2]
			, [D_T_3]
			, M_TARGET_Q
			, M_SUM_Q
			, M_RATE
			, Y_TARGET_Q
			, Y_SUM_Q
			, Y_RATE
		FROM #TMP

	</select>
	<select id="s_etv120skrv_mitServiceImpl.selectContents" parameterType="Map" resultType="rMap">
		DECLARE   @COMP_CODE NVARCHAR(10) = #{S_COMP_CODE}
		SELECT TOP 3 A.TITLE, A.CONTENTS
		FROM BSA600T A
		WHERE A.COMP_CODE=@COMP_CODE
		AND CONVERT(VARCHAR(8), GETDATE(),112) BETWEEN A.FROM_DATE AND A.TO_DATE		
	</select>
	<select id="s_etv120skrv_mitServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		DECLARE   @COMP_CODE NVARCHAR(10) = #{S_COMP_CODE}
				, @DIV_CODE NVARCHAR(10) = #{S_DIV_CODE}
				, @BASE_DATE NVARCHAR(8) = CONVERT(VARCHAR(8), GETDATE(), 112)
				, @WORK_SHOP_CODE NVARCHAR(10) = 'W30'
		
		SET NOCOUNT ON
		
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP_LOT'))
			DROP TABLE #TMP_LOT
		
		SELECT ROW_NUMBER() OVER (ORDER BY A.LOT_NO) AS SEQ, A.LOT_NO, MAX(WORK_YN) AS WORK_YN
		INTO #TMP_LOT
		FROM (
				SELECT A.LOT_NO, 'Y' AS WORK_YN
				FROM PMR110T  A WITH (NOLOCK)
				WHERE A.COMP_CODE		= @COMP_CODE
				AND   A.DIV_CODE		= @DIV_CODE
				AND   A.PRODT_DATE		= @BASE_DATE
				AND   A.WORK_SHOP_CODE	= @WORK_SHOP_CODE
				UNION
				SELECT CASE WHEN A.WORK_SHOP_CODE IN ('W40','W50') THEN A.LOT_NO 
							WHEN A.WORK_SHOP_CODE = 'W30' THEN (SELECT TOP 1 LOT_NO FROM PMP100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND WKORD_NUM=A.TOP_WKORD_NUM AND LINE_END_YN='Y')
							ELSE A.WKORD_NUM END								AS LOT_NO
					 , CASE WHEN B.COMP_CODE IS NOT NULL THEN 'Y' ELSE 'N' END	AS WORK_YN
				FROM PMP100T A WITH (NOLOCK)
					 LEFT JOIN PMR100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM 
				WHERE A.COMP_CODE		= @COMP_CODE
				AND   A.DIV_CODE		= @DIV_CODE
				AND   A.LINE_END_YN		= 'Y'
				AND   A.PRODT_END_DATE	= @BASE_DATE
				AND   A.WORK_SHOP_CODE	= @WORK_SHOP_CODE
			) A
		GROUP BY A.LOT_NO
		
		DECLARE @LOOP INT = 0, @CNT INT
		SELECT @CNT=ISNULL(MAX(SEQ),0) FROM #TMP_LOT
		
		DECLARE @TBL TABLE (
			  LOT_NO_1	 NVARCHAR(20)
			, LOT_NO_2 	 NVARCHAR(20)
			, LOT_NO_3 	 NVARCHAR(20)
			, LOT_NO_4 	 NVARCHAR(20)
			, LOT_NO_5 	 NVARCHAR(20)
			, LOT_NO_6 	 NVARCHAR(20)
			, LOT_NO_7 	 NVARCHAR(20)
			, LOT_NO_8 	 NVARCHAR(20)
			, LOT_NO_9 	 NVARCHAR(20)
			, LOT_NO_10	 NVARCHAR(20)
			, LOT_NO_11	 NVARCHAR(20)
			, LOT_NO_12	 NVARCHAR(20)
			, WORK_YN_1  NVARCHAR(20)
			, WORK_YN_2  NVARCHAR(20)
			, WORK_YN_3  NVARCHAR(20)
			, WORK_YN_4  NVARCHAR(20)
			, WORK_YN_5  NVARCHAR(20)
			, WORK_YN_6  NVARCHAR(20)
			, WORK_YN_7  NVARCHAR(20)
			, WORK_YN_8  NVARCHAR(20)
			, WORK_YN_9  NVARCHAR(20)
			, WORK_YN_10 NVARCHAR(20)
			, WORK_YN_11 NVARCHAR(20)
			, WORK_YN_12 NVARCHAR(20)
		)
		
		
		WHILE @LOOP &lt; @CNT
		BEGIN
			INSERT INTO @TBL
			SELECT MAX(CASE SEQ WHEN @LOOP+1  THEN LOT_NO  ELSE '' END) AS LOT_NO_1 
				 , MAX(CASE SEQ WHEN @LOOP+2  THEN LOT_NO  ELSE '' END) AS LOT_NO_2 
				 , MAX(CASE SEQ WHEN @LOOP+3  THEN LOT_NO  ELSE '' END) AS LOT_NO_3 
				 , MAX(CASE SEQ WHEN @LOOP+4  THEN LOT_NO  ELSE '' END) AS LOT_NO_4 
				 , MAX(CASE SEQ WHEN @LOOP+5  THEN LOT_NO  ELSE '' END) AS LOT_NO_5 
				 , MAX(CASE SEQ WHEN @LOOP+6  THEN LOT_NO  ELSE '' END) AS LOT_NO_6 
				 , MAX(CASE SEQ WHEN @LOOP+7  THEN LOT_NO  ELSE '' END) AS LOT_NO_7 
				 , MAX(CASE SEQ WHEN @LOOP+8  THEN LOT_NO  ELSE '' END) AS LOT_NO_8 
				 , MAX(CASE SEQ WHEN @LOOP+9  THEN LOT_NO  ELSE '' END) AS LOT_NO_9 
				 , MAX(CASE SEQ WHEN @LOOP+10 THEN LOT_NO  ELSE '' END) AS LOT_NO_10
				 , MAX(CASE SEQ WHEN @LOOP+11 THEN LOT_NO  ELSE '' END) AS LOT_NO_11
				 , MAX(CASE SEQ WHEN @LOOP+12 THEN LOT_NO  ELSE '' END) AS LOT_NO_12
				 , MAX(CASE SEQ WHEN @LOOP+1  THEN WORK_YN ELSE '' END) AS WORK_YN_1 
				 , MAX(CASE SEQ WHEN @LOOP+2  THEN WORK_YN ELSE '' END) AS WORK_YN_2 
				 , MAX(CASE SEQ WHEN @LOOP+3  THEN WORK_YN ELSE '' END) AS WORK_YN_3 
				 , MAX(CASE SEQ WHEN @LOOP+4  THEN WORK_YN ELSE '' END) AS WORK_YN_4 
				 , MAX(CASE SEQ WHEN @LOOP+5  THEN WORK_YN ELSE '' END) AS WORK_YN_5 
				 , MAX(CASE SEQ WHEN @LOOP+6  THEN WORK_YN ELSE '' END) AS WORK_YN_6 
				 , MAX(CASE SEQ WHEN @LOOP+7  THEN WORK_YN ELSE '' END) AS WORK_YN_7 
				 , MAX(CASE SEQ WHEN @LOOP+8  THEN WORK_YN ELSE '' END) AS WORK_YN_8 
				 , MAX(CASE SEQ WHEN @LOOP+9  THEN WORK_YN ELSE '' END) AS WORK_YN_9 
				 , MAX(CASE SEQ WHEN @LOOP+10 THEN WORK_YN ELSE '' END) AS WORK_YN_10
				 , MAX(CASE SEQ WHEN @LOOP+11 THEN WORK_YN ELSE '' END) AS WORK_YN_11
				 , MAX(CASE SEQ WHEN @LOOP+12 THEN WORK_YN ELSE '' END) AS WORK_YN_12
			FROM #TMP_LOT
		
			SET @LOOP = @LOOP + 12
		END
		
		SET NOCOUNT OFF
		
		SELECT * FROM @TBL
	</select>	
	
	<select id="s_etv120skrv_mitServiceImpl.selectNextPgmId" parameterType="Map" resultType="java.lang.String">
		DECLARE
			  @PAGE_CONTROL_YN	NVARCHAR(10)
			, @THIS_PGM_ID		NVARCHAR(100)	= #{PGM_ID}
			, @NEXT_PGM_ID		NVARCHAR(100)
		
		IF EXISTS (	SELECT *
					  FROM BSA100T
					 WHERE COMP_CODE	= #{S_COMP_CODE}
					   AND MAIN_CODE	= 'B708'
					   AND SUB_CODE		= 'A'	)
		BEGIN
			SELECT @PAGE_CONTROL_YN = ISNULL(REF_CODE2, '')
			  FROM BSA100T
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND MAIN_CODE	= 'B708'
			   AND SUB_CODE		= 'A'
		
			IF @PAGE_CONTROL_YN = 'Y'
			BEGIN
				SELECT TOP 1
					   @NEXT_PGM_ID	= NEXT_PGM_ID
				  FROM (
						SELECT 1			AS SORT_ORDER
							 , SUB_CODE
							 , REF_CODE3	AS NEXT_PGM_ID
						  FROM BSA100T
						 WHERE COMP_CODE	= #{S_COMP_CODE}
						   AND MAIN_CODE	= 'B708'
						   AND SUB_CODE		&gt; (	SELECT SUB_CODE
												  FROM BSA100T
												 WHERE COMP_CODE	= #{S_COMP_CODE}
												   AND MAIN_CODE	= 'B708'
												   AND REF_CODE1	= @THIS_PGM_ID	)
						   AND SUB_CODE NOT IN ('$', 'A')
						   AND ISNULL(REF_CODE1, '') != ''
		
						UNION ALL
						
						SELECT 9			AS SORT_ORDER
							 , SUB_CODE
							 , REF_CODE3	AS NEXT_PGM_ID
						  FROM BSA100T
						 WHERE COMP_CODE	= #{S_COMP_CODE}
						   AND MAIN_CODE	= 'B708'
						   AND SUB_CODE		&lt; (	SELECT SUB_CODE
												  FROM BSA100T
												 WHERE COMP_CODE	= #{S_COMP_CODE}
												   AND MAIN_CODE	= 'B708'
												   AND REF_CODE1	= @THIS_PGM_ID	)
						   AND SUB_CODE NOT IN ('$', 'A')
						   AND ISNULL(REF_CODE1, '') != ''
					  ) A
				 ORDER BY SORT_ORDER
					 , SUB_CODE
			END
			ELSE
			BEGIN
				SET @NEXT_PGM_ID	= ''
			END
		END
		ELSE
		BEGIN
			SET @NEXT_PGM_ID	= ''
		END
		
		SELECT ISNULL(@NEXT_PGM_ID, '')	AS NEXT_PGM_ID
	</select>	
	
	<select id="s_etv120skrv_mitServiceImpl.selectNextPgmInterval" parameterType="Map" resultType="java.lang.Integer">
		DECLARE
			  @INTERVAL		NUMERIC(10, 0)
		
		IF EXISTS (	SELECT *
					  FROM BSA100T
					 WHERE COMP_CODE	= #{S_COMP_CODE}
					   AND MAIN_CODE	= 'B708'
					   AND SUB_CODE		= 'A'	)
		BEGIN
			SELECT @INTERVAL = CASE WHEN ISNULL(REF_CODE4, '') = '' THEN 30000
									ELSE CONVERT(NUMERIC(10, 0), REF_CODE4)
							   END
			  FROM BSA100T
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND MAIN_CODE	= 'B708'
			   AND SUB_CODE		= 'A'
		END
		ELSE
		BEGIN
			SET @INTERVAL	= 30000
		END
		
		SELECT ISNULL(@INTERVAL, 30000)	AS INTERVAL
	</select>
	
	<select id="s_etv120skrv_mitServiceImpl.selectCaldate" parameterType="Map" resultType="java.lang.String">
		DECLARE @COMP_CODE NVARCHAR(10)
			  , @DIV_CODE  NVARCHAR(08)
			  , @BASE_DATE NVARCHAR(08)
			  
        SET @COMP_CODE =#{S_COMP_CODE}
		SET @BASE_DATE = CONVERT(NVARCHAR(8), GETDATE(), 112)			  
		
		CREATE TABLE #CAL_TABLE
		(
			CAL_DATE NVARCHAR(08)
		  , WEEK_DAY NUMERIC(1, 0)
		)
		CREATE TABLE #CAL_TABLE1
		(
			CAL_DATE NVARCHAR(08)
		  , WEEK_DAY NUMERIC(1, 0)
		)
		
		CREATE TABLE #CAL_TABLE2
		(
			CAL_DATE NVARCHAR(08)
		  , WEEK_DAY NUMERIC(1, 0)
		)
		
		
		INSERT INTO #CAL_TABLE1
		SELECT CAL_DATE, WEEK_DAY
		  FROM BCM400T
		 WHERE COMP_CODE = @COMP_CODE
		   AND CAL_TYPE = '4'
		   AND CAL_DATE <![CDATA[>=]]> CONVERT(VARCHAR(8),DATEADD(DAY, -3, GETDATE()), 112)
		   AND CAL_DATE <![CDATA[<=]]> @BASE_DATE
		
		INSERT INTO #CAL_TABLE2
		SELECT CAL_DATE, WEEK_DAY
		  FROM BCM400T
		 WHERE COMP_CODE = @COMP_CODE
		   AND CAL_TYPE = '4'
		   AND CAL_DATE <![CDATA[>]]>  @BASE_DATE
		   AND CAL_DATE <![CDATA[<=]]> CONVERT(VARCHAR(8),DATEADD(DAY, 4, GETDATE()), 112)
		
		INSERT INTO #CAL_TABLE
		SELECT TOP 3 CAL_DATE, WEEK_DAY FROM #CAL_TABLE1 WHERE WEEK_DAY <![CDATA[>]]> 1 ORDER BY CAL_DATE DESC
		
		INSERT INTO #CAL_TABLE
		SELECT TOP 3 CAL_DATE, WEEK_DAY FROM #CAL_TABLE2 WHERE WEEK_DAY <![CDATA[>]]> 1
		

		SELECT (SUBSTRING(CAL_DATE, 5,2) + '/' + SUBSTRING(CAL_DATE, 7,2)
		      + CASE WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '2' THEN '(월)' 
			         WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '3' THEN '(화)'
					 WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '4' THEN '(수)'
					 WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '5' THEN '(목)'
					 WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '6' THEN '(금)'
					 WHEN CONVERT(NVARCHAR(01), WEEK_DAY) = '7' THEN '(토)'
					 ELSE ''
			    END) AS CAL_DATE	
		  FROM  #CAL_TABLE ORDER BY CAL_DATE
		
		
		DROP TABLE #CAL_TABLE
		DROP TABLE #CAL_TABLE1
		DROP TABLE #CAL_TABLE2


	</select>	
		
</mapper>