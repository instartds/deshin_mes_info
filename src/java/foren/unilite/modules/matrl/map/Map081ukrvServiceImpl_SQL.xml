<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="map081ukrvServiceImpl">
					
	<select id="map081ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
BEGIN
   SET NOCOUNT ON
   SET ARITHABORT ON

/* 거래처별 지불예정명세서*/
   DECLARE @COMP_CODE NVARCHAR(20) 
          ,@DIV_CODE  NVARCHAR(10) 
          ,@FR_DATE   NVARCHAR(8) 
          ,@TO_DATE   NVARCHAR(8) 
          ,@TODAY     NVARCHAR(8)
          ,@CUSTOM_CODE NVARCHAR(20)  
          ,@CUSTOM_NAME NVARCHAR(50) 
          ,@CUSTOM_TYPE NVARCHAR(10) 
          ,@COLLECT_DAY NVARCHAR(2)  
          ,@AGENT_TYPE  NVARCHAR(8) 
          ,@RECEIPT_DAY NVARCHAR(2)
          ,@LastYYYYMM  NVARCHAR(6)
          ,@DEPT_CODE NVARCHAR(8)
          /*,@WH_CODE  NVARCHAR(8)*/
    
          ,@BasisMonth             NVARCHAR(06)  -- 2015.7.24 추가
          ,@MaxMonth               NVARCHAR(06)  -- 2015.7.24 추가
          ,@StMonth                NVARCHAR(02)  -- 2015.7.24 추가
          ,@QRY_YEAR               NVARCHAR(04)  -- 2015.7.24 추가

   SET @COMP_CODE   = #{S_COMP_CODE}
   SET @DIV_CODE    = #{DIV_CODE}
   SET @FR_DATE     = #{FR_DATE}
   SET @TO_DATE     = #{TO_DATE} 
   SET @TODAY       = CONVERT(VARCHAR(8), GETDATE(), 112)
   
   SET @CUSTOM_CODE = #{CUSTOM_CODE}
   SET @CUSTOM_NAME = #{CUSTOM_NAME}
   
   SET @CUSTOM_TYPE = ''
   
   SET @COLLECT_DAY = #{COLLECT_DAY}  
   SET @AGENT_TYPE  = #{AGENT_TYPE}
   SET @RECEIPT_DAY = #{RECEIPT_DAY}
   SET @DEPT_CODE   = #{DEPT_CODE}
   
    
   SELECT  @StMonth = SUBSTRING(FN_DATE,5,2)
   FROM    BOR100T WITH (NOLOCK)
   WHERE   COMP_CODE = @COMP_CODE
   
   SELECT  @BasisMonth = MAX(A.AC_DATE)
   FROM    AGB200T A  WITH (NOLOCK)
   WHERE   A.COMP_CODE  = @COMP_CODE
   AND     A.AC_DATE   &lt;= @QRY_YEAR + @StMonth
   --추가
   AND  LEN(AC_DATE) = 6
  
   SET @BasisMonth = SUBSTRING(ISNULL(@BasisMonth, '190001'), 1, 6)

/* 최종 재고마감월 계산 */
   SELECT @LastYYYYMM = MAX(BASIS_YYYYMM)
   FROM   BIV250T WITH (NOLOCK)
   WHERE  COMP_CODE    = @COMP_CODE
   AND    DIV_CODE     = @DIV_CODE
   AND    BASIS_YYYYMM &lt; CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @FR_DATE), 112)
   AND    SUM_TYPE     = 'C'
   AND  ((CUSTOM_CODE  = @CUSTOM_CODE AND @CUSTOM_CODE != '') OR (@CUSTOM_CODE = ''))
  /*AND  ((WH_CODE    = @WH_CODE AND @WH_CODE != '') OR (@WH_CODE = ''))*/
     
   SET @LastYYYYMM = ISNULL(@LastYYYYMM, SUBSTRING(@FR_DATE, 1, 6))

   SELECT 
          A.COMP_CODE   AS COMP_CODE  
        , A.DIV_CODE    AS DIV_CODE 
        , A.CUSTOM_CODE
        , A.CUSTOM_NAME 
        , ISNULL(SUM(IWAL_IN_AMT_I),0.0) IWAL_IN_AMT_I            /* 매입이월잔액 */
        , SUM(INPUT_CR_AMT_I) IN_CR_AMT_I               /* 매입액*/
        , SUM(INPUT_DR_AMT_I) IN_DR_AMT_I                  /* 지불액*/
        , SUM(SALE_AMT_I) SALE_AMT_I                   /* 매출액*/
        , ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) IN_JAN_AMT_I /* 기말잔액*/
        , SUM(END_STOCK_I)  END_STOCK_I                /* 기말재고액*/
        
       
        , ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I) SPACE_STOCK_I  /* 공간금액(기말잔액-기말재고액)*/
      
        --, ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I) SPACE_STOCK_I  /* 공간금액(기말잔액-기말재고액)*/
   
        , SUM(TODAY_IN_AMT_I) TODAY_IN_AMT_I              /* 현재잔액*/
        <if test="FLOOR == null">
        ,CASE WHEN A.RECEIPT_DAY = '3' THEN SUM(INPUT_CR_AMT_I)
        	 WHEN A.RECEIPT_DAY = '1' AND A.AGENT_TYPE != '3' THEN ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I)
        	 ELSE (ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I)) * 0.9
        	 END AS SC_STOCK_I 
         </if>
         
         <if test="FLOOR == &quot;on&quot;">
        ,CASE WHEN A.RECEIPT_DAY = '3' THEN FLOOR((SUM(INPUT_CR_AMT_I))/10000)*10000
        	 WHEN A.RECEIPT_DAY = '1' AND A.AGENT_TYPE != '3' THEN FLOOR((ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I))/10000)*10000
        	 ELSE FLOOR(((ISNULL(SUM(IWAL_IN_AMT_I),0.0) + SUM(INPUT_CR_AMT_I) - SUM(INPUT_DR_AMT_I) - SUM(END_STOCK_I)) * 0.9)/10000)*10000
        	 END AS SC_STOCK_I 
         </if>
         

		, A.COLLECT_DAY
		, A.RECEIPT_DAY
		, A.BILL_TYPE
		, A.TOP_NAME
		, A.ADDR1
		, C.BANK_CODE
		, D.CUSTOM_NAME AS BANK_NAME
		, UNILITE.FNCIPHERDECRYPT(C.BANKBOOK_NUM, '') AS BANKBOOK_NUM
		, C.BANKBOOK_NAME
		, C.COMPANY_NUM
		, A.TELEPHON
		, A.TOT_CREDIT_AMT
		, B.PAY_AMT
		, B.PAY_AMT AS COMPARE_PAY
		, B.PAY_YYYYMM AS PAY_YYYYMM_CHECK
		, B.EX_DATE
		, CASE WHEN B.PAY_AMT IS NULL AND B.PAY_YYYYMM IS NULL THEN '미확정'
			   WHEN B.PAY_AMT IS NOT NULL AND B.PAY_YYYYMM IS NOT NULL THEN '확정'
		  END CHECK_NAME
		, CASE WHEN B.PAY_AMT IS NULL AND B.PAY_YYYYMM IS NULL THEN '미확정'
		   WHEN B.PAY_AMT IS NOT NULL AND B.PAY_YYYYMM IS NOT NULL THEN '확정'
		END CHECK_NAME_DUMMY
		, A.AGENT_TYPE
    
    FROM ( 
        SELECT  COMP_CODE, DIV_CODE
				, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_TYPE 
				, 0.0000 IWAL_IN_AMT_I
				, 0.0000 TODAY_IN_AMT_I
				, SUM(INPUT_CR_AMT_I) INPUT_CR_AMT_I
				, 0.0000 SALE_AMT_I
				, SUM(INPUT_DR_AMT_I) INPUT_DR_AMT_I 
				, 0.0000 END_STOCK_I
				, COLLECT_DAY
				, RECEIPT_DAY
				, BILL_TYPE
				, TOP_NAME
				, ADDR1
				, TELEPHON
				, TOT_CREDIT_AMT
				, AGENT_TYPE
        FROM    ( 
            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , B.CUSTOM_TYPE
                  , B.CUSTOM_NAME
                  , CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1 
                         WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
                    END                        AS CUSTOM_CODE
                  , ISNULL(SUM(A.DR_AMT_I),0.0) AS INPUT_DR_AMT_I 
                  , 0.0000 SALE_AMT_I
                  , ISNULL(SUM(A.CR_AMT_I),0.0) AS INPUT_CR_AMT_I 
                  , ISNULL(B.COLLECT_DAY   , '') AS COLLECT_DAY
                  , ISNULL(B.RECEIPT_DAY   , '') AS RECEIPT_DAY
                  , ISNULL(B.BILL_TYPE     , '') AS BILL_TYPE
                  , ISNULL(B.TOP_NAME      , '') AS TOP_NAME
                  , ISNULL(B.ADDR1         , '') AS ADDR1
                  , ISNULL(B.TELEPHON      , '') AS TELEPHON
                  , ISNULL(B.TOT_CREDIT_AMT,  0) AS TOT_CREDIT_AMT
                  , B.AGENT_TYPE
            FROM               AGB200T A WITH (NOLOCK) 
                    LEFT  JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
                                                      AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
                                                                               WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2
                                                                          END
                    LEFT  JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                      AND C.TYPE_LEVEL  = A.DIV_CODE
                                                      AND C.TREE_CODE   = A.DEPT_CODE
                    INNER JOIN ABA400T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                      AND D.ACCNT       = A.ACCNT
                                                      AND D.ACCNT_SPEC  = '81'
           WHERE   A.COMP_CODE      = @COMP_CODE 
             AND   A.DIV_CODE       = @DIV_CODE 
             AND   A.AC_DATE       &gt;= @FR_DATE 
             AND   A.AC_DATE       &lt;= @TO_DATE
             AND   A.INPUT_PATH    != 'ZZ' 
             AND ((B.CUSTOM_CODE LIKE       @CUSTOM_CODE + '%' AND @CUSTOM_CODE != '') OR @CUSTOM_CODE = '') 
             AND ((B.CUSTOM_NAME LIKE '%' + @CUSTOM_NAME + '%' AND @CUSTOM_NAME != '') OR @CUSTOM_NAME = '') 
             AND ((B.AGENT_TYPE  LIKE '%' + @AGENT_TYPE  + '%' AND @AGENT_TYPE != '')  OR @AGENT_TYPE = '')  /* 고객분류*/
             AND ((B.RECEIPT_DAY LIKE '%' + @RECEIPT_DAY + '%' AND @RECEIPT_DAY != '') OR @RECEIPT_DAY = '') /* 결제조건*/
           --  AND ((B.COLLECT_DAY = @COLLECT_DAY AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
             AND ((B.COLLECT_DAY LIKE '%' + @COLLECT_DAY + '%' AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
             AND LEN(A.AC_DATE) != 6 
      
   
            GROUP BY A.COMP_CODE   , A.DIV_CODE  , B.CUSTOM_TYPE, B.CUSTOM_NAME, A.BOOK_CODE1, A.BOOK_CODE2, A.BOOK_DATA1, A.BOOK_DATA2 , B.COLLECT_DAY
                   , B.RECEIPT_DAY , B.BILL_TYPE , B.TOP_NAME   , B.ADDR1      , B.TELEPHON  , B.TOT_CREDIT_AMT, B.AGENT_TYPE
            HAVING SUM(A.DR_AMT_I) != 0 OR SUM(A.CR_AMT_I) != 0
            ) A 
        GROUP BY A.COMP_CODE    , A.DIV_CODE  , A.CUSTOM_CODE, A.CUSTOM_NAME, A.CUSTOM_TYPE , A.COLLECT_DAY
               , A.RECEIPT_DAY  , A.BILL_TYPE , A.TOP_NAME   , A.ADDR1      , A.TELEPHON    , A.TOT_CREDIT_AMT, A.AGENT_TYPE
     
        UNION ALL 
     
        SELECT  COMP_CODE, DIV_CODE, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_TYPE    /* 이월매입잔액 */
				, SUM(IWAL_INPUT_AMT_I) IWAL_INPUT_AMT_I
				, 0.0000 TODAY_IN_AMT_I
				, 0.0000 INPUT_CR_AMT_I
				, 0.0000 SALE_AMT_I
				, 0.0000 INPUT_DR_AMT_I 
				, 0.0000 END_STOCK_I
				, COLLECT_DAY
				, RECEIPT_DAY
				, BILL_TYPE
				, TOP_NAME
				, ADDR1
				, TELEPHON
				, TOT_CREDIT_AMT
				, AGENT_TYPE
        FROM    ( 
            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , B.CUSTOM_TYPE
                  , B.CUSTOM_NAME 
                  , CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1 
                         WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
                    END                        AS CUSTOM_CODE
                  , ISNULL(SUM(A.CR_AMT_I) - SUM(A.DR_AMT_I),0.0) AS IWAL_INPUT_AMT_I                /* '251' 외상매입금 이월잔액*/
                  , ISNULL(B.COLLECT_DAY   , '') AS COLLECT_DAY
                  , ISNULL(B.RECEIPT_DAY   , '') AS RECEIPT_DAY
                  , ISNULL(B.BILL_TYPE     , '') AS BILL_TYPE
                  , ISNULL(B.TOP_NAME      , '') AS TOP_NAME
                  , ISNULL(B.ADDR1         , '') AS ADDR1
                  , ISNULL(B.TELEPHON      , '') AS TELEPHON
                  , ISNULL(B.TOT_CREDIT_AMT,  0) AS TOT_CREDIT_AMT
                  , B.AGENT_TYPE
            FROM               AGB200T A WITH (NOLOCK) 
                    LEFT  JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
                                                      AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
                                                                               WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2
                                                                          END
                    LEFT  JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                      AND C.TYPE_LEVEL  = A.DIV_CODE
                                                      AND C.TREE_CODE   = A.DEPT_CODE
                    INNER JOIN ABA400T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                      AND D.ACCNT       = A.ACCNT
                                                      AND D.ACCNT_SPEC  = '81'
            WHERE   A.COMP_CODE      = @COMP_CODE 
              AND   A.DIV_CODE       = @DIV_CODE 
              AND   A.AC_DATE       &gt;= @BasisMonth           -- 2015.7.24 추가
              AND   A.AC_DATE       &lt;  @FR_DATE              -- 2015.7.24 추가
              AND   A.INPUT_PATH    != 'ZZ' 
              AND ((B.CUSTOM_CODE LIKE       @CUSTOM_CODE + '%' AND @CUSTOM_CODE != '') OR @CUSTOM_CODE = '') 
              AND ((B.CUSTOM_NAME LIKE '%' + @CUSTOM_NAME + '%' AND @CUSTOM_NAME != '') OR @CUSTOM_NAME = '') 
              AND ((B.AGENT_TYPE  LIKE '%' + @AGENT_TYPE  + '%' AND @AGENT_TYPE != '')  OR @AGENT_TYPE = '')  /* 고객분류*/
              AND ((B.RECEIPT_DAY LIKE '%' + @RECEIPT_DAY + '%' AND @RECEIPT_DAY != '') OR @RECEIPT_DAY = '') /* 결제조건*/
              --AND ((B.COLLECT_DAY = @COLLECT_DAY AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
              AND ((B.COLLECT_DAY LIKE '%' + @COLLECT_DAY + '%' AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/


            GROUP BY A.COMP_CODE   , A.DIV_CODE  , B.CUSTOM_TYPE, B.CUSTOM_NAME, A.BOOK_CODE1, A.BOOK_CODE2, A.BOOK_DATA1, A.BOOK_DATA2 , B.COLLECT_DAY
                   , B.RECEIPT_DAY , B.BILL_TYPE , B.TOP_NAME   , B.ADDR1      , B.TELEPHON  , B.TOT_CREDIT_AMT, B.AGENT_TYPE
            HAVING SUM(A.DR_AMT_I) != 0 OR SUM(A.CR_AMT_I) != 0
           ) A 
        GROUP BY A.COMP_CODE    , A.DIV_CODE  , A.CUSTOM_CODE, A.CUSTOM_NAME, A.CUSTOM_TYPE , A.COLLECT_DAY
               , A.RECEIPT_DAY  , A.BILL_TYPE , A.TOP_NAME   , A.ADDR1      , A.TELEPHON    , A.TOT_CREDIT_AMT   , A.AGENT_TYPE      
         
         UNION ALL 
     
        SELECT  COMP_CODE, DIV_CODE, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_TYPE,    /* 매출액 */
				 0.0000 IWAL_INPUT_AMT_I
			    , 0.0000 TODAY_IN_AMT_I
			    , 0.0000 INPUT_CR_AMT_I
			    , SUM(SALE_AMT) SALE_AMT_I
			    , 0.0000 INPUT_DR_AMT_I 
			    , 0.0000 END_STOCK_I
				, COLLECT_DAY
				, RECEIPT_DAY
				, BILL_TYPE
				, TOP_NAME
				, ADDR1
				, TELEPHON
				, TOT_CREDIT_AMT
				, AGENT_TYPE
        FROM    ( 
            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , C.CUSTOM_TYPE
                  , C.CUSTOM_NAME
                  , B.PURCHASE_CUSTOM_CODE AS CUSTOM_CODE 
                  , SUM(ISNULL(B.SALE_AMT_O, 0) + ISNULL(B.TAX_AMT_O, 0)) AS SALE_AMT                /* 매출액*/
                  , ISNULL(C.COLLECT_DAY   , '') AS COLLECT_DAY
                  , ISNULL(C.RECEIPT_DAY   , '') AS RECEIPT_DAY
                  , ISNULL(C.BILL_TYPE     , '') AS BILL_TYPE
                  , ISNULL(C.TOP_NAME      , '') AS TOP_NAME
                  , ISNULL(C.ADDR1         , '') AS ADDR1
                  , ISNULL(C.TELEPHON      , '') AS TELEPHON
                  , ISNULL(C.TOT_CREDIT_AMT,  0) AS TOT_CREDIT_AMT
                  , C.AGENT_TYPE
            FROM               SSA100T A WITH (NOLOCK) 
                    INNER JOIN SSA110T B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                     AND B.DIV_CODE     = A.DIV_CODE  
                                                     AND B.BILL_NUM     = A.BILL_NUM
                    LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE 
                                                      AND C.CUSTOM_CODE = B.PURCHASE_CUSTOM_CODE
                    LEFT  JOIN BSA210T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                      AND D.TYPE_LEVEL  = A.DIV_CODE
                                                      AND D.TREE_CODE   = A.DEPT_CODE
            WHERE   A.COMP_CODE      = @COMP_CODE 
              AND   A.DIV_CODE       = @DIV_CODE 
              AND   A.SALE_DATE     &gt;= @FR_DATE
              AND   A.SALE_DATE     &lt;= @TO_DATE
              AND ((B.PURCHASE_CUSTOM_CODE LIKE @CUSTOM_CODE + '%' AND @CUSTOM_CODE != '') OR @CUSTOM_CODE = '') 
              AND ((C.CUSTOM_NAME LIKE '%' + @CUSTOM_NAME + '%' AND @CUSTOM_NAME != '') OR @CUSTOM_NAME = '') 
              AND ((C.COLLECT_DAY LIKE '%' + @COLLECT_DAY + '%' AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
              AND ((C.AGENT_TYPE  LIKE '%' + @AGENT_TYPE  + '%' AND @AGENT_TYPE != '')  OR @AGENT_TYPE = '')  /* 고객분류*/
              AND ((C.RECEIPT_DAY LIKE '%' + @RECEIPT_DAY + '%' AND @RECEIPT_DAY != '') OR @RECEIPT_DAY = '') /* 결제조건*/


            GROUP BY A.COMP_CODE   , A.DIV_CODE  , B.PURCHASE_CUSTOM_CODE, C.CUSTOM_NAME, C.CUSTOM_TYPE,  C.COLLECT_DAY
                   , C.RECEIPT_DAY , C.BILL_TYPE , C.TOP_NAME            , C.ADDR1      , C.TELEPHON   , C.TOT_CREDIT_AMT, C.AGENT_TYPE
            HAVING SUM(B.SALE_AMT_O) != 0 OR SUM(B.TAX_AMT_O) != 0
           ) A 
        GROUP BY A.COMP_CODE    , A.DIV_CODE  , A.CUSTOM_CODE, A.CUSTOM_NAME, A.CUSTOM_TYPE , A.COLLECT_DAY
               , A.RECEIPT_DAY  , A.BILL_TYPE , A.TOP_NAME   , A.ADDR1      , A.TELEPHON    , A.TOT_CREDIT_AMT  , A.AGENT_TYPE  
    
        UNION ALL 
     
        SELECT    COMP_CODE, DIV_CODE, CUSTOM_CODE, CUSTOM_NAME, CUSTOM_TYPE,    /* 현재잔액 */
				  0.0000 IWAL_IN_AMT_I
			    , SUM(TODAY_INPUT_AMT_I) TODAY_INPUT_AMT_I
			    , 0.0000 INPUT_CR_AMT_I
			    , 0.0000 SALE_AMT_I
			    , 0.0000 INPUT_DR_AMT_I 
			    , 0.0000 END_STOCK_I
				, COLLECT_DAY
				, RECEIPT_DAY
				, BILL_TYPE
				, TOP_NAME
				, ADDR1
				, TELEPHON
				, TOT_CREDIT_AMT
				, AGENT_TYPE
        FROM    ( 
            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , B.CUSTOM_TYPE
                  , B.CUSTOM_NAME
                  , CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1 
                         WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
                    END                        AS CUSTOM_CODE
                  , ISNULL(SUM(A.CR_AMT_I) - SUM(A.DR_AMT_I),0.0) AS TODAY_INPUT_AMT_I                /* '251' 외상매입금 잔액*/
                  , ISNULL(B.COLLECT_DAY   , '') AS COLLECT_DAY
                  , ISNULL(B.RECEIPT_DAY   , '') AS RECEIPT_DAY
                  , ISNULL(B.BILL_TYPE     , '') AS BILL_TYPE
                  , ISNULL(B.TOP_NAME      , '') AS TOP_NAME
                  , ISNULL(B.ADDR1         , '') AS ADDR1
                  , ISNULL(B.TELEPHON      , '') AS TELEPHON
                  , ISNULL(B.TOT_CREDIT_AMT,  0) AS TOT_CREDIT_AMT
                  , B.AGENT_TYPE
            FROM               AGB200T A WITH (NOLOCK) 
                    LEFT  JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
                                                      AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
                                                                               WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2
                                                                          END
                    LEFT  JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                      AND C.TYPE_LEVEL  = A.DIV_CODE
                                                      AND C.TREE_CODE   = A.DEPT_CODE
                    INNER JOIN ABA400T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                      AND D.ACCNT       = A.ACCNT
                                                      AND D.ACCNT_SPEC  = '81'  
            WHERE   A.COMP_CODE      = @COMP_CODE 
              AND   A.DIV_CODE       = @DIV_CODE 
              AND   A.AC_DATE       &gt;= @BasisMonth           -- 2015.7.24 추가
              AND   A.AC_DATE       &lt; @FR_DATE            	-- 2015.7.24 추가
              AND   A.INPUT_PATH    != 'ZZ' 
              AND ((B.CUSTOM_CODE LIKE       @CUSTOM_CODE + '%' AND @CUSTOM_CODE != '') OR @CUSTOM_CODE = '') 
              AND ((B.CUSTOM_NAME LIKE '%' + @CUSTOM_NAME + '%' AND @CUSTOM_NAME != '') OR @CUSTOM_NAME = '') 
              AND ((B.AGENT_TYPE  LIKE '%' + @AGENT_TYPE  + '%' AND @AGENT_TYPE != '')  OR @AGENT_TYPE = '')  /* 고객분류*/
              AND ((B.RECEIPT_DAY LIKE '%' + @RECEIPT_DAY + '%' AND @RECEIPT_DAY != '') OR @RECEIPT_DAY = '') /* 결제조건*/
              --AND ((B.COLLECT_DAY = @COLLECT_DAY AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
              AND ((B.COLLECT_DAY LIKE '%' + @COLLECT_DAY + '%' AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
      
      
            GROUP BY A.COMP_CODE   , A.DIV_CODE  , B.CUSTOM_TYPE, B.CUSTOM_NAME, A.BOOK_CODE1, A.BOOK_CODE2, A.BOOK_DATA1, A.BOOK_DATA2 , B.COLLECT_DAY
                   , B.RECEIPT_DAY , B.BILL_TYPE , B.TOP_NAME   , B.ADDR1      , B.TELEPHON  , B.TOT_CREDIT_AMT, B.AGENT_TYPE
            HAVING (SUM(A.CR_AMT_I) != 0 OR SUM(A.DR_AMT_I) != 0)
          ) A 
        GROUP BY A.COMP_CODE    , A.DIV_CODE  , A.CUSTOM_CODE, A.CUSTOM_NAME, A.CUSTOM_TYPE , A.COLLECT_DAY
               , A.RECEIPT_DAY  , A.BILL_TYPE , A.TOP_NAME   , A.ADDR1      , A.TELEPHON    , A.TOT_CREDIT_AMT, A.AGENT_TYPE
  
        UNION ALL 
  
  
        SELECT    A.COMP_CODE
                , A.DIV_CODE
				, A.CUSTOM_CODE
				, C.CUSTOM_NAME
				, C.CUSTOM_TYPE
				, 0.0000 IWAL_IN_AMT_I
				, 0.0000 TODAY_IN_AMT_I
				, 0.0000 INPUT_CR_AMT_I
				, 0.0000 SALE_AMT_I
				, 0.0000 INPUT_DR_AMT_I
				, SUM(ISNULL(A.STOCK_I, 0)) AS END_STOCK_I
				, ISNULL(C.COLLECT_DAY, '')
				, ISNULL(C. RECEIPT_DAY, '')
				, ISNULL(C. BILL_TYPE, '')
				, ISNULL(C. TOP_NAME, '')
				, ISNULL(C. ADDR1, '')
				, ISNULL(C. TELEPHON, '')
				, ISNULL(C. TOT_CREDIT_AMT,0)
				, C.AGENT_TYPE
		FROM				( 
							SELECT  A.COMP_CODE
								  , A.DIV_CODE
								  , A.CUSTOM_CODE
								  , SUM(ISNULL(A.STOCK_I, 0)) AS STOCK_I
							FROM                BIV400T  A  WITH (NOLOCK)
									                    
							WHERE   A.COMP_CODE      = @COMP_CODE 
							  AND   A.DIV_CODE       = @DIV_CODE
							GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE
							) A
				
				LEFT JOIN BCM100T C WITH(NOLOCK) ON  A.COMP_CODE    = C.COMP_CODE  
						                        AND  A.CUSTOM_CODE  = C.CUSTOM_CODE
	    WHERE   A.COMP_CODE      = @COMP_CODE
		  AND   A.DIV_CODE       = @DIV_CODE
		  AND ((A.CUSTOM_CODE LIKE       @CUSTOM_CODE + '%' AND @CUSTOM_CODE != '') OR @CUSTOM_CODE = '') 
		  AND ((C.CUSTOM_NAME LIKE '%' + @CUSTOM_NAME + '%' AND @CUSTOM_NAME != '') OR @CUSTOM_NAME = '')
		  AND ((C.AGENT_TYPE  LIKE '%' + @AGENT_TYPE  + '%' AND @AGENT_TYPE != '')  OR @AGENT_TYPE = '')  /* 고객분류*/
		  AND ((C.RECEIPT_DAY LIKE '%' + @RECEIPT_DAY + '%' AND @RECEIPT_DAY != '') OR @RECEIPT_DAY = '') /*결제조건*/
		  --AND ((C.COLLECT_DAY = @COLLECT_DAY AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
		  AND ((C.COLLECT_DAY LIKE '%' + @COLLECT_DAY + '%' AND @COLLECT_DAY != '') OR @COLLECT_DAY = '') /* 지불일자*/
               
        GROUP BY A.COMP_CODE   , A.DIV_CODE  , A.CUSTOM_CODE, C.CUSTOM_NAME, C.CUSTOM_TYPE, C.COLLECT_DAY
               , C.RECEIPT_DAY , C.BILL_TYPE , C.TOP_NAME   , C.ADDR1      , C.TELEPHON   , C.TOT_CREDIT_AMT, C.AGENT_TYPE
        HAVING SUM(ISNULL(A.STOCK_I, 0)) != 0
      ) A 
      LEFT JOIN MAP050T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
      								AND A.DIV_CODE = B.DIV_CODE
      								AND A.CUSTOM_CODE = B.CUSTOM_CODE
      								AND A.COLLECT_DAY LIKE '%' + #{COLLECT_DAY} + '%'
      								AND B.COLLECT_DAY LIKE '%' + #{COLLECT_DAY} + '%'
      								AND B.PAY_YYYYMM = #{PAY_YYYYMM}
      LEFT JOIN BCM100T C WITH(NOLOCK) ON A.CUSTOM_CODE = C.CUSTOM_CODE
      								AND A.COMP_CODE = C.COMP_CODE    
	  LEFT JOIN BCM100T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
									AND C.BANK_CODE = D.CUSTOM_CODE
									AND D.CUSTOM_TYPE = '4'      								  								
   WHERE   A.CUSTOM_CODE LIKE @CUSTOM_CODE + '%' 
     AND ((A.CUSTOM_TYPE    = @CUSTOM_TYPE AND @CUSTOM_TYPE != '') OR @CUSTOM_TYPE = '')
       
   GROUP BY A.COMP_CODE   , A.DIV_CODE  , A.CUSTOM_CODE , A.CUSTOM_NAME , A.COLLECT_DAY
          , A.RECEIPT_DAY , A.BILL_TYPE , A.TOP_NAME    , A.ADDR1       , A.TELEPHON , A.TOT_CREDIT_AMT, B.PAY_AMT, B.PAY_YYYYMM,B.EX_DATE, A.AGENT_TYPE
          , C.BANK_CODE  , UNILITE.FNCIPHERDECRYPT(C.BANKBOOK_NUM, '') , C.BANKBOOK_NAME, C.COMPANY_NUM, D.CUSTOM_NAME
   ORDER BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE 

   SET NOCOUNT OFF
   SET ARITHABORT OFF
END 
 


    </select>
	
<insert id="map081ukrvServiceImpl.insertDetail" parameterType="Map">    	
INSERT INTO MAP050T
     ( COMP_CODE
     ,DIV_CODE
     ,PAY_YYYYMM
     ,COLLECT_DAY
     ,CUSTOM_CODE
     ,AMOUNT_I
     ,PAY_REQ_AMT
     ,PAY_AMT
     
     ,RECEIPT_DAY
     ,BILL_TYPE
     ,PAY_DATE
     ,DEPT_CODE
     ,PAY_PRSN
     
     
     ,INSERT_DB_USER     
     ,INSERT_DB_TIME
     ,UPDATE_DB_USER
     ,UPDATE_DB_TIME	 )
VALUES
     (  #{COMP_CODE}	
    ,#{DIV_CODE}      
	,#{PAY_YYYYMM}    
	,#{COLLECT_DAY}   
	,#{CUSTOM_CODE}   
	,#{IN_CR_AMT_I}      
	,#{SC_STOCK_I}   
	,#{PAY_AMT}  
		     
	,#{RECEIPT_DAY}   
	,#{BILL_TYPE}     
	,#{PAY_DATE}     
	,#{DEPT_CODE}     
	,#{PAY_PRSN}      
     
     ,#{S_USER_ID}			
     ,GETDATE()
     ,#{S_USER_ID}
     ,GETDATE())
</insert>
	
<update id="map081ukrvServiceImpl.updateDetail" parameterType="Map">		
UPDATE MAP050T
	SET
     
     PAY_AMT = #{PAY_AMT}		
     
     ,UPDATE_DB_USER  = #{S_USER_ID}
     ,UPDATE_DB_TIME = GETDATE()
     WHERE		COMP_CODE = #{COMP_CODE}
     	AND 	DIV_CODE = #{DIV_CODE}
		AND		PAY_YYYYMM = #{PAY_YYYYMM}
		AND		COLLECT_DAY = #{COLLECT_DAY}
		AND 	CUSTOM_CODE = #{CUSTOM_CODE}
		
		
</update>

<update id="map081ukrvServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM MAP050T
	 WHERE		COMP_CODE = #{COMP_CODE}
     	AND 	DIV_CODE = #{DIV_CODE}
		AND		PAY_YYYYMM = #{PAY_YYYYMM}
		AND		COLLECT_DAY = #{COLLECT_DAY}
		AND 	CUSTOM_CODE = #{CUSTOM_CODE}
</update>
	
<select id="map081ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>	
	
</mapper>