<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="map250ukrvServiceImpl">
	<update id="map250ukrvServiceImpl.update" parameterType="Map">
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
		--map250ukrv.Cmap250ukrv[fnMap250QStd] Query01
		UPDATE MPO200T
		   SET ORDER_O         = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P}*${ORDER_UNIT_Q}, 'M_FSET_OS')
		     , ORDER_P         = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P}*${ORDER_UNIT_Q} / ORDER_Q, 'M_FSET_PS')
		     , ORDER_UNIT_P    = uniLITE.fnFormat(COMP_CODE, #{ORDER_UNIT_P}, 'M_FSET_PS')
		     , UNIT_PRICE_TYPE = N'Y'
		 WHERE COMP_CODE       = #{COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND ORDER_NUM       = #{ORDER_NUM}
		   AND ORDER_SEQ       = #{ORDER_SEQ}

			--map250ukrv.Cmap250ukrv[fnMap250QStd] Query02
			SELECT A.COMP_CODE
			     , A.EXCHG_RATE_O
			     , A.ACCOUNT_YNC
			     , A.ORDER_TYPE
			     , A.LC_NUM
			     , A.BL_NUM
			     , A.EXPENSE_I
			     , A.ORDER_NUM
			     , A.ORDER_SEQ
			     , A.INOUT_CODE_TYPE
			     , A.WH_CODE
			     , A.ITEM_STATUS
			     , A.INOUT_DATE
			     , A.ITEM_CODE
			     , A.INOUT_NUM
			     , A.INOUT_SEQ
			     , A.INOUT_Q
			     , A.UPDATE_DB_USER
			     , A.ORDER_UNIT_Q
			  FROM BTR100T A
			 WHERE A.COMP_CODE       = #{COMP_CODE}
			   AND A.DIV_CODE        = #{DIV_CODE}
			   AND A.ORDER_NUM       = #{ORDER_NUM}
			   AND A.ORDER_SEQ       = #{ORDER_SEQ}

			   IF @@ROWCOUNT > 0
				BEGIN
					UPDATE BTR100T
                      SET ORDER_UNIT_FOR_P = #{ORDER_UNIT_P}
                        , ORDER_UNIT_P     = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P} * EXCHG_RATE_O, 'M_FSET_PS')
                        , INOUT_FOR_P      = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P} * ORDER_UNIT_Q / INOUT_Q, 'M_FSET_PS')
                        , INOUT_P          = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P} * EXCHG_RATE_O * ORDER_UNIT_Q / INOUT_Q, 'M_FSET_PS')
                        , INOUT_I          = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P} * EXCHG_RATE_O * ORDER_UNIT_Q, 'M_FSET_IS')
                        , INOUT_FOR_O      = uniLITE.fnFormat(COMP_CODE, ${ORDER_UNIT_P} * ORDER_UNIT_Q, 'M_FSET_OS')
                        , PRICE_YN         = 'Y'
                    WHERE COMP_CODE = #{COMP_CODE}
                      AND DIV_CODE  = #{DIV_CODE}
                      AND ORDER_NUM = #{ORDER_NUM}
                      AND PRICE_YN  = N'N'
                      AND ORDER_SEQ =  #{ORDER_SEQ}
				END
			    SET ARITHABORT OFF
			    SET NOCOUNT OFF
			END
	</update>
	<insert id = "map250ukrvServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_MPO200T(
			KEY_VALUE	, 	OPR_FLAG	, 		COMP_CODE	, 	DIV_CODE	, 	CUSTOM_CODE	, ORDER_NUM	,
			ORDER_SEQ	, 	ITEM_CODE	, 		DVRY_DATE	, 	DVRY_TIME	, 	ORDER_UNIT	, TRNS_RATE	,
			ORDER_Q		, 	ORDER_UNIT_Q,		ORDER_P		, 	ORDER_UNIT_P,	ORDER_O		, MONEY_UNIT	,
			EXCHG_RATE_O, 	ORDER_LOC_P,		ORDER_LOC_O	, 	WH_CODE	,   	INSTOCK_Q	, ORDER_REQ_NUM	,
			CONTROL_STATUS, UNIT_PRICE_TYPE,	PROJECT_NO,		PJT_CODE	, 	LOT_NO	,	  REMARK	,
			INSPEC_FLAG	,	RECEIPT_Q	,		BAD_RETURN_Q,   ADVAN_AMOUNT,	MAP_Q	,	  	SO_NUM	,
			SO_SEQ	,	    BL_NUM	,			DVRY_ESTI_NO	,DVRY_ESTI_QTY,  DVRY_TOT_QTY,	DVRY_ESTI_DATE,
			DVRY_PRINT_YN,	SUPP_REMARK,		IF_NO,			IF_YN,			IF_DATETIME,	INSERT_DB_USER,
			INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME,		TEMPC_01	,	TEMPC_02	,	TEMPC_03	,
			TEMPN_01	,	TEMPN_02	,		TEMPN_03,	     PO_REQ_NUM,
			IN_DIV_CODE)
		VALUES(
			#{KEY_VALUE}	, 	#{OPR_FLAG}	, 		#{COMP_CODE}	, 	#{DIV_CODE}	, 	#{CUSTOM_CODE}	, #{ORDER_NUM}	,
			#{ORDER_SEQ}	, 	#{ITEM_CODE}	, 		getdate()	, 	#{DVRY_TIME}	, 	#{ORDER_UNIT}	, #{TRNS_RATE}	,
			0	, 	#{ORDER_UNIT_Q},		#{ORDER_P}		, 	#{ORDER_UNIT_P},	#{ORDER_O}		, #{MONEY_UNIT}	,
			#{EXCHG_RATE_O}, 	0,			0, 	''	,   	0	, #{ORDER_REQ_NUM}	,
			#{CONTROL_STATUS}, '',	#{PROJECT_NO},		#{PJT_CODE}	, 	#{LOT_NO}	,	 #{REMARK}	,
			#{INSPEC_FLAG}	,	#{RECEIPT_Q}	,		#{BAD_RETURN_Q},   #{ADVAN_AMOUNT},	#{MAP_Q}	,	  	#{SO_NUM}	,
			#{SO_SEQ}	,	    #{BL_NUM}	,			#{DVRY_ESTI_NO}	,#{DVRY_ESTI_QTY},  #{DVRY_TOT_QTY},	#{DVRY_ESTI_DATE},
			#{DVRY_PRINT_YN},	#{SUPP_REMARK},		#{IF_NO},		#{IF_YN},		#{IF_DATETIME},#{S_USER_ID},
			getdate(),			#{S_USER_ID},			 getdate(),			#{TEMPC_01}	,	#{TEMPC_02}	,	#{TEMPC_03}	,
			#{TEMPN_01}	,	#{TEMPN_02}	,		#{TEMPN_03},      '',
			#{IN_DIV_CODE}
		)

	</insert>
	<update id="spMap250ukrv" parameterType="Map" statementType="CALLABLE">
	{call SP_MAP250UKRV (
		#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
    </update>
<select id="map250ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
/* Map01krv.CMap250UKr[fnMap250QStd] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID      */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT CAST(' ' AS BIT) AS CHK
         , C.DIV_CODE
         , C.CUSTOM_CODE
         , (CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
                                     ELSE D.CUSTOM_NAME
             END) AS CUSTOM_NAME
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN E.ITEM_NAME1
                 WHEN @RefItem = '2' THEN E.ITEM_NAME2
                                     ELSE E.ITEM_NAME
             END) AS ITEM_NAME
         , E.SPEC
         , A.ORDER_UNIT
         , A.ORDER_UNIT_Q
         , C.ORDER_TYPE
         , A.ORDER_UNIT_P AS ORDER_UNIT_P1
         , A.ORDER_UNIT_P
         , A.TRNS_RATE
         , (ISNULL((SELECT MAX(EXCHG_RATE_O)
                      FROM BTR100T K WITH (NOLOCK)
                     WHERE K.COMP_CODE  = A.COMP_CODE
                       AND K.ORDER_NUM  = A.ORDER_NUM
                       AND K.ORDER_SEQ  = A.ORDER_SEQ
                       AND K.COMP_CODE  = @CompCode
                       AND K.DIV_CODE   = #{DIV_CODE}
                       AND K.INOUT_TYPE = '1'), C.EXCHG_RATE_O) * A.ORDER_UNIT_P) AS ORDER_P
         , C.MONEY_UNIT
         , A.ORDER_O
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , C.ORDER_PRSN
         , ISNULL((SELECT MAX(EXCHG_RATE_O)
                     FROM BTR100T K WITH (NOLOCK)
                    WHERE K.COMP_CODE  = A.COMP_CODE
                      AND K.ORDER_NUM  = A.ORDER_NUM
                      AND K.ORDER_SEQ  = A.ORDER_SEQ
                      AND K.COMP_CODE  = @CompCode
                       AND K.DIV_CODE   = #{DIV_CODE}
                      AND K.INOUT_TYPE = '1'), C.EXCHG_RATE_O) AS EXCHG_RATE_O
         , A.REMARK
         , A.PROJECT_NO
         , A.COMP_CODE
         , A.IN_DIV_CODE
      FROM            MPO200T A WITH (NOLOCK)
           INNER JOIN MPO100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                             AND C.DIV_CODE	     = A.DIV_CODE
                                             AND C.ORDER_NUM   = A.ORDER_NUM
           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
                                             AND D.CUSTOM_CODE = C.CUSTOM_CODE
           INNER JOIN BPR100T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                             AND E.ITEM_CODE   = A.ITEM_CODE
     WHERE C.COMP_CODE        =  @CompCode
       AND A.UNIT_PRICE_TYPE   IN ( 'N', '3' )
       AND A.CONTROL_STATUS  != '8'
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND A.IN_DIV_CODE         = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
       AND C.ORDER_DATE      &gt;= #{ORDER_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
       AND C.ORDER_DATE      &lt;= #{ORDER_DATE_TO}
</if>

<!--2021.08 표준화 작업 Start-->
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	AND C.CUSTOM_CODE = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
	AND C.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
</if>
<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	AND		(@RefItem       = N'0' AND D.CUSTOM_NAME  LIKE N'%' + #{CUSTOM_NAME} + N'%')
		OR	(@RefItem       = N'1' AND D.CUSTOM_NAME1 LIKE N'%' + #{CUSTOM_NAME} + N'%')
		OR	(@RefItem       = N'2' AND D.CUSTOM_NAME2 LIKE N'%' + #{CUSTOM_NAME} + N'%')
</if>
<!--2021.08 표준화 작업 End-->
<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
       AND C.ORDER_PRSN       = #{ORDER_PRSN}
</if>
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
       AND C.ORDER_TYPE       = #{ORDER_TYPE}
</if>
     ORDER BY CUSTOM_NAME, A.ITEM_CODE

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
	</select>

</mapper>