<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="map103ukrvServiceImpl">
					
	<select id="map103ukrvServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">
	/*map103ukrv.Cmap103ukrv[fnMap100QPop] Query01*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
          , @UserId      NVARCHAR(100) /* 사용자ID    */
          , @LangType    NVARCHAR(2)  /* 언어구분    */
          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */

SELECT 
           (CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
                                     ELSE B.CUSTOM_NAME
             END)                AS CUSTOM_NAME
     , (CASE WHEN ISNULL(A.CHANGE_BASIS_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CHANGE_BASIS_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(A.CHANGE_BASIS_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(A.CHANGE_BASIS_DATE, 7, 2))
         END)                                           AS CHANGE_BASIS_DATE

     , A.MONEY_UNIT
     , ISNULL(A.AMOUNT_I, 0) AS AMOUNT_I
     , A.BILL_NUM
     , (CASE WHEN ISNULL(A.BILL_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(A.BILL_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(A.BILL_DATE, 7, 2))
         END)                                           AS BILL_DATE
     , A.CHANGE_BASIS_NUM
     , A.DIV_CODE
     , A.BILL_DIV_CODE
     , A.CUSTOM_CODE
     , B.COMPANY_NUM
     , A.BILL_TYPE
     , A.RECEIPT_TYPE
     , A.ORDER_TYPE
     , A.VAT_RATE
     , ISNULL(A.VAT_AMOUNT_O, 0) AS VAT_AMOUNT_O
     , A.DEPT_CODE
     , (CASE WHEN ISNULL(A.EX_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
         END)                                           AS EX_DATE
     , A.EX_NUM
     , ISNULL(A.AGREE_YN,'N') AS AGREE_YN
     , A.DRAFT_YN
     , A.DEPT_NAME
     , A.ISSUE_EXPECTED_DATE
     , A.ACCOUNT_TYPE
     , A.PROJECT_NO

   FROM          MAP100T A WITH (NOLOCK)
       LEFT JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                        AND B.CUSTOM_CODE = A.CUSTOM_CODE
       LEFT JOIN
               (SELECT C.COMP_CODE
                     , C.CHANGE_BASIS_NUM
                     , COUNT(D.INOUT_NUM) AS CNT
                  FROM BTR100T D WITH (NOLOCK)
                     , MAP200T C WITH (NOLOCK)
                 Where D.COMP_CODE = C.COMP_CODE
                   AND D.INOUT_NUM  = C.INOUT_NUM
                   AND D.INOUT_SEQ  = C.INOUT_SEQ
                   AND D.COMP_CODE  = @CompCode
                   AND D.CREATE_LOC = N'2'
              GROUP BY C.COMP_CODE, C.CHANGE_BASIS_NUM) E ON E.COMP_CODE        = A.COMP_CODE
                                                         AND E.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
      	INNER JOIN BSA210T F WITH (NOLOCK) ON F.COMP_CODE = A.COMP_CODE
          									AND F.TYPE_LEVEL = A.DIV_CODE
          									AND F.TREE_CODE = A.DEPT_CODE      	  

 WHERE 1 = 1
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
        AND A.DIV_CODE             = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
        AND A.CUSTOM_CODE       LIKE #{CUSTOM_CODE}+ '%'
</if>
<if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_DATE_FR)">
        AND A.CHANGE_BASIS_DATE   &gt;= #{CHANGE_BASIS_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_DATE_TO)">
        AND A.CHANGE_BASIS_DATE   &lt;= #{CHANGE_BASIS_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
    AND    F.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =F.COMP_CODE AND TYPE_LEVEL=F.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
</if>
<if test="@foren.Ognl@isNotEmpty(BILL_DATE_FR)">
        AND A.BILL_DATE           &gt;= #{BILL_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(BILL_DATE_TO)">
        AND A.BILL_DATE           &lt;= #{BILL_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(BILL_NUM)">
        AND A.BILL_NUM             = #{BILL_NUM}
</if>
<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
        AND A.PROJECT_NO           = #{PROJECT_NO}
</if>
        AND A.COMP_CODE            = @CompCode
    
 ORDER BY CUSTOM_NAME, A.CHANGE_BASIS_DATE, A.CHANGE_BASIS_NUM  
    
    SET NOCOUNT OFF
    SET ARITHABORT OFF 
END
	</select>
	
<select id="map103ukrvServiceImpl.selectForm" parameterType="Map" resultType="rMap">
		/*map103ukrv.Cmap103ukrv[fnMap100QStd] Query05*/
			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드				*/
		          , @UserId			NVARCHAR(100)	/* 사용자ID				*/
		          , @LangType		NVARCHAR(2)		/* 언어구분				*/
		          , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형		*/
		          , @DateFormat		NVARCHAR(10)	/* 날짜 포맷 유형 설정	*/
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}		
		
			/* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
			/* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
			/* 데이터 조회 */   
    
     SELECT 
            (CASE WHEN ISNULL(CHANGE_BASIS_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(CHANGE_BASIS_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(CHANGE_BASIS_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(CHANGE_BASIS_DATE, 7, 2))
         	END)                AS CHANGE_BASIS_DATE 
          
          , (CASE WHEN ISNULL(BILL_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(BILL_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(BILL_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(BILL_DATE, 7, 2))
         	END)                AS BILL_DATE
          , BILL_NUM
          , ISNULL(RECEIPT_TYPE,'') AS RECEIPT_TYPE
          , ISNULL(AMOUNT_I, 0) AS AMOUNT_I
          , ISNULL(VAT_RATE, 0) AS VAT_RATE
          , ISNULL(VAT_AMOUNT_O, 0) AS VAT_AMOUNT_O
         
          , (CASE WHEN ISNULL(EX_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(EX_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(EX_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(EX_DATE, 7, 2))
         	END)                AS EX_DATE
          , EX_NUM
          , ISNULL(AGREE_YN,'N') AS AGREE_YN
          , DRAFT_YN
          
       FROM MAP100T 
      WHERE 1=1
<if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_NUM)">      
      	AND	CHANGE_BASIS_NUM = #{CHANGE_BASIS_NUM}
</if> 
        AND COMP_CODE        = @Compcode
  
</select>	
	
	
<select id="map103ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
/*map103ukrv.Cmap103ukrv[fnMap100QStd] Query01*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
          , @UserId      NVARCHAR(100) /* 사용자ID    */
          , @LangType    NVARCHAR(2)  /* 언어구분    */
          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */

SELECT
       A.CHANGE_BASIS_NUM
     , A.CHANGE_BASIS_SEQ
     /*, uniLITE.fnGetUserDate(A.COMP_CODE, A.INSTOCK_DATE) AS INSTOCK_DATE*/
     , (CASE WHEN ISNULL(A.INSTOCK_DATE, '') = ''
             THEN ''
             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INSTOCK_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(A.INSTOCK_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(A.INSTOCK_DATE, 7, 2))
         END)                AS INSTOCK_DATE
     , D.ITEM_ACCOUNT
     , A.ITEM_CODE
     /*, uniLITE.fnItemNameComp(A.COMP_CODE, N'UNILITE5',B.ITEM_CODE) AS ITEM_NAME */
     ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
             WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                 ELSE B.ITEM_NAME
         END)                        AS ITEM_NAME
     , B.SPEC
     , A.ORDER_UNIT
     , B.TAX_TYPE
     , A.ORDER_UNIT_Q
     , ((C.ACCOUNT_Q / ISNULL(C.TRNS_RATE, 1)) - A.ORDER_UNIT_Q) AS REMAIN_Q
     , A.ORDER_UNIT_P
     , A.AMOUNT_P
     , A.AMOUNT_I
     , A.TAX_I
     , A.ORDER_UNIT_FOR_P
     , A.FOREIGN_P
     , A.FOR_AMOUNT_O
     , A.MONEY_UNIT
     , A.EXCHG_RATE_O
     , B.STOCK_UNIT
     , A.TRNS_RATE
     , A.BUY_Q
     , A.ORDER_TYPE
     , A.ORDER_PRSN
     , A.LC_NUM
     , A.BL_NUM
     , A.ORDER_NUM
     , A.ORDER_SEQ
     , A.INOUT_NUM
     , A.INOUT_SEQ
     , A.DIV_CODE
     , A.BILL_DIV_CODE
     , A.CUSTOM_CODE
     , A.REMARK
     , A.PROJECT_NO
     , A.UPDATE_DB_USER
     , A.UPDATE_DB_TIME
     , A.COMP_CODE
     , A.ADVAN_YN
     , E.ADVAN_AMOUNT AS ADVAN_AMOUNT
     , A.INOUT_TYPE
     , A.PURCHASE_TYPE
  FROM           MAP200T A WITH (NOLOCK)
       LEFT JOIN BTR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                        AND C.DIV_CODE  = A.DIV_CODE
                                        AND C.INOUT_NUM = A.INOUT_NUM
                                        AND C.INOUT_SEQ = A.INOUT_SEQ
                                        AND C.INOUT_TYPE = '1'
       LEFT JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                        AND B.ITEM_CODE = A.ITEM_CODE
       LEFT JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                        AND D.DIV_CODE  = A.DIV_CODE
                                        AND D.ITEM_CODE = A.ITEM_CODE
       LEFT JOIN MPO200T E WITH (NOLOCK) ON E.COMP_CODE = C.COMP_CODE
                                        AND E.DIV_CODE  = C.DIV_CODE
                                        AND E.ORDER_NUM = C.ORDER_NUM
                                        AND E.ORDER_SEQ = C.ORDER_SEQ

 WHERE 
       A.COMP_CODE        = @CompCode
<if test="@foren.Ognl@isNotEmpty(CHANGE_BASIS_NUM)"> 
   AND A.CHANGE_BASIS_NUM = #{CHANGE_BASIS_NUM}
</if>
 ORDER BY A.CHANGE_BASIS_NUM, A.CHANGE_BASIS_SEQ

    SET NOCOUNT OFF
    SET ARITHABORT OFF
    END
	</select>
	<select id="map103ukrvServiceImpl.selectreceiveHistoryList" parameterType="Map" resultType="rMap">
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	    SET @CompCode = #{S_COMP_CODE}

SELECT 
	 A.COMP_CODE
	,A.DIV_CODE
	,A.INOUT_DATE
	,A.ITEM_CODE
	,B.ITEM_NAME
	,B.SPEC
	,A.ORDER_UNIT
	,ISNULL(A.TAX_TYPE, B.TAX_TYPE) AS TAX_TYPE
	,A.INOUT_P
	,CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_Q ELSE A.INOUT_Q *(-1) END AS INOUT_Q
	,CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_I ELSE A.INOUT_I *(-1) END AS INOUT_I
	,CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_TAX_AMT ELSE A.INOUT_TAX_AMT *(-1) END AS INOUT_TAX_AMT
	,CASE WHEN A.INOUT_TYPE = '1' THEN A.INOUT_I + A.INOUT_TAX_AMT ELSE (A.INOUT_I + A.INOUT_TAX_AMT) *(-1) END AS TOTAL_INOUT_I
	,A.MONEY_UNIT
	,A.ORDER_TYPE
	,A.INOUT_NUM
	,A.INOUT_SEQ

	FROM	   BTR100T  A WITH(NOLOCK) 
	INNER JOIN BPR100T  B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE    
                                       AND B.ITEM_CODE = A.ITEM_CODE  
	INNER JOIN BCM100T  C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
									   AND C.CUSTOM_CODE = A.INOUT_CODE	
								   
	WHERE A.COMP_CODE = @CompCode
	AND A.INOUT_TYPE = '1'
	AND A.CREATE_LOC = '2'
	AND (A.INOUT_Q - A.ACCOUNT_Q) != 0
	
	
	AND A.DIV_CODE = #{DIV_CODE}

	<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
    AND A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
	</if>  
	<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
	AND A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
	</if>  
	<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
	AND A.INOUT_NUM = #{INOUT_NUM} 
	</if>
	<if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
	AND A.INOUT_CODE = #{INOUT_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
    AND A.ITEM_CODE  = #{ITEM_CODE}
	</if>  
	<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
	AND A.TAX_TYPE = #{TAX_TYPE}
	</if>
	
	
	
	
	
    ORDER BY A.INOUT_SEQ
   
    SET ARITHABORT OFF 
    SET NOCOUNT OFF
  
END
	</select>
	
	<select id="map103ukrvServiceImpl.selectreturningHistoryList" parameterType="Map" resultType="rMap">
	/* map103ukrv.Cmap103ukrv[fnMap100QRef] */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                
    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}  
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT CAST('' AS BIT) AS GUBUN
         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
             END)                AS INSTOCK_DATE
         , B.ITEM_ACCOUNT
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                 WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                     ELSE C.ITEM_NAME
             END)                 AS ITEM_NAME
         , C.SPEC
         , A.ORDER_UNIT
         , C.TAX_TYPE
         
         , ISNULL(F.GOOD_STOCK_Q, 0)                                AS GOOD_STOCK_Q
          
         , (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1))) AS ORDER_UNIT_Q 
         , A.ORDER_UNIT_P
         , A.INOUT_P AS AMOUNT_P
         , (CASE WHEN A.ACCOUNT_Q = 0 
                 THEN A.INOUT_I
                 ELSE (A.ORDER_UNIT_P *  (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1)))) 
             END) AS AMOUNT_I
         , A.ORDER_UNIT_FOR_P
         , A.INOUT_FOR_P AS FOREIGN_P
         , (CASE WHEN A.ACCOUNT_Q = 0 
                 THEN A.INOUT_FOR_O 
                 ELSE (A.ORDER_UNIT_FOR_P * (A.ORDER_UNIT_Q - (ISNULL(A.ACCOUNT_Q, 0) / ISNULL(A.TRNS_RATE, 1)))) 
             END) AS FOR_AMOUNT_O
         , A.ORDER_UNIT_Q - ISNULL(A.ACCOUNT_Q, 0) AS REMAIN_Q  /* 매입잔량   */
         , ISNULL(D.ADVAN_AMOUNT, 0) AS ADVAN_AMOUNT
         , (CASE WHEN ISNULL(A.ACCOUNT_Q, 0) = 0
                 THEN A.INOUT_I 
                 ELSE (ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(A.ACCOUNT_Q, 0)) * ISNULL(A.ORDER_UNIT_P, 0) 
             END) AS REMAIN_AMOUNT
         , A.MONEY_UNIT
         , A.EXCHG_RATE_O
         , C.STOCK_UNIT
         , A.TRNS_RATE
         , (A.INOUT_Q - ISNULL(A.ACCOUNT_Q, 0)) AS BUY_Q
         , A.ORDER_TYPE
         , (SELECT ORDER_PRSN 
              FROM MPO100T WITH (NOLOCK)
             WHERE ORDER_NUM   = A.ORDER_NUM 
               AND COMP_CODE   = A.COMP_CODE 
               AND DIV_CODE    = A.DIV_CODE 
               AND CUSTOM_CODE = A.INOUT_CODE) AS ORDER_PRSN
         , A.LC_NUM
         , A.BL_NUM
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , A.INOUT_NUM
         , A.INOUT_SEQ
         , (SELECT TAX_CALC_TYPE 
              FROM BCM100T
             WHERE COMP_CODE   = A.COMP_CODE
               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND CUSTOM_CODE = #{CUSTOM_CODE}) AS TAX_CALC_TYPE
             </if>
         , A.REMARK
         , A.PROJECT_NO
         , A.INOUT_TYPE
         , A.PURCHASE_TYPE
      FROM           BTR100T A WITH (NOLOCK)
     		LEFT  JOIN BIV100T   F  WITH (NOLOCK) ON F.COMP_CODE     = A.COMP_CODE    
                                                AND F.DIV_CODE      = A.DIV_CODE    
                                                AND F.WH_CODE       = A.WH_CODE    
                                                AND F.ITEM_CODE     = A.ITEM_CODE 
      
           LEFT JOIN MPO200T D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                            AND D.DIV_CODE  = A.DIV_CODE
                                            AND D.ORDER_NUM = A.ORDER_NUM
                                            AND D.ORDER_SEQ = A.ORDER_SEQ
                                            AND D.ORDER_UNIT_Q - D.MAP_Q &gt; 0
           LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                            AND B.DIV_CODE  = A.DIV_CODE
                                            AND B.ITEM_CODE = A.ITEM_CODE
           LEFT JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                            AND C.ITEM_CODE = A.ITEM_CODE
           LEFT JOIN (SELECT A1.COMP_CODE
                           , A1.DIV_CODE
                           , A1.CUSTOM_CODE
                           , A1.ITEM_CODE
                           , A1.ORDER_NUM
                           , A1.ORDER_SEQ
                           , SUM(ISNULL(BUY_Q, 0)) AS BUY_Q
                           , SUM(ISNULL(AMOUNT_I, 0)) AS AMOUNT_I
                        FROM MAP200T A1 WITH (NOLOCK)
                       WHERE A1.COMP_CODE = @CompCode
                       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                         AND A1.DIV_CODE  = #{DIV_CODE}
                       </if>
                       GROUP BY A1.COMP_CODE, A1.DIV_CODE, A1.CUSTOM_CODE, A1.ITEM_CODE, A1.ORDER_NUM
                              , A1.ORDER_SEQ) E ON E.COMP_CODE   = D.COMP_CODE
                                               AND E.DIV_CODE    = D.DIV_CODE
                                               AND E.CUSTOM_CODE = D.CUSTOM_CODE
                                               AND E.ITEM_CODE   = D.ITEM_CODE
                                               AND E.ORDER_NUM   = D.ORDER_NUM
                                               AND E.ORDER_SEQ   = D.ORDER_SEQ
           LEFT JOIN TIB140T R1 WITH(NOLOCK) ON R1.COMP_CODE  = A.COMP_CODE     /* LOCAL L/C MASTER */
                                            AND R1.DIV_CODE   = A.DIV_CODE
                                            AND R1.LLC_SER_NO = A.LC_NUM
                                            AND A.CREATE_LOC = '6'              /* 무역   */
                                            AND A.ORDER_TYPE = '2'              /* LLC  */
                                            AND A.TRADE_LOC  = '2'              /* LLC  */
     WHERE A.COMP_CODE    = @CompCode
       AND A.INOUT_TYPE   = '4'
       AND A.CREATE_LOC  IN ('2','6')
       AND A.ACCOUNT_YNC  = 'Y'
       AND A.PRICE_YN     = 'Y'
       AND ((A.INOUT_Q - A.ACCOUNT_Q != 0)
         OR (INOUT_Q = 0 AND (INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) NOT IN (SELECT INOUT_NUM + CONVERT(NVARCHAR(4), INOUT_SEQ) FROM MAP200T))))
       AND ISNULL(R1.EX_DATE,'') = '' /* 무역 LLC 미착 지급결의 안된것 */
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
       AND A.INOUT_CODE    = #{CUSTOM_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
       AND A.INOUT_DATE   &gt;= #{INOUT_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
       AND A.INOUT_DATE   &lt;= #{INOUT_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
       AND A.ORDER_TYPE    = #{ORDER_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
       AND A.MONEY_UNIT    = #{MONEY_UNIT}
</if>  
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND A.DIV_CODE      = #{DIV_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
       AND C.TAX_TYPE      = #{TAX_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
       AND A.ITEM_CODE  LIKE #{ITEM_CODE}+ '%'
</if>  
<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
       AND B.ITEM_NAME  LIKE #{ITEM_NAME}+ '%'
</if>  
<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
       AND A.PROJECT_NO    = #{PROJECT_NO}
</if> 
    

<if test="rdoSelect == &quot;N&quot;">
       AND A.ITEM_STATUS = N'1'
</if>
    
    ORDER BY A.INOUT_DATE DESC, INOUT_NUM DESC, INOUT_SEQ 
    
    SET NOCOUNT OFF
    SET ARITHABORT OFF
END	
		
	</select>
		<select id="map103ukrvServiceImpl.selectorderHistoryList" parameterType="Map" resultType="rMap">
    /*map103ukrv.Cmap103ukrv[fnMap100QRef2]*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
          , @UserId      NVARCHAR(100) /* 사용자ID    */
          , @LangType    NVARCHAR(2)  /* 언어구분    */
          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
        
        SELECT 
                CAST('' AS BIT)           AS GUBUN          /* 선택*/
             /* 발주일*/
			  , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
							THEN ''
							ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
                                                     , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
                                                     , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
							END)                AS ORDER_DATE
              , B.ITEM_CODE               AS ITEM_CODE      /* 품목코드*/
              , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                      WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                          ELSE C1.ITEM_NAME
                     END)                                                                      AS ITEM_NAME     
              , C1.SPEC                   AS SPEC           /* 규격*/
              , B.ORDER_UNIT              AS ORDER_UNIT     /* 구매단위*/
              , ISNULL(B.ORDER_UNIT_Q, 0) AS ORDER_UNIT_Q   /* 수량(구매단위량)*/
              , ISNULL(B.ORDER_UNIT_P, 0) AS ORDER_UNIT_P   /* 단가*/
              , ISNULL(B.ORDER_O, 0)      AS ORDER_O        /* 금액*/
              , ISNULL(B.ADVAN_AMOUNT, 0) AS ADVAN_AMOUNT   /* 선지급금액*/
              , ISNULL(B.ORDER_O, 0) - ISNULL(B.ADVAN_AMOUNT, 0) AS LOG_AMT /* 잔여액*/
              , ISNULL(B.ORDER_UNIT_Q, 0) - ISNULL(B.MAP_Q, 0)   AS REMAIN_Q /* 잔여수량*/
              , A.MONEY_UNIT              AS MONEY_UNIT     /* 화폐단위*/
              , A.EXCHG_RATE_O            AS EXCHG_RATE_O   /* 환율*/
              , C1.STOCK_UNIT             AS STOCK_UNIT     /* 재고단위*/
              , B.TRNS_RATE               AS TRNS_RATE      /* 입수*/
              , A.LC_NUM                  AS LC_NUM         /* L/C번호*/
              , B.ORDER_NUM               AS ORDER_NUM      /* 발주번호*/
              , B.ORDER_SEQ               AS ORDER_SEQ      /* 발주순번*/
              , B.REMARK                  AS REMARK         /* 비고*/
              , B.PROJECT_NO              AS PROJECT_NO     /* 관리번호*/
              , C2.ITEM_ACCOUNT           AS ITEM_ACCOUNT   /* 품목계정*/
              , A.ORDER_TYPE              AS ORDER_TYPE     /* 발주형태*/
              , A.ORDER_PRSN              AS ORDER_PRSN     /* 발주담당자*/
   
          FROM           MPO100T A  WITH (NOLOCK)
              INNER JOIN MPO200T B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                 AND B.DIV_CODE   = A.DIV_CODE
                                                 AND B.ORDER_NUM  = A.ORDER_NUM
              LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B.COMP_CODE
                                                 AND C1.ITEM_CODE = B.ITEM_CODE
              LEFT  JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = B.COMP_CODE
                                                 AND C2.DIV_CODE  = B.DIV_CODE
                                                 AND C2.ITEM_CODE = B.ITEM_CODE
   
         WHERE 
               A.COMP_CODE     = @CompCode
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
           AND A.DIV_CODE      = #{DIV_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
           AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
           AND A.MONEY_UNIT    = #{MONEY_UNIT}
           </if>
           <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
           AND A.ORDER_DATE &gt;= #{ORDER_DATE_FR}
           </if>
           <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">    
           AND A.ORDER_DATE &lt;= #{ORDER_DATE_TO}
           </if>
           <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">    
           AND B.PROJECT_NO  = #{PROJECT_NO}
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND B.ITEM_CODE   = #{ITEM_CODE}  
           </if>
           
           AND B.INSTOCK_Q    &lt;= 0
         
           
           AND ISNULL(B.ORDER_O, 0) - ISNULL(B.ADVAN_AMOUNT, 0) > 0
          
           
           AND B.CONTROL_STATUS != '8'
           
        SET NOCOUNT OFF
        SET ARITHABORT OFF
   END
	</select>
	
<insert id="map103ukrvServiceImpl.insertLogMaster" parameterType="Map">    	
INSERT INTO L_MAP200T
     ( KEY_VALUE		    , OPR_FLAG
     , COMP_CODE            , DIV_CODE              , BILL_DIV_CODE         , CUSTOM_CODE           , CHANGE_BASIS_NUM
     , CHANGE_BASIS_SEQ     , INOUT_NUM             , INOUT_SEQ             , ORDER_NUM             , ORDER_SEQ
     , ITEM_CODE            , ITEM_ACCOUNT          , INSTOCK_DATE          , BUY_Q                 , AMOUNT_P
     , AMOUNT_I             , MONEY_UNIT            , FOREIGN_P             , FOR_AMOUNT_O          , EXCHG_RATE_O
     , ORDER_TYPE           , ORDER_PRSN            , LC_NUM                , BL_NUM                , TAX_I
     , ORDER_UNIT           , TRNS_RATE             , ORDER_UNIT_Q          , ORDER_UNIT_P          , ORDER_UNIT_FOR_P
     , PROJECT_NO           , PJT_CODE              , REMARK                , ADVAN_YN
     , INOUT_TYPE			, PURCHASE_TYPE 		, UPDATE_DB_USER	, UPDATE_DB_TIME	, INSERT_DB_USER    	, INSERT_DB_TIME)
VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG}
     , #{S_COMP_CODE}         , #{DIV_CODE}           , #{BILL_DIV_CODE}    , #{CUSTOM_CODE}        , #{CHANGE_BASIS_NUM}
     , #{CHANGE_BASIS_SEQ}  , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{ORDER_NUM}          , #{ORDER_SEQ}
     , #{ITEM_CODE}         , #{ITEM_ACCOUNT}       , #{INSTOCK_DATE}       , #{BUY_Q}              , #{AMOUNT_P}
     , #{AMOUNT_I}          , #{MONEY_UNIT}         , #{FOREIGN_P}          , #{FOR_AMOUNT_O}       , #{EXCHG_RATE_O}
     , #{ORDER_TYPE}        , #{ORDER_PRSN}         , #{LC_NUM}             , #{BL_NUM}             , #{TAX_I}
     , #{ORDER_UNIT}        , #{TRNS_RATE}          , #{ORDER_UNIT_Q}       , #{ORDER_UNIT_P}       , #{ORDER_UNIT_FOR_P}
     , #{PROJECT_NO}        , #{PJT_CODE}           , #{REMARK}             , #{ADVAN_YN} 
     , #{INOUT_TYPE}		, #{PURCHASE_TYPE}		, #{S_USER_ID}     	, GETDATE()	       , #{S_USER_ID}     	, GETDATE())
</insert>	
	
<insert id="map103ukrvServiceImpl.insertLogForm" parameterType="Map">  	
INSERT INTO L_MAP100T
     ( KEY_VALUE		    , OPR_FLAG
     , COMP_CODE            , DIV_CODE              , BILL_DIV_CODE         , CUSTOM_CODE           , CHANGE_BASIS_NUM
     , CHANGE_BASIS_DATE    , DEPT_CODE             , DEPT_NAME             , BILL_TYPE             , BILL_NUM
     , BILL_DATE            , RECEIPT_TYPE          , ORDER_TYPE            , AMOUNT_I              , VAT_RATE
     , VAT_AMOUNT_O         , MONEY_UNIT            , EX_DATE               , EX_NUM                , AGREE_YN
     , AC_DATE              , AC_NUM                , DRAFT_YN              , PROJECT_NO            , PJT_CODE
     , ISSUE_EXPECTED_DATE  , ACCOUNT_TYPE          , CREDIT_NUM            , EB_NUM                , BILL_SEND_YN 
     , UPDATE_DB_USER		, UPDATE_DB_TIME		, INSERT_DB_USER    	, INSERT_DB_TIME)
VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG}
     , #{S_COMP_CODE}       , #{DIV_CODE}           , #{BILL_DIV_CODE}      , #{CUSTOM_CODE}        , #{CHANGE_BASIS_NUM}
     , #{CHANGE_BASIS_DATE} , #{DEPT_CODE}          , #{DEPT_NAME}          , #{BILL_TYPE}          , #{BILL_NUM}
     , #{BILL_DATE}         , #{RECEIPT_TYPE}       , #{ORDER_TYPE}         , #{AMOUNTI}            , #{VAT_RATE}
     , #{VATAMOUNTO}      	, #{MONEY_UNIT}         , #{EX_DATE}            , #{EX_NUM}             , #{AGREE_YN}
     , #{AC_DATE}           , #{AC_NUM}             , #{DRAFT_YN}           , #{PROJECT_NO}         , #{PJT_CODE}
     , #{ISSUE_EXPECTED_DATE},#{ACCOUNT_TYPE}       , #{CREDIT_NUM}         , #{EB_NUM}             , ''
     , #{S_USER_ID}     	, GETDATE()	       		, #{S_USER_ID}     		, GETDATE() )	
</insert>	

<update id="map103ukrvServiceImpl.spBuyTEST" parameterType="Map" statementType="CALLABLE">
		
		{call SP_MATRL_Buy (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CHANGE_BASIS_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{BILL_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>		  
</mapper>