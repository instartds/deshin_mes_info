<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="man100skrvServiceImpl">
	<select id="man100skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* man100skrvServiceImpl.selectList */
		DECLARE @CompCode       NVARCHAR(08)   /* 법인코드                 */
		      , @DivCode        NVARCHAR(02)   /* 사업장                   */
		      , @BasisYYYY      NVARCHAR(04)   /* 기준년도                 */
		      , @LastYYYY       NVARCHAR(04)   /* 전년도                   */
		      , @CustomCd       NVARCHAR(08)   /* 거래처코드               */
		      , @CustomNm       NVARCHAR(100)  /* 거래처명                 */
		      , @AmtUnit        NVARCHAR(01)   /* 금액단위(B042)           */
		      , @AmtUnitN       NUMERIC        /* 금액단위(B042.REF_CODE1) */
		      , @AvgVar         NUMERIC        /* 평균값 구할 변수) */
		      , @UserId         NVARCHAR(100)  /* 사용자ID                 */
		      , @LangType       NVARCHAR(02)   /* 언어구분                 */
		      , @RefItem        NVARCHAR(01)   /* 명칭 참조 유형           */

		    SET @CompCode  = #{S_COMP_CODE}
		    SET @DivCode   = #{DIV_CODE}
		    SET @BasisYYYY = #{BASIS_YYYY}
		    SET @LastYYYY  = #{BASIS_YYYY} - 1
		    SET @CustomCd  = #{CUSTOM_CODE}
		    SET @CustomNm  = #{CUSTOM_NAME}
		    SET @AmtUnit   = #{AMOUNT_UNIT}
		    SET @AvgVar    = 12
		    SET @UserId    = #{S_USER_ID}
		    SET @LangType  = #{S_LANG_CODE}

		/* -- 테스트 변수
		    SET @CompCode  = 'MASTER'
		    SET @DivCode   = '01'
		    SET @BasisYYYY = '2020'
		    SET @LastYYYY  = @BasisYYYY - 1
		    SET @CustomCd  = ''
		    SET @CustomNm  = ''
		    SET @AmtUnit   = '1'
		    SET @UserId    = 'OMEGA+'
		    SET @LangType  = 'KR'
		*/

		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH(NOLOCK)
		 WHERE USER_ID = @UserId

		   SET @RefItem = ISNULL(@RefItem, N'0')

		/* 표시화폐 단위 */
		SELECT @AmtUnitN = REF_CODE1
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = 'B042'
		   AND SUB_CODE  = @AmtUnit

		   SET @AmtUnitN = ISNULL(@AmtUnitN, 1000)

		IF(@BasisYYYY = SUBSTRING(CONVERT(NVARCHAR(08), GETDATE(), 112), 1, 4))
		BEGIN
		    SET @AvgVar = SUBSTRING(CONVERT(NVARCHAR(08), GETDATE(), 112), 5, 2)
		END

		SELECT Z.COMP_CODE
		     , Z.DIV_CODE
		     , Z.CUSTOM_CODE
		     , Z.CUSTOM_NAME
		     , Z.ITEM_ACCOUNT
		     --, Z.CREATE_LOC_REAL
		     , Z.CREATE_LOC
		     , (SUM(Z.AMOUNT_I1) + SUM(Z.AMOUNT_I2) + SUM(Z.AMOUNT_I3) 
		      + SUM(Z.AMOUNT_I4) + SUM(Z.AMOUNT_I5) + SUM(Z.AMOUNT_I6)
		      + SUM(Z.AMOUNT_I7) + SUM(Z.AMOUNT_I8) + SUM(Z.AMOUNT_I9)
		      + SUM(Z.AMOUNT_I10) + SUM(Z.AMOUNT_I11) + SUM(Z.AMOUNT_I12))      AS TOTAL_AMOUNT
		     , (SUM(Z.AMOUNT_I1) + SUM(Z.AMOUNT_I2) + SUM(Z.AMOUNT_I3)
		      + SUM(Z.AMOUNT_I4) + SUM(Z.AMOUNT_I5) + SUM(Z.AMOUNT_I6)
		      + SUM(Z.AMOUNT_I7) + SUM(Z.AMOUNT_I8) + SUM(Z.AMOUNT_I9)
		      + SUM(Z.AMOUNT_I10) + SUM(Z.AMOUNT_I11) + SUM(Z.AMOUNT_I12))/ @AvgVar  AS AVG_AMOUNT
		     , Z.PRE_AVERAGE
		     , SUM(Z.AMOUNT_I1)                                                 AS AMOUNT_I1
		     , SUM(Z.AMOUNT_I2)                                                 AS AMOUNT_I2
		     , SUM(Z.AMOUNT_I3)                                                 AS AMOUNT_I3
		     , SUM(Z.AMOUNT_I4)                                                 AS AMOUNT_I4
		     , SUM(Z.AMOUNT_I5)                                                 AS AMOUNT_I5
		     , SUM(Z.AMOUNT_I6)                                                 AS AMOUNT_I6
		     , SUM(Z.AMOUNT_I7)                                                 AS AMOUNT_I7
		     , SUM(Z.AMOUNT_I8)                                                 AS AMOUNT_I8
		     , SUM(Z.AMOUNT_I9)                                                 AS AMOUNT_I9
		     , SUM(Z.AMOUNT_I10)                                                AS AMOUNT_I10
		     , SUM(Z.AMOUNT_I11)                                                AS AMOUNT_I11
		     , SUM(Z.AMOUNT_I12)                                                AS AMOUNT_I12
		  FROM (
		         SELECT A.COMP_CODE
		              , A.DIV_CODE
		              , A.INOUT_CODE                                        AS CUSTOM_CODE
		              , CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
		                     WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
		                     ELSE C1.CUSTOM_NAME
		                END                                                 AS CUSTOM_NAME
		              , C3.ITEM_ACCOUNT                                     AS ITEM_ACCOUNT
		              , A.CREATE_LOC                                        AS CREATE_LOC_REAL
		              , CASE WHEN A.CREATE_LOC = '6' THEN '외자'
		                     ELSE '내자'
		                END                                                 AS CREATE_LOC
		              , ISNULL(B.PRE_AVERAGE, 0)                            AS PRE_AVERAGE
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '01' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I1
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '02' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I2
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '03' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I3
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '04' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I4
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '05' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I5
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '06' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I6
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '07' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I7
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '08' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I8
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '09' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I9
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '10' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I10
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '11' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I11
		              , CASE WHEN SUBSTRING(A.INOUT_DATE, 5, 2) = '12' THEN SUM(A.INOUT_I+A.EXPENSE_I) / @AmtUnitN
		                     ELSE 0
		                END                                                 AS AMOUNT_I12
		           FROM       BTR100T A  WITH(NOLOCK)
		           INNER JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
		                                             AND C1.CUSTOM_CODE  = A.INOUT_CODE
		           INNER JOIN BPR200T C3 WITH(NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
		                                             AND C3.DIV_CODE     = A.DIV_CODE
		                                             AND C3.ITEM_CODE    = A.ITEM_CODE
		           LEFT  JOIN (SELECT R1.COMP_CODE
		                            , R1.DIV_CODE
		                            , R1.INOUT_CODE
		                            , R1.CREATE_LOC
		                            , SUM(R1.INOUT_I) / @AmtUnitN / 12     AS PRE_AVERAGE
		                         FROM       BTR100T R1  WITH(NOLOCK)
		                         INNER JOIN BCM100T RC1 WITH(NOLOCK) ON RC1.COMP_CODE    = R1.COMP_CODE
		                                                            AND RC1.CUSTOM_CODE  = R1.INOUT_CODE
		                        WHERE R1.COMP_CODE  = @CompCode
		                          AND R1.DIV_CODE   = @DivCode
		                          AND SUBSTRING(R1.INOUT_DATE, 1, 4) = @LastYYYY
		                          AND R1.INOUT_TYPE = '1'
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		                          AND R1.INOUT_CODE LIKE @CustomCd + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		                          AND CASE WHEN @RefItem = '1' THEN RC1.CUSTOM_NAME1
		                                   WHEN @RefItem = '2' THEN RC1.CUSTOM_NAME2
		                                   ELSE RC1.CUSTOM_NAME
		                              END          LIKE @CustomNm + '%'
			</if>
		                        GROUP BY R1.COMP_CODE, R1.DIV_CODE, R1.INOUT_CODE, R1.CREATE_LOC) B ON B.COMP_CODE  = A.COMP_CODE
		                                                                                           AND B.DIV_CODE   = A.DIV_CODE
		                                                                                           AND B.INOUT_CODE = A.INOUT_CODE
		                                                                                           AND B.CREATE_LOC = A.CREATE_LOC
		          WHERE A.COMP_CODE  = @CompCode
		            AND A.DIV_CODE   = @DivCode
		            AND SUBSTRING(A.INOUT_DATE, 1, 4) = @BasisYYYY
		            AND A.INOUT_TYPE = '1'
				<!--2021.08 표준화 작업 Start-->
		        /* 거래처코드		*/
			    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.INOUT_CODE = @CustomCd
				</if>
				<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.INOUT_CODE LIKE @CustomCd + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND		(@RefItem       = N'0' AND C1.CUSTOM_NAME  LIKE N'%' + @CustomNm  + N'%')
						OR	(@RefItem       = N'1' AND C1.CUSTOM_NAME1 LIKE N'%' + @CustomNm  + N'%')
						OR	(@RefItem       = N'2' AND C1.CUSTOM_NAME2 LIKE N'%' + @CustomNm  + N'%')
				</if>
				<!--2021.08 표준화 작업 End-->
		          GROUP BY A.COMP_CODE, A.DIV_CODE, A.INOUT_CODE, A.CREATE_LOC, SUBSTRING(A.INOUT_DATE, 5, 2)
		                 , B.PRE_AVERAGE
		                 , C1.CUSTOM_NAME
		                 , C1.CUSTOM_NAME1
		                 , C1.CUSTOM_NAME2
		                 , C3.ITEM_ACCOUNT
		  ) Z
		 GROUP BY Z.COMP_CODE
		        , Z.DIV_CODE
		        , Z.CUSTOM_CODE
		        , Z.CUSTOM_NAME
		        , Z.ITEM_ACCOUNT
		        --, Z.CREATE_LOC_REAL
		        , Z.CREATE_LOC
		        , Z.PRE_AVERAGE
		 ORDER BY Z.COMP_CODE, Z.DIV_CODE, Z.ITEM_ACCOUNT, Z.CREATE_LOC, Z.CUSTOM_CODE
	</select>
</mapper>