<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr250skrvServiceImpl">
	<select id="mtr250skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* mtr250skrv.Cmtr250skrv[fnMtr250krQ]Query01	*/
BEGIN
	SET NOCOUNT ON
	SET ARITHABORT ON
	<!--2021.08 표준화 작업 Start-->	
	DECLARE @RefItem		NVARCHAR(01)
		
	/* 명칭 참조 유형 */
	SELECT TOP 1 @RefItem = REF_ITEM
	FROM BSA300T WITH (NOLOCK)
	WHERE USER_ID = #{S_USER_ID}
		
	SET @RefItem = ISNULL(@RefItem, N'0')
	<!--2021.08 표준화 작업 End-->
		    
	/* 데이터 조회(품목별 기준) --------------------------------------------------------- */

    DECLARE               @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
                            , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
                            , @INOUT_FR_DATE       NVARCHAR(08)             --(필수) 출고일(FR)
                            , @INOUT_TO_DATE       NVARCHAR(08)             --(필수) 출고일(TO)
                            , @INOUT_PRSN          NVARCHAR(10)             --(선택) 출고담당
                            , @WH_CODE             NVARCHAR(08)             --(선택) 창고
                            , @INOUT_CODE_TYPE     NVARCHAR(01)             --(선택) 출고처구분
                            , @INOUT_CODE1         NVARCHAR(08)             --(선택) 출고처코드(부서)
                            , @INOUT_CODE2         NVARCHAR(08)             --(선택) 출고처코드(창고)
                            , @INOUT_CODE3         NVARCHAR(08)             --(선택) 출고처코드(작업장)
                            , @INOUT_TYPE_DETAIL   NVARCHAR(03)             --(선택) 출고유형
                            , @ITEM_ACCOUNT        NVARCHAR(02)             --(선택) 품목계정
                            , @ITEM_CODE           NVARCHAR(20)             --(선택) 품목코드
                            , @USER_ID             NVARCHAR(100)             --(필수) USER ID
                            , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2
                            , @ITEM_LEVEL1         NVARCHAR(10)             --(선택) 대분류
                            , @ITEM_LEVEL2         NVARCHAR(10)             --(선택) 중분류
                            , @ITEM_LEVEL3         NVARCHAR(10)             --(선택) 소분류
                            , @WKORD_NUM           NVARCHAR(20)             --(선택) 작업지시번호
                            , @MOVE_FLAG           NVARCHAR(01)             -- 이동포함여부
                            , @MUTISELECT_YN       NVARCHAR(01)

		SET @COMP_CODE                  =   #{S_COMP_CODE}
        SET @DIV_CODE                   =   #{DIV_CODE}
        SET @INOUT_FR_DATE              =   #{INOUT_FR_DATE}
        SET @INOUT_TO_DATE              =   #{INOUT_TO_DATE}
        SET @INOUT_PRSN                 =   #{INOUT_PRSN}
        SET @WH_CODE                    =   #{WH_CODE}
 --       SET @INOUT_CODE_TYPE            =   {INOUT_CODE_TYPE}
        SET @INOUT_CODE1                =   #{INOUT_CODE1}
        SET @INOUT_CODE2                =   #{INOUT_CODE2}
        SET @INOUT_CODE3                =   #{INOUT_CODE3}
--        SET @INOUT_TYPE_DETAIL          =   {INOUT_TYPE_DETAIL}
--        SET @ITEM_ACCOUNT               =   {ITEM_ACCOUNT}
        SET @ITEM_CODE                  =   #{ITEM_CODE}
        SET @USER_ID                    =   #{S_USER_ID}
        SET @ITEM_LEVEL1                =   #{ITEM_LEVEL1}
        SET @ITEM_LEVEL2                =   #{ITEM_LEVEL2}
        SET @ITEM_LEVEL3                =   #{ITEM_LEVEL3}
        SET @WKORD_NUM                  =   #{WKORD_NUM}
        SET @MOVE_FLAG                  =   #{MOVE_FLAG}
        SET @MUTISELECT_YN              =   #{MUTISELECT_YN}

        SET @QUERY_TYPE                 =   #{QUERY_TYPE}

    SELECT
           		A.INDEX01            --  품목별 : A.ITEM_CODE         ,거래처별 : A.INOUT_CODE_TYPE
              , A.INDEX02            --  품목별 : A.ITEM_NAME         ,거래처별 : A.INOUT_CODE
              , A.INDEX03            --  품목별 : A.SPEC              ,거래처별 : A.CUSTOM_NAME
              , A.INOUT_DATE
              , A.INDEX04            --  품목별 : A.INOUT_CODE_TYPE   ,거래처별 : A.ITEM_CODE
              , A.INDEX05            --  품목별 : A.INOUT_CODE        ,거래처별 : A.ITEM_NAME
              , A.INDEX06            --  품목별 : A.CUSTOM_NAME       ,거래처별 : A.SPEC
              , A.INOUT_Q
              , A.STOCK_UNIT
              , A.WH_CODE
              , A.INOUT_PRSN
              , A.INOUT_METH
              , A.INOUT_TYPE_DETAIL
              , A.CREATE_LOC
              , A.INOUT_NUM
              , A.DIV_CODE
              , A.INOUT_I
              , A.INOUT_CAL_P
              , A.LOT_NO
              , A.REMARK
              , A.PROJECT_NO
              , A.INSERT_DB_USER
              , A.INSERT_DB_TIME
              , A.UPDATE_DB_USER
              , A.UPDATE_DB_TIME
			  , A.INOUT_SEQ
			  , A.MAKE_DATE
			  , A.MAKE_EXP_DATE
			  , A.TOP_ITEM_CODE
			  , A.TOP_ITEM_NAME
			  , A.TOP_LOT_NO
			  , A.WKORD_NUM
			  , A.PRODT_SPEC
            FROM
                        (
                            SELECT
                                   CASE WHEN @QUERY_TYPE = '1' THEN  M1.ITEM_CODE
                                        WHEN @QUERY_TYPE = '2' THEN M51.CODE_NAME
                                        ELSE ''
                                   END                                                                                             AS INDEX01
                                 , CASE WHEN @QUERY_TYPE = '1' THEN  M2.ITEM_NAME   --uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)
                                        WHEN @QUERY_TYPE = '2' THEN  M1.INOUT_CODE
                                        ELSE ''
                                   END                                                                                             AS INDEX02
                                 , CASE WHEN @QUERY_TYPE = '1' THEN  M2.SPEC
                                        WHEN @QUERY_TYPE = '2' THEN CASE M1.INOUT_CODE_TYPE
                                                                         WHEN '1' THEN M6.TREE_NAME
                                                                         WHEN '2' THEN M7.TREE_NAME
                                                                         WHEN '3' THEN M8.TREE_NAME
                                                                         WHEN '4' THEN M4.CUSTOM_NAME      --uniLITE.fnCustName(@USER_ID, M1.INOUT_CODE)
                                                                    END
                                   END                                                                                             AS INDEX03
                                 , unilite.fnGetUserDateComp(M1.COMP_CODE, M1.INOUT_DATE)                                          AS INOUT_DATE
                                 , CASE WHEN @QUERY_TYPE = '1' THEN M51.CODE_NAME
                                        WHEN @QUERY_TYPE = '2' THEN  M1.ITEM_CODE
                                   END                                                                                             AS INDEX04
                                 , CASE WHEN @QUERY_TYPE = '1' THEN  M1.INOUT_CODE
                                        WHEN @QUERY_TYPE = '2' THEN M2.ITEM_NAME    --uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)
                                   END                                                                                             AS INDEX05

                                 , CASE WHEN @QUERY_TYPE = '1' THEN  CASE M1.INOUT_CODE_TYPE
                                                                         WHEN '1' THEN M6.TREE_NAME
                                                                         WHEN '2' THEN M7.TREE_NAME
                                                                         WHEN '3' THEN M8.TREE_NAME
                                                                         WHEN '4' THEN M4.CUSTOM_NAME   --unilite.fnCustName(@USER_ID, M1.INOUT_CODE)
                                                                     END
                                        WHEN @QUERY_TYPE = '2' THEN  M2.SPEC
                                   END                                                                                             AS INDEX06
                                 , M1.INOUT_Q                                                                                      AS INOUT_Q
                                 , M2.STOCK_UNIT                                                                                   AS STOCK_UNIT
                                 , M9.TREE_NAME                                                                                    AS WH_CODE
                                 , M52.CODE_NAME                                                                                   AS INOUT_PRSN
                                 , M53.CODE_NAME                                                                                   AS INOUT_METH
                                 , M54.CODE_NAME                                                                                   AS INOUT_TYPE_DETAIL
                                 , M55.CODE_NAME                                                                                   AS CREATE_LOC
                                 , M1.INOUT_NUM                                                                                    AS INOUT_NUM
                                 , M56.CODE_NAME                                                                                   AS DIV_CODE
                                 , M1.INOUT_CAL_I                                                                                  AS INOUT_I
                                 , M1.INOUT_CAL_P                                                                                  AS INOUT_CAL_P
                                 , M1.LOT_NO                                                                                       AS LOT_NO
                                 , M1.REMARK                                                                                       AS REMARK
                                 , M1.PROJECT_NO                                                                                   AS PROJECT_NO
                                 , M1.INSERT_DB_USER                                                                               AS INSERT_DB_USER
                                 , M1.INSERT_DB_TIME                                                                               AS INSERT_DB_TIME
                                 , M1.UPDATE_DB_USER                                                                               AS UPDATE_DB_USER
                                 , M1.UPDATE_DB_TIME                                                                               AS UPDATE_DB_TIME
                                 , M1.INOUT_SEQ																						AS INOUT_SEQ
                                 , M10.INSTOCK_DATE																				AS MAKE_DATE
								 , M10.MAKE_EXP_DATE
								 , M12.ITEM_CODE																				AS TOP_ITEM_CODE
								 , M13.ITEM_NAME																				AS TOP_ITEM_NAME
								 , M12.LOT_NO																					AS TOP_LOT_NO
								 , M11.WKORD_NUM                                                                                AS WKORD_NUM
								 , M13.SPEC																						AS PRODT_SPEC
                            FROM                BTR100T  M1 WITH (NOLOCK, INDEX(BTR100T_IDX03))
                                    LEFT JOIN   BPR100T  M2 WITH (NOLOCK) ON M2.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M2.ITEM_CODE   =  M1.ITEM_CODE
                                    LEFT JOIN   BPR200T  M3 WITH (NOLOCK) ON M3.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M3.DIV_CODE    =  M1.DIV_CODE
                                                                         AND M3.ITEM_CODE   =  M1.ITEM_CODE
                                    LEFT JOIN   BCM100T  M4 WITH (NOLOCK) ON M4.COMP_CODE   =  M1.COMP_CODE
									                                     AND M4.CUSTOM_CODE =  M1.INOUT_CODE
									--LEFT JOIN   BIV600T  M4 WITH (NOLOCK) ON M4.COMP_CODE   =  M1.COMP_CODE
                                    --                                     AND M4.DIV_CODE    =  M1.DIV_CODE
                                    --                                     AND M4.INOUT_NUM   =  M1.INOUT_NUM
                                    --                                     AND M4.INOUT_SEQ   =  M1.INOUT_SEQ
                                    --                                     AND M4.INOUT_TYPE  =  M1.INOUT_TYPE
                                    --                                     AND M4.SPLIT_SEQ   =  0
                                    --                                     AND M4.DEL_FLAG    =  'N'
                                    LEFT JOIN   BSA100T M51 WITH (NOLOCK) ON M51.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M51.MAIN_CODE  =  N'B005'
                                                                         AND M51.SUB_CODE   =  M1.INOUT_CODE_TYPE
                                    LEFT JOIN   BSA100T M52 WITH (NOLOCK) ON M52.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M52.MAIN_CODE  =  N'B024'
                                                                         AND M52.SUB_CODE   =  M1.INOUT_PRSN
                                    LEFT JOIN   BSA100T M53 WITH (NOLOCK) ON M53.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M53.MAIN_CODE  =  N'B036'
                                                                         AND M53.SUB_CODE   =  M1.INOUT_METH
                                    LEFT JOIN   BSA100T M54 WITH (NOLOCK) ON M54.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M54.MAIN_CODE  =  N'M104'
                                                                         AND M54.SUB_CODE   =  M1.INOUT_TYPE_DETAIL
                                    LEFT JOIN   BSA100T M55 WITH (NOLOCK) ON M55.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M55.MAIN_CODE  =  N'B031'
                                                                         AND M55.SUB_CODE   =  M1.CREATE_LOC
                                    LEFT JOIN   BSA100T M56 WITH (NOLOCK) ON M56.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M56.MAIN_CODE  =  N'B001'
                                                                         AND M56.SUB_CODE   =  M1.DIV_CODE
                                    LEFT JOIN   BSA210T  M6 WITH (NOLOCK) ON M6.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M6.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M6.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA220T  M7 WITH (NOLOCK) ON M7.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M7.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M7.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA230T  M8 WITH (NOLOCK) ON M8.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M8.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M8.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA220T  M9 WITH (NOLOCK) ON M9.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M9.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M9.TREE_CODE   =  M1.WH_CODE
									 LEFT JOIN  BIV150TV  M10 WITH (NOLOCK) ON M10.COMP_CODE=  M1.COMP_CODE
																		 AND M10.DIV_CODE	=  M1.DIV_CODE
																		 AND M10.WH_CODE	=  M1.WH_CODE
																		 AND M10.ITEM_CODE	=  M1.ITEM_CODE
																		 AND M10.LOT_NO	    =  M1.LOT_NO
																		 AND M10.WH_CELL_CODE  = M1.WH_CELL_CODE
									 LEFT JOIN PMP100T M11 WITH (NOLOCK) ON M11.COMP_CODE	= M1.COMP_CODE --자재출고수불의 작업지시 번호로 TOP_WKORD_NUM 가져오기
																		 AND M11.DIV_CODE   = M1.DIV_CODE
																		 AND M11.WKORD_NUM  = M1.ORDER_NUM
																		 AND M11.LINE_END_YN = 'Y'
									 LEFT JOIN PMP100T M12 WITH (NOLOCK) ON  M12.COMP_CODE  = M11.COMP_CODE --자재출고수불의 작업지시 번호의 TOP_WKORD_NUM에 해당하는 제품, LOT_NO가져오기
																		 AND M12.DIV_CODE	= M11.DIV_CODE
																		 AND M12.WKORD_NUM  = M11.TOP_WKORD_NUM
																		 AND M12.LINE_END_YN = 'Y'
									 LEFT JOIN BPR100T M13 WITH (NOLOCK) ON  M13.COMP_CODE  = M12.COMP_CODE --자재출고수불의 작업지시 번호의 TOP_WKORD_NUM에 해당하는 제품명 가져오기
																	     AND M13.ITEM_CODE  = M12.ITEM_CODE
                            WHERE   M1.COMP_CODE             =  #{S_COMP_CODE}
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
					AND M1.DIV_CODE              =  #{DIV_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
					AND M1.INOUT_DATE           &gt;=  #{INOUT_FR_DATE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
					AND M1.INOUT_DATE           &lt;=  #{INOUT_TO_DATE}
				</if>
					AND M1.INOUT_TYPE            =  N'2'
					AND ISNULL(M1.ORDER_TYPE,'')!=  N'4'
					
				<if test="MOVE_FLAG == &quot;N&quot;">	
					AND ((M1.CREATE_LOC           =  N'2' OR M1.CREATE_LOC = N'3') AND M1.INOUT_METH != '3') 
				</if>	
				
				<if test="MOVE_FLAG == &quot;Y&quot;">
					AND (M1.CREATE_LOC =  N'2' OR M1.CREATE_LOC = N'3' OR (M1.CREATE_LOC = '4' AND M1.INOUT_METH = '3' AND M1.INOUT_TYPE_DETAIL = '99' ))
				</if>

					/* 선택 조건 Start */
				<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
					AND M1.INOUT_PRSN			 =  #{INOUT_PRSN}
				</if>
				<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
					AND M1.WH_CODE               =  #{WH_CODE}
				</if>
				
				--20200802 수정: 멀티 선택(INOUT_TYPE_DETAIL, ITEM_ACCOUNT)
				<if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
					AND M1.INOUT_CODE_TYPE IN
						<foreach collection="INOUT_CODE_TYPE" item="item3" separator="," close=")" open="(">
							 #{item3}
						</foreach>	
					<if test="MUTISELECT_YN == &quot;N&quot;">
						<if test="@foren.Ognl@isNotEmpty(INOUT_CODE1)">
						AND M1.INOUT_CODE            =  #{INOUT_CODE1}
						</if>
						<if test="@foren.Ognl@isNotEmpty(INOUT_CODE2)">
						AND M1.INOUT_CODE            =  #{INOUT_CODE2}
						</if>
						<if test="@foren.Ognl@isNotEmpty(INOUT_CODE3)">
						AND M1.INOUT_CODE            =  #{INOUT_CODE3}
						</if>						
	
					</if>						
											
				</if>		

				
				--20200302 수정: 멀티 선택(INOUT_TYPE_DETAIL, ITEM_ACCOUNT)
				<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
					AND M1.INOUT_TYPE_DETAIL IN
						<foreach collection="INOUT_TYPE_DETAIL" item="item" separator="," close=")" open="(">
							 #{item}
						</foreach>									 -- 창고
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					AND M3.ITEM_ACCOUNT IN
						<foreach collection="ITEM_ACCOUNT" item="item2" separator="," close=")" open="(">
							 #{item2}
						</foreach>								 -- 계정
				</if>
<!--
				<if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
					AND M1.INOUT_TYPE_DETAIL     =  {INOUT_TYPE_DETAIL}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					AND M3.ITEM_ACCOUNT          =  {ITEM_ACCOUNT}
				</if>
-->
				<!--2021.08 표준화 작업 Start-->
				/* 품목코드 */
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND M1.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
					AND M1.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
					AND		(@RefItem       = N'0' AND M2.ITEM_NAME  LIKE N'%' + #{ITEM_NAME} + N'%')
						OR	(@RefItem       = N'1' AND M2.ITEM_NAME1 LIKE N'%' + #{ITEM_NAME} + N'%')
						OR	(@RefItem       = N'2' AND M2.ITEM_NAME2 LIKE N'%' + #{ITEM_NAME} + N'%')
				</if>
				<!--2021.08 표준화 작업 End-->

				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
					AND M2.ITEM_LEVEL1		     =  #{ITEM_LEVEL1}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
					AND M2.ITEM_LEVEL2			 =  #{ITEM_LEVEL2}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
					AND M2.ITEM_LEVEL3			 =  #{ITEM_LEVEL3}
				</if>
				<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
                    AND M11.WKORD_NUM             =  #{WKORD_NUM}
                </if>
					/* 선택 조건 End */
            ) A
       ORDER BY 1,2,4,5

	SET NOCOUNT OFF
	SET ARITHABORT OFF

END

	</select>

	<select id="mtr250skrvServiceImpl.printList" parameterType="Map" resultType="rMap">
			/* mtr250skrvServiceImpl.printList	*/
			DECLARE      @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
							, @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
							, @USER_ID             NVARCHAR(100)             --(필수) USER ID

			SET @COMP_CODE                =   #{S_COMP_CODE}
	        SET @DIV_CODE                 =   #{DIV_CODE}
			SET @USER_ID                  =   #{S_USER_ID}

                            SELECT M1.INOUT_DATE
								     , M1.ITEM_CODE
									 , M2.ITEM_NAME
									 , M1.LOT_NO
									 , SUBSTRING(M1.INOUT_DATE,1,4) + REPLICATE('0', 3 - len(convert(varchar,uniLITE.fnGetCalWeek('MASTER', M1.INOUT_DATE)))) + convert(varchar,uniLITE.fnGetCalWeek('MASTER',M1.INOUT_DATE)) AS INOUT_WEEK --입고주차
	                                 , M1.INOUT_Q
	                                 , M2.STOCK_UNIT
	                                 , M9.TREE_NAME
	                                 , M3.LOCATION
	                                 , M1.INOUT_NUM
									 , M1.INOUT_CODE
									 , M51.CODE_NAME AS INOUT_CODE_GBN
									 , CASE M1.INOUT_CODE_TYPE
											WHEN '1' THEN M6.TREE_NAME
											WHEN '2' THEN M7.TREE_NAME
											WHEN '3' THEN M8.TREE_NAME
											WHEN '4' THEN M4.CUSTOM_NAME    --uniLITE.fnCustName(@USER_ID, M1.INOUT_CODE)
	                                    END																AS INOUT_CODE_NAME
	                                 , M1.INOUT_CAL_I AS INOUT_I
	                                 , M1.INOUT_CAL_P
	                                 , M1.LOT_NO
	                                 , M1.REMARK
	                                 , M1.PROJECT_NO
									 , M10.INSTOCK_DATE		AS MAKE_DATE
									 , M10.MAKE_EXP_DATE
									 , M3.ITEM_ACCOUNT
									 , (SELECT  MAX(MAKE_LOT_NO)  AS MAKE_LOT_NO
										FROM BTR100T WITH (NOLOCK)
										WHERE COMP_CODE = M1.COMP_CODE
										AND   DIV_CODE	= M1.DIV_CODE
										AND   LOT_NO    = M1.LOT_NO
										AND   ITEM_CODE = M1.ITEM_CODE
										AND   INOUT_TYPE = '1'
										GROUP BY  COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO) AS MAKE_LOT_NO
                            FROM                BTR100T  M1 WITH (NOLOCK, INDEX(BTR100T_IDX03))
                                    LEFT JOIN   BPR100T  M2 WITH (NOLOCK) ON M2.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M2.ITEM_CODE   =  M1.ITEM_CODE
                                    LEFT JOIN   BPR200T  M3 WITH (NOLOCK) ON M3.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M3.DIV_CODE    =  M1.DIV_CODE
                                                                         AND M3.ITEM_CODE   =  M1.ITEM_CODE
                                    LEFT JOIN   BCM100T  M4 WITH (NOLOCK) ON M4.COMP_CODE   =  M1.COMP_CODE
									                                     AND M4.CUSTOM_CODE =  M1.INOUT_CODE
                                    --LEFT JOIN   BIV600T  M4 WITH (NOLOCK) ON M4.COMP_CODE   =  M1.COMP_CODE
                                    --                                     AND M4.DIV_CODE    =  M1.DIV_CODE
                                    --                                     AND M4.INOUT_NUM   =  M1.INOUT_NUM
                                    --                                     AND M4.INOUT_SEQ   =  M1.INOUT_SEQ
                                    --                                     AND M4.INOUT_TYPE  =  M1.INOUT_TYPE
                                    --                                     AND M4.SPLIT_SEQ   =  0
                                    --                                     AND M4.DEL_FLAG    =  'N'
                                    LEFT JOIN   BSA100T M51 WITH (NOLOCK) ON M51.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M51.MAIN_CODE  =  N'B005'
                                                                         AND M51.SUB_CODE   =  M1.INOUT_CODE_TYPE
                                    LEFT JOIN   BSA100T M52 WITH (NOLOCK) ON M52.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M52.MAIN_CODE  =  N'B024'
                                                                         AND M52.SUB_CODE   =  M1.INOUT_PRSN
                                    LEFT JOIN   BSA100T M53 WITH (NOLOCK) ON M53.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M53.MAIN_CODE  =  N'B036'
                                                                         AND M53.SUB_CODE   =  M1.INOUT_METH
                                    LEFT JOIN   BSA100T M54 WITH (NOLOCK) ON M54.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M54.MAIN_CODE  =  N'M104'
                                                                         AND M54.SUB_CODE   =  M1.INOUT_TYPE_DETAIL
                                    LEFT JOIN   BSA100T M55 WITH (NOLOCK) ON M55.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M55.MAIN_CODE  =  N'B031'
                                                                         AND M55.SUB_CODE   =  M1.CREATE_LOC
                                    LEFT JOIN   BSA100T M56 WITH (NOLOCK) ON M56.COMP_CODE  =  M1.COMP_CODE
                                                                         AND M56.MAIN_CODE  =  N'B001'
                                                                         AND M56.SUB_CODE   =  M1.DIV_CODE
                                    LEFT JOIN   BSA210T  M6 WITH (NOLOCK) ON M6.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M6.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M6.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA220T  M7 WITH (NOLOCK) ON M7.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M7.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M7.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA230T  M8 WITH (NOLOCK) ON M8.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M8.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M8.TREE_CODE   =  M1.INOUT_CODE
                                    LEFT JOIN   BSA220T  M9 WITH (NOLOCK) ON M9.COMP_CODE   =  M1.COMP_CODE
                                                                         AND M9.TYPE_LEVEL  =  M1.DIV_CODE
                                                                         AND M9.TREE_CODE   =  M1.WH_CODE
								    LEFT JOIN  BIV150T  M10 WITH (NOLOCK) ON M10.COMP_CODE	=  M1.COMP_CODE
																		 AND M10.DIV_CODE	=  M1.DIV_CODE
																		 AND M10.WH_CODE	=  M1.WH_CODE
																		 AND M10.ITEM_CODE	=  M1.ITEM_CODE
																		 AND M10.LOT_NO	    =  M1.LOT_NO
                            WHERE   M1.COMP_CODE           =  @COMP_CODE
								AND   M1.DIV_CODE              =  @DIV_CODE
							    AND (M1.INOUT_NUM + CONVERT(NVARCHAR(10),M1.INOUT_SEQ)) IN (select value from  uniLITE.fnSplit(#{INOUT_NUMS}, ','))

							ORDER BY M1.COMP_CODE, M1.DIV_CODE,M1.INOUT_NUM, M1.INOUT_SEQ
    </select>
</mapper>