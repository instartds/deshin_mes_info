<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr111skrvServiceImpl">
	<select id="mtr111skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">

/* UMrpt01krv.CMtr110kr, Public[fnmtr110q] Query01 자재 입고현황 */
BEGIN
	SET NOCOUNT ON
	SET ARITHABORT ON

DECLARE @START_TIME DATETIME
      , @END_TIME   DATETIME
      , @DIFF_TIME  NUMERIC(10, 0)

SET @START_TIME = GETDATE()


	 DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */

    SET @CompCode = #{S_COMP_CODE}
    
	<!--2021.08 표준화 작업 추가-->
	DECLARE	@RefItem	NVARCHAR(01)
	
	SELECT @RefItem		= ISNULL(NULLIF(REF_ITEM, ''), 0)
	FROM BSA300T
	WHERE COMP_CODE	= #{S_COMP_CODE}
	AND USER_ID		= #{S_USER_ID}


SELECT
	R2.LEVEL_NAME  AS ITEM_LEVEL1,
    R3.LEVEL_NAME  AS ITEM_LEVEL2,
    R4.LEVEL_NAME  AS ITEM_LEVEL3,
	A.ITEM_CODE,
	B.ITEM_NAME,
	B.SPEC,
	A.INOUT_DATE,
	A.INOUT_CODE,
	D.CUSTOM_NAME,
	CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE ISNULL(A.INOUT_Q, 0) *(-1) END AS INOUT_Q,
	ISNULL(A.INOUT_P,0) AS INOUT_P,
	CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_I, 0) ELSE ISNULL(A.INOUT_I, 0) *(-1) END AS INOUT_I,
	CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_TAX_AMT, 0) ELSE ISNULL(A.INOUT_TAX_AMT, 0) *(-1) END AS INOUT_TAX_AMT,
	CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_I, 0) + ISNULL(A.INOUT_TAX_AMT,0) ELSE (ISNULL(A.INOUT_I, 0) + ISNULL(A.INOUT_TAX_AMT,0)) *(-1) END AS INOUT_TOTAL_I,
	A.TAX_TYPE,
	B.STOCK_UNIT,
	A.INOUT_TYPE,
	A.WH_CODE,
	A.INOUT_PRSN,
	A.INOUT_NUM,
	A.INOUT_METH,
	A.ORDER_NUM,
	A.ORDER_SEQ,
	ISNULL(A.ACCOUNT_Q,0) AS BUY_Q,
	A.REMARK,
	A.LOT_NO,
	A.UPDATE_DB_TIME,
	A.CREATE_LOC,
	A.DIV_CODE,
	CASE WHEN ISNULL(A.CHANGE_BASIS_NUM,'') != '' THEN '확정'
		 ELSE '미확정'
		 END CONFIRM_YN ,

    J.ORDER_UNIT_Q,
    J.ORDER_UNIT_P,
    J.ORDER_O, --발주금액
    ((CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0) ELSE ISNULL(A.INOUT_Q, 0) *(-1) END) * J.ORDER_UNIT_P) AS R_ORDER_P, -- 입고대발주액

    J2.ORDER_DATE,
    R1.CODE_NAME AS GUBUN, -- 구분
	J.SO_NUM

	FROM       BTR100T A WITH(NOLOCK)
	INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									 AND B.ITEM_CODE = A.ITEM_CODE
	INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
									 AND C.DIV_CODE = A.DIV_CODE
									 AND C.ITEM_CODE = A.ITEM_CODE
	INNER JOIN BCM100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
									 AND D.CUSTOM_CODE = A.INOUT_CODE
	LEFT JOIN BSA210T H WITH(NOLOCK) ON H.COMP_CODE  = A.COMP_CODE
              						 AND H.TYPE_LEVEL = A.DIV_CODE
              						 AND H.TREE_CODE  = A.DEPT_CODE

    LEFT JOIN MPO200T J WITH(NOLOCK) ON J.COMP_CODE = A.COMP_CODE
                                    AND J.IN_DIV_CODE = A.DIV_CODE
                                    AND J.ORDER_NUM = A.ORDER_NUM
                                    AND J.ORDER_SEQ = A.ORDER_SEQ
	INNER JOIN MPO100T J2 WITH(NOLOCK) ON J2.COMP_CODE = J.COMP_CODE
									AND J2.DIV_CODE    = J.DIV_CODE
									AND J2.ORDER_NUM   = J.ORDER_NUM
    LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
                                     AND R1.SUB_CODE = A.INOUT_TYPE_DETAIL
                                     AND R1.MAIN_CODE = 'M103'

    LEFT JOIN   BPR000T  R2 WITH (NOLOCK) ON R2.COMP_CODE        = B.COMP_CODE
	                                     AND R2.LEVEL1          != '*'
	                                     AND R2.LEVEL1           = B.ITEM_LEVEL1
	                                     AND R2.LEVEL2           = '*'
	                                     AND R2.LEVEL3           = '*'
    LEFT JOIN   BPR000T  R3 WITH (NOLOCK) ON R3.COMP_CODE        = B.COMP_CODE
                                         AND R3.LEVEL1          != '*'
                                         AND R3.LEVEL1           = B.ITEM_LEVEL1
                                         AND R3.LEVEL2          != '*'
                                         AND R3.LEVEL2           = B.ITEM_LEVEL2
                                         AND R3.LEVEL3           = '*'
    LEFT JOIN   BPR000T  R4 WITH (NOLOCK) ON R4.COMP_CODE        = B.COMP_CODE
                                         AND R4.LEVEL1          != '*'
                                         AND R4.LEVEL1           = B.ITEM_LEVEL1
                                         AND R4.LEVEL2          != '*'
                                         AND R4.LEVEL2           = B.ITEM_LEVEL2
                                         AND R4.LEVEL3          != '*'
                                         AND R4.LEVEL3           = B.ITEM_LEVEL3

	WHERE A.COMP_CODE = @CompCode
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	  AND A.DIV_CODE  = #{DIV_CODE}
	</if>
	  AND A.INOUT_DATE &gt;= #{INOUT_FR_DATE}
	  AND A.INOUT_DATE &lt;= #{INOUT_TO_DATE}
	  AND A.CREATE_LOC IN ('2' , '6')

	<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	  AND A.WH_CODE = #{WH_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND A.INOUT_CODE = #{CUSTOM_CODE}
	</if>
	<!--2021.08 표준화 작업 Start-->
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		AND A.INOUT_CODE = #{CUSTOM_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		AND		(@RefItem       = N'0' AND D.CUSTOM_NAME  LIKE N'%' + #{CUSTOM_NAME} + N'%')
			OR	(@RefItem       = N'1' AND D.CUSTOM_NAME1 LIKE N'%' + #{CUSTOM_NAME} + N'%')
			OR	(@RefItem       = N'2' AND D.CUSTOM_NAME2 LIKE N'%' + #{CUSTOM_NAME} + N'%')
	</if>
	<!--2021.08 표준화 작업 End-->
	
	<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
			AND J2.ORDER_TYPE = #{ORDER_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
			AND A.INOUT_PRSN = #{INOUT_PRSN}
	</if>

	<!--2021.08 표준화 작업 Start-->
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		AND A.ITEM_CODE = #{ITEM_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		AND		(@RefItem       = N'0' AND B.ITEM_NAME  LIKE N'%' + #{ITEM_NAME} + N'%')
			OR	(@RefItem       = N'1' AND B.ITEM_NAME1 LIKE N'%' + #{ITEM_NAME} + N'%')
			OR	(@RefItem       = N'2' AND B.ITEM_NAME2 LIKE N'%' + #{ITEM_NAME} + N'%')
	</if>
	<!--2021.08 표준화 작업 End-->
	
	<if test="INOUT_TYPE == &quot;A&quot;">
			AND A.INOUT_TYPE IN ('1','4')	/*반품*/
	</if>
	<if test="INOUT_TYPE == &quot;1&quot;">
			AND A.INOUT_TYPE = '1'		/*입고*/
	</if>
	<if test="INOUT_TYPE == &quot;4&quot;">
			AND A.INOUT_TYPE = '4'		/*반품*/
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
			AND B.ITEM_LEVEL1 = #{ITEM_LEVEL1}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
			AND B.ITEM_LEVEL2 = #{ITEM_LEVEL2}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
			AND B.ITEM_LEVEL3 = #{ITEM_LEVEL3}
	</if>

	<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	 	AND H.TREE_LEVEL LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =H.COMP_CODE AND TYPE_LEVEL=H.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
	</if>

  <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
  	AND A.LOT_NO LIKE #{LOT_NO} + '%'
  </if>
  
<!-- SET @END_TIME   = GETDATE()

SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)

  EXEC uniLITE.SP_QRY_TIME 'mtr111skrv', '입고현황 상세조회', #{INOUT_FR_DATE}, #{INOUT_TO_DATE}, @DIFF_TIME

	SET ARITHABORT OFF
	SET NOCOUNT OFF -->

END
	</select>

<select id="mtr111skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
SELECT
	A.WH_CODE
FROM BSA210T A WITH(NOLOCK)
	LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									AND B.DEPT_CODE = A.TREE_CODE
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND B.USER_ID = #{S_USER_ID}

</select>
</mapper>