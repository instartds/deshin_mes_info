<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr113skrvServiceImpl">
	<select id="mtr113skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--UMrpt01krv.CMtr110kr, Public[fnmtr110q] Query01 자재 입고현황
		BEGIN
		        DECLARE @COMP_CODE           NVARCHAR(08)             --(필수) 법인코드
		              , @DIV_CODE            NVARCHAR(08)             --(필수) 사업장
		              , @INOUT_FR_DATE       NVARCHAR(08)             --(필수) 입고일(FR)
		              , @INOUT_TO_DATE       NVARCHAR(08)             --(필수) 입고일(TO)
		              , @ORDER_TYPE          NVARCHAR(02)             --(선택) 발주형태
		              , @INOUT_CODE          NVARCHAR(20)             --(선택) 거래처코드
		              , @INOUT_PRSN          NVARCHAR(10)             --(선택) 입고담당자
		              , @WH_CODE             NVARCHAR(08)             --(선택) 입고창고
		              , @ITEM_ACCOUNT        NVARCHAR(02)             --(선택) 품목계정
		              , @ITEM_CODE           NVARCHAR(20)             --(선택) 품목코드
		              , @INOUT_TYPE_DETAIL   NVARCHAR(03)              --(선택) 입고유형
		              , @DVRY_TYPE           NVARCHAR(01)              --(필수) 납기경과 (전체 : 0 , 납기준수 : 1, 납기경과 : 2)
		              , @PROJECT_NO          NVARCHAR(20)             --(선택) 관리번호
		              , @ORDER_FR_DATE       NVARCHAR(08)             --(선택) 발주일(FR)
		              , @ORDER_TO_DATE       NVARCHAR(08)             --(선택) 발주일(TO)
		              , @DVRY_FR_DATE        NVARCHAR(08)             --(선택) 납기일(FR)
		              , @DVRY_TO_DATE        NVARCHAR(08)             --(선택) 납기일(TO)
		              , @INOUT_NAME          NVARCHAR(20)             --(선택) 거래처명
		              , @ITEM_NAME           NVARCHAR(200)            --(선택) 품목명
		              , @USER_ID             NVARCHAR(100)            --(필수) USER ID
		              , @QUERY_TYPE          NVARCHAR(01)             --(필수) 품목별 : 1, 거래처별 : 2
		              , @MONEY_UNIT          NVARCHAR(3)              --통화
		              , @ITEM_LEVEL1         NVARCHAR(05)             --대분류
		              , @ITEM_LEVEL2         NVARCHAR(05)             --중분류
		              , @ITEM_LEVEL3         NVARCHAR(05)             --소분류
		              , @CREATE_LOC          NVARCHAR(03)             --생성경로

		        SET NOCOUNT ON
		        SET ARITHABORT ON

		        SET @COMP_CODE                  =   #{S_COMP_CODE}
		        SET @DIV_CODE                   =   #{DIV_CODE}
		        SET @INOUT_FR_DATE              =   #{INOUT_FR_DATE}
		        SET @INOUT_TO_DATE              =   #{INOUT_TO_DATE}
		        SET @ORDER_TYPE                 =   #{ORDER_TYPE}
		        SET @INOUT_CODE                 =   #{CUSTOM_CODE}
		        SET @INOUT_PRSN                 =   #{INOUT_PRSN}
		        SET @WH_CODE                    =   #{WH_CODE}
		        SET @ITEM_ACCOUNT               =   #{ITEM_ACCOUNT}
		        SET @ITEM_CODE                  =   #{ITEM_CODE}
		        SET @INOUT_TYPE_DETAIL          =   #{INOUT_TYPE_DETAIL}
		        SET @DVRY_TYPE                  =   #{DVRY_TYPE}
		        SET @PROJECT_NO                 =   #{PJT_CODE}
		        SET @ORDER_FR_DATE              =   #{ORDER_FR_DATE}
		        SET @ORDER_TO_DATE              =   #{ORDER_TO_DATE}
		        SET @DVRY_FR_DATE               =   #{DVRY_FR_DATE}
		        SET @DVRY_TO_DATE               =   #{DVRY_TO_DATE}
		        SET @INOUT_NAME                 =   #{CUSTOM_NAME}
		        SET @ITEM_NAME                  =   #{ITEM_NAME}
		        SET @USER_ID                    =   #{S_USER_ID}

		        SET @QUERY_TYPE                 =   #{QUERY_TYPE}
		        SET @MONEY_UNIT                 =   #{MONEY_UNIT}
		        SET @ITEM_LEVEL1                =   #{ITEM_LEVEL1}
		        SET @ITEM_LEVEL2                =   #{ITEM_LEVEL2}
		        SET @ITEM_LEVEL3                =   #{ITEM_LEVEL3}
		        SET @CREATE_LOC                 =   #{CREATE_LOC}

				SELECT
				       A.COMP_CODE
		              , A.DIV_CODE
		              , A.INDEX01
		              , A.INDEX04
		              , MAX(A.INDEX02) AS INDEX02
		              , MAX(A.INDEX03) AS INDEX03
		              , MAX(A.INDEX05) AS INDEX05
		              , MAX(A.INDEX06) AS INDEX06
		              , ISNULL(SUM(A.INOUT_Q),0) AS INOUT_Q
		              , ISNULL(AVG(A.INOUT_P),0) AS INOUT_P
		              , ISNULL(SUM(A.INOUT_I),0) AS INOUT_I
		              , ISNULL(SUM(A.EXPENSE_I),0) AS EXPENSE_I
		              , ISNULL(SUM(A.INOUT_I_TOTAL),0) AS INOUT_I_TOTAL
		              , ISNULL(AVG(A.INOUT_FOR_P),0) AS INOUT_FOR_P
		              , ISNULL(SUM(A.INOUT_FOR_O),0) AS INOUT_FOR_O
		              , MAX(A.MONEY_UNIT) AS MONEY_UNIT
		              , ISNULL(AVG(A.EXCHG_RATE_O),0) AS EXCHG_RATE_O
		              , MAX(A.STOCK_UNIT) AS STOCK_UNIT
		              , MAX(A.WH_CODE) AS WH_CODE

		              , MAX(A.INOUT_METH) AS INOUT_METH
		              , MAX(A.INOUT_TYPE_DETAIL) AS INOUT_TYPE_DETAIL

		              , ISNULL(SUM(A.BUY_Q),0) AS BUY_Q
		              , MAX(A.REMARK) AS REMARK

		              , MAX(A.TAX_TYPE) AS TAX_TYPE

                      --20190111 입고량(ORDER_UNIT_Q), 발주단위(ORDER_UNIT) 추가
					  , SUM(A.ORDER_UNIT_Q)                                  AS ORDER_UNIT_Q
					  , A.ORDER_UNIT
					  , MAX(A.ORDER_UNIT_FOR_P) AS ORDER_UNIT_FOR_P
					  , SUM(A.ORDER_UNIT_FOR_O) AS ORDER_UNIT_FOR_O
					  , SUM(A.SQM) 				AS SQM
		            FROM
		                (
		                    SELECT M1.ITEM_CODE                                                                      AS INDEX01
		                         , uniLITE.fnItemNameComp(M1.COMP_CODE, @USER_ID, M1.ITEM_CODE)                      AS INDEX02
		                         , M2.SPEC                                                                           AS INDEX03
		                         , unilite.fnGetUserDateComp(M1.COMP_CODE, M1.INOUT_DATE)                            AS INDEX04
		                         , M1.INOUT_CODE                                                                     AS INDEX05
		                         , uniLITE.fnCustNameComp(M1.COMP_CODE, @USER_ID, M1.INOUT_CODE)                     AS INDEX06
		                         , CASE M1.INOUT_METH
		                                WHEN '6' THEN M1.INOUT_Q * -1
		                                WHEN '5' THEN M1.INOUT_Q * -1
		                                ELSE M1.INOUT_Q
		                           END                                                                               AS INOUT_Q

		                         , CASE M1.INOUT_METH
		                                WHEN '6' THEN M1.INOUT_P * -1
		                                WHEN '5' THEN M1.INOUT_P * -1
		                                ELSE M1.INOUT_P
		                           END                                                                               AS INOUT_P
		                         , CASE M1.INOUT_METH
		                                WHEN '6' THEN M1.INOUT_I * -1
		                                WHEN '5' THEN M1.INOUT_I * -1
		                                ELSE M1.INOUT_I
		                           END                                                                               AS INOUT_I
		                         , ISNULL(M1.EXPENSE_I, 0)                                                           AS EXPENSE_I
		                         , M1.INOUT_I + ISNULL(M1.EXPENSE_I, 0)                                              AS INOUT_I_TOTAL
		                         , CASE M1.MONEY_UNIT
		                                WHEN B2.SUB_CODE THEN 0
		                                ELSE
		                                    CASE M1.INOUT_METH
		                                         WHEN '6' THEN M1.INOUT_FOR_P * -1
		                                         WHEN '5' THEN M1.INOUT_FOR_P * -1
		                                         ELSE M1.INOUT_FOR_P
		                                    END
		                           END                                                                               AS INOUT_FOR_P
		                         , CASE M1.MONEY_UNIT
		                                WHEN B2.SUB_CODE THEN 0
		                                ELSE
		                                    CASE M1.INOUT_METH
		                                         WHEN '6' THEN M1.INOUT_FOR_O * -1
		                                         WHEN '5' THEN M1.INOUT_FOR_O * -1
		                                         ELSE M1.INOUT_FOR_O
		                                    END
		                           END                                                                               AS INOUT_FOR_O
		                         , M1.MONEY_UNIT                                                                     AS MONEY_UNIT
		                         , M1.EXCHG_RATE_O                                                                   AS EXCHG_RATE_O
		                         , M2.STOCK_UNIT
		                         , B6.TREE_NAME                                                                      AS WH_CODE
		                         , B4.CODE_NAME																		 AS INOUT_METH
		                         , B5.CODE_NAME																		 AS INOUT_TYPE_DETAIL

		                         , M7.BUY_Q                                                                          AS BUY_Q
		                         , M1.REMARK                                                                         AS REMARK
		                         , M2.TAX_TYPE
								 , M1.COMP_CODE
								 , M1.DIV_CODE

		                         --20190111 입고량(ORDER_UNIT_Q), 발주단위(ORDER_UNIT) 추가
		                         , CASE M1.INOUT_METH
		                                WHEN '6' THEN M1.ORDER_UNIT_Q * -1
		                                WHEN '5' THEN M1.ORDER_UNIT_Q * -1
		                                ELSE M1.ORDER_UNIT_Q
		                           END                                                                               AS ORDER_UNIT_Q
								 , M1.ORDER_UNIT
								 , M1.ORDER_UNIT_FOR_P
								 , M1.INOUT_FOR_O																					AS ORDER_UNIT_FOR_O
								 , CASE M1.INOUT_METH
		                                WHEN '6' THEN M1.ORDER_UNIT_Q * -1
		                                WHEN '5' THEN M1.ORDER_UNIT_Q * -1
		                                ELSE M1.ORDER_UNIT_Q
		                           END
								   * CASE WHEN ISNULL(M2.ITEM_WIDTH,0) = 0 THEN 1000
									    ELSE M2.ITEM_WIDTH
								   END
								   * M1.TRNS_RATE / 1000 AS SQM
		                    FROM                BTR100T  M1 WITH (NOLOCK)
		                            LEFT JOIN   BPR100T  M2 WITH (NOLOCK) ON M2.COMP_CODE        = M1.COMP_CODE
		                                                                 AND M2.ITEM_CODE        = M1.ITEM_CODE
		                            LEFT JOIN   BPR200T  M3 WITH (NOLOCK) ON M3.COMP_CODE        = M1.COMP_CODE
		                                                                 AND M3.DIV_CODE         = M1.DIV_CODE
		                                                                 AND M3.ITEM_CODE        = M1.ITEM_CODE
		                            LEFT JOIN   BCM100T  M4 WITH (NOLOCK) ON M4.COMP_CODE        = M1.COMP_CODE
		                                                                 AND M4.CUSTOM_CODE      = M1.INOUT_CODE
		                            LEFT JOIN   MPO100T  M5 WITH (NOLOCK) ON M5.COMP_CODE        = M1.COMP_CODE
		                                                                 AND M5.DIV_CODE         = M1.DIV_CODE
		                                                                 AND M5.CUSTOM_CODE      = M1.INOUT_CODE
		                                                                 AND M5.ORDER_NUM        = M1.ORDER_NUM
		                            LEFT JOIN   MPO200T  M6 WITH (NOLOCK) ON M6.COMP_CODE        = M1.COMP_CODE
		                                                                 AND M6.DIV_CODE         = M1.DIV_CODE
		                                                                 AND M6.CUSTOM_CODE      = M1.INOUT_CODE
		                                                                 AND M6.ORDER_NUM        = M1.ORDER_NUM
		                                                                 AND M6.ORDER_SEQ        = M1.ORDER_SEQ
		                            LEFT JOIN ( SELECT SUM(BUY_Q) AS BUY_Q
		                                             , COMP_CODE
		                                             , DIV_CODE
		                                             , INOUT_NUM
		                                             , INOUT_SEQ
		                                             , ITEM_CODE
		                                          FROM MAP200T
		                                         GROUP BY COMP_CODE, DIV_CODE, INOUT_NUM, INOUT_SEQ, ITEM_CODE) AS M7 ON M7.COMP_CODE        = M1.COMP_CODE
		                                                                                                             AND M7.DIV_CODE         = M1.DIV_CODE
		                                                                                                             AND M7.INOUT_NUM        = M1.INOUT_NUM
		                                                                                                             AND M7.INOUT_SEQ        = M1.INOUT_SEQ
		                                                                                                             AND M7.ITEM_CODE        = M1.ITEM_CODE
		                            LEFT JOIN   BOR120T  B1 WITH (NOLOCK) ON B1.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B1.DIV_CODE         = M1.DIV_CODE
		                            LEFT JOIN   BSA100T  B2 WITH (NOLOCK) ON B2.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B2.MAIN_CODE        = N'B004'
		                                                                 AND B2.REF_CODE1        = N'Y'
		                            LEFT JOIN   BSA100T  B3 WITH (NOLOCK) ON B3.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B3.MAIN_CODE        = N'B024'
		                                                                 AND B3.SUB_CODE         = M1.INOUT_PRSN
		                            LEFT JOIN   BSA100T  B4 WITH (NOLOCK) ON B4.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B4.MAIN_CODE        = N'B036'
		                                                                 AND B4.SUB_CODE         = M1.INOUT_METH
		                            LEFT JOIN   BSA100T  B5 WITH (NOLOCK) ON B5.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B5.MAIN_CODE        = N'M103'
		                                                                 AND B5.SUB_CODE         = M1.INOUT_TYPE_DETAIL
		                            LEFT JOIN   BSA220T  B6 WITH (NOLOCK) ON B6.COMP_CODE        = M1.COMP_CODE
		                                                                 AND B6.TREE_CODE        = M1.WH_CODE
		                            LEFT JOIN   BPR000T  C1 WITH (NOLOCK) ON C1.COMP_CODE        = M2.COMP_CODE
		                                                                 AND C1.LEVEL1          != '*'
		                                                                 AND C1.LEVEL1           = M2.ITEM_LEVEL1
		                                                                 AND C1.LEVEL2           = '*'
		                                                                 AND C1.LEVEL3           = '*'

		                            LEFT JOIN   BPR000T  C2 WITH (NOLOCK) ON C2.COMP_CODE        = M2.COMP_CODE
		                                                                 AND C2.LEVEL1          != '*'
		                                                                 AND C2.LEVEL1           = M2.ITEM_LEVEL1
		                                                                 AND C2.LEVEL2          != '*'
		                                                                 AND C2.LEVEL2           = M2.ITEM_LEVEL2
		                                                                 AND C2.LEVEL3           = '*'

		                            LEFT JOIN   BPR000T  C3 WITH (NOLOCK) ON C3.COMP_CODE        = M2.COMP_CODE
		                                                                 AND C3.LEVEL1          != '*'
		                                                                 AND C3.LEVEL1           = M2.ITEM_LEVEL1
		                                                                 AND C3.LEVEL2          != '*'
		                                                                 AND C3.LEVEL2           = M2.ITEM_LEVEL2
		                                                                 AND C3.LEVEL3          != '*'
		                                                                 AND C3.LEVEL3           = M2.ITEM_LEVEL3

		                    WHERE  M1.COMP_CODE             =  @COMP_CODE
		                       AND M1.DIV_CODE              =  @DIV_CODE
		                       AND M1.INOUT_DATE           &gt;=  @INOUT_FR_DATE
		                       AND M1.INOUT_DATE           &lt;=  @INOUT_TO_DATE
		                       AND M1.INOUT_TYPE            =  N'1'
		                       AND ISNULL(M1.ORDER_TYPE,'') != N'4'
		                       AND M1.CREATE_LOC           IN (N'2', N'6')
		                       AND ISNULL(M6.CONTROL_STATUS, '') != N'8'
		                       AND ((M1.ORDER_TYPE          =  @ORDER_TYPE             AND @ORDER_TYPE          != '') OR (@ORDER_TYPE         = ''))
		                       AND ((M1.INOUT_CODE       LIKE  @INOUT_CODE + '%'       AND @INOUT_CODE          != '') OR (@INOUT_CODE         = ''))
		                       AND ((M4.CUSTOM_NAME      LIKE  '%' + @INOUT_NAME + '%' AND @INOUT_NAME          != '') OR (@INOUT_NAME         = ''))
		                       AND ((M1.INOUT_PRSN          =  @INOUT_PRSN             AND @INOUT_PRSN          != '') OR (@INOUT_PRSN         = ''))
		                       AND ((M1.WH_CODE             =  @WH_CODE                AND @WH_CODE             != '') OR (@WH_CODE            = ''))
		                       AND ((M3.ITEM_ACCOUNT        =  @ITEM_ACCOUNT           AND @ITEM_ACCOUNT        != '') OR (@ITEM_ACCOUNT       = ''))
		                       AND ((M1.ITEM_CODE        LIKE  @ITEM_CODE + '%'        AND @ITEM_CODE           != '') OR (@ITEM_CODE          = ''))
		                       AND ((M2.ITEM_NAME        LIKE  '%' + @ITEM_NAME + '%'  AND @ITEM_NAME           != '') OR (@ITEM_NAME          = ''))
		                       AND ((M1.INOUT_TYPE_DETAIL   =  @INOUT_TYPE_DETAIL      AND @INOUT_TYPE_DETAIL   != '') OR (@INOUT_TYPE_DETAIL  = ''))
		                       AND ((M1.INOUT_DATE         &lt;=  M6.DVRY_DATE            AND @DVRY_TYPE           = '1') OR
		                            (M1.INOUT_DATE          &gt;  M6.DVRY_DATE            AND @DVRY_TYPE           = '2') OR (@DVRY_TYPE          = '0'))
		                       AND ((M1.PROJECT_NO          =  @PROJECT_NO             AND @PROJECT_NO          != '') OR (@PROJECT_NO         = ''))
		                       AND ((M5.ORDER_DATE         &gt;=  @ORDER_FR_DATE          AND @ORDER_FR_DATE       != '') OR (@ORDER_FR_DATE      = ''))
		                       AND ((M5.ORDER_DATE         &lt;=  @ORDER_TO_DATE          AND @ORDER_TO_DATE       != '') OR (@ORDER_TO_DATE      = ''))
		                       AND ((M6.DVRY_DATE          &gt;=  @DVRY_FR_DATE           AND @DVRY_FR_DATE        != '') OR (@DVRY_FR_DATE       = ''))
		                       AND ((M6.DVRY_DATE          &lt;=  @DVRY_TO_DATE           AND @DVRY_TO_DATE        != '') OR (@DVRY_TO_DATE       = ''))
		                       AND ((M1.MONEY_UNIT          =  @MONEY_UNIT             AND @MONEY_UNIT          != '') OR (@MONEY_UNIT         = ''))
		                       AND ((M2.ITEM_LEVEL1         =  @ITEM_LEVEL1            AND @ITEM_LEVEL1         != '') OR (@ITEM_LEVEL1        = ''))
		                       AND ((M2.ITEM_LEVEL2         =  @ITEM_LEVEL2            AND @ITEM_LEVEL2         != '') OR (@ITEM_LEVEL2        = ''))
		                       AND ((M2.ITEM_LEVEL3         =  @ITEM_LEVEL3            AND @ITEM_LEVEL3         != '') OR (@ITEM_LEVEL3        = ''))
		                       AND ((M1.CREATE_LOC          =  N'2'                    AND @CREATE_LOC          = '1')
		                         OR (M1.CREATE_LOC          =  N'6'                    AND @CREATE_LOC          = '2') OR (@CREATE_LOC         = ''))
		                ) A
					GROUP BY	A.COMP_CODE, A.DIV_CODE, A.INDEX01,	A.INDEX04, A.INDEX05
					  --20190111 입고량(ORDER_UNIT_Q), 발주단위(ORDER_UNIT) 추가
					  , A.ORDER_UNIT

		            ORDER BY 1,2,3,4,5,6, 7, 8, 9

		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		END
	</select>

	<select id="mtr113skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
		SELECT A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
		LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE	= #{S_COMP_CODE}
		  AND B.USER_ID		= #{S_USER_ID}
	</select>
</mapper>