<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr200ukrvServiceImpl">
	<select id="mtr200ukrvServiceImpl.selectInoutType" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'M104'
		   AND SUB_CODE != '$'
		   AND SUB_CODE = #{INOUT_TYPE_DETAIL}
		   AND ISNULL(REF_CODE5,'N') = 'Y'
	</select>
	<select id="mtr200ukrvServiceImpl.selectreleaseNoMasterList" parameterType="Map" resultType="rMap">     /* 검색팝업창 */
        /* mtr200ukrv.Cmtr200ukrv[fnMtr200QPop] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT DISTINCT
                   A.WH_CODE
                 , A.WH_CELL_CODE
                 , B.WH_CELL_NAME
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END) AS INOUT_DATE
                 , A.INOUT_CODE_TYPE

                 , A.INOUT_CODE
                 , (CASE A.INOUT_CODE_TYPE WHEN '4' THEN C.CUSTOM_NAME
                                           WHEN '1' THEN D.TREE_NAME
                                           WHEN '2' THEN E1.TREE_NAME
                                           WHEN '3' THEN E.TREE_NAME
                     END) AS INOUT_NAME
                 , A.INOUT_PRSN
                 , A.INOUT_TYPE
                 , A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.COMP_CODE
                 , A.DIV_CODE
                 , A.LOT_NO
                 , A.PROJECT_NO
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END) AS ITEM_NAME
				 , F.SPEC
				 , A.INOUT_Q
              FROM            BTR100T AS A  WITH(NOLOCK)
                   LEFT  JOIN BSA225T AS B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                        AND B.DIV_CODE     = A.DIV_CODE
                                                        AND B.WH_CODE      = A.WH_CODE
                                                        AND B.WH_CELL_CODE = A.WH_CELL_CODE
                   LEFT  JOIN BCM100T AS C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                                        AND C.CUSTOM_CODE  = A.INOUT_CODE
                   LEFT  JOIN BSA210T AS D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                                        AND D.TYPE_LEVEL   = A.DIV_CODE
                                                        AND D.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA230T AS E  WITH(NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                                        AND E.TYPE_LEVEL   = A.DIV_CODE
                                                        AND E.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA220T AS E1 WITH(NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
                                                        AND E1.TYPE_LEVEL  = A.DIV_CODE
                                                        AND E1.TREE_CODE   = A.INOUT_CODE
                   INNER JOIN BPR100T AS F  WITH(NOLOCK) ON F.COMP_CODE    = A.COMP_CODE
                                                        AND F.ITEM_CODE    = A.ITEM_CODE
             WHERE A.COMP_CODE              = @CompCode
               AND A.INOUT_TYPE            IN ('2', '3')
               AND A.CREATE_LOC            IN ('2', '3')
               AND A.INOUT_CODE_TYPE       != '5'
               AND ISNULL(A.ORDER_TYPE,'') != '4'
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE               = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
               AND A.INOUT_DATE            &gt;= #{FR_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
               AND A.INOUT_DATE            &lt;= #{TO_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
               AND A.INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WORK_SHOP)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WORK_SHOP}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_DEPT)">
               AND A.INOUT_CODE             = #{INOUT_CODE_DEPT}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WH)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WH}
            </if>

            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
               AND A.WH_CODE                = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
               AND A.INOUT_PRSN             = #{INOUT_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
               AND A.WH_CELL_CODE           = #{WH_CELL_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
               AND A.LOT_NO              LIKE #{LOT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
               AND A.PROJECT_NO          LIKE #{PROJECT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE           LIKE #{ITEM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END)                LIKE '%' + #{ITEM_NAME}    + '%'
            </if>
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

    <select id="mtr200ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">        /* 메인조회창 */
        /*mtr200ukrv.Cmtr200ukrv[fnMtr200QStd] Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
                  , @UserId         NVARCHAR(100) /* 사용자ID    */
                  , @LangType       NVARCHAR(2)  /* 언어구분    */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
                  , @SumType        NVARCHAR(10)

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            SELECT TOP 1 @SumType = ISNULL(MAX(SUB_CODE), '')
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B084'
               AND REF_CODE1 = N'Y'

            /* 데이터 조회 */
            SELECT A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.INOUT_METH
                 , A.INOUT_TYPE_DETAIL
                 , A.DIV_CODE
                 , A.INOUT_CODE
                 , (CASE WHEN A.INOUT_CODE_TYPE = '1' THEN C1.TREE_NAME END) AS INOUT_NAME2-- 부서
                 , (CASE WHEN A.INOUT_CODE_TYPE = '2' THEN C2.TREE_NAME END) AS INOUT_NAME  -- 창고
                 , (CASE WHEN A.INOUT_CODE_TYPE = '3' THEN C3.TREE_NAME END) AS INOUT_NAME1 -- 작업장
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                     END)   AS ITEM_NAME
                 , C.SPEC
                 , C.STOCK_UNIT
                 , G.PATH_CODE
                 , uniLITE.fnFormat(@CompCode, ISNULL(G.OUTSTOCK_REQ_Q, 0) - ISNULL(G.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS NOT_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS INOUT_Q
                 , A.ITEM_STATUS
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS ORIGINAL_Q
                 ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')  AS GOOD_STOCK_Q
               --  , uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')   AS BAD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
							THEN  uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')
							ELSE  uniLITE.fnFormat(@CompCode, ISNULL(C5.GOOD_STOCK_Q,0), 'M_FSET_QS')
					END  AS GOOD_STOCK_Q
                 , CASE WHEN ISNULL(A.LOT_NO,'') = ''
							THEN uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')
							ELSE uniLITE.fnFormat(@CompCode, ISNULL(C5.BAD_STOCK_Q,0), 'M_FSET_QS')
				   END  AS BAD_STOCK_Q
                 , A.BASIS_NUM
                 , A.BASIS_SEQ
                 , A.INOUT_TYPE
                 , A.INOUT_CODE_TYPE
                 , A.WH_CODE
                 , A.WH_CELL_CODE
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END)                                           AS INOUT_DATE
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0), 'M_FSET_QS')      AS INOUT_P
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0), 'M_FSET_QS')      AS INOUT_I
                 , A.MONEY_UNIT
                 , A.INOUT_PRSN
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0), 'M_FSET_QS')    AS ACCOUNT_Q
                 , A.ACCOUNT_YNC
                 , ISNULL(A.CREATE_LOC, '')                                            AS CREATE_LOC
                 , A.ORDER_NUM
                 , A.REMARK
                 , A.PROJECT_NO
                 , A.LOT_NO
                 , A.SALE_DIV_CODE
                 , A.SALE_CUSTOM_CODE
                 , A.BILL_TYPE
                 , A.SALE_TYPE
                 , A.COMP_CODE
                 , H.OUTSTOCK_NUM           					 AS ARRAY_OUTSTOCK_NUM       -- 출고요청번호(ARRAY DATA)
                 , ISNULL(H.REF_WKORD_NUM, A.ORDER_NUM)          AS ARRAY_REF_WKORD_NUM      -- 작업지시번호(ARRAY DATA)
                 , H.OUTSTOCK_REQ_Q         					 AS ARRAY_OUTSTOCK_REQ_Q     -- 출고요청량  (ARRAY DATA)
                 , H.OUTSTOCK_Q             					 AS ARRAY_OUTSTOCK_Q         -- 출고량      (ARRAY DATA)
                 , H.REMARK                 					 AS ARRAY_REMARK             -- 비고        (ARRAY DATA)
                 , H.PROJECT_NO             					 AS ARRAY_PROJECT_NO         -- 프로젝트번호(ARRAY DATA)
                 , H.LOT_NO                 					 AS ARRAY_LOT_NO             -- LOT 번호    (ARRAY DATA)
                 , C4.LOT_YN                					 AS LOT_YN                   -- LOT 관리여부
                 , A.ORDER_NUM
                 , A.ORDER_SEQ
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
            FROM              BTR100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                      AND C.ITEM_CODE      = A.ITEM_CODE
                   INNER JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
                                                      AND C4.DIV_CODE      = A.DIV_CODE
                                                      AND C4.ITEM_CODE     = A.ITEM_CODE
                   LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.DIV_CODE       = A.DIV_CODE
                                                      AND D.WH_CODE        = A.WH_CODE
                                                      AND D.ITEM_CODE      = A.ITEM_CODE
                   LEFT  JOIN (SELECT A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                                    , SUM(ISNULL(B.OUTSTOCK_REQ_Q, 0))  AS OUTSTOCK_REQ_Q
                                    , SUM(ISNULL(B.OUTSTOCK_Q, 0))      AS OUTSTOCK_Q
                               FROM              PMP350T A WITH (NOLOCK)
                                      INNER JOIN PMP300T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
                                                                        AND A.DIV_CODE      = B.DIV_CODE
                                                                        AND A.OUTSTOCK_NUM  = B.OUTSTOCK_NUM
                                                                        AND A.REF_WKORD_NUM = B.REF_WKORD_NUM
                                                                        AND A.ITEM_CODE     = B.ITEM_CODE
                               WHERE  A.COMP_CODE = @CompCode
                            <if test="@foren.Ognl@isEmpty(DIV_CODE)">
                               AND    A.DIV_CODE  = #{DIV_CODE}
                            </if>
                            <if test="@foren.Ognl@isEmpty(INOUT_NUM)">
                               AND    A.INOUT_NUM = #{INOUT_NUM}
                            </if>
                               GROUP BY A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE
                                      , A.PATH_CODE) G ON G.COMP_CODE      = A.COMP_CODE
                                                      AND G.DIV_CODE       = A.DIV_CODE
                                                      AND G.INOUT_NUM      = A.INOUT_NUM
                                                      AND G.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND G.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN uniLITE.fnArrayOutStockReq(@CompCode, #{DIV_CODE}, #{INOUT_NUM}, 0) H
                                                       ON H.COMP_CODE      = A.COMP_CODE
                                                      AND H.DIV_CODE       = A.DIV_CODE
                                                      AND H.INOUT_NUM      = A.INOUT_NUM
                                                      AND H.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND H.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN BSA210T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
                                                      AND C1.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C1.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
                                                      AND C2.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C2.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA230T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
                                                      AND C3.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C3.TREE_CODE     = A.INOUT_CODE
				  LEFT JOIN BIV150TV C5 WITH (NOLOCK) ON C5.COMP_CODE     = A.COMP_CODE
													  AND C5.ITEM_CODE	  = A.ITEM_CODE
													  AND C5.WH_CODE	  = A.WH_CODE
													  AND C5.WH_CELL_CODE = ISNULL(A.WH_CELL_CODE,'')
													  AND C5.LOT_NO		  = ISNULL(A.LOT_NO,'')
													  AND C5.SUM_TYPE   = @SumType
            WHERE  A.COMP_CODE        = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND    A.DIV_CODE         = #{DIV_CODE}
            </if>
            AND    A.INOUT_TYPE      IN ('2', '3')
            AND    A.CREATE_LOC      IN ('2', '3')
            AND    A.INOUT_CODE_TYPE != '4'
            <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
            AND    A.INOUT_NUM        = #{INOUT_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND    A.LOT_NO        LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
            AND    A.PROJECT_NO    LIKE #{PROJECT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
            AND    (CASE WHEN @RefItem = N'1' THEN C.ITEM_NAME1
                         WHEN @RefItem = N'2' THEN C.ITEM_NAME2
                                              ELSE C.ITEM_NAME
                     END)          LIKE  #{ITEM_NAME}+ '%'
            </if>
            ORDER BY A.INOUT_NUM, A.INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="mtr200ukrvServiceImpl.selectrefList" parameterType="Map" resultType="rMap">        /* 출고요청참조 */
        --mtr200ukrv.Cmtr200ukrv[fnMtr200QRef] Query01

        SET NOCOUNT ON

        CREATE TABLE #PMP300T_TEMP
        (      COMP_CODE           NVARCHAR(08)    NOT NULL DEFAULT 'MASTER'
             , DIV_CODE            NVARCHAR(08)    NOT NULL
             , OUTSTOCK_NUM        NVARCHAR(20)    NOT NULL
             , ITEM_CODE           NVARCHAR(20)    NOT NULL
             , REF_WKORD_NUM       NVARCHAR(20)    NOT NULL
             , PATH_CODE           NVARCHAR(08)    NOT NULL
        )
        CREATE INDEX PMP300T_TEMP_IDX01 ON #PMP300T_TEMP(COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE, REF_WKORD_NUM, PATH_CODE)




        --mtr200ukrv.Cmtr200ukrv[fnMtr200QRef] Query03
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
                  , @WORK_SHOP_CODE         NVARCHAR(08)            -- (선택) 작업장
                  , @REQ_FR_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
                  , @REQ_TO_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
                  , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
                  , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
                  , @OUTSTOCK_NUM           NVARCHAR(20)            -- (선택) 출고요청번호
                  , @WKORD_NUM              NVARCHAR(20)            -- (선택) 작업지시번호
                  , @INOUT_CODE_TYPE        NVARCHAR(01)            -- (필수) 출고처구분
                  , @MAIN_WH_CODE           NVARCHAR(08)            -- (필수) 주창고
                  , @WORK_WH_CODE           NVARCHAR(08)            -- (필수) 가공창고
                  , @WH_CELL_CODE           NVARCHAR(20)            -- (필수) Cell창고
                  , @LOT_NO                 NVARCHAR(40)            -- (선택) LOT NO
                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE              = #{S_COMP_CODE}
        SET @DIV_CODE               = #{DIV_CODE}
        SET @WORK_SHOP_CODE         = #{WORK_SHOP_CODE}
        SET @REQ_FR_DATE            = #{REQ_FR_DATE}
        SET @REQ_TO_DATE            = #{REQ_TO_DATE}
        SET @OUT_WH_CODE            = #{OUT_WH_CODE}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @OUTSTOCK_NUM           = #{OUTSTOCK_NUM}
        SET @WKORD_NUM              = #{WKORD_NUM}
        SET @INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
        SET @MAIN_WH_CODE           = #{MAIN_WH_CODE}
        SET @WORK_WH_CODE           = #{WORK_WH_CODE}
        SET @WH_CELL_CODE           = #{WH_CELL_CODE}
        SET @LOT_NO                 = #{LOT_NO}
        SET @USER_ID                = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')
/*
    		INSERT INTO #PMP300T_TEMP (COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE,REF_WKORD_NUM, PATH_CODE)
    		SELECT COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE,REF_WKORD_NUM, PATH_CODE
    		FROM PMP350T WITH (NOLOCK)
    		WHERE COMP_CODE=@COMP_CODE
*/
        SELECT CAST(0 AS BIT)                                                           AS CHOICE
             , A.COMP_CODE
             , A.DIV_CODE
             , A.WORK_SHOP_CODE
             , C4.TREE_NAME                                                             AS WORK_SHOP_NAME
             , CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                         CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
                              ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
                         END
                    ELSE B.WH_CODE
               END                                                                      AS WORK_WH_CODE
             , C5.TREE_NAME                                                             AS WORK_WH_NAME
--             , ''                                                                     AS WORK_WH_CELL_CODE
              , (SELECT TOP 1 WH_CELL_CODE FROM BSA230T WITH(NOLOCK)
                                          WHERE COMP_CODE  = @COMP_CODE
                                            AND TYPE_LEVEL = @DIV_CODE
                                            AND TREE_CODE  = A.WORK_SHOP_CODE
                                            AND WH_CODE    = (CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                       CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
                                                                        ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
                                                                       END
                                                             ELSE B.WH_CODE
                                                             END)
                                                                                      ) AS WORK_WH_CELL_CODE
             , ''                                                                       AS WORK_WH_CELL_NAME
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE                     C1.ITEM_NAME
               END                                                                      AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , A.PATH_CODE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_REQ_DATE)                  AS OUTSTOCK_REQ_DATE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0), 'M_FSET_QS')   AS OUTSTOCK_REQ_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS OUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
                                          - ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS NOT_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.STOCK_Q, 0),        'M_FSET_QS')   AS STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0),   'M_FSET_QS')   AS GOOD_STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.BAD_STOCK_Q, 0),    'M_FSET_QS')   AS BAD_STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.AVERAGE_P, 0),      'M_FSET_PS')   AS AVERAGE_P
             , C2.WH_CODE                                                               AS MAIN_WH_CODE
             , C7.TREE_NAME                                                             AS MAIN_WH_NAME
             , C2.WH_CELL_CODE                                                          AS MAIN_WH_CELL_CODE
             , C8.WH_CELL_NAME                                                          AS MAIN_WH_CELL_NAME
             , A.OUTSTOCK_NUM
             , A.CONTROL_STATUS
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.CANCEL_Q, 0),       'M_FSET_QS')   AS CANCEL_Q
             , A.REMARK
             , A.PROJECT_NO
             , @OUT_WH_CODE                                                             AS WH_CODE
             , @WH_CELL_CODE                                                            AS WH_CELL_CODE
             , A.REF_WKORD_NUM
             , ISNULL(C.LOT_NO, '')                                                     AS WK_LOT_NO
             , ISNULL(C.REMARK, '')                                                     AS WK_REMARK
             , ISNULL(C.PROJECT_NO, '')                                                 AS WK_PROJECT_NO
             , C.ITEM_CODE                                                              AS PROD_ITEM_CODE
             , C2.LOT_YN
             , CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
                    WHEN @RefItem = '1' THEN C3.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C3.ITEM_NAME2
                    ELSE                     C3.ITEM_NAME
               END                                                                      AS PROD_ITEM_NAME
             , C.SO_NUM																	AS ORDER_NUM
             , C.SO_SEQ																	AS ORDER_SEQ
             ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.OUTSTOCK_REQ_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
        FROM               PMP300T      A  WITH (NOLOCK)
               LEFT  JOIN  PMP200T      B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                        AND B.DIV_CODE      = A.DIV_CODE
                                                        AND B.ITEM_CODE     = A.ITEM_CODE
                                                        AND B.WKORD_NUM     = A.REF_WKORD_NUM
                                                        AND B.PATH_CODE     = A.PATH_CODE
               LEFT  JOIN  PMP100TV1    C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                        AND C.DIV_CODE      = A.DIV_CODE
                                                        AND C.WKORD_NUM     = A.REF_WKORD_NUM
               LEFT  JOIN  BIV100T      D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
                                                        AND D.DIV_CODE      = A.DIV_CODE
                                                        AND D.ITEM_CODE     = A.ITEM_CODE
                                                        AND D.WH_CODE       = @OUT_WH_CODE
/*
               LEFT  JOIN #PMP300T_TEMP E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                                        AND E.DIV_CODE      = A.DIV_CODE
                                                        AND E.OUTSTOCK_NUM  = A.OUTSTOCK_NUM
                                                        AND E.ITEM_CODE     = A.ITEM_CODE
                                                        AND E.REF_WKORD_NUM = A.REF_WKORD_NUM
                                                        AND E.PATH_CODE     = A.PATH_CODE
*/
      --         LEFT  JOIN PMP350T       E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
      --                                                  AND E.DIV_CODE      = A.DIV_CODE
      --                                                  AND E.OUTSTOCK_NUM  = A.OUTSTOCK_NUM
      --                                                  AND E.ITEM_CODE     = A.ITEM_CODE
      --                                                  AND E.REF_WKORD_NUM = A.REF_WKORD_NUM
      --                                                  AND E.PATH_CODE     = A.PATH_CODE

  				LEFT JOIN ( SELECT COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE, REF_WKORD_NUM, PATH_CODE
  									, SUM(OUTSTOCK_Q) AS OUTSTOCK_Q
  							FROM PMP350T    WITH (NOLOCK)
  							GROUP BY COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE, REF_WKORD_NUM, PATH_CODE ) E ON E.COMP_CODE     = A.COMP_CODE
														                                                        AND E.DIV_CODE      = A.DIV_CODE
														                                                        AND E.OUTSTOCK_NUM  = A.OUTSTOCK_NUM
														                                                        AND E.ITEM_CODE     = A.ITEM_CODE
														                                                        AND E.REF_WKORD_NUM = A.REF_WKORD_NUM
														                                                        AND E.PATH_CODE     = A.PATH_CODE


               INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                        AND C1.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                        AND C2.DIV_CODE     = A.DIV_CODE
                                                        AND C2.ITEM_CODE    = A.ITEM_CODE
               LEFT  JOIN  BPR100T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = C.COMP_CODE
                                                        AND C3.ITEM_CODE    = C.ITEM_CODE
               INNER JOIN  BSA230T      C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                                        AND C4.TYPE_LEVEL   = A.DIV_CODE
                                                        AND C4.TREE_CODE    = A.WORK_SHOP_CODE
               LEFT  JOIN  BSA220T      C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
                                                        AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
                                                        AND C5.TREE_CODE    = CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                                        CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
                                                                                             ELSE ISNULL(C4.WH_CODE, '')
                                                                                        END
                                                                                   ELSE B.WH_CODE
                                                                              END
               LEFT  JOIN  BSA220T      C7 WITH (NOLOCK) ON C7.COMP_CODE    = C2.COMP_CODE
                                                        AND C7.TYPE_LEVEL   = C2.DIV_CODE
                                                        AND C7.TREE_CODE    = C2.WH_CODE
               LEFT  JOIN  BSA225T      C8 WITH (NOLOCK) ON C8.COMP_CODE    = C2.COMP_CODE
                                                        AND C8.DIV_CODE     = C2.DIV_CODE
                                                        AND C8.WH_CODE      = C2.WH_CODE
                                                        AND C8.WH_CELL_CODE = C2.WH_CELL_CODE
        WHERE  A.COMP_CODE              = @COMP_CODE
        AND    A.CONTROL_STATUS         &lt; '8'
        AND    A.OUTSTOCK_REQ_Q         &gt; A.OUTSTOCK_Q
        AND    A.DIV_CODE               = @DIV_CODE
        AND    A.AGREE_STATUS           = '2'          -- 승인내역만 조회되도록 추가
        AND		A.OUTSTOCK_REQ_Q        &lt;&gt; ISNULL(E.OUTSTOCK_Q,0)

		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
        AND   A.WORK_SHOP_CODE        =       @WORK_SHOP_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_FR_DATE)">
        AND   A.OUTSTOCK_REQ_DATE    &gt;=       @REQ_FR_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_TO_DATE)">
        AND   A.OUTSTOCK_REQ_DATE    &lt;=       @REQ_TO_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
        AND   A.ITEM_CODE          LIKE       @ITEM_CODE    + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
        AND   ((C1.ITEM_NAME         LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '0')
            OR (C1.ITEM_NAME1        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '1')
            OR (C1.ITEM_NAME2        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '2'))
		</if>
		<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
        AND   A.OUTSTOCK_NUM       LIKE       @OUTSTOCK_NUM + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
        AND   A.REF_WKORD_NUM      LIKE       @WKORD_NUM    + '%'
		</if>

            --'출고처구분 : 창고  (가공창고가 설정되어 있는 데이터 조회), 작업장(가공창고가 설정되어 있지 않은 데이터 조회)
        --AND   ((ISNULL(C5.TREE_CODE, '') != '' AND @INOUT_CODE_TYPE = '2') OR (ISNULL(C5.TREE_CODE, '') = '' AND @INOUT_CODE_TYPE = '3'))
		AND   ((ISNULL(B.WH_CODE, C4.WH_CODE) != '' AND @INOUT_CODE_TYPE = '2') OR (ISNULL(B.WH_CODE, '') = '' AND @INOUT_CODE_TYPE = '3' AND   ISNULL(B.OUT_METH, '1') = '1'))
		<if test="@foren.Ognl@isNotEmpty(MAIN_WH_CODE)">
        AND   C2.WH_CODE              =       @MAIN_WH_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_WH_CODE)">
        AND   C5.TREE_CODE            =       @WORK_WH_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
        AND   C.LOT_NO             LIKE       @LOT_NO       + '%'
		</if>
        -- AND   ISNULL(B.OUT_METH, '1') = '1'
        -- 2019.0730 가공창고 있는경우는 모두가 조회되고 없는 경우는 메뉴얼만 조회되도록 함. 폼목마스터에서 예약정보로 수정함 2018.07.03

        ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C5.TREE_CODE, A.ITEM_CODE, A.PATH_CODE


        DROP TABLE #PMP300T_TEMP

        SET NOCOUNT OFF
    </select>

    <select id="mtr200ukrvServiceImpl.selectrefList2" parameterType="Map" resultType="rMap">        /* 반품가능요청참조 */
        --mtr200ukrv.Cmtr200ukrv[fnMtr200QRe1] Query01
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
                  , @WORK_SHOP_CODE         NVARCHAR(08)            -- (선택) 작업장
                  , @REQ_FR_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
                  , @REQ_TO_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
                  , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
                  , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
                  , @OUTSTOCK_NUM           NVARCHAR(20)            -- (선택) 출고요청번호
                  , @WKORD_NUM              NVARCHAR(20)            -- (선택) 작업지시번호
                  , @INOUT_CODE_TYPE        NVARCHAR(01)            -- (필수) 출고처구분
                  , @WH_CELL_CODE           NVARCHAR(20)            -- (필수) Cell창고
                  , @LOT_NO                 NVARCHAR(40)            -- (선택) Lot No
                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE              = #{S_COMP_CODE}
        SET @DIV_CODE               = #{DIV_CODE}
        SET @WORK_SHOP_CODE         = #{WORK_SHOP_CODE}
        SET @REQ_FR_DATE            = #{REQ_FR_DATE}
        SET @REQ_TO_DATE            = #{REQ_TO_DATE}
        SET @OUT_WH_CODE            = #{OUT_WH_CODE}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @OUTSTOCK_NUM           = #{OUTSTOCK_NUM}
        SET @WKORD_NUM              = #{WKORD_NUM}
        SET @INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
        SET @WH_CELL_CODE           = #{WH_CELL_CODE}
        SET @LOT_NO                 = #{LOT_NO}
        SET @USER_ID                = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

        SELECT CAST(0 AS BIT)                                                           AS CHOICE
             , A.COMP_CODE
             , A.DIV_CODE
             , A.WORK_SHOP_CODE
             , C4.TREE_NAME                                                             AS WORK_SHOP_NAME
             , CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                         CASE WHEN C2.COMMITEM_YN = 'Y' THEN C4.SECTION_CD              -- 공용창고
                              ELSE C4.WH_CODE                                           -- 가공창고
                         END
                    ELSE B.WH_CODE
               END                                                                      AS WORK_WH_CODE
             , C5.TREE_NAME                                                             AS WORK_WH_NAME
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_REQ_DATE)                  AS OUTSTOCK_REQ_DATE
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE                     C1.ITEM_NAME
               END                                                                      AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , A.PATH_CODE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(E.WIP_STOCK_Q, 0) * -1,'M_FSET_QS')  AS NOTOUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_Q, 0),      'M_FSET_QS')  AS OUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
                                          - ISNULL(A.OUTSTOCK_Q, 0),      'M_FSET_QS')  AS NOT_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0),    'M_FSET_QS')  AS STOCK_Q
             , A.OUTSTOCK_NUM
             , A.CONTROL_STATUS
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.CANCEL_Q, 0),        'M_FSET_QS')  AS CANCEL_Q
             , A.REMARK
             , @OUT_WH_CODE                                                             AS WH_CODE
             , @WH_CELL_CODE                                                            AS WH_CELL_CODE
             , A.REF_WKORD_NUM        --'출고요청정보가 작업지시별 참조인 경우
             , ISNULL(C.LOT_NO, '')                                                     AS WK_LOT_NO
        FROM              PMP300T   A  WITH (NOLOCK)
               LEFT  JOIN PMP200T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                    AND B.DIV_CODE      = A.DIV_CODE
                                                    AND B.ITEM_CODE     = A.ITEM_CODE
                                                    AND B.WKORD_NUM     = A.REF_WKORD_NUM
                                                    AND B.PATH_CODE     = A.PATH_CODE
               LEFT  JOIN PMP100TV1 C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                    AND C.DIV_CODE      = A.DIV_CODE
                                                    AND C.WKORD_NUM     = A.REF_WKORD_NUM
               LEFT  JOIN BIV100T   D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
                                                    AND D.DIV_CODE      = A.DIV_CODE
                                                    AND D.ITEM_CODE     = A.ITEM_CODE
                                                    AND D.WH_CODE       = @OUT_WH_CODE
               LEFT  JOIN PMP100TV  E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                                    AND E.DIV_CODE      = A.DIV_CODE
                                                    AND E.WKORD_NUM     = A.REF_WKORD_NUM
                                                    AND E.ITEM_CODE     = A.ITEM_CODE
               INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                    AND C1.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                    AND C2.DIV_CODE     = A.DIV_CODE
                                                    AND C2.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN BSA230T   C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                                    AND C4.TYPE_LEVEL   = A.DIV_CODE
                                                    AND C4.TREE_CODE    = A.WORK_SHOP_CODE
               LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
                                                    AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
                                                    AND C5.TREE_CODE    = CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                                    CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
                                                                                         ELSE ISNULL(C4.WH_CODE, '')
                                                                                    END
                                                                               ELSE B.WH_CODE
                                                                          END
        WHERE  A.COMP_CODE              = @COMP_CODE
        AND    A.OUTSTOCK_Q             &gt;  0
        AND    A.DIV_CODE               = @DIV_CODE
        AND    A.AGREE_STATUS           = '2'          -- 승인내역만 조회되도록 추가
		AND    A.CONTROL_STATUS			!= '9'         -- 작업지시완료가 아닌 것
        AND   ((A.WORK_SHOP_CODE        =       @WORK_SHOP_CODE                        AND @WORK_SHOP_CODE != '') OR (@WORK_SHOP_CODE  = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &gt;=       @REQ_FR_DATE                           AND @REQ_FR_DATE    != '') OR (@REQ_FR_DATE     = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &lt;=       @REQ_TO_DATE                           AND @REQ_TO_DATE    != '') OR (@REQ_TO_DATE     = ''))
        AND   ((A.ITEM_CODE          LIKE       @ITEM_CODE    + '%'                    AND @ITEM_CODE      != '') OR (@ITEM_CODE       = ''))
        AND   ((C1.ITEM_NAME         LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '0' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME1        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '1' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME2        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '2' AND @ITEM_NAME      != '') OR (@ITEM_NAME       = ''))
        AND   ((A.OUTSTOCK_NUM       LIKE       @OUTSTOCK_NUM + '%'                    AND @OUTSTOCK_NUM   != '') OR (@OUTSTOCK_NUM    = ''))
        AND   ((A.REF_WKORD_NUM      LIKE       @WKORD_NUM    + '%'                    AND @WKORD_NUM      != '') OR (@WKORD_NUM       = ''))
        AND   ((C.LOT_NO             LIKE       @LOT_NO       + '%'                    AND @LOT_NO         != '') OR (@LOT_NO          = ''))

        --'출고처구분 : 창고  (가공창고가 설정되어 있는 데이터 조회), 작업장(가공창고가 설정되어 있지 않은 데이터 조회)
        AND   ((ISNULL(C5.TREE_CODE, '') != '' AND @INOUT_CODE_TYPE = '2') OR (ISNULL(C5.TREE_CODE, '') = '' AND @INOUT_CODE_TYPE = '3'))


        ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C4.WH_CODE, A.ITEM_CODE, A.PATH_CODE

    </select>
	<select id="mtr200ukrvServiceImpl.selectrefList3" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE      NVARCHAR(10)
              , @DIV_CODE       NVARCHAR(10)
              , @PROG_WORK_CODE NVARCHAR(10)
              , @ITEM_CODE     	NVARCHAR(50)
              , @LOT_NO         NVARCHAR(30)
              , @SPEC           NVARCHAR(160)
              , @ITEM_STATUS 	NVARCHAR(10) 

        DECLARE @FR_DATE        NVARCHAR(8)
              , @TO_DATE        NVARCHAR(8)

        DECLARE @PREV_YYYYMM    NVARCHAR(6)

        SET @COMP_CODE    = #{S_COMP_CODE}
        SET @DIV_CODE     = #{DIV_CODE}
        SET @ITEM_CODE    = #{ITEM_CODE}
        SET @LOT_NO       = #{LOT_NO}
        SET @TO_DATE      = #{INOUT_DATE}

        SELECT @PREV_YYYYMM = MAX(LAST_YYYYMM)
          FROM BIV900T WITH(NOLOCK)
         WHERE COMP_CODE = @COMP_CODE
           AND DIV_CODE  = @DIV_CODE
           AND WH_CODE = #{WH_CODE}

        IF ISNULL(@PREV_YYYYMM,'') = ''
            SET @PREV_YYYYMM = '199901'
            
        IF @PREV_YYYYMM &gt;= LEFT(@TO_DATE,6)
            SET @PREV_YYYYMM = CONVERT(VARCHAR(6), DATEADD(MONTH, -1, @TO_DATE), 112)            

        SELECT @FR_DATE = ISNULL(CONVERT(VARCHAR(8), DATEADD(MONTH, 1, @PREV_YYYYMM + '01'), 112),'199901')
        IF @FR_DATE &gt; @TO_DATE
            SET @FR_DATE = LEFT(@TO_DATE,6) + '01'
            
            
        SET @ITEM_STATUS = ISNULL(#{ITEM_STATUS_SELECT}, '')        

        SELECT
        	   A.DIV_CODE
        	 , A.WH_CODE
             , M2.TREE_NAME AS WH_NAME
             , ISNULL(A.WH_CELL_CODE ,'') AS WH_CELL_CODE
             , ISNULL(M3.WH_CELL_NAME,'') AS WH_CELL_NAME
             , M4.ITEM_ACCOUNT
             , A.ITEM_CODE
             , M1.ITEM_NAME
             , A.LOT_NO      AS WK_LOT_NO
             , M1.STOCK_UNIT
             , M4.LOCATION
             , SUM(ISNULL(A.BASIS_Q,0)) AS BASIS_Q
             , SUM(ISNULL(B.IN_Q,0)) AS IN_Q
             , SUM(ISNULL(B.RETURN_Q,0)) AS RETURN_Q
             , SUM(ISNULL(B.OUT_Q,0)) AS OUT_Q
             , SUM(ISNULL(A.BASIS_Q,0) + ISNULL(B.IN_Q,0) + ISNULL(B.RETURN_Q,0) - ISNULL(B.OUT_Q,0)) AS STOCK_Q
             , M1.SPEC
             , M1.EXPIRATION_DAY
             , ISNULL(#{ITEM_STATUS_SELECT}, '')   AS ITEM_STATUS
             , SUM(ISNULL(A.BASIS_GOOD_Q,0) + (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.IN_Q,0) ELSE 0 END) + (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.RETURN_Q,0) ELSE 0 END) - (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.OUT_Q,0) ELSE 0 END)) GOOD_STOCK_Q
             , SUM(ISNULL(A.BASIS_BAD_Q,0)  + (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.IN_Q,0) ELSE 0 END) + (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.RETURN_Q,0) ELSE 0 END) - (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.OUT_Q,0) ELSE 0 END)) BAD_STOCK_Q
			 , A.WH_CODE
			 , ISNULL(A.WH_CELL_CODE,'') AS WH_CELL_CODE
          FROM (SELECT COMP_CODE, DIV_CODE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO, SUM(BASIS_Q) AS BASIS_Q , SUM(BASIS_GOOD_Q) AS BASIS_GOOD_Q, SUM(BASIS_BAD_Q) AS BASIS_BAD_Q 
                  FROM (SELECT COMP_CODE, DIV_CODE, WH_CODE, ISNULL(WH_CELL_CODE,'') AS WH_CELL_CODE, ITEM_CODE, LOT_NO
                            , STOCK_Q AS BASIS_Q 
                            --, (STOCK_Q - BAD_STOCK_Q) AS GOOD_STOCK_Q, BAD_STOCK_Q
                            , (STOCK_Q - BAD_STOCK_Q) AS BASIS_GOOD_Q
                            , (BAD_STOCK_Q) AS BASIS_BAD_Q
                          FROM BIV250TV S1 WITH (NOLOCK)
                         WHERE COMP_CODE    = @COMP_CODE
                           AND DIV_CODE     = @DIV_CODE
                           AND BASIS_YYYYMM = CASE WHEN ISNULL(@PREV_YYYYMM,'') = '' THEN (SELECT MIN(BASIS_YYYYMM)
                                                                                             FROM BIV250TV
                                                                                              WHERE COMP_CODE = @COMP_CODE
                                                                                              AND DIV_CODE  = @DIV_CODE
                                                                                              AND WH_CODE = #{WH_CODE}          
                                                                                           )
                                                                                       ELSE @PREV_YYYYMM
                                               END
                        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                           AND ITEM_CODE  LIKE '%' + @ITEM_CODE + '%'
                        </if>
                        <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                           AND LOT_NO LIKE '%' + @LOT_NO + '%'
                        </if>
                           AND WH_CODE = #{WH_CODE}

                        UNION

                        SELECT COMP_CODE, DIV_CODE, WH_CODE, ISNULL(WH_CELL_CODE,'') AS WH_CELL_CODE, ITEM_CODE, LOT_NO, 0 AS BASIS_Q, 0 AS GOOD_STOCK_Q,  0 AS BAD_STOCK_Q
                          FROM BIV250TV S1 WITH (NOLOCK)
                         WHERE COMP_CODE    = @COMP_CODE
                           AND DIV_CODE     = @DIV_CODE
                           AND BASIS_YYYYMM &gt; CASE WHEN ISNULL(@PREV_YYYYMM,'') = '' THEN (SELECT MIN(BASIS_YYYYMM)
                                                                                             FROM BIV250TV
                                                                                            WHERE COMP_CODE = @COMP_CODE
                                                                                              AND DIV_CODE  = @DIV_CODE
                                                                                              AND WH_CODE   = #{WH_CODE}
                                                                                          )
                                                                                     ELSE @PREV_YYYYMM
                                               END
                           AND WH_CODE = #{WH_CODE}                               
                      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                           AND ITEM_CODE  LIKE '%' + @ITEM_CODE + '%'
                      </if>
                      <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                           AND LOT_NO LIKE '%' + @LOT_NO + '%'
                      </if>
                         GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ISNULL(WH_CELL_CODE,'') , ITEM_CODE, LOT_NO) X
                 GROUP BY COMP_CODE, DIV_CODE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO) A
               LEFT JOIN (SELECT COMP_CODE, DIV_CODE, WH_CODE, ISNULL(WH_CELL_CODE,'') AS WH_CELL_CODE, ITEM_CODE, LOT_NO, ITEM_STATUS
                               , SUM(CASE WHEN INOUT_TYPE='1' THEN INOUT_Q ELSE 0 END) AS IN_Q
                               , SUM(CASE WHEN INOUT_TYPE='3' THEN INOUT_Q ELSE 0 END) AS RETURN_Q
                               , SUM(CASE WHEN INOUT_TYPE='2' THEN INOUT_Q ELSE 0 END) AS OUT_Q
                            FROM BTR100T WITH (NOLOCK)
                           WHERE COMP_CODE = @COMP_CODE
                             AND DIV_CODE  = @DIV_CODE
                             AND WH_CODE = #{WH_CODE}
                             AND INOUT_DATE &gt;= @FR_DATE
                             AND INOUT_DATE &lt;= @TO_DATE
                           GROUP BY COMP_CODE, DIV_CODE, WH_CODE, ISNULL(WH_CELL_CODE,''), ITEM_CODE, LOT_NO, ITEM_STATUS) B ON A.COMP_CODE    = B.COMP_CODE
                                                                                                                            AND A.DIV_CODE     = B.DIV_CODE
                                                                                                                            AND A.WH_CODE      = B.WH_CODE
                                                                                                                            AND A.WH_CELL_CODE = B.WH_CELL_CODE
                                                                                                                            AND A.ITEM_CODE    = B.ITEM_CODE
                                                                                                                            AND A.LOT_NO       = B.LOT_NO
               LEFT JOIN BPR100T M1 ON A.COMP_CODE    = M1.COMP_CODE
                                   AND A.ITEM_CODE    = M1.ITEM_CODE
               LEFT JOIN BPR200T M4 ON A.COMP_CODE    = M4.COMP_CODE
                                   AND A.DIV_CODE     = M4.DIV_CODE
                                   AND A.ITEM_CODE    = M4.ITEM_CODE
               LEFT JOIN BSA220T M2 ON A.COMP_CODE    = M2.COMP_CODE
                                   AND A.DIV_CODE     = M2.TYPE_LEVEL
                                   AND A.WH_CODE      = M2.TREE_CODE
               LEFT JOIN BSA225T M3 ON A.COMP_CODE    = M3.COMP_CODE
                                   AND A.DIV_CODE     = M3.DIV_CODE
                                   AND A.WH_CODE      = M3.WH_CODE
                                   AND A.WH_CELL_CODE = M3.WH_CELL_CODE
         WHERE 1=1
       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE LIKE '%' + @ITEM_CODE + '%'
      </if>
      <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
           AND A.LOT_NO LIKE '%' + @LOT_NO + '%'
      </if>

         GROUP BY A.DIV_CODE, A.ITEM_CODE, A.LOT_NO, A.WH_CODE, ISNULL(A.WH_CELL_CODE,''), M1.ITEM_NAME, M1.STOCK_UNIT,  M2.TREE_NAME, M3.WH_CELL_NAME, M4.LOCATION, M1.SPEC
                , M4.ITEM_ACCOUNT, M1.EXPIRATION_DAY
        <if test="STOCK_YN == &quot;NOT_ZERO&quot;">
             HAVING ((SUM(ISNULL(A.BASIS_Q,0)) != 0 OR SUM(ISNULL(B.IN_Q,0)) != 0 OR SUM(ISNULL(B.RETURN_Q,0)) != 0 OR SUM(ISNULL(B.OUT_Q,0))!=0) 
                      AND SUM(ISNULL(A.BASIS_Q,0) + ISNULL(B.IN_Q,0) + ISNULL(B.RETURN_Q,0) - ISNULL(B.OUT_Q,0)) != 0)

		      <if test="ITEM_STATUS_SELECT==&quot;1&quot;">
		           AND  ( SUM(ISNULL(A.BASIS_GOOD_Q,0) + (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.IN_Q,0) ELSE 0 END) + (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.RETURN_Q,0) ELSE 0 END) - (CASE WHEN B.ITEM_STATUS='1' THEN ISNULL(B.OUT_Q,0) ELSE 0 END)) > 0 AND @ITEM_STATUS = '1' OR @ITEM_STATUS = '' )
		      </if>
		      <if test="ITEM_STATUS_SELECT==&quot;2&quot;">
		           AND  ( SUM(ISNULL(A.BASIS_BAD_Q,0)  + (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.IN_Q,0) ELSE 0 END) + (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.RETURN_Q,0) ELSE 0 END) - (CASE WHEN B.ITEM_STATUS='2' THEN ISNULL(B.OUT_Q,0) ELSE 0 END)) > 0 AND @ITEM_STATUS = '2' OR @ITEM_STATUS = '' )
		      </if>		             
        </if>
        ORDER BY A.ITEM_CODE, A.LOT_NO
    </select>
    <insert id="mtr200ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE		    , OPR_FLAG
             , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
             , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
             , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
             , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
             , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
             , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE           , PATH_CODE
             , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC		    , ACCOUNT_Q 			, OUTSTOCK_NUM        , REF_WKORD_NUM
             , UPDATE_DB_USER       , UPDATE_DB_TIME

            <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
             , ORDER_SEQ
            </if>
             )
        VALUES
             ( #{KEY_VALUE}         , #{OPR_FLAG}
             , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
             , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
             , #{INOUT_CODE_DETAIL} , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
             , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
             , #{MONEY_UNIT}        , #{ORDER_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
             , #{LOT_NO}            , #{REMARK}             , #{ARRAY_REF_WKORD_NUM}          , #{BILL_TYPE}          , #{SALE_TYPE}          , #{PATH_CODE}
             , #{SALE_DIV_CODE}     , #{SALE_CUSTOM_CODE}   , #{ACCOUNT_YNC}        , #{ACCOUNT_Q} 			, #{ARRAY_OUTSTOCK_NUM} , #{ARRAY_REF_WKORD_NUM}
             , #{S_USER_ID}         , GETDATE()

            <if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
             , #{ORDER_SEQ}
            </if>
             )
    </insert>

    <update id="mtr200ukrvServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_MATRL_Mtr200ukr  (
            #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
</mapper>