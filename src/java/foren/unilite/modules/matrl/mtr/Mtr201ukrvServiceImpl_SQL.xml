<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtr201ukrvServiceImpl">
	<select id="mtr201ukrvServiceImpl.selectreleaseNoMasterList" parameterType="Map" resultType="rMap">     /* 검색팝업창 */
        --mtr201ukrv.Cmtr201ukrv[fnMtr201QPop] Query01
        SELECT DISTINCT A.WH_CODE
             , A.WH_CELL_CODE
             , B.WH_CELL_NAME
             , uniLITE.fnGetUserDate(A.COMP_CODE,A.INOUT_DATE) AS INOUT_DATE
             , A.INOUT_CODE_TYPE
             , CASE A.INOUT_CODE_TYPE
                    WHEN '4'
                         THEN (SELECT CUSTOM_NAME
                                 FROM BCM100T
                                WHERE CUSTOM_CODE = A.INOUT_CODE)
                    WHEN '4'
                         THEN uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.INOUT_CODE)
                    WHEN '1'
                         THEN (SELECT TREE_NAME
                                 FROM BSA210T
                                WHERE COMP_CODE  = A.COMP_CODE
                                  AND TREE_CODE  = A.INOUT_CODE
                                  AND TYPE_LEVEL = A.DIV_CODE)
                    WHEN '3'
                         THEN (SELECT TREE_NAME
                                 FROM BSA230T
                                WHERE COMP_CODE  = A.COMP_CODE
                                  AND TREE_CODE  = A.INOUT_CODE
                                  AND TYPE_LEVEL = A.DIV_CODE)
                END AS INOUT_NAME
             , A.INOUT_PRSN
             , A.INOUT_NUM
             , A.DIV_CODE
             , A.LOT_NO
          FROM            BTR100T AS A WITH(NOLOCK)
               LEFT  JOIN BSA225T AS B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                   AND B.DIV_CODE     = A.DIV_CODE
                                                   AND B.WH_CODE      = A.WH_CODE
                                                   AND B.WH_CELL_CODE = A.WH_CELL_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.INOUT_TYPE  = '2'
           AND A.CREATE_LOC IN ('2', '3')
           AND A.INOUT_CODE_TYPE       != '5'
           AND ISNULL(A.ORDER_TYPE,'') != '4'
         <if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
           AND A.INOUT_CODE LIKE #{INOUT_CODE} + '%'
         </if>
         <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
           AND A.INOUT_DATE &gt;= #{FR_INOUT_DATE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
           AND A.INOUT_DATE &lt;= #{TO_INOUT_DATE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
           AND A.WH_CODE = #{WH_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
           AND A.INOUT_PRSN = #{INOUT_PRSN}
         </if>
         <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
           AND A.INOUT_CODE_TYPE = #{INOUT_CODE_TYPE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND A.DIV_CODE = #{DIV_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
           AND A.WH_CELL_CODE = #{WH_CELL_CODE}
         </if>
           ORDER BY 1,2,3,4
    </select>

    <select id="mtr201ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">        /* 메인조회창 */
        -- 출고내역 조회
        --mtr201ukrv.Cmtr201ukrv[fnMtr201QStd] Query01
        DECLARE     @COMP_CODE      NVARCHAR(08)        -- 법인코드 (필수)
                  , @DIV_CODE       NVARCHAR(08)        -- 사업장   (필수)
                  , @INOUT_NUM      NVARCHAR(20)        -- 출고번호 (필수)
                  , @USER_ID        NVARCHAR(100)        -- 사용자ID (필수)

        SET     @COMP_CODE      = #{S_COMP_CODE}
        SET     @DIV_CODE       = #{DIV_CODE}
        SET     @INOUT_NUM      = #{INOUT_NUM}
        SET     @USER_ID        = #{S_USER_ID}

        DECLARE     @RefItem        NVARCHAR(01)        -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = ref_item
        FROM   BSA300T WITH (NOLOCK)
        WHERE  comp_code = @COMP_CODE
        AND    user_id   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

        SELECT A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_METH
             , A.INOUT_TYPE_DETAIL
             , A.DIV_CODE
             , A.INOUT_CODE
             , CASE WHEN A.INOUT_CODE_TYPE = '1' THEN C1.TREE_NAME  END AS INOUT_NAME2 -- 부서
             , CASE WHEN A.INOUT_CODE_TYPE = '2' THEN A.INOUT_CODE  END AS INOUT_NAME  -- 창고
             , CASE WHEN A.INOUT_CODE_TYPE = '3' THEN C3.TREE_NAME  END AS INOUT_NAME1-- 작업장
             , CASE WHEN A.INOUT_CODE_TYPE = '4' OR  A.INOUT_CODE_TYPE = '5'
             		   THEN (SELECT CUSTOM_NAME
             					FROM BCM100T
             					WHERE A.COMP_CODE = COMP_CODE
             					AND A.INOUT_CODE = CUSTOM_CODE )
               END  AS INOUT_NAME3
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C.ITEM_NAME
                    WHEN @RefItem = '1' THEN C.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C.ITEM_NAME2
                    ELSE                     C.ITEM_NAME
               END  AS ITEM_NAME
             , C.SPEC
             , C.STOCK_UNIT
             , G.PATH_CODE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(G.OUTSTOCK_REQ_Q, 0) - ISNULL(G.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS NOT_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS INOUT_Q

             , A.WH_CODE
             , C4.TREE_NAME                                                         AS WH_NAME
             , A.WH_CELL_CODE
             , C5.WH_CELL_NAME
             , A.LOT_NO

             , A.ITEM_STATUS
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS ORIGINAL_Q
             , uniLITE.fnFormat(@COMP_CODE, CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'N' THEN ISNULL(D.GOOD_STOCK_Q,0)
                                                 ELSE ISNULL(B.GOOD_STOCK_Q, 0)
                                            END                 , 'M_FSET_QS')      AS GOOD_STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, CASE WHEN ISNULL(M1.REF_CODE1, 'N') = 'N' THEN ISNULL(D.BAD_STOCK_Q,0)
                                                 ELSE ISNULL(B.BAD_STOCK_Q, 0)
                                            END                 , 'M_FSET_QS')      AS BAD_STOCK_Q
             , A.BASIS_NUM
             , A.BASIS_SEQ
             , A.INOUT_TYPE
             , A.INOUT_CODE_TYPE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.INOUT_DATE) AS INOUT_DATE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.INOUT_P, 0), 'M_FSET_QS')      AS INOUT_P
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.INOUT_I, 0), 'M_FSET_QS')      AS INOUT_I
             , A.MONEY_UNIT
             , A.INOUT_PRSN
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.ACCOUNT_Q, 0), 'M_FSET_QS')    AS ACCOUNT_Q
             , A.ACCOUNT_YNC
             , ISNULL(A.CREATE_LOC, '')                                             AS CREATE_LOC
             , A.ORDER_NUM
             , A.REMARK
             , A.PROJECT_NO
             , A.SALE_DIV_CODE
             , A.SALE_CUSTOM_CODE
             , A.BILL_TYPE
             , A.SALE_TYPE
             , A.COMP_CODE

            --'ARRAY DATA는 여러건의 출고요청 참조시 PMP35OT 테이블 저장 및 계산시 사용된다.
             , H.OUTSTOCK_NUM           AS ARRAY_OUTSTOCK_NUM       -- 출고요청번호(ARRAY DATA)
             , H.REF_WKORD_NUM          AS ARRAY_REF_WKORD_NUM      -- 작업지시번호(ARRAY DATA)
             , H.OUTSTOCK_REQ_Q         AS ARRAY_OUTSTOCK_REQ_Q     -- 출고요청량  (ARRAY DATA)
             , H.OUTSTOCK_Q             AS ARRAY_OUTSTOCK_Q         -- 출고량      (ARRAY DATA)
             , H.REMARK                 AS ARRAY_REMARK             -- 비고        (ARRAY DATA)
             , H.PROJECT_NO             AS ARRAY_PROJECT_NO         -- 프로젝트번호(ARRAY DATA)
             , H.LOT_NO                 AS ARRAY_LOT_NO             -- LOT 번호    (ARRAY DATA)

             , A.INSERT_DB_USER
             , A.INSERT_DB_TIME
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , '' AS DATA_CHECK
             , '' AS UPLOAD_YN
        FROM              BTR100T A  WITH (NOLOCK)
               INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                  AND C.ITEM_CODE      = A.ITEM_CODE
               LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                  AND D.DIV_CODE       = A.DIV_CODE
                                                  AND D.WH_CODE        = A.WH_CODE
                                                  AND D.ITEM_CODE      = A.ITEM_CODE
               LEFT  JOIN BIV150T B  WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                  AND B.DIV_CODE       = A.DIV_CODE
                                                  AND B.SUM_TYPE       = N'D'
                                                  AND B.WH_CODE        = A.WH_CODE
                                                  AND B.WH_CELL_CODE   = A.WH_CELL_CODE
                                                  AND B.LOT_NO         = A.LOT_NO
                                                  AND B.ITEM_CODE      = A.ITEM_CODE
               LEFT  JOIN SOF110T E  WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
                                                  AND E.DIV_CODE       = A.DIV_CODE
                                                  AND E.ORDER_NUM      = A.ORDER_NUM
                                                  AND E.SER_NO         = A.ORDER_SEQ
               LEFT  JOIN (SELECT A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                                , SUM(ISNULL(B.OUTSTOCK_REQ_Q, 0))  AS OUTSTOCK_REQ_Q
                                , SUM(ISNULL(B.OUTSTOCK_Q, 0))      AS OUTSTOCK_Q
                           FROM              PMP350T A WITH (NOLOCK)
                                  INNER JOIN PMP300T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
                                                                    AND A.DIV_CODE      = B.DIV_CODE
                                                                    AND A.OUTSTOCK_NUM  = B.OUTSTOCK_NUM
                                                                    AND A.REF_WKORD_NUM = B.REF_WKORD_NUM
                                                                    AND A.ITEM_CODE     = B.ITEM_CODE
                           WHERE  A.COMP_CODE = @COMP_CODE
                           AND    A.DIV_CODE  = @DIV_CODE
                           AND    (
                                  (@INOUT_NUM = '') OR (@INOUT_NUM != '' AND A.INOUT_NUM = @INOUT_NUM)
                                  )
                           GROUP BY A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                          ) G    ON G.COMP_CODE      = A.COMP_CODE
                                AND G.DIV_CODE       = A.DIV_CODE
                                AND G.INOUT_NUM      = A.INOUT_NUM
                                AND G.INOUT_SEQ      = A.INOUT_SEQ
                                AND G.INOUT_TYPE     = A.INOUT_TYPE
               LEFT  JOIN uniLITE.fnArrayOutStockReq(@COMP_CODE, @DIV_CODE, @INOUT_NUM, 0) H
                                                   ON H.COMP_CODE      = A.COMP_CODE
                                                  AND H.DIV_CODE       = A.DIV_CODE
                                                  AND H.INOUT_NUM      = A.INOUT_NUM
                                                  AND H.INOUT_SEQ      = A.INOUT_SEQ
                                                  AND H.INOUT_TYPE     = A.INOUT_TYPE
               LEFT  JOIN BSA210T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
                                                  AND C1.TYPE_LEVEL    = A.DIV_CODE
                                                  AND C1.TREE_CODE     = A.INOUT_CODE
               LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
                                                  AND C2.TYPE_LEVEL    = A.DIV_CODE
                                                  AND C2.TREE_CODE     = A.INOUT_CODE
               LEFT  JOIN BSA230T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
                                                  AND C3.TYPE_LEVEL    = A.DIV_CODE
                                                  AND C3.TREE_CODE     = A.INOUT_CODE
               LEFT  JOIN BSA220T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
                                                  AND C4.TYPE_LEVEL    = A.DIV_CODE
                                                  AND C4.TREE_CODE     = A.WH_CODE
               LEFT  JOIN BSA225T C5 WITH (NOLOCK) ON C5.COMP_CODE     = A.COMP_CODE
                                                  AND C5.DIV_CODE      = A.DIV_CODE
                                                  AND C5.WH_CODE       = A.WH_CODE
                                                  AND C5.WH_CELL_CODE  = A.WH_CELL_CODE
               LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
                                                  AND M1.MAIN_CODE     = N'B084'
                                                  AND M1.SUB_CODE      = N'D'
        WHERE  A.COMP_CODE        = @COMP_CODE
        AND    A.DIV_CODE         = @DIV_CODE
        AND    A.INOUT_TYPE       = '2'
        AND    A.CREATE_LOC      IN ('2', '3')
        AND    A.INOUT_CODE_TYPE != '4'

        AND    (
               (@INOUT_NUM        = '') OR (@INOUT_NUM != '' AND A.INOUT_NUM = @INOUT_NUM)
               )
        ORDER BY A.INOUT_NUM, A.INOUT_SEQ
    </select>

    <insert id="mtr201ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE		    , OPR_FLAG
             , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
             , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
             , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
             , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
             , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
             , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE
             , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC		    , ACCOUNT_Q 			, UPDATE_DB_USER
             , UPDATE_DB_TIME)
        VALUES
             ( #{KEY_VALUE}         , #{OPR_FLAG}
             , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
             , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
             , #{INOUT_CODE_DETAIL} , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
             , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
             , #{MONEY_UNIT}        , #{BASIS_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
             , #{LOT_NO}            , #{REMARK}             , #{ORDER_NUM}          , #{BILL_TYPE}          , #{SALE_TYPE}
             , #{SALE_DIV_CODE}     , #{SALE_CUSTOM_CODE}   , #{ACCOUNT_YNC}        , #{ACCOUNT_Q} 			, #{S_USER_ID}
             , GETDATE())
    </insert>

    <update id="mtr201ukrvServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_MATRL_Mtr200ukr  (
            #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
</mapper>