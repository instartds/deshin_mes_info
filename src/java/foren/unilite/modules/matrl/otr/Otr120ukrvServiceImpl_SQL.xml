<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="otr120ukrvServiceImpl">
	<select id="otr120ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">		/* 입고내역조회 */
	/* otr120ukrv.Cotr120ukrv[fnOtr120QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT A.INOUT_NUM
         , A.INOUT_SEQ
         , A.INOUT_METH
         , A.INOUT_TYPE_DETAIL
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                     ELSE C1.ITEM_NAME
             END)                                                                  AS ITEM_NAME
         , C2.ITEM_ACCOUNT
         , C1.SPEC
         , ISNULL(A.ORDER_UNIT, C1.STOCK_UNIT)                                     AS ORDER_UNIT
         , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_UNIT_Q, 0),     'M_FSET_QS') AS ORDER_UNIT_Q
         , A.ITEM_STATUS
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0),          'M_FSET_QS') AS ORIGINAL_Q
         , uniLITE.fnFormat(@CompCode, ISNULL(C.GOOD_STOCK_Q, 0),     'M_FSET_QS') AS GOOD_STOCK_Q
         , uniLITE.fnFormat(@CompCode, ISNULL(C.BAD_STOCK_Q, 0),      'M_FSET_QS') AS BAD_STOCK_Q
         , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_Q,0)
                                      - ISNULL(B.INSTOCK_Q, 0),       'M_FSET_QS') AS NOINOUT_Q
         , A.PRICE_YN
         , A.MONEY_UNIT
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_FOR_P, 0),      'M_FSET_PS') AS INOUT_FOR_P
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_FOR_O, 0),      'M_FSET_OS') AS INOUT_FOR_O
         , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_UNIT_FOR_P, 0), 'M_FSET_PS') AS ORDER_UNIT_FOR_P
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_FOR_O, 0),      'M_FSET_OS') AS ORDER_UNIT_FOR_O
         , A.ACCOUNT_YNC
         , uniLITE.fnFormat(@CompCode, ISNULL(A.EXCHG_RATE_O, 0),     'M_FSET_RS') AS EXCHG_RATE_O
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0),          'M_FSET_PS') AS INOUT_P
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0),          'M_FSET_IS') AS INOUT_I
         , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_UNIT_P, 0),     'M_FSET_PS') AS ORDER_UNIT_P
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0),          'M_FSET_IS') AS ORDER_UNIT_I
         , C1.STOCK_UNIT
         , A.TRNS_RATE
         , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0),          'M_FSET_QS') AS INOUT_Q
         , A.ORDER_TYPE
         , A.LC_NUM
         , A.BL_NUM
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_Q, 0),          'M_FSET_QS') AS ORDER_Q
         , A.INOUT_CODE_TYPE
         , A.WH_CODE
         , A.WH_CELL_CODE
         , C4.WH_CELL_NAME
         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
             END)                                                                  AS INOUT_DATE
         , A.INOUT_PRSN
         , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0),        'M_FSET_QS') AS ACCOUNT_Q
         , A.CREATE_LOC
         , (CASE WHEN ISNULL(A.SALE_C_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.SALE_C_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.SALE_C_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.SALE_C_DATE, 7, 2))
             END)                                                                  AS SALE_C_DATE
         , A.REMARK
         , A.PROJECT_NO
         , A.LOT_NO
         , A.INOUT_TYPE
         , A.INOUT_CODE
         , A.DIV_CODE
         , (CASE WHEN @RefItem = '1' THEN C3.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN C3.CUSTOM_NAME2
                                     ELSE C3.CUSTOM_NAME
             END)                                                                  AS CUSTOM_NAME
         , C3.COMPANY_NUM
         , uniLITE.fnFormat(@CompCode, ISNULL(B.INSTOCK_Q, 0),        'M_FSET_QS') AS INSTOCK_Q
         , A.SALE_DIV_CODE
         , A.SALE_CUSTOM_CODE
         , A.BILL_TYPE
         , A.SALE_TYPE
         , A.UPDATE_DB_USER
         , A.UPDATE_DB_TIME
         , uniLITE.fnFormat(@CompCode, C2.EXCESS_RATE,                'M_FSET_RS') AS EXCESS_RATE
         , A.INSPEC_NUM
         , ISNULL(A.INSPEC_SEQ,0) AS INSPEC_SEQ
         , A.COMP_CODE
         , A.BASIS_NUM
         , ISNULL(A.BASIS_SEQ,0) AS BASIS_SEQ
         , A.SCM_FLAG_YN
         , R2.ORDER_NUM AS SO_NUM
		 , R4.ITEM_NAME AS SOF_ITEM_NAME
		 , R5.CUSTOM_NAME AS SOF_CUSTOM_NAME
		 , A.PACK_UNIT_Q
		 , A.BOX_Q
		 , A.EACH_Q
		 , A.LOSS_Q
    FROM              BTR100T A  WITH (NOLOCK)
           LEFT  JOIN MPO200T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                              AND B.DIV_CODE      = A.DIV_CODE
                                              AND B.ORDER_NUM     = A.ORDER_NUM
                                              AND B.ORDER_SEQ     = A.ORDER_SEQ
           LEFT  JOIN BIV100T C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                              AND C.DIV_CODE      = A.DIV_CODE
                                              AND C.WH_CODE       = A.WH_CODE
                                              AND C.ITEM_CODE     = A.ITEM_CODE
           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                              AND C1.ITEM_CODE    = A.ITEM_CODE
           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                              AND C2.DIV_CODE     = A.DIV_CODE
                                              AND C2.ITEM_CODE    = A.ITEM_CODE
           INNER JOIN BCM100T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
                                              AND C3.CUSTOM_CODE  = A.INOUT_CODE
           LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                              AND C4.DIV_CODE     = A.DIV_CODE
                                              AND C4.WH_CODE      = A.WH_CODE
                                              AND C4.WH_CELL_CODE = A.WH_CELL_CODE

          LEFT JOIN SOF110T R2 WITH(NOLOCK) ON R2.COMP_CODE = B.COMP_CODE
		   									AND R2.ORDER_NUM = B.SO_NUM
		   									AND R2.SER_NO = B.SO_SEQ
		   LEFT JOIN SOF100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
		   									AND R3.ORDER_NUM = R2.ORDER_NUM
		   LEFT JOIN BPR100T R4 WITH(NOLOCK) ON R4.COMP_CODE = R2.COMP_CODE
										    AND R4.ITEM_CODE = R2.ITEM_CODE
		   LEFT JOIN BCM100T R5 WITH(NOLOCK) ON R5.COMP_CODE = R3.COMP_CODE
										    AND R5.CUSTOM_CODE = R3.CUSTOM_CODE


    WHERE  A.COMP_CODE       = @CompCode
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND    A.DIV_CODE        = #{DIV_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
    AND    A.INOUT_NUM       = #{INOUT_NUM}
    </if>
    AND    A.INOUT_TYPE      = N'1'
    AND    A.CREATE_LOC      = N'2'
    AND    A.INOUT_CODE_TYPE = N'5'
    ORDER BY A.INOUT_DATE DESC, A.INOUT_NUM DESC, A.INOUT_SEQ ASC

    SET NOCOUNT OFF
    SET ARITHABORT OFF
	END

	</select>

	<select id="otr120ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		/* 검색 */
	/* otr120ukrv.Cotr120ukrv[fnOtr120QPop] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT DISTINCT
	           (CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
	                                     ELSE C1.CUSTOM_NAME
	             END)            AS INOUT_NAME
	         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
	             END)            AS INOUT_DATE
	         , A.ORDER_TYPE
	         , A.INOUT_CODE
	         , A.WH_CODE
	         , A.WH_CELL_CODE
	         , C2.WH_CELL_NAME
	         , A.DIV_CODE
	         , A.INOUT_PRSN
	         , A.INOUT_NUM
	         , A.LOT_NO
	         , A.MONEY_UNIT
	         , A.EXCHG_RATE_O
	         , PACK_UNIT_Q
	         , BOX_Q
	         , EACH_Q
	         , LOSS_Q
	         , ORDER_NUM AS PO_NO
	    FROM              BTR100T A  WITH (NOLOCK)
	           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.CUSTOM_CODE  = A.INOUT_CODE
	           LEFT  JOIN BSA225T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.DIV_CODE     = A.DIV_CODE
	                                              AND C2.WH_CODE      = A.WH_CODE
	                                              AND C2.WH_CELL_CODE = A.WH_CELL_CODE
	    WHERE  A.COMP_CODE          = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE           =        #{DIV_CODE}
	    </if>
	    AND    A.INOUT_TYPE         =        N'1'
	    AND    A.INOUT_CODE_TYPE    =        N'5'
	    <if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">
	    AND    A.INOUT_CODE      LIKE        #{INOUT_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
	    AND    C1.CUSTOM_NAME    LIKE '%' +  #{CUSTOM_NAME} + '%'
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
	    AND    A.INOUT_DATE        &gt;=     #{FR_INOUT_DATE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
	    AND    A.INOUT_DATE        &lt;=     #{TO_INOUT_DATE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE            =        #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE       =        #{WH_CELL_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
	    AND    A.INOUT_PRSN         =        #{INOUT_PRSN}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
	    AND    A.LOT_NO          LIKE        #{LOT_NO}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
	    AND    A.INOUT_NUM          LIKE     '%' +   #{INOUT_NUM} + '%'
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(PO_NO)">
	    AND    A.ORDER_NUM          LIKE      '%' +  #{PO_NO} + '%'
	    </if>
	    ORDER BY INOUT_NAME, INOUT_DATE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>

	<select id="otr120ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">		/* 미입고참조 */
	/*otr120ukrv.Cotr120ukrv[fnRtn120QRef] Query01*/
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
			  , @InspecUse    NVARCHAR(01) /*검사프로그램 사용여부*/
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		SELECT TOP 1 @InspecUse = MAX(SUB_CODE)
		FROM   BSA100T
		WHERE  COMP_CODE = @CompCode
		AND    MAIN_CODE = 'Q003'
		AND    UPPER(ISNULL(LEFT(REF_CODE1,1),'')) = 'Y'

		SET @InspecUse = ISNULL(@InspecUse, 'N')

	    /* 데이터 조회 */
		SELECT
				CAST('' AS BIT)                                                       AS GUBUN
			 , B.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
					WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE                     C1.ITEM_NAME
			   END                                                                    AS ITEM_NAME
			 , C1.SPEC
			 , uniLITE.fnGetUserDate(B.COMP_CODE, B.DVRY_DATE)                        AS DVRY_DATE
			 , A.DIV_CODE
			 , B.ORDER_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_UNIT_Q, 0),  'M_FSET_QS')  AS ORDER_UNIT_Q
             , uniLITE.fnFormat(@CompCode, (ISNULL(B.ORDER_UNIT_Q, 0) - (ISNULL(B.INSTOCK_Q, 0)
                                          / ISNULL(B.TRNS_RATE, 1))),   'M_FSET_QS')  AS REMAIN_Q
             , C1.STOCK_UNIT
             , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_Q, 0)
                                          - ISNULL(B.INSTOCK_Q, 0),     'M_FSET_QS')  AS NOINOUT_Q
             , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_Q, 0),       'M_FSET_QS')  AS ORDER_Q
             , A.MONEY_UNIT
             , uniLITE.fnFormat(@CompCode, ISNULL(A.EXCHG_RATE_O, 0),  'M_FSET_RS')  AS EXCHG_RATE_O
             , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_P, 0),       'M_FSET_PS')  AS ORDER_P
             , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_UNIT_P, 0),  'M_FSET_PS')  AS ORDER_UNIT_P
             , uniLITE.fnFormat(@CompCode, (ISNULL(B.ORDER_UNIT_Q, 0) - (ISNULL(B.INSTOCK_Q, 0)/ ISNULL(B.TRNS_RATE, 1))) * ISNULL(B.ORDER_UNIT_P, 0),'M_FSET_OS')  AS ORDER_O
			 , B.ORDER_NUM
			 , B.ORDER_SEQ
			 , A.LC_NUM
			 , B.WH_CODE
			 , '' AS WH_CELL_CODE
			 , B.ORDER_REQ_NUM
			 , A.ORDER_TYPE
			 , A.CUSTOM_CODE
			 , ISNULL(B.TRNS_RATE, 1)                                                 AS TRNS_RATE
			 , B.LOT_NO
			 , B.REMARK
			 , B.PROJECT_NO
		FROM              MPO100T A  WITH (NOLOCK)
			   INNER JOIN MPO200T B  WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
												  AND A.DIV_CODE   = B.DIV_CODE
												  AND A.ORDER_NUM  = B.ORDER_NUM
			   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B.COMP_CODE
												  AND C1.ITEM_CODE = B.ITEM_CODE
			   INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = B.COMP_CODE
												  AND C2.DIV_CODE  = B.IN_DIV_CODE
												  AND C2.ITEM_CODE = B.ITEM_CODE
		WHERE  A.COMP_CODE                    = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND    B.IN_DIV_CODE                     = #{DIV_CODE}
		</if>
		AND    B.CONTROL_STATUS              != N'9'
		AND    ISNULL(A.ORDER_TYPE, '')       = N'4'
		AND    B.ORDER_Q                   &gt; B.INSTOCK_Q
		AND    ISNULL(A.AGREE_STATUS, '1') &gt; N'1'
		AND    (
       (@InspecUse    = 'N') OR (@InspecUse   = 'Y' AND ISNULL(B.INSPEC_FLAG, ISNULL(C2.INSPEC_YN, 'N')) = 'N')
       )
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	    AND A.CUSTOM_CODE                     = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
		AND B.DVRY_DATE                  &gt;= #{FR_DVRY_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
		AND B.DVRY_DATE                  &lt;= #{TO_DVRY_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		AND A.ORDER_TYPE                      = #{ORDER_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		AND B.WH_CODE                         = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		AND A.MONEY_UNIT                      = #{MONEY_UNIT}
		</if>

		ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>

	<select id="otr120ukrvServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		/* 반품가능발주참조 */
	/* --otr120ukrv.Cotr120ukrv[fnRtn120QRef] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT
				CAST('' AS BIT)                                                       AS GUBUN
			 , B.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
					WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					WHEN @RefItem = '2' THEN C1.ITEM_NAME2
					ELSE                     C1.ITEM_NAME
			   END                                                                    AS ITEM_NAME
			 , C1.SPEC
			 , uniLITE.fnGetUserDate(B.COMP_CODE, B.DVRY_DATE)                        AS DVRY_DATE
			 , A.DIV_CODE
			 , B.ORDER_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_UNIT_Q, 0),  'M_FSET_QS')  AS ORDER_UNIT_Q
			 , uniLITE.fnFormat(@CompCode, (ISNULL(B.INSTOCK_Q, 0) / ISNULL(B.TRNS_RATE, 1))
										  * (-1),                       'M_FSET_QS')  AS REMAIN_Q
			 , C1.STOCK_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL( B.INSTOCK_Q, 0)
										  * (-1),                       'M_FSET_QS')  AS NOINOUT_Q
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_Q, 0),       'M_FSET_QS')  AS ORDER_Q
			 , A.MONEY_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.EXCHG_RATE_O, 0),  'M_FSET_RS')  AS EXCHG_RATE_O
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_P, 0),       'M_FSET_PS')  AS ORDER_P
			 , uniLITE.fnFormat(@CompCode, ISNULL(B.ORDER_UNIT_P, 0),  'M_FSET_PS')  AS ORDER_UNIT_P
			 , uniLITE.fnFormat(@CompCode, ((ISNULL(B.INSTOCK_Q, 0) / ISNULL(B.TRNS_RATE, 1)) * (-1))
										  * ISNULL(B.ORDER_UNIT_P, 0),  'M_FSET_QS')  AS ORDER_O
			 , B.ORDER_NUM
			 , B.ORDER_SEQ
			 , A.LC_NUM
			 , B.WH_CODE
			 , '' AS WH_CELL_CODE
			 , B.ORDER_REQ_NUM
			 , A.ORDER_TYPE
			 , A.CUSTOM_CODE
			 , ISNULL(B.TRNS_RATE, 1)                                                 AS TRNS_RATE
			 , B.LOT_NO
			 , B.REMARK
			 , B.PROJECT_NO
			 , C.INSPEC_NUM
			 , C.INSPEC_SEQ
		FROM              MPO100T A  WITH (NOLOCK)
			   INNER JOIN MPO200T B  WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
												  AND A.DIV_CODE   = B.DIV_CODE
												  AND A.ORDER_NUM  = B.ORDER_NUM
			   LEFT  JOIN BTR100T C  WITH (NOLOCK) ON B.COMP_CODE  = C.COMP_CODE
												  AND B.IN_DIV_CODE  = C.DIV_CODE
												  AND B.ORDER_NUM  = C.ORDER_NUM
												  AND B.ORDER_SEQ  = C.ORDER_SEQ
												  AND C.INOUT_CODE = '1'
			   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = B.COMP_CODE
												  AND C1.ITEM_CODE = B.ITEM_CODE
			   INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = B.COMP_CODE
												  AND C2.DIV_CODE  = B.IN_DIV_CODE
												  AND C2.ITEM_CODE = B.ITEM_CODE
		WHERE  A.COMP_CODE                 = @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND    B.IN_DIV_CODE                  = #{DIV_CODE}
		</if>
		AND    B.CONTROL_STATUS           != N'9'
		AND    ISNULL(A.ORDER_TYPE, '')    = N'4'
		AND    ISNULL(B.INSTOCK_Q, 0)      > 0
		AND    ISNULL(A.AGREE_STATUS, '1') > N'1'
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	    AND A.CUSTOM_CODE                  = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
		AND A.ORDER_DATE                  &gt; #{FR_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
		AND A.ORDER_DATE                  &lt; #{TO_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		AND B.WH_CODE                      = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		AND A.MONEY_UNIT                   = #{MONEY_UNIT}
		</if>

		ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>

	<select id="otr120ukrvServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">		/* 검사결과참조 */
	/* otr120ukrv.Cotr120ukrv[fnQms120QRef] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    /* 외주입고시 불량반영여부 체크 */
	    IF EXISTS(SELECT TOP 1 REF_CODE1
	                FROM BSA100T WITH (NOLOCK)
	               WHERE COMP_CODE = @CompCode
	                 AND MAIN_CODE = 'M023'
	                 AND SUB_CODE  = '1'
	                 AND REF_CODE1 = 'Y')
	    BEGIN
	        SELECT CAST('' AS BIT) AS GUBUN
	             , B.ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                                         ELSE C.ITEM_NAME
	                 END)                                                AS ITEM_NAME
	             , D.ITEM_ACCOUNT
	             , C.SPEC
	             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	                 END)                                           AS DVRY_DATE
	             , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
	                 END)                                           AS INSPEC_DATE
	             , A.DIV_CODE
	             , B.ORDER_UNIT
	             , B.ORDER_UNIT_Q
	             , (ISNULL(E.GOOD_INSPEC_Q,0))                          AS REMAIN_Q
	             , C.STOCK_UNIT
	             , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
	             , B.ORDER_Q
	             , B.UNIT_PRICE_TYPE
	             , '1'          AS ITEM_STATUS
	             , A.MONEY_UNIT
	             , A.EXCHG_RATE_O
	             , B.ORDER_P
	             , B.ORDER_UNIT_P
	             , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
	             , B.ORDER_NUM
	             , B.ORDER_SEQ
	             , A.LC_NUM
	             , B.WH_CODE
	             , D.WH_CELL_CODE        AS WH_CELL_CODE    --20210819 수정: '' -> D.WH_CELL_CODE
	             , B.ORDER_REQ_NUM
	             , A.ORDER_TYPE
	             , A.CUSTOM_CODE
	             ,(CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
	                    WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
	                                        ELSE G.CUSTOM_NAME
	                END)                 AS CUSTOM_NAME
	             , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
	             , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
	             , A.PROJECT_NO
	             , D.EXCESS_RATE
	             , E.INSPEC_NUM
	             , E.INSPEC_SEQ
	             , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
	             --20200416 주석
	             --, B.LOT_NO
	             , E.REMARK     AS INSPEC_REMARK
	             , E.PROJECT_NO AS INSPEC_PROJECT_NO
	             ,R2.ORDER_NUM AS SO_NUM
	             ,R4.ITEM_NAME AS SOF_ITEM_NAME
	             ,R5.CUSTOM_NAME AS SOF_CUSTOM_NAME
	             --20200413 추가: LOT_NO
	             , E.LOT_NO
	        FROM              MPO100T A WITH (NOLOCK)
	               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
	                                                 AND A.DIV_CODE    = B.DIV_CODE
	                                                 AND A.ORDER_NUM   = B.ORDER_NUM
	               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                 AND C.ITEM_CODE   = B.ITEM_CODE
	               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
	                                                 AND D.DIV_CODE    = B.DIV_CODE
	                                                 AND D.ITEM_CODE   = B.ITEM_CODE
	               INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
	                                                 AND E.DIV_CODE    = B.IN_DIV_CODE
	                                                 AND E.ORDER_NUM   = B.ORDER_NUM
	                                                 AND E.ORDER_SEQ   = B.ORDER_SEQ
	               INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                 AND G.CUSTOM_CODE = B.CUSTOM_CODE
	               LEFT  JOIN (
	                          SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, INSPEC_NUM, INSPEC_SEQ
	                          FROM   BTR100T WITH (NOLOCK)
	                          WHERE  INSPEC_NUM     IS NOT NULL
	                          AND    ITEM_STATUS     = N'1'
	                          AND    CREATE_LOC      = N'2'
	                          AND    INOUT_CODE_TYPE = N'5'
	                          GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
	                          ) F ON E.INSPEC_NUM = F.INSPEC_NUM
	                             AND E.INSPEC_SEQ = F.INSPEC_SEQ
	                             AND E.DIV_CODE   = F.DIV_CODE
	                             AND E.COMP_CODE  = F.COMP_CODE
			   LEFT JOIN SOF110T R2 WITH(NOLOCK) ON R2.COMP_CODE = B.COMP_CODE
			   									AND R2.ORDER_NUM = B.SO_NUM
			   									AND R2.SER_NO = B.SO_SEQ
			   LEFT JOIN SOF100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
			   									AND R3.ORDER_NUM = R2.ORDER_NUM
			   LEFT JOIN BPR100T R4 WITH(NOLOCK) ON R4.COMP_CODE = R2.COMP_CODE
											    AND R4.ITEM_CODE = R2.ITEM_CODE
			   LEFT JOIN BCM100T R5 WITH(NOLOCK) ON R5.COMP_CODE = R3.COMP_CODE
											    AND R5.CUSTOM_CODE = R3.CUSTOM_CODE


	        WHERE    A.COMP_CODE    = @CompCode
	        AND    B.CONTROL_STATUS          != N'9'
	        AND    ISNULL(A.ORDER_TYPE,'')    = N'4'
	        AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
	        AND    ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
	                                      FROM   BPR200T WITH (NOLOCK)
	                                      WHERE  COMP_CODE = B.COMP_CODE
	                                      AND    DIV_CODE  = B.DIV_CODE
	                                      AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'

	        AND    (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0)   / ISNULL(B.TRNS_RATE,1))) &gt; 0
	        AND    (ISNULL(E.GOOD_INSPEC_Q,0))                                                   &gt; 0
	     
	     --2021-04-06 검사등록에서 이미 과입고허용률을 적용하여(발주수량보다 많은 검사등록을 한 경우)검사참조조회에서는 발주수량이 아닌 오직 검사수량으로 체크하도록 변경함
	        
	     -- AND    (ISNULL(B.ORDER_UNIT_Q,0)  - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) &gt; 0

	        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	        AND    B.IN_DIV_CODE     = #{DIV_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	        AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
	        AND    E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
	        AND    E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
	        AND    E.INSPEC_NUM   = #{INSPEC_NUM}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
	        AND    A.ORDER_TYPE   = #{ORDER_TYPE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	        AND    B.WH_CODE      = #{WH_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	        AND    A.MONEY_UNIT   = #{MONEY_UNIT}
	        </if>

	        UNION ALL

	        SELECT
	               CAST('' AS BIT) AS GUBUN
	             , B.ITEM_CODE
	             , CASE WHEN @RefItem = '0' THEN C.ITEM_NAME
	                    WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                    WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                    ELSE                     C.ITEM_NAME
	               END                                                  AS ITEM_NAME
	             , D.ITEM_ACCOUNT
	             , C.SPEC
	             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	                 END)                                           AS DVRY_DATE
			     , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
	                 END)                                           AS INSPEC_DATE
	             , A.DIV_CODE
	             , B.ORDER_UNIT
	             , B.ORDER_UNIT_Q
	             , (ISNULL(E.BAD_INSPEC_Q,0))                           AS REMAIN_Q
	             , C.STOCK_UNIT
	             , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
	             , B.ORDER_Q
	             , B.UNIT_PRICE_TYPE
	             , '2'          AS ITEM_STATUS
	             , A.MONEY_UNIT
	             , A.EXCHG_RATE_O
	             , B.ORDER_P
	             , B.ORDER_UNIT_P
	             , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
	             , B.ORDER_NUM
	             , B.ORDER_SEQ
	             , A.LC_NUM
	             , B.WH_CODE
	             , D.WH_CELL_CODE        AS WH_CELL_CODE    --20210819 수정: '' -> D.WH_CELL_CODE
	             , B.ORDER_REQ_NUM
	             , A.ORDER_TYPE
	             , A.CUSTOM_CODE
	             , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
	                     WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
	                                         ELSE G.CUSTOM_NAME
	                END)                 AS CUSTOM_NAME
	             , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
	             , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
	             , A.PROJECT_NO
	             , D.EXCESS_RATE
	             , E.INSPEC_NUM
	             , E.INSPEC_SEQ
	             , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
	             --20200416 주석
	             --, B.LOT_NO
	             , E.REMARK     AS INSPEC_REMARK
	             , E.PROJECT_NO AS INSPEC_PROJECT_NO

	             ,R2.ORDER_NUM AS SO_NUM
	             ,R4.ITEM_NAME AS SOF_ITEM_NAME
	             ,R5.CUSTOM_NAME AS SOF_CUSTOM_NAME
	             --20200413 추가: LOT_NO
	             , E.LOT_NO
	        FROM              MPO100T A WITH (NOLOCK)
	               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
	                                                 AND A.DIV_CODE    = B.DIV_CODE
	                                                 AND A.ORDER_NUM   = B.ORDER_NUM
	               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                 AND C.ITEM_CODE   = B.ITEM_CODE
	               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE   = B.COMP_CODE
	                                                 AND D.DIV_CODE    = B.DIV_CODE
	                                                 AND D.ITEM_CODE   = B.ITEM_CODE
	               INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
	                                                 AND E.DIV_CODE    = B.IN_DIV_CODE
	                                                 AND E.ORDER_NUM   = B.ORDER_NUM
	                                                 AND E.ORDER_SEQ   = B.ORDER_SEQ
	               INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                 AND G.CUSTOM_CODE = B.CUSTOM_CODE
	               LEFT  JOIN (
	                          SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, INSPEC_NUM, INSPEC_SEQ
	                          FROM   BTR100T WITH (NOLOCK)
	                          WHERE  INSPEC_NUM     IS NOT NULL
	                          AND    ITEM_STATUS     = N'2'
	                          AND    CREATE_LOC      = N'2'
	                          AND    INOUT_CODE_TYPE = N'5'
	                          GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
	                          ) F ON E.INSPEC_NUM = F.INSPEC_NUM
	                             AND E.INSPEC_SEQ = F.INSPEC_SEQ
	                             AND E.DIV_CODE   = F.DIV_CODE
	                             AND E.COMP_CODE  = F.COMP_CODE


	              LEFT JOIN SOF110T R2 WITH(NOLOCK) ON R2.COMP_CODE = B.COMP_CODE
			   									AND R2.ORDER_NUM = B.SO_NUM
			   									AND R2.SER_NO = B.SO_SEQ
			   LEFT JOIN SOF100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
			   									AND R3.ORDER_NUM = R2.ORDER_NUM
			   LEFT JOIN BPR100T R4 WITH(NOLOCK) ON R4.COMP_CODE = R2.COMP_CODE
											    AND R4.ITEM_CODE = R2.ITEM_CODE
			   LEFT JOIN BCM100T R5 WITH(NOLOCK) ON R5.COMP_CODE = R3.COMP_CODE
											    AND R5.CUSTOM_CODE = R3.CUSTOM_CODE



	        WHERE  A.COMP_CODE    = @CompCode
	        AND    B.CONTROL_STATUS          != N'9'
	        AND    ISNULL(A.ORDER_TYPE,'')    = N'4'
	        AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
	        AND    ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
	                                      FROM   BPR200T WITH (NOLOCK)
	                                      WHERE  COMP_CODE = B.COMP_CODE
	                                      AND    DIV_CODE  = B.DIV_CODE
	                                      AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'

	        AND    (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0)   / ISNULL(B.TRNS_RATE,1))) &gt; 0
	        AND    (ISNULL(E.BAD_INSPEC_Q,0))                                                   &gt; 0
    --2021-04-06 검사등록에서 이미 과입고허용률을 적용하여(발주수량보다 많은 검사등록을 한 경우)검사참조조회에서는 발주수량이 아닌 오직 검사수량으로 체크하도록 변경함	        
	--        AND    (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) &gt; 0

	        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	        AND    B.IN_DIV_CODE     = #{DIV_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	        AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
	        AND    E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
	        AND    E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND    E.INSPEC_NUM   = #{INSPEC_NUM}
			</if>
	        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
	        AND    A.ORDER_TYPE   = #{ORDER_TYPE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	        AND    B.WH_CODE      = #{WH_CODE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	        AND    A.MONEY_UNIT   = #{MONEY_UNIT}
	        </if>

	        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
	    END
	    ELSE
	    BEGIN
	        SELECT CAST('' AS BIT) AS GUBUN
	             , B.ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                                         ELSE C.ITEM_NAME
	                 END)                                            AS ITEM_NAME
	             , D.ITEM_ACCOUNT
	             , C.SPEC
			     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	                 END)                                            AS DVRY_DATE
	             , UNILITE.fnGetUserdate(E.COMP_CODE, E.INSPEC_DATE) AS INSPEC_DATE
			     , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
	                 END)                                           AS INSPEC_DATE
	             , A.DIV_CODE
	             , B.ORDER_UNIT
	             , B.ORDER_UNIT_Q
	             , (ISNULL(E.GOOD_INSPEC_Q,0)) AS REMAIN_Q
	             , C.STOCK_UNIT
	             , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
	             , B.ORDER_Q
	             , B.UNIT_PRICE_TYPE
	             , '1'          AS ITEM_STATUS
	             , A.MONEY_UNIT
	             , A.EXCHG_RATE_O
	             , B.ORDER_P
	             , B.ORDER_UNIT_P
	             , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
	             , B.ORDER_NUM
	             , B.ORDER_SEQ
	             , A.LC_NUM
	             , B.WH_CODE
	             , D.WH_CELL_CODE        AS WH_CELL_CODE    --20210819 수정: '' -> D.WH_CELL_CODE
	             , B.ORDER_REQ_NUM
	             , A.ORDER_TYPE
	             , A.CUSTOM_CODE
			     , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
	                          WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
	                      ELSE G.CUSTOM_NAME
	                 END)                AS CUSTOM_NAME
	             , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
	             , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
	             , A.PROJECT_NO
	             , D.EXCESS_RATE
	             , E.INSPEC_NUM
	             , E.INSPEC_SEQ
	             , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
	             --20200416 주석
	             --, B.LOT_NO
	             , E.REMARK     AS INSPEC_REMARK
	             , E.PROJECT_NO AS INSPEC_PROJECT_NO

	             ,R2.ORDER_NUM AS SO_NUM
	             ,R4.ITEM_NAME AS SOF_ITEM_NAME
	             ,R5.CUSTOM_NAME AS SOF_CUSTOM_NAME
	             --20200413 추가: LOT_NO
	             , E.LOT_NO
	        FROM              MPO100T A WITH (NOLOCK)
	               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
	                                                 AND A.DIV_CODE   = B.DIV_CODE
	                                                 AND A.ORDER_NUM  = B.ORDER_NUM
	               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
	                                                 AND C.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
	                                                 AND D.DIV_CODE   = B.DIV_CODE
	                                                 AND D.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN QMS200T E WITH (NOLOCK) ON E.COMP_CODE  = B.COMP_CODE
	                                                 AND E.DIV_CODE   = B.IN_DIV_CODE
	                                                 AND E.ORDER_NUM  = B.ORDER_NUM
	                                                 AND E.ORDER_SEQ  = B.ORDER_SEQ
	               INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                 AND G.CUSTOM_CODE = B.CUSTOM_CODE
	               LEFT  JOIN (
	                          SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, INSPEC_NUM, INSPEC_SEQ
	                          FROM   BTR100T WITH (NOLOCK)
	                          WHERE  INSPEC_NUM     IS NOT NULL
	                          AND    ITEM_STATUS     = N'1'
	                          AND    CREATE_LOC      = N'2'
	                          AND    INOUT_CODE_TYPE = N'5'
	                          GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
	                          ) F ON E.INSPEC_NUM = F.INSPEC_NUM
	                             AND E.INSPEC_SEQ = F.INSPEC_SEQ
	                             AND E.DIV_CODE   = F.DIV_CODE
	                             AND E.COMP_CODE  = F.COMP_CODE

	              LEFT JOIN SOF110T R2 WITH(NOLOCK) ON R2.COMP_CODE = B.COMP_CODE
			   									AND R2.ORDER_NUM = B.SO_NUM
			   									AND R2.SER_NO = B.SO_SEQ
			   LEFT JOIN SOF100T R3 WITH(NOLOCK) ON R3.COMP_CODE = R2.COMP_CODE
			   									AND R3.ORDER_NUM = R2.ORDER_NUM
			   LEFT JOIN BPR100T R4 WITH(NOLOCK) ON R4.COMP_CODE = R2.COMP_CODE
											    AND R4.ITEM_CODE = R2.ITEM_CODE
			   LEFT JOIN BCM100T R5 WITH(NOLOCK) ON R5.COMP_CODE = R3.COMP_CODE
											    AND R5.CUSTOM_CODE = R3.CUSTOM_CODE


	        WHERE  A.COMP_CODE    = @CompCode

	        AND    B.CONTROL_STATUS             != N'9'
	        AND    ISNULL(A.ORDER_TYPE,'')       = N'4'
	        AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
	        AND    ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
	                                      FROM   BPR200T WITH (NOLOCK)
	                                      WHERE  COMP_CODE = B.COMP_CODE
	                                      AND    DIV_CODE  = B.DIV_CODE
	                                      AND    ITEM_CODE = B.ITEM_CODE)) = N'Y'

	        AND    (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0)   / ISNULL(B.TRNS_RATE,1))) &gt; 0
	        AND    (ISNULL(E.GOOD_INSPEC_Q,0))                                                   &gt; 0
    --2021-04-06 검사등록에서 이미 과입고허용률을 적용하여(발주수량보다 많은 검사등록을 한 경우)검사참조조회에서는 발주수량이 아닌 오직 검사수량으로 체크하도록 변경함	        
	--        AND    (ISNULL(B.ORDER_UNIT_Q,0)  - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) &gt; 0


			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND    B.IN_DIV_CODE     = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
			AND    E.INSPEC_DATE   &gt;= #{FR_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
			AND    E.INSPEC_DATE   &lt;= #{TO_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND    E.INSPEC_NUM   = #{INSPEC_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
			AND    A.ORDER_TYPE   = #{ORDER_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND    B.WH_CODE      = #{WH_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
			AND    A.MONEY_UNIT   = #{MONEY_UNIT}
			</if>

	        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		END

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>

	<select id="otr120ukrvServiceImpl.selectNoDetailList4" parameterType="Map" resultType="rMap">	/* 무검사결과참조 */
	/* otr120ukrv.Cotr120ukrv[fnQms120QRef] Query02 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */

	    BEGIN
	        SELECT CAST('' AS BIT) AS GUBUN
	             , B.ITEM_CODE
			     , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                                         ELSE C.ITEM_NAME
	                 END)                                            AS ITEM_NAME
	             , D.ITEM_ACCOUNT
	             , C.SPEC
			     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	                 END)                                            AS DVRY_DATE
	             , UNILITE.fnGetUserdate(E.COMP_CODE, E.RECEIPT_DATE) AS INSPEC_DATE
			     , (CASE WHEN ISNULL(E.RECEIPT_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.RECEIPT_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(E.RECEIPT_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(E.RECEIPT_DATE, 7, 2))
	                 END)                                           AS INSPEC_DATE
	             , A.DIV_CODE
	             , B.ORDER_UNIT
	             , B.ORDER_UNIT_Q
	             , (ISNULL(E.RECEIPT_Q,0)) AS REMAIN_Q
	             , C.STOCK_UNIT
	             , (ISNULL(E.RECEIPT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
	             , B.ORDER_Q
	             , B.UNIT_PRICE_TYPE
	             , '1'          AS ITEM_STATUS
	             , A.MONEY_UNIT
	             , A.EXCHG_RATE_O
	             , B.ORDER_P
	             , B.ORDER_UNIT_P
	             , (ISNULL(E.RECEIPT_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) * ISNULL(B.ORDER_UNIT_P,0) AS ORDER_O
	             , B.ORDER_NUM
	             , B.ORDER_SEQ
	             , A.LC_NUM
	             , B.WH_CODE
	             , D.WH_CELL_CODE        AS WH_CELL_CODE    --20210819 수정: '' -> D.WH_CELL_CODE
	             , B.ORDER_REQ_NUM
	             , A.ORDER_TYPE
	             , A.CUSTOM_CODE
			     , (CASE WHEN @RefItem = '1' THEN G.CUSTOM_NAME1
	                          WHEN @RefItem = '2' THEN G.CUSTOM_NAME2
	                      ELSE G.CUSTOM_NAME
	                 END)                AS CUSTOM_NAME
	             , ISNULL(B.TRNS_RATE,1) AS TRNS_RATE
	             , ISNULL(B.INSTOCK_Q,0) AS INSTOCK_Q
	             , A.PROJECT_NO
	             , D.EXCESS_RATE
	             , E.RECEIPT_NUM 		AS INSPEC_NUM
	             , E.RECEIPT_SEQ		AS INSPEC_SEQ
	             , (ISNULL(B.ORDER_UNIT_Q,0) - (ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1))) AS PORE_Q
	             --20200416 주석
	             --, B.LOT_NO
	             , E.REMARK     AS INSPEC_REMARK
	             , E.PROJECT_NO AS INSPEC_PROJECT_NO
	             --20200413 추가: LOT_NO
	             , E.LOT_NO
	        FROM              MPO100T A WITH (NOLOCK)
	               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
	                                                 AND A.DIV_CODE   = B.DIV_CODE
	                                                 AND A.ORDER_NUM  = B.ORDER_NUM
	               INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
	                                                 AND C.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN BPR200T D WITH (NOLOCK) ON D.COMP_CODE  = B.COMP_CODE
	                                                 AND D.DIV_CODE   = B.DIV_CODE
	                                                 AND D.ITEM_CODE  = B.ITEM_CODE
	               INNER JOIN QMS100T E WITH (NOLOCK) ON E.COMP_CODE  = B.COMP_CODE
	                                                 AND E.DIV_CODE   = B.DIV_CODE
	                                                 AND E.ORDER_NUM  = B.ORDER_NUM
	                                                 AND E.ORDER_SEQ  = B.ORDER_SEQ
	               INNER JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                 AND G.CUSTOM_CODE = B.CUSTOM_CODE
	               LEFT  JOIN (
	                          SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, SUM(INOUT_Q) AS INOUT_Q, INSPEC_NUM, INSPEC_SEQ
	                          FROM   BTR100T WITH (NOLOCK)
	                          WHERE  INSPEC_NUM     IS NOT NULL
	                          AND    ITEM_STATUS     = N'1'
	                          AND    CREATE_LOC      = N'2'
	                          AND    INOUT_CODE_TYPE = N'5'
	                          GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
	                          ) F ON E.RECEIPT_NUM = F.INSPEC_NUM
	                             AND E.RECEIPT_SEQ = F.INSPEC_SEQ
	                             AND E.DIV_CODE   = F.DIV_CODE
	                             AND E.COMP_CODE  = F.COMP_CODE
        			LEFT JOIN BSA100T S WITH(NOLOCK) ON S.COMP_CODE = A.COMP_CODE
        											AND S.MAIN_CODE = 'M102'
        											AND S.SUB_CODE  = '1'

	        WHERE  A.COMP_CODE    = @CompCode

	        AND    B.CONTROL_STATUS             != N'9'
	        AND    ISNULL(A.ORDER_TYPE,'')       = N'4'
	        AND    ISNULL(A.AGREE_STATUS,'1') &gt; N'1'
	        AND    ISNULL(E.INSPEC_FLAG, 'Y')   = N'N'
	        AND    ISNULL(E.RECEIPT_Q, 0) &gt; 0
            AND    ISNULL(E.RECEIPT_Q, 0) &gt; ISNULL(F.INOUT_Q, 0)


			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND    A.DIV_CODE     = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			AND    A.CUSTOM_CODE  = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_DVRY_DATE)">
			AND    E.RECEIPT_DATE   &gt;= #{FR_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_DVRY_DATE)">
			AND    E.RECEIPT_DATE   &lt;= #{TO_DVRY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
			AND    E.RECEIPT_NUM   = #{INSPEC_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
			AND    A.ORDER_TYPE   = #{ORDER_TYPE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
			AND    B.WH_CODE      = #{WH_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
			AND    A.MONEY_UNIT   = #{MONEY_UNIT}
			</if>

	        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
		END

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>

	<select id="otr120ukrvServiceImpl.selectStockQ" parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(STOCK_Q) , 0) STOCK_Q
	     , ISNULL(MAX(AVERAGE_P)   , 0) AVERAGE_P
	     , ISNULL(MAX(GOOD_STOCK_Q), 0) GOOD_STOCK_Q
	     , ISNULL(MAX(BAD_STOCK_Q) , 0) BAD_STOCK_Q
	  FROM BIV100T
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND WH_CODE   = #{WH_CODE}
	   AND ITEM_CODE = #{ITEM_CODE}
	</select>

	<select id="otr120ukrvServiceImpl.selectGetOrderPrice" parameterType="Map" resultType="rMap">
	BEGIN
		DECLARE   @STOCK_UNIT NVARCHAR(08)

		SET NOCOUNT ON
		SET ARITHABORT ON

		SELECT TOP 1 @STOCK_UNIT = STOCK_UNIT
	      FROM BPR100T WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	       AND ITEM_CODE = #{ITEM_CODE}

	    SELECT #{ORDER_UNIT} AS ORDER_UNIT
		     , @STOCK_UNIT AS STOCK_UNIT
		     , #{ITEM_ACCOUNT} AS ITEM_ACCOUNT
		     , CASE #{ORDER_UNIT}
		            WHEN  @STOCK_UNIT
		                 THEN 1
		                 ELSE ISNULL(ISNULL(ISNULL((SELECT A.TRNS_RATE
		                                              FROM BPR300T A WITH (NOLOCK)
		                                             WHERE A.TYPE            = N'1'
		                                               AND A.CUSTOM_CODE     = #{CUSTOM_CODE}
		                                               AND A.ITEM_CODE       = #{ITEM_CODE}
		                                               AND A.ORDER_UNIT      = #{ORDER_UNIT}
		                                               AND A.COMP_CODE       = #{S_COMP_CODE}
		                                               AND A.DIV_CODE        = #{DIV_CODE}
		                                               AND A.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
		                                                                          FROM BPR300T WITH (NOLOCK)
		                                                                         WHERE TYPE             = A.TYPE
		                                                                           AND COMP_CODE        = A.COMP_CODE
		                                                                           AND DIV_CODE         = A.DIV_CODE
		                                                                           AND ITEM_CODE        = A.ITEM_CODE
		                                                                           AND CUSTOM_CODE      = A.CUSTOM_CODE
		                                                                           AND APLY_START_DATE &lt;= CONVERT(VARCHAR(8), GETDATE() ,112)))
		                                   , (SELECT A.TRNS_RATE
		                                        FROM BPR200T A WITH (NOLOCK)
		                                       WHERE A.ITEM_CODE  = #{ITEM_CODE}
		                                         AND A.COMP_CODE  = #{S_COMP_CODE}
		                                         AND A.DIV_CODE   = #{DIV_CODE}
		                                         AND A.ORDER_UNIT = #{ORDER_UNIT}))
		                            , (SELECT TRNS_RATE
		                                 FROM BPR600T WITH (NOLOCK)
		                                WHERE COMP_CODE  = #{S_COMP_CODE}
		                                  AND STOCK_UNIT = @STOCK_UNIT
		                                  AND ORDER_UNIT = #{ORDER_UNIT})),1)
		        END AS TRNS_RATE
		     , ISNULL((SELECT uniLITE.fnformat(#{S_COMP_CODE}, MAX(ITEM_P), 'M_FSET_PS')
		                 FROM BPR400T WITH (NOLOCK)
		                WHERE TYPE            = N'1'
		                  AND ITEM_CODE       = #{ITEM_CODE}
		                  AND CUSTOM_CODE     = #{CUSTOM_CODE}
		                  AND MONEY_UNIT      = #{MONEY_UNIT}
		                  AND ORDER_UNIT      = #{ORDER_UNIT}
		                  AND COMP_CODE       = #{S_COMP_CODE}
		                  AND DIV_CODE        = #{DIV_CODE}
		                  AND APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
		                                           FROM BPR400T WITH (NOLOCK)
		                                          WHERE APLY_START_DATE &lt;= #{ORDER_DATE}
		                                            AND TYPE             = N'1'
		                                            AND ITEM_CODE        = #{ITEM_CODE}
		                                            AND CUSTOM_CODE      = #{CUSTOM_CODE}
		                                            AND MONEY_UNIT       = #{MONEY_UNIT}
		                                            AND COMP_CODE        = #{S_COMP_CODE}
		                                            AND DIV_CODE         = #{DIV_CODE}
		                                            AND ORDER_UNIT       = #{ORDER_UNIT}))
		     , (SELECT uniLITE.fnformat(#{S_COMP_CODE}, ISNULL(MAX(PURCHASE_BASE_P),0), 'M_FSET_PS')
		          FROM BPR200T WITH (NOLOCK)
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND DIV_CODE  = #{DIV_CODE}
		           AND ITEM_CODE = #{ITEM_CODE})) AS ORDER_P
		     , ISNULL((SELECT uniLITE.fnformat(#{S_COMP_CODE}, BASIS_P,'M_FSET_PS')
		                 FROM BPR200T WITH (NOLOCK)
		                WHERE ITEM_CODE = #{ITEM_CODE}
		                  AND COMP_CODE = #{S_COMP_CODE}
		                  AND DIV_CODE  = #{DIV_CODE}),0) AS STOCK_P
	END
	</select>

	<insert id="otr120ukrvServiceImpl.insertLogDetail" parameterType="Map">
	INSERT INTO L_BTR100T
	     (  KEY_VALUE, OPR_FLAG
		  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
          , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
          , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
          , BASIS_NUM, BASIS_SEQ, PROJECT_NO, LOT_NO, REMARK
          , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
          , BILL_TYPE, SALE_TYPE
          , PRICE_YN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_DATE
          , LC_NUM, BL_NUM, ACCOUNT_YNC, ACCOUNT_Q
          , INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN
          , MAKE_LOT_NO, MAKE_DATE		,MAKE_EXP_DATE
		  , RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
		  , PACK_UNIT_Q,  BOX_Q, EACH_Q, LOSS_Q
          , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		 )
	VALUES
	     (  #{KEY_VALUE}, #{OPR_FLAG}
    	  , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
          , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
          , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}
          , #{BASIS_NUM}, #{BASIS_SEQ}, #{PROJECT_NO}, #{LOT_NO}, #{REMARK}
          , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_I}, #{ORDER_UNIT_FOR_P}
          , #{BILL_TYPE}, #{SALE_TYPE}
          , #{PRICE_YN}, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, #{SALE_C_DATE}
          , #{LC_NUM}, #{BL_NUM}, #{ACCOUNT_YNC}, #{ACCOUNT_Q}
          , #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}
          , #{MAKE_LOT_NO},#{MAKE_DATE},#{MAKE_EXP_DATE}
          , #{RECEIPT_NUM}, #{RECEIPT_SEQ}, #{INSPEC_Q}
          , #{PACK_UNIT_Q}, #{BOX_Q}, #{EACH_Q}, #{LOSS_Q}
          , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()
		 )
	</insert>
	<insert id="otr120ukrvServiceImpl.updateLogDetail" parameterType="Map">
	INSERT INTO L_BTR100T(
			KEY_VALUE, OPR_FLAG
		  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
	            , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
	            , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
	            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
	            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
	            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
	            , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
	            , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
	            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
	            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
	            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
	            , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
	            , MAKE_LOT_NO, MAKE_EXP_DATE
		  		, RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
		  		, PACK_UNIT_Q,  BOX_Q, EACH_Q, LOSS_Q)
	      SELECT  #{KEY_VALUE}, #{OPR_FLAG}
	      	    , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
	            , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, INOUT_CODE_DETAIL, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
	            , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}, EXPENSE_I, RETURN_QTY
	            , TRANS_COST, TARIFF_AMT, #{BASIS_NUM}, #{BASIS_SEQ}, TO_DIV_CODE, #{PROJECT_NO}, PJT_CODE, #{LOT_NO}, #{REMARK}
	            , #{ORDER_TYPE}, #{ORDER_NUM}, #{ORDER_SEQ}, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_I}, INOUT_TAX_AMT, #{ORDER_UNIT_FOR_P}
	            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, #{BILL_TYPE}, #{SALE_TYPE}, TAX_TYPE
	            , #{PRICE_YN}, SALE_PRSN, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, SALE_C_YN, #{SALE_C_DATE}, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
	            , #{LC_NUM}, #{BL_NUM},TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, #{ACCOUNT_YNC}, #{ACCOUNT_Q}, FR_ACCOUNT, TO_ACCOUNT
	            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
	            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, #{INSPEC_NUM}, #{INSPEC_SEQ}, #{SCM_FLAG_YN}, DELIVERY_NO
	            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
	            , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
	            , #{MAKE_LOT_NO},#{MAKE_EXP_DATE}
                , RECEIPT_NUM,  RECEIPT_SEQ   , INSPEC_Q
                , #{PACK_UNIT_Q}, #{BOX_Q}, #{EACH_Q}, #{LOSS_Q}
	      FROM   BTR100T   A  WITH (NOLOCK)
	      WHERE A.COMP_CODE     = #{S_COMP_CODE}
	     	AND A.DIV_CODE      = #{DIV_CODE}
	        AND A.INOUT_NUM     = #{INOUT_NUM}
	        AND A.INOUT_SEQ     = #{INOUT_SEQ}
	        AND A.INOUT_TYPE    = #{INOUT_TYPE}
	</insert>

	<update id="otr120ukrvServiceImpl.spOtr120ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_MATRL_OTR120UKRV (
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
	</update>
</mapper>