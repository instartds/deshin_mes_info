<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms110ukrvServiceImpl">
	<select id="mms110ukrvServiceImpl.selectExpirationdate" parameterType="Map" resultType="rMap">
		SELECT ISNULL(EXPIRATION_DAY,0) AS EXPIRATION_DAY
		  FROM BPR100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
		   AND CIR_PERIOD_YN ='Y'
	</select>

    <select id="mms110ukrvServiceImpl.selectreceiptNumMasterList" parameterType="Map" resultType="rMap">
    	/* mms110ukrv.Cmms110ukrv[fnQms110PopQ]Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

         DECLARE @CompCode  NVARCHAR(08) /* 법인코드    */
              , @UserId   NVARCHAR(100) /* 사용자ID    */
              , @LangType  NVARCHAR(2)  /* 언어구분    */
              , @RefItem  NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        	SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

         /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

         /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

         /* 데이터 조회 */
        	SELECT
        		  A.DIV_CODE
        		, A.RECEIPT_NUM
				, A.RECEIPT_SEQ
        		, (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = '' THEN ''
        												     ELSE REPLACE(REPLACE(REPLACE(
        												     	@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
        	       														   , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
        	       													       , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
        	      END)                AS RECEIPT_DATE
        	   , A.CUSTOM_CODE
        	   ,(CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
        	          WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
        	                              ELSE C.CUSTOM_NAME
        	     END)      			  AS CUSTOM_NAME
        	   , A.ITEM_CODE
        	   ,(CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
        	          WHEN @RefItem = '2' THEN D.ITEM_NAME2
        	                              ELSE D.ITEM_NAME
        	     END)                 AS ITEM_NAME
        	   , D.SPEC
        	   , B.ORDER_UNIT_P
        	   , B.ORDER_Q
        	   , A.RECEIPT_Q
        	   , ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(B.RECEIPT_Q, 0) AS NOT_RECEIPT_Q
        	   , A.RECEIPT_PRSN
        	   , B.ORDER_NUM, B.ORDER_SEQ, A.ORDER_TYPE, E.ORDER_PRSN ,A.LOT_NO
        	   , B.TRNS_RATE
        	   , A.BASIS_NUM
        	   , A.BASIS_SEQ
        	   , '' AS BL_NO
        	FROM          QMS100T A WITH (NOLOCK)
        	   LEFT  JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
        	                   					 AND A.DIV_CODE    = B.IN_DIV_CODE
        	                   					 AND A.ORDER_NUM   = B.ORDER_NUM
        	                   					 AND A.ORDER_SEQ   = B.ORDER_SEQ
        	   LEFT  JOIN MPO100T E WITH (NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
        					                     AND A.DIV_CODE    = E.DIV_CODE
        					                     AND A.ORDER_NUM   = E.ORDER_NUM
        	   INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
        	                   					 AND A.CUSTOM_CODE = C.CUSTOM_CODE
        	   INNER JOIN BPR100T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
        	                   					 AND A.ITEM_CODE   = D.ITEM_CODE
        	   LEFT JOIN BPR200T R1 WITH (NOLOCK) ON R1.COMP_CODE   = A.COMP_CODE
        	   									 AND R1.DIV_CODE = A.DIV_CODE
        	                   					 AND R1.ITEM_CODE   = A.ITEM_CODE
            WHERE  A.COMP_CODE = @CompCode
              AND  ISNULL(A.TRADE_FLAG_YN, 'N') = 'N'

        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND		A.DIV_CODE      = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
        	AND		A.RECEIPT_DATE &gt;= #{RECEIPT_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
        	AND		A.RECEIPT_DATE &lt;= #{RECEIPT_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND		A.CUSTOM_CODE   = #{CUSTOM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND		A.ITEM_CODE     = #{ITEM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
            AND		A.ORDER_TYPE    = #{ORDER_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND		B.LOT_NO     LIKE #{LOT_NO} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_PRSN)">
            AND		A.RECEIPT_PRSN    = #{RECEIPT_PRSN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
           /*'발주번호*/
            AND A.ORDER_NUM  LIKE #{ORDER_NUM} + '%'
        </if>

        <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
            AND		R1.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
        </if>

            UNION ALL

        	SELECT
        		  A.DIV_CODE
        		, A.RECEIPT_NUM
				, A.RECEIPT_SEQ
        		, (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = '' THEN ''
        												     ELSE REPLACE(REPLACE(REPLACE(
        												     	@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
        	       														   , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
        	       													       , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
        	      END)                AS RECEIPT_DATE
        	   , A.CUSTOM_CODE
        	   ,(CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
        	          WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
        	                              ELSE C.CUSTOM_NAME
        	     END)      			  AS CUSTOM_NAME
        	   , A.ITEM_CODE
        	   ,(CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
        	          WHEN @RefItem = '2' THEN D.ITEM_NAME2
        	                              ELSE D.ITEM_NAME
        	     END)                 AS ITEM_NAME
        	   , D.SPEC
        	   , B.PRICE
        	   , B.QTY
        	   , A.RECEIPT_Q
        	   , ISNULL(B.QTY,0) - ISNULL(B.RECEIPT_QTY, 0) AS NOT_RECEIPT_Q
        	   , A.RECEIPT_PRSN
			   , B.SO_SER_NO, B.SO_SER, A.ORDER_TYPE, E.IMPORT_NM, A.LOT_NO
        	   , B.TRNS_RATE
        	   , A.BASIS_NUM
        	   , A.BASIS_SEQ
        	   , F.BL_NO
        	FROM          QMS100T A WITH (NOLOCK)
        	   LEFT  JOIN TIA110T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
        	                   					 AND A.DIV_CODE    = B.DIV_CODE
        	                   					 AND A.ORDER_NUM   = B.SO_SER_NO
        	                   					 AND A.ORDER_SEQ   = B.SO_SER
        	   LEFT  JOIN TIA100T E WITH (NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
        					                     AND A.DIV_CODE    = E.DIV_CODE
        					                     AND A.ORDER_NUM   = E.SO_SER_NO
			   LEFT  JOIN  TIC100T  F WITH(NOLOCK) ON F.COMP_CODE = B.COMP_CODE
												 AND F.DIV_CODE = B.DIV_CODE
												 AND F.SO_SER_NO = B.SO_SER_NO
        	   INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
        	                   					 AND A.CUSTOM_CODE = C.CUSTOM_CODE
        	   INNER JOIN BPR100T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
        	                   					 AND A.ITEM_CODE   = D.ITEM_CODE
        	   LEFT JOIN BPR200T R1 WITH (NOLOCK) ON R1.COMP_CODE   = A.COMP_CODE
        	   									 AND R1.DIV_CODE = A.DIV_CODE
        	                   					 AND R1.ITEM_CODE   = A.ITEM_CODE
           WHERE  A.COMP_CODE = @CompCode
             AND  ISNULL(A.TRADE_FLAG_YN, 'N') = 'Y'
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND		A.DIV_CODE      = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
        	AND		A.RECEIPT_DATE &gt;= #{RECEIPT_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
        	AND		A.RECEIPT_DATE &lt;= #{RECEIPT_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND		A.CUSTOM_CODE   = #{CUSTOM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND		A.ITEM_CODE     = #{ITEM_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
            AND		A.ORDER_TYPE    = #{ORDER_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND		B.LOT_NO     LIKE #{LOT_NO} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(RECEIPT_PRSN)">
            AND		A.RECEIPT_PRSN    = #{RECEIPT_PRSN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
           /*'발주번호*/
            AND A.ORDER_NUM  LIKE #{ORDER_NUM} + '%'
        </if>

        <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
            AND		R1.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
        </if>
              ORDER BY A.RECEIPT_NUM, A.RECEIPT_SEQ


         SET ARITHABORT OFF
         SET NOCOUNT OFF

         END
    </select>

    <select id="mms110ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
        /*mms110ukrv.Cmms110ukrv[fnQms110nq]Query01 */
        BEGIN
        	SET NOCOUNT ON
        	SET ARITHABORT ON

         DECLARE @CompCode  NVARCHAR(08) /* 법인코드    */
                  , @UserId   NVARCHAR(100) /* 사용자ID    */
                  , @LangType  NVARCHAR(2)  /* 언어구분    */
                  , @RefItem  NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

         /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

         /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

         /* 데이터 조회 */

        	SELECT
        		  A.DIV_CODE
        		, A.RECEIPT_NUM
        		, A.RECEIPT_SEQ
        		, A.ITEM_CODE
        		,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
        	           WHEN @RefItem = '2' THEN B.ITEM_NAME2
        	                               ELSE B.ITEM_NAME
        	      END)      			 AS ITEM_NAME
        		, B.SPEC
        		, A.ORDER_UNIT
        		, C.ORDER_UNIT_P
        		--, '' NOT_RECEIPT_Q
        		, CASE WHEN ISNULL(C.ORDER_UNIT_Q, 0) - ISNULL(C.RECEIPT_Q, 0) &lt; 0 THEN 0
				ELSE ISNULL(C.ORDER_UNIT_Q, 0) - ISNULL(C.RECEIPT_Q, 0)  END  AS NOT_RECEIPT_Q
        		, ISNULL(A.RECEIPT_Q,0) AS RECEIPT_Q
        		, ISNULL(A.INSPEC_Q,0)  AS INSPEC_Q
        		, A.ORDER_NUM
        		, A.ORDER_SEQ
        		, ISNULL(A.INSPEC_FLAG, '') AS INSPEC_FLAG
        		, A.LOT_NO
        		, A.RECEIPT_PRSN
        		, A.REMARK
        		, A.PROJECT_NO
        		, (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = ''
        	        THEN ''
        	        ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
        	               , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
        	               , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
        	            END)                AS RECEIPT_DATE
        		, A.CUSTOM_CODE

        	   ,(CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
        	          WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
        	                              ELSE D.CUSTOM_NAME
        	     END)      			  AS CUSTOM_NAME
        		, A.ORDER_TYPE
        		, ISNULL(A.RECEIPT_Q, 0) AS OLD_VAL
        		, ISNULL(C.ORDER_UNIT_Q, 0) AS ORDER_UNIT_Q
        		, A.COMP_CODE
        		, A.INOUT_NUM
        		, A.INOUT_SEQ
        		, A.BASIS_NUM
        		, A.BASIS_SEQ
        		, ISNULL(A.SCM_FLAG_YN, 'N') AS SCM_FLAG_YN
        		, ISNULL(A.TRADE_FLAG_YN, 'N') AS TRADE_FLAG_YN
        		, C.TRNS_RATE

        		, A.MAKE_LOT_NO		--거래처LOT
        		, A.MAKE_DATE		--제조일자
        		, A.MAKE_EXP_DATE	--유통기한
				, E.INOUT_Q AS INSTOCK_Q
				, C1.ORDER_DATE
				, B.STOCK_UNIT
				, A.REF_ISSUE_NUM
				, A.REF_ISSUE_SEQ
				, 'Y' AS SAVE_FLAG
                --20191029 추가: 수주번호, 수주처, 수주품목명
                , F.ORDER_NUM                                      AS SO_NUM
                , (CASE WHEN @RefItem = '1' THEN F2.CUSTOM_NAME1
                        WHEN @RefItem = '2' THEN F2.CUSTOM_NAME2
                                            ELSE F2.CUSTOM_NAME
                    END)                                           AS SO_CUSTOM_NAME
                , (CASE WHEN @RefItem = '1' THEN F3.ITEM_NAME1
                        WHEN @RefItem = '2' THEN F3.ITEM_NAME2
                                            ELSE F3.ITEM_NAME
                    END)                                           AS SO_ITEM_NAME
        	FROM          QMS100T A WITH (NOLOCK)
        	   INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
        	                                     AND A.ITEM_CODE = B.ITEM_CODE
        	   LEFT  JOIN MPO200T C WITH (NOLOCK) ON A.COMP_CODE = C.COMP_CODE
        	                                     AND A.DIV_CODE  = C.IN_DIV_CODE
        	                                     AND A.ORDER_NUM = C.ORDER_NUM
        	                                     AND A.ORDER_SEQ = C.ORDER_SEQ
			   LEFT  JOIN MPO100T C1 WITH (NOLOCK) ON C.COMP_CODE = C1.COMP_CODE
        	                                     AND C.DIV_CODE  = C1.DIV_CODE
        	                                     AND C.ORDER_NUM = C1.ORDER_NUM
        	   LEFT JOIN BCM100T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
        	                   					 AND A.CUSTOM_CODE = D.CUSTOM_CODE
        	   LEFT JOIN (SELECT COMP_CODE
								, DIV_CODE
								, RECEIPT_NUM
								, RECEIPT_SEQ
								, SUM(INOUT_Q) AS INOUT_Q
						  FROM BTR100T WITH (NOLOCK)
						  WHERE COMP_CODE = @CompCode
						  AND   DIV_CODE  = #{DIV_CODE}
						  AND   RECEIPT_NUM  = #{RECEIPT_NUM}
						  AND   INOUT_TYPE   = '1'
						  GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ
						 ) E ON A.COMP_CODE = E.COMP_CODE
							AND A.DIV_CODE  = E.DIV_CODE
							AND A.RECEIPT_NUM = E.RECEIPT_NUM
							AND A.RECEIPT_SEQ = E.RECEIPT_SEQ
               --20191029 추가: 수주번호, 수주처, 수주품목명 가져오기 위한 JOIN
               LEFT JOIN SOF110T F  WITH (NOLOCK) ON F.COMP_CODE   = C.COMP_CODE
                                                 AND F.OUT_DIV_CODE= C.DIV_CODE
                                                 AND F.ORDER_NUM   = C.SO_NUM
                                                 AND F.SER_NO      = C.SO_SEQ
               LEFT JOIN SOF100T F1 WITH (NOLOCK) ON F1.COMP_CODE  = F.COMP_CODE
                                                 AND F1.DIV_CODE   = F.DIV_CODE
                                                 AND F1.ORDER_NUM  = F.ORDER_NUM
               LEFT JOIN BCM100T F2 WITH (NOLOCK) ON F2.COMP_CODE  = F1.COMP_CODE
                                                 AND F2.CUSTOM_CODE= F1.CUSTOM_CODE
               LEFT JOIN BPR100T F3 WITH (NOLOCK) ON F3.COMP_CODE  = F.COMP_CODE
                                                 AND F3.ITEM_CODE  = F.ITEM_CODE
        	WHERE  A.COMP_CODE = @CompCode
        	   AND ISNULL(A.TRADE_FLAG_YN, 'N') = 'N'

        	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        	    /*사업장'*/
        	    AND A.DIV_CODE     = #{DIV_CODE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
        	    /*발주형태'*/
        	    AND A.ORDER_TYPE   = #{ORDER_TYPE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE)">
        	    /*접수일'*/
        	    AND A.RECEIPT_DATE = #{RECEIPT_DATE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_PRSN)">
        	    /*접수담당'*/
        	    AND A.RECEIPT_PRSN = #{RECEIPT_PRSN}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_NUM)">
        	    /*접수번호'*/
        	    AND A.RECEIPT_NUM  = #{RECEIPT_NUM}
        	</if>


           UNION ALL

           	SELECT
        		  A.DIV_CODE
        		, A.RECEIPT_NUM
        		, A.RECEIPT_SEQ
        		, A.ITEM_CODE
        		,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
        	           WHEN @RefItem = '2' THEN B.ITEM_NAME2
        	                               ELSE B.ITEM_NAME
        	      END)      			 AS ITEM_NAME
        		, B.SPEC
        		, A.ORDER_UNIT
        		, C.PRICE
        		--, '' NOT_RECEIPT_Q
        		, CASE WHEN ISNULL(C.QTY, 0) - ISNULL(C.RECEIPT_QTY, 0) &lt; 0 THEN 0
        			ELSE ISNULL(C.QTY, 0) - ISNULL(C.RECEIPT_QTY, 0) END  AS NOT_RECEIPT_Q
        		, ISNULL(A.RECEIPT_Q,0) AS RECEIPT_Q
        		, ISNULL(A.INSPEC_Q,0)  AS INSPEC_Q
        		, A.ORDER_NUM
        		, A.ORDER_SEQ
        		, ISNULL(A.INSPEC_FLAG, '') AS INSPEC_FLAG
        		, A.LOT_NO
        		, A.RECEIPT_PRSN
        		, A.REMARK
        		, A.PROJECT_NO
        		, (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = ''
        	        THEN ''
        	        ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
        	               , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
        	               , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
        	            END)                AS RECEIPT_DATE
        		, A.CUSTOM_CODE
        		,(CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
        	          WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
        	                              ELSE D.CUSTOM_NAME
        	     END)      			  AS CUSTOM_NAME
        		, A.ORDER_TYPE
        		, ISNULL(A.RECEIPT_Q, 0) AS OLD_VAL
        		, ISNULL(C.QTY, 0)       AS ORDER_UNIT_Q
        		, A.COMP_CODE
        		, A.INOUT_NUM
        		, A.INOUT_SEQ
        		, A.BASIS_NUM
        		, A.BASIS_SEQ
        		, ISNULL(A.SCM_FLAG_YN, 'N') AS SCM_FLAG_YN
        		, ISNULL(A.TRADE_FLAG_YN, 'N') AS TRADE_FLAG_YN
        		, F.TRNS_RATE

        		, A.MAKE_LOT_NO		--거래처LOT
        		, A.MAKE_DATE		--제조일자
        		, A.MAKE_EXP_DATE	--유통기한
        		, E.INOUT_Q AS INSTOCK_Q
        		, '' AS ORDER_DATE
				, B.STOCK_UNIT
				, A.REF_ISSUE_NUM
				, A.REF_ISSUE_SEQ
				, 'Y' AS SAVE_FLAG
                --20191029 추가: 수주번호, 수주처, 수주품목명 - 수입오퍼 관련 로직은 확인 필요
                , ''                                    AS SO_NUM
                , ''                                    AS SO_CUSTOM_NAME
                , ''                                    AS SO_ITEM_NAME
        	FROM          QMS100T A WITH (NOLOCK)
        	   INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
        	                                     AND A.ITEM_CODE = B.ITEM_CODE
        	   LEFT  JOIN TIA110T C WITH (NOLOCK) ON A.COMP_CODE = C.COMP_CODE
        	                                     AND A.DIV_CODE  = C.DIV_CODE
        	                                     AND A.ORDER_NUM = C.SO_SER_NO
        	                                     AND A.ORDER_SEQ = C.SO_SER

        	   LEFT JOIN BCM100T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
        	                   					 AND A.CUSTOM_CODE = D.CUSTOM_CODE
        	   LEFT JOIN (SELECT COMP_CODE
								, DIV_CODE
								, RECEIPT_NUM
								, RECEIPT_SEQ
								, SUM(INOUT_Q) AS INOUT_Q
						  FROM BTR100T WITH (NOLOCK)
						  WHERE COMP_CODE   = @CompCode
						  AND   DIV_CODE  	   = #{DIV_CODE}
						  AND   RECEIPT_NUM  = #{RECEIPT_NUM}
						  AND   INOUT_TYPE    = '1'
						  GROUP BY COMP_CODE, DIV_CODE, RECEIPT_NUM, RECEIPT_SEQ
						 ) E ON A.COMP_CODE  = E.COMP_CODE
							AND A.DIV_CODE  	= E.DIV_CODE
							AND A.RECEIPT_NUM = E.RECEIPT_NUM
							AND A.RECEIPT_SEQ = E.RECEIPT_SEQ
				LEFT JOIN MPO200T F WITH (NOLOCK) ON A.COMP_CODE = F.COMP_CODE
											   AND A.DIV_CODE  = F.IN_DIV_CODE
											   AND A.ORDER_NUM = F.ORDER_NUM
											   AND A.ORDER_SEQ = F.ORDER_SEQ
        	WHERE A.COMP_CODE = @CompCode
        	  AND ISNULL(A.TRADE_FLAG_YN, 'N') = 'Y'

        	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        	    /*사업장'*/
        	    AND A.DIV_CODE     = #{DIV_CODE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
        	    /*발주형태'*/
        	    AND A.ORDER_TYPE   = #{ORDER_TYPE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE)">
        	    /*접수일'*/
        	    AND A.RECEIPT_DATE = #{RECEIPT_DATE}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_PRSN)">
        	    /*접수담당'*/
        	    AND A.RECEIPT_PRSN = #{RECEIPT_PRSN}
        	</if>
        	<if test="@foren.Ognl@isNotEmpty(RECEIPT_NUM)">
        	    /*접수번호*/
        	    AND A.RECEIPT_NUM  = #{RECEIPT_NUM}
        	</if>

        	 ORDER BY A.RECEIPT_SEQ

        	SET ARITHABORT OFF
        	SET NOCOUNT OFF

        END
    </select>



    <select id="mms110ukrvServiceImpl.selectorderList" parameterType="Map" resultType="rMap">
            /* mms110ukrv.Cmms110ukrv[fnQms110nqNotAccept]Query01,02 */
            BEGIN
                SET NOCOUNT ON
                SET ARITHABORT ON

                DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                      , @UserId      NVARCHAR(100) /* 사용자ID    */
                      , @LangType    NVARCHAR(2)  /* 언어구분    */
                      , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                      , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            	SET @CompCode = #{S_COMP_CODE}
                SET @UserId   = #{S_USER_ID}
                SET @LangType = #{S_LANG_CODE}

                /* 명칭 참조 유형 */
                SELECT TOP 1 @RefItem = REF_ITEM
                  FROM BSA300T WITH (NOLOCK)
                 WHERE USER_ID = @UserId

                SET @RefItem = ISNULL(@RefItem, N'0')

                /* 날짜 포맷 유형 설정 */
                SELECT TOP 1 @DateFormat = CODE_NAME
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'B044'
                   AND REF_CODE1 = N'Y'

                SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

                /* 추가설정값 */
                DECLARE @RefQ034    INTEGER

                SELECT @RefQ034 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'Q034'
                   AND SUB_CODE  = N'Y'
                   AND REF_CODE1 = N'Y'

                /* 가입고 사용여부 */
                DECLARE @RefQ008    INTEGER

                SELECT @RefQ008 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'Q008'
                   AND SUB_CODE  = N'Y'
                   AND REF_CODE1 = N'Y'

                 /* 사후승인여부 */
                DECLARE @RefM008    INTEGER

                SELECT @RefM008 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'M008'
                   AND SUB_CODE  = N'1'
                   AND REF_CODE1 = N'Y'
				   AND REF_CODE3 = N'Y'


                /* 데이터 조회 */
                SELECT CAST('' AS BIT) AS CHK
                     , B.CUSTOM_CODE
                     , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                             WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                                 ELSE C.CUSTOM_NAME
                         END)                                           AS CUSTOM_NAME
                     , B.ITEM_CODE
                     , (CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
                             WHEN @RefItem = '2' THEN D.ITEM_NAME2
                                                 ELSE D.ITEM_NAME
                         END)                                           AS ITEM_NAME
                     , D.SPEC

                     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                             THEN ''
                             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                     , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                     , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                        END)                                            AS DVRY_DATE
                     , B.ORDER_UNIT
                     , B.ORDER_UNIT_Q
                     , (CASE WHEN @RefQ034 = 0
                             THEN ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(B.RECEIPT_Q, 0)
                             ELSE ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(B.RECEIPT_Q, 0) + (ISNULL(B.BAD_RETURN_Q,0)+ISNULL(F4.BAD_INSPEC_Q,0))
                         END)                                           AS NOT_RECEIPT_Q
                     , A.MONEY_UNIT
                     , B.ORDER_UNIT_P
                     , B.ORDER_O
                     , B.ORDER_NUM
                     , B.ORDER_SEQ
                     , ISNULL(B.INSPEC_FLAG, 'Y')						AS INSPEC_FLAG
                     , B.LOT_NO
                     , A.ORDER_TYPE
                     , A.ORDER_PRSN
                     , B.REMARK
                     , B.PROJECT_NO
                     , A.COMP_CODE
                     , B.WH_CODE
                     , A.DIV_CODE
                     , B.TRNS_RATE
                     , A.AGREE_STATUS      --승인일자
                     , A.ORDER_DATE      --발주일
                     --20191029 추가: 수주번호, 수주처, 수주품목명
                     , F.ORDER_NUM                                      AS SO_NUM
                     , (CASE WHEN @RefItem = '1' THEN F2.CUSTOM_NAME1
                             WHEN @RefItem = '2' THEN F2.CUSTOM_NAME2
                                                 ELSE F2.CUSTOM_NAME
                         END)                                           AS SO_CUSTOM_NAME
                     , (CASE WHEN @RefItem = '1' THEN F3.ITEM_NAME1
                             WHEN @RefItem = '2' THEN F3.ITEM_NAME2
                                                 ELSE F3.ITEM_NAME
                         END)                                           AS SO_ITEM_NAME
                     , D.STOCK_UNIT                                     --20201124 추가
                  FROM          MPO100T A WITH (NOLOCK)
            		 INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
            				                           AND A.DIV_CODE    = B.DIV_CODE
            				                           AND A.CUSTOM_CODE = B.CUSTOM_CODE
            				                           AND A.ORDER_NUM   = B.ORDER_NUM
				     INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                      				   AND A.CUSTOM_CODE = C.CUSTOM_CODE
                     INNER JOIN BPR100T D WITH (NOLOCK) ON B.COMP_CODE   = D.COMP_CODE
                                      				   AND B.ITEM_CODE   = D.ITEM_CODE
                     LEFT  JOIN (SELECT COMP_CODE
                                      , DIV_CODE
                                      , ORDER_NUM
                                      , ORDER_SEQ
                                      , SUM(RECEIPT_Q) AS RECEIPT_Q
                                   FROM QMS100T WITH (NOLOCK)
                                   WHERE COMP_CODE = @CompCode
            	                     /*'사업장*/
                                     AND DIV_CODE    = #{DIV_CODE}
                                     AND ORDER_NUM &gt; ''
                                   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) E ON B.COMP_CODE = E.COMP_CODE
            	 															            AND B.IN_DIV_CODE  = E.DIV_CODE
            	 															            AND B.ORDER_NUM = E.ORDER_NUM
            																            AND B.ORDER_SEQ = E.ORDER_SEQ
                     --20191029 추가: 수주번호, 수주처, 수주품목명 가져오기 위한 JOIN
                     LEFT JOIN SOF110T F  WITH (NOLOCK) ON F.COMP_CODE   = B.COMP_CODE
                                                       AND F.OUT_DIV_CODE= B.DIV_CODE
                                                       AND F.ORDER_NUM   = B.SO_NUM
                                                       AND F.SER_NO      = B.SO_SEQ
                     LEFT JOIN SOF100T F1 WITH (NOLOCK) ON F1.COMP_CODE  = F.COMP_CODE
                                                       AND F1.DIV_CODE   = F.DIV_CODE
                                                       AND F1.ORDER_NUM  = F.ORDER_NUM
                     LEFT JOIN BCM100T F2 WITH (NOLOCK) ON F2.COMP_CODE  = F1.COMP_CODE
                                                       AND F2.CUSTOM_CODE= F1.CUSTOM_CODE
                     LEFT JOIN BPR100T F3 WITH (NOLOCK) ON F3.COMP_CODE  = F.COMP_CODE
                                                       AND F3.ITEM_CODE  = F.ITEM_CODE

					 LEFT JOIN (
								SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(BAD_INSPEC_Q) AS BAD_INSPEC_Q
								FROM QMS200T WITH (NOLOCK)
								GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ
					 ) F4 ON F4.COMP_CODE=B.COMP_CODE AND F4.DIV_CODE=B.DIV_CODE AND F4.ORDER_NUM=B.ORDER_NUM AND F4.ORDER_SEQ=B.ORDER_SEQ
                 WHERE A.COMP_CODE = @CompCode
                   AND (CASE WHEN @RefQ008 = 0
                             THEN ISNULL(A.AGREE_STATUS,'1')
                             ELSE N'2'
                         END) &gt; '1'
                   AND B.CONTROL_STATUS NOT IN('8', '9')

                 --AND ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0) &gt; 0  -- 미접수량

                   AND ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0) + (ISNULL(B.BAD_RETURN_Q, 0)+ISNULL(F4.BAD_INSPEC_Q,0)) &gt; 0

               	   AND (CASE WHEN @RefQ008 = 0
                             THEN ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
                                                FROM BPR200T WITH (NOLOCK)
                                               WHERE COMP_CODE = B.COMP_CODE
                                                 AND DIV_CODE  = B.DIV_CODE
                                                 AND ITEM_CODE = B.ITEM_CODE))
                             ELSE N'Y'
                         END) = N'Y'

            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            	/*'사업장*/
                AND B.IN_DIV_CODE    = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                /*'거래처*/
                AND B.CUSTOM_CODE = #{CUSTOM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
                /*'납기일 FROM*/
                AND B.DVRY_DATE  &gt;= #{DVRY_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
                /*'납기일 TO*/
                AND B.DVRY_DATE  &lt;= #{DVRY_DATE_TO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
                /*'발주일 FROM*/
                AND A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
                /*'발주일 TO*/
                AND A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
            </if>

            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                /*'품목코드*/
                AND B.ITEM_CODE   = #{ITEM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                /*'납픔창고*/
                AND B.WH_CODE     = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                /*'발주형태*/
                AND A.ORDER_TYPE  = #{ORDER_TYPE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                /*'lot 번호*/
                AND B.LOT_NO   LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
                /*'구매담당*/
                AND A.ORDER_PRSN  = #{ORDER_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
                /*'발주번호*/
                AND A.ORDER_NUM  LIKE #{ORDER_NUM} + '%'
            </if>
                SET NOCOUNT OFF
                SET ARITHABORT OFF
            END
    </select>


    <select id="mms110ukrvServiceImpl.selectCustList" parameterType="Map" resultType="rMap">
/* mms110ukrvServiceImpl.selectCustList */
	/* 가입고 사용여부 */
	DECLARE @RefQ008    INTEGER

	SELECT @RefQ008 = COUNT(*)
	  FROM BSA100T WITH (NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND MAIN_CODE = N'Q008'
	   AND SUB_CODE  = N'Y'
	   AND REF_CODE1 = N'Y'


	SELECT A.CUSTOM_CODE, C.CUSTOM_NAME, COUNT(B.ORDER_NUM + CONVERT(VARCHAR, B.ORDER_SEQ))  AS ITEM_CNT
	  FROM MPO100T A WITH(NOLOCK)
	   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
            							 AND A.DIV_CODE    = B.DIV_CODE
            							 AND A.CUSTOM_CODE = B.CUSTOM_CODE
            							 AND A.ORDER_NUM   = B.ORDER_NUM

	   LEFT JOIN BCM100T C WITH (NOLOCK)  ON A.COMP_CODE   = C.COMP_CODE
            							 AND A.CUSTOM_CODE = C.CUSTOM_CODE
	   LEFT  JOIN (SELECT COMP_CODE
					  , DIV_CODE
					  , ORDER_NUM
					  , ORDER_SEQ
					  , ISNULL(SUM(RECEIPT_Q),0) AS RECEIPT_Q
				   FROM QMS100T WITH (NOLOCK)
				   WHERE COMP_CODE = #{S_COMP_CODE}
					 AND DIV_CODE = #{DIV_CODE}
					 AND ORDER_NUM &gt; ''
				   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) E ON B.COMP_CODE = E.COMP_CODE
																		AND B.IN_DIV_CODE  = E.DIV_CODE
																		AND B.ORDER_NUM = E.ORDER_NUM
																		AND B.ORDER_SEQ = E.ORDER_SEQ
		LEFT JOIN (
				SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(BAD_INSPEC_Q) AS BAD_INSPEC_Q
				FROM QMS200T WITH (NOLOCK)
				GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ
		) F4 ON F4.COMP_CODE=B.COMP_CODE AND F4.DIV_CODE=B.DIV_CODE AND F4.ORDER_NUM=B.ORDER_NUM AND F4.ORDER_SEQ=B.ORDER_SEQ																		
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND B.IN_DIV_CODE = #{DIV_CODE}
	   AND B.CONTROL_STATUS NOT IN('8', '9')			-- 진행상태
	   --AND (ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0)) &gt; 0		-- 미접수량
	   AND ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0) + (ISNULL(B.BAD_RETURN_Q, 0)+ISNULL(F4.BAD_INSPEC_Q,0)) &gt;  0
	   AND (CASE WHEN @RefQ008 = 0 THEN ISNULL(A.AGREE_STATUS,'1') ELSE N'2'  END) &gt; '1' -- 승인여부

	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
        AND A.ORDER_DATE &gt;= #{ORDER_DATE_FR}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		AND A.ORDER_DATE &lt;= #{ORDER_DATE_TO}
	</if>
	<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		AND C.AGENT_TYPE = #{AGENT_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		AND A.CUSTOM_CODE = #{CUSTOM_CODE}
	</if>

	GROUP BY A.CUSTOM_CODE,C.CUSTOM_NAME
    </select>
    <select id="mms110ukrvServiceImpl.selectCustDetailList" parameterType="Map" resultType="rMap">
    	/* mms110ukrvServiceImpl.selectCustDetailList */
    	/* 가입고 사용여부 */
	DECLARE @RefQ008    INTEGER

	SELECT @RefQ008 = COUNT(*)
	  FROM BSA100T WITH (NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND MAIN_CODE = N'Q008'
	   AND SUB_CODE  = N'Y'
	   AND REF_CODE1 = N'Y'


	SELECT
	  B.IN_DIV_CODE AS DIV_CODE
	, A.CUSTOM_CODE
	, C.CUSTOM_NAME
	, D.ITEM_NAME
	, B.ORDER_NUM
	, B.ORDER_SEQ
	, B.ITEM_CODE
	, A.ORDER_DATE
	, B.DVRY_DATE
	--, B.ORDER_Q AS ORDER_UNIT_Q
	--, (B.ORDER_Q - ISNULL(E.RECEIPT_Q,0)) AS RECEIPT_Q
	--, (B.ORDER_Q - ISNULL(E.RECEIPT_Q,0)) AS NOT_RECEIPT_Q
	, B.ORDER_UNIT_P
	, B.ORDER_UNIT_Q AS ORDER_UNIT_Q
	, (B.ORDER_UNIT_Q - ISNULL(E.RECEIPT_Q,0)) AS RECEIPT_Q
	, (B.ORDER_UNIT_Q - ISNULL(E.RECEIPT_Q,0)+ ISNULL(B.BAD_RETURN_Q,0) + ISNULL(F4.BAD_INSPEC_Q,0)) AS NOT_RECEIPT_Q
	, #{RECEIPT_PRSN} AS RECEIPT_PRSN
	, #{RECEIPT_DATE} AS RECEIPT_DATE
	, ISNULL(B.INSPEC_FLAG,'Y') AS INSPEC_FLAG
	, D2.WH_CODE
	, ROW_NUMBER() OVER( ORDER BY A.CUSTOM_CODE, B.ITEM_CODE, B.ORDER_NUM, B.ORDER_SEQ) AS RECEIPT_SEQ
	, A.ORDER_TYPE
	, B.ORDER_UNIT

	  FROM MPO100T A WITH(NOLOCK)
	   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
            							 AND A.DIV_CODE    = B.DIV_CODE
            							 AND A.CUSTOM_CODE = B.CUSTOM_CODE
            							 AND A.ORDER_NUM   = B.ORDER_NUM
	   LEFT JOIN BCM100T C WITH (NOLOCK)  ON A.COMP_CODE   = C.COMP_CODE
            							 AND A.CUSTOM_CODE = C.CUSTOM_CODE
	   INNER JOIN BPR100T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
            							 AND B.ITEM_CODE = D.ITEM_CODE
		INNER JOIN BPR200T D2 WITH(NOLOCK) ON D2.COMP_CODE = A.COMP_CODE
										 AND D2.DIV_CODE = A.DIV_CODE
										 AND D2.ITEM_CODE = B.ITEM_CODE
	   LEFT  JOIN (SELECT COMP_CODE
					  , DIV_CODE
					  , ORDER_NUM
					  , ORDER_SEQ
					  , ISNULL(SUM(RECEIPT_Q),0) AS RECEIPT_Q
				   FROM QMS100T WITH (NOLOCK)
				   WHERE COMP_CODE = #{S_COMP_CODE}
					 AND DIV_CODE    = #{DIV_CODE}
					 AND ORDER_NUM &gt; ''
				   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) E ON B.COMP_CODE = E.COMP_CODE
																		AND B.IN_DIV_CODE  = E.DIV_CODE
																		AND B.ORDER_NUM = E.ORDER_NUM
																		AND B.ORDER_SEQ = E.ORDER_SEQ
		LEFT JOIN (
				SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(BAD_INSPEC_Q) AS BAD_INSPEC_Q
				FROM QMS200T WITH (NOLOCK)
				GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ
		) F4 ON F4.COMP_CODE=B.COMP_CODE AND F4.DIV_CODE=B.DIV_CODE AND F4.ORDER_NUM=B.ORDER_NUM AND F4.ORDER_SEQ=B.ORDER_SEQ																			
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND B.IN_DIV_CODE  = #{DIV_CODE}
	   AND B.CONTROL_STATUS NOT IN('8', '9')			-- 진행상태
	   --AND (ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0)) &gt; 0		-- 미접수량
	    AND ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(E.RECEIPT_Q,0) + (ISNULL(B.BAD_RETURN_Q, 0)+ISNULL(F4.BAD_INSPEC_Q,0)) &gt;  0 -- 미접수량
	   AND (CASE WHEN @RefQ008 = 0 THEN ISNULL(A.AGREE_STATUS,'1') ELSE N'2'  END) &gt; '1' -- 승인여부
	   AND A.CUSTOM_CODE = #{CUSTOM_CODE}				-- 선택된 거래처

	   <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
        AND A.ORDER_DATE &gt;= #{ORDER_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
			AND A.ORDER_DATE &lt;= #{ORDER_DATE_TO}
		</if>
	ORDER BY A.CUSTOM_CODE, B.ITEM_CODE, B.ORDER_NUM, B.ORDER_SEQ
    </select>
    <select id="mms110ukrvServiceImpl.selectcommerceList" parameterType="Map" resultType="rMap">
    	BEGIN
         SET NOCOUNT ON
         SET ARITHABORT ON

         DECLARE @CompCode      NVARCHAR(08) /* 법인코드    */
               , @LangType      NVARCHAR(2)  /* 언어구분    */
               , @RefItem       NVARCHAR(01) /* 명칭 참조 유형  */
               , @DateFormat    NVARCHAR(10) /* 날짜 포맷 유형 설정 */
               , @DIV_CODE      NVARCHAR(02)
               , @FROM_DATE     NVARCHAR(08)
               , @TO_DATE       NVARCHAR(08)
               , @CUSTOM_CODE   NVARCHAR(08)
               , @ITEM_CODE     NVARCHAR(20)
               , @USER_ID       NVARCHAR(100)
               , @COUNT         INT
               , @REF_ITEM         CHAR(1)
               , @REF_DATE_FORMAT  CHAR(10)

         SET @CompCode      = #{S_COMP_CODE}
         SET @LangType      = #{S_LANG_CODE}
         /* 명칭 참조 유형 */
         SELECT TOP 1 @RefItem = REF_ITEM
           FROM BSA300T WITH (NOLOCK)
          WHERE USER_ID = @USER_ID
         SET @RefItem = ISNULL(@RefItem, N'0')
         /* 날짜 포맷 유형 설정 */
         SELECT TOP 1 @DateFormat = CODE_NAME
           FROM BSA100T WITH (NOLOCK)
          WHERE COMP_CODE = @CompCode
            AND MAIN_CODE = N'B044'
            AND REF_CODE1 = N'Y'
         SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
         SET @DIV_CODE      = #{DIV_CODE}
         SET @FROM_DATE     = #{INVOICE_DATE_FR}
         SET @TO_DATE       = #{INVOICE_DATE_TO}
         SET @CUSTOM_CODE   = #{CUSTOM_CODE}
         SET @ITEM_CODE     = #{ITEM_CODE}
         SET @USER_ID       = #{S_USER_ID}
         SET @COUNT         = 100

         SELECT @REF_ITEM = REF_ITEM
           FROM BSA300T
          WHERE USER_ID = @USER_ID
         SELECT @REF_DATE_FORMAT = CODE_NAME
           FROM BSA100T
          WHERE COMP_CODE = @CompCode
            AND MAIN_CODE = 'B044'
            AND REF_CODE1 = 'Y'

	                 /* 가입고 사용여부 */
	        DECLARE @RefQ008    INTEGER

	        SELECT @RefQ008 = COUNT(*)
	          FROM BSA100T WITH (NOLOCK)
	         WHERE COMP_CODE = @CompCode
	           AND MAIN_CODE = N'Q008'
	           AND SUB_CODE  = N'Y'
	           AND REF_CODE1 = N'Y'

         --1.통관 기준 L/C 있는것 + 없는것
         SELECT TOP (@COUNT) PERCENT
               CONVERT(BIT,0) AS CHK
             , A.COMP_CODE
             , A.EXPORTER AS CUSTOM_CODE                               --거래처
             , CASE  @REF_ITEM WHEN '0' THEN M1.CUSTOM_NAME
                               WHEN '1' THEN M1.CUSTOM_NAME1
                               WHEN '2' THEN M1.CUSTOM_NAME2
                               ELSE M1.CUSTOM_NAME
               END AS CUSTOM_NAME
             , B.ITEM_CODE                                          --품목
             , CASE  @REF_ITEM WHEN '0' THEN M2.ITEM_NAME
                               WHEN '1' THEN M2.ITEM_NAME1
                               WHEN '2' THEN M2.ITEM_NAME2
                               ELSE M2.ITEM_NAME
               END AS ITEM_NAME
             , M2.SPEC
             , B.UNIT AS ORDER_UNIT                                 --구매단위
             , M2.STOCK_UNIT                                        --재고단위
             , CASE WHEN C.DATE_LC_OPEN IS NULL THEN ''
                    ELSE REPLACE(
                           REPLACE(
                                   REPLACE(@REF_DATE_FORMAT, 'YYYY', SUBSTRING(C.DATE_LC_OPEN,1,4)) ,
                                                               'MM', SUBSTRING(C.DATE_LC_OPEN,5,2)) ,
                                                               'DD', SUBSTRING(C.DATE_LC_OPEN,7,2))
               END AS LC_DATE                                       --LC일
             , REPLACE(
                       REPLACE(
                               REPLACE(@REF_DATE_FORMAT, 'YYYY', SUBSTRING(A.INVOICE_DATE,1,4)) ,
                                                           'MM', SUBSTRING(A.INVOICE_DATE,5,2)) ,
                                                           'DD', SUBSTRING(A.INVOICE_DATE,7,2)) AS INVOICE_DATE     --통관일
             , B.PRICE
             , B.QTY                                                --수량
             , B.QTY - ISNULL(D.RECEIPT_Q,0) AS NOT_RECEIPT_Q       --미접수량
             , A.PASS_AMT_UNIT AS MONEY_UNIT                        --화폐단위
             , A.PASS_EXCHANGE_RATE AS EXCHANGE_RATE                --환율
             , B.PRICE                                              --단가
             , CASE WHEN B.USE_QTY = 0 THEN B.PASS_AMT
                    ELSE (B.QTY - B.USE_QTY) * B.PRICE
               END AS AMT_O                                         --금액
             , B.PASS_AMT_WON AS AMT_I                              --환산액
             , ISNULL(C.LC_SER_NO,'') AS LC_NO                      --LC번호
             , B.BL_SER_NO AS BL_NO                                 --BL번호
             , B.PASS_SER_NO AS BASIS_NUM                           --통관번호
             , B.PASS_SER AS BASIS_SEQ                              --통관순번
             , ISNULL(E.INSPEC_FLAG, 'Y') 	AS INSPEC_FLAG			--검사대상
             , CASE WHEN ISNULL(C.LC_SER_NO,'') = '' THEN '5'
                    ELSE '3'
               END ORDER_TYPE                                       --발주형태 : 3(Master L/C), 5(직수입)
             , '통관' TRADE_LOC                                     --무역형태
             , B.SO_SER_NO                                          --OFFER번호
             , B.SO_SER                                             --OFFER순번
             , A.PROJECT_NO                                         --프로젝트번호
             , E.LOT_NO
             , F.BL_NO AS BL_NUM
         FROM           TID100T  A  WITH(NOLOCK)        --통관
            INNER JOIN  TID110T  B  WITH(NOLOCK)  ON  B.COMP_CODE    = A.COMP_CODE
                                                 AND  B.DIV_CODE     = A.DIV_CODE
                                                 AND  B.PASS_SER_NO  = A.PASS_SER_NO
            LEFT  JOIN  TIB100T  C  WITH(NOLOCK)  ON  C.COMP_CODE    = A.COMP_CODE       --L/C
                                                 AND  C.DIV_CODE     = A.DIV_CODE
                                                 AND  C.LC_SER_NO    = A.LC_SER_NO
            INNER JOIN  TIA110T  E  WITH(NOLOCK)  ON  E.COMP_CODE    = B.COMP_CODE       --OFFER
                                                 AND  E.DIV_CODE     = B.DIV_CODE
                                                 AND  E.SO_SER_NO    = B.SO_SER_NO
                                                 AND  E.SO_SER       = B.SO_SER
                                                 AND  E.CLOSE_FLAG   = 'N'
            INNER JOIN  BCM100T  M1 WITH(NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
                                                 AND M1.CUSTOM_CODE  = A.EXPORTER
            INNER JOIN  BPR100T  M2 WITH(NOLOCK)  ON M2.COMP_CODE    = B.COMP_CODE
                                                 AND M2.ITEM_CODE    = B.ITEM_CODE
            INNER JOIN  BPR200T  M3 WITH(NOLOCK)  ON M3.COMP_CODE    = M2.COMP_CODE
                                                 AND M3.DIV_CODE     = @DIV_CODE
                                                 AND M3.ITEM_CODE    = M2.ITEM_CODE
            LEFT  JOIN  BSA100T  R1 WITH(NOLOCK)  ON R1.COMP_CODE    = A.COMP_CODE
                                                 AND R1.MAIN_CODE    = 'B044'
                                                 AND R1.REF_CODE1    = 'Y'
			LEFT  JOIN  TIC100T  F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE
												AND F.DIV_CODE = A.DIV_CODE
												AND F.BL_SER_NO = A.BL_SER_NO
            LEFT  JOIN  (--접수내역
                         SELECT COMP_CODE
                              , DIV_CODE
                              , BASIS_NUM      AS PASS_SER_NO
                              , BASIS_SEQ      AS PASS_SER
                              , SUM(RECEIPT_Q) AS RECEIPT_Q
                         FROM QMS100T  A  WITH(NOLOCK)
                         WHERE A.COMP_CODE  = @CompCode
                           AND A.DIV_CODE   = @DIV_CODE
                           AND A.ORDER_TYPE NOT IN ('1','4')
                           AND A.BASIS_NUM &gt; ''
                         GROUP BY COMP_CODE, DIV_CODE, BASIS_NUM, BASIS_SEQ ) D ON D.COMP_CODE   = B.COMP_CODE
                                                                               AND D.DIV_CODE    = B.DIV_CODE
                                                                               AND D.PASS_SER_NO = B.PASS_SER_NO
                                                                               AND D.PASS_SER    = B.PASS_SER
         WHERE A.COMP_CODE     = @CompCode
           AND A.DIV_CODE      = @DIV_CODE
           AND ((F.DATE_SHIPPING &gt;= @FROM_DATE AND @FROM_DATE   &gt; '') OR (@FROM_DATE   = ''))
           AND ((F.DATE_SHIPPING &lt;= @TO_DATE   AND @TO_DATE     &gt; '') OR (@TO_DATE     = ''))
           AND ((A.EXPORTER    = @CUSTOM_CODE AND @CUSTOM_CODE &gt; '') OR (@CUSTOM_CODE = ''))
           AND ((B.ITEM_CODE   = @ITEM_CODE   AND @ITEM_CODE   &gt; '') OR (@ITEM_CODE   = ''))
           AND A.NATION_INOUT  = '2'
           AND B.QTY - ISNULL(D.RECEIPT_Q,0) > 0
           AND (CASE WHEN @RefQ008 = 0
                     THEN ISNULL(E.INSPEC_FLAG, ISNULL(M3.INSPEC_YN, 'N'))
                     ELSE N'Y'
                END) = N'Y'

         UNION ALL

         --2.통관없는 로컬 LC
         SELECT TOP (@COUNT) PERCENT
               CONVERT(BIT,0) AS CHK
             , A.COMP_CODE
             , A.BENEFICIARY CUSTOM_CODE                            --거래처
             , CASE  @REF_ITEM WHEN '0' THEN M1.CUSTOM_NAME
             WHEN '1' THEN M1.CUSTOM_NAME1
                               WHEN '2' THEN M1.CUSTOM_NAME2
                               ELSE M1.CUSTOM_NAME
               END AS CUSTOM_NAME
             , B.ITEM_CODE                                          --품목
             , CASE  @REF_ITEM WHEN '0' THEN M2.ITEM_NAME
                               WHEN '1' THEN M2.ITEM_NAME1
                               WHEN '2' THEN M2.ITEM_NAME2
                               ELSE M2.ITEM_NAME
               END AS ITEM_NAME
             , M2.SPEC
             , B.UNIT AS ORDER_UNIT                                 --구매단위
             , M2.STOCK_UNIT                                        --재고단위
             , CASE WHEN A.DATE_OPEN IS NULL THEN ''
                    ELSE REPLACE(
                           REPLACE(
                                   REPLACE(@REF_DATE_FORMAT, 'YYYY', SUBSTRING(A.DATE_OPEN,1,4)) ,
                                                               'MM', SUBSTRING(A.DATE_OPEN,5,2)) ,
                                                               'DD', SUBSTRING(A.DATE_OPEN,7,2))
               END AS LC_DATE                                       --LLC일
             , '' AS INVOICE_DATE
             , B.PRICE
             , B.QTY                                                --수량
             , B.QTY - ISNULL(D.RECEIPT_Q,0) AS NOT_RECEIPT_Q       --미접수량
             , A.AMT_UNIT AS MONEY_UNIT                             --화폐단위
             , A.EXCHANGE_RATE                                      --환율
             , B.PRICE                                              --단가
             , CASE WHEN B.USE_QTY = 0 THEN B.LLC_AMT
                    ELSE (B.QTY - B.USE_QTY * B.PRICE)
               END AS AMT_O                                         --금액
             , B.LLC_AMT_WON AS AMT_I                               --환산액
             , A.LLC_SER_NO AS LC_NO                                --LLC번호
             , '' AS BL_NO
             , B.LLC_SER_NO AS BASIS_NUM                            --LLC번호
             , B.LLC_SER AS BASIS_SEQ                               --LLC순번
             , ISNULL(C.INSPEC_FLAG, 'Y') AS INSPEC_FLAG			--검사대상
             , '2' ORDER_TYPE                                       --발주형태 : 2(Local L/C)
             , 'LLC' TRADE_LOC                                      --무역형태
             , B.SO_SER_NO                                          --OFFER번호
             , B.SO_SER                                             --OFFER순번
             , A.PROJECT_NO                                         --프로젝트번호
             , C.LOT_NO
             , '' AS BL_NUM
         FROM             TIB140T  A  WITH(NOLOCK)      --LOCAL L/C
              INNER JOIN  TIB150T  B  WITH(NOLOCK)  ON  A.DIV_CODE     = B.DIV_CODE
                                                   AND  A.LLC_SER_NO   = B.LLC_SER_NO
                                                   AND  A.COMP_CODE    = B.COMP_CODE
              INNER JOIN  TIA110T  C  WITH(NOLOCK)  ON  C.COMP_CODE    = B.COMP_CODE       --OFFER
                                                   AND  C.DIV_CODE     = B.DIV_CODE
                                                   AND  C.SO_SER_NO    = B.SO_SER_NO
                                                   AND  C.SO_SER       = B.SO_SER
                                                   AND  C.CLOSE_FLAG   = 'N'
              INNER JOIN  BCM100T  M1 WITH(NOLOCK)  ON M1.COMP_CODE    = A.COMP_CODE
                                                   AND M1.CUSTOM_CODE  = A.BENEFICIARY
              INNER JOIN  BPR100T  M2 WITH(NOLOCK)  ON M2.COMP_CODE    = B.COMP_CODE
                                                   AND M2.ITEM_CODE    = B.ITEM_CODE
              INNER JOIN  BPR200T  M3 WITH(NOLOCK)  ON M3.COMP_CODE    = M2.COMP_CODE
                                                   AND M3.DIV_CODE     = @DIV_CODE
                                                   AND M3.ITEM_CODE    = M2.ITEM_CODE
              LEFT  JOIN  (--접수내역
                             SELECT COMP_CODE, DIV_CODE, ORDER_NUM AS LLC_SER_NO, ORDER_SEQ AS LLC_SER
                                  , SUM(RECEIPT_Q) AS RECEIPT_Q
                             FROM QMS100T  A  WITH(NOLOCK)
                             WHERE A.COMP_CODE     = @CompCode
                  AND A.ORDER_TYPE NOT IN ('1','4')
                             GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ ) D ON D.COMP_CODE   = B.COMP_CODE
                                                                                   AND D.DIV_CODE    = B.DIV_CODE
                                                                                   AND D.LLC_SER_NO = B.LLC_SER_NO
                                                                                   AND D.LLC_SER    = B.LLC_SER

         WHERE A.COMP_CODE     = @CompCode
           AND A.DIV_CODE      = @DIV_CODE
           AND ((A.DATE_OPEN  &gt;= @FROM_DATE AND @FROM_DATE &gt; '') OR (@FROM_DATE = ''))
           AND ((A.DATE_OPEN  &lt;= @TO_DATE   AND @TO_DATE   &gt; '') OR (@TO_DATE   = ''))
           AND ((A.BENEFICIARY = @CUSTOM_CODE AND @CUSTOM_CODE &gt; '') OR (@CUSTOM_CODE = ''))
           AND ((B.ITEM_CODE   = @ITEM_CODE   AND @ITEM_CODE   &gt; '') OR (@ITEM_CODE   = ''))
           AND A.NATION_INOUT  = '1'
           AND B.QTY - ISNULL(D.RECEIPT_Q,0) &gt; 0
           AND (CASE WHEN @RefQ008 = 0
                     THEN ISNULL(C.INSPEC_FLAG, ISNULL(M3.INSPEC_YN, 'N'))
                     ELSE N'Y'
                END) = N'Y'

         SET ARITHABORT OFF
         SET NOCOUNT OFF

         END
    </select>

	<select id="mms110ukrvServiceImpl.selectvmiList" parameterType="Map" resultType="rMap">
            /* mms110ukrvServiceImpl.selectvmiList */
            BEGIN
                SET NOCOUNT ON
                SET ARITHABORT ON

                DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                      , @UserId      NVARCHAR(100) /* 사용자ID    */
                      , @LangType    NVARCHAR(2)  /* 언어구분    */
                      , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                      , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            	SET @CompCode = #{S_COMP_CODE}
                SET @UserId   = #{S_USER_ID}
                SET @LangType = #{S_LANG_CODE}

                /* 명칭 참조 유형 */
                SELECT TOP 1 @RefItem = REF_ITEM
                  FROM BSA300T WITH (NOLOCK)
                 WHERE USER_ID = @UserId

                SET @RefItem = ISNULL(@RefItem, N'0')

                /* 날짜 포맷 유형 설정 */
                SELECT TOP 1 @DateFormat = CODE_NAME
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'B044'
                   AND REF_CODE1 = N'Y'

                SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

                /* 추가설정값 */
                DECLARE @RefQ034    INTEGER

                SELECT @RefQ034 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'Q034'
                   AND SUB_CODE  = N'Y'
                   AND REF_CODE1 = N'Y'

                /* 가입고 사용여부 */
                DECLARE @RefQ008    INTEGER

                SELECT @RefQ008 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'Q008'
                   AND SUB_CODE  = N'Y'
                   AND REF_CODE1 = N'Y'

                 /* 사후승인여부 */
                DECLARE @RefM008    INTEGER

                SELECT @RefM008 = COUNT(*)
                  FROM BSA100T WITH (NOLOCK)
                 WHERE COMP_CODE = @CompCode
                   AND MAIN_CODE = N'M008'
                   AND SUB_CODE  = N'1'
                   AND REF_CODE1 = N'Y'
				   AND REF_CODE3 = N'Y'


                /* 데이터 조회 */
                SELECT CAST('' AS BIT) AS CHK
                     , B.CUSTOM_CODE
                     , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                             WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                                 ELSE C.CUSTOM_NAME
                         END)                                           AS CUSTOM_NAME
                     , B.ITEM_CODE
                     , (CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
                             WHEN @RefItem = '2' THEN D.ITEM_NAME2
                                                 ELSE D.ITEM_NAME
                         END)                                           AS ITEM_NAME
                     , D.SPEC

                     , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                             THEN ''
                             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                     , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                     , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                        END)                                            AS DVRY_DATE
                     , B.ORDER_UNIT
                     , B.ORDER_UNIT_Q
                 --    , (CASE WHEN @RefQ034 = 0
                 --             THEN ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(B.RECEIPT_Q, 0)
                 --             ELSE ISNULL(B.ORDER_UNIT_Q,0) - ISNULL(B.RECEIPT_Q, 0) + ISNULL(B.BAD_RETURN_Q,0)
                 --        END)                                           AS NOT_RECEIPT_Q
                     , (CASE WHEN @RefQ034 = 0
                             THEN ISNULL(V1.ISSUE_Q_TOT,0) / ISNULL(B.TRNS_RATE,1) - ISNULL(B.RECEIPT_Q, 0)
                             ELSE ISNULL(V1.ISSUE_Q_TOT,0) / ISNULL(B.TRNS_RATE,1) - ISNULL(B.RECEIPT_Q, 0) + (ISNULL(B.BAD_RETURN_Q,0)+ISNULL(F4.BAD_INSPEC_Q,0))
                         END)                                           AS NOT_RECEIPT_Q
                     , A.MONEY_UNIT
                     , B.ORDER_UNIT_P
                     , B.ORDER_O
                     , B.ORDER_NUM
                     , B.ORDER_SEQ
                     , ISNULL(B.INSPEC_FLAG, 'Y')						AS INSPEC_FLAG
                     , B.LOT_NO
                     , A.ORDER_TYPE
                     , A.ORDER_PRSN
                     , B.REMARK
                     , B.PROJECT_NO
                     , A.COMP_CODE
                     , B.WH_CODE
                     , A.DIV_CODE
                     , B.TRNS_RATE
                     , A.AGREE_STATUS      --승인일자
                     , A.ORDER_DATE      --발주일
                     , V.ISSUE_NUM
                     , V.ISSUE_SEQ

                  FROM          MPO100T A WITH (NOLOCK)
            		 INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
            				                           AND A.DIV_CODE    = B.DIV_CODE
            				                           AND A.CUSTOM_CODE = B.CUSTOM_CODE
            				                           AND A.ORDER_NUM   = B.ORDER_NUM
					 INNER JOIN VMI100T V WITH (NOLOCK) ON B.COMP_CODE   = V.COMP_CODE
												--	   AND B.IN_DIV_CODE = V.DIV_CODE
													   AND B.ORDER_NUM   = V.ORDER_NUM
													   AND B.ORDER_SEQ   = V.ORDER_SEQ
					 LEFT JOIN  (SELECT COMP_CODE
		                                      , DIV_CODE
		                                      , ORDER_NUM
		                                      , ORDER_SEQ
		                                      , SUM(ISSUE_Q) AS ISSUE_Q_TOT
	                                   FROM VMI100T WITH (NOLOCK)
	                                   WHERE COMP_CODE = @CompCode
	            	                     /*'사업장*/
	                                     AND DIV_CODE    = #{DIV_CODE}
	                                     AND ORDER_NUM  &gt; ''
	                                   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) V1 ON B.COMP_CODE = V1.COMP_CODE
									            																         -- AND B.IN_DIV_CODE  = E.DIV_CODE
									            																             AND B.ORDER_NUM = V1.ORDER_NUM
									            																             AND B.ORDER_SEQ = V1.ORDER_SEQ
                     INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                      				   AND A.CUSTOM_CODE = C.CUSTOM_CODE
                     INNER JOIN BPR100T D WITH (NOLOCK) ON B.COMP_CODE   = D.COMP_CODE
                                      				   AND B.ITEM_CODE   = D.ITEM_CODE
                     LEFT  JOIN (SELECT COMP_CODE
		                                      , DIV_CODE
		                                      , ORDER_NUM
		                                      , ORDER_SEQ
		                                      , SUM(RECEIPT_Q) AS RECEIPT_Q
		                                   FROM QMS100T WITH (NOLOCK)
		                                   WHERE COMP_CODE = @CompCode
		            	                     /*'사업장*/
		                                     AND DIV_CODE    = #{DIV_CODE}
		                                     AND ORDER_NUM &gt; ''
		                                   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) E ON B.COMP_CODE = E.COMP_CODE
		            																            AND B.IN_DIV_CODE  = E.DIV_CODE
		            																            AND B.ORDER_NUM = E.ORDER_NUM
		            																            AND B.ORDER_SEQ = E.ORDER_SEQ
					 LEFT JOIN (
								SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(BAD_INSPEC_Q) AS BAD_INSPEC_Q
								FROM QMS200T WITH (NOLOCK)
								GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ
					 ) F4 ON F4.COMP_CODE=B.COMP_CODE AND F4.DIV_CODE=B.DIV_CODE AND F4.ORDER_NUM=B.ORDER_NUM AND F4.ORDER_SEQ=B.ORDER_SEQ		            																            
                 WHERE A.COMP_CODE = @CompCode
                   AND (CASE WHEN @RefQ008 = 0
                             THEN ISNULL(A.AGREE_STATUS,'1')
                             ELSE N'2'
                         END) &gt; '1'
                   AND B.CONTROL_STATUS NOT IN('8', '9')

                   --AND ISNULL(V1.ISSUE_Q_TOT,0) / ISNULL(B.TRNS_RATE,1) - ISNULL(E.RECEIPT_Q,0) &gt; 0  -- 미접수량
                   AND ISNULL(V1.ISSUE_Q_TOT,0) / ISNULL(B.TRNS_RATE,1) - ISNULL(E.RECEIPT_Q,0) + (ISNULL(B.BAD_RETURN_Q, 0)+ISNULL(F4.BAD_INSPEC_Q,0)) &gt; 0

               	   AND (CASE WHEN @RefQ008 = 0
                             THEN ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
                                                FROM BPR200T WITH (NOLOCK)
                                               WHERE COMP_CODE = B.COMP_CODE
                                                 AND DIV_CODE  = B.DIV_CODE
                                                 AND ITEM_CODE = B.ITEM_CODE))
                             ELSE N'Y'
                         END) = N'Y'


            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            	/*'사업장*/
                AND B.IN_DIV_CODE    = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                /*'거래처*/
                AND B.CUSTOM_CODE = #{CUSTOM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
                /*'납기일 FROM*/
                AND B.DVRY_DATE  &gt;= #{DVRY_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
                /*'납기일 TO*/
                AND B.DVRY_DATE  &lt;= #{DVRY_DATE_TO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
                /*'발주일 FROM*/
                AND A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
                /*'발주일 TO*/
                AND A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
            </if>

            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                /*'품목코드*/
                AND B.ITEM_CODE   = #{ITEM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                /*'납픔창고*/
                AND B.WH_CODE     = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                /*'발주형태*/
                AND A.ORDER_TYPE  = #{ORDER_TYPE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                /*'lot 번호*/
                AND B.LOT_NO   LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
                /*'구매담당*/
                AND A.ORDER_PRSN  = #{ORDER_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
                /*'발주번호*/
                AND A.ORDER_NUM  LIKE #{ORDER_NUM} + '%'
            </if>
                SET NOCOUNT OFF
                SET ARITHABORT OFF
            END
    </select>


    <select id="mms110ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
    SELECT
    	A.WH_CODE
    FROM BSA210T A WITH(NOLOCK)
    	LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
    									AND B.DEPT_CODE = A.TREE_CODE
    WHERE A.COMP_CODE = #{S_COMP_CODE}
    AND B.USER_ID = #{S_USER_ID}

    </select>

    <select id="mms110ukrvServiceImpl.inspecQtyCheck" parameterType="Map" resultType="rMap">
        	SELECT INSPEC_Q
    	      FROM QMS200T WITH(NOLOCK)
    	     WHERE COMP_CODE = #{S_COMP_CODE}
    	       AND DIV_CODE    = #{DIV_CODE}
    	       AND RECEIPT_NUM = #{RECEIPT_NUM}
    	       AND RECEIPT_SEQ = #{RECEIPT_SEQ}
    </select>

    <insert id="mms110ukrvServiceImpl.insertLogMaster" parameterType="Map">
        --mms110ukrv.Cmms110ukrv SetQms110[fnQms110Set] QUERY03
        INSERT L_QMS100T
             ( KEY_VALUE
             , OPR_FLAG
             , COMP_CODE
             , DIV_CODE
             , RECEIPT_NUM
             , RECEIPT_SEQ
             , RECEIPT_DATE
             , CUSTOM_CODE
             , ORDER_TYPE
             , ORDER_UNIT
             , ITEM_CODE
             , RECEIPT_Q
             , RECEIPT_PRSN
             , LOT_NO
             , PROJECT_NO
             , REMARK
             , ORDER_NUM
             , ORDER_SEQ
             , INSPEC_FLAG
             , INOUT_NUM
             , INOUT_SEQ
             , BASIS_NUM
             , BASIS_SEQ
             , TRADE_FLAG_YN
             , WH_CODE

             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME

             ,MAKE_LOT_NO
			 ,MAKE_DATE
			 ,MAKE_EXP_DATE
			 ,REF_ISSUE_NUM
			 ,REF_ISSUE_SEQ
			 )
         VALUES
             ( #{KEY_VALUE}
             , #{OPR_FLAG}
             , #{S_COMP_CODE}
             , #{DIV_CODE}
             , #{RECEIPT_NUM}
            <if test="@foren.Ognl@isEmpty(RECEIPT_SEQ)">
             , '0'
            </if>
            <if test="@foren.Ognl@isNotEmpty(RECEIPT_SEQ)">
             , #{RECEIPT_SEQ}
            </if>
             , #{RECEIPT_DATE}
             , #{CUSTOM_CODE}
             , #{ORDER_TYPE}
             , #{ORDER_UNIT}
             , #{ITEM_CODE}
             , #{RECEIPT_Q}
             , #{RECEIPT_PRSN}
             , #{LOT_NO}
             , #{PROJECT_NO}
             , #{REMARK}
             , #{ORDER_NUM}
             , #{ORDER_SEQ}
             , #{INSPEC_FLAG}
             , #{INOUT_NUM}
             , #{INOUT_SEQ}
             , #{BASIS_NUM}
             , #{BASIS_SEQ}
             , #{TRADE_FLAG_YN}
             , #{WH_CODE}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()

             , #{MAKE_LOT_NO}
			 , #{MAKE_DATE}
			 , #{MAKE_EXP_DATE}
			 , #{REF_ISSUE_NUM}
			 , #{REF_ISSUE_SEQ}
             )
    </insert>

    <update id="mms110ukrvServiceImpl.spImportReceipt" parameterType="Map" statementType="CALLABLE">
    	{call USP_MATRL_Mms110ukr (
    		#{KeyValue,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
    		#{RECEIPT_NUM,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
    		#{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
    	)}
    </update>

	<select id="mms110ukrvServiceImpl.printList" parameterType="Map" resultType="rMap">
		/*mms110ukrvServiceImpl.printList*/
		SELECT A.ITEM_CODE                       -- 자재코드
		    , B.ITEM_NAME                        -- 자재명칭
		    , A.LOT_NO                           -- LOT_NO
		    , SUBSTRING(A.RECEIPT_DATE,1,4) + REPLICATE('0', 3 - len(convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.RECEIPT_DATE)))) + convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.RECEIPT_DATE)) AS RECEIPT_DATE1 --입고주차
		    , A.RECEIPT_Q * MP.TRNS_RATE         AS RECEIPT_Q      -- 입고량
		    , A.RECEIPT_Q * MP.TRNS_RATE         AS PACK_QTY       -- 20210616 추가: (극동) 제품일 경우 PACK_QTY를 출력(입고량)
		    , A.RECEIPT_Q * MP.TRNS_RATE         AS ALL_RECEIPT_Q  -- 입고량
		    , A.MAKE_EXP_DATE                    --사용기한
		    , A.RECEIPT_DATE                     AS RECEIPT_DATE2  --입고일자
		    , A.MAKE_LOT_NO                      --업체LOT
		    , C.CUSTOM_NAME                      --업체명
		    , B.LOCATION                         --위치
		    , B.ITEM_ACCOUNT
		    , MP.TRNS_RATE
		    , B1.STOCK_UNIT
		    , A.RECEIPT_NUM
		    , A.RECEIPT_SEQ
		    , A.MAKE_DATE
		    , R1.CODE_NAME                       AS INSPEC_PRSN_NAME --검사자명
		    , A.RECEIPT_Q                        AS RECEIPT_ORDER_Q
		    , MP.ORDER_UNIT
		    , CASE WHEN D3.REF_CODE3 = '40' THEN 'Q10' + '-' + SUBSTRING(A.RECEIPT_NUM,6,6)
		                                               + '-' + SUBSTRING(A.RECEIPT_NUM,12,3)
		                                               + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
		                                               +  convert(nvarchar(5),A.RECEIPT_SEQ)
		                                    ELSE 'Q20' + '-' + SUBSTRING(A.RECEIPT_NUM,6,6)
		                                               + '-' + SUBSTRING(A.RECEIPT_NUM,12,3)
		                                               + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
		                                               +  convert(nvarchar(5),A.RECEIPT_SEQ)
		      END                                AS RECEIPT_NUM2
		    , B1.SPEC
		    FROM       QMS100T A  WITH(NOLOCK)
		    INNER JOIN BPR200T B  WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
		                                      AND A.DIV_CODE    = B.DIV_CODE
		                                      AND A.ITEM_CODE   = B.ITEM_CODE
		    INNER JOIN BPR100T B1 WITH(NOLOCK) ON A.COMP_CODE   = B1.COMP_CODE
		                                      AND A.ITEM_CODE   = B1.ITEM_CODE
		    INNER JOIN BCM100T C  WITH(NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
		                                      AND A.CUSTOM_CODE = C.CUSTOM_CODE
		    LEFT  JOIN MPO200T MP WITH(NOLOCK) ON A.COMP_CODE   = MP.COMP_CODE
		                                      AND A.DIV_CODE    = MP.IN_DIV_CODE
		                                      AND A.ORDER_NUM   = MP.ORDER_NUM
		                                      AND A.ORDER_SEQ   = MP.ORDER_SEQ
		    LEFT  JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE  = A.COMP_CODE
		                                      AND R1.MAIN_CODE  = 'Q021'
		                                      AND R1.SUB_CODE   = A.RECEIPT_PRSN
		    LEFT  JOIN BSA100T D3 WITH(NOLOCK) ON D3.COMP_CODE  = B.COMP_CODE
		                                      AND D3.MAIN_CODE  = 'B020'
		                                      AND D3.SUB_CODE  != '$'
		                                      AND D3.SUB_CODE   = B.ITEM_ACCOUNT
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.DIV_CODE    = #{DIV_CODE}
		   AND A.RECEIPT_NUM IN (select value from  uniLITE.fnSplit(#{RECEIPT_NUM}, ','))
		   AND A.RECEIPT_SEQ IN (select value from  uniLITE.fnSplit(#{RECEIPT_SEQS}, ','))
    </select>

    <select id="mms110ukrvServiceImpl.autoInputCheck" parameterType="Map" resultType="Int">
		  SELECT COUNT(1)
          FROM BSA100T
          WHERE MAIN_CODE = N'M510'
          AND ISNULL(UPPER(LEFT(REF_CODE1,1)),'') = N'Y'
          AND SUB_CODE = 'Y'
          AND COMP_CODE = #{COMP_CODE}
	</select>


	<select id="mms110ukrvServiceImpl.selectAutoInputBeforeDeletetList" parameterType="Map" resultType="rMap">

        SELECT A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_METH
             , A.INOUT_TYPE_DETAIL
             , A.ITEM_CODE
             , E.ITEM_ACCOUNT
             , B.SPEC
             , ISNULL(A.ORDER_UNIT, B.STOCK_UNIT) AS ORDER_UNIT
             , A.ORDER_UNIT_Q
             , A.ITEM_STATUS
             , A.INOUT_Q                AS ORIGINAL_Q
             , 0                        AS GOOD_STOCK_Q
             , 0                        AS BAD_STOCK_Q
             , ISNULL((SELECT ISNULL(ORDER_Q,0) - ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS NOINOUT_Q
             , A.PRICE_YN
             , A.MONEY_UNIT
             , A.INOUT_FOR_P
             , A.INOUT_FOR_O
             , A.ORDER_UNIT_FOR_P
             , A.INOUT_FOR_O AS ORDER_UNIT_FOR_O
             , A.ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , A.INOUT_P
             , A.INOUT_I
             , A.ORDER_UNIT_P
             , A.INOUT_I ORDER_UNIT_I
             , B.STOCK_UNIT
             , A.TRNS_RATE
             , A.INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , A.BL_NUM
             , A.ORDER_NUM
             , A.ORDER_SEQ
             , ISNULL((SELECT ISNULL(ORDER_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS ORDER_Q
             , A.INOUT_CODE_TYPE
             , A.WH_CODE
             , A.INOUT_DATE
             , A.INOUT_PRSN
             , A.ACCOUNT_Q
             , A.CREATE_LOC
             , A.SALE_C_DATE
             , A.REMARK
             , A.PROJECT_NO
             , A.LOT_NO
             , A.INOUT_TYPE
             , A.INOUT_CODE
             , A.DIV_CODE
             , C.COMPANY_NUM
             , ISNULL((SELECT ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS INSTOCK_Q
             , A.SALE_DIV_CODE
             , A.SALE_CUSTOM_CODE
             , A.BILL_TYPE
             , A.SALE_TYPE
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , E.EXCESS_RATE
             , A.INSPEC_NUM
             , A.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
          FROM            BTR100T A WITH (NOLOCK)
               INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                                 AND A.ITEM_CODE  = B.ITEM_CODE
               INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE  = C.COMP_CODE
                                                 AND A.INOUT_CODE = C.CUSTOM_CODE
               INNER JOIN BPR200T E WITH (NOLOCK) ON A.COMP_CODE  = E.COMP_CODE
                                                 AND A.DIV_CODE   = E.DIV_CODE
                                                 AND A.ITEM_CODE  = E.ITEM_CODE
               LEFT  JOIN MPO200T G WITH (NOLOCK) ON A.COMP_CODE  = G.COMP_CODE
                                                 AND A.DIV_CODE = G.IN_DIV_CODE
                                                 AND A.ORDER_NUM  = G.ORDER_NUM
                                                 AND A.ORDER_SEQ  = G.ORDER_SEQ
               LEFT  JOIN MPO100T F WITH (NOLOCK) ON G.COMP_CODE  = F.COMP_CODE
               									 AND G.DIV_CODE		= F.DIV_CODE
                                                 AND G.ORDER_NUM  = F.ORDER_NUM
         WHERE A.COMP_CODE  = #{COMP_CODE}
           AND A.DIV_CODE   = #{DIV_CODE}
           AND A.RECEIPT_NUM = #{RECEIPT_NUM}
           AND A.RECEIPT_SEQ = #{RECEIPT_SEQ}
           AND F.ORDER_TYPE <![CDATA[<>]]> N'4'
	</select>

	<select id="mms110ukrvServiceImpl.selectAutoInputBeforeDeletetOutList" parameterType="Map" resultType="rMap">

         SELECT A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_METH
             , A.INOUT_TYPE_DETAIL
             , A.ITEM_CODE
             , E.ITEM_ACCOUNT
             , B.SPEC
             , ISNULL(A.ORDER_UNIT, B.STOCK_UNIT) AS ORDER_UNIT
             , A.ORDER_UNIT_Q
             , A.ITEM_STATUS
             , A.INOUT_Q                AS ORIGINAL_Q
             , 0                        AS GOOD_STOCK_Q
             , 0                        AS BAD_STOCK_Q
             , ISNULL((SELECT ISNULL(ORDER_Q,0) - ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS NOINOUT_Q
             , A.PRICE_YN
             , A.MONEY_UNIT
             , A.INOUT_FOR_P
             , A.INOUT_FOR_O
             , A.ORDER_UNIT_FOR_P
             , A.INOUT_FOR_O AS ORDER_UNIT_FOR_O
             , A.ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , A.INOUT_P
             , A.INOUT_I
             , A.ORDER_UNIT_P
             , A.INOUT_I ORDER_UNIT_I
             , B.STOCK_UNIT
             , A.TRNS_RATE
             , A.INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , A.BL_NUM
             , A.ORDER_NUM
             , A.ORDER_SEQ
             , ISNULL((SELECT ISNULL(ORDER_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS ORDER_Q
             , A.INOUT_CODE_TYPE
             , A.WH_CODE
             , A.INOUT_DATE
             , A.INOUT_PRSN
             , A.ACCOUNT_Q
             , A.CREATE_LOC
             , A.SALE_C_DATE
             , A.REMARK
             , A.PROJECT_NO
             , A.LOT_NO
             , A.INOUT_TYPE
             , A.INOUT_CODE
             , A.DIV_CODE
             , C.COMPANY_NUM
             , ISNULL((SELECT ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS INSTOCK_Q
             , A.SALE_DIV_CODE
             , A.SALE_CUSTOM_CODE
             , A.BILL_TYPE
             , A.SALE_TYPE
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , E.EXCESS_RATE
             , A.INSPEC_NUM
             , A.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
          FROM            BTR100T A WITH (NOLOCK)
               INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                                 AND A.ITEM_CODE  = B.ITEM_CODE
               INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE  = C.COMP_CODE
                                                 AND A.INOUT_CODE = C.CUSTOM_CODE
               INNER JOIN BPR200T E WITH (NOLOCK) ON A.COMP_CODE  = E.COMP_CODE
                                                 AND A.DIV_CODE   = E.DIV_CODE
                                                 AND A.ITEM_CODE  = E.ITEM_CODE
			    LEFT  JOIN MPO200T G WITH (NOLOCK) ON A.COMP_CODE  = G.COMP_CODE
                                                 AND A.DIV_CODE = G.IN_DIV_CODE
                                                 AND A.ORDER_NUM  = G.ORDER_NUM
                                                 AND A.ORDER_SEQ  = G.ORDER_SEQ
               LEFT  JOIN MPO100T F WITH (NOLOCK) ON G.COMP_CODE  = F.COMP_CODE
               									 AND G.DIV_CODE		= F.DIV_CODE
                                                 AND G.ORDER_NUM  = F.ORDER_NUM

          WHERE A.COMP_CODE  = #{COMP_CODE}
           AND A.DIV_CODE   = #{DIV_CODE}
           AND A.RECEIPT_NUM = #{RECEIPT_NUM}
           AND A.RECEIPT_SEQ = #{RECEIPT_SEQ}
           AND F.ORDER_TYPE = N'4'
	</select>

	<select id="mms110ukrvServiceImpl.selectAutoInputList" parameterType="Map" resultType="rMap">
		 SELECT ''                                                                                                            							      AS INOUT_NUM
             , E.RECEIPT_SEQ                                                                                                                 				  AS INOUT_SEQ
             , '1'                                                                                                                 								  AS INOUT_METH
             ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             	   ELSE   (SELECT MIN(SUB_CODE)
				              FROM BSA100T
				             WHERE COMP_CODE = A.COMP_CODE
				               AND MAIN_CODE = N'M103'
				               AND SUB_CODE <![CDATA[<>]]> N'$')
			   END	                     												     AS INOUT_TYPE_DETAIL
             , B.ITEM_CODE
             , D.ITEM_ACCOUNT
             , C.SPEC
             , B.ORDER_UNIT
             , ISNULL(E.RECEIPT_Q,0)                                                                                           				AS ORDER_UNIT_Q
             , '1'                                                                                                                 								AS ITEM_STATUS
             , 0                                                                                                                  							    AS ORIGINAL_Q
             , 0                                                                                                                   								AS GOOD_STOCK_Q
             , 0                                                                                                                   								AS BAD_STOCK_Q
             , ISNULL(E.RECEIPT_Q,0) 										                                                                 	AS NOINOUT_Q
             , B.UNIT_PRICE_TYPE                                                                                                   					AS PRICE_YN
             , A.MONEY_UNIT
             , B.ORDER_UNIT_P / ISNULL(B.TRNS_RATE,1) AS INOUT_FOR_P
             , B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0)                                                                        AS INOUT_FOR_O
             , B.ORDER_UNIT_P                                                                                                      								AS ORDER_UNIT_FOR_P
             , (B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0))                                                                        				AS ORDER_UNIT_FOR_O
             , 'Y'                                                                                                                 										AS ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , (B.ORDER_UNIT_P * A.EXCHG_RATE_O) / ISNULL(B.TRNS_RATE,1) AS INOUT_P
             , (B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0) * A.EXCHG_RATE_O)                                                       	AS INOUT_I
             ,  B.ORDER_UNIT_P                                                                                                							AS ORDER_UNIT_P
             , (B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0) * A.EXCHG_RATE_O)                                                       	AS ORDER_UNIT_I
             , C.STOCK_UNIT
             , ISNULL(B.TRNS_RATE,1)                                                                                               							AS TRNS_RATE
             , ISNULL(E.RECEIPT_Q,0)   *     ISNULL(B.TRNS_RATE,1)                                                    							AS INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , ''                                                                                                                  										AS BL_NUM
             , B.ORDER_NUM
             , B.ORDER_SEQ
             , B.ORDER_Q
             , '4'                                                                                                                 										AS INOUT_CODE_TYPE
             , B.WH_CODE																																			AS WH_CODE
             , E.RECEIPT_DATE                                                                                                       								AS INOUT_DATE
             , ''                                                                                                                  										AS INOUT_PRSN
             , 0                                                                                                                   										AS ACCOUNT_Q
             , '2'                                                                                                                 										AS CREATE_LOC
             , ''                                                                                                                  										AS SALE_C_DATE
             , E.REMARK
             , E.PROJECT_NO
             , E.LOT_NO                                                                                                       										AS LOT_NO
             , '1'                                                                                                                 										AS INOUT_TYPE
             , A.CUSTOM_CODE                                                                                                       							AS INOUT_CODE
             , B.IN_DIV_CODE AS DIV_CODE
             , ''                                                                                                                 										AS COMPANY_NUM
             , ISNULL(B.INSTOCK_Q,0)                                                                                              							AS INSTOCK_Q
             , '*'                                                                                                                										AS SALE_DIV_CODE
             , '*'                                                                                                                 										AS SALE_CUSTOM_CODE
             , '*'                                                                                                                 										AS BILL_TYPE
             , '*'                                                                                                                 										AS SALE_TYPE
             , #{USER_ID}                                                                                               											AS UPDATE_DB_USER
             , GETDATE()                                                                                                         									AS UPDATE_DB_TIME
             , D.EXCESS_RATE
             , A.COMP_CODE AS S_COMP_CODE
             , E.MAKE_LOT_NO
             , E.MAKE_DATE
             , E.MAKE_EXP_DATE
             , E.RECEIPT_NUM
             , E.RECEIPT_SEQ
             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
             , E.RECEIPT_NUM AS INSPEC_NUM
             , E.RECEIPT_SEQ AS INSPEC_SEQ
          FROM            MPO100T A WITH (NOLOCK)
               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                 AND A.DIV_CODE  = B.DIV_CODE
                                                 AND A.ORDER_NUM = B.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                 AND B.ITEM_CODE = C.ITEM_CODE
               INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                 AND B.DIV_CODE  = D.DIV_CODE
                                                 AND B.ITEM_CODE = D.ITEM_CODE
               INNER JOIN QMS100T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                 AND B.IN_DIV_CODE  = E.DIV_CODE
                                                 AND B.ORDER_NUM = E.ORDER_NUM
                                                 AND B.ORDER_SEQ = E.ORDER_SEQ
         WHERE A.COMP_CODE                = #{COMP_CODE}
           AND B.IN_DIV_CODE                 = #{DIV_CODE}
           AND A.ORDER_TYPE              <![CDATA[<>]]> N'4'
           AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
           AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
           AND ISNULL(E.INSPEC_FLAG, ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
                                        FROM BPR200T
                                       WHERE COMP_CODE = B.COMP_CODE
                                         AND DIV_CODE  = B.DIV_CODE
                                         AND ITEM_CODE = B.ITEM_CODE))) = N'N'
           AND E.RECEIPT_NUM         = #{RECEIPT_NUM}
           AND E.RECEIPT_SEQ 			= #{RECEIPT_SEQ}
           AND E.RECEIPT_Q         <![CDATA[>]]> 0


		  ORDER BY E.RECEIPT_SEQ
	</select>
	<select id="mms110ukrvServiceImpl.selectAutoInputOutList" parameterType="Map" resultType="rMap">
		SELECT ''                                                                                                                  AS INOUT_NUM
             ,E.RECEIPT_SEQ                                                                                                                  AS INOUT_SEQ
             , '1'                                                                                                                 AS INOUT_METH
             ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             	   ELSE   (SELECT MIN(SUB_CODE)
				              FROM BSA100T
				             WHERE COMP_CODE = A.COMP_CODE
				               AND MAIN_CODE = N'M103'
				               AND SUB_CODE <![CDATA[<>]]> N'$')
			   END	                     												     AS INOUT_TYPE_DETAIL
             , B.ITEM_CODE
             , D.ITEM_ACCOUNT
             , C.SPEC
             , B.ORDER_UNIT
             , ISNULL(E.RECEIPT_Q,0)                                                                                           AS ORDER_UNIT_Q
             , '1'                                                                                                                 AS ITEM_STATUS
             , 0                                                                                                                   AS ORIGINAL_Q
             , 0                                                                                                                   AS GOOD_STOCK_Q
             , 0                                                                                                                   AS BAD_STOCK_Q
             , ISNULL(E.RECEIPT_Q,0)                                                                  AS NOINOUT_Q
             , B.UNIT_PRICE_TYPE                                                                                                   AS PRICE_YN
             , A.MONEY_UNIT
             , B.ORDER_UNIT_P / ISNULL(B.TRNS_RATE,1) AS INOUT_FOR_P
             , B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0)                                                                        AS INOUT_FOR_O
             , B.ORDER_UNIT_P                                                                                                      AS ORDER_UNIT_FOR_P
             , B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0)                                                                        AS ORDER_UNIT_FOR_O
             , 'Y'                                                                                                                 AS ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , (B.ORDER_UNIT_P * A.EXCHG_RATE_O) / ISNULL(B.TRNS_RATE,1) AS INOUT_P
             , (B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0) * A.EXCHG_RATE_O)                                                       AS INOUT_I
             , (B.ORDER_UNIT_P * 1)                                                                                                AS ORDER_UNIT_P
             , (B.ORDER_UNIT_P * ISNULL(E.RECEIPT_Q,0) * A.EXCHG_RATE_O)                                                       AS ORDER_UNIT_I
             , C.STOCK_UNIT
             , ISNULL(B.TRNS_RATE,1)                                                                                               AS TRNS_RATE
             , ISNULL(E.RECEIPT_Q,0)                                                                  				 AS INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , ''                                                                                                                  AS BL_NUM
             , B.ORDER_NUM
             , B.ORDER_SEQ
             , B.ORDER_Q
             , '5'                                                                                                                 AS INOUT_CODE_TYPE
             , B.WH_CODE	                                                            AS WH_CODE
             , E.RECEIPT_DATE                                                                                                       AS INOUT_DATE
             , ''                                                                                                                  AS INOUT_PRSN
             , 0                                                                                                                   AS ACCOUNT_Q
             , '2'                                                                                                                 AS CREATE_LOC
             , ''                                                                                                                  AS SALE_C_DATE
             , E.REMARK
             , E.PROJECT_NO
             , E.LOT_NO                                                                                                       AS LOT_NO
             , '1'                                                                                                                 AS INOUT_TYPE
             , A.CUSTOM_CODE                                                                                                       AS INOUT_CODE
              , B.IN_DIV_CODE AS DIV_CODE
             , ''                                                                                                                  AS COMPANY_NUM
             , ISNULL(B.INSTOCK_Q,0)                                                                                               AS INSTOCK_Q
             , '*'                                                                                                                 AS SALE_DIV_CODE
             , '*'                                                                                                                 AS SALE_CUSTOM_CODE
             , '*'                                                                                                                 AS BILL_TYPE
             , '*'                                                                                                                 AS SALE_TYPE
             ,#{USER_ID}                                                                                            AS UPDATE_DB_USER
             ,GETDATE()                                                                                                       AS UPDATE_DB_TIME
             , D.EXCESS_RATE
             , A.COMP_CODE AS S_COMP_CODE
             , E.MAKE_LOT_NO
             , E.MAKE_DATE
             , E.MAKE_EXP_DATE
             , E.RECEIPT_NUM
             , E.RECEIPT_SEQ
             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
             , E.RECEIPT_NUM AS INSPEC_NUM
             , E.RECEIPT_SEQ AS INSPEC_SEQ
          FROM            MPO100T A WITH (NOLOCK)
               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                 AND A.DIV_CODE  = B.DIV_CODE
                                                 AND A.ORDER_NUM = B.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                 AND B.ITEM_CODE = C.ITEM_CODE
               INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                 AND B.IN_DIV_CODE  = D.DIV_CODE
                                                 AND B.ITEM_CODE = D.ITEM_CODE
               INNER JOIN QMS100T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                 AND B.IN_DIV_CODE  = E.DIV_CODE
                                                 AND B.ORDER_NUM = E.ORDER_NUM
                                                 AND B.ORDER_SEQ = E.ORDER_SEQ
         WHERE A.COMP_CODE                = #{COMP_CODE}
           AND B.IN_DIV_CODE                 = #{DIV_CODE}
           AND A.ORDER_TYPE               = N'4'
           AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
           AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
           AND ISNULL(E.INSPEC_FLAG,ISNULL(B.INSPEC_FLAG, (SELECT ISNULL(INSPEC_YN, 'N')
                                        FROM BPR200T
                                       WHERE COMP_CODE = B.COMP_CODE
                                         AND DIV_CODE  = B.IN_DIV_CODE
                                         AND ITEM_CODE = B.ITEM_CODE))) = N'N'
           AND E.RECEIPT_NUM          =  #{RECEIPT_NUM}
           AND E.RECEIPT_SEQ 			= #{RECEIPT_SEQ}
           AND E.RECEIPT_Q          <![CDATA[>]]> 0
	</select>
	<select id="mms110ukrvServiceImpl.inOutQtyCheck" parameterType="Map" resultType="rMap">
	 	 /*  mms110ukrvServiceImpl.inOutQtyCheck */
	      SELECT INOUT_Q
	      FROM BTR100T
	      WHERE COMP_CODE  = #{S_COMP_CODE}
	       AND DIV_CODE   = #{DIV_CODE}
	       AND RECEIPT_NUM = #{RECEIPT_NUM}
	       <if test="@foren.Ognl@isNotEmpty(RECEIPT_SEQ)">
	       AND RECEIPT_SEQ = #{RECEIPT_SEQ}
	       </if>
	       AND CREATE_LOC = '2'
	</select>
	 <select id="mms110ukrvServiceImpl.getFileList" parameterType="Map" resultType="rMap">
        /* mms110ukrvServiceImpl.getFileList  */
        SELECT    A.FID AS id
                , A.FID AS fid
                , A.ORIGINAL_FILE_NAME AS name
                , B.SIZE as size
                , '6' AS status
         FROM QMS101T A  WITH (NOLOCK)
         INNER JOIN BFL200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.FID = B.FID
        WHERE A.COMP_CODE= #{S_COMP_CODE}
         AND A.DOC_NO = #{DOC_NO}

    </select>
    <insert id="mms110ukrvServiceImpl.insertQMS101" parameterType="Map">
        /* mms110ukrvServiceImpl.insertQMS101 */
      <!--   INSERT INTO QMS101T
            ( COMP_CODE  , DOC_NO  , FID , ORIGINAL_FILE_NAME, INSERT_DB_USER  , INSERT_DB_TIME )
        SELECT  #{S_COMP_CODE} , #{DOC_NO}  , #{FID} , ORIGINAL_FILE_NAME, #{S_USER_ID} , getdate()
          FROM  BFL200T WITH (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND FID = #{FID} -->
            IF EXISTS(SELECT 1
						   FROM QMS101T
						   WHERE COMP_CODE = #{S_COMP_CODE}
						   AND DOC_NO = #{DOC_NO}
						   AND FID =  #{FID} )
				 BEGIN
						UPDATE A SET ORIGINAL_FILE_NAME = B.ORIGINAL_FILE_NAME
							  ,UPDATE_DB_TIME = GETDATE()
							  ,UPDATE_DB_USER = B.INSERT_DB_USER
			            FROM  QMS101T A JOIN BFL200T B ON A.FID = B.FID
						WHERE A.COMP_CODE = #{S_COMP_CODE}
					    AND A.FID = #{FID}

				 END
 			ELSE
			    BEGIN
					  INSERT INTO QMS101T	( COMP_CODE  , DOC_NO  , FID , ORIGINAL_FILE_NAME, INSERT_DB_USER  , INSERT_DB_TIME )
			          SELECT  #{S_COMP_CODE} , #{DOC_NO}  , #{FID} , ORIGINAL_FILE_NAME, #{S_USER_ID} , GETDATE()
			          FROM  BFL200T WITH (NOLOCK)
			          WHERE COMP_CODE = #{S_COMP_CODE}
			          AND FID = #{FID}
			    END

    </insert>
    <update id="mms110ukrvServiceImpl.deleteQMS101" parameterType="Map">
        /* mms110ukrvServiceImpl.deleteQMS101 */
        DELETE FROM  QMS101T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND FID = #{FID}
    </update>

    <select id="mms110ukrvServiceImpl.mainReport" parameterType="Map" resultType="rMap">
		/*mms110ukrvServiceImpl.mainReport*/

		SELECT  A.COMP_CODE
				  , A.DIV_CODE
				  , A.RECEIPT_NUM
				  , A.RECEIPT_SEQ
				  , A.RECEIPT_DATE	--검사일자

				  , A.ITEM_CODE		--자재코드
				  , D.ITEM_NAME		--품명
				  , D.SPEC			--규격
				  , A.CUSTOM_CODE
				  , C.CUSTOM_NAME	--수신 ,공급처
				  , C.TELEPHON		--연락처

				  , A.INSPEC_Q		--납품수량
				  , A.RECEIPT_Q *  B2.TRNS_RATE AS RECEIPT_Q	--접수수량 * 구매입수

				  , R1.CODE_NAME AS INSPEC_PRSN_NAME			--검사자명

				  , A.ORDER_NUM		--발주번호
				  , A.ORDER_SEQ


				  , ( A.RECEIPT_NUM +  RIGHT('00000'+CONVERT(NVARCHAR(5),A.RECEIPT_SEQ),5))	 AS NOSEQ

				  , A.LOT_NO
				  , A.MAKE_LOT_NO
		  		  , A.MAKE_DATE
		  		  , A.MAKE_EXP_DATE
		  		  , E.RECEIPT_DATE
		  		  , D.ITEM_LEVEL1
		  		  , D2.ITEM_ACCOUNT
		  		  , CASE WHEN D.STOCK_UNIT = 'EA' THEN 'EA'
						 ELSE LOWER(D.STOCK_UNIT)
					END										AS  STOCK_UNIT
		  		  , B2.TRNS_RATE
		  		  , D3.REF_CODE3 AS STD_ITEM_ACCOUNT
		  		  , A.RECEIPT_Q AS ORDER_RECEIPT_Q
			  	  , A.ORDER_UNIT
			  	  , CASE WHEN D3.REF_CODE3 = '40' THEN 'Q10' + '-' + SUBSTRING(E.RECEIPT_NUM,6,6)
															 + '-' + SUBSTRING(E.RECEIPT_NUM,12,3)
															 + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
															 +  convert(nvarchar(5),A.RECEIPT_SEQ)
												  ELSE 'Q20' + '-' + SUBSTRING(E.RECEIPT_NUM,6,6)
															 + '-' + SUBSTRING(E.RECEIPT_NUM,12,3)
															 + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
															 +  convert(nvarchar(5),A.RECEIPT_SEQ)
					END AS RECEIPT_NUM2
				  , CASE WHEN ISNULL(A.MAKE_DATE,'') = '' THEN A.MAKE_EXP_DATE ELSE A.MAKE_DATE END AS RECEIPT_DATE2
				  , B1.ORDER_TYPE
				  , CONVERT(VARCHAR(8), DATEADD(DD, 7,CAST(A.RECEIPT_DATE AS datetime)), 112) AS REQUEST_DATE
				  , '' AS BL_NO
				  , B1.ORDER_NUM                  AS PO_NUM
				  , B2.ORDER_SEQ                  AS PO_SEQ
				  , F.INSPEC_DATE
				  , D4.CODE_NAME				  AS END_DECISION
				  FROM QMS100T A WITH(NOLOCK)

				INNER JOIN MPO200T B2 WITH(NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
									  AND B2.IN_DIV_CODE = A.DIV_CODE
									  AND B2.ORDER_NUM = A.ORDER_NUM
									  AND B2.ORDER_SEQ = A.ORDER_SEQ
				INNER JOIN MPO100T B1 WITH(NOLOCK) ON B1.COMP_CODE = B2.COMP_CODE
									  AND B1.DIV_CODE = B2.DIV_CODE
									  AND B1.ORDER_NUM = B2.ORDER_NUM
				  LEFT JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
												  AND C.CUSTOM_CODE = A.CUSTOM_CODE
				  LEFT JOIN BPR100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
												  AND D.ITEM_CODE = A.ITEM_CODE
				  LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												   AND R1.MAIN_CODE = 'Q021'
												   AND R1.SUB_CODE = A.RECEIPT_PRSN

				   LEFT JOIN QMS100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
												   AND A.DIV_CODE = E.DIV_CODE
												   AND A.RECEIPT_NUM = E.RECEIPT_NUM
												   AND A.RECEIPT_SEQ = E.RECEIPT_SEQ
				  LEFT JOIN QMS200T F WITH(NOLOCK)  ON F.COMP_CODE   = E.COMP_CODE
												   AND F.DIV_CODE    = E.DIV_CODE
												   AND F.RECEIPT_NUM = E.RECEIPT_NUM
												   AND F.RECEIPT_SEQ = E.RECEIPT_SEQ
				  LEFT JOIN BPR200T D2 WITH(NOLOCK) ON A.COMP_CODE = D2.COMP_CODE
												   AND A.DIV_CODE   = D2.DIV_CODE
												   AND A.ITEM_CODE = D2.ITEM_CODE
				  LEFT JOIN BSA100T D3 WITH (NOLOCK) ON D3.COMP_CODE = D2.COMP_CODE
													AND D3.MAIN_CODE = 'B020'
													AND D3.SUB_CODE  != '$'
													AND D3.SUB_CODE = D2.ITEM_ACCOUNT
				  LEFT JOIN BSA100T D4 WITH(NOLOCK)  ON D4.COMP_CODE = D3.COMP_CODE
				                                    AND D4.MAIN_CODE = 'Q033'
													AND D4.SUB_CODE  = F.END_DECISION
				  WHERE A.COMP_CODE = #{S_COMP_CODE}
				  AND A.DIV_CODE = #{DIV_CODE}

				AND
				<foreach collection="RECEIPT_NUMS" item="item" separator="OR" close=")" open="(">
				   ( A.RECEIPT_NUM + CONVERT(VARCHAR(3),A.RECEIPT_SEQ) = '${item.RECEIPT_NUM}')
				</foreach>

				UNION ALL
				/*수입참조 데이터 가져오기*/
				SELECT  A.COMP_CODE
				  , A.DIV_CODE
				  , A.RECEIPT_NUM
				  , A.RECEIPT_SEQ
				  , A.RECEIPT_DATE	--검사일자

				  , A.ITEM_CODE		--자재코드
				  , D.ITEM_NAME		--품명
				  , D.SPEC			--규격
				  , A.CUSTOM_CODE
				  , C.CUSTOM_NAME	--수신 ,공급처
				  , C.TELEPHON		--연락처

				  , A.INSPEC_Q		--납품수량
				  , A.RECEIPT_Q *  B2.TRNS_RATE AS RECEIPT_Q	--접수수량 * 구매입수

				  , R1.CODE_NAME AS INSPEC_PRSN_NAME			--검사자명

				  , A.ORDER_NUM		--발주번호
				  , A.ORDER_SEQ


				  , ( A.RECEIPT_NUM +  RIGHT('00000'+CONVERT(NVARCHAR(5),A.RECEIPT_SEQ),5)) AS NOSEQ

				  , A.LOT_NO
				  , A.MAKE_LOT_NO
		  		  , A.MAKE_DATE
		  		  , A.MAKE_EXP_DATE
		  		  , E.RECEIPT_DATE
		  		  , D.ITEM_LEVEL1
		  		  , D2.ITEM_ACCOUNT
		  		  , CASE WHEN D.STOCK_UNIT = 'EA' THEN 'EA'
						 ELSE LOWER(D.STOCK_UNIT)
					END										AS  STOCK_UNIT
		  		  , B2.TRNS_RATE
		  		  , D3.REF_CODE3 AS STD_ITEM_ACCOUNT
		  		  , A.RECEIPT_Q AS ORDER_RECEIPT_Q
			  	  , A.ORDER_UNIT
			  	  , CASE WHEN D3.REF_CODE3 = '40' THEN 'Q10' + '-' + SUBSTRING(E.RECEIPT_NUM,6,6)
															 + '-' + SUBSTRING(E.RECEIPT_NUM,12,3)
															 + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
															 +  convert(nvarchar(5),A.RECEIPT_SEQ)
												  ELSE 'Q20' + '-' + SUBSTRING(E.RECEIPT_NUM,6,6)
															 + '-' + SUBSTRING(E.RECEIPT_NUM,12,3)
															 + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
															 +  convert(nvarchar(5),A.RECEIPT_SEQ)
					END AS RECEIPT_NUM2
				  , CASE WHEN ISNULL(A.MAKE_DATE,'') = '' THEN A.MAKE_EXP_DATE ELSE A.MAKE_DATE END AS RECEIPT_DATE2
				  , '5' AS ORDER_TYPE
				  , CONVERT(VARCHAR(8), DATEADD(DD, 7,CAST(A.RECEIPT_DATE AS datetime)), 112) AS REQUEST_DATE
				  , B3.BL_NO
				  , ISNULL(B4.ORDER_NUM, B2.SO_SER_NO)                  AS PO_NUM
				  , ISNULL(B4.ORDER_SEQ, B2.SO_SER)                     AS PO_SEQ
				  , F.INSPEC_DATE
				  , D4.CODE_NAME 										AS END_DECISION
				  FROM QMS100T A WITH(NOLOCK)

				INNER JOIN TIA110T B2 WITH(NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
									  AND B2.DIV_CODE = A.DIV_CODE
									  AND B2.SO_SER_NO = A.ORDER_NUM
									  AND B2.SO_SER = A.ORDER_SEQ
				INNER JOIN TIA100T B1 WITH(NOLOCK) ON B1.COMP_CODE = B2.COMP_CODE
									  AND B1.DIV_CODE = B2.DIV_CODE
									  AND B1.SO_SER_NO = B2.SO_SER_NO
				INNER JOIN TIC100T B3 WITH(NOLOCK) ON B1.COMP_CODE = B3.COMP_CODE
									  AND B1.DIV_CODE = B3.DIV_CODE
									  AND B1.SO_SER_NO = B3.SO_SER_NO
				LEFT JOIN MPO200T B4 WITH(NOLOCK) ON B2.COMP_CODE = B4.COMP_CODE
									  AND B2.DIV_CODE = B4.DIV_CODE
									  AND B2.ORDER_NUM = B4.ORDER_NUM
									  AND B2.ORDER_SEQ = B4.ORDER_SEQ
				  LEFT JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
												  AND C.CUSTOM_CODE = A.CUSTOM_CODE
				  LEFT JOIN BPR100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
												  AND D.ITEM_CODE = A.ITEM_CODE
				  LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												   AND R1.MAIN_CODE = 'Q021'
												   AND R1.SUB_CODE = A.RECEIPT_PRSN

				   LEFT JOIN QMS100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
												   AND A.DIV_CODE = E.DIV_CODE
												   AND A.RECEIPT_NUM = E.RECEIPT_NUM
												   AND A.RECEIPT_SEQ = E.RECEIPT_SEQ
				  LEFT JOIN QMS200T F WITH(NOLOCK)  ON F.COMP_CODE   = E.COMP_CODE
												   AND F.DIV_CODE    = E.DIV_CODE
												   AND F.RECEIPT_NUM = E.RECEIPT_NUM
												   AND F.RECEIPT_SEQ = E.RECEIPT_SEQ
				  LEFT JOIN BPR200T D2 WITH(NOLOCK) ON A.COMP_CODE = D2.COMP_CODE
												   AND A.DIV_CODE   = D2.DIV_CODE
												   AND A.ITEM_CODE = D2.ITEM_CODE
				  LEFT JOIN BSA100T D3 WITH (NOLOCK) ON D3.COMP_CODE = D2.COMP_CODE
													AND D3.MAIN_CODE = 'B020'
													AND D3.SUB_CODE  != '$'
													AND D3.SUB_CODE = D2.ITEM_ACCOUNT
				 LEFT JOIN BSA100T D4 WITH(NOLOCK)   ON D4.COMP_CODE = D3.COMP_CODE
				                                    AND D4.MAIN_CODE = 'Q033'
													AND D4.SUB_CODE  = F.END_DECISION
				  WHERE A.COMP_CODE = #{S_COMP_CODE}
				  AND A.DIV_CODE = #{DIV_CODE}
				  AND
				<foreach collection="RECEIPT_NUMS" item="item" separator="OR" close=")" open="(">
				   ( A.RECEIPT_NUM + CONVERT(VARCHAR(3),A.RECEIPT_SEQ) = '${item.RECEIPT_NUM}')
				</foreach>
		  ORDER BY NOSEQ
	</select>
	<select id="mms110ukrvServiceImpl.subReport" parameterType="Map" resultType="rMap">
      	 	SELECT A.ITEM_CODE
					         ,B.TEST_CODE
							 ,C.TEST_NAME
							 ,C.TEST_COND
							 , CASE WHEN ((ISNULL(C.TEST_COND_FROM, 0) != 0 OR ISNULL(C.TEST_COND_TO, 0) != 0)
								  AND (ISNULL(C.TEST_COND_FROM, 0) <![CDATA[>]]> 0 OR ISNULL(C.TEST_COND_TO, 0)  <![CDATA[< ]]> 0)) THEN '부적합'
								  ELSE C.TEST_RESULT
						       END					AS SPEC
							, A.ITEM_ACCOUNT
							, C.TEST_PRSN
					   FROM BPR200T A WITH (NOLOCK)
					   LEFT JOIN QBA210T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														AND A.DIV_CODE  = B.DIV_CODE
														AND A.ITEM_CODE = B.ITEM_CODE

                       LEFT JOIN QBA100T C WITH (NOLOCK) ON C.COMP_CODE = B.COMP_CODE
														AND C.DIV_CODE  = B.DIV_CODE
														AND C.TEST_CODE = B.TEST_CODE
					   WHERE A.COMP_CODE  = #{S_COMP_CODE}
					   AND A.DIV_CODE     = #{DIV_CODE}
					  AND
					  <foreach collection="SEL_ITEM_CODE" item="item" separator="OR" close=")" open="(">
					  	 (A.ITEM_CODE = '${item.ITEM_CODES}')
					 </foreach>
					   ORDER BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE


	</select>

	<select id="mms110ukrvServiceImpl.selectLabelPrintList" parameterType="Map" resultType="rMap">
		/* mms110ukrvServiceImpl.selectLabelPrintList, 20210616 수정: PRINT_QTY: 0 -> 1 */
		SELECT ROW_NUMBER() OVER( ORDER BY A.PACK_QTY DESC) AS SEQ
			  ,A.PACK_QTY
			  ,A.PRINT_QTY
		FROM
			(SELECT 0 AS PACK_QTY
				  , 1 AS PRINT_QTY

			 UNION ALL

			 SELECT 0 AS PACK_QTY
				  , 1 AS PRINT_QTY

			 UNION ALL

			 SELECT 0 AS PACK_QTY
				  , 1 AS PRINT_QTY

			 UNION ALL

			 SELECT 0 AS PACK_QTY
				  , 1 AS PRINT_QTY

			 UNION ALL

			 SELECT 0 AS PACK_QTY
				  , 1 AS PRINT_QTY ) A
	</select>

	<select id="mms110ukrvServiceImpl.partitionPrintList" parameterType="Map" resultType="rMap">
		/* mms110ukrvServiceImpl.partitionPrintList */
		CREATE TABLE #TEMP_TABLE
		(
		        RECEIPT_NUM           NVARCHAR(100)     NOT NULL
		    ,   RECEIPT_SEQ           NUMERIC(38) NOT NULL
		    ,   PACK_QTY              NUMERIC(38) NOT NULL
		    ,   PRINT_QTY             NUMERIC(38) NOT NULL
		)

		DECLARE @I      INT
		      , @MAXNO  INT

		<foreach collection="PRINT_DATA" item="item" separator="" close="" open="">
		SET @I     = 1
		SET @MAXNO = ${item.PRINT_QTY}

		WHILE @I &lt;= @MAXNO
		    BEGIN
		        INSERT INTO #TEMP_TABLE (
		               RECEIPT_NUM
		             , RECEIPT_SEQ
		             , PACK_QTY
		             , PRINT_QTY
		        )VALUES(
		               #{LABEL_RECEIPT_NUM}
		             , #{LABEL_RECEIPT_SEQ}
		             , ${item.PACK_QTY}
		             , ${item.PRINT_QTY}
		        )
		        SET @I = @I + 1
		    END
		</foreach>

		SELECT A.ITEM_CODE                  -- 자재코드
		     , B.ITEM_NAME                  -- 자재명칭
		     , A.LOT_NO                     -- LOT_NO
		     , SUBSTRING(A.RECEIPT_DATE,1,4) + REPLICATE('0', 3 - len(convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.RECEIPT_DATE)))) + convert(varchar,uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.RECEIPT_DATE)) AS RECEIPT_DATE1 --입고주차
		     , TP.PACK_QTY                  AS RECEIPT_Q      -- 입고량
		     , TP.PACK_QTY                  AS PACK_QTY       -- 20210616 추가: (극동) 제품일 경우 PACK_QTY를 출력(입고량)
		     , A.MAKE_EXP_DATE              --사용기한
		     , A.RECEIPT_DATE               AS RECEIPT_DATE2  --입고일자
		     , A.MAKE_LOT_NO                --업체LOT
		     , C.CUSTOM_NAME                --업체명
		     , B.LOCATION                   --위치
		     , B.ITEM_ACCOUNT
		     , MP.TRNS_RATE
		     , B1.STOCK_UNIT
		     , A.RECEIPT_NUM
		     , A.RECEIPT_SEQ
		     , A.MAKE_DATE
		     , R1.CODE_NAME                 AS INSPEC_PRSN_NAME  --검사자명
		     , TP.PACK_QTY                  AS RECEIPT_ORDER_Q
		     , A.ORDER_UNIT
		     , CASE WHEN D3.REF_CODE3 = '40' THEN 'Q10' + '-' + SUBSTRING(A.RECEIPT_NUM,6,6)
		                                                + '-' + SUBSTRING(A.RECEIPT_NUM,12,3)
		                                                + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
		                                                +  convert(nvarchar(5),A.RECEIPT_SEQ)
		            ELSE 'Q20' + '-' + SUBSTRING(A.RECEIPT_NUM,6,6)
		                       + '-' + SUBSTRING(A.RECEIPT_NUM,12,3)
		                       + '-' + REPLICATE('0', 2 - LEN(convert(nvarchar(5),A.RECEIPT_SEQ)))
		                       +  convert(nvarchar(5),A.RECEIPT_SEQ)
		       END AS RECEIPT_NUM2
		     , CASE WHEN ISNULL(A.MAKE_DATE,'') = '' THEN A.MAKE_EXP_DATE ELSE A.MAKE_DATE END AS RECEIPT_DATE2
		     , B1.SPEC
		     , A.RECEIPT_Q * MP.TRNS_RATE          AS ALL_RECEIPT_Q
		  FROM       QMS100T A  WITH(NOLOCK)
		  INNER JOIN BPR200T B  WITH(NOLOCK) ON A.COMP_CODE    = B.COMP_CODE
		                                    AND A.DIV_CODE     = B.DIV_CODE
		                                    AND A.ITEM_CODE    = B.ITEM_CODE
		  INNER JOIN BPR100T B1 WITH(NOLOCK) ON A.COMP_CODE    = B1.COMP_CODE
		                                    AND A.ITEM_CODE    = B1.ITEM_CODE
		  INNER JOIN BCM100T C  WITH(NOLOCK) ON A.COMP_CODE    = C.COMP_CODE
		                                    AND A.CUSTOM_CODE  = C.CUSTOM_CODE
		  LEFT  JOIN MPO200T MP WITH(NOLOCK) ON A.COMP_CODE    = MP.COMP_CODE
		                                    AND A.DIV_CODE     = MP.IN_DIV_CODE
		                                    AND A.ORDER_NUM    = MP.ORDER_NUM
		                                    AND A.ORDER_SEQ    = MP.ORDER_SEQ
		  LEFT  JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE   = A.COMP_CODE
		                                    AND R1.MAIN_CODE   = 'Q021'
		                                    AND R1.SUB_CODE    = A.RECEIPT_PRSN
		  LEFT  JOIN BSA100T D3 WITH(NOLOCK) ON D3.COMP_CODE   = A.COMP_CODE
		                                    AND D3.MAIN_CODE   = 'B020'
		                                    AND D3.SUB_CODE   != '$'
		                                    AND D3.SUB_CODE    = B.ITEM_ACCOUNT
		  INNER JOIN #TEMP_TABLE TP          ON TP.RECEIPT_NUM = A.RECEIPT_NUM
		                                    AND TP.RECEIPT_SEQ = A.RECEIPT_SEQ
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		  ORDER BY A.RECEIPT_NUM, A.RECEIPT_SEQ

		DROP TABLE   #TEMP_TABLE
	</select>

<!-- 최우선적으로 출력할 레포트 파일 정보 읽어오는 로직 추가(B706): 20210616 추가 -->
	<select id="mms110ukrvServiceImpl.getReportFileInfo" parameterType="Map" resultType="string">
		/* mms110ukrvServiceImpl.getReportFileInfo */
		SELECT CASE WHEN ISNULL(REF_CODE3, '') = '' THEN ''
		            ELSE CASE WHEN ISNULL(REF_CODE2, '') = '' THEN 'SALES' + '/' + REF_CODE3
		                      ELSE ISNULL(REF_CODE2, '') + '/' + REF_CODE3
		                 END
		            END
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B706'
		   AND SUB_CODE  = #{GUBUN}
	</select>
</mapper>