<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms230skrvServiceImpl">
	<select id="mms230skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* mms230skrv.Cmms230skrv[fnqms200q]Query01 */
		/*  수입검사현황 조회 쿼리  */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode      NVARCHAR(08)    /* 법인코드                */
		          , @UserId        NVARCHAR(100)   /* 사용자ID                */
		          , @RefItem       NVARCHAR(01)    /* 명칭 참조 유형        */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , A.INSPEC_NUM
		         , A.INSPEC_SEQ
		         , A.INSPEC_DATE
		         , A.ITEM_CODE
		         , CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                ELSE                     C.ITEM_NAME
		           END                                                                                            AS ITEM_NAME
		         , C.SPEC
		         , A.CUSTOM_CODE
		         , CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
		                ELSE                     D.CUSTOM_NAME
		           END                                                                                            AS CUSTOM_NAME
		         , A.INSTOCK_Q
		         , A.RECEIPT_Q
		         /* 검사방식 : NULL 인경우 지정할 디폴트 값은 개발 후 확인 필요. */
		         , SUM(CASE WHEN ISNULL(A.INSPEC_TYPE, '01') = '01' THEN ISNULL(A.INSPEC_Q, 0) ELSE 0 END)        AS INSPEC_Q_01
		         , SUM(CASE WHEN ISNULL(A.INSPEC_TYPE, '01') = '02' THEN ISNULL(A.INSPEC_Q, 0) ELSE 0 END)        AS INSPEC_Q_02
		         , SUM(CASE WHEN ISNULL(A.INSPEC_TYPE, '01') = '03' THEN ISNULL(A.INSPEC_Q, 0) ELSE 0 END)        AS INSPEC_Q_03
		         , A.INSPEC_Q
		         , A.GOOD_INSPEC_Q - A.INSTOCK_Q                                                                  AS REMAIN_INSTOCK_Q
		         , A.BAD_INSPEC_Q
		         , A.BAD_INSPEC_Q * 100.00 / CASE WHEN ISNULL(A.INSPEC_Q, 0) = 0 THEN 1 ELSE A.INSPEC_Q END       AS BAD_INSPEC_RATE
		         /* 불량유형 : NULL 인경우 지정할 디폴트 값은 개발 후 확인 필요. */
		         , SUM(CASE WHEN ISNULL(E1.REF_CODE2, 'A') = 'A' THEN ISNULL(B.BAD_INSPEC_Q, 0) ELSE 0 END)       AS BAD_INSPEC_Q_1
		         , SUM(CASE WHEN ISNULL(E1.REF_CODE2, 'A') = 'B' THEN ISNULL(B.BAD_INSPEC_Q, 0) ELSE 0 END)       AS BAD_INSPEC_Q_2
		         , SUM(CASE WHEN ISNULL(E1.REF_CODE2, 'A') = 'C' THEN ISNULL(B.BAD_INSPEC_Q, 0) ELSE 0 END)       AS BAD_INSPEC_Q_3
		         , STUFF((    SELECT ', ' + Y.CODE_NAME
		                      FROM            QMS210T X WITH(NOLOCK)
		                      LEFT OUTER JOIN BSA100T Y WITH(NOLOCK) ON Y.COMP_CODE    = X.COMP_CODE
		                                                            AND Y.SUB_CODE     = X.BAD_INSPEC_CODE
		                                                            AND Y.MAIN_CODE    = CASE WHEN A.ORDER_TYPE = '4' THEN 'Q012' ELSE 'Q011' END
		                     WHERE X.COMP_CODE   = B.COMP_CODE
		                       AND X.DIV_CODE    = B.DIV_CODE
		                       AND X.INSPEC_NUM  = B.INSPEC_NUM
		                       AND X.INSPEC_SEQ  = B.INSPEC_SEQ
		                       FOR XML PATH('')
		                 ), 1, 2, '')                                                                             AS BAD_INSPEC_NAME_LIST
		         , A.REMARK
		         , A.INSPEC_PRSN
		         , E2.CODE_NAME                                                                                   AS INSPEC_PRSN_NAME
		         , A.ORDER_TYPE
		         , E3.CODE_NAME                                                                                   AS ORDER_TYPE_NAME
		         , A.RECEIPT_NUM
		         , A.RECEIPT_SEQ
		         , A.ORDER_NUM
		         , A.ORDER_SEQ
		      FROM            QMS200T A  WITH(NOLOCK)
		      LEFT OUTER JOIN QMS210T B  WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                             AND B.DIV_CODE    = A.DIV_CODE
		                                             AND B.INSPEC_NUM  = A.INSPEC_NUM
		                                             AND B.INSPEC_SEQ  = A.INSPEC_SEQ
		      LEFT OUTER JOIN BPR100T C  WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                             AND C.ITEM_CODE   = A.ITEM_CODE
		      LEFT OUTER JOIN BCM100T D  WITH(NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                             AND D.CUSTOM_CODE = A.CUSTOM_CODE
		      LEFT OUTER JOIN BSA100T E1 WITH(NOLOCK) ON E1.COMP_CODE  = B.COMP_CODE
		                                             AND E1.SUB_CODE   = B.BAD_INSPEC_CODE
		                                             AND E1.MAIN_CODE  = CASE WHEN A.ORDER_TYPE = '4' THEN 'Q012' ELSE 'Q011' END
		      LEFT OUTER JOIN BSA100T E2 WITH(NOLOCK) ON E2.COMP_CODE  = A.COMP_CODE
		                                             AND E2.SUB_CODE   = A.INSPEC_PRSN
		                                             AND E2.MAIN_CODE  = 'Q022'
		      LEFT OUTER JOIN BSA100T E3 WITH(NOLOCK) ON E3.COMP_CODE  = A.COMP_CODE
		                                             AND E3.SUB_CODE   = A.ORDER_TYPE
		                                             AND E3.MAIN_CODE  = 'M001'
		     WHERE A.COMP_CODE       = #{S_COMP_CODE}
		       AND A.DIV_CODE        = #{DIV_CODE}
		       AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
		       AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
		<if test="ORDER_TYPE == &quot;A&quot;">
		       AND A.ORDER_TYPE     != '4'
		</if>
		<if test="ORDER_TYPE != &quot;A&quot;">
		       AND A.ORDER_TYPE      = '4'
		</if>
		<if test="@foren.Ognl@isNotEmpty(INSPEC_PRSN)">
		       AND A.INSPEC_PRSN     = #{INSPEC_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE       = #{ITEM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE       LIKE #{ITEM_CODE} +'%'
		</if>
		<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                ELSE                     C.ITEM_NAME
		           END LIKE '%' + #{ITEM_NAME} +'%' 
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND A.CUSTOM_CODE     = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		       AND A.CUSTOM_CODE     LIKE #{CUSTOM_CODE} +'%'
		</if>
		<if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
		                ELSE                     D.CUSTOM_NAME
		           END LIKE '%' + #{CUSTOM_NAME} +'%' 
		</if>
		     GROUP BY A.COMP_CODE
		            , A.DIV_CODE
		            , A.INSPEC_NUM
		            , A.INSPEC_SEQ
		            , A.INSPEC_DATE
		            , A.ITEM_CODE
		            , CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                   WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                   ELSE                     C.ITEM_NAME
		              END
		            , C.SPEC
		            , A.CUSTOM_CODE
		            , CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
		                   WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
		                   ELSE                     D.CUSTOM_NAME
		              END
		            , A.INSTOCK_Q
		            , A.RECEIPT_Q
		            , A.INSPEC_Q
		            , A.GOOD_INSPEC_Q
		            , A.BAD_INSPEC_Q
		            , A.REMARK
		            , A.INSPEC_PRSN
		            , E2.CODE_NAME
		            , A.ORDER_TYPE
		            , E3.CODE_NAME
		            , A.RECEIPT_NUM
		            , A.RECEIPT_SEQ
		            , A.ORDER_NUM
		            , A.ORDER_SEQ
		            , B.COMP_CODE
		            , B.DIV_CODE
		            , B.INSPEC_NUM
		            , B.INSPEC_SEQ
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</select>


<!-- 동적 그리드 구현(공통코드(Q005)에서 컬럼 가져오는 로직) -->
	<select id="mms230skrvServiceImpl.selectQ005" parameterType="Map" resultType="rMap">
		/* mms230skrvServiceImpl.selectQ005 */
		SELECT A.SUB_CODE
		     , A.CODE_NAME
		  FROM BSA100T A WITH(NOLOCK)
		 WHERE COMP_CODE  = '${compCode}'
		   AND MAIN_CODE  = 'Q005'
		   AND SUB_CODE  != '$'
		   AND USE_YN     = 'Y'
		 ORDER BY A.SORT_SEQ, A.SUB_CODE
	</select>
<!-- 동적 그리드 구현(공통코드(Q011)에서 컬럼 가져오는 로직) -->
	<select id="mms230skrvServiceImpl.selectQ014" parameterType="Map" resultType="rMap">
		/* mms230skrvServiceImpl.selectQ014 */
		SELECT A.SUB_CODE
		     , A.CODE_NAME
		  FROM BSA100T A WITH(NOLOCK)
		 WHERE COMP_CODE  = '${compCode}'
		   AND MAIN_CODE  = 'Q014'
		   AND SUB_CODE  != '$'
		   AND USE_YN     = 'Y'
		 ORDER BY A.SORT_SEQ, A.SUB_CODE
	</select>
</mapper>