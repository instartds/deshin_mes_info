<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms200skrvServiceImpl">

	<select id="mms200skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* mms200skrv.Cmms200skrv[fnqms200q]Query01 */
BEGIN
	SET NOCOUNT ON
	SET ARITHABORT ON

    SELECT  A.ORDER_TYPE AS ORDER_TYPE										/* 발주유형	*/
          , uniLITE.fnGetUserDate(A.COMP_CODE,A.INSPEC_DATE) AS INSPEC_DATE	/* 검사일	*/
          , A.INSPEC_NUM													/* 검사번호	*/
          , A.INSPEC_SEQ													/* 검사순번 */
          , A.CUSTOM_CODE													/* 거래처	*/
          , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID},A.CUSTOM_CODE) AS CUSTOM_NAME												/* 거래처명	*/
          , A.ITEM_CODE														/* 품목코드	*/
          , uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},A.ITEM_CODE) AS ITEM_NAME												/* 품명		*/
          , ISNULL(B.SPEC,'') AS SPEC										/* 규격		*/
          , A.INSPEC_TYPE													/* 검사유형	*/
          , ISNULL(A.INSPEC_Q,0)      AS INSPEC_Q							/* 검사수량	*/
          , ISNULL(A.GOOD_INSPEC_Q,0) AS GOOD_INSPEC_Q						/* 양품수량	*/
          , ISNULL(A.BAD_INSPEC_Q,0)  AS BAD_INSPEC_Q						/* 불량수량	*/
          , (ISNULL(A.BAD_INSPEC_Q,0) / A.INSPEC_Q) * 100 AS BAD_RATE		/* 불량률	*/
          , ISNULL(A.BAD_INSPEC_Q,0) * C.ORDER_UNIT_Q     AS BAD_AMT		/* 불량금액 */
          , A.GOODBAD_TYPE													/* 합격여부	*/
          , A.END_DECISION													/* 최종판정	*/
          , A.REMARK														/* 비고		*/
          , A.PROJECT_NO													/* 관리번호	*/
          , A.LOT_NO														/* Lot No	*/
		  ,D.RECEIPT_DATE
		  ,C.SO_NUM															/* 수주번호	*/
		  ,C.SO_SEQ															/* 수주순번	*/
		  ,C.ORDER_NUM														/* 발주번호	*/
		  ,C.ORDER_SEQ														/* 발주순번	*/
		  
		  ,E.BAD_INSPEC_CODE1 AS BAD_CODE1
		  ,E.BAD_INSPEC_CODE2 AS BAD_CODE2
		  ,E.BAD_INSPEC_CODE3 AS BAD_CODE3
		  ,ISNULL(R1.CODE_NAME,'') AS BAD_NAME1
		  ,ISNULL(R2.CODE_NAME,'') AS BAD_NAME2
		  ,ISNULL(R3.CODE_NAME,'') AS BAD_NAME3
		  ,E.BAD_INSPEC_Q1 AS BAD_Q1
		  ,E.BAD_INSPEC_Q2 AS BAD_Q2
		  ,E.BAD_INSPEC_Q3 AS BAD_Q3
		  ,ISNULL(E.INSPEC_REMARK1,'') AS INSPEC_REMARK1
		  ,ISNULL(E.INSPEC_REMARK2,'') AS INSPEC_REMARK2
		  ,ISNULL(E.INSPEC_REMARK3,'') AS INSPEC_REMARK3
		  ,ISNULL(E.MANAGE_REMARK1,'') AS MANAGE_REMARK1
		  ,ISNULL(E.MANAGE_REMARK2,'') AS MANAGE_REMARK2
		  ,ISNULL(E.MANAGE_REMARK3,'') AS MANAGE_REMARK3
		  
	     FROM QMS200T A WITH (NOLOCK)
		 LEFT JOIN  MPO200T C WITH (NOLOCK) ON A.COMP_CODE = C.COMP_CODE
											AND A.DIV_CODE  = C.IN_DIV_CODE
											AND A.ORDER_NUM = C.ORDER_NUM
											AND A.ORDER_SEQ = C.ORDER_SEQ
		 INNER JOIN BPR100T B WITH (NOLOCK) ON  A.COMP_CODE = B.COMP_CODE
											AND A.ITEM_CODE = B.ITEM_CODE
		 LEFT JOIN QMS100T  D WITH (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
											AND D.DIV_CODE = A.DIV_CODE
											AND D.RECEIPT_NUM = A.RECEIPT_NUM
											AND D.RECEIPT_SEQ = A.RECEIPT_SEQ
		 --20190618 조회조건 item_account 추가
		 INNER JOIN BPR200T I WITH (NOLOCK) ON I.COMP_CODE   = A.COMP_CODE
											AND I.DIV_CODE   = A.DIV_CODE
											AND I.ITEM_CODE  = A.ITEM_CODE
	
		LEFT JOIN (
			SELECT 
				T.COMP_CODE
				,T.DIV_CODE
				,T.INSPEC_NUM
				,T.INSPEC_SEQ
				,MAX(T.BAD_INSPEC_CODE1) AS BAD_INSPEC_CODE1
				,MAX(T.BAD_INSPEC_CODE2) AS BAD_INSPEC_CODE2
				,MAX(T.BAD_INSPEC_CODE3) AS BAD_INSPEC_CODE3
				,MAX(T.BAD_INSPEC_Q1) AS BAD_INSPEC_Q1
				,MAX(T.BAD_INSPEC_Q2) AS BAD_INSPEC_Q2
				,MAX(T.BAD_INSPEC_Q3) AS BAD_INSPEC_Q3

				,MAX(T.INSPEC_REMARK1) AS INSPEC_REMARK1
				,MAX(T.INSPEC_REMARK2) AS INSPEC_REMARK2
				,MAX(T.INSPEC_REMARK3) AS INSPEC_REMARK3

				,MAX(T.MANAGE_REMARK1) AS MANAGE_REMARK1
				,MAX(T.MANAGE_REMARK2) AS MANAGE_REMARK2
				,MAX(T.MANAGE_REMARK3) AS MANAGE_REMARK3
			 FROM (
				SELECT COMP_CODE
					,DIV_CODE
					,INSPEC_NUM
					,INSPEC_SEQ
					,CASE WHEN SEQ =1 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE1
					 ,CASE WHEN SEQ =2 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE2
					 ,CASE WHEN SEQ =3 THEN BAD_INSPEC_CODE
						  ELSE NULL
					 END BAD_INSPEC_CODE3

					 ,CASE WHEN SEQ =1 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q1
					 ,CASE WHEN SEQ =2 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q2
					 ,CASE WHEN SEQ =3 THEN BAD_INSPEC_Q
						  ELSE NULL
					 END BAD_INSPEC_Q3

					  ,CASE WHEN SEQ =1 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK1
					 ,CASE WHEN SEQ =2 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK2
					 ,CASE WHEN SEQ =3 THEN INSPEC_REMARK
						  ELSE NULL
					 END INSPEC_REMARK3

					 ,CASE WHEN SEQ =1 THEN MANAGE_REMARK
						  ELSE NULL
					 END MANAGE_REMARK1
					 ,CASE WHEN SEQ =2 THEN MANAGE_REMARK
						  ELSE NULL
					 END MANAGE_REMARK2
					 ,CASE WHEN SEQ =3 THEN MANAGE_REMARK
						  ELSE NULL
					 END MANAGE_REMARK3
					 

					,SEQ
				FROM QMS210T WITH(NOLOCK)
				WHERE SEQ IN (1,2,3)
			GROUP BY COMP_CODE
					,DIV_CODE
					,INSPEC_NUM
					,INSPEC_SEQ
					,BAD_INSPEC_CODE
					,BAD_INSPEC_Q
					,INSPEC_REMARK
					,MANAGE_REMARK
					,SEQ
			) T

			GROUP BY T.COMP_CODE
				,T.DIV_CODE
				,T.INSPEC_NUM
				,T.INSPEC_SEQ
			  
		) E ON E.COMP_CODE = A.COMP_CODE
			AND E.DIV_CODE = A.DIV_CODE
			AND E.INSPEC_NUM = A.INSPEC_NUM
			AND E.INSPEC_SEQ = A.INSPEC_SEQ
		LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = E.COMP_CODE
										 AND R1.MAIN_CODE = (CASE WHEN A.ORDER_TYPE = '4' THEN 'Q012'
																 ELSE 'Q011'
															END)
										 AND R1.SUB_CODE = E.BAD_INSPEC_CODE1
		LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = E.COMP_CODE
										 AND R2.MAIN_CODE = (CASE WHEN A.ORDER_TYPE = '4' THEN 'Q012'
																 ELSE 'Q011'
															END)
										 AND R2.SUB_CODE = E.BAD_INSPEC_CODE2
		LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = E.COMP_CODE
										 AND R3.MAIN_CODE = (CASE WHEN A.ORDER_TYPE = '4' THEN 'Q012'
																 ELSE 'Q011'
															END)
										 AND R3.SUB_CODE = E.BAD_INSPEC_CODE3

		
	WHERE A.COMP_CODE = #{S_COMP_CODE}
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND A.DIV_CODE     = #{DIV_CODE}
	</if>
	<!--2021.08 표준화 작업 Start-->
	/* 품목코드			*/
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		AND A.ITEM_CODE = #{ITEM_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		AND	(uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID},A.CUSTOM_CODE) LIKE N'%' + #{ITEM_NAME} + N'%')
	</if>
	/* 거래처코드		*/
	<if test="@foren.Ognl@isNotEmpty(CUST_CODE) and @foren.Ognl@isNotEmpty(CUST_NAME)">
		AND A.CUSTOM_CODE = #{CUST_CODE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(CUST_CODE) and @foren.Ognl@isEmpty(CUST_NAME)">
		AND A.CUSTOM_CODE LIKE #{CUST_CODE} + '%'
	</if>
	<if test="@foren.Ognl@isEmpty(CUST_CODE) and @foren.Ognl@isNotEmpty(CUST_NAME)">
		AND	(uniLITE.fnItemNameComp(#{S_COMP_CODE},#{S_USER_ID},A.ITEM_CODE)  LIKE N'%' + #{CUST_NAME} + N'%')
	</if>
	<!--2021.08 표준화 작업 End-->
	<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
		/* 검사일(FR)	*/
		AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
	</if>
	<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
		/* 검사일(TO)	*/
		AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		/* 발주유형		*/
		AND A.ORDER_TYPE   = #{ORDER_TYPE}
	</if>
	<if test="@foren.Ognl@isNotEmpty(END_DECISION)">
		/* 최종판정		*/
		AND A.END_DECISION = #{END_DECISION}
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		--20190618 조회조건 item_account 추가
		AND I.ITEM_ACCOUNT   = #{ITEM_ACCOUNT}
	</if>

	ORDER BY ORDER_TYPE, INSPEC_DATE, A.INSPEC_NUM, A.INSPEC_SEQ, A.CUSTOM_CODE, CUSTOM_NAME

	SET NOCOUNT OFF
	SET ARITHABORT OFF
END
    </select>


</mapper>