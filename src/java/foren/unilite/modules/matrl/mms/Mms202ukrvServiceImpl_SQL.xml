<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms202ukrvServiceImpl">
<select id="mms202ukrvServiceImpl.selectExpirationdate" parameterType="Map" resultType="rMap">
	SELECT ISNULL(EXPIRATION_DAY,0) AS EXPIRATION_DAY
	  FROM BPR100T WITH(NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND ITEM_CODE = #{ITEM_CODE}
	   AND CIR_PERIOD_YN ='Y'
</select>
<select id="mms202ukrvServiceImpl.selectreceiptNumMasterList" parameterType="Map" resultType="rMap">
/* mms202ukrv.Cmms202ukrv[fnQms200QPop] Query01 */
BEGIN
 SET NOCOUNT ON
 SET ARITHABORT ON

 DECLARE @CompCode  NVARCHAR(08) /* 법인코드 */
       , @UserId   NVARCHAR(100)  /* 사용자ID */
       , @LangType  NVARCHAR(2)  /* 언어구분 */

	SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    SELECT A.INSPEC_NUM
         , A.INSPEC_SEQ
         , uniLite.fnGetUserdate(@CompCode, A.INSPEC_DATE) AS INSPEC_DATE
         , A.CUSTOM_CODE
         , C.CUSTOM_NAME
         , A.ITEM_CODE
         , B.ITEM_NAME
         , B.SPEC
         , A.INSPEC_Q
         , A.GOOD_INSPEC_Q
         , A.BAD_INSPEC_Q
         , A.INSPEC_TYPE
         , A.INSPEC_PRSN
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.LOT_NO
		,A.DIV_CODE

      FROM            QMS200T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
      WHERE A.COMP_CODE = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND A.DIV_CODE     = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
    AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
    AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
    AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
    AND A.ITEM_CODE    = #{ITEM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
    AND A.INSPEC_TYPE  = #{INSPEC_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(GOODBAD_TYPE)">
    AND A.GOODBAD_TYPE = #{GOODBAD_TYPE}
</if>
    ORDER BY A.INSPEC_NUM, A.INSPEC_SEQ


 SET ARITHABORT OFF
 SET NOCOUNT OFF
 END

    </select>
<select id="mms202ukrvServiceImpl.selectreceiptList" parameterType="Map" resultType="rMap">
/* mms202ukrv.Cmms202ukrv[fnQms200QRef] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
          , @UserId      NVARCHAR(100) /* 사용자ID    */
          , @LangType    NVARCHAR(2)  /* 언어구분    */
          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

 /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

 /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

 /* 데이터 조회 */


    SELECT CAST('' AS BIT) AS CHK
         , A.CUSTOM_CODE
         , C.CUSTOM_NAME
         , A.ITEM_CODE
         , B.ITEM_NAME
         , B.SPEC
         , (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
            END)                                            AS RECEIPT_DATE
         , ISNULL(D.INSPEC_METH_MATRL, '02')				AS INSPEC_METH_MATRL
         , ISNULL(A.RECEIPT_Q,0) AS INSPEC_Q
         , A.ORDER_UNIT
         , E.TRNS_RATE	--입수
         , ISNULL(A.RECEIPT_Q,0) -  ISNULL(A.INSPEC_Q,0) AS NOT_INSPEC_Q	--미검사량
         , (ISNULL(A.RECEIPT_Q,0) -  ISNULL(A.INSPEC_Q,0)) * E.TRNS_RATE AS NOT_INSPEC_STOCK_Q	--미검사량(재고단위)
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.LOT_NO
         , A.ORDER_TYPE
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , A.REMARK
         , A.PROJECT_NO
         , E.WH_CODE
         , A.MAKE_LOT_NO		--거래처LOT
		, A.MAKE_DATE		--제조일자
		, A.MAKE_EXP_DATE	--유통기한
		, D.ITEM_ACCOUNT
		, B.ITEM_LEVEL1
		,A.DIV_CODE
      FROM            QMS100T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BPR200T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
                                             AND A.DIV_CODE    = D.DIV_CODE
                                             AND A.ITEM_CODE   = D.ITEM_CODE
                                             --AND D.INSPEC_YN   = 'Y'   --제외 20180424
                                             --AND ISNULL(D.INSPEC_METH_MATRL, '') != N''--제외 20180424
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
           INNER JOIN MPO200T E WITH (NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
                                             AND A.DIV_CODE    = E.IN_DIV_CODE
                                             AND A.ORDER_NUM   = E.ORDER_NUM
                                             AND A.ORDER_SEQ   = E.ORDER_SEQ
                                             AND E.CONTROL_STATUS != N'8'
                                             --AND E.INSPEC_FLAG = 'Y'      --추가 -- 20180424
     WHERE A.COMP_CODE = @CompCode
       AND (ISNULL(A.RECEIPT_Q,0) * ISNULL(E.TRNS_RATE,0)) - ISNULL(A.INSPEC_Q,0) > 0
       AND A.INSPEC_FLAG = 'Y'
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND A.DIV_CODE      = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
        AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
        AND A.RECEIPT_DATE &gt;= #{RECEIPT_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
        AND A.RECEIPT_DATE &lt;= #{RECEIPT_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
        AND A.ITEM_CODE     = #{ITEM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
        AND A.LOT_NO        = #{LOT_NO}
</if>
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
        AND A.ORDER_TYPE    = #{ORDER_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		AND D.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
</if>


<if test="@foren.Ognl@isNotEmpty(RECEIPT_NUM)">
		AND A.RECEIPT_NUM = #{RECEIPT_NUM}
</if>

     SET NOCOUNT OFF
     SET ARITHABORT OFF
END
</select>
<select id="mms202ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
/* mms202ukrv.Cmms202ukrv[fnQms200QStd] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT A.DIV_CODE
         , A.INSPEC_NUM
         , A.INSPEC_SEQ
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                     ELSE B.ITEM_NAME
             END) AS ITEM_NAME
         , B.SPEC
         , A.ORDER_UNIT
         , A.INSPEC_TYPE
         , A.END_DECISION
         , ISNULL(A.RECEIPT_Q    ,0) AS RECEIPT_Q
         , ISNULL(E.TRNS_RATE    ,0) AS TRNS_RATE
         , ISNULL(A.INSPEC_Q     ,0) AS INSPEC_Q
         , ISNULL(A.GOOD_INSPEC_Q,0) AS GOOD_INSPEC_Q
         , ISNULL(A.BAD_INSPEC_Q ,0) AS BAD_INSPEC_Q
         , ISNULL(A.INSTOCK_Q    ,0) AS INSTOCK_Q

         , (CASE WHEN A.INSPEC_Q = 0 THEN 0
                ELSE A.BAD_INSPEC_Q / A.INSPEC_Q * 100
           END) AS BAD_INSPEC_PER

         , A.INSPEC_PRSN
         , A.CUSTOM_CODE
         , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                     ELSE C.CUSTOM_NAME
             END) AS CUSTOM_NAME
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.REMARK
         , A.PROJECT_NO
         , uniLite.fnGetUserdate(@CompCode, A.INSPEC_DATE) AS INSPEC_DATE
         , A.ORDER_TYPE
         , A.LOT_NO
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , A.GOODBAD_TYPE
        , CASE WHEN ISNULL((SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'1'
                    ORDER BY E.INOUT_DATE), '') = '' THEN E.WH_CODE
				ELSE (SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'1'
                    ORDER BY E.INOUT_DATE) END		 AS GOOD_WH_CODE
         , CASE WHEN ISNULL((SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'2'
                    ORDER BY E.INOUT_DATE), '') = '' THEN E.WH_CODE
		       ELSE (SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'2'
                    ORDER BY E.INOUT_DATE) END 		AS BAD_WH_CODE
	        , A.MAKE_LOT_NO		--거래처LOT
			, A.MAKE_DATE		--제조일자
			, A.MAKE_EXP_DATE	--유통기한
			, B1.ITEM_ACCOUNT
			, B.ITEM_LEVEL1
		, B.STOCK_UNIT
      FROM            QMS200T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BPR200T B1 WITH (NOLOCK) ON A.COMP_CODE  = B1.COMP_CODE
											 AND A.DIV_CODE    = B1.DIV_CODE
                                             AND A.ITEM_CODE   = B1.ITEM_CODE
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
           INNER JOIN MPO200T E WITH (NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
                                             AND A.DIV_CODE    = E.IN_DIV_CODE
                                             AND A.ORDER_NUM   = E.ORDER_NUM
                                             AND A.ORDER_SEQ   = E.ORDER_SEQ

     WHERE A.COMP_CODE    = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND A.DIV_CODE     = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
       AND A.INSPEC_TYPE  = #{INSPEC_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE)">
       AND A.INSPEC_DATE  = #{INSPEC_DATE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_PRSN)">
       AND A.INSPEC_PRSN  = #{INSPEC_PRSN}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
       AND A.INSPEC_NUM   = #{INSPEC_NUM}
</if>
<if test="@foren.Ognl@isNotEmpty(GOODBAD_TYPE)">
       AND A.GOODBAD_TYPE = #{GOODBAD_TYPE}
</if>
     ORDER BY A.INSPEC_SEQ

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END

</select>
<select id="mms202ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
    /* mms202ukrv.Cmms202ukrv[fnQms200QBad] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
    	  , @DIV_CODE			NVARCHAR(20)		--(필수) 사업장 번호
          , @UserId         NVARCHAR(100) /* 사용자ID       */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
		  , @INSPEC_NUM			NVARCHAR(40)		--(필수) 검사번호
		  , @INSPEC_SEQ			NUMERIC(4, 0)		--(필수) 검사순번
		  , @ITEM_ACCOUNT     NVARCHAR(10)  --품목계정
		  , @ITEM_LEVEL1	  NVARCHAR(20)  --대분류
		  , @ITEM_CODE       NVARCHAR(20)   --검사제품

     SET @CompCode = #{S_COMP_CODE}
     SET @UserId   = #{S_USER_ID}
     SET @LangType = #{S_LANG_CODE}
	 SET @INSPEC_NUM = #{INSPEC_NUM}
	 SET @INSPEC_SEQ = #{INSPEC_SEQ}
	 SET @DIV_CODE = #{DIV_CODE}
	 SET @ITEM_ACCOUNT = #{ITEM_ACCOUNT}
	 SET @ITEM_LEVEL1 = #{ITEM_LEVEL1}
	 SET @ITEM_CODE = #{ITEM_CODE}
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	IF EXISTS (	    SELECT TOP 1 1
						FROM QMS210T WITH(NOLOCK)
						WHERE COMP_CODE = @CompCode
						AND DIV_CODE   	   = @DIV_CODE
						AND INSPEC_NUM    = @INSPEC_NUM
						AND INSPEC_SEQ     = @INSPEC_SEQ
				)
 	BEGIN
		    /* 데이터 조회 */
		    SELECT 'U'	AS SAVE_FLAG
		    	 , A.DIV_CODE
		         , A.INSPEC_NUM
				 , A.INSPEC_SEQ
				 , A.BAD_INSPEC_CODE	AS TEST_CODE
				 , A.BAD_INSPEC_CODE	AS TEST_NAME
				 --, B.TEST_NAME
		         , A.BAD_INSPEC_Q
		         , A.INSPEC_REMARK
		         , A.MANAGE_REMARK
		         , A.TEST_COND
				 , A.MEASURED_FROM	AS TEST_COND_FROM
				 , A.MEASURED_TO		AS TEST_COND_TO
				 , MEASURED_VALUE
				 , SPEC
		      FROM QMS210T A WITH (NOLOCK)
		      LEFT JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
															    AND B.DIV_CODE   = A.DIV_CODE
															    AND B.TEST_CODE = A.BAD_INSPEC_CODE
			   WHERE A.COMP_CODE	   = @CompCode
                 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                 	AND A.DIV_CODE        = #{DIV_CODE}
                 </if>
                 <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
                 	AND A.INSPEC_NUM      = #{INSPEC_NUM}
                 </if>
				  <if test="@foren.Ognl@isNotEmpty(INSPEC_SEQ)">
		             AND A.INSPEC_SEQ      = #{INSPEC_SEQ}
				  </if>
		 END

		 ELSE
		 	 BEGIN
			 			SELECT 'N'	AS SAVE_FLAG
				 			    ,  A.COMP_CODE
								 , A.DIV_CODE
								 , ''		AS INSPEC_NUM
								 , #{INSPEC_SEQ}		AS INSPEC_SEQ
								 , A.TEST_CODE
								 , A.TEST_CODE			AS TEST_NAME
								 --, B.TEST_NAME
								 , B.TEST_COND
								 , B.TEST_COND_FROM
								 , B.TEST_COND_TO
								 , CASE WHEN ((ISNULL(B.TEST_COND_FROM, 0) != 0 OR ISNULL(B.TEST_COND_TO, 0) != 0)
										   AND (ISNULL(B.TEST_COND_FROM, 0) > 0 OR ISNULL(B.TEST_COND_TO, 0) <![CDATA[< ]]> 0)) THEN '부적합'
										ELSE B.TEST_RESULT
								   END					AS SPEC		--[QMS210T.SPEC]
						--	 , B.TEST_RESULT		AS SPEC		--[QMS210T.SPEC]
					  FROM		 QBA120T A WITH(NOLOCK)
					  INNER JOIN QBA100T B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
													   AND B.DIV_CODE     = A.DIV_CODE
													   AND B.TEST_CODE    = A.TEST_CODE
					  INNER JOIN BPR200T C WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
													   AND C.DIV_CODE     = A.DIV_CODE
													   AND C.ITEM_CODE    = @ITEM_CODE
													   AND C.ITEM_ACCOUNT = A.TEST_GROUP2
					 WHERE A.COMP_CODE   = @CompCode
					   AND A.DIV_CODE    = @DIV_CODE
					   AND A.TEST_GROUP  = @ITEM_LEVEL1
			 END
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
</select>
<select id="mms202ukrvServiceImpl.inspecQtyCheck" parameterType="Map" resultType="rMap">
	  /*  mms202ukrv.Cmms202ukrv[fnQms200QChk] Query01*/
    SELECT INOUT_Q
      FROM BTR100T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND DIV_CODE   = #{DIV_CODE}
       AND INSPEC_NUM = #{INSPEC_NUM}
       AND INSPEC_SEQ = #{INSPEC_SEQ}
       AND CREATE_LOC = '2'
</select>
<insert id="mms202ukrvServiceImpl.insertLogMaster" parameterType="Map">
INSERT INTO L_QMS200T
     ( KEY_VALUE		    , OPR_FLAG
     , COMP_CODE            , DIV_CODE              , INSPEC_NUM            , INSPEC_SEQ            , INSPEC_DATE
     , ORDER_TYPE           , ITEM_CODE             , CUSTOM_CODE           , ORDER_UNIT            , INSPEC_Q
     , GOOD_INSPEC_Q        , BAD_INSPEC_Q          , INSPEC_TYPE           , INSPEC_METHOD         , INSTOCK_Q
     , INSPEC_PRSN          , LOT_NO                , ORDER_NUM             , ORDER_SEQ             , RECEIPT_NUM
     , RECEIPT_SEQ          , REMARK                , PROJECT_NO            , GOODBAD_TYPE          , RECEIPT_Q
     , END_DECISION         , PJT_CODE

     , MAKE_LOT_NO		   ,MAKE_DATE			    ,MAKE_EXP_DATE
     )
VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG}
     , #{S_COMP_CODE}       , #{DIV_CODE}           , #{INSPEC_NUM}         , #{INSPEC_SEQ}         , #{INSPEC_DATE}
     , #{ORDER_TYPE}        , #{ITEM_CODE}          , #{CUSTOM_CODE}        , #{ORDER_UNIT}         , #{INSPEC_Q}
     , #{GOOD_INSPEC_Q}     , #{BAD_INSPEC_Q}       , #{INSPEC_TYPE}        , #{INSPEC_METHOD}      , #{INSTOCK_Q}
     , #{INSPEC_PRSN}       , #{LOT_NO}             , #{ORDER_NUM}          , #{ORDER_SEQ}          , #{RECEIPT_NUM}
     , #{RECEIPT_SEQ}       , #{REMARK}             , #{PROJECT_NO}         , #{GOODBAD_TYPE}       , #{RECEIPT_Q}
     , #{END_DECISION}      , #{PJT_CODE}

     , #{MAKE_LOT_NO}		,#{MAKE_DATE}			,#{MAKE_EXP_DATE}
     )
 	</insert>
<insert id="mms202ukrvServiceImpl.insertQms210" parameterType="Map">
/*mms202ukrv.Cmms202ukrv[fnQms200Save] Query10 */
      INSERT QMS210T
          ( DIV_CODE       ,COMP_CODE      , INSPEC_NUM     , INSPEC_SEQ  , BAD_INSPEC_CODE, BAD_INSPEC_Q
          , INSPEC_REMARK  , MANAGE_REMARK
          , TEST_COND, MEASURED_FROM, MEASURED_TO,  SPEC, MEASURED_VALUE
          , UPDATE_DB_USER , UPDATE_DB_TIME
          )
         VALUES
           ( #{DIV_CODE}
           , #{S_COMP_CODE}
           , #{INSPEC_NUM}
           , #{INSPEC_SEQ}
           , #{TEST_CODE}
           , #{BAD_INSPEC_Q}
           , #{INSPEC_REMARK}
           , #{MANAGE_REMARK}
           , #{TEST_COND}
           , #{TEST_COND_FROM}
           , #{TEST_COND_TO}
           , #{SPEC}
           , #{MEASURED_VALUE}
           , #{S_USER_ID}
           , GETDATE() )
</insert>
<select id="mms202ukrvServiceImpl.selectQMS200" parameterType="Map" resultType="rMap">
     /*mms202ukrv.Cmms202ukrv[fnQms200Save] Query10-1*/
     SELECT ORDER_NUM, ORDER_SEQ
       FROM QMS200T
       WHERE COMP_CODE  = #{S_COMP_CODE}
         AND DIV_CODE   = #{DIV_CODE}
         AND INSPEC_NUM = #{INSPEC_NUM}
         AND INSPEC_SEQ = #{INSPEC_SEQ}
</select>
<update id="mms202ukrvServiceImpl.updateMpo200" parameterType="Map">
    /*mms202ukrv.Cmms202ukrv[fnQms200Save] Query10-2*/
<!--     UPDATE MPO200T
      SET BAD_RETURN_Q = ISNULL(BAD_RETURN_Q,0) + #{BAD_INSPEC_Q}
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND DIV_CODE   = #{DIV_CODE}
       AND ORDER_NUM  = #{ORDER_NUM}
       AND ORDER_SEQ  = #{ORDER_SEQ} -->
</update>
<update id="mms202ukrvServiceImpl.updateQms210" parameterType="Map">
    /*mms202ukrv.Cmms202ukrv[fnQms200Save] Query11*/
    UPDATE QMS210T
       SET BAD_INSPEC_Q    = #{BAD_INSPEC_Q}
         , INSPEC_REMARK   = #{INSPEC_REMARK}
         , MANAGE_REMARK   = #{MANAGE_REMARK}
         , TEST_COND			= #{TEST_COND}
         , MEASURED_FROM  = #{TEST_COND_FROM}
         , MEASURED_TO      = #{TEST_COND_TO}
         , SPEC                  	=  #{SPEC}
         , MEASURED_VALUE  = #{MEASURED_VALUE}
         , UPDATE_DB_USER   = #{S_USER_ID}
         , UPDATE_DB_TIME   = GETDATE()
     WHERE COMP_CODE       = #{S_COMP_CODE}
       AND DIV_CODE           = #{DIV_CODE}
       AND INSPEC_NUM        = #{INSPEC_NUM}
       AND INSPEC_SEQ         = #{INSPEC_SEQ}
       AND BAD_INSPEC_CODE = #{TEST_CODE}
</update>
<delete id="mms202ukrvServiceImpl.deleteQms210" parameterType="Map">
    /*mms202ukrv.Cmms202ukrv[fnQms200Save] Query10-2*/
    DELETE QMS210T
     WHERE COMP_CODE       = #{S_COMP_CODE}
       AND DIV_CODE        = #{DIV_CODE}
       AND INSPEC_NUM      = #{INSPEC_NUM}
       AND INSPEC_SEQ      = #{INSPEC_SEQ}
       AND BAD_INSPEC_CODE = #{TEST_CODE}
       AND BAD_INSPEC_Q    = 0
</delete>
<delete id="mms202ukrvServiceImpl.deleteQms2102" parameterType="Map">
    /*mms202ukrvServiceImpl.deleteQms2102*/
    DELETE QMS210T
     WHERE COMP_CODE       = #{S_COMP_CODE}
       AND DIV_CODE           = #{DIV_CODE}
       AND INSPEC_NUM       = #{INSPEC_NUM}
       AND INSPEC_SEQ       = #{INSPEC_SEQ}
       AND BAD_INSPEC_CODE = #{TEST_CODE}
</delete>
<update id="mms202ukrvServiceImpl.updateQms200" parameterType="Map">

	/*mms202ukrv.Cmms202ukrv[fnQms200Save] Query13*/
    /*
--불량정보를 검사정보로 변경하면서 불량수량 업데이트 않하기로 함. 20190228
--		   UPDATE A SET GOOD_INSPEC_Q = ISNULL(A.RECEIPT_Q,0) * ISNULL(C.TRNS_RATE,1) - ISNULL(B.SUM_BADQTY ,0)
--						, BAD_INSPEC_Q  = ISNULL(B.SUM_BADQTY ,0)
*/

<!--  	     UPDATE A SET INSPEC_Q = ISNULL(B.SUM_BADQTY ,0)
		   FROM QMS200T A
				LEFT JOIN (
							SELECT COMP_CODE, DIV_CODE, INSPEC_NUM, SUM(ISNULL(BAD_INSPEC_Q, 0)) AS SUM_BADQTY
							  FROM QMS210T
							 WHERE COMP_CODE  = #{S_COMP_CODE}
							   AND DIV_CODE   = #{DIV_CODE}
							   AND INSPEC_NUM = #{INSPEC_NUM}
							 GROUP BY COMP_CODE, DIV_CODE, INSPEC_NUM, INSPEC_SEQ
				) B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.INSPEC_NUM=B.INSPEC_NUM AND A.INSEPC_SEQ = B.INSPEC_SEQ
				LEFT JOIN MPO200T C ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.IN_DIV_CODE AND A.ORDER_NUM=C.ORDER_NUM AND A.ORDER_SEQ=C.ORDER_SEQ
		WHERE A.COMP_CODE  = #{S_COMP_CODE}
		AND A.DIV_CODE   = #{DIV_CODE}
		AND A.INSPEC_NUM = #{INSPEC_NUM} -->

</update>
<update id="mms202ukrvServiceImpl.updateQms200AndQms100" parameterType="Map">
   /*mms202ukrv.Cmms202ukrv[fnQms200Save] Query14*/
<!--     BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        UPDATE QMS100T
           SET INSPEC_Q = B.PASS_Q
             , UPDATE_DB_TIME=GETDATE()
          FROM QMS100T A
                       INNER JOIN (
                  									SELECT X1.COMP_CODE, X1.DIV_CODE, X1.INSPEC_NUM, X1.RECEIPT_NUM, X1.RECEIPT_SEQ, X2.PASS_Q
                  									FROM QMS200T X1 WITH (NOLOCK)
                  										 INNER JOIN (
                  														SELECT S1.COMP_CODE, S1.DIV_CODE, S1.RECEIPT_NUM, S1.RECEIPT_SEQ, SUM(S1.RECEIPT_Q * S2.TRNS_RATE)  AS PASS_Q
                  														FROM  QMS200T S1 WITH (NOLOCK)
                  															  INNER JOIN MPO200T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.ORDER_NUM=S2.ORDER_NUM AND S1.ORDER_SEQ=S2.ORDER_SEQ
                  														GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.RECEIPT_NUM, S1.RECEIPT_SEQ
                  													) X2 ON X1.COMP_CODE=X2.COMP_CODE AND X1.DIV_CODE=X2.DIV_CODE AND X1.RECEIPT_NUM=X2.RECEIPT_NUM AND X1.RECEIPT_SEQ=X2.RECEIPT_SEQ
                  									WHERE X1.COMP_CODE=#{S_COMP_CODE}
                  									AND X1.DIV_CODE=#{DIV_CODE}
                  									AND X1.INSPEC_NUM = #{S_INSPEC_NUM}

					   ) B ON A.COMP_CODE   = B.COMP_CODE
                              AND A.DIV_CODE    = B.DIV_CODE
                              AND A.RECEIPT_NUM = B.RECEIPT_NUM
                              AND A.RECEIPT_SEQ = B.RECEIPT_SEQ

         WHERE B.COMP_CODE   = #{S_COMP_CODE}
           AND B.DIV_CODE    = #{DIV_CODE}
           AND B.INSPEC_NUM  = #{S_INSPEC_NUM}

    SET ARITHABORT OFF
    SET NOCOUNT OFF
    END -->
</update>
   <update id="spMms202ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_MATRL_MMS200UKRV (
		#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{INSPEC_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{AUTO_INPUT_FLAG, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
    </update>

    <select id="mms202ukrvServiceImpl.autoInputCheck" parameterType="Map" resultType="Int">
		  SELECT COUNT(1)
          FROM BSA100T
          WHERE MAIN_CODE = N'M025'
          AND ISNULL(UPPER(LEFT(REF_CODE1,1)),'') = N'Y'
          AND SUB_CODE = 'Y'
          AND COMP_CODE = #{COMP_CODE}
	</select>

	<select id="mms202ukrvServiceImpl.selectAutoInputBeforeDeletetList" parameterType="Map" resultType="rMap">

        SELECT A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_METH
             , A.INOUT_TYPE_DETAIL
             , A.ITEM_CODE
             , E.ITEM_ACCOUNT
             , B.SPEC
             , ISNULL(A.ORDER_UNIT, B.STOCK_UNIT) AS ORDER_UNIT
             , A.ORDER_UNIT_Q
             , A.ITEM_STATUS
             , A.INOUT_Q                AS ORIGINAL_Q
             , 0                        AS GOOD_STOCK_Q
             , 0                        AS BAD_STOCK_Q
             , ISNULL((SELECT ISNULL(ORDER_Q,0) - ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS NOINOUT_Q
             , A.PRICE_YN
             , A.MONEY_UNIT
             , A.INOUT_FOR_P
             , A.INOUT_FOR_O
             , A.ORDER_UNIT_FOR_P
             , A.INOUT_FOR_O AS ORDER_UNIT_FOR_O
             , A.ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , A.INOUT_P
             , A.INOUT_I
             , A.ORDER_UNIT_P
             , A.INOUT_I ORDER_UNIT_I
             , B.STOCK_UNIT
             , A.TRNS_RATE
             , A.INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , A.BL_NUM
             , A.ORDER_NUM
             , A.ORDER_SEQ
             , ISNULL((SELECT ISNULL(ORDER_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS ORDER_Q
             , A.INOUT_CODE_TYPE
             , A.WH_CODE
             , A.INOUT_DATE
             , A.INOUT_PRSN
             , A.ACCOUNT_Q
             , A.CREATE_LOC
             , A.SALE_C_DATE
             , A.REMARK
             , A.PROJECT_NO
             , A.LOT_NO
             , A.INOUT_TYPE
             , A.INOUT_CODE
             , A.DIV_CODE
             , C.COMPANY_NUM
             , ISNULL((SELECT ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS INSTOCK_Q
             , A.SALE_DIV_CODE
             , A.SALE_CUSTOM_CODE
             , A.BILL_TYPE
             , A.SALE_TYPE
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , E.EXCESS_RATE
             , A.INSPEC_NUM
             , A.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
          FROM            BTR100T A WITH (NOLOCK)
               INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                                 AND A.ITEM_CODE  = B.ITEM_CODE
               INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE  = C.COMP_CODE
                                                 AND A.INOUT_CODE = C.CUSTOM_CODE
               INNER JOIN BPR200T E WITH (NOLOCK) ON A.COMP_CODE  = E.COMP_CODE
                                                 AND A.DIV_CODE   = E.DIV_CODE
                                                 AND A.ITEM_CODE  = E.ITEM_CODE
               LEFT  JOIN MPO200T G WITH (NOLOCK) ON A.COMP_CODE  = G.COMP_CODE
                                                 AND A.DIV_CODE = G.IN_DIV_CODE
                                                 AND A.ORDER_NUM  = G.ORDER_NUM
                                                 AND A.ORDER_SEQ  = G.ORDER_SEQ
               LEFT  JOIN MPO100T F WITH (NOLOCK) ON G.COMP_CODE  = F.COMP_CODE
               									 AND G.DIV_CODE		= F.DIV_CODE
                                                 AND G.ORDER_NUM  = F.ORDER_NUM
         WHERE A.COMP_CODE  = #{COMP_CODE}
           AND A.DIV_CODE   = #{DIV_CODE}
           AND A.INSPEC_NUM = #{INSPEC_NUM}
           AND A.INSPEC_SEQ = #{INSPEC_SEQ}
           AND F.ORDER_TYPE <![CDATA[<>]]> N'4'
	</select>

	<select id="mms202ukrvServiceImpl.selectAutoInputBeforeDeletetOutList" parameterType="Map" resultType="rMap">

         SELECT A.INOUT_NUM
             , A.INOUT_SEQ
             , A.INOUT_METH
             , A.INOUT_TYPE_DETAIL
             , A.ITEM_CODE
             , E.ITEM_ACCOUNT
             , B.SPEC
             , ISNULL(A.ORDER_UNIT, B.STOCK_UNIT) AS ORDER_UNIT
             , A.ORDER_UNIT_Q
             , A.ITEM_STATUS
             , A.INOUT_Q                AS ORIGINAL_Q
             , 0                        AS GOOD_STOCK_Q
             , 0                        AS BAD_STOCK_Q
             , ISNULL((SELECT ISNULL(ORDER_Q,0) - ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS NOINOUT_Q
             , A.PRICE_YN
             , A.MONEY_UNIT
             , A.INOUT_FOR_P
             , A.INOUT_FOR_O
             , A.ORDER_UNIT_FOR_P
             , A.INOUT_FOR_O AS ORDER_UNIT_FOR_O
             , A.ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , A.INOUT_P
             , A.INOUT_I
             , A.ORDER_UNIT_P
             , A.INOUT_I ORDER_UNIT_I
             , B.STOCK_UNIT
             , A.TRNS_RATE
             , A.INOUT_Q
             , A.ORDER_TYPE
             , A.LC_NUM
             , A.BL_NUM
             , A.ORDER_NUM
             , A.ORDER_SEQ
             , ISNULL((SELECT ISNULL(ORDER_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS ORDER_Q
             , A.INOUT_CODE_TYPE
             , A.WH_CODE
             , A.INOUT_DATE
             , A.INOUT_PRSN
             , A.ACCOUNT_Q
             , A.CREATE_LOC
             , A.SALE_C_DATE
             , A.REMARK
             , A.PROJECT_NO
             , A.LOT_NO
             , A.INOUT_TYPE
             , A.INOUT_CODE
             , A.DIV_CODE
             , C.COMPANY_NUM
             , ISNULL((SELECT ISNULL(INSTOCK_Q,0)
                         FROM MPO200T
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ORDER_NUM = A.ORDER_NUM
                          AND ORDER_SEQ = A.ORDER_SEQ),0) AS INSTOCK_Q
             , A.SALE_DIV_CODE
             , A.SALE_CUSTOM_CODE
             , A.BILL_TYPE
             , A.SALE_TYPE
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , E.EXCESS_RATE
             , A.INSPEC_NUM
             , A.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
          FROM            BTR100T A WITH (NOLOCK)
               INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                                 AND A.ITEM_CODE  = B.ITEM_CODE
               INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE  = C.COMP_CODE
                                                 AND A.INOUT_CODE = C.CUSTOM_CODE
               INNER JOIN BPR200T E WITH (NOLOCK) ON A.COMP_CODE  = E.COMP_CODE
                                                 AND A.DIV_CODE   = E.DIV_CODE
                                                 AND A.ITEM_CODE  = E.ITEM_CODE
			    LEFT  JOIN MPO200T G WITH (NOLOCK) ON A.COMP_CODE  = G.COMP_CODE
                                                 AND A.DIV_CODE = G.IN_DIV_CODE
                                                 AND A.ORDER_NUM  = G.ORDER_NUM
                                                 AND A.ORDER_SEQ  = G.ORDER_SEQ
               LEFT  JOIN MPO100T F WITH (NOLOCK) ON G.COMP_CODE  = F.COMP_CODE
               									 AND G.DIV_CODE		= F.DIV_CODE
                                                 AND G.ORDER_NUM  = F.ORDER_NUM

          WHERE A.COMP_CODE  = #{COMP_CODE}
           AND A.DIV_CODE   = #{DIV_CODE}
           AND A.INSPEC_NUM = #{INSPEC_NUM}
           AND A.INSPEC_SEQ  = #{INSPEC_SEQ}
           AND F.ORDER_TYPE = N'4'
	</select>

	<select id="mms202ukrvServiceImpl.selectAutoInputList" parameterType="Map" resultType="rMap">
		 SELECT ''                                                                          AS INOUT_NUM
             , E.INSPEC_SEQ                                                                 AS INOUT_SEQ
             , '1'                                                                           AS INOUT_METH
             ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  ELSE   (SELECT MIN(SUB_CODE)
				                  FROM BSA100T
				                 WHERE COMP_CODE = A.COMP_CODE
				                   AND MAIN_CODE = N'M103'
				                   AND SUB_CODE <![CDATA[<>]]> N'$')
			   END	                     												     AS INOUT_TYPE_DETAIL
             , B.ITEM_CODE
             , D.ITEM_ACCOUNT
             , C.SPEC
             , B.ORDER_UNIT
             , ISNULL(E.GOOD_INSPEC_Q,0)                                                                  											AS INOUT_Q   --재고단위 수량
             , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
             , (B.ORDER_P  * ISNULL(E.GOOD_INSPEC_Q,0) * A.EXCHG_RATE_O )             												AS INOUT_I

			 , ISNULL(E.GOOD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     	 	AS ORDER_UNIT_Q
             ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                     AS ORDER_UNIT_P
             , (B.ORDER_UNIT_P * ISNULL(E.GOOD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    AS ORDER_UNIT_I

             , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
             , (B.ORDER_UNIT_P * ISNULL(E.GOOD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                             AS ORDER_UNIT_FOR_O

             , B.ORDER_P      									   																								AS INOUT_FOR_P
             , (B.ORDER_P * ISNULL(E.GOOD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O

             , ISNULL(B.TRNS_RATE,1)                                                                                               						AS TRNS_RATE

             , '1'                                                                                                                 									AS ITEM_STATUS
             , 0                                                                                                                  							    	AS ORIGINAL_Q
             , 0                                                                                                                   									AS GOOD_STOCK_Q
             , 0                                                                                                                   									AS BAD_STOCK_Q
             , ISNULL(E.GOOD_INSPEC_Q,0) 										                                                                 		AS NOINOUT_Q
             , B.UNIT_PRICE_TYPE                                                                                                   						AS PRICE_YN
             , A.MONEY_UNIT


             , 'Y'                                                                                                                 										AS ACCOUNT_YNC
             , A.EXCHG_RATE_O


             , C.STOCK_UNIT

             , A.ORDER_TYPE
             , A.LC_NUM
             , ''                                                                                                                  										AS BL_NUM
             , B.ORDER_NUM
             , B.ORDER_SEQ
			 , B.ORDER_Q
             , '4'                                                                                                                 										AS INOUT_CODE_TYPE
             , CASE WHEN ISNULL(#{GOOD_WH_CODE},'') = '' THEN B.WH_CODE
             			ELSE 	#{GOOD_WH_CODE}
             	END																																					AS WH_CODE
             , E.INSPEC_DATE                                                                                                       								AS INOUT_DATE
             , ''                                                                                                                  										AS INOUT_PRSN
             , 0                                                                                                                   										AS ACCOUNT_Q
             , '2'                                                                                                                 										AS CREATE_LOC
             , ''                                                                                                                  										AS SALE_C_DATE
             , E.REMARK
             , E.PROJECT_NO
             , E.LOT_NO                                                                                                                  										AS LOT_NO
             , '1'                                                                                                                 										AS INOUT_TYPE
             , A.CUSTOM_CODE                                                                                                       							AS INOUT_CODE
             , B.IN_DIV_CODE AS DIV_CODE
             , ''                                                                                                                 										AS COMPANY_NUM
             , ISNULL(B.INSTOCK_Q,0)                                                                                              							AS INSTOCK_Q
             , '*'                                                                                                                										AS SALE_DIV_CODE
             , '*'                                                                                                                 										AS SALE_CUSTOM_CODE
             , '*'                                                                                                                 										AS BILL_TYPE
             , '*'                                                                                                                 										AS SALE_TYPE
             , #{USER_ID}                                                                                               											AS UPDATE_DB_USER
             , GETDATE()                                                                                                         									AS UPDATE_DB_TIME
             , D.EXCESS_RATE
             , E.INSPEC_NUM
             , E.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
             , E.MAKE_LOT_NO
             , E.MAKE_DATE
             , E.MAKE_EXP_DATE
             , E.RECEIPT_NUM
             , E.RECEIPT_SEQ
             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
          FROM            MPO100T A WITH (NOLOCK)
               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                 AND A.DIV_CODE  = B.DIV_CODE
                                                 AND A.ORDER_NUM = B.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                 AND B.ITEM_CODE = C.ITEM_CODE
               INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                 AND B.DIV_CODE  = D.DIV_CODE
                                                 AND B.ITEM_CODE = D.ITEM_CODE
               INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                 AND B.IN_DIV_CODE  = E.DIV_CODE
                                                 AND B.ORDER_NUM = E.ORDER_NUM
                                                 AND B.ORDER_SEQ = E.ORDER_SEQ
			   INNER JOIN QMS100T F WITH (NOLOCK) ON E.COMP_CODE   = F.COMP_CODE
			   									 AND E.DIV_CODE    = F.DIV_CODE
			   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
			   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
         WHERE A.COMP_CODE                = #{COMP_CODE}
           AND B.IN_DIV_CODE                 = #{DIV_CODE}
           AND A.ORDER_TYPE              <![CDATA[<>]]> N'4'
           AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
           AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
           AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
           AND E.INSPEC_NUM               =  #{INSPEC_NUM}
           AND E.INSPEC_SEQ  				= #{INSPEC_SEQ}
           AND E.GOOD_INSPEC_Q          <![CDATA[>]]> 0
           AND E.END_DECISION            <![CDATA[<>]]> N'03'
		<if test="GOOD_WH_CODE == BAD_WH_CODE">
			--양품창고랑 불량창고가 같은 경우에는 불량이 같은 수불번호에 입고되어야 함
			 UNION ALL
            SELECT ''                                                                                                                  						AS INOUT_NUM
                 , E.INSPEC_SEQ                                                                                                                	 		AS INOUT_SEQ
                 , '1'                                                                                                                 							AS INOUT_METH
                 ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  	  ELSE   (SELECT MIN(SUB_CODE)
				                  	FROM BSA100T
				                 	WHERE COMP_CODE = A.COMP_CODE
				                   	AND MAIN_CODE = N'M103'
				                   	AND SUB_CODE <![CDATA[<>]]> N'$')
			  	   END	                     																													AS INOUT_TYPE_DETAIL
                 , B.ITEM_CODE
                 , D.ITEM_ACCOUNT
                 , C.SPEC
                 , B.ORDER_UNIT
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                    AS INOUT_Q
                 , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
                 , (B.ORDER_P  * ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) )             									AS INOUT_I
                 , ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     		AS ORDER_UNIT_Q
                 ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                  	AS ORDER_UNIT_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    	AS ORDER_UNIT_I
                 , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                           		AS ORDER_UNIT_FOR_O
                 , B.ORDER_P      									   																								AS INOUT_FOR_P
                 , (B.ORDER_P * ISNULL(E.BAD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O
                 , ISNULL(B.TRNS_RATE,1)                                                                                               						AS TRNS_RATE
                 , '2'                                                                                                                 									AS ITEM_STATUS
                 , 0                                                                                                                   									AS ORIGINAL_Q
                 , 0                                                                                                                   									AS GOOD_STOCK_Q
                 , 0                                                                                                                   									AS BAD_STOCK_Q
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                  												AS NOINOUT_Q
                 , B.UNIT_PRICE_TYPE                                                                                                   						AS PRICE_YN
                 , A.MONEY_UNIT
                 , 'Y'                                                                                                                 									AS ACCOUNT_YNC
                 , A.EXCHG_RATE_O
                 , C.STOCK_UNIT

                 , A.ORDER_TYPE
                 , A.LC_NUM
                 , ''                                                                                                                  AS BL_NUM
                 , B.ORDER_NUM
                 , B.ORDER_SEQ
                 , B.ORDER_Q
                 , '4'                                                                                                                 AS INOUT_CODE_TYPE
                 , CASE WHEN  ISNULL(#{BAD_WH_CODE},'') = '' THEN B.WH_CODE
                 		   ELSE    #{BAD_WH_CODE}
                   END																					                            AS WH_CODE
                 , E.INSPEC_DATE                                                                                                 AS INOUT_DATE
                 , ''                                                                                                                    AS INOUT_PRSN
                 , 0                                                                                                                    AS ACCOUNT_Q
                 , '2'                                                                                                                   AS CREATE_LOC
                 , ''                                                                                                                     AS SALE_C_DATE
                 , E.REMARK
                 , E.PROJECT_NO
                 , E.LOT_NO                                                                                                        AS LOT_NO
                 , '1'                                                                                                                   AS INOUT_TYPE
                 , A.CUSTOM_CODE                                                                                               AS INOUT_CODE
                  , B.IN_DIV_CODE AS DIV_CODE
                 , ''                                                                                                                     AS COMPANY_NUM
                 , ISNULL(B.INSTOCK_Q,0)                                                                                      AS INSTOCK_Q
                 , '*'                                                                                                                   AS SALE_DIV_CODE
                 , '*'                                                                                                                   AS SALE_CUSTOM_CODE
                 , '*'                                                                                                                   AS BILL_TYPE
                 , '*'                                                                                                                   AS SALE_TYPE
                 ,#{USER_ID}                                                                                                   	 AS UPDATE_DB_USER
                 ,GETDATE()                                                                                                 		 AS UPDATE_DB_TIME
                 , D.EXCESS_RATE
                 , E.INSPEC_NUM
                 , E.INSPEC_SEQ
                 , A.COMP_CODE AS S_COMP_CODE
                 , E.MAKE_LOT_NO
	             , E.MAKE_DATE
	             , E.MAKE_EXP_DATE
	             , E.RECEIPT_NUM
	             , E.RECEIPT_SEQ
	             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
              FROM            MPO100T A WITH (NOLOCK)
                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                     AND A.DIV_CODE  = B.DIV_CODE
                                                     AND A.ORDER_NUM = B.ORDER_NUM
                   INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                     AND B.ITEM_CODE = C.ITEM_CODE
                   INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                     AND B.IN_DIV_CODE  = D.DIV_CODE
                                                     AND B.ITEM_CODE = D.ITEM_CODE
                   INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                     AND B.IN_DIV_CODE  = E.DIV_CODE
                                                     AND B.ORDER_NUM = E.ORDER_NUM
                                                     AND B.ORDER_SEQ = E.ORDER_SEQ
				  INNER JOIN QMS100T F WITH (NOLOCK) ON  E.COMP_CODE   = F.COMP_CODE
				   									 AND E.DIV_CODE    = F.DIV_CODE
				   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
				   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
				  LEFT JOIN BSA100T G WITH (NOLOCK)  ON  G.COMP_CODE  = F.COMP_CODE
				  									 AND G.MAIN_CODE  = 'M022'
				  									 AND G.SUB_CODE  != '$'
				  									 AND G.SUB_CODE   = '1'
				  									 AND G.REF_CODE1  = 'Y'
             WHERE A.COMP_CODE                = #{COMP_CODE}
               AND B.IN_DIV_CODE              = #{DIV_CODE}
               AND A.ORDER_TYPE              <![CDATA[<>]]> N'4'
               AND ISNULL(A.AGREE_STATUS,'1') > N'1'
               AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
               AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
               AND E.INSPEC_NUM               = #{INSPEC_NUM}
               AND E.INSPEC_SEQ  				= #{INSPEC_SEQ}
               AND E.BAD_INSPEC_Q            <![CDATA[>]]> 0
               AND E.END_DECISION            <![CDATA[<>]]> N'03'
               AND ISNULL(G.SUB_CODE, '')    != ''
		</if>
		  ORDER BY E.INSPEC_SEQ
	</select>
	<select id="mms202ukrvServiceImpl.selectAutoInputBadList" parameterType="Map" resultType="rMap">
			  SELECT ''                                                                                                                 				 		AS INOUT_NUM
                 , E.INSPEC_SEQ                                                                                                                  		AS INOUT_SEQ
                 , '1'                                                                                                                 							AS INOUT_METH
                 ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  	  ELSE   (SELECT MIN(SUB_CODE)
				                  	FROM BSA100T
				                	 WHERE COMP_CODE = A.COMP_CODE
				                   	 AND MAIN_CODE = N'M103'
				                   	 AND SUB_CODE <![CDATA[<>]]> N'$')
			  	   END	                     																													AS INOUT_TYPE_DETAIL
                 , B.ITEM_CODE
                 , D.ITEM_ACCOUNT
                 , C.SPEC
                 , B.ORDER_UNIT
                 , '2'                                                                                                                				 					AS ITEM_STATUS
                 , 0                                                                                                                   									AS ORIGINAL_Q
                 , 0                                                                                                                   									AS GOOD_STOCK_Q
                 , 0                                                                                                                   									AS BAD_STOCK_Q
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                     											AS NOINOUT_Q
                 , B.UNIT_PRICE_TYPE                                                                                                   						AS PRICE_YN
                 , A.MONEY_UNIT
                , ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     	 	AS ORDER_UNIT_Q
                 , B.ORDER_P      									   																								AS INOUT_FOR_P
                 , (B.ORDER_P * ISNULL(E.BAD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O
                 , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                               AS ORDER_UNIT_FOR_O
                 , 'Y'                                                                                                                 									AS ACCOUNT_YNC
                 , A.EXCHG_RATE_O
                 , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
                 , (B.ORDER_P  * ISNULL(E.BAD_INSPEC_Q,0) * A.EXCHG_RATE_O )             													AS INOUT_I
                 ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                     AS ORDER_UNIT_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    	AS ORDER_UNIT_I
                 , C.STOCK_UNIT
                 , ISNULL(B.TRNS_RATE,1)                                                                                               						AS TRNS_RATE
                  , ISNULL(E.BAD_INSPEC_Q,0)                                                                  												AS INOUT_Q   --재고단위 수량
                 , A.ORDER_TYPE
                 , A.LC_NUM
                 , ''                                                                                                                  AS BL_NUM
                 , B.ORDER_NUM
                 , B.ORDER_SEQ
                 , B.ORDER_Q
                 , '4'                                                                                                                 AS INOUT_CODE_TYPE
                 , CASE WHEN ISNULL(#{BAD_WH_CODE},'') = '' THEN B.WH_CODE
                 			ELSE  #{BAD_WH_CODE}
                 	END												                                                               AS WH_CODE
                 , E.INSPEC_DATE                                                                                                       AS INOUT_DATE
                 , ''                                                                                                                  AS INOUT_PRSN
                 , 0                                                                                                                  AS ACCOUNT_Q
                 , '2'                                                                                                                 AS CREATE_LOC
                 , ''                                                                                                                  AS SALE_C_DATE
                 , E.REMARK
                 , E.PROJECT_NO
                 , E.LOT_NO                                                                                                      AS LOT_NO
                 , '1'                                                                                                                 AS INOUT_TYPE
                 , A.CUSTOM_CODE                                                                                             AS INOUT_CODE
                  , B.IN_DIV_CODE AS DIV_CODE
                 , ''                                                                                                                  AS COMPANY_NUM
                 , ISNULL(B.INSTOCK_Q,0)                                                                                   AS INSTOCK_Q
                 , '*'                                                                                                                 AS SALE_DIV_CODE
                 , '*'                                                                                                                 AS SALE_CUSTOM_CODE
                 , '*'                                                                                                                 AS BILL_TYPE
                 , '*'                                                                                                                 AS SALE_TYPE
                 ,#{USER_ID}                                                                                               	   AS UPDATE_DB_USER
                 ,GETDATE()                                                                                                       AS UPDATE_DB_TIME
                 , D.EXCESS_RATE
                 , E.INSPEC_NUM
                 , E.INSPEC_SEQ
                 , A.COMP_CODE AS S_COMP_CODE
                 , E.MAKE_LOT_NO
	             , E.MAKE_DATE
	             , E.MAKE_EXP_DATE
	             , E.RECEIPT_NUM
	             , E.RECEIPT_SEQ
	             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
              FROM            MPO100T A WITH (NOLOCK)
                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                     AND A.DIV_CODE  = B.DIV_CODE
                                                     AND A.ORDER_NUM = B.ORDER_NUM
                   INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                     AND B.ITEM_CODE = C.ITEM_CODE
                   INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                     AND B.IN_DIV_CODE  = D.DIV_CODE
                                                     AND B.ITEM_CODE = D.ITEM_CODE
                   INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                     AND B.IN_DIV_CODE  = E.DIV_CODE
                                                     AND B.ORDER_NUM = E.ORDER_NUM
                                                     AND B.ORDER_SEQ = E.ORDER_SEQ
				   INNER JOIN QMS100T F WITH (NOLOCK) ON E.COMP_CODE   = F.COMP_CODE
				   									 AND E.DIV_CODE    = F.DIV_CODE
				   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
				   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
					EFT JOIN BSA100T G WITH (NOLOCK)  ON G.COMP_CODE  = F.COMP_CODE
				  									 AND G.MAIN_CODE  = 'M022'
				  									 AND G.SUB_CODE  != '$'
				  									 AND G.SUB_CODE   = '1'
				  									 AND G.REF_CODE1  = 'Y'
             WHERE A.COMP_CODE            = #{COMP_CODE}
               AND B.IN_DIV_CODE                 = #{DIV_CODE}
               AND A.ORDER_TYPE              <![CDATA[<>]]>  N'4'
               AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
               AND B.CONTROL_STATUS          <![CDATA[<>]]>  N'9'
               AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
               AND E.INSPEC_NUM               = #{INSPEC_NUM}
               AND E.INSPEC_SEQ               = #{INSPEC_SEQ}
               AND E.BAD_INSPEC_Q            <![CDATA[>]]> 0
               AND E.END_DECISION           <![CDATA[<>]]>  N'03'
               AND ISNULL(G.SUB_CODE, '')    != ''

	</select>
	<select id="mms202ukrvServiceImpl.selectAutoInputOutList" parameterType="Map" resultType="rMap">
		SELECT ''                                                                                                                  AS INOUT_NUM
             ,E.INSPEC_SEQ                                                                                                                  AS INOUT_SEQ
             , '1'                                                                                                                 AS INOUT_METH
             ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  	  ELSE   (SELECT MIN(SUB_CODE)
				                  	FROM BSA100T
				                	 WHERE COMP_CODE = A.COMP_CODE
				                   	 AND MAIN_CODE = N'M103'
				                   	 AND SUB_CODE <![CDATA[<>]]> N'$')
			  	   END	                     																													AS INOUT_TYPE_DETAIL
             , B.ITEM_CODE
             , D.ITEM_ACCOUNT
             , C.SPEC
             , B.ORDER_UNIT
             , '1'                                                                                                                 								AS ITEM_STATUS
             , 0                                                                                                                   AS ORIGINAL_Q
             , 0                                                                                                                   AS GOOD_STOCK_Q
             , 0                                                                                                                   AS BAD_STOCK_Q
             , ISNULL(E.GOOD_INSPEC_Q,0)                                                                  				AS NOINOUT_Q
             , B.UNIT_PRICE_TYPE                                                                                                   AS PRICE_YN
             , A.MONEY_UNIT
             , ISNULL(E.GOOD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     	 	AS ORDER_UNIT_Q
             , B.ORDER_P      									   																								AS INOUT_FOR_P
             , (B.ORDER_P * ISNULL(E.GOOD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O
             , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
             , (B.ORDER_UNIT_P * ISNULL(E.GOOD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                             AS ORDER_UNIT_FOR_O
             , 'Y'                                                                                                                 AS ACCOUNT_YNC
             , A.EXCHG_RATE_O
             , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
             , (B.ORDER_P  * ISNULL(E.GOOD_INSPEC_Q,0) * A.EXCHG_RATE_O )             												AS INOUT_I
             ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                     AS ORDER_UNIT_P
             , (B.ORDER_UNIT_P * ISNULL(E.GOOD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    AS ORDER_UNIT_I
             , C.STOCK_UNIT
             , ISNULL(B.TRNS_RATE,1)                                                                                               AS TRNS_RATE
             , ISNULL(E.GOOD_INSPEC_Q,0)                                                                  											AS INOUT_Q   --재고단위 수량
             , A.ORDER_TYPE
             , A.LC_NUM
             , ''                                                                                                                  AS BL_NUM
             , B.ORDER_NUM
             , B.ORDER_SEQ
             , B.ORDER_Q
             , '5'                                                                                                                 AS INOUT_CODE_TYPE
             , CASE WHEN ISNULL(#{GOOD_WH_CODE}, '') = '' THEN B.WH_CODE
             			ELSE #{GOOD_WH_CODE}
             	END                                                             AS WH_CODE
             , E.INSPEC_DATE                                                                                                       AS INOUT_DATE
             , ''                                                                                                                  AS INOUT_PRSN
             , 0                                                                                                                   AS ACCOUNT_Q
             , '2'                                                                                                                 AS CREATE_LOC
             , ''                                                                                                                  AS SALE_C_DATE
             , E.REMARK
             , E.PROJECT_NO
             , E.LOT_NO                                                                                                                  AS LOT_NO
             , '1'                                                                                                                 AS INOUT_TYPE
             , A.CUSTOM_CODE                                                                                                       AS INOUT_CODE
              , B.IN_DIV_CODE AS DIV_CODE
             , ''                                                                                                                  AS COMPANY_NUM
             , ISNULL(B.INSTOCK_Q,0)                                                                                               AS INSTOCK_Q
             , '*'                                                                                                                 AS SALE_DIV_CODE
             , '*'                                                                                                                 AS SALE_CUSTOM_CODE
             , '*'                                                                                                                 AS BILL_TYPE
             , '*'                                                                                                                 AS SALE_TYPE
             ,#{USER_ID}                                                                                             AS UPDATE_DB_USER
             ,GETDATE()                                                                                                       AS UPDATE_DB_TIME
             , D.EXCESS_RATE
             , E.INSPEC_NUM
             , E.INSPEC_SEQ
             , A.COMP_CODE AS S_COMP_CODE
             , E.MAKE_LOT_NO
             , E.MAKE_DATE
             , E.MAKE_EXP_DATE
             , E.RECEIPT_NUM
             , E.RECEIPT_SEQ
             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
          FROM            MPO100T A WITH (NOLOCK)
               INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                 AND A.DIV_CODE  = B.DIV_CODE
                                                 AND A.ORDER_NUM = B.ORDER_NUM
               INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                 AND B.ITEM_CODE = C.ITEM_CODE
               INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                 AND B.IN_DIV_CODE  = D.DIV_CODE
                                                 AND B.ITEM_CODE = D.ITEM_CODE
               INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                 AND B.IN_DIV_CODE  = E.DIV_CODE
                                                 AND B.ORDER_NUM = E.ORDER_NUM
                                                 AND B.ORDER_SEQ = E.ORDER_SEQ
			   INNER JOIN QMS100T F WITH (NOLOCK) ON E.COMP_CODE   = F.COMP_CODE
			   									 AND E.DIV_CODE    = F.DIV_CODE
			   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
			   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
         WHERE A.COMP_CODE                = #{COMP_CODE}
           AND B.IN_DIV_CODE                 = #{DIV_CODE}
           AND A.ORDER_TYPE               = N'4'
           AND ISNULL(A.AGREE_STATUS,'1')<![CDATA[>]]> N'1'
           AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
           AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
           AND E.INSPEC_NUM               = #{INSPEC_NUM}
           AND E.INSPEC_SEQ               = #{INSPEC_SEQ}
           AND E.GOOD_INSPEC_Q           <![CDATA[>]]> 0
           AND E.END_DECISION            <![CDATA[<>]]> N'03'
		<if test="GOOD_WH_CODE == BAD_WH_CODE">
			--양품창고랑 불량창고가 같은 경우에는 불량이 같은 수불번호에 입고되어야 함
			 UNION ALL
            SELECT ''                                                                                                                  AS INOUT_NUM
                 , E.INSPEC_SEQ                                                                                                                 AS INOUT_SEQ
                 , '1'                                                                                                                 AS INOUT_METH
                 ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  	  ELSE   (SELECT MIN(SUB_CODE)
				                  	FROM BSA100T
				                	 WHERE COMP_CODE = A.COMP_CODE
				                   	 AND MAIN_CODE = N'M103'
				                   	 AND SUB_CODE <![CDATA[<>]]> N'$')
			  	   END	                     																													AS INOUT_TYPE_DETAIL
                 , B.ITEM_CODE
                 , D.ITEM_ACCOUNT
                 , C.SPEC
                 , B.ORDER_UNIT
                 , '2'                                                                                                                 AS ITEM_STATUS
                 , 0                                                                                                                   AS ORIGINAL_Q
                 , 0                                                                                                                   AS GOOD_STOCK_Q
                 , 0                                                                                                                   AS BAD_STOCK_Q
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                     AS NOINOUT_Q
                 , B.UNIT_PRICE_TYPE                                                                                                   AS PRICE_YN
                 , A.MONEY_UNIT
                 , ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     	 	AS ORDER_UNIT_Q
                 , B.ORDER_P      									   																								AS INOUT_FOR_P
                 , (B.ORDER_P * ISNULL(E.BAD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O
                 , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                             AS ORDER_UNIT_FOR_O
                 , 'Y'                                                                                                                 AS ACCOUNT_YNC
                 , A.EXCHG_RATE_O
                 , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
                 , (B.ORDER_P  * ISNULL(E.BAD_INSPEC_Q,0) * A.EXCHG_RATE_O )             												AS INOUT_I
                 ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                     AS ORDER_UNIT_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    AS ORDER_UNIT_I
                 , C.STOCK_UNIT
                 , ISNULL(B.TRNS_RATE,1)                                                                                               AS TRNS_RATE
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                  											AS INOUT_Q   --재고단위 수량
                 , A.ORDER_TYPE
                 , A.LC_NUM
                 , ''                                                                                                                  AS BL_NUM
                 , B.ORDER_NUM
                 , B.ORDER_SEQ
                 , B.ORDER_Q
                 , '5'                                                                                                                 AS INOUT_CODE_TYPE
                 , CASE WHEN  ISNULL(#{BAD_WH_CODE},'') = '' THEN B.WH_CODE
                 		   ELSE   #{BAD_WH_CODE}
                   END                                                               											    AS WH_CODE
                 , E.INSPEC_DATE                                                                                                       AS INOUT_DATE
                 , ''                                                                                                                  AS INOUT_PRSN
                 , 0                                                                                                                   AS ACCOUNT_Q
                 , '2'                                                                                                                 AS CREATE_LOC
                 , ''                                                                                                                  AS SALE_C_DATE
                 , E.REMARK
                 , E.PROJECT_NO
                 , E.LOT_NO                                                                                                                  AS LOT_NO
                 , '1'                                                                                                                 AS INOUT_TYPE
                 , A.CUSTOM_CODE                                                                                                       AS INOUT_CODE
                  , B.IN_DIV_CODE  AS DIV_CODE
                 , ''                                                                                                                  AS COMPANY_NUM
                 , ISNULL(B.INSTOCK_Q,0)                                                                                               AS INSTOCK_Q
                 , '*'                                                                                                                 AS SALE_DIV_CODE
                 , '*'                                                                                                                 AS SALE_CUSTOM_CODE
                 , '*'                                                                                                                 AS BILL_TYPE
                 , '*'                                                                                                                 AS SALE_TYPE
                 , #{USER_ID}                                                                                                  AS UPDATE_DB_USER
                 , GETDATE()                                                                                                  AS UPDATE_DB_TIME
                 , D.EXCESS_RATE
                 , E.INSPEC_NUM
                 , E.INSPEC_SEQ
                 , A.COMP_CODE AS S_COMP_CODE
                 , E.MAKE_LOT_NO
	             , E.MAKE_DATE
	             , E.MAKE_EXP_DATE
	             , E.RECEIPT_NUM
	             , E.RECEIPT_SEQ
	             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
              FROM            MPO100T A WITH (NOLOCK)
                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                     AND A.DIV_CODE  = B.DIV_CODE
                                                     AND A.ORDER_NUM = B.ORDER_NUM
                   INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                     AND B.ITEM_CODE = C.ITEM_CODE
                   INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                     AND B.DIV_CODE  = D.DIV_CODE
                                                     AND B.ITEM_CODE = D.ITEM_CODE
                   INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                     AND B.IN_DIV_CODE  = E.DIV_CODE
                                                     AND B.ORDER_NUM = E.ORDER_NUM
                                                     AND B.ORDER_SEQ = E.ORDER_SEQ
				   INNER JOIN QMS100T F WITH (NOLOCK) ON E.COMP_CODE   = F.COMP_CODE
				   									 AND E.DIV_CODE    = F.DIV_CODE
				   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
				   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
				   LEFT JOIN BSA100T G WITH (NOLOCK)  ON G.COMP_CODE  = F.COMP_CODE
				  									 AND G.MAIN_CODE  = 'M022'
				  									 AND G.SUB_CODE  != '$'
				  									 AND G.SUB_CODE   = '1'
				  									 AND G.REF_CODE1  = 'Y'
             WHERE A.COMP_CODE                = #{COMP_CODE}
               AND B.IN_DIV_CODE              = #{DIV_CODE}
               AND A.ORDER_TYPE               = N'4'
               AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
               AND B.CONTROL_STATUS           <![CDATA[<>]]> N'9'
               AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
               AND E.INSPEC_NUM               = #{INSPEC_NUM}
               AND E.INSPEC_SEQ               = #{INSPEC_SEQ}
               AND E.BAD_INSPEC_Q             <![CDATA[>]]> 0
               AND E.END_DECISION             <![CDATA[<>]]> N'03'
               AND ISNULL(G.SUB_CODE, '')    != ''
		</if>
	</select>
	<select id="mms202ukrvServiceImpl.selectAutoInputOutBadList" parameterType="Map" resultType="rMap">
			 SELECT ''                                                                                                                  AS INOUT_NUM
                 ,E.INSPEC_SEQ                                                                                                                 AS INOUT_SEQ
                 , '1'                                                                                                                 AS INOUT_METH
                 ,CASE WHEN  B.ORDER_UNIT_P <![CDATA[<=]]> 0 THEN '20'
             		  	  ELSE   (SELECT MIN(SUB_CODE)
				                  	FROM BSA100T
				                	 WHERE COMP_CODE = A.COMP_CODE
				                   	 AND MAIN_CODE = N'M103'
				                   	 AND SUB_CODE <![CDATA[<>]]> N'$')
			  	   END	                     																													AS INOUT_TYPE_DETAIL
                 , B.ITEM_CODE
                 , D.ITEM_ACCOUNT
                 , C.SPEC
                 , B.ORDER_UNIT
                 , ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1)                                                                     	 	AS ORDER_UNIT_Q
                 , '2'                                                                                                                									 AS ITEM_STATUS
                 , 0                                                                                                                   									AS ORIGINAL_Q
                 , 0                                                                                                                   									AS GOOD_STOCK_Q
                 , 0                                                                                                                   									AS BAD_STOCK_Q
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                    												AS NOINOUT_Q
                 , B.UNIT_PRICE_TYPE                                                                                                   						AS PRICE_YN
                 , A.MONEY_UNIT
                 , B.ORDER_P      									   																								AS INOUT_FOR_P
                 , (B.ORDER_P * ISNULL(E.BAD_INSPEC_Q,0))                                                                        					AS INOUT_FOR_O
                 , B.ORDER_UNIT_P                                                                                                      							AS ORDER_UNIT_FOR_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) /  ISNULL(B.TRNS_RATE,1))                                             AS ORDER_UNIT_FOR_O
                 , 'Y'                                                                                                                 AS ACCOUNT_YNC
                 , A.EXCHG_RATE_O
                 , (B.ORDER_P  *  ISNULL(A.EXCHG_RATE_O,1)) 																						AS INOUT_P
                 , (B.ORDER_P  * ISNULL(E.BAD_INSPEC_Q,0) * A.EXCHG_RATE_O )             												AS INOUT_I
                 ,  B.ORDER_UNIT_P * ISNULL(A.EXCHG_RATE_O,1)                                                                                     AS ORDER_UNIT_P
                 , (B.ORDER_UNIT_P * ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(A.EXCHG_RATE_O,1) /  ISNULL(B.TRNS_RATE,1))    AS ORDER_UNIT_I
                 , C.STOCK_UNIT
                 , ISNULL(B.TRNS_RATE,1)                                                                                               AS TRNS_RATE
                 , ISNULL(E.BAD_INSPEC_Q,0)                                                                  											AS INOUT_Q   --재고단위 수량
                 , A.ORDER_TYPE
                 , A.LC_NUM
                 , ''                                                                                                                  AS BL_NUM
                 , B.ORDER_NUM
                 , B.ORDER_SEQ
                 , B.ORDER_Q
                 , '5'                                                                                                                 AS INOUT_CODE_TYPE
                 , CASE WHEN ISNULL(#{BAD_WH_CODE},'') = ''  THEN B.WH_CODE
                           ELSE   #{BAD_WH_CODE}
                    END                                                                AS WH_CODE
                 , E.INSPEC_DATE                                                                                                       AS INOUT_DATE
                 , ''                                                                                                                  AS INOUT_PRSN
                 , 0                                                                                                                   AS ACCOUNT_Q
                 , '2'                                                                                                                 AS CREATE_LOC
                 , ''                                                                                                                  AS SALE_C_DATE
                 , E.REMARK
                 , E.PROJECT_NO
                 , E.LOT_NO                                                                                                                  AS LOT_NO
                 , '1'                                                                                                                 AS INOUT_TYPE
                 , A.CUSTOM_CODE                                                                                                       AS INOUT_CODE
                  , B.IN_DIV_CODE  AS DIV_CODE
                 , ''                                                                                                                  AS COMPANY_NUM
                 , ISNULL(B.INSTOCK_Q,0)                                                                                               AS INSTOCK_Q
                 , '*'                                                                                                                 AS SALE_DIV_CODE
                 , '*'                                                                                                                 AS SALE_CUSTOM_CODE
                 , '*'                                                                                                                 AS BILL_TYPE
                 , '*'                                                                                                                 AS SALE_TYPE
                 , #{USER_ID}	                                                                                                AS UPDATE_DB_USER
                 , GETDATE()                                                                                                    AS UPDATE_DB_TIME
                 , D.EXCESS_RATE
                 , E.INSPEC_NUM
                 , E.INSPEC_SEQ
                 , A.COMP_CODE AS S_COMP_CODE
                 , E.MAKE_LOT_NO
	             , E.MAKE_DATE
	             , E.MAKE_EXP_DATE
	             , E.RECEIPT_NUM
	             , E.RECEIPT_SEQ
	             , ISNULL(E.INSPEC_Q,0) AS INSPEC_Q
              FROM            MPO100T A WITH (NOLOCK)
                   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                     AND A.DIV_CODE  = B.DIV_CODE
                                                     AND A.ORDER_NUM = B.ORDER_NUM
                   INNER JOIN BPR100T C WITH (NOLOCK) ON B.COMP_CODE = C.COMP_CODE
                                                     AND B.ITEM_CODE = C.ITEM_CODE
                   INNER JOIN BPR200T D WITH (NOLOCK) ON B.COMP_CODE = D.COMP_CODE
                                                     AND B.IN_DIV_CODE  = D.DIV_CODE
                                                     AND B.ITEM_CODE = D.ITEM_CODE
                   INNER JOIN QMS200T E WITH (NOLOCK) ON B.COMP_CODE = E.COMP_CODE
                                                     AND B.IN_DIV_CODE  = E.DIV_CODE
                                                     AND B.ORDER_NUM = E.ORDER_NUM
                                                     AND B.ORDER_SEQ = E.ORDER_SEQ
					INNER JOIN QMS100T F WITH (NOLOCK) ON  E.COMP_CODE   = F.COMP_CODE
				   									 AND E.DIV_CODE    = F.DIV_CODE
				   									 AND E.RECEIPT_NUM = F.RECEIPT_NUM
				   									 AND E.RECEIPT_SEQ = F.RECEIPT_SEQ
					LEFT JOIN BSA100T G WITH (NOLOCK)  ON G.COMP_CODE  = F.COMP_CODE
				  									 AND G.MAIN_CODE  = 'M022'
				  									 AND G.SUB_CODE  != '$'
				  									 AND G.SUB_CODE   = '1'
				  									 AND G.REF_CODE1  = 'Y'
             WHERE A.COMP_CODE                = #{COMP_CODE}
               AND B.IN_DIV_CODE                 = #{DIV_CODE}
               AND A.ORDER_TYPE                 = N'4'
               AND ISNULL(A.AGREE_STATUS,'1') <![CDATA[>]]> N'1'
               AND B.CONTROL_STATUS          <![CDATA[<>]]> N'9'
               AND ISNULL(F.INSPEC_FLAG, B.INSPEC_FLAG) = N'Y'
               AND E.INSPEC_NUM               =  #{INSPEC_NUM}
               AND E.INSPEC_SEQ               =  #{INSPEC_SEQ}
               AND E.BAD_INSPEC_Q             <![CDATA[>]]> 0
               AND E.END_DECISION            <![CDATA[<>]]> N'03'
               AND ISNULL(G.SUB_CODE, '')    != ''

	</select>
</mapper>