<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms511ukrvServiceImpl">
					
	<select id="mms511ukrvServiceImpl.selectinoutNoMasterList" parameterType="Map" resultType="rMap">
/* mms511ukrv.Cmms511ukrv[fnMms510QPop] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @COMP_CODE  NVARCHAR(08) /* 법인코드    */
        SET @COMP_CODE = #{S_COMP_CODE}

    /* 데이터 조회 */
    SELECT 
          C1.CUSTOM_NAME AS INOUT_NAME
         , A.INOUT_DATE
         , A.INOUT_CODE
         , A.DEPT_CODE
         , B.TREE_NAME	AS DEPT_NAME
         , A.WH_CODE
         , A.WH_CELL_CODE
         , A.DIV_CODE
         , A.INOUT_PRSN
         , A.INOUT_NUM
         , A.MONEY_UNIT
         , A.EXCHG_RATE_O
         , (CASE WHEN A.CREATE_LOC = '2'
                 THEN '1'
                 ELSE '2'
            END)  AS CREATE_LOC
 		 , SUM(A.INOUT_I)                   AS INOUT_I
		 , SUM(A.INOUT_TAX_AMT)             AS INOUT_TAX_AMT
		 , SUM(A.INOUT_I + A.INOUT_TAX_AMT) AS INOUT_I_TOTAL            
    FROM              BTR100T A  WITH (NOLOCK)
           INNER JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
                                              AND C1.CUSTOM_CODE = A.INOUT_CODE
           INNER JOIN BSA210T B	WITH (NOLOCK)  ON B.COMP_CODE = A.COMP_CODE
           									  AND B.TYPE_LEVEL = A.DIV_CODE
           									  AND B.TREE_CODE = A.DEPT_CODE
    WHERE  A.COMP_CODE        = @COMP_CODE
    AND    A.INOUT_TYPE       = '1'
    AND    A.INOUT_CODE_TYPE  = '4'
    AND    A.CREATE_LOC      IN ('2','6')
<if test="@foren.Ognl@isNotEmpty(INOUT_CODE)">     
    AND    A.INOUT_CODE    LIKE #{INOUT_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)"> 
    AND    A.INOUT_DATE      &gt;= #{INOUT_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
    AND    A.INOUT_DATE      &lt;= #{INOUT_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
    AND    A.WH_CODE          = #{WH_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
    AND    A.INOUT_PRSN       = #{INOUT_PRSN}
</if>
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND    A.DIV_CODE         = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_METH)">
    AND    A.INOUT_METH       = #{INOUT_METH}
</if>
<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
    AND    A.WH_CELL_CODE     = #{WH_CELL_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
    AND    B.TREE_LEVEL  LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND TYPE_LEVEL = B.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
</if>
<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">	
	AND    A.INOUT_NUM     = #{INOUT_NUM}
</if>
    GROUP  BY C1.CUSTOM_NAME, C1.CUSTOM_NAME1, C1.CUSTOM_NAME2  , A.INOUT_DATE  , A.INOUT_CODE   
            , A.WH_CODE     , A.WH_CELL_CODE , A.DIV_CODE       , A.INOUT_PRSN  , A.INOUT_NUM
            , A.MONEY_UNIT  , A.EXCHG_RATE_O , A.CREATE_LOC	,A.DEPT_CODE,B.TREE_NAME
    ORDER  BY INOUT_NAME, A.INOUT_DATE

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END

	</select>
<select id="mms511ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* mms511ukrv.Cmms511ukrv[fnMms510QStd] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID      */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                
    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT A.INOUT_NUM    
         , A.INOUT_SEQ    
         , A.INOUT_METH    
         , A.INOUT_TYPE_DETAIL    
         , A.ITEM_CODE    
         , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1    
                 WHEN @RefItem = '2' THEN C2.ITEM_NAME2    
                                     ELSE C2.ITEM_NAME    
             END)                                                   AS ITEM_NAME    
         , C3.ITEM_ACCOUNT    
         , C2.SPEC    
         , ISNULL(A.ORDER_UNIT, C2.STOCK_UNIT)                      AS ORDER_UNIT    
         , A.ORDER_UNIT_Q    
         , A.ITEM_STATUS    
         , A.INOUT_Q                                                AS ORIGINAL_Q    
         , ISNULL(C.GOOD_STOCK_Q, 0)                                AS GOOD_STOCK_Q    
         , ISNULL(C.BAD_STOCK_Q, 0)                                 AS BAD_STOCK_Q    
         , (CASE WHEN B.ORDER_NUM IS NULL
                 THEN ISNULL(D.QTY,0) - ISNULL(D.RECEIPT_QTY,0)     
                 ELSE ISNULL(B.ORDER_Q, 0) - ISNULL(B.INSTOCK_Q, 0)    
             END)                                                   AS NOINOUT_Q    
         , A.PRICE_YN    
         , A.MONEY_UNIT    
         , A.INOUT_FOR_P    
         , A.INOUT_FOR_O    
         , A.ORDER_UNIT_FOR_P    
         , A.INOUT_FOR_O                                            AS ORDER_UNIT_FOR_O    
         , A.INOUT_TAX_AMT
         , A.INOUT_I + A.INOUT_TAX_AMT                          AS INOUT_TOTAL_I    
         
         , A.ACCOUNT_YNC    
         , A.EXCHG_RATE_O    
         , A.INOUT_P    
         , A.INOUT_I    
         , A.ORDER_UNIT_P    
         , A.INOUT_I                                                AS ORDER_UNIT_I    
         , ISNULL(A.TRANS_COST,  0)                                 AS TRANS_COST    
         , ISNULL(A.TARIFF_AMT, 0)                                  AS TARIFF_AMT    
         , C2.STOCK_UNIT    
         , A.TRNS_RATE    
         , A.INOUT_Q    
         , A.ORDER_TYPE    
         , A.LC_NUM    
         , A.BL_NUM    
         , A.ORDER_NUM    
         , A.ORDER_SEQ    
         , (CASE WHEN B.ORDER_NUM IS NULL
                 THEN ISNULL(D.QTY,0)     
                 ELSE ISNULL(B.ORDER_Q, 0)     
             END)                                                   AS ORDER_Q    
         , A.INOUT_CODE_TYPE    
         , A.DEPT_CODE
         , A.WH_CODE    
         , A.WH_CELL_CODE    
         , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
             END)                                                   AS INOUT_DATE
         , A.INOUT_PRSN    
         , A.ACCOUNT_Q    
         , A.CREATE_LOC    
         , A.SALE_C_DATE    
         , A.REMARK    
         , A.PROJECT_NO    
         , A.LOT_NO    
         , A.INOUT_TYPE    
         , A.INOUT_CODE    
         , A.DIV_CODE    
         , (CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1    
                 WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2    
                                     ELSE C1.CUSTOM_NAME    
             END)                                                   AS CUSTOM_NAME    
         , C1.COMPANY_NUM    
         , (CASE WHEN B.ORDER_NUM IS NULL
                 THEN ISNULL(D.RECEIPT_QTY,0)     
                 ELSE ISNULL(B.INSTOCK_Q, 0)          
             END)                                                   AS INSTOCK_Q    
         , A.SALE_DIV_CODE    
         , A.SALE_CUSTOM_CODE    
         , A.BILL_TYPE    
         , A.SALE_TYPE    
         , A.UPDATE_DB_USER    
         , A.UPDATE_DB_TIME    
         , C3.EXCESS_RATE    
         , A.INSPEC_NUM    
         , A.INSPEC_SEQ    
         , A.BASIS_NUM    
         , A.BASIS_SEQ    
         , ISNULL(A.SCM_FLAG_YN, 'N')                               AS SCM_FLAG_YN    
         , A.TRADE_LOC     
         , ISNULL(C2.STOCK_CARE_YN, 'Y')                            AS STOCK_CARE_YN
         , A.PURCHASE_TYPE
         , A.SALES_TYPE
         , A.PURCHASE_RATE
      --   ,(CASE WHEN ISNULL(A.PURCHASE_RATE,0) = 0
	--		THEN 0 
	--		ELSE ISNULL(ISNULL(A.ORDER_UNIT_FOR_P,0) / ISNULL(A.PURCHASE_RATE,0) *100,0) END)	AS	SALE_BASIS_P
		 , A.SALE_P AS SALE_BASIS_P    
         , A.COMP_CODE    
         , A.INSERT_DB_USER    
         , A.INSERT_DB_TIME  
         , A.TAX_TYPE
         , (CASE WHEN A.LOT_ASSIGNED_YN ='Y' THEN 'true'
         	WHEN A.LOT_ASSIGNED_YN = 'N' THEN 'false'
         	ELSE 'false'
         	END) AS LOT_ASSIGNED_YN  
         , A.SORT_SEQ
    FROM              BTR100T   A  WITH (NOLOCK)    
           LEFT  JOIN MPO200T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE    
                                                AND B.DIV_CODE      = A.DIV_CODE    
                                                AND B.CUSTOM_CODE   = A.INOUT_CODE    
                                                AND B.ORDER_NUM     = A.ORDER_NUM    
                                                AND B.ORDER_SEQ     = A.ORDER_SEQ    
           LEFT  JOIN TIA110T   D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE    
                                                AND D.DIV_CODE      = A.DIV_CODE    
                                                AND D.SO_SER_NO     = A.ORDER_NUM    
                                                AND D.SO_SER        = A.ORDER_SEQ    
           LEFT  JOIN TIA100T   E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE    
                                                AND E.DIV_CODE      = A.DIV_CODE    
                                                AND E.EXPORTER      = A.INOUT_CODE    
                                                AND E.SO_SER_NO     = A.ORDER_NUM    
           LEFT  JOIN BIV100T   C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE    
                                                AND C.DIV_CODE      = A.DIV_CODE    
                                                AND C.WH_CODE       = A.WH_CODE    
                                                AND C.ITEM_CODE     = A.ITEM_CODE    
           INNER JOIN BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE    
                                                AND C1.CUSTOM_CODE  = A.INOUT_CODE    
           INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE    
                                                AND C2.ITEM_CODE    = A.ITEM_CODE    
           INNER JOIN BPR200T   C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE    
                                                AND C3.DIV_CODE     = A.DIV_CODE    
                                                AND C3.ITEM_CODE    = A.ITEM_CODE    
    WHERE  A.COMP_CODE        = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND    A.DIV_CODE         = #{DIV_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
    AND    A.INOUT_NUM        = #{INOUT_NUM}
</if> 
    AND    A.INOUT_TYPE       = N'1'    
    AND    A.CREATE_LOC      IN (N'2', N'6')    
    AND    A.INOUT_CODE_TYPE  = N'4'    
    ORDER BY  A.SORT_SEQ, A.INOUT_DATE DESC, A.INOUT_NUM DESC, A.INOUT_SEQ    

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END
	</select>

<select id="mms511ukrvServiceImpl.selectnoReceiveListMaster" parameterType="Map" resultType="rMap">
	/*입고등록미입고참조 마스터*/

BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

	SELECT 
		A.COMP_CODE
		,A.DIV_CODE
		,A.ORDER_DATE
		,A.ORDER_NUM
		,A.CUSTOM_CODE
		,D.CUSTOM_NAME
		,SUM(ISNULL(B.ORDER_Q,0)) - SUM(ISNULL(C.INOUT_Q,0)) AS SUM_ORDER_Q
		,CASE WHEN SUM(ISNULL(A.TEMPN_01,0)) = 0 
		      THEN SUM((ISNULL(B.ORDER_Q,0)-ISNULL(C.INOUT_Q,0)) * ISNULL(F.ITEM_P,0)) 
		      ELSE SUM(ISNULL(A.TEMPN_01,0))
		  	   END SUM_ORDER_O
		, A.DEPT_CODE
		, B.WH_CODE
		, E.TREE_NAME AS DEPT_NAME
		, D.MONEY_UNIT
	FROM MPO100T A WITH(NOLOCK)
		INNER JOIN	MPO200T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
										  AND A.DIV_CODE    = B.DIV_CODE
										  AND A.ORDER_NUM   = B.ORDER_NUM
										  AND A.CUSTOM_CODE = B.CUSTOM_CODE
		LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, ORDER_NUM, ORDER_SEQ
										 , SUM(INOUT_Q) AS INOUT_Q
									FROM    BTR100T  WITH (NOLOCK)
									WHERE  COMP_CODE   		= #{S_COMP_CODE} --파람
									   AND  DIV_CODE        = #{DIV_CODE} -- 파람					 
									   AND  ORDER_NUM       &gt; ''
									   AND  ITEM_STATUS     = N'1'
									   AND  CREATE_LOC      = N'2'
									   AND  INOUT_CODE_TYPE = N'4'
									   AND  INOUT_Q  		&gt; 0
								   GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, ORDER_NUM, ORDER_SEQ) C ON B.COMP_CODE = C.COMP_CODE
																									 AND B.DIV_CODE  = C.DIV_CODE
																									 AND B.ORDER_NUM = C.ORDER_NUM
																									 AND B.ORDER_SEQ = C.ORDER_SEQ
	
	INNER JOIN  BCM100T D WITH(NOLOCK) ON A.COMP_CODE   = D.COMP_CODE 
									  AND A.CUSTOM_CODE = D.CUSTOM_CODE
 	INNER JOIN BSA210T E WITH(NOLOCK)  ON A.COMP_CODE   = E.COMP_CODE
									  AND A.DIV_CODE 	= E.TYPE_LEVEL
									  AND A.DEPT_CODE 	= E.TREE_CODE 			  
	LEFT JOIN  BPR400T F WITH(NOLOCK)  ON A.COMP_CODE 	= F.COMP_CODE
									  AND A.DIV_CODE 	= F.DIV_CODE
									  AND A.CUSTOM_CODE = F.CUSTOM_CODE
									  AND B.ITEM_CODE   = F.ITEM_CODE 
									  AND F.TYPE 		= '1'
									  AND F.APLY_END_DATE = '29991231'
									  AND F.USE_YN 		= 'Y'								  
									  
	 WHERE   A.COMP_CODE  		= #{S_COMP_CODE}
		 AND B.ORDER_Q 			&gt; ISNULL(C.INOUT_Q, 0)
	 	 AND (A.ORDER_TYPE  	!= '4'   AND A.ORDER_TYPE IS NOT NULL)
         AND (A.AGREE_STATUS 	&gt; '1' AND A.AGREE_STATUS IS NOT NULL)
        -- AND B.ORDER_Q 	 		&gt; ISNULL(B.INSTOCK_Q, 0)
         AND ISNULL(B.RECEIPT_Q,0) = 0
         AND B.CONTROL_STATUS NOT IN('8', '9')
         AND ISNULL(B.INSPEC_FLAG,  'N') = 'N'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		 AND A.DIV_CODE  = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		 AND A.ORDER_DATE    &gt;= #{ORDER_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">	
         AND A.ORDER_DATE    &lt;= #{ORDER_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">	
		 AND B.WH_CODE       = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">	
		AND A.CUSTOM_CODE = #{CUSTOM_CODE} 
		</if>
			 
	GROUP BY A.COMP_CODE , A.DIV_CODE, A.ORDER_DATE, A.ORDER_NUM, A.CUSTOM_CODE, D.CUSTOM_NAME, A.DEPT_CODE
			,B.WH_CODE	,E.TREE_NAME , D.MONEY_UNIT
		
	ORDER BY A.ORDER_DATE, B.WH_CODE, D.CUSTOM_NAME
	
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
</select>	
	
<select id="mms511ukrvServiceImpl.selectnoReceiveListDetail" parameterType="Map" resultType="rMap">
/* mms500ukrv.Cmms500ukrv[fnMms510QRef] Query01 */
/*입고등록미입고참조 디테일*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                
    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 자재 외주검사 사용여부 */
    DECLARE @InspecYN   NVARCHAR(10)
            
    SELECT TOP 1 @InspecYN = SUB_CODE
      FROM BSA100T  WITH (NOLOCK)
     WHERE COMP_CODE    = @CompCode
       AND MAIN_CODE    = N'Q003'
       AND REF_CODE1 LIKE 'Y%'
        
    SET @InspecYN = ISNULL(@InspecYN, 'N')
		--추가 시작 20160218
	DECLARE @CUSTOM_CODE nvarchar(8)

	SELECT TOP 1 @CUSTOM_CODE = CUSTOM_CODE 
	FROM MPO200T
	WHERE ORDER_NUM = #{F_ORDER_NUM}
	--추가 끝

    /* 데이터 조회 */

        SELECT CAST('' AS BIT)                                                             AS GUBUN
             , B.ITEM_CODE                                                                 AS ITEM_CODE
             , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                         ELSE C1.ITEM_NAME
                 END)                                                                      AS ITEM_NAME
             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
             , C1.SPEC                                                                     AS SPEC
             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                 END)                                                                      AS DVRY_DATE
             , A.DIV_CODE                                                                  AS DIV_CODE
             , B.ORDER_UNIT                                                                AS ORDER_UNIT
             , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
             , ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0)   AS REMAIN_Q
             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
             , ISNULL(B.ORDER_Q - ISNULL(B.INSTOCK_Q,0), 0)                                AS NOINOUT_Q
             , B.ORDER_Q                                                                   AS ORDER_Q
             , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
             , B.MONEY_UNIT                                                                AS MONEY_UNIT
             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
             
       --    , B.ORDER_P                                                                   AS ORDER_P
       --    , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
       --    , ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0) * B.ORDER_UNIT_P   AS ORDER_O
       --    , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
       --    , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
             
             , ISNULL(D.PURCHASE_P, 0)													AS ORDER_P
             , ISNULL(D.PURCHASE_P, 0)													AS ORDER_UNIT_P
             , (ISNULL(B.ORDER_UNIT_Q,0) * ISNULL(D.PURCHASE_P,0))    					AS ORDER_O  
             , ISNULL(D.PURCHASE_P, 0)                                                  AS ORDER_LOC_P
			 , (ISNULL(B.ORDER_UNIT_Q,0) * ISNULL(D.PURCHASE_P,0))    					AS ORDER_LOC_O
             
             , B.ORDER_NUM                                                                 AS ORDER_NUM
             , B.ORDER_SEQ                                                                 AS ORDER_SEQ
             , A.LC_NUM                                                                    AS LC_NUM
             , B.WH_CODE                                                                   AS WH_CODE
             , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
             , A.ORDER_TYPE                                                                AS ORDER_TYPE
             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
             , ISNULL(B.TRNS_RATE,1)                                                       AS TRNS_RATE
             , ISNULL(B.INSTOCK_Q,0)                                                       AS INSTOCK_Q
             , B.REMARK                                                                    AS REMARK
             , B.PROJECT_NO                                                                AS PROJECT_NO
             , C2.EXCESS_RATE                                                              AS EXCESS_RATE
             , A.ORDER_PRSN                                                                AS ORDER_PRSN
             , ISNULL(R1.GOOD_STOCK_Q,0)                                                   AS GOOD_STOCK_Q
             , ISNULL(R1.BAD_STOCK_Q,0)                                                    AS BAD_STOCK_Q
             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
             , ISNULL(D.PURCHASE_TYPE, 0)                                           AS PURCHASE_TYPE
			 , ISNULL(D.PURCHASE_RATE, 0)                                           AS PURCHASE_RATE
			 , D.SALES_TYPE
			 , ISNULL(D.PURCHASE_P,0)  AS PURCHASE_P
             , C1.SALE_BASIS_P	
			 , C1.TAX_TYPE		--20160218 추가
             
             
          FROM              MPO100T A  WITH (NOLOCK)
                INNER JOIN  MPO200T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                    AND B.DIV_CODE    = A.DIV_CODE
                                                    AND B.CUSTOM_CODE = A.CUSTOM_CODE
                                                    AND B.ORDER_NUM   = A.ORDER_NUM
                INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = B.COMP_CODE
                                                    AND C1.ITEM_CODE  = B.ITEM_CODE
                INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE  = B.COMP_CODE
                                                    AND C2.DIV_CODE   = B.DIV_CODE
                                                    AND C2.ITEM_CODE  = B.ITEM_CODE
                LEFT  JOIN  BIV100T R1 WITH (NOLOCK) ON R1.COMP_CODE  = B.COMP_CODE
                                                    AND R1.WH_CODE    = B.WH_CODE
                                                    AND R1.ITEM_CODE  = B.ITEM_CODE
                                                    AND R1.DIV_CODE   = B.DIV_CODE
                LEFT JOIN (SELECT
								  A.ITEM_CODE
								, A.ITEM_P              AS PURCHASE_P
								, A.PURCHASE_RATE
								, A.PURCHASE_TYPE
								, A.SALES_TYPE
								, B.SALE_BASIS_P
								, MAX(A.CUSTOM_CODE) AS CUSTOM_CODE
								FROM         BPR400T A WITH(NOLOCK) 
								INNER JOIN BPR100T  B WITH(NOLOCK) ON A.COMP_CODE       = B.COMP_CODE 
																					  AND A.ITEM_CODE         = B.ITEM_CODE
								INNER JOIN BCM100T C WITH(NOLOCK) ON A.COMP_CODE       = C.COMP_CODE 
																					  AND A.CUSTOM_CODE    = C.CUSTOM_CODE
								 WHERE A.COMP_CODE  = #{S_COMP_CODE}
									AND A.DIV_CODE      = #{DIV_CODE}		
									AND A.TYPE              = '1'
									AND B.USE_YN          = 'Y'
									AND C.USE_YN          = 'Y'
									AND A.APLY_START_DATE = (SELECT TOP 1 
																			MAX(X.APLY_START_DATE) AS APLY_START_DATE
																			FROM  BPR400T X WITH(NOLOCK)
																			 WHERE X.COMP_CODE    = A.COMP_CODE
																				AND X.DIV_CODE        = A.DIV_CODE
																				AND X.TYPE                = A.TYPE
																				AND X.ITEM_CODE       = A.ITEM_CODE
																				AND X.MONEY_UNIT    = A.MONEY_UNIT
																				AND X.ORDER_UNIT     = A.ORDER_UNIT
																				AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.APLY_END_DATE    &gt; CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.CUSTOM_CODE = A.CUSTOM_CODE
																			)
																									
							AND A.CUSTOM_CODE = @CUSTOM_CODE --추가 20160218
							GROUP BY A.ITEM_CODE, A.ITEM_P,  A.PURCHASE_RATE, A.PURCHASE_TYPE, B.SALE_BASIS_P, A.SALES_TYPE
							--ORDER BY A.ITEM_P
							) D ON B.ITEM_CODE   = D.ITEM_CODE 
							   AND B.CUSTOM_CODE = D.CUSTOM_CODE
         WHERE A.COMP_CODE    = @CompCode 
           AND A.DIV_CODE     = #{DIV_CODE}
           AND (A.ORDER_TYPE  != '4'           AND A.ORDER_TYPE IS NOT NULL)
           AND (A.AGREE_STATUS &gt; '1'           AND A.AGREE_STATUS IS NOT NULL)
  
           AND B.ORDER_NUM     = #{F_ORDER_NUM}

           AND B.ORDER_Q      &gt; ISNULL(B.INSTOCK_Q, 0)
           AND ISNULL(B.RECEIPT_Q,0) = 0
           AND B.CONTROL_STATUS NOT IN('8', '9')
           AND ((ISNULL(B.INSPEC_FLAG,  'N') = 'N' AND @InspecYN = 'Y') OR (@InspecYN != 'Y'))
        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ


    SET ARITHABORT OFF
    SET NOCOUNT OFF
END

</select>
<select id="mms511ukrvServiceImpl.selectnoReceiveList_02" parameterType="Map" resultType="rMap">
/* mms500ukrv.Cmms500ukrv[fnMms510QRef] Query01 */
/*기존 입고등록미입고참조*/
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                
    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 자재 외주검사 사용여부 */
    DECLARE @InspecYN   NVARCHAR(10)
            
    SELECT TOP 1 @InspecYN = SUB_CODE
      FROM BSA100T  WITH (NOLOCK)
     WHERE COMP_CODE    = @CompCode
       AND MAIN_CODE    = N'Q003'
       AND REF_CODE1 LIKE 'Y%'
        
    SET @InspecYN = ISNULL(@InspecYN, 'N')

    /* 파라메터값 설정 */
    DECLARE @QueryFlag      NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */

    SET @QueryFlag = #{CREATE_LOC}

    /* 데이터 조회 */
    /* 자재 */
    IF @QueryFlag = '1'
    BEGIN
        SELECT CAST('' AS BIT)                                                             AS GUBUN
             , B.ITEM_CODE                                                                 AS ITEM_CODE
             , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                         ELSE C1.ITEM_NAME
                 END)                                                                      AS ITEM_NAME
             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
             , C1.SPEC                                                                     AS SPEC
             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                 END)                                                                      AS DVRY_DATE
             , A.DIV_CODE                                                                  AS DIV_CODE
             , B.ORDER_UNIT                                                                AS ORDER_UNIT
             , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
             , ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0)   AS REMAIN_Q
             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
             , ISNULL(B.ORDER_Q - ISNULL(B.INSTOCK_Q,0), 0)                                AS NOINOUT_Q
             , B.ORDER_Q                                                                   AS ORDER_Q
             , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
             , B.MONEY_UNIT                                                                AS MONEY_UNIT
             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
             
       --    , B.ORDER_P                                                                   AS ORDER_P
       --    , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
       --    , ISNULL(B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1), 0) * B.ORDER_UNIT_P   AS ORDER_O
       --    , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
       --    , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
             
             , ISNULL(D.PURCHASE_P, 0)													AS ORDER_P
             , ISNULL(D.PURCHASE_P, 0)													AS ORDER_UNIT_P
             , (ISNULL(B.ORDER_UNIT_Q,0) * ISNULL(D.PURCHASE_P,0))    					AS ORDER_O  
             , ISNULL(D.PURCHASE_P, 0)                                                  AS ORDER_LOC_P
			 , (ISNULL(B.ORDER_UNIT_Q,0) * ISNULL(D.PURCHASE_P,0))    					AS ORDER_LOC_O
             
             , B.ORDER_NUM                                                                 AS ORDER_NUM
             , B.ORDER_SEQ                                                                 AS ORDER_SEQ
             , A.LC_NUM                                                                    AS LC_NUM
             , B.WH_CODE                                                                   AS WH_CODE
             , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
             , A.ORDER_TYPE                                                                AS ORDER_TYPE
             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
             , ISNULL(B.TRNS_RATE,1)                                                       AS TRNS_RATE
             , ISNULL(B.INSTOCK_Q,0)                                                       AS INSTOCK_Q
             , B.REMARK                                                                    AS REMARK
             , B.PROJECT_NO                                                                AS PROJECT_NO
             , C2.EXCESS_RATE                                                              AS EXCESS_RATE
             , A.ORDER_PRSN                                                                AS ORDER_PRSN
             , ISNULL(R1.GOOD_STOCK_Q,0)                                                   AS GOOD_STOCK_Q
             , ISNULL(R1.BAD_STOCK_Q,0)                                                    AS BAD_STOCK_Q
             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
             , ISNULL(D.PURCHASE_TYPE, 0)                                           AS PURCHASE_TYPE
			 , ISNULL(D.PURCHASE_RATE, 0)                                           AS PURCHASE_RATE
			 , D.SALES_TYPE
			 , ISNULL(D.PURCHASE_P,0)  AS PURCHASE_P
             , C1.SALE_BASIS_P	

             
             
          FROM              MPO100T A  WITH (NOLOCK)
                INNER JOIN  MPO200T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                    AND B.DIV_CODE    = A.DIV_CODE
                                                    AND B.CUSTOM_CODE = A.CUSTOM_CODE
                                                    AND B.ORDER_NUM   = A.ORDER_NUM
                INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = B.COMP_CODE
                                                    AND C1.ITEM_CODE  = B.ITEM_CODE
                INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE  = B.COMP_CODE
                                                    AND C2.DIV_CODE   = B.DIV_CODE
                                                    AND C2.ITEM_CODE  = B.ITEM_CODE
                LEFT  JOIN  BIV100T R1 WITH (NOLOCK) ON R1.COMP_CODE  = B.COMP_CODE
                                                    AND R1.WH_CODE    = B.WH_CODE
                                                    AND R1.ITEM_CODE  = B.ITEM_CODE
                                                    AND R1.DIV_CODE   = B.DIV_CODE
                LEFT JOIN (SELECT
								  A.ITEM_CODE
								, A.ITEM_P              AS PURCHASE_P
								, A.PURCHASE_RATE
								, A.PURCHASE_TYPE
								, A.SALES_TYPE
								, B.SALE_BASIS_P
								, MAX(A.CUSTOM_CODE) AS CUSTOM_CODE
								FROM         BPR400T A WITH(NOLOCK) 
								INNER JOIN BPR100T  B WITH(NOLOCK) ON A.COMP_CODE       = B.COMP_CODE 
																					  AND A.ITEM_CODE         = B.ITEM_CODE
								INNER JOIN BCM100T C WITH(NOLOCK) ON A.COMP_CODE       = C.COMP_CODE 
																					  AND A.CUSTOM_CODE    = C.CUSTOM_CODE
								 WHERE A.COMP_CODE  = #{S_COMP_CODE}
									AND A.DIV_CODE      = #{DIV_CODE}		
									AND A.TYPE              = '1'
									AND B.USE_YN          = 'Y'
									AND C.USE_YN          = 'Y'
									AND A.APLY_START_DATE = (SELECT TOP 1 
																			MAX(X.APLY_START_DATE) AS APLY_START_DATE
																			FROM  BPR400T X WITH(NOLOCK)
																			 WHERE X.COMP_CODE    = A.COMP_CODE
																				AND X.DIV_CODE        = A.DIV_CODE
																				AND X.TYPE                = A.TYPE
																				AND X.ITEM_CODE       = A.ITEM_CODE
																				AND X.MONEY_UNIT    = A.MONEY_UNIT
																				AND X.ORDER_UNIT     = A.ORDER_UNIT
																				AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.APLY_END_DATE    &gt; CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.CUSTOM_CODE = A.CUSTOM_CODE
																			)

							GROUP BY A.ITEM_CODE, A.ITEM_P,  A.PURCHASE_RATE, A.PURCHASE_TYPE, B.SALE_BASIS_P, A.SALES_TYPE
							--ORDER BY A.ITEM_P
							) D ON B.ITEM_CODE   = D.ITEM_CODE 
							   AND B.CUSTOM_CODE = D.CUSTOM_CODE
         WHERE A.COMP_CODE    = @CompCode 
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND A.DIV_CODE     = #{DIV_CODE}
</if> 
           AND (A.ORDER_TYPE  != '4'           AND A.ORDER_TYPE IS NOT NULL)
           AND (A.AGREE_STATUS &gt; '1'           AND A.AGREE_STATUS IS NOT NULL)

           AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
           
           AND A.DEPT_CODE = #{DEPT_CODE}
  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
           AND A.ORDER_TYPE   = #{ORDER_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
           AND A.ORDER_PRSN   = #{ORDER_PRSN}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
           AND B.DVRY_DATE   &gt;= #{DVRY_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
           AND B.DVRY_DATE   &lt;= #{DVRY_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
           AND B.WH_CODE      = #{WH_CODE}
</if> 
           AND B.ORDER_Q      &gt; ISNULL(B.INSTOCK_Q, 0)
           AND ISNULL(B.RECEIPT_Q,0) = 0
           AND B.CONTROL_STATUS NOT IN('8', '9')
           AND ((ISNULL(B.INSPEC_FLAG,  'N') = 'N' AND @InspecYN = 'Y') OR (@InspecYN != 'Y'))
        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
    END

    /* 무역 */
    IF @QueryFlag = '2'
    BEGIN            
        EXEC unilite.SP_MATRL_ImportNotInReference @CompCode
                                                 , #{DIV_CODE}
                                                 , #{FR_DVRY_DATE}
                                                 , #{TO_DVRY_DATE}
                                                 , #{CUSTOM_CODE}
                                                 , #{ORDER_TYPE}
                                                 , #{WH_CODE}
                                                 , #{MONEY_UNIT}
                                                 , #{ORDER_PRSN}
                                                 , @UserId
                                                 , 100  /* 내용을 파악한 후에 삭제해야 함*/
    END
            
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END

</select>
<select id="mms511ukrvServiceImpl.selectreturnPossibleList" parameterType="Map" resultType="rMap">
/* mms511ukrv.Cmms511ukrv[fnRtn100QRef] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
                
    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 파라메터값 설정 */
    DECLARE @QueryFlag      NVARCHAR(01)        /*(필수) 자재/무역 업무구분   */

    SET @QueryFlag = #{CREATE_LOC}

    /* 데이터 조회 */
    /* 자재 */
    IF @QueryFlag = '1'
    BEGIN
        SELECT CAST('' AS BIT)                                                             AS GUBUN
             , B.ITEM_CODE                                                                 AS ITEM_CODE
             , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE C1.ITEM_NAME
               END                                                                         AS ITEM_NAME
             , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
             , C1.SPEC                                                                     AS SPEC
             , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                 END)                                                                      AS DVRY_DATE
             , A.DIV_CODE                                                                  AS DIV_CODE
             , B.ORDER_UNIT                                                                AS ORDER_UNIT
             , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
             , ((ISNULL(B.INSTOCK_Q,0) / ISNULL(B.TRNS_RATE,1)) * -1)                      AS REMAIN_Q
             , C1.STOCK_UNIT                                                               AS STOCK_UNIT
             , (ISNULL(B.INSTOCK_Q,0) * -1 )                                               AS NOINOUT_Q
             , B.ORDER_Q                                                                   AS ORDER_Q
             , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
             , B.MONEY_UNIT                                                                AS MONEY_UNIT
             , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
             , B.ORDER_P                                                                   AS ORDER_P
             , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
             , ((ISNULL(B.INSTOCK_Q,0)/ISNULL(B.TRNS_RATE,1)) * -1) * B.ORDER_UNIT_P       AS ORDER_O
             , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
             , ((ISNULL(B.INSTOCK_Q,0)/ISNULL(B.TRNS_RATE,1)) * -1) * B.ORDER_LOC_P        AS ORDER_LOC_O
             , B.ORDER_NUM                                                                 AS ORDER_NUM
             , B.ORDER_SEQ                                                                 AS ORDER_SEQ
             , A.LC_NUM                                                                    AS LC_NUM
             , B.WH_CODE                                                                   AS WH_CODE
             , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
             , A.ORDER_TYPE                                                                AS ORDER_TYPE
             , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
             , ISNULL(B.TRNS_RATE,1)                                                       AS TRNS_RATE
             , ISNULL(B.INSTOCK_Q,0)                                                       AS INSTOCK_Q
             , B.REMARK                                                                    AS REMARK
             , B.PROJECT_NO                                                                AS PROJECT_NO
             , C2.EXCESS_RATE                                                              AS EXCESS_RATE
             , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
             , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
             , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
             , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
             , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
             , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
       FROM                MPO100T A  WITH (NOLOCK)
               INNER JOIN  MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
                                                   AND  B.DIV_CODE    = A.DIV_CODE
                                                   AND  B.CUSTOM_CODE = A.CUSTOM_CODE
                                                   AND  B.ORDER_NUM   = A.ORDER_NUM
               INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                                   AND C1.ITEM_CODE   = B.ITEM_CODE
               INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                   AND C2.DIV_CODE    = B.DIV_CODE
                                                   AND C2.ITEM_CODE   = B.ITEM_CODE
               INNER JOIN (SELECT COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ
                                , SUM(INOUT_Q) AS INOUT_Q
                             FROM BTR100T  WITH (NOLOCK)
                            WHERE COMP_CODE  = @CompCode
						<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                              AND DIV_CODE   = #{DIV_CODE}
                   		</if>  
                              AND INOUT_TYPE = N'1'
						<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                              AND WH_CODE    = #{WH_CODE}
                        </if>
                            GROUP BY COMP_CODE, DIV_CODE, INOUT_CODE, ORDER_NUM, ORDER_SEQ) E ON E.COMP_CODE   = B.COMP_CODE
                                                                                             AND E.DIV_CODE    = B.DIV_CODE
                                                                                             AND E.INOUT_CODE  = B.CUSTOM_CODE
                                                                                             AND E.ORDER_NUM   = B.ORDER_NUM
                                                                                             AND E.ORDER_SEQ   = B.ORDER_SEQ
        WHERE   A.COMP_CODE    = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND     A.DIV_CODE     = #{DIV_CODE}
</if>  
        AND    (A.ORDER_TYPE  != N'4'           AND A.ORDER_TYPE   IS NOT NULL)
        AND    (A.AGREE_STATUS &gt; N'1'           AND A.AGREE_STATUS IS NOT NULL)
        AND    (B.INSTOCK_Q    &gt; 0              AND B.INSTOCK_Q    IS NOT NULL)
        AND     B.CONTROL_STATUS NOT IN('8', '9')
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
        AND     A.CUSTOM_CODE  = #{CUSTOM_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
        AND     A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
        AND     A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
        AND     A.ORDER_TYPE   = #{ORDER_TYPE}
</if>  
        ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
    END
    
    /* 무역 */
    IF @QueryFlag = '2'
    BEGIN            
        EXEC unilite.SP_MATRL_ImportReturnNotInReference @CompCode
                                                       , #{DIV_CODE}
                                                       , #{FR_ORDER_DATE}
                                                       , #{TO_ORDER_DATE}
                                                       , #{CUSTOM_CODE}
                                                       , #{ORDER_TYPE}
                                                       , #{MONEY_UNIT}
                                                       , @UserId
                                                       , 100  /* 내용을 파악한 후에 삭제해야 함*/
    END
            
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END

</select>

<select id="mms511ukrvServiceImpl.selectinspectResultListMaster" parameterType="Map" resultType="rMap">
	/*입고등록접수결과참조 마스터*/

BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

	SELECT 
		A.COMP_CODE
		,A.DIV_CODE
		,A.RECEIPT_DATE
		,A.RECEIPT_NUM
		,A.CUSTOM_CODE
		,D.CUSTOM_NAME
		,SUM(ISNULL(A.RECEIPT_Q,0)) - SUM(ISNULL(C.INOUT_Q,0)) AS SUM_RECEIPT_Q
		,CASE WHEN SUM(ISNULL(A.TEMPN_01,0)) = 0 
		      THEN SUM((ISNULL(A.RECEIPT_Q,0)-ISNULL(C.INOUT_Q,0)) * ISNULL(F.ITEM_P,0)) 
		      ELSE SUM(ISNULL(A.TEMPN_01,0))
		  	   END SUM_RECEIPT_O
		, A.DEPT_CODE
		, A.WH_CODE
		, E.TREE_NAME AS DEPT_NAME
		, D.MONEY_UNIT
	FROM QMS100T A WITH(NOLOCK)
		INNER JOIN	QMS200T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
										  AND A.DIV_CODE    = B.DIV_CODE
										  AND A.RECEIPT_NUM = B.RECEIPT_NUM
										  AND A.RECEIPT_SEQ = B.RECEIPT_SEQ 
		 LEFT JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
										 , SUM(INOUT_Q) AS INOUT_Q
									FROM    BTR100T  WITH (NOLOCK)
									WHERE  COMP_CODE   = #{S_COMP_CODE} --파람
									   AND  DIV_CODE        = #{DIV_CODE} -- 파람					 
									   AND  INSPEC_NUM      &gt; ''
									   AND  ITEM_STATUS     = N'1'
									   AND  CREATE_LOC      = N'2'
									   AND  INOUT_CODE_TYPE = N'4'
									   AND  INOUT_Q  &gt; 0
								   GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ) C ON B.COMP_CODE   = C.COMP_CODE
																								 AND  B.DIV_CODE      = C.DIV_CODE
																								 AND  B.INSPEC_NUM  = C.INSPEC_NUM
																								 AND  B.INSPEC_SEQ   = C.INSPEC_SEQ
					
	
	INNER JOIN  BCM100T D WITH(NOLOCK) ON A.COMP_CODE   = D.COMP_CODE 
									  AND A.CUSTOM_CODE = D.CUSTOM_CODE
 	INNER JOIN BSA210T E WITH(NOLOCK)  ON A.COMP_CODE = E.COMP_CODE
									  AND A.DIV_CODE = E.TYPE_LEVEL
									  AND A.DEPT_CODE = E.TREE_CODE 			  
	LEFT JOIN  BPR400T F WITH(NOLOCK)  ON A.COMP_CODE = F.COMP_CODE
									  AND A.DIV_CODE = F.DIV_CODE
									  AND A.CUSTOM_CODE = F.CUSTOM_CODE
									  AND A.ITEM_CODE  = F.ITEM_CODE 
									  AND F.TYPE = '1'
									  AND F.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)
                                                                FROM BPR400T WITH (NOLOCK)
                                                                WHERE COMP_CODE         = F.COMP_CODE
                                                                AND   TYPE              = F.TYPE
                                                                AND   DIV_CODE          = F.DIV_CODE
                                                                AND   ITEM_CODE         = F.ITEM_CODE
                                                                AND   CUSTOM_CODE       = F.CUSTOM_CODE
                                                                AND   MONEY_UNIT        = F.MONEY_UNIT
                                                                AND   ORDER_UNIT        = F.ORDER_UNIT
                                                                AND   APLY_START_DATE   &lt;= CONVERT(NVARCHAR, GETDATE(), 112)
                                                                )
									  AND F.APLY_END_DATE = '29991231'
									  AND F.USE_YN = 'Y'								  
									  
									  
									  
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
			AND B.GOOD_INSPEC_Q &gt; ISNULL(C.INOUT_Q, 0)
			
			AND ISNULL(A.CLOSE_YN,'N') = 'N'
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE  = #{DIV_CODE}
			</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
		 AND A.RECEIPT_DATE    &gt;= #{RECEIPT_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">	
         AND A.RECEIPT_DATE    &lt;= #{RECEIPT_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">	
		 AND A.WH_CODE       = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">	
		AND A.CUSTOM_CODE = #{CUSTOM_CODE} 
		</if>
			 
			
		GROUP BY A.COMP_CODE , A.DIV_CODE, A.RECEIPT_DATE, A.RECEIPT_NUM, A.CUSTOM_CODE, D.CUSTOM_NAME, A.DEPT_CODE
		,A.WH_CODE	,E.TREE_NAME , D.MONEY_UNIT
		
	ORDER BY A.RECEIPT_DATE, A.WH_CODE, D.CUSTOM_NAME
	
    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
	
	
	
	
</select>


<select id="mms511ukrvServiceImpl.selectinspectResultListDetail" parameterType="Map" resultType="rMap">
/*입고등록접수결과참조 디테일*/
BEGIN 

DECLARE    @COMP_CODE         NVARCHAR(20)
	      ,@DIV_CODE             NVARCHAR(20)
		  ,@INSPEC_DATE_FR    NVARCHAR(08)
		  ,@INSPEC_DATE_TO    NVARCHAR(08)
		  ,@WH_CODE             NVARCHAR(08)
		  ,@DEPT_CODE           NVARCHAR(08)

		SET @COMP_CODE       = #{S_COMP_CODE}
		SET @DIV_CODE        = #{DIV_CODE}
		SET @INSPEC_DATE_FR  = #{DVRY_DATE_FR}
		SET @INSPEC_DATE_TO  = #{DVRY_DATE_FR}
 
 		--추가 시작 20160204
		DECLARE @CUSTOM_CODE nvarchar(8)

		SELECT TOP 1 @CUSTOM_CODE = CUSTOM_CODE 
		FROM QMS200T
		WHERE RECEIPT_NUM = #{F_RECEIPT_NUM}
		--추가 끝
 
       SELECT CAST('' AS BIT)                                                                 AS GUBUN
                 , A.ITEM_CODE                                                                  AS ITEM_CODE
                 , A1.ITEM_NAME																   AS ITEM_NAME         
                 , A2.ITEM_ACCOUNT                                                          AS ITEM_ACCOUNT
                 , A1.SPEC                                                                         AS SPEC
                 , ISNULL(B.DVRY_DATE, '')                                                  AS DVRY_DATE
                 , A.INSPEC_DATE                                                               AS INSPEC_DATE
                 , A.DIV_CODE                                                                   AS DIV_CODE
                 , A.ORDER_UNIT                                                                AS ORDER_UNIT
				 , ISNULL(A.GOOD_INSPEC_Q, 0)                                          AS ORDER_UNIT_Q
                 , (ISNULL(A.GOOD_INSPEC_Q,0) - (ISNULL(C.INOUT_Q,0) / ISNULL(CASE WHEN A.TRNS_RATE = 0 THEN 1 ELSE A.TRNS_RATE END ,1))) AS REMAIN_Q 
                 , A1.STOCK_UNIT                                                               AS STOCK_UNIT
				 , (ISNULL(A.GOOD_INSPEC_Q,0) - (ISNULL(C.INOUT_Q,0) / ISNULL(CASE WHEN A.TRNS_RATE = 0 THEN 1 ELSE A.TRNS_RATE END ,1))) AS NOINOUT_Q 
				 , ISNULL(A.GOOD_INSPEC_Q, 0)                                           AS ORDER_Q
                 , '1'                                                                                 AS ITEM_STATUS
                 , ISNULL(B.UNIT_PRICE_TYPE, 'Y')                                          AS UNIT_PRICE_TYPE
                 , ISNULL(B.MONEY_UNIT, 'KRW')                                           AS MONEY_UNIT
                 , ISNULL(B.EXCHG_RATE_O, 1)                                              AS EXCHG_RATE_O
                 , ISNULL(D.PURCHASE_P, 0)													AS ORDER_P
                 , ISNULL(D.PURCHASE_P, 0)													AS ORDER_UNIT_P
                 , (ISNULL(A.GOOD_INSPEC_Q,0) * ISNULL(D.PURCHASE_P,0))    AS ORDER_O  
                 , ISNULL(D.PURCHASE_P, 0)                                                 AS ORDER_LOC_P
				 , (ISNULL(A.GOOD_INSPEC_Q,0) * ISNULL(D.PURCHASE_P,0))    AS ORDER_LOC_O
                 , B.ORDER_NUM                                                                AS ORDER_NUM
                 , B.ORDER_SEQ                                                                  AS ORDER_SEQ
                 , ''                                                                                   AS LC_NUM
                 , B.WH_CODE                                                                    AS WH_CODE
                 , B.ORDER_REQ_NUM                                                          AS ORDER_REQ_NUM
                 , A.ORDER_TYPE                                                                 AS ORDER_TYPE
                 , A.CUSTOM_CODE                                                             AS CUSTOM_CODE
                 , A3.CUSTOM_NAME															AS CUSTOM_NAME
                 , ISNULL(CASE WHEN A.TRNS_RATE = 0 THEN 1 ELSE A.TRNS_RATE END, 1) AS TRNS_RATE                                              
                 , ISNULL(A.INSTOCK_Q, 0)                                                   AS INSTOCK_Q                                              
                 , A2.EXCESS_RATE                                                              AS EXCESS_RATE
                 , A.INSPEC_NUM                                                                AS INSPEC_NUM
                 , A.INSPEC_SEQ                                                                 AS INSPEC_SEQ
                 , (A.GOOD_INSPEC_Q - ISNULL(A.INSTOCK_Q, 0))                   AS PORE_Q
                 , A.REMARK                                                                      AS REMARK
                 , A.PROJECT_NO                                                                AS PROJECT_NO
                 , CONVERT(NVARCHAR(20), '')                                             AS LC_NO
                 , CONVERT(NVARCHAR(20), '')                                             AS BL_NO
                 , CONVERT(NVARCHAR(20), '')                                             AS BASIS_NUM
                 , CONVERT(NUMERIC(3,0), 0)                                               AS BASIS_SEQ
                 , CONVERT(NVARCHAR(10), '')                                            AS LC_DATE
                 , CONVERT(NVARCHAR(10), '')                                            AS INVOICE_DATE
                 , CONVERT(NVARCHAR(6), '')                                             AS TRADE_LOC
                 , ISNULL(D.PURCHASE_TYPE, 0)                                           AS PURCHASE_TYPE
				 , ISNULL(D.PURCHASE_RATE, 0)                                           AS PURCHASE_RATE
				 , D.SALES_TYPE
				 , ISNULL(D.PURCHASE_P,0)  AS PURCHASE_P
                 , A1.SALE_BASIS_P	
				 , A1.TAX_TYPE	--20160218 추가
			FROM         QMS200T A   WITH(NOLOCK)
			INNER JOIN QMS100T AA WITH(NOLOCK) ON A.COMP_CODE = AA.COMP_CODE
												AND A.DIV_CODE = AA.DIV_CODE
												AND A.RECEIPT_NUM = AA.RECEIPT_NUM
												AND A.RECEIPT_SEQ = AA.RECEIPT_SEQ
			
			INNER JOIN  BPR100T A1  WITH(NOLOCK) ON A.COMP_CODE = A1.COMP_CODE 
																	AND A.ITEM_CODE    = A1.ITEM_CODE
			INNER JOIN  BPR200T A2  WITH(NOLOCK) ON A.COMP_CODE = A2.COMP_CODE 
																	AND A.DIV_CODE     = A2.DIV_CODE 
																	AND A.ITEM_CODE    = A2.ITEM_CODE
			INNER JOIN  BCM100T A3 WITH(NOLOCK) ON A.COMP_CODE    = A3.COMP_CODE 
																	AND A.CUSTOM_CODE = A3.CUSTOM_CODE
			 LEFT JOIN (SELECT A.ORDER_NUM, B.ORDER_SEQ, B.ORDER_UNIT_Q, B.ORDER_Q, B.DVRY_DATE
									   ,B.UNIT_PRICE_TYPE, B.MONEY_UNIT, B.EXCHG_RATE_O, B.ORDER_P, B.ORDER_UNIT_P, B.ORDER_O
									   ,B.ORDER_LOC_P, B.ORDER_LOC_O, B.WH_CODE, B.ORDER_REQ_NUM
								FROM         MPO100T A WITH(NOLOCK)
								INNER JOIN MPO200T B  WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
																					   AND A.DIV_CODE     = B.DIV_CODE 
																					   AND A.ORDER_NUM = B.ORDER_NUM
							  WHERE A.COMP_CODE = @COMP_CODE
								   AND  A.DIV_CODE   = @DIV_CODE
								   AND  A.ORDER_TYPE   != '4'
								   AND  A.AGREE_STATUS  &gt; '1'
				 				   AND  B.CONTROL_STATUS NOT IN('8', '9')
							) B ON A.ORDER_NUM = B.ORDER_NUM
							   AND A.ORDER_SEQ   = B.ORDER_SEQ
			 LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
									 , SUM(INOUT_Q) AS INOUT_Q
								FROM    BTR100T  WITH (NOLOCK)
								WHERE  COMP_CODE   = @COMP_CODE
								   AND  DIV_CODE        = @DIV_CODE					 
								   AND  INSPEC_NUM      &gt; ''
								   AND  ITEM_STATUS     = N'1'
								   AND  CREATE_LOC      = N'2'
								   AND  INOUT_CODE_TYPE = N'4'
								   AND  INOUT_Q  &gt; 0
							   GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ) C ON A.COMP_CODE   = C.COMP_CODE
																							 AND  A.DIV_CODE      = C.DIV_CODE
																							 AND  A.INSPEC_NUM  = C.INSPEC_NUM
																							 AND  A.INSPEC_SEQ   = C.INSPEC_SEQ
			 LEFT JOIN (SELECT
								  A.ITEM_CODE
								, A.ITEM_P              AS PURCHASE_P
								, A.PURCHASE_RATE
								, A.PURCHASE_TYPE
								, A.SALES_TYPE
								, B.SALE_BASIS_P
								, MAX(A.CUSTOM_CODE) AS CUSTOM_CODE
								FROM         BPR400T A WITH(NOLOCK) 
								INNER JOIN BPR100T  B WITH(NOLOCK) ON A.COMP_CODE       = B.COMP_CODE 
																					  AND A.ITEM_CODE         = B.ITEM_CODE
								INNER JOIN BCM100T C WITH(NOLOCK) ON A.COMP_CODE       = C.COMP_CODE 
																					  AND A.CUSTOM_CODE    = C.CUSTOM_CODE
								 WHERE A.COMP_CODE  = @COMP_CODE
									AND A.DIV_CODE      = @DIV_CODE		
									AND A.TYPE              = '1'
									AND B.USE_YN          = 'Y'
									AND C.USE_YN          = 'Y'
									AND A.APLY_START_DATE = (SELECT TOP 1 
																			MAX(X.APLY_START_DATE) AS APLY_START_DATE
																			FROM  BPR400T X WITH(NOLOCK)
																			 WHERE X.COMP_CODE    = A.COMP_CODE
																				AND X.DIV_CODE        = A.DIV_CODE
																				AND X.TYPE                = A.TYPE
																				AND X.ITEM_CODE       = A.ITEM_CODE
																				AND X.MONEY_UNIT    = A.MONEY_UNIT
																				AND X.ORDER_UNIT     = A.ORDER_UNIT
																				AND X.APLY_START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.APLY_END_DATE    &gt; CONVERT(NVARCHAR(08), GETDATE(), 112)
																				AND X.CUSTOM_CODE = A.CUSTOM_CODE
																			)
									AND A.CUSTOM_CODE = @CUSTOM_CODE --추가 20160204

							GROUP BY A.ITEM_CODE, A.ITEM_P,  A.PURCHASE_RATE, A.PURCHASE_TYPE, B.SALE_BASIS_P, A.SALES_TYPE
							--ORDER BY A.ITEM_P
							) D ON A.ITEM_CODE   = D.ITEM_CODE 
							   AND A.CUSTOM_CODE = D.CUSTOM_CODE

			  WHERE A.COMP_CODE  = @COMP_CODE
				 AND A.DIV_CODE  = @DIV_CODE
				 /* AND A.INSPEC_DATE  BETWEEN @INSPEC_DATE_FR AND @INSPEC_DATE_TO */
				 AND A.GOOD_INSPEC_Q &gt; 0
				 AND A.END_DECISION != '03'
				 AND A.GOOD_INSPEC_Q &gt; ISNULL(C.INOUT_Q, 0)
				AND ISNULL(AA.CLOSE_YN,'N') = 'N'

				AND A.RECEIPT_NUM = #{F_RECEIPT_NUM}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">	
		AND A.CUSTOM_CODE = #{CUSTOM_CODE} 
		</if>

			

     END
	
</select>	
<select id="mms511ukrvServiceImpl.selectinspectResultList_02" parameterType="Map" resultType="rMap">
/* mms200ukrv.Cmms200ukrv[fnQms200QStd] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON
    
    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}   
    
    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId
    
    SET @RefItem = ISNULL(@RefItem, N'0')
    
    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'
    
    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    DECLARE @QueryType  NVARCHAR(1)
    
    
    SET @QueryType = ISNULL(@QueryType, '1')
    
    /* 데이터 조회 */
    /* 자재 */
    IF @QueryType = '1'
    BEGIN
        IF EXISTS(SELECT TOP 1 1
                    FROM BSA100T  WITH (NOLOCK)
                   WHERE COMP_CODE = @CompCode
                     AND MAIN_CODE = N'M022'
                     AND SUB_CODE  = N'1'
                     AND REF_CODE1 = N'Y' )
        BEGIN
            SELECT CAST('' AS BIT)                                                             AS GUBUN                                                        
                 , B.ITEM_CODE                                                                 AS ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                             ELSE C1.ITEM_NAME
                     END)                                                                      AS ITEM_NAME          
                 , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
                 , C1.SPEC                                                                     AS SPEC
                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                     END)                                                                      AS DVRY_DATE
                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
                     END)                                                                      AS INSPEC_DATE
                 , A.DIV_CODE                                                                  AS DIV_CODE
                 , B.ORDER_UNIT                                                                AS ORDER_UNIT
                 , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS REMAIN_Q 
                 , C1.STOCK_UNIT                                                               AS STOCK_UNIT
                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
                 , B.ORDER_Q                                                                   AS ORDER_Q
                 , '1'                                                                         AS ITEM_STATUS
                 , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
                 , B.MONEY_UNIT                                                                AS MONEY_UNIT
                 , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                 , B.ORDER_P                                                                   AS ORDER_P
                 , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
                 , (ISNULL(E.GOOD_INSPEC_Q,0) * ISNULL(B.ORDER_UNIT_P,0))                      AS ORDER_O  
                 , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
                 , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
                 , B.ORDER_NUM                                                                 AS ORDER_NUM
                 , B.ORDER_SEQ                                                                 AS ORDER_SEQ
                 , A.LC_NUM                                                                    AS LC_NUM
                 , B.WH_CODE                                                                   AS WH_CODE
                 , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
                 , A.ORDER_TYPE                                                                AS ORDER_TYPE
                 , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
                                             ELSE D1.CUSTOM_NAME
                     END)                                                                      AS CUSTOM_NAME
                 , ISNULL(B.TRNS_RATE, 1)                                                      AS TRNS_RATE                                              
                 , ISNULL(B.INSTOCK_Q, 0)                                                      AS INSTOCK_Q                                              
                 , C2.EXCESS_RATE                                                              AS EXCESS_RATE
                 , E.INSPEC_NUM                                                                AS INSPEC_NUM
                 , E.INSPEC_SEQ                                                                AS INSPEC_SEQ
                 , (B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q, 0))                                   AS PORE_Q
                 , E.REMARK                                                                    AS REMARK
                 , E.PROJECT_NO                                                                AS PROJECT_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
                 , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
                 , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
                 , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
                 , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
                 , G.PURCHASE_TYPE
				 , G.SALES_TYPE
				 , G.PURCHASE_RATE
				 ,(CASE WHEN ISNULL(G.PURCHASE_RATE,0) = 0
					THEN 0 
					ELSE ISNULL(ISNULL(B.ORDER_UNIT_P,0) / ISNULL(G.PURCHASE_RATE,0) *100,0) END)	AS	SALE_BASIS_P  
           FROM                MPO100T A  WITH (NOLOCK)
                   INNER JOIN  MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
                                                       AND  B.DIV_CODE    = A.DIV_CODE
                                                       AND  B.CUSTOM_CODE = A.CUSTOM_CODE
                                                       AND  B.ORDER_NUM   = A.ORDER_NUM
                   INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                                       AND C1.ITEM_CODE   = B.ITEM_CODE
                   INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                       AND C2.DIV_CODE    = B.DIV_CODE
                                                       AND C2.ITEM_CODE   = B.ITEM_CODE
                   INNER JOIN  BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE   = A.COMP_CODE
                                                       AND D1.CUSTOM_CODE = A.CUSTOM_CODE
                   INNER JOIN  QMS200T E  WITH (NOLOCK) ON  E.COMP_CODE   = B.COMP_CODE
                                                       AND  E.DIV_CODE    = B.DIV_CODE
                                                       AND  E.CUSTOM_CODE = B.CUSTOM_CODE
                                                       AND  E.ORDER_NUM   = B.ORDER_NUM
                                                       AND  E.ORDER_SEQ   = B.ORDER_SEQ
                   LEFT  JOIN  (SELECT  COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
                                     , SUM(INOUT_Q) AS INOUT_Q
                                FROM    BTR100T  WITH (NOLOCK)
                                WHERE   COMP_CODE       = @CompCode
								<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                AND     DIV_CODE        = #{DIV_CODE}
                     			</if> 
                                AND     INSPEC_NUM      &gt; ''
                                AND     ITEM_STATUS     = N'1'
                                AND     CREATE_LOC      = N'2'
                                AND     INOUT_CODE_TYPE = N'4'
                                AND     INOUT_Q         &gt; 0
                                GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ) F ON F.COMP_CODE   = E.COMP_CODE
                                                                                                    AND F.DIV_CODE    = E.DIV_CODE
                                                                                                    AND F.INSPEC_NUM  = E.INSPEC_NUM
                                                                                                    AND F.INSPEC_SEQ  = E.INSPEC_SEQ
                  LEFT JOIN V_BPR400T G WITH(NOLOCK) ON B.ITEM_CODE	= G.ITEM_CODE
													AND B.CUSTOM_CODE       = G.CUSTOM_CODE
													AND B.COMP_CODE	        = G.COMP_CODE
													AND B.DIV_CODE	        = G.DIV_CODE
																
													AND A.MONEY_UNIT	    = G.MONEY_UNIT
													AND B.ORDER_UNIT		= G.ORDER_UNIT                                                                                  
            WHERE   A.COMP_CODE     = @CompCode 
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE      = #{DIV_CODE}
</if>
            AND     A.ORDER_TYPE   != '4'
            AND     A.AGREE_STATUS  &gt; '1'
            AND     E.GOOD_INSPEC_Q &gt; 0
            AND     E.END_DECISION != '03'
            AND     E.GOOD_INSPEC_Q &gt; ISNULL(F.INOUT_Q, 0)
            AND     B.CONTROL_STATUS NOT IN('8', '9')
            AND   ((B.INSPEC_FLAG   = 'Y' AND B.INSPEC_FLAG > '') OR (C2.INSPEC_YN = 'Y' AND B.INSPEC_FLAG IS NULL))
                 					
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">           
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
            AND     A.ORDER_TYPE    = #{ORDER_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
            AND     B.DVRY_DATE    &gt;= #{DVRY_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
            AND     B.DVRY_DATE    &lt;= #{DVRY_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
            AND     B.WH_CODE       = #{WH_CODE}
</if> 

            UNION ALL
            
            SELECT CAST('' AS BIT)                                                             AS GUBUN                                                        
                 , B.ITEM_CODE                                                                 AS ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                             ELSE C1.ITEM_NAME
                     END)                                                                      AS ITEM_NAME          
                 , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
                 , C1.SPEC                                                                     AS SPEC
                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                     END)                                                                      AS DVRY_DATE
                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
                     END)                                                                      AS INSPEC_DATE
                 , A.DIV_CODE                                                                  AS DIV_CODE
                 , B.ORDER_UNIT                                                                AS ORDER_UNIT
                 , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1)))  AS REMAIN_Q 
                 , C1.STOCK_UNIT                                                               AS STOCK_UNIT
                 , (ISNULL(E.BAD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1)))  AS NOINOUT_Q
                 , B.ORDER_Q                                                                   AS ORDER_Q
                 , '2'                                                                         AS ITEM_STATUS
                 , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
                 , B.MONEY_UNIT                                                                AS MONEY_UNIT
                 , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                 , B.ORDER_P                                                                   AS ORDER_P
                 , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
                 , (ISNULL(E.BAD_INSPEC_Q,0) * ISNULL(B.ORDER_UNIT_P,0))                       AS ORDER_O  
                 , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
                 , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
                 , B.ORDER_NUM                                                                 AS ORDER_NUM
                 , B.ORDER_SEQ                                                                 AS ORDER_SEQ
                 , A.LC_NUM                                                                    AS LC_NUM
                 , B.WH_CODE                                                                   AS WH_CODE
                 , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
                 , A.ORDER_TYPE                                                                AS ORDER_TYPE
                 , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
                                             ELSE D1.CUSTOM_NAME
                     END)                                                                      AS CUSTOM_NAME
                 , ISNULL(B.TRNS_RATE, 1)                                                      AS TRNS_RATE                                              
                 , ISNULL(B.INSTOCK_Q, 0)                                                      AS INSTOCK_Q                                              
                 , C2.EXCESS_RATE                                                              AS EXCESS_RATE
                 , E.INSPEC_NUM                                                                AS INSPEC_NUM
                 , E.INSPEC_SEQ                                                                AS INSPEC_SEQ
                 , (B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q, 0))                                   AS PORE_Q
                 , E.REMARK                                                                    AS REMARK
                 , E.PROJECT_NO                                                                AS PROJECT_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
                 , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
                 , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
                 , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
                 , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
                 , G.PURCHASE_TYPE
				 , G.SALES_TYPE
				 , G.PURCHASE_RATE
				 ,(CASE WHEN ISNULL(G.PURCHASE_RATE,0) = 0
					THEN 0 
					ELSE ISNULL(ISNULL(B.ORDER_UNIT_P,0) / ISNULL(G.PURCHASE_RATE,0) *100,0) END)	AS	SALE_BASIS_P  
           FROM                MPO100T A  WITH (NOLOCK)
                   INNER JOIN  MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
                                                       AND  B.DIV_CODE    = A.DIV_CODE
                                                       AND  B.CUSTOM_CODE = A.CUSTOM_CODE
                                                       AND  B.ORDER_NUM   = A.ORDER_NUM
                   INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                                       AND C1.ITEM_CODE   = B.ITEM_CODE
                   INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                       AND C2.DIV_CODE    = B.DIV_CODE
                                                       AND C2.ITEM_CODE   = B.ITEM_CODE
                   INNER JOIN  BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE   = A.COMP_CODE
                                                       AND D1.CUSTOM_CODE = A.CUSTOM_CODE
                   INNER JOIN  QMS200T E  WITH (NOLOCK) ON  E.COMP_CODE   = B.COMP_CODE
                                                       AND  E.DIV_CODE    = B.DIV_CODE
                                                       AND  E.CUSTOM_CODE = B.CUSTOM_CODE
                                                       AND  E.ORDER_NUM   = B.ORDER_NUM
                                                       AND  E.ORDER_SEQ   = B.ORDER_SEQ
                   LEFT  JOIN (SELECT  COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
                                     , SUM(INOUT_Q) AS INOUT_Q
                               FROM    BTR100T  WITH (NOLOCK)
                               WHERE   COMP_CODE       = @CompCode
							<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                               AND     DIV_CODE        = #{DIV_CODE}
                       		</if>  
                               AND     INSPEC_NUM      &gt; ''
                               AND     ITEM_STATUS     = N'2'
                               AND     CREATE_LOC      = N'2'
                               AND     INOUT_CODE_TYPE = N'4'
                               AND     INOUT_Q         &gt; 0
                               GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ) F ON  F.COMP_CODE   = E.COMP_CODE
                                                                                                   AND  F.DIV_CODE    = E.DIV_CODE
                                                                                                   AND  F.INSPEC_NUM  = E.INSPEC_NUM
                                                                                                   AND  F.INSPEC_SEQ  = E.INSPEC_SEQ
               LEFT JOIN V_BPR400T G WITH(NOLOCK) ON B.ITEM_CODE	= G.ITEM_CODE
													AND B.CUSTOM_CODE       = G.CUSTOM_CODE
													AND B.COMP_CODE	        = G.COMP_CODE
													AND B.DIV_CODE	        = G.DIV_CODE
																
													AND A.MONEY_UNIT	    = G.MONEY_UNIT
													AND B.ORDER_UNIT		= G.ORDER_UNIT                                                                                    
                         
            WHERE   A.COMP_CODE     = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE      = #{DIV_CODE}
</if>  
            AND     A.ORDER_TYPE   != '4'
            AND     A.AGREE_STATUS  &gt; '1'
            AND     E.BAD_INSPEC_Q  &gt; 0
            AND     E.END_DECISION != '03'
            AND     E.BAD_INSPEC_Q  &gt; ISNULL(F.INOUT_Q, 0)
            AND     B.CONTROL_STATUS NOT IN('8', '9')
            AND   ((B.INSPEC_FLAG   = 'Y' AND B.INSPEC_FLAG > '') OR (C2.INSPEC_YN = 'Y' AND B.INSPEC_FLAG IS NULL))
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
            AND     A.ORDER_TYPE    = #{ORDER_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
            AND     B.DVRY_DATE    &gt;= #{DVRY_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
            AND     B.DVRY_DATE    &lt;= #{DVRY_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
            AND     B.WH_CODE       = #{WH_CODE}
</if>  
        END
        ELSE
        BEGIN
            SELECT CAST('' AS BIT)                                                             AS GUBUN                                                        
                 , B.ITEM_CODE                                                                 AS ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                             ELSE C1.ITEM_NAME
                     END)                                                                      AS ITEM_NAME          
                 , C2.ITEM_ACCOUNT                                                             AS ITEM_ACCOUNT
                 , C1.SPEC                                                                     AS SPEC
                 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
                     END)                                                                      AS DVRY_DATE
                 , (CASE WHEN ISNULL(E.INSPEC_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(E.INSPEC_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(E.INSPEC_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(E.INSPEC_DATE, 7, 2))
                     END)                                                                      AS INSPEC_DATE
                 , A.DIV_CODE                                                                  AS DIV_CODE
                 , B.ORDER_UNIT                                                                AS ORDER_UNIT
                 , B.ORDER_UNIT_Q                                                              AS ORDER_UNIT_Q
                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS REMAIN_Q 
                 , C1.STOCK_UNIT                                                               AS STOCK_UNIT
                 , (ISNULL(E.GOOD_INSPEC_Q,0) - (ISNULL(F.INOUT_Q,0) / ISNULL(B.TRNS_RATE,1))) AS NOINOUT_Q
                 , B.ORDER_Q                                                                   AS ORDER_Q
                 , '1'                                                                         AS ITEM_STATUS
                 , B.UNIT_PRICE_TYPE                                                           AS UNIT_PRICE_TYPE
                 , B.MONEY_UNIT                                                                AS MONEY_UNIT
                 , B.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                 , B.ORDER_P                                                                   AS ORDER_P
                 , B.ORDER_UNIT_P                                                              AS ORDER_UNIT_P
                 , (ISNULL(E.GOOD_INSPEC_Q,0) * ISNULL(B.ORDER_UNIT_P,0))                      AS ORDER_O  
                 , B.ORDER_LOC_P                                                               AS ORDER_LOC_P
                 , B.ORDER_LOC_O                                                               AS ORDER_LOC_O
                 , B.ORDER_NUM                                                                 AS ORDER_NUM
                 , B.ORDER_SEQ                                                                 AS ORDER_SEQ
                 , A.LC_NUM                                                                    AS LC_NUM
                 , B.WH_CODE                                                                   AS WH_CODE
                 , B.ORDER_REQ_NUM                                                             AS ORDER_REQ_NUM
                 , A.ORDER_TYPE                                                                AS ORDER_TYPE
                 , A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                 , (CASE WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
                         WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
                                             ELSE D1.CUSTOM_NAME
                     END)                                                                      AS CUSTOM_NAME
                 , ISNULL(B.TRNS_RATE, 1)                                                      AS TRNS_RATE                                              
                 , ISNULL(B.INSTOCK_Q, 0)                                                      AS INSTOCK_Q                                              
                 , C2.EXCESS_RATE                                                              AS EXCESS_RATE
                 , E.INSPEC_NUM                                                                AS INSPEC_NUM
                 , E.INSPEC_SEQ                                                                AS INSPEC_SEQ
                 , (B.ORDER_UNIT_Q - ISNULL(B.INSTOCK_Q, 0))                                   AS PORE_Q
                 , E.REMARK                                                                    AS REMARK
                 , E.PROJECT_NO                                                                AS PROJECT_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS LC_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BL_NO
                 , CONVERT(NVARCHAR(20), '')                                                   AS BASIS_NUM
                 , CONVERT(NUMERIC(3,0), 0)                                                    AS BASIS_SEQ
                 , CONVERT(NVARCHAR(10), '')                                                   AS LC_DATE
                 , CONVERT(NVARCHAR(10), '')                                                   AS INVOICE_DATE
                 , CONVERT(NVARCHAR(6), '')                                                    AS TRADE_LOC
                 , G.PURCHASE_TYPE
				 , G.SALES_TYPE
				 , G.PURCHASE_RATE
				 ,(CASE WHEN ISNULL(G.PURCHASE_RATE,0) = 0
					THEN 0 
					ELSE ISNULL(ISNULL(B.ORDER_UNIT_P,0) / ISNULL(G.PURCHASE_RATE,0) *100,0) END)	AS	SALE_BASIS_P  
            FROM                MPO100T A  WITH (NOLOCK)
                    INNER JOIN  MPO200T B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
                                                        AND  B.DIV_CODE    = A.DIV_CODE
                                                        AND  B.CUSTOM_CODE = A.CUSTOM_CODE
                                                        AND  B.ORDER_NUM   = A.ORDER_NUM
                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                                        AND C1.ITEM_CODE   = B.ITEM_CODE
                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                                        AND C2.DIV_CODE    = B.DIV_CODE
                                                        AND C2.ITEM_CODE   = B.ITEM_CODE
                    INNER JOIN  BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE   = A.COMP_CODE
                                                        AND D1.CUSTOM_CODE = A.CUSTOM_CODE
                    INNER JOIN  QMS200T E  WITH (NOLOCK) ON  E.COMP_CODE   = B.COMP_CODE
                                                        AND  E.DIV_CODE    = B.DIV_CODE
                                                        AND  E.CUSTOM_CODE = B.CUSTOM_CODE
                                                        AND  E.ORDER_NUM   = B.ORDER_NUM
                                                        AND  E.ORDER_SEQ   = B.ORDER_SEQ
                    LEFT  JOIN (SELECT  COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ
                                     , SUM(INOUT_Q) AS INOUT_Q
                                FROM    BTR100T  WITH (NOLOCK)
                                WHERE   COMP_CODE       = @CompCode
                                
								<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                AND     DIV_CODE        = #{DIV_CODE}
															</if>
                                AND     INSPEC_NUM      &gt; ''
                                AND     ITEM_STATUS     = N'1'
                                AND     CREATE_LOC      = N'2'
                                AND     INOUT_CODE_TYPE = N'4'
                                AND     INOUT_Q         &gt; 0
                                GROUP BY COMP_CODE, DIV_CODE, ITEM_STATUS, INSPEC_NUM, INSPEC_SEQ) F ON  F.COMP_CODE   = E.COMP_CODE
                                                                                                    AND  F.DIV_CODE    = E.DIV_CODE
                                                                                                    AND  F.INSPEC_NUM  = E.INSPEC_NUM
                                                                                                    AND  F.INSPEC_SEQ  = E.INSPEC_SEQ
                               LEFT JOIN V_BPR400T G WITH(NOLOCK) ON B.ITEM_CODE	= G.ITEM_CODE
													AND B.CUSTOM_CODE       = G.CUSTOM_CODE
													AND B.COMP_CODE	        = G.COMP_CODE
													AND B.DIV_CODE	        = G.DIV_CODE
																
													AND A.MONEY_UNIT	    = G.MONEY_UNIT
													AND B.ORDER_UNIT		= G.ORDER_UNIT                                                                     
            WHERE   A.COMP_CODE     = @CompCode
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     A.DIV_CODE      = #{DIV_CODE}
            </if>  
            AND     A.ORDER_TYPE   != '4'
            AND     A.AGREE_STATUS  &gt; '1'
            AND     E.GOOD_INSPEC_Q &gt; 0
            AND     E.END_DECISION != '03'
            AND     E.GOOD_INSPEC_Q &gt; ISNULL(F.INOUT_Q, 0)
            AND     B.CONTROL_STATUS NOT IN('8', '9')
            AND   ((B.INSPEC_FLAG   = 'Y' AND B.INSPEC_FLAG > '') OR (C2.INSPEC_YN = 'Y' AND B.INSPEC_FLAG IS NULL))
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
</if>  
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
            AND     A.ORDER_TYPE    = #{ORDER_TYPE}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
            AND     B.DVRY_DATE    &gt;= #{DVRY_DATE_FR}
</if>  
<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
            AND     B.DVRY_DATE    &lt;= #{DVRY_DATE_TO}
</if>  
<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
            AND     B.WH_CODE       = #{WH_CODE}
</if>  
            ORDER BY B.ORDER_NUM DESC, B.ORDER_SEQ
        END
    END 

    /* 무역 */
    IF @QueryType = '2'
    BEGIN
        EXEC unilite.SP_MATRL_ImportQualityResultNotReceiptReference @CompCode
                                                                   , #{DIV_CODE}
                                                                   , #{FR_DVRY_DATE}
                                                                   , #{TO_DVRY_DATE}
                                                                   , #{CUSTOM_CODE}
                                                                   , #{ORDER_TYPE}
                                                                   , #{WH_CODE}
                                                                   , #{MONEY_UNIT}
                                                                   , @UserId
                                                                   , 100  /* iCount는 확인후 조정 */

    END

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END	
</select>



<select id="mms511ukrvServiceImpl.fnOrderPrice" parameterType="Map" resultType="rMap">


SELECT A.COMP_CODE, 
		A.TYPE, 
		A.DIV_CODE, 
		A.ITEM_CODE, 
		A.CUSTOM_CODE, 
		A.MONEY_UNIT,
		A.ORDER_UNIT, 
		A.PURCHASE_TYPE, 
		A.SALES_TYPE,
		A.ORDER_RATE,
		A.PURCHASE_RATE,
		ISNULL(A.ITEM_P, C.PURCHASE_BASE_P) AS ORDER_P,
		A.APLY_START_DATE
 FROM uniLITE.BPR400T A
 INNER JOIN
   (SELECT COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT, MAX(APLY_START_DATE) AS APLY_START_DATE
    FROM uniLITE.BPR400T
    WHERE APLY_START_DATE &lt;= CONVERT(NVARCHAR(8), GETDATE(), 112)
    GROUP BY COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT
    ) B ON A.COMP_CODE = B.COMP_CODE
       AND A.TYPE                 = B.TYPE
       AND A.DIV_CODE             = B.DIV_CODE                          
       AND A.CUSTOM_CODE          = B.CUSTOM_CODE
       AND A.ITEM_CODE            = B.ITEM_CODE 
       AND A.MONEY_UNIT           = B.MONEY_UNIT
       AND A.ORDER_UNIT           = B.ORDER_UNIT
       AND A.APLY_START_DATE      = B.APLY_START_DATE                          
 INNER JOIN unilite.BPR200T C ON A.COMP_CODE = C.COMP_CODE
                             AND A.DIV_CODE  = C.DIV_CODE
                             AND A.ITEM_CODE = C.ITEM_CODE
WHERE A.ITEM_CODE	= #{ITEM_CODE}
	AND A.CUSTOM_CODE       = #{CUSTOM_CODE}
	AND A.COMP_CODE	        = #{S_COMP_CODE}
	AND A.DIV_CODE	        = #{DIV_CODE}
	AND A.TYPE		        = N'1'			
	AND A.MONEY_UNIT	    = #{MONEY_UNIT}
	AND A.ORDER_UNIT		= #{ORDER_UNIT}
</select>

<select id="mms511ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
SELECT
	A.WH_CODE
FROM BSA210T A WITH(NOLOCK)
	LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									AND B.DEPT_CODE = A.TREE_CODE
WHERE A.COMP_CODE = #{S_COMP_CODE}
AND B.USER_ID = #{S_USER_ID}
</select>

<select id="mms511ukrvServiceImpl.taxType" parameterType="Map" resultType="rMap">
SELECT
	TAX_TYPE
		FROM BPR100T WITH(NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
			AND ITEM_CODE = #{ITEM_CODE}
</select>

<select id="mms511ukrvServiceImpl.fnGetCalcTaxAmt" parameterType="Map" resultType="rMap">
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT INOUT_I,
				INOUT_TAX_AMT,
				INOUT_TOTAL_I 
			FROM uniLITE.fnGetCalcTaxAmt( #{COMP_CODE}
			                          , #{CUSTOM_CODE}
			                          , #{ITEM_CODE}
			                          , #{ORDER_UNIT_Q} 
			                          , #{ORDER_UNIT_P} )
</select>

<select id="mms511ukrvServiceImpl.deliveryYn" parameterType="Map" resultType="rMap">

/*  미납 상품 존재 체크  */
BEGIN

 DECLARE  @COMP_CODE    NVARCHAR(08)
      	 ,@DIV_CODE     NVARCHAR(08)
      	 ,@ITEM_CODE    NVARCHAR(20)

    SET @COMP_CODE  = #{S_COMP_CODE}
    SET @DIV_CODE   = #{DIV_CODE}
    SET @ITEM_CODE  = #{ITEM_CODE}

   SELECT  COUNT(A.ORDER_NUM),
		CASE WHEN COUNT(A.ORDER_NUM) &gt; 0 THEN '예'
		ELSE '아니오'
		END DELIVERY_YN
   FROM         SOF100T A WITH(NOLOCK)
   INNER JOIN SOF110T B  WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
               AND A.DIV_CODE     = B.DIV_CODE 
               AND A.ORDER_NUM = B.ORDER_NUM
 WHERE A.COMP_CODE     = @COMP_CODE
    AND A.DIV_CODE         = @DIV_CODE
    AND B.ITEM_CODE        = @ITEM_CODE
    AND ISNULL(B.ORDER_STATUS, 'N')  = 'N' 
    AND ISNULL(B.ORDER_Q, 0) - ISNULL(B.OUTSTOCK_Q, 0) > 0

END

</select>
<insert id="mms511ukrvServiceImpl.insertLogDetail" parameterType="Map">    	
INSERT INTO L_BTR100T
     ( KEY_VALUE		    , OPR_FLAG
     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
     , INOUT_DATE           , ITEM_CODE             , ITEM_STATUS           , WH_CODE			    , WH_CELL_CODE         
	 , INOUT_PRSN           , INOUT_Q               , INOUT_P               , INOUT_I			    , INOUT_FOR_P          
	 , INOUT_FOR_O          , INOUT_TAX_AMT
	 , EXCHG_RATE_O         , MONEY_UNIT            , BASIS_NUM             , BASIS_SEQ
     , PROJECT_NO           , LOT_NO                , REMARK		        , ORDER_TYPE            , ORDER_NUM             
	 , ORDER_SEQ            , ORDER_UNIT            , TRNS_RATE		        , ORDER_UNIT_Q          , ORDER_UNIT_P          
	 , ORDER_UNIT_FOR_P     , BILL_TYPE             , SALE_TYPE			    , PRICE_YN              , SALE_DIV_CODE         
	 , SALE_CUSTOM_CODE     , SALE_C_DATE           , LC_NUM			    , BL_NUM                , TRADE_LOC             
	 , ACCOUNT_YNC	        , ACCOUNT_Q 			, TRANS_COST			, TARIFF_AMT			
	 , PURCHASE_TYPE		, SALES_TYPE			, PURCHASE_RATE			, DEPT_CODE				, TAX_TYPE
	 , LOT_ASSIGNED_YN
	 , PURCHASE_CUSTOM_CODE ,PURCHASE_P				, INSPEC_NUM			, INSPEC_SEQ			, SORT_SEQ
	 , UPDATE_DB_USER		, UPDATE_DB_TIME		, INSERT_DB_USER    	, INSERT_DB_TIME
	 , SALE_P
	 )
VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG}		    
	 , #{S_COMP_CODE}       , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}		    
	 , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}			
	 , #{INOUT_DATE}        , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}		    , #{WH_CELL_CODE}       
	 , #{INOUT_PRSN}        , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}		    , #{INOUT_FOR_P}        
	 , #{INOUT_FOR_O}       , #{INOUT_TAX_AMT}
	 , #{EXCHG_RATE_O}      , #{MONEY_UNIT}         , #{BASIS_NUM}          , #{BASIS_SEQ}		    
	 , #{PROJECT_NO}        , #{LOT_NO}             , #{REMARK}		        , #{ORDER_TYPE}         , #{ORDER_NUM}          
	 , #{ORDER_SEQ}         , #{ORDER_UNIT}         , #{TRNS_RATE}	        , #{ORDER_UNIT_Q}       , #{ORDER_UNIT_P}       
	 , #{ORDER_UNIT_FOR_P}  , #{BILL_TYPE}          , #{SALE_TYPE}		    , #{PRICE_YN}           , #{SALE_DIV_CODE}      
	 , #{SALE_CUSTOM_CODE}  , #{SALE_C_DATE}        , #{LC_NUM}			    , #{BL_NUM}             , #{TRADE_LOC}          
	 , #{ACCOUNT_YNC}       , #{ACCOUNT_Q} 			, #{TRANS_COST}			, #{TARIFF_AMT}
	 , #{PURCHASE_TYPE}		, #{SALES_TYPE}			, #{PURCHASE_RATE}		, #{DEPT_CODE}			, #{TAX_TYPE}
	 , #{LOT_ASSIGNED_YN}
	 , #{INOUT_CODE}		, #{INOUT_P}			, #{INSPEC_NUM}			, #{INSPEC_SEQ}			, #{SORT_SEQ}
	 , #{S_USER_ID}			, GETDATE()				, #{S_USER_ID}    		, GETDATE()
	 , #{SALE_BASIS_P}  
	 )
</insert>
	  
<update id="mms511ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		
		{call SP_MATRL_Receiving (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CreateType, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>		  
	  
</mapper>