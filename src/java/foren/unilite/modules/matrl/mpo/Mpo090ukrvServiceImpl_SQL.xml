<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mpo090ukrvServiceImpl">
	<select id="mpo090ukrvServiceImpl.getThisWeek" parameterType="Map" resultType="rMap">

		SELECT CAL_NO
	
		FROM BCM420T WITH (NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		 AND CAL_TYPE = '3'
		 AND START_DATE &lt;= CONVERT(NVARCHAR(08), getDate(), 112)
		 AND END_DATE &gt;= CONVERT(NVARCHAR(08), getDate(), 112)
	</select>
	
	
	<select id="mpo090ukrvServiceImpl.getOrderWeek" parameterType="Map" resultType="comboItem">
	
		SELECT CAL_NO AS 'value'
			 , CAL_NO AS 'text'
			 , START_DATE AS refCode1
			 , END_DATE AS refCode2
	
		FROM BCM420T WITH (NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		 AND CAL_TYPE = '3'
		 AND CAL_NO >= '2019001'
	</select>
					
	<select id="mpo090ukrvServiceImpl.checkOrder" parameterType="Map" resultType="rMap">
		SELECT TOP 1 ISNULL(ORDER_YN,'N') AS ORDER_YN FROM MRP400T WHERE COMP_CODE = #{S_COMP_CODE} AND DIV_CODE = #{DIV_CODE} AND MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
	</select>
	<select id="mpo090ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		SELECT
				A.COMP_CODE								AS COMP_CODE
				,A.DIV_CODE								AS DIV_CODE
		        ,A.PROD_ITEM_CODE						AS PROD_ITEM_CODE
		        ,B.ITEM_NAME							AS ITEM_NAME
		        ,B.SPEC									AS SPEC
		        ,B.STOCK_UNIT							AS STOCK_UNIT
		        ,C.ITEM_ACCOUNT							AS ITEM_ACCOUNT
		        ,C.SUPPLY_TYPE							AS SUPPLY_TYPE
		        ,ISNULL(A.PL_QTY, 0)            		AS PL_QTY
		        ,ISNULL(A.PL_COST, 0)           		AS PL_COST
		        ,ISNULL(A.PL_AMOUNT, 0)         		AS PL_AMOUNT
		        ,ISNULL((SELECT SUM(STOCK_Q)
		            FROM BIV100T WITH(NOLOCK)
		            WHERE COMP_CODE = A.COMP_CODE
                      AND DIV_CODE = A.DIV_CODE 
                      AND ITEM_CODE = A.PROD_ITEM_CODE), 0) 	AS CSTOCK
		        ,A.ORDER_NUM 							AS ORDER_NUM
		        ,A.SER_NO 								AS SER_NO
				--,E.DVRY_DATE
				--,E.WEEK_NUM
				,ISNULL(E.DVRY_DATE	, A.TEMPC_01)		AS DVRY_DATE
				,ISNULL(E.WEEK_NUM	, A.TEMPC_02)		AS WEEK_NUM
				,R1.CUSTOM_NAME
		        ,A.MRP_CONTROL_NUM 						AS MRP_CONTROL_NUM
		        ,A.PROJECT_NO							AS PROJECT_NO
		        ,D.PJT_NAME								AS PROJECT_NAME
		        ,A.REMARK 								AS REMARK
		        ,A.WK_PLAN_NUM							AS WK_PLAN_NUM
		FROM BPL120T A WITH(NOLOCK)
			INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
											AND A.PROD_ITEM_CODE = B.ITEM_CODE
			INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
											AND A.DIV_CODE  = C.DIV_CODE
											AND A.PROD_ITEM_CODE = C.ITEM_CODE
			LEFT  JOIN BCM600T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
											AND A.PROJECT_NO = D.PJT_CODE
			LEFT JOIN SOF110T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE
											AND E.OUT_DIV_CODE = A.DIV_CODE
											AND E.ORDER_NUM = A.ORDER_NUM
											AND E.SER_NO = A.SER_NO
			LEFT JOIN SOF100T E2 WITH(NOLOCK) ON E2.COMP_CODE = E.COMP_CODE
											  AND E2.DIV_CODE = E.DIV_CODE
											  AND E2.ORDER_NUM = E.ORDER_NUM
			LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = E2.COMP_CODE
											 AND R1.CUSTOM_CODE = E2.CUSTOM_CODE
			LEFT JOIN PPL100T E3 WITH(NOLOCK) ON E3.COMP_CODE	= A.COMP_CODE
											 AND E3.DIV_CODE	= A.DIV_CODE
											 AND E3.WK_PLAN_NUM	= A.WK_PLAN_NUM
		WHERE A.COMP_CODE = #{S_COMP_CODE}
				AND A.DIV_CODE = #{DIV_CODE}
				AND A.WORK_STEP = 'S'			--'T':임시,'M':소요량, 'S':수주정보 용
				
	      	<if test="@foren.Ognl@isNotEmpty(WEEK_NUM_FR)">
	      		<if test="@foren.Ognl@isNotEmpty(OPTION_DATE_FR)">
					AND (E.WEEK_NUM &gt;= #{WEEK_NUM_FR} OR E3.PRODT_PLAN_DATE &gt;= #{OPTION_DATE_FR})
	      		</if>
	      		<if test="@foren.Ognl@isEmpty(OPTION_DATE_FR)">
					AND E.WEEK_NUM &gt;= #{WEEK_NUM_FR}
	      		</if>
	      	</if>
	      	<if test="@foren.Ognl@isNotEmpty(WEEK_NUM_TO)">
	      		<if test="@foren.Ognl@isNotEmpty(OPTION_DATE_TO)">
					AND (E.WEEK_NUM &lt;= #{WEEK_NUM_TO} OR E3.PRODT_PLAN_DATE &lt;= #{OPTION_DATE_TO})
	      		</if>
	      		<if test="@foren.Ognl@isEmpty(OPTION_DATE_FR)">
					AND E.WEEK_NUM &lt;= #{WEEK_NUM_TO}
	      		</if>
	      	</if>
				
	      	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				AND A.PROJECT_NO = #{PJT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MRP_CONTROL_NUM)">
				AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
			</if>
		ORDER BY A.MRP_CONTROL_NUM, A.ORDER_NUM, A.SER_NO, A.PROD_ITEM_CODE
	</select>
	
	<select id="mpo090ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
SELECT 
	COMP_CODE
	,DIV_CODE
	,MRP_CONTROL_NUM
	,PROD_ITEM_CODE
    ,CHILD_ITEM_CODE
    ,ITEM_NAME
    ,SPEC
    ,STOCK_UNIT
    ,ITEM_ACCOUNT
    ,SUPPLY_TYPE
    ,UNIT_Q
    ,ORDER_UNIT
    ,CHILD_PRICE
   
    ,CHILD_AMOUNT 
    ,PURCH_LDTIME
    ,ORDER_REQ_Q		--구매요청량
    ,ORDER_Q
    ,CUSTOM_CODE
    ,CUSTOM_NAME
    ,REMARK
    ,PROJECT_NO
    ,ORDER_REQ_NUM
    ,ORDER_NUM
    ,SER_NO
    
    ,PL_QTY			--총소요량
    
    ,TRNS_RATE -- 입수
    
    ,CSTOCK			--현재고
    
	,RECEIPT_PLAN_Q 		-- 입고예정량
    ,ISSUE_PLAN_Q 		--출고예정량
    
    ,SAFE_STOCK_Q		--안전재고
    
	,MINI_PURCH_Q		--최소LOT
	,MAX_PURCH_Q			--최대LOT
	
	,CALC_NET_QTY
	
	,(CASE WHEN ORDER_UNIT = 'EA' THEN CEILING(CALC_PLAN_QTY) 
		 ELSE CALC_PLAN_QTY
	END) AS CALC_PLAN_QTY
	
FROM (		
		SELECT
			COMP_CODE
			,DIV_CODE
			,MRP_CONTROL_NUM
			,MIN(PROD_ITEM_CODE)			AS PROD_ITEM_CODE
		    ,CHILD_ITEM_CODE
		    ,ITEM_NAME
		    ,SPEC
		    ,STOCK_UNIT
		    ,ITEM_ACCOUNT
		    ,SUPPLY_TYPE
		    ,SUM(PL_QTY)                      AS UNIT_Q
		    ,MAX(ORDER_UNIT)                  AS ORDER_UNIT
		    ,MAX(CHILD_PRICE)                 AS CHILD_PRICE
		   -- ,(SUM(PL_QTY) * MAX(CHILD_PRICE) / MAX(TRNS_RATE) ) AS CHILD_AMOUNT
		   
		   ,MAX(CHILD_AMOUNT) AS CHILD_AMOUNT 
		    ,MAX(PURCH_LDTIME)                AS PURCH_LDTIME
		    ,		MAX(ORDER_REQ_Q)				 AS ORDER_REQ_Q		--구매요청량
		    ,MAX(ORDER_Q)				 	 AS ORDER_Q
		    ,MAX(CUSTOM_CODE)                 AS CUSTOM_CODE
		    ,MAX(CUSTOM_NAME)				 AS CUSTOM_NAME
		    ,MAX(REMARK)						 AS REMARK
		    ,MAX(PROJECT_NO)					 AS PROJECT_NO
		    ,MAX(ORDER_REQ_NUM)				 AS ORDER_REQ_NUM
		    ,MIN(ORDER_NUM)				 	 AS ORDER_NUM
		    ,MIN(SER_NO)				 	 AS SER_NO
		    
		    ,SUM(PL_QTY)                      AS PL_QTY			--총소요량
		    
		    ,MAX(TRNS_RATE) AS TRNS_RATE -- 입수
		    
		    ,MAX(CSTOCK)                      AS CSTOCK			--현재고
		    
			,MAX(RECEIPT_PLAN_Q)		AS RECEIPT_PLAN_Q 		-- 입고예정량
		    ,MAX(ISSUE_PLAN_Q)			AS ISSUE_PLAN_Q 		--출고예정량
		    
		    ,MAX(SAFE_STOCK_Q)				 AS SAFE_STOCK_Q		--안전재고
		    
			,MAX(MINI_PURCH_Q)		AS MINI_PURCH_Q		--최소LOT
			,MAX(MAX_PURCH_Q)		AS MAX_PURCH_Q			--최대LOT
		    
		    
		    <if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 o ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) >= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)
										  ELSE (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END) 
								  			
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
				     
			</if>
			
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고o ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
						
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)	
														  ELSE (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END)	   
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량  
			</if>
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ x
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ o
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				
				 ,(CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
						    END) 
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ o
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				
				 ,(CASE WHEN SUM(PL_QTY) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE SUM(PL_QTY) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN SUM(PL_QTY) 
								 ELSE (CASE WHEN SUM(PL_QTY) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN SUM(PL_QTY) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END) 
						    END)
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
			</if>
			
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ x
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				,SUM(PL_QTY) / MAX(TRNS_RATE) AS CALC_PLAN_QTY	--구매계획량
--				SUM(PL_QTY) AS ORDER_REQ_Q		--구매요청량
			</if>
			
		FROM
		    (
		        SELECT
		        	A.COMP_CODE,
		        	A.DIV_CODE,
		        	A.MRP_CONTROL_NUM,
		        	A.PROD_ITEM_CODE,
		        	A.ORDER_NUM,
		        	A.SER_NO,
		            A.CHILD_ITEM_CODE,
		            B.ITEM_NAME,
		            B.SPEC,
		            B.STOCK_UNIT,
		            C.ITEM_ACCOUNT,
		            C.SUPPLY_TYPE,
		            C.ORDER_UNIT,
		            A.CHILD_PRICE,
		            A.CHILD_AMOUNT,
		            C.PURCH_LDTIME,
		            ISNULL(D.REQ_PLAN_Q , 0) 		AS ORDER_REQ_Q,
		    		ISNULL(F.ORDER_Q, 0) 			AS ORDER_Q,
		            C.CUSTOM_CODE,
		            ISNULL(E.CUSTOM_NAME, '')		AS CUSTOM_NAME,
					A.REMARK,
					ISNULL(D.ORDER_REQ_NUM, '') 	AS ORDER_REQ_NUM,
		    		A.PROJECT_NO											AS PROJECT_NO,
		            A.PL_QTY,
		            
		            C.TRNS_RATE,
		            
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK,
		                    
		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 != &quot;on&quot;">
		            --입고예정 x , 출고예정 x
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK_CALC,

		    		</if>
		    		
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 != &quot;on&quot;">
					--입고예정 o , 출고예정 x
					
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>

		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 x , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 o , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 != &quot;on&quot;">
					--입고예정 x
					0 AS RECEIPT_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot;">
					--입고예정 o
					ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)  AS RECEIPT_PLAN_Q,					--입고예정량
		    		</if>

		    		<if test="TYPE5 != &quot;on&quot;">
					--출고예정 x
					0 AS ISSUE_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE5 == &quot;on&quot;">
					--출고예정 o
					ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0) AS ISSUE_PLAN_Q,
		    		</if>
					
					
		            C.SAFE_STOCK_Q,
		            
					C.MINI_PURCH_Q,
					C.MAX_PURCH_Q
		    		
		    		
		      	FROM BPL130T A WITH(NOLOCK)
						INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
						INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
														 AND A.DIV_CODE  = C.DIV_CODE
														 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
						LEFT  JOIN MRP400T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
														 AND A.DIV_CODE  = D.DIV_CODE
														 AND A.CHILD_ITEM_CODE = D.ITEM_CODE
														 AND A.MRP_CONTROL_NUM = D.MRP_CONTROL_NUM
						LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
														 AND C.CUSTOM_CODE = E.CUSTOM_CODE
						LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_REQ_NUM, SUM(ORDER_Q) AS ORDER_Q FROM MPO200T WITH(NOLOCK)
										  GROUP BY  COMP_CODE, DIV_CODE, ORDER_REQ_NUM ) F ON A.COMP_CODE = F.COMP_CODE
																						  AND A.DIV_CODE  = F.DIV_CODE
																						  AND D.ORDER_REQ_NUM = F.ORDER_REQ_NUM														 
				WHERE A.COMP_CODE = #{S_COMP_CODE}
					AND A.DIV_CODE = #{DIV_CODE}
					AND A.WORK_STEP = 'S'			--'T':임시,'M':소요량 , 'S':수주정보 용
				    AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
		      	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
					AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
				</if>
		    ) AA
		GROUP BY COMP_CODE, DIV_CODE, MRP_CONTROL_NUM, CHILD_ITEM_CODE, 
				ITEM_NAME, SPEC, STOCK_UNIT, ITEM_ACCOUNT, SUPPLY_TYPE
				
	) T
	</select>
	
	
	<select id="mpo090ukrvServiceImpl.selectDetailList1_Print" parameterType="Map" resultType="rMap">	
SELECT 

	 T.NUM
	,T.WK_PLAN_NUM
	,T.COMP_CODE
	,T.DIV_CODE
	,T.MRP_CONTROL_NUM
	,T.PROD_ITEM_CODE
    ,T.CHILD_ITEM_CODE
    ,T.ITEM_NAME
    ,T.SPEC
    ,T.STOCK_UNIT
    ,T.ITEM_ACCOUNT
    ,T.SUPPLY_TYPE
    ,T.UNIT_Q
    ,T.ORDER_UNIT
    ,T.CHILD_PRICE
   
    ,T.CHILD_AMOUNT 
    ,T.PURCH_LDTIME
    ,T.ORDER_REQ_Q		--구매요청량
    ,T.ORDER_Q
    ,T.CUSTOM_CODE
    ,T.CUSTOM_NAME
    ,T.REMARK
    ,T.PROJECT_NO
    ,T.ORDER_REQ_NUM
    ,T.ORDER_NUM
    
    ,T.PL_QTY			--총소요량
    
    ,T.TRNS_RATE -- 입수
    
    ,T.CSTOCK			--현재고
    
	,T.RECEIPT_PLAN_Q 		-- 입고예정량
    ,T.ISSUE_PLAN_Q 		--출고예정량
    
    ,T.SAFE_STOCK_Q		--안전재고
    
	,T.MINI_PURCH_Q		--최소LOT
	,T.MAX_PURCH_Q			--최대LOT
	
	,T.CALC_NET_QTY
	
	,(CASE WHEN T.ORDER_UNIT = 'EA' THEN CEILING(T.CALC_PLAN_QTY) 
		 ELSE T.CALC_PLAN_QTY
	END) AS CALC_PLAN_QTY

	,R2.CODE_NAME AS ITEM_ACCOUNT_NAME
	,R3.CODE_NAME AS SUPPLY_TYPE_NAME
 FROM (
	SELECT
			 '00' AS NUM
			,'전체' AS WK_PLAN_NUM
			,COMP_CODE
			,DIV_CODE
			,MRP_CONTROL_NUM
			,'전체' AS PROD_ITEM_CODE
			,'전체' AS PROD_ITEM_NAME
		    ,CHILD_ITEM_CODE
		    ,ITEM_NAME
		    ,SPEC
		    ,STOCK_UNIT
		    ,ITEM_ACCOUNT
		    ,SUPPLY_TYPE
		    ,SUM(PL_QTY)                      UNIT_Q
		    ,MAX(ORDER_UNIT)                  ORDER_UNIT
		    ,MAX(CHILD_PRICE)                 CHILD_PRICE
		   -- ,(SUM(PL_QTY) * MAX(CHILD_PRICE) / MAX(TRNS_RATE) ) CHILD_AMOUNT
		   
		   ,MAX(CHILD_AMOUNT) AS CHILD_AMOUNT 
		    ,MAX(PURCH_LDTIME)                PURCH_LDTIME
		    ,		MAX(ORDER_REQ_Q)				 ORDER_REQ_Q		--구매요청량
		    ,MAX(ORDER_Q)				 	 ORDER_Q
		    ,MAX(CUSTOM_CODE)                 CUSTOM_CODE
		    ,MAX(CUSTOM_NAME)				 CUSTOM_NAME
		    ,MAX(REMARK)						 REMARK
		    ,MAX(PROJECT_NO)					 PROJECT_NO
		    ,MAX(ORDER_REQ_NUM)				 ORDER_REQ_NUM
		    ,MAX(ORDER_NUM)				 	 ORDER_NUM
		    
		    
		    ,SUM(PL_QTY)                      PL_QTY			--총소요량
		    
		    ,MAX(TRNS_RATE) AS TRNS_RATE -- 입수
		    
		    ,MAX(CSTOCK)                      CSTOCK			--현재고
		    
			,MAX(RECEIPT_PLAN_Q)		AS RECEIPT_PLAN_Q 		-- 입고예정량
		    ,MAX(ISSUE_PLAN_Q)			AS ISSUE_PLAN_Q 		--출고예정량
		    
		    ,MAX(SAFE_STOCK_Q)				 SAFE_STOCK_Q		--안전재고
		    
			,MAX(MINI_PURCH_Q)		AS MINI_PURCH_Q		--최소LOT
			,MAX(MAX_PURCH_Q)		AS MAX_PURCH_Q			--최대LOT
		    
		    
		    <if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 o ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) >= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)
										  ELSE (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END) 
								  			
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
				     
			</if>
			
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고o ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
						
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)	
														  ELSE (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END)	   
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량  
			</if>
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ x
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ o
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				
				 ,(CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
						    END) 
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ o
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				
				 ,(CASE WHEN SUM(PL_QTY) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE SUM(PL_QTY) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN SUM(PL_QTY) 
								 ELSE (CASE WHEN SUM(PL_QTY) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN SUM(PL_QTY) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END) 
						    END)
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
			</if>
			
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ x
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				,SUM(PL_QTY) / MAX(TRNS_RATE) AS CALC_PLAN_QTY	--구매계획량
--				SUM(PL_QTY) AS ORDER_REQ_Q		--구매요청량
			</if>
			
		FROM
		    (
		        SELECT
		        	A.COMP_CODE,
		        	A.DIV_CODE,
		        	A.WK_PLAN_NUM,
		        	A.MRP_CONTROL_NUM,
		        	A.PROD_ITEM_CODE,
					R1.ITEM_NAME AS PROD_ITEM_NAME,
		            A.CHILD_ITEM_CODE,
		            B.ITEM_NAME,
		            B.SPEC,
		            B.STOCK_UNIT,
		            C.ITEM_ACCOUNT,
		            C.SUPPLY_TYPE,
		            C.ORDER_UNIT,
		            A.CHILD_PRICE,
		            A.CHILD_AMOUNT,
		            C.PURCH_LDTIME,
		            ISNULL(D.REQ_PLAN_Q , 0) 		AS ORDER_REQ_Q,
		    		ISNULL(F.ORDER_Q, 0) 			AS ORDER_Q,
		            C.CUSTOM_CODE,
		            ISNULL(E.CUSTOM_NAME, '')		AS CUSTOM_NAME,
					A.REMARK,
					ISNULL(D.ORDER_REQ_NUM, '') 	AS ORDER_REQ_NUM,
		    		A.PROJECT_NO											AS PROJECT_NO,
		    		A.ORDER_NUM												AS ORDER_NUM,
		            A.PL_QTY,
		            
		            C.TRNS_RATE,
		            
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK,
		                    
		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 != &quot;on&quot;">
		            --입고예정 x , 출고예정 x
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK_CALC,
		    		</if>
		    		
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 != &quot;on&quot;">
					--입고예정 o , 출고예정 x
					
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>

		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 x , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 o , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
	
						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
				
						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 != &quot;on&quot;">
					--입고예정 x
					0 AS RECEIPT_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot;">
					--입고예정 o
					ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
						
						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)  AS RECEIPT_PLAN_Q,					--입고예정량
		    		</if>

		    		<if test="TYPE5 != &quot;on&quot;">
					--출고예정 x
					0 AS ISSUE_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE5 == &quot;on&quot;">
					--출고예정 o
					ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
						
						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0) AS ISSUE_PLAN_Q,
		    		</if>
					
					
		            C.SAFE_STOCK_Q,
		            
					C.MINI_PURCH_Q,
					C.MAX_PURCH_Q
		    		
		    		
		      	FROM BPL130T A WITH(NOLOCK)
						INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
						INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
														 AND A.DIV_CODE  = C.DIV_CODE
														 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
						LEFT  JOIN MRP400T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
														 AND A.DIV_CODE  = D.DIV_CODE
														 AND A.CHILD_ITEM_CODE = D.ITEM_CODE
														 AND A.MRP_CONTROL_NUM = D.MRP_CONTROL_NUM
						LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
														 AND C.CUSTOM_CODE = E.CUSTOM_CODE
						LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_REQ_NUM, SUM(ORDER_Q) AS ORDER_Q FROM MPO200T WITH(NOLOCK)
										  GROUP BY  COMP_CODE, DIV_CODE, ORDER_REQ_NUM ) F ON A.COMP_CODE = F.COMP_CODE
																						  AND A.DIV_CODE  = F.DIV_CODE
																						  AND D.ORDER_REQ_NUM = F.ORDER_REQ_NUM		
						LEFT JOIN BPR100T R1 WITH(NOLOCK) ON A.COMP_CODE = R1.COMP_CODE
														 AND A.PROD_ITEM_CODE = R1.ITEM_CODE													 
				WHERE A.COMP_CODE = #{S_COMP_CODE}
					AND A.DIV_CODE = #{DIV_CODE}
					AND A.WORK_STEP = 'S'			--'T':임시,'M':소요량
				    AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
		    ) AA
		GROUP BY COMP_CODE, DIV_CODE, MRP_CONTROL_NUM,PROD_ITEM_CODE, CHILD_ITEM_CODE, 
				ITEM_NAME, SPEC, STOCK_UNIT, ITEM_ACCOUNT, SUPPLY_TYPE	
	
	
UNION ALL	
	
	SELECT
			 DENSE_RANK() OVER (ORDER BY   MRP_CONTROL_NUM , WK_PLAN_NUM) AS NUM
			,WK_PLAN_NUM
			,COMP_CODE
			,DIV_CODE
			,MRP_CONTROL_NUM
			,PROD_ITEM_CODE
			,MAX(PROD_ITEM_NAME) AS PROD_ITEM_NAME
		    ,CHILD_ITEM_CODE
		    ,ITEM_NAME
		    ,SPEC
		    ,STOCK_UNIT
		    ,ITEM_ACCOUNT
		    ,SUPPLY_TYPE
		    ,SUM(PL_QTY)                      UNIT_Q
		    ,MAX(ORDER_UNIT)                  ORDER_UNIT
		    ,MAX(CHILD_PRICE)                 CHILD_PRICE
		   -- ,(SUM(PL_QTY) * MAX(CHILD_PRICE) / MAX(TRNS_RATE) ) CHILD_AMOUNT
		   
		   ,MAX(CHILD_AMOUNT) AS CHILD_AMOUNT 
		    ,MAX(PURCH_LDTIME)                PURCH_LDTIME
		    ,		MAX(ORDER_REQ_Q)				 ORDER_REQ_Q		--구매요청량
		    ,MAX(ORDER_Q)				 	 ORDER_Q
		    ,MAX(CUSTOM_CODE)                 CUSTOM_CODE
		    ,MAX(CUSTOM_NAME)				 CUSTOM_NAME
		    ,MAX(REMARK)						 REMARK
		    ,MAX(PROJECT_NO)					 PROJECT_NO
		    ,MAX(ORDER_REQ_NUM)				 ORDER_REQ_NUM
		    ,MAX(ORDER_NUM)				 	 ORDER_NUM
		    
		    
		    ,SUM(PL_QTY)                      PL_QTY			--총소요량
		    
		    ,MAX(TRNS_RATE) AS TRNS_RATE -- 입수
		    
		    ,MAX(CSTOCK)                      CSTOCK			--현재고
		    
			,MAX(RECEIPT_PLAN_Q)		AS RECEIPT_PLAN_Q 		-- 입고예정량
		    ,MAX(ISSUE_PLAN_Q)			AS ISSUE_PLAN_Q 		--출고예정량
		    
		    ,MAX(SAFE_STOCK_Q)				 SAFE_STOCK_Q		--안전재고
		    
			,MAX(MINI_PURCH_Q)		AS MINI_PURCH_Q		--최소LOT
			,MAX(MAX_PURCH_Q)		AS MAX_PURCH_Q			--최대LOT
		    
		    
		    <if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 o ,MOQ x
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 == &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고 x ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) >= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)
										  ELSE (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END) 
								  			
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
				     
			</if>
			
			<if test="TYPE1 == &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 o ,안전재고o ,MOQ o
				
				,CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
						
				 ,(CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) = 0 THEN 0 ELSE MAX(MINI_PURCH_Q) END)	
														  ELSE (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (MAX(CSTOCK_CALC) - MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
							END)	   
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량  
			</if>
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ x
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				     
				,(CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
				     
--				CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
--				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
--				     END ORDER_REQ_Q		--구매요청량
				
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 == &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고o ,MOQ o
				
				,CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0
				     ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1
				     END CALC_NET_QTY		--순소요량
				
				 ,(CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) 
								 ELSE (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, (CASE WHEN - MAX(SAFE_STOCK_Q) - SUM(PL_QTY) &gt;= 0 THEN 0 ELSE (- MAX(SAFE_STOCK_Q) - SUM(PL_QTY)) * -1 END) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END)
						    END) 
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량
			</if>
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 == &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ o
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				
				 ,(CASE WHEN SUM(PL_QTY) &lt;= MAX(MINI_PURCH_Q) THEN (CASE WHEN  MAX(MINI_PURCH_Q) &gt; 0.0 THEN MAX(MINI_PURCH_Q)
														  ELSE SUM(PL_QTY) END)
					  ELSE (CASE WHEN MAX(MAX_PURCH_Q) = 0 THEN SUM(PL_QTY) 
								 ELSE (CASE WHEN SUM(PL_QTY) &gt; MAX(MAX_PURCH_Q) AND MAX(MAX_PURCH_Q) &gt; 0.0 THEN (CASE WHEN SUM(PL_QTY) - (MAX(MAX_PURCH_Q) * CONVERT(NUMERIC(18,6), CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)))) = 0.0 THEN MAX(MAX_PURCH_Q) * CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q))
				                                                                          ELSE MAX(MAX_PURCH_Q) * (CONVERT(INTEGER, SUM(PL_QTY) / MAX(MAX_PURCH_Q)) + 1) END)
								  			ELSE MAX(MAX_PURCH_Q) END) 
						    END)
				 END) / MAX(TRNS_RATE) AS  CALC_PLAN_QTY		--구매계획량 
			</if>
			
			
			<if test="TYPE1 != &quot;on&quot; and TYPE2 != &quot;on&quot; and TYPE3 != &quot;on&quot;">
				--옵션: 현재고 x ,안전재고x ,MOQ x
				
				,SUM(PL_QTY) AS CALC_NET_QTY	--순소요량
				,SUM(PL_QTY) / MAX(TRNS_RATE) AS CALC_PLAN_QTY	--구매계획량
--				SUM(PL_QTY) AS ORDER_REQ_Q		--구매요청량
			</if>
			
		FROM
		    (
		        SELECT
		        	A.COMP_CODE,
		        	A.DIV_CODE,
		        	A.WK_PLAN_NUM,
		        	A.MRP_CONTROL_NUM,
		        	A.PROD_ITEM_CODE,
					R1.ITEM_NAME AS PROD_ITEM_NAME,
		            A.CHILD_ITEM_CODE,
		            B.ITEM_NAME,
		            B.SPEC,
		            B.STOCK_UNIT,
		            C.ITEM_ACCOUNT,
		            C.SUPPLY_TYPE,
		            C.ORDER_UNIT,
		            A.CHILD_PRICE,
		            A.CHILD_AMOUNT,
		            C.PURCH_LDTIME,
		            ISNULL(D.REQ_PLAN_Q , 0) 		AS ORDER_REQ_Q,
		    		ISNULL(F.ORDER_Q, 0) 			AS ORDER_Q,
		            C.CUSTOM_CODE,
		            ISNULL(E.CUSTOM_NAME, '')		AS CUSTOM_NAME,
					A.REMARK,
					ISNULL(D.ORDER_REQ_NUM, '') 	AS ORDER_REQ_NUM,
		    		A.PROJECT_NO											AS PROJECT_NO,
		    		A.ORDER_NUM												AS ORDER_NUM,
		            A.PL_QTY,
		            
		            C.TRNS_RATE,
		            
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK,
		                    
		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 != &quot;on&quot;">
		            --입고예정 x , 출고예정 x
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)    AS CSTOCK_CALC,
		    		</if>
		    		
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 != &quot;on&quot;">
					--입고예정 o , 출고예정 x
					
		            ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>

		    		<if test="TYPE4 != &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 x , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 

						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot; and TYPE5 == &quot;on&quot;">
					--입고예정 o , 출고예정 o
					ISNULL((SELECT SUM(STOCK_Q)
		                    FROM BIV100T WITH(NOLOCK)
		                    WHERE COMP_CODE = A.COMP_CODE
		                      AND DIV_CODE = A.DIV_CODE 
		                      AND ITEM_CODE = A.CHILD_ITEM_CODE
		            ), 0)
					+ ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
	
						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)
					- ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
				
						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)	 AS CSTOCK_CALC,
		    		</if>
		    		
		    		<if test="TYPE4 != &quot;on&quot;">
					--입고예정 x
					0 AS RECEIPT_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE4 == &quot;on&quot;">
					--입고예정 o
					ISNULL((SELECT SUM(ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))
						FROM                MPO200T AS S1  WITH (NOLOCK)
								LEFT  JOIN  (SELECT COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ, SUM(RECEIPT_Q) AS RECEIPT_Q 
											   FROM QMS100T WITH (NOLOCK) 
											   GROUP BY COMP_CODE, DIV_CODE, ORDER_NUM, ORDER_SEQ) S2 ON  S2.COMP_CODE   = S1.COMP_CODE
																								   AND  S2.DIV_CODE    = S1.DIV_CODE 
																								   AND  S2.ORDER_NUM   = S1.ORDER_NUM
																								   AND  S2.ORDER_SEQ	  = S1.ORDER_SEQ
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.ORDER_Q, 0) -  ISNULL(S2.RECEIPT_Q, 0)-  ISNULL(S1.BAD_RETURN_Q, 0))        &gt; 0				/* 미입고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
						
						AND		S1.ITEM_CODE		= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0)  AS RECEIPT_PLAN_Q,					--입고예정량
		    		</if>

		    		<if test="TYPE5 != &quot;on&quot;">
					--출고예정 x
					0 AS ISSUE_PLAN_Q,
		    		</if>
		    		
		    		<if test="TYPE5 == &quot;on&quot;">
					--출고예정 o
					ISNULL((SELECT  SUM(ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0)) AS ISSUE_PLAN_Q
						FROM                PMP300T AS S1  WITH (NOLOCK)
						WHERE   S1.COMP_CODE      = A.COMP_CODE
						AND     S1.DIV_CODE       = A.DIV_CODE
						AND     (ISNULL(S1.OUTSTOCK_REQ_Q, 0) -  ISNULL(S1.OUTSTOCK_Q, 0))        &gt; 0				/* 미출고량 계산 시(필수) */
						AND     S1.CONTROL_STATUS &lt; '8' 
						
						AND		S1.ITEM_CODE				= A.CHILD_ITEM_CODE
						GROUP BY S1.ITEM_CODE
					),0) AS ISSUE_PLAN_Q,
		    		</if>
					
					
		            C.SAFE_STOCK_Q,
		            
					C.MINI_PURCH_Q,
					C.MAX_PURCH_Q
		    		
		    		
		      	FROM BPL130T A WITH(NOLOCK)
						INNER JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
						INNER JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
														 AND A.DIV_CODE  = C.DIV_CODE
														 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
						LEFT  JOIN MRP400T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE
														 AND A.DIV_CODE  = D.DIV_CODE
														 AND A.CHILD_ITEM_CODE = D.ITEM_CODE
														 AND A.MRP_CONTROL_NUM = D.MRP_CONTROL_NUM
						LEFT  JOIN BCM100T E WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
														 AND C.CUSTOM_CODE = E.CUSTOM_CODE
						LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ORDER_REQ_NUM, SUM(ORDER_Q) AS ORDER_Q FROM MPO200T WITH(NOLOCK)
										  GROUP BY  COMP_CODE, DIV_CODE, ORDER_REQ_NUM ) F ON A.COMP_CODE = F.COMP_CODE
																						  AND A.DIV_CODE  = F.DIV_CODE
																						  AND D.ORDER_REQ_NUM = F.ORDER_REQ_NUM		
						LEFT JOIN BPR100T R1 WITH(NOLOCK) ON A.COMP_CODE = R1.COMP_CODE
														 AND A.PROD_ITEM_CODE = R1.ITEM_CODE															 
				WHERE A.COMP_CODE = #{S_COMP_CODE}
					AND A.DIV_CODE = #{DIV_CODE}
					AND A.WORK_STEP = 'S'			--'T':임시,'M':소요량
				    AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}
		    ) AA
		GROUP BY COMP_CODE, DIV_CODE, MRP_CONTROL_NUM ,WK_PLAN_NUM,PROD_ITEM_CODE, CHILD_ITEM_CODE, 
				ITEM_NAME, SPEC, STOCK_UNIT, ITEM_ACCOUNT, SUPPLY_TYPE
				
) T 

	LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = T.COMP_CODE
									 AND R2.MAIN_CODE = 'B020'
									 AND R2.SUB_CODE != '$'
									 AND R2.SUB_CODE = T.ITEM_ACCOUNT
	LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = T.COMP_CODE
									 AND R3.MAIN_CODE = 'B014'
									 AND R3.SUB_CODE != '$'
									 AND R3.SUB_CODE = T.SUPPLY_TYPE
	</select>
	
	
	<select id="mpo090ukrvServiceImpl.selectDetailList2" parameterType="Map" resultType="rMap">
	   SELECT
	    A.PROD_ITEM_CODE,
		A.CHILD_ITEM_CODE,
		B.ITEM_NAME,
        B.SPEC,
        B.STOCK_UNIT,
        C.ITEM_ACCOUNT,
        C.SUPPLY_TYPE,
        C.ORDER_UNIT,
        A.CHILD_PRICE,
        A.CHILD_AMOUNT,
        A.PL_QTY,
        A.TEMPN_02 AS UNIT_Q,
        A.TEMPN_03 AS LOSS_RATE
		  FROM BPL130T A WITH(NOLOCK)
	LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
									 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
	LEFT JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
									 AND A.DIV_CODE  = C.DIV_CODE
									 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE} 
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.WORK_STEP = 'S' 
		   
		   AND A.MRP_CONTROL_NUM = #{MRP_CONTROL_NUM}  --선택한 mrp 번호 가져와야함
		    
		   AND A.PROD_ITEM_CODE = #{PROD_ITEM_CODE}
		   
		   AND A.ORDER_NUM = #{ORDER_NUM}
		   
		   AND A.SER_NO = #{SER_NO}
		   
		   AND (  
				(ISNULL(A.WK_PLAN_NUM, '')	= '') OR (A.WK_PLAN_NUM	!= '' AND A.WK_PLAN_NUM	= #{WK_PLAN_NUM})
			)
	</select>
	
	<select id="mpo090ukrvServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">	
	
	SELECT

		A.CHILD_ITEM_CODE,
		MAX(B.ITEM_NAME) AS ITEM_NAME,
        MAX(B.SPEC) AS SPEC,
        MAX(B.STOCK_UNIT) AS STOCK_UNIT,
        MAX(C.ITEM_ACCOUNT) AS ITEM_ACCOUNT,
        MAX(C.SUPPLY_TYPE) AS SUPPLY_TYPE,
        MAX(C.ORDER_UNIT) AS ORDER_UNIT,
        SUM(A.CHILD_PRICE) AS CHILD_PRICE,
        SUM(A.CHILD_AMOUNT) AS CHILD_AMOUNT,
        SUM(A.PL_QTY) AS PL_QTY,
        SUM(A.TEMPN_02) AS UNIT_Q,
        SUM(A.TEMPN_03) AS LOSS_RATE
		  FROM BPL130T A WITH(NOLOCK)
	LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
									 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
	LEFT JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
									 AND A.DIV_CODE  = C.DIV_CODE
									 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.WORK_STEP = 'S' 
      	<if test="@foren.Ognl@isNotEmpty(mrpControlNumList)"> 
		AND A.MRP_CONTROL_NUM IN
		<foreach collection="mrpControlNumList" item="item" separator="," close=")" open="(">
			'${item}'
		</foreach>
      	</if>
      	<if test="@foren.Ognl@isNotEmpty(prodItemCodeList)"> 
		AND A.PROD_ITEM_CODE IN
		<foreach collection="prodItemCodeList" item="item1" separator="," close=")" open="(">
			'${item1}'
		</foreach>
      	</if>
      	
      	<if test="@foren.Ognl@isNotEmpty(orderNumList)"> 
		AND A.ORDER_NUM IN
		<foreach collection="orderNumList" item="item2" separator="," close=")" open="(">
			'${item2}'
		</foreach>
      	</if>
      	<if test="@foren.Ognl@isNotEmpty(serNoList)"> 
		AND A.SER_NO IN
		<foreach collection="serNoList" item="item3" separator="," close=")" open="(">
			'${item3}'
		</foreach>
      	</if>
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_STEP, A.CHILD_ITEM_CODE

	ORDER BY  A.CHILD_ITEM_CODE
	
	</select>	
	
	
		

	<select id="mpo090ukrvServiceImpl.selectDetailList3_Print" parameterType="Map" resultType="rMap">	
	
	SELECT 
		0 AS NUM,
		'선택된 전체' AS MRP_CONTROL_NUM ,
		'선택된 전체' AS PROD_ITEM_CODE,  
		'선택된 전체' AS WK_PLAN_NUM,
		A.CHILD_ITEM_CODE,
		MAX(B.ITEM_NAME) AS ITEM_NAME,
        MAX(B.SPEC) AS SPEC,
        MAX(B.STOCK_UNIT) AS STOCK_UNIT,
        MAX(C.ITEM_ACCOUNT) AS ITEM_ACCOUNT,
        MAX(C.SUPPLY_TYPE) AS SUPPLY_TYPE,
        MAX(C.ORDER_UNIT) AS ORDER_UNIT,
        SUM(A.CHILD_PRICE) AS CHILD_PRICE,
        SUM(A.CHILD_AMOUNT) AS CHILD_AMOUNT,
        SUM(A.PL_QTY) AS PL_QTY,
        SUM(A.TEMPN_02) AS UNIT_Q,
        SUM(A.TEMPN_03) AS LOSS_RATE,
		'선택된 전체' AS PROD_ITEM_NAME,
		MAX(R2.CODE_NAME) AS ITEM_ACCOUNT_NAME,
		MAX(R3.CODE_NAME) AS SUPPLY_TYPE_NAME
		  FROM BPL130T A WITH(NOLOCK)
	LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
									 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
	LEFT JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
									 AND A.DIV_CODE  = C.DIV_CODE
									 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
	LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.MAIN_CODE = 'B020'
									 AND R2.SUB_CODE != '$'
									 AND R2.SUB_CODE = C.ITEM_ACCOUNT
	LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									 AND R3.MAIN_CODE = 'B014'
									 AND R3.SUB_CODE != '$'
									 AND R3.SUB_CODE = C.SUPPLY_TYPE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.WORK_STEP = 'S' 
		   
		<if test="@foren.Ognl@isNotEmpty(PROD_WK_LIST)"> 
		
		AND A.MRP_CONTROL_NUM IN
		<foreach collection="PROD_WK_LIST" item="item" separator="," close=")" open="(">
			'${item.MRP_CONTROL_NUM}'
		</foreach>
		
		AND A.PROD_ITEM_CODE IN
		<foreach collection="PROD_WK_LIST" item="item" separator="," close=")" open="(">
			'${item.PROD_ITEM_CODE}'
		</foreach>
      	</if>
      	 
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_STEP, A.CHILD_ITEM_CODE

UNION ALL

	SELECT
		DENSE_RANK() OVER (ORDER BY   A.MRP_CONTROL_NUM ,A.PROD_ITEM_CODE, A.WK_PLAN_NUM) AS NUM,
		A.MRP_CONTROL_NUM ,
		A.PROD_ITEM_CODE,  
		A.WK_PLAN_NUM,
		A.CHILD_ITEM_CODE,
		MAX(B.ITEM_NAME) AS ITEM_NAME,
        MAX(B.SPEC) AS SPEC,
        MAX(B.STOCK_UNIT) AS STOCK_UNIT,
        MAX(C.ITEM_ACCOUNT) AS ITEM_ACCOUNT,
        MAX(C.SUPPLY_TYPE) AS SUPPLY_TYPE,
        MAX(C.ORDER_UNIT) AS ORDER_UNIT,
        SUM(A.CHILD_PRICE) AS CHILD_PRICE,
        SUM(A.CHILD_AMOUNT) AS CHILD_AMOUNT,
        SUM(A.PL_QTY) AS PL_QTY,
        SUM(A.TEMPN_02) AS UNIT_Q,
        SUM(A.TEMPN_03) AS LOSS_RATE,
		MAX(R1.ITEM_NAME) AS PROD_ITEM_NAME,
		MAX(R2.CODE_NAME) AS ITEM_ACCOUNT_NAME,
		MAX(R3.CODE_NAME) AS SUPPLY_TYPE_NAME
		  FROM BPL130T A WITH(NOLOCK)
	LEFT JOIN BPR100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
									 AND A.CHILD_ITEM_CODE = B.ITEM_CODE
	LEFT JOIN BPR200T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
									 AND A.DIV_CODE  = C.DIV_CODE
									 AND A.CHILD_ITEM_CODE = C.ITEM_CODE
	LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE 
									 AND R1.ITEM_CODE = A.PROD_ITEM_CODE
	LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.MAIN_CODE = 'B020'
									 AND R2.SUB_CODE != '$'
									 AND R2.SUB_CODE = C.ITEM_ACCOUNT
	LEFT JOIN BSA100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									 AND R3.MAIN_CODE = 'B014'
									 AND R3.SUB_CODE != '$'
									 AND R3.SUB_CODE = C.SUPPLY_TYPE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE = #{DIV_CODE}
		   AND A.WORK_STEP = 'S' 
		   
		<if test="@foren.Ognl@isNotEmpty(PROD_WK_LIST)"> 
		AND A.MRP_CONTROL_NUM IN
		<foreach collection="PROD_WK_LIST" item="item" separator="," close=")" open="(">
			'${item.MRP_CONTROL_NUM}'
		</foreach>
		AND A.PROD_ITEM_CODE IN
		<foreach collection="PROD_WK_LIST" item="item" separator="," close=")" open="(">
			'${item.PROD_ITEM_CODE}'
		</foreach>
      	</if>
      	 
	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WORK_STEP,A.MRP_CONTROL_NUM ,A.PROD_ITEM_CODE,  A.WK_PLAN_NUM , A.CHILD_ITEM_CODE
	
	
	</select>	
	
	
		<select id="mpo090ukrvServiceImpl.selectOrderList" parameterType="Map" resultType="rMap">
		SELECT
			A.DIV_CODE,
			B.ORDER_NUM,
		    A.SER_NO,
		    A.ITEM_CODE,
		    C.ITEM_NAME,
		    D.STOCK_UNIT,
		    D.SPEC,
		    C.ITEM_ACCOUNT,
		    C.SUPPLY_TYPE,
		    ISNULL((SELECT SUM(STOCK_Q)
		            FROM BIV100T WITH(NOLOCK)
		            WHERE COMP_CODE = A.COMP_CODE
                      AND DIV_CODE = A.DIV_CODE 
                      AND ITEM_CODE = A.ITEM_CODE), 0) 	AS CSTOCK,
		    C.SAFE_STOCK_Q,
		    C.BASIS_P,
		    A.ORDER_Q,
		    B.PJT_CODE,
		    B.PROJECT_NO,
		    E.PJT_NAME    				AS PROJECT_NAME,
    		C.WORK_SHOP_CODE,
    		B.ORDER_DATE,
    		B.CUSTOM_CODE,
			A.DVRY_DATE,
			A.WEEK_NUM
		FROM			   SOF110T A  WITH(NOLOCK)
		        INNER JOIN SOF100T B  WITH(NOLOCK)  ON B.COMP_CODE			= A.COMP_CODE
														AND B.DIV_CODE		= A.DIV_CODE
														AND B.ORDER_NUM		= A.ORDER_NUM
		        INNER JOIN BPR200T C WITH(NOLOCK)   ON C.COMP_CODE			= A.COMP_CODE
		        										AND C.DIV_CODE		= A.DIV_CODE
														AND C.ITEM_CODE		= A.ITEM_CODE
		        INNER JOIN BPR100T D WITH(NOLOCK)   ON D.COMP_CODE			= A.COMP_CODE
														AND D.ITEM_CODE		= A.ITEM_CODE
		        LEFT  JOIN BCM600T E WITH(NOLOCK)   ON E.COMP_CODE			= B.COMP_CODE
														AND E.PJT_CODE		= B.PROJECT_NO
		WHERE A.COMP_CODE = #{S_COMP_CODE}
			AND A.OUT_DIV_CODE = #{DIV_CODE}
			AND (A.ORDER_NUM + CONVERT(NVARCHAR(20),A.SER_NO)) NOT IN (SELECT S1.ORDER_NUM + CONVERT(NVARCHAR(20),A.SER_NO) FROM BPL120T S1 WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.OUT_DIV_CODE AND S1.WORK_STEP = 'S' AND S1.ORDER_NUM = A.ORDER_NUM AND S1.SER_NO = A.SER_NO)
			AND A.ORDER_STATUS != 'Y'						-- 20190620 추가: 완료된 건은 조회되지 않음
			AND A.ORDER_Q - A.OUTSTOCK_Q + A.RETURN_Q > 0	-- 완료된 건은 조회되지 않음
			AND ISNULL(A.CLOSE_YN, 'N') != 'Y'				-- 20190627 추가: 마감된 건은 조회되지 않음
			
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
			AND B.PROJECT_NO		LIKE #{PJT_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
			AND C.ITEM_ACCOUNT = #{ITEM_ACCOUNT}    /* 품목계정 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
			AND B.ORDER_DATE &gt;= #{FR_ORDER_DATE}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
			AND B.ORDER_DATE &lt;= #{TO_ORDER_DATE}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
			AND A.DVRY_DATE &gt;= #{DVRY_DATE_FR}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
			AND A.DVRY_DATE &lt;= #{DVRY_DATE_TO}    	/* 수주일자 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(FROM_NUM)">
			AND B.ORDER_NUM = #{FROM_NUM}    	/* 수주번호 */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
			AND A.ITEM_CODE LIKE #{ITEM_CODE_FR}   	/* 수주품번 */
		</if>
		ORDER BY ORDER_NUM DESC, SER_NO, ITEM_CODE
	</select>
	<select id="mpo090ukrvServiceImpl.selectProdList" parameterType="Map" resultType="rMap">
	SELECT 

		A.COMP_CODE
		,A.DIV_CODE
		,A.ITEM_CODE
		,R1.ITEM_NAME
		,R1.SPEC	--규격
		,R1.STOCK_UNIT	--단위
		,A.WK_PLAN_Q	--계획량
		,A.WK_PLAN_NUM	--생산계획번호
		,A.PRODT_PLAN_DATE  --계획일자
		,A.WEEK_NUM	--계획주차
		,A.MRP_CONTROL_NUM	--MRP번호
		,ISNULL((SELECT TOP 1 S1.ORDER_YN  FROM MRP400T S1 WITH(NOLOCK) WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.MRP_CONTROL_NUM = A.MRP_CONTROL_NUM),'N') AS ORDER_YN--발주확정
		,C.CUSTOM_CODE --거래처
		,R2.CUSTOM_NAME --거래처
		,A.ORDER_NUM	--수주번호
		,A.SEQ			--수주순번
		,R3.ITEM_ACCOUNT	--품목계정
		, R3.SUPPLY_TYPE
		, ISNULL(B.DVRY_DATE, CONVERT(NVARCHAR(8), DATEADD(D, -1, DATEADD(M, 1, SUBSTRING(A.PRODT_PLAN_DATE, 1, 6) + '01')), 112))	AS DVRY_DATE
		, ISNULL((SELECT SUM(STOCK_Q)
					FROM BIV100T WITH(NOLOCK)
				   WHERE COMP_CODE	= A.COMP_CODE
					 AND DIV_CODE	= A.DIV_CODE 
					 AND ITEM_CODE	= A.ITEM_CODE), 0) 	AS CSTOCK
	  FROM PPL100T A WITH(NOLOCK)
	
	  LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE		= A.COMP_CODE
									   AND R1.ITEM_CODE		= A.ITEM_CODE
	  LEFT  JOIN SOF110T B WITH(NOLOCK) ON B.COMP_CODE		= A.COMP_CODE
									   AND B.OUT_DIV_CODE	= A.DIV_CODE
									   AND B.ORDER_NUM		= A.ORDER_NUM
									   AND B.SER_NO			= A.SEQ
	  LEFT  JOIN SOF100T C WITH(NOLOCK) ON  C.COMP_CODE		= B.COMP_CODE
									   AND C.DIV_CODE		= B.DIV_CODE
									   AND C.ORDER_NUM		= B.ORDER_NUM
	  LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE		= C.COMP_CODE
									   AND R2.CUSTOM_CODE	= C.CUSTOM_CODE
	  LEFT JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE		= A.COMP_CODE
									   AND R3.DIV_CODE		= A.DIV_CODE
									   AND R3.ITEM_CODE		= A.ITEM_CODE

	  WHERE A.COMP_CODE = #{S_COMP_CODE}
		AND A.DIV_CODE = #{DIV_CODE}
		AND A.WEEK_NUM &gt;= #{WEEK_NUM_FR}
		AND A.WEEK_NUM &lt;= #{WEEK_NUM_TO}
		
  	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		AND R3.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
	</if>
  	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
		AND A.ITEM_CODE = #{ITEM_CODE}
	</if>
	<if test="ORDER_YN == &quot;Y&quot;"> 
		AND ISNULL((SELECT TOP 1 S1.ORDER_YN FROM MRP400T S1 WITH(NOLOCK) WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.MRP_CONTROL_NUM = A.MRP_CONTROL_NUM),'N') = 'Y'
	</if>
	<if test="ORDER_YN == &quot;N&quot;"> 
		AND ISNULL((SELECT TOP 1 S1.ORDER_YN FROM MRP400T S1 WITH(NOLOCK) WHERE S1.COMP_CODE = A.COMP_CODE AND S1.DIV_CODE = A.DIV_CODE AND S1.MRP_CONTROL_NUM = A.MRP_CONTROL_NUM),'N') = 'N'
	</if>
		
		AND NOT EXISTS (SELECT S1.WK_PLAN_NUM
						  FROM BPL120T S1
						 WHERE S1.COMP_CODE		= A.COMP_CODE
						   AND S1.DIV_CODE		= A.DIV_CODE
						   AND S1.WORK_STEP		= 'S'
						   AND S1.WK_PLAN_NUM	= A.WK_PLAN_NUM)
	
	  ORDER BY A.COMP_CODE, A.DIV_CODE, A.WK_PLAN_NUM, A.MRP_CONTROL_NUM
	</select>
	
	<insert id="mpo090ukrvServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_BPL120T (
			KEY_VALUE
		    , OPR_FLAG
		    , COMP_CODE
		    , DIV_CODE
		    , WORK_STEP
		    , PROD_ITEM_CODE
		    , PL_QTY
		    , PL_COST
		    , PL_AMOUNT
		    , PROJECT_NO
		    , ORDER_NUM
		    , SER_NO
		 --   , MRP_CONTROL_NUM
		    , REMARK
		    , INSERT_DB_USER
		    , INSERT_DB_TIME
		    , UPDATE_DB_USER
		    , UPDATE_DB_TIME
		    , TEMPC_01
		    , TEMPC_02
		    , TEMPC_03
		    , TEMPN_01
		    , TEMPN_02
		    , TEMPN_03
		    , WK_PLAN_NUM
		)VALUES(
			#{KEY_VALUE}
			,#{OPR_FLAG}
			,#{S_COMP_CODE}
			,#{DIV_CODE}
			,#{WORK_STEP}
			,#{PROD_ITEM_CODE}
			,#{PL_QTY}
			, 0
			, 0
			, #{PROJECT_NO}
		    , #{ORDER_NUM}
		    , #{SER_NO}
		 --   , ''
		    , #{REMARK}
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
			, #{DVRY_DATE}  
			, #{WEEK_NUM}	
			, ''
			, 0
			, 0
			, 0
			, #{WK_PLAN_NUM}
		)
	</insert>
	
	<insert id="mpo090ukrvServiceImpl.insertLogDetail" parameterType="Map">
		INSERT INTO L_MRP400T (
			KEY_VALUE,
			OPR_FLAG,
			COMP_CODE,
		    DIV_CODE,
		    ORDER_REQ_NUM,
		    MRP_CONTROL_NUM,
		    ITEM_CODE,
		    BASIS_DATE,
		    CREATE_DATE,
		    SUPPLY_TYPE,
		    DOM_FORIGN,
		    REQ_PLAN_Q,
		    ORDER_PLAN_Q,
		    ORDER_PLAN_DATE,
		    CUSTOM_CODE,
		    CUSTOM_NAME,
		    ORDER_YN,
		    EXCHG_YN,
		    PROJECT_NO,
		    MRP_YN,
		    REMARK,
		    INSERT_DB_USER,
		    INSERT_DB_TIME,
		    UPDATE_DB_USER,
		    UPDATE_DB_TIME,
		    PJT_CODE,
		    IN_DIV_CODE,
		    
		    PROD_ITEM_CODE,
		    ORDER_NUM,
		    ORDER_SEQ
		    
		)VALUES(
			#{KEY_VALUE},
			#{OPR_FLAG},
			#{S_COMP_CODE},
			#{DIV_CODE},
			#{ORDER_REQ_NUM},
			#{MRP_CONTROL_NUM},
			#{CHILD_ITEM_CODE},
			CONVERT(NVARCHAR(08), GETDATE(), 112),
			CONVERT(NVARCHAR(08), GETDATE(), 112),
			#{SUPPLY_TYPE},
			1,
			#{ORDER_REQ_Q},
		    #{ORDER_REQ_Q},
		    CONVERT(NVARCHAR(08), GETDATE(), 112),
			#{CUSTOM_CODE},
		    #{CUSTOM_NAME},
		    'N',
		    'N',
		    #{PROJECT_NO},
		    'Y',
		    #{REMARK},
		    #{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE(),
			#{ORDER_NUM},
			#{DIV_CODE},
			
			#{PROD_ITEM_CODE},
		    #{ORDER_NUM},
		    #{SER_NO}
		)
	</insert>
	
	<update id="mpo090ukrvServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
	    {call SP_GetAutoNumComp (
	        #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	
	
	<update id="mpo090ukrvServiceImpl.USP_CALC_PL" parameterType="Map" statementType="CALLABLE">
	    {call USP_CALC_PLALL (
	        #{KeyValue,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{RtnMrpNum, 	mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ErrorDesc, 	mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
    </update>
    
    <update id="mpo090ukrvServiceImpl.USP_MATRL_MPO070UKRV" parameterType="Map" statementType="CALLABLE">
	    {call USP_MATRL_MPO070UKRV (
	        #{KeyValue,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ErrorDesc, 	mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
    </update>
    
    <update id="mpo090ukrvServiceImpl.updateBpl120T" parameterType="Map">
    	UPDATE BPL120T 
    	SET 
    		COMP_CODE = #{S_COMP_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				PROJECT_NO = #{PJT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
				,ORDER_NUM = #{ORDER_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SER_NO)">
				,SER_NO	= #{SER_NO}
			</if>
    		,REMARK = #{REMARK}
    	WHERE COMP_CODE = #{S_COMP_CODE} 
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'S'
    		AND MRP_CONTROL_NUM	= #{MRP_CONTROL_NUM}
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE};
    </update>
    
    <update id="mpo090ukrvServiceImpl.updateBpl130T" parameterType="Map">
    	UPDATE BPL130T 
    	SET 
    		COMP_CODE = #{S_COMP_CODE}
    		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
				PROJECT_NO = #{PJT_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
				,ORDER_NUM = #{ORDER_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SER_NO)">
				,SER_NO	= #{SER_NO}
			</if>
			,REMARK = #{REMARK}
    	WHERE COMP_CODE = #{S_COMP_CODE}
    		AND DIV_CODE = #{DIV_CODE} 
    		AND WORK_STEP = 'S'
    		AND MRP_CONTROL_NUM	= #{MRP_CONTROL_NUM}
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE}
    </update>
    
    <update id="mpo090ukrvServiceImpl.deleteMaster" parameterType="Map">
    	DELETE FROM BPL120T 
    	WHERE COMP_CODE = #{S_COMP_CODE}
    		AND DIV_CODE = #{DIV_CODE}
    		AND WORK_STEP = 'S'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE}
    		AND MRP_CONTROL_NUM	= #{MRP_CONTROL_NUM}
    		AND ISNULL(WK_PLAN_NUM, '')	= #{WK_PLAN_NUM}
    </update>

	<update id="mpo090ukrvServiceImpl.updateProdtPlan" parameterType="Map">
		UPDATE PPL100T
		   SET MRP_CONTROL_NUM	= NULL
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND WK_PLAN_NUM		= #{WK_PLAN_NUM}
	</update>

    <update id="mpo090ukrvServiceImpl.deleteDetail" parameterType="Map">
    	DELETE FROM BPL130T
    	WHERE COMP_CODE = #{S_COMP_CODE}
    		AND DIV_CODE = #{DIV_CODE}
    		AND WORK_STEP = 'S'
    		AND PROD_ITEM_CODE = #{PROD_ITEM_CODE}
    		AND MRP_CONTROL_NUM	= #{MRP_CONTROL_NUM}
    		AND ISNULL(WK_PLAN_NUM, '')	= #{WK_PLAN_NUM}
    </update>
	
	
	<insert id="mpo090ukrvServiceImpl.insertExcelData" parameterType="Map">
		INSERT INTO MPO090UKRV_EXCEL
			 ( _EXCEL_JOBID		,_EXCEL_ROWNUM		,_EXCEL_HAS_ERROR	,_EXCEL_ERROR_MSG
			 , PROD_ITEM_CODE	, PL_QTY			, DVRY_DATE	
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME	)
		VALUES
			 ( #{_EXCEL_JOBID}
			 , #{_EXCEL_ROWNUM}
			 , #{_EXCEL_HAS_ERROR}
			 , #{_EXCEL_ERROR_MSG}
			 , #{PROD_ITEM_CODE}
			 , ${PL_QTY}
			 , #{DVRY_DATE}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()	)
	</insert>

	<update id="mpo090ukrvServiceImpl.excelValidate">
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN B.ITEM_NAME IS NULL THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN B.ITEM_NAME IS NULL THEN ISNULL(_EXCEL_ERROR_MSG, '') + ' 품목코드를 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
		  FROM					MPO090UKRV_EXCEL A	WITH(NOLOCK)
				LEFT OUTER JOIN	BPR100T B			WITH(NOLOCK)
							 ON B.COMP_CODE	= #{S_COMP_CODE}
							AND B.ITEM_CODE	= A.PROD_ITEM_CODE
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		 
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = ( CASE	WHEN uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.DVRY_DATE) = 0 THEN 'Y'
											ELSE A._EXCEL_HAS_ERROR
									  END )
			 , A._EXCEL_ERROR_MSG = ( CASE	WHEN uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.DVRY_DATE) = 0 THEN ISNULL(_EXCEL_ERROR_MSG, '') + ' 납기일을 확인하여 주십시오.'
											ELSE A._EXCEL_ERROR_MSG 
									  END )
			 , A.WEEK_NUM		  = SUBSTRING(A.DVRY_DATE, 1, 4) + RIGHT('000' + CONVERT(NVARCHAR(2), uniLITE.fnGetCalWeek(#{S_COMP_CODE}, A.DVRY_DATE)), 3)
		  FROM MPO090UKRV_EXCEL A	WITH(NOLOCK)
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
	</update>

	<select id="mpo090ukrvServiceImpl.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
		SELECT A._EXCEL_JOBID
			 , A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 
			 , A.PROD_ITEM_CODE
			 , B.ITEM_NAME													AS PROD_ITEM_NAME
			 , B.SPEC
			 , C.ITEM_ACCOUNT
			 , C.SUPPLY_TYPE
			 , A.PL_QTY
			 , A.DVRY_DATE
			 , A.WEEK_NUM
			 , CONVERT(NVARCHAR(08), GETDATE(), 112) + A.PROD_ITEM_CODE		AS ORDER_NUM
			 , ROW_NUMBER() OVER(ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM)	AS SER_NO
		  FROM					MPO090UKRV_EXCEL A	WITH (NOLOCK)
				LEFT OUTER JOIN	BPR100T B			WITH (NOLOCK)
							 ON B.COMP_CODE	= #{S_COMP_CODE}
							AND B.ITEM_CODE	= A.PROD_ITEM_CODE
				LEFT OUTER JOIN	BPR200T C			WITH (NOLOCK)
							 ON C.COMP_CODE	= #{S_COMP_CODE}
							AND C.DIV_CODE	= #{S_DIV_CODE}
							AND C.ITEM_CODE	= A.PROD_ITEM_CODE
		 WHERE A._EXCEL_JOBID	= #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_JOBID
			 , A._EXCEL_ROWNUM
	</select>

</mapper>