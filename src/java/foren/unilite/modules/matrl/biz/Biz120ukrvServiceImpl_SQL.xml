<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz120ukrvServiceImpl">

	<select id="biz120ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">

	/* biz120ukrv.Cbiz120ukrv[fnBiz120QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID                */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT A.DIV_CODE
	         , A.CUSTOM_CODE
	         , A.COUNT_DATE
	         , B.ITEM_ACCOUNT
	         , B.ITEM_LEVEL1
	         , B.ITEM_LEVEL2
	         , B.ITEM_LEVEL3
	         , B.ITEM_CODE
	         , B.ITEM_NAME
	         , B.SPEC
	         , B.STOCK_UNIT
	         , A.GOOD_STOCK_BOOK_Q
	         , A.BAD_STOCK_BOOK_Q
	         , A.GOOD_STOCK_Q
	         , A.BAD_STOCK_Q
	         , A.COUNT_FLAG
	         , A.COUNT_CONT_DATE
	         , A.REMARK
	         , A.COMP_CODE
	      FROM BIZ300T A
	           INNER JOIN (SELECT B.COMP_CODE
	                            , B.DIV_CODE
	                            , B.CUSTOM_CODE
	                            , B.ITEM_ACCOUNT
	                            , (SELECT LEVEL_NAME
	                                 FROM BPR000T
	                                WHERE COMP_CODE = B.COMP_CODE
	                                  AND LEVEL1    = ITEM_LEVEL1
	                                  AND LEVEL2    = '*'
	                                  AND LEVEL3    = '*') AS ITEM_LEVEL1
	                            , (SELECT LEVEL_NAME
	                                 FROM BPR000T
	                                WHERE COMP_CODE = B.COMP_CODE
	                                  AND LEVEL1    = ITEM_LEVEL1
	                                  AND LEVEL2    = ITEM_LEVEL2
	                                  AND LEVEL3    = '*') AS ITEM_LEVEL2
	                            , (SELECT LEVEL_NAME
	                                 FROM BPR000T
	                                WHERE COMP_CODE = B.COMP_CODE
	                                  AND LEVEL1    = ITEM_LEVEL1
	                                  AND LEVEL2    = ITEM_LEVEL2
	                                  AND LEVEL3    = ITEM_LEVEL3) AS ITEM_LEVEL3
	                            , B.ITEM_CODE
	                            ,  B.ITEM_NAME
	                            , A.SPEC
	                            , A.STOCK_UNIT
	                         FROM            BPR100T A WITH (NOLOCK)
	                              INNER JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                                AND B.ITEM_CODE = A.ITEM_CODE
	                                                                AND B.DIV_CODE  = #{DIV_CODE}
	                        WHERE A.COMP_CODE     = @CompCode
	    					<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	                          AND B.ITEM_ACCOUNT  =#{ITEM_ACCOUNT}
	                        </if>
	    					<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	                          AND A.ITEM_LEVEL1   = #{ITEM_LEVEL1}
	                        </if>
	    					<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	                          AND A.ITEM_LEVEL2   = #{ITEM_LEVEL2}
	                        </if>
	    					<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	                          AND A.ITEM_LEVEL3   = #{ITEM_LEVEL3}
	                        </if>
	                          AND B.REAL_CARE_YN  = 'Y'
	                          AND A.STOCK_CARE_YN = 'Y') B ON A.COMP_CODE   = B.COMP_CODE
	                                                      AND A.DIV_CODE    = B.DIV_CODE
	                                                      AND A.ITEM_CODE   = B.ITEM_CODE
	     WHERE A.COMP_CODE   = @CompCode
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       AND A.DIV_CODE    = #{DIV_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	       AND A.CUSTOM_CODE = #{CUSTOM_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
	       AND A.COUNT_DATE  = #{COUNT_DATE}
	     </if>
	     ORDER BY A.ITEM_CODE

	    SET ARITHABORT OFF
	    SET NOCOUNT OFF
	END

	</select>

	<insert id="biz120ukrvServiceImpl.insertLogMaster" parameterType="Map">	/* 저장쿼리 */
	/*biz120ukrvServiceImpl.selectSaveList*/
	INSERT INTO L_BIZ300T
     (  KEY_VALUE,
     	OPR_FLAG,
    	COMP_CODE,
    	DIV_CODE,
    	COUNT_DATE,
    	CUSTOM_CODE,
    	ITEM_CODE,
    	COUNT_CONT_DATE,
    	GOOD_STOCK_BOOK_Q,
    	BAD_STOCK_BOOK_Q,
    	GOOD_STOCK_Q,
    	BAD_STOCK_Q,
    	COUNT_FLAG,
    	REMARK,
    	UPDATE_DB_USER,
    	UPDATE_DB_TIME,
    	INSERT_DB_USER,
    	INSERT_DB_TIME	 )
	VALUES
     (  #{KEY_VALUE},
     	#{OPR_FLAG},
    	#{S_COMP_CODE},
    	#{DIV_CODE},
    	#{COUNT_DATE},
    	#{CUSTOM_CODE},
    	#{ITEM_CODE},
    	#{COUNT_CONT_DATE},
    	#{GOOD_STOCK_BOOK_Q},
    	#{BAD_STOCK_BOOK_Q},
    	#{GOOD_STOCK_Q},
    	#{BAD_STOCK_Q},
    	#{COUNT_FLAG},
    	#{REMARK},
    	#{S_USER_ID},
    	getDate(),
    	#{S_USER_ID},
    	getDate()	 )
	</insert>

	<update id="biz120ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_OUT_StockCounting (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CountDate, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
</mapper>