<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mes100skrv_novisServiceImpl">

	<select id="s_mes100skrv_novisServiceImpl.selectList" parameterType="Map" resultType="rMap">
			<![CDATA[
		DECLARE
			@V_COMM_DATE			DATETIME,			-- 현재 서버시간.
						
			@V_COMM_YMD				NVARCHAR(08),		-- 현재 YYYYMMDD
			@V_COMM_DATE_F			NVARCHAR(16),
			@V_COMM_DATE_T			NVARCHAR(16),
			@V_DT_START_OPER		DATETIME,			-- 금일 최초 장비가동시간.
						
			@V_DT_1DAY_AGO_YMD		NVARCHAR(08)		-- 전일 YYYYMMDD
							
		BEGIN
				
			-- 템프 테이블 확인 후 삭제.
			IF OBJECT_ID('tempdb..#TEMP_OPER_START_TIME') IS NOT NULL 
				DROP TABLE #TEMP_OPER_START_TIME
				
			SET @V_COMM_DATE		= GETDATE()
			SET @V_COMM_YMD			= CONVERT(NVARCHAR, @V_COMM_DATE, 112);
			--SET @V_DT_1DAY_AGO_YMD	= CONVERT(NVARCHAR, DATEADD(DAY, -1, @V_COMM_DATE), 112);
			SET @V_COMM_DATE_F		= CONVERT(VARCHAR(10),@V_COMM_DATE,112) + REPLACE(CONVERT(VARCHAR(8),DATEADD(MI,-1,@V_COMM_DATE),108),':','')
			SET @V_COMM_DATE_T		= CONVERT(VARCHAR(10),@V_COMM_DATE,112) + REPLACE(CONVERT(VARCHAR(8),@V_COMM_DATE,108),':','')
									
			--기계가동시간
			SELECT  A.COMM_EQPMN_IP
					,MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END) AS OPER_START_TIME
					,MAX(A.COMM_DATE) AS LATEST_DATE
					,(SELECT DATA FROM COMM_DATA_INFO_2 WHERE COMM_EQPMN_IP = A.COMM_EQPMN_IP AND COMM_DATE = MAX(A.COMM_DATE)) AS COMM_OPER
					,SUBSTRING(CONVERT(NVARCHAR, MAX(A.COMM_DATE), 8),1, 2) AS LATEST_H
					,SUBSTRING(CONVERT(NVARCHAR, MAX(A.COMM_DATE), 8),4, 2) AS LATEST_M
					,SUBSTRING(CONVERT(NVARCHAR, MAX(A.COMM_DATE), 8),7, 2) AS LATEST_S
			INTO #TEMP_OPER_START_TIME
			FROM 
			(
				SELECT  COMM_EQPMN_IP
						,ISNULL(	LAG(DATA, 1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE), 'False')	AS PRIV_DATA								 
						,DATA
						,COMM_DATE
				FROM COMM_DATA_INFO_2 WITH (NOLOCK)
				WHERE	COMM_EQPMN_IP IN ('192.168.0.231','192.168.0.232')
				AND		COMM_YMD		= @V_COMM_YMD
			) A
			GROUP BY A.COMM_EQPMN_IP
						
			
			SELECT	 A.COMM_EQPMN_IP
					,A.ITEM_CODE
					,A.ITEM_NAME
					,ISNULL(CONVERT(NVARCHAR, A.DT_START_OPER, 8), '00:00:00')				AS TIME_START_OPER												-- 시작시간
					,ISNULL(CONVERT(NVARCHAR, DATEADD(SS, A.SEC_OPER, ''), 8), '00:00:00')	AS TIME_OPER													-- 가동시간
					,ISNULL(CONVERT(NVARCHAR, DATEADD(SS, A.SEC_STOP, ''), 8), '00:00:00')	AS TIME_STOP													-- 정지시간
					--,A.CNT_STOP																													-- 정지횟수
					--,CASE WHEN A.SEC_DIFF_END_TO_START	= 0 THEN 0 ELSE (A.SEC_DIFF_END_TO_START - A.SEC_STOP) * 100 / A.SEC_DIFF_END_TO_START END AS TIME_OPER_EFFICIENCY					-- 시간가동효율 수식: ((종료시간 - 가동시작시간) - 정지시간) / (종료시간 - 가동시작시간) * 100
					--,C.SPEED_PRODT AS PERFM_OPER_EFFICIENCY																									-- 성능가동효율
					,CASE WHEN (SELECT COUNT(*) 
								FROM COMM_DATA_INFO_2 
								WHERE COMM_EQPMN_IP = A.COMM_EQPMN_IP 
								AND COMM_YMD + COMM_H + COMM_M + COMM_S BETWEEN @V_COMM_DATE_F AND @V_COMM_DATE_T) > 0
							THEN A.COMM_OPER ELSE 'UnConnected' END AS YN_OPER				-- 가동여부.
					--,(SELECT DATA_LAMP1 FROM COMM_DATA_INFO_2 WHERE COMM_EQPMN_IP = A.COMM_EQPMN_IP AND COMM_DATE = A.DT_NOW) AS YN_LAMP1			-- 원단램프1.
					--,(SELECT DATA_LAMP2 FROM COMM_DATA_INFO_2 WHERE COMM_EQPMN_IP = A.COMM_EQPMN_IP AND COMM_DATE = A.DT_NOW) AS YN_LAMP2			-- 원단램프2.
					--,(SELECT DATA_LAMP3 FROM COMM_DATA_INFO_2 WHERE COMM_EQPMN_IP = A.COMM_EQPMN_IP AND COMM_DATE = A.DT_NOW) AS YN_LAMP3			-- 원단램프3.
					,ISNULL(B.DATA, 0) AS QTY_PRODT										-- 당일생산량
					,ISNULL(REPLACE(CONVERT(NVARCHAR, CONVERT(money, B.DATA), 1),'.00',''), 0) AS QTY_PRODT_FORMT
					,ISNULL(A.CNT_STOP, 0) AS CNT_STOP
					--,C.SPEED_PRODT																												-- 포장속도
					--,C1.SPEED_PRODT_BF																											-- 전일포장속도		 																									
			FROM 
			(
				SELECT	A.COMM_EQPMN_IP	
					,	A.COMM_YMD
					,	D.ITEM_CODE
					,	D.ITEM_NAME
					,	C.OPER_START_TIME AS DT_START_OPER
					,	SUM(CASE WHEN C.OPER_START_TIME IS NOT NULL AND C.OPER_START_TIME <= A.COMM_DATE AND A.DATA_STATUS IN ('중지시작','가동')	THEN A.DIFF_SEC		ELSE 0			END) AS SEC_OPER	-- 가동시간(초)
					,	SUM(CASE WHEN C.OPER_START_TIME IS NOT NULL AND C.OPER_START_TIME <= A.COMM_DATE AND A.DATA_STATUS IN ('가동시작','중지')	THEN A.DIFF_SEC		ELSE 0			END) AS SEC_STOP	-- 정지시간(초)
					,	SUM(CASE WHEN C.OPER_START_TIME IS NOT NULL AND C.OPER_START_TIME <= A.COMM_DATE AND A.DATA_STATUS =	'중지시작'			THEN 1				ELSE 0			END) AS CNT_STOP	-- 정지횟수
					,	C.LATEST_DATE
					,	C.LATEST_H
					,	C.LATEST_M
					,   C.LATEST_S
					,	C.COMM_OPER
					--,	MAX(A.COMM_DATE) AS DT_NOW
					--,	CASE WHEN @V_DT_START_OPER IS NULL	THEN 0 
					--										ELSE DATEDIFF(SS, @V_DT_START_OPER ,MAX(A.COMM_DATE)) END AS SEC_DIFF_END_TO_START --(종료[가장최근데이터시간] - 가동시작시간)
				FROM
				(
					SELECT A.COMM_EQPMN_IP
						,  A.COMM_YMD	
						,  CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지'
								WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지시작'
								WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동시작'
								WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동'	END AS DATA_STATUS
						,  CASE WHEN A.PRIV_COMM_DATE IS NULL THEN 0
								ELSE DATEDIFF(SS, A.PRIV_COMM_DATE, A.COMM_DATE) END AS DIFF_SEC		
						,  A.PRIV_COMM_DATE
						,  A.COMM_DATE
					FROM 
					(
						SELECT  COMM_EQPMN_IP
							,	ISNULL(	LAG(DATA,	1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE), 'False')	AS PRIV_DATA
							,	LAG(COMM_DATE,		1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE)			AS PRIV_COMM_DATE
							, DATA
							, COMM_DATE
							, COMM_YMD
						FROM COMM_DATA_INFO_2 WITH (NOLOCK)
						WHERE	COMM_YMD	= @V_COMM_YMD
					) A
				) A
				LEFT OUTER JOIN #TEMP_OPER_START_TIME	C ON A.COMM_EQPMN_IP = C.COMM_EQPMN_IP
				LEFT OUTER JOIN COMM_DATA_ITEM			D ON A.COMM_EQPMN_IP = D.COMM_EQPMN_IP AND A.COMM_YMD = D.COMM_YMD

				GROUP BY	A.COMM_EQPMN_IP,	C.OPER_START_TIME,		C.LATEST_DATE,		C.LATEST_H,		C.LATEST_M,   
							C.LATEST_S,			C.COMM_OPER,			A.COMM_YMD,			D.ITEM_CODE,	D.ITEM_NAME
			) A
			/********** 현재 생산누적량 **********/
			LEFT OUTER JOIN COMM_DATA_INFO_1 B ON A.COMM_EQPMN_IP = B.COMM_EQPMN_IP AND A.LATEST_DATE = B.COMM_DATE
											
			ORDER BY A.COMM_EQPMN_IP
				
						
		END      
			]]>
	</select>

	<select id="s_mes100skrv_novisServiceImpl.qtyList" parameterType="Map" resultType="rMap">
			<![CDATA[
		DECLARE
			@V_COMM_DATE			DATETIME,			-- 현재 서버시간.		
			@V_COMM_YMD				NVARCHAR(08)		-- 현재 YYYYMMDD
					
		BEGIN
		
			SET @V_COMM_DATE		= GETDATE()
			SET @V_COMM_YMD			= CONVERT(NVARCHAR, @V_COMM_DATE, 112);
		
		
			SELECT	A.COMM_YMD AS COMM_YMD_231
					,REPLACE(CONVERT(NVARCHAR, CONVERT(money, A.QTY), 1),'.00','')	AS QTY_231
					,B.COMM_YMD AS COMM_YMD_232
					,REPLACE(CONVERT(NVARCHAR, CONVERT(money, B.QTY), 1),'.00','')	AS QTY_232
			FROM 
			(
				SELECT	TOP 8
						A.COMM_EQPMN_IP
						,ROW_NUMBER() OVER(ORDER BY A.COMM_YMD DESC) AS ROW_NUM
						,SUBSTRING(A.COMM_YMD, 1, 4) + '-' + SUBSTRING(A.COMM_YMD, 5, 2) + '-' + SUBSTRING(A.COMM_YMD, 7, 2) AS COMM_YMD
						,MAX(A.DATA) AS QTY
				FROM	COMM_DATA_INFO_1 A
				LEFT OUTER JOIN COMM_DATA_INFO_2 B WITH (NOLOCK) ON A.COMM_EQPMN_IP = B.COMM_EQPMN_IP AND A.COMM_DATE = B.COMM_DATE
				WHERE 	A.COMM_EQPMN_IP IN ('192.168.0.231')
				AND		A.COMM_YMD	<= @V_COMM_YMD
				AND		A.COMM_H	>= '09'
				AND		B.DATA		= 'True'
		
				GROUP BY A.COMM_EQPMN_IP,		A.COMM_YMD
				
			) A
			FULL OUTER JOIN
			(
				SELECT	TOP 8
						A.COMM_EQPMN_IP
						,ROW_NUMBER() OVER(ORDER BY A.COMM_YMD DESC) AS ROW_NUM
						,SUBSTRING(A.COMM_YMD, 1, 4) + '-' + SUBSTRING(A.COMM_YMD, 5, 2) + '-' + SUBSTRING(A.COMM_YMD, 7, 2) AS COMM_YMD
						,MAX(A.DATA) AS QTY
				FROM	COMM_DATA_INFO_1 A WITH (NOLOCK)
				LEFT OUTER JOIN COMM_DATA_INFO_2 B WITH (NOLOCK) ON A.COMM_EQPMN_IP = B.COMM_EQPMN_IP AND A.COMM_DATE = B.COMM_DATE
				WHERE 	A.COMM_EQPMN_IP IN ('192.168.0.232')
				AND		A.COMM_YMD	<= @V_COMM_YMD
				AND		A.COMM_H	>= '09'
				AND		B.DATA		= 'True'
				GROUP BY A.COMM_EQPMN_IP,		A.COMM_YMD
				
			) B ON A.ROW_NUM = B.ROW_NUM
			
			ORDER BY A.ROW_NUM
		END 
			]]>
	</select>

	<select id="s_mes100skrv_novisServiceImpl.selectProductionCnt" parameterType="Map" resultType="rMap">
		<![CDATA[
	DECLARE
		@V_COMM_EQPMN_IP1		NVARCHAR(20),		-- 장비 IP
		@V_COMM_EQPMN_IP2		NVARCHAR(20),		-- 장비 IP
		@V_COMM_DATE			DATETIME,			-- 현재 서버시간.
		@V_DT_HOUR				NVARCHAR(02),		-- 현재 시.
		@V_DT_MIN				NVARCHAR(02),		-- 현재 분.	
			
		@V_COMM_YMD				NVARCHAR(08),		-- 현재 YYYYMMDD
		@V_DT_START_OPER		DATETIME,			-- 금일 최초 장비가동시간.
		@V_DT_START_OPER2		DATETIME			-- 금일 최초 장비가동시간.
	BEGIN
			
			
		-- 템프 테이블 확인 후 삭제.
		IF OBJECT_ID('tempdb..#TEMP_OPER_TIME') IS NOT NULL 
			DROP TABLE #TEMP_OPER_TIME
	
		-- 변수 셋팅.
		SET @V_COMM_EQPMN_IP1	= '192.168.0.231'	-- 장비 IP
		SET @V_COMM_EQPMN_IP2	= '192.168.0.232'	-- 장비 IP
		SET @V_COMM_DATE		= GETDATE()		 	-- 현재 시간.
				
		SET @V_COMM_YMD		= CONVERT(NVARCHAR, @V_COMM_DATE, 112); -- NVARCHAR(08) 현재 년월일.
		SET @V_DT_HOUR		= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),1, 2);
		SET @V_DT_MIN		= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),4, 2);
	
	
		-- 금일 최초 가동 시간 체크.
		SET @V_DT_START_OPER	= (SELECT  MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END)
									FROM 
									(
									SELECT  ISNULL(	LAG(DATA, 1, NULL) OVER (ORDER BY COMM_DATE), 'False')	AS PRIV_DATA								 
										,	DATA
										,	COMM_DATE
									FROM COMM_DATA_INFO_2 WITH (NOLOCK)
									WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP1
									AND		COMM_YMD		= @V_COMM_YMD
									)A 
									)		
		
		-- 금일 최초 장비 가동시간.
		SET @V_DT_START_OPER2	= (SELECT  MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END)
									FROM 
									(
									SELECT  ISNULL(	LAG(DATA, 1, NULL) OVER (ORDER BY COMM_DATE), 'False')	AS PRIV_DATA								 
										,	DATA
										,	COMM_DATE
									FROM COMM_DATA_INFO_2 WITH (NOLOCK)
									WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP2
									AND		COMM_YMD		= @V_COMM_YMD
									)A 
									)		-- 금일 최초 장비 가동시간.
			
			
			
			
		/********** 01. 누적 가동시간 TEMP 테이블
		************************************************************/
		SELECT	H.COMM_EQPMN_IP, H.COMM_YMD,		H.COMM_H
				, CASE	WHEN H.COMM_M BETWEEN  '00' AND '04' THEN '00'
						WHEN H.COMM_M BETWEEN  '05' AND '09' THEN '05'
						WHEN H.COMM_M BETWEEN  '10' AND '14' THEN '10'
						WHEN H.COMM_M BETWEEN  '15' AND '19' THEN '15'
						WHEN H.COMM_M BETWEEN  '20' AND '24' THEN '20'
						WHEN H.COMM_M BETWEEN  '25' AND '29' THEN '25'
						WHEN H.COMM_M BETWEEN  '30' AND '34' THEN '30'
						WHEN H.COMM_M BETWEEN  '35' AND '39' THEN '35'
						WHEN H.COMM_M BETWEEN  '40' AND '44' THEN '40'
						WHEN H.COMM_M BETWEEN  '45' AND '49' THEN '45'
						WHEN H.COMM_M BETWEEN  '50' AND '54' THEN '50'
						WHEN H.COMM_M BETWEEN  '55' AND '59' THEN '55' END AS COMM_M
				, SUM(H.DIFF_SEC)		AS TOT_REAL_SEC											-- 전체 초.
				, CASE WHEN SUM(H.DIFF_SEC) > 300 THEN 300 ELSE SUM(H.DIFF_SEC) END AS TOT_SEC	-- 전체 초.
		INTO #TEMP_OPER_TIME
		FROM 
		(
			SELECT A.COMM_EQPMN_IP, A.COMM_DATE,	A.COMM_YMD,		A.COMM_H
				,  COMM_M
				,  CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지'
						WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지시작'
						WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동시작'
						WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동'	END AS DATA_STATUS
				,  CASE WHEN A.PRIV_COMM_DATE IS NULL THEN 0
						ELSE DATEDIFF(SS, A.PRIV_COMM_DATE, A.COMM_DATE) END AS DIFF_SEC		
				,  A.PRIV_COMM_DATE
			FROM 
			(
				SELECT  COMM_EQPMN_IP, COMM_DATE,	COMM_YMD,	COMM_H,		COMM_M
					,	ISNULL(	LAG(DATA,	1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE), 'False')	AS PRIV_DATA
					,	LAG(COMM_DATE,		1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE)			AS PRIV_COMM_DATE
					, DATA
				
				FROM COMM_DATA_INFO_2 WITH (NOLOCK)
				WHERE	COMM_YMD		= @V_COMM_YMD
			) A
		) H
		WHERE DATA_STATUS IN ('중지시작', '가동')
	
		GROUP BY	H.COMM_EQPMN_IP, H.COMM_YMD,		H.COMM_H
				, CASE	WHEN H.COMM_M BETWEEN  '00' AND '04' THEN '00'
						WHEN H.COMM_M BETWEEN  '05' AND '09' THEN '05'
						WHEN H.COMM_M BETWEEN  '10' AND '14' THEN '10'
						WHEN H.COMM_M BETWEEN  '15' AND '19' THEN '15'
						WHEN H.COMM_M BETWEEN  '20' AND '24' THEN '20'
						WHEN H.COMM_M BETWEEN  '25' AND '29' THEN '25'
						WHEN H.COMM_M BETWEEN  '30' AND '34' THEN '30'
						WHEN H.COMM_M BETWEEN  '35' AND '39' THEN '35'
						WHEN H.COMM_M BETWEEN  '40' AND '44' THEN '40'
						WHEN H.COMM_M BETWEEN  '45' AND '49' THEN '45'
						WHEN H.COMM_M BETWEEN  '50' AND '54' THEN '50'
						WHEN H.COMM_M BETWEEN  '55' AND '59' THEN '55' END
	
		
		
		SELECT  @V_COMM_YMD AS YMD
			 , CONVERT(DATETIME, @V_COMM_YMD + ' ' + H.HH + ':' + M.MM + ':00') AS DT
			 ,	H.HH
			 ,	M.MM
			 ,  A1.COMM_EQPMN_IP AS COMM_EQPMN_IP1
			 ,  A2.COMM_EQPMN_IP AS COMM_EQPMN_IP2
			 ,  SUM(A1.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM) AS TOT_SEC_OVER_1
			 ,  SUM(A2.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM) AS TOT_SEC_OVER_2
			 ,  CASE WHEN SUM(A1.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM) > 300	THEN 300 
					 WHEN H.HH + M.MM > @V_DT_HOUR + @V_DT_MIN THEN NULL
					 ELSE ISNULL(SUM(A1.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM), 0) 
				END AS TOT_SEC_1
			 ,  CASE WHEN SUM(A2.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM) > 300	THEN 300
					 WHEN H.HH + M.MM > @V_DT_HOUR + @V_DT_MIN	THEN NULL
					 ELSE ISNULL(SUM(A2.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM), 0)
				END AS TOT_SEC_2
			 ,	ISNULL(CONVERT(NVARCHAR, DATEADD(SS, SUM(A1.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM), ''), 8), '00:00:00') AS TOT_OPER_TIME_1
			 ,	ISNULL(CONVERT(NVARCHAR, DATEADD(SS, SUM(A2.TOT_REAL_SEC) OVER(PARTITION BY H.HH, M.MM ORDER BY H.HH, M.MM), ''), 8), '00:00:00') AS TOT_OPER_TIME_2
		FROM 
		(
			/********** 02.01 시간 테이블
			************************************************************/
			SELECT RIGHT('00' + CONVERT(VARCHAR(2), number), 2)	AS HH
			FROM	MASTER..spt_values
			WHERE	TYPE = 'P'
			AND		number BETWEEN 9 AND 22
		) H
		INNER JOIN
		(
			/********** 02.01 분 테이블
			************************************************************/
			SELECT RIGHT('00' + CONVERT(VARCHAR(2), number * 5), 2)	AS MM
			FROM MASTER..spt_values
			WHERE TYPE = 'P'
			AND number <= 11
		) M ON 1 = 1
		LEFT OUTER JOIN #TEMP_OPER_TIME A1 ON H.HH = A1.COMM_H AND M.MM = A1.COMM_M AND A1.COMM_EQPMN_IP = @V_COMM_EQPMN_IP1
		LEFT OUTER JOIN #TEMP_OPER_TIME A2 ON H.HH = A2.COMM_H AND M.MM = A2.COMM_M AND A2.COMM_EQPMN_IP = @V_COMM_EQPMN_IP2

		ORDER BY H.HH, M.MM
		
	END
		]]>
	</select>

	<select id="s_mes100skrv_novisServiceImpl.selectProductionCnt2" parameterType="Map" resultType="rMap">
		<![CDATA[
	DECLARE
		@V_COMM_EQPMN_IP1		NVARCHAR(20),		-- 장비 IP
		@V_COMM_EQPMN_IP2		NVARCHAR(20),		-- 장비 IP
		@V_COMM_DATE			DATETIME,			-- 현재 서버시간.
		@V_DT_HOUR				NVARCHAR(02),		-- 현재 시.
		@V_DT_MIN				NVARCHAR(02),		-- 현재 분.	
			
		@V_COMM_YMD				NVARCHAR(08),		-- 현재 YYYYMMDD
		@V_DT_START_OPER		DATETIME,			-- 금일 최초 장비가동시간.
		@V_DT_START_OPER2		DATETIME			-- 금일 최초 장비가동시간.
	BEGIN
			
			
		-- 템프 테이블 확인 후 삭제.
		IF OBJECT_ID('tempdb..#TEMP_OPER_TIME') IS NOT NULL 
			DROP TABLE #TEMP_OPER_TIME
	
		-- 변수 셋팅.
		SET @V_COMM_EQPMN_IP1	= '192.168.0.231'	-- 장비 IP
		SET @V_COMM_EQPMN_IP2	= '192.168.0.232'	-- 장비 IP
		SET @V_COMM_DATE		= GETDATE() 		-- 현재 시간.
				
		SET @V_COMM_YMD		= CONVERT(NVARCHAR, @V_COMM_DATE, 112); -- NVARCHAR(08) 현재 년월일.
		SET @V_DT_HOUR		= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),1, 2);
		SET @V_DT_MIN		= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),4, 2);
	
	
		-- 금일 최초 가동 시간 체크.
		SET @V_DT_START_OPER	= (SELECT  MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END)
									FROM 
									(
									SELECT  ISNULL(	LAG(DATA, 1, NULL) OVER (ORDER BY COMM_DATE), 'False')	AS PRIV_DATA								 
										,	DATA
										,	COMM_DATE
									FROM COMM_DATA_INFO_2 WITH (NOLOCK)
									WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP1
									AND		COMM_YMD		= @V_COMM_YMD
									)A 
									)		-- 금일 최초 장비 가동시간.
		SET @V_DT_START_OPER2	= (SELECT  MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END)
									FROM 
									(
									SELECT  ISNULL(	LAG(DATA, 1, NULL) OVER (ORDER BY COMM_DATE), 'False')	AS PRIV_DATA								 
										,	DATA
										,	COMM_DATE
									FROM COMM_DATA_INFO_2 WITH (NOLOCK)
									WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP2
									AND		COMM_YMD		= @V_COMM_YMD
									)A 
									)		-- 금일 최초 장비 가동시간.
			
			
			
			
		/********** 01. 누적 가동시간 TEMP 테이블
		************************************************************/
		SELECT	H.COMM_EQPMN_IP, H.COMM_YMD,		H.COMM_H, H.COMM_M
				, SUM(H.DIFF_SEC)		AS TOT_SEC					-- 전체 초.
				, SUM(H.DIFF_SEC) / 60	AS TOT_MIN					-- 전체 분.
				, CONVERT(NVARCHAR, DATEADD(SS, SUM(H.DIFF_SEC), ''), 8) AS TOT_TIME -- 전체 시간.
				
		INTO #TEMP_OPER_TIME
		FROM 
		(
			SELECT A.COMM_EQPMN_IP, A.COMM_DATE,	A.COMM_YMD,		A.COMM_H,		A.COMM_M
				,  CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지'
						WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지시작'
						WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동시작'
						WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동'	END AS DATA_STATUS
				,  CASE WHEN A.PRIV_COMM_DATE IS NULL THEN 0
						ELSE DATEDIFF(SS, A.PRIV_COMM_DATE, A.COMM_DATE) END AS DIFF_SEC		
				,  A.PRIV_COMM_DATE
			FROM 
			(
				SELECT  COMM_EQPMN_IP, COMM_DATE,	COMM_YMD,	COMM_H,		COMM_M
					,	ISNULL(	LAG(DATA,	1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE), 'False')	AS PRIV_DATA
					,	LAG(COMM_DATE,		1, NULL) OVER (PARTITION BY COMM_EQPMN_IP ORDER BY COMM_DATE)			AS PRIV_COMM_DATE
					, DATA
				
				FROM COMM_DATA_INFO_2 WITH (NOLOCK)
				WHERE	COMM_YMD		= @V_COMM_YMD
			) A
		) H
		WHERE DATA_STATUS IN ('중지시작', '가동')
	
		GROUP BY	H.COMM_EQPMN_IP, H.COMM_YMD,		H.COMM_H, H.COMM_M
	
			
		/********** 02. 조회 쿼리(시간가동 누적 및 시간별 생산량)
		************************************************************/
		SELECT A.YMD
			 , A.DT
			 , A.HH
			 , A.MM
			 , A.H_SUM_PRODT AS H_SUM_PRODT_1
			 , B.H_SUM_PRODT AS H_SUM_PRODT_2
			 , A.TOT_MIN AS TOT_MIN_1
			 , B.TOT_MIN AS TOT_MIN_2
			 , @V_DT_START_OPER
		FROM
		(
			SELECT  @V_COMM_YMD AS YMD
					, CONVERT(DATETIME, @V_COMM_YMD + ' ' + H.HH + ':' + M.MM  + ':00') AS DT
					, H.HH
					, M.MM
					, H.HH + ':' + M.MM  AS HH_MM
					, A.H_SUM_PRODT	 AS H_SUM_PRODT
					, CASE	WHEN TMP.TOT_MIN IS NOT NULL	THEN TMP.TOT_MIN
							WHEN H.HH > @V_DT_HOUR			THEN NULL
							ELSE (SELECT MAX(TOT_MIN) FROM #TEMP_OPER_TIME WHERE COMM_H <= H.HH) END AS TOT_MIN
					, CASE	WHEN TMP.TOT_TIME IS NOT NULL	THEN TMP.TOT_TIME
							WHEN H.HH  > @V_DT_HOUR 		THEN NULL
							ELSE (SELECT MAX(TOT_TIME) FROM #TEMP_OPER_TIME WHERE COMM_H <= H.HH) 
					END AS TOT_TIME
				 
			FROM 
			(
				/********** 02.01 시간 테이블
				************************************************************/
				SELECT RIGHT('00' + CONVERT(VARCHAR(2), number), 2)	AS HH
				FROM	MASTER..spt_values
				WHERE	TYPE = 'P'
				AND		number BETWEEN 9 AND 22
			) H
			INNER JOIN
			(
				/********** 02.01 분 테이블
				************************************************************/
				SELECT CONVERT(VARCHAR(1), number) + '0'	AS MM
				FROM MASTER..spt_values
				WHERE TYPE = 'P'
				AND number IN (0, 3)
			) M ON 1 = 1
			LEFT OUTER JOIN
			(
				/********** 03. 년월일, 시간, 분별 생산량 및 누적 생산량.
				************************************************************/
				SELECT A.COMM_EQPMN_IP
						, A.COMM_YMD
						, A.COMM_H
						, CASE	WHEN A.COMM_M BETWEEN  '00' AND '29' THEN '00'
								WHEN A.COMM_M BETWEEN  '30' AND '59' THEN '30' END AS COMM_M
						, SUM(NOW_PRODT) AS H_SUM_PRODT
						, MAX(A.NOW_TOT_PRODT)					AS NOW_TOT_PRODT
				FROM
				(
					-- 현재 생산량 계산.
					SELECT A.COMM_EQPMN_IP
							, A.COMM_YMD
							, A.COMM_H
							, A.COMM_M
							, CONVERT(NUMERIC, A.NOW_TOT_PRODT)	AS NOW_TOT_PRODT
							, CONVERT(NUMERIC, A.BF_TOT_PRODT)		AS BF_TOT_PRODT
							, CASE WHEN CONVERT(NUMERIC, A.NOW_TOT_PRODT) - CONVERT(NUMERIC, BF_TOT_PRODT) < 0 THEN 0 
								ELSE CONVERT(NUMERIC, A.NOW_TOT_PRODT) - CONVERT(NUMERIC, BF_TOT_PRODT) END AS NOW_PRODT	-- 현재 생산량.
						 
					FROM 
					(
						-- 기초 데이터.
						SELECT COMM_EQPMN_IP, COMM_YMD, COMM_H, COMM_M
								, ISNULL(DATA, 0)											AS NOW_TOT_PRODT	-- 현재 누적생산량
								, ISNULL(LAG(DATA, 1, DATA) OVER (ORDER BY COMM_DATE), 0)  AS BF_TOT_PRODT		-- 전 데이터 누적생산량
						FROM COMM_DATA_INFO_1 WITH (NOLOCK)
						WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP1
						AND		COMM_YMD		= @V_COMM_YMD
						AND		COMM_DATE		> @V_DT_START_OPER
					) A
				) A
				GROUP BY	COMM_EQPMN_IP, A.COMM_YMD,	A.COMM_H
							, CASE	WHEN A.COMM_M BETWEEN  '00' AND '29' THEN '00'
									WHEN A.COMM_M BETWEEN  '30' AND '59' THEN '30' END
			) A ON H.HH = A.COMM_H AND M.MM = A.COMM_M
			LEFT OUTER JOIN #TEMP_OPER_TIME TMP ON TMP.COMM_EQPMN_IP = @V_COMM_EQPMN_IP1 AND H.HH = TMP.COMM_H AND M.MM = TMP.COMM_M
		) A
		FULL OUTER JOIN 
		(
			SELECT  @V_COMM_YMD AS YMD
					, CONVERT(DATETIME, @V_COMM_YMD + ' ' + H.HH + ':00:00') AS DT
					, H.HH
					, H.HH + ':' + '00' AS HH_MM
					, M.MM
					, A.H_SUM_PRODT	 AS H_SUM_PRODT
					, CASE	WHEN TMP.TOT_MIN IS NOT NULL	THEN TMP.TOT_MIN
							WHEN H.HH > @V_DT_HOUR			THEN NULL
							ELSE (SELECT MAX(TOT_MIN) FROM #TEMP_OPER_TIME WHERE COMM_H <= H.HH) END AS TOT_MIN
					, CASE	WHEN TMP.TOT_TIME IS NOT NULL	THEN TMP.TOT_TIME
							WHEN H.HH  > @V_DT_HOUR 		THEN NULL
							ELSE (SELECT MAX(TOT_TIME) FROM #TEMP_OPER_TIME WHERE COMM_H <= H.HH) 
					END AS TOT_TIME
				 
			FROM 
			(
				/********** 02.01 시간 테이블
				************************************************************/
				SELECT RIGHT('00' + CONVERT(VARCHAR(2), number), 2)	AS HH
				FROM	MASTER..spt_values
				WHERE	TYPE = 'P'
				AND		number BETWEEN 9 AND 22
			) H
			INNER JOIN
			(
				/********** 02.01 분 테이블
				************************************************************/
				SELECT CONVERT(VARCHAR(1), number) + '0' AS MM
				FROM MASTER..spt_values
				WHERE TYPE = 'P'
				AND number IN (0, 3)
			) M ON 1 = 1
			LEFT OUTER JOIN
			(
				/********** 03. 년월일, 시간, 분별 생산량 및 누적 생산량.
				************************************************************/
				SELECT A.COMM_EQPMN_IP
						, A.COMM_YMD
						, A.COMM_H
						, CASE	WHEN A.COMM_M BETWEEN  '00' AND '29' THEN '00'
								WHEN A.COMM_M BETWEEN  '30' AND '59' THEN '30' END AS COMM_M
						, SUM(NOW_PRODT) AS H_SUM_PRODT
						, MAX(A.NOW_TOT_PRODT)					AS NOW_TOT_PRODT
				FROM
				(
					-- 현재 생산량 계산.
					SELECT A.COMM_EQPMN_IP
							, A.COMM_YMD
							, A.COMM_H
							, A.COMM_M
							, CONVERT(NUMERIC, A.NOW_TOT_PRODT)	AS NOW_TOT_PRODT
							, CONVERT(NUMERIC, A.BF_TOT_PRODT)		AS BF_TOT_PRODT
							, CASE WHEN CONVERT(NUMERIC, A.NOW_TOT_PRODT) - CONVERT(NUMERIC, BF_TOT_PRODT) < 0 THEN 0 
								ELSE CONVERT(NUMERIC, A.NOW_TOT_PRODT) - CONVERT(NUMERIC, BF_TOT_PRODT) END AS NOW_PRODT	-- 현재 생산량.
						 
					FROM 
					(
						-- 기초 데이터.
						SELECT COMM_EQPMN_IP, COMM_YMD, COMM_H, COMM_M
								, ISNULL(DATA, 0)											AS NOW_TOT_PRODT	-- 현재 누적생산량
								, ISNULL(LAG(DATA, 1, DATA) OVER (ORDER BY COMM_DATE), 0)  AS BF_TOT_PRODT		-- 전 데이터 누적생산량
						FROM COMM_DATA_INFO_1 WITH (NOLOCK)
						WHERE	COMM_EQPMN_IP	= @V_COMM_EQPMN_IP2
						AND		COMM_YMD		= @V_COMM_YMD
						AND		COMM_DATE		> @V_DT_START_OPER2
					) A
				) A
				GROUP BY	COMM_EQPMN_IP, A.COMM_YMD,	A.COMM_H
							, CASE	WHEN A.COMM_M BETWEEN  '00' AND '29' THEN '00'
									WHEN A.COMM_M BETWEEN  '30' AND '59' THEN '30' END
			) A ON H.HH = A.COMM_H AND M.MM = A.COMM_M
			LEFT OUTER JOIN #TEMP_OPER_TIME TMP ON TMP.COMM_EQPMN_IP = @V_COMM_EQPMN_IP2 AND H.HH = TMP.COMM_H AND M.MM = TMP.COMM_M
		) B ON A.YMD = B.YMD AND A.HH = B.HH AND A.MM = B.MM
	
		ORDER BY YMD, DT , HH, MM
	END
	
	
  	   

		]]>
	</select>
	
	<select id="s_mes100skrv_novisServiceImpl.selectPagenation" parameterType="Map" resultType="rMap">
		<![CDATA[
		DECLARE
			@V_CURR_PAGE		INT = ISNULL(#{pageNumber}, 1),			-- 현재 페이지 NUMBER
			@V_PAGE_VIEW_CNT 	NUMERIC(10,0) = 10,	-- 한페이지에 보여질 데이터
			@V_BLOCK_PAGES		NUMERIC(10,0) = 10,	-- 네비게이션 바에서 보여질 블록 당 페이지 갯수.
			@V_COMM_YMD			VARCHAR(8)	  = CONVERT(NVARCHAR, GETDATE(), 112);
		BEGIN
		
			SELECT COUNT(*) TOT_CNT																										--전체데이터.
					, @V_PAGE_VIEW_CNT AS PAGE_VIEW_CNT
					, @V_CURR_PAGE	AS CUR_PAGE																							--현재페이지번호.
					, @V_BLOCK_PAGES AS BLOCK_PAGES																						--블록별 보여질 페이지 수
					, CEILING(COUNT(*) / @V_PAGE_VIEW_CNT) AS TOT_PAGE_CNT																--전체페이지번호
					, CEILING(COUNT(*) / (@V_PAGE_VIEW_CNT * @V_BLOCK_PAGES))		AS TOT_BLOCK_GROUP_NUM								--총블록
					, (CEILING(@V_CURR_PAGE /  @V_BLOCK_PAGES))					AS CUR_BLOCK_GROUP_NUM								--현재블록
					, (CEILING(@V_CURR_PAGE / (@V_BLOCK_PAGES)) - 1) * @V_BLOCK_PAGES + 1 AS CUR_BLOCK_ST_PAGE_NUM						--현재블록의 시작	페이지
					, CASE	WHEN																										--현재블록의 마지막	페이지
						CEILING(@V_CURR_PAGE / (@V_BLOCK_PAGES)) * @V_BLOCK_PAGES > CEILING(COUNT(*) / @V_PAGE_VIEW_CNT)
							THEN 	
					    CEILING(COUNT(*) / @V_PAGE_VIEW_CNT)
							ELSE
						CEILING(@V_CURR_PAGE / ( @V_BLOCK_PAGES)) * @V_BLOCK_PAGES
						END AS CUR_BLOCK_ED_PAGE_NUM																	
			FROM
			(
				SELECT	COMM_YMD
						,COMM_EQPMN_IP
						,ROW_NUMBER() OVER(ORDER BY COMM_YMD DESC, COMM_EQPMN_IP) AS ROWNUM
				FROM COMM_DATA_INFO_2 WITH (NOLOCK)
				WHERE	COMM_EQPMN_IP IN ('192.168.0.231','192.168.0.232')
				AND		COMM_YMD	  <> @V_COMM_YMD
					
				GROUP BY COMM_YMD, COMM_EQPMN_IP
			) A
		
		END
		]]>
	</select>
	
	<select id="s_mes100skrv_novisServiceImpl.selectCboItemInfo" parameterType="Map" resultType="rMap">
		<![CDATA[
			SELECT  SUB_CODE	AS ITEM_CODE
				   ,CODE_NAME	AS ITEM_NAME
			FROM BSA100T 
			WHERE	COMP_CODE = 'MASTER'
			AND		MAIN_CODE = 'PZ01'
			AND		SUB_CODE  <>'$'
		]]>
	</select>
			
	<select id="s_mes100skrv_novisServiceImpl.selectPageData" parameterType="Map" resultType="rMap">
			<![CDATA[
		DECLARE
			@V_COMM_DATE			DATETIME,			-- 현재 서버시간.
								
			@V_COMM_YMD				NVARCHAR(08),		-- 현재 YYYYMMDD
			@V_DT_HOUR				NVARCHAR(02),		-- 현재 시.
			@V_DT_MIN				NVARCHAR(02),		-- 현재 분.
			@V_DT_SEC_F				NVARCHAR(02),		-- 전일 초(FROM).
			@V_DT_SEC_T				NVARCHAR(02),		-- 전일 초(TO).
			@V_DT_START_OPER		DATETIME,			-- 금일 최초 장비가동시간.
								
			@V_DT_1DAY_AGO_YMD		NVARCHAR(08),		-- 전일 YYYYMMDD
			
			@V_CUR_PAGE_DATA_ST		INT = #{pageDataS},
			@V_CUR_PAGE_DATA_ED		INT = #{pageDataE}
		BEGIN
						
			-- 템프 테이블 확인 후 삭제.
			IF OBJECT_ID('tempdb..#TEMP_OPER_START_TIME') IS NOT NULL 
				DROP TABLE #TEMP_OPER_START_TIME
						
			SET @V_COMM_DATE		= GETDATE();
			SET @V_COMM_YMD			= CONVERT(NVARCHAR, @V_COMM_DATE, 112);
			--SET @V_DT_1DAY_AGO_YMD	= CONVERT(NVARCHAR, DATEADD(DAY, -1, @V_COMM_DATE), 112)
			SET @V_DT_HOUR			= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),1, 2);
			SET @V_DT_MIN			= SUBSTRING(CONVERT(NVARCHAR, @V_COMM_DATE, 8),4, 2);
			SET @V_DT_SEC_F			= SUBSTRING(CONVERT(NVARCHAR, DATEADD(SS, -20, @V_COMM_DATE), 8), 7 , 2);
			SET @V_DT_SEC_T			= SUBSTRING(CONVERT(NVARCHAR, DATEADD(SS,  -1, @V_COMM_DATE), 8), 7 , 2);
								
			--기계가동시간
					
			SELECT  A.COMM_YMD
					,A.COMM_EQPMN_IP
					,MIN(CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN A.COMM_DATE END) AS OPER_START_TIME
					,MAX(CASE WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'FALSE'	THEN A.COMM_DATE END) AS OPER_END_TIME
					,MAX(A.COMM_DATE) AS LATEST_DATE
			INTO #TEMP_OPER_START_TIME
			FROM 
			(
				SELECT  A.COMM_YMD
						,A.COMM_EQPMN_IP
						,ISNULL(	LAG(A.DATA, 1, NULL) OVER (PARTITION BY A.COMM_EQPMN_IP, A.COMM_YMD ORDER BY A.COMM_DATE), 'False')	AS PRIV_DATA								 
						,A.DATA
						,A.COMM_DATE
				FROM COMM_DATA_INFO_2 A WITH (NOLOCK)
				INNER JOIN 
				(
					SELECT COMM_YMD, COMM_EQPMN_IP, ROWNUM
					FROM 
					(
						SELECT	COMM_YMD
								,COMM_EQPMN_IP
								,ROW_NUMBER() OVER(ORDER BY COMM_YMD DESC, COMM_EQPMN_IP) AS ROWNUM
						FROM COMM_DATA_INFO_2 WITH (NOLOCK)
						WHERE	COMM_EQPMN_IP IN ('192.168.0.231','192.168.0.232')
						AND		COMM_YMD	  <> @V_COMM_YMD
		
						GROUP BY COMM_YMD, COMM_EQPMN_IP
					) A
					WHERE ROWNUM BETWEEN @V_CUR_PAGE_DATA_ST AND @V_CUR_PAGE_DATA_ED
				) B ON A.COMM_EQPMN_IP = B.COMM_EQPMN_IP AND A.COMM_YMD = B.COMM_YMD
				WHERE	A.COMM_EQPMN_IP IN ('192.168.0.231','192.168.0.232')
			) A
			GROUP BY A.COMM_YMD, A.COMM_EQPMN_IP
					
					
					
			SELECT	A.COMM_EQPMN_IP
					,ISNULL(C.ITEM_NAME, '') AS ITEM_NAME
					,CASE WHEN A.COMM_EQPMN_IP = '192.168.0.231' THEN '10열 스틱1호기' ELSE '10열 스틱2호기' END AS EQUIP_NAME
					,SUBSTRING(A.COMM_YMD, 1, 4) + '.' + SUBSTRING(A.COMM_YMD, 5, 2) + '.' + SUBSTRING(A.COMM_YMD, 7, 2) AS COMM_YMD 
					,ISNULL(CONVERT(NVARCHAR, A.DT_START_OPER,	8), '00:00:00')					AS TIME_START_OPER												-- 시작시간
					,ISNULL(CONVERT(NVARCHAR, A.DT_END_OPER,	 8), '00:00:00')				AS TIME_END_OPER												-- 종료시간
					,ISNULL(CONVERT(NVARCHAR, DATEADD(SS, A.SEC_OPER, ''), 8), '00:00:00')	AS TIME_OPER													-- 가동시간
					,ISNULL(CONVERT(NVARCHAR, DATEADD(SS, A.SEC_STOP, ''), 8), '00:00:00')	AS TIME_STOP													-- 정지시간
					,ISNULL((CASE WHEN B2.DATA <> B1.DATA THEN B2.DATA ELSE 0 END), 0) AS QTY_PRODT										-- 당일생산량
					,ISNULL(REPLACE(CONVERT(NVARCHAR, CONVERT(money, (CASE WHEN B2.DATA <> B1.DATA THEN B2.DATA ELSE 0 END)), 1),'.00',''), 0) AS QTY_PRODT_FORMT
					,ISNULL(A.CNT_STOP, 0) AS CNT_STOP
					--,C.SPEED_PRODT																												-- 포장속도
					--,C1.SPEED_PRODT_BF																											-- 전일포장속도		 																									
			FROM 
			(
				SELECT	A.COMM_EQPMN_IP	
					,	A.COMM_YMD
					,	A.OPER_START_TIME	AS DT_START_OPER
					,	A.OPER_END_TIME		AS DT_END_OPER
					,	SUM(CASE WHEN A.OPER_START_TIME IS NOT NULL AND A.COMM_DATE BETWEEN A.OPER_START_TIME AND A.OPER_END_TIME AND A.DATA_STATUS IN ('중지시작','가동')	THEN A.DIFF_SEC		ELSE 0			END) AS SEC_OPER	-- 가동시간(초)
					,	SUM(CASE WHEN A.OPER_START_TIME IS NOT NULL AND A.COMM_DATE BETWEEN A.OPER_START_TIME AND A.OPER_END_TIME AND A.DATA_STATUS IN ('가동시작','중지')	THEN A.DIFF_SEC		ELSE 0			END) AS SEC_STOP	-- 정지시간(초)
					,	SUM(CASE WHEN A.OPER_START_TIME IS NOT NULL AND A.COMM_DATE BETWEEN A.OPER_START_TIME AND A.OPER_END_TIME AND A.DATA_STATUS =	'중지시작'			THEN 1				ELSE 0			END) AS CNT_STOP	-- 정지횟수
					--,	MAX(A.COMM_DATE) AS DT_NOW
					--,	CASE WHEN @V_DT_START_OPER IS NULL	THEN 0 
					--										ELSE DATEDIFF(SS, @V_DT_START_OPER ,MAX(A.COMM_DATE)) END AS SEC_DIFF_END_TO_START --(종료[가장최근데이터시간] - 가동시작시간)
				FROM
				(
					SELECT A.COMM_EQPMN_IP
						,  CASE WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지'
								WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'FALSE' THEN '중지시작'
								WHEN UPPER(A.PRIV_DATA) = 'FALSE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동시작'
								WHEN UPPER(A.PRIV_DATA) = 'TRUE'	AND UPPER(A.DATA) = 'TRUE'	THEN '가동'	END AS DATA_STATUS
						,  CASE WHEN A.PRIV_COMM_DATE IS NULL THEN 0
								ELSE DATEDIFF(SS, A.PRIV_COMM_DATE, A.COMM_DATE) END AS DIFF_SEC		
						,  A.PRIV_COMM_DATE
						,  A.COMM_YMD
						,  A.COMM_DATE
						,  A.OPER_START_TIME
						,  A.OPER_END_TIME
					FROM 
					(
						SELECT  A.COMM_EQPMN_IP
							,	B.OPER_START_TIME
							,	B.OPER_END_TIME
							,	ISNULL(	LAG(A.DATA,		1, NULL) OVER (PARTITION BY A.COMM_EQPMN_IP, A.COMM_YMD ORDER BY A.COMM_DATE), 'False')	AS PRIV_DATA
							,	LAG(A.COMM_DATE,		1, NULL) OVER (PARTITION BY A.COMM_EQPMN_IP, A.COMM_YMD ORDER BY A.COMM_DATE)			AS PRIV_COMM_DATE
							,	A.DATA
							,   A.COMM_YMD
							,   A.COMM_DATE
						FROM COMM_DATA_INFO_2 A WITH (NOLOCK)
						INNER JOIN #TEMP_OPER_START_TIME B ON A.COMM_EQPMN_IP = B.COMM_EQPMN_IP AND A.COMM_YMD =B.COMM_YMD
						WHERE	A.COMM_EQPMN_IP IN ('192.168.0.231','192.168.0.232')
					) A
				) A
						
				GROUP BY	A.COMM_EQPMN_IP,  A.COMM_YMD,	A.OPER_START_TIME,	A.OPER_END_TIME
			) A
			/********** 현재 생산누적량 **********/
			LEFT OUTER JOIN COMM_DATA_INFO_1 B1 ON A.COMM_EQPMN_IP = B1.COMM_EQPMN_IP AND A.DT_START_OPER	= B1.COMM_DATE
			LEFT OUTER JOIN COMM_DATA_INFO_1 B2 ON A.COMM_EQPMN_IP = B2.COMM_EQPMN_IP AND A.DT_END_OPER		= B2.COMM_DATE
			LEFT OUTER JOIN COMM_DATA_ITEM C ON A.COMM_EQPMN_IP = C.COMM_EQPMN_IP AND A.COMM_YMD = C.COMM_YMD
			--WHERE B1.DATA <> B2.DATA
												
			ORDER BY A.COMM_YMD DESC, A.COMM_EQPMN_IP
						
		END

       
			]]>
	</select>
	
	<update id="s_mes100skrv_novisServiceImpl.mergeItem" parameterType="Map">
    		<![CDATA[
    	DECLARE 
			@V_COMM_EQPMN_IP		NVARCHAR(50) = #{eqpmnIp},
			@V_ITEM_CODE			NVARCHAR(50) = #{itemCode},
			@V_ITEM_NAME			NVARCHAR(200) = #{itemName},
			@V_COMM_DATE			DATETIME,
			@V_COMM_YMD				NVARCHAR(08)
		BEGIN
		
			SET @V_COMM_DATE	=	GETDATE();
			SET @V_COMM_YMD		=	CONVERT(NVARCHAR, @V_COMM_DATE, 112);
			
		
			MERGE INTO COMM_DATA_ITEM A
			USING
			(
				SELECT @V_COMM_EQPMN_IP		AS COMM_EQPMN_IP
					 , @V_COMM_YMD			AS COMM_YMD
					 , @V_ITEM_CODE			AS ITEM_CODE
					 , @V_ITEM_NAME			AS ITEM_NAME
					 , @V_COMM_DATE			AS COMM_DATE
			) B
			ON (	A.COMM_EQPMN_IP = B.COMM_EQPMN_IP
				AND	A.COMM_YMD		= B.COMM_YMD
			   )
			WHEN NOT MATCHED THEN
				INSERT
				(
					COMM_EQPMN_IP,		ITEM_CODE,		ITEM_NAME,		COMM_YMD,		COMM_DATE
				)
				VALUES
				(
					B.COMM_EQPMN_IP,		B.ITEM_CODE,		B.ITEM_NAME,		B.COMM_YMD,		B.COMM_DATE
				)
			WHEN MATCHED THEN
				UPDATE 
				SET  A.ITEM_CODE = B.ITEM_CODE
					,A.ITEM_NAME = B.ITEM_NAME
					,A.COMM_DATE = B.COMM_DATE
			;
		END;
		
		
			]]>
    </update>
</mapper>