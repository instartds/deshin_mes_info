<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="S_Hat910ukr_hsServiceImpl">
	<select id="S_Hat910ukr_hsServiceImpl.getDutyRule" parameterType="String" resultType="String">
		/* S_Hat910ukr_hsServiceImpl.getDutyRule */
		SELECT DUTY_INPUT_RULE
		  FROM HBS400T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>

	<select id="S_Hat910ukr_hsServiceImpl.getDutycodeTime" parameterType="rMap" resultType="rMap">
		/* S_Hat910ukr_hsServiceImpl.getDutycodeTime */
		SELECT
			   CASE WHEN A.DUTY_FR_D = 1 THEN CONVERT(NVARCHAR(8), DATEADD(DAY, -1, CONVERT(DATETIME, #{DUTY_YYYYMMDD}, 112)), 112)
			        WHEN A.DUTY_FR_D = 3 THEN CONVERT(NVARCHAR(8), DATEADD(DAY,  1, CONVERT(DATETIME, #{DUTY_YYYYMMDD}, 112)), 112)
					ELSE #{DUTY_YYYYMMDD}
			    END AS DUTY_FR_D
	    	 , RIGHT('00'+CONVERT(NVARCHAR(2), A.DUTY_FR_H), 2) AS DUTY_FR_H
		     , RIGHT('00'+CONVERT(NVARCHAR(2), A.DUTY_FR_M), 2) AS DUTY_FR_M
		     , CASE WHEN A.DUTY_TO_D = 1 THEN CONVERT(NVARCHAR(8), DATEADD(DAY, -1, CONVERT(DATETIME, #{DUTY_YYYYMMDD}, 112)), 112)
			        WHEN A.DUTY_TO_D = 3 THEN CONVERT(NVARCHAR(8), DATEADD(DAY,  1, CONVERT(DATETIME, #{DUTY_YYYYMMDD}, 112)), 112)
					ELSE #{DUTY_YYYYMMDD}
			    END AS DUTY_TO_D
		     , RIGHT('00'+CONVERT(NVARCHAR(2), A.DUTY_TO_H), 2) AS DUTY_TO_H
		     , RIGHT('00'+CONVERT(NVARCHAR(2), A.DUTY_TO_M), 2) AS DUTY_TO_M
		  FROM       HAT100T A WITH(NOLOCK)
		  INNER JOIN HBS600T B WITH (NOLOCK)  ON B.CAL_DATE = #{DUTY_YYYYMMDD}
											 AND B.HOLY_TYPE = A.HOLY_TYPE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.WORK_TEAM = #{WORK_TEAM}

	</select>

	<select id="S_Hat910ukr_hsServiceImpl.getAllDutycode" parameterType="rMap" resultType="rMap">
		/* S_Hat910ukr_hsServiceImpl.getAllDutycode */
		SELECT DISTINCT B.SUB_CODE
		     , B.CODE_NAME
		  FROM       HBS100T A WITH(NOLOCK)
		  INNER JOIN BSA100T B WITH(NOLOCK)
		          ON A.COMP_CODE = B.COMP_CODE
		         AND A.DUTY_CODE = B.SUB_CODE
		  WHERE A.COMP_CODE = #{S_COMP_CODE}
		    AND B.MAIN_CODE = 'H033'
		    AND B.SUB_CODE &lt;&gt; '$'
		    <if test='DUTY_RULE.equals("Y")'>
		    AND A.COTR_TYPE = '2'
		    </if>
		    <if test='DUTY_RULE.equals("N")'>
		    AND A.COTR_TYPE = '1'
		    </if>
	</select>

	<select id="S_Hat910ukr_hsServiceImpl.getDutycode" parameterType="rMap" resultType="rMap">
	/* S_Hat910ukr_hsServiceImpl.getDutyCode */
	SELECT DISTINCT B.SUB_CODE
          , B.CODE_NAME
       FROM HBS100T A
                    INNER JOIN BSA100T B
                            ON A.COMP_CODE = B.COMP_CODE
                           AND A.DUTY_CODE = B.SUB_CODE
      WHERE A.COMP_CODE = #{S_COMP_CODE}
        AND B.MAIN_CODE = 'H033'
        AND B.SUB_CODE &lt;&gt; '$'
        <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE  = #{PAY_CODE}
		</if>
        <if test='DUTY_RULE.equals("Y")'>
		AND A.COTR_TYPE = '2'
		</if>
		<if test='DUTY_RULE.equals("N")'>
		AND A.COTR_TYPE = '1'
		</if>
    ORDER BY  B.SUB_CODE
	</select>

	<select id="S_Hat910ukr_hsServiceImpl.getComboList" parameterType="rMap" resultType="comboItem">
		/* hat510ukrServiceImpl.getComboList */
		SELECT B.SUB_CODE as 'value'
		     , B.CODE_NAME  as 'text'
		     , A.PAY_CODE as 'option'
		  FROM       HBS100T A WITH(NOLOCK)
		  INNER JOIN BSA100T B WITH(NOLOCK)
		          ON A.COMP_CODE = B.COMP_CODE
		         AND A.DUTY_CODE = B.SUB_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND B.MAIN_CODE = 'H033'
		   AND B.USE_YN    = 'Y'
		   AND B.SUB_CODE &lt;&gt; '$'
		   AND A.COTR_TYPE = '2'
		 ORDER BY B.REF_CODE2, B.SUB_CODE
	</select>

	<select id="S_Hat910ukr_hsServiceImpl.getComboList2" parameterType="rMap" resultType="rMap">
		/* hat510ukrServiceImpl.getComboList2 */
		SELECT B.SUB_CODE as value
		     , B.CODE_NAME as text
		  FROM       HBS100T A WITH(NOLOCK)
		  INNER JOIN BSA100T B WITH(NOLOCK)
		          ON A.COMP_CODE = B.COMP_CODE
		         AND A.DUTY_CODE = B.SUB_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND B.MAIN_CODE = 'H033'
		   AND B.USE_YN = 'Y'
		   AND B.SUB_CODE &lt;&gt; '$'
		   <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE  = #{PAY_CODE}
		   </if>
		   <if test="@foren.Ognl@isEmpty(PAY_CODE)">
		   AND A.PAY_CODE  = '1'
		   </if>
		   AND A.COTR_TYPE = '2'
		 ORDER BY B.REF_CODE2, B.SUB_CODE
	</select>

	<select id="S_Hat910ukr_hsServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* S_Hat910ukr_hsServiceImpl.selectList */
		<if test='DUTY_RULE.equals("Y")'>
		    --hat500ukr.Chat500Ukr[fnHat500Q]-4
		    SELECT A.WORK_TEAM
		         , A.DIV_CODE
		         , A.FLAG
		         , A.DUTY_YYYYMMDD
		         , A.DEPT_CODE
		         , A.DEPT_NAME
		         , A.POST_CODE
		         , A.NAME
		         , A.PERSON_NUMB
		         , A.DUTY_CODE
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN ''   ELSE  A.DUTY_FR_D  									END AS DUTY_FR_D
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN '00' ELSE  RIGHT('0' + CONVERT(NVARCHAR,A.DUTY_FR_H), 2) 	END AS DUTY_FR_H
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN '00' ELSE  RIGHT('0' + CONVERT(NVARCHAR,A.DUTY_FR_M), 2)	END AS DUTY_FR_M
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN ''   ELSE  A.DUTY_TO_D									END AS DUTY_TO_D
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN '00' ELSE  RIGHT('0' + CONVERT(NVARCHAR,A.DUTY_TO_H), 2)	END AS DUTY_TO_H
		         , CASE WHEN ISNULL(M1.REF_CODE13, '') = 'Y' THEN '00' ELSE  RIGHT('0' + CONVERT(NVARCHAR,A.DUTY_TO_M), 2)	END AS DUTY_TO_M
		         --20200219 추가: 수정사유(MODI_REASON), 마감여부(CLOSE_YN) 추가
		         , A.MODI_REASON
		         , CASE WHEN ISNULL(C.COMP_CODE, '') = '' THEN 'N'
		                ELSE 'Y'
		           END                                         AS CLOSE_YN
		         , A.PAY_CODE
				 , A.HIDDEN_FLAG
		      FROM (SELECT B.WORK_TEAM
		                 , A.DIV_CODE
		                 , '' AS FLAG
		                 , #{FR_DATE} AS DUTY_YYYYMMDD
		                 , A.DEPT_CODE
		                 , A.DEPT_NAME
		                 , A.POST_CODE
		                 , A.NAME
		                 , B.PERSON_NUMB
		                 , ISNULL(B.DUTY_CODE, '') AS DUTY_CODE
		                 , uniLITE.fnGetUserDate(B.COMP_CODE, B.DUTY_FR_D)  DUTY_FR_D
		                 , CONVERT(nvarchar,B.DUTY_FR_H) DUTY_FR_H
		                 , CONVERT(nvarchar,B.DUTY_FR_M) DUTY_FR_M
		                 , uniLITE.fnGetUserDate(B.COMP_CODE, B.DUTY_TO_D)  DUTY_TO_D
		                 , CONVERT(nvarchar,B.DUTY_TO_H) DUTY_TO_H
		                 , CONVERT(nvarchar,B.DUTY_TO_M) DUTY_TO_M
		                 --20200219 추가: 수정사유(MODI_REASON), COMP_CODE 추가
		                 , B.MODI_REASON
		                 , A.COMP_CODE
		                 , A.PAY_CODE
		                 , '' AS HIDDEN_FLAG
		              FROM            HUM100T A WITH (NOLOCK)
		                   INNER JOIN HAT500T B WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                     AND B.PERSON_NUMB   = A.PERSON_NUMB
		                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                                     AND M1.MAIN_CODE    = N'H024'
		                                                     AND M1.SUB_CODE     = A.EMPLOY_TYPE
		                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                                     AND M2.MAIN_CODE    = N'H181'
		                                                     AND M2.SUB_CODE     = M1.REF_CODE1
		             WHERE A.COMP_CODE     = #{S_COMP_CODE}
		               AND B.DUTY_YYYYMMDD = #{FR_DATE}
		              <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">		 AND A.PAY_CODE      = #{PAY_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">		 AND A.DIV_CODE= #{DIV_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		 AND A.DEPT_CODE &gt;= #{DEPT_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">	 AND A.DEPT_CODE &lt;= #{DEPT_CODE2}</if>
		              <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">  	 AND B.WORK_TEAM = #{WORK_TEAM} </if>
		              <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG} </if>
		              <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">    	 AND A.PAY_GUBUN = #{PAY_GUBUN} </if>
		              <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    AND A.PERSON_NUMB = #{PERSON_NUMB} </if>
		              <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">    AND A.EMPLOY_TYPE = #{EMPLOY_TYPE} </if>
		              <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">    	 AND M2.SUB_CODE = #{SUB_CODE} </if>
					<if test="@foren.Ognl@isNotEmpty(DEPTS)">
					   AND A.DEPT_CODE IN
						<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>
					</if>

		            UNION ALL

		            SELECT ISNULL(B1.WORK_TEAM, '1') AS WORK_TEAM
		                 , A.DIV_CODE
		                 , 'N' AS FLAG
		                 , #{FR_DATE} AS DUTY_YYYYMMDD
		                 , A.DEPT_CODE
		                 , A.DEPT_NAME
		                 , A.POST_CODE
		                 , A.NAME
		                 , A.PERSON_NUMB
		                 , (SELECT CASE WHEN ISNULL(DUTY_CODE, '') = '' THEN ISNULL(Y.SUB_CODE, '')
		                                WHEN DUTY_CODE = ''             THEN ISNULL(Y.SUB_CODE, '')
		                                ELSE DUTY_CODE
		                            END
                              FROM HAT100T X WITH(NOLOCK)
                              LEFT JOIN BSA100T Y WITH(NOLOCK) ON X.COMP_CODE 	= Y.COMP_CODE
                              								  AND Y.MAIN_CODE 	= 'H033'
                              								  AND Y.REF_CODE13  = 'Y'
                             WHERE X.COMP_CODE = A.COMP_CODE
                               AND X.WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
                               AND X.HOLY_TYPE = C.HOLY_TYPE)  AS DUTY_CODE
		                 , SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_FR_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                              WHEN DUTY_FR_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                              ELSE  #{FR_DATE}
		                                                              END
		                                                    FROM HAT100T
		                                                   WHERE COMP_CODE = A.COMP_CODE
		                                                     AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                     AND HOLY_TYPE = C.HOLY_TYPE), 112), 1, 4) + '-' +
		                   SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_FR_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                              WHEN DUTY_FR_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                              ELSE #{FR_DATE}
		                                                              END
		                                                    FROM HAT100T
		                                                   WHERE COMP_CODE = A.COMP_CODE
		                                                     AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                     AND HOLY_TYPE = C.HOLY_TYPE), 112), 5, 2) + '-' +
		                   SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_FR_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                              WHEN DUTY_FR_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                              ELSE #{FR_DATE}
		                                                              END
		                                                    FROM HAT100T
		                                                   WHERE COMP_CODE = A.COMP_CODE
		                                                     AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                     AND HOLY_TYPE = C.HOLY_TYPE), 112), 7, 2) AS DUTY_FR_D
		                , ISNULL((SELECT CONVERT(NVARCHAR,DUTY_FR_H)
		                            FROM HAT100T
		                           WHERE COMP_CODE = A.COMP_CODE
		                             AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                             AND HOLY_TYPE = C.HOLY_TYPE),'00')  AS DUTY_FR_H
		                , ISNULL((SELECT CONVERT(NVARCHAR,DUTY_FR_M)
		                            FROM HAT100T
		                           WHERE COMP_CODE = A.COMP_CODE
		                             AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                             AND HOLY_TYPE = C.HOLY_TYPE),'00')  AS DUTY_FR_M
		                , SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_TO_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                             WHEN DUTY_TO_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                             ELSE  #{FR_DATE}
		                                                             END
		                                                   FROM HAT100T
		                                                  WHERE COMP_CODE = A.COMP_CODE
		                                                    AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                    AND HOLY_TYPE = C.HOLY_TYPE), 112), 1, 4) + '-' +
		                  SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_TO_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                             WHEN DUTY_TO_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                             ELSE  #{FR_DATE}
		                                                             END
		                                                   FROM HAT100T
		                                                  WHERE COMP_CODE = A.COMP_CODE
		                                                    AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                    AND HOLY_TYPE = C.HOLY_TYPE), 112), 5, 2) + '-' +
		                  SUBSTRING(CONVERT(VARCHAR(8), (SELECT CASE WHEN DUTY_TO_D = 1 THEN DATEADD(DAY,  -1, #{FR_DATE})
		                                                             WHEN DUTY_TO_D = 3 THEN DATEADD(DAY,  1, #{FR_DATE})
		                                                             ELSE  #{FR_DATE}
		                                                             END
		                                                   FROM HAT100T
		                                                  WHERE COMP_CODE = A.COMP_CODE
		                                                    AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                                                    AND HOLY_TYPE = C.HOLY_TYPE), 112), 7, 2) AS DUTY_TO_D
		                , ISNULL((SELECT CONVERT(NVARCHAR,DUTY_TO_H)
		                            FROM HAT100T
		                           WHERE COMP_CODE = A.COMP_CODE
		                             AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                             AND HOLY_TYPE = C.HOLY_TYPE),'00')  AS DUTY_TO_H
		                , ISNULL((SELECT CONVERT(NVARCHAR,DUTY_TO_M)
		                            FROM HAT100T
		                           WHERE COMP_CODE = A.COMP_CODE
		                             AND WORK_TEAM = ISNULL(B1.WORK_TEAM, '1')
		                             AND HOLY_TYPE = C.HOLY_TYPE),'00')  AS DUTY_TO_M
		                 --20200219 추가: 수정사유(MODI_REASON), COMP_CODE 추가
		                 , ''                                AS MODI_REASON
		                 , A.COMP_CODE
		                 , A.PAY_CODE
		                 , 'Y' AS HIDDEN_FLAG
		             FROM            HUM100T A WITH (NOLOCK)
		                  LEFT  JOIN (SELECT COMP_CODE
		                                    ,PERSON_NUMB
		                                    ,MAX(DUTY_YYYYMMDD) AS DUTY_YYYYMMDD
		                                    FROM HAT400T WITH (NOLOCK)
		                                    WHERE COMP_CODE = #{S_COMP_CODE}
		                                      AND DUTY_YYYYMMDD &lt;= #{FR_DATE}
		                                      GROUP BY COMP_CODE , PERSON_NUMB
		                                                 ) B ON B.COMP_CODE     = A.COMP_CODE
		                                                    AND B.PERSON_NUMB   = A.PERSON_NUMB
		                   LEFT  JOIN HAT400T B1 WITH (NOLOCK) ON B1.COMP_CODE     = B.COMP_CODE
		                                                     AND B1.PERSON_NUMB   = B.PERSON_NUMB
		                                                     AND B1.DUTY_YYYYMMDD = B.DUTY_YYYYMMDD
		                  INNER JOIN HBS600T C WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
		                                                    AND C.DIV_CODE      = A.DIV_CODE
		                                                    AND C.CAL_DATE      = #{FR_DATE}
		                  LEFT  JOIN HAT500T D WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                                    AND D.PERSON_NUMB   = A.PERSON_NUMB
		                                                    AND D.DUTY_YYYYMMDD = #{FR_DATE}
		                  LEFT  JOIN HAT800T E WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                                    AND E.PERSON_NUMB   = A.PERSON_NUMB
		                                                    AND E.DUTY_YYYYMMDD = #{FR_DATE}
		                  LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                                    AND M1.MAIN_CODE    = N'H024'
		                                                    AND M1.SUB_CODE     = A.EMPLOY_TYPE
		                  LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                                    AND M2.MAIN_CODE    = N'H181'
		                                                    AND M2.SUB_CODE     = M1.REF_CODE1
		            WHERE A.COMP_CODE     = #{S_COMP_CODE}
		              AND A.JOIN_DATE    &lt;=#{FR_DATE}
		              AND (A.RETR_DATE = '00000000' OR A.RETR_DATE &gt;= #{FR_DATE})
		              <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">		 AND A.PAY_CODE      = #{PAY_CODE}</if>
		              AND D.COMP_CODE    IS NULL
		              AND E.COMP_CODE    IS NULL
		              <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">       AND A.DIV_CODE= #{DIV_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">      AND A.DEPT_CODE &gt;= #{DEPT_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">     AND A.DEPT_CODE &lt;= #{DEPT_CODE2}</if>
		              <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">      AND ISNULL(B.WORK_TEAM, '1') = #{WORK_TEAM} </if>
		              <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">      AND A.PAY_GUBUN = #{PAY_GUBUN} </if>
		              <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    AND A.PERSON_NUMB = #{PERSON_NUMB} </if>
		              <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">    AND A.EMPLOY_TYPE = #{EMPLOY_TYPE} </if>
		              <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">       AND M2.SUB_CODE = #{SUB_CODE} </if>
					<if test="@foren.Ognl@isNotEmpty(DEPTS)">
					   AND A.DEPT_CODE IN
						<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>
					</if>

		            UNION ALL

		            SELECT ISNULL(B.WORK_TEAM, '') AS WORK_TEAM
		                 , A.DIV_CODE
		                 , 'N' AS FLAG
		                 , #{FR_DATE} AS DUTY_YYYYMMDD
		                 , A.DEPT_CODE
		                 , A.DEPT_NAME
		                 , A.POST_CODE
		                 , A.NAME
		                 , A.PERSON_NUMB
		                 , ISNULL(E.DUTY_CODE, '') AS DUTY_CODE
		                 , '' AS DUTY_FR_D
		                 , '00' AS DUTY_FR_H
		                 , '00' AS DUTY_FR_M
		                 , '' AS DUTY_TO_D
		                 , '00' AS DUTY_TO_H
		                 , '00' AS DUTY_TO_M
		                 --20200219 추가: 수정사유(MODI_REASON), COMP_CODE 추가
		                 , ''                                AS MODI_REASON
		                 , A.COMP_CODE
		                 , A.PAY_CODE
		                 , 'Y' AS HIDDEN_FLAG
		             FROM             HUM100T A WITH (NOLOCK)
		                   LEFT  JOIN HAT400T B WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                                     AND B.PERSON_NUMB   = A.PERSON_NUMB
		                                                     AND B.DUTY_YYYYMMDD = #{FR_DATE}
		                   INNER JOIN HBS600T C WITH (NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                                                     AND C.DIV_CODE      = A.DIV_CODE
		                                                     AND C.CAL_DATE      = B.DUTY_YYYYMMDD
		                   LEFT  JOIN HAT500T D WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                                     AND D.PERSON_NUMB   = A.PERSON_NUMB
		                                                     AND D.DUTY_YYYYMMDD = #{FR_DATE}
		                   INNER JOIN HAT800T E WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                                     AND E.PERSON_NUMB   = A.PERSON_NUMB
		                                                     AND E.DUTY_YYYYMMDD = #{FR_DATE}
		                   LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                                     AND M1.MAIN_CODE    = N'H024'
		                                                     AND M1.SUB_CODE     = A.EMPLOY_TYPE
		                   LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                                     AND M2.MAIN_CODE    = N'H181'
		                                                     AND M2.SUB_CODE     = M1.REF_CODE1
		             WHERE A.COMP_CODE     = #{S_COMP_CODE}
		               AND A.JOIN_DATE    &lt;= #{FR_DATE}
		               AND (A.RETR_DATE = '00000000' OR A.RETR_DATE = #{FR_DATE})
		               <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">		 AND A.PAY_CODE      = #{PAY_CODE}</if>
		               AND D.COMP_cODE    IS NULL
		              <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">	   AND A.DIV_CODE = #{DIV_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">	   AND A.DEPT_CODE &gt;= #{DEPT_CODE}</if>
		              <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">	   AND A.DEPT_CODE &lt;= #{DEPT_CODE2}</if>
		              <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">  	   AND ISNULL(B.WORK_TEAM, '1') = #{WORK_TEAM} </if>
		              <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">  AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG} </if>
		              <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">      AND A.PAY_GUBUN = #{PAY_GUBUN} </if>
		              <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    AND A.PERSON_NUMB = #{PERSON_NUMB} </if>
		              <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">    AND A.EMPLOY_TYPE = #{EMPLOY_TYPE} </if>
		              <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">   	   AND M2.SUB_CODE = #{SUB_CODE} </if>
					<if test="@foren.Ognl@isNotEmpty(DEPTS)">
					   AND A.DEPT_CODE IN
						<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>
					</if>
		         ) A
		         INNER JOIN HUM100T B WITH(NOLOCK) ON A.PERSON_NUMB = B.PERSON_NUMB
		         --20200220 추가
		         LEFT  JOIN HBS910T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                          AND C.DIV_CODE    = A.DIV_CODE
		                                          AND C.PERSON_NUMB = A.PERSON_NUMB
		                                          AND C.CLOSE_TYPE  = 'D'      --구분(1:급여, 2:상여, D:근태, F:년차, Y:연말정산)
		                                          AND C.CLOSE_DATE  = A.DUTY_YYYYMMDD
		                                          AND C.SUPP_TYPE   = 'Z'
		         LEFT JOIN BSA100T AS M1 WITH(NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		         									 AND M1.MAIN_CODE = 'H033'
		         									 AND M1.USE_YN	  = 'Y'
		         									 AND M1.SUB_CODE  = A.DUTY_CODE
		     WHERE B.COMP_CODE = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		     ORDER BY ISNULL(A.WORK_TEAM, '1'), B.DIV_CODE, B.DEPT_CODE, B.POST_CODE, B.NAME, B.PERSON_NUMB
		</if>
		<if test='DUTY_RULE.equals("N")'>
		    --hat500ukr.Chat500Ukr[fnHat500Q]-4
		    SELECT MAX(A.WORK_TEAM) WORK_TEAM, B.PAY_CODE
		         , B.DIV_CODE
		         , '' AS FLAG
		         , #{FR_DATE} AS DUTY_YYYYMMDD
		         , MAX(B.DEPT_CODE) DEPT_CODE
		         , MAX(B.DEPT_NAME) DEPT_NAME
		         , MAX(B.POST_CODE) POST_CODE
		         , MAX(B.NAME) NAME
		         , MAX(A.PERSON_NUMB) PERSON_NUMB
		         , MAX(CASE WHEN  C.COTR_TYPE = '2' AND A.DUTY_NUM !='0' THEN 'D'
		                    ELSE ''
		                    END) NUMF
		         , MAX(CASE WHEN  C.COTR_TYPE = '2' AND A.DUTY_NUM !='0' THEN A.DUTY_CODE
		                    ELSE ''
		                    END) NUMC1
		         , MAX(CASE WHEN  C.COTR_TYPE = '2' AND A.DUTY_NUM !='0' THEN A.DUTY_CODE
		                    ELSE ''
		                    END) NUMC
		         , MAX(CASE WHEN  C.COTR_TYPE = '2' AND A.DUTY_NUM !='0' THEN A.DUTY_NUM
		                    ELSE 0
		                    END) NUMN
		         , 0 AS NUMT
		         , 0 AS NUMM
		         <foreach collection="DUTY_CODE" item="item" index="index">
		         , CASE WHEN MAX(A.DUTY_CODE)  = '${item.SUB_CODE}' THEN ''
		                ELSE 'D'
		                END AS TIMEF${item.SUB_CODE}
		         , '${item.SUB_CODE}' AS TIMEC${item.SUB_CODE}
		         , 0 AS TIMEN${item.SUB_CODE}
		         , ISNULL(MAX(CASE WHEN A.DUTY_CODE = '${item.SUB_CODE}' THEN ISNULL(RIGHT(('0' + CONVERT(NVARCHAR, REPLACE(A.DUTY_TIME, '.00', ''))), 2), '00') END),0) AS TIMET${item.SUB_CODE}
		         , ISNULL(MAX(CASE WHEN A.DUTY_CODE = '${item.SUB_CODE}' THEN ISNULL(RIGHT(('0' + CONVERT(NVARCHAR, REPLACE(A.DUTY_MINU, '.00', ''))), 2), '00') END),0) AS TIMEM${item.SUB_CODE}
		         </foreach>
		         --20200219 추가: 수정사유(MODI_REASON), 마감여부(CLOSE_YN) 추가
		         , MAX(A.MODI_REASON)							AS MODI_REASON
		         , CASE WHEN ISNULL(Z1.COMP_CODE, '') = '' THEN 'N'
		                ELSE 'Y'
		           END                                         AS CLOSE_YN
                 , '' AS HIDDEN_FLAG
		      FROM            HAT600T A WITH (NOLOCK)
		         INNER JOIN HUM100T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                           AND B.PERSON_NUMB  = A.PERSON_NUMB
		         LEFT  JOIN HBS100T C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                           AND C.DUTY_CODE    = A.DUTY_CODE
		                                           AND C.PAY_CODE     = B.PAY_CODE
		         LEFT  JOIN BSA100T M1 WITH(NOLOCK) ON M1.COMP_CODE   = B.COMP_CODE
		                                           AND M1.MAIN_CODE   = N'H024'
		                                           AND M1.SUB_CODE    = B.EMPLOY_TYPE
		         LEFT  JOIN BSA100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                           AND M2.MAIN_CODE   = N'H181'
		                                           AND M2.SUB_CODE    = M1.REF_CODE1
		         LEFT  JOIN HBS910T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                           AND Z1.DIV_CODE    = B.DIV_CODE
		                                           AND Z1.PERSON_NUMB = A.PERSON_NUMB
		                                           AND Z1.CLOSE_TYPE  = 'D'      --구분(1:급여, 2:상여, D:근태, F:년차, Y:연말정산)
		                                           AND Z1.CLOSE_DATE  = A.DUTY_YYYYMMDD
		                                           AND Z1.SUPP_TYPE   = 'Z'
		     WHERE A.COMP_CODE     = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND A.DUTY_YYYYMMDD = #{FR_DATE}
		       <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">		 AND B.PAY_CODE      = #{PAY_CODE}</if>
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND B.DIV_CODE      = #{DIV_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		       AND B.DEPT_CODE IN
		        <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		         #{item}
		        </foreach>
		       </if>
		      <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">
		       AND A.WORK_TEAM     = #{WORK_TEAM}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		       AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		       AND B.PAY_GUBUN     = #{PAY_GUBUN}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		       AND A.PERSON_NUMB   = #{PERSON_NUMB}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		       AND B.EMPLOY_TYPE   = #{EMPLOY_TYPE}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		       AND M2.SUB_CODE     = #{SUB_CODE}
		      </if>
		      GROUP BY A.DUTY_YYYYMMDD, A.PERSON_NUMB, B.DIV_CODE, B.PAY_CODE, Z1.COMP_CODE

		    UNION ALL

		    SELECT (ISNULL(C.WORK_TEAM, '1')) AS WORK_TEAM
		         , PAY_CODE
		         , A.DIV_CODE
		         , 'N' AS FLAG
		         , #{FR_DATE} AS DUTY_YYYYMMDD
		         , A.DEPT_CODE
		         , A.DEPT_NAME
		         , A.POST_CODE
		         , A.NAME
		         , A.PERSON_NUMB
		         , 'D' AS NUMF
		         , '' AS NUMC1
		         , '' AS NUMC
		         , 0 AS NUMN
		         , 0 AS NUMT
		         , 0 AS NUMM
		        <foreach collection="DUTY_CODE" item="item" index="index">
		           , 'D' AS TIMEF${item.SUB_CODE}
		           , '${item.SUB_CODE}' AS TIMEC${item.SUB_CODE}
		           , '00' AS TIMEN${item.SUB_CODE}
		           , '00' AS TIMET${item.SUB_CODE}
		           , '00' AS TIMEM${item.SUB_CODE}
		        </foreach>
		         --20200219 추가: 수정사유(MODI_REASON), 마감여부(CLOSE_YN) 추가
		         , ''                                AS MODI_REASON
		         , 'N'                               AS CLOSE_YN
		         , 'Y' AS HIDDEN_FLAG
		      FROM            HUM100T A WITH (NOLOCK)
		           LEFT  JOIN (SELECT COMP_CODE
		                            , PERSON_NUMB
		                            , MAX(DUTY_YYYYMMDD) AS DUTY_YYYYMMDD
		                         FROM HAT400T WITH (NOLOCK)
		                         WHERE COMP_CODE   = #{S_COMP_CODE}
		                     AND DUTY_YYYYMMDD &lt;= #{FR_DATE}
		                         GROUP BY COMP_CODE, PERSON_NUMB
		        )  B  ON B.COMP_CODE     = A.COMP_CODE
		             AND B.PERSON_NUMB   = A.PERSON_NUMB
		     LEFT  JOIN HAT400T C WITH (NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                                       AND C.PERSON_NUMB   = B.PERSON_NUMB
		                                       AND C.DUTY_YYYYMMDD = B.DUTY_YYYYMMDD
		     LEFT  JOIN HAT600T D WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                       AND D.PERSON_NUMB   = A.PERSON_NUMB
		                                       AND D.DUTY_YYYYMMDD = #{FR_DATE}
		     LEFT  JOIN HAT800T E WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                       AND E.PERSON_NUMB   = A.PERSON_NUMB
		                                       AND E.DUTY_YYYYMMDD = #{FR_DATE}
		     LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                       AND M1.MAIN_CODE    = N'H024'
		                                       AND M1.SUB_CODE     = A.EMPLOY_TYPE
		     LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                       AND M2.MAIN_CODE    = N'H181'
		                                       AND M2.SUB_CODE     = M1.REF_CODE1
		     WHERE A.COMP_CODE = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND JOIN_DATE  &lt;=  #{FR_DATE}
		       AND (RETR_DATE = '00000000' OR RETR_DATE &gt;= #{FR_DATE})
		       <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		       AND A.PAY_CODE      = #{PAY_CODE}
		       </if>
		       AND D.COMP_CODE      IS NULL
		       AND E.COMP_CODE      IS NULL
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE        = #{DIV_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		       AND A.DEPT_CODE IN
		      <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		       #{item}
		      </foreach>
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">
		      AND ISNULL(B.WORK_TEAM, '1') = #{WORK_TEAM}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		      AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		      AND A.PAY_GUBUN     = #{PAY_GUBUN}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		      AND A.PERSON_NUMB   = #{PERSON_NUMB}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		      AND A.EMPLOY_TYPE   = #{EMPLOY_TYPE}
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		      AND M2.SUB_CODE     = #{SUB_CODE}
		      </if>

		    UNION ALL

		    SELECT ISNULL(B.WORK_TEAM, '1') AS WORK_TEAM, PAY_CODE
		         , A.DIV_CODE
		         , 'N' AS FLAG
		         , #{FR_DATE} AS DUTY_YYYYMMDD
		         , A.DEPT_CODE
		         , A.DEPT_NAME
		         , A.POST_CODE
		         , A.NAME
		         , A.PERSON_NUMB
		         , 'D' AS NUMF
		         , E.DUTY_CODE AS NUMC1
		         , E.DUTY_CODE AS NUMC
		         , E.DUTY_NUM AS NUMN
		         , 0 AS NUMT
		         , 0 AS NUMM
		         <foreach collection="DUTY_CODE" item="item" index="index">
		         , 'D' AS TIMEF${item.SUB_CODE}
		         , '${item.SUB_CODE}' AS TIMEC${item.SUB_CODE}
		         , '00' AS TIMEN${item.SUB_CODE}
		         , '00' AS TIMET${item.SUB_CODE}
		         , '00' AS TIMEM${item.SUB_CODE}
		         </foreach>
		         --20200219 추가: 수정사유(MODI_REASON), 마감여부(CLOSE_YN) 추가
		         , ''                                AS MODI_REASON
		         , 'N'                               AS CLOSE_YN
		         , 'Y' AS HIDDEN_FLAG
		      FROM       HUM100T A WITH (NOLOCK)
		      LEFT  JOIN HAT400T B WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                        AND B.PERSON_NUMB   = A.PERSON_NUMB
		                                        AND B.DUTY_YYYYMMDD = #{FR_DATE}
		      LEFT  JOIN HAT600T D WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                        AND D.PERSON_NUMB   = A.PERSON_NUMB
		      INNER JOIN HAT800T E WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                        AND E.PERSON_NUMB   = A.PERSON_NUMB
		                                        AND E.DUTY_YYYYMMDD = #{FR_DATE}
		      LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                        AND M1.MAIN_CODE    = N'H024'
		                                        AND M1.SUB_CODE     = A.EMPLOY_TYPE
		      LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE   = M1.COMP_CODE
		                                        AND M2.MAIN_CODE    = N'H181'
		                                        AND M2.SUB_CODE     = M1.REF_CODE1
		     WHERE A.COMP_CODE       = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND A.JOIN_DATE      &lt;= #{FR_DATE}
		       AND (A.RETR_DATE = '00000000' OR A.RETR_DATE &gt;= #{FR_DATE})
		       <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		       AND A.PAY_CODE      = #{PAY_CODE}
		       </if>
		       AND D.COMP_CODE      IS NULL
		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND A.DIV_CODE        = #{DIV_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		       AND A.DEPT_CODE IN
		        <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		         #{item}
		        </foreach>
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(WORK_TEAM)">
		       AND ISNULL(B.WORK_TEAM, '1') = #{WORK_TEAM}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		       AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		       AND A.PAY_GUBUN     = #{PAY_GUBUN}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		       AND A.PERSON_NUMB   = #{PERSON_NUMB}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		       AND A.EMPLOY_TYPE   = #{EMPLOY_TYPE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		       AND M2.SUB_CODE     = #{SUB_CODE}
		       </if>
		     ORDER BY WORK_TEAM, DIV_CODE, DEPT_CODE, POST_CODE, NAME, PERSON_NUMB
		</if>
	</select>

	<insert id="S_Hat910ukr_hsServiceImpl.insertList_DutyRule_Y"  parameterType="rMap" useGeneratedKeys="false">
		/* S_Hat910ukr_hsServiceImpl.insertList_DutyRule_Y */
		
		IF EXISTS (SELECT TOP 1 1 FROM HAT500T  WHERE COMP_CODE = #{S_COMP_CODE} AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD} AND PERSON_NUMB = #{PERSON_NUMB})
			BEGIN
				DELETE FROM HAT500T WHERE COMP_CODE = #{S_COMP_CODE} AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD} AND PERSON_NUMB = #{PERSON_NUMB}
			END 
			
		INSERT INTO HAT500T
		   ( COMP_CODE
		   , PERSON_NUMB
		   , DUTY_YYYYMMDD
		   , DUTY_FR_D
		   , DUTY_FR_H
		   , DUTY_FR_M
		   , DUTY_TO_D
		   , DUTY_TO_H
		   , DUTY_TO_M
		   , DUTY_CODE
		   , WORK_TEAM
		   --20200219 추가: 수정사유
		   , MODI_REASON
		   , UPDATE_DB_USER
		   , UPDATE_DB_TIME
		   , INSERT_DB_USER
		   , INSERT_DB_TIME)
		VALUES
		   ( #{S_COMP_CODE}
		   , #{PERSON_NUMB}
		   , #{DUTY_YYYYMMDD}
		   , #{DUTY_FR_D}
		   , #{DUTY_FR_H}
		   , #{DUTY_FR_M}
		   , #{DUTY_TO_D}
		   , #{DUTY_TO_H}
		   , #{DUTY_TO_M}
		   , #{DUTY_CODE}
		   , #{WORK_TEAM}
		   --20200219 추가: 수정사유
		   , #{MODI_REASON}
		   , #{S_USER_ID}
		   , GETDATE()
		   , #{S_USER_ID}
		   , GETDATE())
	</insert>

	<update id="S_Hat910ukr_hsServiceImpl.updateList_DutyRule_Y"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.updateList_DutyRule_Y */
		UPDATE HAT500T
		   SET DUTY_CODE = #{DUTY_CODE}
		     , DUTY_FR_D = #{DUTY_FR_D}
		     , DUTY_FR_H = #{DUTY_FR_H}
		     , DUTY_FR_M = #{DUTY_FR_M}
		     , DUTY_TO_D = #{DUTY_TO_D}
		     , DUTY_TO_H = #{DUTY_TO_H}
		     , DUTY_TO_M = #{DUTY_TO_M}
		     --20200219 추가: 수정사유, 수정자, 수정시간
		     , MODI_REASON = #{MODI_REASON}
		     , WORK_TEAM = #{WORK_TEAM}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND PERSON_NUMB   = #{PERSON_NUMB}
		   AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	</update>

	<delete id="S_Hat910ukr_hsServiceImpl.deleteList_DutyRule_Y"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.deleteList_DutyRule_Y */
		DELETE FROM HAT500T
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND PERSON_NUMB   = #{PERSON_NUMB}
		   AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	</delete>

	<insert id="S_Hat910ukr_hsServiceImpl.insertList_DutyRule_N01"  parameterType="rMap">

		
		/* S_Hat910ukr_hsServiceImpl.insertList_DutyRule_N01 */
		INSERT INTO HAT600T
		     ( DUTY_YYYYMMDD
		     , PERSON_NUMB
		     , WORK_TEAM
		     , DUTY_CODE
		     , DUTY_NUM
		     , DUTY_TIME
		     , DUTY_MINU
		     --20200219 추가: 수정사유
		     , MODI_REASON
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , COMP_CODE
		     )
		VALUES
		     ( #{DUTY_YYYYMMDD}
		     , #{PERSON_NUMB}
		     , #{WORK_TEAM}
		     , #{DUTY_CODE}
		     , #{DUTY_NUM}
		     , #{DUTY_TIME}
		     , #{DUTY_MINU}
		     --20200219 추가: 수정사유
		     , #{MODI_REASON}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>

	<insert id="S_Hat910ukr_hsServiceImpl.insertList_DutyRule_N02"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.insertList_DutyRule_N02 */
		INSERT INTO HAT600T
		       (PERSON_NUMB
		      , DUTY_YYYYMMDD
		      , DUTY_CODE
		      , DUTY_NUM
		      , DUTY_TIME
		      , DUTY_MINU
		      , WORK_TEAM
		      --20200219 추가: 수정사유
		      , MODI_REASON
		      , UPDATE_DB_USER
		      , UPDATE_DB_TIME
		      , INSERT_DB_USER
		      , INSERT_DB_TIME
		      , COMP_CODE)
		SELECT B.PERSON_NUMB
		     , #{DUTY_YYYYMMDD}
		     , A.SUB_CODE
		     , 0, 0, 0, #{WORK_TEAM}
		     --20200219 추가: 수정사유
		     , #{MODI_REASON}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     , B.COMP_CODE
		  FROM       BSA100T A WITH(NOLOCK)
		  INNER JOIN HUM100T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
		  INNER JOIN HBS100T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
		                                   AND A.SUB_CODE  = C.DUTY_CODE
		                                   AND B.PAY_CODE  = C.PAY_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE   = 'H033'
		   AND SUB_CODE &lt;&gt; '$'
		   AND B.PERSON_NUMB =  #{PERSON_NUMB}
		   AND SUB_CODE NOT IN (SELECT DUTY_CODE
		                          FROM HAT600T WITH(NOLOCK)
		                         WHERE COMP_CODE     = #{S_COMP_CODE}
		                           AND PERSON_NUMB   = #{PERSON_NUMB}
		                           AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD})
	</insert>

	<update id="S_Hat910ukr_hsServiceImpl.updateList_DutyRule_N"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.updateList_DutyRule_N */
		UPDATE HAT600T
		   SET DUTY_NUM = '1'
		     --20200219 추가: 수정사유
		     , MODI_REASON = #{MODI_REASON}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND PERSON_NUMB   = #{PERSON_NUMB}
		   AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
		   AND DUTY_CODE     = #{NUMC}
	</update>

	<delete id="S_Hat910ukr_hsServiceImpl.deleteList_DutyRule_N"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.deleteList_DutyRule_N */
		DELETE FROM HAT600T
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND PERSON_NUMB   = #{PERSON_NUMB}
		   AND DUTY_YYYYMMDD = #{DUTY_YYYYMMDD}
	</delete>


<!-- 20200219 개인별 마감/마감취소 관련 로직 -->
	<update id="S_Hat910ukr_hsServiceImpl.procClosing"  parameterType="rMap">
		/* S_Hat910ukr_hsServiceImpl.procClosing */
		<if test="CLOSE_YN == &quot;Y&quot;">
		    INSERT INTO HBS910T (
		           COMP_CODE
		         , DIV_CODE
		         , PERSON_NUMB
		         , CLOSE_TYPE
		         , CLOSE_DATE
		         , SUPP_TYPE
		         , INSERT_DB_USER
		         , INSERT_DB_TIME
		         , UPDATE_DB_USER
		         , UPDATE_DB_TIME
		    ) VALUES (
		           #{S_COMP_CODE}
		         , #{DIV_CODE}
		         , #{PERSON_NUMB}
		         , 'D'                      --구분(1:급여, 2:상여, D:근태, F:년차, Y:연말정산)
		         , #{DUTY_YYYYMMDD}
		         , 'Z'
		         , #{S_USER_ID}
		         , GETDATE()
		         , #{S_USER_ID}
		         , GETDATE()
		    )
		</if>
		<if test="CLOSE_YN == &quot;N&quot;">
		    DELETE HBS910T
		     WHERE COMP_CODE     = #{S_COMP_CODE}
		       AND DIV_CODE      = #{DIV_CODE}
		       AND PERSON_NUMB   = #{PERSON_NUMB}
		       AND CLOSE_TYPE    = 'D'      --구분(1:급여, 2:상여, D:근태, F:년차, Y:연말정산)
		       AND CLOSE_DATE    = #{DUTY_YYYYMMDD}
		       AND SUPP_TYPE     = 'Z'
		</if>
	</update>

	<update id="S_Hat910ukr_hsServiceImpl.insertExcelUpload" parameterType="Map">
        /* S_Hat910ukr_hsServiceImpl.insertExcelUpload*/
        INSERT INTO L_HAT510T
            (
               _EXCEL_JOBID 
             , _EXCEL_ROWNUM 
             , _EXCEL_HAS_ERROR 
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE
             , DUTY_YYYYMMDD
             , GROUP_1
             , GROUP_2
             , GROUP_3
             , GROUP_4
             
             , NAME
             , PERSON_NUMB
             , POST_NAME
             
             , CARD_NUM
             , WORK_TEAM
             , WORK_TYPE
             
             , DUTY_FR
             , DUTY_TO
             
           
             , TEMPC_01
             , TEMPC_02
             , TEMPC_03
             , TEMPC_04
             , TEMPC_05
             , TEMPC_06
             , TEMPC_07
             , TEMPC_08
             , TEMPC_09
             , TEMPC_10
             , TEMPC_11
            
             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID} 
             , #{_EXCEL_ROWNUM} 
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}
                  
             , #{S_COMP_CODE}
            
             , REPLACE(LEFT(#{DUTY_YYYYMMDD}, 10), '-', '')
             , #{GROUP_1}
             , #{GROUP_2}
             , #{GROUP_3}
             , #{GROUP_4}
             
             , #{NAME}
             , #{PERSON_NUMB}
             , #{POST_NAME}             
            
             , #{CARD_NUM}
             , #{WORK_TEAM}
             , #{WORK_TYPE}
             
             , #{DUTY_FR}
             , #{DUTY_TO}
             
             , #{TEMPC_01}
             , #{TEMPC_02}
             , #{TEMPC_03}
             , #{TEMPC_04}
             , #{TEMPC_05}
             , #{TEMPC_06}
             , #{TEMPC_07}
             , #{TEMPC_08}
             , #{TEMPC_09}
             , #{TEMPC_10}
             , #{TEMPC_11}
                       
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    
    <!-- 임시 테이블에 insert된 데이터 조회 --> 
    <select id="S_Hat910ukr_hsServiceImpl.getData" parameterType="Map" resultType="rMap">
    	--S_Hat910ukr_hsServiceImpl.getData
        SELECT  * FROM L_HAT510T WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
    
    <update id="S_Hat910ukr_hsServiceImpl.insertSP" parameterType="Map" statementType="CALLABLE">
        {call USP_HUMAN_HAT500TUKR_SECOM_INSERT_HS (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{WORK_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{LOGIN_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{LANG_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{RETURN_DATE, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
    
    
 	<select id="S_Hat910ukr_hsServiceImpl.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
		--S_Hat910ukr_hsServiceImpl.selectExcelUploadSheet
		SELECT 
		       A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     
 			-- , CASE WHEN A.PERSON_NUMB = B.PERSON_NUMB
			 --       THEN CASE WHEN A.NAME != B.NAME
				--	          THEN 'Y'
				--			  WHEN ISNULL(A.TEMPC_01, '') = '정상출근'
				--			  THEN CASE WHEN ISNULL(A.DUTY_FR, '') = ''
				--						THEN 'Y'
				--						WHEN ISNULL(A.DUTY_TO, '') = ''
				--						THEN 'Y' 
				--						ELSE A._EXCEL_HAS_ERROR
				--				    END
								
				--			  ELSE A._EXCEL_HAS_ERROR

				--		  END 
				--	WHEN ISNULL(B.PERSON_NUMB, '') = ''
				--	THEN 'Y'
				--	ELSE A._EXCEL_HAS_ERROR
				--END AS _EXCEL_HAS_ERROR

 			-- , CASE WHEN A.PERSON_NUMB = B.PERSON_NUMB
			 --       THEN CASE WHEN A.NAME != B.NAME
				--	          THEN '해당 사번와 이름을 확인하십시오.'
				--			  WHEN ISNULL(A.TEMPC_01, '') = '정상출근'
				--			  THEN CASE WHEN ISNULL(A.DUTY_FR, '') = ''
				--						THEN '출근시간이 존재하지 않습니다.'
				--						WHEN ISNULL(A.DUTY_TO, '') = ''
				--						THEN '퇴근시간이 존재하지 않습니다.' 
				--						ELSE A._EXCEL_HAS_ERROR
				--				    END
								
				--			  ELSE A._EXCEL_HAS_ERROR
				--		  END
				--	WHEN ISNULL(B.PERSON_NUMB, '') = ''
				--	THEN '등록된 사번이 없습니다.'
				--	ELSE A._EXCEL_ERROR_MSG
				--END AS _EXCEL_ERROR_MSG		     
                
                , A._EXCEL_HAS_ERROR
                , A._EXCEL_ERROR_MSG
		     
		     	, A.COMP_CODE     

				--, D.WORK_TEAM  AS WORK_TEAM
				--, M4.CODE_NAME AS WORK_TEAM_NAME
				
				, ISNULL(D2.WORK_TEAM, '1') AS WORK_TEAM
				, M4.CODE_NAME              AS WORK_TEAM_NAME
				
				, B.DIV_CODE
				, M1.DIV_NAME
				, A.DUTY_YYYYMMDD
				, 'N' AS FLAG

				, B.DEPT_CODE
				, C.TREE_NAME AS DEPT_NAME

				, B.POST_CODE
				, M2.CODE_NAME AS POST_NAME
				, B.NAME
				, A.PERSON_NUMB   

				, CASE WHEN A.TEMPC_02  = '결근'
				       THEN '83'
					END AS DUTY_CODE
				
				--, M3.SUB_CODE         AS DUTY_CODE
				, M3.CODE_NAME        AS DUTY_NAME
								
				, LEFT(A.DUTY_FR, 10) AS DUTY_FR_D
				, CASE WHEN M3.SUB_CODE = '83'
				       THEN '00'
					   ELSE SUBSTRING(A.DUTY_FR, 12, 2)
					END                       AS DUTY_FR_H
				, CASE WHEN M3.SUB_CODE = '83'
				       THEN '00'
					   ELSE SUBSTRING(A.DUTY_FR, 15, 2)
					END                       AS DUTY_FR_M


				, LEFT(A.DUTY_TO, 10) AS DUTY_TO_D

				, CASE WHEN M3.SUB_CODE = '83'
				       THEN '00'
					   ELSE SUBSTRING(A.DUTY_TO, 12, 2)
					END                       AS DUTY_TO_H
				, CASE WHEN M3.SUB_CODE = '83'
				       THEN '00'
					   ELSE SUBSTRING(A.DUTY_TO, 15, 2)
					END                       AS DUTY_TO_M

				, 'N' AS CLOSE_YN
				, B.PAY_CODE
				, 'Y' AS HIDDEN_FLAG

		 FROM    L_HAT510T A WITH (NOLOCK) 
		 LEFT JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                     AND B.PERSON_NUMB = A.PERSON_NUMB

		 LEFT JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
		                                  AND C.TREE_CODE  = B.DEPT_CODE

         LEFT JOIN (
		 
					SELECT A.COMP_CODE
					     , A.PERSON_NUMB
						 , MAX(A.DUTY_YYYYMMDD) AS DUTY_YYYYMMDD
					  FROM        HAT400T A WITH (NOLOCK)
					  LEFT JOIN L_HAT510T B ON B. _EXCEL_JOBID = #{_EXCEL_JOBID}
					 WHERE A.COMP_CODE = #{S_COMP_CODE}
					   AND A.DUTY_YYYYMMDD &lt;= REPLACE(REPLACE(REPLACE(B.DUTY_YYYYMMDD, '/', ''), '.', ''), '-', '')
					 GROUP BY A.COMP_CODE , A.PERSON_NUMB
				   ) D1 ON D1.COMP_CODE = A.COMP_CODE
				       AND D1.PERSON_NUMB = A.PERSON_NUMB

		 LEFT JOIN HAT400T D2 WITH (NOLOCK) ON D2.COMP_CODE  = D1.COMP_CODE
		                                  AND D2.DUTY_YYYYMMDD  = D1.DUTY_YYYYMMDD
										  AND D2.PERSON_NUMB = D1.PERSON_NUMB

		                                  
		 LEFT JOIN BOR120T M1 WITH (NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
		                                   AND M1.DIV_CODE   = B.DIV_CODE

		 LEFT JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = B.COMP_CODE
		                                   AND M2.MAIN_CODE  = 'H005'
										   AND M2.SUB_CODE   = B.POST_CODE
		 LEFT JOIN BSA100T M3 WITH (NOLOCK) ON M3.COMP_CODE  = A.COMP_CODE
		                                   AND M3.MAIN_CODE  = 'H033'
										   AND M3.CODE_NAME   = CASE WHEN A.TEMPC_01 = '결근' OR A.TEMPC_01 = '결근'
										                             THEN 'OFF'
																	 ELSE ''
																END
		 LEFT JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE  = B.COMP_CODE
		                                   AND M4.MAIN_CODE  = 'H004'
										   AND M4.SUB_CODE   = ISNULL(D2.WORK_TEAM, '1')
	
										  
		                                   
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 --  AND (ISNULL(DUTY_FR, '') != '' AND ISNULL(DUTY_TO, '') != '')
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    
</mapper>