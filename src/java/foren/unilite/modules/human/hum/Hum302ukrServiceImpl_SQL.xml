<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum302ukrService">
	<select id="hum302ukrService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	<select id="hum302ukrService.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
	    BEGIN
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	    
	    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
	        DECLARE         @DateFormat         NVARCHAR(10)
	    
	        SELECT  TOP 1 @DateFormat = CODE_NAME
	        FROM    BSA100T WITH (NOLOCK)
	        WHERE   COMP_CODE = #{S_COMP_CODE}
	        AND     MAIN_CODE = N'B044'
	        AND     REF_CODE1 = N'Y'
	    
	        SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
	    
	    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
	        SELECT 
	                A.COMP_CODE                                                                 AS COMP_CODE
	             ,  B.DIV_CODE                                                                  AS DIV_CODE 
	             ,  B.DEPT_NAME                                                                 AS DEPT_NAME
	             ,  B.POST_CODE                                                                 AS POST_CODE
	             ,  B.NAME                                                                      AS NAME
	             ,  A.PERSON_NUMB                                                               AS PERSON_NUMB
	             ,  A.SCHOOL_NAME                                                               AS SCHOOL_NAME
	             ,  CASE WHEN ISNULL(A.ENTR_DATE, '') = '' THEN ''
	                     ELSE REPLACE(
	                          REPLACE(
	                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ENTR_DATE, 1, 4))
	                                             , 'MM',   SUBSTRING(A.ENTR_DATE, 5, 2))
	                                             , 'DD',   SUBSTRING(A.ENTR_DATE, 7, 2))
	                END                                                                         AS ENTR_DATE
	             ,  CASE WHEN ISNULL(A.GRAD_DATE, '') = '' THEN ''
	                     ELSE REPLACE(
	                          REPLACE(
	                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.GRAD_DATE, 1, 4))
	                                             , 'MM',   SUBSTRING(A.GRAD_DATE, 5, 2))
	                                             , 'DD',   SUBSTRING(A.GRAD_DATE, 7, 2))
	                END                                                                         AS GRAD_DATE
	             ,  A.GRAD_GUBUN                                                                AS GRAD_GUBUN
	             ,  A.ADDRESS                                                                   AS ADDRESS
	             ,  A.FIRST_SUBJECT                                                             AS FIRST_SUBJECT
	             ,  A.DEGREE                                                                    AS DEGREE
	             ,  A.CREDITS                                                                   AS CREDITS
	             ,  A.SPECIAL_ITEM                                                              AS SPECIAL_ITEM
	             ,  A.INSERT_DB_TIME                                                            AS INSERT_DB_TIME
	             ,  A.INSERT_DB_USER                                                            AS INSERT_DB_USER
	             ,  A.UPDATE_DB_TIME                                                            AS UPDATE_DB_TIME
	             ,  A.UPDATE_DB_USER                                                            AS UPDATE_DB_USER
	        FROM               HUM720T AS A  WITH (NOLOCK)
	                INNER JOIN HUM100T AS B  WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
	                                                      AND B.PERSON_NUMB     = A.PERSON_NUMB
	                LEFT  JOIN CBM600T AS C  WITH (NOLOCK) ON C.COMP_CODE       = B.COMP_CODE
	                                                      AND C.COST_POOL_CODE  = B.COST_KIND
	                LEFT  JOIN BSA100T AS D  WITH (NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
	                                                      AND D.SUB_CODE       != N'$'
	                                                      AND D.SUB_CODE        = A.FIRST_SUBJECT
	                                                      AND D.MAIN_CODE       = 'H087'
	                LEFT  JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE      = B.COMP_CODE
	                                                      AND M1.MAIN_CODE      = N'H005'
	                                                      AND M1.SUB_CODE      != N'$'
	                                                      AND M1.SUB_CODE       = B.POST_CODE
	                LEFT  JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE      = B.COMP_CODE
	                                                      AND M2.MAIN_CODE      = N'H024'
	                                                      AND M2.SUB_CODE      != N'$'
	                                                      AND M2.SUB_CODE       = B.EMPLOY_TYPE
	                LEFT  JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE      = B.COMP_CODE
	                                                      AND M3.MAIN_CODE      = N'H181'
	                                                      AND M3.SUB_CODE       = M2.REF_CODE1
	                LEFT  JOIN BSA100T AS M4 WITH (NOLOCK) ON M4.COMP_CODE      = B.COMP_CODE
	                                                      AND M4.MAIN_CODE      = N'H005'
	                                                      AND M4.SUB_CODE      != N'$'
	                                                      AND M4.SUB_CODE       = B.POST_CODE
	
	        WHERE   A.COMP_CODE      = #{S_COMP_CODE}
	      
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		       AND B.DIV_CODE IN
					<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
		    </if>
            <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  B.DEPT_CODE	 IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(NAME)">
			   AND B.NAME   LIKE + '%' +  #{NAME} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			   AND B.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
			<if test="RDO_TYPE == &quot;A&quot;">
				AND B.RETR_DATE = '00000000'							-- 재직구분 (재직)
			</if>
			<if test="RDO_TYPE == &quot;B&quot;">
				AND B.RETR_DATE != '00000000'							-- 재직구분 (퇴사)
			</if>
			<if test="@foren.Ognl@isNotEmpty(SCHOOL_NAME)">
			   AND A.SCHOOL_NAME   LIKE + '%' +  #{SCHOOL_NAME} + '%'	-- 학교명
            </if>
            <if test="@foren.Ognl@isNotEmpty(GRAD_GUBUN)">
			   AND A.GRAD_GUBUN  = #{GRAD_GUBUN}						-- 졸업구분
			</if>
			<if test="@foren.Ognl@isNotEmpty(ADDRESS)">
			   AND A.ADDRESS  = #{ADDRESS}								-- 소재지
			</if>
			<if test="@foren.Ognl@isNotEmpty(SUBJECT)">
			   AND   ((A.FIRST_SUBJECT LIKE '%' + #{SUBJECT} + '%')
	            OR     (D.CODE_NAME     LIKE '%' + #{SUBJECT} + '%' ))	-- 전공구분
			</if>
			<if test="@foren.Ognl@isNotEmpty(DEGREE)">
			   AND A.DEGREE   LIKE + '%' +  #{DEGREE} + '%'				-- 학위
            </if>
            
            <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
			   AND B.PAY_GUBUN  		 = #{PAY_GUBUN}					-- 고용형태
			</if>
			<if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">
			   AND B.EMPLOY_TYPE 	= #{EMPLOY_GUBUN}		 			-- 사원구분
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			   AND B.PAY_CODE 		= #{PAY_CODE}		 	 			-- 급여지급방식
			</if>
			<if test="@foren.Ognl@isNotEmpty(COST_POOL)">
			   AND B.COST_KIND 		= #{COST_POOL}		 	 			-- 사업명
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
			   AND B.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}		 			-- 급여지급차수
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
			   AND M3.SUB_CODE 		= #{PERSON_GROUP}		 			-- 사원그룹
			</if>

	    
	        ORDER   BY A.COMP_CODE, B.DIV_CODE, B.DEPT_CODE, B.POST_CODE
	    
	        SET NOCOUNT OFF
	        SET ARITHABORT OFF
	    END
	</select>
	
	<insert id="hum302ukrService.insertDetail" parameterType="Map">    /* 추가 */                  
		--hum302ukr.Chum302ukr[fnHum302Save] Query02
			INSERT INTO HUM720T
			     ( COMP_CODE
			     , PERSON_NUMB
			     , SCHOOL_NAME
			     , ENTR_DATE
			     <if test="@foren.Ognl@isNotEmpty(GRAD_DATE)">
	             , GRAD_DATE
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(GRAD_GUBUN)">
	             , GRAD_GUBUN
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(ADDRESS)">
	             , ADDRESS
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(FIRST_SUBJECT)">
	             , FIRST_SUBJECT
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(DEGREE)">
	             , DEGREE
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(CREDITS)">
	             , CREDITS
	        	 </if>
	        	 <if test="@foren.Ognl@isNotEmpty(SPECIAL_ITEM)">
	             , SPECIAL_ITEM
	        	 </if>
			     , INSERT_DB_TIME
			     , INSERT_DB_USER
			     , UPDATE_DB_TIME
			     , UPDATE_DB_USER
			     ) 
			VALUES
			     ( #{S_COMP_CODE}
			     , #{PERSON_NUMB}
			     , #{SCHOOL_NAME}
			     , #{ENTR_DATE}
			     <if test="@foren.Ognl@isNotEmpty(GRAD_DATE)">
	             , #{GRAD_DATE}
	             </if>
	             <if test="@foren.Ognl@isNotEmpty(GRAD_GUBUN)">
	             , #{GRAD_GUBUN}
	             </if>
			     <if test="@foren.Ognl@isNotEmpty(ADDRESS)">
	             , #{ADDRESS}
	             </if>
	             <if test="@foren.Ognl@isNotEmpty(FIRST_SUBJECT)">
	             , #{FIRST_SUBJECT}
	             </if>
	             <if test="@foren.Ognl@isNotEmpty(DEGREE)">
	             , #{DEGREE}
	             </if>
	             <if test="@foren.Ognl@isNotEmpty(CREDITS)">
	             , #{CREDITS}
	             </if>
	             <if test="@foren.Ognl@isNotEmpty(SPECIAL_ITEM)">
	             , #{SPECIAL_ITEM}
	             </if>
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     )
	</insert>
	
	<update id="hum302ukrService.updateDetail" parameterType="Map">		/* 수정 */
		--hum302ukr.Chum302ukr[fnHum302Save] Query02
		UPDATE HUM720T
		   SET GRAD_DATE      = #{GRAD_DATE}
		     , GRAD_GUBUN     = #{GRAD_GUBUN}
		     , ADDRESS        = #{ADDRESS}
		     , FIRST_SUBJECT  = #{FIRST_SUBJECT}
		     , DEGREE         = #{DEGREE}
		     , CREDITS        = #{CREDITS}
		     , SPECIAL_ITEM   = #{SPECIAL_ITEM}
		     , INSERT_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , UPDATE_DB_USER = #{S_USER_ID}
		     
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND PERSON_NUMB    = #{PERSON_NUMB}
		   AND SCHOOL_NAME    = #{SCHOOL_NAME}
		   AND ENTR_DATE      = #{ENTR_DATE}
	</update>
	
	<delete id="hum302ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
		DELETE FROM HUM720T 
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND PERSON_NUMB = #{PERSON_NUMB}
		   AND SCHOOL_NAME = #{SCHOOL_NAME}
		   AND ENTR_DATE   = #{ENTR_DATE}
	</delete>
</mapper>