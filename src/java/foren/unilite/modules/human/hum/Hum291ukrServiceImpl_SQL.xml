<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum291ukrServiceImpl">
	<select id="hum291ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
            /* hum291ukrServiceImpl.checkCompCode */
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
  
	
	<select id="hum291ukrServiceImpl.select" parameterType="Map" resultType="rMap">	
	     /* 조회쿼리 */
		 /* hum291ukrServiceImpl.select */
		    
		    SELECT A.COMP_CODE
			     , A.PERSON_NUMB
				 , B.NAME
				 , B.POST_CODE
				 , B.DEPT_NAME
				 , B.PAY_GRADE_01
				 , B.PAY_GRADE_02
			
				 , A.MERITS_YEARS
				 , A.MERITS_GUBUN
				 , A.MERITS_GRADE
				 , A.AVG_JOB_GRADE
						
			  FROM      HUM770T A WITH(NOLOCK)
			 INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
			                                  AND B.PERSON_NUMB = A.PERSON_NUMB
			 WHERE A.COMP_CODE    = #{S_COMP_CODE}
			   AND A.MERITS_YEARS = #{MERITS_YEARS}  

		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		        AND B.DIV_CODE IN
					<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
		    </if>
            <if test="@foren.Ognl@isNotEmpty(DEPTS)">
			   AND  B.DEPT_CODE	 IN
				 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
		          		 #{item}
		    	 </foreach>
			</if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			    AND B.PERSON_NUMB  = #{PERSON_NUMB}
			</if>

           			
		    ORDER BY B.DEPT_CODE, B.POST_CODE, B.PERSON_NUMB
		    
	</select>
	
	<insert id="hum291ukrServiceImpl.insertDetail" parameterType="Map">    
        /* 추가 */
        /* hum291ukrServiceImpl.insertDetail */
    	IF NOT EXISTS (
                    SELECT TOP 1 1 
                      FROM HUM770T
                     WHERE COMP_CODE     = #{COMP_CODE}
                       AND PERSON_NUMB   = #{PERSON_NUMB}
                       AND MERITS_YEARS  = #{MERITS_YEARS}
                       AND MERITS_GUBUN  = '97'
            		   )
        	BEGIN
        		INSERT INTO HUM770T
				     ( COMP_CODE
				     , PERSON_NUMB
		             , MERITS_YEARS
				     , MERITS_GUBUN
				     , DEPT_NAME		
				     , MERITS_GRADE
				     , AVG_JOB_GRADE				     
				     , GRADE_PERSON_NUMB		
				     , INSERT_DB_USER
				     , INSERT_DB_TIME
				     , UPDATE_DB_USER
				     , UPDATE_DB_TIME
		
				     ) 
				VALUES
				     ( #{S_COMP_CODE}
				     , #{PERSON_NUMB}
				     , #{MERITS_YEARS}
				     , '97'
				     , #{DEPT_NAME}				     
				     , #{MERITS_GRADE}
				     , #{AVG_JOB_GRADE}				     
				     , #{S_USER_ID}				    
				     , #{S_USER_ID}
				     , GETDATE()
				     , #{S_USER_ID}
				     , GETDATE()   
				     )
        	END
        ELSE
        	BEGIN
        		UPDATE HUM770T
				   SET MERITS_GRADE      = #{MERITS_GRADE}
				     , AVG_JOB_GRADE	 = #{AVG_JOB_GRADE}
					 , GRADE_PERSON_NUMB = #{S_USER_ID}				
					 , UPDATE_DB_USER    = #{S_USER_ID}
				     , UPDATE_DB_TIME    = GETDATE()
				 WHERE COMP_CODE    = #{S_COMP_CODE}
				   AND PERSON_NUMB  = #{PERSON_NUMB}
				   AND MERITS_YEARS = #{MERITS_YEARS}
				   AND MERITS_GUBUN = '97'
       	 	END
	</insert>
	
	<update id="hum291ukrServiceImpl.updateDetail" parameterType="Map">		
        /* 수정 */
        /* hum291ukrServiceImpl.updateDetail */
		
			UPDATE HUM770T
                   SET MERITS_GRADE      = #{MERITS_GRADE}
                     , AVG_JOB_GRADE     = #{AVG_JOB_GRADE}
                     , GRADE_PERSON_NUMB = #{S_USER_ID}             
                     , UPDATE_DB_USER    = #{S_USER_ID}
                     , UPDATE_DB_TIME    = GETDATE()
                 WHERE COMP_CODE    = #{S_COMP_CODE}
                   AND PERSON_NUMB  = #{PERSON_NUMB}
                   AND MERITS_YEARS = #{MERITS_YEARS}
                   AND MERITS_GUBUN = '97'
	</update>
	
	<delete id="hum291ukrServiceImpl.deleteDetail" parameterType="Map">		
        /* 삭제 */
        /* hum291ukrServiceImpl.deleteDetail */
		DELETE FROM HUM770T
		WHERE COMP_CODE   = #{S_COMP_CODE}
		 AND PERSON_NUMB  = #{PERSON_NUMB}
		 AND MERITS_YEARS = #{MERITS_YEARS}
	     AND MERITS_GUBUN = '97'
         
	</delete>
	
    
    
	
	<insert id="hum291ukrServiceImpl.insertExcelUpload" parameterType="Map">		
        /* 엑셀insert */
        /* hum291ukrServiceImpl.insertExcelUpload1 */
		INSERT INTO L_HUM770T
		     ( _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     
		     , COMP_CODE
		     , PERSON_NUMB
		     , NAME   
		     
             , MERITS_GUBUN
             
             , MERITS_YEARS
		     , MERITS_GRADE	 
		     , AVG_JOB_GRADE
		      
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     ) 
		VALUES
		     ( #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
		     , #{_EXCEL_ERROR,jdbcType=VARCHAR}
		     
		     , #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     , #{NAME}
		     
		     , '97'
		     
		     , #{MERITS_YEARS}	 
		     , SUBSTRING(#{MERITS_GRADE}, 1, 10)	 
		     , SUBSTRING(#{AVG_JOB_GRADE}, 1, 10)	 
		    
		     , #{S_USER_ID}
		     , GETDATE()
		     
		     )
	</insert>

	<select id="hum291ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 버튼 / 조회 */
		/* hum291ukrServiceImpl.selectExcelUploadSheet1 */
		BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */	
		    SELECT A._EXCEL_JOBID
				 , A._EXCEL_ROWNUM
				 , A._EXCEL_HAS_ERROR
				 , A._EXCEL_ERROR_MSG
				 , A.COMP_CODE
				 , A.PERSON_NUMB
				 , B.NAME

				 , B.POST_CODE
				 , B.DEPT_NAME
				 , B.PAY_GRADE_01
				 , B.PAY_GRADE_02
				 
                 , A.MERITS_GUBUN
				 	
				 , A.MERITS_YEARS
				 , A.MERITS_GRADE	
				 , A.AVG_JOB_GRADE	
			
			  FROM      L_HUM770T  A
			  LEFT JOIN HUM100T B ON B.COMP_CODE    = #{S_COMP_CODE}
			  			         AND A.PERSON_NUMB  = B.PERSON_NUMB
 
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		  	ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	END
	</select>

	<update id="excelValidate" >	/* 엑셀validation */
		
	UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN 
										A.PERSON_NUMB     IS NULL 	   OR		-- 사번
										A.NAME     		  IS NULL 	   OR		-- 이름
										A.MERITS_YEARS    IS NULL 	   OR		-- 평가년도
										A.MERITS_GRADE    IS NULL      OR		-- 평가점수
										A.AVG_JOB_GRADE   IS NULL  THEN 'Y'		-- 직급평균
							  	   ELSE A._EXCEL_HAS_ERROR 				    	-- 필수값 체크
						      	 END),
			
			
	
						     
			A._EXCEL_ERROR_MSG = (CASE WHEN  
                                             A.PERSON_NUMB    IS NULL 	OR
											 A.NAME     	  IS NULL 	OR
										     A.MERITS_YEARS   IS NULL   OR
										     A.MERITS_GRADE   IS NULL   OR
										     A.AVG_JOB_GRADE  IS NULL  THEN '필수입력 값을 확인 해주세요.'
							  	   	   ELSE  A._EXCEL_ERROR_MSG 
						      	 END)
								 
	FROM L_HUM770T A 	
	
	UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN 
                                        B.NAME != A.NAME THEN 'Y'		-- HUM100 사번 체크
							  	   ELSE A._EXCEL_HAS_ERROR 				    -- 필수값 체크
						      	 END),
			
			
	
						     
			A._EXCEL_ERROR_MSG = (CASE WHEN  
										B.NAME != A.NAME   THEN '사원명을 확인하십시오.'
							  	   ELSE A._EXCEL_ERROR_MSG 
						      	 END)
								 
	FROM    L_HUM770T A 
	LEFT JOIN HUM100T B  ON B.COMP_CODE = #{S_COMP_CODE}
						AND B.PERSON_NUMB  = A.PERSON_NUMB	
	
	</update>	
	 
</mapper>