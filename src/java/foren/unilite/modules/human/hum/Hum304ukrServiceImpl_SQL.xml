<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum304ukrServiceImpl">
	<select id="hum304ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
            /* hum304ukrServiceImpl.checkCompCode */
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
  
	
	<select id="hum304ukrServiceImpl.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
		 /* hum304ukrServiceImpl.select */
		    
		    --  [ 날짜 포맷 유형 설정 ] ------------------------------------------------------------
		        DECLARE         @DateFormat         NVARCHAR(10)
		    
		        SELECT  TOP 1 @DateFormat = CODE_NAME
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE = #{S_COMP_CODE}
		        AND     MAIN_CODE = N'B044'
		        AND     REF_CODE1 = N'Y'
		    
		        SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		        
		        
		        DECLARE 		 @FROM_DATE			NVARCHAR(10)	/* 교육기간 FR */
		    					,@TO_DATE			NVARCHAR(10)	/* 교육기간 TO */
		    					
				SET @FROM_DATE = #{EDU_FR_DATE}
				SET @TO_DATE   = #{EDU_TO_DATE}
		        
		    --  [ 데이터 조회 ] --------------------------------------------------------------------
		    
		    
		    SELECT 
		              M.DOC_ID           
                    , M.COMP_CODE           
                    , A.DIV_CODE            
                    , A.DEPT_NAME           
                    , A.POST_CODE           
                    , A.ABIL_CODE           
                    , M.PERSON_NUMB     
                    , A.NAME     
                    , M.EDU_TITLE
		            , CASE WHEN ISNULL(M.EDU_FR_DATE, '') = N'' THEN N''
		                   ELSE REPLACE(
		                        REPLACE(
		                        REPLACE(@DateFormat, N'YYYY', SUBSTRING(M.EDU_FR_DATE, 1, 4))
		                                           , N'MM',   SUBSTRING(M.EDU_FR_DATE, 5, 2))
		                                           , N'DD',   SUBSTRING(M.EDU_FR_DATE, 7, 2))
		               END AS EDU_FR_DATE
		
		            , CASE WHEN ISNULL(M.EDU_TO_DATE, '') = N'' THEN N''
		                   ELSE REPLACE(
		                        REPLACE(
		                        REPLACE(@DateFormat, N'YYYY', SUBSTRING(M.EDU_TO_DATE, 1, 4))
		                                           , N'MM',   SUBSTRING(M.EDU_TO_DATE, 5, 2))
		                                           , N'DD',   SUBSTRING(M.EDU_TO_DATE, 7, 2))
		               END AS EDU_TO_DATE
		            , M.EDU_TIME
                    , M.EDU_NATION
                    , M.EDU_ORGAN
                    , M.EDU_AMT

                    , E.COST_POOL_NAME    /* 회계명 */
                    , M.REPORT_YN
                    , M.REMARK
                    , M.EDU_BASIS_NUM
                    
                    , M.COST_POOL_CODE
                    , M.SDC_ACD_YN
                    , M.LAW_EDU_YN
                    
					, M.EDU_CLASS       -- 구분(교육과정
					, M.EDU_GUBUN1      -- 학습유형  
					, M.EDU_GUBUN2      -- 학습방법 
					, M.EDU_GUBUN3      -- 학습분야
					
					, uniLITE.fnGetUserdate('MASTER', CONVERT(NVARCHAR(10), DRAFT_DATE, 120))	AS DRAFT_DATE

                    
		    FROM                        HUM740T     M WITH(NOLOCK)
		            INNER JOIN          HUM100T     A WITH(NOLOCK)  ON M.COMP_CODE     = A.COMP_CODE
		                                                           AND M.PERSON_NUMB   = A.PERSON_NUMB
		            LEFT  OUTER JOIN    BSA100T     B WITH(NOLOCK)  ON M.COMP_CODE     = B.COMP_CODE
		                                                           AND B.SUB_CODE      = A.EMPLOY_TYPE
		                                                           AND B.MAIN_CODE     = 'H024'
		    
		            LEFT  OUTER JOIN    BSA100T     D WITH(NOLOCK)  ON D.COMP_CODE     = M.COMP_CODE
		                                                           AND D.SUB_CODE      = M.EDU_ORGAN
		                                                           AND D.MAIN_CODE     = 'H089'
                    LEFT JOIN          CBM700T     E WITH(NOLOCK)  ON A.COMP_CODE     = E.COMP_CODE
                                                                   AND A.COST_KIND     = E.COST_POOL_CODE               
		
			WHERE   M.COMP_CODE     =   #{S_COMP_CODE}
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
				AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>									
			</if>
			<if test="@foren.Ognl@isNotEmpty(DEPTS)">
				AND A.DEPT_CODE	 IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				AND A.PERSON_NUMB  = #{PERSON_NUMB}
			</if>
			<if test="RDO_TYPE == &quot;A&quot;">
				AND A.RETR_DATE = '00000000'		-- 재직구분 (재직)
			</if>
			<if test="RDO_TYPE == &quot;B&quot;">
				AND A.RETR_DATE != '00000000'		-- 재직구분 (퇴사)
			</if>
			<if test="@foren.Ognl@isNotEmpty(EDU_FR_DATE)">
				AND M.EDU_TO_DATE &gt;= #{EDU_FR_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EDU_TO_DATE)">
				AND M.EDU_FR_DATE &lt;= #{EDU_TO_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EDU_CLASS)">
				AND M.EDU_CLASS  = #{EDU_CLASS}
			</if>
			<if test="@foren.Ognl@isNotEmpty(DRAFT_FR_DATE)">
				AND M.DRAFT_DATE &gt;=  #{DRAFT_FR_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(DRAFT_TO_DATE)">
				AND M.DRAFT_DATE &lt;=  DATEADD(D, 1, CONVERT(DATETIME, #{DRAFT_TO_DATE}))
			</if>
			
		    ORDER BY A.DIV_CODE, A.DEPT_CODE, A.POST_CODE, M.PERSON_NUMB, M.EDU_FR_DATE
		    
	</select>
	
	<insert id="hum304ukrServiceImpl.insertDetail" parameterType="Map">    
        /* 추가 */
        /* hum304ukrServiceImpl.insertDetail */

        DECLARE @BASIS_NUM VARCHAR(30)
          
        SELECT @BASIS_NUM = '34'+ #{PERSON_NUMB} 
                                + REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR, GETDATE(), 120), ' ', ''), '-', ''), ':', '') 
                                + CAST(CAST(rand()*99 AS int) AS VARCHAR)
        
        DECLARE @COST_POOL_CODE VARCHAR(30)
        
        SELECT @COST_POOL_CODE = E.COST_POOL_CODE 
        FROM HUM100T A
        LEFT JOIN CBM700T     E WITH(NOLOCK)  ON A.COMP_CODE     = E.COMP_CODE
                                             AND A.COST_KIND     = E.COST_POOL_CODE
        WHERE A.PERSON_NUMB = #{PERSON_NUMB}

            
        
		INSERT INTO HUM740T
		     ( COMP_CODE
		     , PERSON_NUMB
             , DOC_NUM
		     , EDU_TITLE
		     , EDU_CLASS
		     , EDU_GUBUN1
		     , EDU_GUBUN2
		     , EDU_GUBUN3
		     , EDU_FR_DATE
		     , EDU_TO_DATE
		     , EDU_TIME
		     , EDU_NATION
		     , EDU_ORGAN
		     , EDU_AMT
		     , SDC_ACD_YN
		     , LAW_EDU_YN
		     , REPORT_YN
		     , REMARK
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
             , ERP_INPUT_YN
             , COST_POOL_CODE   /* 회계코드 */
             , DRAFT_DATE       /* 승인일자 */
             , EDU_BASIS_NUM    /* 대사우근거번호 */
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     , #{DOC_NUM}
		     , #{EDU_TITLE}
		     , #{EDU_CLASS}
		     , #{EDU_GUBUN1}
		     , #{EDU_GUBUN2}
		     , #{EDU_GUBUN3}
		     , #{EDU_FR_DATE}
		     , #{EDU_TO_DATE}
		     , #{EDU_TIME}
		     , #{EDU_NATION}
		     , #{EDU_ORGAN}
		     , #{EDU_AMT}
		     , #{SDC_ACD_YN}
		     , #{LAW_EDU_YN}
		     , #{REPORT_YN}
		     , #{REMARK}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
             , 'Y'
             <if test="@foren.Ognl@isNotEmpty(COST_POOL_CODE)">
             , #{COST_POOL_CODE}
             </if>
             <if test="@foren.Ognl@isEmpty(COST_POOL_CODE)">
             , @COST_POOL_CODE
             </if>
             
             , GETDATE()
             , @BASIS_NUM      
		     )
	</insert>
	
	<update id="hum304ukrServiceImpl.updateDetail" parameterType="Map">		
        /* 수정 */
        /* hum304ukrServiceImpl.updateDetail */
		
			UPDATE HUM740T
			   SET COMP_CODE      = #{S_COMP_CODE}
			     , PERSON_NUMB    = #{PERSON_NUMB}
			     , DOC_NUM        = #{DOC_NUM}
                 
			     , EDU_TITLE      = #{EDU_TITLE}
                 , EDU_CLASS      = #{EDU_CLASS}
                 , EDU_GUBUN1     = #{EDU_GUBUN1}
                 , EDU_GUBUN2     = #{EDU_GUBUN2}
                 , EDU_GUBUN3     = #{EDU_GUBUN3}
			     , EDU_FR_DATE    = #{EDU_FR_DATE}
                 , EDU_TO_DATE    = #{EDU_TO_DATE}
			     , EDU_TIME       = #{EDU_TIME}
			     , EDU_NATION      = #{EDU_NATION}
			     , EDU_ORGAN      = #{EDU_ORGAN}
			     , EDU_AMT        = #{EDU_AMT}
			     , COST_POOL_CODE      = #{COST_POOL_CODE}
			     , SDC_ACD_YN      = #{SDC_ACD_YN}
			     , LAW_EDU_YN      = #{LAW_EDU_YN}
			     , REPORT_YN      = #{REPORT_YN}
			     , REMARK         = #{REMARK}
			     , UPDATE_DB_USER = #{S_USER_ID}
			     , UPDATE_DB_TIME = GETDATE()
                 , ERP_INPUT_YN   = 'Y'
			     
			 WHERE DOC_ID         = #{DOC_ID}
             <if test="@foren.Ognl@isExists(_parameter, 'EDU_BASIS_NO')">
             AND   EDU_BASIS_NO = #{EDU_BASIS_NO}
             </if>
	</update>
	
	<delete id="hum304ukrServiceImpl.deleteDetail" parameterType="Map">		
        /* 삭제 */
        /* hum304ukrServiceImpl.deleteDetail */
		
		DELETE FROM HUM740T 
		 WHERE DOC_ID = #{DOC_ID}
		 
 		DELETE FROM HEG300T 
		 WHERE BASIS_NUM = #{EDU_BASIS_NUM}
         
	</delete>
	
    
    
	
	<insert id="hum304ukrServiceImpl.insertExcelHum740t_xls" parameterType="Map">		
        /* 엑셀insert */
        /* hum304ukrServiceImpl.insertExcelHum740t_xls */
		INSERT INTO HUM740t_XLS
		     ( _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     , NAME   
             , PERSON_NUMB
             , DOC_NUM
		     , EDU_TITLE	 
		     , EDU_CLASS	 
		     , EDU_GUBUN1	 
		     , EDU_GUBUN2	 
		     , EDU_GUBUN3	 
		     , EDU_FR_DATE   
		     , EDU_TO_DATE	 
		     , EDU_TIME		 
		     , EDU_NATION	 
		     , EDU_ORGAN     
		     , EDU_AMT	     
		     , SDC_ACD_YN	 
		     , LAW_EDU_YN	 
		     , REPORT_YN	 
		     , REMARK	  
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , COMP_CODE     
		     ) 
		VALUES
		     ( #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
		     , #{_EXCEL_ERROR,jdbcType=VARCHAR}
		     , #{NAME}
		     , #{PERSON_NUMB}
		     , #{DOC_NUM}	 
		     , #{EDU_TITLE}	 
		     , #{EDU_CLASS}	 
		     , #{EDU_GUBUN1}	 
		     , #{EDU_GUBUN2}	 
		     , #{EDU_GUBUN3}	 
		     , #{EDU_FR_DATE}   
		     , #{EDU_TO_DATE}	 
		     , #{EDU_TIME}		 
		     , #{EDU_NATION}	 
		     , #{EDU_ORGAN}      
		     , CASE WHEN ISNULL(#{EDU_AMT}, '') = '' THEN 0 ELSE #{EDU_AMT} END 	     
		     , #{SDC_ACD_YN}	 
		     , #{LAW_EDU_YN}	 
		     , #{REPORT_YN}	 
		     , #{REMARK}	 
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>

	<select id="hum304ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 버튼 / 조회 */
		BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */	
		    SELECT A._EXCEL_JOBID
				 , A._EXCEL_ROWNUM
				 , A._EXCEL_HAS_ERROR
				 , A._EXCEL_ERROR_MSG
				 , B.NAME   
				 , A.PERSON_NUMB
                 , A.DOC_NUM
				 , A.EDU_TITLE	
				 , A.EDU_CLASS	
				 , A.EDU_GUBUN1	
				 , A.EDU_GUBUN2	
				 , A.EDU_GUBUN3	
				 , A.EDU_FR_DATE
				 , A.EDU_TO_DATE	
				 , A.EDU_TIME		
				 , A.EDU_NATION	
				 , A.EDU_ORGAN
				 --, A.EDU_GUBUN	
				 --, A.EDU_GRADES	
				 , A.EDU_AMT	    
				 , A.SDC_ACD_YN	
				 , A.LAW_EDU_YN	
				 , A.REPORT_YN	
				 , A.REMARK	
				 --, A.GRADE		
			     , A.INSERT_DB_USER 
			     , A.INSERT_DB_TIME 
			     , A.COMP_CODE 
			  FROM HUM740T_XLS  A
			  
			  LEFT JOIN HUM100T B   ON B.COMP_CODE = #{S_COMP_CODE}
			  					   --AND A.NAME      = B.NAME
			  					   AND A.PERSON_NUMB      = B.PERSON_NUMB
			  					   
			  					   
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		  	ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	END
	</select>

	<update id="excelValidate" >	/* 엑셀validation */
		
	UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN 
										--A.NAME   		IS NULL 	   OR		-- 성명
										A.PERSON_NUMB   IS NULL 	   OR		-- 사번
										A.EDU_TITLE     IS NULL 	   OR		-- 교육명
										A.EDU_FR_DATE   IS NULL 	   OR		-- 교육시작일
										A.EDU_TO_DATE   IS NULL  THEN 'Y'		-- 교육종료일
										
							  	   ELSE A._EXCEL_HAS_ERROR 				    	-- 필수값 체크
						      	 END),
			
			
	
						     
			A._EXCEL_ERROR_MSG = (CASE WHEN  
                                             --A.NAME   	 IS NULL 	    OR
                                             A.PERSON_NUMB   IS NULL 	    OR
											 A.EDU_TITLE     IS NULL 	    OR
										     A.EDU_FR_DATE   IS NULL        OR
										     A.EDU_TO_DATE   IS NULL  THEN '필수입력 값을 확인 해주세요.'
							  	   	   ELSE  A._EXCEL_ERROR_MSG 
						      	 END)
								 
	FROM HUM740T_XLS A 	
	
	
						
	UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN 
										18891231 &gt; A.EDU_FR_DATE   OR 
										18891231 &gt; A.EDU_TO_DATE   OR
										30000101 &lt; A.EDU_FR_DATE   OR
										30000101 &lt; A.EDU_TO_DATE   THEN 'Y'	-- 교육시작일 / 교육종료일이 1900~2999 만 설정하게 함
							  	   ELSE A._EXCEL_HAS_ERROR 				    	-- 필수값 체크
						      	 END),
			
			
	
						     
			A._EXCEL_ERROR_MSG = (CASE WHEN  
										18891231 &gt; A.EDU_FR_DATE   OR 
										18891231 &gt; A.EDU_TO_DATE   OR
										30000101 &lt; A.EDU_FR_DATE   OR
										30000101 &lt; A.EDU_TO_DATE   THEN '연도는 (1900 ~ 2999) 년 범위내의 값만 입력 할 수 있습니다.'
							  	   ELSE A._EXCEL_ERROR_MSG 
						      	 END)
								 
	FROM HUM740T_XLS A 
	
	UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN 
                                        --B.NAME   IS NULL THEN 'Y'		-- HUM100 사번 체크
                                        B.PERSON_NUMB   IS NULL THEN 'Y'		-- HUM100 사번 체크
							  	   ELSE A._EXCEL_HAS_ERROR 				    -- 필수값 체크
						      	 END),
			
			
	
						     
			A._EXCEL_ERROR_MSG = (CASE WHEN  
										--B.NAME   IS NULL  THEN '인사정보에 없는 성명이 존재합니다.'
										B.PERSON_NUMB   IS NULL  THEN '인사정보에 없는 사번이 존재합니다.'
							  	   ELSE A._EXCEL_ERROR_MSG 
						      	 END)
								 
	FROM HUM740T_XLS A 
	
	LEFT JOIN HUM100T B  ON B.COMP_CODE = #{S_COMP_CODE}
						--AND B.NAME  = A.NAME
						AND B.PERSON_NUMB  = A.PERSON_NUMB
						
	
	
	</update>
	
	
	
	<select id="hum304ukrServiceImpl.selectExcelUploadApply" parameterType="Map" resultType="rMap">	/* 엑셀업로드 버튼 / 적용 */
		BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */	
		    SELECT A._EXCEL_JOBID
				 , A._EXCEL_ROWNUM
				 , A._EXCEL_HAS_ERROR
				 , A._EXCEL_ERROR_MSG
				 , B.NAME   
				 , A.PERSON_NUMB
				 , B.DIV_CODE
				 , B.DEPT_NAME
				 , B.POST_CODE
				 , B.ABIL_CODE
				 , A.DOC_NUM	
				 , A.EDU_TITLE	
				 , A.EDU_CLASS	
				 , A.EDU_GUBUN1	
				 , A.EDU_GUBUN2	
				 , A.EDU_GUBUN3	
				 , A.EDU_FR_DATE
				 , A.EDU_TO_DATE	
				 , A.EDU_TIME		
				 , A.EDU_NATION	
				 , A.EDU_ORGAN
				 --, A.EDU_GUBUN	
				 --, A.EDU_GRADES	
				 , A.EDU_AMT
                 , E.COST_POOL_NAME	    
				 , A.SDC_ACD_YN	
				 , A.LAW_EDU_YN	
				 , A.REPORT_YN	
				 , A.REMARK	
				 --, A.GRADE		
			     , A.INSERT_DB_USER 
			     , A.INSERT_DB_TIME 
			     , A.COMP_CODE 
			     , '9'	AS DRAFT_STATUS
			  FROM HUM740T_XLS A
			  LEFT JOIN HUM100T B   ON B.COMP_CODE = #{S_COMP_CODE}
			  					   --AND A.NAME      = B.NAME
			  					   AND A.PERSON_NUMB      = B.PERSON_NUMB
			  LEFT JOIN          CBM700T     E WITH(NOLOCK)  ON B.COMP_CODE     = E.COMP_CODE
                                                                   AND B.COST_KIND     = E.COST_POOL_CODE
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		  	ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	END
	</select>
	
	
	<select id="hum304ukrServiceImpl.selectListProcedure" parameterType="Map" resultType="rMap">
		/* hum304ukrServiceImpl.selectListProcedure */
		
		DECLARE @COMP_CODE		NVARCHAR(08),
				@DEPT_CODE		NVARCHAR(1000),
				@PERSON_NUMB	NVARCHAR(10),
				@EDU_CLASS		NVARCHAR(02),
				@EDU_FR_DATE	NVARCHAR(08),
				@EDU_TO_DATE	NVARCHAR(08),
				@DRAFT_FR_DATE	NVARCHAR(08),
				@DRAFT_TO_DATE	NVARCHAR(08),
				@DRAFT_STATUS	NVARCHAR(01),
				@RETR_YN		NVARCHAR(01),
				@ERR_DESC		NVARCHAR(1000)
			
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DEPT_CODE		= #{DEPT_LIST}
		SET @PERSON_NUMB	= #{PERSON_NUMB}
		SET @EDU_CLASS		= #{EDU_CLASS}
		SET @EDU_FR_DATE	= #{EDU_FR_DATE}
		SET @EDU_TO_DATE	= #{EDU_TO_DATE}
		SET @DRAFT_FR_DATE	= #{DRAFT_FR_DATE}
		SET @DRAFT_TO_DATE	= #{DRAFT_TO_DATE}
		SET @DRAFT_STATUS	= #{DRAFT_STATUS}
		SET @RETR_YN		= #{RDO_TYPE}
			
		EXEC USP_HUMAN_HUM304UKR_GET_DATA @COMP_CODE
										, @DEPT_CODE
										, @PERSON_NUMB
										, @EDU_CLASS
										, @EDU_FR_DATE
										, @EDU_TO_DATE
										, @DRAFT_FR_DATE
										, @DRAFT_TO_DATE
										, @DRAFT_STATUS
										, @RETR_YN
										, @ERR_DESC		OUTPUT
			
		SELECT @ERR_DESC	AS ERROR_DESC 
				
	</select>
	
	<select id="hum304ukrServiceImpl.saveProcedure" parameterType="Map" resultType="rMap">
		/* hum304ukrServiceImpl.saveProcedure */
		
		DECLARE	@PROC_TYPE			NVARCHAR(01)
			  , @DOC_ID				NVARCHAR(10)
			  , @COMP_CODE			NVARCHAR(08)
			  , @PERSON_NUMB		NVARCHAR(10)
			  , @EDU_TITLE			NVARCHAR(100)
			  , @EDU_FR_DATE		NVARCHAR(08)
			  , @EDU_TO_DATE		NVARCHAR(08)
			  , @EDU_ORGAN			NVARCHAR(200)
			  , @EDU_NATION			NVARCHAR(04)
			  , @EDU_AMT			NUMERIC(30, 6)
			  , @REPORT_YN			NVARCHAR(02)
			  , @EDU_TIME			NUMERIC(10, 2)
			  , @EDU_BASIS_NUM		NVARCHAR(80)
			  , @REMARK				NVARCHAR(400)
			  , @EDU_GUBUN1			NVARCHAR(20)
			  , @EDU_GUBUN2			NVARCHAR(20)
			  , @EDU_GUBUN3			NVARCHAR(20)
			  , @LAW_EDU_YN			NVARCHAR(02)
			  , @SDC_ACD_YN			NVARCHAR(02)
			  , @DOC_NUM			NVARCHAR(40)
			  , @EDU_CLASS			NVARCHAR(20)
			  , @ERP_INPUT_YN		NVARCHAR(20)
			  , @COST_POOL_CODE		NVARCHAR(20)
			  , @DRAFT_DATE			NVARCHAR(08)
			  , @DRAFT_STATUS		NVARCHAR(08)
			  , @USER_ID			NVARCHAR(20)
			  , @ERR_DESC			NVARCHAR(1000)
		
		SET @PROC_TYPE			= #{PROC_TYPE}
		SET @DOC_ID				= #{DOC_ID}
		SET @COMP_CODE			= #{S_COMP_CODE}
		SET @PERSON_NUMB		= #{PERSON_NUMB}
		SET @EDU_TITLE			= #{EDU_TITLE}
		SET @EDU_FR_DATE		= #{EDU_FR_DATE}
		SET @EDU_TO_DATE		= #{EDU_TO_DATE}
		SET @EDU_ORGAN			= #{EDU_ORGAN}
		SET @EDU_NATION			= #{EDU_NATION}
		SET @EDU_AMT			= ${EDU_AMT}
		SET @REPORT_YN			= #{REPORT_YN}
		SET @EDU_TIME			= ${EDU_TIME}
		SET @EDU_BASIS_NUM		= #{EDU_BASIS_NUM}
		SET @REMARK				= #{REMARK}
		SET @EDU_GUBUN1			= #{EDU_GUBUN1}
		SET @EDU_GUBUN2			= #{EDU_GUBUN2}
		SET @EDU_GUBUN3			= #{EDU_GUBUN3}
		SET @LAW_EDU_YN			= #{LAW_EDU_YN}
		SET @SDC_ACD_YN			= #{SDC_ACD_YN}
		SET @DOC_NUM			= #{DOC_NUM}
		SET @EDU_CLASS			= #{EDU_CLASS}
		SET @ERP_INPUT_YN		= #{ERP_INPUT_YN}
		SET @COST_POOL_CODE		= #{COST_POOL_CODE}
		SET @DRAFT_DATE			= REPLACE(#{DRAFT_DATE}, '.', '')
		SET @DRAFT_STATUS		= #{DRAFT_STATUS}
		SET @USER_ID			= #{S_USER_ID}
		
		EXEC USP_HUMAN_HUM304UKR_SET_DATA @PROC_TYPE
										, @DOC_ID
										, @COMP_CODE
										, @PERSON_NUMB
										, @EDU_TITLE
										, @EDU_FR_DATE
										, @EDU_TO_DATE
										, @EDU_ORGAN
										, @EDU_NATION
										, @EDU_AMT
										, @REPORT_YN
										, @EDU_TIME
										, @EDU_BASIS_NUM
										, @REMARK
										, @EDU_GUBUN1
										, @EDU_GUBUN2
										, @EDU_GUBUN3
										, @LAW_EDU_YN
										, @SDC_ACD_YN
										, @DOC_NUM
										, @EDU_CLASS
										, @ERP_INPUT_YN
										, @COST_POOL_CODE
										, @DRAFT_DATE
										, @DRAFT_STATUS
										, @USER_ID
										, @ERR_DESC		OUTPUT
		
		SELECT @ERR_DESC	AS ERROR_DESC
				
	</select>
	
</mapper>