<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum976rkrServiceImpl">
	<select id="hum976rkrServiceImpl.fnHum970ini" parameterType="Map" resultType="rMap">
		--hum976rkr.Chum976rkr[fnhum970ini] Query02 증명번호 호출
		<!-- SELECT ISNULL(MAX(ISNULL(CERTI_NUM,0)), 0) AS CERTI_NUM
		  FROM HUM970T
		 WHERE COMP_CODE = #{S_COMP_CODE} -->

        SELECT UNILITE.fnGetProofDocAutoNum(#{S_COMP_CODE}, #{CERTI_TYPE})AS CERTI_NUM
         
	</select>	
	<!-- <select id="fnHum970nQ" parameterType="Map" resultType="rMap" >	 -->
    <select id="hum976rkrServiceImpl.PrintList1" parameterType="Map" resultType="rMap" >
	   <if test="DOC_KIND != &quot;3&quot;">	            
            --hum976rkr.CHum976rkr[PrintList1].Query02
            SELECT A.KOR_ADDR                                                                 -- 주소
                 , A.ZIP_CODE                                                                 -- 우편번호
                 , CASE WHEN (A.NAME_CHI IS NULL OR A.NAME_CHI = '') THEN A.NAME
                        ELSE A.NAME + ' (' + A.NAME_CHI + ')'
                    END                 AS NAME                                               -- 성명
                 <if test="ENCRYPT == &quot;Y&quot;"> -- 주민번호 암호화    
                 , unilite.fnCipherDecrypt(A.REPRE_NUM, 'R')                 AS REPRE_NUM     -- 암호화된 주민번호 
                </if>
                <if test="ENCRYPT != &quot;Y&quot;">  -- 주민번호 암호화 X        
                     , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A')             AS REPRE_NUM     -- 암호화하지 않은 주민번호 
                </if>    
                 , A.DEPT_NAME                                                                -- 부서명
                 , M2.CODE_NAME                                              AS POST_NAME     -- 직급 
                 , (CASE WHEN A.ORI_JOIN_DATE != '00000000' AND A.ORI_JOIN_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ORI_JOIN_DATE)
                         ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, A.JOIN_DATE)
                         END)                                                 AS JOIN_DATE    -- 입사일
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ANN_FR_DATE})     AS ANN_FR_DATE  -- 근무시작일
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ANN_TO_DATE})     AS ANN_TO_DATE  -- 근무종료일
                <if test="DOC_KIND == &quot;1&quot;">
                -- 재직증명서           
                     , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ISS_DATE})    AS CURR_DATE
                     , NULL                                                   AS RETR_RESN
                </if>
                <if test="DOC_KIND == &quot;2&quot;">    
                -- 퇴직증명서
                     , (CASE WHEN A.RETR_DATE != '00000000' AND A.RETR_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.RETR_DATE) 
                             ELSE ''
                             END)                                             AS CURR_DATE
                     , A.RETR_RESN                                                            -- 퇴직사유
                </if>                                                                       
                <if test="DOC_KIND != &quot;1&quot;"> -- 1or2 가 아닐때
                -- 경력증명서
                     , (CASE WHEN A.RETR_DATE != '00000000' AND A.RETR_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.RETR_DATE) 
                             ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ISS_DATE})
                             END)                                             AS CURR_DATE
                     , NULL                                                   AS RETR_RESN
                </if>


                 , A.RETR_DATE                                                                 -- 퇴사일
                 , REPLACE(unilite.fnHumanDateDiff(#{ANN_FR_DATE},#{ANN_TO_DATE},'LONG_TOT_ALL'),'.','') AS LONG_TOT_ALL
                 , M1.COMP_NAME                                               AS DIV_NAME      -- 회사명
                 , M3.ADDR				 	 	                              AS DIV_KOR_ADDR  -- 회사주소
                 , M1.REPRE_NAME                                                               -- 대표자명
                 , A.PERSON_NUMB                                                               -- 사번
                 
              FROM HUM100T A WITH (NOLOCK)
                  LEFT  JOIN BOR100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                  LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE = A.COMP_CODE
                                                     AND M2.SUB_CODE  = A.POST_CODE
                                                     AND M2.MAIN_CODE = 'H005'
				  LEFT  JOIN BOR120T M3 WITH (NOLOCK) ON M3.COMP_CODE = M1.COMP_CODE
					 								 AND M3.DIV_CODE  = #{DIV_CODE}
             WHERE A.COMP_CODE = #{S_COMP_CODE}
             AND A.PERSON_NUMB = #{PERSON_NUMB}
 
	   </if>     
	</select>
	
	<insert id="hum976rkrServiceImpl.insertDetail" parameterType="Map">
	--hum976rkr.CHum976rkr[fnHum970Save] Query02
        INSERT INTO HUM970T
             ( COMP_CODE
             , CERTI_NUM
             , CERTI_TYPE
             , CERTI_LANGU
             , CERTI_PRINT_USER
             , CERTI_PRINT_DATE
             , REMARK)
        VALUES
             ( #{S_COMP_CODE}
             , #{PROF_NUM}
             , #{optPrint}
             , #{bParam4}
             , #{PERSON_NUMB}
             , #{ISS_DATE}
             , #{USE} )
	</insert>	
	<select id="hum976rkrServiceImpl.selectProfNum" parameterType="Map" resultType="rMap">
        SELECT TOP 1 *
          FROM HUM970T
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND CERTI_NUM  = #{PROF_NUM}
    </select>   
    
	<select id="hum976rkrServiceImpl.selectPrintMaster" parameterType="Map" resultType="rMap" >
		<if test="DOC_KIND != &quot;3&quot;">
			--hum976rkr.CHum976rkr[PrintList1].Query02
			SELECT A.KOR_ADDR                                                                            -- 주소
			     , A.ZIP_CODE                                                                            -- 우편번호
				 , CASE WHEN (A.NAME_CHI IS NULL OR A.NAME_CHI = '') THEN A.NAME
						ELSE A.NAME + ' (' + A.NAME_CHI + ')'
				   END																	AS NAME          -- 성명
			<if test="ENCRYPT == &quot;Y&quot;">
				 , unilite.fnCipherDecrypt(A.REPRE_NUM, 'R')							AS REPRE_NUM     -- 암호화된 주민번호 
			</if>
			<if test="ENCRYPT != &quot;Y&quot;">
				 , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A')							AS REPRE_NUM     -- 암호화 하지 않은 주민번호 
			</if>
				 , A.DEPT_NAME                                                                           -- 부서명
				 , M2.CODE_NAME															AS POST_NAME     -- 직급 
				 , (CASE WHEN A.ORI_JOIN_DATE != '00000000' AND A.ORI_JOIN_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ORI_JOIN_DATE)
						 ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, A.JOIN_DATE)
					END)																AS JOIN_DATE     -- 입사일
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ANN_FR_DATE})               AS ANN_FR_DATE   -- 근무시작일
                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ANN_TO_DATE})               AS ANN_TO_DATE   -- 근무종료일
			<if test="DOC_KIND == &quot;1&quot;">
				 -- 재직증명서           
				 , uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ISS_DATE})					AS CURR_DATE
				 , NULL                                                                 AS RETR_RESN
			</if>
			<if test="DOC_KIND == &quot;2&quot;">
				 -- 퇴직증명서
				 , (CASE WHEN A.RETR_DATE != '00000000' AND A.RETR_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.RETR_DATE) 
						 ELSE ''
					END)																AS CURR_DATE 
			     , M4.CODE_NAME                                                         AS RETR_RESN     -- 퇴직사유
			</if>                                                                       
			<if test="DOC_KIND == &quot;0&quot;">
				 -- 경력증명서
				 , (CASE WHEN A.RETR_DATE != '00000000' AND A.RETR_DATE != '' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.RETR_DATE) 
						 ELSE uniLITE.fnGetUserDateComp(A.COMP_CODE, #{ISS_DATE})
					END)																AS CURR_DATE
			     , NULL                                                                 AS RETR_RESN
			</if>
				 , A.RETR_DATE                                                                           -- 퇴사일
				 , REPLACE(unilite.fnHumanDateDiff(#{ANN_FR_DATE},#{ANN_TO_DATE},'LONG_TOT_ALL'),'.','') AS LONG_TOT_ALL
				 , M1.COMP_NAME															AS DIV_NAME      -- 회사명
				 , M3.ADDR						                                        AS DIV_KOR_ADDR  -- 회사주소
				 , M1.REPRE_NAME                                                                         -- 대표자명
				 , A.PERSON_NUMB                                                                         -- 사번
				 , R.number																AS CURR_SEQ
				 , ${SEQ_TO}															AS MAX_SEQ
				 , CONVERT(date,GETDATE())                                              AS TODAY         -- 현재일자
			  FROM HUM100T A WITH (NOLOCK)
					LEFT  JOIN BOR100T M1 WITH (NOLOCK) ON	M1.COMP_CODE = A.COMP_CODE
					LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON	M2.COMP_CODE = A.COMP_CODE
														AND M2.SUB_CODE  = A.POST_CODE
														AND M2.MAIN_CODE = 'H005'
				    LEFT  JOIN BOR120T M3 WITH (NOLOCK) ON M3.COMP_CODE = M1.COMP_CODE
					 								   AND M3.DIV_CODE  = #{DIV_CODE}
                    LEFT  JOIN BSA100T M4 WITH (NOLOCK) ON	M4.COMP_CODE = A.COMP_CODE
														AND M4.SUB_CODE  = A.RETR_RESN
														AND M4.MAIN_CODE = 'H023'
					LEFT OUTER JOIN master..spt_values R
									 ON R.type	= 'P'
									AND R.number BETWEEN 1 AND ${SEQ_TO}
			 WHERE A.COMP_CODE		= #{S_COMP_CODE}
			   AND A.PERSON_NUMB	= #{PERSON_NUMB}
		</if>
	</select>
	
</mapper>