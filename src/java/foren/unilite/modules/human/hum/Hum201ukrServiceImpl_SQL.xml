<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum201ukrServiceImpl">

	<select id="hum201ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">
		/* hum201ukrServiceImpl.selectList */
        SELECT A.COMP_CODE
			 , A.PERSON_NUMB
			 , B.NAME
			 , B.DEPT_CODE
			 , B.DEPT_NAME
			 , A.ANNOUNCE_DATE
			 , A.ANNOUNCE_CODE

             , A.RETR_RESN              /*  퇴직사유    */

             , A.APPLY_YEAR
			 , A.APPLY_YN
			 , A.BE_DIV_CODE
			 , A.AF_DIV_CODE
			 , A.BE_DEPT_CODE
			 , A.BE_DEPT_NAME
			 , A.AF_DEPT_CODE
			 , A.AF_DEPT_NAME
			 , A.BE_PAY_CODE
			 , A.AF_PAY_CODE
			 , A.AFFIL_CODE
			 , A.AF_AFFIL_CODE
			 , A.POST_CODE
			 , A.ABIL_CODE
             , A.AF_POST_CODE
             , A.AF_ABIL_CODE
			 , A.PAY_GRADE_01
             , C.CODE_NAME AS PAY_GRADE_01_NAME
			 , A.PAY_GRADE_02
			 , A.PAY_GRADE_03
			 , A.PAY_GRADE_04
			 , A.PAY_GRADE_05
			 , A.AF_PAY_GRADE_01
             , D.CODE_NAME AS AF_PAY_GRADE_01_NAME
			 , A.AF_PAY_GRADE_02
			 , A.AF_PAY_GRADE_03
			 , A.AF_PAY_GRADE_04
			 , A.AF_PAY_GRADE_05

             , A.BE_PROG_WORK_CODE
             , A.BE_PROG_WORK_NAME
             , A.AF_PROG_WORK_CODE
             , A.AF_PROG_WORK_NAME

			 , A.ANNOUNCE_REASON
			 , A.BE_WAGES_AMT_01
			 , A.BE_WAGES_AMT_02
			 , A.BE_WAGES_AMT_03
			 , A.BE_WAGES_AMT_04
			 , A.BE_WAGES_AMT_05
			 , A.BE_WAGES_AMT_06
			 , A.BE_WAGES_AMT_07
			 , A.BE_WAGES_AMT_08
			 , A.BE_WAGES_AMT_09
			 , A.BE_WAGES_AMT_10
			 , A.BE_WAGES_AMT_11
			 , A.BE_WAGES_AMT_12
			 , A.BE_WAGES_AMT_13
			 , A.WAGES_AMT_01
			 , A.WAGES_AMT_02
			 , A.WAGES_AMT_03
			 , A.WAGES_AMT_04
			 , A.WAGES_AMT_05
			 , A.WAGES_AMT_06
			 , A.WAGES_AMT_07
			 , A.WAGES_AMT_08
			 , A.WAGES_AMT_09
			 , A.WAGES_AMT_10
			 , A.WAGES_AMT_11
			 , A.WAGES_AMT_12
			 , A.WAGES_AMT_13

			 , A.BE_EMPLOY_TYPE
			 , A.AF_EMPLOY_TYPE
			 , A.BE_PAY_CODE
			 , A.AF_PAY_CODE

          FROM       HUM760T A
          INNER JOIN HUM100T B  ON B.COMP_CODE   = A.COMP_CODE
                               AND B.PERSON_NUMB = A.PERSON_NUMB

           LEFT JOIN BSA100T C  ON C.COMP_CODE   = A.COMP_CODE
                               AND C.MAIN_CODE   = 'HX09'
                               AND C.SUB_CODE    = A.PAY_GRADE_01

           LEFT JOIN BSA100T D  ON D.COMP_CODE   = A.COMP_CODE
                               AND D.MAIN_CODE   = 'HX09'
                               AND D.SUB_CODE    = A.AF_PAY_GRADE_01

         WHERE A.COMP_CODE         = #{S_COMP_CODE}
           AND A.ANNOUNCE_DATE &gt;= #{FR_ANNOUNCE_DATE}
           AND A.ANNOUNCE_DATE &lt;= #{TO_ANNOUNCE_DATE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND B.DIV_CODE IN
                <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                 #{item}
                </foreach>
        </if>
		<if test="@foren.Ognl@isNotEmpty(DEPTS)">
		   AND B.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ANNOUNCE_CODE)">
		   AND A.ANNOUNCE_CODE = #{ANNOUNCE_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RETR_RESN)">
		   AND A.RETR_RESN = #{RETR_RESN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ANNOUNCE_CODE)">
		   AND A.ANNOUNCE_CODE = #{ANNOUNCE_CODE}
		</if>
		
	</select>

	<select id="hum201ukrServiceImpl.getWages" parameterType="rMap" resultType="rMap">
		/* hum201ukrServiceImpl.getWages */
        SELECT ISNULL(A.WAGES_AMT_01, 0)      AS BE_WAGES_AMT_01
			 , ISNULL(A.WAGES_AMT_02, 0)      AS BE_WAGES_AMT_02
			 , ISNULL(A.WAGES_AMT_03, 0)      AS BE_WAGES_AMT_03
			 , ISNULL(A.WAGES_AMT_04, 0)      AS BE_WAGES_AMT_04
			 , ISNULL(A.WAGES_AMT_05, 0)      AS BE_WAGES_AMT_05
			 , ISNULL(A.WAGES_AMT_06, 0)      AS BE_WAGES_AMT_06
			 , ISNULL(A.WAGES_AMT_07, 0)      AS BE_WAGES_AMT_07
			 , ISNULL(A.WAGES_AMT_08, 0)      AS BE_WAGES_AMT_08
			 , ISNULL(A.WAGES_AMT_09, 0)      AS BE_WAGES_AMT_09
			 , ISNULL(A.WAGES_AMT_10, 0)      AS BE_WAGES_AMT_10
			 , ISNULL(A.WAGES_AMT_11, 0)      AS BE_WAGES_AMT_11
			 , ISNULL(A.WAGES_AMT_12, 0)      AS BE_WAGES_AMT_12
			 , ISNULL(A.WAGES_AMT_13, 0)      AS BE_WAGES_AMT_13
          FROM       HUM760T A
         WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.PERSON_NUMB	= #{PERSON_NUMB}
		   AND A.APPLY_YN		= 'Y'
		   AND A.ANNOUNCE_DATE	= (SELECT MAX(ANNOUNCE_DATE)
		   							 FROM HUM760T
									WHERE COMP_CODE		= #{S_COMP_CODE}
									  AND PERSON_NUMB	= #{PERSON_NUMB}
		   							  AND APPLY_YN		= 'Y')
	</select>



	<insert id="hum201ukrServiceImpl.insertList"  parameterType="rMap">
		/* hum201ukrServiceImpl.insertList */
		INSERT INTO HUM760T
			(
					  COMP_CODE
					, PERSON_NUMB
					, ANNOUNCE_DATE
					, ANNOUNCE_CODE

                    , RETR_RESN         /* 퇴직사유   */

					, APPLY_YN
                    , APPLY_YEAR
					, BE_DIV_CODE
					, AF_DIV_CODE
					, BE_DEPT_CODE
					, BE_DEPT_NAME
					, AF_DEPT_CODE
					, AF_DEPT_NAME
					, BE_PAY_CODE
                    , AF_PAY_CODE
                    , AFFIL_CODE
                    , AF_AFFIL_CODE
					, POST_CODE
					, ABIL_CODE
                    , AF_POST_CODE
                    , AF_ABIL_CODE
					, PAY_GRADE_01
					, PAY_GRADE_02
					, PAY_GRADE_03
					, PAY_GRADE_04
					, PAY_GRADE_05
					, AF_PAY_GRADE_01
					, AF_PAY_GRADE_02
					, AF_PAY_GRADE_03
					, AF_PAY_GRADE_04
					, AF_PAY_GRADE_05
					, ANNOUNCE_REASON
					, BE_WAGES_AMT_01
					, BE_WAGES_AMT_02
					, BE_WAGES_AMT_03
					, BE_WAGES_AMT_04
					, BE_WAGES_AMT_05
					, BE_WAGES_AMT_06
					, BE_WAGES_AMT_07
					, BE_WAGES_AMT_08
					, BE_WAGES_AMT_09
					, BE_WAGES_AMT_10
					, BE_WAGES_AMT_11
					, BE_WAGES_AMT_12
					, BE_WAGES_AMT_13
					, WAGES_AMT_01
					, WAGES_AMT_02
					, WAGES_AMT_03
					, WAGES_AMT_04
					, WAGES_AMT_05
					, WAGES_AMT_06
					, WAGES_AMT_07
					, WAGES_AMT_08
					, WAGES_AMT_09
					, WAGES_AMT_10
					, WAGES_AMT_11
					, WAGES_AMT_12
					, WAGES_AMT_13

                    , BE_PROG_WORK_CODE
                    , BE_PROG_WORK_NAME
                    , AF_PROG_WORK_CODE
                    , AF_PROG_WORK_NAME

			 		, BE_EMPLOY_TYPE
			 		, AF_EMPLOY_TYPE


					, INSERT_DB_USER
					, INSERT_DB_TIME
					, UPDATE_DB_USER
					, UPDATE_DB_TIME
			)
			VALUES (
					  #{S_COMP_CODE}
					, #{PERSON_NUMB}
					, #{ANNOUNCE_DATE}
					, #{ANNOUNCE_CODE}

                    , #{RETR_RESN}

					, #{APPLY_YN}
                    , ISNULL(#{APPLY_YEAR},0)
					, #{BE_DIV_CODE}
					, #{AF_DIV_CODE}
					, #{BE_DEPT_CODE}
					, #{BE_DEPT_NAME}
					, #{AF_DEPT_CODE}
					, #{AF_DEPT_NAME}
					, #{BE_PAY_CODE}
                    , #{AF_PAY_CODE}
                    , #{AFFIL_CODE}
                    , #{AF_AFFIL_CODE}
					, #{POST_CODE}
					, #{ABIL_CODE}
                    , #{AF_POST_CODE}
                    , #{AF_ABIL_CODE}
					, #{PAY_GRADE_01}
					, #{PAY_GRADE_02}
					, #{PAY_GRADE_03}
					, #{PAY_GRADE_04}
					, #{PAY_GRADE_05}
					, #{AF_PAY_GRADE_01}
					, #{AF_PAY_GRADE_02}
					, #{AF_PAY_GRADE_03}
					, #{AF_PAY_GRADE_04}
					, #{AF_PAY_GRADE_05}
					, #{ANNOUNCE_REASON}
					, #{BE_WAGES_AMT_01}
					, #{BE_WAGES_AMT_02}
					, #{BE_WAGES_AMT_03}
					, #{BE_WAGES_AMT_04}
					, #{BE_WAGES_AMT_05}
					, #{BE_WAGES_AMT_06}
					, #{BE_WAGES_AMT_07}
					, #{BE_WAGES_AMT_08}
					, #{BE_WAGES_AMT_09}
					, #{BE_WAGES_AMT_10}
					, #{BE_WAGES_AMT_11}
					, #{BE_WAGES_AMT_12}
					, #{BE_WAGES_AMT_13}
					, #{WAGES_AMT_01}
					, #{WAGES_AMT_02}
					, #{WAGES_AMT_03}
					, #{WAGES_AMT_04}
					, #{WAGES_AMT_05}
					, #{WAGES_AMT_06}
					, #{WAGES_AMT_07}
					, #{WAGES_AMT_08}
					, #{WAGES_AMT_09}
					, #{WAGES_AMT_10}
					, #{WAGES_AMT_11}
					, #{WAGES_AMT_12}
					, #{WAGES_AMT_13}

                    , #{BE_PROG_WORK_CODE}
                    , #{BE_PROG_WORK_NAME}
                    , #{AF_PROG_WORK_CODE}
                    , #{AF_PROG_WORK_NAME}

                    , '1'
			 		, '1'


					, #{S_USER_ID}
					, GETDATE()
					, #{S_USER_ID}
					, GETDATE()
			)
	</insert>

	<update id="hum201ukrServiceImpl.updateList"  parameterType="rMap">
		/* hum201ukrServiceImpl.updateList */
		UPDATE HUM760T
           SET
               AF_DIV_CODE      = #{AF_DIV_CODE}
             , AF_DEPT_CODE     = #{AF_DEPT_CODE}
             , AF_DEPT_NAME     = #{AF_DEPT_NAME}
             , RETR_RESN        = #{RETR_RESN}
             , APPLY_YEAR       = #{APPLY_YEAR}
             , AF_POST_CODE     = #{AF_POST_CODE}
             , AF_ABIL_CODE     = #{AF_ABIL_CODE}
             , AF_PAY_CODE      = #{AF_PAY_CODE}
             , AF_AFFIL_CODE    = #{AF_AFFIL_CODE}
             , AF_PAY_GRADE_01  = #{AF_PAY_GRADE_01}
             , AF_PAY_GRADE_02  = #{AF_PAY_GRADE_02}
             , AF_PAY_GRADE_03  = #{AF_PAY_GRADE_03}
             , AF_PAY_GRADE_04  = #{AF_PAY_GRADE_04}
             , AF_PAY_GRADE_05  = #{AF_PAY_GRADE_05}
             , ANNOUNCE_REASON  = #{ANNOUNCE_REASON}
             , WAGES_AMT_01		= #{WAGES_AMT_01}
             , WAGES_AMT_02		= #{WAGES_AMT_02}
             , WAGES_AMT_03		= #{WAGES_AMT_03}
             , WAGES_AMT_04		= #{WAGES_AMT_04}
             , WAGES_AMT_05		= #{WAGES_AMT_05}
             , WAGES_AMT_06		= #{WAGES_AMT_06}
             , WAGES_AMT_07		= #{WAGES_AMT_07}
             , WAGES_AMT_08		= #{WAGES_AMT_08}
             , WAGES_AMT_09		= #{WAGES_AMT_09}
             , WAGES_AMT_10		= #{WAGES_AMT_10}
             , WAGES_AMT_11		= #{WAGES_AMT_11}
             , WAGES_AMT_12		= #{WAGES_AMT_12}
             , WAGES_AMT_13     = #{WAGES_AMT_13}

             , AF_PROG_WORK_CODE = #{AF_PROG_WORK_CODE}
             , AF_PROG_WORK_NAME = #{AF_PROG_WORK_NAME}
             , AF_EMPLOY_TYPE	 = '1'


             , UPDATE_DB_USER	= #{S_USER_ID}
             , UPDATE_DB_TIME	= GETDATE()
         WHERE COMP_CODE		= #{S_COMP_CODE}
           AND PERSON_NUMB		= #{PERSON_NUMB}
           AND ANNOUNCE_DATE	= #{ANNOUNCE_DATE}
           AND ANNOUNCE_CODE	= #{ANNOUNCE_CODE}
	</update>

	<delete id="hum201ukrServiceImpl.deleteList"  parameterType="rMap">
		/* hum201ukrServiceImpl.deleteList */
		DELETE HUM760T
         WHERE COMP_CODE		= #{S_COMP_CODE}
           AND PERSON_NUMB		= #{PERSON_NUMB}
           AND ANNOUNCE_DATE	= #{ANNOUNCE_DATE}
           AND ANNOUNCE_CODE	= #{ANNOUNCE_CODE}
	</delete>



	<!-- CALL SP -->
	<insert id="hum201ukrServiceImpl.insertLogTable" parameterType="Map">
	    INSERT INTO L_HUM760T
	           (
	             KEY_VALUE
       		   , COMP_CODE
	           , PERSON_NUMB
			   , ANNOUNCE_DATE
			   , ANNOUNCE_CODE
			   , WORK_GB
	           , INSERT_DB_USER
	           , INSERT_DB_TIME
	           )
	     VALUES
	           (
	             #{KEY_VALUE}
	           , #{S_COMP_CODE}
	           , #{PERSON_NUMB}
			   , #{ANNOUNCE_DATE}
			   , #{ANNOUNCE_CODE}
			   , #{WORK_GB}
			   , #{S_USER_ID}
	           , GETDATE()
	           )
	</insert>




    <!-- 일괄반영 SP호출 -->
    <update id="hum201ukrServiceImpl.runAutoSlip" parameterType="Map" statementType="CALLABLE">
        {call USP_HUMAN_HUM201TUKR_fnApply (
            #{COMP_CODE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 법인코드
            #{PERSON_NUMB,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 사원코드
            #{ANNOUNCE_DATE,   mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 발령일자
            #{ANNOUNCE_CODE,   mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 발령코드
            #{WORK_GUBUN,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 작업구분(1 : 반영, 2 : 취소)
            #{KEY_VALUE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- KEY 문자열
            #{LOGIN_ID,        mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 작업자ID
            #{LANG_TYPE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 언어구분
            #{ERROR_DESC,      mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}             -- 에러명세
        )}
    </update>

    <!-- 반영취소 SP 호출 -->
    <update id="hum201ukrServiceImpl.cancelSlip" parameterType="Map" statementType="CALLABLE">
        {call USP_HUMAN_HUM201TUKR_fnApply (
            #{COMP_CODE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 법인코드
            #{PERSON_NUMB,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 사원코드
            #{ANNOUNCE_DATE,   mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 발령일자
            #{ANNOUNCE_CODE,   mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 발령코드
            #{WORK_GUBUN,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 작업구분(1 : 반영, 2 : 취소)
            #{KEY_VALUE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- KEY 문자열
            #{LOGIN_ID,        mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 작업자ID
            #{LANG_TYPE,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},            -- 언어구분
            #{ERROR_DESC,      mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}             -- 에러명세
        )}
    </update>
    <select id="hum201ukrServiceImpl.applyYnchk" parameterType="rMap" resultType="Int">
    	 SELECT COUNT(1)
		   FROM  HUM760T
		   WHERE COMP_CODE   = #{COMP_CODE}
		   AND   PERSON_NUMB = #{PERSON_NUMB}
		   AND   APPLY_YN    = 'Y'
		   AND   ANNOUNCE_DATE > #{ANNOUNCE_DATE}
    </select>

</mapper>