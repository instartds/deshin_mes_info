<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum303ukrService">
	<select id="hum303ukrService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	
	
	
	<select id="hum303ukrService.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
	    --hum303ukr.Chum303ukr[fnHum303QStd] Query01
		    BEGIN
		        SET NOCOUNT ON
		        SET ARITHABORT ON
		    
		    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
		        DECLARE         @DateFormat         NVARCHAR(10)
		    
		        SELECT  TOP 1 @DateFormat = CODE_NAME
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE = #{S_COMP_CODE}
		        AND     MAIN_CODE = N'B044'
		        AND     REF_CODE1 = N'Y'
		    
		        SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		    
		    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
		        SELECT 
		                A.COMP_CODE                                                                 AS COMP_CODE
		             ,  B.DIV_CODE                                                                  AS DIV_CODE 
		             ,  B.DEPT_NAME                                                                 AS DEPT_NAME
		             ,  B.POST_CODE                                                                 AS POST_CODE
		             ,  B.NAME                                                                      AS NAME
		             ,  A.PERSON_NUMB                                                               AS PERSON_NUMB
		             ,  unilite.fnCipherDecrypt(A.PASS_NO, 'P')                                     AS PASS_NO
		             ,  A.PASS_KIND                                                                 AS PASS_KIND
		             ,  A.NATION_NAME                                                               AS PASS_NATION_NAME
		             ,  CASE WHEN ISNULL(A.ISSUE_DATE, '') = '' THEN ''
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ISSUE_DATE, 1, 4))
		                                             , 'MM',   SUBSTRING(A.ISSUE_DATE, 5, 2))
		                                             , 'DD',   SUBSTRING(A.ISSUE_DATE, 7, 2))
		                END                                                                         AS PASS_ISSUE_DATE
		             ,  CASE WHEN ISNULL(A.TERMI_DATE, '') = '' THEN ''
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.TERMI_DATE, 1, 4))
		                                             , 'MM',   SUBSTRING(A.TERMI_DATE, 5, 2))
		                                             , 'DD',   SUBSTRING(A.TERMI_DATE, 7, 2))
		                END                                                                         AS PASS_TERMI_DATE
		             ,  A.VISA_KIND
		             ,  A.INSERT_DB_TIME                                                            AS INSERT_DB_TIME
		             ,  A.INSERT_DB_USER                                                            AS INSERT_DB_USER
		             ,  A.UPDATE_DB_TIME                                                            AS UPDATE_DB_TIME
		             ,  A.UPDATE_DB_USER                                                            AS UPDATE_DB_USER
		        FROM               HUM730T AS A  WITH (NOLOCK)
		        
		                INNER JOIN HUM100T AS B  WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
		                                                      AND B.PERSON_NUMB     = A.PERSON_NUMB
		                LEFT  JOIN CBM600T AS C  WITH (NOLOCK) ON C.COMP_CODE       = B.COMP_CODE
		                                                      AND C.COST_POOL_CODE  = B.COST_KIND
		                LEFT  JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE      = B.COMP_CODE
		                                                      AND M1.MAIN_CODE      = N'H005'
		                                                      AND M1.SUB_CODE      != N'$'
		                                                      AND M1.SUB_CODE       = B.POST_CODE
		                LEFT  JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE      = B.COMP_CODE
		                                                      AND M2.MAIN_CODE      = N'H024'
		                                                      AND M2.SUB_CODE      != N'$'
		                                                      AND M2.SUB_CODE       = B.EMPLOY_TYPE
		                LEFT  JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE      = B.COMP_CODE
		                                                      AND M3.MAIN_CODE      = N'H181'
		                                                      AND M3.SUB_CODE       = M2.REF_CODE1
		                LEFT  JOIN BSA100T AS M4 WITH (NOLOCK) ON M4.COMP_CODE      = B.COMP_CODE
		                                                      AND M4.MAIN_CODE      = N'H005'
		                                                      AND M4.SUB_CODE      != N'$'
		                                                      AND M4.SUB_CODE       = B.POST_CODE
		    
		        WHERE   A.COMP_CODE      = #{S_COMP_CODE}
		    	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		        	AND B.DIV_CODE IN
					<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
		    	</if>
		    	<if test="@foren.Ognl@isNotEmpty(DEPTS)">
				    AND B.DEPT_CODE	 IN
					 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			          		 #{item}
			    	 </foreach>
				</if>
				<if test="@foren.Ognl@isNotEmpty(NAME)">
			    	AND B.NAME   LIKE + '%' +  #{NAME} + '%'
	            </if>
	            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				    AND B.PERSON_NUMB  = #{PERSON_NUMB}
				</if>
				<if test="RDO_TYPE == &quot;A&quot;">
					AND B.RETR_DATE = '00000000'		-- 재직구분 (재직)
				</if>
				<if test="RDO_TYPE == &quot;B&quot;">
					AND B.RETR_DATE != '00000000'		-- 재직구분 (퇴사)
				</if>

				<if test="@foren.Ognl@isNotEmpty(PASS_NATION)">
			    	AND A.NATION_NAME   LIKE + '%' +  #{PASS_NATION} + '%'			-- 여권 국가  // 비자 국가  + 유효일 삭제
	            </if>
	            
	             <if test="@foren.Ognl@isNotEmpty(FR_PASS_TERMI_DATE)">
				   AND A.TERMI_DATE 	&gt;= #{FR_PASS_TERMI_DATE}							-- 만료일 FR  (여권)
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(TO_PASS_TERMI_DATE)">
				   AND A.TERMI_DATE 	&lt;= #{TO_PASS_TERMI_DATE}							-- 만료일 TO  (여권)
				 </if>	
	            			
				<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
				   AND B.PAY_GUBUN  	= #{PAY_GUBUN}								-- 고용형태
				</if>
				<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
				   AND B.PAY_CODE 		= #{PAY_CODE}		 	 					-- 급여지급방식
				</if>
				<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
				   AND B.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}		 					-- 급여지급차수
				</if>
				<if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">
				   AND B.EMPLOY_TYPE 	= #{EMPLOY_GUBUN}		 					-- 사원구분
				</if>
				<if test="@foren.Ognl@isNotEmpty(COST_POOL)">
				   AND B.COST_KIND 		= #{COST_POOL}		 	 					-- 사업명
				</if>
				<if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
				   AND M3.SUB_CODE 		= #{PERSON_GROUP}		 					-- 사원그룹
				</if>
		    
		        ORDER BY A.COMP_CODE, B.DIV_CODE, B.DEPT_CODE, B.POST_CODE
		    
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		    END
	</select>
	
	<insert id="hum303ukrService.insertDetail" parameterType="Map">    /* 추가 */                  
		--Hum303ukr.CHum303UKR[fnHum303Save] Query02
		INSERT INTO HUM730T
		     ( COMP_CODE
		     , PERSON_NUMB
		     , PASS_NO
		     <if test="@foren.Ognl@isNotEmpty(PASS_KIND)">
		     , PASS_KIND
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_NATION_NAME)">
		     , NATION_NAME
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_ISSUE_DATE)">
		     , ISSUE_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_TERMI_DATE)">
		     , TERMI_DATE
		     </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     , unilite.fnCipherEncrypt(#{PASS_NO}, '')
		     <if test="@foren.Ognl@isNotEmpty(PASS_KIND)">
		     , #{PASS_KIND}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_NATION_NAME)">
		     , #{PASS_NATION_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_ISSUE_DATE)">
		     , #{PASS_ISSUE_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PASS_TERMI_DATE)">
		     , #{PASS_TERMI_DATE}
		     </if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )
	</insert>
	
	<update id="hum303ukrService.updateDetail" parameterType="Map">		/* 수정 */
		UPDATE HUM730T
		   SET 
		   	   INSERT_DB_USER  	 = #{S_USER_ID}
		     , UPDATE_DB_USER    = #{S_USER_ID}
		     , UPDATE_DB_TIME    = GETDATE()
		     <if test="@foren.Ognl@isExists(_parameter, 'PASS_KIND')">
		     , PASS_KIND    	= #{PASS_KIND}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'PASS_NATION_NAME')">
		     , NATION_NAME 		= #{PASS_NATION_NAME}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'PASS_ISSUE_DATE')">
		     , ISSUE_DATE  		= #{PASS_ISSUE_DATE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'PASS_TERMI_DATE')">
		     , TERMI_DATE   	= #{PASS_TERMI_DATE}
		     </if>
		 WHERE COMP_CODE      	= #{S_COMP_CODE}
		   AND PERSON_NUMB    	= #{PERSON_NUMB}
		   AND unilite.fnCipherDecrypt(PASS_NO, 'P')   = #{PASS_NO}   
	</update>
	
	<delete id="hum303ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
		DELETE FROM HUM730T
		WHERE COMP_CODE   = #{S_COMP_CODE}
		  AND PERSON_NUMB = #{PERSON_NUMB} 
		  AND unilite.fnCipherDecrypt(PASS_NO, 'P') = #{PASS_NO}
	</delete>
	
	
	
	
	
	
	
	<select id="hum303ukrService.select2" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
	   --hum303ukr.Chum303ukr[fnHum303QStd] Query01
		    BEGIN
		        SET NOCOUNT ON
		        SET ARITHABORT ON
		    
		    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
		        DECLARE         @DateFormat         NVARCHAR(10)
		    
		        SELECT  TOP 1 @DateFormat = CODE_NAME
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE = #{S_COMP_CODE}
		        AND     MAIN_CODE = N'B044'
		        AND     REF_CODE1 = N'Y'
		    
		        SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		    
		    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
		        SELECT 
		                A1.COMP_CODE                                                                 AS COMP_CODE
		             ,  B.DIV_CODE                                                                  AS DIV_CODE 
		             ,  B.DEPT_NAME                                                                 AS DEPT_NAME
		             ,  B.POST_CODE                                                                 AS POST_CODE
		             ,  B.NAME                                                                      AS NAME
		             ,  A1.PERSON_NUMB                                                               AS PERSON_NUMB
		             ,  unilite.fnCipherDecrypt(A1.PASS_NO, 'P')                                    AS PASS_NO
		             ,  unilite.fnCipherDecrypt(A1.VISA_NO, 'V')                                    AS VISA_NO
		             ,  A1.NATION_NAME                                                              AS VISA_NATION_NAME
		             ,  A1.VISA_GUBUN
		             ,  A1.VISA_KIND
		             ,  CASE WHEN ISNULL(A1.VALI_DATE, '') = '' THEN ''
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A1.VALI_DATE, 1, 4))
		                                             , 'MM',   SUBSTRING(A1.VALI_DATE, 5, 2))
		                                             , 'DD',   SUBSTRING(A1.VALI_DATE, 7, 2))
		                END                                                                         AS VALI_DATE
		             ,  A1.DURATION_STAY
		             ,  CASE WHEN ISNULL(A1.TERMI_DATE, '') = '' THEN ''
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A1.TERMI_DATE, 1, 4))
		                                             , 'MM',   SUBSTRING(A1.TERMI_DATE, 5, 2))
		                                             , 'DD',   SUBSTRING(A1.TERMI_DATE, 7, 2))
		                END                                                                         AS VISA_TERMI_DATE
		             ,  CASE WHEN ISNULL(A1.ISSUE_DATE, '') = '' THEN ''
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A1.ISSUE_DATE, 1, 4))
		                                             , 'MM',   SUBSTRING(A1.ISSUE_DATE, 5, 2))
		                                             , 'DD',   SUBSTRING(A1.ISSUE_DATE, 7, 2))
		                END                                                                         AS VISA_ISSUE_DATE
		             ,  A1.ISSUE_AT                                                                 AS ISSUE_AT
		             ,  A1.INSERT_DB_TIME                                                            AS INSERT_DB_TIME
		             ,  A1.INSERT_DB_USER                                                            AS INSERT_DB_USER
		             ,  A1.UPDATE_DB_TIME                                                            AS UPDATE_DB_TIME
		             ,  A1.UPDATE_DB_USER                                                            AS UPDATE_DB_USER
		             ,  CASE WHEN ISNULL(unilite.fnCipherDecrypt(A1.VISA_NO, 'V'), '') = '' THEN 'N'
		                     ELSE 'Y'
		                END                                                                         AS VISA_CHECK
		        FROM               HUM731T AS A1  WITH (NOLOCK)
		        
		                INNER JOIN HUM100T AS B  WITH (NOLOCK) ON B.COMP_CODE       = A1.COMP_CODE
		                                                      AND B.PERSON_NUMB     = A1.PERSON_NUMB
		                LEFT  JOIN CBM600T AS C  WITH (NOLOCK) ON C.COMP_CODE       = B.COMP_CODE
		                                                      AND C.COST_POOL_CODE  = B.COST_KIND
		                LEFT  JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE      = B.COMP_CODE
		                                                      AND M1.MAIN_CODE      = N'H005'
		                                                      AND M1.SUB_CODE      != N'$'
		                                                      AND M1.SUB_CODE       = B.POST_CODE
		                LEFT  JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE      = B.COMP_CODE
		                                                      AND M2.MAIN_CODE      = N'H024'
		                                                      AND M2.SUB_CODE      != N'$'
		                                                      AND M2.SUB_CODE       = B.EMPLOY_TYPE
		                LEFT  JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE      = B.COMP_CODE
		                                                      AND M3.MAIN_CODE      = N'H181'
		                                                      AND M3.SUB_CODE       = M2.REF_CODE1
		                LEFT  JOIN BSA100T AS M4 WITH (NOLOCK) ON M4.COMP_CODE      = B.COMP_CODE
		                                                      AND M4.MAIN_CODE      = N'H005'
		                                                      AND M4.SUB_CODE      != N'$'
		                                                      AND M4.SUB_CODE       = B.POST_CODE
		    
		        WHERE   A1.COMP_CODE      = #{S_COMP_CODE}
		    	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		        	AND B.DIV_CODE IN
					<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
		    	</if>
		    	<if test="@foren.Ognl@isNotEmpty(DEPTS)">
				    AND B.DEPT_CODE	 IN
					 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			          		 #{item}
			    	 </foreach>
				</if>
				<if test="@foren.Ognl@isNotEmpty(NAME)">
			    	AND B.NAME   LIKE + '%' +  #{NAME} + '%'
	            </if>
	            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				    AND B.PERSON_NUMB  = #{PERSON_NUMB}
				</if>
				<if test="RDO_TYPE == &quot;A&quot;">
					AND B.RETR_DATE = '00000000'		-- 재직구분 (재직)
				</if>
				<if test="RDO_TYPE == &quot;B&quot;">
					AND B.RETR_DATE != '00000000'		-- 재직구분 (퇴사)
				</if>
				
	            <if test="@foren.Ognl@isNotEmpty(VISA_NATION)">
			    	AND A1.NATION_NAME   LIKE + '%' +  #{VISA_NATION} + '%'			-- 비자 국가
	            </if>
            
	            <if test="@foren.Ognl@isNotEmpty(FR_VALI_DATE)">
				   AND A1.VALI_DATE 	&gt;= #{FR_VALI_DATE}						-- 유효일 FR  (비자)
				</if>
				<if test="@foren.Ognl@isNotEmpty(TO_VALI_DATE)">
				   AND A1.VALI_DATE 	&lt;= #{TO_VALI_DATE}						-- 유효일 TO  (비자)
				</if>	
				
				<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
				   AND B.PAY_GUBUN  	= #{PAY_GUBUN}								-- 고용형태
				</if>
				<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
				   AND B.PAY_CODE 		= #{PAY_CODE}		 	 					-- 급여지급방식
				</if>
				<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
				   AND B.PAY_PROV_FLAG 	= #{PAY_PROV_FLAG}		 					-- 급여지급차수
				</if>
				<if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">
				   AND B.EMPLOY_TYPE 	= #{EMPLOY_GUBUN}		 					-- 사원구분
				</if>
				<if test="@foren.Ognl@isNotEmpty(COST_POOL)">
				   AND B.COST_KIND 		= #{COST_POOL}		 	 					-- 사업명
				</if>
				<if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
				   AND M3.SUB_CODE 		= #{PERSON_GROUP}		 					-- 사원그룹
				</if>
		    
		        ORDER BY A1.COMP_CODE, B.DIV_CODE, B.DEPT_CODE, B.POST_CODE
		    
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		    END
	</select>
	
	<insert id="hum303ukrService.insertDetail2" parameterType="Map">    /* 추가 */                  
		INSERT INTO HUM731T
		     ( COMP_CODE
		     , PERSON_NUMB
		     , PASS_NO
		     , VISA_NO
		     <if test="@foren.Ognl@isNotEmpty(VISA_NATION_NAME)">
		     , NATION_NAME
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_GUBUN)">
		     , VISA_GUBUN
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_KIND)">
		     , VISA_KIND
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VALI_DATE)">
		     , VALI_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DURATION_STAY)">
		     , DURATION_STAY
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_TERMI_DATE)">
		     , TERMI_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_ISSUE_DATE)">
		     , ISSUE_DATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_AT)">
		     , ISSUE_AT
		     </if>
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PERSON_NUMB}
		     , unilite.fnCipherEncrypt(#{PASS_NO}, '')
		     , unilite.fnCipherEncrypt(#{VISA_NO}, '')
		     <if test="@foren.Ognl@isNotEmpty(VISA_NATION_NAME)">
		     , #{VISA_NATION_NAME}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_GUBUN)">
		     , #{VISA_GUBUN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_KIND)">
		     , #{VISA_KIND}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VALI_DATE)">
		     , #{VALI_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(DURATION_STAY)">
		     , #{DURATION_STAY}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_TERMI_DATE)">
		     , #{VISA_TERMI_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(VISA_ISSUE_DATE)">
		     , #{VISA_ISSUE_DATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ISSUE_AT)">
		     , #{ISSUE_AT}
		     </if>
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )
	</insert>
	
	<update id="hum303ukrService.updateDetail2" parameterType="Map">		/* 수정 */
		UPDATE HUM731T
		   SET 
		       INSERT_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     <if test="@foren.Ognl@isExists(_parameter, 'VISA_NATION_NAME')">
		     , NATION_NAME    		= #{VISA_NATION_NAME}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'VISA_GUBUN')">
		     , VISA_GUBUN     		= #{VISA_GUBUN}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'VISA_KIND')">
		     , VISA_KIND      		= #{VISA_KIND}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'VALI_DATE')">
		     , VALI_DATE      		= #{VALI_DATE}
		     </if>  
		     <if test="@foren.Ognl@isExists(_parameter, 'DURATION_STAY')">
		     , DURATION_STAY      	= #{DURATION_STAY}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'VISA_TERMI_DATE')">
		     , TERMI_DATE      		= #{VISA_TERMI_DATE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'VISA_ISSUE_DATE')">
		     , ISSUE_DATE      		= #{VISA_ISSUE_DATE}
		     </if>
		     <if test="@foren.Ognl@isExists(_parameter, 'ISSUE_AT')">
		     , ISSUE_AT      		= #{ISSUE_AT}
		     </if>
		  WHERE COMP_CODE      		= #{S_COMP_CODE}
		    AND PERSON_NUMB    		= #{PERSON_NUMB}
		    AND unilite.fnCipherDecrypt(PASS_NO, 'P') =#{PASS_NO}   
    		AND unilite.fnCipherDecrypt(VISA_NO, 'V') =#{VISA_NO}   
	</update>
	
	<delete id="hum303ukrService.deleteDetail2" parameterType="Map">		/* 삭제 */
		DELETE FROM HUM731T
		WHERE COMP_CODE   = #{S_COMP_CODE}
		  AND PERSON_NUMB = #{PERSON_NUMB} 
		  AND unilite.fnCipherDecrypt(PASS_NO, 'P')	  = #{PASS_NO}
		  AND unilite.fnCipherDecrypt(VISA_NO, 'V')	  = #{VISA_NO}
	</delete>
</mapper>