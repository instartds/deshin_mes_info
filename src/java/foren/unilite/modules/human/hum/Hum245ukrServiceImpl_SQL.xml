<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hum245ukrService">
	<update id="hum245ukrService.Hum100MasterUpdate" parameterType="Map">
		-- 인사마스터에 변경된 정보를 UPDATE
		--UHum04Krv.CHum206UKr SetHum206[fnhum206save] Query04
        UPDATE HUM100T
        SET    DIV_CODE  			= #{AF_DIV_NAME}
        	 , DEPT_CODE 			= #{AF_DEPT_CODE}
             , DEPT_NAME 			= #{AF_DEPT_NAME}
             , POST_CODE 			= #{POST_CODE}
             <if test="@foren.Ognl@isExists(_parameter, 'ABIL_CODE')">
             , ABIL_CODE 			= #{ABIL_CODE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'PAY_GRADE_01')">
             , PAY_GRADE_01 		= #{PAY_GRADE_01}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'PAY_GRADE_02')">
             , PAY_GRADE_02 		= #{PAY_GRADE_02}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'PAY_GRADE_BASE')">
             , PAY_GRADE_BASE 		= #{PAY_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'YEAR_GRADE')">
             , YEAR_GRADE 			= #{YEAR_GRADE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'YEAR_GRADE_BASE')">
             , YEAR_GRADE_BASE 		= #{YEAR_GRADE_BASE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'WAGES_STD_I')">
             , WAGES_STD_I 			= #{WAGES_STD_I}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'COST_KIND')">
             , COST_KIND 			= #{COST_KIND}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'ANNUAL_SALARY_I')">
             , ANNUAL_SALARY_I 		= #{ANNUAL_SALARY_I}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'EMPLOY_TYPE')">
             , EMPLOY_TYPE 			= #{EMPLOY_TYPE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'OFFICE_CODE')">
             , OFFICE_CODE 			= #{OFFICE_CODE}
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'ROUTE_GROUP')">
             , ROUTE_GROUP 			= #{ROUTE_GROUP}
             </if>
        
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND PERSON_NUMB = #{PERSON_NUMB}
	</update>
	
	
	
	<select id="hum245ukrService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<select id="hum245ukrService.fnSetPropertiesbyPayGradeBase" parameterType="Map" resultType="rMap">
		SELECT TOP 1 ISNULL(REF_CODE1,'') GRADE_MMDD                
		  FROM BSA100T WITH (NOLOCK)            
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = N'H174'  
		   AND SUB_CODE != N'$'                  
		   AND SUB_CODE  = #{GRADE_CODE}
	</select>
	
	<select id="hum245ukrService.fnHum245QStdCreate" parameterType="Map" resultType="rMap">
		 --hum245ukr.Chum245ukr[fnHum245QStdCreate] QUERY01
		    BEGIN
		        SET NOCOUNT ON
		        SET ARITHABORT ON
		    
		    --  [ 변수 선언 ] --------------------------------------
		        DECLARE         @COMP_CODE          NVARCHAR(08)
		                      , @PAYSTEP_GUBUN      NVARCHAR(01)
		                      , @PAYSTEP_YYYYMMDD   NVARCHAR(10)
		                      , @USERID             NVARCHAR(100)
		                      , @GRADE_CODE         NVARCHAR(02)
		    
		                      , @CN_ROW             INT
		    
		        SET  @COMP_CODE            = #{S_COMP_CODE}
		        SET  @PAYSTEP_GUBUN        = #{PAYSTEP_GUBUN}
		        SET  @PAYSTEP_YYYYMMDD     = #{PAYSTEP_YYYYMMDD}
		        SET  @USERID               = #{S_USER_ID}
		        SET  @GRADE_CODE           = #{GRADE_CODE}
		    
		    --  [ 인사정보반영여부 체크 ] --------------------------------------
		        SELECT  @CN_ROW = COUNT(*)
		        FROM    HUM260T
		        WHERE   COMP_CODE           = @COMP_CODE
		        AND     PAYSTEP_YYYYMMDD    = @PAYSTEP_YYYYMMDD
		        AND     PAYSTEP_GUBUN       = @PAYSTEP_GUBUN
		        AND     APPLY_YN            = 'Y'
		    
		    --  [ 승급자료생성 ] --------------------------------------
		        IF @CN_ROW = 0
		        BEGIN 
		            DELETE 
		            FROM    HUM260T 
		            WHERE   COMP_CODE           = @COMP_CODE
		            AND     PAYSTEP_YYYYMMDD    = @PAYSTEP_YYYYMMDD
		            AND     PAYSTEP_GUBUN       = @PAYSTEP_GUBUN
		            AND     APPLY_YN            = 'N'
		    
		            INSERT INTO HUM260T ( COMP_CODE      , PERSON_NUMB    , PAYSTEP_YYYYMMDD , PAYSTEP_GUBUN, DIV_CODE
		                                , DEPT_CODE      , DEPT_NAME      , POST_CODE        , EMPLOY_TYPE  , ABIL_CODE
		                                , BE_PAY_GRADE_01, BE_PAY_GRADE_02, BE_PAY_GRADE_BASE, BE_YEAR_GRADE, BE_YEAR_GRADE_BASE, BE_WAGES_STD_I
		                                , AF_PAY_GRADE_01, AF_PAY_GRADE_02, AF_PAY_GRADE_BASE, AF_YEAR_GRADE, AF_YEAR_GRADE_BASE, AF_WAGES_STD_I
		                                , APPLY_YN       , INSERT_DB_USER , INSERT_DB_TIME   , UPDATE_DB_USER, UPDATE_DB_TIME
		                                )
		            SELECT  DISTINCT A.COMP_CODE
		                  , A.PERSON_NUMB
		                  , @PAYSTEP_YYYYMMDD                   AS PAYSTEP_YYYYMMDD
		                  , @PAYSTEP_GUBUN                      AS PAYSTEP_GUBUN
		                  , A.DIV_CODE
		                  , A.DEPT_CODE
		                  , A.DEPT_NAME
		                  , A.POST_CODE 
		                  , A.EMPLOY_TYPE 
		                  , A.ABIL_CODE
		                  , A.PAY_GRADE_01                      AS BE_PAY_GRADE_01         --승급전_급
		                  , A.PAY_GRADE_02                      AS BE_PAY_GRADE_02         --승급전_호
		                  , A.PAY_GRADE_BASE                    AS BE_PAYGRADE_BASE        --승급전_호봉승급기준(H174)
		                  , ISNULL(A.YEAR_GRADE,'')             AS BE_YEAR_GRADE           --승급전근속년
		                  , ISNULL(A.YEAR_GRADE_BASE,'')        AS BE_YEAR_GRADE_BASE      --승급전_근속승급기준(H174)
		                  , A.WAGES_STD_I                       AS BE_WAGES_STD_I          --승급전_기본급
		      
		                  , A.PAY_GRADE_01                      AS AF_PAY_GRADE_01         --승급후_급
		                  , CASE WHEN A.PAY_GRADE_BASE = @GRADE_CODE
		                              THEN CASE WHEN CAST(A.PAY_GRADE_02 AS INT) &lt; CAST(ISNULL(D.REF_CODE5, '0') AS INT) 
		                                             THEN CAST(A.PAY_GRADE_02 AS INT) + 1 
		                                        ELSE A.PAY_GRADE_02 
		                                   END
		                         ELSE A.PAY_GRADE_02
		                    END                                 AS AF_PAY_GRADE_02         --승급후_호 ,
		                  , A.PAY_GRADE_BASE                    AS AF_PAY_GRADE_BASE       --승급후_호봉승급기준
		                  , CASE WHEN A.YEAR_GRADE_BASE = @GRADE_CODE
		                              THEN ISNULL(A.YEAR_GRADE, 0) + 1
		                         ELSE A.YEAR_GRADE
		                    END                                 AS AF_YEAR_GRADE           --승급후_근속년
		                  , ISNULL(A.YEAR_GRADE_BASE, '')       AS AF_YEAR_GRADE_BASE      --승급후_근속승급기준
		                  , CASE WHEN A.PAY_GRADE_BASE = @GRADE_CODE THEN E.WAGES_I
		                         ELSE A.WAGES_STD_I
		                    END                                 AS AF_WAGES_STD_I          --승급후_기본급 
		                  , 'N'                                 AS APPLY_YN
		                  , @USERID                             AS INSERT_DB_USER
		                  , GETDATE()                           AS INSERT_DB_TIME
		                  , @USERID                             AS UPDATE_DB_USER
		                  , GETDATE()                           AS UPDATE_DB_TIME
		      
		            FROM               HUM100T  A  WITH (NOLOCK)
		                    INNER JOIN BSA100T  B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
		                                                        AND  B.MAIN_CODE    = N'H174'           -- 승급기준
		                                                        AND (B.SUB_CODE     = A.PAY_GRADE_BASE
		                                                         OR  B.SUB_CODE     = A.YEAR_GRADE_BASE)
		                    INNER JOIN BSA100T  D  WITH (NOLOCK) ON  D.COMP_CODE    = A.COMP_CODE
		                                                        AND  D.MAIN_CODE    = N'HP01'           -- 직급별
		                                                        AND  D.REF_CODE1    = A.PAY_GRADE_01
		                                                        AND  D.SUB_CODE    != '$'
		                    INNER JOIN HBS200T  E  WITH (NOLOCK) ON  E.COMP_CODE    = A.COMP_CODE
		                                                        AND  E.PAY_GRADE_01 = A.PAY_GRADE_01    -- 승급후기본급
		                                                        AND  E.PAY_GRADE_02 = CASE WHEN CAST(A.PAY_GRADE_02 AS INT) &lt; CAST(ISNULL(D.REF_CODE5, '0') AS INT)
		                                                                                   THEN CAST(A.PAY_GRADE_02 AS INT) + 1
		                                                                                   ELSE A.PAY_GRADE_02
		                                                                              END
		                                                        AND  E.WAGES_CODE   = '100'
		                    LEFT  JOIN HUM850T  F  WITH (NOLOCK) ON  F.COMP_CODE    = A.COMP_CODE
		                                                        AND  F.PERSON_NUMB  = A.PERSON_NUMB
		                                                        AND  F.FROM_DATE   &lt;= @PAYSTEP_YYYYMMDD
		                                                        AND  F.TO_DATE     &gt;= @PAYSTEP_YYYYMMDD
		            WHERE   A.COMP_CODE  = @COMP_CODE
		            AND    (ISNULL(A.PAY_GRADE_BASE , '') = @GRADE_CODE
		             OR     ISNULL(A.YEAR_GRADE_BASE, '') = @GRADE_CODE)
		            AND    (A.RETR_DATE = '00000000'
		             OR     A.RETR_DATE = '')
		            AND     F.COMP_CODE IS NULL
		        END
		    
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		    END
	</select>
	
	<select id="hum245ukrService.fnHum245SaveApplyCancel" parameterType="Map" resultType="rMap">
		 --hum245ukr.Chum245ukr[fnHum245SaveApplyCancelCreate] Query02  
         --인사 HUM100T테이블 업데이트
            DECLARE @COMP_CODE          NVARCHAR(20)    ,
                    @PAYSTEP_GUBUN      NVARCHAR(1)     ,
                    @PAYSTEP_YYYYMMDD   NVARCHAR(10)    ,
                    @USERID             NVARCHAR(100)    ,
                    @PROC               NVARCHAR(10)     
            
            SET @COMP_CODE          = #{S_COMP_CODE}
            SET @PAYSTEP_GUBUN      = #{PAYSTEP_GUBUN}
            SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
            SET @USERID             = #{S_USER_ID}
            SET @PROC               = #{PROC}
            
            UPDATE  B
                SET PAY_GRADE_01    = CASE WHEN @PROC = 'APPLY' THEN A.AF_PAY_GRADE_01      ELSE A.BE_PAY_GRADE_01      END, 
                    PAY_GRADE_02    = CASE WHEN @PROC = 'APPLY' THEN A.AF_PAY_GRADE_02      ELSE A.BE_PAY_GRADE_02      END, 
                    PAY_GRADE_BASE  = CASE WHEN @PROC = 'APPLY' THEN A.AF_PAY_GRADE_BASE    ELSE A.BE_PAY_GRADE_BASE    END, 
                    YEAR_GRADE      = CASE WHEN @PROC = 'APPLY' THEN A.AF_YEAR_GRADE        ELSE A.BE_YEAR_GRADE        END, 
                    YEAR_GRADE_BASE = CASE WHEN @PROC = 'APPLY' THEN A.AF_YEAR_GRADE_BASE   ELSE A.BE_YEAR_GRADE_BASE   END, 
                    WAGES_STD_I     = CASE WHEN @PROC = 'APPLY' THEN A.AF_WAGES_STD_I       ELSE A.BE_WAGES_STD_I       END  
            FROM    HUM260T             A
                    INNER JOIN  HUM100T B
                        ON (A.COMP_CODE     = B.COMP_CODE
                        AND A.PERSON_NUMB   = B.PERSON_NUMB)
            WHERE   1=1
            AND     A.COMP_CODE         = @COMP_CODE
            AND     A.APPLY_YN          = CASE WHEN @PROC = 'APPLY' THEN 'N' ELSE 'Y' END
            AND     A.PAYSTEP_YYYYMMDD  = @PAYSTEP_YYYYMMDD
            AND     A.PERSON_NUMB       =  #{iPersonNumb}
            AND     A.PAYSTEP_GUBUN     = @PAYSTEP_GUBUN
              
            
            UPDATE  A
                SET APPLY_YN            = CASE WHEN @PROC = 'APPLY' THEN 'Y' ELSE 'N' END       ,
                    UPDATE_DB_USER      = @USERID   ,
                    UPDATE_DB_TIME      = GETDATE()
            FROM    HUM260T             A
                    INNER JOIN  HUM100T B
                        ON (A.COMP_CODE     = B.COMP_CODE
                        AND A.PERSON_NUMB   = B.PERSON_NUMB)
            WHERE   1=1
            AND     A.COMP_CODE         = @COMP_CODE
            AND     A.APPLY_YN          = CASE WHEN @PROC = 'APPLY' THEN 'N' ELSE 'Y' END
            AND     A.PAYSTEP_YYYYMMDD  = @PAYSTEP_YYYYMMDD
            AND     A.PERSON_NUMB       =  #{iPersonNumb}
            AND     A.PAYSTEP_GUBUN     = @PAYSTEP_GUBUN
            
            
            DECLARE @ANNOUNCE_CODE  NVARCHAR(1),
                    @REF_CODE1      NVARCHAR(1) 
            
            SET @REF_CODE1 = 'N'                
            
            SELECT  @ANNOUNCE_CODE  = REF_CODE2 ,
                    @REF_CODE1      = REF_CODE1
            FROM    BSA100T
            WHERE   MAIN_CODE   = 'H187'
            AND     SUB_CODE    = @PAYSTEP_GUBUN 
            AND     REF_CODE1   = 'Y'
            
            IF @PROC = 'APPLY'
            BEGIN
                --인사변동반영여부 'Y' 일때만 등록
                IF @REF_CODE1 = 'Y'
                BEGIN 
                    INSERT HUM760T ( COMP_CODE     , PERSON_NUMB   , ANNOUNCE_DATE , ANNOUNCE_CODE, BE_DIV_NAME    , AF_DIV_NAME
                                   , BE_DEPT_CODE  , BE_DEPT_NAME  , AF_DEPT_CODE  , AF_DEPT_NAME , POST_CODE      , ABIL_CODE   , ANNOUNCE_REASON
                                   , PAY_GRADE_01  , PAY_GRADE_02  , PAY_GRADE_BASE, YEAR_GRADE   , YEAR_GRADE_BASE, WAGES_STD_I , ANNUAL_SALARY_I
                                   , OFFICE_CODE   , ROUTE_GROUP   , EMPLOY_TYPE   , COST_KIND
                                   , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01
                                   )
                    SELECT  @COMP_CODE  AS  COMP_CODE           ,
                            #{iPersonNumb}   							AS  PERSON_NUMB         ,
                            @PAYSTEP_YYYYMMDD                           AS  PAYSTEP_YYYYMMDD    ,
                            B.REF_CODE2 AS  ANNOUNCE_CODE       ,
                            A.DIV_CODE  AS  BE_DIV_NAME         ,
                            A.DIV_CODE  AS  AF_DIV_NAME         ,
                            A.DEPT_CODE AS  BE_DEPT_CODE        ,
                            A.DEPT_NAME AS  BE_DEPT_NAME        ,
                            A.DEPT_CODE AS  AF_DEPT_CODE        ,
                            A.DEPT_NAME AS  AF_DEPT_NAME        ,
                            A.POST_CODE                         ,
                            A.ABIL_CODE                         ,
                            B.CODE_NAME                         ,
                            M.AF_PAY_GRADE_01                   ,
                            M.AF_PAY_GRADE_02                   ,
                            M.AF_PAY_GRADE_BASE                 ,
                            M.AF_YEAR_GRADE                     ,
                            M.AF_YEAR_GRADE_BASE                ,
                            M.AF_WAGES_STD_I                    ,
                            0,
                            NULL,NULL,NULL,NULL,
                            @USERID   ,
                            GETDATE()   ,
                            @USERID   ,
                            GETDATE()   ,
                            'HUM245UKR'
                    FROM                HUM260T     M
                            INNER JOIN  HUM100T     A   ON (M.COMP_CODE     = A.COMP_CODE
                                                        AND M.PERSON_NUMB   = A.PERSON_NUMB)
                            INNER JOIN BSA100T      B   ON (M.COMP_CODE     = A.COMP_CODE
                                                        AND B.MAIN_CODE     = 'H187'
                                                        AND M.PAYSTEP_GUBUN = B.SUB_CODE)
                    WHERE   1=1
                    AND     M.COMP_CODE         = @COMP_CODE 
                    AND     M.PERSON_NUMB       = #{iPersonNumb} 
                    AND     M.PAYSTEP_YYYYMMDD  = @PAYSTEP_YYYYMMDD
                    AND     M.PAYSTEP_GUBUN     = @PAYSTEP_GUBUN
                    AND		M.APPLY_YN 		   != 'Y'  -- 추가 2016.05.31
                END 
            END
            ELSE
            BEGIN
                DELETE          
                FROM    HUM760T 
                WHERE   COMP_CODE       = @COMP_CODE
                AND     PERSON_NUMB     = #{iPersonNumb}
                AND     ANNOUNCE_DATE   = @PAYSTEP_YYYYMMDD
                AND     ANNOUNCE_CODE   = @ANNOUNCE_CODE
                AND     TEMPC_01        = 'HUM245UKR'
            END
	</select>	
	
	<select id="hum245ukrService.select" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
	
			DECLARE @FR_DATE  NVARCHAR(08)
	              , @ADD_DATE NVARCHAR(08)
	              , @T0_DATE  NVARCHAR(08)
	              , @LoopCount INT
		  		  , @MAX_COUNT INT
	
			SELECT @T0_DATE  = CONVERT(NVARCHAR(8), DATEADD(DAY,  -1, #{PAYSTEP_YYYYMMDD}), 112)
        	SELECT @ADD_DATE = CONVERT(NVARCHAR(8), DATEADD(YEAR, -1, @T0_DATE),   112)
        	SELECT @FR_DATE  = CONVERT(NVARCHAR(8), DATEADD(DAY,   1, @ADD_DATE),  112)
			
			
			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#PAY_GRADE'))
				 DROP TABLE #PAY_GRADE
			
			
			CREATE TABLE #PAY_GRADE
			   (
			   	  COMP_CODE				NVARCHAR(08)
			   	, DIV_CODE				NVARCHAR(08)
				, CHOICE				NVARCHAR(08)
				, PAYSTEP_YYYYMMDD		NVARCHAR(10)
				, PAYSTEP_GUBUN			NVARCHAR(04)
				, DEPT_NAME				NVARCHAR(60)
				, POST_CODE				NVARCHAR(20)
				, PERSON_NUMB			NVARCHAR(40)
				, NAME					NVARCHAR(20)
				, JOIN_DATE				NVARCHAR(20)	
				, EMPLOY_TYPE			NVARCHAR(10)
				, ABIL_CODE				NVARCHAR(10)
				, AF_PAY_GRADE_01		NVARCHAR(40)
				, AF_PAY_GRADE_02		NVARCHAR(40)
				, AF_PAY_GRADE_BASE		NVARCHAR(04)
				, AF_YEAR_GRADE			NVARCHAR(40)
				, AF_YEAR_GRADE_BASE	NVARCHAR(04)
				, AF_WAGES_STD_I		NVARCHAR(40)
				, APPLY_YN				NVARCHAR(08)
				, PERIOD_DATE   		NVARCHAR(500)
				, PERSON_COUNT  		INT
			   )
			   
			INSERT INTO #PAY_GRADE
			(
				  COMP_CODE
				, DIV_CODE
				, CHOICE
				, PAYSTEP_YYYYMMDD
				, PAYSTEP_GUBUN
				, DEPT_NAME
				, POST_CODE
				, PERSON_NUMB
				, NAME
				, JOIN_DATE
				, EMPLOY_TYPE
				, ABIL_CODE
				, AF_PAY_GRADE_01
				, AF_PAY_GRADE_02
				, AF_PAY_GRADE_BASE
				, AF_YEAR_GRADE
				, AF_YEAR_GRADE_BASE
				, AF_WAGES_STD_I
				, APPLY_YN
				, PERIOD_DATE
				, PERSON_COUNT
			)

		    SELECT  
		    		 A.COMP_CODE
		    		,A.DIV_CODE
		            ,CAST(0 AS BIT) AS CHOICE 
		            ,CONVERT(VARCHAR(10),CAST(A.PAYSTEP_YYYYMMDD AS smalldatetime),102)  AS PAYSTEP_YYYYMMDD 
		            ,A.PAYSTEP_GUBUN      
		            ,A.DEPT_NAME         
		            ,A.POST_CODE         
		            ,A.PERSON_NUMB       
		            ,B.NAME              
		            ,CONVERT(VARCHAR(10),CAST(B.JOIN_DATE AS smalldatetime),102)         AS JOIN_DATE      
		            ,A.EMPLOY_TYPE          --사원구분
		            ,A.ABIL_CODE            --직책
		            ,A.AF_PAY_GRADE_01   
		            ,A.AF_PAY_GRADE_02   
		            ,A.AF_PAY_GRADE_BASE 
		            ,A.AF_YEAR_GRADE     
		            ,A.AF_YEAR_GRADE_BASE
		            ,A.AF_WAGES_STD_I    
		            ,A.APPLY_YN 
		            ,unilite.fnGetUserdate(C.COMP_CODE, C.FROM_DATE) + ' ~ ' + UNILITE.fnGetUserdate(C.COMP_CODE, C.TO_DATE) + ' (' + D.CODE_NAME + ') '  AS PERIOD_DATE
		            ,ROW_NUMBER() OVER (PARTITION BY A.PERSON_NUMB ORDER BY A.PERSON_NUMB)
		    
		    FROM    HUM260T                     A WITH(NOLOCK)
		            INNER JOIN          HUM100T B WITH(NOLOCK)  ON (A.COMP_CODE =   B.COMP_CODE
		                   										AND A.PERSON_NUMB   =   B.PERSON_NUMB)  
		                
		            LEFT JOIN 			HUM850T C WITH(NOLOCK)  ON (C.COMP_CODE   = A.COMP_CODE
																AND C.PERSON_NUMB  = A.PERSON_NUMB  
																AND ((C.FROM_DATE &gt;= @FR_DATE) OR (C.TO_DATE   &gt;= @FR_DATE))
																AND ((C.TO_DATE   &lt;= @T0_DATE) OR (C.FROM_DATE &lt;= @T0_DATE))   
																)  
					LEFT JOIN           BSA100T D WITH(NOLOCK)  ON C.COMP_CODE  = D.COMP_CODE
													   		   AND C.OFF_CODE2  = D.SUB_CODE
													   		   AND D.MAIN_CODE != '$'
													   		   AND D.MAIN_CODE  = 'H186'                        
		    WHERE   1=1
		    AND     A.COMP_CODE         = #{S_COMP_CODE}
		    <if test="@foren.Ognl@isNotEmpty(PAYSTEP_YYYYMMDD)">
		    AND     A.PAYSTEP_YYYYMMDD  = #{PAYSTEP_YYYYMMDD}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAYSTEP_GUBUN)">
		    AND     A.PAYSTEP_GUBUN     = #{PAYSTEP_GUBUN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND     A.DIV_CODE          LIKE #{DIV_CODE} + '%'
		    </if>
	    	<if test="@foren.Ognl@isNotEmpty(DEPTS)">
			AND  A.DEPT_CODE	 IN
			 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	          		 #{item}
	    	 </foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		    AND     A.EMPLOY_TYPE       LIKE #{EMPLOY_TYPE} + '%'
			</if>
		    <if test="@foren.Ognl@isNotEmpty(NAME)">
		    AND     B.NAME              LIKE #{NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND     A.PERSON_NUMB       LIKE #{PERSON_NUMB} + '%'
		    </if>
		    ORDER BY    B.DIV_CODE, B.DEPT_CODE, A.EMPLOY_TYPE, A.PERSON_NUMB
		    
		    SELECT @MAX_COUNT = MAX(PERSON_COUNT)
			  FROM #PAY_GRADE
			
			   SET @LoopCount = 2
			
			WHILE (@LoopCount &lt;= @MAX_COUNT)
			BEGIN
				UPDATE A
				   SET       A.PERIOD_DATE = A.PERIOD_DATE + ' , ' + B.PERIOD_DATE
				  FROM       #PAY_GRADE A 
				  INNER JOIN #PAY_GRADE B ON B.COMP_CODE   = A.COMP_CODE
				                       AND B.PERSON_NUMB = A.PERSON_NUMB
				                    
				  WHERE B.PERSON_COUNT &gt;=  @LoopCount
			
				SET @LoopCount = @LoopCount + 1
			END
			
			
			 SELECT * FROM #PAY_GRADE
			  WHERE PERSON_COUNT = 1
		    
	</select>
	
	
	<select id="hum245ukrService.select2" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
	
			DECLARE @FR_DATE  NVARCHAR(08)
	              , @ADD_DATE NVARCHAR(08)
	              , @T0_DATE  NVARCHAR(08)
	
			SELECT @T0_DATE  = CONVERT(NVARCHAR(8), DATEADD(DAY,  -1, #{PAYSTEP_YYYYMMDD}), 112)
        	SELECT @ADD_DATE = CONVERT(NVARCHAR(8), DATEADD(YEAR, -1, @T0_DATE),   112)
        	SELECT @FR_DATE  = CONVERT(NVARCHAR(8), DATEADD(DAY,   1, @ADD_DATE),  112)
			
		    SELECT  
		             CAST(0 AS BIT) AS CHOICE 
		            ,CONVERT(VARCHAR(10),CAST(A.PAYSTEP_YYYYMMDD AS smalldatetime),102)  AS PAYSTEP_YYYYMMDD 
		            ,A.PAYSTEP_GUBUN         
		            ,A.DIV_CODE          
		            ,A.DEPT_NAME         
		            ,A.POST_CODE         
		            ,A.PERSON_NUMB       
		            ,B.NAME              
		            ,CONVERT(VARCHAR(10),CAST(B.JOIN_DATE AS smalldatetime),102)         AS JOIN_DATE      
		            ,A.EMPLOY_TYPE          --사원구분
		            ,A.ABIL_CODE            --직책
		            ,A.AF_PAY_GRADE_01   
		            ,A.AF_PAY_GRADE_02   
		            ,A.AF_PAY_GRADE_BASE 
		            ,A.AF_YEAR_GRADE     
		            ,A.AF_YEAR_GRADE_BASE
		            ,A.AF_WAGES_STD_I    
		            ,A.APPLY_YN 
		            ,unilite.fnGetUserdate(C.COMP_CODE, C.FROM_DATE) + ' ~ ' + UNILITE.fnGetUserdate(C.COMP_CODE, C.TO_DATE) + ' (' + D.CODE_NAME + ') '  AS PERIOD_DATE
		    
		    FROM    HUM260T                     A WITH(NOLOCK)
		            INNER JOIN          HUM100T B WITH(NOLOCK)  ON (A.COMP_CODE =   B.COMP_CODE
		                   										AND A.PERSON_NUMB   =   B.PERSON_NUMB)  
		                
		            LEFT JOIN 			HUM850T C WITH(NOLOCK)  ON (C.COMP_CODE   = A.COMP_CODE
																AND C.PERSON_NUMB  = A.PERSON_NUMB  
																AND ((C.FROM_DATE &gt;= @FR_DATE) OR (C.TO_DATE   &gt;= @FR_DATE))
																AND ((C.TO_DATE   &lt;= @T0_DATE) OR (C.FROM_DATE &lt;= @T0_DATE))   
																)  
																LEFT JOIN     BSA100T D WITH(NOLOCK)  ON C.COMP_CODE  = D.COMP_CODE
																								   AND C.OFF_CODE2  = D.SUB_CODE
																								   AND D.MAIN_CODE != '$'
																								   AND D.MAIN_CODE  = 'H186'                              
		    WHERE   1=1
		    AND     A.COMP_CODE         = #{S_COMP_CODE}
		    <if test="@foren.Ognl@isNotEmpty(PAYSTEP_YYYYMMDD)">
		    AND     A.PAYSTEP_YYYYMMDD  = #{PAYSTEP_YYYYMMDD}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAYSTEP_GUBUN)">
		    AND     A.PAYSTEP_GUBUN     = #{PAYSTEP_GUBUN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND     A.DIV_CODE          LIKE #{DIV_CODE} + '%'
		    </if>
	    	<if test="@foren.Ognl@isNotEmpty(DEPTS)">
			AND  A.DEPT_CODE	 IN
			 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	          		 #{item}
	    	 </foreach>
			</if>
			<if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		    AND     A.EMPLOY_TYPE       LIKE #{EMPLOY_TYPE} + '%'
			</if>
		    <if test="@foren.Ognl@isNotEmpty(NAME)">
		    AND     B.NAME              LIKE #{NAME} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND     A.PERSON_NUMB       LIKE #{PERSON_NUMB} + '%'
		    </if>
		    ORDER BY    B.DIV_CODE, B.DEPT_CODE, A.EMPLOY_TYPE, A.PERSON_NUMB
	
	
	
	
	</select>
	
	<insert id="hum245ukrService.insertDetail" parameterType="Map">    /* 추가 */
			DECLARE @COMP_CODE          NVARCHAR(20)    ,
	                @PAYSTEP_GUBUN      NVARCHAR(1)     ,
	                @PAYSTEP_YYYYMMDD   NVARCHAR(10)    ,
	                @USERID             NVARCHAR(100)    
                
                SET @COMP_CODE          = #{S_COMP_CODE}
                SET @PAYSTEP_GUBUN      = #{PAYSTEP_GUBUN}
                SET @PAYSTEP_YYYYMMDD   = #{PAYSTEP_YYYYMMDD}
                SET @USERID             = #{S_USER_ID}
                
                INSERT INTO HUM260T ( COMP_CODE      , PERSON_NUMB    , PAYSTEP_YYYYMMDD , PAYSTEP_GUBUN, DIV_CODE
                                    , DEPT_CODE      , DEPT_NAME      , POST_CODE        , EMPLOY_TYPE  , ABIL_CODE
                                    , BE_PAY_GRADE_01, BE_PAY_GRADE_02, BE_PAY_GRADE_BASE, BE_YEAR_GRADE, BE_YEAR_GRADE_BASE, BE_WAGES_STD_I
                                    , AF_PAY_GRADE_01, AF_PAY_GRADE_02, AF_PAY_GRADE_BASE, AF_YEAR_GRADE, AF_YEAR_GRADE_BASE, AF_WAGES_STD_I
                                    , APPLY_YN       , INSERT_DB_USER , INSERT_DB_TIME   , UPDATE_DB_USER, UPDATE_DB_TIME
                                            )
                SELECT  @COMP_CODE                                  ,
                        #{PERSON_NUMB}    							,   --사번
                        @PAYSTEP_YYYYMMDD                           ,
                        @PAYSTEP_GUBUN                              ,
                        #{DIV_CODE}       				,   --사업장
                        DEPT_CODE                       ,
                        DEPT_NAME                       ,
                        POST_CODE                       ,
                        EMPLOY_TYPE                     ,
                        ABIL_CODE                       ,
                        PAY_GRADE_01                    ,
                        PAY_GRADE_02                    ,
                        PAY_GRADE_BASE                  ,
                        ISNULL(YEAR_GRADE,'')           ,
                        ISNULL(YEAR_GRADE_BASE,'')      ,
                        WAGES_STD_I                     ,
                        #{AF_PAY_GRADE_01}   ,   --승급후 급     
                        #{AF_PAY_GRADE_02}   ,   --승급후 호     
                        #{AF_PAY_GRADE_BASE} ,                   
                        #{AF_YEAR_GRADE}     ,   --승급후 년수   
                        #{AF_YEAR_GRADE_BASE},                  
                        #{AF_WAGES_STD_I}    ,   --승급후  기본급
                        'N'                             ,
                        @USERID                         ,
                        GETDATE()                       ,
                        @USERID                         ,
                        GETDATE()                       
                FROM    HUM100T
                WHERE   1=1
                AND     COMP_CODE   = @COMP_CODE
                AND     PERSON_NUMB = #{PERSON_NUMB}
	</insert>
	
	<update id="hum245ukrService.updateDetail" parameterType="Map">		/* 수정 */
        UPDATE  HUM260T
           SET      AF_PAY_GRADE_01     = #{AF_PAY_GRADE_01} ,
                    AF_PAY_GRADE_02     = #{AF_PAY_GRADE_02} ,
                    AF_PAY_GRADE_BASE   = #{AF_PAY_GRADE_BASE} ,
                    AF_YEAR_GRADE       = #{AF_YEAR_GRADE} ,
                    AF_YEAR_GRADE_BASE  = #{AF_YEAR_GRADE_BASE},
                    AF_WAGES_STD_I      = #{AF_WAGES_STD_I},
                    UPDATE_DB_USER      = #{S_USER_ID}     ,
                    UPDATE_DB_TIME      = GETDATE()
          WHERE     1=1
            AND     COMP_CODE           = #{S_COMP_CODE}
            AND     PERSON_NUMB         = #{PERSON_NUMB}
            AND     PAYSTEP_YYYYMMDD    = #{PAYSTEP_YYYYMMDD}
            AND     PAYSTEP_GUBUN       = #{PAYSTEP_GUBUN}
            AND     APPLY_YN            = N'N'
	</update>
	
	<delete id="hum245ukrService.deleteDetail" parameterType="Map">		/* 삭제 */
	     DELETE
	       FROM    HUM260T
	      WHERE     1=1
	        AND     COMP_CODE           = #{S_COMP_CODE}
			AND  	PERSON_NUMB			= #{PERSON_NUMB}   -- LOOP
	        AND     PAYSTEP_YYYYMMDD    = #{PAYSTEP_YYYYMMDD}
	        AND     PAYSTEP_GUBUN       = #{PAYSTEP_GUBUN}
	        AND     APPLY_YN            = 'N'  
	</delete>
</mapper>