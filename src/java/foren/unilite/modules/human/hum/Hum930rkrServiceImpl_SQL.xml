<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "hum930rkrServiceImpl">
	<select id="hum930rkrServiceImpl.selectListToPrint1" parameterType="Map" resultType="rMap">
		--hum930rkr.Chum930rkr[fnHum932nQ]-Case1
		SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		            ELSE B.AF_DEPT_CODE
		        END DEPT_CODE
		     , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		            ELSE B.AF_DEPT_NAME
		        END DEPT_NAME
		     , ISNULL(C.CODE_NAME, (SELECT CODE_NAME
		                              FROM BSA100T
		                             WHERE COMP_CODE = #{S_COMP_CODE}
		                               AND MAIN_CODE = 'H005'
		                               AND SUB_CODE  = A.POST_CODE)) CODE_NAME
		     , CASE WHEN ISNULL(B.PERSON_NUMB,'')  = '' THEN A.PERSON_NUMB
		            ELSE B.PERSON_NUMB
		        END PERSON_NUMB
		     , CASE WHEN ISNULL(B.POST_CODE,'')    = '' THEN A.POST_CODE
		            ELSE B.POST_CODE
		        END POST_CODE
		  FROM      HUM100T A WITH(NOLOCK)
		  LEFT JOIN (SELECT X.COMP_CODE
		                  , X.AF_DEPT_CODE 
		                  , X.AF_DEPT_NAME
		                  , X.PERSON_NUMB
		                  , X.POST_CODE
		                  , X.ANNOUNCE_DATE
		               FROM       HUM760T X WITH(NOLOCK)
		               INNER JOIN (SELECT COMP_CODE
		                                , PERSON_NUMB
		                                , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                             FROM HUM760T WITH(NOLOCK)
		                            WHERE COMP_CODE      = #{S_COMP_CODE}
		                              AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                            GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                              AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                              AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON B.COMP_CODE   = A.COMP_CODE
		                                                                                                    AND B.PERSON_NUMB = A.PERSON_NUMB
		  LEFT OUTER JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE   = #{S_COMP_CODE}
		                                        AND C.MAIN_CODE   = 'H005'
		                                        AND C.SUB_CODE    = B.POST_CODE
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                           
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		   AND JOIN_DATE     &lt;= #{ANN_DATE}
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND  A.DIV_CODE    = #{DIV_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		   AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		   AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		   AND A.PAY_GUBUN    = #{PAY_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE     = #{PAY_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		</if>
		 GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, C.CODE_NAME
		        , A.PERSON_NUMB , B.PERSON_NUMB, A.POST_CODE   , B.POST_CODE
	</select>
	<select id="hum930rkrServiceImpl.selectListToPrint2" parameterType="Map" resultType="rMap">
		--hum930rkr.Chum930rkr[fnHum932nQ]-Case2
		SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		            ELSE B.AF_DEPT_CODE
		        END DEPT_CODE
		     , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		            ELSE B.AF_DEPT_NAME
		        END DEPT_NAME
		     , C.CODE_NAME
		     , CASE WHEN ISNULL(B.PERSON_NUMB,'') = '' THEN A.PERSON_NUMB
		            ELSE B.PERSON_NUMB
		        END PERSON_NUMB
		     , A.SCHSHIP_CODE
		  FROM            HUM100T A WITH(NOLOCK)
		  LEFT OUTER JOIN BSA100T C WITH(NOLOCK)
		                   ON C.COMP_CODE = A.COMP_CODE
		                  AND C.MAIN_CODE = 'H009'
		                  AND C.SUB_CODE  = A.SCHSHIP_CODE
		  LEFT OUTER JOIN (SELECT X.COMP_CODE
		                        , X.AF_DEPT_CODE
		                        , X.AF_DEPT_NAME
		                        , X.PERSON_NUMB
		                        , X.ANNOUNCE_DATE 
		                     FROM        HUM760T X WITH(NOLOCK)
		                     INNER JOIN (SELECT COMP_CODE
		                                      , PERSON_NUMB
		                                      , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                                   FROM HUM760T WITH(NOLOCK)
		                                  WHERE COMP_CODE      = #{S_COMP_CODE}
		                                    AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                                  GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                                    AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                                    AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON A.COMP_CODE   = B.COMP_CODE
		                                                                                                          AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                                                                                              
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		   AND JOIN_DATE     &lt;= #{ANN_DATE}
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND  A.DIV_CODE    = #{DIV_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		   AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		   AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		   AND A.PAY_GUBUN    = #{PAY_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE     = #{PAY_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		</if>
		 GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, C.CODE_NAME
		        , A.PERSON_NUMB , B.PERSON_NUMB, A.SCHSHIP_CODE
	</select>
	<select id="hum930rkrServiceImpl.selectListToPrint3" parameterType="Map" resultType="rMap">
		--hum930rkr.Chum930rkr[fnHum932nQ]-Case3
		SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		            ELSE B.AF_DEPT_CODE
		        END DEPT_CODE
		     , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		            ELSE B.AF_DEPT_NAME
		        END DEPT_NAME
		     , (CASE WHEN A.ORI_JOIN_DATE != '00000000' AND A.ORI_JOIN_DATE != '' THEN (DATEDIFF(D, A.ORI_JOIN_DATE, #{ANN_DATE})/365) 
		             ELSE (DATEDIFF(D, A.JOIN_DATE, #{ANN_DATE})/365)
		         END) SYEAR
		     , CASE WHEN ISNULL(B.PERSON_NUMB,'') = '' THEN A.PERSON_NUMB
		            ELSE B.PERSON_NUMB
		        END PERSON_NUMB
		  FROM       HUM100T A WITH(NOLOCK)
		  LEFT JOIN (SELECT X.COMP_CODE
		                  , X.AF_DEPT_CODE
		                  , X.AF_DEPT_NAME
		                  , X.PERSON_NUMB
		                  , X.ANNOUNCE_DATE 
		               FROM            HUM760T X WITH(NOLOCK)
		               INNER JOIN (SELECT COMP_CODE
		                                , PERSON_NUMB
		                                , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                             FROM HUM760T WITH(NOLOCK)
		                            WHERE COMP_CODE      = #{S_COMP_CODE}
		                              AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                            GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                              AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                              AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON A.COMP_CODE   = B.COMP_CODE
		                                                                                                    AND A.PERSON_NUMB = B.PERSON_NUMB
		  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                       AND M1.COMPANY_CODE = '1'                                                                                                        
		 WHERE A.COMP_CODE    = #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		   AND JOIN_DATE     &lt;= #{ANN_DATE}
		   AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND  A.DIV_CODE    = #{DIV_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		   AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		   AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		   AND A.PAY_GUBUN    = #{PAY_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE     = #{PAY_CODE}
		</if> 
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		</if>
		 GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, A.ORI_JOIN_DATE
		        , A.JOIN_DATE   , A.PERSON_NUMB, B.PERSON_NUMB
	</select>


<!-- 20200806 추가 - CLIP REPORT 출력 추가 -->
	<select id="hum930rkrServiceImpl.selectClList" parameterType="Map" resultType="rMap">
		<if test="DOC_KIND == &quot;1&quot;">
		    /* 부서,직위별 인원현황 출력 (hum930rkr.Chum930rkr[fnHum932nQ]-Case1) */
		    SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		                ELSE B.AF_DEPT_CODE
		            END DEPT_CODE
		         , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		                ELSE B.AF_DEPT_NAME
		            END DEPT_NAME
		         , ISNULL(C.CODE_NAME, (SELECT CODE_NAME
		                                  FROM BSA100T
		                                 WHERE COMP_CODE = #{S_COMP_CODE}
		                                   AND MAIN_CODE = 'H005'
		                                   AND SUB_CODE  = A.POST_CODE)) CODE_NAME
		         , CASE WHEN ISNULL(B.PERSON_NUMB,'')  = '' THEN A.PERSON_NUMB
		                ELSE B.PERSON_NUMB
		            END PERSON_NUMB
		         , CASE WHEN ISNULL(B.POST_CODE,'')    = '' THEN A.POST_CODE
		                ELSE B.POST_CODE
		            END POST_CODE
		      FROM      HUM100T A WITH(NOLOCK)
		      LEFT JOIN (SELECT X.COMP_CODE
		                      , X.AF_DEPT_CODE 
		                      , X.AF_DEPT_NAME
		                      , X.PERSON_NUMB
		                      , X.POST_CODE
		                      , X.ANNOUNCE_DATE
		                   FROM       HUM760T X WITH(NOLOCK)
		                   INNER JOIN (SELECT COMP_CODE
		                                    , PERSON_NUMB
		                                    , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                                 FROM HUM760T WITH(NOLOCK)
		                                WHERE COMP_CODE      = #{S_COMP_CODE}
		                                  AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                                GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                                  AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                                  AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON B.COMP_CODE   = A.COMP_CODE
		                                                                                                        AND B.PERSON_NUMB = A.PERSON_NUMB
		      LEFT OUTER JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE   = #{S_COMP_CODE}
		                                            AND C.MAIN_CODE   = 'H005'
		                                            AND C.SUB_CODE    = B.POST_CODE
			  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                       AND M1.COMPANY_CODE = '1'                                                                                    
		     WHERE A.COMP_CODE    = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		       AND JOIN_DATE     &lt;= #{ANN_DATE}
		       AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND  A.DIV_CODE    = #{DIV_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		       AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		       AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		       AND A.PAY_GUBUN    = #{PAY_GUBUN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		       AND A.PAY_CODE     = #{PAY_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		       AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		    </if>
		     GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, C.CODE_NAME
		            , A.PERSON_NUMB , B.PERSON_NUMB, A.POST_CODE   , B.POST_CODE
		</if>
		<if test="DOC_KIND == &quot;2&quot;">
		    /* 부서,학력별 인원현황 출력 (hum930rkr.Chum930rkr[fnHum932nQ]-Case2) */
		    SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		                ELSE B.AF_DEPT_CODE
		            END DEPT_CODE
		         , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		                ELSE B.AF_DEPT_NAME
		            END DEPT_NAME
		         , C.CODE_NAME
		         , CASE WHEN ISNULL(B.PERSON_NUMB,'') = '' THEN A.PERSON_NUMB
		                ELSE B.PERSON_NUMB
		            END PERSON_NUMB
		         , A.SCHSHIP_CODE
		      FROM            HUM100T A WITH(NOLOCK)
		      LEFT OUTER JOIN BSA100T C WITH(NOLOCK)
		                       ON C.COMP_CODE = A.COMP_CODE
		                      AND C.MAIN_CODE = 'H009'
		                      AND C.SUB_CODE  = A.SCHSHIP_CODE
		      LEFT OUTER JOIN (SELECT X.COMP_CODE
		                            , X.AF_DEPT_CODE
		                            , X.AF_DEPT_NAME
		                            , X.PERSON_NUMB
		                            , X.ANNOUNCE_DATE 
		                         FROM        HUM760T X WITH(NOLOCK)
		                         INNER JOIN (SELECT COMP_CODE
		                                          , PERSON_NUMB
		                                          , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                                       FROM HUM760T WITH(NOLOCK)
		                                      WHERE COMP_CODE      = #{S_COMP_CODE}
		                                        AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                                      GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                                        AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                                        AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON A.COMP_CODE   = B.COMP_CODE
		                                                                                                              AND A.PERSON_NUMB = B.PERSON_NUMB
		      
			  LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                       AND M1.COMPANY_CODE = '1'                                                                                                                                                                                            
		     WHERE A.COMP_CODE    = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		       AND JOIN_DATE     &lt;= #{ANN_DATE}
		       AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND  A.DIV_CODE    = #{DIV_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		       AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		       AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		       AND A.PAY_GUBUN    = #{PAY_GUBUN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		       AND A.PAY_CODE     = #{PAY_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		       AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		    </if>
		     GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, C.CODE_NAME
		            , A.PERSON_NUMB , B.PERSON_NUMB, A.SCHSHIP_CODE
		</if>
		<if test="DOC_KIND == &quot;3&quot;">
		    /* 부서,근속별 인원현황 출력 (hum930rkr.Chum930rkr[fnHum932nQ]-Case3) */
		    SELECT CASE WHEN ISNULL(B.AF_DEPT_CODE,'') = '' THEN A.DEPT_CODE
		                ELSE B.AF_DEPT_CODE
		            END DEPT_CODE
		         , CASE WHEN ISNULL(B.AF_DEPT_NAME,'') = '' THEN A.DEPT_NAME
		                ELSE B.AF_DEPT_NAME
		            END DEPT_NAME
		         , (CASE WHEN A.ORI_JOIN_DATE != '00000000' AND A.ORI_JOIN_DATE != '' THEN (DATEDIFF(D, A.ORI_JOIN_DATE, #{ANN_DATE})/365) 
		                 ELSE (DATEDIFF(D, A.JOIN_DATE, #{ANN_DATE})/365)
		             END) SYEAR
		         , CASE WHEN ISNULL(B.PERSON_NUMB,'') = '' THEN A.PERSON_NUMB
		                ELSE B.PERSON_NUMB
		            END PERSON_NUMB
		      FROM       HUM100T A WITH(NOLOCK)
		      LEFT JOIN (SELECT X.COMP_CODE
		                      , X.AF_DEPT_CODE
		                      , X.AF_DEPT_NAME
		                      , X.PERSON_NUMB
		                      , X.ANNOUNCE_DATE 
		                   FROM            HUM760T X WITH(NOLOCK)
		                   INNER JOIN (SELECT COMP_CODE
		                                    , PERSON_NUMB
		                                    , MAX(ANNOUNCE_DATE) ANNOUNCE_DATE
		                                 FROM HUM760T WITH(NOLOCK)
		                                WHERE COMP_CODE      = #{S_COMP_CODE}
		                                  AND ANNOUNCE_DATE &lt;= #{ANN_DATE}
		                                GROUP BY COMP_CODE, PERSON_NUMB) Y ON X.COMP_CODE     = Y.COMP_CODE
		                                                                  AND X.ANNOUNCE_DATE = Y.ANNOUNCE_DATE
		                                                                  AND X.PERSON_NUMB   = Y.PERSON_NUMB) B ON A.COMP_CODE   = B.COMP_CODE
		                                                                                                        AND A.PERSON_NUMB = B.PERSON_NUMB
		     LEFT JOIN HBS400T M1 WITH(NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                       AND M1.COMPANY_CODE = '1'                                                                                                      
		     WHERE A.COMP_CODE    = #{S_COMP_CODE}
		       AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		       AND (RETR_DATE     = '00000000' OR RETR_DATE &gt;= #{ANN_DATE})
		       AND JOIN_DATE     &lt;= #{ANN_DATE}
		       AND (M1.DAY_LABOR_RULE = '2' OR (M1.DAY_LABOR_RULE = '1' AND (A.PAY_GUBUN != '2' OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 = '2'))))
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND  A.DIV_CODE    = #{DIV_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
		       AND  A.DEPT_CODE  &gt;= #{FR_DEPT_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
		       AND  A.DEPT_CODE  &lt;= #{TO_DEPT_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		       AND A.PAY_GUBUN    = #{PAY_GUBUN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		       AND A.PAY_CODE     = #{PAY_CODE}
		    </if> 
		    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		       AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		    </if>
		     GROUP BY B.AF_DEPT_CODE, A.DEPT_CODE  , B.AF_DEPT_NAME, A.DEPT_NAME, A.ORI_JOIN_DATE
		            , A.JOIN_DATE   , A.PERSON_NUMB, B.PERSON_NUMB
		</if>
	</select>
</mapper>