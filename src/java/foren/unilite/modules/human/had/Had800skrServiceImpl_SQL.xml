<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had800skrServiceImpl">	
    
    <select id="had800skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD800SKR_160324'))
			DROP TABLE #HAD800SKR_160324
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HAD800SKR_160324_2'))
			DROP TABLE #HAD800SKR_160324_2
		
		CREATE TABLE #HAD800SKR_160324 (
			  GUBUN			NVARCHAR(01)
			, COMP_CODE		NVARCHAR(16)
			, DIV_CODE		NVARCHAR(16)
			, DEPT_CODE		NVARCHAR(16)
			, DEPT_NAME		NVARCHAR(60)
			, POST_CODE		NVARCHAR(4)
			, PERSON_NUMB	NVARCHAR(20)
			, NAME			NVARCHAR(60)
			, REPRE_NUM		NVARCHAR(30)
			, PAY_YYYYMM	NVARCHAR(16)
			, PAYGUBN		NVARCHAR(200)
			, SUPPDATE		NVARCHAR(16)
			, SUPPTOTAL		NUMERIC(30, 6)
			, TAXAMOUNT		NUMERIC(30, 6)
			, NONTAXAMOUNT	NUMERIC(30, 6)
			, NONTAXAMOUNT2	NUMERIC(30, 6)
			, ANU			NUMERIC(30, 6)
			, MED			NUMERIC(30, 6)
			, HIR			NUMERIC(30, 6)
			, BUSISHAREI	NUMERIC(18, 0)
			, SUDK			NUMERIC(30, 6)
			, JUMIN			NUMERIC(30, 6)
			, PAYCODE		NVARCHAR(200)
			, TAXCODE		NVARCHAR(200)
		)
		INSERT INTO	#HAD800SKR_160324 (
			  GUBUN		
			, COMP_CODE	
			, DIV_CODE		
			, DEPT_CODE		
			, DEPT_NAME		
			, POST_CODE		
			, PERSON_NUMB	
			, NAME			
			, REPRE_NUM		
			, PAY_YYYYMM
			, PAYGUBN		
			, SUPPDATE
			, SUPPTOTAL		
			, TAXAMOUNT		
			, NONTAXAMOUNT	
			, NONTAXAMOUNT2	
			, ANU			
			, MED			
			, HIR			
			, BUSISHAREI	
			, SUDK			
			, JUMIN			
			, PAYCODE		
			, TAXCODE
		)		
		--had800skr.Chad800skr SetHad800[fnHad800nQ]                                                          
		SELECT 
			   '1'			AS GUBUN
			 , HPA60.COMP_CODE
			 , HUM.DIV_CODE                                                                 
		     , HUM.DEPT_CODE                                                                
		     , HUM.DEPT_NAME                                                                
		     , HUM.POST_CODE                                                                
		     , HPA60.PERSON_NUMB AS PERSON_NUMB                                             
		     , HUM.NAME AS NAME                                                             
		     , unilite.fnCipherDecrypt(HUM.REPRE_NUM, 'RR') AS REPRE_NUM            
		     , uniLITE.fnGetUserDateComp(HPA60.COMP_CODE, HPA60.PAY_YYYYMM) AS PAY_YYYYMM
		     , M.CODE_NAME AS PAYGUBN
		     , (CASE WHEN HPA60.SUPP_DATE != '00000000' AND HPA60.SUPP_DATE != ''           
		                  THEN uniLITE.fnGetUserDateComp(HPA60.COMP_CODE, HPA60.SUPP_DATE)
		                  ELSE ''                                                           
		         END) AS SUPPDATE     
		     , (HPA60.SUPP_TOTAL_I + ISNULL(HWE01A.GIVE_I, 0)) AS SUPPTOTAL                                              
		     , (CASE WHEN (HPA60.SUPP_TYPE = '1' OR M.REF_CODE1 = '1' )                     
	                  THEN HPA60.SUPP_TOTAL_I - ISNULL(HPA30.AMOUNT_I,0) - ISNULL(D.AMOUNT_I,0)
	                  ELSE HPA60.BONUS_TAX_I                                            
	            END) - ISNULL(HPA60.NON_TAX_I ,0) + ISNULL(HWE01A.TAX_I, 0) AS TAXAMOUNT                                                   
		     , ISNULL(HPA30.AMOUNT_I, 0) + ISNULL(HWE01A.NON_TAX_I, 0) AS NONTAXAMOUNT      
		     , ISNULL(D.AMOUNT_I, 0)                          AS NONTAXAMOUNT2 --미제출비과세
		     , (SELECT SUM(ISNULL(A.DED_AMOUNT_I,0))                                        
		          FROM            HPA400T A WITH (NOLOCK)
		               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                                 AND B.MAIN_CODE            = 'H034'            --공제코드
		                                                 AND B.SUB_CODE             = A.DED_CODE
		                                                 AND ISNULL(B.REF_CODE4, A.DED_CODE) = 'ANU'    --국민연금
		         WHERE A.COMP_CODE   = HPA60.COMP_CODE                                      
		           AND A.PAY_YYYYMM  = HPA60.PAY_YYYYMM                                     
		           AND A.PERSON_NUMB = HPA60.PERSON_NUMB                                    
		           AND A.SUPP_TYPE   = HPA60.SUPP_TYPE) AS ANU                              
		     , (SELECT SUM(ISNULL(A.DED_AMOUNT_I,0))                                        
		          FROM            HPA400T A WITH (NOLOCK)
		               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                                 AND B.MAIN_CODE            = 'H034'            --공제코드
		                                                 AND B.SUB_CODE             = A.DED_CODE
		                                                 AND ISNULL(B.REF_CODE4, A.DED_CODE) IN ('MED','RME','LCI')   --건강보험
		         WHERE A.COMP_CODE   = HPA60.COMP_CODE                                      
		           AND A.PAY_YYYYMM  = HPA60.PAY_YYYYMM                                     
		           AND A.PERSON_NUMB = HPA60.PERSON_NUMB                                    
		           AND A.SUPP_TYPE   = HPA60.SUPP_TYPE) AS MED                              
		     , (SELECT SUM(ISNULL(A.DED_AMOUNT_I,0))                                        
		          FROM            HPA400T A WITH (NOLOCK)
		               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                                 AND B.MAIN_CODE            = 'H034'            --공제코드
		                                                 AND B.SUB_CODE             = A.DED_CODE
		                                                 AND ISNULL(B.REF_CODE4, A.DED_CODE) = 'HIR'    --고용보험
		         WHERE A.COMP_CODE   = HPA60.COMP_CODE                                      
		           AND A.PAY_YYYYMM  = HPA60.PAY_YYYYMM                                     
		           AND A.PERSON_NUMB = HPA60.PERSON_NUMB                                    
		           AND A.SUPP_TYPE   = HPA60.SUPP_TYPE) AS HIR                              
		     , HPA60.BUSI_SHARE_I AS BUSISHAREI                                             
		     , (SELECT SUM(ISNULL(A.DED_AMOUNT_I,0))                                        
		          FROM            HPA400T A WITH (NOLOCK)
		               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                                 AND B.MAIN_CODE            = 'H034'            --공제코드
		                                                 AND B.SUB_CODE             = A.DED_CODE
		                                                 AND ISNULL(B.REF_CODE4, A.DED_CODE) = 'INC'    --소득세
		         WHERE A.COMP_CODE   = HPA60.COMP_CODE                                      
		           AND A.PAY_YYYYMM  = HPA60.PAY_YYYYMM                                     
		           AND A.PERSON_NUMB = HPA60.PERSON_NUMB                                    
		           AND A.SUPP_TYPE   = HPA60.SUPP_TYPE) AS SUDK                             
		     , (SELECT SUM(ISNULL(A.DED_AMOUNT_I,0))                                        
		          FROM            HPA400T A WITH (NOLOCK)
		               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                                 AND B.MAIN_CODE            = 'H034'            --공제코드
		                                                 AND B.SUB_CODE             = A.DED_CODE
		                                                 AND ISNULL(B.REF_CODE4, A.DED_CODE) = 'LOC'    --주민세
		         WHERE A.COMP_CODE   = HPA60.COMP_CODE                                      
		           AND A.PAY_YYYYMM  = HPA60.PAY_YYYYMM                                     
		           AND A.PERSON_NUMB = HPA60.PERSON_NUMB                                    
		           AND A.SUPP_TYPE   = HPA60.SUPP_TYPE) AS JUMIN                            
		     , (SELECT CODE_NAME                                                            
		          FROM BSA100T                                                              
		         WHERE COMP_CODE = HPA60.COMP_CODE                                          
		           AND MAIN_CODE = 'H028'                                                   
		           AND SUB_CODE  = HPA60.PAY_CODE) AS PAYCODE                               
		     , (SELECT CODE_NAME                                                            
		          FROM BSA100T                                                              
		         WHERE COMP_CODE = HPA60.COMP_CODE                                          
		           AND MAIN_CODE = 'H029'                                                   
		           AND SUB_CODE  = HPA60.TAX_CODE) AS TAXCODE                               
		  FROM HPA600T HPA60                                                                
	       INNER JOIN HUM100T HUM                                           
	               ON HPA60.COMP_CODE   = HUM.COMP_CODE                       
	              AND HPA60.PERSON_NUMB = HUM.PERSON_NUMB                   
	        LEFT JOIN (SELECT A.COMP_CODE
	                        , A.PERSON_NUMB
	                        , A.PAY_YYYYMM
	                        , A.SUPP_TYPE
	                        , SUM(ISNULL(A.LIMIT_PAY_SUPP_I, 0)) AS AMOUNT_I
	                     FROM HPA800T A INNER JOIN HUM100T B
	                                       ON A.COMP_CODE = B.COMP_CODE
	                                      AND A.PERSON_NUMB = B.PERSON_NUMB
	                                    INNER JOIN HBS120T C
	                                       ON C.COMP_CODE = A.COMP_CODE
	                                      AND C.TAX_YYYY = LEFT(A.PAY_YYYYMM, 4)
	                                      AND C.NONTAX_CODE = A.NONTAX_CODE
	                    WHERE A.COMP_CODE =  #{S_COMP_CODE}
	                      AND C.TAX_YYYY = LEFT(#{PAY_YYYYMM_FR}, 4)
	                      AND C.SEND_YN     = 'Y'
	                    GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) HPA30
	                ON HPA60.COMP_CODE = HPA30.COMP_CODE
	               AND HPA60.PERSON_NUMB = HPA30.PERSON_NUMB
	               AND HPA60.PAY_YYYYMM  = HPA30.PAY_YYYYMM
	               AND HPA60.SUPP_TYPE   = HPA30.SUPP_TYPE
	         LEFT JOIN (SELECT A.COMP_CODE
	                        , A.PERSON_NUMB
	                        , A.PAY_YYYYMM
	                        , A.SUPP_TYPE
	                        , SUM(ISNULL(A.LIMIT_PAY_SUPP_I, 0)) AS AMOUNT_I
	                     FROM HPA800T A INNER JOIN HUM100T B
	                                       ON A.COMP_CODE = B.COMP_CODE
	                                      AND A.PERSON_NUMB = B.PERSON_NUMB
	                                    INNER JOIN HBS120T C
	                                       ON C.COMP_CODE = A.COMP_CODE
	                                      AND C.TAX_YYYY = LEFT(A.PAY_YYYYMM, 4)
	                                      AND C.NONTAX_CODE = A.NONTAX_CODE
	                    WHERE A.COMP_CODE =  #{S_COMP_CODE}
	                      AND C.TAX_YYYY = LEFT(#{PAY_YYYYMM_FR}, 4)
	                      AND C.SEND_YN     = 'N'
	                    GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) D
	                ON HPA60.COMP_CODE = D.COMP_CODE
	               AND HPA60.PERSON_NUMB = D.PERSON_NUMB
	               AND HPA60.PAY_YYYYMM  = D.PAY_YYYYMM
	               AND HPA60.SUPP_TYPE   = D.SUPP_TYPE
	         LEFT JOIN (SELECT A.COMP_CODE
	                         , A.PERSON_NUMB
	                         , A.PAY_YYYYMM
	                         , A.SUPP_TYPE
	                         , SUM(ISNULL(A.GIVE_I, 0)) AS GIVE_I
	                         , SUM(ISNULL(A.TAX_I, 0)) AS TAX_I
	                         , SUM(ISNULL(A.NON_TAX_I, 0)) AS NON_TAX_I
	                      FROM HWE010T A INNER JOIN HUM100T B
	                                        ON A.COMP_CODE = B.COMP_CODE
	                                       AND A.PERSON_NUMB = B.PERSON_NUMB
	                                     INNER JOIN HWE100T C
	                                        ON A.COMP_CODE = C.COMP_CODE
	                                       AND A.WEL_LEVEL1 = C.WEL_LEVEL1
	                                       AND A.WEL_LEVEL2 = C.WEL_LEVEL2
	                                       AND A.WEL_CODE   = C.WEL_CODE
	                     WHERE A.COMP_CODE =  #{S_COMP_CODE}
	                       AND C.YEAR_CALCU = 'Y'
	                       AND ((C.WAGES_CODE IS NULL) OR (C.WAGES_CODE = '')) --'급여반영 할 경우 HPA800T에 들어가 있으므로 'N'값만 처리
	                     GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) HWE01A
	                 ON HPA60.COMP_CODE = HWE01A.COMP_CODE
	                AND HPA60.PERSON_NUMB = HWE01A.PERSON_NUMB
	                AND HPA60.PAY_YYYYMM  = HWE01A.PAY_YYYYMM
	                AND HPA60.SUPP_TYPE   = HWE01A.SUPP_TYPE
	         LEFT JOIN (SELECT A.COMP_CODE
	                         , A.PERSON_NUMB
	                         , A.PAY_YYYYMM
	                         , A.SUPP_TYPE
	                         , SUM(ISNULL(A.NON_TAX_I, 0)) AS NON_TAX_I
	                    FROM HWE010T A INNER JOIN HUM100T B
	                                      ON A.COMP_CODE = B.COMP_CODE
	                                     AND A.PERSON_NUMB = B.PERSON_NUMB
	                                   INNER JOIN HWE100T C
	                                      ON A.COMP_CODE = C.COMP_CODE
	                                     AND A.WEL_LEVEL1 = C.WEL_LEVEL1
	                                     AND A.WEL_LEVEL2 = C.WEL_LEVEL2
	                                     AND A.WEL_CODE   = C.WEL_CODE
	                   WHERE A.COMP_CODE =  #{S_COMP_CODE}
	                     AND C.TAX_CODE IN ('2','4')
	                     AND C.YEAR_CALCU = 'Y'
	                     AND ((C.WAGES_CODE IS NULL) OR (C.WAGES_CODE = '')) --'급여반영 할 경우 HPA800T에 들어가 있으므로 'N'값만 처리
	                   GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) HWE01B
	               ON HPA60.COMP_CODE = HWE01A.COMP_CODE
	              AND HPA60.PERSON_NUMB = HWE01A.PERSON_NUMB
	              AND HPA60.PAY_YYYYMM  = HWE01A.PAY_YYYYMM
	              AND HPA60.SUPP_TYPE   = HWE01A.SUPP_TYPE        
	      LEFT JOIN BSA100T AS M   ON M.COMP_CODE = HPA60.COMP_CODE
	                              AND M.MAIN_CODE = 'H032'
	                              AND M.SUB_CODE  = HPA60.SUPP_TYPE 
	      LEFT JOIN BSA100T AS P1  ON P1.COMP_CODE = HUM.COMP_CODE
	                              AND P1.MAIN_CODE = 'H024'
	                              AND P1.SUB_CODE  = HUM.EMPLOY_TYPE 
		 WHERE HPA60.COMP_CODE = #{S_COMP_CODE}
		   AND ((HPA60.PAY_GUBUN != '2')  OR (HPA60.PAY_GUBUN = '2' AND HPA60.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함
		 <if test="DATE_GUBUN != &quot;2&quot;">
           	AND HPA60.PAY_YYYYMM &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
           	AND HPA60.PAY_YYYYMM &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
         </if>
         <if test="DATE_GUBUN == &quot;2&quot;">
           	AND LEFT(HPA60.SUPP_DATE,6) &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
  			AND LEFT(HPA60.SUPP_DATE,6) &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
  			AND LEFT(HPA60.PAY_YYYYMM,4)    = LEFT(#{PAY_YYYYMM_FR}, 4)
         </if>
		 <if test="RDO_USE == &quot;N&quot;">
		   AND (HUM.RETR_DATE = '00000000' OR HUM.RETR_DATE = '')                               
		 </if>                                                                   
		 <if test="@foren.Ognl@isNotEmpty(PAU_SUPP_TYPE)">                       
		   AND HPA60.SUPP_TYPE = #{PAU_SUPP_TYPE}                                
		 </if>                                                                   
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FR)">                        
		   AND HUM.RETR_DATE &gt;= #{RETR_DATE_FR}                               
		 </if>                                                                   
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">                        
		   AND HUM.RETR_DATE &lt;= #{RETR_DATE_TO}                               
		 </if>                                                                   
		 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">                            
		   AND HPA60.PAY_CODE = #{PAY_CODE}                                      
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		   AND HPA60.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND HUM.DIV_CODE = #{DIV_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
		   AND     HUM.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND HUM.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		   AND HUM.EMPLOY_TYPE = #{EMPLOY_TYPE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">
		   AND P1.REF_CODE1 = #{EMPLOY_GROUP}
		 </if>
	UNION ALL
		SELECT 
			   '1'			AS GUBUN
			 , HUM.COMP_CODE
			 , HUM.DIV_CODE                                                              
		     , HUM.DEPT_CODE                                                             
		     , HUM.DEPT_NAME                                                             
		     , HUM.POST_CODE                                                             
		     , HAD.PERSON_NUMB AS PERSON_NUMB                                            
		     , HUM.NAME AS NAME                                                          
		     , unilite.fnCipherDecrypt(HUM.REPRE_NUM, 'RR') AS REPRE_NUM         
		     , (CASE WHEN HAD.SUPP_DATE != '00000000' AND HAD.SUPP_DATE != ''            
		                  THEN CONVERT(VARCHAR(7),CONVERT(DATETIME,HAD.SUPP_DATE),120)   
		                  ELSE ''                                                        
		         END) AS PAY_YYYYMM                                                      
		     , (uniLITE.fnGetTxt('H0034') + ' ' + '[' + (SELECT CODE_NAME                
		                                                                        FROM BSA100T                  
		                                                                       WHERE COMP_CODE = HAD.COMP_CODE
		                                                                         AND MAIN_CODE = 'H039'       
		                                                                         AND SUB_CODE  = HAD.WAGES_CODE) + ']') AS PAYGUBN
		     , (CASE WHEN HAD.SUPP_DATE != '00000000' AND HAD.SUPP_DATE != ''            
		                  THEN CONVERT(VARCHAR(10),CONVERT(DATETIME,HAD.SUPP_DATE),120)  
		                  ELSE ''                                                        
		         END) AS SUPPDATE                                                        
		     , HAD.SUPP_TOTAL_I AS SUPPTOTAL                                             
		     , HAD.TAX_AMOUNT_I AS TAXAMOUNT                   
		     , CASE WHEN C.SEND_YN = 'Y' THEN HAD.NON_TAX_AMOUNT_I ELSE 0 END AS NONTAXAMOUNT  --제출비과세
	     	 , CASE WHEN C.SEND_YN = 'N' THEN HAD.NON_TAX_AMOUNT_I ELSE 0 END AS NONTAXAMOUNT2 --미제출비과세                            
		     , 0 AS ANU                                                                  
		     , 0 AS MED                                                                  
		     , HAD.HIRE_INSUR_I AS HIR                                                   
		     , 0 AS BUSISHAREI                                                           
		     , HAD.IN_TAX_I AS SUDK                                                      
		     , HAD.LOCAL_TAX_I AS JUMIN                                             
	      	 , M1.CODE_NAME      AS PAYCODE
	      	 , M2.CODE_NAME      AS TAXCODE         
		  FROM 		 HAD700T HAD                                                               
          INNER JOIN HUM100T HUM    ON HAD.COMP_CODE = HUM.COMP_CODE                        
                 				   AND HAD.PERSON_NUMB = HUM.PERSON_NUMB
           LEFT JOIN HBS120T AS C  WITH (NOLOCK) ON C.COMP_CODE   = HAD.COMP_CODE
	                                             AND C.NONTAX_CODE = HAD.NON_TAX_CODE
	                                             AND C.TAX_YYYY    = LEFT(#{PAY_YYYYMM_FR}, 4)    
	       LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = HAD.COMP_CODE
	                                             AND M1.MAIN_CODE  = 'H028'
	                                             AND M1.SUB_CODE   = HUM.PAY_CODE
	       LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = HAD.COMP_CODE
	                                             AND M2.MAIN_CODE  = 'H029'
	                                             AND M2.SUB_CODE   = HUM.TAX_CODE              
           LEFT JOIN BSA100T AS P1  ON P1.COMP_CODE = HUM.COMP_CODE
                                   AND P1.MAIN_CODE = 'H024'
                                   AND P1.SUB_CODE  = HUM.EMPLOY_TYPE
		 WHERE HAD.COMP_CODE 	 = #{S_COMP_CODE}                                    
		  <if test="DATE_GUBUN != &quot;2&quot;">
           	AND HAD.PAY_YYYYMM &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
           	AND HAD.PAY_YYYYMM &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
         </if>
         <if test="DATE_GUBUN == &quot;2&quot;">
           	AND LEFT(HAD.SUPP_DATE,6) &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
  			AND LEFT(HAD.SUPP_DATE,6) &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
  			AND LEFT(HAD.PAY_YYYYMM,4)    = LEFT(#{PAY_YYYYMM_FR}, 4)
         </if>
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FR)">  
		   AND HUM.RETR_DATE &gt;= #{RETR_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">  
		   AND HUM.RETR_DATE &lt;= #{RETR_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
		   AND HUM.PAY_CODE = #{PAY_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">		   
		   AND HUM.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">		   
		   AND HUM.DIV_CODE = #{DIV_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		   
		   AND HUM.DEPT_CODE &gt;= #{DEPT_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">		   
		   AND HUM.DEPT_CODE &lt;= #{DEPT_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">		   
		   AND HUM.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">		   
		   AND HUM.EMPLOY_TYPE = #{EMPLOY_TYPE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">		   
		   AND P1.REF_CODE1 = #{EMPLOY_GROUP}
		 </if>  
	
	UNION ALL
	
	 SELECT 
		    '1'			AS GUBUN
		  , B.COMP_CODE
		  , B.DIV_CODE
	      , B.DEPT_CODE
	      , B.DEPT_NAME
	      , B.POST_CODE      
	      , A.PERSON_NUMB
	      , B.NAME     
	      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')          AS REPRE_NUM 
	      , uniLITE.fnGetUserDateComp(#{S_COMP_CODE} , A.PAY_YYYYMM) AS PAY_YYYYMM
	      , '주식매수선택권'                                      AS PAYGUBN
	      , uniLITE.fnGetUserDateComp(#{S_COMP_CODE} , A.SUPP_DATE)  AS SUPP_DATE
	      , A.PROFIT_I        AS SUPPTOTAL
	      , A.TAX_AMOUNT_I    AS TAXAMOUNT
	      , A.TAX_EXEMPTION_I AS NONTAXAMOUNT
	      , 0                 AS NONTAXAMOUNT2
	      , 0                 AS ANU
	      , 0                 AS MED
	      , A.HIR_TAX_I       AS HIR
	      , 0                 AS BUSISHAREI
	      , A.IN_TAX_I        AS INC
	      , A.LOC_TAX_I       AS LOC
	      , M1.CODE_NAME      AS PAYCODE
	      , M2.CODE_NAME      AS TAXCODE
	   FROM            HPA810T AS  A WITH(NOLOCK)
	        INNER JOIN HUM100T AS  B WITH(NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
	                                               AND B.PERSON_NUMB = A.PERSON_NUMB
	         LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
	                                               AND M1.MAIN_CODE  = 'H028'
	                                               AND M1.SUB_CODE   = B.PAY_CODE
	         LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = A.COMP_CODE
	                                               AND M2.MAIN_CODE  = 'H029'
	                                               AND M2.SUB_CODE   = B.TAX_CODE
	         LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE  = B.COMP_CODE
	                                               AND M3.MAIN_CODE  = 'H024'
	                                               AND M3.SUB_CODE   = B.EMPLOY_TYPE
	     WHERE A.COMP_CODE 	 = #{S_COMP_CODE}  
	       AND ((B.PAY_GUBUN != '2')  OR (B.PAY_GUBUN = '2' AND B.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함                                  
		 <if test="DATE_GUBUN != &quot;2&quot;">
           	AND A.PAY_YYYYMM &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
           	AND A.PAY_YYYYMM &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
         </if>
         <if test="DATE_GUBUN == &quot;2&quot;">
           	AND LEFT(A.SUPP_DATE,6) &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
  			AND LEFT(A.SUPP_DATE,6) &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
  			AND LEFT(A.PAY_YYYYMM,4)    = LEFT(#{PAY_YYYYMM_FR}, 4)
         </if>
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FR)">  
		   AND B.RETR_DATE &gt;= #{RETR_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">  
		   AND B.RETR_DATE &lt;= #{RETR_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
		   AND B.PAY_CODE = #{PAY_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">		   
		   AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">		   
		   AND B.DIV_CODE = #{DIV_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		   
		   AND B.DEPT_CODE &gt;= #{DEPT_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">		   
		   AND B.DEPT_CODE &lt;= #{DEPT_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">		   
		   AND B.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">		   
		   AND B.EMPLOY_TYPE = #{EMPLOY_TYPE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">		   
		   AND M3.REF_CODE1 = #{EMPLOY_GROUP}
		 </if>  
	UNION ALL
	    SELECT 
			'1'			AS GUBUN
		  , B.COMP_CODE
		  , B.DIV_CODE
	      , B.DEPT_CODE
	      , B.DEPT_NAME
	      , B.POST_CODE      
	      , A.PERSON_NUMB
	      , B.NAME     
	      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')          AS REPRE_NUM 
	      , uniLITE.fnGetUserDateComp(#{S_COMP_CODE}, A.PAY_YYYYMM) AS PAY_YYYYMM
	      , '우리사주조합인출금'                                   AS PAYGUBN
	      , uniLITE.fnGetUserDateComp(#{S_COMP_CODE}, A.SUPP_DATE)  AS SUPP_DATE
	      , A.PAY_TOTAL_I     AS SUPPTOTAL
	      , A.TAX_AMOUNT_I    AS TAXAMOUNT
	      , A.TAX_EXEMPTION_I AS NONTAXAMOUNT
	      , 0                 AS NONTAXAMOUNT2
	      , 0                 AS ANU
	      , 0                 AS MED
	      , A.HIR_TAX_I       AS HIR
	      , 0                 AS BUSISHAREI
	      , A.IN_TAX_I        AS INC
	      , A.LOC_TAX_I       AS LOC
	      , M1.CODE_NAME      AS PAYCODE
	      , M2.CODE_NAME      AS TAXCODE
	   FROM            HPA820T AS A  WITH(NOLOCK)
	        INNER JOIN HUM100T AS B  WITH(NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
	                                               AND B.PERSON_NUMB = A.PERSON_NUMB
	         LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
	                                               AND M1.MAIN_CODE  = 'H028'
	                                               AND M1.SUB_CODE   = B.PAY_CODE
	         LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = A.COMP_CODE
	                                               AND M2.MAIN_CODE  = 'H029'
	                                               AND M2.SUB_CODE   = B.TAX_CODE
	         LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE  = B.COMP_CODE
	                                               AND M3.MAIN_CODE  = 'H024'
	                                               AND M3.SUB_CODE   = B.EMPLOY_TYPE                       
     WHERE A.COMP_CODE 	 = #{S_COMP_CODE}
      AND ((B.PAY_GUBUN != '2')  OR (B.PAY_GUBUN = '2' AND B.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함                                        
	 <if test="DATE_GUBUN != &quot;2&quot;">
       	AND A.PAY_YYYYMM &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
       	AND A.PAY_YYYYMM &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
     </if>
     <if test="DATE_GUBUN == &quot;2&quot;">
       	AND LEFT(A.SUPP_DATE,6) &gt;= LEFT(#{PAY_YYYYMM_FR}, 6)
		AND LEFT(A.SUPP_DATE,6) &lt;= LEFT(#{PAY_YYYYMM_TO}, 6)
		AND LEFT(A.PAY_YYYYMM,4)    = LEFT(#{PAY_YYYYMM_FR}, 4)
     </if>
	 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FR)">  
	   AND B.RETR_DATE &gt;= #{RETR_DATE_FR}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">  
	   AND B.RETR_DATE &lt;= #{RETR_DATE_TO}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">  
	   AND B.PAY_CODE = #{PAY_CODE}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">		   
	   AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">		   
	   AND B.DIV_CODE = #{DIV_CODE}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		   
	   AND B.DEPT_CODE &gt;= #{DEPT_CODE}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">		   
	   AND B.DEPT_CODE &lt;= #{DEPT_CODE2}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">		   
	   AND B.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">		   
	   AND B.EMPLOY_TYPE = #{EMPLOY_TYPE}
	 </if>  
	 <if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">		   
	   AND M3.REF_CODE1 = #{EMPLOY_GROUP}
	 </if>
		<if test="CHKCNT == &quot;on&quot;">	
			INSERT INTO 	#HAD800SKR_160324 (
				  GUBUN	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		
				, DEPT_NAME		
				, POST_CODE		
				, PERSON_NUMB	
				, NAME		
				, PAY_YYYYMM
				, SUPPDATE	
				, SUPPTOTAL		
				, TAXAMOUNT
				, NONTAXAMOUNT
				, NONTAXAMOUNT2
				, ANU
				, MED
				, HIR
				, BUSISHAREI
				, SUDK
				, JUMIN	)
			SELECT 
				 '2'	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		        
				, DEPT_NAME		        
				, POST_CODE		        
				, PERSON_NUMB	        
				, NAME		            
				, MAX(PAY_YYYYMM)       AS  PAY_YYYYMM   
				, MAX(SUPPDATE)	        AS  SUPPDATE     
				, SUM(SUPPTOTAL)		AS	SUPPTOTAL			
				, SUM(TAXAMOUNT)		AS	TAXAMOUNT    
				, SUM(NONTAXAMOUNT)		AS	NONTAXAMOUNT 
				, SUM(NONTAXAMOUNT2)	AS	NONTAXAMOUNT2 
				, SUM(ANU)				AS	ANU          
				, SUM(MED)				AS	MED          
				, SUM(HIR)				AS	HIR          
				, SUM(BUSISHAREI)		AS	BUSISHAREI   
				, SUM(SUDK)				AS	SUDK         
				, SUM(JUMIN)			AS	JUMIN		 
			 FROM	 #HAD800SKR_160324
			 GROUP BY COMP_CODE, DIV_CODE, DEPT_CODE, DEPT_NAME, POST_CODE, PERSON_NUMB, NAME	
			 
			 INSERT INTO 	#HAD800SKR_160324 (
				  GUBUN	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		
				, DEPT_NAME		
				, POST_CODE		
				, PERSON_NUMB	
				, NAME		
				, PAY_YYYYMM
				, SUPPDATE	
				, SUPPTOTAL		
				, TAXAMOUNT
				, NONTAXAMOUNT
				, NONTAXAMOUNT2
				, ANU
				, MED
				, HIR
				, BUSISHAREI
				, SUDK
				, JUMIN	)
			SELECT 
				 '3'	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		        	 
				, DEPT_NAME		        	 
				, POST_CODE		        	 
				, MAX(PERSON_NUMB)	    AS  PERSON_NUMB  
				, MAX(NAME)		        AS  NAME         
				, MAX(PAY_YYYYMM)       AS  PAY_YYYYMM   
				, MAX(SUPPDATE)	        AS  SUPPDATE     
				, SUM(SUPPTOTAL)		AS	SUPPTOTAL			
				, SUM(TAXAMOUNT)		AS	TAXAMOUNT    
				, SUM(NONTAXAMOUNT)		AS	NONTAXAMOUNT 
				, SUM(NONTAXAMOUNT2)	AS	NONTAXAMOUNT2 
				, SUM(ANU)				AS	ANU          
				, SUM(MED)				AS	MED          
				, SUM(HIR)				AS	HIR          
				, SUM(BUSISHAREI)		AS	BUSISHAREI   
				, SUM(SUDK)				AS	SUDK         
				, SUM(JUMIN)			AS	JUMIN		 
			 FROM	 #HAD800SKR_160324
			 WHERE GUBUN != 2
			 GROUP BY COMP_CODE, DIV_CODE, DEPT_CODE, DEPT_NAME, POST_CODE		
			 
			 INSERT INTO 	#HAD800SKR_160324 (
				  GUBUN	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		
				, DEPT_NAME		
				, POST_CODE		
				, PERSON_NUMB	
				, NAME		
				, PAY_YYYYMM
				, SUPPDATE	
				, SUPPTOTAL		
				, TAXAMOUNT
				, NONTAXAMOUNT
				, NONTAXAMOUNT2
				, ANU
				, MED
				, HIR
				, BUSISHAREI
				, SUDK
				, JUMIN	)
			SELECT 
				 '4'	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		        	 
				, DEPT_NAME		        	 
				, MAX(POST_CODE)		AS  POST_CODE	 
				, MAX(PERSON_NUMB)	    AS  PERSON_NUMB  
				, MAX(NAME)		        AS  NAME         
				, MAX(PAY_YYYYMM)       AS  PAY_YYYYMM   
				, MAX(SUPPDATE)	        AS  SUPPDATE     
				, SUM(SUPPTOTAL)		AS	SUPPTOTAL		
				, SUM(TAXAMOUNT)		AS	TAXAMOUNT    
				, SUM(NONTAXAMOUNT)		AS	NONTAXAMOUNT 
				, SUM(NONTAXAMOUNT2)	AS	NONTAXAMOUNT2 
				, SUM(ANU)				AS	ANU          
				, SUM(MED)				AS	MED          
				, SUM(HIR)				AS	HIR          
				, SUM(BUSISHAREI)		AS	BUSISHAREI   
				, SUM(SUDK)				AS	SUDK         
				, SUM(JUMIN)			AS	JUMIN		 
			 FROM	 #HAD800SKR_160324
			 WHERE GUBUN != 2	AND GUBUN != 3
			 GROUP BY COMP_CODE, DIV_CODE, DEPT_CODE, DEPT_NAME	
			 
			 INSERT INTO 	#HAD800SKR_160324 (
				  GUBUN	
				, COMP_CODE		
				, DIV_CODE		
				, DEPT_CODE		
				, DEPT_NAME		
				, POST_CODE		
				, PERSON_NUMB	
				, NAME		
				, PAY_YYYYMM
				, SUPPDATE	
				, SUPPTOTAL		
				, TAXAMOUNT
				, NONTAXAMOUNT
				, NONTAXAMOUNT2
				, ANU
				, MED
				, HIR
				, BUSISHAREI
				, SUDK
				, JUMIN	)
			SELECT 
				 '5'	
				, COMP_CODE		
				, DIV_CODE		
				, MAX(DEPT_CODE)		AS  DEPT_CODE	
				, MAX(DEPT_NAME)		AS  DEPT_NAME	
				, MAX(POST_CODE)		AS  POST_CODE	
				, MAX(PERSON_NUMB)		AS  PERSON_NUMB
				, MAX(NAME)				AS  NAME
				, MAX(PAY_YYYYMM)		AS  PAY_YYYYMM
				, MAX(SUPPDATE)			AS  SUPPDATE
				, SUM(SUPPTOTAL)		AS	SUPPTOTAL		
				, SUM(TAXAMOUNT)		AS	TAXAMOUNT
				, SUM(NONTAXAMOUNT)		AS	NONTAXAMOUNT
				, SUM(NONTAXAMOUNT2)	AS	NONTAXAMOUNT2
				, SUM(ANU)				AS	ANU
				, SUM(MED)				AS	MED
				, SUM(HIR)				AS	HIR
				, SUM(BUSISHAREI)		AS	BUSISHAREI
				, SUM(SUDK)				AS	SUDK
				, SUM(JUMIN)			AS	JUMIN		
			 FROM	 #HAD800SKR_160324
			 WHERE GUBUN != 2	AND GUBUN != 3	AND GUBUN != 4
			 GROUP BY COMP_CODE, DIV_CODE
		</if>
		 INSERT INTO 	#HAD800SKR_160324 (
			  GUBUN	
			, COMP_CODE		
			, DIV_CODE		
			, DEPT_CODE		
			, DEPT_NAME		
			, POST_CODE		
			, PERSON_NUMB	
			, NAME		
			, PAY_YYYYMM
			, SUPPDATE	
			, SUPPTOTAL		
			, TAXAMOUNT
			, NONTAXAMOUNT
			, NONTAXAMOUNT2
			, ANU
			, MED
			, HIR
			, BUSISHAREI
			, SUDK
			, JUMIN	)
		SELECT 
			 '6'	
			, COMP_CODE		
			, MAX(DIV_CODE)			AS  DIV_CODE	
			, MAX(DEPT_CODE)		AS  DEPT_CODE	
			, MAX(DEPT_NAME)		AS  DEPT_NAME	
			, MAX(POST_CODE)		AS  POST_CODE	
			, MAX(PERSON_NUMB)		AS  PERSON_NUMB
			, MAX(NAME)				AS  NAME
			, MAX(PAY_YYYYMM)		AS  PAY_YYYYMM
			, MAX(SUPPDATE)			AS  SUPPDATE
			, SUM(SUPPTOTAL)		AS	SUPPTOTAL		
			, SUM(TAXAMOUNT)		AS	TAXAMOUNT
			, SUM(NONTAXAMOUNT)		AS	NONTAXAMOUNT
			, SUM(NONTAXAMOUNT2)		AS	NONTAXAMOUNT2
			, SUM(ANU)				AS	ANU
			, SUM(MED)				AS	MED
			, SUM(HIR)				AS	HIR
			, SUM(BUSISHAREI)		AS	BUSISHAREI
			, SUM(SUDK)				AS	SUDK
			, SUM(JUMIN)			AS	JUMIN		
		 FROM	 #HAD800SKR_160324
		 WHERE GUBUN != 2	AND GUBUN != 3	AND GUBUN != 4	AND GUBUN != 5
		 GROUP BY COMP_CODE
		 
		SELECT
			ROW_NUMBER ( ) over (ORDER BY DIV_CODE, DEPT_CODE, POST_CODE, NAME, PERSON_NUMB, PAY_YYYYMM, GUBUN ASC)  SEQ 
			, GUBUN		
			, COMP_CODE	
			, DIV_CODE		
			, DEPT_CODE		
			, DEPT_NAME		
			, POST_CODE		
			, PERSON_NUMB	
			, NAME			
			, REPRE_NUM		
			, PAY_YYYYMM
			, PAYGUBN		
			, SUPPDATE
			, SUPPTOTAL		
			, TAXAMOUNT		
			, NONTAXAMOUNT	
			, NONTAXAMOUNT2	
			, ANU			
			, MED			
			, HIR			
			, BUSISHAREI	
			, SUDK			
			, JUMIN			
			, PAYCODE		
			, TAXCODE
         INTO #HAD800SKR_160324_2
         FROM   #HAD800SKR_160324
         ORDER BY DIV_CODE, DEPT_CODE, POST_CODE, NAME, PERSON_NUMB, PAY_YYYYMM, GUBUN ASC
         
        -- ALTER TABLE #HAD800SKR_160324_2 ADD SEQ INT IDENTITY(1,1)
         
         SELECT 
			  A.SEQ
			, A.GUBUN		
			, A.COMP_CODE	
			, A.DIV_CODE
			, (CASE WHEN A.GUBUN = '6' THEN '총계'
					WHEN A.GUBUN = '5' THEN '합계'
	   				ELSE B.DIV_NAME
		   	  END
		   	  )	AS	DIV_NAME		
			, A.DEPT_CODE		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN '합계'
	   				ELSE A.DEPT_NAME
		   	  END
		   	  )	AS	DEPT_NAME		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN '합계'
	   				ELSE C.CODE_NAME
		   	  END
		   	  )	AS	POST_CODE		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN '합계'
					ELSE A.PERSON_NUMB
		   	  END
		   	  )	AS	PERSON_NUMB			   	
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.NAME
		   	  END
		   	  )	AS	NAME	
		   	 
		   	--, A.NAME		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.REPRE_NUM
		   	  END
		   	  )	AS	REPRE_NUM		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.PAY_YYYYMM
		   	  END
		   	  )	AS	PAY_YYYYMM
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.PAYGUBN
		   	  END
		   	  )	AS	PAYGUBN		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.SUPPDATE
		   	  END
		   	  )	AS	SUPPDATE
			, A.SUPPTOTAL		
			, A.TAXAMOUNT		
			, A.NONTAXAMOUNT
			, A.NONTAXAMOUNT2	
			, A.ANU			
			, A.MED			
			, A.HIR			
			, A.BUSISHAREI	
			, A.SUDK			
			, A.JUMIN			
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.PAYCODE
		   	  END
		   	  )	AS	PAYCODE		
			, (CASE WHEN A.GUBUN = '6' THEN ''
					WHEN A.GUBUN = '5' THEN ''
					WHEN A.GUBUN = '4' THEN ''
					WHEN A.GUBUN = '3' THEN ''
					WHEN A.GUBUN = '2' THEN ''
					ELSE A.TAXCODE
		   	  END
		   	  )	AS	TAXCODE
         FROM   #HAD800SKR_160324_2	A
         INNER JOIN BOR120T B  WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
			 				 				AND A.DIV_CODE  = B.DIV_CODE
		 LEFT  JOIN BSA100T C  WITH (NOLOCK) ON C.COMP_CODE = #{S_COMP_CODE}    
                                            AND C.MAIN_CODE = 'H005'
                                            AND C.SUB_CODE  = A.POST_CODE 			 				 
			 				 
      ORDER BY SEQ
         
    </select>
    <select id="had800skrServiceImpl.selectListByEmployee" parameterType="Map" resultType="rMap">
    --had800skr.Chad800skr SetHad800[fnHad800nQ]
	DECLARE @COMP_CODE     NVARCHAR(08)
	      , @PAY_YYYYMM_FR NVARCHAR(06)
	      , @PAY_YYYYMM_TO NVARCHAR(06)
	      , @TAX_YYYY      NVARCHAR(04)
	      , @DIV_CODE      NVARCHAR(08)
	      , @SUPP_TYPE     NVARCHAR(02)
	      , @RETR_OPT      NVARCHAR(02)
	      , @RETR_SET      NVARCHAR(08)
	      , @RETR_DATE_FR  NVARCHAR(08)
	      , @RETR_DATE_TO  NVARCHAR(08)
	      , @PERSON_NUMB   NVARCHAR(10)
	      , @PAY_CODE      NVARCHAR(01)
	      , @PAY_PROV_FLAG NVARCHAR(01)
	      , @EMPLOY_TYPE   NVARCHAR(02)
	      , @PERSON_GROUP  NVARCHAR(10)
	
	 SET @COMP_CODE     = #{S_COMP_CODE}
	 SET @PAY_YYYYMM_FR = LEFT(#{PAY_YYYYMM_FR}, 6)
	 SET @PAY_YYYYMM_TO = LEFT(#{PAY_YYYYMM_TO}, 6)
	 SET @TAX_YYYY      = LEFT(@PAY_YYYYMM_FR, 4)
	 SET @DIV_CODE      = ''
	 SET @SUPP_TYPE     = ''
	 SET @RETR_OPT      = ''   --퇴사자 포함 한다: Y / 퇴사자 포함 안한다: N
	 SET @RETR_DATE_FR  = ''
	 SET @RETR_DATE_TO  = ''   
	 SET @PERSON_NUMB   = ''
	 SET @PAY_CODE      = '' 
	 SET @PAY_PROV_FLAG = ''
	 SET @EMPLOY_TYPE   = ''
	 SET @PERSON_GROUP  = ''
	 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	 SET @DIV_CODE      = #{DIV_CODE}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(PAU_SUPP_TYPE)">
	 SET @SUPP_TYPE     = #{PAU_SUPP_TYPE}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(ORDER_STATUS)">
	 SET @RETR_OPT      = #{ORDER_STATUS}   --퇴사자 포함 한다: Y / 퇴사자 포함 안한다: N
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FR)">
	 SET @RETR_DATE_FR  = #{RETR_DATE_FR}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">
	 SET @RETR_DATE_TO  = #{RETR_DATE_TO}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	 SET @PERSON_NUMB   = #{PERSON_NUMB}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	 SET @PAY_CODE      = #{PAY_CODE}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
	 SET @PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
	 SET @EMPLOY_TYPE   = #{EMPLOY_TYPE}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(EMPLOY_GROUP)">
	 SET @PERSON_GROUP  = #{EMPLOY_GROUP}
	 </if>
	
	 SELECT @RETR_SET = CASE WHEN @RETR_OPT = 'N' THEN '00000000'
	                         ELSE '%'
	                     END
	
	SELECT B.DIV_CODE
	     , B.DEPT_CODE
	     , B.DEPT_NAME
	     , B.POST_CODE
	     , A.PERSON_NUMB
	     , B.NAME
	     , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR') AS REPRE_NUM
	     , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
	     , M1.CODE_NAME AS PAYGUBN
	     , (CASE WHEN A.SUPP_DATE != '00000000' AND A.SUPP_DATE != ''
	                  THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.SUPP_DATE)
	             ELSE ''
	         END) AS SUPPDATE
	     , (A.SUPP_TOTAL_I + ISNULL(E.GIVE_I, 0)) AS SUPPTOTAL
	     , (CASE WHEN (A.SUPP_TYPE = '1' OR M1.REF_CODE1 = '1' )
	                  THEN A.SUPP_TOTAL_I - ISNULL(C.AMOUNT_I,0) - ISNULL(D.AMOUNT_I,0)
	                  ELSE A.BONUS_TAX_I    
	         END) - ISNULL(A.NON_TAX_I ,0) + ISNULL(E.TAX_I, 0) AS TAXAMOUNT
	     , ISNULL(C.AMOUNT_I, 0) + ISNULL(E.NON_TAX_I, 0) AS NONTAXAMOUNT  --제출비과세
	     , ISNULL(D.AMOUNT_I, 0)                          AS NONTAXAMOUNT2 --미제출비과세
	     , ISNULL(A.NON_TAX_I,0) AS NONTAXI
	     , (SELECT SUM(ISNULL(X.DED_AMOUNT_I,0))
	          FROM            HPA400T X WITH (NOLOCK)
	               INNER JOIN BSA100T Y WITH (NOLOCK) ON Y.COMP_CODE            = X.COMP_CODE
	                                                 AND Y.MAIN_CODE            = 'H034'            --공제코드
	                                                 AND Y.SUB_CODE             = X.DED_CODE
	                                                 AND ISNULL(Y.REF_CODE4, X.DED_CODE) = 'ANU'    --국민연금
	         WHERE X.COMP_CODE   = A.COMP_CODE
	           AND X.PAY_YYYYMM  = A.PAY_YYYYMM
	           AND X.PERSON_NUMB = A.PERSON_NUMB
	           AND X.SUPP_TYPE   = A.SUPP_TYPE) AS ANU
	     , (SELECT SUM(ISNULL(X.DED_AMOUNT_I,0))
	          FROM            HPA400T X WITH (NOLOCK)
	               INNER JOIN BSA100T Y WITH (NOLOCK) ON Y.COMP_CODE            = X.COMP_CODE
	                                                 AND Y.MAIN_CODE            = 'H034'            --공제코드
	                                                 AND Y.SUB_CODE             = X.DED_CODE
	                                                 AND ISNULL(Y.REF_CODE4, X.DED_CODE) IN ('MED','RME','LCI')   --건강보험
	         WHERE X.COMP_CODE   = A.COMP_CODE
	           AND X.PAY_YYYYMM  = A.PAY_YYYYMM
	           AND X.PERSON_NUMB = A.PERSON_NUMB
	           AND X.SUPP_TYPE   = A.SUPP_TYPE) AS MED
	     , (SELECT SUM(ISNULL(X.DED_AMOUNT_I,0))
	          FROM            HPA400T X WITH (NOLOCK)
	               INNER JOIN BSA100T Y WITH (NOLOCK) ON Y.COMP_CODE            = X.COMP_CODE
	                                                 AND Y.MAIN_CODE            = 'H034'            --공제코드
	                                                 AND Y.SUB_CODE             = X.DED_CODE
	                                                 AND ISNULL(Y.REF_CODE4, X.DED_CODE) = 'HIR'    --고용보험
	         WHERE X.COMP_CODE   = A.COMP_CODE
	           AND X.PAY_YYYYMM  = A.PAY_YYYYMM
	           AND X.PERSON_NUMB = A.PERSON_NUMB
	           AND X.SUPP_TYPE   = A.SUPP_TYPE) AS HIR
	     , A.BUSI_SHARE_I AS BUSISHAREI     
	     , (SELECT SUM(ISNULL(X.DED_AMOUNT_I,0))
	          FROM            HPA400T X WITH (NOLOCK)
	               INNER JOIN BSA100T Y WITH (NOLOCK) ON Y.COMP_CODE            = X.COMP_CODE
	                                                 AND Y.MAIN_CODE            = 'H034'            --공제코드
	                                                 AND Y.SUB_CODE             = X.DED_CODE
	                                                 AND ISNULL(Y.REF_CODE4, X.DED_CODE) = 'INC'    --소득세
	         WHERE X.COMP_CODE   = A.COMP_CODE
	           AND X.PAY_YYYYMM  = A.PAY_YYYYMM
	           AND X.PERSON_NUMB = A.PERSON_NUMB
	           AND X.SUPP_TYPE   = A.SUPP_TYPE) AS SUDK
	     , (SELECT SUM(ISNULL(X.DED_AMOUNT_I,0))
	          FROM            HPA400T X WITH (NOLOCK)
	               INNER JOIN BSA100T Y WITH (NOLOCK) ON Y.COMP_CODE            = X.COMP_CODE
	                                                 AND Y.MAIN_CODE            = 'H034'            --공제코드
	                                                 AND Y.SUB_CODE             = X.DED_CODE
	                                                 AND ISNULL(Y.REF_CODE4, X.DED_CODE) = 'LOC'    --주민세
	         WHERE X.COMP_CODE   = A.COMP_CODE
	           AND X.PAY_YYYYMM  = A.PAY_YYYYMM
	           AND X.PERSON_NUMB = A.PERSON_NUMB
	           AND X.SUPP_TYPE   = A.SUPP_TYPE) AS JUMIN
	     , M3.CODE_NAME AS PAYCODE
	     , M4.CODE_NAME AS TAXCODE
	  FROM             HPA600T A WITH (NOLOCK)
	        INNER JOIN HUM100T B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
	                                           AND A.PERSON_NUMB = B.PERSON_NUMB
	         LEFT JOIN (SELECT A.COMP_CODE
	                         , A.PERSON_NUMB
	                         , A.PAY_YYYYMM
	                         , A.SUPP_TYPE
	                         , SUM(ISNULL(A.LIMIT_PAY_SUPP_I, 0)) AS AMOUNT_I
	                      FROM            HPA800T A WITH (NOLOCK)
	                           INNER JOIN HUM100T B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
	                                                              AND A.PERSON_NUMB = B.PERSON_NUMB
	                           INNER JOIN HBS120T C WITH (NOLOCK)  ON C.COMP_CODE   = A.COMP_CODE
	                                                              AND C.TAX_YYYY    = LEFT(A.PAY_YYYYMM, 4)
	                                                              AND C.NONTAX_CODE = A.NONTAX_CODE
	                     WHERE A.COMP_CODE   = @COMP_CODE
	                       AND C.SEND_YN     = 'Y'
	                     GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) C ON A.COMP_CODE   = C.COMP_CODE
	                                                                                      AND A.PERSON_NUMB = C.PERSON_NUMB
	                                                                                      AND A.PAY_YYYYMM  = C.PAY_YYYYMM
	                                                                                      AND A.SUPP_TYPE   = C.SUPP_TYPE
	         LEFT JOIN (SELECT A.COMP_CODE
	                         , A.PERSON_NUMB
	                         , A.PAY_YYYYMM
	                         , A.SUPP_TYPE
	                         , SUM(ISNULL(A.LIMIT_PAY_SUPP_I, 0)) AS AMOUNT_I
	                      FROM            HPA800T A WITH (NOLOCK)
	                           INNER JOIN HUM100T B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
	                                                              AND A.PERSON_NUMB = B.PERSON_NUMB
	                           INNER JOIN HBS120T C WITH (NOLOCK)  ON C.COMP_CODE   = A.COMP_CODE
	                                                              AND C.TAX_YYYY    = LEFT(A.PAY_YYYYMM, 4)
	                                                              AND C.NONTAX_CODE = A.NONTAX_CODE
	                     WHERE A.COMP_CODE   = @COMP_CODE
	                       AND C.SEND_YN     = 'N'
	                     GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) D ON A.COMP_CODE   = D.COMP_CODE
	                                                                                      AND A.PERSON_NUMB = D.PERSON_NUMB
	                                                                                      AND A.PAY_YYYYMM  = D.PAY_YYYYMM
	                                                                                      AND A.SUPP_TYPE   = D.SUPP_TYPE
	         LEFT JOIN (SELECT A.COMP_CODE
	                         , A.PERSON_NUMB
	                         , A.PAY_YYYYMM
	                         , A.SUPP_TYPE
	                         , SUM(ISNULL(A.GIVE_I, 0)) AS GIVE_I
	                         , SUM(ISNULL(A.TAX_I, 0)) AS TAX_I
	                         , SUM(ISNULL(A.NON_TAX_I, 0)) AS NON_TAX_I
	                      FROM            HWE010T A WITH (NOLOCK)
	                           INNER JOIN HUM100T B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
	                                                              AND A.PERSON_NUMB = B.PERSON_NUMB
	                           INNER JOIN HWE100T C WITH (NOLOCK)  ON A.COMP_CODE   = C.COMP_CODE
	                                                              AND A.WEL_LEVEL1  = C.WEL_LEVEL1
	                                                              AND A.WEL_LEVEL2  = C.WEL_LEVEL2
	                                                              AND A.WEL_CODE    = C.WEL_CODE
	                     WHERE A.COMP_CODE   = @COMP_CODE
	                       AND C.YEAR_CALCU = 'Y'
	                       AND ((C.WAGES_CODE IS NULL) OR (C.WAGES_CODE = '')) --'급여반영 할 경우 HPA800T에 들어가 있으므로 'N'값만 처리
	                     GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.PAY_YYYYMM, A.SUPP_TYPE) E ON A.COMP_CODE   = E.COMP_CODE
	                                                                                      AND A.PERSON_NUMB = E.PERSON_NUMB
	                                                                                      AND A.PAY_YYYYMM  = E.PAY_YYYYMM
	                                                                                      AND A.SUPP_TYPE   = E.SUPP_TYPE
	         LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
	                                               AND M1.MAIN_CODE  = 'H032'
	                                               AND M1.SUB_CODE   = A.SUPP_TYPE
	         LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = B.COMP_CODE
	                                               AND M2.MAIN_CODE  = 'H024'
	                                               AND M2.SUB_CODE   = B.EMPLOY_TYPE
	         LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE  = A.COMP_CODE
	                                               AND M3.MAIN_CODE  = 'H028'
	                                               AND M3.SUB_CODE   = A.PAY_CODE
	         LEFT JOIN BSA100T AS M4 WITH (NOLOCK)  ON M4.COMP_CODE  = A.COMP_CODE
	                                               AND M4.MAIN_CODE  = 'H029'
	                                               AND M4.SUB_CODE   = A.TAX_CODE
	 WHERE A.COMP_CODE = @COMP_CODE
	 <if test="DATE_GUBUN == &quot;2&quot;"	>
	   AND LEFT(A.SUPP_DATE,6) &gt;= @PAY_YYYYMM_FR
       AND LEFT(A.SUPP_DATE,6) &lt;= @PAY_YYYYMM_TO
       AND LEFT(A.PAY_YYYYMM, 4)   = @TAX_YYYY
	 </if>
	 <if test="DATE_GUBUN != &quot;2&quot;"	>
	   AND A.PAY_YYYYMM &gt;= @PAY_YYYYMM_FR
	   AND A.PAY_YYYYMM &lt;= @PAY_YYYYMM_TO
	 </if>
	   AND ((A.PAY_GUBUN != '2')  OR (A.PAY_GUBUN = '2' AND A.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함
	   AND ((@SUPP_TYPE = '')     OR (@SUPP_TYPE != ''  AND A.SUPP_TYPE = @SUPP_TYPE))
	   AND B.RETR_DATE LIKE @RETR_SET
	   AND ((@RETR_DATE_FR = '')  OR (@RETR_DATE_FR != ''  AND B.RETR_DATE    &gt;= @RETR_DATE_FR))
	   AND ((@RETR_DATE_TO = '')  OR (@RETR_DATE_TO != ''  AND B.RETR_DATE    &lt;= @RETR_DATE_TO))
	   AND ((@PERSON_NUMB = '')   OR (@PERSON_NUMB != ''   AND B.PERSON_NUMB   = @PERSON_NUMB))
	   AND ((@PAY_CODE = '')      OR (@PAY_CODE    != ''   AND A.PAY_CODE      = @PAY_CODE))
	   AND ((@PAY_PROV_FLAG = '') OR (@PAY_PROV_FLAG != '' AND A.PAY_PROV_FLAG = @PAY_PROV_FLAG))
	   AND ((@DIV_CODE = '')      OR (@DIV_CODE != ''      AND B.SECT_CODE     = @DIV_CODE))
		 <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
			  AND     B.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
		</if>
	   AND ((@EMPLOY_TYPE = '')   OR (@EMPLOY_TYPE != ''   AND B.EMPLOY_TYPE   = @EMPLOY_TYPE))
	   AND ((@PERSON_GROUP = '')  OR (@PERSON_GROUP != ''  AND M2.REF_CODE1    = @PERSON_GROUP))
	
	 UNION ALL
	
	SELECT B.DIV_CODE
	     , B.DEPT_CODE
	     , B.DEPT_NAME
	     , B.POST_CODE
	     , A.PERSON_NUMB 
	     , B.NAME
	     , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR') AS REPRE_NUM
	     , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
	     , (uniLITE.fnGetTxt('H0034') + ' ' + '[' + M2.CODE_NAME + ']') AS PAYGUBN
	     , (CASE WHEN A.SUPP_DATE != '00000000' AND A.SUPP_DATE != ''  
	                  THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.SUPP_DATE)
	             ELSE ''
	         END) AS SUPPDATE
	     , A.SUPP_TOTAL_I AS SUPPTOTAL
	     , A.TAX_AMOUNT_I AS TAXAMOUNT
	     , CASE WHEN C.SEND_YN = 'Y' THEN A.NON_TAX_AMOUNT_I ELSE 0 END AS NONTAXAMOUNT  --제출비과세
	     , CASE WHEN C.SEND_YN = 'N' THEN A.NON_TAX_AMOUNT_I ELSE 0 END AS NONTAXAMOUNT2 --미제출비과세
	     , 0 AS NONTAXI
	     , 0 AS ANU
	     , 0 AS MED
	     , A.HIRE_INSUR_I AS HIR 
	     , 0              AS BUSISHAREI
	     , A.IN_TAX_I AS SUDK
	     , A.LOCAL_TAX_I AS JUMIN
	     , M3.CODE_NAME AS PAYCODE
	     , M4.CODE_NAME AS TAXCODE
	  FROM            HAD700T AS A  WITH (NOLOCK)
	       INNER JOIN HUM100T AS B  WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
	                                             AND A.PERSON_NUMB = B.PERSON_NUMB
	        LEFT JOIN HBS120T AS C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                             AND C.NONTAX_CODE = A.NON_TAX_CODE
	                                             AND C.TAX_YYYY    = @TAX_YYYY
	        LEFT JOIN BSA100T AS M1 WITH (NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
	                                             AND M1.MAIN_CODE  = 'H024'
	                                             AND M1.SUB_CODE   = B.EMPLOY_TYPE
	        LEFT JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
	                                             AND M2.MAIN_CODE  = 'H039'
	                                             AND M2.SUB_CODE   = A.WAGES_CODE
	        LEFT JOIN BSA100T AS M3 WITH (NOLOCK) ON M3.COMP_CODE  = B.COMP_CODE 
	                                             AND M3.MAIN_CODE  = 'H028'
	                                             AND M3.SUB_CODE   = B.PAY_CODE
	        LEFT JOIN BSA100T AS M4 WITH (NOLOCK) ON M4.COMP_CODE  = B.COMP_CODE
	                                             AND M4.MAIN_CODE  = 'H029'
	                                             AND M4.SUB_CODE   = B.TAX_CODE
	 WHERE A.COMP_CODE   = @COMP_CODE
	 <if test="DATE_GUBUN != &quot;2&quot;"	>
	   AND A.PAY_YYYYMM &gt;= @PAY_YYYYMM_FR
	   AND A.PAY_YYYYMM &lt;= @PAY_YYYYMM_TO
	 </if>
	 <if test="DATE_GUBUN == &quot;2&quot;"	>
	   AND LEFT(A.SUPP_DATE,6) &gt;= @PAY_YYYYMM_FR
       AND LEFT(A.SUPP_DATE,6) &lt;= @PAY_YYYYMM_TO
       AND LEFT(A.PAY_YYYYMM, 4)   = @TAX_YYYY
	 </if>
	   AND ((B.PAY_GUBUN != '2')  OR (B.PAY_GUBUN = '2' AND B.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함
	   AND B.RETR_DATE LIKE @RETR_SET--퇴직자제외 또는 퇴직자포함
	   AND ((@RETR_DATE_FR = '')  OR (@RETR_DATE_FR != ''  AND B.RETR_DATE    &gt;= @RETR_DATE_FR))
	   AND ((@RETR_DATE_TO = '')  OR (@RETR_DATE_TO != ''  AND B.RETR_DATE    &lt;= @RETR_DATE_TO))--퇴사일자
	   AND ((@PERSON_NUMB = '')   OR (@PERSON_NUMB != ''   AND B.PERSON_NUMB   = @PERSON_NUMB))
	   AND ((@PAY_CODE = '')      OR (@PAY_CODE    != ''   AND B.PAY_CODE      = @PAY_CODE))
	   AND ((@PAY_PROV_FLAG = '') OR (@PAY_PROV_FLAG != '' AND B.PAY_PROV_FLAG = @PAY_PROV_FLAG))
	   AND ((@DIV_CODE = '')      OR (@DIV_CODE != ''      AND B.SECT_CODE     = @DIV_CODE))
	   <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
			  AND     B.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
		</if>
	   AND ((@EMPLOY_TYPE = '')   OR (@EMPLOY_TYPE != ''   AND B.EMPLOY_TYPE   = @EMPLOY_TYPE))
	   AND ((@PERSON_GROUP = '')  OR (@PERSON_GROUP != ''  AND M2.REF_CODE1    = @PERSON_GROUP))
	
	 UNION ALL
	
	 SELECT B.DIV_CODE
	      , B.DEPT_CODE
	      , B.DEPT_NAME
	      , B.POST_CODE      
	      , A.PERSON_NUMB
	      , B.NAME     
	      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')          AS REPRE_NUM 
	      , uniLITE.fnGetUserDateComp(@COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
	      , '주식매수선택권'                                      AS PAYGUBN
	      , uniLITE.fnGetUserDateComp(@COMP_CODE, A.SUPP_DATE)  AS SUPP_DATE
	      , A.PROFIT_I        AS SUPPTOTAL
	      , A.TAX_AMOUNT_I    AS TAXAMOUNT
	      , A.TAX_EXEMPTION_I AS NONTAXAMOUNT
	      , 0                 AS NONTAXAMOUNT2
	      , 0                 AS NONTAXI
	      , 0                 AS ANU
	      , 0                 AS MED
	      , A.HIR_TAX_I       AS HIR
	      , 0                 AS BUSISHAREI
	      , A.IN_TAX_I        AS INC
	      , A.LOC_TAX_I       AS LOC
	      , M1.CODE_NAME      AS PAYCODE
	      , M2.CODE_NAME      AS TAXCODE
	   FROM            HPA810T AS  A WITH(NOLOCK)
	        INNER JOIN HUM100T AS  B WITH(NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
	                                               AND B.PERSON_NUMB = A.PERSON_NUMB
	         LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
	                                               AND M1.MAIN_CODE  = 'H028'
	                                               AND M1.SUB_CODE   = B.PAY_CODE
	         LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = A.COMP_CODE
	                                               AND M2.MAIN_CODE  = 'H029'
	                                               AND M2.SUB_CODE   = B.TAX_CODE
	         LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE  = B.COMP_CODE
	                                               AND M3.MAIN_CODE  = 'H024'
	                                               AND M3.SUB_CODE   = B.EMPLOY_TYPE
	  WHERE A.COMP_CODE   = @COMP_CODE
	 <if test="DATE_GUBUN != &quot;2&quot;"	>
	   AND A.PAY_YYYYMM &gt;= @PAY_YYYYMM_FR
	   AND A.PAY_YYYYMM &lt;= @PAY_YYYYMM_TO
	 </if>
	 <if test="DATE_GUBUN == &quot;2&quot;"	>
	   AND LEFT(A.SUPP_DATE,6) &gt;= @PAY_YYYYMM_FR
       AND LEFT(A.SUPP_DATE,6) &lt;= @PAY_YYYYMM_TO
       AND LEFT(A.PAY_YYYYMM, 4)   = @TAX_YYYY
	 </if>
	    AND ((B.PAY_GUBUN != '2')  OR (B.PAY_GUBUN = '2' AND B.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함
	    AND B.RETR_DATE LIKE @RETR_SET--퇴직자제외 또는 퇴직자포함
	    AND ((@RETR_DATE_FR = '')  OR (@RETR_DATE_FR != ''  AND B.RETR_DATE    &gt;= @RETR_DATE_FR))
	    AND ((@RETR_DATE_TO = '')  OR (@RETR_DATE_TO != ''  AND B.RETR_DATE    &lt;= @RETR_DATE_TO))--퇴사일자
	    AND ((@PERSON_NUMB = '')   OR (@PERSON_NUMB != ''   AND B.PERSON_NUMB   = @PERSON_NUMB))
	    AND ((@PAY_CODE = '')      OR (@PAY_CODE    != ''   AND B.PAY_CODE      = @PAY_CODE))
	    AND ((@PAY_PROV_FLAG = '') OR (@PAY_PROV_FLAG != '' AND B.PAY_PROV_FLAG = @PAY_PROV_FLAG))
	    AND ((@DIV_CODE = '')      OR (@DIV_CODE != ''      AND B.SECT_CODE     = @DIV_CODE))
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
			  AND     B.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
		</if>
	    AND ((@EMPLOY_TYPE = '')   OR (@EMPLOY_TYPE != ''   AND B.EMPLOY_TYPE   = @EMPLOY_TYPE))
	    AND ((@PERSON_GROUP = '')  OR (@PERSON_GROUP != ''  AND M3.REF_CODE1    = @PERSON_GROUP))
	  
	  UNION ALL
	  
	SELECT B.DIV_CODE
	      , B.DEPT_CODE
	      , B.DEPT_NAME
	      , B.POST_CODE      
	      , A.PERSON_NUMB
	      , B.NAME     
	      , unilite.fnCipherDecrypt(B.REPRE_NUM, 'RR')          AS REPRE_NUM 
	      , uniLITE.fnGetUserDateComp(@COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
	      , '우리사주조합인출금'                                   AS PAYGUBN
	      , uniLITE.fnGetUserDateComp(@COMP_CODE, A.SUPP_DATE)  AS SUPP_DATE
	      , A.PAY_TOTAL_I     AS SUPPTOTAL
	      , A.TAX_AMOUNT_I    AS TAXAMOUNT
	      , A.TAX_EXEMPTION_I AS NONTAXAMOUNT
	      , 0                 AS NONTAXAMOUNT2
	      , 0                 AS NONTAXI
	      , 0                 AS ANU
	      , 0                 AS MED
	      , A.HIR_TAX_I       AS HIR
	      , 0                 AS BUSISHAREI
	      , A.IN_TAX_I        AS INC
	      , A.LOC_TAX_I       AS LOC
	      , M1.CODE_NAME      AS PAYCODE
	      , M2.CODE_NAME      AS TAXCODE
	   FROM            HPA820T AS A  WITH(NOLOCK)
	        INNER JOIN HUM100T AS B  WITH(NOLOCK)   ON B.COMP_CODE   = A.COMP_CODE
	                                               AND B.PERSON_NUMB = A.PERSON_NUMB
	         LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE  = A.COMP_CODE
	                                               AND M1.MAIN_CODE  = 'H028'
	                                               AND M1.SUB_CODE   = B.PAY_CODE
	         LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE  = A.COMP_CODE
	                                               AND M2.MAIN_CODE  = 'H029'
	                                               AND M2.SUB_CODE   = B.TAX_CODE
	         LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE  = B.COMP_CODE
	                                               AND M3.MAIN_CODE  = 'H024'
	                                               AND M3.SUB_CODE   = B.EMPLOY_TYPE
	  WHERE A.COMP_CODE   = @COMP_CODE
	 <if test="DATE_GUBUN != &quot;2&quot;"	>
	    AND A.PAY_YYYYMM &gt;= @PAY_YYYYMM_FR
	    AND A.PAY_YYYYMM &lt;= @PAY_YYYYMM_TO
	 </if>
	 <if test="DATE_GUBUN == &quot;2&quot;"	>
	    AND LEFT(A.SUPP_DATE,6) &gt;= @PAY_YYYYMM_FR
        AND LEFT(A.SUPP_DATE,6) &lt;= @PAY_YYYYMM_TO
        AND LEFT(A.PAY_YYYYMM, 4)   = @TAX_YYYY
	 </if>
	    AND ((B.PAY_GUBUN != '2')  OR (B.PAY_GUBUN = '2' AND B.PAY_GUBUN2 != '1')) --정규직이거나 비정규직이면서 일반직 포함
	    AND B.RETR_DATE LIKE @RETR_SET--퇴직자제외 또는 퇴직자포함
	    AND ((@RETR_DATE_FR = '')  OR (@RETR_DATE_FR != ''  AND B.RETR_DATE    &gt;= @RETR_DATE_FR))
	    AND ((@RETR_DATE_TO = '')  OR (@RETR_DATE_TO != ''  AND B.RETR_DATE    &lt;= @RETR_DATE_TO))--퇴사일자
	    AND ((@PERSON_NUMB = '')   OR (@PERSON_NUMB != ''   AND B.PERSON_NUMB   = @PERSON_NUMB))
	    AND ((@PAY_CODE = '')      OR (@PAY_CODE    != ''   AND B.PAY_CODE      = @PAY_CODE))
	    AND ((@PAY_PROV_FLAG = '') OR (@PAY_PROV_FLAG != '' AND B.PAY_PROV_FLAG = @PAY_PROV_FLAG))
	    AND ((@DIV_CODE = '')      OR (@DIV_CODE != ''      AND B.SECT_CODE     = @DIV_CODE))
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">					
			  AND     B.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 	#{item}
			</foreach>									
		</if>
	    AND ((@EMPLOY_TYPE = '')   OR (@EMPLOY_TYPE != ''   AND B.EMPLOY_TYPE   = @EMPLOY_TYPE))
	    AND ((@PERSON_GROUP = '')  OR (@PERSON_GROUP != ''  AND M3.REF_CODE1    = @PERSON_GROUP))
	  ORDER BY DIV_CODE, DEPT_CODE, POST_CODE, NAME, PERSON_NUMB, PAY_YYYYMM ASC 
    </select>
</mapper>