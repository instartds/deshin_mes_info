<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had500ukrServiceImpl">
	<select id="had500ukrServiceImpl.selectList500" parameterType="Map" resultType="rMap">
		--had500ukr.Chad500ukr[fnHad500QStd] QUERY01
	     BEGIN
	        DECLARE         @YEAR_YYYY          NVARCHAR(04)                -- (필수) 정산년도
	                      , @PERSON_NUMB        NVARCHAR(10)                -- (필수) 사번
	    
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	    
	    --  1. 변수 값 할당 -------------------------------------------------------------------------------------------------
	        SET @YEAR_YYYY          = #{YEAR_YYYY}
	        SET @PERSON_NUMB        = #{PERSON_NUMB}
	    
	    --  2. 데이터 조회 --------------------------------------------------------------------------------------------------
	        SELECT  
	               HUM.PERSON_NUMB
	             --, HUM.NAME
	             --, HUM.DEPT_CODE
	             --, HUM.DEPT_NAME
	             --, HUM.POST_CODE
	             --, ISNULL(M1.CODE_NAME                , '')                         AS POST_NAME
	             , ISNULL(HAD.YEAR_YYYY               , @YEAR_YYYY)                 AS YEAR_YYYY
	             , ISNULL(HAD.P1_COMPANY_NAME         , '')                         AS P1_COMPANY_NAME
	             , ISNULL(HAD.P1_COMPANY_NUM          , '')                         AS P1_COMPANY_NUM
	             , ISNULL(HAD.P1_WORKDATE_FR          , '')                         AS P1_WORKDATE_FR
	             , ISNULL(HAD.P1_WORKDATE_TO          , '')                         AS P1_WORKDATE_TO
	             , ISNULL(HAD.P1_NONTAX_FR            , '')                         AS P1_NONTAX_FR
	             , ISNULL(HAD.P1_NONTAX_TO            , '')                         AS P1_NONTAX_TO
	             , ISNULL(HAD.P1_PAY_TOTAL_I          , 0 )                         AS P1_PAY_TOTAL_I
	             , ISNULL(HAD.P1_BONUS_I_TOTAL_I      , 0 )                         AS P1_BONUS_I_TOTAL_I
	             , ISNULL(HAD.P1_MEDICAL_INSUR_I      , 0 )                         AS P1_MEDICAL_INSUR_I
	             , ISNULL(HAD.P1_HIRE_INSUR_I         , 0 )                         AS P1_HIRE_INSUR_I
	             , ISNULL(HAD.P1_IN_TAX_I             , 0 )                         AS P1_IN_TAX_I
	             , ISNULL(HAD.P1_LOCAL_TAX_I          , 0 )                         AS P1_LOCAL_TAX_I
	             , ISNULL(HAD.P1_SAVE_TAX_DED_I       , 0 )                         AS P1_SAVE_TAX_DED_I
	             , ISNULL(HAD.P1_SP_TAX_I             , 0 )                         AS P1_SP_TAX_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION1_I     , 0 )                         AS P1_TAX_EXEMPTION1_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION2_I     , 0 )                         AS P1_TAX_EXEMPTION2_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION3_I     , 0 )                         AS P1_TAX_EXEMPTION3_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION4_I     , 0 )                         AS P1_TAX_EXEMPTION4_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION5_I     , 0 )                         AS P1_TAX_EXEMPTION5_I
	             , ISNULL(HAD.P1_FORE_DED_I           , 0 )                         AS P1_FORE_DED_I
	             , ISNULL(HAD.P1_EXEMP_RATE           , '' ) 						AS P1_EXEMP_RATE
	             , ISNULL(HAD.P2_COMPANY_NAME         , '')                         AS P2_COMPANY_NAME
	             , ISNULL(HAD.P2_COMPANY_NUM          , '')                         AS P2_COMPANY_NUM
	             , ISNULL(HAD.P2_WORKDATE_FR          , '')                         AS P2_WORKDATE_FR
	             , ISNULL(HAD.P2_WORKDATE_TO          , '')                         AS P2_WORKDATE_TO
	             , ISNULL(HAD.P2_NONTAX_FR            , '')                         AS P2_NONTAX_FR
	             , ISNULL(HAD.P2_NONTAX_TO            , '')                         AS P2_NONTAX_TO
	             , ISNULL(HAD.P2_PAY_TOTAL_I          , 0 )                         AS P2_PAY_TOTAL_I
	             , ISNULL(HAD.P2_BONUS_I_TOTAL_I      , 0 )                         AS P2_BONUS_I_TOTAL_I
	             , ISNULL(HAD.P2_MEDICAL_INSUR_I      , 0 )                         AS P2_MEDICAL_INSUR_I
	             , ISNULL(HAD.P2_HIRE_INSUR_I         , 0 )                         AS P2_HIRE_INSUR_I
	             , ISNULL(HAD.P2_IN_TAX_I             , 0 )                         AS P2_IN_TAX_I
	             , ISNULL(HAD.P2_LOCAL_TAX_I          , 0 )                         AS P2_LOCAL_TAX_I
	             , ISNULL(HAD.P2_SAVE_TAX_DED_I       , 0 )                         AS P2_SAVE_TAX_DED_I
	             , ISNULL(HAD.P2_SP_TAX_I             , 0 )                         AS P2_SP_TAX_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION1_I     , 0 )                         AS P2_TAX_EXEMPTION1_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION2_I     , 0 )                         AS P2_TAX_EXEMPTION2_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION3_I     , 0 )                         AS P2_TAX_EXEMPTION3_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION4_I     , 0 )                         AS P2_TAX_EXEMPTION4_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION5_I     , 0 )                         AS P2_TAX_EXEMPTION5_I
	             , ISNULL(HAD.P2_FORE_DED_I           , 0 )                         AS P2_FORE_DED_I
	             , ISNULL(HAD.P2_EXEMP_RATE           , '' ) 						AS P2_EXEMP_RATE
	             , ISNULL(HAD.P1_ADD_BONUS_I          , 0 )                         AS P1_ADD_BONUS_I
	             , ISNULL(HAD.P2_ADD_BONUS_I          , 0 )                         AS P2_ADD_BONUS_I
	             , ISNULL(HAD.P1_ANU_I                , 0 )                         AS P1_ANU_I
	             , ISNULL(HAD.P2_ANU_I                , 0 )                         AS P2_ANU_I
	             , ISNULL(HAD.P1_STOCK_BUY_PROFIT_I   , 0 )                         AS P1_STOCK_BUY_PROFIT_I
	             , ISNULL(HAD.P2_STOCK_BUY_PROFIT_I   , 0 )                         AS P2_STOCK_BUY_PROFIT_I
	             , ISNULL(HAD.P1_TAX_EXEMPTION_STUDY_I, 0 )                         AS P1_TAX_EXEMPTION_STUDY_I
	             , ISNULL(HAD.P2_TAX_EXEMPTION_STUDY_I, 0 )                         AS P2_TAX_EXEMPTION_STUDY_I
	             , ISNULL(HAD.P1_OWNER_STOCK_DRAW_I   , 0 )                         AS P1_OWNER_STOCK_DRAW_I
	             , ISNULL(HAD.P2_OWNER_STOCK_DRAW_I   , 0 )                         AS P2_OWNER_STOCK_DRAW_I
	             , ISNULL(HAD.P1_OF_RETR_OVER_I       , 0 )                         AS P1_OF_RETR_OVER_I
	             , ISNULL(HAD.P2_OF_RETR_OVER_I       , 0 )                         AS P2_OF_RETR_OVER_I
	             , ISNULL(HAD.P1_TAX_INVENTION_I      , 0 )                         AS P1_TAX_INVENTION_I
	             , ISNULL(HAD.P2_TAX_INVENTION_I      , 0 )                         AS P2_TAX_INVENTION_I
	  
	             , CASE WHEN ISNULL(HAD.PERSON_NUMB, '') = '' THEN 'Y' ELSE 'N' END AS NEW_DATA_YN              -- 종전근무지내역 존재여부
	          FROM            HUM100T HUM WITH (NOLOCK)
	               LEFT  JOIN HAD500T HAD WITH (NOLOCK) ON HAD.COMP_CODE   = HUM.COMP_CODE
	                                                   AND HAD.YEAR_YYYY   = @YEAR_YYYY
	                                                   AND HAD.PERSON_NUMB = HUM.PERSON_NUMB
	               LEFT  JOIN BSA100T M1  WITH (NOLOCK) ON M1.COMP_CODE    = HUM.COMP_CODE
	                                                   AND M1.MAIN_CODE    = 'H005'
	                                                   AND M1.SUB_CODE     = HUM.POST_CODE
	         WHERE HUM.COMP_CODE   = #{S_COMP_CODE}
	           AND HUM.PERSON_NUMB = @PERSON_NUMB
	    
	        SET NOCOUNT OFF
	        SET ARITHABORT OFF
	    END
	</select>	
	<update id="had500ukrServiceImpl.sync" parameterType="foren.unilite.modules.human.had.Had500ukrModel">
		IF EXISTS (SELECT * 
					FROM HAD500T
				   WHERE COMP_CODE				= #{S_COMP_CODE}      
	          AND YEAR_YYYY				= #{YEAR_YYYY}          
	          AND PERSON_NUMB           = #{PERSON_NUMB}    
	    )
	    	UPDATE HAD500T
	        SET  
	            P1_COMPANY_NAME           = #{P1_COMPANY_NAME}           
	           ,P1_COMPANY_NUM            = #{P1_COMPANY_NUM}            
	           ,P1_WORKDATE_FR            = #{P1_WORKDATE_FR}            
	           ,P1_WORKDATE_TO            = #{P1_WORKDATE_TO}            
	           ,P1_NONTAX_FR              = #{P1_NONTAX_FR}              
	           ,P1_NONTAX_TO              = #{P1_NONTAX_TO}              
	           ,P1_PAY_TOTAL_I            = ISNULL(#{P1_PAY_TOTAL_I},0)            
	           ,P1_BONUS_I_TOTAL_I        = ISNULL(#{P1_BONUS_I_TOTAL_I},0)        
	           ,P1_ADD_BONUS_I            = ISNULL(#{P1_ADD_BONUS_I} ,0)           
	           ,P1_STOCK_BUY_PROFIT_I     = ISNULL(#{P1_STOCK_BUY_PROFIT_I} ,0)    
	           ,P1_OWNER_STOCK_DRAW_I     = ISNULL(#{P1_OWNER_STOCK_DRAW_I} ,0)    
	           ,P1_ANU_I                  = ISNULL(#{P1_ANU_I} ,0)                 
	           ,P1_MEDICAL_INSUR_I        = ISNULL(#{P1_MEDICAL_INSUR_I},0)        
	           ,P1_HIRE_INSUR_I           = ISNULL(#{P1_HIRE_INSUR_I},0)           
	           ,P1_IN_TAX_I               = ISNULL(#{P1_IN_TAX_I},0)               
	           ,P1_LOCAL_TAX_I            = ISNULL(#{P1_LOCAL_TAX_I},0)            
	           ,P1_SAVE_TAX_DED_I         = ISNULL(#{P1_SAVE_TAX_DED_I},0)         
	           ,P1_SP_TAX_I               = ISNULL(#{P1_SP_TAX_I} ,0)              
	           ,P1_TAX_EXEMPTION1_I       = ISNULL(#{P1_TAX_EXEMPTION1_I} ,0)      
	           ,P1_TAX_EXEMPTION2_I       = ISNULL(#{P1_TAX_EXEMPTION2_I} ,0)     
	           ,P1_TAX_EXEMPTION3_I       = ISNULL(#{P1_TAX_EXEMPTION3_I} ,0)      
	           ,P1_TAX_EXEMPTION4_I       = ISNULL(#{P1_TAX_EXEMPTION4_I} ,0)      
	           ,P1_TAX_EXEMPTION5_I       = ISNULL(#{P1_TAX_EXEMPTION5_I} ,0)      
	           ,P1_TAX_EXEMPTION_STUDY_I  = ISNULL(#{P1_TAX_EXEMPTION_STUDY_I} ,0) 
	           ,P1_FORE_DED_I             = ISNULL(#{P1_FORE_DED_I} ,0)            
	           ,P1_OF_RETR_OVER_I         = ISNULL(#{P1_OF_RETR_OVER_I} ,0)
	           ,P1_TAX_INVENTION_I        = ISNULL(#{P1_TAX_INVENTION_I} ,0)
	           ,P1_EXEMP_RATE             = #{P1_EXEMP_RATE}             
	           ,P2_COMPANY_NAME           = #{P2_COMPANY_NAME}           
	           ,P2_COMPANY_NUM            = #{P2_COMPANY_NUM}            
	           ,P2_WORKDATE_FR            = #{P2_WORKDATE_FR}            
	           ,P2_WORKDATE_TO            = #{P2_WORKDATE_TO}            
	           ,P2_NONTAX_FR              = #{P2_NONTAX_FR}              
	           ,P2_NONTAX_TO              = #{P2_NONTAX_TO}              
	           ,P2_PAY_TOTAL_I            = ISNULL(#{P2_PAY_TOTAL_I} ,0)           
	           ,P2_BONUS_I_TOTAL_I        = ISNULL(#{P2_BONUS_I_TOTAL_I} ,0)       
	           ,P2_ADD_BONUS_I            = ISNULL(#{P2_ADD_BONUS_I},0)            
	           ,P2_STOCK_BUY_PROFIT_I     = ISNULL(#{P2_STOCK_BUY_PROFIT_I} ,0)    
	           ,P2_OWNER_STOCK_DRAW_I     = ISNULL(#{P2_OWNER_STOCK_DRAW_I} ,0)    
	           ,P2_ANU_I                  = ISNULL(#{P2_ANU_I} ,0)                 
	           ,P2_MEDICAL_INSUR_I        = ISNULL(#{P2_MEDICAL_INSUR_I} ,0)       
	           ,P2_HIRE_INSUR_I           = ISNULL(#{P2_HIRE_INSUR_I} ,0)          
	           ,P2_IN_TAX_I               = ISNULL(#{P2_IN_TAX_I} ,0)              
	           ,P2_LOCAL_TAX_I            = ISNULL(#{P2_LOCAL_TAX_I} ,0)           
	           ,P2_SAVE_TAX_DED_I         = ISNULL(#{P2_SAVE_TAX_DED_I} ,0)        
	           ,P2_SP_TAX_I               = ISNULL(#{P2_SP_TAX_I} ,0)              
	           ,P2_TAX_EXEMPTION1_I       = ISNULL(#{P2_TAX_EXEMPTION1_I} ,0)      
	           ,P2_TAX_EXEMPTION2_I       = ISNULL(#{P2_TAX_EXEMPTION2_I} ,0)      
	           ,P2_TAX_EXEMPTION3_I       = ISNULL(#{P2_TAX_EXEMPTION3_I} ,0)      
	           ,P2_TAX_EXEMPTION4_I       = ISNULL(#{P2_TAX_EXEMPTION4_I} ,0)     
	           ,P2_TAX_EXEMPTION5_I       = ISNULL(#{P2_TAX_EXEMPTION5_I} ,0)      
	           ,P2_TAX_EXEMPTION_STUDY_I  = ISNULL(#{P2_TAX_EXEMPTION_STUDY_I} ,0) 
	           ,P2_FORE_DED_I             = ISNULL(#{P2_FORE_DED_I} ,0)            
	           ,P2_OF_RETR_OVER_I         = ISNULL(#{P2_OF_RETR_OVER_I} ,0)
	           ,P2_TAX_INVENTION_I        = ISNULL(#{P2_TAX_INVENTION_I} ,0)
	           ,P2_EXEMP_RATE             = #{P2_EXEMP_RATE}                      
	           ,UPDATE_DB_USER            = #{S_USER_ID}                 
	           ,UPDATE_DB_TIME            = GETDATE()     
	        WHERE COMP_CODE				= #{S_COMP_CODE}      
	          AND YEAR_YYYY				= #{YEAR_YYYY}          
	          AND PERSON_NUMB           = #{PERSON_NUMB}     
	    ELSE
	    	INSERT INTO HAD500T
	           (COMP_CODE
	           ,YEAR_YYYY
	           ,PERSON_NUMB
	           ,P1_COMPANY_NAME
	           ,P1_COMPANY_NUM
	           ,P1_WORKDATE_FR
	           ,P1_WORKDATE_TO
	           ,P1_NONTAX_FR
	           ,P1_NONTAX_TO
	           ,P1_PAY_TOTAL_I
	           ,P1_BONUS_I_TOTAL_I
	           ,P1_ADD_BONUS_I
	           ,P1_STOCK_BUY_PROFIT_I
	           ,P1_OWNER_STOCK_DRAW_I
	           ,P1_ANU_I
	           ,P1_MEDICAL_INSUR_I
	           ,P1_HIRE_INSUR_I
	           ,P1_IN_TAX_I
	           ,P1_LOCAL_TAX_I
	           ,P1_SAVE_TAX_DED_I
	           ,P1_SP_TAX_I
	           ,P1_TAX_EXEMPTION1_I
	           ,P1_TAX_EXEMPTION2_I
	           ,P1_TAX_EXEMPTION3_I
	           ,P1_TAX_EXEMPTION4_I
	           ,P1_TAX_EXEMPTION5_I
	           ,P1_TAX_EXEMPTION_STUDY_I
	           ,P1_FORE_DED_I
	           ,P1_OF_RETR_OVER_I
	           ,P1_TAX_INVENTION_I
	           ,P1_EXEMP_RATE
	           ,P2_COMPANY_NAME
	           ,P2_COMPANY_NUM
	           ,P2_WORKDATE_FR
	           ,P2_WORKDATE_TO
	           ,P2_NONTAX_FR
	           ,P2_NONTAX_TO
	           ,P2_PAY_TOTAL_I
	           ,P2_BONUS_I_TOTAL_I
	           ,P2_ADD_BONUS_I
	           ,P2_STOCK_BUY_PROFIT_I
	           ,P2_OWNER_STOCK_DRAW_I
	           ,P2_ANU_I
	           ,P2_MEDICAL_INSUR_I
	           ,P2_HIRE_INSUR_I
	           ,P2_IN_TAX_I
	           ,P2_LOCAL_TAX_I
	           ,P2_SAVE_TAX_DED_I
	           ,P2_SP_TAX_I
	           ,P2_TAX_EXEMPTION1_I
	           ,P2_TAX_EXEMPTION2_I
	           ,P2_TAX_EXEMPTION3_I
	           ,P2_TAX_EXEMPTION4_I
	           ,P2_TAX_EXEMPTION5_I
	           ,P2_TAX_EXEMPTION_STUDY_I
	           ,P2_FORE_DED_I
	           ,P2_OF_RETR_OVER_I
	           ,P2_TAX_INVENTION_I
	           ,P2_EXEMP_RATE
	           ,INSERT_DB_USER
	           ,INSERT_DB_TIME
	           ,UPDATE_DB_USER
	           ,UPDATE_DB_TIME
	           )
	     VALUES
	           (#{S_COMP_CODE}
	           ,#{YEAR_YYYY}
	           ,#{PERSON_NUMB}
	           ,#{P1_COMPANY_NAME}
	           ,#{P1_COMPANY_NUM}
	           ,#{P1_WORKDATE_FR}
	           ,#{P1_WORKDATE_TO}
	           ,#{P1_NONTAX_FR}
	           ,#{P1_NONTAX_TO}
	           ,ISNULL(#{P1_PAY_TOTAL_I},0)
	           ,ISNULL(#{P1_BONUS_I_TOTAL_I},0)
	           ,ISNULL(#{P1_ADD_BONUS_I},0)
	           ,ISNULL(#{P1_STOCK_BUY_PROFIT_I},0)
	           ,ISNULL(#{P1_OWNER_STOCK_DRAW_I},0)
	           ,ISNULL(#{P1_ANU_I},0)
	           ,ISNULL(#{P1_MEDICAL_INSUR_I},0)
	           ,ISNULL(#{P1_HIRE_INSUR_I},0)
	           ,ISNULL(#{P1_IN_TAX_I},0)
	           ,ISNULL(#{P1_LOCAL_TAX_I},0)
	           ,ISNULL(#{P1_SAVE_TAX_DED_I},0)
	           ,ISNULL(#{P1_SP_TAX_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION1_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION2_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION3_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION4_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION5_I},0)
	           ,ISNULL(#{P1_TAX_EXEMPTION_STUDY_I},0)
	           ,ISNULL(#{P1_FORE_DED_I},0)
	           ,ISNULL(#{P1_OF_RETR_OVER_I},0)
	           ,ISNULL(#{P1_TAX_INVENTION_I},0)
	           ,#{P1_EXEMP_RATE}
	           ,#{P2_COMPANY_NAME}
	           ,#{P2_COMPANY_NUM}
	           ,#{P2_WORKDATE_FR}
	           ,#{P2_WORKDATE_TO}
	           ,#{P2_NONTAX_FR}
	           ,#{P2_NONTAX_TO}
	           ,ISNULL(#{P2_PAY_TOTAL_I},0)
	           ,ISNULL(#{P2_BONUS_I_TOTAL_I},0)
	           ,ISNULL(#{P2_ADD_BONUS_I},0)
	           ,ISNULL(#{P2_STOCK_BUY_PROFIT_I},0)
	           ,ISNULL(#{P2_OWNER_STOCK_DRAW_I},0)
	           ,ISNULL(#{P2_ANU_I},0)
	           ,ISNULL(#{P2_MEDICAL_INSUR_I},0)
	           ,ISNULL(#{P2_HIRE_INSUR_I},0)
	           ,ISNULL(#{P2_IN_TAX_I},0)
	           ,ISNULL(#{P2_LOCAL_TAX_I},0)
	           ,ISNULL(#{P2_SAVE_TAX_DED_I},0)
	           ,ISNULL(#{P2_SP_TAX_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION1_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION2_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION3_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION4_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION5_I},0)
	           ,ISNULL(#{P2_TAX_EXEMPTION_STUDY_I},0)
	           ,ISNULL(#{P2_FORE_DED_I},0)
	           ,ISNULL(#{P2_OF_RETR_OVER_I},0)
	           ,ISNULL(#{P2_TAX_INVENTION_I},0)
	           ,#{P2_EXEMP_RATE}
	           ,#{S_USER_ID}
	           ,GETDATE()
	           ,#{S_USER_ID}
	           ,GETDATE()
	           )
	</update>
	<update id="had500ukrServiceImpl.delete500" parameterType="Map">
		DELETE FROM  HAD500T
        WHERE COMP_CODE				= #{S_COMP_CODE}      
          AND YEAR_YYYY				= #{YEAR_YYYY}          
          AND PERSON_NUMB           = #{PERSON_NUMB}     
	</update>
	<select id="had500ukrServiceImpl.selectList510" parameterType="Map" resultType="rMap">
		--had500ukr.Chad500ukr[fnHad500QStd] QUERY02
	    SELECT A.COMP_CODE
	         , A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , A.NONTAX_CODE
	         , B.NONTAX_CODE_NAME
	         , A.TAX_EXEMPTION_I
	         , A.PRINT_LOCATION
	      FROM HAD510T A WITH (NOLOCK)
	      LEFT JOIN HBS120T B WITH (NOLOCK)   ON B.COMP_CODE = A.COMP_CODE
					           				 AND B.NONTAX_CODE = A.NONTAX_CODE
					           				 AND B.TAX_YYYY = A.YEAR_YYYY
	           					  
	     WHERE A.COMP_CODE				= #{S_COMP_CODE}      
           AND A.YEAR_YYYY				= #{YEAR_YYYY}          
           AND A.PERSON_NUMB           = #{PERSON_NUMB}
	</select>
	<insert id="had500ukrServiceImpl.insert510" parameterType="Map">
		INSERT INTO HAD510T
           (COMP_CODE
           ,YEAR_YYYY
           ,PERSON_NUMB
           ,NONTAX_CODE
           ,TAX_EXEMPTION_I
           ,PRINT_LOCATION
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME
           ,INSERT_DB_USER
           ,INSERT_DB_TIME
			)
	     VALUES
           (#{S_COMP_CODE}
           ,#{YEAR_YYYY}
           ,#{PERSON_NUMB}
           ,#{NONTAX_CODE}
           ,#{TAX_EXEMPTION_I}
           ,#{PRINT_LOCATION}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE()
		)
	</insert>
	<update id="had500ukrServiceImpl.update510" parameterType="Map">
		UPDATE HAD510T
		   SET TAX_EXEMPTION_I	= #{TAX_EXEMPTION_I}
			 , PRINT_LOCATION	= #{PRINT_LOCATION}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND YEAR_YYYY	= #{YEAR_YYYY}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
		   AND NONTAX_CODE	= #{NONTAX_CODE}
	</update>
	<update id="had500ukrServiceImpl.delete510" parameterType="Map">
		DELETE FROM HAD510T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND YEAR_YYYY	= #{YEAR_YYYY}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
		   AND NONTAX_CODE	= #{NONTAX_CODE}
	</update>
	<select id="had500ukrServiceImpl.selectList520" parameterType="Map" resultType="rMap">
		--had500ukr.Chad500ukr[fnHad500QStd] QUERY03
		SELECT A.COMP_CODE
	         , A.YEAR_YYYY
	         , A.PERSON_NUMB
	         , A.NONTAX_CODE
	         , B.NONTAX_CODE_NAME
	         , A.TAX_EXEMPTION_I
	         , A.PRINT_LOCATION
	      FROM HAD520T A WITH (NOLOCK) 
	      LEFT JOIN HBS120T B WITH (NOLOCK)   ON B.COMP_CODE = A.COMP_CODE
					           				 AND B.NONTAX_CODE = A.NONTAX_CODE
					           				 AND B.TAX_YYYY = A.YEAR_YYYY
	     WHERE A.COMP_CODE			= #{S_COMP_CODE}      
           AND A.YEAR_YYYY			= #{YEAR_YYYY}          
           AND A.PERSON_NUMB          = #{PERSON_NUMB}
	</select>
	<insert id="had500ukrServiceImpl.insert520" parameterType="Map">
		INSERT INTO HAD520T
           (COMP_CODE
           ,YEAR_YYYY
           ,PERSON_NUMB
           ,NONTAX_CODE
           ,TAX_EXEMPTION_I
           ,PRINT_LOCATION
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME
           ,INSERT_DB_USER
           ,INSERT_DB_TIME
			)
	     VALUES
           (#{S_COMP_CODE}
           ,#{YEAR_YYYY}
           ,#{PERSON_NUMB}
           ,#{NONTAX_CODE}
           ,#{TAX_EXEMPTION_I}
           ,#{PRINT_LOCATION}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE()
		)
	</insert>
	<update id="had500ukrServiceImpl.update520" parameterType="Map">
		UPDATE HAD520T
		   SET TAX_EXEMPTION_I	= #{TAX_EXEMPTION_I}
			 , PRINT_LOCATION	= #{PRINT_LOCATION}
			 , UPDATE_DB_USER	= #{S_USER_ID}
			 , UPDATE_DB_TIME	= GETDATE()
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND YEAR_YYYY	= #{YEAR_YYYY}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
		   AND NONTAX_CODE	= #{NONTAX_CODE}
	</update>
	<update id="had500ukrServiceImpl.delete520" parameterType="Map">
		DELETE FROM HAD520T
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND YEAR_YYYY	= #{YEAR_YYYY}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
		   AND NONTAX_CODE	= #{NONTAX_CODE}
	</update>
	<select id="had500ukrServiceImpl.selectList530" parameterType="Map" resultType="rMap">
		--had500ukr.Chad500ukr[fnHad500QStd] QUERY04
	     SELECT COMP_CODE
	          , YEAR_YYYY
	          , PERSON_NUMB
	          , GIFT_CODE
	          , GIFT_YYYY
	          , EMPLOY_GUBUN
	          , DDUC_PSBL_PRD
	          , GIFT_AMOUNT_I
	          , BF_DDUC_I
	          , DDUC_OBJ_I
	          , INSERT_DB_USER
	          , INSERT_DB_TIME
	          , UPDATE_DB_USER
	          , UPDATE_DB_TIME
	       FROM HAD530T WITH (NOLOCK)
	      WHERE COMP_CODE    = #{S_COMP_CODE} 
	        AND PERSON_NUMB  = #{PERSON_NUMB}
	        AND EMPLOY_GUBUN = #{EMPLOY_GUBUN}
	</select>
	<insert id="had500ukrServiceImpl.insert530" parameterType="Map">
		INSERT INTO HAD530T
	           (COMP_CODE
	           ,YEAR_YYYY
	           ,GIFT_YYYY
	           ,PERSON_NUMB
	           ,GIFT_CODE
	           ,EMPLOY_GUBUN
	           ,DDUC_PSBL_PRD
	           ,GIFT_AMOUNT_I
	           ,BF_DDUC_I
	           ,DDUC_OBJ_I
	           ,INSERT_DB_USER
	           ,INSERT_DB_TIME
	           ,UPDATE_DB_USER
	           ,UPDATE_DB_TIME
	           )
	     VALUES
	           (#{S_COMP_CODE}
	           ,#{YEAR_YYYY}
	           ,#{GIFT_YYYY}
	           ,#{PERSON_NUMB}
	           ,#{GIFT_CODE}
	           ,#{EMPLOY_GUBUN}
	           ,#{DDUC_PSBL_PRD}
	           ,#{GIFT_AMOUNT_I}
	           ,#{BF_DDUC_I}
	           ,#{DDUC_OBJ_I}
	           ,#{S_USER_ID}
	           ,GETDATE()
	           ,#{S_USER_ID}
	           ,GETDATE()
           )
	</insert>
	<update id="had500ukrServiceImpl.update530" parameterType="Map">
		UPDATE HAD530T
		   SET  
	            DDUC_PSBL_PRD    = #{DDUC_PSBL_PRD}    
	           ,GIFT_AMOUNT_I    = #{GIFT_AMOUNT_I}    
	           ,BF_DDUC_I        = #{BF_DDUC_I}        
	           ,DDUC_OBJ_I       = #{DDUC_OBJ_I}        
	           ,UPDATE_DB_USER   = #{S_USER_ID}        
	           ,UPDATE_DB_TIME   = GETDATE()  
	     WHERE COMP_CODE        = #{S_COMP_CODE}         		
	       AND YEAR_YYYY        = #{YEAR_YYYY}        
	       AND GIFT_YYYY        = #{GIFT_YYYY}        
	       AND PERSON_NUMB      = #{PERSON_NUMB}      
	       AND GIFT_CODE        = #{GIFT_CODE}        
	       AND EMPLOY_GUBUN     = #{EMPLOY_GUBUN} 
	</update>
	<update id="had500ukrServiceImpl.delete530" parameterType="Map">
		DELETE FROM HAD530T
	     WHERE COMP_CODE        = #{S_COMP_CODE}         		
	       AND YEAR_YYYY        = #{YEAR_YYYY}  
	       AND PERSON_NUMB      = #{PERSON_NUMB}  
	       <if test="@foren.Ognl@isNotEmpty(GIFT_YYYY)">        
	       AND GIFT_YYYY        = #{GIFT_YYYY} 
	       </if>       
	       <if test="@foren.Ognl@isNotEmpty(GIFT_CODE)">      
	       AND GIFT_CODE        = #{GIFT_CODE}     
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(EMPLOY_GUBUN)">    
	       AND EMPLOY_GUBUN     = #{EMPLOY_GUBUN} 
	       </if>
	</update>
</mapper>