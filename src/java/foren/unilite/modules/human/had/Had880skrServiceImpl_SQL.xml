<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had880skrServiceImpl">
	<select id="had880skrServiceImpl.selectList_2020" parameterType="Map" resultType="rMap">
	--had880skr.Chad880skr[fnHad880Q2020] QUERY01
	BEGIN
		DECLARE @YEAR_YYYY	NVARCHAR(04)
		
	--  1. 변수 값 할당 -----------------------------------------------------------------------------------------------------
		SET @YEAR_YYYY	= #{YEAR_YYYY}
		
	--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
		DECLARE	@DateFormat	NVARCHAR(10)
		
		SELECT TOP 1 @DateFormat = M1.CODE_NAME
		  FROM BSA100T M1 WITH (NOLOCK)
		 WHERE M1.COMP_CODE	= #{S_COMP_CODE}
		   AND M1.MAIN_CODE	= 'B044'
		   AND M1.REF_CODE1	= 'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		
	--  2. 조회 -------------------------------------------------------------------------------------------------------------
		SELECT DISTINCT
			 --	인사정보
			   N1.DIV_NAME																		AS DIV_CODE						--사업장
			 , N2.TREE_NAME																		AS DEPT_CODE					--부서
			 , M2.CODE_NAME																		AS POST_CODE					--직위
			 , D.NAME																											--성명
			 , A.PERSON_NUMB																									--사번
			 , CASE WHEN ISNULL(D.JOIN_DATE, '') = '' OR D.JOIN_DATE = '00000000' THEN ''
					ELSE REPLACE(
						 REPLACE(
						 REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.JOIN_DATE	, 1, 4))
											, 'MM'	, SUBSTRING(D.JOIN_DATE	, 5, 2))
											, 'DD'	, SUBSTRING(D.JOIN_DATE	, 7, 2))
			   END																				AS JOIN_DATE					--입사일
			 , CASE WHEN ISNULL(D.RETR_DATE, '') = '' OR D.RETR_DATE = '00000000' THEN ''
					ELSE REPLACE(
						 REPLACE(
						 REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.RETR_DATE	, 1, 4))
											, 'MM'	, SUBSTRING(D.RETR_DATE	, 5, 2))
											, 'DD'	, SUBSTRING(D.RETR_DATE	, 7, 2))
			   END																				AS RETR_DATE					--퇴사일

			 --	근로소득정보
			 , ISNULL(A.NOW_PAY_TOT_I			, 0)											AS NOW_PAY_TOTAL_I				--급여총액(현)
			 , ISNULL(A.NOW_BONUS_TOTAL_I		, 0)											AS NOW_BONUS_TOTAL_I			--상여총액(현)
			 , ISNULL(A.NOW_ADD_BONUS_I			, 0)											AS NOW_ADD_BONUS_I				--인정상여(현)
			 , ISNULL(A.NOW_STOCK_PROFIT_I		, 0)											AS NOW_STOCK_PROFIT_I			--주식매수선택행사이익(현)
			 , ISNULL(A.NOW_OWNER_STOCK_DRAW_I	, 0)											AS NOW_OWNER_STOCK_DRAW_I		--우리사주조합인출금(현)
			 , ISNULL(A.NOW_OF_RETR_OVER_I		, 0)											AS NOW_OF_RETR_OVER_I			--임원퇴직한도초과액(현)
			 , ISNULL(A.NOW_TAX_INVENTION_I		, 0)											AS NOW_TAX_INVENTION_I			--직무발명보상금과세분(현)
			 , ISNULL(L.TAX_EXEMPTION_TOT_I		, 0)											AS NOW_TAX_EXEMPTION			--비과세(현)
			 , ISNULL(A.OLD_PAY_TOT_I			, 0)											AS OLD_PAY_TOTAL_I				--급여총액(전)
			 , ISNULL(A.OLD_BONUS_TOTAL_I		, 0)											AS OLD_BONUS_TOTAL_I			--상여총액(전)
			 , ISNULL(A.OLD_ADD_BONUS_I			, 0)											AS OLD_ADD_BONUS_I				--인정상여(전)
			 , ISNULL(A.OLD_STOCK_PROFIT_I		, 0)											AS OLD_STOCK_PROFIT_I			--주식매수선택행사이익(전)
			 , ISNULL(A.OLD_OWNER_STOCK_DRAW_I	, 0)											AS OLD_OWNER_STOCK_DRAW_I		--우리사주조합인출금(전)
			 , ISNULL(A.OLD_OF_RETR_OVER_I		, 0)											AS OLD_OF_RETR_OVER_I			--임원퇴직한도초과액(전)
			 , ISNULL(A.OLD_TAX_INVENTION_I		, 0)											AS OLD_TAX_INVENTION_I			--직무발명보상금과세분(전)
			 , ISNULL(L.P_TAX_EXEMPTION_TOT_I	, 0)											AS OLD_TAX_EXEMPTION			--비과세(전)
			 , ISNULL(A.YOUTH_DED_I_SUM			, 0) - ISNULL(L.YOUTH_DED_I_SUM			, 0)	AS NOW_YOUTH_DED_I_SUM			--감면소득(현)
			 , ISNULL(L.YOUTH_DED_I_SUM			, 0)											AS OLD_YOUTH_DED_I_SUM			--감면소득(전)

			 --	세액계산정보
			 , ISNULL(A.DEF_IN_TAX_I			, 0)											AS DEF_IN_TAX_I					--결정세액소득세
			 , ISNULL(A.DEF_LOCAL_TAX_I			, 0)											AS DEF_LOCAL_TAX_I				--결정세액주민세
			 , ISNULL(A.NOW_IN_TAX_I			, 0)											AS NOW_IN_TAX_I					--기납부세액(현)소득세
			 , ISNULL(A.NOW_LOCAL_TAX_I			, 0)											AS NOW_LOCAL_TAX_I				--기납부세액(현)주민세
			 , ISNULL(B.P1_IN_TAX_I				, 0) + ISNULL(B.P2_IN_TAX_I				, 0)	AS PREV_IN_TAX_I				--기납부세액(전)소득세
			 , ISNULL(B.P1_LOCAL_TAX_I			, 0) + ISNULL(B.P2_LOCAL_TAX_I			, 0)	AS PREV_LOCAL_TAX_I				--기납부세액(전)주민세
			 , ISNULL(A.IN_TAX_I				, 0)											AS IN_TAX_I						--차감징수세액(소득세)
			 , ISNULL(A.LOCAL_TAX_I				, 0)											AS LOCAL_TAX_I					--차감징수세액(주민세)

			 --	실효세율
			 , ISNULL(A.ACTUAL_TAX_RATE			, 0)											AS ACTUAL_TAX_RATE				--차감징수세액(주민세)
			 
			 /**************************************************************************************************************************************************
			 **	근로소득공제
			 **************************************************************************************************************************************************/
			 , ISNULL(A.INCOME_SUPP_TOTAL_I		, 0)											AS INCOME_SUPP_TOTAL_I			--총급여액
			 , ISNULL(A.INCOME_DED_I			, 0)											AS INCOME_DED_I					--근로소득공제
			 , ISNULL(A.EARN_INCOME_I			, 0)											AS EARN_INCOME_I				--근로소득금액
			 
			 /**************************************************************************************************************************************************
			 **	소득공제
			 **************************************************************************************************************************************************/
			 --	기본공제
			 , ISNULL(A.PER_DED_I				, 0)											AS PER_DED_I					--본인공제
			 , ISNULL(A.SPOUSE_DED_I			, 0)											AS SPOUSE_DED_I					--배우자공제
			 , ISNULL(A.SUPP_SUB_I				, 0)											AS SUPP_SUB_I					--부양자공제
			 
			 --	추가공제
			 , ISNULL(A.AGED_DED_I				, 0)											AS AGED_DED_I					--경로공제
			 , ISNULL(A.DEFORM_DED_I			, 0)											AS DEFORM_DED_I					--장애인공제
			 , ISNULL(A.WOMAN_DED_I				, 0)											AS WOMAN_DED_I					--부녀자공제
			 , ISNULL(A.ONE_PARENT_DED_I		, 0)											AS ONE_PARENT_DED_I				--한부모공제
			 
			 --	연금보험료공제
			 , ISNULL(A.ANU_DED_I				, 0)											AS ANU_DED_I					--국민연금공제금액
			 , ISNULL(A.PUBLIC_PENS_I			, 0)											AS PUBLIC_PENS_I				--공무원연금
			 , ISNULL(A.SOLDIER_PENS_I			, 0)											AS SOLDIER_PENS_I				--군인연금
			 , ISNULL(A.SCH_PENS_I				, 0)											AS SCH_PENS_I					--사립학교교직원연금
			 , ISNULL(A.POST_PENS_I				, 0)											AS POST_PENS_I					--별정우체국연금
			 
			 --	특별소득공제-보험료
			 , ISNULL(A.MED_PREMINM_I			, 0)											AS MED_PREMINM_I				--건강보험료
			 , ISNULL(A.HIRE_INSUR_I			, 0)											AS HIRE_INSUR_I					--고용보험료
			 
			 --	특별소득공제-주택자금
			 , ISNULL(A.HOUS_AMOUNT_I			, 0)											AS HOUS_AMOUNT_I				--주택자금불입액(대출기관)
			 , ISNULL(A.HOUS_AMOUNT_I_2			, 0)											AS HOUS_AMOUNT_I_2				--주택자금불입액(거주자)
			 , ISNULL(A.MORTGAGE_RETURN_I_2		, 0)											AS MORTGAGE_RETURN_I_2			--장기주택저당차입금이자상환액(15년미만)
			 , ISNULL(A.MORTGAGE_RETURN_I		, 0)											AS MORTGAGE_RETURN_I			--장기주택저당차입금이자상환액(15년~29년)
			 , ISNULL(A.MORTGAGE_RETURN_I_3		, 0)											AS MORTGAGE_RETURN_I_3			--장기주택저당차입금이자상환액(30년이상)
			 , ISNULL(A.MORTGAGE_RETURN_I_5		, 0)											AS MORTGAGE_RETURN_I_5			--고정금리비거치상환대출(1500만원한도)
			 , ISNULL(A.MORTGAGE_RETURN_I_4		, 0)											AS MORTGAGE_RETURN_I_4			--기타대출(500만원한도)
			 , ISNULL(A.MORTGAGE_RETURN_I_6		, 0)											AS MORTGAGE_RETURN_I_6			--15년이상(고정금리이면서 비거치상환)
			 , ISNULL(A.MORTGAGE_RETURN_I_7		, 0)											AS MORTGAGE_RETURN_I_7			--15년이상(고정금리이거나 비거치상환)
			 , ISNULL(A.MORTGAGE_RETURN_I_8		, 0)											AS MORTGAGE_RETURN_I_8			--15년이상(그밖의대출)
			 , ISNULL(A.MORTGAGE_RETURN_I_9		, 0)											AS MORTGAGE_RETURN_I_9			--10년이상(고정금리이거나 비거치상환)
			 
			 --	특별소득공제-기부금(이월분)
			 , ISNULL(A.GIFT_DED_I				, 0)											AS GIFT_DED_I					--(소득공제)기부금소득공제합계
			 
			 --	특별소득공제-계
			 , ISNULL(A.MED_PREMINM_I			, 0)
			 + ISNULL(A.HIRE_INSUR_I			, 0)
			 + ISNULL(A.HOUS_AMOUNT_I			, 0)
			 + ISNULL(A.HOUS_AMOUNT_I_2			, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_2		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_3		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_5		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_4		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_6		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_7		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_8		, 0)
			 + ISNULL(A.MORTGAGE_RETURN_I_9		, 0)
			 + ISNULL(A.GIFT_DED_I				, 0)											AS SP_INCOME_DED_I				--특별소득공제 계
			 
			 --	그밖의소득공제
			 , ISNULL(A.PRIV_PENS_I				, 0)											AS PRIV_PENS_I					--개인연금저축소득공제

			 , ISNULL(A.COMP_PREMINUM_DED_I		, 0)											AS COMP_PREMINUM_DED_I			--소기업,소상공인공제부금소득공제

			 , ISNULL(A.HOUS_BU_AMT				, 0) + ISNULL(A.HOUS_BU_ADD_AMT			, 0)	AS HOUS_BU_AMT					--청약저축
			 , ISNULL(A.HOUS_WORK_AMT			, 0)											AS HOUS_WORK_AMT				--근로자주택마련저축
			 , ISNULL(A.HOUS_BU_AMOUNT_I		, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I	, 0)	AS HOUS_BU_AMOUNT_I				--주택청약종합저축

			 , ISNULL(A.INVESTMENT_DED_I		, 0)											AS INVESTMENT_DED_I				--투자조합출자공제

			 , ISNULL(A.CARD_DED_I				, 0)											AS CARD_DED_I					--신용카드공제

			 , ISNULL(A.STAFF_STOCK_DED_I		, 0)											AS STAFF_STOCK_DED_I			--우리사주조합출연금액

			 , ISNULL(A.EMPLOY_WORKER_DED_I		, 0)											AS EMPLOY_WORKER_DED_I			--고용유지중소기업근로자소득공제
			 
			 , ISNULL(A.LONG_INVEST_STOCK_DED_I	, 0)											AS LONG_INVEST_STOCK_DED_I		--장기집합투자증권저축
			 
			 --	그밖의소득공제-계
			 , ISNULL(A.PRIV_PENS_I				, 0)
			 + ISNULL(A.COMP_PREMINUM_DED_I		, 0)
			 + ISNULL(A.HOUS_BU_AMT				, 0)
			 + ISNULL(A.HOUS_BU_ADD_AMT			, 0)
			 + ISNULL(A.HOUS_WORK_AMT			, 0)
			 + ISNULL(A.HOUS_BU_AMOUNT_I		, 0)
			 + ISNULL(A.HOUS_BU_AMOUNT_ADD_I	, 0)
			 + ISNULL(A.INVESTMENT_DED_I		, 0)
			 + ISNULL(A.CARD_DED_I				, 0)
			 + ISNULL(A.STAFF_STOCK_DED_I		, 0)
			 + ISNULL(A.EMPLOY_WORKER_DED_I		, 0)
			 + ISNULL(A.LONG_INVEST_STOCK_DED_I	, 0)											AS ETC_INCOME_DED_I				--그밖의소득공제-계
			 
			 /**************************************************************************************************************************************************
			 **	과세표준
			 **************************************************************************************************************************************************/
			 , ISNULL(A.OVER_INCOME_DED_LMT		, 0)											AS OVER_INCOME_DED_LMT			--특별공제 종합한도 초과액
			 , ISNULL(A.TAX_STD_I				, 0)											AS TAX_STD_I					--소득과세표준
			 , ISNULL(A.COMP_TAX_I				, 0)											AS COMP_TAX_I					--산출세액
			 
			 /**************************************************************************************************************************************************
			 **	소득공제
			 **************************************************************************************************************************************************/
			 --	세액감면
			 , ISNULL(A.INCOME_REDU_I			, 0)											AS INCOME_REDU_I				--소득세법
			 , CASE WHEN D.NATION_CODE != 'KR' AND ISNULL(A.YOUTH_EXEMP_RATE, 0) > 0 THEN A.YOUTH_EXEMP_RATE
					ELSE 0
			   END																				AS SKILL_DED_RATE				--외국인기술공제소득세감면율
			 , ISNULL(A.SKILL_DED_I				, 0)											AS SKILL_DED_I					--외국인기술공제
			 , CASE WHEN D.NATION_CODE  = 'KR' AND ISNULL(A.YOUTH_EXEMP_RATE, 0) > 0 THEN A.YOUTH_EXEMP_RATE
					ELSE 0
			   END																				AS YOUTH_EXEMP_RATE				--중소기업청년소득세감면율
			 , ISNULL(A.YOUTH_DED_I				, 0)											AS YOUTH_DED_I					--중소기업청년소득세감면
			 , CASE WHEN ISNULL(A.MANAGE_RESULT_REDU_I, 0) > 0 THEN 50
					ELSE 0
			   END																				AS MANAGE_RESULT_REDU_RATE		--성과공유중소기업경영성과급
			 , ISNULL(A.MANAGE_RESULT_REDU_I	, 0)											AS MANAGE_RESULT_REDU_I			--성과공유중소기업경영성과급
			 , CASE WHEN ISNULL(A.MANAGE_RESULT_REDU_I, 0) > 0 THEN 50
					ELSE 0
			   END																				AS CORE_COMPEN_FUND_REDU_RATE	--중소기업핵심인력성과보상기금
			 , ISNULL(A.CORE_COMPEN_FUND_REDU_I	, 0)											AS CORE_COMPEN_FUND_REDU_I		--중소기업핵심인력성과보상기금
			 , CASE WHEN ISNULL(A.MANAGE_RESULT_REDU_I, 0) > 0 THEN 50
					ELSE 0
			   END																				AS RETURN_WORKER_REDU_RATE		--내국인우수인력국내복귀소득세감면
			 , ISNULL(A.RETURN_WORKER_REDU_I	, 0)											AS RETURN_WORKER_REDU_I			--내국인우수인력국내복귀소득세감면
			 , ISNULL(A.TAXES_REDU_I			, 0)											AS TAXES_REDU_I					--조감법
			 
			 --	세액감면-계
			 , ISNULL(A.INCOME_REDU_I			, 0)
			 + ISNULL(A.SKILL_DED_I				, 0)
			 + ISNULL(A.YOUTH_DED_I				, 0)
			 + ISNULL(A.MANAGE_RESULT_REDU_I	, 0)
			 + ISNULL(A.CORE_COMPEN_FUND_REDU_I	, 0)
			 + ISNULL(A.RETURN_WORKER_REDU_I	, 0)
			 + ISNULL(A.TAXES_REDU_I			, 0)											AS COMP_TAX_REDU_I				--세액감면-계
			 
			 --	근로소득세액공제
			 , ISNULL(A.IN_TAX_DED_I			, 0)											AS IN_TAX_DED_I					--근로소득세액공제
			 
			 --	자녀세액공제
			 , ISNULL(A.CHILD_TAX_DED_I			, 0)											AS CHILD_TAX_DED_I				--자녀세액공제
			 
			 --	연금계좌
			 , ISNULL(A.SCI_TAX_DED_I			, 0) + ISNULL(A.SCI_TAX_DED_I1			, 0)	AS SCI_TAX_DED_I				--과학기술인공제
			 , ISNULL(A.RETIRE_TAX_DED_I		, 0) + ISNULL(A.RETIRE_TAX_DED_I1		, 0)	AS RETIRE_TAX_DED_I				--근로자퇴직급여보장법
			 , ISNULL(A.PENS_TAX_DED_I			, 0) + ISNULL(A.PENS_TAX_DED_I1			, 0)	AS PENS_TAX_DED_I				--연금저축소득공제
			 
			 --	특별세액공제
			 , ISNULL(A.ETC_INSUR_TAX_DED_I		, 0)											AS ETC_INSUR_TAX_DED_I			--보장성보험
			 , ISNULL(A.DEFORM_INSUR_TAX_DED_I	, 0)											AS DEFORM_INSUR_TAX_DED_I		--장애인전용보장성보험
			 
			 , ISNULL(A.MED_TAX_DED_I			, 0)											AS MED_TAX_DED_I				--의료비공제금액
			 
			 , ISNULL(A.EDUC_TAX_DED_I			, 0)											AS EDUC_TAX_DED_I				--교육비공제
			 
			 --, ISNULL(A.GIFT_TAX_DED_I			, 0)											AS GIFT_TAX_DED_I				--(세액공제)기부금세액공제합계
			 , ISNULL(A.POLICY_INDED_TAX_DED_I	, 0)											AS POLICY_INDED_TAX_DED_I		--(세액공제)정치자금기부금(10만원미만)
			 , ISNULL(A.POLICY_GIFT_TAX_DED_I	, 0)											AS POLICY_GIFT_TAX_DED_I		--(세액공제)정치자금기부금(10만원초과)
			 , ISNULL(A.LEGAL_GIFT_TAX_DED_I	, 0)											AS LEGAL_GIFT_TAX_DED_I			--(세액공제)법정기부금
			 , ISNULL(A.STAFF_GIFT_TAX_DED_I	, 0)											AS STAFF_GIFT_TAX_DED_I			--(세액공제)우리사주기부금
			 , ISNULL(A.APPOINT_GIFT_TAX_DED_I	, 0)											AS APPOINT_GIFT_TAX_DED_I		--(세액공제)지정기부금
			 , ISNULL(A.ASS_GIFT_TAX_DED_I		, 0)											AS ASS_GIFT_TAX_DED_I			--(세액공제)종교단체기부금
			 
			 --	특별세액공제-계
			 , ISNULL(A.ETC_INSUR_TAX_DED_I		, 0)
			 + ISNULL(A.DEFORM_INSUR_TAX_DED_I	, 0)
			 + ISNULL(A.MED_TAX_DED_I			, 0)
			 + ISNULL(A.EDUC_TAX_DED_I			, 0)
			 + ISNULL(A.GIFT_TAX_DED_I			, 0)											AS SP_TAX_DED_I					--특별세액공제-계
			 
			 , ISNULL(A.STD_TAX_DED_I			, 0)											AS STD_TAX_DED_I				--표준세액공제
			 
			 --	기타세액공제
			 , ISNULL(A.NAP_TAX_DED_I			, 0)											AS NAP_TAX_DED_I				--납세조합세액공제
			 , ISNULL(A.HOUS_INTER_I			, 0)											AS HOUS_INTER_I					--주택자금상환액
			 , ISNULL(A.OUTSIDE_INCOME_I		, 0)											AS OUTSIDE_INCOME_I				--외국납부세액
			 , ISNULL(A.MON_RENT_I				, 0)											AS MON_RENT_I					--월세액
			 
			 --	세액공제-계
			 , ISNULL(A.IN_TAX_DED_I			, 0)
			 + ISNULL(A.CHILD_TAX_DED_I			, 0)
			 + ISNULL(A.SCI_TAX_DED_I			, 0)
			 + ISNULL(A.SCI_TAX_DED_I1			, 0)
			 + ISNULL(A.RETIRE_TAX_DED_I		, 0)
			 + ISNULL(A.RETIRE_TAX_DED_I1		, 0)
			 + ISNULL(A.PENS_TAX_DED_I			, 0)
			 + ISNULL(A.PENS_TAX_DED_I1			, 0)
			 + ISNULL(A.ETC_INSUR_TAX_DED_I		, 0)
			 + ISNULL(A.DEFORM_INSUR_TAX_DED_I	, 0)
			 + ISNULL(A.MED_TAX_DED_I			, 0)
			 + ISNULL(A.EDUC_TAX_DED_I			, 0)
			 + ISNULL(A.GIFT_TAX_DED_I			, 0)
			 + ISNULL(A.STD_TAX_DED_I			, 0)
			 + ISNULL(A.NAP_TAX_DED_I			, 0)
			 + ISNULL(A.HOUS_INTER_I			, 0)
			 + ISNULL(A.OUTSIDE_INCOME_I		, 0)
			 + ISNULL(A.MON_RENT_I				, 0)											AS TAX_DED_SUM_I				--세액공제-계
		  FROM				HAD600T AS A	WITH (NOLOCK)
			INNER	JOIN	HUM100T AS D	WITH (NOLOCK) ON D.COMP_CODE	= A.COMP_CODE
														 AND D.PERSON_NUMB	= A.PERSON_NUMB
			INNER	JOIN	BOR120T AS C	WITH (NOLOCK) ON C.COMP_CODE	= D.COMP_CODE
														 AND C.DIV_CODE		= D.SECT_CODE
			INNER	JOIN	BOR100T AS E	WITH (NOLOCK) ON E.COMP_CODE	= A.COMP_CODE
			LEFT	JOIN	HAD400T AS F	WITH (NOLOCK) ON F.COMP_CODE	= A.COMP_CODE
														 AND F.YEAR_YYYY	= A.YEAR_YYYY
														 AND F.PERSON_NUMB	= A.PERSON_NUMB
			LEFT	JOIN	HAD500T AS B	WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
														 AND B.YEAR_YYYY	= A.YEAR_YYYY
														 AND B.PERSON_NUMB	= A.PERSON_NUMB
			LEFT	JOIN (	SELECT X.COMP_CODE
								 , X.YEAR_YYYY
								 , X.PERSON_NUMB
								 , SUM(CASE WHEN X.SEND_YN = 'Y' AND X.TAX_REDU_YN != 'Y' THEN ISNULL(X.TAX_EXEMPTION_TOT_I	 , 0)	ELSE 0	END)	AS TAX_EXEMPTION_TOT_I
								 , SUM(CASE WHEN X.SEND_YN = 'Y' AND X.TAX_REDU_YN != 'Y' THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)	ELSE 0	END)	AS P_TAX_EXEMPTION_TOT_I
								 , SUM(CASE WHEN X.SEND_YN = 'Y' AND X.TAX_REDU_YN  = 'Y' THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)	ELSE 0	END)	AS YOUTH_DED_I_SUM
							  FROM (
									-- 연말정산비과세소득
									SELECT A.COMP_CODE
										 , A.YEAR_YYYY
										 , A.PERSON_NUMB
										 , A.NONTAX_CODE
										 , ISNULL(C.SEND_YN		, 'N')				AS SEND_YN
										 , ISNULL(C.TAX_REDU_YN	, 'N')				AS TAX_REDU_YN
										 , SUM(ISNULL(A.NON_TAX_EMPTION_I	, 0))	AS TAX_EXEMPTION_TOT_I
										 , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0)
											 + ISNULL(A.P2_NON_TAX_EMPTION_I, 0))	AS P_TAX_EXEMPTION_TOT_I
									  FROM					HAD610T A	WITH (NOLOCK)
											INNER	JOIN	HBS120T C	WITH (NOLOCK) ON A.COMP_CODE	= C.COMP_CODE
																					 AND A.NONTAX_CODE	= C.NONTAX_CODE
																					 AND A.YEAR_YYYY	= C.TAX_YYYY
									 WHERE A.COMP_CODE	= #{S_COMP_CODE}
									   AND A.YEAR_YYYY	= #{YEAR_YYYY}
									 GROUP BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE, ISNULL(C.SEND_YN, 'N'), ISNULL(C.TAX_REDU_YN, 'N')

									UNION  ALL

									-- 주식매수선택권행사이익 등록
									SELECT A.COMP_CODE
										 , LEFT(A.PAY_YYYYMM, 4)					AS YEAR_YYYY
										 , A.PERSON_NUMB
										 , A.NONTAX_CODE
										 , ISNULL(C.SEND_YN				, 'N')		AS SEND_YN
										 , ISNULL(C.TAX_REDU_YN			, 'N')		AS TAX_REDU_YN
										 , SUM(ISNULL(A.TAX_EXEMPTION_I	, 0))		AS TAX_EXEMPTION_TOT_I
										 , ISNULL(B1.TAX_EXEMPTION_I	, 0)
										 + ISNULL(B2.TAX_EXEMPTION_I	, 0)		AS P_TAX_EXEMPTION_TOT_I
									  FROM					HPA810T A	WITH (NOLOCK)
											LEFT	JOIN	HAD510T B1	WITH (NOLOCK) ON B1.COMP_CODE	= A.COMP_CODE
																					 AND B1.YEAR_YYYY	= LEFT(A.PAY_YYYYMM,4)
																					 AND B1.PERSON_NUMB	= A.PERSON_NUMB
																					 AND B1.NONTAX_CODE	= A.NONTAX_CODE
											LEFT	JOIN	HAD520T B2	WITH (NOLOCK) ON B2.COMP_CODE	= A.COMP_CODE
																					 AND B2.YEAR_YYYY	= LEFT(A.PAY_YYYYMM,4)
																					 AND B2.PERSON_NUMB	= A.PERSON_NUMB
																					 AND B2.NONTAX_CODE	= A.NONTAX_CODE
											INNER	JOIN	HBS120T C	WITH (NOLOCK) ON A.COMP_CODE			= C.COMP_CODE
																					 AND A.NONTAX_CODE			= C.NONTAX_CODE
																					 AND LEFT(A.PAY_YYYYMM, 4)	= C.TAX_YYYY
									 WHERE A.COMP_CODE		= #{S_COMP_CODE}
									   AND A.PAY_YYYYMM  LIKE #{YEAR_YYYY} + '%'
									 GROUP BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I, ISNULL(C.SEND_YN, 'N'), ISNULL(C.TAX_REDU_YN, 'N')

									UNION  ALL

									-- 우리사주조합인출금 등록
									SELECT A.COMP_CODE
										 , LEFT(A.PAY_YYYYMM, 4)					AS YEAR_YYYY
										 , A.PERSON_NUMB
										 , A.NONTAX_CODE
										 , ISNULL(C.SEND_YN				, 'N')		AS SEND_YN
										 , ISNULL(C.TAX_REDU_YN			, 'N')		AS TAX_REDU_YN
										 , SUM(ISNULL(A.TAX_EXEMPTION_I	, 0))		AS TAX_EXEMPTION_TOT_I
										 , ISNULL(B1.TAX_EXEMPTION_I	, 0)
										 + ISNULL(B2.TAX_EXEMPTION_I	, 0)		AS P_TAX_EXEMPTION_TOT_I
									  FROM					HPA820T A	WITH (NOLOCK)
											LEFT	JOIN	HAD510T B1	WITH (NOLOCK) ON B1.COMP_CODE	= A.COMP_CODE
																					 AND B1.YEAR_YYYY	= LEFT(A.PAY_YYYYMM,4)
																					 AND B1.PERSON_NUMB	= A.PERSON_NUMB
																					 AND B1.NONTAX_CODE	= A.NONTAX_CODE
											LEFT	JOIN	HAD520T B2	WITH (NOLOCK) ON B2.COMP_CODE	= A.COMP_CODE
																					 AND B2.YEAR_YYYY	= LEFT(A.PAY_YYYYMM,4)
																					 AND B2.PERSON_NUMB	= A.PERSON_NUMB
																					 AND B2.NONTAX_CODE	= A.NONTAX_CODE
											INNER	JOIN	HBS120T C	WITH (NOLOCK) ON A.COMP_CODE			= C.COMP_CODE
																					 AND A.NONTAX_CODE			= C.NONTAX_CODE
																					 AND LEFT(A.PAY_YYYYMM, 4)	= C.TAX_YYYY
									 WHERE A.COMP_CODE		= #{S_COMP_CODE}
									   AND A.PAY_YYYYMM  LIKE #{YEAR_YYYY} + '%'
									 GROUP BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I, ISNULL(C.SEND_YN, 'N'), ISNULL(C.TAX_REDU_YN, 'N')
								   ) X
							 GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
						 ) AS L							  ON L.COMP_CODE	= A.COMP_CODE
														 AND L.YEAR_YYYY	= A.YEAR_YYYY
														 AND L.PERSON_NUMB	= A.PERSON_NUMB
			LEFT	JOIN	BSA100T AS M1	WITH (NOLOCK) ON M1.COMP_CODE	= D.COMP_CODE
														 AND M1.MAIN_CODE	= 'B012'
														 AND M1.SUB_CODE	= D.NATION_CODE
			LEFT	JOIN	BSA100T AS M2	WITH (NOLOCK) ON M2.COMP_CODE	= D.COMP_CODE
														 AND M2.MAIN_CODE	= 'H005'
														 AND M2.SUB_CODE	= D.POST_CODE
			LEFT	JOIN	BOR120T AS N1	WITH (NOLOCK) ON N1.COMP_CODE	= D.COMP_CODE
											             AND N1.DIV_CODE	= D.DIV_CODE
			LEFT	JOIN	BSA210T AS N2	WITH (NOLOCK) ON N2.COMP_CODE	= D.COMP_CODE
														 AND N2.TREE_CODE	= D.DEPT_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.YEAR_YYYY		= #{YEAR_YYYY}
		<if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
		   AND A.HALFWAY_TYPE	= #{HALFWAY_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND D.SECT_CODE		= #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPTS)">
		   AND D.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(NAME)">
		   AND D.NAME		 LIKE #{NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
		   AND D.RETR_DATE	   &gt;= #{RETIRE_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
		   AND D.RETR_DATE	   &lt;= #{RETIRE_DATE_TO}
		</if>
		 ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
	END
	</select>
	<select id="had880skrServiceImpl.selectList_2019" parameterType="Map" resultType="rMap">
	--had880skr.Chad880skr[fnHad880Q2019] QUERY01
    BEGIN
        DECLARE @YEAR_YYYY              NVARCHAR(04)

    --  1. 변수 값 할당 -----------------------------------------------------------------------------------------------------
        SET @YEAR_YYYY              = #{YEAR_YYYY}

    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        DECLARE         @DateFormat         NVARCHAR(10)
 
        SELECT TOP 1 @DateFormat = M1.CODE_NAME
        FROM   BSA100T M1 WITH (NOLOCK)
        WHERE  M1.COMP_CODE = #{S_COMP_CODE}
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

    --  2. 조회 -------------------------------------------------------------------------------------------------------------
        SELECT DISTINCT
               N1.DIV_NAME                                                      AS DIV_CODE                    --사업장
             , N2.TREE_NAME                                                     AS DEPT_CODE                   --부서
             , M2.CODE_NAME                                                     AS POST_CODE                   --직위
             , D.NAME                                                                                          --성명
             , A.PERSON_NUMB                                                                                   --사번
             , CASE WHEN ISNULL(D.JOIN_DATE, '') = '' OR D.JOIN_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.JOIN_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.JOIN_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.JOIN_DATE , 7, 2))
               END                                                              AS JOIN_DATE                   --입사일
             , CASE WHEN ISNULL(D.RETR_DATE, '') = '' OR D.RETR_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.RETR_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.RETR_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.RETR_DATE , 7, 2))
               END                                                              AS RETR_DATE                   --퇴사일
             , ISNULL(A.NOW_PAY_TOT_I         , 0) AS NOW_PAY_TOTAL_I                                          --급여총액(현)
             , ISNULL(A.NOW_BONUS_TOTAL_I     , 0) AS NOW_BONUS_TOTAL_I                                        --상여총액(현)
             , ISNULL(A.NOW_ADD_BONUS_I       , 0) AS NOW_ADD_BONUS_I                                          --인정상여
             , ISNULL(B.P1_PAY_TOTAL_I        , 0) + ISNULL(B.P2_PAY_TOTAL_I     , 0) AS PREV_PAY_TOTAL_I      --급여총액(전)
             , ISNULL(B.P1_BONUS_I_TOTAL_I    , 0) + ISNULL(B.P2_BONUS_I_TOTAL_I , 0) AS PREV_BONUS_TOTAL_I    --상여총액(전)
             , ISNULL(L.TAX_EXEMPTION_TOT_I   , 0) AS TAX_EXEMPTION                                            --비과세(현)
             , ISNULL(L.P_TAX_EXEMPTION_TOT_I , 0) AS P_TAX_EXEMPTION                                          --비과세(전)
             , ISNULL(A.YOUTH_DED_I_SUM, 0)- ISNULL(L.YOUTH_DED_I_SUM, 0)             AS YOUTH_DED_I_SUM       --감면소득(현)
             , ISNULL(L.YOUTH_DED_I_SUM       , 0) AS PREV_YOUTH_DED_I_SUM                                     --감면소득(전)
             , ISNULL(A.DEF_IN_TAX_I          , 0) AS DEF_IN_TAX_I                                             --결정세액소득세
             , ISNULL(A.DEF_LOCAL_TAX_I       , 0) AS DEF_LOCAL_TAX_I                                          --결정세액주민세
             , ISNULL(A.NOW_IN_TAX_I          , 0) AS NOW_IN_TAX_I                                             --기납부세액(현)소득세
             , ISNULL(A.NOW_LOCAL_TAX_I       , 0) AS NOW_LOCAL_TAX_I                                          --기납부세액(현)주민세
             , ISNULL(B.P1_IN_TAX_I           , 0) + ISNULL(B.P2_IN_TAX_I        , 0) AS PREV_IN_TAX_I         --기납부세액(전)소득세
             , ISNULL(B.P1_LOCAL_TAX_I        , 0) + ISNULL(B.P2_LOCAL_TAX_I     , 0) AS PREV_LOCAL_TAX_I      --기납부세액(전)주민세
             , ISNULL(A.IN_TAX_I              , 0) AS IN_TAX_I                                                 --차감징수세액(소득세)
             , ISNULL(A.LOCAL_TAX_I           , 0) AS LOCAL_TAX_I                                              --차감징수세액(주민세)

             , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                              AS INCOME_SUPP_TOTAL_I         --총급여액
             , ISNULL(A.INCOME_DED_I          , 0)                              AS INCOME_DED_I                --근로소득공제
             , ISNULL(A.EARN_INCOME_I         , 0)                              AS EARN_INCOME_I               --근로소득금액

             , ISNULL(A.PER_DED_I             , 0)                              AS PER_DED_I                   --본인공제
             , ISNULL(A.SPOUSE_DED_I          , 0)                              AS SPOUSE_DED_I                --배우자공제
             , ISNULL(A.SUPP_SUB_I            , 0)                              AS SUPP_SUB_I                  --부양자공제

             , ISNULL(A.AGED_DED_I            , 0)                              AS AGED_DED_I                  --경로공제
             , ISNULL(A.DEFORM_DED_I          , 0)                              AS DEFORM_DED_I                --장애인공제
             , ISNULL(A.WOMAN_DED_I           , 0)                              AS WOMAN_DED_I                 --부녀자공제
             , ISNULL(A.ONE_PARENT_DED_I      , 0)                              AS ONE_PARENT_DED_I            --한부모공제

             , ISNULL(A.ANU_DED_I             , 0)                              AS ANU_DED_I                   --국민연금공제금액
             , ISNULL(A.PUBLIC_PENS_I         , 0)                              AS PUBLIC_PENS_I               --공무원연금
             , ISNULL(A.SOLDIER_PENS_I        , 0)                              AS SOLDIER_PENS_I              --군인연금
             , ISNULL(A.SCH_PENS_I            , 0)                              AS SCH_PENS_I                  --사립학교교직원연금
             , ISNULL(A.POST_PENS_I           , 0)                              AS POST_PENS_I                 --별정우체국연금

             , ISNULL(A.MED_PREMINM_I         , 0)                              AS MED_PREMINM_I               --건강보험료
             , ISNULL(A.HIRE_INSUR_I          , 0)                              AS HIRE_INSUR_I                --고용보험료

             , ISNULL(A.HOUS_AMOUNT_I         , 0)                              AS HOUS_AMOUNT_I               --주택자금불입액(대출기관)
             , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                              AS HOUS_AMOUNT_I_2             --주택자금불입액(거주자)
             , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                              AS MORTGAGE_RETURN_I_2         --장기주택저당차입금이자상환액(15년미만)
             , ISNULL(A.MORTGAGE_RETURN_I     , 0)                              AS MORTGAGE_RETURN_I           --장기주택저당차입금이자상환액(15년~29년)
             , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                              AS MORTGAGE_RETURN_I_3         --장기주택저당차입금이자상환액(30년이상)
             , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                              AS MORTGAGE_RETURN_I_5         --고정금리비거치상환대출(1500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                              AS MORTGAGE_RETURN_I_4         --기타대출(500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                              AS MORTGAGE_RETURN_I_6         --15년이상(고정금리이면서 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                              AS MORTGAGE_RETURN_I_7         --15년이상(고정금리이거나 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                              AS MORTGAGE_RETURN_I_8         --15년이상(그밖의대출)
             , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                              AS MORTGAGE_RETURN_I_9         --10년이상(고정금리이거나 비거치상환)

             , ISNULL(A.GIFT_DED_I            , 0)                              AS GIFT_DED_I                  --(소득공제)기부금소득공제합계

             , ISNULL(A.PRIV_PENS_I           , 0)                              AS PRIV_PENS_I                 --개인연금저축소득공제

             , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
             , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
             , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축

             , ISNULL(A.CARD_DED_I            , 0)                              AS CARD_DED_I                  --신용카드공제

             , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                              AS COMP_PREMINUM_DED_I         --소기업,소상공인공제부금소득공제
             , ISNULL(A.INVESTMENT_DED_I      , 0)                              AS INVESTMENT_DED_I            --투자조합출자공제
             , ISNULL(A.STAFF_STOCK_DED_I     , 0)                              AS STAFF_STOCK_DED_I           --우리사주조합출연금액
             , ISNULL(A.STAFF_GIFT_DED_I      , 0)                              AS STAFF_GIFT_DED_I            --(소득공제)우리사주기부금
             , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                              AS EMPLOY_WORKER_DED_I         --고용유지중소기업근로자소득공제
             , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                              AS NOT_AMOUNT_LOAN_DED_I       --목돈안드는전세이자상환액
             , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                             AS LONG_INVEST_STOCK_DED_I     --장기집합투자증권저축

             , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                              AS OVER_INCOME_DED_LMT         --특별공제 종합한도 초과액
             , ISNULL(A.TAX_STD_I             , 0)                              AS TAX_STD_I                   --소득과세표준
             , ISNULL(A.COMP_TAX_I            , 0)                              AS COMP_TAX_I                  --산출세액

             , ISNULL(A.INCOME_REDU_I         , 0)                              AS INCOME_REDU_I               --소득세법
             , ISNULL(A.SKILL_DED_I           , 0)                              AS SKILL_DED_I                 --외국인기술공제
             , ISNULL(A.TAXES_REDU_I          , 0)                              AS TAXES_REDU_I                --조감법

			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) = 100 THEN ISNULL(A.YOUTH_DED_I        , 0)					--중소기업청년소득세감면금액(100%)
					ELSE 0
			   END	AS YOUTH_DED_I
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  50 THEN ISNULL(ISNULL(A.YOUTH_DED_I2, 0), A.YOUTH_DED_I)	--중소기업청년소득세감면금액(50%)
					ELSE 0
			   END	AS YOUTH_DED_I2
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  70 THEN ISNULL(ISNULL(A.YOUTH_DED_I3, 0), A.YOUTH_DED_I)	--중소기업청년소득세감면금액(70%)
					ELSE 0
			   END	AS YOUTH_DED_I3
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  90 THEN ISNULL(A.YOUTH_DED_I        , 0)					--중소기업청년소득세감면금액(90%)
					ELSE 0
			   END	AS YOUTH_DED_I4
			 
             , ISNULL(A.IN_TAX_DED_I          , 0)                              AS IN_TAX_DED_I                --근로소득세액공제
             , ISNULL(A.CHILD_TAX_DED_I       , 0)                              AS CHILD_TAX_DED_I             --자녀세액공제

             , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)    AS SCI_TAX_DED_I               --과학기술인공제
             , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)    AS RETIRE_TAX_DED_I            --근로자퇴직급여보장법
             , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)    AS PENS_TAX_DED_I              --연금저축소득공제

             , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                              AS ETC_INSUR_TAX_DED_I         --보장성보험
             , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                              AS DEFORM_INSUR_TAX_DED_I      --장애인전용보장성보험

             , ISNULL(A.MED_TAX_DED_I         , 0)                              AS MED_TAX_DED_I               --의료비공제금액

             , ISNULL(A.EDUC_TAX_DED_I        , 0)                              AS EDUC_TAX_DED_I              --교육비공제

             , ISNULL(A.GIFT_TAX_DED_I        , 0)                              AS GIFT_TAX_DED_I              --(세액공제)기부금세액공제합계

             , ISNULL(A.STD_TAX_DED_I         , 0)                              AS STD_TAX_DED_I               --표준세액공제

             , ISNULL(A.NAP_TAX_DED_I         , 0)                              AS NAP_TAX_DED_I               --납세조합세액공제
             , ISNULL(A.HOUS_INTER_I          , 0)                              AS HOUS_INTER_I                --주택자금상환액
             , ISNULL(A.OUTSIDE_INCOME_I      , 0)                              AS OUTSIDE_INCOME_I            --외국납부세액
             , ISNULL(A.MON_RENT_I            , 0)                              AS MON_RENT_I                  --월세액
        FROM              HAD600T AS A   WITH (NOLOCK)
               INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.PERSON_NUMB    = A.PERSON_NUMB
               INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                      AND C.DIV_CODE       = D.SECT_CODE
               INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
               LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                      AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND F.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                      AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND B.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN (SELECT X.COMP_CODE
                                , X.YEAR_YYYY
                                , X.PERSON_NUMB
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS P_TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('T11','T12','T13') THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I,0)
                                           ELSE 0
                                      END)    AS YOUTH_DED_I_SUM
                           FROM   (
                                    -- 연말정산비과세소득
                                    SELECT A.COMP_CODE
                                         , A.YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.NON_TAX_EMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0) + ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS P_TAX_EXEMPTION_TOT_I
                                    FROM   HAD610T A WITH (NOLOCK)
                                    WHERE  A.COMP_CODE = #{S_COMP_CODE}
                                    AND    A.YEAR_YYYY = #{YEAR_YYYY}
                                    GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                                    UNION  ALL

                                    -- 주식매수선택권행사이익 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA810T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                                    UNION  ALL

                                    -- 우리사주조합인출금 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA820T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                                  ) X
                           GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                          )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                      AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND L.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                      AND M1.MAIN_CODE     = 'B012'
                                                      AND M1.SUB_CODE      = D.NATION_CODE
               LEFT  JOIN BSA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = D.COMP_CODE
                                                      AND M2.MAIN_CODE     = 'H005'
                                                      AND M2.SUB_CODE      = D.POST_CODE
               LEFT  JOIN BOR120T AS N1  WITH (NOLOCK) ON N1.COMP_CODE     = D.COMP_CODE
                                                      AND N1.DIV_CODE      = D.DIV_CODE
               LEFT  JOIN BSA210T AS N2  WITH (NOLOCK) ON N2.COMP_CODE     = D.COMP_CODE
                                                      AND N2.TREE_CODE     = D.DEPT_CODE
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}
	      AND    A.YEAR_YYYY      = #{YEAR_YYYY}
	    <if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
	      AND    A.HALFWAY_TYPE   = #{HALFWAY_TYPE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    D.SECT_CODE      = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	    AND     D.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(NAME)">
	    AND    D.NAME        LIKE #{NAME} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	    AND    A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
	    AND    D.RETR_DATE     &gt;= #{RETIRE_DATE_FR}
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
	    AND    D.RETR_DATE     &lt;= #{RETIRE_DATE_TO}
	 	</if>

        ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
    END
	</select>
	<select id="had880skrServiceImpl.selectList_2018" parameterType="Map" resultType="rMap">
	--had880skr.Chad880skr[fnHad880Q2018] QUERY01
    BEGIN
        DECLARE @YEAR_YYYY              NVARCHAR(04)

    --  1. 변수 값 할당 -----------------------------------------------------------------------------------------------------
        SET @YEAR_YYYY              = #{YEAR_YYYY}

    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        DECLARE         @DateFormat         NVARCHAR(10)
 
        SELECT TOP 1 @DateFormat = M1.CODE_NAME
        FROM   BSA100T M1 WITH (NOLOCK)
        WHERE  M1.COMP_CODE = #{S_COMP_CODE}
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

    --  2. 조회 -------------------------------------------------------------------------------------------------------------
        SELECT DISTINCT
               N1.DIV_NAME                                                      AS DIV_CODE                    --사업장
             , N2.TREE_NAME                                                     AS DEPT_CODE                   --부서
             , M2.CODE_NAME                                                     AS POST_CODE                   --직위
             , D.NAME                                                                                          --성명
             , A.PERSON_NUMB                                                                                   --사번
             , CASE WHEN ISNULL(D.JOIN_DATE, '') = '' OR D.JOIN_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.JOIN_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.JOIN_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.JOIN_DATE , 7, 2))
               END                                                              AS JOIN_DATE                   --입사일
             , CASE WHEN ISNULL(D.RETR_DATE, '') = '' OR D.RETR_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.RETR_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.RETR_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.RETR_DATE , 7, 2))
               END                                                              AS RETR_DATE                   --퇴사일
             , ISNULL(A.NOW_PAY_TOT_I         , 0) AS NOW_PAY_TOTAL_I                                          --급여총액(현)
             , ISNULL(A.NOW_BONUS_TOTAL_I     , 0) AS NOW_BONUS_TOTAL_I                                        --상여총액(현)
             , ISNULL(A.NOW_ADD_BONUS_I       , 0) AS NOW_ADD_BONUS_I                                          --인정상여
             , ISNULL(B.P1_PAY_TOTAL_I        , 0) + ISNULL(B.P2_PAY_TOTAL_I     , 0) AS PREV_PAY_TOTAL_I      --급여총액(전)
             , ISNULL(B.P1_BONUS_I_TOTAL_I    , 0) + ISNULL(B.P2_BONUS_I_TOTAL_I , 0) AS PREV_BONUS_TOTAL_I    --상여총액(전)
             , ISNULL(L.TAX_EXEMPTION_TOT_I   , 0) AS TAX_EXEMPTION                                            --비과세(현)
             , ISNULL(L.P_TAX_EXEMPTION_TOT_I , 0) AS P_TAX_EXEMPTION                                          --비과세(전)
             , ISNULL(A.YOUTH_DED_I_SUM       , 0) AS YOUTH_DED_I_SUM                                          --감면소득(현)
             , ISNULL(L.YOUTH_DED_I_SUM       , 0) AS PREV_YOUTH_DED_I_SUM                                     --감면소득(전)
             , ISNULL(A.DEF_IN_TAX_I          , 0) AS DEF_IN_TAX_I                                             --결정세액소득세
             , ISNULL(A.DEF_LOCAL_TAX_I       , 0) AS DEF_LOCAL_TAX_I                                          --결정세액주민세
             , ISNULL(A.NOW_IN_TAX_I          , 0) AS NOW_IN_TAX_I                                             --기납부세액(현)소득세
             , ISNULL(A.NOW_LOCAL_TAX_I       , 0) AS NOW_LOCAL_TAX_I                                          --기납부세액(현)주민세
             , ISNULL(B.P1_IN_TAX_I           , 0) + ISNULL(B.P2_IN_TAX_I        , 0) AS PREV_IN_TAX_I         --기납부세액(전)소득세
             , ISNULL(B.P1_LOCAL_TAX_I        , 0) + ISNULL(B.P2_LOCAL_TAX_I     , 0) AS PREV_LOCAL_TAX_I      --기납부세액(전)주민세
             , ISNULL(A.IN_TAX_I              , 0) AS IN_TAX_I                                                 --차감징수세액(소득세)
             , ISNULL(A.LOCAL_TAX_I           , 0) AS LOCAL_TAX_I                                              --차감징수세액(주민세)

             , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                              AS INCOME_SUPP_TOTAL_I         --총급여액
             , ISNULL(A.INCOME_DED_I          , 0)                              AS INCOME_DED_I                --근로소득공제
             , ISNULL(A.EARN_INCOME_I         , 0)                              AS EARN_INCOME_I               --근로소득금액

             , ISNULL(A.PER_DED_I             , 0)                              AS PER_DED_I                   --본인공제
             , ISNULL(A.SPOUSE_DED_I          , 0)                              AS SPOUSE_DED_I                --배우자공제
             , ISNULL(A.SUPP_SUB_I            , 0)                              AS SUPP_SUB_I                  --부양자공제

             , ISNULL(A.AGED_DED_I            , 0)                              AS AGED_DED_I                  --경로공제
             , ISNULL(A.DEFORM_DED_I          , 0)                              AS DEFORM_DED_I                --장애인공제
             , ISNULL(A.WOMAN_DED_I           , 0)                              AS WOMAN_DED_I                 --부녀자공제
             , ISNULL(A.ONE_PARENT_DED_I      , 0)                              AS ONE_PARENT_DED_I            --한부모공제

             , ISNULL(A.ANU_DED_I             , 0)                              AS ANU_DED_I                   --국민연금공제금액
             , ISNULL(A.PUBLIC_PENS_I         , 0)                              AS PUBLIC_PENS_I               --공무원연금
             , ISNULL(A.SOLDIER_PENS_I        , 0)                              AS SOLDIER_PENS_I              --군인연금
             , ISNULL(A.SCH_PENS_I            , 0)                              AS SCH_PENS_I                  --사립학교교직원연금
             , ISNULL(A.POST_PENS_I           , 0)                              AS POST_PENS_I                 --별정우체국연금

             , ISNULL(A.MED_PREMINM_I         , 0)                              AS MED_PREMINM_I               --건강보험료
             , ISNULL(A.HIRE_INSUR_I          , 0)                              AS HIRE_INSUR_I                --고용보험료

             , ISNULL(A.HOUS_AMOUNT_I         , 0)                              AS HOUS_AMOUNT_I               --주택자금불입액(대출기관)
             , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                              AS HOUS_AMOUNT_I_2             --주택자금불입액(거주자)
             , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                              AS MORTGAGE_RETURN_I_2         --장기주택저당차입금이자상환액(15년미만)
             , ISNULL(A.MORTGAGE_RETURN_I     , 0)                              AS MORTGAGE_RETURN_I           --장기주택저당차입금이자상환액(15년~29년)
             , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                              AS MORTGAGE_RETURN_I_3         --장기주택저당차입금이자상환액(30년이상)
             , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                              AS MORTGAGE_RETURN_I_5         --고정금리비거치상환대출(1500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                              AS MORTGAGE_RETURN_I_4         --기타대출(500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                              AS MORTGAGE_RETURN_I_6         --15년이상(고정금리이면서 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                              AS MORTGAGE_RETURN_I_7         --15년이상(고정금리이거나 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                              AS MORTGAGE_RETURN_I_8         --15년이상(그밖의대출)
             , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                              AS MORTGAGE_RETURN_I_9         --10년이상(고정금리이거나 비거치상환)

             , ISNULL(A.GIFT_DED_I            , 0)                              AS GIFT_DED_I                  --(소득공제)기부금소득공제합계

             , ISNULL(A.PRIV_PENS_I           , 0)                              AS PRIV_PENS_I                 --개인연금저축소득공제

             , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
             , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
             , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축

             , ISNULL(A.CARD_DED_I            , 0)                              AS CARD_DED_I                  --신용카드공제

             , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                              AS COMP_PREMINUM_DED_I         --소기업,소상공인공제부금소득공제
             , ISNULL(A.INVESTMENT_DED_I      , 0)                              AS INVESTMENT_DED_I            --투자조합출자공제
             , ISNULL(A.STAFF_STOCK_DED_I     , 0)                              AS STAFF_STOCK_DED_I           --우리사주조합출연금액
             , ISNULL(A.STAFF_GIFT_DED_I      , 0)                              AS STAFF_GIFT_DED_I            --(소득공제)우리사주기부금
             , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                              AS EMPLOY_WORKER_DED_I         --고용유지중소기업근로자소득공제
             , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                              AS NOT_AMOUNT_LOAN_DED_I       --목돈안드는전세이자상환액
             , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                             AS LONG_INVEST_STOCK_DED_I     --장기집합투자증권저축

             , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                              AS OVER_INCOME_DED_LMT         --특별공제 종합한도 초과액
             , ISNULL(A.TAX_STD_I             , 0)                              AS TAX_STD_I                   --소득과세표준
             , ISNULL(A.COMP_TAX_I            , 0)                              AS COMP_TAX_I                  --산출세액

             , ISNULL(A.INCOME_REDU_I         , 0)                              AS INCOME_REDU_I               --소득세법
             , ISNULL(A.SKILL_DED_I           , 0)                              AS SKILL_DED_I                 --외국인기술공제
             , ISNULL(A.TAXES_REDU_I          , 0)                              AS TAXES_REDU_I                --조감법

			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) = 100 THEN ISNULL(A.YOUTH_DED_I        , 0)					--중소기업청년소득세감면금액(100%)
					ELSE 0
			   END	AS YOUTH_DED_I
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  50 THEN ISNULL(ISNULL(A.YOUTH_DED_I2, 0), A.YOUTH_DED_I)	--중소기업청년소득세감면금액(50%)
					ELSE 0
			   END	AS YOUTH_DED_I2
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  70 THEN ISNULL(ISNULL(A.YOUTH_DED_I3, 0), A.YOUTH_DED_I)	--중소기업청년소득세감면금액(70%)
					ELSE 0
			   END	AS YOUTH_DED_I3
			 , CASE WHEN ISNULL(A.YOUTH_EXEMP_RATE, 0) =  90 THEN ISNULL(A.YOUTH_DED_I        , 0)					--중소기업청년소득세감면금액(90%)
					ELSE 0
			   END	AS YOUTH_DED_I4
			 
             , ISNULL(A.IN_TAX_DED_I          , 0)                              AS IN_TAX_DED_I                --근로소득세액공제
             , ISNULL(A.CHILD_TAX_DED_I       , 0)                              AS CHILD_TAX_DED_I             --자녀세액공제

             , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)    AS SCI_TAX_DED_I               --과학기술인공제
             , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)    AS RETIRE_TAX_DED_I            --근로자퇴직급여보장법
             , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)    AS PENS_TAX_DED_I              --연금저축소득공제

             , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                              AS ETC_INSUR_TAX_DED_I         --보장성보험
             , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                              AS DEFORM_INSUR_TAX_DED_I      --장애인전용보장성보험

             , ISNULL(A.MED_TAX_DED_I         , 0)                              AS MED_TAX_DED_I               --의료비공제금액

             , ISNULL(A.EDUC_TAX_DED_I        , 0)                              AS EDUC_TAX_DED_I              --교육비공제

             , ISNULL(A.GIFT_TAX_DED_I        , 0)                              AS GIFT_TAX_DED_I              --(세액공제)기부금세액공제합계

             , ISNULL(A.STD_TAX_DED_I         , 0)                              AS STD_TAX_DED_I               --표준세액공제

             , ISNULL(A.NAP_TAX_DED_I         , 0)                              AS NAP_TAX_DED_I               --납세조합세액공제
             , ISNULL(A.HOUS_INTER_I          , 0)                              AS HOUS_INTER_I                --주택자금상환액
             , ISNULL(A.OUTSIDE_INCOME_I      , 0)                              AS OUTSIDE_INCOME_I            --외국납부세액
             , ISNULL(A.MON_RENT_I            , 0)                              AS MON_RENT_I                  --월세액
        FROM              HAD600T AS A   WITH (NOLOCK)
               INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.PERSON_NUMB    = A.PERSON_NUMB
               INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                      AND C.DIV_CODE       = D.SECT_CODE
               INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
               LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                      AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND F.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                      AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND B.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN (SELECT X.COMP_CODE
                                , X.YEAR_YYYY
                                , X.PERSON_NUMB
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS P_TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('T10','T11','T12') THEN ISNULL(X.TAX_EXEMPTION_TOT_I,0)
                                           ELSE 0
                                      END)    AS YOUTH_DED_I_SUM
                           FROM   (
                                    -- 연말정산비과세소득
                                    SELECT A.COMP_CODE
                                         , A.YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.NON_TAX_EMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0) + ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS P_TAX_EXEMPTION_TOT_I
                                    FROM   HAD610T A WITH (NOLOCK)
                                    WHERE  A.COMP_CODE = #{S_COMP_CODE}
                                    AND    A.YEAR_YYYY = #{YEAR_YYYY}
                                    GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                                    UNION  ALL

                                    -- 주식매수선택권행사이익 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA810T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                                    UNION  ALL

                                    -- 우리사주조합인출금 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA820T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                                  ) X
                           GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                          )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                      AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND L.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                      AND M1.MAIN_CODE     = 'B012'
                                                      AND M1.SUB_CODE      = D.NATION_CODE
               LEFT  JOIN BSA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = D.COMP_CODE
                                                      AND M2.MAIN_CODE     = 'H005'
                                                      AND M2.SUB_CODE      = D.POST_CODE
               LEFT  JOIN BOR120T AS N1  WITH (NOLOCK) ON N1.COMP_CODE     = D.COMP_CODE
                                                      AND N1.DIV_CODE      = D.DIV_CODE
               LEFT  JOIN BSA210T AS N2  WITH (NOLOCK) ON N2.COMP_CODE     = D.COMP_CODE
                                                      AND N2.TREE_CODE     = D.DEPT_CODE
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}
	      AND    A.YEAR_YYYY      = #{YEAR_YYYY}
	    <if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
	      AND    A.HALFWAY_TYPE   = #{HALFWAY_TYPE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    D.SECT_CODE      = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	    AND     D.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(NAME)">
	    AND    D.NAME        LIKE #{NAME} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	    AND    A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
	    AND    D.RETR_DATE     &gt;= #{RETIRE_DATE_FR}
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
	    AND    D.RETR_DATE     &lt;= #{RETIRE_DATE_TO}
	 	</if>

        ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
    END
	</select>
	<select id="had880skrServiceImpl.selectList_2017" parameterType="Map" resultType="rMap">
	--had880skr.Chad880skr[fnHad880Q2017] QUERY01
    BEGIN
        DECLARE @YEAR_YYYY              NVARCHAR(04)

    --  1. 변수 값 할당 -----------------------------------------------------------------------------------------------------
        SET @YEAR_YYYY              = #{YEAR_YYYY}

    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
        DECLARE         @DateFormat         NVARCHAR(10)
 
        SELECT TOP 1 @DateFormat = M1.CODE_NAME
        FROM   BSA100T M1 WITH (NOLOCK)
        WHERE  M1.COMP_CODE = #{S_COMP_CODE}
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

    --  2. 조회 -------------------------------------------------------------------------------------------------------------
        SELECT DISTINCT
               N1.DIV_NAME                                                      AS DIV_CODE                    --사업장
             , N2.TREE_NAME                                                     AS DEPT_CODE                   --부서
             , M2.CODE_NAME                                                     AS POST_CODE                   --직위
             , D.NAME                                                                                          --성명
             , A.PERSON_NUMB                                                                                   --사번
             , CASE WHEN ISNULL(D.JOIN_DATE, '') = '' OR D.JOIN_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.JOIN_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.JOIN_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.JOIN_DATE , 7, 2))
               END                                                              AS JOIN_DATE                   --입사일
             , CASE WHEN ISNULL(D.RETR_DATE, '') = '' OR D.RETR_DATE = '00000000' THEN ''
                    ELSE REPLACE(
                         REPLACE(
                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.RETR_DATE , 1, 4))
                                            , 'MM'  , SUBSTRING(D.RETR_DATE , 5, 2))
                                            , 'DD'  , SUBSTRING(D.RETR_DATE , 7, 2))
               END                                                              AS RETR_DATE                   --퇴사일
             , ISNULL(A.NOW_PAY_TOT_I         , 0) AS NOW_PAY_TOTAL_I                                          --급여총액(현)
             , ISNULL(A.NOW_BONUS_TOTAL_I     , 0) AS NOW_BONUS_TOTAL_I                                        --상여총액(현)
             , ISNULL(A.NOW_ADD_BONUS_I       , 0) AS NOW_ADD_BONUS_I                                          --인정상여
             , ISNULL(B.P1_PAY_TOTAL_I        , 0) + ISNULL(B.P2_PAY_TOTAL_I     , 0) AS PREV_PAY_TOTAL_I      --급여총액(전)
             , ISNULL(B.P1_BONUS_I_TOTAL_I    , 0) + ISNULL(B.P2_BONUS_I_TOTAL_I , 0) AS PREV_BONUS_TOTAL_I    --상여총액(전)
             , ISNULL(L.TAX_EXEMPTION_TOT_I   , 0) AS TAX_EXEMPTION                                            --비과세(현)
             , ISNULL(L.P_TAX_EXEMPTION_TOT_I , 0) AS P_TAX_EXEMPTION                                          --비과세(전)
             , ISNULL(A.YOUTH_DED_I_SUM       , 0) AS YOUTH_DED_I_SUM                                          --감면소득(현)
             , ISNULL(L.YOUTH_DED_I_SUM       , 0) AS PREV_YOUTH_DED_I_SUM                                     --감면소득(전)
             , ISNULL(A.DEF_IN_TAX_I          , 0) AS DEF_IN_TAX_I                                             --결정세액소득세
             , ISNULL(A.DEF_LOCAL_TAX_I       , 0) AS DEF_LOCAL_TAX_I                                          --결정세액주민세
             , ISNULL(A.NOW_IN_TAX_I          , 0) AS NOW_IN_TAX_I                                             --기납부세액(현)소득세
             , ISNULL(A.NOW_LOCAL_TAX_I       , 0) AS NOW_LOCAL_TAX_I                                          --기납부세액(현)주민세
             , ISNULL(B.P1_IN_TAX_I           , 0) + ISNULL(B.P2_IN_TAX_I        , 0) AS PREV_IN_TAX_I         --기납부세액(전)소득세
             , ISNULL(B.P1_LOCAL_TAX_I        , 0) + ISNULL(B.P2_LOCAL_TAX_I     , 0) AS PREV_LOCAL_TAX_I      --기납부세액(전)주민세
             , ISNULL(A.IN_TAX_I              , 0) AS IN_TAX_I                                                 --차감징수세액(소득세)
             , ISNULL(A.LOCAL_TAX_I           , 0) AS LOCAL_TAX_I                                              --차감징수세액(주민세)

             , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                              AS INCOME_SUPP_TOTAL_I         --총급여액
             , ISNULL(A.INCOME_DED_I          , 0)                              AS INCOME_DED_I                --근로소득공제
             , ISNULL(A.EARN_INCOME_I         , 0)                              AS EARN_INCOME_I               --근로소득금액

             , ISNULL(A.PER_DED_I             , 0)                              AS PER_DED_I                   --본인공제
             , ISNULL(A.SPOUSE_DED_I          , 0)                              AS SPOUSE_DED_I                --배우자공제
             , ISNULL(A.SUPP_SUB_I            , 0)                              AS SUPP_SUB_I                  --부양자공제

             , ISNULL(A.AGED_DED_I            , 0)                              AS AGED_DED_I                  --경로공제
             , ISNULL(A.DEFORM_DED_I          , 0)                              AS DEFORM_DED_I                --장애인공제
             , ISNULL(A.WOMAN_DED_I           , 0)                              AS WOMAN_DED_I                 --부녀자공제
             , ISNULL(A.ONE_PARENT_DED_I      , 0)                              AS ONE_PARENT_DED_I            --한부모공제

             , ISNULL(A.ANU_DED_I             , 0)                              AS ANU_DED_I                   --국민연금공제금액
             , ISNULL(A.PUBLIC_PENS_I         , 0)                              AS PUBLIC_PENS_I               --공무원연금
             , ISNULL(A.SOLDIER_PENS_I        , 0)                              AS SOLDIER_PENS_I              --군인연금
             , ISNULL(A.SCH_PENS_I            , 0)                              AS SCH_PENS_I                  --사립학교교직원연금
             , ISNULL(A.POST_PENS_I           , 0)                              AS POST_PENS_I                 --별정우체국연금

             , ISNULL(A.MED_PREMINM_I         , 0)                              AS MED_PREMINM_I               --건강보험료
             , ISNULL(A.HIRE_INSUR_I          , 0)                              AS HIRE_INSUR_I                --고용보험료

             , ISNULL(A.HOUS_AMOUNT_I         , 0)                              AS HOUS_AMOUNT_I               --주택자금불입액(대출기관)
             , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                              AS HOUS_AMOUNT_I_2             --주택자금불입액(거주자)
             , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                              AS MORTGAGE_RETURN_I_2         --장기주택저당차입금이자상환액(15년미만)
             , ISNULL(A.MORTGAGE_RETURN_I     , 0)                              AS MORTGAGE_RETURN_I           --장기주택저당차입금이자상환액(15년~29년)
             , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                              AS MORTGAGE_RETURN_I_3         --장기주택저당차입금이자상환액(30년이상)
             , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                              AS MORTGAGE_RETURN_I_5         --고정금리비거치상환대출(1500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                              AS MORTGAGE_RETURN_I_4         --기타대출(500만원한도)
             , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                              AS MORTGAGE_RETURN_I_6         --15년이상(고정금리이면서 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                              AS MORTGAGE_RETURN_I_7         --15년이상(고정금리이거나 비거치상환)
             , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                              AS MORTGAGE_RETURN_I_8         --15년이상(그밖의대출)
             , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                              AS MORTGAGE_RETURN_I_9         --10년이상(고정금리이거나 비거치상환)

             , ISNULL(A.GIFT_DED_I            , 0)                              AS GIFT_DED_I                  --(소득공제)기부금소득공제합계

             , ISNULL(A.PRIV_PENS_I           , 0)                              AS PRIV_PENS_I                 --개인연금저축소득공제

             , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT                --청약저축
             , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT              --근로자주택마련저축
             , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I           --주택청약종합저축

             , ISNULL(A.CARD_DED_I            , 0)                              AS CARD_DED_I                  --신용카드공제

             , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                              AS COMP_PREMINUM_DED_I         --소기업,소상공인공제부금소득공제
             , ISNULL(A.INVESTMENT_DED_I      , 0)                              AS INVESTMENT_DED_I            --투자조합출자공제
             , ISNULL(A.STAFF_STOCK_DED_I     , 0)                              AS STAFF_STOCK_DED_I           --우리사주조합출연금액
             , ISNULL(A.STAFF_GIFT_DED_I      , 0)                              AS STAFF_GIFT_DED_I            --(소득공제)우리사주기부금
             , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                              AS EMPLOY_WORKER_DED_I         --고용유지중소기업근로자소득공제
             , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                              AS NOT_AMOUNT_LOAN_DED_I       --목돈안드는전세이자상환액
             , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                             AS LONG_INVEST_STOCK_DED_I     --장기집합투자증권저축

             , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                              AS OVER_INCOME_DED_LMT         --특별공제 종합한도 초과액
             , ISNULL(A.TAX_STD_I             , 0)                              AS TAX_STD_I                   --소득과세표준
             , ISNULL(A.COMP_TAX_I            , 0)                              AS COMP_TAX_I                  --산출세액

             , ISNULL(A.INCOME_REDU_I         , 0)                              AS INCOME_REDU_I               --소득세법
             , ISNULL(A.YOUTH_DED_I           , 0)                              AS YOUTH_DED_I                 --중소기업청년소득세감면금액(100%)
             , ISNULL(A.YOUTH_DED_I3          , 0)                              AS YOUTH_DED_I3                --중소기업청년소득세감면금액(70%)
             , ISNULL(A.YOUTH_DED_I2          , 0)                              AS YOUTH_DED_I2                --중소기업청년소득세감면금액(50%)
             , ISNULL(A.SKILL_DED_I           , 0)                              AS SKILL_DED_I                 --외국인기술공제
             , ISNULL(A.TAXES_REDU_I          , 0)                              AS TAXES_REDU_I                --조감법

             , ISNULL(A.IN_TAX_DED_I          , 0)                              AS IN_TAX_DED_I                --근로소득세액공제
             , ISNULL(A.CHILD_TAX_DED_I       , 0)                              AS CHILD_TAX_DED_I             --자녀세액공제

             , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)    AS SCI_TAX_DED_I               --과학기술인공제
             , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)    AS RETIRE_TAX_DED_I            --근로자퇴직급여보장법
             , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)    AS PENS_TAX_DED_I              --연금저축소득공제

             , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                              AS ETC_INSUR_TAX_DED_I         --보장성보험
             , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                              AS DEFORM_INSUR_TAX_DED_I      --장애인전용보장성보험

             , ISNULL(A.MED_TAX_DED_I         , 0)                              AS MED_TAX_DED_I               --의료비공제금액

             , ISNULL(A.EDUC_TAX_DED_I        , 0)                              AS EDUC_TAX_DED_I              --교육비공제

             , ISNULL(A.GIFT_TAX_DED_I        , 0)                              AS GIFT_TAX_DED_I              --(세액공제)기부금세액공제합계

             , ISNULL(A.STD_TAX_DED_I         , 0)                              AS STD_TAX_DED_I               --표준세액공제

             , ISNULL(A.NAP_TAX_DED_I         , 0)                              AS NAP_TAX_DED_I               --납세조합세액공제
             , ISNULL(A.HOUS_INTER_I          , 0)                              AS HOUS_INTER_I                --주택자금상환액
             , ISNULL(A.OUTSIDE_INCOME_I      , 0)                              AS OUTSIDE_INCOME_I            --외국납부세액
             , ISNULL(A.MON_RENT_I            , 0)                              AS MON_RENT_I                  --월세액
        FROM              HAD600T AS A   WITH (NOLOCK)
               INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.PERSON_NUMB    = A.PERSON_NUMB
               INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
                                                      AND C.DIV_CODE       = D.SECT_CODE
               INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
               LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
                                                      AND F.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND F.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                      AND B.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND B.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN (SELECT X.COMP_CODE
                                , X.YEAR_YYYY
                                , X.PERSON_NUMB
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10', 'H16')                                                  THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.P_TAX_EXEMPTION_TOT_I, 0)
                                           ELSE 0
                                      END)    AS P_TAX_EXEMPTION_TOT_I
                                , SUM(CASE WHEN X.NONTAX_CODE IN ('T10','T11','T12') THEN ISNULL(X.TAX_EXEMPTION_TOT_I,0)
                                           ELSE 0
                                      END)    AS YOUTH_DED_I_SUM
                           FROM   (
                                    -- 연말정산비과세소득
                                    SELECT A.COMP_CODE
                                         , A.YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.NON_TAX_EMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , SUM(ISNULL(A.P1_NON_TAX_EMPTION_I, 0) + ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS P_TAX_EXEMPTION_TOT_I
                                    FROM   HAD610T A WITH (NOLOCK)
                                    WHERE  A.COMP_CODE = #{S_COMP_CODE}
                                    AND    A.YEAR_YYYY = #{YEAR_YYYY}
                                    GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

                                    UNION  ALL

                                    -- 주식매수선택권행사이익 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA810T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

                                    UNION  ALL

                                    -- 우리사주조합인출금 등록
                                    SELECT A.COMP_CODE
                                         , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
                                         , A.PERSON_NUMB
                                         , A.NONTAX_CODE
                                         , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
                                         , ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS P_TAX_EXEMPTION_TOT_I
                                    FROM             HPA820T A  WITH (NOLOCK)
                                           LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
                                                                             AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B1.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B1.NONTAX_CODE = A.NONTAX_CODE
                                           LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
                                                                             AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
                                                                             AND B2.PERSON_NUMB = A.PERSON_NUMB
                                                                             AND B2.NONTAX_CODE = A.NONTAX_CODE
                                    WHERE  A.COMP_CODE     = #{S_COMP_CODE}
                                    AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY}  + '%'
                                    GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
                                  ) X
                           GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
                          )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
                                                      AND L.YEAR_YYYY      = A.YEAR_YYYY
                                                      AND L.PERSON_NUMB    = A.PERSON_NUMB
               LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
                                                      AND M1.MAIN_CODE     = 'B012'
                                                      AND M1.SUB_CODE      = D.NATION_CODE
               LEFT  JOIN BSA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = D.COMP_CODE
                                                      AND M2.MAIN_CODE     = 'H005'
                                                      AND M2.SUB_CODE      = D.POST_CODE
               LEFT  JOIN BOR120T AS N1  WITH (NOLOCK) ON N1.COMP_CODE     = D.COMP_CODE
                                                      AND N1.DIV_CODE      = D.DIV_CODE
               LEFT  JOIN BSA210T AS N2  WITH (NOLOCK) ON N2.COMP_CODE     = D.COMP_CODE
                                                      AND N2.TREE_CODE     = D.DEPT_CODE
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}
	      AND    A.YEAR_YYYY      = #{YEAR_YYYY}
	    <if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
	      AND    A.HALFWAY_TYPE   = #{HALFWAY_TYPE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    D.SECT_CODE      = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	    AND     D.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(NAME)">
	    AND    D.NAME        LIKE #{NAME} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	    AND    A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
	    AND    D.RETR_DATE     &gt;= #{RETIRE_DATE_FR}
	 	</if>
	 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
	    AND    D.RETR_DATE     &lt;= #{RETIRE_DATE_TO}
	 	</if>

        ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
    END
	</select>
	<select id="had880skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--had880skr.Chad880skr[fnHad880Q2015] QUERY01
		BEGIN
		    DECLARE @YEAR_YYYY              NVARCHAR(04)

		--  1. 변수 값 할당 -----------------------------------------------------------------------------------------------------
		    SET @YEAR_YYYY              = #{YEAR_YYYY}

		--  2. 조회 -------------------------------------------------------------------------------------------------------------
		    SELECT DISTINCT
		           N1.DIV_NAME                                                      AS DIV_CODE
		         , N2.TREE_NAME                                                     AS DEPT_CODE
		         , M2.CODE_NAME                                                     AS POST_CODE
		         , D.NAME
		         , A.PERSON_NUMB
		         , ISNULL(A.NOW_PAY_TOT_I         , 0) AS NOW_PAY_TOTAL_I
		         , ISNULL(A.NOW_BONUS_TOTAL_I     , 0) AS NOW_BONUS_TOTAL_I
		         , ISNULL(A.NOW_ADD_BONUS_I       , 0) AS NOW_ADD_BONUS_I
		         , ISNULL(B.P1_PAY_TOTAL_I        , 0) + ISNULL(B.P2_PAY_TOTAL_I     , 0) AS PREV_PAY_TOTAL_I
		         , ISNULL(B.P1_BONUS_I_TOTAL_I    , 0) + ISNULL(B.P2_BONUS_I_TOTAL_I , 0) AS PREV_BONUS_TOTAL_I
		         , ISNULL(L.TAX_EXEMPTION_TOT_I   , 0) AS TAX_EXEMPTION
		         , ISNULL(A.DEF_IN_TAX_I          , 0) AS DEF_IN_TAX_I
		         , ISNULL(A.DEF_LOCAL_TAX_I       , 0) AS DEF_LOCAL_TAX_I
		         , ISNULL(A.NOW_IN_TAX_I          , 0) AS NOW_IN_TAX_I
		         , ISNULL(A.NOW_LOCAL_TAX_I       , 0) AS NOW_LOCAL_TAX_I
		         , ISNULL(B.P1_IN_TAX_I           , 0) + ISNULL(B.P2_IN_TAX_I        , 0) AS PREV_IN_TAX_I
		         , ISNULL(B.P1_LOCAL_TAX_I        , 0) + ISNULL(B.P2_LOCAL_TAX_I     , 0) AS PREV_LOCAL_TAX_I
		         , ISNULL(A.IN_TAX_I              , 0) AS IN_TAX_I
		         , ISNULL(A.LOCAL_TAX_I           , 0) AS LOCAL_TAX_I
		         , ISNULL(A.INCOME_SUPP_TOTAL_I   , 0)                              AS INCOME_SUPP_TOTAL_I
		         , ISNULL(A.INCOME_DED_I          , 0)                              AS INCOME_DED_I
		         , ISNULL(A.EARN_INCOME_I         , 0)                              AS EARN_INCOME_I
		         , ISNULL(A.PER_DED_I             , 0)                              AS PER_DED_I
		         , ISNULL(A.SPOUSE_DED_I          , 0)                              AS SPOUSE_DED_I
		         , ISNULL(A.SUPP_SUB_I            , 0)                              AS SUPP_SUB_I
		         , ISNULL(A.AGED_DED_I            , 0)                              AS AGED_DED_I
		         , ISNULL(A.DEFORM_DED_I          , 0)                              AS DEFORM_DED_I
		         , ISNULL(A.WOMAN_DED_I           , 0)                              AS WOMAN_DED_I
		         , ISNULL(A.ONE_PARENT_DED_I      , 0)                              AS ONE_PARENT_DED_I
		         , ISNULL(A.ANU_DED_I             , 0)                              AS ANU_DED_I
		         , ISNULL(A.PUBLIC_PENS_I         , 0)                              AS PUBLIC_PENS_I
		         , ISNULL(A.SOLDIER_PENS_I        , 0)                              AS SOLDIER_PENS_I
		         , ISNULL(A.SCH_PENS_I            , 0)                              AS SCH_PENS_I
		         , ISNULL(A.POST_PENS_I           , 0)                              AS POST_PENS_I
		         , ISNULL(A.MED_PREMINM_I         , 0)                              AS MED_PREMINM_I
		         , ISNULL(A.HIRE_INSUR_I          , 0)                              AS HIRE_INSUR_I
		         , ISNULL(A.HOUS_AMOUNT_I         , 0)                              AS HOUS_AMOUNT_I
		         , ISNULL(A.HOUS_AMOUNT_I_2       , 0)                              AS HOUS_AMOUNT_I_2
		         , ISNULL(A.MORTGAGE_RETURN_I_2   , 0)                              AS MORTGAGE_RETURN_I_2
		         , ISNULL(A.MORTGAGE_RETURN_I     , 0)                              AS MORTGAGE_RETURN_I
		         , ISNULL(A.MORTGAGE_RETURN_I_3   , 0)                              AS MORTGAGE_RETURN_I_3
		         , ISNULL(A.MORTGAGE_RETURN_I_5   , 0)                              AS MORTGAGE_RETURN_I_5
		         , ISNULL(A.MORTGAGE_RETURN_I_4   , 0)                              AS MORTGAGE_RETURN_I_4
		         , ISNULL(A.MORTGAGE_RETURN_I_6   , 0)                              AS MORTGAGE_RETURN_I_6
		         , ISNULL(A.MORTGAGE_RETURN_I_7   , 0)                              AS MORTGAGE_RETURN_I_7
		         , ISNULL(A.MORTGAGE_RETURN_I_8   , 0)                              AS MORTGAGE_RETURN_I_8
		         , ISNULL(A.MORTGAGE_RETURN_I_9   , 0)                              AS MORTGAGE_RETURN_I_9
		         , ISNULL(A.GIFT_DED_I            , 0)                              AS GIFT_DED_I
		         , ISNULL(A.PRIV_PENS_I           , 0)                              AS PRIV_PENS_I
		         , ISNULL(A.HOUS_BU_AMT     , 0) + ISNULL(A.HOUS_BU_ADD_AMT     , 0) AS HOUS_BU_AMT
		         , ISNULL(A.HOUS_WORK_AMT   , 0)                                     AS HOUS_WORK_AMT
		         , ISNULL(A.HOUS_BU_AMOUNT_I, 0) + ISNULL(A.HOUS_BU_AMOUNT_ADD_I, 0) AS HOUS_BU_AMOUNT_I
		         , ISNULL(A.CARD_DED_I            , 0)                              AS CARD_DED_I
		         , ISNULL(A.COMP_PREMINUM_DED_I   , 0)                              AS COMP_PREMINUM_DED_I
		         , ISNULL(A.INVESTMENT_DED_I      , 0)                              AS INVESTMENT_DED_I
		         , ISNULL(A.STAFF_STOCK_DED_I     , 0)                              AS STAFF_STOCK_DED_I
		         , ISNULL(A.STAFF_GIFT_DED_I      , 0)                              AS STAFF_GIFT_DED_I
		         , ISNULL(A.EMPLOY_WORKER_DED_I   , 0)                              AS EMPLOY_WORKER_DED_I
		         , ISNULL(A.NOT_AMOUNT_LOAN_DED_I , 0)                              AS NOT_AMOUNT_LOAN_DED_I
		         , ISNULL(A.LONG_INVEST_STOCK_DED_I, 0)                             AS LONG_INVEST_STOCK_DED_I
		         , ISNULL(A.OVER_INCOME_DED_LMT   , 0)                              AS OVER_INCOME_DED_LMT
		         , ISNULL(A.TAX_STD_I             , 0)                              AS TAX_STD_I
		         , ISNULL(A.COMP_TAX_I            , 0)                              AS COMP_TAX_I
		         , ISNULL(A.INCOME_REDU_I         , 0)                              AS INCOME_REDU_I
		         , ISNULL(A.YOUTH_DED_I           , 0)                              AS YOUTH_DED_I
		         , ISNULL(A.YOUTH_DED_I2          , 0)                              AS YOUTH_DED_I2
		         , ISNULL(A.YOUTH_DED_I3          , 0)                              AS YOUTH_DED_I3
		         , ISNULL(A.SKILL_DED_I           , 0)                              AS SKILL_DED_I
		         , ISNULL(A.TAXES_REDU_I          , 0)                              AS TAXES_REDU_I
		         , ISNULL(A.IN_TAX_DED_I          , 0)                              AS IN_TAX_DED_I
		         , ISNULL(A.CHILD_TAX_DED_I       , 0)                              AS CHILD_TAX_DED_I
		         , ISNULL(A.SCI_TAX_DED_I   ,0) + ISNULL(A.SCI_TAX_DED_I1   , 0)    AS SCI_TAX_DED_I
		         , ISNULL(A.RETIRE_TAX_DED_I,0) + ISNULL(A.RETIRE_TAX_DED_I1, 0)    AS RETIRE_TAX_DED_I
		         , ISNULL(A.PENS_TAX_DED_I  ,0) + ISNULL(A.PENS_TAX_DED_I1  , 0)    AS PENS_TAX_DED_I
		         , ISNULL(A.ETC_INSUR_TAX_DED_I   , 0)                              AS ETC_INSUR_TAX_DED_I
		         , ISNULL(A.DEFORM_INSUR_TAX_DED_I, 0)                              AS DEFORM_INSUR_TAX_DED_I
		         , ISNULL(A.MED_TAX_DED_I         , 0)                              AS MED_TAX_DED_I
		         , ISNULL(A.EDUC_TAX_DED_I        , 0)                              AS EDUC_TAX_DED_I
		         , ISNULL(A.GIFT_TAX_DED_I        , 0)                              AS GIFT_TAX_DED_I
		         , ISNULL(A.STD_TAX_DED_I         , 0)                              AS STD_TAX_DED_I
		         , ISNULL(A.NAP_TAX_DED_I         , 0)                              AS NAP_TAX_DED_I
		         , ISNULL(A.HOUS_INTER_I          , 0)                              AS HOUS_INTER_I
		         , ISNULL(A.OUTSIDE_INCOME_I      , 0)                              AS OUTSIDE_INCOME_I
		         , ISNULL(A.MON_RENT_I            , 0)                              AS MON_RENT_I
		    FROM              HAD600T AS A   WITH (NOLOCK)
		           INNER JOIN HUM100T AS D   WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
		                                                  AND D.PERSON_NUMB    = A.PERSON_NUMB
		           INNER JOIN BOR120T AS C   WITH (NOLOCK) ON C.COMP_CODE      = D.COMP_CODE
		                                                  AND C.DIV_CODE       = D.SECT_CODE
		           INNER JOIN BOR100T AS E   WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
		           LEFT  JOIN HAD400T AS F   WITH (NOLOCK) ON F.COMP_CODE      = A.COMP_CODE
		                                                  AND F.YEAR_YYYY      = A.YEAR_YYYY
		                                                  AND F.PERSON_NUMB    = A.PERSON_NUMB
		           LEFT  JOIN HAD500T AS B   WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                                  AND B.YEAR_YYYY      = A.YEAR_YYYY
		                                                  AND B.PERSON_NUMB    = A.PERSON_NUMB
		           LEFT  JOIN (SELECT X.COMP_CODE
		                            , X.YEAR_YYYY
		                            , X.PERSON_NUMB
		                            , SUM(CASE WHEN X.NONTAX_CODE IN ('M01', 'M02', 'M03')                                                                       THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'O01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'Q01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'X01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'Y22'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')                                                         THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'G01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'H11'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE IN ('H12', 'H13', 'H01', 'K01', 'S01', 'T01', 'Y01', 'Y02', 'Y03', 'Y20', 'Z01', 'H05', 'I01') THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'R10'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       WHEN X.NONTAX_CODE  =  'P01'                                                                                      THEN ISNULL(X.TAX_EXEMPTION_TOT_I, 0)
		                                       ELSE 0
		                                  END)    AS TAX_EXEMPTION_TOT_I
		                       FROM   (
		                                -- 연말정산비과세소득
		                                SELECT A.COMP_CODE
		                                     , A.YEAR_YYYY
		                                     , A.PERSON_NUMB
		                                     , A.NONTAX_CODE
		                                     , SUM(ISNULL(A.NON_TAX_EMPTION_I, 0) + ISNULL(A.P1_NON_TAX_EMPTION_I, 0) + ISNULL(A.P2_NON_TAX_EMPTION_I, 0)) AS TAX_EXEMPTION_TOT_I
		                                FROM   HAD610T A WITH (NOLOCK)
		                                WHERE  A.COMP_CODE = #{S_COMP_CODE}
		                                AND    A.YEAR_YYYY = #{YEAR_YYYY}
		                                GROUP  BY A.COMP_CODE, A.YEAR_YYYY, A.PERSON_NUMB, A.NONTAX_CODE

		                                UNION  ALL

		                                -- 주식매수선택권행사이익 등록
		                                SELECT A.COMP_CODE
		                                     , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
		                                     , A.PERSON_NUMB
		                                     , A.NONTAX_CODE
		                                     , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) + ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS TAX_EXEMPTION_TOT_I
		                                FROM             HPA810T A  WITH (NOLOCK)
		                                       LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                                                         AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
		                                                                         AND B1.PERSON_NUMB = A.PERSON_NUMB
		                                                                         AND B1.NONTAX_CODE = A.NONTAX_CODE
		                                       LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
		                                                                         AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
		                                                                         AND B2.PERSON_NUMB = A.PERSON_NUMB
		                                                                         AND B2.NONTAX_CODE = A.NONTAX_CODE
		                                WHERE  A.COMP_CODE     = #{S_COMP_CODE}
		                                AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY} + '%'
		                                GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I

		                                UNION  ALL

		                                -- 우리사주조합인출금 등록
		                                SELECT A.COMP_CODE
		                                     , LEFT(A.PAY_YYYYMM, 4)         AS YEAR_YYYY
		                                     , A.PERSON_NUMB
		                                     , A.NONTAX_CODE
		                                     , SUM(ISNULL(A.TAX_EXEMPTION_I, 0)) + ISNULL(B1.TAX_EXEMPTION_I, 0) + ISNULL(B2.TAX_EXEMPTION_I, 0) AS TAX_EXEMPTION_TOT_I
		                                FROM             HPA820T A  WITH (NOLOCK)
		                                       LEFT JOIN HAD510T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                                                         AND B1.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
		                                                                         AND B1.PERSON_NUMB = A.PERSON_NUMB
		                                                                         AND B1.NONTAX_CODE = A.NONTAX_CODE
		                                       LEFT JOIN HAD520T B2 WITH (NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
		                                                                         AND B2.YEAR_YYYY   = LEFT(A.PAY_YYYYMM,4)
		                                                                         AND B2.PERSON_NUMB = A.PERSON_NUMB
		                                                                         AND B2.NONTAX_CODE = A.NONTAX_CODE
		                                WHERE  A.COMP_CODE     = #{S_COMP_CODE}
		                                AND    A.PAY_YYYYMM LIKE #{YEAR_YYYY} + '%'
		                                GROUP  BY A.COMP_CODE, LEFT(A.PAY_YYYYMM, 4), A.PERSON_NUMB, A.NONTAX_CODE, B1.TAX_EXEMPTION_I, B2.TAX_EXEMPTION_I
		                              ) X
		                       GROUP BY X.COMP_CODE, X.YEAR_YYYY, X.PERSON_NUMB
		                      )       AS L                 ON L.COMP_CODE      = A.COMP_CODE
		                                                  AND L.YEAR_YYYY      = A.YEAR_YYYY
		                                                  AND L.PERSON_NUMB    = A.PERSON_NUMB
		           LEFT  JOIN BSA100T AS M1  WITH (NOLOCK) ON M1.COMP_CODE     = D.COMP_CODE
		                                                  AND M1.MAIN_CODE     = 'B012'
		                                                  AND M1.SUB_CODE      = D.NATION_CODE
		           LEFT  JOIN BSA100T AS M2  WITH (NOLOCK) ON M2.COMP_CODE     = D.COMP_CODE
		                                                  AND M2.MAIN_CODE     = 'H005'
		                                                  AND M2.SUB_CODE      = D.POST_CODE
		           LEFT  JOIN BOR120T AS N1  WITH (NOLOCK) ON N1.COMP_CODE     = D.COMP_CODE
		                                                  AND N1.DIV_CODE      = D.DIV_CODE
		           LEFT  JOIN BSA210T AS N2  WITH (NOLOCK) ON N2.COMP_CODE     = D.COMP_CODE
		                                                  AND N2.TREE_CODE     = D.DEPT_CODE
		    WHERE  A.COMP_CODE      = #{S_COMP_CODE}
		    AND    A.YEAR_YYYY      = #{YEAR_YYYY}
		    <if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
		    AND    A.HALFWAY_TYPE   = #{HALFWAY_TYPE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND    D.SECT_CODE      = #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		    AND     D.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(NAME)">
		    AND    D.NAME        LIKE #{NAME} + '%'
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND    A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
		    AND    D.RETR_DATE     &gt;= #{RETIRE_DATE_FR}
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
		    AND    D.RETR_DATE     &lt;= #{RETIRE_DATE_TO}
		 	</if>

		    ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
		END
    </select>
</mapper>