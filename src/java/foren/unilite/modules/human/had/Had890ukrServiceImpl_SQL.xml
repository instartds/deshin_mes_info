<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="had890ukrServiceImpl">
	<!-- 원천징수영수증 내역 조회 -->
	<select id="had890ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	-- had890ukrServiceImpl.selectList
	BEGIN
	
	--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
		DECLARE	@DateFormat	NVARCHAR(10)
		
		SELECT TOP 1 @DateFormat = M1.CODE_NAME
		  FROM BSA100T M1 WITH (NOLOCK)
		 WHERE M1.COMP_CODE	= #{S_COMP_CODE}
		   AND M1.MAIN_CODE	= 'B044'
		   AND M1.REF_CODE1	= 'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		
	--  2. 조회 -------------------------------------------------------------------------------------------------------------
		SELECT DISTINCT
			 --	인사정보
			   D.DIV_CODE																										-- 사업장
			 , N2.TREE_NAME																		AS DEPT_NAME					-- 부서명
			 , D.DEPT_CODE																										-- 부서코드
			 , M2.CODE_NAME																		AS POST_NAME					-- 직위명
			 , D.POST_CODE																										-- 직위코드
			 , D.NAME																											-- 성명
			 , A.PERSON_NUMB																									-- 사번
			 , CASE WHEN ISNULL(D.JOIN_DATE, '') = '' OR D.JOIN_DATE = '00000000' THEN ''
					ELSE REPLACE(
						 REPLACE(
						 REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.JOIN_DATE	, 1, 4))
											, 'MM'	, SUBSTRING(D.JOIN_DATE	, 5, 2))
											, 'DD'	, SUBSTRING(D.JOIN_DATE	, 7, 2))
			   END																				AS JOIN_DATE					--입사일
			 , CASE WHEN ISNULL(D.RETR_DATE, '') = '' OR D.RETR_DATE = '00000000' THEN ''
					ELSE REPLACE(
						 REPLACE(
						 REPLACE(@DateFormat, 'YYYY', SUBSTRING(D.RETR_DATE	, 1, 4))
											, 'MM'	, SUBSTRING(D.RETR_DATE	, 5, 2))
											, 'DD'	, SUBSTRING(D.RETR_DATE	, 7, 2))
			   END																				AS RETR_DATE					--퇴사일

			 --	세액계산정보
			 , ISNULL(A.DEF_IN_TAX_I			, 0)											AS DEF_IN_TAX_I					--결정세액소득세
			 , ISNULL(A.DEF_LOCAL_TAX_I			, 0)											AS DEF_LOCAL_TAX_I				--결정세액주민세
			 , ISNULL(A.NOW_IN_TAX_I			, 0)											AS NOW_IN_TAX_I					--기납부세액(현)소득세
			 , ISNULL(A.NOW_LOCAL_TAX_I			, 0)											AS NOW_LOCAL_TAX_I				--기납부세액(현)주민세
			 , ISNULL(B.P1_IN_TAX_I				, 0) + ISNULL(B.P2_IN_TAX_I				, 0)	AS PREV_IN_TAX_I				--기납부세액(전)소득세
			 , ISNULL(B.P1_LOCAL_TAX_I			, 0) + ISNULL(B.P2_LOCAL_TAX_I			, 0)	AS PREV_LOCAL_TAX_I				--기납부세액(전)주민세
			 , ISNULL(A.IN_TAX_I				, 0)											AS IN_TAX_I						--차감징수세액(소득세)
			 , ISNULL(A.LOCAL_TAX_I				, 0)											AS LOCAL_TAX_I					--차감징수세액(주민세)

			 --	실효세율
			 , ISNULL(A.ACTUAL_TAX_RATE			, 0)											AS ACTUAL_TAX_RATE				--차감징수세액(주민세)
			 
			 /**************************************************************************************************************************************************
			 **	근로소득공제
			 **************************************************************************************************************************************************/
			 , ISNULL(A.INCOME_SUPP_TOTAL_I		, 0)											AS INCOME_SUPP_TOTAL_I			--총급여액

			 , D.EMAIL_ADDR																										-- 이메일
		  FROM				HAD600T AS A	WITH (NOLOCK)
			INNER	JOIN	HUM100T AS D	WITH (NOLOCK) ON D.COMP_CODE	= A.COMP_CODE
														 AND D.PERSON_NUMB	= A.PERSON_NUMB
			LEFT	JOIN	HAD500T AS B	WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
														 AND B.YEAR_YYYY	= A.YEAR_YYYY
														 AND B.PERSON_NUMB	= A.PERSON_NUMB
			LEFT	JOIN	BSA100T AS M2	WITH (NOLOCK) ON M2.COMP_CODE	= D.COMP_CODE
														 AND M2.MAIN_CODE	= 'H005'
														 AND M2.SUB_CODE	= D.POST_CODE
			LEFT	JOIN	BOR120T AS N1	WITH (NOLOCK) ON N1.COMP_CODE	= D.COMP_CODE
											             AND N1.DIV_CODE	= D.DIV_CODE
			LEFT	JOIN	BSA210T AS N2	WITH (NOLOCK) ON N2.COMP_CODE	= D.COMP_CODE
														 AND N2.TREE_CODE	= D.DEPT_CODE
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.YEAR_YYYY		= #{YEAR_YYYY}
		<if test="@foren.Ognl@isNotEmpty(HALFWAY_TYPE)">
		   AND A.HALFWAY_TYPE	= #{HALFWAY_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND D.SECT_CODE		= #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPTS)">
		   AND D.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>
		</if>
		<if test="@foren.Ognl@isNotEmpty(NAME)">
		   AND D.NAME		 LIKE #{NAME} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_FR)">
		   AND D.RETR_DATE	   &gt;= #{RETIRE_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RETIRE_DATE_TO)">
		   AND D.RETR_DATE	   &lt;= #{RETIRE_DATE_TO}
		</if>
		 ORDER BY  DIV_CODE, DEPT_CODE, POST_CODE, D.NAME, A.PERSON_NUMB
	END
	</select>
	
	<!-- SMTP 전송정보 조회 -->
	<select id="had890ukrServiceImpl.selectSmtpInfo" parameterType="String" resultType="rMap">
	SELECT SEND_METHOD
		 , SERVER_NAME
		 , SERVER_PROT
		 , PICKUP_FOLDER_PATH
		 , SEND_USER_NAME
		 , SEND_PASSWORD
		 , CONN_TIMEOUT
		 , SSL_USE_YN
		 , SEND_USER_NAME
	  FROM HBS240T WITH (NOLOCK)
	 WHERE COMP_CODE  = #{S_COMP_CODE}
	</select>
	
	<!-- 이메일 전송 내역 결과 insert -->
	<update id="had890ukrServiceImpl.updateLog" parameterType="Map">
		DECLARE 	@SEND_SEQ		INTEGER
		
		SELECT @SEND_SEQ = ISNULL(MAX(SEND_SEQ),0) + 1 
		  FROM L_HAD600T_EMAIL WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND YEAR_YYYY	= #{YEAR_YYYY}
		   AND HALFWAY_TYPE = #{HALFWAY_TYPE}
		   AND PERSON_NUMB	= #{PERSON_NUMB}
		
		INSERT INTO L_HAD600T_EMAIL
			 ( COMP_CODE
			 , YEAR_YYYY
			 , HALFWAY_TYPE
			 , PERSON_NUMB
			 , SEND_SEQ
			 , DIV_CODE
			 , DEPT_CODE
			 , DEPT_NAME
			 , NAME
			 , EMAIL_ADDR
			 , SEND_RESULT
			 , ERROR_MSG
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		) VALUES (
			  #{S_COMP_CODE}
			, #{YEAR_YYYY}
			, #{HALFWAY_TYPE}
			, #{PERSON_NUMB}
			, @SEND_SEQ
			, #{DIV_CODE}
			, #{DEPT_CODE}
			, #{DEPT_NAME}
			, #{NAME}
			, #{EMAIL_ADDR}
			, #{SEND_RESULT}
			, #{SEND_MSG}
			, #{S_USER_ID}
			, GETDATE()
		)
	</update>
	
	<!-- 이메일 전송 내역 결과 조회 -->
	<select id="had890ukrServiceImpl.selectResultList" parameterType="Map" resultType="rMap">
	SELECT A.COMP_CODE
		 , A.YEAR_YYYY
		 , A.HALFWAY_TYPE
		 , A.PERSON_NUMB
		 , A.SEND_SEQ
		 , A.DIV_CODE
		 , B.NAME
		 , B.POST_CODE
		 , A.DEPT_CODE
		 , A.DEPT_NAME
		 , A.EMAIL_ADDR
		 , A.SEND_RESULT
		 , A.ERROR_MSG
		 , A.INSERT_DB_USER
		 , CONVERT(NVARCHAR(19), A.INSERT_DB_TIME, 121) AS INSERT_DB_TIME
	  FROM L_HAD600T_EMAIL	A WITH (NOLOCK)
	 INNER JOIN HUM100T 	B WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE 
											AND A.PERSON_NUMB = B.PERSON_NUMB
	 WHERE A.COMP_CODE		= #{S_COMP_CODE}
	   AND A.YEAR_YYYY		= #{YEAR_YYYY}
	   AND A.HALFWAY_TYPE	= #{HALFWAY_TYPE}
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND A.DIV_CODE = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPTS)">
		AND A.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
				 #{item}
			</foreach>
		</if>
	ORDER BY A.INSERT_DB_TIME DESC, A.YEAR_YYYY, A.PERSON_NUMB , A.SEND_SEQ DESC
	</select>
</mapper>