<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa700ukrServiceImpl">
	<select id="hpa700ukrServiceImpl.selectList1_1" parameterType="rMap" resultType="rMap">
		SELECT WAGES_CODE SUB_CODE, WAGES_NAME CODE_NAME
		  FROM HBS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND CODE_TYPE = '1'
		   AND USE_YN = 'Y' 
	</select>

	<select id="hpa700ukrServiceImpl.selectList1_2" parameterType="rMap" resultType="rMap">
		SELECT SUB_CODE, CODE_NAME
		  FROM BSA100T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE    =   'H034'  
		   AND SUB_CODE    !=  '$' 
		 ORDER BY MAIN_CODE, SUB_CODE
	</select>

	<select id="hpa700ukrServiceImpl.selectList2_1" parameterType="rMap" resultType="rMap">
		SELECT A.PERSON_NUMB
		     , B.NAME
		     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, A.PAY_FR_YYYYMM) PAY_FR_YYYYMM
		     , unilite.fnGetUserDateComp(#{S_COMP_CODE}, A.PAY_TO_YYYYMM) PAY_TO_YYYYMM
		     , A.DED_AMOUNT_I
		     , A.REMARK
		     , A.PROV_GUBUN
		     , A.WAGES_CODE
		     , A.SUPP_TYPE
		  FROM HPA700T A INNER JOIN HUM100T B
		                         ON A.COMP_CODE   = B.COMP_CODE
		                        AND A.PERSON_NUMB = B.PERSON_NUMB
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
		   AND A.SUPP_TYPE	= #{SUPP_TYPE}
		   AND PROV_GUBUN	= #{PROV_GUBUN}
		   AND A.PAY_FR_YYYYMM &lt;= #{PAY_YYYYMM}
		   AND A.PAY_TO_YYYYMM &gt;= #{PAY_YYYYMM}
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		    AND WAGES_CODE = #{SUB_CODE}
		</if>
		 ORDER BY A.PAY_FR_YYYYMM, A.PAY_TO_YYYYMM, B.NAME
	</select>

	<select id="hpa700ukrServiceImpl.selectList2_2" parameterType="rMap" resultType="rMap">
	<if test="PROV_GUBUN == &quot;1&quot;">
		SELECT A.PERSON_NUMB
		     , B.NAME
		     , ''				AS PAY_FR_YYYYMM
		     , ''				AS PAY_TO_YYYYMM
		     , A.AMOUNT_I	    AS DED_AMOUNT_I
		     , A.REMARK		    AS REMARK
		     , A.PROV_GUBUN
		     , A.WAGES_CODE
		     , ''            	AS SUPP_TYPE
		  FROM HPA200T A INNER JOIN HUM100T B
		                         ON A.COMP_CODE = B.COMP_CODE
		                        AND A.PERSON_NUMB = B.PERSON_NUMB
		 WHERE A.COMP_CODE	= #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		    AND WAGES_CODE = #{SUB_CODE}
		</if>
		 ORDER BY B.NAME
	</if>
	<if test="PROV_GUBUN == &quot;2&quot;">
		SELECT A.PERSON_NUMB
		     , B.NAME
		     , ''               AS PAY_FR_YYYYMM
		     , ''               AS PAY_TO_YYYYMM
		     , A.DED_AMOUNT_I   AS DED_AMOUNT_I
		     , A.PROV_GUBUN
		     , A.DED_CODE
		     , A.SUPP_TYPE      AS SUPP_TYPE
		  FROM HPA500T A INNER JOIN HUM100T B
		                         ON A.COMP_CODE = B.COMP_CODE
		                        AND A.PERSON_NUMB = B.PERSON_NUMB
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND uniLITE.fnCheckCompDivAuth(B.COMP_CODE, B.DIV_CODE, #{S_USER_ID}) = 'Y'
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		    AND A.PERSON_NUMB = #{PERSON_NUMB}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SUB_CODE)">
		    AND DED_CODE = #{SUB_CODE}
		</if>
		 ORDER BY B.NAME
	</if>
	</select>



	<insert id="hpa700ukrServiceImpl.insertList" parameterType="rMap">
			INSERT INTO
			<if test="rdoSelect == &quot;1&quot;">
							HPA700T
			</if>
			<if test="rdoSelect == &quot;2&quot;">
				<if test="PROV_GUBUN == &quot;1&quot;">
								HPA200T
				</if>
				<if test="PROV_GUBUN == &quot;2&quot;">
				                HPA500T
				</if>
			</if>
			     ( PERSON_NUMB
			<if test="rdoSelect == &quot;1&quot;">
			     , PAY_FR_YYYYMM
			     , PAY_TO_YYYYMM
			     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
			     , DED_AMOUNT_I
			     </if>
			</if>
			<if test="rdoSelect == &quot;2&quot;">
				<if test="PROV_GUBUN == &quot;1&quot;">
				     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
				     , AMOUNT_I
				     </if>
				</if>
				<if test="PROV_GUBUN == &quot;2&quot;">
				     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
	                 , DED_AMOUNT_I
	                 </if>
				</if>
			</if>
			     <if test="@foren.Ognl@isNotEmpty(REMARK)">
			     , REMARK
				 </if>
			     , PROV_GUBUN
			     <if test="rdoSelect == &quot;1&quot;">
                 , WAGES_CODE
                 </if>
                 <if test="rdoSelect == &quot;2&quot;">
                 <if test="PROV_GUBUN == &quot;1&quot;">
                 , WAGES_CODE
                 </if>
                 <if test="PROV_GUBUN == &quot;2&quot;">
                 , DED_CODE
                 </if>
                 </if>
			<if test="rdoSelect == &quot;1&quot;">
			     , SUPP_TYPE
			</if>
			<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;2&quot;">
                 , SUPP_TYPE
			</if>
            </if>
			     , UPDATE_DB_USER
			     , UPDATE_DB_TIME
			     , INSERT_DB_USER
			     , INSERT_DB_TIME
			     , COMP_CODE
		    ) 
			VALUES
			     ( #{PERSON_NUMB}
			<if test="rdoSelect == &quot;1&quot;">
			     , #{PAY_FR_YYYYMM}
			     , #{PAY_TO_YYYYMM}
			</if>
			     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
			     , ${DED_AMOUNT_I}
			     </if>
			     <if test="@foren.Ognl@isNotEmpty(REMARK)">
			     , #{REMARK}
			     </if>
			     , #{PROV_GUBUN}
                 , #{WAGES_CODE}
                
			<if test="rdoSelect == &quot;1&quot;">
			     , #{SUPP_TYPE}
			</if>
			<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;2&quot;">
                 , #{SUPP_TYPE}
			</if>
            </if>
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_USER_ID}
			     , GETDATE()
			     , #{S_COMP_CODE}
			)
	</insert>

	<update id="hpa700ukrServiceImpl.updateList" parameterType="rMap">
		UPDATE
			<if test="rdoSelect == &quot;1&quot;">
			   HPA700T
			   SET PAY_TO_YYYYMM  = #{PAY_TO_YYYYMM}
                 , UPDATE_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_TIME = GETDATE()
			</if>
			<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;1&quot;">
			   HPA200T
			   SET UPDATE_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_TIME = GETDATE()
			</if>
			<if test="PROV_GUBUN == &quot;2&quot;">
				HPA500T
               SET UPDATE_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_TIME = GETDATE()
			</if>
			</if>
			<if test="rdoSelect == &quot;1&quot;">
			     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
		     , DED_AMOUNT_I   = ${DED_AMOUNT_I}
			     </if>
		     </if>
			<if test="rdoSelect == &quot;2&quot;">
				<if test="PROV_GUBUN == &quot;1&quot;">
			     <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
			 , AMOUNT_I   = ${DED_AMOUNT_I}
			     </if>
				</if>
				<if test="PROV_GUBUN == &quot;2&quot;">
			      <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
             , DED_AMOUNT_I   = ${DED_AMOUNT_I}
                 </if>
				</if>
		     </if>
		     , REMARK         = #{REMARK}
		     
		 WHERE PERSON_NUMB    = #{PERSON_NUMB}
        <if test="rdoSelect == &quot;1&quot;">
		   AND PAY_FR_YYYYMM  = #{PAY_FR_YYYYMM}
        </if>
		   AND PROV_GUBUN     = #{PROV_GUBUN}
		<if test="rdoSelect == &quot;1&quot;">
		   AND WAGES_CODE     = #{WAGES_CODE}
		</if>
		<if test="rdoSelect == &quot;2&quot;">
           
           <if test="PROV_GUBUN == &quot;1&quot;">
               AND WAGES_CODE     = #{WAGES_CODE}
            </if>
            <if test="PROV_GUBUN == &quot;2&quot;">
               AND DED_CODE     = #{DED_CODE}
            </if>
        </if>

		<if test="rdoSelect == &quot;1&quot;">
		   AND SUPP_TYPE      = #{SUPP_TYPE}
		</if>
		
        <if test="rdoSelect == &quot;2&quot;">
        <if test="PROV_GUBUN == &quot;2&quot;">
           AND SUPP_TYPE      = #{SUPP_TYPE}
        </if>
        </if>
		   AND COMP_CODE      = #{S_COMP_CODE}
	</update>

	<delete id="hpa700ukrServiceImpl.deleteList" parameterType="rMap">
		DELETE FROM 
			<if test="rdoSelect == &quot;1&quot;">
							HPA700T
			</if>
			<if test="rdoSelect == &quot;2&quot;">
				<if test="PROV_GUBUN == &quot;1&quot;">
							HPA200T
				</if>
				<if test="PROV_GUBUN == &quot;2&quot;">
                            HPA500T
                </if>
			</if>
		 WHERE PERSON_NUMB   = #{PERSON_NUMB}
		<if test="rdoSelect == &quot;1&quot;">
		   AND PAY_FR_YYYYMM = #{PAY_FR_YYYYMM}
		</if>
		   AND PROV_GUBUN    = #{PROV_GUBUN}
		<if test="rdoSelect == &quot;1&quot;">
           AND WAGES_CODE     = #{WAGES_CODE}
        </if>
        <if test="rdoSelect == &quot;2&quot;">
           
           <if test="PROV_GUBUN == &quot;1&quot;">
               AND WAGES_CODE     = #{WAGES_CODE}
            </if>
            <if test="PROV_GUBUN == &quot;2&quot;">
               AND DED_CODE     = #{DED_CODE}
            </if>
        </if>
		<if test="rdoSelect == &quot;1&quot;">
		   AND SUPP_TYPE      = #{SUPP_TYPE}
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		<if test="PROV_GUBUN == &quot;2&quot;">
           AND SUPP_TYPE      = #{SUPP_TYPE}
		</if>
        </if>
		   AND COMP_CODE     = #{S_COMP_CODE}
	</delete>



	<!-- Excel -->
	<insert id="hpa700ukrServiceImpl.insertExcelHbs700upload" parameterType="Map">
		INSERT INTO HPA700T_UPLOAD
			(_EXCEL_JOBID, 
			 _EXCEL_ROWNUM, 
			 _EXCEL_HAS_ERROR, 
			 _EXCEL_ERROR_MSG, 
			 WAGES_NAME, 
			 PERSON_NUMB, 
			 NAME,
			 PAY_FR_YYYYMM,
			 PAY_TO_YYYYMM,
			 DED_AMOUNT_I,
			 REMARK
		)
		VALUES (
			 #{_EXCEL_JOBID}, 
			 #{_EXCEL_ROWNUM}, 
			 #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}, 
			 #{_EXCEL_ERROR		,jdbcType=VARCHAR},
			 #{WAGES_NAME}, 
			 #{PERSON_NUMB}, 
			 #{NAME},
			 REPLACE(#{PAY_FR_YYYYMM}, '.', ''),
			 REPLACE(#{PAY_TO_YYYYMM}, '.', ''),
			 #{DED_AMOUNT_I},
			 #{REMARK}
		)
	</insert>

	<select id="hpa700ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*hpa700ukrServiceImpl.selectExcelUploadSheet1*/
		BEGIN
		
			DECLARE @COMP_CODE		NVARCHAR(08)		--법인코드
			      , @SUPP_TYPE		NVARCHAR(02)		--지급구분
			      , @PROV_GUBUN		NVARCHAR(02)		--지급/공제구분
		
			    SET @COMP_CODE		= #{S_COMP_CODE}
				SET @SUPP_TYPE		= #{SUPP_TYPE}
				SET @PROV_GUBUN		= #{PROV_GUBUN}
		
			IF @PROV_GUBUN = '1'	--수당
				BEGIN
					SELECT A._EXCEL_JOBID
						 , A._EXCEL_ROWNUM
						 , A._EXCEL_HAS_ERROR       
						 , A._EXCEL_ERROR_MSG
						 , B.WAGES_CODE
						 , A.WAGES_NAME
		
						 , A.PERSON_NUMB 
		    			 , A.NAME
		    			 , A.PAY_FR_YYYYMM
		    			 , A.PAY_TO_YYYYMM
		    			 , A.DED_AMOUNT_I
		    			 , A.REMARK
						 , @PROV_GUBUN   AS PROV_GUBUN
						 , @SUPP_TYPE	 AS SUPP_TYPE
					  FROM  HPA700T_UPLOAD A
					  LEFT JOIN    HBS300T B ON B.COMP_CODE  = #{S_COMP_CODE}
					                        AND B.WAGES_NAME = A.WAGES_NAME
											AND B.CODE_TYPE  = N'1' 
											AND B.USE_YN     = 'Y'
					 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
					 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM 
				END
		
			ELSE	--공제
				BEGIN
					SELECT A._EXCEL_JOBID
						 , A._EXCEL_ROWNUM
						 , A._EXCEL_HAS_ERROR       
						 , A._EXCEL_ERROR_MSG
						 , B.SUB_CODE AS WAGES_CODE
						 , A.WAGES_NAME
						 
						 , A.PERSON_NUMB 
		    			 , A.NAME
		    			 , A.PAY_FR_YYYYMM
		    			 , A.PAY_TO_YYYYMM
		    			 , A.DED_AMOUNT_I
		    			 , A.REMARK
						 , @PROV_GUBUN   AS PROV_GUBUN
						 , @SUPP_TYPE AS SUPP_TYPE
					  FROM  HPA700T_UPLOAD A
					  LEFT JOIN    BSA100T B ON B.COMP_CODE = #{S_COMP_CODE}
					                        AND B.MAIN_CODE = 'H034'
											AND B.SUB_CODE != '$'
											AND B.CODE_NAME = A.WAGES_NAME
											AND B.USE_YN    = 'Y'
					 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
					 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM 
				END
		END
	</select>

	<update id="hpa700ukrServiceImpl.excelValidate" >
		/*Hpa700ukrServiceImpl_SQL.excelValidate*/
		BEGIN
			DECLARE @COMP_CODE		NVARCHAR(08)		--법인코드
				  , @SUPP_TYPE		NVARCHAR(02)		--지급구분
				  , @PROV_GUBUN		NVARCHAR(02)		--지급/공제구분
				
				SET @COMP_CODE		= #{S_COMP_CODE}
				SET @SUPP_TYPE		= #{SUPP_TYPE}
				SET @PROV_GUBUN		= #{PROV_GUBUN}
		
				IF @PROV_GUBUN = '1'	--수당
					BEGIN
		    			UPDATE	A
						   SET 
								A._EXCEL_HAS_ERROR = (CASE WHEN A.PERSON_NUMB IS NULL 
														   THEN 'Y' 
														   WHEN C.WAGES_CODE IS NULL
														   THEN 'Y'
													  ELSE A._EXCEL_HAS_ERROR 
													  END),
								A._EXCEL_ERROR_MSG = (CASE WHEN A.PERSON_NUMB IS NULL  
														   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '해당 사번의 사원이 존재하지 않습니다. ' 
														   WHEN C.WAGES_CODE IS NULL
														   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '수당(지급)명을 확인하십시오. ' 
													  ELSE A._EXCEL_ERROR_MSG END)
						FROM HPA700T_UPLOAD A 
						LEFT JOIN  HUM100T B ON B.COMP_CODE   = @COMP_CODE
										    AND A.PERSON_NUMB = B.PERSON_NUMB
						LEFT JOIN  HBS300T C ON C.COMP_CODE   = @COMP_CODE
							                AND C.WAGES_NAME  = A.WAGES_NAME
											AND C.CODE_TYPE   = N'1'
											AND C.USE_YN      = N'Y'
						WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
					END
				ELSE
					BEGIN
		    			UPDATE	A
						   SET 
								A._EXCEL_HAS_ERROR = (CASE WHEN A.PERSON_NUMB IS NULL 
														   THEN 'Y' 
														   WHEN C.SUB_CODE IS NULL 
														   THEN 'Y' 
													  ELSE A._EXCEL_HAS_ERROR 
													  END),
								A._EXCEL_ERROR_MSG = (CASE WHEN A.PERSON_NUMB IS NULL  
														   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '해당 사번의 사원이 존재하지 않습니다. ' 
														   WHEN C.SUB_CODE IS NULL 
														   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '공제명을 확인하십시오. ' 
													  ELSE A._EXCEL_ERROR_MSG END)
						FROM HPA700T_UPLOAD A 
						LEFT JOIN  HUM100T B  ON B.COMP_CODE  = @COMP_CODE
											AND A.PERSON_NUMB = B.PERSON_NUMB
						LEFT JOIN  BSA100T C ON C.COMP_CODE   = @COMP_CODE
							                AND C.MAIN_CODE   = 'H034'
											AND C.SUB_CODE   != '$'
											AND C.CODE_NAME   = A.WAGES_NAME
											AND C.USE_YN      = N'Y'
						WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
					END
		END
	</update>

	<update id="hpa700ukrServiceImpl.insertExcelHpa700T" parameterType="Map">
		DECLARE @COMP_CODE		NVARCHAR(08)		--법인코드
			  , @SUPP_TYPE		NVARCHAR(02)		--지급구분
			  , @PROV_GUBUN		NVARCHAR(02)		--지급/공제구분
			
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @SUPP_TYPE		= #{SUPP_TYPE}
			SET @PROV_GUBUN		= #{PROV_GUBUN}
			
		<if test="rdoSelect == &quot;1&quot;">
		IF @PROV_GUBUN = '1'	--수당
			BEGIN
				DELETE A
				 FROM             HPA700T A
				 LEFT JOIN ( 
						SELECT A.COMP_CODE
						     , B.WAGES_CODE
							 , A.PAY_FR_YYYYMM
							 , A.PAY_TO_YYYYMM
						  FROM HPA700T_UPLOAD A 
						  LEFT JOIN   HBS300T B ON B.COMP_CODE  = A.COMP_CODE
										       AND B.WAGES_NAME = A.WAGES_NAME
											   AND B.CODE_TYPE  = N'1'
											   AND B.USE_YN     = N'Y'
						  WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
						   ) B ON B.COMP_CODE  = A.COMP_CODE
						      AND B.WAGES_CODE = A.WAGES_CODE
					
				 WHERE A.COMP_CODE    = @COMP_CODE
				   AND A.SUPP_TYPE    = @SUPP_TYPE
				   AND A.PROV_GUBUN   = @PROV_GUBUN
				   AND A.PAY_FR_YYYYMM &gt;= B.PAY_FR_YYYYMM
				   AND A.PAY_TO_YYYYMM &lt;= B.PAY_TO_YYYYMM
			END
		ELSE
			BEGIN
				DELETE A
				 FROM             HPA700T A
				 LEFT JOIN ( 
							SELECT A.COMP_CODE
							     , B.SUB_CODE
								 , A.PAY_FR_YYYYMM
								 , A.PAY_TO_YYYYMM
							  FROM HPA700T_UPLOAD A 
							  LEFT JOIN   BSA100T B ON B.COMP_CODE   = @COMP_CODE
												   AND B.MAIN_CODE   = 'H034'
												   AND B.SUB_CODE   != '$'
												   AND B.CODE_NAME   = A.WAGES_NAME
												   AND B.USE_YN      = N'Y'
							 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
						   ) B ON B.COMP_CODE = A.COMP_CODE
						      AND B.SUB_CODE  = A.WAGES_CODE
					
				 WHERE A.COMP_CODE    = @COMP_CODE
				   AND A.SUPP_TYPE    = @SUPP_TYPE
				   AND A.PROV_GUBUN   = @PROV_GUBUN
				   AND A.PAY_FR_YYYYMM &gt;= B.PAY_FR_YYYYMM
				   AND A.PAY_TO_YYYYMM &lt;= B.PAY_TO_YYYYMM
			END
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;1&quot;">
				DELETE A
				 FROM             HPA200T A
				 LEFT JOIN ( 
						SELECT A.COMP_CODE
						     , B.WAGES_CODE
							 , A.PAY_FR_YYYYMM
							 , A.PAY_TO_YYYYMM
						  FROM HPA700T_UPLOAD A 
						  LEFT JOIN   HBS300T B ON B.COMP_CODE  = A.COMP_CODE
										       AND B.WAGES_NAME = A.WAGES_NAME
											   AND B.CODE_TYPE  = N'1'
											   AND B.USE_YN     = N'Y'
						  WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
						   ) B ON B.COMP_CODE  = A.COMP_CODE
						      AND B.WAGES_CODE = A.WAGES_CODE
					
				 WHERE A.COMP_CODE    = @COMP_CODE
				   AND A.PROV_GUBUN   = @PROV_GUBUN
			</if>
			<if test="PROV_GUBUN == &quot;2&quot;">
				DELETE A
				 FROM             HPA500T A
				 LEFT JOIN ( 
							SELECT A.COMP_CODE
							     , B.SUB_CODE
								 , A.PAY_FR_YYYYMM
								 , A.PAY_TO_YYYYMM
							  FROM HPA700T_UPLOAD A 
							  LEFT JOIN   BSA100T B ON B.COMP_CODE   = @COMP_CODE
												   AND B.MAIN_CODE   = 'H034'
												   AND B.SUB_CODE   != '$'
												   AND B.CODE_NAME   = A.WAGES_NAME
												   AND B.USE_YN      = N'Y'
							 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
						   ) B ON B.COMP_CODE = A.COMP_CODE
						      AND B.SUB_CODE  = A.WAGES_CODE
					
				 WHERE A.COMP_CODE    = @COMP_CODE
				   AND A.SUPP_TYPE    = @SUPP_TYPE
				   AND A.PROV_GUBUN   = @PROV_GUBUN
			</if>
		</if>
	
		<if test="rdoSelect == &quot;1&quot;">
			INSERT INTO HPA700T
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;1&quot;">
				INSERT INTO HPA200T
			</if>
			<if test="PROV_GUBUN == &quot;2&quot;">
				INSERT INTO HPA500T
			</if>
		</if>
		( 
		  COMP_CODE
		, PERSON_NUMB 
		<if test="rdoSelect == &quot;1&quot;">
		     , SUPP_TYPE
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;2&quot;">
		     , SUPP_TYPE
			</if>
		</if>
		, PROV_GUBUN
		<if test="rdoSelect == &quot;1&quot;">
		 , WAGES_CODE
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			 <if test="PROV_GUBUN == &quot;1&quot;">
			 , WAGES_CODE
			 </if>
			 <if test="PROV_GUBUN == &quot;2&quot;">
			 , DED_CODE
			 </if>
		</if>
		<if test="rdoSelect == &quot;1&quot;">
		, PAY_FR_YYYYMM
		, PAY_TO_YYYYMM
		</if>
		<if test="rdoSelect == &quot;1&quot;">
		, DED_AMOUNT_I
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;1&quot;">
			, AMOUNT_I
			</if>
			<if test="PROV_GUBUN == &quot;2&quot;">
		    , DED_AMOUNT_I
			</if>
		</if>
		, REMARK
		, UPDATE_DB_USER
		, UPDATE_DB_TIME
		, INSERT_DB_USER
		, INSERT_DB_TIME
		
		 ) 
		 SELECT #{S_COMP_CODE}
		      , A.PERSON_NUMB
		<if test="rdoSelect == &quot;1&quot;">
		     , #{SUPP_TYPE}
		</if>
		<if test="rdoSelect == &quot;2&quot;">
			<if test="PROV_GUBUN == &quot;2&quot;">
		     , #{SUPP_TYPE}
			</if>
		</if>
			  , #{PROV_GUBUN}
		<if test="PROV_GUBUN == &quot;1&quot;">
			  , B.WAGES_CODE
		</if>
		<if test="PROV_GUBUN == &quot;2&quot;">
			  , B.SUB_CODE
		</if>
		<if test="rdoSelect == &quot;1&quot;">
			  , A.PAY_FR_YYYYMM
			  , A.PAY_TO_YYYYMM
		</if>
			  , ISNULL(A.DED_AMOUNT_I, 0)
			  , A.REMARK
			  , #{S_USER_ID}
			  , GETDATE()
			  , #{S_USER_ID}
			  , GETDATE()
		<if test="PROV_GUBUN == &quot;1&quot;">
		   FROM      HPA700T_UPLOAD A
		   LEFT JOIN        HBS300T B ON B.COMP_CODE  = #{S_COMP_CODE}
							         AND B.WAGES_NAME = A.WAGES_NAME
									 AND B.CODE_TYPE  = N'1'
									 AND B.USE_YN     = N'Y'
		   WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		</if>
		<if test="PROV_GUBUN == &quot;2&quot;">
		   FROM      HPA700T_UPLOAD A
		   LEFT JOIN        BSA100T B ON B.COMP_CODE = #{S_COMP_CODE}
								     AND B.MAIN_CODE = 'H034'
								     AND B.SUB_CODE != '$'
									 AND B.CODE_NAME = A.WAGES_NAME
									 AND B.USE_YN    = N'Y'
		   WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		</if>
	</update>


<!-- 20200720 추가: 엑셀업로드2(주민등록번호 기준) -->
	<update id="hpa700ukrServiceImpl.insertExcelHbs700upload2" parameterType="Map">
		INSERT INTO HPA700T_UPLOAD_2
		    (_EXCEL_JOBID,
		     _EXCEL_ROWNUM,
		     _EXCEL_HAS_ERROR,
		     _EXCEL_ERROR_MSG,
		     WAGES_NAME,
		     PERSON_NUMB,
		     REPRE_NUM,
		     NAME,
		     PAY_FR_YYYYMM,
		     PAY_TO_YYYYMM,
		     DED_AMOUNT_I,
		     REMARK
		)
		SELECT
		     #{_EXCEL_JOBID},
		     #{_EXCEL_ROWNUM},
		     #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR},
		     #{_EXCEL_ERROR     ,jdbcType=VARCHAR},
		     #{WAGES_NAME},
		     '',
		     uniLITE.fnCipherEncrypt(#{REPRE_NUM}, ''),
		     #{NAME},
		     REPLACE(#{PAY_FR_YYYYMM}, '.', ''),
		     REPLACE(#{PAY_TO_YYYYMM}, '.', ''),
		     #{DED_AMOUNT_I},
		     #{REMARK}

		UPDATE A
		   SET A._EXCEL_HAS_ERROR = CASE WHEN B.COMP_CODE IS NULL THEN 'Y'
		                                 ELSE A._EXCEL_HAS_ERROR
		                            END
		     , A._EXCEL_ERROR_MSG = CASE WHEN B.COMP_CODE IS NULL THEN ISNULL(A._EXCEL_ERROR_MSG, '') + '해당 주민등록번호의 사원이 존재하지 않습니다. '
		                                 ELSE A._EXCEL_ERROR_MSG
		                            END
		     , A.PERSON_NUMB      = CASE WHEN B.COMP_CODE IS NULL THEN A.PERSON_NUMB
		                                 ELSE B.PERSON_NUMB
		                            END
		     , A.REPRE_NUM        = CASE WHEN B.COMP_CODE IS NULL THEN A.REPRE_NUM
		                                 ELSE B.REPRE_NUM
		                            END
		     , A.NAME             = CASE WHEN B.COMP_CODE IS NULL THEN A.NAME
		                                 ELSE B.NAME
		                            END
		  FROM      HPA700T_UPLOAD_2 A WITH(NOLOCK)
		  LEFT JOIN HUM100T          B WITH(NOLOCK) ON B.COMP_CODE                              = A.COMP_CODE
		                                           AND uniLITE.fnCipherDecrypt(B.REPRE_NUM, '') = REPLACE(uniLITE.fnCipherDecrypt(A.REPRE_NUM, ''), '-', '')
		 WHERE A._EXCEL_JOBID  = #{_EXCEL_JOBID}
		   AND A._EXCEL_ROWNUM = #{_EXCEL_ROWNUM}
	</update>

	<update id="hpa700ukrServiceImpl.excelValidate2" >
		/* Hpa700ukrServiceImpl_SQL.excelValidate2 */
		BEGIN
		    DECLARE @COMP_CODE        NVARCHAR(08)        --법인코드
		          , @SUPP_TYPE        NVARCHAR(02)        --지급구분
		          , @PROV_GUBUN       NVARCHAR(02)        --지급/공제구분
		          , @REPRE_NUM        NVARCHAR(255)       --주민등록번호

		    SET @COMP_CODE        = #{S_COMP_CODE}
		    SET @SUPP_TYPE        = #{SUPP_TYPE}
		    SET @PROV_GUBUN       = #{PROV_GUBUN}
		    SET @REPRE_NUM        = #{REPRE_NUM}

		    IF @PROV_GUBUN = '1'    --수당
		        BEGIN
		            UPDATE  A
		               SET  A._EXCEL_HAS_ERROR = (CASE WHEN A.PERSON_NUMB IS NULL 
		                                               THEN 'Y' 
		                                               WHEN C.WAGES_CODE IS NULL
		                                               THEN 'Y'
		                                          ELSE A._EXCEL_HAS_ERROR 
		                                          END),
		                    A._EXCEL_ERROR_MSG = (CASE WHEN A.PERSON_NUMB IS NULL  
		                                               THEN ISNULL(_EXCEL_ERROR_MSG,'') + '해당 주민등록번호의 사원이 존재하지 않습니다. '
		                                               WHEN C.WAGES_CODE IS NULL
		                                               THEN ISNULL(_EXCEL_ERROR_MSG,'') + '수당(지급)명을 확인하십시오. ' 
		                                          ELSE A._EXCEL_ERROR_MSG END)
		              FROM      HPA700T_UPLOAD_2 A 
		              LEFT JOIN HBS300T          C ON C.COMP_CODE   = @COMP_CODE
		                                          AND C.WAGES_NAME  = A.WAGES_NAME
		                                          AND C.CODE_TYPE   = N'1'
		                                          AND C.USE_YN      = N'Y'
		             WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		        END
		    ELSE
		        BEGIN
		            UPDATE  A
		               SET  A._EXCEL_HAS_ERROR = (CASE WHEN A.PERSON_NUMB IS NULL 
		                                               THEN 'Y' 
		                                               WHEN C.SUB_CODE IS NULL 
		                                               THEN 'Y' 
		                                          ELSE A._EXCEL_HAS_ERROR 
		                                          END),
		                    A._EXCEL_ERROR_MSG = (CASE WHEN A.PERSON_NUMB IS NULL  
		                                               THEN ISNULL(_EXCEL_ERROR_MSG,'') + '해당 주민등록번호의 사원이 존재하지 않습니다. '
		                                               WHEN C.SUB_CODE IS NULL 
		                                               THEN ISNULL(_EXCEL_ERROR_MSG,'') + '공제명을 확인하십시오. ' 
		                                          ELSE A._EXCEL_ERROR_MSG END)
		              FROM      HPA700T_UPLOAD_2 A 
		              LEFT JOIN BSA100T          C  ON C.COMP_CODE  = @COMP_CODE
		                                           AND C.MAIN_CODE  = 'H034'
		                                           AND C.SUB_CODE  != '$'
		                                           AND C.CODE_NAME  = A.WAGES_NAME
		                                           AND C.USE_YN     = N'Y'
		             WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		        END
		END
	</update>

	<select id="hpa700ukrServiceImpl.selectExcelUploadSheet2" parameterType="Map" resultType="rMap">
		/*hpa700ukrServiceImpl.selectExcelUploadSheet2*/
		BEGIN
		    DECLARE @COMP_CODE        NVARCHAR(08)        --법인코드
		          , @SUPP_TYPE        NVARCHAR(02)        --지급구분
		          , @PROV_GUBUN       NVARCHAR(02)        --지급/공제구분

		        SET @COMP_CODE        = #{S_COMP_CODE}
		        SET @SUPP_TYPE        = #{SUPP_TYPE}
		        SET @PROV_GUBUN       = #{PROV_GUBUN}

		    IF @PROV_GUBUN = '1'    --수당
		        BEGIN
		            SELECT A._EXCEL_JOBID
		                 , A._EXCEL_ROWNUM
		                 , A._EXCEL_HAS_ERROR
		                 , A._EXCEL_ERROR_MSG
		                 , B.WAGES_CODE
		                 , A.WAGES_NAME
		                 , A.PERSON_NUMB 
		                 , uniLITE.fnCipherDecrypt(A.REPRE_NUM, 'RJ') AS REPRE_NUM
		                 , A.NAME
		                 , A.PAY_FR_YYYYMM
		                 , A.PAY_TO_YYYYMM
		                 , A.DED_AMOUNT_I
		                 , A.REMARK
		                 , @PROV_GUBUN   AS PROV_GUBUN
		                 , @SUPP_TYPE     AS SUPP_TYPE
		              FROM  HPA700T_UPLOAD_2 A
		              LEFT JOIN    HBS300T   B ON B.COMP_CODE  = #{S_COMP_CODE}
		                                      AND B.WAGES_NAME = A.WAGES_NAME
		                                      AND B.CODE_TYPE  = N'1'
		                                      AND B.USE_YN     = N'Y'
		             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		             ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM 
		        END
		    ELSE    --공제
		        BEGIN
		            SELECT A._EXCEL_JOBID
		                 , A._EXCEL_ROWNUM
		                 , A._EXCEL_HAS_ERROR
		                 , A._EXCEL_ERROR_MSG
		                 , B.SUB_CODE AS WAGES_CODE
		                 , A.WAGES_NAME
		                 , A.PERSON_NUMB
		                 , uniLITE.fnCipherDecrypt(A.REPRE_NUM, 'RJ') AS REPRE_NUM
		                 , A.NAME
		                 , A.PAY_FR_YYYYMM
		                 , A.PAY_TO_YYYYMM
		                 , A.DED_AMOUNT_I
		                 , A.REMARK
		                 , @PROV_GUBUN   AS PROV_GUBUN
		                 , @SUPP_TYPE AS SUPP_TYPE
		              FROM  HPA700T_UPLOAD_2 A
		              LEFT JOIN    BSA100T   B ON B.COMP_CODE = #{S_COMP_CODE}
		                                      AND B.MAIN_CODE = 'H034'
		                                      AND B.SUB_CODE != '$'
		                                      AND B.CODE_NAME = A.WAGES_NAME
		                                      AND B.USE_YN    = N'Y'
		             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		             ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM 
		        END
		END
	</select>

	<update id="hpa700ukrServiceImpl.insertExcelHpa700T2_1" parameterType="Map">
		/* hpa700ukrServiceImpl.insertExcelHpa700T2 */
		DECLARE @COMP_CODE   NVARCHAR(08)        --법인코드
		      , @SUPP_TYPE   NVARCHAR(02)        --지급구분
		      , @PROV_GUBUN  NVARCHAR(02)        --지급/공제구분

		    SET @COMP_CODE   = #{S_COMP_CODE}
		    SET @SUPP_TYPE   = #{SUPP_TYPE}
		    SET @PROV_GUBUN  = #{PROV_GUBUN}

		<if test="rdoSelect == &quot;1&quot;">
		IF @PROV_GUBUN = '1'    --수당
		    BEGIN
		        DELETE A
		         FROM             HPA700T A
		         LEFT JOIN ( 
		                    SELECT A.COMP_CODE
		                         , B.WAGES_CODE
		                         , A.PAY_FR_YYYYMM
		                         , A.PAY_TO_YYYYMM
		                      FROM      HPA700T_UPLOAD_2 A 
		                      LEFT JOIN HBS300T          B ON B.COMP_CODE  = A.COMP_CODE
		                                                  AND B.WAGES_NAME = A.WAGES_NAME
		                                                  AND B.CODE_TYPE  = N'1'
		                                                  AND B.USE_YN     = N'Y'
		                      WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                   ) B ON B.COMP_CODE  = A.COMP_CODE
		                      AND B.WAGES_CODE = A.WAGES_CODE
		         WHERE A.COMP_CODE      = @COMP_CODE
		           AND A.SUPP_TYPE      = @SUPP_TYPE
		           AND A.PROV_GUBUN     = @PROV_GUBUN
		           AND A.PAY_FR_YYYYMM &gt;= B.PAY_FR_YYYYMM
		           AND A.PAY_TO_YYYYMM &lt;= B.PAY_TO_YYYYMM
		    END
		ELSE
		    BEGIN
		        DELETE A
		         FROM             HPA700T A
		         LEFT JOIN ( 
		                    SELECT A.COMP_CODE
		                         , B.SUB_CODE
		                         , A.PAY_FR_YYYYMM
		                         , A.PAY_TO_YYYYMM
		                      FROM      HPA700T_UPLOAD_2 A 
		                      LEFT JOIN BSA100T          B ON B.COMP_CODE   = @COMP_CODE
		                                                  AND B.MAIN_CODE   = 'H034'
		                                                  AND B.SUB_CODE   != '$'
		                                                  AND B.CODE_NAME   = A.WAGES_NAME
		                                                  AND B.USE_YN      = N'Y'
		                     WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                   ) B ON B.COMP_CODE = A.COMP_CODE
		                      AND B.SUB_CODE  = A.WAGES_CODE
		         WHERE A.COMP_CODE      = @COMP_CODE
		           AND A.SUPP_TYPE      = @SUPP_TYPE
		           AND A.PROV_GUBUN     = @PROV_GUBUN
		           AND A.PAY_FR_YYYYMM &gt;= B.PAY_FR_YYYYMM
		           AND A.PAY_TO_YYYYMM &lt;= B.PAY_TO_YYYYMM
		    END
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		    <if test="PROV_GUBUN == &quot;1&quot;">
		        DELETE A
		         FROM             HPA200T A
		         LEFT JOIN ( 
		                SELECT A.COMP_CODE
		                     , B.WAGES_CODE
		                     , A.PAY_FR_YYYYMM
		                     , A.PAY_TO_YYYYMM
		                  FROM      HPA700T_UPLOAD_2 A 
		                  LEFT JOIN HBS300T          B ON B.COMP_CODE  = A.COMP_CODE
		                                              AND B.WAGES_NAME = A.WAGES_NAME
		                                              AND B.CODE_TYPE  = N'1'
		                                              AND B.USE_YN     = N'Y'
		                  WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                   ) B ON B.COMP_CODE  = A.COMP_CODE
		                      AND B.WAGES_CODE = A.WAGES_CODE
		         WHERE A.COMP_CODE    = @COMP_CODE
		           AND A.PROV_GUBUN   = @PROV_GUBUN
		    </if>
		    <if test="PROV_GUBUN == &quot;2&quot;">
		        DELETE A
		         FROM             HPA500T A
		         LEFT JOIN ( 
		                    SELECT A.COMP_CODE
		                         , B.SUB_CODE
		                         , A.PAY_FR_YYYYMM
		                         , A.PAY_TO_YYYYMM
		                      FROM      HPA700T_UPLOAD_2 A 
		                      LEFT JOIN BSA100T          B ON B.COMP_CODE   = @COMP_CODE
		                                                  AND B.MAIN_CODE   = 'H034'
		                                                  AND B.SUB_CODE   != '$'
		                                                  AND B.CODE_NAME   = A.WAGES_NAME
		                                                  AND B.USE_YN      = N'Y'
		                     WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		                   ) B ON B.COMP_CODE = A.COMP_CODE
		                      AND B.SUB_CODE  = A.WAGES_CODE
		         WHERE A.COMP_CODE  = @COMP_CODE
		           AND A.SUPP_TYPE  = @SUPP_TYPE
		           AND A.PROV_GUBUN = @PROV_GUBUN
		    </if>
		</if>
	</update>

	<update id="hpa700ukrServiceImpl.insertExcelHpa700T2_2" parameterType="Map">
		<if test="rdoSelect == &quot;1&quot;">
		INSERT INTO HPA700T
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		    <if test="PROV_GUBUN == &quot;1&quot;">
		        INSERT INTO HPA200T
		    </if>
		    <if test="PROV_GUBUN == &quot;2&quot;">
		        INSERT INTO HPA500T
		    </if>
		</if>
		( 
		       COMP_CODE
		     , PERSON_NUMB 
		<if test="rdoSelect == &quot;1&quot;">
		     , SUPP_TYPE
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		    <if test="PROV_GUBUN == &quot;2&quot;">
		     , SUPP_TYPE
		    </if>
		</if>
		     , PROV_GUBUN
		<if test="rdoSelect == &quot;1&quot;">
		     , WAGES_CODE
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		     <if test="PROV_GUBUN == &quot;1&quot;">
		     , WAGES_CODE
		     </if>
		     <if test="PROV_GUBUN == &quot;2&quot;">
		     , DED_CODE
		     </if>
		</if>
		<if test="rdoSelect == &quot;1&quot;">
		     , PAY_FR_YYYYMM
		     , PAY_TO_YYYYMM
		</if>
		<if test="rdoSelect == &quot;1&quot;">
		     , DED_AMOUNT_I
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		    <if test="PROV_GUBUN == &quot;1&quot;">
		     , AMOUNT_I
		    </if>
		    <if test="PROV_GUBUN == &quot;2&quot;">
		     , DED_AMOUNT_I
		    </if>
		</if>
		     , REMARK
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		)
		SELECT #{S_COMP_CODE}
		     , A.PERSON_NUMB
		<if test="rdoSelect == &quot;1&quot;">
		     , #{SUPP_TYPE}
		</if>
		<if test="rdoSelect == &quot;2&quot;">
		    <if test="PROV_GUBUN == &quot;2&quot;">
		     , #{SUPP_TYPE}
		    </if>
		</if>
		     , #{PROV_GUBUN}
		<if test="PROV_GUBUN == &quot;1&quot;">
		     , B.WAGES_CODE
		</if>
		<if test="PROV_GUBUN == &quot;2&quot;">
		     , B.SUB_CODE
		</if>
		<if test="rdoSelect == &quot;1&quot;">
		     , A.PAY_FR_YYYYMM
		     , A.PAY_TO_YYYYMM
		</if>
		     , ISNULL(A.DED_AMOUNT_I, 0)
		     , A.REMARK
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		<if test="PROV_GUBUN == &quot;1&quot;">
		  FROM      HPA700T_UPLOAD_2 A
		  LEFT JOIN HBS300T          B ON B.COMP_CODE  = #{S_COMP_CODE}
		                              AND B.WAGES_NAME = A.WAGES_NAME
		                              AND B.CODE_TYPE  = N'1' 
		                              AND B.USE_YN     = N'Y'
		</if>
		<if test="PROV_GUBUN == &quot;2&quot;">
		  FROM      HPA700T_UPLOAD_2 A
		  LEFT JOIN BSA100T          B ON B.COMP_CODE = #{S_COMP_CODE}
		                              AND B.MAIN_CODE = 'H034'
		                              AND B.SUB_CODE != '$'
		                              AND B.CODE_NAME = A.WAGES_NAME
		                              AND B.USE_YN    = N'Y'
		</if>
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>