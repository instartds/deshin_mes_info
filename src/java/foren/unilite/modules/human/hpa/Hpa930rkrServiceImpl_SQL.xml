<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hpa930rkrServiceImpl">

	<select id="Hpa930rkrServiceImpl.getRepreNumHideOption" parameterType="Map" resultType="rMap">		
		--Hpa930rkrServiceImpl.getRepreNumHideOption
		SELECT ISNULL(SUB_CODE, 'N')	AS SUB_CODE
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H224'
		   AND REF_CODE1 = 'Y'
	</select>
	
	<select id="Hpa930rkrServiceImpl.selectList" parameterType="Map" resultType="rMap">		
		--hpa930rkr.Chpa930rkr [fnHpa930nQ] Query01
BEGIN
   SET NOCOUNT ON
   SET ARITHABORT ON
   
   DECLARE	@COST_POOL        NVARCHAR(01)
   			,@BANK_ACCOUNT		NVARCHAR(01)
   
    -- 에러명세:공백
    SET @COST_POOL = #{COST_POOL}
    SET @BANK_ACCOUNT = #{BANK_ACCOUNT}

   -- 1. 임시테이블 선언 ------------------------------------------------------------------------------------------
   IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#HPA930RKR_150210'))
       DROP TABLE #HPA930RKR_150210

   CREATE TABLE #HPA930RKR_150210 ( GUBUN            NVARCHAR(01)
                                  , COMP_CODE        NVARCHAR(10)
                                  , PERSON_NUMB      NVARCHAR(10)
                                  , COST_POOL_CODE   NVARCHAR(20)
                                  , COST_POOL_NAME   NVARCHAR(40)
                                  , REAL_AMOUNT_I    NUMERIC(30, 6)
                                  )

   -- 2.1 급여내역 INSERT ------------------------------------------------------------------------------------------
   INSERT INTO #HPA930RKR_150210
   SELECT '1'                AS GUBUN
        , A.COMP_CODE
        , A.PERSON_NUMB
        , CASE WHEN @COST_POOL = '3' THEN A.COST_KIND      ELSE '' END AS COST_POOL_CODE
        , CASE WHEN @COST_POOL = '3' THEN B.COST_POOL_NAME ELSE '' END AS COST_POOL_NAME
        , SUM(A.REAL_AMOUNT_I) AS REAL_AMOUNT_I
   FROM              HPA600T A WITH (NOLOCK)
          LEFT  JOIN CBM600T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                            AND B.COST_POOL_CODE = A.COST_KIND
   WHERE  A.COMP_CODE   = #{S_COMP_CODE}
     AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
     AND  A.PAY_YYYYMM  = #{PAY_YYYYMM}
     AND  A.SUPP_TYPE   = #{SUPP_TYPE}
     <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	AND A.PAY_CODE LIKE CONCAT('',#{PAY_CODE},'%') 
     </if>
   GROUP BY A.COMP_CODE, A.PERSON_NUMB
          , CASE WHEN @COST_POOL = '3' THEN A.COST_KIND      ELSE '' END
          , CASE WHEN @COST_POOL = '3' THEN B.COST_POOL_NAME ELSE '' END
   HAVING SUM(A.REAL_AMOUNT_I) != 0

   -- 2.2 월별복지지원내역 INSERT ------------------------------------------------------------------------------------------
   INSERT INTO #HPA930RKR_150210
   SELECT '1'                AS GUBUN
        , A.COMP_CODE
        , A.PERSON_NUMB
        , ''                 AS COST_POOL_CODE
        , ''                 AS COST_POOL_NAME
        , SUM(ISNULL(A.GIVE_I, 0)) AS REAL_AMOUNT_I
   FROM   HWE010T A WITH (NOLOCK)
          LEFT  JOIN HWE100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                            AND B.WEL_LEVEL1  = A.WEL_LEVEL1
                                            AND B.WEL_LEVEL2  = A.WEL_LEVEL2
                                            AND B.WEL_CODE    = A.WEL_CODE
                                            AND B.APPLY_YYMM  = A.APPLY_YYMM
          LEFT  JOIN HUM100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                            AND C.PERSON_NUMB = A.PERSON_NUMB
   WHERE  A.COMP_CODE    = #{S_COMP_CODE}
     AND uniLITE.fnCheckCompDivAuth(C.COMP_CODE, C.DIV_CODE, #{S_USER_ID}) = 'Y'
     AND  A.PAY_YYYYMM   = #{PAY_YYYYMM}
     AND  A.CASH_SEND    = 'N'
     AND  A.PAY_APPLY_YN = 'N'
     AND  B.PAY_YN       = 'Y'
     AND  B.TAX_CODE    != '4'
     <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	AND C.PAY_CODE LIKE CONCAT('',#{PAY_CODE},'%') 
     </if>
   GROUP BY A.COMP_CODE, A.PERSON_NUMB
   HAVING SUM(ISNULL(A.GIVE_I, 0)) != 0

   -- 3. 합계 INSERT ------------------------------------------------------------------------------------------
   INSERT INTO #HPA930RKR_150210
   SELECT '2'                AS GUBUN
        , A.COMP_CODE
        , A.PERSON_NUMB
        , A.COST_POOL_CODE
        , A.COST_POOL_NAME
        , SUM(A.REAL_AMOUNT_I) AS REAL_AMOUNT_I
   FROM   #HPA930RKR_150210 A WITH (NOLOCK)
   WHERE  A.GUBUN = '1'
   GROUP BY A.COMP_CODE, A.PERSON_NUMB, A.COST_POOL_CODE, A.COST_POOL_NAME

   -- 4. Main Query
   SELECT CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(B.BANK_CODE1, '')
               ELSE ISNULL(B.BANK_CODE2, '')
          END                                           AS BANK_CODE1
        , CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(C1.CUSTOM_NAME, '')
               ELSE ISNULL(C2.CUSTOM_NAME, '')
          END                                           AS BANK_NAME1
        , A.PERSON_NUMB                                 AS PERSON_NUMB
        , B.NAME                                        AS NAME
        , CASE WHEN @BANK_ACCOUNT = '1' THEN unilite.fnCipherDecrypt(B.BANK_ACCOUNT1, 'B')
               ELSE unilite.fnCipherDecrypt(B.BANK_ACCOUNT2, 'B')
          END                                           AS BANK_ACCOUNT1
        , SUM(ISNULL(A.REAL_AMOUNT_I, 0))               AS REAL_AMOUNT_I
        
        <if test='REPRE_NUM =="1" '>      
        , unilite.fnCipherDecrypt(B.REPRE_NUM, 'R')     AS REPRE_NUM
        </if>
        <if test='REPRE_NUM =="2" '>         
        , '******-*******'                                AS REPRE_NUM
        </if>
        <if test='REPRE_NUM =="3" '>
        , unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')     AS REPRE_NUM
        </if>   
        , B.POST_CODE                                   AS POST_CODE
        , ''                                            AS PAY_GRADE1
        , CASE WHEN @BANK_ACCOUNT = '1' 
                    THEN CASE WHEN ISNULL(B.BANKBOOK_NAME, '') = '' THEN B.NAME
                              ELSE B.BANKBOOK_NAME
                         END
               ELSE CASE WHEN ISNULL(B.BANKBOOK_NAME2, '') = '' THEN B.NAME
                              ELSE B.BANKBOOK_NAME2
                         END
          END                                           AS BANKBOOK_NAME
        , A.COST_POOL_CODE
        , A.COST_POOL_NAME
   FROM    #HPA930RKR_150210 A  WITH (NOLOCK)
          INNER JOIN HUM100T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
          LEFT  JOIN BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE   = B.COMP_CODE
                                             AND C1.CUSTOM_CODE = B.BANK_CODE1
                                             AND C1.CUSTOM_TYPE = '4'
          LEFT  JOIN BCM100T C2 WITH (NOLOCK) ON C2.COMP_CODE   = B.COMP_CODE
                                             AND C2.CUSTOM_CODE = B.BANK_CODE2
                                             AND C2.CUSTOM_TYPE = '4'
   WHERE  A.GUBUN            = '2'
   <if test=" @foren.Ognl@isNotEmpty(DIV_CODE) ">     
   	AND  B.DIV_CODE      LIKE CONCAT('',#{DIV_CODE},'%')  
   </if>
   <if test=" @foren.Ognl@isNotEmpty(DEPT_CODE) ">
   	AND B.DEPT_CODE       IN
   	<foreach collection="DEPT_CODE" index="index" item="item" open="(" separator="," close=")"> 
            #{item} 
        </foreach>   
   </if>
   <if test=" @foren.Ognl@isNotEmpty(PAY_DAY_FLAG) ">
   	AND B.PAY_PROV_FLAG LIKE CONCAT('',#{PAY_DAY_FLAG},'%')
   </if>
   <choose>
       <when test=" @foren.Ognl@isNotEmpty(PAY_DAY_FLAG) ">
            AND B.PERSON_NUMB   LIKE CONCAT('',#{PERSON_NUMB},'%')
       </when>
       <otherwise>
       	    AND B.NAME   LIKE  CONCAT('',#{NAME},'%')
       </otherwise>
   </choose>
   <if test=" @foren.Ognl@isNotEmpty(BANK_CODE) ">
   	AND CASE WHEN @BANK_ACCOUNT = '1' THEN B.BANK_CODE1
                      ELSE B.BANK_CODE2
                 END             LIKE CONCAT('',#{BANK_CODE},'%')
   </if>
   GROUP BY CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(B.BANK_CODE1, '')
                 ELSE ISNULL(B.BANK_CODE2, '')
            END
          , CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(C1.CUSTOM_NAME, '')
                 ELSE ISNULL(C2.CUSTOM_NAME, '')
            END
          , A.PERSON_NUMB, B.NAME
        <if test='REPRE_NUM =="1" '>      
        , unilite.fnCipherDecrypt(B.REPRE_NUM, 'R')
        </if>
        
        <if test='REPRE_NUM =="3" '>
        , unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')
        </if>   
          , B.POST_CODE, B.COMP_CODE, B.BANKBOOK_NAME
          , CASE WHEN @BANK_ACCOUNT = '1' THEN unilite.fnCipherDecrypt(B.BANK_ACCOUNT1, 'B')
                 ELSE unilite.fnCipherDecrypt(B.BANK_ACCOUNT2, 'B')
            END
          , CASE WHEN @BANK_ACCOUNT = '1' 
                      THEN CASE WHEN ISNULL(B.BANKBOOK_NAME, '') = '' THEN B.NAME
                                ELSE B.BANKBOOK_NAME
                           END
                 ELSE CASE WHEN ISNULL(B.BANKBOOK_NAME2, '') = '' THEN B.NAME
                                ELSE B.BANKBOOK_NAME2
                           END
            END
          , A.COST_POOL_CODE
          , A.COST_POOL_NAME
   <choose>
	<when test="COST_POOL == 3">	  
   		ORDER BY A.COST_POOL_CODE
		, CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(B.BANK_CODE1, '')
                 ELSE ISNULL(B.BANK_CODE2, '')
            END
          , B.NAME 
   	</when>
	<otherwise>
		ORDER BY CASE WHEN @BANK_ACCOUNT = '1' THEN ISNULL(B.BANK_CODE1, '')
                     ELSE ISNULL(B.BANK_CODE2, '')
                END
              , B.NAME	
	</otherwise>
   </choose>
          

   SET NOCOUNT OFF
   SET ARITHABORT OFF

END

	</select>
</mapper>