<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa360skrServiceImpl">
	<select id="hpa360skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--hpa360skr.Chum360skr[fnhpa360QStd] QUERY01 (시간외단가 조회)
	    
		SET NOCOUNT ON
		
		DECLARE @COMP_CODE      NVARCHAR(10),
		        @PAY_YYYYMM     NVARCHAR(8) ,   
		        @DIV_CODE       NVARCHAR(1) ,
		        @PAY_PROV_FLAG  NVARCHAR(1) ,
		        @FR_DEPT_CODE   NVARCHAR(10),
		        @TO_DEPT_CODE   NVARCHAR(10),
		        @EMPLOY_TYPE    NVARCHAR(1) ,
		        @NAME           NVARCHAR(10),
		        @PERSON_NUMB    NVARCHAR(10),
		        @WAGES_CODE NVARCHAR(3)
		
		SET @COMP_CODE      = #{S_COMP_CODE} 
		SET @PAY_YYYYMM     = #{DATE}					--급여년월
		SET @DIV_CODE       = #{DIV_CODE}				--사업장
		SET @PAY_PROV_FLAG  = #{PAY_FLAG}				--지급차수
		SET @FR_DEPT_CODE   = 
							<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
								#{DEPT_CODE_FR}			--부서FROM
							</if>
							<if test="@foren.Ognl@isEmpty(DEPT_CODE_FR)">
								'0'						--부서FROM
							</if>
		SET @TO_DEPT_CODE   = 
							<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
								#{DEPT_CODE_TO}			--부서TO
							</if>
							<if test="@foren.Ognl@isEmpty(DEPT_CODE_TO)">
								'999999'				--부서TO
							</if>
		SET @EMPLOY_TYPE    = #{EMPLOY_TYPE}			--사원구분
		SET @NAME           = #{NAME}					--성명
		SET @PERSON_NUMB    = #{PERSON_NUMB}			--사번
		
		--M:월지급내역등록,B:사업장,C:직위, D:직책, E: 인사기본, F:--지급/공제코드등록
		
		SELECT
		        B.DIV_NAME      
		      , A.DEPT_NAME
		      , C.CODE_NAME     AS  POST_NAME
		      , D.CODE_NAME     AS  ABIL_NAME
		      , E.NAME
		      , A.PERSON_NUMB
		      , uniLITE.fnGetUserDateComp(@COMP_CODE, E.JOIN_DATE) AS JOIN_DATE
		      , SUM(M.AMOUNT_I) AS  AMOUNT_I
		      , CASE WHEN A.PAY_CODE IN ('0', '2') THEN ROUND(ISNULL(E.PAY_PRESERVE_I, 0) * 1.6/209, 0)
		             ELSE ROUND(SUM(M.AMOUNT_I) * 1.6/209, 0)
		        END             AS AMOUNT_COST
		      , ''              AS REMARK
		FROM                        HPA300T     M WITH(NOLOCK)          
		        INNER JOIN          HPA600T     A WITH(NOLOCK)  ON (M.PAY_YYYYMM    = A.PAY_YYYYMM
		                                                        AND M.SUPP_TYPE     = A.SUPP_TYPE
		                                                        AND M.PERSON_NUMB   = A.PERSON_NUMB
		                                                        AND M.COMP_CODE     = A.COMP_CODE)
		        INNER JOIN          BOR120T     B WITH(NOLOCK)  ON (A.COMP_CODE     = B.COMP_CODE
		                                                        AND A.DIV_CODE      = B.DIV_CODE)
		        LEFT OUTER JOIN     BSA100T     C WITH(NOLOCK)  ON (A.COMP_CODE     = C.COMP_CODE
		                                                        AND C.MAIN_CODE     = 'H005'
		                                                        AND C.SUB_CODE      = A.POST_CODE)
		        LEFT OUTER JOIN     BSA100T     D WITH(NOLOCK)  ON (A.COMP_CODE     = D.COMP_CODE
		                                                        AND D.MAIN_CODE     = 'H006'
		                                                        AND D.SUB_CODE      = A.ABIL_CODE)      
		        INNER JOIN          HUM100T     E WITH(NOLOCK)  ON (A.COMP_CODE     = E.COMP_CODE
		                                                        AND A.PERSON_NUMB   = E.PERSON_NUMB)
		        INNER JOIN          HBS300T     F  WITH(NOLOCK) ON (M.COMP_CODE     = F.COMP_CODE
		                                                        AND M.WAGES_CODE    = F.WAGES_CODE
		                                                        AND F.ORD_WAGES     = 'Y'
		                                                        AND F.CODE_TYPE     = '1')
		WHERE   1=1
		AND     M.COMP_CODE             =       @COMP_CODE
		AND     M.PAY_YYYYMM            =       @PAY_YYYYMM                     
		AND     A.DIV_CODE              LIKE    @DIV_CODE + '%'                 
		AND     E.PAY_PROV_FLAG         LIKE    @PAY_PROV_FLAG + '%'            
		AND     A.DEPT_CODE             BETWEEN @FR_DEPT_CODE AND @TO_DEPT_CODE 
		AND     A.EMPLOY_TYPE           LIKE    @EMPLOY_TYPE + '%'              
		AND     E.NAME                  LIKE    @NAME + '%'                     
		GROUP BY B.DIV_NAME, A.DEPT_NAME ,C.CODE_NAME, D.CODE_NAME, E.NAME, A.PERSON_NUMB, E.JOIN_DATE, A.PAY_CODE, E.PAY_PRESERVE_I  
		HAVING   SUM(M.AMOUNT_I) != 0
		ORDER BY B.DIV_NAME, A.DEPT_NAME ,C.CODE_NAME, D.CODE_NAME, E.JOIN_DATE ,E.NAME, A.PERSON_NUMB
		
		SET NOCOUNT OFF
	</select>
</mapper>