<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa610ukrServiceImpl">

<select id="hpa610ukrServiceImpl.selectHPA400T" parameterType="Map" resultType="rMap">
	/* selectHPA400T */
    SELECT 
        A.COMP_CODE, 
        A.PAY_YYYYMM, 
        A.SUPP_TYPE, 
        A.PERSON_NUMB,
        A.DED_CODE,
        B.CODE_NAME AS WAGES_NAME,
        A.DED_AMOUNT_I

      FROM HPA400T A WITH(NOLOCK)
 LEFT JOIN BSA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                 AND B.MAIN_CODE = 'H034'
                                 AND B.SUB_CODE = A.DED_CODE
     WHERE A.COMP_CODE = #{S_COMP_CODE}
       AND A.PAY_YYYYMM = #{PAY_YYYYMM}
       AND A.SUPP_TYPE = 'F'   --고정
       AND A.PERSON_NUMB = #{PERSON_NUMB} 
       
    ORDER BY B.REF_CODE2
</select>





<select id="hpa610ukrServiceImpl.selectHPA400T1" parameterType="Map" resultType="rMap">

   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'ANU',
        WAGES_NAME = '국민연금',
        DED_AMOUNT_I = 0

union all

   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'HIR',
        WAGES_NAME = '고용보험',
        DED_AMOUNT_I = 0

union all
   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'INC',
        WAGES_NAME = '소득세',
        DED_AMOUNT_I = 0

union all
   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'LCI',
        WAGES_NAME = '요양보험',
        DED_AMOUNT_I = 3000

union all
   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'LOC',
        WAGES_NAME = '주민세',
        DED_AMOUNT_I = 0

union all

   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'MED',
        WAGES_NAME = '건강보험',
        DED_AMOUNT_I = 100

union all

   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'RLC',
        WAGES_NAME = '요양보험정산',
        DED_AMOUNT_I = 0

union all

   SELECT 
        COMP_CODE = 'MASTER', 
        PAY_YYYYMM = '201712', 
        SUPP_TYPE = 'F', 
        PERSON_NUMB = 'S1111',
        DED_CODE = 'RME',
        WAGES_NAME = '건강보험정산',
        DED_AMOUNT_I = 300

</select>

<select id="hpa610ukrServiceImpl.selectHPA600T" parameterType="Map" resultType="rMap">
	--UHpa01Krv.CHpa600UKr [fnHpa600nQ] Query 01
    SELECT A.PAY_YYYYMM                              AS PAY_YYYYMM
         , A.SUPP_TYPE                               AS SUPP_TYPE
         , A.PERSON_NUMB                             AS PERSON_NUMB
         , B.NAME                                    AS NAME
         , A.DEPT_CODE                               AS DEPT_CODE
         , A.DEPT_NAME                               AS DEPT_NAME
         , ISNULL(A.ABIL_CODE, '')                   AS ABIL_CODE
         , A.POST_CODE                               AS POST_CODE
         , A.PAY_CODE                                AS PAY_CODE
         , A.TAX_CODE                                AS TAX_CODE
         , A.EXCEPT_TYPE                             AS EXCEPT_TYPE
         , A.EMPLOY_TYPE                             AS EMPLOY_TYPE
         , A.SUPP_DATE                               AS SUPP_DATE
         , A.PAY_PROV_FLAG                           AS PAY_PROV_FLAG
         , ISNULL(A.OT_KIND, '')                     AS OT_KIND
         , ISNULL(A.BONUS_KIND, '')                  AS BONUS_KIND
         , ISNULL(A.COM_DAY_WAGES, 0)                AS COM_DAY_WAGES
         , ISNULL(A.LONG_MONTH, 0)                   AS LONG_MONTH
         , ISNULL(A.SPOUSE, '')                      AS SPOUSE
         , ISNULL(A.WOMAN, '')                       AS WOMAN
         , ISNULL(A.SUPP_NUM, 0)                     AS SUPP_NUM
         , ISNULL(A.DEFORM_NUM,0)                    AS DEFORM_NUM
         , ISNULL(A.AGED_NUM,0)                      AS AGED_NUM
         , ISNULL(A.MED_AVG_I, 0)                    AS MED_AVG_I
         , ISNULL(A.ANU_BASE_I, 0)                   AS ANU_BASE_I
         , ISNULL(A.BONUS_STD_I, 0)                  AS BONUS_STD_I
         , ISNULL(A.BONUS_RATE, 0)                   AS BONUS_RATE
         , ISNULL(A.INCE_WAGES_RATE, 0)              AS INCE_WAGES_RATE
         , ISNULL(A.PLUS_RATE, 0)                    AS PLUS_RATE
         , ISNULL(A.MINUS_RATE, 0)                   AS MINUS_RATE
         , ISNULL(A.SUPP_RATE, 0)                    AS SUPP_RATE
         , ISNULL(A.BONUS_I, 0)                      AS BONUS_I
         , ISNULL(A.BONUS_TOTAL_I, 0)                AS BONUS_TOTAL_I
         , ISNULL(A.PAY_TOTAL_I, 0)                  AS PAY_TOTAL_I
    
         , ISNULL(D.TAX_EXEMPTION1_I, 0)             AS TAX_EXEMPTION1_I  -- 연장근로비과세
         , ISNULL(D.TAX_EXEMPTION2_I, 0)             AS TAX_EXEMPTION2_I  -- 식대비과세
         , ISNULL(D.TAX_EXEMPTION3_I, 0)             AS TAX_EXEMPTION3_I  -- 기타비과세
         , ISNULL(D.TAX_EXEMPTION4_I, 0)             AS TAX_EXEMPTION4_I  -- 국외근로비과세
         , ISNULL(D.TAX_EXEMPTION6_I, 0)             AS TAX_EXEMPTION6_I  -- 연구활동비비과세
         , ISNULL(D.TAX_EXEMPTION5_I, 0)             AS TAX_EXEMPTION5_I  -- 자녀양육비비과세
    
         , ISNULL(A.SUPP_TOTAL_I, 0)
         - ISNULL(D.TAX_EXEMPTION1_I, 0)
         - ISNULL(D.TAX_EXEMPTION2_I, 0)
         - ISNULL(D.TAX_EXEMPTION3_I, 0)
         - ISNULL(D.TAX_EXEMPTION4_I, 0)
         - ISNULL(D.TAX_EXEMPTION6_I, 0)
         - ISNULL(D.TAX_EXEMPTION5_I, 0)             AS TAX_AMOUNT_I      -- 과세총액(지급총액 - 비과세총액)
         , ISNULL(A.BONUS_TAX_I, 0)                  AS BONUS_TAX_I
         , ISNULL(A.SUPP_TOTAL_I, 0)                 AS SUPP_TOTAL_I
         , ISNULL(A.DED_TOTAL_I, 0)                  AS DED_TOTAL_I
         , ISNULL(A.REAL_AMOUNT_I, 0)                AS REAL_AMOUNT_I
         , ISNULL(A.YEAR_CRT, 0)                     AS YEAR_CRT
         , ISNULL(A.YEAR_ADD, 0)                     AS YEAR_ADD
         , ISNULL(A.MONTH_CRT, 0)                    AS MONTH_CRT
         , ISNULL(A.MON_YEAR_USE, 0)                 AS MON_YEAR_USE
         , ISNULL(A.MON_YEAR_PROV, 0)                AS MON_YEAR_PROV
         , ISNULL(A.RETR_FLAG, '')                   AS RETR_FLAG
         , ISNULL(A.AUTO_RECORD_NUM, '')             AS AUTO_RECORD_NUM
         , B.JOIN_DATE
         , B.RETR_DATE
         , ISNULL(B.WAGES_STD_I, 0)                  AS WAGES_STD_I
         , A.COM_DAY_WAGES
         , A.DIV_CODE
         , A.SECT_CODE
         , A.MAKE_SALE
         , A.COST_KIND
         , A.PAY_GUBUN
         , A.PAY_GUBUN2
         , ISNULL(B.COM_YEAR_WAGES,0)                AS COM_YEAR_WAGES
         , ISNULL(A.MED_GRADE, '')                   AS MED_GRADE
         , ISNULL(A.BUSI_SHARE_I, 0)                 AS BUSI_SHARE_I
         , ISNULL(A.CHILD_20_NUM, 0)                 AS CHILD_20_NUM
         , ISNULL(A.COM_PAY_FLAG, '')                AS COM_PAY_FLAG
         , ISNULL(A.NON_TAX_I, 0)                    AS NON_TAX_I
         , ISNULL(A.WORKER_COMPEN_I, 0)              AS WORKER_COMPEN_I
         , ISNULL(A.TAXRATE_BASE, '2')               AS TAXRATE_BASE
         , CASE WHEN C.CLOSE_DATE IS NOT NULL 
              THEN '마감'
              ELSE '미마감'
           END                                       AS CLOSE_YN
         , ISNULL(E.IWALL_SAVE,0)                    AS IWALL_SAVE
         , ISNULL(E.JOIN_YEAR_SAVE,0)                AS JOIN_YEAR_SAVE
		 , CASE WHEN A.PAY_YYYYMM > LEFT(B.YOUTH_EXEMP_DATE, 6)
		        THEN ''
			    ELSE B.YOUTH_EXEMP_RATE
		    END AS YOUTH_EXEMP_RATE

		 , CASE WHEN A.PAY_YYYYMM > LEFT(B.YOUTH_EXEMP_DATE, 6)
			    THEN ''
			    ELSE B.YOUTH_EXEMP_DATE
			END AS YOUTH_EXEMP_DATE
      FROM            HPA600T A  WITH (NOLOCK) 
           LEFT  JOIN HUM100T B  WITH (NOLOCK)  ON A.COMP_CODE   = B.COMP_CODE
                                               AND A.PERSON_NUMB = B.PERSON_NUMB
           LEFT  JOIN HBS910T C  WITH (NOLOCK)  ON C.COMP_CODE   = A.COMP_CODE
                                               AND C.PERSON_NUMB = A.PERSON_NUMB
                                               AND C.CLOSE_DATE  = A.PAY_YYYYMM
                                               AND C.CLOSE_TYPE  = A.SUPP_TYPE
           LEFT  JOIN (SELECT A.COMP_CODE
                            , A.PAY_YYYYMM
                            , A.SUPP_TYPE
                            , A.PERSON_NUMB
                            , SUM(CASE WHEN A.NONTAX_CODE IN ('O01') THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)  -- 연장근로 비과세
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION1_I
                            , SUM(CASE WHEN A.NONTAX_CODE IN ('P01') THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)  -- 식대비과세
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION2_I
                            , SUM(CASE WHEN A.NONTAX_CODE IN ('M01', 'M02', 'M03')  -- 국외근로 비과세
                                            THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION4_I
                            , SUM(CASE WHEN A.NONTAX_CODE IN ('Q01') THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)  -- 자녀양육비비과세
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION5_I
                            , SUM(CASE WHEN A.NONTAX_CODE IN ('H06', 'H07', 'H08', 'H09', 'H10')  -- 연구활동비과세
                                            THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION6_I
                            , SUM(CASE WHEN A.NONTAX_CODE NOT IN ('O01', 'P01', 'M01', 'M02', 'M03', 'Q01', 'H06', 'H07', 'H08', 'H09', 'H10')  -- 기타비과세
                                            THEN ISNULL(A.LIMIT_PAY_SUPP_I, 0)
                                       ELSE 0
                                  END)               AS TAX_EXEMPTION3_I
                         FROM            HPA800T A WITH (NOLOCK)
                        GROUP BY A.COMP_CODE, A.PAY_YYYYMM, A.SUPP_TYPE, A.PERSON_NUMB
                      ) D                       ON D.COMP_CODE   = A.COMP_CODE
                                               AND D.PAY_YYYYMM  = A.PAY_YYYYMM
                                               AND D.SUPP_TYPE   = A.SUPP_TYPE
                                               AND D.PERSON_NUMB = A.PERSON_NUMB
          LEFT JOIN HAT700T E WITH(NOLOCK)  ON E.COMP_CODE   = A.COMP_CODE
                                           AND E.PERSON_NUMB = A.PERSON_NUMB
                                           AND E.DUTY_YYYY   = SUBSTRING(A.PAY_YYYYMM,0,5)
                                           AND E.SUPP_TYPE   = 'F'
     WHERE A.COMP_CODE     = #{S_COMP_CODE}
       AND A.PAY_YYYYMM    = #{PAY_YYYYMM}
       AND A.SUPP_TYPE     = 'F'
      AND A.PERSON_NUMB = #{PERSON_NUMB}
</select>
<select id="hpa610ukrServiceImpl.selectHPA600T1" parameterType="Map" resultType="rMap">
    /* selectHPA600T */
    SELECT
        10000 AS BONUS_TOTAL_I/* 년차총액 */

</select>

<select id="hpa610ukrServiceImpl.closedateconfirm" parameterType="Map" resultType="String">
    SELECT CLOSE_DATE  
      FROM HBS900T  
     WHERE COMP_CODE = #{S_COMP_CODE} 
       AND CLOSE_TYPE = 'F'
</select>

<select id="hpa610ukrServiceImpl.closedateconfirm1" parameterType="Map" resultType="String">
    SELECT A.CLOSE_DATE  
      FROM           HBS910T A WITH (NOLOCK) 
          INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
                                            AND B.PERSON_NUMB = A.PERSON_NUMB 
          INNER JOIN HPA600T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE 
                                            AND C.PERSON_NUMB = A.PERSON_NUMB 
                                            AND C.PAY_YYYYMM  = A.CLOSE_DATE 
     WHERE A.COMP_CODE   = #{S_COMP_CODE} 
       AND A.CLOSE_DATE  = #{PAY_YYYYMM}  
       AND A.CLOSE_TYPE  = 'F'  
       AND B.PERSON_NUMB = #{PERSON_NUMB}
</select>

<update id="hpa610ukrServiceImpl.updateHPA400T" parameterType="Map">    
    UPDATE HPA400T
       SET UPDATE_DB_USER = #{S_USER_ID}
         , UPDATE_DB_TIME = GETDATE()
         , DED_AMOUNT_I = #{DED_AMOUNT_I}
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND PAY_YYYYMM = #{PAY_YYYYMM}
       AND SUPP_TYPE = 'F'
       AND PERSON_NUMB = #{PERSON_NUMB}
       AND DED_CODE = #{DED_CODE}     
</update>

<update id="hpa610ukrServiceImpl.updateHPA600T" parameterType="Map">    
    UPDATE HPA600T
       SET UPDATE_DB_USER = #{S_USER_ID}
         , UPDATE_DB_TIME = GETDATE()
         , DED_TOTAL_I = #{DED_TOTAL_I}
         , REAL_AMOUNT_I = #{REAL_AMOUNT_I}
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND PAY_YYYYMM = #{PAY_YYYYMM}
       AND SUPP_TYPE = 'F'
       AND PERSON_NUMB = #{PERSON_NUMB}  
</update>

<delete id="hpa610ukrServiceImpl.deleteList" parameterType="Map">
        /* hpa610ukrServiceImpl.deleteList */
        DELETE FROM HPA600T 
         WHERE COMP_CODE   = #{S_COMP_CODE} 
           AND PAY_YYYYMM  = #{PAY_YYYYMM} 
           AND SUPP_TYPE   = 'F' 
           AND PERSON_NUMB = #{PERSON_NUMB}
           
        DELETE FROM HPA300T 
         WHERE COMP_CODE   = #{S_COMP_CODE} 
           AND PAY_YYYYMM  = #{PAY_YYYYMM} 
           AND SUPP_TYPE   = 'F' 
           AND PERSON_NUMB = #{PERSON_NUMB}
        
        DELETE FROM HPA400T 
         WHERE COMP_CODE   = #{S_COMP_CODE} 
           AND PAY_YYYYMM  = #{PAY_YYYYMM} 
           AND SUPP_TYPE   = 'F' 
           AND PERSON_NUMB = #{PERSON_NUMB}
        
        DELETE FROM HPA800T 
         WHERE COMP_CODE   = #{S_COMP_CODE} 
           AND PAY_YYYYMM  = #{PAY_YYYYMM} 
           AND SUPP_TYPE   = 'F' 
           AND PERSON_NUMB = #{PERSON_NUMB}
</delete>

</mapper>