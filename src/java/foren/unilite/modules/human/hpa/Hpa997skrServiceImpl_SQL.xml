<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa997skrServiceImpl">
	<select id="hpa997skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		-- 1) 조회
		-- hpa997skr.Chpa997skr[fnHpa997QStd] QUERY01
			BEGIN
			    SET NOCOUNT ON
			    SET ARITHABORT ON
			
			--  [ 변수 선언 ] ---------------------------------------------------------------------------------------------------
			    DECLARE @COMP_CODE          NVARCHAR(10)        --(필수)법인코드
			          , @PAY_YYYYMM         NVARCHAR(06)        --(필수)급여년월
			          , @DIV_CODE           NVARCHAR(10)        --(선택)사업장
			          , @PAY_GUBUN          NVARCHAR(02)        --(선택)고용구분
			          , @FR_DEPT_CODE       NVARCHAR(10)        --(선택)FROM 부서코드
			          , @TO_DEPT_CODE       NVARCHAR(10)        --(선택)TO 부서코드
			          , @EMPLOY_TYPE        NVARCHAR(02)        --(선택)사원구분
			          , @PERSON_NUMB        NVARCHAR(10)        --(선택)사번
			
			--  [ 변수 값 할당 ] -----------------------------------------------------------------------------------------------
			    SET @COMP_CODE      = #{S_COMP_CODE}
			    SET @PAY_YYYYMM     = #{PAY_YYYYMM}
			    SET @DIV_CODE       = #{DIV_CODE}
			    SET @PAY_GUBUN      = #{PAY_GUBUN}
			    SET @FR_DEPT_CODE   = #{DEPT_CODE_FR}
			    SET @TO_DEPT_CODE   = #{DEPT_CODE_TO}
			    SET @EMPLOY_TYPE    = #{EMPLOY_TYPE}
			    SET @PERSON_NUMB    = #{PERSON_NUMB}
			
			--  [ 임시테이블 생성 ] -------------------------------------------------------------------------------------------
			    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#HPA997SKR')) 
			       DROP TABLE #HPA997SKR
		
			
			    SELECT  *
			    INTO    #HPA997SKR
			    FROM    (
			
			        --총지급액
			        SELECT  A.COMP_CODE
			             ,  A.PAY_YYYYMM
			             ,  N''                         AS WAGES_CODE
			             ,  CONVERT(NVARCHAR(100), N'총지급액')                  AS TITLE1
			             ,  CONVERT(NVARCHAR(100), N'급여계')                    AS TITLE2
			             ,  SUM(A.SUPP_TOTAL_I)         AS TOT_AMT
			             ,  SPACE(100)                  AS REMARK
			             ,  N''                         AS NON_GUBUN
			             ,  N'1'                        AS GUBUN
			             ,  N'00' AS TOT_GUBUN
			        FROM    HPA600T AS A WITH (NOLOCK)
			        WHERE   A.COMP_CODE     = @COMP_CODE
			        AND     A.SUPP_TYPE     = '1'
			        AND     A.PAY_YYYYMM    = @PAY_YYYYMM
			        AND   ((A.DIV_CODE      = @DIV_CODE        AND @DIV_CODE       != N'') OR (@DIV_CODE       = N''))
			        AND   ((A.DEPT_CODE    &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE   != N'') OR (@FR_DEPT_CODE   = N''))
			        AND   ((A.SUPP_TYPE    &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE   != N'') OR (@TO_DEPT_CODE   = N''))
			        AND   ((A.PAY_GUBUN     = @PAY_GUBUN       AND @PAY_GUBUN      != N'') OR (@PAY_GUBUN      = N''))
			        AND   ((A.EMPLOY_TYPE   = @EMPLOY_TYPE     AND @EMPLOY_TYPE    != N'') OR (@EMPLOY_TYPE    = N''))
			        AND   ((A.PERSON_NUMB   = @PERSON_NUMB     AND @PERSON_NUMB    != N'') OR (@PERSON_NUMB    = N''))
			
			        GROUP   BY A.COMP_CODE, A.PAY_YYYYMM
			
				UNION
			        --연차수당
			        SELECT  A.COMP_CODE
			             ,  A.PAY_YYYYMM
			             ,  CONVERT(NVARCHAR(100), N'')                             AS WAGES_CODE
			             ,  CONVERT(NVARCHAR(100), N'총지급액')                      AS TITLE1
			             ,  B.CODE_NAME                     AS TITLE2
			             ,  ISNULL(SUM(A.SUPP_TOTAL_I), 0)    AS TOT_AMT
			             ,  N''                             AS REMARK
			             ,  N''                             AS NON_GUBUN
			             ,  N'1'                            AS GUBUN
			             ,  N'01' AS TOT_GUBUN
			        FROM               HPA600T AS A WITH (NOLOCK)
			                LEFT  JOIN BSA100T AS B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
			                                                     AND B.MAIN_CODE = N'H032'
			                                                     AND B.SUB_CODE  = A.SUPP_TYPE
			        WHERE   A.COMP_CODE     = @COMP_CODE
			        AND     A.SUPP_TYPE     = 'F'
			        AND     A.PAY_YYYYMM    = @PAY_YYYYMM
			        AND   ((A.DIV_CODE      = @DIV_CODE        AND @DIV_CODE       != N'') OR (@DIV_CODE       = N''))
			        AND   ((A.DEPT_CODE    &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE   != N'') OR (@FR_DEPT_CODE   = N''))
			        AND   ((A.SUPP_TYPE    &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE   != N'') OR (@TO_DEPT_CODE   = N''))
			        AND   ((A.PAY_GUBUN     = @PAY_GUBUN       AND @PAY_GUBUN      != N'') OR (@PAY_GUBUN      = N''))
			        AND   ((A.EMPLOY_TYPE   = @EMPLOY_TYPE     AND @EMPLOY_TYPE    != N'') OR (@EMPLOY_TYPE    = N''))
			        AND   ((A.PERSON_NUMB   = @PERSON_NUMB     AND @PERSON_NUMB    != N'') OR (@PERSON_NUMB    = N''))
			
			        GROUP   BY A.COMP_CODE, A.PAY_YYYYMM, B.SUB_CODE, A.SUPP_TYPE, B.CODE_NAME
			
				UNION
			        --상여계
			        SELECT  A.COMP_CODE
			             ,  A.PAY_YYYYMM
			             ,  N''                             AS WAGES_CODE
			             ,  CONVERT(NVARCHAR(100),N'총지급액')                      AS TITLE1
			             ,  CONVERT(NVARCHAR(100),N'상여계')                        AS TITLE2
			             ,  ISNULL(SUM(SUPP_TOTAL_I), 0)    AS TOT_AMT
			             ,  N''                             AS REMARK
			             ,  N''                             AS NON_GUBUN
			             ,  N'1'                            AS GUBUN
			             ,  N'02' AS TOT_GUBUN
			        FROM    HPA600T AS A WITH (NOLOCK)
			        WHERE   A.COMP_CODE       = @COMP_CODE
			        AND     A.SUPP_TYPE  NOT IN ('1', 'F')
			        AND     A.PAY_YYYYMM      = @PAY_YYYYMM
			        AND   ((A.DIV_CODE        = @DIV_CODE        AND @DIV_CODE       != N'') OR (@DIV_CODE       = N''))
			        AND   ((A.DEPT_CODE      &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE   != N'') OR (@FR_DEPT_CODE   = N''))
			        AND   ((A.SUPP_TYPE      &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE   != N'') OR (@TO_DEPT_CODE   = N''))
			        AND   ((A.PAY_GUBUN       = @PAY_GUBUN       AND @PAY_GUBUN      != N'') OR (@PAY_GUBUN      = N''))
			        AND   ((A.EMPLOY_TYPE     = @EMPLOY_TYPE     AND @EMPLOY_TYPE    != N'') OR (@EMPLOY_TYPE    = N''))
			        AND   ((A.PERSON_NUMB     = @PERSON_NUMB     AND @PERSON_NUMB    != N'') OR (@PERSON_NUMB    = N''))
			
			        GROUP   BY A.COMP_CODE, A.PAY_YYYYMM
			
				UNION
			        --비과세대상
			        SELECT  A.COMP_CODE
			             ,  B.PAY_YYYYMM
			             ,  A.WAGES_CODE
			             ,  CONVERT(NVARCHAR(100), N'비과세대상')
			             ,  CONVERT(NVARCHAR(100), A.WAGES_NAME)
			             --,  SUM(ISNULL(C.LIMIT_PAY_SUPP_I, 0))
			             ,  SUM(CASE WHEN C.COMP_CODE IS NULL THEN 0
			                         WHEN (B.AMOUNT_I != ISNULL(C.LIMIT_PAY_SUPP_I, 0) AND ISNULL(C.LIMIT_PAY_SUPP_I, 0) > 0) THEN ISNULL(C.LIMIT_PAY_SUPP_I, 0)
			                         WHEN (B.AMOUNT_I  = ISNULL(C.LIMIT_PAY_SUPP_I, 0) AND ISNULL(C.LIMIT_PAY_SUPP_I, 0) > 0) THEN ISNULL(C.LIMIT_PAY_SUPP_I, 0)
			                         ELSE ISNULL(C.LIMIT_PAY_SUPP_I, 0)
			                    END)                    AS AMOUNT_I
			             ,  N''                         AS REMARK
			             ,  D.SEND_YN                   AS NON_GUBUN
			             ,  CASE WHEN D.SEND_YN = N'N' THEN N'3'
			                     WHEN D.SEND_YN = N'Y' THEN N'4'
			                END                         AS GUBUN
			             ,  N'00' AS TOT_GUBUN
			        FROM               HBS300T AS A  WITH (NOLOCK)
			                INNER JOIN HPA300T AS B  WITH (NOLOCK) ON A.COMP_CODE           = B.COMP_CODE
			                                                      AND A.WAGES_CODE          = B.WAGES_CODE
			                LEFT  JOIN HPA800T AS C  WITH (NOLOCK) ON B.COMP_CODE           = C.COMP_CODE
			                                                      AND B.PAY_YYYYMM          = C.PAY_YYYYMM
			                                                      AND B.SUPP_TYPE           = C.SUPP_TYPE
			                                                      AND B.PERSON_NUMB         = C.PERSON_NUMB
			                                                      AND A.NON_TAX_CODE        = C.NONTAX_CODE
			                LEFT  JOIN HBS120T AS D  WITH (NOLOCK) ON C.COMP_CODE           = D.COMP_CODE
			                                                      AND LEFT(C.PAY_YYYYMM, 4) = D.TAX_YYYY
			                                                      AND C.NONTAX_CODE         = D.NONTAX_CODE
			                INNER JOIN HPA600T AS M1 WITH (NOLOCK) ON B.COMP_CODE           = M1.COMP_CODE
			                                                      AND B.PAY_YYYYMM          = M1.PAY_YYYYMM
			                                                      AND B.SUPP_TYPE           = M1.SUPP_TYPE
			                                                      AND B.PERSON_NUMB         = M1.PERSON_NUMB
			                INNER JOIN HUM100T AS U  WITH (NOLOCK) ON U.COMP_CODE           = M1.COMP_CODE
			                                                      AND U.PERSON_NUMB         = M1.PERSON_NUMB
			
			        WHERE   A.COMP_CODE                 = @COMP_CODE
			        AND     ISNULL(A.NON_TAX_CODE, '') != ''
			        AND     B.PAY_YYYYMM                = @PAY_YYYYMM
			        AND   ((M1.DIV_CODE                 = @DIV_CODE        AND @DIV_CODE       != N'') OR (@DIV_CODE       = N''))
			        AND   ((M1.DEPT_CODE               &gt;= @FR_DEPT_CODE    AND @FR_DEPT_CODE   != N'') OR (@FR_DEPT_CODE   = N''))
			        AND   ((M1.SUPP_TYPE               &lt;= @TO_DEPT_CODE    AND @TO_DEPT_CODE   != N'') OR (@TO_DEPT_CODE   = N''))
			        AND   ((M1.PAY_GUBUN                = @PAY_GUBUN       AND @PAY_GUBUN      != N'') OR (@PAY_GUBUN      = N''))
			        AND   ((M1.EMPLOY_TYPE              = @EMPLOY_TYPE     AND @EMPLOY_TYPE    != N'') OR (@EMPLOY_TYPE    = N''))
			        AND   ((M1.PERSON_NUMB              = @PERSON_NUMB     AND @PERSON_NUMB    != N'') OR (@PERSON_NUMB    = N''))
			
			        GROUP   BY A.COMP_CODE, B.PAY_YYYYMM, A.WAGES_CODE, A.WAGES_NAME, A.PRINT_SEQ, D.SEND_YN
			    ) Z
			
			    --
			    --과세대상 소계1-1(구분 1이 존재할 경우)
			    IF EXISTS	(SELECT	TOP 1 1
							   FROM #HPA997SKR
							  WHERE GUBUN = N'1'
							  GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
			    SELECT  @COMP_CODE AS COMP_CODE
			         ,  PAY_YYYYMM
			         ,  CONVERT(NVARCHAR(100), N'총지급액') AS TITLE1
			         ,  CONVERT(NVARCHAR(100), N'1. 소계') AS TITLE2
			         ,  SUM(TOT_AMT) AS TOT_AMT
			         ,  '' AS REMARK
			         ,  'N' NON_GUBUN
			         ,  '1' AS GUBUN
			         ,  '99' AS TOT_GUBUN
			    FROM    #HPA997SKR
			    WHERE   GUBUN = N'1'
			    GROUP   BY GUBUN, PAY_YYYYMM
			
			    --과세대상 소계1-2(구분 1이 존재하지 않을 경우)
			    IF NOT EXISTS	(SELECT	TOP 1 1
								   FROM #HPA997SKR
								  WHERE GUBUN = N'1'
								GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
				values (@COMP_CODE, @PAY_YYYYMM, N'총지급액', N'1. 소계', 0, '', 'N', '1', '99')
			
			    --비과세대상 소계1-1(구분 3이 존재할 경우)
			    IF EXISTS	(SELECT	TOP 1 1
							   FROM #HPA997SKR
							  WHERE GUBUN = N'3'
							  GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
			    SELECT  @COMP_CODE AS COMP_CODE
			         ,  PAY_YYYYMM
			         ,  CONVERT(NVARCHAR(100), N'비과세대상') AS TITLE1
			         ,  CONVERT(NVARCHAR(100), N'2. 소계') AS TITLE2
			         ,  SUM(TOT_AMT) AS TOT_AMT
			         ,  N'' AS REMARK
			         ,  N'N' NON_GUBUN
			         ,  N'3' AS GUBUN
			         ,  N'99' AS TOT_GUBUN
			    FROM    #HPA997SKR
			    WHERE   GUBUN = N'3'
			    GROUP   BY GUBUN, PAY_YYYYMM
			    
			    --비과세대상 소계1-2(구분 3이 존재하지 않을 경우)
			    IF NOT EXISTS	(SELECT	TOP 1 1
								   FROM #HPA997SKR
								  WHERE GUBUN = N'3'
								GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
				values (@COMP_CODE, @PAY_YYYYMM, N'비과세대상', N'2. 소계', 0, '', 'N', '3', '99')
						
			    --비과세대상 소계2-1(구분 4가 존재할 경우)
			    IF EXISTS	(SELECT	TOP 1 1
							   FROM #HPA997SKR
							  WHERE GUBUN = N'4'
							  GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
				SELECT	@COMP_CODE AS COMP_CODE
					,  PAY_YYYYMM
					,  CONVERT(NVARCHAR(100), N'비과세대상') AS TITLE1
					,  CONVERT(NVARCHAR(100), N'3. 소계') AS TITLE2
					,  ISNULL(SUM(TOT_AMT), 0) AS TOT_AMT
					,  N'' AS REMARK
					,  N'Y' NON_GUBUN
					,  N'4' AS GUBUN
					,  N'99' AS TOT_GUBUN
				  FROM	#HPA997SKR
				 WHERE	GUBUN = N'4'
				 GROUP	BY GUBUN, PAY_YYYYMM
			
			    --비과세대상 소계2-2(구분 4가 존재하지 않을 경우)
			    IF NOT EXISTS	(SELECT	TOP 1 1
								   FROM #HPA997SKR
								  WHERE GUBUN = N'4'
								GROUP BY GUBUN, PAY_YYYYMM)
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
				values (@COMP_CODE, @PAY_YYYYMM, N'비과세대상', '3. 소계',  0, '', 'Y', '4', '99')
			
			    --과세대상
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
			    SELECT  @COMP_CODE AS COMP_CODE
			         ,  A.PAY_YYYYMM
			         ,  CONVERT(NVARCHAR(100), N'4. 과세대상(1-2-3)') AS TITLE1
			         ,  CONVERT(NVARCHAR(100), N'4. 과세대상(1-2-3)') AS TITLE2
			         ,  B.TOT_AMT - C.TOT_AMT - D.TOT_AMT
			         ,  N'' AS REMARK
			         ,  N'Y' NON_GUBUN
			         ,  N'5' AS GUBUN
			         ,  N'99' AS TOT_GUBUN
			    FROM               #HPA997SKR AS A
			            LEFT  JOIN #HPA997SKR AS B ON B.COMP_CODE   = A.COMP_CODE
			                                      AND B.PAY_YYYYMM  = A.PAY_YYYYMM
			                                      AND B.GUBUN       = N'1'
			                                      AND B.TOT_GUBUN   = N'99'
			            LEFT  JOIN #HPA997SKR AS C ON C.COMP_CODE   = A.COMP_CODE
			                                      AND C.PAY_YYYYMM  = A.PAY_YYYYMM
			                                      AND C.GUBUN       = N'3'
			                                      AND C.TOT_GUBUN   = N'99'
			            LEFT  JOIN #HPA997SKR AS D ON D.COMP_CODE   = A.COMP_CODE
			                                      AND D.PAY_YYYYMM  = A.PAY_YYYYMM
			                                      AND D.GUBUN       = N'4'
			                                      AND D.TOT_GUBUN   = N'99'
			
			    WHERE   A.COMP_CODE = @COMP_CODE
			    AND     A.PAY_YYYYMM = @PAY_YYYYMM
			    GROUP   BY A.PAY_YYYYMM, B.TOT_AMT, C.TOT_AMT, D.TOT_AMT
			
			    --사업소세율
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
			    SELECT  A.COMP_CODE AS COMP_CODE
			         ,  A.PAY_YYYYMM AS PAY_YYYYMM
			         ,  CONVERT(NVARCHAR(100), N'5. 사업소세율 (%)') AS TITLE1
			         ,  CONVERT(NVARCHAR(100), N'5. 사업소세율 (%)') AS TITLE2
			         ,  CONVERT(NUMERIC(3, 2), B.REF_CODE1)
			         ,  N'' AS REMARK
			         ,  N'Y' NON_GUBUN
			         ,  N'6' AS GUBUN
			         ,  N'98' AS TOT_GUBUN
			    FROM               #HPA997SKR AS A
			            INNER JOIN BSA100T    AS B ON B.COMP_CODE = A.COMP_CODE
			                                      AND B.MAIN_CODE = N'HS16'
			                                      AND B.SUB_CODE != N'$'
			    WHERE   A.COMP_CODE = @COMP_CODE
			    AND     A.PAY_YYYYMM = @PAY_YYYYMM
			    GROUP   BY A.COMP_CODE, A.PAY_YYYYMM, B.REF_CODE1
			
			    --사업소세
			    INSERT  INTO #HPA997SKR (COMP_CODE, PAY_YYYYMM, TITLE1, TITLE2, TOT_AMT, REMARK, NON_GUBUN, GUBUN, TOT_GUBUN)
			    SELECT  @COMP_CODE AS COMP_CODE
			         ,  @PAY_YYYYMM AS PAY_YYYYMM
			         ,  CONVERT(NVARCHAR(100), N'사업소세 ( 4 * 5 )') AS TITLE1
			         ,  CONVERT(NVARCHAR(100), N'사업소세 ( 4 * 5 )') AS TITLE2
			         ,  CASE WHEN A.TOT_AMT > 135000000 THEN FLOOR(ROUND(A.TOT_AMT * (B.TOT_AMT * 0.01), -1, 1)) ELSE 0 END
			         --,  SUM(TOT_AMT) AS TOT_AMT
			         ,  N'총급여 1억3,500만원 이하 면세' AS REMARK
			         ,  N'Y' NON_GUBUN
			         ,  N'7' AS GUBUN
			         ,  N'99' AS TOT_GUBUN
			    FROM               #HPA997SKR AS A
			            INNER JOIN #HPA997SKR AS B ON B.COMP_CODE   = A.COMP_CODE
			                                      AND B.PAY_YYYYMM  = A.PAY_YYYYMM
			                                      AND B.GUBUN       = N'6'
			    WHERE   A.GUBUN = N'5'

		    IF EXISTS (SELECT TOP 1 1 FROM #HPA997SKR WHERE GUBUN = '1' AND TOT_GUBUN = '99' AND  TOT_AMT != 0)
			    SELECT
			            TITLE1
			         ,  TITLE2
			         ,  TOT_AMT
			         ,  REMARK
			         ,  NON_GUBUN
			         ,  GUBUN
			         ,  TOT_GUBUN
			    FROM    #HPA997SKR
   			   WHERE TOT_AMT != 0 OR GUBUN = '7'
			   ORDER   BY GUBUN, NON_GUBUN, TOT_GUBUN
			
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>