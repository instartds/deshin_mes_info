<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa950ukrServiceImpl">

	<select id="hpa950ukrServiceImpl.getCostPoolName" parameterType="Map" resultType="rMap">
		--hpa950ukrServiceImpl.getCostPoolName[QUERY 01]	
		SELECT ISNULL(REF_CODE2, '') AS REF_CODE2
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND MAIN_CODE	= N'H175'
		   AND SUB_CODE		= N'10'
		   AND REF_CODE1	= N'Y'
	</select>
	
	<select id="hpa950ukrServiceImpl.selectColumns1" parameterType="loginVO" resultType="rMap">
		--hpa950ukrServiceImpl.selectColumns1 - [수당]
		SELECT WAGES_NAME
		     , 'WAGES_PAY' + WAGES_CODE AS WAGES_CODES
		     , WAGES_CODE
		     , SORT_SEQ
		     , 'WAGES_PAY' AS CODE_GUBUN  	-- 화면에서 값 수정시 지급금액, 공제금액을 sum 하기 위한 필드구분
		  FROM HBS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND USE_YN = 'Y'
		    
		 ORDER BY WAGES_CODE
	</select>

	<select id="hpa950ukrServiceImpl.selectColumns2" parameterType="loginVO" resultType="rMap">		
		--hpa950ukrServiceImpl.selectColumns2 - [공제]	
		SELECT CODE_NAME AS WAGES_NAME 
		     , 'WAGES_DED' + SUB_CODE AS WAGES_CODES    
		     , SUB_CODE  AS WAGES_CODE
		     , SORT_SEQ
		     , 'WAGES_DED' AS CODE_GUBUN  	-- 화면에서 값 수정시 지급금액, 공제금액을 sum 하기 위한 필드구분
		  FROM BSA100T    
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H034'    
		   AND USE_YN    = 'Y'    
		   AND SUB_CODE != '$'     
		 
		 ORDER BY WAGES_CODE
	</select>
	
    <!-- 임시 테이블에 insert된 데이터 조회(수당) --> 
    <select id="hpa950ukrServiceImpl.getData1" parameterType="Map" resultType="rMap">
    	--hpa950ukrServiceImpl.getData1 - [수당]
        SELECT  * FROM L_HPA300T WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
    
        <!-- 임시 테이블에 insert된 데이터 조회(공제) --> 
    <select id="hpa950ukrServiceImpl.getData2" parameterType="Map" resultType="rMap">
    	--hpa950ukrServiceImpl.getData2 - [공제]
        SELECT  * FROM L_HPA400T WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
    
    
    <!-- Excel Upload-->
    <update id="hpa950ukrServiceImpl.insertExcelUpload1" parameterType="Map">
        /* hpa950ukrServiceImpl.insertExcelUpload1-(수당)*/
        /* temp Table에 insert */    
        INSERT INTO L_HPA300T
            (
               _EXCEL_JOBID 
             , _EXCEL_ROWNUM 
             , _EXCEL_HAS_ERROR 
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE
             , PAY_YYYYMM
             , SUPP_TYPE
             , PERSON_NUMB
           
             , AMOUNT_1
             , AMOUNT_2
             , AMOUNT_3
             , AMOUNT_4
             , AMOUNT_5
             , AMOUNT_6
             , AMOUNT_7
             , AMOUNT_8
             , AMOUNT_9
             , AMOUNT_10
             , AMOUNT_11
             , AMOUNT_12
             , AMOUNT_13
             , AMOUNT_14
             , AMOUNT_15
             , AMOUNT_16
             , AMOUNT_17
             , AMOUNT_18
             , AMOUNT_19
             , AMOUNT_20
             , AMOUNT_21
             , AMOUNT_22
             , AMOUNT_23
             , AMOUNT_24
             , AMOUNT_25
             , AMOUNT_26
             , AMOUNT_27
             , AMOUNT_28
             , AMOUNT_29
             , AMOUNT_30
             , AMOUNT_31
             , AMOUNT_32
             , AMOUNT_33
             , AMOUNT_34
             , AMOUNT_35
             , AMOUNT_36
             , AMOUNT_37
             , AMOUNT_38
             , AMOUNT_39
             , AMOUNT_40
             , AMOUNT_41
             , AMOUNT_42
             , AMOUNT_43
             , AMOUNT_44
             , AMOUNT_45
             , AMOUNT_46
             , AMOUNT_47
             , AMOUNT_48
             , AMOUNT_49
             , AMOUNT_50
             
             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID} 
             , #{_EXCEL_ROWNUM} 
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}
                  
             , #{S_COMP_CODE}
             , #{PAY_YYYYMM}
             , #{SUPP_TYPE}
             , #{PERSON_NUMB}
            
             , #{AMOUNT_1}
             , #{AMOUNT_2}
             , #{AMOUNT_3}
             , #{AMOUNT_4}
             , #{AMOUNT_5}
             , #{AMOUNT_6}
             , #{AMOUNT_7}
             , #{AMOUNT_8}
             , #{AMOUNT_9}
             , #{AMOUNT_10}
             , #{AMOUNT_11}
             , #{AMOUNT_12}
             , #{AMOUNT_13}
             , #{AMOUNT_14}
             , #{AMOUNT_15}
             , #{AMOUNT_16}
             , #{AMOUNT_17}
             , #{AMOUNT_18}
             , #{AMOUNT_19}
             , #{AMOUNT_20}
             , #{AMOUNT_21}
             , #{AMOUNT_22}
             , #{AMOUNT_23}
             , #{AMOUNT_24}
             , #{AMOUNT_25}
             , #{AMOUNT_26}
             , #{AMOUNT_27}
             , #{AMOUNT_28}
             , #{AMOUNT_29}
             , #{AMOUNT_30}
             , #{AMOUNT_31}
             , #{AMOUNT_32}
             , #{AMOUNT_33}
             , #{AMOUNT_34}
             , #{AMOUNT_35}
             , #{AMOUNT_36}
             , #{AMOUNT_37}
             , #{AMOUNT_38}
             , #{AMOUNT_39}
             , #{AMOUNT_40}
             , #{AMOUNT_41}
             , #{AMOUNT_42}
             , #{AMOUNT_43}
             , #{AMOUNT_44}
             , #{AMOUNT_45}
             , #{AMOUNT_46}
             , #{AMOUNT_47}
             , #{AMOUNT_48}
             , #{AMOUNT_49}
             , #{AMOUNT_50}
             
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    
    <!-- Excel Upload-->
    <update id="hpa950ukrServiceImpl.insertExcelUpload2" parameterType="Map">
        /* hpa950ukrServiceImpl.insertExcelUpload2-(공제)*/
        /* temp Table에 insert */    
        INSERT INTO L_HPA400T
            (
               _EXCEL_JOBID 
             , _EXCEL_ROWNUM 
             , _EXCEL_HAS_ERROR 
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE
             , PAY_YYYYMM
             , SUPP_TYPE
             , PERSON_NUMB
           
             , AMOUNT_1
             , AMOUNT_2
             , AMOUNT_3
             , AMOUNT_4
             , AMOUNT_5
             , AMOUNT_6
             , AMOUNT_7
             , AMOUNT_8
             , AMOUNT_9
             , AMOUNT_10
             , AMOUNT_11
             , AMOUNT_12
             , AMOUNT_13
             , AMOUNT_14
             , AMOUNT_15
             , AMOUNT_16
             , AMOUNT_17
             , AMOUNT_18
             , AMOUNT_19
             , AMOUNT_20
             , AMOUNT_21
             , AMOUNT_22
             , AMOUNT_23
             , AMOUNT_24
             , AMOUNT_25
             , AMOUNT_26
             , AMOUNT_27
             , AMOUNT_28
             , AMOUNT_29
             , AMOUNT_30
             , AMOUNT_31
             , AMOUNT_32
             , AMOUNT_33
             , AMOUNT_34
             , AMOUNT_35
             , AMOUNT_36
             , AMOUNT_37
             , AMOUNT_38
             , AMOUNT_39
             , AMOUNT_40
             , AMOUNT_41
             , AMOUNT_42
             , AMOUNT_43
             , AMOUNT_44
             , AMOUNT_45
             , AMOUNT_46
             , AMOUNT_47
             , AMOUNT_48
             , AMOUNT_49
             , AMOUNT_50
             
             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID} 
             , #{_EXCEL_ROWNUM} 
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}
                  
             , #{S_COMP_CODE}
             , #{PAY_YYYYMM}
             , #{SUPP_TYPE}
             , #{PERSON_NUMB}
            
             , #{AMOUNT_1}
             , #{AMOUNT_2}
             , #{AMOUNT_3}
             , #{AMOUNT_4}
             , #{AMOUNT_5}
             , #{AMOUNT_6}
             , #{AMOUNT_7}
             , #{AMOUNT_8}
             , #{AMOUNT_9}
             , #{AMOUNT_10}
             , #{AMOUNT_11}
             , #{AMOUNT_12}
             , #{AMOUNT_13}
             , #{AMOUNT_14}
             , #{AMOUNT_15}
             , #{AMOUNT_16}
             , #{AMOUNT_17}
             , #{AMOUNT_18}
             , #{AMOUNT_19}
             , #{AMOUNT_20}
             , #{AMOUNT_21}
             , #{AMOUNT_22}
             , #{AMOUNT_23}
             , #{AMOUNT_24}
             , #{AMOUNT_25}
             , #{AMOUNT_26}
             , #{AMOUNT_27}
             , #{AMOUNT_28}
             , #{AMOUNT_29}
             , #{AMOUNT_30}
             , #{AMOUNT_31}
             , #{AMOUNT_32}
             , #{AMOUNT_33}
             , #{AMOUNT_34}
             , #{AMOUNT_35}
             , #{AMOUNT_36}
             , #{AMOUNT_37}
             , #{AMOUNT_38}
             , #{AMOUNT_39}
             , #{AMOUNT_40}
             , #{AMOUNT_41}
             , #{AMOUNT_42}
             , #{AMOUNT_43}
             , #{AMOUNT_44}
             , #{AMOUNT_45}
             , #{AMOUNT_46}
             , #{AMOUNT_47}
             , #{AMOUNT_48}
             , #{AMOUNT_49}
             , #{AMOUNT_50}
             
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    
    
 	<select id="hpa950ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /* hpa950ukrServiceImpl.selectExcelUploadSheet1 */
		SELECT A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     --, A._EXCEL_HAS_ERROR      
		     --, A._EXCEL_ERROR_MSG

 			 , CASE WHEN ISNULL(C.PAY_YYYYMM, '') = ''
			        THEN 'Y'
					ELSE A._EXCEL_HAS_ERROR
				END AS _EXCEL_HAS_ERROR

			 , CASE WHEN ISNULL(C.PAY_YYYYMM, '') = ''
			        THEN '해당 사원의 월급상여내역이 등록되지 않았습니다.'
					ELSE A._EXCEL_ERROR_MSG
				END AS _EXCEL_ERROR_MSG		     

		     , A.COMP_CODE
		     , B.DIV_CODE                --사업장
		     , B.DEPT_CODE               --부서코드
		     , B.DEPT_NAME               --부서명
			 , B.POST_CODE               --직위
		     , B.NAME                    --사명
		     , A.PERSON_NUMB             --사번
		     , B.JOIN_DATE               --입사일
		     , A.PAY_YYYYMM              --지급년월
		     , A.SUPP_TYPE               --지급구분
		     , C.SUPP_DATE
		     			
	<foreach collection="getColumn1" item="item" index="index" >	     		 		     			 
			 , A.AMOUNT_${index+1} AS ${item.WAGES_CODES}
	</foreach>
		        
		  FROM       L_HPA300T A WITH(NOLOCK)          
		  LEFT JOIN  HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                   AND B.PERSON_NUMB = A.PERSON_NUMB
		                                   		                                   
          LEFT JOIN  HPA600T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                   AND C.PAY_YYYYMM  = A.PAY_YYYYMM
		                                   AND C.PERSON_NUMB = A.PERSON_NUMB
		                                   AND C.SUPP_TYPE   = A.SUPP_TYPE
		                                   
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    
 	<select id="hpa950ukrServiceImpl.selectExcelUploadSheet2" parameterType="Map" resultType="rMap">
        /* hpa950ukrServiceImpl.selectExcelUploadSheet2 */
		SELECT A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     --, A._EXCEL_HAS_ERROR      
		     --, A._EXCEL_ERROR_MSG
		     
 			 , CASE WHEN ISNULL(C.PAY_YYYYMM, '') = ''
			        THEN 'Y'
					ELSE A._EXCEL_HAS_ERROR
				END AS _EXCEL_HAS_ERROR

			 , CASE WHEN ISNULL(C.PAY_YYYYMM, '') = ''
			        THEN '해당 사원의 월급상여내역이 등록되지 않았습니다.'
					ELSE A._EXCEL_ERROR_MSG
				END AS _EXCEL_ERROR_MSG		  
		     		                     
		     , A.COMP_CODE
		     , B.DIV_CODE                --사업장
		     , B.DEPT_CODE               --부서코드
		     , B.DEPT_NAME               --부서명
			 , B.POST_CODE               --직위
		     , B.NAME                    --사명
		     , A.PERSON_NUMB             --사번
		     , B.JOIN_DATE               --입사일
		     , A.PAY_YYYYMM              --지급년월
		     , A.SUPP_TYPE               --지급구분
		     , C.SUPP_DATE
		     			
	<foreach collection="getColumn2" item="item" index="index" >	     		 		     			 
			 , A.AMOUNT_${index+1} AS ${item.WAGES_CODES}
	</foreach>
		        
		  FROM       L_HPA400T A WITH(NOLOCK)          
		  LEFT JOIN  HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                   AND B.PERSON_NUMB = A.PERSON_NUMB
		                                   
          LEFT JOIN  HPA600T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                   AND C.PAY_YYYYMM  = A.PAY_YYYYMM
		                                   AND C.PERSON_NUMB = A.PERSON_NUMB
		                                   AND C.SUPP_TYPE   = A.SUPP_TYPE
		
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    
    
    <insert id="hpa950ukrServiceImpl.insertList1"  parameterType="Map">
			--hpa950ukrServiceImpl.insertList1-(수당)
			IF  NOT EXISTS (SELECT TOP 1 1
                  FROM HPA300T
                 WHERE COMP_CODE    = #{S_COMP_CODE}
                   AND PAY_YYYYMM   = #{PAY_YYYYMM}
                   AND SUPP_TYPE    = #{SUPP_TYPE}
                   AND PERSON_NUMB  = #{PERSON_NUMB}
                   AND WAGES_CODE   = #{WAGES_CODE})

				BEGIN
					INSERT INTO HPA300T
					     ( COMP_CODE
					     , PAY_YYYYMM
					     , SUPP_TYPE
					     , PERSON_NUMB
					     , WAGES_CODE
					     , AMOUNT_I
					     
					     , TEMPC_01
					    
					     , UPDATE_DB_USER
					     , UPDATE_DB_TIME
					     , INSERT_DB_USER
					     , INSERT_DB_TIME
					     ) 
					VALUES
					     ( #{S_COMP_CODE}
					     , #{PAY_YYYYMM}
					     , #{SUPP_TYPE}
					     , #{PERSON_NUMB}
					     , #{WAGES_CODE}
					     , #{AMOUNT_I}
					     
					     , 'EXCEL_DATA'
					   
					     , #{S_USER_ID}
					     , GETDATE()
					     , #{S_USER_ID}
					     , GETDATE()
					     )
				END
			ELSE
				BEGIN
					UPDATE HPA300T
				   	   SET AMOUNT_I       = #{AMOUNT_I}
				   	     , TEMPC_01       = 'EXCEL_DATA'
				   	     , UPDATE_DB_USER = #{S_USER_ID}
					     , UPDATE_DB_TIME = GETDATE()
				 	 WHERE COMP_CODE   = #{S_COMP_CODE}
				   	   AND PAY_YYYYMM  = #{PAY_YYYYMM}
				   	   AND SUPP_TYPE   = #{SUPP_TYPE}
				   	   AND PERSON_NUMB = #{PERSON_NUMB}
				   	   AND WAGES_CODE  = #{WAGES_CODE}
				END
	 </insert>
	 
    <insert id="hpa950ukrServiceImpl.insertList2"  parameterType="Map">
			--hpa950ukrServiceImpl.insertList2-(공제)
			IF  NOT EXISTS (SELECT TOP 1 1
                  FROM HPA400T
                 WHERE COMP_CODE    = #{S_COMP_CODE}
                   AND PAY_YYYYMM   = #{PAY_YYYYMM}
                   AND SUPP_TYPE    = #{SUPP_TYPE}
                   AND PERSON_NUMB  = #{PERSON_NUMB}
                   AND DED_CODE     = #{WAGES_CODE})
            
            	BEGIN
					INSERT INTO HPA400T
					     ( COMP_CODE
					     , PAY_YYYYMM
					     , SUPP_TYPE
					     , PERSON_NUMB
					     , DED_CODE
					     , DED_AMOUNT_I
					     
					     , TEMPC_01
					    
					     , UPDATE_DB_USER
					     , UPDATE_DB_TIME
					     , INSERT_DB_USER
					     , INSERT_DB_TIME
					     ) 
					VALUES
					     ( #{S_COMP_CODE}
					     , #{PAY_YYYYMM}
					     , #{SUPP_TYPE}
					     , #{PERSON_NUMB}
					     , #{WAGES_CODE}
					     , #{AMOUNT_I}
					     
					     , 'EXCEL_DATA'
					   
					     , #{S_USER_ID}
					     , GETDATE()
					     , #{S_USER_ID}
					     , GETDATE()
					     )
            	END
            ELSE
            	BEGIN
					UPDATE HPA400T
				   	   SET DED_AMOUNT_I   = #{AMOUNT_I}
				   	     , TEMPC_01       = 'EXCEL_DATA'
				   	     , UPDATE_DB_USER = #{S_USER_ID}
					     , UPDATE_DB_TIME = GETDATE()
				 	 WHERE COMP_CODE    = #{S_COMP_CODE}
				   	   AND PAY_YYYYMM   = #{PAY_YYYYMM}
				   	   AND SUPP_TYPE    = #{SUPP_TYPE}
				   	   AND PERSON_NUMB  = #{PERSON_NUMB}
				   	   AND DED_CODE     = #{WAGES_CODE}
            	END


	 </insert>
    
	
	<select id="hpa950ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">	
	--hpa950ukrServiceImpl.selectList1[수당]
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
    
	    IF EXISTS(	SELECT TOP 1 1                 
					FROM INFORMATION_SCHEMA.TABLES 
					WHERE TABLE_NAME = 'HPA300PH_MASTER')
		DROP TABLE HPA300PH_MASTER
	
		SELECT IDENTITY(INT,1,1) AS W_SEQ 
		 	 , WAGES_CODE                 
			 , WAGES_NAME                 
			 , WAGES_SEQ              
		INTO HPA300PH_MASTER
		FROM HBS300T                    
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND CODE_TYPE   = '1'            
		AND USE_YN      = 'Y'               
		ORDER BY WAGES_SEQ, WAGES_CODE
	
	 SELECT A.COMP_CODE
	      , A.DIV_CODE
	      , LEFT(B.PAY_YYYYMM, 4) + '.' + SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_YYYYMM
		  , A.DEPT_CODE
		  , A.DEPT_NAME
		  , A.POST_CODE
		  , A.NAME
		  , A.PERSON_NUMB
		  , A.JOIN_DATE
		  , C.SUPP_DATE
		  , B.SUPP_TYPE
		  
	<foreach collection="getColumn1" item="item" index="index" >	     		 		     			 
		  , B.S${index+1} AS ${item.WAGES_CODES}
	</foreach>
	   FROM      HUM100T A WITH(NOLOCK)
	  INNER JOIN (SELECT T1.PERSON_NUMB
					   , T1.PAY_YYYYMM
					   , T1.SUPP_TYPE
					   --, T1.WAGES_CODE
					   , CASE WHEN ISNULL(T4.C1, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C1 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S1'
					   , CASE WHEN ISNULL(T4.C2, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C2 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S2'
					   , CASE WHEN ISNULL(T4.C3, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C3 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S3'
					   , CASE WHEN ISNULL(T4.C4, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C4 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S4'
					   , CASE WHEN ISNULL(T4.C5, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C5 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S5'
					   , CASE WHEN ISNULL(T4.C6, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C6 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S6'
					   , CASE WHEN ISNULL(T4.C7, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C7 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S7'
					   , CASE WHEN ISNULL(T4.C8, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C8 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S8'
					   , CASE WHEN ISNULL(T4.C9, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C9 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S9'
					   , CASE WHEN ISNULL(T4.C10, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C10 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S10'
					   , CASE WHEN ISNULL(T4.C11, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C11 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S11' 
					   , CASE WHEN ISNULL(T4.C12, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C12 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S12' 
					   , CASE WHEN ISNULL(T4.C13, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C13 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S13' 
					   , CASE WHEN ISNULL(T4.C14, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C14 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S14' 
					   , CASE WHEN ISNULL(T4.C15, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C15 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S15' 
					   , CASE WHEN ISNULL(T4.C16, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C16 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S16'   
					   , CASE WHEN ISNULL(T4.C17, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C17 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S17'   
					   , CASE WHEN ISNULL(T4.C18, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C18 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S18'   
					   , CASE WHEN ISNULL(T4.C19, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C19 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S19'    
					   , CASE WHEN ISNULL(T4.C20, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C20 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S20'      
					   , CASE WHEN ISNULL(T4.C21, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C21 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S21'   
					   , CASE WHEN ISNULL(T4.C22, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C22 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S22'   
					   , CASE WHEN ISNULL(T4.C23, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C23 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S23'    
					   , CASE WHEN ISNULL(T4.C24, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C24 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S24'   
					   , CASE WHEN ISNULL(T4.C25, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C25 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S25'   
					   , CASE WHEN ISNULL(T4.C26, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C26 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S26'   
					   , CASE WHEN ISNULL(T4.C27, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C27 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S27'    
					   , CASE WHEN ISNULL(T4.C28, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C28 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S28'   
					   , CASE WHEN ISNULL(T4.C29, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C29 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S29'   
					   , CASE WHEN ISNULL(T4.C30, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C30 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S30'   
					   , CASE WHEN ISNULL(T4.C31, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C31 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S31'   
					   , CASE WHEN ISNULL(T4.C32, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C32 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S32'   
					   , CASE WHEN ISNULL(T4.C33, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C33 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S33'     
					   , CASE WHEN ISNULL(T4.C34, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C34 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S34'      
					   , CASE WHEN ISNULL(T4.C35, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C35 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S35'     
					   , CASE WHEN ISNULL(T4.C36, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C36 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S36'   
					   , CASE WHEN ISNULL(T4.C37, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C37 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S37'    
					   , CASE WHEN ISNULL(T4.C38, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C38 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S38'   
					   , CASE WHEN ISNULL(T4.C39, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C39 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S39'    
					   , CASE WHEN ISNULL(T4.C40, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C40 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S40'   
					   , CASE WHEN ISNULL(T4.C41, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C41 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S41'     
					   , CASE WHEN ISNULL(T4.C42, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C42 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S42'    
					   , CASE WHEN ISNULL(T4.C43, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C43 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S43'    
					   , CASE WHEN ISNULL(T4.C44, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C44 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S44'      
					   , CASE WHEN ISNULL(T4.C45, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C45 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S45'     
					   , CASE WHEN ISNULL(T4.C46, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C46 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S46'   
					   , CASE WHEN ISNULL(T4.C47, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C47 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S47'    
					   , CASE WHEN ISNULL(T4.C48, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C48 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S48'   
					   , CASE WHEN ISNULL(T4.C49, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C49 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S49'   

					   , CASE WHEN ISNULL(T4.C50, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.WAGES_CODE = T4.C50 THEN T1.AMOUNT_I ELSE 0 END) 
					   	  END 'S50'
					   
					   , T1.COMP_CODE
					FROM HPA300T T1 WITH (NOLOCK)

				  , (SELECT MAX(CASE WHEN W_SEQ = 1  THEN WAGES_CODE ELSE '' END) AS 'C1'
				          , MAX(CASE WHEN W_SEQ = 2  THEN WAGES_CODE ELSE '' END) AS 'C2'
				          , MAX(CASE WHEN W_SEQ = 3  THEN WAGES_CODE ELSE '' END) AS 'C3'
				          , MAX(CASE WHEN W_SEQ = 4  THEN WAGES_CODE ELSE '' END) AS 'C4'
				          , MAX(CASE WHEN W_SEQ = 5  THEN WAGES_CODE ELSE '' END) AS 'C5'
				          , MAX(CASE WHEN W_SEQ = 6  THEN WAGES_CODE ELSE '' END) AS 'C6'
				          , MAX(CASE WHEN W_SEQ = 7  THEN WAGES_CODE ELSE '' END) AS 'C7'
				          , MAX(CASE WHEN W_SEQ = 8  THEN WAGES_CODE ELSE '' END) AS 'C8'
				          , MAX(CASE WHEN W_SEQ = 9  THEN WAGES_CODE ELSE '' END) AS 'C9'
				          , MAX(CASE WHEN W_SEQ = 10 THEN WAGES_CODE ELSE '' END) AS 'C10'
				          , MAX(CASE WHEN W_SEQ = 11 THEN WAGES_CODE ELSE '' END) AS 'C11'
				          , MAX(CASE WHEN W_SEQ = 12 THEN WAGES_CODE ELSE '' END) AS 'C12'
				          , MAX(CASE WHEN W_SEQ = 13 THEN WAGES_CODE ELSE '' END) AS 'C13'
				          , MAX(CASE WHEN W_SEQ = 14 THEN WAGES_CODE ELSE '' END) AS 'C14'
				          , MAX(CASE WHEN W_SEQ = 15 THEN WAGES_CODE ELSE '' END) AS 'C15'
				          , MAX(CASE WHEN W_SEQ = 16 THEN WAGES_CODE ELSE '' END) AS 'C16'
				          , MAX(CASE WHEN W_SEQ = 17 THEN WAGES_CODE ELSE '' END) AS 'C17'
				          , MAX(CASE WHEN W_SEQ = 18 THEN WAGES_CODE ELSE '' END) AS 'C18'
				          , MAX(CASE WHEN W_SEQ = 19 THEN WAGES_CODE ELSE '' END) AS 'C19'
				          , MAX(CASE WHEN W_SEQ = 20 THEN WAGES_CODE ELSE '' END) AS 'C20'
				          , MAX(CASE WHEN W_SEQ = 21 THEN WAGES_CODE ELSE '' END) AS 'C21'
				          , MAX(CASE WHEN W_SEQ = 22 THEN WAGES_CODE ELSE '' END) AS 'C22'
				          , MAX(CASE WHEN W_SEQ = 23 THEN WAGES_CODE ELSE '' END) AS 'C23'
				          , MAX(CASE WHEN W_SEQ = 24 THEN WAGES_CODE ELSE '' END) AS 'C24'
				          , MAX(CASE WHEN W_SEQ = 25 THEN WAGES_CODE ELSE '' END) AS 'C25'
				          , MAX(CASE WHEN W_SEQ = 26 THEN WAGES_CODE ELSE '' END) AS 'C26'
				          , MAX(CASE WHEN W_SEQ = 27 THEN WAGES_CODE ELSE '' END) AS 'C27'
				          , MAX(CASE WHEN W_SEQ = 28 THEN WAGES_CODE ELSE '' END) AS 'C28'
				          , MAX(CASE WHEN W_SEQ = 29 THEN WAGES_CODE ELSE '' END) AS 'C29'
				          , MAX(CASE WHEN W_SEQ = 30 THEN WAGES_CODE ELSE '' END) AS 'C30'
				          , MAX(CASE WHEN W_SEQ = 31 THEN WAGES_CODE ELSE '' END) AS 'C31'
				          , MAX(CASE WHEN W_SEQ = 32 THEN WAGES_CODE ELSE '' END) AS 'C32'
				          , MAX(CASE WHEN W_SEQ = 33 THEN WAGES_CODE ELSE '' END) AS 'C33'
				          , MAX(CASE WHEN W_SEQ = 34 THEN WAGES_CODE ELSE '' END) AS 'C34'
				          , MAX(CASE WHEN W_SEQ = 35 THEN WAGES_CODE ELSE '' END) AS 'C35'
				          , MAX(CASE WHEN W_SEQ = 36 THEN WAGES_CODE ELSE '' END) AS 'C36'
				          , MAX(CASE WHEN W_SEQ = 37 THEN WAGES_CODE ELSE '' END) AS 'C37'
				          , MAX(CASE WHEN W_SEQ = 38 THEN WAGES_CODE ELSE '' END) AS 'C38'
				          , MAX(CASE WHEN W_SEQ = 39 THEN WAGES_CODE ELSE '' END) AS 'C39'
				          , MAX(CASE WHEN W_SEQ = 40 THEN WAGES_CODE ELSE '' END) AS 'C40'
				  		  , MAX(CASE WHEN W_SEQ = 41 THEN WAGES_CODE ELSE '' END) AS 'C41'
				  		  , MAX(CASE WHEN W_SEQ = 42 THEN WAGES_CODE ELSE '' END) AS 'C42'
				  		  , MAX(CASE WHEN W_SEQ = 43 THEN WAGES_CODE ELSE '' END) AS 'C43'
				  		  , MAX(CASE WHEN W_SEQ = 44 THEN WAGES_CODE ELSE '' END) AS 'C44'
				  		  , MAX(CASE WHEN W_SEQ = 45 THEN WAGES_CODE ELSE '' END) AS 'C45'
				  		  , MAX(CASE WHEN W_SEQ = 46 THEN WAGES_CODE ELSE '' END) AS 'C46'
				  		  , MAX(CASE WHEN W_SEQ = 47 THEN WAGES_CODE ELSE '' END) AS 'C47'
				  		  , MAX(CASE WHEN W_SEQ = 48 THEN WAGES_CODE ELSE '' END) AS 'C48'
				  		  , MAX(CASE WHEN W_SEQ = 49 THEN WAGES_CODE ELSE '' END) AS 'C49'
				  		  , MAX(CASE WHEN W_SEQ = 50 THEN WAGES_CODE ELSE '' END) AS 'C50'
				       FROM HPA300PH_MASTER ) T4
				  WHERE T1.SUPP_TYPE   = #{SUPP_TYPE}
				    AND T1.PAY_YYYYMM  = #{PAY_YYYYMM}
				    AND T1.COMP_CODE   = #{S_COMP_CODE}
				    AND T1.TEMPC_01    = 'EXCEL_DATA'
				  GROUP BY T1.PERSON_NUMB,T1.PAY_YYYYMM, T1.SUPP_TYPE, T1.COMP_CODE
				         , T4.C1,  T4.C2,  T4.C3,  T4.C4,  T4.C5						 
						 , T4.C6,  T4.C7,  T4.C8,  T4.C9,  T4.C10						 
						 , T4.C11, T4.C12, T4.C13, T4.C14, T4.C15						 
						 , T4.C16, T4.C17, T4.C18, T4.C19, T4.C20
						 , T4.C21, T4.C22, T4.C23, T4.C24, T4.C25						 
						 , T4.C26, T4.C27, T4.C28, T4.C29, T4.C30						 
						 , T4.C31, T4.C32, T4.C33, T4.C34, T4.C35						 
						 , T4.C36, T4.C37, T4.C38, T4.C39, T4.C40
						 , T4.C41, T4.C42, T4.C43, T4.C44, T4.C45						 
						 , T4.C46, T4.C47, T4.C48, T4.C49, T4.C50) B ON B.COMP_CODE   = A.COMP_CODE
						 									        AND B.PERSON_NUMB = A.PERSON_NUMB
						 									        
       LEFT JOIN  HPA600T C WITH(NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                AND C.PERSON_NUMB = B.PERSON_NUMB
										AND C.SUPP_TYPE   = B.SUPP_TYPE
										AND C.PAY_YYYYMM  = B.PAY_YYYYMM
						 									        
						 									        
	  WHERE A.COMP_CODE   = #{S_COMP_CODE}
	  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND A.DIV_CODE    = #{DIV_CODE}
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
	    AND A.PAY_GUBUN   = #{PAY_GUBUN}	--고용형태
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
	    AND A.EMPLOY_TYPE = #{EMPLOY_TYPE}	--사원구분
	  </if>
	    
	  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	  	AND  A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(NAME)">
		AND  A.NAME LIKE #{NAME} + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	   AND  A.DEPT_CODE IN
		 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	    	 ${item}
	     </foreach>
	  </if>			 									        
    
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
	
	
	<select id="hpa950ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">	
	--hpa950ukrServiceImpl.selectList2[공제]
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON
    
       IF EXISTS(	SELECT TOP 1 1                 
				FROM INFORMATION_SCHEMA.TABLES 
				WHERE TABLE_NAME = 'HPA400PH_MASTER')
	   DROP TABLE HPA400PH_MASTER


	   SELECT IDENTITY(INT,1,1) AS W_SEQ 
		     , SUB_CODE   AS WAGES_CODE    
		     , CODE_NAME  AS WAGES_NAME
		     , SORT_SEQ
		 INTO HPA400PH_MASTER
		 FROM BSA100T 
	      
	    WHERE COMP_CODE = #{S_COMP_CODE}
		  AND MAIN_CODE = 'H034'    
		  AND USE_YN    = 'Y'    
		  AND SUB_CODE != '$'     
		 
		ORDER BY SORT_SEQ 
		

	 SELECT A.COMP_CODE
	      , A.DIV_CODE
	      , LEFT(B.PAY_YYYYMM, 4) + '.' + SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_YYYYMM
		  , A.DEPT_CODE
		  , A.DEPT_NAME
		  , A.POST_CODE
		  , A.NAME
		  , A.PERSON_NUMB
	      , A.JOIN_DATE
		  , C.SUPP_DATE
		  , B.SUPP_TYPE
	<foreach collection="getColumn2" item="item" index="index" >	     		 		     			 
		  , B.S${index+1} AS ${item.WAGES_CODES}
	</foreach>
	   FROM      HUM100T A WITH(NOLOCK)
	  INNER JOIN (SELECT T1.PERSON_NUMB
					   , T1.PAY_YYYYMM
					   , T1.SUPP_TYPE
					   --, T1.WAGES_CODE
					   , CASE WHEN ISNULL(T4.C1, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C1 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S1'
					   , CASE WHEN ISNULL(T4.C2, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C2 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S2'
					   , CASE WHEN ISNULL(T4.C3, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C3 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S3'
					   , CASE WHEN ISNULL(T4.C4, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C4 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S4'
					   , CASE WHEN ISNULL(T4.C5, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C5 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S5'
					   , CASE WHEN ISNULL(T4.C6, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C6 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S6'
					   , CASE WHEN ISNULL(T4.C7, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C7 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S7'
					   , CASE WHEN ISNULL(T4.C8, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C8 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S8'
					   , CASE WHEN ISNULL(T4.C9, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C9 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S9'
					   , CASE WHEN ISNULL(T4.C10, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C10 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S10'
					   , CASE WHEN ISNULL(T4.C11, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C11 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S11' 
					   , CASE WHEN ISNULL(T4.C12, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C12 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S12' 
					   , CASE WHEN ISNULL(T4.C13, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C13 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S13' 
					   , CASE WHEN ISNULL(T4.C14, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C14 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S14' 
					   , CASE WHEN ISNULL(T4.C15, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C15 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S15' 
					   , CASE WHEN ISNULL(T4.C16, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C16 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S16'   
					   , CASE WHEN ISNULL(T4.C17, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C17 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S17'   
					   , CASE WHEN ISNULL(T4.C18, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C18 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S18'   
					   , CASE WHEN ISNULL(T4.C19, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C19 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S19'    
					   , CASE WHEN ISNULL(T4.C20, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C20 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S20'      
					   , CASE WHEN ISNULL(T4.C21, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C21 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S21'   
					   , CASE WHEN ISNULL(T4.C22, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C22 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S22'   
					   , CASE WHEN ISNULL(T4.C23, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C23 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S23'    
					   , CASE WHEN ISNULL(T4.C24, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C24 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S24'   
					   , CASE WHEN ISNULL(T4.C25, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C25 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S25'   
					   , CASE WHEN ISNULL(T4.C26, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C26 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S26'   
					   , CASE WHEN ISNULL(T4.C27, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C27 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S27'    
					   , CASE WHEN ISNULL(T4.C28, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C28 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S28'   
					   , CASE WHEN ISNULL(T4.C29, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C29 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S29'   
					   , CASE WHEN ISNULL(T4.C30, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C30 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S30'   
					   , CASE WHEN ISNULL(T4.C31, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C31 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S31'   
					   , CASE WHEN ISNULL(T4.C32, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C32 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S32'   
					   , CASE WHEN ISNULL(T4.C33, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C33 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S33'     
					   , CASE WHEN ISNULL(T4.C34, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C34 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S34'      
					   , CASE WHEN ISNULL(T4.C35, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C35 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S35'     
					   , CASE WHEN ISNULL(T4.C36, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C36 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S36'   
					   , CASE WHEN ISNULL(T4.C37, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C37 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S37'    
					   , CASE WHEN ISNULL(T4.C38, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C38 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S38'   
					   , CASE WHEN ISNULL(T4.C39, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C39 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S39'    
					   , CASE WHEN ISNULL(T4.C40, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C40 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S40'   
					   , CASE WHEN ISNULL(T4.C41, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C41 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S41'     
					   , CASE WHEN ISNULL(T4.C42, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C42 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S42'    
					   , CASE WHEN ISNULL(T4.C43, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C43 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S43'    
					   , CASE WHEN ISNULL(T4.C44, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C44 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S44'      
					   , CASE WHEN ISNULL(T4.C45, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C45 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S45'     
					   , CASE WHEN ISNULL(T4.C46, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C46 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S46'   
					   , CASE WHEN ISNULL(T4.C47, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C47 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S47'    
					   , CASE WHEN ISNULL(T4.C48, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C48 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S48'   
					   , CASE WHEN ISNULL(T4.C49, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C49 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S49'   

					   , CASE WHEN ISNULL(T4.C50, '') = '' THEN 0
					     	  ELSE SUM(CASE WHEN T1.DED_CODE = T4.C50 THEN T1.DED_AMOUNT_I ELSE 0 END) 
					   	  END 'S50'
					   
					   , T1.COMP_CODE
					FROM HPA400T T1 WITH (NOLOCK)

				  , (SELECT MAX(CASE WHEN W_SEQ = 1  THEN WAGES_CODE ELSE '' END) AS 'C1'
				          , MAX(CASE WHEN W_SEQ = 2  THEN WAGES_CODE ELSE '' END) AS 'C2'
				          , MAX(CASE WHEN W_SEQ = 3  THEN WAGES_CODE ELSE '' END) AS 'C3'
				          , MAX(CASE WHEN W_SEQ = 4  THEN WAGES_CODE ELSE '' END) AS 'C4'
				          , MAX(CASE WHEN W_SEQ = 5  THEN WAGES_CODE ELSE '' END) AS 'C5'
				          , MAX(CASE WHEN W_SEQ = 6  THEN WAGES_CODE ELSE '' END) AS 'C6'
				          , MAX(CASE WHEN W_SEQ = 7  THEN WAGES_CODE ELSE '' END) AS 'C7'
				          , MAX(CASE WHEN W_SEQ = 8  THEN WAGES_CODE ELSE '' END) AS 'C8'
				          , MAX(CASE WHEN W_SEQ = 9  THEN WAGES_CODE ELSE '' END) AS 'C9'
				          , MAX(CASE WHEN W_SEQ = 10 THEN WAGES_CODE ELSE '' END) AS 'C10'
				          , MAX(CASE WHEN W_SEQ = 11 THEN WAGES_CODE ELSE '' END) AS 'C11'
				          , MAX(CASE WHEN W_SEQ = 12 THEN WAGES_CODE ELSE '' END) AS 'C12'
				          , MAX(CASE WHEN W_SEQ = 13 THEN WAGES_CODE ELSE '' END) AS 'C13'
				          , MAX(CASE WHEN W_SEQ = 14 THEN WAGES_CODE ELSE '' END) AS 'C14'
				          , MAX(CASE WHEN W_SEQ = 15 THEN WAGES_CODE ELSE '' END) AS 'C15'
				          , MAX(CASE WHEN W_SEQ = 16 THEN WAGES_CODE ELSE '' END) AS 'C16'
				          , MAX(CASE WHEN W_SEQ = 17 THEN WAGES_CODE ELSE '' END) AS 'C17'
				          , MAX(CASE WHEN W_SEQ = 18 THEN WAGES_CODE ELSE '' END) AS 'C18'
				          , MAX(CASE WHEN W_SEQ = 19 THEN WAGES_CODE ELSE '' END) AS 'C19'
				          , MAX(CASE WHEN W_SEQ = 20 THEN WAGES_CODE ELSE '' END) AS 'C20'
				          , MAX(CASE WHEN W_SEQ = 21 THEN WAGES_CODE ELSE '' END) AS 'C21'
				          , MAX(CASE WHEN W_SEQ = 22 THEN WAGES_CODE ELSE '' END) AS 'C22'
				          , MAX(CASE WHEN W_SEQ = 23 THEN WAGES_CODE ELSE '' END) AS 'C23'
				          , MAX(CASE WHEN W_SEQ = 24 THEN WAGES_CODE ELSE '' END) AS 'C24'
				          , MAX(CASE WHEN W_SEQ = 25 THEN WAGES_CODE ELSE '' END) AS 'C25'
				          , MAX(CASE WHEN W_SEQ = 26 THEN WAGES_CODE ELSE '' END) AS 'C26'
				          , MAX(CASE WHEN W_SEQ = 27 THEN WAGES_CODE ELSE '' END) AS 'C27'
				          , MAX(CASE WHEN W_SEQ = 28 THEN WAGES_CODE ELSE '' END) AS 'C28'
				          , MAX(CASE WHEN W_SEQ = 29 THEN WAGES_CODE ELSE '' END) AS 'C29'
				          , MAX(CASE WHEN W_SEQ = 30 THEN WAGES_CODE ELSE '' END) AS 'C30'
				          , MAX(CASE WHEN W_SEQ = 31 THEN WAGES_CODE ELSE '' END) AS 'C31'
				          , MAX(CASE WHEN W_SEQ = 32 THEN WAGES_CODE ELSE '' END) AS 'C32'
				          , MAX(CASE WHEN W_SEQ = 33 THEN WAGES_CODE ELSE '' END) AS 'C33'
				          , MAX(CASE WHEN W_SEQ = 34 THEN WAGES_CODE ELSE '' END) AS 'C34'
				          , MAX(CASE WHEN W_SEQ = 35 THEN WAGES_CODE ELSE '' END) AS 'C35'
				          , MAX(CASE WHEN W_SEQ = 36 THEN WAGES_CODE ELSE '' END) AS 'C36'
				          , MAX(CASE WHEN W_SEQ = 37 THEN WAGES_CODE ELSE '' END) AS 'C37'
				          , MAX(CASE WHEN W_SEQ = 38 THEN WAGES_CODE ELSE '' END) AS 'C38'
				          , MAX(CASE WHEN W_SEQ = 39 THEN WAGES_CODE ELSE '' END) AS 'C39'
				          , MAX(CASE WHEN W_SEQ = 40 THEN WAGES_CODE ELSE '' END) AS 'C40'
				  		  , MAX(CASE WHEN W_SEQ = 41 THEN WAGES_CODE ELSE '' END) AS 'C41'
				  		  , MAX(CASE WHEN W_SEQ = 42 THEN WAGES_CODE ELSE '' END) AS 'C42'
				  		  , MAX(CASE WHEN W_SEQ = 43 THEN WAGES_CODE ELSE '' END) AS 'C43'
				  		  , MAX(CASE WHEN W_SEQ = 44 THEN WAGES_CODE ELSE '' END) AS 'C44'
				  		  , MAX(CASE WHEN W_SEQ = 45 THEN WAGES_CODE ELSE '' END) AS 'C45'
				  		  , MAX(CASE WHEN W_SEQ = 46 THEN WAGES_CODE ELSE '' END) AS 'C46'
				  		  , MAX(CASE WHEN W_SEQ = 47 THEN WAGES_CODE ELSE '' END) AS 'C47'
				  		  , MAX(CASE WHEN W_SEQ = 48 THEN WAGES_CODE ELSE '' END) AS 'C48'
				  		  , MAX(CASE WHEN W_SEQ = 49 THEN WAGES_CODE ELSE '' END) AS 'C49'
				  		  , MAX(CASE WHEN W_SEQ = 50 THEN WAGES_CODE ELSE '' END) AS 'C50'
				       FROM HPA400PH_MASTER ) T4
				  WHERE T1.SUPP_TYPE   = #{SUPP_TYPE}
				    AND T1.PAY_YYYYMM  = #{PAY_YYYYMM}
				    AND T1.COMP_CODE   = #{S_COMP_CODE}
				    AND T1.TEMPC_01    = 'EXCEL_DATA'
				  GROUP BY T1.PERSON_NUMB,T1.PAY_YYYYMM, T1.SUPP_TYPE, T1.COMP_CODE
				         , T4.C1,  T4.C2,  T4.C3,  T4.C4,  T4.C5						 
						 , T4.C6,  T4.C7,  T4.C8,  T4.C9,  T4.C10						 
						 , T4.C11, T4.C12, T4.C13, T4.C14, T4.C15						 
						 , T4.C16, T4.C17, T4.C18, T4.C19, T4.C20
						 , T4.C21, T4.C22, T4.C23, T4.C24, T4.C25						 
						 , T4.C26, T4.C27, T4.C28, T4.C29, T4.C30						 
						 , T4.C31, T4.C32, T4.C33, T4.C34, T4.C35						 
						 , T4.C36, T4.C37, T4.C38, T4.C39, T4.C40
						 , T4.C41, T4.C42, T4.C43, T4.C44, T4.C45						 
						 , T4.C46, T4.C47, T4.C48, T4.C49, T4.C50) B ON B.COMP_CODE   = A.COMP_CODE
						 									        AND B.PERSON_NUMB = A.PERSON_NUMB
						 									        
       LEFT JOIN  HPA600T C WITH(NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                AND C.PERSON_NUMB = B.PERSON_NUMB
										AND C.SUPP_TYPE   = B.SUPP_TYPE
										AND C.PAY_YYYYMM  = B.PAY_YYYYMM
						 									        
						 									        
	  WHERE A.COMP_CODE   = #{S_COMP_CODE}
	  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND A.DIV_CODE    = #{DIV_CODE}
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
	    AND A.PAY_GUBUN   = #{PAY_GUBUN}	--고용형태
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
	    AND A.EMPLOY_TYPE = #{EMPLOY_TYPE}	--사원구분
	  </if>
	    
	  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	  	AND  A.PERSON_NUMB LIKE #{PERSON_NUMB} + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(NAME)">
		AND  A.NAME LIKE #{NAME} + '%'
	  </if>
	  <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	   AND  A.DEPT_CODE IN
		 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
	    	 ${item}
	     </foreach>
	  </if>
    
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
	
	<select id="hpa950ukrServiceImpl.payroll" parameterType="Map" resultType="rMap">
		DECLARE @JSON_PARAM NVARCHAR(2000), @ERROR_DESC NVARCHAR(2000)
		SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","PAY_YYYYMM":"${PAY_YYYYMM}","SUPP_DATE":"${SUPP_DATE}","SUPP_TYPE":"${SUPP_TYPE}","DIV_CODE":"${DIV_CODE}","DEPT_CODE_FR":"${DEPT_CODE}","DEPT_CODE_TO":"${DEPT_CODE}","PAY_CODE":"${PAY_CODE}","PAY_PROV_FLAG":"${PAY_PROV_FLAG}","PERSON_NUMB":"${PERSON_NUMB}","BATCH_YN":"N","DELETE_YN":"${DELETE_YN}","CALC_TAX_YN":"${CALC_TAX_YN}","CALC_HIR_YN":"${CALC_HIR_YN}","CALC_IND_YN":"${CALC_IND_YN}","CALC_MED_YN":"${CALC_MED_YN}","UPDATE_DB_USER":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
		EXEC uniLITE.USP_HUMAN_Payroll @JSON_PARAM, @ERROR_DESC OUTPUT
		SELECT @ERROR_DESC AS ErrorDesc
	</select> 
			
		
</mapper>