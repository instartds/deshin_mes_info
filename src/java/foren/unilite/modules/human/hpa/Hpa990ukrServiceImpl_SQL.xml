<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpa990ukrServiceImpl">
	<select id="hpa990ukrServiceImpl.selectDefaultTaxYM" parameterType="Map" resultType="rMap">
    /* hpa990ukrServiceImpl.selectDefaultTaxYM */
    DECLARE   @CNT            INT
    
    SELECT @CNT = COUNT(1)
      FROM HBS130T     WITH(NOLOCK)
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND TAX_YYYYMM  &lt;  (SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6))
     GROUP BY TAX_YYYYMM  
    
    IF @CNT > 0 
        BEGIN
            SELECT TOP 1 TAX_YYYYMM AS TAX_YYYYMM
              FROM HBS130T     WITH(NOLOCK)
             WHERE COMP_CODE   = #{S_COMP_CODE}
              AND TAX_YYYYMM  &lt;  (SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6))
             GROUP BY TAX_YYYYMM 
        END
    ELSE
        BEGIN
            SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6) AS TAX_YYYYMM
        END
	</select>

	<select id="hpa990ukrServiceImpl.selectTaxYM" parameterType="Map" resultType="rMap">
    /* hpa990ukrServiceImpl.selectTaxYM */
            SELECT TOP 1 TAX_YYYYMM AS sTaxYM
                   FROM HBS130T WITH(NOLOCK)
                  WHERE COMP_CODE = #{S_COMP_CODE}
                    AND TAX_YYYYMM &lt; #{TAX_YYYYMM}
                  GROUP BY TAX_YYYYMM 
 				  ORDER BY TAX_YYYYMM DESC 
	</select>

	<select id="hpa990ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.selectList1*/
       	 SELECT SECT_CODE
	          , PAY_YYYYMM
	          , INCGUBN
	          , INCCODE
	          , INCOME_CNT
	          , INCOME_SUPP_TOTAL_I
	          , DEF_IN_TAX_I
	          , DEF_SP_TAX_I	
	          , ADD_TAX_I
	          , RET_IN_TAX_I
	          , IN_TAX_I
	          , SP_TAX_I
	          , STATE_TYPE
	          , A.COMP_CODE
	          
			  , B.COL_EDIT4
			  , B.COL_EDIT5
			  , B.COL_EDIT6
			  , B.COL_EDIT7
			  , B.COL_EDIT8
			  , B.COL_EDIT9
			  , B.COL_EDIT10
			  , B.COL_EDIT11
	       FROM HPA950T A WITH(NOLOCK)
	  LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                       			  AND A.INCCODE = B.TAX_CODE 
	                       			  AND B.TAX_YYYYMM = #{sTaxYM}
	      WHERE A.COMP_CODE	= #{S_COMP_CODE}
	        AND A.SECT_CODE	= #{DIV_CODE}
	        AND A.PAY_YYYYMM = #{TAX_YYYYMM}
	        AND A.STATE_TYPE = #{STATE_TYPE}
			AND A.INCCODE LIKE 'A%'
	   ORDER BY B.SORT_SEQ
           
	</select>

	<select id="hpa990ukrServiceImpl.selectList1_2" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.selectList1_2*/
		SELECT SECT_CODE
	         , PAY_YYYYMM
	         , LAST_IN_TAX_I
	         , BEFORE_IN_TAX_I
	         , BAL_AMT
	         , RET_AMT
	         , TRUST_AMT
	         , ETC_AMT
	         , FIN_COMP_AMT
	         , MERGER_AMT
	         , ROW_IN_TAX_I
	         , TOTAL_IN_TAX_I
	         , NEXT_IN_TAX_I
	         , RET_IN_TAX_I
	         , STATE_TYPE
	         , UPDATE_DATE
	         , UPDATE_ID
	         , COMP_CODE
	      FROM HPA951T WITH(NOLOCK)
	     WHERE COMP_CODE	= #{S_COMP_CODE}
	       AND SECT_CODE	= #{DIV_CODE}
	       AND PAY_YYYYMM	= #{TAX_YYYYMM}
	       AND STATE_TYPE	= #{STATE_TYPE}
	</select>

	<select id="hpa990ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.selectList2*/
		/* 부표 거주자 */
		IF NOT EXISTS ( 
		    SELECT TOP 1 A.COMP_CODE
			  FROM HPA950T A WITH(NOLOCK)
		  LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								          AND A.INCCODE = B.TAX_CODE 
								          AND B.TAX_YYYYMM = #{sTaxYM}
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM	= #{TAX_YYYYMM}
			    AND A.STATE_TYPE	= #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'A'
		)
		BEGIN
			SELECT 
				#{DIV_CODE} AS SECT_CODE
			    , #{TAX_YYYYMM} AS PAY_YYYYMM
			    , TAX_CODE_NAME AS INCGUBN
			    , TAX_CODE AS INCCODE
			    , 0 AS INCOME_CNT
			    , 0 AS INCOME_SUPP_TOTAL_I
			    , 0 AS DEF_IN_TAX_I
			    , 0 AS DEF_SP_TAX_I	
			    , 0 AS ADD_TAX_I
			    , 0 AS RET_IN_TAX_I
			    , 0 AS IN_TAX_I
			    , 0 AS SP_TAX_I
			    , #{STATE_TYPE} AS STATE_TYPE
			    , COMP_CODE
				
				,COL_EDIT4
				,COL_EDIT5
				,COL_EDIT6
				,COL_EDIT7
				,COL_EDIT8
				,COL_EDIT9
				,COL_EDIT10
				,COL_EDIT11
				,'Y' AS INSERT_FLAG
		
			  FROM HBS130T WITH(NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND TAX_YYYYMM = #{sTaxYM}
			   AND TAX_CODE LIKE 'C%'
			   AND REF_CODE3 = 'A'
		  ORDER BY SORT_SEQ
		
		END
		ELSE
		BEGIN
		    SELECT A.SECT_CODE
			    , A.PAY_YYYYMM
			    , A.INCGUBN
			    , A.INCCODE
			    , A.INCOME_CNT
			    , A.INCOME_SUPP_TOTAL_I
			    , A.DEF_IN_TAX_I
			    , A.DEF_SP_TAX_I	
			    , A.ADD_TAX_I
			    , A.RET_IN_TAX_I
			    , A.IN_TAX_I
			    , A.SP_TAX_I
			    , A.STATE_TYPE
			    , A.COMP_CODE
				
			,B.COL_EDIT4
			,B.COL_EDIT5
			,B.COL_EDIT6
			,B.COL_EDIT7
			,B.COL_EDIT8
			,B.COL_EDIT9
			,B.COL_EDIT10
			,B.COL_EDIT11
			,'N' AS INSERT_FLAG
			FROM          HPA950T A WITH(NOLOCK)
			    LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								                AND A.INCCODE = B.TAX_CODE 
								                AND B.TAX_YYYYMM = #{sTaxYM}
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM = #{TAX_YYYYMM}
			    AND A.STATE_TYPE = #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'A'
			ORDER BY B.SORT_SEQ
		END
           
	</select>

	<select id="hpa990ukrServiceImpl.selectList3" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.selectList3*/
		/* 부표 비거주자 */
		IF NOT EXISTS ( 
		    SELECT TOP 1 A.COMP_CODE
			  FROM HPA950T A WITH(NOLOCK)
		  LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								          AND A.INCCODE = B.TAX_CODE 
								          AND B.TAX_YYYYMM = #{sTaxYM}
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM	= #{TAX_YYYYMM}
			    AND A.STATE_TYPE	= #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'B'
		)
		BEGIN
			SELECT 
				#{DIV_CODE} AS SECT_CODE
			    , #{TAX_YYYYMM} AS PAY_YYYYMM
			    , TAX_CODE_NAME AS INCGUBN
			    , TAX_CODE AS INCCODE
			    , 0 AS INCOME_CNT
			    , 0 AS INCOME_SUPP_TOTAL_I
			    , 0 AS DEF_IN_TAX_I
			    , 0 AS DEF_SP_TAX_I	
			    , 0 AS ADD_TAX_I
			    , 0 AS RET_IN_TAX_I
			    , 0 AS IN_TAX_I
			    , 0 AS SP_TAX_I
			    , #{STATE_TYPE} AS STATE_TYPE
			    , COMP_CODE
				
				,COL_EDIT4
				,COL_EDIT5
				,COL_EDIT6
				,COL_EDIT7
				,COL_EDIT8
				,COL_EDIT9
				,COL_EDIT10
				,COL_EDIT11
				,'Y' AS INSERT_FLAG
		
			  FROM HBS130T WITH(NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND TAX_YYYYMM = #{sTaxYM}
			   AND TAX_CODE LIKE 'C%'
			   AND REF_CODE3 = 'B'
		  ORDER BY SORT_SEQ
		
		END
		ELSE
		BEGIN
		    SELECT A.SECT_CODE
			    , A.PAY_YYYYMM
			    , A.INCGUBN
			    , A.INCCODE
			    , A.INCOME_CNT
			    , A.INCOME_SUPP_TOTAL_I
			    , A.DEF_IN_TAX_I
			    , A.DEF_SP_TAX_I	
			    , A.ADD_TAX_I
			    , A.RET_IN_TAX_I
			    , A.IN_TAX_I
			    , A.SP_TAX_I
			    , A.STATE_TYPE
			    , A.COMP_CODE
				
				,B.COL_EDIT4
				,B.COL_EDIT5
				,B.COL_EDIT6
				,B.COL_EDIT7
				,B.COL_EDIT8
				,B.COL_EDIT9
				,B.COL_EDIT10
				,B.COL_EDIT11
				,'N' AS INSERT_FLAG
			FROM          HPA950T A WITH(NOLOCK)
			    LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								                AND A.INCCODE = B.TAX_CODE 
								                AND B.TAX_YYYYMM = #{sTaxYM}
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM = #{TAX_YYYYMM}
			    AND A.STATE_TYPE = #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'B'
			ORDER BY B.SORT_SEQ
		END
	</select>

	<select id="hpa990ukrServiceImpl.selectList4" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.selectList4*/
		/* 부표 법인원천 */
		IF NOT EXISTS ( 
		    SELECT TOP 1 A.COMP_CODE
			  FROM HPA950T A WITH(NOLOCK)
		  LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								          AND A.INCCODE = B.TAX_CODE 
								          AND B.TAX_YYYYMM = #{sTaxYM}
			 WHERE A.COMP_CODE	= #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM	= #{TAX_YYYYMM}
			    AND A.STATE_TYPE	= #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'C'
		)
		BEGIN
			SELECT 
				#{DIV_CODE} AS SECT_CODE
			    , #{TAX_YYYYMM} AS PAY_YYYYMM
			    , TAX_CODE_NAME AS INCGUBN
			    , TAX_CODE AS INCCODE
			    , 0 AS INCOME_CNT
			    , 0 AS INCOME_SUPP_TOTAL_I
			    , 0 AS DEF_IN_TAX_I
			    , 0 AS DEF_SP_TAX_I	
			    , 0 AS ADD_TAX_I
			    , 0 AS RET_IN_TAX_I
			    , 0 AS IN_TAX_I
			    , 0 AS SP_TAX_I
			    , #{STATE_TYPE} AS STATE_TYPE
			    , COMP_CODE
				
				,COL_EDIT4
				,COL_EDIT5
				,COL_EDIT6
				,COL_EDIT7
				,COL_EDIT8
				,COL_EDIT9
				,COL_EDIT10
				,COL_EDIT11
				,'Y' AS INSERT_FLAG
			  FROM HBS130T WITH(NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND TAX_YYYYMM = #{sTaxYM}
			   AND TAX_CODE LIKE 'C%'
			   AND REF_CODE3 = 'C'
		  ORDER BY SORT_SEQ
		
		END
		ELSE
		BEGIN
		    SELECT A.SECT_CODE
			    , A.PAY_YYYYMM
			    , A.INCGUBN
			    , A.INCCODE
			    , A.INCOME_CNT
			    , A.INCOME_SUPP_TOTAL_I
			    , A.DEF_IN_TAX_I
			    , A.DEF_SP_TAX_I	
			    , A.ADD_TAX_I
			    , A.RET_IN_TAX_I
			    , A.IN_TAX_I
			    , A.SP_TAX_I
			    , A.STATE_TYPE
			    , A.COMP_CODE
				
				,B.COL_EDIT4
				,B.COL_EDIT5
				,B.COL_EDIT6
				,B.COL_EDIT7
				,B.COL_EDIT8
				,B.COL_EDIT9
				,B.COL_EDIT10
				,B.COL_EDIT11
				,'N' AS INSERT_FLAG
			FROM          HPA950T A WITH(NOLOCK)
			    LEFT JOIN HBS130T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
								                AND A.INCCODE = B.TAX_CODE 
								                AND B.TAX_YYYYMM = #{sTaxYM}
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			    AND A.SECT_CODE	= #{DIV_CODE}
			    AND A.PAY_YYYYMM = #{TAX_YYYYMM}
			    AND A.STATE_TYPE = #{STATE_TYPE}
				AND A.INCCODE LIKE 'C%'
			    AND B.REF_CODE3 = 'C'
			ORDER BY B.SORT_SEQ
		END
	</select>	

	<select id="hpa990ukrServiceImpl.createData" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.createData */
		DECLARE @JSON_PARAM    NVARCHAR(2000), @SOPTION NVARCHAR(10), @ERROR_DESC   NVARCHAR(2000) 
        --※ 주의 : Json 파람조건에 엔터키 값 없이 해야함.
        SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","DIV_CODE":"${DIV_CODE}","WORK_YYMM":"${TAX_YYYYMM}","RE_WORK":"N","PAY_YYMM_FR":"${PAY_INCOM_FR}","PAY_YYMM_TO":"${PAY_INCOM_TO}","HALF_YYMM_FR":"${HALF_INCOM_FR}","HALF_YYMM_TO":"${HALF_INCOM_TO}","ONE_YYMM_FR":"${ONE_INCOM_FR}","ONE_YYMM_TO":"${ONE_INCOM_TO}","RETR_YYMM_FR":"${RETR_INCOM_FR}","RETR_YYMM_TO":"${RETR_INCOM_TO}","SAUP_YYMM_FR":"${BUSI_INCOM_FR}","SAUP_YYMM_TO":"${BUSI_INCOM_TO}","SUPP_YYMM_FR":"${SUPP_DATE_FR}","SUPP_YYMM_TO":"${SUPP_DATE_TO}","RET_SUPP_DATE_FR":"${RETR_SUPP_DATE_FR}","RET_SUPP_DATE_TO":"${RETR_SUPP_DATE_TO}","CHK_INV":"${TAX_DIV_CODE}","CHK_YEAR":"${YEAR_TAX_FLAG}","PAY_YM":"${PAY_YM}","KEY_VALUE":"","UPDATE_DB_USER":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
		exec uniLITE.USP_HUMAN_HPA992UKR @JSON_PARAM , @SOPTION OUTPUT, @ERROR_DESC OUTPUT

        SELECT ISNULL(@ERROR_DESC, '')	AS errorDesc
	</select>
	<select id="hpa990ukrServiceImpl.reCreateData" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.reCreateData */
		DECLARE @JSON_PARAM    NVARCHAR(2000), @SOPTION NVARCHAR(10), @ERROR_DESC   NVARCHAR(2000) 
        --※ 주의 : Json 파람조건에 엔터키 값 없이 해야함.
        SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","DIV_CODE":"${DIV_CODE}","WORK_YYMM":"${TAX_YYYYMM}","RE_WORK":"Y","PAY_YYMM_FR":"${PAY_INCOM_FR}","PAY_YYMM_TO":"${PAY_INCOM_TO}","HALF_YYMM_FR":"${HALF_INCOM_FR}","HALF_YYMM_TO":"${HALF_INCOM_TO}","ONE_YYMM_FR":"${ONE_INCOM_FR}","ONE_YYMM_TO":"${ONE_INCOM_TO}","RETR_YYMM_FR":"${RETR_INCOM_FR}","RETR_YYMM_TO":"${RETR_INCOM_TO}","SAUP_YYMM_FR":"${BUSI_INCOM_FR}","SAUP_YYMM_TO":"${BUSI_INCOM_TO}","SUPP_YYMM_FR":"${SUPP_DATE_FR}","SUPP_YYMM_TO":"${SUPP_DATE_TO}","RET_SUPP_DATE_FR":"${RETR_SUPP_DATE_FR}","RET_SUPP_DATE_TO":"${RETR_SUPP_DATE_TO}","CHK_INV":"${TAX_DIV_CODE}","CHK_YEAR":"${YEAR_TAX_FLAG}","PAY_YM":"${PAY_YM}","KEY_VALUE":"","UPDATE_DB_USER":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
		exec uniLITE.USP_HUMAN_HPA992UKR @JSON_PARAM , @SOPTION OUTPUT, @ERROR_DESC OUTPUT

        SELECT ISNULL(@ERROR_DESC, '')	AS ERROR_DESC
	</select>

	<select id="hpa990ukrServiceImpl.checkCloseYn" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.checkCloseYn */
		DECLARE @ERRMSG NVARCHAR(2000),
				@CLOSE_DATE NVARCHAR(8)
		 SELECT @CLOSE_DATE = CLOSE_DATE
		   FROM HBS900T
		  WHERE COMP_CODE	= #{S_COMP_CODE}
		    AND CLOSE_TYPE	= #{CLOSE_TYPE}
			    
		IF ISNULL(@CLOSE_DATE, '') &gt;= #{TAX_YYYYMM}
		BEGIN
			SELECT 'Y'
		END   
	</select>
	<update id="hpa990ukrServiceImpl.updateList" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList */
		UPDATE HPA950T 
		   SET INCOME_CNT = #{INCOME_CNT}
			  ,INCOME_SUPP_TOTAL_I = #{INCOME_SUPP_TOTAL_I}
			  ,DEF_IN_TAX_I = #{DEF_IN_TAX_I}		
		      ,DEF_SP_TAX_I = #{DEF_SP_TAX_I}
			  ,ADD_TAX_I = #{ADD_TAX_I}
			  ,RET_IN_TAX_I = #{RET_IN_TAX_I}
			  ,IN_TAX_I = #{IN_TAX_I}
			  ,SP_TAX_I = #{SP_TAX_I}
	       	  ,UPDATE_DB_USER = #{S_USER_ID}
	       	  ,UPDATE_DB_TIME = GETDATE()
	       	  
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND SECT_CODE = #{SECT_CODE}
		   AND PAY_YYYYMM = #{PAY_YYYYMM}
		   AND INCCODE = #{INCCODE}
		   AND STATE_TYPE = #{STATE_TYPE}
	</update>	
	<update id="hpa990ukrServiceImpl.updateList1_2" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList1_2 */
		UPDATE HPA951T
		   SET LAST_IN_TAX_I   = #{LAST_IN_TAX_I}
		     , BEFORE_IN_TAX_I = #{BEFORE_IN_TAX_I}
		     , BAL_AMT         = #{BAL_AMT}
		     , RET_AMT         = #{RET_AMT}
		     , TRUST_AMT       = #{TRUST_AMT}
		     , ETC_AMT         = #{ETC_AMT}
		     , FIN_COMP_AMT    = #{FIN_COMP_AMT}
		     , MERGER_AMT      = #{MERGER_AMT}
		     , ROW_IN_TAX_I    = #{ROW_IN_TAX_I}
		     , TOTAL_IN_TAX_I  = #{TOTAL_IN_TAX_I}
		     , NEXT_IN_TAX_I   = #{NEXT_IN_TAX_I}
		     , RET_IN_TAX_I    = #{RET_IN_TAX_I}
		     , UPDATE_DATE     = GETDATE()
		     , UPDATE_ID       = #{S_USER_ID}
		     
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND SECT_CODE       = #{SECT_CODE} 
		   AND PAY_YYYYMM      = #{PAY_YYYYMM}
		   AND STATE_TYPE      = #{STATE_TYPE}
	</update>

	<insert id="hpa990ukrServiceImpl.insertList" parameterType="rMap" >
		/* hpa990ukrServiceImpl.insertList */
		INSERT INTO HPA950T(
			COMP_CODE
	       ,SECT_CODE
	       ,PAY_YYYYMM
	       ,INCCODE
	       ,STATE_TYPE
	       ,INCGUBN
	      -- ,UNITY_YN
	       ,INCOME_CNT
	       ,INCOME_SUPP_TOTAL_I
	       ,DEF_IN_TAX_I
	       ,DEF_SP_TAX_I
	       ,ADD_TAX_I
	       ,RET_IN_TAX_I
	       ,IN_TAX_I
	       ,SP_TAX_I
	      -- ,REPORTS_DATE
	       ,INSERT_DB_USER
	       ,INSERT_DB_TIME
	     --  ,LOCAL_TAX_I
		)VALUES(
	     	#{S_COMP_CODE}
	       ,#{SECT_CODE}
	       ,#{PAY_YYYYMM}
	       ,#{INCCODE}
	       ,#{STATE_TYPE}
	       ,#{INCGUBN}
	      -- ,UNITY_YN
	       ,#{INCOME_CNT}
	       ,#{INCOME_SUPP_TOTAL_I}
	       ,#{DEF_IN_TAX_I}
	       ,#{DEF_SP_TAX_I}
	       ,#{ADD_TAX_I}
	       ,#{RET_IN_TAX_I}
	       ,#{IN_TAX_I}
	       ,#{SP_TAX_I}
	       --,REPORTS_DATE
	       ,#{S_USER_ID}
	       ,GETDATE()
	       --,ROUND(IN_TAX_I * 0.1, -1 , 1)
		)
	
	</insert>
	<update id="hpa990ukrServiceImpl.deleteList" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList */
		 DELETE FROM HPA950T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND SECT_CODE  = #{DIV_CODE}
	       AND PAY_YYYYMM = #{TAX_YYYYMM}
		   AND STATE_TYPE = #{STATE_TYPE}
		   
		 DELETE FROM HPA951T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND SECT_CODE  = #{DIV_CODE}
	       AND PAY_YYYYMM = #{TAX_YYYYMM}
		   AND STATE_TYPE = #{STATE_TYPE} 
		   
		 DELETE FROM HPA952T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND SECT_CODE  = #{DIV_CODE}
	       AND PAY_YYYYMM = #{TAX_YYYYMM}
		   AND STATE_TYPE = #{STATE_TYPE}   
	</update>	

	<select id="hpa990ukrServiceImpl.printExcel1" parameterType="Map" resultType="rMap">
    --hpa990ukrServiceImpl.printExcel-1
		SELECT D.DIV_CODE AS DIV_CODE
	     , D.DIV_NAME AS DIV_NAME
	     , D.DIV_FULL_NAME AS DIV_FULL_NAME
	     , D1.COMP_OWN_NO
	     , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
	     , D.REPRE_NAME
	     , unilite.fnCipherDecrypt(D.REPRE_NO, 'AA')  AS REPRE_NO
	     
		 , CASE WHEN ISNULL(D2.TAX_BASE, '0') != '5' 
		        THEN 'N'
			    ELSE 'Y'
		    END										  AS TAX_BASE_CHCK
		    
	     , D.COMP_CLASS
	     , D.COMP_TYPE
	     , D.ZIP_CODE
	     , D.ADDR
	     , D.TELEPHON
	     , D.FAX_NUM
	     , D.SAFFER_TAX
	     , D.SAFFER_TAX_NM
	     , (SELECT REF_CODE1
	          FROM BSA100T
	         WHERE COMP_CODE = D.COMP_CODE 
	           AND MAIN_CODE = 'A080'
	           AND SUB_CODE  = D.SAFFER_TAX) AS SAFFER_BANK_NUM
	     , D.EMAIL
	     , D.TAX_NAME
	     , SUBSTRING(D.TAX_NUM,1,3) + '-' + SUBSTRING(D.TAX_NUM,4,2) + '-' + SUBSTRING(D.TAX_NUM,6,5) AS TAX_NUM
	     , D.TAX_TEL
	     , INCCODE
	     , INCOME_CNT
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, INCOME_SUPP_TOTAL_I) AS MONEY), 1), '.00', '')	AS INCOME_SUPP_TOTAL_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, DEF_IN_TAX_I) AS MONEY), 1), '.00', '')			AS DEF_IN_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, DEF_SP_TAX_I) AS MONEY), 1), '.00', '')			AS DEF_SP_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ADD_TAX_I) AS MONEY), 1), '.00', '')				AS ADD_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_IN_TAX_I)	AS MONEY), 1), '.00', '')			AS RET_IN_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', '')				AS IN_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, SP_TAX_I)	AS MONEY), 1), '.00', '')				AS SP_TAX_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, A.LOCAL_TAX_I) AS MONEY), 1), '.00', '')			AS LOCAL_TAX_I
	     
	     , INCOME_SUPP_TOTAL_I
	     , DEF_IN_TAX_I
	     , DEF_SP_TAX_I
	     , ADD_TAX_I
	     , RET_IN_TAX_I
	     , IN_TAX_I
	     , SP_TAX_I
	     , A.LOCAL_TAX_I
	     
	     , TAX_NAME
	     , TAX_NUM
	     , CASE WHEN TAX_TEL IS NULL THEN HANDPHONE
	            ELSE TAX_TEL
	            END AS TAX_TEL
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0)) AS MONEY), 1), '.00', '') AS TOTAL_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0)) AS MONEY), 1), '.00', '') AS TAX_AMOUNT_I
	     --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0)) AS MONEY), 1), '.00', '')						AS TAX_EXEMPTION_I 
	     
	     , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0) AS TOTAL_I
	     , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0) 								AS TAX_AMOUNT_I
	     --, ISNULL(E.TAX_EXEMPTION_I,0)														AS TAX_EXEMPTION_I
	     , CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0))														AS TAX_EXEMPTION_I  
	     
	     , B1.SCOUNT
	     , C.LOCAL_TAX_GOV
	     --, 'aaaaa' as LOCAL_TAX_GOV
	     
	     --,CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', ''))) AS A10
	     , IN_TAX_I AS A10
    	-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 1, 1) AS A10_1
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 2, 1) AS A10_2
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 3, 1) AS A10_3
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 4, 1) AS A10_4
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 5, 1) AS A10_5
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 6, 1) AS A10_6
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 7, 1) AS A10_7
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 8, 1) AS A10_8
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 9, 1) AS A10_9
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 10, 1) AS A10_10
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 11, 1) AS A10_11
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 12, 1) AS A10_12
		-- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)	AS MONEY), 1), '.00', ''), ',', '')))), 13), 13, 1) AS A10_13
	  FROM            BOR120T D 
	       INNER JOIN HPA950T  A ON D.COMP_CODE      = A.COMP_CODE
	                            AND D.DIV_CODE       = A.SECT_CODE 
	       LEFT JOIN (SELECT COMP_CODE
	                        , PAY_YYYYMM
	                        , SECT_CODE
	                        , (SUM(TAX_AMOUNT_I)) AS TAX_AMOUNT_I
	                        , (SUM(BONUS_TAX_I)) AS BONUS_TAX_I
	                     FROM HPA600T
	                     WHERE PAY_YYYYMM = #{PAY_YYYYMM}
	                    GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
	                 ) B ON B.COMP_CODE  = A.COMP_CODE
	                    AND B.SECT_CODE  = A.SECT_CODE
	                    AND A.INCCODE    = 'A01'
	       LEFT  JOIN (SELECT COUNT(X.PERSON_NUMB) AS SCOUNT
	                        , COMP_CODE
	                        , SECT_CODE
	                     FROM (SELECT COMP_CODE
	                                , PAY_YYYYMM
	                                , SECT_CODE
	                                , PERSON_NUMB
	                             FROM HPA600T
	                            WHERE PAY_YYYYMM = #{PAY_YYYYMM}
	                              AND (( PAY_GUBUN != '2') OR (PAY_GUBUN = '2' AND PAY_GUBUN2 = '2')) 
	                            GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM, PERSON_NUMB) X
	                    GROUP BY COMP_CODE, SECT_CODE
	                            ) B1 ON B1.COMP_CODE  = A.COMP_CODE
	                                AND B1.SECT_CODE  = A.SECT_CODE
	                                AND A.INCCODE     = 'A01'  
	       LEFT  JOIN (SELECT SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
	                        , A.COMP_CODE
	                        , C.SECT_CODE
	                        , A.PAY_YYYYMM
	                     FROM HPA800T A INNER JOIN HUM100T C
	                                       ON A.COMP_CODE = C.COMP_CODE
	                                      AND A.PERSON_NUMB = C.PERSON_NUMB
	                    GROUP BY A.COMP_CODE, C.SECT_CODE, A.PAY_YYYYMM) E ON D.COMP_CODE = A.COMP_CODE
	                                                                      AND E.SECT_CODE = A.SECT_CODE
	                                                                      AND E.PAY_YYYYMM = #{PAY_YYYYMM}
	                                                                      AND A.INCCODE    = 'A01' 
	       LEFT  JOIN (SELECT B.CODE_NAME AS LOCAL_TAX_GOV
	                        , A.SECT_CODE
	                        , A.COMP_CODE
	                      FROM HBS230T A 
	                           INNER JOIN BSA100T B ON B.COMP_CODE = A.COMP_CODE
	                                               AND B.MAIN_CODE = 'H137'
	                                               AND B.SUB_CODE  = A.LOCAL_TAX_GOV) C ON C.COMP_CODE = A.COMP_CODE
	                                                                                   AND C.SECT_CODE = A.SECT_CODE
	                                                                                   AND A.INCCODE    = 'A01'
	        INNER JOIN BOR100T D1 WITH(NOLOCK) ON D.COMP_CODE   = D1.COMP_CODE
			 LEFT JOIN ABA100T D2 WITH(NOLOCK) ON D2.COMP_CODE	= A.COMP_CODE
	 WHERE A.COMP_CODE  = #{S_COMP_CODE}
	   AND A.SECT_CODE  = #{DIV_CODE}
	   AND A.PAY_YYYYMM = #{WORK_YYYYMM}
	   AND A.STATE_TYPE = #{YEAR_TAX_FLAG}
	</select>

	<select id="hpa990ukrServiceImpl.printExcel2" parameterType="Map" resultType="rMap">
	--hpa990ukrServiceImpl.printExcel2
	--SELECT REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, LAST_IN_TAX_I) AS MONEY), 1), '.00', '')	 AS LAST_IN_TAX_I
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, BEFORE_IN_TAX_I) AS MONEY), 1), '.00', '') AS BEFORE_IN_TAX_I
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, BAL_AMT) AS MONEY), 1), '.00', '')		 AS BAL_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_AMT) AS MONEY), 1), '.00', '')		 AS RET_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, TRUST_AMT) AS MONEY), 1), '.00', '')		 AS TRUST_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ETC_AMT) AS MONEY), 1), '.00', '')		 AS ETC_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, FIN_COMP_AMT) AS MONEY), 1), '.00', '')	 AS FIN_COMP_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, MERGER_AMT) AS MONEY), 1), '.00', '')		 AS MERGER_AMT
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ROW_IN_TAX_I) AS MONEY), 1), '.00', '')	 AS ROW_IN_TAX_I
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, TOTAL_IN_TAX_I) AS MONEY), 1), '.00', '')	 AS TOTAL_IN_TAX_I
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, NEXT_IN_TAX_I) AS MONEY), 1), '.00', '')	 AS NEXT_IN_TAX_I
	--     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_IN_TAX_I) AS MONEY), 1), '.00', '')	 AS RET_IN_TAX_I
	     
	SELECT LAST_IN_TAX_I 	 AS LAST_IN_TAX_I
	     , BEFORE_IN_TAX_I  AS BEFORE_IN_TAX_I
	     , BAL_AMT 		 AS BAL_AMT
	     , RET_AMT 		 AS RET_AMT
	     , TRUST_AMT 		 AS TRUST_AMT
	     , ETC_AMT 		 AS ETC_AMT
	     , FIN_COMP_AMT 	 AS FIN_COMP_AMT
	     , MERGER_AMT 		 AS MERGER_AMT
	     , ROW_IN_TAX_I 	 AS ROW_IN_TAX_I
	     , TOTAL_IN_TAX_I 	 AS TOTAL_IN_TAX_I
	     , NEXT_IN_TAX_I 	 AS NEXT_IN_TAX_I
	     , RET_IN_TAX_I 	 AS RET_IN_TAX_I
	  FROM HPA951T
	 WHERE COMP_CODE  = #{S_COMP_CODE}
	   AND SECT_CODE  = #{DIV_CODE}
	   AND PAY_YYYYMM = #{WORK_YYYYMM}
	   AND STATE_TYPE = #{YEAR_TAX_FLAG}
	</select>





<!-- 20200818 CLIP REPORT 출력관련 로직 추가 -->
	<select id="hpa990ukrServiceImpl.printMainData" parameterType="Map" resultType="rMap">
		--hpa990ukrServiceImpl.printClipReport
		SELECT D.DIV_CODE                                             AS DIV_CODE
		     , D.DIV_NAME                                             AS DIV_NAME
		     , D.DIV_FULL_NAME                                        AS DIV_FULL_NAME
		     , D1.COMP_OWN_NO
		     , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
		     , D.REPRE_NAME
		     , unilite.fnCipherDecrypt(D.REPRE_NO, 'AA')              AS REPRE_NO
		     , D.COMP_CLASS
		     , D.COMP_TYPE
		     , D.ZIP_CODE
		     , D.ADDR
		     , D.TELEPHON
		     , D.FAX_NUM
		     , D.SAFFER_TAX
		     , D.SAFFER_TAX_NM
		     , (SELECT REF_CODE1
		          FROM BSA100T WITH(NOLOCK)
		         WHERE COMP_CODE = D.COMP_CODE 
		           AND MAIN_CODE = 'A080'
		           AND SUB_CODE  = D.SAFFER_TAX)                      AS SAFFER_BANK_NUM
		     , D.EMAIL
		     , D.TAX_NAME
		     , SUBSTRING(D.TAX_NUM,1,3) + '-' + SUBSTRING(D.TAX_NUM,4,2) + '-' + SUBSTRING(D.TAX_NUM,6,5) AS TAX_NUM
		     , CASE WHEN TAX_TEL IS NULL THEN HANDPHONE
		            ELSE TAX_TEL
		       END                                                    AS TAX_TEL
		     , CASE WHEN Z1.INCOME_CNT = 0 THEN 'N'
		            ELSE 'Y'
		       END                                                    AS A04_INCOME_CNT_CHCK
		     , CASE WHEN Z2.INCOME_CNT = 0 THEN 'N'
		            ELSE 'Y'
		       END                                                    AS BUPYO_CNT_CHCK
		     , ''                                                     AS LOCAL_TAX_GOV
			 , CASE WHEN ISNULL(E.TAX_BASE, '0') != '5' THEN 'N'
					ELSE 'Y'
			   END													  AS TAX_BASE_CHCK
		  FROM       BOR120T D  WITH(NOLOCK)
		  INNER JOIN HPA950T A  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                    AND D.DIV_CODE  = A.SECT_CODE 
		  INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
		   LEFT JOIN ABA100T E  WITH(NOLOCK) ON A.COMP_CODE	= E.COMP_CODE
		   LEFT JOIN (SELECT COMP_CODE
		                    , PAY_YYYYMM
		                    , SECT_CODE
		                    , SUM(INCOME_CNT) AS INCOME_CNT
		                 FROM HPA950T WITH(NOLOCK)
		                WHERE PAY_YYYYMM = #{WORK_YYYYMM}
		                  AND INCCODE    = 'A04'
		                  AND STATE_TYPE = '1'
		                GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
		             ) Z1 ON Z1.COMP_CODE  = A.COMP_CODE
		                 AND Z1.SECT_CODE  = A.SECT_CODE
		   LEFT JOIN (SELECT COMP_CODE
		                    , PAY_YYYYMM
		                    , SECT_CODE
		                    , SUM(INCOME_CNT) AS INCOME_CNT
		                 FROM HPA950T WITH(NOLOCK)
		                WHERE PAY_YYYYMM = #{WORK_YYYYMM}
		                  AND INCCODE    IN ('A50', 'A60', 'A69', 'A70', 'A80')
		                  AND STATE_TYPE = '1'
		                GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
		             ) Z2 ON Z2.COMP_CODE  = A.COMP_CODE
		                 AND Z2.SECT_CODE  = A.SECT_CODE
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.SECT_CODE  = #{DIV_CODE}
		   AND A.PAY_YYYYMM = #{WORK_YYYYMM}
		   AND A.STATE_TYPE = #{YEAR_TAX_FLAG}
		 GROUP BY D.COMP_CODE, D.DIV_CODE, D.DIV_NAME, D.DIV_FULL_NAME, D1.COMP_OWN_NO, D.COMPANY_NUM, D.REPRE_NAME, D.REPRE_NO, D.COMP_CLASS, D.COMP_TYPE
		        , D.ZIP_CODE, D.ADDR, D.TELEPHON, D.HANDPHONE, D.FAX_NUM, D.SAFFER_TAX, D.SAFFER_TAX_NM, D.EMAIL, D.TAX_NAME, D.TAX_NUM, D.TAX_TEL
		        , Z1.INCOME_CNT, Z2.INCOME_CNT, ISNULL(E.TAX_BASE, '0')
	</select>

	<select id="hpa990ukrServiceImpl.printDetailData" parameterType="Map" resultType="rMap">
		SELECT INCCODE
		     , INCOME_CNT
		     , INCOME_SUPP_TOTAL_I
		     , DEF_IN_TAX_I
		     , DEF_SP_TAX_I
		     , ADD_TAX_I
		     , RET_IN_TAX_I
		     , IN_TAX_I
		     , SP_TAX_I
		     , A.LOCAL_TAX_I
		     , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0) AS TOTAL_I
		     , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0)     AS TAX_AMOUNT_I
		     , CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0))              AS TAX_EXEMPTION_I
		     , B1.SCOUNT
		--     , C.LOCAL_TAX_GOV
		     , IN_TAX_I                                               AS A10
		     , ISNULL(Z3.sJuminAmt, 0)                                AS sJuminAmt
		     , ISNULL(B1.SCOUNT, 0) + CASE WHEN A.INCCODE = 'A03' THEN A.INCOME_CNT
		                                   ELSE 0
		       END                                                    AS A03_COUNT
		  FROM       HPA950T A WITH(NOLOCK)
		  LEFT JOIN (SELECT COMP_CODE
		                   , PAY_YYYYMM
		                   , SECT_CODE
		                   , (SUM(TAX_AMOUNT_I)) AS TAX_AMOUNT_I
		                   , (SUM(BONUS_TAX_I)) AS BONUS_TAX_I
		                FROM HPA600T WITH(NOLOCK)
		                WHERE PAY_YYYYMM = #{PAY_YYYYMM}
		               GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
		            ) B ON B.COMP_CODE  = A.COMP_CODE
		               AND B.SECT_CODE  = A.SECT_CODE
		--               AND A.INCCODE    = 'A01'
		  LEFT  JOIN (SELECT COUNT(X.PERSON_NUMB) AS SCOUNT
		                   , COMP_CODE
		                   , SECT_CODE
		                FROM (SELECT COMP_CODE
		                           , PAY_YYYYMM
		                           , SECT_CODE
		                           , PERSON_NUMB
		                        FROM HPA600T WITH(NOLOCK)
		                       WHERE PAY_YYYYMM = #{PAY_YYYYMM}
		                         AND (( PAY_GUBUN != '2') OR (PAY_GUBUN = '2' AND PAY_GUBUN2 = '2'))
		                       GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM, PERSON_NUMB) X
		               GROUP BY COMP_CODE, SECT_CODE
		                       ) B1 ON B1.COMP_CODE  = A.COMP_CODE
		                           AND B1.SECT_CODE  = A.SECT_CODE
		--                           AND A.INCCODE     = 'A01'
		  LEFT  JOIN (SELECT SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
		                   , A.COMP_CODE
		                   , C.SECT_CODE
		                   , A.PAY_YYYYMM
		                FROM       HPA800T A WITH(NOLOCK)
		                INNER JOIN HUM100T C WITH(NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
		                                                 AND A.PERSON_NUMB = C.PERSON_NUMB
		               GROUP BY A.COMP_CODE, C.SECT_CODE, A.PAY_YYYYMM) E ON E.COMP_CODE = A.COMP_CODE
		                                                                 AND E.SECT_CODE = A.SECT_CODE
		                                                                 AND E.PAY_YYYYMM = #{PAY_YYYYMM}
		--                                                                 AND A.INCCODE    = 'A01'
		   LEFT JOIN (SELECT COMP_CODE
		                    , PAY_YYYYMM
		                    , SECT_CODE
		                    , SUM(LOCAL_TAX_I) AS sJuminAmt
		                 FROM HPA950T WITH(NOLOCK)
		                WHERE COMP_CODE  = #{S_COMP_CODE}
		                  AND SECT_CODE  = #{DIV_CODE}
		                  AND PAY_YYYYMM = #{WORK_YYYYMM}
		                  AND INCCODE    IN ('A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A10')
		                  AND STATE_TYPE = '1'
		                GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
		             ) Z3 ON Z3.COMP_CODE  = A.COMP_CODE
		                 AND Z3.SECT_CODE  = A.SECT_CODE
		--  LEFT  JOIN (SELECT B.CODE_NAME AS LOCAL_TAX_GOV
		--                   , A.SECT_CODE
		--                   , A.COMP_CODE
		--                 FROM       HBS230T A WITH(NOLOCK)
		--                 INNER JOIN BSA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		--                                                  AND B.MAIN_CODE = 'H137'
		--                                                  AND B.SUB_CODE  = A.LOCAL_TAX_GOV) C ON C.COMP_CODE = A.COMP_CODE
		--                                                                                      AND C.SECT_CODE = A.SECT_CODE
		--                                                                                      AND A.INCCODE   = 'A01'
		 WHERE A.COMP_CODE  = #{S_COMP_CODE}
		   AND A.SECT_CODE  = #{DIV_CODE}
		   AND A.PAY_YYYYMM = #{WORK_YYYYMM}
		   AND A.STATE_TYPE = #{YEAR_TAX_FLAG}
	</select>

	<select id="hpa990ukrServiceImpl.refundedAaxAmt" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.printDetailData(환급세액 데이터 조회) */
		SELECT LAST_IN_TAX_I    AS LAST_IN_TAX_I
		     , BEFORE_IN_TAX_I  AS BEFORE_IN_TAX_I
		     , BAL_AMT          AS BAL_AMT
		     , RET_AMT          AS RET_AMT
		     , TRUST_AMT        AS TRUST_AMT
		     , ETC_AMT          AS ETC_AMT
		     , FIN_COMP_AMT     AS FIN_COMP_AMT
		     , MERGER_AMT       AS MERGER_AMT
		     , ROW_IN_TAX_I     AS ROW_IN_TAX_I
		     , TOTAL_IN_TAX_I   AS TOTAL_IN_TAX_I
		     , NEXT_IN_TAX_I    AS NEXT_IN_TAX_I
		     , RET_IN_TAX_I     AS RET_IN_TAX_I
		  FROM HPA951T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND SECT_CODE  = #{DIV_CODE}
		   AND PAY_YYYYMM = #{WORK_YYYYMM}
		   AND STATE_TYPE = #{YEAR_TAX_FLAG}
	</select>

	<select id="hpa990ukrServiceImpl.calResidentTax" parameterType="Map" resultType="rMap">
		/* hpa990ukrServiceImpl.residentTax(주민세 합계 계산) */
		SELECT SUM(ISNULL(Z.INCOME_CNT, 0))   AS INCOME_CNT
		     , SUM(ISNULL(Z.IN_TAX_I, 0))     AS IN_TAX_I
		     , SUM(ISNULL(Z.TAX, 0))          AS TAX
		  FROM (
		        SELECT A.INCCODE
		             , A.INCOME_CNT
		             , A.IN_TAX_I
		             , CASE WHEN A.INCCODE = 'A10' THEN sJuminAmt
		                 ELSE CASE WHEN ISNULL(A.IN_TAX_I, 0) > 0 THEN ROUND(A.IN_TAX_I * 0.1 / 10 - 0.5, 0) * 10
		                             ELSE 0
		                         END
		             END                            AS TAX
		          FROM HPA950T A WITH(NOLOCK)
		          LEFT JOIN (SELECT COMP_CODE
		                          , PAY_YYYYMM
		                          , SECT_CODE
		                          , SUM(LOCAL_TAX_I) AS sJuminAmt
		                       FROM HPA950T WITH(NOLOCK)
		                      WHERE COMP_CODE  = #{S_COMP_CODE}
		                        AND SECT_CODE  = #{DIV_CODE}
		                        AND PAY_YYYYMM = #{WORK_YYYYMM}
		                        AND INCCODE    IN ('A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A10')
		                        AND STATE_TYPE = '1'
		                      GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
		                  ) Z3 ON Z3.COMP_CODE  = A.COMP_CODE
		                      AND Z3.SECT_CODE  = A.SECT_CODE
		         WHERE A.COMP_CODE  = #{S_COMP_CODE}
		           AND A.SECT_CODE  = #{DIV_CODE}
		           AND A.PAY_YYYYMM = #{WORK_YYYYMM}
		           AND A.STATE_TYPE = '1'
		           AND A.INCCODE    IN ('A50', 'A60', 'A30', 'A10', 'A47', 'A40', 'A20', 'A69', 'A70', 'A80')
		  ) Z
	</select>

    <select id="hpa990ukrServiceImpl.printResidentNapTax" parameterType="Map" resultType="rMap">
        SELECT D.REPRE_NAME
             , D1.COMP_OWN_NO
             , D.DIV_FULL_NAME
             , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
             , D.ADDR
             , D.TELEPHON
             , B.CODE_NAME                      AS LOCAL_TAX_GOV_NAME
             , A.INCOME_CNT_04
             , A.NAP_IN_TAX_I_04
             , A.NAP_LOC_TAX_I_04
             , A.INCOME_CNT_05
             , A.NAP_IN_TAX_I_05
             , A.NAP_LOC_TAX_I_05
             , A.INCOME_CNT_06
             , A.NAP_IN_TAX_I_06
             , A.NAP_LOC_TAX_I_06
             , A.INCOME_CNT_01
             , A.NAP_IN_TAX_I_01
             , A.NAP_LOC_TAX_I_01
             , A.INCOME_CNT_12
             , A.NAP_IN_TAX_I_12
             , A.NAP_LOC_TAX_I_12
             , A.INCOME_CNT_08
             , A.NAP_IN_TAX_I_08
             , A.NAP_LOC_TAX_I_08
             , A.INCOME_CNT_07
             , A.NAP_IN_TAX_I_07
             , A.NAP_LOC_TAX_I_07
             , A.INCOME_CNT_16
             , A.NAP_IN_TAX_I_16
             , A.NAP_LOC_TAX_I_16
             , A.INCOME_CNT_17
             , A.NAP_IN_TAX_I_17
             , A.NAP_LOC_TAX_I_17
             , A.INCOME_CNT_18
             , A.NAP_IN_TAX_I_18
             , A.NAP_LOC_TAX_I_18
             , A.INCOME_CNT_19
             , A.NAP_IN_TAX_I_19
             , A.NAP_LOC_TAX_I_19
             , A.INCOME_CNT_15
             , A.NAP_IN_TAX_I_15
             , A.NAP_LOC_TAX_I_15
             , A.NAP_LOC_TAX_I_20
             , A.INCOME_CNT
             , A.NAP_IN_TAX_I
             , A.NAP_LOC_TAX_I
          FROM (SELECT COMP_CODE
                     , SECT_CODE
                     , BUSS_OFFICE_CODE
                     , LOCAL_TAX_GOV
                     , SUM(CASE WHEN CODE_GU = '04' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_04
                     , SUM(CASE WHEN CODE_GU = '04' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_04
                     , SUM(CASE WHEN CODE_GU = '04' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_04
                     , SUM(CASE WHEN CODE_GU = '05' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_05
                     , SUM(CASE WHEN CODE_GU = '05' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_05
                     , SUM(CASE WHEN CODE_GU = '05' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_05
                     , SUM(CASE WHEN CODE_GU = '06' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_06
                     , SUM(CASE WHEN CODE_GU = '06' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_06
                     , SUM(CASE WHEN CODE_GU = '06' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_06
                     , SUM(CASE WHEN CODE_GU = '01' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_01
                     , SUM(CASE WHEN CODE_GU = '01' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_01
                     , SUM(CASE WHEN CODE_GU = '01' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_01
                     , SUM(CASE WHEN CODE_GU = '12' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_12
                     , SUM(CASE WHEN CODE_GU = '12' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_12
                     , SUM(CASE WHEN CODE_GU = '12' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_12
                     , SUM(CASE WHEN CODE_GU = '08' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_08
                     , SUM(CASE WHEN CODE_GU = '08' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_08
                     , SUM(CASE WHEN CODE_GU = '08' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_08
                     , SUM(CASE WHEN CODE_GU = '07' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_07
                     , SUM(CASE WHEN CODE_GU = '07' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_07
                     , SUM(CASE WHEN CODE_GU = '07' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_07
                     , SUM(CASE WHEN CODE_GU = '16' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_16
                     , SUM(CASE WHEN CODE_GU = '16' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_16
                     , SUM(CASE WHEN CODE_GU = '16' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_16
                     , SUM(CASE WHEN CODE_GU = '17' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_17
                     , SUM(CASE WHEN CODE_GU = '17' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_17
                     , SUM(CASE WHEN CODE_GU = '17' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_17
                     , SUM(CASE WHEN CODE_GU = '18' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_18
                     , SUM(CASE WHEN CODE_GU = '18' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_18
                     , SUM(CASE WHEN CODE_GU = '18' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_18
                     , SUM(CASE WHEN CODE_GU = '19' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_19
                     , SUM(CASE WHEN CODE_GU = '19' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_19
                     , SUM(CASE WHEN CODE_GU = '19' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_19
                     , SUM(CASE WHEN CODE_GU = '15' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_15
                     , SUM(CASE WHEN CODE_GU = '15' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_15
                     , SUM(CASE WHEN CODE_GU = '15' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_15
                     , SUM(CASE WHEN CODE_GU = '20' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_20
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15')      THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15')      THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15','20') THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I
                  FROM HPA952T WITH (NOLOCK)
		         WHERE COMP_CODE  = #{S_COMP_CODE}
		           AND SECT_CODE  = #{DIV_CODE}
		           AND PAY_YYYYMM = #{WORK_YYYYMM}
		           AND STATE_TYPE = '1'
                 GROUP BY COMP_CODE, SECT_CODE, BUSS_OFFICE_CODE, LOCAL_TAX_GOV) A
               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                 AND B.MAIN_CODE = 'H137'
                                                 AND B.SUB_CODE  = A.LOCAL_TAX_GOV
               INNER JOIN BOR120T D  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                 AND D.DIV_CODE  = A.SECT_CODE 
               INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
    </select>

    <select id="hpa990ukrServiceImpl.printResidentEmployee" parameterType="Map" resultType="rMap">
        SELECT D.REPRE_NAME
             , D1.COMP_OWN_NO
             , D.DIV_FULL_NAME
             , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
             , D.ADDR
             , D.TELEPHON
             , B.CODE_NAME                      AS LOCAL_TAX_GOV_NAME
             , ISNULL(E.SCOUNT,0)               AS SCOUNT
             , ISNULL(F.TAX_EXEMPTION_I,0)      AS TAX_EXEMPTION_I
             , ISNULL(E.TAX_AMOUNT_I,0)         AS TAX_AMOUNT_I
             , ROUND(ISNULL(E.TAX_AMOUNT_I,0) * 0.005, 0) AS TAX_RATE_AMT
          FROM (SELECT COMP_CODE
                     , SECT_CODE
                     , BUSS_OFFICE_CODE
                     , LOCAL_TAX_GOV
                  FROM HPA952T WITH (NOLOCK)
		         WHERE COMP_CODE  = #{S_COMP_CODE}
		           AND SECT_CODE  = #{DIV_CODE}
		           AND PAY_YYYYMM = #{WORK_YYYYMM}
		           AND STATE_TYPE = '1'
                 GROUP BY COMP_CODE, SECT_CODE, BUSS_OFFICE_CODE, LOCAL_TAX_GOV) A
               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                 AND B.MAIN_CODE = 'H137'
                                                 AND B.SUB_CODE  = A.LOCAL_TAX_GOV
               INNER JOIN BOR120T D  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                 AND D.DIV_CODE  = A.SECT_CODE 
               INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
               LEFT  JOIN (SELECT A.COMP_CODE
                                , A.SECT_CODE
                                , B.BUSS_OFFICE_CODE
                                , COUNT(A.PERSON_NUMB) AS SCOUNT
                                , SUM(A.TAX_AMOUNT_I) + SUM(A.BONUS_TAX_I) AS TAX_AMOUNT_I
                             FROM            HPA600T A WITH(NOLOCK)
                                  INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                    AND B.PERSON_NUMB = A.PERSON_NUMB
                            WHERE A.COMP_CODE         = #{S_COMP_CODE}
                              AND A.SECT_CODE         = #{DIV_CODE}
                              AND A.PAY_YYYYMM        = #{WORK_YYYYMM}
                            GROUP BY A.COMP_CODE, A.SECT_CODE, B.BUSS_OFFICE_CODE) E ON E.COMP_CODE        = A.COMP_CODE
                                                                                    AND E.SECT_CODE        = A.SECT_CODE
                                                                                    AND E.BUSS_OFFICE_CODE = A.BUSS_OFFICE_CODE
               LEFT  JOIN (SELECT A.COMP_CODE
                                , B.SECT_CODE
                                , B.BUSS_OFFICE_CODE
                                , SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
                             FROM            HPA800T A WITH(NOLOCK)
                                  INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                   AND B.PERSON_NUMB = A.PERSON_NUMB
                            WHERE A.COMP_CODE  = #{S_COMP_CODE}
                              AND B.SECT_CODE  = #{DIV_CODE}
                              AND A.PAY_YYYYMM = #{WORK_YYYYMM}
                            GROUP BY A.COMP_CODE, B.SECT_CODE, B.BUSS_OFFICE_CODE) F ON F.COMP_CODE        = A.COMP_CODE
                                                                                    AND F.SECT_CODE        = A.SECT_CODE
                                                                                    AND F.BUSS_OFFICE_CODE = A.BUSS_OFFICE_CODE
    </select>

<!--	
	<update id="hpa990ukrServiceImpl.updateList2" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList2 */
		/* 부표 거주자 */
	UPDATE HPA950T 
	   SET INCOME_CNT = #{INCOME_CNT}
		  ,INCOME_SUPP_TOTAL_I = #{INCOME_SUPP_TOTAL_I}
		  ,DEF_IN_TAX_I = #{DEF_IN_TAX_I}		
	      ,DEF_SP_TAX_I = #{DEF_SP_TAX_I}
		  ,ADD_TAX_I = #{ADD_TAX_I}
		  ,RET_IN_TAX_I = #{RET_IN_TAX_I}
		  ,IN_TAX_I = #{IN_TAX_I}
		  ,SP_TAX_I = #{SP_TAX_I}
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND SECT_CODE = #{DIV_CODE}
	   AND PAY_YYYYMM = #{TAX_YYYYMM}
	   AND INCCODE = #{INCCODE}
	   AND STATE_TYPE = #{STATE_TYPE}
	</update>

	<insert id="hpa990ukrServiceImpl.insertList3" parameterType="rMap" >
		/* hpa990ukrServiceImpl.insertList3 */
		/* 부표 비거주자 */
	</insert>

	<update id="hpa990ukrServiceImpl.updateList3" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList3 */
		/* 부표 비거주자 */
	</update>

	<insert id="hpa990ukrServiceImpl.insertList4" parameterType="rMap" >
		/* hpa990ukrServiceImpl.insertList4 */
		/* 부표 법인원천 */
	</insert>

	<update id="hpa990ukrServiceImpl.updateList4" parameterType="rMap" >
		/* hpa990ukrServiceImpl.updateList4 */
		/* 부표 법인원천 */
	</update>
-->
</mapper>