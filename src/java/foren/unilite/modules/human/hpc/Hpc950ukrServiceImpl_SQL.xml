<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpc950ukrServiceImpl">
    <select id="hpc950ukrServiceImpl.selectDefaultTaxYM" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectDefaultTaxYM */
        DECLARE @CNT    INT
        
        SELECT @CNT = COUNT(1)
          FROM HBS130T WITH(NOLOCK)
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND TAX_YYYYMM  &lt;  (SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6))
         GROUP BY TAX_YYYYMM  
        
        IF @CNT > 0 
        BEGIN
            SELECT TOP 1 TAX_YYYYMM AS TAX_YYYYMM
              FROM HBS130T WITH(NOLOCK)
             WHERE COMP_CODE   = #{S_COMP_CODE}
               AND TAX_YYYYMM  &lt;  (SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6))
             GROUP BY TAX_YYYYMM 
        END
        ELSE
        BEGIN
            SELECT SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 1, 6) AS TAX_YYYYMM
        END
    </select>

    <select id="hpc950ukrServiceImpl.selectTaxYM" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectTaxYM */
        SELECT TOP 1 TAX_YYYYMM AS TAX_YYYYMM
          FROM HBS130T WITH(NOLOCK)
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND TAX_YYYYMM &lt; #{RPT_YYYYMM}
         GROUP BY TAX_YYYYMM 
         ORDER BY TAX_YYYYMM DESC 
    </select>

	<select id="hpc950ukrServiceImpl.selectSearchList" parameterType="Map" resultType="rMap">
		SELECT    A.SECT_CODE   AS DIV_CODE 
				, LEFT(A.RPT_YYYYMM,4)+'.'+RIGHT(A.RPT_YYYYMM,2)    AS RPT_YYYYMM   
				, LEFT(A.PAY_YYYYMM,4)+'.'+RIGHT(A.PAY_YYYYMM,2)    AS PAY_YYYYMM    
				, LEFT(A.SUPP_YYYYMM,4)+'.'+RIGHT(A.SUPP_YYYYMM,2)  AS SUPP_YYYYMM
				, A.ALL_DIV_YN 
				, A.CLOSE_YN   
				, C.LAST_IN_TAX_I           -- 전월미환급세액
				, C.NEXT_IN_TAX_I           -- 이월환급세액
				, B.IN_TAX_I AS TAX_AMOUNT  -- 납부세액
				, A.WORK_YN    
				, A.WORK_DATE  
				, A.HOMETEX_ID 
				, A.TAX_BASE_YN
		  FROM       HPC959T  A WITH(NOLOCK)
		  INNER JOIN HPC950T  B WITH(NOLOCK)  ON B.COMP_CODE 	= A.COMP_CODE
		                                     AND B.SECT_CODE  	= A.SECT_CODE
		                                     AND B.RPT_YYYYMM	= A.RPT_YYYYMM
		                                     AND B.PAY_YYYYMM	= A.PAY_YYYYMM
		                                     AND B.SUPP_YYYYMM	= A.SUPP_YYYYMM
		                                     AND B.STATE_TYPE	= A.STATE_TYPE
		                                     AND B.INCCODE      = 'A99'
		  INNER JOIN HPC951T  C WITH(NOLOCK)  ON C.COMP_CODE 	= A.COMP_CODE
		                                     AND C.SECT_CODE  	= A.SECT_CODE
		                                     AND C.RPT_YYYYMM	= A.RPT_YYYYMM
		                                     AND C.PAY_YYYYMM	= A.PAY_YYYYMM
		                                     AND C.SUPP_YYYYMM	= A.SUPP_YYYYMM
		                                     AND C.STATE_TYPE	= A.STATE_TYPE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.SECT_CODE   = #{DIV_CODE}
           <if test="@foren.Ognl@isNotEmpty(RPT_YYYYMM_FR)">
           AND A.RPT_YYYYMM  &gt;= #{RPT_YYYYMM_FR}
           </if>
           <if test="@foren.Ognl@isNotEmpty(RPT_YYYYMM_TO)">
           AND A.RPT_YYYYMM  &lt;= #{RPT_YYYYMM_TO}       
           </if>
          ORDER BY A.RPT_YYYYMM DESC, A.PAY_YYYYMM
	</select>
	<select id="hpc950ukrServiceImpl.selectStatus" parameterType="Map" resultType="rMap">
		SELECT    ALL_DIV_YN 
				, CLOSE_YN   
				, WORK_YN    
				, WORK_DATE  
				, HOMETEX_ID 
				, TAX_BASE_YN
		  FROM HPC959T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
	</select>
    <select id="hpc950ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectList1*/
		SELECT A.COMP_CODE
		     , A.SECT_CODE
		     , A.RPT_YYYYMM
             , A.PAY_YYYYMM
             , A.SUPP_YYYYMM
             , A.STATE_TYPE
             , A.INCGUBN
             , A.INCCODE
             , A.INCOME_CNT
             , A.INCOME_SUPP_TOTAL_I
             , A.DEF_IN_TAX_I
             , A.DEF_SP_TAX_I    
             , A.ADD_TAX_I
             , A.RET_IN_TAX_I
             , A.IN_TAX_I
             , A.SP_TAX_I
             , B.COL_EDIT4
             , B.COL_EDIT5
             , B.COL_EDIT6
             , B.COL_EDIT7
             , B.COL_EDIT8
             , B.COL_EDIT9
             , B.COL_EDIT10
             , B.COL_EDIT11
          FROM           HPC950T A WITH(NOLOCK)
               LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                               AND B.TAX_CODE   = A.INCCODE  
                                               AND B.TAX_YYYYMM = #{TAX_YYYYMM}
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.SECT_CODE   = #{DIV_CODE}
           AND A.RPT_YYYYMM  = #{RPT_YYYYMM}
           AND A.PAY_YYYYMM  = #{PAY_YYYYMM}
           AND A.SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND A.STATE_TYPE  = #{STATE_TYPE}
           AND A.INCCODE  LIKE 'A%'
         ORDER BY B.SORT_SEQ
    </select>

    <select id="hpc950ukrServiceImpl.selectList1_2" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectList1_2*/
        SELECT COMP_CODE
             , SECT_CODE
		     , RPT_YYYYMM
             , PAY_YYYYMM
             , SUPP_YYYYMM
             , STATE_TYPE
             , LAST_IN_TAX_I
             , BEFORE_IN_TAX_I
             , BAL_AMT
             , RET_AMT
             , TRUST_AMT
             , ETC_AMT
             , FIN_COMP_AMT
             , MERGER_AMT
             , ROW_IN_TAX_I
             , TOTAL_IN_TAX_I
             , NEXT_IN_TAX_I
             , RET_IN_TAX_I
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
          FROM HPC951T WITH(NOLOCK)
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
    </select>

    <select id="hpc950ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectList2 부표 거주자 */
        IF NOT EXISTS (SELECT TOP 1 A.COMP_CODE
                         FROM           HPC950T A WITH(NOLOCK)
                              LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                              AND B.TAX_CODE   = A.INCCODE  
                                                              AND B.TAX_YYYYMM = #{TAX_YYYYMM}
                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
                          AND A.SECT_CODE    = #{DIV_CODE}
                          AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
                          AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
                          AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
                          AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
                          AND A.STATE_TYPE   = #{STATE_TYPE}
                          AND A.INCCODE   LIKE 'C%'
                          AND B.REF_CODE3    = 'A')
        BEGIN
            SELECT COMP_CODE
                 , #{DIV_CODE} 		AS SECT_CODE
                 , #{RPT_YYYYMM} 	AS RPT_YYYYMM
                 , #{PAY_YYYYMM} 	AS PAY_YYYYMM
                 , #{SUPP_YYYYMM} 	AS SUPP_YYYYMM
                 , #{STATE_TYPE}  	AS STATE_TYPE
                 , TAX_CODE_NAME  	AS INCGUBN
                 , TAX_CODE       	AS INCCODE
                 , 0 				AS INCOME_CNT
                 , 0 				AS INCOME_SUPP_TOTAL_I
                 , 0 				AS DEF_IN_TAX_I
                 , 0 				AS DEF_SP_TAX_I    
                 , 0 				AS ADD_TAX_I
                 , 0 				AS RET_IN_TAX_I
                 , 0 				AS IN_TAX_I
                 , 0 				AS SP_TAX_I
                 , COL_EDIT4
                 , COL_EDIT5
                 , COL_EDIT6
                 , COL_EDIT7
                 , COL_EDIT8
                 , COL_EDIT9
                 , COL_EDIT10
                 , COL_EDIT11
                 , 'Y' 				AS INSERT_FLAG
              FROM HBS130T WITH(NOLOCK)
             WHERE COMP_CODE    = #{S_COMP_CODE}
               AND TAX_YYYYMM   = #{TAX_YYYYMM}
               AND TAX_CODE  LIKE 'C%'
               AND REF_CODE3    = 'A'
             ORDER BY SORT_SEQ
        END
        ELSE
        BEGIN
            SELECT A.COMP_CODE
                 , A.SECT_CODE
                 , A.RPT_YYYYMM
                 , A.PAY_YYYYMM
                 , A.SUPP_YYYYMM
                 , A.STATE_TYPE
                 , A.INCGUBN
                 , A.INCCODE
                 , A.INCOME_CNT
                 , A.INCOME_SUPP_TOTAL_I
                 , A.DEF_IN_TAX_I
                 , A.DEF_SP_TAX_I    
                 , A.ADD_TAX_I
                 , A.RET_IN_TAX_I
                 , A.IN_TAX_I
                 , A.SP_TAX_I
                 , B.COL_EDIT4
                 , B.COL_EDIT5
                 , B.COL_EDIT6
                 , B.COL_EDIT7
                 , B.COL_EDIT8
                 , B.COL_EDIT9
                 , B.COL_EDIT10
                 , B.COL_EDIT11
                 , 'N' AS INSERT_FLAG
              FROM           HPC950T A WITH(NOLOCK)
                   LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                   AND B.TAX_CODE   = A.INCCODE  
                                                   AND B.TAX_YYYYMM = #{TAX_YYYYMM}
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
               AND A.SECT_CODE    = #{DIV_CODE}
               AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
               AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
               AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
               AND A.STATE_TYPE   = #{STATE_TYPE}
               AND A.INCCODE   LIKE 'C%'
               AND B.REF_CODE3    = 'A'
            ORDER BY B.SORT_SEQ
        END
    </select>

    <select id="hpc950ukrServiceImpl.selectList3" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectList3 부표 비거주자 */
        IF NOT EXISTS (SELECT TOP 1 A.COMP_CODE
                         FROM           HPC950T A WITH(NOLOCK)
                              LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                              AND B.TAX_CODE   = A.INCCODE  
                                                              AND B.TAX_YYYYMM = #{TAX_YYYYMM}
                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
                          AND A.SECT_CODE    = #{DIV_CODE}
                          AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
                          AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
                          AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
                          AND A.STATE_TYPE   = #{STATE_TYPE}
                          AND A.INCCODE   LIKE 'C%'
                          AND B.REF_CODE3    = 'B')
        BEGIN
            SELECT COMP_CODE
                 , #{DIV_CODE} 		AS SECT_CODE
                 , #{RPT_YYYYMM} 	AS RPT_YYYYMM
                 , #{PAY_YYYYMM} 	AS PAY_YYYYMM
                 , #{SUPP_YYYYMM} 	AS SUPP_YYYYMM
                 , #{STATE_TYPE}  	AS STATE_TYPE
                 , TAX_CODE_NAME  	AS INCGUBN
                 , TAX_CODE       	AS INCCODE
                 , 0 				AS INCOME_CNT
                 , 0 				AS INCOME_SUPP_TOTAL_I
                 , 0 				AS DEF_IN_TAX_I
                 , 0 				AS DEF_SP_TAX_I    
                 , 0 				AS ADD_TAX_I
                 , 0 				AS RET_IN_TAX_I
                 , 0 				AS IN_TAX_I
                 , 0 				AS SP_TAX_I
                 , COL_EDIT4
                 , COL_EDIT5
                 , COL_EDIT6
                 , COL_EDIT7
                 , COL_EDIT8
                 , COL_EDIT9
                 , COL_EDIT10
                 , COL_EDIT11
                 , 'Y' 				AS INSERT_FLAG
              FROM HBS130T WITH(NOLOCK)
             WHERE COMP_CODE    = #{S_COMP_CODE}
               AND TAX_YYYYMM   = #{TAX_YYYYMM}
               AND TAX_CODE  LIKE 'C%'
               AND REF_CODE3    = 'B'
        END
        ELSE
        BEGIN
            SELECT A.COMP_CODE
                 , A.SECT_CODE
                 , A.RPT_YYYYMM
                 , A.PAY_YYYYMM
                 , A.SUPP_YYYYMM
                 , A.STATE_TYPE
                 , A.INCGUBN
                 , A.INCCODE
                 , A.INCOME_CNT
                 , A.INCOME_SUPP_TOTAL_I
                 , A.DEF_IN_TAX_I
                 , A.DEF_SP_TAX_I    
                 , A.ADD_TAX_I
                 , A.RET_IN_TAX_I
                 , A.IN_TAX_I
                 , A.SP_TAX_I
                 , B.COL_EDIT4
                 , B.COL_EDIT5
                 , B.COL_EDIT6
                 , B.COL_EDIT7
                 , B.COL_EDIT8
                 , B.COL_EDIT9
                 , B.COL_EDIT10
                 , B.COL_EDIT11
                 , 'N' AS INSERT_FLAG
              FROM           HPC950T A WITH(NOLOCK)
                   LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                   AND B.TAX_CODE   = A.INCCODE  
                                                   AND B.TAX_YYYYMM = #{TAX_YYYYMM}
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
               AND A.SECT_CODE    = #{DIV_CODE}
               AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
               AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
               AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
               AND A.STATE_TYPE   = #{STATE_TYPE}
               AND A.INCCODE   LIKE 'C%'
               AND B.REF_CODE3    = 'B'
            ORDER BY B.SORT_SEQ
        END
    </select>

    <select id="hpc950ukrServiceImpl.selectList4" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.selectList4 부표 법인원천 */
        IF NOT EXISTS (SELECT TOP 1 A.COMP_CODE
                         FROM           HPC950T A WITH(NOLOCK)
                              LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                              AND B.TAX_CODE   = A.INCCODE  
                                                              AND B.TAX_YYYYMM = #{TAX_YYYYMM}
                        WHERE A.COMP_CODE    = #{S_COMP_CODE}
                          AND A.SECT_CODE    = #{DIV_CODE}
                          AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
                          AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
                          AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
                          AND A.STATE_TYPE   = #{STATE_TYPE}
                          AND A.INCCODE   LIKE 'C%'
                          AND B.REF_CODE3    = 'C')
        BEGIN
            SELECT COMP_CODE
                 , #{DIV_CODE} 		AS SECT_CODE
                 , #{RPT_YYYYMM} 	AS RPT_YYYYMM
                 , #{PAY_YYYYMM} 	AS PAY_YYYYMM
                 , #{SUPP_YYYYMM} 	AS SUPP_YYYYMM
                 , #{STATE_TYPE}  	AS STATE_TYPE
                 , TAX_CODE_NAME  	AS INCGUBN
                 , TAX_CODE       	AS INCCODE
                 , 0 				AS INCOME_CNT
                 , 0 				AS INCOME_SUPP_TOTAL_I
                 , 0 				AS DEF_IN_TAX_I
                 , 0 				AS DEF_SP_TAX_I    
                 , 0 				AS ADD_TAX_I
                 , 0 				AS RET_IN_TAX_I
                 , 0 				AS IN_TAX_I
                 , 0 				AS SP_TAX_I
                 , COL_EDIT4
                 , COL_EDIT5
                 , COL_EDIT6
                 , COL_EDIT7
                 , COL_EDIT8
                 , COL_EDIT9
                 , COL_EDIT10
                 , COL_EDIT11
                 , 'Y' 				AS INSERT_FLAG
              FROM HBS130T WITH(NOLOCK)
             WHERE COMP_CODE    = #{S_COMP_CODE}
               AND TAX_YYYYMM   = #{TAX_YYYYMM}
               AND TAX_CODE  LIKE 'C%'
               AND REF_CODE3    = 'C'
        END
        ELSE
        BEGIN
            SELECT A.COMP_CODE
                 , A.SECT_CODE
                 , A.RPT_YYYYMM
                 , A.PAY_YYYYMM
                 , A.SUPP_YYYYMM
                 , A.STATE_TYPE
                 , A.INCGUBN
                 , A.INCCODE
                 , A.INCOME_CNT
                 , A.INCOME_SUPP_TOTAL_I
                 , A.DEF_IN_TAX_I
                 , A.DEF_SP_TAX_I    
                 , A.ADD_TAX_I
                 , A.RET_IN_TAX_I
                 , A.IN_TAX_I
                 , A.SP_TAX_I
                 , B.COL_EDIT4
                 , B.COL_EDIT5
                 , B.COL_EDIT6
                 , B.COL_EDIT7
                 , B.COL_EDIT8
                 , B.COL_EDIT9
                 , B.COL_EDIT10
                 , B.COL_EDIT11
                 , 'N' AS INSERT_FLAG
              FROM           HPC950T A WITH(NOLOCK)
                   LEFT JOIN HBS130T B WITH(NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                   AND B.TAX_CODE   = A.INCCODE  
                                                   AND B.TAX_YYYYMM = #{TAX_YYYYMM}
             WHERE A.COMP_CODE    = #{S_COMP_CODE}
               AND A.SECT_CODE    = #{DIV_CODE}
               AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
               AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
               AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
               AND A.STATE_TYPE   = #{STATE_TYPE}
               AND A.INCCODE   LIKE 'C%'
               AND B.REF_CODE3    = 'C'
            ORDER BY B.SORT_SEQ
        END
    </select>    

    <select id="hpc950ukrServiceImpl.createData" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.createData */
        DECLARE @JSON_PARAM    	NVARCHAR(2000)
              , @ERROR_DESC   	NVARCHAR(2000) 
              
        SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","SECT_CODE":"${DIV_CODE}","RPT_YYYYMM":"${RPT_YYYYMM}","PAY_YYYYMM":"${PAY_YYYYMM}","SUPP_YYYYMM":"${SUPP_YYYYMM}","STATE_TYPE":"${STATE_TYPE}","ALL_DIV_YN":"${ALL_DIV_YN}","USER_ID":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
        EXEC uniLITE.USP_HUMAN_HPC950UKR @JSON_PARAM ,  @ERROR_DESC OUTPUT

        SELECT ISNULL(@ERROR_DESC, '') AS ERROR_DESC
    </select>
    
    <select id="hpc950ukrServiceImpl.createFileExec" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.createData */
        DECLARE @JSON_PARAM    	NVARCHAR(2000)
              , @ERROR_DESC   	NVARCHAR(2000) 
              , @ReturnText     NVARCHAR(MAX) 

        SET @JSON_PARAM = '{"COMP_CODE":"${S_COMP_CODE}","SECT_CODE":"${DIV_CODE}","RPT_YYYYMM":"${RPT_YYYYMM}","PAY_YYYYMM":"${PAY_YYYYMM}","SUPP_YYYYMM":"${SUPP_YYYYMM}","STATE_TYPE":"${STATE_TYPE}","WORK_DATE":"${WORK_DATE}","HOMETAX_ID":"${HOMETAX_ID}","USER_ID":"${S_USER_ID}","LANG_TYPE":"${S_LANG_CODE}"}'
        EXEC uniLITE.USP_HUMAN_HPC950UKR_Hometax  @JSON_PARAM ,  @ReturnText OUTPUT,  @ERROR_DESC OUTPUT

        SELECT ISNULL(@ERROR_DESC, '') AS ERROR_DESC, ISNULL(@ReturnText, '') AS RETURN_TEXT
    </select>

    <select id="hpc950ukrServiceImpl.checkCloseYn" parameterType="Map" resultType="rMap">
        SELECT CLOSE_YN   
		  FROM HPC959T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
           AND CLOSE_YN    = 'Y'
    </select>

    <update id="hpc950ukrServiceImpl.updateList" parameterType="rMap" >
        /* hpc950ukrServiceImpl.updateList */
        UPDATE HPC950T 
           SET INCOME_CNT          = ISNULL(#{INCOME_CNT}			, 0)
             , INCOME_SUPP_TOTAL_I = ISNULL(#{INCOME_SUPP_TOTAL_I}	, 0)
             , DEF_IN_TAX_I        = ISNULL(#{DEF_IN_TAX_I}        	, 0)
             , DEF_SP_TAX_I        = ISNULL(#{DEF_SP_TAX_I}			, 0)
             , ADD_TAX_I           = ISNULL(#{ADD_TAX_I}			, 0)
             , RET_IN_TAX_I        = ISNULL(#{RET_IN_TAX_I}			, 0)
             , IN_TAX_I            = ISNULL(#{IN_TAX_I}				, 0)
             , SP_TAX_I            = ISNULL(#{SP_TAX_I}				, 0)
             , UPDATE_DB_USER      = #{S_USER_ID}
             , UPDATE_DB_TIME      = GETDATE()
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{SECT_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
           AND INCCODE     = #{INCCODE}
    </update>    

    <update id="hpc950ukrServiceImpl.updateList1_2" parameterType="rMap" >
        /* hpc950ukrServiceImpl.updateList1_2 */
        UPDATE HPC951T
           SET LAST_IN_TAX_I   = ISNULL(#{LAST_IN_TAX_I}	, 0)
             , BEFORE_IN_TAX_I = ISNULL(#{BEFORE_IN_TAX_I}	, 0)
             , BAL_AMT         = ISNULL(#{BAL_AMT}			, 0)
             , RET_AMT         = ISNULL(#{RET_AMT}			, 0)
             , TRUST_AMT       = ISNULL(#{TRUST_AMT}		, 0)
             , ETC_AMT         = ISNULL(#{ETC_AMT}			, 0)
             , FIN_COMP_AMT    = ISNULL(#{FIN_COMP_AMT}		, 0)
             , MERGER_AMT      = ISNULL(#{MERGER_AMT}		, 0)
             , ROW_IN_TAX_I    = ISNULL(#{ROW_IN_TAX_I}		, 0)
             , TOTAL_IN_TAX_I  = ISNULL(#{TOTAL_IN_TAX_I}	, 0)
             , NEXT_IN_TAX_I   = ISNULL(#{NEXT_IN_TAX_I}	, 0)
             , RET_IN_TAX_I    = ISNULL(#{RET_IN_TAX_I}		, 0)
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{SECT_CODE} 
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
    </update>

    <update id="hpc950ukrServiceImpl.deleteList" parameterType="rMap" >
        /* hpc950ukrServiceImpl.updateList */
         DELETE FROM HPC950T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
           
         DELETE FROM HPC951T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE} 
           
         DELETE FROM HPC952T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}   
         
         DELETE FROM HPC959T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}   
    </update>    
	<update id="hpc950ukrServiceImpl.updateClose" parameterType="Map">
		UPDATE HPC959T
		   SET CLOSE_YN = #{CLOSE_YN}
		     , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
		 WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
	       AND RPT_YYYYMM  = #{RPT_YYYYMM}
	       AND PAY_YYYYMM  = #{PAY_YYYYMM}
	       AND SUPP_YYYYMM = #{SUPP_YYYYMM}
	       AND STATE_TYPE  = #{STATE_TYPE}
	</update>


    <select id="hpc950ukrServiceImpl.printExcel1" parameterType="Map" resultType="rMap">
    --hpc950ukrServiceImpl.printExcel-1 
        SELECT D.DIV_CODE AS DIV_CODE
         , D.DIV_NAME AS DIV_NAME
         , D.DIV_FULL_NAME AS DIV_FULL_NAME
         , D1.COMP_OWN_NO
         , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
         , D.REPRE_NAME
         , unilite.fnCipherDecrypt(D.REPRE_NO, 'AA')  AS REPRE_NO
         , D.COMP_CLASS
         , D.COMP_TYPE
         , D.ZIP_CODE
         , D.ADDR
         , D.TELEPHON
         , D.FAX_NUM
         , D.SAFFER_TAX
         , D.SAFFER_TAX_NM
         , (SELECT REF_CODE1
              FROM BSA100T
             WHERE COMP_CODE = D.COMP_CODE 
               AND MAIN_CODE = 'A080'
               AND SUB_CODE  = D.SAFFER_TAX) AS SAFFER_BANK_NUM
         , D.EMAIL
         , D.TAX_NAME
         , SUBSTRING(D.TAX_NUM,1,3) + '-' + SUBSTRING(D.TAX_NUM,4,2) + '-' + SUBSTRING(D.TAX_NUM,6,5) AS TAX_NUM
         , D.TAX_TEL
         , INCCODE
         , INCOME_CNT
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, INCOME_SUPP_TOTAL_I) AS MONEY), 1), '.00', '')    AS INCOME_SUPP_TOTAL_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, DEF_IN_TAX_I) AS MONEY), 1), '.00', '')            AS DEF_IN_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, DEF_SP_TAX_I) AS MONEY), 1), '.00', '')            AS DEF_SP_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ADD_TAX_I) AS MONEY), 1), '.00', '')                AS ADD_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_IN_TAX_I)    AS MONEY), 1), '.00', '')            AS RET_IN_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', '')                AS IN_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, SP_TAX_I)    AS MONEY), 1), '.00', '')                AS SP_TAX_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, A.LOCAL_TAX_I) AS MONEY), 1), '.00', '')            AS LOCAL_TAX_I
         
         , INCOME_SUPP_TOTAL_I
         , DEF_IN_TAX_I
         , DEF_SP_TAX_I
         , ADD_TAX_I
         , RET_IN_TAX_I
         , IN_TAX_I
         , SP_TAX_I
         , A.LOCAL_TAX_I
         
         , TAX_NAME
         , TAX_NUM
         , CASE WHEN TAX_TEL IS NULL THEN HANDPHONE
                ELSE TAX_TEL
                END AS TAX_TEL
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0)) AS MONEY), 1), '.00', '') AS TOTAL_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0)) AS MONEY), 1), '.00', '') AS TAX_AMOUNT_I
         --, REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0)) AS MONEY), 1), '.00', '')                        AS TAX_EXEMPTION_I 
         
         , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0) AS TOTAL_I
         , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0)                                 AS TAX_AMOUNT_I
         --, ISNULL(E.TAX_EXEMPTION_I,0)                                                        AS TAX_EXEMPTION_I
         , CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0))                                                        AS TAX_EXEMPTION_I  
         
         , B1.SCOUNT
         , C.LOCAL_TAX_GOV
         --, 'aaaaa' as LOCAL_TAX_GOV
         
         --,CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', ''))) AS A10
         , IN_TAX_I AS A10
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 1, 1) AS A10_1
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 2, 1) AS A10_2
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 3, 1) AS A10_3
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 4, 1) AS A10_4
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 5, 1) AS A10_5
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 6, 1) AS A10_6
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 7, 1) AS A10_7
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 8, 1) AS A10_8
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 9, 1) AS A10_9
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 10, 1) AS A10_10
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 11, 1) AS A10_11
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 12, 1) AS A10_12
        -- , SUBSTRING(RIGHT(('0000000000000' + CONVERT(NVARCHAR(13), CONVERT(INT, REPLACE(REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, IN_TAX_I)    AS MONEY), 1), '.00', ''), ',', '')))), 13), 13, 1) AS A10_13
      FROM            BOR120T D 
           INNER JOIN HPC950T  A ON D.COMP_CODE      = A.COMP_CODE
                                AND D.DIV_CODE       = A.SECT_CODE 
           LEFT JOIN (SELECT COMP_CODE
                            , PAY_YYYYMM
                            , SECT_CODE
                            , (SUM(TAX_AMOUNT_I)) AS TAX_AMOUNT_I
                            , (SUM(BONUS_TAX_I)) AS BONUS_TAX_I
                         FROM HPA600T
                         WHERE PAY_YYYYMM = #{PAY_YYYYMM}
                        GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM
                     ) B ON B.COMP_CODE  = A.COMP_CODE
                        AND B.SECT_CODE  = A.SECT_CODE
                        AND A.INCCODE    = 'A01'
           LEFT  JOIN (SELECT COUNT(X.PERSON_NUMB) AS SCOUNT
                            , COMP_CODE
                            , SECT_CODE
                         FROM (SELECT COMP_CODE
                                    , PAY_YYYYMM
                                    , SECT_CODE
                                    , PERSON_NUMB
                                 FROM HPA600T
                                WHERE PAY_YYYYMM = #{PAY_YYYYMM}
                                  AND (( PAY_GUBUN != '2') OR (PAY_GUBUN = '2' AND PAY_GUBUN2 = '2')) 
                                GROUP BY COMP_CODE, SECT_CODE, PAY_YYYYMM, PERSON_NUMB) X
                        GROUP BY COMP_CODE, SECT_CODE
                                ) B1 ON B1.COMP_CODE  = A.COMP_CODE
                                    AND B1.SECT_CODE  = A.SECT_CODE
                                    AND A.INCCODE     = 'A01'  
           LEFT  JOIN (SELECT SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
                            , A.COMP_CODE
                            , C.SECT_CODE
                            , A.PAY_YYYYMM
                         FROM HPA800T A INNER JOIN HUM100T C
                                           ON A.COMP_CODE = C.COMP_CODE
                                          AND A.PERSON_NUMB = C.PERSON_NUMB
                        GROUP BY A.COMP_CODE, C.SECT_CODE, A.PAY_YYYYMM) E ON D.COMP_CODE = A.COMP_CODE
                                                                          AND E.SECT_CODE = A.SECT_CODE
                                                                          AND E.PAY_YYYYMM = #{PAY_YYYYMM}
                                                                          AND A.INCCODE    = 'A01' 
           LEFT  JOIN (SELECT B.CODE_NAME AS LOCAL_TAX_GOV
                            , A.SECT_CODE
                            , A.COMP_CODE
                          FROM HBS230T A 
                               INNER JOIN BSA100T B ON B.COMP_CODE = A.COMP_CODE
                                                   AND B.MAIN_CODE = 'H137'
                                                   AND B.SUB_CODE  = A.LOCAL_TAX_GOV) C ON C.COMP_CODE = A.COMP_CODE
                                                                                       AND C.SECT_CODE = A.SECT_CODE
                                                                                       AND A.INCCODE    = 'A01'
            INNER JOIN BOR100T D1 ON D.COMP_CODE = D1.COMP_CODE
     WHERE A.COMP_CODE  = #{S_COMP_CODE}
       AND A.SECT_CODE    = #{DIV_CODE}
       AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
       AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
       AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
       AND A.STATE_TYPE   = #{STATE_TYPE}
    </select>

    <select id="hpc950ukrServiceImpl.printExcel2" parameterType="Map" resultType="rMap">
    --hpc950ukrServiceImpl.printExcel2
    --SELECT REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, LAST_IN_TAX_I) AS MONEY), 1), '.00', '')     AS LAST_IN_TAX_I
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, BEFORE_IN_TAX_I) AS MONEY), 1), '.00', '') AS BEFORE_IN_TAX_I
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, BAL_AMT) AS MONEY), 1), '.00', '')         AS BAL_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_AMT) AS MONEY), 1), '.00', '')         AS RET_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, TRUST_AMT) AS MONEY), 1), '.00', '')         AS TRUST_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ETC_AMT) AS MONEY), 1), '.00', '')         AS ETC_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, FIN_COMP_AMT) AS MONEY), 1), '.00', '')     AS FIN_COMP_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, MERGER_AMT) AS MONEY), 1), '.00', '')         AS MERGER_AMT
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, ROW_IN_TAX_I) AS MONEY), 1), '.00', '')     AS ROW_IN_TAX_I
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, TOTAL_IN_TAX_I) AS MONEY), 1), '.00', '')     AS TOTAL_IN_TAX_I
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, NEXT_IN_TAX_I) AS MONEY), 1), '.00', '')     AS NEXT_IN_TAX_I
    --     , REPLACE(CONVERT(VARCHAR(50), CAST(CONVERT(INT, RET_IN_TAX_I) AS MONEY), 1), '.00', '')     AS RET_IN_TAX_I
         
    SELECT LAST_IN_TAX_I      AS LAST_IN_TAX_I
         , BEFORE_IN_TAX_I  AS BEFORE_IN_TAX_I
         , BAL_AMT          AS BAL_AMT
         , RET_AMT          AS RET_AMT
         , TRUST_AMT          AS TRUST_AMT
         , ETC_AMT          AS ETC_AMT
         , FIN_COMP_AMT      AS FIN_COMP_AMT
         , MERGER_AMT          AS MERGER_AMT
         , ROW_IN_TAX_I      AS ROW_IN_TAX_I
         , TOTAL_IN_TAX_I      AS TOTAL_IN_TAX_I
         , NEXT_IN_TAX_I      AS NEXT_IN_TAX_I
         , RET_IN_TAX_I      AS RET_IN_TAX_I
      FROM HPC951T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND SECT_CODE    = #{DIV_CODE}
       AND RPT_YYYYMM   = #{RPT_YYYYMM}
       AND PAY_YYYYMM   = #{PAY_YYYYMM}
       AND SUPP_YYYYMM  = #{SUPP_YYYYMM}
       AND STATE_TYPE   = #{STATE_TYPE}
    </select>

<!-- 20200818 CLIP REPORT 출력관련 로직 추가 -->
    <select id="hpc950ukrServiceImpl.printMainData" parameterType="Map" resultType="rMap">
		--hpc950ukrServiceImpl.printClipReport
        SELECT D.DIV_CODE                                             AS DIV_CODE
             , D.DIV_NAME                                             AS DIV_NAME
             , D.DIV_FULL_NAME                                        AS DIV_FULL_NAME
             , D1.COMP_OWN_NO
             , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
             , D.REPRE_NAME
             , unilite.fnCipherDecrypt(D.REPRE_NO, 'AA')              AS REPRE_NO
             , D.COMP_CLASS
             , D.COMP_TYPE
             , D.ZIP_CODE
             , D.ADDR
             , D.TELEPHON
             , D.FAX_NUM
             , D.SAFFER_TAX
             , D.SAFFER_TAX_NM
             , (SELECT REF_CODE1
                  FROM BSA100T WITH(NOLOCK)
                 WHERE COMP_CODE = D.COMP_CODE 
                   AND MAIN_CODE = 'A080'
                   AND SUB_CODE  = D.SAFFER_TAX)                      AS SAFFER_BANK_NUM
             , D.EMAIL
             , D.TAX_NAME
             , SUBSTRING(D.TAX_NUM,1,3) + '-' + SUBSTRING(D.TAX_NUM,4,2) + '-' + SUBSTRING(D.TAX_NUM,6,5) AS TAX_NUM
             , CASE WHEN TAX_TEL IS NULL THEN HANDPHONE
                    ELSE TAX_TEL
               END                                                    AS TAX_TEL
             , CASE WHEN ISNULL(Z1.INCOME_CNT, 0) = 0 THEN 'N'
                    ELSE 'Y'
               END                                                    AS A04_INCOME_CNT_CHCK
             , CASE WHEN ISNULL(Z2.INCOME_CNT, 0) = 0 THEN 'N'
                    ELSE 'Y'
               END                                                    AS BUPYO_CNT_CHCK
             , ''                                                     AS LOCAL_TAX_GOV
             , CASE WHEN ISNULL(E.TAX_BASE, '0') != '5' THEN 'N'
                    ELSE 'Y'
               END                                                    AS TAX_BASE_CHCK
          FROM            BOR120T D  WITH(NOLOCK)
               INNER JOIN HPC950T A  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                 AND D.DIV_CODE  = A.SECT_CODE 
               INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
               LEFT  JOIN ABA100T E  WITH(NOLOCK) ON A.COMP_CODE = E.COMP_CODE
               LEFT  JOIN (SELECT COMP_CODE
                                , SECT_CODE
                                , SUM(INCOME_CNT) AS INCOME_CNT
                             FROM HPC950T WITH(NOLOCK)
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND SECT_CODE   = #{DIV_CODE}
                              AND RPT_YYYYMM  = #{RPT_YYYYMM}
                              AND PAY_YYYYMM  = #{PAY_YYYYMM}
                              AND SUPP_YYYYMM = #{SUPP_YYYYMM}
                              AND STATE_TYPE  = '0'
                              AND INCCODE     = 'A04'
                            GROUP BY COMP_CODE, SECT_CODE) Z1 ON Z1.COMP_CODE = A.COMP_CODE
                                                             AND Z1.SECT_CODE = A.SECT_CODE
               LEFT  JOIN (SELECT COMP_CODE
                                , SECT_CODE
                                , SUM(INCOME_CNT) AS INCOME_CNT
                             FROM HPC950T WITH(NOLOCK)
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND SECT_CODE   = #{DIV_CODE}
                              AND RPT_YYYYMM  = #{RPT_YYYYMM}
                              AND PAY_YYYYMM  = #{PAY_YYYYMM}
                              AND SUPP_YYYYMM = #{SUPP_YYYYMM}
                              AND STATE_TYPE  = '0'
                              AND INCCODE    IN ('A50', 'A60', 'A69', 'A70', 'A80')
                            GROUP BY COMP_CODE, SECT_CODE) Z2 ON Z2.COMP_CODE = A.COMP_CODE
                                                             AND Z2.SECT_CODE = A.SECT_CODE
         WHERE A.COMP_CODE    = #{S_COMP_CODE}
           AND A.SECT_CODE    = #{DIV_CODE}
           AND A.RPT_YYYYMM   = #{RPT_YYYYMM}
           AND A.PAY_YYYYMM   = #{PAY_YYYYMM}
           AND A.SUPP_YYYYMM  = #{SUPP_YYYYMM}
           AND A.STATE_TYPE   = #{STATE_TYPE}
         GROUP BY D.COMP_CODE       , D.DIV_CODE        , D.DIV_NAME        , D.DIV_FULL_NAME   , D1.COMP_OWN_NO
                , D.COMPANY_NUM     , D.REPRE_NAME      , D.REPRE_NO        , D.COMP_CLASS      , D.COMP_TYPE
                , D.ZIP_CODE        , D.ADDR            , D.TELEPHON        , D.HANDPHONE       , D.FAX_NUM
                , D.SAFFER_TAX      , D.SAFFER_TAX_NM   , D.EMAIL           , D.TAX_NAME        , D.TAX_NUM
                , D.TAX_TEL
                , ISNULL(Z1.INCOME_CNT, 0)
                , ISNULL(Z2.INCOME_CNT, 0)
                , ISNULL(E.TAX_BASE   , '0')
    </select>

    <select id="hpc950ukrServiceImpl.printDetailData" parameterType="Map" resultType="rMap">
        SELECT INCCODE
             , INCOME_CNT
             , INCOME_SUPP_TOTAL_I
             , DEF_IN_TAX_I
             , DEF_SP_TAX_I
             , ADD_TAX_I
             , RET_IN_TAX_I
             , IN_TAX_I
             , SP_TAX_I
             , A.LOCAL_TAX_I
             , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(E.TAX_EXEMPTION_I,0) + ISNULL(B.BONUS_TAX_I,0) AS TOTAL_I
             , ISNULL(B.TAX_AMOUNT_I,0) + ISNULL(B.BONUS_TAX_I,0)     AS TAX_AMOUNT_I
             , CONVERT(INT, ISNULL(E.TAX_EXEMPTION_I,0))              AS TAX_EXEMPTION_I
             , B1.SCOUNT
             , IN_TAX_I                                               AS A10
             , ISNULL(Z3.sJuminAmt, 0)                                AS sJuminAmt
             , ISNULL(B1.SCOUNT, 0) + CASE WHEN A.INCCODE = 'A03' THEN A.INCOME_CNT
                                           ELSE 0
                                       END                            AS A03_COUNT
          FROM            HPC950T A WITH(NOLOCK)
               LEFT  JOIN (SELECT COMP_CODE
                                , SECT_CODE
                                , (SUM(TAX_AMOUNT_I)) AS TAX_AMOUNT_I
                                , (SUM(BONUS_TAX_I))  AS BONUS_TAX_I
                             FROM HPA600T WITH(NOLOCK)
                            WHERE COMP_CODE  = #{S_COMP_CODE}
                              AND PAY_YYYYMM = #{PAY_YYYYMM}
                            GROUP BY COMP_CODE, SECT_CODE) B ON B.COMP_CODE = A.COMP_CODE
                                                            AND B.SECT_CODE = A.SECT_CODE
               LEFT  JOIN (SELECT COMP_CODE
                                , SECT_CODE
                                , COUNT(X.PERSON_NUMB) AS SCOUNT
                             FROM (SELECT COMP_CODE
                                        , SECT_CODE
                                        , PERSON_NUMB
                                     FROM HPA600T WITH(NOLOCK)
                                    WHERE COMP_CODE  = #{S_COMP_CODE}
                                      AND PAY_YYYYMM = #{PAY_YYYYMM}
                                      AND ((PAY_GUBUN != '2') OR (PAY_GUBUN = '2' AND PAY_GUBUN2 = '2'))
                                    GROUP BY COMP_CODE, SECT_CODE, PERSON_NUMB) X
                            GROUP BY COMP_CODE, SECT_CODE) B1 ON B1.COMP_CODE  = A.COMP_CODE
                                                             AND B1.SECT_CODE  = A.SECT_CODE
               LEFT  JOIN (SELECT A.COMP_CODE
                                , C.SECT_CODE
                                , A.PAY_YYYYMM
                                , SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
                             FROM            HPA800T A WITH(NOLOCK)
                                  INNER JOIN HUM100T C WITH(NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                                                   AND A.PERSON_NUMB = C.PERSON_NUMB
                            GROUP BY A.COMP_CODE, C.SECT_CODE, A.PAY_YYYYMM) E ON E.COMP_CODE  = A.COMP_CODE
                                                                              AND E.SECT_CODE  = A.SECT_CODE
                                                                              AND E.PAY_YYYYMM = '202011'
               LEFT  JOIN (SELECT COMP_CODE
                                , SECT_CODE
                                , SUM(LOCAL_TAX_I) AS sJuminAmt
                             FROM HPC950T WITH(NOLOCK)
                            WHERE COMP_CODE   = #{S_COMP_CODE}
                              AND SECT_CODE   = #{DIV_CODE}
                              AND RPT_YYYYMM  = #{RPT_YYYYMM}
                              AND PAY_YYYYMM  = #{PAY_YYYYMM}
                              AND SUPP_YYYYMM = #{SUPP_YYYYMM}
                              AND STATE_TYPE  = #{STATE_TYPE}
                              AND INCCODE    IN ('A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A10')
                            GROUP BY COMP_CODE, SECT_CODE) Z3 ON Z3.COMP_CODE  = A.COMP_CODE
                                                             AND Z3.SECT_CODE  = A.SECT_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND A.SECT_CODE   = #{DIV_CODE}
           AND A.RPT_YYYYMM  = #{RPT_YYYYMM}
           AND A.PAY_YYYYMM  = #{PAY_YYYYMM}
           AND A.SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND A.STATE_TYPE  = #{STATE_TYPE}
    </select>

    <select id="hpc950ukrServiceImpl.refundedAaxAmt" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.printDetailData(환급세액 데이터 조회) */
        SELECT LAST_IN_TAX_I    AS LAST_IN_TAX_I
             , BEFORE_IN_TAX_I  AS BEFORE_IN_TAX_I
             , BAL_AMT          AS BAL_AMT
             , RET_AMT          AS RET_AMT
             , TRUST_AMT        AS TRUST_AMT
             , ETC_AMT          AS ETC_AMT
             , FIN_COMP_AMT     AS FIN_COMP_AMT
             , MERGER_AMT       AS MERGER_AMT
             , ROW_IN_TAX_I     AS ROW_IN_TAX_I
             , TOTAL_IN_TAX_I   AS TOTAL_IN_TAX_I
             , NEXT_IN_TAX_I    AS NEXT_IN_TAX_I
             , RET_IN_TAX_I     AS RET_IN_TAX_I
          FROM HPC951T WITH(NOLOCK)
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND SECT_CODE   = #{DIV_CODE}
           AND RPT_YYYYMM  = #{RPT_YYYYMM}
           AND PAY_YYYYMM  = #{PAY_YYYYMM}
           AND SUPP_YYYYMM = #{SUPP_YYYYMM}
           AND STATE_TYPE  = #{STATE_TYPE}
    </select>

    <select id="hpc950ukrServiceImpl.calResidentTax" parameterType="Map" resultType="rMap">
        /* hpc950ukrServiceImpl.residentTax(주민세 합계 계산) */
        SELECT SUM(ISNULL(Z.INCOME_CNT, 0))   AS INCOME_CNT
             , SUM(ISNULL(Z.IN_TAX_I, 0))     AS IN_TAX_I
             , SUM(ISNULL(Z.TAX, 0))          AS TAX
          FROM (SELECT A.INCCODE
                     , A.INCOME_CNT
                     , A.IN_TAX_I
                     , CASE WHEN A.INCCODE = 'A10' THEN sJuminAmt
                            ELSE CASE WHEN ISNULL(A.IN_TAX_I, 0) > 0 THEN ROUND(A.IN_TAX_I * 0.1 / 10 - 0.5, 0) * 10 ELSE 0 END
                        END AS TAX
                  FROM HPC950T A WITH(NOLOCK)
                       LEFT JOIN (SELECT COMP_CODE
                                       , SECT_CODE
                                       , SUM(LOCAL_TAX_I) AS sJuminAmt
                                    FROM HPC950T WITH(NOLOCK)
                                   WHERE COMP_CODE   = #{S_COMP_CODE}
                                     AND SECT_CODE   = #{DIV_CODE}
                                     AND RPT_YYYYMM  = #{RPT_YYYYMM}
                                     AND PAY_YYYYMM  = #{PAY_YYYYMM}
                                     AND SUPP_YYYYMM = #{SUPP_YYYYMM}
                                     AND STATE_TYPE  = #{STATE_TYPE}
                                     AND INCCODE    IN ('A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A10')
                                   GROUP BY COMP_CODE, SECT_CODE) Z3 ON Z3.COMP_CODE = A.COMP_CODE
                                                                    AND Z3.SECT_CODE = A.SECT_CODE
                 WHERE A.COMP_CODE   = #{S_COMP_CODE}
                   AND A.SECT_CODE   = #{DIV_CODE}
		           AND A.RPT_YYYYMM  = #{RPT_YYYYMM}
		           AND A.PAY_YYYYMM  = #{PAY_YYYYMM}
		           AND A.SUPP_YYYYMM = #{SUPP_YYYYMM}
		           AND A.STATE_TYPE  = #{STATE_TYPE}
                   AND A.INCCODE    IN ('A50', 'A60', 'A30', 'A10', 'A47', 'A40', 'A20', 'A69', 'A70', 'A80')) Z 
    </select>

    <select id="hpc950ukrServiceImpl.printResidentNapTax" parameterType="Map" resultType="rMap">
        SELECT D.REPRE_NAME
             , D1.COMP_OWN_NO
             , D.DIV_FULL_NAME
             , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
             , D.ADDR
             , D.TELEPHON
             , B.CODE_NAME                      AS LOCAL_TAX_GOV_NAME
             , A.INCOME_CNT_04
             , A.NAP_IN_TAX_I_04
             , A.NAP_LOC_TAX_I_04
             , A.INCOME_CNT_05
             , A.NAP_IN_TAX_I_05
             , A.NAP_LOC_TAX_I_05
             , A.INCOME_CNT_06
             , A.NAP_IN_TAX_I_06
             , A.NAP_LOC_TAX_I_06
             , A.INCOME_CNT_01
             , A.NAP_IN_TAX_I_01
             , A.NAP_LOC_TAX_I_01
             , A.INCOME_CNT_12
             , A.NAP_IN_TAX_I_12
             , A.NAP_LOC_TAX_I_12
             , A.INCOME_CNT_08
             , A.NAP_IN_TAX_I_08
             , A.NAP_LOC_TAX_I_08
             , A.INCOME_CNT_07
             , A.NAP_IN_TAX_I_07
             , A.NAP_LOC_TAX_I_07
             , A.INCOME_CNT_16
             , A.NAP_IN_TAX_I_16
             , A.NAP_LOC_TAX_I_16
             , A.INCOME_CNT_17
             , A.NAP_IN_TAX_I_17
             , A.NAP_LOC_TAX_I_17
             , A.INCOME_CNT_18
             , A.NAP_IN_TAX_I_18
             , A.NAP_LOC_TAX_I_18
             , A.INCOME_CNT_19
             , A.NAP_IN_TAX_I_19
             , A.NAP_LOC_TAX_I_19
             , A.INCOME_CNT_15
             , A.NAP_IN_TAX_I_15
             , A.NAP_LOC_TAX_I_15
             , A.NAP_LOC_TAX_I_20
             , A.INCOME_CNT
             , A.NAP_IN_TAX_I
             , A.NAP_LOC_TAX_I
          FROM (SELECT COMP_CODE
                     , SECT_CODE
                     , BUSS_OFFICE_CODE
                     , LOCAL_TAX_GOV
                     , SUM(CASE WHEN CODE_GU = '04' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_04
                     , SUM(CASE WHEN CODE_GU = '04' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_04
                     , SUM(CASE WHEN CODE_GU = '04' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_04
                     , SUM(CASE WHEN CODE_GU = '05' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_05
                     , SUM(CASE WHEN CODE_GU = '05' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_05
                     , SUM(CASE WHEN CODE_GU = '05' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_05
                     , SUM(CASE WHEN CODE_GU = '06' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_06
                     , SUM(CASE WHEN CODE_GU = '06' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_06
                     , SUM(CASE WHEN CODE_GU = '06' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_06
                     , SUM(CASE WHEN CODE_GU = '01' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_01
                     , SUM(CASE WHEN CODE_GU = '01' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_01
                     , SUM(CASE WHEN CODE_GU = '01' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_01
                     , SUM(CASE WHEN CODE_GU = '12' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_12
                     , SUM(CASE WHEN CODE_GU = '12' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_12
                     , SUM(CASE WHEN CODE_GU = '12' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_12
                     , SUM(CASE WHEN CODE_GU = '08' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_08
                     , SUM(CASE WHEN CODE_GU = '08' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_08
                     , SUM(CASE WHEN CODE_GU = '08' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_08
                     , SUM(CASE WHEN CODE_GU = '07' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_07
                     , SUM(CASE WHEN CODE_GU = '07' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_07
                     , SUM(CASE WHEN CODE_GU = '07' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_07
                     , SUM(CASE WHEN CODE_GU = '16' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_16
                     , SUM(CASE WHEN CODE_GU = '16' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_16
                     , SUM(CASE WHEN CODE_GU = '16' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_16
                     , SUM(CASE WHEN CODE_GU = '17' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_17
                     , SUM(CASE WHEN CODE_GU = '17' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_17
                     , SUM(CASE WHEN CODE_GU = '17' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_17
                     , SUM(CASE WHEN CODE_GU = '18' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_18
                     , SUM(CASE WHEN CODE_GU = '18' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_18
                     , SUM(CASE WHEN CODE_GU = '18' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_18
                     , SUM(CASE WHEN CODE_GU = '19' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_19
                     , SUM(CASE WHEN CODE_GU = '19' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_19
                     , SUM(CASE WHEN CODE_GU = '19' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_19
                     , SUM(CASE WHEN CODE_GU = '15' THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT_15
                     , SUM(CASE WHEN CODE_GU = '15' THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I_15
                     , SUM(CASE WHEN CODE_GU = '15' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_15
                     , SUM(CASE WHEN CODE_GU = '20' THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I_20
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15')      THEN INCOME_CNT    ELSE 0 END) AS INCOME_CNT
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15')      THEN NAP_IN_TAX_I  ELSE 0 END) AS NAP_IN_TAX_I
                     , SUM(CASE WHEN CODE_GU IN ('04','05','06','01','12','08','07','16','17','18','19','15','20') THEN NAP_LOC_TAX_I ELSE 0 END) AS NAP_LOC_TAX_I
                  FROM HPC952T WITH (NOLOCK)
                 WHERE COMP_CODE   = #{S_COMP_CODE}
                   AND SECT_CODE   = #{DIV_CODE}
                   AND RPT_YYYYMM  = #{RPT_YYYYMM}
                   AND PAY_YYYYMM  = #{PAY_YYYYMM}
                   AND SUPP_YYYYMM = #{SUPP_YYYYMM}
                   AND STATE_TYPE  = #{STATE_TYPE}
                 GROUP BY COMP_CODE, SECT_CODE, BUSS_OFFICE_CODE, LOCAL_TAX_GOV) A
               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                 AND B.MAIN_CODE = 'H137'
                                                 AND B.SUB_CODE  = A.LOCAL_TAX_GOV
               INNER JOIN BOR120T D  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                 AND D.DIV_CODE  = A.SECT_CODE 
               INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
    </select>

    <select id="hpc950ukrServiceImpl.printResidentEmployee" parameterType="Map" resultType="rMap">
        SELECT D.REPRE_NAME
             , D1.COMP_OWN_NO
             , D.DIV_FULL_NAME
             , SUBSTRING(D.COMPANY_NUM,1,3) + '-' + SUBSTRING(D.COMPANY_NUM,4,2) + '-' + SUBSTRING(D.COMPANY_NUM,6,5) AS COMPANY_NUM
             , D.ADDR
             , D.TELEPHON
             , B.CODE_NAME                      AS LOCAL_TAX_GOV_NAME
             , ISNULL(E.SCOUNT,0)               AS SCOUNT
             , ISNULL(F.TAX_EXEMPTION_I,0)      AS TAX_EXEMPTION_I
             , ISNULL(E.TAX_AMOUNT_I,0)         AS TAX_AMOUNT_I
             , ROUND(ISNULL(E.TAX_AMOUNT_I,0) * 0.005, 0) AS TAX_RATE_AMT
          FROM (SELECT COMP_CODE
                     , SECT_CODE
                     , BUSS_OFFICE_CODE
                     , LOCAL_TAX_GOV
                  FROM HPC952T WITH (NOLOCK)
                 WHERE COMP_CODE    = #{S_COMP_CODE}
                   AND SECT_CODE    = #{DIV_CODE}
                   AND RPT_YYYYMM   = #{RPT_YYYYMM}
                   AND PAY_YYYYMM   = #{PAY_YYYYMM}
                   AND SUPP_YYYYMM  = #{SUPP_YYYYMM}
                   AND STATE_TYPE   = #{STATE_TYPE}
                 GROUP BY COMP_CODE, SECT_CODE, BUSS_OFFICE_CODE, LOCAL_TAX_GOV) A
               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                 AND B.MAIN_CODE = 'H137'
                                                 AND B.SUB_CODE  = A.LOCAL_TAX_GOV
               INNER JOIN BOR120T D  WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                 AND D.DIV_CODE  = A.SECT_CODE 
               INNER JOIN BOR100T D1 WITH(NOLOCK) ON A.COMP_CODE = D1.COMP_CODE
               LEFT  JOIN (SELECT A.COMP_CODE
                                , A.SECT_CODE
                                , B.BUSS_OFFICE_CODE
                                , COUNT(A.PERSON_NUMB) AS SCOUNT
                                , SUM(A.TAX_AMOUNT_I) + SUM(A.BONUS_TAX_I) AS TAX_AMOUNT_I
                             FROM            HPA600T A WITH(NOLOCK)
                                  INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                    AND B.PERSON_NUMB = A.PERSON_NUMB
                            WHERE A.COMP_CODE         = #{S_COMP_CODE}
                              AND A.SECT_CODE         = #{DIV_CODE}
                              AND A.PAY_YYYYMM        = #{PAY_YYYYMM}
                              AND LEFT(A.SUPP_DATE,6) = #{SUPP_YYYYMM}
                            GROUP BY A.COMP_CODE, A.SECT_CODE, B.BUSS_OFFICE_CODE) E ON E.COMP_CODE        = A.COMP_CODE
                                                                                    AND E.SECT_CODE        = A.SECT_CODE
                                                                                    AND E.BUSS_OFFICE_CODE = A.BUSS_OFFICE_CODE
               LEFT  JOIN (SELECT A.COMP_CODE
                                , B.SECT_CODE
                                , B.BUSS_OFFICE_CODE
                                , SUM(ISNULL(LIMIT_PAY_SUPP_I, 0)) AS TAX_EXEMPTION_I
                             FROM            HPA800T A WITH(NOLOCK)
                                  INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                   AND B.PERSON_NUMB = A.PERSON_NUMB
                            WHERE A.COMP_CODE  = #{S_COMP_CODE}
                              AND B.SECT_CODE  = #{DIV_CODE}
                              AND A.PAY_YYYYMM = #{PAY_YYYYMM}
                            GROUP BY A.COMP_CODE, B.SECT_CODE, B.BUSS_OFFICE_CODE) F ON F.COMP_CODE        = A.COMP_CODE
                                                                                    AND F.SECT_CODE        = A.SECT_CODE
                                                                                    AND F.BUSS_OFFICE_CODE = A.BUSS_OFFICE_CODE
    </select>

</mapper>