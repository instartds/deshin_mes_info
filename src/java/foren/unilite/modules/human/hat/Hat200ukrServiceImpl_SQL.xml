<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat200ukrServiceImpl">
	<!--
			Sorry, I can`t migrate	Hum100ukrModel
			See console output for further details
		-->
	<!--
			Sorry, I can`t migrate	Hum710ukrModel
			See console output for further details
		-->
	<!--
			Sorry, I can`t migrate	Hum790ukrModel
			See console output for further details
		-->
	<!--
			Sorry, I can`t migrate	Hum800ukrModel
			See console output for further details
		-->
	<select id="hat200ukrServiceImpl.selectDutycode" parameterType="String" resultType="rMap">
        SELECT A.SUB_CODE
             , A.CODE_NAME
             , ISNULL((SELECT COTR_TYPE
                       FROM HBS100T
                       WHERE COMP_CODE = A.COMP_CODE
                        AND  DUTY_CODE = A.SUB_CODE
                        AND  PAY_CODE = '0'),'1') AS COTR_TYPE
        FROM BSA100T A
        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.SUB_CODE != '$'
          AND A.MAIN_CODE = 'H033'
          AND A.USE_YN = 'Y'
        ORDER BY CONVERT(INT, A.REF_CODE2)
    </select>
	<select id="hat200ukrServiceImpl.vrecord2" parameterType="rMap" resultType="rMap">
		SELECT F.SUB_CODE, F.REF_CODE1
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031'
		AND F.SUB_CODE != '$'
		AND F.SUB_CODE LIKE #{PAY_PROV_FLAG}+'%'
		</if>
		<if test="@foren.Ognl@isEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031'
		AND F.SUB_CODE != '$'
		AND F.SUB_CODE LIKE '%'
		</if>
	</select>


	<select id="hat200ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">
		/* hat200ukrServiceImpl.selectList */
		DECLARE @diff varchar(8)
		DECLARE @sDate varchar(8)
		DECLARE @eDate varchar(8)
		DECLARE @yyyymm varchar(6)

		SET @yyyymm = #{DUTY_YYYYMM}
	    SET @sDate = #{sDate}
	    SET @eDate = #{eDate}
		SET @diff = #{diff}

		SELECT T.* FROM(
			SELECT '' FLAG
		     , MAX(DEPT_CODE) DEPT_CODE
		     , MAX(POST_CODE) POST_CODE
		     , MAX(DIV_CODE) DIV_CODE
		     , MAX(B.DUTY_YYYYMM) DUTY_YYYYMM
		     , MAX(A.DEPT_NAME) DEPT_NAME
		     , MAX(A.NAME) NAME
		     , MAX(A.PERSON_NUMB) PERSON_NUMB
		     , MAX(A.SEX_CODE) SEX_CODE
		     , uniLITE.fnGetUserDateComp(A.COMP_CODE, MAX(A.JOIN_DATE)) JOIN_DATE
		     , MAX(A.RETR_DATE) RETR_DATE
		     , MAX(A.YEAR_GIVE) YEAR_GIVE
		     , MAX(A.MONTH_GIVE) MONTH_GIVE
		     , MAX(A.PAY_CODE) PAY_CODE
		     , MAX(0) PAY_DD
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) TOTDAY
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.SUN_DAY ELSE 0 END))DAYCNT
		     , MAX(ISNULL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM
		     , MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) AS DAYDIFF
		     , MAX((0)) AS DATACHAK
		     , MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG
			<foreach collection="DUTY_CODE" item="item" index="index">
	             , ISNULL(MAX(
	        		CASE
	        			WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN 'U'
					END ),'N')  AS FLAG${item.SUB_CODE}
				, ISNULL(MAX(
					CASE
						WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN DUTY_NUM
					END),0) AS DUTY_NUM${item.SUB_CODE}
				, ISNULL(MAX(
					CASE
						WHEN B.DUTY_CODE = '${item.SUB_CODE}' THEN DUTY_TIME
					END),0) AS DUTY_TIME${item.SUB_CODE}
			     , ISNULL((SELECT COTR_TYPE
                       FROM HBS100T
                       WHERE COMP_CODE = A.COMP_CODE
                         AND DUTY_CODE = '${item.SUB_CODE}'
                         AND PAY_CODE  = '0'),'1') AS COTR_TYPE${item.SUB_CODE}
			</foreach>
			, @sDate DUTY_FROM
		    , @eDate DUTY_TO

		    , #{DEPT_CODE2} DEPT_CODE2
		    , MAX(D.REMARK) REMARK
			, MAX(D.WORK_TIME) AS WORK_TIME
			FROM HUM100T A
			   INNER JOIN HAT200T B ON B.COMP_CODE   = A.COMP_CODE
			                       AND B.PERSON_NUMB = A.PERSON_NUMB
			   LEFT  JOIN HAT300T D ON D.COMP_CODE   = A.COMP_CODE
			                       AND D.PERSON_NUMB = A.PERSON_NUMB
			                       AND D.COMP_CODE   = B.COMP_CODE
			                       AND D.DUTY_YYYYMM = B.DUTY_YYYYMM
			   LEFT  JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
			                       AND E.PERSON_NUMB = A.PERSON_NUMB
			                       AND ((SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6)  &lt;= #{DUTY_YYYYMM} )
			                       AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6)   &gt;= #{DUTY_YYYYMM}))
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			  AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
	    <if test="@foren.Ognl@isNotEmpty(DUTY_YYYYMM)">
	    	AND  B.DUTY_YYYYMM = #{DUTY_YYYYMM}
	    </if>

	    <if test="@foren.Ognl@isNotEmpty(DEPTS2)">
            AND A.DEPT_CODE IN
            <foreach collection="DEPTS2" item="item2" separator="," close=")" open="(">
             #{item2}
            </foreach>
        </if>

	    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	   	    AND A.DEPT_CODE IN
			<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>
	 	</if>
	    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
	       	AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
	       	AND A.PAY_GUBUN = #{PAY_GUBUN}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
	       	AND A.PERSON_NUMB = #{PERSON_NUMB}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    	AND  A.DIV_CODE = #{DIV_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
	    	AND  A.PAY_CODE = #{PAY_CODE}
	    </if>
	        AND (A.RETR_DATE  = '00000000' OR SUBSTRING(A.RETR_DATE,1,6) >= LEFT(@sDate,6)
	        )

	     	GROUP BY  A.COMP_CODE, A.PERSON_NUMB, B.DUTY_YYYYMM
		<if test="CLOSE_DATE &lt; DUTY_YYYYMM">
	     	<foreach collection="VRECORD2" item="vrecord2" index="index">

		UNION ALL
		SELECT 'N' FLAG
		     , MAX(DEPT_CODE) DEPT_CODE
		     , MAX(POST_CODE) POST_CODE
		     , DIV_CODE
		     , @yyyymm AS  DUTY_YYYYMM
		     , MAX(A.DEPT_NAME) DEPT_NAME
		     , MAX(A.NAME) NAME
		     , MAX(A.PERSON_NUMB) PERSON_NUMB
		     , MAX(A.SEX_CODE) SEX_CODE

		     , uniLITE.fnGetUserDate(A.COMP_CODE, MAX(A.JOIN_DATE))JOIN_DATE
		     , MAX(A.RETR_DATE) RETR_DATE
		     , MAX(A.YEAR_GIVE) YEAR_GIVE
		     , MAX(A.MONTH_GIVE) MONTH_GIVE
		     , MAX(A.PAY_CODE) PAY_CODE
		     , MAX(0) PAY_DD
		     , MAX(0) AS TOTDAY
		     , MAX(0) AS DAYCNT
		     , MAX(ISNULL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM
		     , MAX(@diff) AS DAYDIFF
		     , MAX((0)) AS DATACHAK
		     , MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG
	        <foreach collection="DUTY_CODE" item="item" index="index">
	        	, 'N' AS  FLAG${item.SUB_CODE}
	                    , (SELECT COUNT(*)
	                          FROM HAT800T
	                         WHERE COMP_CODE       = #{S_COMP_CODE}
	                           AND PERSON_NUMB     = A.PERSON_NUMB
	                           AND DUTY_CODE       =   '${item.SUB_CODE}'
	                           AND DUTY_YYYYMMDD  &gt;=   @sDate
	                           AND DUTY_YYYYMMDD  &lt;=   @eDate) NUM${item.SUB_CODE}
	                    , 0  AS TIME${item.SUB_CODE}
	                    , ISNULL((SELECT COTR_TYPE
                                  FROM HBS100T
                                  WHERE COMP_CODE = A.COMP_CODE
                                    AND DUTY_CODE = ${item.SUB_CODE}
                                    AND PAY_CODE  = '0'),'1') AS COTR_TYPE${item.SUB_CODE}
	        </foreach>
	         , @sDate  AS DUTY_FROM
			 , @eDate   AS DUTY_TO

		     , #{DEPT_CODE2} DEPT_CODE2
			 , MAX('') REMARK
			 , MAX(0)  AS WORK_TIME
			FROM HUM100T A
			   LEFT JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
			                      AND E.PERSON_NUMB = A.PERSON_NUMB
			                      AND ((SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6) &lt;= #{DUTY_YYYYMM})
			                      AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6) &gt;= #{DUTY_YYYYMM}))
			WHERE A.COMP_CODE    = #{S_COMP_CODE}
			AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
			AND (A.RETR_DATE  = '00000000' OR A.RETR_DATE &gt;= @sDate)
			AND (A.JOIN_DATE &lt;= @eDate)
			AND (A.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}')

			AND A.PERSON_NUMB NOT IN ( SELECT DISTINCT(B.PERSON_NUMB) AS  PERSON_NUMB
			                            FROM HUM100T C, HAT200T B
			                           WHERE C.COMP_CODE   = B.COMP_CODE
			                             AND C.PERSON_NUMB = B.PERSON_NUMB
			                             AND C.COMP_CODE   = #{S_COMP_CODE}
			                             AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
			                             AND B.PERSON_NUMB = C.PERSON_NUMB
			                             AND C.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}')
			<if test="@foren.Ognl@isNotEmpty(DEPTS2)">
                AND A.DEPT_CODE IN
                <foreach collection="DEPTS2" item="item2" separator="," close=")" open="(">
                 #{item2}
                </foreach>
            </if>
			 <if test="@foren.Ognl@isNotEmpty(DEPTS)">
		   	   AND A.DEPT_CODE IN
				<foreach collection="DEPTS" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>
		 	</if>
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
				AND  A.DIV_CODE = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
			   	AND A.PAY_GUBUN = #{PAY_GUBUN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
			  	AND A.PERSON_NUMB = #{PERSON_NUMB}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
			   	AND  A.PAY_CODE = #{PAY_CODE}
			</if>
			GROUP BY A.COMP_CODE, A.DEPT_NAME, A.PERSON_NUMB , A.JOIN_DATE, A.RETR_DATE ,A.DIV_CODE
	     </foreach>
	  </if>
		 ) T
		 ORDER BY T.DIV_CODE, T.DEPT_CODE, T.POST_CODE, T.JOIN_DATE, T.NAME, T.PERSON_NUMB
	</select>

	<select id="hat200ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
		SELECT TOT_DAY
		     , MONTH_GIVE
		     , DED_TIME
		     , WORK_TIME
		     , WEEK_DAY
		     , MENS_GIVE
		     , DED_DAY
		     , WORK_DAY
		     , SUN_DAY
		     , WEEK_GIVE
		     , FULL_GIVE
		     , MONTH_GIVE
		     , MENS_GIVE
		     , SAT_DAY
		     , EXTEND_WORK_TIME
		     , NON_WEEK_DAY
		     , HOLIDAY
		     , YEAR_GIVE
		  FROM HAT300T
		WHERE COMP_CODE = #{S_COMP_CODE}
			AND DUTY_YYYYMM = #{DUTY_YYYYMM}
			AND PERSON_NUMB = #{PERSON_NUMB}

	</select>



<!-- UHat01Krv.Chbs100Kr SetHbs100[fnHbs100nq] -->
<select id="hat200ukrServiceImpl.fnHbs100nq" parameterType="rMap" resultType="rMap">
SELECT PAY_CODE
        , DUTY_CODE
        , DUTY_TYPE
        , COTR_TYPE
        , DUTY_STRT_MM
        , DUTY_STRT_DD
        , DUTY_LAST_MM
        , DUTY_LAST_DD
        , MARGIR_TYPE
        , MONTH_REL_CODE
        , YEAR_REL_CODE
        , MENS_REL_CODE
        , WEEK_REL_CODE
        , FULL_REL_CODE
  FROM HBS100T
  WHERE COMP_CODE = #{S_COMP_CODE}
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	AND PAY_CODE  = #{PAY_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">
      AND DUTY_CODE = #{SUB_CODE}
    </if>
</select>


<!--	UHBS01KRV.CHCLOSEYN[fncloseYN] strsql -->
<!-- 마감여부 체크 -->
<select id="hat200ukrServiceImpl.fnCheckCloseMonth" parameterType="Map" resultType="rMap">
	SELECT substring(CLOSE_DATE,1,6) AS CLOSE_DATE
	FROM HBS900T
	WHERE COMP_CODE = #{S_COMP_CODE}
	AND CLOSE_TYPE = 'D'
</select>

<!--Delete -->
<update id="hat200ukrServiceImpl.delete" parameterType="rMap">

SET XACT_ABORT ON
	BEGIN TRY
		BEGIN TRAN

	<foreach collection="paramList" item="item" index="index">
		DELETE FROM HAT200T
	 	WHERE DUTY_YYYYMM = #{DUTY_YYYYMM}
	   	AND PERSON_NUMB = #{PERSON_NUMB}
	   	AND DUTY_CODE   = '${item}'
	   	AND COMP_CODE   = #{COMP_CODE}
	</foreach>

	--UHat01Krv.Chat200Kr-fnDelSum.dSql(0)
    UPDATE HAT700T SET YEAR_USE       = H_YEAR_USE
                     , JOIN_YEAR_SAVE = H_JOIN_YEAR_SAVE
                     , YEAR_NUM       =  H_YEAR_NUM
                     , YEAR_PROV      = H_YEAR_NUM - H_YEAR_USE
                     , MONTH_NUM      = H_HMONTH_NUM
                     , MONTH_USE      = H_MONTH_USE
                     , MONTH_PROV     = H_MONTH_PROV
                     , YEAR_REMOVE    = H_YEAR_REMOVE
                     , UPDATE_DB_USER = #{USER_ID}
                     , UPDATE_DB_TIME = GETDATE()
      FROM (SELECT A.DUTY_YYYY AS H_DUTY_YYYY
                 , A.YEAR_USE       -  B.YEAR_USE    AS H_YEAR_USE
                 , A.JOIN_YEAR_SAVE -  B.YEAR_GIVE   AS H_JOIN_YEAR_SAVE
                 , A.YEAR_NUM       -  B.YEAR_GIVE   AS H_YEAR_NUM
                 , A.MONTH_NUM      -  B.MONTH_NUM   AS H_HMONTH_NUM
                 , A.MONTH_USE      -  B.MONTH_USE   AS H_MONTH_USE
                 , A.MONTH_PROV     -  B.MONTH_GIVE  AS H_MONTH_PROV
                 , A.YEAR_REMOVE    -  B.YEAR_REMOVE AS H_YEAR_REMOVE
                 , A.PERSON_NUMB AS H_PERSON_NUMB
              FROM HAT700T A INNER JOIN HAT300T B
                                ON A.COMP_CODE   = B.COMP_CODE
                               AND A.PERSON_NUMB = B.PERSON_NUMB
                             INNER JOIN HUM100T V
                                ON A.COMP_CODE   = B.COMP_CODE
                               AND A.PERSON_NUMB = V.PERSON_NUMB
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.DUTY_YYYYMM &gt;= LEFT(A.DUTY_YYYYMMDDFR_USE,6)
               AND B.DUTY_YYYYMM &lt;= LEFT(A.DUTY_YYYYMMDDTO_USE,6)
               AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
               AND B.PERSON_NUMB = #{PERSON_NUMB}
               AND V.PAY_PROV_FLAG =  #{PAY_PROV_FLAG}
               AND V.DIV_CODE = #{DIV_CODE}) AA
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND DUTY_YYYY   = AA.H_DUTY_YYYY
       AND PERSON_NUMB = AA.H_PERSON_NUMB


     -- UHat01Krv.Chat200Kr-fnDelSum.dSql(1)
    DELETE HAT300T
      FROM HAT300T T INNER JOIN HUM100T V
                        ON T.COMP_CODE   = V.COMP_CODE
                       AND T.PERSON_NUMB = V.PERSON_NUMB
     WHERE T.COMP_CODE     = #{S_COMP_CODE}
       AND T.DUTY_YYYYMM   = #{DUTY_YYYYMM}
       AND V.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
       AND V.DIV_CODE      = #{DIV_CODE}
       AND T.PERSON_NUMB   = #{PERSON_NUMB}

	COMMIT TRANSACTION

	END TRY

	BEGIN CATCH
		IF (XACT_STATE()) = -1
		BEGIN
			ROLLBACK TRANSACTION
		END
	END CATCH

	SET XACT_ABORT OFF



</update>

<!--UHat01Krv.Chat200UKr[fnHat200Set] -->
<select id="hat200ukrServiceImpl.fnHat200Set" parameterType="rMap" resultType="rMap">
	SELECT F.SUB_CODE
	, CONVERT(VARCHAR(8), CASE F.REF_CODE1 WHEN '00' THEN CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')
										ELSE DATEADD(DAY, 1, DATEADD(MONTH, -1, CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE1)))
										END, 112) STRT_DT
	, CONVERT(VARCHAR(8), CASE F.REF_CODE1 WHEN '00' THEN DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')))
										ELSE CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE1)
										END, 112) END_DT
	, F.REF_CODE1
	, CONVERT(VARCHAR(8), CASE F.REF_CODE2 WHEN '00' THEN CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')
										ELSE DATEADD(DAY, 1, DATEADD(MONTH, -1, CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE2)))
										END, 112) PAY_STRT_DT
	, CONVERT(VARCHAR(8), CASE F.REF_CODE2 WHEN '00' THEN DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, #{DUTY_YYYYMM} + '01')))
										ELSE CONVERT(DATETIME, #{DUTY_YYYYMM} + F.REF_CODE2)
										END, 112) PAY_END_DT
	, F.REF_CODE2
FROM BSA100T F
WHERE F.COMP_CODE = #{S_COMP_CODE}
	AND F.MAIN_CODE = 'H031'
	AND F.SUB_CODE != '$'
	AND F.SUB_CODE  = #{PAY_PROV_FLAG}
</select>

<!--Update -->
<update id="hat200ukrServiceImpl.update" parameterType="rMap">

		    <if test="@foren.Ognl@isNotEmpty(REMARK)">
            UPDATE HAT300T
               SET REMARK = #{REMARK}
            WHERE COMP_CODE   = #{COMP_CODE}
               AND DUTY_YYYYMM = #{DUTY_YYYYMM}
               AND PERSON_NUMB = #{PERSON_NUMB}
            </if>

			<if test='FLAG.equals("U")'>
    			<foreach collection="paramList" item="item" index="index">
                IF NOT EXISTS (
                    SELECT PERSON_NUMB FROM HAT200T
                            WHERE DUTY_YYYYMM = #{DUTY_YYYYMM}
                              AND PERSON_NUMB = #{PERSON_NUMB}
                              AND DUTY_CODE   = '${item.DUTY_CODE}'
                              AND COMP_CODE   = #{COMP_CODE}
                )
                BEGIN
                    INSERT INTO HAT200T
                         ( DUTY_YYYYMM
                         , PERSON_NUMB
                         , DUTY_CODE
                         , DUTY_NUM
                         , DUTY_TIME
                         , UPDATE_DB_USER
                         , UPDATE_DB_TIME
                         , COMP_CODE
                         )
                    VALUES
                         ( #{DUTY_YYYYMM}
                         , #{PERSON_NUMB}
                         , '${item.DUTY_CODE}'
                         , '${item.DUTY_NUM}'
                         , '${item.DUTY_TIME}'
                         , #{USER_ID}
                         , GETDATE()
                         , #{COMP_CODE}
                         )
    		    END
    		ELSE
    		    BEGIN
                    UPDATE HAT200T
                       SET DUTY_NUM       = '${item.DUTY_NUM}'
                         , DUTY_TIME      = '${item.DUTY_TIME}'
                         , UPDATE_DB_USER = #{USER_ID}
                         , UPDATE_DB_TIME = GETDATE()

                     WHERE DUTY_YYYYMM    = #{DUTY_YYYYMM}
                       AND PERSON_NUMB    = #{PERSON_NUMB}
                       AND DUTY_CODE      = '${item.DUTY_CODE}'
                       AND COMP_CODE      = #{COMP_CODE}
    		    END



    			</foreach>
			</if>

			<if test='FLAG.equals("N")'>
    			<foreach collection="paramList" item="item" index="index">
    				INSERT INTO HAT200T
    			     ( DUTY_YYYYMM
    			     , PERSON_NUMB
    			     , DUTY_CODE
    			     , DUTY_NUM
    			     , DUTY_TIME
    			     , UPDATE_DB_USER
    			     , UPDATE_DB_TIME
    			     , COMP_CODE
    			     )
    				VALUES
    			     ( #{DUTY_YYYYMM}
    			     , #{PERSON_NUMB}
    			     , '${item.DUTY_CODE}'
    			     , '${item.DUTY_NUM}'
    			     , '${item.DUTY_TIME}'
    			     , #{USER_ID}
    			     , GETDATE()
    			     , #{COMP_CODE}
    			     )
    			</foreach>
			</if>

			DECLARE @ERR_DESC2 NVARCHAR(2000)
			DECLARE @JSON_PARAM    NVARCHAR(2000)
<!--	EXEC SP_HAT_doTotalWork_innerFunctions  #{PAY_PROV_FLAG}, #{DUTY_YYYYMM}, #{DUTY_FROM}, #{DUTY_TO}, #{DIV_CODE}, '', '', #{PERSON_NUMB}, #{USER_ID}, '', #{COMP_CODE}, #{PAY_STRT_DT}, #{PAY_END_DT}, #{FLAG}, '', '', '', @ERR_DESC2 OUTPUT -->
			--※ 주의 : Json 파람조건에 엔터키 값 없이 해야함.
        SET @JSON_PARAM = '{"COMP_CODE":"${COMP_CODE}", "PAY_PROV_FLAG":"${PAY_PROV_FLAG}", "DUTY_YYYYMM":"${DUTY_YYYYMM}", "DUTY_YMD_FR":"${DUTY_FROM}", "DUTY_YMD_TO":"${DUTY_TO}", "PAY_YMD_FR":"${PAY_STRT_DT}", "PAY_YMD_TO":"${PAY_END_DT}", "DIV_CODE":"${DIV_CODE}", "DEPT_CODE_FR":"", "DEPT_CODE_TO":"", "PAY_CODE":"", "EMPLOY_GB":"", "PERSON_GB":"", "PERSON_NUMB":"${PERSON_NUMB}", "OVERTIME_YN":"Y", "UPDATE_DB_USER":"${USER_ID}", "SQTYPE":"DAY"}'
			EXEC USP_HUMAN_HAT600UKR_2  @JSON_PARAM, @ERR_DESC2 OUTPUT
           
			
		DECLARE   @CompCode   NVARCHAR(10)
				, @PayYmdFr   NVARCHAR(8)
				, @PayYmdTo   NVARCHAR(8)
				, @PersonNumb NVARCHAR(100)
				, @DutyYymm   NVARCHAR(6)
				
		SET @CompCode   = #{COMP_CODE}
		SET @DutyYymm   = #{DUTY_YYYYMM}
		SET @PayYmdFr   = @DutyYymm+'01'
		SET @PayYmdTo   = CONVERT(nvarchar(8), EOMONTH(CONVERT(DATETIME, @PayYmdFr, 112)), 112)
		SET @PersonNumb = #{PERSON_NUMB}
		
		UPDATE HAT300T
		   SET WORK_TIME = (
					SELECT ISNULL(((CC.REAL_DAY_TIME + ISNULL(CC.DED_TIME, 0)) - (ISNULL(CC.DED_TIME, 0) - ISNULL(ETC.DED_NUM_88, 0) + ISNULL(ETC.DED_NUM_84, 0))) , 0) REAL_DAY_TIME
		              FROM (SELECT BB.PERSON_NUMB
		                         , BB.DUTY_YYYYMM
		                         , CASE WHEN START_DATE &gt; @PayYmdFr OR END_DATE &lt; @PayYmdTo
		                                THEN
		                           	    
		                                     (SELECT CASE WHEN MONTHLY_FIX_HOUR &gt; 0 AND ISNULL(SUM(CONVERT(NUMERIC(5,2),ISNULL(D.REF_CODE1,0))),0) &gt; MONTHLY_FIX_HOUR
		                                                   THEN MONTHLY_FIX_HOUR
		                                              ELSE ISNULL(SUM(CONVERT(NUMERIC(5,2),ISNULL(D.REF_CODE1,0))),0) 
		                                         END
		                                        FROM            HBS600T C WITH (NOLOCK)
		                                             INNER JOIN BSA100T D WITH (NOLOCK) ON D.COMP_CODE = C.COMP_CODE
		                                                                               AND D.SUB_CODE  = C.HOLY_TYPE
		                                                                               AND D.MAIN_CODE = 'H003'
		                                                                               AND D.SUB_CODE != '$'
		                                                                               AND BB.DIV_CODE = C.DIV_CODE
		                                       WHERE C.COMP_CODE = 'MASTER'
		                                         AND C.CAL_DATE &gt;= BB.START_DATE
		                                         AND C.CAL_DATE &lt;= BB.END_DATE)
		                                WHEN MONTHLY_FIX_HOUR = 0
		                                THEN
		                           	    
		                                     (SELECT ISNULL(SUM(CONVERT(NUMERIC(5,2),ISNULL(D.REF_CODE1,0))),0)
		                                        FROM            HBS600T C WITH (NOLOCK)
		                                             INNER JOIN BSA100T D WITH (NOLOCK) ON D.COMP_CODE = C.COMP_CODE
		                                                                               AND D.SUB_CODE  = C.HOLY_TYPE
		                                                                               AND D.MAIN_CODE = 'H003'
		                                                                               AND D.SUB_CODE != '$'
		                                                                               AND BB.DIV_CODE = C.DIV_CODE
		                                       WHERE C.COMP_CODE = 'MASTER'
		                                         AND C.CAL_DATE &gt;= BB.START_DATE
		                                         AND C.CAL_DATE &lt;= BB.END_DATE)
		                                ELSE MONTHLY_FIX_HOUR
		                           END   - BB.DED_TIME                  AS REAL_DAY_TIME
		                         , BB.DED_TIME
		                         , BB.DED_DAY
		                         , BB.COMP_CODE
		                      FROM (SELECT AA.DUTY_YYYYMM
		                                 , AA.PERSON_NUMB
		                                 , AA.DED_TIME
		                                 , AA.DED_DAY
		                                 , A.DIV_CODE
		                                 , CASE WHEN A.JOIN_DATE &gt;=  @PayYmdFr THEN CONVERT(DATETIME, A.JOIN_DATE)
		                                        ELSE CONVERT(DATETIME, @PayYmdFr)
		                                    END   AS START_DATE
		                                 , CASE WHEN A.RETR_DATE &gt;=  @PayYmdFr AND A.RETR_DATE &lt;=  @PayYmdTo AND A.RETR_DATE !=  '00000000' THEN CONVERT(DATETIME, A.RETR_DATE)
		                                        ELSE CONVERT(DATETIME, @PayYmdTo)
		                                    END   AS END_DATE
		                                 , AA.COMP_CODE
		                                 , ISNULL(M3.REF_CODE1, '1') AS PAY_CODE
										 , CONVERT(INTEGER, ISNULL(M3.REF_CODE2, '0')) AS MONTHLY_FIX_HOUR
		                              FROM            HUM100T A WITH (NOLOCK)
		                                   LEFT JOIN (SELECT DUTY_YYYYMM
		                                                    , A.PERSON_NUMB
		                                                    , SUM(Y_TIME) + (SUM(Y_NUM) * M1.DAY_WORK_TIME)  DED_TIME
		                                                    , CASE WHEN (SUM(Y_TIME)  + (SUM(Y_NUM)  * M1.DAY_WORK_TIME)) = 0 THEN 0
		                                                           ELSE (SUM(Y_TIME)  + (SUM(Y_NUM)  * M1.DAY_WORK_TIME))
		                                                                                             / M1.DAY_WORK_TIME
		                                                       END  AS DED_DAY
		                                                    , A.COMP_CODE
		                                                 FROM (SELECT A.PERSON_NUMB
		                                                            , A.DUTY_YYYYMM
		                                                            , A.DUTY_CODE
		                                                            , B.MARGIR_TYPE
		                                                            , B.PAY_CODE
		                                                            , (CASE WHEN B.COTR_TYPE = '1' THEN 0 
																	        ELSE CASE WHEN  ISNULL(B.WORK_TIME_REL_CODE, 'N') ='Y' 
																			          THEN  A.DUTY_NUM
																					  ELSE  0
																				 END 
																			 END * CONVERT(NUMERIC(5,2), CASE WHEN REF_CODE4 = '' 
																			                                 THEN '1'
																										     ELSE ISNULL(REF_CODE4,'1') 
																									    END)
																			) 
																	  AS Y_NUM -- 반차적용
		                                                            , CASE WHEN ISNULL(B.WORK_TIME_REL_CODE, 'N') ='Y' 
																	       THEN A.DUTY_TIME 
																		   ELSE 0 
																	   END AS Y_TIME
		                                                            , A.COMP_CODE
		                                                         FROM            HAT200T  A WITH (NOLOCK)
		                                                              INNER JOIN HBS100T  B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                                                                 AND B.DUTY_CODE   = A.DUTY_CODE
		                                                              INNER JOIN HUM100T  C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                                                                 AND C.PAY_CODE    = B.PAY_CODE
		                                                                                                 AND C.PERSON_NUMB = A.PERSON_NUMB
		                                                              LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                                                                                 AND M1.SUB_CODE   = A.DUTY_CODE
		                                                                                                 AND M1.MAIN_CODE  = N'H033'
		                                                                                                 AND M1.REF_CODE3  = N'Y'
		                                                        WHERE A.COMP_CODE   = @CompCode
		                                                          AND A.DUTY_YYYYMM = @DutyYymm
		                                                      ) A
		                                                        INNER JOIN HBS400T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                                GROUP BY A.DUTY_YYYYMM, A.PERSON_NUMB, A.COMP_CODE, M1.DAY_WORK_TIME
		                                              ) AA ON AA.COMP_CODE   = A.COMP_CODE
		                                                  AND AA.PERSON_NUMB = A.PERSON_NUMB
		                                   LEFT  JOIN BSA100T M1 WITH (NOLOCK)  ON M1.COMP_CODE   = A.COMP_CODE
		                                                                       AND M1.MAIN_CODE   = 'H024'
		                                                                       AND M1.SUB_CODE    = A.EMPLOY_TYPE
		                                   LEFT  JOIN BSA100T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                                                       AND M3.MAIN_CODE   = 'H028'
		                                                                       AND M3.SUB_CODE    = A.PAY_CODE
		                             WHERE A.COMP_CODE    = @CompCode
		                               AND A.JOIN_DATE   &lt;= @PayYmdTo
		                               AND (A.RETR_DATE  &gt;= @PayYmdFr OR A.RETR_DATE   = '00000000')
		                               AND A.PERSON_NUMB   = @PersonNumb
		                           ) BB
		                   ) CC
		                   LEFT JOIN (SELECT A.COMP_CODE
		                                   , A.PERSON_NUMB
		                                   , SUM(CASE WHEN C.COTR_TYPE = '2' THEN ISNULL(CAST(DD.REF_CODE1 AS INT), 0)
										              ELSE 0
												 END) AS DED_NUM_84
										   , SUM(CASE WHEN ISNULL(C.WORK_TIME_REL_CODE, 'N') ='Y' 
		                                                    THEN CASE WHEN C.COTR_TYPE = '2' THEN A.DUTY_NUM * D.DAY_WORK_TIME
		                                                              ELSE ROUND((((A.DUTY_TIME *60) + A.DUTY_MINU))/60, 1, 1)
		                                                         END
													   ELSE 0
												 END) AS  DED_NUM_88
		
		                                FROM            HAT600T A WITH (NOLOCK)
		                                     INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                                       AND B.PERSON_NUMB = A.PERSON_NUMB
		                                     INNER JOIN HBS100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                                       AND C.DUTY_CODE   = A.DUTY_CODE
		                                                                       AND C.PAY_CODE    = B.PAY_CODE
		                                     INNER JOIN HBS400T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                     INNER JOIN (SELECT C.COMP_CODE
		                                                      , C.CAL_DATE
		                                                      , D.REF_CODE1
		                                                      , C.DIV_CODE
		                                                   FROM            HBS600T C WITH (NOLOCK)
		                                                        INNER JOIN BSA100T D WITH (NOLOCK) ON D.COMP_CODE = C.COMP_CODE
		                                                                                          AND D.SUB_CODE  = C.HOLY_TYPE
		                                                                                          AND D.MAIN_CODE = N'H003'
		                                                  WHERE C.COMP_CODE = @CompCode
		                                                    AND C.CAL_DATE &gt;= @PayYmdFr
		                                                    AND C.CAL_DATE &lt;= @PayYmdTo
		                                                ) DD                    ON DD.COMP_CODE = A.COMP_CODE
		                                                                       AND DD.DIV_CODE  = B.DIV_CODE
		                                                                       AND DD.CAL_DATE  = A.DUTY_YYYYMMDD
		                               WHERE A.COMP_CODE      = @CompCode
		                                 AND ISNULL(A.FLAG,'Y') IN ('Y', '')
		                                 AND A.DUTY_YYYYMMDD &gt;= @PayYmdFr
		                                 AND A.DUTY_YYYYMMDD &lt;= (CASE WHEN B.RETR_DATE = '00000000' THEN @PayYmdTo
		                                                         ELSE B.RETR_DATE END)
		                                 AND C.WORK_TIME_REL_CODE      = 'Y'
		                                 AND A.DUTY_NUM       &gt; 0
		                               GROUP BY A.COMP_CODE, A.PERSON_NUMB
		                             ) ETC ON ETC.COMP_CODE   = CC.COMP_CODE
		                                  AND ETC.PERSON_NUMB = CC.PERSON_NUMB
		             WHERE CC.COMP_CODE  =  @CompCode
					 )
			WHERE COMP_CODE   = @CompCode
		      AND DUTY_YYYYMM = @DutyYymm
		      AND PERSON_NUMB = @PersonNumb

</update>

<select id="hat200ukrServiceImpl.wirteCheck" parameterType="rMap" resultType="rMap">
	--UHat01Krv.Chbs100Kr SetHbs100[fnHbs100nq]
	SELECT PAY_CODE
	     , DUTY_CODE
	     , DUTY_TYPE
	     , COTR_TYPE
	     , DUTY_STRT_MM
	     , DUTY_STRT_DD
	     , DUTY_LAST_MM
	     , DUTY_LAST_DD
	     , MARGIR_TYPE
	     , MONTH_REL_CODE
	     , YEAR_REL_CODE
	     , MENS_REL_CODE
	     , WEEK_REL_CODE
	     , FULL_REL_CODE
	  FROM HBS100T
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND PAY_CODE  = #{PAY_CODE}
	   AND DUTY_CODE = #{DUTY_CODE}
</select>


	<insert id="hat200ukrServiceImpl.insertExcelHat200t_xls" parameterType="Map">       /* 엑셀insert */
        INSERT INTO HAT200T_XLS
             ( _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR
             , _EXCEL_ERROR_MSG

             , COMP_CODE
             , PERSON_NUMB
             , NAME
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME14)">
             , DUTY_TIME14
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME04)">
             , DUTY_TIME04
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME15)">
             , DUTY_TIME15
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME16)">
             , DUTY_TIME16
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME17)">
             , DUTY_TIME17
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME18)">
             , DUTY_TIME18
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME19)">
             , DUTY_TIME19
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM10)">
             , DUTY_NUM10
            </if>

            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM07)">
             , DUTY_NUM07
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM23)">
             , DUTY_NUM23
            </if>

             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             )
        VALUES
             ( #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
             , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
             , #{_EXCEL_ERROR,jdbcType=VARCHAR}

             , #{S_COMP_CODE}
             , #{PERSON_NUMB}
             , #{NAME}
             <if test="@foren.Ognl@isNotEmpty(DUTY_TIME14)">
             , ${DUTY_TIME14}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME04)">
             , ${DUTY_TIME04}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME15)">
             , ${DUTY_TIME15}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME16)">
             , ${DUTY_TIME16}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME17)">
             , ${DUTY_TIME17}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME18)">
             , ${DUTY_TIME18}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_TIME19)">
             , ${DUTY_TIME19}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM10)">
             , ${DUTY_NUM10}
            </if>

            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM07)">
             , ${DUTY_NUM07}
            </if>
            <if test="@foren.Ognl@isNotEmpty(DUTY_NUM23)">
             , ${DUTY_NUM23}
            </if>

             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </insert>

    <select id="hat200ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">    /* 엑셀업로드 버튼 / 조회 */
         BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
                SELECT
                _EXCEL_JOBID
                     , _EXCEL_ROWNUM
                     , _EXCEL_HAS_ERROR
                     , _EXCEL_ERROR_MSG
                    ,COMP_CODE
                    ,PERSON_NUMB
                    ,NAME
                    ,DUTY_TIME14
                    ,DUTY_TIME04
                    ,DUTY_TIME15
                    ,DUTY_TIME16
                    ,DUTY_TIME17
                    ,DUTY_TIME18
                    ,DUTY_TIME19
                    ,DUTY_NUM10
                    ,DUTY_NUM20
                    ,DUTY_NUM21
                    ,DUTY_NUM22
                    ,DUTY_NUM07
                    ,DUTY_NUM23

                  FROM HAT200T_XLS
                 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
                ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
        END
    </select>

    <update id="excelValidate" >    /* 엑셀validation */

    UPDATE   A
    SET
            A._EXCEL_HAS_ERROR = (CASE WHEN
                                        A.PERSON_NUMB     IS NULL THEN 'Y'     -- 발령코드

                                   ELSE A._EXCEL_HAS_ERROR                      -- 필수값 체크
                                 END),




            A._EXCEL_ERROR_MSG = (CASE WHEN  A.PERSON_NUMB      IS NULL THEN '필수입력 값을 확인 해주세요.'
                                       ELSE  A._EXCEL_ERROR_MSG
                                 END)

    FROM HAT200T_XLS A

    UPDATE   A
    SET
            A._EXCEL_HAS_ERROR = (CASE WHEN
                                        B.PERSON_NUMB   IS NULL THEN 'Y'       -- HUM100 사번 체크
                                   ELSE A._EXCEL_HAS_ERROR              -- 필수값 체크
                                 END),

            A._EXCEL_ERROR_MSG = (CASE WHEN
                                        B.PERSON_NUMB   IS NULL  THEN '인사정보에 없는 사번이 존재합니다.'
                                   ELSE A._EXCEL_ERROR_MSG
                                 END)

    FROM HAT200T_XLS A

    LEFT JOIN HUM100T B  ON B.COMP_CODE = #{S_COMP_CODE}
                        AND B.PERSON_NUMB  = A.PERSON_NUMB



    </update>



    <select id="hat200ukrServiceImpl.selectExcelUploadApply" parameterType="Map" resultType="rMap"> /* 엑셀업로드 버튼 / 조회 */
        BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
              , @UserId      NVARCHAR(100) /* 사용자ID    */
              , @LangType    NVARCHAR(2)  /* 언어구분    */
              , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        SET @CompCode = #{S_COMP_CODE}
        SET @UserId   = #{S_USER_ID}
        SET @LangType = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT TOP 1 @RefItem = REF_ITEM
          FROM BSA300T WITH (NOLOCK)
         WHERE USER_ID = @UserId

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT TOP 1 @DateFormat = CODE_NAME
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = @CompCode
           AND MAIN_CODE = N'B044'
           AND REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
            SELECT _EXCEL_JOBID
                 ,_EXCEL_ROWNUM
                 , _EXCEL_HAS_ERROR
                 , _EXCEL_ERROR_MSG

                    ,COMP_CODE
                    ,PERSON_NUMB
                    ,NAME
                    ,DUTY_TIME14
                    ,DUTY_TIME04
                    ,DUTY_TIME15
                    ,DUTY_TIME16
                    ,DUTY_TIME17
                    ,DUTY_TIME18
                    ,DUTY_TIME19
                    ,DUTY_NUM10
                    ,DUTY_NUM20
                    ,DUTY_NUM21
                    ,DUTY_NUM22
                    ,DUTY_NUM07
                    ,DUTY_NUM23
              FROM HAT200T_XLS
             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
            ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    END
    </select>
</mapper>