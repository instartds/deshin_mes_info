<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpb400rkrService">
<select id="hpb400rkrService.selectList1" parameterType="Map" resultType="rMap">  
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query1                                              
	SELECT A.DIV_CODE AS DIV_CODE                                                   
	     , A.DIV_FULL_NAME AS DIV_FULL_NAME                                         
	     , SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-'  
	       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                            
	     , A.ADDR                                                                   
	     , C.INWON                                                                  
	     , COUNT(SUPP_TOTAL_I) AS PAY_COUNT                                         
	     , SUM(B.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                      
	     , SUM(B.IN_TAX_I) AS IN_TAX_I                                              
	     , SUM(B.LOCAL_TAX_I) AS LOCAL_TAX_I                                        
	     , SUM(CASE WHEN B.IN_TAX_I &lt; 1000 THEN 1              ELSE 0 END) AS PAY_COUNT_SMALL  
	     , SUM(CASE WHEN B.IN_TAX_I &lt; 1000 THEN B.SUPP_TOTAL_I ELSE 0 END) AS SUPP_TOTAL_I_SMALL 
	     , SUM(CASE WHEN B.IN_TAX_I &lt; 1000 THEN B.IN_TAX_I     ELSE 0 END) AS IN_TAX_I_SMALL                                               
	     , SUM(CASE WHEN B.IN_TAX_I &lt; 1000 THEN B.LOCAL_TAX_I  ELSE 0 END) AS LOCAL_TAX_I_SMALL  
	     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                               
	     , '' AS DED_CODE
	     , '' AS NAME
	     , '' AS REPRE_NUM
	     , '' AS FOREIGN_YN
	     , '' AS SUPP_DATE
	     , 0 AS CNT
	     , 0 AS PERCENT_I
	     , 0 AS TOT_TAX_I
	  FROM BOR120T A WITH (NOLOCK) 
	                 INNER JOIN HPB200T B WITH (NOLOCK)                                          
	                         ON A.COMP_CODE = B.COMP_CODE                           
	                 INNER JOIN HPB100T D WITH (NOLOCK)                                            
	                         ON B.COMP_CODE   = D.COMP_CODE                           
	                        AND B.PERSON_NUMB = D.PERSON_NUMB                         
	                        AND B.DED_TYPE    = D.DED_TYPE                            
	     , (SELECT SUM(T.INWON) AS INWON                                            
	          FROM (SELECT COUNT(DISTINCT A.PERSON_NUMB) AS INWON                   
	                  FROM HPB200T A WITH (NOLOCK)                                               
	                               INNER JOIN HPB100T B WITH (NOLOCK)                            
	                                       ON A.COMP_CODE   = B.COMP_CODE           
	                                      AND A.PERSON_NUMB = B.PERSON_NUMB         
	                                      AND A.DED_TYPE    = B.DED_TYPE            
	                 WHERE A.COMP_CODE   = #{S_COMP_CODE}                   
	                   AND A.DED_TYPE    = '1'                                      
	                   AND B.DWELLING_YN = '1'                                      
	                   AND A.SECT_CODE   = #{DIV_CODE}                  
	                   AND ((LEFT(A.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})            
	                   AND  (LEFT(A.SUPP_DATE, 6) &lt;= #{SUPP_DATE_TO}))   
	                   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                                   
	                 GROUP BY A.PERCENT_I) T ) C                                    
	 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               = '1'                                                         
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND D.DWELLING_YN = '1'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
      		AND B.DED_CODE  &gt;= #{DEPT_CODE_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
      		AND B.DED_CODE &lt;= #{DEPT_CODE_TO}
      </if>      
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
      		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
      		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
      		AND B.PERSON_NUMB  = #{PERSON_NUMB}
      </if>                                   
	  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
      		AND B.SUPP_DATE  = #{SUPP_DATE}
      </if>                                   
	 GROUP BY A.DIV_CODE, A.DIV_FULL_NAME, A.COMPANY_NUM, A.ADDR, C.INWON           
	</select>	
<select id="hpb400rkrService.selectList1sub1" parameterType="Map" resultType="rMap">  	
--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query2                                
SELECT TOP 9 A.DED_CODE                                          
     , B.NAME                                                    
     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                             END)
             END) AS REPRE_NUM                                                                   
     , B.FOREIGN_YN                                              
     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE                         
     , COUNT(A.PERSON_NUMB) AS CNT                               
     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                       
     , A.PERCENT_I                                               
     , SUM(A.IN_TAX_I) AS IN_TAX_I                               
     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                         
     , (SUM(A.IN_TAX_I) + SUM(A.LOCAL_TAX_I)) AS TOT_TAX_I       
  FROM HPB200T A WITH (NOLOCK)                                                
               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                        
                           ON A.COMP_CODE   = B.COMP_CODE        
                          AND A.PERSON_NUMB = B.PERSON_NUMB      
                          AND A.DED_TYPE    = B.DED_TYPE         
 WHERE A.COMP_CODE              = #{S_COMP_CODE}      
   AND A.DED_TYPE               = '1'                                          
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '1'                                       
   AND A.SECT_CODE = #{DIV_CODE}
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
  		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
  </if>      
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
  		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
  		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
  		AND A.PERSON_NUMB  = #{PERSON_NUMB}
  </if>                                   
  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
  		AND A.SUPP_DATE  = #{SUPP_DATE}
  </if>      
 GROUP BY A.DED_CODE     , B.NAME     , B.COMP_NUM   , B.FOREIGN_YN, LEFT(A.SUPP_DATE, 4),A.PERCENT_I
     , B.FOREIGN_YN, B.PERSON_NUMB  
     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                             END)
             END)
 ORDER BY B.PERSON_NUMB

</select>
<select id="hpb400rkrService.selectList1sub2" parameterType="Map" resultType="rMap">  	
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query3
	
	--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
	 create table #temp  --创建临时表#Tmp
	(
	    DED_CODE	NVARCHAR(6),
	    NAME		NVARCHAR(30),
	    REPRE_NUM   NVARCHAR(30),
	    FOREIGN_YN  NVARCHAR(1),
	    SUPP_DATE   NVARCHAR(4),
	    CNT         NVARCHAR(5) ,
	    
	    SUPP_TOTAL_I NUMERIC(18,6),
	    PERCENT_I    NUMERIC(18,6),
	    IN_TAX_I     NUMERIC(18,6),
	    LOCAL_TAX_I  NUMERIC(18,6),
	    TOT_TAX_I    NUMERIC(18,6),
	    
	    GRP          NVARCHAR(1)
	);
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 21
	
	--2. 插入临时表 数据
	INSERT INTO #temp                                           
	SELECT A.DED_CODE                                                                        
	     , B.NAME                                                                            
	     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
	                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
	                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
	                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
	                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F') 
	                             END)
	         END) AS REPRE_NUM                                                                   
	     , B.FOREIGN_YN                                                                      
	     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE                                                 
	     , CAST(COUNT(A.PERSON_NUMB) AS NVARCHAR(5)) AS CNT                                  
	     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                               
	     , A.PERCENT_I                                                                       
	     , SUM(A.IN_TAX_I) AS IN_TAX_I                                                       
	     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                                                 
	     , SUM(A.IN_TAX_I + A.LOCAL_TAX_I) AS TOT_TAX_I          
	     
	     , '0'  GRP                            
	  FROM HPB200T A WITH (NOLOCK)                                                                         
	               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                                                
	                            ON A.COMP_CODE   = B.COMP_CODE                               
	                           AND A.PERSON_NUMB = B.PERSON_NUMB                             
	                           AND A.DED_TYPE    = B.DED_TYPE                                
	WHERE A.COMP_CODE              = #{S_COMP_CODE}      
   AND A.DED_TYPE               = '1'                                          
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '1'                                       
   AND A.SECT_CODE = #{DIV_CODE}   
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                 
	   AND A.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) NOT IN (SELECT TOP 9 B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4)
	                               FROM HPB200T A WITH (NOLOCK)                                           
	                                            LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                    
	                                              ON A.COMP_CODE = B.COMP_CODE               
	                                             AND A.PERSON_NUMB = B.PERSON_NUMB           
	                                             AND A.DED_TYPE = B.DED_TYPE                 
	                            WHERE A.COMP_CODE              = #{S_COMP_CODE}      
							   AND A.DED_TYPE               = '1'                                          
							   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
							   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
							   AND B.DWELLING_YN = '1'                                       
							   AND A.SECT_CODE = #{DIV_CODE}
							   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
						      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
						      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
						      </if>      
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
						      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
						      </if>                                   
							  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
						      		AND A.SUPP_DATE  = #{SUPP_DATE}
						      </if>      
	                              GROUP BY B.PERSON_NUMB, B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) 
	                              ORDER BY B.PERSON_NUMB)                                    
	 GROUP BY A.DED_CODE , B.NAME         , B.COMP_NUM , B.FOREIGN_YN  , LEFT(A.SUPP_DATE, 4)
	        , A.PERCENT_I, B.PERSON_NUMB 
	     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
	                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
	                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
	                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
	                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F') 
	                             END)
	         END)    
	 ORDER BY B.PERSON_NUMB    
	 
	 --3. 获取临时表行数， 小于@MAX 时，插入空数据至 满足 @MAX行
	 select @CNT = COUNT(*) FROM #TEMP
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				    --hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT CAST('' AS NVARCHAR(6)) AS DED_CODE       
					 , CAST('' AS NVARCHAR(30)) AS NAME          
					 , CAST('' AS NVARCHAR(30)) AS REPRE_NUM     
					 , CAST('' AS NVARCHAR(1)) AS FOREIGN_YN     
					 , CAST('' AS NVARCHAR(4)) AS SUPP_DATE      
					 , CAST('0' AS NVARCHAR(5)) AS CNT           
	
					 , CAST(0  AS NUMERIC(18,4)) AS SUPP_TOTAL_I 
					 , CAST(0  AS NUMERIC(18,4)) AS PERCENT_I    
					 , CAST(0  AS NUMERIC(18,4)) AS IN_TAX_I     
					 , CAST(0  AS NUMERIC(18,4)) AS LOCAL_TAX_I  
					 , CAST(0  AS NUMERIC(18,4)) AS TOT_TAX_I    
					 
					 , '1'  GRP
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
		
	SELECT ROW_NUMBER() OVER( ORDER BY GRP)+9 ROW_NUM, * FROM #temp
	ORDER BY GRP
</select>

<select id="hpb400rkrService.selectList2" parameterType="Map" resultType="rMap">
		--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
	 CREATE TABLE #temp(
      COMPANY_NUM        NVARCHAR(250)
	, DIV_FULL_NAME      NVARCHAR(250)
	, REPRE_NAME		 NVARCHAR(250)
	, ADDR				 NVARCHAR(250)
	, COMP_KOR_NAME      NVARCHAR(250)
	, REPRE_NO			 NVARCHAR(250)
	, COMP_NUM			 NVARCHAR(250)
	, COMP_KOR_ADDR      NVARCHAR(250)
	, NAME				 NVARCHAR(250)
	, REPRE_NUM			 NVARCHAR(250)
	, KOR_ADDR			 NVARCHAR(250)
	, DED_CODE			 NVARCHAR(250)
	, SAFFER_TAX_NM      NVARCHAR(250)
	, NATION_CODE        NVARCHAR(250)
	, CODE_NAME			 NVARCHAR(250)
	, INCOMEYYYY		 NVARCHAR(250)
	, PERSON_NUMB        NVARCHAR(250)
	, FOREIGN_YN		 NVARCHAR(250)
	, DED_TYPE			 NVARCHAR(250)
	, SECT_CODE			 NVARCHAR(250)
	, SUPP_YYYY			 NVARCHAR(250)
	, SUPP_MM			 NVARCHAR(250)
	, SUPP_DD			 NVARCHAR(250)
	, PAY_YYYY			 NVARCHAR(250)
	, PAY_MM			 NVARCHAR(250)
	
	, SUPP_TOTAL_I       NUMERIC(18,0)
	, PERCENT_I		     NUMERIC(18,4)
	, IN_TAX_I			 NUMERIC(18,0)
	, LOCAL_TAX_I        NUMERIC(18,0)
	, TOT_I				 NUMERIC(18,0)
	, GUBUN				 NUMERIC(18,0)
	, l_PAGE			 NUMERIC(18,0)
	, N_PAGE			 NUMERIC(6,0)
	, MAX_PAGE			 NUMERIC(6,0)
	, SUM_Q				 NUMERIC(18,6)
	, SUM_O				 NUMERIC(18,4)
	, SUM_TAX			 NUMERIC(18,4)
	, G_REC				 NUMERIC(4,0)

	, GRP                NVARCHAR(1)
	)
	
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 9
	
	INSERT INTO #temp   
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_2Q] Query1                                                     
	SELECT SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-'         
	       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                                   
	     , A.DIV_FULL_NAME AS DIV_FULL_NAME, A.REPRE_NAME, A.ADDR, C.COMP_KOR_NAME         
	     , (CASE ISNULL(E.COMP_OWN_NO,'') WHEN ''                         
	                                           THEN unilite.fnCipherDecrypt(E.REPRE_NO, 'RR')
	                                           ELSE E.COMP_OWN_NO
	         END) AS REPRE_NO 
	     , SUBSTRING(C.COMP_NUM,1,3) + '-' + SUBSTRING(C.COMP_NUM,4,2) + '-'               
	       + SUBSTRING(C.COMP_NUM,6,5) AS COMP_NUM                                         
	     , C.COMP_KOR_ADDR                                                                 
	     , C.NAME                                                                          
	     , unilite.fnCipherDecrypt(C.REPRE_NUM, 'RR') AS REPRE_NUM 
	     , C.KOR_ADDR                                                    
	     , C.DED_CODE                                                    
	     , A.SAFFER_TAX_NM                                               
	     , C.NATION_CODE                                                 
	     , D.CODE_NAME                                                   
	     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                  
	     , C.PERSON_NUMB                                                 
	     , C.FOREIGN_YN                                                  
	     , B.DED_TYPE                                                    
	     , B.SECT_CODE                                                   
	     , SUBSTRING(B.SUPP_DATE, 1, 4) AS SUPP_YYYY                     
	     , SUBSTRING(B.SUPP_DATE, 5, 2) AS SUPP_MM                       
	     , SUBSTRING(B.SUPP_DATE, 7, 2) AS SUPP_DD                       
	     , SUBSTRING(B.PAY_YYYYMM, 1, 4) AS PAY_YYYY                     
	     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MM                       
	     , B.SUPP_TOTAL_I                                                
	     , B.PERCENT_I                                                   
	     , CASE WHEN C.BUSINESS_TYPE = '1'
		        THEN ISNULL(B.CP_TAX_I, 0)
				ELSE ISNULL(B.IN_TAX_I, 0)
			END						AS IN_TAX_I
	     , B.LOCAL_TAX_I                                                 
	     , CASE WHEN C.BUSINESS_TYPE = '1' 
		        THEN (B.CP_TAX_I + B.LOCAL_TAX_I) 
				ELSE (B.IN_TAX_I + B.LOCAL_TAX_I) 
			END						AS TOT_I                            
	     , CONVERT(NUMERIC(18,0),0) AS GUBUN        --GROUP              
	     , CONVERT(NUMERIC(18,0),0) AS l_PAGE       --PAGE수             
	     , CONVERT(NUMERIC(6,0),0)  AS N_PAGE       --Group내 페이지수   
	     , CONVERT(NUMERIC(6,0),0)  AS MAX_PAGE     --Group내 총페이지수 
	     , CONVERT(NUMERIC(18,6),0) AS SUM_Q                             
	     , CONVERT(NUMERIC(18,4),0) AS SUM_O                             
	     , CONVERT(NUMERIC(18,4),0) AS SUM_TAX                           
	     , CONVERT(NUMERIC(4,0),0)  AS G_REC        --Group내 record수 

         , '0' GRP 
	  FROM BOR120T A WITH (NOLOCK)
	                 INNER JOIN BOR100T E WITH (NOLOCK)                               
	                         ON A.COMP_CODE = E.COMP_CODE                
	                 INNER JOIN HPB200T B WITH (NOLOCK)                               
	                         ON A.COMP_CODE = B.COMP_CODE                
	               LEFT OUTER JOIN HPB100T C WITH (NOLOCK)                            
	                            ON B.COMP_CODE   = C.COMP_CODE           
	                           AND B.DED_TYPE    = C.DED_TYPE            
	                           AND B.PERSON_NUMB = C.PERSON_NUMB         
	               LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                            
	                            ON C.COMP_CODE   = D.COMP_CODE           
	                           AND C.NATION_CODE = D.SUB_CODE            
	                           AND D.MAIN_CODE   = 'B012'                
	   
	    WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               = '1'                                                         
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND C.DWELLING_YN = '1'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
	 ORDER BY C.PERSON_NUMB, B.PAY_YYYYMM, B.SUPP_DATE    
	 
	 

	 
 
 
  --3. 获取临时表行数， 小于@max 时，插入空数据至 满足 @max行
    declare
            @PERSON_NUMB NVARCHAR(250)
	DECLARE MyCursor CURSOR	 FOR 
	SELECT distinct PERSON_NUMB FROM #temp
	
	--打开一个游标	
	OPEN MyCursor
	--循环一个游标
	FETCH NEXT FROM  MyCursor INTO @PERSON_NUMB
	WHILE @@FETCH_STATUS =0
		BEGIN
			
			select @CNT = COUNT(*) FROM #TEMP
			WHERE PERSON_NUMB = @PERSON_NUMB
			
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
	    if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT  top 1
					  COMPANY_NUM       
					, DIV_FULL_NAME     
					, REPRE_NAME		
					, ADDR				
					, COMP_KOR_NAME     
					, REPRE_NO			
					, COMP_NUM			
					, COMP_KOR_ADDR     
					, NAME				
					, REPRE_NUM			
					, KOR_ADDR			
					, DED_CODE			
					, SAFFER_TAX_NM     
					, NATION_CODE       
					, CODE_NAME			
					, INCOMEYYYY		
					, PERSON_NUMB       
					, FOREIGN_YN		
					, DED_TYPE			
					, SECT_CODE			
					, CAST('' AS NVARCHAR(250))	AS  SUPP_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  SUPP_MM			
					, CAST('' AS NVARCHAR(250))	AS  SUPP_DD			
					, CAST('' AS NVARCHAR(250))	AS  PAY_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  PAY_MM

					, CAST(0  AS NUMERIC(18,6))	AS  SUPP_TOTAL_I    
					, CAST(0  AS NUMERIC(18,6))	AS  PERCENT_I		
					, CAST(0  AS NUMERIC(18,6))	AS  IN_TAX_I		
					, CAST(0  AS NUMERIC(18,6))	AS  LOCAL_TAX_I     
					, CAST(0  AS NUMERIC(18,6))	AS  TOT_I     

					--, SUPP_TOTAL_I      
					--, PERCENT_I		    
					--, IN_TAX_I			
					--, LOCAL_TAX_I       
					--, TOT_I				
					, GUBUN				
					, l_PAGE			
					, N_PAGE			
					, MAX_PAGE			
					, SUM_Q				
					, SUM_O				
					, SUM_TAX			
					, G_REC			
					
					,'1' GRP
				FROM #temp 	
				WHERE PERSON_NUMB = @PERSON_NUMB	 
			
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
			
			FETCH NEXT FROM  MyCursor INTO  @PERSON_NUMB
		END	

	--关闭游标
	CLOSE MyCursor
	--释放资源
	DEALLOCATE MyCursor
	
	 
	 
		
	SELECT ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  ) ROW_NUM, 
	(ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  )-1)/@MAX PAGE_NUM,
	* FROM #temp
      ORDER BY  PERSON_NUMB, GRP, PAY_YYYY+PAY_MM,  SUPP_MM+SUPP_DD                                                          
</select>	

<select id="hpb400rkrService.selectList3" parameterType="Map" resultType="rMap">  
	
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_3Q] Query1                                                
SELECT A.DIV_CODE AS DIV_CODE                                                     
     , A.DIV_FULL_NAME AS DIV_FULL_NAME                                           
     , SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-'    
       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                              
     , A.ADDR                                                                     
     , C.INWON                                                                    
     , COUNT(SUPP_TOTAL_I) AS PAY_COUNT                                           
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                          
     , SUM(B.IN_TAX_I) AS IN_TAX_I                                                
     , SUM(B.LOCAL_TAX_I) AS LOCAL_TAX_I                                          
     , SUM(B.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                        
     , SUM(B.CP_TAX_I) AS CP_TAX_I                                                
     , SUM(B.SP_TAX_I) AS SP_TAX_I                                                
     , SUM(B.IN_TAX_I + B.LOCAL_TAX_I + B.CP_TAX_I + B.SP_TAX_I) AS TAX_AMOUNT_I  
     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                               
  FROM BOR120T A WITH (NOLOCK)
               INNER JOIN HPB200T B WITH (NOLOCK)                                            
                         ON A.COMP_CODE = B.COMP_CODE
               INNER JOIN HPB100T D WITH (NOLOCK)                                              
                       ON B.COMP_CODE   = D.COMP_CODE                             
                      AND B.PERSON_NUMB = D.PERSON_NUMB                           
                      AND B.DED_TYPE    = D.DED_TYPE                              
     , (SELECT SUM(T.INWON) INWON                                                 
          FROM (SELECT COUNT(DISTINCT A.PERSON_NUMB) AS INWON                     
                  FROM HPB200T A WITH (NOLOCK)                                                 
                               INNER JOIN HPB100T B WITH (NOLOCK)                              
                                       ON A.COMP_CODE   = B.COMP_CODE             
                                      AND A.PERSON_NUMB = B.PERSON_NUMB           
                                      AND A.DED_TYPE    = B.DED_TYPE              
                 WHERE A.COMP_CODE   = #{S_COMP_CODE}                   
	                   AND A.DED_TYPE    = '2'                                      
	                   AND B.DWELLING_YN = '1'                                      
	                   AND A.SECT_CODE   = #{DIV_CODE}                  
	                   AND ((LEFT(A.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})            
	                   AND  (LEFT(A.SUPP_DATE, 6) &lt;= #{SUPP_DATE_TO}))   
	                   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                                   
	                 GROUP BY A.PERCENT_I) T ) C                                    
	 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               = '2'                                                         
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND D.DWELLING_YN = '1'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
      		AND B.DED_CODE  &gt;= #{DEPT_CODE_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
      		AND B.DED_CODE &lt;= #{DEPT_CODE_TO}
      </if>      
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
      		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
      		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
      		AND B.PERSON_NUMB  = #{PERSON_NUMB}
      </if>                                   
	  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
      		AND B.SUPP_DATE  = #{SUPP_DATE}
      </if>                                                
 GROUP BY A.DIV_CODE, A.DIV_FULL_NAME, A.COMPANY_NUM, A.ADDR, C.INWON             
	
	        
	</select>	
<select id="hpb400rkrService.selectList3sub1" parameterType="Map" resultType="rMap">  	
--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_3Q] Query2                                                            
SELECT TOP 10 A.DED_CODE                                                                     
     , B.NAME                                                                                
     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                             END)
             END) AS REPRE_NUM                                                                   
     , B.FOREIGN_YN                                                                          
     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE                                                     
     , COUNT(A.PERSON_NUMB) AS CNT                                                           
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                                     
     , SUM(EXPS_AMOUNT_I) AS EXPS_AMOUNT_I                                                   
     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                                   
     , A.PERCENT_I                                                                           
     , SUM(A.IN_TAX_I) AS IN_TAX_I                                                           
     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                                                     
     , SUM(CP_TAX_I) AS CP_TAX_I                                                             
     , SUM(SP_TAX_I) AS SP_TAX_I                                                             
     , (SUM(A.IN_TAX_I) + SUM(A.LOCAL_TAX_I) + SUM(CP_TAX_I) + SUM(SP_TAX_I)) AS TOT_TAX_I   
  FROM HPB200T A WITH (NOLOCK)                                                                            
               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                                                    
                            ON A.COMP_CODE   = B.COMP_CODE                                   
                           AND A.PERSON_NUMB = B.PERSON_NUMB                                 
                           AND A.DED_TYPE    = B.DED_TYPE                                    
WHERE A.COMP_CODE              = #{S_COMP_CODE}      
   AND A.DED_TYPE               = '2'                                          
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '1'                                       
   AND A.SECT_CODE = #{DIV_CODE}
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
  		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
  </if>      
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
  		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
  		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
  		AND A.PERSON_NUMB  = #{PERSON_NUMB}
  </if>                                   
  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
  		AND A.SUPP_DATE  = #{SUPP_DATE}
  </if>                                               
 GROUP BY A.DED_CODE  , B.NAME         , B.COMP_NUM  , B.FOREIGN_YN  , LEFT(A.SUPP_DATE, 4)  
        , A.PERCENT_I , B.PERSON_NUMB
     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                             END)
             END)    
 ORDER BY B.PERSON_NUMB                                                                      


</select>
<select id="hpb400rkrService.selectList3sub2" parameterType="Map" resultType="rMap">  	
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_3Q] Query3
	
	--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
	 create table #temp  --创建临时表#Tmp
	(
	    DED_CODE	NVARCHAR(6),
	    NAME		NVARCHAR(30),
	    REPRE_NUM   NVARCHAR(30),
	    FOREIGN_YN  NVARCHAR(1),
	    SUPP_DATE   NVARCHAR(4),
	    CNT         NVARCHAR(5) ,
	    
	    PAY_AMOUNT_I 	NUMERIC(18,6),
	    EXPS_AMOUNT_I   NUMERIC(18,6),
	    
	    SUPP_TOTAL_I NUMERIC(18,6),
	    PERCENT_I    NUMERIC(18,6),
	    IN_TAX_I     NUMERIC(18,6),
	    LOCAL_TAX_I  NUMERIC(18,6),
	    
	    CP_TAX_I     	NUMERIC(18,6),
	    SP_TAX_I  		NUMERIC(18,6),
	    
	    TOT_TAX_I    NUMERIC(18,6)    ,
	    
	    
	    GRP          NVARCHAR(1)
	);
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 15
	
	--2. 插入临时表 数据
	INSERT INTO #temp                                           
	SELECT A.DED_CODE                                                                          
     , B.NAME                                                                              
     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                             END)
         END) AS REPRE_NUM                                                                   
     , B.FOREIGN_YN                                                         
     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE                                    
     , CAST(COUNT(A.PERSON_NUMB) AS NVARCHAR(5)) AS CNT                     
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                    
     , SUM(EXPS_AMOUNT_I) AS EXPS_AMOUNT_I                                  
     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                  
     , A.PERCENT_I  AS PERCENT_I
     , SUM(A.IN_TAX_I) AS IN_TAX_I                                          
     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                                    
     , SUM(CP_TAX_I) AS CP_TAX_I                                            
     , SUM(SP_TAX_I) AS SP_TAX_I                                            
     , SUM(A.IN_TAX_I + A.LOCAL_TAX_I + CP_TAX_I + SP_TAX_I) AS TOT_TAX_I      
     
     ,'0' GRP                                
	  FROM HPB200T A WITH (NOLOCK)                                                                        
	               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                                                
	                            ON A.COMP_CODE   = B.COMP_CODE                               
	                           AND A.PERSON_NUMB = B.PERSON_NUMB                             
	                           AND A.DED_TYPE    = B.DED_TYPE                                
	WHERE A.COMP_CODE              = #{S_COMP_CODE}      
   AND A.DED_TYPE               = '2'                                          
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '1'                                       
   AND A.SECT_CODE = #{DIV_CODE}   
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                 
	   AND A.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) NOT IN (SELECT TOP 10 B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4)
	                               FROM HPB200T A WITH (NOLOCK)                                           
	                                            LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                  
	                                              ON A.COMP_CODE = B.COMP_CODE               
	                                             AND A.PERSON_NUMB = B.PERSON_NUMB           
	                                             AND A.DED_TYPE = B.DED_TYPE                 
	                            WHERE A.COMP_CODE              = #{S_COMP_CODE}      
							   AND A.DED_TYPE               = '2'                                          
							   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
							   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
							   AND B.DWELLING_YN = '1'                                       
							   AND A.SECT_CODE = #{DIV_CODE}
							   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
						      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
						      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
						      </if>      
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
						      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
						      </if>                                   
							  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
						      		AND A.SUPP_DATE  = #{SUPP_DATE}
						      </if>      
	                              GROUP BY B.PERSON_NUMB, B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) 
	                              ORDER BY B.PERSON_NUMB)                                    
	 GROUP BY A.DED_CODE , B.NAME         , B.COMP_NUM , B.FOREIGN_YN  , LEFT(A.SUPP_DATE, 4)
	        , A.PERCENT_I, B.PERSON_NUMB 
	     , (CASE WHEN B.BUSINESS_TYPE = '1'                                                      
	                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
	                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
	                  ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
	                             ELSE unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F') 
	                             END)
	         END)    
	 ORDER BY B.PERSON_NUMB    
	 
	 --3. 获取临时表行数， 小于@MAX 时，插入空数据至 满足@MAX行
	 select @CNT = COUNT(*) FROM #TEMP
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				    --hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT CAST('' AS NVARCHAR(3))   AS DED_CODE
				     , CAST('' AS NVARCHAR(30))  AS NAME
				     , CAST('' AS NVARCHAR(20))  AS REPRE_NUM
				     , CAST('' AS NVARCHAR(1))   AS FOREIGN_YN
				     , CAST('' AS NVARCHAR(4))   AS SUPP_DATE
				     , CAST('0' AS NVARCHAR(5))  AS CNT
				     
				     
				     , CAST(0  AS NUMERIC(18,4)) AS PAY_AMOUNT_I
				     , CAST(0  AS NUMERIC(18,4)) AS EXPS_AMOUNT_I
				     
				     , CAST(0  AS NUMERIC(18,4)) AS SUPP_TOTAL_I
				     , CAST(0  AS NUMERIC(18,4)) AS PERCENT_I
				     , CAST(0  AS NUMERIC(18,4)) AS IN_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS LOCAL_TAX_I
				     
				     , CAST(0  AS NUMERIC(18,4)) AS CP_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS SP_TAX_I
				     
				     , CAST(0  AS NUMERIC(18,4)) AS TOT_TAX_I
					 ,'1' GRP 
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
		
	SELECT ROW_NUMBER() OVER( ORDER BY GRP)+10 ROW_NUM, * FROM #temp
	ORDER BY  GRP
</select>

<select id="hpb400rkrService.selectList4" parameterType="Map" resultType="rMap">
		--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
		 CREATE TABLE #temp(
      COMPANY_NUM        NVARCHAR(250)
	, DIV_FULL_NAME      NVARCHAR(250)
	, REPRE_NAME		 NVARCHAR(250)
	, REPRE_NO			 NVARCHAR(250)
	, ADDR				 NVARCHAR(250)
	, COMP_KOR_NAME      NVARCHAR(250)
	, COMP_NUM			 NVARCHAR(250)
	, COMP_KOR_ADDR      NVARCHAR(250)
	, NAME				 NVARCHAR(250)
	, REPRE_NUM			 NVARCHAR(250)
	, KOR_ADDR			 NVARCHAR(250)
	, DED_CODE			 NVARCHAR(250)
	, SAFFER_TAX_NM      NVARCHAR(250)
	, NATION_CODE        NVARCHAR(250)
	, CODE_NAME			 NVARCHAR(250)
	, DWELLING_YN			 NVARCHAR(250)
	, INCOMEYYYY		 NVARCHAR(250)
	, FOREIGN_YN		 NVARCHAR(250)
	, SUPP_YYYY			 NVARCHAR(250)
	, SUPP_MM			 NVARCHAR(250)
	, SUPP_DD			 NVARCHAR(250)
	, PAY_YYYY			 NVARCHAR(250)
	, PAY_MM			 NVARCHAR(250)
	, PAY_AMOUNT_I       NUMERIC(18,0)
	, EXPS_AMOUNT_I       NUMERIC(18,0)
	, SUPP_TOTAL_I       NUMERIC(18,0)
	, PERCENT_I		     NUMERIC(18,4)
	, IN_TAX_I			 NUMERIC(18,0)
	, LOCAL_TAX_I        NUMERIC(18,0)
	, TOT_I				 NUMERIC(18,0)
	, CP_TAX_I				 NUMERIC(18,0)
	, SP_TAX_I				 NUMERIC(18,0)
	, PERSON_NUMB        NVARCHAR(250)
	, DED_TYPE			 NVARCHAR(250)
	, GUBUN				 NUMERIC(18,0)
	, l_PAGE			 NUMERIC(18,0)
	, N_PAGE			 NUMERIC(6,0)
	, MAX_PAGE			 NUMERIC(6,0)
	, SUM_Q				 NUMERIC(18,6)
	, SUM_O				 NUMERIC(18,4)
	, SUM_TAX			 NUMERIC(18,4)
	, G_REC				 NUMERIC(4,0)

	, GRP                NVARCHAR(1)
	)
	
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 11
	
	INSERT INTO #temp   
--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_4Q] Query1                                             
SELECT SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-' 
       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                           
     , A.DIV_FULL_NAME AS DIV_FULL_NAME                                        
     , A.REPRE_NAME                                                            
     , (CASE ISNULL(E.COMP_OWN_NO,'') WHEN ''                         
                                           THEN unilite.fnCipherDecrypt(E.REPRE_NO, 'RR')
                                           ELSE E.COMP_OWN_NO
         END) AS REPRE_NO 
     , A.ADDR                                                                  
     , C.COMP_KOR_NAME                                                         
     , SUBSTRING(C.COMP_NUM,1,3) + '-' + SUBSTRING(C.COMP_NUM,4,2) + '-'       
       + SUBSTRING(C.COMP_NUM,6,5) AS COMP_NUM                                 
     , C.COMP_KOR_ADDR                                                         
     , C.NAME                                                                  
     , (CASE WHEN C.BUSINESS_TYPE = '1' AND C.DWELLING_YN = '1'                                                      
             THEN SUBSTRING(C.COMP_NUM,1,3) + '-' + SUBSTRING(C.COMP_NUM, 4, 2) + '-' + SUBSTRING(C.COMP_NUM, 6,5)                                          
             ELSE (CASE WHEN C.FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(C.REPRE_NUM, 'A')      
                        ELSE (CASE WHEN C.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(C.FOREIGN_NUM, 'F')
                                   ELSE ISNULL(C.RECOGN_NUM, '')
                                   END)
                        END)
             END) AS REPRE_NUM                                                                   
     , CASE WHEN C.BUSINESS_TYPE &lt;&gt; '1' THEN 
                 (CASE WHEN DWELLING_YN = '1' THEN KOR_ADDR 
                       ELSE C.ENG_ADDR 
                       END)
            ELSE (CASE WHEN C.DWELLING_YN = '1' THEN C.COMP_KOR_ADDR 
                       ELSE C.COMP_ENG_ADDR 
                       END)
            END KOR_ADDR 
     , C.DED_CODE                                                          
     , A.SAFFER_TAX_NM                                                     
     , C.NATION_CODE                                                       
     , D.CODE_NAME                                                         
     , C.DWELLING_YN                                                       
     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                          
     , C.FOREIGN_YN                                                        
     , SUBSTRING(B.SUPP_DATE, 3, 2) AS SUPP_YYYY                           
     , SUBSTRING(B.SUPP_DATE, 5, 2) AS SUPP_MM                             
     , SUBSTRING(B.SUPP_DATE, 7, 2) AS SUPP_DD                             
     , SUBSTRING(B.PAY_YYYYMM, 3, 2) AS PAY_YYYY                           
     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MM                             
     , B.PAY_AMOUNT_I                                                      
     , B.EXPS_AMOUNT_I                                                     
     , B.SUPP_TOTAL_I                                                      
     , B.PERCENT_I                                                         
     , B.IN_TAX_I                                                          
     , B.LOCAL_TAX_I                                                       
     , (B.IN_TAX_I + B.LOCAL_TAX_I + B.CP_TAX_I + B.SP_TAX_I) AS TOT_I     
     , B.CP_TAX_I                                                          
     , B.SP_TAX_I                                                          
     , B.PERSON_NUMB                                                       
     , B.DED_TYPE                                                          
     , CONVERT(NUMERIC(18,0),0) AS GUBUN       --GROUP                     
     , CONVERT(NUMERIC(18,0),0) AS l_PAGE      --PAGE수                    
     , CONVERT(NUMERIC(6,0),0)  AS N_PAGE      --Group내 페이지수          
     , CONVERT(NUMERIC(6,0),0)  AS MAX_PAGE    --Group내 총페이지수        
     , CONVERT(NUMERIC(18,6),0) AS SUM_Q                                   
     , CONVERT(NUMERIC(18,4),0) AS SUM_O                                   
     , CONVERT(NUMERIC(18,4),0) AS SUM_TAX                                 
     , CONVERT(NUMERIC(4,0),0)  AS G_REC       --Group내 record수       
     
     , '0' GRP   
  FROM BOR120T A WITH (NOLOCK)
                 INNER JOIN BOR100T E WITH (NOLOCK)                                
                         ON A.COMP_CODE = E.COMP_CODE                
                 INNER JOIN HPB200T B WITH (NOLOCK)           
                         ON A.COMP_CODE = B.COMP_CODE                
               LEFT OUTER JOIN HPB100T C WITH (NOLOCK)
                            ON B.COMP_CODE   = C.COMP_CODE                 
                           AND B.DED_TYPE    = C.DED_TYPE                  
                           AND B.PERSON_NUMB = C.PERSON_NUMB               
               LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                                  
                            ON C.COMP_CODE   = D.COMP_CODE                 
                           AND C.NATION_CODE = D.SUB_CODE                  
                           AND D.MAIN_CODE   = 'B012'                       
	    WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               = '2'                                                         
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND C.DWELLING_YN = '1'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
	 ORDER BY C.PERSON_NUMB, B.PAY_YYYYMM, B.SUPP_DATE                                                        
	 
 
  --3. 获取临时表行数， 小于@max 时，插入空数据至 满足 @max行
    declare
            @PERSON_NUMB NVARCHAR(250)
	DECLARE MyCursor CURSOR	 FOR 
	SELECT distinct PERSON_NUMB FROM #temp
	
	--打开一个游标	
	OPEN MyCursor
	--循环一个游标
	FETCH NEXT FROM  MyCursor INTO @PERSON_NUMB
	WHILE @@FETCH_STATUS =0
		BEGIN
			
			select @CNT = COUNT(*) FROM #TEMP
			WHERE PERSON_NUMB = @PERSON_NUMB
			
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT  top 1
					  COMPANY_NUM        
					, DIV_FULL_NAME      
					, REPRE_NAME		 
					, REPRE_NO			 
					, ADDR				 
					, COMP_KOR_NAME      
					, COMP_NUM			 
					, COMP_KOR_ADDR      
					, NAME				 
					, REPRE_NUM			 
					, KOR_ADDR			 
					, DED_CODE			 
					, SAFFER_TAX_NM      
					, NATION_CODE        
					, CODE_NAME			 
					, DWELLING_YN		
					, INCOMEYYYY		 
					, FOREIGN_YN	 
					, CAST('' AS NVARCHAR(250))	AS  SUPP_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  SUPP_MM			
					, CAST('' AS NVARCHAR(250))	AS  SUPP_DD			
					, CAST('' AS NVARCHAR(250))	AS  PAY_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  PAY_MM
					, CAST(0  AS NUMERIC(18,6))	AS  PAY_AMOUNT_I       
					, CAST(0  AS NUMERIC(18,6))	AS  EXPS_AMOUNT_I      
					, CAST(0  AS NUMERIC(18,6))	AS  SUPP_TOTAL_I    
					, CAST(0  AS NUMERIC(18,6))	AS  PERCENT_I		
					, CAST(0  AS NUMERIC(18,6))	AS  IN_TAX_I		
					, CAST(0  AS NUMERIC(18,6))	AS  LOCAL_TAX_I     
					, CAST(0  AS NUMERIC(18,6))	AS  TOT_I     
					, CAST(0  AS NUMERIC(18,6))	AS  CP_TAX_I			
					, CAST(0  AS NUMERIC(18,6))	AS  SP_TAX_I			
					, PERSON_NUMB        
					, DED_TYPE			 
					, GUBUN				 
					, l_PAGE			 
					, N_PAGE			 
					, MAX_PAGE			 
					, SUM_Q				 
					, SUM_O				 
					, SUM_TAX			 
					, G_REC				 
					
					, '1' GRP                

				FROM #temp 	
				WHERE PERSON_NUMB = @PERSON_NUMB	 
			
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
			
			FETCH NEXT FROM  MyCursor INTO  @PERSON_NUMB
		END	

	--关闭游标
	CLOSE MyCursor
	--释放资源
	DEALLOCATE MyCursor
	
	 
	SELECT ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  ) ROW_NUM,
	       (ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  )-1)/@MAX PAGE_NUM,
	       0 AS NON_TAX_AMOUNT_I,   --20200812 추가
	       *
	  FROM #temp
	 ORDER BY  PERSON_NUMB, GRP, PAY_YYYY+PAY_MM,  SUPP_MM+SUPP_DD                                            
</select>

<select id="hpb400rkrService.selectList5" parameterType="Map" resultType="rMap">  
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_5Q] Query1                                                
SELECT A.DIV_CODE AS DIV_CODE                                                     
     , A.DIV_FULL_NAME AS DIV_FULL_NAME                                           
     , SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-'    
       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                              
     , A.ADDR                                                                     
     , C.INWON                                                                    
     , COUNT(SUPP_TOTAL_I) AS PAY_COUNT                                           
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                          
     , SUM(B.IN_TAX_I) AS IN_TAX_I                                                
     , SUM(B.LOCAL_TAX_I) AS LOCAL_TAX_I                                          
     , SUM(B.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                        
     , SUM(B.CP_TAX_I) AS CP_TAX_I                                                
     , SUM(B.SP_TAX_I) AS SP_TAX_I                                                
     , SUM(B.IN_TAX_I + B.LOCAL_TAX_I + B.CP_TAX_I + B.SP_TAX_I) AS TAX_AMOUNT_I  
     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                               
  FROM BOR120T A WITH (NOLOCK)
               INNER JOIN HPB200T B WITH (NOLOCK)                                            
                         ON A.COMP_CODE = B.COMP_CODE
               INNER JOIN HPB100T D WITH (NOLOCK)                                              
                       ON B.COMP_CODE   = D.COMP_CODE                             
                      AND B.PERSON_NUMB = D.PERSON_NUMB                           
                      AND B.DED_TYPE    = D.DED_TYPE                              
     , (SELECT SUM(T.INWON) INWON                                                 
          FROM (SELECT COUNT(DISTINCT A.PERSON_NUMB) AS INWON                     
                  FROM HPB200T A WITH (NOLOCK)                                                 
                               INNER JOIN HPB100T B WITH (NOLOCK)                              
                                       ON A.COMP_CODE   = B.COMP_CODE             
                                      AND A.PERSON_NUMB = B.PERSON_NUMB           
                                      AND A.DED_TYPE    = B.DED_TYPE              
                 WHERE A.COMP_CODE   = #{S_COMP_CODE}                   
	                   AND A.DED_TYPE IN ('1', '2')                                  
			           AND B.DWELLING_YN = '2'                                       
			           AND A.SECT_CODE   = #{DIV_CODE}                  
	                   AND ((LEFT(A.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})            
	                   AND  (LEFT(A.SUPP_DATE, 6) &lt;= #{SUPP_DATE_TO}))   
	                   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                                   
	                 GROUP BY A.PERCENT_I) T ) C                                    
	 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               IN ('1', '2')                                                            
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND D.DWELLING_YN = '2'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
      		AND B.DED_CODE  &gt;= #{DEPT_CODE_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
      		AND B.DED_CODE &lt;= #{DEPT_CODE_TO}
      </if>      
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
      		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
      		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
      </if>       
	  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
      		AND B.PERSON_NUMB  = #{PERSON_NUMB}
      </if>                                   
	  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
      		AND B.SUPP_DATE  = #{SUPP_DATE}
      </if>                                                
 GROUP BY A.DIV_CODE, A.DIV_FULL_NAME, A.COMPANY_NUM, A.ADDR, C.INWON             
	
	        
	</select>	
<select id="hpb400rkrService.selectList5sub1" parameterType="Map" resultType="rMap">  	
--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_5Q] Query2                                                            
SELECT TOP 10 A.DED_CODE                                                                    
      , B.ENG_NAME                                                                          
     , (CASE WHEN B.BUSINESS_TYPE = '1' AND B.DWELLING_YN = '1'                                                      
            THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-' + SUBSTRING(B.COMP_NUM, 6,5)                                          
            ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                       ELSE (CASE WHEN B.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                                  ELSE ISNULL(B.RECOGN_NUM, '')
                                  END)
                       END)
            END) AS REPRE_NUM                                                                   
     , CASE WHEN BUSINESS_TYPE &lt;&gt; '1' THEN B.ENG_ADDR
            ELSE B.COMP_ENG_ADDR
            END ENG_ADDR 
     , B.NATION_CODE                                                                       
     , B.FOREIGN_YN                                                                        
     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE_Y
     --20200811 추가: 양식 변경으로 추가
     , A.SUPP_DATE          AS SUPP_DATE
     , COUNT(DISTINCT A.PERSON_NUMB + A.SUPP_DATE) AS CNT                                                         
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                                   
     , SUM(EXPS_AMOUNT_I) AS EXPS_AMOUNT_I                                                 
     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                                 
     , A.PERCENT_I                                                                         
     , SUM(A.IN_TAX_I) AS IN_TAX_I                                                         
     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                                                   
     , SUM(CP_TAX_I) AS CP_TAX_I                                                           
     , SUM(SP_TAX_I) AS SP_TAX_I                                                           
     , (SUM(A.IN_TAX_I) + SUM(A.LOCAL_TAX_I) + SUM(CP_TAX_I) + SUM(SP_TAX_I)) AS TOT_TAX_I 
  FROM HPB200T A WITH (NOLOCK)                                                                            
               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                                                    
                            ON A.COMP_CODE   = B.COMP_CODE                                   
                           AND A.PERSON_NUMB = B.PERSON_NUMB                                 
                           AND A.DED_TYPE    = B.DED_TYPE                                    
WHERE A.COMP_CODE              = #{S_COMP_CODE}      
    AND A.DED_TYPE IN ('1', '2')                                      
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '2'                                       
   AND A.SECT_CODE = #{DIV_CODE}
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
  		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
  </if>      
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
  		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
  		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
  </if>       
  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
  		AND A.PERSON_NUMB  = #{PERSON_NUMB}
  </if>                                   
  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
  		AND A.SUPP_DATE  = #{SUPP_DATE}
  </if>                                               
 GROUP BY A.DED_CODE, B.ENG_NAME, B.COMP_NUM, B.FOREIGN_YN, LEFT(A.SUPP_DATE, 4), A.SUPP_DATE--20200811 추가: 양식 변경으로 추가
        , A.PERCENT_I, B.BUSINESS_TYPE, B.RECOGN_NUM, B.PERSON_NUMB                        
        , B.ENG_ADDR, NATION_CODE , B.COMP_ENG_ADDR, B.DWELLING_YN
     , (CASE WHEN B.BUSINESS_TYPE = '1' AND B.DWELLING_YN = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
            ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                       ELSE (CASE WHEN B.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                                  ELSE ISNULL(B.RECOGN_NUM, '')
                                  END)
                       END)
             END)    
 ORDER BY B.PERSON_NUMB                                                                      


</select>
<select id="hpb400rkrService.selectList5sub2" parameterType="Map" resultType="rMap">  	
	--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_5Q] Query3
	
	--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
	 create table #temp  --创建临时表#Tmp
	(
	    DED_CODE	NVARCHAR(6),
	    ENG_NAME	NVARCHAR(30),
	    REPRE_NUM   NVARCHAR(30),
	    ENG_ADDR    NVARCHAR(200),
	    NATION_CODE NVARCHAR(3),
	    FOREIGN_YN  NVARCHAR(1),
	    SUPP_DATE_Y NVARCHAR(4),
	    SUPP_DATE   NVARCHAR(08),--20200811 추가: 양식 변경으로 추가
	    CNT         NVARCHAR(5) ,
	    PAY_AMOUNT_I 	NUMERIC(18,6),
	    EXPS_AMOUNT_I   NUMERIC(18,6),
	    SUPP_TOTAL_I NUMERIC(18,6),
	    PERCENT_I    NUMERIC(18,6),
	    IN_TAX_I     NUMERIC(18,6),
	    LOCAL_TAX_I  NUMERIC(18,6),
	    CP_TAX_I     	NUMERIC(18,6),
	    SP_TAX_I  		NUMERIC(18,6),
	    TOT_TAX_I    NUMERIC(18,6)    ,
	    GRP          NVARCHAR(1)
	);
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 15
	
	--2. 插入临时表 数据
	INSERT INTO #temp                                           
	SELECT A.DED_CODE                                                                          
   , B.ENG_NAME                                                                          
     , (CASE WHEN B.BUSINESS_TYPE = '1' AND B.DWELLING_YN = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
            ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                       ELSE (CASE WHEN B.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                                  ELSE ISNULL(B.RECOGN_NUM, '')
                                  END)
                       END)
             END) AS REPRE_NUM                                                                   
     , CASE WHEN BUSINESS_TYPE &lt;&gt; '1' THEN B.ENG_ADDR
               ELSE B.COMP_ENG_ADDR
               END ENG_ADDR 
     , B.NATION_CODE                                                                       
     , B.FOREIGN_YN
     , LEFT(A.SUPP_DATE, 4) AS SUPP_DATE_Y
     --20200811 추가: 양식 변경으로 추가
     , A.SUPP_DATE          AS SUPP_DATE
     , COUNT(DISTINCT A.PERSON_NUMB + A.SUPP_DATE) AS CNT                                                         
     , SUM(PAY_AMOUNT_I) AS PAY_AMOUNT_I                                                   
     , SUM(EXPS_AMOUNT_I) AS EXPS_AMOUNT_I                                                 
     , SUM(A.SUPP_TOTAL_I) AS SUPP_TOTAL_I                                                 
     , A.PERCENT_I                                                                         
     , SUM(A.IN_TAX_I) AS IN_TAX_I                                                         
     , SUM(A.LOCAL_TAX_I) AS LOCAL_TAX_I                                                   
     , SUM(CP_TAX_I) AS CP_TAX_I                                                           
     , SUM(SP_TAX_I) AS SP_TAX_I                                                           
     , (SUM(A.IN_TAX_I) + SUM(A.LOCAL_TAX_I) + SUM(CP_TAX_I) + SUM(SP_TAX_I)) AS TOT_TAX_I 
     , '0'  GRP                               
	  FROM HPB200T A WITH (NOLOCK)                                                                        
	               LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                                                 
	                            ON A.COMP_CODE   = B.COMP_CODE                               
	                           AND A.PERSON_NUMB = B.PERSON_NUMB                             
	                           AND A.DED_TYPE    = B.DED_TYPE                                
	WHERE A.COMP_CODE              = #{S_COMP_CODE}      
   AND A.DED_TYPE               IN ('1', '2')                                          
   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
   AND B.DWELLING_YN = '2'                                       
   AND A.SECT_CODE = #{DIV_CODE}   
   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
				      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
				      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
				      </if>      
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
				      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
				      </if>       
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
				      </if>                                   
					  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
				      		AND A.SUPP_DATE  = #{SUPP_DATE}
				      </if>      
				                 
	   AND A.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) NOT IN (SELECT TOP 10 B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4)
	                               FROM HPB200T A WITH (NOLOCK)                                            
	                                            LEFT OUTER JOIN HPB100T B WITH (NOLOCK)                   
	                                              ON A.COMP_CODE = B.COMP_CODE               
	                                             AND A.PERSON_NUMB = B.PERSON_NUMB           
	                                             AND A.DED_TYPE = B.DED_TYPE                 
	                            WHERE A.COMP_CODE              = #{S_COMP_CODE}      
							   AND A.DED_TYPE                IN ('1', '2')                                             
							   AND ((LEFT(A.SUPP_DATE, 6) &gt;=#{SUPP_DATE_FR})           
							   AND (LEFT(A.SUPP_DATE, 6)  &lt;=#{SUPP_DATE_TO}))           
							   AND B.DWELLING_YN = '2'                                       
							   AND A.SECT_CODE = #{DIV_CODE}
							   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
						      		AND A.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
						      		AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
						      </if>      
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
						      		AND LEFT(A.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
						      </if>       
							  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
						      		AND A.PERSON_NUMB  = #{PERSON_NUMB}
						      </if>                                   
							  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
						      		AND A.SUPP_DATE  = #{SUPP_DATE}
						      </if>      
	                              GROUP BY B.PERSON_NUMB, B.PERSON_NUMB + '_' + LEFT(A.SUPP_DATE, 4) 
	                              ORDER BY B.PERSON_NUMB)                                    
	GROUP BY A.DED_CODE, B.ENG_NAME, B.COMP_NUM, B.FOREIGN_YN, LEFT(A.SUPP_DATE, 4), A.SUPP_DATE --20200811 추가: 양식 변경으로 추가
        , A.PERCENT_I, B.BUSINESS_TYPE, B.RECOGN_NUM, B.PERSON_NUMB                        
        , B.ENG_ADDR, NATION_CODE , B.COMP_ENG_ADDR, B.DWELLING_YN
     , (CASE WHEN B.BUSINESS_TYPE = '1' AND B.DWELLING_YN = '1'                                                      
                  THEN SUBSTRING(B.COMP_NUM,1,3) + '-' + SUBSTRING(B.COMP_NUM, 4, 2) + '-'   
                       + SUBSTRING(B.COMP_NUM, 6,5)                                          
            ELSE (CASE WHEN FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(B.REPRE_NUM, 'A')      
                       ELSE (CASE WHEN B.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(B.FOREIGN_NUM, 'F')
                                  ELSE ISNULL(B.RECOGN_NUM, '')
                                  END)
                       END)
             END)    
	 ORDER BY B.PERSON_NUMB    
	 
	 --3. 获取临时表行数， 小于@MAX 时，插入空数据至 满足 @MAX行
	 select @CNT = COUNT(*) FROM #TEMP
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				    --hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_5Q] Query4               
				SELECT CAST('' AS NVARCHAR(3))   AS DED_CODE
				     , CAST('' AS NVARCHAR(30))  AS ENG_NAME
				     , CAST('' AS NVARCHAR(20))  AS REPRE_NUM
				     , CAST('' AS NVARCHAR(200))  AS ENG_ADDR
				     , CAST('' AS NVARCHAR(3))   AS NATION_CODE
				     , CAST('' AS NVARCHAR(1))   AS FOREIGN_YN
				     , CAST('' AS NVARCHAR(4))   AS SUPP_DATE_Y
				     , CAST('' AS NVARCHAR(8))   AS SUPP_DATE --20200811 추가: 양식 변경으로 추가
				     , CAST('0' AS NVARCHAR(5))  AS CNT
				     , CAST(0  AS NUMERIC(18,4)) AS PAY_AMOUNT_I
				     , CAST(0  AS NUMERIC(18,4)) AS EXPS_AMOUNT_I
				     , CAST(0  AS NUMERIC(18,4)) AS SUPP_TOTAL_I
				     , CAST(0  AS NUMERIC(18,4)) AS PERCENT_I
				     , CAST(0  AS NUMERIC(18,4)) AS IN_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS LOCAL_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS CP_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS SP_TAX_I
				     , CAST(0  AS NUMERIC(18,4)) AS TOT_TAX_I
					 , '1'  GRP
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
		
	SELECT ROW_NUMBER() OVER( ORDER BY GRP)+7 ROW_NUM, * FROM #temp
	ORDER BY GRP
</select>

<select id="hpb400rkrService.selectList7" parameterType="Map" resultType="rMap">
		--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
		 CREATE TABLE #temp(
      COMPANY_NUM        NVARCHAR(250)
	, DIV_FULL_NAME      NVARCHAR(250)
	, REPRE_NAME		 NVARCHAR(250)
	, REPRE_NO			 NVARCHAR(250)
	, ADDR				 NVARCHAR(250)
	, COMP_KOR_NAME      NVARCHAR(250)
	, COMP_NUM			 NVARCHAR(250)
	, COMP_KOR_ADDR      NVARCHAR(250)
	, NAME				 NVARCHAR(250)
	, REPRE_NUM			 NVARCHAR(250)
	, KOR_ADDR			 NVARCHAR(250)
	, DED_CODE			 NVARCHAR(250)
	, SAFFER_TAX_NM      NVARCHAR(250)
	, NATION_CODE        NVARCHAR(250)
	, CODE_NAME			 NVARCHAR(250)
	, DWELLING_YN			 NVARCHAR(250)
	, INCOMEYYYY		 NVARCHAR(250)
	, FOREIGN_YN		 NVARCHAR(250)
	, SUPP_YYYY			 NVARCHAR(250)
	, SUPP_MM			 NVARCHAR(250)
	, SUPP_DD			 NVARCHAR(250)
	, PAY_YYYY			 NVARCHAR(250)
	, PAY_MM			 NVARCHAR(250)
	, PAY_AMOUNT_I       NUMERIC(18,0)
	, EXPS_AMOUNT_I       NUMERIC(18,0)
	, SUPP_TOTAL_I       NUMERIC(18,0)
	, PERCENT_I		     NUMERIC(18,4)
	, IN_TAX_I			 NUMERIC(18,0)
	, LOCAL_TAX_I        NUMERIC(18,0)
	, TOT_I				 NUMERIC(18,0)
	, CP_TAX_I				 NUMERIC(18,0)
	, SP_TAX_I				 NUMERIC(18,0)
	, PERSON_NUMB        NVARCHAR(250)
	, DED_TYPE			 NVARCHAR(250)
	, GUBUN				 NUMERIC(18,0)
	, l_PAGE			 NUMERIC(18,0)
	, N_PAGE			 NUMERIC(6,0)
	, MAX_PAGE			 NUMERIC(6,0)
	, SUM_Q				 NUMERIC(18,6)
	, SUM_O				 NUMERIC(18,4)
	, SUM_TAX			 NUMERIC(18,4)
	, G_REC				 NUMERIC(4,0)

	, GRP                NVARCHAR(1)
	)
	
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 9
	
	INSERT INTO #temp   
--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_7Q] Query1                                             
SELECT  SUBSTRING(A.COMPANY_NUM,1,3) + '-' + SUBSTRING(A.COMPANY_NUM,4,2) + '-' 
       + SUBSTRING(A.COMPANY_NUM,6,5) AS COMPANY_NUM                           
     , A.DIV_FULL_NAME AS DIV_FULL_NAME                                        
     , A.REPRE_NAME                                                            
     , (CASE ISNULL(E.COMP_OWN_NO,'') WHEN ''                         
                                           THEN unilite.fnCipherDecrypt(E.REPRE_NO, 'RR')
                                           ELSE E.COMP_OWN_NO
         END) AS REPRE_NO 
     , A.ADDR                                                                  
     , C.COMP_KOR_NAME                                                         
     , SUBSTRING(C.COMP_NUM,1,3) + '-' + SUBSTRING(C.COMP_NUM,4,2) + '-'       
       + SUBSTRING(C.COMP_NUM,6,5) AS COMP_NUM                                 
     , C.COMP_KOR_ADDR                                                         
     , C.NAME                                                                  
     , (CASE WHEN C.BUSINESS_TYPE = '1' AND C.DWELLING_YN = '1'                                                      
             THEN SUBSTRING(C.COMP_NUM,1,3) + '-' + SUBSTRING(C.COMP_NUM, 4, 2) + '-' + SUBSTRING(C.COMP_NUM, 6,5)                                          
             ELSE (CASE WHEN C.FOREIGN_YN = '1' THEN unilite.fnCipherDecrypt(C.REPRE_NUM, 'A')      
                        ELSE (CASE WHEN C.DWELLING_YN = '1' THEN unilite.fnCipherDecrypt(C.FOREIGN_NUM, 'F')
                                   ELSE ISNULL(C.RECOGN_NUM, '')
                                   END)
                        END)
             END) AS REPRE_NUM                                                                   
     , CASE WHEN C.BUSINESS_TYPE &lt;&gt; '1' THEN 
                 (CASE WHEN DWELLING_YN = '1' THEN KOR_ADDR 
                       ELSE C.ENG_ADDR 
                       END)
            ELSE (CASE WHEN C.DWELLING_YN = '1' THEN C.COMP_KOR_ADDR 
                       ELSE C.COMP_ENG_ADDR 
                       END)
            END KOR_ADDR 
     , C.DED_CODE                                                          
     , A.SAFFER_TAX_NM                                                     
     , C.NATION_CODE                                                       
     , D.CODE_NAME                                                         
     , C.DWELLING_YN                                                       
     , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                   
     , C.FOREIGN_YN                                                        
     , SUBSTRING(B.SUPP_DATE, 3, 2) AS SUPP_YYYY                           
     , SUBSTRING(B.SUPP_DATE, 5, 2) AS SUPP_MM                             
     , SUBSTRING(B.SUPP_DATE, 7, 2) AS SUPP_DD                             
     , SUBSTRING(B.PAY_YYYYMM, 3, 2) AS PAY_YYYY                           
     , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MM                             
     , B.PAY_AMOUNT_I                                                      
     , B.EXPS_AMOUNT_I                                                     
     , B.SUPP_TOTAL_I                                                      
     , B.PERCENT_I                                                         
     , B.IN_TAX_I                                                          
     , B.LOCAL_TAX_I                                                       
     , (B.IN_TAX_I + B.LOCAL_TAX_I + B.CP_TAX_I + B.SP_TAX_I) AS TOT_I     
     , B.CP_TAX_I                                                          
     , B.SP_TAX_I                                                          
     , B.PERSON_NUMB                                                       
     , B.DED_TYPE                                                          
     , CONVERT(NUMERIC(18,0),0) AS GUBUN       --GROUP                     
     , CONVERT(NUMERIC(18,0),0) AS l_PAGE      --PAGE수                    
     , CONVERT(NUMERIC(6,0),0)  AS N_PAGE      --Group내 페이지수          
     , CONVERT(NUMERIC(6,0),0)  AS MAX_PAGE    --Group내 총페이지수        
     , CONVERT(NUMERIC(18,6),0) AS SUM_Q                                   
     , CONVERT(NUMERIC(18,4),0) AS SUM_O                                   
     , CONVERT(NUMERIC(18,4),0) AS SUM_TAX                                 
     , CONVERT(NUMERIC(4,0),0)  AS G_REC       --Group내 record수       
     
     , '0' GRP   
  FROM BOR120T A WITH (NOLOCK)
                 INNER JOIN BOR100T E WITH (NOLOCK)                                
                         ON A.COMP_CODE = E.COMP_CODE                
                 INNER JOIN HPB200T B WITH (NOLOCK)                               
                         ON A.COMP_CODE = B.COMP_CODE                
               LEFT OUTER JOIN HPB100T C WITH (NOLOCK)                                   
                            ON B.COMP_CODE   = C.COMP_CODE                 
                           AND B.DED_TYPE    = C.DED_TYPE                  
                           AND B.PERSON_NUMB = C.PERSON_NUMB               
               LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                                  
                            ON C.COMP_CODE   = D.COMP_CODE                 
                           AND C.NATION_CODE = D.SUB_CODE                  
                           AND D.MAIN_CODE   = 'B012'                       
	    WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               IN ('1', '2' )                                                        
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND C.DWELLING_YN = '2'                                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
	 ORDER BY C.PERSON_NUMB, B.PAY_YYYYMM, B.SUPP_DATE                                                        
	 
	 

	 
 
 
  --3. 获取临时表行数， 小于@max 时，插入空数据至 满足 @max行
    declare
            @PERSON_NUMB NVARCHAR(250)
	DECLARE MyCursor CURSOR	 FOR 
	SELECT distinct PERSON_NUMB FROM #temp
	
	--打开一个游标	
	OPEN MyCursor
	--循环一个游标
	FETCH NEXT FROM  MyCursor INTO @PERSON_NUMB
	WHILE @@FETCH_STATUS =0
		BEGIN
			
			select @CNT = COUNT(*) FROM #TEMP
			WHERE PERSON_NUMB = @PERSON_NUMB
			
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF &lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT  top 1
					  COMPANY_NUM        
					, DIV_FULL_NAME      
					, REPRE_NAME		 
					, REPRE_NO			 
					, ADDR				 
					, COMP_KOR_NAME      
					, COMP_NUM			 
					, COMP_KOR_ADDR      
					, NAME				 
					, REPRE_NUM			 
					, KOR_ADDR			 
					, DED_CODE			 
					, SAFFER_TAX_NM      
					, NATION_CODE        
					, CODE_NAME			 
					, DWELLING_YN		
					, INCOMEYYYY		 
					, FOREIGN_YN	 
					, CAST('' AS NVARCHAR(250))	AS  SUPP_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  SUPP_MM			
					, CAST('' AS NVARCHAR(250))	AS  SUPP_DD			
					, CAST('' AS NVARCHAR(250))	AS  PAY_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  PAY_MM
					, CAST(0  AS NUMERIC(18,6))	AS  PAY_AMOUNT_I       
					, CAST(0  AS NUMERIC(18,6))	AS  EXPS_AMOUNT_I      
					, CAST(0  AS NUMERIC(18,6))	AS  SUPP_TOTAL_I    
					, CAST(0  AS NUMERIC(18,6))	AS  PERCENT_I		
					, CAST(0  AS NUMERIC(18,6))	AS  IN_TAX_I		
					, CAST(0  AS NUMERIC(18,6))	AS  LOCAL_TAX_I     
					, CAST(0  AS NUMERIC(18,6))	AS  TOT_I     
					, CAST(0  AS NUMERIC(18,6))	AS  CP_TAX_I			
					, CAST(0  AS NUMERIC(18,6))	AS  SP_TAX_I			
					, PERSON_NUMB        
					, DED_TYPE			 
					, GUBUN				 
					, l_PAGE			 
					, N_PAGE			 
					, MAX_PAGE			 
					, SUM_Q				 
					, SUM_O				 
					, SUM_TAX			 
					, G_REC				 
					
					, '1' GRP                

				FROM #temp 	
				WHERE PERSON_NUMB = @PERSON_NUMB	 
			
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt; @MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
			
			FETCH NEXT FROM  MyCursor INTO  @PERSON_NUMB
		END	

	--关闭游标
	CLOSE MyCursor
	--释放资源
	DEALLOCATE MyCursor
	
	 
	 
		
	SELECT ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  ) ROW_NUM,
	(ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  )-1)/@MAX PAGE_NUM,
	 * FROM #temp
      ORDER BY  PERSON_NUMB, GRP, PAY_YYYY+PAY_MM,  SUPP_MM+SUPP_DD                                            
	
	
	             
</select>	

<select id="hpb400rkrService.selectList6" parameterType="Map" resultType="rMap">
--hpb400rkrService.selectList6
SELECT A.DIV_FULL_NAME AS DIV_FULL_NAME                                      
     , A.REPRE_NAME                                                          
     , A.COMPANY_NUM AS COMP_NUM                                             
    -- , unilite.fnCipherDecrypt(A.REPRE_NO, 'A') AS REPRE_NO       
     
     , (CASE ISNULL(F.COMP_OWN_NO,'') WHEN ''                         
                                           THEN unilite.fnCipherDecrypt(A.REPRE_NO, 'A')
                                           ELSE F.COMP_OWN_NO
         END) AS REPRE_NO 
       
     , F.ADDR                                                                
     , (CASE WHEN C.BUSINESS_TYPE = '1'                                      
                  THEN C.COMP_KOR_NAME                                       
                  ELSE (CASE WHEN FOREIGN_YN = '1'                           
                                  THEN C.NAME                                
                                  ELSE C.ENG_NAME                            
                         END)                                                
         END) AS NAME                                                        
      , (CASE WHEN C.BUSINESS_TYPE = '1' OR  C.BUSINESS_TYPE = '2'           
                   THEN ISNULL(  SUBSTRING(C.COMP_NUM, 1, 3) + '-' 
                               + SUBSTRING(C.COMP_NUM, 4, 2) + '-' 
                               + SUBSTRING(C.COMP_NUM, 6, 5), unilite.fnCipherDecrypt(C.REPRE_NUM, 'A'))
                   ELSE (CASE WHEN FOREIGN_YN = '1'                          
                                   THEN unilite.fnCipherDecrypt(C.REPRE_NUM, 'A') 
                                   ELSE unilite.fnCipherDecrypt(C.FOREIGN_NUM, 'F')
                          END)                                               
          END) AS REPRE_NUM                                                  
       , (CASE  WHEN C.BUSINESS_TYPE = '1' 
                THEN (CASE WHEN DWELLING_YN = '1' 
                           THEN C.COMP_KOR_ADDR 
                           ELSE C.COMP_ENG_ADDR END) 
                ELSE (CASE WHEN DWELLING_YN = '1'
                           THEN C.KOR_ADDR 
                           ELSE C.ENG_ADDR END) 
           END) AS ADDR1       
       , C.DED_CODE                                                          
       , uniLITE.fnCipherDecrypt(C.BANK_ACCOUNT, 'B') AS BANK_ACCOUNT        
       , (CASE WHEN C.KNOWN_YN = '1'                                         
                    THEN uniLITE.fnGetTxt('H0083')                           
                    ELSE uniLITE.fnGetTxt('H0084')                           
           END) AS KNOWN_YN                                                  
       , A.SAFFER_TAX_NM                                                     
       , C.NATION_CODE                                                       
       , D.CODE_NAME                                                         
       , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                                
       , C.PERSON_NUMB                                                       
       , C.FOREIGN_YN                                                        
       , B.DED_TYPE                                                          
       , B.SECT_CODE                                                         
       , C.COMP_ENG_NAME                                                     
       , SUBSTRING(B.SUPP_DATE, 1, 4) AS SUPP_YYYY                           
       , SUBSTRING(B.SUPP_DATE, 5, 2) AS SUPP_MM                             
       , SUBSTRING(B.SUPP_DATE, 7, 2) AS SUPP_DD                             
       , SUBSTRING(B.PAY_YYYYMM, 1, 4) AS PAY_YYYY
       , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MM
       , (CASE WHEN B.DED_TYPE = '10'                                        
                    THEN uniLITE.fnGetTxt('H0085')                           
                    ELSE uniLITE.fnGetTxt('H0086')                           
           END) AS DED_GUBUN                                                 
       , C.DWELLING_YN                                                       
       , E.REF_CODE4                                                         
       , B.PRIZE_CODE                                                        
       , B.CLAIM_INTER_GUBN                                                  
       , B.WERT_PAPER_CODE                                                   
       , B.TAX_GUBN                                                          
       , B.SUPP_TOTAL_I                                                      
       , uniLITE.fnGetUserDateComp(C.COMP_CODE,B.DATE_FROM_YYMM) + '~' + 
         uniLITE.fnGetUserDateComp(C.COMP_CODE,B.DATE_TO_YYMM)      AS TERM      
       , B.PERCENT_I                                                         
       , B.IN_TAX_I                                                          
       , B.CP_TAX_I                                                          
       , B.LOCAL_TAX_I                                                       
       , B.SP_TAX_I                                                          
       , (B.IN_TAX_I + B.CP_TAX_I + B.LOCAL_TAX_I + B.SP_TAX_I) AS TOT_I     
       , CONVERT(NUMERIC(18,0),0) AS GUBUN                                   
       , CONVERT(NUMERIC(18,0),0) AS L_PAGE                                  
       , CONVERT(NUMERIC(6,0),0)  AS N_PAGE                                  
       , CONVERT(NUMERIC(6,0),0)  AS MAX_PAGE                                
       , CONVERT(NUMERIC(18,6),0) AS SUM_Q                                   
       , CONVERT(NUMERIC(18,4),0) AS SUM_O                                   
       , CONVERT(NUMERIC(18,4),0) AS SUM_TAX                                 
       , CONVERT(NUMERIC(4,0),0)  AS G_REC                                   
       --추가
       , C.COMP_KOR_NAME  --영문법인명(상호)
       , CASE WHEN C.DWELLING_YN = '2' --1:거주자, 2:비거주자
              THEN uniLITE.fnGetUserDateComp(C.COMP_CODE, C.BIRTH_DATE) 
              ELSE ''
          END AS BIRTH_DATE         --비거주자생년월일
       , B.INCOME_KIND              --소득종류
       , B.TAX_EXCEPTION            --조세특례등
       , B.INTER_RATE               --이자율등
       , C.TRUST_PROFIT_YN          --신탁이익여부 1:여 2:부
       
       , '0' GRP
    FROM BOR120T A WITH (NOLOCK)
                   INNER JOIN BOR100T F WITH (NOLOCK)                                     
                           ON A.COMP_CODE = F.COMP_CODE                      
                   INNER JOIN HPB200T B WITH (NOLOCK)                                     
                           ON A.COMP_CODE = B.COMP_CODE                      
                 LEFT OUTER JOIN HPB100T C WITH (NOLOCK)                                  
                              ON B.COMP_CODE   = C.COMP_CODE                 
                             AND B.DED_TYPE    = C.DED_TYPE                  
                             AND B.PERSON_NUMB = C.PERSON_NUMB               
                 LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                                  
                              ON C.COMP_CODE   = D.COMP_CODE                 
                             AND C.NATION_CODE = D.SUB_CODE                  
                             AND D.MAIN_CODE   = 'B012'                      
                 LEFT OUTER JOIN HCD100T E WITH (NOLOCK)                                  
                              ON B.COMP_CODE  = E.COMP_CODE                  
                             AND E.MAIN_CODE  = 'HC04'                       
                             AND E.REF_CODE1  = 'B'                          
                             AND SUBSTRING(B.PRIZE_CODE, 2,2) = E.SUB_CODE   
 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               IN ('10','20')                                                      
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
 ORDER BY C.PERSON_NUMB, C.DED_CODE, B.PAY_YYYYMM, B.SUPP_DATE
</select>

<select id="hpb400rkrService.selectList6Header" parameterType="Map" resultType="rMap">
--hpb400rkrService.selectList6Header
SELECT DISTINCT
	   A.DIV_FULL_NAME AS DIV_FULL_NAME                                      
     , A.REPRE_NAME                                                          
     , A.COMPANY_NUM AS COMP_NUM                                             
     --, unilite.fnCipherDecrypt(A.REPRE_NO, 'A') AS REPRE_NO
     , (CASE ISNULL(F.COMP_OWN_NO,'') WHEN ''                         
                                           THEN unilite.fnCipherDecrypt(A.REPRE_NO, 'A')
                                           ELSE F.COMP_OWN_NO
         END) AS REPRE_NO 
              
     , F.ADDR                                                                
     , (CASE WHEN C.BUSINESS_TYPE = '1'                                      
                  THEN C.COMP_KOR_NAME                                       
                  ELSE (CASE WHEN FOREIGN_YN = '1'                           
                                  THEN C.NAME                                
                                  ELSE C.ENG_NAME                            
                         END)                                                
         END) AS NAME                                                        
      , (CASE WHEN C.BUSINESS_TYPE = '1' OR  C.BUSINESS_TYPE = '2'           
                   THEN ISNULL(  SUBSTRING(C.COMP_NUM, 1, 3) + '-' 
                               + SUBSTRING(C.COMP_NUM, 4, 2) + '-' 
                               + SUBSTRING(C.COMP_NUM, 6, 5), unilite.fnCipherDecrypt(C.REPRE_NUM, 'A'))
                   ELSE (CASE WHEN FOREIGN_YN = '1'                          
                                   THEN unilite.fnCipherDecrypt(C.REPRE_NUM, 'A') 
                                   ELSE unilite.fnCipherDecrypt(C.FOREIGN_NUM, 'F')
                          END)                                               
          END) AS REPRE_NUM                                                  
       , (CASE  WHEN C.BUSINESS_TYPE = '1' 
                THEN (CASE WHEN DWELLING_YN = '1' 
                           THEN C.COMP_KOR_ADDR 
                           ELSE C.COMP_ENG_ADDR END) 
                ELSE (CASE WHEN DWELLING_YN = '1'
                           THEN C.KOR_ADDR 
                           ELSE C.ENG_ADDR END) 
           END) AS ADDR1       
       , C.DED_CODE                                                          
       , uniLITE.fnCipherDecrypt(C.BANK_ACCOUNT, 'B') AS BANK_ACCOUNT        
       , (CASE WHEN C.KNOWN_YN = '1'                                         
                    THEN uniLITE.fnGetTxt('H0083')                           
                    ELSE uniLITE.fnGetTxt('H0084')                           
           END) AS KNOWN_YN                                                  
       , A.SAFFER_TAX_NM                                                     
       , C.NATION_CODE                                                       
       , D.CODE_NAME                                                         
       , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                                
       , C.PERSON_NUMB                                                       
       , C.FOREIGN_YN
       , C.COMP_ENG_NAME
       , C.DWELLING_YN                                                       
       , E.REF_CODE4
       , C.COMP_KOR_NAME  --영문법인명(상호)
       , CASE WHEN C.DWELLING_YN = '2' --1:거주자, 2:비거주자
              THEN uniLITE.fnGetUserDateComp(C.COMP_CODE, C.BIRTH_DATE) 
              ELSE ''
          END AS BIRTH_DATE         --비거주자생년월일
       , C.TRUST_PROFIT_YN          --신탁이익여부 1:여 2:부
    FROM BOR120T A WITH (NOLOCK)
                   INNER JOIN BOR100T F WITH (NOLOCK)                                     
                           ON A.COMP_CODE = F.COMP_CODE                      
                   INNER JOIN HPB200T B WITH (NOLOCK)                                     
                           ON A.COMP_CODE = B.COMP_CODE                      
                 LEFT OUTER JOIN HPB100T C WITH (NOLOCK)                                  
                              ON B.COMP_CODE   = C.COMP_CODE                 
                             AND B.DED_TYPE    = C.DED_TYPE                  
                             AND B.PERSON_NUMB = C.PERSON_NUMB               
                 LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                                  
                              ON C.COMP_CODE   = D.COMP_CODE                 
                             AND C.NATION_CODE = D.SUB_CODE                  
                             AND D.MAIN_CODE   = 'B012'                      
                 LEFT OUTER JOIN HCD100T E WITH (NOLOCK)                                  
                              ON B.COMP_CODE  = E.COMP_CODE                  
                             AND E.MAIN_CODE  = 'HC04'                       
                             AND E.REF_CODE1  = 'B'                          
                             AND SUBSTRING(B.PRIZE_CODE, 2,2) = E.SUB_CODE   
 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               IN ('10','20')                                                      
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
 ORDER BY C.PERSON_NUMB, C.DED_CODE
</select>

<select id="hpb400rkrService.selectList6_bak" parameterType="Map" resultType="rMap">
--1. 创建临时表
	 if exists(select * from tempdb..sysobjects where id=object_id('tempdb..#temp'))
	 begin
		DROP TABLE #temp
	 end
		 CREATE TABLE #temp(
				DIV_FULL_NAME	nvarchar(255)  ,
				REPRE_NAME	nvarchar(255)  ,
				COMP_NUM	nvarchar(255)  ,
				REPRE_NO	nvarchar(255)  ,
				ADDR	nvarchar(255)  ,
				NAME	nvarchar(255)  ,
				REPRE_NUM	nvarchar(255)  ,
				ADDR1	nvarchar(255)  ,
				DED_CODE	nvarchar(255)  ,
				BANK_ACCOUNT	nvarchar(255)  ,
				KNOWN_YN	nvarchar(255)  ,
				SAFFER_TAX_NM	nvarchar(255)  ,
				NATION_CODE	nvarchar(255)  ,
				CODE_NAME	nvarchar(255)  ,
				INCOMEYYYY	nvarchar(255)  ,
				PERSON_NUMB	nvarchar(255)  ,
				FOREIGN_YN	nvarchar(255)  ,
				DED_TYPE	nvarchar(255)  ,
				SECT_CODE	nvarchar(255)  ,
				COMP_ENG_NAME	nvarchar(255)  ,
				SUPP_YYYY	nvarchar(255)  ,
				SUPP_MM	nvarchar(255)  ,
				SUPP_DD	nvarchar(255)  ,
				PAY_YYYY	nvarchar(255)  ,
				PAY_MM	nvarchar(255)  ,
				DED_GUBUN	nvarchar(255)  ,
				DWELLING_YN	nvarchar(255)  ,
				REF_CODE4	nvarchar(255)  ,
				PRIZE_CODE	nvarchar(255)  ,
				CLAIM_INTER_GUBN	nvarchar(255)  ,  
				WERT_PAPER_CODE	nvarchar(255)  ,
				TAX_GUBN	nvarchar(255)  ,
				SUPP_TOTAL_I	numeric(18,0)  ,
				TERM	nvarchar(255)  ,
				PERCENT_I	numeric(18,0)  ,
				IN_TAX_I	numeric(18,0)  ,
				CP_TAX_I	numeric(18,0)  ,
				LOCAL_TAX_I	numeric(18,0)  ,
				SP_TAX_I	numeric(18,0)  ,
				TOT_I	numeric(18,0)  ,
				GUBUN	nvarchar(255)  ,
				L_PAGE	numeric(18,0)  ,
				N_PAGE	numeric(18,0)  ,
				MAX_PAGE	numeric(18,0)  ,
				SUM_Q	numeric(18,0)  ,
				SUM_O	numeric(18,0)  ,
				SUM_TAX	numeric(18,0)  ,
				G_REC	numeric(18,0)  ,
				COMP_KOR_NAME	nvarchar(255)  ,
				BIRTH_DATE	nvarchar(255)  ,
				INCOME_KIND	nvarchar(255)  ,
				TAX_EXCEPTION	nvarchar(255)  ,
				INTER_RATE	numeric(18,0)  ,
				TRUST_PROFIT_YN	nvarchar(255)  ,


				 GRP                NVARCHAR(1)
	)
	
	DECLARE @CNT  smallint,
	        @MAX  smallint
	SET @MAX = 3
	
	INSERT INTO #temp   
SELECT A.DIV_FULL_NAME AS DIV_FULL_NAME                                      
     , A.REPRE_NAME                                                          
     , A.COMPANY_NUM AS COMP_NUM                                             
    -- , unilite.fnCipherDecrypt(A.REPRE_NO, 'A') AS REPRE_NO
    
     , (CASE ISNULL(F.COMP_OWN_NO,'') WHEN ''                         
                                       THEN unilite.fnCipherDecrypt(A.REPRE_NO, 'A')
                                       ELSE F.COMP_OWN_NO
     END) AS REPRE_NO 
       
             
     , F.ADDR                                                                
     , (CASE WHEN C.BUSINESS_TYPE = '1'                                      
                  THEN C.COMP_KOR_NAME                                       
                  ELSE (CASE WHEN FOREIGN_YN = '1'                           
                                  THEN C.NAME                                
                                  ELSE C.ENG_NAME                            
                         END)                                                
         END) AS NAME                                                        
      , (CASE WHEN C.BUSINESS_TYPE = '1' OR  C.BUSINESS_TYPE = '2'           
                   THEN ISNULL(  SUBSTRING(C.COMP_NUM, 1, 3) + '-' 
                               + SUBSTRING(C.COMP_NUM, 4, 2) + '-' 
                               + SUBSTRING(C.COMP_NUM, 6, 5), unilite.fnCipherDecrypt(C.REPRE_NUM, 'A'))
                   ELSE (CASE WHEN FOREIGN_YN = '1'                          
                                   THEN unilite.fnCipherDecrypt(C.REPRE_NUM, 'A') 
                                   ELSE unilite.fnCipherDecrypt(C.FOREIGN_NUM, 'F')
                          END)                                               
          END) AS REPRE_NUM                                                  
       , (CASE  WHEN C.BUSINESS_TYPE = '1' 
                THEN (CASE WHEN DWELLING_YN = '1' 
                           THEN C.COMP_KOR_ADDR 
                           ELSE C.COMP_ENG_ADDR END) 
                ELSE (CASE WHEN DWELLING_YN = '1'
                           THEN C.KOR_ADDR 
                           ELSE C.ENG_ADDR END) 
           END) AS ADDR1       
       , C.DED_CODE                                                          
       , uniLITE.fnCipherDecrypt(C.BANK_ACCOUNT, 'B') AS BANK_ACCOUNT        
       , (CASE WHEN C.KNOWN_YN = '1'                                         
                    THEN uniLITE.fnGetTxt('H0083')                           
                    ELSE uniLITE.fnGetTxt('H0084')                           
           END) AS KNOWN_YN                                                  
       , A.SAFFER_TAX_NM                                                     
       , C.NATION_CODE                                                       
       , D.CODE_NAME                                                         
       , LEFT(#{SUPP_DATE_FR},4) AS INCOMEYYYY                                
       , C.PERSON_NUMB                                                       
       , C.FOREIGN_YN                                                        
       , B.DED_TYPE                                                          
       , B.SECT_CODE                                                         
       , C.COMP_ENG_NAME                                                     
       , SUBSTRING(B.SUPP_DATE, 1, 4) AS SUPP_YYYY                           
       , SUBSTRING(B.SUPP_DATE, 5, 2) AS SUPP_MM                             
       , SUBSTRING(B.SUPP_DATE, 7, 2) AS SUPP_DD                             
       , SUBSTRING(B.PAY_YYYYMM, 1, 4) AS PAY_YYYY
       , SUBSTRING(B.PAY_YYYYMM, 5, 2) AS PAY_MM
       , (CASE WHEN B.DED_TYPE = '10'                                        
                    THEN uniLITE.fnGetTxt('H0085')                           
                    ELSE uniLITE.fnGetTxt('H0086')                           
           END) AS DED_GUBUN                                                 
       , C.DWELLING_YN                                                       
       , E.REF_CODE4                                                         
       , B.PRIZE_CODE                                                        
       , B.CLAIM_INTER_GUBN                                                  
       , B.WERT_PAPER_CODE                                                   
       , B.TAX_GUBN                                                          
       , B.SUPP_TOTAL_I                                                      
       , uniLITE.fnGetUserDateComp(C.COMP_CODE,B.DATE_FROM_YYMM) + '~' + 
         uniLITE.fnGetUserDateComp(C.COMP_CODE,B.DATE_TO_YYMM)      AS TERM      
       , B.PERCENT_I                                                         
       , B.IN_TAX_I                                                          
       , B.CP_TAX_I                                                          
       , B.LOCAL_TAX_I                                                       
       , B.SP_TAX_I                                                          
       , (B.IN_TAX_I + B.CP_TAX_I + B.LOCAL_TAX_I + B.SP_TAX_I) AS TOT_I     
       , CONVERT(NUMERIC(18,0),0) AS GUBUN                                   
       , CONVERT(NUMERIC(18,0),0) AS L_PAGE                                  
       , CONVERT(NUMERIC(6,0),0)  AS N_PAGE                                  
       , CONVERT(NUMERIC(6,0),0)  AS MAX_PAGE                                
       , CONVERT(NUMERIC(18,6),0) AS SUM_Q                                   
       , CONVERT(NUMERIC(18,4),0) AS SUM_O                                   
       , CONVERT(NUMERIC(18,4),0) AS SUM_TAX                                 
       , CONVERT(NUMERIC(4,0),0)  AS G_REC                                   
       --추가
       , C.COMP_KOR_NAME  --영문법인명(상호)
       , CASE WHEN C.DWELLING_YN = '2' --1:거주자, 2:비거주자
              THEN uniLITE.fnGetUserDateComp(C.COMP_CODE, C.BIRTH_DATE) 
              ELSE ''
          END AS BIRTH_DATE         --비거주자생년월일
       , B.INCOME_KIND              --소득종류
       , B.TAX_EXCEPTION            --조세특례등
       , B.INTER_RATE               --이자율등
       , C.TRUST_PROFIT_YN          --신탁이익여부 1:여 2:부
       
       , '0' GRP
    FROM BOR120T A WITH (NOLOCK)
                   INNER JOIN BOR100T F WITH (NOLOCK)                                     
                           ON A.COMP_CODE = F.COMP_CODE                      
                   INNER JOIN HPB200T B WITH (NOLOCK)                                     
                           ON A.COMP_CODE = B.COMP_CODE                      
                 LEFT OUTER JOIN HPB100T C WITH (NOLOCK)                                  
                              ON B.COMP_CODE   = C.COMP_CODE                 
                             AND B.DED_TYPE    = C.DED_TYPE                  
                             AND B.PERSON_NUMB = C.PERSON_NUMB               
                 LEFT OUTER JOIN BSA100T D WITH (NOLOCK)                                  
                              ON C.COMP_CODE   = D.COMP_CODE                 
                             AND C.NATION_CODE = D.SUB_CODE                  
                             AND D.MAIN_CODE   = 'B012'                      
                 LEFT OUTER JOIN HCD100T E WITH (NOLOCK)                                  
                              ON B.COMP_CODE  = E.COMP_CODE                  
                             AND E.MAIN_CODE  = 'HC04'                       
                             AND E.REF_CODE1  = 'B'                          
                             AND SUBSTRING(B.PRIZE_CODE, 2,2) = E.SUB_CODE   
 WHERE B.COMP_CODE              = #{S_COMP_CODE}                               
	   AND B.DED_TYPE               IN ('10','20')                                                      
	   AND ((LEFT(B.SUPP_DATE, 6) &gt;= #{SUPP_DATE_FR})                          
	   AND (LEFT(B.SUPP_DATE, 6)  &lt;= #{SUPP_DATE_TO}))                          
	   AND B.SECT_CODE   = #{DIV_CODE}                                      
	   AND A.DIV_CODE = #{DIV_CODE}        
	   
	      <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
  		        AND B.DEPT_CODE  &gt;= #{DEPT_CODE_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		  		AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		  </if>      
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_FR)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &gt;= #{PAY_YYYYMM_FR}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PAY_YYYYMM_TO)">
		  		AND LEFT(B.PAY_YYYYMM,6)  &lt;= #{PAY_YYYYMM_TO}
		  </if>       
		  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		  		AND C.PERSON_NUMB  = #{PERSON_NUMB}
		  </if>                                   
		  <if test="@foren.Ognl@isNotEmpty(SUPP_DATE)">
		  		AND B.SUPP_DATE  = #{SUPP_DATE}
		  </if>                
 ORDER BY C.PERSON_NUMB, C.DED_CODE, B.PAY_YYYYMM, B.SUPP_DATE

	 
 
 
  --3. 获取临时表行数， 小于@max 时，插入空数据至 满足 @max行
    declare
            @PERSON_NUMB NVARCHAR(250)
	DECLARE MyCursor CURSOR	 FOR 
	SELECT distinct PERSON_NUMB FROM #temp
	
	--打开一个游标	
	OPEN MyCursor
	--循环一个游标
	FETCH NEXT FROM  MyCursor INTO @PERSON_NUMB
	WHILE @@FETCH_STATUS =0
		BEGIN
			
			select @CNT = COUNT(*) FROM #TEMP
			WHERE PERSON_NUMB = @PERSON_NUMB
			
		declare @DIFF smallint
		declare @INDEX smallint
		
		set @DIFF = @CNT % @MAX
		if (@DIFF&lt;&gt; 0) OR (@DIFF=0 AND @CNT=0)
		BEGIN
			SET @INDEX = 1 
			WHILE @INDEX &lt;= @MAX-@DIFF
			BEGIN
				 --SELECT @INDEX
				 INSERT INTO #temp
				--hpb400rkr.Chpb400rkr SetHpb400[fnHpb400_1Q] Query4               
				SELECT  top 1
					  DIV_FULL_NAME      
					, REPRE_NAME		 
					, COMP_NUM			 
					, REPRE_NO			 
					, ADDR				 
					, NAME				 
					, REPRE_NUM			 
					, ADDR1			 
					, DED_CODE			 
					, BANK_ACCOUNT			 
					, KNOWN_YN			 		 
					, SAFFER_TAX_NM      
					, NATION_CODE        
					, CODE_NAME			 
					, INCOMEYYYY		 
					, PERSON_NUMB		 
					, FOREIGN_YN	 
					, DED_TYPE
				    , SECT_CODE	
				    , COMP_ENG_NAME
					, CAST('' AS NVARCHAR(250))	AS  SUPP_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  SUPP_MM			
					, CAST('' AS NVARCHAR(250))	AS  SUPP_DD			
					, CAST('' AS NVARCHAR(250))	AS  PAY_YYYY		
					, CAST('' AS NVARCHAR(250))	AS  PAY_MM
					, CAST('' AS NVARCHAR(250))	AS  DED_GUBUN
					, CAST('' AS NVARCHAR(250))	AS  DWELLING_YN		
					, CAST('' AS NVARCHAR(250))	AS  REF_CODE4
					, CAST('' AS NVARCHAR(250))	AS  PRIZE_CODE
					, CAST('' AS NVARCHAR(250))	AS  CLAIM_INTER_GUBN
					, CAST('' AS NVARCHAR(250))	AS  WERT_PAPER_CODE
					, CAST('' AS NVARCHAR(250))	AS  TAX_GUBN
					, CAST(0  AS NUMERIC(18,6))	AS  SUPP_TOTAL_I    
					
					, CAST(''  AS NVARCHAR(255))	AS  TERM       
					, CAST(0  AS NUMERIC(18,6))	AS  PERCENT_I		
					, CAST(0  AS NUMERIC(18,6))	AS  IN_TAX_I		
					, CAST(0  AS NUMERIC(18,6))	AS  CP_TAX_I			
					, CAST(0  AS NUMERIC(18,6))	AS  LOCAL_TAX_I     
					, CAST(0  AS NUMERIC(18,6))	AS  SP_TAX_I			
					, CAST(0  AS NUMERIC(18,6))	AS  TOT_I     		 
					, CAST('' AS NVARCHAR(250))	AS  GUBUN				 
					, l_PAGE			 
					, N_PAGE			 
					, MAX_PAGE			 
					, SUM_Q				 
					, SUM_O				 
					, SUM_TAX			 
					, G_REC				 
					, COMP_KOR_NAME
					, BIRTH_DATE
					, INCOME_KIND
					, TAX_EXCEPTION
					, INTER_RATE
					, TRUST_PROFIT_YN

					, '1' GRP     
					
					           

				FROM #temp 	
				WHERE PERSON_NUMB = @PERSON_NUMB	 
			
				 set @INDEX = @INDEX +1
				 IF @INDEX &gt;@MAX-@DIFF
					BREAK
				 ELSE
					CONTINUE
			END
		END
		
			
			FETCH NEXT FROM  MyCursor INTO  @PERSON_NUMB
		END	

	--关闭游标
	CLOSE MyCursor
	--释放资源
	DEALLOCATE MyCursor
	
	 
	 
		
	SELECT ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  ) ROW_NUM,
	(ROW_NUMBER() OVER(PARTITION BY PERSON_NUMB  ORDER BY PERSON_NUMB, GRP, PAY_YYYY+PAY_MM ,  SUPP_MM+SUPP_DD  )-1)/@MAX PAGE_NUM,
	 * FROM #temp
      ORDER BY  PERSON_NUMB, GRP, PAY_YYYY+PAY_MM,  SUPP_MM+SUPP_DD                                       
	
</select>

<select id="hpb400rkrService.selectList8" parameterType="Map" resultType="rMap">
	--Chpb400rkr.fnHpb400_8Q [fnHpb400_8Q] QUERY01
/*******************************************************************************************
    지급일자별집계표
*******************************************************************************************/
BEGIN
      SET NOCOUNT ON
      SET ARITHABORT ON

      DECLARE @COMP_CODE         NVARCHAR(10)
            , @FR_PAY_YYYYMM     NVARCHAR(06)
            , @TO_PAY_YYYYMM     NVARCHAR(06)
            , @FR_SUPP_DATE      NVARCHAR(08)
            , @TO_SUPP_DATE      NVARCHAR(08)
            , @FR_DEPT_CODE      NVARCHAR(30)
            , @FR_DEPT_NAME      NVARCHAR(50)
            , @TO_DEPT_CODE      NVARCHAR(30)
            , @TO_DEPT_NAME      NVARCHAR(50)
            , @PERSON_NUMB       NVARCHAR(30)
            , @DED_TYPE          NVARCHAR(10)
            , @SUPP_DATE         NVARCHAR(08)

      SET @COMP_CODE         = #{S_COMP_CODE}
      SET @FR_PAY_YYYYMM     = #{PAY_YYYYMM_FR}
      SET @TO_PAY_YYYYMM     = #{PAY_YYYYMM_TO}
      SET @FR_SUPP_DATE      = #{SUPP_DATE_FR}
      SET @TO_SUPP_DATE      = #{SUPP_DATE_TO}
      SET @FR_DEPT_CODE      = #{DEPT_CODE_FR}
      SET @TO_DEPT_CODE      = #{DEPT_CODE_TO}
      SET @PERSON_NUMB       = #{PERSON_NUMB}
      SET @DED_TYPE          = #{DED_TYPE}
      SET @SUPP_DATE         = #{SUPP_DATE}

      SELECT 
              A.COMP_CODE
            , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.SUPP_DATE)                                       AS SUPP_DATE
            , SUM(A.SUPP_TOTAL_I)                                                                       AS SUPP_TOTAL_I
            , SUM(ISNULL(A.SUPP_TOTAL_I,0)) - SUM(ISNULL(A.IN_TAX_I,0)) - SUM(ISNULL(A.LOCAL_TAX_I,0))  AS REAL_AMOUNT_I
            , SUM(A.IN_TAX_I)                                                                           AS IN_TAX_I
            , SUM(A.LOCAL_TAX_I)                                                                        AS LOCAL_TAX_I
      FROM               HPB200T AS A WITH(NOLOCK) 
              LEFT  JOIN HPB100T AS B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                                  AND A.PERSON_NUMB = B.PERSON_NUMB
                                                  AND A.DED_TYPE    = B.DED_TYPE
      WHERE   A.COMP_CODE           = @COMP_CODE
      AND     A.SECT_CODE   		= #{DIV_CODE}    
      AND   ((A.SUPP_DATE          &gt;= @FR_SUPP_DATE  AND @FR_SUPP_DATE  &lt;&gt; '') OR (@TO_SUPP_DATE  = ''))
      AND   ((A.SUPP_DATE          &lt;= @TO_SUPP_DATE  AND @TO_SUPP_DATE  &lt;&gt; '') OR (@TO_SUPP_DATE  = ''))
      AND     A.DED_TYPE            = @DED_TYPE
      GROUP BY A.COMP_CODE, A.SUPP_DATE

      SET NOCOUNT OFF
      SET ARITHABORT OFF
END
</select>
</mapper>