<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hrt501ukrServiceImpl">
	
	<!-- 미사용 시작-->
	<select id="hrt501ukrServiceImpl.checkRetrDate" parameterType="rMap" resultType="String">		
	/* hrt501ukrServiceImpl.checkRetrDate */
		SELECT RETR_DATE
		FROM HUM100T WITH (NOLOCK)
		WHERE COMP_CODE   = #{S_COMP_CODE}
		AND PERSON_NUMB = #{PERSON_NUMB}
	</select>
	
	<select id="hrt501ukrServiceImpl.checkHrtCnt" parameterType="rMap" resultType="int">		
	/* hrt501ukrServiceImpl.checkHrtCnt */
		SELECT COUNT(*) AS HRT_CNT
		   FROM HRT500T WITH (NOLOCK)
		  WHERE COMP_CODE   = #{S_COMP_CODE}
		    AND RETR_TYPE   = #{RETR_TYPE}
		    AND RETR_DATE   = #{RETR_DATE}
		    AND PERSON_NUMB = #{PERSON_NUMB}
	</select>
	
	<select id="hrt501ukrServiceImpl.selectFormData01CNT" parameterType="rMap" resultType="rMap">		
	/* hrt501ukrServiceImpl.selectFormData01CNT */
		SELECT 'U' AS PROC_TYPE
             , #{OT_KIND}											  AS RETR_OT_KIND            --퇴직분류
             , A.PERSON_NUMB                                          AS PERSON_NUMB           --사번
             , B.NAME                                                 AS NAME                  --성명
             , A.RETR_TYPE                                                                     --정산구분
             , A.JOIN_DATE                                                                     --정산시작일
             , A.RETR_DATE                                                                     --정산퇴직일
             , A.SUPP_DATE                                                                     --지급일
             , A.RETR_RESN                                                                     --퇴직사유
             , RTRIM(CONVERT(CHAR, A.DUTY_YYYY )) + '/'
             + RTRIM(CONVERT(CHAR, A.LONG_MONTH)) + '/'
             + RTRIM(CONVERT(CHAR, A.LONG_DAY  ))                     AS YYYYMMDD              --근속기간(년/월/일)
             , ISNULL(A.DUTY_YYYY          , 0)                       AS DUTY_YYYY             --근속년
             , ISNULL(A.LONG_MONTH         , 0)                       AS LONG_MONTH            --근속월
             , ISNULL(A.LONG_DAY           , 0)                       AS LONG_DAY              --근속일
             , ISNULL(A.LONG_TOT_DAY       , 0)                       AS LONG_TOT_DAY          --근속일수
             , ISNULL(A.ADD_MONTH          , 0)                       AS ADD_MONTH             --누진개월
             , ISNULL(A.LONG_TOT_MONTH     , 0)                       AS LONG_TOT_MONTH        --근속월수
             , ISNULL(A.LONG_YEARS         , 0)                       AS LONG_YEARS            --근속년수
             , ISNULL(A.AVG_DAY            , 0)                       AS AVG_DAY               --3개월총일수
             , ISNULL(A.PAY_TOTAL_I        , 0)                       AS PAY_TOTAL_I           --급여총액
             , ISNULL(A.BONUS_TOTAL_I      , 0)                       AS BONUS_TOTAL_I         --상여총액
             , ISNULL(A.YEAR_TOTAL_I       , 0)                       AS YEAR_TOTAL_I          --년월차총액
             , ISNULL(A.AVG_PAY_3          , 0)                       AS AVG_PAY_3             --3개월급여
             , ISNULL(A.AVG_BONUS_I_3      , 0)                       AS AVG_BONUS_I_3         --3개월상여
             , ISNULL(A.AVG_YEAR_I_3       , 0)                       AS AVG_YEAR_I_3          --3개월년차
             , ISNULL(A.TOT_WAGES_I        , 0)                       AS TOT_WAGES_I           --3개월합계
             , ISNULL(A.AVG_WAGES_I        , 0)                       AS AVG_WAGES_I           --평균임금
             , ISNULL(A.ORI_RETR_ANNU_I    , 0)                       AS ORI_RETR_ANNU_I       --집계된퇴직금
             , ISNULL(A.RETR_ANNU_I        , 0)                       AS RETR_ANNU_I           --퇴직금
             , ISNULL(A.GLORY_AMOUNT_I     , 0)                       AS GLORY_AMOUNT_I        --명예퇴직금
             , ISNULL(A.GROUP_INSUR_I      , 0)                       AS GROUP_INSUR_I         --퇴직보험금
             , ISNULL(A.OUT_INCOME_I       , 0)                       AS OUT_INCOME_I          --비과세소득
             , ISNULL(A.ETC_AMOUNT_I       , 0)                       AS ETC_AMOUNT_I          --기타지급
             , ISNULL(A.RETR_SUM_I         , 0)                       AS RETR_SUM_I            --지급총액
             , ISNULL(A.SUPP_TOTAL_I       , 0)                       AS SUPP_TOTAL_I          --퇴직급여액/정산퇴직금
             , ISNULL(A.SPEC_DED_I         , 0)                       AS SPEC_DED_I            --퇴직소득정률공제
             , ISNULL(A.INCOME_DED_I       , 0)                       AS INCOME_DED_I          --근속연수공제
             , ISNULL(A.EARN_INCOME_I      , 0)                       AS EARN_INCOME_I         --퇴직소득공제
             , ISNULL(A.TAX_STD_I          , 0)                       AS TAX_STD_I             --과세표준
             , ISNULL(A.AVG_TAX_STD_I      , 0)                       AS AVG_TAX_STD_I         --연평균과세표준
             , ISNULL(A.AVR_COMP_TAX_I     , 0)                       AS AVR_COMP_TAX_I        --연평균산출세액
             , ISNULL(A.COMP_TAX_I         , 0)                       AS COMP_TAX_I            --산출세액
             , ISNULL(A.PAY_END_TAX        , 0)                       AS PAY_END_TAX           --기납부세액
             , ISNULL(A.DEF_TAX_I          , 0)                       AS DEF_TAX_I             --결정세액
             , ISNULL(A.IN_TAX_I           , 0)                       AS IN_TAX_I              --소득세
             , ISNULL(A.LOCAL_TAX_I        , 0)                       AS LOCAL_TAX_I           --지방소득세
             , ISNULL(A.DED_IN_TAX_ADD_I   , 0)                       AS DED_IN_TAX_ADD_I      --소득세환급액
             , ISNULL(A.DED_IN_LOCAL_ADD_I , 0)                       AS DED_IN_LOCAL_ADD_I    --주민세환급액
             , ISNULL(A.DED_ETC_I          , 0)                       AS DED_ETC_I             --기타공제
             , ISNULL(A.DED_TOTAL_I        , 0)                       AS DED_TOTAL_I           --공제총액
             , ISNULL(A.REAL_AMOUNT_I      , 0)                       AS REAL_AMOUNT_I         --실지급액
             , ISNULL(A.M_ANNU_TOTAL_I     , 0)                       AS M_ANNU_TOTAL_I                    -- (15)퇴직급여_중간
             , ISNULL(A.M_OUT_INCOME_I     , 0)                       AS M_OUT_INCOME_I                    -- (16)비과세 퇴직급여_중간
             , ISNULL(A.M_TAX_TOTAL_I      , 0)                       AS M_TAX_TOTAL_I                     -- (17)과세대상 퇴직급여_중간
             , ISNULL(A.R_ANNU_TOTAL_I     , 0)                       AS R_ANNU_TOTAL_I                    -- (15)퇴직급여_최종
             , ISNULL(A.R_TAX_TOTAL_I      , 0)                       AS R_TAX_TOTAL_I                     -- (17)과세대상 퇴직급여_최종
             , ISNULL(A.M_JOIN_DATE        ,'')                       AS M_JOIN_DATE                       -- (18)입사일_중간
             , ISNULL(A.M_CALCU_END_DATE   ,'')                       AS M_CALCU_END_DATE                  -- (19)기산일_중간
             , ISNULL(A.M_RETR_DATE        ,'')                       AS M_RETR_DATE                       -- (20)퇴사일_중간
             , ISNULL(A.M_SUPP_DATE        ,'')                       AS M_SUPP_DATE                       -- (21)지급일_중간
             , ISNULL(A.M_LONG_MONTHS      , 0)                       AS M_LONG_MONTHS                     -- (22)근속월수_중간
             , ISNULL(A.M_EXEP_MONTHS_BE13 , 0)                       AS M_EXEP_MONTHS_BE13                -- (23)제외월수_중간(2013이전)
             , ISNULL(A.M_EXEP_MONTHS_AF13 , 0)                       AS M_EXEP_MONTHS_AF13                -- (23)제외월수_중간(2013이후)
             , ISNULL(A.M_EXEP_MONTHS      , 0)                       AS M_EXEP_MONTHS                     -- (23)제외월수_중간
             , ISNULL(A.M_ADD_MONTHS_BE13  , 0)                       AS M_ADD_MONTHS_BE13                 -- (24)가산월수_중간(2013이전)
             , ISNULL(A.M_ADD_MONTHS_AF13  , 0)                       AS M_ADD_MONTHS_AF13                 -- (24)가산월수_중간(2013이후)
             , ISNULL(A.M_ADD_MONTHS       , 0)                       AS M_ADD_MONTHS                      -- (24)가산월수_중간
             , ISNULL(A.M_LONG_YEARS       , 0)                       AS M_LONG_YEARS                      -- (26)근속연수_중간
             , ISNULL(A.R_JOIN_DATE        ,'')                       AS R_JOIN_DATE                       -- (18)입사일_최종
             , ISNULL(A.R_CALCU_END_DATE   ,'')                       AS R_CALCU_END_DATE                  -- (19)기산일_최종
             , ISNULL(A.R_RETR_DATE        ,'')                       AS R_RETR_DATE                       -- (20)퇴사일_최종
             , ISNULL(A.R_SUPP_DATE        ,'')                       AS R_SUPP_DATE                       -- (21)지급일_최종
             , ISNULL(A.R_LONG_MONTHS      , 0)                       AS R_LONG_MONTHS                     -- (22)근속월수_최종
             , ISNULL(A.R_EXEP_MONTHS_BE13 , 0)                       AS R_EXEP_MONTHS_BE13                -- (23)제외월수_최종(2013이전)
             , ISNULL(A.R_EXEP_MONTHS_AF13 , 0)                       AS R_EXEP_MONTHS_AF13                -- (23)제외월수_최종(2013이후)
             , ISNULL(A.R_EXEP_MONTHS      , 0)                       AS R_EXEP_MONTHS                     -- (23)제외월수_최종
             , ISNULL(A.R_ADD_MONTHS_BE13  , 0)                       AS R_ADD_MONTHS_BE13                 -- (24)가산월수_최종(2013이전)
             , ISNULL(A.R_ADD_MONTHS_AF13  , 0)                       AS R_ADD_MONTHS_AF13                 -- (24)가산월수_최종(2013이후)
             , ISNULL(A.R_ADD_MONTHS       , 0)                       AS R_ADD_MONTHS                      -- (24)가산월수_최종
             , ISNULL(A.R_LONG_YEARS       , 0)                       AS R_LONG_YEARS                      -- (26)근속연수_최종
             , ISNULL(A.S_JOIN_DATE        ,'')                       AS S_JOIN_DATE                       -- (18)입사일_정산
             , ISNULL(A.S_CALCU_END_DATE   ,'')                       AS S_CALCU_END_DATE                  -- (19)기산일_정산
             , ISNULL(A.S_RETR_DATE        ,'')                       AS S_RETR_DATE                       -- (20)퇴사일_정산
             , ISNULL(A.S_LONG_MONTHS      , 0)                       AS S_LONG_MONTHS                     -- (22)근속월수_정산
             , ISNULL(A.S_EXEP_MONTHS      , 0)                       AS S_EXEP_MONTHS                     -- (23)제외월수_정산
             , ISNULL(A.S_ADD_MONTHS       , 0)                       AS S_ADD_MONTHS                      -- (24)가산월수_정산
             , ISNULL(A.S_DUPLI_MONTHS     , 0)                       AS S_DUPLI_MONTHS                    -- (25)중복월수_정산
             , ISNULL(A.S_LONG_YEARS       , 0)                       AS S_LONG_YEARS                      -- (26)근속연수_정산
             , ISNULL(A.CALCU_END_DATE_BE13,'')                       AS CALCU_END_DATE_BE13               -- (19)기산일_이전
             , ISNULL(A.RETR_DATE_BE13     ,'')                       AS RETR_DATE_BE13                    -- (20)퇴사일_이전
             , ISNULL(A.LONG_MONTHS_BE13   , 0)                       AS LONG_MONTHS_BE13                  -- (22)근속월수_이전
             , ISNULL(A.EXEP_MONTHS_BE13   , 0)                       AS EXEP_MONTHS_BE13                  -- (23)제외월수_이전
             , ISNULL(A.ADD_MONTHS_BE13    , 0)                       AS ADD_MONTHS_BE13                   -- (24)가산월수_이전
             , ISNULL(A.LONG_YEARS_BE13    , 0)                       AS LONG_YEARS_BE13                   -- (26)근속연수_이전
             , ISNULL(A.CALCU_END_DATE_AF13,'')                       AS CALCU_END_DATE_AF13               -- (19)기산일_이후
             , ISNULL(A.RETR_DATE_AF13     ,'')                       AS RETR_DATE_AF13                    -- (20)퇴사일_이후
             , ISNULL(A.LONG_MONTHS_AF13   , 0)                       AS LONG_MONTHS_AF13                  -- (22)근속월수_이후
             , ISNULL(A.EXEP_MONTHS_AF13   , 0)                       AS EXEP_MONTHS_AF13                  -- (23)제외월수_이후
             , ISNULL(A.ADD_MONTHS_AF13    , 0)                       AS ADD_MONTHS_AF13                   -- (24)가산월수_이후
             , ISNULL(A.LONG_YEARS_AF13    , 0)                       AS LONG_YEARS_AF13                   -- (26)근속연수_이후
             , ISNULL(A.DIVI_TAX_STD_BE13  , 0)                       AS DIVI_TAX_STD_BE13                 -- (31)과세표준안분_이전
             , ISNULL(A.DIVI_TAX_STD_AF13  , 0)                       AS DIVI_TAX_STD_AF13                 -- (31)과세표준안분_이후
             , ISNULL(A.AVG_TAX_STD_BE13   , 0)                       AS AVG_TAX_STD_BE13                  -- (32)연평균과세표준_이전
             , ISNULL(A.AVG_TAX_STD_AF13   , 0)                       AS AVG_TAX_STD_AF13                  -- (32)연평균과세표준_이후
             , ISNULL(A.EX_TAX_STD_AF13    , 0)                       AS EX_TAX_STD_AF13                   -- (33)환산과세표준_이후
             , ISNULL(A.EX_COMP_TAX_AF13   , 0)                       AS EX_COMP_TAX_AF13                  -- (34)환산산출세액_이후
             , ISNULL(A.AVR_COMP_TAX_BE13  , 0)                       AS AVR_COMP_TAX_BE13                 -- (35)연평균산출세액_이전
             , ISNULL(A.AVR_COMP_TAX_AF13  , 0)                       AS AVR_COMP_TAX_AF13                 -- (35)연평균산출세액_이후
             , ISNULL(A.COMP_TAX_BE13      , 0)                       AS COMP_TAX_BE13                     -- (36)산출세액_이전
             , ISNULL(A.COMP_TAX_AF13      , 0)                       AS COMP_TAX_AF13                     -- (36)산출세액_이후
          FROM            HRT500T A WITH (NOLOCK)
               INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                 AND B.PERSON_NUMB = A.PERSON_NUMB
         WHERE A.COMP_CODE   = #{COMP_CODE}  
           AND A.RETR_DATE   = #{RETR_DATE}
           AND A.RETR_TYPE   = #{RETR_TYPE}
           AND A.PERSON_NUMB = #{PERSON_NUMB}
	</select>
	<!-- 미사용 끝-->
	
	<select id="hrt501ukrServiceImpl.checkRetroOTKind" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.checkRetroOTKind */
			SELECT CASE WHEN ISNULL(B.POST_CODE   , '') &lt;&gt; '' THEN 'OF'
		                WHEN ISNULL(A.RETR_OT_KIND, '')  = '' THEN 'ST'
		                ELSE A.RETR_OT_KIND
		           END  AS RETR_OT_KIND
		    FROM              HUM100T   A  WITH (NOLOCK)
		           LEFT  JOIN HRT120T   B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                AND B.POST_CODE = A.POST_CODE
		    WHERE  A.COMP_CODE   = #{S_COMP_CODE}
		    AND    A.PERSON_NUMB = #{PERSON_NUMB}
	</select>
	
	<select id="hrt501ukrServiceImpl.selectFormData01" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectFormData01 */
		DECLARE @ERROR_CODE nvarchar(10),	@return_value numeric(03)
						
		EXEC @return_value = SP_HRT_CALC_RETIRE_MAIN 
					  #{S_COMP_CODE}
					, #{PERSON_NUMB} 
					, #{RETR_DATE}
					, #{RETR_TYPE}
					, #{TAX_CALCU}
					, #{SUPP_DATE}
					, #{S_USER_ID}
					, @ERROR_CODE OUTPUT
				
		SELECT	@ERROR_CODE as N'ERROR_CODE', @return_value as 'RETURN_VALUE'
	</select>
	
	<select id="hrt501ukrServiceImpl.fnSuppTotI" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.fnSuppTotI */
		DECLARE @ERROR_CODE nvarchar(10),	@return_value numeric(03)
						
		EXEC @return_value = SP_HRT_CHANGE_RETIRE_ST_SUPP_TOTAL 
					  #{S_COMP_CODE}
					, #{PERSON_NUMB} 
					, #{RETR_DATE}
					, #{RETR_TYPE}
					, #{TAX_CALCU}
					, #{R_CALCU_END_DATE}
					, #{S_LONG_YEARS}
					, #{LONG_YEARS_BE13}
					, #{LONG_YEARS_AF13}
					, #{PAY_END_TAX}
					, #{R_ANNU_TOTAL_I}
					, #{OUT_INCOME_I}
					, #{M_ANNU_TOTAL_I}
					, #{M_OUT_INCOME_I}
					, #{DED_IN_TAX_ADD_I}
					, #{DED_IN_LOCAL_ADD_I}
					, #{DED_ETC_I}
					, #{S_USER_ID}
					, @ERROR_CODE OUTPUT
		SELECT	@ERROR_CODE as N'ERROR_CODE', @return_value as 'RETURN_VALUE'
	</select>
	
	<update id="hrt501ukrServiceImpl.submitFormData01" parameterType="foren.unilite.modules.human.hrt.Hrt501ukrModel">
	/* hrt501ukrServiceImpl.submitFormData01 */
		UPDATE HRT500T
		   SET JOIN_DATE           = #{JOIN_DATE}
		     , SUPP_DATE           = #{SUPP_DATE}
		     , RETR_RESN           = #{RETR_RESN}
		     , DUTY_YYYY           = #{DUTY_YYYY}
		     , LONG_MONTH          = #{LONG_MONTH}
		     , LONG_DAY            = #{LONG_DAY}
		     , LONG_TOT_DAY        = #{LONG_TOT_DAY}
		     , ADD_MONTH           = #{ADD_MONTH}
		     , LONG_TOT_MONTH      = #{LONG_TOT_MONTH}
		     , LONG_YEARS          = #{LONG_YEARS}
		     , AVG_DAY             = #{AVG_DAY}
		     , PAY_TOTAL_I         = #{PAY_TOTAL_I}
		     , BONUS_TOTAL_I       = #{BONUS_TOTAL_I}
		     , YEAR_TOTAL_I        = #{YEAR_TOTAL_I}
		     , AVG_PAY_3           = #{AVG_PAY_3}
		     , AVG_BONUS_I_3       = #{AVG_BONUS_I_3}
		     , AVG_YEAR_I_3        = #{AVG_YEAR_I_3}
		     , TOT_WAGES_I         = #{TOT_WAGES_I}
		     , AVG_WAGES_I         = #{AVG_WAGES_I}
		     , ORI_RETR_ANNU_I     = #{ORI_RETR_ANNU_I}
		     , RETR_ANNU_I         = #{RETR_ANNU_I}
		     , GLORY_AMOUNT_I      = #{GLORY_AMOUNT_I}
		     , GROUP_INSUR_I       = #{GROUP_INSUR_I}
		     , OUT_INCOME_I        = #{OUT_INCOME_I}
		     , ETC_AMOUNT_I        = #{ETC_AMOUNT_I}
		     , RETR_SUM_I          = #{RETR_SUM_I}
		     , SUPP_TOTAL_I        = #{SUPP_TOTAL_I}
		     , SPEC_DED_I          = #{SPEC_DED_I}
		     , INCOME_DED_I        = #{INCOME_DED_I}
		     , EARN_INCOME_I       = #{EARN_INCOME_I}
		     , TAX_STD_I           = #{TAX_STD_I}
		     , AVG_TAX_STD_I       = #{AVG_TAX_STD_I}
		     , AVR_COMP_TAX_I      = #{AVR_COMP_TAX_I}
		     , COMP_TAX_I          = #{COMP_TAX_I}
		     , IN_TAX_I            = #{IN_TAX_I}
		     , LOCAL_TAX_I         = #{LOCAL_TAX_I}
		     , DED_IN_TAX_ADD_I    = #{DED_IN_TAX_ADD_I}
		     , DED_IN_LOCAL_ADD_I  = #{DED_IN_LOCAL_ADD_I}
		     , DED_ETC_I           = #{DED_ETC_I}
		     , DED_TOTAL_I         = #{DED_TOTAL_I}
		     , PAY_END_TAX         = #{PAY_END_TAX}
		     , DEF_TAX_I           = #{DEF_TAX_I}
		     , REAL_AMOUNT_I       = #{REAL_AMOUNT_I}
		     , M_ANNU_TOTAL_I      = #{M_ANNU_TOTAL_I}
		     , M_OUT_INCOME_I      = #{M_OUT_INCOME_I}
		     , M_TAX_TOTAL_I       = #{DED_TOTAL_I}
		     , R_ANNU_TOTAL_I      = #{R_ANNU_TOTAL_I}
		     , R_TAX_TOTAL_I       = #{R_TAX_TOTAL_I}
		     , R_CALCU_END_DATE    = #{R_CALCU_END_DATE}
		     , S_LONG_YEARS        = #{S_LONG_YEARS}
		     , LONG_YEARS_BE13     = #{LONG_YEARS_BE13}
		     , LONG_YEARS_AF13     = #{LONG_YEARS_AF13}
		     , INSERT_DB_USER      = #{S_USER_ID}
		     , INSERT_DB_TIME      = GETDATE()
		     , UPDATE_DB_USER      = #{S_USER_ID}
		     , UPDATE_DB_TIME      = GETDATE()
		     		     
		 WHERE COMP_CODE           = #{S_COMP_CODE}
		   AND RETR_DATE           = #{RETR_DATE}
		   AND RETR_TYPE           = #{RETR_TYPE}
		   AND PERSON_NUMB         = #{PERSON_NUMB}
	</update>
	
	<select id="hrt501ukrServiceImpl.selectFormData02" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectFormData02 */
		SELECT  A.SUPP_TOTAL_I   AS A
		     , A.SPEC_DED_I     AS B
		     , (CASE WHEN A.LONG_YEARS &lt;= 5                         THEN A.INCOME_DED_I ELSE 0 END) AS C
		     , (CASE WHEN A.LONG_YEARS &gt; 5  AND A.LONG_YEARS &lt;= 10 THEN A.INCOME_DED_I ELSE 0 END) AS D
		     , (CASE WHEN A.LONG_YEARS &gt; 10 AND A.LONG_YEARS &lt;= 20 THEN A.INCOME_DED_I ELSE 0 END) AS E
		     , (CASE WHEN A.LONG_YEARS &gt; 20                        THEN A.INCOME_DED_I ELSE 0 END) AS F
		     , A.EARN_INCOME_I  AS G
		     , A.TAX_STD_I      AS H
		     , A.AVG_TAX_STD_I  AS I
		     , (CASE WHEN A.AVG_TAX_STD_I &lt;=  12000000                                  THEN A.AVR_COMP_TAX_I ELSE 0 END) AS J
		     , (CASE WHEN A.AVG_TAX_STD_I &gt; 12000000 AND A.AVG_TAX_STD_I &lt;=  46000000 THEN A.AVR_COMP_TAX_I ELSE 0 END) AS K
		     , (CASE WHEN A.AVG_TAX_STD_I &gt; 46000000 AND A.AVG_TAX_STD_I &lt;=  88000000 THEN A.AVR_COMP_TAX_I ELSE 0 END) AS L
		     , (CASE WHEN A.AVG_TAX_STD_I &gt; 88000000 AND A.AVG_TAX_STD_I &lt;= 300000000 THEN A.AVR_COMP_TAX_I ELSE 0 END) AS M
		     , (CASE WHEN A.AVG_TAX_STD_I &gt; 300000000                                  THEN A.AVR_COMP_TAX_I ELSE 0 END) AS N
		     , A.COMP_TAX_I     AS O
		  FROM            HRT500T A WITH (NOLOCK)
		       INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                         AND B.PERSON_NUMB = A.PERSON_NUMB
		 WHERE A.COMP_CODE   = #{S_COMP_CODE} 
		   AND A.RETR_DATE   = #{RETR_DATE}
		   AND A.RETR_TYPE   = #{RETR_TYPE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
	</select>
	
	<select id="hrt501ukrServiceImpl.selectFormDataResult" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectFormDataResult */
		SELECT * FROM TEMPRETIRE
		--DROP TABLE TEMPRETIRE
		--DROP TABLE TEMPRETIRE1
		--DROP TABLE TEMPRETIRE2
		--DROP TABLE TEMPRETIRE3
		--DROP TABLE TEMPRETIRE4
		--DROP TABLE TEMPRETIRE5
	</select>
	
	<select id="hrt501ukrServiceImpl.selectList01" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList01 */
		SELECT  A.COMP_CODE
			 , A.RETR_DATE
			 , A.RETR_TYPE
			 , A.PERSON_NUMB
			 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
			 , A.WAGES_CODE
			 , B.WAGES_NAME AS WAGES_NAME
			 , A.AMOUNT_I
			 , A.PAY_STRT_DATE
			 , A.PAY_LAST_DATE
			 , A.WAGES_DAY
			 , A.INSERT_DB_USER
			 , A.INSERT_DB_TIME
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
		  FROM            HRT300T A WITH (NOLOCK)
			   LEFT  JOIN HBS300T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
												 AND B.CODE_TYPE  = '1'
												 AND B.WAGES_CODE = A.WAGES_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.RETR_DATE   = #{RETR_DATE}
		   AND A.RETR_TYPE   = #{RETR_TYPE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		 ORDER BY A.PAY_YYYYMM 
		 SELECT * FORM TEMPRETIRE1
	</select>
	
	<select id="hrt501ukrServiceImpl.selectList02" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList02 */
		SELECT   A.COMP_CODE
		     , A.RETR_DATE
		     , A.RETR_TYPE
		     , A.PERSON_NUMB
		     , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
		     , A.WEL_CODE
		     , B.WEL_NAME
		     , A.GIVE_I
		     , A.WEL_LEVEL1
		     , A.WEL_LEVEL2
		     , A.APPLY_YYMM
		     , A.PAY_STRT_DATE
		     , A.PAY_LAST_DATE
		     , A.WAGES_DAY
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		  FROM            HRT350T A WITH (NOLOCK)
		       INNER JOIN HWE100T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                         AND B.APPLY_YYMM = A.APPLY_YYMM
		                                         AND B.WEL_LEVEL1 = A.WEL_LEVEL1
		                                         AND B.WEL_LEVEL2 = A.WEL_LEVEL2
		                                         AND B.WEL_CODE   = A.WEL_CODE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.RETR_DATE   = #{RETR_DATE}
		   AND A.RETR_TYPE   = #{RETR_TYPE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		 ORDER BY A.PAY_YYYYMM
	</select>
	
	<select id="hrt501ukrServiceImpl.selectList03" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList03 */
		SELECT A.COMP_CODE
		     , A.RETR_DATE
		     , A.RETR_TYPE
		     , A.PERSON_NUMB
		     , uniLite.fnGetUserDateComp(A.COMP_CODE, A.BONUS_YYYYMM) AS BONUS_YYYYMM
		     , A.BONUS_TYPE
		     , M1.CODE_NAME AS BONUS_NAME
		     , A.BONUS_I
		     , A.BONUS_RATE
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		  FROM            HRT400T A  WITH (NOLOCK)
		       LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                          AND M1.MAIN_CODE = 'H032'
		                                          AND M1.SUB_CODE  = A.BONUS_TYPE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.RETR_DATE   = #{RETR_DATE}
		   AND A.RETR_TYPE   = #{RETR_TYPE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		   AND A.BONUS_TYPE NOT IN ('1','E','F','G')
		 ORDER BY A.BONUS_YYYYMM 
		 --SELECT * FROM TEMPRETIRE3
	</select>
	
	<select id="hrt501ukrServiceImpl.selectList04" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList04 */
		SELECT  A.COMP_CODE
		     , A.RETR_DATE
		     , A.RETR_TYPE
		     , A.PERSON_NUMB
		     , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.BONUS_YYYYMM) AS BONUS_YYYYMM
		     , A.BONUS_TYPE
		     , M1.CODE_NAME AS BONUS_NAME
		     , A.BONUS_I
		     , A.SUPP_DATE
		     , A.BONUS_RATE
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		  FROM            HRT400T A  WITH (NOLOCK)
		       LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                          AND M1.MAIN_CODE = 'H032'
		                                          AND M1.SUB_CODE  = A.BONUS_TYPE
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.RETR_DATE   = #{RETR_DATE}
		   AND A.RETR_TYPE   = #{RETR_TYPE}
		   AND A.PERSON_NUMB = #{PERSON_NUMB}
		   AND A.BONUS_TYPE IN ('E','F','G') 
		 ORDER BY A.BONUS_YYYYMM ASC
	</select>
	
	<insert id="hrt501ukrServiceImpl.insertList04" parameterType="rMap">
	/* hrt501ukrServiceImpl.insertList04 */	
		INSERT INTO HRT400T
		     ( RETR_DATE
		     , RETR_TYPE
		     , PERSON_NUMB
		     , BONUS_YYYYMM
		     , BONUS_TYPE
		     , BONUS_I
		     , SUPP_DATE
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{RETR_DATE}
		     , #{RETR_TYPE}
		     , #{PERSON_NUMB}
		     , #{BONUS_YYYYMM}
		     , #{BONUS_TYPE}
		     , #{BONUS_I}
		     , #{SUPP_DATE}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )
	</insert>
	
	<update id="hrt501ukrServiceImpl.updateList04" parameterType="rMap">
	/* hrt501ukrServiceImpl.updateList04 */	
		UPDATE HRT400T
		   SET BONUS_I        = #{BONUS_I}
		     , SUPP_DATE      = #{SUPP_DATE}
		     , BONUS_RATE     = #{BONUS_RATE}
		     , INSERT_DB_USER = #{S_USER_ID}
		     , INSERT_DB_TIME = GETDATE()
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND RETR_DATE      = #{RETR_DATE}
		   AND RETR_TYPE      = #{RETR_TYPE}
		   AND PERSON_NUMB    = #{PERSON_NUMB}
		   AND BONUS_YYYYMM   = #{BONUS_YYYYMM}
		   AND BONUS_TYPE     = #{BONUS_TYPE}
	</update>
	
	<select id="hrt501ukrServiceImpl.selectList05" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList05 */
		BEGIN
    --  1. 변수선언 -----------------------------------------------------------------------------------
        DECLARE @SUPP_TOTAL_I           NUMERIC(30, 6)
              , @Y2011_SUPP_TOTAL_I     NUMERIC(30, 6)
              , @STD_RETR_ANNU_I        NUMERIC(30, 6)
              , @Y_AVG_PAY_I            NUMERIC(30, 6)
              , @CON_RETR_ANNU_I        NUMERIC(30, 6)
              , @PAY_ANNU_I             NUMERIC(30, 6)
              , @RETR_ANNU_I            NUMERIC(30, 6)
              , @R_IN_TAX_I             NUMERIC(30, 6)
              , @R_LOCAL_TAX_I          NUMERIC(30, 6)
              , @ORG_RETR_ANNU_I        NUMERIC(30, 6)
              , @ORG_GLORY_AMOUNT_I     NUMERIC(30, 6)
              , @ORG_ETC_AMOUNT_I       NUMERIC(30, 6)
              , @ORG_GROUP_INSUR_I      NUMERIC(30, 6)
              , @JOIN_DATE              NVARCHAR(08)
              , @RETR_DATE              NVARCHAR(08)
    
              , @RETR_TYPE              NVARCHAR(01)
              , @SUPP_DATE              NVARCHAR(08)
              , @M_SUPP_TOTAL_I         NUMERIC(30, 6)
              , @M_RETR_ANNU_I          NUMERIC(30, 6)
    
    --  2. 데이터 조회 , 변수값 저장 -------------------------------------------------------------------------
        SELECT @JOIN_DATE           = ISNULL(B.JOIN_DATE         , '0')
             , @RETR_DATE           = ISNULL(B.RETR_DATE         , '0')
             , @SUPP_TOTAL_I        = ISNULL(A.SUPP_TOTAL_I      , 0 )
             , @Y2011_SUPP_TOTAL_I  = ISNULL(A.Y2011_SUPP_TOTAL_I, 0 )
             , @STD_RETR_ANNU_I     = ISNULL(A.STD_RETR_ANNU_I   , 0 )
             , @Y_AVG_PAY_I         = ISNULL(A.Y_AVG_PAY_I       , 0 )
             , @CON_RETR_ANNU_I     = ISNULL(A.CON_RETR_ANNU_I   , 0 )
             , @PAY_ANNU_I          = ISNULL(A.PAY_ANNU_I        , 0 )
             , @RETR_ANNU_I         = ISNULL(A.RETR_ANNU_I       , 0 )
             , @R_IN_TAX_I          = ISNULL(A.R_IN_TAX_I        , 0 )
             , @R_LOCAL_TAX_I       = ISNULL(A.R_LOCAL_TAX_I     , 0 )
        FROM              HRT510T   A  WITH (NOLOCK)
               LEFT  JOIN HUM100T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                    AND B.PERSON_NUMB = A.PERSON_NUMB
        WHERE   A.COMP_CODE      = #{S_COMP_CODE}
			AND A.RETR_DATE      = #{RETR_DATE}
			AND A.RETR_TYPE      = #{RETR_TYPE}
			AND A.PERSON_NUMB    = #{PERSON_NUMB}
    
        SELECT CONVERT(NVARCHAR(02), '01')              AS SEQ
             , 'JOIN_DATE'                              AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , CONVERT(NUMERIC(30, 6) , @JOIN_DATE)     AS CONTENT
             , 'JOIN_DATE'				                AS REMARK
             , 'D'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '02')              AS SEQ
             , 'RETR_DATE'                              AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , CONVERT(NUMERIC(30, 6) , @RETR_DATE)     AS CONTENT
             , 'RETR_DATE'					            AS REMARK
             , 'D'                                      AS DATA_TYPE
            UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '08')              AS SEQ
             , 'SUPP_TOTAL_I'                           AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @SUPP_TOTAL_I                            AS CONTENT
             , 'SUPP_TOTAL_I'			                AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '09')              AS SEQ
             , 'Y2011_SUPP_TOTAL_I'                     AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @Y2011_SUPP_TOTAL_I                      AS CONTENT
             , 'Y2011_SUPP_TOTAL_I'		                AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '10')              AS SEQ
             , 'STD_RETR_ANNU_I'                        AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @STD_RETR_ANNU_I                         AS CONTENT
             , 'STD_RETR_ANNU_I'		                AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '11')              AS SEQ
             , 'Y_AVG_PAY_I'                            AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @Y_AVG_PAY_I                             AS CONTENT
             , 'Y_AVG_PAY_I'  			                AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '12')              AS SEQ
             , 'CON_RETR_ANNU_I'                        AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @CON_RETR_ANNU_I                         AS CONTENT
             , 'CON_RETR_ANNU_I'		                AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '13')              AS SEQ
             , 'PAY_ANNU_I'                             AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @PAY_ANNU_I                              AS CONTENT
             , 'PAY_ANNU_I'               				AS REMARK
             , 'N'                                      AS DATA_TYPE
        UNION  ALL
        SELECT CONVERT(NVARCHAR(02), '14')              AS SEQ
             , 'RETR_ANNU_I'                            AS DIVI_CODE
             , CONVERT(NVARCHAR(100), '')               AS DIVI_NAME
             , @RETR_ANNU_I                             AS CONTENT
             , 'RETR_ANNU_I'				            AS REMARK
             , 'N'                                      AS DATA_TYPE
    	END	
	</select>
	
	<select id="hrt501ukrServiceImpl.selectList06" parameterType="rMap" resultType="rMap">
	/* hrt501ukrServiceImpl.selectList06 */
		SELECT uniLITE.fnGetUserdateComp(#{S_COMP_CODE}, SUPP_DATE) AS SUPP_DATE
	         , uniLITE.fnGetUserdateComp(#{S_COMP_CODE}, JOIN_DATE) AS RETR_DATE_FR
	         , uniLITE.fnGetUserdateComp(#{S_COMP_CODE}, RETR_DATE) AS RETR_DATE_TO
	         , ISNULL(RETR_ANNU_I , 0) AS RETR_ANNU_I
	         , ISNULL(IN_TAX_I    , 0) AS IN_TAX_I
	         , ISNULL(LOCAL_TAX_I , 0) AS LOCAL_TAX_I
	         , (ISNULL(RETR_ANNU_I, 0) - ISNULL(IN_TAX_I, 0) - ISNULL(LOCAL_TAX_I, 0)) AS BALANCE_I
	         , CONVERT(NVARCHAR(1),'') AS REMARK
	      FROM HRT500T WITH(NOLOCK)
	     WHERE COMP_CODE   = #{S_COMP_CODE}
	       AND RETR_TYPE   = 'M'
	       AND PERSON_NUMB = #{PERSON_NUMB}
	</select>
	
</mapper>