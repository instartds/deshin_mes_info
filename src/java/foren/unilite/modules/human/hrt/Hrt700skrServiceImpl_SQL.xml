<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hrt700skrServiceImpl">
    
    <select id="hrt700skrServiceImpl.selectList1" parameterType="rMap" resultType="rMap">
        --hrt700skrServiceImpl.selectList1
        SELECT A.COMP_CODE
             , B.DIV_CODE                --사업장
             , B.DEPT_NAME               --부서
             , B.POST_CODE               --직위
             , B.NAME                    --사명
             , A.PERSON_NUMB             --사번
             , A.RETR_TYPE               --구분
             , B.JOIN_DATE AS ENTR_DATE  --입사일
             , A.JOIN_DATE               --정산시작일
             , A.RETR_DATE               --정산일
             , A.SUPP_DATE             --지급일
        
   
             
             , ISNULL(A.DUTY_YYYY, 0)  AS DUTY_YYYY               --근속기간
             , ISNULL(A.LONG_MONTH, 0)  AS LONG_MONTH               --근속기간
             , ISNULL(A.LONG_DAY, 0)  AS LONG_DAY               --근속기간
             
             , A.PAY_TOTAL_I             --급여총액
             , A.BONUS_TOTAL_I           --상여총액
             , A.YEAR_TOTAL_I            --년월차종액
             , A.TOT_WAGES_I             --합계
             , A.AVG_WAGES_I             --평균임금
             , A.ORI_RETR_ANNU_I         --퇴직금
        
          FROM      HRT500T A WITH(NOLOCK)
         INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                          AND B.PERSON_NUMB = A.PERSON_NUMB                                
         WHERE A.COMP_CODE   	   = #{S_COMP_CODE}
         AND   B.RETR_PENSION_KIND = 'N'
        <if test="@foren.Ognl@isNotEmpty(CODE_NAME)">
       AND A.RETR_TYPE   = #{CODE_NAME}
       </if>
       <if test="@foren.Ognl@isNotEmpty(FR_DATE)">
       AND A.RETR_DATE   &gt;= #{FR_DATE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(TO_DATE)">
       AND A.RETR_DATE   &lt;= #{TO_DATE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND B.DIV_CODE    = #{DIV_CODE}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE1)">  
       AND B.DEPT_CODE  &gt;= #{DEPT_CODE1}
       </if>
       <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">  
       AND B.DEPT_CODE  &lt;= #{DEPT_CODE2}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
       AND A.PERSON_NUMB  = #{PERSON_NUMB}
       </if>
       <if test="RDO_TYPE == &quot;A&quot;">
       AND B.RETR_DATE = '00000000'        -- 재직구분 (재직)
       </if>
       <if test="RDO_TYPE == &quot;B&quot;">
       AND B.RETR_DATE != '00000000'       -- 재직구분 (퇴사)
       </if>
      ORDER BY B.DIV_CODE, B.DEPT_CODE,B.POST_CODE, B.NAME, A.PERSON_NUMB
    </select>
    
    
    <select id="hrt700skrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
    --hrt700skrServiceImpl.selectList2
    BEGIN
    
    	SET NOCOUNT ON
    	SET ARITHABORT ON
    
    	DECLARE @BASE_YEAR	NVARCHAR(04)
        
    		SET @BASE_YEAR = LEFT(#{FR_DATE}, 4)
        
        SELECT A.COMP_CODE
             , B.DIV_CODE                --사업장
             , B.DEPT_NAME               --부서
             , B.POST_CODE               --직위
             , B.NAME                    --사명
             , A.PERSON_NUMB             --사번
             , A.RETR_TYPE               --구분
             , A.SUPP_DATE             --지급일
        

             , CASE WHEN ISNULL(C.LAST_RETR_DATE, '') = ''
			        THEN LEFT(A.RETR_DATE, 4) + '.' + SUBSTRING(A.RETR_DATE, 5, 2)
					ELSE LEFT(C.LAST_RETR_DATE, 4) + '.' + SUBSTRING(C.LAST_RETR_DATE, 5, 2)
				END								  AS FIRST_RETR_MONTH			--정산시작월
			 , LEFT(A.RETR_DATE, 4) + '.' 
             + SUBSTRING(A.RETR_DATE, 5, 2)       AS LAST_RETR_MONTH            --정산종료월
			 
             <if test="rdoSelect == &quot;1&quot;">
             , '1분기' AS  QUATER_TYPE  --정산분기
             </if>
             
             <if test="rdoSelect == &quot;2&quot;">
             , '2분기' AS  QUATER_TYPE  --정산분기
             </if>
             
             <if test="rdoSelect == &quot;3&quot;">
             , '3분기' AS  QUATER_TYPE  --정산분기
             </if>
             
             <if test="rdoSelect == &quot;4&quot;">
             , '4분기' AS  QUATER_TYPE  --정산분기
             </if>
             
             
             , CONVERT(NVARCHAR, ISNULL(A.DUTY_YYYY, 0)) 
			 + '년 ' + CONVERT(NVARCHAR, ISNULL(A.LONG_MONTH, 0))
			 + '월 ' + CONVERT(NVARCHAR, ISNULL(A.LONG_DAY, 0) ) + '일' AS DUTY_YYYY               --근속기간 
             
             , ISNULL(A.PAY_TOTAL_I, 0)      AS PAY_TOTAL_I       --급여총액
             , ISNULL(A.BONUS_TOTAL_I, 0)    AS BONUS_TOTAL_I     --상여총액
             , ISNULL(A.YEAR_TOTAL_I, 0)     AS YEAR_TOTAL_I      --년월차종액
        

             , ISNULL(A.ORI_RETR_ANNU_I, 0)  AS ORI_RETR_ANNU_I   --퇴직금
             
             <if test="rdoSelect == &quot;1&quot;">
			 , 0 AS QUAT_RETR_ANNU_I  --전분기퇴직금

			 , 0 AS PRE_QUATER_AMT	  --전분기차이금액
             </if>
             
             <if test="rdoSelect != &quot;1&quot;">
             , ISNULL(C.QUAT_RETR_ANNU_I, 0) AS QUAT_RETR_ANNU_I  --전분기퇴직금

             , ISNULL(C.QUAT_RETR_ANNU_I, 0) 
             - ISNULL(A.ORI_RETR_ANNU_I, 0)  AS PRE_QUATER_AMT    --전분기차이금액
             </if>
        
          FROM      HRT500T A WITH(NOLOCK)
         INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                          AND B.PERSON_NUMB = A.PERSON_NUMB
										  
          LEFT JOIN (
						SELECT COMP_CODE
							 , PERSON_NUMB
							 , MAX(RETR_DATE)       AS LAST_RETR_DATE 
							 , SUM(ORI_RETR_ANNU_I) AS QUAT_RETR_ANNU_I
						  FROM HRT500T WITH(NOLOCK)
						 WHERE COMP_CODE = #{S_COMP_CODE}
                         
                         <if test="rdoSelect == &quot;1&quot;">
                           AND LEFT(RETR_DATE, 6) &gt;= @BASE_YEAR + '01'
                           AND LEFT(RETR_DATE, 6) &lt;= @BASE_YEAR + '03'
                         </if>
                         
                         <if test="rdoSelect == &quot;2&quot;">
                           AND LEFT(RETR_DATE, 6) &gt;= @BASE_YEAR + '01'
                           AND LEFT(RETR_DATE, 6) &lt;= @BASE_YEAR + '03'
                         </if>
                         
                         <if test="rdoSelect == &quot;3&quot;">
                           AND LEFT(RETR_DATE, 6) &gt;= @BASE_YEAR + '04'
                           AND LEFT(RETR_DATE, 6) &lt;= @BASE_YEAR + '06'
                         </if>
                         
                         <if test="rdoSelect == &quot;4&quot;">
                           AND LEFT(RETR_DATE, 6) &gt;= @BASE_YEAR + '07'
                           AND LEFT(RETR_DATE, 6) &lt;= @BASE_YEAR + '09'
                         </if>
                         
						GROUP BY COMP_CODE, PERSON_NUMB
		            ) C ON C.COMP_CODE   = A.COMP_CODE
		               AND C.PERSON_NUMB = A.PERSON_NUMB             
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
         AND  (B.RETR_PENSION_KIND = 'DC' OR B.RETR_PENSION_KIND = 'BC')
           <if test="@foren.Ognl@isNotEmpty(CODE_NAME)">
           AND A.RETR_TYPE   = #{CODE_NAME}
           </if>
           
           <if test="rdoSelect == &quot;1&quot;">
              AND LEFT(A.RETR_DATE, 6) &gt;= @BASE_YEAR + '01'
              AND LEFT(A.RETR_DATE, 6) &lt;= @BASE_YEAR + '03'
           </if>
           
           <if test="rdoSelect == &quot;2&quot;">
              AND LEFT(A.RETR_DATE, 6) &gt;= @BASE_YEAR + '04'
              AND LEFT(A.RETR_DATE, 6) &lt;= @BASE_YEAR + '06'
           </if>
           
           <if test="rdoSelect == &quot;3&quot;">
              AND LEFT(A.RETR_DATE, 6) &gt;= @BASE_YEAR + '07'
              AND LEFT(A.RETR_DATE, 6) &lt;= @BASE_YEAR + '09'
           </if>
           
           <if test="rdoSelect == &quot;4&quot;">
              AND LEFT(A.RETR_DATE, 6) &gt;= @BASE_YEAR + '10'
              AND LEFT(A.RETR_DATE, 6) &lt;= @BASE_YEAR + '12'
           </if>
           

           
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND B.DIV_CODE    = #{DIV_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE1)">  
           AND B.DEPT_CODE  &gt;= #{DEPT_CODE1}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">  
           AND B.DEPT_CODE  &lt;= #{DEPT_CODE2}
           </if>
           <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
           AND A.PERSON_NUMB  = #{PERSON_NUMB}
           </if>
           <if test="RDO_TYPE == &quot;A&quot;">
           AND B.RETR_DATE = '00000000'        -- 재직구분 (재직)
           </if>
           <if test="RDO_TYPE == &quot;B&quot;">
           AND B.RETR_DATE != '00000000'       -- 재직구분 (퇴사)
           </if>
           
        ORDER BY B.DIV_CODE, B.DEPT_NAME,B.POST_CODE, B.NAME, A.PERSON_NUMB
      
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    
    END
    </select>
    
    
    <select id="hrt700skrServiceImpl.selectList3" parameterType="rMap" resultType="rMap">
    --hrt700skrServiceImpl.selectList3
    BEGIN
    
    	SET NOCOUNT ON
    	SET ARITHABORT ON
    
    	DECLARE @BASE_YEAR	NVARCHAR(04)
        
    		SET @BASE_YEAR = LEFT(#{FR_DATE}, 4)
        
        SELECT A.COMP_CODE
             , B.DIV_CODE                --사업장
             , B.DEPT_NAME               --부서
             , B.POST_CODE               --직위
             , B.NAME                    --사명
             , A.PERSON_NUMB             --사번
             , A.RETR_TYPE               --구분
             , A.SUPP_DATE             --지급일
        

             , MIN(A.RETR_DATE) AS FIRST_RETR_DATE             --정산시작일
			 , MAX(A.RETR_DATE) AS LAST_RETR_DATE              --정산종료일
			              
             , MAX(CONVERT(NVARCHAR, ISNULL(A.DUTY_YYYY, 0)) 
			 + '년 ' + CONVERT(NVARCHAR, ISNULL(A.LONG_MONTH, 0))
			 + '월 ' + CONVERT(NVARCHAR, ISNULL(A.LONG_DAY, 0)) + '일')  AS DUTY_YYYY               --근속기간
            
             
             , MAX(ISNULL(A.PAY_TOTAL_I, 0))      AS PAY_TOTAL_I       --급여총액
             , MAX(ISNULL(A.BONUS_TOTAL_I, 0))    AS BONUS_TOTAL_I     --상여총액
             , MAX(ISNULL(A.YEAR_TOTAL_I, 0))     AS YEAR_TOTAL_I      --년월차종액
        
             , SUM(ISNULL(A.ORI_RETR_ANNU_I, 0))  AS ORI_RETR_ANNU_I   --퇴직금
             
             , ISNULL(C.PRE_YEAR_RETR_ANNU_I, 0) AS PRE_YEAR_RETR_ANNU_I  --전년도퇴직금

             , ISNULL(C.PRE_YEAR_RETR_ANNU_I, 0) 
             - SUM(ISNULL(A.ORI_RETR_ANNU_I, 0))  AS PRE_YEAR_AMT    --전년도차이금액
              
        
          FROM      HRT500T A WITH(NOLOCK)
         INNER JOIN HUM100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                          AND B.PERSON_NUMB = A.PERSON_NUMB
										  
          LEFT JOIN (
						SELECT COMP_CODE
							 , PERSON_NUMB
							 , SUM(ORI_RETR_ANNU_I) AS PRE_YEAR_RETR_ANNU_I
						  FROM HRT500T WITH(NOLOCK)
						 WHERE COMP_CODE = #{S_COMP_CODE}
                           AND LEFT(RETR_DATE, 4) = @BASE_YEAR - 1
					  	 GROUP BY COMP_CODE, PERSON_NUMB
		            ) C ON C.COMP_CODE   = A.COMP_CODE
		               AND C.PERSON_NUMB = A.PERSON_NUMB    
					   					            
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND LEFT(A.RETR_DATE, 4) = @BASE_YEAR
           AND B.RETR_PENSION_KIND = 'DB'
           <if test="@foren.Ognl@isNotEmpty(CODE_NAME)">
           AND A.RETR_TYPE   = #{CODE_NAME}
           </if>
          
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND B.DIV_CODE    = #{DIV_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE1)">  
           AND B.DEPT_CODE  &gt;= #{DEPT_CODE1}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE2)">  
           AND B.DEPT_CODE  &lt;= #{DEPT_CODE2}
           </if>
           <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">  
           AND A.PERSON_NUMB  = #{PERSON_NUMB}
           </if>
           <if test="RDO_TYPE == &quot;A&quot;">
           AND B.RETR_DATE = '00000000'        -- 재직구분 (재직)
           </if>
           <if test="RDO_TYPE == &quot;B&quot;">
           AND B.RETR_DATE != '00000000'       -- 재직구분 (퇴사)
           </if>
       
        GROUP BY A.COMP_CODE, B.DIV_CODE, B.DEPT_NAME, B.POST_CODE
        , B.NAME, A.PERSON_NUMB, A.RETR_TYPE, C.PRE_YEAR_RETR_ANNU_I , A.SUPP_DATE
       
        ORDER BY B.DIV_CODE, B.DEPT_NAME,B.POST_CODE, B.NAME, A.PERSON_NUMB
      
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    
    END 
    </select>
    
    
    <select id="hrt700skrServiceImpl.selectSub1" parameterType="rMap" resultType="rMap">
        --hrt700skrServiceImpl.selectSub1
        SELECT uniLITE.fnGetUserDateComp(H.COMP_CODE, H.PAY_YYYYMM) AS PAY_YYYYMM
             , (SELECT WAGES_NAME                                  
                  FROM HBS300T                                     
                 WHERE CODE_TYPE = '1'                             
                   AND COMP_CODE = H.COMP_CODE                     
                   AND WAGES_CODE = H.WAGES_CODE) AS WAGES_NAME    
             , AMOUNT_I                                            
          FROM HRT300T H                                           
         WHERE H.COMP_CODE   = #{S_COMP_CODE}
         

         <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">                
           AND H.RETR_TYPE   = #{RETR_TYPE} 
         </if>    
         <if test="@foren.Ognl@isNotEmpty(RETR_DATE)">              
           AND H.RETR_DATE   = replace(substring(#{RETR_DATE},1,10), '-','')               
         </if>

           AND H.PERSON_NUMB = #{PERSON_NUMB}                 
         ORDER BY PAY_YYYYMM ASC 
    </select>
    
    <select id="hrt700skrServiceImpl.selectSub2" parameterType="rMap" resultType="rMap">
        --hrt700skrServiceImpl.selectSub2
        SELECT uniLITE.fnGetUserDateComp(A.COMP_CODE, A.BONUS_YYYYMM) AS BONUS_YYYYMM
             , (SELECT CODE_NAME                                   
                  FROM BSA100T                                     
                 WHERE MAIN_CODE = 'H032'                          
                   AND COMP_CODE = A.COMP_CODE                     
                   AND SUB_CODE  = A.BONUS_TYPE) AS BONUS_TYPE     
             , BONUS_I                                             
          FROM HRT400T A                                           
         WHERE COMP_CODE  = #{S_COMP_CODE} 
         <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">                
           AND A.RETR_TYPE   = #{RETR_TYPE} 
         </if>                    
          AND BONUS_TYPE  NOT IN ('1','E','F','G')                          
          AND PERSON_NUMB = #{PERSON_NUMB}
         ORDER BY BONUS_YYYYMM ASC    
    </select>
    
    <select id="hrt700skrServiceImpl.selectSub3" parameterType="rMap" resultType="rMap">
        --hrt700skrServiceImpl.selectSub3
        SELECT uniLITE.fnGetUserDateComp(A.COMP_CODE, A.BONUS_YYYYMM) AS BONUS_YYYYMM
             , (SELECT CODE_NAME                                   
                  FROM BSA100T                                     
                 WHERE MAIN_CODE = 'H032'                          
                   AND COMP_CODE = A.COMP_CODE                     
                   AND SUB_CODE = BONUS_TYPE) AS BONUS_TYPE        
             , BONUS_I                                             
          FROM HRT400T A                                           
         WHERE COMP_CODE = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">                
           AND A.RETR_TYPE   = #{RETR_TYPE} 
         </if>                       
           AND BONUS_TYPE IN ('E','F','G')                                             
           AND PERSON_NUMB = #{PERSON_NUMB}               
         ORDER BY BONUS_YYYYMM ASC        
    </select>
    
    <select id="hrt700skrServiceImpl.selectSub4" parameterType="rMap" resultType="rMap">
        --hrt700skrServiceImpl.selectSub4
        SELECT uniLITE.fnGetUserDateComp(A.COMP_CODE, A.PAY_YYYYMM) AS PAY_YYYYMM
             , B.WEL_NAME
             , A.GIVE_I
          FROM HRT350T A INNER JOIN HWE100T B
                            ON A.COMP_CODE = B.COMP_CODE 
                           AND A.APPLY_YYMM = B.APPLY_YYMM
                           AND A.WEL_LEVEL1 = B.WEL_LEVEL1
                           AND A.WEL_LEVEL2 = B.WEL_LEVEL2
                           AND A.WEL_CODE   = B.WEL_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
         <if test="@foren.Ognl@isNotEmpty(RETR_TYPE)">                
           AND A.RETR_TYPE   = #{RETR_TYPE} 
         </if>        
           AND A.PERSON_NUMB = #{PERSON_NUMB}   
         ORDER BY PAY_YYYYMM ASC   
    </select>
    
    
     <!-- Excel Upload-->
    <update id="hrt700skrServiceImpl.insertExcelUpload" parameterType="Map">
        /* hrt700skrServiceImpl.insertExcelUpload */
        /* temp Table에 insert */    
        INSERT INTO L_HRT500T
            (
               _EXCEL_JOBID 
             , _EXCEL_ROWNUM 
             , _EXCEL_HAS_ERROR 
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE
             , RETR_DATE
             , RETR_TYPE
             , PERSON_NUMB
             
             , RETR_RESN
             , JOIN_DATE
             , DUTY_YYYY
             , LONG_MONTH
             , LONG_DAY
             
             , PAY_TOTAL_I
             , BONUS_TOTAL_I
             , YEAR_TOTAL_I 
             , TOT_WAGES_I
             , AVG_WAGES_I
             , ORI_RETR_ANNU_I
             
             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID} 
             , #{_EXCEL_ROWNUM} 
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}
                  
             , #{S_COMP_CODE}
             , #{RETR_DATE}
             , #{RETR_TYPE}
             , #{PERSON_NUMB}
              
             , #{RETR_RESN}
             , #{JOIN_DATE}
             , #{DUTY_YYYY}
             , #{LONG_MONTH}
             , #{LONG_DAY}
             
             , #{PAY_TOTAL_I}
             , #{BONUS_TOTAL_I}
             , #{YEAR_TOTAL_I}
             , #{TOT_WAGES_I}
             , #{AVG_WAGES_I}
             , #{ORI_RETR_ANNU_I}
             
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    
    
    <select id="hrt700skrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /* hrt700skrServiceImpl.selectExcelUploadSheet1 */
        SELECT A._EXCEL_JOBID
             , A._EXCEL_ROWNUM
             , A._EXCEL_HAS_ERROR      
             , A._EXCEL_ERROR_MSG
                     
             , A.COMP_CODE
             , B.DIV_CODE                --사업장
             , B.DEPT_NAME               --부서
             , B.POST_CODE               --직위
             , B.NAME                    --사명
             , A.PERSON_NUMB             --사번
             , A.RETR_TYPE               --구분
             , B.JOIN_DATE AS ENTR_DATE  --입사일
             , A.JOIN_DATE               --정산시작일
             , A.RETR_DATE               --정산일
        
             , ISNULL(A.DUTY_YYYY, 0)   AS DUTY_YYYY               --근속기간
             , ISNULL(A.LONG_MONTH, 0)  AS LONG_MONTH
             , ISNULL(A.LONG_DAY, 0)    AS LONG_DAY
             , A.PAY_TOTAL_I             --급여총액
             , A.BONUS_TOTAL_I           --상여총액
             , A.YEAR_TOTAL_I            --년월차종액
             , A.TOT_WAGES_I             --합계
             , A.AVG_WAGES_I             --평균임금
             , A.ORI_RETR_ANNU_I         --퇴직금
                                 
                     
             , A.INSERT_DB_USER
             , A.INSERT_DB_TIME
        
          FROM       L_HRT500T A WITH(NOLOCK)
          LEFT JOIN  HUM100T B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                            AND B.PERSON_NUMB = A.PERSON_NUMB
       

         WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
         ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    
    
    
    <!-- 임시 테이블에 insert된 데이터 조회 --> 
    <select id="hrt700skrServiceImpl.getData" parameterType="Map" resultType="rMap">
        SELECT  * FROM L_HRT500T WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
    

    <!-- 업로드 된 데이터의 유효성 체크 1 -->    
    <select id="hrt700skrServiceImpl.checkPersonNum" parameterType="Map" resultType="String">
        /* hrt700skrServiceImpl.checkPersonNum */
        DECLARE @CHECK_DATA NVARCHAR(01)
            SET @CHECK_DATA = 'N'
            
        IF EXISTS (
                       
                    SELECT TOP 1 1 
                      FROM HUM100T
                     WHERE COMP_CODE   = #{COMP_CODE}
                       AND PERSON_NUMB = #{PERSON_NUMB}
                  )
            BEGIN 
                SET @CHECK_DATA = 'Y'
            END
            
        SELECT @CHECK_DATA AS CHECK_DATA
    </select>
    
    <!-- 업로드 된 데이터의 유효성 체크 2 -->    
    <select id="hrt700skrServiceImpl.checkRetrDate" parameterType="Map" resultType="String">
        /* hrt700skrServiceImpl.checkRetrDate */
        DECLARE @CHECK_DATA NVARCHAR(01)
            SET @CHECK_DATA = 'N'
            
        IF EXISTS (
                       
                    SELECT TOP 1 1 
                      FROM HRT500T
                     WHERE COMP_CODE   = #{COMP_CODE}
                       AND PERSON_NUMB = #{PERSON_NUMB}
					   AND RETR_DATE   = #{RETR_DATE}
					   AND RETR_TYPE   = #{RETR_TYPE}
                  )
            BEGIN 
                SET @CHECK_DATA = 'Y'
            END
            
        SELECT @CHECK_DATA AS CHECK_DATA
    </select>
    
    <!-- 에러메세지 insert -->   
    <update id="hrt700skrServiceImpl.insertErrorMsg">
        /* hrt700skrServiceImpl.insertErrorMsg */
        UPDATE L_HRT500T
           SET _EXCEL_ERROR_MSG = #{MSG}
             , _EXCEL_HAS_ERROR = 'Y'
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
           AND _EXCEL_ROWNUM    = #{ROWNUM}
    </update>  
    
    
   <insert id="hrt700skrServiceImpl.insert" parameterType="Map">
        /* hrt700skrServiceImpl.insert */
        INSERT INTO HRT500T
        (
         COMP_CODE
        ,RETR_DATE
        ,RETR_TYPE
        ,PERSON_NUMB
        ,RETR_RESN
        
        ,JOIN_DATE
        ,DUTY_YYYY
        ,LONG_MONTH
        ,LONG_DAY
        
        ,PAY_TOTAL_I
        ,BONUS_TOTAL_I
        ,YEAR_TOTAL_I
        ,TOT_WAGES_I
        ,AVG_WAGES_I
        ,ORI_RETR_ANNU_I
        
        ,INSERT_DB_USER
        ,INSERT_DB_TIME
        ,UPDATE_DB_USER
        ,UPDATE_DB_TIME
        
        ) VALUES
        (
          #{S_COMP_CODE}
         , #{RETR_DATE}
         , 'S'
         , #{PERSON_NUMB}
         , '6'
        
         , #{JOIN_DATE}
         , #{DUTY_YYYY}
         , #{LONG_MONTH}
         , #{LONG_DAY}
        
        
         , #{PAY_TOTAL_I}
         , #{BONUS_TOTAL_I}
         , #{YEAR_TOTAL_I}
         , #{TOT_WAGES_I}
         , #{AVG_WAGES_I}
         , #{ORI_RETR_ANNU_I}
         
         , #{S_USER_ID}
         , GETDATE()
         , #{S_USER_ID}
         , GETDATE()
        )
    </insert>
    
        <!-- 업로드 된 데이터의 유효성 체크 1 -->    
    <select id="hrt700skrServiceImpl.selectExists" parameterType="Map" resultType="rMap">
        /* hrt700skrServiceImpl.selectExists */
        SELECT TOP 1 COMP_CODE
          FROM HRT500T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND RETR_DATE = #{RETR_DATE}
           AND RETR_TYPE = 'S'
    </select>
    
        
</mapper>