<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hbs020ukrServiceImpl">

        <!--
        #{S_COMP_CODE}
        #{S_LANG_CODE}
        -->
    <select id="hbs020ukrServiceImpl.selectList1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1 */
        SELECT COMPANY_CODE
        , MED_PRSN_RATE
        , MED_COMP_RATE
        , ANUT_PRSN_RATE1
        , ANUT_COMP_RATE1
        , EMPLOY_RATE
        , RETR_DUTY_RULE
        , BONUS_DUTY_RULE
        , MONTH_CALCU_YN
        , MENS_CALCU_YN
        , EARLY_PLAN_YN
        , RETR_CALCU_RULE
        , YEAR_STD_FR_YYYY
        , YEAR_STD_FR_YYYY  AS YEAR_STD_FR_YYYY_CO
        , YEAR_STD_FR_YYYY_2    AS YEAR_STD_FR_YYYY_2
        , YEAR_STD_FR_MM
        , YEAR_STD_FR_MM    AS  YEAR_STD_FR_MM_CO
        , YEAR_STD_FR_MM_2
        , YEAR_STD_FR_DD
        , YEAR_STD_TO_YYYY
        , YEAR_STD_TO_YYYY  AS YEAR_STD_TO_YYYY_CO
        , YEAR_STD_TO_YYYY_2    AS YEAR_STD_TO_YYYY_2
        , YEAR_STD_TO_MM
        , YEAR_STD_TO_MM    AS  YEAR_STD_TO_MM_CO
        , YEAR_STD_TO_MM_2
        , YEAR_STD_TO_DD
        , YEAR_USE_FR_YYYY
        , YEAR_USE_FR_MM
        , YEAR_USE_FR_DD
        , YEAR_USE_TO_YYYY
        , YEAR_USE_TO_MM
        , YEAR_USE_TO_DD
        , DUTY_INPUT_RULE
        , WEEK_CALCU_YN
        , DAY_WORK_TIME
        , LONG_WORK_DUTY_RULE
        , YEAR_PROV_YYYY
        , BUSI_SHARE_RATE
        , EXTEND_WORK_YN
        , FIVE_APPLY_DATE
        , TAX_CALCU_RULE
        , BONUS_RETRAVG_FLAG
        , WORKER_COMPEN_RATE
        , HIR_CALCU_RULE
        , INC_CALCU_RULE
        --추가
        , LCI_CALCU_RULE
        , MED_CALCU_RULE
        , ANUT_CALCU_RULE
        , MED_INSUR_CALCU_RULE
        , YEARENDTAX_CALCU_RULE
        , YEAR_CAL_TYPE
        , BUSI_SHARE_RATE2
        , IWALL_YN
        , DAY_LABOR_RULE
        , YEARENDTAX_INSTALLMENTS_AMT
     FROM HBS400T
    WHERE COMP_CODE    = #{S_COMP_CODE}
      AND COMPANY_CODE = '1'
    </select>
    <select id="hbs020ukrServiceImpl.selectList1_h241" parameterType="rMap" resultType="rMap">
	    SELECT REF_CODE1 AS RETR_YEAR_ALLOWANCE
     	  FROM BSA100T WITH (NOLOCK) 
     	 WHERE COMP_CODE = #{S_COMP_CODE}
     	   AND MAIN_CODE ='H241'
     	   AND SUB_CODE  ='1'
    </select>
    <select id="hbs020ukrServiceImpl.selectList1_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1_1 */
        SELECT MAIN_CODE
              , SUB_CODE
              , CODE_NAME
              , CODE_NAME_EN
              , CODE_NAME_CN
              , CODE_NAME_JP
              , CAST(SYSTEM_CODE_YN AS BIT) SYSTEM_CODE_YN
              , REF_CODE1
              , REF_CODE2
              , REF_CODE3
              , REF_CODE4
              , REF_CODE5
              , SUB_LENGTH
              , USE_YN
              , SORT_SEQ
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , COMP_CODE
           FROM BSA100T
          WHERE COMP_CODE = #{S_COMP_CODE}
            AND MAIN_CODE = 'H031'
            AND SUB_CODE &lt;&gt; '$'
          ORDER BY MAIN_CODE, SUB_CODE
    </select>

    <update id="hbs020ukrServiceImpl.updateList1_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1_1 */
    UPDATE BSA100T
       SET REF_CODE1 = #{REF_CODE1}
          ,REF_CODE2 = #{REF_CODE2}
          ,SUB_LENGTH = #{SUB_LENGTH}
          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = GETDATE()
     WHERE COMP_CODE = 'MASTER'
        AND MAIN_CODE = 'H031'
        AND SUB_CODE &lt;&gt; '$'
        AND SUB_CODE = #{SUB_CODE}
    </update>

    <select id="hbs020ukrServiceImpl.getSUB_LENGTH" parameterType="String" resultType="int">
    /* hbs020ukrServiceImpl.getSUB_LENGTH */
        SELECT SUB_LENGTH
           FROM BSA100T
          WHERE COMP_CODE = #{comp_code}
            AND MAIN_CODE = 'H031'
            AND SUB_CODE  = '$'
    </select>

    <select id="hbs020ukrServiceImpl.selectList1_2" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList1_2 */
        SELECT PAY_CODE
             , PAY_DD
             , AMASS_NUM
             , SAVE_MONTH_NUM
             , ABSENCE_CNT
             , SUPP_YEAR_NUM_B
             , SUPP_YEAR_NUM_A
             , WAGES_TYPE
             , CAST(ISNULL(FIVE_DAY_CHECK,0) AS BIT) AS FIVE_DAY_CHECK
             , CAST(ISNULL(JOIN_MID_CHECK,0) AS BIT) AS JOIN_MID_CHECK
          FROM HBS340T
         WHERE COMP_CODE = #{S_COMP_CODE}
    </select>

    <update id="hbs020ukrServiceImpl.updateList1_2" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1_2 */
    UPDATE HBS340T
       SET WAGES_TYPE = #{WAGES_TYPE}
          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = GETDATE()
     WHERE COMP_CODE = #{S_COMP_CODE}
        AND PAY_CODE = #{PAY_CODE}
    </update>
	<update id="hbs020ukrServiceImpl.updateList1_H241" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1_H241 */
    UPDATE BSA100T
       SET REF_CODE1 = #{RETR_YEAR_ALLOWANCE}
          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = GETDATE()
     WHERE COMP_CODE = #{S_COMP_CODE}
        AND MAIN_CODE = 'H241'
        AND SUB_CODE = '1'
    </update>
    <update id="hbs020ukrServiceImpl.updateList1" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList1 */
        UPDATE HBS400T
           SET HIR_CALCU_RULE = #{HIR_CALCU_RULE}
              ,INC_CALCU_RULE = #{INC_CALCU_RULE}
              ,MED_PRSN_RATE = #{MED_PRSN_RATE}
              ,MED_COMP_RATE = #{MED_COMP_RATE}
              ,ANUT_PRSN_RATE1 = #{ANUT_PRSN_RATE1}
              ,ANUT_COMP_RATE1 = #{ANUT_COMP_RATE1}
              ,EMPLOY_RATE = #{EMPLOY_RATE}
              ,BUSI_SHARE_RATE = #{BUSI_SHARE_RATE}
              ,WORKER_COMPEN_RATE = #{WORKER_COMPEN_RATE}
              ,LONG_WORK_DUTY_RULE = #{LONG_WORK_DUTY_RULE}
              ,BONUS_DUTY_RULE = #{BONUS_DUTY_RULE}
              ,RETR_DUTY_RULE = #{RETR_DUTY_RULE}
              ,MENS_CALCU_YN = #{MENS_CALCU_YN}
              ,WEEK_CALCU_YN = #{WEEK_CALCU_YN}
              ,EARLY_PLAN_YN = #{EARLY_PLAN_YN}
              ,DUTY_INPUT_RULE = #{DUTY_INPUT_RULE}
              ,DAY_WORK_TIME = #{DAY_WORK_TIME}
              ,RETR_CALCU_RULE = #{RETR_CALCU_RULE}

              ,YEAR_CAL_TYPE = #{YEAR_TYPE}

              ,YEAR_STD_FR_YYYY = #{YEAR_STD_FR_YYYY}
              ,YEAR_STD_FR_YYYY_2 =#{YEAR_STD_FR_YYYY_2}
              <if test="YEAR_TYPE == &quot;1&quot;">    --회기말 기준
              ,YEAR_STD_FR_MM = #{YEAR_STD_FR_MM}
              </if>
              <if test="YEAR_TYPE == &quot;3&quot;">    --상하반기 기준
              ,YEAR_STD_FR_MM = #{YEAR_STD_FR_MM_CO}
              ,YEAR_STD_FR_MM_2 = #{YEAR_STD_FR_MM_2}
              </if>
              ,YEAR_STD_FR_DD = #{YEAR_STD_FR_DD}
              ,YEAR_STD_TO_YYYY = #{YEAR_STD_TO_YYYY}
              ,YEAR_STD_TO_YYYY_2 =#{YEAR_STD_TO_YYYY_2}
              <if test="YEAR_TYPE == &quot;1&quot;">    --회기말 기준
              ,YEAR_STD_TO_MM = #{YEAR_STD_TO_MM}
              </if>
              <if test="YEAR_TYPE == &quot;3&quot;">    --상하반기 기준
              ,YEAR_STD_TO_MM = #{YEAR_STD_TO_MM_CO}
              ,YEAR_STD_TO_MM_2 = #{YEAR_STD_TO_MM_2}
              </if>
              ,YEAR_STD_TO_DD = #{YEAR_STD_TO_DD}
              ,YEAR_USE_FR_YYYY = #{YEAR_USE_FR_YYYY}
              ,YEAR_USE_FR_MM = #{YEAR_USE_FR_MM}
              ,YEAR_USE_FR_DD = #{YEAR_USE_FR_DD}
              ,YEAR_USE_TO_YYYY = #{YEAR_USE_TO_YYYY}
              ,YEAR_USE_TO_MM = #{YEAR_USE_TO_MM}
              ,YEAR_USE_TO_DD = #{YEAR_USE_TO_DD}
              ,YEAR_PROV_YYYY = #{YEAR_PROV_YYYY}
              ,EXTEND_WORK_YN = #{EXTEND_WORK_YN}
              ,FIVE_APPLY_DATE = #{FIVE_APPLY_DATE}
              ,BONUS_RETRAVG_FLAG = #{BONUS_RETRAVG_FLAG}
              ,LCI_CALCU_RULE = #{LCI_CALCU_RULE}
              ,MED_CALCU_RULE = #{MED_CALCU_RULE}
              ,ANUT_CALCU_RULE = #{ANUT_CALCU_RULE}
              ,MED_INSUR_CALCU_RULE = #{MED_INSUR_CALCU_RULE}
              ,YEARENDTAX_CALCU_RULE = #{YEARENDTAX_CALCU_RULE}
              ,BUSI_SHARE_RATE2 = #{BUSI_SHARE_RATE2}
              ,IWALL_YN         = #{IWALL_YN}
              ,DAY_LABOR_RULE   = #{DAY_LABOR_RULE}
              ,YEARENDTAX_INSTALLMENTS_AMT = #{YEARENDTAX_INSTALLMENTS_AMT}  -- 연말정산분납신청 가능금액
              ,UPDATE_DB_USER = #{S_USER_ID}
              ,UPDATE_DB_TIME = GETDATE()
         WHERE COMPANY_CODE = '1'
            AND COMP_CODE = #{S_COMP_CODE}
    </update>
    <select id="hbs020ukrServiceImpl.selectList5" parameterType="rMap" resultType="Map">
        SELECT    CAL_DATE  as startDate
                , CAL_DATE  as endDate
                , REMARK as Title
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , CASE WHEN ISNULL(REMARK, '')= '' THEN CASE WHEN HOLY_TYPE != '2' THEN '-' ELSE '' END ELSE  REMARK END AS  REMARK
                , DIV_CODE
                , COMP_CODE
                , CASE WHEN  HOLY_TYPE = '0'
                        THEN 'holiday-national'
                    WHEN HOLY_TYPE = '1'
                        THEN 'holiday-half'
                    WHEN HOLY_TYPE = '2'
                        THEN 'holiday-work'
                    WHEN HOLY_TYPE = '3'
                        THEN 'holiday-closed'
                    ELSE ''
                    END AS calendarId

             FROM HBS600T   WITH (NOLOCK)
            WHERE COMP_CODE = #{S_COMP_CODE}
              AND DIV_CODE  = #{DIV_CODE}
              AND CAL_DATE BETWEEN #{endDate} + '01' AND #{endDate}+'31'
            ORDER BY CAL_DATE
    </select>
    <update id="hbs020ukrServiceImpl.insertCalendar5" parameterType="rMap">
        DECLARE @sDate DATETIME,
                @sYYYY NVARCHAR(4)

        SET @sYYYY = #{CREATE_YYYY}
        SET @sDate = CONVERT(DATE, @sYYYY+'0101', 112)

        CREATE TABLE #tmp_Cal (CAL_DATE NVARCHAR(8), IDAY INT, WEEK_DAY INT, CAL_NO INT , HOLY_TYPE INT)

        WHILE (DATEDIFF(DAY, @sDate , CONVERT(DATE, @sYYYY+'1231', 112)) >= 0 )
        BEGIN
            INSERT #tmp_Cal (
                CAL_DATE
                , IDAY
                , WEEK_DAY
                , CAL_NO
                , HOLY_TYPE
            ) VALUES (
                  CONVERT(NVARCHAR(8), @sDate,112)
                , DAY(@sDate)
                , DATEPART(WEEKDAY, @sdate )
                , DATEPART(WEEK,@sDate)
                , CASE  WHEN DATEPART(WEEKDAY, @sdate ) = 7 THEN CASE WHEN #{SATURDAY_HOLIDAY} = '1' THEN 3 ELSE 1  END
                        WHEN datepart(WEEKDAY, @sdate ) = 1 THEN 0 ELSE 2 END
            )

            SET @sDate = DATEADD(DAY,1,@sDate)
        END

        DELETE
         FROM HBS600T
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE  =#{DIV_CODE}
          AND CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'


        INSERT INTO HBS600T
                ( COMP_CODE
                , DIV_CODE
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , UPDATE_DB_USER
                , UPDATE_DB_TIME)
         SELECT #{S_COMP_CODE}
                , #{DIV_CODE}
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , #{S_USER_ID}
                , GETDATE()
           FROM #tmp_Cal

         DROP TABLE #tmp_Cal

    </update>
    <update id="hbs020ukrServiceImpl.insertCopyCalendar5" parameterType="rMap">
        DECLARE @sDate DATETIME,
                @sYYYY NVARCHAR(4)

        SET @sYYYY = #{CREATE_YYYY}
        SET @sDate = CONVERT(DATE, @sYYYY+'0101', 112)

        DELETE
         FROM HBS600T
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE  = #{DIV_CODE}
          AND CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'


        INSERT INTO HBS600T
                ( COMP_CODE
                , DIV_CODE
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , UPDATE_DB_USER
                , UPDATE_DB_TIME)
         SELECT #{S_COMP_CODE}
                , #{DIV_CODE}
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , #{S_USER_ID}
                , GETDATE()
           FROM HBS600T
          WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE  =#{COPY_DIV_CODE}
          AND CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'

    </update>
    <update id="hbs020ukrServiceImpl.updateCalendar5" parameterType="rMap">
        UPDATE HBS600T
           SET
                REMARK = #{REMARK}
                , HOLY_TYPE = #{HOLY_TYPE}
                , UPDATE_DB_USER = #{S_USER_ID}
                , UPDATE_DB_TIME = GETDATE()
          WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE  =#{DIV_CODE}
          AND CAL_DATE  =#{CAL_DATE}
    </update>
    <delete id="hbs020ukrServiceImpl.deleteCalendar5" parameterType="rMap">
        --UHat03Krv.CHbs600Ukr SetHbs600[fnHbs600nD] DELETE HBS600T
        DECLARE @sDate DATETIME,
                @sYYYY NVARCHAR(4)

        SET @sYYYY = #{CREATE_YYYY}
        SET @sDate = CONVERT(DATE, @sYYYY+'0101', 112)
          
        DELETE                                     
          FROM HBS600T                             
         WHERE COMP_CODE = #{S_COMP_CODE}  
           AND DIV_CODE  = #{DIV_CODE}      
           AND CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'
    </delete>
    <update id="hbs020ukrServiceImpl.insertAllCalendar5" parameterType="rMap">
        DECLARE @sDate DATETIME,
                @sYYYY NVARCHAR(4)

        SET @sYYYY = #{CREATE_YYYY}
        SET @sDate = CONVERT(DATE, @sYYYY+'0101', 112)

        DELETE
         FROM HBS600T
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND DIV_CODE != #{COPY_DIV_CODE}
          AND DIV_CODE != ''
          AND CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'


        INSERT INTO HBS600T
                ( COMP_CODE
                , DIV_CODE
                , CAL_DATE
                , CAL_NO
                , WEEK_DAY
                , HOLY_TYPE
                , UPDATE_DB_USER
                , UPDATE_DB_TIME)
         SELECT #{S_COMP_CODE}
                , #{DIV_CODE}
                , H.CAL_DATE
                , H.CAL_NO
                , H.WEEK_DAY
                , H.HOLY_TYPE
                , #{S_USER_ID}
                , GETDATE()
           FROM HBS600T H
           LEFT JOIN (
                SELECT COMP_CODE, DIV_CODE
                  FROM BOR120T
                WHERE COMP_CODE = #{S_COMP_CODE}
                  AND DIV_CODE  != #{COPY_DIV_CODE}
            ) K   ON H.COMP_CODE = K.COMP_CODE
          WHERE H.COMP_CODE = #{S_COMP_CODE}
          AND H.DIV_CODE  = #{COPY_DIV_CODE}
          AND H.CAL_DATE  BETWEEN @sYYYY + '0101' AND @sYYYY + '1231'

    </update>
    <select id="hbs020ukrServiceImpl.selectList7" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList7 */
        SELECT WORK_TEAM
            , HOLY_TYPE
            , DUTY_FR_D
            , DUTY_CODE
            , (CASE WHEN LEN(DUTY_FR_H) = 1
                         THEN '0' + CONVERT(NVARCHAR,(DUTY_FR_H))
                         ELSE CONVERT(NVARCHAR,(DUTY_FR_H))
                END) AS DUTY_FR_H
            , (CASE WHEN LEN(DUTY_FR_M) = 1
                         THEN '0' + CONVERT(NVARCHAR,(DUTY_FR_M))
                         ELSE CONVERT(NVARCHAR,(DUTY_FR_M))
                END) AS DUTY_FR_M
            , DUTY_TO_D
            , (CASE WHEN LEN(DUTY_TO_H) = 1
                         THEN '0' + CONVERT(NVARCHAR,(DUTY_TO_H))
                         ELSE CONVERT(NVARCHAR,(DUTY_TO_H))
                END) AS DUTY_TO_H
            , (CASE WHEN LEN(DUTY_TO_M) = 1
                         THEN '0' + CONVERT(NVARCHAR,(DUTY_TO_M))
                         ELSE CONVERT(NVARCHAR,(DUTY_TO_M))
                END) AS DUTY_TO_M
            , REST_FR_D_01
            , (CASE WHEN LEN(REST_FR_H_01) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_01))
                         ELSE CONVERT(NVARCHAR,(REST_FR_H_01))
                END) AS REST_FR_H_01
            , (CASE WHEN LEN(REST_FR_M_01) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_01))
                         ELSE CONVERT(NVARCHAR,(REST_FR_M_01))
                END) AS REST_FR_M_01
            , REST_TO_D_01
            , (CASE WHEN LEN(REST_TO_H_01) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_01))
                         ELSE CONVERT(NVARCHAR,(REST_TO_H_01))
                END) AS REST_TO_H_01
            , (CASE WHEN LEN(REST_TO_M_01) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_01))
                         ELSE CONVERT(NVARCHAR,(REST_TO_M_01))
                END) AS REST_TO_M_01
            , REST_FR_D_02
            , (CASE WHEN LEN(REST_FR_H_02) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_02))
                         ELSE CONVERT(NVARCHAR,(REST_FR_H_02))
                END) AS REST_FR_H_02
            , (CASE WHEN LEN(REST_FR_M_02) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_02))
                         ELSE CONVERT(NVARCHAR,(REST_FR_M_02))
                END) AS REST_FR_M_02
            , REST_TO_D_02
            , (CASE WHEN LEN(REST_TO_H_02) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_02))
                         ELSE CONVERT(NVARCHAR,(REST_TO_H_02))
                END) AS REST_TO_H_02
            , (CASE WHEN LEN(REST_TO_M_02) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_02))
                         ELSE CONVERT(NVARCHAR,(REST_TO_M_02))
                END) AS REST_TO_M_02
            , REST_FR_D_03
            , (CASE WHEN LEN(REST_FR_H_03) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_03))
                         ELSE CONVERT(NVARCHAR,(REST_FR_H_03))
                END) AS REST_FR_H_03
            , (CASE WHEN LEN(REST_FR_M_03) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_03))
                         ELSE CONVERT(NVARCHAR,(REST_FR_M_03))
                END) AS REST_FR_M_03
            , REST_TO_D_03
            , (CASE WHEN LEN(REST_TO_H_03) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_03))
                         ELSE CONVERT(NVARCHAR,(REST_TO_H_03))
                END) AS REST_TO_H_03
            , (CASE WHEN LEN(REST_TO_M_03) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_03))
                         ELSE CONVERT(NVARCHAR,(REST_TO_M_03))
                END) AS REST_TO_M_03
            , REST_FR_D_04
            , (CASE WHEN LEN(REST_FR_H_04) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_04))
                         ELSE CONVERT(NVARCHAR,(REST_FR_H_04))
                END) AS REST_FR_H_04
            , (CASE WHEN LEN(REST_FR_M_04) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_04))
                         ELSE CONVERT(NVARCHAR,(REST_FR_M_04))
                END) AS REST_FR_M_04
            , REST_TO_D_04
            , (CASE WHEN LEN(REST_TO_H_04) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_04))
                         ELSE CONVERT(NVARCHAR,(REST_TO_H_04))
                END) AS REST_TO_H_04
            , (CASE WHEN LEN(REST_TO_M_04) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_04))
                         ELSE CONVERT(NVARCHAR,(REST_TO_M_04))
                END) AS REST_TO_M_04
                
            , REAL_DUTY_FR_D
            , (CASE WHEN LEN(REAL_DUTY_FR_H) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REAL_DUTY_FR_H))
                         ELSE CONVERT(NVARCHAR,(REAL_DUTY_FR_H))
                END) AS REAL_DUTY_FR_H
            , (CASE WHEN LEN(REAL_DUTY_FR_M) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REAL_DUTY_FR_M))
                         ELSE CONVERT(NVARCHAR,(REAL_DUTY_FR_M))
                END) AS REAL_DUTY_FR_M
            , REAL_DUTY_TO_D
            , (CASE WHEN LEN(REAL_DUTY_TO_H) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REAL_DUTY_TO_H))
                         ELSE CONVERT(NVARCHAR,(REAL_DUTY_TO_H))
                END) AS REAL_DUTY_TO_H
            , (CASE WHEN LEN(REAL_DUTY_TO_M) = 1
                         THEN '0' + CONVERT(NVARCHAR,(REAL_DUTY_TO_M))
                         ELSE CONVERT(NVARCHAR,(REAL_DUTY_TO_M))
                END) AS REAL_DUTY_TO_M     
                
                
         FROM HAT100T
        WHERE COMP_CODE = #{S_COMP_CODE}
    </select>

    <insert id="hbs020ukrServiceImpl.insertList7" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList7 */
        INSERT INTO HAT100T (COMP_CODE, WORK_TEAM, HOLY_TYPE, DUTY_FR_D, DUTY_FR_H, DUTY_FR_M, DUTY_TO_D, DUTY_TO_H, DUTY_TO_M,
                        REST_FR_D_01, REST_FR_H_01, REST_FR_M_01, REST_TO_D_01, REST_TO_H_01, REST_TO_M_01,
                        REST_FR_D_02, REST_FR_H_02, REST_FR_M_02, REST_TO_D_02, REST_TO_H_02, REST_TO_M_02,
                        REST_FR_D_03, REST_FR_H_03, REST_FR_M_03, REST_TO_D_03, REST_TO_H_03, REST_TO_M_03,
                        REST_FR_D_04, REST_FR_H_04, REST_FR_M_04, REST_TO_D_04, REST_TO_H_04, REST_TO_M_04,
                        REAL_DUTY_FR_D, REAL_DUTY_FR_H, REAL_DUTY_FR_M, REAL_DUTY_TO_D, REAL_DUTY_TO_H, REAL_DUTY_TO_M,DUTY_CODE,
                        UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
       VALUES(#{S_COMP_CODE}, #{WORK_TEAM}, #{HOLY_TYPE}, #{DUTY_FR_D}, #{DUTY_FR_H}, #{DUTY_FR_M}, #{DUTY_TO_D}, #{DUTY_TO_H}, #{DUTY_TO_M},
                            #{REST_FR_D_01},   CASE WHEN ISNULL(#{REST_FR_H_01}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_01}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_FR_M_01}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_01}   AS NUMERIC(2,0)) END, 
                            #{REST_TO_D_01},   CASE WHEN ISNULL(#{REST_TO_H_01}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_01}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_TO_M_01}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_01}   AS NUMERIC(2,0)) END,
                            #{REST_FR_D_02},   CASE WHEN ISNULL(#{REST_FR_H_02}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_02}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_FR_M_02}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_02}   AS NUMERIC(2,0)) END, 
                            #{REST_TO_D_02},   CASE WHEN ISNULL(#{REST_TO_H_02}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_02}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_TO_M_02}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_02}   AS NUMERIC(2,0)) END,
                            #{REST_FR_D_03},   CASE WHEN ISNULL(#{REST_FR_H_03}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_03}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_FR_M_03}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_03}   AS NUMERIC(2,0)) END, 
                            #{REST_TO_D_03},   CASE WHEN ISNULL(#{REST_TO_H_03}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_03}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_TO_M_03}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_03}   AS NUMERIC(2,0)) END,
                            #{REST_FR_D_04},   CASE WHEN ISNULL(#{REST_FR_H_04}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_04}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_FR_M_04}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_04}   AS NUMERIC(2,0)) END, 
                            #{REST_TO_D_04},   CASE WHEN ISNULL(#{REST_TO_H_04}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_04}   AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REST_TO_M_04}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_04}   AS NUMERIC(2,0)) END,
                            #{REAL_DUTY_FR_D}, CASE WHEN ISNULL(#{REAL_DUTY_FR_H},'')='' THEN 0 ELSE CAST(#{REAL_DUTY_FR_H} AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REAL_DUTY_FR_M}  ,'')='' THEN 0 ELSE CAST(#{REAL_DUTY_FR_M} AS NUMERIC(2,0)) END, 
                            #{REAL_DUTY_TO_D}, CASE WHEN ISNULL(#{REAL_DUTY_TO_H},'')='' THEN 0 ELSE CAST(#{REAL_DUTY_TO_H} AS NUMERIC(2,0)) END, CASE WHEN ISNULL(#{REAL_DUTY_TO_M}  ,'')='' THEN 0 ELSE CAST(#{REAL_DUTY_TO_M} AS NUMERIC(2,0)) END,
                            #{DUTY_CODE},
                            #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE())
    </insert>

    <update id="hbs020ukrServiceImpl.updateList7" parameterType="Map">
    /* hbs020ukrServiceImpl.updateList7 */
    UPDATE HAT100T
           SET  DUTY_FR_D = #{DUTY_FR_D}, DUTY_FR_H = #{DUTY_FR_H}, DUTY_FR_M = #{DUTY_FR_M},
                DUTY_TO_D = #{DUTY_TO_D}, DUTY_TO_H = #{DUTY_TO_H}, DUTY_TO_M =  #{DUTY_TO_M},
                REST_FR_D_01   = #{REST_FR_D_01}  , REST_FR_H_01   = CASE WHEN ISNULL(#{REST_FR_H_01}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_01}      AS NUMERIC(2,0)) END , REST_FR_M_01   = CASE WHEN ISNULL(#{REST_FR_M_01}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_01}      AS NUMERIC(2,0)) END ,
                REST_TO_D_01   = #{REST_TO_D_01}  , REST_TO_H_01   = CASE WHEN ISNULL(#{REST_TO_H_01}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_01}      AS NUMERIC(2,0)) END , REST_TO_M_01   = CASE WHEN ISNULL(#{REST_TO_M_01}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_01}      AS NUMERIC(2,0)) END ,
                REST_FR_D_02   = #{REST_FR_D_02}  , REST_FR_H_02   = CASE WHEN ISNULL(#{REST_FR_H_02}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_02}      AS NUMERIC(2,0)) END , REST_FR_M_02   = CASE WHEN ISNULL(#{REST_FR_M_02}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_02}      AS NUMERIC(2,0)) END ,
                REST_TO_D_02   = #{REST_TO_D_02}  , REST_TO_H_02   = CASE WHEN ISNULL(#{REST_TO_H_02}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_02}      AS NUMERIC(2,0)) END , REST_TO_M_02   = CASE WHEN ISNULL(#{REST_TO_M_02}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_02}      AS NUMERIC(2,0)) END ,
                REST_FR_D_03   = #{REST_FR_D_03}  , REST_FR_H_03   = CASE WHEN ISNULL(#{REST_FR_H_03}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_03}      AS NUMERIC(2,0)) END , REST_FR_M_03   = CASE WHEN ISNULL(#{REST_FR_M_03}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_03}      AS NUMERIC(2,0)) END ,
                REST_TO_D_03   = #{REST_TO_D_03}  , REST_TO_H_03   = CASE WHEN ISNULL(#{REST_TO_H_03}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_03}      AS NUMERIC(2,0)) END , REST_TO_M_03   = CASE WHEN ISNULL(#{REST_TO_M_03}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_03}      AS NUMERIC(2,0)) END ,
                REST_FR_D_04   = #{REST_FR_D_04}  , REST_FR_H_04   = CASE WHEN ISNULL(#{REST_FR_H_04}  ,'')='' THEN 0 ELSE CAST(#{REST_FR_H_04}      AS NUMERIC(2,0)) END , REST_FR_M_04   = CASE WHEN ISNULL(#{REST_FR_M_04}    ,'')='' THEN 0 ELSE CAST(#{REST_FR_M_04}      AS NUMERIC(2,0)) END ,
                REST_TO_D_04   = #{REST_TO_D_04}  , REST_TO_H_04   = CASE WHEN ISNULL(#{REST_TO_H_04}  ,'')='' THEN 0 ELSE CAST(#{REST_TO_H_04}      AS NUMERIC(2,0)) END , REST_TO_M_04   = CASE WHEN ISNULL(#{REST_TO_M_04}    ,'')='' THEN 0 ELSE CAST(#{REST_TO_M_04}      AS NUMERIC(2,0)) END ,
                REAL_DUTY_FR_D = #{REAL_DUTY_FR_D}, REAL_DUTY_FR_H = CASE WHEN ISNULL(#{REAL_DUTY_FR_H},'')='' THEN 0 ELSE CAST(#{REAL_DUTY_FR_H}    AS NUMERIC(2,0)) END , REAL_DUTY_FR_M = CASE WHEN ISNULL(#{REAL_DUTY_FR_M}  ,'')='' THEN 0 ELSE CAST(#{REAL_DUTY_FR_M}    AS NUMERIC(2,0)) END ,
                REAL_DUTY_TO_D = #{REAL_DUTY_TO_D}, REAL_DUTY_TO_H = CASE WHEN ISNULL(#{REAL_DUTY_TO_H},'')='' THEN 0 ELSE CAST(#{REAL_DUTY_TO_H}    AS NUMERIC(2,0)) END , REAL_DUTY_TO_M = CASE WHEN ISNULL(#{REAL_DUTY_TO_M}  ,'')='' THEN 0 ELSE CAST(#{REAL_DUTY_TO_M}    AS NUMERIC(2,0)) END ,
                DUTY_CODE = #{DUTY_CODE},
                UPDATE_DB_USER = #{S_USER_ID}, UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND WORK_TEAM  = #{WORK_TEAM}
           AND HOLY_TYPE = #{HOLY_TYPE}
    </update>

    <delete id="hbs020ukrServiceImpl.deleteList7" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList7 */
    DELETE HAT100T
    WHERE COMP_CODE = #{S_COMP_CODE}
        AND WORK_TEAM = #{WORK_TEAM}
        AND HOLY_TYPE = #{HOLY_TYPE}
    </delete>

    <select id="hbs020ukrServiceImpl.selectList7_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList7_1 */
    SELECT WORK_TEAM
        , PAY_CODE
        , HOLY_TYPE
        , DUTY_CODE
        , DUTY_FR_D
        , (CASE WHEN LEN(DUTY_FR_H) = 1
                     THEN '0' + CONVERT(NVARCHAR,(DUTY_FR_H))
                     ELSE CONVERT(NVARCHAR,(DUTY_FR_H))
            END) AS DUTY_FR_H
        , (CASE WHEN LEN(DUTY_FR_M) = 1
                     THEN '0' + CONVERT(NVARCHAR,(DUTY_FR_M))
                     ELSE CONVERT(NVARCHAR,(DUTY_FR_M))
            END) AS DUTY_FR_M
        , DUTY_TO_D
        , (CASE WHEN LEN(DUTY_TO_H) = 1
                     THEN '0' + CONVERT(NVARCHAR,(DUTY_TO_H))
                     ELSE CONVERT(NVARCHAR,(DUTY_TO_H))
            END) AS DUTY_TO_H
        , (CASE WHEN LEN(DUTY_TO_M) = 1
                     THEN '0' + CONVERT(NVARCHAR,(DUTY_TO_M))
                     ELSE CONVERT(NVARCHAR,(DUTY_TO_M))
            END) AS DUTY_TO_M
        , REST_FR_D_01
        , (CASE WHEN LEN(REST_FR_H_01) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_01))
                     ELSE CONVERT(NVARCHAR,(REST_FR_H_01))
            END) AS REST_FR_H_01
        , (CASE WHEN LEN(REST_FR_M_01) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_01))
                     ELSE CONVERT(NVARCHAR,(REST_FR_M_01))
            END) AS REST_FR_M_01
        , REST_TO_D_01
        , (CASE WHEN LEN(REST_TO_H_01) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_01))
                     ELSE CONVERT(NVARCHAR,(REST_TO_H_01))
            END) AS REST_TO_H_01
        , (CASE WHEN LEN(REST_TO_M_01) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_01))
                     ELSE CONVERT(NVARCHAR,(REST_TO_M_01))
            END) AS REST_TO_M_01
        , REST_FR_D_02
        , (CASE WHEN LEN(REST_FR_H_02) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_02))
                     ELSE CONVERT(NVARCHAR,(REST_FR_H_02))
            END) AS REST_FR_H_02
        , (CASE WHEN LEN(REST_FR_M_02) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_02))
                     ELSE CONVERT(NVARCHAR,(REST_FR_M_02))
            END) AS REST_FR_M_02
        , REST_TO_D_02
        , (CASE WHEN LEN(REST_TO_H_02) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_02))
                     ELSE CONVERT(NVARCHAR,(REST_TO_H_02))
            END) AS REST_TO_H_02
        , (CASE WHEN LEN(REST_TO_M_02) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_02))
                     ELSE CONVERT(NVARCHAR,(REST_TO_M_02))
            END) AS REST_TO_M_02
        , REST_FR_D_03
        , (CASE WHEN LEN(REST_FR_H_03) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_H_03))
                     ELSE CONVERT(NVARCHAR,(REST_FR_H_03))
            END) AS REST_FR_H_03
        , (CASE WHEN LEN(REST_FR_M_03) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_FR_M_03))
                     ELSE CONVERT(NVARCHAR,(REST_FR_M_03))
            END) AS REST_FR_M_03
        , REST_TO_D_03
        , (CASE WHEN LEN(REST_TO_H_03) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_H_03))
                     ELSE CONVERT(NVARCHAR,(REST_TO_H_03))
            END) AS REST_TO_H_03
        , (CASE WHEN LEN(REST_TO_M_03) = 1
                     THEN '0' + CONVERT(NVARCHAR,(REST_TO_M_03))
                     ELSE CONVERT(NVARCHAR,(REST_TO_M_03))
            END) AS REST_TO_M_03
     FROM HAT110T
    WHERE COMP_CODE = #{S_COMP_CODE}
    </select>

    <insert id="hbs020ukrServiceImpl.insertList7_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList7_1 */
        INSERT INTO HAT110T (COMP_CODE, WORK_TEAM, PAY_CODE, HOLY_TYPE, DUTY_CODE, DUTY_FR_D, DUTY_FR_H, DUTY_FR_M, DUTY_TO_D, DUTY_TO_H, DUTY_TO_M,
                        REST_FR_D_01, REST_FR_H_01, REST_FR_M_01, REST_TO_D_01, REST_TO_H_01, REST_TO_M_01,
                        REST_FR_D_02, REST_FR_H_02, REST_FR_M_02, REST_TO_D_02, REST_TO_H_02, REST_TO_M_02,
                        REST_FR_D_03, REST_FR_H_03, REST_FR_M_03, REST_TO_D_03, REST_TO_H_03, REST_TO_M_03,
                        UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
       VALUES(#{S_COMP_CODE}, #{WORK_TEAM}, #{PAY_CODE}, #{HOLY_TYPE}, #{DUTY_CODE}, #{DUTY_FR_D}, #{DUTY_FR_H}, #{DUTY_FR_M}, #{DUTY_TO_D}, #{DUTY_TO_H}, #{DUTY_TO_M},
                            #{REST_FR_D_01}, #{REST_FR_H_01}, #{REST_FR_M_01}, #{REST_TO_D_01}, #{REST_TO_H_01}, #{REST_TO_M_01},
                            #{REST_FR_D_02}, #{REST_FR_H_02}, #{REST_FR_M_02}, #{REST_TO_D_02}, #{REST_TO_H_02}, #{REST_TO_M_02},
                            #{REST_FR_D_03}, #{REST_FR_H_03}, #{REST_FR_M_03}, #{REST_TO_D_03}, #{REST_TO_H_03}, #{REST_TO_M_03},
                            #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE())
    </insert>

    <update id="hbs020ukrServiceImpl.updateList7_1" parameterType="Map">
    /* hbs020ukrServiceImpl.updateList7_1 */
    UPDATE HAT110T
           SET  DUTY_CODE = #{DUTY_CODE}, DUTY_FR_D = #{DUTY_FR_D}, DUTY_FR_H = #{DUTY_FR_H}, DUTY_FR_M = #{DUTY_FR_M},
                DUTY_TO_D = #{DUTY_TO_D}, DUTY_TO_H = #{DUTY_TO_H}, DUTY_TO_M =  #{DUTY_TO_M},
                REST_FR_D_01 = #{REST_FR_D_01}, REST_FR_H_01 = #{REST_FR_H_01}, REST_FR_M_01 = #{REST_FR_M_01},
                REST_TO_D_01 = #{REST_TO_D_01}, REST_TO_H_01 = #{REST_TO_H_01}, REST_TO_M_01 = #{REST_TO_M_01},
                REST_FR_D_02 = #{REST_FR_D_02}, REST_FR_H_02 = #{REST_FR_H_02}, REST_FR_M_02 = #{REST_FR_M_02},
                REST_TO_D_02 = #{REST_TO_D_02}, REST_TO_H_02 = #{REST_TO_H_02}, REST_TO_M_02 = #{REST_TO_M_02},
                REST_FR_D_03 = #{REST_FR_D_03}, REST_FR_H_03 = #{REST_FR_H_03}, REST_FR_M_03 = #{REST_FR_M_03},
                REST_TO_D_03 = #{REST_TO_D_03}, REST_TO_H_03 = #{REST_TO_H_03}, REST_TO_M_03 = #{REST_TO_M_03},
                UPDATE_DB_USER = #{S_USER_ID}, UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND WORK_TEAM  = #{WORK_TEAM}
           AND PAY_CODE = #{PAY_CODE}
           AND HOLY_TYPE = #{HOLY_TYPE}
           AND DUTY_CODE = #{DUTY_CODE}
    </update>

    <delete id="hbs020ukrServiceImpl.deleteList7_1" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList7_1 */
    DELETE HAT110T
    WHERE COMP_CODE = #{S_COMP_CODE}
        AND WORK_TEAM = #{WORK_TEAM}
        AND PAY_CODE = #{PAY_CODE}
        AND HOLY_TYPE = #{HOLY_TYPE}
        AND DUTY_CODE = #{DUTY_CODE}
    </delete>

    <select id="hbs020ukrServiceImpl.getColumnData" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.getColumnData */
        SELECT WAGES_CODE
            , WAGES_NAME
         FROM HBS300T
        WHERE COMP_CODE  = #{S_COMP_CODE}
          AND WAGES_KIND = '1'
          AND WAGES_CODE &lt;&gt; '100'
    </select>

    <select id="hbs020ukrServiceImpl.selectList11" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList11 */
        SELECT PAY_GRADE_01
        , PAY_GRADE_02
        , PAY_GRADE_YYYY
        , (CASE WHEN (SELECT COUNT(1)
                        FROM HBS200T
                       WHERE COMP_CODE    = A.COMP_CODE
                         AND PAY_GRADE_01 = A.PAY_GRADE_01
                         AND PAY_GRADE_02 = A.PAY_GRADE_02
                         AND WAGES_CODE   = '100') = 0
                     THEN 'N'
                ELSE  ''
           END) AS FLAG100
        , '100' AS CODE100
        , MAX(CASE WHEN B.WAGES_CODE = '100'
                        THEN A.WAGES_I
                        ELSE 0
               END) AS STD100
       <foreach collection="WAGES_CODE" item="item" index="index">
        , (CASE WHEN (SELECT COUNT(1)
                        FROM HBS200T
                       WHERE COMP_CODE    = A.COMP_CODE
                         AND PAY_GRADE_01 = A.PAY_GRADE_01
                         AND PAY_GRADE_02 = A.PAY_GRADE_02
                         AND WAGES_CODE   = '${item.WAGES_CODE}') = 0
                     THEN 'N'
                     ELSE  ''
            END) AS FLAG${item.WAGES_CODE}
        , '${item.WAGES_CODE}' AS CODE${item.WAGES_CODE}
        , MAX(CASE WHEN B.WAGES_CODE = '${item.WAGES_CODE}'
                        THEN A.WAGES_I
                        ELSE 0
               END) AS STD${item.WAGES_CODE}
       </foreach>
       FROM HBS200T A
                  INNER JOIN HBS300T  B
                          ON A.COMP_CODE  = B.COMP_CODE
                         AND A.WAGES_CODE = B.WAGES_CODE
       WHERE A.COMP_CODE  = #{S_COMP_CODE}
        AND B.WAGES_KIND = '1'
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">   AND A.PAY_GRADE_01 like '%' + #{PAY_GRADE_01} + '%' </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">   AND A.PAY_GRADE_02 like '%' + #{PAY_GRADE_02} + '%' </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_YYYY)">   AND A.PAY_GRADE_YYYY = #{PAY_GRADE_YYYY}</if>

    GROUP BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02, A.PAY_GRADE_YYYY
    ORDER BY A.COMP_CODE, A.PAY_GRADE_01, A.PAY_GRADE_02
    </select>

    <insert id="hbs020ukrServiceImpl.insertList11" parameterType="rMap">
        /* hbs020ukrServiceImpl.insertList11 */
        INSERT INTO HBS200T (
            COMP_CODE,
            PAY_GRADE_01,
            PAY_GRADE_02,
            PAY_GRADE_YYYY,
            WAGES_CODE,
            WAGES_I,
            UPDATE_DB_USER,
            UPDATE_DB_TIME,
            INSERT_DB_USER,
            INSERT_DB_TIME
        )
        VALUES (
            #{S_COMP_CODE},
            #{PAY_GRADE_01},
            #{PAY_GRADE_02},
            #{PAY_GRADE_YYYY},
            #{WAGES_CODE},
            #{WAGES_I},
            #{S_USER_ID},
            GETDATE(),
            #{S_USER_ID},
            GETDATE()
        )
    </insert>

    <update id="hbs020ukrServiceImpl.updateList11" parameterType="rMap">
        --UHbs01Krv.CHbs920UKr[fnhbs920set] HBS200T
        UPDATE HBS200T
           SET WAGES_I        = #{WAGES_I}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()

         WHERE PAY_GRADE_01   = #{PAY_GRADE_01}
           AND PAY_GRADE_02   = #{PAY_GRADE_02}
           AND PAY_GRADE_YYYY   = #{PAY_GRADE_YYYY}
           AND WAGES_CODE     = #{WAGES_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}

    </update>
    <delete id="hbs020ukrServiceImpl.deleteList11" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList11 */
    DELETE
         FROM HBS200T
         WHERE COMP_CODE = #{S_COMP_CODE}
         AND PAY_GRADE_01 = #{PAY_GRADE_01}
         AND PAY_GRADE_02 = #{PAY_GRADE_02}
         AND PAY_GRADE_YYYY = #{PAY_GRADE_YYYY}
    </delete>

    <select id="hbs020ukrServiceImpl.getColumnData2" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.getColumnData2 */
        SELECT SUB_CODE AS WAGES_CODE
          ,CODE_NAME AS WAGES_NAME
        FROM BSA100T WITH(NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H035'
           AND REF_CODE3 = '1'
           AND USE_YN='Y'
           AND SUB_CODE != '$'

    </select>

    <select id="hbs020ukrServiceImpl.selectList12" parameterType="rMap" resultType="rMap">
          /* hbs020ukrServiceImpl.selectList12 */

        SELECT
              A.COMP_CODE
            , A.YEAR_YYYY
            , A.PERSON_NUMB
            , B.NAME
            , B.DEPT_CODE
            , B.DEPT_NAME
            , B.JOIN_DATE
            , ISNULL(A.ANNUAL_SALARY_I,0) AS ANNUAL_SALARY_I
            , ISNULL(A.WAGES_STD_I,0)     AS WAGES_STD_I
            , ISNULL(A.PAY_PRESERVE_I,0)  AS PAY_PRESERVE_I


        <if test="@foren.Ognl@isNotEmpty(WAGES_CODELIST)">
            <foreach collection="WAGES_CODELIST" item="item" index="index">
            , PVT.${item.WAGES_CODE}
            </foreach>
        </if>

        FROM HBS210T A WITH(NOLOCK)
        INNER JOIN HUM100T B WITH(NOLOCK)
                                  ON A.COMP_CODE   = B.COMP_CODE
                                 AND A.PERSON_NUMB = B.PERSON_NUMB


        <if test="@foren.Ognl@isNotEmpty(WAGES_CODELIST)">
        LEFT JOIN ( SELECT
                        COMP_CODE
                        ,PAY_YYYY
                        ,PERSON_NUMB
                        ,WAGES_CODE
                        ,AMOUNT_I
                     FROM HBS210T_DTL WITH(NOLOCK)
                    WHERE COMP_CODE = #{S_COMP_CODE}
                      AND PAY_YYYY = #{YEAR_YYYY}
                 GROUP BY COMP_CODE, PAY_YYYY, PERSON_NUMB, WAGES_CODE,AMOUNT_I ) T
                 PIVOT (SUM(T.AMOUNT_I) FOR T.WAGES_CODE IN
                <foreach collection="WAGES_CODELIST" item="item" separator="," close=")" open="(" index="index">
                    ${item.WAGES_CODE}
                </foreach>
        ) AS PVT ON PVT.COMP_CODE = A.COMP_CODE
                AND PVT.PAY_YYYY =  A.YEAR_YYYY
                AND PVT.PERSON_NUMB = A.PERSON_NUMB

        </if>




        WHERE A.COMP_CODE   = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(YEAR_YYYY)">   AND A.YEAR_YYYY = #{YEAR_YYYY} </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">   AND B.PAY_PROV_FLAG = #{PAY_PROV_FLAG} </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">   AND B.DEPT_CODE &gt;= #{DEPT_CODE_FROM} </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">   AND B.DEPT_CODE &lt;= #{DEPT_CODE_TO} </if>
        <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">   AND B.PAY_CODE = #{PAY_CODE} </if>
        <if test="@foren.Ognl@isNotEmpty(NAME)">   AND B.NAME = #{NAME} </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">   AND B.PERSON_NUMB = #{PERSON_NUMB} </if>
    </select>

    <insert id="hbs020ukrServiceImpl.insertList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList12 */
        INSERT INTO HBS210T
           (YEAR_YYYY
           ,PERSON_NUMB
           ,ANNUAL_SALARY_I
           ,WAGES_STD_I
           ,PAY_PRESERVE_I
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME)
        VALUES
           (#{YEAR_YYYY}
           ,#{PERSON_NUMB}
           ,#{ANNUAL_SALARY_I}
           ,#{WAGES_STD_I}
           ,#{PAY_PRESERVE_I}
           ,#{S_USER_ID}
           ,GETDATE())
    </insert>
    <insert id="hbs020ukrServiceImpl.insertList12_2" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertList12 2*/
        INSERT INTO HBS210T_DTL
           (COMP_CODE
            ,PAY_YYYY
            ,PERSON_NUMB
            ,WAGES_CODE
            ,AMOUNT_I
            ,INSERT_DB_USER
            ,INSERT_DB_TIME
            ,UPDATE_DB_USER
            ,UPDATE_DB_TIME)
        VALUES
           (
           #{S_COMP_CODE}
           ,#{YEAR_YYYY}
           ,#{PERSON_NUMB}
           ,#{WAGES_CODE_VALUE}
           ,#{AMOUNT_I}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE())
    </insert>
    <insert id="hbs020ukrServiceImpl.insertBatchList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.insertBatchList12 */
    INSERT INTO HBS210T
               (  COMP_CODE
                , YEAR_YYYY
                , PERSON_NUMB
                , ANNUAL_SALARY_I
                , WAGES_STD_I
                , PAY_PRESERVE_I)
                SELECT
                         A.COMP_CODE
                      , #{YEAR_YYYY}    AS YEAR_YYYY
                      , A.PERSON_NUMB
                      , 0 AS ANNUAL_SALARY_I
                      , 0 AS WAGES_STD_I
                      , 0 AS PAY_PRESERVE_I
                  FROM HUM100T A  LEFT JOIN  HBS210T B
                                         ON A.COMP_CODE   = B.COMP_CODE
                                        AND A.PERSON_NUMB = B.PERSON_NUMB
                                        AND B.YEAR_YYYY   = #{YEAR_YYYY}
                 WHERE A.COMP_CODE   = #{S_COMP_CODE}
                   AND (A.RETR_DATE = '' OR RETR_DATE = '00000000')
                   AND B.COMP_CODE IS NULL
    <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">   AND A.PAY_PROV_FLAG = #{PAY_PROV_FLAG} </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FROM)">   AND A.DEPT_CODE &gt;= #{DEPT_CODE_FROM} </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">   AND B.AEPT_CODE &lt;= #{DEPT_CODE_TO} </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">   AND A.PAY_CODE = #{PAY_CODE} </if>
    <if test="@foren.Ognl@isNotEmpty(NAME)">   AND A.NAME = #{NAME} </if>
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">   AND A.PERSON_NUMB = #{PERSON_NUMB} </if>
    </insert>

    <update id="hbs020ukrServiceImpl.updateList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList12 */
    UPDATE HBS210T
       SET ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
          ,WAGES_STD_I = #{WAGES_STD_I}
          ,PAY_PRESERVE_I = #{PAY_PRESERVE_I}
          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = GETDATE()
     WHERE COMP_CODE = #{COMP_CODE}
        AND YEAR_YYYY = #{YEAR_YYYY}
        AND PERSON_NUMB = #{PERSON_NUMB}
    </update>

    <update id="hbs020ukrServiceImpl.updateList12_2" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateList12 2*/
    UPDATE HBS210T_DTL
       SET AMOUNT_I = #{AMOUNT_I}


          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = GETDATE()
     WHERE COMP_CODE = #{COMP_CODE}
        AND PAY_YYYY = #{YEAR_YYYY}
        AND PERSON_NUMB = #{PERSON_NUMB}
        AND WAGES_CODE = #{WAGES_CODE_VALUE}
    </update>

    <update id="hbs020ukrServiceImpl.updateMasterList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.updateMasterList12 */
    UPDATE HUM100T
       SET  ANNUAL_SALARY_I = #{ANNUAL_SALARY_I}
          ,WAGES_STD_I = #{WAGES_STD_I}
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND PERSON_NUMB = #{PERSON_NUMB}
    </update>

    <delete id="hbs020ukrServiceImpl.deleteList12" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList12 1 */
        DELETE HBS210T
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND PERSON_NUMB = #{PERSON_NUMB}
          AND YEAR_YYYY = #{YEAR_YYYY}
    </delete>
    <delete id="hbs020ukrServiceImpl.deleteList12_2" parameterType="rMap">
    /* hbs020ukrServiceImpl.deleteList12 2 */
        DELETE HBS210T_DTL
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND PERSON_NUMB = #{PERSON_NUMB}
          AND PAY_YYYY = #{YEAR_YYYY}
    </delete>

    <select id="hbs020ukrServiceImpl.selectList15" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList15 */
        EXEC SP_HBS_getCalcList #{S_COMP_CODE}, #{S_LANG_CODE}, #{STD_CODE}, #{SUPP_TYPE}
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step1" parameterType="rMap" resultType="rMap">
         --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step1
            SELECT SUPP_TYPE
                 , OT_KIND_01
                 , OT_KIND_02
                 , OT_KIND_FULL
                 , STD_CODE
                 , CALCU_SEQ
                 , SELECT_VALUE
                 , SELECT_NAME
                 , TABLE_NAME
                 , WHERE_COLUMN
                 , TYPE
                 , SELECT_SYNTAX
                 , UNIQUE_CODE
              FROM HBS000T
             WHERE COMP_CODE = #{S_COMP_CODE}
             <if test="@foren.Ognl@isNotEmpty(SUPP_TYPE)">
               AND SUPP_TYPE = #{SUPP_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(STD_CODE)">
               AND STD_CODE = #{STD_CODE}
             </if>
             ORDER BY SUPP_TYPE, OT_KIND_01, OT_KIND_02, OT_KIND_FULL, STD_CODE, CALCU_SEQ
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_msg" parameterType="rMap" resultType="String">
        select msg_desc from bsa010t where msg_no = #{MSG_NO};
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step2_type1" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step2 1
         SELECT  ${SELECT_NAME} +
                CASE WHEN ISNULL(#{H_CODE},'') != ''  THEN '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, #{H_CODE}) + ')'
                     ELSE ''
                END as CODE_NAME
           FROM  ${TABLE_NAME}
          WHERE COMP_CODE = #{S_COMP_CODE}
            AND ${WHERE_COLUMN} = #{SELECT_VALUE}
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step2_type2" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step2 2
        SELECT CODE_NAME  +
                CASE WHEN ISNULL(#{H_CODE},'') != ''  THEN '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0128') + ')'
                     ELSE ''
                END AS CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE =#{S_COMP_CODE}
           AND MAIN_CODE =#{WHERE_COLUMN}
           AND SUB_CODE != '$'
           AND SUB_CODE  = #{SELECT_VALUE}
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step3" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step3
        SELECT CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE =#{S_COMP_CODE}
           AND MAIN_CODE =#{WHERE_COLUMN}
           AND SUB_CODE != '$'
           AND SUB_CODE  = #{SELECT_VALUE}
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_Step5" parameterType="rMap" resultType="rMap">
        --UBizcaluKrvkr.BizCalcuKrKr SetBizCalcuKr[fnCalcu] Step5

            SELECT A.SUPP_TYPE
                 , A.STD_CODE
                 , replace(A.OT_KIND_01    ,'/','') AS   OT_KIND_01
                 , CONVERT(NVARCHAR(100),'KK') AS OT_KIND_01NM
                 , replace(A.OT_KIND_02   ,'/','') AS   OT_KIND_02
                 , CONVERT(NVARCHAR(100),'KK') AS OT_KIND_02NM
                 , A.OT_KIND_FULL
                 ,B.B
                 ,B.OT_KIND_01_NAME
                 ,B.OT_KIND_02_NAME
                 ,B.UPDATE_TEXT
                 ,A.OT_KIND_02 AS OT_KIND_02_RAW
                 ,A.OT_KIND_01 AS OT_KIND_01_RAW
              FROM (SELECT A.SUPP_TYPE
                         , A.STD_CODE
                         , A.OT_KIND_01
                         , A.OT_KIND_02
                         , A.OT_KIND_FULL
                      FROM HBS000T A
                     WHERE A.COMP_CODE = #{S_COMP_CODE}
                     GROUP BY A.SUPP_TYPE, A.STD_CODE, A.OT_KIND_01, A.OT_KIND_02, A.OT_KIND_FULL
                   ) A,
                   (

                    ${SQL2}

                   ) B
             WHERE A.STD_CODE     = B.STD_CODE
               AND A.OT_KIND_01   = B.OT_KIND_01
               AND A.OT_KIND_02   = B.OT_KIND_02
               AND A.OT_KIND_FULL = B.OT_KIND_FULL
               AND A.SUPP_TYPE    = B.SUPP_TYPE
    </select>
    <select id="hbs020ukrServiceImpl.selectList15_GetComboData" parameterType="rMap" resultType="comboItem">
    /* hbs020ukrServiceImpl.selectList15_GetComboData */

    --H032체크 
--급여: SUB_CODE = '1' OR REF_CODE1 = '1' 
--상여: SUB_CODE NOT IN ('1', 'F', 'R') AND REF_CODE != '1' 
--년차: SUB_CODE = 'F' 
--퇴직: SUB_CODE = 'R' 

--아래쿼리 refcode1 = A 는 전부 나타나야함

       SELECT WAGES_CODE AS value    --급여 
            , WAGES_NAME AS text  
            , WAGES_CODE + WAGES_NAME as search 
            , '1' as refCode1  
         FROM HBS300T  
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND CODE_TYPE = '1'
        UNION ALL
       SELECT 'T01' AS value  -- 상여기준금 
            , uniLIte.fnGetTxtLang('KO', 'H0021') AS text 
            , 'T01' + uniLIte.fnGetTxtLang('KO', 'H0021') AS search 
            , '2' as refCode1
         UNION ALL  
       SELECT 'T02' AS value   -- 퇴직기준금 
            , uniLIte.fnGetTxtLang('KO', 'H0026') AS text 
            , 'T02' + uniLIte.fnGetTxtLang('KO', 'H0026') AS search 
            , 'R' as refCode1
        UNION ALL  
       SELECT 'T03' AS value   -- 년차기준금 
            ,  uniLIte.fnGetTxtLang('KO', 'H0022') AS text 
            , 'T03' + uniLIte.fnGetTxtLang('KO', 'H0022') AS search 
            , 'F' as refCode1
        UNION ALL  
       SELECT 'E03' AS value   -- 년차수당 
            ,  uniLIte.fnGetTxtLang('KO', 'H0023') AS text 
            , 'E03' + uniLIte.fnGetTxtLang('KO', 'H0023') AS search 
            , 'F' as refCode1
        UNION ALL  
       SELECT SUB_CODE AS value --공제 
            , CODE_NAME AS text  
            , SUB_CODE + CODE_NAME as search  
            , 'A' as refCode1  
         FROM BSA100T  
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND MAIN_CODE = 'H034'
          AND SYSTEM_CODE_YN != '1'
          AND SUB_CODE != '$'
    
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_GetComboData2" parameterType="rMap"  resultType="comboItem">
    /* hbs020ukrServiceImpl.selectList15_GetComboData2 */
        <if test="@foren.Ognl@isEmpty(OT_KIND_01) and @foren.Ognl@isEmpty(ARR_OT_KIND_01)">
        SELECT OT_KIND_01   as value
            , OT_KIND_01_NAME  as text
            , OT_KIND_01 + OT_KIND_01_NAME as search

         FROM HBS010T
        WHERE COMP_CODE = #{S_COMP_CODE}
        </if>

        <if test="@foren.Ognl@isNotEmpty(OT_KIND_01)">
        SELECT OT_KIND_01   as value
            , OT_KIND_01_NAME  as text
            , OT_KIND_01 + OT_KIND_01_NAME as search

         FROM HBS010T
        WHERE COMP_CODE = #{S_COMP_CODE}
            AND OT_KIND_01 = #{OT_KIND_01}
        </if>

        <if test="@foren.Ognl@isNotEmpty(ARR_OT_KIND_01)">
         DECLARE @TMP_T TABLE( seq INT NOT NULL identity(1,1) ,
                               OT_KIND_01 NVARCHAR(20)
                             )
            <foreach collection="ARR_OT_KIND_01" item="item" separator=" " close=" " open=" ">
             insert into @TMP_T VALUES ( #{item} )
            </foreach>
        SELECT HBS.OT_KIND_01   as value
            , HBS.OT_KIND_01_NAME  as text
            , HBS.OT_KIND_01 + OT_KIND_01_NAME as search
         FROM HBS010T HBS
        INNER JOIN   @TMP_T TT  ON HBS.OT_KIND_01 =  TT.OT_KIND_01
        WHERE HBS.COMP_CODE = #{S_COMP_CODE}
        </if>












    </select>

    <select id="hbs020ukrServiceImpl.selectList15_GetComboData3" parameterType="rMap" resultType="comboItem">
    /* hbs020ukrServiceImpl.selectList15_GetComboData3 */
        SELECT *
             , SUB_CODE    as value
             , CODE_NAME   as text
             , BIGVALE as refCode1
             , BIGNAME as refCode2
        FROM
       (
            SELECT 'DIV_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0003') AS BIGNAME
             , DIV_CODE AS SUB_CODE
             , DIV_NAME AS CODE_NAME
          FROM BOR120T
         WHERE COMP_CODE = #{S_COMP_CODE}

         UNION ALL

        SELECT 'DEPT_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0002') AS BIGNAME
             , TREE_CODE AS SUB_CODE
             , TREE_NAME AS CODE_NAME
          FROM BSA210T
         WHERE COMP_CODE = #{S_COMP_CODE}

         UNION ALL

        SELECT 'POST_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0010') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h005'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'ABIL_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0001') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h006'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'AFFIL_CODE' AS BIGVALE
             , '직렬' AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H173'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'WORK_TEAM' AS BIGVALE
             , '근무조' AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H004'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

         SELECT 'PAY_PROV_FLAG' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0009') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h031'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

         SELECT 'PAY_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0007') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h028'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'PAY_GUBUN' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0008') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h011'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'EMPLOY_TYPE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0004') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'h024'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'SEX_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0011') AS BIGNAME
             , 'M' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0027') AS CODE_NAME
         UNION ALL
        SELECT 'SEX_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0011') AS BIGNAME
             , 'F' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0028') AS CODE_NAME


         UNION ALL

        SELECT 'LABOR_UNON_YN' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0005') AS BIGNAME
             , 'Y' as sub_code
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0029') AS CODE_NAME

         UNION ALL

        SELECT 'LABOR_UNON_YN' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0005') AS BIGNAME
             , 'N' as sub_code
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0030') AS CODE_NAME

         UNION ALL

        SELECT 'MARRY_YN' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0006') AS BIGNAME
             , 'Y' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0029') AS CODE_NAME
         UNION ALL
        SELECT 'MARRY_YN' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0006') AS BIGNAME
             , 'N' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0030') AS CODE_NAME

         UNION ALL

        SELECT 'SPOUSE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0012') AS BIGNAME
             , 'Y' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0029') AS CODE_NAME
         UNION ALL
        SELECT 'SPOUSE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0012') AS BIGNAME
             , 'N' AS SUB_CODE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0030') AS CODE_NAME

         UNION ALL

        SELECT 'JOB_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0122') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H008'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'SCHSHIP_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0124') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H009'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'JOIN_CODE' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0125') AS BIGNAME
             , SUB_CODE
             , CODE_NAME
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H012'
           AND SUB_CODE  &lt;&gt; '$'

         UNION ALL

        SELECT 'PAY_GRADE_01' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0015') AS BIGNAME
             , PAY_GRADE_01 as sub_code
             , PAY_GRADE_01 AS CODE_NAME
          FROM HBS200T

         UNION ALL

        SELECT 'PAY_GRADE_02' AS BIGVALE
             , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0090') AS BIGNAME
             , PAY_GRADE_02 as sub_code
             , PAY_GRADE_02 AS CODE_NAME
          FROM HBS200T
         GROUP BY PAY_GRADE_02
         ) A
         WHERE 1=1
         <if test="@foren.Ognl@isNotEmpty(SEARCH_FIELD)">
          AND BIGVALE = #{SEARCH_FIELD}
         </if>
         <if test="@foren.Ognl@isNotEmpty(OT_KIND_02)">
           AND SUB_CODE = #{OT_KIND_02}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ARR_OT_KIND_02)">
            AND SUB_CODE IN
            <foreach collection="ARR_OT_KIND_02" item="item" separator="," close=")" open="(">
             #{item}
            </foreach>
        </if>
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_GetComboData4" parameterType="rMap" resultType="rMap">
        SELECT DISTINCT SUPP_TYPE
                ,STD_CODE
                ,OT_KIND_01
        FROM HBS000T
        WHERE COMP_CODE =#{S_COMP_CODE}
         AND SUPP_TYPE = #{SUPP_TYPE}
         AND STD_CODE = #{STD_CODE}

    </select>

    <select id="hbs020ukrServiceImpl.findRefcode1" parameterType="rMap" resultType="rMap">
        SELECT CASE WHEN REF_CODE1 = '1' THEN '1'
                    ELSE  '2'
                    END AS REF_CODE1
          FROM BSA100T
         WHERE MAIN_CODE = 'H032'
           AND SUB_CODE = #{SUB_CODE}

    </select>

    <select id="hbs020ukrServiceImpl.selectList15_H0018" parameterType="rMap" resultType="rMap">
    /* hat200ukrServiceImpl.selectList15_H0018 */
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0018') AS GUBUN
         , CODE_NAME
         , SUB_CODE AS WAGES_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H033' AS WHERE_COLUMN
         , '3' AS TYPE
         , 'SELECT CASE WHEN T2.COTR_TYPE =''1''
                             THEN T1.DUTY_TIME
                             ELSE T1.DUTY_NUM END
              FROM HAT200T T1
                            INNER JOIN HBS100T T2
                                    ON T1.COMP_CODE = T2.COMP_CODE
                                   AND T1.DUTY_CODE = T2.DUTY_CODE
             WHERE T1.COMP_CODE   = M.COMP_CODE
               AND T1.DUTY_YYYYMM = M.PAY_YYYYMM
               AND T1.PERSON_NUMB = M.PERSON_NUMB
               AND T2.PAY_CODE = M.PAY_CODE
               AND T1.DUTY_CODE =' AS SELECT_SYNTAX
         , 'H033' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
         , 1 AS SEQ
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H033'
       AND SUB_CODE &lt;&gt; '$'
     UNION
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0018') + '1' AS GUBUN
         , CODE_NAME
         , SUB_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H043' AS WHERE_COLUMN
         , '3' AS TYPE
         , (CASE SUB_CODE WHEN '01'
                               THEN 'SELECT TOT_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '02'
                               THEN 'SELECT SUN_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '03'
                               THEN 'SELECT WEEK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '04'
                               THEN 'SELECT DED_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '05'
                               THEN 'SELECT DED_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '06'
                               THEN 'SELECT WORK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '07'
                               THEN 'SELECT WORK_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '08'
                               THEN 'SELECT WEEK_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '09'
                               THEN 'SELECT FULL_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '10'
                               THEN 'SELECT MONTH_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '11'
                               THEN 'SELECT MENS_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '12'
                               THEN 'SELECT SAT_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '13'
                               THEN 'SELECT EXTEND_WORK_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '15'
                               THEN 'SELECT NON_WEEK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                               ELSE ''
             END) AS SELECT_SNYTAX
         , 'H043' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
         , 3 AS SEQ
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H043'
       AND SUB_CODE &lt;&gt; '$'
    UNION ALL

    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0018') + '2' AS GUBUN
         , CODE_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0128') + ')'
         , SUB_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H033' AS WHERE_COLUMN
         , '3' AS TYPE
         , 'SELECT CASE WHEN T2.COTR_TYPE =  ''1''
                             THEN T1.DUTY_TIME
                             ELSE T1.DUTY_NUM END
              FROM HAT200T T1
                            INNER JOIN HBS100T T2
                                    ON T1.COMP_CODE = T2.COMP_CODE
                                   AND T1.DUTY_CODE = T2.DUTY_CODE
             WHERE T1.COMP_CODE   = M.COMP_CODE
               AND T1.DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +
               'AND T1.PERSON_NUMB = M.PERSON_NUMB
               AND T2.PAY_CODE = M.PAY_CODE
               AND T1.DUTY_CODE =' AS SELECT_SNYTAX
         , 'BFH033' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
         , 4 AS SEQ
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H033'
       AND SUB_CODE &lt;&gt; '$'

    UNION

    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0018') + '3' AS GUBUN
         , CODE_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0128') + ')'
         , SUB_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H043' AS WHERE_COLUMN
         , '3' AS TYPE
         , (CASE SUB_CODE WHEN '01'
                               THEN 'SELECT TOT_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '02'
                               THEN 'SELECT SUN_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '03'
                               THEN 'SELECT WEEK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM + ''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '04'
                               THEN 'SELECT DED_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '05'
                               THEN 'SELECT DED_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '06'
                               THEN 'SELECT WORK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '07'
                               THEN 'SELECT WORK_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '08'
                               THEN 'SELECT WEEK_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '09'
                               THEN 'SELECT FULL_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '10'
                               THEN 'SELECT MONTH_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
                                        'AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '11'
                               THEN 'SELECT MENS_GIVE
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '12'
                               THEN 'SELECT SAT_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '13'
                               THEN 'SELECT EXTEND_WORK_TIME
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '15'
                               THEN 'SELECT NON_WEEK_DAY
                                       FROM HAT300T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND DUTY_YYYYMM = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                               ELSE ''
             END) AS SELECT_SNYTAX
         , 'BFH043' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
         , 5 AS SEQ
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H043'
       AND SUB_CODE &lt;&gt; '$'

    ORDER BY SEQ, GUBUN, SUB_CODE
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_H0019" parameterType="rMap" resultType="rMap">
    /* hat200ukrServiceImpl.selectList15_H0019 */
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0019') AS GUBUN
        , WAGES_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0014') + ')' AS WAGES_NAME --(월)
        , WAGES_CODE
        , 'HBS300T' AS TABLE_NAME
        , 'WAGES_CODE' AS WHERE_COLUMN
        , '3' AS TYPE
        , 'SELECT SUM(AMOUNT_I) AS AMOUNT_I
             FROM HPA300T
            WHERE COMP_CODE   = M.COMP_CODE
              AND PERSON_NUMB = M.PERSON_NUMB
              AND PAY_YYYYMM  = M.PAY_YYYYMM
              AND SUPP_TYPE   = M.SUPP_TYPE
              AND WAGES_CODE  =' AS SELECT_SYNTAX
        , 'HBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
        , CAST(0 AS BIT) AS CHOICE
     FROM HBS300T
    WHERE COMP_CODE = #{S_COMP_CODE}
      AND CODE_TYPE = '1'
    UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0019') AS GUBUN
        , WAGES_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0128') + ')' AS WAGES_NAME --(전)
        , WAGES_CODE
        , 'HBS300T' AS TABLE_NAME
        , 'WAGES_CODE' AS WHERE_COLUMN
        , '3' AS TYPE
        , 'SELECT SUM(AMOUNT_I) AS AMOUNT_I
             FROM HPA300T
            WHERE COMP_CODE   = M.COMP_CODE
              AND PERSON_NUMB = M.PERSON_NUMB
              AND PAY_YYYYMM  = CONVERT(NVARCHAR(6),DATEADD(M,-1,M.PAY_YYYYMM + ''01''),112) 
              AND SUPP_TYPE   = M.SUPP_TYPE
              AND WAGES_CODE  =' AS SELECT_SYNTAX
        , 'BFHBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
        , CAST(0 AS BIT) AS CHOICE
     FROM HBS300T
    WHERE COMP_CODE = #{S_COMP_CODE}
      AND CODE_TYPE = '1'
    UNION ALL
   SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0019') AS GUBUN
        , WAGES_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0013') + ')' AS  WAGES_NAME --(고)
        , WAGES_CODE
        , 'HBS300T' AS TABLE_NAME
        , 'WAGES_CODE' AS WHERE_COLUMN
        , '10' AS TYPE
        , 'SELECT AMOUNT_I
             FROM HPA200T
            WHERE COMP_CODE   = M.COMP_CODE
              AND PERSON_NUMB = M.PERSON_NUMB
              AND WAGES_CODE  ='  AS SELECT_SNYTAX
        , 'GHBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
        , CAST(0 AS BIT) AS CHOICE
     FROM HBS300T
    WHERE COMP_CODE = #{S_COMP_CODE}
      AND CODE_TYPE = '1'
    ORDER BY TABLE_NAME, WHERE_COLUMN
    </select>

    <select id="hbs020ukrServiceImpl.selectList15_H0020" parameterType="rMap" resultType="rMap">
    /* hat200ukrServiceImpl.selectList15_H0020 */
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '1' AS GUBUN
         , CODE_NAME AS WAGES_NAME
         , SUB_CODE AS WAGES_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H097' AS WHERE_COLUMN
         , '3' AS TYPE
         , (CASE SUB_CODE WHEN '01'
                               THEN 'SELECT YEAR_NUM
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY   = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                             THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                        WHEN YEAR_PROV_YYYY = ''2''
                                                                             THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                        WHEN YEAR_PROV_YYYY = ''3''
                                                                             THEN LEFT(M.PAY_YYYYMM,4)
                                                                        WHEN YEAR_PROV_YYYY = ''4''
                                                                             THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                    END)
                                                             FROM HBS400T
                                                            WHERE COMP_CODE = M.COMP_CODE)'

                          WHEN '02'
                               THEN 'SELECT YEAR_USE
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                      WHEN YEAR_PROV_YYYY = ''2''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                      WHEN YEAR_PROV_YYYY = ''3''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)
                                                                      WHEN YEAR_PROV_YYYY = ''4''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                  END)
                                                           FROM HBS400T
                                                          WHERE COMP_CODE = M.COMP_CODE)'
                          WHEN '03'
                               THEN 'SELECT YEAR_PROV
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                      WHEN YEAR_PROV_YYYY = ''2''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                      WHEN YEAR_PROV_YYYY = ''3''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)
                                                                      WHEN YEAR_PROV_YYYY = ''4''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                  END)
                                                           FROM HBS400T
                                                          WHERE COMP_CODE = M.COMP_CODE)'

                          WHEN '04'
                               THEN 'SELECT MONTH_NUM
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                      WHEN YEAR_PROV_YYYY = ''2''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                      WHEN YEAR_PROV_YYYY = ''3''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)
                                                                      WHEN YEAR_PROV_YYYY = ''4''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                  END)
                                                           FROM HBS400T
                                                          WHERE COMP_CODE = M.COMP_CODE)'
                          WHEN '05'
                               THEN 'SELECT MONTH_USE
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                      WHEN YEAR_PROV_YYYY = ''2''
                                                                           THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                      WHEN YEAR_PROV_YYYY = ''3''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)
                                                                      WHEN YEAR_PROV_YYYY = ''4''
                                                                           THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                  END)
                                                           FROM HBS400T
                                                          WHERE COMP_CODE = M.COMP_CODE)'
                          WHEN '06'
                               THEN 'SELECT MONTH_PROV
                                       FROM HAT700T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND DUTY_YYYY   = (SELECT (CASE WHEN YEAR_PROV_YYYY = ''1''
                                                                             THEN LEFT(M.PAY_YYYYMM,4) - 2
                                                                        WHEN YEAR_PROV_YYYY = ''2''
                                                                             THEN LEFT(M.PAY_YYYYMM,4) - 1
                                                                        WHEN YEAR_PROV_YYYY = ''3''
                                                                             THEN LEFT(M.PAY_YYYYMM,4)
                                                                        WHEN YEAR_PROV_YYYY = ''4''
                                                                             THEN LEFT(M.PAY_YYYYMM,4)  + 1
                                                                    END)
                                                             FROM HBS400T
                                                            WHERE COMP_CODE = M.COMP_CODE)'
                          WHEN '07'
                               THEN 'SELECT BONUS_STD_I
                                       FROM HPA600T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND PAY_YYYYMM  = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND SUPP_TYPE   = M.SUPP_TYPE
                                        AND SUPP_TYPE   = ''F'''
                          WHEN '08'
                               THEN 'SELECT BONUS_STD_I
                                       FROM HPA600T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND PAY_YYYYMM  = M.PAY_YYYYMM
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND SUPP_TYPE   = M.SUPP_TYPE
                                        AND SUPP_TYPE   = ''G'''
                               ELSE ''
             END) AS SELECT_SYNTAX
         , 'H097' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H097'
       AND SUB_CODE &lt;&gt; '$'
     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '2' AS GUBUN
         , CODE_NAME AS WAGES_NAME
         , SUB_CODE AS WAGES_CODE
         , 'BSA100T' AS TABLE_NAME
         , 'H098' AS WHERE_COLUMN
         , '3' AS TYPE
         , (CASE SUB_CODE WHEN '01' --
                               THEN 'SELECT ANNUAL_SALARY_I
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '02'
                               THEN 'SELECT WAGES_STD_I
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '03'
                               THEN 'SELECT SUPP_TOTAL_I
                                       FROM HPA600T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB
                                        AND PAY_YYYYMM  = M.PAY_YYYYMM
                                        AND SUPP_TYPE   = M.SUPP_TYPE'
                          WHEN '04'
                               THEN 'SELECT DAY_WORK_TIME
                                       FROM HBS400T
                                      WHERE COMP_CODE = M.COMP_CODE'
                          WHEN '05'
                               THEN 'SELECT SUPP_AGED_NUM
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '06'
                               THEN 'SELECT (CASE WHEN ORI_JOIN_DATE =''00000000'' OR ORI_JOIN_DATE =''''
                                                       THEN (CASE WHEN DATEDIFF(MONTH, JOIN_DATE, DATEADD(DAY, -1, DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) % 12 > 0
                                                                       THEN DATEDIFF(MONTH,JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  + 1
                                                                       ELSE DATEDIFF(MONTH,JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12
                                                              END )
                                                       ELSE (CASE WHEN DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) % 12 > 0
                                                                       THEN DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12  + 1
                                                                       ELSE DATEDIFF(MONTH,ORI_JOIN_DATE,DATEADD(DAY,-1,DATEADD(MONTH,1,CONVERT(DATETIME,M.PAY_YYYYMM +''01'' )))) / 12
                                                              END)
                                              END) AS DIFFDAY
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '07'
                               THEN 'SELECT (CASE WHEN SPOUSE = ''Y''
                                                       THEN 1
                                                       ELSE 0
                                              END) AS SPOUSE
                                      FROM HUM100T
                                     WHERE COMP_CODE   = M.COMP_CODE
                                       AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '08'
                               THEN 'SELECT COM_YEAR_WAGES
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '09'
                               THEN CASE WHEN ISNULL(REF_CODE2,'')  = ''
                                         THEN 
                                    'SELECT BONUS_STD_I
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                                        ELSE 
                                            REF_CODE2
                                        END
                          WHEN '10'
                               THEN 'SELECT CHILD_20_NUM
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '11'
                               THEN 'SELECT PAY_PRESERVE_I
                                       FROM HUM100T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '12'
                               THEN 'SELECT ANNUAL_SALARY_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4)
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '13'
                               THEN 'SELECT ANNUAL_SALARY_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) - 1
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '14'
                               THEN 'SELECT WAGES_STD_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4)
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '15'
                               THEN 'SELECT WAGES_STD_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -1
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '20'
                               THEN 'SELECT ANNUAL_SALARY_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -2
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '21'
                               THEN 'SELECT WAGES_STD_I
                                       FROM HBS210T
                                      WHERE COMP_CODE   = M.COMP_CODE
                                        AND YEAR_YYYY   = LEFT(M.PAY_YYYYMM, 4) -2
                                        AND PERSON_NUMB = M.PERSON_NUMB'
                          WHEN '24'        -- 공제금액계
                               THEN 'SELECT SUM(ISNULL(A.DED_AMOUNT_I, 0)) AS DED_AMOUNT_I
                                       FROM            HPA400T A WITH (NOLOCK)
                                            INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                              AND B.MAIN_CODE =  ''H034'' 
                                                                              AND B.SUB_CODE  = A.DED_CODE
                                                                              AND ISNULL(B.REF_CODE5,  '''' ) =  ''Y''
                                        WHERE A.COMP_CODE   = M.COMP_CODE             
                                          AND A.PAY_YYYYMM  = M.PAY_YYYYMM
                                          AND A.SUPP_TYPE   = M.SUPP_TYPE
                                          AND A.PERSON_NUMB = M.PERSON_NUMB'
                         
                            WHEN '25'       -- 통상임금계(지급구분이 '1'인 것만 통상임금으로 계산함)
                                 THEN 'SELECT SUM(ISNULL(A.AMOUNT_I, 0)) AS DED_AMOUNT_I
                                         FROM            HPA300T A WITH (NOLOCK)
                                              INNER JOIN HBS300T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
                                                                                AND B.WAGES_CODE = A.WAGES_CODE
                                                                                AND B.ORD_WAGES  = ''Y''
                                        WHERE A.COMP_CODE   = M.COMP_CODE             
                                          AND A.PAY_YYYYMM  = M.PAY_YYYYMM
                                          AND A.SUPP_TYPE   = ''1''
                                          AND A.PERSON_NUMB = M.PERSON_NUMB'
                            WHEN '26'       -- 근속월수
                                 THEN 'SELECT CASE WHEN B.ORI_JOIN_DATE =  ''00000000'' OR B.ORI_JOIN_DATE = ''''   
                                                   THEN fnHumanDateDiff(ISNULL(B.JOIN_DATE,  ''00000000'' )
                                                                       , CASE WHEN ISNULL(C.REF_CODE2,  '''' ) =  ''00'' 
                                                                              THEN CONVERT(VARCHAR(08), DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, A.PAY_YYYYMM +  ''01'' ))), 112)
                                                                              ELSE CONVERT(VARCHAR(08), CONVERT(DATETIME, A.PAY_YYYYMM + C.REF_CODE2), 112)
                                                                          END
                                                                       , ''LONG_TOT_MONTH'' )
                                                   ELSE fnHumanDateDiff(ISNULL(B.ORI_JOIN_DATE,  ''00000000'' )
                                                                       , CASE WHEN ISNULL(C.REF_CODE2,  '''' ) =  ''00'' 
                                                                              THEN CONVERT(VARCHAR(08), DATEADD(DAY, -1, DATEADD(MONTH, 1, CONVERT(DATETIME, A.PAY_YYYYMM +  ''01'' ))), 112)
                                                                              ELSE CONVERT(VARCHAR(08), CONVERT(DATETIME, A.PAY_YYYYMM + C.REF_CODE2), 112)
                                                                          END
                                                                       , ''LONG_TOT_MONTH'' )
                                               END AS DIFFMONTH
                                         FROM            HPA600T A WITH (NOLOCK)
                                              INNER JOIN HUM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                                AND B.PERSON_NUMB = A.PERSON_NUMB
                                              LEFT  JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                                                AND C.MAIN_CODE   = N ''H031'' 
                                                                                AND C.SUB_CODE    = A.PAY_PROV_FLAG
                                        WHERE A.COMP_CODE   = M.COMP_CODE
                                          AND A.PAY_YYYYMM  = M.PAY_YYYYMM
                                          AND A.SUPP_TYPE   = M.SUPP_TYPE
                                          AND A.PERSON_NUMB = M.PERSON_NUMB'
                              WHEN '27'       -- 임금피크제 대상
                                   THEN 'SELECT TOP 1 CASE WHEN COUNT(A.PERSON_NUMB) > 0 THEN 1 ELSE 0 END AS PEAK_YN
                                           FROM HUM130T A WITH (NOLOCK)
                                          WHERE A.COMP_CODE    = M.COMP_CODE
                                            AND M.PAY_YYYYMM  &gt;= LEFT(A.PEAK_FR_DATE, 6)
                                            AND M.PAY_YYYYMM  &lt;= LEFT(A.PEAK_TO_DATE, 6)
                                            AND A.PERSON_NUMB  = M.PERSON_NUMB'
        
                              WHEN '28'       -- 임금피크지급율
                                   THEN 'SELECT TOP 1 ISNULL(A.PAY_RATE, 0) AS PEAK_PAY_RATE
                                           FROM HUM130T A WITH (NOLOCK)
                                          WHERE A.COMP_CODE    = M.COMP_CODE
                                            AND M.PAY_YYYYMM  &gt;= LEFT(A.PEAK_FR_DATE, 6)
                                            AND M.PAY_YYYYMM  &lt;= LEFT(A.PEAK_TO_DATE, 6)
                                            AND A.PERSON_NUMB  = M.PERSON_NUMB'
        
                              WHEN '29'       -- 최저임금
                                   THEN 'SELECT ISNULL(A.MIN_WAGES, 0) AS MIN_WAGES
                                           FROM HBS140T A WITH (NOLOCK)
                                          WHERE A.COMP_CODE    = M.COMP_CODE
                                            AND A.TAX_YYYY     = LEFT(M.PAY_YYYYMM, 4)'
                              WHEN '30'      -- 가족수당(전주)    
                                   THEN 'SELECT SUM(X.AMT) FROM (SELECT ISNULL(CASE WHEN B.REF_CODE1 = ''Y'' THEN
                                                                CASE WHEN A.FAMILY_AMOUNT_YN = ''Y'' THEN
                                                                     CASE WHEN B.REF_CODE2 = ''Y'' THEN
                                                                          CASE WHEN uniLITE.fnGetAge(M.PAY_YYYYMM,
                                                                                                     (CASE WHEN SUBSTRING(uniLITE.fnCipherDecrypt(REPRE_NUM, ),7,1) IN (3,4) THEN 20 ELSE 19 END) + LEFT(uniLITE.fnCipherDecrypt(REPRE_NUM, ),4),
                                                                                                     (CASE WHEN B.REF_CODE5 = ''Y'' THEN ''Y'' ELSE ''N'' END)) BETWEEN   B.REF_CODE3 AND B.REF_CODE4 THEN
                                                                                     B.REF_CODE6 ELSE  0
                                                                          END
                                                                          ELSE  B.REF_CODE6
                                                                     END
                                                                     ELSE  0
                                                                END
                                                                ELSE
                                                                     CASE WHEN B.REF_CODE2 = ''Y'' THEN
                                                                              CASE WHEN uniLITE.fnGetAge(M.PAY_YYYYMM,
                                                                                                         (CASE WHEN SUBSTRING(uniLITE.fnCipherDecrypt(REPRE_NUM, ),7,1) IN (3,4) THEN 20 ELSE 19 END) + LEFT(uniLITE.fnCipherDecrypt(REPRE_NUM, ),4),
                                                                                                         (CASE WHEN B.REF_CODE5 = ''Y'' THEN Y ELSE N END)) BETWEEN   B.REF_CODE3 AND B.REF_CODE4 THEN B.REF_CODE6
                                                                                   ELSE  0
                                                                              END
                                                                          ELSE  B.REF_CODE6
                                                                     END
                                                           END,0) AS AMT
                                           FROM HUM200T A WITH (NOLOCK) INNER JOIN
                                                BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                       AND B.MAIN_CODE = ''H196''
                                                                       AND B.SUB_CODE  = A.REL_CODE
                                          WHERE A.COMP_CODE   = M.COMP_CODE
                                            AND A.PERSON_NUMB = M.PERSON_NUMB) AS X'                                      

                            -- 입퇴사자여부(극동)
                            WHEN '63'
                                THEN 'SELECT CASE WHEN LEFT(A.RETR_DATE, 6) = M.PAY_YYYYMM
                                                  THEN CASE WHEN ISNULL(C.REF_CODE2, ''00'') = ''00'' 
                                                            THEN CASE WHEN A.RETR_DATE != ''00000000'' AND A.RETR_DATE &lt; CONVERT(NVARCHAR(8), EOMONTH(CONVERT(DATETIME, M.PAY_YYYYMM + ''01'', 112)), 112)  
                                                                      THEN 1
                                                                      ELSE 0
                                                                 END
                                                            ELSE CASE WHEN A.RETR_DATE != ''00000000'' AND A.RETR_DATE &lt; CONVERT(NVARCHAR(8), EOMONTH(CONVERT(DATETIME, M.PAY_YYYYMM + C.REF_CODE2, 112)), 112)  
                                                                      THEN 1
                                                                      ELSE 0
                                                                 END
                                                         END
                                                WHEN LEFT(A.JOIN_DATE, 6) = M.PAY_YYYYMM 
                                                   THEN CASE WHEN ISNULL(C.REF_CODE2, ''00'') = ''00'' 
                                                             THEN CASE WHEN A.JOIN_DATE &gt;  M.PAY_YYYYMM + ''01'' 
                                                                       THEN 1 
                                                                       ELSE 0
                                                                   END
                                                             ELSE CASE WHEN A.JOIN_DATE &gt; M.PAY_YYYYMM + C.REF_CODE2 
                                                                       THEN 1
                                                                       ELSE 0
                                                                   END
                                                         END
                                                   ELSE 0
                                              END
                                        FROM           HUM100T A WITH (NOLOCK)
                                             LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                              AND B.MAIN_CODE = ''H098''
                                                                              AND B.SUB_CODE  = ''63''
                                             LEFT JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                                              AND C.MAIN_CODE = ''H031''
                                                                              AND C.USE_YN    = ''Y''
                                                                              AND C.SUB_CODE != ''$''
                                       WHERE A.COMP_CODE   = M.COMP_CODE
                                         AND A.PERSON_NUMB = M.PERSON_NUMB'
 /********************* 성남 사이트성 계산식       
                       WHEN '27'
                           THEN 'SELECT ISNULL(SUM(X.AMT),0) FROM (SELECT ISNULL(CASE WHEN B.REF_CODE1 = ''Y'' THEN
                                                        CASE WHEN A.FAMILY_AMOUNT_YN = ''Y'' THEN
                                                             CASE WHEN B.REF_CODE2 = ''Y'' THEN
                                                                  CASE WHEN uniLITE.fnGetAge(M.PAY_YYYYMM,
                                                                                             (CASE WHEN SUBSTRING(uniLITE.fnCipherDecrypt(REPRE_NUM, ''''),7,1) IN (3,4) THEN 20 ELSE 19 END) + LEFT(uniLITE.fnCipherDecrypt(REPRE_NUM,'''' ),4),
                                                                                             (CASE WHEN B.REF_CODE5 = ''Y'' THEN ''Y'' ELSE ''N'' END)) BETWEEN   B.REF_CODE3 AND B.REF_CODE4 THEN
                                                                             B.REF_CODE6 ELSE  0
                                                                  END
                                                                  ELSE  B.REF_CODE6
                                                             END
                                                             ELSE  0
                                                        END
                                                        ELSE
                                                             CASE WHEN B.REF_CODE2 = ''Y'' THEN
                                                                  CASE WHEN uniLITE.fnGetAge(M.PAY_YYYYMM,
                                                                                             (CASE WHEN SUBSTRING(uniLITE.fnCipherDecrypt(REPRE_NUM, ''''),7,1) IN (3,4) THEN 20 ELSE 19 END) + LEFT(uniLITE.fnCipherDecrypt(REPRE_NUM,'''' ),4),
                                                                                             (CASE WHEN B.REF_CODE5 = ''Y'' THEN ''Y'' ELSE ''N'' END)) BETWEEN   B.REF_CODE3 AND B.REF_CODE4 THEN
                                                                             B.REF_CODE6
                                                                       ELSE  0
                                                                  END
                                                                  ELSE  B.REF_CODE6
                                                             END
                                                   END,0) AS AMT
                                   FROM unilite.HUM200T A WITH (NOLOCK) INNER JOIN
                                        unilite.BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.MAIN_CODE = ''H196''
                                                               AND B.SUB_CODE  = A.REL_CODE
                                  WHERE A.COMP_CODE   = M.COMP_CODE
                                    AND A.PERSON_NUMB = M.PERSON_NUMB) AS X'
                                                     
                        WHEN '28'
                              THEN 'SELECT SUM(ISNULL(AMOUNT_I,0))
                                      FROM      HBS210T_DTL A WITH (NOLOCK)
                                     INNER JOIN BSA100T     B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                           AND B.MAIN_CODE = ''H035''
                                                                           AND B.SUB_CODE  = A.WAGES_CODE
                                     WHERE A.COMP_CODE   = M.COMP_CODE
                                       AND A.PERSON_NUMB = M.PERSON_NUMB
                                       AND B.REF_CODE2   = ''1'''

                         WHEN '29'
                              THEN 'SELECT ISNULL(SUM(X.AMT),1000)
                                        FROM (
                             SELECT DATEDIFF(DAY,CASE WHEN M.PAY_YYYYMM + ''01'' &lt;= a.FROM_DATE THEN a.FROM_DATE ELSE M.PAY_YYYYMM + ''01'' END
                                              ,CASE WHEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'')-1,112) &gt;= CONVERT(NVARCHAR(8),DATEADD(DAY,60,a.FROM_DATE) - 1 ,112)
                                       THEN CONVERT(NVARCHAR(8),DATEADD(DAY,60,a.FROM_DATE) - 1 ,112)
                                ELSE CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'')-1,112)
                             END) AS AMT
                             FROM      HUM850T A WITH (NOLOCK)
                            LEFT JOIN BSA100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                             AND B.MAIN_CODE = ''H186''
                            AND  A.OFF_CODE2 = B.SUB_CODE
                            WHERE A.COMP_CODE = M.COMP_CODE
                            AND M.PAY_YYYYMM BETWEEN LEFT(a.FROM_DATE,6) AND LEFT(a.TO_DATE,6)
                            AND a.PERSON_NUMB = M.PERSON_NUMB
                            ) AS X'

                        WHEN '30'
                             THEN 'SELECT  ISNULL(FLOOR((FLOOR((SUM(AMOUNT_I) / (DATEDIFF(DAY, DATEADD(MONTH,CONVERT(NUMERIC(2),MAX(CASE WHEN ISNULL(D.REF_CODE6,'''') = '''' THEN 0 ELSE D.REF_CODE6 END)),LEFT(MAX(C.VALIDITYFR_DATE),6)  + ''01'')
                                                          , DATEADD(DAY,-1,LEFT(MAX(C.VALIDITYFR_DATE),6)  + ''01'')) + 1)) /10) * 10 ) * MAX(CASE WHEN ISNULL(D.REF_CODE5,'''') = '''' THEN 0 ELSE CONVERT(NUMERIC(2,2),D.REF_CODE5) END)/10) * 10,0)
                                      FROM      HPA300T A WITH (NOLOCK)
                                     INNER JOIN HBS300T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                       AND B.WAGES_CODE  = A.WAGES_CODE
                                     INNER JOIN HUM810T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                                       AND C.PERSON_NUMB = A.PERSON_NUMB
                                      LEFT JOIN BSA100T D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
                                                                       AND D.MAIN_CODE   = ''H096''
                                                                       AND D.SUB_CODE    = C.KIND_PRIZE_PENALTY
                                    WHERE A.COMP_CODE   = M.COMP_CODE
                                      AND A.PERSON_NUMB = M.PERSON_NUMB
                                      AND B.RETR_WAGES  = ''Y''
                                      AND D.REF_CODE7   = ''30''
                                      AND M.PAY_YYYYMM BETWEEN LEFT(C.VALIDITYFR_DATE,6)
                                                           AND LEFT(C.VALIDITY_DATE ,6)
                                      AND A.PAY_YYYYMM BETWEEN CONVERT(CHAR(6),DATEADD(MONTH,CONVERT(NUMERIC(2),CASE WHEN ISNULL(D.REF_CODE6,'''') = '''' THEN 0 ELSE D.REF_CODE6 END),LEFT(C.VALIDITYFR_DATE,6)  + ''01''),112)
                                                           AND CONVERT(CHAR(6),DATEADD(DAY,-1,LEFT(C.VALIDITYFR_DATE,6)  + ''01''),112)'

                          WHEN '31'
                               THEN 'SELECT DATEDIFF(DAY,CASE WHEN A.VALIDITYFR_DATE &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01'' ELSE A.VALIDITYFR_DATE END
                                                       ,CASE WHEN A.VALIDITY_DATE   &gt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112) THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112) ELSE  A.VALIDITY_DATE END ) + 1
                                      FROM      HUM810T A WITH (NOLOCK)
                                     INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE AND B.MAIN_CODE =''H096'' AND B.SUB_CODE = A.KIND_PRIZE_PENALTY
                                     WHERE A.COMP_CODE   = M.COMP_CODE
                                       AND A.PERSON_NUMB = M.PERSON_NUMB
                                       AND B.REF_CODE7   = ''31''
                                       AND M.PAY_YYYYMM BETWEEN LEFT(A.VALIDITYFR_DATE,6) AND LEFT(A.VALIDITY_DATE ,6)
                                       AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM'

                          WHEN '32'
                               THEN 'SELECT ISNULL(DATEDIFF(DAY,CASE WHEN A.VALIDITYFR_DATE &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01'' ELSE A.VALIDITYFR_DATE END
                                                              ,CASE WHEN CASE WHEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1 &lt; CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                                                                                                                                      THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 ELSE A.VALIDITY_DATE END
                                                              THEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1
                                              ELSE CASE WHEN ISNULL(A.VALIDITY_DATE ,'''') = ''''
                                            THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1
                                ELSE A.VALIDITY_DATE
                                   END
                                             END   &gt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112) THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112)
                                                ELSE  CASE WHEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1 &lt; CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                                                                                                                               THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1 ELSE A.VALIDITY_DATE END
                                                               THEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1
                                               ELSE CASE WHEN ISNULL(A.VALIDITY_DATE ,'''') = ''''
                                             THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1
                                 ELSE A.VALIDITY_DATE
                                END
                                              END
                                   END ) + 1,0)
                                  FROM      HUM810T A WITH (NOLOCK)
                                 INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE =''H096''
                                   AND B.SUB_CODE  = A.KIND_PRIZE_PENALTY
                                 WHERE A.COMP_CODE    = M.COMP_CODE
                                   AND A.PERSON_NUMB  = M.PERSON_NUMB
                                   AND B.REF_CODE7    = ''32''
                                   AND M.PAY_YYYYMM   BETWEEN LEFT(A.VALIDITYFR_DATE,6) AND LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1,112) ,6)
                                   AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM'

                          WHEN '33'
                               THEN 'SELECT ISNULL(DATEDIFF(DAY,CASE WHEN M.PAY_YYYYMM + ''01'' &lt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE),112)
                                                                    THEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE )
                                ELSE M.PAY_YYYYMM + ''01''
                                   END
                                                              ,CASE WHEN (CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                   THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1,112)
                                   ELSE A.VALIDITY_DATE
                                  END) &lt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1,112)
                                        THEN (CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                   THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1,112)
                                   ELSE A.VALIDITY_DATE
                                  END)
                                ELSE CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1,112)
                                END)+1,0)
                                  FROM      HUM810T A WITH (NOLOCK)
                                 INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE =''H096''
                                   AND B.SUB_CODE  = A.KIND_PRIZE_PENALTY
                                 WHERE A.COMP_CODE    = M.COMP_CODE
                                   AND A.PERSON_NUMB  = M.PERSON_NUMB
                                   AND B.REF_CODE7    = ''32''
                                   AND M.PAY_YYYYMM   BETWEEN LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1,112) ,6)
                                                          AND LEFT(CONVERT(NVARCHAR(8),CASE WHEN ISNULL(A.VALIDITY_DATE ,'''') = '''' THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1 ELSE A.VALIDITY_DATE END ,112),6)'
                                                          
                                                          
                         WHEN '34'
                             THEN 'SELECT ISNULL(SUM(ISNULL(CONVERT(NUMERIC(10,0),B.REF_CODE1),0)),0)
                                      FROM      HUM600T A WITH (NOLOCK)
                                      LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                       AND B.MAIN_CODE = ''H022''
                                       AND B.SUB_CODE = A.QUAL_CODE
                                     WHERE A.COMP_CODE   = M.COMP_CODE
                                       AND A.PERSON_NUMB = M.PERSON_NUMB
                                       AND ISNULL(B.REF_CODE1,0) &gt; 0
                                       AND M.PAY_YYYYMM BETWEEN LEFT(ACQ_DATE,6) AND CASE WHEN ISNULL(A.VALI_DATE,'''') = '''' THEN LEFT(M.PAY_YYYYMM,6) ELSE LEFT(A.VALI_DATE,6) END
                                       AND A.TEMPC_01 = ''Y'''

                        WHEN '35'
                             THEN 'SELECT ISNULL(SUM(ISNULL(CONVERT(NUMERIC(10,0),B.REF_CODE2),0)),0)
                                      FROM      HUM600T A WITH (NOLOCK)
                                      LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                       AND B.MAIN_CODE = ''H022''
                                       AND B.SUB_CODE = A.QUAL_CODE
                                     WHERE A.COMP_CODE   = M.COMP_CODE
                                       AND A.PERSON_NUMB = M.PERSON_NUMB
                                       AND ISNULL(B.REF_CODE2,0) &gt; 0
                                       AND M.PAY_YYYYMM BETWEEN LEFT(ACQ_DATE,6) AND CASE WHEN ISNULL(A.VALI_DATE,'''') = '''' THEN LEFT(M.PAY_YYYYMM,6) ELSE LEFT(A.VALI_DATE,6) END
                                       AND A.TEMPC_01 = ''Y'''
                        WHEN '37'
                            THEN 'SELECT SUM(WORK_TIME)
                                  FROM (
                                SELECT ISNULL(DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,DUTY_FR_D - 2,M.PAY_YYYYMM+''01'') ,23)+'' ''+FORMAT(DUTY_FR_H,''00'')+'':''+FORMAT(DUTY_FR_M,''00'')
                                 ,CONVERT(NVARCHAR(10),DATEADD(DAY,DUTY_TO_D - 2,M.PAY_YYYYMM+''01'') ,23)+'' ''+FORMAT(DUTY_TO_H,''00'')+'':''+FORMAT(DUTY_TO_M,''00''))
                                 - CASE WHEN REST_FR_D_01='''' THEN 0
                                ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_01 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_01,''00'')+'':''+FORMAT(REST_FR_M_01,''00'')
                                ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_01 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_01,''00'')+'':''+FORMAT(REST_TO_M_01,''00''))  END
                                 - CASE WHEN REST_FR_D_02='''' THEN 0
                                ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_02 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_02,''00'')+'':''+FORMAT(REST_FR_M_02,''00'')
                                ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_02 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_02,''00'')+'':''+FORMAT(REST_TO_M_02,''00''))  END
                                 - CASE WHEN REST_FR_D_03='''' THEN 0
                                ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_03 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_03,''00'')+'':''+FORMAT(REST_FR_M_03,''00'')
                                ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_03 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_03,''00'')+'':''+FORMAT(REST_TO_M_03,''00''))  END
                                 - CASE WHEN REST_FR_D_04='''' THEN 0
                                ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_04 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_04,''00'')+'':''+FORMAT(REST_FR_M_04,''00'')
                                ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_04 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_04,''00'')+'':''+FORMAT(REST_TO_M_04,''00''))  END,8) AS WORK_TIME
                                  FROM HBS600T X WITH (NOLOCK)
                                  LEFT JOIN (SELECT A.DUTY_YYYYMMDD , C.*
                                       FROM      HAT400T A WITH (NOLOCK)
                                      INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                            AND B.MAIN_CODE =''H004''
                                                                                 AND B.SUB_CODE = A.WORK_TEAM
                                         AND B.REF_CODE1 = ''Y''
                                      INNER JOIN HAT100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                        AND C.WORK_TEAM = A.WORK_TEAM
                                              WHERE A.COMP_CODE        = M.COMP_CODE
                                        AND A.PERSON_NUMB      = M.PERSON_NUMB
                                                AND A.DUTY_YYYYMMDD LIKE M.PAY_YYYYMM + ''%'' ) AS Y ON X.COMP_CODE = Y.COMP_CODE
                                                                                  AND X.CAL_DATE = Y.DUTY_YYYYMMDD
                                 WHERE X.CAL_DATE LIKE M.PAY_YYYYMM + ''%'') AS Y'

                       WHEN '38'
                            THEN 'SELECT ISNULL(CASE WHEN CONVERT(NVARCHAR(8),DATEADD(DAY, B.REF_CODE6 - (ISNULL(DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1,0)), A.FROM_DATE),112) &gt; DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 THEN 0
                                                   ELSE DATEDIFF(DAY,CASE WHEN DATEADD(DAY, B.REF_CODE6 - (ISNULL(DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1,0)), A.FROM_DATE) &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01''
                                                                          ELSE DATEADD(DAY, B.REF_CODE6 - (ISNULL(DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1,0)), A.FROM_DATE) END
                                                                    ,CASE WHEN A.TO_DATE &lt;= DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 THEN A.TO_DATE
                                                                          ELSE DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 END)  + 1
                                              END -
                                              CASE WHEN LEFT(A.SLRY_APLC_YM,6) != LEFT(A.FROM_DATE,6) AND M.PAY_YYYYMM = A.SLRY_APLC_YM THEN
                                                   CASE WHEN CONVERT(NVARCHAR(8),DATEADD(DAY, B.REF_CODE6 - (ISNULL(DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1,0)), A.FROM_DATE),112) &gt; CONVERT(NVARCHAR(8),DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'')-1,112) THEN 0
                                                        ELSE  DATEDIFF(DAY,DATEADD(DAY, B.REF_CODE6 - (ISNULL(DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1,0)), A.FROM_DATE), DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'')-1) + 1 END
                                              ELSE 0 END,0)
                                    FROM      HUM850T A WITH (NOLOCK)
                                   INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                     AND B.MAIN_CODE =''H186''
                                                                     AND B.SUB_CODE  = A.OFF_CODE2
                                    LEFT JOIN HUM850T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                                     AND C.PERSON_NUMB = A.PERSON_NUMB
                                                                     AND C.OCCUR_DATE = A.OCCUR_DATE
                                                                     AND C.OFF_CODE1 = A.OFF_CODE1
                                                                     AND C.OFF_CODE2 = A.OFF_CODE2
                                                                     AND C.FROM_DATE &lt; A.FROM_DATE
                                   WHERE A.COMP_CODE   =  M.COMP_CODE
                                     AND A.PERSON_NUMB =  M.PERSON_NUMB
                                     AND B.REF_CODE5   = ''Y''
                                     AND A.OFF_CODE1   = ''1''
                                     AND M.PAY_YYYYMM BETWEEN LEFT(A.FROM_DATE,6) AND LEFT(A.TO_DATE,6)
                                     AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM'


                    WHEN '39'
                        THEN 'SELECT ISNULL(CASE WHEN LEFT(A.SLRY_APLC_YM,6) != LEFT(A.FROM_DATE,6) AND M.PAY_YYYYMM = A.SLRY_APLC_YM THEN
                                           CASE WHEN CONVERT(NVARCHAR(8),DATEADD(DAY, 60 - (DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1), A.FROM_DATE),112) &gt; CONVERT(NVARCHAR(8),DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'')-1,112) THEN 0
                                                ELSE  DATEDIFF(DAY,DATEADD(DAY, 60 - (DATEDIFF(DAY,C.FROM_DATE,C.TO_DATE) + 1), A.FROM_DATE), DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'')-1) + 1 END
                                      ELSE 0 END,0)
                                FROM      HUM850T A WITH (NOLOCK)
                               INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                 AND B.MAIN_CODE =''H186''
                                                                 AND B.SUB_CODE  = A.OFF_CODE2
                                LEFT JOIN HUM850T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                                 AND C.PERSON_NUMB = A.PERSON_NUMB
                                                                 AND C.OCCUR_DATE = A.OCCUR_DATE
                                                                 AND C.OFF_CODE1 = A.OFF_CODE1
                                                                 AND C.OFF_CODE2 = A.OFF_CODE2
                                                                 AND C.FROM_DATE &lt; A.FROM_DATE
                               WHERE A.COMP_CODE   =  M.COMP_CODE
                                 AND A.PERSON_NUMB =  M.PERSON_NUMB
                                 AND B.REF_CODE5   = ''Y''
                                 AND A.OFF_CODE1   = ''1''
                                 AND LEFT(A.SLRY_APLC_YM,6) != LEFT(A.FROM_DATE,6) AND M.PAY_YYYYMM = LEFT(A.SLRY_APLC_YM,6)'

                    WHEN '40'
                        THEN 'SELECT SUM(AMT)
                              FROM (SELECT ISNULL(DATEDIFF(DAY , CASE WHEN A.FROM_DATE &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01'' ELSE FROM_DATE END
                                                               , CASE WHEN A.TO_DATE   &gt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112) THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 ELSE A.TO_DATE END) + 1,0) AS AMT
                                      FROM      HUM850T A WITH (NOLOCK)
                                     INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                       AND B.MAIN_CODE =''H186''
                                                                       AND B.SUB_CODE  = A.OFF_CODE2
                                     WHERE A.COMP_CODE   = M.COMP_CODE
                                       AND A.PERSON_NUMB = M.PERSON_NUMB
                                       AND B.REF_CODE7   = ''40''
                                       AND A.OFF_CODE1   = ''1''
                                       AND M.PAY_YYYYMM BETWEEN LEFT(A.FROM_DATE,6) AND LEFT(A.TO_DATE,6)
                                       AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM) AS X'

                    WHEN '41'
                        THEN 'SELECT DATEDIFF(DAY, A.FROM_DATE , DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'') -1) + 1
                              FROM      HUM850T A WITH (NOLOCK)
                             INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.MAIN_CODE =''H186''
                                                               AND B.SUB_CODE  = A.OFF_CODE2
                             WHERE A.COMP_CODE   = M.COMP_CODE
                               AND A.PERSON_NUMB = M.PERSON_NUMB
                               AND B.REF_CODE7   = ''40''
                               AND A.OFF_CODE1   = ''1''
                               AND A.SLRY_APLC_YM != LEFT(A.FROM_DATE,6)
                               AND A.SLRY_APLC_YM = M.PAY_YYYYMM'

                    WHEN '42'
                        THEN 'SELECT ISNULL(DATEDIFF(DAY , CASE WHEN A.FROM_DATE &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01'' ELSE FROM_DATE END
                               , CASE WHEN A.TO_DATE   &gt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1,112) THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') - 1 ELSE A.TO_DATE END) + 1,0)
                              FROM      HUM850T A WITH (NOLOCK)
                             INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.MAIN_CODE =''H186''
                                                               AND B.SUB_CODE  = A.OFF_CODE2
                             WHERE A.COMP_CODE   = M.COMP_CODE
                               AND A.PERSON_NUMB = M.PERSON_NUMB
                               AND B.REF_CODE7   = ''42''
                               AND A.OFF_CODE1   = ''1''
                               AND M.PAY_YYYYMM BETWEEN LEFT(A.FROM_DATE,6) AND LEFT(A.TO_DATE,6)
                              AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM'

                    WHEN '43'
                        THEN 'SELECT DATEDIFF(DAY, A.FROM_DATE , DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'') -1) + 1
                              FROM      HUM850T A WITH (NOLOCK)
                             INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.MAIN_CODE =''H186''
                                                               AND B.SUB_CODE  = A.OFF_CODE2
                             WHERE A.COMP_CODE   = M.COMP_CODE
                               AND A.PERSON_NUMB = M.PERSON_NUMB
                               AND B.REF_CODE7   = ''42''
                               AND A.OFF_CODE1   = ''1''
                               AND A.SLRY_APLC_YM != LEFT(A.FROM_DATE,6)
                               AND A.SLRY_APLC_YM = M.PAY_YYYYMM'

                    WHEN '44'
                          THEN 'SELECT DATEDIFF(DAY,CASE WHEN A.VALIDITYFR_DATE &lt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) ELSE A.VALIDITYFR_DATE END
                                                   ,CASE WHEN A.VALIDITY_DATE   &gt;= CONVERT(NVARCHAR(8),DATEADD(DAY,-1,M.PAY_YYYYMM + ''01'') ,112) THEN CONVERT(NVARCHAR(8),DATEADD(DAY,-1,M.PAY_YYYYMM + ''01'') ,112) ELSE  A.VALIDITY_DATE END ) + 1
                                  FROM      HUM810T A WITH (NOLOCK)
                                 INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE AND B.MAIN_CODE =''H096'' AND B.SUB_CODE = A.KIND_PRIZE_PENALTY
                                 WHERE A.COMP_CODE   = M.COMP_CODE
                                   AND A.PERSON_NUMB = M.PERSON_NUMB
                                   AND B.REF_CODE7   = ''31''
                                   AND A.SLRY_APLC_YM != LEFT(A.VALIDITY_DATE,6)
                                   AND A.SLRY_APLC_YM = M.PAY_YYYYMM'

                    WHEN '45'
                        THEN 'SELECT ISNULL(DATEDIFF(DAY,CASE WHEN A.VALIDITYFR_DATE &lt;= CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01''),112) ELSE A.VALIDITYFR_DATE END
                                                      ,CASE WHEN CASE WHEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1 &lt; CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                                                                                                                              THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1 ELSE A.VALIDITY_DATE END
                                                      THEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1
                                      ELSE CASE WHEN ISNULL(A.VALIDITY_DATE ,'''') = ''''
                                    THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'')
                        ELSE A.VALIDITY_DATE
                           END
                                     END   &gt;= CONVERT(NVARCHAR(8),DATEADD(DAY,-1,M.PAY_YYYYMM + ''01''),112) THEN CONVERT(NVARCHAR(8),DATEADD(DAY,-1,M.PAY_YYYYMM + ''01''),112)
                                        ELSE CASE WHEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1 &lt; CASE WHEN ISNULL(A.VALIDITY_DATE,'''') = ''''
                                                                                                                                                      THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1 ELSE A.VALIDITY_DATE END
                                                      THEN DATEADD(MONTH,CASE WHEN ISNULL(B.REF_CODE6,'''') = '''' THEN 0 ELSE B.REF_CODE6 END ,A.VALIDITYFR_DATE ) -1
                                      ELSE CASE WHEN ISNULL(A.VALIDITY_DATE ,'''') = ''''
                                    THEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'') -1
                        ELSE A.VALIDITY_DATE
                           END
                                     END
                           END ) + 1,0)
                          FROM      HUM810T A WITH (NOLOCK)
                         INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                           AND B.MAIN_CODE =''H096''
                           AND B.SUB_CODE = A.KIND_PRIZE_PENALTY
                         WHERE A.COMP_CODE     = M.COMP_CODE
                           AND A.PERSON_NUMB   = M.PERSON_NUMB
                           AND B.REF_CODE7     = ''32''
                           AND A.SLRY_APLC_YM != LEFT(A.VALIDITYFR_DATE,6)
                           AND A.SLRY_APLC_YM  = M.PAY_YYYYMM'

                    WHEN '46'
                        THEN 'SELECT SUM(WORK_TIME)
                              FROM (
                            SELECT ISNULL(DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,DUTY_FR_D - 2,M.PAY_YYYYMM+''01'') ,23)+'' ''+FORMAT(DUTY_FR_H,''00'')+'':''+FORMAT(DUTY_FR_M,''00'')
                             ,CONVERT(NVARCHAR(10),DATEADD(DAY,DUTY_TO_D - 2,M.PAY_YYYYMM+''01'') ,23)+'' ''+FORMAT(DUTY_TO_H,''00'')+'':''+FORMAT(DUTY_TO_M,''00''))
                             - CASE WHEN REST_FR_D_01='''' THEN 0
                            ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_01 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_01,''00'')+'':''+FORMAT(REST_FR_M_01,''00'')
                            ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_01 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_01,''00'')+'':''+FORMAT(REST_TO_M_01,''00''))  END
                             - CASE WHEN REST_FR_D_02='''' THEN 0
                            ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_02 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_02,''00'')+'':''+FORMAT(REST_FR_M_02,''00'')
                            ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_02 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_02,''00'')+'':''+FORMAT(REST_TO_M_02,''00''))  END
                             - CASE WHEN REST_FR_D_03='''' THEN 0
                            ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_03 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_03,''00'')+'':''+FORMAT(REST_FR_M_03,''00'')
                            ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_03 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_03,''00'')+'':''+FORMAT(REST_TO_M_03,''00''))  END
                             - CASE WHEN REST_FR_D_04='''' THEN 0
                            ELSE DATEDIFF(HH,CONVERT(NVARCHAR(10),DATEADD(DAY,REST_FR_D_04 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_FR_H_04,''00'')+'':''+FORMAT(REST_FR_M_04,''00'')
                            ,CONVERT(NVARCHAR(10),DATEADD(DAY,rest_to_d_04 - 2,M.PAY_YYYYMM+''01''),23)+'' ''+FORMAT(REST_TO_H_04,''00'')+'':''+FORMAT(REST_TO_M_04,''00''))  END,8) AS WORK_TIME
                              FROM HBS600T X WITH (NOLOCK)
                              LEFT JOIN (SELECT A.DUTY_YYYYMMDD , C.*
                                   FROM      HAT400T A WITH (NOLOCK)
                                  INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                        AND B.MAIN_CODE =''H004''
                                                                             AND B.SUB_CODE = A.WORK_TEAM
                                     AND B.REF_CODE1 = ''Y''
                                  INNER JOIN HAT100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                    AND C.WORK_TEAM = A.WORK_TEAM
                                          WHERE A.COMP_CODE        = M.COMP_CODE
                                    AND A.PERSON_NUMB      = M.PERSON_NUMB
                                            AND A.DUTY_YYYYMMDD LIKE M.PAY_YYYYMM + ''%'' ) AS Y ON X.COMP_CODE = Y.COMP_CODE
                                                                              AND X.CAL_DATE = Y.DUTY_YYYYMMDD
                             WHERE X.CAL_DATE LIKE M.PAY_YYYYMM + ''%'') AS Y'

                    WHEN '47'
                        THEN 'SELECT SUM(ISNULL(AMOUNT_I,0))
                                  FROM      HBS210T_DTL A
                                 INNER JOIN HUM100T B ON A.COMP_CODE    = B.COMP_CODE
                                                     AND A.PERSON_NUMB = B.PERSON_NUMB
                               WHERE B.COMP_CODE    = M.COMP_CODE
                                  AND B.PERSON_NUMB = M.PERSON_NUMB
                                  AND A.PAY_YYYY    = LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112),4)'

                    WHEN '48'
                        THEN 'SELECT ISNULL(DATEDIFF(DAY , CASE WHEN A.FROM_DATE &lt;= M.PAY_YYYYMM + ''01'' THEN M.PAY_YYYYMM + ''01'' ELSE A.FROM_DATE END
                                                           , CASE WHEN DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'')-1 &lt;= DATEADD(DAY, CONVERT(INT , B.REF_CODE6), A.FROM_DATE)-1
                                          THEN CONVERT(NVARCHAR(8),DATEADD(MONTH,1,M.PAY_YYYYMM + ''01'')-1,112)
                                                              ELSE CONVERT(NVARCHAR(8),DATEADD(DAY, CONVERT(INT , B.REF_CODE6), A.FROM_DATE)-1,112)
                                 END) + 1,0)

                                  FROM      HUM850T A WITH (NOLOCK)
                                 INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE =''H186''
                                                                   AND B.SUB_CODE  = A.OFF_CODE2
                                 WHERE A.COMP_CODE   = M.COMP_CODE
                                   AND A.PERSON_NUMB = M.PERSON_NUMB
                                   AND B.REF_CODE7   = ''48''
                                   AND A.OFF_CODE1   = ''1''
                                   AND M.PAY_YYYYMM BETWEEN LEFT(A.FROM_DATE,6) AND LEFT(A.TO_DATE,6)
                                  AND A.SLRY_APLC_YM &lt;= M.PAY_YYYYMM'

                    WHEN '49'
                        THEN 'SELECT DATEDIFF(DAY, A.FROM_DATE , DATEADD(MONTH,1,LEFT(A.FROM_DATE,6) + ''01'') -1) + 1
                                  FROM      HUM850T A WITH (NOLOCK)
                                 INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE =''H186''
                                                                   AND B.SUB_CODE  = A.OFF_CODE2
                                 WHERE A.COMP_CODE   = M.COMP_CODE
                                   AND A.PERSON_NUMB = M.PERSON_NUMB
                                   AND B.REF_CODE7   = ''48''
                                   AND A.OFF_CODE1   = ''1''
                                   AND A.SLRY_APLC_YM != LEFT(A.FROM_DATE,6)
                                   AND A.SLRY_APLC_YM = M.PAY_YYYYMM'

                    WHEN '50'
                        THEN 'SELECT ISNULL(SUM(ISNULL(CONVERT(NUMERIC(10,0),B.REF_CODE1),0)),0)
                                  FROM      HUM600T A WITH (NOLOCK)
                                  LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE = ''H022''
                                   AND B.SUB_CODE = A.QUAL_CODE
                                 WHERE A.COMP_CODE   = M.COMP_CODE
                                   AND A.PERSON_NUMB = M.PERSON_NUMB
                                   AND ISNULL(B.REF_CODE1,0) &gt; 0
                                   AND CONVERT(NVARCHAR(6),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) BETWEEN LEFT(ACQ_DATE,6) AND CASE WHEN ISNULL(A.VALI_DATE,'''') = '''' THEN CONVERT(NVARCHAR(6),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) ELSE LEFT(A.VALI_DATE,6) END
                                   AND A.TEMPC_01 = ''Y'''

                    WHEN '51'
                        THEN 'SELECT ISNULL(SUM(ISNULL(CONVERT(NUMERIC(10,0),B.REF_CODE2),0)),0)
                                  FROM      HUM600T A WITH (NOLOCK)
                                  LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                   AND B.MAIN_CODE = ''H022''
                                   AND B.SUB_CODE = A.QUAL_CODE
                                 WHERE A.COMP_CODE   = M.COMP_CODE
                                   AND A.PERSON_NUMB = M.PERSON_NUMB
                                   AND ISNULL(B.REF_CODE2,0) &gt; 0
                                   AND CONVERT(NVARCHAR(6),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) BETWEEN LEFT(ACQ_DATE,6) AND CASE WHEN ISNULL(A.VALI_DATE,'''') = '''' THEN CONVERT(NVARCHAR(6),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112) ELSE LEFT(A.VALI_DATE,6) END
                                   AND A.TEMPC_01 = ''Y'''   
                                   
                   WHEN '52'
                        THEN 'SELECT CASE WHEN (DATEDIFF(DAY, A.JOIN_DATE , LEFT(M.PAY_YYYYMM,4) + B.REF_CODE1) + 1) / 30 &gt;=5 THEN ''Y'' ELSE ''N'' END
                              FROM HUM100T A WITH (NOLOCK)
                              LEFT JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                               AND B.MAIN_CODE = ''H098''
                               AND B.SUB_CODE = ''52''
                             WHERE A.COMP_CODE = M.COMP_CODE
                               AND A.PERSON_NUMB = M.PERSON_NUMB
                               AND ISNULL(A.RETR_DATE ,''00000000'') = ''00000000''
                               AND A.ABIL_CODE != B.REF_CODE2'                                                          
  */                                                                                      
                --ELSE ''
                ELSE ISNULL(REF_CODE1,'') + ' ' + ISNULL(REF_CODE2,'')

             END) AS SELECT_SNYTAX
         , 'H098' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'H098'
       AND SUB_CODE &lt;&gt; '$'
     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '2' AS GUBUN
         , WAGES_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0015') + ')' AS WAGES_NAME
         , WAGES_CODE
         , 'HBS300T' AS TABLE_NAME
         , 'WAGES_CODE' AS WHERE_COLUMN
         , '2' AS TYPE
         , 'SELECT WAGES_I
              FROM HBS200T A
                           INNER JOIN HUM100T B
                                   ON A.COMP_CODE    = B.COMP_CODE
                                  AND A.PAY_GRADE_01 = B.PAY_GRADE_01
                                  AND A.PAY_GRADE_02 = B.PAY_GRADE_02
             WHERE B.COMP_CODE   = M.COMP_CODE
               AND B.PERSON_NUMB = M.PERSON_NUMB
               AND A.PAY_GRADE_YYYY  = LEFT(M.PAY_YYYYMM,4)
               AND WAGES_CODE =' AS SELECT_SNYTAX
         , 'HBS200T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
      FROM HBS300T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND WAGES_KIND = '1'
     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '2'                    AS GUBUN
         , WAGES_NAME + '(' + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0128') + ')' AS WAGES_NAME
         , WAGES_CODE
         , 'HBS300T'     AS TABLE_NAME
         , 'WAGES_CODE'  AS WHERE_COLUMN
         , '2' AS TYPE
         , 'SELECT SUM(AMOUNT_I) AS AMOUNT_I
              FROM            HPA300T AS A
                   INNER JOIN HUM100T AS B ON B.COMP_CODE   = A.COMP_CODE
                                          AND B.PERSON_NUMB = A.PERSON_NUMB
             WHERE B.COMP_CODE   = M.COMP_CODE
               AND B.PERSON_NUMB = M.PERSON_NUMB
               AND A.PAY_YYYYMM  = CONVERT(NVARCHAR(06),DATEADD(MM,-1, M.PAY_YYYYMM +''01''),112)' +
               'AND (A.SUPP_TYPE  = M.SUPP_TYPE OR A.SUPP_TYPE = M2.REF_CODE1)
               AND A.WAGES_CODE  =' AS SELECT_SNYTAX
         , 'BFHBS300T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
      FROM HBS300T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND WAGES_CODE = '100'
       AND WAGES_KIND = '1'

     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '3' AS GUBUN
         , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0016')       AS WAGES_NAME
         , '900' AS WAGES_CODE
         , '000T' AS TABLE_NAME
         , '0000' AS WHERE_COLUMN
         , '9' AS TYPE
         , 'SELECT SUPP_TYPE
                 , OT_KIND_01
                 , OT_KIND_02
                 , OT_KIND_FULL
                 , STD_CODE
                 , CALCU_SEQ
                 , SELECT_VALUE
                 , SELECT_NAME
                 , TABLE_NAME
                 , WHERE_COLUMN


                 , TYPE
                 , SELECT_SYNTAX
                 , UNIQUE_CODE
              FROM HBS000T
             WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX
         , 'HBSGUNSOK' AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE

     UNION ALL

    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '3' AS GUBUN
         , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0127') AS WAGES_NAME

         , '901' AS WAGES_CODE
         , '000T' AS TABLE_NAME
         , '0000' AS WHERE_COLUMN
         , '9' AS TYPE
         , 'SELECT SUPP_TYPE
                 , OT_KIND_01
                 , OT_KIND_02
                 , OT_KIND_FULL
                 , STD_CODE
                 , CALCU_SEQ
                 , SELECT_VALUE
                 , SELECT_NAME
                 , TABLE_NAME
                 , WHERE_COLUMN
                 , TYPE
                 , SELECT_SYNTAX
                 , UNIQUE_CODE
              FROM HBS000T
             WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX
         , 'HBSGUNSOK2' AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE

     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '4' AS GUBUN
         , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0017')       AS WAGES_NAME
         , '910' AS WAGES_CODE
         , '000T' AS TABLE_NAME
         , '0000' AS WHERE_COLUMN
         , '8' AS TYPE
         , 'SELECT SUPP_TYPE
                 , OT_KIND_01
                 , OT_KIND_02
                 , OT_KIND_FULL
                 , STD_CODE
                 , CALCU_SEQ
                 , SELECT_VALUE
                 , SELECT_NAME
                 , TABLE_NAME
                 , WHERE_COLUMN
                 , TYPE
                 , SELECT_SYNTAX
                 , UNIQUE_CODE
              FROM HBS000T
             WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX
         , 'BONUSGUNSOK' AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
     UNION ALL
    SELECT uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0020') + '5' AS GUBUN
         , uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0002') + CODE_NAME + uniLIte.fnGetTxtLang(#{S_LANG_CODE}, 'H0123') AS WAGES_NAME
         , SUB_CODE AS WAGES_CODE
         , 'HBS220T' AS TABLE_NAME
         , 'H032' AS WHERE_COLUMN
         , '11' AS TYPE
         , 'SELECT DEPART_RATE
              FROM HBS220T A
                           INNER JOIN HUM100T B
                                   ON A.COMP_CODE    = B.COMP_CODE
                                  AND A.TREE_CODE    = B.DEPT_CODE
             WHERE B.COMP_CODE   = M.COMP_CODE
               AND B.PERSON_NUMB = M.PERSON_NUMB
               AND SUPP_TYPE =' AS SELECT_SNYTAX
         , 'H032' + 'Z' + SUB_CODE AS UNIQUE_CODE
         , CAST(0 AS BIT) AS CHOICE
      FROM BSA100T
     WHERE COMP_CODE =  #{S_COMP_CODE}
       AND MAIN_CODE = 'H032'
       AND SUB_CODE NOT IN ('$', '1', 'F', 'G')

     UNION ALL
     SELECT uniLIte.fnGetTxtLang('Korean', 'H0020') + '2' AS GUBUN
     , WAGES_NAME + '(' + uniLIte.fnGetTxtLang('Korean', 'H0015') + ')' + '(' + uniLIte.fnGetTxtLang('Korean', 'H0128') + ')' AS WAGES_NAME
     , WAGES_CODE
     , 'HBS300T' AS TABLE_NAME
     , 'WAGES_CODE' AS WHERE_COLUMN
     , '2' AS TYPE
     , 'SELECT WAGES_I
        FROM         HBS200T A
        INNER JOIN HUM100T B ON A.COMP_CODE    = B.COMP_CODE
                                       AND A.PAY_GRADE_01 = B.PAY_GRADE_01
                                       AND A.PAY_GRADE_02 = B.PAY_GRADE_02
       WHERE B.COMP_CODE       = M.COMP_CODE
          AND B.PERSON_NUMB     = M.PERSON_NUMB
          AND A.PAY_GRADE_YYYY  = LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112),4)
          AND WAGES_CODE =' AS SELECT_SNYTAX
     , 'BFHBS200T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
     , CAST(0 AS BIT) AS CHOICE
  FROM HBS300T
 WHERE COMP_CODE  = #{S_COMP_CODE}
   AND WAGES_KIND = '1'

    UNION ALL
    SELECT uniLIte.fnGetTxtLang('korean', 'H0020') + '3' AS GUBUN
        , uniLIte.fnGetTxtLang('korean', 'H0016')   + '(' + uniLIte.fnGetTxtLang('Korean', 'H0128') + ')'     AS WAGES_NAME
        , '902' AS WAGES_CODE
        , '000T' AS TABLE_NAME
        , '0000' AS WHERE_COLUMN
        , '9' AS TYPE
        , 'SELECT SUPP_TYPE
                , OT_KIND_01
                , OT_KIND_02
                , OT_KIND_FULL
                , STD_CODE
                , CALCU_SEQ
                , SELECT_VALUE
                , SELECT_NAME
                , TABLE_NAME
                , WHERE_COLUMN
                , TYPE
                , SELECT_SYNTAX
                , UNIQUE_CODE
             FROM HBS000T
            WHERE COMP_CODE = M.COMP_CODE' AS SELECT_SYNTAX
        , 'BFHBSGUNSOK' AS UNIQUE_CODE
        , CAST(0 AS BIT) AS CHOICE

    UNION ALL
    SELECT uniLIte.fnGetTxtLang('Korean', 'H0020') + '2' AS GUBUN
     , CODE_NAME + '(' + uniLIte.fnGetTxtLang('Korean', 'H0128') + ')'  AS WAGES_NAME
     , SUB_CODE
     , 'BSA100T' AS TABLE_NAME
     , 'H035' AS WHERE_COLUMN
     , '3' AS TYPE
     , 'SELECT AMOUNT_I
          FROM      HBS210T_DTL A
         INNER JOIN HUM100T B ON A.COMP_CODE    = B.COMP_CODE
                             AND A.PERSON_NUMB = B.PERSON_NUMB
       WHERE B.COMP_CODE    = M.COMP_CODE
          AND B.PERSON_NUMB = M.PERSON_NUMB
          AND A.PAY_YYYY    = LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112),4)
          AND WAGES_CODE    =' AS SELECT_SNYTAX
     , 'BFH035' + 'Z' + SUB_CODE  AS UNIQUE_CODE
     , CAST(0 AS BIT) AS CHOICE
  FROM BSA100T
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND MAIN_CODE = N'H035'
   AND SUB_CODE != N'$'
   AND REF_CODE3 = '1'

    UNION ALL
    SELECT uniLIte.fnGetTxtLang('Korean', 'H0020') + '2' AS GUBUN
     , CODE_NAME  AS WAGES_NAME
     , SUB_CODE
     , 'BSA100T' AS TABLE_NAME
     , 'H035' AS WHERE_COLUMN
     , '3' AS TYPE
     , 'SELECT AMOUNT_I
          FROM      HBS210T_DTL A
         INNER JOIN HUM100T B ON A.COMP_CODE    = B.COMP_CODE
                             AND A.PERSON_NUMB = B.PERSON_NUMB
       WHERE B.COMP_CODE    = M.COMP_CODE
          AND B.PERSON_NUMB = M.PERSON_NUMB
          AND A.PAY_YYYY    = LEFT(M.PAY_YYYYMM,4)
          AND WAGES_CODE    =' AS SELECT_SNYTAX
     , 'H035' + 'Z' + SUB_CODE  AS UNIQUE_CODE
     , CAST(0 AS BIT) AS CHOICE
  FROM BSA100T
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND MAIN_CODE = N'H035'
   AND SUB_CODE != N'$'
   AND REF_CODE3 = '1'

    UNION ALL
    SELECT uniLIte.fnGetTxtLang('Korean', 'H0020') + '2' AS GUBUN
     , WAGES_NAME + '(' + uniLIte.fnGetTxtLang('Korean', 'H0139') + ')'  AS WAGES_NAME
     , WAGES_CODE
     , 'HBS300T' AS TABLE_NAME
     , 'WAGES_CODE' AS WHERE_COLUMN
     , '2' AS TYPE
     , 'SELECT WAGES_I
          FROM      HBS211T A
         INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE
                             AND A.JOB_CODE  = B.JOB_CODE
         WHERE B.COMP_CODE       = M.COMP_CODE
           AND B.PERSON_NUMB     = M.PERSON_NUMB
           AND A.PAY_GRADE_YYYY  = LEFT(M.PAY_YYYYMM,4)
           AND WAGES_CODE =' AS SELECT_SNYTAX
     , 'HBS211T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
     , CAST(0 AS BIT) AS CHOICE
  FROM HBS300T
 WHERE COMP_CODE  = #{S_COMP_CODE}
     AND WAGES_KIND = '1'

    UNION ALL
    SELECT uniLIte.fnGetTxtLang('Korean', 'H0020') + '2' AS GUBUN
     , WAGES_NAME + '(' + uniLIte.fnGetTxtLang('Korean', 'H0139') + ')' + '(' + uniLIte.fnGetTxtLang('Korean', 'H0128') + ')'  AS WAGES_NAME
     , WAGES_CODE
     , 'HBS300T' AS TABLE_NAME
     , 'WAGES_CODE' AS WHERE_COLUMN
     , '2' AS TYPE
     , 'SELECT WAGES_I
          FROM      HBS211T A
         INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE
                             AND A.JOB_CODE  = B.JOB_CODE
         WHERE B.COMP_CODE       = M.COMP_CODE
           AND B.PERSON_NUMB     = M.PERSON_NUMB
           AND A.PAY_GRADE_YYYY  = LEFT(CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,M.PAY_YYYYMM + ''01''),112),6)
           AND WAGES_CODE =' AS SELECT_SNYTAX
     , 'BFHBS211T' + 'Z' + WAGES_CODE AS UNIQUE_CODE
     , CAST(0 AS BIT) AS CHOICE
  FROM HBS300T
 WHERE COMP_CODE  = #{S_COMP_CODE}
   AND WAGES_KIND = '1'

    </select>

    <insert id="hbs020ukrServiceImpl.insertList15"  parameterType="foren.unilite.modules.human.hbs.Hbs020ukrModel" useGeneratedKeys="false">
    /* hat200ukrServiceImpl.insertList15 */
    INSERT INTO HBS000T
                   ( OT_KIND_01
                   , OT_KIND_02
                   , SUPP_TYPE
                   , OT_KIND_FULL
                   , STD_CODE
                   , CALCU_SEQ
                   , SELECT_VALUE
                   , SELECT_NAME
                   , TABLE_NAME
                   , WHERE_COLUMN
                   , TYPE
                   , SELECT_SYNTAX
                   , UNIQUE_CODE
                   , UPDATE_DB_USER
                   , UPDATE_DB_TIME
                   , COMP_CODE )
            VALUES ( #{OT_KIND_01}     --OT_KIND_01
                   , #{OT_KIND_02}     --OT_KIND_02
                   , #{SUPP_TYPE}      --SUPP_TYPE
                   , #{OT_KIND_FULL}   --OT_KIND_FULL
                   , #{STD_CODE}       --STD_CODE
                   , #{CALCU_SEQ}      --CALCU_SEQ
                   , #{SELECT_VALUE}   --SELECT_VALUE
                   , #{SELECT_NAME}    --SELECT_NAME
                   , #{TABLE_NAME}     --TABLE_NAME
                   , #{WHERE_COLUMN}   --WHERE_COLUMN
                   , #{TYPE}           --TYPE
                   , #{SELECT_SYNTAX}  --SELECT_SYNTAX
                   , #{UNIQUE_CODE}    --UNIQUE_CODE
                   , #{S_USER_ID}      --UPDATE_DB_USER
                   , GETDATE()         --UPDATE_DB_TIME
                   , #{S_COMP_CODE})   --COMP_CODE
    </insert>

    <select id="hbs020ukrServiceImpl.selectHbs000TPkChk" parameterType="foren.unilite.modules.human.hbs.Hbs020ukrModel" resultType="int">
        SELECT COUNT(1)
        FROM HBS000T
        WHERE COMP_CODE  = #{S_COMP_CODE}
        AND STD_CODE   = #{STD_CODE}
        AND OT_KIND_01 = #{OT_KIND_01}
        AND OT_KIND_02 = #{OT_KIND_02}
        AND SUPP_TYPE  = #{SUPP_TYPE}
    </select>
    <delete id="hbs020ukrServiceImpl.deleteHbs000t" parameterType="foren.unilite.modules.human.hbs.Hbs020ukrModel" >
        /*hbs020ukrServiceImpl.deleteHbs000t*/
            DELETE
             FROM HBS000T
             WHERE COMP_CODE  = #{S_COMP_CODE}
             AND STD_CODE   = #{STD_CODE}
             AND OT_KIND_01 = #{OT_KIND_01}
             AND OT_KIND_02 = #{OT_KIND_02}
             AND SUPP_TYPE  = #{SUPP_TYPE}
    </delete>
    <delete id="hbs020ukrServiceImpl.deleteList15" parameterType="rMap">
    /* hat200ukrServiceImpl.deleteList15 */
    DELETE
         FROM HBS000T
         WHERE COMP_CODE  = #{S_COMP_CODE}
         AND STD_CODE   = #{STD_CODE}
         AND REPLACE(OT_KIND_01,'/','') = #{OT_KIND_01}
         AND REPLACE(OT_KIND_02,'/','') = #{OT_KIND_02}
         AND SUPP_TYPE  = #{SUPP_TYPE}
    </delete>
    <!--상여지급기준 등록 상여구분 콤보-->
    <select id="hbs020ukrServiceImpl.getBonusTypeCode" parameterType="rMap" resultType="rMap">
        --UBsaExKrv.CBsaExSKr[fnRecordList] Query07
        SELECT SUB_CODE  as value
             , CODE_NAME as text
             , SUB_CODE  as 'option'
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H032'
           AND SUB_CODE != '$'
           AND SUB_CODE  &gt; '1'
           AND SUB_CODE  &lt; 'E'
         ORDER BY SORT_SEQ, SUB_CODE
    </select>

    <select id="hbs020ukrServiceImpl.selectList18" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList18 */
        SELECT BONUS_KIND
            , BONUS_TYPE
            , STRT_MONTH
            , LAST_MONTH
            , SUPP_RATE
            , SUPP_TOTAL_I
         FROM HBO100T
        WHERE COMP_CODE  = #{S_COMP_CODE}
          AND BONUS_KIND = #{BONUS_KIND}
          AND BONUS_TYPE = #{BONUS_TYPE}
    </select>

    <insert id="hbs020ukrServiceImpl.insertList18" parameterType="Map">
        /*hbs020ukrServiceImpl.insertList18*/
        INSERT INTO HBO100T (COMP_CODE, BONUS_KIND, BONUS_TYPE, STRT_MONTH, LAST_MONTH, SUPP_RATE, SUPP_TOTAL_I, UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
        VALUES(#{S_COMP_CODE}, #{BONUS_KIND}, #{BONUS_TYPE}, #{STRT_MONTH}, #{LAST_MONTH}, #{SUPP_RATE}, #{SUPP_TOTAL_I}, #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE())
    </insert>

    <delete id="hbs020ukrServiceImpl.deleteList18" parameterType="Map">
        /*hbs020ukrServiceImpl.deleteList18*/
        DELETE HBO100T
        WHERE BONUS_KIND = #{BONUS_KIND}
            AND BONUS_TYPE = #{BONUS_TYPE}
            AND STRT_MONTH = #{STRT_MONTH}
            AND LAST_MONTH = #{LAST_MONTH}
            AND SUPP_RATE = #{SUPP_RATE}
            AND SUPP_TOTAL_I = #{SUPP_TOTAL_I}
    </delete>

    <select id="hbs020ukrServiceImpl.selectList18_1" parameterType="rMap" resultType="rMap">
    /* hbs020ukrServiceImpl.selectList18 */
        SELECT BE_BONUS_KIND
            , AF_BONUS_KIND
            , STD_MONTH
         FROM HBO110T
        WHERE COMP_CODE = #{S_COMP_CODE}
    </select>

    <insert id="hbs020ukrServiceImpl.insertList18_1" parameterType="Map">
        /*hbs020ukrServiceImpl.insertList18_1*/
        INSERT INTO HBO110T (COMP_CODE, BE_BONUS_KIND, AF_BONUS_KIND, STD_MONTH, UPDATE_DB_USER, UPDATE_DB_TIME, INSERT_DB_USER, INSERT_DB_TIME)
        VALUES(#{S_COMP_CODE}, #{BE_BONUS_KIND}, #{AF_BONUS_KIND}, #{STD_MONTH}, #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE())
    </insert>

    <delete id="hbs020ukrServiceImpl.deleteList18_1" parameterType="Map">
        /*hbs020ukrServiceImpl.deleteList18_1*/
        DELETE HBO110T
        WHERE BE_BONUS_KIND = #{BE_BONUS_KIND}
            AND AF_BONUS_KIND = #{AF_BONUS_KIND}
            AND STD_MONTH = #{STD_MONTH}
    </delete>

    <insert id="hbs020ukrServiceImpl.insertExcelHbs210t_xls" parameterType="Map">
        /*hbs020ukrServiceImpl.insertExcelHbs210t_xls*/
        INSERT INTO HBS210T_XLS
            (_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, PERSON_NUMB, ANNUAL_SALARY_I, WAGES_STD_I)
        VALUES (
            #{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, #{PERSON_NUMB}, #{ANNUAL_SALARY_I}, #{WAGES_STD_I}
        )
    </insert>

    <update id="hbs020ukrServiceImpl.excelValidate" >
        /*hbs020ukrServiceImpl.excelValidate*/
        UPDATE   A
        SET
                A._EXCEL_HAS_ERROR = (CASE WHEN B.PERSON_NUMB IS NULL
                                           THEN 'Y'
                                      ELSE A._EXCEL_HAS_ERROR
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN B.PERSON_NUMB IS NULL
                                           THEN ISNULL(_EXCEL_ERROR_MSG,'') + '해당 사번의 사원이 존재하지 않습니다. '
                                      ELSE A._EXCEL_ERROR_MSG END)
        FROM HBS210T_XLS A
        LEFT JOIN  HUM100T B    ON B.COMP_CODE= #{S_COMP_CODE}
                                AND A.PERSON_NUMB = B.PERSON_NUMB
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>

    <select id="hbs020ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /*hbs020ukrServiceImpl.selectExcelUploadSheet1*/
        SELECT #{YEAR_YYYY} AS YEAR_YYYY
             , A._EXCEL_JOBID
             , A._EXCEL_ROWNUM
             , A._EXCEL_HAS_ERROR
             , A._EXCEL_ERROR_MSG
             , A.PERSON_NUMB
             , ISNULL(B.NAME, '') AS NAME
             , ISNULL(B.DEPT_NAME, '') AS DEPT_NAME
             , A.ANNUAL_SALARY_I
             , A.WAGES_STD_I
          FROM HBS210T_XLS A
               LEFT JOIN HUM100T B ON B.COMP_CODE = #{S_COMP_CODE}
                                   AND  A.PERSON_NUMB = B.PERSON_NUMB
         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
         ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
    </select>



    <update id="hbs020ukrServiceImpl.insertExcelToMaster" parameterType="Map">
        /*hbs020ukrServiceImpl.insertExcelToMaster*/
        UPDATE HUM100T
           SET  ANNUAL_SALARY_I     = #{ANNUAL_SALARY_I}
              , WAGES_STD_I         = #{WAGES_STD_I}
              , PAY_PRESERVE_I      = #{PAY_PRESERVE_I}
         WHERE COMP_CODE    = #{COMP_CODE}
           AND PERSON_NUMB  = #{PERSON_NUMB}
    </update>

    <insert id="hbs020ukrServiceImpl.test" >
        insert into hbs210t (comp_code, year_yyyy, person_numb, update_db_user, update_db_time, insert_db_user, insert_db_time)
        values ('MASTER', '2014', '11111', 'Tom', getDate(), 'Jerry', getDate())
        insert into hbs210t (comp_code) values ('MASTER')
    </insert>

    <!--근태코드등록 시작 -->
    <select id="hbs020ukrServiceImpl.sub_length" parameterType="rMap" resultType="String">
        SELECT SUB_LENGTH
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = #{MAIN_CODE}
           AND SUB_CODE  = '$'
    </select>

    <select id="hbs020ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">
        SELECT MAIN_CODE
         , SUB_CODE
         , CODE_NAME
         , CODE_NAME_EN
         , CODE_NAME_CN
         , CODE_NAME_JP
         , CAST(REF_CODE1 AS BIT) AS REF_CODE1
         , REF_CODE2
         , REF_CODE11
         , REF_CODE3
         , REF_CODE4
         , REF_CODE5
         , SUB_LENGTH
         , USE_YN
         , SORT_SEQ
         , CAST(SYSTEM_CODE_YN AS BIT) SYSTEM_CODE_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = #{MAIN_CODE}
       AND SUB_CODE != '$'
     ORDER BY MAIN_CODE, SUB_CODE
    </select>

    <update id="hbs020ukrServiceImpl.insert2" parameterType="rMap">
        INSERT INTO BSA100T
                        ( MAIN_CODE, SUB_CODE
                        , CODE_NAME
                        , CODE_NAME_EN
                        , CODE_NAME_CN
                        , CODE_NAME_JP
                        , REF_CODE1
                        , REF_CODE2
                        , REF_CODE11, REF_CODE3, REF_CODE4,    REF_CODE5,      SUB_LENGTH
                        , USE_YN,    SORT_SEQ,  SYSTEM_CODE_YN,          UPDATE_DB_USER, UPDATE_DB_TIME
                        , COMP_CODE
                        )
                 VALUES ( #{MAIN_CODE}, #{SUB_CODE}
                        <if test='LOGIN_TYPE.equals("ko")'>
                        , #{CODE_NAME}
                        , ''
                        , ''
                        , ''
                        </if>
                        <if test='LOGIN_TYPE.equals("CN")'>
                        , ''
                        , #{CODE_NAME}
                        , ''
                        , ''
                        </if>
                        <if test='LOGIN_TYPE.equals("EN")'>
                        , ''
                        , ''
                        , #{CODE_NAME}
                        , ''
                        </if>
                        <if test='LOGIN_TYPE.equals("JP")'>
                        , ''
                        , ''
                        , ''
                        , #{CODE_NAME}
                        </if>
                        , #{REF_CODE1}
                        , RIGHT('0000000000${REF_CODE2}', ${SUB_LENGTH})
                        , #{REF_CODE11},#{REF_CODE3}, #{REF_CODE4}, #{REF_CODE5}, ${SUB_LENGTH}
                        , #{USE_YN}, ${SORT_SEQ}, ${SYSTEM_CODE_YN}, #{USER_ID}, GETDATE()
                        , #{S_COMP_CODE}
                        )
    </update>

    <update id="hbs020ukrServiceImpl.update2" parameterType="rMap">
        UPDATE BSA100T
            SET
                <if test='LOGIN_TYPE.equals("ko")'>
                    CODE_NAME      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("CN")'>
                    CODE_NAME_CN      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("EN")'>
                    CODE_NAME_EN      = #{CODE_NAME}
                </if>
                <if test='LOGIN_TYPE.equals("JP")'>
                    CODE_NAME_JP      = #{CODE_NAME}
                </if>

                , REF_CODE1      = #{REF_CODE1}

                , REF_CODE2      = RIGHT('0000000000${REF_CODE2}', ${SUB_LENGTH})
                , REF_CODE11     = #{REF_CODE11}
                , REF_CODE3      = #{REF_CODE3}
                , REF_CODE4      = #{REF_CODE4}
                , REF_CODE5      = #{REF_CODE5}
                , SUB_LENGTH     = ${SUB_LENGTH}
                <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                , USE_YN         = #{USE_YN}
                </if>
                <if test="@foren.Ognl@isNotEmpty(SORT_SEQ)">
                , SORT_SEQ       = ${SORT_SEQ}
                </if>
                <if test="@foren.Ognl@isNotEmpty(SYSTEM_CODE_YN)">
                , SYSTEM_CODE_YN = ${SYSTEM_CODE_YN}
                </if>
                , UPDATE_DB_USER = #{USER_ID}
                , UPDATE_DB_TIME = GETDATE()
            WHERE COMP_CODE = #{S_COMP_CODE}
                AND MAIN_CODE = #{MAIN_CODE}
                AND SUB_CODE  = #{SUB_CODE}
    </update>

    <update id="hbs020ukrServiceImpl.delete2" parameterType="rMap">
            DELETE FROM BSA100T
               WHERE COMP_CODE = #{S_COMP_CODE}
                 AND MAIN_CODE = #{MAIN_CODE}
                 AND SUB_CODE  = #{SUB_CODE}
    </update>


<!--근태코드등록 끝 -->

<!--근태기준등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList3" parameterType="rMap" resultType="rMap">
    SELECT PAY_CODE
     , DUTY_CODE
     , DUTY_TYPE
     , COTR_TYPE
     , DUTY_STRT_MM
     , DUTY_STRT_DD
     , DUTY_LAST_MM
     , DUTY_LAST_DD
     , MARGIR_TYPE
     , MONTH_REL_CODE
     , YEAR_REL_CODE
     , MENS_REL_CODE
     , WEEK_REL_CODE
     , FULL_REL_CODE
     , WORK_TIME_REL_CODE
  FROM HBS100T
 WHERE COMP_CODE = #{S_COMP_CODE}
 <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    AND PAY_CODE = #{PAY_CODE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">
    AND DUTY_CODE = #{DUTY_CODE}
 </if>
</select>

<update id="hbs020ukrServiceImpl.insert3" parameterType="rMap">

    INSERT INTO Hbs100T
     ( PAY_CODE
     , DUTY_CODE
     , DUTY_TYPE
     , COTR_TYPE
     , DUTY_STRT_MM
     , DUTY_STRT_DD
     , DUTY_LAST_MM
     , DUTY_LAST_DD
     , MARGIR_TYPE
     , MONTH_REL_CODE
     , YEAR_REL_CODE
     , MENS_REL_CODE
     , WEEK_REL_CODE
     , FULL_REL_CODE
     , WORK_TIME_REL_CODE
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     , COMP_CODE
     )
VALUES
     (#{PAY_CODE}
     , #{DUTY_CODE}
     , '1'
     , #{COTR_TYPE}
     , 0
     , '01'
     , 0
     , '00'
     , #{MARGIR_TYPE}
     , #{MONTH_REL_CODE}
     , #{YEAR_REL_CODE}
     , #{MENS_REL_CODE}
     , #{WEEK_REL_CODE}
     , #{FULL_REL_CODE}
     , #{WORK_TIME_REL_CODE}
     , #{USER_ID}
     , GETDATE()
     , #{S_COMP_CODE}
     )


</update>

<update id="hbs020ukrServiceImpl.update3" parameterType="rMap">
    UPDATE Hbs100T
       SET DUTY_TYPE      = '1'
         , COTR_TYPE      = #{COTR_TYPE}
         , DUTY_STRT_MM   = 0
         , DUTY_STRT_DD   = '01'
         , DUTY_LAST_MM   = 0
         , DUTY_LAST_DD   = '00'
         , MARGIR_TYPE    = #{MARGIR_TYPE}
         , MONTH_REL_CODE = #{MONTH_REL_CODE}
         , YEAR_REL_CODE  = #{YEAR_REL_CODE}
         , MENS_REL_CODE  = #{MENS_REL_CODE}
         , WEEK_REL_CODE  = #{WEEK_REL_CODE}
         , FULL_REL_CODE  = #{FULL_REL_CODE}
         , WORK_TIME_REL_CODE = #{WORK_TIME_REL_CODE}
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = GETDATE()

     WHERE PAY_CODE       = #{PAY_CODE}
       AND DUTY_CODE      = #{DUTY_CODE}
       AND COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete3" parameterType="rMap">
    DELETE FROM Hbs100T
     WHERE PAY_CODE  = #{PAY_CODE}
       AND DUTY_CODE = #{DUTY_CODE}
       AND COMP_CODE = #{S_COMP_CODE}
</update>
<!--근태기준등록 끝 -->

<!--휴무별근무시간등록 시작 -->
    <!--
        등록 및 삭제 없음
    -->
    <select id="hbs020ukrServiceImpl.selectList4" parameterType="rMap" resultType="rMap">
        SELECT MAIN_CODE
         , SUB_CODE
         , CODE_NAME
         , CODE_NAME_EN
         , CODE_NAME_CN
         , CODE_NAME_JP
         , REF_CODE1
         , REF_CODE2
         , REF_CODE3
         , REF_CODE4
         , REF_CODE5
         , SUB_LENGTH
         , USE_YN
         , SORT_SEQ
         , CAST(SYSTEM_CODE_YN AS BIT) SYSTEM_CODE_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = #{MAIN_CODE}
       AND SUB_CODE != '$'
     ORDER BY MAIN_CODE, SUB_CODE
    </select>
<update id="hbs020ukrServiceImpl.update4" parameterType="rMap">
</update>
<!--휴무별근무시간등록 끝 -->


<!--년월차기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList8" parameterType="rMap" resultType="rMap">
    SELECT PAY_CODE
     , PAY_DD
     , ABSENCE_CNT
     , MAX_YEAR_BONUS
     , CALCU_BAS
     , AMASS_NUM
     , SAVE_MONTH_NUM
     , SUPP_YEAR_NUM_B
     , SUPP_YEAR_NUM_A
     , WAGES_TYPE
     , CAST(ISNULL(FIVE_DAY_CHECK,0) AS BIT) AS FIVE_DAY_CHECK
     , CAST(ISNULL(JOIN_MID_CHECK,0) AS BIT) AS JOIN_MID_CHECK
  FROM HBS340T
 WHERE COMP_CODE = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.insert8" parameterType="rMap">
    INSERT INTO HBS340T
         ( PAY_CODE
         , PAY_DD
         , ABSENCE_CNT
         , MAX_YEAR_BONUS
         , CALCU_BAS
         , AMASS_NUM
         , SAVE_MONTH_NUM
         , SUPP_YEAR_NUM_B
         , SUPP_YEAR_NUM_A
         , FIVE_DAY_CHECK
         , JOIN_MID_CHECK
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{PAY_CODE}
         , '00'
         , #{ABSENCE_CNT}
         , #{MAX_YEAR_BONUS}
         , #{CALCU_BAS}
         , #{AMASS_NUM}
         , #{SAVE_MONTH_NUM}
         , #{SUPP_YEAR_NUM_B}
         , #{SUPP_YEAR_NUM_A}
         , #{FIVE_DAY_CHECK}
         , #{JOIN_MID_CHECK}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update8" parameterType="rMap">
    UPDATE HBS340T
       SET PAY_DD          = '00'
         , ABSENCE_CNT     = #{ABSENCE_CNT}
         , MAX_YEAR_BONUS  = #{MAX_YEAR_BONUS}
         , CALCU_BAS       = #{CALCU_BAS}
         , AMASS_NUM       = #{AMASS_NUM}
         , SAVE_MONTH_NUM  = #{SAVE_MONTH_NUM}
         , SUPP_YEAR_NUM_B = #{SUPP_YEAR_NUM_B}
         , SUPP_YEAR_NUM_A = #{SUPP_YEAR_NUM_A}
         , WAGES_TYPE      = #{WAGES_TYPE}
         , FIVE_DAY_CHECK  = #{FIVE_DAY_CHECK}
         , JOIN_MID_CHECK  = #{JOIN_MID_CHECK}
         , UPDATE_DB_USER  = #{USER_ID}
         , UPDATE_DB_TIME  = GETDATE()

     WHERE PAY_CODE        = #{PAY_CODE}
       AND COMP_CODE       = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete8" parameterType="rMap">
    DELETE FROM HBS340T
     WHERE PAY_CODE  = #{PAY_CODE}
       AND COMP_CODE = #{S_COMP_CODE}
</update>
<!--년월차기준 등록 끝 -->


<!-- 지급/공제코드 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList9_1" parameterType="rMap" resultType="rMap">
    SELECT MAIN_CODE
         , SUB_CODE
         , CODE_NAME
         , CODE_NAME_EN
         , CODE_NAME_CN
         , CODE_NAME_JP
         , REF_CODE1
         , REF_CODE2
         , REF_CODE3
         , REF_CODE4
         , REF_CODE5
         , SUB_LENGTH
         , USE_YN
         , SORT_SEQ
         , SYSTEM_CODE_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = #{MAIN_CODE}
       AND SUB_CODE != '$'
     ORDER BY SORT_SEQ, MAIN_CODE, SUB_CODE
</select>
<select id="hbs020ukrServiceImpl.selectList9_2" parameterType="rMap" resultType="rMap">
    SELECT CODE_TYPE
         , WAGES_CODE
         , WAGES_NAME
         , WAGES_KIND
         , TAX_CODE
         , INCOME_KIND
         , MINIMUM_WAGE
         , TAX_AMOUNT_LMT_I
         , EMP_TYPE
         , MED_TYPE
         , COM_PAY_TYPE
         , RETR_WAGES
         , RETR_BONUS
         , ORD_WAGES
         , NON_TAX_CODE
         , SEND_YN
         , WAGES_SEQ
         , CALCU_SEQ
         , PRINT_SEQ
         , SORT_SEQ
         , USE_YN
      FROM HBS300T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND CODE_TYPE = N'1'
</select>

<select id="hbs020ukrServiceImpl.useExistCheck9sub2" parameterType="rMap" resultType="rMap">
    --hbs300ukr.Chbs300kr[fnCodeValue]-1
    SELECT (A.AA + B.AA + C.AA + D.AA) AS COUNT
      FROM (SELECT COUNT(*)  AA
              FROM HPA300T
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND WAGES_CODE = #{WAGES_CODE}
               AND SUPP_TYPE  = '1') A
         , (SELECT COUNT(*)  AA
              FROM HPA200T
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND WAGES_CODE = #{WAGES_CODE}) B
         , (SELECT  COUNT(*)  AA
              FROM HPA400T
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND DED_CODE   = #{WAGES_CODE}) C
         , (SELECT  COUNT(*)  AA
              FROM HPA500T
             WHERE COMP_CODE  = #{S_COMP_CODE}
               AND DED_CODE   = #{WAGES_CODE}) D
</select>
<update id="hbs020ukrServiceImpl.insert9_2" parameterType="rMap">
    INSERT INTO Hbs300T
         ( CODE_TYPE
         , WAGES_CODE
         , WAGES_NAME
         , WAGES_KIND
         , TAX_CODE
         , TAX_AMOUNT_LMT_I
         , EMP_TYPE
         , COM_PAY_TYPE
         , RETR_WAGES
         , NON_TAX_CODE
         , SEND_YN
         , WAGES_SEQ
         , CALCU_SEQ
         , PRINT_SEQ
         , SORT_SEQ
         , USE_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         , MED_TYPE
         , RETR_BONUS
         , ORD_WAGES
         , INCOME_KIND
         , MINIMUM_WAGE
         )
    VALUES
         ( '1'
         , #{WAGES_CODE}
         , #{WAGES_NAME}
         , #{WAGES_KIND}
         , #{TAX_CODE}
         , #{TAX_AMOUNT_LMT_I}
         , #{EMP_TYPE}
         , #{COM_PAY_TYPE}
         , #{RETR_WAGES}
         , #{NON_TAX_CODE}
         , #{SEND_YN}
         , ${WAGES_SEQ}
         , ${CALCU_SEQ}
         , ${PRINT_SEQ}
         , ${SORT_SEQ}
         , #{USE_YN}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         , #{MED_TYPE}
         , #{RETR_BONUS}
         , #{ORD_WAGES}
         , #{INCOME_KIND}
         , #{MINIMUM_WAGE}
         )
</update>

<update id="hbs020ukrServiceImpl.insert9_3" parameterType="rMap">
    INSERT INTO BSA100T
         ( MAIN_CODE
         , SUB_CODE
         , CODE_NAME
         , REF_CODE1
         , REF_CODE2
         , REF_CODE3
         , SUB_LENGTH
         , USE_YN
         , SORT_SEQ
         , SYSTEM_CODE_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{MAIN_CODE}
         , #{SUB_CODE}
         , #{CODE_NAME}
         , #{REF_CODE1}
         , #{REF_CODE2}
         , #{REF_CODE3}
         , ${SUB_LENGTH}
         , #{USE_YN}
         , 1
         , 0
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update9_2" parameterType="rMap">
         UPDATE Hbs300T
           SET WAGES_NAME       = #{WAGES_NAME}
             , WAGES_KIND       = #{WAGES_KIND}
             , TAX_CODE         = #{TAX_CODE}
             , INCOME_KIND      = #{INCOME_KIND}
             , MINIMUM_WAGE     = #{MINIMUM_WAGE}
             , TAX_AMOUNT_LMT_I = #{TAX_AMOUNT_LMT_I}
             , EMP_TYPE         = #{EMP_TYPE}
             , COM_PAY_TYPE     = #{COM_PAY_TYPE}
             , RETR_WAGES       = #{RETR_WAGES}
             , NON_TAX_CODE     = #{NON_TAX_CODE}
             , SEND_YN          = #{SEND_YN}
             , WAGES_SEQ        = #{WAGES_SEQ}
             , CALCU_SEQ        = ${CALCU_SEQ}
             , PRINT_SEQ        = ${PRINT_SEQ}
             , SORT_SEQ         = ${SORT_SEQ}
             , USE_YN           = #{USE_YN}
             , UPDATE_DB_USER   = #{USER_ID}
             , UPDATE_DB_TIME   = GETDATE()
             , MED_TYPE         = #{MED_TYPE}
             , RETR_BONUS       = #{RETR_BONUS}
             , ORD_WAGES        = #{ORD_WAGES}

         WHERE CODE_TYPE        = '1'
           AND WAGES_CODE       = #{WAGES_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.update9_3" parameterType="rMap">
    UPDATE BSA100T
       SET CODE_NAME      = #{CODE_NAME}
         , CODE_NAME_EN   = NULL
         , CODE_NAME_CN   = NULL
         , CODE_NAME_JP   = NULL
         , REF_CODE1      = #{REF_CODE1}
         , REF_CODE2      = #{REF_CODE2}
         , REF_CODE3      = #{REF_CODE3}
         , REF_CODE4      = #{REF_CODE4}
         , REF_CODE5      = #{REF_CODE5}
         , SUB_LENGTH     = ${SUB_LENGTH}
         , USE_YN         = #{USE_YN}
         , SORT_SEQ       = 1
         , SYSTEM_CODE_YN = 0
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = GETDATE()

     WHERE MAIN_CODE      = #{MAIN_CODE}
       AND SUB_CODE       = #{SUB_CODE}
       AND COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete9_2" parameterType="rMap">
       DELETE FROM Hbs300T
     WHERE CODE_TYPE  = '1'
       AND WAGES_CODE = #{WAGES_CODE}
       AND COMP_CODE  = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete9_3" parameterType="rMap">
    DELETE FROM BSA100T
     WHERE MAIN_CODE = 'H034'
       AND SUB_CODE  = #{SUB_CODE}
       AND COMP_CODE = #{S_COMP_CODE}
</update>
<!-- 지급/공제코드 등록 끝 -->

<!-- 입/퇴사자 지급 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList10" parameterType="rMap" resultType="rMap">
    SELECT PAY_CODE
         , PAY_PROV_FLAG
         , EXCEPT_TYPE
         , WAGES_CODE
         , WORK_DAY
         , PROV_YN
         , DAILY_YN
         , FIXED_WAGES_DAILY_YN
      FROM HBS360T
     WHERE COMP_CODE     = #{S_COMP_CODE}
       AND PAY_CODE      = #{PAY_CODE}
       <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
       AND PAY_PROV_FLAG  = #{PAY_PROV_FLAG}
       </if>
       <if test="@foren.Ognl@isNotEmpty(EXCEPT_TYPE)">
       AND EXCEPT_TYPE    = #{EXCEPT_TYPE}
       </if>
</select>
<!-- 입/퇴사자 지급 등록  수당코드 콤보 가져오기 -->
<select id="hbs020ukrServiceImpl.getWagesCode" parameterType="rMap" resultType="rMap">
    SELECT WAGES_CODE   as value
         , WAGES_NAME   as text
         , WAGES_CODE   as 'option'
      FROM HBS300T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND CODE_TYPE = '1'
</select>

<update id="hbs020ukrServiceImpl.insert10" parameterType="rMap">
    INSERT INTO Hbs360T
         ( PAY_CODE
         , PAY_PROV_FLAG
         , EXCEPT_TYPE
         , WAGES_CODE
         , WORK_DAY
         , PROV_YN
         , DAILY_YN
         , FIXED_WAGES_DAILY_YN
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{PAY_CODE}
         , #{PAY_PROV_FLAG}
         , #{EXCEPT_TYPE}
         , #{WAGES_CODE}
         , ${WORK_DAY}
         , #{PROV_YN}
         , #{DAILY_YN}
         , #{FIXED_WAGES_DAILY_YN}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update10" parameterType="rMap">
    UPDATE Hbs360T
       SET WORK_DAY             = ${WORK_DAY}
         , PROV_YN              = #{PROV_YN}
         , DAILY_YN             = #{DAILY_YN}
         , FIXED_WAGES_DAILY_YN = #{FIXED_WAGES_DAILY_YN}
         , UPDATE_DB_USER       = #{USER_ID}
         , UPDATE_DB_TIME       = GETDATE()

     WHERE PAY_CODE             = #{PAY_CODE}
       AND PAY_PROV_FLAG        = #{PAY_PROV_FLAG}
       AND EXCEPT_TYPE          = #{EXCEPT_TYPE}
       AND WAGES_CODE           = #{WAGES_CODE}
       AND COMP_CODE            = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete10" parameterType="rMap">
    DELETE FROM Hbs360T
     WHERE PAY_CODE      = #{PAY_CODE}
       AND PAY_PROV_FLAG = #{PAY_PROV_FLAG}
       AND EXCEPT_TYPE   = #{EXCEPT_TYPE}
       AND WAGES_CODE    = #{WAGES_CODE}
       AND COMP_CODE     = #{S_COMP_CODE}
</update>
<!-- 입/퇴사자 지급 등록 끝 -->


<!-- 부서별요율 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList13" parameterType="rMap" resultType="rMap">
    SELECT
       A.COMP_CODE
     , B.TREE_CODE
     , A.TREE_NAME
     , B.DEPART_RATE
     , B.SUPP_TYPE
     , B.UPDATE_DB_USER
     , B.UPDATE_DB_TIME
  FROM BSA210T A INNER JOIN HBS220T B
                    ON A.COMP_CODE = B.COMP_CODE
                   AND A.TREE_CODE = B.TREE_CODE
 WHERE B.COMP_CODE = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(SUPP_TYPE)">
        AND B.SUPP_TYPE = #{SUPP_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPTS)">
        AND     B.TREE_CODE IN
            <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
             #{item}
            </foreach>
        </if>
</select>

<select id="hbs020ukrServiceImpl.createBaseDept" parameterType="Map" resultType="rMap">
    --UHbs01Krv.CHbs363ukr SetHbs363[fnHbs363Create]
     INSERT INTO HBS220T
                        (  COMP_CODE
                         , TREE_CODE
                         , DEPART_RATE
                         , SUPP_TYPE
                         , UPDATE_DB_USER
                         , UPDATE_DB_TIME)
                   SELECT
                             COMP_CODE
                          ,  TREE_CODE
                          ,  0 As DEPART_RATE
                          , #{SUPP_TYPE}    As SUPP_TYPE
                          , #{S_USER_ID}    AS UPDATE_DB_USER
                          , GETDATE()       AS UPDATE_DB_TIME
                           FROM BSA210T
                          WHERE COMP_CODE   = #{S_COMP_CODE}
</select>
<update id="hbs020ukrServiceImpl.insert13" parameterType="rMap">
    INSERT INTO HBS220T
         ( COMP_CODE
         , TREE_CODE
         , DEPART_RATE
         , SUPP_TYPE
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         )
    VALUES
         ( #{S_COMP_CODE}
         , #{TREE_CODE}
         , ${DEPART_RATE}
         , #{SUPP_TYPE}
         , #{USER_ID}
         , GETDATE()
         )
</update>

<update id="hbs020ukrServiceImpl.update13" parameterType="rMap">
    UPDATE HBS220T
       SET DEPART_RATE    = ${DEPART_RATE}
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = GETDATE()

     WHERE COMP_CODE      = #{S_COMP_CODE}
       AND TREE_CODE      = #{TREE_CODE}
       AND SUPP_TYPE      = #{SUPP_TYPE}
</update>

<update id="hbs020ukrServiceImpl.delete13" parameterType="rMap">
    DELETE FROM HBS220T
     WHERE COMP_CODE      = #{S_COMP_CODE}
       AND TREE_CODE      = #{TREE_CODE}
       AND SUPP_TYPE      = #{SUPP_TYPE}
</update>
<!--부서별요율 등록 끝 -->


<!--끝전처리기준 등록 시작 -->

<select id="hbs020ukrServiceImpl.fnGetWagesType" parameterType="Map" resultType="comboItem">

    <if test="WAGES_TYPE == &quot;1&quot;">
        --지급내역
        SELECT
            WAGES_CODE AS "value"
            ,WAGES_NAME AS "text"
          FROM HBS300T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND CODE_TYPE = '1'
           AND USE_YN = 'Y'
         ORDER BY WAGES_CODE
    </if>

    <if test="WAGES_TYPE == &quot;2&quot;">
        --공제내역
         SELECT
            SUB_CODE AS "value"
            ,CODE_NAME AS "text"
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H034'
           AND SUB_CODE != '$'
           AND USE_YN = 'Y'
         ORDER BY  SUB_CODE
    </if>

    <if test="WAGES_TYPE == &quot;0&quot;">
        --기타
         SELECT
            SUB_CODE AS "value"
            ,CODE_NAME AS "text"
          FROM BSA100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H035'
           AND SUB_CODE != '$'
           AND USE_YN = 'Y'
         ORDER BY  SUB_CODE
    </if>

</select>

<select id="hbs020ukrServiceImpl.selectList14" parameterType="rMap" resultType="rMap">
    SELECT WAGES_TYPE
         , WAGES_CODE
         , STD_AMOUNT_I
         , BELOW
         , CALCU_BAS
      FROM HBS330T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND WAGES_TYPE = #{WAGES_TYPE}
</select>

<update id="hbs020ukrServiceImpl.insert14" parameterType="rMap">
    INSERT INTO Hbs330T
         ( WAGES_TYPE
         , WAGES_CODE
         , STD_AMOUNT_I
         , BELOW
         , CALCU_BAS
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{WAGES_TYPE}
         , #{WAGES_CODE}
         , #{STD_AMOUNT_I}
         , #{BELOW}
         , #{CALCU_BAS}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update14" parameterType="rMap">
    UPDATE Hbs330T
       SET STD_AMOUNT_I   = #{STD_AMOUNT_I}
         , BELOW          = #{BELOW}
         , CALCU_BAS      = #{CALCU_BAS}
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = GETDATE()

     WHERE WAGES_TYPE     = #{WAGES_TYPE}
       AND WAGES_CODE     = #{WAGES_CODE}
       AND COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete14" parameterType="rMap">
    DELETE FROM Hbs330T
     WHERE WAGES_TYPE = #{WAGES_TYPE}
       AND WAGES_CODE = #{WAGES_CODE}
       AND COMP_CODE  = #{S_COMP_CODE}
</update>
<!--끝전처리기준 등록 끝 -->


<!-- 근속수당기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList16" parameterType="rMap" resultType="rMap">
    SELECT STRT_MONTH
         , LAST_MONTH
         , SUPP_TOTAL_I
         , SUPP_RATE
         , ACCEPT_CAREER_YN
         , PENALTY_CAREER_YN
         , BREAK_CAREER_YN
         , BASE_DATE_CODE
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         ,CNWK_DSNC
      FROM HBS350T
     WHERE COMP_CODE = #{S_COMP_CODE}

        <if test="@foren.Ognl@isNotEmpty(CNWK_DSNC)">
       AND CNWK_DSNC = #{CNWK_DSNC}
        </if>
</select>

<update id="hbs020ukrServiceImpl.insert16" parameterType="rMap">
    INSERT INTO Hbs350T
         ( STRT_MONTH
         , LAST_MONTH
         , SUPP_TOTAL_I
         , SUPP_RATE
         , ACCEPT_CAREER_YN
         , PENALTY_CAREER_YN
         , BREAK_CAREER_YN
         , BASE_DATE_CODE
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         ,CNWK_DSNC
         )
    VALUES
         ( ${STRT_MONTH}
         , ${LAST_MONTH}
         , ${SUPP_TOTAL_I}
         , ${SUPP_RATE}
         <if test='ACCEPT_CAREER_YN == "true" '>
         , 'Y'
         </if>
         <if test='ACCEPT_CAREER_YN == "false" '>
         , 'N'
         </if>
         <if test='PENALTY_CAREER_YN == "true" '>
         , 'Y'
         </if>
         <if test='PENALTY_CAREER_YN == "false" '>
         , 'N'
         </if>
         <if test='BREAK_CAREER_YN == "true" '>
         , 'Y'
         </if>
         <if test='BREAK_CAREER_YN == "false" '>
         , 'N'
         </if>
         , #{BASE_DATE_CODE}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         , #{CNWK_DSNC}
         )
</update>

<update id="hbs020ukrServiceImpl.update16" parameterType="rMap">
    UPDATE Hbs350T
       SET LAST_MONTH        = ${LAST_MONTH}

         , SUPP_TOTAL_I      = ${SUPP_TOTAL_I}
         , SUPP_RATE         = ${SUPP_RATE}
         <if test='ACCEPT_CAREER_YN == "true" '>
         , ACCEPT_CAREER_YN  = 'Y'
         </if>
         <if test='ACCEPT_CAREER_YN == "false" '>
         , ACCEPT_CAREER_YN  = 'N'
         </if>
         <if test='PENALTY_CAREER_YN == "true" '>
         , PENALTY_CAREER_YN  = 'Y'
         </if>
         <if test='PENALTY_CAREER_YN == "false" '>
         , PENALTY_CAREER_YN  = 'N'
         </if>
         <if test='BREAK_CAREER_YN == "true" '>
         , BREAK_CAREER_YN  = 'Y'
         </if>
         <if test='BREAK_CAREER_YN == "false" '>
         , BREAK_CAREER_YN  = 'N'
         </if>
         , BASE_DATE_CODE    = #{BASE_DATE_CODE}
         , UPDATE_DB_USER    = #{USER_ID}
         , UPDATE_DB_TIME    = GETDATE()
         , CNWK_DSNC = #{CNWK_DSNC}

     WHERE STRT_MONTH        = ${STRT_MONTH}
       AND COMP_CODE         = #{S_COMP_CODE}
       AND CNWK_DSNC         = #{CNWK_DSNC}

</update>

<update id="hbs020ukrServiceImpl.delete16" parameterType="rMap">
    DELETE FROM Hbs350T
     WHERE STRT_MONTH = ${STRT_MONTH}
       AND COMP_CODE  = #{S_COMP_CODE}
</update>
<!-- 근속수당기준 등록 끝 -->


<!-- 상여구분자 등록 시작 -->
<!--
    read : 'hbs020ukrService.selectList4',
    create: 'hbs020ukrService.insert2',
    update: 'hbs020ukrService.update2',
    destroy: 'hbs020ukrService.delete2'
    -->
<!-- 상여구분자 등록 끝 -->


<!--년월차기준 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList19" parameterType="rMap" resultType="rMap">
    SELECT DOC_TYPE
         , DOC_ID
         , DOC_NAME
      FROM HBS800T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND DOC_TYPE  = #{DOC_TYPE}
</select>

<update id="hbs020ukrServiceImpl.insert19" parameterType="rMap">
    INSERT INTO Hbs800T
         ( DOC_TYPE
         , DOC_ID
         , DOC_NAME
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{DOC_TYPE}
         , #{DOC_ID}
         , #{DOC_NAME}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update19" parameterType="rMap">
    UPDATE Hbs800T
       SET DOC_NAME       = #{DOC_NAME}
         , UPDATE_DB_USER = #{USER_ID}
         , UPDATE_DB_TIME = GETDATE()

     WHERE DOC_TYPE       = #{DOC_TYPE}
       AND DOC_ID         = #{DOC_ID}
       AND COMP_CODE      = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete19" parameterType="rMap">
    DELETE FROM Hbs800T
     WHERE DOC_TYPE  = #{DOC_TYPE}
       AND DOC_ID    = #{DOC_ID}
       AND COMP_CODE = #{S_COMP_CODE}
</update>
<!--년월차기준 등록 끝 -->


<!-- 주민세신고지점 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList20" parameterType="rMap" resultType="rMap">
    SELECT BUSS_OFFICE_CODE
         , BUSS_OFFICE_NAME
         , LOCAL_TAX_GOV
         , BUSS_OFFICE_ADDR
         , SECT_CODE
      FROM HBS230T
     WHERE COMP_CODE     = #{S_COMP_CODE}
     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND SECT_CODE   = #{DIV_CODE}
     </if>
</select>

<update id="hbs020ukrServiceImpl.insert20" parameterType="rMap">
    INSERT INTO Hbs230T
         ( BUSS_OFFICE_CODE
         , BUSS_OFFICE_NAME
         , LOCAL_TAX_GOV
         , BUSS_OFFICE_ADDR
         , SECT_CODE
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         , COMP_CODE
         )
    VALUES
         ( #{BUSS_OFFICE_CODE}
         , #{BUSS_OFFICE_NAME}
         , #{LOCAL_TAX_GOV}
         , #{BUSS_OFFICE_ADDR}
         , #{SECT_CODE}
         , #{USER_ID}
         , GETDATE()
         , #{S_COMP_CODE}
         )
</update>

<update id="hbs020ukrServiceImpl.update20" parameterType="rMap">
    UPDATE Hbs230T
       SET LOCAL_TAX_GOV    = #{LOCAL_TAX_GOV}
         , BUSS_OFFICE_NAME = #{BUSS_OFFICE_NAME}  --20210827 추가
         , BUSS_OFFICE_ADDR = #{BUSS_OFFICE_ADDR}
         , SECT_CODE        = #{SECT_CODE}
         , UPDATE_DB_USER   = #{USER_ID}
         , UPDATE_DB_TIME   = GETDATE()

     WHERE BUSS_OFFICE_CODE = #{BUSS_OFFICE_CODE}
       --AND BUSS_OFFICE_NAME = {BUSS_OFFICE_NAME}  --20210827 주석
       AND COMP_CODE        = #{S_COMP_CODE}
</update>

<update id="hbs020ukrServiceImpl.delete20" parameterType="rMap">
    DELETE FROM Hbs230T
     WHERE BUSS_OFFICE_CODE = #{BUSS_OFFICE_CODE}
       --AND BUSS_OFFICE_NAME = {BUSS_OFFICE_NAME}  --20210827 주석
       AND COMP_CODE        = #{S_COMP_CODE}
</update>
<!-- 주민세신고지점 등록 끝 -->


<!-- 메일서버정보 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList21" parameterType="rMap" resultType="rMap">
    SELECT SEND_METHOD
     , SERVER_NAME
     , SERVER_PROT
     , PICKUP_FOLDER_PATH
     , SEND_USER_NAME
     , SEND_PASSWORD
     , CONN_TIMEOUT
     , SSL_USE_YN
  FROM HBS240T
 WHERE COMP_CODE    = #{S_COMP_CODE}
</select>

<update id="hbs020ukrServiceImpl.submit21" parameterType="rMap">
    UPDATE HBS240T
       SET SEND_METHOD        = #{SEND_METHOD}
         , SERVER_NAME        = #{SERVER_NAME}
         , SERVER_PROT        = ${SERVER_PROT}
         , PICKUP_FOLDER_PATH = #{PICKUP_FOLDER_PATH}
         , SEND_USER_NAME     = #{SEND_USER_NAME}
         , SEND_PASSWORD      = #{SEND_PASSWORD}
         , CONN_TIMEOUT       = ${CONN_TIMEOUT}
         , SSL_USE_YN         = ${SSL_USE_YN}

     WHERE COMP_CODE          = #{S_COMP_CODE}
</update>
<!-- 메일서버정보 등록 끝 -->

<!-- 금융기관코드매칭 등록 시작 -->
<select id="hbs020ukrServiceImpl.selectList22" parameterType="rMap" resultType="rMap">
    SELECT A.CUSTOM_CODE
         , A.CUSTOM_NAME
         , B.BANK_CODE
         , CASE WHEN B.BANK_CODE IS NULL THEN 'N'
                ELSE ''
                END AS FLAG
      FROM BCM100T A LEFT OUTER JOIN HBS820T B
                       ON A.COMP_CODE = B.COMP_CODE
                      AND A.CUSTOM_CODE = B.CUSTOM_CODE
     WHERE A.COMP_CODE = #{S_COMP_CODE}
       AND A.CUSTOM_TYPE = '4'
</select>


<update id="hbs020ukrServiceImpl.update22" parameterType="rMap">

    <if test='FLAG.equals("N")'>
        INSERT INTO HBS820T
            ( COMP_CODE
            , CUSTOM_CODE
            , BANK_CODE
            , UPDATE_DB_USER
            , UPDATE_DB_TIME
            )
        VALUES
            ( #{S_COMP_CODE }
            , #{CUSTOM_CODE}
            , #{BANK_CODE}
            , #{USER_ID}
            , GETDATE()
            )
    </if>
    <if test='FLAG.equals("")'>
        UPDATE HBS820T
        SET BANK_CODE      = #{BANK_CODE}
             , UPDATE_DB_USER = #{USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE CUSTOM_CODE    = #{CUSTOM_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}
    </if>
</update>
<!-- 금융기관코드매칭 등록 끝 -->
<update id="hbs020ukrServiceImpl.insertCalendar" parameterType="rMap">
    DELETE
    FROM HBS600T
    WHERE COMP_CODE = #{S_COMP_CODE}
      AND DIV_CODE  = #{DIV_CODE}
      AND CAL_DATE  BETWEEN #{CREATE_YYYY}+'0101' AND #{CREATE_YYYY}+'1231'

</update>

	<select id="hbs020ukrServiceImpl.selectList23" parameterType="rMap" resultType="rMap">
	    SELECT TAX_YYYY
	         , HOUR_WAGES
	         , MIN_WAGES
	         , REMARK
	      FROM HBS140T A WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
     	<if test="@foren.Ognl@isNotEmpty(TAX_YYYY)">
     	   AND TAX_YYYY = #{TAX_YYYY}
     	</if>
     	ORDER BY TAX_YYYY DESC
	</select>
	<update id="hbs020ukrServiceImpl.insert23" parameterType="rMap">
	
	        INSERT INTO HBS140T
	            ( COMP_CODE
	            , TAX_YYYY
	            , HOUR_WAGES
	            , MIN_WAGES
	            , REMARK
	            , INSERT_DB_USER
	            , INSERT_DB_TIME
	            , UPDATE_DB_USER
	            , UPDATE_DB_TIME
	            )
	        VALUES
	            ( #{S_COMP_CODE}
	            , #{TAX_YYYY}
	            , #{HOUR_WAGES}
	            , #{MIN_WAGES}
	            , #{REMARK}
	            , #{S_USER_ID}
	            , GETDATE()
	            , #{S_USER_ID}
	            , GETDATE()
	            )
	</update>
	<update id="hbs020ukrServiceImpl.update23" parameterType="rMap">
	        UPDATE HBS140T
	          SET   HOUR_WAGES     = #{HOUR_WAGES}
	        	  , MIN_WAGES	   = #{MIN_WAGES}
	        	  , REMARK	       = #{REMARK}
	              , UPDATE_DB_USER = #{S_USER_ID}
	              , UPDATE_DB_TIME = GETDATE()
	        WHERE COMP_CODE        = #{S_COMP_CODE}
	          AND TAX_YYYY         = #{TAX_YYYY}
	</update>
	<update id="hbs020ukrServiceImpl.delete23" parameterType="rMap">
	    DELETE
	      FROM HBS140T
	     WHERE COMP_CODE        = #{S_COMP_CODE}
	       AND TAX_YYYY         = #{TAX_YYYY}
	</update>

<update id="hbs020ukrServiceImpl.insertCopyCalendar" parameterType="rMap">

</update>
<update id="hbs020ukrServiceImpl.nsertAllCopyCalendar" parameterType="rMap">

</update>









<!-- 급호봉정보 엑셀업로드 -->
    <!-- Excel -->
    <update id="hbs020ukrServiceImpl.insertExcelHbs020ukr11upload" parameterType="Map">
        --엑셀 파일에 잇는 데이터를 임시테이블에 insert
        DECLARE @wagesI NUMERIC(18, 4)

            SET @wagesI = #{WAGES_I}
            SET @wagesI = ISNULL(@wagesI, 0)

        INSERT INTO HBS020T_11_XLS
            (
               _EXCEL_JOBID
             , _EXCEL_ROWNUM
            <if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
             , _EXCEL_HAS_ERROR
            </if>
            <if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
             , _EXCEL_ERROR_MSG
            </if>
             , COMP_CODE
             , PAY_GRADE_01
             , PAY_GRADE_02
             , WAGES_CODE
             , WAGES_I
             , INSERT_DB_USER
             , INSERT_DB_TIME
            )
        VALUES (
               #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
            <if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
             , #{_EXCEL_HAS_ERROR   ,jdbcType=VARCHAR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
             , #{_EXCEL_ERROR       ,jdbcType=VARCHAR}
            </if>
             , #{S_COMP_CODE}
             , #{PAY_GRADE_01}
             , #{PAY_GRADE_02}
             , #{WAGES_CODE}
             , @wagesI
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>

    <!-- 20200701 추가: 지급/공제코드 등록(HBS300T)에 등록되어 있는 수당코드 여부 체크로직 추가 -->
    <update id="hbs020ukrServiceImpl.beforeExcelCheck1" parameterType="Map">
        UPDATE A
           SET A._EXCEL_ERROR_MSG = CASE WHEN B.COMP_CODE IS NULL THEN '등록되지 않은 코드 입니다. (수당코드: ' + A.WAGES_CODE + ')'
                                         ELSE ''
                                    END
             , A._EXCEL_HAS_ERROR = CASE WHEN B.COMP_CODE IS NULL THEN 'Y'
                                         ELSE ''
                                    END
          FROM HBS020T_11_XLS A
          LEFT JOIN HBS300T B ON B.COMP_CODE  = A.COMP_CODE
                             AND B.WAGES_CODE = A.WAGES_CODE
         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>

    <!-- 데이터 체크2 -->
    <select id="hbs020ukrServiceImpl.beforeExcelCheck" parameterType="Map" resultType="string">
        SELECT MAX(_EXCEL_ERROR_MSG)            AS ERROR_MSG
          FROM HBS020T_11_XLS WITH (NOLOCK)
         WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
           AND _EXCEL_HAS_ERROR = 'Y'
    </select>

    <!-- 업로드 된 데이터 가져오기 -->
    <select id="hbs020ukrServiceImpl.getData" parameterType="Map" resultType="rMap">
        SELECT  * FROM HBS020T_11_XLS WITH(NOLOCK)
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
    </select>

    <!-- 에러메세지 update -->
    <update id="hbs020ukrServiceImpl.insertErrorMsg">
        UPDATE HBS020T_11_XLS
           SET _EXCEL_ERROR_MSG = #{MSG}
             , _EXCEL_HAS_ERROR = 'Y'
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
           AND _EXCEL_ROWNUM    = #{ROWNUM}
    </update>

    <update id="hbs020ukrServiceImpl.excelValidate11" >
        /* HBS200T의 데이터를 지우고, 임시테이블에 있는 데이터를 HBS200T에 INSERT */
        DELETE FROM HBS200T WHERE COMP_CODE = #{S_COMP_CODE} AND PAY_GRADE_YYYY = #{PAY_GRADE_YYYY}

        INSERT INTO HBS200T (
            COMP_CODE,
            PAY_GRADE_01,
            PAY_GRADE_02,
            PAY_GRADE_YYYY,
            WAGES_CODE,
            WAGES_I,
            UPDATE_DB_USER,
            UPDATE_DB_TIME,
            INSERT_DB_USER,
            INSERT_DB_TIME
        )
        SELECT COMP_CODE,
               PAY_GRADE_01,
               PAY_GRADE_02,
               #{PAY_GRADE_YYYY},
               WAGES_CODE,
               WAGES_I,
               #{S_USER_ID},
               GETDATE(),
               #{S_USER_ID},
               GETDATE()
          FROM HBS020T_11_XLS WITH(NOLOCK)
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
    </update>

    <!-- 에러메세지 조회 -->
    <select id="hbs020ukrServiceImpl.getErrMsg" parameterType="Map" resultType="String">
        SELECT MAX(_EXCEL_ERROR_MSG)  AS ERR_MSG
          FROM HBS020T_11_XLS
         WHERE _EXCEL_JOBID = #{jobID}
           AND _EXCEL_HAS_ERROR = 'Y'
    </select>


    <!-- 지급/공제항목 콤보-->
    <select id="hbs020ukrServiceImpl.getWagesCode2" parameterType="rMap" resultType="rMap">
            SELECT WAGES_CODE   as value
                , WAGES_NAME   as text
                , WAGES_CODE   as 'option'
            FROM HBS300T
            WHERE COMP_CODE = #{S_COMP_CODE}
            AND CODE_TYPE = '1'

            union all
            SELECT SUB_CODE AS value
               , CODE_NAME AS text
               , SUB_CODE AS 'option'
            FROM BSA100T
            WHERE COMP_CODE = #{S_COMP_CODE}
             AND MAIN_CODE = 'H034'
               AND SUB_CODE     != N'$'

            union all

            SELECT SUB_CODE AS value
               , CODE_NAME AS text
               , SUB_CODE AS 'option'
            FROM BSA100T
            WHERE COMP_CODE = #{S_COMP_CODE}
             AND MAIN_CODE = 'H035'
            AND SUB_CODE     != N'$'

    </select>
    <select id="hbs020ukrServiceImpl.selectList1_3" parameterType="rMap" resultType="rMap">
        SELECT 
              SUB_CODE                                  -- 급여지급방식 
			, REF_CODE1									-- 시급직 여부
            , REF_CODE2                                 -- 월소정근무시간
            , <foreach collection="dutyCodeArr" item="item"  separator="+"  open="(" close=")">
                   [${item}] 
              </foreach> 
                 AS WORK_TIME_FORMULAR  -- 월소정근무시간 + 실근무시간 반영 근태코드 명칭 나열 (+[10]+[11]+[12]+[20]+[22]+[25]+[50]+[51]+[52]+[53]+[54]+[55]+[56]+[57]+[64]+[65]+[66]+[67])
        FROM BSA100T A  WITH (NOLOCK)
        LEFT JOIN ( SELECT 
                          COMP_CODE
                        , PAY_CODE  
                        <foreach collection="dutyCodeArr" item="item" >
                        , CASE WHEN ISNULL([${item}] ,'') != '' THEN ' - '+[${item}]  ELSE '' END AS [${item}]
                       </foreach> 
                      FROM (
                      SELECT T1.COMP_CODE, PAY_CODE, DUTY_CODE, WORK_TIME_REL_CODE, CODE_NAME
                      FROM HBS100T T1  WITH (NOLOCK)
                      LEFT JOIN (SELECT COMP_CODE, SUB_CODE, CODE_NAME 
                                   FROM BSA100T  WITH (NOLOCK)
                                  WHERE COMP_CODE = #{S_COMP_CODE}
                                    AND MAIN_CODE = 'H033'
                                    AND SUB_CODE !='$'
                                    AND USE_YN = 'Y') AS T2 ON T1.COMP_CODE = T2.COMP_CODE
                                                           AND T1.DUTY_CODE = T2.SUB_CODE
                      WHERE T1.COMP_CODE ='MASTER'
                        AND T1.WORK_TIME_REL_CODE = 'Y'
                    ) AS P0
                      PIVOT (
                        MAX(CODE_NAME) 
                        FOR DUTY_CODE IN 
                        <foreach collection="dutyCodeArr" item="item"  separator="," close=")" open="(">
                               [${item}] 
                        </foreach> 
                    ) as P1) B ON A.COMP_CODE = B.COMP_CODE
                              AND A.SUB_CODE = B.PAY_CODE
        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND A.MAIN_CODE = 'H028'
          AND A.SUB_CODE != '$'
          AND A.USE_YN = 'Y'

    </select>
    <update id="hbs020ukrServiceImpl.updateList1_3" parameterType="Map">
        UPDATE BSA100T
           SET REF_CODE2 = #{REF_CODE2}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND MAIN_CODE = 'H028'
           AND SUB_CODE  = #{SUB_CODE} 
    </update>
</mapper>