<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="equ270skrvService">
	<select id="equ270skrvService.imagesList" parameterType="Map" resultType="rMap">
    	SELECT COMP_CODE
    		, DIV_CODE
    		, EQU_CODE
    	--	, ISNULL(IMAGE_FID,'') AS IMAGE_FID
    		, ISNULL(IMAGE_FID,'Noimage.png') AS IMAGE_FID
    		,IMAGE_TYPE
		  FROM EQU200T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND EQU_CODE = #{EQU_CODE}
		   AND EQU_CODE_TYPE = '1'
		
	</select>
	<select id="equ270skrvService.getEquInfo" parameterType="Map" resultType="rMap">
		SELECT
			  *
		   FROM EQU202T  WITH (NOLOCK)
		  WHERE COMP_CODE	= #{S_COMP_CODE}
			AND DIV_CODE	= #{DIV_CODE}
			AND EQU_CODE	= #{CORE_CODE}
		 ORDER BY MANAGE_NO
	</select>
	<select id="equ270skrvService.selectList" parameterType="Map" resultType="rMap">
SELECT 
	A.COMP_CODE
	,A.DIV_CODE
	,A.EQU_CODE					--몰드번호
	,A.MODEL_CODE				--모델코드
	,A.CORE_CODE				--코어번호
	,A.CORE_NAME				--품명
	,A.CORE_SPEC					--코어규격
	,A.PRODT_TYPE				--부품타입
	,B.EQU_TYPE					--몰드타입
	,A.CORE_TYPE				--게이트방식
	,A.CORE_FORM				--코아형상
	
	,(CASE WHEN ISNULL(A.CORE_SIZE_W,0) != 0 THEN CONVERT(NVARCHAR, CONVERT(NUMERIC(6,0),A.CORE_SIZE_W)) ELSE '' END)
		+(CASE WHEN ISNULL(A.CORE_SIZE_L,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.CORE_SIZE_L)) ELSE '' END)
		+(CASE WHEN ISNULL(A.CORE_SIZE_H,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.CORE_SIZE_H)) ELSE '' END)
		+(CASE WHEN ISNULL(A.CORE_SIZE_P,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.CORE_SIZE_P)) ELSE '' END)
	AS CORE_SIZE
		
	--,A.PRODT_SIZE_W + '*'+ A.PRODT_SIZE_L + '*' + A.PRODT_SIZE_H + '*'+ A.PRODT_SIZE_P AS CORE_SIZE		--코어치수
	
	
	,A.CAVITY_Q					--캐비티수
	,A.CORE_METHOD				--슬라이드유무
	,A.PRODT_MTRL				--원료
	
	
	,(CASE WHEN ISNULL(B.EQU_SIZE_W,0) != 0 THEN CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),B.EQU_SIZE_W)) ELSE '' END)
		+(CASE WHEN ISNULL(B.EQU_SIZE_L,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),B.EQU_SIZE_L)) ELSE '' END)
		+(CASE WHEN ISNULL(B.EQU_SIZE_H,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),B.EQU_SIZE_H)) ELSE '' END)
	AS EQU_SIZE

	----,'1*2*3' AS EQU_SIZE		--몰드치수
	
	,(CASE WHEN ISNULL(A.PRODT_SIZE_W,0) != 0 THEN CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.PRODT_SIZE_W)) ELSE '' END)
		+(CASE WHEN ISNULL(A.PRODT_SIZE_L,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.PRODT_SIZE_L)) ELSE '' END)
		+(CASE WHEN ISNULL(A.PRODT_SIZE_H,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.PRODT_SIZE_H)) ELSE '' END)
		+(CASE WHEN ISNULL(A.PRODT_SIZE_P,0) != 0 THEN '*'+ CONVERT(NVARCHAR,  CONVERT(NUMERIC(6,0),A.PRODT_SIZE_P)) ELSE '' END)
	AS PRODT_SIZE
	
--	,'1*2*3*4' AS PRODT_SIZE	--부품치수

	,A.REMARK					--비고

  FROM EQU220T A WITH(NOLOCK)
INNER JOIN EQU200T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								 AND B.DIV_CODE = A.DIV_CODE
								 AND B.EQU_CODE = A.EQU_CODE
								 AND B.EQU_CODE_TYPE = '1'
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{DIV_CODE}
  
 <if test="@foren.Ognl@isNotEmpty(EQU_TYPE)">
  AND B.EQU_TYPE = #{EQU_TYPE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(CORE_TYPE)">
  AND A.CORE_TYPE = #{CORE_TYPE}
 </if>
 <if test="@foren.Ognl@isNotEmpty(CORE_FORM)">
  AND A.CORE_FORM = #{CORE_FORM}
 </if>
 
 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_W_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_W)">
	  AND A.PRODT_SIZE_W &gt;= (${PRODT_SIZE_W} - ${PRODT_SIZE_W_SUB})  AND A.PRODT_SIZE_W &lt;= (${PRODT_SIZE_W} + ${PRODT_SIZE_W_SUB})
	 </if>
 </if>
 <if test="@foren.Ognl@isEmpty(PRODT_SIZE_W_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_W)">
	  AND A.PRODT_SIZE_W = ${PRODT_SIZE_W}
	 </if>
 </if>
 
<if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_L_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_L)">
	  AND A.PRODT_SIZE_L &gt;= (${PRODT_SIZE_L} - ${PRODT_SIZE_L_SUB})  AND A.PRODT_SIZE_L &lt;= (${PRODT_SIZE_L} + ${PRODT_SIZE_L_SUB})
	 </if>
 </if>
 <if test="@foren.Ognl@isEmpty(PRODT_SIZE_L_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_L)">
	  AND A.PRODT_SIZE_L = ${PRODT_SIZE_L}
	 </if>
 </if>
 
 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_H_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_H)">
	  AND A.PRODT_SIZE_H &gt;= (${PRODT_SIZE_H} - ${PRODT_SIZE_H_SUB})  AND A.PRODT_SIZE_H &lt;= (${PRODT_SIZE_H} + ${PRODT_SIZE_H_SUB})
	 </if>
 </if>
 <if test="@foren.Ognl@isEmpty(PRODT_SIZE_H_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_H)">
	  AND A.PRODT_SIZE_H = ${PRODT_SIZE_H}
	 </if>
 </if>
 
 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_P_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_P)">
	  AND A.PRODT_SIZE_P &gt;= (${PRODT_SIZE_P} - ${PRODT_SIZE_P_SUB})  AND A.PRODT_SIZE_P &lt;= (${PRODT_SIZE_P} + ${PRODT_SIZE_P_SUB})
	 </if>
 </if>
 <if test="@foren.Ognl@isEmpty(PRODT_SIZE_P_SUB)">
	 <if test="@foren.Ognl@isNotEmpty(PRODT_SIZE_P)">
	  AND A.PRODT_SIZE_P = ${PRODT_SIZE_P}
	 </if>
 </if>
  
 <if test="@foren.Ognl@isNotEmpty(CAVITY_Q)">
  AND A.CAVITY_Q = ${CAVITY_Q}
  </if>
 <if test="@foren.Ognl@isNotEmpty(CORE_METHOD)">
  AND A.CORE_METHOD = #{CORE_METHOD}
  </if>
 <if test="@foren.Ognl@isNotEmpty(PRODT_MTRL)">
  AND A.PRODT_MTRL = #{PRODT_MTRL}
  </if>
 
</select>
	
	
	
	
	
	
	<select id="equ270skrvService.selectList2" parameterType="Map" resultType="rMap">
		<if test="EQU_TYPE_YN == &quot;true&quot;">
  AND B.EQU_TYPE = '03'
  </if>
  <if test="CORE_TYPE_YN == &quot;true&quot;">
  AND A.CORE_TYPE = '03'
  </if>
  <if test="CORE_FORM_YN == &quot;true&quot;">
  AND A.CORE_FORM = '03'
  </if>
  <if test="PRODT_SIZE_W_YN == &quot;true&quot;">
  AND A.PRODT_SIZE_W = 
  </if>
  <if test="PRODT_SIZE_L_YN == &quot;true&quot;">
  AND A.PRODT_SIZE_L = 
  </if>
  <if test="PRODT_SIZE_H_YN == &quot;true&quot;">
  AND A.PRODT_SIZE_H = 
  </if>
  <if test="PRODT_SIZE_P_YN == &quot;true&quot;">
  AND A.PRODT_SIZE_P = 
  </if>
  <if test="CAVITY_Q_YN == &quot;true&quot;">
  AND A.CAVITY_Q = 3
  </if>
  <if test="CORE_METHOD_YN == &quot;true&quot;">
  AND A.CORE_METHOD = ''
  </if>
  <if test="PRODT_MTRL_YN == &quot;true&quot;">
  AND A.PRODT_MTRL = 'ABS'
  </if>
		
		
        <if test="CHECK_YN == &quot;A&quot;">
            SELECT   A.COMP_CODE
                   , C.DIV_CODE
                   , A.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , A.ITEM_NAME
                   , A.SPEC
                   , C.ITEM_ACCOUNT
                   , A.CAR_TYPE
                   , B.REMARK
                   ,B.CUSTOM_CODE
                   ,B.DISTRIB_DATE
                   ,B.GUBUN_NUM
                   ,B.REVIS_DATE
                   ,B.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM BPR100T              A WITH (NOLOCK)
              LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.ITEM_CODE   = A.ITEM_CODE
			   LEFT JOIN BCM100T   D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  									  AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND C.DIV_CODE               = #{DIV_CODE}
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
              <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND A.SPEC LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
			 <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
               AND A.CAR_TYPE    = #{CAR_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND B.REMARK                 LIKE '%' + #{REMARK} + '%'
             </if>
			 ORDER BY A.COMP_CODE, A.ITEM_CODE
        </if>
        <if test="CHECK_YN == &quot;Y&quot;">
        	SELECT   A.COMP_CODE
                   , A.DIV_CODE
                   , B.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , B.ITEM_NAME
                   , B.SPEC
                   , C.ITEM_ACCOUNT
                   , B.CAR_TYPE
                   , A.REMARK
                   , A.CUSTOM_CODE
                   , A.DISTRIB_DATE
                   , A.GUBUN_NUM
                   , A.REVIS_DATE
                   , A.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM S_ZBB600T_KD    A WITH (NOLOCK)
              INNER JOIN BPR100T   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T   C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                  AND C.ITEM_CODE   = A.ITEM_CODE
			   LEFT JOIN BCM100T   D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  									  AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND A.DIV_CODE               = #{DIV_CODE}
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND A.REMARK                 LIKE '%' + #{REMARK} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              AND A.CUSTOM_CODE = #{CUSTOM_CODE}
             </if>

              <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(DISTRIB_DATE_FR)">
              AND A.DISTRIB_DATE <![CDATA[>=]]> #{DISTRIB_DATE_FR}
             </if>
             <if test="@foren.Ognl@isNotEmpty(DISTRIB_DATE_TO)">
              AND A.DISTRIB_DATE <![CDATA[<=]]> #{DISTRIB_DATE_TO}
             </if>
             <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
              AND B.CAR_TYPE = #{CAR_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND B.SPEC  LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
			ORDER BY A.COMP_CODE,A.DIV_CODE, A.ITEM_CODE
        </if>
        <if test="CHECK_YN == &quot;N&quot;">
        	SELECT   A.COMP_CODE
                   , C.DIV_CODE
                   , A.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , A.ITEM_NAME
                   , A.SPEC
                   , C.ITEM_ACCOUNT
                   , A.CAR_TYPE
                   , B.REMARK
                   ,B.CUSTOM_CODE
                   ,B.DISTRIB_DATE
                   ,B.GUBUN_NUM
                   ,B.REVIS_DATE
                   ,B.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM BPR100T              A WITH (NOLOCK)
              LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.ITEM_CODE   = A.ITEM_CODE
			  LEFT JOIN BCM100T 		D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  										   AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND C.DIV_CODE               = #{DIV_CODE}
               AND A.ITEM_CODE NOT          IN (SELECT A.ITEM_CODE
                                                FROM BPR100T A WITH (NOLOCK)
                                                INNER JOIN S_ZBB600T_KD B ON B.ITEM_CODE = A.ITEM_CODE)
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND A.SPEC LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
              AND A.CAR_TYPE = #{CAR_TYPE}
             </if>
			 ORDER BY A.COMP_CODE,A.ITEM_CODE
        </if>
    </select>







    <select id="equ270skrvService.insertCheck" parameterType="Map" resultType="String">
    	SELECT   A.COMP_CODE
               , C.DIV_CODE
               , A.OEM_ITEM_CODE
               , A.ITEM_CODE
               , A.ITEM_NAME
               , A.SPEC
               , A.CAR_TYPE
               , B.REMARK
          FROM BPR100T              A WITH (NOLOCK)
          LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                   AND B.ITEM_CODE   = A.ITEM_CODE
          INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                   AND C.ITEM_CODE   = A.ITEM_CODE
         WHERE A.COMP_CODE              = #{S_COMP_CODE}
           AND C.DIV_CODE               = #{DIV_CODE}
           AND A.ITEM_CODE              IN (SELECT A.ITEM_CODE
                                                FROM BPR100T A WITH (NOLOCK)
                                                INNER JOIN S_ZBB600T_KD B ON B.ITEM_CODE = A.ITEM_CODE)
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE              = #{ITEM_CODE}
         </if>
    </select>

    <update id="equ270skrvService.updateList" parameterType="Map">
        UPDATE S_ZBB600T_KD
           SET   CUSTOM_CODE    = #{CUSTOM_CODE}
               , DISTRIB_DATE   = #{DISTRIB_DATE}
               , GUBUN_NUM      = #{GUBUN_NUM}
               , REVIS_DATE     = #{REVIS_DATE}
               , LOCATION       = #{LOCATION}
               , REMARK         = #{REMARK}
               , UPDATE_DB_USER = #{S_USER_ID}
               , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND ITEM_CODE       = #{ITEM_CODE}
    </update>

    <insert id="equ270skrvService.insertList" parameterType="Map">
       INSERT INTO S_ZBB600T_KD
            (     COMP_CODE
                , DIV_CODE
                ,CUSTOM_CODE
                , ITEM_CODE
                ,DISTRIB_DATE
                ,GUBUN_NUM
                ,REVIS_DATE
                ,LOCATION
                , REMARK
                , INSERT_DB_USER
                , INSERT_DB_TIME
            )
         VALUES
            (     #{S_COMP_CODE}
                , #{DIV_CODE}
                , #{CUSTOM_CODE}
                , #{ITEM_CODE}
                , #{DISTRIB_DATE}
                , #{GUBUN_NUM}
                , #{REVIS_DATE}
                , #{LOCATION}
                , #{REMARK}
                , #{S_USER_ID}
                , GETDATE()
            )
    </insert>








    <select id="equ270skrvService.getFileList" parameterType="Map" resultType="rMap">
        /* bdc100vServiceImpl.getFileList  */
        SELECT    A.FID AS id
                , A.FID AS fid
                , A.ORIGINAL_FILE_NAME AS name
                , B.SIZE as size
                , '6' AS status
         FROM  BDC101T A
         INNER JOIN BFL200T B ON A.COMP_CODE    = B.COMP_CODE
                             AND A.FID          = B.FID
        WHERE A.COMP_CODE   = #{S_COMP_CODE}
          AND A.DOC_NO      = #{ITEM_CODE}
    </select>

    <select id="equ270skrvService.getDelFileId" parameterType="Map" resultType="rMap">
        /* bdc100vServiceImpl.getFileList  */
        SELECT FID
          FROM BDC101T A
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND DOC_NO       = #{ITEM_CODE}
    </select>

    <insert id="equ270skrvService.insertBDC101" parameterType="Map">
        /* bdc100vServiceImpl.insertBDC101 */
        INSERT INTO BDC101T (
                COMP_CODE
              , DOC_NO
              , FID
              , ORIGINAL_FILE_NAME
              , INSERT_DB_USER
              , INSERT_DB_TIME )
        SELECT  #{S_COMP_CODE}
              , #{ITEM_CODE}
              , #{FID}
              , ORIGINAL_FILE_NAME
              , #{S_USER_ID}
              , getdate()
          FROM  BFL200T
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND FID          = #{FID}
    </insert>

    <update id="equ270skrvService.deleteBDC101" parameterType="Map">
        /* bdc100vServiceImpl.deleteBDC101 */
        DELETE FROM  BDC101T
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND FID          = #{FID}
    </update>
</mapper>