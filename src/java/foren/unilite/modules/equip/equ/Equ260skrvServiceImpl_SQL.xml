<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="equ260skrvServiceImpl">
	<select id="equ260skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON

		    DECLARE @RTN_TBL TABLE (
		            SEQ                INT
		          , COMP_CODE          NVARCHAR(08)
		          , DIV_CODE           NVARCHAR(08)
		          -- 수주정보
		          , ORDER_NUM          NVARCHAR(08)
		          , SER_NO             NUMERIC(5)
		          , SALE_CUSTOM_CODE   NVARCHAR(20)
		          , SALE_Q             NUMERIC(30, 6)
		          , SALE_AMT_O         NUMERIC(30, 6)
		          , SALE_DATE          NVARCHAR(08)
		          , INSERT_DATE        NVARCHAR(08)
		          , DVRY_DATE          NVARCHAR(08)
		          , PROD_ITEM_CODE     NVARCHAR(20)
		          -- BOM정보
		          , LEVEL              INT
		          , ITEM_CODE          NVARCHAR(20)
		          , UNIT_Q             NUMERIC(30, 6)
		          , PROD_UNIT_Q        NUMERIC(30, 6)
		          , LOSS_RATE          NUMERIC(30, 2)
		          , NEED_Q             NUMERIC(30, 2)
		          , T_IDX int identity(1,1) NOT NULL
		    )

		    DECLARE @sCOMP_CODE        NVARCHAR(08)
		          , @sDIV_CODE         NVARCHAR(08)
		          , @sORDER_NUM        NVARCHAR(20)
		          , @sSER_NO           NUMERIC(5)
		          , @sSALE_CUSTOM_CODE NUMERIC(20)
		          , @sSALE_Q           NUMERIC(30, 6)
		          , @sSALE_AMT_O       NUMERIC(30, 6)
		          , @sSALE_DATE        NVARCHAR(08)
		          , @sINSERT_DATE      NVARCHAR(08)
		          , @sDVRY_DATE        NVARCHAR(08)
		          , @sPROD_ITEM_CODE   NVARCHAR(20)

		    DECLARE Cur1 CURSOR FOR
		    -- 커서에 사용할 SELECT 문장
		        -- 제품기준의 BOM
		        SELECT L.COMP_CODE, L.DIV_CODE, L.ORDER_NUM, L.SER_NO, A.SALE_CUSTOM_CODE, L.SALE_Q, L.SALE_AMT_O, A.SALE_DATE, CONVERT(NVARCHAR, L.INSERT_DB_TIME, 112) AS INSERT_DATE, L.ITEM_CODE
		          FROM       SSA110T L WITH(NOLOCK)
		          INNER JOIN SSA100T A WITH(NOLOCK) ON A.COMP_CODE   = L.COMP_CODE
		                                           AND A.DIV_CODE    = L.DIV_CODE
		                                           AND A.BILL_NUM	 = L.BILL_NUM
		          INNER JOIN BPR200T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                           AND B.DIV_CODE    = A.DIV_CODE
		                                           AND B.ITEM_CODE   = L.ITEM_CODE
		          INNER JOIN BCM100T C WITH(NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                           AND C.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		         WHERE L.COMP_CODE   = #{S_COMP_CODE}
		           AND L.DIV_CODE    = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(SALE_DATE_FR)">
		           AND A.SALE_DATE &gt;= #{SALE_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_DATE_TO)">
		           AND A.SALE_DATE &lt;= #{SALE_DATE_TO}
		</if>
		         ORDER BY L.COMP_CODE, L.DIV_CODE, L.ORDER_NUM, L.SER_NO
		        --AND A.PROD_ITEM_CODE = '101582-00208B'
		    OPEN Cur1
		    FETCH NEXT FROM Cur1 INTO @sCOMP_CODE, @sDIV_CODE, @sORDER_NUM, @sSER_NO, @sSALE_CUSTOM_CODE, @sSALE_Q, @sSALE_AMT_O, @sSALE_DATE, @sINSERT_DATE, @sPROD_ITEM_CODE
		    WHILE @@FETCH_STATUS = 0
		    BEGIN
		    -- 처리로직 Start
		        INSERT @RTN_TBL (
		               SEQ
		             , COMP_CODE
		             , DIV_CODE
		             -- 수주정보
		             , ORDER_NUM
		             , SER_NO
		             , SALE_CUSTOM_CODE
		             , SALE_Q
		             , SALE_AMT_O
		             , SALE_DATE
		             , INSERT_DATE
		             --, DVRY_DATE
		             , PROD_ITEM_CODE
		             -- BOM정보
		             , LEVEL
		             , ITEM_CODE
		             , UNIT_Q
		             , PROD_UNIT_Q
		             , LOSS_RATE
		             , NEED_Q
		        )
		        SELECT  SEQ, @sCOMP_CODE, @sDIV_CODE, @sORDER_NUM, @sSER_NO, @sSALE_CUSTOM_CODE, @sSALE_Q, @sSALE_AMT_O, @sSALE_DATE, @sINSERT_DATE, @sPROD_ITEM_CODE
		              , LEVEL, ITEM_CODE, UNIT_Q, PROD_UNIT_Q, LOSS_RATE, NEED_Q
		          FROM fnBOMExplosion4(#{S_COMP_CODE}, #{DIV_CODE}, @sPROD_ITEM_CODE, @sSALE_Q, CONVERT(NVARCHAR, GETDATE(), 112), 'unilite5', '')
		    -- 처리로직 End

		    FETCH NEXT FROM Cur1 INTO @sCOMP_CODE, @sDIV_CODE, @sORDER_NUM, @sSER_NO, @sSALE_CUSTOM_CODE, @sSALE_Q, @sSALE_AMT_O, @sSALE_DATE, @sINSERT_DATE, @sPROD_ITEM_CODE
		    END

		    -- 열린 커서 닫음
		    CLOSE Cur1
		    DEALLOCATE Cur1

		    SELECT A.COMP_CODE
		         , A.DIV_CODE
		         , ISNULL(G.EQU_CODE, '')                       AS EQU_CODE
		         , ISNULL(H.EQU_NAME, '')                       AS EQU_NAME
		         , A.ORDER_NUM
		         , A.SER_NO
		         , A.SALE_CUSTOM_CODE
		         , E.CUSTOM_NAME                               AS SALE_CUSTOM_NAME
		         , ISNULL(B3.ITEM_MODEL, '')                   AS MODEL_COL
		         , A.PROD_ITEM_CODE
		         , B3.ITEM_NAME                                AS PROD_ITEM_NAME
		         , A.SALE_Q
		         , A.SALE_AMT_O
		         , A.SALE_DATE
		         , A.INSERT_DATE
		         --, A.DVRY_DATE
		         , ISNULL(A.LEVEL,0)+1                         AS LEVEL_COL
		         , C.CODE_NAME                                 AS ITEM_ACCOUNT
		         --, SPACE(5 * ISNULL(A.LEVEL,0)) + A.ITEM_CODE  AS ITEM_LEVEL_COL
		         , REPLICATE('-', 5 * ISNULL(A.LEVEL,0)) + A.ITEM_CODE  AS ITEM_LEVEL_COL
		         , A.ITEM_CODE
		         , B1.ITEM_NAME
		         , B1.SPEC
		         , B1.STOCK_UNIT
		         , A.T_IDX
		     FROM @RTN_TBL A
		     INNER JOIN BPR100T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
		                                       AND B1.ITEM_CODE = A.ITEM_CODE
		     INNER JOIN BPR200T B2 WITH(NOLOCK) ON B2.COMP_CODE = @sCOMP_CODE
		                                       AND B2.DIV_CODE  = @sDIV_CODE
		                                       AND B2.ITEM_CODE = B1.ITEM_CODE
		     INNER JOIN BPR100T B3 WITH(NOLOCK) ON B3.COMP_CODE = @sCOMP_CODE
		                                       AND B3.ITEM_CODE = A.PROD_ITEM_CODE
		     INNER JOIN BSA100T C WITH(NOLOCK)  ON C.COMP_CODE  = B2.COMP_CODE
		                                       AND C.MAIN_CODE  = 'B020'
		                                       AND C.SUB_CODE   = B2.ITEM_ACCOUNT
		     LEFT JOIN (
		                SELECT COMP_CODE, ITEM_CODE, AVG(ORDER_P) AS ORDER_P
		                  FROM MPO200T WITH(NOLOCK)
		                 WHERE COMP_CODE = @sCOMP_CODE
		                 GROUP BY COMP_CODE, ITEM_CODE
		                ) D ON D.COMP_CODE = A.COMP_CODE
		                   AND D.ITEM_CODE = A.ITEM_CODE
		     LEFT JOIN BCM100T E   WITH(NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
		                                       AND E.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		     LEFT JOIN BCM100T F   WITH(NOLOCK) ON F.COMP_CODE   = B2.COMP_CODE
		                                       AND F.CUSTOM_CODE = B2.CUSTOM_CODE
		     LEFT JOIN EQU210T G   WITH(NOLOCK) ON G.COMP_CODE   = A.COMP_CODE
		                                       AND G.DIV_CODE	= A.DIV_CODE
		                                       AND G.ITEM_CODE	= A.ITEM_CODE
		     LEFT JOIN EQU200T H   WITH(NOLOCK) ON H.COMP_CODE   = G.COMP_CODE
		                                       AND H.DIV_CODE	= G.DIV_CODE
		                                       AND H.EQU_CODE	= G.EQU_CODE
		     WHERE SUBSTRING(A.ITEM_CODE, 11, 1) = 'A' 
		<if test="@foren.Ognl@isNotEmpty(EQU_CODE) and @foren.Ognl@isNotEmpty(EQU_NAME)">
		       AND ISNULL(G.EQU_CODE, '') = #{EQU_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EQU_CODE) and @foren.Ognl@isEmpty(EQU_NAME)">
		       AND ISNULL(G.EQU_CODE, '') LIKE #{EQU_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isEmpty(EQU_CODE) and @foren.Ognl@isNotEmpty(EQU_NAME)">
		       AND ISNULL(H.EQU_NAME, '') LIKE #{EQU_NAME} + '%'
		</if>
		     ORDER BY G.EQU_CODE, A.ORDER_NUM, A.SER_NO
		     --ORDER BY SORT_FLD
		     --ORDER BY A.T_IDX
		    SET NOCOUNT OFF
		END 
	</select>
</mapper>