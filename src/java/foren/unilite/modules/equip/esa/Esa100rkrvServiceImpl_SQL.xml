<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="esa100rkrvServiceImpl">	
	<select id="esa100rkrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID */
		          , @LangType    NVARCHAR(2)  /* 언어구분   */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
			/* 데이터 조회 */
		     SELECT 
					  A.AS_NUM
					, (SELECT X.CODE_NAME 
						FROM BSA100T X
			            WHERE X.MAIN_CODE = 'S805'
			              AND X.SUB_CODE  = A.AS_TYPE)	AS AS_TYPE
					, (SELECT X.CODE_NAME 
						FROM BSA100T X
			            WHERE X.MAIN_CODE = 'S802'
			              AND X.SUB_CODE  = A.BEFORE_PAY_YN)	 AS BEFORE_PAY_YN
					, (SELECT X.CODE_NAME 
						FROM BSA100T X
			            WHERE X.MAIN_CODE = 'S802'
			              AND X.SUB_CODE  = A.PAY_YN)	AS PAY_YN
					, A.ACCEPT_PRSN
					, A.ACCEPT_DATE
					, A.ADDR2
					, A.AS_CUSTOMER_NM
					, ISNULL(A.PHONE, A.HPHONE)			AS PHONE  
					, B.PROJECT_NO 
					, A.ACCEPT_REMARK
			  FROM  EAS100T A WITH(NOLOCK)
					LEFT JOIN SOF100T B WITH(NOLOCK) ON A.COMP_CODE	=	B.COMP_CODE
													AND A.DIV_CODE	=	B.DIV_CODE
													AND A.ORDER_NUM	=	B.ORDER_NUM
			 WHERE A.AS_NUM    = #{AS_NUM_SEACH}
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
    </select>
    <select id="esa100rkrvServiceImpl.selectDate" parameterType="Map" resultType="rMap">
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
				
			/* 데이터 조회 */ 
		     SELECT 
					MAX(A.CLOSE_DATE)								AS CLOSE_DATE
				 ,  DATEDIFF(DD, B.ACCEPT_DATE, MAX(A.CLOSE_DATE))	AS DATE_CNT
				 ,  ISNULL(C.PERSON_NAME, '')						AS PERSON_NAME
			  FROM  EAS210T A WITH(NOLOCK)
					INNER JOIN EAS100T B WITH(NOLOCK) ON A.COMP_CODE	= B.COMP_CODE
													 AND A.DIV_CODE		= B.DIV_CODE
													 AND A.AS_NUM		= B.AS_NUM
					LEFT  JOIN (SELECT TOP 1 COMP_CODE, DIV_CODE, PERSON_NAME 
					              FROM EAS230T WITH(NOLOCK) 
								 WHERE AS_NUM		= #{AS_NUM_SEACH}) C ON A.COMP_CODE		= C.COMP_CODE
																		AND A.DIV_CODE		= C.DIV_CODE 

			 WHERE A.AS_NUM    = #{AS_NUM_SEACH}
			 GROUP BY A.COMP_CODE, A.DIV_CODE, A.AS_NUM, B.ACCEPT_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		    
		END
    </select>
    <select id="esa100rkrvServiceImpl.existMaster" parameterType="Map" resultType="rMap">
    	SELECT AS_NUM FROM EAS100T
    	WHERE AS_NUM=#{AS_NUM_SEACH}
    </select>
    <update id="esa100rkrvServiceImpl.getAutoNum" parameterType="Map" statementType="CALLABLE">
	    {call SP_GetAutoNumComp (
	        #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
    
    <insert id="esa100rkrvServiceImpl.insertMaster" parameterType="Map"> 
    	INSERT INTO EAS100T
           (
           COMP_CODE
           ,DIV_CODE
           ,AS_NUM
           ,ACCEPT_PRSN
           ,ACCEPT_GUBUN
           ,ACCEPT_REMARK
           ,ACCEPT_DATE
           ,AS_CUSTOMER_CD
           ,AS_CUSTOMER_NM
           ,COMPANY_NUM
           ,PHONE
           ,HPHONE
           ,ADDR2
           ,ACCEPT_REMARK
           ,FINISH_YN
           ,FINISH_REQ_DATE
           ,FINISH_EST_DATE
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME
           ,INSERT_DB_USER
           ,INSERT_DB_TIME
           )
     VALUES
           (
			 #{S_COMP_CODE}
           ,#{DIV_CODE}
           ,#{AS_NUM}
           ,#{ACCEPT_PRSN}
           ,#{ACCEPT_GUBUN}
           ,#{ACCEPT_REMARK}
           ,#{ACCEPT_DATE}
           ,#{AS_CUSTOMER_CD}
           ,#{AS_CUSTOMER_NM}
           ,#{COMPANY_NUM}
           ,#{PHONE}
           ,#{HPHONE}
           ,#{ADDR2}
           ,#{ACCEPT_REMARK}
           ,'N'
           ,#{FINISH_REQ_DATE}
           ,#{FINISH_EST_DATE}
           ,#{S_USER_ID}
           ,GETDATE()
           ,#{S_USER_ID}
           ,GETDATE()
           )
    </insert>  
    
    <update id="esa100rkrvServiceImpl.updateMaster" parameterType="Map" statementType="CALLABLE">
		UPDATE EAS100T
		   SET  ACCEPT_PRSN		= #{ACCEPT_PRSN}
	           ,ACCEPT_GUBUN	= #{ACCEPT_GUBUN}
	           ,ACCEPT_DATE		= #{ACCEPT_DATE}
	           ,AS_CUSTOMER_CD	= #{AS_CUSTOMER_CD}
	           ,AS_CUSTOMER_NM	= #{AS_CUSTOMER_NM}
	           ,COMPANY_NUM		= #{COMPANY_NUM}
	           ,PHONE			= #{PHONE}
	           ,HPHONE			= #{HPHONE}
	           ,ADDR2			= #{ADDR2}
	           ,ACCEPT_REMARK	= #{ACCEPT_REMARK}
	           ,FINISH_REQ_DATE = #{FINISH_REQ_DATE}
	           ,FINISH_EST_DATE = #{FINISH_EST_DATE}
	           ,UPDATE_DB_USER	= #{S_USER_ID}
           	   ,UPDATE_DB_TIME  = GETDATE()
		 WHERE AS_NUM=#{AS_NUM}
	</update>	
	
	<select id="esa100rkrvServiceImpl.printList" parameterType="Map" resultType="rMap">
		SELECT
		    A.AS_NUM            AS RECEIPT_NO,
		    uniLITE.fnGetUserdate (A.COMP_CODE, A.ACCEPT_DATE)       AS RECEIPT_DT,
		    uniLITE.fnGetUserdate (A.COMP_CODE, A.OUT_DATE)          AS CLS_DT,
		    DATEDIFF(DAY, A.ACCEPT_DATE, A.OUT_DATE) AS DayCnt,
		    A.ORDER_NUM,
		    B.ORDER_O,
		    B.PROJECT_NO,
		    (A.ITEM_O + A.MAN_O + A.REPAIR_O)        AS AMOUNT,
		    '0'                                      AS RATE,
		    A.ITEM_O        AS MTRL_COST,
		    A.MAN_O         AS LABOR_COST,
		    A.REPAIR_O      AS EXPNS_COST,
		    (SELECT X.CODE_NAME
		     FROM BSA100T X
		     WHERE X.MAIN_CODE = 'S802'
		           AND X.SUB_CODE = A.PAY_YN)        AS PAY_GUBN,
		    (SELECT X.CODE_NAME
		     FROM BSA100T X
		     WHERE X.MAIN_CODE = 'S803'
		           AND X.SUB_CODE = A.FINISH_YN)     AS CLS_GUBN
		FROM EAS100T A LEFT JOIN SOF100T B ON A.ORDER_NUM = B.ORDER_NUM
		WHERE 1=1
			<if test="@foren.Ognl@isNotEmpty(FR_DATE)">
	        AND A.ACCEPT_DATE &gt;= #{FR_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(TO_DATE)">
	        AND A.ACCEPT_DATE &lt;= #{TO_DATE}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(AS_NUM)">
	        AND A.AS_NUM = #{AS_NUM}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(ACCEPT_GUBUN)">
	        AND A.ACCEPT_GUBUN = #{ACCEPT_GUBUN}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(PAY_YN)">
	        AND A.PAY_YN = #{PAY_YN}
	        </if>
	        <if test="@foren.Ognl@isNotEmpty(FINISH_YN)">
	        AND A.FINISH_YN = #{FINISH_YN}
	        </if>
    </select>
</mapper>