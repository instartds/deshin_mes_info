<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_tpl200ukr_kdServiceImpl">
	
	<select id="s_tpl200ukr_kdServiceImpl.select" parameterType="Map" resultType="rMap">
		SELECT	 PGM_ID
				,SEQ
				,COL01
				,COL02
				,COL03
				,COL04
				,COL05
				,COL06
				,COL07
				,COL08
				,COL09
				,COL10
		 FROM TMP_CSV_30
		WHERE FILE_ID = #{FILE_ID}
		
	</select>
	
	<insert id="s_tpl200ukr_kdServiceImpl.insertCSV" parameterType="Map">
		INSERT INTO TMP_CSV_30(
			 PGM_ID
			,FILE_ID
			,SEQ
			,COL01
			,COL02
			,COL03
			,COL04
			,COL05
            ,COL06
            ,COL07
            ,COL08
            ,COL09
            ,COL10
            ,COL11
            ,COL12
            ,COL13
            ,COL14
            ,COL15
            ,COL16
            ,COL17
            ,COL18
            ,COL19
            ,COL20
            ,COL21
            ,COL22
            ,COL23
            ,COL24
            ,COL25
            ,COL26
            ,COL27
            ,COL28
            ,COL29
            ,COL30
		)
		VALUES(
			 #{PGM_ID}
			,#{FILE_ID}
			,#{SEQ}
		    ,#{COL01}
		    ,#{COL02}
		    ,#{COL03}
		    ,#{COL04}
		    ,#{COL05}
            ,#{COL06}
            ,#{COL07}
            ,#{COL08}
            ,#{COL09}
            ,#{COL10}
            ,#{COL11}
            ,#{COL12}
            ,#{COL13}
            ,#{COL14}
            ,#{COL15}
            ,#{COL16}
            ,#{COL17}
            ,#{COL18}
            ,#{COL19}
            ,#{COL20}
            ,#{COL21}
            ,#{COL22}
            ,#{COL23}
            ,#{COL24}
            ,#{COL25}
            ,#{COL26}
            ,#{COL27}
            ,#{COL28}
            ,#{COL29}
            ,#{COL30}
		)
			
	</insert>
	
	<update id="s_tpl200ukr_kdServiceImpl.updateMaster" parameterType="Map">		
		UPDATE TMP100T
			SET 
				 COL1 = #{COL1}
				,COL2 = #{COL2}
				,COL3 = #{COL3}
				,COL4 = #{COL4}
				,COL5 = #{COL5} 
				,UPDATE_DB_USER = #{S_USER_ID}
				,UPDATE_DB_TIME = GETDATE()
			WHERE COMP_CODE = #{S_COMP_CODE}
			  AND SEQ = #{SEQ}	
	</update>
	
	<delete id="s_tpl200ukr_kdServiceImpl.deleteMaster" parameterType="Map">
		DELETE FROM TMP100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND SEQ = #{SEQ} 
	</delete>
	
	
	
	
	<select id="s_tpl200ukr_kdServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		SELECT	 COMP_CODE
				,SEQ
				,COL1
				,COL2
				,COL3
				,COL4
				,COL5
				,INSERT_DB_USER
				,INSERT_DB_TIME
				,UPDATE_DB_USER
				,UPDATE_DB_TIME				
		 FROM TMP100T
		WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<insert id="s_tpl200ukr_kdServiceImpl.insertDetail" parameterType="Map">
		INSERT INTO TMP100T(
			 COMP_CODE
			,SEQ
			,COL1
			,COL2
			,COL3
			,COL4
			,COL5
			,INSERT_DB_USER
			,INSERT_DB_TIME
			,UPDATE_DB_USER
			,UPDATE_DB_TIME				
		)
		VALUES(
			 #{S_COMP_CODE}
			,#{SEQ}
		    ,#{COL1}
		    ,#{COL2}
		    ,#{COL3}
		    ,#{COL4}
		    ,#{COL5}
		    ,#{S_USER_ID}
		    ,GETDATE()
		    ,#{S_USER_ID}
		    ,GETDATE()
		)
			
	</insert>
	
	<update id="s_tpl200ukr_kdServiceImpl.updateDetail" parameterType="Map">		
		UPDATE TMP100T
			SET 
				 COL1 = #{COL1}
				,COL2 = #{COL2}
				,COL3 = #{COL3}
				,COL4 = #{COL4}
				,COL5 = #{COL5} 
				,UPDATE_DB_USER = #{S_USER_ID}
				,UPDATE_DB_TIME = GETDATE()
			WHERE COMP_CODE = #{S_COMP_CODE}
			  AND SEQ = #{SEQ}	
	</update>
	
	<delete id="s_tpl200ukr_kdServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM TMP100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND SEQ = #{SEQ} 
	</delete>
	
	<select id="s_tpl200ukr_kdServiceImpl.getAutoNumComp" resultType="String">
		/* cmd100ukrvServiceImpl.getAutoNumComp 문서번호 생성 */
		DECLARE  @DOC_NO               NVARCHAR(20)          /*문서번호*/    
				,@CDATE					NVARCHAR(8)
		SET		@CDATE = CONVERT(NVARCHAR(8), GETDATE(),112) 
		            EXEC uniLITE.SP_GetAutoNumComp 'MASTER', 'DM', 'TMP100T', '', @CDATE, '1', @DOC_NO OUTPUT
		            
		 select @DOC_NO  as a
	</select>
	
	
	<select id="s_tpl200ukr_kdServiceImpl.selectTree" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
		/* bpr110ukrvService.selectList */
		SELECT   CASE WHEN LEVEL2 = '*' THEN LEVEL1
					 WHEN LEVEL3 = '*' THEN LEVEL2
					 ELSE LEVEL3
				 END as id
				 , CASE WHEN LEVEL2 = '*' THEN 'rootData'
					 WHEN LEVEL3 = '*' THEN LEVEL1
					 ELSE LEVEL2
				 END as parentId
				 ,(CASE WHEN LEVEL2 = '*'  THEN '1'                                       
		             WHEN LEVEL3 = '*'  THEN '2'                       
		             ELSE '3'
		         END) LVL  		
			  , CASE WHEN LEVEL2 = '*' THEN LEVEL1
					 WHEN LEVEL3 = '*' THEN LEVEL2
					 ELSE LEVEL3
				 END as LEVEL_CODE
		     , LEVEL1                                                   
		     , LEVEL2                                                   
		     , LEVEL3                                                   
		     , LEVEL_NAME                                               
		     , USE_YN
		     , UPDATE_DB_USER                                           
		     , UPDATE_DB_TIME                                           
		     , COMP_CODE 
		     <if test="@foren.Ognl@isNotEmpty(LEVEL1)">
		     	,CASE 
		     		WHEN LEVEL1 = #{LEVEL1} 
		     		<if test="@foren.Ognl@isNotEmpty(LEVEL2)">
		     			AND LEVEL2 = #{LEVEL2}
		     			<if test="@foren.Ognl@isNotEmpty(LEVEL3)">
		     				AND LEVEL3 = #{LEVEL3}
		     			</if>
		     			<if test="@foren.Ognl@isEmpty(LEVEL3)">
		     				AND LEVEL3 = '*'
		     			</if>
		     		</if>
		     		<if test="@foren.Ognl@isEmpty(LEVEL2)">
		     			AND LEVEL2 ='*' AND LEVEL3='*'
		     		</if>
		     		THEN 'true'  
		     		ELSE 'false' 
		     	END AS 'expanded'
		     </if>      
		      <if test="@foren.Ognl@isEmpty(LEVEL1)">    
		      	 ,'false' AS 'expanded'  
		      </if>                           
		  FROM BPR000T          
		  WHERE COMP_CODE = #{S_COMP_CODE}        
		   <if test="@foren.Ognl@isNotEmpty(USE_YN)">  
		   	AND ISNULL(USE_YN,'Y') = #{USE_YN}
		   </if>                             
		  ORDER BY LEVEL1, LEVEL2, LEVEL3
	</select>
	
	
	<select id="s_tpl200ukr_kdServiceImpl.selectSub" parameterType="Map" resultType="rMap">

	</select>
	
	<select id="s_tpl200ukr_kdServiceImpl.selectForm" parameterType="Map" resultType="rMap">
		SELECT	TOP 1 
				 COMP_CODE
				,SEQ
				,COL1
				,COL2
				,COL3
				,COL4
				,COL5
				,INSERT_DB_USER
				,INSERT_DB_TIME
				,UPDATE_DB_USER
				,UPDATE_DB_TIME				
		 FROM TMP100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		
	</select>
	
		
	<select id="s_tpl200ukr_kdServiceImpl.getFileList" parameterType="Map" resultType="rMap">
		/* bdc100ukrvServiceImpl.getFileList  */
		SELECT 	  A.FID AS id
				, A.FID AS fid
				, A.ORIGINAL_FILE_NAME AS name
				, B.SIZE as size
				, '6' AS status 
		 FROM BDC101T A 
		 INNER JOIN BFL200T B ON A.COMP_CODE = B.COMP_CODE AND A.FID = B.FID
		WHERE A.COMP_CODE= #{S_COMP_CODE} 
		 AND A.DOC_NO = #{DOC_NO}
		 
	</select>
	<insert id="s_tpl200ukr_kdServiceImplInsertExcelSof112t" parameterType="Map">
    	INSERT INTO TPL112T
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, ITEM_CODE, QTY)
    	VALUES (
    		#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR}, #{_EXCEL_ERROR}, #{ITEM_CODE}, #{QTY}
    	)
    </insert>  
	<select id="s_tpl200ukr_kdServiceImplSelectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		SELECT A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A.ITEM_CODE
			 , A.QTY
			 , A.WH_CODE	AS OUT_WH_CODE
		  FROM TPL112T A
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>
	<update id="s_tpl200ukr_kdServiceImplExcelValidateTmp" parameterType="Map" >
		UPDATE   A
		SET 
				A._EXCEL_HAS_ERROR = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL  
										   THEN 'Y' 
								      ELSE A._EXCEL_HAS_ERROR 
								      END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.ITEM_CODE IS NULL OR C.ITEM_CODE IS NULL  
										   THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 품목정보가 존재하지 않습니다. ' 
									  ELSE A._EXCEL_ERROR_MSG END)
		FROM TPL112T A 
		LEFT JOIN  BPR100T B    ON B.COMP_CODE= #{S_COMP_CODE}
							   AND A.ITEM_CODE = B.ITEM_CODE
		LEFT JOIN  BPR200T C    ON C.COMP_CODE= #{S_COMP_CODE}	
		  					   AND C.DIV_CODE = #{DIV_CODE}				   
							   AND A.ITEM_CODE = C.ITEM_CODE
		WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	<update id="s_tpl200ukr_kdServiceImplExcelValidate" parameterType="Map" >
	   
		UPDATE  A
		SET 
				A._EXCEL_HAS_ERROR = (CASE WHEN B.USE_YN = 'N' 
											THEN 'Y' 
										   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} 
											THEN 'Y'
										   WHEN  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
											THEN 'Y'
								      ELSE A._EXCEL_HAS_ERROR 
								      END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.USE_YN = 'N' 
											THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용중지된 품목입니다.' 
										   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} OR  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
											THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용기간이 경과한 품목입니다.('+ISNULL(B.START_DATE, '')+'~'+ISNULL(B.STOP_DATE, '')+')'  
									  ELSE A._EXCEL_ERROR_MSG END)
		FROM TPL112T A 
		INNER JOIN  BPR100T B  ON B.COMP_CODE= #{S_COMP_CODE}
							  AND A.ITEM_CODE = B.ITEM_CODE
		WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	<select id="s_tpl200ukr_kdServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		SELECT A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A.ITEM_CODE
			 , A.QTY
		  FROM TPL112T A
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>
	
	<select id="s_tpl200ukr_kdServiceImpl.selectTest" parameterType="Map" resultType="rMap">
		select html_document
		from TB_ES_APRV_MAIN_DT
		where MANAGE_NO = 'XP2016092800002'
	</select>
</mapper>