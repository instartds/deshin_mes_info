<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc800skrv_kdService">
	<select id="s_zcc800skrv_kdService.selectPersonDept" parameterType="Map" resultType="rMap">
        SELECT  H.DEPT_CODE
              , H.DEPT_NAME
        FROM                HUM100T   H  WITH (NOLOCK)
            WHERE   H.COMP_CODE        = #{S_COMP_CODE}
              AND   H.PERSON_NUMB      = #{PERSON_NUMB}
    </select>
	
	<select id="s_zcc800skrv_kdService.selectList" parameterType="Map" resultType="rMap">     
         SELECT
        	A.COMP_CODE
			,A.DIV_CODE
			
			,B.REQ_DATE
			,B.MAKE_GUBUN
			,B.ITEM_NAME
			
			,A.REQ_NUM
			,A.REQ_SEQ
			,A.HM_CODE
			,A.CHILD_ITEM_CODE
			,R3.ITEM_NAME AS CHILD_ITEM_NAME
			,R3.ORDER_UNIT	AS UNIT
			,R2.SPEC	AS CHILD_ITEM_SPEC
			,A.PURCHASE_P
			,A.GARO_NUM
			,A.SERO_NUM
			,A.THICK_NUM
			,A.BJ_NUM
			,A.QTY
			,A.PRICE
			,A.AMT
			,A.DELIVERY_DATE
			,A.PURCHASE_QTY
			,C.IN_DATE
			,(CASE WHEN A.QTY - C.IN_Q &lt;= 0 THEN 'Y' ELSE 'N' END) AS CLOSE_YN
			,A.REMARK
			,A.CAL_QTY

			,R1.REF_CODE1 AS MAKE_GUBUN_REF1	--가로FLAG
			,R1.REF_CODE2 AS MAKE_GUBUN_REF2	--세로FLAG
			,R1.REF_CODE3 AS MAKE_GUBUN_REF3	--두께FLAG

			,R1.REF_CODE4 AS GARO_NUM_UNIT		--단위(가로)
			,R1.REF_CODE5 AS SERO_NUM_UNIT		--단위(세로)
			,R1.REF_CODE6 AS THICK_NUM_UNIT		--단위(두께)

			,R4.REF_CODE1 AS MATERIAL
		    ,B.GW_DOC AS GW_DOCU_NUM
            ,B.GW_FLAG
            
            ,R5.CUSTOM_NAME
            ,R6.TREE_NAME AS DEPT_NAME
            ,R7.NAME AS PERSON_NAME
            ,R1.REF_CODE8 AS CAL_UNIT
            ,B.REMARK AS REMARK_M
          FROM s_zcc810T_KD A WITH(NOLOCK)
	INNER JOIN s_zcc800T_KD B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										  AND B.DIV_CODE = A.DIV_CODE
										  AND B.REQ_NUM = A.REQ_NUM
	 LEFT JOIN (SELECT A.COMP_CODE, A.DIV_CODE, A.SO_NUM, A.SO_SEQ, MAX(ISNULL(B.INOUT_DATE, '')) AS IN_DATE, SUM(ISNULL(B.INOUT_Q,0)) AS IN_Q
				  FROM MPO200T A WITH(NOLOCK)
				  LEFT JOIN BTR100T B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												  AND B.DIV_CODE	= A.DIV_CODE
												  AND B.ORDER_NUM	= A.ORDER_NUM
												  AND B.ORDER_SEQ	= A.ORDER_SEQ
												  AND B.COMP_CODE	= 'MASTER'
												  AND B.DIV_CODE	= '01'
												  AND B.INOUT_TYPE	= '1'
												  AND B.INOUT_METH	= '1'
												  AND B.CREATE_LOC	= '2'
				GROUP BY A.COMP_CODE, A.DIV_CODE, A.SO_NUM, A.SO_SEQ) C ON A.COMP_CODE	= C.COMP_CODE
																	   AND A.DIV_CODE	= C.DIV_CODE
																	   AND A.REQ_NUM	= C.SO_NUM
																	   AND A.REQ_SEQ	= C.SO_SEQ
	 LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
									  AND R1.MAIN_CODE = 'WZ21'
									  AND R1.SUB_CODE != '$'
									  AND R1.SUB_CODE = B.MAKE_GUBUN
	LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
									 AND R2.ITEM_CODE = A.CHILD_ITEM_CODE
	LEFT JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
									 AND R3.DIV_CODE = A.DIV_CODE
									 AND R3.ITEM_CODE = A.CHILD_ITEM_CODE
	LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
									 AND R4.MAIN_CODE = 'WZ22'
									 AND R4.SUB_CODE != '$'
									 AND R4.SUB_CODE = A.HM_CODE
	LEFT JOIN BCM100T R5 WITH(NOLOCK) ON R5.COMP_CODE = B.COMP_CODE
									 AND R5.CUSTOM_CODE = B.CUSTOM_CODE
									 
	LEFT JOIN BSA210T R6 WITH(NOLOCK) ON R6.COMP_CODE = B.COMP_CODE
									 AND R6.TREE_CODE = B.DEPT_CODE
	LEFT JOIN HUM100T R7 WITH(NOLOCK) ON R7.COMP_CODE = B.COMP_CODE
									 AND R7.PERSON_NUMB = B.PERSON_NUMB

             WHERE A.COMP_CODE      = #{S_COMP_CODE} 
               AND A.DIV_CODE       = #{DIV_CODE}
                <if test="@foren.Ognl@isNotEmpty(REQ_NUM)">
               AND  A.REQ_NUM       = #{REQ_NUM}
               </if>
             <if test="@foren.Ognl@isNotEmpty(REQ_DATE_FR)">
				  AND B.REQ_DATE &gt;= #{REQ_DATE_FR}
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(REQ_DATE_TO)">
				  AND B.REQ_DATE &lt;= #{REQ_DATE_TO}
			 </if>
			 
               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
               AND  B.CUSTOM_CODE   = #{CUSTOM_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(MAKE_GUBUN)">
               AND  B.MAKE_GUBUN     = #{MAKE_GUBUN}
               </if>
               <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND  B.ITEM_NAME    LIKE '%' + #{ITEM_NAME} + '%'
               </if>
               <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
               AND  B.DEPT_CODE     = #{DEPT_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
               AND  B.PERSON_NUMB   = #{PERSON_NUMB}
               </if>
               <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND  B.REMARK        LIKE #{REMARK} +'%'
               </if>  
               
               <if test="@foren.Ognl@isNotEmpty(CLOSE_YN)">
               AND (CASE WHEN A.QTY - C.IN_Q &lt;= 0 THEN 'Y' ELSE 'N' END) = #{CLOSE_YN}
               </if>
		ORDER BY A.COMP_CODE, A.DIV_CODE,B.CUSTOM_CODE, A.REQ_NUM, A.REQ_SEQ
    </select>
</mapper>