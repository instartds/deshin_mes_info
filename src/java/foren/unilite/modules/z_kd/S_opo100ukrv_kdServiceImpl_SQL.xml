<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_opo100ukrv_kdService">

    <select id="s_opo100ukrv_kdService.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
        FROM    MPO100T WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     ORDER_NUM = #{ORDER_NUM}
    </select>

    <select id="s_opo100ukrv_kdService.makeDraftNum" parameterType="Map" resultType="rMap">
        UPDATE  MPO100T
        SET     DRAFT_NO        = #{DRAFT_NO}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ORDER_NUM   = #{ORDER_NUM}
    </select>

	<select id="s_opo100ukrv_kdService.selectOrderNumList" parameterType="Map" resultType="rMap">

    --s_opo100ukrv_kdService.selectOrderNumList
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE @COMP_CODE      NVARCHAR(08) /* 법인코드    */
              , @USER_ID        NVARCHAR(100) /* 사용자ID    */
              , @LANG_TYPE      NVARCHAR(02) /* 언어구분    */
              , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
              , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

        SET @COMP_CODE = #{S_COMP_CODE}
        SET @USER_ID   = #{S_USER_ID}
        SET @LANG_TYPE = #{S_LANG_CODE}

        /* 명칭 참조 유형 */
        SELECT  TOP 1 @RefItem = REF_ITEM
        FROM    BSA300T WITH (NOLOCK)
        WHERE   USER_ID = @USER_ID

        SET @RefItem = ISNULL(@RefItem, N'0')

        /* 날짜 포맷 유형 설정 */
        SELECT  TOP 1 @DateFormat = CODE_NAME
        FROM    BSA100T WITH (NOLOCK)
        WHERE   COMP_CODE = @COMP_CODE
        AND     MAIN_CODE = N'B044'
        AND     REF_CODE1 = N'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

        /* 데이터 조회 */
        SELECT (CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
                     WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
                                         ELSE D.CUSTOM_NAME
                END)                                           AS CUSTOM_NAME
             , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
                END)                                           AS ORDER_DATE
             ,  A.ORDER_TYPE
             ,  A.ORDER_NUM
             ,  A.CUSTOM_CODE
             ,  A.ORDER_PRSN
             ,  A.AGREE_STATUS
             ,  A.AGREE_PRSN
             ,  C.USER_NAME AS AGREE_PRSN_NAME
             , (CASE WHEN ISNULL(A.AGREE_DATE, '') = ''
                     THEN ''
                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AGREE_DATE, 1, 4))
                                                             , 'MM'  , SUBSTRING(A.AGREE_DATE, 5, 2))
                                                             , 'DD'  , SUBSTRING(A.AGREE_DATE, 7, 2))
                END)                                           AS AGREE_DATE
             ,  A.MONEY_UNIT
             ,  A.LC_NUM
             ,  A.RECEIPT_TYPE
             ,  A.REMARK
             ,  A.DIV_CODE
             ,  A.EXCHG_RATE_O
             ,  A.DRAFT_YN
             ,  A.PROJECT_NO
             ,  A.GW_FLAG
             ,  A.PROG_WORK_CODE
			       , (SELECT TOP 1 PROG_WORK_NAME FROM PBS200T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND PROG_WORK_CODE=A.PROG_WORK_CODE) AS PROG_WORK_NAME
			,  A.DEPT_CODE
		    ,  F.TREE_NAME AS DEPT_NAME
        FROM               MPO100T A  WITH (NOLOCK)
                LEFT  JOIN BSA300T C  WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                   AND C.USER_ID            = A.AGREE_PRSN
                INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                   AND D.CUSTOM_CODE        = A.CUSTOM_CODE
                LEFT  JOIN BSA210T F  WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                   AND F.TYPE_LEVEL         = A.DIV_CODE
                                                   AND F.TREE_CODE          = A.DEPT_CODE
        WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.ORDER_TYPE     = N'4'
         <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
        AND     A.ORDER_DATE    &gt;= #{ORDER_DATE_FR}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
        AND     A.ORDER_DATE    &lt;= #{ORDER_DATE_TO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
        AND     A.ORDER_PRSN        = #{ORDER_PRSN}
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
        AND     A.CUSTOM_CODE   LIKE  #{CUSTOM_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(AGREE_STATUS)">
        AND     A.AGREE_STATUS      = #{AGREE_STATUS}
         </if>
         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND     A.DIV_CODE          = #{DIV_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
        AND     F.TREE_LEVEL    LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =F.COMP_CODE AND TYPE_LEVEL=F.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
         </if>
         <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
        AND     A.ORDER_NUM = #{ORDER_NUM}
         </if>
        ORDER   BY CUSTOM_NAME, A.ORDER_DATE, A.ORDER_TYPE, A.ORDER_NUM

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END

	</select>


	<select id="s_opo100ukrv_kdService.selectDetailList" parameterType="Map" resultType="rMap">		/* 검색 */

   	/* s_opo100ukrv_kd.Cs_opo100ukrv_kd[fnOpo100Std] Query01 ITEM */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
	    SELECT (CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
	                 WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
	                                     ELSE D.CUSTOM_NAME
	             END)                                           AS CUSTOM_NAME
	         , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	             END)                                           AS ORDER_DATE
	         , A.ORDER_TYPE
	         , A.ORDER_NUM
	         , A.CUSTOM_CODE
	         , A.ORDER_PRSN
	         , A.AGREE_STATUS
	         , A.AGREE_PRSN
	         , C.USER_NAME AS AGREE_PRSN_NAME
	         , (CASE WHEN ISNULL(A.AGREE_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AGREE_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.AGREE_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.AGREE_DATE, 7, 2))
	             END)                                           AS AGREE_DATE
	         , A.MONEY_UNIT
	         , A.LC_NUM
	         , A.RECEIPT_TYPE
	         , A.REMARK
	         , A.DIV_CODE
	         , A.EXCHG_RATE_O
	         , A.DRAFT_YN
	         , A.PROJECT_NO
	         , B.LOT_NO
	      FROM            MPO100T A WITH (NOLOCK)
	           INNER JOIN MPO200T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                             AND B.DIV_CODE    = A.DIV_CODE
	                                             AND B.ORDER_NUM   = A.ORDER_NUM
	           LEFT  JOIN BSA300T C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                             AND C.USER_ID     = A.AGREE_PRSN
	           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                             AND D.CUSTOM_CODE = A.CUSTOM_CODE
	     WHERE A.COMP_CODE         = @CompCode
	       AND A.ORDER_TYPE     = N'4'
	     <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
	       AND A.ORDER_TYPE        = #{ORDER_TYPE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(FO_ORDER_DATE)">
	       AND A.ORDER_DATE    &gt;= #{FO_ORDER_DATE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
	       AND A.ORDER_DATE    &lt;= #{TO_ORDER_DATE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
	       AND A.ORDER_PRSN        = #{ORDER_PRSN}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	       AND A.CUSTOM_CODE   LIKE  #{CUSTOM_CODE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(AGREE_STATUS)">
	       AND A.AGREE_STATUS      = #{AGREE_STATUS}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       AND A.DIV_CODE          = #{DIV_CODE}
	     </if>
	     GROUP BY A.COMP_CODE   , A.ORDER_DATE  , A.ORDER_TYPE  , A.ORDER_NUM, A.CUSTOM_CODE
	            , A.ORDER_PRSN  , A.AGREE_STATUS, A.AGREE_PRSN  , C.USER_NAME, A.AGREE_DATE
	            , A.MONEY_UNIT  , A.LC_NUM      , A.RECEIPT_TYPE, A.REMARK   , A.DIV_CODE
	            , A.EXCHG_RATE_O, A.DRAFT_YN    , A.PROJECT_NO  , B.LOT_NO   , D.CUSTOM_NAME1 ,D.CUSTOM_NAME2  ,D.CUSTOM_NAME
	     ORDER BY CUSTOM_NAME   , A.ORDER_DATE  , A.ORDER_TYPE  , A.ORDER_NUM

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

	</select>

	<select id="s_opo100ukrv_kdService.selectMpoList" parameterType="Map" resultType="rMap">		/* 메인 */

    /* otr100ukrv.Cotr100ukrv[fnOpo100QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = N'KR'

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT
			   A.COMP_CODE
			 , A.DIV_CODE
			 , A.CUSTOM_CODE
			 , A.ORDER_NUM
			 , A.ORDER_SEQ
			 , A.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
					WHEN @RefItem = '1' THEN B.ITEM_NAME1
					WHEN @RefItem = '2' THEN B.ITEM_NAME2
					ELSE                     B.ITEM_NAME
			   END              AS ITEM_NAME
			 , B.SPEC
			 , B.STOCK_UNIT
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_UNIT_Q, 0), 'M_FSET_QS') AS ORDER_UNIT_Q
			 , A.ORDER_UNIT
			 , A.UNIT_PRICE_TYPE
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_UNIT_P, 0), 'M_FSET_PS') AS ORDER_UNIT_P
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_O, 0), 'M_FSET_OS')      AS ORDER_O
			 , (CASE WHEN ISNULL(A.DVRY_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DVRY_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.DVRY_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.DVRY_DATE, 7, 2))
	             END)                                           AS DVRY_DATE
			 , A.WH_CODE
			 , A.TRNS_RATE
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_Q, 0), 'M_FSET_QS')      AS ORDER_Q
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.ORDER_P, 0), 'M_FSET_PS')      AS ORDER_P
			 , A.CONTROL_STATUS
			 , A.ORDER_REQ_NUM
			 , uniLITE.fnFormat(@CompCode, ISNULL(A.INSTOCK_Q, 0), 'M_FSET_QS')    AS INSTOCK_Q
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME
			 , A.CONTROL_STATUS AS PRE_CONTROL_STATUS
			 , 'F'              AS CONTROL_STATUS_V
			 , A.INSPEC_FLAG
			 , A.REMARK
			 , A.MONEY_UNIT
			 , A.EXCHG_RATE_O
			 , A.ORDER_LOC_P
			 , A.ORDER_LOC_O
			 , A.LOT_NO
			 , A.PROJECT_NO
			 , C.SUPPLY_TYPE  /* '=== 조달구분 */
			 , A.PO_REQ_NUM
			 , A.PO_REQ_SEQ          AS PO_SER_NO
			 , A.CHILD_ITEM_CODE
             , A.CHILD_NEED_QTY
             , A.CHILD_UNIT_Q
             , A.S_GUBUN_KD
             , MP.GW_FLAG
			 , MP.GW_DOC
			 , MP.DRAFT_NO
			 , MP.DRAFT_YN
		  FROM            MPO200T A WITH (NOLOCK)
		  	   INNER JOIN MPO100T MP WITH (NOLOCK) ON MP.COMP_CODE = A.COMP_CODE
												 AND  MP.DIV_CODE = A.DIV_CODE
												 AND  MP.CUSTOM_CODE = A.CUSTOM_CODE
												 AND  MP.ORDER_NUM = A.ORDER_NUM
			   INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
												 AND B.ITEM_CODE = A.ITEM_CODE
			   INNER JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
												 AND C.DIV_CODE  = A.DIV_CODE
												 AND C.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE  = @CompCode
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE   = #{DIV_CODE}
		 </if>
	     <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		   AND A.ORDER_NUM  = #{ORDER_NUM}
		 </if>

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END

    </select>

    <select id="s_opo100ukrv_kdService.selectMre100tList" parameterType="Map" resultType="rMap">
        /* mre100ukrv.Cmre100ukrv[fnMre200QStd] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{DIV_CODE}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  A.DIV_CODE
                  , A.PO_REQ_NUM
                  , A.PO_SER_NO
                  , A.ITEM_CODE
                  ,(CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                    WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                        ELSE B.ITEM_NAME
                     END)      AS ITEM_NAME
                  , B.SPEC
                  , B.STOCK_UNIT
                  , A.ORDER_UNIT_Q
                  , A.ORDER_UNIT
                  , A.MONEY_UNIT
                  , A.EXCHG_RATE_O

                  , A.UNIT_PRICE_TYPE
                  , A.ORDER_P
                  , A.ORDER_O
                  , A.ORDER_LOC_P
                  , A.ORDER_LOC_O

                 , (CASE WHEN ISNULL(A.DVRY_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DVRY_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.DVRY_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.DVRY_DATE, 7, 2))
                     END)                                           AS DVRY_DATE
                  , A.WH_CODE
                  , A.TRNS_RATE

                  , A.ORDER_Q
                  , A.R_ORDER_Q
                  , A.SUPPLY_TYPE
                  , A.CUSTOM_CODE
                  , C.CUSTOM_NAME                                   AS CUSTOM_NAME
                  , (CASE WHEN ISNULL(A.PO_REQ_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PO_REQ_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.PO_REQ_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.PO_REQ_DATE, 7, 2))
                     END)                                           AS PO_REQ_DATE
                  , A.INSPEC_FLAG
                  , A.REMARK
                  , A.ORDER_REQ_NUM
                  , A.MRP_CONTROL_NUM
                  , A.ORDER_YN
                  , A.UPDATE_DB_USER
                  , A.UPDATE_DB_TIME
                  , A.COMP_CODE
                  , D.PURCH_LDTIME
            FROM               MRE110T A WITH (NOLOCK)
                    INNER JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                      AND B.ITEM_CODE = A.ITEM_CODE
                    LEFT JOIN  BCM100T C WITH  (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.CUSTOM_CODE = A.CUSTOM_CODE
                    LEFT JOIN  BPR200T D WITH  (NOLOCK) ON D.COMP_CODE = A.COMP_CODE
                                                       AND D.ITEM_CODE = A.ITEM_CODE
                                                       AND D.DIV_CODE  = A.DIV_CODE
                    INNER JOIN MRE100T E WITH  (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                       AND E.DIV_CODE    = A.DIV_CODE
                                                       AND E.PO_REQ_NUM  = A.PO_REQ_NUM
                    LEFT JOIN (SELECT COMP_CODE
                                    , DIV_CODE
                                    , PO_REQ_NUM
                                    , PO_REQ_SEQ
                                    , SUM(ISNULL(ORDER_UNIT_Q, 0)) AS ORDER_UNIT_Q
                                 FROM MPO200T WITH(NOLOCK)
                                WHERE COMP_CODE = @CompCode
                                  AND DIV_CODE  = #{DIV_CODE}
                                  AND PO_REQ_NUM > ''
                               GROUP BY COMP_CODE, DIV_CODE, PO_REQ_NUM, PO_REQ_SEQ
                               ) F ON F.COMP_CODE  = A.COMP_CODE
                                  AND F.DIV_CODE   = A.DIV_CODE
                                  AND F.PO_REQ_NUM = A.PO_REQ_NUM
                                  AND F.PO_REQ_SEQ = A.PO_SER_NO

            WHERE   E.COMP_CODE     = @CompCode
            AND     E.DIV_CODE      = #{DIV_CODE}
            AND     ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(F.ORDER_UNIT_Q, 0) > 0

            <if test="@foren.Ognl@isNotEmpty(PO_REQ_NUM)">
            AND     E.PO_REQ_NUM    LIKE '%' + #{PO_REQ_NUM} + '%'
            </if>
            AND     E.PO_REQ_DATE   &gt;= #{PO_REQ_DATE_FR}
            AND     E.PO_REQ_DATE   &lt;= #{PO_REQ_DATE_TO}
            <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
            AND     E.TREE_CODE     = #{DEPT_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
            AND     E.PERSON_NUMB   = #{PERSON_NUMB}
            </if>
            <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
            AND     E.MONEY_UNIT    = #{MONEY_UNIT}
            </if>
            AND     E.SUPPLY_TYPE   = #{SUPPLY_TYPE}
            <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
            AND     E.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.CUSTOM_CODE   = #{CUSTOM_CODE}
            </if>
            ORDER BY A.PO_SER_NO

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

	<update id="s_opo100ukrv_kdService.spPurchaseOutOrder" parameterType="Map" statementType="CALLABLE">
		{call SP_MATRL_PurchaseOutOrder_KD (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{OrderNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<select id="s_opo100ukrv_kdService.selectReferList" parameterType="Map" resultType="rMap">
		   SET NOCOUNT ON
    SET ARITHABORT ON


    DECLARE @COMP_CODE       NVARCHAR(08)
          , @DIV_CODE        NVARCHAR(08)
          , @CHILD_ITEM_CODE NVARCHAR(20)  --자품목코드
          , @CHILD_QTY       NUMERIC(18,6) --자품목 투입수량
          , @UNIT_M_K        NVARCHAR(3)   --자품목 단위
          , @CUSTOM_CODE     NVARCHAR(10)  --거래처코드


    SET @COMP_CODE       = #{S_COMP_CODE}
    SET @DIV_CODE        = #{DIV_CODE}
    SET @CHILD_ITEM_CODE = #{ITEM_CODE}
    SET @CHILD_QTY       = #{QTY}
    SET @UNIT_M_K        = #{STOCK_UNIT}
    SET @CUSTOM_CODE        = #{CUSTOM_CODE}

    SELECT A1.COMP_CODE                        -- 법인
         , A1.DIV_CODE                         -- 사업장
         , A1.GUBUN                            -- 구분 1.가공품, loss는 잔여소모자재량을 부여하기위해 사용
         , A1.PROD_ITEM_CODE                   -- 가공품목(=외주발주품)
         , A1.PROD_ITEM_NAME                   -- 가공품목명
         , A1.PROD_SPEC                        -- 가공품규격
         , A1.ORDER_UNIT                       -- 구매단위
         , A1.UNIT_Q                           -- 원단위량
         , A1.PROD_UNIT_Q                      -- 모품목수
         , A1.SHARE_RATE * 100 AS SHARE_RATE                       -- 차지율
         , 0 AS INPUT_Q       --분할수
         , 0 AS INPUT_RATE    --분할율
         , A1.ORDER_Q                          -- 발주수량
         , @CHILD_ITEM_CODE AS CHILD_ITEM_CODE --소모자재품(=자재예약정보에 활용)
         , A1.CHILD_NEED_QTY                    -- 소모자재량
      	, CASE WHEN A1.ORDER_UNIT = 'M' THEN A1.SHARE_RATE * ISNULL(A3.ITEM_P,0)		 --단위M : 차지율 * 단가
      		   ELSE (CASE WHEN GUBUN='LOSS' THEN 0
  					  	  ELSE (CASE WHEN ISNULL(A4.PO_PRICE,0) <![CDATA[>]]> 0 THEN ISNULL(A4.PO_PRICE,0)
  							 		 ELSE ISNULL(A3.ITEM_P,0)
  								END)
  					 END)	--단위KG : 구매단가그대로
      	  END AS CALC_UNIT_PRICE
    		 , ISNULL(A3.ITEM_P,0) AS ITEM_P
    		 , CONVERT(NUMERIC(30,0), 0) AS PO_AMT
      FROM (
/*
            --BOM정보에서 가져오기
            SELECT A.COMP_CODE, A.DIV_CODE
                  , '1' AS GUBUN
                  , A.PROD_ITEM_CODE
                  , B.ITEM_CODE AS PROD_ITEM_NAME
                  , B.SPEC      AS PROD_SPEC
                  , C.ORDER_UNIT
                  , A.UNIT_Q
                  , A.PROD_UNIT_Q
                  , ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS SHARE_RATE
                  , 0 AS ORDER_Q
                  , 0 AS CHILD_NEED_QTY
                  --, 7096.8 AS ORDER_Q
                  --, 7096.8 * ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS CHILD_NEED_QTY
              FROM BPR500T A WITH(NOLOCK)
                   INNER JOIN BPR100T B WITH(NOLOCK)
                           ON A.COMP_CODE      = B.COMP_CODE
                          AND A.PROD_ITEM_CODE = B.ITEM_CODE
                   INNER JOIN BPR200T C WITH(NOLOCK)
                           ON B.COMP_CODE = C.COMP_CODE
                          AND A.DIV_CODE  = C.DIV_CODE
                          AND B.ITEM_CODE = C.ITEM_CODE

             WHERE A.COMP_CODE        = @COMP_CODE
               AND A.DIV_CODE         = @DIV_CODE
               AND A.CHILD_ITEM_CODE <![CDATA[<>]]> '$'
               AND A.CHILD_ITEM_CODE  = @CHILD_ITEM_CODE
            --BOM 대체자재
            UNION ALL
            SELECT A.COMP_CODE, A.DIV_CODE
                  , '1' AS GUBUN
                  , A.PROD_ITEM_CODE
                  , B.ITEM_CODE AS PROD_ITEM_NAME
                  , B.SPEC      AS PROD_SPEC
                  , C.ORDER_UNIT
                  , A.UNIT_Q
                  , A.PROD_UNIT_Q
                  , ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS SHARE_RATE
                  , 0 AS ORDER_Q
                  , 0 AS CHILD_NEED_QTY
                  --, 7096.8 AS ORDER_Q
                  --, 7096.8 * ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS CHILD_NEED_QTY
              FROM BPR510T A WITH(NOLOCK)
                   INNER JOIN BPR100T B WITH(NOLOCK)
                           ON A.COMP_CODE      = B.COMP_CODE
                          AND A.PROD_ITEM_CODE = B.ITEM_CODE
                   INNER JOIN BPR200T C WITH(NOLOCK)
                           ON B.COMP_CODE = C.COMP_CODE
                          AND A.DIV_CODE  = C.DIV_CODE
                          AND B.ITEM_CODE = C.ITEM_CODE

             WHERE A.COMP_CODE        = @COMP_CODE
               AND A.DIV_CODE         = @DIV_CODE
               --AND A.CHILD_ITEM_CODE <![CDATA[<>]]> '$'
               AND A.EXCHG_ITEM_CODE  = @CHILD_ITEM_CODE
*/
            --외주PL
            SELECT A.COMP_CODE, A.DIV_CODE
                  , '1' AS GUBUN
                  , A.PROD_ITEM_CODE
                  , B.ITEM_CODE AS PROD_ITEM_NAME
                  , B.SPEC      AS PROD_SPEC
                  , C.ORDER_UNIT
                  , A.UNIT_Q
                  , A.PROD_UNIT_Q
                  , ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS SHARE_RATE
                  , 0 AS ORDER_Q
                  , 0 AS CHILD_NEED_QTY
              FROM MCL100T A WITH(NOLOCK)
                   INNER JOIN BPR100T B WITH(NOLOCK)
                           ON A.COMP_CODE      = B.COMP_CODE
                          AND A.PROD_ITEM_CODE = B.ITEM_CODE
                   INNER JOIN BPR200T C WITH(NOLOCK)
                           ON B.COMP_CODE = C.COMP_CODE
                          AND A.DIV_CODE  = C.DIV_CODE
                          AND B.ITEM_CODE = C.ITEM_CODE

             WHERE A.COMP_CODE        = @COMP_CODE
               AND A.DIV_CODE         = @DIV_CODE
               AND A.ITEM_CODE  = @CHILD_ITEM_CODE
			   AND A.CUSTOM_CODE = @CUSTOM_CODE

            --외주PL 대체자재
            UNION ALL
            SELECT A.COMP_CODE, A.DIV_CODE
                  , '1' AS GUBUN
                  , A.PROD_ITEM_CODE
                  , B.ITEM_CODE AS PROD_ITEM_NAME
                  , B.SPEC      AS PROD_SPEC
                  , C.ORDER_UNIT
                  , A.UNIT_Q
                  , A.PROD_UNIT_Q
                  , ROUND(A.UNIT_Q/A.PROD_UNIT_Q, 4) AS SHARE_RATE
                  , 0 AS ORDER_Q
                  , 0 AS CHILD_NEED_QTY
              FROM S_MCL110T_KD A WITH(NOLOCK)
                   INNER JOIN BPR100T B WITH(NOLOCK)
                           ON A.COMP_CODE      = B.COMP_CODE
                          AND A.PROD_ITEM_CODE = B.ITEM_CODE
                   INNER JOIN BPR200T C WITH(NOLOCK)
                           ON B.COMP_CODE = C.COMP_CODE
                          AND A.DIV_CODE  = C.DIV_CODE
                          AND B.ITEM_CODE = C.ITEM_CODE

             WHERE A.COMP_CODE        = @COMP_CODE
               AND A.DIV_CODE         = @DIV_CODE
               AND A.EXCHG_ITEM_CODE  = @CHILD_ITEM_CODE

            UNION ALL
            -- LOSS물 M일때 K일때
            SELECT A.COMP_CODE, B.DIV_CODE
                 , 'LOSS'       AS GUBUN
                 , A.ITEM_CODE  AS PROD_ITEM_CODE
                 , A.ITEM_NAME  AS PROD_ITEM_NAME
                 , A.SPEC       AS PROD_SPEC
                 , B.ORDER_UNIT AS ORDER_UNIT
                 , 0            AS UNIT_Q
                 , 0            AS PROD_UNIT_Q
                 , 0            AS SHARE_RATE
                 , @CHILD_QTY   AS ORDER_Q
                 , @CHILD_QTY   AS CHILD_NEED_QTY
              FROM BPR100T A WITH(NOLOCK)
                   INNER JOIN BPR200T B WITH(NOLOCK)
                           ON A.COMP_CODE = B.COMP_CODE
                          AND A.ITEM_CODE = B.ITEM_CODE

             WHERE A.COMP_CODE        = @COMP_CODE
               AND B.DIV_CODE         = @DIV_CODE
               AND B.ITEM_CODE        = CASE @UNIT_M_K WHEN 'M' THEN '499999998' ELSE '499999999' END
           ) A1
		     INNER JOIN BPR200T A2   ON A1.COMP_CODE=A2.COMP_CODE AND A1.DIV_CODE=A2.DIV_CODE AND A1.PROD_ITEM_CODE=A2.ITEM_CODE
		     LEFT  JOIN BPR400TV1 A3 ON A1.COMP_CODE=A3.COMP_CODE AND A1.DIV_CODE=A3.DIV_CODE
		                            AND A3.ITEM_CODE   = @CHILD_ITEM_CODE
		                            AND A1.ORDER_UNIT  = A3.ORDER_UNIT
		                            AND A3.CUSTOM_CODE = @CUSTOM_CODE
		                            AND CONVERT(VARCHAR(8), GETDATE(), 112) BETWEEN A3.APLY_START_DATE AND A3.APLY_END_DATE
		     LEFT  JOIN S_LATEST_OPOPRICE_V A4 ON A1.COMP_CODE=A4.COMP_CODE AND A1.DIV_CODE=A4.DIV_CODE AND A1.PROD_ITEM_CODE=A4.ITEM_CODE AND A4.CUSTOM_CODE=@CUSTOM_CODE
    		WHERE A2.SUPPLY_TYPE <![CDATA[<>]]>  '2'
       ORDER BY A1.COMP_CODE
              , A1.DIV_CODE
              , A1.GUBUN
              , A1.PROD_ITEM_CODE

    SET NOCOUNT OFF
    SET ARITHABORT OFF
	</select>


    <insert id="s_opo100ukrv_kdService.insertLogDetail" parameterType="Map">
        INSERT INTO L_MPO200T
             ( KEY_VALUE    , OPR_FLAG
             , DIV_CODE     , CUSTOM_CODE   , ORDER_NUM         , ORDER_SEQ         , ITEM_CODE
             , ORDER_UNIT_Q , ORDER_UNIT    , UNIT_PRICE_TYPE   , MONEY_UNIT        , ORDER_UNIT_P
             , ORDER_O      , EXCHG_RATE_O  , ORDER_LOC_P       , ORDER_LOC_O       , DVRY_DATE
             , WH_CODE      , TRNS_RATE     , ORDER_Q           , ORDER_P           , CONTROL_STATUS
             , INSTOCK_Q    , INSPEC_FLAG   , COMP_CODE         , PO_REQ_NUM        , PO_REQ_SEQ

             , DVRY_TIME    , ORDER_REQ_NUM , PROJECT_NO        , LOT_NO
             , REMARK       , BAD_RETURN_Q  , ADVAN_AMOUNT      , MAP_Q
             , SO_NUM       , SO_SEQ        , BL_NUM            , DVRY_ESTI_NO      , DVRY_ESTI_QTY
             , DVRY_TOT_QTY , DVRY_ESTI_DATE, DVRY_PRINT_YN     , SUPP_REMARK       , IF_NO
             , IF_YN        , IF_DATETIME   , UPDATE_DB_USER    , UPDATE_DB_TIME    , INSERT_DB_USER        , INSERT_DB_TIME
             , CHILD_ITEM_CODE, CHILD_NEED_QTY, CHILD_UNIT_Q, S_GUBUN_KD
             )
        VALUES
            (  #{KEY_VALUE}    , #{OPR_FLAG}
             , #{DIV_CODE}     , #{CUSTOM_CODE}   , #{ORDER_NUM}        , #{ORDER_SEQ}   , #{ITEM_CODE}
             , #{ORDER_UNIT_Q} , #{ORDER_UNIT}    , #{UNIT_PRICE_TYPE}  , #{MONEY_UNIT}  , #{ORDER_UNIT_P}
             , #{ORDER_O}      , #{EXCHG_RATE_O}  , #{ORDER_LOC_P}      , #{ORDER_LOC_O} , #{DVRY_DATE}
             , #{WH_CODE}      , #{TRNS_RATE}     , #{ORDER_Q}          , #{ORDER_P}     , #{CONTROL_STATUS}
             , #{INSTOCK_Q}    , #{INSPEC_FLAG}   , #{S_COMP_CODE}      , #{PO_REQ_NUM}  , #{PO_SER_NO}

             , #{DVRY_TIME}    , #{ORDER_REQ_NUM}   , #{PROJECT_NO}     , #{LOT_NO}
             , #{REMARK}       , #{BAD_RETURN_Q}    , #{ADVAN_AMOUNT}   , #{MAP_Q}
             , #{SO_NUM}       , #{SO_SEQ}          , #{BL_NUM}         , #{DVRY_ESTI_NO} , #{DVRY_ESTI_QTY}
             , #{DVRY_TOT_QTY} , #{DVRY_ESTI_DATE}  , #{DVRY_PRINT_YN}  , #{SUPP_REMARK}  , #{IF_NO}
             , #{IF_YN}        , #{IF_DATETIME}     , #{S_USER_ID}      , GETDATE()       , #{S_USER_ID}        , GETDATE()
             , #{CHILD_ITEM_CODE}, #{CHILD_NEED_QTY}, #{CHILD_UNIT_Q}, #{S_GUBUN_KD}
             )
    </insert>

    <insert id="s_opo100ukrv_kdService.insertLogMaster" parameterType="Map">
        INSERT INTO L_MPO100T
             ( KEY_VALUE      , OPR_FLAG
             , ORDER_DATE     , ORDER_TYPE     , CUSTOM_CODE     , ORDER_NUM     , ORDER_PRSN
             , AGREE_STATUS   , MONEY_UNIT     , EXCHG_RATE_O    , DIV_CODE      , COMP_CODE
             <if test="@foren.Ognl@isNotEmpty(LC_NUM)">
             , LC_NUM
             </if>
             <if test="@foren.Ognl@isNotEmpty(RECEIPT_TYPE)">
             , RECEIPT_TYPE
             </if>
             , DEPT_CODE
             <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
             , PROJECT_NO
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
             , REMARK
             </if>
             <if test="@foren.Ognl@isNotEmpty(AGREE_PRSN)">
             , AGREE_PRSN
             </if>
             <if test="@foren.Ognl@isNotEmpty(AGREE_DATE)">
             , AGREE_DATE
             </if>
             , DRAFT_YN
             <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
             , PROG_WORK_CODE
             </if>

             )
        VALUES
            (  #{KEY_VALUE}      , #{OPR_FLAG}
             , #{ORDER_DATE}     , #{ORDER_TYPE}      , #{CUSTOM_CODE}      , #{ORDER_NUM}      , #{ORDER_PRSN}
             , #{AGREE_STATUS}   , #{MONEY_UNIT}      , #{EXCHG_RATE_O}     , #{DIV_CODE}       , #{COMP_CODE}
             <if test="@foren.Ognl@isNotEmpty(LC_NUM)">
             , #{LC_NUM}
             </if>
             <if test="@foren.Ognl@isNotEmpty(RECEIPT_TYPE)">
             , #{RECEIPT_TYPE}
             </if>
             , #{DEPT_CODE}
             <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
             , #{PROJECT_NO}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
             , #{REMARK}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AGREE_PRSN)">
             , #{AGREE_PRSN}
             </if>
             <if test="@foren.Ognl@isNotEmpty(AGREE_DATE)">
             , #{AGREE_DATE}
             </if>
             , #{DRAFT_YN}
             <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
             , #{PROG_WORK_CODE}
             </if>

             )
    </insert>

    <select id="s_opo100ukrv_kdService.fnGetReferData" parameterType="Map" resultType="rMap">

    	--s_opo100ukrv_kdService.fnGetReferData
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @RefItem       NVARCHAR(01)

            /* 명칭 참조 유형 */
            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   USER_ID = #{S_USER_ID}

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 데이터 조회 */
            SELECT  ITEM_CODE
                 , (CASE WHEN @RefItem = '0' THEN ITEM_NAME
                         WHEN @RefItem = '1' THEN ITEM_NAME1
                         WHEN @RefItem = '2' THEN ITEM_NAME2
                                             ELSE ITEM_NAME
                    END)                                                        AS ITEM_NAME
                 ,  OEM_ITEM_CODE
                 ,  ISNULL(SPEC, '')                                            AS SPEC
                 ,  STOCK_UNIT
                 ,  ORDER_UNIT
                 ,  TRNS_RATE
                 ,  BASIS_P
                 ,  SALE_BASIS_P
                 ,  SAFE_STOCK_Q
                 ,  EXPENSE_RATE
                 ,  SPEC_NUM
                 ,  ISNULL(WH_CODE, '')                                         AS WH_CODE
                 ,  WORK_SHOP_CODE
                 ,  DIV_CODE
                 ,  OUT_METH
                 ,  ITEM_MAKER
                 ,  ITEM_MAKER_PN
                 ,  PURCH_LDTIME
                 ,  MINI_PURCH_Q
                 ,  UNIT_WGT
                 ,  WGT_UNIT
                 ,  ITEM_ACCOUNT
                 ,  ISNULL(DOM_FORIGN, '1')                                     AS DOM_FORIGN
                 ,  SUPPLY_TYPE
                 ,  HS_NO
                 ,  HS_NAME
                 ,  HS_UNIT
                 ,  STOCK_UNIT                                                  AS STOCK_UNIT2
                 ,  TAX_TYPE
                 ,  ISNULL(STOCK_CARE_YN, 'Y')                                  AS STOCK_CARE_YN
                 ,  SALE_UNIT
                 ,  PUR_TRNS_RATE
                 ,  ITEM_GROUP
                 , (CASE WHEN @RefItem = '0' THEN ITEM_GROUP_NAME
                         WHEN @RefItem = '1' THEN ITEM_GROUP_NAME1
                         WHEN @RefItem = '2' THEN ITEM_GROUP_NAME2
                                             ELSE ITEM_GROUP_NAME
                    END)                                                        AS ITEM_GROUP_NAME
                 ,  ITEM_LEVEL1
                 ,  ITEM_LEVEL_NAME1                                            AS ITEM_LEVEL_NAME1
                 ,  ITEM_LEVEL2
                 ,  ITEM_LEVEL_NAME2                                            AS ITEM_LEVEL_NAME2
                 ,  ITEM_LEVEL3
                 ,  ITEM_LEVEL_NAME3                                            AS ITEM_LEVEL_NAME3
                 ,  BARCODE                                                     AS BARCODE
                 ,  ISNULL(LOT_SIZING_Q, 0.0)                                   AS LOT_SIZING_Q
                 ,  ISNULL(MAX_PRODT_Q , 0.0)                                   AS MAX_PRODT_Q
                 ,  ISNULL(STAN_PRODT_Q, 0.0)                                   AS STAN_PRODT_Q
                 ,  PURCHASE_BASE_P
                 ,  TOTAL_ITEM
                 ,  INSPEC_YN
                 ,  UNIT_VOL
                 ,  VOL_UNIT
                 ,  MAIN_CUSTOM_CODE
                 ,  MAIN_CUSTOM_NAME
                 ,  ITEM_COLOR
                 ,  MAIN_CUSTOM_CODE
                 ,  MAIN_CUSTOM_NAME
                 ,  LOT_YN
                 ,  OEM_ITEM_CODE
                 ,  INSPEC_YN
                 ,  CAR_TYPE
            FROM    BPR200TV
            WHERE   COMP_CODE   = #{S_COMP_CODE}
            AND     DIV_CODE    = #{DIV_CODE}
            AND     ITEM_CODE   = #{ITEM_CODE}

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_opo100ukrv_kdService.fnGetLastPriceInfo" parameterType="Map" resultType="rMap">
    	--s_opo100ukrv_kdService.fnGetLastPriceInfo

        DECLARE @COMP_CODE          NVARCHAR(10)
              , @DIV_CODE           NVARCHAR(10)
              , @TYPE               NVARCHAR(01)
              , @CUSTOM_CODE        NVARCHAR(20)
              , @ITEM_CODE          NVARCHAR(20)
              , @MONEY_UNIT         NVARCHAR(03)
              , @ORDER_UNIT         NVARCHAR(03)
              , @APLY_START_DATE    NVARCHAR(08)
              , @ITEM_P             NUMERIC(18, 6)
              , @PRICE_TYPE         NVARCHAR(01)

        SET @COMP_CODE          = #{S_COMP_CODE}
        SET @DIV_CODE           = #{DIV_CODE}
        SET @TYPE               = #{TYPE}
        SET @CUSTOM_CODE        = #{CUSTOM_CODE}
        SET @ITEM_CODE          = #{ITEM_CODE}
        SET @MONEY_UNIT         = #{MONEY_UNIT}
        SET @ORDER_UNIT         = #{ORDER_UNIT}
        SET @APLY_START_DATE    = #{APLY_START_DATE}
        SET @ITEM_P             = #{ITEM_P}
        SET @PRICE_TYPE         = #{PRICE_TYPE}

        EXEC uniLITE.USP_GetItemP @COMP_CODE , @DIV_CODE , @TYPE , @CUSTOM_CODE , @ITEM_CODE , @MONEY_UNIT , @ORDER_UNIT , @APLY_START_DATE , @ITEM_P OUTPUT , @PRICE_TYPE OUTPUT

        SELECT  @ITEM_P         AS ITEM_P
             ,  @PRICE_TYPE     AS PRICE_TYPE
    </select>
</mapper>