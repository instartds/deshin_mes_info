<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zbb600ukrv_kdService">
	<select id="s_zbb600ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        <if test="CHECK_YN == &quot;A&quot;">
            SELECT   A.COMP_CODE
                   , C.DIV_CODE
                   , A.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , A.ITEM_NAME
                   , A.SPEC
                   , C.ITEM_ACCOUNT
                   , A.CAR_TYPE
                   , B.REMARK
                   ,B.CUSTOM_CODE
                   ,B.DISTRIB_DATE
                   ,B.GUBUN_NUM
                   ,B.REVIS_DATE
                   ,B.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM BPR100T              A WITH (NOLOCK)
              LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.ITEM_CODE   = A.ITEM_CODE
			   LEFT JOIN BCM100T   D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  									  AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND C.DIV_CODE               = #{DIV_CODE}
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
              <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND A.SPEC LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
			 <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
               AND A.CAR_TYPE    = #{CAR_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND B.REMARK                 LIKE '%' + #{REMARK} + '%'
             </if>
			 ORDER BY A.COMP_CODE, A.ITEM_CODE
        </if>
        <if test="CHECK_YN == &quot;Y&quot;">
        	SELECT   A.COMP_CODE
                   , A.DIV_CODE
                   , B.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , B.ITEM_NAME
                   , B.SPEC
                   , C.ITEM_ACCOUNT
                   , B.CAR_TYPE
                   , A.REMARK
                   , A.CUSTOM_CODE
                   , A.DISTRIB_DATE
                   , A.GUBUN_NUM
                   , A.REVIS_DATE
                   , A.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM S_ZBB600T_KD    A WITH (NOLOCK)
              INNER JOIN BPR100T   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T   C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                  AND C.ITEM_CODE   = A.ITEM_CODE
			   LEFT JOIN BCM100T   D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  									  AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND A.DIV_CODE               = #{DIV_CODE}
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
               AND A.REMARK                 LIKE '%' + #{REMARK} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
              AND A.CUSTOM_CODE = #{CUSTOM_CODE}
             </if>

              <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(DISTRIB_DATE_FR)">
              AND A.DISTRIB_DATE <![CDATA[>=]]> #{DISTRIB_DATE_FR}
             </if>
             <if test="@foren.Ognl@isNotEmpty(DISTRIB_DATE_TO)">
              AND A.DISTRIB_DATE <![CDATA[<=]]> #{DISTRIB_DATE_TO}
             </if>
             <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
              AND B.CAR_TYPE = #{CAR_TYPE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND B.SPEC  LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
			ORDER BY A.COMP_CODE,A.DIV_CODE, A.ITEM_CODE
        </if>
        <if test="CHECK_YN == &quot;N&quot;">
        	SELECT   A.COMP_CODE
                   , C.DIV_CODE
                   , A.OEM_ITEM_CODE
                   , A.ITEM_CODE
                   , A.ITEM_NAME
                   , A.SPEC
                   , C.ITEM_ACCOUNT
                   , A.CAR_TYPE
                   , B.REMARK
                   ,B.CUSTOM_CODE
                   ,B.DISTRIB_DATE
                   ,B.GUBUN_NUM
                   ,B.REVIS_DATE
                   ,B.LOCATION
                   ,ROW_NUMBER() OVER( ORDER BY A.ITEM_CODE) AS ROW_NUM
                   ,C.CUSTOM_CODE AS MAIN_CUSTOM_CODE
                   ,D.CUSTOM_NAME AS MAIN_CUSTOM_NAME
              FROM BPR100T              A WITH (NOLOCK)
              LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.ITEM_CODE   = A.ITEM_CODE
              INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.ITEM_CODE   = A.ITEM_CODE
			  LEFT JOIN BCM100T 		D WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
			  										   AND D.CUSTOM_CODE = C.CUSTOM_CODE
             WHERE A.COMP_CODE              = #{S_COMP_CODE}
               AND C.DIV_CODE               = #{DIV_CODE}
               AND A.ITEM_CODE NOT          IN (SELECT A.ITEM_CODE
                                                FROM BPR100T A WITH (NOLOCK)
                                                INNER JOIN S_ZBB600T_KD B ON B.ITEM_CODE = A.ITEM_CODE)
             <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE              = #{ITEM_CODE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
               AND C.ITEM_ACCOUNT              = #{ITEM_ACCOUNT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
              AND A.SPEC LIKE '%' + #{OEM_ITEM_CODE} + '%'
             </if>
             <if test="@foren.Ognl@isNotEmpty(CAR_TYPE)">
              AND A.CAR_TYPE = #{CAR_TYPE}
             </if>
			 ORDER BY A.COMP_CODE,A.ITEM_CODE
        </if>
    </select>







    <select id="s_zbb600ukrv_kdService.insertCheck" parameterType="Map" resultType="String">
    	SELECT   A.COMP_CODE
               , C.DIV_CODE
               , A.OEM_ITEM_CODE
               , A.ITEM_CODE
               , A.ITEM_NAME
               , A.SPEC
               , A.CAR_TYPE
               , B.REMARK
          FROM BPR100T              A WITH (NOLOCK)
          LEFT  JOIN S_ZBB600T_KD   B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                   AND B.ITEM_CODE   = A.ITEM_CODE
          INNER JOIN BPR200T        C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                   AND C.ITEM_CODE   = A.ITEM_CODE
         WHERE A.COMP_CODE              = #{S_COMP_CODE}
           AND C.DIV_CODE               = #{DIV_CODE}
           AND A.ITEM_CODE              IN (SELECT A.ITEM_CODE
                                                FROM BPR100T A WITH (NOLOCK)
                                                INNER JOIN S_ZBB600T_KD B ON B.ITEM_CODE = A.ITEM_CODE)
         <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND A.ITEM_CODE              = #{ITEM_CODE}
         </if>
    </select>

    <update id="s_zbb600ukrv_kdService.updateList" parameterType="Map">
        UPDATE S_ZBB600T_KD
           SET   CUSTOM_CODE    = #{CUSTOM_CODE}
               , DISTRIB_DATE   = #{DISTRIB_DATE}
               , GUBUN_NUM      = #{GUBUN_NUM}
               , REVIS_DATE     = #{REVIS_DATE}
               , LOCATION       = #{LOCATION}
               , REMARK         = #{REMARK}
               , UPDATE_DB_USER = #{S_USER_ID}
               , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND ITEM_CODE       = #{ITEM_CODE}
    </update>

    <insert id="s_zbb600ukrv_kdService.insertList" parameterType="Map">
       INSERT INTO S_ZBB600T_KD
            (     COMP_CODE
                , DIV_CODE
                ,CUSTOM_CODE
                , ITEM_CODE
                ,DISTRIB_DATE
                ,GUBUN_NUM
                ,REVIS_DATE
                ,LOCATION
                , REMARK
                , INSERT_DB_USER
                , INSERT_DB_TIME
            )
         VALUES
            (     #{S_COMP_CODE}
                , #{DIV_CODE}
                , #{CUSTOM_CODE}
                , #{ITEM_CODE}
                , #{DISTRIB_DATE}
                , #{GUBUN_NUM}
                , #{REVIS_DATE}
                , #{LOCATION}
                , #{REMARK}
                , #{S_USER_ID}
                , GETDATE()
            )
    </insert>








    <select id="s_zbb600ukrv_kdService.getFileList" parameterType="Map" resultType="rMap">
        /* bdc100vServiceImpl.getFileList  */
        SELECT    A.FID AS id
                , A.FID AS fid
                , A.ORIGINAL_FILE_NAME AS name
                , B.SIZE as size
                , '6' AS status
         FROM  BDC101T A
         INNER JOIN BFL200T B ON A.COMP_CODE    = B.COMP_CODE
                             AND A.FID          = B.FID
        WHERE A.COMP_CODE   = #{S_COMP_CODE}
          AND A.DOC_NO      = #{ITEM_CODE}
    </select>

    <select id="s_zbb600ukrv_kdService.getDelFileId" parameterType="Map" resultType="rMap">
        /* bdc100vServiceImpl.getFileList  */
        SELECT FID
          FROM BDC101T A
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND DOC_NO       = #{ITEM_CODE}
    </select>

    <insert id="s_zbb600ukrv_kdService.insertBDC101" parameterType="Map">
        /* bdc100vServiceImpl.insertBDC101 */
        INSERT INTO BDC101T (
                COMP_CODE
              , DOC_NO
              , FID
              , ORIGINAL_FILE_NAME
              , INSERT_DB_USER
              , INSERT_DB_TIME )
        SELECT  #{S_COMP_CODE}
              , #{ITEM_CODE}
              , #{FID}
              , ORIGINAL_FILE_NAME
              , #{S_USER_ID}
              , getdate()
          FROM  BFL200T
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND FID          = #{FID}
    </insert>

    <update id="s_zbb600ukrv_kdService.deleteBDC101" parameterType="Map">
        /* bdc100vServiceImpl.deleteBDC101 */
        DELETE FROM  BDC101T
         WHERE COMP_CODE    = #{S_COMP_CODE}
           AND FID          = #{FID}
    </update>
</mapper>