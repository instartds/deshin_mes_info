<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_tix901skrv_kdServiceImpl">
    
    <select id="s_tix901skrv_kdServiceImpl.selectList" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE                                                                                                                      AS COMP_CODE       --법인코드
             , B.DATE_DEPART                                                                                                                    AS DATE_DEPART     --OFFER일자
             , B.EXPORTER                                                                                                                       AS CUSTOM_CODE     --거래처
             , C.CUSTOM_NAME                                                                                                                    AS CUSTOM_NAME     --거래처명
             , A.SO_SER_NO                                                                                                                      AS OFFER_NO        --오퍼번호
             , B.SO_AMT_WON                                                                                                                     AS SO_AMT_WON      --오퍼금액(A)
             , ISNULL(A.EXCHG_RATE_O,1)                                                                                                         AS EXCHG_RATE_O    --환율(B)
             , (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1))                                                                                        AS CAL_MUL_DAE     --물대(C)
             , A.LC_RATE                                                                                                                        AS LC_RATE         --LC요율(D)
             , (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.LC_RATE                                                                            AS CAL_LC_FEE      --LC수수료(E)
             , A.FOB_FOR_AMT                                                                                                                    AS FOB_FOR_AMT     --FOB가격(F)
             , A.CBM                                                                                                                            AS CBM             --CBM(G)
             , ISNULL(A.EXCHG_RATE_O,1) * A.FOB_FOR_AMT * A.CBM                                                                                 AS CAL_SUNIM       --선임(H)
             , A.IMPORT_TAX_RATE                                                                                                                AS IMPORT_TAX_RATE --수입세율(I)
             , (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE                                                                    AS CAL_DUTY_FEE    --관세(J)
             , (((B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE) 
               + (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1))) * 10/100                                                                            AS CAL_TAX_AMT     --부가세(K)
             , A.UNLOAD_AMT                                                                                                                     AS UNLOAD_AMT      --하역기준료(L)
             , CASE WHEN 20000 - ISNULL((A.UNLOAD_AMT* A.CBM),0) &gt; 0 THEN ISNULL((A.UNLOAD_AMT * A.CBM),0)
                    ELSE 20000 END                                                                                                              AS CAL_UNLOAD_AMT  --하역료계산(M)
             , ((((B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE)
               + (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) )
               * 0.84/1000) 
               + (630*A.CBM)                                                                                                                    AS CAL_STOCK_AMT  --보관료계산(N)
             , CASE WHEN 30000 - (28770 * A.CBM) &gt; 0 
                            THEN (28770 * A.CBM) 
                            ELSE 30000 END                                                                                                      AS CAL_WORK_AMT   --작업료계산(O)
             , CASE WHEN 30000 - ((((B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE) 
                                     + (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1))) 
                                     * 2/1000) &gt; 0 
                            THEN ((((B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE) 
                                     + (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1))) 
                                     * 2/1000) 
                            ELSE 30000 END                                                                                                      AS CAL_CLEAR_AMT --통관료계산(P)
        
             , A.UNLOAD_PLACE                                                                                                                   AS UNLOAD_PLACE  --하적지(Q)
             , CAST (ISNULL((SELECT REF_CODE1 FROM BSA100T X WHERE X.MAIN_CODE = 'WT01' AND X.SUB_CODE = A.UNLOAD_PLACE ),0)AS NUMERIC(18,6)) 
                                                                                                                                                AS CAL_UNIM      --운임(R)
             , CAST (ISNULL((SELECT REF_CODE2 FROM BSA100T X WHERE X.MAIN_CODE = 'WT01' AND X.SUB_CODE = A.UNLOAD_PLACE ),0)AS NUMERIC(18,6)) 
                                                                                                                                                AS CAL_CFS       --C.F.S(S)
             , A.ETC_AMT                                                                                                                        AS ETC_AMT       --기타(T)
             , (((B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1)) * A.IMPORT_TAX_RATE) 
               + (B.SO_AMT_WON * ISNULL(A.EXCHG_RATE_O,1))) * 10/100                                                                            AS CAL_RETURN    --환급(U)
          FROM S_TIX901T_KD A WITH(NOLOCK)
               INNER JOIN TIA100T B WITH(NOLOCK)
                       ON A.COMP_CODE = B.COMP_CODE
                      AND A.DIV_CODE  = B.DIV_CODE
                      AND A.SO_SER_NO = B.SO_SER_NO
               INNER JOIN BCM100T C WITH(NOLOCK)
                       ON B.COMP_CODE = C.COMP_CODE
                      AND B.EXPORTER  = C.CUSTOM_CODE
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
           AND A.DIV_CODE       = #{DIV_CODE}
           AND B.DATE_DEPART    &gt;= #{DATE_DEPART_FR}
           AND B.DATE_DEPART    &lt;= #{DATE_DEPART_TO}
         <if test="@foren.Ognl@isNotEmpty(OFFER_NO)">
           AND A.SO_SER_NO      = #{OFFER_NO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(OFFER_NO)">
           AND A.SO_SER_NO      = #{OFFER_NO}
         </if>
         <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
           AND B.EXPORTER       = #{CUSTOM_CODE}
         </if>
         ORDER BY A.SO_SER_NO, B.EXPORTER, B.DATE_DEPART
	</select>
	
</mapper>