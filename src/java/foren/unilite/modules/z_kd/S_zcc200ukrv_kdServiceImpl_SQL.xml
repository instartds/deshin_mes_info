<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc200ukrv_kdService">

    <select id="s_zcc200ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --s_zcc200ukrv_kdService.selectList
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @DIV_CODE       NVARCHAR(08)
                  , @EST_NUM        NVARCHAR(20)

            SET @COMP_CODE     = #{S_COMP_CODE}
            SET @DIV_CODE      = #{DIV_CODE}
            SET @EST_NUM       = #{EST_NUM}

            SELECT  A.COMP_CODE                                 AS COMP_CODE
                 ,  A.DIV_CODE                                  AS DIV_CODE
                 ,  A.EST_NUM                                   AS EST_NUM
                 ,  A.EST_DATE                                  AS EST_DATE
                 ,  A.CUSTOM_CODE                               AS CUSTOM_CODE
                 ,  D.CUSTOM_NAME                               AS CUSTOM_NAME
                 ,  A.CAR_TYPE                                  AS CAR_TYPE
                 ,  C.OEM_ITEM_CODE                             AS OEM_ITEM_CODE
                 ,  A.PROG_WORK_NAME                            AS PROG_WORK_NAME
                 ,  A.MONEY_UNIT                                AS MONEY_UNIT
                 ,  A.EXCHG_RATE_O                              AS EXCHG_RATE_O
                 ,  A.ITEM_CODE                                 AS ITEM_CODE
                 ,  A.ITEM_NAME                                 AS ITEM_NAME
                 ,  A.DEPT_CODE                                 AS DEPT_CODE
                 ,  A.PERSON_NUMB                               AS PERSON_NUMB
                 ,  E.NAME                                      AS NAME
                 ,  A.REMARK                                    AS REMARK_M
                 ,  B.EST_SEQ                                   AS EST_SEQ
                 ,  B.GUBUN                                     AS GUBUN
                 ,  B.GUBUN_CODE                                AS GUBUN_CODE
                 ,  B.JAEGIL                                    AS JAEGIL
                 ,  B.UNIT_Q                                    AS UNIT_Q
                 ,  B.STOCK_UNIT                                AS STOCK_UNIT
                 ,  B.QTY_HH                                    AS QTY_HH
                 ,  B.PRICE_RATE                                AS PRICE_RATE
                 ,  B.AMT_O                                     AS AMT_O
                 ,  B.REMARK                                    AS REMARK
                 ,  B.GARO_NUM                                  AS GARO_NUM
                 ,  B.SERO_NUM                                  AS SERO_NUM
                 ,  B.DUGE_NUM                                  AS DUGE_NUM
                 ,  CASE WHEN B.GUBUN = N'1'
                         THEN G.REF_CODE1
                         ELSE ''
                    END                                         AS REF_CODE1
            FROM               S_ZCC200T_KD AS A WITH (NOLOCK)
                    INNER JOIN S_ZCC210T_KD AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.DIV_CODE    = A.DIV_CODE
                                                              AND B.EST_NUM     = A.EST_NUM
                    LEFT  JOIN BPR100T      AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                              AND C.ITEM_CODE   = A.ITEM_CODE
                    INNER JOIN BCM100T      AS D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                              AND D.CUSTOM_CODE = A.CUSTOM_CODE
                    LEFT  JOIN HUM100T      AS E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                              AND E.PERSON_NUMB = A.PERSON_NUMB
                    LEFT  JOIN BSA100T      AS G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
                                                              AND G.MAIN_CODE   = N'WZ05'
                                                              AND G.SUB_CODE    = B.GUBUN_CODE
            WHERE   A.COMP_CODE = @COMP_CODE
            AND     A.DIV_CODE  = @DIV_CODE
            AND     A.EST_NUM   = @EST_NUM
            AND     B.GUBUN     = N'1'

        	ORDER BY G.SORT_SEQ
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_zcc200ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        --s_zcc200ukrv_kdService.selectDetail2
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @DIV_CODE       NVARCHAR(08)
                  , @EST_NUM        NVARCHAR(20)
        
            SET @COMP_CODE     = #{S_COMP_CODE}
            SET @DIV_CODE      = #{DIV_CODE}
            SET @EST_NUM       = #{EST_NUM}
        
            SELECT  A.COMP_CODE                                 AS COMP_CODE
                 ,  A.DIV_CODE                                  AS DIV_CODE
                 ,  A.EST_NUM                                   AS EST_NUM
                 ,  B.EST_SEQ                                   AS EST_SEQ
                 ,  B.GUBUN                                     AS GUBUN
                 ,  B.GUBUN_CODE                                AS GUBUN_CODE 
                 ,  B.JAEGIL                                    AS JAEGIL
                 ,  B.UNIT_Q                                    AS UNIT_Q 
                 ,  B.STOCK_UNIT                                AS STOCK_UNIT 
                 ,  B.QTY_HH                                    AS QTY_HH 
                 ,  B.PRICE_RATE                                AS PRICE_RATE 
                 ,  B.AMT_O                                     AS AMT_O
                 ,  B.REMARK                                    AS REMARK
                 ,  B.GARO_NUM                                  AS GARO_NUM
                 ,  B.SERO_NUM                                  AS SERO_NUM
                 ,  B.DUGE_NUM                                  AS DUGE_NUM
            FROM               S_ZCC200T_KD AS A WITH (NOLOCK)
                    INNER JOIN S_ZCC210T_KD AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.DIV_CODE    = A.DIV_CODE
                                                              AND B.EST_NUM     = A.EST_NUM
                    LEFT  JOIN BSA100T      AS G WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
                                                              AND G.MAIN_CODE   = N'WZ06'
                                                              AND G.SUB_CODE    = B.GUBUN_CODE
            WHERE   A.COMP_CODE = @COMP_CODE
            AND     A.DIV_CODE  = @DIV_CODE
            AND     A.EST_NUM   = @EST_NUM
            AND     B.GUBUN     = N'2'
        
        	ORDER BY G.SORT_SEQ
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_zcc200ukrv_kdService.selectEstNumList" parameterType="Map" resultType="rMap">
SELECT  
	A.COMP_CODE
	,A.DIV_CODE
	,A.EST_DATE		--견적일자
    ,A.EST_NUM		--견적번호
	,A.CUSTOM_CODE		--거래처코드
	,R1.CUSTOM_NAME		--거래처명
	,A.ITEM_CODE --품번
	,A.ITEM_NAME --품명
	,A. CAR_TYPE--차종
	,A.PROG_WORK_NAME --공정명
	,B.SUM_AMT_O + C.SUM_AMT_O AS CALC1--제조원가
	,((B.SUM_AMT_O + C.SUM_AMT_O) * 10)/100 +  (((B.SUM_AMT_O + C.SUM_AMT_O) + (((B.SUM_AMT_O + C.SUM_AMT_O) * 10)/100))* 8/100) AS CALC2	--관리/이윤
	,(B.SUM_AMT_O + C.SUM_AMT_O) + ((B.SUM_AMT_O + C.SUM_AMT_O) * 10)/100 +  (((B.SUM_AMT_O + C.SUM_AMT_O) + (((B.SUM_AMT_O + C.SUM_AMT_O) * 10)/100))* 8/100) AS CALC3	--총합계
	,A.REMARK--비고
	,A.DEPT_CODE
	,R2.TREE_NAME AS DEPT_NAME--부서명
	,A.PERSON_NUMB
    ,R3.NAME AS PERSON_NAME--담당자명
    
    ,ISNULL(A.T4_1,0) AS T4_1
    ,ISNULL(A.T6_1,0) AS T6_1
    
    FROM               S_ZCC200T_KD A WITH(NOLOCK)
	LEFT JOIN (
		SELECT 
			COMP_CODE
			, DIV_CODE
			, EST_NUM
			, SUM(AMT_O) AS SUM_AMT_O

			FROM S_ZCC210T_KD
			WHERE COMP_CODE = #{S_COMP_CODE}
				AND DIV_CODE = #{DIV_CODE}
				AND GUBUN = '1'

			GROUP BY COMP_CODE, DIV_CODE, EST_NUM
	) B ON B.COMP_CODE = A.COMP_CODE
		AND B.DIV_CODE = A.DIV_CODE
		AND B.EST_NUM = A.EST_NUM

	LEFT JOIN (
		SELECT 
			COMP_CODE
			, DIV_CODE
			, EST_NUM
			, SUM(AMT_O) AS SUM_AMT_O

			FROM S_ZCC210T_KD
			WHERE COMP_CODE = #{S_COMP_CODE}
				AND DIV_CODE = #{DIV_CODE}
				AND GUBUN = '2'

			GROUP BY COMP_CODE, DIV_CODE, EST_NUM
	) C ON C.COMP_CODE = A.COMP_CODE
		AND C.DIV_CODE = A.DIV_CODE
		AND C.EST_NUM = A.EST_NUM


			LEFT JOIN BCM100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												AND R1.CUSTOM_CODE = A.CUSTOM_CODE
			LEFT JOIN BSA210T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
                                                AND R2.TREE_CODE = A.DEPT_CODE
			LEFT JOIN HUM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
                                                AND R3.PERSON_NUMB = A.PERSON_NUMB                                                   
            WHERE   A.COMP_CODE        = #{S_COMP_CODE}
            AND     A.DIV_CODE         = #{DIV_CODE}
            AND     A.EST_DATE        &gt;= #{FR_EST_DATE}
            AND     A.EST_DATE        &lt;= #{TO_EST_DATE}
            AND ISNULL(A.GW_FLAG,'0') != '1' 
            AND ISNULL(A.GW_FLAG,'0') != '3' 
            <if test="@foren.Ognl@isNotEmpty(EST_NUM)">
            AND A.EST_NUM LIKE #{EST_NUM} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(REMARK)">
            AND A.REMARK LIKE #{REMARK} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND A.CUSTOM_CODE = #{CUSTOM_CODE}
            </if>
    </select>

    <select id="s_zcc200ukrv_kdService.createList1" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(10)
                  , @DIV_CODE       NVARCHAR(10)

            SET @COMP_CODE = #{S_COMP_CODE}
            SET @DIV_CODE  = #{DIV_CODE}

            SELECT  @DIV_CODE AS DIV_CODE
                 ,  A.SUB_CODE AS GUBUN_CODE
                 ,  '1' AS GUBUN
                 ,  A.REF_CODE1
				 , A.STOCK_UNIT
				 ,ROW_NUMBER() OVER(ORDER BY A.SORT_SEQ) AS SEQ
            FROM    (
                    SELECT  SUB_CODE
                         ,  CODE_NAME
                         ,  SORT_SEQ
                         ,  ISNULL(REF_CODE1, 'N') AS REF_CODE1
						 , CASE WHEN SUB_CODE = '01' OR SUB_CODE = '02' OR SUB_CODE = '03' OR SUB_CODE = '04' OR SUB_CODE = '05' 
						          OR SUB_CODE = '06' OR SUB_CODE = '07' OR SUB_CODE = '08' OR SUB_CODE = '09' OR SUB_CODE = '10'
								  OR SUB_CODE = '11' OR SUB_CODE = '12' THEN 'KG'
								WHEN SUB_CODE = '18' THEN 'HT'
						   END AS STOCK_UNIT
                    FROM    BSA100T WITH (NOLOCK)
                    WHERE   COMP_CODE = @COMP_CODE
                    AND     MAIN_CODE = N'WZ05'
                    AND     SUB_CODE != '$'

                    ) A

            ORDER BY ROW_NUMBER() OVER(ORDER BY A.SORT_SEQ)

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_zcc200ukrv_kdService.createList2" parameterType="Map" resultType="rMap">
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(10)
                  , @DIV_CODE       NVARCHAR(10)

            SET @COMP_CODE = #{S_COMP_CODE}
            SET @DIV_CODE  = #{DIV_CODE}

            SELECT  @DIV_CODE AS DIV_CODE
                 ,  SUB_CODE AS GUBUN_CODE
                 ,  '2' AS GUBUN
                 ,  ROW_NUMBER() OVER(ORDER BY COMP_CODE, SUB_CODE) AS EST_SEQ
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     MAIN_CODE = N'WZ06'
            AND     SUB_CODE != '$'

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_zcc200ukrv_kdService.existsYN" parameterType="Map" resultType="rMap">
        --s_zcc200ukrv_kdService.existsYN
        IF  EXISTS (SELECT  TOP 1 1
                    FROM    S_ZCC200T_KD
                    WHERE   COMP_CODE   = #{S_COMP_CODE}
                    AND     DIV_CODE    = #{DIV_CODE}
                    AND     EST_NUM     = #{EST_NUM})
        BEGIN
            SELECT  'Y' AS EXISTS_YN
        END
        ELSE
        BEGIN
            SELECT  'N' AS EXISTS_YN
        END
    </select>

    <select id="s_zcc200ukrv_kdService.calcYN" parameterType="Map" resultType="rMap">
        --s_zcc200ukrv_kdService.calcYN
        SELECT  ISNULL(REF_CODE1, 'N') AS REF_CODE1
        FROM    BSA100T WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     MAIN_CODE = 'WZ05'
        AND     SUB_CODE  = #{SUB_CODE}
    </select>

    <select id="s_zcc200ukrv_kdService.selectMasterCheck" parameterType="Map" resultType="rMap">
        --s_zcc200ukrv_kdService.selectMasterCheck
        SELECT  EST_NUM
        FROM    S_ZCC200T_KD WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     DIV_CODE  = #{DIV_CODE}
        AND     EST_NUM   = #{EST_NUM}
    </select>

    <update id="s_zcc200ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <insert id="s_zcc200ukrv_kdService.insertMaster" parameterType="Map">
        --s_zcc200ukrv_kdService.insertMaster
        INSERT  INTO S_ZCC200T_KD
        (
            COMP_CODE
        ,   DIV_CODE
        ,   EST_NUM
        ,   EST_DATE
        ,   CUSTOM_CODE
        ,   ITEM_CODE
        ,   ITEM_NAME
        ,   PROG_WORK_NAME
        ,   MONEY_UNIT
        ,   EXCHG_RATE_O
        ,   DEPT_CODE
        ,   PERSON_NUMB
        ,   REMARK
        ,   CAR_TYPE
        ,   MATRL_COST
        ,   PROCESS_COST
        ,   PROFIT_RATE
        ,   MNGM_COST
        , T4_1
        , T6_1
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (
            #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{EST_NUM}
        ,   #{EST_DATE}
        ,   #{CUSTOM_CODE}
        ,   #{ITEM_CODE}
        ,   #{ITEM_NAME}
        ,   #{PROG_WORK_NAME}
        ,   #{MONEY_UNIT}
        ,   #{EXCHG_RATE_O}
        ,   #{TREE_CODE}
        ,   #{PERSON_NUMB}
        ,   #{REMARK_M}
        ,   #{CAR_TYPE}
        ,   #{MATRL_COST}
        ,   #{PROCESS_COST}
        ,   #{PROFIT_RATE}
        ,   #{MNGM_COST}
        , #{T4_1}
        , #{T6_1}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
    </insert>

    <select id="s_zcc200ukrv_kdService.selectMaxSeq" parameterType="Map" resultType="int">
        --s_zcc200ukrv_kdService.selectMaxSeq
        SELECT  ISNULL(MAX(EST_SEQ), 0) AS EST_SEQ
        FROM    S_ZCC200T_KD WITH (NOLOCK)
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     EST_NUM   = #{EST_NUM}
    </select>

    <insert id="s_zcc200ukrv_kdService.insertDetail" parameterType="Map">
        --s_zcc200ukrv_kdService.insertDetail
        INSERT  INTO S_ZCC210T_KD
        (
            COMP_CODE
        ,   DIV_CODE
        ,   EST_NUM
        ,   EST_SEQ
        ,   GUBUN
        ,   GUBUN_CODE
        ,   JAEGIL
        ,   UNIT_Q
        ,   STOCK_UNIT
        ,   QTY_HH
        ,   PRICE_RATE
        ,   AMT_O
        ,   REMARK
        ,   GARO_NUM
        ,   SERO_NUM
        ,   DUGE_NUM
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (
            #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{EST_NUM}
        ,   #{EST_SEQ}
        ,   #{GUBUN}
        ,   #{GUBUN_CODE}
        ,   #{JAEGIL}
        ,   #{UNIT_Q}
        ,   #{STOCK_UNIT}
        ,   #{QTY_HH}
        ,   #{PRICE_RATE}
        ,   #{AMT_O}
        ,   #{REMARK}
        ,   #{GARO_NUM}
        ,   #{SERO_NUM}
        ,   #{DUGE_NUM}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
    </insert>

    <update id="s_zcc200ukrv_kdService.updateMaster" parameterType="Map">
        --s_zcc200ukrv_kdService.updateMaster
        UPDATE  S_ZCC200T_KD
        SET     EST_DATE        = #{EST_DATE}
          ,     CUSTOM_CODE     = #{CUSTOM_CODE}
          ,     ITEM_CODE       = #{ITEM_CODE}
          ,     ITEM_NAME		= #{ITEM_NAME}
          ,     PROG_WORK_NAME  = #{PROG_WORK_NAME}
          ,     MONEY_UNIT      = #{MONEY_UNIT}
          ,     EXCHG_RATE_O    = #{EXCHG_RATE_O}
          ,     DEPT_CODE       = #{TREE_CODE}
          ,     PERSON_NUMB     = #{PERSON_NUMB}
          ,     REMARK          = #{REMARK_M}
          ,     CAR_TYPE		= #{CAR_TYPE}
          ,     MATRL_COST		= #{MATRL_COST}
          ,     PROCESS_COST	= #{PROCESS_COST}
          ,     PROFIT_RATE		= #{PROFIT_RATE}
          ,     MNGM_COST		= #{MNGM_COST}
          
          , T4_1 = #{T4_1}
          , T6_1 = #{T6_1}
          
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE = #{S_COMP_CODE}
        AND     DIV_CODE  = #{DIV_CODE}
        AND     EST_NUM   = #{EST_NUM}
    </update>

    <update id="s_zcc200ukrv_kdService.updateDetail" parameterType="Map">
        --s_zcc200ukrv_kdService.updateDetail
        UPDATE  S_ZCC210T_KD
        SET     GUBUN_CODE      = #{GUBUN_CODE}
          ,     JAEGIL          = #{JAEGIL}
          ,     UNIT_Q          = #{UNIT_Q}
          ,     STOCK_UNIT      = #{STOCK_UNIT}
          ,     QTY_HH          = #{QTY_HH}
          ,     PRICE_RATE      = #{PRICE_RATE}
          ,     AMT_O           = #{AMT_O}
          ,     REMARK          = #{REMARK}
          ,     GARO_NUM        = #{GARO_NUM}
          ,     SERO_NUM        = #{SERO_NUM}
          ,     DUGE_NUM        = #{DUGE_NUM}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     EST_NUM     = #{EST_NUM}
        AND     EST_SEQ     = #{EST_SEQ}
        AND     GUBUN       = #{GUBUN}
    </update>

    <select id="s_zcc200ukrv_kdService.beforeDeleteCheck" parameterType="Map" resultType="String">
        --s_zcc200ukrv_kdService.beforeDeleteCheck
        SELECT  TOP 1 EST_NUM
        FROM    S_ZCC210T_KD WITH (NOLOCK)
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     EST_NUM     = #{EST_NUM}
    </select>

    <delete id="s_zcc200ukrv_kdService.deleteMaster" parameterType="Map">
        --s_zcc200ukrv_kdService.deleteMaster
        DELETE  FROM S_ZCC200T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     EST_NUM     = #{EST_NUM}
    </delete>

    <delete id="s_zcc200ukrv_kdService.deleteDetail" parameterType="Map">
        --s_zcc200ukrv_kdService.deleteDetail
        DELETE  FROM S_ZCC210T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     EST_NUM     = #{EST_NUM}
        AND     EST_SEQ     = #{EST_SEQ}
        AND     GUBUN       = #{GUBUN}
    </delete>

    <delete id="s_zcc200ukrv_kdService.deleteDetail_t" parameterType="Map">
        --s_zcc200ukrv_kdService.deleteDetail
        DELETE  FROM S_ZCC210T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     EST_NUM     = #{EST_NUM}
    </delete>
	<select id="s_zcc200ukrv_kdService.selectResetList1" parameterType="Map" resultType="rMap">
        SELECT #{S_COMP_CODE}                      	AS COMP_CODE
             , ''                                  	AS DIV_CODE
             , ''                                  	AS EST_NUM
             , ''                                  	AS EST_DATE
             , ''                             		AS CUSTOM_CODE
             , ''                               	AS CUSTOM_NAME
             , ''                                 	AS CAR_TYPE
             , ''                            		AS OEM_ITEM_CODE
             , ''                            		AS PROG_WORK_NAME
             , ''                                	AS MONEY_UNIT
             , 0                             		AS EXCHG_RATE_O
             , ''                                 	AS ITEM_CODE
             , ''                                 	AS ITEM_NAME
             , ''                                 	AS DEPT_CODE
             , ''                              		AS PERSON_NUMB
             , ''                                   AS NAME
             , ''                                   AS REMARK_M
             , 0                                   	AS EST_SEQ
             , '1'                                  AS GUBUN
             , SUB_CODE                             AS GUBUN_CODE
             , ''                                   AS JAEGIL
             , 0                                 	AS UNIT_Q
             , ''                                	AS STOCK_UNIT
             , 0                                    AS QTY_HH
             , 0                                	AS PRICE_RATE
             , 0                                    AS AMT_O
             , ''                                   AS REMARK
             , ''                                  	AS GARO_NUM
             , ''                                  	AS SERO_NUM
             , ''                                 	AS DUGE_NUM
             , ISNULL(REF_CODE1, 'N')				AS REF_CODE1
		FROM BSA100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND   MAIN_CODE = 'WZ05'
		AND   SUB_CODE != '$'
		ORDER BY SORT_SEQ
    </select>

	<select id="s_zcc200ukrv_kdService.selectResetList2" parameterType="Map" resultType="rMap">

		SELECT #{S_COMP_CODE}                    AS COMP_CODE
             ,  ''                               AS DIV_CODE
             ,  ''                               AS EST_NUM
             ,  ''                               AS EST_DATE
             ,  ''                               AS CUSTOM_CODE
             ,  ''                               AS CUSTOM_NAME
             ,  ''                               AS CAR_TYPE
             ,  ''                            	 AS OEM_ITEM_CODE
             ,  ''                            	 AS PROG_WORK_NAME
             ,  ''                               AS MONEY_UNIT
             ,  0                                AS EXCHG_RATE_O
             ,  ''                               AS ITEM_CODE
             ,  ''                               AS ITEM_NAME
             ,  ''                               AS DEPT_CODE
             ,  ''                               AS PERSON_NUMB
             ,  ''                               AS NAME
             ,  ''                               AS REMARK_M
             ,  ''                               AS EST_SEQ
             ,  '2'                              AS GUBUN
             ,  SUB_CODE                         AS GUBUN_CODE
             ,  ''                               AS JAEGIL
             ,  0                                AS UNIT_Q
             ,  ''                               AS STOCK_UNIT
             ,  0                                AS QTY_HH
             ,  0                                AS PRICE_RATE
             ,  0                                AS AMT_O
             ,  ''                               AS REMARK
             ,  0                                AS GARO_NUM
             ,  0                                AS SERO_NUM
             ,  0                                AS DUGE_NUM
             ,  ''                               AS REF_CODE1
		FROM BSA100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		AND   MAIN_CODE = 'WZ06'
		AND   SUB_CODE != '$'
		ORDER BY SORT_SEQ
    </select>

</mapper>