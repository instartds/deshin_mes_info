<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pda010rkrv_kdService">

	<select id="s_pda010rkrv_kdService.selectList1" parameterType="Map" resultType="rMap">
        -- 로케이션조회
        SELECT A.COMP_CODE    AS COMP_CODE
             , A.TYPE_LEVEL   AS DIV_CODE
             , A.TREE_CODE    AS WH_CODE
             , A.TREE_NAME    AS WH_NAME
             , B.WH_CELL_CODE AS WH_CELL_CODE
             , B.WH_CELL_NAME AS WH_CELL_NAME
             , A.CUSTOM_CODE  AS CUSTOM_CODE
             , C.CUSTOM_NAME  AS CUSTOM_NAME
             , 1              AS PRINT_CNT
          FROM BSA220T A WITH(NOLOCK)
               LEFT JOIN BSA225T B WITH(NOLOCK)
                      ON A.COMP_CODE   = B.COMP_CODE
                     AND A.TYPE_LEVEL  = B.DIV_CODE
                     AND A.TREE_CODE   = B.WH_CODE
               LEFT JOIN BCM100T C WITH(NOLOCK)
                      ON A.COMP_CODE   = C.COMP_CODE
                     AND A.CUSTOM_CODE = C.CUSTOM_CODE
         WHERE A.USE_YN      = 'Y'
           AND A.COMP_CODE   = #{S_COMP_CODE}
           AND A.TYPE_LEVEL  = #{DIV_CODE}
           AND A.TREE_CODE   = #{WH_CODE}
           AND (B.WH_CELL_CODE LIKE #{TXT_SEARCH} + '%' OR
                B.WH_CELL_NAME LIKE '%' + #{TXT_SEARCH} + '%' )
	</select>

    <select id="s_pda010rkrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        --금형조회
        SELECT A.COMP_CODE       AS COMP_CODE
             , A.DIV_CODE        AS DIV_CODE
             , A.MOLD_TYPE       AS MOLD_TYPE
             , A.MOLD_CODE       AS MOLD_CODE
             , A.MOLD_NAME       AS MOLD_NAME
             , A.ITEM_CODE       AS ITEM_CODE
             , B.SPEC   	 AS OEM_ITEM_CODE
--             , B.CAR_TYPE        AS CAR_TYPE
             , C.CODE_NAME        AS CAR_TYPE
             , C.CODE_NAME       AS CAR_NAME
             , A.ST_LOCATION     AS ST_LOCATION    --위치상태: 현장/수리중/폐기
             , D.CODE_NAME       AS ST_LOCATION_NM --위치상태
             , A.MAX_DEPR        AS MAX_DEPR    --최대상각
             , A.CHK_DEPR        AS CHK_DEPR    --점검상각
             , A.NOW_DEPR        AS NOW_DEPR    --현상각수
             , 1                 AS PRINT_CNT   --출력수
             , E.PROG_WORK_NAME  AS PROG_WORK_NAME --공정명
             , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_MAKE)       AS DATE_MAKE   --제작일자
             , A.MOLD_MTL         AS MOL_MTL     --소재
             , A.MOLD_SPEC        AS MOL_SPEC    --규격
             , UNILITE.fnGetUserDateComp(A.COMP_CODE, A.DATE_INST)       AS DATE_INST   --설치일자
          FROM S_MOM100T_KD A WITH(NOLOCK)
               LEFT JOIN BPR100T B WITH(NOLOCK)
                      ON A.COMP_CODE=B.COMP_CODE
                     AND LEFT(A.MOLD_CODE,9) = B.ITEM_CODE
               LEFT JOIN BSA100T C WITH(NOLOCK)
                     ON A.COMP_CODE = C.COMP_CODE
                    AND C.MAIN_CODE = 'WB04'     --차종
                    AND ISNULL(B.CAR_TYPE,'') = C.SUB_CODE
               LEFT JOIN BSA100T D WITH(NOLOCK)
                     ON A.COMP_CODE = D.COMP_CODE
                    AND D.MAIN_CODE = 'WB09'     --위치상태
                    AND ISNULL(A.ST_LOCATION,'') = D.SUB_CODE
/*
              LEFT JOIN (SELECT DISTINCT X.PROG_WORK_CODE
                             , (SELECT TOP 1 PROG_WORK_NAME FROM PBS200T Y WHERE Y.COMP_CODE=X.COMP_CODE AND Y.DIV_CODE=Y.DIV_CODE AND Y.PROG_WORK_CODE = X.PROG_WORK_CODE ) AS PROG_WORK_NAME
                          FROM PBS200T X WITH(NOLOCK) ) E
                     ON E.PROG_WORK_CODE = SUBSTRING(A.MOLD_CODE, 10, 13)
*/
/* 20180307 오류 수정 */
				LEFT JOIN (
							SELECT COMP_CODE, DIV_CODE, PROG_WORK_CODE, PROG_WORK_NAME
							FROM PBS200T WITH (NOLOCK)
							GROUP BY COMP_CODE, DIV_CODE, PROG_WORK_CODE, PROG_WORK_NAME
				) E ON E.COMP_CODE=A.COMP_CODE AND E.DIV_CODE=A.DIV_CODE AND E.PROG_WORK_CODE = A.PROG_WORK_CODE	--SUBSTRING(A.MOLD_CODE, 10, 13)

           WHERE A.COMP_CODE      = #{S_COMP_CODE}
           AND A.DIV_CODE       = #{DIV_CODE}
           AND A.DATE_INST      &gt;= #{INSTALL_DATE_FR}
           AND A.DATE_INST      &lt;= #{INSTALL_DATE_TO}
           AND A.MOLD_TYPE      = #{MOLD_TYPE}
        <if test="@foren.Ognl@isNotEmpty(MOLD_CODE)">
           AND A.MOLD_CODE      LIKE #{MOLD_CODE} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(MOLD_NAME)">
           AND A.MOLD_NAME      LIKE #{MOLD_NAME} + '%'
        </if>
        <if test="@foren.Ognl@isEmpty(DATE_DISP)">
           AND ISNULL(A.DATE_DISP,'') = ''
        </if>
    </select>

    <select id="s_pda010rkrv_kdService.selectList3" parameterType="Map" resultType="rMap">
        --품목LOT바코드조회
        SELECT A.COMP_CODE      AS COMP_CODE       --법인
             , A.DIV_CODE       AS DIV_CODE        --사업장
             , A.WH_CODE        AS WH_CODE         --창고
             , A.ITEM_CODE      AS ITEM_CODE       --품목
             , B.ITEM_NAME      AS ITEM_NAME       --품목명
             , B.SPEC           AS SPEC            --규격
             , CASE WHEN ISNULL(B.OEM_ITEM_CODE,'')='' THEN B.SPEC ELSE B.OEM_ITEM_CODE END  AS OEM_ITEM_CODE   --품번
             , A.LOT_NO         AS LOT_NO          --LOT_NO
             , B.STOCK_UNIT     AS STOCK_UNIT      --재고단위
             , 0.0000           AS QTY             --수량(임의입력-소수점4자리표현)
             , 1                AS PRINT_CNT       --출력수(임의입력)
             <if test="STATUS == &quot;1&quot;">
             , #{STATUS}
             </if>
             <if test="STATUS == &quot;2&quot;">
             , #{STATUS}
             </if>
          FROM BTR100T A WITH(NOLOCK)
               INNER JOIN BPR100T B WITH(NOLOCK)
                       ON B.COMP_CODE = A.COMP_CODE
                      AND B.ITEM_CODE = A.ITEM_CODE
               INNER JOIN BPR200T C WITH(NOLOCK)
                       ON C.COMP_CODE = B.COMP_CODE
                      AND C.ITEM_CODE = B.ITEM_CODE
         WHERE
          EXISTS (SELECT B.COMP_CODE, B.DIV_CODE, B.WH_CODE, B.STOCK_Q
                    FROM BIV100T B
                   WHERE B.STOCK_Q &gt; 0
                     AND B.COMP_CODE = A.COMP_CODE AND B.DIV_CODE = A.DIV_CODE AND B.WH_CODE= A.WH_CODE AND B.ITEM_CODE = A.ITEM_CODE)
          AND EXISTS (SELECT C.COMP_CODE, C.DIV_CODE, C.WH_CODE, C.ITEM_CODE, C.LOT_NO, C.STOCK_Q
                        FROM BIV150T C
                       WHERE C.SUM_TYPE = 'C'
                         AND C.STOCK_Q &gt; 0
                         AND C.COMP_CODE = A.COMP_CODE AND C.DIV_CODE = A.DIV_CODE AND C.WH_CODE=A.WH_CODE AND C.ITEM_CODE = A.ITEM_CODE AND C.LOT_NO = A.LOT_NO)

          AND A.COMP_CODE      = #{S_COMP_CODE}
          AND A.DIV_CODE       = #{DIV_CODE}
          AND A.WH_CODE        = #{WH_CODE}
          AND C.ITEM_ACCOUNT   = #{ITEM_ACCOUNT}
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
          AND A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
          AND A.LOT_NO         LIKE #{LOT_NO} + '%'
        </if>
        GROUP BY A.COMP_CODE
             , A.DIV_CODE
             , A.WH_CODE
             , A.ITEM_CODE
             , A.LOT_NO
             , B.STOCK_UNIT
             , B.ITEM_NAME
             , B.SPEC
             , B.OEM_ITEM_CODE

UNION
SELECT A.COMP_CODE, A.DIV_CODE, '' WH_CODE, A.ITEM_CODE, B.ITEM_NAME, B.SPEC
  , CASE WHEN ISNULL(B.OEM_ITEM_CODE,'')='' THEN B.SPEC ELSE B.OEM_ITEM_CODE END  AS OEM_ITEM_CODE   --품번
  , A.LOT_NO, B.STOCK_UNIT
		, 0.0000 AS QTY, 1 AS PRINT_CNT
             <if test="STATUS == &quot;1&quot;">
             , #{STATUS}
             </if>
             <if test="STATUS == &quot;2&quot;">
             , #{STATUS}
             </if>
FROM PMP100T A
	 INNER JOIN BPR100T B ON A.COMP_CODE=B.COMP_CODE AND A.ITEM_CODE=B.ITEM_CODE
	 INNER JOIN BPR200T C ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.ITEM_CODE=C.ITEM_CODE
WHERE A.COMP_CODE=#{S_COMP_CODE}
AND C.ITEM_ACCOUNT=#{ITEM_ACCOUNT}
        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
          AND B.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
          AND A.LOT_NO         LIKE #{LOT_NO} + '%'
        </if>
GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE, B.ITEM_NAME, B.SPEC, B.OEM_ITEM_CODE, A.LOT_NO, B.STOCK_UNIT

    </select>
</mapper>